1
00:00:10,580 --> 00:00:13,280
pretty loud

2
00:00:13,280 --> 00:00:17,000
I feel for everything

3
00:00:18,740 --> 00:00:21,919
realizes that

4
00:00:23,180 --> 00:00:26,180
is

5
00:00:26,359 --> 00:00:30,240
ready to go yeah should we start

6
00:00:30,240 --> 00:00:33,780
good morning everyone this is 9 30 first

7
00:00:33,780 --> 00:00:37,559
session on Thursday and the first formal

8
00:00:37,559 --> 00:00:40,379
work group meeting for snack snack

9
00:00:40,379 --> 00:00:42,120
stands for stub Network out of

10
00:00:42,120 --> 00:00:46,500
configuration for IPv6

11
00:00:46,620 --> 00:00:47,700
thank you

12
00:00:47,700 --> 00:00:51,020
very closely

13
00:00:52,399 --> 00:00:54,360
is it better

14
00:00:54,360 --> 00:00:56,340
oh yeah it sounds good

15
00:00:56,340 --> 00:00:59,460
uh good morning again to first snack

16
00:00:59,460 --> 00:01:02,239
work group meeting

17
00:01:05,580 --> 00:01:09,119
by now you are familiar with the ITF

18
00:01:09,119 --> 00:01:11,840
policies especially pay attention to

19
00:01:11,840 --> 00:01:14,760
understanding IPR and code of conduct

20
00:01:14,760 --> 00:01:17,299
guidelines

21
00:01:17,840 --> 00:01:20,640
you are required to wear masks all the

22
00:01:20,640 --> 00:01:22,560
time that's a good sign everybody is

23
00:01:22,560 --> 00:01:26,299
wearing masks and

24
00:01:28,500 --> 00:01:31,320
and you're familiar with meat Echo as

25
00:01:31,320 --> 00:01:34,220
soon as it comes back

26
00:01:48,540 --> 00:01:51,540
foreign

27
00:02:20,040 --> 00:02:22,879
foreign

28
00:02:38,400 --> 00:02:41,480
yeah it's stuck

29
00:02:42,920 --> 00:02:46,819
USB connector for

30
00:02:46,920 --> 00:02:51,799
uh for internet of Internet

31
00:03:01,319 --> 00:03:06,360
okay you ready okay let me uh I'm still

32
00:03:06,360 --> 00:03:09,500
struggling with the idea

33
00:03:14,340 --> 00:03:17,280
yeah so we were on

34
00:03:17,280 --> 00:03:17,940
um

35
00:03:17,940 --> 00:03:20,940
meet Echo usability slide you guys are

36
00:03:20,940 --> 00:03:22,739
familiar with it please make sure you

37
00:03:22,739 --> 00:03:23,580
are

38
00:03:23,580 --> 00:03:26,340
uh in the queue before you come to the

39
00:03:26,340 --> 00:03:29,700
mic and also this is a signing tool for

40
00:03:29,700 --> 00:03:32,519
blue sheets so definitely sign in next

41
00:03:32,519 --> 00:03:34,620
slide please

42
00:03:34,620 --> 00:03:37,800
here's our agenda this set of slides

43
00:03:37,800 --> 00:03:39,480
followed by

44
00:03:39,480 --> 00:03:41,940
um first presentation from Ted on stud

45
00:03:41,940 --> 00:03:43,140
Networks

46
00:03:43,140 --> 00:03:45,599
second one uh Pascal's prefix

47
00:03:45,599 --> 00:03:48,900
registration and we will have plenty of

48
00:03:48,900 --> 00:03:52,379
time to talk about next steps and these

49
00:03:52,379 --> 00:03:55,799
two documents so I encourage we will do

50
00:03:55,799 --> 00:03:57,540
most of the questions related to the

51
00:03:57,540 --> 00:03:59,819
document as the presentations go along

52
00:03:59,819 --> 00:04:01,680
and

53
00:04:01,680 --> 00:04:03,720
then any general question for the work

54
00:04:03,720 --> 00:04:07,260
group we can delay it to later on that's

55
00:04:07,260 --> 00:04:08,879
next slide

56
00:04:08,879 --> 00:04:12,060
so this is the first snack meeting for

57
00:04:12,060 --> 00:04:13,980
those who haven't followed the progress

58
00:04:13,980 --> 00:04:17,279
from uh buff to today's meeting and on

59
00:04:17,279 --> 00:04:18,660
mailing list

60
00:04:18,660 --> 00:04:20,820
uh this work group will work on

61
00:04:20,820 --> 00:04:22,320
connecting sub networks to

62
00:04:22,320 --> 00:04:24,720
infrastructure networks focusing on the

63
00:04:24,720 --> 00:04:26,400
mechanisms for addressability

64
00:04:26,400 --> 00:04:29,280
discoverability and reachability

65
00:04:29,280 --> 00:04:34,320
we have GitHub already as uh setup where

66
00:04:34,320 --> 00:04:37,199
you can do issue tracking but we intend

67
00:04:37,199 --> 00:04:39,360
to use mailing lists for most of the

68
00:04:39,360 --> 00:04:40,860
discussions

69
00:04:40,860 --> 00:04:43,979
we have two milestones in mind focusing

70
00:04:43,979 --> 00:04:47,100
on the basic functionality of stub

71
00:04:47,100 --> 00:04:49,380
network connectivity and then we will

72
00:04:49,380 --> 00:04:52,560
look into some extended services

73
00:04:52,560 --> 00:04:57,080
so touch you're ready to go next

74
00:05:05,820 --> 00:05:07,560
foreign

75
00:05:07,560 --> 00:05:10,800
okay uh first of all thank you to our ad

76
00:05:10,800 --> 00:05:12,419
and to the chairs for making this happen

77
00:05:12,419 --> 00:05:15,000
this has been a long time coming uh you

78
00:05:15,000 --> 00:05:17,479
cannot hear

79
00:05:18,000 --> 00:05:21,780
oh that's a shame

80
00:05:21,780 --> 00:05:23,699
that's that usually works poorly because

81
00:05:23,699 --> 00:05:25,500
I tend to wave my hand around and then

82
00:05:25,500 --> 00:05:27,240
you can't hear me so let's not do that

83
00:05:27,240 --> 00:05:29,759
okay so um

84
00:05:29,759 --> 00:05:31,620
we've you know we've had a number of

85
00:05:31,620 --> 00:05:32,820
discussions about forming the working

86
00:05:32,820 --> 00:05:33,780
group

87
00:05:33,780 --> 00:05:36,900
um and that was based on you know some

88
00:05:36,900 --> 00:05:39,240
ideas that already existed so I've had a

89
00:05:39,240 --> 00:05:41,340
document that's been lying around uh

90
00:05:41,340 --> 00:05:43,380
I've been trying to uh

91
00:05:43,380 --> 00:05:45,240
to figure out how to publish it for a

92
00:05:45,240 --> 00:05:47,220
while and so that's that served as the

93
00:05:47,220 --> 00:05:50,220
starting point for uh what I hope will

94
00:05:50,220 --> 00:05:51,479
be the first document that the working

95
00:05:51,479 --> 00:05:55,580
group adopt next slide

96
00:05:55,680 --> 00:05:58,860
so uh this document the goal is just the

97
00:05:58,860 --> 00:06:00,780
basic stub Network functionality we have

98
00:06:00,780 --> 00:06:03,060
two main items in our Charter one of

99
00:06:03,060 --> 00:06:05,880
them is basic functionality so we're not

100
00:06:05,880 --> 00:06:07,860
depending on infrastructure support

101
00:06:07,860 --> 00:06:10,020
um we're not requiring changes to hosts

102
00:06:10,020 --> 00:06:12,060
on infrastructure

103
00:06:12,060 --> 00:06:14,160
um and then depending on the target type

104
00:06:14,160 --> 00:06:16,199
of stub Network we may require changes

105
00:06:16,199 --> 00:06:18,000
on the stub Network

106
00:06:18,000 --> 00:06:19,380
um

107
00:06:19,380 --> 00:06:22,500
and uh so and the goals for the document

108
00:06:22,500 --> 00:06:24,780
are to explain how hosts on

109
00:06:24,780 --> 00:06:26,280
infrastructure and stuff can discover

110
00:06:26,280 --> 00:06:27,660
each other

111
00:06:27,660 --> 00:06:28,800
um and how they can initiate

112
00:06:28,800 --> 00:06:31,259
communication with each other and also

113
00:06:31,259 --> 00:06:33,300
how uh hosts on the stub Network can

114
00:06:33,300 --> 00:06:34,860
initiate communication with hosts on the

115
00:06:34,860 --> 00:06:37,440
internet uh we don't particularly

116
00:06:37,440 --> 00:06:39,300
certainly in the in the initial document

117
00:06:39,300 --> 00:06:41,639
we're not too concerned about allowing

118
00:06:41,639 --> 00:06:43,199
internet hosts to establish

119
00:06:43,199 --> 00:06:45,720
Communications with stub Network hosts

120
00:06:45,720 --> 00:06:48,560
next slide

121
00:06:48,900 --> 00:06:50,580
so the original document was actually

122
00:06:50,580 --> 00:06:53,100
basically just the whole thing and that

123
00:06:53,100 --> 00:06:54,539
meant that it had both the basic use

124
00:06:54,539 --> 00:06:56,699
case and the sort of integrated with

125
00:06:56,699 --> 00:06:58,199
infrastructure use case but it didn't

126
00:06:58,199 --> 00:06:59,340
actually have a lot of detail about

127
00:06:59,340 --> 00:07:01,860
integrating with infrastructure so what

128
00:07:01,860 --> 00:07:03,240
it had was

129
00:07:03,240 --> 00:07:05,039
um you know how we maintain a usable

130
00:07:05,039 --> 00:07:07,319
IPv6 prefix on adjacent infrastructure

131
00:07:07,319 --> 00:07:10,620
and the idea there is that uh the

132
00:07:10,620 --> 00:07:12,000
adjacent infrastructure link may not

133
00:07:12,000 --> 00:07:14,180
actually support IPv6

134
00:07:14,180 --> 00:07:16,440
and in order to accomplish what we need

135
00:07:16,440 --> 00:07:18,479
to do without doing bridging or network

136
00:07:18,479 --> 00:07:21,120
uh address translation we kind of need

137
00:07:21,120 --> 00:07:22,860
to use IPv6 so if the adjacent

138
00:07:22,860 --> 00:07:24,960
infrastructure doesn't have a prefix we

139
00:07:24,960 --> 00:07:26,759
have to provide it

140
00:07:26,759 --> 00:07:27,900
um

141
00:07:27,900 --> 00:07:30,120
and so there's there's actually in the

142
00:07:30,120 --> 00:07:31,319
original document it just basically

143
00:07:31,319 --> 00:07:33,300
described how that was done it didn't

144
00:07:33,300 --> 00:07:34,560
give a state machine or anything like

145
00:07:34,560 --> 00:07:35,520
that

146
00:07:35,520 --> 00:07:36,120
um

147
00:07:36,120 --> 00:07:38,160
it described how to do SRP registration

148
00:07:38,160 --> 00:07:39,960
for the stub Network the Assumption was

149
00:07:39,960 --> 00:07:43,199
for Native 2.15.4 network uh we really

150
00:07:43,199 --> 00:07:45,180
don't want to use multicast and that

151
00:07:45,180 --> 00:07:46,380
actually works well with the stub

152
00:07:46,380 --> 00:07:48,479
Network model because we don't want to

153
00:07:48,479 --> 00:07:50,340
bridge multicast either

154
00:07:50,340 --> 00:07:53,460
um and so so using Service registration

155
00:07:53,460 --> 00:07:56,580
protocol which is a dnssd document

156
00:07:56,580 --> 00:07:59,039
um gives us the functionality that we

157
00:07:59,039 --> 00:08:01,440
need without requiring multicast

158
00:08:01,440 --> 00:08:03,660
um it talked about using the original

159
00:08:03,660 --> 00:08:04,800
document talked about using the

160
00:08:04,800 --> 00:08:06,840
advertising proxy to advertise whatever

161
00:08:06,840 --> 00:08:08,759
was registered in SRP on infrastructure

162
00:08:08,759 --> 00:08:11,220
it didn't talk a whole lot about

163
00:08:11,220 --> 00:08:12,180
um

164
00:08:12,180 --> 00:08:14,280
any other service Discovery it was

165
00:08:14,280 --> 00:08:16,740
mentioned but not in detail and then I

166
00:08:16,740 --> 00:08:18,900
talked about uh how to use nas64 to

167
00:08:18,900 --> 00:08:20,340
connect to the cloud the motivation

168
00:08:20,340 --> 00:08:22,740
there is that we feel like we can assume

169
00:08:22,740 --> 00:08:25,500
that at least in the short term a

170
00:08:25,500 --> 00:08:27,300
typical infrastructure Network probably

171
00:08:27,300 --> 00:08:29,940
has ipv4 service on it

172
00:08:29,940 --> 00:08:31,560
um we can't really assume that it has

173
00:08:31,560 --> 00:08:34,020
DHCP V6 prefix delegation

174
00:08:34,020 --> 00:08:35,940
I know that sounds a little backwards

175
00:08:35,940 --> 00:08:37,380
for like you know we really want to use

176
00:08:37,380 --> 00:08:40,320
IPv6 as much as possible but that was

177
00:08:40,320 --> 00:08:42,179
the conclusion that we came to and so

178
00:08:42,179 --> 00:08:44,099
therefore we relied on that 64 for cloud

179
00:08:44,099 --> 00:08:45,899
connectivity

180
00:08:45,899 --> 00:08:46,560
um

181
00:08:46,560 --> 00:08:48,779
and as I said we didn't put in a whole

182
00:08:48,779 --> 00:08:50,040
lot of detail about discoverability

183
00:08:50,040 --> 00:08:52,620
across non-adjacent infrastructure links

184
00:08:52,620 --> 00:08:56,220
uh which is uh something that we will

185
00:08:56,220 --> 00:08:58,260
want to do in the in the second document

186
00:08:58,260 --> 00:09:00,000
that we that we work on but isn't needed

187
00:09:00,000 --> 00:09:03,080
for the first next slide

188
00:09:03,240 --> 00:09:05,580
I'm going over this in kind of a lot of

189
00:09:05,580 --> 00:09:06,959
details probably some of you guys

190
00:09:06,959 --> 00:09:08,279
already know most of the history of this

191
00:09:08,279 --> 00:09:10,080
but this is just for those folks that

192
00:09:10,080 --> 00:09:11,519
maybe haven't been following this very

193
00:09:11,519 --> 00:09:14,339
closely so what I changed in the current

194
00:09:14,339 --> 00:09:16,860
document is I removed a bunch of text

195
00:09:16,860 --> 00:09:19,140
um so I removed the text about dhcpv6

196
00:09:19,140 --> 00:09:21,120
and I removed all the text about

197
00:09:21,120 --> 00:09:23,100
reachability and discoverability from

198
00:09:23,100 --> 00:09:24,779
non-adjacent links

199
00:09:24,779 --> 00:09:27,180
um both of those require cooperation

200
00:09:27,180 --> 00:09:29,399
from the infrastructure

201
00:09:29,399 --> 00:09:30,899
um it's not clear that I mean the

202
00:09:30,899 --> 00:09:32,220
cooperation from the infrastructure for

203
00:09:32,220 --> 00:09:34,800
DHCP V6 is already something that you

204
00:09:34,800 --> 00:09:36,240
can get so that's a little bit different

205
00:09:36,240 --> 00:09:37,920
than the other cooperation the other

206
00:09:37,920 --> 00:09:39,300
cooperation is we actually need the

207
00:09:39,300 --> 00:09:42,779
infrastructure to uh to wire the stub

208
00:09:42,779 --> 00:09:46,200
Network resolver functionality into or

209
00:09:46,200 --> 00:09:49,680
DNS functionality into the into the stub

210
00:09:49,680 --> 00:09:51,420
net into the infrastructure Network DNS

211
00:09:51,420 --> 00:09:53,339
resolver so that's kind of hard so that

212
00:09:53,339 --> 00:09:55,200
that we took out took out of the basic

213
00:09:55,200 --> 00:09:56,160
document

214
00:09:56,160 --> 00:09:59,820
um and then uh the problem statement

215
00:09:59,820 --> 00:10:02,160
document uh was kind of long and

216
00:10:02,160 --> 00:10:04,560
detailed and talked about a whole bunch

217
00:10:04,560 --> 00:10:06,480
of different possible solutions as well

218
00:10:06,480 --> 00:10:09,720
as the problem and uh but there was some

219
00:10:09,720 --> 00:10:12,240
useful text in the document we it's not

220
00:10:12,240 --> 00:10:13,440
clear that we need to publish the

221
00:10:13,440 --> 00:10:15,120
problem statement document as a working

222
00:10:15,120 --> 00:10:17,580
group document but some of the text was

223
00:10:17,580 --> 00:10:19,380
useful and so I took that text out at

224
00:10:19,380 --> 00:10:23,700
the urging of of Mark uh and put it in

225
00:10:23,700 --> 00:10:26,580
the the uh this document

226
00:10:26,580 --> 00:10:28,080
um so the introduction is a little more

227
00:10:28,080 --> 00:10:30,959
detailed and hopefully more helpful

228
00:10:30,959 --> 00:10:31,860
um

229
00:10:31,860 --> 00:10:35,519
and then uh I gotta start on putting in

230
00:10:35,519 --> 00:10:37,140
state machines so I did a state machine

231
00:10:37,140 --> 00:10:40,440
for the management of the on on link

232
00:10:40,440 --> 00:10:42,180
Auto configuration prefix for the

233
00:10:42,180 --> 00:10:43,980
infrastructure Network

234
00:10:43,980 --> 00:10:46,500
um and the idea here is

235
00:10:46,500 --> 00:10:48,360
um

236
00:10:48,360 --> 00:10:50,220
it's not so much to prescribe how you

237
00:10:50,220 --> 00:10:51,899
should implement it as to give you an

238
00:10:51,899 --> 00:10:53,459
idea of what the problems are that you

239
00:10:53,459 --> 00:10:55,620
have to deal with and to propose a way

240
00:10:55,620 --> 00:10:57,839
of solving it um previously I just kind

241
00:10:57,839 --> 00:10:59,700
of said this is what you need to do

242
00:10:59,700 --> 00:11:02,480
here's how it ought to behave good luck

243
00:11:02,480 --> 00:11:05,579
and uh I got a fair amount of feedback

244
00:11:05,579 --> 00:11:07,500
on that that was not enough detail so I

245
00:11:07,500 --> 00:11:08,700
added that detail and I think that

246
00:11:08,700 --> 00:11:10,860
there's probably similar detail needed

247
00:11:10,860 --> 00:11:13,019
for some of the other things that the

248
00:11:13,019 --> 00:11:14,220
stub network does but that's not

249
00:11:14,220 --> 00:11:15,660
currently in the document

250
00:11:15,660 --> 00:11:18,439
next slide

251
00:11:18,720 --> 00:11:22,260
so uh what's in the document now we have

252
00:11:22,260 --> 00:11:23,940
uh sorry if this is a bit of an eye

253
00:11:23,940 --> 00:11:25,740
chart we have maintenance of the usable

254
00:11:25,740 --> 00:11:26,820
prefix

255
00:11:26,820 --> 00:11:27,600
um

256
00:11:27,600 --> 00:11:30,060
so that's the infrastructure IPv6 prefix

257
00:11:30,060 --> 00:11:31,980
if there's already an IPv6 prefix on

258
00:11:31,980 --> 00:11:33,000
infrastructure we don't have to do

259
00:11:33,000 --> 00:11:34,740
anything but if there's not then we need

260
00:11:34,740 --> 00:11:36,180
to provide one

261
00:11:36,180 --> 00:11:38,880
um and it has to be usable meaning uh

262
00:11:38,880 --> 00:11:41,700
like an Android phone has to be able to

263
00:11:41,700 --> 00:11:43,380
get an IP address

264
00:11:43,380 --> 00:11:46,079
um Android phones don't support DHCP so

265
00:11:46,079 --> 00:11:47,940
that means that it can't be a DHCP

266
00:11:47,940 --> 00:11:49,500
prefix

267
00:11:49,500 --> 00:11:51,959
um that is a DHCP only prefix the a bit

268
00:11:51,959 --> 00:11:54,000
has to be set

269
00:11:54,000 --> 00:11:54,540
um

270
00:11:54,540 --> 00:11:56,940
there's also text that talks about the

271
00:11:56,940 --> 00:11:58,440
maintenance of the off stub Network

272
00:11:58,440 --> 00:12:00,839
routable prefix which is a very long

273
00:12:00,839 --> 00:12:02,940
word for the prefix that's on the stub

274
00:12:02,940 --> 00:12:05,040
Network the IPv6 prefix that's used on

275
00:12:05,040 --> 00:12:06,660
the stub Network

276
00:12:06,660 --> 00:12:10,380
um that prefix needs to be advertised

277
00:12:10,380 --> 00:12:13,860
um so uh so there's some text in the

278
00:12:13,860 --> 00:12:15,899
document that talks about the fact that

279
00:12:15,899 --> 00:12:17,760
you have to advertise that prefix in a

280
00:12:17,760 --> 00:12:19,320
router advertisement

281
00:12:19,320 --> 00:12:21,240
um I noticed as I was writing the slides

282
00:12:21,240 --> 00:12:22,920
that the text doesn't actually say that

283
00:12:22,920 --> 00:12:24,420
you have to forward stuff to that

284
00:12:24,420 --> 00:12:27,240
network but obviously that's implicit

285
00:12:27,240 --> 00:12:28,800
and we need to make that explicit in the

286
00:12:28,800 --> 00:12:30,120
document

287
00:12:30,120 --> 00:12:31,980
um similarly we have to advertise routes

288
00:12:31,980 --> 00:12:33,300
to the adjacent infrastructure on the

289
00:12:33,300 --> 00:12:34,440
stub Network

290
00:12:34,440 --> 00:12:36,240
um that's a bit architecture dependent

291
00:12:36,240 --> 00:12:38,339
for the for the infrastructure Network

292
00:12:38,339 --> 00:12:40,140
we assume that we're using Ras for the

293
00:12:40,140 --> 00:12:42,540
stub Network we can't really assume that

294
00:12:42,540 --> 00:12:44,459
um in sort of the the current use case

295
00:12:44,459 --> 00:12:45,720
that we're actually

296
00:12:45,720 --> 00:12:47,579
using this for

297
00:12:47,579 --> 00:12:49,920
um we don't do ra the thread is an

298
00:12:49,920 --> 00:12:52,980
802.15.4 based mesh Network and it does

299
00:12:52,980 --> 00:12:55,980
not do ras it uses a different mechanism

300
00:12:55,980 --> 00:12:58,800
for advertising this information so

301
00:12:58,800 --> 00:13:00,120
um the general assumption in the

302
00:13:00,120 --> 00:13:03,000
document is we you know if you're doing

303
00:13:03,000 --> 00:13:04,860
a Wi-Fi stub Network then you're

304
00:13:04,860 --> 00:13:06,120
probably going to use Ras but if you're

305
00:13:06,120 --> 00:13:07,200
not then you're probably going to do

306
00:13:07,200 --> 00:13:08,760
something weird and exciting and

307
00:13:08,760 --> 00:13:09,660
different

308
00:13:09,660 --> 00:13:11,579
so

309
00:13:11,579 --> 00:13:12,720
um

310
00:13:12,720 --> 00:13:15,600
then the document talks about uh service

311
00:13:15,600 --> 00:13:17,579
advertising and Discovery this is

312
00:13:17,579 --> 00:13:19,560
actually there's a bunch of things you

313
00:13:19,560 --> 00:13:21,060
have to do to make this work in all

314
00:13:21,060 --> 00:13:22,079
cases

315
00:13:22,079 --> 00:13:22,860
um

316
00:13:22,860 --> 00:13:27,360
so uh there's two problems one is

317
00:13:27,360 --> 00:13:28,980
advertising and the other is Discovery

318
00:13:28,980 --> 00:13:30,600
and each of those problems is handled

319
00:13:30,600 --> 00:13:31,860
differently depending on whether it's on

320
00:13:31,860 --> 00:13:32,940
the stub Network or on the

321
00:13:32,940 --> 00:13:34,620
infrastructure Network so on the stub

322
00:13:34,620 --> 00:13:37,740
Network for advertising uh we use SRP uh

323
00:13:37,740 --> 00:13:39,180
so we're assuming that this requires

324
00:13:39,180 --> 00:13:41,339
host changes or not host changes we're

325
00:13:41,339 --> 00:13:42,360
since it's kind of a green field

326
00:13:42,360 --> 00:13:44,639
environment we just assume that we can

327
00:13:44,639 --> 00:13:47,040
say the host uses SRP

328
00:13:47,040 --> 00:13:48,180
um

329
00:13:48,180 --> 00:13:51,360
and uh then

330
00:13:51,360 --> 00:13:54,360
for discovery on the stub Network

331
00:13:54,360 --> 00:13:56,639
um there's two different types of hosts

332
00:13:56,639 --> 00:13:57,839
you might want to discover one of them

333
00:13:57,839 --> 00:13:59,220
is hosts that are on the infrastructure

334
00:13:59,220 --> 00:14:00,480
Network and the other is hosts that are

335
00:14:00,480 --> 00:14:02,339
on the stub Network

336
00:14:02,339 --> 00:14:04,680
um and actually uh an additional Point

337
00:14:04,680 --> 00:14:06,120
here is that there could be more than

338
00:14:06,120 --> 00:14:08,220
one stud Network connected to the infra

339
00:14:08,220 --> 00:14:09,839
to the same infrastructure Network and

340
00:14:09,839 --> 00:14:11,279
we actually really want the stub Network

341
00:14:11,279 --> 00:14:13,560
hosts to be able to discover stub

342
00:14:13,560 --> 00:14:15,360
Network hosts on other stub networks as

343
00:14:15,360 --> 00:14:17,940
well that's not currently talked about

344
00:14:17,940 --> 00:14:19,440
in detail in the document I'm not even

345
00:14:19,440 --> 00:14:21,480
sure it's talked about at all

346
00:14:21,480 --> 00:14:23,339
um but that's a thing we need to be to

347
00:14:23,339 --> 00:14:25,980
to be aware of um so

348
00:14:25,980 --> 00:14:28,200
uh for discovering infrastructure hosts

349
00:14:28,200 --> 00:14:30,000
uh we have a discovery proxy that's

350
00:14:30,000 --> 00:14:32,100
another thing that's an RFC that came

351
00:14:32,100 --> 00:14:34,620
out of dnssd a couple of years ago and

352
00:14:34,620 --> 00:14:37,079
the idea is that you have a DNS resolver

353
00:14:37,079 --> 00:14:38,700
or sorry a DNS server an authoritative

354
00:14:38,700 --> 00:14:40,920
DNS server that's authoritative for a

355
00:14:40,920 --> 00:14:44,040
particular Zone and uh when you ask it a

356
00:14:44,040 --> 00:14:46,260
question rather than Consulting its

357
00:14:46,260 --> 00:14:48,180
Authority database it goes out and does

358
00:14:48,180 --> 00:14:49,800
an mdns query to try and get the answer

359
00:14:49,800 --> 00:14:54,420
so um so Discovery proxy sits on the uh

360
00:14:54,420 --> 00:14:57,300
on the stub router and uh does queries

361
00:14:57,300 --> 00:14:59,360
on the infrastructure Network to satisfy

362
00:14:59,360 --> 00:15:03,420
uh queries from stub Network hosts

363
00:15:03,420 --> 00:15:05,100
um and then for stub Network hosts It's

364
00:15:05,100 --> 00:15:06,480
relatively straightforward it's just an

365
00:15:06,480 --> 00:15:08,220
authoritative Zone you do DNS queries to

366
00:15:08,220 --> 00:15:11,100
it so so the the SRP updates in

367
00:15:11,100 --> 00:15:12,420
authoritative Zone and we just answer

368
00:15:12,420 --> 00:15:14,760
questions out of that zone

369
00:15:14,760 --> 00:15:15,480
um

370
00:15:15,480 --> 00:15:18,180
now for discovery on the adjacent

371
00:15:18,180 --> 00:15:19,440
infrastructure

372
00:15:19,440 --> 00:15:20,699
um

373
00:15:20,699 --> 00:15:22,920
first of all uh we don't need to worry

374
00:15:22,920 --> 00:15:25,079
about adjacent infrastructure hosts

375
00:15:25,079 --> 00:15:26,519
discovering each other because we assume

376
00:15:26,519 --> 00:15:28,560
that that's already working that's not

377
00:15:28,560 --> 00:15:29,820
our problem

378
00:15:29,820 --> 00:15:30,899
um and

379
00:15:30,899 --> 00:15:33,660
so we sort of we leverage that to also

380
00:15:33,660 --> 00:15:34,980
make it possible to discover stub

381
00:15:34,980 --> 00:15:37,500
Network hosts so instead of doing DNS

382
00:15:37,500 --> 00:15:39,480
queries to the authoritative Zone that's

383
00:15:39,480 --> 00:15:43,139
populated by SRP we answer questions

384
00:15:43,139 --> 00:15:46,620
that we see on mdns using the contents

385
00:15:46,620 --> 00:15:48,300
of that zone

386
00:15:48,300 --> 00:15:50,699
um that's called an advertising proxy so

387
00:15:50,699 --> 00:15:52,019
that's pretty straightforward and then

388
00:15:52,019 --> 00:15:53,399
uh the other thing that's covered in the

389
00:15:53,399 --> 00:15:54,839
document is the maintenance of the NAT

390
00:15:54,839 --> 00:15:57,060
64 prefix and again that's going to need

391
00:15:57,060 --> 00:15:58,440
a state machine and it currently doesn't

392
00:15:58,440 --> 00:15:59,940
have one so there's there's further work

393
00:15:59,940 --> 00:16:01,980
to do there so that's

394
00:16:01,980 --> 00:16:04,139
the current state of the document next

395
00:16:04,139 --> 00:16:06,440
slide

396
00:16:07,260 --> 00:16:09,600
uh so we've had some discussion

397
00:16:09,600 --> 00:16:11,760
um one of the questions is do we really

398
00:16:11,760 --> 00:16:14,279
want to do nat64 can't we do something

399
00:16:14,279 --> 00:16:15,120
else

400
00:16:15,120 --> 00:16:18,060
um and you know there are a lot of

401
00:16:18,060 --> 00:16:21,180
reasons not to do nat64 but the bottom

402
00:16:21,180 --> 00:16:22,320
line is we don't really have an

403
00:16:22,320 --> 00:16:23,339
alternative

404
00:16:23,339 --> 00:16:24,240
um

405
00:16:24,240 --> 00:16:26,459
you know unless we just say that the

406
00:16:26,459 --> 00:16:27,600
stub Network hosts can't reach the

407
00:16:27,600 --> 00:16:29,040
internet and I don't think we're really

408
00:16:29,040 --> 00:16:31,680
able to say that so uh so that means

409
00:16:31,680 --> 00:16:33,660
that we have to uh we have to provide

410
00:16:33,660 --> 00:16:35,579
some way for stub Network hosts to

411
00:16:35,579 --> 00:16:37,079
download firmware updates and

412
00:16:37,079 --> 00:16:39,420
potentially talk to cloud services uh we

413
00:16:39,420 --> 00:16:41,820
can't assume IPv6 connectivity even if

414
00:16:41,820 --> 00:16:45,240
the home has IPv6 connectivity it may

415
00:16:45,240 --> 00:16:48,180
not support prefix delegation but it

416
00:16:48,180 --> 00:16:49,980
almost certainly has ipd4 connectivity

417
00:16:49,980 --> 00:16:51,660
of some in some form

418
00:16:51,660 --> 00:16:55,019
uh even if that's not 64 right so it

419
00:16:55,019 --> 00:16:56,519
could be that you've got an IPv6 only

420
00:16:56,519 --> 00:16:59,639
home but the ISP is providing it with

421
00:16:59,639 --> 00:17:02,459
Nat 64 so that you can reach hosts on

422
00:17:02,459 --> 00:17:04,859
the ipv4 internet that's fine that works

423
00:17:04,859 --> 00:17:07,380
we we have to support that as well so in

424
00:17:07,380 --> 00:17:09,660
other words we're using nat64 in this

425
00:17:09,660 --> 00:17:11,520
case but we're not providing that 64.

426
00:17:11,520 --> 00:17:12,839
we're just taking advantage of existing

427
00:17:12,839 --> 00:17:14,880
that 64.

428
00:17:14,880 --> 00:17:16,160
um

429
00:17:16,160 --> 00:17:19,020
so uh

430
00:17:19,020 --> 00:17:22,679
now uh we could of course say you know

431
00:17:22,679 --> 00:17:25,740
if you don't have the HTTP V6 prefix

432
00:17:25,740 --> 00:17:27,059
delegation then tough luck you can't

433
00:17:27,059 --> 00:17:28,620
talk to the internet but I don't think

434
00:17:28,620 --> 00:17:30,960
we can really say that so unfortunately

435
00:17:30,960 --> 00:17:33,299
I don't like I would like to put dhcpv6

436
00:17:33,299 --> 00:17:35,700
prefix delegation into this document but

437
00:17:35,700 --> 00:17:37,679
this isn't a reason to do that that's

438
00:17:37,679 --> 00:17:40,260
not going to solve this problem so

439
00:17:40,260 --> 00:17:43,020
that's the NAT 64 question

440
00:17:43,020 --> 00:17:46,740
um I think we concluded that Nat 64 is

441
00:17:46,740 --> 00:17:48,960
required but I'm not positive that

442
00:17:48,960 --> 00:17:50,820
everybody fully agrees with that yet so

443
00:17:50,820 --> 00:17:52,980
somebody disagrees then you know there's

444
00:17:52,980 --> 00:17:54,660
the microphone or you can bring it up on

445
00:17:54,660 --> 00:17:57,419
the mailing list next slide

446
00:17:57,419 --> 00:17:58,320
foreign

447
00:17:58,320 --> 00:18:00,000
and then the question the other question

448
00:18:00,000 --> 00:18:01,919
is do we want prefix delegation

449
00:18:01,919 --> 00:18:04,260
um it's a bit complicated but you know

450
00:18:04,260 --> 00:18:06,140
it's something that could be available

451
00:18:06,140 --> 00:18:10,260
and it might be nice to support it uh

452
00:18:10,260 --> 00:18:12,179
and wouldn't be that hard to add but

453
00:18:12,179 --> 00:18:14,940
it's I don't think it's necessary to

454
00:18:14,940 --> 00:18:17,340
satisfy the requirements of the basic

455
00:18:17,340 --> 00:18:18,900
document so the main reason that I'd be

456
00:18:18,900 --> 00:18:21,480
inclined to include it is just that uh

457
00:18:21,480 --> 00:18:23,940
that means that we don't have to modify

458
00:18:23,940 --> 00:18:28,020
the state machine in the uh in the

459
00:18:28,020 --> 00:18:29,580
cooperating with infrastructure

460
00:18:29,580 --> 00:18:32,220
documents so uh the state machine for

461
00:18:32,220 --> 00:18:36,900
managing the osnr prefix needs to handle

462
00:18:36,900 --> 00:18:39,059
uh dhcpv6

463
00:18:39,059 --> 00:18:40,380
simply

464
00:18:40,380 --> 00:18:43,380
um and so if we don't do it in this

465
00:18:43,380 --> 00:18:45,360
document then the next document is

466
00:18:45,360 --> 00:18:47,039
basically going to just have to modify

467
00:18:47,039 --> 00:18:48,660
that state machine to include support

468
00:18:48,660 --> 00:18:51,960
for dhcpv6 PD

469
00:18:51,960 --> 00:18:54,900
is that a big deal maybe not but that

470
00:18:54,900 --> 00:18:57,059
that's basically the reason why I'm a

471
00:18:57,059 --> 00:18:58,440
little bit tempted to suggest putting it

472
00:18:58,440 --> 00:19:00,299
in the basic document

473
00:19:00,299 --> 00:19:02,820
so I'm curious if anybody has any

474
00:19:02,820 --> 00:19:05,160
opinions on that

475
00:19:05,160 --> 00:19:08,280
let's finish the yeah okay

476
00:19:08,280 --> 00:19:12,980
okay great uh so next slide

477
00:19:13,380 --> 00:19:16,380
um and then you know remaining work uh I

478
00:19:16,380 --> 00:19:17,520
think you know we don't have a state

479
00:19:17,520 --> 00:19:19,740
machine for Nat 64. it's possible we

480
00:19:19,740 --> 00:19:21,960
need other state machines certainly my

481
00:19:21,960 --> 00:19:23,700
implementation has a state machine for

482
00:19:23,700 --> 00:19:26,539
managing the presence of the SRP server

483
00:19:26,539 --> 00:19:28,919
uh it's not clear that we need that in

484
00:19:28,919 --> 00:19:32,039
this document but maybe we do

485
00:19:32,039 --> 00:19:36,059
um and uh we're relying on a document

486
00:19:36,059 --> 00:19:37,740
that's currently a working group

487
00:19:37,740 --> 00:19:39,539
document in the dnssd working group the

488
00:19:39,539 --> 00:19:41,580
advertising proxy document

489
00:19:41,580 --> 00:19:43,140
um that document is currently under

490
00:19:43,140 --> 00:19:45,720
development and in flux so it's a little

491
00:19:45,720 --> 00:19:48,120
bit difficult to uh say exactly what we

492
00:19:48,120 --> 00:19:49,320
need to pull out of it and whether we

493
00:19:49,320 --> 00:19:51,059
need to add something to it but that's

494
00:19:51,059 --> 00:19:52,799
the thing that we need to figure out as

495
00:19:52,799 --> 00:19:55,440
we're moving forward with this document

496
00:19:55,440 --> 00:19:56,820
um

497
00:19:56,820 --> 00:19:58,380
another question is we talk about the

498
00:19:58,380 --> 00:20:00,780
potential for a partitioned stub Network

499
00:20:00,780 --> 00:20:03,360
and what we need to do in that case we

500
00:20:03,360 --> 00:20:04,500
don't have a whole lot of text about

501
00:20:04,500 --> 00:20:06,059
that the reason for that is because

502
00:20:06,059 --> 00:20:07,500
partitioning I think is a very

503
00:20:07,500 --> 00:20:11,640
application or you know a very uh

504
00:20:11,640 --> 00:20:14,640
Network Technology specific thing

505
00:20:14,640 --> 00:20:16,799
um so like thread has a way that it does

506
00:20:16,799 --> 00:20:18,539
partitioning I don't think we want to be

507
00:20:18,539 --> 00:20:21,120
talking about thread in this document so

508
00:20:21,120 --> 00:20:23,100
therefore we can't really talk too much

509
00:20:23,100 --> 00:20:24,840
about how thread does partitioning so

510
00:20:24,840 --> 00:20:26,460
basically the document is just saying

511
00:20:26,460 --> 00:20:27,900
like this is the thing that you're going

512
00:20:27,900 --> 00:20:29,520
to need to deal with

513
00:20:29,520 --> 00:20:30,840
um and the question is how much do we

514
00:20:30,840 --> 00:20:33,360
need to say about that so uh it would be

515
00:20:33,360 --> 00:20:34,980
good to have people read the document

516
00:20:34,980 --> 00:20:36,179
and see if they think they understand

517
00:20:36,179 --> 00:20:38,880
how to deal with partitioning based on

518
00:20:38,880 --> 00:20:41,220
what's currently said in the document

519
00:20:41,220 --> 00:20:43,620
and then uh the text about reachability

520
00:20:43,620 --> 00:20:45,660
doesn't say precisely what to do like it

521
00:20:45,660 --> 00:20:47,700
doesn't say what to put in the RAS in

522
00:20:47,700 --> 00:20:49,140
detail

523
00:20:49,140 --> 00:20:49,820
um

524
00:20:49,820 --> 00:20:52,919
and I kind of suspect that it needs to

525
00:20:52,919 --> 00:20:55,679
say more but you know I'm curious what

526
00:20:55,679 --> 00:20:57,120
the working group thinks about that too

527
00:20:57,120 --> 00:21:00,260
next slide

528
00:21:00,600 --> 00:21:02,340
um and then basically my goal in getting

529
00:21:02,340 --> 00:21:03,600
up here and talking to you guys and

530
00:21:03,600 --> 00:21:04,860
telling you about this awesome document

531
00:21:04,860 --> 00:21:07,380
that I've written is uh that I hope the

532
00:21:07,380 --> 00:21:09,299
working group will adopt it

533
00:21:09,299 --> 00:21:11,760
um and I hope people will read it it

534
00:21:11,760 --> 00:21:13,500
would be great if somebody wanted to do

535
00:21:13,500 --> 00:21:15,299
an implementation

536
00:21:15,299 --> 00:21:17,400
um I realize that's a big ask

537
00:21:17,400 --> 00:21:19,980
but that'll be cool

538
00:21:19,980 --> 00:21:23,880
um so and you know like Pascal is is

539
00:21:23,880 --> 00:21:25,799
doing some interesting

540
00:21:25,799 --> 00:21:26,520
um

541
00:21:26,520 --> 00:21:29,460
uh six low pan stuff that I don't really

542
00:21:29,460 --> 00:21:31,200
have any visibility to so it'd be

543
00:21:31,200 --> 00:21:33,539
interesting I know Pascal does some some

544
00:21:33,539 --> 00:21:35,100
application stuff it'd be interesting if

545
00:21:35,100 --> 00:21:36,600
Pascal's interested in doing that or

546
00:21:36,600 --> 00:21:38,520
anybody I don't want to single you out

547
00:21:38,520 --> 00:21:40,559
Pascal just just you know I happen to

548
00:21:40,559 --> 00:21:41,940
know that you that you're doing stuff in

549
00:21:41,940 --> 00:21:43,440
this space so

550
00:21:43,440 --> 00:21:46,740
that's I think that's it next slide

551
00:21:46,740 --> 00:21:49,500
turns in the next slide there's no all

552
00:21:49,500 --> 00:21:51,780
right we're done

553
00:21:51,780 --> 00:21:54,240
so I think it's so we should open the

554
00:21:54,240 --> 00:21:55,140
queue

555
00:21:55,140 --> 00:22:00,960
and uh while my co-chair is uh

556
00:22:00,960 --> 00:22:04,799
getting back on as a chair on the media

557
00:22:04,799 --> 00:22:07,620
so how should I

558
00:22:07,620 --> 00:22:10,440
just call Michael oh we know I mean okay

559
00:22:10,440 --> 00:22:12,360
there's nothing I I need to nothing you

560
00:22:12,360 --> 00:22:15,120
need to do okay no sorry

561
00:22:15,120 --> 00:22:17,760
um Michael Richardson so

562
00:22:17,760 --> 00:22:18,480
um

563
00:22:18,480 --> 00:22:21,539
in the pathological case that the ISP is

564
00:22:21,539 --> 00:22:23,700
Forward Thinking and has provided the

565
00:22:23,700 --> 00:22:27,059
customers with uh V6 only networks with

566
00:22:27,059 --> 00:22:30,320
a ISP provided Nat 64.

567
00:22:30,320 --> 00:22:34,679
then if we don't have DHCP v6pd

568
00:22:34,679 --> 00:22:36,780
then we have a failure right we don't

569
00:22:36,780 --> 00:22:38,640
get internet connectivity because we

570
00:22:38,640 --> 00:22:40,620
can't not we can't Nat six four

571
00:22:40,620 --> 00:22:43,500
ourselves because there's no V4

572
00:22:43,500 --> 00:22:45,720
on the local network because they're

573
00:22:45,720 --> 00:22:47,820
using Nat six four

574
00:22:47,820 --> 00:22:51,020
right yeah

575
00:22:51,299 --> 00:22:54,600
yeah so so forward thinks okay Michael

576
00:22:54,600 --> 00:22:58,140
of a successful transition yes we have a

577
00:22:58,140 --> 00:22:59,880
failure yes so I think it's worth

578
00:22:59,880 --> 00:23:02,880
writing the hcp v6pd into the state

579
00:23:02,880 --> 00:23:05,400
machine exactly for that reason even

580
00:23:05,400 --> 00:23:07,140
though we don't actually have any

581
00:23:07,140 --> 00:23:09,539
requirement that says that CPE routers

582
00:23:09,539 --> 00:23:10,799
are supposed to provide it on the

583
00:23:10,799 --> 00:23:13,200
Southbound Southbound interface yeah

584
00:23:13,200 --> 00:23:16,080
right so it seems that we need to say

585
00:23:16,080 --> 00:23:18,780
that I would like to to do that to make

586
00:23:18,780 --> 00:23:20,880
them do it but to write it in a document

587
00:23:20,880 --> 00:23:23,520
that updates whatever 70 84. yeah I

588
00:23:23,520 --> 00:23:24,780
think we should we should do that

589
00:23:24,780 --> 00:23:27,240
somewhere right probably not here um but

590
00:23:27,240 --> 00:23:29,220
so but in our in this document in our

591
00:23:29,220 --> 00:23:31,140
state machine it seems that we should we

592
00:23:31,140 --> 00:23:32,940
should do that

593
00:23:32,940 --> 00:23:37,260
um and otherwise we have a uh a failure

594
00:23:37,260 --> 00:23:39,720
in when we are successful with the

595
00:23:39,720 --> 00:23:42,000
ubiquitous deployment of IPv6 then we

596
00:23:42,000 --> 00:23:43,919
have a failure yeah right this is a

597
00:23:43,919 --> 00:23:46,320
hugely good point and the precise reason

598
00:23:46,320 --> 00:23:48,120
why I wanted to bring this to the ietf

599
00:23:48,120 --> 00:23:49,320
and not just do it somewhere else

600
00:23:49,320 --> 00:23:51,960
because I hadn't even thought of that so

601
00:23:51,960 --> 00:23:53,760
thank you

602
00:23:53,760 --> 00:23:57,840
so everything as the entity for this uh

603
00:23:57,840 --> 00:24:00,179
I was really concerned when I saw nat64

604
00:24:00,179 --> 00:24:02,340
coming up because I want to get a very

605
00:24:02,340 --> 00:24:04,380
small document implementable right so I

606
00:24:04,380 --> 00:24:05,580
don't want to repeat from that as you

607
00:24:05,580 --> 00:24:08,340
know but you convinced me right so keep

608
00:24:08,340 --> 00:24:10,500
it there but and then Michael you stole

609
00:24:10,500 --> 00:24:13,380
my words about DHCP yeah yeah and that's

610
00:24:13,380 --> 00:24:15,179
it we want to keep Nat 64 as simple as

611
00:24:15,179 --> 00:24:16,740
possible like we could do a really fancy

612
00:24:16,740 --> 00:24:20,539
net 64 thing let's not

613
00:24:20,880 --> 00:24:24,059
Tim Winters QA Cafe so couple things I I

614
00:24:24,059 --> 00:24:25,320
definitely think we should put PD in

615
00:24:25,320 --> 00:24:27,419
this document I definitely think we

616
00:24:27,419 --> 00:24:29,760
should I'm going to write a draft for PD

617
00:24:29,760 --> 00:24:33,000
on the back side of CPS because yeah a

618
00:24:33,000 --> 00:24:34,679
lot of them have servers every all of

619
00:24:34,679 --> 00:24:36,360
them have servers but they don't turn on

620
00:24:36,360 --> 00:24:38,100
PD so they have these giant prefixes

621
00:24:38,100 --> 00:24:39,780
that they don't do much with right so I

622
00:24:39,780 --> 00:24:41,220
think we probably need to give them some

623
00:24:41,220 --> 00:24:44,220
guidance for sure so

624
00:24:44,220 --> 00:24:45,780
um I'm definitely going to put something

625
00:24:45,780 --> 00:24:47,400
I guess it's V6 Ops because that's where

626
00:24:47,400 --> 00:24:49,500
7084 was done

627
00:24:49,500 --> 00:24:52,460
yeah V6 hops are

628
00:24:52,460 --> 00:24:55,140
protocol extensions so if you were maybe

629
00:24:55,140 --> 00:24:57,600
I don't know it's DHC or I'll talk to

630
00:24:57,600 --> 00:25:00,440
people it's either DHC or VISA types

631
00:25:00,440 --> 00:25:02,700
we'd have to recharter but I wouldn't

632
00:25:02,700 --> 00:25:04,140
object to that

633
00:25:04,140 --> 00:25:06,840
I yeah I mean 7084 is in a weird spot it

634
00:25:06,840 --> 00:25:08,880
was always in V6 Ops I guess I could

635
00:25:08,880 --> 00:25:09,840
live there

636
00:25:09,840 --> 00:25:11,159
um the only other thing I thought you

637
00:25:11,159 --> 00:25:12,299
should talk more about is the

638
00:25:12,299 --> 00:25:14,580
reachability you asked about that I read

639
00:25:14,580 --> 00:25:16,740
it and that'll be a problem for people

640
00:25:16,740 --> 00:25:18,539
would be my guess okay so I think you're

641
00:25:18,539 --> 00:25:19,679
gonna need to put a little more detail

642
00:25:19,679 --> 00:25:21,179
I'll send some notes about that right

643
00:25:21,179 --> 00:25:24,440
that would be really helpful thank you

644
00:25:25,020 --> 00:25:28,380
hi um Bob hinden so I first of all I may

645
00:25:28,380 --> 00:25:30,539
not be up to speed on this so that's

646
00:25:30,539 --> 00:25:33,120
what I say may be wrong but

647
00:25:33,120 --> 00:25:35,760
seems to me for now six four if there's

648
00:25:35,760 --> 00:25:38,279
not six maybe this is what Michael said

649
00:25:38,279 --> 00:25:41,159
if there's not 64 at the highest you

650
00:25:41,159 --> 00:25:43,740
know the ISP Edge then I don't think

651
00:25:43,740 --> 00:25:46,080
this should this whatever this is

652
00:25:46,080 --> 00:25:48,840
defining shouldn't have to do anything

653
00:25:48,840 --> 00:25:50,760
it because if it doesn't exist there

654
00:25:50,760 --> 00:25:53,159
then you don't need to do anything right

655
00:25:53,159 --> 00:25:55,980
so uh there is one little wrinkle there

656
00:25:55,980 --> 00:25:59,159
which is that um when we wrote the

657
00:25:59,159 --> 00:26:00,480
threads back and we don't necessarily

658
00:26:00,480 --> 00:26:01,860
have to carry this over to this spec

659
00:26:01,860 --> 00:26:03,600
when we wrote the thread spec we decided

660
00:26:03,600 --> 00:26:05,279
that we really didn't like the idea of

661
00:26:05,279 --> 00:26:07,679
breaking DNS SEC and therefore that it

662
00:26:07,679 --> 00:26:10,020
was a responsibility of the host that's

663
00:26:10,020 --> 00:26:13,080
doing the lookup to do the synthesis and

664
00:26:13,080 --> 00:26:15,720
so that had some follow-on implications

665
00:26:15,720 --> 00:26:18,960
on like actually the stub Network router

666
00:26:18,960 --> 00:26:20,340
it does kind of need to do a little bit

667
00:26:20,340 --> 00:26:23,640
of assistance maybe maybe not I mean you

668
00:26:23,640 --> 00:26:25,440
could just do the the regular ipv4 and

669
00:26:25,440 --> 00:26:27,179
lead on arpa query but we might want to

670
00:26:27,179 --> 00:26:29,100
do ras that you know if it's if it's a

671
00:26:29,100 --> 00:26:31,140
if it's a Wi-Fi network we might want to

672
00:26:31,140 --> 00:26:32,640
do ras in the case of thread we actually

673
00:26:32,640 --> 00:26:34,260
put something in the thread network data

674
00:26:34,260 --> 00:26:35,940
that says here's your IP here's your NAT

675
00:26:35,940 --> 00:26:38,760
64 prefix well yeah I think the goal

676
00:26:38,760 --> 00:26:40,440
should be trying not to have to do

677
00:26:40,440 --> 00:26:42,960
anything and make this as simple as

678
00:26:42,960 --> 00:26:44,940
possible because more stuff you start

679
00:26:44,940 --> 00:26:48,299
adding in here then it seems to me you

680
00:26:48,299 --> 00:26:50,340
go down the road of why are we doing

681
00:26:50,340 --> 00:26:52,500
this and just make it a real router with

682
00:26:52,500 --> 00:26:56,520
real random protocols well so the reason

683
00:26:56,520 --> 00:26:58,020
we're doing this is because is because

684
00:26:58,020 --> 00:27:00,059
we you know we need to be able to to

685
00:27:00,059 --> 00:27:02,039
have a router that works without you

686
00:27:02,039 --> 00:27:05,100
having a I manage it exactly but the

687
00:27:05,100 --> 00:27:07,260
more complexity you add than sure you

688
00:27:07,260 --> 00:27:09,480
start to lose that goal yep

689
00:27:09,480 --> 00:27:11,779
thanks

690
00:27:14,220 --> 00:27:16,320
uh Lorenzo clearly I

691
00:27:16,320 --> 00:27:16,980
um

692
00:27:16,980 --> 00:27:18,480
just wanted to say I think we should

693
00:27:18,480 --> 00:27:21,539
have uh PD in the in the base back

694
00:27:21,539 --> 00:27:23,520
um I understand that there's a lot of

695
00:27:23,520 --> 00:27:25,620
stuff in this document already but maybe

696
00:27:25,620 --> 00:27:27,960
a better way is to split the document in

697
00:27:27,960 --> 00:27:30,480
sort of uh routing and reachability and

698
00:27:30,480 --> 00:27:31,919
then service Discovery and like have

699
00:27:31,919 --> 00:27:33,240
those be separate bits of the

700
00:27:33,240 --> 00:27:35,279
architecture right um

701
00:27:35,279 --> 00:27:38,159
because I think it's it's important to

702
00:27:38,159 --> 00:27:39,779
have some

703
00:27:39,779 --> 00:27:41,760
some proposal for how end-to-end should

704
00:27:41,760 --> 00:27:43,860
work and now even if PD doesn't work I I

705
00:27:43,860 --> 00:27:45,840
will note that you could probably do

706
00:27:45,840 --> 00:27:49,200
Andy proxying if you had

707
00:27:49,200 --> 00:27:51,179
uh if you you know if you had a native

708
00:27:51,179 --> 00:27:52,620
V6 prefix

709
00:27:52,620 --> 00:27:54,779
not sure it's worth it it's very hard to

710
00:27:54,779 --> 00:27:57,120
get right yeah it's not very scalable

711
00:27:57,120 --> 00:27:58,919
you probably don't want to do that but

712
00:27:58,919 --> 00:28:01,020
and yeah and I I don't oppose having

713
00:28:01,020 --> 00:28:02,580
that six four here I mean I think yeah

714
00:28:02,580 --> 00:28:04,020
if you want to talk to the internet you

715
00:28:04,020 --> 00:28:08,900
need a pv4 so yeah okay thanks

716
00:28:09,659 --> 00:28:13,020
uh Stuart churcher from Apple

717
00:28:13,020 --> 00:28:14,700
um when I put myself into the queue I

718
00:28:14,700 --> 00:28:16,559
had a comment and everybody else has

719
00:28:16,559 --> 00:28:17,940
basically said the same thing so I'll

720
00:28:17,940 --> 00:28:20,100
make this short I think we definitely do

721
00:28:20,100 --> 00:28:22,200
want to talk about the HTTP V6 prefix

722
00:28:22,200 --> 00:28:24,299
delegation we also want to talk about

723
00:28:24,299 --> 00:28:26,220
the state machine of how you discover

724
00:28:26,220 --> 00:28:28,080
when it becomes available and what you

725
00:28:28,080 --> 00:28:30,720
do and how you discover if it goes away

726
00:28:30,720 --> 00:28:32,760
and I'm I'm coming up to say this

727
00:28:32,760 --> 00:28:34,620
because I had a discussion with Eric

728
00:28:34,620 --> 00:28:36,380
Klein last night

729
00:28:36,380 --> 00:28:39,059
where uh he had got a different

730
00:28:39,059 --> 00:28:41,820
impression of this work and in his mind

731
00:28:41,820 --> 00:28:45,059
he thought we we were building some kind

732
00:28:45,059 --> 00:28:48,480
of overlay Network so that you could

733
00:28:48,480 --> 00:28:51,000
um connect a bunch of stubs to each

734
00:28:51,000 --> 00:28:54,000
other in a private way and he objected

735
00:28:54,000 --> 00:28:55,860
to using Ras because that would pollute

736
00:28:55,860 --> 00:28:57,720
the caches of the hosts on the ethernet

737
00:28:57,720 --> 00:28:59,279
and the Wi-Fi and they might know about

738
00:28:59,279 --> 00:29:01,200
the stub Network

739
00:29:01,200 --> 00:29:02,940
um and then we had a conversation like

740
00:29:02,940 --> 00:29:06,179
that's the point we we want hosts to be

741
00:29:06,179 --> 00:29:07,559
able to communicate

742
00:29:07,559 --> 00:29:09,419
um

743
00:29:09,419 --> 00:29:11,580
uh and the other thing is that we're not

744
00:29:11,580 --> 00:29:13,620
trying to our goal is not to build a

745
00:29:13,620 --> 00:29:15,600
little private overlay that can't talk

746
00:29:15,600 --> 00:29:17,460
to anything else right our ideal

747
00:29:17,460 --> 00:29:19,919
situation is I mean in this case it's

748
00:29:19,919 --> 00:29:22,320
thread that we're talking about but

749
00:29:22,320 --> 00:29:24,299
so I'll use that example

750
00:29:24,299 --> 00:29:26,640
it'd be nice if every thread node had a

751
00:29:26,640 --> 00:29:29,760
global unicast IPv6 address that it can

752
00:29:29,760 --> 00:29:32,520
freely use to communicate with any host

753
00:29:32,520 --> 00:29:36,360
using any protocol that runs over ipp6

754
00:29:36,360 --> 00:29:38,700
um the stuff about making up

755
00:29:38,700 --> 00:29:41,520
ulas and advertising them in Ras is just

756
00:29:41,520 --> 00:29:42,840
a fallback for when the full

757
00:29:42,840 --> 00:29:45,480
connectivity is not present right so we

758
00:29:45,480 --> 00:29:47,820
definitely want to focus on on the ideal

759
00:29:47,820 --> 00:29:50,640
case and then talk about how do we get

760
00:29:50,640 --> 00:29:52,799
something that's not quite as good when

761
00:29:52,799 --> 00:29:54,600
we don't have everything we want yeah

762
00:29:54,600 --> 00:29:57,419
it's a good point I agree okay I think

763
00:29:57,419 --> 00:29:58,980
we've got a pretty clear consensus that

764
00:29:58,980 --> 00:30:02,419
we should put DHCP in the document

765
00:30:04,020 --> 00:30:06,419
yeah I mean I'll leave it to you to to

766
00:30:06,419 --> 00:30:07,980
call the consensus but that's my

767
00:30:07,980 --> 00:30:11,240
personal impression as an author

768
00:30:12,059 --> 00:30:13,919
I agree

769
00:30:13,919 --> 00:30:15,000
okay

770
00:30:15,000 --> 00:30:17,039
other questions it looks like Julius is

771
00:30:17,039 --> 00:30:19,399
in the lunch

772
00:30:19,500 --> 00:30:21,539
uh working group adoption will wait

773
00:30:21,539 --> 00:30:24,480
until after the uh

774
00:30:24,480 --> 00:30:26,399
there's

775
00:30:26,399 --> 00:30:27,960
okay

776
00:30:27,960 --> 00:30:31,200
so as I can say a few words

777
00:30:31,200 --> 00:30:33,120
yeah please go

778
00:30:33,120 --> 00:30:33,840
um

779
00:30:33,840 --> 00:30:37,020
so I'm not quite as sure as you make it

780
00:30:37,020 --> 00:30:39,360
that not six four is unavoidable there

781
00:30:39,360 --> 00:30:40,919
are other possibilities so Michael

782
00:30:40,919 --> 00:30:44,100
answered quite convincingly why there

783
00:30:44,100 --> 00:30:46,260
are good reasons to the net 6-4 but I

784
00:30:46,260 --> 00:30:48,000
would still like to mention that there

785
00:30:48,000 --> 00:30:49,559
are other possibilities my personal

786
00:30:49,559 --> 00:30:53,279
favorite would be to have ipv4 and IPv6

787
00:30:53,279 --> 00:30:56,039
tunnels so Michael answered quite

788
00:30:56,039 --> 00:30:59,399
convincingly that this requires a full

789
00:30:59,399 --> 00:31:02,279
ipv4 stack on the step node which might

790
00:31:02,279 --> 00:31:03,419
be a problem

791
00:31:03,419 --> 00:31:06,720
but still I'd like us to consider it and

792
00:31:06,720 --> 00:31:09,059
one thing I would also like us to

793
00:31:09,059 --> 00:31:11,220
consider is whether we really need full

794
00:31:11,220 --> 00:31:14,039
ipv4 connectivity so perhaps I'm going

795
00:31:14,039 --> 00:31:17,700
to get yelled at right now but if all we

796
00:31:17,700 --> 00:31:20,279
need is HTTP access

797
00:31:20,279 --> 00:31:24,000
wouldn't it be enough to have a sox5

798
00:31:24,000 --> 00:31:25,500
proxy

799
00:31:25,500 --> 00:31:28,919
on the stub router

800
00:31:28,919 --> 00:31:32,039
that sounds a lot more complicated than

801
00:31:32,039 --> 00:31:35,520
just having a router

802
00:31:35,520 --> 00:31:38,480
I'm not sure

803
00:31:39,799 --> 00:31:42,120
is not that complicated I mean yeah

804
00:31:42,120 --> 00:31:43,860
you're rewriting some headers but it's

805
00:31:43,860 --> 00:31:45,899
it's stateless

806
00:31:45,899 --> 00:31:49,740
um you know Nat like having an HTTP

807
00:31:49,740 --> 00:31:52,080
socks proxy that's like that's pretty

808
00:31:52,080 --> 00:31:53,940
heavy weight okay but the point I'm

809
00:31:53,940 --> 00:31:55,980
trying to make here so uh that was

810
00:31:55,980 --> 00:31:57,480
mentioned on the list

811
00:31:57,480 --> 00:31:59,760
I think I'm not alone and wanting the

812
00:31:59,760 --> 00:32:02,520
net six four stuff to be in a separate

813
00:32:02,520 --> 00:32:05,000
spec so it can be discussed separately

814
00:32:05,000 --> 00:32:08,159
of the very good very interesting and

815
00:32:08,159 --> 00:32:09,899
very good work that's in the rest of

816
00:32:09,899 --> 00:32:11,340
this document

817
00:32:11,340 --> 00:32:13,260
and I'm wondering whether you would

818
00:32:13,260 --> 00:32:15,059
consider splitting it out into a

819
00:32:15,059 --> 00:32:17,640
different document so that this can more

820
00:32:17,640 --> 00:32:21,020
easily be discussed separately

821
00:32:22,260 --> 00:32:24,419
um I mean I I think you know my

822
00:32:24,419 --> 00:32:26,580
experience with with uh you know it's a

823
00:32:26,580 --> 00:32:27,779
very common thing for people to say

824
00:32:27,779 --> 00:32:30,120
let's split the document up and my

825
00:32:30,120 --> 00:32:31,200
experience with that is that quite

826
00:32:31,200 --> 00:32:32,760
frequently what winds up happening is we

827
00:32:32,760 --> 00:32:34,320
split the document up we write several

828
00:32:34,320 --> 00:32:35,760
different documents we wind up with a

829
00:32:35,760 --> 00:32:37,980
lot of text that's fairly confusing and

830
00:32:37,980 --> 00:32:39,299
ultimately the working group says why

831
00:32:39,299 --> 00:32:40,620
don't we just like take all of these

832
00:32:40,620 --> 00:32:41,940
documents like why do we have so many

833
00:32:41,940 --> 00:32:43,320
separate documents like two years later

834
00:32:43,320 --> 00:32:44,940
when everybody's forgotten why we have

835
00:32:44,940 --> 00:32:46,980
so many separate documents why don't we

836
00:32:46,980 --> 00:32:48,720
put these documents back together and

837
00:32:48,720 --> 00:32:50,520
you know just make one document it's a

838
00:32:50,520 --> 00:32:52,740
lot simpler so I think we need to have

839
00:32:52,740 --> 00:32:54,720
an actual reason to do that and not just

840
00:32:54,720 --> 00:32:57,360
that we think that nat64 is less yummy

841
00:32:57,360 --> 00:33:01,020
than uh than you know end to end because

842
00:33:01,020 --> 00:33:02,520
you know I agree that it's less yummy

843
00:33:02,520 --> 00:33:06,110
but you know okay fair enough thank you

844
00:33:06,110 --> 00:33:09,280
[Music]

845
00:33:10,860 --> 00:33:14,159
it's good egg uh yeah just just erect on

846
00:33:14,159 --> 00:33:16,140
the previous point was mentioning uh

847
00:33:16,140 --> 00:33:18,960
maybe to have ipv4 also on the stop

848
00:33:18,960 --> 00:33:21,299
Network notes but yeah of course we have

849
00:33:21,299 --> 00:33:23,820
uh also six slope and type networks that

850
00:33:23,820 --> 00:33:26,519
we want to connect a stop networks so

851
00:33:26,519 --> 00:33:29,519
threat is one example of those yeah so

852
00:33:29,519 --> 00:33:32,519
it's not really feasible I would say to

853
00:33:32,519 --> 00:33:34,679
you know change those into supporting

854
00:33:34,679 --> 00:33:37,019
ipv4 which they don't

855
00:33:37,019 --> 00:33:40,140
so that seems not a good path I think

856
00:33:40,140 --> 00:33:42,360
but my question was actually on

857
00:33:42,360 --> 00:33:44,760
yeah the problem statement uh Ted also

858
00:33:44,760 --> 00:33:46,500
mentioned that so

859
00:33:46,500 --> 00:33:48,840
I also see sometimes in working group as

860
00:33:48,840 --> 00:33:51,720
separate problem statement document we

861
00:33:51,720 --> 00:33:53,580
don't seem to have one is there some

862
00:33:53,580 --> 00:33:55,019
sort of History

863
00:33:55,019 --> 00:33:57,659
of how it uh how it has evolved or that

864
00:33:57,659 --> 00:33:59,220
we have the problem stated in your

865
00:33:59,220 --> 00:34:01,919
document or so I mean that's that's a

866
00:34:01,919 --> 00:34:04,260
thing that that you know there's always

867
00:34:04,260 --> 00:34:05,640
a big debate about whether we need a

868
00:34:05,640 --> 00:34:07,080
problem statement document and whether

869
00:34:07,080 --> 00:34:08,580
the work group needs to publish it is

870
00:34:08,580 --> 00:34:10,199
actually the important part so we did

871
00:34:10,199 --> 00:34:11,520
actually write a problem statement

872
00:34:11,520 --> 00:34:14,280
document it expired on Monday

873
00:34:14,280 --> 00:34:16,980
um and so the question is do we actually

874
00:34:16,980 --> 00:34:19,020
need the problem statement document or

875
00:34:19,020 --> 00:34:20,879
is the text that I pulled out of the

876
00:34:20,879 --> 00:34:22,440
problem statement document and put in

877
00:34:22,440 --> 00:34:24,179
this document sufficient I don't know

878
00:34:24,179 --> 00:34:25,619
the answer to that if the working group

879
00:34:25,619 --> 00:34:27,119
wants to do a problem statement document

880
00:34:27,119 --> 00:34:29,760
we're certainly well poised to do one

881
00:34:29,760 --> 00:34:31,440
um so mark

882
00:34:31,440 --> 00:34:36,599
I'm responsible for it for that uh

883
00:34:36,599 --> 00:34:40,199
uh the problem statement was kind of all

884
00:34:40,199 --> 00:34:42,239
over the place not necessarily in the

885
00:34:42,239 --> 00:34:44,520
bad way it's just that it was

886
00:34:44,520 --> 00:34:46,520
comprehensive

887
00:34:46,520 --> 00:34:49,800
comprehensive thank you for all the

888
00:34:49,800 --> 00:34:53,639
possible cases right and uh

889
00:34:53,639 --> 00:34:56,580
um then you know to have and we

890
00:34:56,580 --> 00:34:57,839
discussed to have two different

891
00:34:57,839 --> 00:35:00,839
deliverables clearly you know as the

892
00:35:00,839 --> 00:35:03,540
simple case and the complex case for

893
00:35:03,540 --> 00:35:07,020
lack of better terms so it seems to be

894
00:35:07,020 --> 00:35:09,839
more appropriate to have a short problem

895
00:35:09,839 --> 00:35:12,359
statement for the simple case in the

896
00:35:12,359 --> 00:35:14,940
document that described the solution of

897
00:35:14,940 --> 00:35:17,099
the simple case that's okay that's the

898
00:35:17,099 --> 00:35:19,280
old

899
00:35:20,599 --> 00:35:23,280
so there is actually a problem statement

900
00:35:23,280 --> 00:35:25,619
document apart from the charter document

901
00:35:25,619 --> 00:35:29,240
okay yeah yeah okay thanks

902
00:35:30,180 --> 00:35:31,619
yeah they're into quality I think

903
00:35:31,619 --> 00:35:32,700
they're

904
00:35:32,700 --> 00:35:34,619
I mean you kind of mostly need a problem

905
00:35:34,619 --> 00:35:36,119
statement when people don't agree that

906
00:35:36,119 --> 00:35:37,320
there's a problem or they don't agree

907
00:35:37,320 --> 00:35:38,820
what the problem is I think this is

908
00:35:38,820 --> 00:35:40,320
pretty clear

909
00:35:40,320 --> 00:35:41,940
um you've got some other Tech and it

910
00:35:41,940 --> 00:35:43,560
wants to like plug into something that's

911
00:35:43,560 --> 00:35:45,119
already there and talk to the internet I

912
00:35:45,119 --> 00:35:46,680
think that's pretty pretty clear and

913
00:35:46,680 --> 00:35:48,900
useful problem to solve oh and by the

914
00:35:48,900 --> 00:35:50,880
way I mean I mentioned this to to John

915
00:35:50,880 --> 00:35:53,400
and some other conversation this is the

916
00:35:53,400 --> 00:35:54,540
first thing I've seen that might

917
00:35:54,540 --> 00:35:57,119
actually work so congratulations I mean

918
00:35:57,119 --> 00:35:59,700
it looks comprehensive it seems to have

919
00:35:59,700 --> 00:36:01,140
dotted all the eyes crossed all the

920
00:36:01,140 --> 00:36:02,880
tears considered the corner cases I'm

921
00:36:02,880 --> 00:36:04,740
very hopeful that this will tone is

922
00:36:04,740 --> 00:36:06,720
something really good so just wanted to

923
00:36:06,720 --> 00:36:09,000
say around them partially in response to

924
00:36:09,000 --> 00:36:11,460
Julius but um I think it's important to

925
00:36:11,460 --> 00:36:12,540
have

926
00:36:12,540 --> 00:36:15,119
like the connectivity bits all be in one

927
00:36:15,119 --> 00:36:17,760
Dock and to provide a comprehensive

928
00:36:17,760 --> 00:36:20,760
solution which is kind of let's say all

929
00:36:20,760 --> 00:36:23,400
mandatory in the sense that

930
00:36:23,400 --> 00:36:24,839
um obviously implementations are going

931
00:36:24,839 --> 00:36:26,640
to pick and choose the stuff that they

932
00:36:26,640 --> 00:36:28,859
build even if it says must but I think

933
00:36:28,859 --> 00:36:30,480
it's important that then the onus is on

934
00:36:30,480 --> 00:36:32,760
them to explain how their implementation

935
00:36:32,760 --> 00:36:35,040
works and interoperates right if someone

936
00:36:35,040 --> 00:36:36,540
doesn't want to implement PD because

937
00:36:36,540 --> 00:36:38,040
they're like ah this is never going to

938
00:36:38,040 --> 00:36:39,300
happen in the real world and it's on

939
00:36:39,300 --> 00:36:41,160
them to basically make the solution work

940
00:36:41,160 --> 00:36:43,079
in other cases right I think it's

941
00:36:43,079 --> 00:36:44,820
important to have one sort of State

942
00:36:44,820 --> 00:36:47,220
machine that covers all those cases and

943
00:36:47,220 --> 00:36:49,859
only one supported solution where all of

944
00:36:49,859 --> 00:36:51,240
these things are part of the protocol

945
00:36:51,240 --> 00:36:54,000
and in terms of the size of the document

946
00:36:54,000 --> 00:36:55,500
yeah I mean I think if we really do want

947
00:36:55,500 --> 00:36:58,140
to split up I would very much advise

948
00:36:58,140 --> 00:37:00,000
again splitting up you know things that

949
00:37:00,000 --> 00:37:02,760
like could be added on later it's going

950
00:37:02,760 --> 00:37:04,800
to result in bad interoperability and

951
00:37:04,800 --> 00:37:07,020
like hard to debug instead you know if

952
00:37:07,020 --> 00:37:08,579
we want to split something up yeah put

953
00:37:08,579 --> 00:37:10,560
put the service Discovery bits somewhere

954
00:37:10,560 --> 00:37:11,940
else and put the connectivity bits all

955
00:37:11,940 --> 00:37:14,339
in one doc and they will contain Asics

956
00:37:14,339 --> 00:37:16,260
for a pde and everything and the RAS and

957
00:37:16,260 --> 00:37:18,660
everything right so but I don't think

958
00:37:18,660 --> 00:37:20,099
you necessarily have to split it up

959
00:37:20,099 --> 00:37:21,420
that's sort of you know just something

960
00:37:21,420 --> 00:37:24,119
for the working group to do inside

961
00:37:24,119 --> 00:37:26,480
okay

962
00:37:29,940 --> 00:37:33,599
looks like we have no more questions all

963
00:37:33,599 --> 00:37:37,760
right I will defer to Pascal then yep

964
00:37:48,420 --> 00:37:50,900
just

965
00:37:56,280 --> 00:38:00,300
so this is Pascal from Cisco and um I'm

966
00:38:00,300 --> 00:38:03,000
talking about a document which is being

967
00:38:03,000 --> 00:38:04,859
proposed at six flow so it's not a

968
00:38:04,859 --> 00:38:07,260
document for this working group but what

969
00:38:07,260 --> 00:38:08,820
is being discussed in this document

970
00:38:08,820 --> 00:38:12,599
could be a tool in the toolbox that you

971
00:38:12,599 --> 00:38:15,180
might decide to use in building your

972
00:38:15,180 --> 00:38:17,520
solution certainly it's not a

973
00:38:17,520 --> 00:38:19,500
comprehensive solution like a document

974
00:38:19,500 --> 00:38:22,440
that you're doing but it's it's one

975
00:38:22,440 --> 00:38:24,359
element that could be considered in in

976
00:38:24,359 --> 00:38:25,619
the solution

977
00:38:25,619 --> 00:38:27,119
so

978
00:38:27,119 --> 00:38:29,280
okay

979
00:38:29,280 --> 00:38:31,079
there is there is a long long history

980
00:38:31,079 --> 00:38:33,480
behind what uh I'm going to present to

981
00:38:33,480 --> 00:38:34,200
you

982
00:38:34,200 --> 00:38:37,500
uh 15 years ago pretty much we we looked

983
00:38:37,500 --> 00:38:39,960
at the concept of iot and tried to

984
00:38:39,960 --> 00:38:41,839
figure how we could run uh internet

985
00:38:41,839 --> 00:38:45,359
protocols on battery devices

986
00:38:45,359 --> 00:38:48,720
and that happened to to be very very

987
00:38:48,720 --> 00:38:51,240
challenging because the way we designed

988
00:38:51,240 --> 00:38:54,180
protocols at the time was not considered

989
00:38:54,180 --> 00:38:55,560
for energy

990
00:38:55,560 --> 00:38:58,980
and so we had to look and over the time

991
00:38:58,980 --> 00:39:01,859
learn a good number of lessons on how

992
00:39:01,859 --> 00:39:03,599
effectively we could turn those

993
00:39:03,599 --> 00:39:06,300
protocols into something that could

994
00:39:06,300 --> 00:39:09,720
reduce the the energy consumption and

995
00:39:09,720 --> 00:39:11,400
the first part the first thing that we

996
00:39:11,400 --> 00:39:13,140
found was that the use of broadcast was

997
00:39:13,140 --> 00:39:16,020
a killer so we

998
00:39:16,020 --> 00:39:19,619
we had to separate the broadcast domain

999
00:39:19,619 --> 00:39:23,520
the concept of Links at the layer 2 with

1000
00:39:23,520 --> 00:39:26,400
what we use for subnetting and IP Links

1001
00:39:26,400 --> 00:39:30,300
at layer 3. and doing that we found that

1002
00:39:30,300 --> 00:39:34,020
we are not a need to use routing uh

1003
00:39:34,020 --> 00:39:35,520
pretty much everywhere in what we're

1004
00:39:35,520 --> 00:39:38,280
doing but also that we could not choose

1005
00:39:38,280 --> 00:39:41,700
neighbor Discovery as it was as a

1006
00:39:41,700 --> 00:39:45,900
reliable mechanism to learn which IP

1007
00:39:45,900 --> 00:39:48,119
addresses were present in the network so

1008
00:39:48,119 --> 00:39:50,160
we could inject them in the routing if

1009
00:39:50,160 --> 00:39:51,599
we don't have a deterministic knowledge

1010
00:39:51,599 --> 00:39:54,060
of which IP is where then there is no

1011
00:39:54,060 --> 00:39:56,640
way to inject that

1012
00:39:56,640 --> 00:39:59,099
either in an iot Network for routing or

1013
00:39:59,099 --> 00:40:00,660
any VPN or whatever

1014
00:40:00,660 --> 00:40:03,599
so we we worked on that we we looked at

1015
00:40:03,599 --> 00:40:05,339
neighbor Discovery and we considered how

1016
00:40:05,339 --> 00:40:07,619
it could be done in such a way that

1017
00:40:07,619 --> 00:40:08,880
effectively we could know

1018
00:40:08,880 --> 00:40:11,339
deterministically which addresses were

1019
00:40:11,339 --> 00:40:14,820
we we could not choose slack because it

1020
00:40:14,820 --> 00:40:17,520
relies on broadcast but we still needed

1021
00:40:17,520 --> 00:40:19,859
address of the configuration so we

1022
00:40:19,859 --> 00:40:21,780
defined something we could call stateful

1023
00:40:21,780 --> 00:40:24,060
address to configuration started with

1024
00:40:24,060 --> 00:40:27,780
RFC 6725 learned a few lessons

1025
00:40:27,780 --> 00:40:31,500
and ended up with rfch 505 so RFC 8505

1026
00:40:31,500 --> 00:40:34,500
is effectively a contract between a host

1027
00:40:34,500 --> 00:40:36,780
and a router which will guarantee both

1028
00:40:36,780 --> 00:40:39,180
parties that they agree that this

1029
00:40:39,180 --> 00:40:41,640
address is usable for the host will not

1030
00:40:41,640 --> 00:40:43,740
be stolen by somebody else

1031
00:40:43,740 --> 00:40:46,500
and from the network party perspective

1032
00:40:46,500 --> 00:40:49,800
that it's not exceeding the capacities

1033
00:40:49,800 --> 00:40:51,480
of the network

1034
00:40:51,480 --> 00:40:54,359
and then both hands basically provide

1035
00:40:54,359 --> 00:40:57,240
some information it's kind of a contract

1036
00:40:57,240 --> 00:41:00,420
after that we we built a number of other

1037
00:41:00,420 --> 00:41:04,200
documents like uh rsc8929 which is how

1038
00:41:04,200 --> 00:41:06,119
you do ND proxy based on that soon as

1039
00:41:06,119 --> 00:41:07,440
you know data mystically which address

1040
00:41:07,440 --> 00:41:09,540
is on the network you can do any proxy

1041
00:41:09,540 --> 00:41:11,160
for it

1042
00:41:11,160 --> 00:41:14,520
um 8545 is not limited 20 proxies an

1043
00:41:14,520 --> 00:41:17,280
abstract contract between a host and a

1044
00:41:17,280 --> 00:41:20,339
router in that contract the host can say

1045
00:41:20,339 --> 00:41:22,800
Please Mr Roto whatever you're doing for

1046
00:41:22,800 --> 00:41:24,960
writing please do it for me

1047
00:41:24,960 --> 00:41:27,420
so that can be a deep proxy in the case

1048
00:41:27,420 --> 00:41:31,260
of rsc9010 it's going to be a repo it

1049
00:41:31,260 --> 00:41:33,480
can be a rift I mean it's there is a

1050
00:41:33,480 --> 00:41:35,520
draft for adpn as well as soon as you

1051
00:41:35,520 --> 00:41:37,200
have a deterministic knowledge of the IP

1052
00:41:37,200 --> 00:41:39,660
address now the routing can manipulate

1053
00:41:39,660 --> 00:41:41,779
it

1054
00:41:42,000 --> 00:41:45,480
um the other thing that was not possible

1055
00:41:45,480 --> 00:41:48,119
with with ND was securing this this

1056
00:41:48,119 --> 00:41:50,579
contract wanted to make sure that if

1057
00:41:50,579 --> 00:41:52,200
somebody else comes in somewhere and

1058
00:41:52,200 --> 00:41:53,760
says hey I'm him

1059
00:41:53,760 --> 00:41:55,500
there was no way you would get the

1060
00:41:55,500 --> 00:41:57,119
ownership of the address no way to get

1061
00:41:57,119 --> 00:41:59,700
the address stolen so we are very c8928

1062
00:41:59,700 --> 00:42:04,859
which is basically uh associating a

1063
00:42:04,859 --> 00:42:06,599
something derived from a private key

1064
00:42:06,599 --> 00:42:10,140
basically so some crypto mechanism that

1065
00:42:10,140 --> 00:42:11,640
will

1066
00:42:11,640 --> 00:42:14,220
that basically does not in the pki to

1067
00:42:14,220 --> 00:42:16,859
start with it is uh just a pair of keys

1068
00:42:16,859 --> 00:42:18,359
that the device will Auto conf at the

1069
00:42:18,359 --> 00:42:20,460
same time it took off the address but

1070
00:42:20,460 --> 00:42:22,020
then the infrastructure will associate

1071
00:42:22,020 --> 00:42:23,880
the two

1072
00:42:23,880 --> 00:42:26,099
and uh another thing they have to say

1073
00:42:26,099 --> 00:42:28,740
about those things is there is a

1074
00:42:28,740 --> 00:42:32,099
abstract registrar which is not the nssd

1075
00:42:32,099 --> 00:42:34,440
because we design without it but it is

1076
00:42:34,440 --> 00:42:37,440
it is an abstract registrar which knows

1077
00:42:37,440 --> 00:42:39,300
exactly which addresses are present on

1078
00:42:39,300 --> 00:42:40,400
this network

1079
00:42:40,400 --> 00:42:43,200
and which cryptographic token is

1080
00:42:43,200 --> 00:42:45,540
associated with those addresses

1081
00:42:45,540 --> 00:42:48,240
the way this abstract registrar is

1082
00:42:48,240 --> 00:42:50,400
implemented depends on the use case in

1083
00:42:50,400 --> 00:42:53,099
the case of evpn it is bgp itself right

1084
00:42:53,099 --> 00:42:55,079
the whole infrast the whole information

1085
00:42:55,079 --> 00:42:58,319
is replicated in each in each P

1086
00:42:58,319 --> 00:43:01,020
basically they know whether the the

1087
00:43:01,020 --> 00:43:03,119
vxlance tunnels are they know which

1088
00:43:03,119 --> 00:43:04,560
addresses are at the end of the tunnels

1089
00:43:04,560 --> 00:43:06,180
they also know the cryptographic tokens

1090
00:43:06,180 --> 00:43:07,980
associated with those choices

1091
00:43:07,980 --> 00:43:12,119
in the case of 8929 it's going to be

1092
00:43:12,119 --> 00:43:14,460
um there is a local knowledge by the

1093
00:43:14,460 --> 00:43:16,319
proximity of the addresses that it

1094
00:43:16,319 --> 00:43:19,440
proxies for and overall 6 lbr the server

1095
00:43:19,440 --> 00:43:23,460
or database is the distribution of all

1096
00:43:23,460 --> 00:43:25,460
those proxy information

1097
00:43:25,460 --> 00:43:28,020
across the access point with doing proxy

1098
00:43:28,020 --> 00:43:29,099
voices

1099
00:43:29,099 --> 00:43:31,800
if you're doing uh repo we expect

1100
00:43:31,800 --> 00:43:33,300
definitely some form of central

1101
00:43:33,300 --> 00:43:36,359
registrar uh to maintain that thing

1102
00:43:36,359 --> 00:43:38,339
something like list for instance

1103
00:43:38,339 --> 00:43:40,800
so the registrar itself is very abstract

1104
00:43:40,800 --> 00:43:43,800
there isn't if if you guys would decide

1105
00:43:43,800 --> 00:43:46,740
this dnssd it could be the nssd just to

1106
00:43:46,740 --> 00:43:48,960
say okay they are not imposing anyway

1107
00:43:48,960 --> 00:43:52,319
it's an abstract thing so the family

1108
00:43:52,319 --> 00:43:55,500
keeps being extended and the reason why

1109
00:43:55,500 --> 00:43:56,579
is

1110
00:43:56,579 --> 00:43:59,040
those protocols that we Define six slope

1111
00:43:59,040 --> 00:44:01,140
and then the repo extra are effectively

1112
00:44:01,140 --> 00:44:03,839
deployed in the con in the context of

1113
00:44:03,839 --> 00:44:06,540
smart grid we managed to build subnets

1114
00:44:06,540 --> 00:44:08,520
with thousands of nodes and they are

1115
00:44:08,520 --> 00:44:11,119
effectively deployed and running today

1116
00:44:11,119 --> 00:44:12,660
and

1117
00:44:12,660 --> 00:44:15,780
um the the alliance the equivalence of

1118
00:44:15,780 --> 00:44:17,700
the Wi-Fi Alliance that does that is

1119
00:44:17,700 --> 00:44:19,200
called wise Sun

1120
00:44:19,200 --> 00:44:21,420
and why Sun decided that they needed

1121
00:44:21,420 --> 00:44:22,740
multicast

1122
00:44:22,740 --> 00:44:23,880
so

1123
00:44:23,880 --> 00:44:26,460
I try for five we don't need MLD we

1124
00:44:26,460 --> 00:44:28,980
don't do any form of solicit dot

1125
00:44:28,980 --> 00:44:30,780
multicast or anything like that we we

1126
00:44:30,780 --> 00:44:33,000
are all based on

1127
00:44:33,000 --> 00:44:36,240
uh stateful knowledge of every address

1128
00:44:36,240 --> 00:44:37,619
in the network

1129
00:44:37,619 --> 00:44:41,099
so there is no need to pull from solicit

1130
00:44:41,099 --> 00:44:43,800
non-multicas because there is no uh

1131
00:44:43,800 --> 00:44:45,660
lookup in the end there is no uh

1132
00:44:45,660 --> 00:44:47,880
discovery

1133
00:44:47,880 --> 00:44:49,440
now

1134
00:44:49,440 --> 00:44:52,680
so still they discovered they needed MLG

1135
00:44:52,680 --> 00:44:54,660
because they wanted some some degree of

1136
00:44:54,660 --> 00:44:58,260
uh multicast and

1137
00:44:58,260 --> 00:44:59,640
for the same reason they didn't want

1138
00:44:59,640 --> 00:45:02,700
broadcast for uh unique snd basically

1139
00:45:02,700 --> 00:45:06,660
they could not uh for afford the

1140
00:45:06,660 --> 00:45:08,760
broadcasts which are coming with MLT

1141
00:45:08,760 --> 00:45:09,780
either

1142
00:45:09,780 --> 00:45:12,000
so what we decided to do with this

1143
00:45:12,000 --> 00:45:14,700
multicast registration thing is to use

1144
00:45:14,700 --> 00:45:17,040
the exact same mechanism to proactively

1145
00:45:17,040 --> 00:45:19,980
tell the network hey I'm subscribing to

1146
00:45:19,980 --> 00:45:22,020
this address as opposed to having the

1147
00:45:22,020 --> 00:45:24,480
network pool

1148
00:45:24,480 --> 00:45:26,700
as you design for low power you need to

1149
00:45:26,700 --> 00:45:28,200
realize that those low power devices are

1150
00:45:28,200 --> 00:45:30,839
sleeping a lot you have to let the low

1151
00:45:30,839 --> 00:45:33,839
power devices control when they wake

1152
00:45:33,839 --> 00:45:36,119
and it's on their demand that something

1153
00:45:36,119 --> 00:45:40,079
can happen when those devices wake up

1154
00:45:40,079 --> 00:45:42,540
so for the same reason we register a

1155
00:45:42,540 --> 00:45:45,480
unicast when the nodes wake up they will

1156
00:45:45,480 --> 00:45:47,520
register multicast as well and we built

1157
00:45:47,520 --> 00:45:50,040
this multicast registration

1158
00:45:50,040 --> 00:45:52,079
since we have this Global Knowledge of

1159
00:45:52,079 --> 00:45:54,060
every address then the concept of

1160
00:45:54,060 --> 00:45:55,680
broadcasting for lookup doesn't make any

1161
00:45:55,680 --> 00:45:58,020
sense either so we have this unicast

1162
00:45:58,020 --> 00:45:59,940
lookup which is another abstraction on

1163
00:45:59,940 --> 00:46:02,819
how you go and consult the 6lbr to

1164
00:46:02,819 --> 00:46:04,980
basically tell you which addresses exist

1165
00:46:04,980 --> 00:46:06,780
and if you have a broadcast domain we

1166
00:46:06,780 --> 00:46:08,460
can reach them

1167
00:46:08,460 --> 00:46:10,440
now there is a new member in this family

1168
00:46:10,440 --> 00:46:13,200
we introduced it to iutfs ago in one of

1169
00:46:13,200 --> 00:46:15,660
30 in 113

1170
00:46:15,660 --> 00:46:18,359
um and the concept here is when we build

1171
00:46:18,359 --> 00:46:20,640
those those Ripple very wide Ripple

1172
00:46:20,640 --> 00:46:24,119
networks we never want them to be

1173
00:46:24,119 --> 00:46:26,339
Transit Network we didn't never thought

1174
00:46:26,339 --> 00:46:29,520
repo as a Transit Network thing and it

1175
00:46:29,520 --> 00:46:31,140
could become such if you have a need

1176
00:46:31,140 --> 00:46:32,700
like that there are all the mechanisms

1177
00:46:32,700 --> 00:46:36,119
for it but it was never thought to be a

1178
00:46:36,119 --> 00:46:37,980
Transit Network because it's an iot in

1179
00:46:37,980 --> 00:46:39,900
typically an iot Network now it's a

1180
00:46:39,900 --> 00:46:42,839
layer 3 protocol it's not limited to iot

1181
00:46:42,839 --> 00:46:44,880
Applications but it's still thought as

1182
00:46:44,880 --> 00:46:46,380
an iot protocol

1183
00:46:46,380 --> 00:46:48,960
so we we don't think of it as a Transit

1184
00:46:48,960 --> 00:46:50,640
doesn't mean we don't have such a thing

1185
00:46:50,640 --> 00:46:53,640
as a non- uh not so stubby area that

1186
00:46:53,640 --> 00:46:56,060
that could exist

1187
00:46:56,060 --> 00:47:00,060
rfcc's 550 was designed with the concept

1188
00:47:00,060 --> 00:47:02,520
of external rods in mind

1189
00:47:02,520 --> 00:47:05,880
so there is there is a need for

1190
00:47:05,880 --> 00:47:08,880
connecting nonsense study areas to repo

1191
00:47:08,880 --> 00:47:11,220
it was recognized from the start

1192
00:47:11,220 --> 00:47:14,118
next slide please

1193
00:47:16,920 --> 00:47:19,560
so the question is

1194
00:47:19,560 --> 00:47:22,859
would it make sense to do the exact same

1195
00:47:22,859 --> 00:47:25,380
thing as we did for any cast multicast

1196
00:47:25,380 --> 00:47:28,200
and unicast addresses but for prefixes

1197
00:47:28,200 --> 00:47:31,619
as well so as we can advertise in a

1198
00:47:31,619 --> 00:47:34,619
protocol independent fashion the direct

1199
00:47:34,619 --> 00:47:37,140
reachability of one prefix are supposed

1200
00:47:37,140 --> 00:47:39,599
to say hey I have this address if you

1201
00:47:39,599 --> 00:47:41,579
need to contact this address come to me

1202
00:47:41,579 --> 00:47:43,440
I'm directly connected to its my address

1203
00:47:43,440 --> 00:47:45,660
could we now say the same thing for a

1204
00:47:45,660 --> 00:47:47,640
slash something

1205
00:47:47,640 --> 00:47:50,040
first usage obviously is I have a slash

1206
00:47:50,040 --> 00:47:52,980
64. I'm a host with stack 642 to The

1207
00:47:52,980 --> 00:47:53,640
Host

1208
00:47:53,640 --> 00:47:56,400
could I just tell my ripple Network hey

1209
00:47:56,400 --> 00:47:58,980
I have this slash 64. inject that for me

1210
00:47:58,980 --> 00:48:00,300
please

1211
00:48:00,300 --> 00:48:03,119
and then it could also be redistribution

1212
00:48:03,119 --> 00:48:05,460
when you do rotting protocols one thing

1213
00:48:05,460 --> 00:48:08,280
you're used to is hey you have a prefix

1214
00:48:08,280 --> 00:48:11,099
behind you which is enrolled by a other

1215
00:48:11,099 --> 00:48:12,480
protocol you don't really know where

1216
00:48:12,480 --> 00:48:14,640
that protocol is but you know that you

1217
00:48:14,640 --> 00:48:17,160
can reach that prefix you're connected

1218
00:48:17,160 --> 00:48:19,380
to it you don't need rotting with cost

1219
00:48:19,380 --> 00:48:21,480
and multi-hop you're directly connected

1220
00:48:21,480 --> 00:48:24,119
to it so guys if you want to reach that

1221
00:48:24,119 --> 00:48:26,760
prefix pass the packets to me that's

1222
00:48:26,760 --> 00:48:29,280
pretty much what the air flag does in

1223
00:48:29,280 --> 00:48:32,579
RFC 8505 so we this is a very very

1224
00:48:32,579 --> 00:48:34,380
simple graph which basically says hey

1225
00:48:34,380 --> 00:48:36,900
now it's not just an address it can be a

1226
00:48:36,900 --> 00:48:38,280
slash something

1227
00:48:38,280 --> 00:48:41,339
still connected to me I own him

1228
00:48:41,339 --> 00:48:43,380
I can be your next stop next slide

1229
00:48:43,380 --> 00:48:44,880
please

1230
00:48:44,880 --> 00:48:47,579
so this is this is the case of Ripple so

1231
00:48:47,579 --> 00:48:50,940
we have this RFC 9010 which basically

1232
00:48:50,940 --> 00:48:53,880
says you've got this guy Mr L doesn't

1233
00:48:53,880 --> 00:48:56,700
speak repo he doesn't care that the

1234
00:48:56,700 --> 00:48:59,099
network is repo could be VPN semi

1235
00:48:59,099 --> 00:49:01,020
interface completely abstract

1236
00:49:01,020 --> 00:49:04,319
all this says is hey I have this address

1237
00:49:04,319 --> 00:49:06,420
and there is there a bit if you're doing

1238
00:49:06,420 --> 00:49:09,240
any form of writing do it for me please

1239
00:49:09,240 --> 00:49:11,760
because I won't be doing it myself so if

1240
00:49:11,760 --> 00:49:13,680
it's not the L participates to Ripple it

1241
00:49:13,680 --> 00:49:16,140
will not set the orbit but if the node

1242
00:49:16,140 --> 00:49:18,420
doesn't participate to report and hopes

1243
00:49:18,420 --> 00:49:19,980
that the router will render the service

1244
00:49:19,980 --> 00:49:22,800
then it will set the orbit write for me

1245
00:49:22,800 --> 00:49:23,880
please

1246
00:49:23,880 --> 00:49:25,859
and the result is what you see here when

1247
00:49:25,859 --> 00:49:27,900
the infrastructure is non-storring is

1248
00:49:27,900 --> 00:49:30,839
basically the the router C which is the

1249
00:49:30,839 --> 00:49:32,819
router to which this device is directly

1250
00:49:32,819 --> 00:49:35,400
connected will basically inject the rod

1251
00:49:35,400 --> 00:49:38,400
into repo and the packets will flow back

1252
00:49:38,400 --> 00:49:41,220
um the H5 is acknowledged so the host is

1253
00:49:41,220 --> 00:49:43,020
certain when the acknowledgment comes

1254
00:49:43,020 --> 00:49:45,060
back that this address will be processed

1255
00:49:45,060 --> 00:49:47,160
and inserted into the routing so you is

1256
00:49:47,160 --> 00:49:48,599
it is certain that it will get the

1257
00:49:48,599 --> 00:49:52,579
traffic back next slide please

1258
00:49:52,680 --> 00:49:56,000
so well next slide

1259
00:49:56,160 --> 00:49:58,680
what we don't have today is the

1260
00:49:58,680 --> 00:50:01,319
equivalent of nine one of nine zero one

1261
00:50:01,319 --> 00:50:04,380
zero where instead of saying a I have

1262
00:50:04,380 --> 00:50:06,300
this address you would like to say a I

1263
00:50:06,300 --> 00:50:08,040
have this prefix

1264
00:50:08,040 --> 00:50:10,859
okay so again what we are doing is in

1265
00:50:10,859 --> 00:50:13,200
this interface is completely agnostic to

1266
00:50:13,200 --> 00:50:15,300
whatever routing is happening up there

1267
00:50:15,300 --> 00:50:17,640
it's just a matter of saying through a

1268
00:50:17,640 --> 00:50:19,440
simple ND message

1269
00:50:19,440 --> 00:50:22,440
I'm this guy I have this slash 64 or I'm

1270
00:50:22,440 --> 00:50:24,480
directly connected to that network if

1271
00:50:24,480 --> 00:50:26,160
you have packets for that Network you

1272
00:50:26,160 --> 00:50:28,500
can trust me pass it to me there won't

1273
00:50:28,500 --> 00:50:30,060
be a loop because I'm connected to it

1274
00:50:30,060 --> 00:50:32,660
it's a stub

1275
00:50:33,119 --> 00:50:35,819
next slide please

1276
00:50:35,819 --> 00:50:38,240
so um

1277
00:50:38,240 --> 00:50:41,819
since I followed your work and and I saw

1278
00:50:41,819 --> 00:50:43,380
that this group was being from I thought

1279
00:50:43,380 --> 00:50:46,680
hey let's let us at least share to see

1280
00:50:46,680 --> 00:50:48,119
if there are things we could do in

1281
00:50:48,119 --> 00:50:49,619
common or if you would be interested in

1282
00:50:49,619 --> 00:50:51,540
in extending or using what we are doing

1283
00:50:51,540 --> 00:50:54,420
since we are beginning this work uh it's

1284
00:50:54,420 --> 00:50:56,460
completely elastic and uh if you would

1285
00:50:56,460 --> 00:50:58,079
need it and and could use it in your

1286
00:50:58,079 --> 00:50:59,700
solution and you need some changes on

1287
00:50:59,700 --> 00:51:01,920
some adaptation uh

1288
00:51:01,920 --> 00:51:04,079
it's completely easy at this state of

1289
00:51:04,079 --> 00:51:07,319
time so I basically wrote two sections

1290
00:51:07,319 --> 00:51:09,859
in this document to show two use cases

1291
00:51:09,859 --> 00:51:12,900
that seem to to map what you're doing

1292
00:51:12,900 --> 00:51:15,180
and the first use case is you get a

1293
00:51:15,180 --> 00:51:17,220
single link here which is a share so so

1294
00:51:17,220 --> 00:51:18,599
we have what we call a shared link

1295
00:51:18,599 --> 00:51:20,940
basically very ancient way of doing

1296
00:51:20,940 --> 00:51:22,680
things well you have more than one

1297
00:51:22,680 --> 00:51:25,500
prefix on this shared link and you've

1298
00:51:25,500 --> 00:51:28,980
basically had this this 6lr2 which is a

1299
00:51:28,980 --> 00:51:31,380
staborator which knows about prefix 2

1300
00:51:31,380 --> 00:51:33,300
could be a phone connected to to the

1301
00:51:33,300 --> 00:51:34,500
home network

1302
00:51:34,500 --> 00:51:37,920
and P1 in yellow is really the guy

1303
00:51:37,920 --> 00:51:39,540
connecting to the internet and all you

1304
00:51:39,540 --> 00:51:42,599
want to do is a 6lr2 on the right to

1305
00:51:42,599 --> 00:51:45,420
tell P1 a I have this prefix

1306
00:51:45,420 --> 00:51:47,400
and so what can happen on a network like

1307
00:51:47,400 --> 00:51:51,000
this is uh once the P1 knows about P2

1308
00:51:51,000 --> 00:51:53,400
basically it can install a route to to

1309
00:51:53,400 --> 00:51:56,300
the prefix

1310
00:51:56,359 --> 00:52:00,200
prefix and send the traffic and if if

1311
00:52:00,200 --> 00:52:02,640
P2 finds the traffic down same link you

1312
00:52:02,640 --> 00:52:04,500
can always use a redirect to optimize

1313
00:52:04,500 --> 00:52:07,020
the path it's if that's desired next

1314
00:52:07,020 --> 00:52:09,500
slide please

1315
00:52:11,040 --> 00:52:13,380
so so another case but it really works

1316
00:52:13,380 --> 00:52:16,319
similarly is is if 6lr2 is actually has

1317
00:52:16,319 --> 00:52:18,599
two interfaces one thread and one

1318
00:52:18,599 --> 00:52:21,960
Ethernet or whatever else and in this

1319
00:52:21,960 --> 00:52:23,220
case

1320
00:52:23,220 --> 00:52:25,559
um you would basically uh in the same

1321
00:52:25,559 --> 00:52:27,240
way register the packet and the packets

1322
00:52:27,240 --> 00:52:28,800
would be routed but that would never be

1323
00:52:28,800 --> 00:52:30,780
a redirect

1324
00:52:30,780 --> 00:52:32,579
another thing that could happen is if

1325
00:52:32,579 --> 00:52:34,020
you have an IP network up there for

1326
00:52:34,020 --> 00:52:36,540
instance this is an industrial plant you

1327
00:52:36,540 --> 00:52:39,480
could also decide if the arc bit is set

1328
00:52:39,480 --> 00:52:41,700
remember this is controlled by the orbit

1329
00:52:41,700 --> 00:52:44,220
if the orbit is set and there is ospf on

1330
00:52:44,220 --> 00:52:46,319
the right you could always make it so

1331
00:52:46,319 --> 00:52:49,559
that the prefix in orange or the prefix

1332
00:52:49,559 --> 00:52:52,800
uh you see it here I think this is

1333
00:52:52,800 --> 00:52:54,260
yellow

1334
00:52:54,260 --> 00:52:57,420
well anyway uh you could decide that

1335
00:52:57,420 --> 00:52:58,559
they are injected or not this is

1336
00:52:58,559 --> 00:53:00,059
controlled by the protocol there is this

1337
00:53:00,059 --> 00:53:03,420
orbit which says rod for me please right

1338
00:53:03,420 --> 00:53:06,780
so all this is in the specification

1339
00:53:06,780 --> 00:53:08,700
next slide please and it's a very very

1340
00:53:08,700 --> 00:53:12,780
stupid uh extension to h505 just the

1341
00:53:12,780 --> 00:53:16,980
capability to to uh expose a uh prefix

1342
00:53:16,980 --> 00:53:19,020
Lux basically

1343
00:53:19,020 --> 00:53:20,940
now there is always there is also the

1344
00:53:20,940 --> 00:53:22,319
case and this is more for cloud

1345
00:53:22,319 --> 00:53:24,059
application remember I told you you can

1346
00:53:24,059 --> 00:53:25,980
redistribute it 505 in anything you like

1347
00:53:25,980 --> 00:53:27,780
can be VPN there is a big draft which

1348
00:53:27,780 --> 00:53:30,660
explains how that works by vpm when in a

1349
00:53:30,660 --> 00:53:32,400
case like this knowing that kubernetes

1350
00:53:32,400 --> 00:53:34,680
mostly works for V4 V6 is now available

1351
00:53:34,680 --> 00:53:37,740
but it mostly works for V4 and you know

1352
00:53:37,740 --> 00:53:39,960
we do all those overlays and games we

1353
00:53:39,960 --> 00:53:41,819
could also do a flat V6

1354
00:53:41,819 --> 00:53:44,220
and if we do a flat V6 basically we

1355
00:53:44,220 --> 00:53:48,660
provide this usual 96 96 for a given a

1356
00:53:48,660 --> 00:53:50,640
private Network and

1357
00:53:50,640 --> 00:53:54,599
we basically replace IP and IP by ipv4

1358
00:53:54,599 --> 00:53:57,599
in IPv6 address so we replace a tunnel

1359
00:53:57,599 --> 00:53:59,640
by an address inside the address and we

1360
00:53:59,640 --> 00:54:01,440
get pretty much the same result

1361
00:54:01,440 --> 00:54:02,460
so

1362
00:54:02,460 --> 00:54:07,680
the way 8505 works today is what we call

1363
00:54:07,680 --> 00:54:10,200
the arrow option which is placed in DNS

1364
00:54:10,200 --> 00:54:12,660
so the host sends an NS message to the

1365
00:54:12,660 --> 00:54:14,520
router say hey I'd like to use this

1366
00:54:14,520 --> 00:54:17,160
address I have autographed it it comes

1367
00:54:17,160 --> 00:54:18,540
from the sky you don't have to know how

1368
00:54:18,540 --> 00:54:20,880
I built it but I would like to be using

1369
00:54:20,880 --> 00:54:22,619
it and the router says fine it's not a

1370
00:54:22,619 --> 00:54:24,480
duplicate you can have it

1371
00:54:24,480 --> 00:54:27,599
if we do it for prefix do we still want

1372
00:54:27,599 --> 00:54:31,020
to use NS would we like to use arise to

1373
00:54:31,020 --> 00:54:33,420
carry the arrow should we still call it

1374
00:54:33,420 --> 00:54:35,099
a row since our romance address

1375
00:54:35,099 --> 00:54:39,540
registration should it be sros tab uh

1376
00:54:39,540 --> 00:54:42,780
step prefix or whatever Steps step

1377
00:54:42,780 --> 00:54:44,400
registration option

1378
00:54:44,400 --> 00:54:46,319
and we we there are things that we need

1379
00:54:46,319 --> 00:54:48,119
to discuss just about naming and which

1380
00:54:48,119 --> 00:54:50,220
message should carry this thing

1381
00:54:50,220 --> 00:54:51,900
and this message that you see on the

1382
00:54:51,900 --> 00:54:54,780
right is how is the abstract way of

1383
00:54:54,780 --> 00:54:57,540
talking to the nssd it's how you go and

1384
00:54:57,540 --> 00:55:00,900
register and say hey I have this prefix

1385
00:55:00,900 --> 00:55:03,059
next slide please and then again the

1386
00:55:03,059 --> 00:55:05,099
prefix can be obtained by you know the

1387
00:55:05,099 --> 00:55:06,839
httpd or whatever else and that's

1388
00:55:06,839 --> 00:55:08,819
something we need to discuss

1389
00:55:08,819 --> 00:55:11,400
uh What Becomes of that that's the nasty

1390
00:55:11,400 --> 00:55:13,680
question because remember for address we

1391
00:55:13,680 --> 00:55:15,960
expect Auto configuration so we expl we

1392
00:55:15,960 --> 00:55:17,099
expect to do

1393
00:55:17,099 --> 00:55:19,859
Auto conference as usual and then you go

1394
00:55:19,859 --> 00:55:21,900
to this registrar through your router

1395
00:55:21,900 --> 00:55:23,700
the router will consult the registrar

1396
00:55:23,700 --> 00:55:25,859
like your bgp table and look whether

1397
00:55:25,859 --> 00:55:27,599
this address already in use or not and

1398
00:55:27,599 --> 00:55:30,180
if it's already in use 8505 comes back

1399
00:55:30,180 --> 00:55:32,400
with a status say a duplicate you cannot

1400
00:55:32,400 --> 00:55:34,760
have it

1401
00:55:34,920 --> 00:55:37,859
could we auto-conf prefix that's part of

1402
00:55:37,859 --> 00:55:40,020
the name of your working group would you

1403
00:55:40,020 --> 00:55:42,300
really like to do a tokens like not even

1404
00:55:42,300 --> 00:55:45,000
PD but really autokov

1405
00:55:45,000 --> 00:55:47,460
so you you basically expose a slash 48

1406
00:55:47,460 --> 00:55:49,559
in your arrays

1407
00:55:49,559 --> 00:55:52,680
and the guy picks just an arbitrary two

1408
00:55:52,680 --> 00:55:53,940
bytes

1409
00:55:53,940 --> 00:55:56,579
and registers that and since we can do

1410
00:55:56,579 --> 00:55:58,319
it for addresses we could also say Hey

1411
00:55:58,319 --> 00:56:00,599
you can have it nobody registered it or

1412
00:56:00,599 --> 00:56:01,920
you cannot have it

1413
00:56:01,920 --> 00:56:03,660
for that reason

1414
00:56:03,660 --> 00:56:06,000
and you could even have some policies in

1415
00:56:06,000 --> 00:56:07,680
that abstract registrar which talks

1416
00:56:07,680 --> 00:56:08,540
about

1417
00:56:08,540 --> 00:56:10,800
subnetting and subnetting and subnetting

1418
00:56:10,800 --> 00:56:13,940
I mean everything now is open

1419
00:56:14,339 --> 00:56:16,559
if it's not already done if the policies

1420
00:56:16,559 --> 00:56:19,200
are lows yes have it

1421
00:56:19,200 --> 00:56:20,700
because we always think in terms and

1422
00:56:20,700 --> 00:56:22,079
that was a discussion in terms of the

1423
00:56:22,079 --> 00:56:23,460
httpd

1424
00:56:23,460 --> 00:56:26,040
does it really have to to be a PD can't

1425
00:56:26,040 --> 00:56:29,000
we Auto calls

1426
00:56:29,880 --> 00:56:31,680
so so that that's something that the

1427
00:56:31,680 --> 00:56:33,839
draft does not really discuss but it's

1428
00:56:33,839 --> 00:56:36,119
completely behind it since we have a

1429
00:56:36,119 --> 00:56:38,220
model for autoconfig addresses why

1430
00:56:38,220 --> 00:56:40,800
wouldn't Would we not Auto conf prefixes

1431
00:56:40,800 --> 00:56:44,180
as well next slide

1432
00:56:45,119 --> 00:56:48,960
so last but not least

1433
00:56:48,960 --> 00:56:52,380
compared to when the we have

1434
00:56:52,380 --> 00:56:56,160
um zero trust built in the protocol

1435
00:56:56,160 --> 00:56:58,440
the host when it configures and address

1436
00:56:58,440 --> 00:57:00,599
or a set of addresses it can do a single

1437
00:57:00,599 --> 00:57:02,880
keeper for multiple addresses it will

1438
00:57:02,880 --> 00:57:04,500
also Auto confer keeper I'm not talking

1439
00:57:04,500 --> 00:57:08,099
about a pki I'm just talking about a

1440
00:57:08,099 --> 00:57:10,740
single key pair

1441
00:57:10,740 --> 00:57:12,180
um

1442
00:57:12,180 --> 00:57:15,540
the what happens is since the network

1443
00:57:15,540 --> 00:57:17,819
keeps track of all the addresses which

1444
00:57:17,819 --> 00:57:20,460
are registered it can also keep track of

1445
00:57:20,460 --> 00:57:22,079
a cryptographic token that was

1446
00:57:22,079 --> 00:57:24,720
Associated to the address the first time

1447
00:57:24,720 --> 00:57:26,099
it was created

1448
00:57:26,099 --> 00:57:29,220
so basically the host when it put the

1449
00:57:29,220 --> 00:57:30,900
constant address and registers it for

1450
00:57:30,900 --> 00:57:32,880
the first time in the other option there

1451
00:57:32,880 --> 00:57:35,460
is this fraud ownership verifier field

1452
00:57:35,460 --> 00:57:39,180
this Rover field which can contain a

1453
00:57:39,180 --> 00:57:40,800
crypto ID

1454
00:57:40,800 --> 00:57:43,920
the crypto ID is derived from public key

1455
00:57:43,920 --> 00:57:45,599
and stuff

1456
00:57:45,599 --> 00:57:48,240
and there is this usual challenge that

1457
00:57:48,240 --> 00:57:51,780
is done by the router each time the the

1458
00:57:51,780 --> 00:57:54,839
host once hosted the router doesn't know

1459
00:57:54,839 --> 00:57:57,180
already wants to do something about an

1460
00:57:57,180 --> 00:57:58,319
address

1461
00:57:58,319 --> 00:58:00,000
it would be challenged for the ownership

1462
00:58:00,000 --> 00:58:01,500
of that address

1463
00:58:01,500 --> 00:58:03,300
whether it is for injecting in the

1464
00:58:03,300 --> 00:58:06,720
routing whether it is for Mobility the

1465
00:58:06,720 --> 00:58:09,240
node was there it's here for the router

1466
00:58:09,240 --> 00:58:11,220
it just shows up is it really the owner

1467
00:58:11,220 --> 00:58:13,140
there will be this Challenge and this

1468
00:58:13,140 --> 00:58:15,359
challenge basically a pair of nouns and

1469
00:58:15,359 --> 00:58:19,260
and validating that the the host as the

1470
00:58:19,260 --> 00:58:20,880
private care associated with that crypto

1471
00:58:20,880 --> 00:58:24,240
token so compared to CGA this is

1472
00:58:24,240 --> 00:58:26,099
immensely simple

1473
00:58:26,099 --> 00:58:28,619
because we don't we are not constrained

1474
00:58:28,619 --> 00:58:31,140
to having the token fitting to the

1475
00:58:31,140 --> 00:58:33,180
interface ID and the reason why we are

1476
00:58:33,180 --> 00:58:35,220
not constrained to that it's because

1477
00:58:35,220 --> 00:58:37,020
there is the registrar where we can

1478
00:58:37,020 --> 00:58:40,200
place this Rover which can be any size

1479
00:58:40,200 --> 00:58:42,059
sure sure

1480
00:58:42,059 --> 00:58:44,579
okay so compared to CGA which is really

1481
00:58:44,579 --> 00:58:46,079
really complicated

1482
00:58:46,079 --> 00:58:49,380
this is just a

1483
00:58:49,380 --> 00:58:51,780
simple cryptographic operation where the

1484
00:58:51,780 --> 00:58:54,000
host will prove that it has the token

1485
00:58:54,000 --> 00:58:55,680
that is associated in the infra with

1486
00:58:55,680 --> 00:58:57,059
this address

1487
00:58:57,059 --> 00:58:59,400
so you can form a neutralize first come

1488
00:58:59,400 --> 00:59:01,020
first serve you on this address the

1489
00:59:01,020 --> 00:59:03,240
associated with this token now it cannot

1490
00:59:03,240 --> 00:59:05,700
be stolen and you can do Savvy and you

1491
00:59:05,700 --> 00:59:07,799
can do all those games

1492
00:59:07,799 --> 00:59:10,980
oh I think I have a next slide but I

1493
00:59:10,980 --> 00:59:12,960
don't know what happened

1494
00:59:12,960 --> 00:59:14,220
Magic

1495
00:59:14,220 --> 00:59:17,160
yeah so um we're pretty much at the very

1496
00:59:17,160 --> 00:59:18,480
end anyway don't take that much time

1497
00:59:18,480 --> 00:59:20,599
right

1498
00:59:22,559 --> 00:59:25,559
so where we are is

1499
00:59:25,559 --> 00:59:27,960
this is a very new work it's just for

1500
00:59:27,960 --> 00:59:29,700
now it's just describes that we already

1501
00:59:29,700 --> 00:59:33,000
have with 8505

1502
00:59:33,000 --> 00:59:35,160
but for prefixes

1503
00:59:35,160 --> 00:59:37,980
can be used to advertise not to stubby

1504
00:59:37,980 --> 00:59:42,540
areas in repo or in any protocol I know

1505
00:59:42,540 --> 00:59:44,579
whether we do auto conf is to be

1506
00:59:44,579 --> 00:59:46,559
discussed whether we call things arrays

1507
00:59:46,559 --> 00:59:49,140
and arrays is to be discussed

1508
00:59:49,140 --> 00:59:52,079
so we we have a lot of slack if I can

1509
00:59:52,079 --> 00:59:55,799
say well in this protocol and so welcome

1510
00:59:55,799 --> 00:59:58,020
for comments and if you if you guys

1511
00:59:58,020 --> 01:00:01,319
would like to to use it and need some

1512
01:00:01,319 --> 01:00:03,480
things in there then it's completely

1513
01:00:03,480 --> 01:00:05,720
open

1514
01:00:07,579 --> 01:00:11,420
your next slide next slide

1515
01:00:13,220 --> 01:00:16,020
yeah so I have a big list of things we

1516
01:00:16,020 --> 01:00:19,200
could be doing policies articles load

1517
01:00:19,200 --> 01:00:21,599
balancing when you register to multiple

1518
01:00:21,599 --> 01:00:23,400
mostly in the case of EDP and if you

1519
01:00:23,400 --> 01:00:25,440
register to multiple leaves you could

1520
01:00:25,440 --> 01:00:27,119
influence the weather balancing is done

1521
01:00:27,119 --> 01:00:30,119
back to you just the way we have wrought

1522
01:00:30,119 --> 01:00:32,339
our preference we could also have

1523
01:00:32,339 --> 01:00:34,980
equal cost multipath balancing type of

1524
01:00:34,980 --> 01:00:36,660
signaling you mean all sorts of stuff we

1525
01:00:36,660 --> 01:00:39,078
could be doing

1526
01:00:43,020 --> 01:00:44,940
so I think there are a lot of really

1527
01:00:44,940 --> 01:00:46,740
useful ideas in here

1528
01:00:46,740 --> 01:00:48,660
um I would say we shouldn't invent a new

1529
01:00:48,660 --> 01:00:50,040
protocol that does the exact same thing

1530
01:00:50,040 --> 01:00:52,020
as an old protocol so I'm not really

1531
01:00:52,020 --> 01:00:54,180
that interested in

1532
01:00:54,180 --> 01:00:57,299
um Auto account for stub for uh prefixes

1533
01:00:57,299 --> 01:00:59,339
because DHCP basically you've got a

1534
01:00:59,339 --> 01:01:01,680
stateful server either way so yeah why

1535
01:01:01,680 --> 01:01:03,240
not just use DHCP because it's already

1536
01:01:03,240 --> 01:01:06,420
defined but um there are a couple things

1537
01:01:06,420 --> 01:01:07,559
here that I think are particularly

1538
01:01:07,559 --> 01:01:08,760
interesting

1539
01:01:08,760 --> 01:01:11,640
um I think you know

1540
01:01:11,640 --> 01:01:14,520
this is not really a snack thing per se

1541
01:01:14,520 --> 01:01:16,200
so I don't know that necessary this is

1542
01:01:16,200 --> 01:01:17,220
necessarily the right place to talk

1543
01:01:17,220 --> 01:01:18,540
about it but since we're talking about

1544
01:01:18,540 --> 01:01:19,859
it um

1545
01:01:19,859 --> 01:01:26,099
uh being able to uh D broadcastify ND on

1546
01:01:26,099 --> 01:01:28,380
Wi-Fi networks is a very attractive

1547
01:01:28,380 --> 01:01:30,359
thing our experience with

1548
01:01:30,359 --> 01:01:33,599
um Wi-Fi networks at this point is that

1549
01:01:33,599 --> 01:01:35,220
um

1550
01:01:35,220 --> 01:01:37,980
multicast works just fine as long as the

1551
01:01:37,980 --> 01:01:42,240
network is is in a good state but

1552
01:01:42,240 --> 01:01:44,700
um when the network stats get a little

1553
01:01:44,700 --> 01:01:46,619
ugly then multicast stops working so

1554
01:01:46,619 --> 01:01:48,299
well uh you wind up having to

1555
01:01:48,299 --> 01:01:49,680
re-transmit a lot it might take a minute

1556
01:01:49,680 --> 01:01:52,619
to get an answer instead of you know

1557
01:01:52,619 --> 01:01:55,500
200 milliseconds that's really bad yeah

1558
01:01:55,500 --> 01:01:58,619
so um so doing things to to avoid

1559
01:01:58,619 --> 01:02:00,660
turning on the multicast functionality

1560
01:02:00,660 --> 01:02:03,000
in Wi-Fi is is probably something worth

1561
01:02:03,000 --> 01:02:06,299
talking about maybe not here but

1562
01:02:06,299 --> 01:02:08,880
um you know I I I'd like to see that

1563
01:02:08,880 --> 01:02:10,559
happen somewhere

1564
01:02:10,559 --> 01:02:12,299
um and I think some of the stuff you

1565
01:02:12,299 --> 01:02:13,740
talked about here is highly applicable

1566
01:02:13,740 --> 01:02:15,119
to that I mean I think some of it's you

1567
01:02:15,119 --> 01:02:17,280
know you some of us intended for that

1568
01:02:17,280 --> 01:02:19,980
but uh so that's good the other thing

1569
01:02:19,980 --> 01:02:21,599
you talked about that I think is is

1570
01:02:21,599 --> 01:02:24,240
interesting and potentially useful

1571
01:02:24,240 --> 01:02:26,940
um although I don't I don't

1572
01:02:26,940 --> 01:02:29,099
I won't say that I don't care about

1573
01:02:29,099 --> 01:02:30,540
Ripple because I think we do care about

1574
01:02:30,540 --> 01:02:33,119
Ripple in some cases but

1575
01:02:33,119 --> 01:02:34,559
um

1576
01:02:34,559 --> 01:02:36,420
just addressing Ripple is not General

1577
01:02:36,420 --> 01:02:40,079
enough the ability right I hope I

1578
01:02:40,079 --> 01:02:43,140
mentioned that yeah but yeah so but but

1579
01:02:43,140 --> 01:02:44,880
when I looked at RFC 9010 it's like

1580
01:02:44,880 --> 01:02:47,099
about Ripple so so

1581
01:02:47,099 --> 01:02:50,280
um uh so having something that allows us

1582
01:02:50,280 --> 01:02:53,400
to inject routes is definitely something

1583
01:02:53,400 --> 01:02:55,859
we'll want for the follow-on document we

1584
01:02:55,859 --> 01:02:57,180
need to be able to do that somehow I

1585
01:02:57,180 --> 01:02:58,260
mean one of the ways that we could do

1586
01:02:58,260 --> 01:03:00,599
that is just by having the the uh

1587
01:03:00,599 --> 01:03:03,720
assuming that the the DHCP PD will

1588
01:03:03,720 --> 01:03:05,640
result in the route being injected into

1589
01:03:05,640 --> 01:03:07,559
the into the routing plane but which

1590
01:03:07,559 --> 01:03:09,240
means it would do that probably yeah

1591
01:03:09,240 --> 01:03:11,579
right but but but the point is you know

1592
01:03:11,579 --> 01:03:13,859
we we in this working group could sort

1593
01:03:13,859 --> 01:03:15,780
of hand wave about it

1594
01:03:15,780 --> 01:03:18,599
um because that's how that's how PD

1595
01:03:18,599 --> 01:03:20,460
generally Works nowadays I mean we and

1596
01:03:20,460 --> 01:03:21,780
there isn't a spec that says how it

1597
01:03:21,780 --> 01:03:22,920
works on the other hand it would be kind

1598
01:03:22,920 --> 01:03:24,420
of nice if there were a spec that says

1599
01:03:24,420 --> 01:03:26,160
how it works so I think that would be

1600
01:03:26,160 --> 01:03:27,900
work worth doing

1601
01:03:27,900 --> 01:03:29,700
um so generally speaking I'm I think

1602
01:03:29,700 --> 01:03:30,960
there's a lot of good stuff in here I

1603
01:03:30,960 --> 01:03:32,339
think we need to talk about it a lot

1604
01:03:32,339 --> 01:03:34,319
more before we actually kind of tease

1605
01:03:34,319 --> 01:03:36,059
out out the exact thing that we'd want

1606
01:03:36,059 --> 01:03:38,520
to try and do and also it's not clear to

1607
01:03:38,520 --> 01:03:40,500
me that this is the place to do it but

1608
01:03:40,500 --> 01:03:42,720
this is a six flow document yeah it

1609
01:03:42,720 --> 01:03:44,940
happens regardless but if you have well

1610
01:03:44,940 --> 01:03:47,400
so it's not clear that six low is the

1611
01:03:47,400 --> 01:03:49,200
place to do it either though

1612
01:03:49,200 --> 01:03:50,660
that's the problem

1613
01:03:50,660 --> 01:03:53,760
that's why it was proposed yeah yeah no

1614
01:03:53,760 --> 01:03:56,099
no so well so the six low specific stuff

1615
01:03:56,099 --> 01:03:57,240
that you're working on I think does

1616
01:03:57,240 --> 01:03:58,619
belong in six low but there's some

1617
01:03:58,619 --> 01:04:00,299
there's some interesting stuff in here

1618
01:04:00,299 --> 01:04:02,640
that I think we need for more use cases

1619
01:04:02,640 --> 01:04:04,680
than just six low pan and so that's why

1620
01:04:04,680 --> 01:04:06,480
I'm saying maybe that's not the place to

1621
01:04:06,480 --> 01:04:08,700
do it but you know because we

1622
01:04:08,700 --> 01:04:10,680
I mean to some extent venue shopping is

1623
01:04:10,680 --> 01:04:12,420
just kind of a silly exercise but it

1624
01:04:12,420 --> 01:04:13,740
would be good to make sure that we do it

1625
01:04:13,740 --> 01:04:15,720
in a place where there are more people

1626
01:04:15,720 --> 01:04:17,599
than just the six low Pan People

1627
01:04:17,599 --> 01:04:19,319
participating in the conversation we

1628
01:04:19,319 --> 01:04:21,780
tried to bring that idea to six men the

1629
01:04:21,780 --> 01:04:23,460
number of times and the person behind

1630
01:04:23,460 --> 01:04:25,680
you knows that very well because he was

1631
01:04:25,680 --> 01:04:28,799
the one opposing it okay so um that's

1632
01:04:28,799 --> 01:04:30,240
basically all I had to say I mean thank

1633
01:04:30,240 --> 01:04:31,619
you for this presentation I I really

1634
01:04:31,619 --> 01:04:33,720
appreciate it and and I hope we can get

1635
01:04:33,720 --> 01:04:37,459
some some value out of it

1636
01:04:37,859 --> 01:04:40,140
hey yeah Lorenzo clear I'm flattered

1637
01:04:40,140 --> 01:04:41,579
that you think I have an influence to

1638
01:04:41,579 --> 01:04:43,079
like you know change standards and

1639
01:04:43,079 --> 01:04:44,819
Destroy standards and create standards

1640
01:04:44,819 --> 01:04:46,140
thank you

1641
01:04:46,140 --> 01:04:49,319
um you know seriously uh so I had like I

1642
01:04:49,319 --> 01:04:50,520
had a couple of thoughts on this

1643
01:04:50,520 --> 01:04:53,880
regarding snack specifically one one

1644
01:04:53,880 --> 01:04:55,200
General thing I just wanted to say

1645
01:04:55,200 --> 01:04:58,140
before that is that um if you want to do

1646
01:04:58,140 --> 01:05:01,319
Aro for energy saving purposes that's a

1647
01:05:01,319 --> 01:05:03,359
good that's a sort of like solid

1648
01:05:03,359 --> 01:05:05,940
motivation right but the trade-off there

1649
01:05:05,940 --> 01:05:08,339
is that

1650
01:05:08,339 --> 01:05:10,859
um if the nodes are sleepy that kind of

1651
01:05:10,859 --> 01:05:12,599
means you can't change anything on the

1652
01:05:12,599 --> 01:05:14,880
network because you can't talk to them

1653
01:05:14,880 --> 01:05:17,700
so on a home network which might

1654
01:05:17,700 --> 01:05:19,020
potentially change dynamically for

1655
01:05:19,020 --> 01:05:20,940
example a lot of European isps do flash

1656
01:05:20,940 --> 01:05:23,099
your numbering once a day sometimes even

1657
01:05:23,099 --> 01:05:25,380
more often you kind of need the ability

1658
01:05:25,380 --> 01:05:27,480
to talk to those nodes anyway to update

1659
01:05:27,480 --> 01:05:29,819
them yes they can do Aro but if their

1660
01:05:29,819 --> 01:05:31,680
prefix change their address is no longer

1661
01:05:31,680 --> 01:05:33,480
valid right so that's one thing here

1662
01:05:33,480 --> 01:05:35,339
like the trade-off is like in that case

1663
01:05:35,339 --> 01:05:37,859
the energy trade-off is not as clear uh

1664
01:05:37,859 --> 01:05:39,540
I can answer that before you ask the

1665
01:05:39,540 --> 01:05:42,240
next question Yeah so basically the oi

1666
01:05:42,240 --> 01:05:44,460
of iot devices is that they can sleep

1667
01:05:44,460 --> 01:05:46,559
obviously when they sleep they don't do

1668
01:05:46,559 --> 01:05:48,720
anything so they are they don't need to

1669
01:05:48,720 --> 01:05:50,640
know that the prefix has changed they

1670
01:05:50,640 --> 01:05:54,359
only need to know when they wake up

1671
01:05:54,359 --> 01:05:56,700
so saving energy is for the first thing

1672
01:05:56,700 --> 01:05:59,700
allowing going away from multicast and

1673
01:05:59,700 --> 01:06:01,079
broadcast you need to completely stop

1674
01:06:01,079 --> 01:06:03,119
that game second thing you have to learn

1675
01:06:03,119 --> 01:06:05,280
when you do low energy is allowing for

1676
01:06:05,280 --> 01:06:06,059
sleep

1677
01:06:06,059 --> 01:06:08,700
those devices can slip one percent of

1678
01:06:08,700 --> 01:06:10,319
that time ten percent of the time or

1679
01:06:10,319 --> 01:06:12,960
even as much as cats now as long as you

1680
01:06:12,960 --> 01:06:14,339
sleep

1681
01:06:14,339 --> 01:06:17,040
yeah yeah that's a lot

1682
01:06:17,040 --> 01:06:18,839
as long as you sleep you don't need to

1683
01:06:18,839 --> 01:06:20,339
know there was this flash remembering

1684
01:06:20,339 --> 01:06:22,559
what you want to see happen is when the

1685
01:06:22,559 --> 01:06:25,920
the dude wakes up then he gets this

1686
01:06:25,920 --> 01:06:28,559
array which will tell you hey the pios

1687
01:06:28,559 --> 01:06:30,420
change and now it will auto-confa new

1688
01:06:30,420 --> 01:06:32,220
address and register that

1689
01:06:32,220 --> 01:06:35,160
uh but during the sleep period Then you

1690
01:06:35,160 --> 01:06:36,960
don't need to use Arrow you can just

1691
01:06:36,960 --> 01:06:38,579
like drop all packets and when you wake

1692
01:06:38,579 --> 01:06:41,640
up you refresh well whatever I mean yes

1693
01:06:41,640 --> 01:06:43,619
yeah so it's a good point that things

1694
01:06:43,619 --> 01:06:45,299
may have changed during the sleep period

1695
01:06:45,299 --> 01:06:46,859
and that's yes that's a good point and

1696
01:06:46,859 --> 01:06:48,599
we need to I mean it's very good for

1697
01:06:48,599 --> 01:06:49,920
it's very good for a managed Network

1698
01:06:49,920 --> 01:06:51,359
where you know the prefix doesn't change

1699
01:06:51,359 --> 01:06:53,819
and you have loads of nodes but I think

1700
01:06:53,819 --> 01:06:55,500
I guess that's sort of my broader point

1701
01:06:55,500 --> 01:06:58,079
for a home network I think the

1702
01:06:58,079 --> 01:06:59,280
trade-offs are a bit different the

1703
01:06:59,280 --> 01:07:01,559
battery the devices may or may not have

1704
01:07:01,559 --> 01:07:04,579
more power I think

1705
01:07:04,579 --> 01:07:07,440
the Sleepy devices in this model are

1706
01:07:07,440 --> 01:07:09,539
probably gonna really be like more in

1707
01:07:09,539 --> 01:07:12,960
the 802-15 for cloud right so they are

1708
01:07:12,960 --> 01:07:15,420
sort of like behind the BR

1709
01:07:15,420 --> 01:07:17,819
um and in terms of like multicast in

1710
01:07:17,819 --> 01:07:21,299
General on even Wi-Fi is very harmful to

1711
01:07:21,299 --> 01:07:23,520
the point that some devices don't listen

1712
01:07:23,520 --> 01:07:25,799
to all of them because there are too

1713
01:07:25,799 --> 01:07:28,740
many so if we reduce dramatically the

1714
01:07:28,740 --> 01:07:30,720
amount of multicast maybe the devices

1715
01:07:30,720 --> 01:07:33,660
will listen to what's left making them a

1716
01:07:33,660 --> 01:07:35,460
lot more useful no they won't because

1717
01:07:35,460 --> 01:07:37,500
the the reason they don't is that it's

1718
01:07:37,500 --> 01:07:39,420
it's it's expensive for the hardware

1719
01:07:39,420 --> 01:07:42,299
even to listen for the beacon so it's

1720
01:07:42,299 --> 01:07:43,619
actually like a more complicated but

1721
01:07:43,619 --> 01:07:46,380
anyway so one thing I wanted to say is

1722
01:07:46,380 --> 01:07:49,920
in this specifically for snack

1723
01:07:49,920 --> 01:07:52,980
um doesn't seem that useful because if

1724
01:07:52,980 --> 01:07:54,059
you do

1725
01:07:54,059 --> 01:07:55,799
um if you try to inject a prefix into

1726
01:07:55,799 --> 01:07:59,220
them into the mesh by a you know

1727
01:07:59,220 --> 01:08:01,799
Pro whatever it is it is called that's

1728
01:08:01,799 --> 01:08:03,539
only going to go to the to the things on

1729
01:08:03,539 --> 01:08:05,940
a network that speak the protocol and in

1730
01:08:05,940 --> 01:08:07,559
particular like Legacy hosts won't know

1731
01:08:07,559 --> 01:08:10,440
this and so what happens is it let's say

1732
01:08:10,440 --> 01:08:12,119
that you get a prefix from the Gateway

1733
01:08:12,119 --> 01:08:14,160
and first of all that's going to plumb a

1734
01:08:14,160 --> 01:08:16,020
route to you anyway so the traffic will

1735
01:08:16,020 --> 01:08:18,540
like from a traffic from a legacy host

1736
01:08:18,540 --> 01:08:21,120
will go up and compare pin down

1737
01:08:21,120 --> 01:08:24,420
you're better off sending an RA on the

1738
01:08:24,420 --> 01:08:27,540
network uh that with a with an Rio so

1739
01:08:27,540 --> 01:08:28,859
that the traffic from Legacy host

1740
01:08:28,859 --> 01:08:30,899
reaches you directly instead of hair it

1741
01:08:30,899 --> 01:08:33,359
can be done yeah certainly so at that

1742
01:08:33,359 --> 01:08:35,100
point if you got the prefix of ipde

1743
01:08:35,100 --> 01:08:36,540
which is what you know Ted says well we

1744
01:08:36,540 --> 01:08:38,040
already have it then you might as well

1745
01:08:38,040 --> 01:08:39,359
instead of like doing injection you

1746
01:08:39,359 --> 01:08:41,460
might as well just send the ra on the on

1747
01:08:41,460 --> 01:08:43,799
the on the shared segment where it says

1748
01:08:43,799 --> 01:08:45,540
like hey you can reach me here with an

1749
01:08:45,540 --> 01:08:47,279
orange which what that's the first

1750
01:08:47,279 --> 01:08:49,439
drawing right the one where we we share

1751
01:08:49,439 --> 01:08:51,839
the network you may or may not want to

1752
01:08:51,839 --> 01:08:54,238
do that it just depends

1753
01:08:54,238 --> 01:08:57,238
if you want everyone to know about this

1754
01:08:57,238 --> 01:08:59,160
prefix or if it's a prefix that has a

1755
01:08:59,160 --> 01:09:00,719
special purpose for which I mean it's

1756
01:09:00,719 --> 01:09:02,279
it's a choice administrative choice to

1757
01:09:02,279 --> 01:09:03,479
do it or not but yes it's completely

1758
01:09:03,479 --> 01:09:05,040
possible no I think like the use case

1759
01:09:05,040 --> 01:09:06,600
for snack is that you have the stub

1760
01:09:06,600 --> 01:09:08,339
Network that anyone on the infra Network

1761
01:09:08,339 --> 01:09:10,679
can reach and so in that case here I

1762
01:09:10,679 --> 01:09:12,000
think I don't think it has to be

1763
01:09:12,000 --> 01:09:13,500
globally reachable by anyone for

1764
01:09:13,500 --> 01:09:16,560
instance if you have a power grid and

1765
01:09:16,560 --> 01:09:19,380
you want that stuff to

1766
01:09:19,380 --> 01:09:22,140
for for the power related messages to go

1767
01:09:22,140 --> 01:09:24,839
out the power lines actually but for

1768
01:09:24,839 --> 01:09:26,939
anything else to go out we have use

1769
01:09:26,939 --> 01:09:29,640
cases like that in iot so you you want

1770
01:09:29,640 --> 01:09:31,380
you don't want everybody to know that

1771
01:09:31,380 --> 01:09:33,899
prefix only the you're washing machines

1772
01:09:33,899 --> 01:09:36,179
and stuff these are still connected so

1773
01:09:36,179 --> 01:09:38,520
the Wi-Fi the the build on that prefix

1774
01:09:38,520 --> 01:09:40,560
is they do power related stuff they go

1775
01:09:40,560 --> 01:09:42,420
out one way if they do something else

1776
01:09:42,420 --> 01:09:44,339
they go out the other way I mean we want

1777
01:09:44,339 --> 01:09:45,719
to have all the power to play with

1778
01:09:45,719 --> 01:09:46,738
things

1779
01:09:46,738 --> 01:09:48,858
okay

1780
01:09:51,479 --> 01:09:54,179
but yes I mean Michael Richardson

1781
01:09:54,179 --> 01:09:55,620
um so

1782
01:09:55,620 --> 01:09:58,080
um my thoughts about this work and I you

1783
01:09:58,080 --> 01:09:59,699
know followed it through six men and six

1784
01:09:59,699 --> 01:10:01,860
low and stuff like this

1785
01:10:01,860 --> 01:10:05,040
um is that I think that it

1786
01:10:05,040 --> 01:10:08,940
um I think that IT addresses the edge

1787
01:10:08,940 --> 01:10:11,100
snack case that I really don't remember

1788
01:10:11,100 --> 01:10:13,320
when in the charter or not which is you

1789
01:10:13,320 --> 01:10:16,560
know the vaguely sort of industrial uses

1790
01:10:16,560 --> 01:10:18,780
for stub networks

1791
01:10:18,780 --> 01:10:20,219
um and I don't think that really isn't

1792
01:10:20,219 --> 01:10:21,840
our chart or really shouldn't be

1793
01:10:21,840 --> 01:10:24,000
emphasized if it's there

1794
01:10:24,000 --> 01:10:26,100
um there was a presentation I'm going to

1795
01:10:26,100 --> 01:10:30,120
say two ietfs ago

1796
01:10:30,120 --> 01:10:33,540
um from in the iot Ops working group

1797
01:10:33,540 --> 01:10:35,940
about

1798
01:10:35,940 --> 01:10:38,540
um Trends in industrial networks right

1799
01:10:38,540 --> 01:10:40,760
and so

1800
01:10:40,760 --> 01:10:44,219
you know he presented these industrial

1801
01:10:44,219 --> 01:10:47,400
networks as if it was a virtue the fact

1802
01:10:47,400 --> 01:10:49,260
that they had layers and layers of

1803
01:10:49,260 --> 01:10:50,460
firewalls

1804
01:10:50,460 --> 01:10:52,199
and and what that's not really how

1805
01:10:52,199 --> 01:10:53,940
that's the project model how do you say

1806
01:10:53,940 --> 01:10:57,360
99 yeah ISO 99 pound you well well it

1807
01:10:57,360 --> 01:10:59,159
was it's presented as it's presented as

1808
01:10:59,159 --> 01:11:00,780
a virtue but it's not a virtue and we

1809
01:11:00,780 --> 01:11:02,100
know that it's not a virtue we know what

1810
01:11:02,100 --> 01:11:03,300
happened it was permissionless

1811
01:11:03,300 --> 01:11:04,980
extensions of the network through Nat

1812
01:11:04,980 --> 01:11:07,739
4-4 and each guy came along with a

1813
01:11:07,739 --> 01:11:11,340
subsystem of five or six hosts

1814
01:11:11,340 --> 01:11:12,780
um discovered he had nothing to plug

1815
01:11:12,780 --> 01:11:13,699
into

1816
01:11:13,699 --> 01:11:18,000
and then they uh brought a router

1817
01:11:18,000 --> 01:11:19,800
um and that router did not for four and

1818
01:11:19,800 --> 01:11:22,199
they plugged that one in okay and then

1819
01:11:22,199 --> 01:11:24,360
of course you know there's just extend

1820
01:11:24,360 --> 01:11:26,880
this so so the fact that he had that the

1821
01:11:26,880 --> 01:11:29,100
diagram showed six layers of firewalls

1822
01:11:29,100 --> 01:11:31,260
down but really they were just not four

1823
01:11:31,260 --> 01:11:32,880
four hosts

1824
01:11:32,880 --> 01:11:35,460
um was not a what is presented as a

1825
01:11:35,460 --> 01:11:37,739
security feature but it's really just

1826
01:11:37,739 --> 01:11:40,080
justifying bad architecture through

1827
01:11:40,080 --> 01:11:43,199
security right and and the new proposal

1828
01:11:43,199 --> 01:11:46,620
was a flat network with a bunch of uh

1829
01:11:46,620 --> 01:11:48,540
vlans

1830
01:11:48,540 --> 01:11:50,699
um and routers that actually could do

1831
01:11:50,699 --> 01:11:53,460
things and and a way to distribute the

1832
01:11:53,460 --> 01:11:56,699
uh axles correctly so that they had

1833
01:11:56,699 --> 01:11:57,900
connectivity

1834
01:11:57,900 --> 01:11:59,760
go back to the iot but it's a very nice

1835
01:11:59,760 --> 01:12:01,739
presentation a very nice concept right

1836
01:12:01,739 --> 01:12:04,739
but the the key thing here that I took

1837
01:12:04,739 --> 01:12:07,380
back is that it was very hard for any

1838
01:12:07,380 --> 01:12:09,480
new vendor to enter an industrial

1839
01:12:09,480 --> 01:12:10,500
Network

1840
01:12:10,500 --> 01:12:14,040
because of all of the other stuff nobody

1841
01:12:14,040 --> 01:12:15,600
wants to reconfigure their Network for

1842
01:12:15,600 --> 01:12:17,100
the new guy because if anything goes

1843
01:12:17,100 --> 01:12:19,620
wrong it's the new guy's fault and

1844
01:12:19,620 --> 01:12:22,140
they're in trouble for having cooperated

1845
01:12:22,140 --> 01:12:24,659
with the new vendor right well when you

1846
01:12:24,659 --> 01:12:27,000
install a production line you install it

1847
01:12:27,000 --> 01:12:29,159
for 20 plus years and you don't want to

1848
01:12:29,159 --> 01:12:31,860
touch it at all for 20 years yes exactly

1849
01:12:31,860 --> 01:12:33,179
right so this is exactly what's

1850
01:12:33,179 --> 01:12:34,920
happening so what I'm saying is this the

1851
01:12:34,920 --> 01:12:36,719
snack stub Network actually has the nice

1852
01:12:36,719 --> 01:12:38,280
feature that

1853
01:12:38,280 --> 01:12:41,840
um it it actually does let people deploy

1854
01:12:41,840 --> 01:12:43,920
permissionlessly into that kind of

1855
01:12:43,920 --> 01:12:46,560
network okay and so the interesting

1856
01:12:46,560 --> 01:12:48,360
thing for me for your work and I'm sorry

1857
01:12:48,360 --> 01:12:50,040
if that was a little bit like tenuous

1858
01:12:50,040 --> 01:12:51,480
and I could write it down the

1859
01:12:51,480 --> 01:12:53,219
interesting thing you're not this

1860
01:12:53,219 --> 01:12:55,500
concept is that when that vendor shows

1861
01:12:55,500 --> 01:12:58,920
up with the second subsystem

1862
01:12:58,920 --> 01:13:00,719
because it's another part of the plant

1863
01:13:00,719 --> 01:13:03,239
you know got a good got a good deal got

1864
01:13:03,239 --> 01:13:05,820
a it was working well the the chemical

1865
01:13:05,820 --> 01:13:08,280
mixer for the paint factory right thing

1866
01:13:08,280 --> 01:13:10,380
and now they want to install it three

1867
01:13:10,380 --> 01:13:11,640
more times

1868
01:13:11,640 --> 01:13:12,840
okay

1869
01:13:12,840 --> 01:13:15,179
well now they say whoa whoa hang on we

1870
01:13:15,179 --> 01:13:17,820
don't need a whole new subnet we can now

1871
01:13:17,820 --> 01:13:20,580
you do do Eros and this other stuff and

1872
01:13:20,580 --> 01:13:23,280
we can actually now build uh the the

1873
01:13:23,280 --> 01:13:26,100
proxy to ND kind of concept across the

1874
01:13:26,100 --> 01:13:27,600
whole thing and I think that's very very

1875
01:13:27,600 --> 01:13:29,760
useful but it requires them to think

1876
01:13:29,760 --> 01:13:32,040
about this in advance and I think the

1877
01:13:32,040 --> 01:13:34,679
thing about about unfortunately about

1878
01:13:34,679 --> 01:13:37,560
this work is that it's 10 years too late

1879
01:13:37,560 --> 01:13:40,560
to go into thread or something else and

1880
01:13:40,560 --> 01:13:42,659
so we really need all of we to do this

1881
01:13:42,659 --> 01:13:44,760
usefully we really needed to have put it

1882
01:13:44,760 --> 01:13:46,980
in to all the other specs that we're

1883
01:13:46,980 --> 01:13:48,780
doing something like specifically thread

1884
01:13:48,780 --> 01:13:51,420
and so I don't see thread changing to be

1885
01:13:51,420 --> 01:13:53,159
able to accommodate this and that's why

1886
01:13:53,159 --> 01:13:55,679
I'm like well I really want to do it but

1887
01:13:55,679 --> 01:13:58,620
I I don't think that it's useful uh

1888
01:13:58,620 --> 01:14:00,900
until you know we actually have networks

1889
01:14:00,900 --> 01:14:03,420
that are are have some reason to do it

1890
01:14:03,420 --> 01:14:04,620
and I don't think thread's going to

1891
01:14:04,620 --> 01:14:05,760
adopt it tomorrow and I don't think

1892
01:14:05,760 --> 01:14:07,560
matter is going to die don't think that

1893
01:14:07,560 --> 01:14:09,900
thread as an indication of version in

1894
01:14:09,900 --> 01:14:13,380
the frames yeah okay sure I'm not saying

1895
01:14:13,380 --> 01:14:14,699
I couldn't do it I'm just saying that

1896
01:14:14,699 --> 01:14:17,040
it's not in the spec today and and and

1897
01:14:17,040 --> 01:14:18,960
this is unfortunate and it's an

1898
01:14:18,960 --> 01:14:20,520
unfortunate problem of we don't always

1899
01:14:20,520 --> 01:14:22,860
get people to you know especially when

1900
01:14:22,860 --> 01:14:24,360
people spin off and go elsewhere and do

1901
01:14:24,360 --> 01:14:25,739
their work elsewhere we don't always get

1902
01:14:25,739 --> 01:14:27,540
manage to review and say well but you

1903
01:14:27,540 --> 01:14:28,620
could have just done it this way it

1904
01:14:28,620 --> 01:14:30,659
would have been simpler right and that's

1905
01:14:30,659 --> 01:14:32,820
the problem you know as an ietf we have

1906
01:14:32,820 --> 01:14:35,760
but as a as a seller of Technology but

1907
01:14:35,760 --> 01:14:38,520
not necessarily A deployer of it so

1908
01:14:38,520 --> 01:14:40,820
thanks

1909
01:14:42,600 --> 01:14:45,900
Ted lemon just uh two things one um the

1910
01:14:45,900 --> 01:14:47,520
use case for injecting routes is

1911
01:14:47,520 --> 01:14:49,440
actually when you're trying to work with

1912
01:14:49,440 --> 01:14:51,179
a cooperating infrastructure with and

1913
01:14:51,179 --> 01:14:52,800
you want to be able to have the stub

1914
01:14:52,800 --> 01:14:54,620
Network hosts be reachable from

1915
01:14:54,620 --> 01:14:57,540
non-adjacent infrastructure links uh so

1916
01:14:57,540 --> 01:14:59,520
it's not really about access control

1917
01:14:59,520 --> 01:15:00,719
it's about

1918
01:15:00,719 --> 01:15:03,120
uh it's about situations where you can't

1919
01:15:03,120 --> 01:15:04,739
get an RA to the thing that needs to

1920
01:15:04,739 --> 01:15:05,940
connect to you because it's on a

1921
01:15:05,940 --> 01:15:09,919
different link yeah so if I think

1922
01:15:10,500 --> 01:15:12,540
advice to device easy

1923
01:15:12,540 --> 01:15:14,940
link so everything is on the different

1924
01:15:14,940 --> 01:15:16,380
links right you're correct I mean yeah

1925
01:15:16,380 --> 01:15:19,020
yeah so uh and the other thing is I mean

1926
01:15:19,020 --> 01:15:20,940
I wouldn't lose hope that there isn't an

1927
01:15:20,940 --> 01:15:22,440
application for any of the stuff that

1928
01:15:22,440 --> 01:15:23,699
you've done in thread because there were

1929
01:15:23,699 --> 01:15:24,840
some things in there that I thought oh

1930
01:15:24,840 --> 01:15:26,219
we should talk about that and thread and

1931
01:15:26,219 --> 01:15:27,900
see whether we can do it I'm not saying

1932
01:15:27,900 --> 01:15:29,280
that it's going to get adopted I'm just

1933
01:15:29,280 --> 01:15:31,679
saying I think it's worth talking about

1934
01:15:31,679 --> 01:15:34,219
so

1935
01:15:35,699 --> 01:15:38,419
okay

1936
01:15:46,199 --> 01:15:50,219
so this is the only hand yeah you want

1937
01:15:50,219 --> 01:15:54,920
to start something and you want me to do

1938
01:15:56,760 --> 01:15:58,980
okay

1939
01:15:58,980 --> 01:16:03,300
okay uh next uh topic of the agenda is a

1940
01:16:03,300 --> 01:16:05,159
discussion where we're going and next

1941
01:16:05,159 --> 01:16:06,540
steps

1942
01:16:06,540 --> 01:16:07,380
um

1943
01:16:07,380 --> 01:16:10,140
am I right Pascal saying that our

1944
01:16:10,140 --> 01:16:13,080
understanding as you said is that uh

1945
01:16:13,080 --> 01:16:15,360
what you're describing the prefix

1946
01:16:15,360 --> 01:16:17,640
registration is actually a possible tool

1947
01:16:17,640 --> 01:16:19,679
to be considered for snack

1948
01:16:19,679 --> 01:16:21,239
but it's not

1949
01:16:21,239 --> 01:16:23,100
you know a complete solution right it's

1950
01:16:23,100 --> 01:16:24,600
just that

1951
01:16:24,600 --> 01:16:25,860
okay

1952
01:16:25,860 --> 01:16:28,199
so I guess the question to the group is

1953
01:16:28,199 --> 01:16:32,219
do we want to have do we want does the

1954
01:16:32,219 --> 01:16:34,140
working group think we should be

1955
01:16:34,140 --> 01:16:36,960
adopting Ted's draft as working group

1956
01:16:36,960 --> 01:16:39,239
document for the first deliverable I

1957
01:16:39,239 --> 01:16:42,840
think that's kind of uh where we are

1958
01:16:42,840 --> 01:16:44,520
um any

1959
01:16:44,520 --> 01:16:47,400
anyone wants to chime in and

1960
01:16:47,400 --> 01:16:51,360
say yes no maybe uh do you agree and not

1961
01:16:51,360 --> 01:16:53,580
agree before we can kind of um or

1962
01:16:53,580 --> 01:16:55,739
something

1963
01:16:55,739 --> 01:16:59,480
oh the ad is coming

1964
01:17:02,100 --> 01:17:03,659
Eric wink

1965
01:17:03,659 --> 01:17:06,060
I would prefer

1966
01:17:06,060 --> 01:17:08,040
to have a document that says expected

1967
01:17:08,040 --> 01:17:11,659
even in one line the httpd support to be

1968
01:17:11,659 --> 01:17:14,699
defined so that we can adopt a document

1969
01:17:14,699 --> 01:17:18,780
that includes the httpd clearly right it

1970
01:17:18,780 --> 01:17:21,719
just take a minor step okay you can do

1971
01:17:21,719 --> 01:17:24,420
it today and then you can adopt this and

1972
01:17:24,420 --> 01:17:27,239
as an individual guy I will support it

1973
01:17:27,239 --> 01:17:31,460
um so you're saying Eric that if we

1974
01:17:31,460 --> 01:17:35,060
if we

1975
01:17:35,460 --> 01:17:41,820
we asked the author to add uh one line

1976
01:17:41,820 --> 01:17:46,440
that draft then would be possibly

1977
01:17:46,440 --> 01:17:48,540
be able to be adopted by the working

1978
01:17:48,540 --> 01:17:51,120
group but without that line we cannot

1979
01:17:51,120 --> 01:17:54,239
decide this ear no we can we don't

1980
01:17:54,239 --> 01:17:56,840
decide here anyway right as you know

1981
01:17:56,840 --> 01:18:00,300
my point is if we do a call for adoption

1982
01:18:00,300 --> 01:18:02,520
later today and for two weeks or

1983
01:18:02,520 --> 01:18:04,920
whatever right this is up to you shares

1984
01:18:04,920 --> 01:18:07,560
we will adopt a document without the

1985
01:18:07,560 --> 01:18:09,420
support of the httpd

1986
01:18:09,420 --> 01:18:11,159
right and we know there are discussion

1987
01:18:11,159 --> 01:18:14,219
to be held sure so I want to get one

1988
01:18:14,219 --> 01:18:16,679
line support to be defined I will be

1989
01:18:16,679 --> 01:18:18,540
there or whatever right and then we can

1990
01:18:18,540 --> 01:18:23,520
adopt this okay so oh Lorenzo

1991
01:18:23,520 --> 01:18:25,380
uh lorenza I mean do we have to do that

1992
01:18:25,380 --> 01:18:27,360
like they seem to be like pretty solid

1993
01:18:27,360 --> 01:18:29,400
agreement within this room that like we

1994
01:18:29,400 --> 01:18:32,100
want to make PD parts of the spec I

1995
01:18:32,100 --> 01:18:33,300
think we can just say that in the email

1996
01:18:33,300 --> 01:18:34,860
it's like you know the chairs you know

1997
01:18:34,860 --> 01:18:36,960
we're calling for adoption by you know

1998
01:18:36,960 --> 01:18:38,580
we recognize that that during the

1999
01:18:38,580 --> 01:18:40,080
discussions there was strong support for

2000
01:18:40,080 --> 01:18:41,760
including PD as part of the base back

2001
01:18:41,760 --> 01:18:43,920
let's assume that we can do that when

2002
01:18:43,920 --> 01:18:45,540
the while the document is being worked

2003
01:18:45,540 --> 01:18:47,460
on yeah

2004
01:18:47,460 --> 01:18:50,340
yeah let's call me a process freak but

2005
01:18:50,340 --> 01:18:51,960
there's one line

2006
01:18:51,960 --> 01:18:54,480
that can do it and

2007
01:18:54,480 --> 01:18:57,199
Yes

2008
01:18:57,199 --> 01:18:59,940
actually one thing I want to say is like

2009
01:18:59,940 --> 01:19:03,739
let's not write something that could

2010
01:19:03,739 --> 01:19:06,540
suggest that PD is going to come in a

2011
01:19:06,540 --> 01:19:08,400
different document I would strongly

2012
01:19:08,400 --> 01:19:10,800
oppose that outcome but you know if we

2013
01:19:10,800 --> 01:19:12,719
say yeah this document will be updated

2014
01:19:12,719 --> 01:19:14,640
to state that the hppd is part of it

2015
01:19:14,640 --> 01:19:17,540
that's fine yeah

2016
01:19:18,659 --> 01:19:21,060
hi I'm Bob Hinton I was just going to

2017
01:19:21,060 --> 01:19:22,980
say that adoption usually means that the

2018
01:19:22,980 --> 01:19:24,659
working group wants to work on it it

2019
01:19:24,659 --> 01:19:28,260
doesn't mean there's any agreement or

2020
01:19:28,260 --> 01:19:30,360
final agreement on what's in the

2021
01:19:30,360 --> 01:19:33,000
document that happens later and that

2022
01:19:33,000 --> 01:19:34,860
gets sorted out when you do a working

2023
01:19:34,860 --> 01:19:38,280
group last call so I I don't see why we

2024
01:19:38,280 --> 01:19:41,780
need to add another step here

2025
01:19:41,780 --> 01:19:43,860
okay so

2026
01:19:43,860 --> 01:19:44,520
um

2027
01:19:44,520 --> 01:19:48,300
let's rephrase the question that if the

2028
01:19:48,300 --> 01:19:49,860
document

2029
01:19:49,860 --> 01:19:56,659
um contains uh you know DHCP PD

2030
01:19:56,940 --> 01:19:57,600
um

2031
01:19:57,600 --> 01:20:00,780
does the room feel in room in including

2032
01:20:00,780 --> 01:20:04,920
people virtual does the room feel that

2033
01:20:04,920 --> 01:20:07,380
it would be a good document for a

2034
01:20:07,380 --> 01:20:10,520
working group document

2035
01:20:11,880 --> 01:20:15,719
or let's do the inverse do you any pop

2036
01:20:15,719 --> 01:20:18,540
any P anyone think that this document

2037
01:20:18,540 --> 01:20:21,719
would not be a good working group uh

2038
01:20:21,719 --> 01:20:25,880
document for the first deliverable

2039
01:20:28,860 --> 01:20:30,480
yeah I don't know how to do this yeah

2040
01:20:30,480 --> 01:20:32,780
maybe

2041
01:20:34,620 --> 01:20:35,699
okay

2042
01:20:35,699 --> 01:20:40,099
oh there's a full uh tool

2043
01:20:57,420 --> 01:21:00,420
okay

2044
01:21:04,400 --> 01:21:07,879
uh yeah

2045
01:21:13,920 --> 01:21:17,940
yes no no please add

2046
01:21:17,940 --> 01:21:19,560
if

2047
01:21:19,560 --> 01:21:25,460
if it includes DHCP V6 PD

2048
01:21:33,719 --> 01:21:35,340
okay

2049
01:21:35,340 --> 01:21:38,460
so that's new for me so it looks like we

2050
01:21:38,460 --> 01:21:41,659
have a pool

2051
01:21:41,699 --> 01:21:46,099
ongoing okay please

2052
01:21:46,199 --> 01:21:47,520
um

2053
01:21:47,520 --> 01:21:50,179
answer

2054
01:22:00,300 --> 01:22:02,159
well I guess we need the kind of a

2055
01:22:02,159 --> 01:22:05,159
timeout or something right

2056
01:22:05,159 --> 01:22:08,159
no

2057
01:22:13,920 --> 01:22:17,719
looks like pretty good consensus

2058
01:22:23,219 --> 01:22:26,520
as Eric was saying whatever we you know

2059
01:22:26,520 --> 01:22:28,739
discuss here will be uh you know doing

2060
01:22:28,739 --> 01:22:31,140
this on the mailing list and

2061
01:22:31,140 --> 01:22:34,320
uh obviously we'll wait another rev of

2062
01:22:34,320 --> 01:22:36,600
the document which contains at least one

2063
01:22:36,600 --> 01:22:40,199
liner to formally call the

2064
01:22:40,199 --> 01:22:44,159
the adoption but you know this you know

2065
01:22:44,159 --> 01:22:47,159
gives us a good feel for the working

2066
01:22:47,159 --> 01:22:50,540
group uh chairs

2067
01:22:51,300 --> 01:22:54,659
okay I guess we can close that oh you oh

2068
01:22:54,659 --> 01:22:58,440
that's that's cool mediko is fantastic

2069
01:22:58,440 --> 01:23:02,960
Stuart you have a question a comment

2070
01:23:05,699 --> 01:23:10,500
yeah just uh uh I'm still at Tasha

2071
01:23:10,500 --> 01:23:11,699
um

2072
01:23:11,699 --> 01:23:13,199
remember

2073
01:23:13,199 --> 01:23:15,719
what we're discussing right now and

2074
01:23:15,719 --> 01:23:17,699
those I've rarely seen such a clear

2075
01:23:17,699 --> 01:23:20,159
consensus uh what we're discussing is

2076
01:23:20,159 --> 01:23:21,480
whether the working group is going to

2077
01:23:21,480 --> 01:23:23,400
work on this document once the working

2078
01:23:23,400 --> 01:23:25,500
group products that adopts the document

2079
01:23:25,500 --> 01:23:27,780
is up to the working group to determine

2080
01:23:27,780 --> 01:23:29,460
what goes into that document right we're

2081
01:23:29,460 --> 01:23:30,960
not saying the document is finished and

2082
01:23:30,960 --> 01:23:32,940
ready for last fall we're saying this is

2083
01:23:32,940 --> 01:23:36,739
an interesting area to work on yep

2084
01:23:40,320 --> 01:23:41,880
I will just add that it's now officially

2085
01:23:41,880 --> 01:23:43,500
a moot point because I just submitted a

2086
01:23:43,500 --> 01:23:46,080
document that mentions dhcpv6

2087
01:23:46,080 --> 01:23:49,080
hahaha

2088
01:23:51,120 --> 01:23:53,760
okay so to do for the working group

2089
01:23:53,760 --> 01:23:57,120
chairs to call for adoption of that new

2090
01:23:57,120 --> 01:23:59,100
rev uh

2091
01:23:59,100 --> 01:24:00,900
um in the mailing this in the coming

2092
01:24:00,900 --> 01:24:02,880
days

2093
01:24:02,880 --> 01:24:04,940
um

2094
01:24:06,239 --> 01:24:08,760
I think we're mostly done

2095
01:24:08,760 --> 01:24:09,420
um

2096
01:24:09,420 --> 01:24:12,000
there was uh so we do have another

2097
01:24:12,000 --> 01:24:13,620
deliverable

2098
01:24:13,620 --> 01:24:17,040
um and so I guess we could already call

2099
01:24:17,040 --> 01:24:19,380
for people if there are any editor

2100
01:24:19,380 --> 01:24:21,600
author to start working on the second

2101
01:24:21,600 --> 01:24:25,080
deliverable while we are you know

2102
01:24:25,080 --> 01:24:28,940
uh working on the first one

2103
01:24:30,300 --> 01:24:32,460
sorry

2104
01:24:32,460 --> 01:24:35,780
uh the complex case

2105
01:24:37,140 --> 01:24:39,719
so uh just to clarify the second

2106
01:24:39,719 --> 01:24:41,760
deliverable deliverable is the case

2107
01:24:41,760 --> 01:24:44,520
where we want to have additional

2108
01:24:44,520 --> 01:24:47,580
functionality uh that is enabled by

2109
01:24:47,580 --> 01:24:49,020
integrating with the infrastructure

2110
01:24:49,020 --> 01:24:50,940
Network and what that would mean is

2111
01:24:50,940 --> 01:24:53,580
essentially the ability to do uh

2112
01:24:53,580 --> 01:24:55,320
discovery of hosts on the on the stub

2113
01:24:55,320 --> 01:24:57,719
network from non-adjacent infrastructure

2114
01:24:57,719 --> 01:25:00,480
links and the ability to reach hosts on

2115
01:25:00,480 --> 01:25:01,500
the infrastructure network from

2116
01:25:01,500 --> 01:25:03,719
non-adjacent infrastructure links since

2117
01:25:03,719 --> 01:25:06,000
we just added DHCP V6 we've sort of

2118
01:25:06,000 --> 01:25:07,679
solved that problem the second problem

2119
01:25:07,679 --> 01:25:09,900
but we haven't solved the first so

2120
01:25:09,900 --> 01:25:12,239
that's the big difference I think in the

2121
01:25:12,239 --> 01:25:14,280
document

2122
01:25:14,280 --> 01:25:15,960
so the new document would basically just

2123
01:25:15,960 --> 01:25:17,699
talk about uh

2124
01:25:17,699 --> 01:25:19,860
you know how we would integrate this the

2125
01:25:19,860 --> 01:25:22,199
the dnssd stuff into infrastructure

2126
01:25:22,199 --> 01:25:24,620
essentially

2127
01:25:28,580 --> 01:25:31,940
are we done

2128
01:25:32,280 --> 01:25:36,000
yes about the use cases that you guys

2129
01:25:36,000 --> 01:25:37,860
want to cover uh I had the discussion

2130
01:25:37,860 --> 01:25:39,840
this morning uh I think it was with that

2131
01:25:39,840 --> 01:25:41,340
Daniel I don't remember with whom but

2132
01:25:41,340 --> 01:25:43,320
the use cases were something like this

2133
01:25:43,320 --> 01:25:44,880
I've got my phone

2134
01:25:44,880 --> 01:25:47,340
and my phone gets a slash 64 from my

2135
01:25:47,340 --> 01:25:49,980
service provider and now I'd like to

2136
01:25:49,980 --> 01:25:53,640
connect my phone into my home so that

2137
01:25:53,640 --> 01:25:56,520
if my home Gateway works and they can

2138
01:25:56,520 --> 01:25:58,020
get through the internet the devices

2139
01:25:58,020 --> 01:26:00,420
which are either through I fight or

2140
01:26:00,420 --> 01:26:03,540
through USB or whatever to my phone

2141
01:26:03,540 --> 01:26:05,400
um kind of get

2142
01:26:05,400 --> 01:26:07,980
relate to my home Gateway

2143
01:26:07,980 --> 01:26:10,020
but on the other hand if my own Gateway

2144
01:26:10,020 --> 01:26:13,020
dies then I would advertise the slash 64

2145
01:26:13,020 --> 01:26:14,460
to the home

2146
01:26:14,460 --> 01:26:16,440
and then my home could still be served

2147
01:26:16,440 --> 01:26:19,139
by my phone you see the kind of use case

2148
01:26:19,139 --> 01:26:21,120
was that clear not clear

2149
01:26:21,120 --> 01:26:24,480
so take the phone connect it the phone

2150
01:26:24,480 --> 01:26:27,659
is the stub router the phone is the step

2151
01:26:27,659 --> 01:26:30,420
brother but the prefix is not provided

2152
01:26:30,420 --> 01:26:32,820
by the httpd and you have to to act as a

2153
01:26:32,820 --> 01:26:35,340
relay for the Wi-Fi by the way but I

2154
01:26:35,340 --> 01:26:37,199
mean just wondering if that could be

2155
01:26:37,199 --> 01:26:39,239
because at home I would have used it

2156
01:26:39,239 --> 01:26:41,580
recently if I had it because I had this

2157
01:26:41,580 --> 01:26:43,500
discard so they cut they cut my fiber

2158
01:26:43,500 --> 01:26:45,719
literally on the road right road work

2159
01:26:45,719 --> 01:26:49,139
got fiber and and my whole home was

2160
01:26:49,139 --> 01:26:52,199
isolated but I had my phone and I I

2161
01:26:52,199 --> 01:26:54,300
could effectively teaser a few things on

2162
01:26:54,300 --> 01:26:56,340
my phone but what I really would have

2163
01:26:56,340 --> 01:26:58,860
liked to see is

2164
01:26:58,860 --> 01:27:01,139
my phone takes over my home when my home

2165
01:27:01,139 --> 01:27:02,940
is not there but on the other hand

2166
01:27:02,940 --> 01:27:05,280
whatever I teaser to my phone would be

2167
01:27:05,280 --> 01:27:07,620
routed through my home Gateway when my

2168
01:27:07,620 --> 01:27:10,980
phone is at home so you got a A mobile

2169
01:27:10,980 --> 01:27:16,080
provider providing uh Slash 56 to your

2170
01:27:16,080 --> 01:27:19,380
phone so it's not the HTTP right the

2171
01:27:19,380 --> 01:27:20,940
bottom line is not

2172
01:27:20,940 --> 01:27:24,480
I get the prefix yeah 64 but not 56.

2173
01:27:24,480 --> 01:27:26,219
oh

2174
01:27:26,219 --> 01:27:27,360
C40

2175
01:27:27,360 --> 01:27:29,900
yeah

2176
01:27:33,139 --> 01:27:37,380
Broadband for what what I cannot use it

2177
01:27:37,380 --> 01:27:39,060
but at the same time when my home

2178
01:27:39,060 --> 01:27:41,100
Gateway is dead hey use brought that for

2179
01:27:41,100 --> 01:27:42,300
more stuff

2180
01:27:42,300 --> 01:27:44,699
you see and and the bottom line being

2181
01:27:44,699 --> 01:27:46,440
it's not the FCP in that case that's why

2182
01:27:46,440 --> 01:27:49,159
I came to the mic

2183
01:27:50,460 --> 01:27:52,620
so uh Ted lemon

2184
01:27:52,620 --> 01:27:55,560
um I what Pascal just described as a use

2185
01:27:55,560 --> 01:27:57,360
case that sort of fell into the home net

2186
01:27:57,360 --> 01:27:59,040
Charter but doesn't entirely fall into

2187
01:27:59,040 --> 01:28:00,900
our Charter

2188
01:28:00,900 --> 01:28:02,639
um and there's a reason why we

2189
01:28:02,639 --> 01:28:04,020
constrained our Charter the way we did

2190
01:28:04,020 --> 01:28:05,280
it's because we want to get something

2191
01:28:05,280 --> 01:28:07,560
done that actually works and that's not

2192
01:28:07,560 --> 01:28:09,179
to criticize what Pascal is proposing

2193
01:28:09,179 --> 01:28:10,620
because I think what Pascal is proposing

2194
01:28:10,620 --> 01:28:13,440
is also useful but we probably ought to

2195
01:28:13,440 --> 01:28:14,880
get the work done that we're chartered

2196
01:28:14,880 --> 01:28:16,500
for first and then we can see if we want

2197
01:28:16,500 --> 01:28:19,080
to yeah I feel there's someone here is

2198
01:28:19,080 --> 01:28:22,519
going to the mic soon

2199
01:28:23,239 --> 01:28:26,460
yeah lorenza clivia I think that's out

2200
01:28:26,460 --> 01:28:28,320
of scope but also I mean this is not so

2201
01:28:28,320 --> 01:28:30,360
it doesn't need any protocols to do this

2202
01:28:30,360 --> 01:28:32,040
right like all you need is an option on

2203
01:28:32,040 --> 01:28:33,659
your phone that says become a router for

2204
01:28:33,659 --> 01:28:35,280
the for the Wi-Fi network and that's it

2205
01:28:35,280 --> 01:28:38,100
right I mean I I don't think the mobile

2206
01:28:38,100 --> 01:28:39,960
devices on the market today have this

2207
01:28:39,960 --> 01:28:41,880
option that's partly because mobile data

2208
01:28:41,880 --> 01:28:44,280
is so expensive and and something that

2209
01:28:44,280 --> 01:28:46,020
you really really really want to use it

2210
01:28:46,020 --> 01:28:47,580
to tell you explicitly that they want

2211
01:28:47,580 --> 01:28:49,320
but like it's not hard to build such an

2212
01:28:49,320 --> 01:28:51,420
option and all the bits that you need

2213
01:28:51,420 --> 01:28:53,400
are there today you just like send an RA

2214
01:28:53,400 --> 01:28:55,620
and then you're done so

2215
01:28:55,620 --> 01:28:56,400
um

2216
01:28:56,400 --> 01:28:59,100
I think yeah I don't think that's maybe

2217
01:28:59,100 --> 01:29:01,760
should be here

2218
01:29:06,239 --> 01:29:09,000
Michael Richardson here um so I think it

2219
01:29:09,000 --> 01:29:10,739
largely Works actually Lorenzo I

2220
01:29:10,739 --> 01:29:13,080
actually think I just have that option

2221
01:29:13,080 --> 01:29:14,580
but

2222
01:29:14,580 --> 01:29:16,800
um uh it just it just doesn't work with

2223
01:29:16,800 --> 01:29:17,760
every

2224
01:29:17,760 --> 01:29:20,880
every LTE provider that provides V6 for

2225
01:29:20,880 --> 01:29:23,639
some reason some of them don't do the

2226
01:29:23,639 --> 01:29:25,620
right thing to enable tethering and I

2227
01:29:25,620 --> 01:29:27,179
haven't figured out the pattern but I

2228
01:29:27,179 --> 01:29:29,580
know it worked in Austria and

2229
01:29:29,580 --> 01:29:31,739
Netherlands but not in Germany on the

2230
01:29:31,739 --> 01:29:33,300
same sim

2231
01:29:33,300 --> 01:29:34,800
so

2232
01:29:34,800 --> 01:29:37,679
um on a German Sim it worked in the

2233
01:29:37,679 --> 01:29:39,360
Austria and Netherlands but not in

2234
01:29:39,360 --> 01:29:41,100
Germany so

2235
01:29:41,100 --> 01:29:43,320
um so a lot of that a lot of that works

2236
01:29:43,320 --> 01:29:45,120
but I actually think that the the use

2237
01:29:45,120 --> 01:29:47,159
cases actually

2238
01:29:47,159 --> 01:29:48,420
um

2239
01:29:48,420 --> 01:29:52,139
um I show up in my coffin Hotel

2240
01:29:52,139 --> 01:29:54,840
and I would really like to have all of

2241
01:29:54,840 --> 01:29:57,960
the devices that they've given me in

2242
01:29:57,960 --> 01:30:00,719
that environment to join my network and

2243
01:30:00,719 --> 01:30:03,840
when I leave again that's the thing uh

2244
01:30:03,840 --> 01:30:06,179
that they go away now there's other

2245
01:30:06,179 --> 01:30:09,060
issues with how that could work but on

2246
01:30:09,060 --> 01:30:11,520
the routing side of things right you

2247
01:30:11,520 --> 01:30:13,320
know increasingly we have people that

2248
01:30:13,320 --> 01:30:14,880
don't have internet connections at home

2249
01:30:14,880 --> 01:30:16,980
and they're okay with the concept that

2250
01:30:16,980 --> 01:30:18,659
their home is offline when their phone

2251
01:30:18,659 --> 01:30:23,219
is not present right and um so

2252
01:30:23,219 --> 01:30:26,159
that's kind of is is a you know I think

2253
01:30:26,159 --> 01:30:27,840
we should think about the stub Network

2254
01:30:27,840 --> 01:30:30,780
situation in that scenario where there

2255
01:30:30,780 --> 01:30:34,260
was a 15.4 uh Network behind a stub

2256
01:30:34,260 --> 01:30:37,560
router in the coffin hotel right my

2257
01:30:37,560 --> 01:30:40,860
phone shows up as the CPE router I don't

2258
01:30:40,860 --> 01:30:43,199
think there's any any changes

2259
01:30:43,199 --> 01:30:46,080
okay I think it's just all there right

2260
01:30:46,080 --> 01:30:47,699
it just

2261
01:30:47,699 --> 01:30:51,420
um it it there might be some get some

2262
01:30:51,420 --> 01:30:53,580
some some gotchas that we we haven't

2263
01:30:53,580 --> 01:30:56,179
thought of it

2264
01:30:57,360 --> 01:30:59,760
uh Esco

2265
01:30:59,760 --> 01:31:01,860
oh sorry do you want me to

2266
01:31:01,860 --> 01:31:04,620
you need to be to put yourself in the

2267
01:31:04,620 --> 01:31:06,920
queue

2268
01:31:08,040 --> 01:31:10,620
yeah so it just got me thinking about uh

2269
01:31:10,620 --> 01:31:13,320
Cellular in home so there's one case

2270
01:31:13,320 --> 01:31:15,000
that is getting increasingly common is

2271
01:31:15,000 --> 01:31:17,100
to have cellular backup of your home

2272
01:31:17,100 --> 01:31:20,040
router so instead of having only a cable

2273
01:31:20,040 --> 01:31:23,520
or Fiber connection you also have a an

2274
01:31:23,520 --> 01:31:26,280
additional cellular backup so we might

2275
01:31:26,280 --> 01:31:28,380
have to consider that kind of case what

2276
01:31:28,380 --> 01:31:29,460
if the

2277
01:31:29,460 --> 01:31:32,460
yeah home router slash CPE switches to

2278
01:31:32,460 --> 01:31:35,040
the cellular uh backup so would that

2279
01:31:35,040 --> 01:31:37,080
have any impact on the connectivity we

2280
01:31:37,080 --> 01:31:39,239
of course want to keep that connectivity

2281
01:31:39,239 --> 01:31:40,199
for

2282
01:31:40,199 --> 01:31:42,480
for all the iot devices or stop network

2283
01:31:42,480 --> 01:31:44,760
devices that there are

2284
01:31:44,760 --> 01:31:46,500
so I think that's something to consider

2285
01:31:46,500 --> 01:31:50,100
as well uh not just a user phone that

2286
01:31:50,100 --> 01:31:52,679
takes that function but an actual backup

2287
01:31:52,679 --> 01:31:54,840
module in the CPE

2288
01:31:54,840 --> 01:31:56,580
maybe there's nothing special we need to

2289
01:31:56,580 --> 01:31:59,400
do for that yeah maybe there is and by

2290
01:31:59,400 --> 01:32:01,560
the way it's not expensive cellular I I

2291
01:32:01,560 --> 01:32:04,800
use it as if it's a free resource which

2292
01:32:04,800 --> 01:32:06,840
and it's often faster than going to the

2293
01:32:06,840 --> 01:32:10,980
Wi-Fi network of some place you are so

2294
01:32:10,980 --> 01:32:13,020
yeah

2295
01:32:13,020 --> 01:32:15,540
I'm sorry if that that's not the chatter

2296
01:32:15,540 --> 01:32:18,600
for uh the point I mean I wanted more

2297
01:32:18,600 --> 01:32:21,000
than the array what what I was asking is

2298
01:32:21,000 --> 01:32:23,460
probably that the devices don't

2299
01:32:23,460 --> 01:32:26,040
effectively change their addresses they

2300
01:32:26,040 --> 01:32:28,320
want either to my phone stated or to my

2301
01:32:28,320 --> 01:32:30,540
phone they see I need the phone prefix

2302
01:32:30,540 --> 01:32:32,880
the one or they know the phone prefix

2303
01:32:32,880 --> 01:32:34,980
the one that are on my home keep the

2304
01:32:34,980 --> 01:32:36,659
home address they don't see the array

2305
01:32:36,659 --> 01:32:39,120
from the phone and and they send the

2306
01:32:39,120 --> 01:32:40,679
packet to the home Gateway but the home

2307
01:32:40,679 --> 01:32:42,300
Gateway is aware that the broadband

2308
01:32:42,300 --> 01:32:44,940
connection is broken it's aware that the

2309
01:32:44,940 --> 01:32:47,280
phone is a plan B and so it will relay

2310
01:32:47,280 --> 01:32:50,420
the packets to the phone

2311
01:32:51,600 --> 01:32:54,500
on the phone network

2312
01:32:56,340 --> 01:32:59,480
oh that's yes

2313
01:33:01,679 --> 01:33:04,139
and yes the idea would be yes if you

2314
01:33:04,139 --> 01:33:06,300
wanted that you can't state your name

2315
01:33:06,300 --> 01:33:09,060
forensically you can't have you can't

2316
01:33:09,060 --> 01:33:10,679
just have devices on the home network

2317
01:33:10,679 --> 01:33:12,659
forward to the Gateway and the Gateway

2318
01:33:12,659 --> 01:33:14,159
forward to the phone because the source

2319
01:33:14,159 --> 01:33:16,020
address will be wrong they will be using

2320
01:33:16,020 --> 01:33:17,580
the Wi-Fi network Source address from

2321
01:33:17,580 --> 01:33:19,440
the assigned by the ISP which is now

2322
01:33:19,440 --> 01:33:21,960
basically off the network off they're

2323
01:33:21,960 --> 01:33:23,280
basically disconnected from the internet

2324
01:33:23,280 --> 01:33:25,380
and so it's just going to go nowhere I

2325
01:33:25,380 --> 01:33:26,820
mean you couldn't add it but we should

2326
01:33:26,820 --> 01:33:28,739
probably not go there I mean the good

2327
01:33:28,739 --> 01:33:30,239
news is all the phone needs to do is

2328
01:33:30,239 --> 01:33:32,100
send an RA on the Wi-Fi network and it

2329
01:33:32,100 --> 01:33:33,659
should work right even the hosts on the

2330
01:33:33,659 --> 01:33:35,400
Wi-Fi network that have

2331
01:33:35,400 --> 01:33:37,020
you know to have

2332
01:33:37,020 --> 01:33:40,560
IPv6 addresses from the from the ISP can

2333
01:33:40,560 --> 01:33:42,860
like acquire a second IPv6

2334
01:33:42,860 --> 01:33:45,719
addressing scenario yeah or the multiple

2335
01:33:45,719 --> 01:33:47,639
real scenario it sort of works I mean

2336
01:33:47,639 --> 01:33:49,380
like the multiple root of scenario works

2337
01:33:49,380 --> 01:33:52,139
when one of them is not advertising when

2338
01:33:52,139 --> 01:33:53,760
they're both advertising I think yeah we

2339
01:33:53,760 --> 01:33:55,920
don't really have but anyway yeah that's

2340
01:33:55,920 --> 01:33:59,360
uh just wanted to point that out

2341
01:34:00,659 --> 01:34:04,440
um well given that the less uh comments

2342
01:34:04,440 --> 01:34:07,800
were almost out of scope I guess we're

2343
01:34:07,800 --> 01:34:08,940
done

2344
01:34:08,940 --> 01:34:12,060
do you think we're done

2345
01:34:12,060 --> 01:34:13,560
thank you very much

2346
01:34:13,560 --> 01:34:16,679
[Music]

2347
01:34:42,020 --> 01:34:45,080
thank you

2348
01:34:55,260 --> 01:34:57,540
most money

2349
01:34:57,540 --> 01:34:59,699
I was terrified when I saw

2350
01:34:59,699 --> 01:35:01,699
myself

2351
01:35:02,040 --> 01:35:03,420
yeah well

2352
01:35:03,420 --> 01:35:05,820
I've got a little bit I basically I'm so

2353
01:35:05,820 --> 01:35:08,400
behind on work from Heaven taking

2354
01:35:08,400 --> 01:35:12,239
vacation like a big loser all right

2355
01:35:12,239 --> 01:35:15,379
we don't do that anymore

2356
01:35:16,699 --> 01:35:19,679
yeah it was it was very good I had a

2357
01:35:19,679 --> 01:35:21,360
great time

2358
01:35:21,360 --> 01:35:22,920
that's right and all my Feet's all over

2359
01:35:22,920 --> 01:35:26,900
the place Good Times

2360
01:35:29,580 --> 01:35:31,380
all right well I don't know are you are

2361
01:35:31,380 --> 01:35:33,600
you gonna be I don't know we're gonna be

2362
01:35:33,600 --> 01:35:36,320
in any more meetings

