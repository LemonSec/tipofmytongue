1
00:00:04,860 --> 00:00:07,860
foreign

2
00:00:37,079 --> 00:00:39,200
thank you

3
00:00:58,680 --> 00:01:01,399
that's the right

4
00:01:11,159 --> 00:01:13,640
because

5
00:01:35,100 --> 00:01:38,059
thank you

6
00:01:43,920 --> 00:01:46,920
foreign

7
00:02:13,680 --> 00:02:15,860
foreign

8
00:02:46,260 --> 00:02:48,319
thank you

9
00:02:48,319 --> 00:02:51,799
if you join

10
00:02:53,280 --> 00:02:55,280
Ed

11
00:02:55,379 --> 00:02:58,099
I figurative

12
00:02:59,099 --> 00:03:01,099
yes

13
00:03:22,459 --> 00:03:25,640
thank you

14
00:03:52,560 --> 00:03:54,860
foreign

15
00:04:26,639 --> 00:04:28,880
foreign

16
00:05:07,259 --> 00:05:09,380
thank you

17
00:05:24,479 --> 00:05:27,440
all right

18
00:05:29,580 --> 00:05:31,680
welcome everybody

19
00:05:31,680 --> 00:05:34,880
should we get started

20
00:05:36,000 --> 00:05:36,960
um

21
00:05:36,960 --> 00:05:39,720
welcome this is ICC RG

22
00:05:39,720 --> 00:05:41,460
if you don't know what they said that

23
00:05:41,460 --> 00:05:44,520
what that is you're on the wrong room

24
00:05:44,520 --> 00:05:47,100
you might since you could say here you

25
00:05:47,100 --> 00:05:48,720
might learn a thing or do

26
00:05:48,720 --> 00:05:52,560
so either ways welcome to iccrg

27
00:05:52,560 --> 00:05:54,780
um it's been a while since we met in a

28
00:05:54,780 --> 00:05:55,860
room it's wonderful to see everybody

29
00:05:55,860 --> 00:05:57,300
here

30
00:05:57,300 --> 00:05:57,960
um

31
00:05:57,960 --> 00:05:59,699
I'm

32
00:05:59,699 --> 00:06:04,520
um going to start off

33
00:06:06,000 --> 00:06:07,680
um by

34
00:06:07,680 --> 00:06:08,639
um

35
00:06:08,639 --> 00:06:11,940
asking Colin to step up and say a couple

36
00:06:11,940 --> 00:06:14,240
of words

37
00:06:15,060 --> 00:06:18,380
about our new chairs

38
00:06:25,380 --> 00:06:27,180
it's like this opportunity to come stand

39
00:06:27,180 --> 00:06:28,919
at the front

40
00:06:28,919 --> 00:06:31,919
so um hi her I'm Colin Perkins uh I'm

41
00:06:31,919 --> 00:06:35,280
the irtf chair I just wanted to

42
00:06:35,280 --> 00:06:36,840
um as some of you may have seen we've

43
00:06:36,840 --> 00:06:39,000
we've had a change of the chairs for

44
00:06:39,000 --> 00:06:41,880
This research group uh in the last

45
00:06:41,880 --> 00:06:43,020
couple of months

46
00:06:43,020 --> 00:06:46,680
um so I wanted to uh firstly thank Jonah

47
00:06:46,680 --> 00:06:48,080
who has been

48
00:06:48,080 --> 00:06:50,580
sharing this group for I don't know how

49
00:06:50,580 --> 00:06:52,860
many years very many years some years

50
00:06:52,860 --> 00:06:56,639
some years yes and has been doing an

51
00:06:56,639 --> 00:06:59,759
excellent job cheering it's uh

52
00:06:59,759 --> 00:07:00,479
um

53
00:07:00,479 --> 00:07:03,360
we we figured after a decade or so we

54
00:07:03,360 --> 00:07:05,940
should perhaps give him some help

55
00:07:05,940 --> 00:07:09,240
um so I'm very pleased to welcome Simone

56
00:07:09,240 --> 00:07:12,600
Ferlin and Michael Shapiro um both of

57
00:07:12,600 --> 00:07:14,699
whom are remotes this time unfortunately

58
00:07:14,699 --> 00:07:16,319
they're not here in person

59
00:07:16,319 --> 00:07:18,720
um but they're joining generous chairs

60
00:07:18,720 --> 00:07:20,699
and so I just wanted to

61
00:07:20,699 --> 00:07:23,099
thank Janna for his service thanks

62
00:07:23,099 --> 00:07:25,380
Simone and Michael for for being willing

63
00:07:25,380 --> 00:07:27,360
to take this up

64
00:07:27,360 --> 00:07:30,599
and I look forward to the reinvigorated

65
00:07:30,599 --> 00:07:33,479
uh group and

66
00:07:33,479 --> 00:07:36,360
uh there's a some of some of you will

67
00:07:36,360 --> 00:07:38,400
have seen there's a chatter uh revision

68
00:07:38,400 --> 00:07:39,840
going on

69
00:07:39,840 --> 00:07:41,940
uh trying to come up with the ideas for

70
00:07:41,940 --> 00:07:44,160
the next few years of the group and I

71
00:07:44,160 --> 00:07:48,180
look forward to the research to come

72
00:07:48,180 --> 00:07:50,580
thank you Colin

73
00:07:50,580 --> 00:07:52,919
um I want to say uh that it's wonderful

74
00:07:52,919 --> 00:07:57,000
to have folks joining in and and and and

75
00:07:57,000 --> 00:07:59,940
picking up uh the chatting I want to ask

76
00:07:59,940 --> 00:08:01,919
Simone if she wanted to say a couple of

77
00:08:01,919 --> 00:08:03,720
words

78
00:08:03,720 --> 00:08:06,720
foreign

79
00:08:08,000 --> 00:08:10,500
I just want to say hi for those in the

80
00:08:10,500 --> 00:08:13,580
room that I know from the past

81
00:08:13,580 --> 00:08:17,759
and yes please read and comment on the

82
00:08:17,759 --> 00:08:19,560
charter that

83
00:08:19,560 --> 00:08:22,319
um I circulated on the list yesterday

84
00:08:22,319 --> 00:08:25,979
and I think we are ready to get started

85
00:08:25,979 --> 00:08:27,979
um

86
00:08:29,340 --> 00:08:33,779
um thanks Simone uh I I want

87
00:08:33,779 --> 00:08:36,620
um to

88
00:08:38,159 --> 00:08:39,599
um

89
00:08:39,599 --> 00:08:41,580
I just want to say that it's wonderful

90
00:08:41,580 --> 00:08:44,520
to have more uh chairs more people to

91
00:08:44,520 --> 00:08:47,040
help support what we are trying to do

92
00:08:47,040 --> 00:08:49,140
and we're going to start with doing a

93
00:08:49,140 --> 00:08:51,120
re-charter of the research group

94
00:08:51,120 --> 00:08:53,100
especially in light of the new work

95
00:08:53,100 --> 00:08:54,839
that's happening in the ietf around the

96
00:08:54,839 --> 00:08:56,279
condition control working group and so

97
00:08:56,279 --> 00:08:57,959
on we thought it was a good opportunity

98
00:08:57,959 --> 00:08:59,940
and time to think about exactly what it

99
00:08:59,940 --> 00:09:03,480
is that we want to do in the research

100
00:09:03,480 --> 00:09:06,300
group so yeah focused on that

101
00:09:06,300 --> 00:09:08,279
um uh we you'll definitely hear more

102
00:09:08,279 --> 00:09:10,440
about that please stay engaged on the

103
00:09:10,440 --> 00:09:12,660
list and elsewhere as you see

104
00:09:12,660 --> 00:09:14,580
opportunities to chime in we would love

105
00:09:14,580 --> 00:09:18,300
your input uh and we look forward to it

106
00:09:18,300 --> 00:09:21,000
um the charter is the first place that

107
00:09:21,000 --> 00:09:22,740
we start but you're going to see from

108
00:09:22,740 --> 00:09:24,779
there us trying to build a community us

109
00:09:24,779 --> 00:09:27,720
trying to gather more people uh to to

110
00:09:27,720 --> 00:09:31,019
form a true research Community around

111
00:09:31,019 --> 00:09:33,720
um around condition control including

112
00:09:33,720 --> 00:09:36,000
Academia including practitioners people

113
00:09:36,000 --> 00:09:38,160
who are actually deploying stuff

114
00:09:38,160 --> 00:09:39,959
um so we want all of those folks to be

115
00:09:39,959 --> 00:09:42,420
engaged so look forward to your

116
00:09:42,420 --> 00:09:44,640
contributions going forward and please

117
00:09:44,640 --> 00:09:48,800
chime in on the charter when you see it

118
00:09:48,839 --> 00:09:53,720
but uh Simone what do we have today

119
00:09:54,660 --> 00:09:58,560
um Let me show my face again so we have

120
00:09:58,560 --> 00:10:00,720
um we're having a bit of a problem with

121
00:10:00,720 --> 00:10:02,279
the first speaker

122
00:10:02,279 --> 00:10:04,080
um so I would suggest that we could

123
00:10:04,080 --> 00:10:06,720
start with Michael Wetzel

124
00:10:06,720 --> 00:10:08,279
um if you don't know him then you are

125
00:10:08,279 --> 00:10:10,519
probably wrong in this room

126
00:10:10,519 --> 00:10:14,040
so we can start with him and run through

127
00:10:14,040 --> 00:10:17,700
the agenda and I try to see what what's

128
00:10:17,700 --> 00:10:21,000
happened in my power first speaker

129
00:10:21,000 --> 00:10:24,440
so yeah

130
00:10:27,000 --> 00:10:30,200
Michael you're up

131
00:10:35,519 --> 00:10:36,959
okay

132
00:10:36,959 --> 00:10:38,180
cool

133
00:10:38,180 --> 00:10:40,680
hello everybody

134
00:10:40,680 --> 00:10:43,740
and sorry for the slightly silly title

135
00:10:43,740 --> 00:10:45,720
um but the point is that this is a bit

136
00:10:45,720 --> 00:10:47,459
more you know there is a bit more of a

137
00:10:47,459 --> 00:10:49,740
point to it than it may seem

138
00:10:49,740 --> 00:10:51,180
okay

139
00:10:51,180 --> 00:10:53,640
um next slide

140
00:10:53,640 --> 00:10:54,800
you know

141
00:10:54,800 --> 00:10:56,779
first of all

142
00:10:56,779 --> 00:10:59,579
uh the reason I do this the reason I

143
00:10:59,579 --> 00:11:01,620
present this is that in the world I am

144
00:11:01,620 --> 00:11:03,959
from which is the world of Academia

145
00:11:03,959 --> 00:11:06,839
when I try to work on performance

146
00:11:06,839 --> 00:11:09,480
Improvement I get no more money there is

147
00:11:09,480 --> 00:11:11,700
no more funding for just making the

148
00:11:11,700 --> 00:11:13,519
internet faster

149
00:11:13,519 --> 00:11:16,019
the results the other side of it that

150
00:11:16,019 --> 00:11:18,180
when I talked to my 13 year old daughter

151
00:11:18,180 --> 00:11:20,700
about that I'm improving the speed of

152
00:11:20,700 --> 00:11:22,560
the internet she says why

153
00:11:22,560 --> 00:11:24,720
and I have no good answer because it

154
00:11:24,720 --> 00:11:26,279
just works well enough for her it works

155
00:11:26,279 --> 00:11:28,200
well enough for many things

156
00:11:28,200 --> 00:11:31,140
so I'm trying to do you know to see more

157
00:11:31,140 --> 00:11:33,180
of a point of what I'm doing

158
00:11:33,180 --> 00:11:36,720
and uh had this idea probably if you do

159
00:11:36,720 --> 00:11:38,820
congestions all right there is some game

160
00:11:38,820 --> 00:11:40,920
to be made in terms of energy saving and

161
00:11:40,920 --> 00:11:43,320
it turns out that this is true

162
00:11:43,320 --> 00:11:44,820
that's what I'm trying to present here

163
00:11:44,820 --> 00:11:47,880
so first of all uh energy saving for the

164
00:11:47,880 --> 00:11:49,860
internet the first thing I did is try to

165
00:11:49,860 --> 00:11:51,480
I tried to understand how much of a

166
00:11:51,480 --> 00:11:53,700
point there is anyway all together

167
00:11:53,700 --> 00:11:55,380
because the internet helps us save

168
00:11:55,380 --> 00:11:57,720
energy it helps us safe

169
00:11:57,720 --> 00:12:00,420
you know CO2 emissions and so forth by

170
00:12:00,420 --> 00:12:02,339
having Meetings online

171
00:12:02,339 --> 00:12:04,860
but it does also contribute it's a

172
00:12:04,860 --> 00:12:07,079
significant number the number is very

173
00:12:07,079 --> 00:12:09,240
hard to get because what is the internet

174
00:12:09,240 --> 00:12:11,459
you know there are many many studies

175
00:12:11,459 --> 00:12:13,680
there are some pretty serious studies uh

176
00:12:13,680 --> 00:12:15,360
but they're also old there's a hot Nets

177
00:12:15,360 --> 00:12:18,540
paper from I think 2011 or 12. but if

178
00:12:18,540 --> 00:12:19,740
you look through these studies and you

179
00:12:19,740 --> 00:12:21,240
try to get an idea

180
00:12:21,240 --> 00:12:23,640
turns out that the contribution to uh

181
00:12:23,640 --> 00:12:25,620
greenhouse gases is maybe in the range

182
00:12:25,620 --> 00:12:29,600
of 0.5 percent to 1.2 percent

183
00:12:29,600 --> 00:12:32,579
uh the aviation industry appears to be

184
00:12:32,579 --> 00:12:35,040
in the range of 3.5 so it's something

185
00:12:35,040 --> 00:12:37,620
like a third to a seventh a sixth a

186
00:12:37,620 --> 00:12:39,660
fifth something like that of the

187
00:12:39,660 --> 00:12:41,220
aviation industry depending on what you

188
00:12:41,220 --> 00:12:42,899
look at depending on which study you

189
00:12:42,899 --> 00:12:45,959
look at so it's uh you know it's a

190
00:12:45,959 --> 00:12:49,260
significant amount still and uh what is

191
00:12:49,260 --> 00:12:52,560
interesting about it I think is that if

192
00:12:52,560 --> 00:12:54,480
you would think of let's go out and

193
00:12:54,480 --> 00:12:56,220
change all the aviation industry that's

194
00:12:56,220 --> 00:12:58,019
something that is basically impossible

195
00:12:58,019 --> 00:13:00,300
to do whereas here we're doing standards

196
00:13:00,300 --> 00:13:02,040
for the whole internet when we make a

197
00:13:02,040 --> 00:13:03,660
big change to something it gets rolled

198
00:13:03,660 --> 00:13:05,519
out into our asses we can actually

199
00:13:05,519 --> 00:13:07,260
change the world right in terms of the

200
00:13:07,260 --> 00:13:10,139
internet so there is a big mileage here

201
00:13:10,139 --> 00:13:11,820
I think and this is why I think this is

202
00:13:11,820 --> 00:13:12,779
interesting

203
00:13:12,779 --> 00:13:16,440
another side note to consider something

204
00:13:16,440 --> 00:13:18,839
I took from looking at these studies of

205
00:13:18,839 --> 00:13:21,360
energy saving energy consumption for the

206
00:13:21,360 --> 00:13:23,760
internet and also the way that Energy

207
00:13:23,760 --> 00:13:26,940
Efficiency is evolving is that most

208
00:13:26,940 --> 00:13:29,839
probably it's probably good to

209
00:13:29,839 --> 00:13:32,880
consider the last mile consumer premises

210
00:13:32,880 --> 00:13:35,399
equipment and and hosts in terms of

211
00:13:35,399 --> 00:13:38,160
energy saving

212
00:13:38,160 --> 00:13:40,260
I can have a long long-winded

213
00:13:40,260 --> 00:13:42,360
explanation for why and what is but I

214
00:13:42,360 --> 00:13:44,040
mean let's not get into this

215
00:13:44,040 --> 00:13:47,120
so next slide

216
00:13:47,160 --> 00:13:52,019
please okay uh today often commonly

217
00:13:52,019 --> 00:13:54,060
energy saving is regarded as a

218
00:13:54,060 --> 00:13:56,279
performance trade-off right smartphones

219
00:13:56,279 --> 00:13:58,380
expose it to us as something that we can

220
00:13:58,380 --> 00:14:00,720
turn on and usually people turn it on as

221
00:14:00,720 --> 00:14:03,060
a way to save energy when the battery

222
00:14:03,060 --> 00:14:04,380
runs low

223
00:14:04,380 --> 00:14:06,720
but not just for the sake of the planet

224
00:14:06,720 --> 00:14:08,940
because it's it's regarded as a

225
00:14:08,940 --> 00:14:10,680
trade-off right if you look I mean I

226
00:14:10,680 --> 00:14:12,540
found this explanation from the

227
00:14:12,540 --> 00:14:15,240
Microsoft page about some laptop going

228
00:14:15,240 --> 00:14:16,860
into power saving mode depending on

229
00:14:16,860 --> 00:14:18,779
whether it's on power or unplugged or

230
00:14:18,779 --> 00:14:21,720
not right so it is often regarded as a

231
00:14:21,720 --> 00:14:23,700
trade-off of my point here is that it

232
00:14:23,700 --> 00:14:25,200
doesn't need to be not not everything

233
00:14:25,200 --> 00:14:26,820
here is a trade-off

234
00:14:26,820 --> 00:14:29,480
next

235
00:14:30,899 --> 00:14:34,019
um yeah so that's my main point and the

236
00:14:34,019 --> 00:14:35,760
key thing here really is that if we

237
00:14:35,760 --> 00:14:38,459
reduce the flow completion time which is

238
00:14:38,459 --> 00:14:40,320
something we all want in this room I

239
00:14:40,320 --> 00:14:41,160
hope

240
00:14:41,160 --> 00:14:44,339
then it means better performance and it

241
00:14:44,339 --> 00:14:46,079
means less energy and that's very true

242
00:14:46,079 --> 00:14:48,600
very simply because we got you know more

243
00:14:48,600 --> 00:14:51,300
sleep time longer sleep periods that can

244
00:14:51,300 --> 00:14:52,860
be done with better internet congestion

245
00:14:52,860 --> 00:14:54,600
controls I I'm showing you a simple

246
00:14:54,600 --> 00:14:56,880
strongman example for this in the next

247
00:14:56,880 --> 00:14:59,720
slides please next

248
00:15:01,139 --> 00:15:04,079
um so I wrote this short paper which

249
00:15:04,079 --> 00:15:06,300
contains the detail of the details of of

250
00:15:06,300 --> 00:15:09,240
the test that I'm gonna explain briefly

251
00:15:09,240 --> 00:15:11,100
here if you want to know the details

252
00:15:11,100 --> 00:15:13,320
it's in there I looked at Wi-Fi I just

253
00:15:13,320 --> 00:15:15,300
looked at can we well how much energy

254
00:15:15,300 --> 00:15:17,040
will be saved by cutting the flow

255
00:15:17,040 --> 00:15:19,380
completion time again the point is to

256
00:15:19,380 --> 00:15:21,480
make it very very simple example I'm not

257
00:15:21,480 --> 00:15:23,519
proposing to increase the initial window

258
00:15:23,519 --> 00:15:24,959
it's based on just the initial window

259
00:15:24,959 --> 00:15:26,940
for the sake of a simple case right of

260
00:15:26,940 --> 00:15:29,100
saying here's a straw man let's look

261
00:15:29,100 --> 00:15:33,260
let's look how it behaves next

262
00:15:33,860 --> 00:15:37,980
so first of all in Wi-Fi there are quite

263
00:15:37,980 --> 00:15:42,000
a number of schemes that put devices to

264
00:15:42,000 --> 00:15:45,600
sleep it gets really complex with 802.11

265
00:15:45,600 --> 00:15:48,120
ax that that offers quite a number of

266
00:15:48,120 --> 00:15:49,639
things but

267
00:15:49,639 --> 00:15:52,860
well it turns out that the most commonly

268
00:15:52,860 --> 00:15:55,019
implemented scheme is a pretty old power

269
00:15:55,019 --> 00:15:57,959
saving mode uh from the old 80211

270
00:15:57,959 --> 00:15:59,180
standard

271
00:15:59,180 --> 00:16:02,339
which basically uh puts your device to

272
00:16:02,339 --> 00:16:05,100
sleep after 200 milliseconds of not

273
00:16:05,100 --> 00:16:07,440
seeing any activity now there are phases

274
00:16:07,440 --> 00:16:09,720
of trying to see if there's no data

275
00:16:09,720 --> 00:16:11,459
there are also different states in the

276
00:16:11,459 --> 00:16:12,779
whole thing so it's a bit more complex

277
00:16:12,779 --> 00:16:15,000
but I think it's a reasonable

278
00:16:15,000 --> 00:16:16,680
approximation to think of it like that

279
00:16:16,680 --> 00:16:18,420
it's basically putting everything

280
00:16:18,420 --> 00:16:20,100
everything to sleep after 200

281
00:16:20,100 --> 00:16:22,260
milliseconds

282
00:16:22,260 --> 00:16:23,760
um there's a relatively recent paper

283
00:16:23,760 --> 00:16:26,880
from infocommer 2021 where the authors

284
00:16:26,880 --> 00:16:29,100
looked at some Modern smartphones and

285
00:16:29,100 --> 00:16:30,839
they found the same behavior

286
00:16:30,839 --> 00:16:33,180
despite these smartphones actually being

287
00:16:33,180 --> 00:16:36,300
compatible to either 211 ad which also

288
00:16:36,300 --> 00:16:38,279
supports much more sophisticated ways of

289
00:16:38,279 --> 00:16:40,800
doing it so it seems that the most

290
00:16:40,800 --> 00:16:42,720
commonly implemented thing today still

291
00:16:42,720 --> 00:16:44,639
is basically sleeping after 200

292
00:16:44,639 --> 00:16:47,420
milliseconds of inactivity

293
00:16:47,420 --> 00:16:51,120
now that plays a role when transfers are

294
00:16:51,120 --> 00:16:53,100
short when I have a very long transfer

295
00:16:53,100 --> 00:16:55,199
than 200 milliseconds in relation to the

296
00:16:55,199 --> 00:16:57,779
transfer becomes small right when

297
00:16:57,779 --> 00:17:00,420
transfers are short uh well actually the

298
00:17:00,420 --> 00:17:01,920
majority of internet traffic is like

299
00:17:01,920 --> 00:17:04,260
that packet loss is relatively rare

300
00:17:04,260 --> 00:17:06,540
transfers often terminating slow start

301
00:17:06,540 --> 00:17:08,459
or we have app limited periods so we

302
00:17:08,459 --> 00:17:10,799
have bursts and nothing very often

303
00:17:10,799 --> 00:17:12,959
and under these circumstances the flow

304
00:17:12,959 --> 00:17:14,459
completion time becomes a function of

305
00:17:14,459 --> 00:17:16,020
the round trip time of the length of the

306
00:17:16,020 --> 00:17:18,240
transfer like the amount of dye of pair

307
00:17:18,240 --> 00:17:20,459
of bytes and the initial congestion

308
00:17:20,459 --> 00:17:22,079
window pretty much

309
00:17:22,079 --> 00:17:25,099
next please

310
00:17:28,220 --> 00:17:31,320
so here's here's what I did

311
00:17:31,320 --> 00:17:33,480
um the point being that you know we have

312
00:17:33,480 --> 00:17:36,000
this way of sending data which is not

313
00:17:36,000 --> 00:17:37,980
saturating the window and then on the

314
00:17:37,980 --> 00:17:39,539
left and you have a way which saturates

315
00:17:39,539 --> 00:17:41,160
the window on the right which is shorter

316
00:17:41,160 --> 00:17:43,380
so that is the point list is is shorter

317
00:17:43,380 --> 00:17:44,760
it's faster and it's also better in

318
00:17:44,760 --> 00:17:46,080
terms of energy

319
00:17:46,080 --> 00:17:49,020
what I did is I ran a local test in the

320
00:17:49,020 --> 00:17:51,720
test bed a very simple short data

321
00:17:51,720 --> 00:17:54,360
transfer of 10 packets 80 packets 10 on

322
00:17:54,360 --> 00:17:55,919
the left 80 on the right

323
00:17:55,919 --> 00:17:58,799
uh it's a wired test pad so I just ran

324
00:17:58,799 --> 00:18:00,059
this with different initial window

325
00:18:00,059 --> 00:18:02,160
values got the pcap choice and then

326
00:18:02,160 --> 00:18:04,620
there's a tool called Energy box that

327
00:18:04,620 --> 00:18:07,440
people I think from Leo University have

328
00:18:07,440 --> 00:18:09,720
developed and that has been used also by

329
00:18:09,720 --> 00:18:12,720
Spotify to evaluate the Energy savings

330
00:18:12,720 --> 00:18:15,120
of of the Energy Efficiency of the

331
00:18:15,120 --> 00:18:17,880
mobile app phone mobile app mobile

332
00:18:17,880 --> 00:18:19,820
application

333
00:18:19,820 --> 00:18:23,299
and this is using this old 200

334
00:18:23,299 --> 00:18:26,160
milliseconds model but as I just

335
00:18:26,160 --> 00:18:28,320
explained it probably still applies and

336
00:18:28,320 --> 00:18:30,059
what you can do with that tool is that

337
00:18:30,059 --> 00:18:31,860
you can put the pcap file into it and it

338
00:18:31,860 --> 00:18:34,020
splits Out tool you know it tells you

339
00:18:34,020 --> 00:18:35,580
how much how much energy that was spent

340
00:18:35,580 --> 00:18:37,919
and what you find here is that the

341
00:18:37,919 --> 00:18:39,960
savings get quite significant right I

342
00:18:39,960 --> 00:18:42,780
mean if you look at it for instance with

343
00:18:42,780 --> 00:18:45,059
large rtts obviously right uh when we're

344
00:18:45,059 --> 00:18:46,559
talking about such short transfers the

345
00:18:46,559 --> 00:18:49,740
rtt plays roles with large rtts you can

346
00:18:49,740 --> 00:18:51,240
save up to something like a third of

347
00:18:51,240 --> 00:18:52,860
energy now this is just going

348
00:18:52,860 --> 00:18:54,960
familiarism into two to ten if you think

349
00:18:54,960 --> 00:18:56,520
of larger values if you think of more

350
00:18:56,520 --> 00:18:58,260
interesting strategies that are able to

351
00:18:58,260 --> 00:19:00,419
ramp up the window faster

352
00:19:00,419 --> 00:19:03,000
then you could have much bigger savings

353
00:19:03,000 --> 00:19:08,299
so I found that interesting next please

354
00:19:12,419 --> 00:19:15,299
okay that's already it uh my point is

355
00:19:15,299 --> 00:19:17,039
not to say we should increase the

356
00:19:17,039 --> 00:19:19,860
initial window but uh that there is

357
00:19:19,860 --> 00:19:21,299
going to be made in terms of Energy

358
00:19:21,299 --> 00:19:24,059
Efficiency when we cut the flow

359
00:19:24,059 --> 00:19:25,799
completion time and it can be

360
00:19:25,799 --> 00:19:27,320
significant

361
00:19:27,320 --> 00:19:29,820
there can be plenty of ways of doing

362
00:19:29,820 --> 00:19:32,220
this right for instance I came across a

363
00:19:32,220 --> 00:19:34,860
paper that uses reinforcement learning

364
00:19:34,860 --> 00:19:37,559
to update the initial window value over

365
00:19:37,559 --> 00:19:39,600
time you could be doing couple

366
00:19:39,600 --> 00:19:41,820
congestion control running from past

367
00:19:41,820 --> 00:19:45,299
history using ongoing connections

368
00:19:45,299 --> 00:19:47,640
using proxies which is something I'm a

369
00:19:47,640 --> 00:19:49,380
big fan of there are various ways of

370
00:19:49,380 --> 00:19:52,440
doing things better but um

371
00:19:52,440 --> 00:19:54,240
you know reduce the number of X that

372
00:19:54,240 --> 00:19:55,919
we're sending when we don't need to for

373
00:19:55,919 --> 00:19:57,720
instance congestion control I think

374
00:19:57,720 --> 00:20:00,299
really didn't happen because it didn't

375
00:20:00,299 --> 00:20:02,400
matter so much but now maybe it matters

376
00:20:02,400 --> 00:20:05,100
because X actually produce energy

377
00:20:05,100 --> 00:20:08,220
or waste energy it's all together you

378
00:20:08,220 --> 00:20:09,539
know it's an important topic it's

379
00:20:09,539 --> 00:20:11,160
growing in importance I think it's

380
00:20:11,160 --> 00:20:12,960
probably it's also interesting because

381
00:20:12,960 --> 00:20:15,120
at least in my world I see a decline of

382
00:20:15,120 --> 00:20:16,679
the importance of just performance

383
00:20:16,679 --> 00:20:18,120
Improvement

384
00:20:18,120 --> 00:20:20,280
you know my academic trying to get money

385
00:20:20,280 --> 00:20:21,200
world

386
00:20:21,200 --> 00:20:24,600
uh where was energy saving is growing in

387
00:20:24,600 --> 00:20:27,120
importance and I think this is an

388
00:20:27,120 --> 00:20:28,919
opportunity to combine the two things to

389
00:20:28,919 --> 00:20:31,380
actually you know make gains in both on

390
00:20:31,380 --> 00:20:33,360
both sides but it's worth measuring as

391
00:20:33,360 --> 00:20:35,160
well right I'm looking at that as a

392
00:20:35,160 --> 00:20:36,780
metric basically

393
00:20:36,780 --> 00:20:39,918
and I think that's everything

394
00:20:40,320 --> 00:20:43,039
any questions

395
00:20:45,059 --> 00:20:48,120
um who's in the queue Martin's in the

396
00:20:48,120 --> 00:20:51,120
queue Martin Duke Google

397
00:20:51,120 --> 00:20:52,160
um

398
00:20:52,160 --> 00:20:55,799
thanks this is um interesting uh for

399
00:20:55,799 --> 00:20:58,919
sure and I wonder how you have this

400
00:20:58,919 --> 00:21:00,660
changed so I mean one way of thinking

401
00:21:00,660 --> 00:21:02,400
congestion control course is kind of a

402
00:21:02,400 --> 00:21:04,620
trade-off between

403
00:21:04,620 --> 00:21:06,660
people can this is maybe an accurate way

404
00:21:06,660 --> 00:21:08,039
of saying it but a trade-off between

405
00:21:08,039 --> 00:21:09,840
sort of speed and unnecessary

406
00:21:09,840 --> 00:21:11,880
re-transmission

407
00:21:11,880 --> 00:21:12,840
um

408
00:21:12,840 --> 00:21:16,500
in some respects at least what I'm

409
00:21:16,500 --> 00:21:19,260
getting like has this has has this given

410
00:21:19,260 --> 00:21:20,539
you a new way of thinking about

411
00:21:20,539 --> 00:21:23,340
minimizing unnecessary transmissions and

412
00:21:23,340 --> 00:21:26,220
the energy impact of that or you pretty

413
00:21:26,220 --> 00:21:27,720
much focus on completion time and waking

414
00:21:27,720 --> 00:21:29,820
up radios yeah I'm talking about photos

415
00:21:29,820 --> 00:21:31,679
on completion time I because I think

416
00:21:31,679 --> 00:21:33,840
that most congestion results today are

417
00:21:33,840 --> 00:21:34,980
pretty much

418
00:21:34,980 --> 00:21:38,340
try to optimize to avoid unnecessary

419
00:21:38,340 --> 00:21:39,840
Transmissions anyway

420
00:21:39,840 --> 00:21:41,280
you could try and above you know

421
00:21:41,280 --> 00:21:43,020
optimize towards that even more but

422
00:21:43,020 --> 00:21:44,520
there's probably more gain if you start

423
00:21:44,520 --> 00:21:45,840
doing let's say a congestion control

424
00:21:45,840 --> 00:21:48,059
well and one thing I'm like one thing

425
00:21:48,059 --> 00:21:50,100
I'm thinking of it is high starts plus

426
00:21:50,100 --> 00:21:52,320
right which is trying not to just blow

427
00:21:52,320 --> 00:21:53,940
away you have slow start just completely

428
00:21:53,940 --> 00:21:55,679
blow through the buffers in a way that

429
00:21:55,679 --> 00:21:56,520
that

430
00:21:56,520 --> 00:21:59,159
um uh would result in that okay well I I

431
00:21:59,159 --> 00:22:00,780
mean that's that's a lot of loss so

432
00:22:00,780 --> 00:22:02,460
that's you know potentially so that

433
00:22:02,460 --> 00:22:04,200
that's a that's a good point High style

434
00:22:04,200 --> 00:22:05,280
probably could you know it could be

435
00:22:05,280 --> 00:22:07,020
interesting to look at you know with and

436
00:22:07,020 --> 00:22:08,520
without high style how much energy are

437
00:22:08,520 --> 00:22:09,960
we wasting yeah it might be interesting

438
00:22:09,960 --> 00:22:11,280
access for you to the sport thank you

439
00:22:11,280 --> 00:22:13,380
yeah

440
00:22:13,380 --> 00:22:16,520
Christian Europe

441
00:22:18,299 --> 00:22:20,880
oh yeah so I wonder how much this is

442
00:22:20,880 --> 00:22:23,340
sorry because since Christine's there

443
00:22:23,340 --> 00:22:27,120
first quite and are you usually can you

444
00:22:27,120 --> 00:22:30,900
get on the Queue hello yes hello

445
00:22:30,900 --> 00:22:32,159
do you

446
00:22:32,159 --> 00:22:33,720
is it working

447
00:22:33,720 --> 00:22:35,039
yeah

448
00:22:35,039 --> 00:22:39,360
okay so uh just one question to play

449
00:22:39,360 --> 00:22:41,400
diverse advocate

450
00:22:41,400 --> 00:22:43,440
you you are mentioning that processing

451
00:22:43,440 --> 00:22:46,080
transaction faster serves energy because

452
00:22:46,080 --> 00:22:48,360
you sit on the radio

453
00:22:48,360 --> 00:22:51,720
for short of time that's nice

454
00:22:51,720 --> 00:22:54,559
but don't we have a feedback loop there

455
00:22:54,559 --> 00:22:58,679
that processing transaction faster gets

456
00:22:58,679 --> 00:23:02,340
you to perform more transactions

457
00:23:02,340 --> 00:23:05,340
Maybe

458
00:23:09,419 --> 00:23:11,720
yeah

459
00:23:11,840 --> 00:23:14,640
in the long run yeah maybe

460
00:23:14,640 --> 00:23:18,120
yes because I mean we have seen the same

461
00:23:18,120 --> 00:23:21,659
thing with cars

462
00:23:21,659 --> 00:23:25,380
I mean that that shipping car faster if

463
00:23:25,380 --> 00:23:28,140
they stop less often Etc double unless

464
00:23:28,140 --> 00:23:31,559
you so you make bigger highways and and

465
00:23:31,559 --> 00:23:33,600
if you make bigger highways you said hey

466
00:23:33,600 --> 00:23:35,340
if I had the same traffic I had five

467
00:23:35,340 --> 00:23:37,559
years ago it will process much faster

468
00:23:37,559 --> 00:23:39,900
and I would save energy

469
00:23:39,900 --> 00:23:41,640
but what happens is that you get more

470
00:23:41,640 --> 00:23:43,620
cars

471
00:23:43,620 --> 00:23:48,260
yeah yeah can't say this is wrong

472
00:23:48,740 --> 00:23:51,480
okay so maybe maybe we should monitor

473
00:23:51,480 --> 00:23:53,960
that too

474
00:23:54,419 --> 00:23:55,919
hmm

475
00:23:55,919 --> 00:23:58,200
all right well that's a good thought

476
00:23:58,200 --> 00:24:00,980
thank you question uh

477
00:24:00,980 --> 00:24:06,320
I I want to move on to Jordy

478
00:24:06,320 --> 00:24:10,200
yes uh Jordi Ross from Qualcomm yeah and

479
00:24:10,200 --> 00:24:11,760
I'm gonna also have this conversation

480
00:24:11,760 --> 00:24:14,640
connects with efforts like um coinergine

481
00:24:14,640 --> 00:24:16,679
an idea of um

482
00:24:16,679 --> 00:24:20,520
adding some uh competition at the core

483
00:24:20,520 --> 00:24:22,799
at the switch to help congestion control

484
00:24:22,799 --> 00:24:25,799
uh providing explicit feedback from from

485
00:24:25,799 --> 00:24:29,280
the from a from a network element

486
00:24:29,280 --> 00:24:31,919
um and then with the idea that you know

487
00:24:31,919 --> 00:24:33,120
if you look at what TCP congestion

488
00:24:33,120 --> 00:24:33,900
control is trying to do with the

489
00:24:33,900 --> 00:24:35,400
end-to-end design is basically trying to

490
00:24:35,400 --> 00:24:36,919
do sort of like a gradient descent and

491
00:24:36,919 --> 00:24:39,620
using this whole network to to

492
00:24:39,620 --> 00:24:41,700
arbitration is taking one round in time

493
00:24:41,700 --> 00:24:43,679
to get the feedback whereas you could

494
00:24:43,679 --> 00:24:45,179
actually do some calculations at the

495
00:24:45,179 --> 00:24:47,640
core of the network and uh instead of

496
00:24:47,640 --> 00:24:49,799
using the rtt you can actually use these

497
00:24:49,799 --> 00:24:51,539
calculations in network and then provide

498
00:24:51,539 --> 00:24:54,299
much faster feedback so any thoughts on

499
00:24:54,299 --> 00:24:56,580
uh you know if we really serious about

500
00:24:56,580 --> 00:24:58,740
sort of kind of producing energy

501
00:24:58,740 --> 00:25:01,799
consumption uh on opening up the box

502
00:25:01,799 --> 00:25:04,080
maybe and and adding some intelligence

503
00:25:04,080 --> 00:25:05,220
at the core to actually reduce

504
00:25:05,220 --> 00:25:07,679
conversion style of TCP which is as we

505
00:25:07,679 --> 00:25:10,380
know it's I have many thoughts and there

506
00:25:10,380 --> 00:25:12,059
is no way that I can give a concise

507
00:25:12,059 --> 00:25:13,100
answer

508
00:25:13,100 --> 00:25:16,620
we can talk very long in the break

509
00:25:16,620 --> 00:25:18,840
I mean there's just no way that I can

510
00:25:18,840 --> 00:25:20,880
keep this and just keep the swords on it

511
00:25:20,880 --> 00:25:22,799
it's like there's so many pros and cons

512
00:25:22,799 --> 00:25:24,539
and different design that's a big design

513
00:25:24,539 --> 00:25:25,500
space

514
00:25:25,500 --> 00:25:28,559
so but

515
00:25:28,559 --> 00:25:30,539
I have many thoughts about it yes I mean

516
00:25:30,539 --> 00:25:32,940
can be done in principle

517
00:25:32,940 --> 00:25:35,159
Maybe

518
00:25:35,159 --> 00:25:39,440
I won't say yeah I was like too long

519
00:25:39,960 --> 00:25:42,120
thank you for that Lively discussion I

520
00:25:42,120 --> 00:25:45,539
have I I put myself in in line and then

521
00:25:45,539 --> 00:25:47,880
I pulled myself out because I will ask

522
00:25:47,880 --> 00:25:49,740
you separately uh because we do need to

523
00:25:49,740 --> 00:25:51,240
move on to the next one thank you

524
00:25:51,240 --> 00:25:52,740
Michael yeah it was definitely a very

525
00:25:52,740 --> 00:25:54,720
different sort of talk

526
00:25:54,720 --> 00:25:55,440
um

527
00:25:55,440 --> 00:25:58,080
and it's going to be interesting to

528
00:25:58,080 --> 00:25:59,460
think about what we can do next year

529
00:25:59,460 --> 00:26:01,940
thanks

530
00:26:03,179 --> 00:26:07,559
all right now moving on to the next

531
00:26:07,559 --> 00:26:11,220
um venkat Arun is here and he is on

532
00:26:11,220 --> 00:26:13,919
video so hey venget

533
00:26:13,919 --> 00:26:14,460
um

534
00:26:14,460 --> 00:26:17,580
thank you for for joining I'm gonna pull

535
00:26:17,580 --> 00:26:19,799
your slides up

536
00:26:19,799 --> 00:26:20,700
um

537
00:26:20,700 --> 00:26:23,100
and I'll uh I'm gonna be running your

538
00:26:23,100 --> 00:26:25,320
slides from here so just call out

539
00:26:25,320 --> 00:26:27,480
whenever you want to

540
00:26:27,480 --> 00:26:30,480
um let me briefly introduce venkat is a

541
00:26:30,480 --> 00:26:33,360
graduate student at MIT

542
00:26:33,360 --> 00:26:35,580
um and working on condition control he's

543
00:26:35,580 --> 00:26:39,419
been doing a number of things uh and uh

544
00:26:39,419 --> 00:26:41,880
I he's he's done other controllers in

545
00:26:41,880 --> 00:26:44,640
the past as well Copa is probably the

546
00:26:44,640 --> 00:26:48,059
most well-known of those but I I want to

547
00:26:48,059 --> 00:26:50,400
uh give it to you when you introduce

548
00:26:50,400 --> 00:26:52,320
yourself and get it going and to

549
00:26:52,320 --> 00:26:53,820
everybody else

550
00:26:53,820 --> 00:26:56,159
um uh please be kind

551
00:26:56,159 --> 00:27:00,120
be gentle but not too gentle

552
00:27:00,120 --> 00:27:02,820
um thanks man good take it away

553
00:27:02,820 --> 00:27:05,220
hi Janna thanks for the introduction I

554
00:27:05,220 --> 00:27:06,480
hope you can hear me I'm sorry for the

555
00:27:06,480 --> 00:27:07,919
confusion the daylight savings time

556
00:27:07,919 --> 00:27:09,059
threw me off

557
00:27:09,059 --> 00:27:13,020
uh so I've been working on congestion

558
00:27:13,020 --> 00:27:17,039
control and now I've started using uh

559
00:27:17,039 --> 00:27:18,419
trying to figure out how we can

560
00:27:18,419 --> 00:27:20,760
formalize the area of congestion control

561
00:27:20,760 --> 00:27:24,179
and other heuristics used in networks

562
00:27:24,179 --> 00:27:25,380
um in ways that are practically

563
00:27:25,380 --> 00:27:26,520
meaningful

564
00:27:26,520 --> 00:27:28,620
so in this talk I'm going to talk about

565
00:27:28,620 --> 00:27:31,980
a property that we identified that

566
00:27:31,980 --> 00:27:34,740
every con end-to-end delay based

567
00:27:34,740 --> 00:27:36,000
congestion control algorithm we are

568
00:27:36,000 --> 00:27:38,820
aware of shares then it turns out is

569
00:27:38,820 --> 00:27:40,440
really bad

570
00:27:40,440 --> 00:27:44,000
so next slide please

571
00:27:45,240 --> 00:27:47,220
um

572
00:27:47,220 --> 00:27:49,620
in the modern internet users have want

573
00:27:49,620 --> 00:27:52,500
interactive low latency applications but

574
00:27:52,500 --> 00:27:54,539
are loss based condition control

575
00:27:54,539 --> 00:27:56,880
algorithms don't bound delay and

576
00:27:56,880 --> 00:27:58,440
therefore people have developed all of

577
00:27:58,440 --> 00:27:59,700
these delay bounding condition control

578
00:27:59,700 --> 00:28:03,240
algorithms including the famous bbr

579
00:28:03,240 --> 00:28:05,940
and they use a wide variety of methods

580
00:28:05,940 --> 00:28:08,159
uh some use queuing delay others use

581
00:28:08,159 --> 00:28:10,200
receive rate and yet others are learning

582
00:28:10,200 --> 00:28:13,740
based and despite the vast variety of

583
00:28:13,740 --> 00:28:15,539
techniques they used they all share this

584
00:28:15,539 --> 00:28:17,580
one common property next slide that

585
00:28:17,580 --> 00:28:21,240
they're all delay convergent

586
00:28:21,240 --> 00:28:23,159
and

587
00:28:23,159 --> 00:28:25,860
so next slide so what do we mean by this

588
00:28:25,860 --> 00:28:27,720
one common property so what what is this

589
00:28:27,720 --> 00:28:30,720
property that we identify

590
00:28:30,720 --> 00:28:33,419
um so suppose we run the algorithm on an

591
00:28:33,419 --> 00:28:35,400
Ideal link some we pick some constant

592
00:28:35,400 --> 00:28:38,520
link rates some constant delay and we

593
00:28:38,520 --> 00:28:40,500
plot the delay experience by the packets

594
00:28:40,500 --> 00:28:42,000
and it could look something like the

595
00:28:42,000 --> 00:28:43,860
cartoon diagram here

596
00:28:43,860 --> 00:28:45,960
now we call an algorithm delay

597
00:28:45,960 --> 00:28:48,419
convergent if after a certain

598
00:28:48,419 --> 00:28:50,279
convergence time

599
00:28:50,279 --> 00:28:53,279
the delay variation is small

600
00:28:53,279 --> 00:28:55,500
and what we found to a surprise that

601
00:28:55,500 --> 00:28:56,760
even though this looks perfectly

602
00:28:56,760 --> 00:29:00,000
innocuous and a very natural thing to do

603
00:29:00,000 --> 00:29:01,980
um this is bad it can lead to starvation

604
00:29:01,980 --> 00:29:04,919
where one flow dominates all of the band

605
00:29:04,919 --> 00:29:06,600
when multiple flows are sharing the same

606
00:29:06,600 --> 00:29:08,820
bottleneck queue one flow dominates at

607
00:29:08,820 --> 00:29:10,740
the cost of all the others

608
00:29:10,740 --> 00:29:13,760
next slide please

609
00:29:13,860 --> 00:29:14,940
um

610
00:29:14,940 --> 00:29:16,260
so

611
00:29:16,260 --> 00:29:19,320
this happens because an end-to-end CCA

612
00:29:19,320 --> 00:29:21,779
can really only measure the end-to-end

613
00:29:21,779 --> 00:29:23,700
delay and we can write the total

614
00:29:23,700 --> 00:29:26,340
end-to-end rtt as the sum of three

615
00:29:26,340 --> 00:29:28,260
components first is the constant

616
00:29:28,260 --> 00:29:29,880
propagation delay

617
00:29:29,880 --> 00:29:31,740
then there is delay due to queuing at

618
00:29:31,740 --> 00:29:33,480
the bottleneck that's the congestive

619
00:29:33,480 --> 00:29:35,700
delay and there are every other source

620
00:29:35,700 --> 00:29:37,320
of delay variation we call it

621
00:29:37,320 --> 00:29:38,940
non-congestive delay

622
00:29:38,940 --> 00:29:41,279
and the problem is from end to end

623
00:29:41,279 --> 00:29:42,539
measurements alone

624
00:29:42,539 --> 00:29:44,279
it's very hard to distinguish between

625
00:29:44,279 --> 00:29:46,919
these two types of delays and that is

626
00:29:46,919 --> 00:29:48,779
the root of the problem and that's why

627
00:29:48,779 --> 00:29:51,539
uh delay convergent algorithms are bad

628
00:29:51,539 --> 00:29:54,620
next slide

629
00:29:55,080 --> 00:29:56,580
so what are some sources of these

630
00:29:56,580 --> 00:29:58,200
non-congestive delay variations right

631
00:29:58,200 --> 00:30:01,140
well we have Wi-Fi which sends uh

632
00:30:01,140 --> 00:30:03,659
because of its frame aggregation feature

633
00:30:03,659 --> 00:30:07,080
it sends packets in larger groups

634
00:30:07,080 --> 00:30:09,960
seller base stations have a notoriously

635
00:30:09,960 --> 00:30:12,960
complicated service process

636
00:30:12,960 --> 00:30:15,600
um end hosts in order to save on CPU

637
00:30:15,600 --> 00:30:18,240
costs again send packets in bursts and

638
00:30:18,240 --> 00:30:20,220
operating systems schedulers have their

639
00:30:20,220 --> 00:30:22,080
own quirks based on you know because

640
00:30:22,080 --> 00:30:24,720
they're not only for uh optimizing for

641
00:30:24,720 --> 00:30:26,039
package scheduling they're also

642
00:30:26,039 --> 00:30:27,179
optimizing for every other process

643
00:30:27,179 --> 00:30:29,340
running in the in the system

644
00:30:29,340 --> 00:30:31,320
and the problem is One path can have

645
00:30:31,320 --> 00:30:33,659
multiple of these so even if we manage

646
00:30:33,659 --> 00:30:35,159
to model one of these phenomena and

647
00:30:35,159 --> 00:30:37,620
account for it uh modeling their

648
00:30:37,620 --> 00:30:40,020
combination is much much harder

649
00:30:40,020 --> 00:30:41,820
next slide

650
00:30:41,820 --> 00:30:43,200
so

651
00:30:43,200 --> 00:30:45,659
what does this non-congestive delay look

652
00:30:45,659 --> 00:30:47,940
like so this is an example of the delays

653
00:30:47,940 --> 00:30:50,039
experienced by packets between

654
00:30:50,039 --> 00:30:53,159
uh a seller node in Stanford and AWS

655
00:30:53,159 --> 00:30:54,720
California this is from the pantheon

656
00:30:54,720 --> 00:30:55,620
project

657
00:30:55,620 --> 00:30:58,320
and if we zoom in next slide to you know

658
00:30:58,320 --> 00:31:02,658
a small section of next

659
00:31:03,120 --> 00:31:05,700
of this uh

660
00:31:05,700 --> 00:31:09,299
this picture we find that the delay is

661
00:31:09,299 --> 00:31:11,940
kind of complex and note that this is

662
00:31:11,940 --> 00:31:14,220
just 14 milliseconds on the x-axis which

663
00:31:14,220 --> 00:31:16,679
is like 10 times smaller than the RTD so

664
00:31:16,679 --> 00:31:18,059
the delay variation was not because of

665
00:31:18,059 --> 00:31:20,039
congestion because this is bbr and bbr

666
00:31:20,039 --> 00:31:22,380
does not vary iterate that quickly

667
00:31:22,380 --> 00:31:25,380
and what we see in that highlighted

668
00:31:25,380 --> 00:31:27,899
region is a Telltale sign of aggregation

669
00:31:27,899 --> 00:31:29,760
but it's not just that for instance if

670
00:31:29,760 --> 00:31:33,080
we pan to the left next slide

671
00:31:34,260 --> 00:31:34,919
um

672
00:31:34,919 --> 00:31:37,380
next slide

673
00:31:37,380 --> 00:31:39,419
so there are animations yeah if you pan

674
00:31:39,419 --> 00:31:40,799
to the left we see that there is another

675
00:31:40,799 --> 00:31:42,779
type of non-congestive delay variation

676
00:31:42,779 --> 00:31:45,179
and this is not act aggregation and

677
00:31:45,179 --> 00:31:46,799
honestly I don't even know what this is

678
00:31:46,799 --> 00:31:49,380
and if you know if we as humans can't

679
00:31:49,380 --> 00:31:51,360
figure out what sources of delay

680
00:31:51,360 --> 00:31:53,399
variation are it's really hard for an

681
00:31:53,399 --> 00:31:55,380
automated thing to do so and it's not

682
00:31:55,380 --> 00:31:57,720
just cellular networks the next slide if

683
00:31:57,720 --> 00:31:59,520
you look at ethernet link so this is the

684
00:31:59,520 --> 00:32:00,720
cleanest link we could find in the

685
00:32:00,720 --> 00:32:04,740
pantheon data set and um so here you

686
00:32:04,740 --> 00:32:05,880
know some of the delay variation is

687
00:32:05,880 --> 00:32:07,260
because of congestion so the sudden

688
00:32:07,260 --> 00:32:09,419
drops in delay are because of bbr's rtt

689
00:32:09,419 --> 00:32:12,240
probe but if we zoom into one of the

690
00:32:12,240 --> 00:32:14,580
constant parts next slide

691
00:32:14,580 --> 00:32:16,140
um we see that the delay variation here

692
00:32:16,140 --> 00:32:18,539
is smaller but it's just as complex and

693
00:32:18,539 --> 00:32:20,640
significant so in cellular it was around

694
00:32:20,640 --> 00:32:22,380
10 milliseconds in this case it's about

695
00:32:22,380 --> 00:32:24,779
two milliseconds but we have very

696
00:32:24,779 --> 00:32:27,799
complex delay variation and it's hard to

697
00:32:27,799 --> 00:32:30,720
distinguish uh how much of this delay is

698
00:32:30,720 --> 00:32:31,980
because of congestion and how much of

699
00:32:31,980 --> 00:32:34,860
this is without congestion

700
00:32:34,860 --> 00:32:37,799
now the question is does this matter

701
00:32:37,799 --> 00:32:40,260
so let's see how this could matter so

702
00:32:40,260 --> 00:32:42,480
Suppose there are two floors sharing a

703
00:32:42,480 --> 00:32:44,159
common bottleneck

704
00:32:44,159 --> 00:32:45,419
um

705
00:32:45,419 --> 00:32:48,240
and say one of them behind Wi-Fi and the

706
00:32:48,240 --> 00:32:50,760
other is using ethernet now because the

707
00:32:50,760 --> 00:32:54,539
non-congest some of the path of these

708
00:32:54,539 --> 00:32:55,919
two flows is different they're going to

709
00:32:55,919 --> 00:32:57,360
estimate the non-congestion they're

710
00:32:57,360 --> 00:32:58,140
going to experience different

711
00:32:58,140 --> 00:33:00,299
non-congestive delay and because all

712
00:33:00,299 --> 00:33:01,620
they can really measure is congestive

713
00:33:01,620 --> 00:33:03,720
plus non-congestive delay they're going

714
00:33:03,720 --> 00:33:05,340
to estimate the congestive component of

715
00:33:05,340 --> 00:33:06,659
the delay differently so one person

716
00:33:06,659 --> 00:33:08,100
thinks it's 20 milliseconds the other

717
00:33:08,100 --> 00:33:09,720
person thinks it's five milliseconds and

718
00:33:09,720 --> 00:33:11,100
so the ground truth is actually the

719
00:33:11,100 --> 00:33:14,658
queuing tell is five milliseconds

720
00:33:14,880 --> 00:33:15,419
um

721
00:33:15,419 --> 00:33:17,279
and this is going to mean that there's

722
00:33:17,279 --> 00:33:19,260
going to be some unfairness

723
00:33:19,260 --> 00:33:20,940
but

724
00:33:20,940 --> 00:33:22,679
that's not the surprising part you've

725
00:33:22,679 --> 00:33:24,659
accepted some amount of unfairness for a

726
00:33:24,659 --> 00:33:27,779
long time the surprising part is um that

727
00:33:27,779 --> 00:33:30,179
the unfairness can be arbitrarily large

728
00:33:30,179 --> 00:33:31,620
so the next question is can we just

729
00:33:31,620 --> 00:33:32,880
correctly estimate the congestive

730
00:33:32,880 --> 00:33:35,220
component of the delay

731
00:33:35,220 --> 00:33:37,080
um but the problem is every people have

732
00:33:37,080 --> 00:33:39,480
tried a lot of these estimators and

733
00:33:39,480 --> 00:33:42,600
every one of the estimators we tried is

734
00:33:42,600 --> 00:33:46,080
uh has failure modes in and realistic

735
00:33:46,080 --> 00:33:47,279
failure modes

736
00:33:47,279 --> 00:33:49,140
and the problem is the Internet is just

737
00:33:49,140 --> 00:33:52,200
too complicated and it's you know the

738
00:33:52,200 --> 00:33:54,059
the non-conditional delay component is

739
00:33:54,059 --> 00:33:57,740
complex next slide

740
00:33:58,019 --> 00:34:00,360
okay so I'm going to Define what I mean

741
00:34:00,360 --> 00:34:02,340
by starvation and then show you that

742
00:34:02,340 --> 00:34:04,919
every every delay based algorithm we've

743
00:34:04,919 --> 00:34:06,360
designed thus far suffers from this

744
00:34:06,360 --> 00:34:07,260
problem

745
00:34:07,260 --> 00:34:09,599
so the first Criterion is that the when

746
00:34:09,599 --> 00:34:10,379
two

747
00:34:10,379 --> 00:34:12,480
of us share a bottleneck the ratio of

748
00:34:12,480 --> 00:34:14,099
throughputs that they obtain is

749
00:34:14,099 --> 00:34:15,719
arbitrarily large

750
00:34:15,719 --> 00:34:17,520
and we are not just interested in

751
00:34:17,520 --> 00:34:19,080
transient phenomenon for instance if

752
00:34:19,080 --> 00:34:20,639
flow a has been running for a long time

753
00:34:20,639 --> 00:34:22,619
and flow B just starts off then of

754
00:34:22,619 --> 00:34:24,300
course flow B is going to for a little

755
00:34:24,300 --> 00:34:27,179
while get lower throughput but we are

756
00:34:27,179 --> 00:34:28,859
only interested in cases where it

757
00:34:28,859 --> 00:34:30,418
remains that way forever because that's

758
00:34:30,418 --> 00:34:32,099
much worse

759
00:34:32,099 --> 00:34:34,760
um next slide

760
00:34:35,460 --> 00:34:38,639
okay so before I make the general claim

761
00:34:38,639 --> 00:34:40,320
let me show how this can happen in a

762
00:34:40,320 --> 00:34:42,599
family of schemes Vegas fast and gopa

763
00:34:42,599 --> 00:34:44,940
even though these three algorithms have

764
00:34:44,940 --> 00:34:46,739
very different Dynamics

765
00:34:46,739 --> 00:34:48,000
um they have the same equilibrium

766
00:34:48,000 --> 00:34:49,379
Behavior where the sending rate is

767
00:34:49,379 --> 00:34:50,879
inversely proportional to the queuing

768
00:34:50,879 --> 00:34:51,780
delay

769
00:34:51,780 --> 00:34:53,520
and if we look at some of the numbers on

770
00:34:53,520 --> 00:34:54,960
the x-axis

771
00:34:54,960 --> 00:34:57,300
uh for 20 milliseconds queuing delay it

772
00:34:57,300 --> 00:34:58,740
will send at one megabit per second if

773
00:34:58,740 --> 00:35:00,420
it sees two milliseconds roughly then

774
00:35:00,420 --> 00:35:02,520
it's in a 10 megabits per second and 0.2

775
00:35:02,520 --> 00:35:03,660
milliseconds it will send at 100

776
00:35:03,660 --> 00:35:04,980
megahertz per second

777
00:35:04,980 --> 00:35:07,380
and here you might see the problem with

778
00:35:07,380 --> 00:35:09,359
just the difference between 0.2 and 2

779
00:35:09,359 --> 00:35:11,700
milliseconds of uh queuing the estimated

780
00:35:11,700 --> 00:35:14,520
it sends at a rate that's 10x you know

781
00:35:14,520 --> 00:35:15,960
different between 10 megabits to 100

782
00:35:15,960 --> 00:35:17,220
megahertz per second

783
00:35:17,220 --> 00:35:19,200
and as we saw in the graphs before it's

784
00:35:19,200 --> 00:35:21,119
very easy for there to be non-congestive

785
00:35:21,119 --> 00:35:23,160
delay that's you know two milliseconds

786
00:35:23,160 --> 00:35:23,940
large

787
00:35:23,940 --> 00:35:25,560
and therefore

788
00:35:25,560 --> 00:35:27,540
just because two flows are sharing the

789
00:35:27,540 --> 00:35:29,880
same bottleneck does not mean that they

790
00:35:29,880 --> 00:35:31,260
are estimating the same congestive of

791
00:35:31,260 --> 00:35:32,220
the length they could be sending at

792
00:35:32,220 --> 00:35:34,380
arbitrarily different rates

793
00:35:34,380 --> 00:35:37,020
or next slide but is this just a problem

794
00:35:37,020 --> 00:35:39,720
with uh Vegas this family of algorithms

795
00:35:39,720 --> 00:35:42,060
could we do better

796
00:35:42,060 --> 00:35:44,339
um and this is where the original notion

797
00:35:44,339 --> 00:35:46,260
of delay convergence I defined came in

798
00:35:46,260 --> 00:35:48,780
which is all of these algorithms share

799
00:35:48,780 --> 00:35:50,339
the same problem

800
00:35:50,339 --> 00:35:51,960
so what

801
00:35:51,960 --> 00:35:56,400
so what the theorem improve is that

802
00:35:56,400 --> 00:35:58,980
if an algorithm is delay convergent then

803
00:35:58,980 --> 00:36:01,200
we can always and suppose it's delay

804
00:36:01,200 --> 00:36:03,240
convergent with delay variation Delta so

805
00:36:03,240 --> 00:36:04,859
after the convergence time the delay

806
00:36:04,859 --> 00:36:07,140
variation remains within Delta

807
00:36:07,140 --> 00:36:08,820
then the theorem is we can always

808
00:36:08,820 --> 00:36:11,520
construct non-transitive delay

809
00:36:11,520 --> 00:36:12,960
variations that is smaller than a

810
00:36:12,960 --> 00:36:15,180
capital D such that starvation occurs

811
00:36:15,180 --> 00:36:16,980
and D is you know any number greater

812
00:36:16,980 --> 00:36:19,560
than twice Delta so the LA the smaller

813
00:36:19,560 --> 00:36:21,960
the Delta the easier it is to make it

814
00:36:21,960 --> 00:36:24,119
start so the more delay conversant it is

815
00:36:24,119 --> 00:36:27,359
the more susceptible it is to starvation

816
00:36:27,359 --> 00:36:30,119
and for many ccas Delta can be

817
00:36:30,119 --> 00:36:31,980
arbitrarily small or even zero so if you

818
00:36:31,980 --> 00:36:35,339
only need an extremely tiny amount of uh

819
00:36:35,339 --> 00:36:37,320
not congestive delay for this problem to

820
00:36:37,320 --> 00:36:40,220
occur next slide

821
00:36:41,760 --> 00:36:44,820
um so let me try to prove this here

822
00:36:44,820 --> 00:36:46,260
so I mean I'm not going to prove the

823
00:36:46,260 --> 00:36:47,339
entire theorem I'm just going to give

824
00:36:47,339 --> 00:36:49,859
the intuition so the little vertical

825
00:36:49,859 --> 00:36:51,540
lines

826
00:36:51,540 --> 00:36:52,800
so

827
00:36:52,800 --> 00:36:55,200
I run the congestion control algorithm

828
00:36:55,200 --> 00:36:57,660
on ideal links with different link rates

829
00:36:57,660 --> 00:36:59,940
and for each link rate I plot a little

830
00:36:59,940 --> 00:37:03,780
vertical line which shows the range of

831
00:37:03,780 --> 00:37:05,520
delays to which the delay conversion

832
00:37:05,520 --> 00:37:08,280
algorithm converges and we know from the

833
00:37:08,280 --> 00:37:09,660
definition of delay conversions that

834
00:37:09,660 --> 00:37:13,160
it's going to be smaller than some Delta

835
00:37:13,859 --> 00:37:16,320
um we also know that the delay is not

836
00:37:16,320 --> 00:37:17,700
going to go up to Infinity because

837
00:37:17,700 --> 00:37:19,079
you'll assume the algorithm is also

838
00:37:19,079 --> 00:37:22,859
delay bounding so not cubic or aimd

839
00:37:22,859 --> 00:37:26,280
then what we find is that the delays are

840
00:37:26,280 --> 00:37:28,260
going to lie within a small range

841
00:37:28,260 --> 00:37:31,140
because you know there's only so much

842
00:37:31,140 --> 00:37:33,300
finite amount of space between 0 and the

843
00:37:33,300 --> 00:37:35,880
maximum delay variation and eventually

844
00:37:35,880 --> 00:37:38,400
as we find different link rates we are

845
00:37:38,400 --> 00:37:39,720
going to find that there are going to be

846
00:37:39,720 --> 00:37:41,160
two link rays that have very similar

847
00:37:41,160 --> 00:37:42,900
delay ranges

848
00:37:42,900 --> 00:37:45,420
and we'll also be able to find them so

849
00:37:45,420 --> 00:37:47,579
that they're arbitrarily far apart

850
00:37:47,579 --> 00:37:49,500
so for any ratio of linkages that we

851
00:37:49,500 --> 00:37:51,060
want we can always find two link rays

852
00:37:51,060 --> 00:37:54,660
that are at that ratio or larger and

853
00:37:54,660 --> 00:37:56,760
their delay range Falls within the same

854
00:37:56,760 --> 00:37:59,220
range so why is that a problem well it's

855
00:37:59,220 --> 00:38:01,380
a problem because we have two very

856
00:38:01,380 --> 00:38:04,320
different link rates that have the same

857
00:38:04,320 --> 00:38:06,480
uh very Sim that are experience very

858
00:38:06,480 --> 00:38:08,760
similarly so go on

859
00:38:08,760 --> 00:38:11,940
next slide so we can simply construct

860
00:38:11,940 --> 00:38:15,660
non-congester delay next slide such that

861
00:38:15,660 --> 00:38:18,440
um we add different delays to each uh

862
00:38:18,440 --> 00:38:21,300
each flow and you know the two flows

863
00:38:21,300 --> 00:38:23,099
think the link rates are that different

864
00:38:23,099 --> 00:38:26,180
next slide please

865
00:38:27,079 --> 00:38:29,940
next slide

866
00:38:29,940 --> 00:38:31,260
so the question is is this construction

867
00:38:31,260 --> 00:38:33,720
realistic I mean did I just make up some

868
00:38:33,720 --> 00:38:35,160
theoretical thing that doesn't matter in

869
00:38:35,160 --> 00:38:36,660
practice next slide

870
00:38:36,660 --> 00:38:40,380
so if you take a look at bbr uh BBN is a

871
00:38:40,380 --> 00:38:41,820
complex algorithm as many of you are

872
00:38:41,820 --> 00:38:43,020
aware but the only thing that you need

873
00:38:43,020 --> 00:38:45,420
to know for this talk is that if there

874
00:38:45,420 --> 00:38:47,760
is some Jitter in the network any an

875
00:38:47,760 --> 00:38:49,440
even very small amount of any type of

876
00:38:49,440 --> 00:38:52,200
Jitter Works bbr will maintain a queuing

877
00:38:52,200 --> 00:38:53,640
delay that's equal to its propagation

878
00:38:53,640 --> 00:38:55,260
delay that's because it should be C when

879
00:38:55,260 --> 00:38:56,820
cap for those of you who know how bbr

880
00:38:56,820 --> 00:38:58,020
works

881
00:38:58,020 --> 00:39:00,480
and the consequence of that is that if

882
00:39:00,480 --> 00:39:02,339
the propagation delays for two flows are

883
00:39:02,339 --> 00:39:03,839
different they're trying to maintain

884
00:39:03,839 --> 00:39:06,660
very different uh cues at the bottleneck

885
00:39:06,660 --> 00:39:08,700
and the the flow that is trying to

886
00:39:08,700 --> 00:39:10,320
maintain the smaller queue is going to

887
00:39:10,320 --> 00:39:12,780
start so this is an example of running

888
00:39:12,780 --> 00:39:15,359
the kernel version of dbr on an emulated

889
00:39:15,359 --> 00:39:17,099
link with 120 megabits per second and

890
00:39:17,099 --> 00:39:19,020
one flow has 40 milliseconds uh

891
00:39:19,020 --> 00:39:20,640
propagation delay and the other has 18

892
00:39:20,640 --> 00:39:22,440
milliseconds propagation delay

893
00:39:22,440 --> 00:39:24,540
and we find that the one with the

894
00:39:24,540 --> 00:39:27,000
smaller delay has like less than 10x the

895
00:39:27,000 --> 00:39:28,680
throughput of the other flow

896
00:39:28,680 --> 00:39:30,900
next slide

897
00:39:30,900 --> 00:39:33,420
and you know we discussed how Vegas fast

898
00:39:33,420 --> 00:39:36,119
and Copa start and we did a similar

899
00:39:36,119 --> 00:39:38,160
experiment where it's a 60 millisecond

900
00:39:38,160 --> 00:39:40,380
propagation delay this time and just one

901
00:39:40,380 --> 00:39:42,660
packet gets a delay of 59 milliseconds

902
00:39:42,660 --> 00:39:44,880
and that gets it to underestimate its

903
00:39:44,880 --> 00:39:48,000
minimum rtt and therefore send it again

904
00:39:48,000 --> 00:39:51,180
um more than 10x different link rates

905
00:39:51,180 --> 00:39:53,220
and this is something I observe this is

906
00:39:53,220 --> 00:39:55,320
a problem I observed in Copa before sort

907
00:39:55,320 --> 00:39:57,119
of starting on this project on figuring

908
00:39:57,119 --> 00:39:58,680
out how to fix fairness and then finding

909
00:39:58,680 --> 00:40:02,280
out that we really can't next slide

910
00:40:02,280 --> 00:40:04,920
so I said that delay convergent

911
00:40:04,920 --> 00:40:07,260
algorithms uh

912
00:40:07,260 --> 00:40:08,820
don't work so could oscillate

913
00:40:08,820 --> 00:40:10,980
desperately oscillating delay help well

914
00:40:10,980 --> 00:40:13,740
it could so the reason is the ambiguity

915
00:40:13,740 --> 00:40:15,300
in estimating the congestive component

916
00:40:15,300 --> 00:40:17,940
of delay effectively discretizes it and

917
00:40:17,940 --> 00:40:19,619
the delay convergent algorithm is going

918
00:40:19,619 --> 00:40:21,420
to measure the same sort of discretized

919
00:40:21,420 --> 00:40:24,060
delay every time next slide so instead

920
00:40:24,060 --> 00:40:26,760
if it were trying to oscillate the delay

921
00:40:26,760 --> 00:40:28,680
then it's getting different information

922
00:40:28,680 --> 00:40:30,000
each time

923
00:40:30,000 --> 00:40:31,500
and since it's getting different

924
00:40:31,500 --> 00:40:32,940
information each time it's effectively

925
00:40:32,940 --> 00:40:34,740
getting an infinitely large share of

926
00:40:34,740 --> 00:40:36,240
bits whereas a delay conversant

927
00:40:36,240 --> 00:40:38,940
algorithm is trying to find a map a

928
00:40:38,940 --> 00:40:41,400
finite number of bits of information to

929
00:40:41,400 --> 00:40:44,460
an infinitely large link rate next slide

930
00:40:44,460 --> 00:40:47,820
so in conclusion the ways to overcome

931
00:40:47,820 --> 00:40:49,260
this problem could be to find a

932
00:40:49,260 --> 00:40:51,300
different style of CCA design that

933
00:40:51,300 --> 00:40:52,920
deliberately oscillates the delay by

934
00:40:52,920 --> 00:40:54,480
large amounts

935
00:40:54,480 --> 00:40:56,460
or designed for finite link rates and in

936
00:40:56,460 --> 00:40:59,220
the paper we can we tell you uh have an

937
00:40:59,220 --> 00:41:00,780
idea for how to make that better than

938
00:41:00,780 --> 00:41:02,579
Current Designs or use in network

939
00:41:02,579 --> 00:41:04,980
support like ecn in fact and with that I

940
00:41:04,980 --> 00:41:06,300
can show my slides then I'm happy to

941
00:41:06,300 --> 00:41:08,660
take questions

942
00:41:10,980 --> 00:41:13,740
thank you venkat

943
00:41:13,740 --> 00:41:14,820
um

944
00:41:14,820 --> 00:41:19,079
we have Roland uh in in queue

945
00:41:19,079 --> 00:41:21,900
they are rolling bless kit thanks for

946
00:41:21,900 --> 00:41:24,420
the presentation quite interesting uh we

947
00:41:24,420 --> 00:41:28,380
we designed TCP Lola which hasn't been

948
00:41:28,380 --> 00:41:31,099
tested with large

949
00:41:31,099 --> 00:41:33,540
link or Links of

950
00:41:33,540 --> 00:41:36,240
varying link rates so it may not work

951
00:41:36,240 --> 00:41:39,300
very well with that but it has some kind

952
00:41:39,300 --> 00:41:42,320
of explicit fairness mechanism built in

953
00:41:42,320 --> 00:41:45,720
in order to try to achieve fairness and

954
00:41:45,720 --> 00:41:48,000
it does is by

955
00:41:48,000 --> 00:41:50,820
similar to to let's say water filling

956
00:41:50,820 --> 00:41:54,240
algorithm which does not I guess not

957
00:41:54,240 --> 00:41:55,320
um

958
00:41:55,320 --> 00:41:57,140
belong to your

959
00:41:57,140 --> 00:42:01,800
sending rate in various delay queuing

960
00:42:01,800 --> 00:42:04,680
array equation so maybe it does not

961
00:42:04,680 --> 00:42:06,300
apply to your

962
00:42:06,300 --> 00:42:06,900
um

963
00:42:06,900 --> 00:42:09,839
to your theory I have to think about

964
00:42:09,839 --> 00:42:13,440
that my other observation is

965
00:42:13,440 --> 00:42:16,200
um maybe it's do you think it would help

966
00:42:16,200 --> 00:42:19,079
I mean we experimented with that having

967
00:42:19,079 --> 00:42:22,020
explicit uh information from the the

968
00:42:22,020 --> 00:42:24,720
intermediate nodes uh on on queuing

969
00:42:24,720 --> 00:42:27,020
delay

970
00:42:29,960 --> 00:42:32,220
go on

971
00:42:32,220 --> 00:42:34,140
so that you can differentiate between

972
00:42:34,140 --> 00:42:37,440
queue delay and non-congestive delay

973
00:42:37,440 --> 00:42:40,380
yeah so the answer to your second point

974
00:42:40,380 --> 00:42:42,599
is yes I think if we have access to

975
00:42:42,599 --> 00:42:45,060
explicit queuing delay then we can have

976
00:42:45,060 --> 00:42:47,460
almost perfect condition control

977
00:42:47,460 --> 00:42:48,900
um I mean and we've known this for a

978
00:42:48,900 --> 00:42:51,000
long time right both with xcp and RCP I

979
00:42:51,000 --> 00:42:53,280
think both are great algorithms if we if

980
00:42:53,280 --> 00:42:56,520
we could get them and as for your first

981
00:42:56,520 --> 00:42:59,339
point I think the so when you're

982
00:42:59,339 --> 00:43:00,900
analyzing Lola the thing you need to

983
00:43:00,900 --> 00:43:03,540
look at is if you run it on an Ideal

984
00:43:03,540 --> 00:43:05,400
link the perfect mathematically perfect

985
00:43:05,400 --> 00:43:08,099
link or any other link does the delay

986
00:43:08,099 --> 00:43:10,260
converge to some constant or you know

987
00:43:10,260 --> 00:43:13,680
small range of values if it does then

988
00:43:13,680 --> 00:43:15,060
it's going to suffer from this problem

989
00:43:15,060 --> 00:43:17,220
so even if it does not follow the Vegas

990
00:43:17,220 --> 00:43:20,339
fast Copa line like bbr convert this to

991
00:43:20,339 --> 00:43:21,900
a small set of delays if the network has

992
00:43:21,900 --> 00:43:24,060
a little bit of Jitter in it because it

993
00:43:24,060 --> 00:43:25,800
will just be C when cap so that is The

994
00:43:25,800 --> 00:43:28,020
Telltale sign to look for

995
00:43:28,020 --> 00:43:29,700
okay

996
00:43:29,700 --> 00:43:31,700
thanks

997
00:43:34,400 --> 00:43:37,040
has a question on chat

998
00:43:37,040 --> 00:43:40,200
uh I'll read out

999
00:43:40,200 --> 00:43:40,740
um

1000
00:43:40,740 --> 00:43:42,319
do you differentiate between

1001
00:43:42,319 --> 00:43:44,579
self-inflicted delay variation versus

1002
00:43:44,579 --> 00:43:47,400
delay variation caused by a competing

1003
00:43:47,400 --> 00:43:48,359
flow

1004
00:43:48,359 --> 00:43:51,540
would a delay conversion CCS staff even

1005
00:43:51,540 --> 00:43:53,460
while competing with a non-delay

1006
00:43:53,460 --> 00:43:56,599
convergent CCA

1007
00:43:57,839 --> 00:44:01,020
um so we only looked at the case where

1008
00:44:01,020 --> 00:44:03,660
the same CCA is competing against itself

1009
00:44:03,660 --> 00:44:05,819
because that's the simpler case

1010
00:44:05,819 --> 00:44:09,060
so since we found problems there we just

1011
00:44:09,060 --> 00:44:10,800
assumed that if there are two different

1012
00:44:10,800 --> 00:44:12,720
CCS then that problem is just going to

1013
00:44:12,720 --> 00:44:14,880
be harder so

1014
00:44:14,880 --> 00:44:16,560
so we have not looked at that explicitly

1015
00:44:16,560 --> 00:44:19,800
but I imagine that's much much harder

1016
00:44:19,800 --> 00:44:21,420
yeah that's a fair point but I think the

1017
00:44:21,420 --> 00:44:23,880
the the the uh the question that's

1018
00:44:23,880 --> 00:44:26,339
lingering in my mind there is how does

1019
00:44:26,339 --> 00:44:28,500
this change when you have

1020
00:44:28,500 --> 00:44:29,220
um

1021
00:44:29,220 --> 00:44:32,099
uh when you have another uh CCA that's

1022
00:44:32,099 --> 00:44:34,319
actually going to force the

1023
00:44:34,319 --> 00:44:36,480
deliverations you're talking about

1024
00:44:36,480 --> 00:44:39,440
um uh in the sense of

1025
00:44:39,599 --> 00:44:41,760
yeah I'll hold off on my question I need

1026
00:44:41,760 --> 00:44:43,859
to formulate it better but I'm going to

1027
00:44:43,859 --> 00:44:46,980
move on to uh Christian who's next in

1028
00:44:46,980 --> 00:44:49,160
line

1029
00:44:50,099 --> 00:44:52,280
foreign

1030
00:44:55,760 --> 00:44:58,319
thank you for this talk it's it's really

1031
00:44:58,319 --> 00:45:00,480
nice it's a real problem and we need to

1032
00:45:00,480 --> 00:45:02,460
address it

1033
00:45:02,460 --> 00:45:07,140
that poem has been known in a lot of the

1034
00:45:07,140 --> 00:45:10,079
lead but literature as to let come our

1035
00:45:10,079 --> 00:45:11,700
problem

1036
00:45:11,700 --> 00:45:13,440
and

1037
00:45:13,440 --> 00:45:17,300
and it has led to

1038
00:45:17,300 --> 00:45:20,220
mitigations like in lead back plus plus

1039
00:45:20,220 --> 00:45:22,460
there is a mitigation to

1040
00:45:22,460 --> 00:45:26,280
sometimes just stop transmitting to get

1041
00:45:26,280 --> 00:45:30,079
a delay measurement on a liquid link and

1042
00:45:30,079 --> 00:45:33,359
bbr does the same thing with the rtt

1043
00:45:33,359 --> 00:45:36,839
probe mechanism

1044
00:45:36,839 --> 00:45:39,000
do you have any information of those

1045
00:45:39,000 --> 00:45:41,099
mechanisms and whether they are actually

1046
00:45:41,099 --> 00:45:44,700
helpful so the late common problem in I

1047
00:45:44,700 --> 00:45:46,520
think in both cases is if I understand

1048
00:45:46,520 --> 00:45:49,140
your question correctly is that it

1049
00:45:49,140 --> 00:45:50,760
estimates the Min rtt wrong because the

1050
00:45:50,760 --> 00:45:52,440
flow that comes later gets a higher

1051
00:45:52,440 --> 00:45:54,300
notion of minimum rtt right

1052
00:45:54,300 --> 00:45:56,540
yeah that was how it was formulated

1053
00:45:56,540 --> 00:46:00,000
right right so this problem occurs even

1054
00:46:00,000 --> 00:46:01,920
if some Oracle were to give the correct

1055
00:46:01,920 --> 00:46:04,200
minimum rtt to the to all the flows so

1056
00:46:04,200 --> 00:46:06,180
this is not so and the late power

1057
00:46:06,180 --> 00:46:09,119
problem is usually a finite amount of

1058
00:46:09,119 --> 00:46:10,200
unfairness

1059
00:46:10,200 --> 00:46:11,760
what I'm talking about here is

1060
00:46:11,760 --> 00:46:13,680
starvation

1061
00:46:13,680 --> 00:46:15,780
so yes so to answer your question even

1062
00:46:15,780 --> 00:46:16,980
with those mechanisms the problem

1063
00:46:16,980 --> 00:46:18,720
persists

1064
00:46:18,720 --> 00:46:21,180
okay so yes that means that we we

1065
00:46:21,180 --> 00:46:25,279
absolutely need something else yeah yeah

1066
00:46:25,400 --> 00:46:28,819
okay thank you

1067
00:46:28,859 --> 00:46:31,400
Bob

1068
00:46:35,280 --> 00:46:37,319
hi thank you

1069
00:46:37,319 --> 00:46:40,740
um I I did read your paper it was now a

1070
00:46:40,740 --> 00:46:42,300
couple of months ago you know just after

1071
00:46:42,300 --> 00:46:44,220
sitcom so

1072
00:46:44,220 --> 00:46:45,960
um but I've screwed all over it and I

1073
00:46:45,960 --> 00:46:47,520
can deal with that on the list but I

1074
00:46:47,520 --> 00:46:50,400
just have one question really to

1075
00:46:50,400 --> 00:46:53,819
um see if I can get this right

1076
00:46:53,819 --> 00:46:57,240
um when you say that these things could

1077
00:46:57,240 --> 00:46:58,800
happen and then you said how realistic

1078
00:46:58,800 --> 00:47:00,300
is it

1079
00:47:00,300 --> 00:47:02,400
still not really Quantified how often it

1080
00:47:02,400 --> 00:47:03,599
happens

1081
00:47:03,599 --> 00:47:06,359
how often the starvation happens and and

1082
00:47:06,359 --> 00:47:09,540
yes it can happen and you've just

1083
00:47:09,540 --> 00:47:12,420
explained again how it can happen

1084
00:47:12,420 --> 00:47:13,859
but is it

1085
00:47:13,859 --> 00:47:15,540
yes

1086
00:47:15,540 --> 00:47:18,000
so

1087
00:47:18,000 --> 00:47:20,160
that's a good question what we have

1088
00:47:20,160 --> 00:47:22,380
found is that there are phenomena that

1089
00:47:22,380 --> 00:47:23,940
we know up here on the internet like

1090
00:47:23,940 --> 00:47:26,579
just rtt different flows of different

1091
00:47:26,579 --> 00:47:29,280
rtps that share the link which if they

1092
00:47:29,280 --> 00:47:31,920
would happen if starvation would occur

1093
00:47:31,920 --> 00:47:34,800
we have also found that this is not hard

1094
00:47:34,800 --> 00:47:37,440
to reproduce at all on test Networks

1095
00:47:37,440 --> 00:47:39,780
where you know pretty much anything you

1096
00:47:39,780 --> 00:47:41,760
do you'll be able to reproduce this

1097
00:47:41,760 --> 00:47:44,400
pretty much on any setup you want for

1098
00:47:44,400 --> 00:47:45,660
instance you know there you need some

1099
00:47:45,660 --> 00:47:47,400
Jitter but we didn't even explicitly

1100
00:47:47,400 --> 00:47:48,839
have to add Jitter the operating system

1101
00:47:48,839 --> 00:47:50,280
Jitter was enough to cause this problem

1102
00:47:50,280 --> 00:47:51,839
operating systems that are coupled with

1103
00:47:51,839 --> 00:47:53,040
the emulation

1104
00:47:53,040 --> 00:47:56,099
but if you have not Quantified exactly

1105
00:47:56,099 --> 00:47:57,540
how often this happens on the internet

1106
00:47:57,540 --> 00:48:00,079
and I also think that's it's almost

1107
00:48:00,079 --> 00:48:02,160
impossible to do that I mean I won't say

1108
00:48:02,160 --> 00:48:04,500
impossible but we've tried and the data

1109
00:48:04,500 --> 00:48:06,720
is hard to look at because you don't

1110
00:48:06,720 --> 00:48:08,280
actually know when two flows are sharing

1111
00:48:08,280 --> 00:48:10,079
a bottleneck because even if they're

1112
00:48:10,079 --> 00:48:11,640
sharing a link that's congested maybe

1113
00:48:11,640 --> 00:48:13,440
one of the flows is genuinely congested

1114
00:48:13,440 --> 00:48:14,700
somewhere else

1115
00:48:14,700 --> 00:48:16,859
and I think that's also the reason why

1116
00:48:16,859 --> 00:48:18,900
this phenomenon was discovered first on

1117
00:48:18,900 --> 00:48:21,420
pen and paper rather than in production

1118
00:48:21,420 --> 00:48:23,940
because fairness is extremely hard to

1119
00:48:23,940 --> 00:48:27,560
measure on in the wild

1120
00:48:28,380 --> 00:48:30,599
okay can I ask you for a question have

1121
00:48:30,599 --> 00:48:32,700
we got time go ahead um well it's not

1122
00:48:32,700 --> 00:48:34,920
sorry it's not it's a different question

1123
00:48:34,920 --> 00:48:37,500
um and that is of these

1124
00:48:37,500 --> 00:48:40,260
um possible techniques around the

1125
00:48:40,260 --> 00:48:42,599
problem on the last slide

1126
00:48:42,599 --> 00:48:45,420
is there also the category of

1127
00:48:45,420 --> 00:48:47,760
um congestion controls but like um delay

1128
00:48:47,760 --> 00:48:49,260
gradient where you're looking for

1129
00:48:49,260 --> 00:48:51,599
correlation between your sending

1130
00:48:51,599 --> 00:48:53,220
Behavior and the congestion

1131
00:48:53,220 --> 00:48:56,400
so that you can you can

1132
00:48:56,400 --> 00:48:57,300
um

1133
00:48:57,300 --> 00:49:00,960
distinguish that from the non-congestive

1134
00:49:00,960 --> 00:49:02,099
delay

1135
00:49:02,099 --> 00:49:04,380
I think that's kind of exactly the type

1136
00:49:04,380 --> 00:49:06,240
of thing that we'd have to do I don't

1137
00:49:06,240 --> 00:49:08,339
know exactly how I'm desperately trying

1138
00:49:08,339 --> 00:49:10,920
to figure that out but uh yeah that's

1139
00:49:10,920 --> 00:49:13,740
probably the way to go yeah and I was

1140
00:49:13,740 --> 00:49:15,180
thinking similarly you know with them

1141
00:49:15,180 --> 00:49:17,040
work on chirping and all those things

1142
00:49:17,040 --> 00:49:18,300
where you're actually changing the

1143
00:49:18,300 --> 00:49:20,099
sending right to see whether there's a

1144
00:49:20,099 --> 00:49:21,359
correlation

1145
00:49:21,359 --> 00:49:24,420
yeah thank you yeah that's an

1146
00:49:24,420 --> 00:49:26,819
interesting thought I think that uh

1147
00:49:26,819 --> 00:49:28,260
venka you might be familiar with someone

1148
00:49:28,260 --> 00:49:31,619
it's basically frequency analysis of

1149
00:49:31,619 --> 00:49:33,660
traffic and and using some of that

1150
00:49:33,660 --> 00:49:36,300
information to figure out if now there's

1151
00:49:36,300 --> 00:49:38,579
I I I'll

1152
00:49:38,579 --> 00:49:43,020
um I just say that this is uh I would

1153
00:49:43,020 --> 00:49:45,720
personally love to see some thought put

1154
00:49:45,720 --> 00:49:47,640
into the confounding factors right I

1155
00:49:47,640 --> 00:49:49,980
mean starvation is possible but that's

1156
00:49:49,980 --> 00:49:52,140
also happening in a particular

1157
00:49:52,140 --> 00:49:54,300
in in a certain vacuum with a certain

1158
00:49:54,300 --> 00:49:57,599
spherical cow right so uh that's that's

1159
00:49:57,599 --> 00:49:58,859
what you're showing and I think that's

1160
00:49:58,859 --> 00:50:00,359
that's absolutely reasonable the

1161
00:50:00,359 --> 00:50:02,400
question is how confounding are the

1162
00:50:02,400 --> 00:50:04,680
confounding factors of reality I don't

1163
00:50:04,680 --> 00:50:06,540
know how to articulate that any better

1164
00:50:06,540 --> 00:50:09,119
but I think it's important because what

1165
00:50:09,119 --> 00:50:10,980
you do see is that something like bbr

1166
00:50:10,980 --> 00:50:12,420
like you said despite the fact that it

1167
00:50:12,420 --> 00:50:14,460
gets even capped most of the time which

1168
00:50:14,460 --> 00:50:16,260
is what we understand it to be

1169
00:50:16,260 --> 00:50:20,099
it it does end up doing what it does and

1170
00:50:20,099 --> 00:50:22,020
there are a lot of reasons why things

1171
00:50:22,020 --> 00:50:23,160
get deployed

1172
00:50:23,160 --> 00:50:27,319
and the question to me is how do you

1173
00:50:27,319 --> 00:50:30,000
figure out

1174
00:50:30,000 --> 00:50:30,780
um

1175
00:50:30,780 --> 00:50:33,960
um how relevant the result is to real

1176
00:50:33,960 --> 00:50:35,880
traffic it's it's a it's a variant of

1177
00:50:35,880 --> 00:50:38,640
what Bob was asking for but uh just

1178
00:50:38,640 --> 00:50:40,319
slightly differently formulated

1179
00:50:40,319 --> 00:50:43,440
so for that I'd like to say so I I

1180
00:50:43,440 --> 00:50:45,839
absolutely agree and what I believe has

1181
00:50:45,839 --> 00:50:47,579
happened is that operators have kind of

1182
00:50:47,579 --> 00:50:50,099
implicitly understood this not in in

1183
00:50:50,099 --> 00:50:51,720
exactly the starvation and congestion

1184
00:50:51,720 --> 00:50:54,480
control is the problem terms but we've

1185
00:50:54,480 --> 00:50:56,400
deployed a ton of isolation on the

1186
00:50:56,400 --> 00:50:58,680
internet you know from bue and so on to

1187
00:50:58,680 --> 00:51:01,140
fair queuing to just the uh relate

1188
00:51:01,140 --> 00:51:03,119
limiting people that the entry to the

1189
00:51:03,119 --> 00:51:04,020
network

1190
00:51:04,020 --> 00:51:06,900
and therefore in in the internet it is

1191
00:51:06,900 --> 00:51:10,020
not very common that two La long-running

1192
00:51:10,020 --> 00:51:11,520
flows actually compete on the same

1193
00:51:11,520 --> 00:51:13,740
bottleneck when they do I think this

1194
00:51:13,740 --> 00:51:15,960
problem happens but I think most of the

1195
00:51:15,960 --> 00:51:17,460
internet basically works because we've

1196
00:51:17,460 --> 00:51:20,400
prevented uh you know the the original

1197
00:51:20,400 --> 00:51:21,900
end-to-end vision of the internet where

1198
00:51:21,900 --> 00:51:23,280
all of the intelligences at the end

1199
00:51:23,280 --> 00:51:24,660
hosts and we put a lot of intelligence

1200
00:51:24,660 --> 00:51:27,020
in the middle

1201
00:51:28,200 --> 00:51:30,599
yep that's fair and true

1202
00:51:30,599 --> 00:51:32,880
um anyways I will I will uh leave it

1203
00:51:32,880 --> 00:51:36,780
here thank you venkat for presenting and

1204
00:51:36,780 --> 00:51:39,000
um I want to welcome you to join the

1205
00:51:39,000 --> 00:51:41,400
mailing list where hopefully Bob will

1206
00:51:41,400 --> 00:51:44,460
post your comments and uh hopefully

1207
00:51:44,460 --> 00:51:46,980
you'll have a good forum to engage with

1208
00:51:46,980 --> 00:51:49,079
so please join the mailing list let's

1209
00:51:49,079 --> 00:51:51,059
continue this discussion there and we'd

1210
00:51:51,059 --> 00:51:55,020
love to see you at uh at Future iccrg

1211
00:51:55,020 --> 00:51:56,579
meetings

1212
00:51:56,579 --> 00:51:58,980
um and welcome you to see on for the

1213
00:51:58,980 --> 00:52:01,859
rest of this one uh and enjoy the uh

1214
00:52:01,859 --> 00:52:05,400
rest of the presentations uh okay so uh

1215
00:52:05,400 --> 00:52:07,260
let's let's thank venkat again first

1216
00:52:07,260 --> 00:52:10,579
time presenter into ICC

1217
00:52:13,920 --> 00:52:18,480
and now moving on to the next one so

1218
00:52:18,480 --> 00:52:21,960
we are sorry hang on let me pull this

1219
00:52:21,960 --> 00:52:23,280
I'm going to be talking about the

1220
00:52:23,280 --> 00:52:25,140
challenges and benefits of precisely

1221
00:52:25,140 --> 00:52:27,720
specifying condition control algorithms

1222
00:52:27,720 --> 00:52:29,760
uh

1223
00:52:29,760 --> 00:52:31,940
Lenore Lenore

1224
00:52:31,940 --> 00:52:35,339
Lenore I can't get the accent right I'm

1225
00:52:35,339 --> 00:52:38,640
sorry uh

1226
00:52:45,599 --> 00:52:49,940
heavens that's always fun

1227
00:53:06,800 --> 00:53:08,940
you're not expected to be able to

1228
00:53:08,940 --> 00:53:10,559
pronounce it you might want to get

1229
00:53:10,559 --> 00:53:12,300
closer to the mic

1230
00:53:12,300 --> 00:53:14,520
still my name is still in also because

1231
00:53:14,520 --> 00:53:17,640
it was a second ago Ken McMillan who is

1232
00:53:17,640 --> 00:53:21,000
my collaborator in this work is here too

1233
00:53:21,000 --> 00:53:26,339
and uh we are next please uh we are

1234
00:53:26,339 --> 00:53:29,300
trying to Advocate formal

1235
00:53:29,300 --> 00:53:31,260
specifications

1236
00:53:31,260 --> 00:53:34,200
next sorry hang on I don't know what's

1237
00:53:34,200 --> 00:53:36,558
going on

1238
00:53:37,200 --> 00:53:41,058
still have your slides on yes yes

1239
00:53:45,619 --> 00:53:48,359
oh it is missed everything

1240
00:53:48,359 --> 00:53:51,319
unstable connection

1241
00:53:53,339 --> 00:53:57,000
Simon are you able to run the slides

1242
00:53:57,000 --> 00:53:59,940
I seem to be completely out here

1243
00:53:59,940 --> 00:54:02,339
uh let me see

1244
00:54:02,339 --> 00:54:04,339
um

1245
00:54:08,700 --> 00:54:11,880
can you see it you cannot hear me oh yes

1246
00:54:11,880 --> 00:54:16,619
we can see it yeah okay

1247
00:54:17,819 --> 00:54:19,500
thank you someone

1248
00:54:19,500 --> 00:54:23,339
okay uh Simon what I was asking is that

1249
00:54:23,339 --> 00:54:25,020
whenever you see just a title in the

1250
00:54:25,020 --> 00:54:26,700
slide just automatically do the next

1251
00:54:26,700 --> 00:54:30,900
okay I had some transport transport

1252
00:54:30,900 --> 00:54:32,400
problems

1253
00:54:32,400 --> 00:54:35,540
so next piece

1254
00:54:38,520 --> 00:54:41,180
oh great

1255
00:54:42,720 --> 00:54:46,020
okay what we are trying to do is to

1256
00:54:46,020 --> 00:54:48,359
obtain formal specification for

1257
00:54:48,359 --> 00:54:51,000
congestion control algorithms

1258
00:54:51,000 --> 00:54:54,119
we do it for new Reno for no particular

1259
00:54:54,119 --> 00:54:55,559
rationale

1260
00:54:55,559 --> 00:54:57,180
historical reasons that I cannot even

1261
00:54:57,180 --> 00:54:58,559
remember

1262
00:54:58,559 --> 00:55:01,079
those formal specification should allow

1263
00:55:01,079 --> 00:55:03,540
us to formally prove some high-level

1264
00:55:03,540 --> 00:55:05,460
properties at the model level of the

1265
00:55:05,460 --> 00:55:07,559
formal specification level we're never

1266
00:55:07,559 --> 00:55:09,420
talking about proving anything formally

1267
00:55:09,420 --> 00:55:11,040
all the way down

1268
00:55:11,040 --> 00:55:12,839
and I know that lots of people here

1269
00:55:12,839 --> 00:55:15,300
don't like formal verification

1270
00:55:15,300 --> 00:55:17,280
and we don't particularly either even

1271
00:55:17,280 --> 00:55:18,660
though we've been doing it all our lives

1272
00:55:18,660 --> 00:55:20,940
but there's something else that we can

1273
00:55:20,940 --> 00:55:23,960
gain and that is we can automatically

1274
00:55:23,960 --> 00:55:28,520
generate tests the truly stress test

1275
00:55:28,520 --> 00:55:31,460
implementation against the specification

1276
00:55:31,460 --> 00:55:34,500
and that actually buys us a lot

1277
00:55:34,500 --> 00:55:37,280
next please

1278
00:55:37,859 --> 00:55:39,599
next

1279
00:55:39,599 --> 00:55:42,300
okay so what are formal specifications

1280
00:55:42,300 --> 00:55:44,819
formal specification we mean

1281
00:55:44,819 --> 00:55:46,819
and ambiguous

1282
00:55:46,819 --> 00:55:50,099
description of the protocol and that

1283
00:55:50,099 --> 00:55:53,099
will be used as a reference

1284
00:55:53,099 --> 00:55:56,280
to what does a protocol do

1285
00:55:56,280 --> 00:55:58,260
by doing that we'll end up clarifying

1286
00:55:58,260 --> 00:56:00,599
the intent of the protocol and all the

1287
00:56:00,599 --> 00:56:03,119
hidden assumptions that are sometimes

1288
00:56:03,119 --> 00:56:05,520
hard to find in the natural language

1289
00:56:05,520 --> 00:56:09,440
description next please

1290
00:56:10,140 --> 00:56:12,180
I mentioned the specification based

1291
00:56:12,180 --> 00:56:13,319
testing

1292
00:56:13,319 --> 00:56:17,040
so we now have the natural language

1293
00:56:17,040 --> 00:56:20,099
documentation we have the formal

1294
00:56:20,099 --> 00:56:22,140
specification we have implementation in

1295
00:56:22,140 --> 00:56:23,220
the wild

1296
00:56:23,220 --> 00:56:25,680
and we somehow needs to show how they

1297
00:56:25,680 --> 00:56:27,800
relate to one another so the

1298
00:56:27,800 --> 00:56:30,599
specification-based testing allows us to

1299
00:56:30,599 --> 00:56:34,800
show that our formal model Fades what's

1300
00:56:34,800 --> 00:56:38,099
really being done on the implementations

1301
00:56:38,099 --> 00:56:41,280
so it allows us to expose conformance

1302
00:56:41,280 --> 00:56:45,119
issues with implementation versus the

1303
00:56:45,119 --> 00:56:46,800
specification itself

1304
00:56:46,800 --> 00:56:50,099
for for example is that you know in SSL

1305
00:56:50,099 --> 00:56:52,619
there was an attack with that the

1306
00:56:52,619 --> 00:56:56,880
version negotiation wasn't tested and

1307
00:56:56,880 --> 00:56:58,440
therefore was later attacked that will

1308
00:56:58,440 --> 00:57:00,359
not that was kind of sub the conformance

1309
00:57:00,359 --> 00:57:02,460
testing should avoid

1310
00:57:02,460 --> 00:57:07,680
it also exposes errors in the and some

1311
00:57:07,680 --> 00:57:10,619
ambiguities in the rfcs themselves

1312
00:57:10,619 --> 00:57:13,380
and of course it also allows us to

1313
00:57:13,380 --> 00:57:15,960
expose errors in the specification

1314
00:57:15,960 --> 00:57:19,980
formal specification and to change it to

1315
00:57:19,980 --> 00:57:24,319
um and to correct it next please

1316
00:57:24,359 --> 00:57:25,980
next

1317
00:57:25,980 --> 00:57:28,440
we have done it for a quick several

1318
00:57:28,440 --> 00:57:33,500
years ago and in quick we have

1319
00:57:33,599 --> 00:57:36,839
um the uh the quick connect the UDP with

1320
00:57:36,839 --> 00:57:38,720
the application layer

1321
00:57:38,720 --> 00:57:42,420
and what we could prove formally prove

1322
00:57:42,420 --> 00:57:45,240
the property on the on the model where

1323
00:57:45,240 --> 00:57:47,640
we take the quick client in the quick

1324
00:57:47,640 --> 00:57:50,700
server and the udps that interact below

1325
00:57:50,700 --> 00:57:53,760
that is that it really implements the

1326
00:57:53,760 --> 00:57:56,040
functionality that it

1327
00:57:56,040 --> 00:57:59,640
satisfy the guarantee that of the user

1328
00:57:59,640 --> 00:58:02,640
level that is that the stream that is

1329
00:58:02,640 --> 00:58:05,880
sent is a stream that is received

1330
00:58:05,880 --> 00:58:07,680
next please

1331
00:58:07,680 --> 00:58:12,119
we also did refinement testing this

1332
00:58:12,119 --> 00:58:14,220
slide only showed the refinement of the

1333
00:58:14,220 --> 00:58:16,400
server it could work for the client too

1334
00:58:16,400 --> 00:58:19,559
where we take the client specification

1335
00:58:19,559 --> 00:58:21,559
the formal specification of the client

1336
00:58:21,559 --> 00:58:24,059
with a real server

1337
00:58:24,059 --> 00:58:26,760
we generate packets from the clients

1338
00:58:26,760 --> 00:58:29,700
automatically by our test generation

1339
00:58:29,700 --> 00:58:33,059
and we take the server packets the

1340
00:58:33,059 --> 00:58:34,980
incoming packets and test them again

1341
00:58:34,980 --> 00:58:38,220
specification whether they follow the

1342
00:58:38,220 --> 00:58:39,720
requirements

1343
00:58:39,720 --> 00:58:43,380
so we cast both ways and by that we

1344
00:58:43,380 --> 00:58:46,859
check the refinement that every behavior

1345
00:58:46,859 --> 00:58:50,640
that we're getting with our

1346
00:58:50,640 --> 00:58:55,559
formal client and real server follows a

1347
00:58:55,559 --> 00:58:57,780
behavior that is allowed by the formal

1348
00:58:57,780 --> 00:58:59,760
specification that's what we mean by

1349
00:58:59,760 --> 00:59:01,079
refinement

1350
00:59:01,079 --> 00:59:03,299
next please

1351
00:59:03,299 --> 00:59:06,960
and next and as expected we found

1352
00:59:06,960 --> 00:59:08,400
numerous problems

1353
00:59:08,400 --> 00:59:10,680
that is only to be expected because it

1354
00:59:10,680 --> 00:59:12,059
never happened to me that I looked

1355
00:59:12,059 --> 00:59:13,680
carefully at a protocol without finding

1356
00:59:13,680 --> 00:59:15,240
some issues there

1357
00:59:15,240 --> 00:59:18,059
but we found some things that were

1358
00:59:18,059 --> 00:59:19,859
interesting because those we looked at

1359
00:59:19,859 --> 00:59:22,200
four implementations those four

1360
00:59:22,200 --> 00:59:24,119
implementations went to very thorough

1361
00:59:24,119 --> 00:59:26,700
interrupt testing and yet found new

1362
00:59:26,700 --> 00:59:28,260
problems that were not revealed by the

1363
00:59:28,260 --> 00:59:29,940
interrupt testing

1364
00:59:29,940 --> 00:59:32,940
so we found of course Corrections for

1365
00:59:32,940 --> 00:59:36,960
formal model because it was partial and

1366
00:59:36,960 --> 00:59:38,520
ah

1367
00:59:38,520 --> 00:59:40,559
it was nice to find bugs and Nathan to

1368
00:59:40,559 --> 00:59:43,319
be able to correct it next please

1369
00:59:43,319 --> 00:59:45,720
oh I added here that the the most

1370
00:59:45,720 --> 00:59:47,880
strengthened and weak and so what I mean

1371
00:59:47,880 --> 00:59:50,040
by strength and that the formal protocol

1372
00:59:50,040 --> 00:59:53,280
model was too constrained it didn't

1373
00:59:53,280 --> 00:59:55,260
allow some behavior that should have

1374
00:59:55,260 --> 00:59:56,640
been allowed

1375
00:59:56,640 --> 00:59:59,940
and it could have been too weak that it

1376
00:59:59,940 --> 01:00:01,740
was too liberal and it needed to be made

1377
01:00:01,740 --> 01:00:03,599
more conservative

1378
01:00:03,599 --> 01:00:06,780
uh we of course found numerous errors

1379
01:00:06,780 --> 01:00:09,119
with implementations as I said to be

1380
01:00:09,119 --> 01:00:11,480
expected conformance issues

1381
01:00:11,480 --> 01:00:15,900
crashes that were due to low level

1382
01:00:15,900 --> 01:00:19,380
bugs and implementations but also things

1383
01:00:19,380 --> 01:00:20,700
that

1384
01:00:20,700 --> 01:00:23,099
um they did not conform to the specs or

1385
01:00:23,099 --> 01:00:25,619
the RFC itself was ambiguous

1386
01:00:25,619 --> 01:00:27,119
and

1387
01:00:27,119 --> 01:00:28,079
um

1388
01:00:28,079 --> 01:00:30,839
the the reason we could do it is because

1389
01:00:30,839 --> 01:00:33,000
the specification-based automatic

1390
01:00:33,000 --> 01:00:36,359
generation allows us to generate much

1391
01:00:36,359 --> 01:00:38,640
more General stimulus than you would

1392
01:00:38,640 --> 01:00:41,280
just with interrupt testing

1393
01:00:41,280 --> 01:00:46,200
and I um should say that okay next

1394
01:00:46,200 --> 01:00:47,220
please

1395
01:00:47,220 --> 01:00:50,099
the surprising things is if we found

1396
01:00:50,099 --> 01:00:52,260
some security vulnerabilities this is

1397
01:00:52,260 --> 01:00:53,640
surprising because we never actually

1398
01:00:53,640 --> 01:00:55,260
tried to intentionally

1399
01:00:55,260 --> 01:00:58,079
to find security vulnerabilities

1400
01:00:58,079 --> 01:01:00,720
and for example we got denial of surveys

1401
01:01:00,720 --> 01:01:04,440
in the client migration because of some

1402
01:01:04,440 --> 01:01:06,180
issues and implementations and then the

1403
01:01:06,180 --> 01:01:09,180
RFC in some issues and implementation

1404
01:01:09,180 --> 01:01:12,900
little hardly like of leaking memory of

1405
01:01:12,900 --> 01:01:14,880
disclosing memory that shouldn't have

1406
01:01:14,880 --> 01:01:16,559
happened

1407
01:01:16,559 --> 01:01:19,140
but I should emphasize that we just

1408
01:01:19,140 --> 01:01:21,480
found very strange runs and it is the

1409
01:01:21,480 --> 01:01:24,000
community and question is out there in

1410
01:01:24,000 --> 01:01:26,579
cyberspace in particular that really

1411
01:01:26,579 --> 01:01:28,859
helped us understand what was going on

1412
01:01:28,859 --> 01:01:31,140
and understand the nature of the things

1413
01:01:31,140 --> 01:01:34,799
we saw because we on our own could just

1414
01:01:34,799 --> 01:01:37,140
tell that this looks wrong but we needed

1415
01:01:37,140 --> 01:01:39,780
others to tell us whether it's or at

1416
01:01:39,780 --> 01:01:43,079
least I am not a native uh networking

1417
01:01:43,079 --> 01:01:46,640
person next please

1418
01:01:47,579 --> 01:01:49,740
so we want to do the same with the urano

1419
01:01:49,740 --> 01:01:52,140
and it's really really hard one we don't

1420
01:01:52,140 --> 01:01:53,760
really understand the protocol I guess I

1421
01:01:53,760 --> 01:01:55,559
mean we I don't really understand the

1422
01:01:55,559 --> 01:01:57,420
protocol the lots of little behaviors

1423
01:01:57,420 --> 01:02:00,119
there that I don't understand there are

1424
01:02:00,119 --> 01:02:01,859
Chanel

1425
01:02:01,859 --> 01:02:03,420
but moreover

1426
01:02:03,420 --> 01:02:06,780
in quick it's a transferred layer it's

1427
01:02:06,780 --> 01:02:08,700
sitting on top of UDP it's very clear

1428
01:02:08,700 --> 01:02:10,920
what are the assumptions from the

1429
01:02:10,920 --> 01:02:12,780
network are

1430
01:02:12,780 --> 01:02:15,420
but here to this to look at congestion

1431
01:02:15,420 --> 01:02:17,220
control we actually need some Quantified

1432
01:02:17,220 --> 01:02:19,260
model of the network and we just heard a

1433
01:02:19,260 --> 01:02:22,380
talk why it's really so hard to get but

1434
01:02:22,380 --> 01:02:25,619
without knowing what the network is we

1435
01:02:25,619 --> 01:02:28,079
can't understand the properties but

1436
01:02:28,079 --> 01:02:30,480
anyway we can't understand what the

1437
01:02:30,480 --> 01:02:34,559
properties of congestion control are and

1438
01:02:34,559 --> 01:02:36,780
being here for a couple of days it

1439
01:02:36,780 --> 01:02:38,640
became clear that one of the things is

1440
01:02:38,640 --> 01:02:40,619
for different network models you may

1441
01:02:40,619 --> 01:02:42,359
have different requirements for

1442
01:02:42,359 --> 01:02:45,720
congestion control see I listened uh

1443
01:02:45,720 --> 01:02:49,140
gory is here nodding and but we need

1444
01:02:49,140 --> 01:02:50,819
those like to know what they are before

1445
01:02:50,819 --> 01:02:54,200
we can do it next please

1446
01:02:55,440 --> 01:02:58,140
so we are asking

1447
01:02:58,140 --> 01:03:01,020
you guys at large in the Cyber in the

1448
01:03:01,020 --> 01:03:03,599
rest of the meeting to help us come with

1449
01:03:03,599 --> 01:03:06,359
reasonable motto

1450
01:03:06,359 --> 01:03:10,200
that that you can agree on some and some

1451
01:03:10,200 --> 01:03:12,540
quantitative properties that then we can

1452
01:03:12,540 --> 01:03:13,859
try and

1453
01:03:13,859 --> 01:03:16,680
to prove formally and to test for

1454
01:03:16,680 --> 01:03:18,180
conformance

1455
01:03:18,180 --> 01:03:21,020
next please

1456
01:03:21,660 --> 01:03:23,040
I said that it's hard for us to

1457
01:03:23,040 --> 01:03:25,319
understand you we know

1458
01:03:25,319 --> 01:03:27,960
and this is because we either look at

1459
01:03:27,960 --> 01:03:29,480
the specification

1460
01:03:29,480 --> 01:03:34,140
and that the rfcs and some papers that

1461
01:03:34,140 --> 01:03:35,819
are written about it

1462
01:03:35,819 --> 01:03:37,619
and as it's like returned from

1463
01:03:37,619 --> 01:03:40,079
exponential backup into slow start

1464
01:03:40,079 --> 01:03:42,059
can generate some really weird Behavior

1465
01:03:42,059 --> 01:03:44,339
at least what's written in English

1466
01:03:44,339 --> 01:03:47,299
and some steak machines that we saw

1467
01:03:47,299 --> 01:03:49,680
can we reverse from the Linux

1468
01:03:49,680 --> 01:03:53,460
implementation I guess we can but

1469
01:03:53,460 --> 01:03:55,980
would actually dealing with like the

1470
01:03:55,980 --> 01:04:00,420
specification to be where to go and not

1471
01:04:00,420 --> 01:04:01,980
to resort to reverse engineering

1472
01:04:01,980 --> 01:04:03,420
implementations

1473
01:04:03,420 --> 01:04:06,079
next

1474
01:04:07,740 --> 01:04:10,380
um then as I said the quantitative model

1475
01:04:10,380 --> 01:04:12,780
of the network

1476
01:04:12,780 --> 01:04:14,040
um

1477
01:04:14,040 --> 01:04:16,500
in Quake again

1478
01:04:16,500 --> 01:04:19,079
the the functional model was really easy

1479
01:04:19,079 --> 01:04:21,180
here we don't need a functional model

1480
01:04:21,180 --> 01:04:24,000
here we need a qualitative model

1481
01:04:24,000 --> 01:04:27,059
and that is sorry quantitative model and

1482
01:04:27,059 --> 01:04:28,559
this is something that yeah we can make

1483
01:04:28,559 --> 01:04:30,420
it up we can make one up others have

1484
01:04:30,420 --> 01:04:32,640
been made up in the literature we can

1485
01:04:32,640 --> 01:04:34,980
make one up but what is this good enough

1486
01:04:34,980 --> 01:04:36,960
I mean it's your judgment it's not ours

1487
01:04:36,960 --> 01:04:39,180
when there's a model we're working on

1488
01:04:39,180 --> 01:04:41,040
the quantitative model good enough so

1489
01:04:41,040 --> 01:04:43,500
you accept it and accept the proofs

1490
01:04:43,500 --> 01:04:46,200
and we can't Define

1491
01:04:46,200 --> 01:04:49,140
quantitative properties without the

1492
01:04:49,140 --> 01:04:52,640
model next please

1493
01:04:52,920 --> 01:04:55,619
next please

1494
01:04:55,619 --> 01:04:57,299
um

1495
01:04:57,299 --> 01:04:59,819
as I said the properties of new Reno in

1496
01:04:59,819 --> 01:05:01,920
Quake we have a very simple functional

1497
01:05:01,920 --> 01:05:04,200
guarantee so the transport layer and we

1498
01:05:04,200 --> 01:05:08,220
can build it on top of that next please

1499
01:05:08,220 --> 01:05:10,859
but the congestion control guarantees

1500
01:05:10,859 --> 01:05:13,260
are much harder

1501
01:05:13,260 --> 01:05:16,200
to work and we have very ill-defined

1502
01:05:16,200 --> 01:05:19,559
networks next please there has been

1503
01:05:19,559 --> 01:05:21,900
prior work on this

1504
01:05:21,900 --> 01:05:26,520
but that assumed sort of an ideal aimd

1505
01:05:26,520 --> 01:05:28,859
and we renoid

1506
01:05:28,859 --> 01:05:32,700
the increments are not constant the

1507
01:05:32,700 --> 01:05:34,319
multiplicative decrements are not

1508
01:05:34,319 --> 01:05:35,640
constant

1509
01:05:35,640 --> 01:05:37,500
it just doesn't fall in if you define

1510
01:05:37,500 --> 01:05:40,260
properties like some properties have

1511
01:05:40,260 --> 01:05:42,180
been defined in the literature based on

1512
01:05:42,180 --> 01:05:44,640
those constants one those constants

1513
01:05:44,640 --> 01:05:46,079
aren't

1514
01:05:46,079 --> 01:05:47,819
there is no way to interpret those

1515
01:05:47,819 --> 01:05:49,760
properties

1516
01:05:49,760 --> 01:05:53,220
and those studies that we have looked at

1517
01:05:53,220 --> 01:05:55,079
ignore timeout

1518
01:05:55,079 --> 01:05:57,900
and the timeout is where we see really

1519
01:05:57,900 --> 01:06:01,079
weird Behavior just looking

1520
01:06:01,079 --> 01:06:03,780
at the behavior on paper

1521
01:06:03,780 --> 01:06:05,700
or in our pseudocode or under

1522
01:06:05,700 --> 01:06:09,680
specification next please

1523
01:06:10,440 --> 01:06:13,619
so why are we here to ask me help

1524
01:06:13,619 --> 01:06:17,220
and to try to convince you that what we

1525
01:06:17,220 --> 01:06:19,619
can do with formal specification is

1526
01:06:19,619 --> 01:06:23,000
really worth it you actually buy a lot

1527
01:06:23,000 --> 01:06:26,220
and also formal verification

1528
01:06:26,220 --> 01:06:29,160
but much beyond that

1529
01:06:29,160 --> 01:06:33,000
and we need help in understanding our

1530
01:06:33,000 --> 01:06:34,380
congestion control protocol it doesn't

1531
01:06:34,380 --> 01:06:36,240
have to be neureno

1532
01:06:36,240 --> 01:06:39,000
just one that is really used that is

1533
01:06:39,000 --> 01:06:40,740
interesting

1534
01:06:40,740 --> 01:06:43,260
to understand the properties and how

1535
01:06:43,260 --> 01:06:45,180
they relate to the Assumption from the

1536
01:06:45,180 --> 01:06:46,920
environment from the network

1537
01:06:46,920 --> 01:06:49,440
and possibly the properties as a

1538
01:06:49,440 --> 01:06:51,960
function of the network

1539
01:06:51,960 --> 01:06:54,119
and

1540
01:06:54,119 --> 01:06:57,020
next please

1541
01:06:57,059 --> 01:06:59,839
so

1542
01:07:00,420 --> 01:07:03,299
I was trying to convince you that formal

1543
01:07:03,299 --> 01:07:05,880
specification is truly beneficial at the

1544
01:07:05,880 --> 01:07:07,980
risk of repeating myself yes we can

1545
01:07:07,980 --> 01:07:11,220
verify and you all hate it but proving

1546
01:07:11,220 --> 01:07:14,400
Key Properties the very top level of if

1547
01:07:14,400 --> 01:07:16,380
you have

1548
01:07:16,380 --> 01:07:18,359
some properties that you know the

1549
01:07:18,359 --> 01:07:21,059
high-level model satisfies and then you

1550
01:07:21,059 --> 01:07:23,700
know that the implementation conforms to

1551
01:07:23,700 --> 01:07:25,440
the model you will not be able to

1552
01:07:25,440 --> 01:07:28,680
establish Normandy that is really that's

1553
01:07:28,680 --> 01:07:30,720
really a rabbit hole that's just not

1554
01:07:30,720 --> 01:07:32,039
going to happen

1555
01:07:32,039 --> 01:07:35,160
but if you have good enough testing that

1556
01:07:35,160 --> 01:07:37,020
will convince you that the

1557
01:07:37,020 --> 01:07:39,059
implementation conforms to the

1558
01:07:39,059 --> 01:07:41,339
specification and that the specification

1559
01:07:41,339 --> 01:07:44,240
has some nice properties that should be

1560
01:07:44,240 --> 01:07:46,619
convincing that the implementation has

1561
01:07:46,619 --> 01:07:48,839
the same nice properties

1562
01:07:48,839 --> 01:07:51,299
so

1563
01:07:51,299 --> 01:07:55,079
in our humble opinion that's ioho

1564
01:07:55,079 --> 01:07:56,280
um

1565
01:07:56,280 --> 01:07:59,460
the formal specification is really

1566
01:07:59,460 --> 01:08:01,500
important and useful

1567
01:08:01,500 --> 01:08:04,079
but to make it work

1568
01:08:04,079 --> 01:08:05,579
we need

1569
01:08:05,579 --> 01:08:09,079
to get definition

1570
01:08:09,079 --> 01:08:12,660
of the network of the environment in

1571
01:08:12,660 --> 01:08:14,160
which a congestion control algorithm

1572
01:08:14,160 --> 01:08:16,080
works and then the property it is

1573
01:08:16,080 --> 01:08:18,238
supposed to satisfy

1574
01:08:18,238 --> 01:08:20,160
as a function of the environment it

1575
01:08:20,160 --> 01:08:21,660
operates under

1576
01:08:21,660 --> 01:08:24,380
thank you

1577
01:08:24,420 --> 01:08:27,179
thank you Lenore uh we got Bob and gory

1578
01:08:27,179 --> 01:08:29,219
in the queue and I'm going to close the

1579
01:08:29,219 --> 01:08:32,779
queue after that Bob

1580
01:08:37,679 --> 01:08:39,179
hi

1581
01:08:39,179 --> 01:08:41,219
um I think it would be useful if we knew

1582
01:08:41,219 --> 01:08:44,399
how networks what um how you would model

1583
01:08:44,399 --> 01:08:46,380
a network and we don't

1584
01:08:46,380 --> 01:08:48,660
um but even if we did

1585
01:08:48,660 --> 01:08:50,520
I think I think we'd have to constrain

1586
01:08:50,520 --> 01:08:53,399
it to certain types of network I

1587
01:08:53,399 --> 01:08:55,859
remember talk

1588
01:08:55,859 --> 01:08:57,719
I don't know how many years ago a couple

1589
01:08:57,719 --> 01:09:00,719
of years ago five years ago maybe

1590
01:09:00,719 --> 01:09:04,140
um where someone was showing that

1591
01:09:04,140 --> 01:09:05,399
um for instance a radio network

1592
01:09:05,399 --> 01:09:08,279
scheduler actually changes its Behavior

1593
01:09:08,279 --> 01:09:10,738
depending on what you do

1594
01:09:10,738 --> 01:09:12,000
and so you're not going to be able to

1595
01:09:12,000 --> 01:09:15,198
model back because that's Secret

1596
01:09:17,460 --> 01:09:20,339
so so the more you push it sometimes it

1597
01:09:20,339 --> 01:09:22,080
gives you a bit more and then it stops

1598
01:09:22,080 --> 01:09:23,698
giving you a bit more and and those

1599
01:09:23,698 --> 01:09:25,259
algorithms are not

1600
01:09:25,259 --> 01:09:27,120
um they're deliberately proprietary so

1601
01:09:27,120 --> 01:09:29,279
it's not a the network environment isn't

1602
01:09:29,279 --> 01:09:31,979
independent of the

1603
01:09:31,979 --> 01:09:34,198
um congestion control

1604
01:09:34,198 --> 01:09:36,479
so these are the proprietary algorithms

1605
01:09:36,479 --> 01:09:38,339
that change the environment as you go

1606
01:09:38,339 --> 01:09:40,560
yeah yeah okay so maybe we should stay

1607
01:09:40,560 --> 01:09:41,880
away from them and move to something

1608
01:09:41,880 --> 01:09:44,219
that we don't have to but that's that's

1609
01:09:44,219 --> 01:09:46,080
all mobile networks that cut out

1610
01:09:46,080 --> 01:09:49,100
straight away yeah

1611
01:09:52,140 --> 01:09:54,719
Gotti

1612
01:09:54,719 --> 01:09:57,480
so Gary Ferris speaking there's an

1613
01:09:57,480 --> 01:10:00,420
individual that was super I really

1614
01:10:00,420 --> 01:10:02,940
enjoyed it thank you the thing I take

1615
01:10:02,940 --> 01:10:04,920
away is we don't actually know the

1616
01:10:04,920 --> 01:10:06,420
questions

1617
01:10:06,420 --> 01:10:09,120
you're asking so we can't dance to them

1618
01:10:09,120 --> 01:10:11,640
because these questions are hard maybe

1619
01:10:11,640 --> 01:10:13,380
we don't want to model for the network

1620
01:10:13,380 --> 01:10:15,960
maybe we want a model for what we want

1621
01:10:15,960 --> 01:10:18,840
the network to respond to maybe we want

1622
01:10:18,840 --> 01:10:20,159
to know where the corners are because I

1623
01:10:20,159 --> 01:10:22,560
really go with Bob that real Networks

1624
01:10:22,560 --> 01:10:24,440
even local

1625
01:10:24,440 --> 01:10:27,060
DSL networks have lots of intelligence

1626
01:10:27,060 --> 01:10:29,100
and their things very very hard to

1627
01:10:29,100 --> 01:10:31,679
predict but we do perhaps know where the

1628
01:10:31,679 --> 01:10:33,659
sensitivities are and how to design

1629
01:10:33,659 --> 01:10:35,940
against them and we could test that that

1630
01:10:35,940 --> 01:10:37,460
would be super

1631
01:10:37,460 --> 01:10:39,780
so it'd be really nice to write them

1632
01:10:39,780 --> 01:10:43,020
down wouldn't it sure let's talk I mean

1633
01:10:43,020 --> 01:10:44,840
yeah

1634
01:10:44,840 --> 01:10:47,219
yeah so I'm leading to the rest of the

1635
01:10:47,219 --> 01:10:48,719
group really for this I think this is a

1636
01:10:48,719 --> 01:10:50,400
discussion we should have on the list

1637
01:10:50,400 --> 01:10:52,380
really good with the ICC IG and see if

1638
01:10:52,380 --> 01:10:54,840
we can try and understand a bit more in

1639
01:10:54,840 --> 01:10:55,860
this space

1640
01:10:55,860 --> 01:10:59,100
great top thank you

1641
01:10:59,100 --> 01:11:00,540
um yeah thank you for the comment gauri

1642
01:11:00,540 --> 01:11:03,540
Colin do you have a comment as a chair

1643
01:11:03,540 --> 01:11:07,380
as yes please come on in

1644
01:11:07,380 --> 01:11:10,500
that's it hi Colin Perkins sorry uh

1645
01:11:10,500 --> 01:11:12,719
chair over right um just a very quick

1646
01:11:12,719 --> 01:11:14,520
advertisement there's a uh some

1647
01:11:14,520 --> 01:11:17,340
discussion about bringing up a uh

1648
01:11:17,340 --> 01:11:19,920
creating a new irtf research group on

1649
01:11:19,920 --> 01:11:22,620
the topic of usable formal Methods at

1650
01:11:22,620 --> 01:11:24,600
the side meeting on Thursday lunchtime

1651
01:11:24,600 --> 01:11:27,480
in um I forget which room but it's on

1652
01:11:27,480 --> 01:11:28,980
the side meeting list

1653
01:11:28,980 --> 01:11:30,540
uh please do come along if you're

1654
01:11:30,540 --> 01:11:32,159
interested in this topic

1655
01:11:32,159 --> 01:11:34,140
thank you so much Corey the mental note

1656
01:11:34,140 --> 01:11:36,420
that I forgot to read and I had in my

1657
01:11:36,420 --> 01:11:37,800
brain was in the end of the talk to say

1658
01:11:37,800 --> 01:11:39,179
there is this meeting and I'm sure

1659
01:11:39,179 --> 01:11:41,760
calling those all the details

1660
01:11:41,760 --> 01:11:43,620
thank you for that

1661
01:11:43,620 --> 01:11:46,140
um Ian I'm gonna ask you to take your

1662
01:11:46,140 --> 01:11:48,840
question offline but uh thank you that

1663
01:11:48,840 --> 01:11:52,440
was a great presentation and discussion

1664
01:11:52,440 --> 01:11:55,140
um we've got uh we are running way

1665
01:11:55,140 --> 01:11:58,020
behind on the agenda so you may have

1666
01:11:58,020 --> 01:12:00,600
noticed we have 19 minutes left and

1667
01:12:00,600 --> 01:12:03,300
about 35 minutes of agenda time left uh

1668
01:12:03,300 --> 01:12:04,679
to go through which we obviously can't

1669
01:12:04,679 --> 01:12:07,620
do so ingamar do you want to come and

1670
01:12:07,620 --> 01:12:09,300
you want to do a presentation can you

1671
01:12:09,300 --> 01:12:12,080
can you shorten it

1672
01:12:12,300 --> 01:12:13,679
if you could that would be very helpful

1673
01:12:13,679 --> 01:12:15,900
Marcelo is that good for you I don't see

1674
01:12:15,900 --> 01:12:18,080
you

1675
01:12:21,600 --> 01:12:24,120
um the option is to do both of your

1676
01:12:24,120 --> 01:12:27,000
presentations or to choose one of them

1677
01:12:27,000 --> 01:12:28,800
I'll leave that up to you

1678
01:12:28,800 --> 01:12:32,340
all right go for it anymore okay

1679
01:12:32,340 --> 01:12:34,860
um yeah so I'm having all kinds of

1680
01:12:34,860 --> 01:12:38,100
trouble here uh Simon can you uh bring

1681
01:12:38,100 --> 01:12:41,280
English presentation up

1682
01:12:41,280 --> 01:12:44,159
here stop sharing first and then start

1683
01:12:44,159 --> 01:12:46,460
again

1684
01:12:46,500 --> 01:12:48,840
yeah for some reason I keep dropping

1685
01:12:48,840 --> 01:12:51,300
Network here

1686
01:12:51,300 --> 01:12:53,640
government okay you can go directly to

1687
01:12:53,640 --> 01:12:56,659
the second slide right and uh

1688
01:12:56,659 --> 01:12:59,940
what's the first on uh going to describe

1689
01:12:59,940 --> 01:13:03,120
a bit about how the l4s implementation

1690
01:13:03,120 --> 01:13:05,580
is done in the radio Access Network that

1691
01:13:05,580 --> 01:13:08,580
we had on display on the at a hackathon

1692
01:13:08,580 --> 01:13:11,159
this week and then on Monday as well

1693
01:13:11,159 --> 01:13:14,040
and uh you probably know a lot about

1694
01:13:14,040 --> 01:13:15,719
this and we can see we have an

1695
01:13:15,719 --> 01:13:17,100
application sort of an application

1696
01:13:17,100 --> 01:13:18,860
clients and you've got the traffic

1697
01:13:18,860 --> 01:13:21,659
either in Uplink or in downlink or both

1698
01:13:21,659 --> 01:13:25,199
and what we do actually in uh that is

1699
01:13:25,199 --> 01:13:27,360
that we do the congestion marking

1700
01:13:27,360 --> 01:13:29,400
regardless if it's upling go down they

1701
01:13:29,400 --> 01:13:30,600
could actually do it and the radio

1702
01:13:30,600 --> 01:13:33,380
Access Network in the base station and

1703
01:13:33,380 --> 01:13:36,960
because uh the protocol stack in the

1704
01:13:36,960 --> 01:13:39,840
radio is encrypted by below the p2cp

1705
01:13:39,840 --> 01:13:42,179
layer we actually do the marking on the

1706
01:13:42,179 --> 01:13:45,360
PCP layer I know but we can take

1707
01:13:45,360 --> 01:13:47,699
information from lower layers and use

1708
01:13:47,699 --> 01:13:50,400
that as an input for the marking and we

1709
01:13:50,400 --> 01:13:52,040
typically

1710
01:13:52,040 --> 01:13:54,000
compute some kind of a mocking

1711
01:13:54,000 --> 01:13:57,000
probability that we update uh on a

1712
01:13:57,000 --> 01:13:59,040
regular at regular internals

1713
01:13:59,040 --> 01:14:00,360
so

1714
01:14:00,360 --> 01:14:02,640
there's nothing much about the intention

1715
01:14:02,640 --> 01:14:04,860
with the forensic culture that you you

1716
01:14:04,860 --> 01:14:07,080
get congestion marking just before you

1717
01:14:07,080 --> 01:14:10,040
start to build up two or when you

1718
01:14:10,040 --> 01:14:13,679
detected you begin to build up that you

1719
01:14:13,679 --> 01:14:16,920
and we can take the next slide please

1720
01:14:16,920 --> 01:14:20,840
and what we do is that we uh for ease of

1721
01:14:20,840 --> 01:14:23,460
implementation and also when the

1722
01:14:23,460 --> 01:14:26,520
specification in 3dp standards we set up

1723
01:14:26,520 --> 01:14:28,020
a separate a separate barrier for the

1724
01:14:28,020 --> 01:14:29,460
l4s traffic

1725
01:14:29,460 --> 01:14:32,600
that means that the user plane trans

1726
01:14:32,600 --> 01:14:35,580
user plane functions UPF here you detect

1727
01:14:35,580 --> 01:14:37,620
that you have a flow with a given power

1728
01:14:37,620 --> 01:14:39,600
sample that is still for escape it's

1729
01:14:39,600 --> 01:14:42,600
just the easy ect1 code point then we

1730
01:14:42,600 --> 01:14:44,280
steal that

1731
01:14:44,280 --> 01:14:47,219
Twitter they dedicated better but

1732
01:14:47,219 --> 01:14:49,380
hostile for S marking

1733
01:14:49,380 --> 01:14:50,820
and uh

1734
01:14:50,820 --> 01:14:53,520
and the dedicated doesn't mean that this

1735
01:14:53,520 --> 01:14:55,739
is a higher priority or anything like

1736
01:14:55,739 --> 01:14:57,840
that than the normal mobile broadband

1737
01:14:57,840 --> 01:15:00,239
error it's just as a dedicated that

1738
01:15:00,239 --> 01:15:03,000
makes it easy to congestive marketing

1739
01:15:03,000 --> 01:15:05,820
because you uh steel Alfred traffic into

1740
01:15:05,820 --> 01:15:07,380
that and you can keep the latency flow

1741
01:15:07,380 --> 01:15:10,620
as long as the l4s flow complied to a

1742
01:15:10,620 --> 01:15:12,600
congestion control that is Alpha

1743
01:15:12,600 --> 01:15:13,739
escapable

1744
01:15:13,739 --> 01:15:15,020
so

1745
01:15:15,020 --> 01:15:17,040
I believe you can take the next slide

1746
01:15:17,040 --> 01:15:19,020
here and we

1747
01:15:19,020 --> 01:15:20,580
and uh

1748
01:15:20,580 --> 01:15:22,739
um press one important thing is that you

1749
01:15:22,739 --> 01:15:26,580
do uh the congestion control for 5G

1750
01:15:26,580 --> 01:15:30,060
networks and here we have an example of

1751
01:15:30,060 --> 01:15:32,159
the resource allocation that means that

1752
01:15:32,159 --> 01:15:36,259
you have a resources in time and foreign

1753
01:15:40,040 --> 01:15:44,420
that are active are data to transmit

1754
01:15:44,420 --> 01:15:46,800
in this case I try to illustrate the

1755
01:15:46,800 --> 01:15:48,420
other number of user first you have two

1756
01:15:48,420 --> 01:15:50,280
users and then another one you own some

1757
01:15:50,280 --> 01:15:52,620
wants to transmit something and yet

1758
01:15:52,620 --> 01:15:54,659
another one and then one user perhaps

1759
01:15:54,659 --> 01:15:57,420
drops off and you get more resources

1760
01:15:57,420 --> 01:15:59,760
the complicated part here in terms of

1761
01:15:59,760 --> 01:16:02,400
congestion control is when you have a a

1762
01:16:02,400 --> 01:16:04,800
new user arriving either you get your

1763
01:16:04,800 --> 01:16:06,840
hand over from a different cell or not

1764
01:16:06,840 --> 01:16:09,360
just start to transmit something

1765
01:16:09,360 --> 01:16:10,820
and

1766
01:16:10,820 --> 01:16:14,460
you have very little Grace time when you

1767
01:16:14,460 --> 01:16:16,560
start to see that another user and saw

1768
01:16:16,560 --> 01:16:17,640
enters

1769
01:16:17,640 --> 01:16:20,100
so when you when you start to see that

1770
01:16:20,100 --> 01:16:22,140
the trooper dropped the navigation need

1771
01:16:22,140 --> 01:16:23,820
to drop the through the transmission

1772
01:16:23,820 --> 01:16:26,040
array quite quickly

1773
01:16:26,040 --> 01:16:28,980
in order to get the increased skill

1774
01:16:28,980 --> 01:16:32,159
and another that is not the only thing

1775
01:16:32,159 --> 01:16:34,199
is that the actual throughput that you

1776
01:16:34,199 --> 01:16:36,659
get is that

1777
01:16:36,659 --> 01:16:39,239
is uh depending on the number of

1778
01:16:39,239 --> 01:16:40,860
resource blocks you have and then the

1779
01:16:40,860 --> 01:16:43,980
transmission congestion conditions you

1780
01:16:43,980 --> 01:16:47,100
cannot pause loss due to uh distance and

1781
01:16:47,100 --> 01:16:49,500
uh in higher frequency bands you can

1782
01:16:49,500 --> 01:16:51,659
have a trees that are in the way that

1783
01:16:51,659 --> 01:16:53,280
reduce the

1784
01:16:53,280 --> 01:16:56,880
the number of bits that you can transmit

1785
01:16:56,880 --> 01:17:00,239
transmit per resource that you have and

1786
01:17:00,239 --> 01:17:01,860
that means that you have kind of fast

1787
01:17:01,860 --> 01:17:04,140
fading and slow fading and throughput

1788
01:17:04,140 --> 01:17:07,199
varies sometimes to pretty often fast

1789
01:17:07,199 --> 01:17:09,600
trading is you know in a master of

1790
01:17:09,600 --> 01:17:12,239
milliseconds slow pain and that is more

1791
01:17:12,239 --> 01:17:13,739
like when you go around move around the

1792
01:17:13,739 --> 01:17:14,880
corner and

1793
01:17:14,880 --> 01:17:18,360
and uh and depending on the movement and

1794
01:17:18,360 --> 01:17:20,340
things like that um

1795
01:17:20,340 --> 01:17:22,440
and on top of that you can have a

1796
01:17:22,440 --> 01:17:24,360
difference in the actual throughput

1797
01:17:24,360 --> 01:17:26,880
depending if you have a losses on the

1798
01:17:26,880 --> 01:17:28,620
Mac layer that temporarily reduce the

1799
01:17:28,620 --> 01:17:30,840
tube throughput and

1800
01:17:30,840 --> 01:17:34,860
and uh Dr rough part of it and we can

1801
01:17:34,860 --> 01:17:37,199
take the next slide actually

1802
01:17:37,199 --> 01:17:39,900
and depending on how much time I have

1803
01:17:39,900 --> 01:17:42,239
I'm not very much I believe

1804
01:17:42,239 --> 01:17:45,000
we can take this slide on look one

1805
01:17:45,000 --> 01:17:47,880
question that is uh up uh should we use

1806
01:17:47,880 --> 01:17:49,620
alpharettes for everything

1807
01:17:49,620 --> 01:17:51,960
by heart I think we should

1808
01:17:51,960 --> 01:17:53,880
it's a it's a really good thing to

1809
01:17:53,880 --> 01:17:55,800
yourself right but there are some

1810
01:17:55,800 --> 01:17:56,719
uh

1811
01:17:56,719 --> 01:18:00,120
consideration to think about is that we

1812
01:18:00,120 --> 01:18:02,820
have as we have a fast fading but in

1813
01:18:02,820 --> 01:18:04,800
particular we have a radiation that goes

1814
01:18:04,800 --> 01:18:06,540
up and down is throughput on a very

1815
01:18:06,540 --> 01:18:08,400
short time scale

1816
01:18:08,400 --> 01:18:10,800
so if you want yourself rest and avoid a

1817
01:18:10,800 --> 01:18:12,719
cue in the life we actually need to

1818
01:18:12,719 --> 01:18:15,179
transmit the bit rate that is on the

1819
01:18:15,179 --> 01:18:17,580
bottom line

1820
01:18:17,580 --> 01:18:20,640
and to avoid getting queue delay spikes

1821
01:18:20,640 --> 01:18:23,340
if you buffer up traffic you're able to

1822
01:18:23,340 --> 01:18:25,380
get a higher link through but what we

1823
01:18:25,380 --> 01:18:28,860
get the larger variations in Q delay

1824
01:18:28,860 --> 01:18:31,080
so there is a trade-off you want highly

1825
01:18:31,080 --> 01:18:32,420
linked utilizations

1826
01:18:32,420 --> 01:18:35,640
or small Network buffers and some

1827
01:18:35,640 --> 01:18:38,300
somewhat lower

1828
01:18:39,060 --> 01:18:40,320
so

1829
01:18:40,320 --> 01:18:43,080
I know one thing is that this generally

1830
01:18:43,080 --> 01:18:45,000
more efficient to transmit larger chunks

1831
01:18:45,000 --> 01:18:46,679
today they've got both the data in above

1832
01:18:46,679 --> 01:18:48,719
the transmit it's a more efficient radio

1833
01:18:48,719 --> 01:18:50,340
wise to transmit it

1834
01:18:50,340 --> 01:18:52,380
and referring back to Monica's

1835
01:18:52,380 --> 01:18:55,320
presentation you can save some battery

1836
01:18:55,320 --> 01:18:56,820
some energy

1837
01:18:56,820 --> 01:18:58,860
and

1838
01:18:58,860 --> 01:19:01,140
and the other side usage can increase

1839
01:19:01,140 --> 01:19:03,000
the overall capacity in a radio National

1840
01:19:03,000 --> 01:19:05,640
every data to transmit

1841
01:19:05,640 --> 01:19:08,460
and also things like a multi-user Mimo

1842
01:19:08,460 --> 01:19:10,920
that generally works better if you have

1843
01:19:10,920 --> 01:19:13,260
the data and the buffer to transmit

1844
01:19:13,260 --> 01:19:15,000
so there's a these are concentrate

1845
01:19:15,000 --> 01:19:17,699
considerations and I believe if you have

1846
01:19:17,699 --> 01:19:19,320
a really latency sensitive traffic

1847
01:19:19,320 --> 01:19:20,940
interactive tradition then of course you

1848
01:19:20,940 --> 01:19:23,040
should use self rest but if you have a

1849
01:19:23,040 --> 01:19:25,080
things like video and demand but also

1850
01:19:25,080 --> 01:19:27,120
the second buffer in the clients then it

1851
01:19:27,120 --> 01:19:28,739
could be better to consider using

1852
01:19:28,739 --> 01:19:32,340
classic the traffic instead

1853
01:19:32,340 --> 01:19:35,640
and one possible Middle Ground even even

1854
01:19:35,640 --> 01:19:37,739
though the issues that's been in Cut

1855
01:19:37,739 --> 01:19:40,620
here this place is that uh can consider

1856
01:19:40,620 --> 01:19:42,600
and from the rate based algorithms even

1857
01:19:42,600 --> 01:19:44,940
though they are not perfect so there are

1858
01:19:44,940 --> 01:19:45,780
some

1859
01:19:45,780 --> 01:19:51,000
some human Trader things here so

1860
01:19:51,000 --> 01:19:53,880
not sure how much time do I have

1861
01:19:53,880 --> 01:19:56,400
water cut here or take the discussion

1862
01:19:56,400 --> 01:19:58,739
offline later on or I'd say a good

1863
01:19:58,739 --> 01:20:00,620
discussion offline I do want to get to

1864
01:20:00,620 --> 01:20:03,540
marcelo's presentation today yeah I

1865
01:20:03,540 --> 01:20:05,780
don't believe it will be around here uh

1866
01:20:05,780 --> 01:20:08,100
the entire week to have our questions

1867
01:20:08,100 --> 01:20:09,600
around this time

1868
01:20:09,600 --> 01:20:11,159
please do

1869
01:20:11,159 --> 01:20:13,800
yeah all right well reach me thank you

1870
01:20:13,800 --> 01:20:16,440
Mark um please yeah please reach out to

1871
01:20:16,440 --> 01:20:18,900
England or of course I want to engage

1872
01:20:18,900 --> 01:20:21,179
folks to use the list as well and

1873
01:20:21,179 --> 01:20:24,600
continue discussion there yeah I hope I

1874
01:20:24,600 --> 01:20:26,040
can manage to get the main points at

1875
01:20:26,040 --> 01:20:28,159
least

1876
01:20:28,620 --> 01:20:29,820
thanks again

1877
01:20:29,820 --> 01:20:31,920
Marcelo Europe which one do you want to

1878
01:20:31,920 --> 01:20:33,980
do

1879
01:20:36,239 --> 01:20:39,139
speaker's choice

1880
01:20:45,060 --> 01:20:46,320
um

1881
01:20:46,320 --> 01:20:48,060
Simone can you get the leg button DVR

1882
01:20:48,060 --> 01:20:50,360
one up

1883
01:20:52,320 --> 01:20:54,739
okay

1884
01:20:54,920 --> 01:20:58,380
from uc3m I'll try to do my best with

1885
01:20:58,380 --> 01:21:01,020
the very few minutes that I have left

1886
01:21:01,020 --> 01:21:02,880
um so

1887
01:21:02,880 --> 01:21:05,100
I have been doing some experiments with

1888
01:21:05,100 --> 01:21:07,679
leadbat and leadbat plus plus and bbr as

1889
01:21:07,679 --> 01:21:09,719
you know both let that box plus and DVR

1890
01:21:09,719 --> 01:21:11,520
are congestion control algorithms are

1891
01:21:11,520 --> 01:21:13,500
being specified in this in this research

1892
01:21:13,500 --> 01:21:16,620
group so let let that plus plus is uh

1893
01:21:16,620 --> 01:21:18,659
let's be invested for transport right

1894
01:21:18,659 --> 01:21:21,000
which is targeting to get uh 60

1895
01:21:21,000 --> 01:21:23,880
milliseconds Q okay Q delay

1896
01:21:23,880 --> 01:21:26,640
DVR on the other hand is a best day for

1897
01:21:26,640 --> 01:21:29,340
transport that is aiming to work as

1898
01:21:29,340 --> 01:21:31,380
close as possible to the optimal

1899
01:21:31,380 --> 01:21:33,000
operation point which is essentially

1900
01:21:33,000 --> 01:21:35,040
without queuing delay right so you can

1901
01:21:35,040 --> 01:21:37,080
see that some things here may not go as

1902
01:21:37,080 --> 01:21:40,760
well as planned next slide

1903
01:21:41,219 --> 01:21:43,620
so the the experimental setup that we

1904
01:21:43,620 --> 01:21:45,179
did is essentially this so we have two

1905
01:21:45,179 --> 01:21:46,940
servers one window servers running

1906
01:21:46,940 --> 01:21:49,679
live.plus the R1 and Linux that is

1907
01:21:49,679 --> 01:21:52,080
running cubic or DVR your version

1908
01:21:52,080 --> 01:21:53,760
depending on the experiment and we have

1909
01:21:53,760 --> 01:21:55,620
a client which will configure with a

1910
01:21:55,620 --> 01:21:57,120
large received window so flow control

1911
01:21:57,120 --> 01:22:01,739
would not affect the results next slide

1912
01:22:01,739 --> 01:22:04,080
so this is the first experiment so what

1913
01:22:04,080 --> 01:22:05,760
we have done here is we have one level

1914
01:22:05,760 --> 01:22:09,179
plus plus flow one one flow and sorry

1915
01:22:09,179 --> 01:22:13,440
one PVR flow a b vrb one flow right and

1916
01:22:13,440 --> 01:22:15,060
we have done a series of experiments

1917
01:22:15,060 --> 01:22:17,340
using different base rtds

1918
01:22:17,340 --> 01:22:20,040
right what you would expect in this case

1919
01:22:20,040 --> 01:22:22,920
is that since laptop plus plus is a less

1920
01:22:22,920 --> 01:22:26,100
than F best less than best for flow and

1921
01:22:26,100 --> 01:22:28,980
bbr is the best effort flow is that let

1922
01:22:28,980 --> 01:22:31,920
that plus plus yields in front of PBR

1923
01:22:31,920 --> 01:22:34,620
uh but we don't observe that for all the

1924
01:22:34,620 --> 01:22:36,659
possible rtps right we observe that

1925
01:22:36,659 --> 01:22:38,699
that's true for rtts that are larger

1926
01:22:38,699 --> 01:22:41,400
than 60 milliseconds however for rtps

1927
01:22:41,400 --> 01:22:44,159
that are smaller than 60 milliseconds we

1928
01:22:44,159 --> 01:22:47,280
can see that if they share the flow the

1929
01:22:47,280 --> 01:22:50,219
the capacity even fell if you want

1930
01:22:50,219 --> 01:22:51,900
so essentially what what seems to be

1931
01:22:51,900 --> 01:22:55,860
happening here is that bbr has a flight

1932
01:22:55,860 --> 01:22:59,400
size cup that is essentially one bdp so

1933
01:22:59,400 --> 01:23:01,980
when you have smaller rtps right is the

1934
01:23:01,980 --> 01:23:05,159
is the bbr a flight size Gap that limits

1935
01:23:05,159 --> 01:23:07,100
the amount of extra

1936
01:23:07,100 --> 01:23:10,320
data that the DVR flow can put in flight

1937
01:23:10,320 --> 01:23:13,560
and hence the rest is seized by lead but

1938
01:23:13,560 --> 01:23:15,600
up to reaching the 60 milliseconds

1939
01:23:15,600 --> 01:23:17,880
Target queue right

1940
01:23:17,880 --> 01:23:20,460
uh we have done a few other experiments

1941
01:23:20,460 --> 01:23:22,080
confirming that this that this is

1942
01:23:22,080 --> 01:23:23,940
essentially the case so so in the next

1943
01:23:23,940 --> 01:23:26,460
three slides and so move to the next

1944
01:23:26,460 --> 01:23:29,580
slide we have a varai the the rtt for

1945
01:23:29,580 --> 01:23:32,040
the for the bbr flow but keep the same

1946
01:23:32,040 --> 01:23:34,140
fixed rtt for the netball flow we

1947
01:23:34,140 --> 01:23:35,699
observe the same behavior this means

1948
01:23:35,699 --> 01:23:39,420
that it only depends on the bbr r rtt

1949
01:23:39,420 --> 01:23:42,500
next slide

1950
01:23:43,380 --> 01:23:45,360
um the result do not vary on the

1951
01:23:45,360 --> 01:23:46,800
capacity so we test for different

1952
01:23:46,800 --> 01:23:48,900
capacities and we we always obtain the

1953
01:23:48,900 --> 01:23:50,580
same same results for the different rtps

1954
01:23:50,580 --> 01:23:52,860
next slide please

1955
01:23:52,860 --> 01:23:55,320
and if you have several flows of each

1956
01:23:55,320 --> 01:23:57,719
what we observe is that no matter how

1957
01:23:57,719 --> 01:24:00,239
many BBA how many lead blood flows we

1958
01:24:00,239 --> 01:24:02,540
have to a mix they always the the

1959
01:24:02,540 --> 01:24:05,460
aggregate of all the uh laptop plus

1960
01:24:05,460 --> 01:24:08,100
flows capacity for all the level plus

1961
01:24:08,100 --> 01:24:09,600
plus flows is still more or less the

1962
01:24:09,600 --> 01:24:11,880
same however when you start adding bbr

1963
01:24:11,880 --> 01:24:15,239
flows each of them eats one bdp more so

1964
01:24:15,239 --> 01:24:17,580
essentially they push out the leadbat

1965
01:24:17,580 --> 01:24:21,679
plus plus flow next slide

1966
01:24:22,140 --> 01:24:24,840
so all these previous experiments were

1967
01:24:24,840 --> 01:24:26,820
performed using a large buffer able to

1968
01:24:26,820 --> 01:24:29,580
sustain a 60 milliseconds Q if you

1969
01:24:29,580 --> 01:24:32,699
reduce the the 60 the buffer so you

1970
01:24:32,699 --> 01:24:34,500
cannot reach the 60 millisecond queue

1971
01:24:34,500 --> 01:24:37,320
right what we observe is that the point

1972
01:24:37,320 --> 01:24:40,140
at which a level plus yield is

1973
01:24:40,140 --> 01:24:42,420
essentially the size of a buffer right

1974
01:24:42,420 --> 01:24:45,360
the the sorry the rtt which fits in the

1975
01:24:45,360 --> 01:24:47,520
size of the buffer right so for rtps

1976
01:24:47,520 --> 01:24:48,840
that are smaller than the size of the

1977
01:24:48,840 --> 01:24:51,600
buffer we have this this equal split and

1978
01:24:51,600 --> 01:24:53,280
for rtts that are larger than the size

1979
01:24:53,280 --> 01:24:55,620
of offer we find that leadbot plus plus

1980
01:24:55,620 --> 01:24:57,179
yields

1981
01:24:57,179 --> 01:25:00,140
next slide

1982
01:25:00,480 --> 01:25:02,520
so with these similar experiments with

1983
01:25:02,520 --> 01:25:05,820
bbr V2 and interesting enough the

1984
01:25:05,820 --> 01:25:09,300
situation is worse with bbrv2 right

1985
01:25:09,300 --> 01:25:10,020
um

1986
01:25:10,020 --> 01:25:12,060
in this case

1987
01:25:12,060 --> 01:25:15,360
with DVR V2 the DVR flow for small

1988
01:25:15,360 --> 01:25:18,000
activities actually completely yields in

1989
01:25:18,000 --> 01:25:21,360
front of lead by plus plus okay

1990
01:25:21,360 --> 01:25:24,900
so next slide

1991
01:25:24,900 --> 01:25:27,659
so what are possible solutions if we

1992
01:25:27,659 --> 01:25:28,820
want to actually

1993
01:25:28,820 --> 01:25:31,739
achieve that level plus yields in front

1994
01:25:31,739 --> 01:25:35,400
of DVR so what what we did is because we

1995
01:25:35,400 --> 01:25:37,260
have a lab plus plus implementation

1996
01:25:37,260 --> 01:25:39,780
working what we did is simply change the

1997
01:25:39,780 --> 01:25:41,940
level plus implementation to define the

1998
01:25:41,940 --> 01:25:44,219
target to be the minimum of the current

1999
01:25:44,219 --> 01:25:46,920
Target 60 milliseconds and the base rtt

2000
01:25:46,920 --> 01:25:48,600
this basically will imply that level

2001
01:25:48,600 --> 01:25:52,320
plus can only generate a q of one a rtt

2002
01:25:52,320 --> 01:25:54,840
or one additional rtt if you do that

2003
01:25:54,840 --> 01:25:57,060
that actually works right and and you

2004
01:25:57,060 --> 01:25:59,040
obtain the the results that we can find

2005
01:25:59,040 --> 01:26:01,260
here that that essentially a level plus

2006
01:26:01,260 --> 01:26:03,420
with this modification yields in all

2007
01:26:03,420 --> 01:26:05,639
cases

2008
01:26:05,639 --> 01:26:09,360
and that that's that's one part so the

2009
01:26:09,360 --> 01:26:10,560
second part is

2010
01:26:10,560 --> 01:26:12,420
we also find some interesting results

2011
01:26:12,420 --> 01:26:15,179
when we were looking into how these two

2012
01:26:15,179 --> 01:26:17,460
uh congestion controllers measure the

2013
01:26:17,460 --> 01:26:20,580
base rtt so both these congestion

2014
01:26:20,580 --> 01:26:23,159
control algorithms perform periodic

2015
01:26:23,159 --> 01:26:25,500
slowdowns to measure to accurately

2016
01:26:25,500 --> 01:26:28,679
measure the base RTD right the thing is

2017
01:26:28,679 --> 01:26:30,840
that they do not do use the same

2018
01:26:30,840 --> 01:26:34,620
approach to do the Slowdown right so bvr

2019
01:26:34,620 --> 01:26:36,600
performed periodic slowdowns with a

2020
01:26:36,600 --> 01:26:41,219
fixed a period right of a 210 seconds

2021
01:26:41,219 --> 01:26:43,380
right however lead but plus plus

2022
01:26:43,380 --> 01:26:46,320
performs periodic slowdowns but the time

2023
01:26:46,320 --> 01:26:48,840
of the next Lowdown will depend on the

2024
01:26:48,840 --> 01:26:52,020
time that it takes to ramp up back round

2025
01:26:52,020 --> 01:26:53,400
back up again

2026
01:26:53,400 --> 01:26:56,940
right so depending on the size of the of

2027
01:26:56,940 --> 01:26:58,440
the of the of the window that you want

2028
01:26:58,440 --> 01:27:00,480
to restore you will it will take more or

2029
01:27:00,480 --> 01:27:03,060
less to to perform the leg slowdown next

2030
01:27:03,060 --> 01:27:04,980
slide please

2031
01:27:04,980 --> 01:27:07,620
so this is one experiment one Trace from

2032
01:27:07,620 --> 01:27:09,060
one experiment and basically what we're

2033
01:27:09,060 --> 01:27:12,659
showing here is that these uh slowdowns

2034
01:27:12,659 --> 01:27:14,940
for the different bbr and let that plus

2035
01:27:14,940 --> 01:27:17,639
plus are not synchronized they are they

2036
01:27:17,639 --> 01:27:19,800
do not synchronize they do not slow down

2037
01:27:19,800 --> 01:27:21,600
at the same time and this is essentially

2038
01:27:21,600 --> 01:27:24,780
the results that they miss estimate the

2039
01:27:24,780 --> 01:27:27,540
basicity and that implies that they

2040
01:27:27,540 --> 01:27:29,639
consider that and that implies that they

2041
01:27:29,639 --> 01:27:31,679
are aiming to a different queue and this

2042
01:27:31,679 --> 01:27:34,679
implies that uh they will they will they

2043
01:27:34,679 --> 01:27:36,480
will try to send more aggressively than

2044
01:27:36,480 --> 01:27:37,560
they should

2045
01:27:37,560 --> 01:27:39,480
okay

2046
01:27:39,480 --> 01:27:42,960
so next slide

2047
01:27:42,960 --> 01:27:44,699
so of course suppose possible solution

2048
01:27:44,699 --> 01:27:46,800
is for to make both of them to use the

2049
01:27:46,800 --> 01:27:49,080
same slowdown mechanism right actually

2050
01:27:49,080 --> 01:27:51,060
we believe that that we they should be

2051
01:27:51,060 --> 01:27:52,800
using the the if they need to choose one

2052
01:27:52,800 --> 01:27:54,900
they should be using the bbr1 because we

2053
01:27:54,900 --> 01:27:57,360
think that letter the one that left

2054
01:27:57,360 --> 01:27:59,639
users doesn't actually work in all cases

2055
01:27:59,639 --> 01:28:02,040
I have some work out some examples on

2056
01:28:02,040 --> 01:28:04,080
how this could be the case but one

2057
01:28:04,080 --> 01:28:06,060
possible solution for would be for both

2058
01:28:06,060 --> 01:28:09,060
of them to use the bbr one right and

2059
01:28:09,060 --> 01:28:11,460
next slide

2060
01:28:11,460 --> 01:28:14,400
and this brings us to to my next thought

2061
01:28:14,400 --> 01:28:16,560
that is basically whether we it wouldn't

2062
01:28:16,560 --> 01:28:18,420
be necessary to refine some congestion

2063
01:28:18,420 --> 01:28:20,460
control algorithm invariants that

2064
01:28:20,460 --> 01:28:22,080
basically means that all congestion

2065
01:28:22,080 --> 01:28:24,659
control should Implement some things in

2066
01:28:24,659 --> 01:28:26,219
the same way

2067
01:28:26,219 --> 01:28:28,199
in order not to fight against each other

2068
01:28:28,199 --> 01:28:30,179
right if we want to be able to properly

2069
01:28:30,179 --> 01:28:32,940
assess the base rtt then they probably

2070
01:28:32,940 --> 01:28:34,620
they all need to do something that they

2071
01:28:34,620 --> 01:28:36,120
slow down at the same time because if

2072
01:28:36,120 --> 01:28:37,739
they don't they won't be able to measure

2073
01:28:37,739 --> 01:28:40,500
the basicity accurately right so I guess

2074
01:28:40,500 --> 01:28:42,480
this transcends a single congestion

2075
01:28:42,480 --> 01:28:45,179
control algorithm and I mean I'm I'm

2076
01:28:45,179 --> 01:28:47,040
bringing up whether it's we shouldn't be

2077
01:28:47,040 --> 01:28:49,679
thinking about some properties that

2078
01:28:49,679 --> 01:28:51,600
should be implemented in in oil

2079
01:28:51,600 --> 01:28:53,040
congestion control algorithms in the

2080
01:28:53,040 --> 01:28:54,000
same way

2081
01:28:54,000 --> 01:28:56,100
next slide

2082
01:28:56,100 --> 01:28:58,320
and with this I'm done so if you want

2083
01:28:58,320 --> 01:29:00,179
the details you have you have the link

2084
01:29:00,179 --> 01:29:02,219
there these are all the measurements you

2085
01:29:02,219 --> 01:29:04,320
can find all the results there and

2086
01:29:04,320 --> 01:29:06,600
that's it

2087
01:29:06,600 --> 01:29:10,380
thank you Marcelo we have a minute for

2088
01:29:10,380 --> 01:29:12,120
questions if anybody has any questions

2089
01:29:12,120 --> 01:29:14,780
or comments

2090
01:29:16,260 --> 01:29:18,679
okay

2091
01:29:22,560 --> 01:29:25,159
it's gone

2092
01:29:25,560 --> 01:29:27,540
when you say that they that all

2093
01:29:27,540 --> 01:29:29,040
congression controllers should implement

2094
01:29:29,040 --> 01:29:31,560
the same algorithm to to do the Slowdown

2095
01:29:31,560 --> 01:29:33,239
do you mean that they all need to

2096
01:29:33,239 --> 01:29:35,699
synchronize in time to to do the

2097
01:29:35,699 --> 01:29:37,560
Slowdown or can they do that at

2098
01:29:37,560 --> 01:29:39,960
different points in time what I'm saying

2099
01:29:39,960 --> 01:29:41,639
is that they should try to do

2100
01:29:41,639 --> 01:29:43,800
synchronize and slow down at the same

2101
01:29:43,800 --> 01:29:45,540
time if the if the point is to enter

2102
01:29:45,540 --> 01:29:47,400
your Q they need to always slow down at

2103
01:29:47,400 --> 01:29:49,860
the same time one way of achieving this

2104
01:29:49,860 --> 01:29:51,480
is by all of them implementing the same

2105
01:29:51,480 --> 01:29:56,159
mechanisms there can be over more uh a

2106
01:29:56,159 --> 01:29:57,960
relaxed way of achieving that right

2107
01:29:57,960 --> 01:29:59,940
finding some some form of conditions

2108
01:29:59,940 --> 01:30:01,500
that will imply that all of them slow

2109
01:30:01,500 --> 01:30:03,000
down at the same time even though if

2110
01:30:03,000 --> 01:30:05,460
they don't do the same thing right but

2111
01:30:05,460 --> 01:30:07,199
if we want to for instance measure the

2112
01:30:07,199 --> 01:30:09,840
base rtt we shoot all of them try to

2113
01:30:09,840 --> 01:30:11,280
enter your Q at the same time because if

2114
01:30:11,280 --> 01:30:12,540
they don't you won't be able to enter

2115
01:30:12,540 --> 01:30:13,920
your Cube

2116
01:30:13,920 --> 01:30:17,040
and maybe even do it at the same period

2117
01:30:17,040 --> 01:30:20,400
right yeah that too so there's a

2118
01:30:20,400 --> 01:30:23,219
question in chat uh from Ian uh which

2119
01:30:23,219 --> 01:30:25,440
implementation of bb or V1 and let by

2120
01:30:25,440 --> 01:30:30,360
plus plus are these and so uh the bbr we

2121
01:30:30,360 --> 01:30:32,239
want the one that it's in in the Linux

2122
01:30:32,239 --> 01:30:34,739
implementation and the the laptop plus

2123
01:30:34,739 --> 01:30:36,179
plus the one that's in the window server

2124
01:30:36,179 --> 01:30:39,179
the Windows Server one okay

2125
01:30:39,179 --> 01:30:40,020
um

2126
01:30:40,020 --> 01:30:41,880
all right well thank you for that oh

2127
01:30:41,880 --> 01:30:44,219
gauri you have a question last question

2128
01:30:44,219 --> 01:30:46,139
you get to

2129
01:30:46,139 --> 01:30:47,820
to the last one okay I have two

2130
01:30:47,820 --> 01:30:49,920
questions the first question is to the

2131
01:30:49,920 --> 01:30:52,500
chairs we decide to see more chairs at

2132
01:30:52,500 --> 01:30:54,060
the front can we have more chairs in the

2133
01:30:54,060 --> 01:30:55,800
room next time

2134
01:30:55,800 --> 01:30:57,840
and to the I'd like to have better

2135
01:30:57,840 --> 01:30:59,760
connectivity to my laptop in Guru next

2136
01:30:59,760 --> 01:31:03,120
time too good on the uh on the table

2137
01:31:03,120 --> 01:31:03,659
um

2138
01:31:03,659 --> 01:31:05,400
when you say do it at the same time do

2139
01:31:05,400 --> 01:31:06,540
you mean at the same time where they

2140
01:31:06,540 --> 01:31:09,120
have vastly different rtts how does that

2141
01:31:09,120 --> 01:31:11,300
work

2142
01:31:13,739 --> 01:31:15,719
um or we can eat we can talk and eat

2143
01:31:15,719 --> 01:31:19,440
right uh I would think that if the

2144
01:31:19,440 --> 01:31:21,300
period is similar they should they

2145
01:31:21,300 --> 01:31:23,580
should they should uh it should work out

2146
01:31:23,580 --> 01:31:26,159
I mean and what bbr does is it says it's

2147
01:31:26,159 --> 01:31:29,400
at least two rtps and at least 200

2148
01:31:29,400 --> 01:31:31,320
milliseconds The Slowdown so that they

2149
01:31:31,320 --> 01:31:33,360
overlap that that that's that that would

2150
01:31:33,360 --> 01:31:35,760
be my my take but we do have some tasks

2151
01:31:35,760 --> 01:31:37,380
which are much much longer than that and

2152
01:31:37,380 --> 01:31:40,679
they are more problematic right well but

2153
01:31:40,679 --> 01:31:43,620
that would imply that that even two bdrs

2154
01:31:43,620 --> 01:31:45,719
flows wouldn't actually synchronize

2155
01:31:45,719 --> 01:31:47,880
that's what that's what you mean

2156
01:31:47,880 --> 01:31:52,620
I haven't done that experiment but yeah

2157
01:31:52,620 --> 01:31:54,659
I do want to say very quickly Colin yes

2158
01:31:54,659 --> 01:31:56,159
we should look for a bigger room next

2159
01:31:56,159 --> 01:31:57,239
time

2160
01:31:57,239 --> 01:31:59,699
um and and we will do that and that's

2161
01:31:59,699 --> 01:32:01,380
what I wanted to follow up on if you

2162
01:32:01,380 --> 01:32:03,360
haven't scanned that QR code and follow

2163
01:32:03,360 --> 01:32:05,340
the URL with your phone

2164
01:32:05,340 --> 01:32:07,500
that's the the people scanning those QR

2165
01:32:07,500 --> 01:32:09,120
codes are how we count how bigger rooms

2166
01:32:09,120 --> 01:32:10,020
we need

2167
01:32:10,020 --> 01:32:13,040
scan multiple times

2168
01:32:14,280 --> 01:32:16,679
um thank you and thank you for being a

2169
01:32:16,679 --> 01:32:19,020
bit flexible as always this was the

2170
01:32:19,020 --> 01:32:20,940
packed agenda and

2171
01:32:20,940 --> 01:32:22,560
um we are really pleased to have had

2172
01:32:22,560 --> 01:32:24,300
wonderful discussions today thank you

2173
01:32:24,300 --> 01:32:26,340
everybody I want to thank uh Simone

2174
01:32:26,340 --> 01:32:29,820
again for helping out all over and uh

2175
01:32:29,820 --> 01:32:32,520
enjoy the rest of the IDF and look

2176
01:32:32,520 --> 01:32:34,320
forward to discussion online thank you

2177
01:32:34,320 --> 01:32:36,620
folks

2178
01:32:36,719 --> 01:32:39,020
foreign

2179
01:33:09,780 --> 01:33:12,440
did everybody

