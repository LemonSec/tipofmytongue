1
00:00:12,320 --> 00:00:15,380
thank you

2
00:00:29,539 --> 00:00:33,120
okay hello everyone

3
00:00:33,120 --> 00:00:35,399
welcome to the meeting of the six law

4
00:00:35,399 --> 00:00:37,440
working group please make sure that you

5
00:00:37,440 --> 00:00:39,120
are in the right room

6
00:00:39,120 --> 00:00:41,520
my name is Carlos Gomez we are the

7
00:00:41,520 --> 00:00:43,559
cherish shweta bandari she is online

8
00:00:43,559 --> 00:00:45,239
today

9
00:00:45,239 --> 00:00:48,480
we have our responsible ad Eric client

10
00:00:48,480 --> 00:00:49,800
here

11
00:00:49,800 --> 00:00:52,640
and we have at least one minute taker

12
00:00:52,640 --> 00:00:55,980
Dominique volunteered once again as

13
00:00:55,980 --> 00:00:57,960
minute taker for six laws so thank you

14
00:00:57,960 --> 00:01:00,379
so much for your continued support

15
00:01:00,379 --> 00:01:04,260
and we encourage actually everyone to

16
00:01:04,260 --> 00:01:06,960
join the collaborative process of taking

17
00:01:06,960 --> 00:01:09,360
minutes which will be done as usual by

18
00:01:09,360 --> 00:01:11,760
means of hedge doc you can find the

19
00:01:11,760 --> 00:01:14,760
pointer at the end of the slide

20
00:01:14,760 --> 00:01:18,240
also we might need some jabber or zulip

21
00:01:18,240 --> 00:01:20,100
scribe is there anyone who would like to

22
00:01:20,100 --> 00:01:22,520
volunteer

23
00:01:28,500 --> 00:01:31,080
if not then we'll see if we can handle

24
00:01:31,080 --> 00:01:33,720
that by ourselves

25
00:01:33,720 --> 00:01:35,820
and finally on the screen you can also

26
00:01:35,820 --> 00:01:38,100
find the link to the online agenda which

27
00:01:38,100 --> 00:01:40,500
anyway you have probably seen many times

28
00:01:40,500 --> 00:01:42,979
already

29
00:01:44,280 --> 00:01:46,860
so there are a few tips for this meeting

30
00:01:46,860 --> 00:01:49,860
similar to the last couple of meetings

31
00:01:49,860 --> 00:01:52,500
which had an in-person component

32
00:01:52,500 --> 00:01:55,439
for in-person participants please make

33
00:01:55,439 --> 00:01:57,780
sure that you sign into the session into

34
00:01:57,780 --> 00:02:00,000
the meet Echo session for example by

35
00:02:00,000 --> 00:02:01,860
using the on-site tool which you can

36
00:02:01,860 --> 00:02:04,259
find from the data tracker agenda it's

37
00:02:04,259 --> 00:02:07,079
also available from QR codes here

38
00:02:07,079 --> 00:02:09,660
recall that we are going to use meteco

39
00:02:09,660 --> 00:02:11,760
to manage the queue

40
00:02:11,760 --> 00:02:13,920
so there's a single unified queue which

41
00:02:13,920 --> 00:02:15,660
is the one in meteco

42
00:02:15,660 --> 00:02:19,140
also for remote participants well you

43
00:02:19,140 --> 00:02:20,940
just need to keep your audio and video

44
00:02:20,940 --> 00:02:25,160
off unless you are presenting something

45
00:02:26,819 --> 00:02:30,239
then this is the node well this is a

46
00:02:30,239 --> 00:02:33,180
reminder of ITF policies on several

47
00:02:33,180 --> 00:02:35,940
important topics such as patents code of

48
00:02:35,940 --> 00:02:38,400
conduct few others so please make sure

49
00:02:38,400 --> 00:02:41,480
that you have read it

50
00:02:43,920 --> 00:02:46,080
and this is the agenda proposed for

51
00:02:46,080 --> 00:02:47,099
today

52
00:02:47,099 --> 00:02:49,500
so the first presentation is the usual

53
00:02:49,500 --> 00:02:51,540
chairs introduction which is currently

54
00:02:51,540 --> 00:02:52,860
in progress

55
00:02:52,860 --> 00:02:55,440
this will be followed by an update of

56
00:02:55,440 --> 00:02:59,040
the IPv6 over NFC draft given by Young

57
00:02:59,040 --> 00:03:00,480
Wang Choi

58
00:03:00,480 --> 00:03:02,879
next there will be an update of the six

59
00:03:02,879 --> 00:03:06,060
low use cases draft by Jung Yoon Hong

60
00:03:06,060 --> 00:03:08,280
and that will be followed by a couple of

61
00:03:08,280 --> 00:03:10,800
presentations related with neighbor

62
00:03:10,800 --> 00:03:13,140
Discovery the first one is multicast

63
00:03:13,140 --> 00:03:15,900
address listener registration and the

64
00:03:15,900 --> 00:03:18,540
second one is a new draft although the

65
00:03:18,540 --> 00:03:20,700
idea had been presented in a previous

66
00:03:20,700 --> 00:03:24,000
ITF which is on prefix registration both

67
00:03:24,000 --> 00:03:27,560
will be given by pascala

68
00:03:28,080 --> 00:03:30,540
then there will be another set of two

69
00:03:30,540 --> 00:03:33,780
presentations you may recall that in

70
00:03:33,780 --> 00:03:36,300
August we had a call for working group

71
00:03:36,300 --> 00:03:39,239
adoption on the document that was known

72
00:03:39,239 --> 00:03:42,360
as native short address NSA so there was

73
00:03:42,360 --> 00:03:44,940
a lot of discussion then and the authors

74
00:03:44,940 --> 00:03:48,900
have updated the documents and now they

75
00:03:48,900 --> 00:03:52,019
have been renamed as path aware semantic

76
00:03:52,019 --> 00:03:53,819
addressing pasa

77
00:03:53,819 --> 00:03:55,980
so there will be a presentation on the

78
00:03:55,980 --> 00:03:57,780
base draft and also the companion

79
00:03:57,780 --> 00:04:00,120
reliability considerations draft both

80
00:04:00,120 --> 00:04:02,940
presentations given by Luigi

81
00:04:02,940 --> 00:04:07,260
then I will present uh the update of the

82
00:04:07,260 --> 00:04:09,540
draft on transmission of chicompress

83
00:04:09,540 --> 00:04:12,720
package of the 15.4 networks and as you

84
00:04:12,720 --> 00:04:14,819
can see these leads already to the total

85
00:04:14,819 --> 00:04:16,798
allocated time for this session which is

86
00:04:16,798 --> 00:04:19,380
90 minutes so you can see that this is a

87
00:04:19,380 --> 00:04:21,238
pretty packed agenda so we need to

88
00:04:21,238 --> 00:04:23,220
kindly request the presenters to try to

89
00:04:23,220 --> 00:04:25,740
stick to the allocated times which in

90
00:04:25,740 --> 00:04:27,419
addition should allow for some time for

91
00:04:27,419 --> 00:04:29,699
discussion and questions and so on

92
00:04:29,699 --> 00:04:32,340
nevertheless if time permits we have

93
00:04:32,340 --> 00:04:35,400
another presentation which is entitled

94
00:04:35,400 --> 00:04:37,500
IP payload compression excluding

95
00:04:37,500 --> 00:04:40,860
transport layer by hangxi

96
00:04:40,860 --> 00:04:43,560
so is there any common any question on

97
00:04:43,560 --> 00:04:46,100
the agenda

98
00:04:49,500 --> 00:04:50,759
okay

99
00:04:50,759 --> 00:04:53,220
if there is none

100
00:04:53,220 --> 00:04:56,580
let's proceed to the status report on

101
00:04:56,580 --> 00:04:58,740
the working group documents we have

102
00:04:58,740 --> 00:05:00,660
currently four working group documents

103
00:05:00,660 --> 00:05:01,919
in six law

104
00:05:01,919 --> 00:05:04,860
the first one is IPv6 over PLC which is

105
00:05:04,860 --> 00:05:08,280
currently in the RFC editor queue

106
00:05:08,280 --> 00:05:11,940
the second document is IPv6 over NFC you

107
00:05:11,940 --> 00:05:14,820
may recall that this draft was evaluated

108
00:05:14,820 --> 00:05:18,240
some time ago by the isg then it was

109
00:05:18,240 --> 00:05:21,060
modified and now after some time the

110
00:05:21,060 --> 00:05:23,400
draft has been updated and also we have

111
00:05:23,400 --> 00:05:26,820
interesting news that the draft is back

112
00:05:26,820 --> 00:05:29,580
in isg evaluation State and it is

113
00:05:29,580 --> 00:05:32,240
actually scheduled for the telechat

114
00:05:32,240 --> 00:05:34,620
agenda in December

115
00:05:34,620 --> 00:05:37,080
so it will be interesting to see the the

116
00:05:37,080 --> 00:05:39,960
feedback from the isg and there will be

117
00:05:39,960 --> 00:05:41,460
a presentation on the last update later

118
00:05:41,460 --> 00:05:43,139
today

119
00:05:43,139 --> 00:05:45,060
the third document is the six low use

120
00:05:45,060 --> 00:05:46,139
cases draft

121
00:05:46,139 --> 00:05:48,780
which had been evaluated by a couple of

122
00:05:48,780 --> 00:05:51,479
directorates then the draft has been

123
00:05:51,479 --> 00:05:54,000
updated trying to address the remaining

124
00:05:54,000 --> 00:05:56,759
commands and the document has also

125
00:05:56,759 --> 00:05:58,919
entered the isg evaluation State and

126
00:05:58,919 --> 00:06:00,900
it's actually on the same telechat

127
00:06:00,900 --> 00:06:04,500
agenda on the same day in December

128
00:06:04,500 --> 00:06:06,360
this will also be presented later today

129
00:06:06,360 --> 00:06:08,759
and the last working group document is

130
00:06:08,759 --> 00:06:10,560
the multicast address listener

131
00:06:10,560 --> 00:06:12,960
registration draft which has been

132
00:06:12,960 --> 00:06:15,479
updated several times since the last ITF

133
00:06:15,479 --> 00:06:18,960
and it is perhaps getting close to being

134
00:06:18,960 --> 00:06:21,000
ready for working group last call

135
00:06:21,000 --> 00:06:22,259
so

136
00:06:22,259 --> 00:06:25,759
um is there any comment or question

137
00:06:27,360 --> 00:06:31,380
if not then let's proceed to the first

138
00:06:31,380 --> 00:06:34,380
or the next presentation which is on

139
00:06:34,380 --> 00:06:38,120
IPv6 over NFC

140
00:06:51,600 --> 00:06:53,819
oh

141
00:06:53,819 --> 00:06:57,000
the Commerce that this is your one

142
00:06:57,000 --> 00:06:59,340
choice from entry career

143
00:06:59,340 --> 00:07:02,819
um I'm going to present that

144
00:07:02,819 --> 00:07:05,460
the object or the status of date of the

145
00:07:05,460 --> 00:07:08,100
IPP system NFC this version is number

146
00:07:08,100 --> 00:07:09,360
18.

147
00:07:09,360 --> 00:07:10,979
next slide please

148
00:07:10,979 --> 00:07:13,139
the first page is the kick introduction

149
00:07:13,139 --> 00:07:16,139
about the LFC actually

150
00:07:16,139 --> 00:07:19,759
every time I shoot that the

151
00:07:22,520 --> 00:07:27,539
and this is the the history of the draft

152
00:07:27,539 --> 00:07:29,880
the draft has such a long history

153
00:07:29,880 --> 00:07:31,380
actually

154
00:07:31,380 --> 00:07:36,240
uh I think the the longest history ever

155
00:07:36,240 --> 00:07:39,840
or ever in ITF I think

156
00:07:39,840 --> 00:07:43,199
uh last the first Stella chat two years

157
00:07:43,199 --> 00:07:46,560
ago just we got the updated two for two

158
00:07:46,560 --> 00:07:49,979
draft budget the number 17 after that

159
00:07:49,979 --> 00:07:53,520
the uh there is something common from

160
00:07:53,520 --> 00:07:55,740
the Eric day he wanted to know the

161
00:07:55,740 --> 00:07:58,500
changes the because the the there's

162
00:07:58,500 --> 00:08:01,440
newly list of the the data link of the

163
00:08:01,440 --> 00:08:05,280
NFC is for the number waterfall from the

164
00:08:05,280 --> 00:08:07,259
Wonder three so he want to know the

165
00:08:07,259 --> 00:08:09,840
changes between the two specifications

166
00:08:09,840 --> 00:08:11,720
so

167
00:08:11,720 --> 00:08:15,120
and then after that the finally I got

168
00:08:15,120 --> 00:08:17,819
the good news from the Eric with the

169
00:08:17,819 --> 00:08:22,319
draft update with the new schedule of

170
00:08:22,319 --> 00:08:25,500
the telechat and the we are going to

171
00:08:25,500 --> 00:08:27,840
second round the child chat on December

172
00:08:27,840 --> 00:08:30,419
next slide please

173
00:08:30,419 --> 00:08:32,339
this is current status

174
00:08:32,339 --> 00:08:34,979
let's try it please

175
00:08:34,979 --> 00:08:38,640
so since the previous meeting results

176
00:08:38,640 --> 00:08:41,880
actually to Eric gave us the comment uh

177
00:08:41,880 --> 00:08:43,620
gave me the comment actually

178
00:08:43,620 --> 00:08:47,580
uh he got the finally reviewed about the

179
00:08:47,580 --> 00:08:49,080
the

180
00:08:49,080 --> 00:08:53,279
of two specification of the data link of

181
00:08:53,279 --> 00:08:56,240
NFC version

182
00:08:56,240 --> 00:08:58,500
1.3 and on the four

183
00:08:58,500 --> 00:09:03,180
but I think he did doesn't know do not

184
00:09:03,180 --> 00:09:05,700
have any any more

185
00:09:05,700 --> 00:09:08,279
concerned about that changes what about

186
00:09:08,279 --> 00:09:10,320
the two between the two uh

187
00:09:10,320 --> 00:09:12,959
specifications and then he gave us gave

188
00:09:12,959 --> 00:09:15,420
me that one comment from about the

189
00:09:15,420 --> 00:09:16,940
secret concentration

190
00:09:16,940 --> 00:09:19,320
revision about that the

191
00:09:19,320 --> 00:09:21,959
incompressibility the other uh six or

192
00:09:21,959 --> 00:09:23,399
four document

193
00:09:23,399 --> 00:09:26,820
and then a couple of days ago he also

194
00:09:26,820 --> 00:09:28,200
gave me

195
00:09:28,200 --> 00:09:28,820
um

196
00:09:28,820 --> 00:09:32,660
they mentioned about the RFC sorry

197
00:09:32,660 --> 00:09:36,240
756 about that the survive the layer

198
00:09:36,240 --> 00:09:38,820
sequence condition five position six uh

199
00:09:38,820 --> 00:09:41,820
he gave me that the I think we need to

200
00:09:41,820 --> 00:09:46,040
put the new references of the RFC

201
00:09:46,040 --> 00:09:47,899
770s

202
00:09:47,899 --> 00:09:53,100
37 56. so because I will produce the new

203
00:09:53,100 --> 00:09:56,459
draft version maybe 19 as soon as I I

204
00:09:56,459 --> 00:09:59,360
finished we finished that the sixth row

205
00:09:59,360 --> 00:10:03,420
session this time next slide please

206
00:10:03,420 --> 00:10:05,820
so this is the details of the the

207
00:10:05,820 --> 00:10:10,860
changes from the version 17 to 80 80.

208
00:10:10,860 --> 00:10:14,820
uh actually I got I gave some example

209
00:10:14,820 --> 00:10:17,700
explanation about that the first crop

210
00:10:17,700 --> 00:10:21,180
about that the llcp this is still a data

211
00:10:21,180 --> 00:10:24,959
link of the NFC version number 1.4 is

212
00:10:24,959 --> 00:10:28,260
the it's about that security data

213
00:10:28,260 --> 00:10:29,279
transfer

214
00:10:29,279 --> 00:10:32,279
lsdpa

215
00:10:32,779 --> 00:10:36,180
and the second paragraph is actually

216
00:10:36,180 --> 00:10:39,720
this kind of the the short address

217
00:10:39,720 --> 00:10:43,500
the cluster of a fixed consideration

218
00:10:43,500 --> 00:10:47,220
about the salt should address of the NFC

219
00:10:47,220 --> 00:10:49,800
next slide please

220
00:10:49,800 --> 00:10:51,920
so next step actually

221
00:10:51,920 --> 00:10:55,579
uh I'm going to produce television the

222
00:10:55,579 --> 00:11:00,180
19th I put that I mentioned that the RFC

223
00:11:00,180 --> 00:11:03,360
sorry 7 56 will be there you'll be that

224
00:11:03,360 --> 00:11:04,519
will be

225
00:11:04,519 --> 00:11:07,740
put and then we will have the second

226
00:11:07,740 --> 00:11:11,579
round the TeleCheck on December 15th

227
00:11:11,579 --> 00:11:15,839
so I can see that the final step

228
00:11:15,839 --> 00:11:18,839
finally and then I can see it at the end

229
00:11:18,839 --> 00:11:21,000
of the a little bit more that before I

230
00:11:21,000 --> 00:11:22,620
think thank you

231
00:11:22,620 --> 00:11:24,779
any comment down

232
00:11:24,779 --> 00:11:27,779
comment

233
00:11:28,800 --> 00:11:30,839
any questions or comments

234
00:11:30,839 --> 00:11:34,640
in the room or remotely

235
00:11:39,600 --> 00:11:42,240
okay so if there are none

236
00:11:42,240 --> 00:11:44,220
thank you for the presentation it will

237
00:11:44,220 --> 00:11:46,320
be interesting to see the feedback from

238
00:11:46,320 --> 00:11:49,860
the ASG hopefully in just a few weeks so

239
00:11:49,860 --> 00:11:52,620
the next presentation is the six low use

240
00:11:52,620 --> 00:11:55,160
cases draft

241
00:12:05,519 --> 00:12:08,339
okay uh good afternoon everyone my name

242
00:12:08,339 --> 00:12:09,260
is

243
00:12:09,260 --> 00:12:12,839
present the sixth row use k-thrift next

244
00:12:12,839 --> 00:12:14,459
page please

245
00:12:14,459 --> 00:12:17,339
uh this is the history and status or

246
00:12:17,339 --> 00:12:20,880
this is the 14 revision so in this year

247
00:12:20,880 --> 00:12:24,920
so February this document will to ISC

248
00:12:24,920 --> 00:12:28,620
evaluation so we are awaiting some of

249
00:12:28,620 --> 00:12:32,660
the feedback next page

250
00:12:32,760 --> 00:12:35,160
yes so this is the opaque after last

251
00:12:35,160 --> 00:12:37,740
meeting or we call

252
00:12:37,740 --> 00:12:40,560
a couple of command so we believe that

253
00:12:40,560 --> 00:12:46,800
we are we reserved or comment but among

254
00:12:46,800 --> 00:12:49,440
document from the robot

255
00:12:49,440 --> 00:12:52,980
or spark or there are some the command

256
00:12:52,980 --> 00:12:56,160
was not remaining as on the result that

257
00:12:56,160 --> 00:12:59,100
is the handling appendix a and the

258
00:12:59,100 --> 00:13:03,720
security control section so appendix a

259
00:13:03,720 --> 00:13:06,540
is neither introduced or differs from

260
00:13:06,540 --> 00:13:09,420
the body of this document so we ask why

261
00:13:09,420 --> 00:13:12,480
it is here yes he's right so in the

262
00:13:12,480 --> 00:13:15,000
revision we try to resolve his command

263
00:13:15,000 --> 00:13:17,700
and the second thing is the security

264
00:13:17,700 --> 00:13:20,820
control section uh Robert Sparks says

265
00:13:20,820 --> 00:13:25,980
that he didn't satisfy our update so in

266
00:13:25,980 --> 00:13:28,980
this revision we also try to resolve his

267
00:13:28,980 --> 00:13:31,519
command next page

268
00:13:31,519 --> 00:13:34,740
the first thing is to appendix a the

269
00:13:34,740 --> 00:13:37,740
appendix a is a design space dimension

270
00:13:37,740 --> 00:13:40,980
for sixth row deployment so in all the

271
00:13:40,980 --> 00:13:43,260
position of this draft or this content

272
00:13:43,260 --> 00:13:46,320
in Authentics a is located in main body

273
00:13:46,320 --> 00:13:49,079
but or during the progress in this left

274
00:13:49,079 --> 00:13:52,320
and resolving some document it was moved

275
00:13:52,320 --> 00:13:55,560
to appendix a also the other comment to

276
00:13:55,560 --> 00:13:58,560
keep the appendix a because it provides

277
00:13:58,560 --> 00:14:01,079
useful information for sixth row

278
00:14:01,079 --> 00:14:05,339
deployment so our resolution is to add a

279
00:14:05,339 --> 00:14:07,260
related sentence in the introducing

280
00:14:07,260 --> 00:14:11,040
section so it is a simple modification

281
00:14:11,040 --> 00:14:13,019
next phase

282
00:14:13,019 --> 00:14:15,240
yeah the second thing is to security

283
00:14:15,240 --> 00:14:17,459
control section it was come from the

284
00:14:17,459 --> 00:14:20,459
robot spark so import the text is like

285
00:14:20,459 --> 00:14:22,980
this it is a little short but He

286
00:14:22,980 --> 00:14:25,920
suggests to add some sentence which is

287
00:14:25,920 --> 00:14:30,959
related to L2 layer of security so we uh

288
00:14:30,959 --> 00:14:33,839
analyze the other six row RFC document

289
00:14:33,839 --> 00:14:37,380
so we cut some ideas from the existing

290
00:14:37,380 --> 00:14:41,339
sixth row rfps document so we modify the

291
00:14:41,339 --> 00:14:43,740
security control section as like it is

292
00:14:43,740 --> 00:14:46,980
so in the last week I replied to robot

293
00:14:46,980 --> 00:14:50,459
spark for how about or changing this

294
00:14:50,459 --> 00:14:53,040
update but until now we don't have any

295
00:14:53,040 --> 00:14:54,240
feedback

296
00:14:54,240 --> 00:14:58,680
yeah we hope so it resolved his command

297
00:14:58,680 --> 00:15:00,779
okay next page please

298
00:15:00,779 --> 00:15:03,480
just stay true okay thank you any

299
00:15:03,480 --> 00:15:06,500
question Workman

300
00:15:09,060 --> 00:15:12,439
any comments questions

301
00:15:15,779 --> 00:15:18,360
so it seems we have none this is also

302
00:15:18,360 --> 00:15:20,639
another document that is on the telechat

303
00:15:20,639 --> 00:15:22,860
agenda for December so it will be

304
00:15:22,860 --> 00:15:24,959
interesting to see also the feedback

305
00:15:24,959 --> 00:15:27,180
from the ASG on this document

306
00:15:27,180 --> 00:15:30,739
thank you thank you very much

307
00:15:32,279 --> 00:15:34,860
so the next couple of presentations will

308
00:15:34,860 --> 00:15:37,440
be given by Pascal on the two drafts

309
00:15:37,440 --> 00:15:41,360
related with IPv6 and D

310
00:15:48,000 --> 00:15:50,779
ude hello um

311
00:15:52,500 --> 00:15:55,139
so this is Pascal from Cisco

312
00:15:55,139 --> 00:15:58,680
um this document here is an extension of

313
00:15:58,680 --> 00:16:02,540
RFC 8505 that aims at uh

314
00:16:02,540 --> 00:16:04,920
registering not only unicast addresses

315
00:16:04,920 --> 00:16:07,440
we do in 8505 but also multicast and

316
00:16:07,440 --> 00:16:10,399
anycast addresses

317
00:16:10,680 --> 00:16:13,740
it comes from a requirement that was

318
00:16:13,740 --> 00:16:16,380
made by the white sun Alliance so for

319
00:16:16,380 --> 00:16:17,880
those who are not aware of the wise and

320
00:16:17,880 --> 00:16:19,940
Alliance wise and

321
00:16:19,940 --> 00:16:23,459
develops a standard for smart grid

322
00:16:23,459 --> 00:16:26,880
devices which operates on the 802.15

323
00:16:26,880 --> 00:16:29,279
forcepgig ASM band

324
00:16:29,279 --> 00:16:32,519
so that's that allows several kilometers

325
00:16:32,519 --> 00:16:34,040
between devices

326
00:16:34,040 --> 00:16:38,100
and the devices are deployed in mesh

327
00:16:38,100 --> 00:16:40,019
networks which can range from Androids

328
00:16:40,019 --> 00:16:41,820
to thousands of nodes

329
00:16:41,820 --> 00:16:44,339
those nodes join the network using six

330
00:16:44,339 --> 00:16:48,240
slope nnd and then repo is used to Route

331
00:16:48,240 --> 00:16:51,240
inside the the subnet so each mesh is a

332
00:16:51,240 --> 00:16:54,000
single 64 where you can find those

333
00:16:54,000 --> 00:16:55,740
thousands of nodes and the links are

334
00:16:55,740 --> 00:16:59,160
about 100 kbps speed

335
00:16:59,160 --> 00:17:02,279
so it's all route over using repo

336
00:17:02,279 --> 00:17:06,000
now the reason why we developed six

337
00:17:06,000 --> 00:17:07,740
slope and indeed the way we did was to

338
00:17:07,740 --> 00:17:10,679
avoid multicast because the 6lopan

339
00:17:10,679 --> 00:17:12,540
devices are usually sleeping so they

340
00:17:12,540 --> 00:17:16,500
cannot respond to lookups and we cannot

341
00:17:16,500 --> 00:17:19,260
afford basically the the energy of of

342
00:17:19,260 --> 00:17:21,540
broadcasting all the time

343
00:17:21,540 --> 00:17:24,480
so devices Alliance recognize that but

344
00:17:24,480 --> 00:17:26,160
at the same time they said a we also

345
00:17:26,160 --> 00:17:28,439
have uh multicast traffic

346
00:17:28,439 --> 00:17:30,720
and the benefits we see for six slope

347
00:17:30,720 --> 00:17:32,880
and ND for unicast we want those same

348
00:17:32,880 --> 00:17:35,640
benefits for multicast and so when they

349
00:17:35,640 --> 00:17:37,740
looked at MLD they said well well that

350
00:17:37,740 --> 00:17:39,960
won't float the boat we need something

351
00:17:39,960 --> 00:17:42,120
where the device can sleep exactly the

352
00:17:42,120 --> 00:17:43,799
same way as it would

353
00:17:43,799 --> 00:17:48,179
for a unicast and so we turned the MLD

354
00:17:48,179 --> 00:17:51,240
model where the router pulls the devices

355
00:17:51,240 --> 00:17:54,000
and the devices have to be awake into

356
00:17:54,000 --> 00:17:57,480
just 48505 same thing as a model where

357
00:17:57,480 --> 00:17:59,940
the device wakes up makes a request to

358
00:17:59,940 --> 00:18:03,500
the router and can go back to sleep

359
00:18:03,900 --> 00:18:07,160
um for those who are aware of RFC 9010

360
00:18:07,160 --> 00:18:12,000
RFC 9010 allows to redistribute the

361
00:18:12,000 --> 00:18:14,160
host's addresses which are learned from

362
00:18:14,160 --> 00:18:17,160
8505 into repo

363
00:18:17,160 --> 00:18:20,100
so these are called external routes but

364
00:18:20,100 --> 00:18:23,460
triple allows for Unique for address and

365
00:18:23,460 --> 00:18:25,380
prefix external rods

366
00:18:25,380 --> 00:18:28,140
it Ripple also allows for multicast

367
00:18:28,140 --> 00:18:32,039
addresses and anycast addresses so what

368
00:18:32,039 --> 00:18:34,679
we do in this draft is not only enable

369
00:18:34,679 --> 00:18:36,299
the registration of anycast and

370
00:18:36,299 --> 00:18:39,480
multicast addresses in 8505 we also

371
00:18:39,480 --> 00:18:42,240
couple that with work on the Ripple side

372
00:18:42,240 --> 00:18:46,440
to redistribute this knowledge into repo

373
00:18:46,440 --> 00:18:50,760
same message 505 the advertisement is uh

374
00:18:50,760 --> 00:18:53,400
unaware and Abstract agnostic to the

375
00:18:53,400 --> 00:18:55,380
rotting that happens on the other side

376
00:18:55,380 --> 00:18:58,080
of the router so today we want to use

377
00:18:58,080 --> 00:18:59,940
this for any other multicast rotting

378
00:18:59,940 --> 00:19:03,000
protocol like PM we can we can always do

379
00:19:03,000 --> 00:19:05,179
that

380
00:19:05,820 --> 00:19:08,580
um so this this makes it so that the

381
00:19:08,580 --> 00:19:11,640
six-dependent family is growing

382
00:19:11,640 --> 00:19:13,559
um we so we have this multicast

383
00:19:13,559 --> 00:19:16,380
registration which as you said is is

384
00:19:16,380 --> 00:19:18,480
close to finish we are done with this

385
00:19:18,480 --> 00:19:21,360
document pretty much we have the unicast

386
00:19:21,360 --> 00:19:23,220
lookup which has not progressed for a

387
00:19:23,220 --> 00:19:24,660
long time we've not been working on it

388
00:19:24,660 --> 00:19:26,760
we'll have to decide what we do with it

389
00:19:26,760 --> 00:19:28,799
but basically the idea is since the

390
00:19:28,799 --> 00:19:31,559
rotting fabric knows where the addresses

391
00:19:31,559 --> 00:19:34,200
are why do we still broadcast work as

392
00:19:34,200 --> 00:19:36,900
lookups so can we generalize what we do

393
00:19:36,900 --> 00:19:39,299
uh in so we don't even have broadcast

394
00:19:39,299 --> 00:19:42,600
value caps and then there is the new uh

395
00:19:42,600 --> 00:19:43,980
member of the family which I will

396
00:19:43,980 --> 00:19:45,360
discuss after which is the prefix

397
00:19:45,360 --> 00:19:46,740
registration

398
00:19:46,740 --> 00:19:48,120
so

399
00:19:48,120 --> 00:19:50,039
this gives us kind of an interesting

400
00:19:50,039 --> 00:19:51,240
family now

401
00:19:51,240 --> 00:19:53,100
next slide please

402
00:19:53,100 --> 00:19:56,100
so what changes do we see so as you said

403
00:19:56,100 --> 00:19:59,039
callous we've moved uh quite a bit since

404
00:19:59,039 --> 00:20:02,760
last day ATF so um we have improved the

405
00:20:02,760 --> 00:20:05,580
terminology we have beefed up the

406
00:20:05,580 --> 00:20:08,700
section that says how we improve uh

407
00:20:08,700 --> 00:20:11,640
Ripple we extend repo the six slope and

408
00:20:11,640 --> 00:20:13,860
piece itself has been uh rather stable

409
00:20:13,860 --> 00:20:16,380
but on the Ripple side we have improved

410
00:20:16,380 --> 00:20:18,360
in particular the way we look at

411
00:20:18,360 --> 00:20:19,980
freshness

412
00:20:19,980 --> 00:20:23,520
for those who are aware of the way

413
00:20:23,520 --> 00:20:25,679
Reaper works there is a sequence counter

414
00:20:25,679 --> 00:20:27,960
that comes from the host when the host

415
00:20:27,960 --> 00:20:30,780
moves which is password 505 and then

416
00:20:30,780 --> 00:20:32,640
redistributing in redistributed into

417
00:20:32,640 --> 00:20:35,700
repo as a sequence counter the path

418
00:20:35,700 --> 00:20:37,620
sequence that allows to find which is

419
00:20:37,620 --> 00:20:41,340
the most fresh the freshest path and key

420
00:20:41,340 --> 00:20:43,020
on the older path

421
00:20:43,020 --> 00:20:45,120
well when you inject a multicaster

422
00:20:45,120 --> 00:20:47,340
drives for multiple members those

423
00:20:47,340 --> 00:20:49,260
numbers may not compare

424
00:20:49,260 --> 00:20:51,600
because each each host will or each

425
00:20:51,600 --> 00:20:53,340
router will maintain its own sequence

426
00:20:53,340 --> 00:20:55,500
number so as long as it's Unique as it's

427
00:20:55,500 --> 00:20:57,419
okay there is a single one but if it's

428
00:20:57,419 --> 00:20:59,460
multicast then there can be multiple

429
00:20:59,460 --> 00:21:01,140
sources and the numbers cannot compare

430
00:21:01,140 --> 00:21:04,320
so we we explain how we use the rubber

431
00:21:04,320 --> 00:21:07,260
field which is taken from six weapon ND

432
00:21:07,260 --> 00:21:09,419
and inject into repo as a proof of

433
00:21:09,419 --> 00:21:12,120
ownership of what's being distributed

434
00:21:12,120 --> 00:21:13,919
um we basically say hey if it's coming

435
00:21:13,919 --> 00:21:16,200
from the same guy so same Rover then you

436
00:21:16,200 --> 00:21:17,700
can compare the sequence number and

437
00:21:17,700 --> 00:21:20,220
eliminate eliminate the stale routes if

438
00:21:20,220 --> 00:21:22,080
it's coming from different Rovers so

439
00:21:22,080 --> 00:21:23,520
it's different listeners for the same

440
00:21:23,520 --> 00:21:25,919
multicast address then effectively all

441
00:21:25,919 --> 00:21:28,380
the routes have to be injected in the

442
00:21:28,380 --> 00:21:31,080
multicast rotting table

443
00:21:31,080 --> 00:21:33,179
another thing that happens is the

444
00:21:33,179 --> 00:21:35,400
introduction of the P flat pfl but I

445
00:21:35,400 --> 00:21:36,840
will go back

446
00:21:36,840 --> 00:21:39,780
um to that on the next slide and with

447
00:21:39,780 --> 00:21:42,539
clarifying the language when it's any

448
00:21:42,539 --> 00:21:44,700
cast or multicast we are using the term

449
00:21:44,700 --> 00:21:47,460
subscribe as opposed to register

450
00:21:47,460 --> 00:21:49,200
just to say hey it's a subscription

451
00:21:49,200 --> 00:21:52,620
because you intend to get a multicast

452
00:21:52,620 --> 00:21:55,559
packet delivered basically

453
00:21:55,559 --> 00:21:58,140
we had we discussed last time an issue

454
00:21:58,140 --> 00:22:01,380
about the consistent uptime option so

455
00:22:01,380 --> 00:22:04,679
the consistent uptime function is option

456
00:22:04,679 --> 00:22:08,159
is the way the host can figure if the

457
00:22:08,159 --> 00:22:09,600
router

458
00:22:09,600 --> 00:22:12,720
has lost a registration State basically

459
00:22:12,720 --> 00:22:15,960
did the router uh reboot for instance

460
00:22:15,960 --> 00:22:18,360
since last time this device registered

461
00:22:18,360 --> 00:22:20,580
in which case the device need to

462
00:22:20,580 --> 00:22:22,440
re-register because the router may have

463
00:22:22,440 --> 00:22:24,659
lost the state

464
00:22:24,659 --> 00:22:29,039
um this is this impact six-man and so

465
00:22:29,039 --> 00:22:31,200
the question was sandestier and I guess

466
00:22:31,200 --> 00:22:34,020
they're equal well tell us

467
00:22:34,020 --> 00:22:34,740
um

468
00:22:34,740 --> 00:22:37,500
basically what we do with this this uh

469
00:22:37,500 --> 00:22:40,860
consistent option obtain option

470
00:22:40,860 --> 00:22:42,480
and then again there is the next slide

471
00:22:42,480 --> 00:22:46,460
so you'll be free to next slide please

472
00:22:46,559 --> 00:22:49,080
so yes there is the option it does

473
00:22:49,080 --> 00:22:51,659
change a little bit because we want to

474
00:22:51,659 --> 00:22:55,860
to exchange uh the uh State uh sequence

475
00:22:55,860 --> 00:22:57,659
information in both directions so the

476
00:22:57,659 --> 00:22:59,940
host can know what is the most recent

477
00:22:59,940 --> 00:23:01,500
State for the router and reciprocally

478
00:23:01,500 --> 00:23:03,419
it's completely abstract to the fact

479
00:23:03,419 --> 00:23:05,460
that we use it for six slip and ND or

480
00:23:05,460 --> 00:23:08,340
any other state from which the host and

481
00:23:08,340 --> 00:23:10,140
the router must have you know some some

482
00:23:10,140 --> 00:23:11,580
kind of agreement

483
00:23:11,580 --> 00:23:14,340
uh right now it is still in this pack

484
00:23:14,340 --> 00:23:16,020
because we didn't get a clear message

485
00:23:16,020 --> 00:23:17,760
that we need to write a different spec

486
00:23:17,760 --> 00:23:18,960
for it

487
00:23:18,960 --> 00:23:22,860
I'm perfectly happy with that uh

488
00:23:22,860 --> 00:23:25,440
and as far as I know we can go for one

489
00:23:25,440 --> 00:23:27,900
group let's go in that state

490
00:23:27,900 --> 00:23:32,120
and Rick you jump in when you want

491
00:23:33,960 --> 00:23:35,820
even if during the work group let's go

492
00:23:35,820 --> 00:23:37,740
we decide to take it off I don't see why

493
00:23:37,740 --> 00:23:39,360
that should hold our group last call

494
00:23:39,360 --> 00:23:41,640
because taking off that section

495
00:23:41,640 --> 00:23:43,679
is still good reviews I mean if anything

496
00:23:43,679 --> 00:23:45,900
get reviews yes during World group

497
00:23:45,900 --> 00:23:47,580
Prescott for this and we take it off the

498
00:23:47,580 --> 00:23:51,379
reviews are still good to take

499
00:24:00,600 --> 00:24:02,820
yeah do you have a problem with the mic

500
00:24:02,820 --> 00:24:05,520
there we go does that work yes

501
00:24:05,520 --> 00:24:07,559
um yeah this fell off through the cracks

502
00:24:07,559 --> 00:24:09,720
a little bit from the last Philadelphia

503
00:24:09,720 --> 00:24:11,940
meeting I did send email to six man

504
00:24:11,940 --> 00:24:13,679
chairs and there was a

505
00:24:13,679 --> 00:24:15,840
uh but I failed to follow up because I

506
00:24:15,840 --> 00:24:17,700
think there was no the general

507
00:24:17,700 --> 00:24:20,220
discussion on on that email the thread

508
00:24:20,220 --> 00:24:21,360
that I said

509
00:24:21,360 --> 00:24:24,299
um so I think a perfectly fine thing to

510
00:24:24,299 --> 00:24:25,559
do is to

511
00:24:25,559 --> 00:24:28,080
uh do it you know if you want to do an

512
00:24:28,080 --> 00:24:29,580
adoption call do an adoption call on all

513
00:24:29,580 --> 00:24:34,080
cc6 man yeah sorry uh and I'll cc6 man

514
00:24:34,080 --> 00:24:34,860
um

515
00:24:34,860 --> 00:24:37,679
and we'll talk about it then I mean like

516
00:24:37,679 --> 00:24:39,720
like we said any review is good to take

517
00:24:39,720 --> 00:24:41,580
even if we take that section off later

518
00:24:41,580 --> 00:24:44,178
sure

519
00:24:44,700 --> 00:24:46,679
so I don't see that as blocking local

520
00:24:46,679 --> 00:24:49,860
classical next slide please yes

521
00:24:49,860 --> 00:24:53,220
so the the other change doesn't affect

522
00:24:53,220 --> 00:24:56,100
the binary of the packets uh that would

523
00:24:56,100 --> 00:24:58,620
be thrown it's just that since we are

524
00:24:58,620 --> 00:25:00,000
doing the work and the prefix

525
00:25:00,000 --> 00:25:02,039
registration for a number of reasons we

526
00:25:02,039 --> 00:25:04,740
needed yet another flag to indicate

527
00:25:04,740 --> 00:25:06,600
prefix but if you look at its unique as

528
00:25:06,600 --> 00:25:09,780
multicast any cast and prefix are

529
00:25:09,780 --> 00:25:11,640
mutually exclusive

530
00:25:11,640 --> 00:25:14,640
so why take yet another bit

531
00:25:14,640 --> 00:25:16,799
saying it's mutually exclusive with the

532
00:25:16,799 --> 00:25:19,020
others so the idea was let's keep the

533
00:25:19,020 --> 00:25:20,640
two bits with the same value zero

534
00:25:20,640 --> 00:25:23,400
unicast one multicast zero well second

535
00:25:23,400 --> 00:25:26,640
bit on any cast but call that a single

536
00:25:26,640 --> 00:25:29,340
field so the value of three would be

537
00:25:29,340 --> 00:25:30,960
available to us for the prefix

538
00:25:30,960 --> 00:25:32,220
registration

539
00:25:32,220 --> 00:25:33,960
so it doesn't change the implementation

540
00:25:33,960 --> 00:25:37,200
for this draft but it allows to free and

541
00:25:37,200 --> 00:25:40,260
to to give a sense to what this means

542
00:25:40,260 --> 00:25:43,140
when both multicast and anycast bits are

543
00:25:43,140 --> 00:25:45,000
set basically it means it will mean

544
00:25:45,000 --> 00:25:47,480
prefix

545
00:25:48,059 --> 00:25:50,820
um by the way so the prefix is the

546
00:25:50,820 --> 00:25:52,020
second draft I will be talking about

547
00:25:52,020 --> 00:25:55,620
right after but remember for those who

548
00:25:55,620 --> 00:25:57,900
have a pending draft there is this early

549
00:25:57,900 --> 00:26:01,140
INR discussion that has happened for for

550
00:26:01,140 --> 00:26:03,960
those drafts and Amanda came to me and

551
00:26:03,960 --> 00:26:06,720
said uh what do I do with this thing and

552
00:26:06,720 --> 00:26:09,559
well that's a question to the group

553
00:26:09,559 --> 00:26:12,840
if we agree to do the prefix with the

554
00:26:12,840 --> 00:26:15,600
value 3 then we could avoid having to

555
00:26:15,600 --> 00:26:17,760
declare a registry for this draft for

556
00:26:17,760 --> 00:26:20,159
which the last variable values 3 would

557
00:26:20,159 --> 00:26:21,960
be assigned by the draft which is right

558
00:26:21,960 --> 00:26:23,640
coming up

559
00:26:23,640 --> 00:26:26,340
on the other hand if we delay the work

560
00:26:26,340 --> 00:26:28,080
and the prefix and we don't go for

561
00:26:28,080 --> 00:26:31,679
adoption Etc then we probably want to

562
00:26:31,679 --> 00:26:33,480
have this registry so the value 3

563
00:26:33,480 --> 00:26:34,799
remains

564
00:26:34,799 --> 00:26:37,500
um unassigned so at the moment the

565
00:26:37,500 --> 00:26:39,360
assumption is you know we don't know

566
00:26:39,360 --> 00:26:41,520
what we do with the other draft so this

567
00:26:41,520 --> 00:26:45,120
draft has a INR section which requires a

568
00:26:45,120 --> 00:26:47,159
registry for this with the value 3 on

569
00:26:47,159 --> 00:26:49,320
the side that's that's the state of the

570
00:26:49,320 --> 00:26:51,120
art

571
00:26:51,120 --> 00:26:53,940
if anybody jumps to the mic

572
00:26:53,940 --> 00:26:56,659
um next slide please

573
00:26:57,299 --> 00:27:01,559
so yes I mean no news from six men and

574
00:27:01,559 --> 00:27:03,000
uh certainly it would be nice at least

575
00:27:03,000 --> 00:27:05,220
to circulate this at six months during

576
00:27:05,220 --> 00:27:06,900
the war group let's go

577
00:27:06,900 --> 00:27:10,080
and ready to start the worker plus call

578
00:27:10,080 --> 00:27:12,840
as far as I'm concerned

579
00:27:12,840 --> 00:27:17,100
yes so the idea will be to uh to start

580
00:27:17,100 --> 00:27:20,400
the working group last call perhaps we

581
00:27:20,400 --> 00:27:22,500
might need to keep six months maybe in

582
00:27:22,500 --> 00:27:23,820
the loop somehow

583
00:27:23,820 --> 00:27:26,418
Eric

584
00:27:26,700 --> 00:27:30,059
yeah yes

585
00:27:30,960 --> 00:27:33,360
it kind of fits with what Bob said at

586
00:27:33,360 --> 00:27:35,100
six men the other day which is like when

587
00:27:35,100 --> 00:27:37,140
the group is you know he's happy that

588
00:27:37,140 --> 00:27:39,419
this thing is needed then he can

589
00:27:39,419 --> 00:27:41,400
circulate by them but not too early but

590
00:27:41,400 --> 00:27:45,200
that's not too early anymore okay

591
00:27:45,960 --> 00:27:48,779
so then uh well I don't know if there

592
00:27:48,779 --> 00:27:50,039
are other comments or questions about

593
00:27:50,039 --> 00:27:53,419
this first presentation

594
00:27:54,659 --> 00:27:57,120
uh just a gentle reminder that why sun

595
00:27:57,120 --> 00:27:58,980
is effectively waiting for the RFC for

596
00:27:58,980 --> 00:28:02,279
their home specs so I mean if we can be

597
00:28:02,279 --> 00:28:04,080
Swift on that one that would be nice

598
00:28:04,080 --> 00:28:06,419
sure

599
00:28:06,419 --> 00:28:10,020
okay so then let's proceed

600
00:28:10,020 --> 00:28:13,340
to the second presentation

601
00:28:15,960 --> 00:28:18,419
okay so this is the the newest and

602
00:28:18,419 --> 00:28:21,720
bestest member of the family so

603
00:28:21,720 --> 00:28:24,419
next slide please

604
00:28:24,419 --> 00:28:27,779
so this one we already saw next slide

605
00:28:27,779 --> 00:28:30,240
yeah

606
00:28:30,240 --> 00:28:33,779
we we are already redistributing what we

607
00:28:33,779 --> 00:28:36,059
learned from 8505 into routing this is

608
00:28:36,059 --> 00:28:39,299
not a surprise the way it works is today

609
00:28:39,299 --> 00:28:42,360
when the host or even the router has a

610
00:28:42,360 --> 00:28:45,299
unicast address and he wants to ensure

611
00:28:45,299 --> 00:28:47,940
there is reachability back independently

612
00:28:47,940 --> 00:28:50,159
of what the rotting is above the first

613
00:28:50,159 --> 00:28:54,059
operator it will set the r flag

614
00:28:54,059 --> 00:28:57,419
in 8505 telling the router a whatever

615
00:28:57,419 --> 00:29:01,440
you're doing in the proxy Rift evpn you

616
00:29:01,440 --> 00:29:04,740
name it repo obviously do whatever is

617
00:29:04,740 --> 00:29:06,539
necessary for me because I won't be

618
00:29:06,539 --> 00:29:09,240
doing it myself on the other hand if

619
00:29:09,240 --> 00:29:11,220
it's a ripple router doing it then it

620
00:29:11,220 --> 00:29:14,279
will not set the r flag because it will

621
00:29:14,279 --> 00:29:16,500
inject its own dial messages

622
00:29:16,500 --> 00:29:19,020
so it doesn't need the other router to

623
00:29:19,020 --> 00:29:24,720
do it with a 9010 if the bit is set then

624
00:29:24,720 --> 00:29:27,360
the Ripple router that accepts the

625
00:29:27,360 --> 00:29:30,120
registration sends a dial message with

626
00:29:30,120 --> 00:29:32,340
the external bit set meaning this is a

627
00:29:32,340 --> 00:29:36,240
route to the outside next slide

628
00:29:36,240 --> 00:29:38,039
so this is

629
00:29:38,039 --> 00:29:38,580
um

630
00:29:38,580 --> 00:29:40,320
what we have here

631
00:29:40,320 --> 00:29:43,140
and well that's effectively the way

632
00:29:43,140 --> 00:29:46,140
Reaper works so you can see this uh

633
00:29:46,140 --> 00:29:48,720
prefix a which is the whole ysn network

634
00:29:48,720 --> 00:29:51,480
if you like the the single subnet and

635
00:29:51,480 --> 00:29:55,799
you can see that uh Mr C and Mr D

636
00:29:55,799 --> 00:29:58,559
um tell the root that their parent is B

637
00:29:58,559 --> 00:30:01,260
and the root will know that it has this

638
00:30:01,260 --> 00:30:04,260
last Hub to to make to Rich basically

639
00:30:04,260 --> 00:30:05,580
you see on the right routing table

640
00:30:05,580 --> 00:30:09,240
that's built out of that next slide

641
00:30:09,240 --> 00:30:12,840
okay so this is nine zero one zero the

642
00:30:12,840 --> 00:30:17,220
difference is now the Hub between uh C

643
00:30:17,220 --> 00:30:19,740
and this node L that you can see this

644
00:30:19,740 --> 00:30:22,260
lfn as we call it in my sun

645
00:30:22,260 --> 00:30:25,080
um is this this device uh is effectively

646
00:30:25,080 --> 00:30:27,480
injected into Ripple by c as opposed to

647
00:30:27,480 --> 00:30:28,500
l

648
00:30:28,500 --> 00:30:30,720
okay as an external Rod the result is

649
00:30:30,720 --> 00:30:32,580
pretty much the same it's just that the

650
00:30:32,580 --> 00:30:35,580
router is aware that this host does not

651
00:30:35,580 --> 00:30:37,200
belong to repost so it cannot be

652
00:30:37,200 --> 00:30:39,360
expected to terminate the Ripple

653
00:30:39,360 --> 00:30:41,100
artifacts that we place in the packet so

654
00:30:41,100 --> 00:30:43,679
typically a tunnel from the route

655
00:30:43,679 --> 00:30:46,320
uh that is supposed to reach L will

656
00:30:46,320 --> 00:30:48,419
terminate at C that's pretty much the

657
00:30:48,419 --> 00:30:52,140
the main um difference with the usual in

658
00:30:52,140 --> 00:30:54,000
usually determine the tunnel will

659
00:30:54,000 --> 00:30:56,159
terminate the node because it's Ripple

660
00:30:56,159 --> 00:30:58,260
aware but here we don't even expect that

661
00:30:58,260 --> 00:31:01,860
the node L is capable of terminating the

662
00:31:01,860 --> 00:31:05,100
rod the tunnel so we terminate it at C

663
00:31:05,100 --> 00:31:07,500
now we have this for hosts but next

664
00:31:07,500 --> 00:31:09,919
slide please

665
00:31:10,200 --> 00:31:12,419
um we don't have it for prefix so what

666
00:31:12,419 --> 00:31:14,399
are we waiting for there are a number of

667
00:31:14,399 --> 00:31:16,080
reasons why we would do it for prefix

668
00:31:16,080 --> 00:31:19,140
not any type of prefix we never want it

669
00:31:19,140 --> 00:31:21,840
and still don't want Ripple to become a

670
00:31:21,840 --> 00:31:24,779
Transit Network because we expect tlds

671
00:31:24,779 --> 00:31:27,659
to be a very edge network but for this

672
00:31:27,659 --> 00:31:29,880
Edge node that we saw there could still

673
00:31:29,880 --> 00:31:33,899
be a an external stat Network connected

674
00:31:33,899 --> 00:31:37,260
or it could be that this Edge node is

675
00:31:37,260 --> 00:31:40,919
not only owner of a one address but it

676
00:31:40,919 --> 00:31:43,440
could be owner of a prefix for instance

677
00:31:43,440 --> 00:31:45,960
there is the story of doing 64 per host

678
00:31:45,960 --> 00:31:48,720
which is perfectly good and legal why

679
00:31:48,720 --> 00:31:52,559
would not Ripple a low for it so if we

680
00:31:52,559 --> 00:31:54,299
if we go for something like that we have

681
00:31:54,299 --> 00:31:57,899
the need to expose to the Ripple router

682
00:31:57,899 --> 00:32:00,419
that we have ownership of not just one

683
00:32:00,419 --> 00:32:02,460
address but the full prefix

684
00:32:02,460 --> 00:32:04,380
and that's what we are doing here next

685
00:32:04,380 --> 00:32:06,840
slide please

686
00:32:06,840 --> 00:32:09,779
uh so this is a reminder as before the

687
00:32:09,779 --> 00:32:12,899
triple is not only for uh host addresses

688
00:32:12,899 --> 00:32:15,899
and no threats its Ripple is a generic

689
00:32:15,899 --> 00:32:18,360
distance Vector protocol which is uh

690
00:32:18,360 --> 00:32:20,460
optimized for a number of reasons for

691
00:32:20,460 --> 00:32:23,580
power but still it can route prefixes

692
00:32:23,580 --> 00:32:26,039
just like it can route or struts and

693
00:32:26,039 --> 00:32:27,840
basically these are the kind of routing

694
00:32:27,840 --> 00:32:30,779
table that you build next slide

695
00:32:30,779 --> 00:32:32,640
and what we're missing is dependent of

696
00:32:32,640 --> 00:32:34,919
the other drawing where effectively The

697
00:32:34,919 --> 00:32:35,760
Host

698
00:32:35,760 --> 00:32:39,480
as a routing protocol independent

699
00:32:39,480 --> 00:32:43,140
agnostic way of telling the router hey I

700
00:32:43,140 --> 00:32:44,580
have this stub

701
00:32:44,580 --> 00:32:48,539
attached to me or this step that I hope

702
00:32:48,539 --> 00:32:50,880
and so this is the gap that this draft

703
00:32:50,880 --> 00:32:54,480
is attempting to solve so basically in

704
00:32:54,480 --> 00:32:56,220
this case it will be a ripple again but

705
00:32:56,220 --> 00:32:59,100
it could be any rotting protocol or any

706
00:32:59,100 --> 00:33:00,720
action and I will be presenting this

707
00:33:00,720 --> 00:33:03,960
draft at slack tomorrow because it's it

708
00:33:03,960 --> 00:33:06,240
solves the slack Prime just like it's it

709
00:33:06,240 --> 00:33:08,580
helps in the Ripple case

710
00:33:08,580 --> 00:33:11,279
snack snack snacks it's like well much

711
00:33:11,279 --> 00:33:13,940
is like these days

712
00:33:15,179 --> 00:33:18,299
so I will skip that but just just as an

713
00:33:18,299 --> 00:33:21,360
example of uh how that's that addresses

714
00:33:21,360 --> 00:33:24,360
the snack use cases basically as soon as

715
00:33:24,360 --> 00:33:27,539
a router advertised like a step writer

716
00:33:27,539 --> 00:33:30,240
advertises to a main writer that it has

717
00:33:30,240 --> 00:33:32,340
a prefix the the main router can forward

718
00:33:32,340 --> 00:33:35,640
the packets to that uh first router you

719
00:33:35,640 --> 00:33:37,799
don't need a full-fledged rotting

720
00:33:37,799 --> 00:33:39,720
protocol with distances and stuff

721
00:33:39,720 --> 00:33:44,279
because the stub is attached to a 6lr2

722
00:33:44,279 --> 00:33:48,240
so why go and participate to a bgp or no

723
00:33:48,240 --> 00:33:50,940
SPF of this world when all you're trying

724
00:33:50,940 --> 00:33:53,159
to say is hey I have this prefix it's

725
00:33:53,159 --> 00:33:54,539
attached to me you can give me the

726
00:33:54,539 --> 00:33:56,640
packet it's going to be loopless

727
00:33:56,640 --> 00:33:58,500
okay so that's that's effectively what

728
00:33:58,500 --> 00:34:01,019
you are doing next slide and and a

729
00:34:01,019 --> 00:34:02,940
symmetrical case is when the steps are

730
00:34:02,940 --> 00:34:05,640
separated from the the main link

731
00:34:05,640 --> 00:34:07,679
um that that's that can be typical of

732
00:34:07,679 --> 00:34:09,359
some some households I guess when you

733
00:34:09,359 --> 00:34:12,179
have levels and stuff same thing the the

734
00:34:12,179 --> 00:34:14,639
routers which under the steps can

735
00:34:14,639 --> 00:34:16,440
declare to the main router hey I have

736
00:34:16,440 --> 00:34:18,418
this tab and then you get reach a bit

737
00:34:18,418 --> 00:34:22,440
Rich ability back next slide

738
00:34:22,440 --> 00:34:26,760
so the interesting piece is uh okay now

739
00:34:26,760 --> 00:34:29,699
we are doing uh 8505

740
00:34:29,699 --> 00:34:33,239
for prefixes uh What Becomes of that do

741
00:34:33,239 --> 00:34:36,480
you want to do put a configuration

742
00:34:36,480 --> 00:34:39,119
and that's an interesting one because we

743
00:34:39,119 --> 00:34:40,199
could

744
00:34:40,199 --> 00:34:42,000
and we have to work on it we have to

745
00:34:42,000 --> 00:34:44,699
decide what we do but we could say say

746
00:34:44,699 --> 00:34:46,800
that we've got this slash 48 for your

747
00:34:46,800 --> 00:34:48,179
home

748
00:34:48,179 --> 00:34:50,940
could you say oh routers are free to

749
00:34:50,940 --> 00:34:52,639
autoconf

750
00:34:52,639 --> 00:34:56,520
64th instead inside that slash 48.

751
00:34:56,520 --> 00:34:59,400
because we have still this 6 lbr which

752
00:34:59,400 --> 00:35:01,619
could manage no you can do it it's a

753
00:35:01,619 --> 00:35:03,900
duplicate or you can't do it I mean we

754
00:35:03,900 --> 00:35:06,480
have all the the tools that would

755
00:35:06,480 --> 00:35:09,359
basically say Hey you have this prefix

756
00:35:09,359 --> 00:35:11,400
or you can't have this prefix

757
00:35:11,400 --> 00:35:13,859
so it's pretty cool by reusing what we

758
00:35:13,859 --> 00:35:16,740
have but instead of looking at exact

759
00:35:16,740 --> 00:35:17,760
match

760
00:35:17,760 --> 00:35:20,760
of okay that this address already owned

761
00:35:20,760 --> 00:35:23,160
exact match with this adult dress now we

762
00:35:23,160 --> 00:35:25,380
could look at is this prefix part of

763
00:35:25,380 --> 00:35:27,420
that other prefix is this other prefix

764
00:35:27,420 --> 00:35:31,140
available for auto config subnets of it

765
00:35:31,140 --> 00:35:33,900
okay so so there's a whole uh

766
00:35:33,900 --> 00:35:37,740
possibility there that we we could uh

767
00:35:37,740 --> 00:35:40,079
develop just because we we have that

768
00:35:40,079 --> 00:35:42,119
anyway and it would be an extension of

769
00:35:42,119 --> 00:35:43,800
what we do for that but by looking at

770
00:35:43,800 --> 00:35:45,420
which prefix is inside which are the

771
00:35:45,420 --> 00:35:46,380
prefix

772
00:35:46,380 --> 00:35:48,660
so so the draft doesn't do auto

773
00:35:48,660 --> 00:35:50,760
allocation or prefix a location right

774
00:35:50,760 --> 00:35:53,460
right now but that's a possibility that

775
00:35:53,460 --> 00:35:55,619
is offered to us with this draft next

776
00:35:55,619 --> 00:35:57,900
slide

777
00:35:57,900 --> 00:36:00,420
so well how that would that work but

778
00:36:00,420 --> 00:36:02,760
pretty much the same way as nine zero

779
00:36:02,760 --> 00:36:05,400
one zero works I mean the the step

780
00:36:05,400 --> 00:36:09,839
router uh advertises through ND the the

781
00:36:09,839 --> 00:36:13,859
one half reachability of the prefix

782
00:36:13,859 --> 00:36:16,740
and then the routers above will do

783
00:36:16,740 --> 00:36:18,300
whatever is necessary maybe the

784
00:36:18,300 --> 00:36:19,980
aggregate maybe they redistribute

785
00:36:19,980 --> 00:36:21,900
whatever they have to do in their own

786
00:36:21,900 --> 00:36:23,700
routing protocol and here I have the

787
00:36:23,700 --> 00:36:26,820
case of pvpn but it could be anything

788
00:36:26,820 --> 00:36:28,640
basically they will inject if they are

789
00:36:28,640 --> 00:36:31,280
flag is

790
00:36:31,280 --> 00:36:33,900
if it's set then instead of injecting a

791
00:36:33,900 --> 00:36:35,579
horse route they will inject a prefix

792
00:36:35,579 --> 00:36:38,940
rod now there is a question I presented

793
00:36:38,940 --> 00:36:42,540
that slide to ietfs ago because when we

794
00:36:42,540 --> 00:36:44,579
started this I presented it before I

795
00:36:44,579 --> 00:36:46,320
wrote the draft to see if there was

796
00:36:46,320 --> 00:36:48,420
interest the group kind of told me hey

797
00:36:48,420 --> 00:36:49,859
yes we're interested in working on that

798
00:36:49,859 --> 00:36:53,280
so I produced the draft and in my slides

799
00:36:53,280 --> 00:36:55,680
I indicated it could have been an RS and

800
00:36:55,680 --> 00:36:57,540
the other option could have become a

801
00:36:57,540 --> 00:37:02,160
stub router or option or something

802
00:37:02,160 --> 00:37:04,380
the names are not that important it

803
00:37:04,380 --> 00:37:07,020
could be cool to figure out if we want

804
00:37:07,020 --> 00:37:10,260
to use errors RNs at the moment

805
00:37:10,260 --> 00:37:13,680
to keep it very similar to 8505 it's a

806
00:37:13,680 --> 00:37:15,900
narrow option in an NS and there is just

807
00:37:15,900 --> 00:37:17,700
a prefix length that set it to the error

808
00:37:17,700 --> 00:37:19,260
option

809
00:37:19,260 --> 00:37:21,900
but if you know you guys think it's more

810
00:37:21,900 --> 00:37:23,880
relevant to call it an errors then it

811
00:37:23,880 --> 00:37:25,740
could become an errors

812
00:37:25,740 --> 00:37:28,200
whatever works for me

813
00:37:28,200 --> 00:37:30,480
next slide

814
00:37:30,480 --> 00:37:34,140
and big surprise as I introduced this

815
00:37:34,140 --> 00:37:36,960
these two bits which can say unicast

816
00:37:36,960 --> 00:37:40,200
multicast anycast now the proposal is to

817
00:37:40,200 --> 00:37:42,540
assign value 1 1 to say hey we are

818
00:37:42,540 --> 00:37:44,520
registering for a prefix and if we are

819
00:37:44,520 --> 00:37:46,619
registering for a prefix yes you have a

820
00:37:46,619 --> 00:37:49,560
prefix lag somewhere in this packet

821
00:37:49,560 --> 00:37:52,980
next slide so in the RO effectively and

822
00:37:52,980 --> 00:37:56,339
this is not change much this is this

823
00:37:56,339 --> 00:37:59,700
this just shows that same asset 505 with

824
00:37:59,700 --> 00:38:01,680
uh eight nine two eight eight nine two

825
00:38:01,680 --> 00:38:03,420
eight is the way we do sound in that

826
00:38:03,420 --> 00:38:04,260
world

827
00:38:04,260 --> 00:38:06,300
that basically says hey when you

828
00:38:06,300 --> 00:38:08,760
register an address if this route

829
00:38:08,760 --> 00:38:12,000
ownership verification verifier is a

830
00:38:12,000 --> 00:38:14,579
crypto ID then you can be challenged for

831
00:38:14,579 --> 00:38:16,260
running it so so if the same address

832
00:38:16,260 --> 00:38:19,200
shows up somewhere else the routers will

833
00:38:19,200 --> 00:38:21,359
challenge the somewhere else to see if

834
00:38:21,359 --> 00:38:25,680
this token is can be validated if the

835
00:38:25,680 --> 00:38:27,480
host can validate the token it means he

836
00:38:27,480 --> 00:38:28,980
has the private address that goes with

837
00:38:28,980 --> 00:38:31,560
it so it can only address that's

838
00:38:31,560 --> 00:38:34,020
basically the way we avoid stealing

839
00:38:34,020 --> 00:38:36,180
addresses well we can do the exact same

840
00:38:36,180 --> 00:38:38,339
thing for prefixes if the prefixes are

841
00:38:38,339 --> 00:38:40,560
owned by a single node

842
00:38:40,560 --> 00:38:43,619
or if the different owners share the

843
00:38:43,619 --> 00:38:44,640
same key

844
00:38:44,640 --> 00:38:47,099
then it's possible to ensure that a

845
00:38:47,099 --> 00:38:49,200
route can only be injected in the

846
00:38:49,200 --> 00:38:51,900
routing fabric by the real owners

847
00:38:51,900 --> 00:38:54,480
okay so the same zero conf zero trust

848
00:38:54,480 --> 00:38:55,859
I'm sorry the same zero trust

849
00:38:55,859 --> 00:38:58,140
capabilities we have for host now

850
00:38:58,140 --> 00:39:00,839
becomes available for prefixes as well

851
00:39:00,839 --> 00:39:03,500
next slide

852
00:39:03,960 --> 00:39:07,380
and this is just a trick on how this

853
00:39:07,380 --> 00:39:09,540
could be used effectively for ipv4

854
00:39:09,540 --> 00:39:11,820
prefixes

855
00:39:11,820 --> 00:39:16,320
um by uh putting them inside slash 96.

856
00:39:16,320 --> 00:39:18,540
same thing you would you would provision

857
00:39:18,540 --> 00:39:21,839
a certain prefix and and then uh okay

858
00:39:21,839 --> 00:39:24,240
the slash 96 and encapsulate the the 10

859
00:39:24,240 --> 00:39:27,540
dot or whatever uh for certain tenants

860
00:39:27,540 --> 00:39:30,660
so this is more of a data center type of

861
00:39:30,660 --> 00:39:33,300
use case like list by VPN

862
00:39:33,300 --> 00:39:35,700
next slide

863
00:39:35,700 --> 00:39:37,980
okay now so it's just a beginning there

864
00:39:37,980 --> 00:39:41,339
are tons of things we could do

865
00:39:41,339 --> 00:39:42,300
um

866
00:39:42,300 --> 00:39:45,740
would we want to to

867
00:39:45,740 --> 00:39:48,000
add a

868
00:39:48,000 --> 00:39:51,300
to to make it an arrest uh make it an NS

869
00:39:51,300 --> 00:39:54,359
would we like to to

870
00:39:54,359 --> 00:39:58,400
extend the proof of ownership per ifc9

871
00:39:58,400 --> 00:40:02,880
8928 which is not done yet in this draft

872
00:40:02,880 --> 00:40:04,980
um more interesting since we are

873
00:40:04,980 --> 00:40:06,540
advertising prefixes and we may

874
00:40:06,540 --> 00:40:08,240
advertise them through different places

875
00:40:08,240 --> 00:40:10,859
do we want to influence load balancing

876
00:40:10,859 --> 00:40:12,540
again that's more of a data center type

877
00:40:12,540 --> 00:40:14,099
of use case

878
00:40:14,099 --> 00:40:17,040
and then again it's not a distance we're

879
00:40:17,040 --> 00:40:19,079
talking about right it's it's we're

880
00:40:19,079 --> 00:40:21,000
talking about weights

881
00:40:21,000 --> 00:40:23,099
we are not doing a routing protocol we

882
00:40:23,099 --> 00:40:24,839
are still in NS space

883
00:40:24,839 --> 00:40:27,000
but in NS you have a pre-filled router

884
00:40:27,000 --> 00:40:28,380
for you have this router preference

885
00:40:28,380 --> 00:40:30,300
thing right same thing when we inject

886
00:40:30,300 --> 00:40:32,700
the prefix we could say hey if I have

887
00:40:32,700 --> 00:40:34,980
several parents to whom I want to

888
00:40:34,980 --> 00:40:37,200
advertise this prefix I could say

889
00:40:37,200 --> 00:40:39,000
I want more traffic through this parent

890
00:40:39,000 --> 00:40:40,500
and through that one for instance

891
00:40:40,500 --> 00:40:42,359
because I don't know I mean that's the

892
00:40:42,359 --> 00:40:45,180
way balance Mannix

893
00:40:45,180 --> 00:40:48,240
and well that's pretty much it I just

894
00:40:48,240 --> 00:40:49,980
want to to to

895
00:40:49,980 --> 00:40:51,900
be very explicit that this is a

896
00:40:51,900 --> 00:40:53,460
beginning and there is a lot of power

897
00:40:53,460 --> 00:40:56,339
that we could develop with decider it's

898
00:40:56,339 --> 00:40:59,339
so so don't take for granted the fact

899
00:40:59,339 --> 00:41:01,980
that it's an NS uh or that the

900
00:41:01,980 --> 00:41:04,500
capabilities that are disclosed in zero

901
00:41:04,500 --> 00:41:06,660
zero are very limited there are tons of

902
00:41:06,660 --> 00:41:08,220
things we could be doing

903
00:41:08,220 --> 00:41:09,960
but then again it's not a rotting

904
00:41:09,960 --> 00:41:12,180
protocol it's just advertise the one how

905
00:41:12,180 --> 00:41:15,300
preachability it will stop

906
00:41:15,300 --> 00:41:18,240
and that's pretty much it

907
00:41:18,240 --> 00:41:20,640
so yes I would like to to see

908
00:41:20,640 --> 00:41:22,740
discussions on where we want to go with

909
00:41:22,740 --> 00:41:25,440
this I mean if we go for adoption uh

910
00:41:25,440 --> 00:41:28,859
would we would we care for doing an SRS

911
00:41:28,859 --> 00:41:31,440
um do we want to call the ero with you

912
00:41:31,440 --> 00:41:34,740
know P equals three uh stab registration

913
00:41:34,740 --> 00:41:36,599
option

914
00:41:36,599 --> 00:41:37,200
um

915
00:41:37,200 --> 00:41:40,560
do you want support ipv4 prefixes using

916
00:41:40,560 --> 00:41:43,800
search 96 do we want to extend the zero

917
00:41:43,800 --> 00:41:47,700
trust that we have with uh 8928 in all

918
00:41:47,700 --> 00:41:50,359
these questions

919
00:41:50,700 --> 00:41:53,160
and that's pretty much it okay thank you

920
00:41:53,160 --> 00:41:54,960
Pascal so are there any comments or

921
00:41:54,960 --> 00:41:56,280
questions

922
00:41:56,280 --> 00:41:57,480
I mean

923
00:41:57,480 --> 00:41:59,579
I was on Courage last time I mean 12

924
00:41:59,579 --> 00:42:02,339
years ago to do this work are you still

925
00:42:02,339 --> 00:42:04,619
kind of supportive of this thing this

926
00:42:04,619 --> 00:42:05,760
happened

927
00:42:05,760 --> 00:42:08,460
yeah okay

928
00:42:08,460 --> 00:42:10,800
yeah so now since there is a written

929
00:42:10,800 --> 00:42:12,660
draft now it's a good moment to actually

930
00:42:12,660 --> 00:42:15,240
read it and provide feedback so we

931
00:42:15,240 --> 00:42:17,099
encourage the working group to

932
00:42:17,099 --> 00:42:19,500
to read the document and provide

933
00:42:19,500 --> 00:42:20,820
comments

934
00:42:20,820 --> 00:42:24,240
thank you so then the next

935
00:42:24,240 --> 00:42:26,760
set of presentations will be the ones

936
00:42:26,760 --> 00:42:28,980
related with past aware semantic

937
00:42:28,980 --> 00:42:31,460
addressing

938
00:42:35,339 --> 00:42:38,359
I'm requesting for sure

939
00:42:38,359 --> 00:42:42,319
I'm granting you

940
00:42:48,480 --> 00:42:53,700
should be there yeah okay

941
00:42:54,119 --> 00:42:56,060
foreign

942
00:42:56,060 --> 00:42:58,980
Luigi I'm gonna give you an update on

943
00:42:58,980 --> 00:43:01,040
what was named before

944
00:43:01,040 --> 00:43:04,680
NSA the native short addressing

945
00:43:04,680 --> 00:43:08,099
which is now called password semantic

946
00:43:08,099 --> 00:43:09,119
addressing

947
00:43:09,119 --> 00:43:12,119
smaller meaningful as a name a model

948
00:43:12,119 --> 00:43:15,900
focused on the real content of the real

949
00:43:15,900 --> 00:43:19,260
aim of this work

950
00:43:19,260 --> 00:43:21,599
this is rapidly the the

951
00:43:21,599 --> 00:43:24,420
the history how the the draft day is

952
00:43:24,420 --> 00:43:26,880
advancing we are back again to zero zero

953
00:43:26,880 --> 00:43:30,780
because we changed the name okay uh we

954
00:43:30,780 --> 00:43:33,300
have beside the name we have to welcome

955
00:43:33,300 --> 00:43:35,940
two more quarters one is Pascal that is

956
00:43:35,940 --> 00:43:38,700
a great job in helping us we'll go over

957
00:43:38,700 --> 00:43:42,180
the his contribution Kieran as well all

958
00:43:42,180 --> 00:43:44,579
this contribution actually came up from

959
00:43:44,579 --> 00:43:47,099
the nice discussion that we had during

960
00:43:47,099 --> 00:43:49,260
the the working group called for our

961
00:43:49,260 --> 00:43:52,079
adoption that I mean the document didn't

962
00:43:52,079 --> 00:43:55,079
make through but actually all in all we

963
00:43:55,079 --> 00:43:59,400
did good progress to be honest so that's

964
00:43:59,400 --> 00:44:02,760
wonderful uh from my perspective

965
00:44:02,760 --> 00:44:04,619
uh

966
00:44:04,619 --> 00:44:07,859
the outcome of the call for adoption was

967
00:44:07,859 --> 00:44:10,280
the the fact that we need some clarity

968
00:44:10,280 --> 00:44:13,740
clarification sorry the chance did a a

969
00:44:13,740 --> 00:44:16,619
good summary of all this discussion that

970
00:44:16,619 --> 00:44:19,319
we had on the mailing list was a quite a

971
00:44:19,319 --> 00:44:21,720
long discussion I think in the last

972
00:44:21,720 --> 00:44:24,420
year or so was the longest if I dare to

973
00:44:24,420 --> 00:44:28,079
say but 69 emails oh yeah it was pretty

974
00:44:28,079 --> 00:44:30,020
good I would say

975
00:44:30,020 --> 00:44:33,480
so and as I said before uh Kira was

976
00:44:33,480 --> 00:44:35,819
suggesting a new use case

977
00:44:35,819 --> 00:44:38,819
and we had discussion on that and also

978
00:44:38,819 --> 00:44:42,599
uh Pascal in one of the latest email was

979
00:44:42,599 --> 00:44:46,200
suggesting to use the routing header as

980
00:44:46,200 --> 00:44:48,960
a way to move forward okay and go over

981
00:44:48,960 --> 00:44:50,520
what we

982
00:44:50,520 --> 00:44:51,300
um

983
00:44:51,300 --> 00:44:53,520
the different points that were discussed

984
00:44:53,520 --> 00:44:56,400
right so

985
00:44:56,400 --> 00:44:59,700
yeah the main changes beyond the name in

986
00:44:59,700 --> 00:45:02,180
the in the document is the fact that uh

987
00:45:02,180 --> 00:45:05,880
uh we have now an extensive use case

988
00:45:05,880 --> 00:45:11,220
section which better explains uh what

989
00:45:11,220 --> 00:45:13,339
what where we see

990
00:45:13,339 --> 00:45:17,460
this solution to apply because it's not

991
00:45:17,460 --> 00:45:20,460
and should not be considered a general

992
00:45:20,460 --> 00:45:23,400
solution that you you can use in all the

993
00:45:23,400 --> 00:45:25,800
possible six slow scenarios okay there

994
00:45:25,800 --> 00:45:29,220
are specific uh scenarios that were it

995
00:45:29,220 --> 00:45:33,060
is very reasonable to be used okay

996
00:45:33,060 --> 00:45:35,520
and we have a tighter connection with

997
00:45:35,520 --> 00:45:39,780
the uh six slow use cases uh draft and

998
00:45:39,780 --> 00:45:42,240
then there is uh the new header format

999
00:45:42,240 --> 00:45:44,940
so the use of the six law routing header

1000
00:45:44,940 --> 00:45:46,460
in order to

1001
00:45:46,460 --> 00:45:50,940
encapsulate uh the the packet and this

1002
00:45:50,940 --> 00:45:52,920
is very very meaningful because it's

1003
00:45:52,920 --> 00:45:55,560
more in line with the general solution

1004
00:45:55,560 --> 00:45:58,859
that are designed in this group right

1005
00:45:58,859 --> 00:46:01,800
want to point out that actually the

1006
00:46:01,800 --> 00:46:04,619
allocation function which just to recall

1007
00:46:04,619 --> 00:46:08,760
you is the way we assign addresses in

1008
00:46:08,760 --> 00:46:11,460
the topology and at the end the

1009
00:46:11,460 --> 00:46:13,440
forwarding algorithm so the way you

1010
00:46:13,440 --> 00:46:16,200
decide where to send the packet that

1011
00:46:16,200 --> 00:46:18,839
piece of work remains on on changed that

1012
00:46:18,839 --> 00:46:21,960
is pretty stable it's just the way where

1013
00:46:21,960 --> 00:46:24,300
we use it in which use cases and

1014
00:46:24,300 --> 00:46:28,380
actually how we encode uh uh our pockets

1015
00:46:28,380 --> 00:46:30,240
okay

1016
00:46:30,240 --> 00:46:34,440
as I said we try to to have a to type

1017
00:46:34,440 --> 00:46:35,940
better

1018
00:46:35,940 --> 00:46:38,339
um the work with the six slow use cases

1019
00:46:38,339 --> 00:46:40,859
this is one of the the points that the

1020
00:46:40,859 --> 00:46:43,800
chairs put in the uh summer email

1021
00:46:43,800 --> 00:46:46,560
closing the call for adoption the the

1022
00:46:46,560 --> 00:46:48,720
clarification of whether we should use

1023
00:46:48,720 --> 00:46:51,079
this uh the main

1024
00:46:51,079 --> 00:46:54,660
use case is obviously related to PLC

1025
00:46:54,660 --> 00:46:58,619
where we have already uh three uh

1026
00:46:58,619 --> 00:47:01,260
topologies which is also the logical

1027
00:47:01,260 --> 00:47:05,180
topology that the passer X NSA

1028
00:47:05,180 --> 00:47:08,099
tried to build in order to forward the

1029
00:47:08,099 --> 00:47:11,700
packets and obviously the uh if you do

1030
00:47:11,700 --> 00:47:13,380
this stateless approach in order to

1031
00:47:13,380 --> 00:47:16,500
forward you are sensible to Mobility so

1032
00:47:16,500 --> 00:47:17,579
we

1033
00:47:17,579 --> 00:47:20,400
I mean PLC there are no Mobility

1034
00:47:20,400 --> 00:47:22,800
requirements there are other scenarios

1035
00:47:22,800 --> 00:47:24,839
who where the mobility is not a

1036
00:47:24,839 --> 00:47:27,300
requirement but then you have to build

1037
00:47:27,300 --> 00:47:30,240
the tree topology which may or may not

1038
00:47:30,240 --> 00:47:34,980
fit uh we can claim the star topologies

1039
00:47:34,980 --> 00:47:37,980
kind of a tree but this is a discussion

1040
00:47:37,980 --> 00:47:40,859
for another uh

1041
00:47:40,859 --> 00:47:43,140
so

1042
00:47:43,140 --> 00:47:46,500
I forgot to put the the animation here

1043
00:47:46,500 --> 00:47:48,599
actually the idea was to give you in one

1044
00:47:48,599 --> 00:47:53,400
slide a snapshot of the four uh main use

1045
00:47:53,400 --> 00:47:55,200
cases that we detailed in the document

1046
00:47:55,200 --> 00:47:58,200
basically this Market smart home data

1047
00:47:58,200 --> 00:47:59,880
center monitoring and we when we say

1048
00:47:59,880 --> 00:48:02,819
mono monitoring is not about the the

1049
00:48:02,819 --> 00:48:05,700
data traffic itself is monitoring of the

1050
00:48:05,700 --> 00:48:09,000
the electrical appliances itself is is a

1051
00:48:09,000 --> 00:48:10,740
different thing so basically it's based

1052
00:48:10,740 --> 00:48:14,640
on PLC again uh that we where we can use

1053
00:48:14,640 --> 00:48:18,000
Passa and the the use case that Kiran

1054
00:48:18,000 --> 00:48:19,980
added about the industrial operation

1055
00:48:19,980 --> 00:48:22,640
technology networks which is

1056
00:48:22,640 --> 00:48:26,640
uh uh let's say the the data based on

1057
00:48:26,640 --> 00:48:29,280
different layer to technology from which

1058
00:48:29,280 --> 00:48:32,640
you cannot necessarily natively

1059
00:48:32,640 --> 00:48:35,339
add up all the the the full six law

1060
00:48:35,339 --> 00:48:37,440
protocol stack program but you can have

1061
00:48:37,440 --> 00:48:39,300
a software update that allows you to

1062
00:48:39,300 --> 00:48:41,760
have stateless forwarding and yeah the

1063
00:48:41,760 --> 00:48:44,520
again this pasta solution seems to fit

1064
00:48:44,520 --> 00:48:47,040
well okay

1065
00:48:47,040 --> 00:48:49,560
uh I invite you to really go over the

1066
00:48:49,560 --> 00:48:53,220
use cases and see if this solves all the

1067
00:48:53,220 --> 00:48:56,220
the the the clarification requested that

1068
00:48:56,220 --> 00:48:58,560
we received in an email and also

1069
00:48:58,560 --> 00:49:01,920
suggested by the HHS

1070
00:49:01,920 --> 00:49:06,480
so as for the uh encapsulation format

1071
00:49:06,480 --> 00:49:09,180
itself uh what we have is now to use the

1072
00:49:09,180 --> 00:49:12,540
60 pound routing header I suggested us

1073
00:49:12,540 --> 00:49:16,500
Define it in RFC 8138 so we will have

1074
00:49:16,500 --> 00:49:19,200
page one this

1075
00:49:19,200 --> 00:49:21,180
um routing header and then the normal

1076
00:49:21,180 --> 00:49:24,540
low pan iphc so basically the IPv6

1077
00:49:24,540 --> 00:49:28,680
compressed header according to 60 to 82.

1078
00:49:28,680 --> 00:49:33,119
okay no special uh treatment there

1079
00:49:33,119 --> 00:49:36,440
what we do is actually once you build

1080
00:49:36,440 --> 00:49:39,599
the what we call the passer a rich

1081
00:49:39,599 --> 00:49:42,300
header is um

1082
00:49:42,300 --> 00:49:45,540
well the format is pretty simple we you

1083
00:49:45,540 --> 00:49:47,700
have to type that allows you to

1084
00:49:47,700 --> 00:49:49,680
understand which kind of routing header

1085
00:49:49,680 --> 00:49:50,940
you are using

1086
00:49:50,940 --> 00:49:53,520
then we have two bits that allows us to

1087
00:49:53,520 --> 00:49:55,980
to understand what kind of address you

1088
00:49:55,980 --> 00:49:58,740
have in this header the size of the

1089
00:49:58,740 --> 00:50:00,599
address and then we have a set of quad

1090
00:50:00,599 --> 00:50:03,300
squads so just two octets so it's a

1091
00:50:03,300 --> 00:50:07,560
couple of that's like uh we we cut the

1092
00:50:07,560 --> 00:50:11,339
IPv6 addresses with the columns right

1093
00:50:11,339 --> 00:50:14,880
so the idea is basically when we add

1094
00:50:14,880 --> 00:50:17,220
this header we take the destination

1095
00:50:17,220 --> 00:50:20,819
address from the iphc and put it there

1096
00:50:20,819 --> 00:50:23,220
and we do you don't need to to put in

1097
00:50:23,220 --> 00:50:26,579
the iphc you can delete it uh at once so

1098
00:50:26,579 --> 00:50:29,760
that we you don't need to have duplicate

1099
00:50:29,760 --> 00:50:31,740
and then each and every node what does

1100
00:50:31,740 --> 00:50:34,140
it's it looks at this header and it

1101
00:50:34,140 --> 00:50:37,079
takes the forwarding decision according

1102
00:50:37,079 --> 00:50:39,119
to the rules

1103
00:50:39,119 --> 00:50:39,900
um

1104
00:50:39,900 --> 00:50:42,720
uh that were all already there now and

1105
00:50:42,720 --> 00:50:45,780
this this piece of content that update

1106
00:50:45,780 --> 00:50:49,020
is something we we discussed at length

1107
00:50:49,020 --> 00:50:51,660
by email with Pascal I thank you again

1108
00:50:51,660 --> 00:50:54,240
for the idea and the help the people and

1109
00:50:54,240 --> 00:50:58,140
the effort to put in this document

1110
00:50:58,140 --> 00:51:01,440
so basically uh how these things all

1111
00:51:01,440 --> 00:51:03,240
works together

1112
00:51:03,240 --> 00:51:03,960
um

1113
00:51:03,960 --> 00:51:05,940
the password domain just does compress

1114
00:51:05,940 --> 00:51:09,059
and compress uh the the the packets

1115
00:51:09,059 --> 00:51:11,460
according the the specification in this

1116
00:51:11,460 --> 00:51:13,140
document

1117
00:51:13,140 --> 00:51:13,800
um

1118
00:51:13,800 --> 00:51:16,680
the prefix of the parcel domain

1119
00:51:16,680 --> 00:51:18,720
represent the context that we use to

1120
00:51:18,720 --> 00:51:22,200
compress according to 6282 so basically

1121
00:51:22,200 --> 00:51:25,319
you can shrink the the big IPv6 address

1122
00:51:25,319 --> 00:51:28,460
at least to a slash

1123
00:51:28,460 --> 00:51:32,640
to only 64 bits okay according to the

1124
00:51:32,640 --> 00:51:34,680
size of the the pass address you can do

1125
00:51:34,680 --> 00:51:38,040
even more if you if you wish on the way

1126
00:51:38,040 --> 00:51:41,700
back the the document describes how to

1127
00:51:41,700 --> 00:51:44,640
take the pass address and rebuild the

1128
00:51:44,640 --> 00:51:47,220
full IPv6 or just just the correlations

1129
00:51:47,220 --> 00:51:49,020
operation that is always already

1130
00:51:49,020 --> 00:51:52,319
described in 8138

1131
00:51:52,319 --> 00:51:56,880
Okay so when we send a packet we

1132
00:51:56,880 --> 00:52:01,400
compress uh uh according to 60

1133
00:52:01,400 --> 00:52:05,280
6282 okay uh based on the context and

1134
00:52:05,280 --> 00:52:07,200
then as I said we take the destination

1135
00:52:07,200 --> 00:52:11,400
address we put in the uh RH we lead it

1136
00:52:11,400 --> 00:52:14,640
from my phc and we said well we set the

1137
00:52:14,640 --> 00:52:17,400
size accordingly etc etc and we send the

1138
00:52:17,400 --> 00:52:18,480
packet

1139
00:52:18,480 --> 00:52:21,180
the receiving side what we do is

1140
00:52:21,180 --> 00:52:23,760
basically we take

1141
00:52:23,760 --> 00:52:29,220
the the address uh in the uh RH header

1142
00:52:29,220 --> 00:52:31,800
and we use it as a IID and we we can

1143
00:52:31,800 --> 00:52:34,800
rebuild the full like pv6 uh address

1144
00:52:34,800 --> 00:52:38,940
according to 8138 that is nothing really

1145
00:52:38,940 --> 00:52:42,559
special and this is the the

1146
00:52:42,559 --> 00:52:44,819
intra-domain communication in a passer

1147
00:52:44,819 --> 00:52:47,040
domain okay

1148
00:52:47,040 --> 00:52:49,760
from the the for external communication

1149
00:52:49,760 --> 00:52:53,220
uh things are a little bit different but

1150
00:52:53,220 --> 00:52:55,200
different because we need to send

1151
00:52:55,200 --> 00:52:56,160
outside

1152
00:52:56,160 --> 00:52:59,099
so this is something that we

1153
00:52:59,099 --> 00:53:01,260
I wouldn't say we're still working on we

1154
00:53:01,260 --> 00:53:02,880
we have to better the finance and the

1155
00:53:02,880 --> 00:53:04,680
document we are discussing again with

1156
00:53:04,680 --> 00:53:06,839
with pascalte but the idea is pretty

1157
00:53:06,839 --> 00:53:09,960
simple if we have to send outside

1158
00:53:09,960 --> 00:53:12,119
what we need to do is just send up to

1159
00:53:12,119 --> 00:53:15,780
the root nothing more right and when we

1160
00:53:15,780 --> 00:53:18,420
receive something from the outside the

1161
00:53:18,420 --> 00:53:23,400
root will will create the uh RH header

1162
00:53:23,400 --> 00:53:27,619
with the pass address and this becomes a

1163
00:53:27,619 --> 00:53:30,900
intra-domain communication and will be

1164
00:53:30,900 --> 00:53:34,260
delivered to the offly to the right

1165
00:53:34,260 --> 00:53:36,300
destination okay

1166
00:53:36,300 --> 00:53:41,160
so all in all this is uh the the the the

1167
00:53:41,160 --> 00:53:44,280
updates on this specific piece of work

1168
00:53:44,280 --> 00:53:47,579
with different names so if you have any

1169
00:53:47,579 --> 00:53:50,960
question or comments on this

1170
00:53:53,160 --> 00:53:58,339
okay so there's two people in the queue

1171
00:54:03,180 --> 00:54:04,920
okay uh thank you for your cool

1172
00:54:04,920 --> 00:54:07,140
presentation and thank you for your

1173
00:54:07,140 --> 00:54:09,960
report sixth row use case left I think

1174
00:54:09,960 --> 00:54:13,260
that sixth row you skate draft is a kind

1175
00:54:13,260 --> 00:54:16,500
of the information to other documents so

1176
00:54:16,500 --> 00:54:19,020
it is very good so I'm wondering so you

1177
00:54:19,020 --> 00:54:23,640
refer to PLC cases the PLC the PLC can

1178
00:54:23,640 --> 00:54:28,400
be utilized in uh G3 PLC or electricity

1179
00:54:28,400 --> 00:54:32,280
ucg so I'm wondering your idea is is

1180
00:54:32,280 --> 00:54:34,980
there any practical reference site to

1181
00:54:34,980 --> 00:54:37,980
use or do you have any plan to utilize

1182
00:54:37,980 --> 00:54:41,339
your uh this uh can you repeat the

1183
00:54:41,339 --> 00:54:43,640
question I didn't get it I apologize

1184
00:54:43,640 --> 00:54:46,740
what is exactly the point with PLC yes

1185
00:54:46,740 --> 00:54:50,640
in the sexual use case trap the PLC is

1186
00:54:50,640 --> 00:54:54,599
used for G3 PLC or the electricity

1187
00:54:54,599 --> 00:54:56,720
it is the Practical

1188
00:54:56,720 --> 00:55:02,700
site yeah so you are the pssa do we have

1189
00:55:02,700 --> 00:55:06,300
any reference site or do we have any the

1190
00:55:06,300 --> 00:55:09,420
plan to utilize your idea

1191
00:55:09,420 --> 00:55:11,700
not specifically I mean

1192
00:55:11,700 --> 00:55:13,619
no

1193
00:55:13,619 --> 00:55:16,440
we need to do to look in more details to

1194
00:55:16,440 --> 00:55:20,280
the to use that okay but yeah good point

1195
00:55:20,280 --> 00:55:24,920
Thank you thank you for bringing this up

1196
00:55:25,920 --> 00:55:29,170
[Music]

1197
00:55:31,040 --> 00:55:34,740
just a couple of quick question or about

1198
00:55:34,740 --> 00:55:36,020
a quick note

1199
00:55:36,020 --> 00:55:39,480
uh I wouldn't rule out or I would ask

1200
00:55:39,480 --> 00:55:43,200
you to state in document why you did

1201
00:55:43,200 --> 00:55:46,200
rule out all kind of hero compression

1202
00:55:46,200 --> 00:55:49,160
other than iphc for example for example

1203
00:55:49,160 --> 00:55:51,480
GHC or chic

1204
00:55:51,480 --> 00:55:53,880
uh I know that Rover brief for the

1205
00:55:53,880 --> 00:55:56,940
document it is more important to ex to

1206
00:55:56,940 --> 00:55:58,680
explain how

1207
00:55:58,680 --> 00:56:02,059
for iphc is uh

1208
00:56:02,059 --> 00:56:04,980
working the address expansion and

1209
00:56:04,980 --> 00:56:07,440
compression but there are other methods

1210
00:56:07,440 --> 00:56:08,599
as well

1211
00:56:08,599 --> 00:56:12,260
and the second is a suggestion for

1212
00:56:12,260 --> 00:56:14,880
addresses that are going outside of the

1213
00:56:14,880 --> 00:56:18,800
network I found myself very comfortable

1214
00:56:18,800 --> 00:56:23,540
with stateful compression for a phc that

1215
00:56:23,540 --> 00:56:27,540
sure enough it requires also to have a

1216
00:56:27,540 --> 00:56:29,880
distribution for the contextness but

1217
00:56:29,880 --> 00:56:31,740
it's very useful

1218
00:56:31,740 --> 00:56:35,099
uh just uh just because your scenario

1219
00:56:35,099 --> 00:56:37,140
seems to be

1220
00:56:37,140 --> 00:56:40,380
just fitting the idea that the outside

1221
00:56:40,380 --> 00:56:42,540
addresses or whether the addresses

1222
00:56:42,540 --> 00:56:47,779
toward the internet are just a handful

1223
00:56:48,059 --> 00:56:49,559
yeah

1224
00:56:49,559 --> 00:56:53,220
but I I agree on the second uh uh

1225
00:56:53,220 --> 00:56:55,140
comments that you did about the external

1226
00:56:55,140 --> 00:56:57,359
communication about the the first part

1227
00:56:57,359 --> 00:57:00,180
uh the first comment that you said are

1228
00:57:00,180 --> 00:57:02,520
we ruling out something

1229
00:57:02,520 --> 00:57:06,780
and uh let's say that we did not include

1230
00:57:06,780 --> 00:57:10,619
this something in this document but this

1231
00:57:10,619 --> 00:57:12,059
is my personal point of view this is

1232
00:57:12,059 --> 00:57:13,500
something to discuss also with the other

1233
00:57:13,500 --> 00:57:15,420
quarters and with you guys the working

1234
00:57:15,420 --> 00:57:18,540
Loop but uh uh uh we we don't

1235
00:57:18,540 --> 00:57:21,599
necessarily rule out other form or

1236
00:57:21,599 --> 00:57:23,880
compressions we maybe need other

1237
00:57:23,880 --> 00:57:26,400
specifications at that side

1238
00:57:26,400 --> 00:57:29,160
yeah it's not you it was just a point

1239
00:57:29,160 --> 00:57:34,680
that in this case good but you will have

1240
00:57:34,680 --> 00:57:39,618
to stay that the aphc is an example

1241
00:57:46,640 --> 00:57:50,339
in the document uh from the original one

1242
00:57:50,339 --> 00:57:52,020
let's say there was also some kind of

1243
00:57:52,020 --> 00:57:53,760
optimization in the way you treat the

1244
00:57:53,760 --> 00:57:57,359
the addresses that are external

1245
00:57:57,359 --> 00:57:59,220
and as I just said these are

1246
00:57:59,220 --> 00:58:01,920
optimization we don't need in the basic

1247
00:58:01,920 --> 00:58:03,599
specification but something we cannot

1248
00:58:03,599 --> 00:58:05,760
optionally if we wish

1249
00:58:05,760 --> 00:58:08,880
and the the group is interested but the

1250
00:58:08,880 --> 00:58:10,640
basic set of of

1251
00:58:10,640 --> 00:58:13,500
specification that we are converging on

1252
00:58:13,500 --> 00:58:16,760
looks okay

1253
00:58:16,800 --> 00:58:19,280
thanks

1254
00:58:19,740 --> 00:58:22,559
hello here

1255
00:58:22,559 --> 00:58:24,180
um yeah I was looking at one of the use

1256
00:58:24,180 --> 00:58:26,520
cases that you introduced so there's a

1257
00:58:26,520 --> 00:58:29,579
smart home use case and again about the

1258
00:58:29,579 --> 00:58:31,619
PLC there

1259
00:58:31,619 --> 00:58:32,760
so

1260
00:58:32,760 --> 00:58:34,800
um yeah what I was thinking if you look

1261
00:58:34,800 --> 00:58:37,260
at that topology then typically in a

1262
00:58:37,260 --> 00:58:40,020
smart home there's also something like

1263
00:58:40,020 --> 00:58:42,359
or what we call sometimes infrastructure

1264
00:58:42,359 --> 00:58:45,599
link so that's like Wi-Fi or ethernet

1265
00:58:45,599 --> 00:58:48,619
link that binds everything together

1266
00:58:48,619 --> 00:58:51,119
so that yeah

1267
00:58:51,119 --> 00:58:53,160
that I suppose we have that there and

1268
00:58:53,160 --> 00:58:54,900
then there are a number of PLC gateways

1269
00:58:54,900 --> 00:58:56,880
and those you can consider as a stop

1270
00:58:56,880 --> 00:58:59,720
Network so that was called introduced

1271
00:58:59,720 --> 00:59:02,940
and actually it looks to me like hplc

1272
00:59:02,940 --> 00:59:05,460
network is kind of a flat Network

1273
00:59:05,460 --> 00:59:08,460
headers one power line connecting all

1274
00:59:08,460 --> 00:59:09,960
the devices so

1275
00:59:09,960 --> 00:59:12,780
I don't really see the need for her well

1276
00:59:12,780 --> 00:59:15,059
some kind of hierarchical addressing so

1277
00:59:15,059 --> 00:59:17,460
that's not true actually because in the

1278
00:59:17,460 --> 00:59:20,040
uh in the different use cases and we

1279
00:59:20,040 --> 00:59:21,119
have

1280
00:59:21,119 --> 00:59:24,980
ASCII art in the document that uh

1281
00:59:24,980 --> 00:59:28,140
tries to explain what you there is also

1282
00:59:28,140 --> 00:59:29,940
in the text is the fact that at the end

1283
00:59:29,940 --> 00:59:32,400
of the day you have some hierarchy in

1284
00:59:32,400 --> 00:59:35,099
your privacy Network we have because one

1285
00:59:35,099 --> 00:59:37,500
thing is the end device which could be

1286
00:59:37,500 --> 00:59:40,500
uh something big or some something small

1287
00:59:40,500 --> 00:59:43,799
but all the the connecting uh

1288
00:59:43,799 --> 00:59:45,359
infrastructure

1289
00:59:45,359 --> 00:59:49,020
as small as a smart home might have some

1290
00:59:49,020 --> 00:59:52,319
hierarchy limited you don't have 3 000

1291
00:59:52,319 --> 00:59:55,200
levels but there is not necessarily

1292
00:59:55,200 --> 00:59:56,940
completely flat

1293
00:59:56,940 --> 00:59:59,579
okay so you mean that uh if you could

1294
00:59:59,579 --> 01:00:02,099
have a look do the use cases section and

1295
01:00:02,099 --> 01:00:04,440
send us all the feedback which you have

1296
01:00:04,440 --> 01:00:06,780
that would be great yeah I think okay

1297
01:00:06,780 --> 01:00:08,400
then it's good maybe to update the

1298
01:00:08,400 --> 01:00:10,500
picture also so if the PLC has some

1299
01:00:10,500 --> 01:00:11,819
hierarchy then I kind of understand

1300
01:00:11,819 --> 01:00:13,260
maybe better

1301
01:00:13,260 --> 01:00:15,599
yeah how that how that fits but

1302
01:00:15,599 --> 01:00:17,339
um overall the use case doesn't doesn't

1303
01:00:17,339 --> 01:00:19,619
look like the smart home that's now

1304
01:00:19,619 --> 01:00:22,680
usually introduced today where lots of

1305
01:00:22,680 --> 01:00:24,480
devices are Wireless like your lights

1306
01:00:24,480 --> 01:00:28,500
and doorbell yeah wireless networks

1307
01:00:28,500 --> 01:00:30,660
today excellent point and this is

1308
01:00:30,660 --> 01:00:32,599
related to the next presentation because

1309
01:00:32,599 --> 01:00:35,299
one thing that you have in this solution

1310
01:00:35,299 --> 01:00:39,119
is the the reliability aspects because

1311
01:00:39,119 --> 01:00:42,780
if you have this stateless forwarding is

1312
01:00:42,780 --> 01:00:44,420
based on the knowledge of your

1313
01:00:44,420 --> 01:00:47,940
neighborhood but if something goes wrong

1314
01:00:47,940 --> 01:00:49,859
and you don't have a routing protocol

1315
01:00:49,859 --> 01:00:54,180
that allows you to go around uh then you

1316
01:00:54,180 --> 01:00:56,640
need to to manage the reliability in a

1317
01:00:56,640 --> 01:00:59,700
different way so uh

1318
01:00:59,700 --> 01:01:02,839
what I want to say by that is that

1319
01:01:02,839 --> 01:01:06,240
this work in principle could work in the

1320
01:01:06,240 --> 01:01:09,000
wireless environment but there is a

1321
01:01:09,000 --> 01:01:11,220
reliability issue that you have to to

1322
01:01:11,220 --> 01:01:13,380
look at it carefully because the

1323
01:01:13,380 --> 01:01:14,880
wireless link is

1324
01:01:14,880 --> 01:01:19,020
is not as stable as a PLC wireless link

1325
01:01:19,020 --> 01:01:23,400
so so yeah so so this comes also to the

1326
01:01:23,400 --> 01:01:26,400
initial comments that I made the

1327
01:01:26,400 --> 01:01:28,380
solutions is not to replace Ripple for

1328
01:01:28,380 --> 01:01:31,200
example is and be used to as a general

1329
01:01:31,200 --> 01:01:33,900
solution there are cases that you can

1330
01:01:33,900 --> 01:01:37,079
use it okay this is

1331
01:01:37,079 --> 01:01:40,559
as meaningful it's not uh okay yeah I'm

1332
01:01:40,559 --> 01:01:42,540
just doubting a bit on home use case

1333
01:01:42,540 --> 01:01:45,000
that's all but okay I will check it

1334
01:01:45,000 --> 01:01:46,079
thanks

1335
01:01:46,079 --> 01:01:50,040
but please again uh read the the section

1336
01:01:50,040 --> 01:01:52,619
and send us all your thoughts that would

1337
01:01:52,619 --> 01:01:55,859
be good input anyway

1338
01:01:55,859 --> 01:01:58,799
oh sorry I was going to remove Esco from

1339
01:01:58,799 --> 01:02:00,540
the queue but I accidentally removed one

1340
01:02:00,540 --> 01:02:02,640
Peng as well so one thing if you still

1341
01:02:02,640 --> 01:02:05,460
want to make a comment

1342
01:02:05,460 --> 01:02:08,339
uh yes a quick comment uh Quantum from

1343
01:02:08,339 --> 01:02:12,059
Hawaii uh one of ulcers as men knew that

1344
01:02:12,059 --> 01:02:16,079
we had a good discussion on last uh

1345
01:02:16,079 --> 01:02:19,200
Comfort option for the ANC document but

1346
01:02:19,200 --> 01:02:22,619
for the past I suggest many people who

1347
01:02:22,619 --> 01:02:27,180
interested in in this document can send

1348
01:02:27,180 --> 01:02:29,579
it and set their concerns in the mailing

1349
01:02:29,579 --> 01:02:31,980
list thanks

1350
01:02:31,980 --> 01:02:34,220
foreign

1351
01:02:41,000 --> 01:02:44,220
if there are no other comments then I

1352
01:02:44,220 --> 01:02:45,619
guess we can proceed to the next

1353
01:02:45,619 --> 01:02:47,819
companion document which is on the

1354
01:02:47,819 --> 01:02:51,079
reliability considerations

1355
01:03:03,660 --> 01:03:06,440
thank you

1356
01:03:06,540 --> 01:03:09,420
um okay this is an update on what was

1357
01:03:09,420 --> 01:03:12,380
before called the NSA reliability uh now

1358
01:03:12,380 --> 01:03:16,079
choose to be said the new version of the

1359
01:03:16,079 --> 01:03:19,920
draft is more uh renaming update but

1360
01:03:19,920 --> 01:03:22,380
since we did not have the possibility to

1361
01:03:22,380 --> 01:03:25,980
present this document last time uh we

1362
01:03:25,980 --> 01:03:28,680
will go over it this time

1363
01:03:28,680 --> 01:03:30,180
um certainly

1364
01:03:30,180 --> 01:03:33,119
uh let's say this is an initial effort

1365
01:03:33,119 --> 01:03:34,880
uh

1366
01:03:34,880 --> 01:03:38,520
and might have some adjustments to be

1367
01:03:38,520 --> 01:03:41,640
done but the more important the point is

1368
01:03:41,640 --> 01:03:45,000
to receive your feedback so I I hope

1369
01:03:45,000 --> 01:03:47,819
that you at some point we will have uh

1370
01:03:47,819 --> 01:03:49,680
the possibility to discuss this on the

1371
01:03:49,680 --> 01:03:52,140
mailing list okay so new document

1372
01:03:52,140 --> 01:03:54,839
submitted in October as I said the main

1373
01:03:54,839 --> 01:03:57,180
change is the the naming we try to go

1374
01:03:57,180 --> 01:04:00,359
over the the whole document to replace

1375
01:04:00,359 --> 01:04:03,420
an essay bypass and and a few other

1376
01:04:03,420 --> 01:04:06,240
changes were the meaningful

1377
01:04:06,240 --> 01:04:07,859
but

1378
01:04:07,859 --> 01:04:09,660
um we will work more on this document

1379
01:04:09,660 --> 01:04:11,880
for uh 116.

1380
01:04:11,880 --> 01:04:15,900
okay so uh the main content is pretty

1381
01:04:15,900 --> 01:04:18,119
simple we have a general introduction to

1382
01:04:18,119 --> 01:04:19,520
the problem

1383
01:04:19,520 --> 01:04:22,740
uh the possible solution uh

1384
01:04:22,740 --> 01:04:26,220
uh classes which are pretty pretty much

1385
01:04:26,220 --> 01:04:28,500
two and I will present in the rest of

1386
01:04:28,500 --> 01:04:31,380
this uh presentation

1387
01:04:31,380 --> 01:04:34,020
uh there is also a section about

1388
01:04:34,020 --> 01:04:36,359
consideration how to detect the failures

1389
01:04:36,359 --> 01:04:38,520
and the recovery as well because this is

1390
01:04:38,520 --> 01:04:40,859
also a change in topology it's not about

1391
01:04:40,859 --> 01:04:42,500
only

1392
01:04:42,500 --> 01:04:46,020
a workaround something that is missing

1393
01:04:46,020 --> 01:04:48,299
is also understanding when this this

1394
01:04:48,299 --> 01:04:51,299
link for example or not that that was

1395
01:04:51,299 --> 01:04:53,220
not available is coming back and we can

1396
01:04:53,220 --> 01:04:55,380
go back to the initial state

1397
01:04:55,380 --> 01:04:58,140
and then some consideration about their

1398
01:04:58,140 --> 01:04:59,280
obviousness

1399
01:04:59,280 --> 01:05:01,920
um you know

1400
01:05:01,920 --> 01:05:06,119
so the the obviously in order to to have

1401
01:05:06,119 --> 01:05:07,980
a reliability the private requisite is

1402
01:05:07,980 --> 01:05:10,500
to have redundant links uh if you don't

1403
01:05:10,500 --> 01:05:13,140
have an alternative

1404
01:05:13,140 --> 01:05:15,540
if something breaks it breaks and you

1405
01:05:15,540 --> 01:05:18,119
you lose connectivity so this is

1406
01:05:18,119 --> 01:05:20,640
obviously the what you need at the

1407
01:05:20,640 --> 01:05:22,260
beginning

1408
01:05:22,260 --> 01:05:23,819
um

1409
01:05:23,819 --> 01:05:25,920
doesn't mean that you need to this

1410
01:05:25,920 --> 01:05:27,900
redundant links all to be active at the

1411
01:05:27,900 --> 01:05:29,819
same time so it could be an active

1412
01:05:29,819 --> 01:05:34,559
passive uh kind of uh usage okay and but

1413
01:05:34,559 --> 01:05:36,599
the point is the one you use the active

1414
01:05:36,599 --> 01:05:39,240
links you have you must be able to build

1415
01:05:39,240 --> 01:05:41,880
a tree because passer relies on this

1416
01:05:41,880 --> 01:05:47,000
logical uh three topology okay and uh

1417
01:05:47,000 --> 01:05:50,339
the other thing is what we need is to

1418
01:05:50,339 --> 01:05:52,440
have a secondary pattern a parent so

1419
01:05:52,440 --> 01:05:55,079
each node needs a

1420
01:05:55,079 --> 01:05:57,980
two parents okay

1421
01:05:57,980 --> 01:06:01,020
uh which is pretty natural so that we

1422
01:06:01,020 --> 01:06:03,599
can uh alternate and have a reliability

1423
01:06:03,599 --> 01:06:08,520
ability this is except the root nodes uh

1424
01:06:08,520 --> 01:06:10,200
in the sense that the root node is the

1425
01:06:10,200 --> 01:06:12,839
one that that is the the gateway to the

1426
01:06:12,839 --> 01:06:16,200
internet and starting from there you

1427
01:06:16,200 --> 01:06:18,720
have different kind of reliabilities and

1428
01:06:18,720 --> 01:06:22,160
you are outside the passer domain so

1429
01:06:22,160 --> 01:06:24,059
uh yeah

1430
01:06:24,059 --> 01:06:26,940
that's a different story

1431
01:06:26,940 --> 01:06:30,480
and uh the alternative parent could be

1432
01:06:30,480 --> 01:06:33,119
uh you know is connected in uh to a

1433
01:06:33,119 --> 01:06:36,000
non-active link uh now in when you have

1434
01:06:36,000 --> 01:06:40,079
this uh set of uh conditions that hold

1435
01:06:40,079 --> 01:06:43,319
then you have basically two choices

1436
01:06:43,319 --> 01:06:46,140
either you use multiple addresses which

1437
01:06:46,140 --> 01:06:49,160
basically boils down to have a

1438
01:06:49,160 --> 01:06:52,140
uh a different topology

1439
01:06:52,140 --> 01:06:56,039
okay so it's like multi-topology routing

1440
01:06:56,039 --> 01:06:58,740
so basically you have uh two parallel

1441
01:06:58,740 --> 01:07:02,579
instance or over to three topology that

1442
01:07:02,579 --> 01:07:05,039
not match in the sense that so that when

1443
01:07:05,039 --> 01:07:07,819
one link is down you have an alternative

1444
01:07:07,819 --> 01:07:12,319
uh pass on the other topology right or

1445
01:07:12,319 --> 01:07:15,240
uh you can use one single address or

1446
01:07:15,240 --> 01:07:18,660
like we do in the normal case

1447
01:07:18,660 --> 01:07:22,920
but then you need to store uh uh alter

1448
01:07:22,920 --> 01:07:25,200
some addresses in order to have to know

1449
01:07:25,200 --> 01:07:28,380
which is your alternative parent or

1450
01:07:28,380 --> 01:07:29,280
children

1451
01:07:29,280 --> 01:07:32,400
okay in a multi-topology case you don't

1452
01:07:32,400 --> 01:07:35,280
need you don't need that they are really

1453
01:07:35,280 --> 01:07:38,099
running in parallel so

1454
01:07:38,099 --> 01:07:40,920
but in a certain way both require some

1455
01:07:40,920 --> 01:07:44,099
some additional uh State on the

1456
01:07:44,099 --> 01:07:46,460
different nodes so I said this is pretty

1457
01:07:46,460 --> 01:07:49,559
uh trivial I mean there is not such a

1458
01:07:49,559 --> 01:07:52,740
thing as a free lunch right so

1459
01:07:52,740 --> 01:07:56,520
when the multi-address uh

1460
01:07:56,520 --> 01:08:00,420
case in case of a link you you will have

1461
01:08:00,420 --> 01:08:02,220
basically two routes and then you have

1462
01:08:02,220 --> 01:08:04,559
these multiple links you build a

1463
01:08:04,559 --> 01:08:07,260
parallel topology when something happens

1464
01:08:07,260 --> 01:08:10,020
like in this case in this example we

1465
01:08:10,020 --> 01:08:12,119
have the link between one zero zero and

1466
01:08:12,119 --> 01:08:16,560
one zero that he at some point breaks

1467
01:08:16,560 --> 01:08:17,520
um

1468
01:08:17,520 --> 01:08:19,620
after detection

1469
01:08:19,620 --> 01:08:23,299
one zero zero can use the other topology

1470
01:08:23,299 --> 01:08:27,839
in order to send a an icmp notification

1471
01:08:27,839 --> 01:08:30,238
to the root in order to say

1472
01:08:30,238 --> 01:08:32,219
this link is down

1473
01:08:32,219 --> 01:08:34,020
and this is this is done on the

1474
01:08:34,020 --> 01:08:35,939
alternative topology using the address

1475
01:08:35,939 --> 01:08:38,580
zero one one zero zero sorry for all

1476
01:08:38,580 --> 01:08:40,920
these bits going through the alternative

1477
01:08:40,920 --> 01:08:43,259
route and then the original route okay

1478
01:08:43,259 --> 01:08:46,859
this is from let's say from uh the

1479
01:08:46,859 --> 01:08:49,859
bottom side of the link on the app Sim

1480
01:08:49,859 --> 01:08:52,319
side the denote one zero just send an

1481
01:08:52,319 --> 01:08:55,198
icmp straight up through the different

1482
01:08:55,198 --> 01:08:58,679
layers to the root and for optimization

1483
01:08:58,679 --> 01:09:01,380
you can use some uh some some CMP

1484
01:09:01,380 --> 01:09:03,660
messages and also to to delivering

1485
01:09:03,660 --> 01:09:05,219
children

1486
01:09:05,219 --> 01:09:09,359
in this in this way Whenever there is a

1487
01:09:09,359 --> 01:09:12,600
a packet coming from the leaves or the

1488
01:09:12,600 --> 01:09:16,560
the sub trees of one zero zero going up

1489
01:09:16,560 --> 01:09:19,679
and in principle should go through the

1490
01:09:19,679 --> 01:09:23,040
link between one zero zero and one zero

1491
01:09:23,040 --> 01:09:25,259
you can tunnel

1492
01:09:25,259 --> 01:09:27,420
through the alternative topology and

1493
01:09:27,420 --> 01:09:29,100
send it to the root

1494
01:09:29,100 --> 01:09:30,960
okay

1495
01:09:30,960 --> 01:09:34,319
on the way back let's say that oh there

1496
01:09:34,319 --> 01:09:37,439
is a packet from the root

1497
01:09:37,439 --> 01:09:40,080
could have come externally or from the

1498
01:09:40,080 --> 01:09:42,299
local domain doesn't matter

1499
01:09:42,299 --> 01:09:45,359
when it is on the route and you look at

1500
01:09:45,359 --> 01:09:47,698
the destination address now the route

1501
01:09:47,698 --> 01:09:50,279
needs needs to remember that there is a

1502
01:09:50,279 --> 01:09:52,380
broken link and so that it needs to

1503
01:09:52,380 --> 01:09:54,120
Tunnel the bucket on the alternative

1504
01:09:54,120 --> 01:09:57,660
topology back to 100.

1505
01:09:57,660 --> 01:09:58,739
okay

1506
01:09:58,739 --> 01:10:01,440
so basically it uses the alternative

1507
01:10:01,440 --> 01:10:04,440
path goes to one zero zero decapsulate

1508
01:10:04,440 --> 01:10:06,840
you see the real destination and you

1509
01:10:06,840 --> 01:10:09,780
send it down to the real destination

1510
01:10:09,780 --> 01:10:12,060
okay

1511
01:10:12,060 --> 01:10:15,739
so uh

1512
01:10:15,780 --> 01:10:18,600
the the the the the state that you need

1513
01:10:18,600 --> 01:10:23,760
to add is in Niche no each node that is

1514
01:10:23,760 --> 01:10:26,640
um has a broken link uh absely more

1515
01:10:26,640 --> 01:10:28,860
donesting there is this additional

1516
01:10:28,860 --> 01:10:30,719
stated that you have to remember that

1517
01:10:30,719 --> 01:10:32,940
the link is broken but it's not that

1518
01:10:32,940 --> 01:10:34,800
much stage you still need to to have

1519
01:10:34,800 --> 01:10:38,280
this this information on the Note right

1520
01:10:38,280 --> 01:10:41,460
um You need to know the alternative path

1521
01:10:41,460 --> 01:10:43,739
but this is pretty simple because you

1522
01:10:43,739 --> 01:10:46,380
have the the secondary topology okay you

1523
01:10:46,380 --> 01:10:47,880
just need to encapsulate

1524
01:10:47,880 --> 01:10:50,760
there is some State on the root because

1525
01:10:50,760 --> 01:10:53,480
the route has to have the knowledge of

1526
01:10:53,480 --> 01:10:58,739
all ongoing failures and where to

1527
01:10:58,739 --> 01:11:00,900
um encapsulate in order to Tunnel the

1528
01:11:00,900 --> 01:11:02,640
packet to the right node

1529
01:11:02,640 --> 01:11:06,420
I mean now this is uh

1530
01:11:06,420 --> 01:11:09,179
hopefully limited State because you have

1531
01:11:09,179 --> 01:11:11,580
few failures but if you have a lot of

1532
01:11:11,580 --> 01:11:15,600
failures popping up in your network so

1533
01:11:15,600 --> 01:11:17,159
the state that you have to keep on the

1534
01:11:17,159 --> 01:11:18,900
root is not anymore your problem you

1535
01:11:18,900 --> 01:11:21,420
have a bigger issue with the reliability

1536
01:11:21,420 --> 01:11:23,460
physical reliability of your network

1537
01:11:23,460 --> 01:11:25,500
right

1538
01:11:25,500 --> 01:11:27,960
so if I may if you think it's possible

1539
01:11:27,960 --> 01:11:30,620
to speed up a little bit yes yes

1540
01:11:30,620 --> 01:11:34,440
so I described this this logic to us so

1541
01:11:34,440 --> 01:11:36,960
I don't really need to go over this

1542
01:11:36,960 --> 01:11:39,900
slide here

1543
01:11:39,900 --> 01:11:41,880
um I will go straight to the single

1544
01:11:41,880 --> 01:11:45,719
single address uh case with the simplest

1545
01:11:45,719 --> 01:11:48,719
uh the same scenario okay a link failure

1546
01:11:48,719 --> 01:11:51,179
between one zero one zero zero as you

1547
01:11:51,179 --> 01:11:52,980
can see now we don't have double

1548
01:11:52,980 --> 01:11:55,980
addressing it's just that uh

1549
01:11:55,980 --> 01:11:59,760
in this case we need to keep a bigger

1550
01:11:59,760 --> 01:12:03,560
neighbor State with alternative

1551
01:12:03,560 --> 01:12:06,300
parents and children in order to know

1552
01:12:06,300 --> 01:12:08,880
what to do when the link fails you

1553
01:12:08,880 --> 01:12:11,760
basically one zero zero send an icmp

1554
01:12:11,760 --> 01:12:14,159
message through 110 to the root in in

1555
01:12:14,159 --> 01:12:16,860
order to say to do the same notification

1556
01:12:16,860 --> 01:12:20,520
basically okay so we need to exchange

1557
01:12:20,520 --> 01:12:24,480
Samosa state but we still can walk

1558
01:12:24,480 --> 01:12:26,520
around the the link failure

1559
01:12:26,520 --> 01:12:28,199
okay

1560
01:12:28,199 --> 01:12:32,640
and when we go down uh The Roots knows

1561
01:12:32,640 --> 01:12:35,640
that something is wrong and it can

1562
01:12:35,640 --> 01:12:37,620
decide to

1563
01:12:37,620 --> 01:12:38,940
um

1564
01:12:38,940 --> 01:12:41,520
do some kind of source routing in order

1565
01:12:41,520 --> 01:12:42,900
to send the packet to the right

1566
01:12:42,900 --> 01:12:44,699
destination

1567
01:12:44,699 --> 01:12:48,179
looking to run through uh forwarding

1568
01:12:48,179 --> 01:12:49,980
through an alternative pass in that case

1569
01:12:49,980 --> 01:12:52,140
however you can have some hope at it

1570
01:12:52,140 --> 01:12:55,920
because uh you need to to embed the path

1571
01:12:55,920 --> 01:12:58,620
the alternative path which is the not

1572
01:12:58,620 --> 01:13:01,080
not the natural pass a path in your

1573
01:13:01,080 --> 01:13:04,400
pocket okay

1574
01:13:04,980 --> 01:13:08,400
for the sake of time I will skip the the

1575
01:13:08,400 --> 01:13:10,380
um the flowcharts but these are in the

1576
01:13:10,380 --> 01:13:13,560
document uh pretty easy so if we want to

1577
01:13:13,560 --> 01:13:15,600
compare a little bit to classes the

1578
01:13:15,600 --> 01:13:18,300
multiple addresses single address

1579
01:13:18,300 --> 01:13:21,659
the the amount of state that we see in

1580
01:13:21,659 --> 01:13:24,060
the root in the multiple addresses is

1581
01:13:24,060 --> 01:13:27,260
low because you just have a redirect

1582
01:13:27,260 --> 01:13:30,780
rule the single address the root needs

1583
01:13:30,780 --> 01:13:32,520
to know that your full topology knows

1584
01:13:32,520 --> 01:13:36,600
that when we go downlink we need to know

1585
01:13:36,600 --> 01:13:38,760
which path to build okay

1586
01:13:38,760 --> 01:13:42,060
in in the forwarder nodes the status is

1587
01:13:42,060 --> 01:13:45,239
in both cases relatively low some some

1588
01:13:45,239 --> 01:13:46,920
rules can be

1589
01:13:46,920 --> 01:13:47,580
um

1590
01:13:47,580 --> 01:13:50,219
there or neighborhood

1591
01:13:50,219 --> 01:13:53,280
and the robustness uh if you have

1592
01:13:53,280 --> 01:13:55,739
multiple failures the multiple addresses

1593
01:13:55,739 --> 01:13:58,500
there is no clear synchronization could

1594
01:13:58,500 --> 01:14:01,739
be weaker in that case

1595
01:14:01,739 --> 01:14:04,380
but in the single address case since the

1596
01:14:04,380 --> 01:14:06,300
route has a global vision

1597
01:14:06,300 --> 01:14:10,320
can do semester choices but again if if

1598
01:14:10,320 --> 01:14:12,300
you have a lot of failures then you have

1599
01:14:12,300 --> 01:14:13,980
a bigger problem

1600
01:14:13,980 --> 01:14:16,620
and that's it about being a little bit

1601
01:14:16,620 --> 01:14:19,380
of time if you have any question now or

1602
01:14:19,380 --> 01:14:21,600
later on on the mailing list please send

1603
01:14:21,600 --> 01:14:24,199
any feedback

1604
01:14:25,739 --> 01:14:28,140
okay any questions

1605
01:14:28,140 --> 01:14:31,699
from the room or remotely

1606
01:14:35,040 --> 01:14:37,920
okay okay so thank you very much thank

1607
01:14:37,920 --> 01:14:39,900
you for the presentation

1608
01:14:39,900 --> 01:14:43,199
so the next presenter will be me

1609
01:14:43,199 --> 01:14:47,219
actually so shweta if you can share

1610
01:14:47,219 --> 01:14:50,600
the presentation

1611
01:15:02,100 --> 01:15:03,780
okay thank you

1612
01:15:03,780 --> 01:15:06,840
so hello again I'm going to present the

1613
01:15:06,840 --> 01:15:09,060
last update of the draft and title

1614
01:15:09,060 --> 01:15:10,560
transmission of she compress packets

1615
01:15:10,560 --> 01:15:14,280
over IEEE 802.15.4 networks Mike author

1616
01:15:14,280 --> 01:15:16,620
is an Amina burum From macleon next

1617
01:15:16,620 --> 01:15:18,860
please

1618
01:15:20,159 --> 01:15:23,280
so first of all a reminder for the

1619
01:15:23,280 --> 01:15:25,500
motivation of this draft

1620
01:15:25,500 --> 01:15:28,739
as this working group knows well RFC 622

1621
01:15:28,739 --> 01:15:30,300
has been the basis for header

1622
01:15:30,300 --> 01:15:31,980
compression in six low pan and also in

1623
01:15:31,980 --> 01:15:34,380
six low with these rfcs possible to

1624
01:15:34,380 --> 01:15:37,860
compress a 48 byte ipp6 UDP header down

1625
01:15:37,860 --> 01:15:40,380
to just seven bytes in the best case

1626
01:15:40,380 --> 01:15:43,260
with global addresses however there is a

1627
01:15:43,260 --> 01:15:45,179
more recent specification called Chic

1628
01:15:45,179 --> 01:15:46,980
which is the main product of the lp1

1629
01:15:46,980 --> 01:15:50,400
working group which is able to compress

1630
01:15:50,400 --> 01:15:52,739
even further the same header down to

1631
01:15:52,739 --> 01:15:55,260
just for example one byte that's because

1632
01:15:55,260 --> 01:15:58,080
cheek uses static context based on a

1633
01:15:58,080 --> 01:15:59,760
priority knowledge of the header field

1634
01:15:59,760 --> 01:16:01,440
values of the packets that will be

1635
01:16:01,440 --> 01:16:02,640
transmitted

1636
01:16:02,640 --> 01:16:05,760
then if we take into consideration also

1637
01:16:05,760 --> 01:16:08,040
an application layer protocol like Co-op

1638
01:16:08,040 --> 01:16:10,860
uh there is no six low band style header

1639
01:16:10,860 --> 01:16:13,020
compression defined for Co-Op but there

1640
01:16:13,020 --> 01:16:15,780
is a way to compress Co-op headers with

1641
01:16:15,780 --> 01:16:18,420
Chic so here we are considering two

1642
01:16:18,420 --> 01:16:22,500
examples two cases of Co-op headers one

1643
01:16:22,500 --> 01:16:26,040
which is a means no header options which

1644
01:16:26,040 --> 01:16:28,500
means uh had the size of four bytes case

1645
01:16:28,500 --> 01:16:30,540
b corresponds to the example in Table

1646
01:16:30,540 --> 01:16:34,080
Six in RFC 8824 where the cop had a size

1647
01:16:34,080 --> 01:16:37,620
is 16 bytes so in both cases the seek

1648
01:16:37,620 --> 01:16:39,900
it's possible to compress those two

1649
01:16:39,900 --> 01:16:41,940
headers down to just for example one

1650
01:16:41,940 --> 01:16:45,300
byte which leads to a total Improvement

1651
01:16:45,300 --> 01:16:48,239
which is quite significant uh if we

1652
01:16:48,239 --> 01:16:51,600
consider the join IPv6 GDP Co-op header

1653
01:16:51,600 --> 01:16:54,239
size with six low pan we can compress

1654
01:16:54,239 --> 01:16:57,360
those down to 11 or 23 bytes depending

1655
01:16:57,360 --> 01:16:59,400
on the two cases but we think it's

1656
01:16:59,400 --> 01:17:01,620
possible to compress them down to just

1657
01:17:01,620 --> 01:17:04,860
couple of bytes in both cases

1658
01:17:04,860 --> 01:17:07,620
so for example this represents a battery

1659
01:17:07,620 --> 01:17:09,239
lifetime Improvement for battery

1660
01:17:09,239 --> 01:17:12,360
operated devices over 15.4 by a factor

1661
01:17:12,360 --> 01:17:14,820
which in theory could be even greater

1662
01:17:14,820 --> 01:17:17,400
than two although a disclaimer here is

1663
01:17:17,400 --> 01:17:18,600
that the actual Improvement will be

1664
01:17:18,600 --> 01:17:20,940
lower depending on the different

1665
01:17:20,940 --> 01:17:22,980
parameters and settings like the device

1666
01:17:22,980 --> 01:17:25,320
Hardware features such as sleep current

1667
01:17:25,320 --> 01:17:27,480
consumption different settings at the

1668
01:17:27,480 --> 01:17:29,340
Mac layer adaptation layer application

1669
01:17:29,340 --> 01:17:31,800
layer payload size Network topology and

1670
01:17:31,800 --> 01:17:35,060
so on next please

1671
01:17:36,360 --> 01:17:38,580
so just to provide a few more details on

1672
01:17:38,580 --> 01:17:41,040
this this figure shows the maximum

1673
01:17:41,040 --> 01:17:43,739
battery lifetime Improvement Factor as a

1674
01:17:43,739 --> 01:17:45,900
function of the co-op payload size in

1675
01:17:45,900 --> 01:17:48,600
the horizontal axis and here we are

1676
01:17:48,600 --> 01:17:50,100
assuming some things like short Mac

1677
01:17:50,100 --> 01:17:53,159
addresses intrapan communication and a

1678
01:17:53,159 --> 01:17:55,620
sensor that is battery operated and

1679
01:17:55,620 --> 01:17:57,300
periodically transmitting a message for

1680
01:17:57,300 --> 01:17:59,100
example containing sensor readings over

1681
01:17:59,100 --> 01:18:02,159
15.4 and we are considering also star

1682
01:18:02,159 --> 01:18:05,159
topology and mesh under so we may add

1683
01:18:05,159 --> 01:18:08,040
route over in in future updates of this

1684
01:18:08,040 --> 01:18:10,920
figure and as you can see there is some

1685
01:18:10,920 --> 01:18:13,140
improvement factor which is reasonably

1686
01:18:13,140 --> 01:18:16,320
significant and it increases as the core

1687
01:18:16,320 --> 01:18:18,360
payload size decreases

1688
01:18:18,360 --> 01:18:20,820
and anyway this is theoretical results

1689
01:18:20,820 --> 01:18:23,460
so the actual Improvement will be

1690
01:18:23,460 --> 01:18:27,380
somewhat lower next please

1691
01:18:27,780 --> 01:18:30,179
so on the status of this document there

1692
01:18:30,179 --> 01:18:33,060
was some previous uh document a

1693
01:18:33,060 --> 01:18:35,219
precursor to to this one which was

1694
01:18:35,219 --> 01:18:38,640
presented already in ITF 110 then this

1695
01:18:38,640 --> 01:18:40,620
document I'm presenting tries to provide

1696
01:18:40,620 --> 01:18:42,420
all the details required to enable the

1697
01:18:42,420 --> 01:18:43,800
transmission of sheet compress packets

1698
01:18:43,800 --> 01:18:46,860
over 15.4 networks and the previous

1699
01:18:46,860 --> 01:18:49,560
versions previous first four versions of

1700
01:18:49,560 --> 01:18:51,300
the draft have been presented in the

1701
01:18:51,300 --> 01:18:53,640
last four ITF meetings and today I'm

1702
01:18:53,640 --> 01:18:55,800
presenting revisions zero four and zero

1703
01:18:55,800 --> 01:18:57,719
five where the main one is actually zero

1704
01:18:57,719 --> 01:19:00,480
four uh which aim to incorporate the

1705
01:19:00,480 --> 01:19:02,340
feedback from the last ATF and also from

1706
01:19:02,340 --> 01:19:05,040
discussion on the mailing lists of the

1707
01:19:05,040 --> 01:19:07,440
six low and lp1 working groups next

1708
01:19:07,440 --> 01:19:09,678
please

1709
01:19:11,400 --> 01:19:14,600
so let's see the update in the draft

1710
01:19:14,600 --> 01:19:17,159
first there's some changes in the

1711
01:19:17,159 --> 01:19:19,080
organization of some of the content in

1712
01:19:19,080 --> 01:19:20,280
the document

1713
01:19:20,280 --> 01:19:23,219
previously there was section 6 entitled

1714
01:19:23,219 --> 01:19:25,800
multi-hub communication which now has

1715
01:19:25,800 --> 01:19:29,219
increased and now uh it's located in

1716
01:19:29,219 --> 01:19:32,480
Section 3 architecture also we have

1717
01:19:32,480 --> 01:19:34,860
modified the change of the two previous

1718
01:19:34,860 --> 01:19:37,440
subsections in the architecture part in

1719
01:19:37,440 --> 01:19:38,880
order to provide a better introduction

1720
01:19:38,880 --> 01:19:41,460
to the multi-hop communication topics

1721
01:19:41,460 --> 01:19:44,219
then in these multi-hop parts we

1722
01:19:44,219 --> 01:19:46,380
describe at the moment three different

1723
01:19:46,380 --> 01:19:48,900
possible approaches to transmit a

1724
01:19:48,900 --> 01:19:50,520
compressed sheet compressed packet over

1725
01:19:50,520 --> 01:19:53,699
a 15.4 multi-hop path

1726
01:19:53,699 --> 01:19:56,820
and then section 4 has been extended as

1727
01:19:56,820 --> 01:19:58,920
well because now we provide the frame

1728
01:19:58,920 --> 01:20:01,500
formats that correspond to these three

1729
01:20:01,500 --> 01:20:03,360
different approaches

1730
01:20:03,360 --> 01:20:06,120
and finally there used to be subsection

1731
01:20:06,120 --> 01:20:07,679
5.3

1732
01:20:07,679 --> 01:20:10,260
in Section 5 about header compression

1733
01:20:10,260 --> 01:20:12,900
examples however well the the section

1734
01:20:12,900 --> 01:20:14,640
still by the way needs to be developed

1735
01:20:14,640 --> 01:20:17,100
and now for the moment we are moving it

1736
01:20:17,100 --> 01:20:19,020
to an appendix which seems to be a

1737
01:20:19,020 --> 01:20:20,940
better place probably

1738
01:20:20,940 --> 01:20:23,659
next please

1739
01:20:24,840 --> 01:20:27,659
so on Section 3.3 on multi-hub

1740
01:20:27,659 --> 01:20:29,280
communication

1741
01:20:29,280 --> 01:20:31,679
these are the three approaches by which

1742
01:20:31,679 --> 01:20:34,980
compressed packet maybe transmitted

1743
01:20:34,980 --> 01:20:36,840
through a multi-hop path in a 15.4

1744
01:20:36,840 --> 01:20:40,380
network now the first one we are calling

1745
01:20:40,380 --> 01:20:42,300
it straightforward route over approach

1746
01:20:42,300 --> 01:20:45,600
in this case all nodes must store all

1747
01:20:45,600 --> 01:20:47,219
the rules in using the network for

1748
01:20:47,219 --> 01:20:48,719
compression decompression that's because

1749
01:20:48,719 --> 01:20:50,580
maybe a note could be a node in the

1750
01:20:50,580 --> 01:20:52,199
middle an intermediate mode which might

1751
01:20:52,199 --> 01:20:54,020
need to decompress and compress again

1752
01:20:54,020 --> 01:20:57,360
however while this is good in terms of

1753
01:20:57,360 --> 01:20:59,940
header overhead this is probably more

1754
01:20:59,940 --> 01:21:01,679
suitable rather for small stable

1755
01:21:01,679 --> 01:21:04,500
networks or perhaps without nodes

1756
01:21:04,500 --> 01:21:06,120
without memory issues

1757
01:21:06,120 --> 01:21:09,300
then there's another approach perhaps

1758
01:21:09,300 --> 01:21:11,699
for larger networks which we are calling

1759
01:21:11,699 --> 01:21:13,440
now tunnel Ripple based route over

1760
01:21:13,440 --> 01:21:15,900
approach where an endpoint must Only

1761
01:21:15,900 --> 01:21:18,360
Store the rules for the communications

1762
01:21:18,360 --> 01:21:21,480
it's involved in as an endpoint

1763
01:21:21,480 --> 01:21:23,940
so later we'll see the the details for

1764
01:21:23,940 --> 01:21:26,400
this one which is the details have been

1765
01:21:26,400 --> 01:21:28,980
added in these last dates and there is

1766
01:21:28,980 --> 01:21:31,500
also the mesh under approach by which an

1767
01:21:31,500 --> 01:21:33,480
endpoint must Only Store the rules for

1768
01:21:33,480 --> 01:21:35,219
the communications it is involved in as

1769
01:21:35,219 --> 01:21:39,560
an endpoint as well next please

1770
01:21:40,260 --> 01:21:40,980
yeah

1771
01:21:40,980 --> 01:21:43,920
so on the tunnel Ripple based route over

1772
01:21:43,920 --> 01:21:46,320
approach here the assumption is that we

1773
01:21:46,320 --> 01:21:48,960
are using Ripple non-stirring mode and

1774
01:21:48,960 --> 01:21:51,659
the overview would be as follows packet

1775
01:21:51,659 --> 01:21:53,940
sent by A6 Ln are tunnel upward to the

1776
01:21:53,940 --> 01:21:56,520
root and if the final destination is

1777
01:21:56,520 --> 01:21:58,080
another 6 Ln

1778
01:21:58,080 --> 01:22:00,480
in the same Ripple domain then the

1779
01:22:00,480 --> 01:22:02,040
packets are tunnel downward from the

1780
01:22:02,040 --> 01:22:02,880
root

1781
01:22:02,880 --> 01:22:07,199
so then we have RFC 9008 which describes

1782
01:22:07,199 --> 01:22:09,900
how a packet would be transmitted from a

1783
01:22:09,900 --> 01:22:12,000
6lm to another node which could be

1784
01:22:12,000 --> 01:22:13,920
another six land or the root in the same

1785
01:22:13,920 --> 01:22:17,040
Ripple domain or an external node so

1786
01:22:17,040 --> 01:22:18,960
according to this RFC for downward

1787
01:22:18,960 --> 01:22:22,560
traffic there is IPv6 in IPv6 tunnel

1788
01:22:22,560 --> 01:22:24,719
except when the route itself is the

1789
01:22:24,719 --> 01:22:27,780
packet source and there's the tunnel it

1790
01:22:27,780 --> 01:22:30,480
terminates at the 6lm if this is a

1791
01:22:30,480 --> 01:22:33,000
rotting away a leaf or at the last 6lr

1792
01:22:33,000 --> 01:22:36,179
if the 6ln is routing and aware node and

1793
01:22:36,179 --> 01:22:38,760
then for Upward traffic there is IPv6 in

1794
01:22:38,760 --> 01:22:42,060
IPv6 encapsulation performed by the or

1795
01:22:42,060 --> 01:22:44,179
initiated by the 6lr

1796
01:22:44,179 --> 01:22:46,980
if the signal line is rotting unaware

1797
01:22:46,980 --> 01:22:48,000
node

1798
01:22:48,000 --> 01:22:50,040
and by the way there is no tunnel if the

1799
01:22:50,040 --> 01:22:52,800
destination is the route and then there

1800
01:22:52,800 --> 01:22:56,340
is IPv6 in IPv6 encapsulation only

1801
01:22:56,340 --> 01:22:59,699
optionally from the 6ln if this node is

1802
01:22:59,699 --> 01:23:04,940
a routing aware live so next please

1803
01:23:06,540 --> 01:23:08,159
so

1804
01:23:08,159 --> 01:23:09,900
we understand that we need to have a

1805
01:23:09,900 --> 01:23:12,360
tunnel for Upward traffic

1806
01:23:12,360 --> 01:23:14,159
so we understand that this document

1807
01:23:14,159 --> 01:23:17,219
would need to update out of c9008 by

1808
01:23:17,219 --> 01:23:18,600
stating that when I seeks the land

1809
01:23:18,600 --> 01:23:20,640
transmit the sheet compressed IPv6

1810
01:23:20,640 --> 01:23:22,800
packet it must be tunnel by means of

1811
01:23:22,800 --> 01:23:25,620
IPv6 and IPv6 up to the root regardless

1812
01:23:25,620 --> 01:23:27,659
of the Final Destination

1813
01:23:27,659 --> 01:23:29,520
and then there's another point which is

1814
01:23:29,520 --> 01:23:31,260
a to-do at the moment which is address

1815
01:23:31,260 --> 01:23:33,900
the case of the 6ln being routing and

1816
01:23:33,900 --> 01:23:35,580
aware Leaf

1817
01:23:35,580 --> 01:23:39,420
um because in that case it is the 6lr

1818
01:23:39,420 --> 01:23:42,060
the first XLR the one who initiates the

1819
01:23:42,060 --> 01:23:44,159
tunnel or the last six dollar the one

1820
01:23:44,159 --> 01:23:46,800
who terminates the tunnel so we need to

1821
01:23:46,800 --> 01:23:48,900
address this case

1822
01:23:48,900 --> 01:23:50,699
and then for the sake of efficiency the

1823
01:23:50,699 --> 01:23:54,239
idea is using RFC 8138 to compress the

1824
01:23:54,239 --> 01:23:57,179
different routing artifacts the IPv6 and

1825
01:23:57,179 --> 01:23:59,400
IPv6 headers the Ripple option and the

1826
01:23:59,400 --> 01:24:03,440
source routing header next please

1827
01:24:05,460 --> 01:24:07,920
so these are the frame formats that

1828
01:24:07,920 --> 01:24:10,739
would be used the first one is the one

1829
01:24:10,739 --> 01:24:13,080
that we had seen previously in in

1830
01:24:13,080 --> 01:24:15,060
previous versions of the draft this one

1831
01:24:15,060 --> 01:24:17,280
can be used for single Hub communication

1832
01:24:17,280 --> 01:24:19,800
or in the straightforward route of

1833
01:24:19,800 --> 01:24:21,120
approach

1834
01:24:21,120 --> 01:24:24,300
so here this format starts with the Chic

1835
01:24:24,300 --> 01:24:27,480
dispatch some bit pattern in page 0 in

1836
01:24:27,480 --> 01:24:29,219
this case that signals that what comes

1837
01:24:29,219 --> 01:24:32,239
next is a sheet compress packet and then

1838
01:24:32,239 --> 01:24:35,159
what's new is the formats for the tunnel

1839
01:24:35,159 --> 01:24:37,860
Ripple based route over approach where

1840
01:24:37,860 --> 01:24:41,040
we can see the main downward the main

1841
01:24:41,040 --> 01:24:43,020
format for downward communication which

1842
01:24:43,020 --> 01:24:46,920
is inspired by uh product c8138

1843
01:24:46,920 --> 01:24:50,219
where we start with the page Suite which

1844
01:24:50,219 --> 01:24:51,960
indicates that we are in the dispatch

1845
01:24:51,960 --> 01:24:53,880
type page one

1846
01:24:53,880 --> 01:24:57,179
then there's the six low R8 headers for

1847
01:24:57,179 --> 01:24:59,219
the source routing header Ripple packet

1848
01:24:59,219 --> 01:25:02,280
information ip9p encapsulation and then

1849
01:25:02,280 --> 01:25:05,580
uh ship dispatch telling that what comes

1850
01:25:05,580 --> 01:25:07,920
next is a sheet compress packet but in

1851
01:25:07,920 --> 01:25:09,420
this case the dispatch would be in page

1852
01:25:09,420 --> 01:25:11,520
one so as you can see it would be the

1853
01:25:11,520 --> 01:25:13,500
same bit pattern but in this case also

1854
01:25:13,500 --> 01:25:15,420
in page one by the way this bit pattern

1855
01:25:15,420 --> 01:25:18,300
seems to be not allocated at the moment

1856
01:25:18,300 --> 01:25:21,080
next please

1857
01:25:22,080 --> 01:25:25,860
so for Upward transmission the format is

1858
01:25:25,860 --> 01:25:28,080
similar however in this case we don't

1859
01:25:28,080 --> 01:25:31,020
need the source routing header

1860
01:25:31,020 --> 01:25:33,239
and formation under the ideas that the

1861
01:25:33,239 --> 01:25:35,100
formats would be the same as those in

1862
01:25:35,100 --> 01:25:39,840
RFC 4944 however the compress header in

1863
01:25:39,840 --> 01:25:43,860
this case of the IPv6 packet would be a

1864
01:25:43,860 --> 01:25:45,239
header compression would be made by

1865
01:25:45,239 --> 01:25:46,679
means of chic

1866
01:25:46,679 --> 01:25:49,460
next please

1867
01:25:50,640 --> 01:25:53,159
so there are other fewer dates in

1868
01:25:53,159 --> 01:25:55,140
Section 5 which is about Chic

1869
01:25:55,140 --> 01:25:58,199
compression of IPv6 UDP called headers

1870
01:25:58,199 --> 01:26:00,600
now we've added that each row defines

1871
01:26:00,600 --> 01:26:02,400
the set of protocols whose headers are

1872
01:26:02,400 --> 01:26:04,500
being compressed or decompressed for

1873
01:26:04,500 --> 01:26:06,540
example in some deployment one could

1874
01:26:06,540 --> 01:26:09,179
decide to assign rule IDs one two three

1875
01:26:09,179 --> 01:26:11,760
for example to compress the IPv6 header

1876
01:26:11,760 --> 01:26:14,159
Only Rule like this fall to seven to

1877
01:26:14,159 --> 01:26:16,560
compress IPv6 UDP and Rule like this

1878
01:26:16,560 --> 01:26:20,040
8-15 to compress IPv6 UDP Co-op

1879
01:26:20,040 --> 01:26:22,980
and other than that we also have a data

1880
01:26:22,980 --> 01:26:24,659
Diana considerations because as

1881
01:26:24,659 --> 01:26:27,600
mentioned before we need to request the

1882
01:26:27,600 --> 01:26:30,000
allocation of a dispatch type for Chic

1883
01:26:30,000 --> 01:26:34,199
but not only in page 0 also in page one

1884
01:26:34,199 --> 01:26:37,739
and by the way it seems like especially

1885
01:26:37,739 --> 01:26:41,219
if we need to update perhaps a role RFC

1886
01:26:41,219 --> 01:26:43,380
well we may need to keep the role

1887
01:26:43,380 --> 01:26:45,060
working group in the loop perhaps more

1888
01:26:45,060 --> 01:26:46,380
formally even if some of the

1889
01:26:46,380 --> 01:26:49,380
participants are actually also seasonal

1890
01:26:49,380 --> 01:26:51,360
participants

1891
01:26:51,360 --> 01:26:54,620
okay so next please

1892
01:26:55,800 --> 01:26:58,800
yeah so the document is getting more and

1893
01:26:58,800 --> 01:27:00,780
more complete of course it's not yet

1894
01:27:00,780 --> 01:27:03,659
finished but the offers would like to

1895
01:27:03,659 --> 01:27:06,780
ask if the document would be ready at

1896
01:27:06,780 --> 01:27:10,639
this point for working group adoption

1897
01:27:19,639 --> 01:27:22,139
thanks Carlos so

1898
01:27:22,139 --> 01:27:23,460
oh

1899
01:27:23,460 --> 01:27:26,580
can you get a sense from the room

1900
01:27:26,580 --> 01:27:28,739
um on how many people have read it and

1901
01:27:28,739 --> 01:27:30,719
would be interested in

1902
01:27:30,719 --> 01:27:33,120
reviewing and continuing to work on this

1903
01:27:33,120 --> 01:27:36,139
as a work group document

1904
01:27:39,420 --> 01:27:42,480
should we do a show of hands or hum

1905
01:27:42,480 --> 01:27:45,300
yeah so I'm hearing suggestions to if

1906
01:27:45,300 --> 01:27:47,460
you maybe want to run the poll through

1907
01:27:47,460 --> 01:27:50,420
miteko Maybe

1908
01:28:26,120 --> 01:28:29,300
thank you

1909
01:28:29,639 --> 01:28:31,760
thank you

1910
01:29:21,300 --> 01:29:24,960
okay so shweta if you yeah so we have

1911
01:29:24,960 --> 01:29:27,719
about 16 people who raised hands in

1912
01:29:27,719 --> 01:29:30,060
support no one opposed it so we'll take

1913
01:29:30,060 --> 01:29:31,980
it on the mailer and start our group

1914
01:29:31,980 --> 01:29:34,879
adoption gone

1915
01:29:36,540 --> 01:29:40,820
okay thank you thank you

1916
01:29:40,920 --> 01:29:44,040
any comments or questions

1917
01:29:44,040 --> 01:29:46,800
so we are well we have one minute left

1918
01:29:46,800 --> 01:29:49,440
there is if you recall there is this if

1919
01:29:49,440 --> 01:29:52,320
time permits presentation so perhaps if

1920
01:29:52,320 --> 01:29:54,360
it's possible to do it maybe in five

1921
01:29:54,360 --> 01:29:57,320
minutes quickly

1922
01:29:58,020 --> 01:30:02,000
hangxi are you present yeah

1923
01:30:19,800 --> 01:30:22,739
okay hello everyone my name is Hunter

1924
01:30:22,739 --> 01:30:25,679
and I'm going to present an IP copy

1925
01:30:25,679 --> 01:30:29,600
extension next time please

1926
01:30:30,600 --> 01:30:32,760
yeah the background is really simple the

1927
01:30:32,760 --> 01:30:37,199
ipcon is compressed IP IP payload and

1928
01:30:37,199 --> 01:30:41,400
the the compressor penalty prepared with

1929
01:30:41,400 --> 01:30:44,159
ip.com header contains the compression

1930
01:30:44,159 --> 01:30:46,380
parameter index to indicate the

1931
01:30:46,380 --> 01:30:49,739
compression algorithm and is located in

1932
01:30:49,739 --> 01:30:53,480
the IP Circle this

1933
01:30:53,480 --> 01:30:57,919
registry no no sign please

1934
01:30:57,960 --> 01:31:00,960
thanks

1935
01:31:01,380 --> 01:31:03,900
yeah and under the problem with the IP

1936
01:31:03,900 --> 01:31:05,340
comes the first problem is that

1937
01:31:05,340 --> 01:31:08,100
incompatible with network function which

1938
01:31:08,100 --> 01:31:11,580
requires the name for information for uh

1939
01:31:11,580 --> 01:31:13,739
because and therefore information is is

1940
01:31:13,739 --> 01:31:15,980
already compressed

1941
01:31:15,980 --> 01:31:19,679
so for for example an ite file or ACL

1942
01:31:19,679 --> 01:31:22,860
menu to access this compressor

1943
01:31:22,860 --> 01:31:23,940
information

1944
01:31:23,940 --> 01:31:26,159
so they cannot deploy between the IG

1945
01:31:26,159 --> 01:31:29,900
comp nodes next size please

1946
01:31:31,159 --> 01:31:34,500
so the first extension is about do not

1947
01:31:34,500 --> 01:31:36,780
compress this Source proton destination

1948
01:31:36,780 --> 01:31:37,940
for the information

1949
01:31:37,940 --> 01:31:40,260
basically there are two options to do

1950
01:31:40,260 --> 01:31:42,900
that we can change the flags to add one

1951
01:31:42,900 --> 01:31:46,139
bit indication or we can change the CPI

1952
01:31:46,139 --> 01:31:48,659
to duplicate each compression algorithm

1953
01:31:48,659 --> 01:31:51,500
code point

1954
01:31:54,179 --> 01:31:57,000
and the second problem is that uh Auto

1955
01:31:57,000 --> 01:31:59,639
photo processing basically it's because

1956
01:31:59,639 --> 01:32:02,699
the ipcon May produce longer pay nodes

1957
01:32:02,699 --> 01:32:04,860
the compression is not effective for

1958
01:32:04,860 --> 01:32:08,280
example and the obviously says that if

1959
01:32:08,280 --> 01:32:11,820
uh if compression is not effective you

1960
01:32:11,820 --> 01:32:14,820
just send the uncompressed results and

1961
01:32:14,820 --> 01:32:17,780
the IP comp header but say in the

1962
01:32:17,780 --> 01:32:20,460
decompression side the packet with the

1963
01:32:20,460 --> 01:32:22,280
IP comp header will go through the

1964
01:32:22,280 --> 01:32:24,840
decompression code processor first but

1965
01:32:24,840 --> 01:32:27,540
if a package is without IP comparator it

1966
01:32:27,540 --> 01:32:29,699
will be forward directly so it's

1967
01:32:29,699 --> 01:32:32,400
different process is cause also of other

1968
01:32:32,400 --> 01:32:35,120
next

1969
01:32:36,300 --> 01:32:38,699
so the the second negotiation is about

1970
01:32:38,699 --> 01:32:42,420
so we add the ipcon header regardless of

1971
01:32:42,420 --> 01:32:44,760
the if the pain of this and uncompressed

1972
01:32:44,760 --> 01:32:47,880
or not we can just add a new CPI value

1973
01:32:47,880 --> 01:32:51,540
for the uncompressed packet next

1974
01:32:51,540 --> 01:32:55,219
next side please

1975
01:32:55,320 --> 01:32:58,860
yeah that's one basically we think a

1976
01:32:58,860 --> 01:33:00,780
signal also have some kind of

1977
01:33:00,780 --> 01:33:03,900
compression on the header so we think we

1978
01:33:03,900 --> 01:33:06,239
can ask a phone the suggestion about

1979
01:33:06,239 --> 01:33:08,580
this kind of design

1980
01:33:08,580 --> 01:33:10,699
thank you

1981
01:33:14,280 --> 01:33:17,599
anyone had a comments

1982
01:33:22,560 --> 01:33:25,199
so at the moment there are no comments

1983
01:33:25,199 --> 01:33:29,100
in the room or remotely perhaps it might

1984
01:33:29,100 --> 01:33:32,100
be good if you send a pointer to your

1985
01:33:32,100 --> 01:33:34,139
document to the secret reading list okay

1986
01:33:34,139 --> 01:33:36,840
just in case people have time to read it

1987
01:33:36,840 --> 01:33:38,880
also people who are not present in the

1988
01:33:38,880 --> 01:33:43,159
meeting okay sounds good

1989
01:33:43,679 --> 01:33:45,179
yeah

1990
01:33:45,179 --> 01:33:47,760
oh yeah okay

1991
01:33:47,760 --> 01:33:50,520
yeah so so did you hear the comment yeah

1992
01:33:50,520 --> 01:33:53,400
yeah okay okay so yeah

1993
01:33:53,400 --> 01:33:55,860
okay thank you

1994
01:33:55,860 --> 01:33:58,679
okay so the session ends here

1995
01:33:58,679 --> 01:34:01,980
thank you everyone for the participation

1996
01:34:01,980 --> 01:34:06,259
and hope to see you in Yokohama

1997
01:34:11,780 --> 01:34:15,199
thank you as well

1998
01:34:42,840 --> 01:34:45,380
thank you

1999
01:34:45,960 --> 01:34:48,139
foreign

