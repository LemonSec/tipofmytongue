1
00:00:04,860 --> 00:00:07,860
questions

2
00:00:19,699 --> 00:00:23,279
alrighty good afternoon everyone

3
00:00:23,279 --> 00:00:27,000
it is time we have a packed agenda so

4
00:00:27,000 --> 00:00:29,340
welcome to the trusted execution

5
00:00:29,340 --> 00:00:32,098
environment and provisioning and for the

6
00:00:32,098 --> 00:00:34,260
first time in a while you have both of

7
00:00:34,260 --> 00:00:36,780
the chairs here present and live

8
00:00:36,780 --> 00:00:40,440
so thank you hello everyone

9
00:00:40,440 --> 00:00:44,520
so David my colleague myself named

10
00:00:44,520 --> 00:00:45,960
again

11
00:00:45,960 --> 00:00:48,180
um you are attending the tip working

12
00:00:48,180 --> 00:00:50,160
group

13
00:00:50,160 --> 00:00:52,320
um by now you should be well aware of

14
00:00:52,320 --> 00:00:54,539
the note well which speaks to the

15
00:00:54,539 --> 00:00:56,760
intellectual property

16
00:00:56,760 --> 00:01:00,300
um and the ietf processes I

17
00:01:00,300 --> 00:01:03,180
will let you read the slide in the

18
00:01:03,180 --> 00:01:05,580
interest of time

19
00:01:05,580 --> 00:01:06,780
um

20
00:01:06,780 --> 00:01:08,880
meeting tips the only thing I'll call

21
00:01:08,880 --> 00:01:10,560
out but I think everybody here is

22
00:01:10,560 --> 00:01:13,020
following protocol for those in person

23
00:01:13,020 --> 00:01:15,119
please make sure that you are wearing

24
00:01:15,119 --> 00:01:18,900
your masks keep your audio and video off

25
00:01:18,900 --> 00:01:22,799
um we are running questions through the

26
00:01:22,799 --> 00:01:26,040
online Echo queue so for those in person

27
00:01:26,040 --> 00:01:28,380
to respect those who are remote

28
00:01:28,380 --> 00:01:30,840
please get on the Queue before

29
00:01:30,840 --> 00:01:31,500
um

30
00:01:31,500 --> 00:01:33,720
coming up to the mic

31
00:01:33,720 --> 00:01:36,060
okay

32
00:01:36,060 --> 00:01:37,860
code of conduct

33
00:01:37,860 --> 00:01:40,380
I think we're a pretty chill group so

34
00:01:40,380 --> 00:01:42,060
again just

35
00:01:42,060 --> 00:01:45,799
keep the discussions professional

36
00:01:46,140 --> 00:01:49,020
um okay so I think we've already gone

37
00:01:49,020 --> 00:01:51,720
through this thank you Peter and Chris

38
00:01:51,720 --> 00:01:52,920
for

39
00:01:52,920 --> 00:01:57,079
being volunteered to take notes

40
00:01:57,119 --> 00:01:59,820
um very much appreciated

41
00:01:59,820 --> 00:02:03,720
so agenda bash and uh

42
00:02:03,720 --> 00:02:06,899
will apologize to the presenters we had

43
00:02:06,899 --> 00:02:09,419
only requested 90 minutes as that was

44
00:02:09,419 --> 00:02:11,700
all that was needed in the past

45
00:02:11,700 --> 00:02:14,160
so

46
00:02:14,160 --> 00:02:18,540
oh so while um you all do get to present

47
00:02:18,540 --> 00:02:20,879
we had to cut your times a little bit

48
00:02:20,879 --> 00:02:22,560
short just to accommodate everybody

49
00:02:22,560 --> 00:02:26,160
who's presenting so as you can see we

50
00:02:26,160 --> 00:02:29,340
have a fairly packed agenda

51
00:02:29,340 --> 00:02:32,459
um we cannot take any new items for

52
00:02:32,459 --> 00:02:35,879
presentations but hopefully

53
00:02:35,879 --> 00:02:38,580
this is a time to bash the order and the

54
00:02:38,580 --> 00:02:41,280
time is that okay

55
00:02:41,280 --> 00:02:44,099
going once going twice

56
00:02:44,099 --> 00:02:47,340
okay so with that we can go ahead and

57
00:02:47,340 --> 00:02:48,959
get started

58
00:02:48,959 --> 00:02:52,620
and we'll have Ming

59
00:02:52,620 --> 00:02:56,300
I presume you want me to you

60
00:02:57,239 --> 00:03:00,620
uh yes hi

61
00:03:03,060 --> 00:03:06,060
foreign

62
00:03:21,360 --> 00:03:24,900
quicker summary here is a last item so

63
00:03:24,900 --> 00:03:28,140
we have a draft update from uh draft

64
00:03:28,140 --> 00:03:32,519
version 18 to 19 and this also has been

65
00:03:32,519 --> 00:03:35,519
in last call for several sessions right

66
00:03:35,519 --> 00:03:38,900
for Thomas and separate itfs and then

67
00:03:38,900 --> 00:03:41,940
for this update I would say

68
00:03:41,940 --> 00:03:42,920
um

69
00:03:42,920 --> 00:03:46,200
they are multiple review reviewers

70
00:03:46,200 --> 00:03:48,480
comments I try to address we have

71
00:03:48,480 --> 00:03:50,640
addressed all the comments and I will

72
00:03:50,640 --> 00:03:53,879
receive the many feedback one for the um

73
00:03:53,879 --> 00:03:57,180
things here I need to mention is uh I

74
00:03:57,180 --> 00:03:58,319
didn't know

75
00:03:58,319 --> 00:04:00,480
um some of the comments because they

76
00:04:00,480 --> 00:04:03,120
were not in a cheap email thread that

77
00:04:03,120 --> 00:04:05,340
there was a tracking and I found out

78
00:04:05,340 --> 00:04:07,680
from a teamwork group page I find

79
00:04:07,680 --> 00:04:08,900
several

80
00:04:08,900 --> 00:04:12,000
comments and you can see the

81
00:04:12,000 --> 00:04:15,360
um from 80 from a circuit directory from

82
00:04:15,360 --> 00:04:17,820
Ben and Schwartz

83
00:04:17,820 --> 00:04:22,079
and uh from Paul they are uh they give

84
00:04:22,079 --> 00:04:25,860
comments over old version 16 but still a

85
00:04:25,860 --> 00:04:29,040
lot of applies so we took those uh

86
00:04:29,040 --> 00:04:32,400
comments and uh all replied so they have

87
00:04:32,400 --> 00:04:37,080
it and then we have uh Bob Hollis and

88
00:04:37,080 --> 00:04:40,919
honest uh comments over uh version 18.

89
00:04:40,919 --> 00:04:44,820
we also have a comment from Roman at the

90
00:04:44,820 --> 00:04:48,479
Robert uh Walton so totally about seven

91
00:04:48,479 --> 00:04:51,900
people's comments and this adds up

92
00:04:51,900 --> 00:04:54,720
there's a quite some comments there's a

93
00:04:54,720 --> 00:04:57,479
uh many ones I would say highlight it's

94
00:04:57,479 --> 00:04:59,580
a one is a Security review because it's

95
00:04:59,580 --> 00:05:01,680
got two from a Security review that was

96
00:05:01,680 --> 00:05:04,919
from old version but there's some still

97
00:05:04,919 --> 00:05:07,560
the sum and we um

98
00:05:07,560 --> 00:05:10,020
we find still applicable and we made

99
00:05:10,020 --> 00:05:11,820
some updates

100
00:05:11,820 --> 00:05:15,120
uh majority of them are

101
00:05:15,120 --> 00:05:17,580
um minor updates so we'll go with some

102
00:05:17,580 --> 00:05:20,400
of them so I have about that

103
00:05:20,400 --> 00:05:23,340
um 18 slides next let's try to run fast

104
00:05:23,340 --> 00:05:26,699
in 20 minutes and we'll see mostly the

105
00:05:26,699 --> 00:05:28,919
main ones will talk yeah the next one

106
00:05:28,919 --> 00:05:31,259
all right so this one from Ben's

107
00:05:31,259 --> 00:05:35,340
comments uh is from old version 16. uh

108
00:05:35,340 --> 00:05:37,500
the main question about the name and

109
00:05:37,500 --> 00:05:40,039
terminology about uh trusted application

110
00:05:40,039 --> 00:05:43,199
uh the code toss application and we use

111
00:05:43,199 --> 00:05:46,919
ta everywhere and his suggestion we

112
00:05:46,919 --> 00:05:49,320
should call The Trusted component

113
00:05:49,320 --> 00:05:51,900
and the second one is about the question

114
00:05:51,900 --> 00:05:54,020
he has but um

115
00:05:54,020 --> 00:05:56,840
contrasted it doesn't look right uh

116
00:05:56,840 --> 00:06:00,600
objective to maybe it's isolated so this

117
00:06:00,600 --> 00:06:03,539
is the old one now we had some email uh

118
00:06:03,539 --> 00:06:07,740
conversation and uh also a discussion on

119
00:06:07,740 --> 00:06:09,780
the first one about the code Choice

120
00:06:09,780 --> 00:06:13,259
application at TA in a documentary said

121
00:06:13,259 --> 00:06:14,900
uh

122
00:06:14,900 --> 00:06:19,500
uh three things first one is uh protocol

123
00:06:19,500 --> 00:06:22,860
spec already using traffic component

124
00:06:22,860 --> 00:06:25,020
and the second one is the TA the

125
00:06:25,020 --> 00:06:27,840
definitely I could talk with

126
00:06:27,840 --> 00:06:29,880
our definition conversation we already

127
00:06:29,880 --> 00:06:32,120
said this Choice application May means

128
00:06:32,120 --> 00:06:35,039
application or in some application

129
00:06:35,039 --> 00:06:37,440
application component so we already

130
00:06:37,440 --> 00:06:41,819
space for that third one said ta is also

131
00:06:41,819 --> 00:06:44,160
common industrial terminology in terms

132
00:06:44,160 --> 00:06:45,840
of term

133
00:06:45,840 --> 00:06:49,020
um we uh what's changed we are at is we

134
00:06:49,020 --> 00:06:52,919
add the reference uh in the spec

135
00:06:52,919 --> 00:06:55,919
so when we said application

136
00:06:55,919 --> 00:06:58,680
um component running inside T refer that

137
00:06:58,680 --> 00:06:59,960
to

138
00:06:59,960 --> 00:07:03,960
for example a global platform or open

139
00:07:03,960 --> 00:07:07,139
source te they are all called ta and as

140
00:07:07,139 --> 00:07:10,319
a trans application so so we still keep

141
00:07:10,319 --> 00:07:12,360
that way and we better with definition

142
00:07:12,360 --> 00:07:14,880
we cover the post

143
00:07:14,880 --> 00:07:17,400
so that's a part of the the terminology

144
00:07:17,400 --> 00:07:20,639
aspect uh with regard to word trust the

145
00:07:20,639 --> 00:07:22,380
application words oscillator application

146
00:07:22,380 --> 00:07:25,259
or actually component

147
00:07:25,259 --> 00:07:28,440
um we discussed decent goes that one

148
00:07:28,440 --> 00:07:32,460
it's a still uh right uh modifier to set

149
00:07:32,460 --> 00:07:35,220
because you trust the

150
00:07:35,220 --> 00:07:36,440
um

151
00:07:36,440 --> 00:07:38,819
components at the time in stores right

152
00:07:38,819 --> 00:07:41,160
still is trusted

153
00:07:41,160 --> 00:07:43,160
um

154
00:07:43,740 --> 00:07:45,479
so that's for this one

155
00:07:45,479 --> 00:07:48,180
any questions I'll just move to next

156
00:07:48,180 --> 00:07:50,539
slide

157
00:07:51,539 --> 00:07:55,800
all right then if you use this minor uh

158
00:07:55,800 --> 00:07:58,680
clarification questions uh maybe you got

159
00:07:58,680 --> 00:08:01,259
a nice area

160
00:08:01,259 --> 00:08:04,080
first one I've been asking for some

161
00:08:04,080 --> 00:08:05,940
clarification maybe some discussion

162
00:08:05,940 --> 00:08:09,419
about what the device owner can do but I

163
00:08:09,419 --> 00:08:12,240
would say this one is was an older

164
00:08:12,240 --> 00:08:16,199
version 16 in uh 17 18 later and we

165
00:08:16,199 --> 00:08:17,520
added definition but device

166
00:08:17,520 --> 00:08:20,220
administrator for a while and in the

167
00:08:20,220 --> 00:08:23,520
device administrator which is clearly

168
00:08:23,520 --> 00:08:27,479
specifies what the the Privileges or

169
00:08:27,479 --> 00:08:29,340
rules are the ones the demonstrator has

170
00:08:29,340 --> 00:08:31,919
and the owner has right then with

171
00:08:31,919 --> 00:08:35,640
specify already is that the

172
00:08:35,640 --> 00:08:37,440
decision maker is the master

173
00:08:37,440 --> 00:08:40,380
demonstrator and secondly trust

174
00:08:40,380 --> 00:08:43,559
applications uh installation delegate to

175
00:08:43,559 --> 00:08:45,720
the time right time has a privilege to

176
00:08:45,720 --> 00:08:48,120
install or we have a demonstrator so

177
00:08:48,120 --> 00:08:51,120
that clarified then uh bing has several

178
00:08:51,120 --> 00:08:53,720
uh suggestions about the reward change

179
00:08:53,720 --> 00:08:58,140
uh for example here the right of uh

180
00:08:58,140 --> 00:09:01,080
verified rights of developers working

181
00:09:01,080 --> 00:09:04,920
from rights as to permissions for rights

182
00:09:04,920 --> 00:09:08,040
to Broad right it's a kind of a loaded

183
00:09:08,040 --> 00:09:09,540
eye term

184
00:09:09,540 --> 00:09:13,080
uh next one I have some incomplete

185
00:09:13,080 --> 00:09:16,080
sentence it's a that they

186
00:09:16,080 --> 00:09:18,120
um the installation talk about key

187
00:09:18,120 --> 00:09:21,540
installation says it's uh needed so that

188
00:09:21,540 --> 00:09:24,060
uh untrusted app can continue so it's

189
00:09:24,060 --> 00:09:26,040
instead should say installation of

190
00:09:26,040 --> 00:09:30,360
untrust app can continue I can complete

191
00:09:30,360 --> 00:09:31,920
um then there's a one sentence where

192
00:09:31,920 --> 00:09:35,339
it's considered confidential then we

193
00:09:35,339 --> 00:09:38,100
didn't specify by whom and from who that

194
00:09:38,100 --> 00:09:40,940
uh he said we add some more information

195
00:09:40,940 --> 00:09:44,040
so we took a suggestion

196
00:09:44,040 --> 00:09:47,459
and making a modification in a below the

197
00:09:47,459 --> 00:09:51,000
number four or I said for example by

198
00:09:51,000 --> 00:09:52,860
whom right for example when developer

199
00:09:52,860 --> 00:09:55,500
who want to provide ta without revealing

200
00:09:55,500 --> 00:09:58,380
is equal to others as a case

201
00:09:58,380 --> 00:10:01,320
uh he then I

202
00:10:01,320 --> 00:10:05,279
by the way I would say this uh

203
00:10:05,279 --> 00:10:08,220
um comments below I don't go through by

204
00:10:08,220 --> 00:10:10,560
person I go through sections Section 1

205
00:10:10,560 --> 00:10:13,140
to section 9. so section one is also

206
00:10:13,140 --> 00:10:16,080
common from a romance about uh about the

207
00:10:16,080 --> 00:10:19,560
wording says danger of attacks or the

208
00:10:19,560 --> 00:10:21,540
consuming tax and we change your word

209
00:10:21,540 --> 00:10:25,980
from danger to risk of tax some just

210
00:10:25,980 --> 00:10:28,140
some of that criminology change there so

211
00:10:28,140 --> 00:10:32,540
making them more readable or excellent

212
00:10:32,820 --> 00:10:35,760
and next slide

213
00:10:35,760 --> 00:10:38,160
so now we're just think just wanted to

214
00:10:38,160 --> 00:10:39,779
doesn't have much of a comments section

215
00:10:39,779 --> 00:10:40,680
three

216
00:10:40,680 --> 00:10:45,000
uh sorry for the formats uh

217
00:10:45,000 --> 00:10:47,640
since there is a use case examples this

218
00:10:47,640 --> 00:10:51,779
one is being asked say for trusted user

219
00:10:51,779 --> 00:10:55,680
interface and the question is anything

220
00:10:55,680 --> 00:10:57,959
um example in a mobile device it's a

221
00:10:57,959 --> 00:11:01,279
smaller mobile device you have trusted

222
00:11:01,279 --> 00:11:04,200
feral that is not actually performing

223
00:11:04,200 --> 00:11:07,560
The Trusted anode from normal uh OS it

224
00:11:07,560 --> 00:11:09,839
looks like uh it's a theoretical there's

225
00:11:09,839 --> 00:11:13,320
no example and then then uh David you

226
00:11:13,320 --> 00:11:15,660
know sex David here the seller has

227
00:11:15,660 --> 00:11:19,019
comments yet so we know you for Point of

228
00:11:19,019 --> 00:11:21,180
Sales point of sale devices payment

229
00:11:21,180 --> 00:11:23,820
devices then it's extensive to use that

230
00:11:23,820 --> 00:11:26,279
uh need to trust the UI right over the

231
00:11:26,279 --> 00:11:29,940
top p and so on so we uh the changes we

232
00:11:29,940 --> 00:11:33,140
expand the description says trusted

233
00:11:33,140 --> 00:11:36,060
usage interface maybe using mobile

234
00:11:36,060 --> 00:11:38,519
device or point of a cell device we

235
00:11:38,519 --> 00:11:40,140
added that point of sales device there

236
00:11:40,140 --> 00:11:42,480
so he

237
00:11:42,480 --> 00:11:44,700
uh for that because this is a permanent

238
00:11:44,700 --> 00:11:47,579
use case anyway so we should add that so

239
00:11:47,579 --> 00:11:49,079
that was added

240
00:11:49,079 --> 00:11:52,040
and next please

241
00:11:54,980 --> 00:11:57,420
iot use the case again about the

242
00:11:57,420 --> 00:11:59,160
examples several classifications

243
00:11:59,160 --> 00:12:00,360
actually

244
00:12:00,360 --> 00:12:04,560
well one is uh Ben commented what kind

245
00:12:04,560 --> 00:12:08,339
of give example right which is iot

246
00:12:08,339 --> 00:12:11,339
devices that

247
00:12:11,339 --> 00:12:12,120
um

248
00:12:12,120 --> 00:12:15,959
cannot allow ieos to run a certain

249
00:12:15,959 --> 00:12:17,760
accurators

250
00:12:17,760 --> 00:12:20,820
and uh Inez Robles

251
00:12:20,820 --> 00:12:23,519
um asked as a different one says what

252
00:12:23,519 --> 00:12:26,959
kind of artistic devices fit to

253
00:12:26,959 --> 00:12:30,180
run deeper protocol that way so what's a

254
00:12:30,180 --> 00:12:32,579
capable he was suggesting whether we can

255
00:12:32,579 --> 00:12:34,920
specify particular classes for example

256
00:12:34,920 --> 00:12:39,000
use IFC 7228

257
00:12:39,180 --> 00:12:41,760
um and more uh other discussions

258
00:12:41,760 --> 00:12:44,639
therefore I just want what classes of

259
00:12:44,639 --> 00:12:49,620
iot devices say that RFC 7228 don't

260
00:12:49,620 --> 00:12:52,560
really Define the capacities about

261
00:12:52,560 --> 00:12:55,079
whatever fit the protocol what it says

262
00:12:55,079 --> 00:12:58,740
in general we don't specify that we just

263
00:12:58,740 --> 00:13:02,220
leave that to adopters right they can

264
00:13:02,220 --> 00:13:05,220
decide and they could check oh the code

265
00:13:05,220 --> 00:13:08,100
right the code capacity could resource

266
00:13:08,100 --> 00:13:11,639
need that the device will capacitor face

267
00:13:11,639 --> 00:13:13,260
to that one

268
00:13:13,260 --> 00:13:16,620
now with regard example uh being asked

269
00:13:16,620 --> 00:13:19,139
and there's a multiple discussion from

270
00:13:19,139 --> 00:13:22,320
uh Dave and he has a demo some devices

271
00:13:22,320 --> 00:13:26,420
which can provide that brand has

272
00:13:26,420 --> 00:13:30,660
replies in a mailing list so what do we

273
00:13:30,660 --> 00:13:34,380
end up is a you know as a update in the

274
00:13:34,380 --> 00:13:36,120
draft we added

275
00:13:36,120 --> 00:13:40,740
the global platform t as a reference and

276
00:13:40,740 --> 00:13:43,440
we add that example as it was sitting in

277
00:13:43,440 --> 00:13:45,779
a paragraph you can read here for

278
00:13:45,779 --> 00:13:48,839
example glow plug for T use the term

279
00:13:48,839 --> 00:13:51,959
transferred for all to refer to such

280
00:13:51,959 --> 00:13:55,200
things which can be accessible only from

281
00:13:55,200 --> 00:13:57,660
T and the concepts used

282
00:13:57,660 --> 00:14:01,440
uh in some complex devices today too so

283
00:14:01,440 --> 00:14:05,519
that's as of this comments

284
00:14:05,519 --> 00:14:08,540
and next slide

285
00:14:09,540 --> 00:14:11,760
this is the most of the controversial I

286
00:14:11,760 --> 00:14:15,000
would say most important one is update

287
00:14:15,000 --> 00:14:17,459
um being as part of Security review you

288
00:14:17,459 --> 00:14:21,000
said well we managed the trust anchors

289
00:14:21,000 --> 00:14:25,519
we inspired to trust right what uh

290
00:14:26,000 --> 00:14:30,899
whatever time is hostile time right

291
00:14:30,899 --> 00:14:34,800
and Brandon also um has comments from

292
00:14:34,800 --> 00:14:36,540
last ITF

293
00:14:36,540 --> 00:14:39,839
about the straight description we

294
00:14:39,839 --> 00:14:43,440
already have in section 9.5 I talk about

295
00:14:43,440 --> 00:14:45,959
a compromise time right earlier was

296
00:14:45,959 --> 00:14:47,820
pretty brief one line

297
00:14:47,820 --> 00:14:51,300
the third we felt that we need any more

298
00:14:51,300 --> 00:14:54,360
but the potential mitigations what uh uh

299
00:14:54,360 --> 00:14:57,959
administrator what a system can do to

300
00:14:57,959 --> 00:14:59,880
mitigate this right

301
00:14:59,880 --> 00:15:02,579
um as a part of a threat so there'll be

302
00:15:02,579 --> 00:15:04,860
a long revision here as I quoted here

303
00:15:04,860 --> 00:15:07,320
it's pretty long I guess I don't need a

304
00:15:07,320 --> 00:15:09,720
rhythm through

305
00:15:09,720 --> 00:15:11,639
um the first line is the original one

306
00:15:11,639 --> 00:15:14,699
then remaining we added moreover say

307
00:15:14,699 --> 00:15:17,820
potentially uh candidates as few ideas

308
00:15:17,820 --> 00:15:21,959
to mitigate stress what

309
00:15:21,959 --> 00:15:24,480
a tip agent a device owner Dimension can

310
00:15:24,480 --> 00:15:27,480
do so what we added a largely below is

311
00:15:27,480 --> 00:15:29,579
that to mitigate the threat

312
00:15:29,579 --> 00:15:31,860
tip agents and device owners have

313
00:15:31,860 --> 00:15:35,820
several options they included but not a

314
00:15:35,820 --> 00:15:37,860
limit to this we have just a few kinds

315
00:15:37,860 --> 00:15:39,300
of that because we cannotic it's also

316
00:15:39,300 --> 00:15:42,600
list also implementation specific

317
00:15:42,600 --> 00:15:44,279
um and everyone will say oh you can

318
00:15:44,279 --> 00:15:47,100
apply an echo right to the camera key so

319
00:15:47,100 --> 00:15:49,579
in the right side so I can limit the uh

320
00:15:49,579 --> 00:15:52,860
threat or damage from compromise attack

321
00:15:52,860 --> 00:15:55,500
right Echo can control that

322
00:15:55,500 --> 00:15:58,680
um or use a transparent lock that's more

323
00:15:58,680 --> 00:16:02,160
of a company compromise time right and

324
00:16:02,160 --> 00:16:04,800
transparator log can

325
00:16:04,800 --> 00:16:07,199
um expose

326
00:16:07,199 --> 00:16:08,339
um

327
00:16:08,339 --> 00:16:12,660
what that ts are using and versus what a

328
00:16:12,660 --> 00:16:15,300
Time published whether they well

329
00:16:15,300 --> 00:16:17,699
legitimate time they will publish or

330
00:16:17,699 --> 00:16:19,560
what do they will support if you

331
00:16:19,560 --> 00:16:22,260
compromise the ts are not in the list it

332
00:16:22,260 --> 00:16:24,480
discovers that there's a mismatch this

333
00:16:24,480 --> 00:16:29,360
case a compromise case time case

334
00:16:29,399 --> 00:16:32,339
um also I could use a method for example

335
00:16:32,339 --> 00:16:35,220
remove the excitation of the time right

336
00:16:35,220 --> 00:16:38,459
reverse other side So today we're going

337
00:16:38,459 --> 00:16:41,639
to remote acceptation of device two time

338
00:16:41,639 --> 00:16:44,399
now you can do time to device as well in

339
00:16:44,399 --> 00:16:46,680
other ways

340
00:16:46,680 --> 00:16:49,259
um there are other ways whether we just

341
00:16:49,259 --> 00:16:52,860
list several Fields possible at a likely

342
00:16:52,860 --> 00:16:54,060
feasible

343
00:16:54,060 --> 00:16:59,100
a regular Hospital time that we're a

344
00:16:59,100 --> 00:17:01,920
Time provider intentionally abuse the

345
00:17:01,920 --> 00:17:04,619
devices right abuse digital devices not

346
00:17:04,619 --> 00:17:07,319
a compromised in such a way but hacker

347
00:17:07,319 --> 00:17:10,260
but I would consider is we have multiple

348
00:17:10,260 --> 00:17:13,380
discussions with um within the authors

349
00:17:13,380 --> 00:17:18,980
also uh like Brandon so we felt that uh

350
00:17:18,980 --> 00:17:22,319
there's a hostile time is equivalent to

351
00:17:22,319 --> 00:17:24,359
a computer time it's a special case of a

352
00:17:24,359 --> 00:17:27,179
comfortable compromise tab in this case

353
00:17:27,179 --> 00:17:29,820
the people and team are the executives

354
00:17:29,820 --> 00:17:33,480
in terms or management is compromised

355
00:17:33,480 --> 00:17:37,799
right so so we consider it's a um it's

356
00:17:37,799 --> 00:17:40,440
equivalent and we use it why this is the

357
00:17:40,440 --> 00:17:41,160
same

358
00:17:41,160 --> 00:17:44,280
um category come from times right to

359
00:17:44,280 --> 00:17:47,520
cover both

360
00:17:47,520 --> 00:17:49,700
foreign

361
00:18:43,640 --> 00:18:47,340
just to make it completely explicit

362
00:18:47,340 --> 00:18:50,820
I think this is just straightforward uh

363
00:18:50,820 --> 00:18:53,600
next slide please

364
00:18:56,220 --> 00:18:56,820
um

365
00:18:56,820 --> 00:19:00,480
this was about the classification uh for

366
00:19:00,480 --> 00:19:04,020
that who contacted food first uh this

367
00:19:04,020 --> 00:19:09,059
was from Bob Haley comment uh we said

368
00:19:09,059 --> 00:19:12,120
Pam cannot contact team the device right

369
00:19:12,120 --> 00:19:15,720
time cannot contact a tip agent

370
00:19:15,720 --> 00:19:17,880
either for the firewall for my reasons

371
00:19:17,880 --> 00:19:20,400
with a usually TV broker initiative

372
00:19:20,400 --> 00:19:23,700
contact or we have a device tip agent

373
00:19:23,700 --> 00:19:25,200
talk with time

374
00:19:25,200 --> 00:19:29,280
and a few questions uh says that uh

375
00:19:29,280 --> 00:19:32,220
where the tip agent must ask the broker

376
00:19:32,220 --> 00:19:34,860
to initiate time or

377
00:19:34,860 --> 00:19:36,840
broke condition

378
00:19:36,840 --> 00:19:39,840
only when trigger that right we can

379
00:19:39,840 --> 00:19:40,980
trigger that

380
00:19:40,980 --> 00:19:45,179
so we revised we revised this uh

381
00:19:45,179 --> 00:19:47,940
paragraph as it is largely David made a

382
00:19:47,940 --> 00:19:50,160
change Dave do you want to say you know

383
00:19:50,160 --> 00:19:52,080
what

384
00:19:52,080 --> 00:19:56,299
tuck this one or I can read here

385
00:19:56,520 --> 00:19:58,740
he says he's good I've just read that so

386
00:19:58,740 --> 00:20:00,720
I guess you need to speak otherwise okay

387
00:20:00,720 --> 00:20:05,240
uh so we just says um

388
00:20:05,580 --> 00:20:07,799
explain a little bit more it says it's a

389
00:20:07,799 --> 00:20:08,820
protocol

390
00:20:08,820 --> 00:20:10,260
um architecture

391
00:20:10,260 --> 00:20:12,360
is a particular highlighted architecture

392
00:20:12,360 --> 00:20:15,720
in figure one a communist case well uh

393
00:20:15,720 --> 00:20:18,299
as other less strict restricted by

394
00:20:18,299 --> 00:20:22,200
leaving details of this appropriate team

395
00:20:22,200 --> 00:20:23,580
to the

396
00:20:23,580 --> 00:20:27,179
uh deeper transport protocol for example

397
00:20:27,179 --> 00:20:29,160
one defined

398
00:20:29,160 --> 00:20:31,320
um that David is back right people over

399
00:20:31,320 --> 00:20:33,840
HTTP

400
00:20:33,840 --> 00:20:35,760
um that's the main one and it would

401
00:20:35,760 --> 00:20:41,160
describe uh to explain says that patient

402
00:20:41,160 --> 00:20:44,580
um Rusty when it is running in a user

403
00:20:44,580 --> 00:20:47,700
devices inside devices one uh firewalls

404
00:20:47,700 --> 00:20:48,480
will

405
00:20:48,480 --> 00:20:51,360
normally uh does not allow external

406
00:20:51,360 --> 00:20:55,080
access to it so then we usually

407
00:20:55,080 --> 00:20:57,960
um we need a kind of a tip broker to

408
00:20:57,960 --> 00:21:00,120
initiate right to initiate that contact

409
00:21:00,120 --> 00:21:03,780
or we have a tip agent so that's a I

410
00:21:03,780 --> 00:21:06,780
don't need to read a little word by word

411
00:21:06,780 --> 00:21:09,360
um so this is just for clarification is

412
00:21:09,360 --> 00:21:11,880
no no different major material change I

413
00:21:11,880 --> 00:21:15,860
would say next side next slide please

414
00:21:15,860 --> 00:21:19,500
uh this one is also uh it's an editorial

415
00:21:19,500 --> 00:21:22,260
change uh thanks to Bob Holly

416
00:21:22,260 --> 00:21:25,500
um and notice that uh notations as an

417
00:21:25,500 --> 00:21:27,720
early I didn't put the early one only

418
00:21:27,720 --> 00:21:30,780
one called app dashing one app dash 2 ta

419
00:21:30,780 --> 00:21:33,240
without Dash ta1 tier two whether Dash

420
00:21:33,240 --> 00:21:35,760
he said online let's make it consistent

421
00:21:35,760 --> 00:21:39,960
I will use a SIM format right app we

422
00:21:39,960 --> 00:21:41,520
already called the untrusted app let's

423
00:21:41,520 --> 00:21:44,220
call it UA right so then Everywhere You

424
00:21:44,220 --> 00:21:47,340
stash Time Dash on time Dash two so this

425
00:21:47,340 --> 00:21:51,299
is this is Kernel one we I made a minor

426
00:21:51,299 --> 00:21:53,340
changes everything just uses that format

427
00:21:53,340 --> 00:21:54,900
ta Dash

428
00:21:54,900 --> 00:21:57,600
UA dash time Dash and I want to so

429
00:21:57,600 --> 00:22:00,000
that's the update

430
00:22:00,000 --> 00:22:02,100
um no material change just a simple

431
00:22:02,100 --> 00:22:06,980
notation change uh next slide please

432
00:22:07,980 --> 00:22:11,400
uh this one I do need a cloud

433
00:22:11,400 --> 00:22:14,480
um Bank commented on the use of a must

434
00:22:14,480 --> 00:22:16,679
in multiple places it would save

435
00:22:16,679 --> 00:22:18,840
examples say implementation must support

436
00:22:18,840 --> 00:22:20,100
encryption

437
00:22:20,100 --> 00:22:22,500
now the algorithm must support the

438
00:22:22,500 --> 00:22:25,260
integrated protection that must we use a

439
00:22:25,260 --> 00:22:27,780
low test a lowercase I highlight this

440
00:22:27,780 --> 00:22:29,640
from here we you know actually

441
00:22:29,640 --> 00:22:32,520
documented we do not use uh uppercase

442
00:22:32,520 --> 00:22:35,760
must rather than some spec or some well

443
00:22:35,760 --> 00:22:38,280
we do use in some respect too but for

444
00:22:38,280 --> 00:22:40,080
the acute document which is not

445
00:22:40,080 --> 00:22:42,240
intentionally

446
00:22:42,240 --> 00:22:45,140
um there's a debit card it's a

447
00:22:45,140 --> 00:22:48,419
uh comments uh you know very less online

448
00:22:48,419 --> 00:22:50,940
and we quoted here

449
00:22:50,940 --> 00:22:52,200
um

450
00:22:52,200 --> 00:22:54,840
I guess some part of ieta which is some

451
00:22:54,840 --> 00:22:57,240
people will have some feedback they

452
00:22:57,240 --> 00:22:59,039
don't always like to use that uh

453
00:22:59,039 --> 00:23:02,640
uppercase and we took that feedback so

454
00:23:02,640 --> 00:23:04,799
it's just to use just a normal word

455
00:23:04,799 --> 00:23:07,520
regular case

456
00:23:07,679 --> 00:23:09,780
so that explains I think that the main

457
00:23:09,780 --> 00:23:12,600
one the others are uh just a tutorial

458
00:23:12,600 --> 00:23:15,000
change I'll just uh let's skip this one

459
00:23:15,000 --> 00:23:17,460
let's continue

460
00:23:17,460 --> 00:23:20,720
next slide please

461
00:23:21,179 --> 00:23:24,000
uh clever supported in quick goodness

462
00:23:24,000 --> 00:23:27,120
that uh this is from Roman uh Roman um

463
00:23:27,120 --> 00:23:28,559
comment

464
00:23:28,559 --> 00:23:30,840
support encryption his question about

465
00:23:30,840 --> 00:23:34,260
encryption for data address or data in

466
00:23:34,260 --> 00:23:35,280
motion

467
00:23:35,280 --> 00:23:38,280
we we make it explicit we add one says

468
00:23:38,280 --> 00:23:41,820
this in question purpose is to uh used

469
00:23:41,820 --> 00:23:44,580
to ensure and no personalization is

470
00:23:44,580 --> 00:23:46,500
sending it clear it's a data in motion

471
00:23:46,500 --> 00:23:49,200
protection uh

472
00:23:49,200 --> 00:23:53,299
mm-hmm next slide please

473
00:23:54,120 --> 00:23:57,720
uh section 4.5 is good catch by two

474
00:23:57,720 --> 00:24:01,559
people a poor and a robber will both

475
00:24:01,559 --> 00:24:04,080
said is a sequence and I don't know

476
00:24:04,080 --> 00:24:07,140
really right and a really nice that a

477
00:24:07,140 --> 00:24:09,360
good catch here but he said we will

478
00:24:09,360 --> 00:24:12,840
adjust it it's a it really says when the

479
00:24:12,840 --> 00:24:15,659
installation normal app happens it felt

480
00:24:15,659 --> 00:24:18,020
uh

481
00:24:26,000 --> 00:24:29,820
from there and then that uh trust

482
00:24:29,820 --> 00:24:31,860
application usually happens that one

483
00:24:31,860 --> 00:24:34,020
after normal app is installed it may

484
00:24:34,020 --> 00:24:35,700
come with a long ways together maybe

485
00:24:35,700 --> 00:24:38,520
bundled but step is just yet I have

486
00:24:38,520 --> 00:24:40,440
normal app happens names start to

487
00:24:40,440 --> 00:24:44,900
install The Trusted application so that

488
00:24:44,900 --> 00:24:48,539
in step one we have an enp two-step we

489
00:24:48,539 --> 00:24:51,600
just make it after a then a user can

490
00:24:51,600 --> 00:24:54,900
already download the app and install and

491
00:24:54,900 --> 00:24:57,000
at that time if you need tats already

492
00:24:57,000 --> 00:24:59,220
supplied to time right so that timeline

493
00:24:59,220 --> 00:25:01,320
here just to make is a installer

494
00:25:01,320 --> 00:25:03,960
sequence this way it's a it'd be more

495
00:25:03,960 --> 00:25:06,659
natural than the origin background so

496
00:25:06,659 --> 00:25:08,880
you can see difference already step one

497
00:25:08,880 --> 00:25:12,240
three four here then two a two B is a

498
00:25:12,240 --> 00:25:15,240
it's a three is in mid of two and two B

499
00:25:15,240 --> 00:25:18,059
so that's the change instead of the

500
00:25:18,059 --> 00:25:22,200
Three Can Happen must happen after B uh

501
00:25:22,200 --> 00:25:24,539
it's about right but you know this one's

502
00:25:24,539 --> 00:25:27,779
also um maybe more natural

503
00:25:27,779 --> 00:25:30,080
foreign

504
00:25:30,080 --> 00:25:33,379
next slide

505
00:25:38,279 --> 00:25:40,500
ah this kind of major change so the

506
00:25:40,500 --> 00:25:44,700
current paragraph says a in section 6.1

507
00:25:44,700 --> 00:25:47,580
but rule of a TV Brokers the first line

508
00:25:47,580 --> 00:25:50,400
says a cheaper broker abstracts the

509
00:25:50,400 --> 00:25:53,640
imaginative change after makes change uh

510
00:25:53,640 --> 00:25:56,159
Ben and Roman both the commented well

511
00:25:56,159 --> 00:25:58,279
it's a rule Minister for defense email

512
00:25:58,279 --> 00:26:02,460
what that means program what does object

513
00:26:02,460 --> 00:26:05,580
mean so we uh David referred to this

514
00:26:05,580 --> 00:26:07,919
paragraph So we just remove word app

515
00:26:07,919 --> 00:26:10,799
track to explain it in plain language so

516
00:26:10,799 --> 00:26:14,159
we just said tip broker interacts now so

517
00:26:14,159 --> 00:26:16,500
just what what an abstract means there's

518
00:26:16,500 --> 00:26:18,179
really explaining intact with cheap

519
00:26:18,179 --> 00:26:22,919
agent inside T and the job is relay and

520
00:26:22,919 --> 00:26:25,500
message between tip agent attack the

521
00:26:25,500 --> 00:26:27,720
remaining follows right I would say this

522
00:26:27,720 --> 00:26:31,020
uh no um material changes somewhere more

523
00:26:31,020 --> 00:26:32,940
a little more explanations and what the

524
00:26:32,940 --> 00:26:34,620
abstract means it's really just a

525
00:26:34,620 --> 00:26:38,580
defined uh flow and it's a role

526
00:26:38,580 --> 00:26:40,860
and next slide please

527
00:26:40,860 --> 00:26:43,020
hey man you're running over so we'll

528
00:26:43,020 --> 00:26:44,460
give you one more command if you can

529
00:26:44,460 --> 00:26:48,620
wrap up okay okay yeah

530
00:26:48,900 --> 00:26:51,799
yeah and skip the ones which you think

531
00:26:51,799 --> 00:26:54,840
we can review it offline right can you

532
00:26:54,840 --> 00:26:57,120
focus on the slides which you think the

533
00:26:57,120 --> 00:26:59,820
working group needs to hear right now

534
00:26:59,820 --> 00:27:01,679
skip to the slide which you think is a

535
00:27:01,679 --> 00:27:02,940
very critical comment hello someone

536
00:27:02,940 --> 00:27:04,919
speak

537
00:27:04,919 --> 00:27:07,679
I was saying uh can you skip can you

538
00:27:07,679 --> 00:27:09,120
move to the slides which you think are

539
00:27:09,120 --> 00:27:12,200
quite critical yes yes

540
00:27:12,200 --> 00:27:15,120
next slide

541
00:27:15,120 --> 00:27:17,460
just roll it

542
00:27:17,460 --> 00:27:20,720
and next slide

543
00:27:21,720 --> 00:27:24,720
uh next slide because those are all the

544
00:27:24,720 --> 00:27:28,500
you can share uh sliding next slide

545
00:27:28,500 --> 00:27:32,460
because others are just a minor update

546
00:27:32,460 --> 00:27:33,299
um

547
00:27:33,299 --> 00:27:35,640
so class okay or just a class of devices

548
00:27:35,640 --> 00:27:39,480
we add a reference to the middle one

549
00:27:39,480 --> 00:27:41,400
means the class of the class of devices

550
00:27:41,400 --> 00:27:45,120
refer to it in adaptation next slide I

551
00:27:45,120 --> 00:27:48,500
want to go to the next slide

552
00:27:50,179 --> 00:27:53,340
next slide yeah this one's uh already

553
00:27:53,340 --> 00:27:56,340
covered this one I just said we did a

554
00:27:56,340 --> 00:27:59,220
made update inclusive language this is

555
00:27:59,220 --> 00:28:01,440
from multiple production Lars and

556
00:28:01,440 --> 00:28:04,559
romance and we change many in the middle

557
00:28:04,559 --> 00:28:08,220
to manipulate in the middle okay so I

558
00:28:08,220 --> 00:28:11,520
just said that one is a maybe a little

559
00:28:11,520 --> 00:28:14,520
new terminology and a new but uh they

560
00:28:14,520 --> 00:28:17,039
will look up uh in some different uh

561
00:28:17,039 --> 00:28:19,500
specs it's like a manipulator in Middle

562
00:28:19,500 --> 00:28:23,460
it's a well accepted one retain the same

563
00:28:23,460 --> 00:28:27,720
uh acronym mitn right so still started

564
00:28:27,720 --> 00:28:30,539
with f uh that's about it yeah next

565
00:28:30,539 --> 00:28:32,340
slide of a niche I think we'll skip it

566
00:28:32,340 --> 00:28:33,900
so you can go to the next slide but it's

567
00:28:33,900 --> 00:28:36,240
at the top yeah this is a minor so it's

568
00:28:36,240 --> 00:28:38,940
just for reference purpose that's all I

569
00:28:38,940 --> 00:28:41,279
have thank you

570
00:28:41,279 --> 00:28:42,779
okay thanks

571
00:28:42,779 --> 00:28:45,200
yeah

572
00:28:55,500 --> 00:28:58,220
okay

573
00:28:58,220 --> 00:29:01,400
[Music]

574
00:29:09,179 --> 00:29:11,820
go ahead Brendan I I just had a quick

575
00:29:11,820 --> 00:29:13,860
comment on that last one the most common

576
00:29:13,860 --> 00:29:15,779
terminology I've seen has been on path

577
00:29:15,779 --> 00:29:18,320
attacker

578
00:29:19,080 --> 00:29:21,500
okay

579
00:29:29,940 --> 00:29:33,179
is it okay yes

580
00:29:33,179 --> 00:29:36,020
um yes so this is

581
00:29:36,020 --> 00:29:38,039
and I'm going to talk about the

582
00:29:38,039 --> 00:29:39,539
hackathon

583
00:29:39,539 --> 00:29:42,919
and next next please

584
00:29:43,679 --> 00:29:46,679
foreign

585
00:29:52,520 --> 00:29:56,159
hackathon unfortunately I'm only wrote

586
00:29:56,159 --> 00:29:58,799
something I was able to pick up and many

587
00:29:58,799 --> 00:30:02,580
of the early pages is a more about the

588
00:30:02,580 --> 00:30:05,039
clarification we had to

589
00:30:05,039 --> 00:30:07,860
talk and doing the hackathon

590
00:30:07,860 --> 00:30:10,620
yes next page please

591
00:30:10,620 --> 00:30:12,840
and yeah these are pictures

592
00:30:12,840 --> 00:30:15,720
and we're running out of time so next

593
00:30:15,720 --> 00:30:18,020
please

594
00:30:18,480 --> 00:30:19,799
yes

595
00:30:19,799 --> 00:30:24,720
um wait yes I I have some of the points

596
00:30:24,720 --> 00:30:27,539
um planned for the hackathon and we're

597
00:30:27,539 --> 00:30:29,640
going through of them in the from the

598
00:30:29,640 --> 00:30:31,500
next slides

599
00:30:31,500 --> 00:30:34,440
yeah next page please

600
00:30:34,440 --> 00:30:35,940
yes

601
00:30:35,940 --> 00:30:38,000
um

602
00:30:38,640 --> 00:30:42,360
yes um this was uh something we did talk

603
00:30:42,360 --> 00:30:47,779
at the iet114 and heavily after the one

604
00:30:47,779 --> 00:30:49,980
one four

605
00:30:49,980 --> 00:30:53,399
we wanted to have a way whether 10 have

606
00:30:53,399 --> 00:30:55,320
to read contents of the attestation

607
00:30:55,320 --> 00:30:58,380
payload with without opening or

608
00:30:58,380 --> 00:31:01,919
verifying the signature and we have to

609
00:31:01,919 --> 00:31:04,679
revisit this again

610
00:31:04,679 --> 00:31:06,679
um

611
00:31:06,679 --> 00:31:11,340
uh for this this hackathon and this is

612
00:31:11,340 --> 00:31:14,640
the detail of the conclusion so we do

613
00:31:14,640 --> 00:31:18,720
not have to revisit again so we

614
00:31:18,720 --> 00:31:22,260
um the time will read attestation

615
00:31:22,260 --> 00:31:26,220
payload format and then if the matches

616
00:31:26,220 --> 00:31:30,380
with the uh attestation result string

617
00:31:30,380 --> 00:31:33,720
described in the slide then Tamil have

618
00:31:33,720 --> 00:31:37,159
interest and going to open it and

619
00:31:37,159 --> 00:31:40,080
process it other than that we'll pass

620
00:31:40,080 --> 00:31:43,080
the contents of the attestation payroll

621
00:31:43,080 --> 00:31:44,100
to the

622
00:31:44,100 --> 00:31:46,799
um verifier

623
00:31:46,799 --> 00:31:47,580
um

624
00:31:47,580 --> 00:31:50,220
it yes

625
00:31:50,220 --> 00:31:53,600
yes and next page please

626
00:31:54,779 --> 00:31:57,380
um there's a hand

627
00:31:58,020 --> 00:32:01,440
Muhammad Muhammad you're in the Q

628
00:32:01,440 --> 00:32:04,500
yeah so do you hear me

629
00:32:04,500 --> 00:32:05,700
yes

630
00:32:05,700 --> 00:32:07,919
okay so so what exactly do you mean by

631
00:32:07,919 --> 00:32:10,799
if you go back to last slide please uh

632
00:32:10,799 --> 00:32:13,500
what exactly do you mean by payload

633
00:32:13,500 --> 00:32:15,539
it's an undefined term I don't see it

634
00:32:15,539 --> 00:32:17,399
anywhere

635
00:32:17,399 --> 00:32:20,220
does it mean the in the in the context

636
00:32:20,220 --> 00:32:22,740
of t s c x does it mean let's say the

637
00:32:22,740 --> 00:32:24,899
code or does it mean the report or what

638
00:32:24,899 --> 00:32:26,760
exactly does it mean because you go back

639
00:32:26,760 --> 00:32:30,779
to the uh yes

640
00:32:31,620 --> 00:32:34,980
um it's a b string so it's it's a binary

641
00:32:34,980 --> 00:32:37,500
um it depends on the implementation if

642
00:32:37,500 --> 00:32:41,820
it's Opti or sgx or yes um yes yeah for

643
00:32:41,820 --> 00:32:44,340
scx what exactly would it mean

644
00:32:44,340 --> 00:32:45,899
excuse me

645
00:32:45,899 --> 00:32:49,260
so so for sgx software guard Extensions

646
00:32:49,260 --> 00:32:53,600
by Intel what exactly would it mean

647
00:32:56,539 --> 00:33:00,480
is it Dave is coming up to the mick to

648
00:33:00,480 --> 00:33:03,179
help sure this is Dave Taylor

649
00:33:03,179 --> 00:33:06,360
um the word payload just by itself just

650
00:33:06,360 --> 00:33:07,799
means uh in the middle of the slide

651
00:33:07,799 --> 00:33:09,960
there you see the two lines of the

652
00:33:09,960 --> 00:33:11,640
question mark in front of them it's the

653
00:33:11,640 --> 00:33:14,519
name of the field in the teeth message

654
00:33:14,519 --> 00:33:15,600
um that doesn't answer Muhammad's

655
00:33:15,600 --> 00:33:17,039
question but that's what that the first

656
00:33:17,039 --> 00:33:19,140
question was what does payload mean okay

657
00:33:19,140 --> 00:33:21,960
and so uh there's two Fields right

658
00:33:21,960 --> 00:33:24,120
there's the payload that's a byte string

659
00:33:24,120 --> 00:33:26,159
you know a bike blob and then there's a

660
00:33:26,159 --> 00:33:27,539
text it's a format that tells you what

661
00:33:27,539 --> 00:33:29,640
the format of that fight Club is so the

662
00:33:29,640 --> 00:33:30,899
second question is well what if you're

663
00:33:30,899 --> 00:33:33,960
using sgx okay if you were using sgx

664
00:33:33,960 --> 00:33:35,580
this document doesn't tell you the

665
00:33:35,580 --> 00:33:37,980
answer to that but what does say is that

666
00:33:37,980 --> 00:33:40,559
if you were using say an sgx quote then

667
00:33:40,559 --> 00:33:43,080
you would Define a text value for

668
00:33:43,080 --> 00:33:44,940
attestation payload format that says

669
00:33:44,940 --> 00:33:46,980
this is an sgx quote and then you'd put

670
00:33:46,980 --> 00:33:49,260
the quote into the b-ster this document

671
00:33:49,260 --> 00:33:51,000
doesn't tell you what the text values

672
00:33:51,000 --> 00:33:52,380
are and the B Star values are it

673
00:33:52,380 --> 00:33:54,179
provides a way for people to register

674
00:33:54,179 --> 00:33:56,399
them and so if you are using sgx you

675
00:33:56,399 --> 00:33:57,720
could do that and then use these two

676
00:33:57,720 --> 00:34:00,120
values where text would be you know sgx

677
00:34:00,120 --> 00:34:02,159
quote or whatever the registered value

678
00:34:02,159 --> 00:34:03,720
is and then you put the quote into the

679
00:34:03,720 --> 00:34:07,519
bistro field in the attestation payload

680
00:34:08,820 --> 00:34:11,520
hi this is Hannis um I wonder whether we

681
00:34:11,520 --> 00:34:15,119
should use this newly sort of published

682
00:34:15,119 --> 00:34:18,560
draft in the rat smoking group on

683
00:34:18,560 --> 00:34:22,260
the message wrapper which allows you to

684
00:34:22,260 --> 00:34:25,199
kind of do exactly what um what is

685
00:34:25,199 --> 00:34:28,440
described on the slide to wrap um these

686
00:34:28,440 --> 00:34:30,418
rats conceptual messages which evidence

687
00:34:30,418 --> 00:34:32,879
and attestation result uh certainly are

688
00:34:32,879 --> 00:34:34,859
so maybe worthwhile to look at that I

689
00:34:34,859 --> 00:34:37,139
would send a it just occurred to me now

690
00:34:37,139 --> 00:34:40,139
as as you are presenting it it uh missed

691
00:34:40,139 --> 00:34:42,740
it previously

692
00:34:43,699 --> 00:34:46,800
which was for what it was also discussed

693
00:34:46,800 --> 00:34:49,918
uh with net and in the context of sgx in

694
00:34:49,918 --> 00:34:52,759
the in the CCC

695
00:34:54,719 --> 00:34:57,720
yes

696
00:34:59,880 --> 00:35:03,240
and yes after the hackathon yesterday

697
00:35:03,240 --> 00:35:05,520
and the day before yesterday we talked

698
00:35:05,520 --> 00:35:06,720
with the

699
00:35:06,720 --> 00:35:10,520
um Ken and isobasan and probably the the

700
00:35:10,520 --> 00:35:13,440
implementer of the time will be reading

701
00:35:13,440 --> 00:35:16,740
the payload the format whether the Tam

702
00:35:16,740 --> 00:35:18,960
is interested for the really the opening

703
00:35:18,960 --> 00:35:21,720
signature of the of payload or not

704
00:35:21,720 --> 00:35:24,240
probably is the right way of the

705
00:35:24,240 --> 00:35:26,339
interpretation of this

706
00:35:26,339 --> 00:35:27,720
um issue

707
00:35:27,720 --> 00:35:29,640
yes

708
00:35:29,640 --> 00:35:33,720
okay and and next page please yes

709
00:35:33,720 --> 00:35:35,880
um yeah I mean I'm not I have I need to

710
00:35:35,880 --> 00:35:39,420
go forward so this is uh originated for

711
00:35:39,420 --> 00:35:42,839
a very long time from IIT 105

712
00:35:42,839 --> 00:35:47,099
and it's about how

713
00:35:47,099 --> 00:35:48,859
um

714
00:35:48,859 --> 00:35:51,000
started the implementation of the

715
00:35:51,000 --> 00:35:55,020
background check model so um what will

716
00:35:55,020 --> 00:35:57,180
happen in the combination of passport

717
00:35:57,180 --> 00:35:58,079
model

718
00:35:58,079 --> 00:36:01,140
and uh

719
00:36:01,140 --> 00:36:05,760
and we did discuss in the IIT 114 that

720
00:36:05,760 --> 00:36:07,619
um if we could have a passport

721
00:36:07,619 --> 00:36:10,380
background check model and passport

722
00:36:10,380 --> 00:36:13,140
model combination implementation in the

723
00:36:13,140 --> 00:36:17,880
tip then we will uh we we have we had to

724
00:36:17,880 --> 00:36:21,720
add another uh message to send the

725
00:36:21,720 --> 00:36:24,480
attestation result to the radaring party

726
00:36:24,480 --> 00:36:27,240
then we we decided to put it in the

727
00:36:27,240 --> 00:36:29,520
update message and

728
00:36:29,520 --> 00:36:36,180
we did add a format for the putting the

729
00:36:36,180 --> 00:36:39,000
payload in that update message but we

730
00:36:39,000 --> 00:36:41,220
didn't really talk about the in the

731
00:36:41,220 --> 00:36:43,560
draft so yeah this is the this um

732
00:36:43,560 --> 00:36:47,099
explanation again and we might able we

733
00:36:47,099 --> 00:36:48,780
might it's a based on why or somebody

734
00:36:48,780 --> 00:36:51,420
else might have had a little bit of

735
00:36:51,420 --> 00:36:54,960
description in the um draft later

736
00:36:54,960 --> 00:36:58,020
with the pull request

737
00:36:58,020 --> 00:37:01,560
okay and next page please

738
00:37:01,560 --> 00:37:05,040
yes yes yeah this was this is also

739
00:37:05,040 --> 00:37:06,780
something um we've been talking between

740
00:37:06,780 --> 00:37:10,920
the 114 and 115. we decided not to use

741
00:37:10,920 --> 00:37:15,000
Seaboard Tech on the uh tip message and

742
00:37:15,000 --> 00:37:18,380
uh and but how about the suit envelope

743
00:37:18,380 --> 00:37:21,780
initially the draft was using tagged

744
00:37:21,780 --> 00:37:25,200
suit envelope and the conclusion is not

745
00:37:25,200 --> 00:37:29,940
to use this suit envelope and

746
00:37:29,940 --> 00:37:31,859
yes

747
00:37:31,859 --> 00:37:36,799
yeah okay let's go to the next page

748
00:37:36,900 --> 00:37:39,900
and this is what almost the date was

749
00:37:39,900 --> 00:37:43,320
doing in his implementation so at the

750
00:37:43,320 --> 00:37:47,040
last it we decided to have um what uh

751
00:37:47,040 --> 00:37:49,320
decided what is will be Monday to Monday

752
00:37:49,320 --> 00:37:51,780
three in um authentication algorithm

753
00:37:51,780 --> 00:37:54,260
we're going to use and

754
00:37:54,260 --> 00:37:59,760
es256 and eddsa was decided and we just

755
00:37:59,760 --> 00:38:04,020
uh and that was a little bit uh related

756
00:38:04,020 --> 00:38:07,440
with the query requests having needed to

757
00:38:07,440 --> 00:38:08,880
have multiple

758
00:38:08,880 --> 00:38:12,599
um signature on it and we decided to use

759
00:38:12,599 --> 00:38:14,400
course assign which supports the

760
00:38:14,400 --> 00:38:16,859
multiple signature instead of course

761
00:38:16,859 --> 00:38:19,920
assign one which was which only uh have

762
00:38:19,920 --> 00:38:22,040
one signature on it

763
00:38:22,040 --> 00:38:28,380
and yes and then we need to uh and many

764
00:38:28,380 --> 00:38:30,480
of the people is relying on the

765
00:38:30,480 --> 00:38:31,980
girlfriend

766
00:38:31,980 --> 00:38:34,820
um Lawrence

767
00:38:34,820 --> 00:38:37,980
implementation and yes we're just going

768
00:38:37,980 --> 00:38:41,280
to proceed uh supporting it

769
00:38:41,280 --> 00:38:43,740
next page please

770
00:38:43,740 --> 00:38:46,140
and this is fixed and see details syntax

771
00:38:46,140 --> 00:38:48,000
error which I was talking a little bit

772
00:38:48,000 --> 00:38:52,440
in 104. and we did finally fix it it

773
00:38:52,440 --> 00:38:54,300
took me a little about three or three

774
00:38:54,300 --> 00:38:56,700
days and had to talk with the Brandon

775
00:38:56,700 --> 00:38:59,599
and many people in the Carson and to

776
00:38:59,599 --> 00:39:04,800
tackle it and made and uh and also I

777
00:39:04,800 --> 00:39:07,380
wrote the description how to go through

778
00:39:07,380 --> 00:39:10,800
to check the tip protocol cddl syntax

779
00:39:10,800 --> 00:39:13,260
check on the readme so probably it's

780
00:39:13,260 --> 00:39:16,740
okay now but but it however it does

781
00:39:16,740 --> 00:39:21,180
depends on the suit uh suit message has

782
00:39:21,180 --> 00:39:24,540
need to be also uh requires City to

783
00:39:24,540 --> 00:39:27,480
syntax error error so probably in the

784
00:39:27,480 --> 00:39:30,540
future where you will go split the make

785
00:39:30,540 --> 00:39:33,660
file command just going through the

786
00:39:33,660 --> 00:39:35,900
syntax check on the tip message itself

787
00:39:35,900 --> 00:39:40,560
or uh with or only with the suit uh

788
00:39:40,560 --> 00:39:43,079
related message

789
00:39:43,079 --> 00:39:47,220
foreign yes next page please

790
00:39:47,220 --> 00:39:48,420
yes

791
00:39:48,420 --> 00:39:51,119
um yes this is go back for me it's more

792
00:39:51,119 --> 00:39:54,599
uh going back from otrp age when the tip

793
00:39:54,599 --> 00:39:56,160
was using

794
00:39:56,160 --> 00:39:59,720
um it had a feature to delete the

795
00:39:59,720 --> 00:40:03,240
trusted component and we decided to have

796
00:40:03,240 --> 00:40:07,740
a way to delete with using suit manifest

797
00:40:07,740 --> 00:40:10,140
for The Trusted component

798
00:40:10,140 --> 00:40:14,040
then what do you how to specify the the

799
00:40:14,040 --> 00:40:16,680
target of the Twisted component what

800
00:40:16,680 --> 00:40:19,859
kind of ID we use and

801
00:40:19,859 --> 00:40:22,440
and the suitizes the benefit of the suit

802
00:40:22,440 --> 00:40:25,079
digest is it's a hash value inside so if

803
00:40:25,079 --> 00:40:27,300
it's any of the value it changes with

804
00:40:27,300 --> 00:40:30,240
the in the binary and then it's easy to

805
00:40:30,240 --> 00:40:33,300
spot spot it but we yes at the

806
00:40:33,300 --> 00:40:34,560
conclusion we're going to use suit

807
00:40:34,560 --> 00:40:38,400
component identifier identifier

808
00:40:38,400 --> 00:40:42,980
okay and the next page please

809
00:40:43,500 --> 00:40:45,720
and there's many implementations are

810
00:40:45,720 --> 00:40:48,560
going on the table so miyaza song came

811
00:40:48,560 --> 00:40:51,839
attended the eitf for the first time so

812
00:40:51,839 --> 00:40:54,060
he was implementing passport model on

813
00:40:54,060 --> 00:40:57,900
the protocol which is very beneficial my

814
00:40:57,900 --> 00:40:59,880
implementation not doing that and any

815
00:40:59,880 --> 00:41:04,619
other people so and it's uh yes and it

816
00:41:04,619 --> 00:41:07,260
has a so four sequences he didn't seems

817
00:41:07,260 --> 00:41:09,180
like to finish all the fourth sequence

818
00:41:09,180 --> 00:41:12,900
but um it's uh it's making a progress

819
00:41:12,900 --> 00:41:16,320
for making the draft complete and it can

820
00:41:16,320 --> 00:41:22,020
is uh yes he was he he was I think it

821
00:41:22,020 --> 00:41:24,060
was yesterday or the day yesterday he

822
00:41:24,060 --> 00:41:26,160
made a huge among us a lot of uh the

823
00:41:26,160 --> 00:41:28,380
pull requests

824
00:41:28,380 --> 00:41:30,000
um yes

825
00:41:30,000 --> 00:41:31,560
and

826
00:41:31,560 --> 00:41:34,400
and

827
00:41:35,400 --> 00:41:37,020
yeah yeah

828
00:41:37,020 --> 00:41:40,079
yes and the isobasa was yes adding

829
00:41:40,079 --> 00:41:42,240
remote attestation and was also

830
00:41:42,240 --> 00:41:44,220
clarifying many of the features of the

831
00:41:44,220 --> 00:41:47,280
on the tip combination with um rat's

832
00:41:47,280 --> 00:41:49,859
activity

833
00:41:49,859 --> 00:41:53,160
yes and uh yeah the summary

834
00:41:53,160 --> 00:41:55,079
implementation many of the

835
00:41:55,079 --> 00:41:57,720
implementations link is here and the

836
00:41:57,720 --> 00:42:00,720
solved topics it's not only these

837
00:42:00,720 --> 00:42:02,400
because it's already something I was

838
00:42:02,400 --> 00:42:03,740
able to pick up

839
00:42:03,740 --> 00:42:09,599
and so far I was I I was uh known well

840
00:42:09,599 --> 00:42:11,940
by watching the GitHub with five pull

841
00:42:11,940 --> 00:42:16,099
requests and updating the draft

842
00:42:16,099 --> 00:42:20,099
and also a new issue was uh yeah filed

843
00:42:20,099 --> 00:42:23,650
like three I think yeah it's four now

844
00:42:23,650 --> 00:42:26,400
[Music]

845
00:42:26,400 --> 00:42:29,040
and this next page and next page there's

846
00:42:29,040 --> 00:42:31,260
two more additional page for the who

847
00:42:31,260 --> 00:42:33,540
wants to go through

848
00:42:33,540 --> 00:42:36,180
um by yourself

849
00:42:36,180 --> 00:42:38,280
um the next page is probably the order

850
00:42:38,280 --> 00:42:41,060
links

851
00:42:42,839 --> 00:42:45,200
yes

852
00:42:45,540 --> 00:42:48,680
um any question please

853
00:42:53,780 --> 00:42:56,640
that was actually great progress

854
00:42:56,640 --> 00:42:59,839
that's good thank you

855
00:43:12,180 --> 00:43:14,700
all right a couple of these slides will

856
00:43:14,700 --> 00:43:17,400
overlap with uh Akira so we'll try to go

857
00:43:17,400 --> 00:43:20,520
through those uh extra fast and leave

858
00:43:20,520 --> 00:43:22,319
the time for the other ones here all

859
00:43:22,319 --> 00:43:23,940
right so T protocol

860
00:43:23,940 --> 00:43:28,579
a bunch of co-authors next slide

861
00:43:30,660 --> 00:43:32,160
all right so there's three sections

862
00:43:32,160 --> 00:43:34,260
General things things specific to suit

863
00:43:34,260 --> 00:43:36,119
and things specific to rats so here's

864
00:43:36,119 --> 00:43:37,440
the first section which is the shortest

865
00:43:37,440 --> 00:43:39,599
one General deep protocol issues all

866
00:43:39,599 --> 00:43:40,740
right

867
00:43:40,740 --> 00:43:43,140
so there was a discussion in the past or

868
00:43:43,140 --> 00:43:45,060
an issue was which tape messages are

869
00:43:45,060 --> 00:43:46,920
protected with which Cipher Suites okay

870
00:43:46,920 --> 00:43:50,400
and so uh after the first exchange it's

871
00:43:50,400 --> 00:43:52,140
really easy because once you've done

872
00:43:52,140 --> 00:43:53,940
negotiation you use the negotiated one

873
00:43:53,940 --> 00:43:55,380
right but how do you do the negotiation

874
00:43:55,380 --> 00:43:57,839
that's where this one comes up okay we

875
00:43:57,839 --> 00:44:00,060
do specify the same Cipher Suite is used

876
00:44:00,060 --> 00:44:01,560
in both directions

877
00:44:01,560 --> 00:44:03,599
okay so one the one that you're using

878
00:44:03,599 --> 00:44:04,859
for signing is the one that you're using

879
00:44:04,859 --> 00:44:07,079
for for checking and so on

880
00:44:07,079 --> 00:44:09,000
um we don't preclude if you ever needed

881
00:44:09,000 --> 00:44:10,020
to be

882
00:44:10,020 --> 00:44:11,520
um different in the two directions then

883
00:44:11,520 --> 00:44:13,859
an extension could do that okay

884
00:44:13,859 --> 00:44:15,480
um but we didn't need to do that now in

885
00:44:15,480 --> 00:44:17,040
the base spec

886
00:44:17,040 --> 00:44:19,740
S as um Akira mentioned The Courier

887
00:44:19,740 --> 00:44:21,420
request which is the very first request

888
00:44:21,420 --> 00:44:22,980
right since you don't know what the

889
00:44:22,980 --> 00:44:25,980
other side has then you need to try both

890
00:44:25,980 --> 00:44:29,220
um so the Tam must support both

891
00:44:29,220 --> 00:44:33,900
algorithms both es-256 and edgsa and the

892
00:44:33,900 --> 00:44:36,540
device gets to pick one okay it can

893
00:44:36,540 --> 00:44:37,859
choose either one of them but it has to

894
00:44:37,859 --> 00:44:39,540
do one of those two okay so the first

895
00:44:39,540 --> 00:44:41,520
message that comes from the Tam has to

896
00:44:41,520 --> 00:44:42,780
try both because it doesn't necessarily

897
00:44:42,780 --> 00:44:44,460
know what the device has and so this is

898
00:44:44,460 --> 00:44:46,700
where it switched to say cos a sign

899
00:44:46,700 --> 00:44:48,960
which allows you to sign the same

900
00:44:48,960 --> 00:44:51,359
message with both algorithms okay there

901
00:44:51,359 --> 00:44:52,740
was four other Alternatives that were

902
00:44:52,740 --> 00:44:54,119
considered and discussed but that was

903
00:44:54,119 --> 00:44:56,280
the one that um out of the people that

904
00:44:56,280 --> 00:44:58,380
were commenting on it before multiple

905
00:44:58,380 --> 00:44:59,700
people like that one the best and so

906
00:44:59,700 --> 00:45:01,200
that's the one we put into the spec and

907
00:45:01,200 --> 00:45:02,520
then started implementing and the only

908
00:45:02,520 --> 00:45:04,260
implementation issue we saw as Shakira

909
00:45:04,260 --> 00:45:06,420
mentioned was that t cosay doesn't yet

910
00:45:06,420 --> 00:45:09,660
support the ability to do eddsa with uh

911
00:45:09,660 --> 00:45:12,720
cause a sine it only has es256 and and

912
00:45:12,720 --> 00:45:14,520
so on so that but that will be coming we

913
00:45:14,520 --> 00:45:15,480
said we're not going to change the spec

914
00:45:15,480 --> 00:45:16,800
waiting for a single implementation

915
00:45:16,800 --> 00:45:18,300
where the implementation is in progress

916
00:45:18,300 --> 00:45:19,380
so we'll just do that and encourage

917
00:45:19,380 --> 00:45:21,140
implementations okay

918
00:45:21,140 --> 00:45:24,780
and also clarify this is before that the

919
00:45:24,780 --> 00:45:26,760
first response from the a from the

920
00:45:26,760 --> 00:45:30,180
device itself uses the same uh mechanism

921
00:45:30,180 --> 00:45:33,240
as as later messages before the spec was

922
00:45:33,240 --> 00:45:35,579
ambiguous as to is it actually signed or

923
00:45:35,579 --> 00:45:37,920
not and now it says it is it's the only

924
00:45:37,920 --> 00:45:39,980
weird Corner case is if for some reason

925
00:45:39,980 --> 00:45:43,680
the uh Tam sends a message and doesn't

926
00:45:43,680 --> 00:45:46,319
put the mandatory ones in its list of

927
00:45:46,319 --> 00:45:48,000
signatures

928
00:45:48,000 --> 00:45:50,339
um then of course the the device is

929
00:45:50,339 --> 00:45:51,480
going to say well I don't support either

930
00:45:51,480 --> 00:45:52,980
of those I support the mandatory one and

931
00:45:52,980 --> 00:45:55,560
so we allow this case that says if you

932
00:45:55,560 --> 00:45:56,880
end up having to send an error

933
00:45:56,880 --> 00:45:59,400
unsupported Cipher Suites which would

934
00:45:59,400 --> 00:46:01,440
typically happen if the T if the Tam

935
00:46:01,440 --> 00:46:03,480
supports the mandatory ones but then it

936
00:46:03,480 --> 00:46:04,920
really wants to upgrade to a much later

937
00:46:04,920 --> 00:46:07,140
one right that the third one the new the

938
00:46:07,140 --> 00:46:09,540
the new and fancy thing and it says I

939
00:46:09,540 --> 00:46:10,680
only support that one can you support

940
00:46:10,680 --> 00:46:13,140
that one it says no I support this one

941
00:46:13,140 --> 00:46:15,740
and so that's for that corner case

942
00:46:15,740 --> 00:46:18,240
it's not disallowed so it's it's just

943
00:46:18,240 --> 00:46:20,940
there okay next

944
00:46:20,940 --> 00:46:22,280
okay

945
00:46:22,280 --> 00:46:25,079
unrecognized heat messages okay so let's

946
00:46:25,079 --> 00:46:27,240
say you have something that uh sends a

947
00:46:27,240 --> 00:46:28,800
teep message but the message number

948
00:46:28,800 --> 00:46:30,660
isn't one of the regular six query

949
00:46:30,660 --> 00:46:33,720
request corresponds update error success

950
00:46:33,720 --> 00:46:35,640
what if it's an other random number what

951
00:46:35,640 --> 00:46:37,800
do you do okay or anything else it does

952
00:46:37,800 --> 00:46:39,300
that violates the spec what do you do if

953
00:46:39,300 --> 00:46:40,500
you violate the spec well there's the

954
00:46:40,500 --> 00:46:44,160
iup uh document that argues that

955
00:46:44,160 --> 00:46:45,720
um anything that says you just drop

956
00:46:45,720 --> 00:46:47,460
invalid messages that that's actually

957
00:46:47,460 --> 00:46:49,440
harmful because it lets the bugs

958
00:46:49,440 --> 00:46:51,599
propagate and stay in the wild and

959
00:46:51,599 --> 00:46:53,280
instead you should really reply with an

960
00:46:53,280 --> 00:46:55,260
error so to put the pressure on the

961
00:46:55,260 --> 00:46:56,700
people that are doing their own thing

962
00:46:56,700 --> 00:46:58,260
the implementation is doing the right

963
00:46:58,260 --> 00:47:01,020
thing and so uh two sides the first part

964
00:47:01,020 --> 00:47:03,780
is what happens when a TP agent includes

965
00:47:03,780 --> 00:47:05,880
an illegal message receives an illegal

966
00:47:05,880 --> 00:47:07,380
message from a town

967
00:47:07,380 --> 00:47:09,720
well we've got an error message so we

968
00:47:09,720 --> 00:47:11,220
just change it say you said an error in

969
00:47:11,220 --> 00:47:12,900
that case Okay so that's what the that's

970
00:47:12,900 --> 00:47:14,640
what the device does if the Tams has

971
00:47:14,640 --> 00:47:16,079
some that some something that's like a

972
00:47:16,079 --> 00:47:18,480
bug okay next slide so what do you do if

973
00:47:18,480 --> 00:47:20,160
the tip agents in something that's bad

974
00:47:20,160 --> 00:47:22,859
so what does the Tam do right because

975
00:47:22,859 --> 00:47:25,079
the The Tam everything is initiated from

976
00:47:25,079 --> 00:47:26,880
The Tam and then responded to by the

977
00:47:26,880 --> 00:47:29,400
agent right and so the Tam doesn't have

978
00:47:29,400 --> 00:47:31,079
a I'm going to send you an error right

979
00:47:31,079 --> 00:47:34,500
it can send a query request or an update

980
00:47:34,500 --> 00:47:36,420
um but that's pretty much it and so

981
00:47:36,420 --> 00:47:37,920
previously it said it just drops the

982
00:47:37,920 --> 00:47:40,020
message if it's not valid uh and you

983
00:47:40,020 --> 00:47:42,720
can't send an error message uh but the

984
00:47:42,720 --> 00:47:44,700
Tam can actually update software so if

985
00:47:44,700 --> 00:47:46,619
there's a bug in the type agent the Tim

986
00:47:46,619 --> 00:47:48,240
can fix that by setting a fixed version

987
00:47:48,240 --> 00:47:50,940
right and so what the document says now

988
00:47:50,940 --> 00:47:53,220
or the proposed text ad because this is

989
00:47:53,220 --> 00:47:54,839
not fixed in the last one that's posted

990
00:47:54,839 --> 00:47:57,119
uh this text is I think in the GitHub

991
00:47:57,119 --> 00:47:59,400
repository pull request

992
00:47:59,400 --> 00:48:00,960
says it may also do additional

993
00:48:00,960 --> 00:48:02,700
implementation specific actions such as

994
00:48:02,700 --> 00:48:04,319
logging the results like if you don't

995
00:48:04,319 --> 00:48:07,020
yet have a newer version to install

996
00:48:07,020 --> 00:48:09,180
um or attempting to update the tpage

997
00:48:09,180 --> 00:48:10,260
into a version that does not send

998
00:48:10,260 --> 00:48:12,960
invalid messages okay so my login says

999
00:48:12,960 --> 00:48:14,280
please get a new implementation whatever

1000
00:48:14,280 --> 00:48:16,020
if you've got one then you initiate the

1001
00:48:16,020 --> 00:48:17,339
update to go and fix the thing right now

1002
00:48:17,339 --> 00:48:19,560
to stop sending you the bad messages

1003
00:48:19,560 --> 00:48:20,880
okay

1004
00:48:20,880 --> 00:48:23,640
so that's that issue

1005
00:48:23,640 --> 00:48:26,040
all right there's a bunch of editorial

1006
00:48:26,040 --> 00:48:27,300
things that I'm not going to go through

1007
00:48:27,300 --> 00:48:29,520
here because I believe the person that

1008
00:48:29,520 --> 00:48:31,680
brought them up so Michael Richardson

1009
00:48:31,680 --> 00:48:33,300
Thomas fasady and so on I think have

1010
00:48:33,300 --> 00:48:35,099
already act all the responses and there

1011
00:48:35,099 --> 00:48:37,200
tend to be editorial so if you want to

1012
00:48:37,200 --> 00:48:38,520
talk about one of those ask me at the

1013
00:48:38,520 --> 00:48:40,859
end otherwise I'm going to go on

1014
00:48:40,859 --> 00:48:42,839
all right so let's talk about things

1015
00:48:42,839 --> 00:48:45,420
that are specific to suit okay

1016
00:48:45,420 --> 00:48:47,220
and so now I'm going to call talk go

1017
00:48:47,220 --> 00:48:48,540
through a couple of issues about the

1018
00:48:48,540 --> 00:48:51,060
relationship to suit yes

1019
00:48:51,060 --> 00:48:52,740
you wanted oh yeah questions or somebody

1020
00:48:52,740 --> 00:48:56,160
yes please uh Mike hello Michael

1021
00:48:56,160 --> 00:48:58,020
um I just want to say ticosi does

1022
00:48:58,020 --> 00:49:00,660
support eddsa since September

1023
00:49:00,660 --> 00:49:03,540
uh edgsa yes and in fact during the

1024
00:49:03,540 --> 00:49:05,700
hackathon I was actually using edgsa

1025
00:49:05,700 --> 00:49:07,980
obviously um but I can't use it with cos

1026
00:49:07,980 --> 00:49:08,819
I sign

1027
00:49:08,819 --> 00:49:12,780
and so um yeah a sign is currently only

1028
00:49:12,780 --> 00:49:14,700
in the dead branch and eddsa is

1029
00:49:14,700 --> 00:49:16,560
currently only in the main branch where

1030
00:49:16,560 --> 00:49:18,180
it actually exists no branch that you

1031
00:49:18,180 --> 00:49:21,180
can use eddsa with cos a sign yes I know

1032
00:49:21,180 --> 00:49:23,579
that he was going to add so yeah we

1033
00:49:23,579 --> 00:49:25,680
actually did get I I did get EDSA

1034
00:49:25,680 --> 00:49:28,200
working during the hackathon I just

1035
00:49:28,200 --> 00:49:29,819
couldn't use it with the query request

1036
00:49:29,819 --> 00:49:31,619
message all the other messages after

1037
00:49:31,619 --> 00:49:34,020
that eddsa was working great I actually

1038
00:49:34,020 --> 00:49:35,640
did that was one of my main tests on

1039
00:49:35,640 --> 00:49:37,380
Saturday was to get EDSA working with

1040
00:49:37,380 --> 00:49:38,579
all of their messages and my test

1041
00:49:38,579 --> 00:49:40,140
passing and they all worked great so

1042
00:49:40,140 --> 00:49:43,680
thank you for the EDSA support in t Jose

1043
00:49:43,680 --> 00:49:47,598
all right use of suit next slide

1044
00:49:48,780 --> 00:49:49,800
okay

1045
00:49:49,800 --> 00:49:52,020
so uh for those of you that were in the

1046
00:49:52,020 --> 00:49:55,200
uh suit meeting and our hour and a half

1047
00:49:55,200 --> 00:49:57,300
ago uh Brennan actually talked about

1048
00:49:57,300 --> 00:49:59,880
this one and so this is the more details

1049
00:49:59,880 --> 00:50:02,880
as to where it came from so Ian uh teep

1050
00:50:02,880 --> 00:50:05,579
you want to be able to uninstall things

1051
00:50:05,579 --> 00:50:07,079
that were previously installed so I've

1052
00:50:07,079 --> 00:50:08,640
got some trusted applications that I

1053
00:50:08,640 --> 00:50:09,839
want to uninstall

1054
00:50:09,839 --> 00:50:12,900
and so uh the unneeded Manifest list is

1055
00:50:12,900 --> 00:50:14,640
what does that and whether it's a suit

1056
00:50:14,640 --> 00:50:16,260
digest or not a cure mentioned this I'll

1057
00:50:16,260 --> 00:50:17,640
come to this on the later slide so

1058
00:50:17,640 --> 00:50:18,960
ignore that for the point but you can

1059
00:50:18,960 --> 00:50:21,240
specify here's some manifests to clean

1060
00:50:21,240 --> 00:50:24,420
up okay and so this works as long as the

1061
00:50:24,420 --> 00:50:26,220
installation manifest already includes

1062
00:50:26,220 --> 00:50:27,900
the unlinked directives right otherwise

1063
00:50:27,900 --> 00:50:29,880
you have to go off and get a newer

1064
00:50:29,880 --> 00:50:31,560
version of the Manifest that has the

1065
00:50:31,560 --> 00:50:34,619
unlinked directives okay and so what if

1066
00:50:34,619 --> 00:50:37,020
that hasn't happened yet or do you

1067
00:50:37,020 --> 00:50:38,640
pre-cache it so there's all these weird

1068
00:50:38,640 --> 00:50:40,020
things it says what if I don't have a

1069
00:50:40,020 --> 00:50:41,339
newer version

1070
00:50:41,339 --> 00:50:42,660
um I can't create it myself because that

1071
00:50:42,660 --> 00:50:44,400
was created by the software developer

1072
00:50:44,400 --> 00:50:46,260
that created that manifest maybe okay

1073
00:50:46,260 --> 00:50:48,660
and so although there could be ways to

1074
00:50:48,660 --> 00:50:50,040
do that this is the most natural way to

1075
00:50:50,040 --> 00:50:52,079
do it is to say to encourage the

1076
00:50:52,079 --> 00:50:53,880
Manifest to install stuff to also have

1077
00:50:53,880 --> 00:50:55,800
the uninstall commands so that I can

1078
00:50:55,800 --> 00:50:57,359
just reference that same manifest and

1079
00:50:57,359 --> 00:50:58,859
say that manifest that you installed

1080
00:50:58,859 --> 00:51:00,780
before just go and uh follow the

1081
00:51:00,780 --> 00:51:01,980
unlinked directives and clean it up

1082
00:51:01,980 --> 00:51:04,200
because you've already got it okay this

1083
00:51:04,200 --> 00:51:06,660
also solves the local admin case that

1084
00:51:06,660 --> 00:51:08,520
says okay I put something down on a

1085
00:51:08,520 --> 00:51:10,920
particular machine and and now not with

1086
00:51:10,920 --> 00:51:12,839
the teak protocol but if an admin walks

1087
00:51:12,839 --> 00:51:14,220
up to the machine let's say he can get

1088
00:51:14,220 --> 00:51:15,900
to a command line or some other

1089
00:51:15,900 --> 00:51:18,720
variation of of remote you know

1090
00:51:18,720 --> 00:51:20,160
um

1091
00:51:20,160 --> 00:51:22,200
remote login

1092
00:51:22,200 --> 00:51:24,180
um and then you can initiate a local

1093
00:51:24,180 --> 00:51:25,920
uninstall without using the T protocol

1094
00:51:25,920 --> 00:51:27,240
because the Manifest is already there

1095
00:51:27,240 --> 00:51:29,339
right so 10 tends to be most useful

1096
00:51:29,339 --> 00:51:32,099
there and so we put this into suit trust

1097
00:51:32,099 --> 00:51:34,140
domains and that's what Brendan

1098
00:51:34,140 --> 00:51:35,460
presented in the T in this you working

1099
00:51:35,460 --> 00:51:37,559
group earlier so this just says this

1100
00:51:37,559 --> 00:51:39,180
takes a dependency on that

1101
00:51:39,180 --> 00:51:41,640
and this is this is in draft 11. so next

1102
00:51:41,640 --> 00:51:43,920
slide ask you some questions

1103
00:51:43,920 --> 00:51:46,319
okay Akira mentioned this one we stuck

1104
00:51:46,319 --> 00:51:49,020
with the suit envelope untagged I'm not

1105
00:51:49,020 --> 00:51:50,099
going to go through this one because

1106
00:51:50,099 --> 00:51:51,599
Akira already did unless there's

1107
00:51:51,599 --> 00:51:53,760
questions oh but the one question that's

1108
00:51:53,760 --> 00:51:55,020
don't go on the next slide because

1109
00:51:55,020 --> 00:51:56,400
there's a follow-up question on here

1110
00:51:56,400 --> 00:51:58,559
which is um as part of that it came up

1111
00:51:58,559 --> 00:52:00,660
it says well the only case that you

1112
00:52:00,660 --> 00:52:03,480
might want the thought was the only case

1113
00:52:03,480 --> 00:52:05,460
you might want to tag there is what if

1114
00:52:05,460 --> 00:52:07,859
you had other C board-based manifest

1115
00:52:07,859 --> 00:52:09,359
formats you ever want to allow in the

1116
00:52:09,359 --> 00:52:11,280
future okay and you want to do that

1117
00:52:11,280 --> 00:52:12,780
without waiting for an extension and

1118
00:52:12,780 --> 00:52:14,880
still use the Manifest list to reuse the

1119
00:52:14,880 --> 00:52:17,940
Manifest list and the discussion was to

1120
00:52:17,940 --> 00:52:19,319
uh not do that because you can always do

1121
00:52:19,319 --> 00:52:21,180
it in an extension but if you're going

1122
00:52:21,180 --> 00:52:22,740
to eventually allow other manifest

1123
00:52:22,740 --> 00:52:24,780
formats then you might want to do things

1124
00:52:24,780 --> 00:52:27,540
that aren't just seabor so for example

1125
00:52:27,540 --> 00:52:29,819
if you wanted to be able to pass an MSI

1126
00:52:29,819 --> 00:52:32,099
your APK or something like that as your

1127
00:52:32,099 --> 00:52:34,020
manifest right and then you'd want

1128
00:52:34,020 --> 00:52:35,460
something that wasn't c word based and

1129
00:52:35,460 --> 00:52:37,619
so you would need something else anyway

1130
00:52:37,619 --> 00:52:39,660
and so the the suit envelope tag doesn't

1131
00:52:39,660 --> 00:52:42,000
help you with those right and so we said

1132
00:52:42,000 --> 00:52:43,260
that's that's why we're not using suit

1133
00:52:43,260 --> 00:52:45,240
manifest tags and so for other manifest

1134
00:52:45,240 --> 00:52:47,280
formats we'll leave that to an extension

1135
00:52:47,280 --> 00:52:48,359
um and then that could allow you to use

1136
00:52:48,359 --> 00:52:49,920
other manifest formats if you wanted to

1137
00:52:49,920 --> 00:52:51,480
use it with you know apks and sis

1138
00:52:51,480 --> 00:52:53,579
whatever else so but not in the base

1139
00:52:53,579 --> 00:52:55,980
document okay so next

1140
00:52:55,980 --> 00:52:57,900
so that's that's the proposal here if

1141
00:52:57,900 --> 00:52:59,520
anybody has an immediate demand speak up

1142
00:52:59,520 --> 00:53:01,380
but that's the resolution right now is

1143
00:53:01,380 --> 00:53:03,359
to say uh the things that people need

1144
00:53:03,359 --> 00:53:04,740
right now is in the base spec anything

1145
00:53:04,740 --> 00:53:07,260
else is an extension document uh by the

1146
00:53:07,260 --> 00:53:08,640
way Sue took the same approach or the

1147
00:53:08,640 --> 00:53:12,920
suit manifest so that okay

1148
00:53:13,319 --> 00:53:15,599
um all right the suit digest okay so I

1149
00:53:15,599 --> 00:53:16,619
said I was going to come back to this

1150
00:53:16,619 --> 00:53:18,599
one suit digest or suit component

1151
00:53:18,599 --> 00:53:20,220
identifier is where we ended up but cure

1152
00:53:20,220 --> 00:53:23,040
did mention this and uh the more details

1153
00:53:23,040 --> 00:53:24,599
there is that we ran into in the

1154
00:53:24,599 --> 00:53:27,359
hackathon was the suit digest if you

1155
00:53:27,359 --> 00:53:29,220
have a case say a device with multiple

1156
00:53:29,220 --> 00:53:32,280
tees okay so let's say you have a te in

1157
00:53:32,280 --> 00:53:34,319
a network interface card or something

1158
00:53:34,319 --> 00:53:36,599
like that and you got two cards or you

1159
00:53:36,599 --> 00:53:38,280
have two different processors or you

1160
00:53:38,280 --> 00:53:39,540
have two different areas in the same

1161
00:53:39,540 --> 00:53:41,520
processor and you want to take the same

1162
00:53:41,520 --> 00:53:42,900
component and install it in multiple

1163
00:53:42,900 --> 00:53:45,119
places like I want in this line card and

1164
00:53:45,119 --> 00:53:47,220
in that line card you can't do that by

1165
00:53:47,220 --> 00:53:48,480
just saying delete the one with this

1166
00:53:48,480 --> 00:53:50,819
manifest with this that manifest uh hash

1167
00:53:50,819 --> 00:53:52,619
okay because it's in multiple places

1168
00:53:52,619 --> 00:53:54,240
right so you need the more granularity

1169
00:53:54,240 --> 00:53:55,859
and that's what the suit component

1170
00:53:55,859 --> 00:53:58,140
identifier gives you is it's a path that

1171
00:53:58,140 --> 00:53:59,760
says which place it is and so now you

1172
00:53:59,760 --> 00:54:01,440
can be more granular and say I want to

1173
00:54:01,440 --> 00:54:03,660
delete the one in this location instead

1174
00:54:03,660 --> 00:54:04,920
of just the one with this hash which

1175
00:54:04,920 --> 00:54:06,900
which is not necessarily just one

1176
00:54:06,900 --> 00:54:09,059
so that's why we did that and so during

1177
00:54:09,059 --> 00:54:10,440
the hackathon this is not in the draft

1178
00:54:10,440 --> 00:54:11,700
yet this is one of the things we ran

1179
00:54:11,700 --> 00:54:13,559
into an implementation and so everybody

1180
00:54:13,559 --> 00:54:14,640
around the table that had

1181
00:54:14,640 --> 00:54:16,980
implementations there uh we kind of

1182
00:54:16,980 --> 00:54:18,599
brought this up and unless there's any

1183
00:54:18,599 --> 00:54:19,920
objections then this is what would

1184
00:54:19,920 --> 00:54:21,240
appear in the next version of the

1185
00:54:21,240 --> 00:54:23,099
document to address that

1186
00:54:23,099 --> 00:54:25,339
okay

1187
00:54:26,099 --> 00:54:29,099
and then the last part here is

1188
00:54:29,099 --> 00:54:31,800
um uh deletion by a component identifier

1189
00:54:31,800 --> 00:54:33,059
requires that you have a component

1190
00:54:33,059 --> 00:54:35,540
identifier for every manifest

1191
00:54:35,540 --> 00:54:38,400
and this brought up the discussion that

1192
00:54:38,400 --> 00:54:41,579
in suit we only had component IDs and

1193
00:54:41,579 --> 00:54:42,599
Brennan mentioned this in the suit

1194
00:54:42,599 --> 00:54:44,940
meeting uh we only had component IDs

1195
00:54:44,940 --> 00:54:46,680
when you are a manifest it depends on

1196
00:54:46,680 --> 00:54:48,300
another manifest and the other one has a

1197
00:54:48,300 --> 00:54:50,280
component ID but the root one doesn't

1198
00:54:50,280 --> 00:54:52,500
which is fine if you're a constrained

1199
00:54:52,500 --> 00:54:53,940
device but if you're a device with a

1200
00:54:53,940 --> 00:54:55,559
bunch of trusted applications installed

1201
00:54:55,559 --> 00:54:57,599
every trusted application is its own

1202
00:54:57,599 --> 00:54:59,520
root manifest and there was no component

1203
00:54:59,520 --> 00:55:01,500
identifier for that okay and so that's

1204
00:55:01,500 --> 00:55:03,119
what Brandon proposed that we added into

1205
00:55:03,119 --> 00:55:05,760
trust domains for this case it was I

1206
00:55:05,760 --> 00:55:07,680
think the word oversight uh came up not

1207
00:55:07,680 --> 00:55:09,180
by intent and so this is the what

1208
00:55:09,180 --> 00:55:10,859
motivated the discussion that Brennan

1209
00:55:10,859 --> 00:55:12,720
had in the Sue working group before

1210
00:55:12,720 --> 00:55:14,460
so again another case for the teat

1211
00:55:14,460 --> 00:55:16,559
protocol actually requires this in order

1212
00:55:16,559 --> 00:55:18,119
to do install and uninstall multiple

1213
00:55:18,119 --> 00:55:20,839
trusted applications

1214
00:55:21,359 --> 00:55:23,400
all right

1215
00:55:23,400 --> 00:55:25,680
all right this one we also did mention

1216
00:55:25,680 --> 00:55:27,660
briefly and you'll notice my slide that

1217
00:55:27,660 --> 00:55:29,700
I already had prepared points out what

1218
00:55:29,700 --> 00:55:31,440
somebody else said that the mic and the

1219
00:55:31,440 --> 00:55:33,420
suit manifest and the suit working group

1220
00:55:33,420 --> 00:55:36,000
so the T protocol does not do encryption

1221
00:55:36,000 --> 00:55:37,319
at the message layer

1222
00:55:37,319 --> 00:55:39,180
okay it does encryption at the payload

1223
00:55:39,180 --> 00:55:41,040
layer so for example you can pass an

1224
00:55:41,040 --> 00:55:43,619
encrypted payload in it in a unencrypted

1225
00:55:43,619 --> 00:55:46,500
message okay it only does signing

1226
00:55:46,500 --> 00:55:49,740
and so uh the current teep protocol spec

1227
00:55:49,740 --> 00:55:51,599
says nothing about the privacy of suit

1228
00:55:51,599 --> 00:55:53,579
reports

1229
00:55:53,579 --> 00:55:54,660
um and by the way neither does

1230
00:55:54,660 --> 00:55:56,040
superpowers today

1231
00:55:56,040 --> 00:55:58,020
and so that means that um we don't

1232
00:55:58,020 --> 00:55:59,700
actually say anything and we need to say

1233
00:55:59,700 --> 00:56:01,740
something someplace and so teep isn't

1234
00:56:01,740 --> 00:56:04,140
the only place reports are likely to be

1235
00:56:04,140 --> 00:56:06,000
used so this is somebody else made this

1236
00:56:06,000 --> 00:56:07,680
point in the suit working group meeting

1237
00:56:07,680 --> 00:56:10,079
and so this says since suit reports can

1238
00:56:10,079 --> 00:56:11,880
be used in other mechanisms then suit

1239
00:56:11,880 --> 00:56:13,619
reports is the right place to specify

1240
00:56:13,619 --> 00:56:15,480
how to encrypt and protect suit reports

1241
00:56:15,480 --> 00:56:18,240
okay and so the proposal is to um

1242
00:56:18,240 --> 00:56:19,980
mention it in security considerations

1243
00:56:19,980 --> 00:56:21,720
and point to the suit reports for the

1244
00:56:21,720 --> 00:56:23,040
actual details

1245
00:56:23,040 --> 00:56:25,859
okay uh and I see maybe some head

1246
00:56:25,859 --> 00:56:27,300
shaking if you think that that's not

1247
00:56:27,300 --> 00:56:29,160
right come to if I said it wrong

1248
00:56:29,160 --> 00:56:31,859
um Russ or Brennan come in and weigh in

1249
00:56:31,859 --> 00:56:34,040
so

1250
00:56:34,140 --> 00:56:35,640
I'll forgive that you're not in the

1251
00:56:35,640 --> 00:56:37,800
queue yeah that's not what I heard okay

1252
00:56:37,800 --> 00:56:40,079
but can you summarize okay suit working

1253
00:56:40,079 --> 00:56:43,319
group chair at the mic so so uh what I

1254
00:56:43,319 --> 00:56:46,619
heard was gee there's lots of places

1255
00:56:46,619 --> 00:56:51,599
where we want these uh plain and that

1256
00:56:51,599 --> 00:56:54,480
when they're put inside for example an

1257
00:56:54,480 --> 00:56:57,180
eat it'll be the eat profile that

1258
00:56:57,180 --> 00:57:00,359
specifies how uh to encrypt it but the

1259
00:57:00,359 --> 00:57:02,400
the security considerations need to say

1260
00:57:02,400 --> 00:57:06,780
what aspects such a rapper needs is what

1261
00:57:06,780 --> 00:57:08,700
I heard okay then let's have that

1262
00:57:08,700 --> 00:57:10,260
discussion now since we kind of deferred

1263
00:57:10,260 --> 00:57:11,520
people here

1264
00:57:11,520 --> 00:57:13,680
um if you are storing it in a file for

1265
00:57:13,680 --> 00:57:16,020
transmission via sneakernet whose job is

1266
00:57:16,020 --> 00:57:18,619
it to true that

1267
00:57:18,619 --> 00:57:21,420
I would say whoever writes it to a file

1268
00:57:21,420 --> 00:57:23,040
you need a file format and so that's why

1269
00:57:23,040 --> 00:57:24,720
you might need to say an arbitrary way

1270
00:57:24,720 --> 00:57:26,700
of seeing a suit report uh can be

1271
00:57:26,700 --> 00:57:28,859
encrypted right I think that's probably

1272
00:57:28,859 --> 00:57:30,540
the case and that's my argument for why

1273
00:57:30,540 --> 00:57:33,859
I should be in the suit reports document

1274
00:57:35,839 --> 00:57:39,119
okay Brendan I mean that's why it's

1275
00:57:39,119 --> 00:57:41,819
Brendan's job in that mine to clarify

1276
00:57:41,819 --> 00:57:43,859
you're asking for a security

1277
00:57:43,859 --> 00:57:45,960
consideration in the suit reports

1278
00:57:45,960 --> 00:57:48,660
document that says if there's sensitive

1279
00:57:48,660 --> 00:57:50,520
information in here you should probably

1280
00:57:50,520 --> 00:57:52,800
encrypt it

1281
00:57:52,800 --> 00:57:54,900
and I'm just making sure I understand

1282
00:57:54,900 --> 00:57:56,579
what you're asking for because that's

1283
00:57:56,579 --> 00:57:58,380
what it sounds like to me that would be

1284
00:57:58,380 --> 00:57:59,880
minimum I think there's an interesting

1285
00:57:59,880 --> 00:58:01,680
question which I do not know the answer

1286
00:58:01,680 --> 00:58:03,839
to right now which is

1287
00:58:03,839 --> 00:58:06,540
um does it make sense to say more

1288
00:58:06,540 --> 00:58:09,300
details about that in terms of uh so

1289
00:58:09,300 --> 00:58:11,040
let's let's reference your MTI document

1290
00:58:11,040 --> 00:58:13,680
if you're going to encrypt it whose job

1291
00:58:13,680 --> 00:58:16,079
is to decide uh constraints on the

1292
00:58:16,079 --> 00:58:17,880
algorithm should you say you should

1293
00:58:17,880 --> 00:58:19,319
encrypt it with one of the things in the

1294
00:58:19,319 --> 00:58:21,059
MPI document

1295
00:58:21,059 --> 00:58:24,119
so from a practical perspective and

1296
00:58:24,119 --> 00:58:26,339
remembering that that MTI document is

1297
00:58:26,339 --> 00:58:29,220
explicitly for constrained node firmware

1298
00:58:29,220 --> 00:58:32,040
update and no other uses of suit

1299
00:58:32,040 --> 00:58:35,280
yeah that it's already taken care of

1300
00:58:35,280 --> 00:58:36,720
because your device only has that

1301
00:58:36,720 --> 00:58:39,299
algorithm anyway Fair yep

1302
00:58:39,299 --> 00:58:42,480
uh so do I take it as your view is that

1303
00:58:42,480 --> 00:58:44,520
uh suit report should say that you

1304
00:58:44,520 --> 00:58:46,619
should do it but not specify algorithm

1305
00:58:46,619 --> 00:58:48,780
details and leave that to you whatever

1306
00:58:48,780 --> 00:58:50,520
the container is whether it's a eat

1307
00:58:50,520 --> 00:58:52,859
profile or somebody doing a file or

1308
00:58:52,859 --> 00:58:54,660
whatever else gets inside that yeah

1309
00:58:54,660 --> 00:58:56,280
because I I don't think it makes sense

1310
00:58:56,280 --> 00:58:58,740
for me to specify in suit report for

1311
00:58:58,740 --> 00:59:01,559
example that you should put it in a zip

1312
00:59:01,559 --> 00:59:03,240
file and make sure there's a password on

1313
00:59:03,240 --> 00:59:04,859
it okay all right that doesn't make

1314
00:59:04,859 --> 00:59:06,299
sense but maybe there's a use case where

1315
00:59:06,299 --> 00:59:08,339
you need to do that

1316
00:59:08,339 --> 00:59:10,680
okay so if you're gonna you know cozy

1317
00:59:10,680 --> 00:59:12,119
wrap it an encrypted thing that wouldn't

1318
00:59:12,119 --> 00:59:13,740
be in the suit document right and

1319
00:59:13,740 --> 00:59:15,059
because that would preclude you from

1320
00:59:15,059 --> 00:59:16,740
putting it in a zip file and writing a

1321
00:59:16,740 --> 00:59:19,140
password on it okay

1322
00:59:19,140 --> 00:59:21,599
anybody else that that sounds like where

1323
00:59:21,599 --> 00:59:23,160
we're going so anybody else have a view

1324
00:59:23,160 --> 00:59:24,240
on that one

1325
00:59:24,240 --> 00:59:26,339
okay if not we'll take that as the the

1326
00:59:26,339 --> 00:59:28,440
proposed consensus okay

1327
00:59:28,440 --> 00:59:30,420
thank you

1328
00:59:30,420 --> 00:59:32,520
I'm sorry I was checking on the notes to

1329
00:59:32,520 --> 00:59:33,780
make sure we're capturing that yeah I

1330
00:59:33,780 --> 00:59:35,099
don't see anybody else on the on the

1331
00:59:35,099 --> 00:59:37,559
queue all right thank you Russ and

1332
00:59:37,559 --> 00:59:40,380
Brennan next all right that's the end of

1333
00:59:40,380 --> 00:59:42,299
my discussion of suit although suit does

1334
00:59:42,299 --> 00:59:43,740
come up on one later slide so if you're

1335
00:59:43,740 --> 00:59:45,480
from don't lose don't leave the room

1336
00:59:45,480 --> 00:59:46,500
which has to do with the relationship

1337
00:59:46,500 --> 00:59:49,380
you're in suit and rats and teeth so now

1338
00:59:49,380 --> 00:59:50,400
we'll get into the details of

1339
00:59:50,400 --> 00:59:52,920
attestation and the relationship to eat

1340
00:59:52,920 --> 00:59:54,059
tokens

1341
00:59:54,059 --> 00:59:57,299
and the rat's working group so and these

1342
00:59:57,299 --> 00:59:58,619
I think this is the longest section of

1343
00:59:58,619 --> 01:00:00,420
slides so you'll have to track my time

1344
01:00:00,420 --> 01:00:03,119
and tell me how I'm doing so okay

1345
01:00:03,119 --> 01:00:05,160
eat tokens okay we just had a discussion

1346
01:00:05,160 --> 01:00:06,780
about suit reports can contain sensitive

1347
01:00:06,780 --> 01:00:08,040
information

1348
01:00:08,040 --> 01:00:09,839
by the way eat tokens can contain

1349
01:00:09,839 --> 01:00:12,059
sensitive information

1350
01:00:12,059 --> 01:00:15,540
what draft 11 said

1351
01:00:15,540 --> 01:00:19,079
um is uh it should use encryption as

1352
01:00:19,079 --> 01:00:20,760
discussed in eat

1353
01:00:20,760 --> 01:00:23,160
okay as opposed to some other type of

1354
01:00:23,160 --> 01:00:26,400
encryption right uh the problem is the

1355
01:00:26,400 --> 01:00:29,700
eat profile section in uh draft 11 has a

1356
01:00:29,700 --> 01:00:33,180
bug in it where it says under cosine and

1357
01:00:33,180 --> 01:00:35,040
Jose protection in this case just cosay

1358
01:00:35,040 --> 01:00:36,359
protection that's the field name out of

1359
01:00:36,359 --> 01:00:37,920
the out of the each specification it

1360
01:00:37,920 --> 01:00:38,940
says you got to have a field that says

1361
01:00:38,940 --> 01:00:40,799
this we only use cosay

1362
01:00:40,799 --> 01:00:43,079
um it says see the cipher Suite section

1363
01:00:43,079 --> 01:00:45,420
the problem is the safer Suite section

1364
01:00:45,420 --> 01:00:47,640
is the one for cheap messages and T

1365
01:00:47,640 --> 01:00:49,980
messages are not encrypted

1366
01:00:49,980 --> 01:00:52,500
and so right now you can't file that the

1367
01:00:52,500 --> 01:00:55,859
the cipher Suite actually is is false

1368
01:00:55,859 --> 01:00:57,059
because this would tell you no

1369
01:00:57,059 --> 01:00:58,200
encryption you got to do encryption

1370
01:00:58,200 --> 01:01:00,359
right so that's the bug okay and so the

1371
01:01:00,359 --> 01:01:02,760
question is when you're sending in each

1372
01:01:02,760 --> 01:01:05,339
token that has sensitive information and

1373
01:01:05,339 --> 01:01:07,020
you should use encryption as discussed

1374
01:01:07,020 --> 01:01:10,200
in eat then what Cipher Suite should you

1375
01:01:10,200 --> 01:01:12,420
use okay

1376
01:01:12,420 --> 01:01:14,160
um and you know for example do you sign

1377
01:01:14,160 --> 01:01:15,839
and then encrypt eat do you encrypt it

1378
01:01:15,839 --> 01:01:17,400
and then sign probably sign and then

1379
01:01:17,400 --> 01:01:18,420
encrypt

1380
01:01:18,420 --> 01:01:20,640
um but which Cipher suite for encryption

1381
01:01:20,640 --> 01:01:22,799
do we specify in the eat profile

1382
01:01:22,799 --> 01:01:24,480
okay because we don't specify for the T

1383
01:01:24,480 --> 01:01:26,280
message we specify for the eat profile

1384
01:01:26,280 --> 01:01:28,140
we got to specify something there

1385
01:01:28,140 --> 01:01:30,480
and so this is where I mentioned suit

1386
01:01:30,480 --> 01:01:33,660
here is you could make an argument that

1387
01:01:33,660 --> 01:01:35,640
a good Cipher Suite to use is the one

1388
01:01:35,640 --> 01:01:36,660
that you're already implementing for

1389
01:01:36,660 --> 01:01:37,980
your suit reports if you care about

1390
01:01:37,980 --> 01:01:39,960
sensitive information in both eat and

1391
01:01:39,960 --> 01:01:41,819
Sue reports okay it sure would be nice

1392
01:01:41,819 --> 01:01:43,619
to do have these same things that are

1393
01:01:43,619 --> 01:01:45,180
mandatory to implement in constrained

1394
01:01:45,180 --> 01:01:47,400
devices okay so that's a good argument

1395
01:01:47,400 --> 01:01:48,720
there

1396
01:01:48,720 --> 01:01:52,920
um the a possible argument on the other

1397
01:01:52,920 --> 01:01:55,760
side is that the um

1398
01:01:55,760 --> 01:01:59,760
uh destination of the suit report and

1399
01:01:59,760 --> 01:02:01,799
the destination of the eat are different

1400
01:02:01,799 --> 01:02:03,420
entities

1401
01:02:03,420 --> 01:02:05,220
who might have different requirements

1402
01:02:05,220 --> 01:02:10,799
right one goes to a um uh a verifier and

1403
01:02:10,799 --> 01:02:14,579
one might go to uh The Tam who might be

1404
01:02:14,579 --> 01:02:16,380
processing the suit report

1405
01:02:16,380 --> 01:02:18,599
and so maybe there's cases we want them

1406
01:02:18,599 --> 01:02:21,059
to be different but I guess right now my

1407
01:02:21,059 --> 01:02:24,420
preference would be to recommend them be

1408
01:02:24,420 --> 01:02:26,640
the same and leave it to extensions to

1409
01:02:26,640 --> 01:02:28,440
if you ever had a case you wanted to be

1410
01:02:28,440 --> 01:02:31,140
different and if they're the same that

1411
01:02:31,140 --> 01:02:32,339
means that

1412
01:02:32,339 --> 01:02:34,859
um we still need to pick something okay

1413
01:02:34,859 --> 01:02:36,599
if you go back to the discussion that

1414
01:02:36,599 --> 01:02:38,220
Brennan and Russ and I were just having

1415
01:02:38,220 --> 01:02:41,099
whatever the encryption mechanism is for

1416
01:02:41,099 --> 01:02:42,839
suit reports is something that the suit

1417
01:02:42,839 --> 01:02:45,480
report itself document would not say we

1418
01:02:45,480 --> 01:02:47,160
do that in the eat profile

1419
01:02:47,160 --> 01:02:50,460
and we would also say the same thing in

1420
01:02:50,460 --> 01:02:53,099
uh for for suit reports as well as uh

1421
01:02:53,099 --> 01:02:55,440
the eats themselves because the point

1422
01:02:55,440 --> 01:02:56,940
that I made the suit working group is

1423
01:02:56,940 --> 01:02:58,980
it's not just the suit report and the

1424
01:02:58,980 --> 01:03:00,359
eat there's a bunch of other claims in

1425
01:03:00,359 --> 01:03:01,740
the eat that's not right since we want

1426
01:03:01,740 --> 01:03:03,359
some generic statement some generic

1427
01:03:03,359 --> 01:03:06,480
algorithm in crypto so far we've only

1428
01:03:06,480 --> 01:03:08,119
talked about in this working group

1429
01:03:08,119 --> 01:03:10,099
signature albums we've talked about

1430
01:03:10,099 --> 01:03:13,740
eddsa and es-256 we've not talked about

1431
01:03:13,740 --> 01:03:15,960
the crypto algorithms or sorry the the

1432
01:03:15,960 --> 01:03:18,059
encryption algorithms

1433
01:03:18,059 --> 01:03:19,619
and so

1434
01:03:19,619 --> 01:03:21,599
um I guess I would like uh maybe

1435
01:03:21,599 --> 01:03:24,359
Brendan's opinion uh since Brandon had

1436
01:03:24,359 --> 01:03:25,859
the mandatory to implement document and

1437
01:03:25,859 --> 01:03:28,500
suit for constrained devices should we

1438
01:03:28,500 --> 01:03:30,180
just take the cipher Suites or some

1439
01:03:30,180 --> 01:03:31,859
portion of Cipher Suites there as the

1440
01:03:31,859 --> 01:03:34,260
default one for this working group in

1441
01:03:34,260 --> 01:03:35,760
the eat profile

1442
01:03:35,760 --> 01:03:38,280
or is there any reason to use different

1443
01:03:38,280 --> 01:03:41,579
ones than what you put into the uh uh

1444
01:03:41,579 --> 01:03:42,660
and again we're talking about those

1445
01:03:42,660 --> 01:03:44,460
encryption algorithms in the MTI

1446
01:03:44,460 --> 01:03:47,040
document in suit I gather that some of

1447
01:03:47,040 --> 01:03:49,079
the implementers already have a hard

1448
01:03:49,079 --> 01:03:52,980
requirement in tip for using RSA

1449
01:03:52,980 --> 01:03:55,980
in signature use cases that being the

1450
01:03:55,980 --> 01:03:58,140
case I would be inclined to ask them

1451
01:03:58,140 --> 01:04:01,440
what they require because those are not

1452
01:04:01,440 --> 01:04:05,160
in the suit MTI draft

1453
01:04:05,160 --> 01:04:06,799
okay

1454
01:04:06,799 --> 01:04:09,900
anybody here have an opinion otherwise

1455
01:04:09,900 --> 01:04:11,400
we'll ask the question on the list

1456
01:04:11,400 --> 01:04:14,640
anybody here have an opinion on uh

1457
01:04:14,640 --> 01:04:16,559
encryption

1458
01:04:16,559 --> 01:04:20,520
algorithms for use in encrypting suit

1459
01:04:20,520 --> 01:04:25,079
reports and or eat tokens

1460
01:04:25,079 --> 01:04:26,819
if not we'll just ask it on the list

1461
01:04:26,819 --> 01:04:28,440
sorry Brendan Warren back at the mic

1462
01:04:28,440 --> 01:04:30,119
maybe I misunderstood the question this

1463
01:04:30,119 --> 01:04:31,740
isn't about key exchange at all is that

1464
01:04:31,740 --> 01:04:33,240
you're just talking about the symmetric

1465
01:04:33,240 --> 01:04:34,619
encryption

1466
01:04:34,619 --> 01:04:36,960
okay my apologies

1467
01:04:36,960 --> 01:04:38,760
um right there's been a massive

1468
01:04:38,760 --> 01:04:42,420
discussion going on on this and given

1469
01:04:42,420 --> 01:04:45,780
the kind of environment that you're in

1470
01:04:45,780 --> 01:04:49,740
I strikes me that you do not need to

1471
01:04:49,740 --> 01:04:51,780
deal with out of order

1472
01:04:51,780 --> 01:04:55,980
arrival of uh data correct you do not

1473
01:04:55,980 --> 01:04:58,740
need to deal with a situation where you

1474
01:04:58,740 --> 01:05:00,240
haven't got enough space to store the

1475
01:05:00,240 --> 01:05:02,760
ciphertext instead of the plain text

1476
01:05:02,760 --> 01:05:04,440
correct

1477
01:05:04,440 --> 01:05:09,359
uh because here it's the sender it's the

1478
01:05:09,359 --> 01:05:10,859
one that's likely to be constrained not

1479
01:05:10,859 --> 01:05:13,079
the receiver so this should not be an

1480
01:05:13,079 --> 01:05:15,780
issue for you and on that basis I

1481
01:05:15,780 --> 01:05:17,640
wouldn't try to use any of the

1482
01:05:17,640 --> 01:05:19,680
constrained stuff you probably want to

1483
01:05:19,680 --> 01:05:22,079
use one of the aeads just because it

1484
01:05:22,079 --> 01:05:24,180
provides less room for error

1485
01:05:24,180 --> 01:05:27,299
yeah that there might be uh requirements

1486
01:05:27,299 --> 01:05:31,559
that says the Gen the the encrypter side

1487
01:05:31,559 --> 01:05:33,720
 needs to be as as small as possible

1488
01:05:33,720 --> 01:05:35,040
in terms of the implementation of space

1489
01:05:35,040 --> 01:05:37,200
and so on but the decryption side is

1490
01:05:37,200 --> 01:05:39,660
probably unconstrained yeah so if you

1491
01:05:39,660 --> 01:05:44,339
can afford aesj GCM or AES CCM then okay

1492
01:05:44,339 --> 01:05:45,839
that's the direction you want to go okay

1493
01:05:45,839 --> 01:05:47,520
thank you for the recommendation

1494
01:05:47,520 --> 01:05:48,920
all right

1495
01:05:48,920 --> 01:05:52,020
plus one okay plus two that's the the

1496
01:05:52,020 --> 01:05:54,299
harness also thumbs up okay

1497
01:05:54,299 --> 01:05:57,619
uh next slide

1498
01:06:00,720 --> 01:06:03,299
okay

1499
01:06:03,299 --> 01:06:07,020
um Thomas fasady asked raise this one uh

1500
01:06:07,020 --> 01:06:09,480
in draft 11

1501
01:06:09,480 --> 01:06:12,240
it said that in the eat profile all

1502
01:06:12,240 --> 01:06:14,280
claims were listed as optional and he

1503
01:06:14,280 --> 01:06:16,799
observed that that's probably wrong

1504
01:06:16,799 --> 01:06:19,079
um and so uh there's an open pull

1505
01:06:19,079 --> 01:06:20,819
request here ready to be merged if

1506
01:06:20,819 --> 01:06:24,000
there's consensus that has this that has

1507
01:06:24,000 --> 01:06:25,799
um one two three those five so this

1508
01:06:25,799 --> 01:06:27,299
there was six claims already talked

1509
01:06:27,299 --> 01:06:28,680
about in the document okay and these

1510
01:06:28,680 --> 01:06:31,079
match to what the architecture document

1511
01:06:31,079 --> 01:06:33,359
says that uh Tam would need to know in

1512
01:06:33,359 --> 01:06:36,240
order to do remediation right and so

1513
01:06:36,240 --> 01:06:37,559
those are the five and then the fifth

1514
01:06:37,559 --> 01:06:38,940
one is just for freshness so the five

1515
01:06:38,940 --> 01:06:40,619
ones it's actually information that they

1516
01:06:40,619 --> 01:06:43,200
need to make a decision as to what

1517
01:06:43,200 --> 01:06:45,180
binaries are appropriate on the device

1518
01:06:45,180 --> 01:06:46,559
and whether they're up to date and so on

1519
01:06:46,559 --> 01:06:48,539
is those five right a unique identifier

1520
01:06:48,539 --> 01:06:50,760
of the device and you can identifier of

1521
01:06:50,760 --> 01:06:53,280
the OEM or Hardware vendor what the

1522
01:06:53,280 --> 01:06:55,140
model the version is and the manifests

1523
01:06:55,140 --> 01:06:56,039
that are already installed on the device

1524
01:06:56,039 --> 01:06:58,020
that's the list okay so the proposal is

1525
01:06:58,020 --> 01:06:59,520
to take all five of them and then make

1526
01:06:59,520 --> 01:07:02,180
those be mandatory instead of optional

1527
01:07:02,180 --> 01:07:05,880
and then the sixth one is the nonce and

1528
01:07:05,880 --> 01:07:07,079
that one will be mandatory if you're

1529
01:07:07,079 --> 01:07:08,700
using the nonce freshness scheme and if

1530
01:07:08,700 --> 01:07:10,020
you're using the timestamp freshness

1531
01:07:10,020 --> 01:07:11,460
scheme then the timestamp is mandatory

1532
01:07:11,460 --> 01:07:13,559
instead okay and so that's the proposed

1533
01:07:13,559 --> 01:07:16,920
resolution uh to that one so uh because

1534
01:07:16,920 --> 01:07:18,539
I think the only way to implement a tam

1535
01:07:18,539 --> 01:07:20,700
is to have all the information so

1536
01:07:20,700 --> 01:07:23,880
okay It's News comments next slide

1537
01:07:23,880 --> 01:07:25,319
okay

1538
01:07:25,319 --> 01:07:27,839
so the each spec says this so this is

1539
01:07:27,839 --> 01:07:28,740
one that we talked about at the

1540
01:07:28,740 --> 01:07:30,119
hackathon and we talked about it between

1541
01:07:30,119 --> 01:07:34,380
the suit rats and people that were uh at

1542
01:07:34,380 --> 01:07:36,780
the tables and things uh the eat spec

1543
01:07:36,780 --> 01:07:38,579
says a suit manifest can be used as a

1544
01:07:38,579 --> 01:07:39,720
manifest

1545
01:07:39,720 --> 01:07:42,359
and then the eat spec has Fields there

1546
01:07:42,359 --> 01:07:44,039
for a content type which is a co-op

1547
01:07:44,039 --> 01:07:46,020
content format and a con and then a the

1548
01:07:46,020 --> 01:07:48,780
body which is in this case like a Json

1549
01:07:48,780 --> 01:07:50,700
or Seaboard blob

1550
01:07:50,700 --> 01:07:53,339
and so he says well exactly how do I put

1551
01:07:53,339 --> 01:07:55,799
a suit manifest in there okay

1552
01:07:55,799 --> 01:07:57,180
um if I'm going to use Seaboard which

1553
01:07:57,180 --> 01:07:59,880
seaboar production is it okay is it the

1554
01:07:59,880 --> 01:08:02,339
suit envelope or is it a suit reference

1555
01:08:02,339 --> 01:08:05,640
or what and so uh between Brendan and me

1556
01:08:05,640 --> 01:08:08,819
and uh I think Lawrence uh he said well

1557
01:08:08,819 --> 01:08:11,940
the proposal is to say what you put in

1558
01:08:11,940 --> 01:08:14,039
here is a suit reference

1559
01:08:14,039 --> 01:08:16,560
okay you know it's the the ID and the

1560
01:08:16,560 --> 01:08:18,238
URL from where you can get it and so on

1561
01:08:18,238 --> 01:08:21,179
but not not the whole thing right and so

1562
01:08:21,179 --> 01:08:23,339
that means that uh someplace we would

1563
01:08:23,339 --> 01:08:25,259
need to write this down and get a co-op

1564
01:08:25,259 --> 01:08:28,319
content format for the suit reference

1565
01:08:28,319 --> 01:08:31,799
okay so that is the proposal is to get a

1566
01:08:31,799 --> 01:08:33,719
new value allocated for Co-Op content

1567
01:08:33,719 --> 01:08:35,819
format that means that specifically a

1568
01:08:35,819 --> 01:08:37,979
suit reference object

1569
01:08:37,979 --> 01:08:39,660
um and then write down and where would

1570
01:08:39,660 --> 01:08:41,279
we write that down probably in draft

1571
01:08:41,279 --> 01:08:43,439
ietf suit reports which is what defines

1572
01:08:43,439 --> 01:08:47,279
the student the suit reference cddl

1573
01:08:47,279 --> 01:08:49,859
okay I saw a couple nods so okay

1574
01:08:49,859 --> 01:08:51,839
so that means that's work for Brendan

1575
01:08:51,839 --> 01:08:53,759
that I would uh in in the suit reports

1576
01:08:53,759 --> 01:08:55,500
document that we will then reference in

1577
01:08:55,500 --> 01:08:58,279
this document so

1578
01:08:59,719 --> 01:09:05,339
no no not again okay next okay uh we did

1579
01:09:05,339 --> 01:09:07,620
update this goes back to the the the

1580
01:09:07,620 --> 01:09:10,679
spec used to have a very old uh sample

1581
01:09:10,679 --> 01:09:12,839
eat token that needed to be updated with

1582
01:09:12,839 --> 01:09:14,160
the latest claims and stuff as they

1583
01:09:14,160 --> 01:09:15,420
appear and eat and so this has been

1584
01:09:15,420 --> 01:09:17,939
updated now and so this fills in what we

1585
01:09:17,939 --> 01:09:19,738
just talked about here and of course

1586
01:09:19,738 --> 01:09:21,359
since there isn't a co-op content format

1587
01:09:21,359 --> 01:09:23,640
yet it temporarily has 60 app which is

1588
01:09:23,640 --> 01:09:25,920
application seaboor with a to be

1589
01:09:25,920 --> 01:09:27,238
replaced you dude that says as soon as

1590
01:09:27,238 --> 01:09:28,620
they get a value change to 60 to be

1591
01:09:28,620 --> 01:09:29,819
whatever the new one is right but it

1592
01:09:29,819 --> 01:09:31,198
means you could actually code this right

1593
01:09:31,198 --> 01:09:33,179
now and use it in the meantime in in

1594
01:09:33,179 --> 01:09:35,580
hackathon tests and stuff and so and you

1595
01:09:35,580 --> 01:09:37,140
can see here's an example suit manifest

1596
01:09:37,140 --> 01:09:39,600
which has a sample URI and the digest

1597
01:09:39,600 --> 01:09:41,698
and so on

1598
01:09:41,698 --> 01:09:43,319
and so this is just in the pull request

1599
01:09:43,319 --> 01:09:44,698
which unless is the objections will

1600
01:09:44,698 --> 01:09:45,960
merge the pull request and that'll be

1601
01:09:45,960 --> 01:09:49,979
what's in the dashed well yeah next okay

1602
01:09:49,979 --> 01:09:51,779
um this is the intro to the next one

1603
01:09:51,779 --> 01:09:53,100
this is not the open issue but as a

1604
01:09:53,100 --> 01:09:56,460
reminder uh way back when in 105 we

1605
01:09:56,460 --> 01:09:58,199
talked about how you could use this in

1606
01:09:58,199 --> 01:09:59,640
the following orientation where the Tam

1607
01:09:59,640 --> 01:10:01,500
is kind of in the middle

1608
01:10:01,500 --> 01:10:04,320
um where uh when a tester wants to get

1609
01:10:04,320 --> 01:10:06,120
attestation results that can present to

1610
01:10:06,120 --> 01:10:08,640
some other relying party they do so by

1611
01:10:08,640 --> 01:10:10,739
sending it through the Tam as if the Tam

1612
01:10:10,739 --> 01:10:12,179
was a verifier so it's like you have

1613
01:10:12,179 --> 01:10:14,640
chained verifiers in each case so you

1614
01:10:14,640 --> 01:10:16,020
send it to who you think is the verifier

1615
01:10:16,020 --> 01:10:17,820
which is after the Tam the tan sends it

1616
01:10:17,820 --> 01:10:19,140
on another verifier gets back the

1617
01:10:19,140 --> 01:10:21,600
optimization result if it's a failure

1618
01:10:21,600 --> 01:10:23,760
The Tam kicks off remediation and starts

1619
01:10:23,760 --> 01:10:25,920
doing updates as necessary it would say

1620
01:10:25,920 --> 01:10:27,540
success in their hand that passes it

1621
01:10:27,540 --> 01:10:28,860
back to the tester which can then

1622
01:10:28,860 --> 01:10:30,360
present it okay so that's the example

1623
01:10:30,360 --> 01:10:32,520
flow here the example composition you

1624
01:10:32,520 --> 01:10:34,080
don't have to do it this way but this

1625
01:10:34,080 --> 01:10:36,780
would be one way that might be popular

1626
01:10:36,780 --> 01:10:40,199
okay and so way back in I in the earlier

1627
01:10:40,199 --> 01:10:42,179
ITF we said so what message is it that

1628
01:10:42,179 --> 01:10:44,100
passes the attestation result downward

1629
01:10:44,100 --> 01:10:47,580
from The Tam to the tee and in iitf 114

1630
01:10:47,580 --> 01:10:49,860
we said that was the T update message

1631
01:10:49,860 --> 01:10:52,500
where we updated it just before 114 to

1632
01:10:52,500 --> 01:10:53,880
have that as the answer okay so that's

1633
01:10:53,880 --> 01:10:55,380
the pre you got to understand this to

1634
01:10:55,380 --> 01:10:56,820
understand the next slide okay so now

1635
01:10:56,820 --> 01:10:59,640
we've got the context next slide okay

1636
01:10:59,640 --> 01:11:00,900
so the discussion we had at the

1637
01:11:00,900 --> 01:11:03,179
hackathon is out of the teep profile or

1638
01:11:03,179 --> 01:11:05,820
the eat profiles for ETC station results

1639
01:11:05,820 --> 01:11:09,000
okay there's two profiles that have been

1640
01:11:09,000 --> 01:11:11,640
defined so far one is the one that's the

1641
01:11:11,640 --> 01:11:14,820
keep profile in the teep document that's

1642
01:11:14,820 --> 01:11:18,560
for use by consumption by The Tam

1643
01:11:18,560 --> 01:11:20,280
attestation results is going to be

1644
01:11:20,280 --> 01:11:22,880
consumed by The Tam the other one is

1645
01:11:22,880 --> 01:11:25,320
ar4si is the acronym for the draft and

1646
01:11:25,320 --> 01:11:27,179
the in the rats working group and that

1647
01:11:27,179 --> 01:11:28,739
one is designed for other relying

1648
01:11:28,739 --> 01:11:30,360
parties which was that other box in the

1649
01:11:30,360 --> 01:11:31,080
slide

1650
01:11:31,080 --> 01:11:32,820
so the attestation results line that

1651
01:11:32,820 --> 01:11:35,040
comes down there's one profile for the

1652
01:11:35,040 --> 01:11:36,120
thing that comes to The Tam and a

1653
01:11:36,120 --> 01:11:37,199
different profile for the things that

1654
01:11:37,199 --> 01:11:38,940
comes to their lying party so what's the

1655
01:11:38,940 --> 01:11:40,380
relationship between those two things

1656
01:11:40,380 --> 01:11:42,659
okay this is what we had the discussion

1657
01:11:42,659 --> 01:11:44,760
with hackathon about

1658
01:11:44,760 --> 01:11:47,340
uh and it turned out that those two

1659
01:11:47,340 --> 01:11:48,960
things could even be encoded differently

1660
01:11:48,960 --> 01:11:52,320
because it is say both Json and C bar

1661
01:11:52,320 --> 01:11:53,820
whichever one that you want and so it

1662
01:11:53,820 --> 01:11:56,460
could be that the Tam requires it in

1663
01:11:56,460 --> 01:11:57,659
seabor and the other lying party

1664
01:11:57,659 --> 01:12:01,260
requires it in Json

1665
01:12:01,260 --> 01:12:03,780
uh so that means and similar your

1666
01:12:03,780 --> 01:12:05,100
freshness mechanisms might be different

1667
01:12:05,100 --> 01:12:06,719
one might be using time stamps for

1668
01:12:06,719 --> 01:12:08,340
freshness the other one only supports

1669
01:12:08,340 --> 01:12:10,800
nonsense refreshness okay so it means

1670
01:12:10,800 --> 01:12:12,540
you might have disjoint requirements

1671
01:12:12,540 --> 01:12:13,320
here

1672
01:12:13,320 --> 01:12:16,860
and so does that mean that you need a to

1673
01:12:16,860 --> 01:12:18,659
like encapsulate them and you did a

1674
01:12:18,659 --> 01:12:21,000
media type for all the combinations of A

1675
01:12:21,000 --> 01:12:23,460
and B and things and so that just seemed

1676
01:12:23,460 --> 01:12:26,100
um problematic and so there was uh five

1677
01:12:26,100 --> 01:12:27,960
options we discussed the first three of

1678
01:12:27,960 --> 01:12:29,880
them have all those above issues and so

1679
01:12:29,880 --> 01:12:33,179
we kind of included maybe that's not the

1680
01:12:33,179 --> 01:12:34,620
right way to go even though that's kind

1681
01:12:34,620 --> 01:12:36,060
of what the draft previously would have

1682
01:12:36,060 --> 01:12:37,500
implied

1683
01:12:37,500 --> 01:12:38,760
um but we didn't like any of those first

1684
01:12:38,760 --> 01:12:40,380
three

1685
01:12:40,380 --> 01:12:40,980
um

1686
01:12:40,980 --> 01:12:43,260
actually there's downsides to all five

1687
01:12:43,260 --> 01:12:44,699
of these and that's why there's not a

1688
01:12:44,699 --> 01:12:46,140
proposed one here

1689
01:12:46,140 --> 01:12:47,640
um I might have my own preference on

1690
01:12:47,640 --> 01:12:48,480
here

1691
01:12:48,480 --> 01:12:50,640
so option number four

1692
01:12:50,640 --> 01:12:54,179
is to say this one actually requires uh

1693
01:12:54,179 --> 01:12:55,500
since we don't say anything about the

1694
01:12:55,500 --> 01:12:56,760
protocol between the Tam and the

1695
01:12:56,760 --> 01:12:59,640
verifier okay and neither does rats by

1696
01:12:59,640 --> 01:13:00,540
the way right you can use whatever

1697
01:13:00,540 --> 01:13:02,040
protocol that you want it just has so

1698
01:13:02,040 --> 01:13:03,480
here's some message formats but you got

1699
01:13:03,480 --> 01:13:05,100
to put them in some protocol you know it

1700
01:13:05,100 --> 01:13:07,080
could be a HTTP rest API or whatever

1701
01:13:07,080 --> 01:13:09,480
this one does have an option four has a

1702
01:13:09,480 --> 01:13:10,980
constraint on that protocol which says

1703
01:13:10,980 --> 01:13:13,020
when I'm going to have send off the

1704
01:13:13,020 --> 01:13:14,340
evidence and I'm going to say hey please

1705
01:13:14,340 --> 01:13:15,960
give me attestation results in the form

1706
01:13:15,960 --> 01:13:18,300
of you know seabor or give me it in

1707
01:13:18,300 --> 01:13:19,860
here's the profile I want the Deep

1708
01:13:19,860 --> 01:13:22,560
profile or whatever is not number four

1709
01:13:22,560 --> 01:13:24,540
in that request you'd say I need it back

1710
01:13:24,540 --> 01:13:26,219
in two different formats please give me

1711
01:13:26,219 --> 01:13:29,580
two blobs okay not just one okay so I

1712
01:13:29,580 --> 01:13:30,900
can't just do like a regular accept

1713
01:13:30,900 --> 01:13:32,640
header right it's probably constraining

1714
01:13:32,640 --> 01:13:34,620
the protocol I need it in this one and

1715
01:13:34,620 --> 01:13:37,080
in this one one request two blobs in the

1716
01:13:37,080 --> 01:13:39,239
response okay that's what number four is

1717
01:13:39,239 --> 01:13:40,739
and then I can get it back one is opaque

1718
01:13:40,739 --> 01:13:42,060
to The Tam and you can just pass it on

1719
01:13:42,060 --> 01:13:44,760
and one is consumed by The Tam okay and

1720
01:13:44,760 --> 01:13:46,679
so that one is like having two parallel

1721
01:13:46,679 --> 01:13:48,540
accept headers and two separate

1722
01:13:48,540 --> 01:13:50,040
responses one that you parse and one

1723
01:13:50,040 --> 01:13:51,780
that you just pass on on that one's kind

1724
01:13:51,780 --> 01:13:53,100
of weird but you could do it and it's

1725
01:13:53,100 --> 01:13:55,860
the fewest number of messages maybe

1726
01:13:55,860 --> 01:13:57,840
um and but it does work with all the

1727
01:13:57,840 --> 01:13:59,760
different previous constraints

1728
01:13:59,760 --> 01:14:01,620
option number five

1729
01:14:01,620 --> 01:14:04,080
is to say well this flow that puts the

1730
01:14:04,080 --> 01:14:05,760
Tam in the middle well just don't do

1731
01:14:05,760 --> 01:14:08,520
that instead make the tester go all the

1732
01:14:08,520 --> 01:14:10,199
way around to get the air for our size

1733
01:14:10,199 --> 01:14:12,659
this line that comes here ar4si would

1734
01:14:12,659 --> 01:14:14,280
not actually come through the dam nor

1735
01:14:14,280 --> 01:14:15,480
with the evidence the evidence would

1736
01:14:15,480 --> 01:14:17,400
come to The Tam in a separate evidence

1737
01:14:17,400 --> 01:14:18,960
would come to the verifier and each of

1738
01:14:18,960 --> 01:14:20,580
them would respond separately okay

1739
01:14:20,580 --> 01:14:22,199
meaning

1740
01:14:22,199 --> 01:14:23,880
evidence comes to the town this one

1741
01:14:23,880 --> 01:14:26,159
comes back here other evidence comes all

1742
01:14:26,159 --> 01:14:27,719
the way around the verifier and comes

1743
01:14:27,719 --> 01:14:29,280
all the way around back to the tester or

1744
01:14:29,280 --> 01:14:30,480
the other relying party depending where

1745
01:14:30,480 --> 01:14:31,800
they're talking about uh background

1746
01:14:31,800 --> 01:14:33,840
check or passport model okay so that one

1747
01:14:33,840 --> 01:14:37,140
means double the messages from the uh a

1748
01:14:37,140 --> 01:14:39,000
test or the other relying party I say or

1749
01:14:39,000 --> 01:14:40,620
because it depends on background check

1750
01:14:40,620 --> 01:14:42,480
versus passport model both cases are

1751
01:14:42,480 --> 01:14:45,120
there but they collapse into this and so

1752
01:14:45,120 --> 01:14:46,800
if that was a constrained device that

1753
01:14:46,800 --> 01:14:48,320
means hey two messages

1754
01:14:48,320 --> 01:14:50,880
perhaps more power consumed and so on so

1755
01:14:50,880 --> 01:14:52,260
that's the disadvantage of number five

1756
01:14:52,260 --> 01:14:54,420
is more a little bit more complexity

1757
01:14:54,420 --> 01:14:55,920
because you can't hide all the

1758
01:14:55,920 --> 01:14:57,420
complexity behind a tam if you have a

1759
01:14:57,420 --> 01:14:59,280
tiny constrained device okay

1760
01:14:59,280 --> 01:15:01,020
so those are the five things that we

1761
01:15:01,020 --> 01:15:03,120
know of right now

1762
01:15:03,120 --> 01:15:04,199
um

1763
01:15:04,199 --> 01:15:07,739
anybody have an opinion on uh which if

1764
01:15:07,739 --> 01:15:08,880
there are some of those they would like

1765
01:15:08,880 --> 01:15:10,679
to vote off of the island or they think

1766
01:15:10,679 --> 01:15:12,060
would be the most appropriate for their

1767
01:15:12,060 --> 01:15:14,280
favorite use case Okay

1768
01:15:14,280 --> 01:15:15,080
um

1769
01:15:15,080 --> 01:15:16,800
otherwise

1770
01:15:16,800 --> 01:15:19,920
um since number four actually constrains

1771
01:15:19,920 --> 01:15:22,020
the protocol

1772
01:15:22,020 --> 01:15:22,860
um

1773
01:15:22,860 --> 01:15:24,960
somewhere between four and five is my

1774
01:15:24,960 --> 01:15:26,040
preference unless somebody has another

1775
01:15:26,040 --> 01:15:28,800
magic idea

1776
01:15:28,800 --> 01:15:31,260
and I would prefer to not try to do the

1777
01:15:31,260 --> 01:15:33,000
you know media type parameters allowing

1778
01:15:33,000 --> 01:15:35,340
each combination which all three of one

1779
01:15:35,340 --> 01:15:38,960
two and three would have that problem so

1780
01:15:39,780 --> 01:15:41,219
so I kind of we kind of scratched our

1781
01:15:41,219 --> 01:15:42,300
head during the hackathon said we'll

1782
01:15:42,300 --> 01:15:43,560
bring it up here see if anybody has any

1783
01:15:43,560 --> 01:15:45,540
magic advice for us so

1784
01:15:45,540 --> 01:15:47,340
um otherwise the authors will try to

1785
01:15:47,340 --> 01:15:48,480
figure out what to do in the next

1786
01:15:48,480 --> 01:15:50,760
version of the draft so okay pigling

1787
01:15:50,760 --> 01:15:53,540
you're in the queue

1788
01:15:54,000 --> 01:15:56,600
I mean

1789
01:15:56,640 --> 01:15:58,500
this one is the hardest issue so if I

1790
01:15:58,500 --> 01:16:00,420
get cut off on time or whatever this is

1791
01:16:00,420 --> 01:16:01,679
the one that I really wanted feedback on

1792
01:16:01,679 --> 01:16:03,960
so you got five minutes okay cool

1793
01:16:03,960 --> 01:16:07,820
hello can you hear me yep

1794
01:16:07,820 --> 01:16:11,040
I wonder if it's possible that the time

1795
01:16:11,040 --> 01:16:14,100
is the verifier

1796
01:16:14,100 --> 01:16:16,020
that there can be a case where you take

1797
01:16:16,020 --> 01:16:17,580
the 10 roll and the verifier role and

1798
01:16:17,580 --> 01:16:19,020
you collapse them into the same node yes

1799
01:16:19,020 --> 01:16:20,460
that is possible

1800
01:16:20,460 --> 01:16:24,000
uh and then uh option number four

1801
01:16:24,000 --> 01:16:26,400
becomes much easier in that case right

1802
01:16:26,400 --> 01:16:28,260
because there's no protocol between

1803
01:16:28,260 --> 01:16:31,080
those it's your internal implementation

1804
01:16:31,080 --> 01:16:33,179
yeah because I think if we use the time

1805
01:16:33,179 --> 01:16:35,820
as a verifier and this model will be

1806
01:16:35,820 --> 01:16:39,780
more simple to use I think

1807
01:16:39,780 --> 01:16:42,780
um we never want to force people to use

1808
01:16:42,780 --> 01:16:46,739
the same uh Tam and verifier combined

1809
01:16:46,739 --> 01:16:50,820
but allow it yes force it no

1810
01:16:50,820 --> 01:16:53,580
um and there are people doing verifiers

1811
01:16:53,580 --> 01:16:55,800
that want verifier implementations to be

1812
01:16:55,800 --> 01:16:58,320
usable with many different relying

1813
01:16:58,320 --> 01:17:01,980
parties including a tam for that matter

1814
01:17:01,980 --> 01:17:03,540
um I think Verizon was one of the

1815
01:17:03,540 --> 01:17:05,159
implementations that's Thomas facades

1816
01:17:05,159 --> 01:17:06,540
and folks that was there at the

1817
01:17:06,540 --> 01:17:08,880
hackathon that's doing exactly that and

1818
01:17:08,880 --> 01:17:10,140
so we had some people at the table they

1819
01:17:10,140 --> 01:17:11,460
had the time implementation some people

1820
01:17:11,460 --> 01:17:12,600
at the table that had a verifier

1821
01:17:12,600 --> 01:17:14,400
implementation and we wanted them to be

1822
01:17:14,400 --> 01:17:16,440
able to interoperate without precluding

1823
01:17:16,440 --> 01:17:17,640
the fact that you could combine them

1824
01:17:17,640 --> 01:17:19,560
into the same implementation

1825
01:17:19,560 --> 01:17:22,880
okay thank you

1826
01:17:35,400 --> 01:17:38,159
yeah between the um option four four and

1827
01:17:38,159 --> 01:17:40,260
five probably I will prefer four just

1828
01:17:40,260 --> 01:17:42,360
because it's more easier to revise the

1829
01:17:42,360 --> 01:17:47,580
current draft but um not the technical

1830
01:17:47,580 --> 01:17:49,080
um view

1831
01:17:49,080 --> 01:17:52,140
um but I have another question

1832
01:17:52,140 --> 01:17:54,540
um with the some the question I had in

1833
01:17:54,540 --> 01:17:58,440
my hackathon is uh what what is the by

1834
01:17:58,440 --> 01:18:00,719
reading the current draft what is how to

1835
01:18:00,719 --> 01:18:02,640
implement with the

1836
01:18:02,640 --> 01:18:03,960
um other than

1837
01:18:03,960 --> 01:18:07,679
um sgx or TDX or something it's it's

1838
01:18:07,679 --> 01:18:10,020
really neat to yeah ask somebody who

1839
01:18:10,020 --> 01:18:11,820
really knows the implementation or the

1840
01:18:11,820 --> 01:18:15,480
history of the draft so um

1841
01:18:15,480 --> 01:18:20,159
eat profile explanation probably we need

1842
01:18:20,159 --> 01:18:22,020
to

1843
01:18:22,020 --> 01:18:26,400
um yes we make it more informative in

1844
01:18:26,400 --> 01:18:29,719
the in the draft

1845
01:18:31,860 --> 01:18:34,500
yeah um I was actually wondering whether

1846
01:18:34,500 --> 01:18:38,280
we need to cover post the the background

1847
01:18:38,280 --> 01:18:40,320
check and the passport model

1848
01:18:40,320 --> 01:18:42,120
um together like it would be possible to

1849
01:18:42,120 --> 01:18:44,219
just stick with one specifically if this

1850
01:18:44,219 --> 01:18:48,840
one is more exotic or is like um like

1851
01:18:48,840 --> 01:18:51,179
nobody is forcing us to cover

1852
01:18:51,179 --> 01:18:53,040
covered a whole

1853
01:18:53,040 --> 01:18:54,780
um topological flows from the rights

1854
01:18:54,780 --> 01:18:58,080
architecture so here so far the working

1855
01:18:58,080 --> 01:18:59,460
group has been concentrating what's

1856
01:18:59,460 --> 01:19:01,140
shown here with the Tam and then same in

1857
01:19:01,140 --> 01:19:03,540
the previous slide right is that the Tam

1858
01:19:03,540 --> 01:19:07,020
is acting in the um uh background check

1859
01:19:07,020 --> 01:19:09,420
mode right in other words it's the not

1860
01:19:09,420 --> 01:19:11,100
the tester that talked to the verifier

1861
01:19:11,100 --> 01:19:13,260
The Tam is a specific relying party for

1862
01:19:13,260 --> 01:19:14,940
mediation and so this is a background

1863
01:19:14,940 --> 01:19:17,760
check picture here but you saw at the in

1864
01:19:17,760 --> 01:19:19,920
Curious hackathon report that one of the

1865
01:19:19,920 --> 01:19:21,000
implementations was trying to do

1866
01:19:21,000 --> 01:19:22,560
passport with this so we actually do

1867
01:19:22,560 --> 01:19:24,300
have our first implementation it's using

1868
01:19:24,300 --> 01:19:26,159
not this picture right it's using

1869
01:19:26,159 --> 01:19:28,140
something that's much closer to option

1870
01:19:28,140 --> 01:19:30,239
five okay and accurate is not in here

1871
01:19:30,239 --> 01:19:31,739
the other implementation is using option

1872
01:19:31,739 --> 01:19:33,360
five in turn because it's using passport

1873
01:19:33,360 --> 01:19:36,420
right so this issue here the

1874
01:19:36,420 --> 01:19:37,679
relationship tends to be more

1875
01:19:37,679 --> 01:19:38,940
complicated in the background check

1876
01:19:38,940 --> 01:19:41,340
model which is actually more

1877
01:19:41,340 --> 01:19:44,820
common uh but not very ubiquitous right

1878
01:19:44,820 --> 01:19:46,800
so I think my opinion is especially

1879
01:19:46,800 --> 01:19:48,060
after hearing the hackathon stuff since

1880
01:19:48,060 --> 01:19:49,679
we had both passport and background

1881
01:19:49,679 --> 01:19:51,360
check implementations at the table in

1882
01:19:51,360 --> 01:19:52,920
the hackathon as we probably need to

1883
01:19:52,920 --> 01:19:54,840
accommodate both was my takeaway so

1884
01:19:54,840 --> 01:19:57,060
uh before this hackathon I might have

1885
01:19:57,060 --> 01:19:58,620
said let's just use background check for

1886
01:19:58,620 --> 01:20:00,659
the Tam uh but now that we have an

1887
01:20:00,659 --> 01:20:02,040
implementation that I'm now kind of

1888
01:20:02,040 --> 01:20:03,300
convinced that that's not necessarily

1889
01:20:03,300 --> 01:20:06,260
what everybody's going to do so

1890
01:20:06,300 --> 01:20:07,739
um the last thing that I will mention

1891
01:20:07,739 --> 01:20:10,620
here is this uh bullet right here

1892
01:20:10,620 --> 01:20:14,400
before we run out of time is that um uh

1893
01:20:14,400 --> 01:20:16,800
that Tam could in theory send two

1894
01:20:16,800 --> 01:20:18,239
different queries after the verifier

1895
01:20:18,239 --> 01:20:20,100
right if it just uses like a rest API

1896
01:20:20,100 --> 01:20:21,420
with an accept headers and stuff it

1897
01:20:21,420 --> 01:20:23,880
could send the evidence twice okay but

1898
01:20:23,880 --> 01:20:25,320
the only problem there is if it's using

1899
01:20:25,320 --> 01:20:27,060
the nonce mechanism it would need two

1900
01:20:27,060 --> 01:20:29,340
different nonses or or the ability for

1901
01:20:29,340 --> 01:20:31,739
the verifier the receiver to accept the

1902
01:20:31,739 --> 01:20:33,900
same nonce twice right and so it tends

1903
01:20:33,900 --> 01:20:35,159
to have problems in the nonce mechanism

1904
01:20:35,159 --> 01:20:37,219
if you were using the timestamp

1905
01:20:37,219 --> 01:20:39,360
freshness mechanism here you could

1906
01:20:39,360 --> 01:20:40,739
actually do that just fine

1907
01:20:40,739 --> 01:20:45,239
okay so all right if I still have time

1908
01:20:45,239 --> 01:20:47,940
we'll do another slide so yeah

1909
01:20:47,940 --> 01:20:49,560
that was the last slide no I got another

1910
01:20:49,560 --> 01:20:51,179
okay

1911
01:20:51,179 --> 01:20:52,980
um the last one this one is done in

1912
01:20:52,980 --> 01:20:55,080
draft 11 so I just want to confirm this

1913
01:20:55,080 --> 01:20:56,400
is fine

1914
01:20:56,400 --> 01:20:59,460
um I think uh I forget who raised this

1915
01:20:59,460 --> 01:21:00,480
one

1916
01:21:00,480 --> 01:21:02,100
um the

1917
01:21:02,100 --> 01:21:03,840
each profile

1918
01:21:03,840 --> 01:21:05,820
is it when we talked about before that

1919
01:21:05,820 --> 01:21:08,219
content format and we said how how it

1920
01:21:08,219 --> 01:21:09,780
looked if it was an sgx code or whatever

1921
01:21:09,780 --> 01:21:11,460
and there's the value that Akira showed

1922
01:21:11,460 --> 01:21:13,739
that said it was a an eat profile eat

1923
01:21:13,739 --> 01:21:15,659
and say well that's kind of a long

1924
01:21:15,659 --> 01:21:17,040
string

1925
01:21:17,040 --> 01:21:18,420
um and so

1926
01:21:18,420 --> 01:21:22,080
um what happens if in the future you rev

1927
01:21:22,080 --> 01:21:24,719
that okay because what it says right now

1928
01:21:24,719 --> 01:21:26,219
is if your value you're going to send is

1929
01:21:26,219 --> 01:21:27,960
equal to that string you can he lied and

1930
01:21:27,960 --> 01:21:29,340
they'll MIT leaving that long string

1931
01:21:29,340 --> 01:21:30,719
because the absence implies it's that

1932
01:21:30,719 --> 01:21:32,699
strings the question was well as soon as

1933
01:21:32,699 --> 01:21:33,960
you're rev doesn't that mean that you've

1934
01:21:33,960 --> 01:21:35,280
lost encryption and the encryption it's

1935
01:21:35,280 --> 01:21:36,659
not going to not encryption compression

1936
01:21:36,659 --> 01:21:38,159
you're going to need that to be in all

1937
01:21:38,159 --> 01:21:40,080
future messages anyway so why bother

1938
01:21:40,080 --> 01:21:42,420
with the Elijah now right and so I think

1939
01:21:42,420 --> 01:21:44,940
it was Michael Richards and Estes and so

1940
01:21:44,940 --> 01:21:46,620
what it says now is it says well

1941
01:21:46,620 --> 01:21:49,860
whatever the absence means is defined by

1942
01:21:49,860 --> 01:21:51,659
the T protocol version which is a single

1943
01:21:51,659 --> 01:21:53,040
integer out so we're on the same header

1944
01:21:53,040 --> 01:21:55,440
okay and so if you ever wanted to rev it

1945
01:21:55,440 --> 01:21:57,420
then you can easily bump the Steep

1946
01:21:57,420 --> 01:21:59,940
protocol version which then specifies a

1947
01:21:59,940 --> 01:22:02,340
different default so every time you can

1948
01:22:02,340 --> 01:22:04,140
get a new default and you can always you

1949
01:22:04,140 --> 01:22:06,179
know omit the thing as long as you're

1950
01:22:06,179 --> 01:22:07,260
sending the exact thing that that

1951
01:22:07,260 --> 01:22:09,000
version says okay so provides a

1952
01:22:09,000 --> 01:22:10,620
mechanism to rev that's already in the

1953
01:22:10,620 --> 01:22:12,420
spec which is the the version number

1954
01:22:12,420 --> 01:22:14,580
identifier and you say well if we had

1955
01:22:14,580 --> 01:22:18,239
deep version 2 or the keep version a t

1956
01:22:18,239 --> 01:22:20,520
extension or whatever would you say

1957
01:22:20,520 --> 01:22:21,900
we'll put the value 2 in there and set

1958
01:22:21,900 --> 01:22:23,640
the value 1 and then it has a different

1959
01:22:23,640 --> 01:22:25,380
number in it and you can easily do that

1960
01:22:25,380 --> 01:22:27,179
so you can always get the and he said

1961
01:22:27,179 --> 01:22:28,739
ACK on that being done so it's just

1962
01:22:28,739 --> 01:22:30,300
reporting that out

1963
01:22:30,300 --> 01:22:33,300
next

1964
01:22:45,800 --> 01:22:48,780
hi hello uh this is very brief full

1965
01:22:48,780 --> 01:22:51,239
presentation of the tip use case for

1966
01:22:51,239 --> 01:22:53,640
computational computing network uh next

1967
01:22:53,640 --> 01:22:55,380
to that side please

1968
01:22:55,380 --> 01:22:58,080
there are some issues I collect from

1969
01:22:58,080 --> 01:23:01,320
last meeting and I also upload in the

1970
01:23:01,320 --> 01:23:04,560
tip for GitHub so the first issue is a

1971
01:23:04,560 --> 01:23:06,420
cloud scenario should be included

1972
01:23:06,420 --> 01:23:09,840
included and the response is that we

1973
01:23:09,840 --> 01:23:13,140
change the abstract and this and the

1974
01:23:13,140 --> 01:23:15,540
text is the documented is a use case and

1975
01:23:15,540 --> 01:23:17,940
extension of tip and could provide

1976
01:23:17,940 --> 01:23:20,580
guidance for cloud computing MSC and

1977
01:23:20,580 --> 01:23:22,140
other scenarios to use computational

1978
01:23:22,140 --> 01:23:23,940
Computing in network

1979
01:23:23,940 --> 01:23:28,140
uh so next time please

1980
01:23:28,140 --> 01:23:30,840
yeah he's a center issue it's the

1981
01:23:30,840 --> 01:23:33,060
security of competition container should

1982
01:23:33,060 --> 01:23:34,500
be clarified

1983
01:23:34,500 --> 01:23:36,500
and since the

1984
01:23:36,500 --> 01:23:39,659
CTC uh comes to a computer Consortium

1985
01:23:39,659 --> 01:23:42,480
have defined that the the conversation

1986
01:23:42,480 --> 01:23:45,960
container so I changed the I will follow

1987
01:23:45,960 --> 01:23:49,140
the terminology definition and here's

1988
01:23:49,140 --> 01:23:53,400
the example if a CVS and pcpo maintains

1989
01:23:53,400 --> 01:23:55,679
a container in your virtual machine then

1990
01:23:55,679 --> 01:23:58,380
this is a computer VM rather a

1991
01:23:58,380 --> 01:24:02,880
computational container so here is a

1992
01:24:02,880 --> 01:24:06,900
fixed next slide please

1993
01:24:06,900 --> 01:24:10,380
uh this is the specified or refer to

1994
01:24:10,380 --> 01:24:12,900
secure channel in other document I think

1995
01:24:12,900 --> 01:24:15,060
I haven't found a definition of secure

1996
01:24:15,060 --> 01:24:18,780
channel in ITF or maybe use the using

1997
01:24:18,780 --> 01:24:21,480
attestation in transport layer and the

1998
01:24:21,480 --> 01:24:23,460
data transporter layer security dropped

1999
01:24:23,460 --> 01:24:26,820
as a secure Channel maybe I can use a

2000
01:24:26,820 --> 01:24:28,280
loosen definition

2001
01:24:28,280 --> 01:24:31,800
for example some some transformation

2002
01:24:31,800 --> 01:24:33,920
from some

2003
01:24:33,920 --> 01:24:36,360
transformation a method that could

2004
01:24:36,360 --> 01:24:40,020
protect the data in in transfer maybe

2005
01:24:40,020 --> 01:24:44,520
this has haven't been determined and I

2006
01:24:44,520 --> 01:24:47,940
think I will fix it in the next Edition

2007
01:24:47,940 --> 01:24:52,580
uh so next slide please

2008
01:24:52,739 --> 01:24:55,020
uh your fourth issue is the typo and the

2009
01:24:55,020 --> 01:24:57,300
form the correction and I think I have

2010
01:24:57,300 --> 01:25:02,780
fixed all the typos uh next slide please

2011
01:25:03,900 --> 01:25:08,280
this is a operations type in 4.1 where a

2012
01:25:08,280 --> 01:25:12,000
u8 and PDR bundled as a package and the

2013
01:25:12,000 --> 01:25:14,640
comment is that the network user could

2014
01:25:14,640 --> 01:25:17,580
use a transfer encrypt package before a

2015
01:25:17,580 --> 01:25:20,219
testation for efficiency

2016
01:25:20,219 --> 01:25:24,560
and as a response I we delete the

2017
01:25:24,560 --> 01:25:27,239
encryption package under the decryption

2018
01:25:27,239 --> 01:25:30,179
key because if we already have a secure

2019
01:25:30,179 --> 01:25:33,840
Channel there is no need to encrypt the

2020
01:25:33,840 --> 01:25:37,920
package and I also change the draft as

2021
01:25:37,920 --> 01:25:42,000
that in the in the below step three is

2022
01:25:42,000 --> 01:25:44,340
the time request remote attention to the

2023
01:25:44,340 --> 01:25:46,620
tip agent and the team agent is instance

2024
01:25:46,620 --> 01:25:49,380
evidence time uh here's the point the

2025
01:25:49,380 --> 01:25:51,120
time works as verifying in red

2026
01:25:51,120 --> 01:25:53,960
architecture and

2027
01:25:53,960 --> 01:25:56,699
according to the conversation just

2028
01:25:56,699 --> 01:25:59,639
before if we don't force people to use

2029
01:25:59,639 --> 01:26:03,420
use the time as a verifier maybe I need

2030
01:26:03,420 --> 01:26:06,020
to lose this

2031
01:26:06,020 --> 01:26:09,440
established another type so uh

2032
01:26:09,440 --> 01:26:11,100
[Music]

2033
01:26:11,100 --> 01:26:14,100
yeah maybe I need to loosen these steps

2034
01:26:14,100 --> 01:26:18,360
and try to provide just the guidance in

2035
01:26:18,360 --> 01:26:21,560
order to enforce people to use this

2036
01:26:21,560 --> 01:26:24,480
network management management and

2037
01:26:24,480 --> 01:26:27,840
orchestration Center as the verifier so

2038
01:26:27,840 --> 01:26:31,040
next slide please

2039
01:26:31,139 --> 01:26:34,219
and here's a

2040
01:26:34,219 --> 01:26:39,480
provision style 4. 4.2 where PD is a

2041
01:26:39,480 --> 01:26:41,520
separate package and the TA and the uar

2042
01:26:41,520 --> 01:26:44,820
separated or Integrity the comments here

2043
01:26:44,820 --> 01:26:48,239
is that clarify deploy and low load in

2044
01:26:48,239 --> 01:26:50,159
this case so

2045
01:26:50,159 --> 01:26:54,440
in the step three the network user will

2046
01:26:54,440 --> 01:26:56,699
transfer your NTA to the computer

2047
01:26:56,699 --> 01:27:00,900
Computing device via a TM Time and Time

2048
01:27:00,900 --> 01:27:03,600
Zone deploy these two applications in re

2049
01:27:03,600 --> 01:27:07,440
and the T respectively and in sdx the UA

2050
01:27:07,440 --> 01:27:10,440
must be deployed first then lets the UA

2051
01:27:10,440 --> 01:27:13,440
to load the TA in the sdx

2052
01:27:13,440 --> 01:27:17,340
so uh next slide please

2053
01:27:17,340 --> 01:27:21,540
it has Issue 7 here the comment here is

2054
01:27:21,540 --> 01:27:24,480
the time is not in the path of UA

2055
01:27:24,480 --> 01:27:27,659
distribution so we just fix the steps as

2056
01:27:27,659 --> 01:27:30,239
the network user deploys you and read

2057
01:27:30,239 --> 01:27:32,940
and how it deploys I think it's out of

2058
01:27:32,940 --> 01:27:34,679
scope of this document

2059
01:27:34,679 --> 01:27:38,540
so next slide please

2060
01:27:38,760 --> 01:27:41,219
here here is a introduction Improvement

2061
01:27:41,219 --> 01:27:46,560
I think it's uh I try to solve this

2062
01:27:46,560 --> 01:27:49,800
issue by using multiple multiparty

2063
01:27:49,800 --> 01:27:51,780
Computing and the factory Federated

2064
01:27:51,780 --> 01:27:54,000
machine learning to explain these use

2065
01:27:54,000 --> 01:27:56,940
cases because both MEC and the Federate

2066
01:27:56,940 --> 01:28:00,900
ability will use T as a measure to

2067
01:28:00,900 --> 01:28:05,219
protect the their private data I'm not

2068
01:28:05,219 --> 01:28:08,960
sure if I should add this

2069
01:28:08,960 --> 01:28:12,960
text in the main body text or in the

2070
01:28:12,960 --> 01:28:16,260
appendix and I think I will fix data in

2071
01:28:16,260 --> 01:28:20,880
next Russian next slide please

2072
01:28:20,880 --> 01:28:24,739
okay the specified data owner and

2073
01:28:24,739 --> 01:28:27,360
in the document the data owner has been

2074
01:28:27,360 --> 01:28:29,820
replaced by the network user because the

2075
01:28:29,820 --> 01:28:32,580
network user possesses a personalization

2076
01:28:32,580 --> 01:28:35,280
data and applications that need to be

2077
01:28:35,280 --> 01:28:38,659
deployed on computer Force

2078
01:28:38,659 --> 01:28:43,159
so next slide please

2079
01:28:44,040 --> 01:28:46,320
yeah here's the losing deployment

2080
01:28:46,320 --> 01:28:49,380
options I think it relates to the issue

2081
01:28:49,380 --> 01:28:51,960
5 6 and 7 and

2082
01:28:51,960 --> 01:28:55,340
next slide please

2083
01:28:55,739 --> 01:28:58,320
and here is the one question that the UA

2084
01:28:58,320 --> 01:29:00,060
may be tempered and this may cause those

2085
01:29:00,060 --> 01:29:03,000
attack or even the dorsal attack and I

2086
01:29:03,000 --> 01:29:04,980
think that the UAE is defined as

2087
01:29:04,980 --> 01:29:07,560
untrusted so the team architecture

2088
01:29:07,560 --> 01:29:10,679
cannot make sure that the UA is secure

2089
01:29:10,679 --> 01:29:14,520
and the trustworthness so in some some

2090
01:29:14,520 --> 01:29:17,960
meaning I think that the toss attack

2091
01:29:17,960 --> 01:29:21,179
cannot be totally denied but if we could

2092
01:29:21,179 --> 01:29:23,880
create a screw Shadow between the T and

2093
01:29:23,880 --> 01:29:27,620
the network user all the time

2094
01:29:27,620 --> 01:29:30,719
for example if we use course and to

2095
01:29:30,719 --> 01:29:33,179
encode the network data the server side

2096
01:29:33,179 --> 01:29:36,480
of the t equal to discard this malicious

2097
01:29:36,480 --> 01:29:40,380
Network flow as 2D broker since the team

2098
01:29:40,380 --> 01:29:42,840
broker is a transport transparent

2099
01:29:42,840 --> 01:29:46,520
forwarding and is also not trusted so

2100
01:29:46,520 --> 01:29:51,420
the network network flow filter may be

2101
01:29:51,420 --> 01:29:54,600
not reliable to block Malaysia's traffic

2102
01:29:54,600 --> 01:29:57,780
by the team broker

2103
01:29:57,780 --> 01:30:01,080
so next slide please yeah and the scope

2104
01:30:01,080 --> 01:30:03,060
of the document I think the scope of the

2105
01:30:03,060 --> 01:30:05,580
document should not only include Edge

2106
01:30:05,580 --> 01:30:08,639
Computing scenario a scope could be any

2107
01:30:08,639 --> 01:30:09,900
computational Computing environment

2108
01:30:09,900 --> 01:30:14,040
which need to be configured by Network

2109
01:30:14,040 --> 01:30:18,560
I think that's the reporter

2110
01:30:18,780 --> 01:30:20,340
yes

2111
01:30:20,340 --> 01:30:22,699
yes

2112
01:30:23,280 --> 01:30:25,679
okay so all these were updated on the

2113
01:30:25,679 --> 01:30:27,420
last revision thing

2114
01:30:27,420 --> 01:30:30,500
yes yes

2115
01:30:33,300 --> 01:30:35,360
okay

2116
01:30:40,520 --> 01:30:43,760
so yeah

2117
01:30:45,239 --> 01:30:47,159
yeah so do you hear me

2118
01:30:47,159 --> 01:30:50,040
yeah I can't hear you okay so so in one

2119
01:30:50,040 --> 01:30:51,179
of the issues you mentioned the

2120
01:30:51,179 --> 01:30:53,100
definition that you use from CCC

2121
01:30:53,100 --> 01:30:56,159
confidential computer Consortium and we

2122
01:30:56,159 --> 01:30:57,900
had analyzed some of their definitions

2123
01:30:57,900 --> 01:30:59,880
and there is no scientific evidence for

2124
01:30:59,880 --> 01:31:02,280
any of the definitions somebody has just

2125
01:31:02,280 --> 01:31:04,739
put them around and there is no

2126
01:31:04,739 --> 01:31:06,780
scientific kind of justification for

2127
01:31:06,780 --> 01:31:08,760
these and I wonder why do you pick up

2128
01:31:08,760 --> 01:31:12,000
these and uh so CCC is not a

2129
01:31:12,000 --> 01:31:14,639
standardization body I mean

2130
01:31:14,639 --> 01:31:18,060
because I think there's no uh standard

2131
01:31:18,060 --> 01:31:20,460
definition about confidential uh

2132
01:31:20,460 --> 01:31:21,620
commercial

2133
01:31:21,620 --> 01:31:26,639
container and from my perspective uh in

2134
01:31:26,639 --> 01:31:29,520
my opinion I think that a container is

2135
01:31:29,520 --> 01:31:32,940
confidential it must be totally

2136
01:31:32,940 --> 01:31:35,940
confidential it cannot be a virtual

2137
01:31:35,940 --> 01:31:37,380
machine that is we say the word

2138
01:31:37,380 --> 01:31:38,940
permission is a confidential so the

2139
01:31:38,940 --> 01:31:41,280
container is confidential if we say a

2140
01:31:41,280 --> 01:31:44,580
container is foundational then only the

2141
01:31:44,580 --> 01:31:47,880
container is confidential any components

2142
01:31:47,880 --> 01:31:50,699
out of the container don't have to be

2143
01:31:50,699 --> 01:31:54,360
translated that my personal opinion and

2144
01:31:54,360 --> 01:31:58,980
I think this is a reasonable explanation

2145
01:31:58,980 --> 01:32:03,179
of this competent container definition

2146
01:32:03,179 --> 01:32:05,639
yeah I mean that's that's fine that if

2147
01:32:05,639 --> 01:32:08,100
you have your own perception but having

2148
01:32:08,100 --> 01:32:11,159
CCC does not justify anything because I

2149
01:32:11,159 --> 01:32:13,139
will put a link in the chat so we

2150
01:32:13,139 --> 01:32:14,940
analyze some of their definitions and

2151
01:32:14,940 --> 01:32:16,739
there was no justification whatsoever

2152
01:32:16,739 --> 01:32:18,120
for them

2153
01:32:18,120 --> 01:32:19,739
so if you have your personal opinion

2154
01:32:19,739 --> 01:32:22,260
that's fine but having the point was

2155
01:32:22,260 --> 01:32:24,900
that having CCC definition or as a

2156
01:32:24,900 --> 01:32:27,300
reference does not justify anything hey

2157
01:32:27,300 --> 01:32:29,820
guys let's take it on the list

2158
01:32:29,820 --> 01:32:31,560
yeah this is a good discussion but let's

2159
01:32:31,560 --> 01:32:32,880
continue on the rest

2160
01:32:32,880 --> 01:32:35,060
okay okay

2161
01:32:35,060 --> 01:32:38,040
yeah Muhammad can you post the link and

2162
01:32:38,040 --> 01:32:39,719
information that you were speaking on

2163
01:32:39,719 --> 01:32:42,840
the list yes sure so I will put it in

2164
01:32:42,840 --> 01:32:45,000
the so should I put it in the list or in

2165
01:32:45,000 --> 01:32:46,260
the chat

2166
01:32:46,260 --> 01:32:48,900
list please okay sure sure I will send

2167
01:32:48,900 --> 01:32:53,360
it in the list thanks okay thank you

2168
01:32:56,760 --> 01:32:58,620
thanks everyone for the session and I

2169
01:32:58,620 --> 01:33:00,300
think we're making good progress so

2170
01:33:00,300 --> 01:33:02,580
hopefully we will see the Deep protocol

2171
01:33:02,580 --> 01:33:05,219
drive for Advance very soon and we are

2172
01:33:05,219 --> 01:33:07,199
hoping we will initiate early set

2173
01:33:07,199 --> 01:33:08,880
directorate and iot directorate reviews

2174
01:33:08,880 --> 01:33:13,440
on the T protocol so um Dave once you

2175
01:33:13,440 --> 01:33:15,060
have an updated protocol the question

2176
01:33:15,060 --> 01:33:18,060
will be are we ready to do early reviews

2177
01:33:18,060 --> 01:33:20,159
to get the working request home so we

2178
01:33:20,159 --> 01:33:22,739
can take that up on the list

2179
01:33:22,739 --> 01:33:25,638
Akita

2180
01:33:27,239 --> 01:33:29,580
both protocol specification once you get

2181
01:33:29,580 --> 01:33:31,679
the next revision do you feel that it's

2182
01:33:31,679 --> 01:33:33,120
mature enough

2183
01:33:33,120 --> 01:33:37,099
that we can trigger an early review

2184
01:33:37,820 --> 01:33:40,260
well you don't have to answer now but

2185
01:33:40,260 --> 01:33:42,840
you know it's it's something that we can

2186
01:33:42,840 --> 01:33:45,620
pick up on the list

2187
01:33:46,020 --> 01:33:48,679
appeared yes

2188
01:33:48,679 --> 01:33:53,060
okay let's take it offline and

2189
01:33:54,220 --> 01:33:57,470
[Music]

2190
01:34:17,580 --> 01:34:21,500
yeah finding time

