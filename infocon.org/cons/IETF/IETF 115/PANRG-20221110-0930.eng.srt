1
00:00:04,860 --> 00:00:07,040
thank you

2
00:00:11,219 --> 00:00:14,160
so in um

3
00:00:14,160 --> 00:00:16,680
in Switzerland now yeah I'm gonna use

4
00:00:16,680 --> 00:00:18,720
the class tears I just Switzerland now

5
00:00:18,720 --> 00:00:20,400
those are actually um

6
00:00:20,400 --> 00:00:22,320
classified as weapons

7
00:00:22,320 --> 00:00:23,760
and you're supposed to give them to the

8
00:00:23,760 --> 00:00:27,240
companies yeah

9
00:00:31,700 --> 00:00:34,820
where'd you go

10
00:00:35,940 --> 00:00:38,839
good morning

11
00:00:40,379 --> 00:00:42,960
okay hello

12
00:00:42,960 --> 00:00:45,540
good morning thanks for being here so

13
00:00:45,540 --> 00:00:46,620
early

14
00:00:46,620 --> 00:00:49,079
this is Passover Network and research

15
00:00:49,079 --> 00:00:50,219
group

16
00:00:50,219 --> 00:00:52,559
I hope we're in the right room

17
00:00:52,559 --> 00:00:55,140
everyone bran just declared because we

18
00:00:55,140 --> 00:00:57,480
are here it's the right room

19
00:00:57,480 --> 00:01:00,019
so

20
00:01:00,539 --> 00:01:04,820
this is irtf notewell

21
00:01:05,540 --> 00:01:09,479
I if you would like to read it you can

22
00:01:09,479 --> 00:01:12,960
download the slides and enjoy it

23
00:01:12,960 --> 00:01:14,760
and just remind you because that it's

24
00:01:14,760 --> 00:01:17,939
here and also that we are supposed to be

25
00:01:17,939 --> 00:01:19,619
nice to each other

26
00:01:19,619 --> 00:01:22,619
what we're all trying to do I'm sure

27
00:01:22,619 --> 00:01:25,979
uh housekeeping uh

28
00:01:25,979 --> 00:01:28,380
it's not a big room but it's still the

29
00:01:28,380 --> 00:01:30,540
chairs would appreciate if in-person

30
00:01:30,540 --> 00:01:34,080
people would still join the mitekoku if

31
00:01:34,080 --> 00:01:36,000
you like to ask questions because it's

32
00:01:36,000 --> 00:01:38,939
much easier for chairs to to track the

33
00:01:38,939 --> 00:01:42,780
queue and find out who was their first

34
00:01:42,780 --> 00:01:45,180
and after you ask your question you can

35
00:01:45,180 --> 00:01:46,920
also leave the queue

36
00:01:46,920 --> 00:01:48,960
and

37
00:01:48,960 --> 00:01:52,259
medical participants yeah please

38
00:01:52,259 --> 00:01:55,320
mute until you actually actually speak

39
00:01:55,320 --> 00:01:57,180
in which means you join the queue as the

40
00:01:57,180 --> 00:02:00,659
first or you are presentation

41
00:02:00,659 --> 00:02:01,259
um

42
00:02:01,259 --> 00:02:03,840
remote speakers can probably present

43
00:02:03,840 --> 00:02:07,140
themselves or just ask me now run your

44
00:02:07,140 --> 00:02:08,818
slides

45
00:02:08,818 --> 00:02:11,780
uh we have a actually we have a minute

46
00:02:11,780 --> 00:02:13,940
sticker I guess

47
00:02:13,940 --> 00:02:18,420
uh thanks but uh Xing is remote so if

48
00:02:18,420 --> 00:02:20,700
anyone in the room would like to assist

49
00:02:20,700 --> 00:02:23,160
because I guess it might be beneficial

50
00:02:23,160 --> 00:02:25,920
if someone in the room also helps with

51
00:02:25,920 --> 00:02:27,480
meeting minutes

52
00:02:27,480 --> 00:02:30,738
any volunteers

53
00:02:31,080 --> 00:02:35,040
for the worst part of every session

54
00:02:35,040 --> 00:02:37,940
oh come on

55
00:02:39,540 --> 00:02:41,280
next person to make eye contact with the

56
00:02:41,280 --> 00:02:43,700
chairs

57
00:02:47,819 --> 00:02:49,500
yeah we have plenty of time today

58
00:02:49,500 --> 00:02:52,340
actually we can wait

59
00:02:53,940 --> 00:02:57,500
I see honor thinking about it

60
00:02:58,019 --> 00:03:01,019
it's okay you should it's screen you

61
00:03:01,019 --> 00:03:02,160
have a great way to understand what's

62
00:03:02,160 --> 00:03:04,459
going on

63
00:03:06,840 --> 00:03:08,700
you have a backup yeah you have a backup

64
00:03:08,700 --> 00:03:10,280
so it's easier you're not alone today

65
00:03:10,280 --> 00:03:12,959
and you know actually we have recording

66
00:03:12,959 --> 00:03:16,260
so if you are not sure I can always I'm

67
00:03:16,260 --> 00:03:17,640
not going to upload minutes immediately

68
00:03:17,640 --> 00:03:19,319
after the session you'll have a few days

69
00:03:19,319 --> 00:03:22,980
so thank you very much Anna

70
00:03:22,980 --> 00:03:27,440
and you can collaborate here

71
00:03:27,720 --> 00:03:30,080
yes

72
00:03:35,120 --> 00:03:38,879
so yeah uh thank you very much uh yeah

73
00:03:38,879 --> 00:03:40,980
we are supposed to wear a Moscow get my

74
00:03:40,980 --> 00:03:42,780
one on as soon as I finish with coffee

75
00:03:42,780 --> 00:03:45,659
you don't want me not questionated

76
00:03:45,659 --> 00:03:47,459
enough

77
00:03:47,459 --> 00:03:48,379
um

78
00:03:48,379 --> 00:03:50,720
agenda we actually

79
00:03:50,720 --> 00:03:53,459
do not have a really full agenda today

80
00:03:53,459 --> 00:03:55,319
so we have plenty of time for discussion

81
00:03:55,319 --> 00:03:56,400
for everything

82
00:03:56,400 --> 00:04:01,260
so Brian will start today with giving

83
00:04:01,260 --> 00:04:03,420
you an update on science

84
00:04:03,420 --> 00:04:06,360
and then we have a presentation about

85
00:04:06,360 --> 00:04:09,540
IPv6 wow and it's not my fault this time

86
00:04:09,540 --> 00:04:10,860
actually

87
00:04:10,860 --> 00:04:13,439
and then we have a number of Alto

88
00:04:13,439 --> 00:04:15,060
presentations

89
00:04:15,060 --> 00:04:18,298
it was guest speakers uh so any last

90
00:04:18,298 --> 00:04:20,399
minute agenda version

91
00:04:20,399 --> 00:04:23,580
anyone has a great idea they want to

92
00:04:23,580 --> 00:04:26,599
share with us this morning

93
00:04:27,900 --> 00:04:29,160
okay

94
00:04:29,160 --> 00:04:30,840
good

95
00:04:30,840 --> 00:04:34,680
so not much happened to be honest uh

96
00:04:34,680 --> 00:04:37,680
past properties draft

97
00:04:37,680 --> 00:04:42,300
is now always calling for Iris review

98
00:04:42,300 --> 00:04:45,780
hopefully we'll get it published soon

99
00:04:45,780 --> 00:04:47,759
so if you have any great drafts this

100
00:04:47,759 --> 00:04:50,759
working this research group shall adopt

101
00:04:50,759 --> 00:04:52,979
please send them to the list

102
00:04:52,979 --> 00:04:54,720
uh

103
00:04:54,720 --> 00:04:58,199
and with this

104
00:04:58,199 --> 00:05:01,919
I guess Brian will start presenting as

105
00:05:01,919 --> 00:05:03,660
soon as he

106
00:05:03,660 --> 00:05:06,360
finish with helping Anna

107
00:05:06,360 --> 00:05:11,600
I am going to share the slides

108
00:05:12,540 --> 00:05:16,380
uh yeah so um hi Nicola I shamelessly

109
00:05:16,380 --> 00:05:17,759
stole your slides because I wanted to

110
00:05:17,759 --> 00:05:20,880
give everybody an update from the chair

111
00:05:20,880 --> 00:05:22,199
um for

112
00:05:22,199 --> 00:05:24,419
um things that you may have missed at

113
00:05:24,419 --> 00:05:25,740
the interims

114
00:05:25,740 --> 00:05:29,580
um we had a couple of

115
00:05:29,580 --> 00:05:32,220
very productive but not extremely

116
00:05:32,220 --> 00:05:34,259
heavily attended into a meeting so we

117
00:05:34,259 --> 00:05:37,080
did want to report out uh kind of what

118
00:05:37,080 --> 00:05:39,479
had happened there

119
00:05:39,479 --> 00:05:42,419
um so uh how we got to where we are with

120
00:05:42,419 --> 00:05:45,900
Scion was back at itf113

121
00:05:45,900 --> 00:05:49,680
um in Vienna uh there was a side meeting

122
00:05:49,680 --> 00:05:51,479
about Scion and then a presentation at

123
00:05:51,479 --> 00:05:53,160
routing area open

124
00:05:53,160 --> 00:05:55,320
and the feedback that came from that is

125
00:05:55,320 --> 00:05:57,240
like neat that's an architecture we

126
00:05:57,240 --> 00:05:58,979
don't do architectures

127
00:05:58,979 --> 00:06:00,539
um

128
00:06:00,539 --> 00:06:02,039
so

129
00:06:02,039 --> 00:06:04,919
we decided to pull into pan RG the work

130
00:06:04,919 --> 00:06:07,020
of thinking about how to turn this into

131
00:06:07,020 --> 00:06:09,840
things that can be worked on more or

132
00:06:09,840 --> 00:06:12,419
less independently within the ITF

133
00:06:12,419 --> 00:06:15,180
so there are three drafts that were like

134
00:06:15,180 --> 00:06:19,259
basis for this discussion in panergy uh

135
00:06:19,259 --> 00:06:21,300
one is the overview draft

136
00:06:21,300 --> 00:06:22,139
um

137
00:06:22,139 --> 00:06:24,539
one is the component analysis so I think

138
00:06:24,539 --> 00:06:28,080
it was the first interim meeting that we

139
00:06:28,080 --> 00:06:31,380
had where the the feedback from that

140
00:06:31,380 --> 00:06:33,960
meeting was

141
00:06:33,960 --> 00:06:36,120
um actually can you look at how we can

142
00:06:36,120 --> 00:06:37,259
take the system and break it up into

143
00:06:37,259 --> 00:06:38,639
components and figure out sort of what

144
00:06:38,639 --> 00:06:40,680
the interfaces are between those as

145
00:06:40,680 --> 00:06:43,259
input to the decision to you know you

146
00:06:43,259 --> 00:06:44,520
know figure out how to document those

147
00:06:44,520 --> 00:06:47,100
components

148
00:06:47,100 --> 00:06:49,139
um and uh we were happy to accept that

149
00:06:49,139 --> 00:06:50,580
the the work of having that discussion

150
00:06:50,580 --> 00:06:52,680
Within panergy

151
00:06:52,680 --> 00:06:53,639
um

152
00:06:53,639 --> 00:06:55,680
had you know the rest of these slide

153
00:06:55,680 --> 00:06:57,180
decks here are or the rest of these

154
00:06:57,180 --> 00:07:00,060
slides here are largely an overview of

155
00:07:00,060 --> 00:07:03,000
what's going on in Scion have a look at

156
00:07:03,000 --> 00:07:06,180
the overview analysis draft for that

157
00:07:06,180 --> 00:07:08,340
um the interesting slide is here so the

158
00:07:08,340 --> 00:07:10,440
the the

159
00:07:10,440 --> 00:07:12,660
um uh incorporation that feedback about

160
00:07:12,660 --> 00:07:15,060
uh doing component analysis three

161
00:07:15,060 --> 00:07:18,600
components pretty quickly fell out of

162
00:07:18,600 --> 00:07:19,919
that discussion

163
00:07:19,919 --> 00:07:20,699
um

164
00:07:20,699 --> 00:07:22,860
and these are I don't want to use the L

165
00:07:22,860 --> 00:07:24,900
word but these are almost layered on top

166
00:07:24,900 --> 00:07:26,340
of each other so there's the control

167
00:07:26,340 --> 00:07:28,199
plane pki the control plane and then the

168
00:07:28,199 --> 00:07:29,940
data plane

169
00:07:29,940 --> 00:07:33,000
um some of these are

170
00:07:33,000 --> 00:07:34,160
um

171
00:07:34,160 --> 00:07:36,240
closer to things that could be

172
00:07:36,240 --> 00:07:37,860
standardized some of these they're open

173
00:07:37,860 --> 00:07:40,139
research questions some of these are

174
00:07:40,139 --> 00:07:42,300
kind of maybe the Scion way of doing

175
00:07:42,300 --> 00:07:45,060
things and maybe you less interesting on

176
00:07:45,060 --> 00:07:47,639
their own within the ietf

177
00:07:47,639 --> 00:07:53,479
um but the feedback from that

178
00:07:53,819 --> 00:07:57,479
um was to essentially take

179
00:07:57,479 --> 00:07:59,599
um

180
00:08:01,080 --> 00:08:03,479
what's been written about Scion to date

181
00:08:03,479 --> 00:08:05,340
right like so that the The Source data

182
00:08:05,340 --> 00:08:07,500
for the source content for the

183
00:08:07,500 --> 00:08:11,099
specifications actually bring those into

184
00:08:11,099 --> 00:08:13,500
um internet drafts

185
00:08:13,500 --> 00:08:15,660
with the intent of publishing on the

186
00:08:15,660 --> 00:08:18,120
independent submission stream as sort of

187
00:08:18,120 --> 00:08:20,220
like you know eth's implementation of

188
00:08:20,220 --> 00:08:22,979
Scion or the Scion lab implementation of

189
00:08:22,979 --> 00:08:24,599
science a very common thing when work

190
00:08:24,599 --> 00:08:26,280
comes into the ietf we don't really know

191
00:08:26,280 --> 00:08:28,500
what to do it with it the source work

192
00:08:28,500 --> 00:08:30,419
comes in as an iscrfc is sort of like

193
00:08:30,419 --> 00:08:32,339
the here's the starting point and from

194
00:08:32,339 --> 00:08:34,679
there we'll go uh on that

195
00:08:34,679 --> 00:08:37,260
so um the Scion folks

196
00:08:37,260 --> 00:08:38,820
um if you have questions or anything to

197
00:08:38,820 --> 00:08:41,039
talk to them there over here uh going

198
00:08:41,039 --> 00:08:44,760
and Nicola uh we'll be doing that over

199
00:08:44,760 --> 00:08:48,120
the winter I guess we could say

200
00:08:48,120 --> 00:08:51,860
um and uh

201
00:08:51,860 --> 00:08:54,959
panargy will remain a discussion forum

202
00:08:54,959 --> 00:08:57,779
for uh things about Scion until we look

203
00:08:57,779 --> 00:08:59,459
at those documents and figure out oh

204
00:08:59,459 --> 00:09:01,860
yeah this actually needs to go into this

205
00:09:01,860 --> 00:09:03,839
area open meeting for a possible boss or

206
00:09:03,839 --> 00:09:06,480
this needs to be uh brought into this

207
00:09:06,480 --> 00:09:08,279
working group or this needs to be

208
00:09:08,279 --> 00:09:10,260
wholesale replaced with this thing that

209
00:09:10,260 --> 00:09:12,180
already exists in the ietf and can be

210
00:09:12,180 --> 00:09:14,279
very easily adapted to work with Scion

211
00:09:14,279 --> 00:09:16,320
etc etc

212
00:09:16,320 --> 00:09:18,600
um so in the meantime uh questions

213
00:09:18,600 --> 00:09:20,700
comments Etc about Scion we're happy to

214
00:09:20,700 --> 00:09:22,140
have those discussions on the panergy

215
00:09:22,140 --> 00:09:24,360
list uh I think we're not planning

216
00:09:24,360 --> 00:09:26,160
another interim because like you you

217
00:09:26,160 --> 00:09:28,320
guys just have some work to do

218
00:09:28,320 --> 00:09:30,540
um before you can come back

219
00:09:30,540 --> 00:09:33,720
um and we expect to have sort of a

220
00:09:33,720 --> 00:09:35,700
report out on that and possibly a

221
00:09:35,700 --> 00:09:38,700
discussion about next steps in research

222
00:09:38,700 --> 00:09:41,459
um my personal like chair hat off my

223
00:09:41,459 --> 00:09:42,540
personal

224
00:09:42,540 --> 00:09:45,899
um bias on this is uh I think there's

225
00:09:45,899 --> 00:09:47,279
lots of really interesting stuff to be

226
00:09:47,279 --> 00:09:48,420
done in the path Discovery and

227
00:09:48,420 --> 00:09:50,459
dissemination space

228
00:09:50,459 --> 00:09:51,420
um

229
00:09:51,420 --> 00:09:53,580
but we'll have that discussion in

230
00:09:53,580 --> 00:09:55,860
Yokohama

231
00:09:55,860 --> 00:09:58,140
so if anyone has questions about what's

232
00:09:58,140 --> 00:09:59,580
going on in Scion those really wouldn't

233
00:09:59,580 --> 00:10:01,140
be for me this is just her you know

234
00:10:01,140 --> 00:10:02,399
catching people up who weren't in the

235
00:10:02,399 --> 00:10:04,680
interims on on what's happened

236
00:10:04,680 --> 00:10:05,459
um

237
00:10:05,459 --> 00:10:07,980
I guess we can take those and put Nicola

238
00:10:07,980 --> 00:10:10,380
and Corian on the spot otherwise we can

239
00:10:10,380 --> 00:10:14,300
move on to the next presentation

240
00:10:17,339 --> 00:10:19,760
going once going twice

241
00:10:19,760 --> 00:10:23,120
thank you very much

242
00:10:25,680 --> 00:10:28,680
okay

243
00:10:30,240 --> 00:10:33,140
I get lucky

244
00:10:38,339 --> 00:10:40,440
so um uh good morning

245
00:10:40,440 --> 00:10:44,160
um I'm Maxine Pirro from the Easter luva

246
00:10:44,160 --> 00:10:45,240
so

247
00:10:45,240 --> 00:10:47,519
um I'm gonna present uh something that

248
00:10:47,519 --> 00:10:49,320
was a really collaborative work within

249
00:10:49,320 --> 00:10:52,620
the lab so I'm a PhD researcher my

250
00:10:52,620 --> 00:10:54,620
advisor is

251
00:10:54,620 --> 00:10:57,839
all the team and also uh colleagues from

252
00:10:57,839 --> 00:11:01,079
uh from the U Silva so we've been uh

253
00:11:01,079 --> 00:11:02,180
we've been

254
00:11:02,180 --> 00:11:05,820
reconsidering what what IPv6 can can do

255
00:11:05,820 --> 00:11:08,760
what the rules it can play next slide

256
00:11:08,760 --> 00:11:10,079
please

257
00:11:10,079 --> 00:11:11,519
so

258
00:11:11,519 --> 00:11:13,380
um our kind of thought experiments

259
00:11:13,380 --> 00:11:16,380
started uh looking at OIP addresses are

260
00:11:16,380 --> 00:11:19,079
used today and so

261
00:11:19,079 --> 00:11:22,200
um we we've been looking obviously at

262
00:11:22,200 --> 00:11:25,140
ipv4 and in ipv4

263
00:11:25,140 --> 00:11:27,360
um one address usually identify a

264
00:11:27,360 --> 00:11:29,880
network interface and so a host that

265
00:11:29,880 --> 00:11:32,220
would have multiple network interface as

266
00:11:32,220 --> 00:11:36,180
one ipv4 per network interface but not

267
00:11:36,180 --> 00:11:38,459
much much more than that due to several

268
00:11:38,459 --> 00:11:39,899
reasons

269
00:11:39,899 --> 00:11:42,839
um the kernel has not the links kernel

270
00:11:42,839 --> 00:11:44,399
is not really great at handling multiple

271
00:11:44,399 --> 00:11:47,640
pv4 on an interface that's one reason

272
00:11:47,640 --> 00:11:50,339
the second reason is also that we've

273
00:11:50,339 --> 00:11:52,740
been accustomed to The Limited ipv4

274
00:11:52,740 --> 00:11:54,720
address space and this is a big

275
00:11:54,720 --> 00:11:55,740
constraint

276
00:11:55,740 --> 00:12:00,720
so when IPv6 came in it obviously

277
00:12:00,720 --> 00:12:03,360
alleviated this constraint space Problem

278
00:12:03,360 --> 00:12:06,140
by bringing many more address

279
00:12:06,140 --> 00:12:08,760
but the stance so this is a position

280
00:12:08,760 --> 00:12:10,920
paper it's an editorial paper uh

281
00:12:10,920 --> 00:12:14,760
published at uh at CCR and

282
00:12:14,760 --> 00:12:16,440
um we tried looking beyond that so okay

283
00:12:16,440 --> 00:12:18,540
we have now many more addresses

284
00:12:18,540 --> 00:12:22,380
but is does those addresses brings more

285
00:12:22,380 --> 00:12:24,480
possibilities for endos or in the

286
00:12:24,480 --> 00:12:27,060
network and so we essentially try to

287
00:12:27,060 --> 00:12:30,000
look okay uh can we do better than one

288
00:12:30,000 --> 00:12:32,760
IP means one interface

289
00:12:32,760 --> 00:12:35,640
um and one of the findings uh that goes

290
00:12:35,640 --> 00:12:37,140
hand in hand with one of the strengths

291
00:12:37,140 --> 00:12:39,000
of the lab is that obviously uh

292
00:12:39,000 --> 00:12:41,279
multi-pass transport protocol are really

293
00:12:41,279 --> 00:12:42,779
help in that endeavor

294
00:12:42,779 --> 00:12:45,540
so next slide please

295
00:12:45,540 --> 00:12:47,519
so you're probably wondering what are

296
00:12:47,519 --> 00:12:49,500
those rules and if you have a quick

297
00:12:49,500 --> 00:12:51,899
glance at the paper you probably see a

298
00:12:51,899 --> 00:12:54,360
beast like that and you're like okay so

299
00:12:54,360 --> 00:12:56,639
what what is what are those rules this

300
00:12:56,639 --> 00:12:58,620
is a nice meme courtesy of one of my

301
00:12:58,620 --> 00:13:00,120
colleague Louis that I took for the

302
00:13:00,120 --> 00:13:02,040
slide next slide

303
00:13:02,040 --> 00:13:04,260
um so actually we we looked at many many

304
00:13:04,260 --> 00:13:05,339
aspects

305
00:13:05,339 --> 00:13:06,000
um

306
00:13:06,000 --> 00:13:08,820
um that can be improved thanks to IPv6

307
00:13:08,820 --> 00:13:10,920
addresses so we looked at privacy load

308
00:13:10,920 --> 00:13:13,380
balancing said man routing uh

309
00:13:13,380 --> 00:13:14,820
differentiate services or different

310
00:13:14,820 --> 00:13:18,300
differentiated routing and multicast

311
00:13:18,300 --> 00:13:19,560
um next slide

312
00:13:19,560 --> 00:13:22,079
so I want to start by addressing the

313
00:13:22,079 --> 00:13:24,240
elephants in the slide let's call it

314
00:13:24,240 --> 00:13:28,560
um so let's talk about multi-homing so

315
00:13:28,560 --> 00:13:33,240
um in ipv4 one uh an S is multi-ohm so

316
00:13:33,240 --> 00:13:36,060
here it's as1 that as two provider is

317
00:13:36,060 --> 00:13:39,920
two as3 what is usually done is that

318
00:13:39,920 --> 00:13:43,920
as1 is first it's an as so it's it

319
00:13:43,920 --> 00:13:46,620
requests an as number and it will

320
00:13:46,620 --> 00:13:48,899
announce its prefix he has one prefix

321
00:13:48,899 --> 00:13:51,180
that is announced over the two links and

322
00:13:51,180 --> 00:13:52,800
there are many many tools and many many

323
00:13:52,800 --> 00:13:55,260
tricks in bgp to do that

324
00:13:55,260 --> 00:13:58,620
and to be flexible and this is a wool

325
00:13:58,620 --> 00:14:01,139
domain in its own that I'm not that much

326
00:14:01,139 --> 00:14:03,120
knowledgeable of but we've been looking

327
00:14:03,120 --> 00:14:05,339
at what's the effect of this so the

328
00:14:05,339 --> 00:14:06,899
effect is

329
00:14:06,899 --> 00:14:10,139
um that actually a lot of the Asus are

330
00:14:10,139 --> 00:14:13,200
sub ass so they don't have clients

331
00:14:13,200 --> 00:14:14,760
they're just reaching the internet

332
00:14:14,760 --> 00:14:18,000
through one of several providers and

333
00:14:18,000 --> 00:14:20,519
when you look at the quantity of bgp

334
00:14:20,519 --> 00:14:23,180
message that travel over the internet

335
00:14:23,180 --> 00:14:25,560
you can see that roughly half of them

336
00:14:25,560 --> 00:14:28,139
there are messages coming from a from

337
00:14:28,139 --> 00:14:31,079
stubs so stubs are really putting a

338
00:14:31,079 --> 00:14:34,800
strain on bgp uh in the internet and

339
00:14:34,800 --> 00:14:36,420
we've been looking at this proportion

340
00:14:36,420 --> 00:14:38,820
for the last 10 years I think

341
00:14:38,820 --> 00:14:41,220
um this is data from the paper and it's

342
00:14:41,220 --> 00:14:43,740
it's roughly constant and it's roughly

343
00:14:43,740 --> 00:14:46,920
also constant between ipv4 and IPv6 so

344
00:14:46,920 --> 00:14:50,820
very likely to use the same way actually

345
00:14:50,820 --> 00:14:52,560
um next slide

346
00:14:52,560 --> 00:14:55,440
so obviously uh the ITF is aware of this

347
00:14:55,440 --> 00:14:58,100
problem and this is one of the latest

348
00:14:58,100 --> 00:15:01,440
attempts that I know of obviously

349
00:15:01,440 --> 00:15:03,360
um next slide

350
00:15:03,360 --> 00:15:05,300
so in IPv6

351
00:15:05,300 --> 00:15:08,220
the proposed solution is is a bit

352
00:15:08,220 --> 00:15:09,839
different so

353
00:15:09,839 --> 00:15:12,000
um the first striking difference from

354
00:15:12,000 --> 00:15:15,779
ipe4 is that the the bottom network is

355
00:15:15,779 --> 00:15:18,360
no longer an as so here we call it

356
00:15:18,360 --> 00:15:19,680
Enterprise because it could be an

357
00:15:19,680 --> 00:15:21,959
Enterprise that is interested into being

358
00:15:21,959 --> 00:15:24,839
multi-ohm for resiliency and that kind

359
00:15:24,839 --> 00:15:27,779
of stuff so here it's no longer an es

360
00:15:27,779 --> 00:15:31,440
what this Enterprise do is that

361
00:15:31,440 --> 00:15:34,139
um what is sunrise does that

362
00:15:34,139 --> 00:15:35,820
um it receive

363
00:15:35,820 --> 00:15:38,699
provider aggregate aggregated prefixes

364
00:15:38,699 --> 00:15:41,040
from each of its providers so it will

365
00:15:41,040 --> 00:15:44,040
receive a blue prefix coming from as2

366
00:15:44,040 --> 00:15:47,399
and it will receive a yellow greenish

367
00:15:47,399 --> 00:15:50,160
prefix from as3

368
00:15:50,160 --> 00:15:52,440
um and with those two prefixes it will

369
00:15:52,440 --> 00:15:55,199
distribute them inside the network and

370
00:15:55,199 --> 00:15:56,639
each of the device here we have a

371
00:15:56,639 --> 00:15:59,519
smartphone will receive one IP from each

372
00:15:59,519 --> 00:16:01,980
of the prefix

373
00:16:01,980 --> 00:16:04,980
um they're really uh advantage of of

374
00:16:04,980 --> 00:16:06,899
this uh

375
00:16:06,899 --> 00:16:08,760
um solution is that it doesn't require

376
00:16:08,760 --> 00:16:13,019
bgp so bgp is less used

377
00:16:13,019 --> 00:16:15,000
um for solving this problem

378
00:16:15,000 --> 00:16:17,880
but it has also a really cool feature is

379
00:16:17,880 --> 00:16:19,980
that the device can choose which address

380
00:16:19,980 --> 00:16:21,180
to use

381
00:16:21,180 --> 00:16:22,920
next slide

382
00:16:22,920 --> 00:16:26,760
and so when the device has multi-pass

383
00:16:26,760 --> 00:16:28,740
transfer protocol and those two

384
00:16:28,740 --> 00:16:31,620
addresses then it can really do cool

385
00:16:31,620 --> 00:16:34,199
stuff such as quickly reacting to a

386
00:16:34,199 --> 00:16:37,740
provider failure because it's monitoring

387
00:16:37,740 --> 00:16:39,959
how the connection is going through one

388
00:16:39,959 --> 00:16:41,399
provider and could migrate the

389
00:16:41,399 --> 00:16:43,860
connection to the other provider it

390
00:16:43,860 --> 00:16:46,079
could also dynamically choose the best

391
00:16:46,079 --> 00:16:48,540
provider and the best provider could be

392
00:16:48,540 --> 00:16:50,399
defined by the application one

393
00:16:50,399 --> 00:16:52,259
application needing high bandwidth will

394
00:16:52,259 --> 00:16:54,720
choose uh could migrate from one

395
00:16:54,720 --> 00:16:57,000
provider to the other hoping that there

396
00:16:57,000 --> 00:16:59,880
is more bandwidth on the other or could

397
00:16:59,880 --> 00:17:02,459
migrate to a lower latency provider if

398
00:17:02,459 --> 00:17:05,160
lower latency is required but there's

399
00:17:05,160 --> 00:17:06,780
many many combinations that we can do

400
00:17:06,780 --> 00:17:09,119
also we can use the two providers

401
00:17:09,119 --> 00:17:13,020
together redundantly using FEC using I

402
00:17:13,020 --> 00:17:15,059
don't know plain redundancy or in an

403
00:17:15,059 --> 00:17:16,799
aggregated fashion

404
00:17:16,799 --> 00:17:18,720
next slide please

405
00:17:18,720 --> 00:17:20,220
so

406
00:17:20,220 --> 00:17:22,020
to benefit from that

407
00:17:22,020 --> 00:17:23,880
um I thought it might be good to look at

408
00:17:23,880 --> 00:17:25,319
the status of multipath Transport

409
00:17:25,319 --> 00:17:28,439
protocols within the ITF so there are a

410
00:17:28,439 --> 00:17:30,780
bunch of multi-pass Transport protocols

411
00:17:30,780 --> 00:17:33,540
with a different set of features most of

412
00:17:33,540 --> 00:17:35,039
them are overlapping but all of their

413
00:17:35,039 --> 00:17:38,160
particularities so the first I thought I

414
00:17:38,160 --> 00:17:41,100
thought of is sctp for which the work is

415
00:17:41,100 --> 00:17:43,620
still ongoing through this this draft

416
00:17:43,620 --> 00:17:47,460
and the CTP today is deployed mostly for

417
00:17:47,460 --> 00:17:48,900
webrtc

418
00:17:48,900 --> 00:17:51,720
so the second multi-path transfer

419
00:17:51,720 --> 00:17:56,039
protocol is mptcp which has a new RFC

420
00:17:56,039 --> 00:17:58,620
for its version one and there today

421
00:17:58,620 --> 00:18:01,620
mptcp is the largely deployed in the

422
00:18:01,620 --> 00:18:03,419
sense that it's available on Mainline

423
00:18:03,419 --> 00:18:07,620
Linux 5.6 and it's a it's apparently

424
00:18:07,620 --> 00:18:09,840
um available in many Apple devices as

425
00:18:09,840 --> 00:18:10,679
well

426
00:18:10,679 --> 00:18:12,299
the

427
00:18:12,299 --> 00:18:15,419
going further into the the timeline

428
00:18:15,419 --> 00:18:17,100
um are closer to us rather in the

429
00:18:17,100 --> 00:18:20,220
timeline looking at quick so quick I put

430
00:18:20,220 --> 00:18:21,960
it in the multi-path transporter call

431
00:18:21,960 --> 00:18:25,919
because it has up feature or two that

432
00:18:25,919 --> 00:18:28,679
relates to multipass transform protocol

433
00:18:28,679 --> 00:18:30,600
um but it has also a constraint is that

434
00:18:30,600 --> 00:18:33,179
you can only use actively one pass at a

435
00:18:33,179 --> 00:18:35,100
time but quick as large scale deployment

436
00:18:35,100 --> 00:18:37,860
today and the following work in that

437
00:18:37,860 --> 00:18:39,840
direction is multi-path quick which is

438
00:18:39,840 --> 00:18:42,360
still an ongoing effort and enable the

439
00:18:42,360 --> 00:18:47,039
use of several Network paths next slide

440
00:18:47,039 --> 00:18:49,980
so we've been involved in quick uh for

441
00:18:49,980 --> 00:18:52,380
some years and we've been looking at how

442
00:18:52,380 --> 00:18:54,900
quick can be used on multi-ohm servers

443
00:18:54,900 --> 00:18:58,020
so we've been looking at multium clan in

444
00:18:58,020 --> 00:19:00,179
the in the example but it could also be

445
00:19:00,179 --> 00:19:02,880
multi multi-ohm server that will also

446
00:19:02,880 --> 00:19:04,620
would like to be connected to several

447
00:19:04,620 --> 00:19:07,220
providers for for failure

448
00:19:07,220 --> 00:19:10,260
resiliency or for redundancy and all

449
00:19:10,260 --> 00:19:12,660
those purposes so

450
00:19:12,660 --> 00:19:15,299
um when looking at quick there is a

451
00:19:15,299 --> 00:19:16,980
bunch of features that are useful so

452
00:19:16,980 --> 00:19:19,500
quick enables the client to change local

453
00:19:19,500 --> 00:19:21,059
addresses this is called connection

454
00:19:21,059 --> 00:19:23,700
migration in rxc 9000

455
00:19:23,700 --> 00:19:26,880
uh the server have a mechanism to defer

456
00:19:26,880 --> 00:19:28,740
client to another address

457
00:19:28,740 --> 00:19:30,600
just after the end shake and that's

458
00:19:30,600 --> 00:19:34,140
called server prefer address

459
00:19:34,140 --> 00:19:35,600
and then there is this ongoing

460
00:19:35,600 --> 00:19:37,740
multi-path quick that would enable the

461
00:19:37,740 --> 00:19:40,080
use of several Network paths but there

462
00:19:40,080 --> 00:19:43,260
is uh um there is a hole in in all that

463
00:19:43,260 --> 00:19:45,840
is that quick V1 lacks away for a server

464
00:19:45,840 --> 00:19:48,480
to announce or to advertise additional

465
00:19:48,480 --> 00:19:50,039
addresses that relate to the connection

466
00:19:50,039 --> 00:19:52,200
next slide please

467
00:19:52,200 --> 00:19:55,200
and so we've proposed a small a small

468
00:19:55,200 --> 00:19:56,880
extension to that I'm not going to

469
00:19:56,880 --> 00:19:59,160
discuss uh in detail what it's about but

470
00:19:59,160 --> 00:20:00,720
if you're interested to use Quick on

471
00:20:00,720 --> 00:20:03,120
multi-ohm servers

472
00:20:03,120 --> 00:20:04,620
um this is something that we'd like

473
00:20:04,620 --> 00:20:07,679
likely interest you next slide please

474
00:20:07,679 --> 00:20:10,320
okay so let's look now at the other

475
00:20:10,320 --> 00:20:12,179
animals I would take some of them there

476
00:20:12,179 --> 00:20:13,980
there is more in the paper

477
00:20:13,980 --> 00:20:16,020
um but let's look at privacy load

478
00:20:16,020 --> 00:20:17,760
balancing and segment routing and try to

479
00:20:17,760 --> 00:20:19,860
reconsider or high pv6 addresses can

480
00:20:19,860 --> 00:20:22,520
help those areas next slide please

481
00:20:22,520 --> 00:20:24,240
so

482
00:20:24,240 --> 00:20:25,620
um the clients

483
00:20:25,620 --> 00:20:27,900
um there is also also something that is

484
00:20:27,900 --> 00:20:31,919
uh that is well known RFC uh 8981 so

485
00:20:31,919 --> 00:20:34,980
which defines temporary addresses so a

486
00:20:34,980 --> 00:20:36,960
device receive a prefix from the network

487
00:20:36,960 --> 00:20:39,840
and then fills in the remaining bits

488
00:20:39,840 --> 00:20:41,760
with temporary addresses with a limited

489
00:20:41,760 --> 00:20:43,260
lifetime

490
00:20:43,260 --> 00:20:44,820
um here in an example we have an IPv6

491
00:20:44,820 --> 00:20:48,480
client that use a temporary IPA and then

492
00:20:48,480 --> 00:20:50,340
establish several flows towards the

493
00:20:50,340 --> 00:20:52,260
internet with that

494
00:20:52,260 --> 00:20:56,460
what the RFC or the implementation do is

495
00:20:56,460 --> 00:20:59,700
that as long as the flows remain as long

496
00:20:59,700 --> 00:21:02,820
as those red flows remain IPA is still

497
00:21:02,820 --> 00:21:06,960
used and then IP at some point the ipx

498
00:21:06,960 --> 00:21:09,059
players and the new IP comes up this is

499
00:21:09,059 --> 00:21:10,760
ipb the blue one

500
00:21:10,760 --> 00:21:14,039
but IPA will remain as long as there are

501
00:21:14,039 --> 00:21:15,500
flows that use it

502
00:21:15,500 --> 00:21:18,480
and non-multipath transfer protocols

503
00:21:18,480 --> 00:21:20,160
cannot migrate this is kind of obvious

504
00:21:20,160 --> 00:21:22,740
so the opposite of that would be to say

505
00:21:22,740 --> 00:21:25,080
that multi-pass transport protocol would

506
00:21:25,080 --> 00:21:26,880
help in this case to move the flows to

507
00:21:26,880 --> 00:21:30,360
the new temporary address more quickly

508
00:21:30,360 --> 00:21:32,460
um next slide please

509
00:21:32,460 --> 00:21:34,980
then on the server uh there there has

510
00:21:34,980 --> 00:21:37,559
been recently a proposal for adopting

511
00:21:37,559 --> 00:21:40,020
kind of a moving Target uh defense with

512
00:21:40,020 --> 00:21:42,360
IPv6 this is kind of fun this it's

513
00:21:42,360 --> 00:21:44,520
called Choi Opera this is not work from

514
00:21:44,520 --> 00:21:45,720
the lab

515
00:21:45,720 --> 00:21:47,880
um but I've I I took the idea just to

516
00:21:47,880 --> 00:21:50,760
imply uh to explain it simply so

517
00:21:50,760 --> 00:21:53,280
um what it proposes is

518
00:21:53,280 --> 00:21:56,220
um use a temporary IP from for the

519
00:21:56,220 --> 00:21:58,740
server that is within a prefix

520
00:21:58,740 --> 00:22:00,120
and

521
00:22:00,120 --> 00:22:02,580
this temporary IP is determined

522
00:22:02,580 --> 00:22:05,700
cryptographically so uh given a shared

523
00:22:05,700 --> 00:22:08,940
key A timestamp and A soul that you

524
00:22:08,940 --> 00:22:12,299
choose you get a random IP value random

525
00:22:12,299 --> 00:22:15,179
I mean cryptographically random

526
00:22:15,179 --> 00:22:17,280
um and so if you share this shared key

527
00:22:17,280 --> 00:22:19,140
with the client by some ways could be

528
00:22:19,140 --> 00:22:21,179
DNS for instance

529
00:22:21,179 --> 00:22:22,200
um

530
00:22:22,200 --> 00:22:25,020
then you're able to hop from oneip to

531
00:22:25,020 --> 00:22:28,320
another and kind of hides your server

532
00:22:28,320 --> 00:22:30,900
from Scanners from all those annoying

533
00:22:30,900 --> 00:22:32,580
researchers that try to understand what

534
00:22:32,580 --> 00:22:34,320
your service is doing and all of that

535
00:22:34,320 --> 00:22:36,600
kind and that kind of stuff so here in

536
00:22:36,600 --> 00:22:38,880
the same in the same way as on the

537
00:22:38,880 --> 00:22:40,620
client the multi-path transfer protocols

538
00:22:40,620 --> 00:22:43,340
could help migrate your client flows

539
00:22:43,340 --> 00:22:46,679
towards the new addresses and keep your

540
00:22:46,679 --> 00:22:47,900
servers

541
00:22:47,900 --> 00:22:51,720
keep your servers hidden in a sense

542
00:22:51,720 --> 00:22:53,760
um next slide please

543
00:22:53,760 --> 00:22:55,919
so we've been also looking at load

544
00:22:55,919 --> 00:22:58,260
balancing and we've been doing a simple

545
00:22:58,260 --> 00:23:02,400
prototype and try to to see so to

546
00:23:02,400 --> 00:23:03,960
today's servers

547
00:23:03,960 --> 00:23:07,500
um are very very likely multi-core

548
00:23:07,500 --> 00:23:08,460
um

549
00:23:08,460 --> 00:23:11,039
and and we started thinking okay

550
00:23:11,039 --> 00:23:14,340
does it help to put one IP per CPU core

551
00:23:14,340 --> 00:23:17,400
and so instead of having one IP on the

552
00:23:17,400 --> 00:23:19,320
network interface on the network

553
00:23:19,320 --> 00:23:21,780
interface you would have several IPS and

554
00:23:21,780 --> 00:23:24,720
each of the IP's correspond to a CPU

555
00:23:24,720 --> 00:23:27,120
core and so we've been doing

556
00:23:27,120 --> 00:23:30,179
um an experiment with quick so we had a

557
00:23:30,179 --> 00:23:34,020
setup in the lab with quick and 128

558
00:23:34,020 --> 00:23:36,419
clients that make repeated requests so a

559
00:23:36,419 --> 00:23:39,059
lot of requests comes in every time for

560
00:23:39,059 --> 00:23:42,539
a certain amount of uh of time and we've

561
00:23:42,539 --> 00:23:45,299
been looking at how assigning oneip per

562
00:23:45,299 --> 00:23:48,059
core helps the load balancing and in the

563
00:23:48,059 --> 00:23:51,419
graph there is uh to box plot there is

564
00:23:51,419 --> 00:23:53,880
one for one IP per core and then one for

565
00:23:53,880 --> 00:23:56,580
single IP which is a single IP on the

566
00:23:56,580 --> 00:23:57,840
network interface

567
00:23:57,840 --> 00:23:59,400
and

568
00:23:59,400 --> 00:24:01,320
we've been observing that one IP per

569
00:24:01,320 --> 00:24:04,020
core is could be a nice way to load

570
00:24:04,020 --> 00:24:06,600
balance uh the the load of incoming

571
00:24:06,600 --> 00:24:08,100
clients so

572
00:24:08,100 --> 00:24:09,659
um the reason for that is that in the

573
00:24:09,659 --> 00:24:11,820
single IP case

574
00:24:11,820 --> 00:24:14,159
um when the next receives a packet it

575
00:24:14,159 --> 00:24:16,500
will spread the packets of the if you

576
00:24:16,500 --> 00:24:18,840
spread the flows based on the hash so it

577
00:24:18,840 --> 00:24:20,520
takes the packet header does the hash

578
00:24:20,520 --> 00:24:22,620
and then decides okay I'm gonna assign

579
00:24:22,620 --> 00:24:24,780
this flow this new incoming flow to this

580
00:24:24,780 --> 00:24:27,299
core and this is a costly uh this is a

581
00:24:27,299 --> 00:24:30,000
Time closely mechanism in the one IP per

582
00:24:30,000 --> 00:24:33,720
Core case the clients use the DNS to

583
00:24:33,720 --> 00:24:36,840
select one of the server IP and so this

584
00:24:36,840 --> 00:24:38,880
one stage of load balancing is kind of

585
00:24:38,880 --> 00:24:41,280
offloaded to the client and then on the

586
00:24:41,280 --> 00:24:42,720
Nick it becomes much simpler because

587
00:24:42,720 --> 00:24:45,419
it's simply about looking at the IP

588
00:24:45,419 --> 00:24:49,020
and based on the IP choose the core

589
00:24:49,020 --> 00:24:51,900
so this is one step but we could go

590
00:24:51,900 --> 00:24:54,299
further like many of the load balancing

591
00:24:54,299 --> 00:24:56,340
works from the academics that you

592
00:24:56,340 --> 00:24:58,140
probably know of have some sort of

593
00:24:58,140 --> 00:25:01,080
mechanism to uh spread the load further

594
00:25:01,080 --> 00:25:03,840
so all the workloads are not the same in

595
00:25:03,840 --> 00:25:05,880
our in our experiment here the workloads

596
00:25:05,880 --> 00:25:07,620
were the same so it's kind of a toy

597
00:25:07,620 --> 00:25:09,480
example but if you want to spread

598
00:25:09,480 --> 00:25:11,280
further the load you could use

599
00:25:11,280 --> 00:25:12,780
multi-pass transfer protocols to

600
00:25:12,780 --> 00:25:15,659
transfer uh the flows to a different IP

601
00:25:15,659 --> 00:25:17,100
meaning transferring the flows to a

602
00:25:17,100 --> 00:25:20,280
different core and helps spread the load

603
00:25:20,280 --> 00:25:22,940
um next slide please

604
00:25:23,100 --> 00:25:26,340
um lastly one ID that is rather in the

605
00:25:26,340 --> 00:25:28,140
network rather than Honda host we've

606
00:25:28,140 --> 00:25:30,600
been looking at IDs on the host and this

607
00:25:30,600 --> 00:25:32,460
presentation but there are more IDs in

608
00:25:32,460 --> 00:25:35,220
the network in the paper so one of the

609
00:25:35,220 --> 00:25:39,539
ID is is combining IPv6 prefix and

610
00:25:39,539 --> 00:25:43,760
segment routing domains and basically

611
00:25:43,760 --> 00:25:47,340
put all the related Services inside an

612
00:25:47,340 --> 00:25:49,919
IPv6 prefix this is kind of a simple ID

613
00:25:49,919 --> 00:25:52,320
but it has the nice effect of for

614
00:25:52,320 --> 00:25:56,159
incoming traffic to be able to Route the

615
00:25:56,159 --> 00:25:58,320
traffic through service chains just

616
00:25:58,320 --> 00:26:01,440
based on the destination IP

617
00:26:01,440 --> 00:26:02,159
um

618
00:26:02,159 --> 00:26:04,020
next slide please

619
00:26:04,020 --> 00:26:06,120
and so that's that's some of the idea

620
00:26:06,120 --> 00:26:09,360
we've been uh exploring in the paper

621
00:26:09,360 --> 00:26:11,940
um but really the key message of of our

622
00:26:11,940 --> 00:26:13,740
position paper and this presentation is

623
00:26:13,740 --> 00:26:15,840
that uh with IPv6 we have a lot more

624
00:26:15,840 --> 00:26:18,360
addresses to play with uh which doesn't

625
00:26:18,360 --> 00:26:21,299
necessarily mean we have uh the only way

626
00:26:21,299 --> 00:26:23,279
to use them is use more device we could

627
00:26:23,279 --> 00:26:25,559
just simply reconsider how they're used

628
00:26:25,559 --> 00:26:26,880
on the device

629
00:26:26,880 --> 00:26:28,980
uh and there is much more to do than

630
00:26:28,980 --> 00:26:31,140
just assigning one IP to each interface

631
00:26:31,140 --> 00:26:33,480
uh and there could be a lot more

632
00:26:33,480 --> 00:26:36,299
thoughts in this direction uh to try to

633
00:26:36,299 --> 00:26:38,700
explore what all this means and

634
00:26:38,700 --> 00:26:40,559
obviously multi-pass transfer protocol

635
00:26:40,559 --> 00:26:43,980
are quite useful on the endos to be able

636
00:26:43,980 --> 00:26:46,020
to leverage all those

637
00:26:46,020 --> 00:26:47,820
um all those possibilities so if you're

638
00:26:47,820 --> 00:26:50,279
interested in developing uh those use

639
00:26:50,279 --> 00:26:51,779
cases with multi-pass transport

640
00:26:51,779 --> 00:26:54,659
protocols and several ipf addresses just

641
00:26:54,659 --> 00:26:58,140
reach to us myself Olivier

642
00:26:58,140 --> 00:27:00,720
um or share any thoughts you have now

643
00:27:00,720 --> 00:27:01,799
um I think that's the end of my

644
00:27:01,799 --> 00:27:03,360
presentation I'm ready to take questions

645
00:27:03,360 --> 00:27:05,719
so

646
00:27:07,620 --> 00:27:08,760
first

647
00:27:08,760 --> 00:27:11,100
I'm using my chair power putting myself

648
00:27:11,100 --> 00:27:13,080
in the queue thank you very much very

649
00:27:13,080 --> 00:27:14,480
interesting

650
00:27:14,480 --> 00:27:17,100
uh glad to see that someone else is

651
00:27:17,100 --> 00:27:19,440
trying to solve this multi-home and

652
00:27:19,440 --> 00:27:22,919
without a bgpo and IPv6 stuff

653
00:27:22,919 --> 00:27:26,340
one comment and one question actually

654
00:27:26,340 --> 00:27:28,799
two comments and one question first of

655
00:27:28,799 --> 00:27:31,080
all yes IPv6 is basically already right

656
00:27:31,080 --> 00:27:34,140
by definition any IP almost 10 apb-6

657
00:27:34,140 --> 00:27:35,760
enable hostile already you have multiple

658
00:27:35,760 --> 00:27:38,580
multiple other addresses right link

659
00:27:38,580 --> 00:27:41,220
local stable privacy multiple prior

660
00:27:41,220 --> 00:27:44,000
research right and so on

661
00:27:44,000 --> 00:27:48,299
uh you might be interested to go and

662
00:27:48,299 --> 00:27:50,940
look into V6 Ops thread going on because

663
00:27:50,940 --> 00:27:54,900
I started some fire there uh by noticing

664
00:27:54,900 --> 00:27:57,659
that while it's all great operationally

665
00:27:57,659 --> 00:27:59,460
if you start using multiple addresses

666
00:27:59,460 --> 00:28:03,480
now we hit in some hidden limitations on

667
00:28:03,480 --> 00:28:06,360
which vendors tend to put on us and some

668
00:28:06,360 --> 00:28:08,820
people actually in V6 office might find

669
00:28:08,820 --> 00:28:11,279
your presentation quite scary because as

670
00:28:11,279 --> 00:28:13,320
it's been correctly mentioned there are

671
00:28:13,320 --> 00:28:15,659
multiple addresses come in with a cost

672
00:28:15,659 --> 00:28:18,419
to the network because yeah you need to

673
00:28:18,419 --> 00:28:22,440
sub have various types of caches on your

674
00:28:22,440 --> 00:28:24,960
network devices for every address and if

675
00:28:24,960 --> 00:28:26,340
you talk about some of the excellent

676
00:28:26,340 --> 00:28:28,080
deployments it's going to be actually a

677
00:28:28,080 --> 00:28:29,460
route per address

678
00:28:29,460 --> 00:28:31,860
and when you move from one route per

679
00:28:31,860 --> 00:28:35,039
client to like 20 routes per client

680
00:28:35,039 --> 00:28:37,919
you might you might actually go to

681
00:28:37,919 --> 00:28:40,740
significant upgrade of your Hardware

682
00:28:40,740 --> 00:28:42,659
a question so

683
00:28:42,659 --> 00:28:45,600
have you done any like practical tasting

684
00:28:45,600 --> 00:28:49,140
on fallback speed on switch over speed

685
00:28:49,140 --> 00:28:51,120
if you have multiple addresses and like

686
00:28:51,120 --> 00:28:53,520
some of them do not work or stopped

687
00:28:53,520 --> 00:28:54,900
working in the middle of the session

688
00:28:54,900 --> 00:28:57,779
which actually much much worse

689
00:28:57,779 --> 00:29:00,419
um so we're pretty early on the process

690
00:29:00,419 --> 00:29:03,059
of experimenting so the the quick answer

691
00:29:03,059 --> 00:29:06,240
is no uh but we're looking uh we're

692
00:29:06,240 --> 00:29:07,860
looking to continue that work and and

693
00:29:07,860 --> 00:29:09,360
this is definitely the the kind of

694
00:29:09,360 --> 00:29:11,640
question we will like to answer we

695
00:29:11,640 --> 00:29:12,720
thought about

696
00:29:12,720 --> 00:29:16,020
um how we could uh proposed to the

697
00:29:16,020 --> 00:29:17,940
students on our campus to do experiment

698
00:29:17,940 --> 00:29:21,059
at their home and really have a lot of

699
00:29:21,059 --> 00:29:23,159
people toying with this on a practical

700
00:29:23,159 --> 00:29:24,899
level and and see what are the the

701
00:29:24,899 --> 00:29:27,120
drawbacks of having multiple addresses

702
00:29:27,120 --> 00:29:29,399
how is the OS handling that and that

703
00:29:29,399 --> 00:29:31,980
kind of stuff uh so definitely uh you

704
00:29:31,980 --> 00:29:34,200
thought about you you talked about uh V6

705
00:29:34,200 --> 00:29:37,380
Ops uh we are also interested not just

706
00:29:37,380 --> 00:29:39,840
on an academical level but our okay

707
00:29:39,840 --> 00:29:43,080
today what are the the drawbacks uh of

708
00:29:43,080 --> 00:29:45,539
what are the the obstacles in the way to

709
00:29:45,539 --> 00:29:47,399
be able to use multiple addresses

710
00:29:47,399 --> 00:29:48,960
because I don't think many people have

711
00:29:48,960 --> 00:29:51,360
experience on that practical deployments

712
00:29:51,360 --> 00:29:53,159
and stuff like that

713
00:29:53,159 --> 00:29:58,880
oh thank you so next in the queue Luigi

714
00:30:00,480 --> 00:30:02,880
that's me hi uh thank you very much for

715
00:30:02,880 --> 00:30:05,880
uh the presentation was very interesting

716
00:30:05,880 --> 00:30:08,279
um my question is more about um

717
00:30:08,279 --> 00:30:10,380
are you just interested in developing

718
00:30:10,380 --> 00:30:13,260
use cases and in a certain way uh how

719
00:30:13,260 --> 00:30:16,260
you deploy and use ip6 addresses or do

720
00:30:16,260 --> 00:30:18,600
you think we can go further and revise

721
00:30:18,600 --> 00:30:22,260
actually the the IPv6 addressing model

722
00:30:22,260 --> 00:30:24,360
to the IPv6 address model is that what

723
00:30:24,360 --> 00:30:27,600
you said yeah in order to revise I mean

724
00:30:27,600 --> 00:30:30,899
the IPv6 addressing mode maybe making it

725
00:30:30,899 --> 00:30:33,899
evolve somehow so giving such advice is

726
00:30:33,899 --> 00:30:36,899
not an easy position

727
00:30:36,899 --> 00:30:38,760
um

728
00:30:38,760 --> 00:30:40,200
um

729
00:30:40,200 --> 00:30:42,000
so

730
00:30:42,000 --> 00:30:44,039
my personal interest is whether in

731
00:30:44,039 --> 00:30:46,620
transport protocols that's an also you

732
00:30:46,620 --> 00:30:48,899
can see that on the multibuster side of

733
00:30:48,899 --> 00:30:49,799
the project

734
00:30:49,799 --> 00:30:51,600
um but but really like the in the paper

735
00:30:51,600 --> 00:30:55,380
the discussion goes as further as uh do

736
00:30:55,380 --> 00:30:59,279
we need ports or is IP address all

737
00:30:59,279 --> 00:31:01,919
enough can we address one IP address per

738
00:31:01,919 --> 00:31:05,039
process and is that does that works

739
00:31:05,039 --> 00:31:07,140
obviously from an operation you know

740
00:31:07,140 --> 00:31:08,340
point of view it

741
00:31:08,340 --> 00:31:11,520
might seem complicated uh but the the

742
00:31:11,520 --> 00:31:13,440
concrete step for us is experimenting

743
00:31:13,440 --> 00:31:15,779
with all that rather than like proposing

744
00:31:15,779 --> 00:31:18,720
a new IPv6 addressing model and I know

745
00:31:18,720 --> 00:31:20,399
there's been an addressing discussion in

746
00:31:20,399 --> 00:31:22,020
the ATF going on but I have not looked

747
00:31:22,020 --> 00:31:24,679
at it certainly uh if you want to learn

748
00:31:24,679 --> 00:31:27,480
and uh I can send you a couple of

749
00:31:27,480 --> 00:31:29,279
pointers we might talk more will welcome

750
00:31:29,279 --> 00:31:32,100
any new ideas there okay we might talk

751
00:31:32,100 --> 00:31:35,100
more offline of that then thank you

752
00:31:35,100 --> 00:31:38,100
real

753
00:31:40,799 --> 00:31:42,960
hi uh so

754
00:31:42,960 --> 00:31:47,279
um you've so from the prior question I I

755
00:31:47,279 --> 00:31:48,960
figured that you are more interested in

756
00:31:48,960 --> 00:31:50,520
transport and that sort of that's the

757
00:31:50,520 --> 00:31:52,080
sort of focus

758
00:31:52,080 --> 00:31:54,240
um so so you haven't looked have you

759
00:31:54,240 --> 00:31:56,399
looked on anything sort of underneath

760
00:31:56,399 --> 00:31:58,740
the transport layer at the network layer

761
00:31:58,740 --> 00:32:00,899
for example because at the end of the

762
00:32:00,899 --> 00:32:04,740
day um so it comes down to architectural

763
00:32:04,740 --> 00:32:07,799
naming issue where this is you know

764
00:32:07,799 --> 00:32:10,080
clear sort of uh semantic overloading of

765
00:32:10,080 --> 00:32:13,980
ips IP addresses right and uh IP address

766
00:32:13,980 --> 00:32:15,899
is considered harmful and then you know

767
00:32:15,899 --> 00:32:18,299
like this kind of paper have showed that

768
00:32:18,299 --> 00:32:19,440
so um

769
00:32:19,440 --> 00:32:21,720
my point is um

770
00:32:21,720 --> 00:32:23,880
it might be interesting for you to sort

771
00:32:23,880 --> 00:32:27,539
of look at the sort of cohesion of sort

772
00:32:27,539 --> 00:32:28,500
of say

773
00:32:28,500 --> 00:32:30,600
uh Network layer sort of you know

774
00:32:30,600 --> 00:32:32,880
tidying up naming architecture Approach

775
00:32:32,880 --> 00:32:34,740
at the same time as you look at the

776
00:32:34,740 --> 00:32:36,419
transfer protocol what the you know how

777
00:32:36,419 --> 00:32:37,919
like

778
00:32:37,919 --> 00:32:39,779
um this identifier locator split Network

779
00:32:39,779 --> 00:32:42,000
protocol aware transfer protocol might

780
00:32:42,000 --> 00:32:44,580
be something that might be fun to sort

781
00:32:44,580 --> 00:32:45,779
of explore

782
00:32:45,779 --> 00:32:48,000
um I've I've in my during my PhD I

783
00:32:48,000 --> 00:32:50,580
worked on sort of that sort of area so

784
00:32:50,580 --> 00:32:52,260
um might be good um if we take this

785
00:32:52,260 --> 00:32:53,880
offline and chat more later if that's

786
00:32:53,880 --> 00:32:56,100
yeah definitely yeah I talked about

787
00:32:56,100 --> 00:32:58,919
transport but like we like root cause

788
00:32:58,919 --> 00:33:01,200
analysis in our lab so definitely the

789
00:33:01,200 --> 00:33:03,120
network if the network layer is involved

790
00:33:03,120 --> 00:33:05,159
and there are some impediments in the

791
00:33:05,159 --> 00:33:06,600
network there we're interested to know

792
00:33:06,600 --> 00:33:08,880
them uh we're not just sitting on the

793
00:33:08,880 --> 00:33:10,919
transport layer but yeah definitely

794
00:33:10,919 --> 00:33:14,340
let's chat about this okay cool

795
00:33:14,340 --> 00:33:16,279
um Megan

796
00:33:16,279 --> 00:33:18,779
uh so

797
00:33:18,779 --> 00:33:23,100
idea of like address per application and

798
00:33:23,100 --> 00:33:25,740
using V6 addresses instead of ports it's

799
00:33:25,740 --> 00:33:29,159
actually quite interesting one I think

800
00:33:29,159 --> 00:33:31,440
if we want to go to that direction we

801
00:33:31,440 --> 00:33:35,539
would need to change deployment model

802
00:33:35,539 --> 00:33:39,059
specifically go to something like 64 per

803
00:33:39,059 --> 00:33:41,880
host because otherwise like yeah it does

804
00:33:41,880 --> 00:33:44,100
not scale because yeah all this like

805
00:33:44,100 --> 00:33:45,720
addresses come in as I said with a price

806
00:33:45,720 --> 00:33:48,539
and network probably like current

807
00:33:48,539 --> 00:33:50,820
networks would not survive until you go

808
00:33:50,820 --> 00:33:53,100
to something quote like three gpp is

809
00:33:53,100 --> 00:33:55,080
doing when

810
00:33:55,080 --> 00:33:57,539
from Network perspective it's still just

811
00:33:57,539 --> 00:33:59,399
around the networks are designed to deal

812
00:33:59,399 --> 00:34:02,519
with routes yeah and if you go in 64 per

813
00:34:02,519 --> 00:34:05,760
host and you give a host the whole slash

814
00:34:05,760 --> 00:34:07,500
64 do whatever you want with this that

815
00:34:07,500 --> 00:34:10,320
will be host limitations uh not like

816
00:34:10,320 --> 00:34:13,139
Network limitations yeah so again I

817
00:34:13,139 --> 00:34:15,780
guess transport people do not come to

818
00:34:15,780 --> 00:34:18,000
groups like V6 soft stuff and but I

819
00:34:18,000 --> 00:34:20,219
suggest you might pay some attention to

820
00:34:20,219 --> 00:34:21,719
this thank you

821
00:34:21,719 --> 00:34:24,418
no very interesting comments so yes the

822
00:34:24,418 --> 00:34:28,139
intent was to give us 64 to the host and

823
00:34:28,139 --> 00:34:30,839
I almost also just wanted to say that

824
00:34:30,839 --> 00:34:33,540
our knowledge is kind of textbook IPv6

825
00:34:33,540 --> 00:34:36,179
uh so so the network or the network

826
00:34:36,179 --> 00:34:38,040
courses all IPv6 so that's the only

827
00:34:38,040 --> 00:34:40,020
thing we know

828
00:34:40,020 --> 00:34:41,520
um but

829
00:34:41,520 --> 00:34:44,219
um for from our University at least uh

830
00:34:44,219 --> 00:34:46,020
but then yeah so so

831
00:34:46,020 --> 00:34:50,040
our our understanding is kind of

832
00:34:50,040 --> 00:34:54,000
um is that yeah so IPv6 defined prefixes

833
00:34:54,000 --> 00:34:57,300
prefixes are routed only routes to

834
00:34:57,300 --> 00:34:59,460
prefixes exist but then in the reality

835
00:34:59,460 --> 00:35:01,619
there might be subtle things that we

836
00:35:01,619 --> 00:35:03,660
don't know of uh and I'm pretty sure

837
00:35:03,660 --> 00:35:06,359
Olivier had some insight about that but

838
00:35:06,359 --> 00:35:08,580
like the exploration of thoughts started

839
00:35:08,580 --> 00:35:10,800
from there from this context yeah so

840
00:35:10,800 --> 00:35:12,839
like there are some there is a devil in

841
00:35:12,839 --> 00:35:15,060
the details here yeah but yeah I guess

842
00:35:15,060 --> 00:35:16,619
we can talk more

843
00:35:16,619 --> 00:35:20,300
thank you thank you

844
00:35:23,250 --> 00:35:26,480
[Music]

845
00:35:29,300 --> 00:35:32,339
uh support team

846
00:35:32,339 --> 00:35:33,780
wait

847
00:35:33,780 --> 00:35:37,640
do we have the right slide so

848
00:35:38,700 --> 00:35:40,680
ah yeah

849
00:35:40,680 --> 00:35:43,578
it's the first one

850
00:35:45,000 --> 00:35:46,320
is it

851
00:35:46,320 --> 00:35:49,140
it's the right one right it's

852
00:35:49,140 --> 00:35:52,460
yeah yeah okay

853
00:36:05,520 --> 00:36:07,500
right so yeah thank you very much I'm

854
00:36:07,500 --> 00:36:10,380
enjoy the Ross from Qualcomm

855
00:36:10,380 --> 00:36:11,460
um and I'm going to be talking about

856
00:36:11,460 --> 00:36:13,200
bottleneck structures I have a couple of

857
00:36:13,200 --> 00:36:15,780
presentations the one the first one is

858
00:36:15,780 --> 00:36:17,820
um price the basics of bottlenecker

859
00:36:17,820 --> 00:36:20,400
structures uh interaction and some of

860
00:36:20,400 --> 00:36:21,839
the use cases

861
00:36:21,839 --> 00:36:23,339
um and I'm going to talk a little bit

862
00:36:23,339 --> 00:36:25,500
about also production deployments

863
00:36:25,500 --> 00:36:26,880
um and then the second presentation

864
00:36:26,880 --> 00:36:28,980
after it's going to be about how to

865
00:36:28,980 --> 00:36:30,420
compete on the construction the partial

866
00:36:30,420 --> 00:36:31,640
information in the context of

867
00:36:31,640 --> 00:36:33,500
multi-domain or

868
00:36:33,500 --> 00:36:38,339
multi-automa systems um yeah so next

869
00:36:38,339 --> 00:36:40,260
slide yeah thanks

870
00:36:40,260 --> 00:36:42,480
next one

871
00:36:42,480 --> 00:36:45,180
so uh yeah you know I'm not going to go

872
00:36:45,180 --> 00:36:47,339
into the math but basically uh you have

873
00:36:47,339 --> 00:36:50,040
papers that is a second paper

874
00:36:50,040 --> 00:36:51,960
uh sigmatics paper and extended

875
00:36:51,960 --> 00:36:53,700
technical report also and then a couple

876
00:36:53,700 --> 00:36:56,400
of graphs um that you can read uh the

877
00:36:56,400 --> 00:36:58,980
drafts currently the discussion has been

878
00:36:58,980 --> 00:37:03,000
asked in the outer working group but um

879
00:37:03,000 --> 00:37:05,640
I'm here more in the research group it's

880
00:37:05,640 --> 00:37:07,200
also Wisconsin speakers applications of

881
00:37:07,200 --> 00:37:09,079
one like a structures could be

882
00:37:09,079 --> 00:37:11,760
within other working groups and research

883
00:37:11,760 --> 00:37:15,660
groups as well so uh next up yeah

884
00:37:15,660 --> 00:37:18,480
thanks so I'm gonna pick on to start

885
00:37:18,480 --> 00:37:19,680
introduction I'm going to pick on one

886
00:37:19,680 --> 00:37:21,000
specific communication Network problem

887
00:37:21,000 --> 00:37:22,500
which is the problem of congestion

888
00:37:22,500 --> 00:37:24,839
control so

889
00:37:24,839 --> 00:37:27,839
um the prevailing view in in the problem

890
00:37:27,839 --> 00:37:29,760
of congestive control has been based on

891
00:37:29,760 --> 00:37:31,380
this notion that the performance of the

892
00:37:31,380 --> 00:37:33,720
flow is uniquely determined by its

893
00:37:33,720 --> 00:37:36,300
bottleneck lean uh this sort of view

894
00:37:36,300 --> 00:37:39,180
goes all the way back to you know the

895
00:37:39,180 --> 00:37:41,579
famous Jacobson's second paper 1988

896
00:37:41,579 --> 00:37:42,960
which proposed the first congestion

897
00:37:42,960 --> 00:37:44,820
control algorithm with this diagram

898
00:37:44,820 --> 00:37:47,060
showing the notion of bottleneck link

899
00:37:47,060 --> 00:37:49,200
which literally saved internet from

900
00:37:49,200 --> 00:37:50,579
congestion Collapse by proposing the

901
00:37:50,579 --> 00:37:52,619
first congestion control algorithm now

902
00:37:52,619 --> 00:37:55,200
next to the slide uh well this this is a

903
00:37:55,200 --> 00:37:56,579
true statement that the performance of a

904
00:37:56,579 --> 00:37:58,140
fluency nuclear determine by its bottom

905
00:37:58,140 --> 00:38:00,119
line link what we find is that there is

906
00:38:00,119 --> 00:38:01,940
a more sort of um

907
00:38:01,940 --> 00:38:05,280
fundamental or hidden story behind it

908
00:38:05,280 --> 00:38:08,040
and the analogy that we like to build uh

909
00:38:08,040 --> 00:38:09,480
to understand what about microstructure

910
00:38:09,480 --> 00:38:11,099
is is that if the problem of congestion

911
00:38:11,099 --> 00:38:13,320
control were an iceberg the notion that

912
00:38:13,320 --> 00:38:15,599
the performance overflow is initially

913
00:38:15,599 --> 00:38:17,160
determined by its bottleneck link would

914
00:38:17,160 --> 00:38:19,200
be the symptom the the tip of the

915
00:38:19,200 --> 00:38:22,200
iceberg what what's uh what what's

916
00:38:22,200 --> 00:38:24,420
underneath what the submerged part is

917
00:38:24,420 --> 00:38:25,859
what we call the bottlenecker structure

918
00:38:25,859 --> 00:38:27,900
which is here in sort of latent but

919
00:38:27,900 --> 00:38:29,520
reveals the sort of system-wide

920
00:38:29,520 --> 00:38:31,140
performance of the communication Network

921
00:38:31,140 --> 00:38:33,720
system right so and we'll see what that

922
00:38:33,720 --> 00:38:37,260
means um in the next slides um yeah next

923
00:38:37,260 --> 00:38:39,839
now I'm going to sort of put an example

924
00:38:39,839 --> 00:38:41,280
to illustrate what a bottom like a

925
00:38:41,280 --> 00:38:42,780
structure is so I'm going to start with

926
00:38:42,780 --> 00:38:45,000
the communication Network and in this

927
00:38:45,000 --> 00:38:47,460
example circles are links so we have

928
00:38:47,460 --> 00:38:49,859
four links link one for link four each

929
00:38:49,859 --> 00:38:52,500
one with a capacity C1 through C4 and

930
00:38:52,500 --> 00:38:55,980
then lines are flows uh servers in the

931
00:38:55,980 --> 00:38:58,200
link so we have six flows each one with

932
00:38:58,200 --> 00:38:59,760
the color so flow one through four six

933
00:38:59,760 --> 00:39:01,619
so for instance 401 traverses link one

934
00:39:01,619 --> 00:39:05,040
only float six traverses link one link

935
00:39:05,040 --> 00:39:08,820
two and Link three and so on okay now uh

936
00:39:08,820 --> 00:39:10,140
next slide

937
00:39:10,140 --> 00:39:13,320
um I'm gonna fast forward and forget

938
00:39:13,320 --> 00:39:15,060
about the math and I'm gonna

939
00:39:15,060 --> 00:39:16,020
um and this I'm going to show you what

940
00:39:16,020 --> 00:39:17,700
the ball maker structure is and how to

941
00:39:17,700 --> 00:39:19,980
interpret it this is the bottleneck

942
00:39:19,980 --> 00:39:22,200
structure of this communication network

943
00:39:22,200 --> 00:39:24,420
configuration and the way to read the

944
00:39:24,420 --> 00:39:27,420
bottleneck structure is as follows so

945
00:39:27,420 --> 00:39:29,180
um vertices

946
00:39:29,180 --> 00:39:33,060
white vertices correspond to Links so we

947
00:39:33,060 --> 00:39:34,680
have link one link tooling three and

948
00:39:34,680 --> 00:39:36,839
Link four are four white vertices color

949
00:39:36,839 --> 00:39:39,660
vertices our flows

950
00:39:39,660 --> 00:39:44,099
if there is a direct Edge from a Vertex

951
00:39:44,099 --> 00:39:46,740
from a link vertex to a flow it means

952
00:39:46,740 --> 00:39:48,599
that that flow is bottleneck at that

953
00:39:48,599 --> 00:39:50,280
link so in this case we have the flow 3

954
00:39:50,280 --> 00:39:51,660
is going to make a ling one because

955
00:39:51,660 --> 00:39:53,339
there is a direct Edge from name one two

956
00:39:53,339 --> 00:39:54,839
four three

957
00:39:54,839 --> 00:39:56,640
and the other relationship is as follows

958
00:39:56,640 --> 00:39:59,400
e there's a Negative Edge from a flow to

959
00:39:59,400 --> 00:40:01,320
a link then it simply means that that

960
00:40:01,320 --> 00:40:03,480
floats versus that link right so in this

961
00:40:03,480 --> 00:40:05,040
case we have the flow things versus Link

962
00:40:05,040 --> 00:40:06,359
to because there is this relationship

963
00:40:06,359 --> 00:40:08,960
and that's actually true so protein two

964
00:40:08,960 --> 00:40:12,000
uh and proteuses Link one so this is a

965
00:40:12,000 --> 00:40:13,680
bi-directional but fourth is probably

966
00:40:13,680 --> 00:40:15,480
like a ling one so there is also the

967
00:40:15,480 --> 00:40:18,420
directed humbling 1.3 and so on okay so

968
00:40:18,420 --> 00:40:20,160
that's that's the sort of the core um

969
00:40:20,160 --> 00:40:21,780
relationships described by the bottom

970
00:40:21,780 --> 00:40:23,700
abstraction

971
00:40:23,700 --> 00:40:25,680
uh and so you're gonna start sort of

972
00:40:25,680 --> 00:40:27,900
thinking about what what is happening us

973
00:40:27,900 --> 00:40:29,160
um so it's telling us wherefore is

974
00:40:29,160 --> 00:40:30,420
bottleneck

975
00:40:30,420 --> 00:40:32,760
um more information so if you want to

976
00:40:32,760 --> 00:40:35,220
click next things

977
00:40:35,220 --> 00:40:37,740
now let's see how we how we can start

978
00:40:37,740 --> 00:40:39,960
interpreting these um

979
00:40:39,960 --> 00:40:42,060
um one uh one of the things that all

980
00:40:42,060 --> 00:40:43,320
microstructural probabilities is how

981
00:40:43,320 --> 00:40:45,480
protovations propagate if there's a

982
00:40:45,480 --> 00:40:47,880
perturbation on disk on this link on

983
00:40:47,880 --> 00:40:49,800
link to say maybe this is why listening

984
00:40:49,800 --> 00:40:51,300
so the same alternation is changing or

985
00:40:51,300 --> 00:40:53,099
something the bomb microstructure tells

986
00:40:53,099 --> 00:40:54,660
us how it perturbates that you want to

987
00:40:54,660 --> 00:40:56,520
click on next things

988
00:40:56,520 --> 00:40:59,040
and it tells us that the propagation of

989
00:40:59,040 --> 00:41:00,720
this perturbation will provide according

990
00:41:00,720 --> 00:41:02,820
to this D graph and what that means is

991
00:41:02,820 --> 00:41:04,800
that no it's going to have an effect on

992
00:41:04,800 --> 00:41:07,260
Flow for flow 2 and flow five and then

993
00:41:07,260 --> 00:41:08,760
three but it's not going to have an

994
00:41:08,760 --> 00:41:10,680
effect on Flow one flow three and flow

995
00:41:10,680 --> 00:41:11,880
C's because there is no electrical

996
00:41:11,880 --> 00:41:13,980
platform link to to any of these other

997
00:41:13,980 --> 00:41:16,500
regions of the network

998
00:41:16,500 --> 00:41:18,119
um so let's let's see how it works if we

999
00:41:18,119 --> 00:41:19,859
say there's a perturbation on link tool

1000
00:41:19,859 --> 00:41:22,619
and maybe a change of capacitor then

1001
00:41:22,619 --> 00:41:24,060
that's actually going to have effect of

1002
00:41:24,060 --> 00:41:25,619
flow five notice that floor 5 does not

1003
00:41:25,619 --> 00:41:27,180
Traverse link to but it's sort of

1004
00:41:27,180 --> 00:41:29,040
interconnected and and that's going to

1005
00:41:29,040 --> 00:41:31,020
propagate right we can also see other

1006
00:41:31,020 --> 00:41:32,820
kind of information sheets and does the

1007
00:41:32,820 --> 00:41:35,760
reverse work so for instance scan

1008
00:41:35,760 --> 00:41:37,680
um you know this tells us that actually

1009
00:41:37,680 --> 00:41:40,740
if I perturate flow one somehow maybe I

1010
00:41:40,740 --> 00:41:42,000
let's say a traffic shape for one or

1011
00:41:42,000 --> 00:41:43,619
maybe flow one disappears that's going

1012
00:41:43,619 --> 00:41:45,000
to create the perturation on the network

1013
00:41:45,000 --> 00:41:46,980
how will that propagate well there's a

1014
00:41:46,980 --> 00:41:49,500
platform flow one to flow five actually

1015
00:41:49,500 --> 00:41:51,780
two paths so that tells us that it's

1016
00:41:51,780 --> 00:41:53,760
going to have an impact on 405. that's

1017
00:41:53,760 --> 00:41:55,920
actually not trivial to to the human eye

1018
00:41:55,920 --> 00:41:57,720
you will because you know floor wine is

1019
00:41:57,720 --> 00:41:58,619
actually on this region of the network

1020
00:41:58,619 --> 00:42:00,480
is telling us that a perturbation on

1021
00:42:00,480 --> 00:42:02,160
Flow one say for one disappears that's

1022
00:42:02,160 --> 00:42:03,540
actually going to have an effect on Flow

1023
00:42:03,540 --> 00:42:06,000
file which is not apparently related

1024
00:42:06,000 --> 00:42:08,940
but the reverse is not not true so if I

1025
00:42:08,940 --> 00:42:10,920
actually uh change flow finally if

1026
00:42:10,920 --> 00:42:12,660
profile disappears that's actually not

1027
00:42:12,660 --> 00:42:13,859
going to have an effect on Flow one

1028
00:42:13,859 --> 00:42:16,619
because there is no platform profile to

1029
00:42:16,619 --> 00:42:18,060
flow one right so you can start seeing

1030
00:42:18,060 --> 00:42:20,040
that so the gradually assuming so

1031
00:42:20,040 --> 00:42:21,480
keeping the stories about how

1032
00:42:21,480 --> 00:42:22,859
perturbations provide through a network

1033
00:42:22,859 --> 00:42:25,200
okay

1034
00:42:25,200 --> 00:42:26,700
um I haven't told you how to read about

1035
00:42:26,700 --> 00:42:27,839
microstructure but that's in the paper

1036
00:42:27,839 --> 00:42:29,880
maybe I'll meet that for for this

1037
00:42:29,880 --> 00:42:31,680
occasion but if you want to click on the

1038
00:42:31,680 --> 00:42:33,420
next one now the thing what I've been

1039
00:42:33,420 --> 00:42:34,500
mentioning so far is sort of like

1040
00:42:34,500 --> 00:42:36,540
qualitative analysis of the network I've

1041
00:42:36,540 --> 00:42:37,980
been telling you about relationships how

1042
00:42:37,980 --> 00:42:40,260
preparations propagate right but one

1043
00:42:40,260 --> 00:42:42,420
thing about competition structures

1044
00:42:42,420 --> 00:42:44,339
actually they allow us to compute things

1045
00:42:44,339 --> 00:42:45,660
and that's what we call the quantitative

1046
00:42:45,660 --> 00:42:47,400
theoremic structures we can actually

1047
00:42:47,400 --> 00:42:50,400
quantify these so there's a change on

1048
00:42:50,400 --> 00:42:52,740
the capacitive link to by certain

1049
00:42:52,740 --> 00:42:54,720
magnitude uh how is that change going to

1050
00:42:54,720 --> 00:42:55,740
prepare then what's the throughput

1051
00:42:55,740 --> 00:42:58,079
that's going to be uh what's the effect

1052
00:42:58,079 --> 00:42:59,700
on profile in terms of throughput and so

1053
00:42:59,700 --> 00:43:01,260
on right so we can actually quantify

1054
00:43:01,260 --> 00:43:02,400
this I'm not going to go into what these

1055
00:43:02,400 --> 00:43:03,599
numbers are but we can actually continue

1056
00:43:03,599 --> 00:43:05,220
file and this there's a conversation

1057
00:43:05,220 --> 00:43:07,020
about can we sort of use these to

1058
00:43:07,020 --> 00:43:08,819
complete a path of magic that's sort of

1059
00:43:08,819 --> 00:43:10,380
the connections with panology we're

1060
00:43:10,380 --> 00:43:11,760
going to try to build that we could

1061
00:43:11,760 --> 00:43:13,200
actually use some of these numbers to

1062
00:43:13,200 --> 00:43:15,480
put them as mathematics and then we'll

1063
00:43:15,480 --> 00:43:17,160
sort of also build that a story in the

1064
00:43:17,160 --> 00:43:19,319
next presentation but the point about

1065
00:43:19,319 --> 00:43:20,700
this is that you can actually qualify

1066
00:43:20,700 --> 00:43:22,500
but also quantify this relationship

1067
00:43:22,500 --> 00:43:25,339
using bottle the bottle of

1068
00:43:25,339 --> 00:43:27,599
structure so if you want to click on

1069
00:43:27,599 --> 00:43:31,200
next thanks okay so now can the flap of

1070
00:43:31,200 --> 00:43:33,480
a butterfly's Wings in America set up a

1071
00:43:33,480 --> 00:43:34,980
tornado in Asia of course the answer is

1072
00:43:34,980 --> 00:43:36,480
no but everything is interrelated and

1073
00:43:36,480 --> 00:43:38,099
even the flapping of the Wings should

1074
00:43:38,099 --> 00:43:39,420
have an effect in somewhere somewhere in

1075
00:43:39,420 --> 00:43:42,000
China right uh so uh and that's the

1076
00:43:42,000 --> 00:43:43,260
point and that's sort of what the

1077
00:43:43,260 --> 00:43:44,160
problem like a structures sort of

1078
00:43:44,160 --> 00:43:46,079
capture this idea that uh everything is

1079
00:43:46,079 --> 00:43:48,300
in the red and how this uh you know how

1080
00:43:48,300 --> 00:43:49,920
how things correlate in the structure

1081
00:43:49,920 --> 00:43:51,900
the structure of bottlenecks that is

1082
00:43:51,900 --> 00:43:55,319
latent in a communication system so next

1083
00:43:55,319 --> 00:43:57,060
one okay and then I'll just summarize

1084
00:43:57,060 --> 00:43:58,680
sort of what I say informally a little

1085
00:43:58,680 --> 00:44:01,140
bit more formally not too much but uh

1086
00:44:01,140 --> 00:44:02,099
that's what we call the propagation

1087
00:44:02,099 --> 00:44:04,140
limits and when it goes as follows if a

1088
00:44:04,140 --> 00:44:06,540
flow f can influence we say that the

1089
00:44:06,540 --> 00:44:08,280
flow f can influence the performance of

1090
00:44:08,280 --> 00:44:10,079
another flow f Prime

1091
00:44:10,079 --> 00:44:11,760
even only if the bottlenecker structure

1092
00:44:11,760 --> 00:44:13,920
has a directed path from F to F Prime

1093
00:44:13,920 --> 00:44:16,260
and this works for flows links and in

1094
00:44:16,260 --> 00:44:18,660
the interleaved as well so in this case

1095
00:44:18,660 --> 00:44:20,579
let's say there's a perturation in this

1096
00:44:20,579 --> 00:44:22,200
flow let's say we traffic shade the flow

1097
00:44:22,200 --> 00:44:23,579
or the flow disappears from the network

1098
00:44:23,579 --> 00:44:25,520
you're going to click on next things

1099
00:44:25,520 --> 00:44:28,260
then this portion of the network will be

1100
00:44:28,260 --> 00:44:29,880
affected but these other flows will not

1101
00:44:29,880 --> 00:44:32,460
be affected same thing if you um next

1102
00:44:32,460 --> 00:44:33,300
one

1103
00:44:33,300 --> 00:44:34,920
if I if there's a protection in the

1104
00:44:34,920 --> 00:44:37,980
capacitor of this link then next

1105
00:44:37,980 --> 00:44:39,480
this portion of the network will be

1106
00:44:39,480 --> 00:44:40,920
affected again but not this portion of

1107
00:44:40,920 --> 00:44:42,300
the network right so this is how it sort

1108
00:44:42,300 --> 00:44:43,680
of works

1109
00:44:43,680 --> 00:44:45,720
um and then next one

1110
00:44:45,720 --> 00:44:47,640
okay and so you can actually I mentioned

1111
00:44:47,640 --> 00:44:49,319
you can quantify these things so there's

1112
00:44:49,319 --> 00:44:51,660
what uh what we call the linear flow

1113
00:44:51,660 --> 00:44:53,339
equations and this tells us how this

1114
00:44:53,339 --> 00:44:55,980
part how this perturbations propagate

1115
00:44:55,980 --> 00:44:58,500
and and in which uh quantity they

1116
00:44:58,500 --> 00:45:00,240
propagate these are the questions I will

1117
00:45:00,240 --> 00:45:01,980
not go into it but one of the points I

1118
00:45:01,980 --> 00:45:03,000
will make about this I'm going to click

1119
00:45:03,000 --> 00:45:04,740
on next yeah

1120
00:45:04,740 --> 00:45:07,440
is that um the bottlenecker structure

1121
00:45:07,440 --> 00:45:08,940
actually effectively are computational

1122
00:45:08,940 --> 00:45:10,200
graphs

1123
00:45:10,200 --> 00:45:12,540
and so um that's one of the advantages

1124
00:45:12,540 --> 00:45:14,400
not you know sort of the framework that

1125
00:45:14,400 --> 00:45:16,680
provides us but actually they allow us

1126
00:45:16,680 --> 00:45:18,480
to make these calculations very fast

1127
00:45:18,480 --> 00:45:19,740
actually

1128
00:45:19,740 --> 00:45:21,300
um because our perturbation is really a

1129
00:45:21,300 --> 00:45:23,220
derivative when you portray the flow

1130
00:45:23,220 --> 00:45:25,560
you're really you know it's a measure

1131
00:45:25,560 --> 00:45:26,880
defect of that you're really Computing

1132
00:45:26,880 --> 00:45:28,200
the derivatives with respect to that

1133
00:45:28,200 --> 00:45:30,240
small change on that flow right so it's

1134
00:45:30,240 --> 00:45:31,260
a tool to actually compute the

1135
00:45:31,260 --> 00:45:32,760
limitation so once we have a tool to

1136
00:45:32,760 --> 00:45:34,740
compute derivatives we have a tool to

1137
00:45:34,740 --> 00:45:36,180
optimize communication systems and

1138
00:45:36,180 --> 00:45:37,740
that's sort of the whole point

1139
00:45:37,740 --> 00:45:40,440
that uh we can use bottleneck structures

1140
00:45:40,440 --> 00:45:42,240
as a framework to optimize communication

1141
00:45:42,240 --> 00:45:43,500
networks and we'll see the applications

1142
00:45:43,500 --> 00:45:45,660
that that have in in a couple of slides

1143
00:45:45,660 --> 00:45:47,099
I guess but the bottom line is that we

1144
00:45:47,099 --> 00:45:49,140
can use these componential graph bionic

1145
00:45:49,140 --> 00:45:51,359
structure to compute gradients and this

1146
00:45:51,359 --> 00:45:54,119
is an example and an analogy for those

1147
00:45:54,119 --> 00:45:55,980
that may be required more more words on

1148
00:45:55,980 --> 00:45:57,119
the AI field is that really a

1149
00:45:57,119 --> 00:45:58,740
computational network is like a neural

1150
00:45:58,740 --> 00:46:00,660
network national graph and so you can

1151
00:46:00,660 --> 00:46:02,339
sort of uh can actually do backward and

1152
00:46:02,339 --> 00:46:04,020
forward prep

1153
00:46:04,020 --> 00:46:06,480
um computations on it to competing one

1154
00:46:06,480 --> 00:46:08,040
is kind of the grass all the derivatives

1155
00:46:08,040 --> 00:46:09,420
and sort of uh I'm going to start

1156
00:46:09,420 --> 00:46:10,440
thinking about

1157
00:46:10,440 --> 00:46:11,940
um how we can use these you know the

1158
00:46:11,940 --> 00:46:13,500
graph to actually do very scalable

1159
00:46:13,500 --> 00:46:15,180
calculations if you're trying to find

1160
00:46:15,180 --> 00:46:16,980
ways to optimize your network in one

1161
00:46:16,980 --> 00:46:18,420
example graph you can actually compute

1162
00:46:18,420 --> 00:46:20,819
all the derivatives uh and then sort of

1163
00:46:20,819 --> 00:46:22,859
get that result uh otherwise that might

1164
00:46:22,859 --> 00:46:25,020
be sort of unscaled on other using other

1165
00:46:25,020 --> 00:46:26,339
tools

1166
00:46:26,339 --> 00:46:28,140
um this also connects to the field of

1167
00:46:28,140 --> 00:46:30,000
automatic differentiation where you can

1168
00:46:30,000 --> 00:46:31,800
actually compute this derivatives fast

1169
00:46:31,800 --> 00:46:33,780
but also accurate as opposed to using

1170
00:46:33,780 --> 00:46:36,300
limits which is medically unstable but

1171
00:46:36,300 --> 00:46:37,560
uh with the compilation graph you can

1172
00:46:37,560 --> 00:46:39,540
actually you do use AV to make these

1173
00:46:39,540 --> 00:46:41,280
calculations without error actually with

1174
00:46:41,280 --> 00:46:43,380
100 Precision so

1175
00:46:43,380 --> 00:46:45,780
um if you want to click on next

1176
00:46:45,780 --> 00:46:47,520
thank you

1177
00:46:47,520 --> 00:46:50,099
um yeah so let's put an example and I'm

1178
00:46:50,099 --> 00:46:51,300
going to use this an example and I'm

1179
00:46:51,300 --> 00:46:53,339
going to query the framework the theory

1180
00:46:53,339 --> 00:46:55,020
and ask the following question I have

1181
00:46:55,020 --> 00:46:57,240
this network and now I want to choose a

1182
00:46:57,240 --> 00:46:58,680
flow that when I remove it from the

1183
00:46:58,680 --> 00:47:00,540
network total throughput increases

1184
00:47:00,540 --> 00:47:01,700
maximally

1185
00:47:01,700 --> 00:47:03,780
and I'm going to assume that the flow

1186
00:47:03,780 --> 00:47:06,119
the flows are regulated by congestion

1187
00:47:06,119 --> 00:47:08,339
control I'm going to do the simulation

1188
00:47:08,339 --> 00:47:10,140
using PBR later but I'm going to sort of

1189
00:47:10,140 --> 00:47:11,880
query the system say which of the flows

1190
00:47:11,880 --> 00:47:14,220
is such that when I remove the flow I

1191
00:47:14,220 --> 00:47:16,319
get maximal in total throughput

1192
00:47:16,319 --> 00:47:17,880
Improvement on the network it's sort of

1193
00:47:17,880 --> 00:47:19,319
like finding the elephant flow if you

1194
00:47:19,319 --> 00:47:21,180
will which is the flow that has the

1195
00:47:21,180 --> 00:47:23,099
highest impact on the network

1196
00:47:23,099 --> 00:47:24,480
so if we actually and then we can use

1197
00:47:24,480 --> 00:47:25,740
bottleneck structures to actually do

1198
00:47:25,740 --> 00:47:28,319
this and if you click on next then you

1199
00:47:28,319 --> 00:47:29,880
can you know we can scan the graph

1200
00:47:29,880 --> 00:47:31,319
compute the derivatives and we obtain

1201
00:47:31,319 --> 00:47:33,540
these of these derivatives capital F is

1202
00:47:33,540 --> 00:47:35,040
total throughput so what I'm doing here

1203
00:47:35,040 --> 00:47:36,599
is what we're doing here is Computing

1204
00:47:36,599 --> 00:47:38,460
the derivatives of total throughput with

1205
00:47:38,460 --> 00:47:40,200
respect to changing the rate of a flow

1206
00:47:40,200 --> 00:47:42,540
which could be for one two three four

1207
00:47:42,540 --> 00:47:44,520
five and six and then I'll pick the one

1208
00:47:44,520 --> 00:47:46,680
that has them the the smallest value

1209
00:47:46,680 --> 00:47:48,240
actually the in this case the smallest

1210
00:47:48,240 --> 00:47:50,460
negative value because what I want is

1211
00:47:50,460 --> 00:47:52,920
when I reduced the terminal flow I want

1212
00:47:52,920 --> 00:47:54,240
to increase maximally through the right

1213
00:47:54,240 --> 00:47:56,040
so it has to be negative derivative and

1214
00:47:56,040 --> 00:47:57,540
so if you look at this model's value

1215
00:47:57,540 --> 00:47:59,280
possible is this one so it's revealing

1216
00:47:59,280 --> 00:48:01,440
us that the sort of elephant flow that

1217
00:48:01,440 --> 00:48:03,839
Flora has the highest impact on total

1218
00:48:03,839 --> 00:48:05,880
through product of the system uh would

1219
00:48:05,880 --> 00:48:07,740
be actually flow seeks this may not be

1220
00:48:07,740 --> 00:48:09,180
necessarily serial if you look at what

1221
00:48:09,180 --> 00:48:10,800
elephant flow the technology and zoom

1222
00:48:10,800 --> 00:48:12,359
they typically focus on the heavy heater

1223
00:48:12,359 --> 00:48:14,280
flow the heavy heat of the flow here

1224
00:48:14,280 --> 00:48:15,960
this is a throughput of the each flow

1225
00:48:15,960 --> 00:48:17,880
actually uh you know the heading here

1226
00:48:17,880 --> 00:48:19,500
will be floor five which is getting 75

1227
00:48:19,500 --> 00:48:21,540
megabits per second and it's telling us

1228
00:48:21,540 --> 00:48:23,640
that actually flow seeks which only it's

1229
00:48:23,640 --> 00:48:25,980
only getting 5 8.3 megabits per second

1230
00:48:25,980 --> 00:48:29,160
is actually the elephant flow here and

1231
00:48:29,160 --> 00:48:30,780
it may not be achievable to know you

1232
00:48:30,780 --> 00:48:33,119
know uh you know our human eye but it's

1233
00:48:33,119 --> 00:48:34,319
sort of you look at the graph then it

1234
00:48:34,319 --> 00:48:36,119
starts making sense because flow CX is

1235
00:48:36,119 --> 00:48:37,980
here is highly strategic flow that's

1236
00:48:37,980 --> 00:48:39,300
sort of traversing the core of the

1237
00:48:39,300 --> 00:48:41,339
network and so that starts to make sense

1238
00:48:41,339 --> 00:48:44,099
and why flow six has such an impact so

1239
00:48:44,099 --> 00:48:46,020
if you want to click on next and indeed

1240
00:48:46,020 --> 00:48:47,819
flow six sort of here it's very

1241
00:48:47,819 --> 00:48:49,260
strategic on the graph this is the

1242
00:48:49,260 --> 00:48:50,579
completion this is the world like a

1243
00:48:50,579 --> 00:48:52,920
structure you can see that that it needs

1244
00:48:52,920 --> 00:48:55,560
this is you know the reason why this is

1245
00:48:55,560 --> 00:48:57,720
a high impact flow even though it's

1246
00:48:57,720 --> 00:49:00,060
getting low bandwidth there's the actual

1247
00:49:00,060 --> 00:49:01,740
simulation showing that this indeed

1248
00:49:01,740 --> 00:49:04,260
happens this is running uh the network

1249
00:49:04,260 --> 00:49:05,760
that I just showed with all this

1250
00:49:05,760 --> 00:49:07,740
explodes you get this performance so

1251
00:49:07,740 --> 00:49:10,440
that the the the purple flow is the high

1252
00:49:10,440 --> 00:49:13,260
is the heavy heater flow the big flow

1253
00:49:13,260 --> 00:49:16,079
um when I removed the heavy heater flow

1254
00:49:16,079 --> 00:49:18,359
which is flow five it's sitting here on

1255
00:49:18,359 --> 00:49:19,859
the bottom like a structure we know from

1256
00:49:19,859 --> 00:49:21,180
the theory that this has no effect on

1257
00:49:21,180 --> 00:49:22,740
everyone else because there is no path

1258
00:49:22,740 --> 00:49:24,720
from floor five to any for anywhere else

1259
00:49:24,720 --> 00:49:26,339
and indeed that's what we see we remove

1260
00:49:26,339 --> 00:49:28,560
the purple flow and the rest of the flow

1261
00:49:28,560 --> 00:49:30,839
is actually experience no change they

1262
00:49:30,839 --> 00:49:32,700
all have the same completion time

1263
00:49:32,700 --> 00:49:34,980
and but instead I remove flow seeks

1264
00:49:34,980 --> 00:49:38,099
which is this flow here the flows uh uh

1265
00:49:38,099 --> 00:49:39,920
which is

1266
00:49:39,920 --> 00:49:42,180
this flow here one of these one of these

1267
00:49:42,180 --> 00:49:44,339
flows here actually then we see that

1268
00:49:44,339 --> 00:49:46,380
completion time everyone is getting more

1269
00:49:46,380 --> 00:49:47,760
throughput in the completion time as a

1270
00:49:47,760 --> 00:49:50,880
whole execution here it's reduced

1271
00:49:50,880 --> 00:49:55,380
um from 679 to 457 right so by removing

1272
00:49:55,380 --> 00:49:56,940
the mouse hole actually in this case we

1273
00:49:56,940 --> 00:49:58,859
get maximum perform maximum increase in

1274
00:49:58,859 --> 00:50:00,180
total throughput if that's what we care

1275
00:50:00,180 --> 00:50:02,280
about say right so you can start seeing

1276
00:50:02,280 --> 00:50:03,480
some of some of the insights that the

1277
00:50:03,480 --> 00:50:04,800
problem like a structure provides in

1278
00:50:04,800 --> 00:50:08,099
this for example if you will

1279
00:50:08,099 --> 00:50:10,740
okay then all right so

1280
00:50:10,740 --> 00:50:13,680
um you know types of um types of

1281
00:50:13,680 --> 00:50:15,060
perturation supported by boundary

1282
00:50:15,060 --> 00:50:16,680
construction remember a perturbation is

1283
00:50:16,680 --> 00:50:19,079
a derivative right it's a types of

1284
00:50:19,079 --> 00:50:20,760
derivatives that you can compute

1285
00:50:20,760 --> 00:50:23,400
floor routing traffic shaping

1286
00:50:23,400 --> 00:50:25,200
link capacity upgrades link capacity

1287
00:50:25,200 --> 00:50:27,540
fluctuations uh shortcuts forward

1288
00:50:27,540 --> 00:50:29,880
scheduling flow completion

1289
00:50:29,880 --> 00:50:32,099
job mapping so you want a job map a

1290
00:50:32,099 --> 00:50:34,940
neural network on a data center say

1291
00:50:34,940 --> 00:50:37,200
these are some examples of how you could

1292
00:50:37,200 --> 00:50:38,940
actually use bottleneck structures to

1293
00:50:38,940 --> 00:50:41,700
sort of optimize the map these kind of

1294
00:50:41,700 --> 00:50:43,380
um uh problems by Computing these kind

1295
00:50:43,380 --> 00:50:44,880
of perturbations these are perturbations

1296
00:50:44,880 --> 00:50:46,560
on a system when you when you place a

1297
00:50:46,560 --> 00:50:48,119
job that's a perturbation how does that

1298
00:50:48,119 --> 00:50:49,500
affect the system

1299
00:50:49,500 --> 00:50:51,780
and next one

1300
00:50:51,780 --> 00:50:53,460
okay then I'll talk a little bit about

1301
00:50:53,460 --> 00:50:55,260
use cases again and so

1302
00:50:55,260 --> 00:50:56,819
um yeah thanks and so there's this sort

1303
00:50:56,819 --> 00:50:58,740
of key here that you know building

1304
00:50:58,740 --> 00:51:00,300
construction at the door root and then

1305
00:51:00,300 --> 00:51:01,559
what are the applications we like to

1306
00:51:01,559 --> 00:51:03,180
think about team link branches Network

1307
00:51:03,180 --> 00:51:05,819
design traffic engineering AI if you

1308
00:51:05,819 --> 00:51:07,020
even you can see some of the

1309
00:51:07,020 --> 00:51:09,540
applications 5G resource allocation for

1310
00:51:09,540 --> 00:51:11,099
performance prediction Network modeling

1311
00:51:11,099 --> 00:51:14,099
slicing routing congestion control Mac

1312
00:51:14,099 --> 00:51:16,859
for resilience uh capacity planning

1313
00:51:16,859 --> 00:51:18,780
robustness analysis data center design

1314
00:51:18,780 --> 00:51:20,760
engine networks even modeling simulation

1315
00:51:20,760 --> 00:51:22,140
these are some some of the applications

1316
00:51:22,140 --> 00:51:24,900
that where um some of them that we're

1317
00:51:24,900 --> 00:51:26,700
actually working on and some of them are

1318
00:51:26,700 --> 00:51:29,700
being sort of research and put a list of

1319
00:51:29,700 --> 00:51:30,720
potential

1320
00:51:30,720 --> 00:51:32,819
um uh research groups maybe that uh

1321
00:51:32,819 --> 00:51:34,980
could uh right now like I said we're in

1322
00:51:34,980 --> 00:51:37,200
the auto working group but um by coming

1323
00:51:37,200 --> 00:51:39,240
here more in the on the research side I

1324
00:51:39,240 --> 00:51:40,859
hope they got feedback on where some of

1325
00:51:40,859 --> 00:51:42,839
these things could could potentially you

1326
00:51:42,839 --> 00:51:44,760
know uh have a contribution in some of

1327
00:51:44,760 --> 00:51:47,339
the research groups or or working groups

1328
00:51:47,339 --> 00:51:49,920
that um that you guys are working on so

1329
00:51:49,920 --> 00:51:53,819
then next one thanks uh and then in the

1330
00:51:53,819 --> 00:51:55,319
draft in the draft that I have that we

1331
00:51:55,319 --> 00:51:57,420
have in the alto working group

1332
00:51:57,420 --> 00:52:00,200
um two dash right now the first draft uh

1333
00:52:00,200 --> 00:52:03,300
we mentioned a few use cases so uh

1334
00:52:03,300 --> 00:52:05,040
application really limiting for CDN and

1335
00:52:05,040 --> 00:52:06,660
Edge Cloud applications time bound

1336
00:52:06,660 --> 00:52:08,940
constrained flow acceleration for large

1337
00:52:08,940 --> 00:52:11,400
data sets uh propose optimization

1338
00:52:11,400 --> 00:52:14,099
through AI modeling John writing routing

1339
00:52:14,099 --> 00:52:15,900
system control service placement network

1340
00:52:15,900 --> 00:52:17,880
computing training neural networks

1341
00:52:17,880 --> 00:52:20,940
mapping a neural network on on a on a

1342
00:52:20,940 --> 00:52:23,880
GPU cluster or data center a network

1343
00:52:23,880 --> 00:52:25,859
slicing these are these are use cases

1344
00:52:25,859 --> 00:52:27,240
that we elaborate a little bit more so

1345
00:52:27,240 --> 00:52:28,319
if you are interested you can go to the

1346
00:52:28,319 --> 00:52:30,119
left and see how we think about Network

1347
00:52:30,119 --> 00:52:32,040
structures could could help there then

1348
00:52:32,040 --> 00:52:33,540
I'm going to click on one example which

1349
00:52:33,540 --> 00:52:36,900
is um optimizing routing and congestion

1350
00:52:36,900 --> 00:52:40,380
control that's also from draft so let's

1351
00:52:40,380 --> 00:52:43,440
see what a specific example yeah

1352
00:52:43,440 --> 00:52:45,480
and so this example focuses on on

1353
00:52:45,480 --> 00:52:47,220
Google's B4 network from the sitcom

1354
00:52:47,220 --> 00:52:50,700
paper so this is um uh the the each each

1355
00:52:50,700 --> 00:52:52,500
of these nodes is a Data Center and

1356
00:52:52,500 --> 00:52:54,180
that's the interconnect this is the

1357
00:52:54,180 --> 00:52:56,160
adjacency Matrix you want to click on

1358
00:52:56,160 --> 00:52:58,140
next that's the same thing a little bit

1359
00:52:58,140 --> 00:53:00,119
more human friendly which is the

1360
00:53:00,119 --> 00:53:02,400
Google's uh yeah Google's V4 network

1361
00:53:02,400 --> 00:53:04,920
from the paper from the sitcom paper uh

1362
00:53:04,920 --> 00:53:06,960
and how it how it's interconnected okay

1363
00:53:06,960 --> 00:53:08,160
so we're going to apply a bottleneck a

1364
00:53:08,160 --> 00:53:09,900
structure here to reason about some of

1365
00:53:09,900 --> 00:53:12,720
the insights from this network I'm going

1366
00:53:12,720 --> 00:53:15,200
to click on next

1367
00:53:15,500 --> 00:53:17,819
uh yeah and so assume a simple

1368
00:53:17,819 --> 00:53:19,740
configuration with a pair of flows

1369
00:53:19,740 --> 00:53:21,720
between every data center in the US and

1370
00:53:21,720 --> 00:53:23,640
Europe we're going to give this really

1371
00:53:23,640 --> 00:53:26,220
simple uh all links are seem to have a

1372
00:53:26,220 --> 00:53:28,380
capacity of 10 gigs except for the

1373
00:53:28,380 --> 00:53:29,720
returns online

1374
00:53:29,720 --> 00:53:33,839
25 gig uh if with these two assumptions

1375
00:53:33,839 --> 00:53:35,339
then we complete about microstructure

1376
00:53:35,339 --> 00:53:36,960
and we obtained this bottleneck

1377
00:53:36,960 --> 00:53:40,099
structure okay if we click on next

1378
00:53:40,099 --> 00:53:43,740
that's a little more graphical uh then

1379
00:53:43,740 --> 00:53:44,760
that's what we think this is the

1380
00:53:44,760 --> 00:53:46,559
bottlenecker structure here we have y

1381
00:53:46,559 --> 00:53:48,780
vertices are links so if you want to

1382
00:53:48,780 --> 00:53:51,059
click on next two and then on Graver

1383
00:53:51,059 --> 00:53:53,880
this is our flows or paths and here so

1384
00:53:53,880 --> 00:53:55,319
there's some mapping so these two tons

1385
00:53:55,319 --> 00:53:57,180
of Landing links uh link a then link

1386
00:53:57,180 --> 00:53:59,339
time would would be sitting at this uh

1387
00:53:59,339 --> 00:54:01,020
at this location the ball microstructure

1388
00:54:01,020 --> 00:54:03,839
link 8 and Link 10. uh and these two

1389
00:54:03,839 --> 00:54:05,400
other links here we'll be sitting at

1390
00:54:05,400 --> 00:54:07,319
this location in the bottom like a

1391
00:54:07,319 --> 00:54:08,760
structure we are representing here the

1392
00:54:08,760 --> 00:54:09,960
bottleneck construction what we call a

1393
00:54:09,960 --> 00:54:12,359
canonical form where it's sort of like

1394
00:54:12,359 --> 00:54:14,160
um the edges the edges the direction of

1395
00:54:14,160 --> 00:54:16,800
the edges always go down not up uh

1396
00:54:16,800 --> 00:54:18,180
unless unless they are bi-directional

1397
00:54:18,180 --> 00:54:20,280
and so there's this property this this

1398
00:54:20,280 --> 00:54:21,740
Lemma that we show also in the paper

1399
00:54:21,740 --> 00:54:24,660
that the available bandwidth

1400
00:54:24,660 --> 00:54:26,819
um is monotonically increasing as you go

1401
00:54:26,819 --> 00:54:28,440
down the graph so the Flows at the

1402
00:54:28,440 --> 00:54:29,579
bottom of the graph will tend to have

1403
00:54:29,579 --> 00:54:31,500
more bandwidth or the paths at the

1404
00:54:31,500 --> 00:54:33,119
bottom of the graph will have more

1405
00:54:33,119 --> 00:54:35,099
bandwidth uh you can see that I'm

1406
00:54:35,099 --> 00:54:37,079
changing flows and bad interchangeably I

1407
00:54:37,079 --> 00:54:38,460
haven't mentioned this but there's a

1408
00:54:38,460 --> 00:54:39,540
version of the polynomial structure

1409
00:54:39,540 --> 00:54:41,460
which we call Path grading graph which

1410
00:54:41,460 --> 00:54:43,380
is folding all the flows that follow the

1411
00:54:43,380 --> 00:54:44,760
same path into a path and you can same

1412
00:54:44,760 --> 00:54:47,280
do the same reasoning changing floors or

1413
00:54:47,280 --> 00:54:48,780
path and I think that's that's for pi

1414
00:54:48,780 --> 00:54:49,619
energy that could be more interesting

1415
00:54:49,619 --> 00:54:50,579
because we really want to talk about

1416
00:54:50,579 --> 00:54:54,540
pants I think but um sorry I think I I

1417
00:54:54,540 --> 00:54:56,460
got I think that's right so but what I

1418
00:54:56,460 --> 00:54:57,720
wanted to say about this is that you can

1419
00:54:57,720 --> 00:54:59,460
see that this these two links actually

1420
00:54:59,460 --> 00:55:01,440
somehow in the U.S are highly strategic

1421
00:55:01,440 --> 00:55:03,059
because they are at the top at the root

1422
00:55:03,059 --> 00:55:04,500
of the graph this means that any

1423
00:55:04,500 --> 00:55:05,880
perforations on the capacity of these

1424
00:55:05,880 --> 00:55:07,740
links will actually have an effect on

1425
00:55:07,740 --> 00:55:09,720
the rest of the network actually and

1426
00:55:09,720 --> 00:55:11,099
this is not true for these other links

1427
00:55:11,099 --> 00:55:12,359
are at the bottom that really they are

1428
00:55:12,359 --> 00:55:14,160
not so easy because perturbation these

1429
00:55:14,160 --> 00:55:16,440
links will not have the same effect so

1430
00:55:16,440 --> 00:55:17,460
that's kind of like the quality

1431
00:55:17,460 --> 00:55:20,099
representing about this setting okay now

1432
00:55:20,099 --> 00:55:21,720
the question is okay I want to transfer

1433
00:55:21,720 --> 00:55:23,460
suppose that an application needs or

1434
00:55:23,460 --> 00:55:25,859
data center needs to transfer you know a

1435
00:55:25,859 --> 00:55:28,260
data set on a sort of a large data set

1436
00:55:28,260 --> 00:55:32,040
from data center 11 to day Center four

1437
00:55:32,040 --> 00:55:34,380
right and and we need to decide which

1438
00:55:34,380 --> 00:55:36,180
path to choose we have multiple path

1439
00:55:36,180 --> 00:55:37,200
options

1440
00:55:37,200 --> 00:55:38,760
and so then what we can do here is a

1441
00:55:38,760 --> 00:55:40,859
random instructions and figure out what

1442
00:55:40,859 --> 00:55:43,319
what uh what band we will get on each of

1443
00:55:43,319 --> 00:55:45,000
these paths and the idea here what we're

1444
00:55:45,000 --> 00:55:46,619
doing here is what is sort of solving

1445
00:55:46,619 --> 00:55:48,420
the joint congestion control and routing

1446
00:55:48,420 --> 00:55:50,099
at the same time asking the question if

1447
00:55:50,099 --> 00:55:53,460
I place the flow on this path uh what's

1448
00:55:53,460 --> 00:55:55,440
the battery that this path will get and

1449
00:55:55,440 --> 00:55:56,940
what is the fact that all the other

1450
00:55:56,940 --> 00:55:58,500
parts will get so the ripple effect the

1451
00:55:58,500 --> 00:56:01,319
Xposed result I don't want no no after I

1452
00:56:01,319 --> 00:56:02,880
place it what is the actual performance

1453
00:56:02,880 --> 00:56:04,859
I'm going to get uh because placing that

1454
00:56:04,859 --> 00:56:05,880
flow itself is going to have an effect

1455
00:56:05,880 --> 00:56:07,440
on the network so how is that ripple

1456
00:56:07,440 --> 00:56:09,180
effect computed so that's what we we're

1457
00:56:09,180 --> 00:56:11,400
going to do using bottleneck structures

1458
00:56:11,400 --> 00:56:12,839
there's an algorithm to actually solve

1459
00:56:12,839 --> 00:56:14,640
this problem which actually combines

1460
00:56:14,640 --> 00:56:17,280
dice with bottlenecker structures so you

1461
00:56:17,280 --> 00:56:18,900
know that directories every algorithm so

1462
00:56:18,900 --> 00:56:20,880
every step is actually querying the

1463
00:56:20,880 --> 00:56:22,200
bottom like construction building around

1464
00:56:22,200 --> 00:56:24,780
like structure in parallel to come to to

1465
00:56:24,780 --> 00:56:26,400
discard paths that are that would never

1466
00:56:26,400 --> 00:56:29,339
be optimal uh using the really nice

1467
00:56:29,339 --> 00:56:31,020
approach and so that's why the

1468
00:56:31,020 --> 00:56:33,359
complexity of this algorithm is V plus e

1469
00:56:33,359 --> 00:56:36,480
log B the traditional diagram and then

1470
00:56:36,480 --> 00:56:38,640
we get this result in this case we get

1471
00:56:38,640 --> 00:56:40,319
that this is the optimal path and we

1472
00:56:40,319 --> 00:56:42,660
will give you 2.5 gigs per second as

1473
00:56:42,660 --> 00:56:44,640
created by the polynomial structure any

1474
00:56:44,640 --> 00:56:46,319
and this is a non-service path actually

1475
00:56:46,319 --> 00:56:47,940
that gives you higher throughput if you

1476
00:56:47,940 --> 00:56:49,140
actually use the shortest pad you will

1477
00:56:49,140 --> 00:56:50,400
get 1.4

1478
00:56:50,400 --> 00:56:52,200
I give its per second of throughput so

1479
00:56:52,200 --> 00:56:53,400
then you can decide whether you know

1480
00:56:53,400 --> 00:56:54,780
whether you want a high throughput path

1481
00:56:54,780 --> 00:56:56,579
or the low latency path but you can make

1482
00:56:56,579 --> 00:56:58,740
that based on an informed decision you

1483
00:56:58,740 --> 00:57:00,720
can also use this for SLA management so

1484
00:57:00,720 --> 00:57:02,280
because what you can do like I mentioned

1485
00:57:02,280 --> 00:57:04,500
once you place that flow you can see how

1486
00:57:04,500 --> 00:57:05,700
the rest of the flows will be effective

1487
00:57:05,700 --> 00:57:08,099
will they have a violation in the SLA so

1488
00:57:08,099 --> 00:57:09,960
before I place that flow I want to make

1489
00:57:09,960 --> 00:57:12,359
sure that uh that that will not violate

1490
00:57:12,359 --> 00:57:15,119
SLA agreements on other paths say right

1491
00:57:15,119 --> 00:57:17,940
so that's kind of IDM yeah next thanks

1492
00:57:17,940 --> 00:57:21,000
and this is sort of the result here so

1493
00:57:21,000 --> 00:57:22,559
um I'm here we're using bottleneck

1494
00:57:22,559 --> 00:57:26,579
structures to uh you know project what

1495
00:57:26,579 --> 00:57:28,020
will happen if you place the flow in the

1496
00:57:28,020 --> 00:57:29,760
shortest path or not or not the shortest

1497
00:57:29,760 --> 00:57:32,220
path if you are the non-short of spot on

1498
00:57:32,220 --> 00:57:33,900
the shortest path which is lower

1499
00:57:33,900 --> 00:57:36,300
throughput 1.4 you would place it here

1500
00:57:36,300 --> 00:57:38,400
at the top actually when you do that the

1501
00:57:38,400 --> 00:57:40,440
floor the the flow would go right here

1502
00:57:40,440 --> 00:57:42,359
at the first level if you place it on

1503
00:57:42,359 --> 00:57:44,099
the on the on the launch of this path

1504
00:57:44,099 --> 00:57:46,020
the flow would be placed here and that's

1505
00:57:46,020 --> 00:57:47,940
remember the monotonic property if you

1506
00:57:47,940 --> 00:57:49,079
place something at the bottom you get

1507
00:57:49,079 --> 00:57:50,280
more throughput that's what's happening

1508
00:57:50,280 --> 00:57:51,480
here so the recommendation if you care

1509
00:57:51,480 --> 00:57:53,220
about throughput here is to place it on

1510
00:57:53,220 --> 00:57:54,480
the launch shortest path which will give

1511
00:57:54,480 --> 00:57:57,359
you 2 2.5 of throughput as opposed to

1512
00:57:57,359 --> 00:58:00,000
1.4 then you can do the SLI management

1513
00:58:00,000 --> 00:58:02,339
sort of thing and then say if you want

1514
00:58:02,339 --> 00:58:03,660
to go next

1515
00:58:03,660 --> 00:58:06,180
and then this is the ripple effect uh if

1516
00:58:06,180 --> 00:58:07,980
I place the flow here using the shortest

1517
00:58:07,980 --> 00:58:11,280
path the the red circles are the

1518
00:58:11,280 --> 00:58:12,660
portions of the network that will see an

1519
00:58:12,660 --> 00:58:15,000
impact if I place it on on the main

1520
00:58:15,000 --> 00:58:16,740
shutter speed the green circles are the

1521
00:58:16,740 --> 00:58:17,819
ones that will have an impact so you can

1522
00:58:17,819 --> 00:58:19,859
see that actually the impact is smaller

1523
00:58:19,859 --> 00:58:21,599
because we're placing the floor at the

1524
00:58:21,599 --> 00:58:22,859
bottom of the graph so they were

1525
00:58:22,859 --> 00:58:24,660
influencing less others so it's kind of

1526
00:58:24,660 --> 00:58:26,520
also more stable maybe as opposed to

1527
00:58:26,520 --> 00:58:27,660
here that's creating a ripple effect

1528
00:58:27,660 --> 00:58:29,460
much bigger than the whole network and

1529
00:58:29,460 --> 00:58:31,800
then next one is this idea that I

1530
00:58:31,800 --> 00:58:33,660
mentioned that as I mentioned that this

1531
00:58:33,660 --> 00:58:35,280
monotonic property that the Flows at the

1532
00:58:35,280 --> 00:58:36,599
bottom at the top are getting less

1533
00:58:36,599 --> 00:58:38,700
bandwidth or the paths of the topic and

1534
00:58:38,700 --> 00:58:39,900
less than me that the ones at the bottom

1535
00:58:39,900 --> 00:58:42,599
if I place the flow on the top I'm still

1536
00:58:42,599 --> 00:58:43,680
in bandwidth from the ones that are

1537
00:58:43,680 --> 00:58:45,240
getting less bandwidth that's you so you

1538
00:58:45,240 --> 00:58:46,440
could reason that maybe that's not a

1539
00:58:46,440 --> 00:58:48,839
fair thing to do because all these Flows

1540
00:58:48,839 --> 00:58:51,240
at the top we're already getting a low

1541
00:58:51,240 --> 00:58:52,799
bandwidth are going to get even less

1542
00:58:52,799 --> 00:58:54,720
bandwidth but if I place the flow at the

1543
00:58:54,720 --> 00:58:58,200
second level these flows have no see no

1544
00:58:58,200 --> 00:59:00,359
impact right so their their low rate

1545
00:59:00,359 --> 00:59:02,400
does not get deteriorated any farther

1546
00:59:02,400 --> 00:59:03,900
and so maybe that's from a fair

1547
00:59:03,900 --> 00:59:05,220
standpoint you can also reason that it's

1548
00:59:05,220 --> 00:59:06,960
also good to actually push the flow to

1549
00:59:06,960 --> 00:59:08,460
the lower level because you get more

1550
00:59:08,460 --> 00:59:09,960
fluid and you're not gonna have you're

1551
00:59:09,960 --> 00:59:10,920
not going to have the flows that

1552
00:59:10,920 --> 00:59:13,440
actually have uh less

1553
00:59:13,440 --> 00:59:16,079
and uh yeah I think that pretty much

1554
00:59:16,079 --> 00:59:18,299
covers it I want to put a note on we

1555
00:59:18,299 --> 00:59:20,819
have uh to the production deployments

1556
00:59:20,819 --> 00:59:22,619
and on this one is that the national

1557
00:59:22,619 --> 00:59:25,319
research platform which is a uh a US

1558
00:59:25,319 --> 00:59:26,520
Hawaii Network used to be called the

1559
00:59:26,520 --> 00:59:28,319
Pacific research platform at the UCSD

1560
00:59:28,319 --> 00:59:30,119
Network connecting the Pacific and the

1561
00:59:30,119 --> 00:59:32,099
west side in the U.S collecting the

1562
00:59:32,099 --> 00:59:34,559
universities and research Labs

1563
00:59:34,559 --> 00:59:37,200
um that's called NRP uh it's a U.S wide

1564
00:59:37,200 --> 00:59:39,420
Network I mentioned and then the other

1565
00:59:39,420 --> 00:59:41,640
one is the doe is that which ensure um

1566
00:59:41,640 --> 00:59:44,640
many of you note also which is a U.S or

1567
00:59:44,640 --> 00:59:45,900
a wide Network connecting also National

1568
00:59:45,900 --> 00:59:48,299
Labs Etc so

1569
00:59:48,299 --> 00:59:50,099
um one application we're using for the

1570
00:59:50,099 --> 00:59:52,680
for the years capacity planning but

1571
00:59:52,680 --> 00:59:53,819
we're also looking at traffic

1572
00:59:53,819 --> 00:59:55,920
engineering

1573
00:59:55,920 --> 00:59:58,020
um and so you know for lack of time we

1574
00:59:58,020 --> 00:59:59,819
will not go into diplomacy but maybe not

1575
00:59:59,819 --> 01:00:00,720
some of the time we can discuss

1576
01:00:00,720 --> 01:00:02,400
deployments and I'm happy with any

1577
01:00:02,400 --> 01:00:04,740
questions we actually have time so if

1578
01:00:04,740 --> 01:00:08,640
you want to talk about something yeah

1579
01:00:08,640 --> 01:00:09,440
um

1580
01:00:09,440 --> 01:00:12,000
uh we can leave it for for the for the Q

1581
01:00:12,000 --> 01:00:14,040
a that people have questions yeah I was

1582
01:00:14,040 --> 01:00:15,240
going to ask that question so we'll

1583
01:00:15,240 --> 01:00:17,640
leave it for the Q a cool

1584
01:00:17,640 --> 01:00:20,640
yeah so um we already have Antoine

1585
01:00:20,640 --> 01:00:23,660
because I think that's the last one okay

1586
01:00:23,660 --> 01:00:27,140
and one note on discussion my you know

1587
01:00:27,140 --> 01:00:30,540
uh my you know I love to get or would

1588
01:00:30,540 --> 01:00:32,040
love to get feedback in terms of where

1589
01:00:32,040 --> 01:00:34,559
we think this could this could uh

1590
01:00:34,559 --> 01:00:36,180
connect with other working groups or

1591
01:00:36,180 --> 01:00:37,559
research groups so that's one topic of

1592
01:00:37,559 --> 01:00:39,119
discussion but anyhow and you know it's

1593
01:00:39,119 --> 01:00:40,680
open for any other questions as well of

1594
01:00:40,680 --> 01:00:42,799
course

1595
01:00:43,220 --> 01:00:45,900
so I have a question but more on the

1596
01:00:45,900 --> 01:00:48,299
graphs you are using rather than on the

1597
01:00:48,299 --> 01:00:50,099
working groups I won't help you on that

1598
01:00:50,099 --> 01:00:52,559
uh in fact when I looked at your graph

1599
01:00:52,559 --> 01:00:55,380
for bottlenecks and how you so yeah when

1600
01:00:55,380 --> 01:00:57,839
you so when when I look at your graph

1601
01:00:57,839 --> 01:01:00,720
with uh flows that are nodes but you

1602
01:01:00,720 --> 01:01:03,420
also have nodes that the flows go across

1603
01:01:03,420 --> 01:01:05,940
that are represented as nodes it

1604
01:01:05,940 --> 01:01:08,940
reminded me of the work of machulata p a

1605
01:01:08,940 --> 01:01:11,160
researcher in France working on some

1606
01:01:11,160 --> 01:01:15,260
tool called stream graphs it's a sort of

1607
01:01:15,260 --> 01:01:19,619
mix between time series and graph and

1608
01:01:19,619 --> 01:01:21,839
you have mathematical tools that help

1609
01:01:21,839 --> 01:01:23,299
you

1610
01:01:23,299 --> 01:01:25,160
associate

1611
01:01:25,160 --> 01:01:29,400
properties to the temporality of where

1612
01:01:29,400 --> 01:01:32,819
flows cross some nodes in the network so

1613
01:01:32,819 --> 01:01:34,680
I think it would be beneficial to your

1614
01:01:34,680 --> 01:01:36,359
work to look at this abstraction because

1615
01:01:36,359 --> 01:01:38,819
I think this typically applies to what

1616
01:01:38,819 --> 01:01:40,740
you are doing okay

1617
01:01:40,740 --> 01:01:42,599
okay good I look forward to talking

1618
01:01:42,599 --> 01:01:46,099
about that yes very nice thanks

1619
01:01:49,220 --> 01:01:52,020
thanks great work uh sounds very

1620
01:01:52,020 --> 01:01:53,040
interesting

1621
01:01:53,040 --> 01:01:54,780
um to me

1622
01:01:54,780 --> 01:01:57,960
um maybe iccrg is a good place also to

1623
01:01:57,960 --> 01:02:00,240
to come to

1624
01:02:00,240 --> 01:02:03,720
um so because probably we have to think

1625
01:02:03,720 --> 01:02:06,180
about different ways of doing congestion

1626
01:02:06,180 --> 01:02:08,700
control in the sense that maybe the

1627
01:02:08,700 --> 01:02:11,119
current closed loop congestion controls

1628
01:02:11,119 --> 01:02:15,240
are some kind of Last Resort but we come

1629
01:02:15,240 --> 01:02:18,059
more into a direction of having better

1630
01:02:18,059 --> 01:02:19,339
planning

1631
01:02:19,339 --> 01:02:22,619
so that you can ramp up flows very early

1632
01:02:22,619 --> 01:02:25,260
for example and with your framework one

1633
01:02:25,260 --> 01:02:28,140
could actually see the effect if I admit

1634
01:02:28,140 --> 01:02:32,040
a certain flow what happens and is it

1635
01:02:32,040 --> 01:02:34,859
better maybe to rate limit that flow or

1636
01:02:34,859 --> 01:02:38,400
just I don't have it at all

1637
01:02:38,400 --> 01:02:40,740
and so on so I think this is quite

1638
01:02:40,740 --> 01:02:43,500
useful okay thank you

1639
01:02:43,500 --> 01:02:45,839
yeah the next the next presentation is

1640
01:02:45,839 --> 01:02:48,000
I'm going to talk about how to do this

1641
01:02:48,000 --> 01:02:49,920
uh under partial information and the

1642
01:02:49,920 --> 01:02:52,079
case of ICC IG I think or congestion

1643
01:02:52,079 --> 01:02:54,599
control in general can be seen as as a

1644
01:02:54,599 --> 01:02:55,920
specific case of partial information

1645
01:02:55,920 --> 01:02:57,359
because in a distributed congestion

1646
01:02:57,359 --> 01:02:59,579
control algorithm every node has partial

1647
01:02:59,579 --> 01:03:00,660
information and they're all trying to

1648
01:03:00,660 --> 01:03:03,180
converge to optimality basically so that

1649
01:03:03,180 --> 01:03:04,440
that probably could enable another

1650
01:03:04,440 --> 01:03:06,839
another composition but yeah thanks

1651
01:03:06,839 --> 01:03:09,780
so yeah Brian Trammel as an individual

1652
01:03:09,780 --> 01:03:12,299
not as paner G chair

1653
01:03:12,299 --> 01:03:14,400
um so I had

1654
01:03:14,400 --> 01:03:16,619
um one question that I missed at the

1655
01:03:16,619 --> 01:03:18,599
beginning of the presentation uh and

1656
01:03:18,599 --> 01:03:20,220
have like I should have stopped you but

1657
01:03:20,220 --> 01:03:21,359
now I'm going to have to go back and

1658
01:03:21,359 --> 01:03:24,780
re-watch on like 0.75 speed

1659
01:03:24,780 --> 01:03:27,660
um but so the difference between an edge

1660
01:03:27,660 --> 01:03:28,859
that is unidirectional and

1661
01:03:28,859 --> 01:03:31,859
bi-directional right like how do we like

1662
01:03:31,859 --> 01:03:32,880
when we're going through and like

1663
01:03:32,880 --> 01:03:34,559
actually constructing this graph

1664
01:03:34,559 --> 01:03:36,299
how do I know I'm putting two arrows on

1665
01:03:36,299 --> 01:03:37,559
it

1666
01:03:37,559 --> 01:03:40,380
so that you have two errors when

1667
01:03:40,380 --> 01:03:41,640
actually whenever your bottleneck

1668
01:03:41,640 --> 01:03:43,559
somewhere you have two arrows it's

1669
01:03:43,559 --> 01:03:45,720
bi-directional the reason is because if

1670
01:03:45,720 --> 01:03:47,339
your ball like there you're coming got

1671
01:03:47,339 --> 01:03:49,740
it okay yeah good okay yeah wow the rest

1672
01:03:49,740 --> 01:03:50,760
of the talk makes a lot more sense now

1673
01:03:50,760 --> 01:03:52,740
cool thank you very much

1674
01:03:52,740 --> 01:03:57,059
um the the second thing that you know um

1675
01:03:57,059 --> 01:03:59,160
uh riffing off of Roland's point a

1676
01:03:59,160 --> 01:04:01,859
little bit uh I did uh very much have

1677
01:04:01,859 --> 01:04:03,240
the feeling that I was watching an ICC

1678
01:04:03,240 --> 01:04:05,040
or G Talk here which is great because I

1679
01:04:05,040 --> 01:04:06,660
missed ICC org this time so thank you

1680
01:04:06,660 --> 01:04:09,299
very much for reading this fanergy

1681
01:04:09,299 --> 01:04:10,799
um I think a lot of the questions about

1682
01:04:10,799 --> 01:04:13,859
sort of like Computing the optimality

1683
01:04:13,859 --> 01:04:16,559
um that's a good venue to get like good

1684
01:04:16,559 --> 01:04:17,700
feedback on that and sort of like

1685
01:04:17,700 --> 01:04:20,160
develop the idea there the thing that I

1686
01:04:20,160 --> 01:04:22,020
would be interested in seeing in pan RG

1687
01:04:22,020 --> 01:04:23,579
is like okay so we have this

1688
01:04:23,579 --> 01:04:25,260
mathematical tool

1689
01:04:25,260 --> 01:04:26,819
how can we

1690
01:04:26,819 --> 01:04:27,720
um you know I'm gonna go ahead and take

1691
01:04:27,720 --> 01:04:29,940
the mask off so you can see my see my

1692
01:04:29,940 --> 01:04:34,140
watch my mouth moving how can we

1693
01:04:34,140 --> 01:04:36,359
um tie that to some of the signaling

1694
01:04:36,359 --> 01:04:37,319
stuff that we're thinking about in

1695
01:04:37,319 --> 01:04:41,400
panergy right like so like the the you

1696
01:04:41,400 --> 01:04:42,960
know you brought up the B4 graph from

1697
01:04:42,960 --> 01:04:44,400
the sitcom paper which is like okay well

1698
01:04:44,400 --> 01:04:45,960
you can very clearly see how this would

1699
01:04:45,960 --> 01:04:48,780
be used in a centralized planning

1700
01:04:48,780 --> 01:04:50,460
um sdn sd-wan

1701
01:04:50,460 --> 01:04:52,380
um situation I think you're probably

1702
01:04:52,380 --> 01:04:54,059
going to answer some of my questions in

1703
01:04:54,059 --> 01:04:56,640
the next talk so I'll I'll

1704
01:04:56,640 --> 01:04:57,960
um actually I'll probably re-ask the

1705
01:04:57,960 --> 01:04:59,220
question then is like I'm really

1706
01:04:59,220 --> 01:05:01,140
interested in then how to tie that

1707
01:05:01,140 --> 01:05:02,940
partial knowledge situation into what

1708
01:05:02,940 --> 01:05:04,319
signaling we would need in a path or

1709
01:05:04,319 --> 01:05:07,380
internet work so yes I think the next

1710
01:05:07,380 --> 01:05:09,119
one will will probably perfect on that

1711
01:05:09,119 --> 01:05:12,680
and maybe more questions yeah thank you

1712
01:05:22,079 --> 01:05:24,839
okay so I'll then the second part is

1713
01:05:24,839 --> 01:05:27,000
about okay we know what the bond like a

1714
01:05:27,000 --> 01:05:29,760
structure is at some level and

1715
01:05:29,760 --> 01:05:33,000
um we like to actually be a little more

1716
01:05:33,000 --> 01:05:35,579
practical and and one way to make these

1717
01:05:35,579 --> 01:05:36,720
particle is okay how do we Implement

1718
01:05:36,720 --> 01:05:38,819
these uh and under partial information

1719
01:05:38,819 --> 01:05:40,380
which is typically the SMS that we face

1720
01:05:40,380 --> 01:05:41,520
in the communication system where you

1721
01:05:41,520 --> 01:05:43,319
don't know everything they still have to

1722
01:05:43,319 --> 01:05:44,579
make the best you can invest on the

1723
01:05:44,579 --> 01:05:46,380
information that you have so let's talk

1724
01:05:46,380 --> 01:05:49,020
about these a little bit and the yeah

1725
01:05:49,020 --> 01:05:50,460
I'll do I'll skip the first part

1726
01:05:50,460 --> 01:05:52,740
actually we've done that so checkbox but

1727
01:05:52,740 --> 01:05:53,640
then we'll talk about Computing model

1728
01:05:53,640 --> 01:05:54,720
construction under partial information

1729
01:05:54,720 --> 01:05:56,520
I'll talk about the distributed border

1730
01:05:56,520 --> 01:05:58,500
protocol that would allow us to do that

1731
01:05:58,500 --> 01:06:00,420
the signaling part if you will and I'll

1732
01:06:00,420 --> 01:06:02,400
put that in uh I'll just honestly have

1733
01:06:02,400 --> 01:06:04,500
this protocol will work uh and Achieve

1734
01:06:04,500 --> 01:06:07,020
Global conversions and then discussion

1735
01:06:07,020 --> 01:06:08,339
yeah

1736
01:06:08,339 --> 01:06:10,920
right next one

1737
01:06:10,920 --> 01:06:13,859
yeah same theme papers and wraps next

1738
01:06:13,859 --> 01:06:16,020
one you can actually skip this yeah

1739
01:06:16,020 --> 01:06:17,400
sorry

1740
01:06:17,400 --> 01:06:21,260
um more and more sorry

1741
01:06:23,220 --> 01:06:25,680
thank you yeah okay so now remember I'm

1742
01:06:25,680 --> 01:06:26,760
going to actually use the same example

1743
01:06:26,760 --> 01:06:27,780
so hopefully we're a little bit

1744
01:06:27,780 --> 01:06:28,859
familiarized the same network

1745
01:06:28,859 --> 01:06:30,000
configuration

1746
01:06:30,000 --> 01:06:32,579
but so far we've assumed that we have

1747
01:06:32,579 --> 01:06:34,799
full knowledge of the network right now

1748
01:06:34,799 --> 01:06:36,180
let's assume that that's not the case

1749
01:06:36,180 --> 01:06:38,280
and let's assume that we have two

1750
01:06:38,280 --> 01:06:40,079
autonomous systems so if you click on

1751
01:06:40,079 --> 01:06:42,380
next

1752
01:06:42,420 --> 01:06:44,280
ah

1753
01:06:44,280 --> 01:06:46,319
okay so we know that this is the bottom

1754
01:06:46,319 --> 01:06:47,700
line Construction we have full knowledge

1755
01:06:47,700 --> 01:06:49,619
but if we click on next now we're going

1756
01:06:49,619 --> 01:06:52,039
to assume

1757
01:06:52,380 --> 01:06:54,420
that uh

1758
01:06:54,420 --> 01:06:56,099
and this this network actually

1759
01:06:56,099 --> 01:06:58,200
corresponds to two Automotive Systems

1760
01:06:58,200 --> 01:07:01,920
and you know uh each as knows only its

1761
01:07:01,920 --> 01:07:04,200
own region so as1 doesn't have an

1762
01:07:04,200 --> 01:07:06,119
information about as2 it still doesn't

1763
01:07:06,119 --> 01:07:08,460
have any information about as1 now we

1764
01:07:08,460 --> 01:07:09,960
run the algorithm so you can click on

1765
01:07:09,960 --> 01:07:10,799
next

1766
01:07:10,799 --> 01:07:12,539
uh we run the ball like a structural

1767
01:07:12,539 --> 01:07:13,740
volume that's in the paper to compute

1768
01:07:13,740 --> 01:07:16,200
the one like a structure uh a is one

1769
01:07:16,200 --> 01:07:18,180
which converges to this we think that

1770
01:07:18,180 --> 01:07:20,280
this is the the view of the world this

1771
01:07:20,280 --> 01:07:22,680
is the state of the world uh this this

1772
01:07:22,680 --> 01:07:25,319
graph uh but obviously based on you know

1773
01:07:25,319 --> 01:07:27,900
this uh sorry this is as1 so

1774
01:07:27,900 --> 01:07:30,420
um now this actually is to uh

1775
01:07:30,420 --> 01:07:33,240
oh this is your presentation actually

1776
01:07:33,240 --> 01:07:38,899
uh somehow uh we have to do a Reload

1777
01:07:40,020 --> 01:07:42,599
if not that's fine I can probably get

1778
01:07:42,599 --> 01:07:45,299
out quick reload up there I think you

1779
01:07:45,299 --> 01:07:48,680
got it you got it yeah

1780
01:07:52,799 --> 01:07:56,839
okay let's see if we can

1781
01:08:00,599 --> 01:08:03,260
okay

1782
01:08:04,460 --> 01:08:07,640
hold on

1783
01:08:13,680 --> 01:08:15,680
um

1784
01:08:16,198 --> 01:08:18,299
uh I'll understand what you see what we

1785
01:08:18,299 --> 01:08:19,859
got it's fine

1786
01:08:19,859 --> 01:08:22,738
okay well I can try again just a second

1787
01:08:22,738 --> 01:08:24,738
um

1788
01:08:31,738 --> 01:08:34,259
yeah I don't have any pending

1789
01:08:34,259 --> 01:08:37,080
no I was uploading from my mail yeah

1790
01:08:37,080 --> 01:08:38,698
Yeah but I

1791
01:08:38,698 --> 01:08:41,839
quite sure I

1792
01:08:49,859 --> 01:08:51,859
huge

1793
01:08:52,439 --> 01:08:54,559
yeah

1794
01:08:54,719 --> 01:08:57,319
yeah okay

1795
01:09:01,819 --> 01:09:05,239
slightly in that

1796
01:09:07,799 --> 01:09:08,420
um

1797
01:09:08,420 --> 01:09:11,520
is it still old one right that's that

1798
01:09:11,520 --> 01:09:13,439
looks like the last one

1799
01:09:13,439 --> 01:09:15,719
yeah it should be fat instead of floors

1800
01:09:15,719 --> 01:09:18,540
but otherwise you have a puref

1801
01:09:18,540 --> 01:09:23,939
those are F's X yeah so uh okay let me

1802
01:09:23,939 --> 01:09:26,219
is it a is it a is it a serious content

1803
01:09:26,219 --> 01:09:29,279
problem no okay yeah what's this uh

1804
01:09:29,279 --> 01:09:31,380
let's move on then and then we'll uh

1805
01:09:31,380 --> 01:09:32,759
upload the correct whatever you see an

1806
01:09:32,759 --> 01:09:34,859
app should be a p and uh latest and

1807
01:09:34,859 --> 01:09:37,319
we'll get the latest updated on the uh

1808
01:09:37,319 --> 01:09:39,420
because it works for paths basically and

1809
01:09:39,420 --> 01:09:42,420
so um instead of closes our paths so

1810
01:09:42,420 --> 01:09:43,799
um as one doesn't doesn't know anything

1811
01:09:43,799 --> 01:09:47,939
about DS2 and vice versa so if a is uh

1812
01:09:47,939 --> 01:09:50,819
and this is also swap so if a is uh two

1813
01:09:50,819 --> 01:09:52,380
tries to figure out the bottleneck

1814
01:09:52,380 --> 01:09:54,299
structure it will compute this

1815
01:09:54,299 --> 01:09:57,000
we just which is incorrect right it's

1816
01:09:57,000 --> 01:10:00,480
this uh this is not the same as this and

1817
01:10:00,480 --> 01:10:02,820
if uh a is one actually this web uh

1818
01:10:02,820 --> 01:10:04,020
computes the one like a structure

1819
01:10:04,020 --> 01:10:05,520
actually we will compute the right thing

1820
01:10:05,520 --> 01:10:07,560
actually but it's because it got it got

1821
01:10:07,560 --> 01:10:08,820
lucky

1822
01:10:08,820 --> 01:10:10,260
um because there is this property that

1823
01:10:10,260 --> 01:10:12,360
if a part is not it's bottleneck

1824
01:10:12,360 --> 01:10:14,460
if all the paths are ball making my in

1825
01:10:14,460 --> 01:10:16,560
my autonomous system then another

1826
01:10:16,560 --> 01:10:18,239
computer structure with any information

1827
01:10:18,239 --> 01:10:20,100
from anybody else that's what's

1828
01:10:20,100 --> 01:10:21,900
happening here with uh with as1 actually

1829
01:10:21,900 --> 01:10:24,600
this as one that actually uh it happens

1830
01:10:24,600 --> 01:10:27,179
that all the paths in as1 are ball

1831
01:10:27,179 --> 01:10:30,239
negative in as1 so then it actually can

1832
01:10:30,239 --> 01:10:31,699
converge but it's because it got lucky

1833
01:10:31,699 --> 01:10:37,860
uh and as2 uh actually uh the past two

1834
01:10:37,860 --> 01:10:39,540
so it's not gonna get uh it's not going

1835
01:10:39,540 --> 01:10:40,739
to get it right so obviously we need to

1836
01:10:40,739 --> 01:10:43,020
share some information to make this work

1837
01:10:43,020 --> 01:10:45,600
so we can click on next and uh the

1838
01:10:45,600 --> 01:10:48,360
proposed protocol here has these three

1839
01:10:48,360 --> 01:10:50,159
properties uh conversions which is the

1840
01:10:50,159 --> 01:10:52,800
key idea but sharing one method per path

1841
01:10:52,800 --> 01:10:55,199
is enough to ensure conversions to the

1842
01:10:55,199 --> 01:10:56,760
correct bottleneck substructures here

1843
01:10:56,760 --> 01:10:58,560
I'm introducing some terminology

1844
01:10:58,560 --> 01:11:00,780
we could be the global one who called

1845
01:11:00,780 --> 01:11:03,719
balmic structure and then each as has a

1846
01:11:03,719 --> 01:11:05,699
bottleneck substructure and the idea is

1847
01:11:05,699 --> 01:11:08,760
that we want each as to compute the ball

1848
01:11:08,760 --> 01:11:10,320
negative substrate that's correct what

1849
01:11:10,320 --> 01:11:11,640
is the correct bottom mixer structure

1850
01:11:11,640 --> 01:11:15,420
subtraction is the subset of

1851
01:11:15,420 --> 01:11:18,120
um the bone structure that corresponds

1852
01:11:18,120 --> 01:11:22,320
to to that as basically intuitively so

1853
01:11:22,320 --> 01:11:23,880
um and then this is saying that all we

1854
01:11:23,880 --> 01:11:25,980
need to do is share a path uh a path

1855
01:11:25,980 --> 01:11:28,679
metrics uh which I'll tell you uh in a

1856
01:11:28,679 --> 01:11:30,780
minute what what that is

1857
01:11:30,780 --> 01:11:32,760
um scalability focus on building the

1858
01:11:32,760 --> 01:11:34,260
path creating graph so here's another

1859
01:11:34,260 --> 01:11:36,960
thing that we describe in the draft uh

1860
01:11:36,960 --> 01:11:38,820
bomb microstructures um there are

1861
01:11:38,820 --> 01:11:39,600
different kinds of boundary

1862
01:11:39,600 --> 01:11:41,219
constructions one is what we call the

1863
01:11:41,219 --> 01:11:43,140
floor reading graph which is per flow

1864
01:11:43,140 --> 01:11:44,640
but this one which is called path

1865
01:11:44,640 --> 01:11:46,620
grading graph which is per path and

1866
01:11:46,620 --> 01:11:49,080
that's way more scalable because you may

1867
01:11:49,080 --> 01:11:50,760
have hundreds of bands as opposed to

1868
01:11:50,760 --> 01:11:52,500
millions of flows

1869
01:11:52,500 --> 01:11:54,480
um and and the transition from one to

1870
01:11:54,480 --> 01:11:55,980
the other is a straightforward actually

1871
01:11:55,980 --> 01:11:57,420
so

1872
01:11:57,420 --> 01:11:59,460
um for this we focus on pathgrading

1873
01:11:59,460 --> 01:12:00,380
graph

1874
01:12:00,380 --> 01:12:04,020
and so requires only per Path State in

1875
01:12:04,020 --> 01:12:06,960
this case not per flow and then privacy

1876
01:12:06,960 --> 01:12:09,060
this is subject to discussion I guess

1877
01:12:09,060 --> 01:12:10,980
but we think that this could be good in

1878
01:12:10,980 --> 01:12:12,000
a sense that you know we only need to

1879
01:12:12,000 --> 01:12:14,520
share one scalar one metric per path we

1880
01:12:14,520 --> 01:12:16,920
don't need to remove flow information uh

1881
01:12:16,920 --> 01:12:18,719
there's only three well netflow data or

1882
01:12:18,719 --> 01:12:21,420
or topology data obviously is a medical

1883
01:12:21,420 --> 01:12:23,880
scholar per path so hopefully this is

1884
01:12:23,880 --> 01:12:25,739
this is a good in terms of the Privacy

1885
01:12:25,739 --> 01:12:28,560
uh depending on the use case so

1886
01:12:28,560 --> 01:12:31,440
um next one then this is the the the

1887
01:12:31,440 --> 01:12:33,719
distributed protocol it's in the in the

1888
01:12:33,719 --> 01:12:36,420
second draft uh but along these are the

1889
01:12:36,420 --> 01:12:38,159
high level and I don't expect maybe to

1890
01:12:38,159 --> 01:12:39,900
understand the leaders but the intuition

1891
01:12:39,900 --> 01:12:41,400
and it's actually fairly straightforward

1892
01:12:41,400 --> 01:12:44,219
that's that's a good thing okay um so uh

1893
01:12:44,219 --> 01:12:48,239
it has a netline timer and and then and

1894
01:12:48,239 --> 01:12:50,820
a message event you know a message

1895
01:12:50,820 --> 01:12:53,760
exchange event uh the timer is running

1896
01:12:53,760 --> 01:12:56,100
periodically that's right these two

1897
01:12:56,100 --> 01:12:59,400
these two events around each as runs

1898
01:12:59,400 --> 01:13:02,820
their own instantiation but the first

1899
01:13:02,820 --> 01:13:05,520
thing we do is um some some solutions

1900
01:13:05,520 --> 01:13:08,040
that's interesting in the draft L is a

1901
01:13:08,040 --> 01:13:10,860
set of links AI is the autonomous system

1902
01:13:10,860 --> 01:13:14,760
I so this runs for each AI PL is the

1903
01:13:14,760 --> 01:13:16,620
path Ling dictionary where we call the

1904
01:13:16,620 --> 01:13:18,239
path link dictionary for every path the

1905
01:13:18,239 --> 01:13:21,179
set of Links at that path traverses C is

1906
01:13:21,179 --> 01:13:22,860
a capacity dictionary the capacity of

1907
01:13:22,860 --> 01:13:25,500
each link and PM is a path metric

1908
01:13:25,500 --> 01:13:27,719
dictionary which reveals the information

1909
01:13:27,719 --> 01:13:30,600
we received from our neighbors okay so

1910
01:13:30,600 --> 01:13:32,520
this sort of includes the global

1911
01:13:32,520 --> 01:13:34,080
information that we're collecting by

1912
01:13:34,080 --> 01:13:36,300
talking with our neighbors and this is

1913
01:13:36,300 --> 01:13:37,500
sort of like the local information that

1914
01:13:37,500 --> 01:13:38,820
we have

1915
01:13:38,820 --> 01:13:40,739
um what this does is compute bottleneck

1916
01:13:40,739 --> 01:13:42,000
sub structure which is a function that's

1917
01:13:42,000 --> 01:13:44,760
in Nexus light in the US that it tries

1918
01:13:44,760 --> 01:13:46,020
to compute the bottlenecks of structure

1919
01:13:46,020 --> 01:13:48,300
as accurately as it can based on the

1920
01:13:48,300 --> 01:13:50,219
local information that we have and this

1921
01:13:50,219 --> 01:13:51,420
mathematics that we receive from the

1922
01:13:51,420 --> 01:13:53,699
neighbors once the output of this then

1923
01:13:53,699 --> 01:13:55,500
we consolidate it into the new path

1924
01:13:55,500 --> 01:13:57,179
magic dictionary this is what we're

1925
01:13:57,179 --> 01:13:58,260
going to be sharing with our neighbors

1926
01:13:58,260 --> 01:13:59,880
and then here in the next step we

1927
01:13:59,880 --> 01:14:00,780
actually share with our Network

1928
01:14:00,780 --> 01:14:03,540
neighbors we share the output of our

1929
01:14:03,540 --> 01:14:05,640
computation into the magnetic and then

1930
01:14:05,640 --> 01:14:08,520
we shared with the neighbors for all AJ

1931
01:14:08,520 --> 01:14:10,380
and N these are the neighbors

1932
01:14:10,380 --> 01:14:12,540
um we're sharing the path we're sending

1933
01:14:12,540 --> 01:14:14,580
a pathmatic announcement message to our

1934
01:14:14,580 --> 01:14:16,679
neighbors passing our pathmatic Vector

1935
01:14:16,679 --> 01:14:18,600
dictionary

1936
01:14:18,600 --> 01:14:21,780
and then uh this is the event upon

1937
01:14:21,780 --> 01:14:23,940
receiving upon receiving a path Network

1938
01:14:23,940 --> 01:14:26,100
announcement from our neighbor we simply

1939
01:14:26,100 --> 01:14:28,140
take the minimum actually

1940
01:14:28,140 --> 01:14:29,520
um this is the notion that the ball make

1941
01:14:29,520 --> 01:14:32,159
is always the minimum uh it's this goes

1942
01:14:32,159 --> 01:14:33,659
back to Jacobson's favorite that all

1943
01:14:33,659 --> 01:14:35,880
weekend is the the single volume the the

1944
01:14:35,880 --> 01:14:37,320
most constrained link right so that's

1945
01:14:37,320 --> 01:14:38,820
that's in that Indonesia's notion but

1946
01:14:38,820 --> 01:14:40,080
this is taking into kind of Fuller

1947
01:14:40,080 --> 01:14:41,580
structure

1948
01:14:41,580 --> 01:14:43,440
um and then if we want to zoom into this

1949
01:14:43,440 --> 01:14:44,820
function complete by an extra structure

1950
01:14:44,820 --> 01:14:46,860
that's an exit slide

1951
01:14:46,860 --> 01:14:48,840
and what it does is this computable

1952
01:14:48,840 --> 01:14:51,780
mixer structure it runs this while loop

1953
01:14:51,780 --> 01:14:53,880
which invokes additive iteration the

1954
01:14:53,880 --> 01:14:56,400
compute bottleneck as structure sort of

1955
01:14:56,400 --> 01:14:58,739
uh that's again not the one that's

1956
01:14:58,739 --> 01:15:02,400
available in the paper uh and it it runs

1957
01:15:02,400 --> 01:15:05,460
multiple times until it uh reaches

1958
01:15:05,460 --> 01:15:07,739
agreement with the state that we're

1959
01:15:07,739 --> 01:15:08,880
being shared from our neighbors that's

1960
01:15:08,880 --> 01:15:11,219
intuition so we compute it completely

1961
01:15:11,219 --> 01:15:13,380
structure based on the link dictionary

1962
01:15:13,380 --> 01:15:15,719
the pampling dictionary and the capacity

1963
01:15:15,719 --> 01:15:17,340
uh

1964
01:15:17,340 --> 01:15:20,820
um factorial dictionary here we check if

1965
01:15:20,820 --> 01:15:23,400
they hear about this is the output of

1966
01:15:23,400 --> 01:15:25,440
our computation our local computation is

1967
01:15:25,440 --> 01:15:28,260
in agreement with what we've been told

1968
01:15:28,260 --> 01:15:30,659
from our neighbors then we're good we

1969
01:15:30,659 --> 01:15:33,480
break we're out if not then we need to

1970
01:15:33,480 --> 01:15:34,739
do something we just we need to add a

1971
01:15:34,739 --> 01:15:36,659
virtual link we don't know our neighbors

1972
01:15:36,659 --> 01:15:38,340
our network network we're going to model

1973
01:15:38,340 --> 01:15:39,960
that by putting a virtual link and

1974
01:15:39,960 --> 01:15:41,400
putting a constraint there that's what

1975
01:15:41,400 --> 01:15:43,500
this is writing a virtual link with a

1976
01:15:43,500 --> 01:15:45,540
capacity equal to the the path metric

1977
01:15:45,540 --> 01:15:48,360
that's provided by by the the neighbor

1978
01:15:48,360 --> 01:15:51,360
as and then we go back and it can be

1979
01:15:51,360 --> 01:15:54,000
proven as sort of the map that uh if you

1980
01:15:54,000 --> 01:15:55,140
do this over and over eventually

1981
01:15:55,140 --> 01:15:57,300
everyone will converge to the right

1982
01:15:57,300 --> 01:15:59,580
bottleneck substructure when you

1983
01:15:59,580 --> 01:16:00,900
aggregate them you get the right Global

1984
01:16:00,900 --> 01:16:03,060
modeling construction we can see with an

1985
01:16:03,060 --> 01:16:04,320
example maybe it's going to be easier to

1986
01:16:04,320 --> 01:16:05,880
understand but hopefully it does the

1987
01:16:05,880 --> 01:16:08,699
intuition about the signaling so and

1988
01:16:08,699 --> 01:16:12,000
then before putting the example uh what

1989
01:16:12,000 --> 01:16:13,380
we call the termination condition in the

1990
01:16:13,380 --> 01:16:15,060
convergence condition

1991
01:16:15,060 --> 01:16:16,920
um in the previous function you saw that

1992
01:16:16,920 --> 01:16:18,540
there was domination a break which was

1993
01:16:18,540 --> 01:16:21,179
it was a while true but there was a

1994
01:16:21,179 --> 01:16:22,560
break statement the information

1995
01:16:22,560 --> 01:16:24,960
condition is when intuitively it says

1996
01:16:24,960 --> 01:16:26,640
that when my local computation is in

1997
01:16:26,640 --> 01:16:29,659
agreement with the path metric

1998
01:16:29,659 --> 01:16:31,560
dictionary that's being shared with my

1999
01:16:31,560 --> 01:16:33,480
neighbors when we are in agreement and

2000
01:16:33,480 --> 01:16:35,699
we can terminate and in a convergence

2001
01:16:35,699 --> 01:16:37,800
condition uh

2002
01:16:37,800 --> 01:16:40,380
um and what it says is that if you run

2003
01:16:40,380 --> 01:16:42,000
this algorithm we ensure that at the end

2004
01:16:42,000 --> 01:16:43,920
everyone is in agreement all the

2005
01:16:43,920 --> 01:16:46,260
mathematics from all the AI from from

2006
01:16:46,260 --> 01:16:49,440
all the autonomous systems AI AJ follow

2007
01:16:49,440 --> 01:16:52,020
the paths are in agreement that's that's

2008
01:16:52,020 --> 01:16:54,060
guaranteed by the youngerian okay so we

2009
01:16:54,060 --> 01:16:56,100
have these two conditions

2010
01:16:56,100 --> 01:16:58,080
let's look at an example how this works

2011
01:16:58,080 --> 01:17:00,420
so back to our configuration so two

2012
01:17:00,420 --> 01:17:04,199
other systems uh we can click on next

2013
01:17:04,199 --> 01:17:06,120
this will be iteration one and again

2014
01:17:06,120 --> 01:17:08,640
this uh the latest version is going to

2015
01:17:08,640 --> 01:17:10,560
have some corrections on this but it's

2016
01:17:10,560 --> 01:17:12,719
fine um so

2017
01:17:12,719 --> 01:17:15,300
um at the first iteration

2018
01:17:15,300 --> 01:17:17,159
um autonomous system two actually gets

2019
01:17:17,159 --> 01:17:20,100
it wrong uh it's this is the path metric

2020
01:17:20,100 --> 01:17:22,980
dictionary uh that is that it's that it

2021
01:17:22,980 --> 01:17:25,380
believes is the sort of the the state of

2022
01:17:25,380 --> 01:17:27,780
the wall but it's it's wrong

2023
01:17:27,780 --> 01:17:30,480
um and then application one alternative

2024
01:17:30,480 --> 01:17:32,340
system one actually the swap actually

2025
01:17:32,340 --> 01:17:33,659
gets it right and the reason is that

2026
01:17:33,659 --> 01:17:34,920
property that I mentioned because all

2027
01:17:34,920 --> 01:17:36,659
the plans are actually born like in its

2028
01:17:36,659 --> 01:17:38,580
own domain so he actually gets over here

2029
01:17:38,580 --> 01:17:41,280
the the as actually gets it right

2030
01:17:41,280 --> 01:17:43,980
um so this one has already converged uh

2031
01:17:43,980 --> 01:17:45,960
now they exchange the paramedics so this

2032
01:17:45,960 --> 01:17:47,300
path metric

2033
01:17:47,300 --> 01:17:49,199
dictionary is going to be shared with

2034
01:17:49,199 --> 01:17:52,320
this as now with that information uh for

2035
01:17:52,320 --> 01:17:54,000
as2 it's going to take another iteration

2036
01:17:54,000 --> 01:17:56,280
so if you click on next and then in the

2037
01:17:56,280 --> 01:17:58,260
next Direction the area is going to get

2038
01:17:58,260 --> 01:18:00,659
it right okay so and the trick is

2039
01:18:00,659 --> 01:18:03,719
remember we are adding this virtual

2040
01:18:03,719 --> 01:18:05,040
um so we don't know that our neighbor

2041
01:18:05,040 --> 01:18:06,659
but we know that it's this path is

2042
01:18:06,659 --> 01:18:08,760
bottleneck this path four is bottleneck

2043
01:18:08,760 --> 01:18:11,640
somewhere else and we model that uh by

2044
01:18:11,640 --> 01:18:14,400
using a virtual node here and this path

2045
01:18:14,400 --> 01:18:16,320
six is more like someone else we we know

2046
01:18:16,320 --> 01:18:18,000
we modeled that with another virtual

2047
01:18:18,000 --> 01:18:20,159
node and then this if you look at this

2048
01:18:20,159 --> 01:18:23,159
structure this the you are decent with

2049
01:18:23,159 --> 01:18:25,020
this you get the correct button like a

2050
01:18:25,020 --> 01:18:27,480
structure so if you click on next end we

2051
01:18:27,480 --> 01:18:31,500
can also see that uh we can now check

2052
01:18:31,500 --> 01:18:33,480
the convergence condition and check that

2053
01:18:33,480 --> 01:18:35,760
all the path metrics for all the

2054
01:18:35,760 --> 01:18:37,860
pathmatic dictionaries from the two is

2055
01:18:37,860 --> 01:18:42,179
are in agreement so 1616 8.3 8.3 uh and

2056
01:18:42,179 --> 01:18:45,600
so on okay so then next and this is sort

2057
01:18:45,600 --> 01:18:47,760
of the the higher level idea that you

2058
01:18:47,760 --> 01:18:50,280
would have multiple as each one doing

2059
01:18:50,280 --> 01:18:52,140
its bottleneck substructure calculation

2060
01:18:52,140 --> 01:18:54,360
and then sharing this arithmetic

2061
01:18:54,360 --> 01:18:57,139
announcement messages

2062
01:18:58,100 --> 01:19:00,900
providing the asid and the pathmatic

2063
01:19:00,900 --> 01:19:04,199
dictionary and then ensuring that this

2064
01:19:04,199 --> 01:19:06,540
uh ethernet work stabilizer then you

2065
01:19:06,540 --> 01:19:08,280
eventually the bomb extraction everyone

2066
01:19:08,280 --> 01:19:10,080
gets gets it right

2067
01:19:10,080 --> 01:19:12,480
um and I think that's that's it and then

2068
01:19:12,480 --> 01:19:14,219
the same discussion can be open in terms

2069
01:19:14,219 --> 01:19:17,900
of potential applications or questions

2070
01:19:20,659 --> 01:19:24,799
Roland is making his way to the mic

2071
01:19:28,560 --> 01:19:29,580
um

2072
01:19:29,580 --> 01:19:32,280
I think two comments here uh one is

2073
01:19:32,280 --> 01:19:34,380
maybe I'm I'm not sure that that

2074
01:19:34,380 --> 01:19:37,980
actually the ass or providers will be

2075
01:19:37,980 --> 01:19:41,820
that candid and exposing that they have

2076
01:19:41,820 --> 01:19:44,219
a bottleneck inside there is that is

2077
01:19:44,219 --> 01:19:46,080
maybe one thing that could be a little

2078
01:19:46,080 --> 01:19:49,920
pushback for that and the other thing is

2079
01:19:49,920 --> 01:19:53,699
so let's assume that you know that paths

2080
01:19:53,699 --> 01:19:56,219
are congested then probably your

2081
01:19:56,219 --> 01:19:58,920
whatever routing decision will then be

2082
01:19:58,920 --> 01:20:02,400
based on that and we all know that if

2083
01:20:02,400 --> 01:20:04,640
you do let's say

2084
01:20:04,640 --> 01:20:08,520
routing based on Dynamic metrics like

2085
01:20:08,520 --> 01:20:11,840
this one where you have latency or

2086
01:20:11,840 --> 01:20:15,239
congestion uh that will lead typically

2087
01:20:15,239 --> 01:20:18,000
to oscillations at least in several

2088
01:20:18,000 --> 01:20:22,219
cases so have you thought about

2089
01:20:22,219 --> 01:20:25,800
what why it is not totally clear to me

2090
01:20:25,800 --> 01:20:27,659
what what you want to do with that

2091
01:20:27,659 --> 01:20:30,360
outcome that you identify what are the

2092
01:20:30,360 --> 01:20:31,739
bottleneck

2093
01:20:31,739 --> 01:20:35,159
as path so what's the reaction

2094
01:20:35,159 --> 01:20:37,199
to that

2095
01:20:37,199 --> 01:20:39,060
do you consider a system where end

2096
01:20:39,060 --> 01:20:41,640
systems are able to choose a different

2097
01:20:41,640 --> 01:20:44,719
path or

2098
01:20:45,239 --> 01:20:48,540
okay so uh on the first question

2099
01:20:48,540 --> 01:20:49,320
um

2100
01:20:49,320 --> 01:20:52,560
so actually this doesn't reveal that I

2101
01:20:52,560 --> 01:20:55,320
you can that I that this path is born

2102
01:20:55,320 --> 01:20:58,320
like at my as actually

2103
01:20:58,320 --> 01:21:00,120
um you could do you go to real if you if

2104
01:21:00,120 --> 01:21:01,800
you want to do that but you can keep

2105
01:21:01,800 --> 01:21:04,500
that privacy when it reveals is that uh

2106
01:21:04,500 --> 01:21:07,080
what the as ends up knowing is whether I

2107
01:21:07,080 --> 01:21:10,199
am the ball knuckle for this path or not

2108
01:21:10,199 --> 01:21:12,960
that for sure uh so we certainly and

2109
01:21:12,960 --> 01:21:14,400
then if I'm not the bottleneck I know

2110
01:21:14,400 --> 01:21:15,540
that's somewhere else but I don't know

2111
01:21:15,540 --> 01:21:18,239
where some other as now if you want to

2112
01:21:18,239 --> 01:21:20,580
do the SLA management and figure and you

2113
01:21:20,580 --> 01:21:22,199
could Envision an overlaying protocol

2114
01:21:22,199 --> 01:21:24,540
that then sort of output data and say

2115
01:21:24,540 --> 01:21:25,380
I'm not the bottom like I'm not

2116
01:21:25,380 --> 01:21:27,060
development eventually would find who is

2117
01:21:27,060 --> 01:21:28,679
the bottleneck but if you're not

2118
01:21:28,679 --> 01:21:30,420
interested you cannot put you may not

2119
01:21:30,420 --> 01:21:31,440
participate and you would not be

2120
01:21:31,440 --> 01:21:33,179
revealing that you are the ball negative

2121
01:21:33,179 --> 01:21:34,860
that's if that if you're not interested

2122
01:21:34,860 --> 01:21:36,960
you could but it but uh but it's only an

2123
01:21:36,960 --> 01:21:37,860
option to reveal whether the other

2124
01:21:37,860 --> 01:21:38,880
bottleneck what you get is the

2125
01:21:38,880 --> 01:21:41,040
information that this path uh is

2126
01:21:41,040 --> 01:21:43,080
actually bottleneck on my domain and if

2127
01:21:43,080 --> 01:21:44,340
not I don't know where it's bottleneck

2128
01:21:44,340 --> 01:21:46,199
and I think the second question is one

2129
01:21:46,199 --> 01:21:47,219
about

2130
01:21:47,219 --> 01:21:49,739
um uh not just qualifying these

2131
01:21:49,739 --> 01:21:52,440
relationships but also quantify them

2132
01:21:52,440 --> 01:21:54,659
um construction is not just to know

2133
01:21:54,659 --> 01:21:56,640
whether I'm bottleneck or not but to use

2134
01:21:56,640 --> 01:21:58,320
it to do traffic engineering once you

2135
01:21:58,320 --> 01:22:00,300
have the bottom like a structure now you

2136
01:22:00,300 --> 01:22:01,620
can start Computing derivatives on that

2137
01:22:01,620 --> 01:22:03,360
and figuring out if I place the flow on

2138
01:22:03,360 --> 01:22:05,159
this network

2139
01:22:05,159 --> 01:22:08,340
um what's the expected uh performance of

2140
01:22:08,340 --> 01:22:10,140
that yeah

2141
01:22:10,140 --> 01:22:13,080
okay yeah yeah so um that's that's the

2142
01:22:13,080 --> 01:22:14,520
sort of the idea that we can we want to

2143
01:22:14,520 --> 01:22:15,480
compute the one with this one like a

2144
01:22:15,480 --> 01:22:16,620
structure so that then we can do the

2145
01:22:16,620 --> 01:22:18,420
sort of the derivative analysis on top

2146
01:22:18,420 --> 01:22:20,159
based on that without knowing other

2147
01:22:20,159 --> 01:22:22,679
other people's other networks um uh

2148
01:22:22,679 --> 01:22:24,060
Ballinger structure but still being

2149
01:22:24,060 --> 01:22:27,000
practical yeah okay thanks

2150
01:22:27,000 --> 01:22:29,000
okay

2151
01:22:30,780 --> 01:22:32,820
so uh yes Prime Terminal as an

2152
01:22:32,820 --> 01:22:34,620
individual again thank you Roland for

2153
01:22:34,620 --> 01:22:35,940
actually asking half the questions I was

2154
01:22:35,940 --> 01:22:37,500
going to ask

2155
01:22:37,500 --> 01:22:40,620
um I think there's another way that we

2156
01:22:40,620 --> 01:22:43,080
can consider

2157
01:22:43,080 --> 01:22:44,940
um like there's also a scalability

2158
01:22:44,940 --> 01:22:47,100
problem here right like so you build a

2159
01:22:47,100 --> 01:22:48,679
the the the the

2160
01:22:48,679 --> 01:22:53,580
scaling of the convergence of the

2161
01:22:53,580 --> 01:22:55,620
inter-as path

2162
01:22:55,620 --> 01:22:57,420
has to do with the number of a s's in

2163
01:22:57,420 --> 01:22:58,980
the full Network right like so this is a

2164
01:22:58,980 --> 01:23:01,140
toy example that you worked us through

2165
01:23:01,140 --> 01:23:04,980
and the number of paths that or the

2166
01:23:04,980 --> 01:23:07,739
number of edges in the bottleneck graph

2167
01:23:07,739 --> 01:23:09,679
inside each as

2168
01:23:09,679 --> 01:23:12,420
and I haven't done the math because I'm

2169
01:23:12,420 --> 01:23:13,860
sitting up here at the front but it

2170
01:23:13,860 --> 01:23:15,540
feels very much like this scale's

2171
01:23:15,540 --> 01:23:18,980
extremely super linearly

2172
01:23:19,320 --> 01:23:20,820
um Let me let me try to see let's show

2173
01:23:20,820 --> 01:23:22,260
the bottleneck structure I'll just talk

2174
01:23:22,260 --> 01:23:23,940
about conversion let's talk about how it

2175
01:23:23,940 --> 01:23:26,880
actually converges so if let's go back

2176
01:23:26,880 --> 01:23:29,340
um back back

2177
01:23:29,340 --> 01:23:32,219
warmer

2178
01:23:32,219 --> 01:23:33,780
let's try to pull the the global

2179
01:23:33,780 --> 01:23:36,659
modeling structure and more and more

2180
01:23:36,659 --> 01:23:40,140
or until we get to the next here yeah

2181
01:23:40,140 --> 01:23:43,320
um this the conversions time is revealed

2182
01:23:43,320 --> 01:23:44,580
by the ball like a structure itself

2183
01:23:44,580 --> 01:23:47,460
where it works as follows so

2184
01:23:47,460 --> 01:23:49,500
um okay there are six parts here right

2185
01:23:49,500 --> 01:23:51,780
the first the first to converge will be

2186
01:23:51,780 --> 01:23:53,699
path one part three and past six will

2187
01:23:53,699 --> 01:23:55,620
converge immediately because they have

2188
01:23:55,620 --> 01:23:57,179
no dependency with any balance anybody

2189
01:23:57,179 --> 01:23:59,520
else once these three pass converts then

2190
01:23:59,520 --> 01:24:02,280
402 and flow four can converge one flow

2191
01:24:02,280 --> 01:24:05,179
of two of them flow foreign

2192
01:24:08,239 --> 01:24:10,679
so the convergent complexity is

2193
01:24:10,679 --> 01:24:12,000
basically solely dependent on the

2194
01:24:12,000 --> 01:24:13,500
bottleneck structure not on how you

2195
01:24:13,500 --> 01:24:16,260
split it up into as correct okay

2196
01:24:16,260 --> 01:24:20,940
um one of the of the tricks that we've

2197
01:24:20,940 --> 01:24:23,159
seen in other pathway or networking

2198
01:24:23,159 --> 01:24:24,480
approaches I'm thinking about selling on

2199
01:24:24,480 --> 01:24:27,659
here uh mainly is when you end up with

2200
01:24:27,659 --> 01:24:31,820
this with a substructure that is

2201
01:24:31,820 --> 01:24:34,800
approaching too complex for you know the

2202
01:24:34,800 --> 01:24:36,239
the algorithm that you're using in order

2203
01:24:36,239 --> 01:24:38,460
to figure out the route or whatever

2204
01:24:38,460 --> 01:24:40,380
um you can abstract it away right like

2205
01:24:40,380 --> 01:24:42,840
so the way that song does this is you

2206
01:24:42,840 --> 01:24:45,900
can essentially take an S and you

2207
01:24:45,900 --> 01:24:47,340
collapse it down so it looks like a

2208
01:24:47,340 --> 01:24:49,800
switch right and I'm actually wondering

2209
01:24:49,800 --> 01:24:51,179
if there are ways that you could

2210
01:24:51,179 --> 01:24:53,880
iteratively do that within an as so that

2211
01:24:53,880 --> 01:24:56,580
you get a very simplified substructure

2212
01:24:56,580 --> 01:24:59,120
so that the overall structure gets you

2213
01:24:59,120 --> 01:25:02,280
nearly an optimal result with way fewer

2214
01:25:02,280 --> 01:25:04,080
nodes yeah

2215
01:25:04,080 --> 01:25:06,659
um so then we go forward uh I wonder

2216
01:25:06,659 --> 01:25:08,760
whether that that captures it so you can

2217
01:25:08,760 --> 01:25:11,280
tell me um Ryan

2218
01:25:11,280 --> 01:25:11,880
um

2219
01:25:11,880 --> 01:25:14,940
more yeah more for forward

2220
01:25:14,940 --> 01:25:18,060
here so this is exactly I think what

2221
01:25:18,060 --> 01:25:19,620
we're doing what this is doing here in

2222
01:25:19,620 --> 01:25:23,820
that uh here uh you can see V2 and V1

2223
01:25:23,820 --> 01:25:24,840
what they're doing they're collection

2224
01:25:24,840 --> 01:25:27,900
okay into a single virtual node we don't

2225
01:25:27,900 --> 01:25:29,760
know what that is yeah it turns out that

2226
01:25:29,760 --> 01:25:32,340
V2 and V1 are Nas

2227
01:25:32,340 --> 01:25:34,140
but we don't know for us yes these are

2228
01:25:34,140 --> 01:25:36,120
two different black boxes right we know

2229
01:25:36,120 --> 01:25:38,760
the path networks that they of we know

2230
01:25:38,760 --> 01:25:39,960
they're parameters but we don't know

2231
01:25:39,960 --> 01:25:43,440
anything else right okay okay okay

2232
01:25:43,440 --> 01:25:44,880
cool thank you for walking me through

2233
01:25:44,880 --> 01:25:47,540
that okay

2234
01:25:50,460 --> 01:25:54,360
any other questions good okay thank you

2235
01:25:54,360 --> 01:25:57,300
for your mind Jordan so Finley and I

2236
01:25:57,300 --> 01:25:59,400
guess you are remote I'm getting the

2237
01:25:59,400 --> 01:26:01,730
slides

2238
01:26:01,730 --> 01:26:05,049
[Music]

2239
01:26:08,000 --> 01:26:10,920
okay can I can you hear me

2240
01:26:10,920 --> 01:26:14,699
uh yes yes we can hear you okay thank

2241
01:26:14,699 --> 01:26:15,719
you

2242
01:26:15,719 --> 01:26:18,800
okay every start I said good morning

2243
01:26:18,800 --> 01:26:21,719
respectful colleagues and experts and

2244
01:26:21,719 --> 01:26:23,820
this great honor innocent celebrity and

2245
01:26:23,820 --> 01:26:26,159
on behalf of my groups in the Deep

2246
01:26:26,159 --> 01:26:28,860
Corporation I'd like to say I would like

2247
01:26:28,860 --> 01:26:31,440
to work and the sexiness and service

2248
01:26:31,440 --> 01:26:33,780
provisioning of the network and the

2249
01:26:33,780 --> 01:26:36,960
topic is what the interviews is database

2250
01:26:36,960 --> 01:26:39,179
this is a visual service which is known

2251
01:26:39,179 --> 01:26:42,000
as PB illness the framework use cases

2252
01:26:42,000 --> 01:26:46,460
and requirements and next slide please

2253
01:26:50,000 --> 01:26:53,400
requirements in framework.prness as we

2254
01:26:53,400 --> 01:26:55,500
listed here this illustrates the

2255
01:26:55,500 --> 01:26:57,600
background information and the tablets

2256
01:26:57,600 --> 01:27:00,420
interceptions and our considerations

2257
01:27:00,420 --> 01:27:02,639
beginning with the challenges of the

2258
01:27:02,639 --> 01:27:05,159
code Network and the Gap analysis of

2259
01:27:05,159 --> 01:27:09,500
accessible issues and next slide please

2260
01:27:10,340 --> 01:27:12,900
they're the rapid developments in the

2261
01:27:12,900 --> 01:27:14,880
complete Council improvisation of cloud

2262
01:27:14,880 --> 01:27:17,760
computing and local internet that

2263
01:27:17,760 --> 01:27:19,920
becomes a popular and amazing platform

2264
01:27:19,920 --> 01:27:22,500
to various Enterprises and government

2265
01:27:22,500 --> 01:27:25,980
departments to hence data in the cases

2266
01:27:25,980 --> 01:27:28,440
so a data explosion and massive access

2267
01:27:28,440 --> 01:27:31,199
to the cloud had improved to be an

2268
01:27:31,199 --> 01:27:33,239
inevitable incarnation

2269
01:27:33,239 --> 01:27:35,820
resulting in historically accelerating

2270
01:27:35,820 --> 01:27:38,880
rates of traffic traversing system that

2271
01:27:38,880 --> 01:27:40,100
we're doing

2272
01:27:40,100 --> 01:27:43,500
so as depicted here in this figure of

2273
01:27:43,500 --> 01:27:46,380
the network domain from Fling cell to

2274
01:27:46,380 --> 01:27:49,560
equator is divided into several sections

2275
01:27:49,560 --> 01:27:52,800
and smartflowers written Focus as a

2276
01:27:52,800 --> 01:27:54,659
network infrastructure in different

2277
01:27:54,659 --> 01:27:57,659
sections may vary from one to another

2278
01:27:57,659 --> 01:28:00,659
with Google screen distinctions of

2279
01:28:00,659 --> 01:28:03,000
network capabilities

2280
01:28:03,000 --> 01:28:05,639
applications may require Diversified

2281
01:28:05,639 --> 01:28:08,699
requirements of latency templates or

2282
01:28:08,699 --> 01:28:11,580
flexible and the country has a demands

2283
01:28:11,580 --> 01:28:16,199
like the application a b c here

2284
01:28:16,199 --> 01:28:19,260
yeah and it requires high bandwidths

2285
01:28:19,260 --> 01:28:21,840
they use demand level vacancy while

2286
01:28:21,840 --> 01:28:24,719
application C requires a favorites in

2287
01:28:24,719 --> 01:28:27,900
finance and ideally traffic of

2288
01:28:27,900 --> 01:28:31,099
distinctive applications

2289
01:28:33,260 --> 01:28:36,780
just actively into pause shown here in

2290
01:28:36,780 --> 01:28:38,219
different colors

2291
01:28:38,219 --> 01:28:41,159
however in conventional networks visit

2292
01:28:41,159 --> 01:28:44,219
details including post distances and

2293
01:28:44,219 --> 01:28:46,620
reception bandwidth in a network domain

2294
01:28:46,620 --> 01:28:49,739
concealed capabilities of the network to

2295
01:28:49,739 --> 01:28:52,800
remain invisible and those differential

2296
01:28:52,800 --> 01:28:55,500
aged services are not provided

2297
01:28:55,500 --> 01:28:57,960
applications for various requirements

2298
01:28:57,960 --> 01:29:00,600
cannot be distinguished in just a

2299
01:29:00,600 --> 01:29:03,239
customer really latency sensitive

2300
01:29:03,239 --> 01:29:05,639
applications could misunderstand that

2301
01:29:05,639 --> 01:29:07,860
the fortunate of the traffic is a

2302
01:29:07,860 --> 01:29:10,260
restricted bandwidth from things to

2303
01:29:10,260 --> 01:29:12,600
cancer which is 22

2304
01:29:12,600 --> 01:29:14,699
however in fact the difference in

2305
01:29:14,699 --> 01:29:17,400
different parts through school and

2306
01:29:17,400 --> 01:29:20,639
anxiety over 200 kilometers which is

2307
01:29:20,639 --> 01:29:21,800
here

2308
01:29:21,800 --> 01:29:25,620
869 and 626.

2309
01:29:25,620 --> 01:29:29,340
this results in apparent delay and so

2310
01:29:29,340 --> 01:29:31,440
find when your marriages service can

2311
01:29:31,440 --> 01:29:34,380
hardly be provided for applications

2312
01:29:34,380 --> 01:29:37,699
and next slide please

2313
01:29:39,239 --> 01:29:42,239
and what's more another occasion of the

2314
01:29:42,239 --> 01:29:45,360
traffic from dancer to leoning due to

2315
01:29:45,360 --> 01:29:47,420
the bandwidth restrictions in

2316
01:29:47,420 --> 01:29:50,460
responsibility and probate learning

2317
01:29:50,460 --> 01:29:53,280
sections dependent of the overall course

2318
01:29:53,280 --> 01:29:55,500
along sensory and the product is

2319
01:29:55,500 --> 01:29:58,560
confined despite the reflection of

2320
01:29:58,560 --> 01:30:01,440
bandwidth going against to census

2321
01:30:01,440 --> 01:30:03,360
British 100g

2322
01:30:03,360 --> 01:30:06,540
and this sectional resources are kindly

2323
01:30:06,540 --> 01:30:09,960
wasted and overall utilization is

2324
01:30:09,960 --> 01:30:11,820
relatively low

2325
01:30:11,820 --> 01:30:14,340
this ideal conditions supposed other

2326
01:30:14,340 --> 01:30:16,739
sections could be utilized and the

2327
01:30:16,739 --> 01:30:19,679
traffic to the speed intellectually

2328
01:30:19,679 --> 01:30:23,360
and next slide is

2329
01:30:25,139 --> 01:30:28,139
to sum up conventional networks only to

2330
01:30:28,139 --> 01:30:29,820
provide clients to this course range

2331
01:30:29,820 --> 01:30:32,760
connection services and differentiate

2332
01:30:32,760 --> 01:30:34,920
the service treatment is desired under

2333
01:30:34,920 --> 01:30:36,900
current circumstances

2334
01:30:36,900 --> 01:30:39,440
the network resources are not

2335
01:30:39,440 --> 01:30:42,719
orchestratory but property right and for

2336
01:30:42,719 --> 01:30:44,460
example in China the resource

2337
01:30:44,460 --> 01:30:47,280
utilization to to be relatively low for

2338
01:30:47,280 --> 01:30:50,659
about 30 to 50

2339
01:30:50,659 --> 01:30:54,060
existing issues like S01 handles the

2340
01:30:54,060 --> 01:30:56,159
problem by monitoring the latency of

2341
01:30:56,159 --> 01:30:59,400
multiple rapid paths and Appliance of

2342
01:30:59,400 --> 01:31:02,940
dynamic multiples optimization algorithm

2343
01:31:02,940 --> 01:31:06,060
and uh however it requires traffic

2344
01:31:06,060 --> 01:31:08,760
detection techniques and accuracy and

2345
01:31:08,760 --> 01:31:12,060
immediately guaranteed simply by

2346
01:31:12,060 --> 01:31:14,159
Collective statistics

2347
01:31:14,159 --> 01:31:18,120
thus when instantaneous Jitter occurs on

2348
01:31:18,120 --> 01:31:20,400
the monitored length the current traffic

2349
01:31:20,400 --> 01:31:22,980
is usually switched over to a standard

2350
01:31:22,980 --> 01:31:26,159
required standby Palm which results in a

2351
01:31:26,159 --> 01:31:27,659
waste the furthermore was an

2352
01:31:27,659 --> 01:31:30,179
introduction of network coding schemes

2353
01:31:30,179 --> 01:31:34,940
also exerts active burden of network

2354
01:31:35,400 --> 01:31:37,679
this one is capable of configuring

2355
01:31:37,679 --> 01:31:40,020
different priorities in accordance with

2356
01:31:40,020 --> 01:31:42,480
requirements from the clients and

2357
01:31:42,480 --> 01:31:44,480
further generates and public

2358
01:31:44,480 --> 01:31:47,820
corresponding Qs policies to ensure

2359
01:31:47,820 --> 01:31:49,739
Service delivery

2360
01:31:49,739 --> 01:31:52,380
letters these sensitive topics such as

2361
01:31:52,380 --> 01:31:55,739
voice over Internet Protocol and web

2362
01:31:55,739 --> 01:31:58,679
conferencing making are configured with

2363
01:31:58,679 --> 01:32:01,679
higher priority and is further into a

2364
01:32:01,679 --> 01:32:04,199
specific part with better performance

2365
01:32:04,199 --> 01:32:07,440
while services like 12 bytops are around

2366
01:32:07,440 --> 01:32:09,540
lower priorities since they are less

2367
01:32:09,540 --> 01:32:12,780
time assisted and may even reduce and

2368
01:32:12,780 --> 01:32:15,060
blocks on network links

2369
01:32:15,060 --> 01:32:17,940
for dedicated lines usually configured

2370
01:32:17,940 --> 01:32:20,040
between data centers to interfere

2371
01:32:20,040 --> 01:32:23,219
Network qualities in another scenario it

2372
01:32:23,219 --> 01:32:26,159
is relatively postalated and the period

2373
01:32:26,159 --> 01:32:28,620
of service deployments and provisioning

2374
01:32:28,620 --> 01:32:30,659
is comparatively wrong

2375
01:32:30,659 --> 01:32:32,940
delays attacking losses and

2376
01:32:32,940 --> 01:32:35,340
interruptions also occur

2377
01:32:35,340 --> 01:32:38,100
so with the conclusive view defined

2378
01:32:38,100 --> 01:32:40,380
granulated services and net purchase

2379
01:32:40,380 --> 01:32:43,380
sources utilize data enhancements or are

2380
01:32:43,380 --> 01:32:45,179
considered required

2381
01:32:45,179 --> 01:32:48,679
and next slide please

2382
01:32:50,699 --> 01:32:53,239
yes

2383
01:32:54,120 --> 01:32:57,199
the sun is bandwidth for instance

2384
01:32:57,199 --> 01:33:00,900
Transit Network also has also been Inked

2385
01:33:00,900 --> 01:33:02,639
out with various other capabilities

2386
01:33:02,639 --> 01:33:05,639
including deterministic quality Network

2387
01:33:05,639 --> 01:33:09,060
slicing endogenous security sector which

2388
01:33:09,060 --> 01:33:11,600
can be developed as services

2389
01:33:11,600 --> 01:33:14,340
referring to the software as a service

2390
01:33:14,340 --> 01:33:17,520
Source a database based open resource

2391
01:33:17,520 --> 01:33:20,520
service framework is proposed aiming to

2392
01:33:20,520 --> 01:33:23,639
practice the concepts of laws namely

2393
01:33:23,639 --> 01:33:25,800
Network as a service

2394
01:33:25,800 --> 01:33:27,659
you've been said that you reserve

2395
01:33:27,659 --> 01:33:31,320
applications to our terminal and CPE to

2396
01:33:31,320 --> 01:33:33,780
subscribe because funding customized

2397
01:33:33,780 --> 01:33:36,860
Network Services

2398
01:33:36,960 --> 01:33:39,980
next slightly

2399
01:33:43,260 --> 01:33:46,260
as a framework of ADB owners the network

2400
01:33:46,260 --> 01:33:48,360
controller collects the running status

2401
01:33:48,360 --> 01:33:51,000
of the network and assets and network

2402
01:33:51,000 --> 01:33:54,000
functions by extracting key attributes

2403
01:33:54,000 --> 01:33:57,239
including video link lead to length

2404
01:33:57,239 --> 01:33:59,820
nodes and AP links in particular

2405
01:33:59,820 --> 01:34:02,280
information includes descriptors of

2406
01:34:02,280 --> 01:34:05,639
hackners and tailners in the radio layer

2407
01:34:05,639 --> 01:34:09,600
3 lens as it uses identifier a terminal

2408
01:34:09,600 --> 01:34:12,000
system index Etc

2409
01:34:12,000 --> 01:34:15,120
a distributed database is also

2410
01:34:15,120 --> 01:34:16,980
introduced here which is the things

2411
01:34:16,980 --> 01:34:19,580
strong consistency and a typical

2412
01:34:19,580 --> 01:34:23,639
subscribe propolis mechanism is applied

2413
01:34:23,639 --> 01:34:26,340
capabilities can be abstracted in a key

2414
01:34:26,340 --> 01:34:28,739
value skin and a standard schemat

2415
01:34:28,739 --> 01:34:31,139
template file is utilized for

2416
01:34:31,139 --> 01:34:32,580
descriptions

2417
01:34:32,580 --> 01:34:34,980
the cloud concealer or super

2418
01:34:34,980 --> 01:34:37,500
orchestrator who has a subscribe to

2419
01:34:37,500 --> 01:34:39,420
updated information of services

2420
01:34:39,420 --> 01:34:42,600
published with a watch mechanism is

2421
01:34:42,600 --> 01:34:43,739
performed

2422
01:34:43,739 --> 01:34:45,780
it enhances the efficiency of

2423
01:34:45,780 --> 01:34:48,120
information advertisement

2424
01:34:48,120 --> 01:34:49,920
now written knowledge of network

2425
01:34:49,920 --> 01:34:52,500
capabilities power calculation can be

2426
01:34:52,500 --> 01:34:54,540
performed and the services can be very

2427
01:34:54,540 --> 01:34:57,300
orchestrated and bonds with specific

2428
01:34:57,300 --> 01:34:58,860
policies

2429
01:34:58,860 --> 01:35:01,860
also with database clients routing

2430
01:35:01,860 --> 01:35:04,679
updated information plus degradation can

2431
01:35:04,679 --> 01:35:08,179
be reflected and learned

2432
01:35:08,219 --> 01:35:11,179
next slightly

2433
01:35:12,719 --> 01:35:15,900
to illustrate this excluded process we

2434
01:35:15,900 --> 01:35:18,780
hear presents a detailed instance

2435
01:35:18,780 --> 01:35:21,300
the network communicates various clouds

2436
01:35:21,300 --> 01:35:23,219
and multiple applications

2437
01:35:23,219 --> 01:35:26,100
Data Center interconnection and Cloud

2438
01:35:26,100 --> 01:35:28,500
access from various applications are for

2439
01:35:28,500 --> 01:35:30,840
example scenarios

2440
01:35:30,840 --> 01:35:33,659
and and the overall Network domain here

2441
01:35:33,659 --> 01:35:36,659
a b c and d constructs part of the

2442
01:35:36,659 --> 01:35:38,280
federal topology

2443
01:35:38,280 --> 01:35:41,340
policies identified by binding suits are

2444
01:35:41,340 --> 01:35:43,860
also assigned here called network

2445
01:35:43,860 --> 01:35:46,679
resources and capabilities are more in

2446
01:35:46,679 --> 01:35:48,900
the sub domain are accepted in the form

2447
01:35:48,900 --> 01:35:52,260
of BB link and bt-link

2448
01:35:52,260 --> 01:35:55,440
read the link and retailing constitute a

2449
01:35:55,440 --> 01:35:58,020
substitution for original links and

2450
01:35:58,020 --> 01:36:00,840
unique logical topologies are perceived

2451
01:36:00,840 --> 01:36:03,420
from the perspectives of different style

2452
01:36:03,420 --> 01:36:04,760
applications

2453
01:36:04,760 --> 01:36:07,920
here for example scene from cloud a

2454
01:36:07,920 --> 01:36:11,280
pretty length from a to d includes two

2455
01:36:11,280 --> 01:36:14,400
parts of segment list a to the draculate

2456
01:36:14,400 --> 01:36:16,320
or a to d

2457
01:36:16,320 --> 01:36:18,420
to a relay C

2458
01:36:18,420 --> 01:36:21,060
but this port is observed with only

2459
01:36:21,060 --> 01:36:23,880
single segment list by type B

2460
01:36:23,880 --> 01:36:26,280
resources like Pampers are also

2461
01:36:26,280 --> 01:36:28,920
distributed respectively for different

2462
01:36:28,920 --> 01:36:31,679
virtual links the typical instance is

2463
01:36:31,679 --> 01:36:34,620
the leader link here from A to B we're

2464
01:36:34,620 --> 01:36:36,840
doing for cloud a is allocated with

2465
01:36:36,840 --> 01:36:40,320
bandwidth for a 5G that's 45b is only

2466
01:36:40,320 --> 01:36:42,659
three two

2467
01:36:42,659 --> 01:36:45,719
a shown below logical topology may

2468
01:36:45,719 --> 01:36:48,540
present identically for different clouds

2469
01:36:48,540 --> 01:36:49,800
and applications

2470
01:36:49,800 --> 01:36:52,560
however resources are reserved

2471
01:36:52,560 --> 01:36:53,880
exclusively

2472
01:36:53,880 --> 01:36:56,900
next slide please

2473
01:36:57,840 --> 01:37:00,560
foreign

2474
01:37:05,630 --> 01:37:07,280
[Music]

2475
01:37:07,280 --> 01:37:10,380
which can be identified by local and

2476
01:37:10,380 --> 01:37:13,260
remote no disorders interface processes

2477
01:37:13,260 --> 01:37:16,020
and other parameters of capabilities

2478
01:37:16,020 --> 01:37:19,199
similarly data language represents a

2479
01:37:19,199 --> 01:37:22,520
battle tunnel and taking signature over

2480
01:37:22,520 --> 01:37:25,320
IPv6 is ethnic example typical

2481
01:37:25,320 --> 01:37:27,960
attributes include logic ID no

2482
01:37:27,960 --> 01:37:30,179
descriptors maximum resolvable link

2483
01:37:30,179 --> 01:37:33,360
bandwidths binding speed Etc

2484
01:37:33,360 --> 01:37:36,780
to facilitate our speculation and racing

2485
01:37:36,780 --> 01:37:39,600
in clouds a new log guiding is defined

2486
01:37:39,600 --> 01:37:41,760
here to identify our revealing or

2487
01:37:41,760 --> 01:37:42,960
retelling

2488
01:37:42,960 --> 01:37:45,659
The Logical IDs be globally unique in

2489
01:37:45,659 --> 01:37:48,600
the network domain as a team

2490
01:37:48,600 --> 01:37:51,600
moreover in order to make the customized

2491
01:37:51,600 --> 01:37:53,340
refinements from different prior

2492
01:37:53,340 --> 01:37:55,800
applications at the same time

2493
01:37:55,800 --> 01:37:58,199
the parent networks lead to link

2494
01:37:58,199 --> 01:38:00,960
resources in layer 2 for topology

2495
01:38:00,960 --> 01:38:03,900
resources for layer 3. maximum

2496
01:38:03,900 --> 01:38:05,460
resolvable link batteries for instance

2497
01:38:05,460 --> 01:38:08,100
is a maximum of the spherical link band

2498
01:38:08,100 --> 01:38:10,020
resources for virtual links where

2499
01:38:10,020 --> 01:38:12,199
multiple clients share

2500
01:38:12,199 --> 01:38:15,120
identical physical links to network and

2501
01:38:15,120 --> 01:38:18,080
sellers must reduce the maximum visible

2502
01:38:18,080 --> 01:38:20,760
resolvable linked bandwidths allocate to

2503
01:38:20,760 --> 01:38:23,520
every one of them exactly of the

2504
01:38:23,520 --> 01:38:25,980
original physical links in advance

2505
01:38:25,980 --> 01:38:28,800
is this the traffic can be preserved

2506
01:38:28,800 --> 01:38:31,560
from potential and possible interference

2507
01:38:31,560 --> 01:38:35,100
attributed to other clients

2508
01:38:35,100 --> 01:38:37,080
and after the abstraction the

2509
01:38:37,080 --> 01:38:39,080
information is written into the database

2510
01:38:39,080 --> 01:38:42,659
with a key value scheme and a standard

2511
01:38:42,659 --> 01:38:45,300
schemat template is applied to a check

2512
01:38:45,300 --> 01:38:47,639
license and description

2513
01:38:47,639 --> 01:38:51,179
this description the specific entities

2514
01:38:51,179 --> 01:38:53,520
and then the carbon server is able to

2515
01:38:53,520 --> 01:38:55,500
accumulate the knowledge of the running

2516
01:38:55,500 --> 01:38:57,960
abilities of the network and to further

2517
01:38:57,960 --> 01:39:01,199
break arrange and orchestrate support to

2518
01:39:01,199 --> 01:39:02,880
steal the traffic

2519
01:39:02,880 --> 01:39:05,960
next slide please

2520
01:39:07,679 --> 01:39:10,260
compared to Auto this is known as

2521
01:39:10,260 --> 01:39:12,300
application layers traffic optimization

2522
01:39:12,300 --> 01:39:14,940
with similarities and differences or

2523
01:39:14,940 --> 01:39:17,580
listed in those well and to be honest

2524
01:39:17,580 --> 01:39:19,440
the abstraction of network of

2525
01:39:19,440 --> 01:39:21,300
capabilities is designed to be more

2526
01:39:21,300 --> 01:39:23,820
exploded and diversified which leads to

2527
01:39:23,820 --> 01:39:26,520
deflated conditions of five granularity

2528
01:39:26,520 --> 01:39:27,780
services

2529
01:39:27,780 --> 01:39:30,659
and in water we have specific Auto

2530
01:39:30,659 --> 01:39:34,380
Service while in DB owners

2531
01:39:34,380 --> 01:39:37,980
uh distributed databases as the server

2532
01:39:37,980 --> 01:39:39,960
maybe almost also shares identical

2533
01:39:39,960 --> 01:39:41,940
features and advantages with auto

2534
01:39:41,940 --> 01:39:44,760
including accessibility and standardized

2535
01:39:44,760 --> 01:39:47,300
API

2536
01:39:47,639 --> 01:39:50,520
definitely Auto provides a universal and

2537
01:39:50,520 --> 01:39:53,040
normal scheme for explosive of natural

2538
01:39:53,040 --> 01:39:55,620
capabilities and our sites and

2539
01:39:55,620 --> 01:39:58,320
perceptions within the owners with focus

2540
01:39:58,320 --> 01:40:00,840
on the Rival of the network controller

2541
01:40:00,840 --> 01:40:02,760
and the specific cost calculation

2542
01:40:02,760 --> 01:40:05,940
operator to facilitate Network Services

2543
01:40:05,940 --> 01:40:07,320
occupation

2544
01:40:07,320 --> 01:40:10,320
corporate cooperates well with a filter

2545
01:40:10,320 --> 01:40:13,020
condition of the convergence of the

2546
01:40:13,020 --> 01:40:15,120
clouds and the network

2547
01:40:15,120 --> 01:40:18,139
next slide please

2548
01:40:22,980 --> 01:40:25,860
before we considerations it is easy to

2549
01:40:25,860 --> 01:40:28,560
expand more open sources beyond the

2550
01:40:28,560 --> 01:40:30,120
language Source Services different

2551
01:40:30,120 --> 01:40:33,440
interests presentation such as topology

2552
01:40:33,440 --> 01:40:37,080
is Securities and deterministic cues

2553
01:40:37,080 --> 01:40:40,260
which makes the frame rate of the owners

2554
01:40:40,260 --> 01:40:42,540
be capable of justifying future

2555
01:40:42,540 --> 01:40:44,880
requirements appearing with the change

2556
01:40:44,880 --> 01:40:46,860
of the convergence of the cloud and the

2557
01:40:46,860 --> 01:40:47,699
network

2558
01:40:47,699 --> 01:40:50,400
in England conclusion more perceptions

2559
01:40:50,400 --> 01:40:53,280
and drugs are expected in the future we

2560
01:40:53,280 --> 01:40:56,520
are looking forward to promoting and to

2561
01:40:56,520 --> 01:40:59,760
cooperating with working groups and as a

2562
01:40:59,760 --> 01:41:01,500
colleague who had originated with the

2563
01:41:01,500 --> 01:41:04,020
issue safety and the service Affinity

2564
01:41:04,020 --> 01:41:06,960
issues should also be considered in the

2565
01:41:06,960 --> 01:41:09,840
future and that's all about this today's

2566
01:41:09,840 --> 01:41:13,340
fifth station thank you all

2567
01:41:16,980 --> 01:41:19,980
questions

2568
01:41:28,139 --> 01:41:30,980
all right

2569
01:41:31,870 --> 01:41:33,000
[Music]

2570
01:41:33,000 --> 01:41:36,659
hello Sabine from Nokia uh thanks for

2571
01:41:36,659 --> 01:41:40,080
your presentation uh very interesting so

2572
01:41:40,080 --> 01:41:41,340
definitely

2573
01:41:41,340 --> 01:41:45,239
um well to mention I am contributing to

2574
01:41:45,239 --> 01:41:47,580
the auto working group

2575
01:41:47,580 --> 01:41:51,119
so definitely we do not take the next up

2576
01:41:51,119 --> 01:41:54,000
the same approach you

2577
01:41:54,000 --> 01:41:57,360
try to steer traffic at the network

2578
01:41:57,360 --> 01:42:01,739
layer while we at the auto working group

2579
01:42:01,739 --> 01:42:03,960
we try to

2580
01:42:03,960 --> 01:42:06,600
provide guidance for the application so

2581
01:42:06,600 --> 01:42:09,300
it's an off-path approach

2582
01:42:09,300 --> 01:42:11,300
to uh

2583
01:42:11,300 --> 01:42:14,600
redirect the traffic

2584
01:42:14,600 --> 01:42:19,500
I would invite you to uh look at the

2585
01:42:19,500 --> 01:42:23,119
auto work that is ongoing

2586
01:42:23,119 --> 01:42:28,080
where there are proposals to extend the

2587
01:42:28,080 --> 01:42:31,020
protocol to integrate compute

2588
01:42:31,020 --> 01:42:32,940
information

2589
01:42:32,940 --> 01:42:36,179
thanks yeah thanks

2590
01:42:36,179 --> 01:42:39,060
actually I've learned some information

2591
01:42:39,060 --> 01:42:43,040
about Auto a note concept of Auto that

2592
01:42:43,040 --> 01:42:45,480
uh this is the kind of application

2593
01:42:45,480 --> 01:42:49,920
protocol or just make endpoint selection

2594
01:42:49,920 --> 01:42:53,639
to guide the traffic about still make

2595
01:42:53,639 --> 01:42:56,699
the network domain as a black box that's

2596
01:42:56,699 --> 01:43:00,300
here maybe we want to expose some

2597
01:43:00,300 --> 01:43:04,139
capabilities of the network and to and

2598
01:43:04,139 --> 01:43:08,659
do some traffic with Direction work

2599
01:43:12,360 --> 01:43:13,380
okay

2600
01:43:13,380 --> 01:43:16,020
anyone else

2601
01:43:16,020 --> 01:43:19,619
okay so thank you

2602
01:43:19,619 --> 01:43:22,800
and this I guess concludes the session

2603
01:43:22,800 --> 01:43:25,199
so thank you very much

2604
01:43:25,199 --> 01:43:29,599
and see you in Yokohama

2605
01:43:37,080 --> 01:43:39,060
so

2606
01:43:39,060 --> 01:43:41,100
for this one

2607
01:43:41,100 --> 01:43:43,679
I think you're supposed to

2608
01:43:43,679 --> 01:43:46,219
okay

2609
01:47:49,080 --> 01:47:52,080
foreign

