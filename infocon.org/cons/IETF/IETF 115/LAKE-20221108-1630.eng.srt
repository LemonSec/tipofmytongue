1
00:00:05,839 --> 00:00:08,960
I thought

2
00:00:11,059 --> 00:00:14,280
did you switch slasher or

3
00:00:14,280 --> 00:00:17,420
switch off the side yeah

4
00:00:17,420 --> 00:00:19,680
unstable connection

5
00:00:19,680 --> 00:00:24,198
yeah I'm telling you not me

6
00:00:25,199 --> 00:00:27,439
okay

7
00:00:36,780 --> 00:00:40,579
or I guess we're at time

8
00:00:41,000 --> 00:00:45,079
oh should I open here yeah

9
00:00:45,360 --> 00:00:47,760
let's give one one more minute sure yeah

10
00:00:47,760 --> 00:00:49,260
let's give a couple of more minutes for

11
00:00:49,260 --> 00:00:51,980
people to arrive

12
00:01:08,100 --> 00:01:10,280
foreign

13
00:01:38,700 --> 00:01:41,659
foreign

14
00:01:48,619 --> 00:01:51,540
good afternoon everyone this is the lake

15
00:01:51,540 --> 00:01:54,540
working group meeting uh my name is

16
00:01:54,540 --> 00:01:57,899
militia and my co-cherry Stephen

17
00:01:57,899 --> 00:02:00,540
so as a reminder this session is being

18
00:02:00,540 --> 00:02:03,540
recorded and it is covered by note 12.

19
00:02:03,540 --> 00:02:05,159
all the contributions are covered by

20
00:02:05,159 --> 00:02:08,098
note 12 as this is an ITF meeting

21
00:02:08,098 --> 00:02:11,120
uh next slide please

22
00:02:11,120 --> 00:02:15,959
so if you haven't done so so please sign

23
00:02:15,959 --> 00:02:19,800
up sign in using the online Tool uh

24
00:02:19,800 --> 00:02:22,580
because to keep the the presence logged

25
00:02:22,580 --> 00:02:25,860
and here are some meeting steps uh for

26
00:02:25,860 --> 00:02:30,239
joining the mic queue if you uh if you

27
00:02:30,239 --> 00:02:33,680
are uh willing to speak at the mic

28
00:02:33,680 --> 00:02:36,739
uh next slide

29
00:02:36,739 --> 00:02:39,720
yes please wear masks unless you are

30
00:02:39,720 --> 00:02:41,940
actively speaking eating or drinking but

31
00:02:41,940 --> 00:02:45,000
we don't encourage you to do so

32
00:02:45,000 --> 00:02:48,360
at this time so here are some resources

33
00:02:48,360 --> 00:02:51,780
the uh for the meeting this afternoon so

34
00:02:51,780 --> 00:02:54,420
the the agenda the remote participation

35
00:02:54,420 --> 00:02:58,140
link uh we have uh two note takers I

36
00:02:58,140 --> 00:03:01,800
believe Marco and David yes thank you so

37
00:03:01,800 --> 00:03:04,019
much for taking notes uh so I guess you

38
00:03:04,019 --> 00:03:05,580
can go you guys can cover each other

39
00:03:05,580 --> 00:03:08,099
when Marco is speaking David can be

40
00:03:08,099 --> 00:03:10,860
taking notes and vice versa if David is

41
00:03:10,860 --> 00:03:12,440
speaking on the mic

42
00:03:12,440 --> 00:03:15,420
uh troublescribe we will be keeping

43
00:03:15,420 --> 00:03:17,879
track on rubber from the church side

44
00:03:17,879 --> 00:03:20,280
next slide please

45
00:03:20,280 --> 00:03:23,519
yes in terms of the agenda

46
00:03:23,519 --> 00:03:27,180
so we are in the administerial part uh

47
00:03:27,180 --> 00:03:29,700
we plan on going over the working group

48
00:03:29,700 --> 00:03:31,980
last called comments on the ad hoc

49
00:03:31,980 --> 00:03:34,200
specification domain chartered item of

50
00:03:34,200 --> 00:03:35,519
this working group

51
00:03:35,519 --> 00:03:38,819
uh after that Mark will be presenting uh

52
00:03:38,819 --> 00:03:41,819
a report from the hackathon and the

53
00:03:41,819 --> 00:03:44,459
progress of the traces draft in the

54
00:03:44,459 --> 00:03:47,700
second half of the meeting we plan on

55
00:03:47,700 --> 00:03:51,299
going over the uh Uncharted items some

56
00:03:51,299 --> 00:03:53,280
possible future work that we would like

57
00:03:53,280 --> 00:03:56,280
to discuss uh as an introduction to

58
00:03:56,280 --> 00:03:58,319
retartering Lake

59
00:03:58,319 --> 00:04:03,859
so does anyone want to bash this agenda

60
00:04:07,140 --> 00:04:09,540
I hear no

61
00:04:09,540 --> 00:04:12,140
yes

62
00:04:15,480 --> 00:04:17,459
so yeah

63
00:04:17,459 --> 00:04:20,100
I may have a difficulty running in 15

64
00:04:20,100 --> 00:04:22,079
minutes the working group last comments

65
00:04:22,079 --> 00:04:24,720
but I can take from perhaps from my 10

66
00:04:24,720 --> 00:04:27,780
minutes of the other presentation

67
00:04:27,780 --> 00:04:29,340
well yeah I mean I mean the chartered

68
00:04:29,340 --> 00:04:30,840
items will obviously get priority yeah

69
00:04:30,840 --> 00:04:32,280
okay

70
00:04:32,280 --> 00:04:33,660
all right

71
00:04:33,660 --> 00:04:35,639
that is noted

72
00:04:35,639 --> 00:04:38,160
so with that I propose we get started

73
00:04:38,160 --> 00:04:39,720
with the first agenda item this is

74
00:04:39,720 --> 00:04:41,400
working group last call comments and

75
00:04:41,400 --> 00:04:45,020
you're on the floor is yours

76
00:04:51,120 --> 00:04:53,900
thank you

77
00:04:54,300 --> 00:04:57,660
so I'm going to talk about the last

78
00:04:57,660 --> 00:04:59,699
latest version and the working group

79
00:04:59,699 --> 00:05:03,800
last call comments next slide please

80
00:05:03,919 --> 00:05:08,820
so Contrition is 17 which is a small

81
00:05:08,820 --> 00:05:11,759
update of 16.

82
00:05:11,759 --> 00:05:14,699
and that is also a fairly small update

83
00:05:14,699 --> 00:05:17,100
but some significant changes

84
00:05:17,100 --> 00:05:20,220
and to the wire form which

85
00:05:20,220 --> 00:05:23,220
um which was caused by the

86
00:05:23,220 --> 00:05:25,199
um the analysis team so we had two

87
00:05:25,199 --> 00:05:26,699
significant comments from the security

88
00:05:26,699 --> 00:05:30,600
analysis teams and they also verify the

89
00:05:30,600 --> 00:05:33,539
updates after after being made

90
00:05:33,539 --> 00:05:35,820
so we also had to update the traces

91
00:05:35,820 --> 00:05:37,680
document which Mark will talk about

92
00:05:37,680 --> 00:05:41,639
after this presentation next slide

93
00:05:41,639 --> 00:05:44,039
next slide

94
00:05:44,039 --> 00:05:46,080
so version 16 we already talked about in

95
00:05:46,080 --> 00:05:47,880
an interim meeting so I'm not going to

96
00:05:47,880 --> 00:05:48,840
go to

97
00:05:48,840 --> 00:05:51,419
too much detail I just like to mention

98
00:05:51,419 --> 00:05:54,419
the wire format changes uh the main

99
00:05:54,419 --> 00:05:55,680
changes were

100
00:05:55,680 --> 00:05:58,979
that transcript hash 2 is now used as

101
00:05:58,979 --> 00:06:02,039
salt in the key derivation for the for

102
00:06:02,039 --> 00:06:03,720
prk2e

103
00:06:03,720 --> 00:06:06,660
and the credentials are greatest I are

104
00:06:06,660 --> 00:06:09,060
now included in transform test three and

105
00:06:09,060 --> 00:06:10,020
four

106
00:06:10,020 --> 00:06:12,240
next slide

107
00:06:12,240 --> 00:06:14,460
and the following

108
00:06:14,460 --> 00:06:16,139
so these were the changes in the in the

109
00:06:16,139 --> 00:06:19,139
very last version the two updates to the

110
00:06:19,139 --> 00:06:20,940
security considerations

111
00:06:20,940 --> 00:06:24,539
one speaking about 128-bit security

112
00:06:24,539 --> 00:06:27,180
against online attacks which is very

113
00:06:27,180 --> 00:06:30,300
nice considering these are 64-bit Max by

114
00:06:30,300 --> 00:06:33,300
verifying multiple Macs and this was an

115
00:06:33,300 --> 00:06:36,600
input from from ens

116
00:06:36,600 --> 00:06:39,780
the other text is on their awareness for

117
00:06:39,780 --> 00:06:42,000
message four

118
00:06:42,000 --> 00:06:45,120
then we also moved the

119
00:06:45,120 --> 00:06:48,600
key update function to an appendix

120
00:06:48,600 --> 00:06:50,520
because that's covered by other

121
00:06:50,520 --> 00:06:53,340
functionality in in a core document so

122
00:06:53,340 --> 00:06:55,199
so we changed from recommended to

123
00:06:55,199 --> 00:06:56,220
optional

124
00:06:56,220 --> 00:06:58,680
and finally some clarifications in in

125
00:06:58,680 --> 00:07:01,740
the appendix on handling large plain

126
00:07:01,740 --> 00:07:03,960
text too

127
00:07:03,960 --> 00:07:06,560
looks like

128
00:07:06,560 --> 00:07:08,940
so here just

129
00:07:08,940 --> 00:07:12,960
just to give the picture I had to do

130
00:07:12,960 --> 00:07:14,220
this for another presentation so I

131
00:07:14,220 --> 00:07:15,900
thought I'd anyway share it here this is

132
00:07:15,900 --> 00:07:18,360
the current key schedule for for all the

133
00:07:18,360 --> 00:07:19,560
modes

134
00:07:19,560 --> 00:07:22,520
next slide please

135
00:07:23,520 --> 00:07:27,139
my connection is being recovered

136
00:07:32,699 --> 00:07:37,280
sure again yeah back there in a sec

137
00:07:38,880 --> 00:07:41,699
so yeah great

138
00:07:41,699 --> 00:07:44,180
and next slide

139
00:07:44,180 --> 00:07:47,340
so these are the people who commented on

140
00:07:47,340 --> 00:07:48,720
the uh we actually got some more

141
00:07:48,720 --> 00:07:50,220
comments after after the deadline here

142
00:07:50,220 --> 00:07:52,319
but these are the comments I've counted

143
00:07:52,319 --> 00:07:54,900
for in in this presentation

144
00:07:54,900 --> 00:07:56,940
these are implementers and security

145
00:07:56,940 --> 00:07:59,099
analysis teams

146
00:07:59,099 --> 00:08:01,139
and that's excellent we're really happy

147
00:08:01,139 --> 00:08:03,539
for all the comments we got here some

148
00:08:03,539 --> 00:08:06,740
very detailed and and

149
00:08:06,740 --> 00:08:08,819
yeah very good comments thank you very

150
00:08:08,819 --> 00:08:09,720
much

151
00:08:09,720 --> 00:08:12,419
there is also a last call comment from

152
00:08:12,419 --> 00:08:16,020
an author from John here um on the use

153
00:08:16,020 --> 00:08:18,479
of uh yeah we'll come to that later so

154
00:08:18,479 --> 00:08:20,940
so that I'll try to cover these comments

155
00:08:20,940 --> 00:08:23,520
now in in the remaining time so next

156
00:08:23,520 --> 00:08:25,440
slide please

157
00:08:25,440 --> 00:08:27,479
here are the specific issues which is

158
00:08:27,479 --> 00:08:29,400
just a subset of the comments we got

159
00:08:29,400 --> 00:08:32,640
which I think is worth bringing up here

160
00:08:32,640 --> 00:08:34,200
and there are I think there are 10

161
00:08:34,200 --> 00:08:37,399
issues so let's get started

162
00:08:37,979 --> 00:08:40,140
yeah the first comment is about session

163
00:08:40,140 --> 00:08:42,779
use of the word session key which is

164
00:08:42,779 --> 00:08:46,200
used mainly in the in the analysis part

165
00:08:46,200 --> 00:08:48,540
whereas in the rest of the document when

166
00:08:48,540 --> 00:08:50,339
we describe the actual functionality we

167
00:08:50,339 --> 00:08:53,100
use the term PRK out which is the

168
00:08:53,100 --> 00:08:54,480
session key but that wasn't really

169
00:08:54,480 --> 00:08:57,060
matched very clearly so we have a

170
00:08:57,060 --> 00:08:58,560
proposal for

171
00:08:58,560 --> 00:09:02,399
for tying these terms together in a PR

172
00:09:02,399 --> 00:09:05,540
next slide

173
00:09:06,060 --> 00:09:09,959
this comment was made by the uh the team

174
00:09:09,959 --> 00:09:13,440
Charlie Chacon and his team and he noted

175
00:09:13,440 --> 00:09:15,540
that this the tech the text in the first

176
00:09:15,540 --> 00:09:16,940
bullet here

177
00:09:16,940 --> 00:09:19,920
on how to detect changes wasn't actually

178
00:09:19,920 --> 00:09:23,160
correct for it's correct for strongly

179
00:09:23,160 --> 00:09:25,320
unforgible signatures so that you can

180
00:09:25,320 --> 00:09:27,959
you can detect changes when you verify

181
00:09:27,959 --> 00:09:29,640
the signature

182
00:09:29,640 --> 00:09:31,800
or Mac field

183
00:09:31,800 --> 00:09:33,720
but it's not correct in general but you

184
00:09:33,720 --> 00:09:36,360
can verify it at this stage but you will

185
00:09:36,360 --> 00:09:38,160
instead be able to verify it in the next

186
00:09:38,160 --> 00:09:39,420
message

187
00:09:39,420 --> 00:09:41,600
so that this needs to be corrected and

188
00:09:41,600 --> 00:09:43,920
without going to the detail of the

189
00:09:43,920 --> 00:09:44,839
different

190
00:09:44,839 --> 00:09:47,760
properties of signature schemes

191
00:09:47,760 --> 00:09:50,580
it's there is basically proposal

192
00:09:50,580 --> 00:09:54,380
updating this text which has been

193
00:09:54,380 --> 00:09:57,240
checked with with Charlene and his team

194
00:09:57,240 --> 00:10:00,600
and that's that's now PR 356. so we have

195
00:10:00,600 --> 00:10:01,980
a proposal for replacing this

196
00:10:01,980 --> 00:10:03,240
formulation with something that is

197
00:10:03,240 --> 00:10:04,620
correct

198
00:10:04,620 --> 00:10:07,880
next slide please

199
00:10:11,220 --> 00:10:13,800
here was a comment about the key update

200
00:10:13,800 --> 00:10:15,720
so

201
00:10:15,720 --> 00:10:17,279
um the key update function has been

202
00:10:17,279 --> 00:10:20,279
described and and there is a but there

203
00:10:20,279 --> 00:10:22,140
was no Associated protocol and that was

204
00:10:22,140 --> 00:10:25,320
a question or a comment and since we now

205
00:10:25,320 --> 00:10:27,120
have more or less deprecated the key

206
00:10:27,120 --> 00:10:30,300
update function in ad hoc we propose to

207
00:10:30,300 --> 00:10:32,160
not Define this in the proper call since

208
00:10:32,160 --> 00:10:34,500
we're using a mechanism from the from

209
00:10:34,500 --> 00:10:35,940
the core

210
00:10:35,940 --> 00:10:39,060
uh working group instead

211
00:10:39,060 --> 00:10:41,220
so that's a proposal

212
00:10:41,220 --> 00:10:42,540
and interrupt me if there are any

213
00:10:42,540 --> 00:10:44,220
objections otherwise we go to the next

214
00:10:44,220 --> 00:10:46,640
slide

215
00:10:49,019 --> 00:10:50,940
this is a very specific comment from

216
00:10:50,940 --> 00:10:53,579
Marco and actually from Malaysia as well

217
00:10:53,579 --> 00:10:56,339
it's about how should we encode the

218
00:10:56,339 --> 00:10:57,720
transcript hash

219
00:10:57,720 --> 00:11:00,740
two or transportation in general

220
00:11:00,740 --> 00:11:04,079
so transcript hash is is the output of a

221
00:11:04,079 --> 00:11:07,019
hash function so it's a robot string but

222
00:11:07,019 --> 00:11:09,660
we're stating in um in the document that

223
00:11:09,660 --> 00:11:11,519
the transcript hash is a c bar encoded

224
00:11:11,519 --> 00:11:13,980
byte string because that's what's used

225
00:11:13,980 --> 00:11:15,660
in in

226
00:11:15,660 --> 00:11:18,240
in various sieber objects it's either a

227
00:11:18,240 --> 00:11:19,620
seabor

228
00:11:19,620 --> 00:11:20,279
um

229
00:11:20,279 --> 00:11:22,860
stable or sequence or or struct which is

230
00:11:22,860 --> 00:11:25,500
it has a cddl Associated to it

231
00:11:25,500 --> 00:11:29,399
but as a version 16 we also use th2 in

232
00:11:29,399 --> 00:11:32,220
the salt as you remember so in this case

233
00:11:32,220 --> 00:11:34,260
it's actually

234
00:11:34,260 --> 00:11:37,860
um there is no reason a priority to use

235
00:11:37,860 --> 00:11:40,500
Seaboard here because we have the robot

236
00:11:40,500 --> 00:11:41,880
spring

237
00:11:41,880 --> 00:11:43,620
and there is nothing else that you see

238
00:11:43,620 --> 00:11:46,560
more encoded in this in this function so

239
00:11:46,560 --> 00:11:48,000
for traces

240
00:11:48,000 --> 00:11:49,800
of three

241
00:11:49,800 --> 00:11:54,779
we used the raw byte string in

242
00:11:54,779 --> 00:11:58,380
in this location so not a c bar item

243
00:11:58,380 --> 00:12:00,600
and then of course the statement that

244
00:12:00,600 --> 00:12:02,399
the transcript hash is a c board encoded

245
00:12:02,399 --> 00:12:04,440
byte string is very confusing

246
00:12:04,440 --> 00:12:07,740
so we have here two choices either we

247
00:12:07,740 --> 00:12:09,899
keep the test vectors and this

248
00:12:09,899 --> 00:12:12,720
distinction and remove this sentence

249
00:12:12,720 --> 00:12:14,880
saying

250
00:12:14,880 --> 00:12:17,579
when that the transcriptase is a Seaborn

251
00:12:17,579 --> 00:12:18,660
coded bytescreen and you can understand

252
00:12:18,660 --> 00:12:21,540
from the context when it's either or we

253
00:12:21,540 --> 00:12:25,079
keep this statement about being a seabo

254
00:12:25,079 --> 00:12:28,320
encoded byte string and in that case we

255
00:12:28,320 --> 00:12:31,920
we have to make new test vectors

256
00:12:31,920 --> 00:12:34,500
so is there anyone that has an opinion

257
00:12:34,500 --> 00:12:36,120
here we already have nothing remarkable

258
00:12:36,120 --> 00:12:39,980
but you may want to restate that

259
00:12:42,839 --> 00:12:44,940
yeah Marco I prefer the first

260
00:12:44,940 --> 00:12:46,440
alternative you mentioned of course

261
00:12:46,440 --> 00:12:48,600
removing the text and keep the actual

262
00:12:48,600 --> 00:12:50,700
value used as is also in the interest of

263
00:12:50,700 --> 00:12:53,100
traces and implementations

264
00:12:53,100 --> 00:12:55,740
so Marco spent four hours doing the test

265
00:12:55,740 --> 00:12:58,139
vectors he doesn't want to do it again

266
00:12:58,139 --> 00:13:00,240
obviously any other comments here

267
00:13:00,240 --> 00:13:03,360
so we have John in the queue

268
00:13:03,360 --> 00:13:06,000
yeah I fully agree with Marco don't

269
00:13:06,000 --> 00:13:08,100
touch the test vectors yes adopt the

270
00:13:08,100 --> 00:13:10,139
specification to agree with the test

271
00:13:10,139 --> 00:13:12,680
factors

272
00:13:14,660 --> 00:13:17,399
David speaking uh I have exactly the

273
00:13:17,399 --> 00:13:19,620
same opinion so the fact that this is

274
00:13:19,620 --> 00:13:22,380
sibo encode string is uh

275
00:13:22,380 --> 00:13:25,800
is obvious one you create your your

276
00:13:25,800 --> 00:13:27,720
support when your C board and got your

277
00:13:27,720 --> 00:13:29,639
packets

278
00:13:29,639 --> 00:13:31,079
thank you

279
00:13:31,079 --> 00:13:34,160
okay so it seems we have consensus to

280
00:13:34,160 --> 00:13:37,680
use the raw byte string but let's please

281
00:13:37,680 --> 00:13:40,440
uh explicitly specify and in the

282
00:13:40,440 --> 00:13:41,940
instances where where it should be

283
00:13:41,940 --> 00:13:44,519
cboard wrapped that that it should be

284
00:13:44,519 --> 00:13:48,060
done so please make an action of that

285
00:13:48,060 --> 00:13:52,518
yes let's note that in the action items

286
00:13:52,920 --> 00:13:54,240
okay

287
00:13:54,240 --> 00:13:59,040
and for sorry going back th3 uh just the

288
00:13:59,040 --> 00:14:00,300
note there

289
00:14:00,300 --> 00:14:02,519
this as far as understand history is

290
00:14:02,519 --> 00:14:04,680
only used I didn't check this sort of I

291
00:14:04,680 --> 00:14:06,360
think the history is only used in in the

292
00:14:06,360 --> 00:14:10,860
seabor objects so so we

293
00:14:10,860 --> 00:14:13,740
we don't need to be explicit and the

294
00:14:13,740 --> 00:14:16,380
question is then should we keep this

295
00:14:16,380 --> 00:14:19,620
formulation the transcript hash th2 and

296
00:14:19,620 --> 00:14:21,260
the transportation

297
00:14:21,260 --> 00:14:24,600
or should we take that out in all

298
00:14:24,600 --> 00:14:27,180
I suppose we take that out in all places

299
00:14:27,180 --> 00:14:29,700
any any disagreement with that we remove

300
00:14:29,700 --> 00:14:30,720
this

301
00:14:30,720 --> 00:14:32,839
we removed the statement about

302
00:14:32,839 --> 00:14:35,519
transcriptase being a Seaborn coded byte

303
00:14:35,519 --> 00:14:36,600
stream because it's obvious from the

304
00:14:36,600 --> 00:14:37,500
context

305
00:14:37,500 --> 00:14:38,700
or

306
00:14:38,700 --> 00:14:40,620
did you it was that contradicting what

307
00:14:40,620 --> 00:14:42,720
you were saying no that that is in

308
00:14:42,720 --> 00:14:44,040
agreement with what I was saying

309
00:14:44,040 --> 00:14:45,899
actually because this is the sentences

310
00:14:45,899 --> 00:14:48,060
is what introduced confusion when I was

311
00:14:48,060 --> 00:14:50,040
implementing this draft so this is my

312
00:14:50,040 --> 00:14:51,380
point of view

313
00:14:51,380 --> 00:14:54,300
so that would be my third head of

314
00:14:54,300 --> 00:14:58,399
opinion I don't know if anyone else has

315
00:14:58,440 --> 00:15:00,779
comments

316
00:15:00,779 --> 00:15:03,060
if not I propose we remove the sentence

317
00:15:03,060 --> 00:15:05,300
and

318
00:15:05,839 --> 00:15:09,500
thank you that's like

319
00:15:10,260 --> 00:15:12,540
so here is another comment which has

320
00:15:12,540 --> 00:15:14,639
been actually this is the second time we

321
00:15:14,639 --> 00:15:16,740
have the comment uh so we need to think

322
00:15:16,740 --> 00:15:18,120
a little bit carefully if we really

323
00:15:18,120 --> 00:15:20,820
should this disregard it so Malaysia

324
00:15:20,820 --> 00:15:23,339
again uh this was a while we had the

325
00:15:23,339 --> 00:15:25,980
previous time uh asked why don't we have

326
00:15:25,980 --> 00:15:28,260
a state machine for

327
00:15:28,260 --> 00:15:31,139
for describing uh airdog and he was

328
00:15:31,139 --> 00:15:34,079
referencing TLS

329
00:15:34,079 --> 00:15:35,399
and

330
00:15:35,399 --> 00:15:38,100
as John is flying here that adult

331
00:15:38,100 --> 00:15:39,540
doesn't really have the kind of states

332
00:15:39,540 --> 00:15:42,360
that TLS 103 has but he's not against

333
00:15:42,360 --> 00:15:43,800
having a figure

334
00:15:43,800 --> 00:15:46,320
so our proposal uh the author team

335
00:15:46,320 --> 00:15:48,420
proposed that

336
00:15:48,420 --> 00:15:51,000
um yeah we should sketch an appendix and

337
00:15:51,000 --> 00:15:52,800
see how this figure looks like and then

338
00:15:52,800 --> 00:15:55,380
we can decide if that's if that is

339
00:15:55,380 --> 00:15:56,579
useful or not

340
00:15:56,579 --> 00:16:00,420
and we'd like to have volunteers here or

341
00:16:00,420 --> 00:16:03,600
at least some ideas of how this would

342
00:16:03,600 --> 00:16:06,180
look like because we can't map directly

343
00:16:06,180 --> 00:16:11,639
from from appendix a in RFC 8446

344
00:16:11,639 --> 00:16:13,320
and if the rest of the proposals then

345
00:16:13,320 --> 00:16:14,579
the authors will do it we'll do it

346
00:16:14,579 --> 00:16:16,500
basically but I'm happy to do or yeah

347
00:16:16,500 --> 00:16:19,079
any inputs here would be would be very

348
00:16:19,079 --> 00:16:20,459
good

349
00:16:20,459 --> 00:16:22,740
had anyone given it more thought on how

350
00:16:22,740 --> 00:16:24,660
it would look like or just having a

351
00:16:24,660 --> 00:16:26,940
state machine would be nice uh so yes I

352
00:16:26,940 --> 00:16:29,160
had to implement one for the for my

353
00:16:29,160 --> 00:16:30,839
implementation so I'm happy to provide

354
00:16:30,839 --> 00:16:32,459
feedback but we should also run this

355
00:16:32,459 --> 00:16:35,160
against the security uh security guys

356
00:16:35,160 --> 00:16:37,019
who did the reviews because they had

357
00:16:37,019 --> 00:16:40,860
their own models as well so we should be

358
00:16:40,860 --> 00:16:42,300
a team effort but I am happy to

359
00:16:42,300 --> 00:16:43,860
volunteer to provide some feedback on

360
00:16:43,860 --> 00:16:46,019
this let's know this in as in action

361
00:16:46,019 --> 00:16:48,420
items for for myself

362
00:16:48,420 --> 00:16:50,339
so just a question

363
00:16:50,339 --> 00:16:52,259
um so how much how much effort is this

364
00:16:52,259 --> 00:16:54,120
worth if it's if this was going to delay

365
00:16:54,120 --> 00:16:55,440
Us by three months it's probably too

366
00:16:55,440 --> 00:16:57,180
much effort right if it's a couple of

367
00:16:57,180 --> 00:16:59,160
weeks it's fine

368
00:16:59,160 --> 00:17:00,959
should be straight I mean the

369
00:17:00,959 --> 00:17:02,639
discussions that we were having it's

370
00:17:02,639 --> 00:17:05,280
except for the negotiation part of the

371
00:17:05,280 --> 00:17:06,900
crypto Street it should be

372
00:17:06,900 --> 00:17:10,260
straightforward so I don't think it will

373
00:17:10,260 --> 00:17:11,819
delay us I think it should be a matter

374
00:17:11,819 --> 00:17:15,199
of days not weeks

375
00:17:15,319 --> 00:17:17,760
I think we can make it in a couple of

376
00:17:17,760 --> 00:17:19,500
weeks okay

377
00:17:19,500 --> 00:17:23,000
so we have it David

378
00:17:24,959 --> 00:17:27,419
's speaking uh I think maybe you're a

379
00:17:27,419 --> 00:17:30,240
bit optimistic because State machine are

380
00:17:30,240 --> 00:17:33,360
like pseudocode and usually implementers

381
00:17:33,360 --> 00:17:35,340
don't read the text and just look at the

382
00:17:35,340 --> 00:17:37,799
pictures and if your step machine is not

383
00:17:37,799 --> 00:17:39,780
perfectly aligned with the specification

384
00:17:39,780 --> 00:17:42,480
it may cause problems

385
00:17:42,480 --> 00:17:44,760
so it will need to be

386
00:17:44,760 --> 00:17:46,440
proof with the

387
00:17:46,440 --> 00:17:49,559
to make sure it's okay perfect okay

388
00:17:49,559 --> 00:17:53,760
that's that's our Point yes that so can

389
00:17:53,760 --> 00:17:55,799
we can we decide on that we actually do

390
00:17:55,799 --> 00:17:57,480
you like this proposed here that we

391
00:17:57,480 --> 00:17:59,460
sketch an appendix and then we decide if

392
00:17:59,460 --> 00:18:03,140
we want to pursue it or or if we want to

393
00:18:03,140 --> 00:18:07,020
rely on the on the text instead

394
00:18:07,020 --> 00:18:09,900
is that is that a good way forward sure

395
00:18:09,900 --> 00:18:12,600
yeah so so how about if you're if you're

396
00:18:12,600 --> 00:18:14,100
happy to do it if you if you kind of

397
00:18:14,100 --> 00:18:16,140
just create a little fragment of texts

398
00:18:16,140 --> 00:18:18,419
send them out to the list

399
00:18:18,419 --> 00:18:21,660
and if it's all perfect we whack it

400
00:18:21,660 --> 00:18:23,520
straight in if it leads to a huge

401
00:18:23,520 --> 00:18:26,220
discussion we'll check it out

402
00:18:26,220 --> 00:18:29,780
that's important yeah sounds good

403
00:18:31,320 --> 00:18:34,080
let me go to the next slide how am I

404
00:18:34,080 --> 00:18:38,240
doing time wise you're doing good okay

405
00:18:38,539 --> 00:18:41,160
so there

406
00:18:41,160 --> 00:18:43,260
one of one

407
00:18:43,260 --> 00:18:45,000
question about processing I think there

408
00:18:45,000 --> 00:18:47,340
is another one coming up so this is the

409
00:18:47,340 --> 00:18:50,400
particular question about handling EAD

410
00:18:50,400 --> 00:18:52,320
errors

411
00:18:52,320 --> 00:18:54,840
so we'll talk more about the uh the

412
00:18:54,840 --> 00:18:56,700
extent the external authorization data

413
00:18:56,700 --> 00:18:59,160
in the later presentation

414
00:18:59,160 --> 00:19:03,299
but the ad processing is this disjoint

415
00:19:03,299 --> 00:19:06,600
from from ad hoc so the question from

416
00:19:06,600 --> 00:19:09,240
Marco in this case was how do I apply

417
00:19:09,240 --> 00:19:11,340
the general rule here

418
00:19:11,340 --> 00:19:13,679
uh if an um

419
00:19:13,679 --> 00:19:17,340
if you have a an EAD item and you have a

420
00:19:17,340 --> 00:19:19,740
failure in that when you process that

421
00:19:19,740 --> 00:19:22,200
this doesn't mean that ad hoc is going

422
00:19:22,200 --> 00:19:25,820
to send an error message

423
00:19:25,860 --> 00:19:29,820
and the the general rule as stated at

424
00:19:29,820 --> 00:19:32,360
the top there uh

425
00:19:32,360 --> 00:19:34,980
is that if any processing fails

426
00:19:34,980 --> 00:19:37,440
responder must send a network message

427
00:19:37,440 --> 00:19:38,820
back

428
00:19:38,820 --> 00:19:40,320
but then we also have a security

429
00:19:40,320 --> 00:19:44,160
considerations Section 8 7 stating

430
00:19:44,160 --> 00:19:47,340
specific conditions where

431
00:19:47,340 --> 00:19:49,440
for example in our service reasons when

432
00:19:49,440 --> 00:19:52,320
you would not send an error back

433
00:19:52,320 --> 00:19:54,059
so that's already a little bit leeway

434
00:19:54,059 --> 00:19:57,240
for exactly when you need to send an

435
00:19:57,240 --> 00:19:58,799
error message

436
00:19:58,799 --> 00:20:01,200
but apart from that we think that we

437
00:20:01,200 --> 00:20:02,880
should just clarify that it's the EAD

438
00:20:02,880 --> 00:20:05,039
specification that he finds when you're

439
00:20:05,039 --> 00:20:07,440
sending and what you're sending and then

440
00:20:07,440 --> 00:20:09,780
ad hoc is adapting to that that's our

441
00:20:09,780 --> 00:20:11,100
proposal

442
00:20:11,100 --> 00:20:15,199
would that make sense to you Marco

443
00:20:19,940 --> 00:20:22,440
yes uh makes sense to have the

444
00:20:22,440 --> 00:20:24,299
specification defined in the ID defining

445
00:20:24,299 --> 00:20:26,280
relative and the error message or not

446
00:20:26,280 --> 00:20:28,380
exactly but then it's also better to

447
00:20:28,380 --> 00:20:30,900
clarify the general rule then to exclude

448
00:20:30,900 --> 00:20:33,360
from that any processing specifically

449
00:20:33,360 --> 00:20:36,360
the processing of the idea items right

450
00:20:36,360 --> 00:20:39,539
right yes so does processing also cover

451
00:20:39,539 --> 00:20:41,520
actually that's yes the answer is yes

452
00:20:41,520 --> 00:20:44,840
okay so that should be clarified

453
00:20:47,280 --> 00:20:50,690
okay any other comments or views on that

454
00:20:50,690 --> 00:20:52,500
[Music]

455
00:20:52,500 --> 00:20:53,810
okay next

456
00:20:53,810 --> 00:20:55,700
[Music]

457
00:20:55,700 --> 00:20:58,620
so here's another very specific comment

458
00:20:58,620 --> 00:21:01,320
from Marco

459
00:21:01,320 --> 00:21:02,880
um this is about connection identifiers

460
00:21:02,880 --> 00:21:05,760
which we talked a lot about previously

461
00:21:05,760 --> 00:21:09,179
um they are essentially three bullets at

462
00:21:09,179 --> 00:21:11,280
the top is defining how connection

463
00:21:11,280 --> 00:21:16,020
identifiers are encoded they are they

464
00:21:16,020 --> 00:21:18,720
are byte screens no bite strings and

465
00:21:18,720 --> 00:21:20,640
typically encoded as Seymour byte

466
00:21:20,640 --> 00:21:22,559
strings except in the case when they

467
00:21:22,559 --> 00:21:23,760
happen to

468
00:21:23,760 --> 00:21:26,220
be the core encoding over one byte

469
00:21:26,220 --> 00:21:28,320
integer

470
00:21:28,320 --> 00:21:30,360
one byte board encoding of an integer

471
00:21:30,360 --> 00:21:32,880
and that's in that case it's it's just

472
00:21:32,880 --> 00:21:35,940
left it's basically represented as that

473
00:21:35,940 --> 00:21:38,700
as that data string

474
00:21:38,700 --> 00:21:42,120
so the current text is speaking is is

475
00:21:42,120 --> 00:21:43,679
formula as you see the old and the new

476
00:21:43,679 --> 00:21:45,960
here the current text is using Seaboard

477
00:21:45,960 --> 00:21:48,480
diagnostic notation to express this

478
00:21:48,480 --> 00:21:50,940
and and Mark was proposing that we

479
00:21:50,940 --> 00:21:52,679
should actually not use seabo diagnostic

480
00:21:52,679 --> 00:21:55,860
notation because we are talking about an

481
00:21:55,860 --> 00:21:58,860
object which is a robot string so that

482
00:21:58,860 --> 00:22:01,320
means that instead of

483
00:22:01,320 --> 00:22:04,860
H 21 we should use

484
00:22:04,860 --> 00:22:08,760
0x 21.

485
00:22:08,820 --> 00:22:11,039
and I think that that makes sense so and

486
00:22:11,039 --> 00:22:12,780
these are two examples and there are

487
00:22:12,780 --> 00:22:15,179
other other examples as well

488
00:22:15,179 --> 00:22:17,640
if this makes things clearer then let's

489
00:22:17,640 --> 00:22:19,140
do it

490
00:22:19,140 --> 00:22:22,880
anyone objecting

491
00:22:25,740 --> 00:22:29,520
no no I hear none so I propose we do

492
00:22:29,520 --> 00:22:31,140
this yeah

493
00:22:31,140 --> 00:22:33,680
okay next please

494
00:22:33,680 --> 00:22:35,280
[Music]

495
00:22:35,280 --> 00:22:37,620
uh we had two comments about reference

496
00:22:37,620 --> 00:22:39,900
to the security analysis

497
00:22:39,900 --> 00:22:42,000
and the current the only thing we we the

498
00:22:42,000 --> 00:22:43,440
only reference we make today is the

499
00:22:43,440 --> 00:22:45,539
sentence in the first bullet

500
00:22:45,539 --> 00:22:49,260
which is basically listing two analysis

501
00:22:49,260 --> 00:22:51,419
made previously

502
00:22:51,419 --> 00:22:54,120
and now we have three more analysis that

503
00:22:54,120 --> 00:22:57,900
is in in where there is the analysis is

504
00:22:57,900 --> 00:23:00,299
made but there is no nothing to

505
00:23:00,299 --> 00:23:02,880
reference I mean there is preprints or

506
00:23:02,880 --> 00:23:05,460
um or or they are not even available we

507
00:23:05,460 --> 00:23:08,100
just know that the analysis is made

508
00:23:08,100 --> 00:23:10,860
and in that case we will definitely need

509
00:23:10,860 --> 00:23:14,220
to update this sentence but the question

510
00:23:14,220 --> 00:23:16,740
is if we should do more so if you

511
00:23:16,740 --> 00:23:20,340
compare with with DLS appendix a there

512
00:23:20,340 --> 00:23:23,760
is a more or less a security properties

513
00:23:23,760 --> 00:23:26,100
listed and

514
00:23:26,100 --> 00:23:29,100
um reference is made directly to two

515
00:23:29,100 --> 00:23:33,000
different analysis uh Publications

516
00:23:33,000 --> 00:23:35,340
which is of course a larger effort to

517
00:23:35,340 --> 00:23:37,620
make and we have already a security

518
00:23:37,620 --> 00:23:40,679
document which is listing the properties

519
00:23:40,679 --> 00:23:43,380
and uh yeah there might be overlaps as

520
00:23:43,380 --> 00:23:45,120
well and so I'm not really sure how to

521
00:23:45,120 --> 00:23:47,640
handle this the simplest way is just to

522
00:23:47,640 --> 00:23:49,799
add the references and and

523
00:23:49,799 --> 00:23:53,760
then be done but more ambitious

524
00:23:53,760 --> 00:23:56,159
setting here is to try to pinpoint

525
00:23:56,159 --> 00:23:58,140
exactly what each

526
00:23:58,140 --> 00:24:01,679
uh analysis is contributing to to the

527
00:24:01,679 --> 00:24:03,240
document

528
00:24:03,240 --> 00:24:06,659
so I I'm open for for input here and in

529
00:24:06,659 --> 00:24:07,980
particular if someone is interested in

530
00:24:07,980 --> 00:24:10,520
writing this

531
00:24:16,620 --> 00:24:18,539
so I guess I guess the sensible default

532
00:24:18,539 --> 00:24:20,580
is just a reference

533
00:24:20,580 --> 00:24:22,860
yeah and add to this list yeah and in

534
00:24:22,860 --> 00:24:23,940
terms of updating references and

535
00:24:23,940 --> 00:24:25,860
preprints that you can worry about that

536
00:24:25,860 --> 00:24:27,900
in the RC editor field stage right so we

537
00:24:27,900 --> 00:24:29,580
could put in these references for now

538
00:24:29,580 --> 00:24:31,919
and and then we can they get updated

539
00:24:31,919 --> 00:24:34,620
later update them later yes

540
00:24:34,620 --> 00:24:38,400
so let's start there and uh

541
00:24:38,400 --> 00:24:40,380
unless there are other opinions then

542
00:24:40,380 --> 00:24:42,120
we'll go for that

543
00:24:42,120 --> 00:24:43,980
looks like nobody's in the queue so I

544
00:24:43,980 --> 00:24:46,440
guess yeah unless somebody could provide

545
00:24:46,440 --> 00:24:48,299
some text in the in the very near future

546
00:24:48,299 --> 00:24:49,440
then

547
00:24:49,440 --> 00:24:52,320
just the references I guess

548
00:24:52,320 --> 00:24:54,918
okay thank you

549
00:24:59,340 --> 00:25:01,860
and this is actually John's point I

550
00:25:01,860 --> 00:25:02,940
don't know John if you want to take it

551
00:25:02,940 --> 00:25:05,840
or if I should do it

552
00:25:06,860 --> 00:25:11,940
I can take it so this was just pointing

553
00:25:11,940 --> 00:25:15,000
out that this was an option missed when

554
00:25:15,000 --> 00:25:17,220
this was discussed it has been discussed

555
00:25:17,220 --> 00:25:19,100
several points in the

556
00:25:19,100 --> 00:25:24,779
before uh but so when we discussed using

557
00:25:24,779 --> 00:25:27,000
for example AES

558
00:25:27,000 --> 00:25:31,679
CTR we discussed either using asttr or

559
00:25:31,679 --> 00:25:35,880
using CCM with a plain text as an input

560
00:25:35,880 --> 00:25:39,260
and then do remove the tag

561
00:25:39,260 --> 00:25:43,740
but the easy way to do this is to do

562
00:25:43,740 --> 00:25:46,260
like today and derive a key stream so

563
00:25:46,260 --> 00:25:49,980
you have you do encrypt with your aadm

564
00:25:49,980 --> 00:25:52,919
only zeros and then you swore the

565
00:25:52,919 --> 00:25:54,360
beginning of that

566
00:25:54,360 --> 00:25:57,840
the key stream or ciphertext with the

567
00:25:57,840 --> 00:26:00,179
with the plain text

568
00:26:00,179 --> 00:26:01,740
but

569
00:26:01,740 --> 00:26:05,220
I don't really think myself that we

570
00:26:05,220 --> 00:26:09,120
should do this but yeah for the to make

571
00:26:09,120 --> 00:26:11,159
an issue to have it that we have

572
00:26:11,159 --> 00:26:13,760
discussed it

573
00:26:15,480 --> 00:26:18,299
so a clarifying question John or would

574
00:26:18,299 --> 00:26:21,480
it during this change uh affect the

575
00:26:21,480 --> 00:26:23,820
security analysis being on that that are

576
00:26:23,820 --> 00:26:25,620
already done

577
00:26:25,620 --> 00:26:28,799
I don't think so no

578
00:26:28,799 --> 00:26:31,860
it would make it things a little bit

579
00:26:31,860 --> 00:26:34,200
more complicated you would need to

580
00:26:34,200 --> 00:26:35,340
derive

581
00:26:35,340 --> 00:26:40,500
derive keys but uh

582
00:26:40,500 --> 00:26:44,159
you would derive keys the only benefit I

583
00:26:44,159 --> 00:26:48,600
can see is that it would make us nist

584
00:26:48,600 --> 00:26:51,000
comply and this has some role that you

585
00:26:51,000 --> 00:26:53,100
cannot use your

586
00:26:53,100 --> 00:26:57,260
key derivation functions to derive like

587
00:26:57,260 --> 00:27:00,900
other random data that has been

588
00:27:00,900 --> 00:27:03,600
he criticized a lot but by for example

589
00:27:03,600 --> 00:27:05,159
crab joke

590
00:27:05,159 --> 00:27:06,020
um

591
00:27:06,020 --> 00:27:09,419
if this is not secure then then the

592
00:27:09,419 --> 00:27:12,360
whole kdf construction is is completely

593
00:27:12,360 --> 00:27:16,150
broken so I I don't yeah

594
00:27:16,150 --> 00:27:16,440
[Music]

595
00:27:16,440 --> 00:27:17,659
um

596
00:27:17,659 --> 00:27:20,640
maybe you would have to rerun formal

597
00:27:20,640 --> 00:27:23,400
verification I don't know but the output

598
00:27:23,400 --> 00:27:26,279
would definitely be that it's okay but

599
00:27:26,279 --> 00:27:26,290
um

600
00:27:26,290 --> 00:27:28,380
[Music]

601
00:27:28,380 --> 00:27:32,120
yeah but uh

602
00:27:33,480 --> 00:27:34,559
yeah

603
00:27:34,559 --> 00:27:37,020
so can you just clarify the change it's

604
00:27:37,020 --> 00:27:39,980
not it's not clear to me

605
00:27:40,520 --> 00:27:44,820
the change would be to derive key stream

606
00:27:44,820 --> 00:27:50,640
to from an aad instead of from the uh

607
00:27:50,640 --> 00:27:54,980
adult kdf H Mac

608
00:27:56,900 --> 00:27:58,559
another

609
00:27:58,559 --> 00:28:01,620
benefit for this would be that you you

610
00:28:01,620 --> 00:28:05,178
would get rid of the appendix

611
00:28:05,220 --> 00:28:05,880
um

612
00:28:05,880 --> 00:28:09,900
with large streams

613
00:28:10,860 --> 00:28:13,679
so my take on this is if we are going to

614
00:28:13,679 --> 00:28:15,120
do this that we should involve the

615
00:28:15,120 --> 00:28:17,159
security analysis teams again

616
00:28:17,159 --> 00:28:20,460
so this would be my

617
00:28:20,460 --> 00:28:22,500
at least Consulting one of them and

618
00:28:22,500 --> 00:28:27,440
seeing how it impacts the the analysis

619
00:28:27,900 --> 00:28:30,480
I don't think John is proposing it to us

620
00:28:30,480 --> 00:28:33,120
to do it so if no one is doing that then

621
00:28:33,120 --> 00:28:36,059
we should first note it okay as I said

622
00:28:36,059 --> 00:28:38,340
my proposal is that we don't do any

623
00:28:38,340 --> 00:28:42,539
changes this late stage okay okay so the

624
00:28:42,539 --> 00:28:44,520
proposal is not to do the change and

625
00:28:44,520 --> 00:28:46,320
keep things as is as if they were

626
00:28:46,320 --> 00:28:47,820
formally analyzed

627
00:28:47,820 --> 00:28:51,299
okay do we have any opinions on This Way

628
00:28:51,299 --> 00:28:53,600
Forward

629
00:28:57,720 --> 00:28:59,640
okay I hear none so I propose we don't

630
00:28:59,640 --> 00:29:02,640
do this we skip it we document it as and

631
00:29:02,640 --> 00:29:04,620
we we go forward

632
00:29:04,620 --> 00:29:06,480
as is

633
00:29:06,480 --> 00:29:10,820
okay then I think it's the last line so

634
00:29:12,240 --> 00:29:14,460
so next steps would be to address these

635
00:29:14,460 --> 00:29:16,320
comments and submit an updated version

636
00:29:16,320 --> 00:29:18,299
of ad hoc and

637
00:29:18,299 --> 00:29:20,340
considering the decision to not change

638
00:29:20,340 --> 00:29:22,980
the structures we may may be saved from

639
00:29:22,980 --> 00:29:26,240
updating traces at the moment

640
00:29:29,100 --> 00:29:31,740
any final comments

641
00:29:31,740 --> 00:29:33,419
so what

642
00:29:33,419 --> 00:29:35,039
is so assuming everybody assuming when

643
00:29:35,039 --> 00:29:36,480
we send a mail to the list with the

644
00:29:36,480 --> 00:29:38,940
minutes of nobody changes their minds uh

645
00:29:38,940 --> 00:29:41,340
what's the likely timing on the update

646
00:29:41,340 --> 00:29:44,840
do you think roughly

647
00:29:46,460 --> 00:29:48,899
in November

648
00:29:48,899 --> 00:29:50,100
okay

649
00:29:50,100 --> 00:29:51,899
if we got some input on state machine

650
00:29:51,899 --> 00:29:54,260
yes

651
00:29:54,659 --> 00:29:57,240
okay so if there's this

652
00:29:57,240 --> 00:29:59,520
if the state machine is perfect or we

653
00:29:59,520 --> 00:30:01,140
decide not to put it in

654
00:30:01,140 --> 00:30:02,880
in either case we should be able to hit

655
00:30:02,880 --> 00:30:04,799
publication requested at the beginning

656
00:30:04,799 --> 00:30:07,399
of December

657
00:30:08,760 --> 00:30:10,020
if there's lots of discussion about the

658
00:30:10,020 --> 00:30:13,080
state machine it'll be August next year

659
00:30:13,080 --> 00:30:13,930
earliest

660
00:30:13,930 --> 00:30:15,960
[Laughter]

661
00:30:15,960 --> 00:30:17,539
so

662
00:30:17,539 --> 00:30:19,980
yeah so please be aware that if you are

663
00:30:19,980 --> 00:30:21,899
going if when they post some text about

664
00:30:21,899 --> 00:30:23,100
the state machine

665
00:30:23,100 --> 00:30:26,399
uh yo one of the options is not not to

666
00:30:26,399 --> 00:30:27,899
include that text and and be done

667
00:30:27,899 --> 00:30:29,279
quicker

668
00:30:29,279 --> 00:30:31,980
but we'll see if we see what we see

669
00:30:31,980 --> 00:30:33,480
okay

670
00:30:33,480 --> 00:30:36,120
thank you thank you

671
00:30:36,120 --> 00:30:38,460
so the next one in the line is Marco

672
00:30:38,460 --> 00:30:40,799
with uh the hackathon report and the

673
00:30:40,799 --> 00:30:44,000
update on the traces graph

674
00:30:53,060 --> 00:30:54,360
[Music]

675
00:30:54,360 --> 00:30:56,760
hi this is Marco

676
00:30:56,760 --> 00:31:00,020
uh this is an update from the akaton

677
00:31:00,020 --> 00:31:02,159
testing activities and on the

678
00:31:02,159 --> 00:31:05,340
electricity draft next slide please

679
00:31:05,340 --> 00:31:08,520
uh on the lake traces draft we submit a

680
00:31:08,520 --> 00:31:10,740
new version before the cutoff now both

681
00:31:10,740 --> 00:31:13,320
races saying once in terms of setup are

682
00:31:13,320 --> 00:31:14,700
aligned with version

683
00:31:14,700 --> 00:31:17,820
17 redoc I produced those from my

684
00:31:17,820 --> 00:31:20,039
implementation for californium

685
00:31:20,039 --> 00:31:22,740
and a lot of things Remains the Same as

686
00:31:22,740 --> 00:31:24,179
in the previous version especially in

687
00:31:24,179 --> 00:31:26,820
terms of the setup for the Ethiopia so

688
00:31:26,820 --> 00:31:28,760
authentication credentials

689
00:31:28,760 --> 00:31:31,559
methods identifies and so on and a

690
00:31:31,559 --> 00:31:34,860
little bit of processing up to the

691
00:31:34,860 --> 00:31:38,279
derivation of qs2 and gxy when preparing

692
00:31:38,279 --> 00:31:40,559
a DOT message too but otherwise really

693
00:31:40,559 --> 00:31:42,600
anything else changes of course

694
00:31:42,600 --> 00:31:45,840
especially due to the three changes in

695
00:31:45,840 --> 00:31:47,580
the protocol that you're highlighted

696
00:31:47,580 --> 00:31:50,580
here for the sake of computing your K3

697
00:31:50,580 --> 00:31:53,520
PS3 and th4

698
00:31:53,520 --> 00:31:55,980
uh so a lot changes changed at the end

699
00:31:55,980 --> 00:31:56,820
of the day

700
00:31:56,820 --> 00:32:00,020
next slide please

701
00:32:00,179 --> 00:32:03,480
um right uh before submitting this new

702
00:32:03,480 --> 00:32:06,059
version uh Malaysia was able also to

703
00:32:06,059 --> 00:32:08,220
confirm the correctness of the second

704
00:32:08,220 --> 00:32:10,919
Trace uh with this implementation so

705
00:32:10,919 --> 00:32:13,020
that's the trace with 732

706
00:32:13,020 --> 00:32:16,020
um using CCS as credentials uh

707
00:32:16,020 --> 00:32:18,919
identifiers and static static

708
00:32:18,919 --> 00:32:21,840
and whether there are additional test

709
00:32:21,840 --> 00:32:23,039
vectors

710
00:32:23,039 --> 00:32:25,860
um from Marek uh also covering the same

711
00:32:25,860 --> 00:32:27,779
surface Suite but also with meta zero

712
00:32:27,779 --> 00:32:30,600
and they are available online and yeah

713
00:32:30,600 --> 00:32:33,539
they are consistent with version 17 in

714
00:32:33,539 --> 00:32:35,820
spite of what the URI said because there

715
00:32:35,820 --> 00:32:37,080
was no change on The Wire between

716
00:32:37,080 --> 00:32:41,899
version 16 and 17 of the protocol

717
00:32:41,940 --> 00:32:43,620
um next slide please

718
00:32:43,620 --> 00:32:45,779
so that was about the uh the traces

719
00:32:45,779 --> 00:32:48,480
draft uh about the testing um we had

720
00:32:48,480 --> 00:32:49,620
quite a lot of testing during the

721
00:32:49,620 --> 00:32:50,640
hackathon

722
00:32:50,640 --> 00:32:53,580
um Malaysia both with implantations up

723
00:32:53,580 --> 00:32:56,940
to date again to version 17 of eddock uh

724
00:32:56,940 --> 00:32:59,100
we basically tested first of all the

725
00:32:59,100 --> 00:33:00,960
same thing we tested uh at the previous

726
00:33:00,960 --> 00:33:04,200
hackathon uh so considering the same uh

727
00:33:04,200 --> 00:33:06,059
setup you can just see from this figure

728
00:33:06,059 --> 00:33:08,640
that yeah we successfully um interrupt

729
00:33:08,640 --> 00:33:10,799
and again we're highlighting that this

730
00:33:10,799 --> 00:33:13,440
is the exact setup where you can achieve

731
00:33:13,440 --> 00:33:16,320
the smallest possible size for um

732
00:33:16,320 --> 00:33:19,140
message to 45 bytes

733
00:33:19,140 --> 00:33:22,140
uh next slide please

734
00:33:22,140 --> 00:33:24,120
and for the first time we managed to

735
00:33:24,120 --> 00:33:26,279
test the same configuration but we

736
00:33:26,279 --> 00:33:27,659
swapped

737
00:33:27,659 --> 00:33:29,940
um edoc rows now the Malaysia supported

738
00:33:29,940 --> 00:33:33,120
also uh the respond the role and again

739
00:33:33,120 --> 00:33:36,179
successful uh interrupt with same uh

740
00:33:36,179 --> 00:33:39,059
nice in Twilight about myself

741
00:33:39,059 --> 00:33:42,000
uh next slide please

742
00:33:42,000 --> 00:33:44,039
so I'm aware of other people updating

743
00:33:44,039 --> 00:33:46,380
their implementations

744
00:33:46,380 --> 00:33:48,659
um especially Marek from us employee

745
00:33:48,659 --> 00:33:49,980
should have his implementation it was

746
00:33:49,980 --> 00:33:53,519
from 17 ready and we were planning to

747
00:33:53,519 --> 00:33:55,919
interrupt already for the academ then we

748
00:33:55,919 --> 00:33:57,419
ended up having conflicting schedules

749
00:33:57,419 --> 00:34:00,059
and now we are going to reschedule um

750
00:34:00,059 --> 00:34:02,279
anytime soon but we will have those

751
00:34:02,279 --> 00:34:04,799
tests and also David is working on

752
00:34:04,799 --> 00:34:06,960
implementation uh we should be able to

753
00:34:06,960 --> 00:34:09,719
test uh and we actually started during

754
00:34:09,719 --> 00:34:11,399
the academic without being able to

755
00:34:11,399 --> 00:34:14,099
complete a full uh protocol execution so

756
00:34:14,099 --> 00:34:15,659
more tests will come

757
00:34:15,659 --> 00:34:18,599
uh on the actual traces draft

758
00:34:18,599 --> 00:34:20,940
um we think it's table and ready in

759
00:34:20,940 --> 00:34:22,980
principle for working request code but

760
00:34:22,980 --> 00:34:25,379
it's actually better to be sure that uh

761
00:34:25,379 --> 00:34:28,440
adopt is in turn really stable first So

762
00:34:28,440 --> 00:34:31,320
the plan is uh if there is not going to

763
00:34:31,320 --> 00:34:34,440
be any change on the on the wire for a

764
00:34:34,440 --> 00:34:36,179
dog anymore following its working group

765
00:34:36,179 --> 00:34:39,239
let's go uh I think we can consider this

766
00:34:39,239 --> 00:34:40,859
version three of the traces for working

767
00:34:40,859 --> 00:34:43,199
group Lost Code as well uh if there is

768
00:34:43,199 --> 00:34:44,399
any change on the wire for Red Oak

769
00:34:44,399 --> 00:34:46,679
instead well we produce new test vectors

770
00:34:46,679 --> 00:34:49,619
and submit the new version of traces for

771
00:34:49,619 --> 00:34:50,639
that

772
00:34:50,639 --> 00:34:52,080
so it's been staying home for a few

773
00:34:52,080 --> 00:34:55,139
weeks or so I guess yes so before doing

774
00:34:55,139 --> 00:34:57,240
before doing the working rule plus call

775
00:34:57,240 --> 00:34:59,099
I believe we need to validate Trace

776
00:34:59,099 --> 00:35:01,200
number one with another implementation

777
00:35:01,200 --> 00:35:03,660
that's for sure and I it would be ideal

778
00:35:03,660 --> 00:35:05,700
to ship first that hook so that we know

779
00:35:05,700 --> 00:35:07,380
that it's frozen so out of the working

780
00:35:07,380 --> 00:35:08,720
group at least

781
00:35:08,720 --> 00:35:11,940
uh so to fit to publish this new version

782
00:35:11,940 --> 00:35:14,400
of Adcock to and then to go for working

783
00:35:14,400 --> 00:35:16,260
group last called once we are sure that

784
00:35:16,260 --> 00:35:18,180
there are no changes

785
00:35:18,180 --> 00:35:21,119
so that would be my opinion sure I mean

786
00:35:21,119 --> 00:35:23,520
I guess there's no Russian publishing

787
00:35:23,520 --> 00:35:25,320
the traces if they can they can wait as

788
00:35:25,320 --> 00:35:26,099
long as they need because they're

789
00:35:26,099 --> 00:35:28,320
available all the time

790
00:35:28,320 --> 00:35:29,400
right

791
00:35:29,400 --> 00:35:32,760
yeah that's it

792
00:35:32,760 --> 00:35:35,900
okay thank you Marco

793
00:35:38,420 --> 00:35:42,599
so now we are uh going ahead with uh

794
00:35:42,599 --> 00:35:44,780
non-trusted items so the presentations

795
00:35:44,780 --> 00:35:49,440
uh of possible future work so first the

796
00:35:49,440 --> 00:35:51,720
presentation is by yoran on lightweight

797
00:35:51,720 --> 00:35:55,160
authorization for ad hoc

798
00:35:56,099 --> 00:35:57,480
foreign

799
00:35:57,480 --> 00:35:59,579
thank you

800
00:35:59,579 --> 00:36:02,700
so this work started in the Asus working

801
00:36:02,700 --> 00:36:03,660
group

802
00:36:03,660 --> 00:36:06,060
three years ago approximately

803
00:36:06,060 --> 00:36:09,180
and now we have been waiting for for ad

804
00:36:09,180 --> 00:36:10,680
hoc to

805
00:36:10,680 --> 00:36:12,079
to be

806
00:36:12,079 --> 00:36:14,820
in a fairly stable State before we

807
00:36:14,820 --> 00:36:16,619
actually bring it to this working group

808
00:36:16,619 --> 00:36:18,180
where it probably

809
00:36:18,180 --> 00:36:22,098
belongs so the next slide please

810
00:36:23,220 --> 00:36:24,960
so it has been requested in this working

811
00:36:24,960 --> 00:36:26,880
group that we should give more detailed

812
00:36:26,880 --> 00:36:29,700
examples of how we're using the external

813
00:36:29,700 --> 00:36:32,040
authorization data

814
00:36:32,040 --> 00:36:34,800
EAD fields and that's an integration

815
00:36:34,800 --> 00:36:37,380
point in ad hoc where you can

816
00:36:37,380 --> 00:36:40,920
support authorization of peers

817
00:36:40,920 --> 00:36:42,839
and that typically involves the trusted

818
00:36:42,839 --> 00:36:43,980
third party

819
00:36:43,980 --> 00:36:45,300
so

820
00:36:45,300 --> 00:36:47,339
um there are we will see several

821
00:36:47,339 --> 00:36:49,680
examples here

822
00:36:49,680 --> 00:36:52,020
this draft is looking particularly at

823
00:36:52,020 --> 00:36:53,579
the case of

824
00:36:53,579 --> 00:36:56,760
of using vouchers for for authorization

825
00:36:56,760 --> 00:37:00,540
so the initiator is retrieving a voucher

826
00:37:00,540 --> 00:37:01,980
from a third party an authorization

827
00:37:01,980 --> 00:37:04,440
server and that is authorizing the

828
00:37:04,440 --> 00:37:05,880
responder

829
00:37:05,880 --> 00:37:07,920
so so the initiator knows that this is

830
00:37:07,920 --> 00:37:10,800
the right Network to join or the right

831
00:37:10,800 --> 00:37:12,720
responder to talk to

832
00:37:12,720 --> 00:37:14,099
and other examples are remote

833
00:37:14,099 --> 00:37:16,859
attestation where the trusted third

834
00:37:16,859 --> 00:37:19,560
party would for example be a verifier

835
00:37:19,560 --> 00:37:22,380
and a revocation checking where the

836
00:37:22,380 --> 00:37:25,200
where it would be a CA or some some

837
00:37:25,200 --> 00:37:27,660
pki functionality as we have an example

838
00:37:27,660 --> 00:37:29,700
in the in the next presentation

839
00:37:29,700 --> 00:37:32,119
next slide please

840
00:37:32,119 --> 00:37:35,280
just a few reminders about what Eads

841
00:37:35,280 --> 00:37:37,680
what the adult specification is saying

842
00:37:37,680 --> 00:37:39,060
about EAD

843
00:37:39,060 --> 00:37:42,780
so it's defined in section three eight

844
00:37:42,780 --> 00:37:45,180
there is more details in appendix e on

845
00:37:45,180 --> 00:37:47,880
on using ads and there is some text in

846
00:37:47,880 --> 00:37:49,500
security considerations

847
00:37:49,500 --> 00:37:51,900
and all these three are are have a lot

848
00:37:51,900 --> 00:37:54,000
of warning signs Indiana registration

849
00:37:54,000 --> 00:37:57,000
procedure for Ed items is specification

850
00:37:57,000 --> 00:38:00,180
required and that's what this draft is

851
00:38:00,180 --> 00:38:02,220
doing it's specifying one one of these

852
00:38:02,220 --> 00:38:06,020
use cases next slide please

853
00:38:06,480 --> 00:38:08,700
so if we look at the an onboarding

854
00:38:08,700 --> 00:38:10,680
device onboarding setting we have a

855
00:38:10,680 --> 00:38:12,599
device we have an onboarding

856
00:38:12,599 --> 00:38:13,920
node

857
00:38:13,920 --> 00:38:16,380
and we're gonna run this over a

858
00:38:16,380 --> 00:38:18,060
constrained link

859
00:38:18,060 --> 00:38:20,640
and then they have one or more multiple

860
00:38:20,640 --> 00:38:23,700
third parties that are

861
00:38:23,700 --> 00:38:25,680
um available from the onboarding node

862
00:38:25,680 --> 00:38:27,720
point of view over internet for example

863
00:38:27,720 --> 00:38:30,300
or some unconstrained Network

864
00:38:30,300 --> 00:38:32,280
and the typical way to do this is that

865
00:38:32,280 --> 00:38:35,040
you start with the handshake the egg

866
00:38:35,040 --> 00:38:36,420
protocol

867
00:38:36,420 --> 00:38:39,359
and then you run one or more

868
00:38:39,359 --> 00:38:41,520
authorization

869
00:38:41,520 --> 00:38:45,060
protocols in sequence

870
00:38:45,060 --> 00:38:47,160
and that's Illustrated here with the

871
00:38:47,160 --> 00:38:49,380
blue and red box

872
00:38:49,380 --> 00:38:50,700
and the there are potential

873
00:38:50,700 --> 00:38:52,260
inefficiencies here if you want to

874
00:38:52,260 --> 00:38:55,680
optimize this both from a latency point

875
00:38:55,680 --> 00:38:58,140
of view and from a from a processing and

876
00:38:58,140 --> 00:39:01,680
from a power consumption point of view

877
00:39:01,680 --> 00:39:04,980
so one thing to do is to look at the

878
00:39:04,980 --> 00:39:07,320
sequential processing and see how you

879
00:39:07,320 --> 00:39:09,300
can make that things more in parallel

880
00:39:09,300 --> 00:39:11,460
another thing is that you can collect

881
00:39:11,460 --> 00:39:14,460
the data which is carried over

882
00:39:14,460 --> 00:39:16,859
uh the constrained link multiple times

883
00:39:16,859 --> 00:39:19,800
and perhaps not send them multiple times

884
00:39:19,800 --> 00:39:22,020
and the third thing you can do is that

885
00:39:22,020 --> 00:39:24,359
you could use the unconstrained Network

886
00:39:24,359 --> 00:39:26,220
to get the information that the

887
00:39:26,220 --> 00:39:28,500
onboarding node needs without

888
00:39:28,500 --> 00:39:30,240
transporting backup and forth in our

889
00:39:30,240 --> 00:39:33,900
constraint link excellent

890
00:39:33,900 --> 00:39:35,880
so in the particular example which this

891
00:39:35,880 --> 00:39:37,560
draft is containing there is a voucher

892
00:39:37,560 --> 00:39:39,780
retrieval protocol so now the red box

893
00:39:39,780 --> 00:39:43,260
from the previous slide is moved into

894
00:39:43,260 --> 00:39:47,280
um the the black box which is the ache

895
00:39:47,280 --> 00:39:49,260
in this case ad hoc which is three

896
00:39:49,260 --> 00:39:52,560
messages and the red protocol is carried

897
00:39:52,560 --> 00:39:55,380
in the EAD Fields so you have in this

898
00:39:55,380 --> 00:39:57,119
case there is a voucher info going in in

899
00:39:57,119 --> 00:39:59,940
day one which the responder turns into a

900
00:39:59,940 --> 00:40:01,380
voucher request for the authorization

901
00:40:01,380 --> 00:40:02,400
server

902
00:40:02,400 --> 00:40:04,800
he gets back a voucher in the voucher

903
00:40:04,800 --> 00:40:07,680
response and that is passed back to the

904
00:40:07,680 --> 00:40:08,880
initiator

905
00:40:08,880 --> 00:40:11,220
with the message too so after message

906
00:40:11,220 --> 00:40:14,579
two you could uh the initiator can

907
00:40:14,579 --> 00:40:17,099
authenticate and also authorize the

908
00:40:17,099 --> 00:40:20,400
responder and if if not authorized

909
00:40:20,400 --> 00:40:22,500
aboard the protocol

910
00:40:22,500 --> 00:40:24,480
so this is addressing that the issues

911
00:40:24,480 --> 00:40:25,800
with

912
00:40:25,800 --> 00:40:28,500
mentioned in the previous slide

913
00:40:28,500 --> 00:40:31,140
thanks a lot

914
00:40:31,140 --> 00:40:35,480
so here is the details of the protocol

915
00:40:35,480 --> 00:40:37,920
or some of the details

916
00:40:37,920 --> 00:40:41,760
and this first we look at what are the

917
00:40:41,760 --> 00:40:44,160
trust relationships we assume between

918
00:40:44,160 --> 00:40:46,980
these nodes for some reason we've given

919
00:40:46,980 --> 00:40:50,520
the nodes names U V and W

920
00:40:50,520 --> 00:40:52,619
that's so mapping from the previous

921
00:40:52,619 --> 00:40:55,200
picture that's slightly confusing

922
00:40:55,200 --> 00:40:57,420
because we already have letters for the

923
00:40:57,420 --> 00:40:59,940
initiator and the responder so U equals

924
00:40:59,940 --> 00:41:02,820
I and V equals r so we think about that

925
00:41:02,820 --> 00:41:04,619
to the next version

926
00:41:04,619 --> 00:41:07,680
but U is not assumed to have a

927
00:41:07,680 --> 00:41:09,599
relationship with v this is basically

928
00:41:09,599 --> 00:41:11,700
the object of of the emboding process

929
00:41:11,700 --> 00:41:15,300
that you include the device in in the

930
00:41:15,300 --> 00:41:16,260
network

931
00:41:16,260 --> 00:41:18,599
instead you is having a relationship

932
00:41:18,599 --> 00:41:20,760
with W which could represent the

933
00:41:20,760 --> 00:41:23,160
manufacturer for example

934
00:41:23,160 --> 00:41:27,540
so U has a a trusted public if a hell

935
00:41:27,540 --> 00:41:31,079
monkey of the of w

936
00:41:31,079 --> 00:41:33,540
and that's used that's pre-provision in

937
00:41:33,540 --> 00:41:36,480
Factory for example or or at some some

938
00:41:36,480 --> 00:41:40,859
warehouse and that's used to encrypt the

939
00:41:40,859 --> 00:41:44,940
um the message going from U to V in the

940
00:41:44,940 --> 00:41:47,040
voucher request

941
00:41:47,040 --> 00:41:51,540
so in the ead1 field we now have two two

942
00:41:51,540 --> 00:41:54,119
objects one is the encrypted identity of

943
00:41:54,119 --> 00:41:57,960
the of the device all of you and the

944
00:41:57,960 --> 00:42:00,180
other is the locator of w which could be

945
00:42:00,180 --> 00:42:03,359
a URI for example

946
00:42:03,359 --> 00:42:06,839
and then V is running the protocol with

947
00:42:06,839 --> 00:42:09,240
with W it gets back a voucher and the

948
00:42:09,240 --> 00:42:11,220
voucher goes in ead2

949
00:42:11,220 --> 00:42:13,380
back to you

950
00:42:13,380 --> 00:42:15,780
so that's the a bit focus on u and v and

951
00:42:15,780 --> 00:42:17,820
if we now go to the next slide we see

952
00:42:17,820 --> 00:42:20,400
what happens between V and W

953
00:42:20,400 --> 00:42:23,700
so this is an unconstrained link or

954
00:42:23,700 --> 00:42:24,900
Network

955
00:42:24,900 --> 00:42:27,960
and here we assume that there is just an

956
00:42:27,960 --> 00:42:30,900
ordinary web-based trust with with

957
00:42:30,900 --> 00:42:34,079
implicit trust anchors so

958
00:42:34,079 --> 00:42:37,140
V and W can set up TLS

959
00:42:37,140 --> 00:42:39,740
and in this

960
00:42:39,740 --> 00:42:43,740
with this connection the voucher request

961
00:42:43,740 --> 00:42:46,740
and response is passed

962
00:42:46,740 --> 00:42:48,900
the voucher request contains information

963
00:42:48,900 --> 00:42:51,900
from message one for example the hash of

964
00:42:51,900 --> 00:42:54,500
the message one as a session identifier

965
00:42:54,500 --> 00:42:56,520
there is a

966
00:42:56,520 --> 00:42:59,160
selected Cipher Suite which is comes out

967
00:42:59,160 --> 00:43:02,099
of the sweet's eye

968
00:43:02,099 --> 00:43:05,400
field in ad hoc which is the same Cypher

969
00:43:05,400 --> 00:43:08,040
Suite being used between U and W as u

970
00:43:08,040 --> 00:43:08,940
and v

971
00:43:08,940 --> 00:43:11,400
in this version of the draft

972
00:43:11,400 --> 00:43:16,640
and the FML key from also from Adam

973
00:43:16,800 --> 00:43:19,619
and from the EAD fields we take the

974
00:43:19,619 --> 00:43:21,619
encrypted

975
00:43:21,619 --> 00:43:23,760
identifier of you

976
00:43:23,760 --> 00:43:26,339
and a proof of possession

977
00:43:26,339 --> 00:43:29,760
of the public key of V

978
00:43:29,760 --> 00:43:33,060
so with this message the W can first of

979
00:43:33,060 --> 00:43:36,020
all decrypt the

980
00:43:36,020 --> 00:43:38,400
identifier of you

981
00:43:38,400 --> 00:43:40,680
it can

982
00:43:40,680 --> 00:43:43,980
then authenticate sort of prove the

983
00:43:43,980 --> 00:43:46,740
possession of the public key of V using

984
00:43:46,740 --> 00:43:48,060
the pop V

985
00:43:48,060 --> 00:43:49,140
field

986
00:43:49,140 --> 00:43:52,220
and then make the decision about

987
00:43:52,220 --> 00:43:56,220
authorizing or not V in this

988
00:43:56,220 --> 00:43:58,740
in this joint procedure

989
00:43:58,740 --> 00:44:00,540
and if it's authorized it'll be

990
00:44:00,540 --> 00:44:03,660
authorized it constructs a voucher which

991
00:44:03,660 --> 00:44:05,940
is typically the Mac of the session

992
00:44:05,940 --> 00:44:08,339
identifier and the credential

993
00:44:08,339 --> 00:44:11,880
uh used by

994
00:44:11,880 --> 00:44:14,579
by the red R just as a Time Track we

995
00:44:14,579 --> 00:44:17,460
will need to wrap up so okay so

996
00:44:17,460 --> 00:44:18,540
um

997
00:44:18,540 --> 00:44:21,420
that's good I'm because I'm done so this

998
00:44:21,420 --> 00:44:23,819
is uh we have already got very good

999
00:44:23,819 --> 00:44:25,980
comments from Marco and we'll make a new

1000
00:44:25,980 --> 00:44:27,480
version and we're implementation in

1001
00:44:27,480 --> 00:44:29,520
progress or in plan planning and if

1002
00:44:29,520 --> 00:44:31,619
anyone is welcome to join there is open

1003
00:44:31,619 --> 00:44:33,780
source adult libraries to use thank you

1004
00:44:33,780 --> 00:44:35,700
great so I think we'll take any

1005
00:44:35,700 --> 00:44:37,380
questions or comments on the three

1006
00:44:37,380 --> 00:44:39,660
presentations at the end just an

1007
00:44:39,660 --> 00:44:42,259
interesting time

1008
00:44:42,780 --> 00:44:46,200
yes so the next next presentation is by

1009
00:44:46,200 --> 00:44:50,760
Yousef uh Yusuf can you hear us yes

1010
00:44:50,760 --> 00:44:53,339
hello okay we hear you loud and clear

1011
00:44:53,339 --> 00:44:55,619
thank you the floor the floor is yours

1012
00:44:55,619 --> 00:44:58,099
thank you

1013
00:44:58,140 --> 00:45:00,000
if you can do this in about uh eight

1014
00:45:00,000 --> 00:45:01,680
minutes that would be fantastic

1015
00:45:01,680 --> 00:45:04,079
I'll try can I control the slides please

1016
00:45:04,079 --> 00:45:06,060
so you can but I can take it back though

1017
00:45:06,060 --> 00:45:09,140
if you take it too long

1018
00:45:10,079 --> 00:45:11,460
so

1019
00:45:11,460 --> 00:45:14,640
where do I yes passes you the slice

1020
00:45:14,640 --> 00:45:16,859
control

1021
00:45:16,859 --> 00:45:20,280
Perfect all right hello thank you for

1022
00:45:20,280 --> 00:45:23,940
having me uh I'm Yusuf Abdul halik and

1023
00:45:23,940 --> 00:45:26,160
I'm gonna talk about certificate

1024
00:45:26,160 --> 00:45:28,440
revocation in resource constrained

1025
00:45:28,440 --> 00:45:31,440
environments and this is a master's

1026
00:45:31,440 --> 00:45:32,760
thesis

1027
00:45:32,760 --> 00:45:35,400
um and the idea is that we're leveraging

1028
00:45:35,400 --> 00:45:38,579
ocsp and ad hoc to achieve this

1029
00:45:38,579 --> 00:45:43,020
certificate revocation so let's Dive In

1030
00:45:43,020 --> 00:45:45,720
um the idea here is we're considering a

1031
00:45:45,720 --> 00:45:48,119
communication scenario where we have a

1032
00:45:48,119 --> 00:45:50,280
constrained node as ad hoc initiator and

1033
00:45:50,280 --> 00:45:52,440
we have a non-constrained node as

1034
00:45:52,440 --> 00:45:53,760
responder

1035
00:45:53,760 --> 00:45:56,700
and now there is one more step of

1036
00:45:56,700 --> 00:45:58,680
authentication required from the

1037
00:45:58,680 --> 00:46:01,440
responder as the initiator also wants

1038
00:46:01,440 --> 00:46:03,839
certificate revocation information and

1039
00:46:03,839 --> 00:46:05,300
just very quickly

1040
00:46:05,300 --> 00:46:07,560
when a private key is compromised

1041
00:46:07,560 --> 00:46:09,359
certificate is revoked and you need to

1042
00:46:09,359 --> 00:46:11,520
tell the network somehow about this or

1043
00:46:11,520 --> 00:46:13,200
else there is it doesn't mean anything

1044
00:46:13,200 --> 00:46:15,540
that you revoke the certificate and

1045
00:46:15,540 --> 00:46:17,880
we're trying to achieve this now but in

1046
00:46:17,880 --> 00:46:20,720
a constrained environment setting we're

1047
00:46:20,720 --> 00:46:23,040
considering the responder to be an

1048
00:46:23,040 --> 00:46:25,859
initially untrusted responder it might

1049
00:46:25,859 --> 00:46:27,839
be an adversary that's leveraging the

1050
00:46:27,839 --> 00:46:30,359
absence of this revocation information

1051
00:46:30,359 --> 00:46:32,520
transported

1052
00:46:32,520 --> 00:46:34,380
so how can we achieve this in a

1053
00:46:34,380 --> 00:46:36,480
constrained environment uh how can a

1054
00:46:36,480 --> 00:46:39,420
constrained node get this information uh

1055
00:46:39,420 --> 00:46:41,760
the idea is or was to look into

1056
00:46:41,760 --> 00:46:43,980
transporting this information via a

1057
00:46:43,980 --> 00:46:46,260
lightweight key exchange protocol

1058
00:46:46,260 --> 00:46:48,060
adhof

1059
00:46:48,060 --> 00:46:49,560
um how can a constraint node acquire

1060
00:46:49,560 --> 00:46:51,480
there are some ways we're gonna look

1061
00:46:51,480 --> 00:46:53,220
through them very quickly there are

1062
00:46:53,220 --> 00:46:56,280
certificate revocation lists but the

1063
00:46:56,280 --> 00:46:58,560
idea is these are too large we're

1064
00:46:58,560 --> 00:47:01,200
talking sometimes unlimited size so

1065
00:47:01,200 --> 00:47:03,180
you're not gonna have a constrained node

1066
00:47:03,180 --> 00:47:05,880
download these and cross-reference ID

1067
00:47:05,880 --> 00:47:08,520
cred with them to see if if the

1068
00:47:08,520 --> 00:47:10,619
certificate is revoked that's not going

1069
00:47:10,619 --> 00:47:12,720
to happen so that completely removes

1070
00:47:12,720 --> 00:47:15,060
crls out of the equation

1071
00:47:15,060 --> 00:47:18,420
uh then we go to ocsp online certificate

1072
00:47:18,420 --> 00:47:20,579
status protocol

1073
00:47:20,579 --> 00:47:22,619
um and the idea here is we can have the

1074
00:47:22,619 --> 00:47:25,260
initiator query uh the revocation status

1075
00:47:25,260 --> 00:47:27,540
of the responder certificate doing an

1076
00:47:27,540 --> 00:47:30,359
ocsp request but now you're saying that

1077
00:47:30,359 --> 00:47:32,760
uh at the initiator or the constraint

1078
00:47:32,760 --> 00:47:35,520
initiator has to support a library to

1079
00:47:35,520 --> 00:47:37,980
perform an ocsp request meaning it knows

1080
00:47:37,980 --> 00:47:42,240
yes and one it knows the AR encoding

1081
00:47:42,240 --> 00:47:42,900
um

1082
00:47:42,900 --> 00:47:46,440
so again it's maybe it's asking too much

1083
00:47:46,440 --> 00:47:48,660
of it and also you want it to have a

1084
00:47:48,660 --> 00:47:50,579
connection with an ocsp responder again

1085
00:47:50,579 --> 00:47:53,940
maybe too much so what's better then the

1086
00:47:53,940 --> 00:47:56,099
better thing is that we try to leverage

1087
00:47:56,099 --> 00:47:58,440
all CSP stapling and then we remove the

1088
00:47:58,440 --> 00:48:00,180
whole load from the constrained node

1089
00:48:00,180 --> 00:48:02,880
let's talk about ocsp stapling so now

1090
00:48:02,880 --> 00:48:06,000
going back to our previous uh structure

1091
00:48:06,000 --> 00:48:08,640
we have the constraint node as ad hoc

1092
00:48:08,640 --> 00:48:10,619
initiator again same thing but now we

1093
00:48:10,619 --> 00:48:13,560
have an all CSP responder in the

1094
00:48:13,560 --> 00:48:15,599
equation here

1095
00:48:15,599 --> 00:48:18,240
um and the idea is that we're to perform

1096
00:48:18,240 --> 00:48:21,839
stapling the constraint node in uh we're

1097
00:48:21,839 --> 00:48:23,760
gonna see how exactly right now but it

1098
00:48:23,760 --> 00:48:26,220
somehow tells the responder to not only

1099
00:48:26,220 --> 00:48:28,760
give its certificate but also please

1100
00:48:28,760 --> 00:48:32,880
staple an ocsp response onto that

1101
00:48:32,880 --> 00:48:34,440
certificate and that's the idea of

1102
00:48:34,440 --> 00:48:37,319
stapling the staple is the ocsp response

1103
00:48:37,319 --> 00:48:40,560
on top of the responder certificate now

1104
00:48:40,560 --> 00:48:43,560
the thesis provides a vector of doing

1105
00:48:43,560 --> 00:48:46,380
that and it uses EAD items again and

1106
00:48:46,380 --> 00:48:48,300
neuron has went through those in the

1107
00:48:48,300 --> 00:48:50,460
last slide

1108
00:48:50,460 --> 00:48:53,339
um uh the idea is in ad hoc message one

1109
00:48:53,339 --> 00:48:57,319
in aad1 the constrained initiator

1110
00:48:57,319 --> 00:49:00,240
generates a staple request and we're

1111
00:49:00,240 --> 00:49:03,180
gonna see what that looks like uh right

1112
00:49:03,180 --> 00:49:06,900
now but the idea is we know that e81 or

1113
00:49:06,900 --> 00:49:10,079
EAD is a sequence of Ed items and we're

1114
00:49:10,079 --> 00:49:12,359
looking at Ed value here the Ed value

1115
00:49:12,359 --> 00:49:15,420
we're gonna call here staple request

1116
00:49:15,420 --> 00:49:18,119
it contains responder ID list and fresh

1117
00:49:18,119 --> 00:49:21,480
responder ID here refers to trusted ocsp

1118
00:49:21,480 --> 00:49:23,040
responder ID

1119
00:49:23,040 --> 00:49:26,520
uh and the idea is that the responder

1120
00:49:26,520 --> 00:49:29,280
must respect this list and this is taken

1121
00:49:29,280 --> 00:49:33,180
from uh staple request in TLS it's the

1122
00:49:33,180 --> 00:49:36,180
same idea that there is the responder

1123
00:49:36,180 --> 00:49:38,760
must respect this list and give back an

1124
00:49:38,760 --> 00:49:41,880
ocsp uh or contact an ocsp responder

1125
00:49:41,880 --> 00:49:44,460
from that list because that is the only

1126
00:49:44,460 --> 00:49:47,839
way that the initiator can then verify

1127
00:49:47,839 --> 00:49:51,300
the signature of the response because

1128
00:49:51,300 --> 00:49:54,000
uh well yes that's the trusted responder

1129
00:49:54,000 --> 00:49:55,980
and accordingly in the trust store there

1130
00:49:55,980 --> 00:49:57,540
is the public key of those trusses

1131
00:49:57,540 --> 00:49:59,099
responders and accordingly you can

1132
00:49:59,099 --> 00:50:00,780
verify the signature what about fresh

1133
00:50:00,780 --> 00:50:03,300
you can see of course maybe we can

1134
00:50:03,300 --> 00:50:05,760
disagree on the naming here but it's an

1135
00:50:05,760 --> 00:50:08,520
optional item and it says that the

1136
00:50:08,520 --> 00:50:13,560
initiator wants a fresh ocsp response so

1137
00:50:13,560 --> 00:50:15,780
just to very quickly go through it when

1138
00:50:15,780 --> 00:50:19,140
you do an ocsp request if you add

1139
00:50:19,140 --> 00:50:20,760
announce then it doesn't give you a

1140
00:50:20,760 --> 00:50:22,859
cached response but gives you a fresh

1141
00:50:22,859 --> 00:50:25,020
one now according to the policy

1142
00:50:25,020 --> 00:50:27,540
regarding freshness periods in your

1143
00:50:27,540 --> 00:50:30,180
application or on

1144
00:50:30,180 --> 00:50:33,420
or maybe in how you use the protocol you

1145
00:50:33,420 --> 00:50:36,740
decide when to ask for a fresh response

1146
00:50:36,740 --> 00:50:39,420
that's very important here the AD Label

1147
00:50:39,420 --> 00:50:41,700
is a negative label because this item is

1148
00:50:41,700 --> 00:50:44,819
used as a critical AED meaning it can

1149
00:50:44,819 --> 00:50:48,259
affect for more minutes

1150
00:50:48,480 --> 00:50:50,040
sorry

1151
00:50:50,040 --> 00:50:52,260
uh so we'll have to wrap up in two

1152
00:50:52,260 --> 00:50:55,680
minutes okay okay

1153
00:50:55,680 --> 00:50:58,980
um yes then we go to the ocsp request so

1154
00:50:58,980 --> 00:51:01,079
now we understand can perform the ocsp

1155
00:51:01,079 --> 00:51:04,980
request after it got the staple request

1156
00:51:04,980 --> 00:51:07,440
um just very quickly here ocsp request

1157
00:51:07,440 --> 00:51:10,940
uh when we get it we get the 1600 bytes

1158
00:51:10,940 --> 00:51:13,619
response which doesn't really work there

1159
00:51:13,619 --> 00:51:15,420
is no possibility to re-encode because

1160
00:51:15,420 --> 00:51:18,000
on the the initiator needs the response

1161
00:51:18,000 --> 00:51:19,319
to be signed it doesn't trust the

1162
00:51:19,319 --> 00:51:20,940
responder we have gone through this so

1163
00:51:20,940 --> 00:51:23,160
accordingly the thesis proposes a tiny

1164
00:51:23,160 --> 00:51:25,319
version of the ocsp response but how do

1165
00:51:25,319 --> 00:51:27,359
we ask for this tiny version

1166
00:51:27,359 --> 00:51:29,400
we use the preferred signature

1167
00:51:29,400 --> 00:51:33,359
algorithms to Signal a tiny request in

1168
00:51:33,359 --> 00:51:36,900
ocsp request now going back here uh now

1169
00:51:36,900 --> 00:51:39,599
the the responder has received the

1170
00:51:39,599 --> 00:51:42,780
response in ad2 as a staple and the

1171
00:51:42,780 --> 00:51:44,640
responder sends this as it is including

1172
00:51:44,640 --> 00:51:47,220
the staple tiny ocsp response let's look

1173
00:51:47,220 --> 00:51:49,740
at how that looks and this again here

1174
00:51:49,740 --> 00:51:51,780
this will be in ed2 this is staple

1175
00:51:51,780 --> 00:51:54,420
responses the value and inside is Tinus

1176
00:51:54,420 --> 00:51:58,260
SP response and this is a profile which

1177
00:51:58,260 --> 00:52:00,540
allows to achieve the functionality of

1178
00:52:00,540 --> 00:52:02,760
acquiring the revocation information but

1179
00:52:02,760 --> 00:52:04,440
still be within the security

1180
00:52:04,440 --> 00:52:07,500
considerations but because of short time

1181
00:52:07,500 --> 00:52:09,599
we won't go through that

1182
00:52:09,599 --> 00:52:11,880
um very quickly now to complete the

1183
00:52:11,880 --> 00:52:13,680
structure the initiator receives the

1184
00:52:13,680 --> 00:52:17,040
stable response it can verify produced

1185
00:52:17,040 --> 00:52:19,619
at to see if it works with its own time

1186
00:52:19,619 --> 00:52:23,040
it can verify ID cred R and then it can

1187
00:52:23,040 --> 00:52:24,540
get the certificate status and

1188
00:52:24,540 --> 00:52:26,280
accordingly decide whether to continue

1189
00:52:26,280 --> 00:52:29,220
or discontinue other talk very quickly

1190
00:52:29,220 --> 00:52:30,140
here

1191
00:52:30,140 --> 00:52:33,660
this new ocsp response give 83 percent

1192
00:52:33,660 --> 00:52:37,099
reduction compared to using normal ocsp

1193
00:52:37,099 --> 00:52:39,780
and then the idea is it to remove sign

1194
00:52:39,780 --> 00:52:42,180
or cert uh and also removes of course

1195
00:52:42,180 --> 00:52:45,839
the rnas and one structure meaning we're

1196
00:52:45,839 --> 00:52:47,880
at time sorry can you wrap up

1197
00:52:47,880 --> 00:52:51,420
yes great then

1198
00:52:51,420 --> 00:52:53,220
yes this was showing the transport

1199
00:52:53,220 --> 00:52:55,859
overhead and ad hoc uh just the

1200
00:52:55,859 --> 00:52:59,579
implementation soon there will be two uh

1201
00:52:59,579 --> 00:53:01,980
pull requests both to open SSL and

1202
00:53:01,980 --> 00:53:04,440
Stefan ristosov's us score you ad hoc

1203
00:53:04,440 --> 00:53:05,339
Library

1204
00:53:05,339 --> 00:53:09,900
and that is that thank you okay just a

1205
00:53:09,900 --> 00:53:11,339
clarifying question do you plan to

1206
00:53:11,339 --> 00:53:14,640
submit this as a draft or this is just a

1207
00:53:14,640 --> 00:53:17,579
master status for now so no the plan is

1208
00:53:17,579 --> 00:53:19,800
to if it is found appropriate is to

1209
00:53:19,800 --> 00:53:21,900
definitely submit this as a draft

1210
00:53:21,900 --> 00:53:24,359
oh okay thank you

1211
00:53:24,359 --> 00:53:26,579
and again Marco

1212
00:53:26,579 --> 00:53:28,579
um

1213
00:53:29,940 --> 00:53:32,760
this is a possible additional topic for

1214
00:53:32,760 --> 00:53:35,520
um while reviewing and implementing over

1215
00:53:35,520 --> 00:53:37,260
the last two years I ended up thinking

1216
00:53:37,260 --> 00:53:40,140
of a number of side points that I

1217
00:53:40,140 --> 00:53:42,540
believe rightly are out of scope for the

1218
00:53:42,540 --> 00:53:44,640
actual adult protocol were left out of

1219
00:53:44,640 --> 00:53:46,740
the adult specification but still I

1220
00:53:46,740 --> 00:53:49,559
believe in implementos has to face them

1221
00:53:49,559 --> 00:53:51,240
when implementing Edo network library

1222
00:53:51,240 --> 00:53:53,160
whatever and yeah I think guidelines

1223
00:53:53,160 --> 00:53:55,740
would be useful uh I started to think of

1224
00:53:55,740 --> 00:53:58,680
uh three areas to start with uh what did

1225
00:53:58,680 --> 00:54:00,720
you have to uh for whatever reason

1226
00:54:00,720 --> 00:54:02,940
invalidate a network session or

1227
00:54:02,940 --> 00:54:05,040
invalidate application Keys derived out

1228
00:54:05,040 --> 00:54:07,800
of another execution for the format that

1229
00:54:07,800 --> 00:54:10,079
may be uh I expect typically because of

1230
00:54:10,079 --> 00:54:12,359
authentication credentials expired or

1231
00:54:12,359 --> 00:54:15,839
revoked the latter case is trickier and

1232
00:54:15,839 --> 00:54:17,640
adult per se is fine the session is fine

1233
00:54:17,640 --> 00:54:20,700
but application Keys have become invalid

1234
00:54:20,700 --> 00:54:22,800
to use for instance because you embraced

1235
00:54:22,800 --> 00:54:25,680
the crypto limits or whatever what did

1236
00:54:25,680 --> 00:54:27,599
you run agical together you run a

1237
00:54:27,599 --> 00:54:29,339
lighter key update can you still do that

1238
00:54:29,339 --> 00:54:31,200
if the attack session was not persisted

1239
00:54:31,200 --> 00:54:33,960
whatever was not simply run Standalone

1240
00:54:33,960 --> 00:54:37,440
might even more complex uh context like

1241
00:54:37,440 --> 00:54:40,680
um uh as an access control

1242
00:54:40,680 --> 00:54:42,839
um framework execution and analog

1243
00:54:42,839 --> 00:54:44,400
session is bound to

1244
00:54:44,400 --> 00:54:46,680
um Access Control credentials that

1245
00:54:46,680 --> 00:54:50,040
scenario the second area is uh you are

1246
00:54:50,040 --> 00:54:51,960
fine with trusting authentication

1247
00:54:51,960 --> 00:54:54,059
credentials you're storing already they

1248
00:54:54,059 --> 00:54:55,680
might have been provided by a translator

1249
00:54:55,680 --> 00:54:58,859
party out of them or whatever but what

1250
00:54:58,859 --> 00:55:00,180
do you do about

1251
00:55:00,180 --> 00:55:02,520
um credentials that are new for you that

1252
00:55:02,520 --> 00:55:04,619
you can learn in principle on the Fly is

1253
00:55:04,619 --> 00:55:07,140
transported by value in credits I've

1254
00:55:07,140 --> 00:55:08,880
always said pointers to what I call

1255
00:55:08,880 --> 00:55:10,859
Trust model one and three here the two

1256
00:55:10,859 --> 00:55:13,380
extrins of the spectrum so you never

1257
00:55:13,380 --> 00:55:15,839
trust anything here that you receive in

1258
00:55:15,839 --> 00:55:18,180
in in other products by value if you

1259
00:55:18,180 --> 00:55:19,619
don't know it already or you trust

1260
00:55:19,619 --> 00:55:21,540
everything you see in ID critics as long

1261
00:55:21,540 --> 00:55:24,599
as it is valid I argue there's a middle

1262
00:55:24,599 --> 00:55:26,339
ground where you can still trust

1263
00:55:26,339 --> 00:55:28,140
something brand new that you see for the

1264
00:55:28,140 --> 00:55:29,819
first time on the fly as long as it is

1265
00:55:29,819 --> 00:55:32,579
valid and you are already storing a

1266
00:55:32,579 --> 00:55:35,579
trusted identifier compatible with that

1267
00:55:35,579 --> 00:55:37,800
and next

1268
00:55:37,800 --> 00:55:40,140
and this would be a third possible area

1269
00:55:40,140 --> 00:55:42,780
about the the actual processing and I I

1270
00:55:42,780 --> 00:55:44,700
believe again that rightly the other

1271
00:55:44,700 --> 00:55:46,260
specification focused on what I call

1272
00:55:46,260 --> 00:55:48,780
here core edit processing uh already

1273
00:55:48,780 --> 00:55:51,960
saying uh all in all that in some spots

1274
00:55:51,960 --> 00:55:53,339
you may have to divert from the main

1275
00:55:53,339 --> 00:55:55,559
processing to take care of for example

1276
00:55:55,559 --> 00:55:58,140
validating credentials uh processing the

1277
00:55:58,140 --> 00:55:59,940
ad items and sometimes the ladder

1278
00:55:59,940 --> 00:56:02,760
influences the former it is just it very

1279
00:56:02,760 --> 00:56:04,619
generically oh give those things up to

1280
00:56:04,619 --> 00:56:07,079
the application for their processing you

1281
00:56:07,079 --> 00:56:09,000
can't exactly go all the way out to the

1282
00:56:09,000 --> 00:56:10,740
application or grouped up getting back

1283
00:56:10,740 --> 00:56:13,559
so you need some careful there's another

1284
00:56:13,559 --> 00:56:16,440
consideration to do that um in a

1285
00:56:16,440 --> 00:56:18,480
callback fashion uh so to say and

1286
00:56:18,480 --> 00:56:20,940
believe me the uh the big box with the

1287
00:56:20,940 --> 00:56:23,400
ABC Point can be in turn exploded with

1288
00:56:23,400 --> 00:56:25,440
with the sort of State machine which is

1289
00:56:25,440 --> 00:56:27,480
not trigger to think about next slide

1290
00:56:27,480 --> 00:56:28,319
please

1291
00:56:28,319 --> 00:56:30,599
and that's the the last one this is just

1292
00:56:30,599 --> 00:56:32,819
what I thought so far my plan was to uh

1293
00:56:32,819 --> 00:56:34,380
propose an informational document to

1294
00:56:34,380 --> 00:56:36,680
give um this kind of guidelines

1295
00:56:36,680 --> 00:56:38,880
uh but but first of all I take the

1296
00:56:38,880 --> 00:56:40,619
opportunity to ask to the group to the

1297
00:56:40,619 --> 00:56:42,480
chairs if this is um in scope and

1298
00:56:42,480 --> 00:56:43,740
appropriate for Lake in the first place

1299
00:56:43,740 --> 00:56:46,260
uh if anything more should should cover

1300
00:56:46,260 --> 00:56:48,059
and a draft of Google come to

1301
00:56:48,059 --> 00:56:49,020
considerator

1302
00:56:49,020 --> 00:56:50,220
thank you

1303
00:56:50,220 --> 00:56:52,140
sure

1304
00:56:52,140 --> 00:56:54,720
okay so I think we have yeah so we have

1305
00:56:54,720 --> 00:56:57,000
like four minutes left I I I gotta

1306
00:56:57,000 --> 00:56:58,859
suggest that probably might want to do

1307
00:56:58,859 --> 00:57:01,500
is when we get to hit the publication

1308
00:57:01,500 --> 00:57:03,780
requested for ad hoc

1309
00:57:03,780 --> 00:57:06,000
then maybe schedule an interim meetings

1310
00:57:06,000 --> 00:57:08,819
where we can accept suggestions for work

1311
00:57:08,819 --> 00:57:10,380
like this and you know with a bit more

1312
00:57:10,380 --> 00:57:13,319
time to allow them to be discussed

1313
00:57:13,319 --> 00:57:14,760
um does that kind of make sense to

1314
00:57:14,760 --> 00:57:16,740
people's with me so I'm guessing that

1315
00:57:16,740 --> 00:57:17,579
would be

1316
00:57:17,579 --> 00:57:19,200
either just before the holidays or just

1317
00:57:19,200 --> 00:57:20,400
in the new year or something like that

1318
00:57:20,400 --> 00:57:22,380
maybe

1319
00:57:22,380 --> 00:57:23,520
um and so we can you know we can ask

1320
00:57:23,520 --> 00:57:24,720
people on the list to make suggestions

1321
00:57:24,720 --> 00:57:26,460
in the lead up to that

1322
00:57:26,460 --> 00:57:27,660
um

1323
00:57:27,660 --> 00:57:29,220
but I think yeah if we can if we can get

1324
00:57:29,220 --> 00:57:30,780
the publication requested put and hit

1325
00:57:30,780 --> 00:57:32,880
first that's probably a safer thing to

1326
00:57:32,880 --> 00:57:34,319
do

1327
00:57:34,319 --> 00:57:35,339
um

1328
00:57:35,339 --> 00:57:37,500
yeah so we focus on strategizing of

1329
00:57:37,500 --> 00:57:39,180
course but what crossed my mind is like

1330
00:57:39,180 --> 00:57:40,319
what we were discussing about the

1331
00:57:40,319 --> 00:57:41,760
finished statement about the state

1332
00:57:41,760 --> 00:57:43,559
protocol State machine could as well go

1333
00:57:43,559 --> 00:57:46,079
into the draft that Marco was proposing

1334
00:57:46,079 --> 00:57:49,020
on implementation guidance so that that

1335
00:57:49,020 --> 00:57:50,700
would be I think also an appropriate

1336
00:57:50,700 --> 00:57:54,000
kind of home yeah about that if the

1337
00:57:54,000 --> 00:57:55,740
other class covered an estate machine at

1338
00:57:55,740 --> 00:57:57,720
all it will probably be limited to to

1339
00:57:57,720 --> 00:58:00,240
what I call uh core add-up processing

1340
00:58:00,240 --> 00:58:02,180
anyway because that's what that draft

1341
00:58:02,180 --> 00:58:06,540
defines it so yes so let's discuss this

1342
00:58:06,540 --> 00:58:08,880
and at the interim uh beginning of

1343
00:58:08,880 --> 00:58:12,540
December or mid-December well so I I'll

1344
00:58:12,540 --> 00:58:14,220
suggest I'm suggesting that we first hit

1345
00:58:14,220 --> 00:58:16,440
the publication requested and then

1346
00:58:16,440 --> 00:58:18,240
schedule the intro sounds good because

1347
00:58:18,240 --> 00:58:19,619
otherwise people will get carried away

1348
00:58:19,619 --> 00:58:21,420
okay

1349
00:58:21,420 --> 00:58:24,059
is that okay yep that sounds good for me

1350
00:58:24,059 --> 00:58:26,640
okay so so so so basically we're we're

1351
00:58:26,640 --> 00:58:29,099
going to try and get ad hoc to hand it

1352
00:58:29,099 --> 00:58:31,800
off to the uh area director

1353
00:58:31,800 --> 00:58:34,619
for his review and then we can discuss

1354
00:58:34,619 --> 00:58:36,599
in more detail future work items and

1355
00:58:36,599 --> 00:58:39,619
things people would like to do

1356
00:58:41,099 --> 00:58:43,140
okay is any other we have like two

1357
00:58:43,140 --> 00:58:45,259
minutes

1358
00:58:46,200 --> 00:58:50,598
any other comments any other business

1359
00:58:50,819 --> 00:58:52,920
if not thank you thanks for thanks for

1360
00:58:52,920 --> 00:58:54,059
all the work getting this stuff done

1361
00:58:54,059 --> 00:58:55,200
it's an all the implementation it's

1362
00:58:55,200 --> 00:58:57,799
really good to see and

1363
00:58:57,799 --> 00:59:00,000
we assuming people want to do more work

1364
00:59:00,000 --> 00:59:01,440
we might see you next time if people

1365
00:59:01,440 --> 00:59:03,359
turn out not to order down or maybe

1366
00:59:03,359 --> 00:59:07,279
we're done we'll see thank you

1367
00:59:14,420 --> 00:59:17,819
Deco rooms they just close really quick

1368
00:59:17,819 --> 00:59:19,260
yeah you got about three or four minutes

1369
00:59:19,260 --> 00:59:21,920
as well okay

1370
00:59:25,020 --> 00:59:27,900
um yeah that state machine thing I would

1371
00:59:27,900 --> 00:59:29,579
be worried that that text could take

1372
00:59:29,579 --> 00:59:31,819
forever

1373
00:59:36,680 --> 00:59:40,339
yeah but without

