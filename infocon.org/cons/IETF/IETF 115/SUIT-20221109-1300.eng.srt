1
00:00:04,860 --> 00:00:07,040
thank you

2
00:00:09,540 --> 00:00:15,000
Taro will you do it may you take notes

3
00:00:15,000 --> 00:00:19,199
no come on man no okay

4
00:00:19,199 --> 00:00:21,480
I'm trying to open the ether ad and it's

5
00:00:21,480 --> 00:00:23,520
giving me this proxy server encrypt

6
00:00:23,520 --> 00:00:25,939
failure

7
00:00:29,939 --> 00:00:32,880
so Dave are you gonna do it remotely

8
00:00:32,880 --> 00:00:36,239
I'm trying to but um I can't access it

9
00:00:36,239 --> 00:00:38,760
for some reason

10
00:00:38,760 --> 00:00:41,760
yes it would be nice can somebody please

11
00:00:41,760 --> 00:00:43,980
watch it to take anything that Dave

12
00:00:43,980 --> 00:00:45,120
misses

13
00:00:45,120 --> 00:00:47,460
I I can't access it so I won't be able

14
00:00:47,460 --> 00:00:51,480
to take notes you can't access it all

15
00:00:51,480 --> 00:00:52,940
right

16
00:00:52,940 --> 00:00:56,120
got it

17
00:01:05,099 --> 00:01:07,100
um

18
00:01:10,380 --> 00:01:13,380
please

19
00:01:21,259 --> 00:01:24,119
I mean honestly everyone I mean we're

20
00:01:24,119 --> 00:01:25,439
active in this working group we can't

21
00:01:25,439 --> 00:01:27,119
have this meeting without minute taking

22
00:01:27,119 --> 00:01:29,040
please I mean there'll be multiple folks

23
00:01:29,040 --> 00:01:30,780
in The Ether chat it's about key

24
00:01:30,780 --> 00:01:33,540
decisions and Milestones

25
00:01:33,540 --> 00:01:36,680
thank you thank you

26
00:01:37,259 --> 00:01:38,640
for the recording thank you Michael

27
00:01:38,640 --> 00:01:41,180
Richardson

28
00:01:46,020 --> 00:01:49,280
I should have done that

29
00:01:49,619 --> 00:01:50,939
okay

30
00:01:50,939 --> 00:01:53,000
um

31
00:01:54,299 --> 00:01:56,880
remind you of the note well

32
00:01:56,880 --> 00:01:59,700
please uh if you're going to contribute

33
00:01:59,700 --> 00:02:01,740
know your rights Privileges and

34
00:02:01,740 --> 00:02:04,460
responsibilities

35
00:02:04,619 --> 00:02:07,680
and please uh treat each other with

36
00:02:07,680 --> 00:02:08,758
respect

37
00:02:08,758 --> 00:02:11,280
and uh

38
00:02:11,280 --> 00:02:14,160
we'll we'll make better technical

39
00:02:14,160 --> 00:02:16,980
decisions that way

40
00:02:16,980 --> 00:02:21,260
we just did the administrative tasks

41
00:02:21,959 --> 00:02:27,720
and here is the first part of the agenda

42
00:02:27,720 --> 00:02:29,160
um

43
00:02:29,160 --> 00:02:32,340
and the second part of the agenda are

44
00:02:32,340 --> 00:02:36,020
there any agenda bashes

45
00:02:37,500 --> 00:02:40,980
um day favor um I have to present in the

46
00:02:40,980 --> 00:02:44,040
room next door for 10 minutes about 45

47
00:02:44,040 --> 00:02:46,560
minutes in and since our usual rule of

48
00:02:46,560 --> 00:02:48,000
thumb you don't see times up here and

49
00:02:48,000 --> 00:02:49,739
that's because the things that are the

50
00:02:49,739 --> 00:02:51,780
most well Advanced documents we let them

51
00:02:51,780 --> 00:02:53,580
run until we actually get them done

52
00:02:53,580 --> 00:02:54,780
because we want to ship them or whatever

53
00:02:54,780 --> 00:02:56,340
so that's why you don't see times on

54
00:02:56,340 --> 00:02:58,080
here so that means we reserve the right

55
00:02:58,080 --> 00:02:59,879
to do Dynamic swapping towards the end

56
00:02:59,879 --> 00:03:02,280
so that the things that uh teep does not

57
00:03:02,280 --> 00:03:04,099
directly reference

58
00:03:04,099 --> 00:03:06,300
are the ones that might be done during

59
00:03:06,300 --> 00:03:08,519
the 10 to 15 minutes here so for example

60
00:03:08,519 --> 00:03:09,840
I have to be in the room for the

61
00:03:09,840 --> 00:03:11,400
firmware updates because Russ is an

62
00:03:11,400 --> 00:03:12,599
author

63
00:03:12,599 --> 00:03:15,800
um whereas things like uh mud and MTI to

64
00:03:15,800 --> 00:03:18,180
might actually move up depending on

65
00:03:18,180 --> 00:03:19,980
where we are after 45 minutes or so so

66
00:03:19,980 --> 00:03:23,299
that we'll do that uh real time

67
00:03:24,720 --> 00:03:28,379
any other agenda bashes

68
00:03:28,379 --> 00:03:31,159
okay

69
00:03:37,319 --> 00:03:41,420
we're gonna start with suit Manifesto

70
00:03:43,140 --> 00:03:45,360
we did not get any slides for hackathon

71
00:03:45,360 --> 00:03:48,620
does anyone want to share

72
00:03:48,900 --> 00:03:51,500
um the results

73
00:03:53,280 --> 00:03:55,920
yeah I think for an interested time uh

74
00:03:55,920 --> 00:03:57,480
any of the hackathon stuff can be done

75
00:03:57,480 --> 00:04:00,420
in tip and any of the uh actual outcomes

76
00:04:00,420 --> 00:04:02,040
I've already think been rolled into

77
00:04:02,040 --> 00:04:03,540
these slides on the various documents

78
00:04:03,540 --> 00:04:04,980
and stuff so we did have several people

79
00:04:04,980 --> 00:04:07,140
working on suit there but there's a

80
00:04:07,140 --> 00:04:09,180
hackathon report in teap which a cure is

81
00:04:09,180 --> 00:04:10,500
going to cover in teeth which kind of

82
00:04:10,500 --> 00:04:12,540
covers the relationship between deep and

83
00:04:12,540 --> 00:04:13,980
suit and so on so we'll cover any of

84
00:04:13,980 --> 00:04:15,900
that stuff and so we can just focus on

85
00:04:15,900 --> 00:04:17,699
the time here for the getting our docs

86
00:04:17,699 --> 00:04:19,620
done all right awesome

87
00:04:19,620 --> 00:04:21,380
great

88
00:04:21,380 --> 00:04:25,320
Dash 20. yeah that's 20. I did not

89
00:04:25,320 --> 00:04:28,500
expect it to hit 20. uh right so

90
00:04:28,500 --> 00:04:30,800
um there have been sorry

91
00:04:30,800 --> 00:04:33,240
eat the mic or eat the mic oh I don't

92
00:04:33,240 --> 00:04:35,340
need all right

93
00:04:35,340 --> 00:04:39,198
okay now you should be able to hear me

94
00:04:39,540 --> 00:04:43,139
um right so they're mostly editorial

95
00:04:43,139 --> 00:04:45,120
changes in this version there's not a

96
00:04:45,120 --> 00:04:49,080
lot of technical uh churn uh primarily

97
00:04:49,080 --> 00:04:51,780
these are uh coming from feedback from

98
00:04:51,780 --> 00:04:54,900
the the well I I guess it was the list

99
00:04:54,900 --> 00:04:57,180
from feedback from the list

100
00:04:57,180 --> 00:04:59,520
um there were some things on uh naming

101
00:04:59,520 --> 00:05:02,820
Clarity so what we've gone for here is

102
00:05:02,820 --> 00:05:06,840
to rename run to invoke because there

103
00:05:06,840 --> 00:05:09,780
was already a run sequence and the idea

104
00:05:09,780 --> 00:05:11,940
here is that we want to make it clear

105
00:05:11,940 --> 00:05:13,800
what's happening so that was just a

106
00:05:13,800 --> 00:05:15,900
minor editorial naming convention there

107
00:05:15,900 --> 00:05:18,240
the same thing in

108
00:05:18,240 --> 00:05:20,040
um common sequence versus shared

109
00:05:20,040 --> 00:05:22,680
sequence the idea was that common and

110
00:05:22,680 --> 00:05:24,060
command get a little bit too close

111
00:05:24,060 --> 00:05:27,120
together so by separating that out

112
00:05:27,120 --> 00:05:28,740
um it becomes a little bit clearer that

113
00:05:28,740 --> 00:05:30,960
we're saying comments or shared Suite

114
00:05:30,960 --> 00:05:33,600
sequence versus Command sequence you can

115
00:05:33,600 --> 00:05:34,740
see how there might be a little bit of

116
00:05:34,740 --> 00:05:36,360
overlap

117
00:05:36,360 --> 00:05:37,380
um

118
00:05:37,380 --> 00:05:40,620
I've added some uh clarifying text in a

119
00:05:40,620 --> 00:05:45,479
number of places uh and the uh those are

120
00:05:45,479 --> 00:05:48,419
around run sequence when strict order is

121
00:05:48,419 --> 00:05:50,880
false which is more applicable on uh

122
00:05:50,880 --> 00:05:54,419
large systems than small systems so this

123
00:05:54,419 --> 00:05:56,100
is not a microcontroller consideration

124
00:05:56,100 --> 00:05:57,960
in general this is more of an A-Class

125
00:05:57,960 --> 00:06:00,259
system kind of consideration

126
00:06:00,259 --> 00:06:05,100
the entry for suit invoke there it

127
00:06:05,100 --> 00:06:07,199
wasn't clear that it contained could

128
00:06:07,199 --> 00:06:09,840
contain image verification so there's

129
00:06:09,840 --> 00:06:11,160
some text to explain that that's

130
00:06:11,160 --> 00:06:15,840
possible and the try each which is used

131
00:06:15,840 --> 00:06:18,479
for some decision making purposes uh

132
00:06:18,479 --> 00:06:21,300
doesn't didn't have a clear explanation

133
00:06:21,300 --> 00:06:24,060
of what its stop conditions were so the

134
00:06:24,060 --> 00:06:25,919
stop condition explanation has been

135
00:06:25,919 --> 00:06:29,520
added there was a minor technical change

136
00:06:29,520 --> 00:06:33,000
um I even actually asked for a way to

137
00:06:33,000 --> 00:06:36,479
write a small payload directly without

138
00:06:36,479 --> 00:06:38,940
needing to have a separate payload

139
00:06:38,940 --> 00:06:40,139
argument

140
00:06:40,139 --> 00:06:43,020
and the idea behind this is if you've

141
00:06:43,020 --> 00:06:45,180
got something that requires I don't know

142
00:06:45,180 --> 00:06:48,000
32 bytes you don't necessarily want to

143
00:06:48,000 --> 00:06:50,880
have an entire separate hash and

144
00:06:50,880 --> 00:06:53,400
everything to make that work you

145
00:06:53,400 --> 00:06:55,080
probably just want to be able to put

146
00:06:55,080 --> 00:06:57,600
that small payload directly into flash

147
00:06:57,600 --> 00:06:59,520
now that required the addition of two

148
00:06:59,520 --> 00:07:02,400
commands one for a direct write and one

149
00:07:02,400 --> 00:07:05,280
to do a direct content check since there

150
00:07:05,280 --> 00:07:07,440
won't be a digest to compare against

151
00:07:07,440 --> 00:07:10,819
uh next slide please

152
00:07:12,180 --> 00:07:15,060
so we had an Ayanna early review and

153
00:07:15,060 --> 00:07:17,100
obviously we've had a previous

154
00:07:17,100 --> 00:07:20,340
Ayanna early review uh this one is

155
00:07:20,340 --> 00:07:23,460
pretty minimal there was one comment and

156
00:07:23,460 --> 00:07:24,539
that was

157
00:07:24,539 --> 00:07:28,940
uh since we have standards track ranges

158
00:07:28,940 --> 00:07:33,060
do those also require uh expert review

159
00:07:33,060 --> 00:07:37,740
as is the norm in the cozy style hybrid

160
00:07:37,740 --> 00:07:41,940
approach and for that I will take that

161
00:07:41,940 --> 00:07:44,039
to the working group how do you think we

162
00:07:44,039 --> 00:07:46,639
should handle this

163
00:07:48,440 --> 00:07:51,180
so my thought is that if there's a

164
00:07:51,180 --> 00:07:53,280
standard track document it's gotten

165
00:07:53,280 --> 00:07:56,039
plenty of expert review

166
00:07:56,039 --> 00:07:59,160
okay so I uh if that's the consensus of

167
00:07:59,160 --> 00:08:00,419
the working group then we need to put

168
00:08:00,419 --> 00:08:03,060
some text in there to give Ayanna that

169
00:08:03,060 --> 00:08:05,479
guidance

170
00:08:05,880 --> 00:08:08,520
does anyone see it differently

171
00:08:08,520 --> 00:08:11,659
I guess someone does

172
00:08:17,539 --> 00:08:19,860
State explicitly which register you're

173
00:08:19,860 --> 00:08:21,120
talking about

174
00:08:21,120 --> 00:08:24,979
the one this document creations

175
00:08:26,460 --> 00:08:28,500
the ones defined in this story right

176
00:08:28,500 --> 00:08:31,500
yeah customer the problem is that

177
00:08:31,500 --> 00:08:34,500
over the life of this document

178
00:08:34,500 --> 00:08:37,979
the people who will do uh

179
00:08:37,979 --> 00:08:39,779
standard strike

180
00:08:39,779 --> 00:08:42,899
the documents that are based on this

181
00:08:42,899 --> 00:08:44,640
will not be limited to the people who

182
00:08:44,640 --> 00:08:46,680
know what they are doing

183
00:08:46,680 --> 00:08:49,800
and I say that as a designated expert

184
00:08:49,800 --> 00:08:51,720
with several registers

185
00:08:51,720 --> 00:08:55,260
uh so I actually prefer

186
00:08:55,260 --> 00:08:59,279
the expert to be involved okay I mean

187
00:08:59,279 --> 00:09:01,380
the the response of the expert can be

188
00:09:01,380 --> 00:09:03,740
very short

189
00:09:08,040 --> 00:09:09,600
sorry I didn't put myself in the queue

190
00:09:09,600 --> 00:09:12,480
Roman denilio uh as the kind of AD to

191
00:09:12,480 --> 00:09:14,100
share similar field experience with

192
00:09:14,100 --> 00:09:16,380
Diana on other documents they have

193
00:09:16,380 --> 00:09:18,420
previously in collaboratively identified

194
00:09:18,420 --> 00:09:21,839
some issues where it was uh just in the

195
00:09:21,839 --> 00:09:23,279
standards track range and there was no

196
00:09:23,279 --> 00:09:25,019
de and it would have been really helpful

197
00:09:25,019 --> 00:09:26,760
to have remembered and had some of that

198
00:09:26,760 --> 00:09:28,320
knowledge as Carson was saying when the

199
00:09:28,320 --> 00:09:30,360
registry was created Boy you really

200
00:09:30,360 --> 00:09:31,560
should kind of think about this kind of

201
00:09:31,560 --> 00:09:33,720
as a as a gut check and so thinking

202
00:09:33,720 --> 00:09:35,279
about that the registry will endure

203
00:09:35,279 --> 00:09:38,040
after the working group is closed

204
00:09:38,040 --> 00:09:40,260
all right so you good point

205
00:09:40,260 --> 00:09:44,160
okay I guess so that reaction is counter

206
00:09:44,160 --> 00:09:46,200
to my original reaction so that being

207
00:09:46,200 --> 00:09:47,160
the case

208
00:09:47,160 --> 00:09:49,380
um should we adopt the cozy style hybrid

209
00:09:49,380 --> 00:09:50,820
standards plus expert review model

210
00:09:50,820 --> 00:09:53,660
sounds like

211
00:09:54,600 --> 00:09:56,040
and I should comment one of those places

212
00:09:56,040 --> 00:09:57,600
where I was talking with Ayanna and they

213
00:09:57,600 --> 00:10:01,040
pointed out to me was on the Cozy

214
00:10:01,040 --> 00:10:03,899
okay so we'll need to add some text to

215
00:10:03,899 --> 00:10:06,440
the document that explains that

216
00:10:06,440 --> 00:10:09,420
there's a standards plus expert review

217
00:10:09,420 --> 00:10:12,560
model moving forward

218
00:10:12,560 --> 00:10:16,200
well will we have to recommend uh

219
00:10:16,200 --> 00:10:20,160
you know some individuals to um to be

220
00:10:20,160 --> 00:10:22,380
those experts

221
00:10:22,380 --> 00:10:25,080
Roman denili again kind of by process it

222
00:10:25,080 --> 00:10:27,120
would be the isg that would choose those

223
00:10:27,120 --> 00:10:29,580
designated experts but uh I would

224
00:10:29,580 --> 00:10:32,820
certainly welcome recommendations

225
00:10:32,820 --> 00:10:34,500
be great

226
00:10:34,500 --> 00:10:38,160
I think someone just pointed at me uh

227
00:10:38,160 --> 00:10:40,740
seems plausible

228
00:10:40,740 --> 00:10:43,620
okay quick uh this is your last slide

229
00:10:43,620 --> 00:10:44,760
yeah

230
00:10:44,760 --> 00:10:47,220
uh quick reminder please uh if you're

231
00:10:47,220 --> 00:10:48,000
not

232
00:10:48,000 --> 00:10:50,640
currently drinking something from your

233
00:10:50,640 --> 00:10:54,140
soda put a mask on

234
00:10:56,640 --> 00:10:58,620
and this this is the last one I have for

235
00:10:58,620 --> 00:11:00,000
this draft so

236
00:11:00,000 --> 00:11:01,620
um unless there's any more questions or

237
00:11:01,620 --> 00:11:05,240
comments I think we can continue

238
00:11:22,680 --> 00:11:26,100
right so this is uh suit must multiple

239
00:11:26,100 --> 00:11:28,320
trust domains this is primarily

240
00:11:28,320 --> 00:11:30,720
um in support of tip at the moment there

241
00:11:30,720 --> 00:11:32,279
are a couple of other use cases that are

242
00:11:32,279 --> 00:11:33,959
important but they haven't gotten quite

243
00:11:33,959 --> 00:11:36,779
as much exercise as the team specific

244
00:11:36,779 --> 00:11:37,740
ones have

245
00:11:37,740 --> 00:11:40,019
uh next slide please

246
00:11:40,019 --> 00:11:42,060
so just in summary what we've got in

247
00:11:42,060 --> 00:11:44,700
here is three key Parts

248
00:11:44,700 --> 00:11:46,260
um we've got

249
00:11:46,260 --> 00:11:48,720
um or three key needed features rather

250
00:11:48,720 --> 00:11:51,480
um key delegation being the first one

251
00:11:51,480 --> 00:11:53,760
um we want to support explicitly and

252
00:11:53,760 --> 00:11:56,160
then there's the use case for mutually

253
00:11:56,160 --> 00:11:58,500
distrustful signers this is where two

254
00:11:58,500 --> 00:12:00,839
different parties own two different

255
00:12:00,839 --> 00:12:03,779
pieces of the system image and they

256
00:12:03,779 --> 00:12:05,940
don't trust each other to see uh to

257
00:12:05,940 --> 00:12:08,100
authorize their code and we need a way

258
00:12:08,100 --> 00:12:10,980
to deliver those packages while still

259
00:12:10,980 --> 00:12:13,079
expressing software dependencies between

260
00:12:13,079 --> 00:12:13,860
them

261
00:12:13,860 --> 00:12:16,519
next slide please

262
00:12:18,120 --> 00:12:21,680
so summary of features we have we have

263
00:12:21,680 --> 00:12:26,420
cwts for key delegation that part is is

264
00:12:26,420 --> 00:12:29,339
defined currently but I'm not sure how

265
00:12:29,339 --> 00:12:31,920
accurate it is so cwt experts please

266
00:12:31,920 --> 00:12:34,680
have a look if you're a cwt expert

267
00:12:34,680 --> 00:12:37,680
please check that out for me

268
00:12:37,680 --> 00:12:41,160
um in we have the unlink command which

269
00:12:41,160 --> 00:12:43,620
is a specific requirement of teep as

270
00:12:43,620 --> 00:12:45,839
well as the uninstall sequence and then

271
00:12:45,839 --> 00:12:47,760
we have dependencies which are a way of

272
00:12:47,760 --> 00:12:50,519
expressing these multiple signature

273
00:12:50,519 --> 00:12:52,200
scenarios

274
00:12:52,200 --> 00:12:55,160
next slide please

275
00:12:55,980 --> 00:12:58,980
so there's been a number of updates so

276
00:12:58,980 --> 00:13:02,880
we're no longer indexing dependencies

277
00:13:02,880 --> 00:13:04,860
separately from components the Indus

278
00:13:04,860 --> 00:13:07,860
index lists have been merged this is

279
00:13:07,860 --> 00:13:10,380
intended to make uh the whole thing

280
00:13:10,380 --> 00:13:13,620
simpler to handle it does have some

281
00:13:13,620 --> 00:13:16,620
significant implications so

282
00:13:16,620 --> 00:13:20,399
digest of manifests are over the

283
00:13:20,399 --> 00:13:22,920
Manifest content itself not the envelope

284
00:13:22,920 --> 00:13:26,940
but this treats the Manifest Envelope as

285
00:13:26,940 --> 00:13:29,700
a component which means that doing an

286
00:13:29,700 --> 00:13:31,920
image check will digest the wrong thing

287
00:13:31,920 --> 00:13:34,500
so the current implementation or the

288
00:13:34,500 --> 00:13:36,060
current definition in the spec rather

289
00:13:36,060 --> 00:13:38,700
just says that the way that this works

290
00:13:38,700 --> 00:13:43,320
is that there is uh a test done in the

291
00:13:43,320 --> 00:13:46,139
image check command the feedback from

292
00:13:46,139 --> 00:13:48,360
the hackathon was that perhaps it would

293
00:13:48,360 --> 00:13:50,220
be better to implement a separate

294
00:13:50,220 --> 00:13:55,820
command for this I see Ira in the queue

295
00:14:01,160 --> 00:14:02,760
Brandon

296
00:14:02,760 --> 00:14:06,260
you're using a highly directional mic

297
00:14:06,260 --> 00:14:09,600
unsuccessfully and up to this point your

298
00:14:09,600 --> 00:14:12,360
your audio will not work in the

299
00:14:12,360 --> 00:14:14,700
recording is this better

300
00:14:14,700 --> 00:14:17,880
much better thank you for myself yeah

301
00:14:17,880 --> 00:14:20,399
okay you know I mean I can substantially

302
00:14:20,399 --> 00:14:22,440
hear myself more is that better all

303
00:14:22,440 --> 00:14:24,620
right

304
00:14:28,560 --> 00:14:32,540
is this okay is this working okay okay

305
00:14:32,880 --> 00:14:35,850
this is okay challenge accepted

306
00:14:35,850 --> 00:14:37,980
[Laughter]

307
00:14:37,980 --> 00:14:39,350
okay

308
00:14:39,350 --> 00:14:41,760
[Laughter]

309
00:14:41,760 --> 00:14:45,720
so uh right as a better solution to the

310
00:14:45,720 --> 00:14:47,880
the approach that we've had so far with

311
00:14:47,880 --> 00:14:50,519
uh with joining the two lists of

312
00:14:50,519 --> 00:14:55,079
components and uh dependencies is to

313
00:14:55,079 --> 00:14:55,680
um

314
00:14:55,680 --> 00:14:57,959
have a separate command for verifying

315
00:14:57,959 --> 00:14:59,040
the

316
00:14:59,040 --> 00:15:03,180
uh the digest of the Manifest and we

317
00:15:03,180 --> 00:15:05,160
also needed a test to determine whether

318
00:15:05,160 --> 00:15:08,699
or not the the currently processing uh

319
00:15:08,699 --> 00:15:11,459
component was a manifest or whether it

320
00:15:11,459 --> 00:15:16,019
was a uh dependency or a a an image and

321
00:15:16,019 --> 00:15:18,839
the the idea behind this is for handling

322
00:15:18,839 --> 00:15:21,000
batch processing so this is where you

323
00:15:21,000 --> 00:15:22,560
have a

324
00:15:22,560 --> 00:15:23,699
um

325
00:15:23,699 --> 00:15:27,420
you're using the true variant of the

326
00:15:27,420 --> 00:15:29,040
index and this is so that you can go

327
00:15:29,040 --> 00:15:30,420
through everything at once giving it the

328
00:15:30,420 --> 00:15:33,240
same commands uh the problem is we used

329
00:15:33,240 --> 00:15:34,800
to have a way to say handle all the

330
00:15:34,800 --> 00:15:38,040
dependencies handle all the components

331
00:15:38,040 --> 00:15:39,959
but now components are depend our

332
00:15:39,959 --> 00:15:42,180
dependencies are components so now we

333
00:15:42,180 --> 00:15:43,560
need a way to split them apart and so

334
00:15:43,560 --> 00:15:46,380
that's what this uh this test is for

335
00:15:46,380 --> 00:15:48,360
then finally there is the process

336
00:15:48,360 --> 00:15:51,480
dependency command and that is of course

337
00:15:51,480 --> 00:15:54,000
the the thing that allows you to say go

338
00:15:54,000 --> 00:15:55,440
and execute the command sequence that

339
00:15:55,440 --> 00:15:57,240
lives in the dependency

340
00:15:57,240 --> 00:15:58,459
um

341
00:15:58,459 --> 00:16:02,160
we don't currently specify or I think I

342
00:16:02,160 --> 00:16:03,660
do specify that it needs to check

343
00:16:03,660 --> 00:16:06,000
whether it's processing a manifest and

344
00:16:06,000 --> 00:16:07,560
fail if it's not

345
00:16:07,560 --> 00:16:09,540
um it's possible that we could just not

346
00:16:09,540 --> 00:16:13,199
do that and have it just fail on a parse

347
00:16:13,199 --> 00:16:15,779
error I'm I'm not sure I like that I

348
00:16:15,779 --> 00:16:18,480
think I'd prefer it checks but I will be

349
00:16:18,480 --> 00:16:20,519
happy to take feedback if anyone has a

350
00:16:20,519 --> 00:16:22,320
specific preference

351
00:16:22,320 --> 00:16:24,920
um the uninstall command sequence

352
00:16:24,920 --> 00:16:28,860
is the mechanism that tip is going to

353
00:16:28,860 --> 00:16:31,800
use from what I understand to say that

354
00:16:31,800 --> 00:16:34,019
it is time to remove all of the things

355
00:16:34,019 --> 00:16:36,899
that were installed by this manifest and

356
00:16:36,899 --> 00:16:39,720
so that has been added in here in

357
00:16:39,720 --> 00:16:40,800
support of team

358
00:16:40,800 --> 00:16:43,019
uh next slide please

359
00:16:43,019 --> 00:16:46,079
I can comment on that one Dave Taylor

360
00:16:46,079 --> 00:16:48,600
um so not only is it usable by teep but

361
00:16:48,600 --> 00:16:50,940
uh the other scenario and this is much

362
00:16:50,940 --> 00:16:52,740
less for constrained devices than it is

363
00:16:52,740 --> 00:16:56,940
for say uh devices that a a human can uh

364
00:16:56,940 --> 00:16:58,740
you know type things into for example

365
00:16:58,740 --> 00:17:01,259
the other scenario is we're a local

366
00:17:01,259 --> 00:17:04,439
administrator wants to uh physically on

367
00:17:04,439 --> 00:17:06,839
the box go on and uninstall something

368
00:17:06,839 --> 00:17:08,819
and so you can do that if you've already

369
00:17:08,819 --> 00:17:10,679
have the stuff that's in there and just

370
00:17:10,679 --> 00:17:12,660
follow the uninstall command sequence so

371
00:17:12,660 --> 00:17:13,919
that's the first scenario would not be

372
00:17:13,919 --> 00:17:15,179
for constrained devices but it's for a

373
00:17:15,179 --> 00:17:16,500
larger thing so there's a deep scenario

374
00:17:16,500 --> 00:17:18,059
was done remotely and there's a local

375
00:17:18,059 --> 00:17:21,139
install scenario the two

376
00:17:21,299 --> 00:17:23,099
um okay so for open issues what we've

377
00:17:23,099 --> 00:17:24,240
got other than what's already been

378
00:17:24,240 --> 00:17:25,679
talked about and the security

379
00:17:25,679 --> 00:17:28,319
consideration section is not

380
00:17:28,319 --> 00:17:30,059
particularly specific to this document

381
00:17:30,059 --> 00:17:32,340
it's the one that was originally in the

382
00:17:32,340 --> 00:17:34,620
suit manifest draft so that definitely

383
00:17:34,620 --> 00:17:36,360
needs to be updated

384
00:17:36,360 --> 00:17:37,740
um so there's a bit of work left to do

385
00:17:37,740 --> 00:17:39,000
there

386
00:17:39,000 --> 00:17:41,640
um the component another issue raised in

387
00:17:41,640 --> 00:17:43,980
the hackathon was the component ID for

388
00:17:43,980 --> 00:17:45,720
the root manifest now this is an

389
00:17:45,720 --> 00:17:47,880
interesting problem because

390
00:17:47,880 --> 00:17:50,160
um in a constrained system this is

391
00:17:50,160 --> 00:17:52,080
irrelevant if you receive a manifest you

392
00:17:52,080 --> 00:17:54,000
know where to put it you have one space

393
00:17:54,000 --> 00:17:56,160
to put it in you put it there

394
00:17:56,160 --> 00:17:56,780
um

395
00:17:56,780 --> 00:18:00,179
in a dependency enabled constrained

396
00:18:00,179 --> 00:18:02,700
device this is still the case there if

397
00:18:02,700 --> 00:18:04,380
you receive an unsolicited manifest

398
00:18:04,380 --> 00:18:06,720
there is one place for it to go however

399
00:18:06,720 --> 00:18:08,580
once you're starting to deal with

400
00:18:08,580 --> 00:18:10,740
devices that have multiple independent

401
00:18:10,740 --> 00:18:14,640
manifest trees that Define individual

402
00:18:14,640 --> 00:18:15,980
applications

403
00:18:15,980 --> 00:18:18,600
probably this is most common when they

404
00:18:18,600 --> 00:18:20,640
involve trusted applications that are

405
00:18:20,640 --> 00:18:23,039
signed by someone else but when we have

406
00:18:23,039 --> 00:18:26,220
that scenario then there needs to be a

407
00:18:26,220 --> 00:18:29,460
defined place to put it

408
00:18:29,460 --> 00:18:31,559
um and that's where the question of a

409
00:18:31,559 --> 00:18:34,020
component ID for the root manifest comes

410
00:18:34,020 --> 00:18:35,940
in because that tells a device that's

411
00:18:35,940 --> 00:18:38,640
receiving it where it goes

412
00:18:38,640 --> 00:18:40,679
um there's a slight challenge with that

413
00:18:40,679 --> 00:18:43,679
which is that if we have that there's

414
00:18:43,679 --> 00:18:45,980
going to be an interaction between it

415
00:18:45,980 --> 00:18:49,200
and the component ID that's specified

416
00:18:49,200 --> 00:18:53,280
for that for a dependency so if you have

417
00:18:53,280 --> 00:18:56,460
a a root manifest but it doesn't matter

418
00:18:56,460 --> 00:18:58,980
what's in it for the current moment but

419
00:18:58,980 --> 00:19:01,140
it defines component IDs for its

420
00:19:01,140 --> 00:19:03,179
components now if one of those

421
00:19:03,179 --> 00:19:06,480
components is a dependency manifest

422
00:19:06,480 --> 00:19:08,700
which contains a component ID there's a

423
00:19:08,700 --> 00:19:11,480
contention between these two uh the the

424
00:19:11,480 --> 00:19:13,860
best idea

425
00:19:13,860 --> 00:19:15,780
for the the thing that I've come to for

426
00:19:15,780 --> 00:19:17,400
the moment which may or may not be the

427
00:19:17,400 --> 00:19:20,400
right answer uh is that anything defined

428
00:19:20,400 --> 00:19:23,700
in a dependency component list should

429
00:19:23,700 --> 00:19:25,620
override whatever's in the Manifest and

430
00:19:25,620 --> 00:19:27,840
that's just not going to happen and

431
00:19:27,840 --> 00:19:30,120
there are other arguments we could make

432
00:19:30,120 --> 00:19:32,700
but I think that's so far I that's the

433
00:19:32,700 --> 00:19:35,940
one I found the least arguments against

434
00:19:35,940 --> 00:19:38,640
uh thank you so this is actually one of

435
00:19:38,640 --> 00:19:39,960
the long discussions we had at the

436
00:19:39,960 --> 00:19:41,700
hackathon and Brennan summarized three

437
00:19:41,700 --> 00:19:43,880
choices which aren't on the slide and so

438
00:19:43,880 --> 00:19:46,500
one is where so this is where I think

439
00:19:46,500 --> 00:19:47,580
they actually

440
00:19:47,580 --> 00:19:50,280
following slot okay then I'll wait then

441
00:19:50,280 --> 00:19:53,039
um right so I believe I put those on a

442
00:19:53,039 --> 00:19:54,840
following slide we'll come back to it um

443
00:19:54,840 --> 00:19:57,480
oh there okay yes so there we are where

444
00:19:57,480 --> 00:19:59,520
should a dependent manifest be stored ah

445
00:19:59,520 --> 00:20:01,860
okay and so there there are in single

446
00:20:01,860 --> 00:20:04,260
image devices as I said this is clear in

447
00:20:04,260 --> 00:20:05,880
single system configuration devices

448
00:20:05,880 --> 00:20:07,320
still clear

449
00:20:07,320 --> 00:20:08,940
um but when you have a system with

450
00:20:08,940 --> 00:20:10,380
multiple independent independent

451
00:20:10,380 --> 00:20:12,600
manifests not clear

452
00:20:12,600 --> 00:20:13,440
um

453
00:20:13,440 --> 00:20:16,080
so if we give dependent manifests a

454
00:20:16,080 --> 00:20:17,880
component ID that solves one of our

455
00:20:17,880 --> 00:20:20,160
problems but the question is do

456
00:20:20,160 --> 00:20:22,679
dependencies also get to declare their

457
00:20:22,679 --> 00:20:24,720
own component ID

458
00:20:24,720 --> 00:20:26,720
um

459
00:20:26,760 --> 00:20:28,620
I think I just ran through these choices

460
00:20:28,620 --> 00:20:30,240
the three the third one was actually a

461
00:20:30,240 --> 00:20:31,740
hybrid of two of the others so I left it

462
00:20:31,740 --> 00:20:32,520
out

463
00:20:32,520 --> 00:20:35,640
um so the dependent component list would

464
00:20:35,640 --> 00:20:37,200
this is the what I'm saying I think is

465
00:20:37,200 --> 00:20:38,940
probably the right answer the dependence

466
00:20:38,940 --> 00:20:41,100
component list overrides any declared

467
00:20:41,100 --> 00:20:43,679
component IDs and the other option of

468
00:20:43,679 --> 00:20:46,740
course is that the uh designated element

469
00:20:46,740 --> 00:20:49,440
of the dependence component list is

470
00:20:49,440 --> 00:20:51,539
concatenated with any dependency

471
00:20:51,539 --> 00:20:53,640
self-declared component ID I'm a little

472
00:20:53,640 --> 00:20:54,720
bit worried about some of the security

473
00:20:54,720 --> 00:20:56,640
considerations around that one whereas

474
00:20:56,640 --> 00:20:59,900
the other seems clear to me

475
00:21:00,480 --> 00:21:03,840
um yeah so to this day favor uh so to

476
00:21:03,840 --> 00:21:07,260
make it clear the uh thing that is the

477
00:21:07,260 --> 00:21:10,500
in the override case right the outer one

478
00:21:10,500 --> 00:21:13,380
gets to override where the inner one

479
00:21:13,380 --> 00:21:15,720
goes correct and so the scenario is you

480
00:21:15,720 --> 00:21:17,360
can have one inner one and it couldn't

481
00:21:17,360 --> 00:21:19,260
talk about some of the things that Fran

482
00:21:19,260 --> 00:21:21,000
and I talked about at hackathon

483
00:21:21,000 --> 00:21:24,240
um the uh the same dependency could

484
00:21:24,240 --> 00:21:25,620
actually need to be installed in

485
00:21:25,620 --> 00:21:28,140
multiple places on the same overall

486
00:21:28,140 --> 00:21:31,260
device okay and so for example if a

487
00:21:31,260 --> 00:21:33,960
device has say multiple tees in it right

488
00:21:33,960 --> 00:21:36,480
then it would be exactly the same suit

489
00:21:36,480 --> 00:21:38,280
digest exactly the same dependency or

490
00:21:38,280 --> 00:21:39,480
whatever but you may need to install it

491
00:21:39,480 --> 00:21:41,220
separately in two different tees and so

492
00:21:41,220 --> 00:21:42,539
where would you say that you'd say that

493
00:21:42,539 --> 00:21:44,400
in the outer one with different

494
00:21:44,400 --> 00:21:46,380
component IDs with one prefix going to

495
00:21:46,380 --> 00:21:48,240
one te one prefix going to their tee

496
00:21:48,240 --> 00:21:50,700
right so that's an example where the

497
00:21:50,700 --> 00:21:52,380
person that authors the Manifest of the

498
00:21:52,380 --> 00:21:54,360
of the component that's the dependency

499
00:21:54,360 --> 00:21:55,860
doesn't know where it's going to be

500
00:21:55,860 --> 00:21:57,299
installed these creates a default list

501
00:21:57,299 --> 00:21:58,500
right but then you have to be able to

502
00:21:58,500 --> 00:22:00,299
override that to say it go is open this

503
00:22:00,299 --> 00:22:02,460
one it goes over in that one okay and so

504
00:22:02,460 --> 00:22:04,620
the concatenation aspect could have done

505
00:22:04,620 --> 00:22:06,960
that but it means you have less control

506
00:22:06,960 --> 00:22:09,120
over the full path right and so the

507
00:22:09,120 --> 00:22:10,380
override means you have full control

508
00:22:10,380 --> 00:22:12,360
over exactly where you want it and so it

509
00:22:12,360 --> 00:22:13,919
can be installed multiple times in more

510
00:22:13,919 --> 00:22:15,840
complex devices and so that's why you

511
00:22:15,840 --> 00:22:18,120
know I agree with that as the uh as the

512
00:22:18,120 --> 00:22:19,860
proposal and but I just want to explain

513
00:22:19,860 --> 00:22:20,940
why

514
00:22:20,940 --> 00:22:25,320
okay yeah uh thank you Dave next slide

515
00:22:25,320 --> 00:22:27,500
please

516
00:22:27,679 --> 00:22:29,940
it says six of seven there should be one

517
00:22:29,940 --> 00:22:31,980
more one more

518
00:22:31,980 --> 00:22:34,200
oh this is the rest of it yeah okay I

519
00:22:34,200 --> 00:22:36,840
think we just talked about that

520
00:22:36,840 --> 00:22:39,600
yes okay I think we're done

521
00:22:39,600 --> 00:22:41,580
uh the the optical part you haven't

522
00:22:41,580 --> 00:22:43,440
mentioned that oh yeah the the point is

523
00:22:43,440 --> 00:22:45,480
that declaring your own component ID is

524
00:22:45,480 --> 00:22:47,100
optional that's not a mandatory field in

525
00:22:47,100 --> 00:22:50,159
the Manifest and the idea there is that

526
00:22:50,159 --> 00:22:53,539
um dependencies just omit it

527
00:22:54,900 --> 00:22:58,580
does uh anyone

528
00:23:00,419 --> 00:23:03,780
no we're on this is this is trust

529
00:23:03,780 --> 00:23:05,460
management this is multiple trust

530
00:23:05,460 --> 00:23:09,500
domains trust domains right

531
00:23:10,200 --> 00:23:13,200
so

532
00:23:13,620 --> 00:23:16,380
does anyone disagree with the conclusion

533
00:23:16,380 --> 00:23:17,720
that

534
00:23:17,720 --> 00:23:21,299
uh was just made here between Brunson

535
00:23:21,299 --> 00:23:24,240
and uh Dave just so that if there's any

536
00:23:24,240 --> 00:23:28,159
disagreement it's it's aired now

537
00:23:31,320 --> 00:23:33,419
I'm not seeing any online and I'm not

538
00:23:33,419 --> 00:23:35,039
seeing any in the room yeah this is the

539
00:23:35,039 --> 00:23:36,480
conclusion we came to with the hackathon

540
00:23:36,480 --> 00:23:38,340
but 100 at the working group to see if

541
00:23:38,340 --> 00:23:40,200
we could get working for consensus right

542
00:23:40,200 --> 00:23:43,100
your examples because

543
00:23:47,940 --> 00:23:51,799
it's two sleeves up your suit

544
00:23:54,140 --> 00:23:57,360
before you go on to the next one Brandon

545
00:23:57,360 --> 00:24:01,320
did ask for somebody that is um a cwt

546
00:24:01,320 --> 00:24:03,360
expert to be a reviewer of this one so I

547
00:24:03,360 --> 00:24:04,799
just asked is there anybody who

548
00:24:04,799 --> 00:24:07,500
considers themselves to be proficient in

549
00:24:07,500 --> 00:24:10,020
cwts it would be willing to do a review

550
00:24:10,020 --> 00:24:14,418
for uh for that aspect of the document

551
00:24:16,860 --> 00:24:19,050
um how about Carson

552
00:24:19,050 --> 00:24:22,140
[Laughter]

553
00:24:22,140 --> 00:24:24,860
thank you

554
00:24:30,000 --> 00:24:33,500
so let it be noted in the minutes

555
00:24:36,120 --> 00:24:37,740
just to be clear for the notes which

556
00:24:37,740 --> 00:24:40,620
document or are we referring to that was

557
00:24:40,620 --> 00:24:43,140
multiple trust domains and uh everybody

558
00:24:43,140 --> 00:24:45,659
pointed at Kirsten after Hank raised his

559
00:24:45,659 --> 00:24:48,000
hand first in case you're taking notes

560
00:24:48,000 --> 00:24:49,620
thank you

561
00:24:49,620 --> 00:24:52,280
all right so this is our viewers

562
00:24:52,280 --> 00:24:56,280
reviewers for the cwt aspect of the

563
00:24:56,280 --> 00:24:59,600
multiple trust domains document

564
00:25:03,000 --> 00:25:06,780
all right okay uh so now we're into uh

565
00:25:06,780 --> 00:25:09,260
update management

566
00:25:09,780 --> 00:25:12,539
so it just as a summary there are

567
00:25:12,539 --> 00:25:15,360
several extensions to suit in this

568
00:25:15,360 --> 00:25:18,120
document the first is uh it currently

569
00:25:18,120 --> 00:25:20,400
contains a coast wood

570
00:25:20,400 --> 00:25:23,640
um I would prefer it to contain a co-rim

571
00:25:23,640 --> 00:25:26,460
uh it has uh mechanisms for version

572
00:25:26,460 --> 00:25:29,340
comparison for uh Loosely coupled

573
00:25:29,340 --> 00:25:31,020
dependencies rather than ones that are

574
00:25:31,020 --> 00:25:32,640
coupled by Digest

575
00:25:32,640 --> 00:25:35,400
uh it's got some things on deployment

576
00:25:35,400 --> 00:25:37,679
constraints like timing priority and

577
00:25:37,679 --> 00:25:40,260
authorization and a couple of commands

578
00:25:40,260 --> 00:25:42,419
to enable more compact encoding for

579
00:25:42,419 --> 00:25:44,039
setting parameters

580
00:25:44,039 --> 00:25:46,700
next slide please

581
00:25:47,580 --> 00:25:51,179
so the primary changes since v0 are

582
00:25:51,179 --> 00:25:54,539
adding the override multiple command the

583
00:25:54,539 --> 00:25:55,980
point of this is that if you've got a

584
00:25:55,980 --> 00:25:58,020
lot of components this saves you two

585
00:25:58,020 --> 00:25:59,460
bytes each

586
00:25:59,460 --> 00:26:02,340
uh then there's the copy parameters

587
00:26:02,340 --> 00:26:05,820
command which uh when more than one

588
00:26:05,820 --> 00:26:07,679
component uses the same value for a

589
00:26:07,679 --> 00:26:10,200
parameter cuts down on the encoding this

590
00:26:10,200 --> 00:26:11,820
is primarily important for hashes

591
00:26:11,820 --> 00:26:14,640
because if you copy a hash in the in the

592
00:26:14,640 --> 00:26:17,039
current version of the suit manifest

593
00:26:17,039 --> 00:26:19,799
draft if you copy a component from one

594
00:26:19,799 --> 00:26:21,900
place to another you have to declare the

595
00:26:21,900 --> 00:26:24,840
hash for it more than once and that is

596
00:26:24,840 --> 00:26:26,700
uh not great for something that's

597
00:26:26,700 --> 00:26:29,279
supposed to be encoded small so this is

598
00:26:29,279 --> 00:26:31,140
to resolve that problem and it allows

599
00:26:31,140 --> 00:26:32,700
copying from one component to another

600
00:26:32,700 --> 00:26:37,080
with a relatively minimal encoding

601
00:26:37,080 --> 00:26:39,659
next slide please

602
00:26:39,659 --> 00:26:43,500
oh that's it no is that it one more

603
00:26:43,500 --> 00:26:45,600
just waiting for it to advance okay

604
00:26:45,600 --> 00:26:48,779
um so there's this is definitely not a

605
00:26:48,779 --> 00:26:51,000
full list of update management actions

606
00:26:51,000 --> 00:26:53,159
if there's something missing that you

607
00:26:53,159 --> 00:26:55,980
need for a use case please uh let us

608
00:26:55,980 --> 00:26:56,880
know

609
00:26:56,880 --> 00:26:59,400
let me know let someone know

610
00:26:59,400 --> 00:27:02,520
um if they're uh for sorry uh version

611
00:27:02,520 --> 00:27:04,200
comparisons

612
00:27:04,200 --> 00:27:07,080
um there was an open question from the

613
00:27:07,080 --> 00:27:10,799
previous uh meeting about whether it

614
00:27:10,799 --> 00:27:12,659
should be possible to use a manifest

615
00:27:12,659 --> 00:27:15,720
sequence number as a version comparison

616
00:27:15,720 --> 00:27:17,279
in a manifest

617
00:27:17,279 --> 00:27:20,400
my instinct is no because we already

618
00:27:20,400 --> 00:27:23,159
have a way to check however I have had

619
00:27:23,159 --> 00:27:25,260
the request for that

620
00:27:25,260 --> 00:27:28,440
um and then that request Dave went

621
00:27:28,440 --> 00:27:31,020
strangely silent so

622
00:27:31,020 --> 00:27:34,940
um I'm not sure where we go from there

623
00:27:39,179 --> 00:27:41,640
okay uh sorry then

624
00:27:41,640 --> 00:27:43,740
um are there any other uh open issues

625
00:27:43,740 --> 00:27:45,779
that anyone's aware of

626
00:27:45,779 --> 00:27:47,400
it's the first time I've ever witnessed

627
00:27:47,400 --> 00:27:50,539
Dave have a cash Miss

628
00:27:50,539 --> 00:27:54,140
cash overflow

629
00:27:55,820 --> 00:27:59,400
in that case I think that is it we we do

630
00:27:59,400 --> 00:28:02,400
have I'd be interested if anyone has

631
00:28:02,400 --> 00:28:04,740
review uh or is interested in reviewing

632
00:28:04,740 --> 00:28:07,320
the uh this document I'd appreciate

633
00:28:07,320 --> 00:28:09,779
reviews in general but also specifically

634
00:28:09,779 --> 00:28:13,940
on those two introduced new commands

635
00:28:15,900 --> 00:28:17,220
okay this one didn't come up with the

636
00:28:17,220 --> 00:28:18,840
heck though this one didn't come up at

637
00:28:18,840 --> 00:28:21,179
the hackathon but I I have the Instinct

638
00:28:21,179 --> 00:28:23,580
that it will at some point if I don't do

639
00:28:23,580 --> 00:28:25,380
it

640
00:28:25,380 --> 00:28:28,380
foreign

641
00:28:32,760 --> 00:28:36,059
so are you able to are you able to uh

642
00:28:36,059 --> 00:28:38,460
say more about what the actual issue was

643
00:28:38,460 --> 00:28:41,120
or should we just take that offline

644
00:28:41,120 --> 00:28:44,840
okay perfect okay

645
00:28:45,059 --> 00:28:48,059
I don't see harness in the room no I

646
00:28:48,059 --> 00:28:50,340
believe that Ken is gonna do the

647
00:28:50,340 --> 00:28:54,418
firmware encryption live okay yep

648
00:28:58,080 --> 00:29:00,799
thank you

649
00:29:07,200 --> 00:29:10,220
okay uh Kentucky

650
00:29:10,220 --> 00:29:15,860
of this document the next slide please

651
00:29:15,960 --> 00:29:19,679
yeah uh we are still uh improving our

652
00:29:19,679 --> 00:29:23,940
document uh yeah and David Brown uh

653
00:29:23,940 --> 00:29:26,179
joined of course as

654
00:29:26,179 --> 00:29:30,320
and uh we have some dependency on other

655
00:29:30,320 --> 00:29:34,020
documents uh we are

656
00:29:34,020 --> 00:29:35,840
still

657
00:29:35,840 --> 00:29:38,880
discussing in quasi working group like

658
00:29:38,880 --> 00:29:41,960
causing hpk and also called the AES and

659
00:29:41,960 --> 00:29:45,480
ASC CBC mode uh

660
00:29:45,480 --> 00:29:48,480
and as you can notice the title is

661
00:29:48,480 --> 00:29:51,480
changed uh the software encryption with

662
00:29:51,480 --> 00:29:55,440
suit manifest into encrypted payloads in

663
00:29:55,440 --> 00:29:57,179
suit manifest

664
00:29:57,179 --> 00:30:01,200
and we are still improving the text uh

665
00:30:01,200 --> 00:30:05,159
in the document and we have new uh

666
00:30:05,159 --> 00:30:08,899
example approach to uh

667
00:30:08,899 --> 00:30:12,360
delivery the integrated firmware into to

668
00:30:12,360 --> 00:30:15,299
device next slide please

669
00:30:15,299 --> 00:30:19,140
uh simple uh this is old approach and I

670
00:30:19,140 --> 00:30:21,179
don't want to explain it so next slide

671
00:30:21,179 --> 00:30:23,360
please

672
00:30:23,580 --> 00:30:27,059
yeah this is new idea uh the

673
00:30:27,059 --> 00:30:29,960
uh

674
00:30:30,539 --> 00:30:33,419
the Manifest is uh signed by the

675
00:30:33,419 --> 00:30:37,399
Manifest Creator you know so the and now

676
00:30:37,399 --> 00:30:41,340
the encryption aim for is inside the

677
00:30:41,340 --> 00:30:44,220
Manifest so it is signed by

678
00:30:44,220 --> 00:30:45,840
someone

679
00:30:45,840 --> 00:30:50,039
and uh it requires uh if they also

680
00:30:50,039 --> 00:30:52,020
create the Manifest

681
00:30:52,020 --> 00:30:56,880
nobody can not change the Manifest so it

682
00:30:56,880 --> 00:30:59,700
requires distribution system to create a

683
00:30:59,700 --> 00:31:01,159
second manifest

684
00:31:01,159 --> 00:31:04,320
uh with a dependency resolution

685
00:31:04,320 --> 00:31:06,600
mechanism

686
00:31:06,600 --> 00:31:11,760
and so this is another story but so I I

687
00:31:11,760 --> 00:31:16,260
explained it later and

688
00:31:18,120 --> 00:31:21,860
yeah in this draft we do not uh

689
00:31:21,860 --> 00:31:25,380
exemplify the dependency solution so

690
00:31:25,380 --> 00:31:28,559
just simple one the author creates uh

691
00:31:28,559 --> 00:31:31,620
encrypted firmware and its manifest and

692
00:31:31,620 --> 00:31:34,799
deliver it to the device so next price

693
00:31:34,799 --> 00:31:38,700
please this is the example

694
00:31:38,700 --> 00:31:41,520
up could you tilt the microphone okay

695
00:31:41,520 --> 00:31:45,360
yeah that helps perfect yeah next right

696
00:31:45,360 --> 00:31:47,600
please

697
00:31:47,600 --> 00:31:52,760
uh okay at next slide please okay hello

698
00:31:52,760 --> 00:31:54,320
yeah

699
00:31:54,320 --> 00:31:58,860
uh with this case as you notice the

700
00:31:58,860 --> 00:32:00,899
the uh

701
00:32:00,899 --> 00:32:04,860
oh it's so so tiny

702
00:32:04,860 --> 00:32:06,120
oh

703
00:32:06,120 --> 00:32:09,360
yeah so the as I said the encryption

704
00:32:09,360 --> 00:32:13,980
info is inside install uh command so

705
00:32:13,980 --> 00:32:16,860
this is signed by author

706
00:32:16,860 --> 00:32:20,640
so the device can decrypt it with this

707
00:32:20,640 --> 00:32:23,820
parameter next side please

708
00:32:23,820 --> 00:32:27,480
and now we are trying to export in this

709
00:32:27,480 --> 00:32:30,320
example to multiple trust domains draft

710
00:32:30,320 --> 00:32:34,440
so this is a little bit complicated uh

711
00:32:34,440 --> 00:32:37,740
that they also create a go firmware and

712
00:32:37,740 --> 00:32:40,740
it's manifest and then deliver it to the

713
00:32:40,740 --> 00:32:43,140
distribution system the distribution

714
00:32:43,140 --> 00:32:47,880
system creates uh encrypted firmware

715
00:32:47,880 --> 00:32:51,720
and it's manifest so there there are two

716
00:32:51,720 --> 00:32:55,260
manifests and encrypted firmware to be

717
00:32:55,260 --> 00:32:57,720
sent to the device

718
00:32:57,720 --> 00:33:00,960
so first of all the distance systems

719
00:33:00,960 --> 00:33:04,799
manifest contains a command to fetch or

720
00:33:04,799 --> 00:33:08,460
such manifest and encrypted firmware and

721
00:33:08,460 --> 00:33:10,080
how to decrypt it

722
00:33:10,080 --> 00:33:13,740
and lastly that it triggers also's

723
00:33:13,740 --> 00:33:14,700
manifest

724
00:33:14,700 --> 00:33:17,880
the osis manifest is quite simple so

725
00:33:17,880 --> 00:33:21,779
just check the validity of the decrypted

726
00:33:21,779 --> 00:33:24,000
firmware

727
00:33:24,000 --> 00:33:26,640
maybe that's all right uh we are still

728
00:33:26,640 --> 00:33:30,179
tackling to create it and also improve

729
00:33:30,179 --> 00:33:34,679
our example manifest because uh with

730
00:33:34,679 --> 00:33:37,919
this scenario the the author have to uh

731
00:33:37,919 --> 00:33:40,640
Trust on the distribution system because

732
00:33:40,640 --> 00:33:45,419
uh the they also have to disclose the

733
00:33:45,419 --> 00:33:48,720
raw firmware to this to the distribution

734
00:33:48,720 --> 00:33:52,320
system and also the device must trust

735
00:33:52,320 --> 00:33:55,679
the distribution system because to

736
00:33:55,679 --> 00:33:58,320
process the uh the Manifest which is

737
00:33:58,320 --> 00:34:02,399
created by this distribution system uh

738
00:34:02,399 --> 00:34:04,640
it requires to depend

739
00:34:04,640 --> 00:34:08,520
trust the uh the Distribution Systems

740
00:34:08,520 --> 00:34:13,800
public key so it is uh it introduces uh

741
00:34:13,800 --> 00:34:17,940
more new uh security considerations so

742
00:34:17,940 --> 00:34:20,940
maybe we we have to improve these

743
00:34:20,940 --> 00:34:22,500
Solutions

744
00:34:22,500 --> 00:34:24,060
yeah that's all

745
00:34:24,060 --> 00:34:29,000
and any comments and advices are welcome

746
00:34:29,219 --> 00:34:31,679
uh this is a day favor

747
00:34:31,679 --> 00:34:32,760
um case there's any way that wasn't

748
00:34:32,760 --> 00:34:34,679
following this what are the reasons for

749
00:34:34,679 --> 00:34:36,359
the rename that Ken mentioned at the

750
00:34:36,359 --> 00:34:38,879
beginning is that uh teep uses this not

751
00:34:38,879 --> 00:34:41,460
just for code but also for what type

752
00:34:41,460 --> 00:34:44,159
calls personalization data so in other

753
00:34:44,159 --> 00:34:46,020
words the code itself isn't necessarily

754
00:34:46,020 --> 00:34:48,300
secret but the config file or the config

755
00:34:48,300 --> 00:34:50,099
data around that may need to be

756
00:34:50,099 --> 00:34:52,560
encrypted and so this abstracts it

757
00:34:52,560 --> 00:34:54,899
because it's just a payload it's a file

758
00:34:54,899 --> 00:34:56,639
that could be placed or something that

759
00:34:56,639 --> 00:34:57,960
could be stored in storage whether it's

760
00:34:57,960 --> 00:34:59,520
code or data doesn't matter for the

761
00:34:59,520 --> 00:35:00,839
purpose of this is that was why the

762
00:35:00,839 --> 00:35:02,880
rename because T needs it for both code

763
00:35:02,880 --> 00:35:05,720
and for data

764
00:35:08,880 --> 00:35:12,480
yeah this is so complicated I don't want

765
00:35:12,480 --> 00:35:16,700
to explain this that's your last life

766
00:35:16,700 --> 00:35:23,180
yeah you can check this one but uh yeah

767
00:35:25,740 --> 00:35:28,500
uh any questions or any concerns with

768
00:35:28,500 --> 00:35:30,599
the shift in Direction which is a

769
00:35:30,599 --> 00:35:34,339
significant one in this draft

770
00:35:40,500 --> 00:35:43,700
all right thank you Ken

771
00:35:45,060 --> 00:35:47,240
foreign

772
00:35:51,320 --> 00:35:54,000
at the mic I guess the the only thing

773
00:35:54,000 --> 00:35:57,839
I'd note is that we probably could

774
00:35:57,839 --> 00:36:01,619
revisit a more distributable version if

775
00:36:01,619 --> 00:36:04,020
that's something that's uh that's

776
00:36:04,020 --> 00:36:07,320
demanded from the working group I'm not

777
00:36:07,320 --> 00:36:09,180
saying that we would change this draft

778
00:36:09,180 --> 00:36:11,400
I'm saying there's the possibility that

779
00:36:11,400 --> 00:36:13,920
we could look at a

780
00:36:13,920 --> 00:36:16,980
um compatible or the one that doesn't

781
00:36:16,980 --> 00:36:19,260
use dependencies but uses a key

782
00:36:19,260 --> 00:36:22,820
distribution mechanism instead

783
00:36:36,560 --> 00:36:39,560
Independence

784
00:36:42,200 --> 00:36:44,460
we're going to change the order now

785
00:36:44,460 --> 00:36:46,140
because Dave just got his five minute

786
00:36:46,140 --> 00:36:48,540
warning to go uh

787
00:36:48,540 --> 00:36:52,260
next door so we're gonna do

788
00:36:52,260 --> 00:36:53,280
um

789
00:36:53,280 --> 00:36:57,900
mud and then we're going to do uh MTI

790
00:36:57,900 --> 00:36:59,460
while Dave's gone

791
00:36:59,460 --> 00:37:04,140
[Music]

792
00:37:04,140 --> 00:37:05,820
yes are you commenting on the last one

793
00:37:05,820 --> 00:37:08,880
no no no I'm doing the time machine

794
00:37:08,880 --> 00:37:10,200
thing again

795
00:37:10,200 --> 00:37:12,500
uh sorry

796
00:37:12,500 --> 00:37:15,119
I really forgot and there was this

797
00:37:15,119 --> 00:37:17,460
comment about when you have close with

798
00:37:17,460 --> 00:37:19,500
that you wanted program instead that

799
00:37:19,500 --> 00:37:21,780
would be perfect that would be a blocker

800
00:37:21,780 --> 00:37:24,000
because it would take way longer yes

801
00:37:24,000 --> 00:37:26,760
accommodating for that is fine

802
00:37:26,760 --> 00:37:28,320
um but don't expect as of course what is

803
00:37:28,320 --> 00:37:29,880
basically done so maybe if you want this

804
00:37:29,880 --> 00:37:31,320
done and if we want this done maybe not

805
00:37:31,320 --> 00:37:34,079
wait for Quorum but you know

806
00:37:34,079 --> 00:37:35,940
yeah that that's the reason that it

807
00:37:35,940 --> 00:37:39,260
still contains a coastwind today

808
00:37:42,839 --> 00:37:44,940
okay uh wait a minute how does that

809
00:37:44,940 --> 00:37:47,220
affect the working group last call this

810
00:37:47,220 --> 00:37:52,399
was for the uh update management so

811
00:37:52,800 --> 00:37:55,200
sorry when he jumps way back on the

812
00:37:55,200 --> 00:37:58,200
agenda I've got to follow the gotta snap

813
00:37:58,200 --> 00:38:00,799
the pointer

814
00:38:02,940 --> 00:38:04,619
okay

815
00:38:04,619 --> 00:38:05,280
um

816
00:38:05,280 --> 00:38:07,560
you you could go in the YouTube pad and

817
00:38:07,560 --> 00:38:08,570
fix it

818
00:38:08,570 --> 00:38:12,380
[Laughter]

819
00:38:13,760 --> 00:38:16,320
we're jumping to the integration between

820
00:38:16,320 --> 00:38:18,000
suit and mud

821
00:38:18,000 --> 00:38:20,520
uh next slide please

822
00:38:20,520 --> 00:38:22,800
so the just to give a summary of what

823
00:38:22,800 --> 00:38:24,720
this is for anyone who hasn't looked at

824
00:38:24,720 --> 00:38:26,880
it before the idea is essentially this

825
00:38:26,880 --> 00:38:30,060
uh mud files are a mechanism that allows

826
00:38:30,060 --> 00:38:35,160
devices to point to a URL which contains

827
00:38:35,160 --> 00:38:38,099
a document that tells Network

828
00:38:38,099 --> 00:38:41,339
infrastructure what they should and

829
00:38:41,339 --> 00:38:43,980
shouldn't access over their intranet and

830
00:38:43,980 --> 00:38:46,440
possibly over the internet

831
00:38:46,440 --> 00:38:48,079
um

832
00:38:48,079 --> 00:38:51,060
what this does is provides a new

833
00:38:51,060 --> 00:38:54,000
reporting mechanism for those URLs the

834
00:38:54,000 --> 00:38:57,420
argument here is that uh it would be

835
00:38:57,420 --> 00:39:00,240
nice if your network infrastructure knew

836
00:39:00,240 --> 00:39:03,540
what this was and had those files

837
00:39:03,540 --> 00:39:05,940
available before it ever sees that

838
00:39:05,940 --> 00:39:07,020
device

839
00:39:07,020 --> 00:39:10,500
and if you're receiving firmware updates

840
00:39:10,500 --> 00:39:12,180
those

841
00:39:12,180 --> 00:39:15,420
access requirements can change so having

842
00:39:15,420 --> 00:39:17,520
those two things coupled together again

843
00:39:17,520 --> 00:39:21,060
makes sense further to that some of the

844
00:39:21,060 --> 00:39:22,920
reporting mechanisms that were defined

845
00:39:22,920 --> 00:39:26,099
for mud originally are unsecured and

846
00:39:26,099 --> 00:39:29,099
leaving an unsecured way of reporting

847
00:39:29,099 --> 00:39:31,680
security information doesn't make a lot

848
00:39:31,680 --> 00:39:34,500
of sense to me at least there was one

849
00:39:34,500 --> 00:39:37,800
mechanism defined that was secured but

850
00:39:37,800 --> 00:39:41,220
that mechanism was done through device

851
00:39:41,220 --> 00:39:45,060
certificates and while that is a one way

852
00:39:45,060 --> 00:39:47,700
to get the job done there are other ways

853
00:39:47,700 --> 00:39:50,460
to do it as well and particularly the

854
00:39:50,460 --> 00:39:52,859
interesting thing about this approach is

855
00:39:52,859 --> 00:39:55,619
that it allows us to link it in with

856
00:39:55,619 --> 00:39:58,079
attestation as well so you can attest

857
00:39:58,079 --> 00:39:59,700
the software that a device is running

858
00:39:59,700 --> 00:40:02,640
and using that information about the

859
00:40:02,640 --> 00:40:05,760
software you can then determine what

860
00:40:05,760 --> 00:40:08,160
network access requirements it has I've

861
00:40:08,160 --> 00:40:10,800
lost the slides yes we have okay I'm

862
00:40:10,800 --> 00:40:13,380
trying to figure out why so so this is

863
00:40:13,380 --> 00:40:15,660
the the idea behind it

864
00:40:15,660 --> 00:40:18,000
um I I can talk probably off of part of

865
00:40:18,000 --> 00:40:19,440
that first slide from memory so I'll do

866
00:40:19,440 --> 00:40:23,640
my best uh the

867
00:40:23,640 --> 00:40:26,460
the what we've defined in this draft is

868
00:40:26,460 --> 00:40:28,619
mostly just

869
00:40:28,619 --> 00:40:32,460
um a mechanism to report either a URI

870
00:40:32,460 --> 00:40:34,920
and a signer key

871
00:40:34,920 --> 00:40:41,400
or a full copy of the mud file

872
00:40:41,400 --> 00:40:43,560
um and that's it this that is the draft

873
00:40:43,560 --> 00:40:45,839
in summary there is precious little else

874
00:40:45,839 --> 00:40:48,119
that's there so it's got similar

875
00:40:48,119 --> 00:40:49,920
benefits to certificate bindings but it

876
00:40:49,920 --> 00:40:51,119
doesn't mean you need device specific

877
00:40:51,119 --> 00:40:52,680
certificates

878
00:40:52,680 --> 00:40:56,040
um it does require device fingerprinting

879
00:40:56,040 --> 00:40:58,500
or attestation in your network so it's

880
00:40:58,500 --> 00:41:00,180
just different ways to solve the same

881
00:41:00,180 --> 00:41:01,260
problem

882
00:41:01,260 --> 00:41:05,220
um I with different trade-offs uh next

883
00:41:05,220 --> 00:41:07,640
slide please

884
00:41:07,800 --> 00:41:10,800
last slide and also last slide there's

885
00:41:10,800 --> 00:41:12,780
been very little activity on this I

886
00:41:12,780 --> 00:41:14,700
don't know if just no one is interested

887
00:41:14,700 --> 00:41:16,200
in it in which case maybe we don't need

888
00:41:16,200 --> 00:41:17,460
it

889
00:41:17,460 --> 00:41:20,640
um there is an open issue about how we

890
00:41:20,640 --> 00:41:23,640
handle updating mud files

891
00:41:23,640 --> 00:41:25,800
um specifically if you deliver the full

892
00:41:25,800 --> 00:41:27,720
text of a mud file does that imply it

893
00:41:27,720 --> 00:41:29,760
never changes or is there a way to

894
00:41:29,760 --> 00:41:32,339
override it so that's that's essentially

895
00:41:32,339 --> 00:41:36,320
the one open issue around this

896
00:41:36,960 --> 00:41:39,560
foreign

897
00:41:43,640 --> 00:41:45,599
Richardson um

898
00:41:45,599 --> 00:41:48,540
I I did read the document some

899
00:41:48,540 --> 00:41:51,240
ihfs to go

900
00:41:51,240 --> 00:41:53,460
um so you just I was going to say

901
00:41:53,460 --> 00:41:55,140
something positive and then you just

902
00:41:55,140 --> 00:41:56,400
said well you just said we're delivering

903
00:41:56,400 --> 00:41:58,200
the full text of the mud file I didn't

904
00:41:58,200 --> 00:42:00,000
don't remember that ever being the case

905
00:42:00,000 --> 00:42:01,859
I thought it was only the URL there was

906
00:42:01,859 --> 00:42:03,480
an option to do it that way well I think

907
00:42:03,480 --> 00:42:06,540
that's probably a silly thing okay

908
00:42:06,540 --> 00:42:08,880
um so that probably solves your problem

909
00:42:08,880 --> 00:42:10,560
um don't do that

910
00:42:10,560 --> 00:42:12,180
um but

911
00:42:12,180 --> 00:42:14,160
um so there's a document in opto AWG

912
00:42:14,160 --> 00:42:16,500
which which uh I think will finally get

913
00:42:16,500 --> 00:42:18,780
to where can we last call this morning

914
00:42:18,780 --> 00:42:22,440
um on once you have one securely how do

915
00:42:22,440 --> 00:42:24,660
you update and what are our reasonable

916
00:42:24,660 --> 00:42:27,839
update path and you can do it relatively

917
00:42:27,839 --> 00:42:29,520
securely

918
00:42:29,520 --> 00:42:31,020
um so I think that actually solves most

919
00:42:31,020 --> 00:42:33,599
of the problem but I think that you can

920
00:42:33,599 --> 00:42:38,099
deliver a unique URL per firmware I

921
00:42:38,099 --> 00:42:40,020
think that's the right way to do it

922
00:42:40,020 --> 00:42:42,960
even if the I would say it's the right

923
00:42:42,960 --> 00:42:44,640
way to do it even if there's no

924
00:42:44,640 --> 00:42:47,579
functional changes in the firmware okay

925
00:42:47,579 --> 00:42:49,560
just you just say this is the new

926
00:42:49,560 --> 00:42:51,420
version and this also lets you do

927
00:42:51,420 --> 00:42:53,820
because as you may know you can also now

928
00:42:53,820 --> 00:42:55,680
Point there's multiple ways of doing

929
00:42:55,680 --> 00:42:57,599
this now you can point to an s-bomb from

930
00:42:57,599 --> 00:43:00,060
the mud file and so while that might not

931
00:43:00,060 --> 00:43:00,960
be

932
00:43:00,960 --> 00:43:03,300
like we could do that through suit as

933
00:43:03,300 --> 00:43:05,099
well there's multiple ways of doing this

934
00:43:05,099 --> 00:43:06,599
I don't think it's a terrible thing to

935
00:43:06,599 --> 00:43:09,720
have a variety of ways of being able to

936
00:43:09,720 --> 00:43:13,260
tell the owner operator Network

937
00:43:13,260 --> 00:43:15,359
this device may be vulnerable to this

938
00:43:15,359 --> 00:43:18,599
dve right that's what we want to do

939
00:43:18,599 --> 00:43:20,520
yeah I actually just go I think you're

940
00:43:20,520 --> 00:43:22,200
done you're getting the reviews because

941
00:43:22,200 --> 00:43:24,480
I think you're done okay cool

942
00:43:24,480 --> 00:43:26,700
sounds good

943
00:43:26,700 --> 00:43:27,900
does that mean it should go to working

944
00:43:27,900 --> 00:43:30,619
group last call

945
00:43:32,880 --> 00:43:34,440
I'll ask that when people are through

946
00:43:34,440 --> 00:43:36,780
common things so hi this is Hank I was

947
00:43:36,780 --> 00:43:37,859
just

948
00:43:37,859 --> 00:43:41,040
um I was writing modifieds for rats back

949
00:43:41,040 --> 00:43:42,720
in the day so mighty rats there will be

950
00:43:42,720 --> 00:43:45,540
Paul postponed them because uh

951
00:43:45,540 --> 00:43:48,180
um the implementations were not there a

952
00:43:48,180 --> 00:43:50,040
year ago were there now so that we're

953
00:43:50,040 --> 00:43:52,040
returning to that so you are not

954
00:43:52,040 --> 00:43:55,200
explicitly fire defining a mod file here

955
00:43:55,200 --> 00:43:58,200
no yeah so um

956
00:43:58,200 --> 00:44:00,300
um isn't there a need for that why is

957
00:44:00,300 --> 00:44:02,700
that a no just as a nutshell why do I

958
00:44:02,700 --> 00:44:04,380
need to define a mud file if I'm just

959
00:44:04,380 --> 00:44:06,180
pointing a URI at it

960
00:44:06,180 --> 00:44:08,099
because maybe there are some suit

961
00:44:08,099 --> 00:44:10,980
specific cards no that's not what this

962
00:44:10,980 --> 00:44:13,920
is for this is for uh giving your

963
00:44:13,920 --> 00:44:15,260
network infrastructure

964
00:44:15,260 --> 00:44:17,700
infrastructure so it's the native okay

965
00:44:17,700 --> 00:44:20,779
that's fine thank you

966
00:44:20,940 --> 00:44:23,339
so it sounds like the action item that

967
00:44:23,339 --> 00:44:25,380
that Michael is suggesting is to remove

968
00:44:25,380 --> 00:44:28,560
the the encapsulated mud file and stick

969
00:44:28,560 --> 00:44:31,260
with just a URI and signer

970
00:44:31,260 --> 00:44:33,960
that's what I heard okay

971
00:44:33,960 --> 00:44:36,540
so I think we need to implement that

972
00:44:36,540 --> 00:44:39,540
before we do uh working group last call

973
00:44:39,540 --> 00:44:41,160
what I'm hearing is

974
00:44:41,160 --> 00:44:43,859
get that update done then do working

975
00:44:43,859 --> 00:44:45,900
group last call should this be blocked

976
00:44:45,900 --> 00:44:50,060
on the the last call of the Manifest

977
00:44:50,940 --> 00:44:53,520
it shouldn't complete before manifest

978
00:44:53,520 --> 00:44:56,420
completely understood

979
00:44:56,579 --> 00:44:59,060
okay

980
00:45:07,200 --> 00:45:10,380
student report no now we're doing MTI

981
00:45:10,380 --> 00:45:11,819
last one

982
00:45:11,819 --> 00:45:14,160
oh and I've got the wrong date on or

983
00:45:14,160 --> 00:45:16,200
oops next slide quick before anyone

984
00:45:16,200 --> 00:45:18,660
notices I was just gonna say on the last

985
00:45:18,660 --> 00:45:21,839
Point um if if um the timing is right we

986
00:45:21,839 --> 00:45:25,279
could submit them as a bundle

987
00:45:26,599 --> 00:45:31,099
it'll get bundled whether we do or not

988
00:45:32,099 --> 00:45:34,400
okay

989
00:45:36,420 --> 00:45:40,319
okay so the point of this draft is to

990
00:45:40,319 --> 00:45:42,119
ensure on interoperability with a

991
00:45:42,119 --> 00:45:44,160
minimal crypto Suite now I want to

992
00:45:44,160 --> 00:45:45,599
prefix this I think I'm going to say

993
00:45:45,599 --> 00:45:47,160
this again multiple times but the

994
00:45:47,160 --> 00:45:49,619
important thing here is that this is

995
00:45:49,619 --> 00:45:52,200
specifically for constrained node

996
00:45:52,200 --> 00:45:54,560
firmware update I'm not saying anything

997
00:45:54,560 --> 00:45:57,480
about uh mandatory to implement

998
00:45:57,480 --> 00:46:00,660
algorithms for tape I'm sure Dave has

999
00:46:00,660 --> 00:46:03,060
ephemerally heard me somewhere

1000
00:46:03,060 --> 00:46:04,800
um so that's that's an important

1001
00:46:04,800 --> 00:46:07,440
consideration in this discussion that

1002
00:46:07,440 --> 00:46:09,839
this is specifically for constrained

1003
00:46:09,839 --> 00:46:12,240
node update that we're talking about

1004
00:46:12,240 --> 00:46:14,640
these crypto Suites

1005
00:46:14,640 --> 00:46:15,300
um

1006
00:46:15,300 --> 00:46:18,240
so it's an asymmetric problem unlike

1007
00:46:18,240 --> 00:46:21,119
many of the interop algorithm

1008
00:46:21,119 --> 00:46:22,880
discussions we have

1009
00:46:22,880 --> 00:46:25,260
mandatory to implement means something

1010
00:46:25,260 --> 00:46:27,720
different for the author than it does

1011
00:46:27,720 --> 00:46:30,420
for the constraint node the important

1012
00:46:30,420 --> 00:46:32,940
thing here is that your manifest author

1013
00:46:32,940 --> 00:46:35,099
should be able to make a manifest for

1014
00:46:35,099 --> 00:46:37,140
any device

1015
00:46:37,140 --> 00:46:38,540
sorry

1016
00:46:38,540 --> 00:46:40,800
the Manifest author should be able to

1017
00:46:40,800 --> 00:46:43,319
make a manifest for any device an

1018
00:46:43,319 --> 00:46:45,900
intermediary that processes a manifest

1019
00:46:45,900 --> 00:46:48,420
should be able to process a manifest for

1020
00:46:48,420 --> 00:46:53,940
any device but a device does not need to

1021
00:46:53,940 --> 00:46:56,880
be able to process any manifest it only

1022
00:46:56,880 --> 00:46:58,920
needs to be able to process the Manifest

1023
00:46:58,920 --> 00:47:01,380
that's aimed at it and if the Manifest

1024
00:47:01,380 --> 00:47:03,960
author can't work out which crypto

1025
00:47:03,960 --> 00:47:05,760
algorithm to use for that there are

1026
00:47:05,760 --> 00:47:07,740
bigger problems problems that we can

1027
00:47:07,740 --> 00:47:09,839
solve with suit report

1028
00:47:09,839 --> 00:47:13,880
um so the that's the the fundamental

1029
00:47:13,880 --> 00:47:16,319
consideration here in that this is an

1030
00:47:16,319 --> 00:47:18,480
asymmetric MTI it means something

1031
00:47:18,480 --> 00:47:20,940
different for the author than it does

1032
00:47:20,940 --> 00:47:23,099
for the recipient

1033
00:47:23,099 --> 00:47:25,800
and if we don't have appropriate choices

1034
00:47:25,800 --> 00:47:28,380
for constrained nodes they're just going

1035
00:47:28,380 --> 00:47:30,740
to ignore this document

1036
00:47:30,740 --> 00:47:32,880
that's one reason that it's been

1037
00:47:32,880 --> 00:47:34,980
separated out of the suit manifest the

1038
00:47:34,980 --> 00:47:36,480
other reason is that it's likely to

1039
00:47:36,480 --> 00:47:38,339
change over time and be obsolete a bunch

1040
00:47:38,339 --> 00:47:40,140
of times

1041
00:47:40,140 --> 00:47:42,980
next slide please

1042
00:47:43,619 --> 00:47:45,599
so the current status is we're defining

1043
00:47:45,599 --> 00:47:48,140
four MTI algorithms

1044
00:47:48,140 --> 00:47:50,460
they're all mandatory to implement for

1045
00:47:50,460 --> 00:47:52,740
manifest authors and intermediaries but

1046
00:47:52,740 --> 00:47:54,839
manifest processors are simply required

1047
00:47:54,839 --> 00:47:57,540
to implement at least one it's scoped

1048
00:47:57,540 --> 00:48:00,119
specifically as I said to iot Firmware

1049
00:48:00,119 --> 00:48:02,520
deployment use cases and constrained

1050
00:48:02,520 --> 00:48:03,859
nodes at that

1051
00:48:03,859 --> 00:48:07,079
uh one of the questions I have for the

1052
00:48:07,079 --> 00:48:09,180
working group is whether we should

1053
00:48:09,180 --> 00:48:11,160
require all authors and intermediaries

1054
00:48:11,160 --> 00:48:13,140
to implement the symmetric algorithm

1055
00:48:13,140 --> 00:48:16,319
Suite that's defined I'm not sure that's

1056
00:48:16,319 --> 00:48:19,260
a good idea so if there's any feedback

1057
00:48:19,260 --> 00:48:22,980
on that maybe that's an option and that

1058
00:48:22,980 --> 00:48:26,099
one's not mandatory then

1059
00:48:26,099 --> 00:48:29,160
next slide please uh unless there's

1060
00:48:29,160 --> 00:48:34,140
events I was thinking that if a cipher

1061
00:48:34,140 --> 00:48:36,000
Suite is implemented we probably want it

1062
00:48:36,000 --> 00:48:39,720
to be one the one in firmware encryption

1063
00:48:39,720 --> 00:48:41,700
it's since it's already bundled there

1064
00:48:41,700 --> 00:48:44,240
why I say anything here

1065
00:48:44,240 --> 00:48:46,560
I think the point was that the firmware

1066
00:48:46,560 --> 00:48:48,720
encryption draft won't need to be

1067
00:48:48,720 --> 00:48:51,980
obsoleted each time we change algorithms

1068
00:48:51,980 --> 00:48:55,339
it won't

1069
00:48:55,560 --> 00:48:57,960
it's got the algorithm identifiers there

1070
00:48:57,960 --> 00:49:01,579
you can do anything from cozy

1071
00:49:02,220 --> 00:49:03,420
but

1072
00:49:03,420 --> 00:49:06,079
confused

1073
00:49:06,900 --> 00:49:09,480
I think I'm I'm misunderstanding

1074
00:49:09,480 --> 00:49:11,280
something here okay

1075
00:49:11,280 --> 00:49:13,740
um ask your question okay so are you

1076
00:49:13,740 --> 00:49:15,720
saying that we're defining an algorithm

1077
00:49:15,720 --> 00:49:18,480
Suite in the firmware encryption draft

1078
00:49:18,480 --> 00:49:21,960
and therefore we don't need this yes

1079
00:49:21,960 --> 00:49:23,819
but what happens when we decide that

1080
00:49:23,819 --> 00:49:25,800
that algorithm Suite is wrong

1081
00:49:25,800 --> 00:49:27,660
then there'll be another document that

1082
00:49:27,660 --> 00:49:30,720
comes and replaces it or it just you

1083
00:49:30,720 --> 00:49:32,760
pick something else from the Cozy

1084
00:49:32,760 --> 00:49:36,839
libraries uh the algorithm registry

1085
00:49:36,839 --> 00:49:38,460
and as long as the code points are there

1086
00:49:38,460 --> 00:49:40,020
it just works

1087
00:49:40,020 --> 00:49:44,540
but how is that mandatory to implement

1088
00:49:44,819 --> 00:49:46,500
right if you're going to mandator if

1089
00:49:46,500 --> 00:49:47,940
you're going to change the mandatory to

1090
00:49:47,940 --> 00:49:49,079
implement you're going to have somebody

1091
00:49:49,079 --> 00:49:51,119
at the dock

1092
00:49:51,119 --> 00:49:53,640
yes the update which document the

1093
00:49:53,640 --> 00:49:56,160
firmware encryption document I think

1094
00:49:56,160 --> 00:49:59,339
that Brendan's point is that it that he

1095
00:49:59,339 --> 00:50:01,740
would rather just rev this document and

1096
00:50:01,740 --> 00:50:03,900
have all the things in one place like

1097
00:50:03,900 --> 00:50:06,359
we've done an ipsec

1098
00:50:06,359 --> 00:50:11,099
I see okay so um where we've had to

1099
00:50:11,099 --> 00:50:13,500
define a new mode you're still gonna

1100
00:50:13,500 --> 00:50:16,260
expect the new say block Cipher with the

1101
00:50:16,260 --> 00:50:18,780
same mode as a future yeah that's the

1102
00:50:18,780 --> 00:50:21,180
idea okay I don't have a problem with

1103
00:50:21,180 --> 00:50:22,920
that

1104
00:50:22,920 --> 00:50:24,180
okay

1105
00:50:24,180 --> 00:50:25,020
um

1106
00:50:25,020 --> 00:50:26,700
welcome back

1107
00:50:26,700 --> 00:50:29,160
um so you've defined four profiles yes

1108
00:50:29,160 --> 00:50:34,079
uh one of them is has HSS LSM yes right

1109
00:50:34,079 --> 00:50:35,940
um which I'm very enthusiastic up Russ

1110
00:50:35,940 --> 00:50:37,859
and I had a back and forth about LMS

1111
00:50:37,859 --> 00:50:41,400
excuse me I'll never get if I could have

1112
00:50:41,400 --> 00:50:43,680
you know simple syllables instead of

1113
00:50:43,680 --> 00:50:46,500
lots of letters to say I'll remember it

1114
00:50:46,500 --> 00:50:48,240
um Lucy in the Sky with Diamonds

1115
00:50:48,240 --> 00:50:50,400
whatever something like that right

1116
00:50:50,400 --> 00:50:51,359
um

1117
00:50:51,359 --> 00:50:53,220
um so Russ and I said so who actually

1118
00:50:53,220 --> 00:50:55,619
implements hsms with

1119
00:50:55,619 --> 00:50:56,940
LS

1120
00:50:56,940 --> 00:51:00,839
HSS LMS see I can't do it now right too

1121
00:51:00,839 --> 00:51:03,480
many letters there's at least two so you

1122
00:51:03,480 --> 00:51:05,760
told me to open source okay you told me

1123
00:51:05,760 --> 00:51:06,780
to

1124
00:51:06,780 --> 00:51:08,640
um one of them is defunct I had a long

1125
00:51:08,640 --> 00:51:12,180
conversation with Randy and and um

1126
00:51:12,180 --> 00:51:15,300
Rob okay it's really defunct you really

1127
00:51:15,300 --> 00:51:17,880
can't get the hardware uh okay that was

1128
00:51:17,880 --> 00:51:21,119
a third one the the cryptek is the third

1129
00:51:21,119 --> 00:51:22,079
one

1130
00:51:22,079 --> 00:51:24,240
okay so the third so there's a Cisco

1131
00:51:24,240 --> 00:51:28,440
implementation and there's the pi uh

1132
00:51:28,440 --> 00:51:30,720
HSS LMS

1133
00:51:30,720 --> 00:51:32,819
okay well okay so let me tell you what I

1134
00:51:32,819 --> 00:51:34,740
I know okay all right

1135
00:51:34,740 --> 00:51:37,020
um the cryptek one is at this point

1136
00:51:37,020 --> 00:51:40,500
sadly defunct yep okay the hardware is

1137
00:51:40,500 --> 00:51:43,800
unobtainable the the revision to it uh

1138
00:51:43,800 --> 00:51:45,780
got killed by pandemic and now Russian

1139
00:51:45,780 --> 00:51:48,359
sanctions yep okay because the guy who

1140
00:51:48,359 --> 00:51:50,700
did the work is there so and they're not

1141
00:51:50,700 --> 00:51:52,500
likely to ever get new hardware out is

1142
00:51:52,500 --> 00:51:54,599
what I got if their spares you could use

1143
00:51:54,599 --> 00:51:58,319
it there another company was one in

1144
00:51:58,319 --> 00:52:02,160
Ottawa correct who uh surprisingly has

1145
00:52:02,160 --> 00:52:05,099
an office Three Doors Down from mine

1146
00:52:05,099 --> 00:52:07,380
there you go you should be able to find

1147
00:52:07,380 --> 00:52:10,619
them yeah so a of course no one's been

1148
00:52:10,619 --> 00:52:12,540
to that office in three years

1149
00:52:12,540 --> 00:52:13,400
um

1150
00:52:13,400 --> 00:52:16,319
uh but actually I suspect no one's been

1151
00:52:16,319 --> 00:52:19,440
to that office ever that was a a tax uh

1152
00:52:19,440 --> 00:52:22,680
uh office registration for r d credits

1153
00:52:22,680 --> 00:52:25,579
uh so I don't know any of the people

1154
00:52:25,579 --> 00:52:28,440
involved right maybe you do

1155
00:52:28,440 --> 00:52:30,180
um so you know that's interesting okay

1156
00:52:30,180 --> 00:52:31,500
they exist and you say there's a third

1157
00:52:31,500 --> 00:52:34,619
one a Cisco implementation I think that

1158
00:52:34,619 --> 00:52:36,780
that I think that just the community

1159
00:52:36,780 --> 00:52:40,380
needs Assurance a feeling of of safety

1160
00:52:40,380 --> 00:52:43,020
that there's stuff that we can go and

1161
00:52:43,020 --> 00:52:44,640
get that are going to be useful

1162
00:52:44,640 --> 00:52:46,079
otherwise we're going to get a lot of

1163
00:52:46,079 --> 00:52:48,420
push a lot more pushback and I think

1164
00:52:48,420 --> 00:52:51,000
we've got that already and I would just

1165
00:52:51,000 --> 00:52:52,980
like to see people relax and go okay

1166
00:52:52,980 --> 00:52:54,960
it's all right we can handle this okay

1167
00:52:54,960 --> 00:52:57,960
that's the point so would you prefer to

1168
00:52:57,960 --> 00:53:02,520
see this document revved when a more

1169
00:53:02,520 --> 00:53:05,040
available pqc signature algorithm comes

1170
00:53:05,040 --> 00:53:07,520
out

1171
00:53:07,640 --> 00:53:10,380
don't I don't want to wait for that to

1172
00:53:10,380 --> 00:53:13,980
publish it okay I'm happy to to rev it

1173
00:53:13,980 --> 00:53:17,579
in whatever that period is 18 months two

1174
00:53:17,579 --> 00:53:20,339
years six years whatever okay

1175
00:53:20,339 --> 00:53:22,680
um yeah of course we should do that

1176
00:53:22,680 --> 00:53:25,800
right and and if and if we obsolete one

1177
00:53:25,800 --> 00:53:28,819
of our profiles that's okay too because

1178
00:53:28,819 --> 00:53:31,619
we the purpose was to get an upgrade

1179
00:53:31,619 --> 00:53:33,240
path that was the whole point was to get

1180
00:53:33,240 --> 00:53:34,920
the upgrade path and I'm very very

1181
00:53:34,920 --> 00:53:36,420
concerned that people are not going to

1182
00:53:36,420 --> 00:53:39,480
implement the the PQ safely one if they

1183
00:53:39,480 --> 00:53:43,859
feel at all uh anxious about you know

1184
00:53:43,859 --> 00:53:45,480
what they're gonna do they're just like

1185
00:53:45,480 --> 00:53:47,040
oh it's too hard and throw up their

1186
00:53:47,040 --> 00:53:49,759
hands right

1187
00:53:50,099 --> 00:53:52,800
yep I I agree with everything you said

1188
00:53:52,800 --> 00:53:55,619
is there an action item from that yeah I

1189
00:53:55,619 --> 00:53:59,099
have to introduce something okay

1190
00:53:59,099 --> 00:54:01,680
and he wants an introduction next slide

1191
00:54:01,680 --> 00:54:03,919
please

1192
00:54:05,579 --> 00:54:07,980
so these are the algorithms that are

1193
00:54:07,980 --> 00:54:09,480
defined

1194
00:54:09,480 --> 00:54:10,980
um

1195
00:54:10,980 --> 00:54:14,040
we've got one symmetric one post Quantum

1196
00:54:14,040 --> 00:54:15,720
asymmetric that's only kind of post

1197
00:54:15,720 --> 00:54:17,940
Quantum it's post Quantum hybrid because

1198
00:54:17,940 --> 00:54:20,280
there are no standardized key exchange

1199
00:54:20,280 --> 00:54:22,980
algorithms yet

1200
00:54:22,980 --> 00:54:25,880
um the classical asymmetric uh we've got

1201
00:54:25,880 --> 00:54:29,819
es-256 and eddsa uh both of them with

1202
00:54:29,819 --> 00:54:33,240
hpke because uh that seems to be where

1203
00:54:33,240 --> 00:54:35,640
things are headed I think uh they're

1204
00:54:35,640 --> 00:54:37,040
currently listing

1205
00:54:37,040 --> 00:54:41,460
aesgcm but it sounds like AES CTR or AES

1206
00:54:41,460 --> 00:54:44,760
CBC should be coming so I'm not totally

1207
00:54:44,760 --> 00:54:47,460
sure CTR seems to be the direction at

1208
00:54:47,460 --> 00:54:48,660
the moment

1209
00:54:48,660 --> 00:54:51,420
okay uh so there you are

1210
00:54:51,420 --> 00:54:54,240
um so those are what we have on the

1211
00:54:54,240 --> 00:54:58,220
plate at the moment next slide please

1212
00:54:59,040 --> 00:55:00,780
there were two that were obviously

1213
00:55:00,780 --> 00:55:01,920
missing

1214
00:55:01,920 --> 00:55:04,559
um those there might be a need for a

1215
00:55:04,559 --> 00:55:06,900
specialized version of eddsa there I

1216
00:55:06,900 --> 00:55:08,599
don't think there's a Code point for

1217
00:55:08,599 --> 00:55:10,980
ed25519 and cozy

1218
00:55:10,980 --> 00:55:12,359
um but that's kind of an important

1219
00:55:12,359 --> 00:55:14,339
consideration because on a constrained

1220
00:55:14,339 --> 00:55:18,078
node you can handle it differently

1221
00:55:19,380 --> 00:55:22,859
uh day Fair can we go back one slide

1222
00:55:22,859 --> 00:55:25,440
I have a question not a request but it's

1223
00:55:25,440 --> 00:55:27,119
a question yeah

1224
00:55:27,119 --> 00:55:29,339
um all of the MTI ones actually require

1225
00:55:29,339 --> 00:55:32,160
encryption

1226
00:55:32,160 --> 00:55:35,160
uh that's a sweet that's so sweet yeah

1227
00:55:35,160 --> 00:55:37,859
if encryption then that's what you use

1228
00:55:37,859 --> 00:55:39,780
okay so you're not actually requiring

1229
00:55:39,780 --> 00:55:41,280
all constrained devices to have

1230
00:55:41,280 --> 00:55:42,480
encryption if all you're doing is

1231
00:55:42,480 --> 00:55:43,859
Distributing public firmware and things

1232
00:55:43,859 --> 00:55:46,380
right no no okay I think right now the

1233
00:55:46,380 --> 00:55:47,940
security consideration section says to

1234
00:55:47,940 --> 00:55:49,980
do I think it would be useful to

1235
00:55:49,980 --> 00:55:54,559
elaborate on that point fair enough

1236
00:55:55,099 --> 00:55:57,000
to do

1237
00:55:57,000 --> 00:56:00,119
well it is to do next slide please I

1238
00:56:00,119 --> 00:56:01,200
mean you can at least fill in the entire

1239
00:56:01,200 --> 00:56:02,460
document is about security I mean that's

1240
00:56:02,460 --> 00:56:04,440
what most people do but yeah I think I

1241
00:56:04,440 --> 00:56:05,760
probably will

1242
00:56:05,760 --> 00:56:06,859
um

1243
00:56:06,859 --> 00:56:09,599
I like that even better

1244
00:56:09,599 --> 00:56:12,359
so here's you know there are a couple

1245
00:56:12,359 --> 00:56:14,760
obvious things that uh get used a lot in

1246
00:56:14,760 --> 00:56:16,920
iot that are missing from that

1247
00:56:16,920 --> 00:56:20,040
um maybe they shouldn't be I I've seen

1248
00:56:20,040 --> 00:56:21,780
at least one argument that if we're

1249
00:56:21,780 --> 00:56:25,559
going to have eddsa we might as well put

1250
00:56:25,559 --> 00:56:28,619
Chacha poly with it and that's an option

1251
00:56:28,619 --> 00:56:30,900
those that set seems to get used

1252
00:56:30,900 --> 00:56:32,460
together quite a lot which is the

1253
00:56:32,460 --> 00:56:34,020
argument for that

1254
00:56:34,020 --> 00:56:35,520
um so maybe that would be a good change

1255
00:56:35,520 --> 00:56:37,740
I don't know oh I've got a thumbs up

1256
00:56:37,740 --> 00:56:40,020
from at least one person

1257
00:56:40,020 --> 00:56:43,440
okay so uh that that might be one change

1258
00:56:43,440 --> 00:56:44,880
to make

1259
00:56:44,880 --> 00:56:46,500
um and that's it if you have any

1260
00:56:46,500 --> 00:56:48,240
feedback please let me know I'd be

1261
00:56:48,240 --> 00:56:50,220
welcome co-authors as well if someone

1262
00:56:50,220 --> 00:56:51,960
wants to do some of this write security

1263
00:56:51,960 --> 00:56:54,980
considerations Maybe

1264
00:56:58,920 --> 00:57:02,400
so should we do a uh Poll for adoption

1265
00:57:02,400 --> 00:57:04,020
how do you want to do that because I

1266
00:57:04,020 --> 00:57:06,960
think he needs to do and an update to

1267
00:57:06,960 --> 00:57:09,180
address that point you made before we

1268
00:57:09,180 --> 00:57:10,559
adopted

1269
00:57:10,559 --> 00:57:13,079
uh

1270
00:57:13,079 --> 00:57:16,319
it's adopted before we last call it

1271
00:57:16,319 --> 00:57:17,400
um no I'm saying right now it's an

1272
00:57:17,400 --> 00:57:18,480
individual estimation it's not a working

1273
00:57:18,480 --> 00:57:21,000
group document the MTI MTI I think

1274
00:57:21,000 --> 00:57:22,079
you're right I think that's right it is

1275
00:57:22,079 --> 00:57:25,740
and so um uh I think we have the action

1276
00:57:25,740 --> 00:57:27,660
item to call adoption so I'm asking can

1277
00:57:27,660 --> 00:57:29,640
we do that right now and say can this

1278
00:57:29,640 --> 00:57:31,200
it's not done right can we at least

1279
00:57:31,200 --> 00:57:33,420
rename it from uh individual to working

1280
00:57:33,420 --> 00:57:36,660
the question is does anyone object to

1281
00:57:36,660 --> 00:57:38,220
adopting it

1282
00:57:38,220 --> 00:57:40,559
we'll take it to the list but does

1283
00:57:40,559 --> 00:57:42,359
anyone object to it in its current form

1284
00:57:42,359 --> 00:57:44,040
I've heard several people saying just

1285
00:57:44,040 --> 00:57:46,140
just adopt is the next step right

1286
00:57:46,140 --> 00:57:49,619
just making sure okay so uh technically

1287
00:57:49,619 --> 00:57:51,119
it's within our race to just adopt it

1288
00:57:51,119 --> 00:57:52,380
without asking the list but we like to

1289
00:57:52,380 --> 00:57:54,720
ask the list so or ask the people so the

1290
00:57:54,720 --> 00:57:56,760
assumption is it will be adopted and the

1291
00:57:56,760 --> 00:57:58,319
next version of it will actually be a

1292
00:57:58,319 --> 00:58:00,240
draft ietf suit

1293
00:58:00,240 --> 00:58:03,059
um so when you grab it post it as a new

1294
00:58:03,059 --> 00:58:05,099
one unless we tell you otherwise okay

1295
00:58:05,099 --> 00:58:06,480
we'll do

1296
00:58:06,480 --> 00:58:09,240
that sounds fun okay

1297
00:58:09,240 --> 00:58:11,040
I just wanted that minute

1298
00:58:11,040 --> 00:58:13,200
okay I think this is the one Dave wanted

1299
00:58:13,200 --> 00:58:16,980
to be back for so this is a suit report

1300
00:58:16,980 --> 00:58:18,599
next slide please

1301
00:58:18,599 --> 00:58:21,000
so a summary of what it is the idea

1302
00:58:21,000 --> 00:58:23,220
behind this is that you want to know

1303
00:58:23,220 --> 00:58:25,380
what your device did when you attempted

1304
00:58:25,380 --> 00:58:27,059
to install something or try to secure

1305
00:58:27,059 --> 00:58:31,380
boot uh so what it contains is a

1306
00:58:31,380 --> 00:58:33,720
reference to the root manifest so that

1307
00:58:33,720 --> 00:58:35,520
you know exactly what it was working on

1308
00:58:35,520 --> 00:58:37,319
then you've got a record of each

1309
00:58:37,319 --> 00:58:39,299
decision it takes there are relatively

1310
00:58:39,299 --> 00:58:41,339
few decisions in a suit manifest so this

1311
00:58:41,339 --> 00:58:45,059
is a small list uh there is also a

1312
00:58:45,059 --> 00:58:46,559
record of any critical information

1313
00:58:46,559 --> 00:58:49,920
that's identified in that process this

1314
00:58:49,920 --> 00:58:53,400
is done through the uh the reporting

1315
00:58:53,400 --> 00:58:57,420
mode hint that goes with each suit

1316
00:58:57,420 --> 00:59:00,540
command that feeds into the construction

1317
00:59:00,540 --> 00:59:03,500
of the suit report but it is a hint suit

1318
00:59:03,500 --> 00:59:06,000
manifest processors are welcome to

1319
00:59:06,000 --> 00:59:08,040
override that behavior however they see

1320
00:59:08,040 --> 00:59:12,119
fit uh the result of this is this so

1321
00:59:12,119 --> 00:59:14,040
what it gives you is the result of an a

1322
00:59:14,040 --> 00:59:17,280
procedure there are were two procedures

1323
00:59:17,280 --> 00:59:22,400
but since the changes to the uh

1324
00:59:22,400 --> 00:59:25,500
suit multiple trust domains there is now

1325
00:59:25,500 --> 00:59:28,500
a third procedure which is uninstall

1326
00:59:28,500 --> 00:59:31,140
uh invoke in case it's not clear is

1327
00:59:31,140 --> 00:59:34,079
equivalent to either secure boot or

1328
00:59:34,079 --> 00:59:36,900
running the code that's in your tee

1329
00:59:36,900 --> 00:59:39,720
next slide please

1330
00:59:39,720 --> 00:59:42,319
uh so this has a relationship to rats

1331
00:59:42,319 --> 00:59:45,599
and uh we didn't quite have time to talk

1332
00:59:45,599 --> 00:59:48,839
about it at rats but the idea here is

1333
00:59:48,839 --> 00:59:51,480
that a verifier in rats could take all

1334
00:59:51,480 --> 00:59:53,819
of this information and construct your

1335
00:59:53,819 --> 00:59:57,180
device State out of it and by using that

1336
00:59:57,180 --> 01:00:00,960
they're able to uh discern information

1337
01:00:00,960 --> 01:00:04,260
they might need to determine the uh the

1338
01:00:04,260 --> 01:00:05,940
trustworthiness of the device

1339
01:00:05,940 --> 01:00:07,619
they can also extract the system

1340
01:00:07,619 --> 01:00:10,559
property claims and by extracting the

1341
01:00:10,559 --> 01:00:11,880
system property claims they can

1342
01:00:11,880 --> 01:00:13,500
construct the information that would

1343
01:00:13,500 --> 01:00:16,200
normally have gone into an attestation

1344
01:00:16,200 --> 01:00:18,839
report so this can be used in appraisal

1345
01:00:18,839 --> 01:00:22,500
and the the one important consideration

1346
01:00:22,500 --> 01:00:24,599
here is that this is not the kind of

1347
01:00:24,599 --> 01:00:27,599
information that a relying party wants

1348
01:00:27,599 --> 01:00:30,900
to get so there is an onus that gets

1349
01:00:30,900 --> 01:00:33,540
placed on the verifier to translate this

1350
01:00:33,540 --> 01:00:35,579
information into more conventional eat

1351
01:00:35,579 --> 01:00:37,559
values

1352
01:00:37,559 --> 01:00:40,200
um it is and so what I'm saying is it's

1353
01:00:40,200 --> 01:00:42,420
attestation evidence but it's probably

1354
01:00:42,420 --> 01:00:44,700
not attestation results

1355
01:00:44,700 --> 01:00:47,520
next slide please

1356
01:00:47,520 --> 01:00:49,980
so there were a couple of changes

1357
01:00:49,980 --> 01:00:52,260
um I noted in the original version of

1358
01:00:52,260 --> 01:00:55,140
this uh draft that it's very convenient

1359
01:00:55,140 --> 01:00:57,780
on a constrained device to do reporting

1360
01:00:57,780 --> 01:01:00,960
through a single append-only log and if

1361
01:01:00,960 --> 01:01:02,880
you have multiple places that you have

1362
01:01:02,880 --> 01:01:04,619
to put data mistakes get made

1363
01:01:04,619 --> 01:01:08,040
serialization is hard what this does is

1364
01:01:08,040 --> 01:01:10,559
it allows you to just keep a pending and

1365
01:01:10,559 --> 01:01:13,380
serializing to a log all in one go so

1366
01:01:13,380 --> 01:01:15,900
you don't have to do a post-processing

1367
01:01:15,900 --> 01:01:18,420
step before you can cons before you can

1368
01:01:18,420 --> 01:01:21,059
send or store your report

1369
01:01:21,059 --> 01:01:23,400
uh what I have done in this one is

1370
01:01:23,400 --> 01:01:25,980
merged the system property claims and

1371
01:01:25,980 --> 01:01:28,920
the suit manifest records to try and

1372
01:01:28,920 --> 01:01:31,680
join that together to go from two logs

1373
01:01:31,680 --> 01:01:34,440
down to one and the mechanism for this

1374
01:01:34,440 --> 01:01:38,099
which is not entirely clear here but the

1375
01:01:38,099 --> 01:01:40,319
idea behind it is that one of these

1376
01:01:40,319 --> 01:01:43,440
elements is a list or an array element

1377
01:01:43,440 --> 01:01:46,260
and the other is a map element and by

1378
01:01:46,260 --> 01:01:48,359
doing this a verifier that wants to

1379
01:01:48,359 --> 01:01:51,000
extract only system property claims just

1380
01:01:51,000 --> 01:01:53,819
takes all of the maps out of that list

1381
01:01:53,819 --> 01:01:56,040
and it has the system property claims

1382
01:01:56,040 --> 01:01:57,720
without having to worry about parsing

1383
01:01:57,720 --> 01:01:59,400
anything else

1384
01:01:59,400 --> 01:02:01,740
next slide please

1385
01:02:01,740 --> 01:02:04,319
I've added suit capability reports we

1386
01:02:04,319 --> 01:02:06,000
talked about capability reports a number

1387
01:02:06,000 --> 01:02:08,940
of times in this working group and we

1388
01:02:08,940 --> 01:02:10,799
never quite got to doing it but I

1389
01:02:10,799 --> 01:02:13,079
thought that a report draft might be the

1390
01:02:13,079 --> 01:02:16,500
place to put a report so I've added a

1391
01:02:16,500 --> 01:02:19,559
suit capability reports in here and it

1392
01:02:19,559 --> 01:02:21,839
essentially breaks it down to the things

1393
01:02:21,839 --> 01:02:25,380
that a an author needs to know about a

1394
01:02:25,380 --> 01:02:27,960
suit manifest processor and it's just a

1395
01:02:27,960 --> 01:02:31,200
list of lists of integers it's fairly

1396
01:02:31,200 --> 01:02:34,260
simple in that respect so oh and

1397
01:02:34,260 --> 01:02:35,940
component identifiers which are not

1398
01:02:35,940 --> 01:02:39,599
integers so so that's that's the overall

1399
01:02:39,599 --> 01:02:42,720
structure on the rough idea of what's in

1400
01:02:42,720 --> 01:02:45,420
there between these things you know what

1401
01:02:45,420 --> 01:02:48,200
a suit manifest processor can do

1402
01:02:48,200 --> 01:02:51,059
modulo any ACLS that are applied by it

1403
01:02:51,059 --> 01:02:53,280
which you won't know from this

1404
01:02:53,280 --> 01:02:56,220
next slide please

1405
01:02:56,220 --> 01:02:58,140
your last one oh that's my last one okay

1406
01:02:58,140 --> 01:02:59,819
well then that's it

1407
01:02:59,819 --> 01:03:00,980
um

1408
01:03:00,980 --> 01:03:04,740
so uh that if there's any feedback on

1409
01:03:04,740 --> 01:03:06,780
that I'd appreciate it if you want to do

1410
01:03:06,780 --> 01:03:09,119
a review I'd appreciate it

1411
01:03:09,119 --> 01:03:11,099
um

1412
01:03:11,099 --> 01:03:15,140
go ahead any questions comments

1413
01:03:16,460 --> 01:03:18,000
yeah

1414
01:03:18,000 --> 01:03:19,619
you want me to go first yeah go first

1415
01:03:19,619 --> 01:03:21,180
okay

1416
01:03:21,180 --> 01:03:24,960
um so two what one question one comment

1417
01:03:24,960 --> 01:03:27,240
I'll give the comment one first um that

1418
01:03:27,240 --> 01:03:29,760
I think uh some place we need to write

1419
01:03:29,760 --> 01:03:31,859
down how you might carry a suit report

1420
01:03:31,859 --> 01:03:33,500
in an eat

1421
01:03:33,500 --> 01:03:38,640
yes so that is a big to do on this yeah

1422
01:03:38,640 --> 01:03:41,160
and I think that what it boils down to

1423
01:03:41,160 --> 01:03:44,940
is that we need to Define an eat claim

1424
01:03:44,940 --> 01:03:47,299
yeah just eat one yeah

1425
01:03:47,299 --> 01:03:49,619
manifest which would not be this right

1426
01:03:49,619 --> 01:03:51,900
there's an e-claim for measurements

1427
01:03:51,900 --> 01:03:53,400
which maybe you can squint and say it

1428
01:03:53,400 --> 01:03:54,960
goes there or maybe it's a new claim

1429
01:03:54,960 --> 01:03:57,240
that's specific to suit manifest my

1430
01:03:57,240 --> 01:03:59,819
preference would be to Define this as a

1431
01:03:59,819 --> 01:04:03,180
single new eat claim which is just a

1432
01:04:03,180 --> 01:04:05,400
suit report right that that would be my

1433
01:04:05,400 --> 01:04:07,200
preference as well and Russ is also

1434
01:04:07,200 --> 01:04:08,640
nodding

1435
01:04:08,640 --> 01:04:11,460
um as part of where that wherever that

1436
01:04:11,460 --> 01:04:12,720
gets written down whether it's in this

1437
01:04:12,720 --> 01:04:14,640
document which would probably be my

1438
01:04:14,640 --> 01:04:16,799
preference but it doesn't have to be

1439
01:04:16,799 --> 01:04:19,200
um should also consider answering the

1440
01:04:19,200 --> 01:04:21,000
question of okay assume that your suit

1441
01:04:21,000 --> 01:04:23,099
report has sensitive information

1442
01:04:23,099 --> 01:04:25,319
do you encrypt the suit report or do you

1443
01:04:25,319 --> 01:04:28,380
put it in and eat and encrypt to eat

1444
01:04:28,380 --> 01:04:30,420
I suspect it's easier to say the latter

1445
01:04:30,420 --> 01:04:32,040
because the eat may contain other

1446
01:04:32,040 --> 01:04:33,299
sensitive information from that device

1447
01:04:33,299 --> 01:04:35,400
besides the suit report in which case

1448
01:04:35,400 --> 01:04:37,619
not having a mechanism to say encrypt

1449
01:04:37,619 --> 01:04:40,079
the suit report for use and eat is

1450
01:04:40,079 --> 01:04:42,720
probably not necessary but that's what

1451
01:04:42,720 --> 01:04:43,980
the security consideration should

1452
01:04:43,980 --> 01:04:46,500
actually discuss that so I think there's

1453
01:04:46,500 --> 01:04:49,380
a response coming to the mic okay I do

1454
01:04:49,380 --> 01:04:50,819
have a separate question but I'm happy

1455
01:04:50,819 --> 01:04:53,160
to go after Michael so this is all my

1456
01:04:53,160 --> 01:04:55,020
first one so okay but if Hank wants to

1457
01:04:55,020 --> 01:04:58,280
respond to this we can cover this one

1458
01:04:58,380 --> 01:05:01,500
so I would this is Hank I would not

1459
01:05:01,500 --> 01:05:03,480
assume that we offload the

1460
01:05:03,480 --> 01:05:05,040
responsibility of encrypting something

1461
01:05:05,040 --> 01:05:06,240
to eat

1462
01:05:06,240 --> 01:05:08,220
because but that would imply that we

1463
01:05:08,220 --> 01:05:11,700
always send suit reports and eat

1464
01:05:11,700 --> 01:05:15,799
that looks weird to me yeah yeah

1465
01:05:15,799 --> 01:05:17,940
I was not making that assumption I was

1466
01:05:17,940 --> 01:05:19,799
saying when sending a suit report and

1467
01:05:19,799 --> 01:05:20,940
eat

1468
01:05:20,940 --> 01:05:23,339
right but the implementation then is

1469
01:05:23,339 --> 01:05:26,099
that what do you do when you don't know

1470
01:05:26,099 --> 01:05:28,440
how do you encrypt it when yeah I I

1471
01:05:28,440 --> 01:05:29,579
agree that you need a different

1472
01:05:29,579 --> 01:05:31,440
mechanism when not covering it well you

1473
01:05:31,440 --> 01:05:32,760
need to also answer the question of what

1474
01:05:32,760 --> 01:05:34,020
if it's not an eat I agree with that

1475
01:05:34,020 --> 01:05:36,559
yeah okay if that's fine then yeah

1476
01:05:36,559 --> 01:05:39,299
on the eat one if you imagine that there

1477
01:05:39,299 --> 01:05:41,160
are uh five different claims of which

1478
01:05:41,160 --> 01:05:42,599
you preferred as one

1479
01:05:42,599 --> 01:05:44,160
and all of them have sensitive

1480
01:05:44,160 --> 01:05:46,440
information do you encrypt five things

1481
01:05:46,440 --> 01:05:48,000
separately and then put them in an eat

1482
01:05:48,000 --> 01:05:49,619
or do you put them all in and eat to

1483
01:05:49,619 --> 01:05:51,240
encrypt this whole thing that I'm saying

1484
01:05:51,240 --> 01:05:52,680
that's the discussion that should be put

1485
01:05:52,680 --> 01:05:54,720
into the security considerations right

1486
01:05:54,720 --> 01:05:57,319
last question

1487
01:05:57,900 --> 01:06:00,420
and possibly yes okay so if you didn't

1488
01:06:00,420 --> 01:06:02,520
hear that remotely Russ said uh that's a

1489
01:06:02,520 --> 01:06:03,599
discussion I should go in the eat

1490
01:06:03,599 --> 01:06:05,040
document

1491
01:06:05,040 --> 01:06:06,660
or yeah

1492
01:06:06,660 --> 01:06:08,700
so uh Michael Richardson here so I'm

1493
01:06:08,700 --> 01:06:10,859
really happy to let you go first

1494
01:06:10,859 --> 01:06:12,299
um because because

1495
01:06:12,299 --> 01:06:14,880
um now I can ask my my question in a

1496
01:06:14,880 --> 01:06:16,920
much uh more interesting way

1497
01:06:16,920 --> 01:06:18,359
um so

1498
01:06:18,359 --> 01:06:19,920
um

1499
01:06:19,920 --> 01:06:22,619
up to this point we are the whole status

1500
01:06:22,619 --> 01:06:25,319
tracker has been sort of out of scope

1501
01:06:25,319 --> 01:06:26,940
for the working group

1502
01:06:26,940 --> 01:06:28,200
so

1503
01:06:28,200 --> 01:06:29,880
my question is how do we get suit

1504
01:06:29,880 --> 01:06:32,220
reports back in the first place given

1505
01:06:32,220 --> 01:06:33,720
that we haven't even told people how to

1506
01:06:33,720 --> 01:06:36,359
get you know manifests and stuff to the

1507
01:06:36,359 --> 01:06:38,160
device that's of all a device specific

1508
01:06:38,160 --> 01:06:40,680
thing so how do we get any of this back

1509
01:06:40,680 --> 01:06:43,079
and it actually answers part of the

1510
01:06:43,079 --> 01:06:46,559
question huh and that's the same way the

1511
01:06:46,559 --> 01:06:48,780
same magic way but but you see at that

1512
01:06:48,780 --> 01:06:51,000
point if you say it's the same magic way

1513
01:06:51,000 --> 01:06:53,819
then the the privacy considerations for

1514
01:06:53,819 --> 01:06:56,160
that thing are also the same magic way

1515
01:06:56,160 --> 01:06:59,640
okay so that actually is my bigger

1516
01:06:59,640 --> 01:07:01,079
question is that I think that this

1517
01:07:01,079 --> 01:07:03,900
document has pushed us very close to

1518
01:07:03,900 --> 01:07:06,599
saying it's time to for a small

1519
01:07:06,599 --> 01:07:10,079
recharger to have an ietf standard

1520
01:07:10,079 --> 01:07:14,400
status tracker with encryption that can

1521
01:07:14,400 --> 01:07:17,220
collect this information okay I have a

1522
01:07:17,220 --> 01:07:19,380
counter proposal that's fine I don't

1523
01:07:19,380 --> 01:07:21,119
care how we do it but as long as we do

1524
01:07:21,119 --> 01:07:23,700
it okay because otherwise I think that

1525
01:07:23,700 --> 01:07:25,920
that well there's some places some

1526
01:07:25,920 --> 01:07:27,599
verticals like teep where they have the

1527
01:07:27,599 --> 01:07:29,520
problem solved I think there's a whole

1528
01:07:29,520 --> 01:07:31,020
bunch of other places where people are

1529
01:07:31,020 --> 01:07:33,539
just uh okay and they're going to wind

1530
01:07:33,539 --> 01:07:37,200
up in some very proprietary uh vertical

1531
01:07:37,200 --> 01:07:38,520
at that point

1532
01:07:38,520 --> 01:07:40,440
so so I have a counter proposal can I

1533
01:07:40,440 --> 01:07:42,780
tell you about it in an hour in an hour

1534
01:07:42,780 --> 01:07:46,079
yes at some other place okay so but I'll

1535
01:07:46,079 --> 01:07:49,079
sorry I'm just joking uh the

1536
01:07:49,079 --> 01:07:51,480
what we've realized that this is that

1537
01:07:51,480 --> 01:07:54,119
there really isn't anything in tape

1538
01:07:54,119 --> 01:07:56,819
that restricts it to Tes

1539
01:07:56,819 --> 01:07:59,579
there's nothing in the T protocol draft

1540
01:07:59,579 --> 01:08:02,880
that would prevent you from using it

1541
01:08:02,880 --> 01:08:04,680
outside of a te

1542
01:08:04,680 --> 01:08:06,480
and when you squint at it just hard

1543
01:08:06,480 --> 01:08:08,640
enough it looks an awful lot like that

1544
01:08:08,640 --> 01:08:10,500
status tracker

1545
01:08:10,500 --> 01:08:12,420
so I think that's really cool and I

1546
01:08:12,420 --> 01:08:14,400
think that for a bunch of things

1547
01:08:14,400 --> 01:08:17,759
um that are of the you know Raspberry Pi

1548
01:08:17,759 --> 01:08:20,339
and larger devices I think that's

1549
01:08:20,339 --> 01:08:22,738
probably the right answer

1550
01:08:22,738 --> 01:08:24,000
um and then the question is whether

1551
01:08:24,000 --> 01:08:26,279
that's usable below that and that may be

1552
01:08:26,279 --> 01:08:28,198
the case that it is right and the reason

1553
01:08:28,198 --> 01:08:30,420
I I think that tees don't have that

1554
01:08:30,420 --> 01:08:31,979
problem is that they also have a

1555
01:08:31,979 --> 01:08:33,600
typically a rich execution environment

1556
01:08:33,600 --> 01:08:36,000
that can do all of the heavy networking

1557
01:08:36,000 --> 01:08:39,600
stuff you know that is you know no

1558
01:08:39,600 --> 01:08:41,819
longer possible on 16-bit CPUs for some

1559
01:08:41,819 --> 01:08:44,339
reason but anyway I'm just kidding right

1560
01:08:44,339 --> 01:08:47,219
obviously it is right there you go so

1561
01:08:47,219 --> 01:08:49,140
what I'm what I'm saying is I think that

1562
01:08:49,140 --> 01:08:51,179
it's worth exploring that but I think

1563
01:08:51,179 --> 01:08:52,920
that it would make sense if we already

1564
01:08:52,920 --> 01:08:57,779
have a protocol and and so on that does

1565
01:08:57,779 --> 01:08:59,520
roughly what we're talking about to

1566
01:08:59,520 --> 01:09:02,239
evaluate it first

1567
01:09:02,880 --> 01:09:04,198
okay

1568
01:09:04,198 --> 01:09:05,759
um if it's a follow-up let karaoke first

1569
01:09:05,759 --> 01:09:07,080
okay

1570
01:09:07,080 --> 01:09:09,779
well just to Russ's Point um

1571
01:09:09,779 --> 01:09:11,819
about where encryption discussion should

1572
01:09:11,819 --> 01:09:13,259
go I think it should go on and eat

1573
01:09:13,259 --> 01:09:16,020
profile which is where ER says things

1574
01:09:16,020 --> 01:09:19,819
should go now absolutely agree

1575
01:09:22,020 --> 01:09:25,140
okay so Dave Taylor now my other

1576
01:09:25,140 --> 01:09:26,580
question

1577
01:09:26,580 --> 01:09:27,238
um

1578
01:09:27,238 --> 01:09:30,120
uh on the slide here it says they're

1579
01:09:30,120 --> 01:09:31,799
broken down into supported component

1580
01:09:31,799 --> 01:09:34,198
identifiers and and you uh pointed out

1581
01:09:34,198 --> 01:09:35,520
that you know they're not integers and

1582
01:09:35,520 --> 01:09:38,759
stuff so what does supported component

1583
01:09:38,759 --> 01:09:41,100
identifiers mean for a non-constrained

1584
01:09:41,100 --> 01:09:44,160
device is my question so there is a wild

1585
01:09:44,160 --> 01:09:45,060
card

1586
01:09:45,060 --> 01:09:46,198
thank you

1587
01:09:46,198 --> 01:09:48,000
does that answer your question so you

1588
01:09:48,000 --> 01:09:49,439
could say here's a path and then

1589
01:09:49,439 --> 01:09:50,819
everything after that is a wild card

1590
01:09:50,819 --> 01:09:52,620
record support arbitrary components if

1591
01:09:52,620 --> 01:09:54,120
you choose to install them as long as it

1592
01:09:54,120 --> 01:09:55,920
goes under this path that's correct okay

1593
01:09:55,920 --> 01:09:59,420
that answered my question thank you

1594
01:10:06,480 --> 01:10:09,139
are we done

1595
01:10:11,280 --> 01:10:12,750
let's just make sure

1596
01:10:12,750 --> 01:10:15,850
[Music]

1597
01:10:16,280 --> 01:10:20,219
no we didn't uh we need to talk around

1598
01:10:20,219 --> 01:10:22,140
okay I don't remember what the charter

1599
01:10:22,140 --> 01:10:23,239
question was

1600
01:10:23,239 --> 01:10:25,040
oh yeah yeah

1601
01:10:25,040 --> 01:10:26,699
you're right

1602
01:10:26,699 --> 01:10:29,460
um uh on uh so Brendan's answer here

1603
01:10:29,460 --> 01:10:30,960
about an hour I was referring to like

1604
01:10:30,960 --> 01:10:32,460
the tape meeting

1605
01:10:32,460 --> 01:10:35,040
um and uh I will observe that earlier in

1606
01:10:35,040 --> 01:10:36,840
the suit working group right we had a

1607
01:10:36,840 --> 01:10:39,719
discussion of can you use suit

1608
01:10:39,719 --> 01:10:41,820
for so I can use a suit manifest for

1609
01:10:41,820 --> 01:10:43,920
things that are not iot devices okay

1610
01:10:43,920 --> 01:10:45,900
because you know software update for

1611
01:10:45,900 --> 01:10:48,900
internet of things and we said yes for a

1612
01:10:48,900 --> 01:10:50,219
chartered to make sure that it works for

1613
01:10:50,219 --> 01:10:52,199
iot but we actually put language in this

1614
01:10:52,199 --> 01:10:53,940
manifest that said it is not restricted

1615
01:10:53,940 --> 01:10:56,280
for that purpose okay you can imagine a

1616
01:10:56,280 --> 01:10:57,719
similar discussion go that might happen

1617
01:10:57,719 --> 01:10:59,400
in deep

1618
01:10:59,400 --> 01:11:01,920
fair enough

1619
01:11:01,920 --> 01:11:05,159
all right so we've covered you cover the

1620
01:11:05,159 --> 01:11:06,900
hard case because otherwise you wouldn't

1621
01:11:06,900 --> 01:11:08,159
right and then if it happens to be

1622
01:11:08,159 --> 01:11:11,340
useful for the easy case go for it right

1623
01:11:11,340 --> 01:11:13,800
all right so just making sure since we

1624
01:11:13,800 --> 01:11:15,600
jumped around the agenda

1625
01:11:15,600 --> 01:11:19,640
this page we covered all of them

1626
01:11:20,230 --> 01:11:22,440
[Music]

1627
01:11:22,440 --> 01:11:24,360
this page we covered all of them so we

1628
01:11:24,360 --> 01:11:26,880
arced out to the any other business that

1629
01:11:26,880 --> 01:11:31,040
would anyone like to raise some foreign

1630
01:11:38,699 --> 01:11:42,560
thank you we're done already

1631
01:11:42,560 --> 01:11:45,600
they're probably not out yet

1632
01:11:45,600 --> 01:11:48,260
thank you

1633
01:11:52,980 --> 01:11:55,580
I'm surprised

1634
01:11:56,540 --> 01:11:58,980
but we definitely needed more than 60

1635
01:11:58,980 --> 01:12:01,080
minutes right so it means you know we

1636
01:12:01,080 --> 01:12:03,360
picked the right number at 90. the fact

1637
01:12:03,360 --> 01:12:04,560
that we used

1638
01:12:04,560 --> 01:12:08,540
71 effectively yep

1639
01:12:13,080 --> 01:12:15,360
I don't think we had any

1640
01:12:15,360 --> 01:12:16,920
unless something happened there was no

1641
01:12:16,920 --> 01:12:19,400
non-essentials

1642
01:12:19,400 --> 01:12:21,420
interesting things while you were next

1643
01:12:21,420 --> 01:12:23,659
door

1644
01:12:36,780 --> 01:12:39,080
foreign

1645
01:12:49,739 --> 01:12:52,860
I hope it went well next door

1646
01:12:52,860 --> 01:12:54,480
um

1647
01:12:54,480 --> 01:12:55,920
my part of it did since I'm just

1648
01:12:55,920 --> 01:12:58,860
advertising a side meeting so

1649
01:12:58,860 --> 01:13:01,339
apologize

1650
01:13:06,140 --> 01:13:11,040
called a generic prospector API

1651
01:13:11,040 --> 01:13:14,519
okay generic

1652
01:13:15,179 --> 01:13:17,340
and everything yet another layer because

1653
01:13:17,340 --> 01:13:20,640
there's so many they're just a

1654
01:13:20,640 --> 01:13:21,440
bit

1655
01:13:21,440 --> 01:13:23,420
you know

1656
01:13:23,420 --> 01:13:27,980
so there's there's so much

1657
01:13:30,900 --> 01:13:33,840
or root of trust which is

1658
01:13:33,840 --> 01:13:36,860
similar but nice

1659
01:13:37,219 --> 01:13:39,300
definitions document I'm pretty sure

1660
01:13:39,300 --> 01:13:42,360
that actually means busaker and so they

1661
01:13:42,360 --> 01:13:44,400
want to manage that for validation

1662
01:13:44,400 --> 01:13:48,600
procedures of course and uh and the uh I

1663
01:13:48,600 --> 01:13:52,580
will propagate the TA profile for Quorum

1664
01:13:52,580 --> 01:13:55,340
Edo platform because I have a

1665
01:13:55,340 --> 01:13:57,260
relationships

1666
01:13:57,260 --> 01:14:00,719
that concise da stories again they can

1667
01:14:00,719 --> 01:14:03,420
slice CA stores documents they have uh

1668
01:14:03,420 --> 01:14:05,580
they have a common size yeah I'm saying

1669
01:14:05,580 --> 01:14:07,020
make sure they know about our

1670
01:14:07,020 --> 01:14:09,739
consolidation

1671
01:14:11,540 --> 01:14:13,880
they have also a

1672
01:14:13,880 --> 01:14:17,159
cozy key store

1673
01:14:17,159 --> 01:14:19,920
they built a CE

1674
01:14:19,920 --> 01:14:22,699
implemented

1675
01:14:23,640 --> 01:14:26,580
and they use cozy Keys as the interface

1676
01:14:26,580 --> 01:14:31,010
messages and then the score is 88.

1677
01:14:31,010 --> 01:14:33,260
[Music]

1678
01:14:33,260 --> 01:14:37,880
they don't why so wait a minute

1679
01:14:41,540 --> 01:14:44,360
I don't know

1680
01:14:44,360 --> 01:14:47,880
if they want to be capable of supporting

1681
01:14:47,880 --> 01:14:49,860
a lot of this I'm worried that you they

1682
01:14:49,860 --> 01:14:54,059
made a vodka oh

