1
00:00:04,920 --> 00:00:07,580
foreign

2
00:00:14,660 --> 00:00:17,810
[Music]

3
00:00:23,400 --> 00:00:27,799
yes all right yes thank you

4
00:00:30,000 --> 00:00:31,679
and just to say the report here as well

5
00:00:31,679 --> 00:00:34,559
I presume Turles is coming person is he

6
00:00:34,559 --> 00:00:35,579
yeah

7
00:00:35,579 --> 00:00:38,130
hi

8
00:00:38,130 --> 00:00:41,280
[Music]

9
00:00:41,280 --> 00:00:46,160
there you go where is Paris

10
00:00:47,100 --> 00:00:49,860
so

11
00:00:49,860 --> 00:00:53,660
we miss our local chair

12
00:00:55,020 --> 00:00:57,180
okay anyway

13
00:00:57,180 --> 00:01:00,620
nice thanks just time

14
00:01:09,260 --> 00:01:14,479
can you hear my screen the chair slides

15
00:01:38,759 --> 00:01:41,640
now I can see it

16
00:01:41,640 --> 00:01:44,520
Okay so

17
00:01:44,520 --> 00:01:48,180
it's it's now o'clock it will although

18
00:01:48,180 --> 00:01:51,299
we miss our local chair theories we

19
00:01:51,299 --> 00:01:53,180
should start our

20
00:01:53,180 --> 00:01:56,460
our meeting this is NMR working group

21
00:01:56,460 --> 00:02:00,119
meeting and just you say

22
00:02:00,119 --> 00:02:04,520
um held by the chair there is Eckert and

23
00:02:04,520 --> 00:02:09,979
myself xinjiang first of all I did to

24
00:02:09,979 --> 00:02:13,980
notify everyone I changed my affiliation

25
00:02:13,980 --> 00:02:18,660
I'm now the professor in Beijing

26
00:02:18,660 --> 00:02:22,200
University of post entity communication

27
00:02:22,200 --> 00:02:25,500
and so that's made you your job I just

28
00:02:25,500 --> 00:02:29,720
start this August and and I'm still here

29
00:02:29,720 --> 00:02:33,599
uh serve as the animate here

30
00:02:33,599 --> 00:02:37,680
um because I just start my new job so I

31
00:02:37,680 --> 00:02:40,160
don't have funding and

32
00:02:40,160 --> 00:02:44,040
they support to travel to London this

33
00:02:44,040 --> 00:02:48,540
time but it's in my plan to uh

34
00:02:48,540 --> 00:02:52,980
Japan next match so

35
00:02:52,980 --> 00:02:55,980
and

36
00:02:56,519 --> 00:03:00,140
this is the IDF node wheel

37
00:03:00,140 --> 00:03:04,260
everybody attend the meeting should read

38
00:03:04,260 --> 00:03:09,540
this and they have real as state in this

39
00:03:09,540 --> 00:03:12,200
node wheel

40
00:03:13,980 --> 00:03:17,780
this is the uh our biscal information

41
00:03:17,780 --> 00:03:21,379
and chair myself and theories

42
00:03:21,379 --> 00:03:25,500
and we have our Eric and director Robert

43
00:03:25,500 --> 00:03:27,780
Wilton

44
00:03:27,780 --> 00:03:28,500
um

45
00:03:28,500 --> 00:03:31,620
um we published our agenda and the

46
00:03:31,620 --> 00:03:34,680
minutes is taken by myself and also

47
00:03:34,680 --> 00:03:36,360
using

48
00:03:36,360 --> 00:03:39,840
um all the slides already uploaded

49
00:03:39,840 --> 00:03:40,739
um

50
00:03:40,739 --> 00:03:44,760
and we have this video stream

51
00:03:44,760 --> 00:03:46,879
um

52
00:03:47,580 --> 00:03:50,519
for this meeting there's no physical

53
00:03:50,519 --> 00:03:54,540
blue sheets it will take according to

54
00:03:54,540 --> 00:03:55,819
the

55
00:03:55,819 --> 00:04:00,239
video stream and there's no job Chopper

56
00:04:00,239 --> 00:04:01,140
anymore

57
00:04:01,140 --> 00:04:03,319
foreign

58
00:04:13,560 --> 00:04:15,599
oh there it is

59
00:04:15,599 --> 00:04:18,858
yep you're already outside

60
00:04:24,360 --> 00:04:26,699
um you can take over

61
00:04:26,699 --> 00:04:27,780
yeah

62
00:04:27,780 --> 00:04:29,580
yeah so um

63
00:04:29,580 --> 00:04:32,580
or

64
00:04:33,479 --> 00:04:36,419
uh no this is fine you you can keep the

65
00:04:36,419 --> 00:04:40,560
slides uh and uh I'll I'll continue can

66
00:04:40,560 --> 00:04:42,360
you get closer to the bike you can we

67
00:04:42,360 --> 00:04:44,460
can really barely hear you

68
00:04:44,460 --> 00:04:47,160
yeah no I just from from the prior slide

69
00:04:47,160 --> 00:04:49,620
you know please go into the mid Echo

70
00:04:49,620 --> 00:04:50,699
tool

71
00:04:50,699 --> 00:04:52,500
um so that you're being counted as

72
00:04:52,500 --> 00:04:53,880
participants in the working group

73
00:04:53,880 --> 00:04:55,259
especially when you're in the room

74
00:04:55,259 --> 00:04:57,900
because otherwise next time there may

75
00:04:57,900 --> 00:04:59,699
not be enough seats although we're fine

76
00:04:59,699 --> 00:05:01,560
right now but that's how you're being

77
00:05:01,560 --> 00:05:04,199
counted by being in the mid Echo

78
00:05:04,199 --> 00:05:06,240
um that's that's the new thing and also

79
00:05:06,240 --> 00:05:08,460
the note-taking right uh you see the

80
00:05:08,460 --> 00:05:10,860
note page um that everybody can edit it

81
00:05:10,860 --> 00:05:12,900
so please help us with taking the notes

82
00:05:12,900 --> 00:05:15,240
when we are in the discussion sections

83
00:05:15,240 --> 00:05:16,860
of the different presentations so that

84
00:05:16,860 --> 00:05:18,540
we capture what's being

85
00:05:18,540 --> 00:05:22,080
um done in the uh meeting this time

86
00:05:22,080 --> 00:05:24,800
next slide

87
00:05:34,500 --> 00:05:37,919
join the APR disclosure page

88
00:05:37,919 --> 00:05:39,139
yeah

89
00:05:39,139 --> 00:05:43,500
right so the the IPR early this uh the

90
00:05:43,500 --> 00:05:46,919
the IPR disclosure so we're um uh

91
00:05:46,919 --> 00:05:49,800
working group that is um asking for IPR

92
00:05:49,800 --> 00:05:53,180
disclosures when a

93
00:05:53,180 --> 00:05:55,620
draft is being adopted by the working

94
00:05:55,620 --> 00:05:57,300
group and not only when it is released

95
00:05:57,300 --> 00:05:59,280
to the isg which is kind of the old

96
00:05:59,280 --> 00:06:00,840
process but I think now most working

97
00:06:00,840 --> 00:06:03,000
groups have changed to the early IPR

98
00:06:03,000 --> 00:06:07,639
disclosure process next slide

99
00:06:09,060 --> 00:06:11,340
okay so um

100
00:06:11,340 --> 00:06:14,580
when you're in uh in implementing using

101
00:06:14,580 --> 00:06:17,160
reading animal work

102
00:06:17,160 --> 00:06:20,220
um and you are discovering errors you

103
00:06:20,220 --> 00:06:22,440
know there is an error process to report

104
00:06:22,440 --> 00:06:24,720
errors to the RFC editor so that they're

105
00:06:24,720 --> 00:06:27,360
tracked um and can be verified or

106
00:06:27,360 --> 00:06:31,560
rejected and we have for a published

107
00:06:31,560 --> 00:06:34,500
aratas uh for us we have aratas for four

108
00:06:34,500 --> 00:06:36,780
of the rfcs we've published so if you're

109
00:06:36,780 --> 00:06:38,340
implementing also be sure that you read

110
00:06:38,340 --> 00:06:41,039
the Errata so that uh things that are

111
00:06:41,039 --> 00:06:43,319
wrong in the rfcs that you're taking

112
00:06:43,319 --> 00:06:44,819
that into account when you're doing

113
00:06:44,819 --> 00:06:47,340
implementations against them

114
00:06:47,340 --> 00:06:49,880
um next slide

115
00:06:51,060 --> 00:06:53,880
so and here is the the set of the

116
00:06:53,880 --> 00:06:56,520
um working group documents

117
00:06:56,520 --> 00:06:57,600
um

118
00:06:57,600 --> 00:07:00,479
so we have uh nine active working

119
00:07:00,479 --> 00:07:02,759
documents one is expired

120
00:07:02,759 --> 00:07:04,259
um we have

121
00:07:04,259 --> 00:07:06,780
um four working group documents for

122
00:07:06,780 --> 00:07:10,440
which we have not received slots

123
00:07:10,440 --> 00:07:12,900
um to speak about them in the working

124
00:07:12,900 --> 00:07:15,000
group meeting today

125
00:07:15,000 --> 00:07:17,639
um and for one of them we've received

126
00:07:17,639 --> 00:07:20,699
for the anima grasp distribution we

127
00:07:20,699 --> 00:07:22,020
received

128
00:07:22,020 --> 00:07:24,780
um notification by the authors that they

129
00:07:24,780 --> 00:07:26,819
are working on it and hope to have an

130
00:07:26,819 --> 00:07:31,440
update for the draft at iitf 116

131
00:07:31,440 --> 00:07:33,620
um and for the others we haven't

132
00:07:33,620 --> 00:07:37,800
received information about why they're

133
00:07:37,800 --> 00:07:41,280
unchanged from itf-114 so if any of the

134
00:07:41,280 --> 00:07:45,560
authors could would like to um

135
00:07:45,560 --> 00:07:48,960
stand up now and say something about it

136
00:07:48,960 --> 00:07:51,960
so that as possible we can put it up in

137
00:07:51,960 --> 00:07:54,060
the notes

138
00:07:54,060 --> 00:07:56,940
let me just also take some time to get

139
00:07:56,940 --> 00:08:01,880
myself in the uh notes section

140
00:08:06,259 --> 00:08:10,460
so that I can take notes Here

141
00:08:25,979 --> 00:08:28,099
yeah

142
00:08:28,259 --> 00:08:30,800
sorry

143
00:08:31,979 --> 00:08:34,740
okay here we are

144
00:08:34,740 --> 00:08:37,320
okay nobody uh

145
00:08:37,320 --> 00:08:40,080
from the authors here

146
00:08:40,080 --> 00:08:43,580
uh wanting to say something

147
00:08:43,799 --> 00:08:47,359
about this let me see

148
00:08:51,920 --> 00:08:54,360
I'm sorry

149
00:08:54,360 --> 00:08:57,300
I'm asking if there is any uh update on

150
00:08:57,300 --> 00:09:00,000
any of these uh three other drafts with

151
00:09:00,000 --> 00:09:01,740
respect to

152
00:09:01,740 --> 00:09:04,200
um why uh they they haven't

153
00:09:04,200 --> 00:09:05,760
um they didn't seem to have received

154
00:09:05,760 --> 00:09:09,240
work since itf14-130

155
00:09:09,860 --> 00:09:13,740
I mean the reason why they didn't is not

156
00:09:13,740 --> 00:09:16,980
important but what's important is what

157
00:09:16,980 --> 00:09:21,540
they will their plans for next I I

158
00:09:21,540 --> 00:09:23,700
thought I I replied to your email about

159
00:09:23,700 --> 00:09:26,160
this our brewski cloud has been waiting

160
00:09:26,160 --> 00:09:28,320
for working group last call for more

161
00:09:28,320 --> 00:09:30,660
than two itfs

162
00:09:30,660 --> 00:09:33,480
um that's why it's not changed

163
00:09:33,480 --> 00:09:35,760
um grasp distribution I can't speak to

164
00:09:35,760 --> 00:09:39,540
to to that work are voucher delegation

165
00:09:39,540 --> 00:09:43,080
may or may not be uh irrelevant or

166
00:09:43,080 --> 00:09:46,740
uninteresting to anybody at this point

167
00:09:46,740 --> 00:09:47,300
um

168
00:09:47,300 --> 00:09:50,880
rc8366 bis is still interesting

169
00:09:50,880 --> 00:09:54,899
um but uh other work took priority so uh

170
00:09:54,899 --> 00:09:56,760
that's why there's no no reason no

171
00:09:56,760 --> 00:09:58,860
result on that

172
00:09:58,860 --> 00:10:02,640
um but um as soon as we get uh the

173
00:10:02,640 --> 00:10:05,700
constrained stuff out of my queue then I

174
00:10:05,700 --> 00:10:09,080
will come back to that for sure

175
00:10:10,200 --> 00:10:12,360
okay

176
00:10:12,360 --> 00:10:15,080
let's take

177
00:10:18,060 --> 00:10:20,479
okay

178
00:10:31,519 --> 00:10:34,740
I don't have a question

179
00:10:34,740 --> 00:10:38,220
um when you say you may have the time

180
00:10:38,220 --> 00:10:41,300
slots for the RFC

181
00:10:41,300 --> 00:10:46,320
h366 bits uh do I mean before next item

182
00:10:46,320 --> 00:10:47,940
meeting

183
00:10:47,940 --> 00:10:50,760
do I think we'll work on it before 115

184
00:10:50,760 --> 00:10:53,040
is your question

185
00:10:53,040 --> 00:10:56,700
um seems reasonable to me that it will

186
00:10:56,700 --> 00:10:58,680
make progress before then

187
00:10:58,680 --> 00:11:01,019
um as I mean I'm assuming that the

188
00:11:01,019 --> 00:11:02,399
constrained voucher we're going to

189
00:11:02,399 --> 00:11:06,360
finish it this year and uh one is so

190
00:11:06,360 --> 00:11:08,880
um I would say just you can't focus on

191
00:11:08,880 --> 00:11:11,640
12 things you get nothing done right so

192
00:11:11,640 --> 00:11:14,100
that's the major part

193
00:11:14,100 --> 00:11:16,620
okay then I'll take

194
00:11:16,620 --> 00:11:17,220
um

195
00:11:17,220 --> 00:11:20,100
your words as you'll do something before

196
00:11:20,100 --> 00:11:24,380
next eight meeting as a notes thanks

197
00:11:24,380 --> 00:11:27,360
okay and I've I've put down that Chang

198
00:11:27,360 --> 00:11:29,040
and I need to look into the working

199
00:11:29,040 --> 00:11:31,380
group last call for brewski cloud

200
00:11:31,380 --> 00:11:35,540
and likely get that out quickly

201
00:11:36,300 --> 00:11:37,680
okay

202
00:11:37,680 --> 00:11:38,940
so

203
00:11:38,940 --> 00:11:41,399
um not going to talk about the draft for

204
00:11:41,399 --> 00:11:43,920
which we have slots in this meeting uh

205
00:11:43,920 --> 00:11:46,800
next slide uh just a short question I

206
00:11:46,800 --> 00:11:50,779
raised my hand but uh oh okay sorry

207
00:11:51,240 --> 00:11:54,779
um one question to yep thank you uh one

208
00:11:54,779 --> 00:11:56,519
question from Michael uh Michael you

209
00:11:56,519 --> 00:11:58,980
said that our voucher delegation will be

210
00:11:58,980 --> 00:12:01,680
irrelevant uh is that did I capture that

211
00:12:01,680 --> 00:12:04,560
right or or was it just regarding the

212
00:12:04,560 --> 00:12:07,920
state and Technical content uh still

213
00:12:07,920 --> 00:12:10,380
will evolve

214
00:12:10,380 --> 00:12:14,279
you tell me so I uh I we entered this

215
00:12:14,279 --> 00:12:16,079
with great enthusiasm a year and a half

216
00:12:16,079 --> 00:12:18,180
ago or something

217
00:12:18,180 --> 00:12:20,519
um and the use case

218
00:12:20,519 --> 00:12:21,959
um came from a number of different

219
00:12:21,959 --> 00:12:24,120
places

220
00:12:24,120 --> 00:12:25,320
um

221
00:12:25,320 --> 00:12:28,380
one of them was opcua

222
00:12:28,380 --> 00:12:29,160
um

223
00:12:29,160 --> 00:12:32,160
and they've moved on that that the time

224
00:12:32,160 --> 00:12:37,200
for for that for them has passed

225
00:12:37,200 --> 00:12:39,720
um and the Char possibility to align

226
00:12:39,720 --> 00:12:41,160
them their

227
00:12:41,160 --> 00:12:43,440
uh thing that they call the voucher

228
00:12:43,440 --> 00:12:45,959
which really was not to align it with

229
00:12:45,959 --> 00:12:48,839
what we're doing that we that Windows go

230
00:12:48,839 --> 00:12:50,579
over they don't have a lot of interest

231
00:12:50,579 --> 00:12:52,200
in that

232
00:12:52,200 --> 00:12:54,839
um they do need the assembly process and

233
00:12:54,839 --> 00:12:56,399
they have an interesting process a

234
00:12:56,399 --> 00:12:58,740
different process to build assemblies

235
00:12:58,740 --> 00:13:01,680
which is very different than what we did

236
00:13:01,680 --> 00:13:03,079
um

237
00:13:03,079 --> 00:13:07,320
and uh so their interest in that is is

238
00:13:07,320 --> 00:13:09,660
gone now

239
00:13:09,660 --> 00:13:10,260
um

240
00:13:10,260 --> 00:13:12,540
uh

241
00:13:12,540 --> 00:13:14,279
um Stefan

242
00:13:14,279 --> 00:13:16,200
um so

243
00:13:16,200 --> 00:13:17,880
um

244
00:13:17,880 --> 00:13:20,040
um I know you have some other interest

245
00:13:20,040 --> 00:13:24,360
within Siemens for some of this stuff

246
00:13:24,360 --> 00:13:28,500
and so I would say that uh you need to

247
00:13:28,500 --> 00:13:31,800
we need to figure out what remains from

248
00:13:31,800 --> 00:13:35,639
that part and uh it may or may not be

249
00:13:35,639 --> 00:13:37,560
relevant anymore is what I'm trying to

250
00:13:37,560 --> 00:13:39,000
say Stefan um

251
00:13:39,000 --> 00:13:42,420
um okay okay so I think that that

252
00:13:42,420 --> 00:13:43,620
um

253
00:13:43,620 --> 00:13:46,380
I think that that this is this is this

254
00:13:46,380 --> 00:13:49,019
is work that has value but I just don't

255
00:13:49,019 --> 00:13:51,180
know that we actually have a customer

256
00:13:51,180 --> 00:13:53,399
for any of it and I don't see a point in

257
00:13:53,399 --> 00:13:55,500
spending a lot of time

258
00:13:55,500 --> 00:13:57,120
um doing a lot of things if there's in

259
00:13:57,120 --> 00:13:59,339
fact nobody that presently needs it

260
00:13:59,339 --> 00:14:02,700
right okay agreed so so that essentially

261
00:14:02,700 --> 00:14:04,500
means whenever we want to to kick

262
00:14:04,500 --> 00:14:06,120
something off we could use it as a

263
00:14:06,120 --> 00:14:08,040
starting point and then basically

264
00:14:08,040 --> 00:14:13,040
enhance it I fair enough yeah thank you

265
00:14:16,040 --> 00:14:19,079
apart from the working group perspective

266
00:14:19,079 --> 00:14:21,839
that could mean this working group

267
00:14:21,839 --> 00:14:24,720
document expired before next meeting

268
00:14:24,720 --> 00:14:28,940
then uh it's dead

269
00:14:30,180 --> 00:14:32,359
foreign

270
00:14:38,779 --> 00:14:42,240
but Shane I think uh if uh the the

271
00:14:42,240 --> 00:14:44,399
Siemens folks want to reinvestigate what

272
00:14:44,399 --> 00:14:47,040
they want to get out of it and then um

273
00:14:47,040 --> 00:14:50,100
basically uh we we work to make sure

274
00:14:50,100 --> 00:14:53,339
that it does solve that remaining use

275
00:14:53,339 --> 00:14:56,040
case then we can continue but otherwise

276
00:14:56,040 --> 00:14:57,660
if if we don't have a customer

277
00:14:57,660 --> 00:14:59,399
representation here then maybe we

278
00:14:59,399 --> 00:15:01,260
declare that yes yeah I think it's okay

279
00:15:01,260 --> 00:15:02,699
if it dies we don't have to probably

280
00:15:02,699 --> 00:15:05,459
every document that we we thought was a

281
00:15:05,459 --> 00:15:07,079
good idea at one point that they could

282
00:15:07,079 --> 00:15:09,779
be come silly the problem space till

283
00:15:09,779 --> 00:15:13,320
like problem save still exists how do I

284
00:15:13,320 --> 00:15:16,019
um resell a device securely

285
00:15:16,019 --> 00:15:19,199
um and how do I uh build an assembly of

286
00:15:19,199 --> 00:15:20,399
devices

287
00:15:20,399 --> 00:15:22,920
which results in a new device which I

288
00:15:22,920 --> 00:15:24,260
sell

289
00:15:24,260 --> 00:15:27,779
and this document actually didn't solve

290
00:15:27,779 --> 00:15:30,360
that second problem very well

291
00:15:30,360 --> 00:15:32,279
um and it may be that the first the way

292
00:15:32,279 --> 00:15:34,320
it solved the first problem was was

293
00:15:34,320 --> 00:15:36,540
broken so

294
00:15:36,540 --> 00:15:37,680
um

295
00:15:37,680 --> 00:15:41,639
I would say that we need to have more

296
00:15:41,639 --> 00:15:45,600
more uh interaction with end customers

297
00:15:45,600 --> 00:15:46,620
to

298
00:15:46,620 --> 00:15:48,600
be more precise about what they need

299
00:15:48,600 --> 00:15:51,420
right and I'll also say that some of the

300
00:15:51,420 --> 00:15:53,339
some of the desires here came out of the

301
00:15:53,339 --> 00:15:56,880
reviews of of of brewski about being

302
00:15:56,880 --> 00:16:00,600
unable to do these things and

303
00:16:00,600 --> 00:16:04,079
um I don't know uh some of that's water

304
00:16:04,079 --> 00:16:06,540
under the bridge at this point right

305
00:16:06,540 --> 00:16:09,079
okay

306
00:16:11,220 --> 00:16:13,699
continue until this

307
00:16:13,699 --> 00:16:17,959
right thanks uh next slide

308
00:16:20,279 --> 00:16:24,000
okay so this is unchanged text right so

309
00:16:24,000 --> 00:16:26,160
um please make sure that uh when you're

310
00:16:26,160 --> 00:16:28,079
getting with your documents closer for

311
00:16:28,079 --> 00:16:30,000
an intended working group last call that

312
00:16:30,000 --> 00:16:32,339
you did have enough reviews uh on the

313
00:16:32,339 --> 00:16:35,639
document and one way to achieve that is

314
00:16:35,639 --> 00:16:37,800
to offer you know in return reviews for

315
00:16:37,800 --> 00:16:41,100
other authors documents so that we don't

316
00:16:41,100 --> 00:16:42,480
have to struggle with the working group

317
00:16:42,480 --> 00:16:44,100
last call and documents that haven't

318
00:16:44,100 --> 00:16:45,240
seen

319
00:16:45,240 --> 00:16:49,320
um enough uh good reviews on them

320
00:16:49,320 --> 00:16:51,779
um and we also of course always have the

321
00:16:51,779 --> 00:16:53,699
earlier reviews so

322
00:16:53,699 --> 00:16:57,120
um especially uh try to figure out which

323
00:16:57,120 --> 00:16:59,160
of the other directorates um iot

324
00:16:59,160 --> 00:17:00,720
directorate for example security

325
00:17:00,720 --> 00:17:02,220
directorate

326
00:17:02,220 --> 00:17:04,799
um the Yang doctors and so on uh may

327
00:17:04,799 --> 00:17:06,480
need to review the document anyhow

328
00:17:06,480 --> 00:17:08,959
because it does affect security

329
00:17:08,959 --> 00:17:12,359
iot cases and has young models in it

330
00:17:12,359 --> 00:17:15,480
just as an example and make sure that uh

331
00:17:15,480 --> 00:17:17,579
if that hasn't been done that you'll

332
00:17:17,579 --> 00:17:19,859
you'll contact us chairs and we'll help

333
00:17:19,859 --> 00:17:22,079
to put those early requests into the

334
00:17:22,079 --> 00:17:24,980
queue for the document

335
00:17:25,260 --> 00:17:27,660
um next slide

336
00:17:27,660 --> 00:17:30,360
okay shepher ending um always a good

337
00:17:30,360 --> 00:17:32,220
thing

338
00:17:32,220 --> 00:17:34,260
um we we mentioned that every time and

339
00:17:34,260 --> 00:17:36,780
if your document still is missing in

340
00:17:36,780 --> 00:17:38,820
Shepherd uh please you know look around

341
00:17:38,820 --> 00:17:40,799
from for the other authors who you think

342
00:17:40,799 --> 00:17:43,140
uh not being a co-author on your

343
00:17:43,140 --> 00:17:45,660
document might be good a good catch and

344
00:17:45,660 --> 00:17:48,000
contact us contact us cheers

345
00:17:48,000 --> 00:17:50,660
next slide

346
00:17:51,539 --> 00:17:52,679
okay

347
00:17:52,679 --> 00:17:55,200
um so this uh these these meetings of

348
00:17:55,200 --> 00:17:57,419
narash because we have a lot of items to

349
00:17:57,419 --> 00:17:59,340
work on and then a good amount of

350
00:17:59,340 --> 00:18:01,740
processes to deal with that um if if you

351
00:18:01,740 --> 00:18:04,200
feel that your document would need more

352
00:18:04,200 --> 00:18:06,720
time for a discussion then uh please uh

353
00:18:06,720 --> 00:18:08,400
bring it up on the mailing list talk

354
00:18:08,400 --> 00:18:10,559
with the chairs it's always not

355
00:18:10,559 --> 00:18:12,840
difficult to set up interims when enough

356
00:18:12,840 --> 00:18:15,120
people are interested to spend more time

357
00:18:15,120 --> 00:18:19,679
on individual subjects next slide um we

358
00:18:19,679 --> 00:18:23,160
obviously already have a weekly ongoing

359
00:18:23,160 --> 00:18:26,580
really good uh discussion team for most

360
00:18:26,580 --> 00:18:30,960
of the brewski documents and we'd invite

361
00:18:30,960 --> 00:18:33,539
you to also join that meeting uh to to

362
00:18:33,539 --> 00:18:35,360
discuss your brewski work when you're

363
00:18:35,360 --> 00:18:39,360
not doing that already

364
00:18:39,360 --> 00:18:42,660
next slide and yep we we don't have an

365
00:18:42,660 --> 00:18:44,280
official ITF

366
00:18:44,280 --> 00:18:46,620
um GitHub but pretty much all of the

367
00:18:46,620 --> 00:18:49,200
anima documents and the individual

368
00:18:49,200 --> 00:18:50,880
contribution documents proposed for

369
00:18:50,880 --> 00:18:55,380
anima are in the nmrwg GitHub

370
00:18:55,380 --> 00:18:57,960
um and uh when you want to contribute

371
00:18:57,960 --> 00:19:00,660
new new work we also suggest you to just

372
00:19:00,660 --> 00:19:04,020
get invited to that uh GitHub and put

373
00:19:04,020 --> 00:19:06,720
your documents into that as well

374
00:19:06,720 --> 00:19:10,020
all right and I think that is the end of

375
00:19:10,020 --> 00:19:11,760
the chair slides

376
00:19:11,760 --> 00:19:15,120
and um please go to the the note page

377
00:19:15,120 --> 00:19:18,299
where we we have the uh the agenda

378
00:19:18,299 --> 00:19:21,000
um so that would bring us to uh slot

379
00:19:21,000 --> 00:19:23,880
number two which is an update on the uh

380
00:19:23,880 --> 00:19:26,400
constraint brewski join proxy

381
00:19:26,400 --> 00:19:28,140
um and that should be uh Michael then

382
00:19:28,140 --> 00:19:29,580
presenting

383
00:19:29,580 --> 00:19:32,299
and

384
00:19:33,600 --> 00:19:36,500
let me see

385
00:19:37,440 --> 00:19:39,840
I think that's what I was trying to tell

386
00:19:39,840 --> 00:19:41,160
you

387
00:19:41,160 --> 00:19:42,000
why

388
00:19:42,000 --> 00:19:45,419
um yeah wait a second so I was here once

389
00:19:45,419 --> 00:19:48,860
Frank brewski just give me a second

390
00:19:49,500 --> 00:19:51,799
foreign

391
00:20:06,740 --> 00:20:08,760
no you're gonna share your screen

392
00:20:08,760 --> 00:20:11,280
instead no I'm not going to do that

393
00:20:11,280 --> 00:20:12,299
sorry

394
00:20:12,299 --> 00:20:14,760
yeah so then you have them loaded you

395
00:20:14,760 --> 00:20:18,080
just need to pick the right slides

396
00:20:21,419 --> 00:20:24,120
I know that that just brings it up on my

397
00:20:24,120 --> 00:20:27,500
local screen sorry on uh

398
00:20:30,059 --> 00:20:32,160
no it shouldn't it should should

399
00:20:32,160 --> 00:20:34,160
um

400
00:20:35,340 --> 00:20:38,100
you have the slides no

401
00:20:38,100 --> 00:20:39,539
uh

402
00:20:39,539 --> 00:20:42,660
um oh no you need to to click on that

403
00:20:42,660 --> 00:20:43,919
all right

404
00:20:43,919 --> 00:20:46,320
no two yeah choose a deck to share there

405
00:20:46,320 --> 00:20:48,620
you go

406
00:20:54,419 --> 00:20:55,980
thank you

407
00:20:55,980 --> 00:21:00,600
oh uh this is um this is esco's talk

408
00:21:00,600 --> 00:21:02,220
where's Esko

409
00:21:02,220 --> 00:21:05,059
you're going first

410
00:21:12,960 --> 00:21:15,960
oh

411
00:21:16,559 --> 00:21:18,240
I've listed here here with the

412
00:21:18,240 --> 00:21:20,700
constraint voucher so did I just swap

413
00:21:20,700 --> 00:21:23,419
the presenters

414
00:21:26,700 --> 00:21:29,240
okay okay

415
00:21:29,539 --> 00:21:33,900
crazy okay so this is the first working

416
00:21:33,900 --> 00:21:35,700
group I joined which does not have an

417
00:21:35,700 --> 00:21:40,220
agenda in the ITF meeting tool what

418
00:21:40,220 --> 00:21:43,679
if you click on the meeting materials

419
00:21:43,679 --> 00:21:45,659
and then agenda

420
00:21:45,659 --> 00:21:50,600
yeah we do we do have the agenda but uh

421
00:21:51,059 --> 00:21:55,620
yeah you have to copy that paste that to

422
00:21:55,620 --> 00:21:59,580
the web browser then you can say that in

423
00:21:59,580 --> 00:22:03,539
the meeting notes uh

424
00:22:03,539 --> 00:22:05,640
yeah it's a link basically yeah to the

425
00:22:05,640 --> 00:22:10,919
agenda okay that link works yeah

426
00:22:10,919 --> 00:22:15,179
okay shall I get started then if if I'm

427
00:22:15,179 --> 00:22:17,100
actually knowing how to progress the

428
00:22:17,100 --> 00:22:19,699
slides here

429
00:22:21,659 --> 00:22:24,440
happens here

430
00:22:27,659 --> 00:22:29,700
yeah meanwhile you can look at the the

431
00:22:29,700 --> 00:22:32,299
small Bruce keys on the top left side so

432
00:22:32,299 --> 00:22:35,880
sorry little beer bottles okay

433
00:22:35,880 --> 00:22:39,299
we'll present the status of constraint

434
00:22:39,299 --> 00:22:43,919
brewski also known as constraint voucher

435
00:22:43,919 --> 00:22:46,380
so this repeats a figure from a while

436
00:22:46,380 --> 00:22:49,500
ago already 2018 there was a request for

437
00:22:49,500 --> 00:22:51,600
working group adoption of constraint

438
00:22:51,600 --> 00:22:53,580
voucher and some very nice Graphics to

439
00:22:53,580 --> 00:22:54,840
go with it

440
00:22:54,840 --> 00:22:58,260
so this uh says need to fix names here

441
00:22:58,260 --> 00:22:59,520
so that

442
00:22:59,520 --> 00:23:01,320
I think we have some new naming by now

443
00:23:01,320 --> 00:23:03,659
but for the rest it's still uh

444
00:23:03,659 --> 00:23:05,880
yeah still valid

445
00:23:05,880 --> 00:23:07,679
okay so we have a long history but it's

446
00:23:07,679 --> 00:23:10,320
still progressing it holds time not very

447
00:23:10,320 --> 00:23:12,960
quickly so next slide please

448
00:23:12,960 --> 00:23:15,059
so we just tell you what happened since

449
00:23:15,059 --> 00:23:16,620
the last

450
00:23:16,620 --> 00:23:20,039
times we presented to recap the goal

451
00:23:20,039 --> 00:23:21,960
basically we would like to have a

452
00:23:21,960 --> 00:23:24,900
brewski bootstrap solution and one that

453
00:23:24,900 --> 00:23:26,940
works for constrained devices and

454
00:23:26,940 --> 00:23:29,059
constrained Networks

455
00:23:29,059 --> 00:23:32,039
I can take this off I think yeah so it's

456
00:23:32,039 --> 00:23:34,919
suitable for wireless six open mesh

457
00:23:34,919 --> 00:23:37,020
networks but also for other types of

458
00:23:37,020 --> 00:23:38,940
constrained Networks

459
00:23:38,940 --> 00:23:41,700
so key differences are that it uses for

460
00:23:41,700 --> 00:23:44,940
example cob and DT less instead of https

461
00:23:44,940 --> 00:23:48,240
has cos azine sieber instead of CMS sign

462
00:23:48,240 --> 00:23:49,559
Json

463
00:23:49,559 --> 00:23:53,220
uses constrained EST Co-op s

464
00:23:53,220 --> 00:23:56,280
this is already another RFC

465
00:23:56,280 --> 00:23:58,500
and in general we want to over uh want

466
00:23:58,500 --> 00:24:00,780
the overheads of messages and options to

467
00:24:00,780 --> 00:24:02,100
be minimized so that's good for

468
00:24:02,100 --> 00:24:04,500
constraint implementations so they need

469
00:24:04,500 --> 00:24:06,360
less code and the networks need to

470
00:24:06,360 --> 00:24:08,640
transport less data if we do that okay

471
00:24:08,640 --> 00:24:11,179
next slide

472
00:24:12,179 --> 00:24:15,059
so now we'll go by the previous versions

473
00:24:15,059 --> 00:24:17,400
that we made this one is still from

474
00:24:17,400 --> 00:24:19,020
February I might have already been

475
00:24:19,020 --> 00:24:22,440
discussed in the previous ITF meeting

476
00:24:22,440 --> 00:24:24,900
just as a recap so what we did is we

477
00:24:24,900 --> 00:24:27,480
clarified their values for the assertion

478
00:24:27,480 --> 00:24:29,700
fields

479
00:24:29,700 --> 00:24:32,400
um basically derives from Yang enum but

480
00:24:32,400 --> 00:24:34,440
it's good to make That explicit for for

481
00:24:34,440 --> 00:24:37,140
those people who are not completely up

482
00:24:37,140 --> 00:24:38,640
to speed with Jiang

483
00:24:38,640 --> 00:24:41,539
we did some editorial updates

484
00:24:41,539 --> 00:24:45,840
and also we did an update of the brewski

485
00:24:45,840 --> 00:24:48,360
well-known URI super registry so we

486
00:24:48,360 --> 00:24:51,059
proposed to add a new column there which

487
00:24:51,059 --> 00:24:54,000
is done to be applied by Ayana in the

488
00:24:54,000 --> 00:24:54,659
end

489
00:24:54,659 --> 00:24:57,539
okay next slide

490
00:24:57,539 --> 00:24:59,700
we had a version 17 with some small

491
00:24:59,700 --> 00:25:03,059
changes so uh particularly saying how we

492
00:25:03,059 --> 00:25:06,600
amend the brewski RC

493
00:25:06,600 --> 00:25:08,520
and also a new section was added in

494
00:25:08,520 --> 00:25:13,158
security considerations okay next

495
00:25:13,919 --> 00:25:16,860
and then version 18 appeared so we have

496
00:25:16,860 --> 00:25:20,460
uh there the number assigned to the

497
00:25:20,460 --> 00:25:22,860
content format so it's application slash

498
00:25:22,860 --> 00:25:25,740
voucher codes a plus c bar

499
00:25:25,740 --> 00:25:28,440
and also some Discovery extensions were

500
00:25:28,440 --> 00:25:30,240
added so there was a lot of the recent

501
00:25:30,240 --> 00:25:34,020
discussion was on Discovery

502
00:25:34,100 --> 00:25:38,220
and yeah grasp is now mentioned Co-op

503
00:25:38,220 --> 00:25:41,220
Discovery and as I understood we

504
00:25:41,220 --> 00:25:43,380
discussed the DNS SD Discovery as well

505
00:25:43,380 --> 00:25:46,380
and the idea was to keep that for future

506
00:25:46,380 --> 00:25:47,820
work

507
00:25:47,820 --> 00:25:49,380
I think there's also some presentations

508
00:25:49,380 --> 00:25:53,220
by Taurus on DNS SD coming up

509
00:25:53,220 --> 00:25:56,120
and further editorial updates were made

510
00:25:56,120 --> 00:25:59,959
okay next

511
00:26:01,080 --> 00:26:04,919
so I also implementations have been made

512
00:26:04,919 --> 00:26:07,260
over the past years and we did interrupt

513
00:26:07,260 --> 00:26:09,020
between them

514
00:26:09,020 --> 00:26:12,360
and this slide just lists uh the

515
00:26:12,360 --> 00:26:14,159
implementations some with a little bit

516
00:26:14,159 --> 00:26:16,860
of detail and some links you can go to

517
00:26:16,860 --> 00:26:19,080
the materials and click on them to see

518
00:26:19,080 --> 00:26:22,440
where that code is located

519
00:26:22,440 --> 00:26:26,419
so it's four implementations listed here

520
00:26:26,820 --> 00:26:28,980
um let me just summarize that yeah most

521
00:26:28,980 --> 00:26:31,380
of the implementations include different

522
00:26:31,380 --> 00:26:33,480
components or it's typically a registrar

523
00:26:33,480 --> 00:26:36,360
a Maza and a simulated pledge that needs

524
00:26:36,360 --> 00:26:39,080
to bootstrap

525
00:26:41,220 --> 00:26:44,400
um and then specifically on uh my own

526
00:26:44,400 --> 00:26:45,600
implementation there it's the second

527
00:26:45,600 --> 00:26:47,640
bullet

528
00:26:47,640 --> 00:26:50,340
I also uh yeah would like to mention

529
00:26:50,340 --> 00:26:53,220
that it's also meant to be a framework

530
00:26:53,220 --> 00:26:56,279
to be integrated into automatic testing

531
00:26:56,279 --> 00:26:58,380
which means that it can not only produce

532
00:26:58,380 --> 00:27:00,900
the correct formats for vouchers

533
00:27:00,900 --> 00:27:03,600
certificates Etc but also produce some

534
00:27:03,600 --> 00:27:05,940
incorrect formats on purpose just to

535
00:27:05,940 --> 00:27:06,860
test

536
00:27:06,860 --> 00:27:09,659
uh compliance of devices through that so

537
00:27:09,659 --> 00:27:12,659
to check that devices being tested will

538
00:27:12,659 --> 00:27:15,179
actually stop the bootstrap process or

539
00:27:15,179 --> 00:27:19,020
throw the appropriate error message

540
00:27:19,020 --> 00:27:22,820
okay let's go to the next slides

541
00:27:24,539 --> 00:27:27,360
so this says demo um I'm not sure if we

542
00:27:27,360 --> 00:27:29,940
have actually have time for a demo it's

543
00:27:29,940 --> 00:27:32,400
just very short I can but I have to

544
00:27:32,400 --> 00:27:34,500
share my screen to do that

545
00:27:34,500 --> 00:27:38,240
and as we know it can take a minute

546
00:27:38,520 --> 00:27:40,679
let's see if that works then then we'll

547
00:27:40,679 --> 00:27:43,279
just uh

548
00:27:43,760 --> 00:27:47,520
okay then it's first okay

549
00:27:47,520 --> 00:27:50,039
then I'll just ask to share screen it's

550
00:27:50,039 --> 00:27:52,260
now unshared

551
00:27:52,260 --> 00:27:54,480
so the request has been made

552
00:27:54,480 --> 00:27:57,360
now I think the shares could have to

553
00:27:57,360 --> 00:27:59,340
press accept

554
00:27:59,340 --> 00:28:02,039
for that I don't see any anything like

555
00:28:02,039 --> 00:28:03,419
that so

556
00:28:03,419 --> 00:28:06,500
I hope you'll just get it

557
00:28:07,620 --> 00:28:09,120
yep

558
00:28:09,120 --> 00:28:10,440
and you have to answer some questions

559
00:28:10,440 --> 00:28:13,140
whether I change my mind or not

560
00:28:13,140 --> 00:28:16,140
and then again share and then it says

561
00:28:16,140 --> 00:28:17,820
are you sure

562
00:28:17,820 --> 00:28:22,639
it's um like a multi-click process

563
00:28:23,460 --> 00:28:26,279
oh wait I can't even press share okay

564
00:28:26,279 --> 00:28:28,340
um

565
00:28:29,340 --> 00:28:32,120
thank you

566
00:28:35,240 --> 00:28:39,900
okay I can only share a window it seems

567
00:28:39,900 --> 00:28:42,440
no that was blocked in the whole screen

568
00:28:42,440 --> 00:28:46,020
so I'm just sharing this uh window you

569
00:28:46,020 --> 00:28:47,760
see some uh

570
00:28:47,760 --> 00:28:50,760
Java code here let's see is it readable

571
00:28:50,760 --> 00:28:53,179
at all

572
00:28:53,820 --> 00:28:57,419
yeah this is just to show there's a list

573
00:28:57,419 --> 00:29:00,059
of tests on the left with a lot of green

574
00:29:00,059 --> 00:29:01,080
bars

575
00:29:01,080 --> 00:29:04,039
so it's just nice to highlight that

576
00:29:04,039 --> 00:29:07,919
this repository includes testing as well

577
00:29:07,919 --> 00:29:10,620
so you can run unit tests

578
00:29:10,620 --> 00:29:12,720
that will instantiate different

579
00:29:12,720 --> 00:29:15,419
topologies like registrar and Maza and

580
00:29:15,419 --> 00:29:16,679
the number of clients and it's all

581
00:29:16,679 --> 00:29:18,960
tested on localhost

582
00:29:18,960 --> 00:29:22,200
so the code here that you see will test

583
00:29:22,200 --> 00:29:24,899
multiple pledges so it basically

584
00:29:24,899 --> 00:29:25,679
um

585
00:29:25,679 --> 00:29:29,279
has a loop to create pledges

586
00:29:29,279 --> 00:29:32,460
maybe I'll see if the mouse works then

587
00:29:32,460 --> 00:29:35,580
you can just hover over it

588
00:29:35,580 --> 00:29:37,380
okay yeah

589
00:29:37,380 --> 00:29:40,020
I can see the cursor so it creates a

590
00:29:40,020 --> 00:29:43,620
number of pledges and then starts them

591
00:29:43,620 --> 00:29:45,659
almost all together and then it waits

592
00:29:45,659 --> 00:29:48,120
for each pledge to finish each pledge

593
00:29:48,120 --> 00:29:50,640
will internally have code to perform a

594
00:29:50,640 --> 00:29:52,380
bootstrap process so that's also a way

595
00:29:52,380 --> 00:29:55,020
to test the concurrency of the server in

596
00:29:55,020 --> 00:29:57,360
a very simple way

597
00:29:57,360 --> 00:29:59,399
and there are a couple of tests like

598
00:29:59,399 --> 00:30:02,159
this so um every time we hit some

599
00:30:02,159 --> 00:30:05,460
interrupt issue uh like weight you did

600
00:30:05,460 --> 00:30:08,220
not use that flag in the certificate or

601
00:30:08,220 --> 00:30:10,500
in the voucher then well we can add a

602
00:30:10,500 --> 00:30:11,820
test here that

603
00:30:11,820 --> 00:30:15,120
tests a specific situation and then

604
00:30:15,120 --> 00:30:17,520
yeah to see that the register of the

605
00:30:17,520 --> 00:30:20,279
miles home handles the the case

606
00:30:20,279 --> 00:30:23,640
correctly is this now you know all your

607
00:30:23,640 --> 00:30:25,320
Commissioners is actually including

608
00:30:25,320 --> 00:30:27,600
testing of uh some of the other

609
00:30:27,600 --> 00:30:30,779
implementation code that you listed as a

610
00:30:30,779 --> 00:30:34,140
interval yeah this is using only uh

611
00:30:34,140 --> 00:30:37,380
let's say my code which is uh actually

612
00:30:37,380 --> 00:30:39,659
forked from the open thread project I

613
00:30:39,659 --> 00:30:41,100
should say so that's where it started

614
00:30:41,100 --> 00:30:43,799
there's an open source project but I

615
00:30:43,799 --> 00:30:45,840
basically made my own Fork to develop

616
00:30:45,840 --> 00:30:47,940
further so it does not test any of the

617
00:30:47,940 --> 00:30:49,799
all those codes but you could

618
00:30:49,799 --> 00:30:50,399
um

619
00:30:50,399 --> 00:30:53,640
basically use the software components to

620
00:30:53,640 --> 00:30:56,340
uh yeah access other people's code so

621
00:30:56,340 --> 00:30:57,960
maybe I'll just

622
00:30:57,960 --> 00:31:01,820
quickly try to share another tab

623
00:31:02,760 --> 00:31:05,520
how would that work stop screen share

624
00:31:05,520 --> 00:31:08,159
and so the network setup in

625
00:31:08,159 --> 00:31:12,600
in out the proxy is that the registrar

626
00:31:12,600 --> 00:31:14,700
IP address is explicitly configured or

627
00:31:14,700 --> 00:31:18,120
on Layer Two or for the red or that you

628
00:31:18,120 --> 00:31:20,220
do have an untrusted Network where you

629
00:31:20,220 --> 00:31:22,820
can do the discovery yeah so for this

630
00:31:22,820 --> 00:31:25,799
test for example it's all pre-configured

631
00:31:25,799 --> 00:31:28,740
so no Discovery at all

632
00:31:28,740 --> 00:31:30,899
so that's quite simple and it's also on

633
00:31:30,899 --> 00:31:33,000
localhost

634
00:31:33,000 --> 00:31:35,580
so all the discovery aspects are not in

635
00:31:35,580 --> 00:31:38,720
this code actually

636
00:31:40,500 --> 00:31:43,460
see window

637
00:31:45,120 --> 00:31:47,340
show something else here you see a

638
00:31:47,340 --> 00:31:49,080
command line interface I'll make it a

639
00:31:49,080 --> 00:31:49,740
little bit bigger

640
00:31:49,740 --> 00:31:57,099
[Music]

641
00:31:57,360 --> 00:31:59,399
okay so simple command line interface

642
00:31:59,399 --> 00:32:02,880
you can start pledge

643
00:32:02,880 --> 00:32:06,179
on the command line you provide yeah an

644
00:32:06,179 --> 00:32:08,159
IP address basically of the registrar to

645
00:32:08,159 --> 00:32:10,140
connect to no Discovery here just

646
00:32:10,140 --> 00:32:11,700
hard-coded

647
00:32:11,700 --> 00:32:14,220
and you press RV and you get a lot of

648
00:32:14,220 --> 00:32:16,399
debug stuff

649
00:32:16,399 --> 00:32:20,779
so at the end it will get

650
00:32:21,539 --> 00:32:23,940
yeah basically some bytes here and then

651
00:32:23,940 --> 00:32:26,340
it means that the voucher request was

652
00:32:26,340 --> 00:32:28,380
successful

653
00:32:28,380 --> 00:32:30,600
so this went all the way to my Cloud

654
00:32:30,600 --> 00:32:33,799
Server in Frankfurt

655
00:32:34,860 --> 00:32:36,539
just to make it more exciting because

656
00:32:36,539 --> 00:32:38,580
it's just a bunch of text

657
00:32:38,580 --> 00:32:40,740
okay now you can do enroll which is the

658
00:32:40,740 --> 00:32:42,779
EST enrollment part so then it will

659
00:32:42,779 --> 00:32:45,899
print here the certificates uh

660
00:32:45,899 --> 00:32:48,360
here and the private key

661
00:32:48,360 --> 00:32:50,279
basically that was the result of this

662
00:32:50,279 --> 00:32:52,260
enrollment process

663
00:32:52,260 --> 00:32:54,120
so basically the pledge creates the

664
00:32:54,120 --> 00:32:55,919
private key and then

665
00:32:55,919 --> 00:32:58,679
yeah that performs EST to get a signed

666
00:32:58,679 --> 00:33:01,020
certificate

667
00:33:01,020 --> 00:33:05,779
okay then I'll just move back

668
00:33:07,200 --> 00:33:09,899
okay stop the screen share I think it

669
00:33:09,899 --> 00:33:13,620
was some content still on the slides

670
00:33:13,620 --> 00:33:19,340
so we'll see what there's the next steps

671
00:33:22,140 --> 00:33:25,919
yeah open issues and next steps so we do

672
00:33:25,919 --> 00:33:28,980
keep the GitHub issue tracker so that's

673
00:33:28,980 --> 00:33:31,799
the main let's say indicator of open

674
00:33:31,799 --> 00:33:34,440
issues that we use

675
00:33:34,440 --> 00:33:35,940
at the time of writing there were about

676
00:33:35,940 --> 00:33:38,519
12 or 13 issues open

677
00:33:38,519 --> 00:33:40,919
so we have also interrupt issues and

678
00:33:40,919 --> 00:33:42,960
future labeled issues these are not

679
00:33:42,960 --> 00:33:46,519
really counted for the documents

680
00:33:46,519 --> 00:33:48,899
and yeah there's just I think three

681
00:33:48,899 --> 00:33:51,000
important ones uh the first one is to

682
00:33:51,000 --> 00:33:52,919
check all the examples these are now

683
00:33:52,919 --> 00:33:54,720
outdated so we have to check examples

684
00:33:54,720 --> 00:33:57,840
against the running code to make proper

685
00:33:57,840 --> 00:34:01,860
real examples also in the document

686
00:34:01,860 --> 00:34:03,659
and I think the discovery section still

687
00:34:03,659 --> 00:34:05,700
needs a bit of update to match the new

688
00:34:05,700 --> 00:34:08,339
uh constraint joint proxy that Michael

689
00:34:08,339 --> 00:34:11,060
will talk about

690
00:34:11,399 --> 00:34:13,560
and there was one discussion item that I

691
00:34:13,560 --> 00:34:16,379
opened so it's a possibility to optimize

692
00:34:16,379 --> 00:34:19,859
optimize for constraint networks to so

693
00:34:19,859 --> 00:34:21,918
reduce the data size

694
00:34:21,918 --> 00:34:25,918
by yeah excluding one the root CA shirt

695
00:34:25,918 --> 00:34:28,440
in the handshake of the Pledge so that

696
00:34:28,440 --> 00:34:30,780
was an also GitHub issue

697
00:34:30,780 --> 00:34:32,399
opened for that but that's open for

698
00:34:32,399 --> 00:34:36,119
discussion so it's uh proposal

699
00:34:36,119 --> 00:34:38,520
or basically how data can be reduced

700
00:34:38,520 --> 00:34:42,179
with the assumption that the register

701
00:34:42,179 --> 00:34:45,480
has root CA certs already pre-loaded of

702
00:34:45,480 --> 00:34:47,339
all the devices that it wants to onboard

703
00:34:47,339 --> 00:34:49,679
in its Network

704
00:34:49,679 --> 00:34:52,020
okay and that's it I think yeah

705
00:34:52,020 --> 00:34:55,500
uh so I see from a year or more ago um

706
00:34:55,500 --> 00:34:58,380
three early reviews iot dear exact year

707
00:34:58,380 --> 00:34:59,940
in gen heart and they said it wasn't

708
00:34:59,940 --> 00:35:02,700
ready so uh do you feel that uh all

709
00:35:02,700 --> 00:35:06,080
their concerns have been resolved

710
00:35:07,260 --> 00:35:09,240
yeah I think at the time we opened a

711
00:35:09,240 --> 00:35:11,880
couple of issues on that on GitHub

712
00:35:11,880 --> 00:35:15,480
I think these are now uh closed or as

713
00:35:15,480 --> 00:35:17,339
far as I can see

714
00:35:17,339 --> 00:35:20,220
so I did not actually check uh that's

715
00:35:20,220 --> 00:35:23,040
yeah those feedback emails but I think

716
00:35:23,040 --> 00:35:24,599
Michael opened at the time lots of

717
00:35:24,599 --> 00:35:27,480
issues for those and one by one we have

718
00:35:27,480 --> 00:35:30,020
resolved them

719
00:35:31,260 --> 00:35:34,200
so I think I would need to check then it

720
00:35:34,200 --> 00:35:35,280
would be good to check the original

721
00:35:35,280 --> 00:35:37,200
emails I think to see if that's really

722
00:35:37,200 --> 00:35:38,359
the case

723
00:35:38,359 --> 00:35:42,980
but I would assume yes

724
00:35:45,839 --> 00:35:49,500
okay thank you and questions uh who has

725
00:35:49,500 --> 00:35:53,359
read the latest version of this draft

726
00:35:54,000 --> 00:35:55,200
to

727
00:35:55,200 --> 00:35:57,300
okay not very many

728
00:35:57,300 --> 00:36:00,660
yeah so uh try to find more reviewers

729
00:36:00,660 --> 00:36:03,060
that's the usual thing right I mean yeah

730
00:36:03,060 --> 00:36:04,859
that's something when we get to working

731
00:36:04,859 --> 00:36:06,960
group last call it's going to be

732
00:36:06,960 --> 00:36:09,720
probably the most important uh remaining

733
00:36:09,720 --> 00:36:13,939
right yeah and fix the examples

734
00:36:22,859 --> 00:36:25,200
I think then let's try this Mr

735
00:36:25,200 --> 00:36:28,939
Richardson again shall we

736
00:36:31,859 --> 00:36:34,579
excited

737
00:36:34,579 --> 00:36:37,260
and that would be then the constrained

738
00:36:37,260 --> 00:36:40,079
joint proxy I decided to dress for the

739
00:36:40,079 --> 00:36:42,839
dance working group which is next

740
00:36:42,839 --> 00:36:45,300
so there you go

741
00:36:45,300 --> 00:36:47,359
um

742
00:36:47,780 --> 00:36:50,400
oh yeah all right

743
00:36:50,400 --> 00:36:53,160
uh yeah sure you can go next slide um so

744
00:36:53,160 --> 00:36:54,599
um

745
00:36:54,599 --> 00:36:57,480
this this document went through to uh

746
00:36:57,480 --> 00:36:59,820
through working group last call I would

747
00:36:59,820 --> 00:37:02,220
say even was it I think it was even

748
00:37:02,220 --> 00:37:05,099
before the previous ietf

749
00:37:05,099 --> 00:37:08,339
um and then um went out to the Ayanna

750
00:37:08,339 --> 00:37:11,339
for expert review specifically on the

751
00:37:11,339 --> 00:37:13,980
topic of

752
00:37:13,980 --> 00:37:14,579
um

753
00:37:14,579 --> 00:37:18,800
the co-op pieces and the expert reviews

754
00:37:18,800 --> 00:37:21,599
reviewers were a little bit uh

755
00:37:21,599 --> 00:37:23,640
displeased with our use of Co-op

756
00:37:23,640 --> 00:37:25,680
discovery

757
00:37:25,680 --> 00:37:27,780
um and

758
00:37:27,780 --> 00:37:30,180
I guess in uh

759
00:37:30,180 --> 00:37:31,740
September

760
00:37:31,740 --> 00:37:33,660
I think

761
00:37:33,660 --> 00:37:36,119
um maybe it was beginning of middle of

762
00:37:36,119 --> 00:37:38,820
October a few weeks ago

763
00:37:38,820 --> 00:37:42,660
um we had a cult a core working group

764
00:37:42,660 --> 00:37:45,300
discussion uh about that and it

765
00:37:45,300 --> 00:37:48,359
overflowed into the iot Ops uh working

766
00:37:48,359 --> 00:37:50,940
group because they were in fact uh they

767
00:37:50,940 --> 00:37:52,320
were scheduled one on top of each other

768
00:37:52,320 --> 00:37:56,880
in Virtual uh in uh virtual interims

769
00:37:56,880 --> 00:37:57,960
um and since we're all going to the

770
00:37:57,960 --> 00:38:00,480
other one that we just did that there

771
00:38:00,480 --> 00:38:02,760
and um

772
00:38:02,760 --> 00:38:05,099
the overall thing was the question

773
00:38:05,099 --> 00:38:09,960
became well why is the uh join proxy

774
00:38:09,960 --> 00:38:12,839
format where we went from uh previously

775
00:38:12,839 --> 00:38:18,420
we went from uh uh bistoc uh seabor

776
00:38:18,420 --> 00:38:20,400
um to a

777
00:38:20,400 --> 00:38:23,640
encrypted bit of seaboor

778
00:38:23,640 --> 00:38:26,099
um and then the question was well why

779
00:38:26,099 --> 00:38:29,000
exactly is it not just a co-op header

780
00:38:29,000 --> 00:38:31,800
and I said well because I thought that

781
00:38:31,800 --> 00:38:33,240
we were going to blow too many bytes

782
00:38:33,240 --> 00:38:34,500
doing that

783
00:38:34,500 --> 00:38:36,240
and the response says well you don't

784
00:38:36,240 --> 00:38:37,560
need this you don't need this and you

785
00:38:37,560 --> 00:38:38,880
don't need this and actually one of the

786
00:38:38,880 --> 00:38:43,440
questions is why RFC 90 31 which was six

787
00:38:43,440 --> 00:38:45,900
tis minimal security which does use a

788
00:38:45,900 --> 00:38:48,480
co-op header why it has so many of those

789
00:38:48,480 --> 00:38:50,339
things and the answer is maybe it didn't

790
00:38:50,339 --> 00:38:52,380
need them

791
00:38:52,380 --> 00:38:54,359
um so

792
00:38:54,359 --> 00:38:55,680
um

793
00:38:55,680 --> 00:38:57,780
the short of is that we changed it so

794
00:38:57,780 --> 00:38:59,760
this this slide really just talks to you

795
00:38:59,760 --> 00:39:02,040
about what it looks like in grasp and

796
00:39:02,040 --> 00:39:04,380
there are several different ports that

797
00:39:04,380 --> 00:39:06,000
are returned

798
00:39:06,000 --> 00:39:08,720
um next slide please

799
00:39:11,760 --> 00:39:13,020
um and

800
00:39:13,020 --> 00:39:15,540
you know again illustrating in grasp but

801
00:39:15,540 --> 00:39:18,960
you need to uh you would do uh a

802
00:39:18,960 --> 00:39:21,660
discovery by the join proxy to find the

803
00:39:21,660 --> 00:39:23,119
registrar

804
00:39:23,119 --> 00:39:27,180
and now what we return actually is uh

805
00:39:27,180 --> 00:39:30,780
not is weird rpy thing but in fact just

806
00:39:30,780 --> 00:39:34,040
Co-op so next slide please

807
00:39:35,900 --> 00:39:37,560
so

808
00:39:37,560 --> 00:39:39,599
um as I said so previously we had this

809
00:39:39,599 --> 00:39:42,119
thing on the upper left this this

810
00:39:42,119 --> 00:39:43,740
built-up structure then we said well

811
00:39:43,740 --> 00:39:46,619
let's encrypt that in one one four and

812
00:39:46,619 --> 00:39:48,180
now we said let's just make it a co-op

813
00:39:48,180 --> 00:39:50,040
header

814
00:39:50,040 --> 00:39:53,040
um now actually this is wrong the

815
00:39:53,040 --> 00:39:55,040
document is wrong when arguing

816
00:39:55,040 --> 00:39:57,839
specifically the proxy scheme option

817
00:39:57,839 --> 00:40:00,060
which says Co-op we believe that we

818
00:40:00,060 --> 00:40:02,099
don't even need so that actually saves

819
00:40:02,099 --> 00:40:03,900
another six bytes

820
00:40:03,900 --> 00:40:06,060
um the end result is that the cost of

821
00:40:06,060 --> 00:40:09,420
making it a co-app header versus making

822
00:40:09,420 --> 00:40:14,099
it this crafted cddl in the upper right

823
00:40:14,099 --> 00:40:16,320
um it's actually only two bytes two

824
00:40:16,320 --> 00:40:18,300
bytes extra to make it a co-op header

825
00:40:18,300 --> 00:40:19,859
and make it all look same

826
00:40:19,859 --> 00:40:21,540
so

827
00:40:21,540 --> 00:40:22,980
um

828
00:40:22,980 --> 00:40:25,859
what I'd like the working group we I've

829
00:40:25,859 --> 00:40:28,020
published this document the new document

830
00:40:28,020 --> 00:40:29,760
with this code in it I haven't merged

831
00:40:29,760 --> 00:40:31,260
the poll requests and there's three of

832
00:40:31,260 --> 00:40:33,960
them piled on top of each other because

833
00:40:33,960 --> 00:40:35,160
I don't feel like the working group

834
00:40:35,160 --> 00:40:37,920
actually has has really had a chance to

835
00:40:37,920 --> 00:40:41,220
really say yes or no so I'd like you to

836
00:40:41,220 --> 00:40:44,180
do that next slide please

837
00:40:45,240 --> 00:40:47,280
um yeah so that's basically it what

838
00:40:47,280 --> 00:40:49,740
we've done it's a it's a large change to

839
00:40:49,740 --> 00:40:52,920
the document at a very late State

840
00:40:52,920 --> 00:40:56,160
um and uh I would say the implementers

841
00:40:56,160 --> 00:40:57,839
are like uh

842
00:40:57,839 --> 00:41:00,359
whatever we had six changes what's one

843
00:41:00,359 --> 00:41:02,220
more right

844
00:41:02,220 --> 00:41:03,839
um but this at least makes the core

845
00:41:03,839 --> 00:41:06,240
working group and the expert reviewers

846
00:41:06,240 --> 00:41:07,859
happy

847
00:41:07,859 --> 00:41:09,960
um and uh

848
00:41:09,960 --> 00:41:12,180
as I said it cost us two bytes and it

849
00:41:12,180 --> 00:41:14,880
now it looks kind of really really just

850
00:41:14,880 --> 00:41:16,859
correct and the other interesting thing

851
00:41:16,859 --> 00:41:18,540
is that it aligns it pretty much

852
00:41:18,540 --> 00:41:22,859
perfectly with RFC 9031 uh which has OS

853
00:41:22,859 --> 00:41:25,980
core security and no ttls and Rob thank

854
00:41:25,980 --> 00:41:27,660
you

855
00:41:27,660 --> 00:41:29,160
um so that's just sort of like a process

856
00:41:29,160 --> 00:41:30,359
question really so I'm trying to

857
00:41:30,359 --> 00:41:33,480
understand uh sir Robertson 6 and 80. um

858
00:41:33,480 --> 00:41:35,400
at the moment it's on my sitting on my

859
00:41:35,400 --> 00:41:37,200
pad of things with an ad I can't say

860
00:41:37,200 --> 00:41:39,359
this is 85 or something does this need

861
00:41:39,359 --> 00:41:41,520
another working group last call should I

862
00:41:41,520 --> 00:41:43,440
formally return this document back to

863
00:41:43,440 --> 00:41:45,480
the working group to last call again do

864
00:41:45,480 --> 00:41:48,480
you think that's I I don't quite

865
00:41:48,480 --> 00:41:49,920
like the scope of the changes you sort

866
00:41:49,920 --> 00:41:51,540
of describe makes me think another last

867
00:41:51,540 --> 00:41:53,040
cause probably yeah that's what I would

868
00:41:53,040 --> 00:41:55,500
like I I think I think it needs to to go

869
00:41:55,500 --> 00:41:58,079
through a working group uh uh consensus

870
00:41:58,079 --> 00:41:59,640
call of some kind you can call it a

871
00:41:59,640 --> 00:42:01,380
working group last call this might be

872
00:42:01,380 --> 00:42:03,720
the third one or is that the other is

873
00:42:03,720 --> 00:42:05,940
that the other document we returned

874
00:42:05,940 --> 00:42:07,440
um but we have to come back to the

875
00:42:07,440 --> 00:42:09,420
working group with this so so that if

876
00:42:09,420 --> 00:42:11,579
you go look on the data tracker you will

877
00:42:11,579 --> 00:42:13,260
see the diffs because I posted a new

878
00:42:13,260 --> 00:42:15,720
version okay but if you go look in the

879
00:42:15,720 --> 00:42:18,180
GitHub you'll see there's three stacked

880
00:42:18,180 --> 00:42:20,940
pull requests uh that make all these

881
00:42:20,940 --> 00:42:22,680
changes so

882
00:42:22,680 --> 00:42:24,060
um if you want to come back and see

883
00:42:24,060 --> 00:42:25,680
exactly what the changes are they're

884
00:42:25,680 --> 00:42:27,540
there in the GitHub

885
00:42:27,540 --> 00:42:29,520
um and you could we can Wordsmith them

886
00:42:29,520 --> 00:42:31,800
or whatever you someone wants to do that

887
00:42:31,800 --> 00:42:33,780
way but I didn't feel that it was right

888
00:42:33,780 --> 00:42:36,900
to merge it until uh you know the

889
00:42:36,900 --> 00:42:38,700
working group had a comment but on the

890
00:42:38,700 --> 00:42:40,320
other hand you can just go look at the

891
00:42:40,320 --> 00:42:43,200
document and you'll see the the diff you

892
00:42:43,200 --> 00:42:45,480
know makes it very clear uh what's going

893
00:42:45,480 --> 00:42:48,420
on uh for that so yeah can I jump into

894
00:42:48,420 --> 00:42:50,880
on behalf of the old community that

895
00:42:50,880 --> 00:42:53,280
still likes to have draft versions and

896
00:42:53,280 --> 00:42:55,140
rfcdef and everything

897
00:42:55,140 --> 00:42:57,300
just merge the bloody thing put out a

898
00:42:57,300 --> 00:42:59,400
new version I did that so I I put out

899
00:42:59,400 --> 00:43:02,339
the new version from the branch okay so

900
00:43:02,339 --> 00:43:04,980
you get both you get the RFC diff and

901
00:43:04,980 --> 00:43:06,480
you get the GitHub so you have them both

902
00:43:06,480 --> 00:43:08,160
you can you can you can look at either

903
00:43:08,160 --> 00:43:10,440
way to see how it works and and that's

904
00:43:10,440 --> 00:43:13,260
why I did that way yeah okay but so from

905
00:43:13,260 --> 00:43:14,819
the process I'll return it back to the

906
00:43:14,819 --> 00:43:15,839
working group looking at the chairs

907
00:43:15,839 --> 00:43:17,579
you're happy for me to do that

908
00:43:17,579 --> 00:43:20,640
yeah okay thank you and and I I would

909
00:43:20,640 --> 00:43:22,619
appreciate chairs if if you establish if

910
00:43:22,619 --> 00:43:24,599
you did this quickly and we I would like

911
00:43:24,599 --> 00:43:27,060
to get this off of our plate

912
00:43:27,060 --> 00:43:29,520
um you know before people disappear into

913
00:43:29,520 --> 00:43:32,720
Christmas eggnog or whatever

914
00:43:32,720 --> 00:43:35,400
so uh

915
00:43:35,400 --> 00:43:38,099
is there any good marketing for this

916
00:43:38,099 --> 00:43:40,680
other than we kind of got derailed into

917
00:43:40,680 --> 00:43:42,420
this because we started using Co-op

918
00:43:42,420 --> 00:43:44,040
Discovery and then we got all these

919
00:43:44,040 --> 00:43:46,380
Co-op experts and they wanted us to do

920
00:43:46,380 --> 00:43:48,119
co-op headers and now it's just two

921
00:43:48,119 --> 00:43:50,819
bytes but is there any other benefit uh

922
00:43:50,819 --> 00:43:54,180
we we are reusing so if we assume that

923
00:43:54,180 --> 00:43:57,900
the uh join proxy is in fact an iot

924
00:43:57,900 --> 00:44:00,680
device that otherwise speaks co-app

925
00:44:00,680 --> 00:44:03,359
that we've just removed a bunch of

926
00:44:03,359 --> 00:44:07,319
bespoke custom code and we're now using

927
00:44:07,319 --> 00:44:09,300
the common Co-op code

928
00:44:09,300 --> 00:44:12,180
so I that might actually represent a

929
00:44:12,180 --> 00:44:16,619
code savings but particularly the join

930
00:44:16,619 --> 00:44:18,660
code is there the join proxy code is

931
00:44:18,660 --> 00:44:20,160
code that probably doesn't run that

932
00:44:20,160 --> 00:44:22,079
often and therefore probably doesn't get

933
00:44:22,079 --> 00:44:24,359
very many eyes looking at it whereas the

934
00:44:24,359 --> 00:44:27,300
co-op code that you would use is

935
00:44:27,300 --> 00:44:29,160
hopefully code that if you break you

936
00:44:29,160 --> 00:44:32,040
break your device so presumably that

937
00:44:32,040 --> 00:44:34,500
means that the this code is going to be

938
00:44:34,500 --> 00:44:36,180
much more

939
00:44:36,180 --> 00:44:37,140
um

940
00:44:37,140 --> 00:44:39,540
you better maintained is what I'm trying

941
00:44:39,540 --> 00:44:41,760
to say right

942
00:44:41,760 --> 00:44:43,140
so

943
00:44:43,140 --> 00:44:44,579
um the other thing I'll say is that so

944
00:44:44,579 --> 00:44:46,560
Panos is one of the co-authors and he's

945
00:44:46,560 --> 00:44:48,900
still around he's still doing cfrg stuff

946
00:44:48,900 --> 00:44:50,819
he doesn't have a lot of Cycles for this

947
00:44:50,819 --> 00:44:53,400
but Peter has really declared himself as

948
00:44:53,400 --> 00:44:56,280
really really retired so I'm the only

949
00:44:56,280 --> 00:44:58,020
author standing so

950
00:44:58,020 --> 00:45:00,839
um uh please please your comments will

951
00:45:00,839 --> 00:45:03,859
be welcome yep

952
00:45:04,319 --> 00:45:06,660
let's go

953
00:45:06,660 --> 00:45:08,700
yeah let's go Dyke

954
00:45:08,700 --> 00:45:09,660
um

955
00:45:09,660 --> 00:45:11,520
yeah I agree with what you said about

956
00:45:11,520 --> 00:45:14,819
Co-op so you kind of uh reuse a code

957
00:45:14,819 --> 00:45:18,300
base that is presumably already going to

958
00:45:18,300 --> 00:45:20,760
be on the device yeah that's the idea

959
00:45:20,760 --> 00:45:23,960
the constrained device

960
00:45:24,119 --> 00:45:25,920
um yeah one thing is that it does have

961
00:45:25,920 --> 00:45:28,079
some impact on the behavior

962
00:45:28,079 --> 00:45:31,859
of uh especially the forwarding so

963
00:45:31,859 --> 00:45:35,160
with the old protocol basically the yeah

964
00:45:35,160 --> 00:45:37,500
the message was sent towards the

965
00:45:37,500 --> 00:45:39,599
Registrar on a specific port

966
00:45:39,599 --> 00:45:41,640
and then nothing happened but with Co-op

967
00:45:41,640 --> 00:45:44,640
you basically if you send something it's

968
00:45:44,640 --> 00:45:46,980
in the form of a request and a request

969
00:45:46,980 --> 00:45:49,079
gets a response normally

970
00:45:49,079 --> 00:45:50,579
so they're suddenly in this extra

971
00:45:50,579 --> 00:45:52,560
message response that we have this I

972
00:45:52,560 --> 00:45:55,260
think we said it's non-confirmable

973
00:45:55,260 --> 00:45:57,240
yeah that's right but you still get to

974
00:45:57,240 --> 00:46:00,240
response so it's not an acknowledgment

975
00:46:00,240 --> 00:46:03,000
about every request also gets a response

976
00:46:03,000 --> 00:46:05,160
so even the non-confirmable ones but the

977
00:46:05,160 --> 00:46:08,579
good news is you can suppress it so you

978
00:46:08,579 --> 00:46:10,980
basically the server side could decide

979
00:46:10,980 --> 00:46:12,599
to just like

980
00:46:12,599 --> 00:46:14,579
generate the response and throw it away

981
00:46:14,579 --> 00:46:17,220
immediately like hey it was lost

982
00:46:17,220 --> 00:46:19,440
and that's that's kind of allowed in

983
00:46:19,440 --> 00:46:21,599
non-confirmable Co-op

984
00:46:21,599 --> 00:46:23,460
so that's something we could do but it

985
00:46:23,460 --> 00:46:26,280
is uh something to address I think to to

986
00:46:26,280 --> 00:46:28,460
look at that we don't want that

987
00:46:28,460 --> 00:46:31,560
2.04 response message uh coming back

988
00:46:31,560 --> 00:46:33,780
because it care it has no value in our

989
00:46:33,780 --> 00:46:35,040
case I think

990
00:46:35,040 --> 00:46:36,660
so so

991
00:46:36,660 --> 00:46:39,780
um I thought we got it right in RFC 9031

992
00:46:39,780 --> 00:46:42,720
that there isn't a response

993
00:46:42,720 --> 00:46:45,240
um you're telling me different so

994
00:46:45,240 --> 00:46:46,020
um

995
00:46:46,020 --> 00:46:47,700
um I'll go back and review the two

996
00:46:47,700 --> 00:46:51,300
things and I may ask you to confirm my

997
00:46:51,300 --> 00:46:54,300
understanding at that point yeah so yeah

998
00:46:54,300 --> 00:46:56,040
the thing is with with Co-op if you have

999
00:46:56,040 --> 00:46:58,560
confirmable uh then you will get an

1000
00:46:58,560 --> 00:47:01,560
acknowledgment to the message

1001
00:47:01,560 --> 00:47:03,599
and usually the acknowledgment and the

1002
00:47:03,599 --> 00:47:05,940
response are combined in one so it's the

1003
00:47:05,940 --> 00:47:08,520
most efficient way

1004
00:47:08,520 --> 00:47:09,780
um but if you do not have the

1005
00:47:09,780 --> 00:47:11,940
acknowledgment you can still get the

1006
00:47:11,940 --> 00:47:13,200
response

1007
00:47:13,200 --> 00:47:15,300
so that's right but the good news is

1008
00:47:15,300 --> 00:47:17,520
that the server can basically suppress

1009
00:47:17,520 --> 00:47:19,319
or throw away the response and the

1010
00:47:19,319 --> 00:47:21,180
client won't bother because it's not

1011
00:47:21,180 --> 00:47:23,819
waiting for the response anymore I see

1012
00:47:23,819 --> 00:47:27,200
Marco back there who might be an expert

1013
00:47:27,200 --> 00:47:30,119
she's looking he's looking like no

1014
00:47:30,119 --> 00:47:33,599
um so we so 90 31 said confirmable and I

1015
00:47:33,599 --> 00:47:35,640
just copy and pasted that but that

1016
00:47:35,640 --> 00:47:37,260
sounds wrong now

1017
00:47:37,260 --> 00:47:39,240
if it's confirmable probably should be

1018
00:47:39,240 --> 00:47:41,040
non-confirmable

1019
00:47:41,040 --> 00:47:44,040
um the idea is that if if something gets

1020
00:47:44,040 --> 00:47:47,579
lost in uh yeah the dtls for example

1021
00:47:47,579 --> 00:47:49,560
there will be already a re-transmission

1022
00:47:49,560 --> 00:47:52,800
happening yeah by the clients uh in the

1023
00:47:52,800 --> 00:47:55,200
dtlash stack or by the server yeah so

1024
00:47:55,200 --> 00:47:56,460
that's right the Pledge is going to

1025
00:47:56,460 --> 00:47:58,440
re-transmit himself so there's no point

1026
00:47:58,440 --> 00:48:00,060
in the proxy retransmitting that would

1027
00:48:00,060 --> 00:48:02,339
be silly yeah so it's non-confirmable

1028
00:48:02,339 --> 00:48:04,260
that's fine I think that's a good way to

1029
00:48:04,260 --> 00:48:07,920
do it but um you still get this normally

1030
00:48:07,920 --> 00:48:09,420
this thing with Co-op that it also

1031
00:48:09,420 --> 00:48:11,400
generates a response if you have a

1032
00:48:11,400 --> 00:48:13,680
request right could be suppressed as

1033
00:48:13,680 --> 00:48:15,300
well but it's an explicit thing you have

1034
00:48:15,300 --> 00:48:18,420
to specify I think uh okay

1035
00:48:18,420 --> 00:48:20,400
so I hope the note taker has that but

1036
00:48:20,400 --> 00:48:22,319
I'll I'll get yeah I'll also try to

1037
00:48:22,319 --> 00:48:25,099
remember it outside

1038
00:48:25,260 --> 00:48:28,619
and Marco we think that the proxy scheme

1039
00:48:28,619 --> 00:48:31,200
is unnecessary did you did you see that

1040
00:48:31,200 --> 00:48:32,579
message you agree

1041
00:48:32,579 --> 00:48:36,200
yeah and Rob

1042
00:48:37,440 --> 00:48:39,420
Marco I haven't seen that message

1043
00:48:39,420 --> 00:48:42,119
specifically just back in Esco yeah if

1044
00:48:42,119 --> 00:48:43,680
you send a confirmable request you

1045
00:48:43,680 --> 00:48:45,720
expect not back not necessarily a

1046
00:48:45,720 --> 00:48:47,640
response yeah so there's another way to

1047
00:48:47,640 --> 00:48:48,839
say I want to response back from you

1048
00:48:48,839 --> 00:48:50,220
that can come or not depends on the

1049
00:48:50,220 --> 00:48:53,180
application okay

1050
00:48:53,520 --> 00:48:56,160
so Rob Wilson just going to Echo in the

1051
00:48:56,160 --> 00:48:58,140
comments that um tell us made it earlier

1052
00:48:58,140 --> 00:48:59,400
that this and this worker is called

1053
00:48:59,400 --> 00:49:01,500
across smaller numbers of people and I

1054
00:49:01,500 --> 00:49:02,460
think there's a couple of documents here

1055
00:49:02,460 --> 00:49:03,720
that haven't had that many reviews in

1056
00:49:03,720 --> 00:49:05,400
this one so uh you're now the only

1057
00:49:05,400 --> 00:49:07,680
author so it's just a working group if

1058
00:49:07,680 --> 00:49:09,000
they want to get these documents to sort

1059
00:49:09,000 --> 00:49:10,800
of make progress it needs more sort of

1060
00:49:10,800 --> 00:49:13,020
cross review from other people so yeah I

1061
00:49:13,020 --> 00:49:14,280
really encourage people who are working

1062
00:49:14,280 --> 00:49:15,900
in this stuff in this working group to

1063
00:49:15,900 --> 00:49:17,339
try and cross review each other's work

1064
00:49:17,339 --> 00:49:19,680
uh because otherwise when it gets to the

1065
00:49:19,680 --> 00:49:21,900
isg in those other reviews it gets

1066
00:49:21,900 --> 00:49:23,220
slowed down to get a lot more comments

1067
00:49:23,220 --> 00:49:24,720
the more you get done the working groups

1068
00:49:24,720 --> 00:49:27,240
the easier the path is later on yep

1069
00:49:27,240 --> 00:49:31,040
absolutely okay I'm done

1070
00:49:32,760 --> 00:49:35,359
okay

1071
00:49:36,180 --> 00:49:39,780
all right then I think we're up to an

1072
00:49:39,780 --> 00:49:41,819
autonomic mechanism for resource based

1073
00:49:41,819 --> 00:49:45,900
Network Services Auto deployment uh the

1074
00:49:45,900 --> 00:49:49,319
authors have done an update since itf114

1075
00:49:49,319 --> 00:49:52,079
and I think Sheng will want to give the

1076
00:49:52,079 --> 00:49:54,619
presentation

1077
00:49:54,839 --> 00:49:58,260
Curtis you need to stop your sharing so

1078
00:49:58,260 --> 00:50:00,859
I can

1079
00:50:19,859 --> 00:50:24,259
okay I'll see my screen yes yes

1080
00:50:25,140 --> 00:50:28,759
that's full screen now

1081
00:50:29,460 --> 00:50:33,960
okay this is the update for the working

1082
00:50:33,960 --> 00:50:36,540
group draft network service option

1083
00:50:36,540 --> 00:50:38,780
economic deployment

1084
00:50:38,780 --> 00:50:43,079
actually we already changed the title a

1085
00:50:43,079 --> 00:50:44,220
little bit

1086
00:50:44,220 --> 00:50:46,760
foreign

1087
00:50:46,760 --> 00:50:50,280
a couple of new words

1088
00:50:50,280 --> 00:50:52,940
um one is the generic

1089
00:50:52,940 --> 00:50:56,240
to emphasize the

1090
00:50:56,240 --> 00:50:59,339
generalization of this mechanism beyond

1091
00:50:59,339 --> 00:51:03,059
the quality translation services

1092
00:51:03,059 --> 00:51:06,420
and we add another word management to

1093
00:51:06,420 --> 00:51:09,780
emphasize the dynamical autonomic

1094
00:51:09,780 --> 00:51:12,359
management besides the autonomical

1095
00:51:12,359 --> 00:51:15,059
deployment at the beginning of the

1096
00:51:15,059 --> 00:51:16,260
services

1097
00:51:16,260 --> 00:51:19,260
uh this time we actually already largely

1098
00:51:19,260 --> 00:51:21,839
rewrite the description text

1099
00:51:21,839 --> 00:51:24,359
without changing the document structure

1100
00:51:24,359 --> 00:51:28,260
and the purpose of this document

1101
00:51:28,260 --> 00:51:31,740
we update the out deployment and

1102
00:51:31,740 --> 00:51:34,440
management process of the quality

1103
00:51:34,440 --> 00:51:37,700
Network transmission services

1104
00:51:37,700 --> 00:51:41,160
we also check the resource management

1105
00:51:41,160 --> 00:51:45,839
manager objects and updates the contents

1106
00:51:45,839 --> 00:51:50,480
without the two new subfields under it

1107
00:51:50,480 --> 00:51:55,500
and also their registry tables with

1108
00:51:55,500 --> 00:51:57,920
initial value for

1109
00:51:57,920 --> 00:52:00,660
Anna consideration

1110
00:52:00,660 --> 00:52:04,940
and also some editorial changes

1111
00:52:05,460 --> 00:52:06,800
um

1112
00:52:06,800 --> 00:52:11,220
they all those weird words are newly

1113
00:52:11,220 --> 00:52:13,020
added

1114
00:52:13,020 --> 00:52:15,720
let's draft to the introduce uh enhanced

1115
00:52:15,720 --> 00:52:19,680
and extensible mechanism that suppose

1116
00:52:19,680 --> 00:52:22,740
dynamically and dispatching of network

1117
00:52:22,740 --> 00:52:24,839
resources

1118
00:52:24,839 --> 00:52:29,839
as we said we emphasize the

1119
00:52:29,839 --> 00:52:34,079
generalization of this mechanism in

1120
00:52:34,079 --> 00:52:36,740
previous versions the draft many

1121
00:52:36,740 --> 00:52:40,079
consider a transition service but the

1122
00:52:40,079 --> 00:52:41,480
mechanism

1123
00:52:41,480 --> 00:52:47,000
is oriented to more General Services

1124
00:52:47,000 --> 00:52:51,900
deployment and dynamical management

1125
00:52:54,720 --> 00:52:57,380
um this mechanism is generic for most

1126
00:52:57,380 --> 00:52:59,700
resource-based network service

1127
00:52:59,700 --> 00:53:04,520
it can be easily extended to support

1128
00:53:04,520 --> 00:53:09,319
many Network Services scenario

1129
00:53:09,319 --> 00:53:12,619
including but not limited

1130
00:53:12,619 --> 00:53:16,099
difference Transmission Service

1131
00:53:16,099 --> 00:53:19,760
in-network cache or storage Services

1132
00:53:19,760 --> 00:53:23,300
Computing Services Information

1133
00:53:23,300 --> 00:53:25,940
Services however

1134
00:53:25,940 --> 00:53:30,000
those services are only listed in this

1135
00:53:30,000 --> 00:53:33,720
document the detailed supports for those

1136
00:53:33,720 --> 00:53:36,500
services are out of scope for this

1137
00:53:36,500 --> 00:53:38,599
single document

1138
00:53:38,599 --> 00:53:42,900
as we said it can easily be extended in

1139
00:53:42,900 --> 00:53:45,119
future work but probably another

1140
00:53:45,119 --> 00:53:48,119
documents

1141
00:53:48,240 --> 00:53:52,819
will update the art deployment process

1142
00:53:52,819 --> 00:53:56,240
we change the one step

1143
00:53:56,240 --> 00:54:01,740
discover the ASA to into a two-step

1144
00:54:01,740 --> 00:54:03,380
Discovery process

1145
00:54:03,380 --> 00:54:08,420
it can discover the relevant nodes first

1146
00:54:08,420 --> 00:54:13,740
then discover the resource manager ASA

1147
00:54:13,740 --> 00:54:17,280
on those nodes of course it can combine

1148
00:54:17,280 --> 00:54:20,000
a bike as one step

1149
00:54:20,000 --> 00:54:22,220
when they

1150
00:54:22,220 --> 00:54:25,859
they are actually deployment

1151
00:54:25,859 --> 00:54:29,940
uh in the autonomical networks it's the

1152
00:54:29,940 --> 00:54:33,119
deployment choice

1153
00:54:33,119 --> 00:54:35,839
we also add new

1154
00:54:35,839 --> 00:54:38,599
step for check the

1155
00:54:38,599 --> 00:54:41,420
authentication of the service initiator

1156
00:54:41,420 --> 00:54:45,359
and the authorization for the operation

1157
00:54:45,359 --> 00:54:51,680
on resources in principle any operations

1158
00:54:51,680 --> 00:54:56,220
and resource must be authorized

1159
00:54:56,220 --> 00:54:59,640
um the server service responsor should

1160
00:54:59,640 --> 00:55:01,339
check the

1161
00:55:01,339 --> 00:55:04,380
authentication of the service initiate

1162
00:55:04,380 --> 00:55:07,980
and the authorization information

1163
00:55:07,980 --> 00:55:11,579
and however this document assumes all

1164
00:55:11,579 --> 00:55:14,700
autonomic nodes within the automation

1165
00:55:14,700 --> 00:55:17,880
Network domain have been authenticated

1166
00:55:17,880 --> 00:55:21,380
and their request operation are

1167
00:55:21,380 --> 00:55:26,180
authorized giving the prayer condition

1168
00:55:26,180 --> 00:55:30,000
the sap and risky hence provides this

1169
00:55:30,000 --> 00:55:33,380
secure environment

1170
00:55:33,480 --> 00:55:35,099
um

1171
00:55:35,099 --> 00:55:41,420
we also add a new step to emphasize the

1172
00:55:41,420 --> 00:55:44,119
releasing of resources

1173
00:55:44,119 --> 00:55:47,640
it must be done during the service

1174
00:55:47,640 --> 00:55:51,619
ending the search ending could be

1175
00:55:51,619 --> 00:55:54,380
lifetime out or

1176
00:55:54,380 --> 00:55:59,940
the service initiator notification

1177
00:56:01,920 --> 00:56:02,880
um

1178
00:56:02,880 --> 00:56:06,960
to generalize the the purpose of also

1179
00:56:06,960 --> 00:56:08,660
the

1180
00:56:08,660 --> 00:56:12,540
resource manager so we actually update

1181
00:56:12,540 --> 00:56:16,200
the grasp objective

1182
00:56:16,200 --> 00:56:19,980
um we use new parameters to identify our

1183
00:56:19,980 --> 00:56:24,000
service service type and service ID we

1184
00:56:24,000 --> 00:56:29,700
also added the service lifetime they

1185
00:56:31,099 --> 00:56:35,880
describing the expression has been

1186
00:56:35,880 --> 00:56:38,420
revealed by brand Capital

1187
00:56:38,420 --> 00:56:41,880
the format has been modified based on

1188
00:56:41,880 --> 00:56:45,599
brass comments and we'll update in the

1189
00:56:45,599 --> 00:56:49,640
next version which is we have done yet

1190
00:56:49,640 --> 00:56:53,660
we are planning to do another

1191
00:56:53,660 --> 00:56:58,280
updates after this meeting

1192
00:56:58,280 --> 00:57:02,579
yeah now with all these comments we

1193
00:57:02,579 --> 00:57:03,800
receive

1194
00:57:03,800 --> 00:57:07,260
this meeting and in two weeks time I

1195
00:57:07,260 --> 00:57:08,940
guess

1196
00:57:08,940 --> 00:57:11,280
uh

1197
00:57:11,280 --> 00:57:13,920
uh we both updates the process of the

1198
00:57:13,920 --> 00:57:16,400
quality Network transmission service

1199
00:57:16,400 --> 00:57:19,220
automatic deployment

1200
00:57:19,220 --> 00:57:22,200
the service initiator discover up

1201
00:57:22,200 --> 00:57:25,200
service pass because normally this

1202
00:57:25,200 --> 00:57:26,660
transmission

1203
00:57:26,660 --> 00:57:29,660
service is from

1204
00:57:29,660 --> 00:57:34,520
a source to a destination which pass

1205
00:57:34,520 --> 00:57:36,140
many

1206
00:57:36,140 --> 00:57:41,240
Network nodes but they are owing a pass

1207
00:57:41,240 --> 00:57:43,819
so

1208
00:57:43,819 --> 00:57:47,280
the task should be discovered first then

1209
00:57:47,280 --> 00:57:49,920
the service initiator know all those

1210
00:57:49,920 --> 00:57:51,380
nodes

1211
00:57:51,380 --> 00:57:53,359
the

1212
00:57:53,359 --> 00:57:56,780
resource manager is on the service

1213
00:57:56,780 --> 00:58:00,119
initiator negotiates the resources with

1214
00:58:00,119 --> 00:58:02,099
the

1215
00:58:02,099 --> 00:58:05,240
okay resource manager

1216
00:58:05,240 --> 00:58:08,940
Asus and the service responsors one by

1217
00:58:08,940 --> 00:58:10,099
one

1218
00:58:10,099 --> 00:58:12,020
but

1219
00:58:12,020 --> 00:58:16,559
it normally a specific network service

1220
00:58:16,559 --> 00:58:19,500
should have only one service initiator

1221
00:58:19,500 --> 00:58:23,520
within a autonomical network domain I

1222
00:58:23,520 --> 00:58:26,480
mean for specific network service

1223
00:58:26,480 --> 00:58:29,160
it's the service initiators

1224
00:58:29,160 --> 00:58:33,559
responsibility to match the service and

1225
00:58:33,559 --> 00:58:36,960
coordination coordinate along multiple

1226
00:58:36,960 --> 00:58:38,700
service responses

1227
00:58:38,700 --> 00:58:42,720
to ensure the consistent of reserved

1228
00:58:42,720 --> 00:58:45,439
resources

1229
00:58:46,819 --> 00:58:51,660
after the negotiation the

1230
00:58:51,660 --> 00:58:53,119
SE

1231
00:58:53,119 --> 00:58:56,720
the resource manager is a

1232
00:58:56,720 --> 00:59:01,020
service responses also on the service

1233
00:59:01,020 --> 00:59:04,880
initiator reserves the local resources

1234
00:59:04,880 --> 00:59:08,819
those resources can be dynamically

1235
00:59:08,819 --> 00:59:12,359
changed we have that description in the

1236
00:59:12,359 --> 00:59:13,880
document

1237
00:59:13,880 --> 00:59:16,819
here we also give a

1238
00:59:16,819 --> 00:59:20,160
example of negotiation process those

1239
00:59:20,160 --> 00:59:24,500
numbers are actually

1240
00:59:25,799 --> 00:59:29,359
um yeah we're as we said we add two new

1241
00:59:29,359 --> 00:59:35,160
uh subfields uh service type with two

1242
00:59:35,160 --> 00:59:37,559
initial value

1243
00:59:37,559 --> 00:59:41,540
um missing four bits is enough for those

1244
00:59:41,540 --> 00:59:44,520
different service type

1245
00:59:44,520 --> 00:59:49,619
um because that can can give us 16. uh

1246
00:59:49,619 --> 00:59:52,200
the resource type for now we have the

1247
00:59:52,200 --> 00:59:55,680
batteries Q memory priority cache

1248
00:59:55,680 --> 00:59:57,180
Computing

1249
00:59:57,180 --> 01:00:01,859
um for now we think four bits given the

1250
01:00:01,859 --> 01:00:07,099
16 value space is big enough

1251
01:00:07,099 --> 01:00:09,740
but if

1252
01:00:09,740 --> 01:00:14,460
experts will need more space reserved

1253
01:00:14,460 --> 01:00:18,540
space like eight bits we are happy to

1254
01:00:18,540 --> 01:00:21,200
change that

1255
01:00:21,740 --> 01:00:26,880
yeah last slides The Next Step

1256
01:00:26,880 --> 01:00:27,839
um

1257
01:00:27,839 --> 01:00:30,839
welcome to the comments contributions

1258
01:00:30,839 --> 01:00:32,520
reviews

1259
01:00:32,520 --> 01:00:37,680
um as uh Warren said Robert said we

1260
01:00:37,680 --> 01:00:41,460
always look for reviews so all kinds of

1261
01:00:41,460 --> 01:00:43,440
reviews are welcome

1262
01:00:43,440 --> 01:00:46,880
we will continue to refine the contents

1263
01:00:46,880 --> 01:00:51,000
we also have a implementation plan using

1264
01:00:51,000 --> 01:00:55,440
patient hopefully we could download by

1265
01:00:55,440 --> 01:00:57,660
the end of this year so that's one and a

1266
01:00:57,660 --> 01:00:59,880
half months time

1267
01:00:59,880 --> 01:01:02,520
um we are targeting for working group

1268
01:01:02,520 --> 01:01:06,140
last call after next IDF

1269
01:01:06,140 --> 01:01:11,359
Wellness X by the way Michael Rich your

1270
01:01:11,359 --> 01:01:13,099
successful

1271
01:01:13,099 --> 01:01:16,020
successfully confused me because this

1272
01:01:16,020 --> 01:01:21,660
meeting is 115 and next is 116 right

1273
01:01:21,660 --> 01:01:25,160
okay that's all from me

1274
01:01:26,660 --> 01:01:29,779
thank you

1275
01:01:30,299 --> 01:01:32,760
any comments or questions

1276
01:01:32,760 --> 01:01:36,200
see if there's anyone

1277
01:01:39,599 --> 01:01:41,160
please go ahead

1278
01:01:41,160 --> 01:01:43,079
it's codec here

1279
01:01:43,079 --> 01:01:45,059
um I had one question

1280
01:01:45,059 --> 01:01:46,619
yeah just wondering about the overall

1281
01:01:46,619 --> 01:01:48,900
security model

1282
01:01:48,900 --> 01:01:51,599
since the driver mentioned that all uh

1283
01:01:51,599 --> 01:01:53,760
initiators for example have to be

1284
01:01:53,760 --> 01:01:55,740
authenticated

1285
01:01:55,740 --> 01:01:57,839
and it also says that they are

1286
01:01:57,839 --> 01:02:00,500
authenticated at the moment that they

1287
01:02:00,500 --> 01:02:03,180
join this uh

1288
01:02:03,180 --> 01:02:05,880
yeah basically uh

1289
01:02:05,880 --> 01:02:08,460
ACP I think it's called right or the

1290
01:02:08,460 --> 01:02:11,220
autonomous Network management plane

1291
01:02:11,220 --> 01:02:13,079
basically

1292
01:02:13,079 --> 01:02:16,079
um yeah

1293
01:02:16,079 --> 01:02:18,240
maybe I missed that part of the working

1294
01:02:18,240 --> 01:02:19,740
groupies there's some some common

1295
01:02:19,740 --> 01:02:21,660
assumption that okay once the device

1296
01:02:21,660 --> 01:02:23,700
gets kind of onboarded onto the

1297
01:02:23,700 --> 01:02:26,400
management plane you can just you know

1298
01:02:26,400 --> 01:02:28,500
stay authenticated for the rest of the

1299
01:02:28,500 --> 01:02:31,020
lifetime or or do we need some

1300
01:02:31,020 --> 01:02:34,260
additional uh protection and to to

1301
01:02:34,260 --> 01:02:36,059
verify that this message was actually

1302
01:02:36,059 --> 01:02:38,220
coming from who it was coming and that

1303
01:02:38,220 --> 01:02:40,859
it was uh genuinely coming from that

1304
01:02:40,859 --> 01:02:42,540
device

1305
01:02:42,540 --> 01:02:44,339
so that's more like a general question

1306
01:02:44,339 --> 01:02:47,460
on the security model uh

1307
01:02:47,460 --> 01:02:51,299
I think yeah we have the sap experts and

1308
01:02:51,299 --> 01:02:55,260
brisky is experts on site

1309
01:02:55,260 --> 01:02:59,339
there it is Michael yeah I I think that

1310
01:02:59,339 --> 01:03:02,160
if we rely on the ACP then

1311
01:03:02,160 --> 01:03:03,900
um all the communications that you're

1312
01:03:03,900 --> 01:03:06,000
doing through the ACP

1313
01:03:06,000 --> 01:03:08,520
um will have effectively you know your

1314
01:03:08,520 --> 01:03:10,380
authentication on The Binding of the IP

1315
01:03:10,380 --> 01:03:12,319
address to the certificate

1316
01:03:12,319 --> 01:03:15,240
and if you would be using

1317
01:03:15,240 --> 01:03:17,220
um you know just brewski without the ACP

1318
01:03:17,220 --> 01:03:18,839
and you have the connectivity and you're

1319
01:03:18,839 --> 01:03:20,880
doing this type of service enrollment

1320
01:03:20,880 --> 01:03:22,980
then I think it would have to be through

1321
01:03:22,980 --> 01:03:24,720
the uh

1322
01:03:24,720 --> 01:03:27,660
um brewsky certificate in your

1323
01:03:27,660 --> 01:03:29,400
end-to-end TLS connection as the

1324
01:03:29,400 --> 01:03:31,980
Authentication that part I guess this

1325
01:03:31,980 --> 01:03:33,599
document doesn't say because I don't

1326
01:03:33,599 --> 01:03:35,640
think in general we've tried to figure

1327
01:03:35,640 --> 01:03:37,140
out how to

1328
01:03:37,140 --> 01:03:39,359
um you know suggest more lightweight

1329
01:03:39,359 --> 01:03:42,420
service provisioning without the ACP but

1330
01:03:42,420 --> 01:03:43,980
I think that would be the obvious way

1331
01:03:43,980 --> 01:03:46,200
just do you have the connectivity as

1332
01:03:46,200 --> 01:03:48,960
then the question but with the ACP

1333
01:03:48,960 --> 01:03:50,700
um it is it is all derived from the

1334
01:03:50,700 --> 01:03:53,280
Broski certificates

1335
01:03:53,280 --> 01:03:55,500
um but then you also have the secured

1336
01:03:55,500 --> 01:03:57,299
reliable connectivity

1337
01:03:57,299 --> 01:03:59,460
okay so that's really tied to the

1338
01:03:59,460 --> 01:04:01,740
certificate and TLS is what you're

1339
01:04:01,740 --> 01:04:03,960
saying uh in the in the most difficult

1340
01:04:03,960 --> 01:04:06,000
case you're just you know authenticate

1341
01:04:06,000 --> 01:04:09,359
the certificate mutually right TLS or

1342
01:04:09,359 --> 01:04:11,520
quick or whatever you want yeah okay

1343
01:04:11,520 --> 01:04:13,319
this kind of Independence this is this

1344
01:04:13,319 --> 01:04:14,640
is basically written against the

1345
01:04:14,640 --> 01:04:16,020
reference model in the reference model

1346
01:04:16,020 --> 01:04:18,900
you have the ACP yeah okay yeah that's

1347
01:04:18,900 --> 01:04:20,220
clear thank you

1348
01:04:20,220 --> 01:04:22,799
yes thank you uh your questions are

1349
01:04:22,799 --> 01:04:24,299
really valid

1350
01:04:24,299 --> 01:04:27,480
um but actually it's out of this scope

1351
01:04:27,480 --> 01:04:31,700
um we just noticed in this document say

1352
01:04:31,700 --> 01:04:35,880
it has to at least must actually use the

1353
01:04:35,880 --> 01:04:39,780
word must be authenticated and

1354
01:04:39,780 --> 01:04:43,319
authorized but how to do that it's out

1355
01:04:43,319 --> 01:04:45,859
of scope

1356
01:04:52,020 --> 01:04:54,540
okay if there's no more question I'm

1357
01:04:54,540 --> 01:04:57,420
done there is back to you

1358
01:04:57,420 --> 01:04:59,700
sorry just taking notes for what we just

1359
01:04:59,700 --> 01:05:01,799
talked about

1360
01:05:01,799 --> 01:05:05,760
okay and then the next one would be the

1361
01:05:05,760 --> 01:05:09,599
update on the jws voucher from Thomas

1362
01:05:09,599 --> 01:05:12,240
yeah that's correct

1363
01:05:12,240 --> 01:05:17,299
so us to share this slides

1364
01:05:17,570 --> 01:05:20,460
[Music]

1365
01:05:20,460 --> 01:05:23,839
and and vouchers

1366
01:05:24,599 --> 01:05:27,000
yeah

1367
01:05:27,000 --> 01:05:30,420
so hope you can see the slides so good

1368
01:05:30,420 --> 01:05:34,339
afternoon this is a quick update to the

1369
01:05:34,339 --> 01:05:37,980
jws and science vouchers draft

1370
01:05:37,980 --> 01:05:41,099
so which is also running for several

1371
01:05:41,099 --> 01:05:44,760
months already and so this update does

1372
01:05:44,760 --> 01:05:48,839
not contain any uh yeah new content it's

1373
01:05:48,839 --> 01:05:51,299
just about uh yeah restructuring or

1374
01:05:51,299 --> 01:05:54,119
rewriting to make it ready for working

1375
01:05:54,119 --> 01:05:56,579
group last call

1376
01:05:56,579 --> 01:05:57,839
so

1377
01:05:57,839 --> 01:06:00,780
um yeah what is it about so we are

1378
01:06:00,780 --> 01:06:04,260
specifying here another voucher format

1379
01:06:04,260 --> 01:06:07,619
so in form of jws

1380
01:06:07,619 --> 01:06:11,940
Json generic serialization So based on I

1381
01:06:11,940 --> 01:06:17,640
would see 75 15 and so there are no

1382
01:06:17,640 --> 01:06:21,359
young changes and yeah I said for from

1383
01:06:21,359 --> 01:06:24,240
previous version zero four to zero five

1384
01:06:24,240 --> 01:06:27,960
now we have updated examples in the

1385
01:06:27,960 --> 01:06:32,220
appendix we have a yeah yeah big

1386
01:06:32,220 --> 01:06:35,099
restructuring and section three uh so

1387
01:06:35,099 --> 01:06:38,280
also the Prototype objects and figures

1388
01:06:38,280 --> 01:06:41,000
are updated and some

1389
01:06:41,000 --> 01:06:43,619
editorial improvements to the whole

1390
01:06:43,619 --> 01:06:46,460
document

1391
01:06:47,059 --> 01:06:50,940
what else uh yeah of course we have a

1392
01:06:50,940 --> 01:06:53,099
PLC implementation for that also

1393
01:06:53,099 --> 01:06:57,900
together with Broski PRM which Stephen

1394
01:06:57,900 --> 01:07:01,380
will report later we have implemented

1395
01:07:01,380 --> 01:07:05,880
this voucher approach and format and we

1396
01:07:05,880 --> 01:07:08,819
would be happy for interop testing with

1397
01:07:08,819 --> 01:07:11,299
other parties for sure

1398
01:07:11,299 --> 01:07:14,280
unfortunately still a Shepherd is

1399
01:07:14,280 --> 01:07:16,799
missing so would be also good if they

1400
01:07:16,799 --> 01:07:19,559
are somebody would volunteer

1401
01:07:19,559 --> 01:07:21,020
and

1402
01:07:21,020 --> 01:07:26,280
last point is so the authors agreed so

1403
01:07:26,280 --> 01:07:29,400
that uh this document is now ready for

1404
01:07:29,400 --> 01:07:31,859
working group last call and we would

1405
01:07:31,859 --> 01:07:34,020
bring it in the next step here

1406
01:07:34,020 --> 01:07:38,579
and that's it I think now that's all

1407
01:07:38,579 --> 01:07:40,440
from my side

1408
01:07:40,440 --> 01:07:43,319
any questions

1409
01:07:43,319 --> 01:07:45,359
uh thank you um yeah any questions in

1410
01:07:45,359 --> 01:07:47,598
the room

1411
01:07:49,020 --> 01:07:50,579
see anything

1412
01:07:50,579 --> 01:07:52,020
um

1413
01:07:52,020 --> 01:07:54,780
this this jws right so I mean this this

1414
01:07:54,780 --> 01:07:57,240
is a something where

1415
01:07:57,240 --> 01:07:59,039
what you

1416
01:07:59,039 --> 01:08:01,740
um find some you know good additional

1417
01:08:01,740 --> 01:08:03,900
reviewers from the application area that

1418
01:08:03,900 --> 01:08:06,059
is that is dealing with these jws things

1419
01:08:06,059 --> 01:08:07,500
normally

1420
01:08:07,500 --> 01:08:10,020
there is anything like you know an a

1421
01:08:10,020 --> 01:08:12,240
review from App area or so uh

1422
01:08:12,240 --> 01:08:15,480
specifically for that jws context I'm

1423
01:08:15,480 --> 01:08:18,120
just you know thinking about the

1424
01:08:18,120 --> 01:08:19,920
experience we made with the co-op folks

1425
01:08:19,920 --> 01:08:21,779
that you know during Ayanna review that

1426
01:08:21,779 --> 01:08:24,179
tell us how to use their headers better

1427
01:08:24,179 --> 01:08:27,179
so

1428
01:08:28,080 --> 01:08:31,620
are there where do these jws people hang

1429
01:08:31,620 --> 01:08:33,359
out in so far is getting a review from

1430
01:08:33,359 --> 01:08:34,620
them

1431
01:08:34,620 --> 01:08:37,759
working before so

1432
01:08:38,219 --> 01:08:41,399
um so maybe one option would be to ask

1433
01:08:41,399 --> 01:08:47,279
the author authors of the jws out of C

1434
01:08:47,279 --> 01:08:50,000
and

1435
01:08:52,140 --> 01:08:54,060
so what is it

1436
01:08:54,060 --> 01:08:57,960
which working group did jws

1437
01:08:57,960 --> 01:09:01,460
um looking and objects

1438
01:09:06,060 --> 01:09:07,679
oh

1439
01:09:07,679 --> 01:09:11,000
no I meant

1440
01:09:11,179 --> 01:09:15,238
the jws format is not from us right

1441
01:09:15,238 --> 01:09:16,198
right

1442
01:09:16,198 --> 01:09:20,120
so who did the jws format

1443
01:09:21,899 --> 01:09:26,719
Jose working group yeah Jose right

1444
01:09:30,660 --> 01:09:33,779
so would it make sense to to uh

1445
01:09:33,779 --> 01:09:36,060
to send a request for for review to the

1446
01:09:36,060 --> 01:09:37,738
Jose working group here

1447
01:09:37,738 --> 01:09:41,540
no I think it's a good idea

1448
01:09:47,299 --> 01:09:50,698
sure if you can do that yourself that

1449
01:09:50,698 --> 01:09:52,380
that would be best otherwise let me know

1450
01:09:52,380 --> 01:09:54,120
and and I'll be happy to support that

1451
01:09:54,120 --> 01:09:56,179
and ask the working group chairs as well

1452
01:09:56,179 --> 01:10:00,360
yeah I I reach out to them thanks

1453
01:10:00,360 --> 01:10:02,960
thank you

1454
01:10:03,380 --> 01:10:07,140
Okay so

1455
01:10:07,140 --> 01:10:10,860
then we have the update of brewski with

1456
01:10:10,860 --> 01:10:13,199
the pledge and responder mode brewski

1457
01:10:13,199 --> 01:10:15,559
PRM

1458
01:10:15,600 --> 01:10:18,360
and that would be Stefan told us I I

1459
01:10:18,360 --> 01:10:22,639
just requested the slides

1460
01:10:35,340 --> 01:10:37,080
okay so I would like to give an update

1461
01:10:37,080 --> 01:10:40,140
about uh rusky with splatron responder

1462
01:10:40,140 --> 01:10:43,080
mode test uh Thomas already said uh so

1463
01:10:43,080 --> 01:10:46,679
we are in version 05 now and uh there is

1464
01:10:46,679 --> 01:10:49,320
a repository available online working

1465
01:10:49,320 --> 01:10:52,920
group GitHub and uh we tracked the

1466
01:10:52,920 --> 01:10:55,140
issues there and there's all there are

1467
01:10:55,140 --> 01:10:58,020
also the latest uh

1468
01:10:58,020 --> 01:11:00,300
now the the latest source of the

1469
01:11:00,300 --> 01:11:03,360
document is there uh what we have

1470
01:11:03,360 --> 01:11:05,159
referenced here that's also a reference

1471
01:11:05,159 --> 01:11:08,159
that we provide in brewski PRM

1472
01:11:08,159 --> 01:11:11,340
is the general architecture or an

1473
01:11:11,340 --> 01:11:13,020
abstract protocol overview about the

1474
01:11:13,020 --> 01:11:16,140
architecture uh so just to recap what

1475
01:11:16,140 --> 01:11:18,300
what rusky PRM is doing differently

1476
01:11:18,300 --> 01:11:20,300
compared to brewski

1477
01:11:20,300 --> 01:11:23,159
rusky PRM essentially reverses the

1478
01:11:23,159 --> 01:11:25,980
direction for client and server between

1479
01:11:25,980 --> 01:11:29,100
the pledge and the registrar agent the

1480
01:11:29,100 --> 01:11:31,080
registrar and is doing that by

1481
01:11:31,080 --> 01:11:33,480
introducing a new functionality which we

1482
01:11:33,480 --> 01:11:36,179
call registrar agent the registration

1483
01:11:36,179 --> 01:11:39,120
itself may be a standalone component or

1484
01:11:39,120 --> 01:11:41,520
a separate component or it may be part

1485
01:11:41,520 --> 01:11:43,800
of the functionality of the of the

1486
01:11:43,800 --> 01:11:46,080
domain registrar so what you can see

1487
01:11:46,080 --> 01:11:49,440
here are the different messages that we

1488
01:11:49,440 --> 01:11:52,980
defined as part of the the brewski PRM

1489
01:11:52,980 --> 01:11:54,179
draft

1490
01:11:54,179 --> 01:11:56,880
so it's essentially triggering the

1491
01:11:56,880 --> 01:11:59,580
pledge to perform certain actions like

1492
01:11:59,580 --> 01:12:02,100
creating a voucher request or creating

1493
01:12:02,100 --> 01:12:05,159
an enrollment request and then the

1494
01:12:05,159 --> 01:12:07,980
registrar gets back to the to the the

1495
01:12:07,980 --> 01:12:10,260
registrar agent gets back to the to the

1496
01:12:10,260 --> 01:12:13,500
registrar and uh does the interaction

1497
01:12:13,500 --> 01:12:17,219
with the back-end infrastructure in the

1498
01:12:17,219 --> 01:12:18,960
name of the pledge

1499
01:12:18,960 --> 01:12:22,020
so here uh nothing nothing really has

1500
01:12:22,020 --> 01:12:24,239
changed we have some some further tweaks

1501
01:12:24,239 --> 01:12:26,159
down here which I will come to at the

1502
01:12:26,159 --> 01:12:29,040
next slide so you see that there is some

1503
01:12:29,040 --> 01:12:31,860
exchange between the registrar agent and

1504
01:12:31,860 --> 01:12:34,440
the domain registrar further into the

1505
01:12:34,440 --> 01:12:36,120
backend infrastructure

1506
01:12:36,120 --> 01:12:39,239
and once this is done all the different

1507
01:12:39,239 --> 01:12:41,280
objects that have been collected by the

1508
01:12:41,280 --> 01:12:43,260
registrar agent so that means a voucher

1509
01:12:43,260 --> 01:12:46,640
and also the the enrollment response

1510
01:12:46,640 --> 01:12:50,340
essentially the certificate and also the

1511
01:12:50,340 --> 01:12:52,920
ca certificates are provided to the

1512
01:12:52,920 --> 01:12:55,140
pledge and the pledge can consume all

1513
01:12:55,140 --> 01:12:57,960
those data objects and uh can then

1514
01:12:57,960 --> 01:13:00,900
operate in the Target domain

1515
01:13:00,900 --> 01:13:03,239
so just as a as an abstract protocol

1516
01:13:03,239 --> 01:13:05,460
view we don't have that picture directly

1517
01:13:05,460 --> 01:13:07,560
in the draft because it's all somehow

1518
01:13:07,560 --> 01:13:09,900
too complicated to to put it directly

1519
01:13:09,900 --> 01:13:11,580
into the draft but we have it as a

1520
01:13:11,580 --> 01:13:13,860
reference

1521
01:13:13,860 --> 01:13:16,679
so what has changed from last version to

1522
01:13:16,679 --> 01:13:18,960
this version We meanwhile had a couple

1523
01:13:18,960 --> 01:13:21,540
of reviews so in summary we have seven

1524
01:13:21,540 --> 01:13:26,159
different reviewers uh which are not all

1525
01:13:26,159 --> 01:13:28,080
of them are stated yet in the in the

1526
01:13:28,080 --> 01:13:30,120
draft so that is one thing I I still

1527
01:13:30,120 --> 01:13:33,179
have on the table to to put the names uh

1528
01:13:33,179 --> 01:13:36,659
of the reviews in there the review led

1529
01:13:36,659 --> 01:13:41,100
to several uh technical clarifications

1530
01:13:41,100 --> 01:13:44,460
to some enhancements uh all of them are

1531
01:13:44,460 --> 01:13:46,800
listed in the GitHub

1532
01:13:46,800 --> 01:13:49,560
so that means that we have issues for

1533
01:13:49,560 --> 01:13:51,480
each of the different things and we

1534
01:13:51,480 --> 01:13:52,860
address or for each of the different

1535
01:13:52,860 --> 01:13:54,600
comments and we address all of those

1536
01:13:54,600 --> 01:13:56,040
comments

1537
01:13:56,040 --> 01:13:59,940
so specifically uh we have uh included

1538
01:13:59,940 --> 01:14:01,980
as mandatory now a signature on the

1539
01:14:01,980 --> 01:14:04,440
voucher so that means once a voucher has

1540
01:14:04,440 --> 01:14:06,120
been issued by the Maza and comes back

1541
01:14:06,120 --> 01:14:09,239
to the through the registrar and through

1542
01:14:09,239 --> 01:14:11,520
the register agent down to the to the

1543
01:14:11,520 --> 01:14:14,040
pledge the registrar in between has to

1544
01:14:14,040 --> 01:14:17,100
provide a medicinal signature on the on

1545
01:14:17,100 --> 01:14:18,600
the voucher

1546
01:14:18,600 --> 01:14:21,360
so that additional signature provides a

1547
01:14:21,360 --> 01:14:23,239
proof of possession of the private key

1548
01:14:23,239 --> 01:14:26,219
where the pledge has seen the the

1549
01:14:26,219 --> 01:14:29,040
certificate so that means the public key

1550
01:14:29,040 --> 01:14:32,400
uh during the triggering uh

1551
01:14:32,400 --> 01:14:35,159
of the of the registration at the

1552
01:14:35,159 --> 01:14:39,179
beginning and that additional signature

1553
01:14:39,179 --> 01:14:42,179
is some kind of uh yeah explicit

1554
01:14:42,179 --> 01:14:44,460
authorization store the vote from one

1555
01:14:44,460 --> 01:14:45,900
hand and on the other

1556
01:14:45,900 --> 01:14:48,179
that terminates the professional except

1557
01:14:48,179 --> 01:14:50,820
from the on the pledge side of the

1558
01:14:50,820 --> 01:14:52,500
registrar certificate

1559
01:14:52,500 --> 01:14:54,719
so that has been discussed in the design

1560
01:14:54,719 --> 01:14:57,659
team and also been included in the

1561
01:14:57,659 --> 01:14:59,699
in the document now

1562
01:14:59,699 --> 01:15:02,580
so we also defined a new endpoint for

1563
01:15:02,580 --> 01:15:05,400
pledge bootstrapping status inquiry so

1564
01:15:05,400 --> 01:15:07,920
we had already status messages in the

1565
01:15:07,920 --> 01:15:11,460
same way as they were defined in brewski

1566
01:15:11,460 --> 01:15:12,960
so that means we had a status message

1567
01:15:12,960 --> 01:15:16,020
for that that we provided from The

1568
01:15:16,020 --> 01:15:18,360
Pledge back to the registrar agent once

1569
01:15:18,360 --> 01:15:20,280
a voucher has been supplied and also

1570
01:15:20,280 --> 01:15:23,100
once a enrollment response so the

1571
01:15:23,100 --> 01:15:25,199
certificate has been replied there was

1572
01:15:25,199 --> 01:15:27,980
some requests to provide an additional

1573
01:15:27,980 --> 01:15:31,280
specific endpoint to inquire

1574
01:15:31,280 --> 01:15:36,300
the status of the The Pledge uh in in

1575
01:15:36,300 --> 01:15:37,860
case that for instance a service

1576
01:15:37,860 --> 01:15:40,739
technician is stepping by and may not

1577
01:15:40,739 --> 01:15:43,140
know if the pledge has been bootstrapped

1578
01:15:43,140 --> 01:15:45,600
already or if the pledge is in some kind

1579
01:15:45,600 --> 01:15:48,060
of intermediate state of bootstrapping

1580
01:15:48,060 --> 01:15:51,300
uh so for this uh the endpoint and also

1581
01:15:51,300 --> 01:15:53,040
the messages and the error codes have

1582
01:15:53,040 --> 01:15:54,300
been defined

1583
01:15:54,300 --> 01:15:57,360
regarding error codes we have some uh

1584
01:15:57,360 --> 01:15:59,820
thanks to ESCO we had some some more

1585
01:15:59,820 --> 01:16:02,520
integration of error code search more

1586
01:16:02,520 --> 01:16:04,860
fine-grained or to enable them or

1587
01:16:04,860 --> 01:16:07,199
fine-grained handling of arrows that may

1588
01:16:07,199 --> 01:16:10,460
happen during the bootstrapping

1589
01:16:10,460 --> 01:16:13,320
we put in some some clarification

1590
01:16:13,320 --> 01:16:17,340
regarding the knowledge of the marzers

1591
01:16:17,340 --> 01:16:20,100
that is necessary for verifying the ldf

1592
01:16:20,100 --> 01:16:23,400
ID that comes in the voucher request

1593
01:16:23,400 --> 01:16:26,280
from The Pledge so the lfid from the

1594
01:16:26,280 --> 01:16:29,100
registrar agent and also the lfid from

1595
01:16:29,100 --> 01:16:32,400
the registrar so we we require meanwhile

1596
01:16:32,400 --> 01:16:34,560
that they have to be under the same

1597
01:16:34,560 --> 01:16:36,480
administrative control so that means

1598
01:16:36,480 --> 01:16:38,420
that another needs to process a

1599
01:16:38,420 --> 01:16:40,920
corresponding issuing or root

1600
01:16:40,920 --> 01:16:42,239
certificates already

1601
01:16:42,239 --> 01:16:47,699
to be able to verify the different data

1602
01:16:47,699 --> 01:16:51,600
pieces in the voucher request

1603
01:16:51,600 --> 01:16:55,500
and based on that issue assertion or an

1604
01:16:55,500 --> 01:16:58,260
agent proximity

1605
01:16:58,260 --> 01:17:00,719
so then we enhance the security

1606
01:17:00,719 --> 01:17:02,400
consideration so there were some

1607
01:17:02,400 --> 01:17:05,040
questions regarding potential uh Tech

1608
01:17:05,040 --> 01:17:06,420
scenarios

1609
01:17:06,420 --> 01:17:09,179
and they have been clarified and also

1610
01:17:09,179 --> 01:17:10,800
the Privacy configurations have been

1611
01:17:10,800 --> 01:17:12,000
enhanced

1612
01:17:12,000 --> 01:17:14,960
for last Point regarding the

1613
01:17:14,960 --> 01:17:18,900
enhancements here is the registrar agent

1614
01:17:18,900 --> 01:17:20,880
certificate we had that in the pledge

1615
01:17:20,880 --> 01:17:23,940
trigger as optional component included

1616
01:17:23,940 --> 01:17:26,159
and we decided to basically drop that

1617
01:17:26,159 --> 01:17:29,400
because it's being provided in the

1618
01:17:29,400 --> 01:17:32,520
registrar created voucher request where

1619
01:17:32,520 --> 01:17:35,640
the pledge voucher request is part of

1620
01:17:35,640 --> 01:17:38,400
that register Auto request

1621
01:17:38,400 --> 01:17:42,540
and we would we we saw that uh

1622
01:17:42,540 --> 01:17:45,000
because it's optional from from The

1623
01:17:45,000 --> 01:17:48,719
Pledge side it is uh it it complicates

1624
01:17:48,719 --> 01:17:50,520
the handling so we would like to have

1625
01:17:50,520 --> 01:17:53,460
some simplification there and uh to also

1626
01:17:53,460 --> 01:17:55,380
save bandwidth between the pledge and

1627
01:17:55,380 --> 01:17:57,120
the registrar agent

1628
01:17:57,120 --> 01:17:59,040
so those were merely the technical

1629
01:17:59,040 --> 01:18:01,020
points that have been addressed

1630
01:18:01,020 --> 01:18:03,360
and uh then we had some further

1631
01:18:03,360 --> 01:18:05,040
clarifications and editorial

1632
01:18:05,040 --> 01:18:07,199
improvements and they relate to a lot of

1633
01:18:07,199 --> 01:18:10,620
terminology uh like enrollment objects

1634
01:18:10,620 --> 01:18:12,780
certification object so we aligned that

1635
01:18:12,780 --> 01:18:15,420
type of terminology

1636
01:18:15,420 --> 01:18:18,900
uh we also clarified that the combined

1637
01:18:18,900 --> 01:18:22,800
pledge may act as server and client for

1638
01:18:22,800 --> 01:18:25,020
for further re-enrollment cases so there

1639
01:18:25,020 --> 01:18:28,020
may be cases where a pledge supports

1640
01:18:28,020 --> 01:18:30,719
both ways through push and pull for the

1641
01:18:30,719 --> 01:18:33,420
enrollment into a new domain

1642
01:18:33,420 --> 01:18:37,140
uh we also clarified that the registrar

1643
01:18:37,140 --> 01:18:38,880
needs to verify the response messages

1644
01:18:38,880 --> 01:18:42,420
that that uh come from The Pledge and

1645
01:18:42,420 --> 01:18:44,520
match them to the audit logs that he

1646
01:18:44,520 --> 01:18:47,580
gets from the Mazda also in during the

1647
01:18:47,580 --> 01:18:50,880
bootstrapping phase so that is uh there

1648
01:18:50,880 --> 01:18:53,580
is no no deviation uh to brewski it's

1649
01:18:53,580 --> 01:18:56,100
more or less emphasizing that this is a

1650
01:18:56,100 --> 01:18:59,100
requirement on the registrar

1651
01:18:59,100 --> 01:19:02,400
uh we also clarified that the pledge

1652
01:19:02,400 --> 01:19:06,000
user created on time from the Dutch

1653
01:19:06,000 --> 01:19:08,640
vulture request trigger object that he

1654
01:19:08,640 --> 01:19:10,100
gets from the

1655
01:19:10,100 --> 01:19:11,940
registrar agent

1656
01:19:11,940 --> 01:19:14,760
in the cases where there has been no

1657
01:19:14,760 --> 01:19:18,900
time synchronization uh been done before

1658
01:19:18,900 --> 01:19:21,840
then we also removed the reference to

1659
01:19:21,840 --> 01:19:24,000
the cap Forum that was not needed

1660
01:19:24,000 --> 01:19:27,540
anymore so uh we we basically dropped

1661
01:19:27,540 --> 01:19:29,699
that reference

1662
01:19:29,699 --> 01:19:31,800
um then regarding the general structure

1663
01:19:31,800 --> 01:19:33,060
of the document we completely

1664
01:19:33,060 --> 01:19:35,400
restructured Section 5 to make it better

1665
01:19:35,400 --> 01:19:38,219
readable and to better have a red line

1666
01:19:38,219 --> 01:19:40,500
throughout the document so I hope that

1667
01:19:40,500 --> 01:19:43,980
that simplifies the the reading of the

1668
01:19:43,980 --> 01:19:46,800
document and in that context we also

1669
01:19:46,800 --> 01:19:49,560
reword all the different prototypes that

1670
01:19:49,560 --> 01:19:51,179
we had in the different sections there

1671
01:19:51,179 --> 01:19:53,880
for the prototypes itself we now have an

1672
01:19:53,880 --> 01:19:56,880
appendix that lists different examples

1673
01:19:56,880 --> 01:19:59,460
for the for the objects that we have and

1674
01:19:59,460 --> 01:20:01,679
also includes size information that was

1675
01:20:01,679 --> 01:20:03,600
one of the issues or one of the points

1676
01:20:03,600 --> 01:20:07,320
that has been raised because we one

1677
01:20:07,320 --> 01:20:09,960
intention of boost kprm is also to allow

1678
01:20:09,960 --> 01:20:12,360
for different transport means between

1679
01:20:12,360 --> 01:20:14,460
the pledge and the registrar so that

1680
01:20:14,460 --> 01:20:15,739
means we

1681
01:20:15,739 --> 01:20:19,380
don't necessarily rely on protocols like

1682
01:20:19,380 --> 01:20:20,360
like

1683
01:20:20,360 --> 01:20:24,960
TLS or TCP since we have the security

1684
01:20:24,960 --> 01:20:28,320
handling on the objects itself and in

1685
01:20:28,320 --> 01:20:31,199
certain scenarios we can utilize the

1686
01:20:31,199 --> 01:20:34,679
brewski PRM approach based on Bluetooth

1687
01:20:34,679 --> 01:20:36,960
for instance Bluetooth slow energy

1688
01:20:36,960 --> 01:20:40,739
and for this it is interesting to also

1689
01:20:40,739 --> 01:20:45,300
list some message sizes in the appendix

1690
01:20:45,300 --> 01:20:48,060
okay so far for the for the update from

1691
01:20:48,060 --> 01:20:52,260
the o4 version to o5 I set the the

1692
01:20:52,260 --> 01:20:54,719
discussion on the different issues is is

1693
01:20:54,719 --> 01:20:57,179
available on the animal site

1694
01:20:57,179 --> 01:21:00,840
so uh the the remaining the only

1695
01:21:00,840 --> 01:21:02,699
remaining open Point that's not a

1696
01:21:02,699 --> 01:21:05,400
remaining open point for for booski PRM

1697
01:21:05,400 --> 01:21:07,320
Standalone but for all the different

1698
01:21:07,320 --> 01:21:10,980
documents that Define vouchers there is

1699
01:21:10,980 --> 01:21:13,260
some definition or some clarification

1700
01:21:13,260 --> 01:21:16,800
ongoing on the young usage there that

1701
01:21:16,800 --> 01:21:19,260
relates to augmentation of the young

1702
01:21:19,260 --> 01:21:22,460
documents that we have there to enable

1703
01:21:22,460 --> 01:21:25,860
uh the combination of different drafts

1704
01:21:25,860 --> 01:21:27,840
that we currently have that relate to

1705
01:21:27,840 --> 01:21:30,600
the voucher handling so that is an issue

1706
01:21:30,600 --> 01:21:33,780
that Michael took over and uh that

1707
01:21:33,780 --> 01:21:35,880
basically needs to be applied to all of

1708
01:21:35,880 --> 01:21:37,739
the different anima documents defining

1709
01:21:37,739 --> 01:21:40,218
vouchers

1710
01:21:40,320 --> 01:21:43,560
then as as Thomas already said we have

1711
01:21:43,560 --> 01:21:47,100
uh since we are utilizing the jws

1712
01:21:47,100 --> 01:21:51,239
voucher uh heavily within Broski PRM so

1713
01:21:51,239 --> 01:21:54,120
the the jws format approach

1714
01:21:54,120 --> 01:21:56,880
um we we have a proof of concept for for

1715
01:21:56,880 --> 01:21:58,860
the implementation available that's

1716
01:21:58,860 --> 01:22:00,120
available for all of the different

1717
01:22:00,120 --> 01:22:02,940
components if there is interest to do

1718
01:22:02,940 --> 01:22:06,179
interop testing please get in touch uh

1719
01:22:06,179 --> 01:22:08,100
the the addresses the contacts are

1720
01:22:08,100 --> 01:22:11,600
available on the first uh slide

1721
01:22:11,600 --> 01:22:15,000
uh as in the last working group uh

1722
01:22:15,000 --> 01:22:17,219
meetings the document Shepherd is still

1723
01:22:17,219 --> 01:22:19,800
needed for the document and here we are

1724
01:22:19,800 --> 01:22:22,679
in the same situation as for jws voucher

1725
01:22:22,679 --> 01:22:26,159
uh from the answers perspective we after

1726
01:22:26,159 --> 01:22:27,960
the the review of seven different

1727
01:22:27,960 --> 01:22:30,300
persons uh we now have addressed all the

1728
01:22:30,300 --> 01:22:33,239
different issues uh except the first one

1729
01:22:33,239 --> 01:22:36,719
so besides that the authors agreed that

1730
01:22:36,719 --> 01:22:38,280
the document is ready for working group

1731
01:22:38,280 --> 01:22:40,739
last call

1732
01:22:40,739 --> 01:22:43,320
so that would also end my my information

1733
01:22:43,320 --> 01:22:46,380
or my update about boost key PRN any

1734
01:22:46,380 --> 01:22:48,239
questions

1735
01:22:48,239 --> 01:22:50,100
yeah thank you very much

1736
01:22:50,100 --> 01:22:51,659
um let me see if there are any other

1737
01:22:51,659 --> 01:22:53,100
questions

1738
01:22:53,100 --> 01:22:53,940
um

1739
01:22:53,940 --> 01:22:55,260
so

1740
01:22:55,260 --> 01:22:58,440
if the open issue is is clear in the

1741
01:22:58,440 --> 01:22:59,640
document

1742
01:22:59,640 --> 01:23:02,580
um somehow then I think before we go to

1743
01:23:02,580 --> 01:23:04,679
working group last call maybe we want to

1744
01:23:04,679 --> 01:23:08,040
consider an early review from

1745
01:23:08,040 --> 01:23:10,219
um I guess there is a

1746
01:23:10,219 --> 01:23:13,920
Yang usage right so the young doctors

1747
01:23:13,920 --> 01:23:14,520
um

1748
01:23:14,520 --> 01:23:17,820
and uh so we do we think that the

1749
01:23:17,820 --> 01:23:20,280
security aspects are relevant to us for

1750
01:23:20,280 --> 01:23:22,199
early Security review

1751
01:23:22,199 --> 01:23:24,239
I mean we've I think the the best

1752
01:23:24,239 --> 01:23:26,040
feedback we've we've gotten in the other

1753
01:23:26,040 --> 01:23:29,880
reviews was always iot deer security and

1754
01:23:29,880 --> 01:23:32,280
yang right and your opinions because

1755
01:23:32,280 --> 01:23:34,199
then I think I could simply trigger

1756
01:23:34,199 --> 01:23:36,179
those first

1757
01:23:36,179 --> 01:23:39,199
yeah I think it would be good to have uh

1758
01:23:39,199 --> 01:23:41,880
to have some Security review as early

1759
01:23:41,880 --> 01:23:44,659
review I think that that's probably fine

1760
01:23:44,659 --> 01:23:48,480
uh the the person said that the review

1761
01:23:48,480 --> 01:23:51,060
so far were all experienced regarding

1762
01:23:51,060 --> 01:23:53,880
security but I think it's good to to

1763
01:23:53,880 --> 01:23:56,159
have already the first review from from

1764
01:23:56,159 --> 01:23:58,800
the security Community there regarding

1765
01:23:58,800 --> 01:24:02,100
the young doctors we we had an early

1766
01:24:02,100 --> 01:24:04,620
review which uh

1767
01:24:04,620 --> 01:24:07,440
from The Young doctors at the very early

1768
01:24:07,440 --> 01:24:10,620
stage of the document uh since then the

1769
01:24:10,620 --> 01:24:13,620
voucher itself hasn't changed much and I

1770
01:24:13,620 --> 01:24:15,540
think we should do that once we have the

1771
01:24:15,540 --> 01:24:18,659
clarification on the young usage uh to

1772
01:24:18,659 --> 01:24:21,719
avoid any problems with augmentation of

1773
01:24:21,719 --> 01:24:23,400
the voucher

1774
01:24:23,400 --> 01:24:25,500
okay so this is this is not ready yet

1775
01:24:25,500 --> 01:24:27,719
the the end is the open issue

1776
01:24:27,719 --> 01:24:31,340
the youngness the open issue right

1777
01:24:35,280 --> 01:24:37,880
okay

1778
01:24:40,080 --> 01:24:42,620
okay

1779
01:24:44,100 --> 01:24:45,540
okay

1780
01:24:45,540 --> 01:24:47,400
I'll trigger the two early reviews

1781
01:24:47,400 --> 01:24:50,460
what's the plan to get the uh these Yang

1782
01:24:50,460 --> 01:24:52,679
issues resolved it seems to be for the

1783
01:24:52,679 --> 01:24:54,360
the augmentation stuff who's who's

1784
01:24:54,360 --> 01:24:57,000
leading that whom are you waiting for I

1785
01:24:57,000 --> 01:24:58,380
guess

1786
01:24:58,380 --> 01:24:59,699
Michael

1787
01:24:59,699 --> 01:25:00,780
yep

1788
01:25:00,780 --> 01:25:02,400
I'm not quite sure if Michael's still in

1789
01:25:02,400 --> 01:25:04,980
the room yep he's uh

1790
01:25:04,980 --> 01:25:08,100
perfect nice pants by the way

1791
01:25:08,100 --> 01:25:11,699
yeah I'm dressed for the dance meeting

1792
01:25:11,699 --> 01:25:13,820
um

1793
01:25:13,860 --> 01:25:15,719
there's other reasons

1794
01:25:15,719 --> 01:25:18,300
um uh yeah so the augmentation so he'll

1795
01:25:18,300 --> 01:25:19,620
go go back to the beginning I just

1796
01:25:19,620 --> 01:25:21,600
looked at my inbox uh beginning of

1797
01:25:21,600 --> 01:25:25,080
August to the mailing list I posted the

1798
01:25:25,080 --> 01:25:26,520
Lost efforts

1799
01:25:26,520 --> 01:25:29,520
um and uh Jan lindblade told me how I

1800
01:25:29,520 --> 01:25:32,640
did it wrong and uh I just need to

1801
01:25:32,640 --> 01:25:34,560
repeat that and I was just trying to

1802
01:25:34,560 --> 01:25:35,580
figure out whether I can do that

1803
01:25:35,580 --> 01:25:38,100
tomorrow afternoon

1804
01:25:38,100 --> 01:25:41,159
um whether I'm weak enough and

1805
01:25:41,159 --> 01:25:42,480
um so we'll get that I'll get that

1806
01:25:42,480 --> 01:25:44,040
cleared out I said I'd get that cleared

1807
01:25:44,040 --> 01:25:45,239
out for this meeting and I think we can

1808
01:25:45,239 --> 01:25:46,800
we can do that

1809
01:25:46,800 --> 01:25:49,800
um the the big concern is that that we

1810
01:25:49,800 --> 01:25:52,640
got something wrong in

1811
01:25:52,640 --> 01:25:54,239
8366

1812
01:25:54,239 --> 01:25:56,520
and we have to revise that that's the

1813
01:25:56,520 --> 01:25:58,860
big the big worry

1814
01:25:58,860 --> 01:26:01,440
um is that we can't combine things and

1815
01:26:01,440 --> 01:26:03,840
if you go back to that document or that

1816
01:26:03,840 --> 01:26:05,520
emails and that thread if I can post

1817
01:26:05,520 --> 01:26:07,380
repost it or I will repost it tomorrow

1818
01:26:07,380 --> 01:26:10,139
then you'll understand what I'm thinking

1819
01:26:10,139 --> 01:26:12,000
about right

1820
01:26:12,000 --> 01:26:13,620
um so I know that Stefan you have it

1821
01:26:13,620 --> 01:26:15,120
it's just really for the rest of the

1822
01:26:15,120 --> 01:26:16,440
other people

1823
01:26:16,440 --> 01:26:18,060
um we just need to do the simplest

1824
01:26:18,060 --> 01:26:20,100
stupidest experiment of combining things

1825
01:26:20,100 --> 01:26:22,500
from different places and see that we

1826
01:26:22,500 --> 01:26:25,320
can do it and that we didn't make a uh

1827
01:26:25,320 --> 01:26:27,360
we didn't do the Yang wrong and from

1828
01:26:27,360 --> 01:26:28,980
what I the feedback I got is that we

1829
01:26:28,980 --> 01:26:30,540
maybe need to do it slightly differently

1830
01:26:30,540 --> 01:26:32,639
so we'll see

1831
01:26:32,639 --> 01:26:35,219
um someone had was behind me oh

1832
01:26:35,219 --> 01:26:37,560
oh okay that guy just disappeared all

1833
01:26:37,560 --> 01:26:39,179
right I thought he was getting the mic

1834
01:26:39,179 --> 01:26:41,580
thanks

1835
01:26:41,580 --> 01:26:43,620
all right

1836
01:26:43,620 --> 01:26:48,139
any other business on Broski PRM

1837
01:26:48,420 --> 01:26:51,480
and once going twice and Slot number

1838
01:26:51,480 --> 01:26:52,560
seven

1839
01:26:52,560 --> 01:26:55,219
update on brewski alternative enrollment

1840
01:26:55,219 --> 01:26:57,900
that would be David

1841
01:26:57,900 --> 01:27:00,060
right can you hear me

1842
01:27:00,060 --> 01:27:01,560
yep

1843
01:27:01,560 --> 01:27:03,000
great

1844
01:27:03,000 --> 01:27:06,480
could you share the slides please

1845
01:27:06,480 --> 01:27:10,339
um I can try to do my very best

1846
01:27:15,600 --> 01:27:17,100
great

1847
01:27:17,100 --> 01:27:20,639
yeah so today I'm going to to give an

1848
01:27:20,639 --> 01:27:23,400
update on brewski AE uh the changes

1849
01:27:23,400 --> 01:27:27,320
between version two and three

1850
01:27:27,719 --> 01:27:30,239
um next slide please

1851
01:27:30,239 --> 01:27:34,679
as you recall whose GE is invariant

1852
01:27:34,679 --> 01:27:37,020
um of brewski that uses an alternative

1853
01:27:37,020 --> 01:27:41,699
protocol in rather than EST

1854
01:27:41,699 --> 01:27:45,199
so what you see in the orange dot marked

1855
01:27:45,199 --> 01:27:49,280
box is any

1856
01:27:49,280 --> 01:27:52,380
certificate enrollment protocol

1857
01:27:52,380 --> 01:27:55,500
um that has self-contained signed

1858
01:27:55,500 --> 01:27:58,800
objects but a requests which then

1859
01:27:58,800 --> 01:28:01,380
supports end-to-end security for the

1860
01:28:01,380 --> 01:28:04,580
certification requests

1861
01:28:04,980 --> 01:28:08,179
and there's good news on the document

1862
01:28:08,179 --> 01:28:10,620
because now we have two more reviews

1863
01:28:10,620 --> 01:28:13,260
actually three uh one was removed

1864
01:28:13,260 --> 01:28:15,540
internal the other one was by Michael

1865
01:28:15,540 --> 01:28:18,900
and another one was by a Shepherd or

1866
01:28:18,900 --> 01:28:21,179
less I'm very glad that we have these

1867
01:28:21,179 --> 01:28:23,400
reviews in place now and this gave

1868
01:28:23,400 --> 01:28:26,400
valuable feedback which I uh and the

1869
01:28:26,400 --> 01:28:28,260
other co-au authors

1870
01:28:28,260 --> 01:28:29,699
um implemented

1871
01:28:29,699 --> 01:28:33,659
um in the text so we did several

1872
01:28:33,659 --> 01:28:36,900
um editorial changes and also clarified

1873
01:28:36,900 --> 01:28:38,780
various um

1874
01:28:38,780 --> 01:28:42,360
uh requirements which were kind of

1875
01:28:42,360 --> 01:28:45,360
implicit so nothing surprising but still

1876
01:28:45,360 --> 01:28:49,139
good to uh to state them clearly and I

1877
01:28:49,139 --> 01:28:51,560
can best show this at the picture itself

1878
01:28:51,560 --> 01:28:55,139
namely on the left hand side you can see

1879
01:28:55,139 --> 01:28:56,179
the

1880
01:28:56,179 --> 01:28:58,860
messages going from pledge to the

1881
01:28:58,860 --> 01:29:00,179
registrar

1882
01:29:00,179 --> 01:29:03,780
and on this channel we of course reuse

1883
01:29:03,780 --> 01:29:06,719
the existing TLS Channel

1884
01:29:06,719 --> 01:29:11,040
um and what we didn't mention so far is

1885
01:29:11,040 --> 01:29:13,139
that the enrollment protocol that is

1886
01:29:13,139 --> 01:29:15,120
being used here of course needs to

1887
01:29:15,120 --> 01:29:17,340
support this so it must be a protocol

1888
01:29:17,340 --> 01:29:21,540
that can be piggybacked or yeah on the

1889
01:29:21,540 --> 01:29:25,040
on an existing TLS Channel

1890
01:29:26,340 --> 01:29:28,159
um another clarification

1891
01:29:28,159 --> 01:29:32,340
was that the same protocol of course the

1892
01:29:32,340 --> 01:29:34,980
Roman protocol needs to be used between

1893
01:29:34,980 --> 01:29:37,800
the pledge and the registrar and then

1894
01:29:37,800 --> 01:29:40,920
also onwards to the ra if it's elsewhere

1895
01:29:40,920 --> 01:29:42,239
outside

1896
01:29:42,239 --> 01:29:44,580
um the local domain

1897
01:29:44,580 --> 01:29:47,040
so of course we need to use the same

1898
01:29:47,040 --> 01:29:49,739
protocol in order to have the end-to-end

1899
01:29:49,739 --> 01:29:52,699
property that we are after

1900
01:29:53,219 --> 01:29:55,620
and another pretty obvious thing is of

1901
01:29:55,620 --> 01:29:58,080
course that register needs to support at

1902
01:29:58,080 --> 01:30:01,080
least one such enrollment protocol

1903
01:30:01,080 --> 01:30:03,739
um with a self-signed

1904
01:30:03,739 --> 01:30:08,219
objects for the requests

1905
01:30:08,219 --> 01:30:13,020
and the first fourth thing was yeah that

1906
01:30:13,020 --> 01:30:16,380
the registrar itself May

1907
01:30:16,380 --> 01:30:20,300
um already do part of the of the

1908
01:30:20,300 --> 01:30:25,139
domain of the registration Authority if

1909
01:30:25,139 --> 01:30:26,639
um functionality

1910
01:30:26,639 --> 01:30:29,460
or it may delegate part of this or all

1911
01:30:29,460 --> 01:30:30,300
of this

1912
01:30:30,300 --> 01:30:34,139
to an upstream array component which is

1913
01:30:34,139 --> 01:30:36,239
somewhere else in the pki

1914
01:30:36,239 --> 01:30:39,980
so the brewskae has a better flexibility

1915
01:30:39,980 --> 01:30:42,600
there registration Authority

1916
01:30:42,600 --> 01:30:43,820
functionality

1917
01:30:43,820 --> 01:30:47,299
is provided

1918
01:30:48,659 --> 01:30:51,060
yeah I think now we can switch to the

1919
01:30:51,060 --> 01:30:53,699
next slide

1920
01:30:53,699 --> 01:30:55,679
I already mentioned the various

1921
01:30:55,679 --> 01:30:57,120
clarifications

1922
01:30:57,120 --> 01:30:59,600
um that we did in the document

1923
01:30:59,600 --> 01:31:03,060
and here I only wanted to mention that

1924
01:31:03,060 --> 01:31:06,360
we did quite a number of small editorial

1925
01:31:06,360 --> 01:31:08,580
improvements for instance on the

1926
01:31:08,580 --> 01:31:11,219
comparison between plain brewski and

1927
01:31:11,219 --> 01:31:13,260
brewski

1928
01:31:13,260 --> 01:31:16,620
um also a better differentiation of the

1929
01:31:16,620 --> 01:31:19,560
various flavors of Ras for example local

1930
01:31:19,560 --> 01:31:23,699
Ras and register and pki side Ras in the

1931
01:31:23,699 --> 01:31:25,040
back end

1932
01:31:25,040 --> 01:31:28,260
and a better description of offline

1933
01:31:28,260 --> 01:31:30,600
message transfer versus synchronous with

1934
01:31:30,600 --> 01:31:33,719
the transfer and so on so not really a

1935
01:31:33,719 --> 01:31:36,239
big technical issues but just for better

1936
01:31:36,239 --> 01:31:37,760
readability

1937
01:31:37,760 --> 01:31:41,719
some various improvements

1938
01:31:41,719 --> 01:31:45,780
and one further thing that happened in

1939
01:31:45,780 --> 01:31:48,780
the meantime is um I reached again out

1940
01:31:48,780 --> 01:31:51,000
again to Elliot Lear about his uh

1941
01:31:51,000 --> 01:31:54,080
contribution of EST full CMC

1942
01:31:54,080 --> 01:31:58,679
and it turned out that he simply doesn't

1943
01:31:58,679 --> 01:32:00,360
have time to follow up on this and

1944
01:32:00,360 --> 01:32:02,880
apparently the interest also diminished

1945
01:32:02,880 --> 01:32:04,199
somehow

1946
01:32:04,199 --> 01:32:07,440
um so we agreed that he would drop off

1947
01:32:07,440 --> 01:32:10,560
as a co-author and now he's listed as a

1948
01:32:10,560 --> 01:32:12,420
contributor

1949
01:32:12,420 --> 01:32:14,760
um and we have left out the details of

1950
01:32:14,760 --> 01:32:17,040
EST full CMC which were anyway not

1951
01:32:17,040 --> 01:32:18,960
finished at all

1952
01:32:18,960 --> 01:32:20,760
um so the focus of the document is

1953
01:32:20,760 --> 01:32:24,239
meanwhile that is CMP instantiation but

1954
01:32:24,239 --> 01:32:26,400
of course we do mention that there is

1955
01:32:26,400 --> 01:32:29,540
the possibility to plug in other

1956
01:32:29,540 --> 01:32:32,100
certificate enrollment protocols that

1957
01:32:32,100 --> 01:32:35,300
also offer the self-signed

1958
01:32:35,300 --> 01:32:39,980
and not the sales entities designed

1959
01:32:39,980 --> 01:32:42,960
self-contained request objects for

1960
01:32:42,960 --> 01:32:46,219
getting the end-to-end property

1961
01:32:48,300 --> 01:32:50,340
here and now I think we can go to the

1962
01:32:50,340 --> 01:32:53,420
next to the last slide

1963
01:32:54,840 --> 01:32:56,340
so

1964
01:32:56,340 --> 01:32:58,679
um to sum up

1965
01:32:58,679 --> 01:33:01,500
um all open points that have been open

1966
01:33:01,500 --> 01:33:03,480
recently have been resolved meanwhile

1967
01:33:03,480 --> 01:33:06,780
there is a POC implementation we have

1968
01:33:06,780 --> 01:33:09,480
the decision on to remove the EST full

1969
01:33:09,480 --> 01:33:14,520
CMC flavor instantiation of risky AE

1970
01:33:14,520 --> 01:33:17,100
and we have we got a working group

1971
01:33:17,100 --> 01:33:19,320
review by Michael

1972
01:33:19,320 --> 01:33:21,179
and we got the Chevrolet review by

1973
01:33:21,179 --> 01:33:22,800
tallest

1974
01:33:22,800 --> 01:33:24,900
and though we will leave the document is

1975
01:33:24,900 --> 01:33:29,179
now ready to work in group last call

1976
01:33:29,219 --> 01:33:31,679
okay as far as that was my presentation

1977
01:33:31,679 --> 01:33:33,120
and

1978
01:33:33,120 --> 01:33:36,179
do you have comments on this or

1979
01:33:36,179 --> 01:33:40,260
questions now about the last call

1980
01:33:40,260 --> 01:33:43,380
yeah I think the typical thing in terms

1981
01:33:43,380 --> 01:33:45,480
of any earlier reviews that we would

1982
01:33:45,480 --> 01:33:49,260
like to do security for example

1983
01:33:49,260 --> 01:33:50,040
um

1984
01:33:50,040 --> 01:33:52,500
not sure if if that should be done or in

1985
01:33:52,500 --> 01:33:54,000
parallel or before

1986
01:33:54,000 --> 01:33:56,100
working group last call but I think we

1987
01:33:56,100 --> 01:33:57,360
could as well

1988
01:33:57,360 --> 01:34:00,300
um unless there are opposing opinions uh

1989
01:34:00,300 --> 01:34:02,699
start uh working group last call with

1990
01:34:02,699 --> 01:34:04,440
this one I mean at least from the

1991
01:34:04,440 --> 01:34:05,940
shepherd's side I'm

1992
01:34:05,940 --> 01:34:09,559
fine with that but uh

1993
01:34:10,460 --> 01:34:13,580
thank you

1994
01:34:18,179 --> 01:34:21,480
I'll discuss with Shang um on the share

1995
01:34:21,480 --> 01:34:23,000
side

1996
01:34:23,000 --> 01:34:24,719
thanks

1997
01:34:24,719 --> 01:34:26,219
okay

1998
01:34:26,219 --> 01:34:29,760
um great so where are we

1999
01:34:29,760 --> 01:34:31,880
um

2000
01:34:32,400 --> 01:34:34,980
I think we're at the end of uh the

2001
01:34:34,980 --> 01:34:37,560
working group draft I think Michael was

2002
01:34:37,560 --> 01:34:39,960
saying that he would like to have some

2003
01:34:39,960 --> 01:34:42,600
minutes on um the the hackathon which I

2004
01:34:42,600 --> 01:34:44,219
consider to be

2005
01:34:44,219 --> 01:34:46,260
somewhat related to working group so I

2006
01:34:46,260 --> 01:34:47,639
wanted to make sure that we spent the

2007
01:34:47,639 --> 01:34:50,600
time first on that one

2008
01:34:53,760 --> 01:34:55,500
um so what I want to talk about was the

2009
01:34:55,500 --> 01:34:58,679
hackathon VPN which

2010
01:34:58,679 --> 01:35:00,900
um brewski implementers have tried to

2011
01:35:00,900 --> 01:35:03,060
use over two years

2012
01:35:03,060 --> 01:35:05,639
I don't know if we ever got it ever

2013
01:35:05,639 --> 01:35:08,940
working I know Peter tried and I tried

2014
01:35:08,940 --> 01:35:11,940
and it worked for a while so I had um a

2015
01:35:11,940 --> 01:35:15,179
couple meetings with uh Charles eckel

2016
01:35:15,179 --> 01:35:17,760
um the hackathon guy and we then met

2017
01:35:17,760 --> 01:35:20,940
with the ietf knock

2018
01:35:20,940 --> 01:35:22,860
um and they would love to do all sorts

2019
01:35:22,860 --> 01:35:24,480
of things for us

2020
01:35:24,480 --> 01:35:25,020
um

2021
01:35:25,020 --> 01:35:27,780
and um but the choices we just like it

2022
01:35:27,780 --> 01:35:28,739
to work

2023
01:35:28,739 --> 01:35:30,480
um but but essentially what's going to

2024
01:35:30,480 --> 01:35:33,360
happen is that if you have or want to

2025
01:35:33,360 --> 01:35:37,739
buy like it's a 20 Euro 20 Microtech

2026
01:35:37,739 --> 01:35:40,560
Rider the smallest one they have will

2027
01:35:40,560 --> 01:35:42,840
run the lttp stuff

2028
01:35:42,840 --> 01:35:46,560
and then you wind up with a a Wi-Fi and

2029
01:35:46,560 --> 01:35:49,320
an Ethernet which is essentially layer 2

2030
01:35:49,320 --> 01:35:52,139
bridged to the hackathon network

2031
01:35:52,139 --> 01:35:54,239
at which point you can plug in whatever

2032
01:35:54,239 --> 01:35:56,639
physical devices or thread gateways that

2033
01:35:56,639 --> 01:35:58,139
you want

2034
01:35:58,139 --> 01:36:01,679
um and they said that we might even we

2035
01:36:01,679 --> 01:36:04,500
probably can have DHCP V6 prefix

2036
01:36:04,500 --> 01:36:06,659
delegation as well

2037
01:36:06,659 --> 01:36:09,420
so you get a prefix for your 802.154

2038
01:36:09,420 --> 01:36:11,280
network

2039
01:36:11,280 --> 01:36:13,980
um the caveat is that

2040
01:36:13,980 --> 01:36:14,699
um

2041
01:36:14,699 --> 01:36:17,280
it probably won't work for about 10 days

2042
01:36:17,280 --> 01:36:20,040
before each ietf as they take their

2043
01:36:20,040 --> 01:36:22,260
equipment out of the rack and ship it to

2044
01:36:22,260 --> 01:36:25,260
the ITF and for about 10 days after the

2045
01:36:25,260 --> 01:36:27,600
ITF so it will actually probably work I

2046
01:36:27,600 --> 01:36:29,040
think they said it will work well the

2047
01:36:29,040 --> 01:36:31,620
itf's going on which is maybe less

2048
01:36:31,620 --> 01:36:33,659
interesting for remote people who are

2049
01:36:33,659 --> 01:36:36,719
physically present right so but between

2050
01:36:36,719 --> 01:36:39,000
ietfs we can have a network that we can

2051
01:36:39,000 --> 01:36:42,179
do things and we can do all of the mdns

2052
01:36:42,179 --> 01:36:45,600
grasp Etc type discoveries because it's

2053
01:36:45,600 --> 01:36:47,820
a layer 2 Network that we want to be

2054
01:36:47,820 --> 01:36:49,739
able to test so I think that's really

2055
01:36:49,739 --> 01:36:51,960
all I wanted to say I don't have a start

2056
01:36:51,960 --> 01:36:54,600
date for it I presume it'll just start

2057
01:36:54,600 --> 01:36:57,239
working on mines up and running what

2058
01:36:57,239 --> 01:36:58,980
happens is that when you don't when

2059
01:36:58,980 --> 01:37:01,560
their equipment is being shipped you

2060
01:37:01,560 --> 01:37:04,139
wind up with uh

2061
01:37:04,139 --> 01:37:06,300
you wind up with a VPN that appears to

2062
01:37:06,300 --> 01:37:08,699
be up but it's not connected to anything

2063
01:37:08,699 --> 01:37:12,480
right and so I presume sometime in in a

2064
01:37:12,480 --> 01:37:15,659
week or so in uh 10 days or so it'll

2065
01:37:15,659 --> 01:37:17,400
just start working again as they say

2066
01:37:17,400 --> 01:37:19,139
they'll turn it back on and they've

2067
01:37:19,139 --> 01:37:21,540
considered other ways of doing this

2068
01:37:21,540 --> 01:37:24,540
um including the possibility that

2069
01:37:24,540 --> 01:37:26,760
during ietf week we would be able to

2070
01:37:26,760 --> 01:37:28,739
just essentially turn on anything

2071
01:37:28,739 --> 01:37:30,480
anywhere and we'd be able to get onto

2072
01:37:30,480 --> 01:37:32,880
that Network and it would work I don't

2073
01:37:32,880 --> 01:37:34,380
think that was as important because I

2074
01:37:34,380 --> 01:37:36,780
think we're almost all too busy to uh

2075
01:37:36,780 --> 01:37:39,719
during the week to actually do any work

2076
01:37:39,719 --> 01:37:41,699
um it's afterwards so

2077
01:37:41,699 --> 01:37:43,860
I just wanted to let the recruit the

2078
01:37:43,860 --> 01:37:46,560
group know this and I mean I had a

2079
01:37:46,560 --> 01:37:47,940
Raspberry Pi is what the previous

2080
01:37:47,940 --> 01:37:50,699
generation of it was that was harder to

2081
01:37:50,699 --> 01:37:53,940
use and uh although I had some

2082
01:37:53,940 --> 01:37:56,280
reservations about

2083
01:37:56,280 --> 01:37:59,580
GPL compliance of Microtech routers I

2084
01:37:59,580 --> 01:38:03,900
was happy to just pay 20 some units for

2085
01:38:03,900 --> 01:38:06,120
a tiny little device that just seemed to

2086
01:38:06,120 --> 01:38:06,840
work

2087
01:38:06,840 --> 01:38:11,400
so that was it okay thank you

2088
01:38:11,400 --> 01:38:15,840
so is uh is Roland in the room yeah so

2089
01:38:15,840 --> 01:38:19,020
I'm happy to revert our slots because uh

2090
01:38:19,020 --> 01:38:20,340
I

2091
01:38:20,340 --> 01:38:23,040
I don't have high priority and Reviving

2092
01:38:23,040 --> 01:38:24,719
my drafts I put them on the agenda but

2093
01:38:24,719 --> 01:38:27,300
let's go first with the yokira

2094
01:38:27,300 --> 01:38:30,960
uh thing yeah I asked for the controller

2095
01:38:30,960 --> 01:38:33,500
so if you

2096
01:38:35,940 --> 01:38:39,360
present your slides give me a second

2097
01:38:39,360 --> 01:38:43,340
so I'm Ron bless from kit

2098
01:38:43,340 --> 01:38:46,380
and yeah this is Joint work with Machina

2099
01:38:46,380 --> 01:38:49,320
Zoran Arturo so I'd like to introduce

2100
01:38:49,320 --> 01:38:51,900
briefly skira Kira which is a scalable

2101
01:38:51,900 --> 01:38:54,060
ID based routing architecture for

2102
01:38:54,060 --> 01:38:56,639
control plane so quite a nice fit for

2103
01:38:56,639 --> 01:38:59,820
anima here I think and its name is uh

2104
01:38:59,820 --> 01:39:02,400
comes from kademia directed ID based

2105
01:39:02,400 --> 01:39:04,739
routing architecture I don't have the

2106
01:39:04,739 --> 01:39:06,919
control

2107
01:39:07,620 --> 01:39:10,380
okay so what Kira aims at is

2108
01:39:10,380 --> 01:39:12,060
interconnecting large pool of network

2109
01:39:12,060 --> 01:39:14,280
resources being compute storage Network

2110
01:39:14,280 --> 01:39:16,980
what have you it provides a resilient

2111
01:39:16,980 --> 01:39:18,840
connectivity for the control plane so

2112
01:39:18,840 --> 01:39:20,880
that the controllers like sdn

2113
01:39:20,880 --> 01:39:22,800
controllers that control our sdn

2114
01:39:22,800 --> 01:39:24,600
switches

2115
01:39:24,600 --> 01:39:27,000
um Can exert their control

2116
01:39:27,000 --> 01:39:30,120
uh and we also since we are ID based we

2117
01:39:30,120 --> 01:39:31,620
provide stable addresses for moving

2118
01:39:31,620 --> 01:39:33,659
resources like virtual machines that

2119
01:39:33,659 --> 01:39:38,239
move or drones whatever you next slide

2120
01:39:38,760 --> 01:39:40,500
so what it provides is massive

2121
01:39:40,500 --> 01:39:43,080
scalability so we scale to 100 thousands

2122
01:39:43,080 --> 01:39:46,380
of nodes uh it is zero touch requires no

2123
01:39:46,380 --> 01:39:47,940
configuration

2124
01:39:47,940 --> 01:39:48,600
um

2125
01:39:48,600 --> 01:39:51,360
it is quite fast in conversions it's

2126
01:39:51,360 --> 01:39:54,120
Loop free even during convergence which

2127
01:39:54,120 --> 01:39:56,820
is also nice for robustness uh it is

2128
01:39:56,820 --> 01:39:57,420
um

2129
01:39:57,420 --> 01:40:00,719
works well in many different topologies

2130
01:40:00,719 --> 01:40:02,880
so

2131
01:40:02,880 --> 01:40:05,580
we call this topological versatility so

2132
01:40:05,580 --> 01:40:08,100
instead of having specialized variants

2133
01:40:08,100 --> 01:40:10,440
for let's say denser data center

2134
01:40:10,440 --> 01:40:13,980
topologies we we don't need that so

2135
01:40:13,980 --> 01:40:15,840
um and we also aim for efficient routes

2136
01:40:15,840 --> 01:40:17,880
but connectivity is first so to say so

2137
01:40:17,880 --> 01:40:21,060
there's this related work for sure but

2138
01:40:21,060 --> 01:40:23,100
they either like one or the other

2139
01:40:23,100 --> 01:40:26,219
property and for example Ripple here

2140
01:40:26,219 --> 01:40:27,080
um

2141
01:40:27,080 --> 01:40:29,520
uh which would cause traffic

2142
01:40:29,520 --> 01:40:31,980
concentration near the route and it's

2143
01:40:31,980 --> 01:40:34,320
probably not really zero touch since you

2144
01:40:34,320 --> 01:40:37,020
always have to say what's the root node

2145
01:40:37,020 --> 01:40:40,739
I mean so uh next slide please

2146
01:40:40,739 --> 01:40:43,560
yeah so um the main concept is that we

2147
01:40:43,560 --> 01:40:45,300
have two tiers one is the routing tier

2148
01:40:45,300 --> 01:40:46,739
where the routing protocol lives which

2149
01:40:46,739 --> 01:40:49,560
we call Art you cat and the other one is

2150
01:40:49,560 --> 01:40:52,199
the forward interior so the routing tier

2151
01:40:52,199 --> 01:40:55,260
uh provides uh uses ID based addresses

2152
01:40:55,260 --> 01:40:58,440
and it uses Source routes and works on

2153
01:40:58,440 --> 01:41:00,540
top of any link layer

2154
01:41:00,540 --> 01:41:02,760
um while the forward interior can be

2155
01:41:02,760 --> 01:41:05,400
seen as some kind of optimization so we

2156
01:41:05,400 --> 01:41:07,560
try to get rid of source routing due to

2157
01:41:07,560 --> 01:41:10,260
the overhead and the path ID based

2158
01:41:10,260 --> 01:41:11,699
forwarding is some kind of label

2159
01:41:11,699 --> 01:41:13,560
switching approach that simply reduces

2160
01:41:13,560 --> 01:41:15,960
overhead next slide please

2161
01:41:15,960 --> 01:41:18,300
so I will talk briefly about

2162
01:41:18,300 --> 01:41:18,980
um

2163
01:41:18,980 --> 01:41:22,580
r2cap next slide

2164
01:41:22,920 --> 01:41:25,260
so the main idea is that we need some

2165
01:41:25,260 --> 01:41:27,120
kind of path Discovery so in order to

2166
01:41:27,120 --> 01:41:28,920
find path through our Network since

2167
01:41:28,920 --> 01:41:32,940
we're unknown environments and so here

2168
01:41:32,940 --> 01:41:35,219
we have a simple topology consisting of

2169
01:41:35,219 --> 01:41:38,880
the the white node uh white bullets here

2170
01:41:38,880 --> 01:41:42,239
and the white dots so this is a link

2171
01:41:42,239 --> 01:41:45,000
layer topology and each node simply

2172
01:41:45,000 --> 01:41:45,540
um

2173
01:41:45,540 --> 01:41:49,199
creates randomly a node ID which can be

2174
01:41:49,199 --> 01:41:52,020
seen as the the uppercase letters in the

2175
01:41:52,020 --> 01:41:53,880
the blue dots here in the blue circles

2176
01:41:53,880 --> 01:41:55,500
so

2177
01:41:55,500 --> 01:41:56,100
um

2178
01:41:56,100 --> 01:41:58,440
moreover every node learns it's through

2179
01:41:58,440 --> 01:42:00,060
a vicinity

2180
01:42:00,060 --> 01:42:02,280
um so for example here x learns the

2181
01:42:02,280 --> 01:42:04,920
contacts which we call them

2182
01:42:04,920 --> 01:42:06,600
um the circle also calls in Academia

2183
01:42:06,600 --> 01:42:11,239
this way a y b and M next slide please

2184
01:42:11,760 --> 01:42:15,480
so uh now how can XR learn a path to Z

2185
01:42:15,480 --> 01:42:17,639
so the approach is basically to

2186
01:42:17,639 --> 01:42:20,639
construct underlay routes by using the

2187
01:42:20,639 --> 01:42:23,580
node ID based Olay so the source route

2188
01:42:23,580 --> 01:42:26,219
to the context that is the closest to

2189
01:42:26,219 --> 01:42:28,020
the destination already is simply used

2190
01:42:28,020 --> 01:42:30,480
as next top and

2191
01:42:30,480 --> 01:42:33,179
if we mention closeness we need some

2192
01:42:33,179 --> 01:42:35,280
kind of metric that shows us what is

2193
01:42:35,280 --> 01:42:37,320
close to each other and we are using the

2194
01:42:37,320 --> 01:42:39,780
Excel metric from cademia for that so

2195
01:42:39,780 --> 01:42:42,179
that boils down basically to

2196
01:42:42,179 --> 01:42:44,880
if into in case two

2197
01:42:44,880 --> 01:42:48,600
nodes have a longer share prefix than

2198
01:42:48,600 --> 01:42:50,639
they are closer to each other next slide

2199
01:42:50,639 --> 01:42:52,820
please

2200
01:42:53,880 --> 01:42:56,820
so in that case here for example if we

2201
01:42:56,820 --> 01:42:59,100
assume simply for Simplicity that

2202
01:42:59,100 --> 01:43:01,560
letters here close on the alphabet also

2203
01:43:01,560 --> 01:43:05,580
resemble a closer node IDs then the next

2204
01:43:05,580 --> 01:43:09,179
overlay hop for X would be y

2205
01:43:09,179 --> 01:43:12,900
um since it's in the true opacity and we

2206
01:43:12,900 --> 01:43:15,960
assume so we we know that we can reach y

2207
01:43:15,960 --> 01:43:19,739
via a and so we assume that y n O's Z

2208
01:43:19,739 --> 01:43:22,739
Already send then y will forward the

2209
01:43:22,739 --> 01:43:25,619
packet while Source row to Z

2210
01:43:25,619 --> 01:43:29,340
um so in order to find a path we usually

2211
01:43:29,340 --> 01:43:31,199
send so-called find node requests out

2212
01:43:31,199 --> 01:43:33,480
and so here the final request that that

2213
01:43:33,480 --> 01:43:36,000
eventually arrives at Z will record the

2214
01:43:36,000 --> 01:43:38,940
complete route that the pagal travels

2215
01:43:38,940 --> 01:43:39,540
um

2216
01:43:39,540 --> 01:43:41,280
and this naturally incurs some path

2217
01:43:41,280 --> 01:43:43,260
stretch so that it's not necessarily the

2218
01:43:43,260 --> 01:43:46,139
shortest route and also here it contains

2219
01:43:46,139 --> 01:43:48,360
a cycle but we can get rid of the cycle

2220
01:43:48,360 --> 01:43:51,259
so next slide please

2221
01:43:51,600 --> 01:43:53,880
so the answer picket usually eliminates

2222
01:43:53,880 --> 01:43:56,219
already that cycle

2223
01:43:56,219 --> 01:43:58,199
um and later Breakers can even do better

2224
01:43:58,199 --> 01:44:01,139
so in the sense that x no is a shorter

2225
01:44:01,139 --> 01:44:05,760
route to M so it can take a shortcut so

2226
01:44:05,760 --> 01:44:08,280
that reduces stretch and in case you

2227
01:44:08,280 --> 01:44:12,360
have or I can't afford to have stayed

2228
01:44:12,360 --> 01:44:15,840
for later packets then you can achieve

2229
01:44:15,840 --> 01:44:18,480
lower stretch release moreover archicad

2230
01:44:18,480 --> 01:44:20,460
offers a flexible memory stretch Trader

2231
01:44:20,460 --> 01:44:22,619
of uh due to its routing table design

2232
01:44:22,619 --> 01:44:25,340
the next slide please

2233
01:44:25,340 --> 01:44:28,800
so the routing table is basically the

2234
01:44:28,800 --> 01:44:30,960
same as in Academia so it's arranged by

2235
01:44:30,960 --> 01:44:33,960
the xor distance so we have buckets of

2236
01:44:33,960 --> 01:44:36,119
fixed sizes

2237
01:44:36,119 --> 01:44:39,540
um usually of a small number okay equals

2238
01:44:39,540 --> 01:44:42,060
20 or 40 so that's a the bucket size

2239
01:44:42,060 --> 01:44:42,900
limit

2240
01:44:42,900 --> 01:44:44,880
and the bucket

2241
01:44:44,880 --> 01:44:47,219
um the bucket here and the the topmost

2242
01:44:47,219 --> 01:44:49,860
bucket here the the gray one that

2243
01:44:49,860 --> 01:44:51,659
contains the context G for example that

2244
01:44:51,659 --> 01:44:54,780
that holds all the contacts from half of

2245
01:44:54,780 --> 01:44:57,000
the ID space which could be quite large

2246
01:44:57,000 --> 01:44:59,340
uh and in that case

2247
01:44:59,340 --> 01:45:04,020
uh that that the the ID was overlay

2248
01:45:04,020 --> 01:45:06,659
needs always to

2249
01:45:06,659 --> 01:45:08,340
uh

2250
01:45:08,340 --> 01:45:11,040
or is based on the property that you

2251
01:45:11,040 --> 01:45:14,159
know your ID wise neighbors uh there's a

2252
01:45:14,159 --> 01:45:16,920
certain strategy that causes buckets to

2253
01:45:16,920 --> 01:45:19,920
split once they're full in case

2254
01:45:19,920 --> 01:45:22,920
um they are in your uh ID wise vicinity

2255
01:45:22,920 --> 01:45:25,320
so lower buckets usually contain your ID

2256
01:45:25,320 --> 01:45:28,679
wise neighborhood so next slide please

2257
01:45:28,679 --> 01:45:31,679
so what we do now in addition to that is

2258
01:45:31,679 --> 01:45:33,960
that we call the Discover path as path

2259
01:45:33,960 --> 01:45:37,080
vectors for each contact and we can do

2260
01:45:37,080 --> 01:45:38,880
so in a way that we prefer always

2261
01:45:38,880 --> 01:45:40,980
shorter routes

2262
01:45:40,980 --> 01:45:42,840
um and that leads to efficiently

2263
01:45:42,840 --> 01:45:44,940
learning the shortest path to the

2264
01:45:44,940 --> 01:45:48,239
context uh the size of the buckets is

2265
01:45:48,239 --> 01:45:51,119
choosable so per on a per node basis so

2266
01:45:51,119 --> 01:45:53,580
in case your node can afford more memory

2267
01:45:53,580 --> 01:45:55,739
then you can have thousands of entries

2268
01:45:55,739 --> 01:45:58,440
in your routing table so that achieves

2269
01:45:58,440 --> 01:46:00,239
that flexible memory stretch trade-off

2270
01:46:00,239 --> 01:46:02,280
and basically we scale logarithmically

2271
01:46:02,280 --> 01:46:06,560
with a number of nodes next slide please

2272
01:46:06,560 --> 01:46:09,540
so with respect to Dynamics

2273
01:46:09,540 --> 01:46:11,219
um

2274
01:46:11,219 --> 01:46:13,440
we assume that we have some kind of

2275
01:46:13,440 --> 01:46:15,119
detection of node link Theory and the

2276
01:46:15,119 --> 01:46:17,100
underlay and then we have it performing

2277
01:46:17,100 --> 01:46:19,260
a two-step strategy the first one is

2278
01:46:19,260 --> 01:46:20,820
that we inform the ID wise Neighbors

2279
01:46:20,820 --> 01:46:22,880
about the Fate link here for example X

2280
01:46:22,880 --> 01:46:27,179
informs Y and Z about the failing next

2281
01:46:27,179 --> 01:46:29,659
slide please

2282
01:46:29,760 --> 01:46:33,900
and so the second step is to ReDiscover

2283
01:46:33,900 --> 01:46:37,440
a alternative path via the Ola strategy

2284
01:46:37,440 --> 01:46:40,139
that I just explained but this time

2285
01:46:40,139 --> 01:46:42,600
including a not via information telling

2286
01:46:42,600 --> 01:46:44,820
other nodes that may not hurt over the

2287
01:46:44,820 --> 01:46:46,500
broken link that they cannot use path

2288
01:46:46,500 --> 01:46:48,420
that contain the broken link

2289
01:46:48,420 --> 01:46:52,260
and furthermore periodically uh since

2290
01:46:52,260 --> 01:46:54,360
it's not guaranteed that the routing

2291
01:46:54,360 --> 01:46:56,340
updates or that information about the

2292
01:46:56,340 --> 01:46:59,100
broken linger spread over the all nodes

2293
01:46:59,100 --> 01:47:01,619
that need that information

2294
01:47:01,619 --> 01:47:04,380
um you just checked regularly uh whether

2295
01:47:04,380 --> 01:47:06,480
the path to your contacts work and you

2296
01:47:06,480 --> 01:47:08,100
also have to look up your own node ID in

2297
01:47:08,100 --> 01:47:10,199
order to keep the overlay together and

2298
01:47:10,199 --> 01:47:11,760
to detect Network partitioning for

2299
01:47:11,760 --> 01:47:13,980
example and we ensure the validity of

2300
01:47:13,980 --> 01:47:15,420
the routing information by using State

2301
01:47:15,420 --> 01:47:16,980
sequence numbers and also path

2302
01:47:16,980 --> 01:47:21,559
information ages next slide please

2303
01:47:23,040 --> 01:47:25,500
um yeah so briefly uh what's it about

2304
01:47:25,500 --> 01:47:28,380
the the path ID based forwarding uh next

2305
01:47:28,380 --> 01:47:30,239
slide please so there are many backup

2306
01:47:30,239 --> 01:47:32,400
slides don't worry

2307
01:47:32,400 --> 01:47:35,400
and so the forwarding tier now tries to

2308
01:47:35,400 --> 01:47:36,780
get rid of the source router for the

2309
01:47:36,780 --> 01:47:38,280
control plane packet so in case we want

2310
01:47:38,280 --> 01:47:40,380
to ask this H to our router

2311
01:47:40,380 --> 01:47:42,960
Kira provides the connectivity but we

2312
01:47:42,960 --> 01:47:44,760
don't want have Source ordering for us

2313
01:47:44,760 --> 01:47:46,739
this Edge packets just to get to the

2314
01:47:46,739 --> 01:47:49,260
router so the the approach here is to

2315
01:47:49,260 --> 01:47:51,000
replace the source routes with so-called

2316
01:47:51,000 --> 01:47:52,400
path IDs

2317
01:47:52,400 --> 01:47:55,020
and the path ID basically is just the

2318
01:47:55,020 --> 01:47:58,340
hash of the node IDs uh the source route

2319
01:47:58,340 --> 01:48:01,380
and so the path ID is used as labor for

2320
01:48:01,380 --> 01:48:02,880
the source route and then basically we

2321
01:48:02,880 --> 01:48:05,100
do some label switching between the

2322
01:48:05,100 --> 01:48:06,960
nodes

2323
01:48:06,960 --> 01:48:09,119
um and the the reason why we need the

2324
01:48:09,119 --> 01:48:12,239
two of the physical vicinity which isn't

2325
01:48:12,239 --> 01:48:14,040
actually required for the routing

2326
01:48:14,040 --> 01:48:15,659
protocol safe but here for the path ID

2327
01:48:15,659 --> 01:48:17,639
forwarding it's nice because we can

2328
01:48:17,639 --> 01:48:19,020
pre-calculate

2329
01:48:19,020 --> 01:48:21,000
uh the path ID is

2330
01:48:21,000 --> 01:48:23,639
um in the true hope vicinity the

2331
01:48:23,639 --> 01:48:26,280
physical vicinity and so we

2332
01:48:26,280 --> 01:48:29,699
only need path setup for pop that are

2333
01:48:29,699 --> 01:48:31,320
longer than Force

2334
01:48:31,320 --> 01:48:34,340
next slide please

2335
01:48:34,980 --> 01:48:37,080
so we implemented a thing and showed

2336
01:48:37,080 --> 01:48:39,900
that it works on top of IPv6 packet

2337
01:48:39,900 --> 01:48:43,199
format so we just provide IPv6

2338
01:48:43,199 --> 01:48:45,360
connectivity out of nowhere so to say

2339
01:48:45,360 --> 01:48:49,739
with Kira and then the data packets can

2340
01:48:49,739 --> 01:48:51,600
use the faster forwarding in the

2341
01:48:51,600 --> 01:48:54,119
forwarding tier which requires a node ID

2342
01:48:54,119 --> 01:48:55,679
based forwarding table and a path ID

2343
01:48:55,679 --> 01:48:58,080
based forwarding table and in order to

2344
01:48:58,080 --> 01:49:00,600
use path IDs in addition to the node IDs

2345
01:49:00,600 --> 01:49:03,060
we simply use GAA encapsulation so

2346
01:49:03,060 --> 01:49:04,920
there's one additional header for that

2347
01:49:04,920 --> 01:49:07,139
path that you based forwarding in the

2348
01:49:07,139 --> 01:49:09,900
current scheme and so your control plane

2349
01:49:09,900 --> 01:49:13,500
app if it's able to talk IPv6 then it

2350
01:49:13,500 --> 01:49:18,860
runs simply or Kira next slide please

2351
01:49:19,080 --> 01:49:21,600
yeah we simulated that because I claimed

2352
01:49:21,600 --> 01:49:24,360
that it's highly scalable with 100 000

2353
01:49:24,360 --> 01:49:26,040
of nodes and so on so here are the

2354
01:49:26,040 --> 01:49:28,440
details we tested in various topologies

2355
01:49:28,440 --> 01:49:31,580
next slide please

2356
01:49:32,040 --> 01:49:35,760
so this slide shows its performance in

2357
01:49:35,760 --> 01:49:38,639
various topologies of site of 10 000

2358
01:49:38,639 --> 01:49:40,460
nodes

2359
01:49:40,460 --> 01:49:43,380
and what you can see here is that for

2360
01:49:43,380 --> 01:49:46,080
example the average multiplicative

2361
01:49:46,080 --> 01:49:48,540
stretch along the y-axis one of the

2362
01:49:48,540 --> 01:49:50,460
different topologies are along the

2363
01:49:50,460 --> 01:49:51,900
x-axis

2364
01:49:51,900 --> 01:49:54,420
and the first packet stretch for the

2365
01:49:54,420 --> 01:49:56,280
first packets that we need for pop

2366
01:49:56,280 --> 01:49:59,580
Discovery is uh are the Green Dots here

2367
01:49:59,580 --> 01:50:01,500
and you can see that it's even lower

2368
01:50:01,500 --> 01:50:04,800
than the ACP variant of Ripple

2369
01:50:04,800 --> 01:50:08,040
uh so we're not doing the so bad even

2370
01:50:08,040 --> 01:50:10,980
while we're doing overlay based routing

2371
01:50:10,980 --> 01:50:14,100
more or less and also the blue triangles

2372
01:50:14,100 --> 01:50:17,219
here are showing that the pay the thresh

2373
01:50:17,219 --> 01:50:19,500
for the later crickets can be even lower

2374
01:50:19,500 --> 01:50:22,619
and the really nice thing is that in all

2375
01:50:22,619 --> 01:50:25,560
topologies we learned the shortest path

2376
01:50:25,560 --> 01:50:27,960
to all the contexts that we know so you

2377
01:50:27,960 --> 01:50:29,940
always have shortest path in your own

2378
01:50:29,940 --> 01:50:32,280
routing table but in order to get to

2379
01:50:32,280 --> 01:50:34,500
other nodes that you don't know you have

2380
01:50:34,500 --> 01:50:39,300
to at least um have some stretch right

2381
01:50:39,300 --> 01:50:41,940
so next piece

2382
01:50:41,940 --> 01:50:44,100
yeah and dynamic wise we are also doing

2383
01:50:44,100 --> 01:50:47,940
quite well so in 100 000 topology uh

2384
01:50:47,940 --> 01:50:51,659
when 15 of 15 or the links fail randomly

2385
01:50:51,659 --> 01:50:54,119
and simultaneously which is quite a

2386
01:50:54,119 --> 01:50:57,300
large outage I would say you see that

2387
01:50:57,300 --> 01:50:59,340
it's able to

2388
01:50:59,340 --> 01:51:03,600
get back to nearly 100 delivery ratio

2389
01:51:03,600 --> 01:51:06,179
for the control packets and also then

2390
01:51:06,179 --> 01:51:08,239
for the data packets a little bit later

2391
01:51:08,239 --> 01:51:11,760
uh within 10 seconds roughly and the

2392
01:51:11,760 --> 01:51:13,800
overhead is small so we're not flooding

2393
01:51:13,800 --> 01:51:16,380
right so due to the small size routing

2394
01:51:16,380 --> 01:51:18,780
tables we can do quite well with the

2395
01:51:18,780 --> 01:51:20,820
overhead of the the whole protocol so we

2396
01:51:20,820 --> 01:51:23,940
have here nearly 80 packets in average

2397
01:51:23,940 --> 01:51:29,400
per node per second that is sent in that

2398
01:51:29,400 --> 01:51:32,100
kind of failure next

2399
01:51:32,100 --> 01:51:34,020
um next slide please

2400
01:51:34,020 --> 01:51:37,920
yeah sir uh that concludes uh already uh

2401
01:51:37,920 --> 01:51:39,000
my talk

2402
01:51:39,000 --> 01:51:40,500
um sorry there are more backup slides in

2403
01:51:40,500 --> 01:51:41,880
case you're interested there will be a

2404
01:51:41,880 --> 01:51:44,760
site meeting today so at seven in lesson

2405
01:51:44,760 --> 01:51:47,520
9 12 here there's a small room

2406
01:51:47,520 --> 01:51:49,080
uh

2407
01:51:49,080 --> 01:51:51,420
so Kira is actually designed for large

2408
01:51:51,420 --> 01:51:54,480
provided domains uh it's could be a

2409
01:51:54,480 --> 01:51:56,639
replacement here for ripple in the ACP

2410
01:51:56,639 --> 01:51:58,679
but we're not standardized yet so the

2411
01:51:58,679 --> 01:52:01,139
idea is to start that off here so I have

2412
01:52:01,139 --> 01:52:03,840
to to write internet drafts and design

2413
01:52:03,840 --> 01:52:07,679
packet formats uh here and and so on

2414
01:52:07,679 --> 01:52:09,119
um

2415
01:52:09,119 --> 01:52:13,139
Ripple was designed for iot so QR was

2416
01:52:13,139 --> 01:52:15,900
not designed for IIT in mind but for

2417
01:52:15,900 --> 01:52:18,600
fixed networks basically but I guess we

2418
01:52:18,600 --> 01:52:20,880
can tweak also to that

2419
01:52:20,880 --> 01:52:23,400
we simply use Link local addresses as I

2420
01:52:23,400 --> 01:52:26,400
said so that can be used out of the box

2421
01:52:26,400 --> 01:52:28,040
in that sense

2422
01:52:28,040 --> 01:52:31,380
the nice thing is that it offers more it

2423
01:52:31,380 --> 01:52:33,840
offers integrated DHT for simple name

2424
01:52:33,840 --> 01:52:36,300
resolution services and Discovery and

2425
01:52:36,300 --> 01:52:37,739
that could lead to a more efficient and

2426
01:52:37,739 --> 01:52:39,600
simplified Discovery than with grass

2427
01:52:39,600 --> 01:52:42,300
when you do with your graph it also

2428
01:52:42,300 --> 01:52:43,619
supports multi-path routing and

2429
01:52:43,619 --> 01:52:45,480
forwarding due to the path IDs for

2430
01:52:45,480 --> 01:52:48,360
example and it also supports scalable

2431
01:52:48,360 --> 01:52:50,159
and efficient topology Discovery so you

2432
01:52:50,159 --> 01:52:52,380
within five seconds you can basically

2433
01:52:52,380 --> 01:52:56,219
discover 100 000 nodes topologies with

2434
01:52:56,219 --> 01:52:59,639
nearly 100 of all the links in five

2435
01:52:59,639 --> 01:53:03,179
seconds so that's kind of amazing yeah

2436
01:53:03,179 --> 01:53:05,580
uh that's that's it

2437
01:53:05,580 --> 01:53:07,679
thank you very much

2438
01:53:07,679 --> 01:53:10,679
um any uh questions

2439
01:53:10,679 --> 01:53:13,219
Michael

2440
01:53:13,679 --> 01:53:15,900
thank you for this presentation so is it

2441
01:53:15,900 --> 01:53:17,639
your goal you're having a side meeting

2442
01:53:17,639 --> 01:53:20,280
or do you think you're gonna

2443
01:53:20,280 --> 01:53:23,820
from a working group or what's going to

2444
01:53:23,820 --> 01:53:25,020
happen with that

2445
01:53:25,020 --> 01:53:27,420
yeah I mean yeah there's I I want to

2446
01:53:27,420 --> 01:53:29,040
just see whether there's interest what

2447
01:53:29,040 --> 01:53:30,719
people think about it whether it's

2448
01:53:30,719 --> 01:53:31,800
useful

2449
01:53:31,800 --> 01:53:34,560
uh I think for future networks we need

2450
01:53:34,560 --> 01:53:37,320
some kind of robust control plane

2451
01:53:37,320 --> 01:53:38,880
connectivity

2452
01:53:38,880 --> 01:53:41,280
um because you you know that that people

2453
01:53:41,280 --> 01:53:43,440
misconfigured bgp at meta and then they

2454
01:53:43,440 --> 01:53:45,000
lock themselves out of their own control

2455
01:53:45,000 --> 01:53:47,520
plane that is impossible with gear in

2456
01:53:47,520 --> 01:53:49,800
that sense in case you have physical

2457
01:53:49,800 --> 01:53:52,619
connectivity you will get there right um

2458
01:53:52,619 --> 01:53:55,860
and so that's really a robust way for

2459
01:53:55,860 --> 01:53:58,380
your control playing connectivity

2460
01:53:58,380 --> 01:54:00,060
um so yeah the idea is maybe I don't

2461
01:54:00,060 --> 01:54:04,020
know if if I think I have to to write

2462
01:54:04,020 --> 01:54:07,500
IDs first and then maybe next time we

2463
01:54:07,500 --> 01:54:09,960
can have a buff official buff I don't

2464
01:54:09,960 --> 01:54:10,679
know

2465
01:54:10,679 --> 01:54:13,500
so so um but it's not you sorry it's not

2466
01:54:13,500 --> 01:54:15,980
useful unless you have key run all your

2467
01:54:15,980 --> 01:54:18,420
resources so that's of course of course

2468
01:54:18,420 --> 01:54:21,060
we need to standardize it okay so so um

2469
01:54:21,060 --> 01:54:23,400
so we've had two thoughts one one was

2470
01:54:23,400 --> 01:54:26,100
that so ACP you know is intended to run

2471
01:54:26,100 --> 01:54:28,320
over secure overlay we're using you know

2472
01:54:28,320 --> 01:54:30,719
point to point out every sec

2473
01:54:30,719 --> 01:54:32,460
um one of the

2474
01:54:32,460 --> 01:54:35,280
you know one of the pathologies

2475
01:54:35,280 --> 01:54:36,840
um when we have Layer Two connectivity

2476
01:54:36,840 --> 01:54:41,940
that doesn't participate uh in the ACB

2477
01:54:41,940 --> 01:54:43,920
excuse me

2478
01:54:43,920 --> 01:54:45,480
um one of the pathologies is we formed

2479
01:54:45,480 --> 01:54:48,239
too many too many adjacencies

2480
01:54:48,239 --> 01:54:50,880
right if you have a layer two switch

2481
01:54:50,880 --> 01:54:52,320
that connects a bunch of layer three

2482
01:54:52,320 --> 01:54:53,580
things is that you wind up with this

2483
01:54:53,580 --> 01:54:55,139
mesh and it's silly right because you

2484
01:54:55,139 --> 01:54:57,060
just don't need everything

2485
01:54:57,060 --> 01:54:58,800
um on the other hand if you have actual

2486
01:54:58,800 --> 01:55:01,139
real you know devices separated by

2487
01:55:01,139 --> 01:55:02,820
cities and stuff then the connectivity

2488
01:55:02,820 --> 01:55:04,739
really makes sense and you you have you

2489
01:55:04,739 --> 01:55:06,300
have the right things

2490
01:55:06,300 --> 01:55:08,940
um but despite that what we don't have

2491
01:55:08,940 --> 01:55:10,560
in Ripple

2492
01:55:10,560 --> 01:55:12,420
um at this time is any kind of

2493
01:55:12,420 --> 01:55:15,600
reasonable uh origin authentication so

2494
01:55:15,600 --> 01:55:17,580
we have all the security we have we know

2495
01:55:17,580 --> 01:55:20,100
which node has which uh i p address we

2496
01:55:20,100 --> 01:55:21,960
even have certificates with that attest

2497
01:55:21,960 --> 01:55:24,300
to that but a routing protocol actually

2498
01:55:24,300 --> 01:55:28,380
makes no use of that fact to to make

2499
01:55:28,380 --> 01:55:30,420
sure that our our control plane does

2500
01:55:30,420 --> 01:55:33,000
hasn't part of it hasn't gone bad and

2501
01:55:33,000 --> 01:55:36,780
it's not just a to my mind a question of

2502
01:55:36,780 --> 01:55:39,300
a defense against maliciousness but it's

2503
01:55:39,300 --> 01:55:41,340
a defense against as he said Facebook or

2504
01:55:41,340 --> 01:55:43,980
Rogers in Canada had a worse meltdown on

2505
01:55:43,980 --> 01:55:45,840
July 8th

2506
01:55:45,840 --> 01:55:47,219
um they didn't just Knock Lock

2507
01:55:47,219 --> 01:55:49,440
themselves out of data centers they they

2508
01:55:49,440 --> 01:55:52,139
just posted their entire control plane

2509
01:55:52,139 --> 01:55:54,060
to the point where they couldn't even

2510
01:55:54,060 --> 01:55:56,580
phone each other up yeah say go fix it

2511
01:55:56,580 --> 01:55:59,460
because their phones didn't work right

2512
01:55:59,460 --> 01:56:00,360
um

2513
01:56:00,360 --> 01:56:03,600
uh but you know it would be nice if that

2514
01:56:03,600 --> 01:56:05,760
was also if that security was also

2515
01:56:05,760 --> 01:56:08,540
providing for defense against

2516
01:56:08,540 --> 01:56:11,280
misconfiguration and

2517
01:56:11,280 --> 01:56:12,659
um so that's something I would really be

2518
01:56:12,659 --> 01:56:14,880
excited to about the other part I wanted

2519
01:56:14,880 --> 01:56:16,980
to win is it sounds to me like we could

2520
01:56:16,980 --> 01:56:18,960
run Ripple

2521
01:56:18,960 --> 01:56:22,679
and Kira at the same time now we don't

2522
01:56:22,679 --> 01:56:25,619
have a big installed base of of ACP but

2523
01:56:25,619 --> 01:56:28,679
imagine if we did right that finding

2524
01:56:28,679 --> 01:56:30,840
those those cross links and not going

2525
01:56:30,840 --> 01:56:32,400
through as you said going through the

2526
01:56:32,400 --> 01:56:34,440
knock uh would be an interesting thing

2527
01:56:34,440 --> 01:56:37,080
well you know I mean I don't know maybe

2528
01:56:37,080 --> 01:56:38,940
some synergies here that make that makes

2529
01:56:38,940 --> 01:56:41,040
it worthwhile or maybe a stupid thing to

2530
01:56:41,040 --> 01:56:43,679
do just wasting more time

2531
01:56:43,679 --> 01:56:45,540
um but anyway it's a thought that you

2532
01:56:45,540 --> 01:56:47,100
know that I had yeah just two thoughts

2533
01:56:47,100 --> 01:56:48,900
from my side one one is

2534
01:56:48,900 --> 01:56:51,360
um Cura is a nice property that it

2535
01:56:51,360 --> 01:56:53,159
naturally thins out very dense

2536
01:56:53,159 --> 01:56:55,460
topologies

2537
01:56:55,460 --> 01:56:58,080
and the other one is we we didn't

2538
01:56:58,080 --> 01:56:59,940
consider security right now but you

2539
01:56:59,940 --> 01:57:03,360
naturally can use node IDs out of a hash

2540
01:57:03,360 --> 01:57:05,040
over your public keys so that you have

2541
01:57:05,040 --> 01:57:07,320
self-certifying identifiers and since

2542
01:57:07,320 --> 01:57:09,659
we're using path vectors we can do any

2543
01:57:09,659 --> 01:57:12,300
sort of having interrogatory protection

2544
01:57:12,300 --> 01:57:15,420
for our routes right yeah it's it's not

2545
01:57:15,420 --> 01:57:17,940
the Integrity we have that part it's the

2546
01:57:17,940 --> 01:57:20,699
this route really did originate from the

2547
01:57:20,699 --> 01:57:22,080
that node

2548
01:57:22,080 --> 01:57:24,540
right that's that's the thing it's that

2549
01:57:24,540 --> 01:57:26,460
so like you know right now we have you

2550
01:57:26,460 --> 01:57:29,940
know uh uh in bgp right we have

2551
01:57:29,940 --> 01:57:30,960
um

2552
01:57:30,960 --> 01:57:33,659
um our pki but what we're missing is

2553
01:57:33,659 --> 01:57:36,060
Route authentic origin authentication

2554
01:57:36,060 --> 01:57:38,880
right and and and so that's the kind of

2555
01:57:38,880 --> 01:57:40,139
thing that I'm saying it would be it

2556
01:57:40,139 --> 01:57:42,480
would be interesting if if you could

2557
01:57:42,480 --> 01:57:45,719
consider that from day one so that you

2558
01:57:45,719 --> 01:57:47,159
know it's not a retrofit because

2559
01:57:47,159 --> 01:57:48,780
everything else is a retro I know I know

2560
01:57:48,780 --> 01:57:51,300
but we we need to get got this working

2561
01:57:51,300 --> 01:57:54,480
first and then I think we can put on

2562
01:57:54,480 --> 01:57:56,400
many security

2563
01:57:56,400 --> 01:57:58,860
mechanisms if you want to yeah I have

2564
01:57:58,860 --> 01:58:01,860
one question too um the uh what I was

2565
01:58:01,860 --> 01:58:02,880
missing was a little bit better

2566
01:58:02,880 --> 01:58:04,980
understanding the forwarding plane that

2567
01:58:04,980 --> 01:58:07,800
you get ultimately right the the path

2568
01:58:07,800 --> 01:58:10,199
vector and stuff that didn't sound like

2569
01:58:10,199 --> 01:58:12,840
uh you're sending just a packet and hop

2570
01:58:12,840 --> 01:58:15,239
by hop you have the forwarding State the

2571
01:58:15,239 --> 01:58:17,219
routing table entries but it seemed like

2572
01:58:17,219 --> 01:58:19,560
you're still carrying some path

2573
01:58:19,560 --> 01:58:21,500
information in some packet header right

2574
01:58:21,500 --> 01:58:24,480
uh so when you send a packet with path

2575
01:58:24,480 --> 01:58:27,599
ID you basically have a GRE header that

2576
01:58:27,599 --> 01:58:30,260
has the path ID as destination address

2577
01:58:30,260 --> 01:58:34,199
and once your path is has ended then you

2578
01:58:34,199 --> 01:58:36,540
can simply drop the GE header and use

2579
01:58:36,540 --> 01:58:40,320
the node ID for regular forwarding okay

2580
01:58:40,320 --> 01:58:43,500
so you have on one segment you have uh

2581
01:58:43,500 --> 01:58:45,900
some okay Jerry is just one of your

2582
01:58:45,900 --> 01:58:47,580
choice is the choice that you came up

2583
01:58:47,580 --> 01:58:49,619
with yeah but you can use segment

2584
01:58:49,619 --> 01:58:52,020
routing headers what have you so so that

2585
01:58:52,020 --> 01:58:53,159
there are many encapsulation

2586
01:58:53,159 --> 01:58:55,880
possibilities to encapsulate the power

2587
01:58:55,880 --> 01:58:59,880
the GRE key as the the key is the uh

2588
01:58:59,880 --> 01:59:01,739
path ID or

2589
01:59:01,739 --> 01:59:05,040
which part of GRE yeah the the so you

2590
01:59:05,040 --> 01:59:06,780
just put the as destination IP address

2591
01:59:06,780 --> 01:59:09,239
the path ID and now you have a

2592
01:59:09,239 --> 01:59:12,179
destination okay yeah right so okay and

2593
01:59:12,179 --> 01:59:14,159
is there always only one such path

2594
01:59:14,159 --> 01:59:17,940
element are you having multiple of them

2595
01:59:17,940 --> 01:59:19,920
for example

2596
01:59:19,920 --> 01:59:22,260
um yeah you can so the path ID concept

2597
01:59:22,260 --> 01:59:24,900
is basically we are capable of using

2598
01:59:24,900 --> 01:59:26,940
multiple path IDs you so you can do

2599
01:59:26,940 --> 01:59:28,619
multi-path routing if you want to no no

2600
01:59:28,619 --> 01:59:30,780
I'm saying that to get to a particular

2601
01:59:30,780 --> 01:59:33,000
destination how many

2602
01:59:33,000 --> 01:59:34,980
um you know steering points do you need

2603
01:59:34,980 --> 01:59:37,879
across the network

2604
01:59:38,119 --> 01:59:41,099
you're sending a package you're

2605
01:59:41,099 --> 01:59:44,040
basically saying the the first address

2606
01:59:44,040 --> 01:59:45,960
you're routing to is the end of that

2607
01:59:45,960 --> 01:59:47,219
that path

2608
01:59:47,219 --> 01:59:49,800
which which is known on the path segment

2609
01:59:49,800 --> 01:59:53,099
yeah okay okay I see I see is here

2610
01:59:53,099 --> 01:59:55,800
um yeah so so it depends on the on the

2611
01:59:55,800 --> 01:59:58,699
topology so the larger your topology is

2612
01:59:58,699 --> 02:00:02,520
the longer the uh the the higher the

2613
02:00:02,520 --> 02:00:04,380
number of intermediate jobs that you

2614
02:00:04,380 --> 02:00:06,840
need and that grows logarithmically with

2615
02:00:06,840 --> 02:00:09,960
the size of the network typically uh

2616
02:00:09,960 --> 02:00:11,880
this forwarding plane stuff would be

2617
02:00:11,880 --> 02:00:13,500
good to highlight better in slides

2618
02:00:13,500 --> 02:00:15,719
because that's uh yeah I know what we're

2619
02:00:15,719 --> 02:00:18,300
looking into just it's fairly clear that

2620
02:00:18,300 --> 02:00:20,340
by using Source routing and having you

2621
02:00:20,340 --> 02:00:22,080
know an incremental set of source routes

2622
02:00:22,080 --> 02:00:24,060
that help you to get closer to the

2623
02:00:24,060 --> 02:00:25,980
destinations one of the cool ways on how

2624
02:00:25,980 --> 02:00:28,560
we can achieve you know better than um

2625
02:00:28,560 --> 02:00:30,599
what Ripple does but I think that's

2626
02:00:30,599 --> 02:00:32,699
exactly the stuff that we want to review

2627
02:00:32,699 --> 02:00:35,580
and what what also I think the

2628
02:00:35,580 --> 02:00:37,380
forwarding planes that have this ability

2629
02:00:37,380 --> 02:00:39,800
like mpls or

2630
02:00:39,800 --> 02:00:42,900
srv6 or obviously Ripple has it in in

2631
02:00:42,900 --> 02:00:45,060
its way too although they're using it

2632
02:00:45,060 --> 02:00:46,920
differently right but all these Source

2633
02:00:46,920 --> 02:00:49,260
routing headers might be exactly you

2634
02:00:49,260 --> 02:00:51,239
know what what you need to interact with

2635
02:00:51,239 --> 02:00:55,260
yeah so so we are currently trying to

2636
02:00:55,260 --> 02:00:57,380
optimize a bit on the path ID forwarding

2637
02:00:57,380 --> 02:01:00,119
uh requiring fewer entries in the

2638
02:01:00,119 --> 02:01:02,940
intermediate hubs but we didn't so we

2639
02:01:02,940 --> 02:01:04,800
have the concept but we didn't uh

2640
02:01:04,800 --> 02:01:07,739
program it into the simulation so we

2641
02:01:07,739 --> 02:01:09,840
want to have a better understanding how

2642
02:01:09,840 --> 02:01:12,060
many following entries are actually

2643
02:01:12,060 --> 02:01:14,699
required in the worst case uh and and

2644
02:01:14,699 --> 02:01:16,800
that is I mean we're we are very

2645
02:01:16,800 --> 02:01:19,139
scalable and the control plane of Kira

2646
02:01:19,139 --> 02:01:20,639
itself so let's say about on the data

2647
02:01:20,639 --> 02:01:22,500
plane for keyword we need to figure that

2648
02:01:22,500 --> 02:01:25,800
out but it doesn't seem too bad so it's

2649
02:01:25,800 --> 02:01:28,440
I think the worst case is square root of

2650
02:01:28,440 --> 02:01:32,880
n so which is manageable usually by

2651
02:01:32,880 --> 02:01:34,980
modern switches or routers

2652
02:01:34,980 --> 02:01:38,099
right well I mean we're we're not in the

2653
02:01:38,099 --> 02:01:41,340
routing area right so NMR so yeah kind

2654
02:01:41,340 --> 02:01:43,619
of not well suited for for this but

2655
02:01:43,619 --> 02:01:46,380
typically in the potential users

2656
02:01:46,380 --> 02:01:48,960
everybody who had a really good uh

2657
02:01:48,960 --> 02:01:51,540
routing idea got his own working group

2658
02:01:51,540 --> 02:01:54,000
right so if you work hardwood yeah I

2659
02:01:54,000 --> 02:01:55,679
know I know I know and then I have

2660
02:01:55,679 --> 02:01:58,440
worked for at least five years more

2661
02:01:58,440 --> 02:02:00,599
all right thank you very much

2662
02:02:00,599 --> 02:02:02,639
okay I think we've reached the end of

2663
02:02:02,639 --> 02:02:04,199
time uh Shane do you want to close it

2664
02:02:04,199 --> 02:02:06,179
down

2665
02:02:06,179 --> 02:02:07,619
yeah

2666
02:02:07,619 --> 02:02:10,980
um we finish our working group document

2667
02:02:10,980 --> 02:02:14,219
update we still don't have enough time

2668
02:02:14,219 --> 02:02:15,739
for the

2669
02:02:15,739 --> 02:02:18,360
non-working group documents including

2670
02:02:18,360 --> 02:02:23,540
two from Terrace whatever we

2671
02:02:23,540 --> 02:02:28,080
the first working place for IDF working

2672
02:02:28,080 --> 02:02:31,739
group is the main list please do invoke

2673
02:02:31,739 --> 02:02:34,679
the discussing email list

2674
02:02:34,679 --> 02:02:38,239
that's all from today thanks for you all

2675
02:02:38,239 --> 02:02:41,520
hopefully see you in Japan

2676
02:02:41,520 --> 02:02:44,239
thank you

2677
02:02:45,960 --> 02:02:48,679
bye-bye

