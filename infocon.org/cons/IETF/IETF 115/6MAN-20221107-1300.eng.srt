1
00:00:19,280 --> 00:00:20,779
[Music]

2
00:00:20,779 --> 00:00:25,279
unstable connection to the server

3
00:00:25,640 --> 00:00:29,060
I dropped

4
00:00:31,679 --> 00:00:34,100
okay

5
00:00:34,100 --> 00:00:38,239
hello good afternoon

6
00:00:39,059 --> 00:00:42,000
welcome come in

7
00:00:42,000 --> 00:00:43,800
fast and your seat belts put your phone

8
00:00:43,800 --> 00:00:46,699
to silence please

9
00:00:47,180 --> 00:00:50,820
appreciate it so welcome to six man

10
00:00:50,820 --> 00:00:52,739
working group

11
00:00:52,739 --> 00:00:55,559
I hope you're all in the right room

12
00:00:55,559 --> 00:00:57,480
where else could you be

13
00:00:57,480 --> 00:01:00,960
so we have busy agenda so I'm trying to

14
00:01:00,960 --> 00:01:03,120
start on time and be quick

15
00:01:03,120 --> 00:01:05,880
so we have more times more time for

16
00:01:05,880 --> 00:01:08,100
presentations

17
00:01:08,100 --> 00:01:11,100
first of all note well it's just Monday

18
00:01:11,100 --> 00:01:13,560
so I guess you have not seen it yet

19
00:01:13,560 --> 00:01:17,820
no okay take your time

20
00:01:17,820 --> 00:01:20,580
check it remind yourself about good

21
00:01:20,580 --> 00:01:22,080
behavior here

22
00:01:22,080 --> 00:01:25,280
be nice to people

23
00:01:27,119 --> 00:01:30,299
um well you read it right

24
00:01:30,299 --> 00:01:33,540
so housekeeping I have

25
00:01:33,540 --> 00:01:38,759
few minor requests please even if you

26
00:01:38,759 --> 00:01:40,920
are in the room try to use the inside

27
00:01:40,920 --> 00:01:43,500
tool to join the queue it's much easier

28
00:01:43,500 --> 00:01:45,360
for for the chairs

29
00:01:45,360 --> 00:01:47,820
to track the order of people in the

30
00:01:47,820 --> 00:01:48,720
queue

31
00:01:48,720 --> 00:01:51,360
if you are all in the virtual one

32
00:01:51,360 --> 00:01:53,520
because otherwise it's pretty hard to

33
00:01:53,520 --> 00:01:56,399
remember who was the first

34
00:01:56,399 --> 00:01:59,520
and after you asked your question uh

35
00:01:59,520 --> 00:02:01,920
made your comment please leave the queue

36
00:02:01,920 --> 00:02:05,700
when done and state your name so the

37
00:02:05,700 --> 00:02:10,340
minutes taker thank you Michael I could

38
00:02:10,340 --> 00:02:11,940
correctly

39
00:02:11,940 --> 00:02:16,280
record your what what's going on

40
00:02:16,500 --> 00:02:17,879
okay

41
00:02:17,879 --> 00:02:20,899
so e

42
00:02:21,360 --> 00:02:23,900
I

43
00:02:24,420 --> 00:02:26,839
okay

44
00:02:27,540 --> 00:02:30,540
yes and the remote participants please

45
00:02:30,540 --> 00:02:33,300
keep your audio and video off until

46
00:02:33,300 --> 00:02:35,459
you're actively speaking which means you

47
00:02:35,459 --> 00:02:37,500
is representing or you're as a short

48
00:02:37,500 --> 00:02:40,080
sense of you uh recommended to use a

49
00:02:40,080 --> 00:02:43,980
headset but well up to you

50
00:02:43,980 --> 00:02:47,700
so agenda as usual we're gonna start

51
00:02:47,700 --> 00:02:51,000
with working group documents we have 55

52
00:02:51,000 --> 00:02:53,760
minutes allocated for that so it's a

53
00:02:53,760 --> 00:02:55,800
four drafts

54
00:02:55,800 --> 00:02:58,920
including uh Trump's draft which has

55
00:02:58,920 --> 00:03:01,200
been revived

56
00:03:01,200 --> 00:03:03,720
some brought it back from there

57
00:03:03,720 --> 00:03:05,040
we discussed in Hope by whole

58
00:03:05,040 --> 00:03:08,340
processions and again extension headers

59
00:03:08,340 --> 00:03:12,300
I love this agenda uh SRC admitted

60
00:03:12,300 --> 00:03:13,680
identifier draft

61
00:03:13,680 --> 00:03:16,560
and Retail information in extension

62
00:03:16,560 --> 00:03:17,760
headers again

63
00:03:17,760 --> 00:03:19,560
then we have

64
00:03:19,560 --> 00:03:22,800
six individual drafts

65
00:03:22,800 --> 00:03:24,060
I'm not gonna

66
00:03:24,060 --> 00:03:26,940
read as a result out loud you know where

67
00:03:26,940 --> 00:03:28,980
to find that gender right

68
00:03:28,980 --> 00:03:32,400
we have two talks in time permitting

69
00:03:32,400 --> 00:03:36,300
category which means yeah if we will be

70
00:03:36,300 --> 00:03:39,000
very efficient today and have additional

71
00:03:39,000 --> 00:03:40,680
time we can discuss

72
00:03:40,680 --> 00:03:42,780
two drafts if not

73
00:03:42,780 --> 00:03:45,659
authors would like to get six-man

74
00:03:45,659 --> 00:03:48,659
attention on them so please check them

75
00:03:48,659 --> 00:03:50,720
out anyway

76
00:03:50,720 --> 00:03:54,659
uh what happened since Philadelphia

77
00:03:54,659 --> 00:03:58,019
oh we published an RFC congratulations

78
00:03:58,019 --> 00:04:01,440
on MTU Hope by hope option we are making

79
00:04:01,440 --> 00:04:03,360
good use of extension hiders finally

80
00:04:03,360 --> 00:04:05,400
right we're finding

81
00:04:05,400 --> 00:04:07,680
use cases for them

82
00:04:07,680 --> 00:04:09,799
uh

83
00:04:09,799 --> 00:04:13,920
application for alternate marking and

84
00:04:13,920 --> 00:04:16,680
now in RFC editor skill finally

85
00:04:16,680 --> 00:04:18,139
so

86
00:04:18,139 --> 00:04:22,160
should be published soon

87
00:04:22,280 --> 00:04:26,639
and your uh Zone identifiers

88
00:04:26,639 --> 00:04:29,520
draft it's going through another round

89
00:04:29,520 --> 00:04:33,720
of review we finished ATF last call uh

90
00:04:33,720 --> 00:04:36,660
got some good comments and now we have

91
00:04:36,660 --> 00:04:42,900
request URI review and uh w3c review

92
00:04:42,900 --> 00:04:45,960
to get more eyes on the draft so it's

93
00:04:45,960 --> 00:04:47,220
basically

94
00:04:47,220 --> 00:04:49,259
what is

95
00:04:49,259 --> 00:04:52,280
going on

96
00:04:52,280 --> 00:04:54,180
okay

97
00:04:54,180 --> 00:04:56,460
yeah sure again you're getting the same

98
00:04:56,460 --> 00:05:00,120
right so it's not just me

99
00:05:00,120 --> 00:05:01,880
okay

100
00:05:01,880 --> 00:05:04,740
and Sharia should be presenting his

101
00:05:04,740 --> 00:05:08,400
draft which kind of out of the working

102
00:05:08,400 --> 00:05:10,500
group last call but we need more

103
00:05:10,500 --> 00:05:13,380
cooperation with spring people so we'll

104
00:05:13,380 --> 00:05:15,900
talk about that later

105
00:05:15,900 --> 00:05:18,000
uh we have a

106
00:05:18,000 --> 00:05:20,100
working group docky

107
00:05:20,100 --> 00:05:26,060
okay sorry let me try another SSID

108
00:05:27,020 --> 00:05:30,740
V6 doesn't work right

109
00:05:32,580 --> 00:05:35,580
Ah that's called dog food

110
00:05:35,580 --> 00:05:39,660
I don't know 2 000 probably right V6 a

111
00:05:39,660 --> 00:05:43,620
pv6 is hard let's go shopping

112
00:05:43,620 --> 00:05:44,880
okay

113
00:05:44,880 --> 00:05:47,340
now

114
00:05:47,340 --> 00:05:48,780
where was I

115
00:05:48,780 --> 00:05:53,100
yeah so work in group drafts uh four of

116
00:05:53,100 --> 00:05:55,320
them are presented today and there is a

117
00:05:55,320 --> 00:05:57,120
one draft which is still a work in group

118
00:05:57,120 --> 00:05:59,820
draft but we have not heard anything

119
00:05:59,820 --> 00:06:02,940
from the authors no updates so we don't

120
00:06:02,940 --> 00:06:04,919
know what's going on there

121
00:06:04,919 --> 00:06:07,380
and the last thing

122
00:06:07,380 --> 00:06:11,340
as you might have noticed we are talking

123
00:06:11,340 --> 00:06:15,539
a lot about srv6 in this room as well

124
00:06:15,539 --> 00:06:18,000
so we started to think how much can we

125
00:06:18,000 --> 00:06:20,759
duplicate the work and how shall we

126
00:06:20,759 --> 00:06:23,460
share responsibility between two working

127
00:06:23,460 --> 00:06:25,860
groups here so just to let you know

128
00:06:25,860 --> 00:06:28,860
there is an ongoing discussion between

129
00:06:28,860 --> 00:06:33,479
a six-man and spring oh so it's not V6

130
00:06:33,479 --> 00:06:35,460
I dropped off and I was on dual stack

131
00:06:35,460 --> 00:06:36,660
SSID

132
00:06:36,660 --> 00:06:39,360
okay so we're talking about what shall

133
00:06:39,360 --> 00:06:42,259
we do because obviously

134
00:06:42,259 --> 00:06:44,039
srv6

135
00:06:44,039 --> 00:06:46,259
has something to do with IPv6 so

136
00:06:46,259 --> 00:06:48,600
sometimes six month involvement might be

137
00:06:48,600 --> 00:06:50,940
required however the question is at

138
00:06:50,940 --> 00:06:52,740
which stage and how much of that

139
00:06:52,740 --> 00:06:53,759
involvement

140
00:06:53,759 --> 00:06:56,280
so the current proposal which is still

141
00:06:56,280 --> 00:06:58,740
under discussion is that maybe

142
00:06:58,740 --> 00:07:01,860
spring should be responsible for srv6

143
00:07:01,860 --> 00:07:06,600
work and after a particular draft gets

144
00:07:06,600 --> 00:07:09,479
enough interest in Spring I use the word

145
00:07:09,479 --> 00:07:12,900
adopted but not adopted in ages Millions

146
00:07:12,900 --> 00:07:15,300
but just get enough interest and looks

147
00:07:15,300 --> 00:07:17,100
like a problem to solve

148
00:07:17,100 --> 00:07:20,160
and if six month review is required then

149
00:07:20,160 --> 00:07:23,580
spring chair could talk to us and this

150
00:07:23,580 --> 00:07:25,979
working group might take a look at the

151
00:07:25,979 --> 00:07:30,000
draft this would uh that would allow us

152
00:07:30,000 --> 00:07:32,280
to avoid the situation when we get in a

153
00:07:32,280 --> 00:07:33,440
lot of spring

154
00:07:33,440 --> 00:07:36,660
srv6 related document here without even

155
00:07:36,660 --> 00:07:38,940
knowing if the problem is worth solving

156
00:07:38,940 --> 00:07:40,919
from routing perspective

157
00:07:40,919 --> 00:07:44,340
so that's all I have any last minute

158
00:07:44,340 --> 00:07:48,719
comments agenda version complaints

159
00:07:49,500 --> 00:07:54,539
no good so the first presentation

160
00:07:54,539 --> 00:07:58,319
is Bob you know go there okay I'll share

161
00:07:58,319 --> 00:08:00,660
the slides

162
00:08:00,660 --> 00:08:03,860
strain the pink box

163
00:08:10,740 --> 00:08:12,500
I don't know do you want to sit down Bob

164
00:08:12,500 --> 00:08:16,560
oh hi I'm half of Bob and Corey I'm

165
00:08:16,560 --> 00:08:19,039
Corey

166
00:08:19,620 --> 00:08:23,699
um this talk let me get stable with my

167
00:08:23,699 --> 00:08:26,039
glasses this talk is about the hopper

168
00:08:26,039 --> 00:08:29,099
hop-up option processing draft like side

169
00:08:29,099 --> 00:08:31,139
please

170
00:08:31,139 --> 00:08:33,240
so we've

171
00:08:33,240 --> 00:08:36,260
um progressed this to RAV4

172
00:08:36,260 --> 00:08:38,940
there are some open issues we'll talk

173
00:08:38,940 --> 00:08:40,559
about

174
00:08:40,559 --> 00:08:43,200
with in the data tracker there's some

175
00:08:43,200 --> 00:08:45,899
data about hop by hop on internet paths

176
00:08:45,899 --> 00:08:48,240
and there's some comments on what we

177
00:08:48,240 --> 00:08:49,980
think are the next steps

178
00:08:49,980 --> 00:08:52,740
so first of all the changes changes from

179
00:08:52,740 --> 00:08:54,720
zero one to zero four

180
00:08:54,720 --> 00:08:58,200
um we wrote quite a bit of things and we

181
00:08:58,200 --> 00:09:01,860
didn't change the the overall goal but

182
00:09:01,860 --> 00:09:05,220
we provided much more Separation on

183
00:09:05,220 --> 00:09:06,540
the difference between hardware and

184
00:09:06,540 --> 00:09:08,640
software processing trying to avoid this

185
00:09:08,640 --> 00:09:12,240
magic fast path slow path term

186
00:09:12,240 --> 00:09:15,899
um which we think we now have done

187
00:09:15,899 --> 00:09:22,260
we cited the 2015 survey in RFC 7872

188
00:09:22,260 --> 00:09:26,160
um we've also cited the ietf V6 Ops hot

189
00:09:26,160 --> 00:09:27,959
by hop draft

190
00:09:27,959 --> 00:09:30,240
which clearly is related to this whole

191
00:09:30,240 --> 00:09:32,100
whole subject of how do you get hot by

192
00:09:32,100 --> 00:09:35,100
hop options through the internet

193
00:09:35,100 --> 00:09:37,680
and we added the security considerations

194
00:09:37,680 --> 00:09:40,580
text which we had pending for a while

195
00:09:40,580 --> 00:09:45,180
and I think that that now is ready for a

196
00:09:45,180 --> 00:09:46,800
comment for anybody it's now in the end

197
00:09:46,800 --> 00:09:48,300
of the draft in security considerations

198
00:09:48,300 --> 00:09:50,940
and there were various improvements by

199
00:09:50,940 --> 00:09:53,040
editors and various people who commented

200
00:09:53,040 --> 00:09:54,839
on the list thank you ever so much for

201
00:09:54,839 --> 00:09:57,120
doing so please do read it please do

202
00:09:57,120 --> 00:09:59,220
comment

203
00:09:59,220 --> 00:10:00,839
anything more about Bob

204
00:10:00,839 --> 00:10:03,120
nope okay

205
00:10:03,120 --> 00:10:04,200
um

206
00:10:04,200 --> 00:10:05,580
um

207
00:10:05,580 --> 00:10:07,500
yeah

208
00:10:07,500 --> 00:10:08,540
um

209
00:10:08,540 --> 00:10:11,540
the intent here is to get the hop by hop

210
00:10:11,540 --> 00:10:14,760
options in the hopper Hopper extension

211
00:10:14,760 --> 00:10:18,240
headers Deployable for people in the

212
00:10:18,240 --> 00:10:19,980
network so they are not filtered but

213
00:10:19,980 --> 00:10:21,959
actually passed in a way which will let

214
00:10:21,959 --> 00:10:23,580
the network evolve

215
00:10:23,580 --> 00:10:25,860
to make that happen we have to use some

216
00:10:25,860 --> 00:10:28,500
keywords like should a must

217
00:10:28,500 --> 00:10:30,660
and it turns out that even people who've

218
00:10:30,660 --> 00:10:32,940
written lots of drafts in the past

219
00:10:32,940 --> 00:10:35,040
find it hard to balance the use of sugar

220
00:10:35,040 --> 00:10:36,540
must when it comes to this particular

221
00:10:36,540 --> 00:10:38,640
draft however we've done this big

222
00:10:38,640 --> 00:10:41,100
rebalancing and I think we are really at

223
00:10:41,100 --> 00:10:42,600
the stage where the text

224
00:10:42,600 --> 00:10:46,380
we will propose today actually matches

225
00:10:46,380 --> 00:10:48,000
um something sensible so read the draft

226
00:10:48,000 --> 00:10:50,579
not this long list of should and must

227
00:10:50,579 --> 00:10:53,160
um well let me interject one minute uh

228
00:10:53,160 --> 00:10:55,500
with my chair head on so the IHF

229
00:10:55,500 --> 00:10:57,240
requirement is everyone must wear a mask

230
00:10:57,240 --> 00:10:59,640
in the room unless you're speaking so if

231
00:10:59,640 --> 00:11:01,500
you're not wearing a mask please do we

232
00:11:01,500 --> 00:11:03,959
have some up here

233
00:11:03,959 --> 00:11:06,380
so

234
00:11:07,140 --> 00:11:09,779
thank you

235
00:11:09,779 --> 00:11:13,260
uh it's a Dev teller

236
00:11:13,260 --> 00:11:16,440
yep I'm right here

237
00:11:16,440 --> 00:11:18,660
um Dave do you do you want us to talk a

238
00:11:18,660 --> 00:11:20,579
little bit further because this list is

239
00:11:20,579 --> 00:11:22,920
kind of awkward uh no my only question

240
00:11:22,920 --> 00:11:25,019
is is the wording up there literal or is

241
00:11:25,019 --> 00:11:28,279
that a summary of what's in the document

242
00:11:30,779 --> 00:11:32,519
um I think you should read the draft for

243
00:11:32,519 --> 00:11:34,320
the wording for the should some musts

244
00:11:34,320 --> 00:11:35,220
because

245
00:11:35,220 --> 00:11:37,700
um this

246
00:11:38,399 --> 00:11:40,800
yeah this is very context dependent um

247
00:11:40,800 --> 00:11:42,660
it appears very easy to say should a

248
00:11:42,660 --> 00:11:44,339
must but when you're talking about a

249
00:11:44,339 --> 00:11:47,220
draft work oh well I'm not doing this

250
00:11:47,220 --> 00:11:49,740
can I take the question later David uh

251
00:11:49,740 --> 00:11:51,120
sure I'll tell you what my question is

252
00:11:51,120 --> 00:11:52,560
but I'm fine for if you don't answer it

253
00:11:52,560 --> 00:11:54,959
or whatever which is just uh some of the

254
00:11:54,959 --> 00:11:57,420
wordings in there is

255
00:11:57,420 --> 00:12:00,240
um very vague like low and reasonable

256
00:12:00,240 --> 00:12:01,920
and those are things that one would

257
00:12:01,920 --> 00:12:03,360
normally never use in a statement with

258
00:12:03,360 --> 00:12:04,680
most or should because it's too

259
00:12:04,680 --> 00:12:07,099
ambiguous

260
00:12:09,200 --> 00:12:11,399
nobody knows what low is as to whether

261
00:12:11,399 --> 00:12:12,420
you can meet the shoot or not nobody

262
00:12:12,420 --> 00:12:13,800
knows what reasonable is who would never

263
00:12:13,800 --> 00:12:18,079
use those and I should or must thanks no

264
00:12:23,339 --> 00:12:25,079
yeah all right

265
00:12:25,079 --> 00:12:29,160
okay comment on the use of low okay got

266
00:12:29,160 --> 00:12:31,860
it understood thanks that helps

267
00:12:31,860 --> 00:12:34,640
um next slide then

268
00:12:36,300 --> 00:12:37,740
um we had

269
00:12:37,740 --> 00:12:41,399
used an issue tracker we kept careful

270
00:12:41,399 --> 00:12:44,940
um tracking of the various things

271
00:12:44,940 --> 00:12:46,800
um we believe that

272
00:12:46,800 --> 00:12:48,959
um when we came to process the last set

273
00:12:48,959 --> 00:12:52,680
of issues that only two were left

274
00:12:52,680 --> 00:12:55,019
and the fifth one is to try and get the

275
00:12:55,019 --> 00:12:57,480
Shoulder must balanced such that

276
00:12:57,480 --> 00:12:59,880
high-end routers might not support hot

277
00:12:59,880 --> 00:13:03,720
by hop options and the text has to

278
00:13:03,720 --> 00:13:05,940
somehow balance this out

279
00:13:05,940 --> 00:13:09,720
we're still expecting them to do so

280
00:13:09,720 --> 00:13:11,040
um when they're

281
00:13:11,040 --> 00:13:13,079
looking at these options

282
00:13:13,079 --> 00:13:16,920
the use of fast-pass slow path fast and

283
00:13:16,920 --> 00:13:19,800
low and high end whatever else are still

284
00:13:19,800 --> 00:13:22,860
things that we have to get right but I

285
00:13:22,860 --> 00:13:24,899
think they are words where we'll have

286
00:13:24,899 --> 00:13:26,700
Precision but they'll be hard to get

287
00:13:26,700 --> 00:13:28,380
exactly precise

288
00:13:28,380 --> 00:13:30,540
and we think both of these will be

289
00:13:30,540 --> 00:13:32,940
addressed in revision zero four so

290
00:13:32,940 --> 00:13:34,320
that's why I was encouraging people to

291
00:13:34,320 --> 00:13:36,540
read the draft

292
00:13:36,540 --> 00:13:40,339
okay let's go to the next slide

293
00:13:41,760 --> 00:13:43,800
do you want to grab a go Bob for a

294
00:13:43,800 --> 00:13:44,459
second

295
00:13:44,459 --> 00:13:47,060
I don't know

296
00:13:47,220 --> 00:13:50,720
what I I go okay and so what are the key

297
00:13:50,720 --> 00:13:53,720
differences in the eh limits draft

298
00:13:53,720 --> 00:13:57,839
there's a related draft and everybody

299
00:13:57,839 --> 00:14:00,600
knows that um by hop options are carried

300
00:14:00,600 --> 00:14:02,279
in the extension header

301
00:14:02,279 --> 00:14:04,800
the extension header is one of a number

302
00:14:04,800 --> 00:14:06,660
of extension headers that can be present

303
00:14:06,660 --> 00:14:09,540
and we now have an ietf six-man work

304
00:14:09,540 --> 00:14:13,320
item on the extension header limits

305
00:14:13,320 --> 00:14:15,540
limits give more guidance on how to

306
00:14:15,540 --> 00:14:16,620
handle

307
00:14:16,620 --> 00:14:18,600
more than one options

308
00:14:18,600 --> 00:14:21,240
the anode can process so clearly this is

309
00:14:21,240 --> 00:14:23,160
a slightly wider context than the hot by

310
00:14:23,160 --> 00:14:25,139
hop processing draft

311
00:14:25,139 --> 00:14:27,839
both drafts recommend using zero zero

312
00:14:27,839 --> 00:14:30,600
bits in the option type to become the

313
00:14:30,600 --> 00:14:34,019
default in other words not to be under

314
00:14:34,019 --> 00:14:36,899
the misunderstanding that every router

315
00:14:36,899 --> 00:14:39,120
on the path is going to look at all the

316
00:14:39,120 --> 00:14:41,220
hot by hop options and the first one who

317
00:14:41,220 --> 00:14:42,779
says Ah I don't like this is going to

318
00:14:42,779 --> 00:14:44,940
give you an icmp message

319
00:14:44,940 --> 00:14:47,579
what's going to happen is really the

320
00:14:47,579 --> 00:14:49,760
processing that happens when you set 0 0

321
00:14:49,760 --> 00:14:52,860
in the option type field and therefore

322
00:14:52,860 --> 00:14:55,079
we are going to propose

323
00:14:55,079 --> 00:14:59,220
in our draft and that these every option

324
00:14:59,220 --> 00:15:00,899
type is treated as if it were zero zero

325
00:15:00,899 --> 00:15:02,579
by default

326
00:15:02,579 --> 00:15:05,459
both drafts say that variable length

327
00:15:05,459 --> 00:15:07,560
options are difficult to process

328
00:15:07,560 --> 00:15:10,680
and this is true and the eh limits draft

329
00:15:10,680 --> 00:15:12,540
is much more specific and we could talk

330
00:15:12,540 --> 00:15:15,839
about those in the eh limits talk

331
00:15:15,839 --> 00:15:18,839
there's differences on terminology and

332
00:15:18,839 --> 00:15:22,399
we all know that fast slow full low high

333
00:15:22,399 --> 00:15:24,600
forwarding rates Etc are difficult to

334
00:15:24,600 --> 00:15:27,120
get right and probably it's going to be

335
00:15:27,120 --> 00:15:28,920
important to find words we can at least

336
00:15:28,920 --> 00:15:31,500
live with for both drafts that were

337
00:15:31,500 --> 00:15:33,920
consistent

338
00:15:34,740 --> 00:15:36,300
um one of the things we've suggested on

339
00:15:36,300 --> 00:15:37,860
the list was adding text to our out of

340
00:15:37,860 --> 00:15:40,079
order of processing and the reasons you

341
00:15:40,079 --> 00:15:42,000
want to avoid having an option header

342
00:15:42,000 --> 00:15:43,920
causing a packet to be delivered out of

343
00:15:43,920 --> 00:15:44,699
order

344
00:15:44,699 --> 00:15:46,620
we believe that's a very useful thing we

345
00:15:46,620 --> 00:15:49,980
propose to add that text to our draft

346
00:15:49,980 --> 00:15:53,040
copying um this that's been already in

347
00:15:53,040 --> 00:15:54,839
the eh limits

348
00:15:54,839 --> 00:15:57,800
so next slide

349
00:15:58,500 --> 00:16:00,959
right some recommendations let's get to

350
00:16:00,959 --> 00:16:03,540
the what we actually plan to do in the

351
00:16:03,540 --> 00:16:05,279
next edit cycle

352
00:16:05,279 --> 00:16:08,459
the hop by hop processing draft we think

353
00:16:08,459 --> 00:16:10,680
should Define the hot by hop processing

354
00:16:10,680 --> 00:16:11,940
element

355
00:16:11,940 --> 00:16:13,860
and should not look at the number of

356
00:16:13,860 --> 00:16:16,560
options in the hot by hop header

357
00:16:16,560 --> 00:16:19,860
so eh limits drafts should reference it

358
00:16:19,860 --> 00:16:21,959
we should reference the document that

359
00:16:21,959 --> 00:16:24,779
we're editing and we think they should

360
00:16:24,779 --> 00:16:26,820
cite the text but not Define how the hot

361
00:16:26,820 --> 00:16:29,339
by hop options are processed what we're

362
00:16:29,339 --> 00:16:31,800
trying to do is separate out

363
00:16:31,800 --> 00:16:33,720
description of the hot by hot processing

364
00:16:33,720 --> 00:16:35,760
which is done by nodes

365
00:16:35,760 --> 00:16:40,920
from The Wider eh recommendations

366
00:16:41,279 --> 00:16:43,380
some items we think should be brought

367
00:16:43,380 --> 00:16:45,899
into the hot by hot processing draft

368
00:16:45,899 --> 00:16:47,880
discussing how to order packets and

369
00:16:47,880 --> 00:16:50,519
everything to do with nodes everything

370
00:16:50,519 --> 00:16:52,980
to do with processing along the path not

371
00:16:52,980 --> 00:16:55,320
at the end point

372
00:16:55,320 --> 00:16:57,959
the eh limits drafts should continue to

373
00:16:57,959 --> 00:17:00,480
define the total eh limits and we don't

374
00:17:00,480 --> 00:17:02,639
propose to elaborate on that so I think

375
00:17:02,639 --> 00:17:04,140
the right place to do is to provide

376
00:17:04,140 --> 00:17:06,059
comments to the document that Tom

377
00:17:06,059 --> 00:17:08,099
Herbert's editing to describe the

378
00:17:08,099 --> 00:17:09,839
extension header limits rather than

379
00:17:09,839 --> 00:17:11,160
discuss them in the hot by hop

380
00:17:11,160 --> 00:17:13,319
processing draft

381
00:17:13,319 --> 00:17:15,980
so in this way we're hoping to

382
00:17:15,980 --> 00:17:18,179
disentangle these a little bit and let

383
00:17:18,179 --> 00:17:20,579
the hot by hot processing work continue

384
00:17:20,579 --> 00:17:23,099
with the rider remit of how the

385
00:17:23,099 --> 00:17:25,079
extension headers should be processed in

386
00:17:25,079 --> 00:17:28,260
general and set up by the endpoints

387
00:17:28,260 --> 00:17:31,040
next slide please

388
00:17:36,059 --> 00:17:39,660
other proposed changes are

389
00:17:39,660 --> 00:17:41,460
well I think I got there a little bit

390
00:17:41,460 --> 00:17:43,320
but I really the purpose of this slide

391
00:17:43,320 --> 00:17:47,480
is to bring down that text at the end

392
00:17:47,520 --> 00:17:50,340
this is the text that we have derived

393
00:17:50,340 --> 00:17:52,620
from that list discussion which we would

394
00:17:52,620 --> 00:17:55,080
like to put into the next version

395
00:17:55,080 --> 00:17:59,460
so nodes should process the hot by hop

396
00:17:59,460 --> 00:18:03,240
option header if they do not then a node

397
00:18:03,240 --> 00:18:07,039
must forward the packet normally

398
00:18:08,340 --> 00:18:11,640
the word normally but it's probably a

399
00:18:11,640 --> 00:18:14,760
good choice to suggest that you go

400
00:18:14,760 --> 00:18:16,320
through all these little steps that you

401
00:18:16,320 --> 00:18:18,780
do when you fold a packet because there

402
00:18:18,780 --> 00:18:19,980
are quite a lot of steps and we can't

403
00:18:19,980 --> 00:18:22,440
possibly enumerate them but nodes must

404
00:18:22,440 --> 00:18:25,260
do that normally when the hot by hop

405
00:18:25,260 --> 00:18:28,919
option header is not processed not drop

406
00:18:28,919 --> 00:18:31,740
when processing the HotBox option header

407
00:18:31,740 --> 00:18:35,220
nodes must process the first hot by hop

408
00:18:35,220 --> 00:18:39,419
option our nodes May process more

409
00:18:39,419 --> 00:18:42,299
and we weren't going to expand that and

410
00:18:42,299 --> 00:18:44,940
leave Tom Herbert to make more

411
00:18:44,940 --> 00:18:47,280
um overall overarching and discussions

412
00:18:47,280 --> 00:18:49,320
of how big an extension header you might

413
00:18:49,320 --> 00:18:51,960
like so this was our proposed resolution

414
00:18:51,960 --> 00:18:54,000
of

415
00:18:54,000 --> 00:18:55,620
separating these two drafts and coming

416
00:18:55,620 --> 00:18:58,080
up with something which satisfies we

417
00:18:58,080 --> 00:19:01,280
hope the discussion on the list

418
00:19:02,840 --> 00:19:05,820
does anyone wish to comment on this

419
00:19:05,820 --> 00:19:08,220
because they think it's

420
00:19:08,220 --> 00:19:12,260
something useful to comment upon

421
00:19:12,299 --> 00:19:16,039
right um next slide them

422
00:19:17,539 --> 00:19:21,059
oh yeah good I I hear Ron's in the kid

423
00:19:21,059 --> 00:19:24,780
could somebody represent Ron hello gory

424
00:19:24,780 --> 00:19:27,780
hello can you hear me

425
00:19:27,780 --> 00:19:30,600
yeah we can hear you it's good to hear

426
00:19:30,600 --> 00:19:31,380
you

427
00:19:31,380 --> 00:19:33,660
good to hear you too

428
00:19:33,660 --> 00:19:34,280
um

429
00:19:34,280 --> 00:19:37,679
reading through your draft and

430
00:19:37,679 --> 00:19:40,380
um Tom Herbert's draft

431
00:19:40,380 --> 00:19:42,600
I read through them both assumed that

432
00:19:42,600 --> 00:19:47,039
they would both become rfcs and then

433
00:19:47,039 --> 00:19:49,440
said to myself okay

434
00:19:49,440 --> 00:19:51,660
if we had known all this stuff five

435
00:19:51,660 --> 00:19:54,900
years ago when we wrote 8200

436
00:19:54,900 --> 00:19:57,720
the section on options and the section

437
00:19:57,720 --> 00:20:00,240
on the Hop IHOP extension header might

438
00:20:00,240 --> 00:20:01,980
be different

439
00:20:01,980 --> 00:20:05,340
but it was a bit of a task to figure out

440
00:20:05,340 --> 00:20:06,539
um

441
00:20:06,539 --> 00:20:08,480
you know how they might be different

442
00:20:08,480 --> 00:20:11,460
would it be a good idea to merge your

443
00:20:11,460 --> 00:20:13,679
draft and towns

444
00:20:13,679 --> 00:20:15,360
and

445
00:20:15,360 --> 00:20:18,480
um in that draft just put replacements

446
00:20:18,480 --> 00:20:21,720
for that section on um options in the

447
00:20:21,720 --> 00:20:25,700
section on hop by hop extension headers

448
00:20:26,280 --> 00:20:28,140
so the synthesis would be done by the

449
00:20:28,140 --> 00:20:30,240
authors as opposed by each individual

450
00:20:30,240 --> 00:20:32,720
reader

451
00:20:33,660 --> 00:20:37,740
possibly I I think in the as as Tom's

452
00:20:37,740 --> 00:20:39,179
being starting to formulate his

453
00:20:39,179 --> 00:20:41,340
extension headers

454
00:20:41,340 --> 00:20:43,740
um ID

455
00:20:43,740 --> 00:20:44,480
um

456
00:20:44,480 --> 00:20:46,980
he's maybe created quite a lot novel

457
00:20:46,980 --> 00:20:49,200
overlap which we didn't imagine would be

458
00:20:49,200 --> 00:20:53,220
there and part of the talk today is

459
00:20:53,220 --> 00:20:55,260
trying to pull those apart so they are

460
00:20:55,260 --> 00:20:56,700
not too different

461
00:20:56,700 --> 00:20:58,799
documents talking about the same thing

462
00:20:58,799 --> 00:21:00,960
but they talk about very specific topics

463
00:21:00,960 --> 00:21:03,960
so I think you could have two

464
00:21:03,960 --> 00:21:05,460
documents

465
00:21:05,460 --> 00:21:08,280
that exist that talk about specifically

466
00:21:08,280 --> 00:21:10,320
just the hot by hop options and have

467
00:21:10,320 --> 00:21:11,940
everything that's normative about hot by

468
00:21:11,940 --> 00:21:14,039
hop options and one that talks about

469
00:21:14,039 --> 00:21:15,720
extension header construction and

470
00:21:15,720 --> 00:21:19,020
handling and so I think these might be

471
00:21:19,020 --> 00:21:20,940
okay in separate documents perhaps

472
00:21:20,940 --> 00:21:23,039
because they probably have different

473
00:21:23,039 --> 00:21:24,320
readers

474
00:21:24,320 --> 00:21:27,179
the extension headers part probably

475
00:21:27,179 --> 00:21:29,640
mainly refers to people with Nicks and

476
00:21:29,640 --> 00:21:31,080
then stacks and people are implementing

477
00:21:31,080 --> 00:21:32,460
IPv6

478
00:21:32,460 --> 00:21:33,960
as opposed to people who are doing

479
00:21:33,960 --> 00:21:36,240
routers or routers who maybe are more

480
00:21:36,240 --> 00:21:37,880
interested in the hot by hot processing

481
00:21:37,880 --> 00:21:40,080
so I don't know

482
00:21:40,080 --> 00:21:42,840
if that answers your question because I

483
00:21:42,840 --> 00:21:44,580
think clearly what you propose could

484
00:21:44,580 --> 00:21:46,020
also be done

485
00:21:46,020 --> 00:21:49,980
so we could do what you say

486
00:21:49,980 --> 00:21:52,440
or we could try and keep these two

487
00:21:52,440 --> 00:21:56,460
documents as two separate documents

488
00:21:56,460 --> 00:21:59,220
um Bob do you have another comment on

489
00:21:59,220 --> 00:22:00,539
that one

490
00:22:00,539 --> 00:22:03,480
yeah I'm pretty much what you said I I

491
00:22:03,480 --> 00:22:05,940
think for now I think they're better to

492
00:22:05,940 --> 00:22:07,080
be separate because I think we're

493
00:22:07,080 --> 00:22:08,880
approaching this in a different way but

494
00:22:08,880 --> 00:22:11,340
they clearly need to be consistent and

495
00:22:11,340 --> 00:22:13,500
and they need to refer to each other

496
00:22:13,500 --> 00:22:15,980
appropriately

497
00:22:15,980 --> 00:22:18,360
and I guess the second part of your

498
00:22:18,360 --> 00:22:20,700
question if I understood it was and

499
00:22:20,700 --> 00:22:22,799
should we try and do normative changes

500
00:22:22,799 --> 00:22:25,679
to the h200 by saying this block of text

501
00:22:25,679 --> 00:22:29,539
is updated by this block of text

502
00:22:30,000 --> 00:22:33,559
is that what you're asking Ron

503
00:22:36,360 --> 00:22:38,280
okay other people in the room think

504
00:22:38,280 --> 00:22:40,200
think Ron did ask that so Ron can come

505
00:22:40,200 --> 00:22:42,000
back if he needs to

506
00:22:42,000 --> 00:22:44,880
um yeah the extension header draft does

507
00:22:44,880 --> 00:22:47,220
talk about here's a section which talks

508
00:22:47,220 --> 00:22:50,460
about changes to 8200 so it's pretty

509
00:22:50,460 --> 00:22:51,960
close to that

510
00:22:51,960 --> 00:22:55,620
okay the changing the block of 8200 once

511
00:22:55,620 --> 00:22:57,780
with the intent of both

512
00:22:57,780 --> 00:22:58,320
um

513
00:22:58,320 --> 00:23:01,860
drafts would make would

514
00:23:01,860 --> 00:23:03,299
put the

515
00:23:03,299 --> 00:23:05,820
task of synthesis on the authors as

516
00:23:05,820 --> 00:23:08,100
opposed to having each

517
00:23:08,100 --> 00:23:10,679
um reader synthesize the tool and figure

518
00:23:10,679 --> 00:23:13,919
out what 8200 would look like had we

519
00:23:13,919 --> 00:23:16,500
known all this stuff five years ago I'd

520
00:23:16,500 --> 00:23:18,179
also like to comment that there are some

521
00:23:18,179 --> 00:23:20,820
folks like plms from router companies

522
00:23:20,820 --> 00:23:24,299
who need to read and Implement both so

523
00:23:24,299 --> 00:23:26,100
it makes life a lot easier for the

524
00:23:26,100 --> 00:23:27,840
reader

525
00:23:27,840 --> 00:23:28,919
okay

526
00:23:28,919 --> 00:23:31,740
understood we will we will think about

527
00:23:31,740 --> 00:23:32,760
this

528
00:23:32,760 --> 00:23:35,460
Suresh yeah thank you thanks Laurie

529
00:23:35,460 --> 00:23:36,840
um so one of the things you throw up as

530
00:23:36,840 --> 00:23:39,240
like uh the first option

531
00:23:39,240 --> 00:23:41,460
um you need to look at it right so I

532
00:23:41,460 --> 00:23:43,440
just want to point out like nothing

533
00:23:43,440 --> 00:23:45,780
against or for it right but it's a

534
00:23:45,780 --> 00:23:47,880
certain change in how we treat Hub IHOP

535
00:23:47,880 --> 00:23:49,440
options because you they were never

536
00:23:49,440 --> 00:23:51,600
treated us ordered and I know like we

537
00:23:51,600 --> 00:23:52,679
talked about this quite a bit in

538
00:23:52,679 --> 00:23:54,000
connects right like we were throwing

539
00:23:54,000 --> 00:23:55,799
this as the first option there's no

540
00:23:55,799 --> 00:23:57,780
special thing for first option right so

541
00:23:57,780 --> 00:24:00,720
I think I just want us to be cognizant

542
00:24:00,720 --> 00:24:02,159
that we are actually making this change

543
00:24:02,159 --> 00:24:03,539
that like you know first option is

544
00:24:03,539 --> 00:24:05,400
somehow special and the second order

545
00:24:05,400 --> 00:24:06,900
effect is like there's going to be

546
00:24:06,900 --> 00:24:08,220
options that are going to be jogging to

547
00:24:08,220 --> 00:24:10,440
be the first option right I just want to

548
00:24:10,440 --> 00:24:11,820
make sure that it's noted somewhere

549
00:24:11,820 --> 00:24:14,039
because like I think this becomes like a

550
00:24:14,039 --> 00:24:16,140
privileged place for an option to be so

551
00:24:16,140 --> 00:24:17,580
I just wanted to know that somewhere

552
00:24:17,580 --> 00:24:21,539
yeah and I think that's fair enough I

553
00:24:21,539 --> 00:24:23,880
think also that means that

554
00:24:23,880 --> 00:24:26,520
um putting the option on every packet

555
00:24:26,520 --> 00:24:28,440
may not be something that you should now

556
00:24:28,440 --> 00:24:30,659
do because um that means you've kind of

557
00:24:30,659 --> 00:24:33,120
trumped everyone else exactly there is

558
00:24:33,120 --> 00:24:35,520
like some text in the Conex V6 action

559
00:24:35,520 --> 00:24:37,679
draft like media and I did like so maybe

560
00:24:37,679 --> 00:24:39,299
we can try to at least in an older

561
00:24:39,299 --> 00:24:41,100
version so I can actually try to dig up

562
00:24:41,100 --> 00:24:42,900
something to give to you right because

563
00:24:42,900 --> 00:24:44,820
that is really a worry something thanks

564
00:24:44,820 --> 00:24:48,379
so I'll be really useful thank you

565
00:24:49,320 --> 00:24:50,240
okay

566
00:24:50,240 --> 00:24:53,880
I wonder uh otherwise this additional

567
00:24:53,880 --> 00:24:56,820
information in fact we when we deployed

568
00:24:56,820 --> 00:24:59,280
this the IPv6 the enhance the

569
00:24:59,280 --> 00:25:03,299
Innovations such as the srv6 and IPv6

570
00:25:03,299 --> 00:25:06,000
based on network slicing in the existing

571
00:25:06,000 --> 00:25:09,179
Network so that we also encounter this

572
00:25:09,179 --> 00:25:12,299
issues about the process of this hobby

573
00:25:12,299 --> 00:25:16,559
header and the definition of header and

574
00:25:16,559 --> 00:25:19,380
also the process in the uh processing

575
00:25:19,380 --> 00:25:22,620
these options in these headers so in

576
00:25:22,620 --> 00:25:24,900
order to solve these issues we propose

577
00:25:24,900 --> 00:25:27,419
the one draft that is to use this

578
00:25:27,419 --> 00:25:30,720
protocol extensions to the vertex this

579
00:25:30,720 --> 00:25:34,200
information about the capability of the

580
00:25:34,200 --> 00:25:37,380
forwarding plane to process this IPv6

581
00:25:37,380 --> 00:25:41,640
using header and options so I later I

582
00:25:41,640 --> 00:25:44,039
will send this one for the uh for the

583
00:25:44,039 --> 00:25:46,559
comments I also would like to align this

584
00:25:46,559 --> 00:25:48,840
drought with this some of this in

585
00:25:48,840 --> 00:25:51,299
capability and these procedures of this

586
00:25:51,299 --> 00:25:54,299
draft okay

587
00:25:54,299 --> 00:25:56,039
please please do send it to the list

588
00:25:56,039 --> 00:25:58,260
yeah and we will we will discuss this

589
00:25:58,260 --> 00:26:02,000
okay that'll be useful

590
00:26:02,580 --> 00:26:05,400
we should yeah and that's like

591
00:26:05,400 --> 00:26:09,080
and next slide

592
00:26:09,299 --> 00:26:13,620
so this is a two slide picture from an

593
00:26:13,620 --> 00:26:16,740
iepg talk which is in the proceedings so

594
00:26:16,740 --> 00:26:20,159
what's done by Anna uh Aberdeen and

595
00:26:20,159 --> 00:26:22,799
basically it's doing the exploration of

596
00:26:22,799 --> 00:26:24,720
which packets might get through the

597
00:26:24,720 --> 00:26:26,700
internet if they had extension headers

598
00:26:26,700 --> 00:26:29,400
applied to them is there a limit on size

599
00:26:29,400 --> 00:26:31,500
because um people talked about the size

600
00:26:31,500 --> 00:26:33,799
of packets and mattering

601
00:26:33,799 --> 00:26:38,760
and we have traversal rates for

602
00:26:38,760 --> 00:26:41,880
extension headers of different sizes

603
00:26:41,880 --> 00:26:45,919
and we have hot by hop in black and

604
00:26:45,919 --> 00:26:49,919
destination options in blue and you can

605
00:26:49,919 --> 00:26:51,659
see the traversal rate for Destination

606
00:26:51,659 --> 00:26:53,640
options on the tests we did across the

607
00:26:53,640 --> 00:26:55,140
internet if you want more look at the

608
00:26:55,140 --> 00:26:58,559
iepg talk this is just a teaser where

609
00:26:58,559 --> 00:27:00,000
there's a lot more data from Anna and

610
00:27:00,000 --> 00:27:01,740
other people

611
00:27:01,740 --> 00:27:04,440
um but basically gestation options get

612
00:27:04,440 --> 00:27:06,120
through a lot more than hot by hop

613
00:27:06,120 --> 00:27:08,039
options not surprising hot by hop

614
00:27:08,039 --> 00:27:10,559
options do get through

615
00:27:10,559 --> 00:27:14,340
this difference between TCP and UDP

616
00:27:14,340 --> 00:27:17,820
if you want to tell us why that would be

617
00:27:17,820 --> 00:27:20,640
fun and not necessarily the mic but do

618
00:27:20,640 --> 00:27:22,380
catch up with us and tell us what what

619
00:27:22,380 --> 00:27:25,260
you think about the data but basically

620
00:27:25,260 --> 00:27:28,559
um extension headers with hop options

621
00:27:28,559 --> 00:27:31,559
which come to a 40 byte extension header

622
00:27:31,559 --> 00:27:34,200
appear to get through just as what just

623
00:27:34,200 --> 00:27:36,900
as well as any other size so we can

624
00:27:36,900 --> 00:27:38,820
easily think that one header will get

625
00:27:38,820 --> 00:27:41,700
through reasonably if you're going to

626
00:27:41,700 --> 00:27:43,860
formulate a big header chain then the

627
00:27:43,860 --> 00:27:45,299
probability of successful transmission

628
00:27:45,299 --> 00:27:47,039
reduces

629
00:27:47,039 --> 00:27:50,400
uh why 40 bytes I don't know if you make

630
00:27:50,400 --> 00:27:53,039
routers or routers or

631
00:27:53,039 --> 00:27:55,140
firewalls or whatever and know where

632
00:27:55,140 --> 00:27:57,120
this number comes from tell us um it

633
00:27:57,120 --> 00:27:58,980
helps to be the same size as an ipv4

634
00:27:58,980 --> 00:28:01,020
option header so maybe people think

635
00:28:01,020 --> 00:28:04,559
that's okay what part of an IP ATM cell

636
00:28:04,559 --> 00:28:06,659
or whatever I don't know but 40 bytes is

637
00:28:06,659 --> 00:28:08,100
okay so

638
00:28:08,100 --> 00:28:09,360
um everything we've said in our draft

639
00:28:09,360 --> 00:28:11,279
appears to be good for this next slide

640
00:28:11,279 --> 00:28:13,500
then

641
00:28:13,500 --> 00:28:15,960
then the question is where on the path

642
00:28:15,960 --> 00:28:18,140
do things get dropped

643
00:28:18,140 --> 00:28:22,200
and a lot of the packets that carry out

644
00:28:22,200 --> 00:28:23,700
extension headers

645
00:28:23,700 --> 00:28:26,220
um get dropped pretty quickly as they're

646
00:28:26,220 --> 00:28:29,880
sent from a home or ISP

647
00:28:29,880 --> 00:28:32,659
um Network as they get to the first as

648
00:28:32,659 --> 00:28:35,159
most of the drops that occur will

649
00:28:35,159 --> 00:28:37,200
actually have occurred

650
00:28:37,200 --> 00:28:39,539
um maybe on the first top second hop so

651
00:28:39,539 --> 00:28:42,179
the packets don't make very far into the

652
00:28:42,179 --> 00:28:45,059
internet when they don't go

653
00:28:45,059 --> 00:28:47,700
um so those packets that are dropped are

654
00:28:47,700 --> 00:28:49,500
dropped very quickly probably by

655
00:28:49,500 --> 00:28:51,299
policies I would imagine

656
00:28:51,299 --> 00:28:53,279
which is probably the reason why we're

657
00:28:53,279 --> 00:28:55,559
writing this draft to say please don't

658
00:28:55,559 --> 00:28:58,520
have this policy

659
00:28:58,799 --> 00:29:01,200
um much more data in the big talk I'm

660
00:29:01,200 --> 00:29:04,500
conscious of time but nalini is asking a

661
00:29:04,500 --> 00:29:07,080
question and uh

662
00:29:07,080 --> 00:29:08,820
is definitely the right person to ask a

663
00:29:08,820 --> 00:29:10,260
question

664
00:29:10,260 --> 00:29:12,419
which you can reach the mic that's right

665
00:29:12,419 --> 00:29:14,940
that's right hi Melanie Elkins I'll just

666
00:29:14,940 --> 00:29:18,600
I'll keep this really short but but our

667
00:29:18,600 --> 00:29:20,640
um you know while I understand we're not

668
00:29:20,640 --> 00:29:22,919
the protocol police

669
00:29:22,919 --> 00:29:24,140
um

670
00:29:24,140 --> 00:29:27,360
there it seems to me from our testing

671
00:29:27,360 --> 00:29:30,480
there's a few organization a handful of

672
00:29:30,480 --> 00:29:33,360
organizations in particular if they

673
00:29:33,360 --> 00:29:36,360
would change some of their behavior we

674
00:29:36,360 --> 00:29:39,240
might see uh you know the 80 20 we might

675
00:29:39,240 --> 00:29:41,340
see a great deal of improvement so thank

676
00:29:41,340 --> 00:29:44,299
you for all your testing

677
00:29:44,820 --> 00:29:47,039
and that's why we had to talk at iepg

678
00:29:47,039 --> 00:29:48,179
that you might want to look at

679
00:29:48,179 --> 00:29:50,940
particularly if you run IPv6 networks

680
00:29:50,940 --> 00:29:54,059
which you should next slide please

681
00:29:54,059 --> 00:29:55,620
um these are things we learned some

682
00:29:55,620 --> 00:29:57,840
parts do support by hop options it's not

683
00:29:57,840 --> 00:30:00,600
the game's not over there's a chance of

684
00:30:00,600 --> 00:30:03,659
using this and you have to choose a path

685
00:30:03,659 --> 00:30:05,700
try it and see if it works

686
00:30:05,700 --> 00:30:08,279
um ready currently drop packets with a

687
00:30:08,279 --> 00:30:10,200
hot hop hop extension header and that

688
00:30:10,200 --> 00:30:12,179
happens very early and some people are

689
00:30:12,179 --> 00:30:14,100
much more prevalent at doing this than

690
00:30:14,100 --> 00:30:16,500
others limiting the size of accession

691
00:30:16,500 --> 00:30:19,100
header did improve traversal so one

692
00:30:19,100 --> 00:30:21,539
expecting one hot by hop option to get

693
00:30:21,539 --> 00:30:24,240
through is much better than just saying

694
00:30:24,240 --> 00:30:26,340
an arbitrary number as we did in the

695
00:30:26,340 --> 00:30:29,520
original IPv6 spec so we think the

696
00:30:29,520 --> 00:30:31,380
recommendations we've made in the hot by

697
00:30:31,380 --> 00:30:34,620
hot processing draft would seem to help

698
00:30:34,620 --> 00:30:38,299
and final slide

699
00:30:39,799 --> 00:30:41,399
we

700
00:30:41,399 --> 00:30:44,760
have always to get the language right we

701
00:30:44,760 --> 00:30:46,200
think the current drafts much better

702
00:30:46,200 --> 00:30:49,559
we're about to push a new version

703
00:30:49,559 --> 00:30:51,779
um there's work to align this with the

704
00:30:51,779 --> 00:30:54,899
eh limit draft

705
00:30:54,899 --> 00:30:57,000
um whichever way we go we have to get

706
00:30:57,000 --> 00:30:59,100
the language correct we have to get the

707
00:30:59,100 --> 00:31:01,200
dependency correct we believe the

708
00:31:01,200 --> 00:31:02,520
dependency

709
00:31:02,520 --> 00:31:04,500
could follow what we've outlined in this

710
00:31:04,500 --> 00:31:06,299
talk um we listened to Tom's talk

711
00:31:06,299 --> 00:31:08,700
afterwards and then discuss with him

712
00:31:08,700 --> 00:31:10,440
we think this could go to working group

713
00:31:10,440 --> 00:31:13,520
last call soon

714
00:31:13,860 --> 00:31:17,700
I am personally um as one of the editors

715
00:31:17,700 --> 00:31:20,340
not sure that we need to wait for the eh

716
00:31:20,340 --> 00:31:22,740
limits draft to complete before this is

717
00:31:22,740 --> 00:31:26,100
working group last called I think we can

718
00:31:26,100 --> 00:31:29,580
with a reasonably high probability

719
00:31:29,580 --> 00:31:32,220
um separate the two and complete this

720
00:31:32,220 --> 00:31:34,200
first item

721
00:31:34,200 --> 00:31:35,820
of course if we go for runs combined

722
00:31:35,820 --> 00:31:37,080
item then we wait for them both to

723
00:31:37,080 --> 00:31:39,120
complete at the same time so I'm hoping

724
00:31:39,120 --> 00:31:41,340
to go for working group must call

725
00:31:41,340 --> 00:31:44,399
probably in one ATF cycle if we can

726
00:31:44,399 --> 00:31:47,899
and that's my presentation

727
00:31:50,840 --> 00:31:53,820
I guess here we can we can cast a last

728
00:31:53,820 --> 00:31:56,760
call situation after we are because we

729
00:31:56,760 --> 00:32:03,620
just slightly Ryan uh late okay so Tom

730
00:32:04,740 --> 00:32:06,799
yes can you hear me

731
00:32:06,799 --> 00:32:09,840
yes we do I'm sharing the slides just a

732
00:32:09,840 --> 00:32:10,679
second

733
00:32:10,679 --> 00:32:12,919
okay

734
00:32:15,200 --> 00:32:19,559
go ahead can you see them yes uh so my

735
00:32:19,559 --> 00:32:22,879
name is Tom Herbert and

736
00:32:23,520 --> 00:32:26,039
I'm going to talk about uh the other

737
00:32:26,039 --> 00:32:27,059
draft

738
00:32:27,059 --> 00:32:29,279
um about extension headers uh next slide

739
00:32:29,279 --> 00:32:31,399
please

740
00:32:32,220 --> 00:32:35,940
so status uh is working group item

741
00:32:35,940 --> 00:32:38,880
um there's been some less discussion

742
00:32:38,880 --> 00:32:40,799
um mostly inspired by Brian Carpenter

743
00:32:40,799 --> 00:32:42,840
I'll touch a little bit about that

744
00:32:42,840 --> 00:32:46,320
uh similar to the hop by hop processing

745
00:32:46,320 --> 00:32:47,940
um we think this is

746
00:32:47,940 --> 00:32:50,220
ready to go to working group last

747
00:32:50,220 --> 00:32:51,960
Callison

748
00:32:51,960 --> 00:32:54,720
um would like to see more

749
00:32:54,720 --> 00:32:57,360
activity on the list so please read and

750
00:32:57,360 --> 00:32:58,679
provide feedback

751
00:32:58,679 --> 00:33:01,399
next slide

752
00:33:02,880 --> 00:33:05,760
so uh we have version one uh the changes

753
00:33:05,760 --> 00:33:09,059
were relatively minor uh there was one

754
00:33:09,059 --> 00:33:12,000
changed in the padding uh previously it

755
00:33:12,000 --> 00:33:13,620
said no more than eight bytes but really

756
00:33:13,620 --> 00:33:15,720
the maximum amount of padding should be

757
00:33:15,720 --> 00:33:18,659
seven bytes that guarantees that we can

758
00:33:18,659 --> 00:33:23,880
align any option to a fine alignment

759
00:33:23,880 --> 00:33:26,880
um we need to correctly reference rc8504

760
00:33:26,880 --> 00:33:29,880
instead RC 8200

761
00:33:29,880 --> 00:33:32,399
the default limits intermediate

762
00:33:32,399 --> 00:33:34,980
destination off for processing options

763
00:33:34,980 --> 00:33:39,260
is 16. uh so 16 is based on

764
00:33:39,260 --> 00:33:41,820
pretty much all the nodes where we

765
00:33:41,820 --> 00:33:43,019
wanted a

766
00:33:43,019 --> 00:33:46,860
on receive we need to have a default

767
00:33:46,860 --> 00:33:49,140
limit to how many options they really

768
00:33:49,140 --> 00:33:51,960
should process and the 16 is actually

769
00:33:51,960 --> 00:33:54,620
both the padding and non-padding options

770
00:33:54,620 --> 00:33:57,539
and other than that there were a number

771
00:33:57,539 --> 00:34:00,000
of edits in the document

772
00:34:00,000 --> 00:34:03,019
next slide please

773
00:34:03,419 --> 00:34:07,260
so I did the comparison with

774
00:34:07,260 --> 00:34:08,300
um

775
00:34:08,300 --> 00:34:10,800
processing Corey went over a lot of this

776
00:34:10,800 --> 00:34:13,619
so I'll maybe give the perspective from

777
00:34:13,619 --> 00:34:16,139
the eh limits draft

778
00:34:16,139 --> 00:34:18,839
so first of all I think the focus is

779
00:34:18,839 --> 00:34:21,659
different and for that reason I do agree

780
00:34:21,659 --> 00:34:23,879
that these should be separate

781
00:34:23,879 --> 00:34:26,760
drafts the hubby hop processing really

782
00:34:26,760 --> 00:34:27,899
is about

783
00:34:27,899 --> 00:34:30,859
processing The Hop I hop options and and

784
00:34:30,859 --> 00:34:34,020
that seems to be guidance directed

785
00:34:34,020 --> 00:34:37,500
towards implementers or routing vendors

786
00:34:37,500 --> 00:34:40,199
in eh limits it really is about

787
00:34:40,199 --> 00:34:42,239
requirements

788
00:34:42,239 --> 00:34:44,839
we want to provide specific numbers

789
00:34:44,839 --> 00:34:48,780
specific limits most of the draft is

790
00:34:48,780 --> 00:34:50,520
actually that it's a very specific

791
00:34:50,520 --> 00:34:53,399
requirements it goes down into some of

792
00:34:53,399 --> 00:34:55,020
the details of extension header

793
00:34:55,020 --> 00:34:57,839
processing in particular for Hoppa help

794
00:34:57,839 --> 00:35:00,859
options and destination options it

795
00:35:00,859 --> 00:35:03,599
enumerates all the limits about padding

796
00:35:03,599 --> 00:35:06,960
number of options the possibility to set

797
00:35:06,960 --> 00:35:08,640
length per option

798
00:35:08,640 --> 00:35:11,640
so it's very much on the on the side of

799
00:35:11,640 --> 00:35:13,320
what are the limits

800
00:35:13,320 --> 00:35:15,240
uh what we don't do when the age limits

801
00:35:15,240 --> 00:35:18,060
draft though for instance is discuss the

802
00:35:18,060 --> 00:35:20,280
Fastpass flow path split

803
00:35:20,280 --> 00:35:22,160
or any

804
00:35:22,160 --> 00:35:24,900
guidance around actually implementing

805
00:35:24,900 --> 00:35:27,359
this also I think there's less of a

806
00:35:27,359 --> 00:35:31,800
distinct we distinguish less between

807
00:35:31,800 --> 00:35:34,380
high performance routers and other

808
00:35:34,380 --> 00:35:37,200
devices what we do distinguish though is

809
00:35:37,200 --> 00:35:41,160
there's a requirement specific to end

810
00:35:41,160 --> 00:35:43,320
devices host devices by sending and

811
00:35:43,320 --> 00:35:46,500
receiving extension headers as well as

812
00:35:46,500 --> 00:35:48,480
intermediate devices how they process

813
00:35:48,480 --> 00:35:50,339
that

814
00:35:50,339 --> 00:35:52,500
um and also for Destination options we

815
00:35:52,500 --> 00:35:53,940
have a concept of intermediate

816
00:35:53,940 --> 00:35:55,320
destinations

817
00:35:55,320 --> 00:35:58,020
so the requirements are based on the

818
00:35:58,020 --> 00:36:00,119
role in the

819
00:36:00,119 --> 00:36:03,660
network not necessarily the the

820
00:36:03,660 --> 00:36:07,320
performance or the goals of the rule

821
00:36:07,320 --> 00:36:09,960
so I think the requirement there is from

822
00:36:09,960 --> 00:36:12,480
our side is keep them as separate

823
00:36:12,480 --> 00:36:14,520
documents

824
00:36:14,520 --> 00:36:17,820
I do think that the limits are important

825
00:36:17,820 --> 00:36:19,619
such that

826
00:36:19,619 --> 00:36:21,960
the hopper hop options could reference

827
00:36:21,960 --> 00:36:25,260
the eh limits document

828
00:36:25,260 --> 00:36:27,300
so the second difference

829
00:36:27,300 --> 00:36:28,560
um that's where we talked about nodes

830
00:36:28,560 --> 00:36:30,780
must process the first hop-by-hop option

831
00:36:30,780 --> 00:36:32,579
in

832
00:36:32,579 --> 00:36:35,760
um HP hvh processing uh it looks like

833
00:36:35,760 --> 00:36:37,380
that's going to be relaxed a little bit

834
00:36:37,380 --> 00:36:39,900
but the difference here is any age

835
00:36:39,900 --> 00:36:42,780
limits the first option really isn't

836
00:36:42,780 --> 00:36:46,440
special the idea is that a device can

837
00:36:46,440 --> 00:36:48,839
set a limit how many options are

838
00:36:48,839 --> 00:36:51,119
processed and these options in our

839
00:36:51,119 --> 00:36:53,940
processed must be in order starting from

840
00:36:53,940 --> 00:36:56,700
the first one so for instance the

841
00:36:56,700 --> 00:36:58,320
default that we recommend is

842
00:36:58,320 --> 00:37:00,359
intermediate nodes should process up to

843
00:37:00,359 --> 00:37:02,640
eight hop by hop options

844
00:37:02,640 --> 00:37:05,160
uh non-padding which means when they

845
00:37:05,160 --> 00:37:07,980
receive a packet they if they process

846
00:37:07,980 --> 00:37:10,440
hobby hop options they should um by

847
00:37:10,440 --> 00:37:12,320
default try to process the first date

848
00:37:12,320 --> 00:37:15,839
but they can process any number between

849
00:37:15,839 --> 00:37:19,640
0 and N so zero is the RFC 8200

850
00:37:19,640 --> 00:37:22,200
recommended or guidance that allows that

851
00:37:22,200 --> 00:37:25,160
and would be some number of contiguous

852
00:37:25,160 --> 00:37:27,900
hop-by-hop options padding and

853
00:37:27,900 --> 00:37:29,579
non-padding and that would apply to both

854
00:37:29,579 --> 00:37:33,380
Hoppe hop and destination options

855
00:37:33,900 --> 00:37:37,320
so then once we decide that we only

856
00:37:37,320 --> 00:37:40,440
process part of the options or some of

857
00:37:40,440 --> 00:37:42,540
the options and not the full options the

858
00:37:42,540 --> 00:37:44,099
question becomes What Becomes of the

859
00:37:44,099 --> 00:37:46,619
rest of the options so happy hop Ops

860
00:37:46,619 --> 00:37:50,099
processing says that I know it may

861
00:37:50,099 --> 00:37:52,920
process the first one and skip the rest

862
00:37:52,920 --> 00:37:55,260
and eh limits I think we're a little

863
00:37:55,260 --> 00:37:56,640
more specific

864
00:37:56,640 --> 00:38:00,540
uh the node can process the first n

865
00:38:00,540 --> 00:38:02,880
padding and non-padding options or the

866
00:38:02,880 --> 00:38:05,700
first and non-padding at least and then

867
00:38:05,700 --> 00:38:08,579
for the rest uh they're ignored beyond

868
00:38:08,579 --> 00:38:09,900
that limit

869
00:38:09,900 --> 00:38:12,420
but that is only at intermediate

870
00:38:12,420 --> 00:38:14,220
destinations

871
00:38:14,220 --> 00:38:16,619
the Final Destination the behavior is a

872
00:38:16,619 --> 00:38:18,180
little bit different

873
00:38:18,180 --> 00:38:20,760
the destination host and I believe this

874
00:38:20,760 --> 00:38:24,540
is consistent with RFC 8504 can process

875
00:38:24,540 --> 00:38:27,960
the first n options as a limit but if

876
00:38:27,960 --> 00:38:30,540
there's options beyond the limit the

877
00:38:30,540 --> 00:38:33,300
host must drop the packet the rationale

878
00:38:33,300 --> 00:38:34,920
there is

879
00:38:34,920 --> 00:38:37,859
unless the host processes the full list

880
00:38:37,859 --> 00:38:41,099
of extension of options it wouldn't know

881
00:38:41,099 --> 00:38:43,680
if that's a malformed packet so the host

882
00:38:43,680 --> 00:38:45,720
does have to process

883
00:38:45,720 --> 00:38:49,440
all of the options what this means is in

884
00:38:49,440 --> 00:38:52,920
practicality is that uh even hosts are

885
00:38:52,920 --> 00:38:54,359
going to have limits

886
00:38:54,359 --> 00:38:57,300
for instance we can process hundreds and

887
00:38:57,300 --> 00:38:59,760
hundreds of options in a single packet

888
00:38:59,760 --> 00:39:02,700
efficiently no one can do that that also

889
00:39:02,700 --> 00:39:05,160
be the only use case has a denial of

890
00:39:05,160 --> 00:39:07,320
service attack so we think that the host

891
00:39:07,320 --> 00:39:09,599
does need this requirement and does need

892
00:39:09,599 --> 00:39:12,060
to drop when the limits are exceeded

893
00:39:12,060 --> 00:39:15,020
next slide please

894
00:39:18,180 --> 00:39:21,119
some other differences in hopah hop

895
00:39:21,119 --> 00:39:24,240
processing Source node should include a

896
00:39:24,240 --> 00:39:27,720
default single hot by hop option so when

897
00:39:27,720 --> 00:39:30,180
sending the idea is at the default and

898
00:39:30,180 --> 00:39:32,099
how to help processing seems to be send

899
00:39:32,099 --> 00:39:34,440
one and maybe more

900
00:39:34,440 --> 00:39:36,480
in eh limits we described it a little

901
00:39:36,480 --> 00:39:37,820
bit differently

902
00:39:37,820 --> 00:39:41,820
we recommend sending up to eight

903
00:39:41,820 --> 00:39:44,820
non-padding options as the default

904
00:39:44,820 --> 00:39:48,240
the rationale here is that whether or

905
00:39:48,240 --> 00:39:51,359
not one or zero is sent is a bigger

906
00:39:51,359 --> 00:39:53,339
difference than sending more than one

907
00:39:53,339 --> 00:39:55,859
especially if we allow intermediate

908
00:39:55,859 --> 00:39:59,579
nodes to ignore options past the first

909
00:39:59,579 --> 00:40:03,000
one that means that the only thing

910
00:40:03,000 --> 00:40:04,800
special about the first option really is

911
00:40:04,800 --> 00:40:06,839
the fact that it it's the most likely to

912
00:40:06,839 --> 00:40:08,160
be processed

913
00:40:08,160 --> 00:40:11,160
but in environments where the source

914
00:40:11,160 --> 00:40:13,800
knows that the path can handle more than

915
00:40:13,800 --> 00:40:15,480
one option

916
00:40:15,480 --> 00:40:17,700
or has a need to process more than one

917
00:40:17,700 --> 00:40:20,339
option there's really no need to to

918
00:40:20,339 --> 00:40:22,920
limit it from the sender with the

919
00:40:22,920 --> 00:40:26,280
assumption that intermediate nodes uh

920
00:40:26,280 --> 00:40:28,800
don't care obviously when we start

921
00:40:28,800 --> 00:40:31,020
talking about the limits of the header

922
00:40:31,020 --> 00:40:34,079
chain this would be relevant but that's

923
00:40:34,079 --> 00:40:36,359
actually a separate separate topic how

924
00:40:36,359 --> 00:40:37,859
many bytes you can have

925
00:40:37,859 --> 00:40:41,040
so I think the limit is requirement here

926
00:40:41,040 --> 00:40:42,200
is

927
00:40:42,200 --> 00:40:45,359
assume the eh limits we don't

928
00:40:45,359 --> 00:40:47,940
necessarily want to try to limit things

929
00:40:47,940 --> 00:40:50,940
to one option even as a recommendation

930
00:40:50,940 --> 00:40:53,339
I'm worried that that's going to be an

931
00:40:53,339 --> 00:40:56,339
extensibility issue and besides that

932
00:40:56,339 --> 00:40:58,560
operating systems really aren't designed

933
00:40:58,560 --> 00:41:02,400
to enforce this sort of limit anyway

934
00:41:02,400 --> 00:41:05,280
uh the last major difference is around

935
00:41:05,280 --> 00:41:07,859
the area of how big extension header

936
00:41:07,859 --> 00:41:09,180
chains can be

937
00:41:09,180 --> 00:41:11,339
how by hop options

938
00:41:11,339 --> 00:41:12,000
um

939
00:41:12,000 --> 00:41:14,579
gives this guidance uh should not hobby

940
00:41:14,579 --> 00:41:16,380
hop option should not be a variable size

941
00:41:16,380 --> 00:41:18,180
that can extend beyond what can be

942
00:41:18,180 --> 00:41:20,040
executed in a fast path

943
00:41:20,040 --> 00:41:23,400
eh limits is more specific the current

944
00:41:23,400 --> 00:41:26,400
limit that we're proposing is 64 bytes

945
00:41:26,400 --> 00:41:29,099
maximum of extension headers

946
00:41:29,099 --> 00:41:31,980
uh the whole IP V6 header chain fits in

947
00:41:31,980 --> 00:41:34,320
a 128 bytes

948
00:41:34,320 --> 00:41:36,000
um as I said on the chat that's a little

949
00:41:36,000 --> 00:41:38,940
bit inconsistent with this data that

950
00:41:38,940 --> 00:41:41,880
shows 48 bytes are

951
00:41:41,880 --> 00:41:44,940
um commonly able to be transmitted so I

952
00:41:44,940 --> 00:41:46,560
think that's an interesting question why

953
00:41:46,560 --> 00:41:48,480
48 bytes

954
00:41:48,480 --> 00:41:52,140
um but the rationale here was devices

955
00:41:52,140 --> 00:41:54,720
should be able to parse uh with a

956
00:41:54,720 --> 00:41:57,720
parsing buffer of 128 bytes and that

957
00:41:57,720 --> 00:41:59,760
would fit an Ethernet header or IPv6

958
00:41:59,760 --> 00:42:00,780
header

959
00:42:00,780 --> 00:42:02,640
and the first eight bytes of Transport

960
00:42:02,640 --> 00:42:07,560
header plus 64 bytes of ethernet um of

961
00:42:07,560 --> 00:42:11,820
uh ether extensioner sorry so I think we

962
00:42:11,820 --> 00:42:13,020
do need this

963
00:42:13,020 --> 00:42:14,220
um requirements probably are

964
00:42:14,220 --> 00:42:17,460
appropriating age limits but obviously

965
00:42:17,460 --> 00:42:20,760
there's maybe some discussion on what

966
00:42:20,760 --> 00:42:23,400
the actual numbers

967
00:42:23,400 --> 00:42:26,359
next slide please

968
00:42:27,180 --> 00:42:29,640
uh so that's uh all I have for today

969
00:42:29,640 --> 00:42:32,299
thank you

970
00:42:33,960 --> 00:42:35,940
yeah we have two people in the queue and

971
00:42:35,940 --> 00:42:37,800
after that we close the queue because we

972
00:42:37,800 --> 00:42:41,240
Sorry slightly run out of time Gore

973
00:42:41,240 --> 00:42:44,280
uh okay if we're shorter time I think we

974
00:42:44,280 --> 00:42:46,079
could take this to the list but clearly

975
00:42:46,079 --> 00:42:48,300
Tom it would be good to work with you to

976
00:42:48,300 --> 00:42:51,359
get a coherent set of recommendations

977
00:42:51,359 --> 00:42:53,940
for both drafts

978
00:42:53,940 --> 00:42:56,700
yep let's do that

979
00:42:56,700 --> 00:42:58,800
hi Tom this is Tim winners

980
00:42:58,800 --> 00:43:03,420
um QA Cafe so 80 8504 has text are you

981
00:43:03,420 --> 00:43:05,339
planning on updating that text is this

982
00:43:05,339 --> 00:43:06,660
draft going to be an update of that or

983
00:43:06,660 --> 00:43:08,099
is it essentially the same I'm gonna

984
00:43:08,099 --> 00:43:11,220
read it in diff the two but uh that was

985
00:43:11,220 --> 00:43:12,780
my other question here is if you were

986
00:43:12,780 --> 00:43:14,760
actually trying to update General node

987
00:43:14,760 --> 00:43:16,020
requirements and what do you wanted to

988
00:43:16,020 --> 00:43:17,099
do about that

989
00:43:17,099 --> 00:43:20,819
I I think it does update 8504 so I

990
00:43:20,819 --> 00:43:23,760
wanted to make that um put that label on

991
00:43:23,760 --> 00:43:26,000
the draft

992
00:43:26,579 --> 00:43:29,400
okay thank you Tom

993
00:43:29,400 --> 00:43:31,880
thank you

994
00:43:42,060 --> 00:43:45,180
thanks next slide

995
00:43:45,180 --> 00:43:48,060
thank you uh so the draft completed last

996
00:43:48,060 --> 00:43:50,460
call in six months so I think it's not

997
00:43:50,460 --> 00:43:53,280
officially closed yet right Jen so there

998
00:43:53,280 --> 00:43:55,380
is some comments like uh pending from

999
00:43:55,380 --> 00:43:57,900
Spring and I have a slide to talk about

1000
00:43:57,900 --> 00:44:00,359
it but thanks to everybody who commented

1001
00:44:00,359 --> 00:44:02,760
like I was actually pleasantly surprised

1002
00:44:02,760 --> 00:44:04,560
how much we got like especially Adrian

1003
00:44:04,560 --> 00:44:05,940
thanks for your review like that was

1004
00:44:05,940 --> 00:44:07,440
like amazing there's quite a bit of

1005
00:44:07,440 --> 00:44:09,480
stuff and and a lot of it has been

1006
00:44:09,480 --> 00:44:11,400
around tightening the language so like

1007
00:44:11,400 --> 00:44:12,180
we

1008
00:44:12,180 --> 00:44:13,980
um so I was using like language for

1009
00:44:13,980 --> 00:44:15,180
routing and forwarding kind of

1010
00:44:15,180 --> 00:44:17,579
interchangeably and

1011
00:44:17,579 --> 00:44:19,380
um that could be read from somebody from

1012
00:44:19,380 --> 00:44:21,060
the routing area differently than how we

1013
00:44:21,060 --> 00:44:22,800
would read it in Sixth Man so I think

1014
00:44:22,800 --> 00:44:24,300
like it didn't kind of helped quite a

1015
00:44:24,300 --> 00:44:25,800
bit in tightening the language around it

1016
00:44:25,800 --> 00:44:27,839
so that's been done so like pretty much

1017
00:44:27,839 --> 00:44:29,760
all the comments received during the

1018
00:44:29,760 --> 00:44:31,920
last call have been addressed and

1019
00:44:31,920 --> 00:44:34,619
there's like one uh specific one I had

1020
00:44:34,619 --> 00:44:36,240
to call out like Edward Metz it came

1021
00:44:36,240 --> 00:44:38,220
like a week after last call but I think

1022
00:44:38,220 --> 00:44:40,380
it's still worth addressing but I didn't

1023
00:44:40,380 --> 00:44:43,079
want to do it like one day before the uh

1024
00:44:43,079 --> 00:44:44,460
submission deadline to just rush

1025
00:44:44,460 --> 00:44:47,040
something but and that's something we I

1026
00:44:47,040 --> 00:44:49,380
should like address after

1027
00:44:49,380 --> 00:44:52,740
um the ITF complete right and and the

1028
00:44:52,740 --> 00:44:55,619
key thing to sorry

1029
00:44:55,619 --> 00:44:57,540
okay I can just uh talk to Jen don't

1030
00:44:57,540 --> 00:45:00,480
worry so um the the key thing is like to

1031
00:45:00,480 --> 00:45:02,099
talk about the prefix that's getting

1032
00:45:02,099 --> 00:45:05,579
allocated to say it's gonna be optional

1033
00:45:05,579 --> 00:45:06,960
okay

1034
00:45:06,960 --> 00:45:08,339
I think people are trying to read my

1035
00:45:08,339 --> 00:45:11,460
lips so I'll just go so um the key thing

1036
00:45:11,460 --> 00:45:13,560
is this use of this prefix is optional

1037
00:45:13,560 --> 00:45:15,240
so nobody's going to be forced to use

1038
00:45:15,240 --> 00:45:17,520
this prefix and

1039
00:45:17,520 --> 00:45:19,920
um so that is I thought it was always

1040
00:45:19,920 --> 00:45:21,780
understood from the draft that is like

1041
00:45:21,780 --> 00:45:23,400
getting a prefix for use for somebody

1042
00:45:23,400 --> 00:45:25,800
and but people had like specific

1043
00:45:25,800 --> 00:45:27,839
questions saying hey should we use this

1044
00:45:27,839 --> 00:45:30,180
for Sr all the time right so that is not

1045
00:45:30,180 --> 00:45:32,579
the intent so I'll add in text in there

1046
00:45:32,579 --> 00:45:34,319
saying this is use of this is optional

1047
00:45:34,319 --> 00:45:36,000
so that's going to come in but I'll

1048
00:45:36,000 --> 00:45:37,319
circulate the text on the list before

1049
00:45:37,319 --> 00:45:39,079
adding anything like that

1050
00:45:39,079 --> 00:45:42,180
uh but the point is right by allocating

1051
00:45:42,180 --> 00:45:43,560
this prefix like nobody's going to go

1052
00:45:43,560 --> 00:45:45,480
ask for a prefix just for doing Sr I

1053
00:45:45,480 --> 00:45:47,819
think that is the goal of doing this

1054
00:45:47,819 --> 00:45:50,579
and um a couple of days back just before

1055
00:45:50,579 --> 00:45:51,900
the ITF

1056
00:45:51,900 --> 00:45:54,119
um I got a mail from Ayanna along with

1057
00:45:54,119 --> 00:45:56,099
the chairs and the ad so this is awesome

1058
00:45:56,099 --> 00:45:57,359
right like this is like an amazing

1059
00:45:57,359 --> 00:45:58,800
process that Ayanna is actually doing

1060
00:45:58,800 --> 00:46:01,020
earlier use of drafts for Ayana things

1061
00:46:01,020 --> 00:46:02,819
and I was like really presently

1062
00:46:02,819 --> 00:46:04,319
surprised so thanks Amanda if you're

1063
00:46:04,319 --> 00:46:06,480
like you know looking at it

1064
00:46:06,480 --> 00:46:08,220
so I just put together a straw man

1065
00:46:08,220 --> 00:46:11,460
proposal for how the prefix is going to

1066
00:46:11,460 --> 00:46:13,619
look in the special purpose registry and

1067
00:46:13,619 --> 00:46:15,480
if you look at it it's it's very similar

1068
00:46:15,480 --> 00:46:18,660
to what Ula does okay so the um

1069
00:46:18,660 --> 00:46:21,060
the it's a forwardable prefix so it

1070
00:46:21,060 --> 00:46:22,440
means it can actually cross a router

1071
00:46:22,440 --> 00:46:24,660
because as long as you're in a domain

1072
00:46:24,660 --> 00:46:26,099
um the the router should be able to

1073
00:46:26,099 --> 00:46:27,359
forward it so it's not like link local

1074
00:46:27,359 --> 00:46:28,920
so that is really what the forwardable

1075
00:46:28,920 --> 00:46:31,200
thing means and the globally routable is

1076
00:46:31,200 --> 00:46:33,480
false because um there has been actually

1077
00:46:33,480 --> 00:46:35,099
some proposals during working group last

1078
00:46:35,099 --> 00:46:37,260
call uh which said like oh we should

1079
00:46:37,260 --> 00:46:39,540
like make it centrally registered and we

1080
00:46:39,540 --> 00:46:41,460
allow it routing but I don't think we

1081
00:46:41,460 --> 00:46:43,380
started off with that intent okay so if

1082
00:46:43,380 --> 00:46:44,760
somebody wants to discuss that that's

1083
00:46:44,760 --> 00:46:47,339
fine but I don't think that is what this

1084
00:46:47,339 --> 00:46:49,140
trust got out to do okay so this was

1085
00:46:49,140 --> 00:46:51,060
like for somebody to use it on a best

1086
00:46:51,060 --> 00:46:53,099
case basis inside a domain so we don't

1087
00:46:53,099 --> 00:46:55,079
really want to have a registry or like

1088
00:46:55,079 --> 00:46:56,280
make something that's like globally

1089
00:46:56,280 --> 00:46:59,700
unique going forward on this so Maestro

1090
00:46:59,700 --> 00:47:01,260
man proposal again is like globally

1091
00:47:01,260 --> 00:47:03,359
routable is going to stay false and the

1092
00:47:03,359 --> 00:47:05,520
protocol field is false as well uh I

1093
00:47:05,520 --> 00:47:07,319
think it should be like one thing down

1094
00:47:07,319 --> 00:47:09,839
but moving to PDF got rid of it but the

1095
00:47:09,839 --> 00:47:11,520
protocol field is false because if the

1096
00:47:11,520 --> 00:47:14,060
protocol field is true then all IP

1097
00:47:14,060 --> 00:47:16,680
compliant implementation should support

1098
00:47:16,680 --> 00:47:18,420
this Behavior so which is something we

1099
00:47:18,420 --> 00:47:20,160
don't want so like it's going to be

1100
00:47:20,160 --> 00:47:22,619
false in there so this is the proposal

1101
00:47:22,619 --> 00:47:23,940
of course it's going to go on the list

1102
00:47:23,940 --> 00:47:27,300
as like a discussion Point as soon as

1103
00:47:27,300 --> 00:47:29,880
like spring completes their review of

1104
00:47:29,880 --> 00:47:33,359
the issue list right that's in the draft

1105
00:47:33,359 --> 00:47:35,880
um next slide

1106
00:47:35,880 --> 00:47:38,700
okay so um so I'm going to put in this

1107
00:47:38,700 --> 00:47:40,140
like new text I'll circulate the text

1108
00:47:40,140 --> 00:47:42,960
for adding this prefix use optional

1109
00:47:42,960 --> 00:47:45,000
thing just to make sure that it's it's

1110
00:47:45,000 --> 00:47:46,619
clear to everybody and I don't miss

1111
00:47:46,619 --> 00:47:48,599
anything obvious in there and again

1112
00:47:48,599 --> 00:47:50,220
thanks everybody for like committing

1113
00:47:50,220 --> 00:47:51,420
during working with last call that's

1114
00:47:51,420 --> 00:47:53,220
like I think we got like 15 or 20

1115
00:47:53,220 --> 00:47:55,200
comments like it's amazing for like a

1116
00:47:55,200 --> 00:47:56,660
short draft like this

1117
00:47:56,660 --> 00:47:59,880
and wait for the spring conclusion to

1118
00:47:59,880 --> 00:48:01,619
move the issue list from here into the

1119
00:48:01,619 --> 00:48:03,839
cset draft like we can take it out of

1120
00:48:03,839 --> 00:48:05,700
here but spring has to pick it up

1121
00:48:05,700 --> 00:48:07,200
because it's we don't want it to get

1122
00:48:07,200 --> 00:48:10,140
lost in the cracks somehow and um I

1123
00:48:10,140 --> 00:48:12,000
think Jen has already sent a reminder to

1124
00:48:12,000 --> 00:48:14,280
the spring chairs to kind of close this

1125
00:48:14,280 --> 00:48:16,380
right and so the comments that are

1126
00:48:16,380 --> 00:48:17,760
actually received I think like droops

1127
00:48:17,760 --> 00:48:18,839
and something there's like two or three

1128
00:48:18,839 --> 00:48:20,700
people who commented from spring on this

1129
00:48:20,700 --> 00:48:22,200
who said like it's fine to move the

1130
00:48:22,200 --> 00:48:24,420
issue list but as long as there's an

1131
00:48:24,420 --> 00:48:26,040
official conclusion from Spring chairs I

1132
00:48:26,040 --> 00:48:27,359
see Joel back there

1133
00:48:27,359 --> 00:48:29,339
um so if spring concludes that the issue

1134
00:48:29,339 --> 00:48:30,960
is just fine to move over then I think

1135
00:48:30,960 --> 00:48:32,579
we can close that part of it on the

1136
00:48:32,579 --> 00:48:34,920
draft so

1137
00:48:34,920 --> 00:48:38,300
did I surprise you

1138
00:48:40,380 --> 00:48:42,599
exactly yeah so as long as it's done

1139
00:48:42,599 --> 00:48:46,319
then we can just like close this draft

1140
00:48:46,319 --> 00:48:48,240
so open for questions

1141
00:48:48,240 --> 00:48:50,460
but to clarify so we're basically

1142
00:48:50,460 --> 00:48:52,560
waiting for spring to decide what to do

1143
00:48:52,560 --> 00:48:54,540
here on that we're waiting for the

1144
00:48:54,540 --> 00:48:57,060
spring working group to decide to what

1145
00:48:57,060 --> 00:48:58,380
to do

1146
00:48:58,380 --> 00:49:00,720
yeah so so there's like section 4.1 in

1147
00:49:00,720 --> 00:49:02,640
the draft right it says like the spring

1148
00:49:02,640 --> 00:49:04,800
needs to do these things so that needs

1149
00:49:04,800 --> 00:49:06,660
to just move over before we close the

1150
00:49:06,660 --> 00:49:07,880
draft

1151
00:49:07,880 --> 00:49:09,599
Lawrence of are you going to say

1152
00:49:09,599 --> 00:49:11,339
something okay

1153
00:49:11,339 --> 00:49:13,440
okay so there's no comments thank you

1154
00:49:13,440 --> 00:49:14,819
very much

1155
00:49:14,819 --> 00:49:18,440
thank you so much

1156
00:49:31,500 --> 00:49:35,540
we're back on time yeah

1157
00:49:35,700 --> 00:49:36,920
okay

1158
00:49:36,920 --> 00:49:40,079
uh today I will do the presentation

1159
00:49:40,079 --> 00:49:44,160
about carrying video information in IPv6

1160
00:49:44,160 --> 00:49:47,339
extension header so this is regarding

1161
00:49:47,339 --> 00:49:50,280
the network slicing or this is called

1162
00:49:50,280 --> 00:49:53,099
the network resource partition in the

1163
00:49:53,099 --> 00:49:56,579
teeth working group okay next slide

1164
00:49:56,579 --> 00:50:00,060
okay so here this is the background so

1165
00:50:00,060 --> 00:50:03,000
in fact in this draft is introduce a new

1166
00:50:03,000 --> 00:50:07,020
IPv6 uh how about half option to carry

1167
00:50:07,020 --> 00:50:09,060
this network resource partition

1168
00:50:09,060 --> 00:50:13,920
information in IPv6 packet so that this

1169
00:50:13,920 --> 00:50:17,480
can use by Network nodes to identify the

1170
00:50:17,480 --> 00:50:19,980
vtn the package that belong to and

1171
00:50:19,980 --> 00:50:22,680
forwarding the packet based on the

1172
00:50:22,680 --> 00:50:25,079
resource indicated by the reading

1173
00:50:25,079 --> 00:50:28,920
identifier so the meeting option can be

1174
00:50:28,920 --> 00:50:33,359
used to ipv ITF or network slices and

1175
00:50:33,359 --> 00:50:35,940
maybe could also be used in other

1176
00:50:35,940 --> 00:50:39,800
scenarios so this this

1177
00:50:39,800 --> 00:50:43,940
topic has been proposed in the past ietf

1178
00:50:43,940 --> 00:50:47,599
meetings so that they think about how to

1179
00:50:47,599 --> 00:50:51,960
uh use a generalize this waiting option

1180
00:50:51,960 --> 00:50:56,099
so this chart this presentation we will

1181
00:50:56,099 --> 00:51:00,680
focus on topic so next slide

1182
00:51:02,040 --> 00:51:04,619
next yeah

1183
00:51:04,619 --> 00:51:07,319
okay in fact in the teeth working group

1184
00:51:07,319 --> 00:51:11,099
we propose one draft is discussed about

1185
00:51:11,099 --> 00:51:13,880
this the possible generalized

1186
00:51:13,880 --> 00:51:17,460
generalization uh use cases about the

1187
00:51:17,460 --> 00:51:21,059
ietf network slicing so that from our

1188
00:51:21,059 --> 00:51:24,740
point of view in the existing uh the

1189
00:51:24,740 --> 00:51:26,420
IPv6

1190
00:51:26,420 --> 00:51:29,520
waiting options because we have the flag

1191
00:51:29,520 --> 00:51:32,640
we also have this video resource

1192
00:51:32,640 --> 00:51:36,540
identifier we can use a different flag I

1193
00:51:36,540 --> 00:51:39,180
can generalize the written resource

1194
00:51:39,180 --> 00:51:42,180
identifier for different purpose so that

1195
00:51:42,180 --> 00:51:45,420
means existing the mechanism of this

1196
00:51:45,420 --> 00:51:47,700
option can support the generalization

1197
00:51:47,700 --> 00:51:50,940
but the most important thing is what's

1198
00:51:50,940 --> 00:51:54,420
the use case and how water identifier

1199
00:51:54,420 --> 00:51:58,079
can be generalized use this uh this

1200
00:51:58,079 --> 00:52:01,680
existing Vision resource identifier so

1201
00:52:01,680 --> 00:52:04,740
this this draft in the teeth working

1202
00:52:04,740 --> 00:52:07,980
group we talk about the possible user

1203
00:52:07,980 --> 00:52:10,619
cases can be generalized based on this

1204
00:52:10,619 --> 00:52:14,300
the waiting resource identifier it

1205
00:52:14,300 --> 00:52:17,300
including the possible that used to

1206
00:52:17,300 --> 00:52:20,819
indicate the topology is used to

1207
00:52:20,819 --> 00:52:24,059
indicate the resource not only for the

1208
00:52:24,059 --> 00:52:27,599
bandwidth isolation but also for the

1209
00:52:27,599 --> 00:52:29,940
some other service functions such as

1210
00:52:29,940 --> 00:52:34,380
security or the network management and

1211
00:52:34,380 --> 00:52:37,260
also you know that Network slicing we

1212
00:52:37,260 --> 00:52:39,780
have the different topology maybe

1213
00:52:39,780 --> 00:52:43,020
there's the multiple uh MP to MP

1214
00:52:43,020 --> 00:52:46,920
topology it also can be the P2P topology

1215
00:52:46,920 --> 00:52:50,400
if we use the P2P support so that they

1216
00:52:50,400 --> 00:52:53,480
saw they can think about if this

1217
00:52:53,480 --> 00:52:56,760
resource identifier can be used as some

1218
00:52:56,760 --> 00:53:00,599
identifier for the for the P2P pass so

1219
00:53:00,599 --> 00:53:04,619
this is just some use cases as uh

1220
00:53:04,619 --> 00:53:08,280
identified in the in these working

1221
00:53:08,280 --> 00:53:10,859
groups the draft so

1222
00:53:10,859 --> 00:53:13,859
okay

1223
00:53:16,800 --> 00:53:20,180
okay I have to wait

1224
00:53:21,960 --> 00:53:25,440
okay this one okay so this so uh okay so

1225
00:53:25,440 --> 00:53:28,680
this is ah Nexus slice I think they

1226
00:53:28,680 --> 00:53:31,619
finished okay so here this is just some

1227
00:53:31,619 --> 00:53:34,440
this talk about this thinking on the

1228
00:53:34,440 --> 00:53:36,980
generalization of the meeting semantics

1229
00:53:36,980 --> 00:53:42,119
uh so we think that this uh network uh

1230
00:53:42,119 --> 00:53:45,599
we think that the identifier of this the

1231
00:53:45,599 --> 00:53:48,180
uh waiting resource it should be

1232
00:53:48,180 --> 00:53:52,079
associated with a set of network-wide

1233
00:53:52,079 --> 00:53:55,800
attributes that means we Emerald side

1234
00:53:55,800 --> 00:53:59,460
that is a network-wide instead of the uh

1235
00:53:59,460 --> 00:54:03,079
subrosification node or the past

1236
00:54:03,079 --> 00:54:06,839
subrosific past identifier that is here

1237
00:54:06,839 --> 00:54:09,359
that means this should be the network

1238
00:54:09,359 --> 00:54:13,260
wider attribute instead of the password

1239
00:54:13,260 --> 00:54:16,500
or the node wide so that's the the first

1240
00:54:16,500 --> 00:54:18,960
one to if we wanted to do the

1241
00:54:18,960 --> 00:54:21,900
generalization we first to identify this

1242
00:54:21,900 --> 00:54:24,599
one so this is the first one uh second

1243
00:54:24,599 --> 00:54:27,780
one so that we think what this network

1244
00:54:27,780 --> 00:54:31,079
attribute can be identified so we think

1245
00:54:31,079 --> 00:54:34,380
that currently that is the first that's

1246
00:54:34,380 --> 00:54:38,119
related with the uh a regional Network

1247
00:54:38,119 --> 00:54:41,700
slicing which is the link bandwidth and

1248
00:54:41,700 --> 00:54:44,280
also with some this is the average of

1249
00:54:44,280 --> 00:54:47,359
this queue that's used to guarantee the

1250
00:54:47,359 --> 00:54:50,640
SRE for the network slicing so I think

1251
00:54:50,640 --> 00:54:53,819
this is a region meaning I mean so this

1252
00:54:53,819 --> 00:54:56,420
is also here they are so some

1253
00:54:56,420 --> 00:54:59,579
generalization is not only the bandwidth

1254
00:54:59,579 --> 00:55:02,339
but maybe other resource to guarantee

1255
00:55:02,339 --> 00:55:05,520
the SRE uh the second one we think the

1256
00:55:05,520 --> 00:55:07,920
network attribute that is the topology

1257
00:55:07,920 --> 00:55:10,680
attribute because this topology let's

1258
00:55:10,680 --> 00:55:13,740
use Network wide so here we identify the

1259
00:55:13,740 --> 00:55:17,400
possible Network topology and the P2P uh

1260
00:55:17,400 --> 00:55:21,119
p2mp and mp2p or the mp2mp that is

1261
00:55:21,119 --> 00:55:24,240
identified the different this topology

1262
00:55:24,240 --> 00:55:27,240
attribute the third one we think that we

1263
00:55:27,240 --> 00:55:30,119
also have the network attribute for

1264
00:55:30,119 --> 00:55:34,079
other for the resource for other service

1265
00:55:34,079 --> 00:55:37,859
function so this we think we may also

1266
00:55:37,859 --> 00:55:39,619
can use this

1267
00:55:39,619 --> 00:55:42,720
resource identifier to identify the

1268
00:55:42,720 --> 00:55:45,660
resource for other service purpose such

1269
00:55:45,660 --> 00:55:48,780
as security or network environment

1270
00:55:48,780 --> 00:55:52,579
uh so I think that's we think this is

1271
00:55:52,579 --> 00:55:55,859
important to identify the boundary of

1272
00:55:55,859 --> 00:55:58,800
the generalization we think this maybe

1273
00:55:58,800 --> 00:56:02,780
is too hard just to set that is just

1274
00:56:02,780 --> 00:56:05,220
generalized identifier it can be

1275
00:56:05,220 --> 00:56:08,099
everything it can be anything in the

1276
00:56:08,099 --> 00:56:10,740
future so we think that we can

1277
00:56:10,740 --> 00:56:14,099
generalized but we also use this use

1278
00:56:14,099 --> 00:56:17,460
cases to identify the scope of this

1279
00:56:17,460 --> 00:56:19,980
generalization of the written resource

1280
00:56:19,980 --> 00:56:24,420
identifier so next one next oh so we

1281
00:56:24,420 --> 00:56:26,579
have a person thank you Eric yeah

1282
00:56:26,579 --> 00:56:30,240
everything so no hat and hellos I mean

1283
00:56:30,240 --> 00:56:33,180
I just wonder why we keep getting this

1284
00:56:33,180 --> 00:56:36,780
stuck to 32 bits ID it would be we have

1285
00:56:36,780 --> 00:56:38,579
reserved bits so we could put the length

1286
00:56:38,579 --> 00:56:41,160
there and generalize this to many many

1287
00:56:41,160 --> 00:56:44,280
other use case

1288
00:56:44,280 --> 00:56:46,760
in fact this uh

1289
00:56:46,760 --> 00:56:50,880
first though I think I I have explained

1290
00:56:50,880 --> 00:56:53,099
this the purpose about the

1291
00:56:53,099 --> 00:56:55,800
generalization I think in ietf when we

1292
00:56:55,800 --> 00:56:58,500
do some this the protocol specification

1293
00:56:58,500 --> 00:57:03,300
it should be firstly identified by the

1294
00:57:03,300 --> 00:57:06,059
use cases so I think for the

1295
00:57:06,059 --> 00:57:09,599
generalization I think that we must to

1296
00:57:09,599 --> 00:57:12,480
identify uh what's the user cases and

1297
00:57:12,480 --> 00:57:15,380
what's the identifier can be generalized

1298
00:57:15,380 --> 00:57:18,540
this is the first point the second point

1299
00:57:18,540 --> 00:57:21,260
I think in the existing

1300
00:57:21,260 --> 00:57:24,780
existing the written options it also

1301
00:57:24,780 --> 00:57:27,380
remaining the capability for the filter

1302
00:57:27,380 --> 00:57:30,660
for the filter extension because we have

1303
00:57:30,660 --> 00:57:34,559
the result of the flags you will use a

1304
00:57:34,559 --> 00:57:38,880
different flag so that the flag so that

1305
00:57:38,880 --> 00:57:41,760
indicates the different meaning of the

1306
00:57:41,760 --> 00:57:45,180
written resource identifier so I think

1307
00:57:45,180 --> 00:57:48,480
even in the future if some use cases

1308
00:57:48,480 --> 00:57:52,079
still want to reuse this option I think

1309
00:57:52,079 --> 00:57:55,520
we need not to change this option type

1310
00:57:55,520 --> 00:58:00,119
and and also use just to use some this

1311
00:58:00,119 --> 00:58:02,940
new flag for the generalization so this

1312
00:58:02,940 --> 00:58:05,640
is your second Point okay

1313
00:58:05,640 --> 00:58:08,880
okay so here so this I just to mention

1314
00:58:08,880 --> 00:58:12,000
this way so this is this draft we also

1315
00:58:12,000 --> 00:58:14,480
have some related draft the first draft

1316
00:58:14,480 --> 00:58:19,260
this is the cxma that's a topology ID

1317
00:58:19,260 --> 00:58:22,260
draft that means use identifier to

1318
00:58:22,260 --> 00:58:25,200
indicate the topology so that means the

1319
00:58:25,200 --> 00:58:28,319
topology is also a resource according to

1320
00:58:28,319 --> 00:58:31,740
the description in the previous pages so

1321
00:58:31,740 --> 00:58:35,280
we think that maybe this topology ID can

1322
00:58:35,280 --> 00:58:37,380
directly use a written resource

1323
00:58:37,380 --> 00:58:40,799
identifier because the written resource

1324
00:58:40,799 --> 00:58:44,520
not only include the included resource

1325
00:58:44,520 --> 00:58:48,180
attribute but also indicate the topology

1326
00:58:48,180 --> 00:58:51,000
attribute for the network slicing so

1327
00:58:51,000 --> 00:58:52,980
from our point of view so that the

1328
00:58:52,980 --> 00:58:55,920
written resource identifier can directly

1329
00:58:55,920 --> 00:58:59,760
use as a topology identifier uh okay but

1330
00:58:59,760 --> 00:59:02,819
we think that the question is that

1331
00:59:02,819 --> 00:59:05,579
because if this can be used topology

1332
00:59:05,579 --> 00:59:09,540
identifier so that means that existing

1333
00:59:09,540 --> 00:59:13,319
the features the market topology of the

1334
00:59:13,319 --> 00:59:14,960
flex angles

1335
00:59:14,960 --> 00:59:18,000
this may be also that's used created

1336
00:59:18,000 --> 00:59:21,180
before Network slicing in fact they can

1337
00:59:21,180 --> 00:59:24,540
independent from the network slicing but

1338
00:59:24,540 --> 00:59:26,960
now because this identifier

1339
00:59:26,960 --> 00:59:29,819
kindly use the routine resource

1340
00:59:29,819 --> 00:59:33,559
identifier so that means this

1341
00:59:33,559 --> 00:59:38,460
multiple topology must be used combining

1342
00:59:38,460 --> 00:59:42,200
with network slicing this is can be

1343
00:59:42,200 --> 00:59:46,339
accepted or not we will ask for the

1344
00:59:46,339 --> 00:59:49,200
comments in the teeth working group and

1345
00:59:49,200 --> 00:59:51,960
the igp working group if they agree with

1346
00:59:51,960 --> 00:59:55,980
this one so I think this this written

1347
00:59:55,980 --> 00:59:58,260
resource identifier can be generalized

1348
00:59:58,260 --> 01:00:01,680
to indicate the topology ID this is the

1349
01:00:01,680 --> 01:00:04,559
first one uh second one I think this is

1350
01:00:04,559 --> 01:00:07,619
the password and the affair in fact in

1351
01:00:07,619 --> 01:00:10,319
the Supreme working group there's the

1352
01:00:10,319 --> 01:00:13,500
one draft is related the past segment

1353
01:00:13,500 --> 01:00:17,400
that means user pass segment to identify

1354
01:00:17,400 --> 01:00:21,960
the Sr pass so that user just use some

1355
01:00:21,960 --> 01:00:25,020
this path identifier but I mentioned

1356
01:00:25,020 --> 01:00:28,559
that the P2P slice because you suggests

1357
01:00:28,559 --> 01:00:32,000
is a point to point

1358
01:00:32,000 --> 01:00:35,339
in fact so that's the written resource

1359
01:00:35,339 --> 01:00:38,460
identifier can be used as the path ID

1360
01:00:38,460 --> 01:00:42,240
because just just the point to point one

1361
01:00:42,240 --> 01:00:45,900
but from our point of view we think this

1362
01:00:45,900 --> 01:00:48,599
this is just a special case of the

1363
01:00:48,599 --> 01:00:51,420
network slicing we think we should not

1364
01:00:51,420 --> 01:00:53,700
use the routine resource identifier

1365
01:00:53,700 --> 01:00:58,220
become a past identifier so in our

1366
01:00:58,220 --> 01:01:01,559
opinion we think the written resource

1367
01:01:01,559 --> 01:01:03,540
identifier should be the network

1368
01:01:03,540 --> 01:01:06,180
identifier that means all only to

1369
01:01:06,180 --> 01:01:08,220
indicate that neither World Network

1370
01:01:08,220 --> 01:01:12,000
wider attribute is instead of the past

1371
01:01:12,000 --> 01:01:15,720
attribute if so that means if you we

1372
01:01:15,720 --> 01:01:18,799
need uh need some this the

1373
01:01:18,799 --> 01:01:21,839
information regarding the past we need

1374
01:01:21,839 --> 01:01:25,020
to in the introduce independent past

1375
01:01:25,020 --> 01:01:28,260
identifier in fact instead of reusing

1376
01:01:28,260 --> 01:01:31,140
the reusing the written resource

1377
01:01:31,140 --> 01:01:34,079
identifier so we're we're out of time

1378
01:01:34,079 --> 01:01:37,619
here okay okay another last one I think

1379
01:01:37,619 --> 01:01:39,680
this we also have the multiple

1380
01:01:39,680 --> 01:01:41,940
Distributing resource identifier that

1381
01:01:41,940 --> 01:01:44,400
means we have the global for the cross

1382
01:01:44,400 --> 01:01:46,200
multiple domain and also the local

1383
01:01:46,200 --> 01:01:49,380
domain that means we have the uh here we

1384
01:01:49,380 --> 01:01:50,940
have this is the different resource

1385
01:01:50,940 --> 01:01:54,480
identifier we think this this we must

1386
01:01:54,480 --> 01:01:57,480
use independent identifier for the

1387
01:01:57,480 --> 01:02:00,299
different scope so this is just a third

1388
01:02:00,299 --> 01:02:04,819
one okay next page I try to finish okay

1389
01:02:04,819 --> 01:02:09,660
okay so I think we can go the next one

1390
01:02:09,660 --> 01:02:13,319
okay so I think this is just the major

1391
01:02:13,319 --> 01:02:15,900
thinking about the generalization of

1392
01:02:15,900 --> 01:02:19,680
this meeting resource options and the

1393
01:02:19,680 --> 01:02:22,920
written resource identifier so I I I

1394
01:02:22,920 --> 01:02:26,700
also there's a thing uh explain the

1395
01:02:26,700 --> 01:02:29,220
design thought about the generalization

1396
01:02:29,220 --> 01:02:33,480
and and also identify what a resource I

1397
01:02:33,480 --> 01:02:36,240
identifier can be generalized with this

1398
01:02:36,240 --> 01:02:40,260
this one so I wish you can review this

1399
01:02:40,260 --> 01:02:42,839
draft if you and also think this use

1400
01:02:42,839 --> 01:02:45,839
case does make sense or not if it's okay

1401
01:02:45,839 --> 01:02:49,980
so that we just make this as a strong

1402
01:02:49,980 --> 01:02:50,780
base

1403
01:02:50,780 --> 01:02:55,200
firstly so then later we will use other

1404
01:02:55,200 --> 01:02:57,540
drugs to define the generalization

1405
01:02:57,540 --> 01:03:00,900
that's my uh other presentation okay

1406
01:03:00,900 --> 01:03:02,460
thanks

1407
01:03:02,460 --> 01:03:04,079
oh

1408
01:03:04,079 --> 01:03:07,079
okay okay

1409
01:03:07,380 --> 01:03:12,319
um okay okay thanks no questions

1410
01:03:12,900 --> 01:03:17,940
I have another USBC okay uh next

1411
01:03:17,940 --> 01:03:21,720
next I guess next is Justin right yes

1412
01:03:21,720 --> 01:03:24,140
okay

1413
01:03:26,520 --> 01:03:29,040
turn off the cable back no because I

1414
01:03:29,040 --> 01:03:33,200
need to well can you charge enough

1415
01:03:41,880 --> 01:03:44,880
okay

1416
01:03:44,940 --> 01:03:49,559
yeah let's go hi Justin your man Julius

1417
01:03:49,559 --> 01:03:51,180
um so this draft is actually about

1418
01:03:51,180 --> 01:03:54,059
carrying a generic identifier and IPv6

1419
01:03:54,059 --> 01:03:56,760
packet and this is actually really close

1420
01:03:56,760 --> 01:04:00,380
and related to the previous presentation

1421
01:04:02,339 --> 01:04:04,319
so actually the idea came to mind right

1422
01:04:04,319 --> 01:04:07,079
after previous meeting in Philly

1423
01:04:07,079 --> 01:04:10,319
um because obviously we had two drafts

1424
01:04:10,319 --> 01:04:13,440
um with kind of similar use cases and by

1425
01:04:13,440 --> 01:04:15,180
similar use cases I mean they were

1426
01:04:15,180 --> 01:04:18,119
trying to you know carry a 32-bit

1427
01:04:18,119 --> 01:04:20,040
identifier

1428
01:04:20,040 --> 01:04:22,680
and uh the problem is that they wanted

1429
01:04:22,680 --> 01:04:25,859
to allocate a new cut Point both so you

1430
01:04:25,859 --> 01:04:27,059
had to

1431
01:04:27,059 --> 01:04:29,700
create two code points for similar use

1432
01:04:29,700 --> 01:04:31,140
cases right

1433
01:04:31,140 --> 01:04:33,420
and there were some concerns and

1434
01:04:33,420 --> 01:04:36,059
actually there are still concerts uh it

1435
01:04:36,059 --> 01:04:38,460
looks like actually so

1436
01:04:38,460 --> 01:04:41,579
um the problem is that it's not generic

1437
01:04:41,579 --> 01:04:44,040
enough right

1438
01:04:44,040 --> 01:04:46,319
um so why the second draft on the list

1439
01:04:46,319 --> 01:04:48,420
here as expired

1440
01:04:48,420 --> 01:04:50,339
um the first one so which has been

1441
01:04:50,339 --> 01:04:53,339
presented right before this one

1442
01:04:53,339 --> 01:04:56,520
um has evolved to make it more generic

1443
01:04:56,520 --> 01:04:58,680
but I think it's more generic still in

1444
01:04:58,680 --> 01:05:01,680
that vtn context right

1445
01:05:01,680 --> 01:05:03,720
so the question is should we do

1446
01:05:03,720 --> 01:05:06,420
something about that and if we choose to

1447
01:05:06,420 --> 01:05:07,559
do something

1448
01:05:07,559 --> 01:05:12,740
well there might be several Solutions

1449
01:05:13,440 --> 01:05:15,240
so the first one obviously is to have

1450
01:05:15,240 --> 01:05:17,339
you know a generic container for an ID

1451
01:05:17,339 --> 01:05:20,520
and here the data length of the option

1452
01:05:20,520 --> 01:05:23,400
will be the length of the ID so in octet

1453
01:05:23,400 --> 01:05:25,200
right

1454
01:05:25,200 --> 01:05:28,980
but the cons here is that it may be too

1455
01:05:28,980 --> 01:05:31,500
generic right and besides you have no

1456
01:05:31,500 --> 01:05:33,720
contexts which means you don't know

1457
01:05:33,720 --> 01:05:37,399
actually what you are receiving here

1458
01:05:38,819 --> 01:05:41,640
so an alternative to that is to have a

1459
01:05:41,640 --> 01:05:44,220
new registry so the name the field name

1460
01:05:44,220 --> 01:05:47,700
is context type thanks to that field you

1461
01:05:47,700 --> 01:05:50,880
would be able to know which type of ID

1462
01:05:50,880 --> 01:05:52,799
you are carrying

1463
01:05:52,799 --> 01:05:56,160
and actually with that registry you

1464
01:05:56,160 --> 01:05:58,500
would be able to control what is defined

1465
01:05:58,500 --> 01:06:01,319
in that registry right

1466
01:06:01,319 --> 01:06:03,359
thanks to that you would be able to have

1467
01:06:03,359 --> 01:06:07,260
a kind of stricter in the data not only

1468
01:06:07,260 --> 01:06:10,859
an ID but maybe several IDs but also

1469
01:06:10,859 --> 01:06:13,079
Flags or whatever so if I take your

1470
01:06:13,079 --> 01:06:15,299
draft I know that with the new revision

1471
01:06:15,299 --> 01:06:16,740
you have Flex for instance in your

1472
01:06:16,740 --> 01:06:19,740
structure so it would be possible

1473
01:06:19,740 --> 01:06:22,380
but again accounts here would be that

1474
01:06:22,380 --> 01:06:24,839
you have a sub registry so I don't think

1475
01:06:24,839 --> 01:06:27,900
it's going the right way uh gory left

1476
01:06:27,900 --> 01:06:30,119
but I think for the efficient processing

1477
01:06:30,119 --> 01:06:32,460
of biops it may not be the best idea but

1478
01:06:32,460 --> 01:06:36,500
anyway you have always trade-off here

1479
01:06:36,799 --> 01:06:39,180
so I'm open to

1480
01:06:39,180 --> 01:06:41,039
a good discussion here if we do

1481
01:06:41,039 --> 01:06:42,599
something should we have both solution

1482
01:06:42,599 --> 01:06:45,900
either or should we do nothing and have

1483
01:06:45,900 --> 01:06:48,200
none

1484
01:06:49,619 --> 01:06:51,839
yeah it would be good to get feedback

1485
01:06:51,839 --> 01:06:53,460
from the working group on this because

1486
01:06:53,460 --> 01:06:56,700
something like this would allow

1487
01:06:56,700 --> 01:06:59,059
um a way of carrying a lot of

1488
01:06:59,059 --> 01:07:01,680
identification information without

1489
01:07:01,680 --> 01:07:03,960
having to do a whole new

1490
01:07:03,960 --> 01:07:06,059
uh type for each one there could be a

1491
01:07:06,059 --> 01:07:08,160
registry either they get it would be I

1492
01:07:08,160 --> 01:07:10,079
think an easier process to get new

1493
01:07:10,079 --> 01:07:13,680
things done but it's like with all

1494
01:07:13,680 --> 01:07:15,660
things has carried off so

1495
01:07:15,660 --> 01:07:18,920
comments are appreciated

1496
01:07:18,920 --> 01:07:21,260
from Holly yeah

1497
01:07:21,260 --> 01:07:24,240
actually as you just see the previous

1498
01:07:24,240 --> 01:07:25,579
presentation

1499
01:07:25,579 --> 01:07:29,119
with the flat field and the result field

1500
01:07:29,119 --> 01:07:32,780
there's a similar

1501
01:07:32,780 --> 01:07:36,059
capability to generalize this option The

1502
01:07:36,059 --> 01:07:39,119
Waiting option so as what you propose in

1503
01:07:39,119 --> 01:07:41,460
the second option and I fully agree that

1504
01:07:41,460 --> 01:07:44,819
for the similar functional entities one

1505
01:07:44,819 --> 01:07:47,400
option will be good enough instead of

1506
01:07:47,400 --> 01:07:48,720
two right

1507
01:07:48,720 --> 01:07:52,799
and uh regarding the waiting concept I

1508
01:07:52,799 --> 01:07:55,200
think uh as Robin just mentioned in his

1509
01:07:55,200 --> 01:07:58,500
presentation but uh considered as a

1510
01:07:58,500 --> 01:08:02,039
network wide uh generic concept and

1511
01:08:02,039 --> 01:08:06,539
cover a set of network attributes which

1512
01:08:06,539 --> 01:08:09,420
can be applied to not only Network

1513
01:08:09,420 --> 01:08:12,900
slicing but also others in a generic

1514
01:08:12,900 --> 01:08:14,760
scenarios

1515
01:08:14,760 --> 01:08:16,679
so my understanding is

1516
01:08:16,679 --> 01:08:20,120
uh maybe we can just follow the existing

1517
01:08:20,120 --> 01:08:23,640
option to make it generic but we before

1518
01:08:23,640 --> 01:08:26,520
that we can have a base version to meet

1519
01:08:26,520 --> 01:08:28,920
the current requirements first

1520
01:08:28,920 --> 01:08:30,120
so

1521
01:08:30,120 --> 01:08:33,080
okay thank you

1522
01:08:33,719 --> 01:08:36,920
well that's not the mic

1523
01:08:37,080 --> 01:08:38,819
El Richardson

1524
01:08:38,819 --> 01:08:41,160
um I guess my first question really is

1525
01:08:41,160 --> 01:08:43,560
to do with for

1526
01:08:43,560 --> 01:08:45,600
um or as a question to people who have

1527
01:08:45,600 --> 01:08:48,179
or who have knowledge of configurable

1528
01:08:48,179 --> 01:08:50,399
Hardware that is going to be able to do

1529
01:08:50,399 --> 01:08:53,640
this is well can you match this can you

1530
01:08:53,640 --> 01:08:55,620
match this intelligently

1531
01:08:55,620 --> 01:08:59,339
um or uh are you limited to

1532
01:08:59,339 --> 01:09:03,359
um looking at the option type there

1533
01:09:03,359 --> 01:09:04,799
um so I think that's a really big

1534
01:09:04,799 --> 01:09:06,359
question

1535
01:09:06,359 --> 01:09:08,759
um and I mean you can imagine new things

1536
01:09:08,759 --> 01:09:11,040
can do whatever and P4 people can you

1537
01:09:11,040 --> 01:09:12,540
know do whatever they want but I think

1538
01:09:12,540 --> 01:09:15,839
the question is uh going back uh what

1539
01:09:15,839 --> 01:09:18,238
what is what is easiest the other part

1540
01:09:18,238 --> 01:09:19,979
of that question I think is based on

1541
01:09:19,979 --> 01:09:23,040
what I think gory said at the beginning

1542
01:09:23,040 --> 01:09:25,679
um was that uh going forward we're

1543
01:09:25,679 --> 01:09:27,479
considering all types as if they have

1544
01:09:27,479 --> 01:09:29,399
zero zero at the beginning

1545
01:09:29,399 --> 01:09:32,279
and if that's literally true

1546
01:09:32,279 --> 01:09:35,279
then we have in effect four times more

1547
01:09:35,279 --> 01:09:38,219
option Fields option types going forward

1548
01:09:38,219 --> 01:09:40,319
and maybe we don't need to subtype it

1549
01:09:40,319 --> 01:09:42,179
going forward

1550
01:09:42,179 --> 01:09:44,698
um and so that also you know I don't

1551
01:09:44,698 --> 01:09:46,620
know if that's really in in practice

1552
01:09:46,620 --> 01:09:48,120
what he means or that's where we're

1553
01:09:48,120 --> 01:09:51,719
evolving to or you know we're we have

1554
01:09:51,719 --> 01:09:54,920
I know we have 32 option types today

1555
01:09:54,920 --> 01:09:57,780
available I think we have about nine or

1556
01:09:57,780 --> 01:10:00,960
ten of them in the registry so we're not

1557
01:10:00,960 --> 01:10:03,840
exhausted uh but you know on the other

1558
01:10:03,840 --> 01:10:05,640
hand we're not we're not super rich in

1559
01:10:05,640 --> 01:10:08,520
them so I suspect that we don't need a

1560
01:10:08,520 --> 01:10:10,320
generic type

1561
01:10:10,320 --> 01:10:13,320
um and that uh going forward we can

1562
01:10:13,320 --> 01:10:16,020
reclaim those zero zero bits for other

1563
01:10:16,020 --> 01:10:17,219
things

1564
01:10:17,219 --> 01:10:19,140
um but that's not to say that it

1565
01:10:19,140 --> 01:10:20,880
wouldn't be good to have a document that

1566
01:10:20,880 --> 01:10:22,860
said

1567
01:10:22,860 --> 01:10:25,620
um these are all the considerations that

1568
01:10:25,620 --> 01:10:28,440
options need to think about and it makes

1569
01:10:28,440 --> 01:10:31,199
life easier for the next guy uh that's

1570
01:10:31,199 --> 01:10:36,239
trying to uh uh Define a specific option

1571
01:10:36,239 --> 01:10:37,679
thank God that doesn't answer your

1572
01:10:37,679 --> 01:10:40,560
question yeah right

1573
01:10:40,560 --> 01:10:42,500
uh uh

1574
01:10:42,500 --> 01:10:46,340
in fact I explained some of this design

1575
01:10:46,340 --> 01:10:51,179
Concept in my draft so that's a I also

1576
01:10:51,179 --> 01:10:53,760
regarding this dropped I these comments

1577
01:10:53,760 --> 01:10:56,820
the first one the most important is the

1578
01:10:56,820 --> 01:11:00,000
scope of the generalization this is very

1579
01:11:00,000 --> 01:11:02,640
important for this one uh the first

1580
01:11:02,640 --> 01:11:05,280
because if we let's use some this

1581
01:11:05,280 --> 01:11:08,219
context ID and we use some of the data

1582
01:11:08,219 --> 01:11:11,460
if we use this generalization it can be

1583
01:11:11,460 --> 01:11:14,100
everything this is not only the video or

1584
01:11:14,100 --> 01:11:16,980
this support it can maybe also cover the

1585
01:11:16,980 --> 01:11:20,159
information of other IPv6 options even

1586
01:11:20,159 --> 01:11:22,800
for example the MTU option you can also

1587
01:11:22,800 --> 01:11:25,860
use this data structure to indicate I

1588
01:11:25,860 --> 01:11:28,560
think this definitely does not work this

1589
01:11:28,560 --> 01:11:31,140
first point the second point is the

1590
01:11:31,140 --> 01:11:33,300
boundary if you use this one to

1591
01:11:33,300 --> 01:11:37,440
identifier so that's this is you this

1592
01:11:37,440 --> 01:11:40,580
scope that means the data must be

1593
01:11:40,580 --> 01:11:43,679
identifier or can be other things

1594
01:11:43,679 --> 01:11:48,060
that that means this must because this

1595
01:11:48,060 --> 01:11:50,520
must be defined this is the identifier

1596
01:11:50,520 --> 01:11:53,760
this is the this is this the evil if

1597
01:11:53,760 --> 01:11:56,699
this is or not this master defined the

1598
01:11:56,699 --> 01:11:59,219
third one if this is identify a

1599
01:11:59,219 --> 01:12:01,739
generalized identifier so this is also

1600
01:12:01,739 --> 01:12:04,440
the use cases I mean mentioned because

1601
01:12:04,440 --> 01:12:08,159
this can be any identifiers but maybe

1602
01:12:08,159 --> 01:12:11,820
this identifier can be defined by other

1603
01:12:11,820 --> 01:12:12,780
draft

1604
01:12:12,780 --> 01:12:16,199
and also by other options and they maybe

1605
01:12:16,199 --> 01:12:19,560
had they didn't this identifiers maybe

1606
01:12:19,560 --> 01:12:21,239
didn't Maybe

1607
01:12:21,239 --> 01:12:24,420
do not have this comma attribute or this

1608
01:12:24,420 --> 01:12:28,140
the common meaning so this is just Why I

1609
01:12:28,140 --> 01:12:30,780
think if we want to define the

1610
01:12:30,780 --> 01:12:33,659
generalization we must take use of the

1611
01:12:33,659 --> 01:12:38,699
use case driven method that's my point

1612
01:12:38,699 --> 01:12:41,299
all right

1613
01:12:44,960 --> 01:12:48,179
just a reminder that for ripple we have

1614
01:12:48,179 --> 01:12:51,960
defined one option which is a hub option

1615
01:12:51,960 --> 01:12:55,800
that signals a topology repo is designed

1616
01:12:55,800 --> 01:12:59,100
to Route over multiple topologies and

1617
01:12:59,100 --> 01:13:01,980
this looks like a similar situation as

1618
01:13:01,980 --> 01:13:04,080
the vtn so I was just wondering instead

1619
01:13:04,080 --> 01:13:05,880
of allocating new code points if we

1620
01:13:05,880 --> 01:13:07,020
could extend

1621
01:13:07,020 --> 01:13:09,120
the code point that we already have so

1622
01:13:09,120 --> 01:13:10,980
we we have less discussion about how

1623
01:13:10,980 --> 01:13:12,179
many we have

1624
01:13:12,179 --> 01:13:14,219
rather than keeping this one completely

1625
01:13:14,219 --> 01:13:17,179
specific to repo

1626
01:13:20,520 --> 01:13:23,360
thank you Jackson

1627
01:13:36,360 --> 01:13:38,599
foreign

1628
01:13:44,540 --> 01:13:47,940
that should be connected online and this

1629
01:13:47,940 --> 01:13:50,159
is about the status of the draft you see

1630
01:13:50,159 --> 01:13:53,179
here so the

1631
01:13:53,179 --> 01:13:56,219
usage of neighbor Discovery protocol to

1632
01:13:56,219 --> 01:13:58,980
support multi-homing multiple prefix so

1633
01:13:58,980 --> 01:14:00,300
next slide please

1634
01:14:00,300 --> 01:14:03,480
quickly the scope it was presented at

1635
01:14:03,480 --> 01:14:08,060
ATF 114 Philadelphia it's about you know

1636
01:14:08,060 --> 01:14:10,699
discussing the usage of

1637
01:14:10,699 --> 01:14:13,500
multi-homing multiple prefix

1638
01:14:13,500 --> 01:14:16,320
which is a solution that has several

1639
01:14:16,320 --> 01:14:18,719
sorry it's a

1640
01:14:18,719 --> 01:14:22,560
a mechanism that is uh several Solutions

1641
01:14:22,560 --> 01:14:26,520
we have tried to look at the open issues

1642
01:14:26,520 --> 01:14:29,340
just focusing on neighbor Discovery

1643
01:14:29,340 --> 01:14:32,159
protocols so you see they are the

1644
01:14:32,159 --> 01:14:34,820
references to the rfcs the

1645
01:14:34,820 --> 01:14:37,800
4861 62 and the default address

1646
01:14:37,800 --> 01:14:43,380
selection 70 67 24. uh what we have

1647
01:14:43,380 --> 01:14:45,300
proposed probably you remember the

1648
01:14:45,300 --> 01:14:46,560
discussion

1649
01:14:46,560 --> 01:14:49,440
um at the last meeting is something that

1650
01:14:49,440 --> 01:14:52,440
apparently uh could be let's say

1651
01:14:52,440 --> 01:14:55,320
criticized because it changes it swaps

1652
01:14:55,320 --> 01:14:58,520
the two steps defined by

1653
01:14:58,520 --> 01:15:01,679
6724 so instead of selecting first the

1654
01:15:01,679 --> 01:15:05,100
next up router we look first at the

1655
01:15:05,100 --> 01:15:07,380
source address

1656
01:15:07,380 --> 01:15:10,980
so that's about the the draft next slide

1657
01:15:10,980 --> 01:15:12,000
position

1658
01:15:12,000 --> 01:15:15,420
so what we uh what we did in the past

1659
01:15:15,420 --> 01:15:16,920
months

1660
01:15:16,920 --> 01:15:20,100
um there was a a request from the chairs

1661
01:15:20,100 --> 01:15:22,320
to refine the problem statement so we

1662
01:15:22,320 --> 01:15:25,020
have reviewed the introductory section

1663
01:15:25,020 --> 01:15:29,880
of the draft and uh uh at the ietf 114

1664
01:15:29,880 --> 01:15:33,179
we received also some feedback about the

1665
01:15:33,179 --> 01:15:37,560
content of the draft so we included also

1666
01:15:37,560 --> 01:15:41,280
um a kind of high level analysis on

1667
01:15:41,280 --> 01:15:44,219
provisioning domains and that brought to

1668
01:15:44,219 --> 01:15:48,239
the uh let's say review of a couple of

1669
01:15:48,239 --> 01:15:50,280
sections of our draft so section number

1670
01:15:50,280 --> 01:15:52,340
three which is about the

1671
01:15:52,340 --> 01:15:55,640
naval Discovery protocol analysis for

1672
01:15:55,640 --> 01:15:59,159
mhmp and section number five then we

1673
01:15:59,159 --> 01:16:01,699
also received a comment about

1674
01:16:01,699 --> 01:16:04,800
avoiding overlapping with other ongoing

1675
01:16:04,800 --> 01:16:08,400
drafts maybe that was read to another

1676
01:16:08,400 --> 01:16:11,640
draft that we posted some time ago I

1677
01:16:11,640 --> 01:16:13,560
guess not specifically this one but

1678
01:16:13,560 --> 01:16:15,960
anyway it was the right chance of giving

1679
01:16:15,960 --> 01:16:18,360
a kind of General revision to the

1680
01:16:18,360 --> 01:16:20,699
document so we hope we have done a

1681
01:16:20,699 --> 01:16:23,520
general cleaning now specifically on

1682
01:16:23,520 --> 01:16:25,860
provisioning domains and we can move to

1683
01:16:25,860 --> 01:16:28,739
the next slides please

1684
01:16:28,739 --> 01:16:30,719
um as I said we just did a first

1685
01:16:30,719 --> 01:16:33,300
analysis very high level so we don't

1686
01:16:33,300 --> 01:16:37,340
pretend it's complete and

1687
01:16:37,340 --> 01:16:40,500
we are really open to feedback and

1688
01:16:40,500 --> 01:16:42,780
suggestion from the from the working

1689
01:16:42,780 --> 01:16:44,040
group

1690
01:16:44,040 --> 01:16:44,900
um

1691
01:16:44,900 --> 01:16:48,420
we think we don't think that there are

1692
01:16:48,420 --> 01:16:51,179
still some a few open aspects we are not

1693
01:16:51,179 --> 01:16:54,060
completely sure about that but probably

1694
01:16:54,060 --> 01:16:55,219
um

1695
01:16:55,219 --> 01:16:58,020
let's say the issue is related on the

1696
01:16:58,020 --> 01:17:01,500
usage of of the apis

1697
01:17:01,500 --> 01:17:05,820
on a host or on a server let's say uh

1698
01:17:05,820 --> 01:17:09,300
how they are used by the application so

1699
01:17:09,300 --> 01:17:12,120
we have probably a couple of use cases

1700
01:17:12,120 --> 01:17:14,520
we would like to share with the

1701
01:17:14,520 --> 01:17:17,040
community just to have feedback so our

1702
01:17:17,040 --> 01:17:19,199
question is if there is interested in

1703
01:17:19,199 --> 01:17:22,440
doing so we would like to share through

1704
01:17:22,440 --> 01:17:26,640
the main list or any types of uh

1705
01:17:26,640 --> 01:17:29,159
offline discussions uh what we have

1706
01:17:29,159 --> 01:17:32,040
found so far one possibility as I said

1707
01:17:32,040 --> 01:17:33,540
that could be related to the usage of

1708
01:17:33,540 --> 01:17:36,480
the apis probably if you

1709
01:17:36,480 --> 01:17:40,080
um would use the bind

1710
01:17:40,080 --> 01:17:42,120
which is probably something on the

1711
01:17:42,120 --> 01:17:45,000
server side we will say no problem at

1712
01:17:45,000 --> 01:17:47,940
all so any type of solution works and

1713
01:17:47,940 --> 01:17:50,840
provisioning domains is more than fine

1714
01:17:50,840 --> 01:17:54,480
on the host side probably

1715
01:17:54,480 --> 01:17:56,840
um there could be something

1716
01:17:56,840 --> 01:18:01,260
open due to the usage of get other info

1717
01:18:01,260 --> 01:18:03,480
but here we are not completely expert so

1718
01:18:03,480 --> 01:18:05,520
we like to hear from the community

1719
01:18:05,520 --> 01:18:08,340
anyway we are open to the discussion if

1720
01:18:08,340 --> 01:18:10,440
there is any if there is interest we can

1721
01:18:10,440 --> 01:18:12,600
move on and share what we have found so

1722
01:18:12,600 --> 01:18:15,300
far next slide please

1723
01:18:15,300 --> 01:18:18,540
so next step I said provisioning domains

1724
01:18:18,540 --> 01:18:20,699
is something we would like to discuss so

1725
01:18:20,699 --> 01:18:24,179
if there is interest just uh get in

1726
01:18:24,179 --> 01:18:26,699
touch and we can share what we have

1727
01:18:26,699 --> 01:18:29,880
found and again if there is any feedback

1728
01:18:29,880 --> 01:18:32,520
or a proposal to extend the scope or

1729
01:18:32,520 --> 01:18:34,560
even criticism we are more than open to

1730
01:18:34,560 --> 01:18:37,380
accept that and also co-authoring is

1731
01:18:37,380 --> 01:18:41,219
welcome and that's it so far thank you

1732
01:18:41,219 --> 01:18:43,440
very good thank you

1733
01:18:43,440 --> 01:18:45,030
um

1734
01:18:45,030 --> 01:18:48,240
[Music]

1735
01:18:48,620 --> 01:18:51,000
Jen are we taking questions or are you a

1736
01:18:51,000 --> 01:18:52,980
shot of time go ahead okay uh

1737
01:18:52,980 --> 01:18:54,540
certification and so

1738
01:18:54,540 --> 01:18:56,880
um you have you followed the work in

1739
01:18:56,880 --> 01:18:59,280
interior that Eric was working on before

1740
01:18:59,280 --> 01:19:02,460
and I I think the the scope of that like

1741
01:19:02,460 --> 01:19:04,020
okay there was a myth working group that

1742
01:19:04,020 --> 01:19:05,340
was like a lot of work that was there

1743
01:19:05,340 --> 01:19:07,920
and the idea was to shorten the thing to

1744
01:19:07,920 --> 01:19:09,540
minimum thing required right so if you

1745
01:19:09,540 --> 01:19:11,600
want

1746
01:19:11,600 --> 01:19:13,560
so I think one of the things was

1747
01:19:13,560 --> 01:19:15,300
actually to scope it down right like to

1748
01:19:15,300 --> 01:19:17,100
the most useful use cases so if you want

1749
01:19:17,100 --> 01:19:19,080
to expand the scope probably like you

1750
01:19:19,080 --> 01:19:21,120
know try to go to Interior have like a

1751
01:19:21,120 --> 01:19:23,159
talk there at least to people who are

1752
01:19:23,159 --> 01:19:24,900
done the work before on the approaching

1753
01:19:24,900 --> 01:19:27,239
domain and to kind of see like you know

1754
01:19:27,239 --> 01:19:28,620
if there's going to be adoption on the

1755
01:19:28,620 --> 01:19:30,060
end host side because like one of the

1756
01:19:30,060 --> 01:19:32,400
things that myth kind of didn't succeed

1757
01:19:32,400 --> 01:19:34,140
in was like the n-host like had to have

1758
01:19:34,140 --> 01:19:35,880
a much smaller subset of things to do

1759
01:19:35,880 --> 01:19:38,760
right and so I really suggest you go

1760
01:19:38,760 --> 01:19:40,920
talk to like you know like Lorenzo who's

1761
01:19:40,920 --> 01:19:42,360
sitting here like you know or like

1762
01:19:42,360 --> 01:19:43,500
somebody who's on the North side like

1763
01:19:43,500 --> 01:19:46,260
Stuart who's in the itf2 to go and see

1764
01:19:46,260 --> 01:19:47,940
like if this is an issue they are facing

1765
01:19:47,940 --> 01:19:49,980
as well before you embark on more work

1766
01:19:49,980 --> 01:19:52,080
that's my suggestion thanks

1767
01:19:52,080 --> 01:19:54,000
for sure thank you for the suggestion as

1768
01:19:54,000 --> 01:19:56,580
I said the idea is not to extend the

1769
01:19:56,580 --> 01:19:58,440
scope of this draft we really want to

1770
01:19:58,440 --> 01:20:01,199
focus just on what we are discussing

1771
01:20:01,199 --> 01:20:04,560
there uh but it's because we received

1772
01:20:04,560 --> 01:20:06,120
you know a feedback at the previous

1773
01:20:06,120 --> 01:20:08,400
meeting so we just want to be sure that

1774
01:20:08,400 --> 01:20:10,380
we are not touching something that is

1775
01:20:10,380 --> 01:20:12,239
already there so we are not Reinventing

1776
01:20:12,239 --> 01:20:13,739
the wheel basically

1777
01:20:13,739 --> 01:20:16,040
thanks

1778
01:20:18,000 --> 01:20:20,159
Lauren the answer Lorenzo clearly just a

1779
01:20:20,159 --> 01:20:22,620
couple of comments I guess

1780
01:20:22,620 --> 01:20:24,659
um it's based on the slides really first

1781
01:20:24,659 --> 01:20:26,520
of all I think if you

1782
01:20:26,520 --> 01:20:29,100
like selecting the um the address before

1783
01:20:29,100 --> 01:20:30,600
you

1784
01:20:30,600 --> 01:20:33,120
before you do the the rooting lookup

1785
01:20:33,120 --> 01:20:35,580
probably like doesn't allow you to

1786
01:20:35,580 --> 01:20:37,020
implement like rule on which is to

1787
01:20:37,020 --> 01:20:38,460
prefer like avoid unreachable

1788
01:20:38,460 --> 01:20:40,440
destinations or something so thank you

1789
01:20:40,440 --> 01:20:42,000
you kind of like can't build a straight

1790
01:20:42,000 --> 01:20:44,400
line algorithm I think maybe you've

1791
01:20:44,400 --> 01:20:46,380
looked at this already

1792
01:20:46,380 --> 01:20:48,719
um and for applications

1793
01:20:48,719 --> 01:20:50,940
for your other questions around

1794
01:20:50,940 --> 01:20:51,600
um

1795
01:20:51,600 --> 01:20:54,000
should applications use you know bind or

1796
01:20:54,000 --> 01:20:55,860
you pass the hint and get that rinfo on

1797
01:20:55,860 --> 01:20:58,500
those on the source address to use

1798
01:20:58,500 --> 01:21:00,600
I would not advise relying on

1799
01:21:00,600 --> 01:21:03,239
applications to do that right like IPv6

1800
01:21:03,239 --> 01:21:04,679
or stress selection is actually really

1801
01:21:04,679 --> 01:21:07,260
hard and one of the decisions that we

1802
01:21:07,260 --> 01:21:08,820
made a long time ago in Android was to

1803
01:21:08,820 --> 01:21:11,460
like not require them to do bind they

1804
01:21:11,460 --> 01:21:12,960
basically bind to a provisioning domain

1805
01:21:12,960 --> 01:21:15,540
or a network and then the stack figures

1806
01:21:15,540 --> 01:21:17,219
out the source address it's way too

1807
01:21:17,219 --> 01:21:18,500
difficult because you have to figure out

1808
01:21:18,500 --> 01:21:22,020
basically you have to implement most of

1809
01:21:22,020 --> 01:21:24,060
6724 in the app

1810
01:21:24,060 --> 01:21:25,620
because you have to you know prefer

1811
01:21:25,620 --> 01:21:27,600
temporary addresses you know like avoid

1812
01:21:27,600 --> 01:21:28,980
deprecated addresses you know well

1813
01:21:28,980 --> 01:21:31,500
that's really hard so

1814
01:21:31,500 --> 01:21:34,440
um yeah I'm happy to talk about this uh

1815
01:21:34,440 --> 01:21:38,719
offline now sure thanks

1816
01:21:38,760 --> 01:21:41,880
okay so guess no more questions

1817
01:21:41,880 --> 01:21:44,340
thank you

1818
01:21:44,340 --> 01:21:49,800
okay and next so mean I guess remote

1819
01:21:49,800 --> 01:21:52,460
right

1820
01:21:55,020 --> 01:21:57,440
yes

1821
01:22:00,300 --> 01:22:02,780
okay

1822
01:22:05,400 --> 01:22:08,480
okay no I think

1823
01:22:10,400 --> 01:22:15,239
only speaking this presentation is very

1824
01:22:15,239 --> 01:22:18,600
for enabled Institute OEM capabilities

1825
01:22:18,600 --> 01:22:21,179
this is the third time I presented in

1826
01:22:21,179 --> 01:22:23,360
English

1827
01:22:25,560 --> 01:22:28,199
this is the recap of this draft

1828
01:22:28,199 --> 01:22:31,380
this job defines icmb extensions to

1829
01:22:31,380 --> 01:22:34,739
achieve iom abilities Discovery in

1830
01:22:34,739 --> 01:22:37,739
avi-based extent works this chapter is a

1831
01:22:37,739 --> 01:22:39,840
campaigning document of ibpm working

1832
01:22:39,840 --> 01:22:41,100
group jobs

1833
01:22:41,100 --> 01:22:44,880
this chapter defines rdb6 node iom

1834
01:22:44,880 --> 01:22:47,340
information currently mechanism

1835
01:22:47,340 --> 01:22:49,320
for this mechanism

1836
01:22:49,320 --> 01:22:53,100
six iom capabilities objects are defined

1837
01:22:53,100 --> 01:22:56,179
just like this

1838
01:22:59,699 --> 01:23:03,719
the corresponding IBM document describes

1839
01:23:03,719 --> 01:23:06,600
a generic format for iom capabilities

1840
01:23:06,600 --> 01:23:08,219
discovery

1841
01:23:08,219 --> 01:23:13,800
that can be used in rb6 MPS SMC and fear

1842
01:23:13,800 --> 01:23:18,000
this rppm job is currently in IST

1843
01:23:18,000 --> 01:23:19,679
evaluation

1844
01:23:19,679 --> 01:23:22,760
no societies

1845
01:23:24,360 --> 01:23:26,699
the zero zero version draft was

1846
01:23:26,699 --> 01:23:30,960
presented at ITF iitf 112 and the zero

1847
01:23:30,960 --> 01:23:34,280
one version draft was presented to that

1848
01:23:34,280 --> 01:23:37,940
itf114 the latest version is zero two

1849
01:23:37,940 --> 01:23:40,920
the maintained in zero two version is

1850
01:23:40,920 --> 01:23:41,780
that

1851
01:23:41,780 --> 01:23:44,699
IPv6 node information messages

1852
01:23:44,699 --> 01:23:47,060
defined in obviously

1853
01:23:47,060 --> 01:23:51,659
4620 are reused in some extensions to

1854
01:23:51,659 --> 01:23:55,280
those messages described

1855
01:23:58,080 --> 01:24:00,620
this page shows the update will probably

1856
01:24:00,620 --> 01:24:06,239
SMP V6 format in this format a new queue

1857
01:24:06,239 --> 01:24:08,699
type and the new codes are defined in

1858
01:24:08,699 --> 01:24:10,140
this draft

1859
01:24:10,140 --> 01:24:13,199
data field reuses what's defined in the

1860
01:24:13,199 --> 01:24:15,780
companion ibpm document

1861
01:24:15,780 --> 01:24:19,980
furthermore the data field in IPv6 node

1862
01:24:19,980 --> 01:24:22,920
information reply we use this icmp

1863
01:24:22,920 --> 01:24:26,600
extension structure defined in RC

1864
01:24:26,600 --> 01:24:29,699
4084 to carry the IM capabilities

1865
01:24:29,699 --> 01:24:33,799
objects next practice

1866
01:24:34,620 --> 01:24:37,020
this is the format of iom capabilities

1867
01:24:37,020 --> 01:24:38,340
object

1868
01:24:38,340 --> 01:24:41,400
actually is format has no change in a

1869
01:24:41,400 --> 01:24:42,780
zero two version

1870
01:24:42,780 --> 01:24:48,199
put here just for completeness exercises

1871
01:24:50,880 --> 01:24:54,840
this page shows an example of IPv6 and I

1872
01:24:54,840 --> 01:24:58,500
query and IPv6 then I reply

1873
01:24:58,500 --> 01:25:01,340
necessities

1874
01:25:04,440 --> 01:25:07,860
there is an open question considering of

1875
01:25:07,860 --> 01:25:09,140
the

1876
01:25:09,140 --> 01:25:13,380
4620 is an experimental I see uh what

1877
01:25:13,380 --> 01:25:16,760
category does this job belong to

1878
01:25:16,760 --> 01:25:20,699
experimental standard track or others

1879
01:25:20,699 --> 01:25:23,340
the authors believe this question can be

1880
01:25:23,340 --> 01:25:25,679
answered after working group adoption if

1881
01:25:25,679 --> 01:25:28,140
this working group would like to adopt

1882
01:25:28,140 --> 01:25:30,120
this job

1883
01:25:30,120 --> 01:25:33,199
that's like this

1884
01:25:34,020 --> 01:25:37,320
uh yes the authors ask for working for

1885
01:25:37,320 --> 01:25:39,000
production

1886
01:25:39,000 --> 01:25:42,320
thank you that's all

1887
01:25:42,659 --> 01:25:47,880
okay thank you any comments on the mic

1888
01:25:47,880 --> 01:25:50,840
Q is

1889
01:25:51,920 --> 01:25:55,940
run the call on the list

1890
01:25:55,940 --> 01:26:01,099
okay next Edward

1891
01:26:09,600 --> 01:26:13,380
okay fine good afternoon everybody do

1892
01:26:13,380 --> 01:26:14,580
you hear me

1893
01:26:14,580 --> 01:26:19,679
yes we do okay next slide please

1894
01:26:19,679 --> 01:26:21,420
I will remind for start a little bit

1895
01:26:21,420 --> 01:26:24,540
what is it about uh we still have a

1896
01:26:24,540 --> 01:26:26,659
security problem on the link because

1897
01:26:26,659 --> 01:26:29,840
initially everybody believed that

1898
01:26:29,840 --> 01:26:32,940
encryption will protect Navy Discovery

1899
01:26:32,940 --> 01:26:34,739
protocol initially it was apsec then

1900
01:26:34,739 --> 01:26:37,080
send but then it has been discovered

1901
01:26:37,080 --> 01:26:38,820
that it's a challenge not just because

1902
01:26:38,820 --> 01:26:40,560
of encryption encryption by itself is

1903
01:26:40,560 --> 01:26:43,199
easy it was a problem because for

1904
01:26:43,199 --> 01:26:47,100
encryption you need to somehow to

1905
01:26:47,100 --> 01:26:49,080
to some trust Authority some trust

1906
01:26:49,080 --> 01:26:51,060
anchor you need to some somehow to do

1907
01:26:51,060 --> 01:26:52,620
Key Management which is which is really

1908
01:26:52,620 --> 01:26:54,780
a big problem for many Enterprises and

1909
01:26:54,780 --> 01:26:58,020
for the reason uh apcx and uh has not

1910
01:26:58,020 --> 01:27:00,420
become popular uh it means that it's

1911
01:27:00,420 --> 01:27:02,940
still possible uh to pretend to be men

1912
01:27:02,940 --> 01:27:04,820
in the middle it's still possible to

1913
01:27:04,820 --> 01:27:08,340
hijack some communication on the link if

1914
01:27:08,340 --> 01:27:09,719
you are on the link of course you need

1915
01:27:09,719 --> 01:27:12,179
to be on the link but okay uh it's

1916
01:27:12,179 --> 01:27:14,100
potentially possible in some situations

1917
01:27:14,100 --> 01:27:16,380
it's still it's still a problem at the

1918
01:27:16,380 --> 01:27:19,280
same time we see that blockchain

1919
01:27:19,280 --> 01:27:22,760
Bitcoin they have a good progress

1920
01:27:22,760 --> 01:27:25,380
without trust to anybody without trust

1921
01:27:25,380 --> 01:27:27,480
or anchor but the reason it's possible

1922
01:27:27,480 --> 01:27:29,760
to develop something like CJ light

1923
01:27:29,760 --> 01:27:32,940
something like simple version which will

1924
01:27:32,940 --> 01:27:34,159
connect

1925
01:27:34,159 --> 01:27:37,080
IP address not to the public key or

1926
01:27:37,080 --> 01:27:39,480
private key as it was in incent for

1927
01:27:39,480 --> 01:27:41,580
example public private key but connected

1928
01:27:41,580 --> 01:27:43,679
to the MAC address which is by the way

1929
01:27:43,679 --> 01:27:47,520
in many cases are already more less

1930
01:27:47,520 --> 01:27:49,440
protected especially in Wireless Enviro

1931
01:27:49,440 --> 01:27:52,199
is typically is encryption protected and

1932
01:27:52,199 --> 01:27:56,580
even for Wired dot One X is typically in

1933
01:27:56,580 --> 01:27:58,260
many cases not always of course but in

1934
01:27:58,260 --> 01:28:00,780
many cases implemented anyway we are

1935
01:28:00,780 --> 01:28:02,520
dependent on layer 2 if layer 2 will

1936
01:28:02,520 --> 01:28:04,860
deliver packet not in proper destination

1937
01:28:04,860 --> 01:28:08,280
then it's anyway a problem please next

1938
01:28:08,280 --> 01:28:10,639
slide

1939
01:28:11,639 --> 01:28:13,500
we have intention to repeat the solution

1940
01:28:13,500 --> 01:28:15,719
but it's very simple you need to collect

1941
01:28:15,719 --> 01:28:18,960
all relevant information hash it hash

1942
01:28:18,960 --> 01:28:21,360
and hash and hash again till uh you will

1943
01:28:21,360 --> 01:28:25,139
get some number of leading zeros and

1944
01:28:25,139 --> 01:28:28,320
then if you have an athlete in zeros up

1945
01:28:28,320 --> 01:28:30,500
to you it's up to your security

1946
01:28:30,500 --> 01:28:34,500
requirement then some number of bits for

1947
01:28:34,500 --> 01:28:37,080
example tail tail bits 60 bits could be

1948
01:28:37,080 --> 01:28:41,600
used as an interface ID go next

1949
01:28:42,199 --> 01:28:46,560
uh it supports uh pretty much almost

1950
01:28:46,560 --> 01:28:49,139
everything it's compatible to Temporary

1951
01:28:49,139 --> 01:28:51,420
macro temporary AP address of course for

1952
01:28:51,420 --> 01:28:54,420
temporary Mac if it's a short-lived then

1953
01:28:54,420 --> 01:28:55,860
you need to regenerate it again to do

1954
01:28:55,860 --> 01:28:58,199
hash again to to find a new combination

1955
01:28:58,199 --> 01:29:00,120
of Mac IP which you would like to use if

1956
01:29:00,120 --> 01:29:01,860
you will change MAC or you would try to

1957
01:29:01,860 --> 01:29:04,340
change AP it's of course

1958
01:29:04,340 --> 01:29:06,600
a little bit challenge but it's not a

1959
01:29:06,600 --> 01:29:08,400
big problem it's compatible to almost

1960
01:29:08,400 --> 01:29:10,920
everything except except maybe uh one

1961
01:29:10,920 --> 01:29:13,620
point it does not protect against denial

1962
01:29:13,620 --> 01:29:15,300
of service because but by the way

1963
01:29:15,300 --> 01:29:17,100
encryption does not protect against the

1964
01:29:17,100 --> 01:29:19,020
network service too because if somebody

1965
01:29:19,020 --> 01:29:21,000
will try to make a lot of connections to

1966
01:29:21,000 --> 01:29:24,420
you that then it will not help what is

1967
01:29:24,420 --> 01:29:26,520
really just one restriction that uh

1968
01:29:26,520 --> 01:29:29,460
because here only Mac to AP relationship

1969
01:29:29,460 --> 01:29:33,420
is checked uh it is not a check who is

1970
01:29:33,420 --> 01:29:36,540
the router because the router everybody

1971
01:29:36,540 --> 01:29:39,600
could claim I I'm the router and it

1972
01:29:39,600 --> 01:29:41,460
means that era guard filtering on some

1973
01:29:41,460 --> 01:29:43,860
switch your own it's still needed there

1974
01:29:43,860 --> 01:29:45,420
are therefore it's not a replacement for

1975
01:29:45,420 --> 01:29:49,020
a regard next slide please

1976
01:29:49,020 --> 01:29:52,320
what has changed science last time there

1977
01:29:52,320 --> 01:29:54,300
were a few comments primarily on the

1978
01:29:54,300 --> 01:29:56,880
last ATF and one comment on the Alias

1979
01:29:56,880 --> 01:30:00,300
and to reflect what has been asked in in

1980
01:30:00,300 --> 01:30:02,639
the comments uh it the text has been

1981
01:30:02,639 --> 01:30:04,440
changed a little bit it has been

1982
01:30:04,440 --> 01:30:06,780
discussed that typically layer 2 is

1983
01:30:06,780 --> 01:30:09,900
already protected by encryption it has

1984
01:30:09,900 --> 01:30:12,179
been discussed what will happen if it

1985
01:30:12,179 --> 01:30:14,300
would be duplicate

1986
01:30:14,300 --> 01:30:17,100
MAC address on the link somebody will

1987
01:30:17,100 --> 01:30:18,960
try to be duplicated it's probably will

1988
01:30:18,960 --> 01:30:21,659
create flapping and no no one will work

1989
01:30:21,659 --> 01:30:24,300
anyway it has been discussed what uh

1990
01:30:24,300 --> 01:30:27,239
that Mark changes the same complexity as

1991
01:30:27,239 --> 01:30:29,340
AP change it means no it's more or less

1992
01:30:29,340 --> 01:30:33,139
easy and some some small other comments

1993
01:30:33,139 --> 01:30:37,440
it looks like from not very big feedback

1994
01:30:37,440 --> 01:30:40,739
from ATF or Alias it looks like the

1995
01:30:40,739 --> 01:30:43,199
problem is not so much interested okay

1996
01:30:43,199 --> 01:30:45,120
but it's still security problem for

1997
01:30:45,120 --> 01:30:48,239
which we have Savvy development which is

1998
01:30:48,239 --> 01:30:51,139
deep filter and on switches we have

1999
01:30:51,139 --> 01:30:53,880
initially sand and we have after this

2000
01:30:53,880 --> 01:30:56,400
HBA and we have we have we have many

2001
01:30:56,400 --> 01:30:59,280
things uh before in the past when we

2002
01:30:59,280 --> 01:31:02,940
were trying to protect the link layer uh

2003
01:31:02,940 --> 01:31:05,340
and it's still still not protected for

2004
01:31:05,340 --> 01:31:07,260
that reason it looks like important

2005
01:31:07,260 --> 01:31:10,739
topic but from not much not much

2006
01:31:10,739 --> 01:31:12,420
interest yet therefore I will be happy

2007
01:31:12,420 --> 01:31:15,420
if anybody will join this particular

2008
01:31:15,420 --> 01:31:18,840
draft especially on a blockchain site

2009
01:31:18,840 --> 01:31:21,600
because uh maybe my understanding from

2010
01:31:21,600 --> 01:31:24,300
blockchain is not the best and if you

2011
01:31:24,300 --> 01:31:26,040
will look to the draft you will see that

2012
01:31:26,040 --> 01:31:28,620
it's a lot about blockchain it's a lot

2013
01:31:28,620 --> 01:31:30,960
about the proper calculation the

2014
01:31:30,960 --> 01:31:32,639
challenge the proper calculation of

2015
01:31:32,639 --> 01:31:34,560
parameters which needed for blockchain

2016
01:31:34,560 --> 01:31:35,820
to work properly for that reason

2017
01:31:35,820 --> 01:31:37,739
especially if somebody is good on

2018
01:31:37,739 --> 01:31:39,540
blockchain and will join me I will be

2019
01:31:39,540 --> 01:31:42,659
happy but anyway any feedback is welcome

2020
01:31:42,659 --> 01:31:45,620
foreign

2021
01:31:48,900 --> 01:31:51,850
suggestions

2022
01:31:51,850 --> 01:31:54,179
[Music]

2023
01:31:54,179 --> 01:31:57,300
silence thank you okay yes I guess we'll

2024
01:31:57,300 --> 01:31:59,340
continue discussion on the list

2025
01:31:59,340 --> 01:32:03,120
thank you Pascal

2026
01:32:10,440 --> 01:32:12,440
s

2027
01:32:14,520 --> 01:32:17,520
foreign

2028
01:32:27,260 --> 01:32:30,000
that for some subject in this group

2029
01:32:30,000 --> 01:32:32,280
there is there is over the years there's

2030
01:32:32,280 --> 01:32:33,900
a lot of work which has happened for

2031
01:32:33,900 --> 01:32:36,239
instance in how we we configure an

2032
01:32:36,239 --> 01:32:38,219
interface ID that all those rfcs which

2033
01:32:38,219 --> 01:32:40,380
impact all those other RSC so it means

2034
01:32:40,380 --> 01:32:42,420
that sometimes we spend a lot of time on

2035
01:32:42,420 --> 01:32:44,699
some primes next slide

2036
01:32:44,699 --> 01:32:46,860
on the other hand and some other primes

2037
01:32:46,860 --> 01:32:49,139
we have not spent so much time and

2038
01:32:49,139 --> 01:32:51,480
energy and we are still living on

2039
01:32:51,480 --> 01:32:53,340
assumptions that we narrated from the

2040
01:32:53,340 --> 01:32:56,520
times of ipv4 and in particular what

2041
01:32:56,520 --> 01:32:59,820
subnet is what an IP Link is are still

2042
01:32:59,820 --> 01:33:02,699
concept that we've built more than 20

2043
01:33:02,699 --> 01:33:04,860
years ago and we're still living with

2044
01:33:04,860 --> 01:33:06,360
this mind image Without Really

2045
01:33:06,360 --> 01:33:08,340
specifying what it is

2046
01:33:08,340 --> 01:33:10,440
next slide

2047
01:33:10,440 --> 01:33:12,540
now for the last 15 euros there were

2048
01:33:12,540 --> 01:33:14,460
groups in the ATF which have been

2049
01:33:14,460 --> 01:33:17,040
working on how you do IPv6 over radios

2050
01:33:17,040 --> 01:33:19,920
and this includes many this includes raw

2051
01:33:19,920 --> 01:33:22,020
this includes six low parents six low

2052
01:33:22,020 --> 01:33:24,420
number of working groups and those

2053
01:33:24,420 --> 01:33:27,060
working groups using Wireless discovered

2054
01:33:27,060 --> 01:33:28,860
that the traditional model that we had

2055
01:33:28,860 --> 01:33:31,739
in mind did not fit the reality of the

2056
01:33:31,739 --> 01:33:33,960
networks you could build with radios

2057
01:33:33,960 --> 01:33:36,780
so this raised a number of questions

2058
01:33:36,780 --> 01:33:40,320
and we realized that the model where the

2059
01:33:40,320 --> 01:33:42,840
link the broadcast domain the layer

2060
01:33:42,840 --> 01:33:44,639
tooling came in and the broadcast domain

2061
01:33:44,639 --> 01:33:47,040
I have to be congruent with the subnet

2062
01:33:47,040 --> 01:33:50,520
and the AP link could not survive over

2063
01:33:50,520 --> 01:33:52,380
Wireless links

2064
01:33:52,380 --> 01:33:55,080
and we also realized that there was a

2065
01:33:55,080 --> 01:33:57,480
lot of power actually not trying to

2066
01:33:57,480 --> 01:34:00,780
maintain them concrete

2067
01:34:00,780 --> 01:34:03,000
and we found that the old view of

2068
01:34:03,000 --> 01:34:04,800
looking at what a link is or what the

2069
01:34:04,800 --> 01:34:07,980
subnet is was actually damaging to power

2070
01:34:07,980 --> 01:34:10,739
to Spectrum efficiency and now that we

2071
01:34:10,739 --> 01:34:13,560
care for it for energy use utilization

2072
01:34:13,560 --> 01:34:14,639
in general

2073
01:34:14,639 --> 01:34:16,860
next slide please

2074
01:34:16,860 --> 01:34:20,100
so if we look in more detail what all

2075
01:34:20,100 --> 01:34:24,000
those groups converge to is that the the

2076
01:34:24,000 --> 01:34:27,540
link that IP needs for wireless

2077
01:34:27,540 --> 01:34:29,219
is not

2078
01:34:29,219 --> 01:34:29,820
um

2079
01:34:29,820 --> 01:34:32,820
a complex structural with many nodes on

2080
01:34:32,820 --> 01:34:34,980
them we ended up building IP links which

2081
01:34:34,980 --> 01:34:37,560
were always point to point

2082
01:34:37,560 --> 01:34:39,840
and if you think about for a second

2083
01:34:39,840 --> 01:34:42,719
about what a link local address is on

2084
01:34:42,719 --> 01:34:44,820
the radio

2085
01:34:44,820 --> 01:34:46,679
um what what that should be and how you

2086
01:34:46,679 --> 01:34:48,300
would do that I mean you take your radio

2087
01:34:48,300 --> 01:34:49,860
with you and you go across the world

2088
01:34:49,860 --> 01:34:52,500
when do you do that how long can you

2089
01:34:52,500 --> 01:34:55,139
expect that your address is unique so

2090
01:34:55,139 --> 01:34:57,480
what is this link on which you configure

2091
01:34:57,480 --> 01:34:59,400
your link local address and for which

2092
01:34:59,400 --> 01:35:02,580
you can expect it's going to stay unique

2093
01:35:02,580 --> 01:35:06,000
and we ended up figuring out that the

2094
01:35:06,000 --> 01:35:08,760
link has to be a handshake an agreement

2095
01:35:08,760 --> 01:35:10,560
between two nodes

2096
01:35:10,560 --> 01:35:13,020
and within that agreement between two

2097
01:35:13,020 --> 01:35:15,060
nodes then your link Loco can be

2098
01:35:15,060 --> 01:35:17,400
confirmed as being unique

2099
01:35:17,400 --> 01:35:20,340
and so that's why we built the the IP

2100
01:35:20,340 --> 01:35:21,719
links regardless of what the broadcast

2101
01:35:21,719 --> 01:35:23,340
domain is and you know on radio the

2102
01:35:23,340 --> 01:35:25,380
broadcast domain can be a lot of stuff

2103
01:35:25,380 --> 01:35:28,800
but we we considered we still consider

2104
01:35:28,800 --> 01:35:32,639
always that a link an ipa6 link is a

2105
01:35:32,639 --> 01:35:34,620
pair of guys that agree that they will

2106
01:35:34,620 --> 01:35:36,659
use this pair of Link local addresses to

2107
01:35:36,659 --> 01:35:38,040
converse

2108
01:35:38,040 --> 01:35:40,620
it might be that on my radio interface I

2109
01:35:40,620 --> 01:35:43,260
build more than one link so my interface

2110
01:35:43,260 --> 01:35:45,360
and my links and my links are not the

2111
01:35:45,360 --> 01:35:47,340
same thing I can have multiple IP links

2112
01:35:47,340 --> 01:35:50,159
with multiple peers and it might be that

2113
01:35:50,159 --> 01:35:53,100
I cannot form a single link local which

2114
01:35:53,100 --> 01:35:54,719
will which will be unique for all those

2115
01:35:54,719 --> 01:35:56,340
peers doesn't matter for each of those

2116
01:35:56,340 --> 01:35:58,679
peers I can build a different link lock

2117
01:35:58,679 --> 01:35:59,760
address

2118
01:35:59,760 --> 01:36:02,100
oh by the way those typo which is

2119
01:36:02,100 --> 01:36:04,440
usually reflexive and often asymmetrical

2120
01:36:04,440 --> 01:36:06,239
is the radio link not the IPv6 link

2121
01:36:06,239 --> 01:36:09,300
obviously and same thing for transitive

2122
01:36:09,300 --> 01:36:11,699
next slide please

2123
01:36:11,699 --> 01:36:14,219
and the same discussion happened for

2124
01:36:14,219 --> 01:36:16,380
what is a subnet

2125
01:36:16,380 --> 01:36:17,400
um

2126
01:36:17,400 --> 01:36:19,500
used to be that your subnet was your

2127
01:36:19,500 --> 01:36:21,120
broadcast domain so I have the switch

2128
01:36:21,120 --> 01:36:23,940
fabric I run spending tree or l2r and

2129
01:36:23,940 --> 01:36:26,699
and I can basically broadcast to a

2130
01:36:26,699 --> 01:36:29,219
certain number of nodes and my Subnet

2131
01:36:29,219 --> 01:36:31,500
will be this set of nodes or maybe a

2132
01:36:31,500 --> 01:36:34,080
subset of this set of nodes so it will

2133
01:36:34,080 --> 01:36:35,580
be contained within the broadcast domain

2134
01:36:35,580 --> 01:36:37,560
and then again this is really damaging

2135
01:36:37,560 --> 01:36:39,480
when we want to build a radio network

2136
01:36:39,480 --> 01:36:42,060
and we do we can build networks which

2137
01:36:42,060 --> 01:36:44,580
tons of our kilometers and have

2138
01:36:44,580 --> 01:36:46,800
thousands of nodes and we do build those

2139
01:36:46,800 --> 01:36:48,600
networks there are thousands of nodes in

2140
01:36:48,600 --> 01:36:50,219
them and certainly they are not

2141
01:36:50,219 --> 01:36:52,139
contained within a single broadcast

2142
01:36:52,139 --> 01:36:53,400
domain

2143
01:36:53,400 --> 01:36:57,139
so we we basically build three sorts of

2144
01:36:57,139 --> 01:37:00,120
topologies on which we can apply a

2145
01:37:00,120 --> 01:37:02,940
subnet the simplest is the same as your

2146
01:37:02,940 --> 01:37:04,980
IP Link so it's going to be a pair of

2147
01:37:04,980 --> 01:37:07,260
nodes and let's decide that we have this

2148
01:37:07,260 --> 01:37:09,480
prefix and it's let's form this prefix

2149
01:37:09,480 --> 01:37:12,420
about this subnet or if you look at

2150
01:37:12,420 --> 01:37:14,699
Network like Bluetooth energy for

2151
01:37:14,699 --> 01:37:16,920
instance then it makes sense to Define

2152
01:37:16,920 --> 01:37:21,659
that coordinator is a hub and provides

2153
01:37:21,659 --> 01:37:24,360
the prefix and then all the devices

2154
01:37:24,360 --> 01:37:27,560
attached to this coordinator will build

2155
01:37:27,560 --> 01:37:29,940
autoconf or whatever notarize from the

2156
01:37:29,940 --> 01:37:32,159
prefix of that Hub so you build the Hub

2157
01:37:32,159 --> 01:37:34,440
and spoke and the router is typically

2158
01:37:34,440 --> 01:37:36,300
The Hub

2159
01:37:36,300 --> 01:37:39,300
and now when building larger Fabrics

2160
01:37:39,300 --> 01:37:42,300
larger networks uh we build what we you

2161
01:37:42,300 --> 01:37:45,179
know so-called mesh and with ripple it's

2162
01:37:45,179 --> 01:37:46,860
it's a rot of our mesh we route over

2163
01:37:46,860 --> 01:37:49,679
this mesh and you see the links are

2164
01:37:49,679 --> 01:37:52,679
again point to point uh connection

2165
01:37:52,679 --> 01:37:56,400
between devices and the subnet is more

2166
01:37:56,400 --> 01:37:58,500
or less administratively decided all the

2167
01:37:58,500 --> 01:38:01,860
nodes which form addresses from the same

2168
01:38:01,860 --> 01:38:04,800
mesh prefix and participate to the same

2169
01:38:04,800 --> 01:38:08,280
routing inside that mesh will be known

2170
01:38:08,280 --> 01:38:11,900
to the same prefix and this allows to

2171
01:38:11,900 --> 01:38:15,060
administratively decide

2172
01:38:15,060 --> 01:38:17,580
the size of your of your subnet what the

2173
01:38:17,580 --> 01:38:20,219
subnet will be Etc so you you gain a

2174
01:38:20,219 --> 01:38:23,340
full freedom of deploying your subnet

2175
01:38:23,340 --> 01:38:26,460
over any topology including overlays

2176
01:38:26,460 --> 01:38:29,100
next slide

2177
01:38:29,100 --> 01:38:33,960
so to build this IPv6 NDS was built 25

2178
01:38:33,960 --> 01:38:36,000
years ago

2179
01:38:36,000 --> 01:38:36,659
um

2180
01:38:36,659 --> 01:38:39,540
as a number of I would say unmet

2181
01:38:39,540 --> 01:38:42,780
expectation the First full and met

2182
01:38:42,780 --> 01:38:46,679
expectation is that ND was defined for a

2183
01:38:46,679 --> 01:38:49,260
network where broadcast was cheap and

2184
01:38:49,260 --> 01:38:50,340
reliable

2185
01:38:50,340 --> 01:38:52,739
and we know that even though for

2186
01:38:52,739 --> 01:38:56,219
instance a 2.11 with the BSS can emulate

2187
01:38:56,219 --> 01:38:58,440
a broadcast it's neither labeled not

2188
01:38:58,440 --> 01:39:00,480
cheap

2189
01:39:00,480 --> 01:39:03,179
then the other expectation is is that

2190
01:39:03,179 --> 01:39:05,880
the links are transitive effect and CB

2191
01:39:05,880 --> 01:39:09,540
and B can CC then a can CC and when you

2192
01:39:09,540 --> 01:39:12,420
build a radio mesh clearly at some point

2193
01:39:12,420 --> 01:39:14,159
your broadcast domain which your radio

2194
01:39:14,159 --> 01:39:15,380
can reach

2195
01:39:15,380 --> 01:39:18,480
cannot get to any of our devices for

2196
01:39:18,480 --> 01:39:20,159
which you need to relay

2197
01:39:20,159 --> 01:39:22,320
so this is why when we build money or

2198
01:39:22,320 --> 01:39:25,380
iot iot networks we really we relay at

2199
01:39:25,380 --> 01:39:27,060
least three we wrote

2200
01:39:27,060 --> 01:39:29,820
this allows us to save a lot of energy

2201
01:39:29,820 --> 01:39:31,380
because we don't rely on broadcast

2202
01:39:31,380 --> 01:39:32,580
anymore

2203
01:39:32,580 --> 01:39:34,560
and that also allows us to

2204
01:39:34,560 --> 01:39:36,300
administratively Define you know what

2205
01:39:36,300 --> 01:39:38,820
the subnet will be so we we gain a full

2206
01:39:38,820 --> 01:39:42,360
freedom of defining what IPv6 will see

2207
01:39:42,360 --> 01:39:46,980
regardless of what ipv2 layer 2 gives us

2208
01:39:46,980 --> 01:39:48,600
now there are a number of other

2209
01:39:48,600 --> 01:39:50,340
mismatches but I don't have that much

2210
01:39:50,340 --> 01:39:52,739
time next slide please

2211
01:39:52,739 --> 01:39:56,100
so just for the sake of of showing this

2212
01:39:56,100 --> 01:39:59,159
room we we have done a number of rfcs

2213
01:39:59,159 --> 01:40:01,679
into those are working groups I have a

2214
01:40:01,679 --> 01:40:04,800
list later which basically tell us how

2215
01:40:04,800 --> 01:40:07,800
we could do neighbor Discovery in a more

2216
01:40:07,800 --> 01:40:10,080
deterministic fashion so we know better

2217
01:40:10,080 --> 01:40:13,080
which addresses are used where and you

2218
01:40:13,080 --> 01:40:15,360
know in many enrolled the the addresses

2219
01:40:15,360 --> 01:40:18,060
move in Wi-Fi as well so we want to be

2220
01:40:18,060 --> 01:40:20,300
able to know what is the latest location

2221
01:40:20,300 --> 01:40:22,320
deterministically and the more we want

2222
01:40:22,320 --> 01:40:23,940
to have many many addresses or devices

2223
01:40:23,940 --> 01:40:26,520
the more we need to know precisely the

2224
01:40:26,520 --> 01:40:28,020
ones that are still in use and where

2225
01:40:28,020 --> 01:40:28,980
they are

2226
01:40:28,980 --> 01:40:31,020
and if we know deterministically which

2227
01:40:31,020 --> 01:40:33,060
address is where then we can establish

2228
01:40:33,060 --> 01:40:36,239
routing between well the small routers

2229
01:40:36,239 --> 01:40:38,940
which will form your subnet

2230
01:40:38,940 --> 01:40:42,480
so we we have defined uh with RFC 8505

2231
01:40:42,480 --> 01:40:44,820
what we call stateful address of the

2232
01:40:44,820 --> 01:40:48,000
configuration or Wireless ND and that

2233
01:40:48,000 --> 01:40:51,179
allows basically the host to uh declare

2234
01:40:51,179 --> 01:40:54,540
Etc to the router without any broadcast

2235
01:40:54,540 --> 01:40:55,980
and you know that probably the biggest

2236
01:40:55,980 --> 01:40:58,260
slide that's still around is the fact

2237
01:40:58,260 --> 01:41:00,719
that IPv6 doesn't use broadcast IPv6

2238
01:41:00,719 --> 01:41:03,840
uses more broadcast than ipv4

2239
01:41:03,840 --> 01:41:06,480
now the second thing we did is the

2240
01:41:06,480 --> 01:41:08,100
capability to

2241
01:41:08,100 --> 01:41:11,840
um interrupt between registration in

2242
01:41:11,840 --> 01:41:16,560
854405 and a classical ND

2243
01:41:16,560 --> 01:41:19,020
but what that we call backbone and this

2244
01:41:19,020 --> 01:41:20,940
is pretty much the flow that that is

2245
01:41:20,940 --> 01:41:23,460
Illustrated here if you couple the

2246
01:41:23,460 --> 01:41:25,320
registration and all that then you can

2247
01:41:25,320 --> 01:41:28,739
connect to the network quite rapidly

2248
01:41:28,739 --> 01:41:31,620
and as you build this you realize that

2249
01:41:31,620 --> 01:41:33,060
for instance in this case the six

2250
01:41:33,060 --> 01:41:34,340
cylinder station

2251
01:41:34,340 --> 01:41:36,960
can be on a network a physical Network

2252
01:41:36,960 --> 01:41:38,280
which is very different from the

2253
01:41:38,280 --> 01:41:39,659
backbone or it could be on the same

2254
01:41:39,659 --> 01:41:40,980
network I mean this really doesn't

2255
01:41:40,980 --> 01:41:43,320
matter or it could be on a network where

2256
01:41:43,320 --> 01:41:47,040
the MAC address is not breachable with

2257
01:41:47,040 --> 01:41:48,840
um the the backbone so for instance you

2258
01:41:48,840 --> 01:41:50,420
can do it for 80

2259
01:41:50,420 --> 01:41:53,400
82.54 which eight bytes much MAC address

2260
01:41:53,400 --> 01:41:55,980
on the left and still ethernet on the

2261
01:41:55,980 --> 01:41:57,300
right

2262
01:41:57,300 --> 01:42:00,320
next slide please

2263
01:42:02,520 --> 01:42:06,179
so this is the the family of rfcs and

2264
01:42:06,179 --> 01:42:08,219
drafting progress that were built on

2265
01:42:08,219 --> 01:42:10,679
that model so we started with the

2266
01:42:10,679 --> 01:42:13,800
original six slope and ND which was 6775

2267
01:42:13,800 --> 01:42:17,940
that we extended with 8505 to to be what

2268
01:42:17,940 --> 01:42:20,520
is really implemented today

2269
01:42:20,520 --> 01:42:24,719
and two years later we shipped uh 8928

2270
01:42:24,719 --> 01:42:28,380
so what is n928 that's the answer of uh

2271
01:42:28,380 --> 01:42:31,340
what what does sand become in this world

2272
01:42:31,340 --> 01:42:34,739
and if you start thinking registration

2273
01:42:34,739 --> 01:42:37,320
where the host can declare its addresses

2274
01:42:37,320 --> 01:42:40,500
to the routers then it can also provide

2275
01:42:40,500 --> 01:42:43,560
some kind of cryptographic token and now

2276
01:42:43,560 --> 01:42:45,659
if if the routers share that information

2277
01:42:45,659 --> 01:42:49,139
then only a host which knows how to

2278
01:42:49,139 --> 01:42:50,880
build and can prove the ownership of

2279
01:42:50,880 --> 01:42:53,159
that token if only those hosts can

2280
01:42:53,159 --> 01:42:55,020
actually use Services of any router on

2281
01:42:55,020 --> 01:42:57,300
your pref in your subnet then you can

2282
01:42:57,300 --> 01:42:58,980
effectively defend your addresses

2283
01:42:58,980 --> 01:43:01,800
against impersonation and and don't do

2284
01:43:01,800 --> 01:43:04,260
sound do Savvy basically

2285
01:43:04,260 --> 01:43:09,300
so 8928 is Savvy made simple and sent me

2286
01:43:09,300 --> 01:43:11,960
into page simple

2287
01:43:12,119 --> 01:43:14,580
um because again the registration allows

2288
01:43:14,580 --> 01:43:16,619
it to be simple that's by changing the

2289
01:43:16,619 --> 01:43:18,840
product of how you use ND you also make

2290
01:43:18,840 --> 01:43:22,320
it's securing much simpler and date 9 to

2291
01:43:22,320 --> 01:43:25,679
9 is pretty much the ND proxy would I

2292
01:43:25,679 --> 01:43:28,739
try to i-545 a host will tell the router

2293
01:43:28,739 --> 01:43:31,020
hey I have this address but it will also

2294
01:43:31,020 --> 01:43:33,300
tell the router hey you know if there is

2295
01:43:33,300 --> 01:43:35,280
some rotting or some operation above you

2296
01:43:35,280 --> 01:43:37,920
do it for me please ensure that you give

2297
01:43:37,920 --> 01:43:40,219
me a reachability

2298
01:43:40,219 --> 01:43:43,679
and if the router above is effectively

2299
01:43:43,679 --> 01:43:46,619
an ND proxy for instance a Wi-Fi access

2300
01:43:46,619 --> 01:43:49,139
point doing any proxy then this is the

2301
01:43:49,139 --> 01:43:51,179
signal to the proxy that it should proxy

2302
01:43:51,179 --> 01:43:52,380
for that address

2303
01:43:52,380 --> 01:43:55,260
now the same in 505 works with multiple

2304
01:43:55,260 --> 01:43:57,300
routing protocols it's used for Rift

2305
01:43:57,300 --> 01:44:00,540
it's used for uh Ripple obviously and

2306
01:44:00,540 --> 01:44:03,239
there is also a draft for evpn

2307
01:44:03,239 --> 01:44:05,760
so it's basically the protocol

2308
01:44:05,760 --> 01:44:08,040
independent fashion for a host to tell

2309
01:44:08,040 --> 01:44:10,199
the router hey I have this address

2310
01:44:10,199 --> 01:44:12,139
unless there is a prime it's my address

2311
01:44:12,139 --> 01:44:14,880
please you know do whatever is needed to

2312
01:44:14,880 --> 01:44:17,280
get it routed to me

2313
01:44:17,280 --> 01:44:19,320
and then there is new work where we

2314
01:44:19,320 --> 01:44:21,719
actually extend this for not only

2315
01:44:21,719 --> 01:44:24,360
registering uh unicast addresses but

2316
01:44:24,360 --> 01:44:26,760
also multicast addresses for those who

2317
01:44:26,760 --> 01:44:30,300
are first in MLD you know that MLD also

2318
01:44:30,300 --> 01:44:34,020
requires broadcast so MLD also is is

2319
01:44:34,020 --> 01:44:36,360
um low power is high power having its

2320
01:44:36,360 --> 01:44:38,100
low power unfriendly

2321
01:44:38,100 --> 01:44:40,679
because it requires the host to be awake

2322
01:44:40,679 --> 01:44:42,900
all the time which is killing your

2323
01:44:42,900 --> 01:44:45,060
energy basically

2324
01:44:45,060 --> 01:44:47,100
so we are we are extending to multicast

2325
01:44:47,100 --> 01:44:49,739
and now we are also extending to prefix

2326
01:44:49,739 --> 01:44:51,659
it's something we discussed two I atfs

2327
01:44:51,659 --> 01:44:54,659
ago at six low and we'll discuss that

2328
01:44:54,659 --> 01:44:56,580
snack as well

2329
01:44:56,580 --> 01:44:58,619
um basically the capability for the host

2330
01:44:58,619 --> 01:45:01,980
or the router but the Step router to

2331
01:45:01,980 --> 01:45:04,320
tell the big router hey I have this this

2332
01:45:04,320 --> 01:45:06,360
step prefix with me

2333
01:45:06,360 --> 01:45:07,920
um I I don't know what protocol you're

2334
01:45:07,920 --> 01:45:09,719
you're using up there but

2335
01:45:09,719 --> 01:45:11,639
protocol independent way of saying a

2336
01:45:11,639 --> 01:45:15,300
whatever for this prefix give it to me

2337
01:45:15,300 --> 01:45:17,400
last but not least we have this unicast

2338
01:45:17,400 --> 01:45:20,119
lookup so as soon as the routers know

2339
01:45:20,119 --> 01:45:23,639
deterministically where each IPv6

2340
01:45:23,639 --> 01:45:26,219
addresses in the in the subnet

2341
01:45:26,219 --> 01:45:28,739
then why would you broadcast an address

2342
01:45:28,739 --> 01:45:31,199
lookup then again

2343
01:45:31,199 --> 01:45:33,900
uh anything broadcast including lookup

2344
01:45:33,900 --> 01:45:36,119
means that the the receiver must be

2345
01:45:36,119 --> 01:45:36,960
awake

2346
01:45:36,960 --> 01:45:38,940
if you want to save energy you must have

2347
01:45:38,940 --> 01:45:41,040
the right to sleep

2348
01:45:41,040 --> 01:45:43,260
the unicast lookup draft says Hey the

2349
01:45:43,260 --> 01:45:45,000
routers know where the address is just

2350
01:45:45,000 --> 01:45:47,400
as the routers don't ask broadcast the

2351
01:45:47,400 --> 01:45:49,020
whole fabric

2352
01:45:49,020 --> 01:45:51,300
which is killing evpn which is killing

2353
01:45:51,300 --> 01:45:52,199
your wireless

2354
01:45:52,199 --> 01:45:53,159
Etc

2355
01:45:53,159 --> 01:45:55,679
just do a lookup to this abstract

2356
01:45:55,679 --> 01:45:58,739
construct that we call 6lbr

2357
01:45:58,739 --> 01:46:02,520
6 lbr in practice in six slope and ND is

2358
01:46:02,520 --> 01:46:05,340
an abstract thing it doesn't have to be

2359
01:46:05,340 --> 01:46:07,440
a server it could be seen as a DHCP

2360
01:46:07,440 --> 01:46:09,000
server but it can also be fully

2361
01:46:09,000 --> 01:46:10,860
distributed with evpn

2362
01:46:10,860 --> 01:46:14,820
or it can be partially distributed with

2363
01:46:14,820 --> 01:46:17,400
proxy and D so it can be anything really

2364
01:46:17,400 --> 01:46:20,940
it's the abstract representation of the

2365
01:46:20,940 --> 01:46:22,920
registrar which knows all the addresses

2366
01:46:22,920 --> 01:46:24,420
in this network

2367
01:46:24,420 --> 01:46:27,600
so if this abstract registrar exists

2368
01:46:27,600 --> 01:46:29,760
then you could ask him for any address

2369
01:46:29,760 --> 01:46:31,440
resolution as opposed to doing a

2370
01:46:31,440 --> 01:46:33,239
broadcast

2371
01:46:33,239 --> 01:46:35,940
and that's pretty much it

2372
01:46:35,940 --> 01:46:40,099
okay we have two people in the queue

2373
01:46:41,840 --> 01:46:44,100
so you have the slide earlier where you

2374
01:46:44,100 --> 01:46:45,840
had the three models with point-to-point

2375
01:46:45,840 --> 01:46:48,300
uh classical broadcast domain and dimesh

2376
01:46:48,300 --> 01:46:49,080
Network

2377
01:46:49,080 --> 01:46:52,260
in in that mesh Network scenario

2378
01:46:52,260 --> 01:46:54,300
um what is the actual benefit of

2379
01:46:54,300 --> 01:46:57,840
considering this a subnet I.E if you're

2380
01:46:57,840 --> 01:47:00,840
looking at for example RC 7404 which

2381
01:47:00,840 --> 01:47:02,940
describes operating without any Global

2382
01:47:02,940 --> 01:47:05,340
addresses between routers that's pretty

2383
01:47:05,340 --> 01:47:07,320
much the same situation like you're

2384
01:47:07,320 --> 01:47:09,900
trying to have the 64 on the mesh with

2385
01:47:09,900 --> 01:47:12,480
the addresses for the hosts why not

2386
01:47:12,480 --> 01:47:16,500
consider it a 128 on each host I can

2387
01:47:16,500 --> 01:47:17,760
tell you where it's deployed I guess

2388
01:47:17,760 --> 01:47:20,040
it's it's all a matter of deployment so

2389
01:47:20,040 --> 01:47:23,100
this is deployed exactly like that in

2390
01:47:23,100 --> 01:47:25,199
the smart grid where a single of the

2391
01:47:25,199 --> 01:47:27,600
subnets is Thousands to tens of

2392
01:47:27,600 --> 01:47:28,980
thousands of nodes

2393
01:47:28,980 --> 01:47:31,619
and provisionally speaking we don't want

2394
01:47:31,619 --> 01:47:33,600
to go ahead and

2395
01:47:33,600 --> 01:47:36,179
give them all how do you just go to

2396
01:47:36,179 --> 01:47:38,880
those iot devices and give them a

2397
01:47:38,880 --> 01:47:41,159
different prefix why should we it you

2398
01:47:41,159 --> 01:47:43,560
don't need to give them a prefix um I

2399
01:47:43,560 --> 01:47:45,179
think you can actually use the regular

2400
01:47:45,179 --> 01:47:47,699
prefix advertisements and just not have

2401
01:47:47,699 --> 01:47:50,520
the prefix be on link so that way you

2402
01:47:50,520 --> 01:47:53,040
have a 128 it's exactly what we do the

2403
01:47:53,040 --> 01:47:55,380
prefix is not on link and there is one

2404
01:47:55,380 --> 01:47:57,900
big prefix for that mesh that's what we

2405
01:47:57,900 --> 01:48:00,540
do I mean a missing why it's not the

2406
01:48:00,540 --> 01:48:02,820
same thing that that works kind of

2407
01:48:02,820 --> 01:48:05,760
already I mean I'm not

2408
01:48:05,760 --> 01:48:08,940
I'm not sure I understand what exactly I

2409
01:48:08,940 --> 01:48:10,980
understand what you're doing but I'm not

2410
01:48:10,980 --> 01:48:13,139
understanding what the problem is you're

2411
01:48:13,139 --> 01:48:15,119
solving actually for this then okay so

2412
01:48:15,119 --> 01:48:18,139
so the piece that we are discussing here

2413
01:48:18,139 --> 01:48:22,500
is how the host will so it's a rotting

2414
01:48:22,500 --> 01:48:24,659
it's rotted fabric right so it's rotting

2415
01:48:24,659 --> 01:48:26,940
inside the subnet so far so good so

2416
01:48:26,940 --> 01:48:28,980
another question is you've got hosts

2417
01:48:28,980 --> 01:48:30,780
everywhere in that subnet and it's radio

2418
01:48:30,780 --> 01:48:33,119
meaning that at some point of time the

2419
01:48:33,119 --> 01:48:35,340
IP links that you can form are this and

2420
01:48:35,340 --> 01:48:37,139
next second they are different because

2421
01:48:37,139 --> 01:48:40,199
the radio reachability has changed so

2422
01:48:40,199 --> 01:48:41,219
what you want to know is

2423
01:48:41,219 --> 01:48:43,980
deterministically where the hosts are so

2424
01:48:43,980 --> 01:48:45,719
they need to tell the router I'm here

2425
01:48:45,719 --> 01:48:48,420
and that's what we do with this neighbor

2426
01:48:48,420 --> 01:48:51,239
Discovery making sure that the right

2427
01:48:51,239 --> 01:48:53,639
routers know exactly what's the latest

2428
01:48:53,639 --> 01:48:56,219
position of this host okay so you're

2429
01:48:56,219 --> 01:48:57,540
you're basically trying to increase

2430
01:48:57,540 --> 01:49:00,360
Mobility times and like movement exactly

2431
01:49:00,360 --> 01:49:03,259
okay we

2432
01:49:06,800 --> 01:49:09,000
the addresses you don't choose we want

2433
01:49:09,000 --> 01:49:10,560
to know they are not used anymore Etc

2434
01:49:10,560 --> 01:49:13,020
yeah around security I mean you really

2435
01:49:13,020 --> 01:49:14,940
don't want to use ND for this it doesn't

2436
01:49:14,940 --> 01:49:16,520
have updates

2437
01:49:16,520 --> 01:49:19,020
you like you're basically trying to

2438
01:49:19,020 --> 01:49:20,639
build Dynamic subnets with I mean if

2439
01:49:20,639 --> 01:49:21,840
you're trying to build Dynamic subnets

2440
01:49:21,840 --> 01:49:24,540
where like the the set of nodes on any

2441
01:49:24,540 --> 01:49:26,520
subnet is like dynamically updatable and

2442
01:49:26,520 --> 01:49:28,679
D is just the wrong protocol you started

2443
01:49:28,679 --> 01:49:31,500
off saying you know that we have like we

2444
01:49:31,500 --> 01:49:33,000
basically have this concept of subnet

2445
01:49:33,000 --> 01:49:34,800
that's stuck in ipv4 it's not really

2446
01:49:34,800 --> 01:49:36,719
even stuck in ipv4 it's like built for

2447
01:49:36,719 --> 01:49:38,520
very simple links it's basically

2448
01:49:38,520 --> 01:49:40,980
intended to say okay is this local or is

2449
01:49:40,980 --> 01:49:44,100
it not but like David said basically as

2450
01:49:44,100 --> 01:49:45,659
soon as you get to something relatively

2451
01:49:45,659 --> 01:49:46,980
complicated you have to do everything

2452
01:49:46,980 --> 01:49:49,800
off link so it sounds like you're like

2453
01:49:49,800 --> 01:49:51,239
at that point I think that the problem

2454
01:49:51,239 --> 01:49:52,739
that you have left once you've marked

2455
01:49:52,739 --> 01:49:54,719
everything out of link is how do the

2456
01:49:54,719 --> 01:49:57,060
host communicate to the routers where

2457
01:49:57,060 --> 01:49:59,520
they are perfectly true but that's a lot

2458
01:49:59,520 --> 01:50:02,280
easier than than doing all of this ND

2459
01:50:02,280 --> 01:50:03,960
stuff you can do that in a lot of other

2460
01:50:03,960 --> 01:50:05,639
ways I think you don't have to broadcast

2461
01:50:05,639 --> 01:50:07,920
that and even if you do the network can

2462
01:50:07,920 --> 01:50:09,659
simply drop those broadcasts because

2463
01:50:09,659 --> 01:50:11,400
once everything goes through the router

2464
01:50:11,400 --> 01:50:13,739
anyway you don't need to do period the

2465
01:50:13,739 --> 01:50:16,860
problem is today with the NDS it stays

2466
01:50:16,860 --> 01:50:19,619
and even with the hcp the router doesn't

2467
01:50:19,619 --> 01:50:22,679
have a clear picture of which addresses

2468
01:50:22,679 --> 01:50:24,659
are out there and where they are for the

2469
01:50:24,659 --> 01:50:25,739
last time

2470
01:50:25,739 --> 01:50:28,320
so there are all sorts of of hooks of

2471
01:50:28,320 --> 01:50:30,600
Tricks which are being played depending

2472
01:50:30,600 --> 01:50:32,940
on the environment because of this lack

2473
01:50:32,940 --> 01:50:35,040
of clear interaction between the host

2474
01:50:35,040 --> 01:50:37,320
and the router then you may call it ND

2475
01:50:37,320 --> 01:50:40,020
you may call it anywhere you want but we

2476
01:50:40,020 --> 01:50:42,179
need something whereby a host when it

2477
01:50:42,179 --> 01:50:43,860
wants to use an address we'll tell the

2478
01:50:43,860 --> 01:50:46,260
router a I want to use this address when

2479
01:50:46,260 --> 01:50:48,900
it moves with that address we need to

2480
01:50:48,900 --> 01:50:51,020
yeah the host should just join us

2481
01:50:51,020 --> 01:50:53,900
to the list we have one more talk and

2482
01:50:53,900 --> 01:50:57,239
nine minutes left so Ted

2483
01:50:57,239 --> 01:51:00,320
thank you very much

2484
01:51:09,719 --> 01:51:11,580
hi

2485
01:51:11,580 --> 01:51:13,739
thank you so I'm here to talk to you

2486
01:51:13,739 --> 01:51:17,040
about a new router flag or a new flag

2487
01:51:17,040 --> 01:51:20,820
and ra messages next slide

2488
01:51:20,820 --> 01:51:22,739
uh so

2489
01:51:22,739 --> 01:51:24,840
um the document as written right now

2490
01:51:24,840 --> 01:51:26,520
actually proposes adding this flag to

2491
01:51:26,520 --> 01:51:28,500
the ra Flags extension option I don't

2492
01:51:28,500 --> 01:51:29,760
really know that that's necessary

2493
01:51:29,760 --> 01:51:32,460
because there are six flag that's still

2494
01:51:32,460 --> 01:51:35,699
available in the ra header uh but either

2495
01:51:35,699 --> 01:51:37,460
way

2496
01:51:37,460 --> 01:51:41,040
yeah either way uh the idea is to add a

2497
01:51:41,040 --> 01:51:44,219
new flag next slide

2498
01:51:44,219 --> 01:51:47,820
uh and let's see is that yeah here we go

2499
01:51:47,820 --> 01:51:49,739
so so the idea of this flag is basically

2500
01:51:49,739 --> 01:51:51,360
to signal that the Aria is coming from a

2501
01:51:51,360 --> 01:51:52,560
stub router as opposed to an

2502
01:51:52,560 --> 01:51:54,420
infrastructure router for those who

2503
01:51:54,420 --> 01:51:55,980
don't know the snack working group is

2504
01:51:55,980 --> 01:51:57,300
working on this new thing called a stub

2505
01:51:57,300 --> 01:51:58,560
router that connects to the

2506
01:51:58,560 --> 01:51:59,820
infrastructure

2507
01:51:59,820 --> 01:52:01,860
really without you know needing

2508
01:52:01,860 --> 01:52:03,540
permission or cooperation from the

2509
01:52:03,540 --> 01:52:05,820
infrastructure to enable like an iot

2510
01:52:05,820 --> 01:52:08,040
Network to be accessible by devices on

2511
01:52:08,040 --> 01:52:09,780
the infrastructure in order to do that

2512
01:52:09,780 --> 01:52:11,400
it has to send Ras

2513
01:52:11,400 --> 01:52:13,920
um but we don't want it to look to the

2514
01:52:13,920 --> 01:52:16,199
infrastructure like

2515
01:52:16,199 --> 01:52:18,840
um like its infrastructure we want we

2516
01:52:18,840 --> 01:52:20,040
want it to be distinguishable from

2517
01:52:20,040 --> 01:52:21,960
infrastructure so having a bid in the

2518
01:52:21,960 --> 01:52:23,940
router advertisement that says this is a

2519
01:52:23,940 --> 01:52:25,679
stub Network and not an infrastructure

2520
01:52:25,679 --> 01:52:28,320
network is helpful

2521
01:52:28,320 --> 01:52:29,520
um there's a couple reasons why it's

2522
01:52:29,520 --> 01:52:32,639
helpful uh one is that it allows stub

2523
01:52:32,639 --> 01:52:35,340
routers to notice if there is an

2524
01:52:35,340 --> 01:52:36,900
infrastructure prefix being advertised

2525
01:52:36,900 --> 01:52:39,060
on the link and not advertise a prefix

2526
01:52:39,060 --> 01:52:41,820
so in order to do IPv6 communication you

2527
01:52:41,820 --> 01:52:43,340
need to advertise a prefix on the link

2528
01:52:43,340 --> 01:52:46,739
uh that's that's configurable and if

2529
01:52:46,739 --> 01:52:48,780
there's already a prefix on the link

2530
01:52:48,780 --> 01:52:52,560
then you would uh prefer to use that

2531
01:52:52,560 --> 01:52:55,260
prefix but suppose the stub router comes

2532
01:52:55,260 --> 01:52:56,820
on the link and doesn't see a prefix

2533
01:52:56,820 --> 01:52:59,340
starts advertising its route its prefix

2534
01:52:59,340 --> 01:53:01,560
and then the infrastructure comes on and

2535
01:53:01,560 --> 01:53:03,420
starts advertising a prefix we'd like

2536
01:53:03,420 --> 01:53:04,739
the stub router to be able to tell that

2537
01:53:04,739 --> 01:53:06,179
it's an infrastructure router so that it

2538
01:53:06,179 --> 01:53:07,619
stops advertising its prefix because

2539
01:53:07,619 --> 01:53:08,760
otherwise it's going to just think it's

2540
01:53:08,760 --> 01:53:10,500
another stub router and keep advertising

2541
01:53:10,500 --> 01:53:13,320
its prefix if it wins the election

2542
01:53:13,320 --> 01:53:14,940
um so this is basically just to promote

2543
01:53:14,940 --> 01:53:17,460
cooperation and avoid publishing extra

2544
01:53:17,460 --> 01:53:21,300
prefixes on the link next slide

2545
01:53:21,300 --> 01:53:23,340
uh and the other benefit is that you

2546
01:53:23,340 --> 01:53:24,960
might have a situation where you have a

2547
01:53:24,960 --> 01:53:27,239
stub router or a sub Network remember a

2548
01:53:27,239 --> 01:53:28,739
sub Network for those who don't know a

2549
01:53:28,739 --> 01:53:31,020
sub network is like a stub it's a leaf

2550
01:53:31,020 --> 01:53:32,460
it's not supposed to have any further

2551
01:53:32,460 --> 01:53:33,540
networks as you're not supposed to do

2552
01:53:33,540 --> 01:53:35,760
routing across it or anything like that

2553
01:53:35,760 --> 01:53:37,340
um so it'd be nice to be able to tell

2554
01:53:37,340 --> 01:53:39,780
when you're plugged into and when a stub

2555
01:53:39,780 --> 01:53:41,400
router is plugged into a network to be

2556
01:53:41,400 --> 01:53:42,420
able to tell whether it's an

2557
01:53:42,420 --> 01:53:44,580
infrastructure Network or a stub Network

2558
01:53:44,580 --> 01:53:47,820
easy way to do that is to look at the

2559
01:53:47,820 --> 01:53:50,280
router advertisements so basically this

2560
01:53:50,280 --> 01:53:52,619
allows us to use the bit the stub router

2561
01:53:52,619 --> 01:53:54,000
bit to tell that we're being plugged

2562
01:53:54,000 --> 01:53:56,040
into a stub Network and refuse to try to

2563
01:53:56,040 --> 01:53:58,260
use it as Transit

2564
01:53:58,260 --> 01:54:01,679
so uh that's pretty much the goal uh

2565
01:54:01,679 --> 01:54:02,820
next slide

2566
01:54:02,820 --> 01:54:05,780
yeah questions

2567
01:54:10,219 --> 01:54:13,739
I think this is useful but um I don't

2568
01:54:13,739 --> 01:54:15,119
understand why it's a property the

2569
01:54:15,119 --> 01:54:17,100
router itself as opposed to like let's

2570
01:54:17,100 --> 01:54:18,600
say the Pio and the roots that it

2571
01:54:18,600 --> 01:54:22,199
advertises right because it

2572
01:54:22,199 --> 01:54:24,360
yeah I mean what you want to do is you

2573
01:54:24,360 --> 01:54:26,340
want to basically withdraw

2574
01:54:26,340 --> 01:54:28,560
the Pio and you want to with or you want

2575
01:54:28,560 --> 01:54:31,020
hosts maybe to ignore the Pio and the

2576
01:54:31,020 --> 01:54:33,360
Rio that you get

2577
01:54:33,360 --> 01:54:35,219
I don't think we want hosts to pay

2578
01:54:35,219 --> 01:54:36,840
attention to this bit

2579
01:54:36,840 --> 01:54:39,840
then routers tend not to listen to our

2580
01:54:39,840 --> 01:54:41,400
race anyway right

2581
01:54:41,400 --> 01:54:44,400
yeah mostly the consumer yeah mostly the

2582
01:54:44,400 --> 01:54:45,480
consumer of this is going to be stub

2583
01:54:45,480 --> 01:54:47,639
routers

2584
01:54:47,639 --> 01:54:49,139
they're going to send it and they're

2585
01:54:49,139 --> 01:54:50,040
going to send it and they're also going

2586
01:54:50,040 --> 01:54:51,540
to receive it because stub routers do

2587
01:54:51,540 --> 01:54:53,520
listen to Ras

2588
01:54:53,520 --> 01:54:54,480
so they're going to tell each other

2589
01:54:54,480 --> 01:54:58,099
about their existence yeah yeah

2590
01:54:58,500 --> 01:55:00,659
you did say that on the list I think

2591
01:55:00,659 --> 01:55:01,739
yeah

2592
01:55:01,739 --> 01:55:03,300
but but the question was like why not

2593
01:55:03,300 --> 01:55:05,040
apply this to the individual pieces of

2594
01:55:05,040 --> 01:55:07,440
information as opposed to ra as a whole

2595
01:55:07,440 --> 01:55:09,300
yeah I mean that's a good question

2596
01:55:09,300 --> 01:55:11,360
um

2597
01:55:11,820 --> 01:55:14,040
so let me think about that

2598
01:55:14,040 --> 01:55:15,540
um

2599
01:55:15,540 --> 01:55:18,000
yeah um I mean I would say I would say

2600
01:55:18,000 --> 01:55:19,980
that's a good question I I don't know

2601
01:55:19,980 --> 01:55:21,420
the correct answer to that off the top

2602
01:55:21,420 --> 01:55:22,619
of my head and maybe that is the right

2603
01:55:22,619 --> 01:55:23,940
thing to do so we should just talk about

2604
01:55:23,940 --> 01:55:25,380
that basically what I'm trying to do

2605
01:55:25,380 --> 01:55:28,440
here is actually figure out a uh is

2606
01:55:28,440 --> 01:55:31,199
there any objection to doing this and B

2607
01:55:31,199 --> 01:55:32,580
um is this the right place to do it I

2608
01:55:32,580 --> 01:55:34,080
mean we could do this in snack it's not

2609
01:55:34,080 --> 01:55:35,280
in the charter right now but in

2610
01:55:35,280 --> 01:55:36,960
principle it could be

2611
01:55:36,960 --> 01:55:38,280
um I think this working group is

2612
01:55:38,280 --> 01:55:40,440
certainly more qualified to to think

2613
01:55:40,440 --> 01:55:42,119
about the question but on the other hand

2614
01:55:42,119 --> 01:55:43,679
it's a really trivial question we're

2615
01:55:43,679 --> 01:55:45,900
just adding a bid so

2616
01:55:45,900 --> 01:55:47,400
um you know I'm perfectly happy yeah

2617
01:55:47,400 --> 01:55:49,260
yeah

2618
01:55:49,260 --> 01:55:51,119
that's it

2619
01:55:51,119 --> 01:55:53,820
yeah so I I'd like to see this adopted

2620
01:55:53,820 --> 01:55:55,980
either here or to be instructed to adopt

2621
01:55:55,980 --> 01:55:58,400
it elsewhere

2622
01:56:00,659 --> 01:56:02,580
in the world

2623
01:56:02,580 --> 01:56:06,000
hello uh this particular flag looks like

2624
01:56:06,000 --> 01:56:08,340
a small piece of a big solution

2625
01:56:08,340 --> 01:56:10,679
and it's not possible to understand the

2626
01:56:10,679 --> 01:56:13,199
overall in this solution and then it's

2627
01:56:13,199 --> 01:56:15,540
not possible to to decide is this flag

2628
01:56:15,540 --> 01:56:17,760
useful or not because it looks like a

2629
01:56:17,760 --> 01:56:20,520
small piece in the topology which you

2630
01:56:20,520 --> 01:56:22,920
have shown on the previous slide uh the

2631
01:56:22,920 --> 01:56:24,300
internet predicts should be somehow

2632
01:56:24,300 --> 01:56:26,880
splitted distributed through the side in

2633
01:56:26,880 --> 01:56:28,500
its home network control protocol or

2634
01:56:28,500 --> 01:56:30,719
something like this again or maybe httpg

2635
01:56:30,719 --> 01:56:31,820
or whatever

2636
01:56:31,820 --> 01:56:34,619
I don't understand how it's possible to

2637
01:56:34,619 --> 01:56:36,420
judge about this without looking to

2638
01:56:36,420 --> 01:56:37,980
whole solution

2639
01:56:37,980 --> 01:56:39,840
so that would be an argument for doing

2640
01:56:39,840 --> 01:56:42,840
this in this networking group

2641
01:56:42,840 --> 01:56:45,179
I don't know but the whole solution is

2642
01:56:45,179 --> 01:56:47,760
needed yeah because that's a little bit

2643
01:56:47,760 --> 01:56:49,980
of the I mean the discussion we had at

2644
01:56:49,980 --> 01:56:51,600
the beginning this spring in some sense

2645
01:56:51,600 --> 01:56:53,580
I think for us to do it here we need to

2646
01:56:53,580 --> 01:56:55,619
hear from snack that

2647
01:56:55,619 --> 01:56:57,600
this you would like to have this from us

2648
01:56:57,600 --> 01:56:59,520
or something like that okay I don't

2649
01:56:59,520 --> 01:57:01,260
think we should just take it on before

2650
01:57:01,260 --> 01:57:04,080
that happens okay so so then the

2651
01:57:04,080 --> 01:57:05,940
takeaway would be

2652
01:57:05,940 --> 01:57:07,320
snack

2653
01:57:07,320 --> 01:57:09,659
snack should decide that That Snack

2654
01:57:09,659 --> 01:57:11,699
actually wants this and then we would

2655
01:57:11,699 --> 01:57:14,420
ask you to adopt it okay

2656
01:57:14,420 --> 01:57:16,800
so I think uh one of the things the

2657
01:57:16,800 --> 01:57:17,880
first thing you said is like hey there's

2658
01:57:17,880 --> 01:57:19,020
six bits left they're not there's only

2659
01:57:19,020 --> 01:57:21,119
two bits left just to like so that's why

2660
01:57:21,119 --> 01:57:23,460
I think the 51 so six bits have been

2661
01:57:23,460 --> 01:57:27,179
taken in the ra so m o uh mobile IP it

2662
01:57:27,179 --> 01:57:30,599
was it didn't update the right RFC so we

2663
01:57:30,599 --> 01:57:32,580
had an average problem back in the day

2664
01:57:32,580 --> 01:57:34,860
yeah six bits are gone for preferences

2665
01:57:34,860 --> 01:57:36,719
right like and so on so so I think

2666
01:57:36,719 --> 01:57:38,520
that's kind of why it needs to go in the

2667
01:57:38,520 --> 01:57:41,040
option so that that I just want to

2668
01:57:41,040 --> 01:57:43,139
clarify that and I think like snack

2669
01:57:43,139 --> 01:57:44,340
would be a good place to do it like with

2670
01:57:44,340 --> 01:57:46,739
six-man review to do this and I have no

2671
01:57:46,739 --> 01:57:48,840
particular preference with the Pio or

2672
01:57:48,840 --> 01:57:51,179
here like in I think this is easier

2673
01:57:51,179 --> 01:57:53,699
probably for lower end routers which

2674
01:57:53,699 --> 01:57:55,199
might be the stub routers to process

2675
01:57:55,199 --> 01:57:56,880
maybe it's it's going to be faster than

2676
01:57:56,880 --> 01:57:58,380
going through a bunch of pios because

2677
01:57:58,380 --> 01:58:00,060
then you have to say which Pio goes in

2678
01:58:00,060 --> 01:58:02,460
if you have multiple prefixes so and

2679
01:58:02,460 --> 01:58:04,139
what if the conflict and so on in this

2680
01:58:04,139 --> 01:58:05,880
one it becomes clear that it's coming

2681
01:58:05,880 --> 01:58:07,199
from an infrastructure order so I'm

2682
01:58:07,199 --> 01:58:09,300
supportive of putting in the ra Flags

2683
01:58:09,300 --> 01:58:10,679
instead of pio but I don't really care

2684
01:58:10,679 --> 01:58:13,080
that much okay yeah I mean um I think

2685
01:58:13,080 --> 01:58:15,060
the reason you stated is probably not

2686
01:58:15,060 --> 01:58:18,300
actually that crucial so I I get where

2687
01:58:18,300 --> 01:58:20,219
you're coming from but I think generally

2688
01:58:20,219 --> 01:58:21,599
speaking of stub router is only going to

2689
01:58:21,599 --> 01:58:23,639
advertise one Pio so

2690
01:58:23,639 --> 01:58:25,980
so hence shouldn't be an issue

2691
01:58:25,980 --> 01:58:27,300
um my point was not about the stub

2692
01:58:27,300 --> 01:58:28,619
router is the infrastructure router is

2693
01:58:28,619 --> 01:58:30,420
advertising it right like you need to no

2694
01:58:30,420 --> 01:58:32,040
no the structure router is completely

2695
01:58:32,040 --> 01:58:33,300
unaware I understand but you're

2696
01:58:33,300 --> 01:58:34,920
processing the Pio so you need to put it

2697
01:58:34,920 --> 01:58:36,900
in Pio logic right the sublotter can get

2698
01:58:36,900 --> 01:58:38,699
a Pio from an infrastructure order it

2699
01:58:38,699 --> 01:58:40,020
still doesn't know where it's coming

2700
01:58:40,020 --> 01:58:41,820
from so it needs to process the Pio and

2701
01:58:41,820 --> 01:58:44,219
expect this flag there so which I don't

2702
01:58:44,219 --> 01:58:46,020
want to do right like because you don't

2703
01:58:46,020 --> 01:58:47,340
have to go through all the pios coming

2704
01:58:47,340 --> 01:58:48,900
in because the infrastructure does not

2705
01:58:48,900 --> 01:58:50,580
go through all the POS anyway no but

2706
01:58:50,580 --> 01:58:51,659
infrastructure router might have

2707
01:58:51,659 --> 01:58:53,460
multiple pios yeah you look at each one

2708
01:58:53,460 --> 01:58:55,380
of them to see if it has like that stuff

2709
01:58:55,380 --> 01:58:57,719
we already have to do that we have to

2710
01:58:57,719 --> 01:58:58,860
look at them because we don't want to

2711
01:58:58,860 --> 01:59:00,300
publish a Pio if there's already a

2712
01:59:00,300 --> 01:59:02,040
usable Pio I understand but you don't

2713
01:59:02,040 --> 01:59:03,179
have to look for the stub router flag

2714
01:59:03,179 --> 01:59:04,619
you don't need to know if it's just you

2715
01:59:04,619 --> 01:59:05,820
need to know if it's a step router or

2716
01:59:05,820 --> 01:59:07,380
not right because your idea is like you

2717
01:59:07,380 --> 01:59:09,000
keep doing this until you realize

2718
01:59:09,000 --> 01:59:10,440
there's an infrastructure router that's

2719
01:59:10,440 --> 01:59:12,119
why the suborder flag is there right

2720
01:59:12,119 --> 01:59:14,760
okay so if you put in the Pio you need

2721
01:59:14,760 --> 01:59:16,380
to process multiple pios but we can take

2722
01:59:16,380 --> 01:59:17,940
this further offline but I think there's

2723
01:59:17,940 --> 01:59:19,560
a better way of doing this this year

2724
01:59:19,560 --> 01:59:21,599
okay I yeah

2725
01:59:21,599 --> 01:59:24,780
I don't think that yeah okay Eric yeah

2726
01:59:24,780 --> 01:59:27,179
everything the snack A.D and looks like

2727
01:59:27,179 --> 01:59:30,659
it's a interior interior discussion here

2728
01:59:30,659 --> 01:59:31,619
um

2729
01:59:31,619 --> 01:59:33,840
so basically we are not able in the

2730
01:59:33,840 --> 01:59:36,420
chart of snack to Define any Flags yeah

2731
01:59:36,420 --> 01:59:38,159
just for processing right we can Define

2732
01:59:38,159 --> 01:59:40,500
the requirements and then we need to go

2733
01:59:40,500 --> 01:59:43,800
here just to be clear yep

2734
01:59:43,800 --> 01:59:47,540
we should talk about yeah

2735
01:59:47,659 --> 01:59:50,340
we are just on time

2736
01:59:50,340 --> 01:59:52,560
thank you very much

2737
01:59:52,560 --> 01:59:55,679
uh please send your comments for which

2738
01:59:55,679 --> 01:59:57,480
we did not have time as a microphone to

2739
01:59:57,480 --> 01:59:58,320
the list

2740
01:59:58,320 --> 02:00:01,080
and see you in Yokohama thank you very

2741
02:00:01,080 --> 02:00:03,260
much

2742
02:00:06,300 --> 02:00:08,099
and yes and please if you say anything

2743
02:00:08,099 --> 02:00:09,780
on the microphone please review the

2744
02:00:09,780 --> 02:00:12,480
meeting minutes to make sure that your

2745
02:00:12,480 --> 02:00:14,400
comments were captured correctly because

2746
02:00:14,400 --> 02:00:17,639
as far as I

2747
02:00:17,639 --> 02:00:21,179
just aided them and put whatever you

2748
02:00:21,179 --> 02:00:24,300
wanted to say in correct way

2749
02:00:24,300 --> 02:00:27,960
good okay

2750
02:00:27,960 --> 02:00:30,420
thank you very much good I've got

2751
02:00:30,420 --> 02:00:32,280
lessons tonight I think I now will

2752
02:00:32,280 --> 02:00:34,199
remember actually the plug for power

2753
02:00:34,199 --> 02:00:36,119
thing in there it would have had power

2754
02:00:36,119 --> 02:00:39,679
back too these things are very cute yeah

2755
02:00:39,679 --> 02:00:42,920
nice one

2756
02:00:45,360 --> 02:00:46,619
we should probably

2757
02:00:46,619 --> 02:00:48,420
chairs

2758
02:00:48,420 --> 02:00:51,780
Swag like that like souvenirs second

2759
02:00:51,780 --> 02:00:54,960
chair should get some souvenirs yeah

2760
02:00:54,960 --> 02:00:57,540
Alexa

2761
02:00:57,540 --> 02:00:59,340
okay

2762
02:00:59,340 --> 02:01:03,119
but that's it done I think we're done so

2763
02:01:03,119 --> 02:01:06,540
we ended up with one work

2764
02:01:06,540 --> 02:01:08,280
uh

2765
02:01:08,280 --> 02:01:10,159
not two

2766
02:01:10,159 --> 02:01:13,679
well I was really young but I think I

2767
02:01:13,679 --> 02:01:16,560
think what he sort of suggested it for

2768
02:01:16,560 --> 02:01:18,719
this but we I think we're

2769
02:01:18,719 --> 02:01:20,719
thinking

