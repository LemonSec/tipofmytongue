1
00:00:04,880 --> 00:00:08,299
but it's not

2
00:00:10,460 --> 00:00:14,219
all right folks welcome to the Emu

3
00:00:14,219 --> 00:00:17,760
session at ietf 115.

4
00:00:17,760 --> 00:00:19,560
um

5
00:00:19,560 --> 00:00:24,420
let's see uh please uh join the uh

6
00:00:24,420 --> 00:00:28,320
uh on in on-site uh meeting tools so

7
00:00:28,320 --> 00:00:30,660
that you can join thecube for our

8
00:00:30,660 --> 00:00:32,700
question and answer sessions

9
00:00:32,700 --> 00:00:36,480
and uh please wear your mask

10
00:00:36,480 --> 00:00:40,020
um up on uh we have extra masks yeah we

11
00:00:40,020 --> 00:00:41,820
also have masks up front if you need one

12
00:00:41,820 --> 00:00:44,280
but it looks like everybody here already

13
00:00:44,280 --> 00:00:45,780
has one

14
00:00:45,780 --> 00:00:46,860
um

15
00:00:46,860 --> 00:00:48,660
just want to remind people of the note

16
00:00:48,660 --> 00:00:49,920
well

17
00:00:49,920 --> 00:00:51,780
um if you've been at an ITF before you

18
00:00:51,780 --> 00:00:53,820
should be familiar with this if not you

19
00:00:53,820 --> 00:00:55,440
should get familiar with it it talks

20
00:00:55,440 --> 00:00:56,160
about

21
00:00:56,160 --> 00:00:59,399
various things behavior and uh

22
00:00:59,399 --> 00:01:03,359
uh IPR and things of that nature

23
00:01:03,359 --> 00:01:08,159
so next slide and here we have an agenda

24
00:01:08,159 --> 00:01:09,720
um I believe we have a note taker

25
00:01:09,720 --> 00:01:12,299
already although if you want to join and

26
00:01:12,299 --> 00:01:15,360
and the notes are on uh in the agenda

27
00:01:15,360 --> 00:01:17,159
there's a link to the

28
00:01:17,159 --> 00:01:21,299
uh Edge yeah hedge dock where we take

29
00:01:21,299 --> 00:01:22,680
notes

30
00:01:22,680 --> 00:01:24,000
um it would be great if there were some

31
00:01:24,000 --> 00:01:27,299
people who were joined to uh zulip so we

32
00:01:27,299 --> 00:01:30,060
can reflect any comments that need to be

33
00:01:30,060 --> 00:01:31,619
made

34
00:01:31,619 --> 00:01:34,500
in the room at the mic

35
00:01:34,500 --> 00:01:36,119
um

36
00:01:36,119 --> 00:01:38,159
and I talked about the on-site tool so

37
00:01:38,159 --> 00:01:40,740
please scan that barcode and

38
00:01:40,740 --> 00:01:43,079
uh if you're on site so that you can

39
00:01:43,079 --> 00:01:46,100
join the queue as well

40
00:01:46,259 --> 00:01:50,399
um we have uh not too full of an agenda

41
00:01:50,399 --> 00:01:53,820
um let's see is Yari here

42
00:01:53,820 --> 00:01:56,520
he had asked to go earlier but perhaps

43
00:01:56,520 --> 00:01:59,880
he too does not need to go early

44
00:01:59,880 --> 00:02:00,840
um

45
00:02:00,840 --> 00:02:04,079
so I know Elliott could not make it

46
00:02:04,079 --> 00:02:05,939
early for the bootstrap PLS so we're

47
00:02:05,939 --> 00:02:07,259
going to move that to the end and

48
00:02:07,259 --> 00:02:10,679
hopefully he'll will be here before that

49
00:02:10,679 --> 00:02:14,220
uh time comes if not we can give a short

50
00:02:14,220 --> 00:02:17,700
possibly a short update on that

51
00:02:17,700 --> 00:02:21,420
um so does anybody have any additions or

52
00:02:21,420 --> 00:02:23,459
modifications to the agenda

53
00:02:23,459 --> 00:02:27,140
if so please speak now

54
00:02:29,819 --> 00:02:33,239
if not we should go to the certificate

55
00:02:33,239 --> 00:02:36,720
issues and have uh Alan uh give us a

56
00:02:36,720 --> 00:02:40,220
little introduction to that

57
00:02:46,860 --> 00:02:48,420
yeah

58
00:02:48,420 --> 00:02:50,099
um

59
00:02:50,099 --> 00:02:51,420
afternoon

60
00:02:51,420 --> 00:02:53,879
on there we are

61
00:02:53,879 --> 00:02:55,379
um next slide

62
00:02:55,379 --> 00:02:57,180
so we've had a bunch of discussions over

63
00:02:57,180 --> 00:03:00,480
various meetings about certificates and

64
00:03:00,480 --> 00:03:03,079
Eep

65
00:03:03,120 --> 00:03:04,140
um

66
00:03:04,140 --> 00:03:07,440
the question is what to do next

67
00:03:07,440 --> 00:03:09,599
these documents discuss some

68
00:03:09,599 --> 00:03:11,400
configuration via certificates

69
00:03:11,400 --> 00:03:14,400
onboarding

70
00:03:14,459 --> 00:03:15,120
um

71
00:03:15,120 --> 00:03:16,980
there was some discussion at the last

72
00:03:16,980 --> 00:03:20,459
ITF that perhaps we need documentation

73
00:03:20,459 --> 00:03:23,599
around best practices for certificates

74
00:03:23,599 --> 00:03:26,400
so rather than trying to write some text

75
00:03:26,400 --> 00:03:29,640
I thought I'd pull the room see what

76
00:03:29,640 --> 00:03:32,580
people think and go is there a census to

77
00:03:32,580 --> 00:03:35,159
which direction we should go next

78
00:03:35,159 --> 00:03:36,720
because there's been a lot of

79
00:03:36,720 --> 00:03:38,159
discussions about all kinds of

80
00:03:38,159 --> 00:03:41,580
certificate issues with Eep I just think

81
00:03:41,580 --> 00:03:43,340
those need to be

82
00:03:43,340 --> 00:03:45,299
concretized and we need to make

83
00:03:45,299 --> 00:03:46,980
recommendations

84
00:03:46,980 --> 00:03:48,480
so this is

85
00:03:48,480 --> 00:03:51,920
open for discussion

86
00:03:59,400 --> 00:04:02,099
you're just looking for uh discussion so

87
00:04:02,099 --> 00:04:04,980
yeah just to kind of uh set the stage

88
00:04:04,980 --> 00:04:06,959
here we're talking about say for an EP

89
00:04:06,959 --> 00:04:09,299
TLS connection

90
00:04:09,299 --> 00:04:11,459
um there's kind of two two sides here

91
00:04:11,459 --> 00:04:14,159
there's the the server

92
00:04:14,159 --> 00:04:16,199
um and then there's the client or or are

93
00:04:16,199 --> 00:04:19,199
you most concerned about how we uh trust

94
00:04:19,199 --> 00:04:21,540
the server or are you talking about how

95
00:04:21,540 --> 00:04:22,979
we provision the client as well

96
00:04:22,979 --> 00:04:25,620
everything so

97
00:04:25,620 --> 00:04:28,139
for those of you who are in the radius

98
00:04:28,139 --> 00:04:31,259
group similar issues there how do you

99
00:04:31,259 --> 00:04:32,940
get certificates how do you provision

100
00:04:32,940 --> 00:04:35,820
them how do you manage them

101
00:04:35,820 --> 00:04:38,100
um what does it mean when you connect do

102
00:04:38,100 --> 00:04:41,360
you do server name indication do you do

103
00:04:41,360 --> 00:04:44,820
CA indication

104
00:04:44,820 --> 00:04:48,120
um what problems are people running into

105
00:04:48,120 --> 00:04:51,600
I've put some ideas into the various

106
00:04:51,600 --> 00:04:52,919
documents

107
00:04:52,919 --> 00:04:54,660
but I'd like to know if people read them

108
00:04:54,660 --> 00:04:57,479
have more opinions

109
00:04:57,479 --> 00:04:58,139
um

110
00:04:58,139 --> 00:05:02,180
and then we see where we go from there

111
00:05:03,979 --> 00:05:07,620
so in particular like I think we've all

112
00:05:07,620 --> 00:05:11,100
seen and even at this meeting here uh

113
00:05:11,100 --> 00:05:15,300
very often uh the authentication of the

114
00:05:15,300 --> 00:05:17,580
server certificate comes down to

115
00:05:17,580 --> 00:05:20,940
somebody clicking a box saying oh yeah I

116
00:05:20,940 --> 00:05:22,680
want that one

117
00:05:22,680 --> 00:05:23,360
um

118
00:05:23,360 --> 00:05:26,220
and very often they they don't have the

119
00:05:26,220 --> 00:05:28,620
information to actually know if they're

120
00:05:28,620 --> 00:05:30,720
doing the right thing or not

121
00:05:30,720 --> 00:05:31,440
um

122
00:05:31,440 --> 00:05:33,960
and I don't know that there's

123
00:05:33,960 --> 00:05:36,360
particularly a great solution for this I

124
00:05:36,360 --> 00:05:39,000
don't know if edurome folks if if you

125
00:05:39,000 --> 00:05:41,520
have uh kind of

126
00:05:41,520 --> 00:05:44,160
a solution to this problem or if it's or

127
00:05:44,160 --> 00:05:47,039
if it's still a problem in in your uh

128
00:05:47,039 --> 00:05:49,639
deployments

129
00:05:53,960 --> 00:05:56,220
is that on

130
00:05:56,220 --> 00:06:01,100
check the switch here still on yeah

131
00:06:01,259 --> 00:06:02,940
it should be up here it's on the body

132
00:06:02,940 --> 00:06:05,940
somewhere

133
00:06:09,240 --> 00:06:11,880
um yeah at your own uh so a twofold

134
00:06:11,880 --> 00:06:14,580
answer to this uh one is we very much

135
00:06:14,580 --> 00:06:16,259
suggest the use of onboarding tools

136
00:06:16,259 --> 00:06:18,180
which push the entire each configuration

137
00:06:18,180 --> 00:06:19,860
to the client device including the

138
00:06:19,860 --> 00:06:21,600
series to trust all fingerprints all

139
00:06:21,600 --> 00:06:23,280
things you need

140
00:06:23,280 --> 00:06:26,940
um and we try to make it almost

141
00:06:26,940 --> 00:06:29,400
impossible not to use that

142
00:06:29,400 --> 00:06:30,720
um there's a couple of ways to do that

143
00:06:30,720 --> 00:06:34,560
with tricks in the methods and so on but

144
00:06:34,560 --> 00:06:36,060
there is also a movement we've done in

145
00:06:36,060 --> 00:06:38,340
the Wi-Fi Alliance uh which has now

146
00:06:38,340 --> 00:06:40,620
forbidden the Do Not validate server

147
00:06:40,620 --> 00:06:43,319
certificate option so if you got a

148
00:06:43,319 --> 00:06:45,600
reasonably new client like Android 12

149
00:06:45,600 --> 00:06:47,280
it will not just let you get away with

150
00:06:47,280 --> 00:06:49,440
saying I don't care the option has just

151
00:06:49,440 --> 00:06:51,960
gone away and it's tested to be not

152
00:06:51,960 --> 00:06:53,160
there

153
00:06:53,160 --> 00:06:55,440
um that was one thing the other way to

154
00:06:55,440 --> 00:06:59,280
do this uh in each is when the radius

155
00:06:59,280 --> 00:07:00,660
and EPS server

156
00:07:00,660 --> 00:07:02,900
only accepts requests from a specific

157
00:07:02,900 --> 00:07:06,300
weird username as the outer identity so

158
00:07:06,300 --> 00:07:08,280
if you just click on a network don't

159
00:07:08,280 --> 00:07:10,860
configure anything yourself then you

160
00:07:10,860 --> 00:07:12,300
would just use the inner equals outer

161
00:07:12,300 --> 00:07:14,160
identity and the server would recognize

162
00:07:14,160 --> 00:07:15,960
you did not use the onboarding tool

163
00:07:15,960 --> 00:07:18,000
because you were not configured for this

164
00:07:18,000 --> 00:07:19,199
special username

165
00:07:19,199 --> 00:07:22,319
so we don't like you

166
00:07:22,319 --> 00:07:27,360
so um but when so when you do uh you say

167
00:07:27,360 --> 00:07:29,340
you require configuration to be pushed

168
00:07:29,340 --> 00:07:32,940
to the device now is that configuration

169
00:07:32,940 --> 00:07:36,180
just like in in your world how is the

170
00:07:36,180 --> 00:07:39,720
certificate uh you know a CA hierarchy

171
00:07:39,720 --> 00:07:41,699
and naming done like so is there a

172
00:07:41,699 --> 00:07:44,400
single hierarchy that all servers have

173
00:07:44,400 --> 00:07:46,319
an issue or do you have a series of

174
00:07:46,319 --> 00:07:49,500
certificates in a bag of certs or how

175
00:07:49,500 --> 00:07:50,699
does that work

176
00:07:50,699 --> 00:07:53,940
so the choice of server certificate is a

177
00:07:53,940 --> 00:07:56,940
per IDP or a realm of choice so we don't

178
00:07:56,940 --> 00:07:59,400
have any particular requirements so

179
00:07:59,400 --> 00:08:02,759
many idps choose to use a commercial CA

180
00:08:02,759 --> 00:08:04,919
and rotate the server certificate within

181
00:08:04,919 --> 00:08:07,680
that trust chain every year others

182
00:08:07,680 --> 00:08:10,080
choose to deploy a private CA special

183
00:08:10,080 --> 00:08:11,759
purpose CA just write your own purposes

184
00:08:11,759 --> 00:08:15,060
with longer lifetimes and so on and some

185
00:08:15,060 --> 00:08:17,819
even just have a self-cent certificate

186
00:08:17,819 --> 00:08:20,580
um it's it's up to them what we require

187
00:08:20,580 --> 00:08:22,319
is that they tell the users what the

188
00:08:22,319 --> 00:08:23,879
certificate is and how to properly

189
00:08:23,879 --> 00:08:26,539
configure it

190
00:08:29,940 --> 00:08:32,640
so yeah I think that's a big step ahead

191
00:08:32,640 --> 00:08:34,620
from where we were a few years ago

192
00:08:34,620 --> 00:08:36,839
because I know what I was saying in in

193
00:08:36,839 --> 00:08:39,719
radex too was that a few years ago we

194
00:08:39,719 --> 00:08:42,479
did some tests in a university and most

195
00:08:42,479 --> 00:08:44,039
of the supplicants simply did not

196
00:08:44,039 --> 00:08:46,200
validate the server certificate or the

197
00:08:46,200 --> 00:08:48,420
CA and would happily hand the users

198
00:08:48,420 --> 00:08:51,000
credentials to anyone

199
00:08:51,000 --> 00:08:53,220
um I I don't know why that would ever be

200
00:08:53,220 --> 00:08:55,560
a good idea but I guess pushing that

201
00:08:55,560 --> 00:08:57,360
through the Wi-Fi Alliance and you're

202
00:08:57,360 --> 00:08:59,940
forbidden from doing that is a good idea

203
00:08:59,940 --> 00:09:02,940
and also the automatic configuration is

204
00:09:02,940 --> 00:09:04,860
a big step

205
00:09:04,860 --> 00:09:06,660
um but I guess this is this may be more

206
00:09:06,660 --> 00:09:10,500
for operators than implementers

207
00:09:10,500 --> 00:09:12,420
um what issues are you having with

208
00:09:12,420 --> 00:09:14,100
certificates

209
00:09:14,100 --> 00:09:16,140
um because I I hear some I've put some

210
00:09:16,140 --> 00:09:18,959
ideas in but if there's more and more

211
00:09:18,959 --> 00:09:20,700
requests it'd be good to get that in a

212
00:09:20,700 --> 00:09:22,800
document

213
00:09:22,800 --> 00:09:25,080
okay we have some folks in the queue of

214
00:09:25,080 --> 00:09:27,740
massimiliano

215
00:09:29,040 --> 00:09:30,779
hi everybody

216
00:09:30,779 --> 00:09:33,240
um good morning good afternoon from

217
00:09:33,240 --> 00:09:36,600
Colorado so I just wanted to so in our

218
00:09:36,600 --> 00:09:38,760
in our industry so I work for cable lab

219
00:09:38,760 --> 00:09:42,060
so in the cable Broadband industry one

220
00:09:42,060 --> 00:09:43,740
of the problems that we have and we're

221
00:09:43,740 --> 00:09:45,660
trying to address is actually managing

222
00:09:45,660 --> 00:09:48,540
all these different type of credentials

223
00:09:48,540 --> 00:09:51,120
that devices have and out on our

224
00:09:51,120 --> 00:09:53,399
networks and usually these credentials

225
00:09:53,399 --> 00:09:55,320
are not really managed right so one of

226
00:09:55,320 --> 00:09:56,940
the problems that we found is that

227
00:09:56,940 --> 00:09:58,860
especially when you come in this can be

228
00:09:58,860 --> 00:10:01,200
extended to iot type of discussion where

229
00:10:01,200 --> 00:10:03,120
there's one set of credentials that is

230
00:10:03,120 --> 00:10:04,860
used to access the network and there's

231
00:10:04,860 --> 00:10:06,899
another set of credentials for user

232
00:10:06,899 --> 00:10:09,839
level type of applications usually the

233
00:10:09,839 --> 00:10:12,779
first set is always forgotten right so

234
00:10:12,779 --> 00:10:15,480
it's my home connection or is something

235
00:10:15,480 --> 00:10:17,040
that I don't really don't care about

236
00:10:17,040 --> 00:10:19,140
because I only care about my credentials

237
00:10:19,140 --> 00:10:21,420
however these are very important you

238
00:10:21,420 --> 00:10:23,880
know as we know you know compromised

239
00:10:23,880 --> 00:10:27,240
devices can really lead to disastrous uh

240
00:10:27,240 --> 00:10:30,420
issues like botnet cetera so one of the

241
00:10:30,420 --> 00:10:32,459
things that we are we worked on in some

242
00:10:32,459 --> 00:10:33,959
environments and we are trying to to

243
00:10:33,959 --> 00:10:36,660
bring also here is you know managing

244
00:10:36,660 --> 00:10:38,880
actively managing these credentials and

245
00:10:38,880 --> 00:10:42,360
if for us seems to be a very a very uh

246
00:10:42,360 --> 00:10:44,880
useful uh Paradigm because we don't want

247
00:10:44,880 --> 00:10:46,920
to have to provision all the tcpe ETC

248
00:10:46,920 --> 00:10:49,860
and then do all this this thing but

249
00:10:49,860 --> 00:10:52,560
doing before devices have any access to

250
00:10:52,560 --> 00:10:55,459
our Network so that we provision we we

251
00:10:55,459 --> 00:10:57,779
manage these credentials and we only

252
00:10:57,779 --> 00:11:00,300
give access after we manage the

253
00:11:00,300 --> 00:11:03,300
credentials or we evaluate that so for

254
00:11:03,300 --> 00:11:05,100
us it's definitely there's a very very

255
00:11:05,100 --> 00:11:09,600
important use case we have we did

256
00:11:09,600 --> 00:11:12,300
um we propose an approach that's called

257
00:11:12,300 --> 00:11:15,480
epcrads that we already standardized in

258
00:11:15,480 --> 00:11:17,880
cbrs and we would like to continue to

259
00:11:17,880 --> 00:11:19,680
work on this we were not ready at this

260
00:11:19,680 --> 00:11:22,500
ITF because of additional work in other

261
00:11:22,500 --> 00:11:24,899
work groups uh but definitely we want to

262
00:11:24,899 --> 00:11:27,240
continue the the the consideration

263
00:11:27,240 --> 00:11:28,860
because we think it's really really

264
00:11:28,860 --> 00:11:31,019
important to have some kind of solutions

265
00:11:31,019 --> 00:11:33,480
and and think about also in this you

266
00:11:33,480 --> 00:11:34,920
know from operator standpoint of view

267
00:11:34,920 --> 00:11:37,680
now we have different types of networks

268
00:11:37,680 --> 00:11:42,000
as well so we have from 3gpp Wi-Fi and

269
00:11:42,000 --> 00:11:45,180
and wired and they all have different

270
00:11:45,180 --> 00:11:47,300
provisioning mechanisms different

271
00:11:47,300 --> 00:11:49,740
validating mechanism so having something

272
00:11:49,740 --> 00:11:51,779
that you know mechanism that we run on

273
00:11:51,779 --> 00:11:54,060
it that we can use to really bring

274
00:11:54,060 --> 00:11:57,000
together this managing of all these type

275
00:11:57,000 --> 00:11:59,940
of credentials this type of networks for

276
00:11:59,940 --> 00:12:01,800
managing this is very specific for

277
00:12:01,800 --> 00:12:04,140
managing network access credentials so

278
00:12:04,140 --> 00:12:06,420
for our use case is very specific not to

279
00:12:06,420 --> 00:12:08,760
manage everything just very specific

280
00:12:08,760 --> 00:12:11,180
ones

281
00:12:11,339 --> 00:12:13,920
does that uh working the the action that

282
00:12:13,920 --> 00:12:16,640
you were thinking

283
00:12:17,160 --> 00:12:19,560
yeah um anything can make this easier

284
00:12:19,560 --> 00:12:21,660
for people and it's just a matter for

285
00:12:21,660 --> 00:12:24,360
the certificate issue specifically

286
00:12:24,360 --> 00:12:26,579
just writing down what the requirements

287
00:12:26,579 --> 00:12:28,260
are and how to solve them so yeah any

288
00:12:28,260 --> 00:12:30,800
help is good

289
00:12:35,640 --> 00:12:37,860
okay Kari

290
00:12:37,860 --> 00:12:42,180
yeah hi this is from radiator software I

291
00:12:42,180 --> 00:12:43,200
think

292
00:12:43,200 --> 00:12:47,220
maybe one uh topic of discussion is that

293
00:12:47,220 --> 00:12:49,500
how to separate these different

294
00:12:49,500 --> 00:12:52,320
uh problems with certificates if we

295
00:12:52,320 --> 00:12:54,779
think about let's say radio server

296
00:12:54,779 --> 00:12:58,019
certificates they are kind of uh I don't

297
00:12:58,019 --> 00:13:01,800
see a lot of problems with with them uh

298
00:13:01,800 --> 00:13:03,899
the most most of the problems is related

299
00:13:03,899 --> 00:13:06,839
to that that organizations they don't

300
00:13:06,839 --> 00:13:10,019
remember to renew their certificates and

301
00:13:10,019 --> 00:13:12,180
this can be handled with something like

302
00:13:12,180 --> 00:13:14,279
automation like let's encrypt or

303
00:13:14,279 --> 00:13:16,260
something like that so that's a kind of

304
00:13:16,260 --> 00:13:18,360
a solo Apple issue and it's not a kind

305
00:13:18,360 --> 00:13:21,600
of a very important one but then uh

306
00:13:21,600 --> 00:13:25,399
when we have this kind of device is

307
00:13:25,399 --> 00:13:28,740
with end users who don't have the

308
00:13:28,740 --> 00:13:31,200
connection to the actual authenticator

309
00:13:31,200 --> 00:13:35,339
to IDP there and it would be needed to

310
00:13:35,339 --> 00:13:39,120
okay give it these users and devices a

311
00:13:39,120 --> 00:13:42,060
certificate and the Liberty devices are

312
00:13:42,060 --> 00:13:45,180
not under any mobile device management a

313
00:13:45,180 --> 00:13:47,399
kind of a providing a certificate to

314
00:13:47,399 --> 00:13:49,440
those devices those users that's the

315
00:13:49,440 --> 00:13:52,200
hard part because uh the users may not

316
00:13:52,200 --> 00:13:54,779
for example like to install Ado ROM cut

317
00:13:54,779 --> 00:13:57,720
this kind of a configuration a tool they

318
00:13:57,720 --> 00:13:59,660
would just rather take something like

319
00:13:59,660 --> 00:14:02,220
coming from the web server or something

320
00:14:02,220 --> 00:14:04,860
like profile tear and with this kind of

321
00:14:04,860 --> 00:14:07,200
approach there are security issues that

322
00:14:07,200 --> 00:14:10,200
for example with iPhones you can get all

323
00:14:10,200 --> 00:14:13,200
kinds of nice let's say profiles and

324
00:14:13,200 --> 00:14:16,139
some of the malware app stores operate

325
00:14:16,139 --> 00:14:18,720
just like this so that they offer a

326
00:14:18,720 --> 00:14:22,139
profile for users to install and then

327
00:14:22,139 --> 00:14:25,620
the device is kind of owned there

328
00:14:25,620 --> 00:14:28,800
so uh this kind of way to provide

329
00:14:28,800 --> 00:14:31,380
those client certificates to the devices

330
00:14:31,380 --> 00:14:33,660
that users who are not kind of part of

331
00:14:33,660 --> 00:14:36,060
the let's say identity domain or the

332
00:14:36,060 --> 00:14:37,860
identity provider service that's the

333
00:14:37,860 --> 00:14:42,240
kind of a uh let's say hard issue to

334
00:14:42,240 --> 00:14:44,899
tackle of it

335
00:14:45,720 --> 00:14:48,920
thank you I agree thanks

336
00:14:52,560 --> 00:14:54,120
um

337
00:14:54,120 --> 00:14:55,980
uh so one of the actual complications

338
00:14:55,980 --> 00:14:58,560
with EPS of course that you use Eve

339
00:14:58,560 --> 00:15:00,240
often to get network access so you're

340
00:15:00,240 --> 00:15:01,620
offline

341
00:15:01,620 --> 00:15:03,720
um so we're always torn apart between

342
00:15:03,720 --> 00:15:06,240
these onboarding tools which can be

343
00:15:06,240 --> 00:15:08,399
distributed offline and you just run

344
00:15:08,399 --> 00:15:10,620
them and they work versus you have to

345
00:15:10,620 --> 00:15:12,120
contact some server to fetch your

346
00:15:12,120 --> 00:15:14,519
configuration from and

347
00:15:14,519 --> 00:15:16,500
um yeah both have their ups and

348
00:15:16,500 --> 00:15:18,899
downsides so far we've always been using

349
00:15:18,899 --> 00:15:21,060
offline tools

350
00:15:21,060 --> 00:15:21,839
um

351
00:15:21,839 --> 00:15:24,000
but those are less convenient than just

352
00:15:24,000 --> 00:15:25,500
going to a website clicking your

353
00:15:25,500 --> 00:15:27,839
configuration together and so on

354
00:15:27,839 --> 00:15:30,720
yeah so so some of what I've I've

355
00:15:30,720 --> 00:15:33,480
discussed in the documents is

356
00:15:33,480 --> 00:15:35,820
um about that specific kind of thing one

357
00:15:35,820 --> 00:15:38,160
of which is realistically speaking most

358
00:15:38,160 --> 00:15:40,800
devices have two kinds of network access

359
00:15:40,800 --> 00:15:44,220
you know your phone has a 3G backhaul so

360
00:15:44,220 --> 00:15:46,440
if you want to get on Wi-Fi you have a

361
00:15:46,440 --> 00:15:48,720
way to get to the corporate website or

362
00:15:48,720 --> 00:15:51,360
your laptop well if you can't get on the

363
00:15:51,360 --> 00:15:53,519
corporate Network at least you have a

364
00:15:53,519 --> 00:15:55,380
home network and you have a way to

365
00:15:55,380 --> 00:15:56,579
download something and there's various

366
00:15:56,579 --> 00:15:59,880
ways to do this my two cents for some

367
00:15:59,880 --> 00:16:02,100
things is

368
00:16:02,100 --> 00:16:04,920
it may be useful to define something

369
00:16:04,920 --> 00:16:08,160
like at eep.arpa which I've talked about

370
00:16:08,160 --> 00:16:09,779
on the mailing list and the idea is

371
00:16:09,779 --> 00:16:12,779
you'd use unauthenticated epls

372
00:16:12,779 --> 00:16:15,180
you now have a network access and now

373
00:16:15,180 --> 00:16:16,920
you do whatever you want in order to

374
00:16:16,920 --> 00:16:19,740
download things via some rest API the

375
00:16:19,740 --> 00:16:22,740
feedback from the vendors is the radius

376
00:16:22,740 --> 00:16:24,420
people don't talk to the network people

377
00:16:24,420 --> 00:16:27,000
or the DNS people or the web server

378
00:16:27,000 --> 00:16:29,100
people so that kind of thing is very

379
00:16:29,100 --> 00:16:30,839
very difficult to do in certain

380
00:16:30,839 --> 00:16:32,639
environments so there are Technical

381
00:16:32,639 --> 00:16:34,980
Solutions which are relatively simple

382
00:16:34,980 --> 00:16:38,540
but administratively hard

383
00:16:39,240 --> 00:16:41,839
Deb

384
00:16:43,740 --> 00:16:45,360
so

385
00:16:45,360 --> 00:16:48,240
let's do that better

386
00:16:48,240 --> 00:16:50,220
can I ask questions

387
00:16:50,220 --> 00:16:52,560
so we're talking devices not people

388
00:16:52,560 --> 00:16:54,180
right

389
00:16:54,180 --> 00:16:57,120
um generally yes generally and like

390
00:16:57,120 --> 00:16:59,040
devices that are

391
00:16:59,040 --> 00:17:01,320
capable like phones and laptops or

392
00:17:01,320 --> 00:17:03,720
general yeah it's it's generally

393
00:17:03,720 --> 00:17:06,299
people's devices iot is a whole separate

394
00:17:06,299 --> 00:17:07,380
thing it's a whole different ball game

395
00:17:07,380 --> 00:17:09,720
right yeah because they have their you

396
00:17:09,720 --> 00:17:13,439
know no UI no keyboard no nothing they

397
00:17:13,439 --> 00:17:15,299
just have to magically get on magically

398
00:17:15,299 --> 00:17:17,040
get on the network right so so we're

399
00:17:17,040 --> 00:17:19,140
talking devices that are reasonably

400
00:17:19,140 --> 00:17:21,780
capable devices yes and you don't want

401
00:17:21,780 --> 00:17:23,699
to run down the rabbit hole of saying uh

402
00:17:23,699 --> 00:17:26,220
just go do 5280 right

403
00:17:26,220 --> 00:17:29,280
that's the cert that's this is it 5280

404
00:17:29,280 --> 00:17:32,160
or 36 70 47 it that those are the those

405
00:17:32,160 --> 00:17:34,320
are the pkx documents you don't want to

406
00:17:34,320 --> 00:17:37,260
do that right I mean that's

407
00:17:37,260 --> 00:17:41,580
a rabbit hole I think we are in the kind

408
00:17:41,580 --> 00:17:43,559
of the peacocks world at least right now

409
00:17:43,559 --> 00:17:45,960
because we're using TLS you are but you

410
00:17:45,960 --> 00:17:48,200
don't want

411
00:17:48,419 --> 00:17:49,679
to know and

412
00:17:49,679 --> 00:17:51,360
it doesn't really solve all the problem

413
00:17:51,360 --> 00:17:53,880
either because there's a lot of other

414
00:17:53,880 --> 00:17:56,640
network configuration which

415
00:17:56,640 --> 00:17:59,520
doesn't exist in the certificates or if

416
00:17:59,520 --> 00:18:02,039
it does creates other issues well so it

417
00:18:02,039 --> 00:18:03,179
does tell you what part of the

418
00:18:03,179 --> 00:18:05,580
certificate you need to validate

419
00:18:05,580 --> 00:18:08,400
and how but but for example for my for

420
00:18:08,400 --> 00:18:10,440
my iPhone right if I want to get online

421
00:18:10,440 --> 00:18:13,200
I need to know the SSID among other

422
00:18:13,200 --> 00:18:15,299
things right and where does that come

423
00:18:15,299 --> 00:18:18,000
from the Wi-Fi Alliance in WBA I forget

424
00:18:18,000 --> 00:18:20,220
which one this is XML configuration

425
00:18:20,220 --> 00:18:22,740
which is has all of that including which

426
00:18:22,740 --> 00:18:24,900
eat method to use

427
00:18:24,900 --> 00:18:27,480
um that typically is not in the search

428
00:18:27,480 --> 00:18:29,820
so there are also specifications for

429
00:18:29,820 --> 00:18:32,039
naming and all of those like a bunch of

430
00:18:32,039 --> 00:18:34,140
it like cab forum

431
00:18:34,140 --> 00:18:35,700
you know places like that will tell you

432
00:18:35,700 --> 00:18:37,679
how you have to name things and how you

433
00:18:37,679 --> 00:18:39,240
have to but that's web right so we're

434
00:18:39,240 --> 00:18:40,679
not necessary we're definitely not

435
00:18:40,679 --> 00:18:44,360
talking web but we're talking to you yes

436
00:18:44,360 --> 00:18:47,160
realistically speaking

437
00:18:47,160 --> 00:18:49,919
um everyone who almost everyone lots of

438
00:18:49,919 --> 00:18:51,600
people who have

439
00:18:51,600 --> 00:18:54,900
Wi-Fi authentication use the web server

440
00:18:54,900 --> 00:18:57,840
server certificates from the cab Forum

441
00:18:57,840 --> 00:19:01,620
because there are no other public Cas so

442
00:19:01,620 --> 00:19:03,360
you have to sort of wink at the cab

443
00:19:03,360 --> 00:19:05,700
Forum or their your certification

444
00:19:05,700 --> 00:19:07,980
Authority right and go yeah I'm gonna

445
00:19:07,980 --> 00:19:10,380
put this on a web server and then you

446
00:19:10,380 --> 00:19:12,720
put on your radio server so the problem

447
00:19:12,720 --> 00:19:14,820
there is you're then adhering to the cab

448
00:19:14,820 --> 00:19:17,520
form rules of trust store rules which

449
00:19:17,520 --> 00:19:19,799
leads you down a little different

450
00:19:19,799 --> 00:19:21,720
path right

451
00:19:21,720 --> 00:19:23,039
um which you don't necessarily care

452
00:19:23,039 --> 00:19:23,880
about

453
00:19:23,880 --> 00:19:26,280
I don't I don't think

454
00:19:26,280 --> 00:19:26,880
um

455
00:19:26,880 --> 00:19:28,500
shoot what was I going to ask oh so

456
00:19:28,500 --> 00:19:31,140
public Cas versus private CA sounds like

457
00:19:31,140 --> 00:19:34,740
you got a mix yep you do both

458
00:19:34,740 --> 00:19:37,919
um in a case where you do private cas

459
00:19:37,919 --> 00:19:40,080
es easier because you can install the

460
00:19:40,080 --> 00:19:42,000
trust stores yourself

461
00:19:42,000 --> 00:19:45,360
it's technically easy to use a private

462
00:19:45,360 --> 00:19:49,260
CA managing them over time is very very

463
00:19:49,260 --> 00:19:52,620
important yeah yeah yeah yeah so I I

464
00:19:52,620 --> 00:19:55,740
work duty pki we know about privacyas

465
00:19:55,740 --> 00:19:58,740
and managing them over time is a

466
00:19:58,740 --> 00:20:01,240
thing right yeah

467
00:20:01,240 --> 00:20:03,299
[Laughter]

468
00:20:03,299 --> 00:20:04,679
um sorry

469
00:20:04,679 --> 00:20:06,720
I didn't announce myself did I so I'm

470
00:20:06,720 --> 00:20:09,000
Doug Cooley I'm from NSA but I work in

471
00:20:09,000 --> 00:20:11,160
the CSD piece

472
00:20:11,160 --> 00:20:12,480
um so

473
00:20:12,480 --> 00:20:15,000
public cdas or private Cas they both

474
00:20:15,000 --> 00:20:16,799
have their issues but that's two little

475
00:20:16,799 --> 00:20:19,320
sets of things you have to do right that

476
00:20:19,320 --> 00:20:20,760
are going to be different

477
00:20:20,760 --> 00:20:22,679
because if you're doing public ca's you

478
00:20:22,679 --> 00:20:24,000
don't have to manage the trust store

479
00:20:24,000 --> 00:20:27,179
like you do with a private CA

480
00:20:27,179 --> 00:20:29,400
but it introduces a different set of

481
00:20:29,400 --> 00:20:31,620
problems right because you you can't

482
00:20:31,620 --> 00:20:33,480
validate these certificates in the same

483
00:20:33,480 --> 00:20:35,100
way as you would a web server

484
00:20:35,100 --> 00:20:37,679
certificate right exactly right and then

485
00:20:37,679 --> 00:20:39,780
getting client search off of a public CA

486
00:20:39,780 --> 00:20:42,799
might be an issue as well

487
00:20:43,200 --> 00:20:45,360
um very often it's either difficult or

488
00:20:45,360 --> 00:20:47,520
very expensive to get an internal

489
00:20:47,520 --> 00:20:49,799
intermediate CA where you can get the

490
00:20:49,799 --> 00:20:52,620
right to sign your own client search if

491
00:20:52,620 --> 00:20:55,740
you want to put certain all IDs into the

492
00:20:55,740 --> 00:20:58,860
cert like for radius there's Dynamic

493
00:20:58,860 --> 00:21:02,700
Discovery you put Nai realm in there on

494
00:21:02,700 --> 00:21:05,039
the cab Forum will reject those

495
00:21:05,039 --> 00:21:07,740
certificate requests because they are

496
00:21:07,740 --> 00:21:09,780
web only and denied than anything other

497
00:21:09,780 --> 00:21:11,460
than that are you picky about client

498
00:21:11,460 --> 00:21:14,539
auth versus server off

499
00:21:15,240 --> 00:21:18,600
um no idkp server auth and idkp like

500
00:21:18,600 --> 00:21:20,220
it's client auth

501
00:21:20,220 --> 00:21:20,960
um

502
00:21:20,960 --> 00:21:24,059
were originally designed

503
00:21:24,059 --> 00:21:27,480
um in part for epls too

504
00:21:27,480 --> 00:21:29,580
um some of the stuff in TLS was put in

505
00:21:29,580 --> 00:21:33,299
there for epls including uh

506
00:21:33,299 --> 00:21:37,020
key exports but there are oids which

507
00:21:37,020 --> 00:21:39,419
other protocols would like to use which

508
00:21:39,419 --> 00:21:41,940
are forbidden by the cad Forum right but

509
00:21:41,940 --> 00:21:43,440
you should be able to get server author

510
00:21:43,440 --> 00:21:44,760
client off and whatever you want

511
00:21:44,760 --> 00:21:48,000
everyone gets those yeah but the Ayana

512
00:21:48,000 --> 00:21:49,919
registry says TLS web server

513
00:21:49,919 --> 00:21:53,100
authentication and people use it for Eep

514
00:21:53,100 --> 00:21:55,080
people use it for radius people use it

515
00:21:55,080 --> 00:21:56,720
for everything else

516
00:21:56,720 --> 00:21:59,580
it's a complete disaster and it's

517
00:21:59,580 --> 00:22:02,340
impossible or it's fine in everyone well

518
00:22:02,340 --> 00:22:04,919
it's fine because they don't check it

519
00:22:04,919 --> 00:22:07,200
if you believe certain

520
00:22:07,200 --> 00:22:10,320
certain discussions and certain yeah

521
00:22:10,320 --> 00:22:12,600
suggestions about what the cab Forum

522
00:22:12,600 --> 00:22:14,220
rules are

523
00:22:14,220 --> 00:22:17,460
um every MTA that uses a cab Forum

524
00:22:17,460 --> 00:22:21,720
certificate should have their CA banned

525
00:22:21,720 --> 00:22:23,280
should have their not only their

526
00:22:23,280 --> 00:22:25,440
certificate band but if the ca continues

527
00:22:25,440 --> 00:22:28,020
to issue those certificates have it

528
00:22:28,020 --> 00:22:30,480
banned because there's a certain opinion

529
00:22:30,480 --> 00:22:33,240
that the cab Forum uh Cas and

530
00:22:33,240 --> 00:22:35,700
certificates are only for use with TLS

531
00:22:35,700 --> 00:22:39,000
webs web servers so do you

532
00:22:39,000 --> 00:22:41,280
um is this what draft does this end

533
00:22:41,280 --> 00:22:43,380
currently

534
00:22:43,380 --> 00:22:46,140
um there's an Eep onboarding draft and

535
00:22:46,140 --> 00:22:48,000
there's a

536
00:22:48,000 --> 00:22:49,159
um

537
00:22:49,159 --> 00:22:51,659
configuration draft that I if you look

538
00:22:51,659 --> 00:22:54,179
for my name you'll get them yeah so not

539
00:22:54,179 --> 00:22:56,400
your best practices draft but you're a

540
00:22:56,400 --> 00:22:57,659
different one

541
00:22:57,659 --> 00:22:59,760
I've read the best practices draft I

542
00:22:59,760 --> 00:23:01,879
think

543
00:23:02,039 --> 00:23:04,980
a while ago so yeah we have to figure

544
00:23:04,980 --> 00:23:07,679
out what to do because yes

545
00:23:07,679 --> 00:23:09,780
I think you have to say something right

546
00:23:09,780 --> 00:23:11,340
you can't just like leave it open

547
00:23:11,340 --> 00:23:14,220
because not validating a server sir a

548
00:23:14,220 --> 00:23:17,520
server is ridiculous right well and and

549
00:23:17,520 --> 00:23:21,539
also sorry you know that out loud using

550
00:23:21,539 --> 00:23:24,539
using TLS web server certificates and

551
00:23:24,539 --> 00:23:27,299
situations where they are forbidden

552
00:23:27,299 --> 00:23:29,340
seems to be an issue the fact that

553
00:23:29,340 --> 00:23:31,200
nobody cares and nobody does anything is

554
00:23:31,200 --> 00:23:34,080
annoying but you know my two cents is

555
00:23:34,080 --> 00:23:35,880
hey if I can go War driving around the

556
00:23:35,880 --> 00:23:37,740
planet and

557
00:23:37,740 --> 00:23:39,960
find all these certificates used in

558
00:23:39,960 --> 00:23:43,020
invalid locations and report them and

559
00:23:43,020 --> 00:23:45,059
kick everyone off of corporate Wi-Fi

560
00:23:45,059 --> 00:23:46,980
worldwide that's a bad thing so I don't

561
00:23:46,980 --> 00:23:48,900
think they're forbidden per se but

562
00:23:48,900 --> 00:23:50,039
they're not it's not what they were

563
00:23:50,039 --> 00:23:52,559
designed for right so if you can make it

564
00:23:52,559 --> 00:23:54,539
if you can make it work even though it's

565
00:23:54,539 --> 00:23:56,460
not designed for you I think fair enough

566
00:23:56,460 --> 00:23:58,500
right oh there's no question you can't

567
00:23:58,500 --> 00:24:00,960
do what you can't do is that you can't

568
00:24:00,960 --> 00:24:04,620
request assert with forbidden extensions

569
00:24:04,620 --> 00:24:07,260
that the cab Forum doesn't want and get

570
00:24:07,260 --> 00:24:08,940
away with that right doesn't work I'm

571
00:24:08,940 --> 00:24:11,280
sorry well that doesn't work but

572
00:24:11,280 --> 00:24:13,200
depending on who you talk to it's also

573
00:24:13,200 --> 00:24:15,059
forbidden to use those certificates for

574
00:24:15,059 --> 00:24:18,659
anything other than GLS web and it's a

575
00:24:18,659 --> 00:24:21,000
it it's an issue either it has to be

576
00:24:21,000 --> 00:24:23,100
clarified or fixed or something yeah

577
00:24:23,100 --> 00:24:25,380
okay it's a hard problem

578
00:24:25,380 --> 00:24:28,700
I'm sorry and I'm taking up too much

579
00:24:28,919 --> 00:24:30,240
Josh

580
00:24:30,240 --> 00:24:32,700
uh Joe Charlotte Alan you mentioned some

581
00:24:32,700 --> 00:24:35,100
proposal you've made something you

582
00:24:35,100 --> 00:24:37,200
mentioned wood upper and something to do

583
00:24:37,200 --> 00:24:40,320
with DNS yeah so

584
00:24:40,320 --> 00:24:42,240
this is

585
00:24:42,240 --> 00:24:45,299
this is my my sort of finger in the air

586
00:24:45,299 --> 00:24:47,220
proposal

587
00:24:47,220 --> 00:24:50,159
um for example does provisioning

588
00:24:50,159 --> 00:24:51,480
overteep

589
00:24:51,480 --> 00:24:55,100
as an Eep implementer I really dislike

590
00:24:55,100 --> 00:24:58,260
re-implementing IP over Heap

591
00:24:58,260 --> 00:25:00,840
um it's not quite IP it's not quite bulk

592
00:25:00,840 --> 00:25:03,900
data transfer but it could be and it's

593
00:25:03,900 --> 00:25:07,020
just it just smells to me

594
00:25:07,020 --> 00:25:09,200
um on the other hand if you say

595
00:25:09,200 --> 00:25:11,820
unauthenticated epls

596
00:25:11,820 --> 00:25:15,539
my username is at eat.arpa whoever

597
00:25:15,539 --> 00:25:18,059
you're authenticating to goes oh I'm

598
00:25:18,059 --> 00:25:19,860
going to put you in a quarantine VLAN

599
00:25:19,860 --> 00:25:22,500
you can get to you know the corporate

600
00:25:22,500 --> 00:25:24,059
web server

601
00:25:24,059 --> 00:25:27,539
authenticated via your existing Cas web

602
00:25:27,539 --> 00:25:30,900
Cas oh look there's files there

603
00:25:30,900 --> 00:25:34,020
saying how to download things and how do

604
00:25:34,020 --> 00:25:36,299
you configure yourself for the actual

605
00:25:36,299 --> 00:25:38,220
Eep configuration

606
00:25:38,220 --> 00:25:42,779
downside with this is DNS web people are

607
00:25:42,779 --> 00:25:44,340
in a different organization than the

608
00:25:44,340 --> 00:25:46,200
radius people and if you talk to the

609
00:25:46,200 --> 00:25:48,720
various vendors they say that is very

610
00:25:48,720 --> 00:25:51,539
often a hard requirement you cannot have

611
00:25:51,539 --> 00:25:54,240
radius or Eep make restrictions in other

612
00:25:54,240 --> 00:25:56,940
people so it's a solution

613
00:25:56,940 --> 00:25:59,100
but not administrative do you have a

614
00:25:59,100 --> 00:26:03,120
draw for it yes okay was it cool uh it's

615
00:26:03,120 --> 00:26:07,039
Eep onboarding okay thank you

616
00:26:08,110 --> 00:26:10,380
[Music]

617
00:26:10,380 --> 00:26:12,720
um so as we talked about peacocks going

618
00:26:12,720 --> 00:26:13,980
down the peacocks route and client

619
00:26:13,980 --> 00:26:16,620
certificates just to clarify um there is

620
00:26:16,620 --> 00:26:18,179
a growing understanding in our community

621
00:26:18,179 --> 00:26:22,740
that passwords uh are on the way out so

622
00:26:22,740 --> 00:26:25,320
um there are also some deployers that

623
00:26:25,320 --> 00:26:27,240
chose to send you to a website

624
00:26:27,240 --> 00:26:29,039
authenticate with your web credential

625
00:26:29,039 --> 00:26:31,799
which could be a Fido key or well still

626
00:26:31,799 --> 00:26:34,020
the best one if you don't care and issue

627
00:26:34,020 --> 00:26:36,299
you a client certificate for the Wi-Fi

628
00:26:36,299 --> 00:26:38,400
purposes for the purposes

629
00:26:38,400 --> 00:26:40,679
um which has the advantage that since

630
00:26:40,679 --> 00:26:41,940
you have to download the client

631
00:26:41,940 --> 00:26:44,159
certificate anyway you can just in the

632
00:26:44,159 --> 00:26:45,900
same moment also be forced to download

633
00:26:45,900 --> 00:26:47,520
the whole configuration including the

634
00:26:47,520 --> 00:26:50,220
server software validation so yet the

635
00:26:50,220 --> 00:26:51,539
same package that you would get if you

636
00:26:51,539 --> 00:26:53,760
were to use a simple password-based

637
00:26:53,760 --> 00:26:55,919
method but now you have into your list

638
00:26:55,919 --> 00:26:56,820
inside

639
00:26:56,820 --> 00:26:59,220
rather elegant but again you need online

640
00:26:59,220 --> 00:27:00,900
support you also need to be able to

641
00:27:00,900 --> 00:27:03,779
manage your seminal off connection to

642
00:27:03,779 --> 00:27:06,299
the validation server and so on so this

643
00:27:06,299 --> 00:27:08,220
again brings its own capacities

644
00:27:08,220 --> 00:27:11,039
on on that note the other thing which

645
00:27:11,039 --> 00:27:13,320
has been getting some press recently is

646
00:27:13,320 --> 00:27:15,659
Pass Key support right which if you

647
00:27:15,659 --> 00:27:18,179
drill down to it into it is essentially

648
00:27:18,179 --> 00:27:21,480
naked public private key pairs well if

649
00:27:21,480 --> 00:27:22,919
you can use it for the web why not for

650
00:27:22,919 --> 00:27:27,120
Eep right Stefan says no

651
00:27:27,120 --> 00:27:30,659
except open SSL doesn't RFC 7250. I'm

652
00:27:30,659 --> 00:27:33,059
going to say I'd love to but uh Fido and

653
00:27:33,059 --> 00:27:34,260
web often is something I look into

654
00:27:34,260 --> 00:27:36,600
myself and the issue is that every time

655
00:27:36,600 --> 00:27:38,279
you authenticate you have to be

656
00:27:38,279 --> 00:27:39,960
validated for being present at the

657
00:27:39,960 --> 00:27:41,820
device so you have to put your finger on

658
00:27:41,820 --> 00:27:44,100
something for Wi-Fi this is exactly not

659
00:27:44,100 --> 00:27:46,080
what you want

660
00:27:46,080 --> 00:27:47,159
okay

661
00:27:47,159 --> 00:27:50,039
so lots of issues no Solutions

662
00:27:50,039 --> 00:27:53,100
just like last time

663
00:27:53,100 --> 00:27:55,679
yeah some some notes about these

664
00:27:55,679 --> 00:27:58,440
different things one that was maybe not

665
00:27:58,440 --> 00:28:00,659
mentioned here is that some of the

666
00:28:00,659 --> 00:28:03,960
devices they have they used to have this

667
00:28:03,960 --> 00:28:06,299
kind of common certificate store so they

668
00:28:06,299 --> 00:28:08,299
don't have a certificate store per the

669
00:28:08,299 --> 00:28:10,740
functionality so they have a common

670
00:28:10,740 --> 00:28:15,360
certificate store for web for Wi-Fi and

671
00:28:15,360 --> 00:28:17,760
for application installation

672
00:28:17,760 --> 00:28:20,100
so when you install a root certificate

673
00:28:20,100 --> 00:28:22,799
to this kind of devices you can after

674
00:28:22,799 --> 00:28:24,179
that install

675
00:28:24,179 --> 00:28:25,500
also

676
00:28:25,500 --> 00:28:29,220
any any kind of uh functionality for

677
00:28:29,220 --> 00:28:31,860
those other things there as well so that

678
00:28:31,860 --> 00:28:34,559
is kind of incredibly being solved the

679
00:28:34,559 --> 00:28:37,440
devices now have Android devices other

680
00:28:37,440 --> 00:28:39,480
devices they have the different

681
00:28:39,480 --> 00:28:41,880
certificate store so it's being

682
00:28:41,880 --> 00:28:44,580
installed by the vendors there

683
00:28:44,580 --> 00:28:48,299
and then a comment about the uh

684
00:28:48,299 --> 00:28:52,440
those TLS server certificates for web uh

685
00:28:52,440 --> 00:28:56,580
yeah and I both know that they are being

686
00:28:56,580 --> 00:29:00,059
used used in the organizations they use

687
00:29:00,059 --> 00:29:02,940
the web server certificate for kind of a

688
00:29:02,940 --> 00:29:05,400
radius traffic there they don't really

689
00:29:05,400 --> 00:29:08,940
care about CAA Forum Forum but the CIA

690
00:29:08,940 --> 00:29:12,120
Forum might have this kind of a uh more

691
00:29:12,120 --> 00:29:14,220
stronger opinion if that should be used

692
00:29:14,220 --> 00:29:17,039
but in practice they are used

693
00:29:17,039 --> 00:29:20,840
they're like they would be web servers

694
00:29:20,840 --> 00:29:24,179
uh I recently had this case where

695
00:29:24,179 --> 00:29:26,159
customer had their TLS server

696
00:29:26,159 --> 00:29:29,340
certificate expired and

697
00:29:29,340 --> 00:29:33,360
fun eating in that is that uh

698
00:29:33,360 --> 00:29:36,480
only those devices that were wrongly

699
00:29:36,480 --> 00:29:38,899
configurate not to check the certificate

700
00:29:38,899 --> 00:29:42,120
they were perfectly because the server

701
00:29:42,120 --> 00:29:44,820
certificate had kind of expired but all

702
00:29:44,820 --> 00:29:46,799
those devices that were configured

703
00:29:46,799 --> 00:29:49,799
properly they just stopped functioning

704
00:29:49,799 --> 00:29:52,620
because that several certificate had

705
00:29:52,620 --> 00:29:55,919
kind of a expired and the related point

706
00:29:55,919 --> 00:29:57,000
to that

707
00:29:57,000 --> 00:29:58,740
is

708
00:29:58,740 --> 00:30:01,799
um I have my wonderful device with huge

709
00:30:01,799 --> 00:30:05,100
amounts of CPU power a really big screen

710
00:30:05,100 --> 00:30:07,200
and when something goes wrong with Wi-Fi

711
00:30:07,200 --> 00:30:09,720
authentication I get

712
00:30:09,720 --> 00:30:11,220
failed

713
00:30:11,220 --> 00:30:14,340
what failed why was the certificate

714
00:30:14,340 --> 00:30:16,520
invalid which certificate was presented

715
00:30:16,520 --> 00:30:19,919
right what what what's going on and the

716
00:30:19,919 --> 00:30:23,460
answer from the vendors is too bad go

717
00:30:23,460 --> 00:30:25,799
away we're not telling you yeah yeah

718
00:30:25,799 --> 00:30:28,020
that message back would be really nice

719
00:30:28,020 --> 00:30:31,700
for foreign

720
00:30:39,380 --> 00:30:42,500
thank you

721
00:30:43,620 --> 00:30:45,799
foreign

722
00:30:48,679 --> 00:30:52,080
I think also one one thing that that we

723
00:30:52,080 --> 00:30:54,419
need to take in account is how do the

724
00:30:54,419 --> 00:30:56,760
devices know which server name they

725
00:30:56,760 --> 00:30:59,039
should trust I mean if if we have

726
00:30:59,039 --> 00:31:02,640
for example Android uh has the the

727
00:31:02,640 --> 00:31:04,799
option to just use the the system

728
00:31:04,799 --> 00:31:07,260
certificate store which is great

729
00:31:07,260 --> 00:31:09,539
at least I have now some authentication

730
00:31:09,539 --> 00:31:12,120
but still I have the the problem

731
00:31:12,120 --> 00:31:15,899
how does my device know that for my at

732
00:31:15,899 --> 00:31:18,720
Uni minus bremen.te account the

733
00:31:18,720 --> 00:31:20,899
certificate name should be

734
00:31:20,899 --> 00:31:23,880
radius.velan.uni minus bremen.de that's

735
00:31:23,880 --> 00:31:25,260
that's something that I have to

736
00:31:25,260 --> 00:31:27,419
configure so if we

737
00:31:27,419 --> 00:31:31,679
we don't or we can't stop at the stage

738
00:31:31,679 --> 00:31:35,100
where we have certificates and Cas and

739
00:31:35,100 --> 00:31:38,880
we can somehow determine that but we

740
00:31:38,880 --> 00:31:40,860
also have to look at the contents of the

741
00:31:40,860 --> 00:31:42,720
certificate and

742
00:31:42,720 --> 00:31:47,220
um for example it would not be good or

743
00:31:47,220 --> 00:31:52,200
possible in some settings to for example

744
00:31:52,200 --> 00:31:56,159
use uni minus bremen.de as a common name

745
00:31:56,159 --> 00:31:58,200
or something like that because of course

746
00:31:58,200 --> 00:32:01,860
then the if I'm the the radius operator

747
00:32:01,860 --> 00:32:05,940
for that then the webs people will kill

748
00:32:05,940 --> 00:32:08,279
me if I have a certificate for uni minus

749
00:32:08,279 --> 00:32:11,640
bremen.de because I could use that so my

750
00:32:11,640 --> 00:32:13,919
configuration document gets into a lot

751
00:32:13,919 --> 00:32:16,679
of this the theory there is everyone has

752
00:32:16,679 --> 00:32:19,140
a reasonably capable device which has

753
00:32:19,140 --> 00:32:22,380
all your browser certificates on it if I

754
00:32:22,380 --> 00:32:26,100
can connect to example.com and verify

755
00:32:26,100 --> 00:32:29,340
that now I know I can download other

756
00:32:29,340 --> 00:32:32,100
things from a trusted location and then

757
00:32:32,100 --> 00:32:34,320
I don't care whether it's a privacy or

758
00:32:34,320 --> 00:32:37,559
public CA but to Kerry's point I do need

759
00:32:37,559 --> 00:32:39,779
a separate certificate store

760
00:32:39,779 --> 00:32:42,539
but you have that entire chain of trust

761
00:32:42,539 --> 00:32:45,539
or you go I go to a trusted site I

762
00:32:45,539 --> 00:32:48,299
download what they think I should use as

763
00:32:48,299 --> 00:32:50,039
a CA for Eep

764
00:32:50,039 --> 00:32:52,559
I then go from there you know step by

765
00:32:52,559 --> 00:32:54,659
step and all this could happen

766
00:32:54,659 --> 00:32:57,960
automatically if everyone talks to each

767
00:32:57,960 --> 00:33:01,260
other but that's a little more difficult

768
00:33:01,260 --> 00:33:03,720
um my question is do in uh are there any

769
00:33:03,720 --> 00:33:05,940
work in the Wi-Fi Alliance that covers

770
00:33:05,940 --> 00:33:07,320
this type of thing at all does anybody

771
00:33:07,320 --> 00:33:10,140
know I know there were some brief stuff

772
00:33:10,140 --> 00:33:12,600
previous but I've lost track

773
00:33:12,600 --> 00:33:14,760
I think Stefan was pushing his XML

774
00:33:14,760 --> 00:33:16,320
document which

775
00:33:16,320 --> 00:33:18,179
got a little more traction there than

776
00:33:18,179 --> 00:33:20,220
here

777
00:33:20,220 --> 00:33:22,740
yeah there is a draft

778
00:33:22,740 --> 00:33:24,480
um from the ITF which I wrote which I

779
00:33:24,480 --> 00:33:27,179
expired like seven years ago or so which

780
00:33:27,179 --> 00:33:29,340
specifies all the details you might need

781
00:33:29,340 --> 00:33:32,100
to properly set up deep so that you

782
00:33:32,100 --> 00:33:33,899
could vendor agnostic just push these

783
00:33:33,899 --> 00:33:36,480
two devices and don't know what to do it

784
00:33:36,480 --> 00:33:39,240
got zero attraction in iitf and every

785
00:33:39,240 --> 00:33:41,340
device vendor has their own file formats

786
00:33:41,340 --> 00:33:44,279
to express that kind of detail and as I

787
00:33:44,279 --> 00:33:45,659
approached Wi-Fi lines with this the

788
00:33:45,659 --> 00:33:47,820
answer was basically every vendor has

789
00:33:47,820 --> 00:33:50,399
their own thing interop is not needed so

790
00:33:50,399 --> 00:33:52,140
nothing

791
00:33:52,140 --> 00:33:53,580
so yeah it would be good to have

792
00:33:53,580 --> 00:33:55,380
something like that

793
00:33:55,380 --> 00:33:58,559
I can bring the draft back

794
00:33:58,559 --> 00:34:01,620
yeah so um I guess so Alan has a couple

795
00:34:01,620 --> 00:34:03,659
drafts how many folks have have looked

796
00:34:03,659 --> 00:34:05,640
at those drafts the bootstrapping and

797
00:34:05,640 --> 00:34:08,520
the configuration draft

798
00:34:08,520 --> 00:34:11,219
couple what what I think we would like

799
00:34:11,219 --> 00:34:14,099
to do is have a few more folks take a

800
00:34:14,099 --> 00:34:16,980
look at these and I guess one sense here

801
00:34:16,980 --> 00:34:18,000
is

802
00:34:18,000 --> 00:34:19,500
um it seems like there this is an

803
00:34:19,500 --> 00:34:21,540
interesting topic for for people in emu

804
00:34:21,540 --> 00:34:23,099
is there anybody who thinks this is not

805
00:34:23,099 --> 00:34:25,879
a good topic

806
00:34:27,560 --> 00:34:31,679
yeah go ahead somebody so just kind of a

807
00:34:31,679 --> 00:34:34,260
note uh what what actually such

808
00:34:34,260 --> 00:34:37,399
suggested right is that you temporary

809
00:34:37,399 --> 00:34:40,560
gets authenticated although you're not

810
00:34:40,560 --> 00:34:44,280
right and that may be fine

811
00:34:44,280 --> 00:34:48,239
um except that for example rise of we

812
00:34:48,239 --> 00:34:49,800
are using that that's called like the

813
00:34:49,800 --> 00:34:51,780
guest flow right so you're getting the

814
00:34:51,780 --> 00:34:53,580
authenticated then you're doing the

815
00:34:53,580 --> 00:34:55,320
viable syndication for example then you

816
00:34:55,320 --> 00:34:57,599
get pre-authenticated so

817
00:34:57,599 --> 00:34:59,520
and that's not fine that's not okay for

818
00:34:59,520 --> 00:35:02,520
everybody just people explicitly says

819
00:35:02,520 --> 00:35:04,740
that no we are we are not really agree

820
00:35:04,740 --> 00:35:07,619
that even for a second for a moment you

821
00:35:07,619 --> 00:35:10,680
get this some device which a user will

822
00:35:10,680 --> 00:35:12,540
be connected to the lung even the

823
00:35:12,540 --> 00:35:14,940
villain will not will not uh will not

824
00:35:14,940 --> 00:35:17,520
solve that we need to understand that so

825
00:35:17,520 --> 00:35:18,960
can you just uh say your name for the

826
00:35:18,960 --> 00:35:21,500
note taker

827
00:35:24,000 --> 00:35:26,520
yeah so I think uh we should take this

828
00:35:26,520 --> 00:35:27,599
to the

829
00:35:27,599 --> 00:35:29,520
to the list and try to have a bit more

830
00:35:29,520 --> 00:35:31,320
of a constructive discussion to see what

831
00:35:31,320 --> 00:35:33,180
exactly we want to do here is it a set

832
00:35:33,180 --> 00:35:34,680
of recommendations is there

833
00:35:34,680 --> 00:35:37,800
specifications that we should do

834
00:35:37,800 --> 00:35:41,280
um because clearly there is is a gap

835
00:35:41,280 --> 00:35:43,260
um

836
00:35:43,260 --> 00:35:46,740
all right uh what I'd like to do is oh

837
00:35:46,740 --> 00:35:49,200
John Friedrich Do you have a uh yeah

838
00:35:49,200 --> 00:35:51,300
just just a quick comment I think the

839
00:35:51,300 --> 00:35:54,420
the uh interesting uh question we should

840
00:35:54,420 --> 00:35:57,060
also ask ourselves is should we push

841
00:35:57,060 --> 00:36:01,500
forward uh for methods that assume we

842
00:36:01,500 --> 00:36:04,200
have a second Channel or should we try

843
00:36:04,200 --> 00:36:08,420
to also look into in-band uh things

844
00:36:08,420 --> 00:36:11,760
where you have for example

845
00:36:11,760 --> 00:36:14,520
um through certificate options

846
00:36:14,520 --> 00:36:18,420
well pray to the ca browser Forum um an

847
00:36:18,420 --> 00:36:21,000
implicit definition of whether or not to

848
00:36:21,000 --> 00:36:23,220
trust the certificates so I think that's

849
00:36:23,220 --> 00:36:25,920
just as an as in question that we should

850
00:36:25,920 --> 00:36:28,280
discuss

851
00:36:28,500 --> 00:36:30,240
okay

852
00:36:30,240 --> 00:36:32,460
um Yuri you're here and I think you have

853
00:36:32,460 --> 00:36:34,560
a limited uh time frame so if you'd like

854
00:36:34,560 --> 00:36:36,000
to

855
00:36:36,000 --> 00:36:39,800
come up and present that would be great

856
00:36:51,359 --> 00:36:54,780
all right so this is uh brief I think I

857
00:36:54,780 --> 00:36:56,700
wanted to provide an update so this is

858
00:36:56,700 --> 00:36:59,700
the forward secrecy draft that we've

859
00:36:59,700 --> 00:37:02,880
been working on uh next slide please

860
00:37:02,880 --> 00:37:04,500
um so the sort of high level draft

861
00:37:04,500 --> 00:37:06,480
statuses that we had some discussion in

862
00:37:06,480 --> 00:37:08,339
the previous idea for some issues that

863
00:37:08,339 --> 00:37:10,320
we wanted to resolve

864
00:37:10,320 --> 00:37:12,180
um we did that although that was sort of

865
00:37:12,180 --> 00:37:14,160
closer to this meeting than the

866
00:37:14,160 --> 00:37:15,780
last meeting

867
00:37:15,780 --> 00:37:18,119
um at least from our first point of view

868
00:37:18,119 --> 00:37:20,520
there isn't any opening Series at the

869
00:37:20,520 --> 00:37:22,759
moment

870
00:37:22,980 --> 00:37:25,079
um there hasn't been much discussion on

871
00:37:25,079 --> 00:37:27,540
the list I think we had previously sung

872
00:37:27,540 --> 00:37:29,339
because there was

873
00:37:29,339 --> 00:37:32,339
yeah technical questions

874
00:37:32,339 --> 00:37:33,900
um I haven't seen

875
00:37:33,900 --> 00:37:36,119
um much recently we also had some

876
00:37:36,119 --> 00:37:40,440
discussion in 3gpp that was a while ago

877
00:37:40,440 --> 00:37:42,720
um and but that was more like a review

878
00:37:42,720 --> 00:37:45,839
and you know my Ultimate Dream is that

879
00:37:45,839 --> 00:37:48,300
we can make something like this a

880
00:37:48,300 --> 00:37:51,240
mandatory thing in even in 3gpp um

881
00:37:51,240 --> 00:37:52,859
that's not gonna happen probably right

882
00:37:52,859 --> 00:37:55,020
away and in some pushing from various

883
00:37:55,020 --> 00:37:56,400
operators

884
00:37:56,400 --> 00:37:59,220
so there's no sort of 3tbp link to this

885
00:37:59,220 --> 00:38:01,320
directly

886
00:38:01,320 --> 00:38:04,140
um but um we do sort of from a private

887
00:38:04,140 --> 00:38:06,420
discussions have some operators who are

888
00:38:06,420 --> 00:38:08,579
actually quite keen on working on this

889
00:38:08,579 --> 00:38:10,260
sort of from uh

890
00:38:10,260 --> 00:38:13,380
yeah uh disturbing uh customers with

891
00:38:13,380 --> 00:38:15,060
sensitive uh

892
00:38:15,060 --> 00:38:17,160
needs and

893
00:38:17,160 --> 00:38:18,180
um

894
00:38:18,180 --> 00:38:21,420
so uh from a vendor perspective at least

895
00:38:21,420 --> 00:38:23,040
we would like to get this done and get

896
00:38:23,040 --> 00:38:24,420
get it uh

897
00:38:24,420 --> 00:38:26,579
published so that we can actually

898
00:38:26,579 --> 00:38:28,140
um have a final spec with every

899
00:38:28,140 --> 00:38:30,300
everybody can build too

900
00:38:30,300 --> 00:38:33,599
and uh let me gets us go go do this

901
00:38:33,599 --> 00:38:37,140
um as we know EAP is extensible so

902
00:38:37,140 --> 00:38:40,440
artists to do this can actually uh go

903
00:38:40,440 --> 00:38:41,820
ahead and uh

904
00:38:41,820 --> 00:38:45,980
use a feature next slide

905
00:38:46,020 --> 00:38:49,500
so what were the changes in uh in 08

906
00:38:49,500 --> 00:38:51,839
um you can you can look at the detailed

907
00:38:51,839 --> 00:38:54,180
div but at the high level

908
00:38:54,180 --> 00:38:56,940
so we've been going um sort of reviewing

909
00:38:56,940 --> 00:38:59,579
a little bit the um the algorithms uh

910
00:38:59,579 --> 00:39:01,680
over several versions like you know we

911
00:39:01,680 --> 00:39:03,960
aligned exactly here and there and are

912
00:39:03,960 --> 00:39:05,280
we you know pointing to the right places

913
00:39:05,280 --> 00:39:07,200
and so forth

914
00:39:07,200 --> 00:39:09,060
um we made one more change in

915
00:39:09,060 --> 00:39:11,040
distribution that was that

916
00:39:11,040 --> 00:39:13,800
basically in 3cpp they have

917
00:39:13,800 --> 00:39:15,720
um a facility for protecting the

918
00:39:15,720 --> 00:39:17,760
identity of

919
00:39:17,760 --> 00:39:20,579
the user connecting to the network

920
00:39:20,579 --> 00:39:27,240
and it's the 3gpp sub key and the the

921
00:39:27,240 --> 00:39:30,079
uh they actually require two algorithms

922
00:39:30,079 --> 00:39:34,500
p256 and and and the x255 19

923
00:39:34,500 --> 00:39:36,960
um uh both are mandatory there so we

924
00:39:36,960 --> 00:39:38,520
aligned with that

925
00:39:38,520 --> 00:39:40,980
for for this trackable which I think

926
00:39:40,980 --> 00:39:42,420
makes sense

927
00:39:42,420 --> 00:39:45,119
uh we also noticed that okay so now

928
00:39:45,119 --> 00:39:46,500
everything is fine but what if somebody

929
00:39:46,500 --> 00:39:49,920
defines some new versions of this or new

930
00:39:49,920 --> 00:39:53,460
versions of the kdf uh uh attribute or

931
00:39:53,460 --> 00:39:56,099
or attribute value in the future what

932
00:39:56,099 --> 00:39:58,140
then who defines what and what are the

933
00:39:58,140 --> 00:40:00,300
rules in combining this and we wanted to

934
00:40:00,300 --> 00:40:02,339
actually specify that in detail

935
00:40:02,339 --> 00:40:05,220
for future so that like now it says what

936
00:40:05,220 --> 00:40:07,680
governs what and what you need to do if

937
00:40:07,680 --> 00:40:09,540
you define one of these things

938
00:40:09,540 --> 00:40:12,440
going forward

939
00:40:12,660 --> 00:40:14,880
yeah some minor clarification of the key

940
00:40:14,880 --> 00:40:17,500
calculations in section 6.3

941
00:40:17,500 --> 00:40:18,900
[Music]

942
00:40:18,900 --> 00:40:20,220
basically adding some validation

943
00:40:20,220 --> 00:40:22,619
requirements and keeping the two

944
00:40:22,619 --> 00:40:24,240
algorithms sort of descriptions

945
00:40:24,240 --> 00:40:27,060
textually separate

946
00:40:27,060 --> 00:40:28,800
we added some security considerations

947
00:40:28,800 --> 00:40:31,560
discussions two items in particular one

948
00:40:31,560 --> 00:40:33,420
on the quantum Computing attacks and

949
00:40:33,420 --> 00:40:35,700
like Okay so

950
00:40:35,700 --> 00:40:38,460
this becomes possible in practice what

951
00:40:38,460 --> 00:40:41,339
then how's this specification updated or

952
00:40:41,339 --> 00:40:44,280
impacted excuse me

953
00:40:44,280 --> 00:40:45,060
um

954
00:40:45,060 --> 00:40:48,060
we also have a discussion of what you

955
00:40:48,060 --> 00:40:50,339
know what's the impact of metadata

956
00:40:50,339 --> 00:40:52,200
and you may ask what is this meta that

957
00:40:52,200 --> 00:40:54,359
you speak about well it does not match

958
00:40:54,359 --> 00:40:56,579
and we're not sending super relevant

959
00:40:56,579 --> 00:40:58,140
information but there's some algorithms

960
00:40:58,140 --> 00:40:59,579
and so on that

961
00:40:59,579 --> 00:41:02,460
get sent as part of the EAP AKA exchange

962
00:41:02,460 --> 00:41:06,180
and if if you were to depend on on the

963
00:41:06,180 --> 00:41:08,280
user's identity in selecting those

964
00:41:08,280 --> 00:41:09,660
algorithms for

965
00:41:09,660 --> 00:41:12,300
for whatever response you you're making

966
00:41:12,300 --> 00:41:13,980
that you might actually leak some some

967
00:41:13,980 --> 00:41:15,420
information

968
00:41:15,420 --> 00:41:18,359
so that's that's noted there

969
00:41:18,359 --> 00:41:20,940
and I guess that's it uh if people have

970
00:41:20,940 --> 00:41:22,560
questions

971
00:41:22,560 --> 00:41:23,220
um

972
00:41:23,220 --> 00:41:25,440
we can talk about that now or if you

973
00:41:25,440 --> 00:41:27,960
want you can take a look at the draft on

974
00:41:27,960 --> 00:41:29,400
the

975
00:41:29,400 --> 00:41:32,220
on the uh the actual draft and comment

976
00:41:32,220 --> 00:41:36,680
on the mailing list send us feedback

977
00:41:41,700 --> 00:41:44,240
uh

978
00:41:44,240 --> 00:41:46,800
just one thing that I

979
00:41:46,800 --> 00:41:48,780
just now

980
00:41:48,780 --> 00:41:52,380
sort of started thinking about that uh

981
00:41:52,380 --> 00:41:56,520
there are so-called this EMC privacy

982
00:41:56,520 --> 00:41:59,160
extensors

983
00:41:59,160 --> 00:42:02,040
I think uh this White Band Broadband

984
00:42:02,040 --> 00:42:05,820
Forum has specified it for example

985
00:42:05,820 --> 00:42:07,320
uh

986
00:42:07,320 --> 00:42:11,420
do these things are interoperate with

987
00:42:11,420 --> 00:42:14,099
privacy I don't know if you know the

988
00:42:14,099 --> 00:42:17,099
details of it but is there anything that

989
00:42:17,099 --> 00:42:20,099
works

990
00:42:22,260 --> 00:42:24,720
but uh does this bring anything new

991
00:42:24,720 --> 00:42:26,700
related to that

992
00:42:26,700 --> 00:42:29,339
uh I don't think it should in general

993
00:42:29,339 --> 00:42:32,760
but um maybe I'm not understanding the

994
00:42:32,760 --> 00:42:34,079
specific case that you had in mind

995
00:42:34,079 --> 00:42:36,420
because the like the uh you said

996
00:42:36,420 --> 00:42:39,300
Broadband forum okay so I that I'm not

997
00:42:39,300 --> 00:42:41,940
aware of so maybe we should discuss yeah

998
00:42:41,940 --> 00:42:45,780
yeah it probably doesn't provide so oh

999
00:42:45,780 --> 00:42:47,880
it's just something that came into my

1000
00:42:47,880 --> 00:42:50,760
mind because that's been used could you

1001
00:42:50,760 --> 00:42:52,859
perhaps send some link to materials

1002
00:42:52,859 --> 00:42:54,480
because I mean I'm obviously aware of

1003
00:42:54,480 --> 00:42:56,160
the sure

1004
00:42:56,160 --> 00:42:57,020
um of course

1005
00:42:57,020 --> 00:43:00,660
identity privacy things within 3gpp

1006
00:43:00,660 --> 00:43:03,060
networks with this Broadband Forum thing

1007
00:43:03,060 --> 00:43:06,680
I am not aware of so

1008
00:43:12,000 --> 00:43:15,560
um any other comments

1009
00:43:16,380 --> 00:43:18,599
because if not I think we should do a

1010
00:43:18,599 --> 00:43:21,119
working group last call and get whatever

1011
00:43:21,119 --> 00:43:23,700
comments people have I think that the MZ

1012
00:43:23,700 --> 00:43:26,099
privacy question might be interesting in

1013
00:43:26,099 --> 00:43:27,480
that

1014
00:43:27,480 --> 00:43:29,460
um the two things are probably

1015
00:43:29,460 --> 00:43:32,220
independent right but we might want to

1016
00:43:32,220 --> 00:43:34,500
just clarify that whatever the

1017
00:43:34,500 --> 00:43:36,420
properties for MZ privacy this doesn't

1018
00:43:36,420 --> 00:43:38,760
change those necessarily or maybe it

1019
00:43:38,760 --> 00:43:40,440
does I but I don't think it would yeah

1020
00:43:40,440 --> 00:43:43,380
it it it shouldn't like I mean I as

1021
00:43:43,380 --> 00:43:45,180
maybe I should make any statements

1022
00:43:45,180 --> 00:43:46,800
before looking at the thing that we're

1023
00:43:46,800 --> 00:43:49,680
comparing to but uh but you know this is

1024
00:43:49,680 --> 00:43:52,440
independent of you know whatever 3gpp is

1025
00:43:52,440 --> 00:43:54,839
doing in terms of similar arrangements

1026
00:43:54,839 --> 00:43:58,560
and um it would be funny if it was it

1027
00:43:58,560 --> 00:44:00,060
had an impact but we we can take a look

1028
00:44:00,060 --> 00:44:01,079
at that

1029
00:44:01,079 --> 00:44:03,960
um uh you know real soon and I mean it

1030
00:44:03,960 --> 00:44:05,579
also can be a thing that we can do in

1031
00:44:05,579 --> 00:44:07,200
parallel with working with last call

1032
00:44:07,200 --> 00:44:09,900
yeah yeah I think that we should do that

1033
00:44:09,900 --> 00:44:13,079
um so like uh yeah we'll chairs will get

1034
00:44:13,079 --> 00:44:15,480
to I thought I had already queued

1035
00:44:15,480 --> 00:44:17,160
something up or maybe I didn't forgot

1036
00:44:17,160 --> 00:44:18,480
about it anyway

1037
00:44:18,480 --> 00:44:19,859
um we'll get that out

1038
00:44:19,859 --> 00:44:22,520
thank you

1039
00:44:23,700 --> 00:44:25,619
Josh

1040
00:44:25,619 --> 00:44:27,619
um

1041
00:44:33,300 --> 00:44:37,020
okay so Josh and it die

1042
00:44:37,020 --> 00:44:40,520
an ominous title

1043
00:44:41,579 --> 00:44:43,980
see

1044
00:44:43,980 --> 00:44:48,020
I have to refresh this

1045
00:44:53,160 --> 00:44:56,118
there we go

1046
00:45:06,060 --> 00:45:10,220
taking a second to get the slides back

1047
00:45:21,839 --> 00:45:24,799
see what happens

1048
00:45:29,460 --> 00:45:31,560
um you have to hit this Miss and let me

1049
00:45:31,560 --> 00:45:33,920
try it

1050
00:45:36,480 --> 00:45:39,920
okay let's see them

1051
00:45:42,660 --> 00:45:44,579
does anybody know if it's possible to

1052
00:45:44,579 --> 00:45:48,560
add slides in the middle of this session

1053
00:45:53,700 --> 00:45:57,078
or you might need to

1054
00:45:58,440 --> 00:46:00,680
foreign

1055
00:46:26,579 --> 00:46:29,599
yeah well I mean I uploaded them

1056
00:46:29,599 --> 00:46:33,020
because Josh

1057
00:46:39,300 --> 00:46:42,480
yeah it may not have converted them

1058
00:46:42,480 --> 00:46:43,800
the PDF

1059
00:46:43,800 --> 00:46:46,880
what was a PDF

1060
00:46:56,099 --> 00:46:58,700
oops

1061
00:47:00,119 --> 00:47:03,859
there we go there's the pizza

1062
00:47:07,380 --> 00:47:10,640
can you uh

1063
00:47:11,540 --> 00:47:15,500
sharing from uh

1064
00:47:22,680 --> 00:47:26,359
and it'll let you share it after

1065
00:47:29,099 --> 00:47:31,819
share screen

1066
00:47:52,680 --> 00:47:56,419
that goes not happy with us

1067
00:47:57,200 --> 00:48:00,359
maybe you can just do a screen share oh

1068
00:48:00,359 --> 00:48:03,000
but that's what we're trying and it's uh

1069
00:48:03,000 --> 00:48:06,800
uh refusing

1070
00:48:16,680 --> 00:48:19,800
we don't have it either uh let me see if

1071
00:48:19,800 --> 00:48:23,480
I can get to it

1072
00:48:35,220 --> 00:48:38,240
you have to restart

1073
00:48:41,520 --> 00:48:44,339
yeah it should be there but it's

1074
00:48:44,339 --> 00:48:47,540
it's just not showing up in the things

1075
00:48:54,000 --> 00:48:57,500
I have to go in and

1076
00:49:09,180 --> 00:49:11,040
I need to restart

1077
00:49:11,040 --> 00:49:14,720
browser in some cases

1078
00:49:35,099 --> 00:49:37,740
help me start

1079
00:49:37,740 --> 00:49:39,300
give us a minute while we work through

1080
00:49:39,300 --> 00:49:42,140
the technical issue

1081
00:49:42,240 --> 00:49:44,280
I can mix so just yeah why don't you

1082
00:49:44,280 --> 00:49:46,500
start and and we'll we'll work behind

1083
00:49:46,500 --> 00:49:48,859
the settings

1084
00:49:49,099 --> 00:49:51,660
the PowerPoint as a crutch which is

1085
00:49:51,660 --> 00:49:53,460
probably good practice but public

1086
00:49:53,460 --> 00:49:54,900
speaking

1087
00:49:54,900 --> 00:49:56,280
um so good afternoon everyone my name is

1088
00:49:56,280 --> 00:49:57,240
Josh

1089
00:49:57,240 --> 00:50:00,240
um I'm here to talk about eat dye

1090
00:50:00,240 --> 00:50:03,180
um which I'll expand that acronym

1091
00:50:03,180 --> 00:50:07,380
um it's um deep provisioning of identity

1092
00:50:07,380 --> 00:50:10,260
uh so um in a way it's actually quite

1093
00:50:10,260 --> 00:50:13,440
related to uh Alan's talk

1094
00:50:13,440 --> 00:50:15,119
um but whereas Ellen I think will sort

1095
00:50:15,119 --> 00:50:15,900
of

1096
00:50:15,900 --> 00:50:19,380
um focusing on the provisioning of

1097
00:50:19,380 --> 00:50:21,720
uh you know secure configuration to

1098
00:50:21,720 --> 00:50:23,339
supplicants

1099
00:50:23,339 --> 00:50:25,319
um I'm kind of more interested in the

1100
00:50:25,319 --> 00:50:27,480
inverse problem which is how do we

1101
00:50:27,480 --> 00:50:29,420
de-provision

1102
00:50:29,420 --> 00:50:33,300
configuration from a supplicant and that

1103
00:50:33,300 --> 00:50:34,980
there are generally speaking two ways in

1104
00:50:34,980 --> 00:50:37,740
which subsequent configuration is

1105
00:50:37,740 --> 00:50:40,020
managed on devices you will be well

1106
00:50:40,020 --> 00:50:41,940
aware of them you've got a device

1107
00:50:41,940 --> 00:50:43,859
management systems so things like

1108
00:50:43,859 --> 00:50:46,760
YouTube which is an Enterprise settings

1109
00:50:46,760 --> 00:50:50,160
to push configuration out to large

1110
00:50:50,160 --> 00:50:52,559
volumes of Enterprise devices

1111
00:50:52,559 --> 00:50:54,359
and then you've got manual

1112
00:50:54,359 --> 00:50:56,640
Administration so

1113
00:50:56,640 --> 00:50:58,680
um giving you know the end user some

1114
00:50:58,680 --> 00:51:02,460
documentation some credentials and then

1115
00:51:02,460 --> 00:51:04,380
you know hoping

1116
00:51:04,380 --> 00:51:07,500
that the end user will will manage to

1117
00:51:07,500 --> 00:51:10,740
configure their devices excellent

1118
00:51:10,740 --> 00:51:13,020
um in a way that's secure and gets them

1119
00:51:13,020 --> 00:51:15,960
on the network and and um you know we've

1120
00:51:15,960 --> 00:51:18,300
spoke during Allen's presentation about

1121
00:51:18,300 --> 00:51:20,940
how that is quite challenging

1122
00:51:20,940 --> 00:51:22,380
um getting getting people on the network

1123
00:51:22,380 --> 00:51:25,140
with with configuration but it's work

1124
00:51:25,140 --> 00:51:27,720
and is secure

1125
00:51:27,720 --> 00:51:30,180
um but there is also there are issues

1126
00:51:30,180 --> 00:51:32,220
associated with deep provisioning as

1127
00:51:32,220 --> 00:51:34,020
well and and my goal is this

1128
00:51:34,020 --> 00:51:35,160
presentation are really quite

1129
00:51:35,160 --> 00:51:36,540
straightforward so the first is just I

1130
00:51:36,540 --> 00:51:37,980
just want to raise the profile of the

1131
00:51:37,980 --> 00:51:39,359
problem because it's not a problem that

1132
00:51:39,359 --> 00:51:41,579
we tend to focus on very much we focus

1133
00:51:41,579 --> 00:51:43,920
much more on the provisioning of

1134
00:51:43,920 --> 00:51:46,980
configuration and not the actual D

1135
00:51:46,980 --> 00:51:49,680
provision configuration

1136
00:51:49,680 --> 00:51:52,200
um I'd like to propose a straw man

1137
00:51:52,200 --> 00:51:53,700
um as to how we might go about doing

1138
00:51:53,700 --> 00:51:57,599
this and get your feedback I haven't

1139
00:51:57,599 --> 00:51:59,700
written up a drafts

1140
00:51:59,700 --> 00:52:03,240
um but if there is sort of interest

1141
00:52:03,240 --> 00:52:05,579
um in a solution in the space and I'm

1142
00:52:05,579 --> 00:52:07,440
I'm kind of happy to do that

1143
00:52:07,440 --> 00:52:11,300
so um next slide please

1144
00:52:13,319 --> 00:52:15,059
um so I've covered off the first few

1145
00:52:15,059 --> 00:52:17,640
points there second bullet point if

1146
00:52:17,640 --> 00:52:20,099
configuration is managed manually so a

1147
00:52:20,099 --> 00:52:22,020
user with their own device that isn't

1148
00:52:22,020 --> 00:52:23,880
managed by some Enterprise device

1149
00:52:23,880 --> 00:52:25,319
management system

1150
00:52:25,319 --> 00:52:27,780
that configuration will almost certainly

1151
00:52:27,780 --> 00:52:30,500
persist until the device is replaced

1152
00:52:30,500 --> 00:52:33,780
users very very rarely ever remove

1153
00:52:33,780 --> 00:52:36,359
supplicant you know a network profile

1154
00:52:36,359 --> 00:52:38,579
from their supplement configuration you

1155
00:52:38,579 --> 00:52:40,260
can guarantee that once the

1156
00:52:40,260 --> 00:52:42,180
configuration is in for a network it

1157
00:52:42,180 --> 00:52:44,099
will be there until the device is

1158
00:52:44,099 --> 00:52:46,200
recycled

1159
00:52:46,200 --> 00:52:49,680
uh and this this leads to some issues so

1160
00:52:49,680 --> 00:52:50,400
um

1161
00:52:50,400 --> 00:52:54,540
I um work in the interim space and if

1162
00:52:54,540 --> 00:52:56,640
you look at um sort of a university in a

1163
00:52:56,640 --> 00:52:59,700
metropolitan area like London you'll

1164
00:52:59,700 --> 00:53:02,160
typically find that about 25 to 30

1165
00:53:02,160 --> 00:53:05,220
percent of attempted associations are

1166
00:53:05,220 --> 00:53:07,859
devices with invalid credentials which

1167
00:53:07,859 --> 00:53:09,359
is to say is typically someone who's

1168
00:53:09,359 --> 00:53:11,599
graduated from from a university

1169
00:53:11,599 --> 00:53:14,280
somewhere in the world is walking along

1170
00:53:14,280 --> 00:53:16,800
the street in London sees the edge of my

1171
00:53:16,800 --> 00:53:19,079
Society bang attempts to authenticate

1172
00:53:19,079 --> 00:53:20,339
and fails

1173
00:53:20,339 --> 00:53:22,319
and that's a pretty high volume of

1174
00:53:22,319 --> 00:53:24,300
authentication attempts at least some

1175
00:53:24,300 --> 00:53:25,980
problems so the first is that it's it's

1176
00:53:25,980 --> 00:53:27,720
wasteful

1177
00:53:27,720 --> 00:53:30,960
um CPU battery but in particular radio

1178
00:53:30,960 --> 00:53:33,059
spectrum radio spectrum is a scarce

1179
00:53:33,059 --> 00:53:34,220
resource

1180
00:53:34,220 --> 00:53:37,859
and having a lot of devices in a small

1181
00:53:37,859 --> 00:53:41,160
area attempting repeatedly and failing

1182
00:53:41,160 --> 00:53:43,440
to connect to the network choose up that

1183
00:53:43,440 --> 00:53:44,700
resource

1184
00:53:44,700 --> 00:53:48,300
it distorts utilization statistics so we

1185
00:53:48,300 --> 00:53:51,300
have um Eduardo musers uh you know

1186
00:53:51,300 --> 00:53:53,640
campuses universities colleges so forth

1187
00:53:53,640 --> 00:53:56,819
who see that their statistics are

1188
00:53:56,819 --> 00:53:59,099
really distorted by the fact that they

1189
00:53:59,099 --> 00:54:01,260
have a lot of people just you know

1190
00:54:01,260 --> 00:54:03,240
walking through that campus because

1191
00:54:03,240 --> 00:54:05,099
they're a metropolitan area or something

1192
00:54:05,099 --> 00:54:07,440
like that and and they see a lot of

1193
00:54:07,440 --> 00:54:09,359
Rejects and they don't understand why

1194
00:54:09,359 --> 00:54:11,099
why are all these users failing why is

1195
00:54:11,099 --> 00:54:13,859
my wireless network look so rubbish uh

1196
00:54:13,859 --> 00:54:15,000
it's not the wireless networks it's

1197
00:54:15,000 --> 00:54:16,140
rubbish it's just that you've got a

1198
00:54:16,140 --> 00:54:17,460
whole bunch of users who are attempting

1199
00:54:17,460 --> 00:54:19,020
to authenticate when they're not

1200
00:54:19,020 --> 00:54:20,460
authorized to

1201
00:54:20,460 --> 00:54:23,099
and finally includes logging and

1202
00:54:23,099 --> 00:54:24,720
Reporting which makes things like

1203
00:54:24,720 --> 00:54:28,140
troubleshooting so forth complicated

1204
00:54:28,140 --> 00:54:31,859
so the purpose of heat dye is to try and

1205
00:54:31,859 --> 00:54:36,420
solve this problem by removing expired

1206
00:54:36,420 --> 00:54:38,760
manually configured supplicant

1207
00:54:38,760 --> 00:54:40,079
configuration

1208
00:54:40,079 --> 00:54:41,520
we're not trying to do anything about

1209
00:54:41,520 --> 00:54:44,760
the Enterprise case this is the BYOD the

1210
00:54:44,760 --> 00:54:48,300
bring your own device use case

1211
00:54:48,300 --> 00:54:51,440
so next slide please

1212
00:54:52,440 --> 00:54:55,380
um so we uh some design requirements uh

1213
00:54:55,380 --> 00:54:57,839
we want to minimize the impacts on the

1214
00:54:57,839 --> 00:55:00,960
epactors so you know the the supplicant

1215
00:55:00,960 --> 00:55:06,119
and the radius server the server uh I

1216
00:55:06,119 --> 00:55:07,380
think it's you know it's reasonable to

1217
00:55:07,380 --> 00:55:08,520
assume that there's going to be some

1218
00:55:08,520 --> 00:55:11,160
changes to these these actors but we

1219
00:55:11,160 --> 00:55:13,859
want to minimize that

1220
00:55:13,859 --> 00:55:16,440
second bullet we want this solution to

1221
00:55:16,440 --> 00:55:17,940
be compatible with deploys

1222
00:55:17,940 --> 00:55:20,819
infrastructure okay so there is an awful

1223
00:55:20,819 --> 00:55:23,819
lot of uh you know access points

1224
00:55:23,819 --> 00:55:26,339
controllers and so forth that are out

1225
00:55:26,339 --> 00:55:27,960
there in the wild we want a solution

1226
00:55:27,960 --> 00:55:30,780
that that works with those uh with those

1227
00:55:30,780 --> 00:55:32,160
systems

1228
00:55:32,160 --> 00:55:35,099
uh without having to upgrade them

1229
00:55:35,099 --> 00:55:36,359
um the third

1230
00:55:36,359 --> 00:55:38,400
um which is sort of the kind of an

1231
00:55:38,400 --> 00:55:39,839
interesting one was that we wanted a

1232
00:55:39,839 --> 00:55:42,119
mechanism that is independent of the

1233
00:55:42,119 --> 00:55:44,099
equal authentication method

1234
00:55:44,099 --> 00:55:46,680
very often you know there's

1235
00:55:46,680 --> 00:55:48,780
you see sort of solutions around this

1236
00:55:48,780 --> 00:55:52,319
space and they typically depend on

1237
00:55:52,319 --> 00:55:54,900
um tunneling things through the equal

1238
00:55:54,900 --> 00:55:58,020
authentication method so with ttls you

1239
00:55:58,020 --> 00:56:00,839
can Define tlvs to push you know

1240
00:56:00,839 --> 00:56:02,940
vendor-specific information through you

1241
00:56:02,940 --> 00:56:04,440
can do something very similar with Peep

1242
00:56:04,440 --> 00:56:07,800
and with petite but those are defined

1243
00:56:07,800 --> 00:56:09,960
for each authentication method and

1244
00:56:09,960 --> 00:56:13,380
they're not General across across

1245
00:56:13,380 --> 00:56:16,260
methods and I would like a solution that

1246
00:56:16,260 --> 00:56:18,599
that is general purpose so that we don't

1247
00:56:18,599 --> 00:56:21,780
have to extend

1248
00:56:21,780 --> 00:56:22,520
um

1249
00:56:22,520 --> 00:56:25,680
extend authentication methods

1250
00:56:25,680 --> 00:56:27,300
and finally obviously it has to be

1251
00:56:27,300 --> 00:56:28,260
secure

1252
00:56:28,260 --> 00:56:30,000
um because you know the whole purpose of

1253
00:56:30,000 --> 00:56:32,220
this mechanism is to kick people off the

1254
00:56:32,220 --> 00:56:34,440
network uh we want to make sure that

1255
00:56:34,440 --> 00:56:36,119
only the right people are doing the

1256
00:56:36,119 --> 00:56:40,319
kicking and uh not unauthorized actors

1257
00:56:40,319 --> 00:56:43,220
next slide please

1258
00:56:45,660 --> 00:56:48,720
so um that's the problem that I've I've

1259
00:56:48,720 --> 00:56:50,700
kind of hopefully explained and I hope

1260
00:56:50,700 --> 00:56:51,780
that

1261
00:56:51,780 --> 00:56:53,819
um everyone can generally see that

1262
00:56:53,819 --> 00:56:56,460
there's a problem to be solved

1263
00:56:56,460 --> 00:56:57,240
um

1264
00:56:57,240 --> 00:56:59,579
given those requirements

1265
00:56:59,579 --> 00:57:02,460
um I did a bit of thinking and

1266
00:57:02,460 --> 00:57:04,559
um come up with a kind of proposed

1267
00:57:04,559 --> 00:57:06,119
solution this is very much offered in

1268
00:57:06,119 --> 00:57:07,859
the sense of starting a conversation

1269
00:57:07,859 --> 00:57:09,660
hopefully

1270
00:57:09,660 --> 00:57:10,319
um

1271
00:57:10,319 --> 00:57:13,500
anyone who sort of sees a a giant gaping

1272
00:57:13,500 --> 00:57:15,660
hole uh will be rewarded with a pint of

1273
00:57:15,660 --> 00:57:16,619
beer

1274
00:57:16,619 --> 00:57:18,720
and so let's try and try and get some

1275
00:57:18,720 --> 00:57:19,920
incentive

1276
00:57:19,920 --> 00:57:23,180
um to get people thinking about this so

1277
00:57:23,180 --> 00:57:26,220
is effectively a mechanism that builds

1278
00:57:26,220 --> 00:57:29,339
on the notification request

1279
00:57:29,339 --> 00:57:32,160
and that's that's defined by

1280
00:57:32,160 --> 00:57:34,079
um notification that the notification

1281
00:57:34,079 --> 00:57:36,059
request is not something that's that's

1282
00:57:36,059 --> 00:57:39,119
um widely used in Eep

1283
00:57:39,119 --> 00:57:43,020
um it um has some sort of it has sort of

1284
00:57:43,020 --> 00:57:46,200
one property that I find quite curious

1285
00:57:46,200 --> 00:57:48,599
um which is discussed in support for

1286
00:57:48,599 --> 00:57:51,720
sequences which is that it's the only

1287
00:57:51,720 --> 00:57:54,480
um Eep type that you can use

1288
00:57:54,480 --> 00:57:57,440
once an authentication method has been

1289
00:57:57,440 --> 00:58:00,599
started so typically speaking with Eep

1290
00:58:00,599 --> 00:58:03,660
once neapetype has been negotiated uh

1291
00:58:03,660 --> 00:58:05,640
that has to continue until a conclusion

1292
00:58:05,640 --> 00:58:08,220
whether it's a failure or a success and

1293
00:58:08,220 --> 00:58:09,900
you can't sort of

1294
00:58:09,900 --> 00:58:11,940
um

1295
00:58:11,940 --> 00:58:14,880
start up another week time halfway

1296
00:58:14,880 --> 00:58:16,800
through the discussion through the

1297
00:58:16,800 --> 00:58:18,660
conversation and the exception to that

1298
00:58:18,660 --> 00:58:20,579
is is eat notification is the

1299
00:58:20,579 --> 00:58:23,520
notification type uh where the Eep

1300
00:58:23,520 --> 00:58:25,500
server can send or rather the

1301
00:58:25,500 --> 00:58:28,800
authenticator can send a notification

1302
00:58:28,800 --> 00:58:31,859
request at any point during an authentic

1303
00:58:31,859 --> 00:58:33,839
during the execution of an

1304
00:58:33,839 --> 00:58:36,359
authentication method and providing that

1305
00:58:36,359 --> 00:58:38,460
there isn't an outstanding request for

1306
00:58:38,460 --> 00:58:40,799
the typing question

1307
00:58:40,799 --> 00:58:43,319
so what each guy does is basically sends

1308
00:58:43,319 --> 00:58:46,020
a notification request

1309
00:58:46,020 --> 00:58:49,140
um to the supplicants and during this

1310
00:58:49,140 --> 00:58:51,180
process and we do we do it at a very

1311
00:58:51,180 --> 00:58:53,420
specific stage in the process which is

1312
00:58:53,420 --> 00:58:57,299
after the derivation of the eat keys

1313
00:58:57,299 --> 00:58:59,880
but before the Eep success has been

1314
00:58:59,880 --> 00:59:03,000
transmitted so that's critical next

1315
00:59:03,000 --> 00:59:05,480
slide please

1316
00:59:09,839 --> 00:59:11,819
um so the

1317
00:59:11,819 --> 00:59:14,880
um the notification request is

1318
00:59:14,880 --> 00:59:18,000
um defined by

1319
00:59:18,000 --> 00:59:20,040
um the RFC

1320
00:59:20,040 --> 00:59:22,500
um to send a human readable message of

1321
00:59:22,500 --> 00:59:27,960
no more than uh a 1015 octets

1322
00:59:27,960 --> 00:59:30,240
so the purpose here is to generally

1323
00:59:30,240 --> 00:59:31,980
speak and send something to the user

1324
00:59:31,980 --> 00:59:34,200
that can be read

1325
00:59:34,200 --> 00:59:35,940
um all we're doing is using this field

1326
00:59:35,940 --> 00:59:38,220
to send some information

1327
00:59:38,220 --> 00:59:40,740
um and the the data fields

1328
00:59:40,740 --> 00:59:42,900
um that I'm suggesting is a version

1329
00:59:42,900 --> 00:59:44,940
which just sort of indicates the version

1330
00:59:44,940 --> 00:59:47,819
of ebi that we're dealing with a message

1331
00:59:47,819 --> 00:59:50,520
which is a human readable message that

1332
00:59:50,520 --> 00:59:53,819
can be defined by the operator of the

1333
00:59:53,819 --> 00:59:55,980
um the radio server so something like

1334
00:59:55,980 --> 00:59:58,319
your access to this network will expire

1335
00:59:58,319 --> 00:59:59,460
on

1336
00:59:59,460 --> 01:00:03,480
uh an expiration date field which is

1337
01:00:03,480 --> 01:00:06,540
um a date value and that it can be

1338
01:00:06,540 --> 01:00:10,980
passed by both machine and human and

1339
01:00:10,980 --> 01:00:12,960
then a message authenticator so the

1340
01:00:12,960 --> 01:00:15,900
authenticator uh is

1341
01:00:15,900 --> 01:00:19,200
um a value that allows the supplicant to

1342
01:00:19,200 --> 01:00:21,900
authenticate the

1343
01:00:21,900 --> 01:00:25,260
um the message that's been sent by

1344
01:00:25,260 --> 01:00:27,180
um the Eep server

1345
01:00:27,180 --> 01:00:30,599
so it's a very simple structure

1346
01:00:30,599 --> 01:00:33,680
next slide please

1347
01:00:35,280 --> 01:00:38,160
so uh this is the operation

1348
01:00:38,160 --> 01:00:41,040
um Step One the operator of the Eep

1349
01:00:41,040 --> 01:00:43,319
server configures an expiration policy

1350
01:00:43,319 --> 01:00:45,599
for their users they might have

1351
01:00:45,599 --> 01:00:47,220
different policies for different users

1352
01:00:47,220 --> 01:00:49,980
so you know a student could have an

1353
01:00:49,980 --> 01:00:52,380
expiration date set for their you know

1354
01:00:52,380 --> 01:00:54,960
forecast date of graduation whereas a

1355
01:00:54,960 --> 01:00:57,180
member of Staff might be sort of

1356
01:00:57,180 --> 01:01:00,839
open-enders more open-ended or other

1357
01:01:00,839 --> 01:01:02,460
um before connecting to the network the

1358
01:01:02,460 --> 01:01:06,180
supplicant checks uh in a cache a local

1359
01:01:06,180 --> 01:01:08,640
cache for expiration data associated

1360
01:01:08,640 --> 01:01:11,280
with the network that it's uh going to

1361
01:01:11,280 --> 01:01:14,460
attempt to connect to if the network

1362
01:01:14,460 --> 01:01:16,500
configuration has expired because it has

1363
01:01:16,500 --> 01:01:18,839
some it has a date cached it doesn't

1364
01:01:18,839 --> 01:01:22,260
attempt to connect and disables that

1365
01:01:22,260 --> 01:01:23,339
profile

1366
01:01:23,339 --> 01:01:26,640
if there is no expiration data or if

1367
01:01:26,640 --> 01:01:29,220
um it has not yet explored

1368
01:01:29,220 --> 01:01:31,380
um the subsequent and each server engage

1369
01:01:31,380 --> 01:01:35,880
in any authentication as usual

1370
01:01:35,880 --> 01:01:39,240
when the EPS have been derived in the

1371
01:01:39,240 --> 01:01:42,299
usual manner the Eep server

1372
01:01:42,299 --> 01:01:44,760
sends a notification request to the

1373
01:01:44,760 --> 01:01:45,980
supplicant

1374
01:01:45,980 --> 01:01:49,440
containing the eat dye data

1375
01:01:49,440 --> 01:01:52,200
and this obviously is protected with

1376
01:01:52,200 --> 01:01:54,780
your message authenticator which is you

1377
01:01:54,780 --> 01:01:58,859
know derived somehow hand-wathing

1378
01:01:58,859 --> 01:02:02,400
um from the eat key

1379
01:02:02,400 --> 01:02:05,280
um and uh the subsequent then validates

1380
01:02:05,280 --> 01:02:09,960
the message caches the expiration date

1381
01:02:09,960 --> 01:02:13,200
that's associated with that Network and

1382
01:02:13,200 --> 01:02:15,180
returns a notification response in the

1383
01:02:15,180 --> 01:02:19,020
in the way that's required by Eep and

1384
01:02:19,020 --> 01:02:22,260
then the authentication concludes with

1385
01:02:22,260 --> 01:02:24,900
the Eep success as usual

1386
01:02:24,900 --> 01:02:28,200
so that's that's it it's pretty simple

1387
01:02:28,200 --> 01:02:31,319
would it be an Eep success or it would

1388
01:02:31,319 --> 01:02:33,599
have to be a neat success because for

1389
01:02:33,599 --> 01:02:36,359
the eat delay data to be sent it would

1390
01:02:36,359 --> 01:02:40,260
have to be selling or protected with

1391
01:02:40,260 --> 01:02:43,680
um the authentication the authenticator

1392
01:02:43,680 --> 01:02:46,020
field which comes from the key and EQ

1393
01:02:46,020 --> 01:02:48,119
and it gets generated if there's been

1394
01:02:48,119 --> 01:02:49,380
successful

1395
01:02:49,380 --> 01:02:52,880
conclusion to the Authentication

1396
01:02:52,920 --> 01:02:55,380
so that that's that is one of the quotes

1397
01:02:55,380 --> 01:02:57,780
to this is that it only operates if

1398
01:02:57,780 --> 01:03:01,160
authentication is successful

1399
01:03:04,319 --> 01:03:07,260
all right next slide please oh sorry

1400
01:03:07,260 --> 01:03:09,780
Stefan I didn't see you there you could

1401
01:03:09,780 --> 01:03:11,940
also go on to the end I can't wait I

1402
01:03:11,940 --> 01:03:15,420
know it goes okay so um interesting

1403
01:03:15,420 --> 01:03:17,520
because we did look at the notification

1404
01:03:17,520 --> 01:03:19,440
part of the state machine like 10 years

1405
01:03:19,440 --> 01:03:20,940
ago because we also wanted to send

1406
01:03:20,940 --> 01:03:23,880
things from radios over the channel user

1407
01:03:23,880 --> 01:03:26,280
visible to the end user

1408
01:03:26,280 --> 01:03:28,680
um just a word of warning this is a part

1409
01:03:28,680 --> 01:03:30,780
of the each state machine that is

1410
01:03:30,780 --> 01:03:33,480
underutilized yeah and you can get all

1411
01:03:33,480 --> 01:03:36,059
kinds of surprises on supplicants when

1412
01:03:36,059 --> 01:03:38,220
they encounter such data

1413
01:03:38,220 --> 01:03:40,619
um but never mind this is not stopping

1414
01:03:40,619 --> 01:03:43,020
the principle there's no gaping hole

1415
01:03:43,020 --> 01:03:44,700
um my follow-up question would then be

1416
01:03:44,700 --> 01:03:47,339
is it foreseen that you can update the

1417
01:03:47,339 --> 01:03:49,079
termination date of the account because

1418
01:03:49,079 --> 01:03:51,180
sometimes you think the account expires

1419
01:03:51,180 --> 01:03:52,980
but then the user has to go for another

1420
01:03:52,980 --> 01:03:54,660
year because he failed in some some

1421
01:03:54,660 --> 01:03:56,940
exams yes because any kind of

1422
01:03:56,940 --> 01:03:58,799
authentication succeeds the new date can

1423
01:03:58,799 --> 01:03:59,880
be sent

1424
01:03:59,880 --> 01:04:01,559
cash by the supplicant

1425
01:04:01,559 --> 01:04:03,540
and replacing whatever value had been

1426
01:04:03,540 --> 01:04:05,280
set previously

1427
01:04:05,280 --> 01:04:07,200
okay and then the final comment um which

1428
01:04:07,200 --> 01:04:10,619
may be a bit mean but I think the best

1429
01:04:10,619 --> 01:04:13,500
way to Signal such an expiration date is

1430
01:04:13,500 --> 01:04:16,260
probably when you provision the data so

1431
01:04:16,260 --> 01:04:18,900
for those few operating systems that

1432
01:04:18,900 --> 01:04:21,540
have proper configuration files

1433
01:04:21,540 --> 01:04:23,760
um you would also be say able to say

1434
01:04:23,760 --> 01:04:26,819
this configuration expires at

1435
01:04:26,819 --> 01:04:28,799
um I think Apple has one of those in

1436
01:04:28,799 --> 01:04:31,920
their file and this old expired draft I

1437
01:04:31,920 --> 01:04:35,579
had also foresaw that but in all honesty

1438
01:04:35,579 --> 01:04:38,040
these have troubles being updated with a

1439
01:04:38,040 --> 01:04:40,020
new date so this year

1440
01:04:40,020 --> 01:04:42,599
really has a niche word can do something

1441
01:04:42,599 --> 01:04:44,819
that can't be done otherwise yeah yeah

1442
01:04:44,819 --> 01:04:47,339
no I agree I think you know the sort of

1443
01:04:47,339 --> 01:04:49,319
provisioning tools like a cat where they

1444
01:04:49,319 --> 01:04:51,240
can send an expiration date that's the

1445
01:04:51,240 --> 01:04:54,900
ideal scenario this is for the BYOD case

1446
01:04:54,900 --> 01:04:57,780
where the end user isn't necessarily

1447
01:04:57,780 --> 01:05:01,880
been provisioned with that kind of tool

1448
01:05:03,140 --> 01:05:06,839
please yes thanks so uh just 15 minutes

1449
01:05:06,839 --> 01:05:08,819
ago I learned said and complained that

1450
01:05:08,819 --> 01:05:11,280
he tried to connect with Wi-Fi and

1451
01:05:11,280 --> 01:05:14,400
nothing in response so have you ever

1452
01:05:14,400 --> 01:05:16,920
thought that that can be a said that

1453
01:05:16,920 --> 01:05:18,900
just for the success

1454
01:05:18,900 --> 01:05:21,359
so the same notification message can be

1455
01:05:21,359 --> 01:05:24,540
sent theoretical I guess for the failure

1456
01:05:24,540 --> 01:05:27,359
which would actually be useful like say

1457
01:05:27,359 --> 01:05:29,520
like certificate is not trusted or

1458
01:05:29,520 --> 01:05:31,559
something the problem is that we don't

1459
01:05:31,559 --> 01:05:33,420
get the

1460
01:05:33,420 --> 01:05:34,980
derivation

1461
01:05:34,980 --> 01:05:37,260
if authentication fails

1462
01:05:37,260 --> 01:05:39,000
so we can't then

1463
01:05:39,000 --> 01:05:41,339
yeah understand but still that ah you

1464
01:05:41,339 --> 01:05:43,079
cannot know what we can't then protect

1465
01:05:43,079 --> 01:05:44,880
the the message the subcon can't

1466
01:05:44,880 --> 01:05:46,920
validate that it's come from a the

1467
01:05:46,920 --> 01:05:48,900
server

1468
01:05:48,900 --> 01:05:51,559
I see

1469
01:05:56,180 --> 01:05:59,099
well yes just quick note you mentioned

1470
01:05:59,099 --> 01:06:02,040
that uh the profile lifetime is the

1471
01:06:02,040 --> 01:06:04,260
device lifetime I just checked my phone

1472
01:06:04,260 --> 01:06:06,540
and I have profiles there are more than

1473
01:06:06,540 --> 01:06:08,099
10 year old

1474
01:06:08,099 --> 01:06:10,559
so the tools that

1475
01:06:10,559 --> 01:06:12,440
one can use to

1476
01:06:12,440 --> 01:06:15,359
uh when they

1477
01:06:15,359 --> 01:06:17,339
get a new phone they helpfully bring

1478
01:06:17,339 --> 01:06:19,619
over all the all profiles so the problem

1479
01:06:19,619 --> 01:06:23,599
properly just gets worse over time

1480
01:06:27,780 --> 01:06:29,700
next slide please so I'm probably well

1481
01:06:29,700 --> 01:06:33,119
over time no that's fine

1482
01:06:33,119 --> 01:06:37,440
um so um five issues that I'd noticed

1483
01:06:37,440 --> 01:06:38,819
um for

1484
01:06:38,819 --> 01:06:40,020
um discussion Maybe not immediately

1485
01:06:40,020 --> 01:06:42,420
because I'm conscious of time

1486
01:06:42,420 --> 01:06:45,599
um so issue number one

1487
01:06:45,599 --> 01:06:48,599
um the epoxy talks of the authenticator

1488
01:06:48,599 --> 01:06:51,059
and sending the notification requests

1489
01:06:51,059 --> 01:06:53,579
rather than the server I think this is

1490
01:06:53,579 --> 01:06:55,440
probably an oversight and what is meant

1491
01:06:55,440 --> 01:06:57,960
is the Eep server I'm not sure why you'd

1492
01:06:57,960 --> 01:07:00,059
want to reconstrain that to the

1493
01:07:00,059 --> 01:07:02,039
Authenticator

1494
01:07:02,039 --> 01:07:05,339
um but someone in the room might

1495
01:07:05,339 --> 01:07:07,740
know be better than I

1496
01:07:07,740 --> 01:07:10,920
um I think the as I think uh somebody

1497
01:07:10,920 --> 01:07:12,900
mentioned not a lot of thought has been

1498
01:07:12,900 --> 01:07:14,880
given into given into the use of

1499
01:07:14,880 --> 01:07:18,539
notification so like at at that point

1500
01:07:18,539 --> 01:07:20,160
you know the separation between

1501
01:07:20,160 --> 01:07:22,680
authenticator and server was not so well

1502
01:07:22,680 --> 01:07:24,000
defined and

1503
01:07:24,000 --> 01:07:26,400
as it is now and the state machines are

1504
01:07:26,400 --> 01:07:29,039
not so well defined and so

1505
01:07:29,039 --> 01:07:31,680
um you know you're you this may be

1506
01:07:31,680 --> 01:07:33,000
treading I don't know if you've done any

1507
01:07:33,000 --> 01:07:34,680
experimentation with it but you may be

1508
01:07:34,680 --> 01:07:36,740
dreading into Uncharted

1509
01:07:36,740 --> 01:07:39,359
undefined behaviors um yeah which I

1510
01:07:39,359 --> 01:07:42,740
think is what Stefan was a leader yeah

1511
01:07:44,760 --> 01:07:46,500
um issue two

1512
01:07:46,500 --> 01:07:47,460
um

1513
01:07:47,460 --> 01:07:48,900
it's possibly overloading the

1514
01:07:48,900 --> 01:07:52,020
notification request semantics

1515
01:07:52,020 --> 01:07:54,359
um I think this is perhaps a kind of a

1516
01:07:54,359 --> 01:07:56,880
matter of opinion

1517
01:07:56,880 --> 01:07:58,619
um

1518
01:07:58,619 --> 01:08:02,039
so people may have a view on that

1519
01:08:02,039 --> 01:08:03,839
um three is really

1520
01:08:03,839 --> 01:08:06,059
um the whole state machine problem and

1521
01:08:06,059 --> 01:08:07,380
this is

1522
01:08:07,380 --> 01:08:09,660
um kind of an application of

1523
01:08:09,660 --> 01:08:14,240
feature Veep that is not widely used

1524
01:08:14,240 --> 01:08:18,420
and so it's unlikely you know to work

1525
01:08:18,420 --> 01:08:20,939
out the box with you know substance and

1526
01:08:20,939 --> 01:08:23,040
each servers that exists today

1527
01:08:23,040 --> 01:08:24,359
um but hopefully it may just you know

1528
01:08:24,359 --> 01:08:26,698
maybe relatively minor tweaks that are

1529
01:08:26,698 --> 01:08:29,640
needed to get this working

1530
01:08:29,640 --> 01:08:31,560
again I'd be very interested in

1531
01:08:31,560 --> 01:08:35,540
implementers views on that

1532
01:08:36,120 --> 01:08:36,839
um

1533
01:08:36,839 --> 01:08:39,359
Issue Number Four which we've touched on

1534
01:08:39,359 --> 01:08:42,179
which is the eat dye requires there to

1535
01:08:42,179 --> 01:08:45,179
have been a successful authentication in

1536
01:08:45,179 --> 01:08:47,580
the past in order to get that date

1537
01:08:47,580 --> 01:08:50,939
cached and set

1538
01:08:50,939 --> 01:08:53,040
um does this limit the utility

1539
01:08:53,040 --> 01:08:56,040
um I think not personally I think if if

1540
01:08:56,040 --> 01:08:58,439
you've had one authentication that's

1541
01:08:58,439 --> 01:09:00,060
that's probably

1542
01:09:00,060 --> 01:09:01,560
um sufficient

1543
01:09:01,560 --> 01:09:04,080
but again you may have a different view

1544
01:09:04,080 --> 01:09:05,160
on that

1545
01:09:05,160 --> 01:09:08,399
and then issue number five is the uh the

1546
01:09:08,399 --> 01:09:10,198
right architectural layer at which to

1547
01:09:10,198 --> 01:09:12,359
address this problem uh which is sort of

1548
01:09:12,359 --> 01:09:14,819
I think Stefan's Point uh which was that

1549
01:09:14,819 --> 01:09:16,679
you know we we have

1550
01:09:16,679 --> 01:09:20,698
Enterprise device management tools for

1551
01:09:20,698 --> 01:09:22,620
managing this

1552
01:09:22,620 --> 01:09:23,399
um

1553
01:09:23,399 --> 01:09:25,679
uh it's different for this use case

1554
01:09:25,679 --> 01:09:27,420
which is to bring your own device use

1555
01:09:27,420 --> 01:09:30,839
case where devices aren't being managed

1556
01:09:30,839 --> 01:09:32,880
by those sorts of solutions

1557
01:09:32,880 --> 01:09:36,859
but nonetheless I think it's a kind of a

1558
01:09:36,859 --> 01:09:39,420
reasonable concern perhaps it isn't the

1559
01:09:39,420 --> 01:09:42,679
right way to address this problem

1560
01:09:44,100 --> 01:09:45,899
that's it

1561
01:09:45,899 --> 01:09:48,179
all right um

1562
01:09:48,179 --> 01:09:50,399
yeah I guess one concern I do have is

1563
01:09:50,399 --> 01:09:52,620
like with the state machine and that

1564
01:09:52,620 --> 01:09:54,780
like you're gonna say if you send a

1565
01:09:54,780 --> 01:09:55,920
success

1566
01:09:55,920 --> 01:09:58,199
the authenticator is going to think oh

1567
01:09:58,199 --> 01:10:00,000
you know now maybe you're going to get

1568
01:10:00,000 --> 01:10:01,679
network access and if you try to send

1569
01:10:01,679 --> 01:10:04,199
key material in the correct thing then

1570
01:10:04,199 --> 01:10:05,460
you're going to give network access

1571
01:10:05,460 --> 01:10:07,440
maybe when you don't intend to or maybe

1572
01:10:07,440 --> 01:10:09,900
you do I don't know

1573
01:10:09,900 --> 01:10:10,920
um

1574
01:10:10,920 --> 01:10:12,840
and there's probably some key derivation

1575
01:10:12,840 --> 01:10:14,520
things we need to work out like whether

1576
01:10:14,520 --> 01:10:17,219
we use emsk and if we use emsk is that

1577
01:10:17,219 --> 01:10:19,739
limiting because people maybe that's not

1578
01:10:19,739 --> 01:10:22,560
what implemented things like that

1579
01:10:22,560 --> 01:10:23,699
um

1580
01:10:23,699 --> 01:10:25,980
but anyway

1581
01:10:25,980 --> 01:10:28,519
John

1582
01:10:31,739 --> 01:10:35,400
um in in regard of question four I think

1583
01:10:35,400 --> 01:10:39,300
um it would be definitely useful to have

1584
01:10:39,300 --> 01:10:42,239
this mechanism but maybe

1585
01:10:42,239 --> 01:10:43,560
um that's more than the the

1586
01:10:43,560 --> 01:10:46,219
implementation side to have the the

1587
01:10:46,219 --> 01:10:49,620
profile disabled and not deleted because

1588
01:10:49,620 --> 01:10:54,179
I can imagine some use cases where

1589
01:10:54,179 --> 01:10:57,239
um maybe if you if you set the the time

1590
01:10:57,239 --> 01:11:00,239
frame to small that people will go on

1591
01:11:00,239 --> 01:11:02,100
vacation and then come back and see oh

1592
01:11:02,100 --> 01:11:04,500
my Eddie ROM is not working and if you

1593
01:11:04,500 --> 01:11:06,540
have the possibility to then just click

1594
01:11:06,540 --> 01:11:08,580
try again and then

1595
01:11:08,580 --> 01:11:10,980
you try the uh the authentication again

1596
01:11:10,980 --> 01:11:14,159
and then it works uh because it still

1597
01:11:14,159 --> 01:11:16,020
has the the

1598
01:11:16,020 --> 01:11:19,380
um configuration there but it's just not

1599
01:11:19,380 --> 01:11:21,300
configured to connect automatically that

1600
01:11:21,300 --> 01:11:23,460
that would be good

1601
01:11:23,460 --> 01:11:26,760
um that's uh also coming from uh

1602
01:11:26,760 --> 01:11:30,000
previously University with Eddie Rome

1603
01:11:30,000 --> 01:11:32,159
and now as National roaming operator for

1604
01:11:32,159 --> 01:11:33,659
Germany

1605
01:11:33,659 --> 01:11:34,380
um

1606
01:11:34,380 --> 01:11:37,260
I would be very glad to see this working

1607
01:11:37,260 --> 01:11:39,120
because

1608
01:11:39,120 --> 01:11:43,640
um I I see a lot of authentication uh um

1609
01:11:43,640 --> 01:11:46,440
uh processes and

1610
01:11:46,440 --> 01:11:49,679
yeah getting rejected mostly because the

1611
01:11:49,679 --> 01:11:51,480
people never bothered to disable their

1612
01:11:51,480 --> 01:11:53,340
at your own configuration and if we can

1613
01:11:53,340 --> 01:11:56,100
do something about that

1614
01:11:56,100 --> 01:11:56,940
um

1615
01:11:56,940 --> 01:12:00,540
open doors I will happily contribute uh

1616
01:12:00,540 --> 01:12:04,800
there but I'm not exactly sure if the

1617
01:12:04,800 --> 01:12:05,400
um

1618
01:12:05,400 --> 01:12:08,580
if the supplicant supplicants will

1619
01:12:08,580 --> 01:12:10,920
actually implement it

1620
01:12:10,920 --> 01:12:13,100
foreign

1621
01:12:14,060 --> 01:12:16,860
overlap between this and we talked at

1622
01:12:16,860 --> 01:12:18,120
the beginning of the meeting there was

1623
01:12:18,120 --> 01:12:22,320
uh you know configuration related

1624
01:12:22,320 --> 01:12:23,880
um this is in a sense configuration

1625
01:12:23,880 --> 01:12:26,100
information and maybe there's a

1626
01:12:26,100 --> 01:12:27,480
different maybe we can use a channel

1627
01:12:27,480 --> 01:12:29,520
within the eve method the tunnel method

1628
01:12:29,520 --> 01:12:33,659
might might that again is limiting but

1629
01:12:33,659 --> 01:12:35,880
um that might be a little bit simpler in

1630
01:12:35,880 --> 01:12:38,340
terms of the eve State machine in that

1631
01:12:38,340 --> 01:12:40,199
like all of that happens within the

1632
01:12:40,199 --> 01:12:41,699
tunnel method you don't have to worry

1633
01:12:41,699 --> 01:12:44,100
about what the authenticator is going to

1634
01:12:44,100 --> 01:12:47,100
do and you know all that kind of stuff

1635
01:12:47,100 --> 01:12:47,940
um

1636
01:12:47,940 --> 01:12:50,219
there might be something to to also

1637
01:12:50,219 --> 01:12:52,140
think about yeah

1638
01:12:52,140 --> 01:12:54,840
um this is also sort of a generic

1639
01:12:54,840 --> 01:12:56,760
problem like you could have the same

1640
01:12:56,760 --> 01:13:00,659
problem with uh with just you know uh

1641
01:13:00,659 --> 01:13:02,159
you know you're trying to connect in

1642
01:13:02,159 --> 01:13:04,679
your your Wi-Fi you're using WPA

1643
01:13:04,679 --> 01:13:06,960
whatever with a pre-share key and your

1644
01:13:06,960 --> 01:13:08,880
key is old and you're just going to keep

1645
01:13:08,880 --> 01:13:10,320
trying the same thing and it's going to

1646
01:13:10,320 --> 01:13:12,239
fail I'll fail I don't know if there's

1647
01:13:12,239 --> 01:13:14,159
any defined behavior in those cases but

1648
01:13:14,159 --> 01:13:15,780
it seems like it could end up in the

1649
01:13:15,780 --> 01:13:18,239
same problem so maybe there's something

1650
01:13:18,239 --> 01:13:21,480
at the Wi-Fi you know level you would do

1651
01:13:21,480 --> 01:13:24,719
and maybe that could be protected it in

1652
01:13:24,719 --> 01:13:25,980
some way but

1653
01:13:25,980 --> 01:13:27,000
um

1654
01:13:27,000 --> 01:13:28,440
so I think there could be a couple

1655
01:13:28,440 --> 01:13:29,940
different options depending on different

1656
01:13:29,940 --> 01:13:31,860
things uh

1657
01:13:31,860 --> 01:13:33,780
but it does seem like this is is a

1658
01:13:33,780 --> 01:13:34,980
problem

1659
01:13:34,980 --> 01:13:36,600
um

1660
01:13:36,600 --> 01:13:40,260
we have uh Matthew you should Vadim you

1661
01:13:40,260 --> 01:13:40,980
should

1662
01:13:40,980 --> 01:13:43,260
uh sign into the thing so you could join

1663
01:13:43,260 --> 01:13:45,719
the queue

1664
01:13:45,719 --> 01:13:47,699
but let's see Matthew

1665
01:13:47,699 --> 01:13:49,440
Newton

1666
01:13:49,440 --> 01:13:51,900
um free writers obviously yeah I totally

1667
01:13:51,900 --> 01:13:54,120
agree the whole thing from an edger and

1668
01:13:54,120 --> 01:13:56,100
background of telling users that they

1669
01:13:56,100 --> 01:13:57,600
shouldn't be on definitely sounds like a

1670
01:13:57,600 --> 01:13:59,760
good thing to do

1671
01:13:59,760 --> 01:14:01,560
um in terms of the message I don't know

1672
01:14:01,560 --> 01:14:02,760
where there's a

1673
01:14:02,760 --> 01:14:04,620
um I'm coming in coldons where there's

1674
01:14:04,620 --> 01:14:06,420
something there are other cases when you

1675
01:14:06,420 --> 01:14:08,820
want to send a message back

1676
01:14:08,820 --> 01:14:10,500
um as I think I don't know somebody said

1677
01:14:10,500 --> 01:14:12,780
earlier of yeah and something has failed

1678
01:14:12,780 --> 01:14:14,940
and devices currently just don't show

1679
01:14:14,940 --> 01:14:16,800
anything and whether that should be

1680
01:14:16,800 --> 01:14:19,560
separate to this

1681
01:14:19,560 --> 01:14:22,920
um because do you want to set an expiry

1682
01:14:22,920 --> 01:14:23,940
date

1683
01:14:23,940 --> 01:14:27,000
without I mean if if a device gets this

1684
01:14:27,000 --> 01:14:30,300
notification every single time it

1685
01:14:30,300 --> 01:14:32,460
connects is it gonna then pop up a

1686
01:14:32,460 --> 01:14:34,020
message on the screen straight away

1687
01:14:34,020 --> 01:14:35,520
every single time it connects to say oh

1688
01:14:35,520 --> 01:14:37,620
by the way on this date you're it's

1689
01:14:37,620 --> 01:14:39,600
going to expire that seems a bit

1690
01:14:39,600 --> 01:14:41,760
too much yeah so do you want to

1691
01:14:41,760 --> 01:14:44,219
disconnect the message and use that for

1692
01:14:44,219 --> 01:14:47,340
other useful things from the setting the

1693
01:14:47,340 --> 01:14:49,679
expiry date

1694
01:14:49,679 --> 01:14:51,420
um and then also

1695
01:14:51,420 --> 01:14:53,280
I can see something where something goes

1696
01:14:53,280 --> 01:14:55,140
wrong on the server and you set a an

1697
01:14:55,140 --> 01:14:57,300
expiry date it's incorrect possibly do

1698
01:14:57,300 --> 01:14:59,880
you want to say okay actually I didn't I

1699
01:14:59,880 --> 01:15:01,920
didn't mean to say that at all remove it

1700
01:15:01,920 --> 01:15:03,719
that's probably a certain thing maybe

1701
01:15:03,719 --> 01:15:05,760
the message is a you set a flag with it

1702
01:15:05,760 --> 01:15:07,860
that says this we want to show it this

1703
01:15:07,860 --> 01:15:08,880
time

1704
01:15:08,880 --> 01:15:10,800
or we don't or whether it just so

1705
01:15:10,800 --> 01:15:12,420
whether it can be completely

1706
01:15:12,420 --> 01:15:16,080
disconnect from the from this entirely

1707
01:15:16,080 --> 01:15:20,699
yeah thank you okay Vadim you could a

1708
01:15:20,699 --> 01:15:23,640
technical difficulties we understand

1709
01:15:23,640 --> 01:15:26,040
so probably I I will definitely take a

1710
01:15:26,040 --> 01:15:28,620
look on that later maybe if I not

1711
01:15:28,620 --> 01:15:30,179
understood correctly so correct me with

1712
01:15:30,179 --> 01:15:32,940
this and uh but do you plan to different

1713
01:15:32,940 --> 01:15:35,400
differentiate between the machinos and

1714
01:15:35,400 --> 01:15:38,520
the users especially that should draw us

1715
01:15:38,520 --> 01:15:41,100
actually by asking uh with we have the

1716
01:15:41,100 --> 01:15:43,140
hip chaining right for the fast and tip

1717
01:15:43,140 --> 01:15:47,699
and do does it really make sense or it

1718
01:15:47,699 --> 01:15:50,159
doesn't make sense at all I just don't

1719
01:15:50,159 --> 01:15:52,020
understand

1720
01:15:52,020 --> 01:15:55,440
to differentiate a machine and user

1721
01:15:55,440 --> 01:15:57,900
yeah so the the exploration can be

1722
01:15:57,900 --> 01:16:00,060
different theoretically and uh

1723
01:16:00,060 --> 01:16:02,699
it could well be

1724
01:16:02,699 --> 01:16:06,480
uh yeah good point yeah one one way to

1725
01:16:06,480 --> 01:16:08,040
either think about it is who's

1726
01:16:08,040 --> 01:16:09,840
provisioning that profile like this

1727
01:16:09,840 --> 01:16:12,120
profile is provisioned by somebody right

1728
01:16:12,120 --> 01:16:14,159
and it could be the same people that are

1729
01:16:14,159 --> 01:16:15,900
provisioning both the machine and the

1730
01:16:15,900 --> 01:16:17,880
user but it could be different and I

1731
01:16:17,880 --> 01:16:19,500
think if we go down the path of there

1732
01:16:19,500 --> 01:16:20,940
being some kind of configuration

1733
01:16:20,940 --> 01:16:22,620
information we have to understand who

1734
01:16:22,620 --> 01:16:24,719
owns that configuration and owns the

1735
01:16:24,719 --> 01:16:27,179
expiry and all of that

1736
01:16:27,179 --> 01:16:27,719
um

1737
01:16:27,719 --> 01:16:30,600
so it's a little a little bit tricky

1738
01:16:30,600 --> 01:16:32,400
um

1739
01:16:32,400 --> 01:16:34,920
but yeah it's more more thought needs to

1740
01:16:34,920 --> 01:16:36,120
be but

1741
01:16:36,120 --> 01:16:38,159
you know I think we have a good start to

1742
01:16:38,159 --> 01:16:42,259
at least discuss the issue

1743
01:16:44,040 --> 01:16:47,120
okay thanks

1744
01:16:48,960 --> 01:16:50,340
I think we'll need to have more

1745
01:16:50,340 --> 01:16:52,320
discussion on the list to see you know

1746
01:16:52,320 --> 01:16:54,960
what the next steps would be but I mean

1747
01:16:54,960 --> 01:16:56,760
we've had discussion here so I think

1748
01:16:56,760 --> 01:16:58,260
that's good that's been helpful thank

1749
01:16:58,260 --> 01:17:00,560
you very much

1750
01:17:08,100 --> 01:17:12,300
so there were eput

1751
01:17:12,300 --> 01:17:15,239
but I think you can go but I think we

1752
01:17:15,239 --> 01:17:17,940
can is it in uh

1753
01:17:17,940 --> 01:17:20,719
slide

1754
01:17:22,520 --> 01:17:24,620
okay

1755
01:17:24,620 --> 01:17:28,219
that's good too

1756
01:17:34,560 --> 01:17:38,699
okay uh yeah

1757
01:17:38,699 --> 01:17:42,960
um for for those present at the ATF 113

1758
01:17:42,960 --> 01:17:46,320
in Vienna maybe you you remember me

1759
01:17:46,320 --> 01:17:48,179
rushing through these slides in like

1760
01:17:48,179 --> 01:17:50,520
under one minute

1761
01:17:50,520 --> 01:17:52,199
um hopefully I can I can go through

1762
01:17:52,199 --> 01:17:54,060
these slides this time with a little bit

1763
01:17:54,060 --> 01:17:55,560
more time

1764
01:17:55,560 --> 01:17:58,500
um so for the IDF in Vienna I submitted

1765
01:17:58,500 --> 01:18:01,920
two drafts one uh the uh observations

1766
01:18:01,920 --> 01:18:05,940
that's uh now already expired and I

1767
01:18:05,940 --> 01:18:07,620
don't really have any intention to to

1768
01:18:07,620 --> 01:18:09,360
follow up on that and it was never

1769
01:18:09,360 --> 01:18:13,500
intended to be an RFC but uh ibnoop I've

1770
01:18:13,500 --> 01:18:16,500
actually worked on a little bit more uh

1771
01:18:16,500 --> 01:18:17,940
next slide

1772
01:18:17,940 --> 01:18:21,060
um so for a master's project at my

1773
01:18:21,060 --> 01:18:24,000
University I looked into ibnoop and I

1774
01:18:24,000 --> 01:18:29,100
have seen a few things that I yeah I was

1775
01:18:29,100 --> 01:18:30,239
not sure

1776
01:18:30,239 --> 01:18:33,000
um exactly why the the protocol was

1777
01:18:33,000 --> 01:18:34,679
specified like that

1778
01:18:34,679 --> 01:18:37,020
um the first thing that I noticed is we

1779
01:18:37,020 --> 01:18:40,500
use Json as pay load and of course when

1780
01:18:40,500 --> 01:18:43,320
you're working with iot devices and you

1781
01:18:43,320 --> 01:18:45,780
hear Json

1782
01:18:45,780 --> 01:18:48,420
um yeah well it's not really well suited

1783
01:18:48,420 --> 01:18:52,860
for for iot devices we have strings as

1784
01:18:52,860 --> 01:18:57,060
map keys so we get quite long messages

1785
01:18:57,060 --> 01:18:57,480
[Music]

1786
01:18:57,480 --> 01:18:58,159
um

1787
01:18:58,159 --> 01:19:01,679
we have some canonicalization issues if

1788
01:19:01,679 --> 01:19:04,739
we calculate the hmac over these

1789
01:19:04,739 --> 01:19:07,620
messages and we also use the message

1790
01:19:07,620 --> 01:19:09,360
contents

1791
01:19:09,360 --> 01:19:13,920
to form an adjacent array that is then

1792
01:19:13,920 --> 01:19:16,380
used for the hmac calculation so there

1793
01:19:16,380 --> 01:19:19,620
are some some concerns there

1794
01:19:19,620 --> 01:19:23,580
um next slide I will skip over the the

1795
01:19:23,580 --> 01:19:25,800
surveying for p info

1796
01:19:25,800 --> 01:19:27,780
um we have a

1797
01:19:27,780 --> 01:19:30,120
quite High number of messages exchanged

1798
01:19:30,120 --> 01:19:32,219
for example the the first message from

1799
01:19:32,219 --> 01:19:34,560
the server to the client actually does

1800
01:19:34,560 --> 01:19:37,739
not contain any information except for

1801
01:19:37,739 --> 01:19:43,320
hi this is an initial message and the

1802
01:19:43,320 --> 01:19:46,380
peer then transmit uh transmits its

1803
01:19:46,380 --> 01:19:50,219
state and its peer ID so

1804
01:19:50,219 --> 01:19:52,560
um I think that this could be reduced by

1805
01:19:52,560 --> 01:19:54,900
at least one round trip if the

1806
01:19:54,900 --> 01:19:58,020
transmission of the PS date for example

1807
01:19:58,020 --> 01:20:01,260
is done implicitly where the choose of

1808
01:20:01,260 --> 01:20:04,800
reply messages by the pair and one

1809
01:20:04,800 --> 01:20:08,520
editorial knit I found is that the noob

1810
01:20:08,520 --> 01:20:12,000
specification never or the the noob RFC

1811
01:20:12,000 --> 01:20:15,060
never X implicitly defines that this is

1812
01:20:15,060 --> 01:20:16,860
version one there are only example

1813
01:20:16,860 --> 01:20:18,840
values given

1814
01:20:18,840 --> 01:20:22,560
um I'm not exactly sure this uh could be

1815
01:20:22,560 --> 01:20:25,500
fixed with a narrata so I'm still new to

1816
01:20:25,500 --> 01:20:29,159
the process okay next slide so um what I

1817
01:20:29,159 --> 01:20:31,320
did after looking at this specification

1818
01:20:31,320 --> 01:20:32,699
is

1819
01:20:32,699 --> 01:20:33,239
um

1820
01:20:33,239 --> 01:20:34,679
saying well

1821
01:20:34,679 --> 01:20:37,800
we can try to to use the same design

1822
01:20:37,800 --> 01:20:40,080
principle because I I found the the

1823
01:20:40,080 --> 01:20:42,719
design principle quite interesting to

1824
01:20:42,719 --> 01:20:45,719
use an out-of-band message to

1825
01:20:45,719 --> 01:20:47,820
authenticate the The inbend Exchange and

1826
01:20:47,820 --> 01:20:49,620
I've written a specification called

1827
01:20:49,620 --> 01:20:52,920
utter users as the trust establishment

1828
01:20:52,920 --> 01:20:56,460
it's basically the same design but

1829
01:20:56,460 --> 01:21:00,420
instead of Json I use sibo as a message

1830
01:21:00,420 --> 01:21:01,699
encoding

1831
01:21:01,699 --> 01:21:05,000
cbos sequence and sibo maps

1832
01:21:05,000 --> 01:21:08,580
and the Mac calculation is done over the

1833
01:21:08,580 --> 01:21:11,400
whole message instead of just parts of

1834
01:21:11,400 --> 01:21:13,040
the message combined

1835
01:21:13,040 --> 01:21:16,380
so this also adds the possibility to

1836
01:21:16,380 --> 01:21:19,820
extend the protocol without the need for

1837
01:21:19,820 --> 01:21:21,739
all

1838
01:21:21,739 --> 01:21:25,260
devices to to understand each part of

1839
01:21:25,260 --> 01:21:27,480
the protocol because you can just take

1840
01:21:27,480 --> 01:21:29,760
the whole message put it in your Mac

1841
01:21:29,760 --> 01:21:32,400
calculation and you don't need to

1842
01:21:32,400 --> 01:21:33,900
understand every bit

1843
01:21:33,900 --> 01:21:36,480
next slide

1844
01:21:36,480 --> 01:21:39,000
um yeah so the the current state I have

1845
01:21:39,000 --> 01:21:41,760
presented it and at the 113 I haven't

1846
01:21:41,760 --> 01:21:44,699
got any feedback I have worked on it uh

1847
01:21:44,699 --> 01:21:47,159
since so the the zero one version is now

1848
01:21:47,159 --> 01:21:48,719
published

1849
01:21:48,719 --> 01:21:51,900
um it contains a more or less complete

1850
01:21:51,900 --> 01:21:53,520
specification of the base protocol

1851
01:21:53,520 --> 01:21:55,860
there's still a number of to-do's of

1852
01:21:55,860 --> 01:21:57,540
course in the draft

1853
01:21:57,540 --> 01:22:00,179
um this was part of my Master's project

1854
01:22:00,179 --> 01:22:02,460
um yeah so

1855
01:22:02,460 --> 01:22:05,760
um I have an implementation for this uh

1856
01:22:05,760 --> 01:22:08,100
with the initial and completion exchange

1857
01:22:08,100 --> 01:22:12,360
so the first uh onboarding mechanism for

1858
01:22:12,360 --> 01:22:15,360
the device radio with ESP IDF on the

1859
01:22:15,360 --> 01:22:19,440
client side and my own uh Ruby server

1860
01:22:19,440 --> 01:22:23,040
based server on the server side uh next

1861
01:22:23,040 --> 01:22:27,900
slide so my question to this working

1862
01:22:27,900 --> 01:22:32,040
group would be is this useful work uh I

1863
01:22:32,040 --> 01:22:34,100
haven't really found any

1864
01:22:34,100 --> 01:22:37,800
documentation of noob being used

1865
01:22:37,800 --> 01:22:39,300
um anywhere

1866
01:22:39,300 --> 01:22:42,239
um I have found some references but uh

1867
01:22:42,239 --> 01:22:44,280
not many

1868
01:22:44,280 --> 01:22:46,920
um so the first question or the most

1869
01:22:46,920 --> 01:22:50,179
important question is is this

1870
01:22:50,179 --> 01:22:54,239
uh possible or useful work item for emu

1871
01:22:54,239 --> 01:22:58,760
or um should I just stop working on it

1872
01:22:58,760 --> 01:23:02,960
because nobody uses ibnoop anyway so

1873
01:23:02,960 --> 01:23:07,920
iputer won't solve a reasonable problem

1874
01:23:07,920 --> 01:23:09,540
and of course then the following

1875
01:23:09,540 --> 01:23:12,120
questions if if it is

1876
01:23:12,120 --> 01:23:12,719
um

1877
01:23:12,719 --> 01:23:17,100
is it okay to to Define new protocol or

1878
01:23:17,100 --> 01:23:20,159
should I try to Define it as a new

1879
01:23:20,159 --> 01:23:22,980
version 2 with uh all the problems that

1880
01:23:22,980 --> 01:23:25,519
come with it

1881
01:23:31,199 --> 01:23:34,440
I I don't know of any you know large

1882
01:23:34,440 --> 01:23:36,780
deployments that use epnew so I don't

1883
01:23:36,780 --> 01:23:39,480
know I don't think there's uh and it's

1884
01:23:39,480 --> 01:23:40,980
fairly new

1885
01:23:40,980 --> 01:23:43,560
um as far as a draft published so I I

1886
01:23:43,560 --> 01:23:44,880
don't know

1887
01:23:44,880 --> 01:23:47,520
but I haven't heard of many plans to use

1888
01:23:47,520 --> 01:23:50,460
it either so yeah I I don't know that

1889
01:23:50,460 --> 01:23:53,159
it's uh necessarily a fruitful path to

1890
01:23:53,159 --> 01:23:54,840
go down

1891
01:23:54,840 --> 01:23:55,560
um

1892
01:23:55,560 --> 01:23:57,719
but I think certainly some of the

1893
01:23:57,719 --> 01:23:59,159
learnings I know we did have some

1894
01:23:59,159 --> 01:24:03,060
discussion on Json versus other formats

1895
01:24:03,060 --> 01:24:05,159
um and I think we went with we stayed

1896
01:24:05,159 --> 01:24:07,199
with Json because that was what was

1897
01:24:07,199 --> 01:24:08,940
already defined and there wasn't desire

1898
01:24:08,940 --> 01:24:10,920
within the working group to go make that

1899
01:24:10,920 --> 01:24:12,840
change at that time

1900
01:24:12,840 --> 01:24:14,159
um

1901
01:24:14,159 --> 01:24:16,140
but uh

1902
01:24:16,140 --> 01:24:18,300
yeah so I don't know if anybody else has

1903
01:24:18,300 --> 01:24:20,280
any information on deployments of each

1904
01:24:20,280 --> 01:24:22,699
noob

1905
01:24:23,940 --> 01:24:27,120
I mean it is it is a very very specific

1906
01:24:27,120 --> 01:24:29,159
um protocol

1907
01:24:29,159 --> 01:24:31,980
um it was chartered to to have one of

1908
01:24:31,980 --> 01:24:35,640
these uh method methods defined in emu

1909
01:24:35,640 --> 01:24:39,600
um I have thought of some applications

1910
01:24:39,600 --> 01:24:42,600
um where you can actually use that to to

1911
01:24:42,600 --> 01:24:45,360
gain access but um

1912
01:24:45,360 --> 01:24:47,699
yeah if there's no no interest in the

1913
01:24:47,699 --> 01:24:49,260
working group then

1914
01:24:49,260 --> 01:24:51,960
I'll just keep it as my contribution to

1915
01:24:51,960 --> 01:24:54,120
my Master's project and I will not

1916
01:24:54,120 --> 01:24:57,860
pursue this any further

1917
01:25:01,199 --> 01:25:03,060
yeah it's probably something we can you

1918
01:25:03,060 --> 01:25:04,739
know might be useful to ask on the list

1919
01:25:04,739 --> 01:25:06,300
because there may be people who are it

1920
01:25:06,300 --> 01:25:08,520
as it is kind of as you say it's kind of

1921
01:25:08,520 --> 01:25:10,800
a niche thing there may be people who

1922
01:25:10,800 --> 01:25:12,480
aren't at the meeting who

1923
01:25:12,480 --> 01:25:15,239
uh have experience with it

1924
01:25:15,239 --> 01:25:17,699
any feedback is appreciated

1925
01:25:17,699 --> 01:25:20,299
thank you

1926
01:25:22,440 --> 01:25:25,519
okay that's it

1927
01:25:31,320 --> 01:25:32,659
my business

1928
01:25:32,659 --> 01:25:34,739
anybody have anything else they would

1929
01:25:34,739 --> 01:25:36,600
like to discuss today

1930
01:25:36,600 --> 01:25:39,719
that's emu related I'm sure you all have

1931
01:25:39,719 --> 01:25:43,640
fascinating things to talk about but

1932
01:25:45,540 --> 01:25:48,540
all right well thank you for uh joining

1933
01:25:48,540 --> 01:25:51,900
our Monday session enjoy your week uh

1934
01:25:51,900 --> 01:25:52,739
Joe

1935
01:25:52,739 --> 01:25:54,900
yeah Dan

1936
01:25:54,900 --> 01:25:56,639
uh

1937
01:25:56,639 --> 01:25:59,900
were we going to do a bootstrapped TLS

1938
01:25:59,900 --> 01:26:01,739
we can

1939
01:26:01,739 --> 01:26:06,239
I don't see a lot but yeah Owen Owen uh

1940
01:26:06,239 --> 01:26:10,080
apparently can uh is ill and uh could

1941
01:26:10,080 --> 01:26:11,760
not make it and then Elliot was gonna

1942
01:26:11,760 --> 01:26:14,040
present and then he couldn't make it but

1943
01:26:14,040 --> 01:26:15,659
if you would like to say some things

1944
01:26:15,659 --> 01:26:17,400
that would be fine

1945
01:26:17,400 --> 01:26:20,520
uh yeah I mean I might as well we have

1946
01:26:20,520 --> 01:26:23,699
half an hour right yeah sure all right

1947
01:26:23,699 --> 01:26:27,620
yeah if you could share the deck please

1948
01:26:27,960 --> 01:26:31,139
should be there okay yep thank you so uh

1949
01:26:31,139 --> 01:26:34,139
yeah this is a uh the newly minted

1950
01:26:34,139 --> 01:26:36,840
bootstrap TLS uh version one next slide

1951
01:26:36,840 --> 01:26:39,080
please

1952
01:26:39,960 --> 01:26:43,199
and uh to remind everybody the the

1953
01:26:43,199 --> 01:26:46,560
goal here is we wanted to reuse uh the

1954
01:26:46,560 --> 01:26:48,000
bootstrapping techniques and the

1955
01:26:48,000 --> 01:26:49,880
bootstrapping key formats that the

1956
01:26:49,880 --> 01:26:53,100
device provisioning protocol uses

1957
01:26:53,100 --> 01:26:56,699
uh and use them to

1958
01:26:56,699 --> 01:27:00,659
to authenticate a wired a wired device

1959
01:27:00,659 --> 01:27:03,179
so uh you know what happens is you know

1960
01:27:03,179 --> 01:27:05,340
you you plug a wired device into an

1961
01:27:05,340 --> 01:27:06,840
82.1x Network and the first thing it

1962
01:27:06,840 --> 01:27:09,000
does is say what's your Eep identity uh

1963
01:27:09,000 --> 01:27:10,860
and if the device just is not

1964
01:27:10,860 --> 01:27:12,840
provisioned then it's the classic

1965
01:27:12,840 --> 01:27:15,600
Catch-22 so what we wanted to do is use

1966
01:27:15,600 --> 01:27:19,260
the DPP bootstrapping key to uh form a

1967
01:27:19,260 --> 01:27:23,580
psk uh and then inject it using 9258

1968
01:27:23,580 --> 01:27:28,380
into uh into TLS and then do normal uh

1969
01:27:28,380 --> 01:27:31,679
well I guess not normal it's uh 8773 uh

1970
01:27:31,679 --> 01:27:33,719
cert based authentication that also uses

1971
01:27:33,719 --> 01:27:35,940
an external psk namely the one that we

1972
01:27:35,940 --> 01:27:38,699
just imported uh and then uh the client

1973
01:27:38,699 --> 01:27:41,639
authenticates uh using uh his raw public

1974
01:27:41,639 --> 01:27:45,000
key to prove possession of the private

1975
01:27:45,000 --> 01:27:47,460
analog to his public bootstrapping key

1976
01:27:47,460 --> 01:27:50,540
next slide please

1977
01:27:52,080 --> 01:27:55,380
so we we did have some feedback on the

1978
01:27:55,380 --> 01:27:58,020
on the mailing list uh and we did make

1979
01:27:58,020 --> 01:28:00,659
an o1 version of this this document we

1980
01:28:00,659 --> 01:28:02,639
we did reorganize some of the stuff to

1981
01:28:02,639 --> 01:28:06,060
hopefully make it uh more readable so if

1982
01:28:06,060 --> 01:28:09,060
if people would uh comment on that it

1983
01:28:09,060 --> 01:28:12,360
would be helpful uh

1984
01:28:12,360 --> 01:28:15,780
uh I got a email from Amanda and Ayanna

1985
01:28:15,780 --> 01:28:18,540
regarding the uh identity that we're

1986
01:28:18,540 --> 01:28:22,500
we're adding to dpp.orpa and uh I

1987
01:28:22,500 --> 01:28:23,760
haven't gotten back to her about that

1988
01:28:23,760 --> 01:28:25,739
but uh we will

1989
01:28:25,739 --> 01:28:30,320
definitely do that so next slide please

1990
01:28:31,020 --> 01:28:33,179
so this is what it looks like the uh the

1991
01:28:33,179 --> 01:28:35,340
the Bold text is the stuff that we're

1992
01:28:35,340 --> 01:28:38,340
adding for DPP and the the non-bold text

1993
01:28:38,340 --> 01:28:42,480
is just your the Plain Jane TLS 1.3

1994
01:28:42,480 --> 01:28:44,159
handshaking

1995
01:28:44,159 --> 01:28:46,980
so basically the the public key is going

1996
01:28:46,980 --> 01:28:51,719
to get uh hkdf'd into a into a psk and

1997
01:28:51,719 --> 01:28:54,000
then using 9258 it's going to get

1998
01:28:54,000 --> 01:28:57,020
injected into the into the TLs handshake

1999
01:28:57,020 --> 01:29:01,800
uh we we drive an imported identity for

2000
01:29:01,800 --> 01:29:04,679
that that key and that gets gets

2001
01:29:04,679 --> 01:29:06,840
included in the in the client hello

2002
01:29:06,840 --> 01:29:10,440
the server then can look this up uh find

2003
01:29:10,440 --> 01:29:12,300
find the psk and then and then continue

2004
01:29:12,300 --> 01:29:14,580
with uh the rest of the handshaking

2005
01:29:14,580 --> 01:29:16,739
which again is a certain with external

2006
01:29:16,739 --> 01:29:18,120
psk and then the clients can

2007
01:29:18,120 --> 01:29:20,280
authenticate with with his raw public

2008
01:29:20,280 --> 01:29:22,020
key

2009
01:29:22,020 --> 01:29:25,040
so next slide please

2010
01:29:25,980 --> 01:29:27,900
so the reason we're going to this

2011
01:29:27,900 --> 01:29:30,780
trouble then is is this uh we want to

2012
01:29:30,780 --> 01:29:33,179
use use it with teep so what happens is

2013
01:29:33,179 --> 01:29:35,159
you've got this wired device that has

2014
01:29:35,159 --> 01:29:39,120
you know a Lim no or a very uh

2015
01:29:39,120 --> 01:29:42,679
poor user interface and it has no no

2016
01:29:42,679 --> 01:29:44,580
provisioning to get on the network so

2017
01:29:44,580 --> 01:29:46,080
you're gonna it's you plug it into the

2018
01:29:46,080 --> 01:29:48,480
network and the the authenticator says

2019
01:29:48,480 --> 01:29:50,760
what's your what's your Eep identity and

2020
01:29:50,760 --> 01:29:53,719
the response is TLS poke at

2021
01:29:53,719 --> 01:29:56,219
dpp.arpa which indicates to the

2022
01:29:56,219 --> 01:29:58,500
authenticator that he should start keep

2023
01:29:58,500 --> 01:30:02,100
and do uh this new type of

2024
01:30:02,100 --> 01:30:04,920
uh TLS with a with a bootstrapping key

2025
01:30:04,920 --> 01:30:07,560
so that that's going to get get

2026
01:30:07,560 --> 01:30:09,060
authenticated

2027
01:30:09,060 --> 01:30:14,340
and then uh we use the existing uh teep

2028
01:30:14,340 --> 01:30:19,260
uh tlvs to uh enroll into the into a CA

2029
01:30:19,260 --> 01:30:22,020
passing a pkc S10 and getting back a pkc

2030
01:30:22,020 --> 01:30:24,960
a seven bag asserts and then the the

2031
01:30:24,960 --> 01:30:29,159
client can can provision uh

2032
01:30:29,159 --> 01:30:32,100
those the that that certificate and use

2033
01:30:32,100 --> 01:30:33,540
it for for any subsequent connection

2034
01:30:33,540 --> 01:30:37,440
that it has to use what it has to do so

2035
01:30:37,440 --> 01:30:40,099
next slide please

2036
01:30:40,260 --> 01:30:42,480
uh

2037
01:30:42,480 --> 01:30:45,060
Elliot tells me that he's found some

2038
01:30:45,060 --> 01:30:46,260
students that are going to be

2039
01:30:46,260 --> 01:30:49,139
implementing this which is good uh

2040
01:30:49,139 --> 01:30:51,120
I'm going to try and implement this I

2041
01:30:51,120 --> 01:30:54,540
noticed that uh Rob Rob public Keys when

2042
01:30:54,540 --> 01:30:57,239
in TLS 1.3 is a is a feature that's

2043
01:30:57,239 --> 01:30:59,280
being added to open openssl and when

2044
01:30:59,280 --> 01:31:00,360
that's done I think it'll be a lot

2045
01:31:00,360 --> 01:31:02,159
easier to uh

2046
01:31:02,159 --> 01:31:04,980
to to to roll this out but but again

2047
01:31:04,980 --> 01:31:08,400
these are we're not doing any any

2048
01:31:08,400 --> 01:31:11,100
funky changes to the TLs handshake these

2049
01:31:11,100 --> 01:31:13,139
are all just standard extensions that

2050
01:31:13,139 --> 01:31:14,400
other people have to find we're just

2051
01:31:14,400 --> 01:31:16,139
putting them together in this special

2052
01:31:16,139 --> 01:31:19,139
way to to solve this problem

2053
01:31:19,139 --> 01:31:21,960
so if there's any questions or comments

2054
01:31:21,960 --> 01:31:23,820
uh I'm also curious how many people have

2055
01:31:23,820 --> 01:31:26,360
read the draft

2056
01:31:27,360 --> 01:31:29,100
yeah if we can have a show of hands of

2057
01:31:29,100 --> 01:31:32,219
people have read the draft or no so we

2058
01:31:32,219 --> 01:31:33,120
have

2059
01:31:33,120 --> 01:31:35,040
a couple people in the room and I don't

2060
01:31:35,040 --> 01:31:37,860
know if anybody was on the chat

2061
01:31:37,860 --> 01:31:39,900
so it would be good uh this is a working

2062
01:31:39,900 --> 01:31:42,480
group item It's relatively newly adopted

2063
01:31:42,480 --> 01:31:44,940
but it would be great if uh we had some

2064
01:31:44,940 --> 01:31:46,139
additional review that in the working

2065
01:31:46,139 --> 01:31:47,639
group

2066
01:31:47,639 --> 01:31:48,600
um

2067
01:31:48,600 --> 01:31:50,340
yes please

2068
01:31:50,340 --> 01:31:53,719
Deb did you have a question

2069
01:32:00,679 --> 01:32:03,900
so yeah we should have some more

2070
01:32:03,900 --> 01:32:06,179
discussion on the list on this it'd be

2071
01:32:06,179 --> 01:32:10,020
great to get some reviews coming in uh

2072
01:32:10,020 --> 01:32:12,120
so that we can start figuring out how we

2073
01:32:12,120 --> 01:32:14,599
move this forward

2074
01:32:15,000 --> 01:32:17,100
all right now

2075
01:32:17,100 --> 01:32:19,380
I think now we may really be done this

2076
01:32:19,380 --> 01:32:20,760
time

2077
01:32:20,760 --> 01:32:23,360
so

2078
01:32:23,639 --> 01:32:25,920
all right thank you everybody and uh

2079
01:32:25,920 --> 01:32:28,880
we'll see you next time

2080
01:32:52,920 --> 01:32:54,120
I don't understand

2081
01:32:54,120 --> 01:32:58,920
well because if that was late

2082
01:32:58,920 --> 01:33:03,139
but we try to update it or something

2083
01:33:03,600 --> 01:33:05,040
I don't know

2084
01:33:05,040 --> 01:33:07,020
it's uh maybe it's something to talk to

2085
01:33:07,020 --> 01:33:10,219
me that tell folks about

2086
01:33:11,340 --> 01:33:14,000
that before

2087
01:33:17,880 --> 01:33:22,340
no I don't know how it works

2088
01:33:30,719 --> 01:33:32,340
because

2089
01:33:32,340 --> 01:33:36,659
she's there in the slides yes

2090
01:33:51,139 --> 01:33:55,520
Safari as a separate login

2091
01:33:57,590 --> 01:34:00,789
[Music]

2092
01:34:03,960 --> 01:34:06,800
I'm already

2093
01:34:10,139 --> 01:34:12,139
here

2094
01:34:12,320 --> 01:34:15,420
so we ended up going

2095
01:34:15,420 --> 01:34:19,340
he's using her a lot of time

2096
01:34:23,880 --> 01:34:27,199
some interesting topics

2097
01:34:28,699 --> 01:34:32,179
Safari doesn't matter yeah

2098
01:34:32,179 --> 01:34:34,920
it's uh

2099
01:34:34,920 --> 01:34:38,639
think it's just somehow

2100
01:34:38,639 --> 01:34:40,440
I mean it's a little bit of an odd duck

2101
01:34:40,440 --> 01:34:44,780
because it's uploaded as a

2102
01:34:45,239 --> 01:34:47,880
PowerPoint but it went it created a PDF

2103
01:34:47,880 --> 01:34:49,860
out of it yeah but maybe there's some

2104
01:34:49,860 --> 01:34:51,960
maybe I have to do the guitar for the

2105
01:34:51,960 --> 01:34:53,820
PowerPoint to PDF conversion and only

2106
01:34:53,820 --> 01:34:56,219
uploads in this video

2107
01:34:56,219 --> 01:34:58,380
could be

2108
01:34:58,380 --> 01:35:00,679
yes

2109
01:35:03,980 --> 01:35:06,719
but you were the one who uploaded it he

2110
01:35:06,719 --> 01:35:09,600
didn't propose the slot yeah

2111
01:35:09,600 --> 01:35:13,820
I mean theoretically that should work

2112
01:35:44,100 --> 01:35:47,100
uh

2113
01:35:56,340 --> 01:35:58,340
um

2114
01:36:41,940 --> 01:36:43,940
um

2115
01:36:46,679 --> 01:36:49,880
have betrayed

2116
01:37:19,080 --> 01:37:22,699
um we forgot to talk about uh

2117
01:37:23,340 --> 01:37:24,780
doing

2118
01:37:24,780 --> 01:37:28,040
essentially the list

2119
01:37:28,080 --> 01:37:32,820
about having an interim for yeah

2120
01:37:47,340 --> 01:37:49,040
yeah

2121
01:37:49,040 --> 01:37:52,340
it's just

2122
01:37:53,719 --> 01:37:58,880
it says you can't add anything else

2123
01:38:22,560 --> 01:38:24,300
yeah one thing we should do is get a

2124
01:38:24,300 --> 01:38:27,440
summary out to Sac

2125
01:38:37,400 --> 01:38:40,739
shouldn't be too much

2126
01:38:40,739 --> 01:38:43,940
thank you drew yeah

2127
01:38:56,280 --> 01:38:58,519
foreign

2128
01:39:39,120 --> 01:39:42,120
is

2129
01:40:02,400 --> 01:40:05,400
describes

2130
01:40:16,760 --> 01:40:20,480
you can see right here

