1
00:00:05,180 --> 00:00:07,740
no all right well I suppose I suppose we

2
00:00:07,740 --> 00:00:09,059
could at least do the preliminaries

3
00:00:09,059 --> 00:00:11,420
can't we

4
00:00:31,679 --> 00:00:34,679
so

5
00:00:36,120 --> 00:00:38,599
yeah

6
00:00:38,940 --> 00:00:42,620
just don't find it again

7
00:01:01,199 --> 00:01:03,840
I'm able to continue the session what do

8
00:01:03,840 --> 00:01:06,559
I done here

9
00:01:08,280 --> 00:01:11,280
foreign

10
00:01:27,560 --> 00:01:30,860
documents gone

11
00:01:37,380 --> 00:01:40,380
so

12
00:01:42,060 --> 00:01:44,479
much

13
00:02:06,000 --> 00:02:07,439
all right so this thing seems to have

14
00:02:07,439 --> 00:02:11,119
got itself into a very strange state

15
00:02:12,959 --> 00:02:16,220
oh yeah yeah

16
00:02:25,260 --> 00:02:27,260
um

17
00:02:39,620 --> 00:02:41,400
right

18
00:02:41,400 --> 00:02:43,500
shall we

19
00:02:43,500 --> 00:02:45,959
shall we kick off

20
00:02:45,959 --> 00:02:50,040
so welcome to the pals mpls detnet joint

21
00:02:50,040 --> 00:02:54,239
session at ietf115

22
00:02:56,340 --> 00:02:59,300
uh

23
00:03:00,300 --> 00:03:02,900
come on

24
00:03:04,500 --> 00:03:07,200
so why is this not

25
00:03:07,200 --> 00:03:09,900
it's not sharing on this end here right

26
00:03:09,900 --> 00:03:12,239
so the usual note well you have

27
00:03:12,239 --> 00:03:14,519
um seen this many many times by the time

28
00:03:14,519 --> 00:03:17,940
you've been here just remember that um

29
00:03:17,940 --> 00:03:19,739
yeah I can see that I can't see it on

30
00:03:19,739 --> 00:03:21,360
here

31
00:03:21,360 --> 00:03:23,700
um just remember that

32
00:03:23,700 --> 00:03:25,860
um uh anything you say

33
00:03:25,860 --> 00:03:29,239
why has that disappeared

34
00:03:32,720 --> 00:03:36,560
why has that disappeared

35
00:03:42,360 --> 00:03:45,200
no

36
00:03:45,720 --> 00:03:48,980
share preloaded slides

37
00:03:50,400 --> 00:03:53,540
share shares intro

38
00:03:53,819 --> 00:03:56,599
sure

39
00:03:58,739 --> 00:04:02,120
what am I connected to

40
00:04:03,780 --> 00:04:05,819
I've connected to IHF hotel isn't right

41
00:04:05,819 --> 00:04:09,140
here let's see if that works any better

42
00:04:10,739 --> 00:04:13,879
so just bear with me

43
00:04:20,519 --> 00:04:23,000
share

44
00:04:34,040 --> 00:04:39,900
right welcome to ietf115 the pals joint

45
00:04:39,900 --> 00:04:40,979
session

46
00:04:40,979 --> 00:04:43,800
and please read the the note well actual

47
00:04:43,800 --> 00:04:46,280
leisure

48
00:04:46,979 --> 00:04:49,560
uh meeting tips I'm sure you've read

49
00:04:49,560 --> 00:04:51,600
this most important one seems to be to

50
00:04:51,600 --> 00:04:54,360
keep your mask on

51
00:04:54,360 --> 00:04:56,460
um don't forget to get into the active

52
00:04:56,460 --> 00:04:58,440
queue rather than just line up at the

53
00:04:58,440 --> 00:05:00,540
microphone

54
00:05:00,540 --> 00:05:02,040
so purpose of this meeting this is a

55
00:05:02,040 --> 00:05:04,919
meeting is a joint session of Pals mpls

56
00:05:04,919 --> 00:05:07,320
and debtnet and it's called to discuss

57
00:05:07,320 --> 00:05:09,479
the basic architectural issues and

58
00:05:09,479 --> 00:05:11,699
solution proposals

59
00:05:11,699 --> 00:05:15,919
um arising from the need to improve

60
00:05:15,919 --> 00:05:19,199
mpls support for new applications and

61
00:05:19,199 --> 00:05:20,580
uses

62
00:05:20,580 --> 00:05:24,539
so the agenda is we there will be a

63
00:05:24,539 --> 00:05:27,720
report on the open design teamwork

64
00:05:27,720 --> 00:05:32,280
and then we will look at um some updates

65
00:05:32,280 --> 00:05:35,220
on requirements the m a header and the

66
00:05:35,220 --> 00:05:38,160
ioam encapsulation

67
00:05:38,160 --> 00:05:42,539
and then there are two debtnet drafts

68
00:05:42,539 --> 00:05:44,940
that um we've been requested to include

69
00:05:44,940 --> 00:05:46,860
on the agenda because it is felt that

70
00:05:46,860 --> 00:05:50,220
they need a wider Community review and

71
00:05:50,220 --> 00:05:51,539
so we're going to put them here in this

72
00:05:51,539 --> 00:05:52,860
joint meeting

73
00:05:52,860 --> 00:05:55,440
and then there is

74
00:05:55,440 --> 00:05:59,699
um some open uh microphone time to

75
00:05:59,699 --> 00:06:03,199
discuss issues of Interest

76
00:06:04,620 --> 00:06:07,259
um so I had we had hoped that the

77
00:06:07,259 --> 00:06:10,560
Thursday open design team uh sessions

78
00:06:10,560 --> 00:06:12,960
could be drawn to a close and that we

79
00:06:12,960 --> 00:06:15,860
would revert to normal working group

80
00:06:15,860 --> 00:06:18,000
procedure and normal working group sort

81
00:06:18,000 --> 00:06:20,220
of timing and stuff

82
00:06:20,220 --> 00:06:22,259
however

83
00:06:22,259 --> 00:06:23,479
um

84
00:06:23,479 --> 00:06:25,620
breaking news because we only realized

85
00:06:25,620 --> 00:06:27,240
this last week much many of our

86
00:06:27,240 --> 00:06:28,919
environment many of us are being

87
00:06:28,919 --> 00:06:30,900
embarrassed by this we don't believe

88
00:06:30,900 --> 00:06:34,500
that the solution properly describes how

89
00:06:34,500 --> 00:06:36,720
to do non-ip payloads and how they will

90
00:06:36,720 --> 00:06:40,919
be carried over an m n a enabled LSP so

91
00:06:40,919 --> 00:06:43,020
we're proposing to keep the open design

92
00:06:43,020 --> 00:06:45,360
team Thursday sessions running for

93
00:06:45,360 --> 00:06:48,000
hopefully a short while longer until we

94
00:06:48,000 --> 00:06:51,360
have a consensus position on uh how

95
00:06:51,360 --> 00:06:55,819
we're going to do payloads other than IP

96
00:06:56,180 --> 00:06:57,960
so

97
00:06:57,960 --> 00:07:01,800
um we are um we've done the

98
00:07:01,800 --> 00:07:05,340
um chairs uh introduction

99
00:07:05,340 --> 00:07:07,080
um there's going Tariq you're on next

100
00:07:07,080 --> 00:07:10,800
with an open design team report

101
00:07:10,800 --> 00:07:12,360
um then we have

102
00:07:12,360 --> 00:07:14,100
um a bunch of

103
00:07:14,100 --> 00:07:17,460
um net specific sorry uh m a specific

104
00:07:17,460 --> 00:07:19,620
drafts and then we'll go to the two dead

105
00:07:19,620 --> 00:07:21,900
net discount drafts

106
00:07:21,900 --> 00:07:24,900
and uh he was a bunch of useful

107
00:07:24,900 --> 00:07:27,060
resources that I suggest you consult at

108
00:07:27,060 --> 00:07:29,660
your leisure

109
00:07:30,120 --> 00:07:34,919
oh well let's take me to change deck

110
00:07:34,919 --> 00:07:36,979
um

111
00:07:37,500 --> 00:07:40,699
so Tariq

112
00:07:41,039 --> 00:07:43,380
over to you please

113
00:07:43,380 --> 00:07:45,180
okay sounds good

114
00:07:45,180 --> 00:07:49,259
uh can can you confirm you hear me well

115
00:07:49,259 --> 00:07:50,460
yes

116
00:07:50,460 --> 00:07:54,599
okay great hi my name is uh Tariq and

117
00:07:54,599 --> 00:07:57,539
I'm going to report uh to you about the

118
00:07:57,539 --> 00:08:00,720
mpls network actions open design team

119
00:08:00,720 --> 00:08:03,120
activities

120
00:08:03,120 --> 00:08:06,060
this is report number four that we give

121
00:08:06,060 --> 00:08:09,360
out and uh obviously it's the product

122
00:08:09,360 --> 00:08:12,180
the work is the product of the mpls m a

123
00:08:12,180 --> 00:08:15,500
open design team

124
00:08:16,020 --> 00:08:18,479
um I don't have controls so you need to

125
00:08:18,479 --> 00:08:20,120
help me a little bit with the pink

126
00:08:20,120 --> 00:08:22,860
slides uh right you tell me when you

127
00:08:22,860 --> 00:08:24,300
want me to move you want to move to the

128
00:08:24,300 --> 00:08:26,819
next one yes please

129
00:08:26,819 --> 00:08:29,819
so a bit about the uh the design team

130
00:08:29,819 --> 00:08:32,640
itself uh it's a joint activity between

131
00:08:32,640 --> 00:08:34,260
three working groups

132
00:08:34,260 --> 00:08:38,039
um mpls spells and death net

133
00:08:38,039 --> 00:08:38,760
um

134
00:08:38,760 --> 00:08:42,419
we meet on Thursdays 11 A.M eastern time

135
00:08:42,419 --> 00:08:46,260
as of now uh the open design team chairs

136
00:08:46,260 --> 00:08:49,860
also meet weeklies on Tuesdays

137
00:08:49,860 --> 00:08:52,260
um we have good participation around 15

138
00:08:52,260 --> 00:08:56,420
to 20 people on a good day

139
00:08:56,420 --> 00:08:59,760
a compilation of all the m a documents

140
00:08:59,760 --> 00:09:03,540
are given on that link there's quite a

141
00:09:03,540 --> 00:09:06,720
few of documents that were produced

142
00:09:06,720 --> 00:09:08,760
next slide please

143
00:09:08,760 --> 00:09:10,860
do you want to mention that we will be

144
00:09:10,860 --> 00:09:12,839
looking for volunteers to do the wiki

145
00:09:12,839 --> 00:09:14,640
migration

146
00:09:14,640 --> 00:09:18,660
I do yeah we can give a reminder on that

147
00:09:18,660 --> 00:09:21,680
towards the end Maybe

148
00:09:23,040 --> 00:09:23,959
um

149
00:09:23,959 --> 00:09:26,279
yes this is good

150
00:09:26,279 --> 00:09:29,459
um so um I'll go over the working the

151
00:09:29,459 --> 00:09:31,620
open design team working group documents

152
00:09:31,620 --> 00:09:35,940
and give an update on each very quickly

153
00:09:35,940 --> 00:09:38,160
some of these documents they are on the

154
00:09:38,160 --> 00:09:41,640
agenda today so uh authors will give a

155
00:09:41,640 --> 00:09:44,040
detailed update on them let me start

156
00:09:44,040 --> 00:09:46,560
with the first one we have the use cases

157
00:09:46,560 --> 00:09:49,260
for mpls Network action indicators and

158
00:09:49,260 --> 00:09:51,320
ancillary data

159
00:09:51,320 --> 00:09:55,320
uh the status of this document

160
00:09:55,320 --> 00:09:58,740
it was adopted back in May and we added

161
00:09:58,740 --> 00:10:00,839
new test cases recently

162
00:10:00,839 --> 00:10:04,680
um ioam direct export and generic

163
00:10:04,680 --> 00:10:07,040
function delivery in mpls

164
00:10:07,040 --> 00:10:10,140
this uh the working group and the design

165
00:10:10,140 --> 00:10:13,620
team continues to define the this

166
00:10:13,620 --> 00:10:17,100
document and adding or updating the

167
00:10:17,100 --> 00:10:21,060
existing use cases as of now

168
00:10:21,060 --> 00:10:23,940
the second document we have is the

169
00:10:23,940 --> 00:10:25,920
requirements for mpls Network action

170
00:10:25,920 --> 00:10:29,100
indicators and ancillary data

171
00:10:29,100 --> 00:10:32,640
um the authors have reported or have

172
00:10:32,640 --> 00:10:36,060
addressed another round of comments

173
00:10:36,060 --> 00:10:37,860
um specifically came from Adrian this

174
00:10:37,860 --> 00:10:38,760
time

175
00:10:38,760 --> 00:10:42,540
and as of now the document is uh in a

176
00:10:42,540 --> 00:10:45,540
stable condition and it is a candidate

177
00:10:45,540 --> 00:10:48,300
for progressing further

178
00:10:48,300 --> 00:10:51,199
next slide please

179
00:10:55,279 --> 00:10:58,260
the third document that the design team

180
00:10:58,260 --> 00:11:01,200
has been concentrating on is the mpls

181
00:11:01,200 --> 00:11:04,800
network actions framework

182
00:11:04,800 --> 00:11:07,860
um uh the state of this document

183
00:11:07,860 --> 00:11:11,820
um again addressed discussion points

184
00:11:11,820 --> 00:11:13,920
um specifically raised in the weekly

185
00:11:13,920 --> 00:11:17,040
open design team meeting

186
00:11:17,040 --> 00:11:19,320
um and we will go over those and more

187
00:11:19,320 --> 00:11:22,140
details and and subsequent slides there

188
00:11:22,140 --> 00:11:24,600
are currently no outstanding issues uh

189
00:11:24,600 --> 00:11:26,660
reported by the authors

190
00:11:26,660 --> 00:11:31,440
and this document can be candidate of uh

191
00:11:31,440 --> 00:11:33,420
working group last call can progress

192
00:11:33,420 --> 00:11:35,839
further

193
00:11:35,880 --> 00:11:38,839
next slide please

194
00:11:40,500 --> 00:11:43,019
so the update number one that we

195
00:11:43,019 --> 00:11:46,320
recently gave since last time uh we

196
00:11:46,320 --> 00:11:49,560
wanna we want to report since last time

197
00:11:49,560 --> 00:11:51,779
um the open it's about competing m a

198
00:11:51,779 --> 00:11:54,600
solution proposals there were multiple

199
00:11:54,600 --> 00:11:56,820
of those that the design team has

200
00:11:56,820 --> 00:12:00,180
reviewed uh for specifically for packet

201
00:12:00,180 --> 00:12:03,300
encodings for the m a solution

202
00:12:03,300 --> 00:12:06,000
um again I'm giving the link where all

203
00:12:06,000 --> 00:12:10,440
the proposals are compiled in

204
00:12:10,440 --> 00:12:12,660
um the open design team chairs encourage

205
00:12:12,660 --> 00:12:15,180
the authors to meet and discuss and

206
00:12:15,180 --> 00:12:18,180
bring forward a converged solution

207
00:12:18,180 --> 00:12:21,180
that was one option the other option is

208
00:12:21,180 --> 00:12:22,820
to

209
00:12:22,820 --> 00:12:27,720
bring bring about a new unified solution

210
00:12:27,720 --> 00:12:30,320
um maybe this unified solution can be

211
00:12:30,320 --> 00:12:33,360
cherry picking stuff from the different

212
00:12:33,360 --> 00:12:38,880
proposals now the the authors of the m a

213
00:12:38,880 --> 00:12:40,860
Solutions competing ones

214
00:12:40,860 --> 00:12:43,320
um reported back to the open design team

215
00:12:43,320 --> 00:12:46,260
chairs that progress has been made on a

216
00:12:46,260 --> 00:12:48,779
converged set of Mna solution documents

217
00:12:48,779 --> 00:12:51,899
that's the status that we have

218
00:12:51,899 --> 00:12:54,600
so we were we're going ahead with this

219
00:12:54,600 --> 00:12:56,820
assumption that we have

220
00:12:56,820 --> 00:12:57,959
um you know the authors are

221
00:12:57,959 --> 00:13:01,139
collaborating and bringing about

222
00:13:01,139 --> 00:13:04,079
um a converged set of mne solutions

223
00:13:04,079 --> 00:13:08,100
sorry how many solution documents

224
00:13:08,100 --> 00:13:11,000
next slide please

225
00:13:12,180 --> 00:13:15,000
the second update is about the order of

226
00:13:15,000 --> 00:13:18,480
m a network actions this was discussed

227
00:13:18,480 --> 00:13:21,779
in the weekly design team meeting and

228
00:13:21,779 --> 00:13:24,300
the team has agreed that a solution

229
00:13:24,300 --> 00:13:26,880
should give a deterministic explicit

230
00:13:26,880 --> 00:13:29,820
order of network actions

231
00:13:29,820 --> 00:13:32,540
um this need of order of evaluation

232
00:13:32,540 --> 00:13:36,240
needs to be articulated somewhere and

233
00:13:36,240 --> 00:13:38,459
the conclusion was to add it into the

234
00:13:38,459 --> 00:13:40,860
framework document and specifically in

235
00:13:40,860 --> 00:13:45,079
revision one uh reflected this agreement

236
00:13:45,079 --> 00:13:48,959
uh section four one uh details that I

237
00:13:48,959 --> 00:13:52,019
will not go uh word by word but I'll

238
00:13:52,019 --> 00:13:55,860
leave it for people to go offline at the

239
00:13:55,860 --> 00:13:56,820
leisure

240
00:13:56,820 --> 00:14:00,139
next slide please

241
00:14:00,720 --> 00:14:04,440
uh the third update was about the mpls

242
00:14:04,440 --> 00:14:06,600
network action scope

243
00:14:06,600 --> 00:14:09,180
again this topic was triggered in the

244
00:14:09,180 --> 00:14:11,880
design team weekly meeting

245
00:14:11,880 --> 00:14:12,720
um

246
00:14:12,720 --> 00:14:14,880
additional text to the m a frame

247
00:14:14,880 --> 00:14:17,160
framework document was proposed to

248
00:14:17,160 --> 00:14:18,839
generalize the scope

249
00:14:18,839 --> 00:14:22,380
we ran a poll on this text to solicit

250
00:14:22,380 --> 00:14:23,940
the support for it

251
00:14:23,940 --> 00:14:26,639
and we concluded the Paul with a good

252
00:14:26,639 --> 00:14:27,800
support

253
00:14:27,800 --> 00:14:30,720
the text reflect was reflected in

254
00:14:30,720 --> 00:14:32,160
revision and revision two of the

255
00:14:32,160 --> 00:14:33,480
framework document

256
00:14:33,480 --> 00:14:36,839
and again I'm leaving it for reference

257
00:14:36,839 --> 00:14:40,019
but it generalizes the scope of a

258
00:14:40,019 --> 00:14:42,540
network action

259
00:14:42,540 --> 00:14:45,680
next slide please

260
00:14:45,720 --> 00:14:50,279
the next update uh was a poll on the

261
00:14:50,279 --> 00:14:52,260
different implementations of an mpls

262
00:14:52,260 --> 00:14:55,439
forward characteristics

263
00:14:55,800 --> 00:14:57,779
um there were there was a short

264
00:14:57,779 --> 00:15:00,180
questionnaire and a short number of

265
00:15:00,180 --> 00:15:01,920
questions that

266
00:15:01,920 --> 00:15:03,839
um got asked

267
00:15:03,839 --> 00:15:06,480
on how existing forwarders and plus

268
00:15:06,480 --> 00:15:09,740
forwarders handle special purpose labels

269
00:15:09,740 --> 00:15:13,380
uh this questionnaire was triggered by

270
00:15:13,380 --> 00:15:15,180
the open design team chairs in

271
00:15:15,180 --> 00:15:16,860
collaboration with open design team

272
00:15:16,860 --> 00:15:18,000
members

273
00:15:18,000 --> 00:15:21,540
uh the the intention was to reveal any

274
00:15:21,540 --> 00:15:24,720
dependency that an m a solution can have

275
00:15:24,720 --> 00:15:27,300
on existing implementations

276
00:15:27,300 --> 00:15:30,660
uh the call or the call was run for four

277
00:15:30,660 --> 00:15:32,880
weeks and the responses were anonymously

278
00:15:32,880 --> 00:15:36,060
collected and reported in a draft that

279
00:15:36,060 --> 00:15:38,760
Adrian had compiled and I'm leaving that

280
00:15:38,760 --> 00:15:42,680
link for reference

281
00:15:42,839 --> 00:15:45,740
next slide please

282
00:15:45,959 --> 00:15:49,740
so about the next steps that we have on

283
00:15:49,740 --> 00:15:53,820
the table for the design team uh

284
00:15:53,820 --> 00:15:58,459
um Stewart had mentioned there was a uh

285
00:15:58,459 --> 00:16:02,399
there was a an intention of um

286
00:16:02,399 --> 00:16:05,760
continuing forward as normal but then

287
00:16:05,760 --> 00:16:08,339
uh it's a question up for the design

288
00:16:08,339 --> 00:16:10,860
team as well as the working group on how

289
00:16:10,860 --> 00:16:13,440
frequent and is it a recurring uh

290
00:16:13,440 --> 00:16:15,480
meeting that we need uh for the design

291
00:16:15,480 --> 00:16:17,880
team moving on

292
00:16:17,880 --> 00:16:19,380
um so that's something we have to close

293
00:16:19,380 --> 00:16:20,639
on

294
00:16:20,639 --> 00:16:24,360
um the next thing is also touched upon

295
00:16:24,360 --> 00:16:27,060
by uh by Stewart earlier is the

296
00:16:27,060 --> 00:16:31,139
discussion of non-ip payloads uh in an m

297
00:16:31,139 --> 00:16:32,459
a packet

298
00:16:32,459 --> 00:16:34,800
so that's another thing that we have to

299
00:16:34,800 --> 00:16:37,440
discuss in the design team

300
00:16:37,440 --> 00:16:40,199
um and progress the solution documents

301
00:16:40,199 --> 00:16:43,500
that we have converged on so that that

302
00:16:43,500 --> 00:16:46,500
would be the last uh bullet that I'm not

303
00:16:46,500 --> 00:16:47,519
showing

304
00:16:47,519 --> 00:16:51,300
this is it uh this was the report from

305
00:16:51,300 --> 00:16:53,820
the design team I'm happy to answer any

306
00:16:53,820 --> 00:16:58,040
questions that I can have an answer for

307
00:16:58,740 --> 00:17:02,240
any questions comments

308
00:17:04,040 --> 00:17:08,099
going going gone

309
00:17:08,459 --> 00:17:11,480
okay thank you

310
00:17:22,439 --> 00:17:24,299
foreign

311
00:17:24,299 --> 00:17:27,299
so Matthew will talk about requirements

312
00:17:27,299 --> 00:17:28,620
thank you

313
00:17:28,620 --> 00:17:31,260
um so this draft is co-edited by myself

314
00:17:31,260 --> 00:17:33,780
and Stuart and John Drake

315
00:17:33,780 --> 00:17:36,500
um next slide

316
00:17:36,539 --> 00:17:38,460
so just a brief update on where we are

317
00:17:38,460 --> 00:17:40,380
with the the m a requirements document

318
00:17:40,380 --> 00:17:42,179
so this document captures the key

319
00:17:42,179 --> 00:17:43,919
requirements for these mpls Network

320
00:17:43,919 --> 00:17:45,600
actions that affect forwarding or other

321
00:17:45,600 --> 00:17:47,640
processing of mpls packets

322
00:17:47,640 --> 00:17:49,320
and it's kind of broadly structured as

323
00:17:49,320 --> 00:17:52,320
general requirements sub requirements on

324
00:17:52,320 --> 00:17:54,559
the sub stack indicators

325
00:17:54,559 --> 00:17:56,280
requirements on the network action

326
00:17:56,280 --> 00:17:57,900
indicators themselves and also

327
00:17:57,900 --> 00:18:00,360
requirements on the ancillary data

328
00:18:00,360 --> 00:18:02,580
and these have mostly been derived by

329
00:18:02,580 --> 00:18:03,660
looking at some of the solution

330
00:18:03,660 --> 00:18:06,840
proposals for these additions to the

331
00:18:06,840 --> 00:18:08,820
mpls label stack

332
00:18:08,820 --> 00:18:12,480
um also based on the use cases and some

333
00:18:12,480 --> 00:18:13,799
of the other discussions have gone on

334
00:18:13,799 --> 00:18:16,559
and feedback we've had through uh these

335
00:18:16,559 --> 00:18:19,020
regular open design team meetings

336
00:18:19,020 --> 00:18:21,299
and just to reiterate these are

337
00:18:21,299 --> 00:18:24,000
requirements on the protocol design not

338
00:18:24,000 --> 00:18:26,700
on implementations

339
00:18:26,700 --> 00:18:28,679
next slide

340
00:18:28,679 --> 00:18:32,039
so we had a last call sometime around

341
00:18:32,039 --> 00:18:33,900
the last ITF

342
00:18:33,900 --> 00:18:34,620
um

343
00:18:34,620 --> 00:18:37,320
which we we went through we addressed

344
00:18:37,320 --> 00:18:39,780
those comments uh following the working

345
00:18:39,780 --> 00:18:41,400
group adoption so there were so many

346
00:18:41,400 --> 00:18:42,720
comments that we had that we put them

347
00:18:42,720 --> 00:18:44,700
into an appendix in the draft and then

348
00:18:44,700 --> 00:18:46,679
we worked our way through the comments

349
00:18:46,679 --> 00:18:49,799
uh in subsequent revisions

350
00:18:49,799 --> 00:18:51,720
um that appendix has now been been

351
00:18:51,720 --> 00:18:53,580
removed we also had some very detailed

352
00:18:53,580 --> 00:18:55,559
comments from from Adrian Farrell which

353
00:18:55,559 --> 00:18:57,419
we very much appreciated thank you I

354
00:18:57,419 --> 00:18:58,980
don't see him in the room but uh thank

355
00:18:58,980 --> 00:19:00,000
you for those

356
00:19:00,000 --> 00:19:02,460
um so we we think we've we've I hope

357
00:19:02,460 --> 00:19:05,400
we've addressed those we also renamed

358
00:19:05,400 --> 00:19:07,620
the draft to requirements for mpls

359
00:19:07,620 --> 00:19:12,660
Network actions uh to be more concise

360
00:19:12,660 --> 00:19:15,059
um and we've been doing some work to

361
00:19:15,059 --> 00:19:17,760
align the terminology and Concepts

362
00:19:17,760 --> 00:19:20,460
um as they've evolved in the m a

363
00:19:20,460 --> 00:19:21,660
framework

364
00:19:21,660 --> 00:19:23,640
draft

365
00:19:23,640 --> 00:19:25,860
next slide

366
00:19:25,860 --> 00:19:29,039
so the next steps we've reviewed several

367
00:19:29,039 --> 00:19:30,660
versions of the Draft line by line in

368
00:19:30,660 --> 00:19:33,240
the mpls open DT meetings

369
00:19:33,240 --> 00:19:35,940
um we may we think we may need to refine

370
00:19:35,940 --> 00:19:39,480
or add new requirements to this draft

371
00:19:39,480 --> 00:19:40,440
um

372
00:19:40,440 --> 00:19:42,059
depending on the the outcome of the

373
00:19:42,059 --> 00:19:44,539
discussion on support for

374
00:19:44,539 --> 00:19:47,820
non-ip payloads with M A so that's

375
00:19:47,820 --> 00:19:50,039
things like pseudo wires and evpn and

376
00:19:50,039 --> 00:19:55,260
and so on and Dot netc

377
00:19:56,580 --> 00:19:59,400
um so please please review the draft and

378
00:19:59,400 --> 00:20:01,860
and post comments to the npls list so I

379
00:20:01,860 --> 00:20:03,539
know Tariq mentioned this may be a

380
00:20:03,539 --> 00:20:05,220
candidate for working group last call

381
00:20:05,220 --> 00:20:07,260
but I think as

382
00:20:07,260 --> 00:20:09,539
as editors we think maybe not until

383
00:20:09,539 --> 00:20:11,340
we've actually had some discussion on

384
00:20:11,340 --> 00:20:12,539
the uh

385
00:20:12,539 --> 00:20:14,760
on on the situation with with non-ip

386
00:20:14,760 --> 00:20:16,260
payloads and if there's any updates

387
00:20:16,260 --> 00:20:18,360
significant updates needed to this this

388
00:20:18,360 --> 00:20:20,719
document

389
00:20:20,760 --> 00:20:22,500
any uh any comments any questions

390
00:20:22,500 --> 00:20:25,020
comments I must say I personally feel a

391
00:20:25,020 --> 00:20:26,340
bit embarrassed that I didn't notice

392
00:20:26,340 --> 00:20:27,960
this coming given that I've spent 20

393
00:20:27,960 --> 00:20:31,020
years of working on non-ip payloads uh

394
00:20:31,020 --> 00:20:33,679
yeah me too

395
00:20:34,020 --> 00:20:35,480
right

396
00:20:35,480 --> 00:20:38,640
uh G

397
00:20:38,640 --> 00:20:41,400
hi chidin from Holly uh hi a message

398
00:20:41,400 --> 00:20:44,820
actually uh I also made some comments on

399
00:20:44,820 --> 00:20:46,919
the previous version uh I think uh

400
00:20:46,919 --> 00:20:48,179
national weather

401
00:20:48,179 --> 00:20:50,580
I need to check the update but I'm not

402
00:20:50,580 --> 00:20:51,960
sure whether all of them have been

403
00:20:51,960 --> 00:20:55,559
resolved or not and since the issue list

404
00:20:55,559 --> 00:20:59,039
has been removed we have some other way

405
00:20:59,039 --> 00:21:02,220
to track the open issues with this

406
00:21:02,220 --> 00:21:04,520
document

407
00:21:06,500 --> 00:21:09,179
I think we did address your comments so

408
00:21:09,179 --> 00:21:11,220
yeah I'm looking forward to you

409
00:21:11,220 --> 00:21:13,320
have a look at the draft and I decide if

410
00:21:13,320 --> 00:21:14,940
you've missed anything if we missed

411
00:21:14,940 --> 00:21:16,860
anything it's it's mistake rather than

412
00:21:16,860 --> 00:21:19,919
anything yeah yeah so just please

413
00:21:19,919 --> 00:21:22,620
correct our human fallibilities okay and

414
00:21:22,620 --> 00:21:25,200
we'll also check the update thanks

415
00:21:25,200 --> 00:21:29,179
uh lower your next

416
00:21:29,760 --> 00:21:32,580
for for you it's actually possible to

417
00:21:32,580 --> 00:21:35,280
look at all versions on the data track

418
00:21:35,280 --> 00:21:39,240
you see you can find the the appendix in

419
00:21:39,240 --> 00:21:42,020
their previous version

420
00:21:42,419 --> 00:21:46,080
well sure but um the the I think the

421
00:21:46,080 --> 00:21:48,679
question is whether we missed mistakenly

422
00:21:48,679 --> 00:21:52,140
missed some of his comments and then

423
00:21:52,140 --> 00:21:55,880
then you can do a simple diff

424
00:21:56,159 --> 00:21:58,400
right

425
00:21:58,740 --> 00:22:02,100
so finding the appendix earlier version

426
00:22:02,100 --> 00:22:05,100
do it do a diff and you see if the

427
00:22:05,100 --> 00:22:07,260
comments are addressed

428
00:22:07,260 --> 00:22:09,480
that's easy

429
00:22:09,480 --> 00:22:11,720
foreign

430
00:22:13,640 --> 00:22:16,980
but it will be nice if the if she uh

431
00:22:16,980 --> 00:22:19,799
could um also take a look in case there

432
00:22:19,799 --> 00:22:21,900
is some sort of you know blindness going

433
00:22:21,900 --> 00:22:24,720
on in our part yeah

434
00:22:24,720 --> 00:22:26,400
okay okay is that it

435
00:22:26,400 --> 00:22:29,299
thank you very much

436
00:22:34,100 --> 00:22:38,539
uh so it's number three isn't it

437
00:22:42,780 --> 00:22:44,520
did I do

438
00:22:44,520 --> 00:22:47,658
pick the wrong one

439
00:22:51,120 --> 00:22:56,059
okay so this one header encodings

440
00:22:57,720 --> 00:23:00,659
so I guess this is Jags is it

441
00:23:00,659 --> 00:23:03,000
hey everybody

442
00:23:03,000 --> 00:23:06,020
yeah quite quiet

443
00:23:07,380 --> 00:23:09,600
yeah everybody heard me

444
00:23:09,600 --> 00:23:11,100
yeah go ahead

445
00:23:11,100 --> 00:23:12,000
okay

446
00:23:12,000 --> 00:23:15,380
uh hello everyone my name is

447
00:23:15,380 --> 00:23:18,780
Cisco uh today I'm going to present the

448
00:23:18,780 --> 00:23:21,419
solution described in our latest uh Jags

449
00:23:21,419 --> 00:23:23,580
draft on behalf of our authors and

450
00:23:23,580 --> 00:23:24,720
co-authors

451
00:23:24,720 --> 00:23:28,100
uh next slide please

452
00:23:28,200 --> 00:23:30,539
so we had a substantial contribution

453
00:23:30,539 --> 00:23:32,520
from a lot of people so I would like to

454
00:23:32,520 --> 00:23:35,480
flash their names

455
00:23:35,640 --> 00:23:38,460
next slide please

456
00:23:38,460 --> 00:23:40,799
um these are the abbreviations uh for

457
00:23:40,799 --> 00:23:42,480
your reference that are frequently used

458
00:23:42,480 --> 00:23:45,120
on our presentation and talk

459
00:23:45,120 --> 00:23:46,020
um

460
00:23:46,020 --> 00:23:48,120
those are being displayed here yeah next

461
00:23:48,120 --> 00:23:50,600
slide please

462
00:23:51,480 --> 00:23:54,539
uh today we are going to discuss on the

463
00:23:54,539 --> 00:23:56,820
scope uh the high level view of our

464
00:23:56,820 --> 00:24:00,780
solution uh some of the reserved Network

465
00:24:00,780 --> 00:24:02,940
action opports used to build our

466
00:24:02,940 --> 00:24:06,059
solution and discuss on um

467
00:24:06,059 --> 00:24:09,000
Network action ordering backward

468
00:24:09,000 --> 00:24:11,820
compatibility and the advantages

469
00:24:11,820 --> 00:24:15,020
next slide please

470
00:24:15,299 --> 00:24:18,600
uh the scope of this document is to

471
00:24:18,600 --> 00:24:21,000
provide a solution for m a encoding

472
00:24:21,000 --> 00:24:24,360
format carried in the mpls level stack

473
00:24:24,360 --> 00:24:28,080
by complying with our m a requirement

474
00:24:28,080 --> 00:24:30,720
and framework document

475
00:24:30,720 --> 00:24:33,919
next slide please

476
00:24:35,820 --> 00:24:38,280
um in a high level this solution

477
00:24:38,280 --> 00:24:41,280
provides a main building blocks for the

478
00:24:41,280 --> 00:24:44,340
instack Mna solution and the combination

479
00:24:44,340 --> 00:24:46,679
of this building blocks could be used to

480
00:24:46,679 --> 00:24:51,179
con construct what the application needs

481
00:24:51,179 --> 00:24:53,840
um as part of this uh the

482
00:24:53,840 --> 00:24:57,179
instacoding contains two main parts uh

483
00:24:57,179 --> 00:25:00,419
they are network action sub stack header

484
00:25:00,419 --> 00:25:03,659
and the network action encoding in which

485
00:25:03,659 --> 00:25:06,120
network actions are encoded in the tlb

486
00:25:06,120 --> 00:25:08,100
format

487
00:25:08,100 --> 00:25:11,120
um next slightly

488
00:25:12,720 --> 00:25:15,919
okay so uh the network action sub stack

489
00:25:15,919 --> 00:25:19,919
mainly consists of the m a label

490
00:25:19,919 --> 00:25:22,980
and network action subtract parameters

491
00:25:22,980 --> 00:25:25,860
which are common

492
00:25:25,860 --> 00:25:29,100
and applicable for all the network

493
00:25:29,100 --> 00:25:31,200
actions encoded under the specific

494
00:25:31,200 --> 00:25:34,440
Network action substance a single action

495
00:25:34,440 --> 00:25:37,200
Network action sub stack could encode

496
00:25:37,200 --> 00:25:40,559
multiple Network actions in it

497
00:25:40,559 --> 00:25:43,919
uh let us take a deep look

498
00:25:43,919 --> 00:25:45,659
um at the network actions of Stack

499
00:25:45,659 --> 00:25:48,659
content so this header contains two main

500
00:25:48,659 --> 00:25:50,220
parts

501
00:25:50,220 --> 00:25:51,059
um

502
00:25:51,059 --> 00:25:53,779
the first one is the m a label

503
00:25:53,779 --> 00:25:57,480
and the next one is the network actions

504
00:25:57,480 --> 00:25:59,940
of Stack parameters the m a label is a

505
00:25:59,940 --> 00:26:02,039
new pspl value that indicates the

506
00:26:02,039 --> 00:26:03,480
presence of

507
00:26:03,480 --> 00:26:06,120
mpls Network action software electric

508
00:26:06,120 --> 00:26:09,600
actions of Stack parameters or the

509
00:26:09,600 --> 00:26:11,640
common parameters those were applicable

510
00:26:11,640 --> 00:26:13,980
for the network actions encoded in the

511
00:26:13,980 --> 00:26:17,039
substance let's take a quick look at the

512
00:26:17,039 --> 00:26:18,659
parameters

513
00:26:18,659 --> 00:26:21,720
um the p-bit this indicates the presence

514
00:26:21,720 --> 00:26:25,200
of post stack Network action

515
00:26:25,200 --> 00:26:29,400
and IHS this is a two-bit value that

516
00:26:29,400 --> 00:26:31,799
indicates the scope of the network

517
00:26:31,799 --> 00:26:34,559
action substance the scope could be

518
00:26:34,559 --> 00:26:38,640
Ingress to egress Hopper hall or select

519
00:26:38,640 --> 00:26:41,820
and the nasl is nothing but a network

520
00:26:41,820 --> 00:26:43,919
action sub stack length so this is

521
00:26:43,919 --> 00:26:46,980
actually a four bit value indicates the

522
00:26:46,980 --> 00:26:49,260
length of the network action sub stack

523
00:26:49,260 --> 00:26:53,640
in or the order of number of LLCs

524
00:26:53,640 --> 00:26:55,980
and we have some Reserve bits to be used

525
00:26:55,980 --> 00:26:57,059
in future

526
00:26:57,059 --> 00:27:00,179
and the uh the last bit is the orbit so

527
00:27:00,179 --> 00:27:02,640
it's a ordering bit so in some cases

528
00:27:02,640 --> 00:27:05,400
Network actions may require to be

529
00:27:05,400 --> 00:27:07,740
processed in order so this bit indicates

530
00:27:07,740 --> 00:27:10,080
that the node must process the network

531
00:27:10,080 --> 00:27:13,260
action in order it is encoded

532
00:27:13,260 --> 00:27:17,120
uh next slide please

533
00:27:18,419 --> 00:27:21,059
so Network action encoding are encoded

534
00:27:21,059 --> 00:27:23,340
in the tlv format as I described before

535
00:27:23,340 --> 00:27:26,460
DNA up code is the type of genetic

536
00:27:26,460 --> 00:27:29,279
action they optionally a network action

537
00:27:29,279 --> 00:27:32,039
could carry an anxiety data so this

538
00:27:32,039 --> 00:27:34,260
anxiety data acts as a value

539
00:27:34,260 --> 00:27:37,020
and the network action length acts as a

540
00:27:37,020 --> 00:27:38,360
total length of the network action

541
00:27:38,360 --> 00:27:42,299
encoded that includes the ancillary data

542
00:27:42,299 --> 00:27:45,600
some of the opcodes are reserved to

543
00:27:45,600 --> 00:27:49,340
create the basic building blocks of the

544
00:27:49,340 --> 00:27:53,840
instack Mna solution and the rest of

545
00:27:53,840 --> 00:27:55,980
these are available for the application

546
00:27:55,980 --> 00:27:58,279
use

547
00:27:58,679 --> 00:28:02,279
that is an Instax op code Ina registry

548
00:28:02,279 --> 00:28:04,320
by which the application could allocate

549
00:28:04,320 --> 00:28:07,020
and a quote for themselves so in case an

550
00:28:07,020 --> 00:28:08,760
application needs to carry an angular

551
00:28:08,760 --> 00:28:12,720
data then they need to define the data

552
00:28:12,720 --> 00:28:15,240
format and length that will carry that

553
00:28:15,240 --> 00:28:18,299
will be carried in the anxiety data

554
00:28:18,299 --> 00:28:23,039
and we have uh uoh it's a unknown opcode

555
00:28:23,039 --> 00:28:25,500
handling so all the opcodes cannot be

556
00:28:25,500 --> 00:28:28,860
implemented on all the nodes so and a

557
00:28:28,860 --> 00:28:32,159
node when it finds an in a up code and

558
00:28:32,159 --> 00:28:34,500
that it cannot understand then this

559
00:28:34,500 --> 00:28:37,260
field will indicate how to handle those

560
00:28:37,260 --> 00:28:40,440
packets for example it could skip the

561
00:28:40,440 --> 00:28:42,840
unknown Accord and move to the next

562
00:28:42,840 --> 00:28:46,080
Network action or drop the packet and

563
00:28:46,080 --> 00:28:48,199
Etc

564
00:28:51,240 --> 00:28:54,320
yeah next thing please

565
00:28:55,320 --> 00:28:57,720
so here actually I want to describe a

566
00:28:57,720 --> 00:29:00,240
little bit more about this coping

567
00:29:00,240 --> 00:29:03,240
um as we described before each sub stack

568
00:29:03,240 --> 00:29:07,140
could belong to one of the scope uh

569
00:29:07,140 --> 00:29:10,919
that's i2e hph are select a separate

570
00:29:10,919 --> 00:29:13,620
Network action sub stack for each scope

571
00:29:13,620 --> 00:29:16,200
makes it easier for the intermediate

572
00:29:16,200 --> 00:29:19,440
nodes to process the hubby Hub or select

573
00:29:19,440 --> 00:29:20,399
option

574
00:29:20,399 --> 00:29:23,340
so a packet could carry all the three uh

575
00:29:23,340 --> 00:29:26,779
Scopes simultaneously

576
00:29:27,240 --> 00:29:29,340
the p-bit

577
00:29:29,340 --> 00:29:31,860
in each subtract

578
00:29:31,860 --> 00:29:34,200
will be set with respect to the scope of

579
00:29:34,200 --> 00:29:36,779
the post tag data that is encoded that

580
00:29:36,779 --> 00:29:39,360
is if a network action sub stack has a

581
00:29:39,360 --> 00:29:42,840
scope of uh hubby Hub and the pivot is

582
00:29:42,840 --> 00:29:45,480
set in in the network action sub stack

583
00:29:45,480 --> 00:29:47,640
parameter then it means that the packet

584
00:29:47,640 --> 00:29:50,340
is carrying a post type Network actions

585
00:29:50,340 --> 00:29:53,658
with the hardware options

586
00:29:54,419 --> 00:29:56,460
everything

587
00:29:56,460 --> 00:30:00,720
so um yeah

588
00:30:04,200 --> 00:30:06,840
okay so uh here are the uh here are some

589
00:30:06,840 --> 00:30:10,140
of the uh reserved Network actions uh

590
00:30:10,140 --> 00:30:12,659
actions uh of course which I'm going to

591
00:30:12,659 --> 00:30:13,740
describe

592
00:30:13,740 --> 00:30:15,960
um this is used for our building blocks

593
00:30:15,960 --> 00:30:18,419
for our solution

594
00:30:18,419 --> 00:30:19,260
um

595
00:30:19,260 --> 00:30:22,140
in the Nia uh

596
00:30:22,140 --> 00:30:23,940
um

597
00:30:23,940 --> 00:30:27,240
uh one a value one uh we have reserved

598
00:30:27,240 --> 00:30:30,659
it for uh carrying the post stack uh

599
00:30:30,659 --> 00:30:32,640
data offset

600
00:30:32,640 --> 00:30:36,059
so uh this will indicate the starting

601
00:30:36,059 --> 00:30:40,980
offset of the post tag action header

602
00:30:40,980 --> 00:30:44,640
um start from the bottom of Stack so in

603
00:30:44,640 --> 00:30:49,440
some cases if there are cash or L2 uh to

604
00:30:49,440 --> 00:30:53,039
uh informations or no the non-ip

605
00:30:53,039 --> 00:30:55,559
informations are encoded uh between the

606
00:30:55,559 --> 00:31:00,059
mpls mpls stack and the data so even

607
00:31:00,059 --> 00:31:01,799
those kind of scenarios could be

608
00:31:01,799 --> 00:31:05,220
accommodated by using this offset so

609
00:31:05,220 --> 00:31:07,320
that uh post stack notifications could

610
00:31:07,320 --> 00:31:10,440
be encoded not necessarily after the

611
00:31:10,440 --> 00:31:13,200
bottom of Stack it could be like uh even

612
00:31:13,200 --> 00:31:15,299
after some offset so this offset

613
00:31:15,299 --> 00:31:17,760
indicates where where the start of the

614
00:31:17,760 --> 00:31:20,279
post stack Network action is going to be

615
00:31:20,279 --> 00:31:22,200
encoded

616
00:31:22,200 --> 00:31:25,460
and the next one is the opcode value 2

617
00:31:25,460 --> 00:31:29,159
is reserved to carry a flag based op

618
00:31:29,159 --> 00:31:31,980
code that does not require any angular

619
00:31:31,980 --> 00:31:35,520
data to process the network uh actions

620
00:31:35,520 --> 00:31:37,860
so we have a separate

621
00:31:37,860 --> 00:31:42,419
um INR registry for uh applications to

622
00:31:42,419 --> 00:31:46,559
allocate their offset values

623
00:31:46,559 --> 00:31:49,520
next slide please

624
00:31:51,539 --> 00:31:55,200
yeah so the opportunity

625
00:31:55,200 --> 00:31:57,720
sorry you have any questions uh did I

626
00:31:57,720 --> 00:31:58,919
move around I didn't move it across

627
00:31:58,919 --> 00:32:00,179
didn't I

628
00:32:00,179 --> 00:32:02,279
run

629
00:32:02,279 --> 00:32:06,419
yeah so sorry I'm interrupting uh I just

630
00:32:06,419 --> 00:32:08,700
want to raise the attention that there

631
00:32:08,700 --> 00:32:10,080
are questions in the queue would you

632
00:32:10,080 --> 00:32:11,760
like to take them now or towards the end

633
00:32:11,760 --> 00:32:14,820
it's a choice yeah can we do a towards

634
00:32:14,820 --> 00:32:16,080
the end after

635
00:32:16,080 --> 00:32:19,679
sure thank you okay thanks

636
00:32:19,679 --> 00:32:23,159
um so uh here uh the up Court three uh

637
00:32:23,159 --> 00:32:25,860
is reserved to carry a combination of

638
00:32:25,860 --> 00:32:27,979
um

639
00:32:31,200 --> 00:32:31,860
um

640
00:32:31,860 --> 00:32:34,020
so it contains you know like two Fields

641
00:32:34,020 --> 00:32:37,440
like an a bit maps and uh anxiety data

642
00:32:37,440 --> 00:32:39,299
corresponding to those

643
00:32:39,299 --> 00:32:42,179
uh upcode value 4 is reserved to help

644
00:32:42,179 --> 00:32:45,539
maintain the uh ordering between the

645
00:32:45,539 --> 00:32:49,140
instack and post stack Network actions

646
00:32:49,140 --> 00:32:52,559
um in this example uh we want to we want

647
00:32:52,559 --> 00:32:56,039
the node to process the uh post stack uh

648
00:32:56,039 --> 00:32:59,399
Nai 6 before processing the instack of

649
00:32:59,399 --> 00:33:02,340
code eight so when the ordering is

650
00:33:02,340 --> 00:33:05,220
mandated then then the orbit in the

651
00:33:05,220 --> 00:33:08,539
network subtract parameters must be set

652
00:33:08,539 --> 00:33:11,520
that indicates that we need to keep the

653
00:33:11,520 --> 00:33:14,640
ordering and this up code new up Code 4

654
00:33:14,640 --> 00:33:17,480
is going to say that and it execute this

655
00:33:17,480 --> 00:33:22,080
postdoc Nai 6 before executing my

656
00:33:22,080 --> 00:33:23,419
instack

657
00:33:23,419 --> 00:33:28,460
up code 8 next slide please

658
00:33:28,799 --> 00:33:30,918
thank you

659
00:33:30,960 --> 00:33:33,840
so here um

660
00:33:33,840 --> 00:33:37,080
we reserve uh the label sorry the up

661
00:33:37,080 --> 00:33:41,760
code value 126 to fill in unused 20 bits

662
00:33:41,760 --> 00:33:44,580
uh in in some of the cases like uh we

663
00:33:44,580 --> 00:33:47,519
won't carry the instack data uh we only

664
00:33:47,519 --> 00:33:50,700
carry the postdoc data so in those cases

665
00:33:50,700 --> 00:33:53,220
you know like uh this acts as a filler

666
00:33:53,220 --> 00:33:56,120
for the 20 bits of

667
00:33:56,120 --> 00:33:58,559
a label field

668
00:33:58,559 --> 00:34:00,779
um and the bit the P bit will be set to

669
00:34:00,779 --> 00:34:03,240
1 that indicates the presence of postdoc

670
00:34:03,240 --> 00:34:05,640
data and the Nas is zero so this

671
00:34:05,640 --> 00:34:07,799
indicates that you know NSL 0 and the

672
00:34:07,799 --> 00:34:10,440
126 op code is going to say that there

673
00:34:10,440 --> 00:34:12,780
is no in stack and the pivot is going to

674
00:34:12,780 --> 00:34:14,339
say that there is some post attack data

675
00:34:14,339 --> 00:34:16,379
available so that is that is the use of

676
00:34:16,379 --> 00:34:19,139
this 126

677
00:34:19,139 --> 00:34:22,080
um so uh currently we have uh seven bits

678
00:34:22,080 --> 00:34:24,418
it is a maximum of code we can we can

679
00:34:24,418 --> 00:34:27,139
have is uh 147 so for the future

680
00:34:27,139 --> 00:34:31,679
expansion uh we reserve this 127 so that

681
00:34:31,679 --> 00:34:34,080
um um so in the future actually like if

682
00:34:34,080 --> 00:34:36,599
you want to allocate more than 120 127

683
00:34:36,599 --> 00:34:39,480
uh up code then actually uh this 127

684
00:34:39,480 --> 00:34:41,280
could be used for allocating the

685
00:34:41,280 --> 00:34:44,159
extension um of course

686
00:34:44,159 --> 00:34:48,239
uh next slide please

687
00:34:48,239 --> 00:34:50,760
let's talk some something more about the

688
00:34:50,760 --> 00:34:54,480
network ordering in some cases uh the

689
00:34:54,480 --> 00:34:57,660
network that encapsulates the Mna

690
00:34:57,660 --> 00:35:01,080
expects the other node to process the uh

691
00:35:01,080 --> 00:35:03,180
Network actions in certain order

692
00:35:03,180 --> 00:35:05,640
so the below example provides the

693
00:35:05,640 --> 00:35:09,000
framework for maintaining the order of

694
00:35:09,000 --> 00:35:12,300
processing the network actions now over

695
00:35:12,300 --> 00:35:14,820
this is one of the main building block

696
00:35:14,820 --> 00:35:18,060
of the ordering construct uh this orbit

697
00:35:18,060 --> 00:35:20,700
must be set to indicate the mid nodes

698
00:35:20,700 --> 00:35:23,700
must maintain the order of processing

699
00:35:23,700 --> 00:35:25,560
the network action

700
00:35:25,560 --> 00:35:27,780
in general processing the network action

701
00:35:27,780 --> 00:35:30,420
in order is a complex process especially

702
00:35:30,420 --> 00:35:33,420
ordering between uh in stack and post

703
00:35:33,420 --> 00:35:36,599
stagnetic actions so we can't expect all

704
00:35:36,599 --> 00:35:39,000
the mid all the intermediate nodes can

705
00:35:39,000 --> 00:35:41,160
support this kind of a complex ordering

706
00:35:41,160 --> 00:35:43,920
process So based on the nodes capability

707
00:35:43,920 --> 00:35:47,460
the node could drop the packet if it is

708
00:35:47,460 --> 00:35:50,520
not supporting the ordering that could

709
00:35:50,520 --> 00:35:53,220
be a multiple types of ordering that is

710
00:35:53,220 --> 00:35:56,760
uh ordering could be between only uh

711
00:35:56,760 --> 00:36:00,079
only in stack Network actions or between

712
00:36:00,079 --> 00:36:03,240
uh only post track Network actions are

713
00:36:03,240 --> 00:36:04,980
between instac and post stack Network

714
00:36:04,980 --> 00:36:08,280
actions the complexity arises when we

715
00:36:08,280 --> 00:36:10,920
have a retract actions ordering between

716
00:36:10,920 --> 00:36:14,900
in stack and post that conflict actions

717
00:36:15,060 --> 00:36:17,240
foreign

718
00:36:22,619 --> 00:36:25,560
I just want to describe just examples

719
00:36:25,560 --> 00:36:28,560
in the in the first example uh we wanted

720
00:36:28,560 --> 00:36:31,260
we wanted the Instax op code 5 to be

721
00:36:31,260 --> 00:36:33,480
processed before the instack occurred

722
00:36:33,480 --> 00:36:34,619
two

723
00:36:34,619 --> 00:36:36,420
um in the second example we wanted to

724
00:36:36,420 --> 00:36:41,099
process the uh flag based ni op code one

725
00:36:41,099 --> 00:36:44,700
to be processed before an instack of

726
00:36:44,700 --> 00:36:48,720
code 5 and the flag based niop code 0x22

727
00:36:48,720 --> 00:36:51,480
to be processed after the uh in stack of

728
00:36:51,480 --> 00:36:54,599
code file so by ordering this way uh we

729
00:36:54,599 --> 00:36:56,940
can we can maintain we can ask the

730
00:36:56,940 --> 00:36:59,420
intermediate news to maintain their

731
00:36:59,420 --> 00:37:02,099
processing order

732
00:37:02,099 --> 00:37:05,099
slide

733
00:37:06,420 --> 00:37:09,599
yeah so this is an example where the uh

734
00:37:09,599 --> 00:37:13,500
post tag up code 6 needs to be uh

735
00:37:13,500 --> 00:37:16,859
processed before the uh instack upward

736
00:37:16,859 --> 00:37:19,560
five here the reserved in stack of Code

737
00:37:19,560 --> 00:37:22,020
4 indicates that the post stack of code

738
00:37:22,020 --> 00:37:25,200
6 needs to be executed before the

739
00:37:25,200 --> 00:37:27,960
instack of code file

740
00:37:27,960 --> 00:37:31,220
yeah next slide please

741
00:37:33,540 --> 00:37:36,780
so as a part of the solution we maintain

742
00:37:36,780 --> 00:37:39,060
the backward compatibility with the

743
00:37:39,060 --> 00:37:41,700
interior provocation and these mpls ecmp

744
00:37:41,700 --> 00:37:47,880
and coexistence of cash and other things

745
00:37:47,880 --> 00:37:50,900
next slide please

746
00:37:52,200 --> 00:37:55,200
so the um the solution as Advantage

747
00:37:55,200 --> 00:37:56,640
right so the solution is more flexible

748
00:37:56,640 --> 00:37:58,680
to encode genetic actions in desired

749
00:37:58,680 --> 00:38:01,320
order the solution is also extensible in

750
00:38:01,320 --> 00:38:04,640
future the basic constructs or uh

751
00:38:04,640 --> 00:38:08,660
Hardware parser friendly

752
00:38:08,880 --> 00:38:10,920
yeah next slide please

753
00:38:10,920 --> 00:38:13,619
yeah so we have uh some comments and

754
00:38:13,619 --> 00:38:16,260
feedbacks among our authors and quotas

755
00:38:16,260 --> 00:38:18,180
uh so we are trying to address those

756
00:38:18,180 --> 00:38:21,060
things and we have some of the sections

757
00:38:21,060 --> 00:38:23,040
you know needs more clarity in our

758
00:38:23,040 --> 00:38:24,720
document

759
00:38:24,720 --> 00:38:27,060
um especially in the select scope and

760
00:38:27,060 --> 00:38:30,000
ordering so these are the things we are

761
00:38:30,000 --> 00:38:31,500
working on currently

762
00:38:31,500 --> 00:38:33,420
yeah that's it thank you uh we I can

763
00:38:33,420 --> 00:38:35,160
take questions now

764
00:38:35,160 --> 00:38:37,980
right we have a queue now lower are you

765
00:38:37,980 --> 00:38:39,359
still in the queue

766
00:38:39,359 --> 00:38:41,940
or there's a hangover from last time

767
00:38:41,940 --> 00:38:44,940
no I'm in the cube all right you go

768
00:38:44,940 --> 00:38:45,839
first

769
00:38:45,839 --> 00:38:50,520
okay so I have you asked one question uh

770
00:38:50,520 --> 00:38:53,760
you claim alignment with the framework

771
00:38:53,760 --> 00:38:57,660
but if I look at the abbreviation for

772
00:38:57,660 --> 00:39:00,720
Network action sub stack you

773
00:39:00,720 --> 00:39:05,780
use n-a-s-s while the framework use Nas

774
00:39:05,780 --> 00:39:08,339
I haven't checked on the others but

775
00:39:08,339 --> 00:39:09,680
there might be more

776
00:39:09,680 --> 00:39:13,740
is this something that will be updated

777
00:39:13,740 --> 00:39:16,140
yeah sure actually we can update that

778
00:39:16,140 --> 00:39:17,220
Nas

779
00:39:17,220 --> 00:39:22,160
um yeah sure I'll take a note of it

780
00:39:22,560 --> 00:39:24,900
and we you actually should go through

781
00:39:24,900 --> 00:39:28,560
the abbreviations and look what the

782
00:39:28,560 --> 00:39:30,599
framework is doing and see if there is

783
00:39:30,599 --> 00:39:33,680
more okay

784
00:39:36,599 --> 00:39:39,960
Hello Joel Halpern from Erickson

785
00:39:39,960 --> 00:39:41,820
um let me start by saying the overall

786
00:39:41,820 --> 00:39:44,339
approach here is fine with me I don't

787
00:39:44,339 --> 00:39:46,339
have a conceptual problem or a

788
00:39:46,339 --> 00:39:48,720
fundamental objection

789
00:39:48,720 --> 00:39:50,700
but

790
00:39:50,700 --> 00:39:53,099
if I have understood the draft right and

791
00:39:53,099 --> 00:39:55,800
I'm not sure I have there are a bunch of

792
00:39:55,800 --> 00:39:58,859
detailed concerns one is

793
00:39:58,859 --> 00:40:00,839
sort of General

794
00:40:00,839 --> 00:40:03,540
there are so many ways to do anything in

795
00:40:03,540 --> 00:40:06,480
this draft that when we get drafts that

796
00:40:06,480 --> 00:40:08,280
are saying here's how to solve problem A

797
00:40:08,280 --> 00:40:11,280
or B they say well you can actually

798
00:40:11,280 --> 00:40:13,800
solve it one way or another way or

799
00:40:13,800 --> 00:40:16,560
another way or another way look if we

800
00:40:16,560 --> 00:40:19,140
have to solve every problem four ways

801
00:40:19,140 --> 00:40:21,500
we're not going to get interoperability

802
00:40:21,500 --> 00:40:24,660
well we're going to have to have every

803
00:40:24,660 --> 00:40:26,280
implementation to put four different

804
00:40:26,280 --> 00:40:29,099
mechanisms to do the same thing I hope

805
00:40:29,099 --> 00:40:32,400
not that's a general comment now two

806
00:40:32,400 --> 00:40:34,200
more specific comments let's take the

807
00:40:34,200 --> 00:40:36,599
first one the simpler one first

808
00:40:36,599 --> 00:40:39,660
you have this ordered bet which you say

809
00:40:39,660 --> 00:40:42,000
it tells the the processor whether it

810
00:40:42,000 --> 00:40:44,760
must process it in order

811
00:40:44,760 --> 00:40:47,400
I don't understand what problem that

812
00:40:47,400 --> 00:40:48,420
solves

813
00:40:48,420 --> 00:40:51,060
if I have to be able to process the

814
00:40:51,060 --> 00:40:53,099
things in order because I may get

815
00:40:53,099 --> 00:40:55,260
something with the obitsat

816
00:40:55,260 --> 00:40:57,720
then I might as well code it to always

817
00:40:57,720 --> 00:41:00,180
process them in order because that will

818
00:41:00,180 --> 00:41:02,700
be simpler than writing codes that

819
00:41:02,700 --> 00:41:04,140
sometimes does them in order and

820
00:41:04,140 --> 00:41:05,940
sometimes juggles them up in the air and

821
00:41:05,940 --> 00:41:08,220
does them in some random order

822
00:41:08,220 --> 00:41:10,560
as if we don't have a bit that has two

823
00:41:10,560 --> 00:41:12,660
different kinds of processing

824
00:41:12,660 --> 00:41:15,720
everything becomes simpler so I don't

825
00:41:15,720 --> 00:41:17,940
understand what problem the obit is

826
00:41:17,940 --> 00:41:20,480
solving

827
00:41:21,180 --> 00:41:25,700
yeah uh can I answer sure

828
00:41:26,900 --> 00:41:29,339
please yeah sure

829
00:41:29,339 --> 00:41:31,320
um so yeah yeah

830
00:41:31,320 --> 00:41:34,320
um if you see a network right so we have

831
00:41:34,320 --> 00:41:36,780
a mix of Asics in the network

832
00:41:36,780 --> 00:41:39,240
so some of them are capable of ordering

833
00:41:39,240 --> 00:41:41,940
some of them does it so if the editor

834
00:41:41,940 --> 00:41:44,460
expects uh some some ordering to be

835
00:41:44,460 --> 00:41:46,980
maintained so then actually he can set

836
00:41:46,980 --> 00:41:48,839
the pit and say that this must be

837
00:41:48,839 --> 00:41:51,359
ordered so that the intermediate nodes

838
00:41:51,359 --> 00:41:53,880
which is which doesn't support ordering

839
00:41:53,880 --> 00:41:55,859
can drop the packet

840
00:41:55,859 --> 00:42:00,900
so that is the use of this orbit um

841
00:42:00,900 --> 00:42:03,300
basically like uh to support you know

842
00:42:03,300 --> 00:42:06,119
like low end uh Asics where they don't

843
00:42:06,119 --> 00:42:08,880
support the complex things

844
00:42:08,880 --> 00:42:10,079
um

845
00:42:10,079 --> 00:42:12,540
either some nodes won't support the old

846
00:42:12,540 --> 00:42:14,400
bit which would create one class of

847
00:42:14,400 --> 00:42:16,560
whoops that doesn't work

848
00:42:16,560 --> 00:42:19,920
or it seems simpler to just mandate that

849
00:42:19,920 --> 00:42:21,720
the obit isn't there and is always

850
00:42:21,720 --> 00:42:23,579
assumed to be said I mean I just don't

851
00:42:23,579 --> 00:42:25,740
see any advantage in fact the earlier

852
00:42:25,740 --> 00:42:27,540
discussion on the list a lot of us said

853
00:42:27,540 --> 00:42:30,960
just specify what order things must be

854
00:42:30,960 --> 00:42:33,240
done in and then you can implement it

855
00:42:33,240 --> 00:42:36,660
but okay that's for the working group I

856
00:42:36,660 --> 00:42:38,099
just wanted to point out it was one

857
00:42:38,099 --> 00:42:40,500
example of we have more ways to do

858
00:42:40,500 --> 00:42:43,260
things than than seem to be useful

859
00:42:43,260 --> 00:42:45,900
there's a another more basic problem

860
00:42:45,900 --> 00:42:48,720
that worries me and maybe I'm worrying

861
00:42:48,720 --> 00:42:51,119
about something that isn't an issue

862
00:42:51,119 --> 00:42:54,420
but let us assume we have an mpls label

863
00:42:54,420 --> 00:42:57,540
stack with one or more Network action

864
00:42:57,540 --> 00:42:59,099
sub stacks

865
00:42:59,099 --> 00:43:02,819
and post stack data

866
00:43:02,819 --> 00:43:05,819
now as we go through the network action

867
00:43:05,819 --> 00:43:08,040
sub Stacks get packed off somewhere

868
00:43:08,040 --> 00:43:10,800
along the way that's fine

869
00:43:10,800 --> 00:43:14,040
so if all of them get popped off

870
00:43:14,040 --> 00:43:17,359
we still have the post stack data

871
00:43:17,359 --> 00:43:19,740
and nobody knows there's still stack

872
00:43:19,740 --> 00:43:21,480
data there and when you go process the

873
00:43:21,480 --> 00:43:22,440
packet

874
00:43:22,440 --> 00:43:24,119
whoops

875
00:43:24,119 --> 00:43:25,740
what happens

876
00:43:25,740 --> 00:43:29,760
and what happens if the last guy

877
00:43:29,760 --> 00:43:32,280
doesn't understand this new extension

878
00:43:32,280 --> 00:43:35,579
can we only use post stack data if we're

879
00:43:35,579 --> 00:43:37,760
in the case when the last node

880
00:43:37,760 --> 00:43:40,380
understands this new service in which

881
00:43:40,380 --> 00:43:42,720
case we'd better not be depending on

882
00:43:42,720 --> 00:43:45,599
post stack data so there seems to be

883
00:43:45,599 --> 00:43:47,819
some interactions between the network

884
00:43:47,819 --> 00:43:49,619
action sub stacks and the post stack

885
00:43:49,619 --> 00:43:51,900
data and cleaning things up

886
00:43:51,900 --> 00:43:55,440
that at least need to be thought about

887
00:43:55,440 --> 00:43:57,000
thank you

888
00:43:57,000 --> 00:43:59,720
yeah great

889
00:44:00,839 --> 00:44:03,180
um Greg minski Erickson

890
00:44:03,180 --> 00:44:06,240
um I have a question about

891
00:44:06,240 --> 00:44:10,680
um uh pbit and option one uh their

892
00:44:10,680 --> 00:44:13,200
relationship so is

893
00:44:13,200 --> 00:44:14,640
okay

894
00:44:14,640 --> 00:44:15,240
um

895
00:44:15,240 --> 00:44:19,980
it appears that uh P did uh if you can

896
00:44:19,980 --> 00:44:24,660
bring this um slide up which one uh with

897
00:44:24,660 --> 00:44:25,740
uh

898
00:44:25,740 --> 00:44:27,300
um basic

899
00:44:27,300 --> 00:44:27,900
um

900
00:44:27,900 --> 00:44:30,980
header which has uh

901
00:44:30,980 --> 00:44:33,060
twice in the beginning uh probably

902
00:44:33,060 --> 00:44:35,160
probably in the in the very beginning

903
00:44:35,160 --> 00:44:37,260
yeah

904
00:44:37,260 --> 00:44:40,700
next next next next

905
00:44:41,300 --> 00:44:44,300
yeah

906
00:44:44,720 --> 00:44:48,660
yeah or where yeah where their uh option

907
00:44:48,660 --> 00:44:51,240
one is explained so probably next one

908
00:44:51,240 --> 00:44:52,020
too

909
00:44:52,020 --> 00:44:55,940
and that's the next one after that

910
00:44:56,099 --> 00:44:59,760
no yeah so um it appears that uh there

911
00:44:59,760 --> 00:45:02,280
are two ways yes so that uh there are

912
00:45:02,280 --> 00:45:05,160
two ways of indicating the presence of

913
00:45:05,160 --> 00:45:06,180
uh

914
00:45:06,180 --> 00:45:10,500
posted data object

915
00:45:10,500 --> 00:45:14,400
so first it's uh on a very high level uh

916
00:45:14,400 --> 00:45:17,119
in a p bit

917
00:45:17,640 --> 00:45:23,099
and then uh it tells uh then um

918
00:45:23,099 --> 00:45:28,520
there is something uh in the post stack

919
00:45:29,520 --> 00:45:30,060
um

920
00:45:30,060 --> 00:45:32,760
is that the case or

921
00:45:32,760 --> 00:45:35,460
it's my misunderstanding so so Greg

922
00:45:35,460 --> 00:45:36,900
actually I think there's a little bit of

923
00:45:36,900 --> 00:45:40,200
misunderstanding here uh the PSD is not

924
00:45:40,200 --> 00:45:42,060
to indicate that there is a presence of

925
00:45:42,060 --> 00:45:46,560
uh post attack data so in general right

926
00:45:46,560 --> 00:45:50,160
so we we think that uh the postdoc data

927
00:45:50,160 --> 00:45:53,040
will be uh uh coming just after the

928
00:45:53,040 --> 00:45:56,520
label stack so in case if that is not

929
00:45:56,520 --> 00:45:59,280
the case if there is an uh some data

930
00:45:59,280 --> 00:46:02,819
between the post stack action header and

931
00:46:02,819 --> 00:46:06,079
the render of the stack then how do we

932
00:46:06,079 --> 00:46:09,060
indicate that the postdoc data starts at

933
00:46:09,060 --> 00:46:11,160
this particular offset so that is where

934
00:46:11,160 --> 00:46:14,280
the the up code one is used

935
00:46:14,280 --> 00:46:17,099
so the pivot says that there is a there

936
00:46:17,099 --> 00:46:19,619
is a postdoc data and then offset it

937
00:46:19,619 --> 00:46:22,140
says that at which point actually I can

938
00:46:22,140 --> 00:46:24,900
have my post stack data so this is an

939
00:46:24,900 --> 00:46:27,900
optional opcode so if you say like uh in

940
00:46:27,900 --> 00:46:29,660
case like if you are

941
00:46:29,660 --> 00:46:32,640
if you are creating uh if you're

942
00:46:32,640 --> 00:46:35,040
encoding the post stack action header

943
00:46:35,040 --> 00:46:38,220
immediately after the uh mpls label

944
00:46:38,220 --> 00:46:40,319
stack then we don't need that

945
00:46:40,319 --> 00:46:44,400
this offset PSD offset at all

946
00:46:44,400 --> 00:46:49,520
but if option if op code one is

947
00:46:49,520 --> 00:46:52,500
for posted data

948
00:46:52,500 --> 00:46:55,560
then why there is need to do some other

949
00:46:55,560 --> 00:46:58,079
indication in a p bit

950
00:46:58,079 --> 00:47:00,119
notice I'm saying that that's only for

951
00:47:00,119 --> 00:47:03,480
the PSD offset we need to maintain right

952
00:47:03,480 --> 00:47:05,880
so if it's for example like

953
00:47:05,880 --> 00:47:10,980
if if if op code one to be used when

954
00:47:10,980 --> 00:47:13,800
there is a post tag data it is not

955
00:47:13,800 --> 00:47:15,960
always to be used when the postdoc data

956
00:47:15,960 --> 00:47:17,640
is there if the offset is not

957
00:47:17,640 --> 00:47:19,980
immediately after bottom of Stack that's

958
00:47:19,980 --> 00:47:24,740
where we use this uh op code one

959
00:47:24,839 --> 00:47:27,240
if you see this figure right so I have a

960
00:47:27,240 --> 00:47:29,040
I have some other data getting you know

961
00:47:29,040 --> 00:47:31,619
like a cash or some other data scaling

962
00:47:31,619 --> 00:47:34,220
in between my

963
00:47:34,220 --> 00:47:36,960
impeller stack and the post stack data

964
00:47:36,960 --> 00:47:40,619
then how do we represent uh or encode

965
00:47:40,619 --> 00:47:43,020
those information as part of our header

966
00:47:43,020 --> 00:47:47,160
so this is how we do it well uh as I

967
00:47:47,160 --> 00:47:48,319
understand

968
00:47:48,319 --> 00:47:52,260
uh gash is not to be used in data

969
00:47:52,260 --> 00:47:54,619
packets

970
00:47:54,780 --> 00:47:57,119
um okay but the real two words can be

971
00:47:57,119 --> 00:47:58,560
used right

972
00:47:58,560 --> 00:48:02,400
excuse me the L2 VPN control words can

973
00:48:02,400 --> 00:48:05,280
be used right so in those cases like uh

974
00:48:05,280 --> 00:48:09,420
how do we uh inform the nodes but

975
00:48:09,420 --> 00:48:10,859
control

976
00:48:10,859 --> 00:48:16,020
but control word is for uh pseudo wire

977
00:48:16,020 --> 00:48:20,040
yeah not IP Services yes exactly

978
00:48:20,040 --> 00:48:21,780
exactly so that's what I'm saying it

979
00:48:21,780 --> 00:48:23,220
doesn't matter right so like here

980
00:48:23,220 --> 00:48:27,359
actually we are uh this has to work with

981
00:48:27,359 --> 00:48:28,859
everything

982
00:48:28,859 --> 00:48:30,960
no but if if there is a control word

983
00:48:30,960 --> 00:48:33,839
then uh interpretation is that control

984
00:48:33,839 --> 00:48:37,619
word is followed by the payload

985
00:48:37,619 --> 00:48:40,380
uh are you changing are you proposing to

986
00:48:40,380 --> 00:48:42,240
change the interpretation of the control

987
00:48:42,240 --> 00:48:44,640
word no no what here we are saying is

988
00:48:44,640 --> 00:48:46,920
that you know like uh if there is a

989
00:48:46,920 --> 00:48:50,099
possibility that if you want to add any

990
00:48:50,099 --> 00:48:51,780
uh

991
00:48:51,780 --> 00:48:57,300
um uh any such data after the uh

992
00:48:57,300 --> 00:48:59,940
um stack then still we sub we use this

993
00:48:59,940 --> 00:49:03,180
kind of a basic up quotes to say where

994
00:49:03,180 --> 00:49:05,300
the poster data Lies

995
00:49:05,300 --> 00:49:08,160
by default if this is not specified it

996
00:49:08,160 --> 00:49:09,540
is just immediately after the post

997
00:49:09,540 --> 00:49:11,760
update sorry after the Imperial stack

998
00:49:11,760 --> 00:49:14,839
you're going to line up

999
00:49:16,500 --> 00:49:17,180
um

1000
00:49:17,180 --> 00:49:20,700
this is clearly a longer discussion yes

1001
00:49:20,700 --> 00:49:23,880
and I I I I I sense that since uh Jack

1002
00:49:23,880 --> 00:49:26,760
you you brought their uh control word to

1003
00:49:26,760 --> 00:49:28,859
the discussion it definitely falls into

1004
00:49:28,859 --> 00:49:32,040
what was identified as a gap that we

1005
00:49:32,040 --> 00:49:34,920
missed to discuss non-ip payload

1006
00:49:34,920 --> 00:49:39,680
okay let's uh do it and oh I think

1007
00:49:39,680 --> 00:49:41,400
discuss that

1008
00:49:41,400 --> 00:49:43,940
um so Matthew

1009
00:49:44,220 --> 00:49:45,619
um so I just like this kind of second

1010
00:49:45,619 --> 00:49:47,760
Joel's comment about

1011
00:49:47,760 --> 00:49:50,040
what happens if you kind of Orphan the

1012
00:49:50,040 --> 00:49:53,099
post stack data if you strip the stack

1013
00:49:53,099 --> 00:49:55,140
somewhere and then you you know then you

1014
00:49:55,140 --> 00:49:57,599
then you terminate it may be in a PHP

1015
00:49:57,599 --> 00:49:59,400
case or other cases tunnel internal kind

1016
00:49:59,400 --> 00:50:00,960
of cases

1017
00:50:00,960 --> 00:50:03,180
um you know the terminating PE

1018
00:50:03,180 --> 00:50:04,560
essentially doesn't know what to do with

1019
00:50:04,560 --> 00:50:07,380
that PSD or doesn't even know it's there

1020
00:50:07,380 --> 00:50:09,060
um so I think we need a bit more thought

1021
00:50:09,060 --> 00:50:11,819
about that yeah I think some people

1022
00:50:11,819 --> 00:50:13,319
think you can look at the bottom of the

1023
00:50:13,319 --> 00:50:14,819
stack and determine what to do I can

1024
00:50:14,819 --> 00:50:17,099
tell you that this is absolutely not

1025
00:50:17,099 --> 00:50:20,400
possible in the mpls design yeah

1026
00:50:20,400 --> 00:50:22,319
uh similarly I think there's also

1027
00:50:22,319 --> 00:50:25,020
possibly an issue with PSD and and IP

1028
00:50:25,020 --> 00:50:27,060
payloads if the PSD comes directly after

1029
00:50:27,060 --> 00:50:28,560
the label stack yeah because it could

1030
00:50:28,560 --> 00:50:31,859
ads for IP potentially because you know

1031
00:50:31,859 --> 00:50:33,180
this is a problem we tried to get around

1032
00:50:33,180 --> 00:50:35,460
with with control words yep

1033
00:50:35,460 --> 00:50:37,319
so we need to think a bit more about

1034
00:50:37,319 --> 00:50:38,460
that because we'd have a general

1035
00:50:38,460 --> 00:50:40,079
intention not to break anything that's

1036
00:50:40,079 --> 00:50:41,819
in the network today even if it's not

1037
00:50:41,819 --> 00:50:43,079
necessarily standard Behavior it's

1038
00:50:43,079 --> 00:50:44,640
common Behavior

1039
00:50:44,640 --> 00:50:46,800
and I think it doesn't work that Adrian

1040
00:50:46,800 --> 00:50:49,200
sort of did demonstrates that you can't

1041
00:50:49,200 --> 00:50:51,960
really trust very much right

1042
00:50:51,960 --> 00:50:54,359
uh Matthew actually like uh when you

1043
00:50:54,359 --> 00:50:57,420
talk about uh the um the postdoc data

1044
00:50:57,420 --> 00:50:59,760
which needs to be executed at the uh

1045
00:50:59,760 --> 00:51:02,099
egress point right that's what Joe was

1046
00:51:02,099 --> 00:51:04,200
also pointing out right so we have a

1047
00:51:04,200 --> 00:51:05,819
slide number 20 can just go to slide

1048
00:51:05,819 --> 00:51:09,660
number 20 that's a 22 I think yeah

1049
00:51:09,660 --> 00:51:12,180
well it's It's associated with

1050
00:51:12,180 --> 00:51:15,660
with the in stack information like the m

1051
00:51:15,660 --> 00:51:18,119
a label and the and so on so somehow you

1052
00:51:18,119 --> 00:51:19,680
need to be able to process it where you

1053
00:51:19,680 --> 00:51:21,000
strip the MMA type or whether you see

1054
00:51:21,000 --> 00:51:22,920
the M8 April but I don't know if that's

1055
00:51:22,920 --> 00:51:25,559
always possible yeah exactly we have a

1056
00:51:25,559 --> 00:51:27,180
slide on that breaking in so that you're

1057
00:51:27,180 --> 00:51:28,619
breaking into the service domain if you

1058
00:51:28,619 --> 00:51:30,599
like yeah that's what actually we have a

1059
00:51:30,599 --> 00:51:32,339
slight slide on that I can just go to

1060
00:51:32,339 --> 00:51:35,599
that uh slide 22 slightly fun

1061
00:51:35,599 --> 00:51:37,200
22.

1062
00:51:37,200 --> 00:51:39,919
20 okay

1063
00:51:40,880 --> 00:51:44,220
exactly yeah and the 22 like

1064
00:51:44,220 --> 00:51:46,859
21 22.

1065
00:51:46,859 --> 00:51:51,059
22. yeah so this is the exact case you

1066
00:51:51,059 --> 00:51:54,480
are talking about right so the uh I want

1067
00:51:54,480 --> 00:51:57,720
to uh one on my egress note to

1068
00:51:57,720 --> 00:51:59,220
understand

1069
00:51:59,220 --> 00:52:02,280
um the postdoc data so

1070
00:52:02,280 --> 00:52:05,400
uh this is obviously like you know uh we

1071
00:52:05,400 --> 00:52:08,460
think you know uh the uh Network stacks

1072
00:52:08,460 --> 00:52:10,680
and the email stack should be there and

1073
00:52:10,680 --> 00:52:14,280
uh this makes the uh packet to reach the

1074
00:52:14,280 --> 00:52:18,599
egress which has the m a uh header uh

1075
00:52:18,599 --> 00:52:20,579
indicating that there is a presence of

1076
00:52:20,579 --> 00:52:22,380
uh poster data and that's going to be

1077
00:52:22,380 --> 00:52:25,760
processed on the egress PE

1078
00:52:28,020 --> 00:52:29,099
Ace

1079
00:52:29,099 --> 00:52:31,500
okay but that's that's just for the IP

1080
00:52:31,500 --> 00:52:33,300
case I can play that case not for though

1081
00:52:33,300 --> 00:52:34,920
too that's a suitable case where you

1082
00:52:34,920 --> 00:52:39,000
isn't really your PSD could be after

1083
00:52:39,000 --> 00:52:40,619
control board

1084
00:52:40,619 --> 00:52:42,720
that's right that's that's what I'm

1085
00:52:42,720 --> 00:52:44,280
saying like you know the PSD after

1086
00:52:44,280 --> 00:52:46,319
control board we have that up code one

1087
00:52:46,319 --> 00:52:49,079
right so that's going to tell uh where

1088
00:52:49,079 --> 00:52:51,900
the PSD is

1089
00:52:51,900 --> 00:52:54,000
yeah but you're asking

1090
00:52:54,000 --> 00:52:55,680
if you're doing PHP you're asking the

1091
00:52:55,680 --> 00:52:58,800
PHP now to go beyond the control word so

1092
00:52:58,800 --> 00:53:00,859
it's not just popping the the

1093
00:53:00,859 --> 00:53:03,059
label stack it's going beyond the

1094
00:53:03,059 --> 00:53:05,640
control word into this into right you

1095
00:53:05,640 --> 00:53:07,200
know between I think we need to but we

1096
00:53:07,200 --> 00:53:08,220
need to think about this we need to

1097
00:53:08,220 --> 00:53:11,118
progress I think okay

1098
00:53:12,059 --> 00:53:13,380
so

1099
00:53:13,380 --> 00:53:15,260
issue

1100
00:53:15,260 --> 00:53:17,220
networks uh can you go to slide 11

1101
00:53:17,220 --> 00:53:18,540
please

1102
00:53:18,540 --> 00:53:21,319
11.

1103
00:53:22,559 --> 00:53:23,760
so

1104
00:53:23,760 --> 00:53:27,000
um in the first illustration here uh if

1105
00:53:27,000 --> 00:53:28,859
I have multiple

1106
00:53:28,859 --> 00:53:33,540
uh flag based nais with Ansley data

1107
00:53:33,540 --> 00:53:36,000
um how do I specify the scope I have to

1108
00:53:36,000 --> 00:53:37,619
rely on the

1109
00:53:37,619 --> 00:53:39,900
one on the top how do you specify the

1110
00:53:39,900 --> 00:53:42,800
scope for flag based niis

1111
00:53:42,800 --> 00:53:45,839
so okay so okay you're not specifically

1112
00:53:45,839 --> 00:53:47,579
talking about this one even even the

1113
00:53:47,579 --> 00:53:51,420
opcode 2 is a flat based right with

1114
00:53:51,420 --> 00:53:54,079
Ansley data

1115
00:54:05,620 --> 00:54:08,799
[Music]

1116
00:54:16,319 --> 00:54:18,660
um added added in the specific uh

1117
00:54:18,660 --> 00:54:21,420
Network sub stack

1118
00:54:21,420 --> 00:54:24,839
so all the all the uh all the all the um

1119
00:54:24,839 --> 00:54:27,480
any bitmaps right uh should belong to

1120
00:54:27,480 --> 00:54:29,700
the same scope

1121
00:54:29,700 --> 00:54:32,760
so when I'm if I'm defining a new Nar

1122
00:54:32,760 --> 00:54:35,520
flag based Nai with answering data what

1123
00:54:35,520 --> 00:54:39,119
is the INR registry where I specify the

1124
00:54:39,119 --> 00:54:41,220
scope I understand that there have been

1125
00:54:41,220 --> 00:54:43,740
some changes between 0 2 and 0 3 the

1126
00:54:43,740 --> 00:54:45,540
scope based registry is simply have

1127
00:54:45,540 --> 00:54:48,059
disappeared uh is there any guidance on

1128
00:54:48,059 --> 00:54:49,920
how to specify that

1129
00:54:49,920 --> 00:54:52,980
uh so so this uh this n a bit this is

1130
00:54:52,980 --> 00:54:54,780
the sub code 3 especially talking about

1131
00:54:54,780 --> 00:54:57,960
right or uh in general uh n a Flags also

1132
00:54:57,960 --> 00:54:59,220
talking you're talking about of course

1133
00:54:59,220 --> 00:55:01,680
yeah I just have a slack based Nai with

1134
00:55:01,680 --> 00:55:03,720
answered data I understand I mean my

1135
00:55:03,720 --> 00:55:04,680
understanding is that I would have to

1136
00:55:04,680 --> 00:55:06,599
use Nai op code 3 in that particular

1137
00:55:06,599 --> 00:55:09,000
case if we move on

1138
00:55:09,000 --> 00:55:12,059
I think this is definitely I think I'm

1139
00:55:12,059 --> 00:55:14,940
learning two things here firstly that we

1140
00:55:14,940 --> 00:55:17,099
definitely need to continue this um this

1141
00:55:17,099 --> 00:55:19,740
discussion we we um we really need to

1142
00:55:19,740 --> 00:55:21,900
you know maintain our momentum of um

1143
00:55:21,900 --> 00:55:24,240
weekly meetings because there have been

1144
00:55:24,240 --> 00:55:26,579
so many discussions on on this

1145
00:55:26,579 --> 00:55:28,319
um on this draft

1146
00:55:28,319 --> 00:55:30,180
I will say that I've introduce a

1147
00:55:30,180 --> 00:55:31,559
personal comment if I may at this point

1148
00:55:31,559 --> 00:55:33,839
I am really concerned at the complexity

1149
00:55:33,839 --> 00:55:37,440
of this mpls was so successful and so

1150
00:55:37,440 --> 00:55:40,380
fast because it was simple and I just

1151
00:55:40,380 --> 00:55:42,059
wonder whether we're destroying that

1152
00:55:42,059 --> 00:55:44,400
Heritage with some of this work so I

1153
00:55:44,400 --> 00:55:46,260
think we've got a bit to discuss before

1154
00:55:46,260 --> 00:55:50,000
we get to uh to conclusion

1155
00:55:50,339 --> 00:55:52,559
thank you

1156
00:55:52,559 --> 00:55:54,599
um so I guess we're on the next

1157
00:55:54,599 --> 00:55:58,920
the next slot which is

1158
00:55:58,920 --> 00:56:01,559
uh

1159
00:56:01,559 --> 00:56:03,720
uh data plane encapsulations are in situ

1160
00:56:03,720 --> 00:56:06,439
isn't that not next

1161
00:56:13,740 --> 00:56:16,980
who's presenting this ah

1162
00:56:16,980 --> 00:56:20,900
you might want this I only got one there

1163
00:56:21,599 --> 00:56:24,359
good morning everyone

1164
00:56:24,359 --> 00:56:27,240
so my name is Rakesh Gandhi from Cisco

1165
00:56:27,240 --> 00:56:31,319
Systems and um I'm presenting the mpls

1166
00:56:31,319 --> 00:56:34,619
end cap for the iom on behalf of the

1167
00:56:34,619 --> 00:56:36,780
authors

1168
00:56:36,780 --> 00:56:39,180
next slide please

1169
00:56:39,180 --> 00:56:42,200
the next slide please

1170
00:56:42,300 --> 00:56:45,000
so agenda is to look at the requirements

1171
00:56:45,000 --> 00:56:47,579
and the scope of this work the summary

1172
00:56:47,579 --> 00:56:51,240
of the procedure and extensions and the

1173
00:56:51,240 --> 00:56:52,920
next steps

1174
00:56:52,920 --> 00:56:55,319
next slide please

1175
00:56:55,319 --> 00:56:58,140
so the requirement is simple there is

1176
00:56:58,140 --> 00:57:00,900
quite a bit of work that's done in ippm

1177
00:57:00,900 --> 00:57:04,680
working group there's RFC now 9197 for

1178
00:57:04,680 --> 00:57:07,079
the iom data fields there is also

1179
00:57:07,079 --> 00:57:10,800
another draft for the direct export uh

1180
00:57:10,800 --> 00:57:15,119
they Define Trace points and the

1181
00:57:15,119 --> 00:57:17,160
requirement here is to carry them with

1182
00:57:17,160 --> 00:57:19,859
mpls encapsulation

1183
00:57:19,859 --> 00:57:22,319
um we definitely want to do edge to edge

1184
00:57:22,319 --> 00:57:25,260
as well as help by out processing

1185
00:57:25,260 --> 00:57:29,099
and the scope is the m a so this

1186
00:57:29,099 --> 00:57:33,359
framework jackstrap songs trapped

1187
00:57:33,359 --> 00:57:35,339
so these are all the

1188
00:57:35,339 --> 00:57:38,579
uh drafts that's uh kind of normative

1189
00:57:38,579 --> 00:57:40,680
for this work

1190
00:57:40,680 --> 00:57:43,578
next slide please

1191
00:57:43,680 --> 00:57:46,260
so history of this draft uh we started

1192
00:57:46,260 --> 00:57:49,559
this work a while ago and it has gone

1193
00:57:49,559 --> 00:57:51,720
through multiple iterations

1194
00:57:51,720 --> 00:57:54,000
um we had the MP like RT expert review

1195
00:57:54,000 --> 00:57:55,559
as well

1196
00:57:55,559 --> 00:57:58,079
um we had gone to gach based approach as

1197
00:57:58,079 --> 00:58:02,880
well and now uh it's aligned with m a uh

1198
00:58:02,880 --> 00:58:05,640
so it's using M A encoding as well as

1199
00:58:05,640 --> 00:58:08,700
the host attack extension header from

1200
00:58:08,700 --> 00:58:11,880
Ohio so these are the the solutions that

1201
00:58:11,880 --> 00:58:13,680
we are

1202
00:58:13,680 --> 00:58:16,680
uh we are being we are discussing this

1203
00:58:16,680 --> 00:58:18,839
in the working group so uh this is an

1204
00:58:18,839 --> 00:58:20,579
example of how to use the next slide

1205
00:58:20,579 --> 00:58:22,700
please

1206
00:58:25,680 --> 00:58:29,280
uh so uh this is uh using Jack's Draft

1207
00:58:29,280 --> 00:58:32,720
um uh there is an m a uh label uh bspl

1208
00:58:32,720 --> 00:58:36,960
and uh if you want to put iom in the

1209
00:58:36,960 --> 00:58:38,339
post stack

1210
00:58:38,339 --> 00:58:43,799
uh data uh then the the PBT is set IHS

1211
00:58:43,799 --> 00:58:46,260
is the scope of it so it basically says

1212
00:58:46,260 --> 00:58:49,440
so did we process uh up by half or end

1213
00:58:49,440 --> 00:58:51,599
to end or on select nodes

1214
00:58:51,599 --> 00:58:54,660
um and then there are other bits like

1215
00:58:54,660 --> 00:58:56,880
the length and orbit and and whatnot

1216
00:58:56,880 --> 00:58:58,740
that comes from the draft

1217
00:58:58,740 --> 00:59:01,700
next slide please

1218
00:59:02,880 --> 00:59:06,359
so regarding the scope uh PB says that

1219
00:59:06,359 --> 00:59:09,540
there is a iom and the scope says where

1220
00:59:09,540 --> 00:59:12,180
it should be processed this is exactly

1221
00:59:12,180 --> 00:59:16,500
how it is in traffic extra please

1222
00:59:17,760 --> 00:59:20,579
so this is encoding using highest draft

1223
00:59:20,579 --> 00:59:23,460
for the Post stack extension header that

1224
00:59:23,460 --> 00:59:25,680
is a common header it says how many

1225
00:59:25,680 --> 00:59:27,900
extents and headers are there the length

1226
00:59:27,900 --> 00:59:31,140
and next header and what is this draft

1227
00:59:31,140 --> 00:59:35,220
defining is the iom is next header and

1228
00:59:35,220 --> 00:59:38,099
uh basically in the extension header it

1229
00:59:38,099 --> 00:59:41,460
would carry an iom option type which is

1230
00:59:41,460 --> 00:59:45,420
defined in 9197 and other uh ippm

1231
00:59:45,420 --> 00:59:47,460
working of jobs

1232
00:59:47,460 --> 00:59:50,420
next slide please

1233
00:59:53,700 --> 00:59:58,500
so if you want to have multiple iom test

1234
00:59:58,500 --> 01:00:01,680
points there are use cases like you may

1235
01:00:01,680 --> 01:00:04,680
want to do some tracing how by hop but

1236
01:00:04,680 --> 01:00:08,160
maybe only collect end-to-end latency so

1237
01:00:08,160 --> 01:00:10,440
we would put multiple accents and

1238
01:00:10,440 --> 01:00:12,119
headers

1239
01:00:12,119 --> 01:00:15,680
um with their uh iom option types

1240
01:00:15,680 --> 01:00:18,420
defined in the ippm

1241
01:00:18,420 --> 01:00:22,260
and uh how buy Hub needs to be should be

1242
01:00:22,260 --> 01:00:24,420
higher uh

1243
01:00:24,420 --> 01:00:26,940
should be able to easily access it uh

1244
01:00:26,940 --> 01:00:30,359
and and to end would be at the bottom

1245
01:00:30,359 --> 01:00:33,259
next slide please

1246
01:00:35,160 --> 01:00:36,900
so this is just a big picture how

1247
01:00:36,900 --> 01:00:39,420
everything put together would look like

1248
01:00:39,420 --> 01:00:43,079
um you have Instax M A and the post

1249
01:00:43,079 --> 01:00:47,900
stack ioam data so this is a big picture

1250
01:00:47,900 --> 01:00:51,240
for how everything fits together

1251
01:00:51,240 --> 01:00:54,240
next slide please

1252
01:00:54,240 --> 01:00:57,599
so uh for in case of end to end there

1253
01:00:57,599 --> 01:00:58,680
are

1254
01:00:58,680 --> 01:01:02,339
option types defined for end to end in

1255
01:01:02,339 --> 01:01:05,819
the RFC 9197 uh so if you're doing

1256
01:01:05,819 --> 01:01:08,819
end-to-end that's what you would use

1257
01:01:08,819 --> 01:01:11,520
uh needless to say that the d-cap node

1258
01:01:11,520 --> 01:01:14,339
must support the m a in order for this

1259
01:01:14,339 --> 01:01:17,040
to work there was a question on how

1260
01:01:17,040 --> 01:01:19,799
would the Decap node would it would just

1261
01:01:19,799 --> 01:01:22,799
pop the m a maybe not the post stack but

1262
01:01:22,799 --> 01:01:25,020
it would it would remove the post stack

1263
01:01:25,020 --> 01:01:26,819
as well because there's a p bit set

1264
01:01:26,819 --> 01:01:29,880
right so it will detect that I need to

1265
01:01:29,880 --> 01:01:32,280
remove M A but there's pivot once I also

1266
01:01:32,280 --> 01:01:36,420
need to remove iom if I'm doing decaf

1267
01:01:36,420 --> 01:01:38,819
in this case there is no no processing

1268
01:01:38,819 --> 01:01:40,440
on the Hub IHOP

1269
01:01:40,440 --> 01:01:43,400
next slide please

1270
01:01:44,339 --> 01:01:48,359
uh with the hubby hop uh there are Trace

1271
01:01:48,359 --> 01:01:52,020
points defined uh just for that so we

1272
01:01:52,020 --> 01:01:54,720
would use that and again the procedure

1273
01:01:54,720 --> 01:01:57,180
is the same just the trace points are

1274
01:01:57,180 --> 01:01:59,579
different except now it gets processed

1275
01:01:59,579 --> 01:02:02,520
on the on each hop and the scope is set

1276
01:02:02,520 --> 01:02:05,940
accordingly as well so that M A will

1277
01:02:05,940 --> 01:02:07,500
tell the midpoint that you need to

1278
01:02:07,500 --> 01:02:08,700
process this

1279
01:02:08,700 --> 01:02:11,579
next slide please

1280
01:02:11,579 --> 01:02:13,319
so we welcome your comments and

1281
01:02:13,319 --> 01:02:14,460
suggestions

1282
01:02:14,460 --> 01:02:17,880
um and uh I think we do have a few

1283
01:02:17,880 --> 01:02:19,079
normative

1284
01:02:19,079 --> 01:02:21,540
um work that's happening so once that's

1285
01:02:21,540 --> 01:02:24,240
adopted then we would request that this

1286
01:02:24,240 --> 01:02:29,040
also be adopted as a use case plan

1287
01:02:29,040 --> 01:02:31,020
right

1288
01:02:31,020 --> 01:02:35,160
yes uh Greg mirsky Erickson so um

1289
01:02:35,160 --> 01:02:36,839
as I understand

1290
01:02:36,839 --> 01:02:39,359
um The Proposal is

1291
01:02:39,359 --> 01:02:41,220
um to use

1292
01:02:41,220 --> 01:02:47,700
um priorit and incremental IM Trace

1293
01:02:47,700 --> 01:02:51,540
um collecting data in a post tag

1294
01:02:51,540 --> 01:02:56,160
so this one is about encapsulating it so

1295
01:02:56,160 --> 01:02:58,200
those Trace points are defined in the

1296
01:02:58,200 --> 01:03:02,040
ippm the RFC 9197 so you say how would

1297
01:03:02,040 --> 01:03:04,980
you carry all the stress uh um points in

1298
01:03:04,980 --> 01:03:08,400
this uh in mpls and this is a way to

1299
01:03:08,400 --> 01:03:09,839
carry it

1300
01:03:09,839 --> 01:03:12,420
um so there is no there is no

1301
01:03:12,420 --> 01:03:14,819
recommendation on which one should be

1302
01:03:14,819 --> 01:03:18,240
used for mpls or should not be used uh I

1303
01:03:18,240 --> 01:03:20,160
think that actually that's that's my

1304
01:03:20,160 --> 01:03:21,240
question

1305
01:03:21,240 --> 01:03:24,720
okay so according to IAM

1306
01:03:24,720 --> 01:03:27,119
um RFC

1307
01:03:27,119 --> 01:03:30,359
prelocated in uh incremental Trace

1308
01:03:30,359 --> 01:03:32,839
options

1309
01:03:33,000 --> 01:03:36,240
are to collect operational State and

1310
01:03:36,240 --> 01:03:39,599
Telemetry information in a data packet

1311
01:03:39,599 --> 01:03:44,520
so my question is uh in mpls packet if

1312
01:03:44,520 --> 01:03:46,799
incremental and Trace

1313
01:03:46,799 --> 01:03:50,819
and uh incremental and pre-allocated are

1314
01:03:50,819 --> 01:03:54,359
used where the data are collected

1315
01:03:54,359 --> 01:03:59,280
so we expect that the pre-allocated is

1316
01:03:59,280 --> 01:04:02,220
easy to implement

1317
01:04:02,220 --> 01:04:05,880
um so wherever that extension the post

1318
01:04:05,880 --> 01:04:08,700
extension header is where ioam data

1319
01:04:08,700 --> 01:04:11,520
fields are defined this is where

1320
01:04:11,520 --> 01:04:14,760
the pay allocated database will be and

1321
01:04:14,760 --> 01:04:17,040
it will be updated to carry timestamp

1322
01:04:17,040 --> 01:04:20,339
interface whatnot okay so uh relative to

1323
01:04:20,339 --> 01:04:24,420
the payload of the mpos packet where the

1324
01:04:24,420 --> 01:04:26,220
collected data will be

1325
01:04:26,220 --> 01:04:28,799
so this is after the bottom of the stack

1326
01:04:28,799 --> 01:04:32,339
before the payload so before the payload

1327
01:04:32,339 --> 01:04:36,780
okay so uh if for example there

1328
01:04:36,780 --> 01:04:40,619
are pre-allocated space is

1329
01:04:40,619 --> 01:04:42,359
1K

1330
01:04:42,359 --> 01:04:45,180
so then uh how much of the payload will

1331
01:04:45,180 --> 01:04:46,680
be able to carry

1332
01:04:46,680 --> 01:04:49,700
not very much

1333
01:04:49,920 --> 01:04:52,160
I mean so these are the the

1334
01:04:52,160 --> 01:04:55,020
implementation and deployment details on

1335
01:04:55,020 --> 01:04:58,520
what the hardware can do how big is uh

1336
01:04:58,520 --> 01:05:01,619
pre-allocated it can support

1337
01:05:01,619 --> 01:05:03,900
um in theory you can say 64k but

1338
01:05:03,900 --> 01:05:06,540
Hardware may be able to do only 64 bytes

1339
01:05:06,540 --> 01:05:07,440
so

1340
01:05:07,440 --> 01:05:09,480
um it's a question when it gets

1341
01:05:09,480 --> 01:05:10,980
implemented and what Trace point to

1342
01:05:10,980 --> 01:05:12,299
implement and what you want to capture

1343
01:05:12,299 --> 01:05:14,099
so it will be Hardware capability thing

1344
01:05:14,099 --> 01:05:19,020
yes and what's an impact uh of this IM

1345
01:05:19,020 --> 01:05:24,660
modes on a dead net over mpos data plane

1346
01:05:24,660 --> 01:05:27,059
yeah so the job doesn't discuss that and

1347
01:05:27,059 --> 01:05:29,160
it does something uh we need to discuss

1348
01:05:29,160 --> 01:05:33,000
and uh cover it okay and so uh for the

1349
01:05:33,000 --> 01:05:35,180
incremental so as I understand

1350
01:05:35,180 --> 01:05:38,160
incremental mode means that each node

1351
01:05:38,160 --> 01:05:42,599
that is to uh add operational State

1352
01:05:42,599 --> 01:05:45,900
Telemetry information must add

1353
01:05:45,900 --> 01:05:48,540
additional space to the packet

1354
01:05:48,540 --> 01:05:51,540
so that means that it needs to push the

1355
01:05:51,540 --> 01:05:52,619
payload

1356
01:05:52,619 --> 01:05:55,619
and rewrite the packet so what's the

1357
01:05:55,619 --> 01:05:57,119
performance impact

1358
01:05:57,119 --> 01:06:02,940
so this is coming from my PPM RFC 9197

1359
01:06:02,940 --> 01:06:05,880
um I definitely it is understood that

1360
01:06:05,880 --> 01:06:09,420
not many Hardware can Implement that uh

1361
01:06:09,420 --> 01:06:10,619
so

1362
01:06:10,619 --> 01:06:13,140
if if there is a need for it we can

1363
01:06:13,140 --> 01:06:14,640
explain

1364
01:06:14,640 --> 01:06:16,799
um that there is implications if you're

1365
01:06:16,799 --> 01:06:19,380
doing uh incremental because you want to

1366
01:06:19,380 --> 01:06:21,599
do uh Hardware needs to move things

1367
01:06:21,599 --> 01:06:24,119
around and it Hardware be capable of it

1368
01:06:24,119 --> 01:06:27,059
but yeah it's it's when you implement it

1369
01:06:27,059 --> 01:06:28,799
those are the challenges you're going to

1370
01:06:28,799 --> 01:06:30,059
face

1371
01:06:30,059 --> 01:06:32,460
um it appears that

1372
01:06:32,460 --> 01:06:36,359
um even though that um the based RFC out

1373
01:06:36,359 --> 01:06:40,380
of ibpm working group and IAM uh defines

1374
01:06:40,380 --> 01:06:44,339
a number of different modes

1375
01:06:44,339 --> 01:06:47,039
um we need to decide which modes are

1376
01:06:47,039 --> 01:06:50,160
most applicable to mpls data plane

1377
01:06:50,160 --> 01:06:53,099
because it's not necessarily that all of

1378
01:06:53,099 --> 01:06:55,799
them are equally applicable and for

1379
01:06:55,799 --> 01:06:56,760
example

1380
01:06:56,760 --> 01:06:58,680
um

1381
01:06:58,680 --> 01:07:02,220
we have uh BFD that been defined for

1382
01:07:02,220 --> 01:07:05,400
several modes and only one of them uh

1383
01:07:05,400 --> 01:07:09,780
been applied to uh BFD over mpos LSP

1384
01:07:09,780 --> 01:07:11,819
this this sounds like it needs a

1385
01:07:11,819 --> 01:07:13,859
detailed review beyond what we're going

1386
01:07:13,859 --> 01:07:15,960
to do in the next time we got on the

1387
01:07:15,960 --> 01:07:18,359
agenda but I I'm I'm not saying we

1388
01:07:18,359 --> 01:07:20,460
shouldn't have this discussion but I

1389
01:07:20,460 --> 01:07:21,900
think we probably need to set up some

1390
01:07:21,900 --> 01:07:24,599
special time to do it no we we can do it

1391
01:07:24,599 --> 01:07:27,720
of you know I I agree with Rakesh so

1392
01:07:27,720 --> 01:07:30,480
once we have a settled uh encapsulation

1393
01:07:30,480 --> 01:07:33,960
solution then we can uh

1394
01:07:33,960 --> 01:07:36,420
have this discussion in the course of

1395
01:07:36,420 --> 01:07:40,880
adopting this draft okay yeah lower

1396
01:07:42,920 --> 01:07:45,980
yes yes

1397
01:07:46,760 --> 01:07:49,440
addressing the request for a working

1398
01:07:49,440 --> 01:07:50,819
group adoption

1399
01:07:50,819 --> 01:07:52,380
uh

1400
01:07:52,380 --> 01:07:55,940
I think the document is pretty mature

1401
01:07:55,940 --> 01:07:59,099
however it Reliance

1402
01:07:59,099 --> 01:07:59,819
um

1403
01:07:59,819 --> 01:08:03,000
relies pretty heavily on draft Jacks so

1404
01:08:03,000 --> 01:08:04,920
I would actually like to go ahead with

1405
01:08:04,920 --> 01:08:07,920
your off Jacks first before pushing this

1406
01:08:07,920 --> 01:08:12,000
for a working group adoption poll

1407
01:08:12,000 --> 01:08:16,020
yeah it also uh relies heavily on

1408
01:08:16,020 --> 01:08:18,299
highest draft as well for post-tech

1409
01:08:18,299 --> 01:08:20,460
extension headers so

1410
01:08:20,460 --> 01:08:24,359
um yeah we we need to stabilize the

1411
01:08:24,359 --> 01:08:26,100
instack post stack

1412
01:08:26,100 --> 01:08:28,979
um first got those adopted and then come

1413
01:08:28,979 --> 01:08:31,879
to the use cases

1414
01:08:31,979 --> 01:08:35,279
okay my my cue shows kariti next

1415
01:08:35,279 --> 01:08:37,580
actually

1416
01:08:38,238 --> 01:08:41,299
thank you

1417
01:08:41,460 --> 01:08:44,759
Hello Kitty compeller so I agree I think

1418
01:08:44,759 --> 01:08:46,620
we finally came to the same conclusion

1419
01:08:46,620 --> 01:08:49,799
there's a separate discussion on you

1420
01:08:49,799 --> 01:08:53,299
know what one can do with iom what's the

1421
01:08:53,299 --> 01:08:55,920
implication on forwarding performance

1422
01:08:55,920 --> 01:08:57,899
and so on I think what you're talking

1423
01:08:57,899 --> 01:09:00,359
about is how we encode it if you have an

1424
01:09:00,359 --> 01:09:02,640
mpls stack and Greg you have a good

1425
01:09:02,640 --> 01:09:05,219
point that uh you might want certain

1426
01:09:05,219 --> 01:09:08,219
modes but not all modes that is relevant

1427
01:09:08,219 --> 01:09:11,640
to mpls but the actual iom stuff is

1428
01:09:11,640 --> 01:09:14,698
elsewhere so yeah I think we kind of got

1429
01:09:14,698 --> 01:09:16,380
there but I just want to re-emphasize

1430
01:09:16,380 --> 01:09:18,179
because we are on the same page yeah

1431
01:09:18,179 --> 01:09:20,460
thanks you really need to be I don't

1432
01:09:20,460 --> 01:09:21,420
know whether you want to speak but you

1433
01:09:21,420 --> 01:09:24,799
shouldn't be in the electronic queue

1434
01:09:25,319 --> 01:09:27,779
but put yourself in it afterwards so

1435
01:09:27,779 --> 01:09:29,279
that we've got a recording of who spoke

1436
01:09:29,279 --> 01:09:31,319
please

1437
01:09:31,319 --> 01:09:34,080
just make your point and then how you

1438
01:09:34,080 --> 01:09:36,719
song from future away uh yeah actually I

1439
01:09:36,719 --> 01:09:39,359
like to mix a similar comment as uh

1440
01:09:39,359 --> 01:09:42,479
crazy as I made I think the solutions

1441
01:09:42,479 --> 01:09:46,439
are not just applicable to the iom trace

1442
01:09:46,439 --> 01:09:48,899
there are many other different options

1443
01:09:48,899 --> 01:09:51,179
they can all be supported by the same

1444
01:09:51,179 --> 01:09:53,880
framework but uh as for the real

1445
01:09:53,880 --> 01:09:57,500
implementation I think it's uh up to the

1446
01:09:57,500 --> 01:10:00,120
implementer to decide which option they

1447
01:10:00,120 --> 01:10:03,360
actually use in their design right

1448
01:10:03,360 --> 01:10:07,380
all right thank you and that's just done

1449
01:10:07,380 --> 01:10:09,060
on this

1450
01:10:09,060 --> 01:10:13,520
okay yeah thanks everyone thank you

1451
01:10:14,940 --> 01:10:17,540
so

1452
01:10:17,540 --> 01:10:20,580
it's this we're not going in for a few

1453
01:10:20,580 --> 01:10:27,420
minutes to work on the BFD um RDI work

1454
01:10:27,420 --> 01:10:30,860
so who's presenting this please yeah

1455
01:10:30,860 --> 01:10:34,400
okay this is Tony Juan

1456
01:10:34,400 --> 01:10:36,780
can you hear me

1457
01:10:36,780 --> 01:10:38,280
yes

1458
01:10:38,280 --> 01:10:42,600
okay let me begin and I'm from Huawei

1459
01:10:42,600 --> 01:10:45,360
and here in the drawing meeting I want

1460
01:10:45,360 --> 01:10:48,420
to introduce our new job about that at

1461
01:10:48,420 --> 01:10:52,320
oam namini PFT extension Fontana remote

1462
01:10:52,320 --> 01:10:55,920
different indication and this is join

1463
01:10:55,920 --> 01:10:59,880
work with Gen tank and tianan and this

1464
01:10:59,880 --> 01:11:02,460
is submitted to ITF for the first time

1465
01:11:02,460 --> 01:11:06,020
next slide please

1466
01:11:08,120 --> 01:11:12,080
and that net provides reliable service

1467
01:11:12,080 --> 01:11:15,480
for data flows with extremely low

1468
01:11:15,480 --> 01:11:18,300
packing loss rates and body end-to-end

1469
01:11:18,300 --> 01:11:22,140
delivery and by dedicating network

1470
01:11:22,140 --> 01:11:24,719
resources such as linked families and

1471
01:11:24,719 --> 01:11:28,020
buffer space and to download flows

1472
01:11:28,020 --> 01:11:32,040
within a network domain and as listed in

1473
01:11:32,040 --> 01:11:36,179
IFC and Asus Wi-Fi thenx has three

1474
01:11:36,179 --> 01:11:41,040
Street close requirements and the first

1475
01:11:41,040 --> 01:11:43,340
um compared to traditional IP network

1476
01:11:43,340 --> 01:11:47,400
and which nicknet latency and leaves it

1477
01:11:47,400 --> 01:11:51,420
to transport or higher layer and and IP

1478
01:11:51,420 --> 01:11:54,840
adopts best effort delivery and that

1479
01:11:54,840 --> 01:11:57,719
aggravates the situation

1480
01:11:57,719 --> 01:12:00,020
um that requires

1481
01:12:00,020 --> 01:12:03,719
deterministic for the end-to-end latency

1482
01:12:03,719 --> 01:12:07,800
and second and that net could operate

1483
01:12:07,800 --> 01:12:10,860
and load the underlay Network and it

1484
01:12:10,860 --> 01:12:13,380
applies service protection to eliminary

1485
01:12:13,380 --> 01:12:17,520
laws since it requires to streak packet

1486
01:12:17,520 --> 01:12:21,719
loss ratio and the third and is Packet

1487
01:12:21,719 --> 01:12:25,440
ordering function is applied to preserve

1488
01:12:25,440 --> 01:12:29,179
order in Internet and as it doesn't

1489
01:12:29,179 --> 01:12:32,040
tolerate much out of all the packet

1490
01:12:32,040 --> 01:12:33,659
delivery

1491
01:12:33,659 --> 01:12:37,500
and let's try please

1492
01:12:37,500 --> 01:12:41,219
and any violation of quality of service

1493
01:12:41,219 --> 01:12:44,520
should be quickly reported and in

1494
01:12:44,520 --> 01:12:47,940
details and then that oam requires quick

1495
01:12:47,940 --> 01:12:50,820
defect detection and remote defect

1496
01:12:50,820 --> 01:12:56,480
indication and we call RDI in short and

1497
01:12:56,480 --> 01:12:58,739
bi-directional forwarding detection

1498
01:12:58,739 --> 01:13:02,219
protocol is now commonly used and it's

1499
01:13:02,219 --> 01:13:05,520
deployed in forwarding plant and it can

1500
01:13:05,520 --> 01:13:07,880
detect and Report the numbers of

1501
01:13:07,880 --> 01:13:12,659
failures but it's not specific for the

1502
01:13:12,659 --> 01:13:15,300
net domain defects and we mentioned

1503
01:13:15,300 --> 01:13:19,640
before next slide please

1504
01:13:21,600 --> 01:13:25,140
and so let's have a closer look at than

1505
01:13:25,140 --> 01:13:28,199
a specific defense when we need

1506
01:13:28,199 --> 01:13:30,840
detection technology but this is out of

1507
01:13:30,840 --> 01:13:34,560
scope of this draft and we need methods

1508
01:13:34,560 --> 01:13:37,440
for testing RTI

1509
01:13:37,440 --> 01:13:41,400
in the expense of latency and out on out

1510
01:13:41,400 --> 01:13:44,640
of order they are not well defined and

1511
01:13:44,640 --> 01:13:48,679
for packet loss BFD provides insensitive

1512
01:13:48,679 --> 01:13:51,960
methods which is not suitable for that

1513
01:13:51,960 --> 01:13:56,400
net OEM So currently there are no is

1514
01:13:56,400 --> 01:13:59,580
placed than a specific defect indication

1515
01:13:59,580 --> 01:14:01,199
indicators

1516
01:14:01,199 --> 01:14:05,000
and Nest die please

1517
01:14:05,820 --> 01:14:07,260
and

1518
01:14:07,260 --> 01:14:10,260
so we need to Define such deeper

1519
01:14:10,260 --> 01:14:12,780
indicators according to damage protein

1520
01:14:12,780 --> 01:14:16,199
or service and they are the ratio of out

1521
01:14:16,199 --> 01:14:19,560
of order packets and packet latency and

1522
01:14:19,560 --> 01:14:22,440
the result of packet loss

1523
01:14:22,440 --> 01:14:26,059
and so next slide

1524
01:14:30,179 --> 01:14:34,679
and so the next step is how to achieve

1525
01:14:34,679 --> 01:14:39,000
RDI and we extend current BFD protocol

1526
01:14:39,000 --> 01:14:42,840
as it provides diagnostic code field and

1527
01:14:42,840 --> 01:14:44,600
in in its control

1528
01:14:44,600 --> 01:14:48,600
packet and other methods to carry this

1529
01:14:48,600 --> 01:14:52,440
information are all welcome to and we

1530
01:14:52,440 --> 01:14:55,620
can further discuss and in diagnostic

1531
01:14:55,620 --> 01:14:57,560
field value

1532
01:14:57,560 --> 01:15:03,060
0 to 8 is assigned in IFC 5990 and

1533
01:15:03,060 --> 01:15:07,280
Knight in in another IFC and others are

1534
01:15:07,280 --> 01:15:09,960
reserved for use

1535
01:15:09,960 --> 01:15:13,340
next night please

1536
01:15:14,520 --> 01:15:17,940
and so we follow similar method to

1537
01:15:17,940 --> 01:15:21,540
append uh that's in a specific error

1538
01:15:21,540 --> 01:15:24,420
codes to indicate three main violations

1539
01:15:24,420 --> 01:15:27,239
against Dana close and so as to

1540
01:15:27,239 --> 01:15:29,780
guarantee the net and the Damage service

1541
01:15:29,780 --> 01:15:34,320
and further later value localization

1542
01:15:34,320 --> 01:15:37,620
and they are packing disorder ratio

1543
01:15:37,620 --> 01:15:40,260
limit reach and packet latency limit

1544
01:15:40,260 --> 01:15:43,380
reach and packet loss threshold limited

1545
01:15:43,380 --> 01:15:48,320
reach and next slide please

1546
01:15:49,040 --> 01:15:52,800
and our job provides two kinds of

1547
01:15:52,800 --> 01:15:57,360
encapsulations in terms of IPM mpis and

1548
01:15:57,360 --> 01:16:01,860
as elaborated internet OEM

1549
01:16:01,860 --> 01:16:05,420
and next slide please

1550
01:16:06,480 --> 01:16:10,560
and so next steps we hope to answer any

1551
01:16:10,560 --> 01:16:13,140
question and receive feedbacks as we

1552
01:16:13,140 --> 01:16:15,960
advise this job for the first time

1553
01:16:15,960 --> 01:16:18,679
thank you

1554
01:16:19,260 --> 01:16:21,480
Jeff you're first in the queue

1555
01:16:21,480 --> 01:16:25,199
thank you Jeff has BFD chair hongi thank

1556
01:16:25,199 --> 01:16:27,540
you for your presentation

1557
01:16:27,540 --> 01:16:29,880
yeah first question

1558
01:16:29,880 --> 01:16:32,400
this mechanism is not intended to cause

1559
01:16:32,400 --> 01:16:36,239
the BFD session to go down correct

1560
01:16:36,239 --> 01:16:36,980
um

1561
01:16:36,980 --> 01:16:41,760
we want to first uh advertise it in data

1562
01:16:41,760 --> 01:16:43,860
section

1563
01:16:43,860 --> 01:16:46,620
and later we can discuss it in bft

1564
01:16:46,620 --> 01:16:47,820
session

1565
01:16:47,820 --> 01:16:49,679
that is not my question

1566
01:16:49,679 --> 01:16:53,460
my question is when the RDI is reported

1567
01:16:53,460 --> 01:16:57,020
the BFD session stays up correct

1568
01:16:57,020 --> 01:17:03,540
uh yeah we we have it opened yeah

1569
01:17:03,540 --> 01:17:04,560
okay

1570
01:17:04,560 --> 01:17:07,500
so I have two further comments

1571
01:17:07,500 --> 01:17:09,420
comment number one

1572
01:17:09,420 --> 01:17:12,420
is that the things that you're trying to

1573
01:17:12,420 --> 01:17:14,960
detect you know for debt net purposes

1574
01:17:14,960 --> 01:17:19,140
packet order issues latency themselves

1575
01:17:19,140 --> 01:17:21,659
can disturb the PFT session

1576
01:17:21,659 --> 01:17:23,520
and your timers would have to be much

1577
01:17:23,520 --> 01:17:25,980
longer you know to survive that

1578
01:17:25,980 --> 01:17:28,620
so this probably makes BFD not a good

1579
01:17:28,620 --> 01:17:31,140
fit for your solution

1580
01:17:31,140 --> 01:17:34,380
my second comment and final comment

1581
01:17:34,380 --> 01:17:36,840
is that there has been work previously

1582
01:17:36,840 --> 01:17:39,540
discussed in BFD to carry additional

1583
01:17:39,540 --> 01:17:42,960
information not intended to impact BFD

1584
01:17:42,960 --> 01:17:44,460
sessions

1585
01:17:44,460 --> 01:17:47,060
our conclusion in the BFD working group

1586
01:17:47,060 --> 01:17:50,280
has been that this is not an appropriate

1587
01:17:50,280 --> 01:17:52,020
use for BFD

1588
01:17:52,020 --> 01:17:54,420
now we've had many discussions about

1589
01:17:54,420 --> 01:17:55,440
this

1590
01:17:55,440 --> 01:17:57,179
but I also wish to give you the gift

1591
01:17:57,179 --> 01:18:01,679
that Greg mirsky has in uh additional

1592
01:18:01,679 --> 01:18:02,940
work

1593
01:18:02,940 --> 01:18:05,400
taken BFD State machinery and is

1594
01:18:05,400 --> 01:18:07,800
proposing to carry a very similar state

1595
01:18:07,800 --> 01:18:10,920
that is explicitly intended to carry

1596
01:18:10,920 --> 01:18:13,679
something like RDI

1597
01:18:13,679 --> 01:18:17,100
so my recommendation one is that this

1598
01:18:17,100 --> 01:18:19,500
probably would not succeed in getting

1599
01:18:19,500 --> 01:18:21,960
code points from BFD

1600
01:18:21,960 --> 01:18:24,000
but you could probably work with Greg to

1601
01:18:24,000 --> 01:18:26,100
actually Advance your work

1602
01:18:26,100 --> 01:18:31,460
those are my comments thank you Sasha

1603
01:18:37,820 --> 01:18:41,280
actually I have nothing to add to the

1604
01:18:41,280 --> 01:18:43,500
previous speaker

1605
01:18:43,500 --> 01:18:45,140
uh I I

1606
01:18:45,140 --> 01:18:48,120
uh I was going to ask the same question

1607
01:18:48,120 --> 01:18:49,920
and to comment it

1608
01:18:49,920 --> 01:18:53,460
uh in any case the dog there is a recent

1609
01:18:53,460 --> 01:18:55,760
Errata on the on

1610
01:18:55,760 --> 01:18:58,620
5880 that said that the diagnostic code

1611
01:18:58,620 --> 01:19:01,980
must be set to zero every time the

1612
01:19:01,980 --> 01:19:05,100
session reaches its Upstate so I presume

1613
01:19:05,100 --> 01:19:07,800
this means that the diagnosis with the

1614
01:19:07,800 --> 01:19:10,020
current state machine the diagnostic

1615
01:19:10,020 --> 01:19:14,219
code either should be always zero or

1616
01:19:14,219 --> 01:19:15,739
simply

1617
01:19:15,739 --> 01:19:20,839
ignored when the station session is up

1618
01:19:21,360 --> 01:19:25,580
thank you any further comments

1619
01:19:25,980 --> 01:19:29,900
right thank you very much

1620
01:19:30,440 --> 01:19:33,980
and finally

1621
01:19:41,460 --> 01:19:44,840
right red

1622
01:19:45,659 --> 01:19:48,679
hello everyone

1623
01:19:48,780 --> 01:19:50,219
just go ahead

1624
01:19:50,219 --> 01:19:52,380
you're really quiet though

1625
01:19:52,380 --> 01:19:55,140
okay hello everyone I'm Tyrone from

1626
01:19:55,140 --> 01:19:57,420
Huawei it's a pleasure for me on behalf

1627
01:19:57,420 --> 01:20:00,239
of the co-authors Terran hongi to make

1628
01:20:00,239 --> 01:20:03,560
this presentation of our new chapter

1629
01:20:03,560 --> 01:20:07,140
requested replying for dinner to ability

1630
01:20:07,140 --> 01:20:08,820
to discover

1631
01:20:08,820 --> 01:20:12,320
next slide please

1632
01:20:16,860 --> 01:20:19,520
the agenda includes requirements uh

1633
01:20:19,520 --> 01:20:22,820
solutions to increase root solution

1634
01:20:22,820 --> 01:20:27,060
uh genetical request and reply extension

1635
01:20:27,060 --> 01:20:29,340
the definition of

1636
01:20:29,340 --> 01:20:31,860
genetic capability dictionary objects

1637
01:20:31,860 --> 01:20:35,880
and encapsulation example for

1638
01:20:35,880 --> 01:20:37,620
the plan

1639
01:20:37,620 --> 01:20:40,820
next slide please

1640
01:20:42,260 --> 01:20:45,719
as per the draft flight for the network

1641
01:20:45,719 --> 01:20:48,420
and framework Daniel and must support

1642
01:20:48,420 --> 01:20:51,360
the discovery of it and not really nodes

1643
01:20:51,360 --> 01:20:55,020
in the net Network and must support the

1644
01:20:55,020 --> 01:20:57,659
discovery of packet replication

1645
01:20:57,659 --> 01:21:01,620
elimination and other prism sub

1646
01:21:01,620 --> 01:21:03,480
functions locations

1647
01:21:03,480 --> 01:21:06,120
and also Master supported the collection

1648
01:21:06,120 --> 01:21:08,880
of the tenure service specific

1649
01:21:08,880 --> 01:21:12,060
information from internet really notes

1650
01:21:12,060 --> 01:21:15,560
next slide please

1651
01:21:15,600 --> 01:21:19,560
the alternative

1652
01:21:19,880 --> 01:21:23,659
technologists include

1653
01:21:23,699 --> 01:21:25,820
um

1654
01:21:26,780 --> 01:21:29,280
trace route

1655
01:21:29,280 --> 01:21:32,540
next slide please

1656
01:21:35,880 --> 01:21:40,560
as per your job to work the necessary

1657
01:21:40,560 --> 01:21:43,820
sub layer om

1658
01:21:43,980 --> 01:21:46,920
it introduced a Pinterest routine

1659
01:21:46,920 --> 01:21:49,440
mechanism the net ping and dimensions

1660
01:21:49,440 --> 01:21:52,620
that it could be used for discovery

1661
01:21:52,620 --> 01:21:55,560
the net capabilities often the naturally

1662
01:21:55,560 --> 01:21:59,840
node next slide please

1663
01:22:02,100 --> 01:22:04,679
in our new draft we introduce the net

1664
01:22:04,679 --> 01:22:08,040
capability Discovery objects to this

1665
01:22:08,040 --> 01:22:10,620
liver Dynamic capabilities of really

1666
01:22:10,620 --> 01:22:11,640
nodes

1667
01:22:11,640 --> 01:22:15,060
this object should be included in the

1668
01:22:15,060 --> 01:22:18,360
network request reply

1669
01:22:18,360 --> 01:22:22,980
packets and uh it they comprise of the

1670
01:22:22,980 --> 01:22:26,460
net capability metadates and Abstract

1671
01:22:26,460 --> 01:22:28,440
objective header

1672
01:22:28,440 --> 01:22:30,780
has the corresponding format depending

1673
01:22:30,780 --> 01:22:35,280
on the specific type of genetic plan

1674
01:22:35,280 --> 01:22:38,300
the formatter

1675
01:22:38,420 --> 01:22:41,400
capability Discovery objects is shown as

1676
01:22:41,400 --> 01:22:45,600
below currently four kinds of objects

1677
01:22:45,600 --> 01:22:49,260
are defined in a relative object they're

1678
01:22:49,260 --> 01:22:51,600
not really nodes identify objects then

1679
01:22:51,600 --> 01:22:54,540
it service protection function objects

1680
01:22:54,540 --> 01:22:56,940
and the general service flow information

1681
01:22:56,940 --> 01:22:58,320
objects

1682
01:22:58,320 --> 01:23:01,639
next slide please

1683
01:23:04,760 --> 01:23:08,820
when they initiate the node starts a

1684
01:23:08,820 --> 01:23:10,920
standard ping to discover

1685
01:23:10,920 --> 01:23:13,500
the dynamic capabilities of which by

1686
01:23:13,500 --> 01:23:16,739
naturally node the initiator node could

1687
01:23:16,739 --> 01:23:20,340
send an attack or requests that include

1688
01:23:20,340 --> 01:23:23,760
the net capability objects indicating

1689
01:23:23,760 --> 01:23:26,040
that a set of dynamic capability

1690
01:23:26,040 --> 01:23:29,520
information is requested like

1691
01:23:29,520 --> 01:23:32,699
service and forwarding sub layer

1692
01:23:32,699 --> 01:23:34,860
capability as well as

1693
01:23:34,860 --> 01:23:37,620
the incoming an outgoing flow

1694
01:23:37,620 --> 01:23:41,640
configurations the initiate node will

1695
01:23:41,640 --> 01:23:44,640
send the network request continuously

1696
01:23:44,640 --> 01:23:48,719
and increased by one to TTL each time

1697
01:23:48,719 --> 01:23:51,060
so all the relay nodes along the path of

1698
01:23:51,060 --> 01:23:55,100
dinosaur flow will be reached

1699
01:23:55,880 --> 01:23:57,620
reloads

1700
01:23:57,620 --> 01:24:01,560
receives a direct request with Daniel

1701
01:24:01,560 --> 01:24:04,580
capability objects and

1702
01:24:04,580 --> 01:24:08,400
expel the detail it replies to the

1703
01:24:08,400 --> 01:24:10,520
initiate node by a

1704
01:24:10,520 --> 01:24:13,739
genetical reply including a dnetic

1705
01:24:13,739 --> 01:24:15,600
capability object

1706
01:24:15,600 --> 01:24:18,300
indicating it's correlative denied

1707
01:24:18,300 --> 01:24:22,020
capabilities and uh

1708
01:24:22,020 --> 01:24:25,020
10 naturally nodes identify object has

1709
01:24:25,020 --> 01:24:27,480
its identification

1710
01:24:27,480 --> 01:24:30,739
next slide please

1711
01:24:33,800 --> 01:24:37,440
three types of coordinary nodes identify

1712
01:24:37,440 --> 01:24:40,980
objects are defined it compares the

1713
01:24:40,980 --> 01:24:45,000
library for an IPv6 compared node was

1714
01:24:45,000 --> 01:24:49,500
identified by a 20 bit node ID well ipv4

1715
01:24:49,500 --> 01:24:53,900
and IPv6 node bytes IP address

1716
01:24:53,900 --> 01:24:59,219
uh open food Spotify service operations

1717
01:24:59,219 --> 01:25:01,580
capable on that note

1718
01:25:01,580 --> 01:25:05,640
including initiation determination or

1719
01:25:05,640 --> 01:25:08,820
relay of the specific stories

1720
01:25:08,820 --> 01:25:11,960
next slide please

1721
01:25:13,679 --> 01:25:16,679
uh also they're not really not

1722
01:25:16,679 --> 01:25:19,260
applicable of service protection could

1723
01:25:19,260 --> 01:25:21,600
encapsulate service protection function

1724
01:25:21,600 --> 01:25:24,780
objects in the data Network replying

1725
01:25:24,780 --> 01:25:28,860
packets describing supported sequence

1726
01:25:28,860 --> 01:25:31,380
number lens in the service protection

1727
01:25:31,380 --> 01:25:32,820
functions

1728
01:25:32,820 --> 01:25:36,960
of packet replication elimination the

1729
01:25:36,960 --> 01:25:41,719
other preservation next slide please

1730
01:25:46,320 --> 01:25:49,440
tenant flow configuration on relay nodes

1731
01:25:49,440 --> 01:25:52,380
could also be delivered by identity

1732
01:25:52,380 --> 01:25:54,900
first floor information objects

1733
01:25:54,900 --> 01:25:56,940
call me an outgoing flow information

1734
01:25:56,940 --> 01:26:00,540
shows the same object to format and the

1735
01:26:00,540 --> 01:26:03,480
differs from each other by the I and

1736
01:26:03,480 --> 01:26:06,900
orbit setting the object header the

1737
01:26:06,900 --> 01:26:09,320
service label in the

1738
01:26:09,320 --> 01:26:12,500
sub-object identifies a specific

1739
01:26:12,500 --> 01:26:16,139
standard service flow of Empires they

1740
01:26:16,139 --> 01:26:18,440
plan

1741
01:26:19,199 --> 01:26:21,540
the pivot indicates that the service

1742
01:26:21,540 --> 01:26:23,940
label in the sub-object is allocated

1743
01:26:23,940 --> 01:26:28,580
from the platform label space ifset

1744
01:26:28,580 --> 01:26:32,179
next slide please

1745
01:26:34,320 --> 01:26:37,820
service flow of ipv4

1746
01:26:37,820 --> 01:26:41,340
IPv6 data player is identified by the

1747
01:26:41,340 --> 01:26:44,239
six type of IP headers

1748
01:26:44,239 --> 01:26:49,080
uh that is a The Source address that

1749
01:26:49,080 --> 01:26:51,420
initial address the support destination

1750
01:26:51,420 --> 01:26:54,960
part protocol and DHCP

1751
01:26:54,960 --> 01:26:56,460
and uh

1752
01:26:56,460 --> 01:27:00,060
optionally the websacker

1753
01:27:00,060 --> 01:27:04,560
security parameters index or IPv6 flow

1754
01:27:04,560 --> 01:27:06,739
level

1755
01:27:06,780 --> 01:27:09,860
next slide please

1756
01:27:12,739 --> 01:27:16,280
next slide please

1757
01:27:17,460 --> 01:27:20,460
foreign

1758
01:27:20,840 --> 01:27:24,179
capabilities Discovery objects defined

1759
01:27:24,179 --> 01:27:26,880
in this craft may be used in the net

1760
01:27:26,880 --> 01:27:29,120
networks with different

1761
01:27:29,120 --> 01:27:31,980
data plans and will have correlative

1762
01:27:31,980 --> 01:27:36,719
formats to comparatively with an example

1763
01:27:36,719 --> 01:27:40,080
Dana capabilities Discovery objects

1764
01:27:40,080 --> 01:27:43,460
could be encapsulated with the typical

1765
01:27:43,460 --> 01:27:46,679
here we had in place of the data

1766
01:27:46,679 --> 01:27:49,739
capability Discovery header next slide

1767
01:27:49,739 --> 01:27:52,159
please

1768
01:27:54,540 --> 01:27:56,340
next steps

1769
01:27:56,340 --> 01:27:59,880
the aggregation and operating sub layer

1770
01:27:59,880 --> 01:28:02,760
configurations could be collected in

1771
01:28:02,760 --> 01:28:05,159
encapsulation of different data plans

1772
01:28:05,159 --> 01:28:07,159
should be specified

1773
01:28:07,159 --> 01:28:09,960
sorry for the miswriting

1774
01:28:09,960 --> 01:28:11,940
commentary suggestions now always

1775
01:28:11,940 --> 01:28:12,840
welcome

1776
01:28:12,840 --> 01:28:15,659
okay thank you

1777
01:28:15,659 --> 01:28:19,260
okay questions comments

1778
01:28:19,260 --> 01:28:20,880
do you only think we should wish to say

1779
01:28:20,880 --> 01:28:24,420
this was detnet specifically

1780
01:28:24,420 --> 01:28:26,280
but

1781
01:28:26,280 --> 01:28:29,059
okay

1782
01:28:29,400 --> 01:28:34,679
so I think that's the the point where we

1783
01:28:34,679 --> 01:28:35,280
um

1784
01:28:35,280 --> 01:28:38,580
get to open mic and the original plan

1785
01:28:38,580 --> 01:28:40,560
was because to discuss whether we were

1786
01:28:40,560 --> 01:28:41,280
ready

1787
01:28:41,280 --> 01:28:43,980
to move into

1788
01:28:43,980 --> 01:28:44,780
um

1789
01:28:44,780 --> 01:28:46,400
uh

1790
01:28:46,400 --> 01:28:49,139
basically stop running the OD the open

1791
01:28:49,139 --> 01:28:51,179
design team meetings I think we've

1792
01:28:51,179 --> 01:28:53,460
probably concluded that we um

1793
01:28:53,460 --> 01:28:56,159
we are pleasured to do that

1794
01:28:56,159 --> 01:28:58,020
um there's been quite a lively

1795
01:28:58,020 --> 01:29:02,219
discussion on the uh in the chat room I

1796
01:29:02,219 --> 01:29:04,560
wonder whether we could usefully

1797
01:29:04,560 --> 01:29:07,380
um continue any of that face to face or

1798
01:29:07,380 --> 01:29:09,780
indeed whether my any of my co-chairs

1799
01:29:09,780 --> 01:29:11,280
have anything that they wish to say by

1800
01:29:11,280 --> 01:29:14,840
way of introduction to the open mic

1801
01:29:16,380 --> 01:29:18,300
lower for example

1802
01:29:18,300 --> 01:29:20,960
Carrick

1803
01:29:24,840 --> 01:29:28,260
we could um we could use the remaining

1804
01:29:28,260 --> 01:29:31,739
time to talk about uh

1805
01:29:31,739 --> 01:29:34,199
discussion of post stack data and where

1806
01:29:34,199 --> 01:29:37,199
does it sit there's some useful comments

1807
01:29:37,199 --> 01:29:39,500
in the chat

1808
01:29:39,500 --> 01:29:43,199
we could bring them forward that's

1809
01:29:43,199 --> 01:29:46,139
something you know the audience up to

1810
01:29:46,139 --> 01:29:47,540
the audience and

1811
01:29:47,540 --> 01:29:51,239
chairs but it's a it's a good topic to

1812
01:29:51,239 --> 01:29:55,519
continue on either now or later on

1813
01:29:57,420 --> 01:30:00,340
so I agree with Derek

1814
01:30:00,340 --> 01:30:02,340
[Music]

1815
01:30:02,340 --> 01:30:04,260
however I would like

1816
01:30:04,260 --> 01:30:07,679
Stuart if you can elaborate a little bit

1817
01:30:07,679 --> 01:30:09,120
on

1818
01:30:09,120 --> 01:30:12,500
what you said about the

1819
01:30:12,500 --> 01:30:17,340
complexity and mpls simplicity

1820
01:30:17,340 --> 01:30:18,780
um

1821
01:30:18,780 --> 01:30:24,000
to kick off the kick off the discussion

1822
01:30:24,000 --> 01:30:26,480
so

1823
01:30:27,420 --> 01:30:29,699
the model I've always had in my mind for

1824
01:30:29,699 --> 01:30:31,199
mpls I don't know whether it's everyone

1825
01:30:31,199 --> 01:30:32,820
else's but

1826
01:30:32,820 --> 01:30:36,060
is that the way that mpls works is that

1827
01:30:36,060 --> 01:30:39,120
you describe in this protocol stack a

1828
01:30:39,120 --> 01:30:41,040
vector to a block of code that you've

1829
01:30:41,040 --> 01:30:43,739
pre-positioned in the node

1830
01:30:43,739 --> 01:30:48,920
and that's an extremely efficient way of

1831
01:30:48,920 --> 01:30:53,120
processing actions in the data plane

1832
01:30:54,179 --> 01:30:57,420
see why we need to add ancillary data to

1833
01:30:57,420 --> 01:30:59,699
the uh to the packet there are many new

1834
01:30:59,699 --> 01:31:01,139
things that we want to do for example

1835
01:31:01,139 --> 01:31:03,600
around latency control is the one that I

1836
01:31:03,600 --> 01:31:06,179
think of Greg clearly thinks of ioam as

1837
01:31:06,179 --> 01:31:07,560
another one

1838
01:31:07,560 --> 01:31:09,300
so clearly we need to make a space for

1839
01:31:09,300 --> 01:31:10,860
that

1840
01:31:10,860 --> 01:31:15,300
but I am very worried when I see

1841
01:31:15,300 --> 01:31:19,440
uh us move away from this Vector to a

1842
01:31:19,440 --> 01:31:21,719
predefined action model

1843
01:31:21,719 --> 01:31:23,940
to a model that requires us to pick

1844
01:31:23,940 --> 01:31:25,800
apart

1845
01:31:25,800 --> 01:31:29,880
um components in the mpls header and

1846
01:31:29,880 --> 01:31:31,560
determine what we're going to do in what

1847
01:31:31,560 --> 01:31:34,739
order and I really am worried that we

1848
01:31:34,739 --> 01:31:38,100
have we are destroying our heritage not

1849
01:31:38,100 --> 01:31:40,980
because I have any sort of particular uh

1850
01:31:40,980 --> 01:31:43,020
you know Nostalgia about it but because

1851
01:31:43,020 --> 01:31:46,860
it was a very effective method that was

1852
01:31:46,860 --> 01:31:50,159
very Hardware friendly and I am I just

1853
01:31:50,159 --> 01:31:52,440
feeling a bit queasy that we are we are

1854
01:31:52,440 --> 01:31:54,360
sacrificing that and uh I'm not quite

1855
01:31:54,360 --> 01:31:56,219
sure where it ends and whether it ends

1856
01:31:56,219 --> 01:31:58,699
in tears

1857
01:32:04,679 --> 01:32:08,760
well that may be a minority opinion

1858
01:32:08,760 --> 01:32:11,900
kariti is going to speak

1859
01:32:14,900 --> 01:32:19,440
and then it'd be Tony yeah

1860
01:32:19,679 --> 01:32:22,860
we've got creature then Tony okay

1861
01:32:22,860 --> 01:32:24,360
um so I

1862
01:32:24,360 --> 01:32:26,760
I share your queasiness

1863
01:32:26,760 --> 01:32:28,800
I think there are a few

1864
01:32:28,800 --> 01:32:31,920
um features that we're putting into the

1865
01:32:31,920 --> 01:32:34,380
new M A approach

1866
01:32:34,380 --> 01:32:36,179
for example

1867
01:32:36,179 --> 01:32:37,400
um

1868
01:32:37,400 --> 01:32:40,440
processing at select nodes I think

1869
01:32:40,440 --> 01:32:43,440
that's something that we want to put in

1870
01:32:43,440 --> 01:32:44,219
there

1871
01:32:44,219 --> 01:32:46,500
just in case but we don't actually have

1872
01:32:46,500 --> 01:32:48,840
a use case for it quite yet

1873
01:32:48,840 --> 01:32:53,880
The Ordering of things that you process

1874
01:32:53,880 --> 01:32:55,560
um that's another thing that I think

1875
01:32:55,560 --> 01:32:58,080
we're just putting in there

1876
01:32:58,080 --> 01:33:01,139
um thinking that it would be useful

1877
01:33:01,139 --> 01:33:04,199
um the efficiency of the representation

1878
01:33:04,199 --> 01:33:07,199
I think has gone down and so that means

1879
01:33:07,199 --> 01:33:09,260
there's more to process

1880
01:33:09,260 --> 01:33:11,880
it's not like I have good answers for

1881
01:33:11,880 --> 01:33:15,780
every all of this but I think that's a

1882
01:33:15,780 --> 01:33:18,120
fruitful place for discussion going

1883
01:33:18,120 --> 01:33:19,080
forward

1884
01:33:19,080 --> 01:33:22,139
and I will have those discussions

1885
01:33:22,139 --> 01:33:25,860
but you're not alone okay I mean I'm not

1886
01:33:25,860 --> 01:33:27,360
ready to be disruptive or anything I

1887
01:33:27,360 --> 01:33:28,800
would genuinely like us to make rapid

1888
01:33:28,800 --> 01:33:31,380
progress I I just want to make sure that

1889
01:33:31,380 --> 01:33:33,239
we make rapid progress in a way that

1890
01:33:33,239 --> 01:33:34,920
doesn't destroy all this you know 20

1891
01:33:34,920 --> 01:33:36,540
years of really good work

1892
01:33:36,540 --> 01:33:38,880
Andrew you look like you wish to take ad

1893
01:33:38,880 --> 01:33:41,400
prerogative and go in in XD9 I will put

1894
01:33:41,400 --> 01:33:45,000
you next uh Tony no no let Tony go I'm

1895
01:33:45,000 --> 01:33:46,980
talking without my Eddie hat on all

1896
01:33:46,980 --> 01:33:50,300
right okay Tony then then Andrew

1897
01:33:50,300 --> 01:33:52,139
thank you

1898
01:33:52,139 --> 01:33:56,639
um it's past basic queasiness and broken

1899
01:33:56,639 --> 01:33:59,699
out to outright nausea

1900
01:33:59,699 --> 01:34:02,219
um so I agree

1901
01:34:02,219 --> 01:34:04,980
there is no question that what we've

1902
01:34:04,980 --> 01:34:08,639
created here is extremely complex

1903
01:34:08,639 --> 01:34:12,239
but once again this is the result of the

1904
01:34:12,239 --> 01:34:14,040
requirements that were put forth in our

1905
01:34:14,040 --> 01:34:15,420
discussions

1906
01:34:15,420 --> 01:34:18,360
and arbitrary ordering seemed to be

1907
01:34:18,360 --> 01:34:20,219
something that everyone wanted

1908
01:34:20,219 --> 01:34:22,980
if we can relax that we can dispense

1909
01:34:22,980 --> 01:34:25,920
with a great deal of this complexity

1910
01:34:25,920 --> 01:34:28,739
being able to ping-pong actions between

1911
01:34:28,739 --> 01:34:31,139
in stack and post stack back and forth

1912
01:34:31,139 --> 01:34:33,480
is insane

1913
01:34:33,480 --> 01:34:35,820
but that's what people wanted

1914
01:34:35,820 --> 01:34:38,460
so here's where we are

1915
01:34:38,460 --> 01:34:41,820
so if you want to reduce if you want to

1916
01:34:41,820 --> 01:34:43,980
reduce the complexity here the place to

1917
01:34:43,980 --> 01:34:46,199
start is to decide what requirements you

1918
01:34:46,199 --> 01:34:48,420
can relax

1919
01:34:48,420 --> 01:34:50,639
that sounds like a really good agenda

1920
01:34:50,639 --> 01:34:53,219
item for as soon as we start meeting on

1921
01:34:53,219 --> 01:34:56,100
on Thursdays uh to see which ones I mean

1922
01:34:56,100 --> 01:34:57,719
you won't get any pushbacks right I

1923
01:34:57,719 --> 01:34:58,920
think from the requirements draft

1924
01:34:58,920 --> 01:35:00,420
authors we just want to do the right

1925
01:35:00,420 --> 01:35:01,739
thing

1926
01:35:01,739 --> 01:35:04,099
Andrew

1927
01:35:04,199 --> 01:35:07,500
um so Andrew from liquid speaking

1928
01:35:07,500 --> 01:35:09,840
entirely in my own capacity and without

1929
01:35:09,840 --> 01:35:12,239
any AD hats on

1930
01:35:12,239 --> 01:35:16,980
I I can see how we can make all of this

1931
01:35:16,980 --> 01:35:20,280
work not a problem right

1932
01:35:20,280 --> 01:35:23,760
but I have a concern and this is where I

1933
01:35:23,760 --> 01:35:26,820
kind of almost Echo what you said that

1934
01:35:26,820 --> 01:35:29,460
because of the complexity here we might

1935
01:35:29,460 --> 01:35:31,199
get all this to work in the long term

1936
01:35:31,199 --> 01:35:33,120
there's going to be a point

1937
01:35:33,120 --> 01:35:35,540
where people are implementing this

1938
01:35:35,540 --> 01:35:38,219
implementations and new Etc and that

1939
01:35:38,219 --> 01:35:40,620
complexity is such

1940
01:35:40,620 --> 01:35:43,320
that I feel that we could well go

1941
01:35:43,320 --> 01:35:46,620
through a very buggy period

1942
01:35:46,620 --> 01:35:49,020
because of that complexity and the

1943
01:35:49,020 --> 01:35:50,760
danger to that

1944
01:35:50,760 --> 01:35:53,400
is that if you give something an

1945
01:35:53,400 --> 01:35:55,980
operator and something to an operator

1946
01:35:55,980 --> 01:35:57,900
and it doesn't work and it does have

1947
01:35:57,900 --> 01:36:00,920
bugs because of the complexity Etc

1948
01:36:00,920 --> 01:36:03,480
you may steer them away from it and once

1949
01:36:03,480 --> 01:36:05,699
there you lost them they'll never come

1950
01:36:05,699 --> 01:36:07,980
back again that's just the way that it

1951
01:36:07,980 --> 01:36:09,120
works

1952
01:36:09,120 --> 01:36:11,280
that's what concerns me about the

1953
01:36:11,280 --> 01:36:14,100
complexity here that

1954
01:36:14,100 --> 01:36:16,440
on the implementation side this is

1955
01:36:16,440 --> 01:36:19,980
complex enough that it could be buggy to

1956
01:36:19,980 --> 01:36:22,520
a point of being broken for a long time

1957
01:36:22,520 --> 01:36:26,159
and that could end up killing it

1958
01:36:26,159 --> 01:36:27,659
entirely

1959
01:36:27,659 --> 01:36:30,060
yeah I'm not convinced that any of us

1960
01:36:30,060 --> 01:36:31,560
are clever enough to figure out whether

1961
01:36:31,560 --> 01:36:33,179
we've got this right it's so complicated

1962
01:36:33,179 --> 01:36:34,320
yeah

1963
01:36:34,320 --> 01:36:35,940
exactly and and I think

1964
01:36:35,940 --> 01:36:38,520
so that's where my concern comes is

1965
01:36:38,520 --> 01:36:41,400
about that complexity and saying that if

1966
01:36:41,400 --> 01:36:43,860
we're not sure that it's going to work

1967
01:36:43,860 --> 01:36:46,139
let's be very sure before we push it

1968
01:36:46,139 --> 01:36:48,840
it's breakage yeah we can kind of make

1969
01:36:48,840 --> 01:36:50,580
it work later but by that stage we've

1970
01:36:50,580 --> 01:36:51,840
lost the operators you're never getting

1971
01:36:51,840 --> 01:36:53,699
them back

1972
01:36:53,699 --> 01:36:55,380
yeah Karrueche I think you want another

1973
01:36:55,380 --> 01:36:57,679
go

1974
01:36:58,380 --> 01:37:03,719
yeah Korea compeller so um I would I

1975
01:37:03,719 --> 01:37:06,120
would propose something at this point we

1976
01:37:06,120 --> 01:37:09,239
were in a place where we had 16 Reserve

1977
01:37:09,239 --> 01:37:11,480
labels not counting the standard ones

1978
01:37:11,480 --> 01:37:14,520
and we had used up eight of them and

1979
01:37:14,520 --> 01:37:16,080
there was this concern

1980
01:37:16,080 --> 01:37:17,940
how quickly are we going to use up the

1981
01:37:17,940 --> 01:37:19,560
rest because they're all these functions

1982
01:37:19,560 --> 01:37:20,820
that we wanted

1983
01:37:20,820 --> 01:37:23,159
and they were all initially looking for

1984
01:37:23,159 --> 01:37:25,860
independent code points

1985
01:37:25,860 --> 01:37:28,860
we're now in a place where we we have

1986
01:37:28,860 --> 01:37:32,040
eight Reserve labels left still and

1987
01:37:32,040 --> 01:37:35,940
we'll burn one for this particular new m

1988
01:37:35,940 --> 01:37:37,920
a indicator

1989
01:37:37,920 --> 01:37:40,560
and that will Encompass several

1990
01:37:40,560 --> 01:37:46,080
functions maybe 10 maybe 20 you know and

1991
01:37:46,080 --> 01:37:49,440
why don't we take the approach

1992
01:37:49,440 --> 01:37:52,620
we're stepping into this new

1993
01:37:52,620 --> 01:37:57,179
Waters and let's take a

1994
01:37:57,179 --> 01:37:59,100
keep the problem much more constrained

1995
01:37:59,100 --> 01:38:00,239
remove

1996
01:38:00,239 --> 01:38:02,159
um to Tony's point which I want to Echo

1997
01:38:02,159 --> 01:38:04,920
remove a lot of the requirements and say

1998
01:38:04,920 --> 01:38:07,380
how does this work and what does the

1999
01:38:07,380 --> 01:38:09,659
implementation look like and if we then

2000
01:38:09,659 --> 01:38:12,000
come back and say oh we really needed

2001
01:38:12,000 --> 01:38:13,620
that ordering

2002
01:38:13,620 --> 01:38:16,199
we're born one more we have eight and

2003
01:38:16,199 --> 01:38:17,960
each of those can do multiple things

2004
01:38:17,960 --> 01:38:21,179
once we've gone past the idea that one

2005
01:38:21,179 --> 01:38:23,520
Reserve level does one function

2006
01:38:23,520 --> 01:38:25,620
we don't have to boil the ocean with the

2007
01:38:25,620 --> 01:38:27,239
first one we do

2008
01:38:27,239 --> 01:38:30,480
so let's you know put our toe in the

2009
01:38:30,480 --> 01:38:32,280
shallow end of the cool

2010
01:38:32,280 --> 01:38:35,699
and not pee in it right away

2011
01:38:35,699 --> 01:38:37,500
apparently we could raise the tone of

2012
01:38:37,500 --> 01:38:40,580
the discussion here

2013
01:38:41,940 --> 01:38:44,900
laughs

2014
01:38:45,980 --> 01:38:50,120
okay I think it's how you next

2015
01:38:51,600 --> 01:38:54,300
is from future week I like to have

2016
01:38:54,300 --> 01:38:57,120
several comments regarding the ordering

2017
01:38:57,120 --> 01:39:00,960
issue uh I think so far we are still a

2018
01:39:00,960 --> 01:39:04,280
lack of a tangible use cases

2019
01:39:04,280 --> 01:39:10,380
on to ask for uh actual ordering uh the

2020
01:39:10,380 --> 01:39:11,699
use cases

2021
01:39:11,699 --> 01:39:15,840
uh the applications so uh I I think we

2022
01:39:15,840 --> 01:39:18,480
we better Force to find such a solid

2023
01:39:18,480 --> 01:39:22,800
case and before we actually make a

2024
01:39:22,800 --> 01:39:24,900
design mechanic mechanism to support

2025
01:39:24,900 --> 01:39:26,120
that

2026
01:39:26,120 --> 01:39:30,659
and secondly uh right oh I see some

2027
01:39:30,659 --> 01:39:33,179
people comment that we we might make it

2028
01:39:33,179 --> 01:39:36,360
simple just to uh

2029
01:39:36,360 --> 01:39:40,380
makes the ISD action in stack actions uh

2030
01:39:40,380 --> 01:39:44,100
to be executed before the PSD but I

2031
01:39:44,100 --> 01:39:46,679
don't think that's a reasonable

2032
01:39:46,679 --> 01:39:49,679
um assumption because the reason we put

2033
01:39:49,679 --> 01:39:52,320
our action in stack is not because it's

2034
01:39:52,320 --> 01:39:55,739
a logically it should be executed uh

2035
01:39:55,739 --> 01:39:59,280
first earlier uh it's might be because

2036
01:39:59,280 --> 01:40:02,760
it's just don't it doesn't ask for a

2037
01:40:02,760 --> 01:40:05,880
very big uh data data part because we

2038
01:40:05,880 --> 01:40:09,300
just simply cannot encode uh a lot of

2039
01:40:09,300 --> 01:40:12,300
data in in the label stack if it

2040
01:40:12,300 --> 01:40:14,880
requires a lot of ancillary data for

2041
01:40:14,880 --> 01:40:17,280
this action we probably the better place

2042
01:40:17,280 --> 01:40:19,620
to put it in the post stack so that's

2043
01:40:19,620 --> 01:40:22,080
the reason uh why we have this instack

2044
01:40:22,080 --> 01:40:23,760
and post stack separation not because

2045
01:40:23,760 --> 01:40:26,460
their priority or importance but because

2046
01:40:26,460 --> 01:40:30,420
the data they required so that means

2047
01:40:30,420 --> 01:40:33,540
in which order we should execute them

2048
01:40:33,540 --> 01:40:36,719
it's a it doesn't matter where it is

2049
01:40:36,719 --> 01:40:39,060
if there is inherently some order

2050
01:40:39,060 --> 01:40:40,500
between them

2051
01:40:40,500 --> 01:40:43,980
so that's my second point so so on

2052
01:40:43,980 --> 01:40:46,620
combined we I think we we need uh to

2053
01:40:46,620 --> 01:40:49,260
further consider because in many other

2054
01:40:49,260 --> 01:40:51,380
scenarios like the uh

2055
01:40:51,380 --> 01:40:55,560
IPv6 uh extension header people also uh

2056
01:40:55,560 --> 01:40:58,739
are proposing new uh applications new

2057
01:40:58,739 --> 01:41:02,100
use cases but uh nowhere else I I'm

2058
01:41:02,100 --> 01:41:03,600
aware that some people are talking about

2059
01:41:03,600 --> 01:41:05,880
this that enforce some order in the

2060
01:41:05,880 --> 01:41:08,940
protocol design I think for each use

2061
01:41:08,940 --> 01:41:12,060
case they have a uh the schematics of

2062
01:41:12,060 --> 01:41:16,320
the use case is clearly defined uh when

2063
01:41:16,320 --> 01:41:20,820
is uh it should be uh executed and

2064
01:41:20,820 --> 01:41:23,699
what's the meaning of each data is clear

2065
01:41:23,699 --> 01:41:27,360
defined by the use case itself so

2066
01:41:27,360 --> 01:41:30,420
um I think somehow it's better for the

2067
01:41:30,420 --> 01:41:32,820
just for the Implement Mentor when they

2068
01:41:32,820 --> 01:41:36,480
uh have this multiple actions appear in

2069
01:41:36,480 --> 01:41:38,179
the same package they should

2070
01:41:38,179 --> 01:41:40,199
automatically understand how to deal

2071
01:41:40,199 --> 01:41:42,420
with them and but no it's just a

2072
01:41:42,420 --> 01:41:45,960
dictated by some ordering in the package

2073
01:41:45,960 --> 01:41:49,440
itself thank you how are you Tony remote

2074
01:41:49,440 --> 01:41:52,699
then Adrian in person

2075
01:41:52,920 --> 01:41:54,360
I'd like to respond to how you use

2076
01:41:54,360 --> 01:41:55,619
comment

2077
01:41:55,619 --> 01:41:58,500
um we went over why we needed ordering

2078
01:41:58,500 --> 01:42:00,719
in the open design team meetings and we

2079
01:42:00,719 --> 01:42:03,480
went over that several times I I urge

2080
01:42:03,480 --> 01:42:06,900
you to listen to those recordings again

2081
01:42:06,900 --> 01:42:09,179
um that was there's not much question

2082
01:42:09,179 --> 01:42:12,060
there the only question on the table

2083
01:42:12,060 --> 01:42:14,100
really is whether we want to backfill

2084
01:42:14,100 --> 01:42:16,980
from that requirement at this point

2085
01:42:16,980 --> 01:42:20,900
um so I'll leave that to you

2086
01:42:22,400 --> 01:42:26,699
Adrian uh Adrian Farrell um so to to

2087
01:42:26,699 --> 01:42:28,440
stretch the analogy a little bit further

2088
01:42:28,440 --> 01:42:30,719
I I find myself one of the passengers on

2089
01:42:30,719 --> 01:42:33,179
the bus screaming as it heads towards

2090
01:42:33,179 --> 01:42:35,219
the uh Cliff Edge

2091
01:42:35,219 --> 01:42:37,260
I like the people on the bus they're my

2092
01:42:37,260 --> 01:42:40,320
friends I like the color of the bus

2093
01:42:40,320 --> 01:42:42,659
um but I would really like to not go

2094
01:42:42,659 --> 01:42:46,500
over the edge uh and and so yeah my I

2095
01:42:46,500 --> 01:42:49,080
share Tony's nausea I think

2096
01:42:49,080 --> 01:42:51,239
um and I wonder if I've spotted a micro

2097
01:42:51,239 --> 01:42:53,340
loop

2098
01:42:53,340 --> 01:42:56,159
um I'm looking at the uh the abstract of

2099
01:42:56,159 --> 01:42:58,320
the requirements document and it says

2100
01:42:58,320 --> 01:43:00,960
the requirements are derived from a

2101
01:43:00,960 --> 01:43:04,380
number of proposals for additions

2102
01:43:04,380 --> 01:43:08,159
and it sounds to me that maybe what we

2103
01:43:08,159 --> 01:43:10,800
are doing is talking ourselves into

2104
01:43:10,800 --> 01:43:13,500
believing the requirements as Engineers

2105
01:43:13,500 --> 01:43:15,719
who are building the solutions that

2106
01:43:15,719 --> 01:43:19,199
address the requirements that we are uh

2107
01:43:19,199 --> 01:43:20,639
you know and and round and round and

2108
01:43:20,639 --> 01:43:22,280
round and

2109
01:43:22,280 --> 01:43:23,880
possibly

2110
01:43:23,880 --> 01:43:26,520
when uh and and I say this from not

2111
01:43:26,520 --> 01:43:29,340
having participated in a design team

2112
01:43:29,340 --> 01:43:32,040
um possibly we're not standing back far

2113
01:43:32,040 --> 01:43:32,820
enough

2114
01:43:32,820 --> 01:43:36,139
when we look at the requirements uh uh

2115
01:43:36,139 --> 01:43:38,460
because we're saying this is what we

2116
01:43:38,460 --> 01:43:39,659
could do

2117
01:43:39,659 --> 01:43:41,940
here are our requirements rather than

2118
01:43:41,940 --> 01:43:45,060
this is what we need to do

2119
01:43:45,060 --> 01:43:47,219
and and maybe we just don't know what we

2120
01:43:47,219 --> 01:43:48,900
need to do so we're inventing something

2121
01:43:48,900 --> 01:43:51,119
that might be useful in the future

2122
01:43:51,119 --> 01:43:54,239
and well that's that's yeah interesting

2123
01:43:54,239 --> 01:43:57,179
so I'm going to modify the Q order so I

2124
01:43:57,179 --> 01:43:59,940
don't know let Matthew speak from the

2125
01:43:59,940 --> 01:44:02,159
requirements uh thing and maybe you hang

2126
01:44:02,159 --> 01:44:03,900
around in case how you takes us in the

2127
01:44:03,900 --> 01:44:06,480
same place so massive watching Nokia

2128
01:44:06,480 --> 01:44:09,239
um yeah I agree Adrian um there was a

2129
01:44:09,239 --> 01:44:11,219
little bit of

2130
01:44:11,219 --> 01:44:12,600
there's a little bit of where do we

2131
01:44:12,600 --> 01:44:13,739
start with the requirements when we

2132
01:44:13,739 --> 01:44:14,940
started with the requirements draft oh

2133
01:44:14,940 --> 01:44:16,440
let's look at the solutions that have

2134
01:44:16,440 --> 01:44:19,080
gone into the into uh

2135
01:44:19,080 --> 01:44:21,659
um the uh the open design team which is

2136
01:44:21,659 --> 01:44:24,060
a bit back to fun to be honest

2137
01:44:24,060 --> 01:44:26,219
the requirements in my view should come

2138
01:44:26,219 --> 01:44:27,719
from the use cases not from the

2139
01:44:27,719 --> 01:44:29,400
solutions the solution as a result of

2140
01:44:29,400 --> 01:44:32,040
looking at the requirements

2141
01:44:32,040 --> 01:44:35,400
um and but the problem was the the use

2142
01:44:35,400 --> 01:44:37,560
cases weren't sufficiently documented at

2143
01:44:37,560 --> 01:44:38,880
the time

2144
01:44:38,880 --> 01:44:40,560
so maybe we need to go back to the use

2145
01:44:40,560 --> 01:44:42,960
cases and and go back to the

2146
01:44:42,960 --> 01:44:45,360
requirements and and re redo them a bit

2147
01:44:45,360 --> 01:44:47,100
and look through what's really needed

2148
01:44:47,100 --> 01:44:49,440
for the use cases we have we and there

2149
01:44:49,440 --> 01:44:50,760
was also a lot of discussion about well

2150
01:44:50,760 --> 01:44:52,199
maybe we should do things because you

2151
01:44:52,199 --> 01:44:53,460
never know in the future maybe we'll

2152
01:44:53,460 --> 01:44:54,960
need it or maybe we'll be able to

2153
01:44:54,960 --> 01:44:57,239
support this on future Hardware

2154
01:44:57,239 --> 01:44:59,460
but it's very difficult to design for

2155
01:44:59,460 --> 01:45:02,280
for the unknown

2156
01:45:02,280 --> 01:45:04,320
well it would be it would be we'd save

2157
01:45:04,320 --> 01:45:05,760
an awful lot less money spending a

2158
01:45:05,760 --> 01:45:07,380
little tiny bit of time here getting

2159
01:45:07,380 --> 01:45:09,540
this right than discovering we've got it

2160
01:45:09,540 --> 01:45:13,199
all wrong yeah right uh so running order

2161
01:45:13,199 --> 01:45:18,360
how you you are next then Tony then G

2162
01:45:18,360 --> 01:45:21,659
yeah some uh respond to Tony that uh

2163
01:45:21,659 --> 01:45:24,239
certainly I I'm aware of the discussions

2164
01:45:24,239 --> 01:45:27,260
uh in the open design team about this uh

2165
01:45:27,260 --> 01:45:29,699
ordinary issue but uh I've never

2166
01:45:29,699 --> 01:45:33,900
satisfied with uh you know the cases or

2167
01:45:33,900 --> 01:45:36,780
examples people race they are one of the

2168
01:45:36,780 --> 01:45:39,900
example is a probably for ordering the

2169
01:45:39,900 --> 01:45:42,380
slicing and the iom

2170
01:45:42,380 --> 01:45:46,080
applications but I also explained

2171
01:45:46,080 --> 01:45:49,560
actually it doesn't matter because what

2172
01:45:49,560 --> 01:45:52,139
data to be classed for uh collected for

2173
01:45:52,139 --> 01:45:55,260
by iom the semantics available Define it

2174
01:45:55,260 --> 01:45:57,500
really doesn't matter how you put this

2175
01:45:57,500 --> 01:46:00,960
two uh extension headers or cellular

2176
01:46:00,960 --> 01:46:03,179
datas or what's their order is in the

2177
01:46:03,179 --> 01:46:05,639
packet you will again your guaranteed

2178
01:46:05,639 --> 01:46:07,560
you are required to

2179
01:46:07,560 --> 01:46:11,460
um to do them properly so in this case I

2180
01:46:11,460 --> 01:46:13,980
don't think that's a valid example and

2181
01:46:13,980 --> 01:46:16,920
yeah you have to see some other real

2182
01:46:16,920 --> 01:46:18,119
examples

2183
01:46:18,119 --> 01:46:20,719
I think

2184
01:46:22,880 --> 01:46:26,360
I assume

2185
01:46:26,699 --> 01:46:29,280
um so I'm sorry how are you that's there

2186
01:46:29,280 --> 01:46:31,860
is no assumption that we can make that

2187
01:46:31,860 --> 01:46:33,960
you would automatically do it in the

2188
01:46:33,960 --> 01:46:35,460
right order

2189
01:46:35,460 --> 01:46:37,860
um it seems like if we say any

2190
01:46:37,860 --> 01:46:39,659
implementation can do anything in any

2191
01:46:39,659 --> 01:46:42,300
order uh we exactly end up in the

2192
01:46:42,300 --> 01:46:44,280
problem where you could do any things

2193
01:46:44,280 --> 01:46:46,679
anything you wanted

2194
01:46:46,679 --> 01:46:48,780
um this is also further compounded by

2195
01:46:48,780 --> 01:46:51,000
the fact that we have agreed that we can

2196
01:46:51,000 --> 01:46:54,060
have private actions uh and we have no

2197
01:46:54,060 --> 01:46:56,280
idea what the semantics of those private

2198
01:46:56,280 --> 01:46:57,420
actions are

2199
01:46:57,420 --> 01:46:59,520
how do we

2200
01:46:59,520 --> 01:47:02,880
order private actions in ways that we

2201
01:47:02,880 --> 01:47:04,199
don't understand because we can't

2202
01:47:04,199 --> 01:47:06,360
understand the semantics

2203
01:47:06,360 --> 01:47:09,119
so either we say the the ordering is

2204
01:47:09,119 --> 01:47:10,920
completely irrelevant

2205
01:47:10,920 --> 01:47:13,440
or we say that we have to have some kind

2206
01:47:13,440 --> 01:47:15,840
of ordering and we have to specify it

2207
01:47:15,840 --> 01:47:18,239
and if we want to specify and have

2208
01:47:18,239 --> 01:47:20,520
General ordering well we end up back

2209
01:47:20,520 --> 01:47:23,040
right where we are with full complexity

2210
01:47:23,040 --> 01:47:27,199
so takes our choices

2211
01:47:27,719 --> 01:47:30,440
Jade

2212
01:47:32,520 --> 01:47:34,980
hi what you doing from Holly I fully

2213
01:47:34,980 --> 01:47:36,960
agree with what Adrian and the message

2214
01:47:36,960 --> 01:47:39,420
mentioned that we need to maybe step

2215
01:47:39,420 --> 01:47:41,699
back and take a look at the requirement

2216
01:47:41,699 --> 01:47:46,199
okay and to me actually the high the top

2217
01:47:46,199 --> 01:47:49,380
priority requirement is to have the

2218
01:47:49,380 --> 01:47:51,780
consider the backward compatibility so

2219
01:47:51,780 --> 01:47:54,300
that we are sure that we will not break

2220
01:47:54,300 --> 01:47:58,199
this network and we had to have a chance

2221
01:47:58,199 --> 01:48:01,440
to break it and recover it again and

2222
01:48:01,440 --> 01:48:03,600
regarding the like the requirement on

2223
01:48:03,600 --> 01:48:05,580
the ordering I think there's some

2224
01:48:05,580 --> 01:48:07,980
discussion that maybe we don't need to

2225
01:48:07,980 --> 01:48:11,040
like a very flexible ordering

2226
01:48:11,040 --> 01:48:14,100
specification but just some of the

2227
01:48:14,100 --> 01:48:16,800
actions can have a default ordering by

2228
01:48:16,800 --> 01:48:20,280
themselves regardless of the position in

2229
01:48:20,280 --> 01:48:21,300
the packet

2230
01:48:21,300 --> 01:48:24,659
and also if we want to uh

2231
01:48:24,659 --> 01:48:27,420
really introduce some flexibility we

2232
01:48:27,420 --> 01:48:29,280
need some use cases to support it so

2233
01:48:29,280 --> 01:48:32,219
that we don't over engineer the solution

2234
01:48:32,219 --> 01:48:34,260
thanks thank you

2235
01:48:34,260 --> 01:48:37,159
back to you again

2236
01:48:42,360 --> 01:48:45,179
so I think one one thing that might help

2237
01:48:45,179 --> 01:48:47,100
as well as simplifying the requirements

2238
01:48:47,100 --> 01:48:49,199
based on the use cases is maybe making

2239
01:48:49,199 --> 01:48:50,219
the

2240
01:48:50,219 --> 01:48:51,900
the architect or the framework or

2241
01:48:51,900 --> 01:48:52,860
architecture a little bit more

2242
01:48:52,860 --> 01:48:54,540
prescriptive a bit more layered a bit

2243
01:48:54,540 --> 01:48:58,500
more clear as to what exactly interacts

2244
01:48:58,500 --> 01:48:59,699
with what

2245
01:48:59,699 --> 01:49:01,860
in in this so at the moment I feel I

2246
01:49:01,860 --> 01:49:03,600
have to go to the solutions to look at

2247
01:49:03,600 --> 01:49:05,100
how all the bits work together and that

2248
01:49:05,100 --> 01:49:07,980
seems to be jumping too far

2249
01:49:07,980 --> 01:49:10,199
yeah I met a picture of how everything

2250
01:49:10,199 --> 01:49:12,360
everything grows together to see if it's

2251
01:49:12,360 --> 01:49:14,100
really simple or not

2252
01:49:14,100 --> 01:49:16,380
Tony you might want to stay there

2253
01:49:16,380 --> 01:49:19,159
Matthew because Tony's going to speak

2254
01:49:19,159 --> 01:49:22,920
uh Matthew please send text I'm willing

2255
01:49:22,920 --> 01:49:24,480
to entertain anything

2256
01:49:24,480 --> 01:49:26,400
thanks Tony yeah

2257
01:49:26,400 --> 01:49:28,380
yeah so maybe this maybe the three of us

2258
01:49:28,380 --> 01:49:30,239
need a discussion on the telephone to

2259
01:49:30,239 --> 01:49:34,218
try and sort of speed up getting there

2260
01:49:34,260 --> 01:49:36,600
or anyone else you know wants to join so

2261
01:49:36,600 --> 01:49:37,980
that's typically what we've done I mean

2262
01:49:37,980 --> 01:49:39,600
just just in some previous kind of

2263
01:49:39,600 --> 01:49:41,340
projects that followed this this sort of

2264
01:49:41,340 --> 01:49:43,800
model in the past like MP STP yeah we

2265
01:49:43,800 --> 01:49:47,400
had a fairly prescriptive architecture

2266
01:49:47,400 --> 01:49:49,139
well that's been the history of all the

2267
01:49:49,139 --> 01:49:51,719
pseudo wire designers stuff we were

2268
01:49:51,719 --> 01:49:52,980
quite prescriptive in the architecture

2269
01:49:52,980 --> 01:49:54,119
yeah

2270
01:49:54,119 --> 01:49:56,280
um and maybe maybe that's sort of what

2271
01:49:56,280 --> 01:50:00,060
we write would help here

2272
01:50:00,060 --> 01:50:03,840
okay and no nobody else in the queue

2273
01:50:03,840 --> 01:50:05,940
um do any of the chairs wish to make any

2274
01:50:05,940 --> 01:50:08,780
closing remarks

2275
01:50:09,239 --> 01:50:12,780
lower Carrick

2276
01:50:16,380 --> 01:50:18,800
thanks for every for the good uh

2277
01:50:18,800 --> 01:50:21,300
discussions and

2278
01:50:21,300 --> 01:50:24,420
everybody attending

2279
01:50:24,420 --> 01:50:26,600
lower

2280
01:50:26,600 --> 01:50:29,159
not much thank you very much for

2281
01:50:29,159 --> 01:50:31,020
participating if you're an interesting

2282
01:50:31,020 --> 01:50:34,380
discussion and I guess the shares will

2283
01:50:34,380 --> 01:50:38,040
have a coordination meeting on Tuesday I

2284
01:50:38,040 --> 01:50:41,100
will send out an invite to that

2285
01:50:41,100 --> 01:50:43,940
and then probably a

2286
01:50:43,940 --> 01:50:48,019
design team meeting on Thursday

2287
01:50:48,719 --> 01:50:51,060
right I thank you I thank everyone for

2288
01:50:51,060 --> 01:50:54,060
their participation and I think we've

2289
01:50:54,060 --> 01:50:55,800
moved on a bit from where we were

2290
01:50:55,800 --> 01:50:58,619
hopefully we will rapidly come to a uh

2291
01:50:58,619 --> 01:51:00,900
to a conclusion having

2292
01:51:00,900 --> 01:51:03,239
you know taking in in mind what we what

2293
01:51:03,239 --> 01:51:05,040
we've learned getting this far on the

2294
01:51:05,040 --> 01:51:07,219
journey

2295
01:51:11,940 --> 01:51:13,619
right

2296
01:51:13,619 --> 01:51:16,400
so thank you

2297
01:51:55,370 --> 01:51:58,858
[Music]

2298
01:52:11,280 --> 01:52:13,400
thank you

