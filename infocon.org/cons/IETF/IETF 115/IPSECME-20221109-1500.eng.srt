1
00:00:05,720 --> 00:00:09,120
not positively

2
00:00:09,120 --> 00:00:13,139
okay my clock just turned to 1500 so I

3
00:00:13,139 --> 00:00:14,400
think we are going to be starting this

4
00:00:14,400 --> 00:00:16,320
is ipsec ma working group I'm

5
00:00:16,320 --> 00:00:19,619
terracividen and my co-chair is there in

6
00:00:19,619 --> 00:00:21,240
the big screen

7
00:00:21,240 --> 00:00:22,920
you can say hi probably oh you could

8
00:00:22,920 --> 00:00:25,740
just be okay that's fine all right so we

9
00:00:25,740 --> 00:00:27,720
have a faithful agenda today we have

10
00:00:27,720 --> 00:00:31,580
five minutes overtime in that agenda so

11
00:00:33,239 --> 00:00:35,280
get closer to it and take the mask off

12
00:00:35,280 --> 00:00:37,559
so it makes it easier all right so just

13
00:00:37,559 --> 00:00:39,420
a note well you'll probably see have

14
00:00:39,420 --> 00:00:41,160
seen it several times already

15
00:00:41,160 --> 00:00:43,860
and

16
00:00:43,860 --> 00:00:47,219
and we have already have two note takers

17
00:00:47,219 --> 00:00:48,960
that's fine and there's links for the

18
00:00:48,960 --> 00:00:51,719
you know meteco and notepad if anybody

19
00:00:51,719 --> 00:00:52,980
else go to that page and you can

20
00:00:52,980 --> 00:00:54,539
actually add especially if you are

21
00:00:54,539 --> 00:00:57,420
making comments on the uh you know uh

22
00:00:57,420 --> 00:00:59,219
microphone just go there and check out

23
00:00:59,219 --> 00:01:01,079
their comments are properly or or type

24
00:01:01,079 --> 00:01:02,760
them in you can even type them in before

25
00:01:02,760 --> 00:01:04,440
you actually make the comments that

26
00:01:04,440 --> 00:01:06,360
makes you very

27
00:01:06,360 --> 00:01:10,020
all right so we have a full agenda uh

28
00:01:10,020 --> 00:01:13,500
any comments on the agenda or any I I

29
00:01:13,500 --> 00:01:15,000
pretty sure we are not going to be

30
00:01:15,000 --> 00:01:16,619
getting to the last two items which are

31
00:01:16,619 --> 00:01:19,380
if time permits because there are so

32
00:01:19,380 --> 00:01:22,380
many other items in the before but

33
00:01:22,380 --> 00:01:24,840
any other any comments on the agenda any

34
00:01:24,840 --> 00:01:27,180
bashing

35
00:01:27,180 --> 00:01:30,600
note we go forward so our current status

36
00:01:30,600 --> 00:01:33,420
is so that we have four four drafts that

37
00:01:33,420 --> 00:01:35,340
in the RFC editor queue that should be

38
00:01:35,340 --> 00:01:38,100
out at quite soon I guess

39
00:01:38,100 --> 00:01:40,400
and uh

40
00:01:40,400 --> 00:01:42,479
let me see

41
00:01:42,479 --> 00:01:45,540
okay and then we have two documents that

42
00:01:45,540 --> 00:01:48,000
are still in the IST or ITF last call

43
00:01:48,000 --> 00:01:51,479
one still waiting for the chair review

44
00:01:51,479 --> 00:01:54,540
and write up uh Paul is complaining

45
00:01:54,540 --> 00:01:56,820
about that all the time

46
00:01:56,820 --> 00:01:57,899
yeah

47
00:01:57,899 --> 00:02:00,600
uh Paul voters yes I would like to

48
00:02:00,600 --> 00:02:01,860
complain about that because it actually

49
00:02:01,860 --> 00:02:03,720
has been in the

50
00:02:03,720 --> 00:02:05,759
um the shepherd's review was was added

51
00:02:05,759 --> 00:02:09,060
in March it is now November

52
00:02:09,060 --> 00:02:14,540
yeah I will do it after ITF yeah

53
00:02:15,020 --> 00:02:18,000
yeah yeah

54
00:02:18,000 --> 00:02:20,220
but um yeah please do this in the next

55
00:02:20,220 --> 00:02:22,260
couple of weeks all right nothing next

56
00:02:22,260 --> 00:02:23,400
week but in

57
00:02:23,400 --> 00:02:26,819
Colorado after that go next week sorry

58
00:02:26,819 --> 00:02:28,260
you Mumble there could you be more

59
00:02:28,260 --> 00:02:31,160
specific and clear

60
00:02:31,800 --> 00:02:33,660
I will try to do it before the end of

61
00:02:33,660 --> 00:02:35,180
the year

62
00:02:35,180 --> 00:02:39,080
Valerie you have some comments

63
00:02:43,319 --> 00:02:47,340
P2 is uh in the last call too but this

64
00:02:47,340 --> 00:02:49,379
last call is lasting for I don't know

65
00:02:49,379 --> 00:02:52,860
more than half a year and uh it is still

66
00:02:52,860 --> 00:02:55,500
waiting for more reviews and I remember

67
00:02:55,500 --> 00:03:00,120
that uh a couple ATF uh meetings ago a

68
00:03:00,120 --> 00:03:02,280
few people volunteered to provide the

69
00:03:02,280 --> 00:03:04,980
review for this draft and I just

70
00:03:04,980 --> 00:03:07,019
determined it's a friendly reminder for

71
00:03:07,019 --> 00:03:10,260
those people who volunteer it that it is

72
00:03:10,260 --> 00:03:12,840
still not too late

73
00:03:12,840 --> 00:03:16,200
yes so g i question two there were

74
00:03:16,200 --> 00:03:18,360
several people who one of those are

75
00:03:18,360 --> 00:03:20,519
actually commenting there well other

76
00:03:20,519 --> 00:03:22,800
things that are not done a promising to

77
00:03:22,800 --> 00:03:25,260
make a review and haven't done that so

78
00:03:25,260 --> 00:03:27,300
yes that actually would be and I it's

79
00:03:27,300 --> 00:03:29,940
also in my list to do the review one

80
00:03:29,940 --> 00:03:31,319
more review and then push it Forward

81
00:03:31,319 --> 00:03:33,120
regardless if you get more reviews or

82
00:03:33,120 --> 00:03:37,019
not but I hope to get more of those uh

83
00:03:37,019 --> 00:03:38,640
there's this working group last call

84
00:03:38,640 --> 00:03:41,640
First ADI which I completely forget so I

85
00:03:41,640 --> 00:03:43,980
will actually push that one to be say I

86
00:03:43,980 --> 00:03:46,019
think we are going to be pushing that

87
00:03:46,019 --> 00:03:48,000
one out and we have a couple of comments

88
00:03:48,000 --> 00:03:50,459
waiting for the you know adoption course

89
00:03:50,459 --> 00:03:52,860
which I think are also going to happen

90
00:03:52,860 --> 00:03:55,739
Okay Valerie more comments uh yes just

91
00:03:55,739 --> 00:03:58,680
forget I think that also knows is quite

92
00:03:58,680 --> 00:04:01,500
ready for last call because uh I don't

93
00:04:01,500 --> 00:04:05,340
know I I read it recently I uh actually

94
00:04:05,340 --> 00:04:07,920
I don't see any issues and probably if

95
00:04:07,920 --> 00:04:11,700
you uh if the draft is a last call was

96
00:04:11,700 --> 00:04:14,099
issued uh more of you will be for this

97
00:04:14,099 --> 00:04:16,918
draft and yeah I'm not planning to

98
00:04:16,918 --> 00:04:19,620
change it anymore so all right I I don't

99
00:04:19,620 --> 00:04:21,298
see any issues right now

100
00:04:21,298 --> 00:04:24,540
so we have labeled ipsec which is should

101
00:04:24,540 --> 00:04:26,040
be going to the you know publication

102
00:04:26,040 --> 00:04:28,740
requested very soon if I get the charter

103
00:04:28,740 --> 00:04:31,560
review there are a still rebutron uh we

104
00:04:31,560 --> 00:04:34,080
have open group plus code for Ada Ike

105
00:04:34,080 --> 00:04:35,120
which is

106
00:04:35,120 --> 00:04:39,180
done and then we have an Ike analysis

107
00:04:39,180 --> 00:04:40,680
announced should be going to work into

108
00:04:40,680 --> 00:04:43,259
plastical and giac version 2 which

109
00:04:43,259 --> 00:04:44,639
should be going out from the working

110
00:04:44,639 --> 00:04:46,440
group last call after we get a couple of

111
00:04:46,440 --> 00:04:49,320
reviews Paul and me probably until we go

112
00:04:49,320 --> 00:04:51,720
out and if anybody else has any comments

113
00:04:51,720 --> 00:04:54,479
on it please read it and check it out

114
00:04:54,479 --> 00:04:56,400
all right so then we go to the

115
00:04:56,400 --> 00:04:58,919
presentation so the first presentation

116
00:04:58,919 --> 00:05:01,820
is Paul

117
00:05:05,100 --> 00:05:07,919
the next slide

118
00:05:07,919 --> 00:05:08,940
sorry

119
00:05:08,940 --> 00:05:10,979
um so there's a brief history um you can

120
00:05:10,979 --> 00:05:13,080
read it if you want um basically the

121
00:05:13,080 --> 00:05:15,060
last version only removes the special

122
00:05:15,060 --> 00:05:16,979
fallback I say this was the essay that

123
00:05:16,979 --> 00:05:19,080
we said always should be up

124
00:05:19,080 --> 00:05:20,940
so that you always have one essay to

125
00:05:20,940 --> 00:05:22,560
send a packet over people didn't like

126
00:05:22,560 --> 00:05:26,460
the fact that it was special so we

127
00:05:26,460 --> 00:05:28,440
removed it and basically now becomes an

128
00:05:28,440 --> 00:05:29,940
implementation specific thing if you

129
00:05:29,940 --> 00:05:32,280
really want that functionality it is

130
00:05:32,280 --> 00:05:33,900
just not specified in a draft but it's

131
00:05:33,900 --> 00:05:35,400
like implementation specific thing you

132
00:05:35,400 --> 00:05:36,419
can implement

133
00:05:36,419 --> 00:05:38,460
that required a little change for the no

134
00:05:38,460 --> 00:05:41,100
device to be sent and

135
00:05:41,100 --> 00:05:43,139
um there's no more issues left that I'm

136
00:05:43,139 --> 00:05:44,280
aware of

137
00:05:44,280 --> 00:05:45,960
so hopefully this will make Valerie

138
00:05:45,960 --> 00:05:48,180
happy and uh well actually so to be fair

139
00:05:48,180 --> 00:05:50,160
Valerie and Taro didn't like the

140
00:05:50,160 --> 00:05:52,139
fallback I say so um other comments were

141
00:05:52,139 --> 00:05:54,300
not outstanding so

142
00:05:54,300 --> 00:05:55,979
if there are any please let us know as

143
00:05:55,979 --> 00:05:58,400
soon as possible

144
00:06:01,139 --> 00:06:03,840
oh there should we have more slides oh

145
00:06:03,840 --> 00:06:05,820
sorry yeah and it's implemented please

146
00:06:05,820 --> 00:06:08,360
use it

147
00:06:10,759 --> 00:06:14,780
all right so we have it

148
00:06:15,180 --> 00:06:17,280
so next step is working group adoption

149
00:06:17,280 --> 00:06:19,560
call and we get some comments on if

150
00:06:19,560 --> 00:06:21,600
there's two people in the queue so go

151
00:06:21,600 --> 00:06:23,039
ahead for

152
00:06:23,039 --> 00:06:25,259
Paul first

153
00:06:25,259 --> 00:06:29,160
hi uh Paul Thompson from Cisco Meraki so

154
00:06:29,160 --> 00:06:30,840
we are actually facing the similar

155
00:06:30,840 --> 00:06:32,819
issues and we completely agree with uh

156
00:06:32,819 --> 00:06:34,800
the problems based as you're facing for

157
00:06:34,800 --> 00:06:37,860
performances with this draft we just

158
00:06:37,860 --> 00:06:40,500
want to raise a concern we have which

159
00:06:40,500 --> 00:06:43,560
might be that by adding more essays we

160
00:06:43,560 --> 00:06:46,860
could face some scalability issues on

161
00:06:46,860 --> 00:06:50,580
big uh hub for instance ipsec hubs but

162
00:06:50,580 --> 00:06:53,000
uh yeah

163
00:06:53,400 --> 00:06:56,160
yes sorry so you're using

164
00:06:56,160 --> 00:06:59,160
um one disadvantage of this solution is

165
00:06:59,160 --> 00:07:01,680
that you get more essays more than one I

166
00:07:01,680 --> 00:07:03,360
say per tunnel and that has a hardware

167
00:07:03,360 --> 00:07:05,460
implications

168
00:07:05,460 --> 00:07:07,560
um and use the queue by the way for

169
00:07:07,560 --> 00:07:09,300
those people who are coming up to the

170
00:07:09,300 --> 00:07:10,800
mic use the queue before you come to the

171
00:07:10,800 --> 00:07:12,360
mic because we have remote people there

172
00:07:12,360 --> 00:07:13,520
okay

173
00:07:13,520 --> 00:07:15,960
it's not in the case where you would

174
00:07:15,960 --> 00:07:18,360
have like a few more essays but I think

175
00:07:18,360 --> 00:07:21,300
in some situation you might have uh a

176
00:07:21,300 --> 00:07:22,800
lot more child let's say that you would

177
00:07:22,800 --> 00:07:25,620
want to create to benefit from the the

178
00:07:25,620 --> 00:07:27,539
performance advantage and in that case

179
00:07:27,539 --> 00:07:29,880
if you already have a lot of already

180
00:07:29,880 --> 00:07:32,639
existing tunnels that could multiply the

181
00:07:32,639 --> 00:07:35,460
number of essay by a significant amount

182
00:07:35,460 --> 00:07:38,039
okay so so let me comment down in

183
00:07:38,039 --> 00:07:40,560
general when you have a a lot of clients

184
00:07:40,560 --> 00:07:41,880
and a lot of tunnels and you're already

185
00:07:41,880 --> 00:07:43,919
spreading those over your multiple CPUs

186
00:07:43,919 --> 00:07:45,780
so then you're not really gaining much

187
00:07:45,780 --> 00:07:48,180
more from adding even more tunnel so

188
00:07:48,180 --> 00:07:50,520
that you have like you know each of your

189
00:07:50,520 --> 00:07:52,860
10 tunnels uses 10 essays for the 10

190
00:07:52,860 --> 00:07:55,319
CPUs because your CPUs will be maxed out

191
00:07:55,319 --> 00:07:57,060
right so there's no point in putting

192
00:07:57,060 --> 00:07:59,220
multiple on them so in general the

193
00:07:59,220 --> 00:08:00,780
expected use case for this is that you

194
00:08:00,780 --> 00:08:03,240
fill up your CPUs with tunnels and if

195
00:08:03,240 --> 00:08:06,479
you already have like 10 CPUs and 10

196
00:08:06,479 --> 00:08:07,860
customers to different tunnels then

197
00:08:07,860 --> 00:08:11,120
you're kind of already filling that up

198
00:08:12,360 --> 00:08:14,639
recover I'll try to cover a bit more of

199
00:08:14,639 --> 00:08:16,319
the problem we're facing at the end of

200
00:08:16,319 --> 00:08:18,780
the session sure correct so the next one

201
00:08:18,780 --> 00:08:22,219
is then Valerie

202
00:08:23,280 --> 00:08:26,460
I just want to say that I support I

203
00:08:26,460 --> 00:08:27,960
would support the option of this draft

204
00:08:27,960 --> 00:08:31,020
as a starting point and we also have

205
00:08:31,020 --> 00:08:33,360
some implementation experimental

206
00:08:33,360 --> 00:08:35,700
implementation with small TSA that is

207
00:08:35,700 --> 00:08:38,339
slightly different became a

208
00:08:38,339 --> 00:08:43,140
then the draft defines so my

209
00:08:43,140 --> 00:08:47,940
I think that we can make we can try to

210
00:08:47,940 --> 00:08:49,040
make

211
00:08:49,040 --> 00:08:52,680
the draft so that it will interoperable

212
00:08:52,680 --> 00:08:55,200
with implementations that implementation

213
00:08:55,200 --> 00:08:56,779
it implements slightly different

214
00:08:56,779 --> 00:09:00,180
approach to the multi-say so anyway I

215
00:09:00,180 --> 00:09:02,399
think it's it's a good starting point

216
00:09:02,399 --> 00:09:05,240
so thank you

217
00:09:07,019 --> 00:09:08,820
okay next one

218
00:09:08,820 --> 00:09:11,360
Daniel

219
00:09:14,820 --> 00:09:17,940
so um I I think it's a problem we have

220
00:09:17,940 --> 00:09:19,860
to solve

221
00:09:19,860 --> 00:09:23,640
I would have wished that we I mean

222
00:09:23,640 --> 00:09:26,160
that I think I think a more complex

223
00:09:26,160 --> 00:09:28,740
solution would end up in the creation of

224
00:09:28,740 --> 00:09:31,800
the multiple essays

225
00:09:31,800 --> 00:09:32,580
um

226
00:09:32,580 --> 00:09:35,220
and I I think that is a

227
00:09:35,220 --> 00:09:38,339
something that should be added to

228
00:09:38,339 --> 00:09:39,000
um

229
00:09:39,000 --> 00:09:42,140
to this negotiation

230
00:09:43,980 --> 00:09:47,339
and and I also I don't want to talk

231
00:09:47,339 --> 00:09:49,560
about uh regarding the presentation

232
00:09:49,560 --> 00:09:51,360
that's going to be

233
00:09:51,360 --> 00:09:53,399
um done at the end

234
00:09:53,399 --> 00:09:55,800
um but I think we should also try to to

235
00:09:55,800 --> 00:09:58,620
limit the the number of creation uh of

236
00:09:58,620 --> 00:10:00,000
essays so

237
00:10:00,000 --> 00:10:02,700
um I'd like that we pay attention to

238
00:10:02,700 --> 00:10:06,200
um to the last presentation

239
00:10:10,440 --> 00:10:13,080
all right then Christian

240
00:10:13,080 --> 00:10:15,180
uh I was just excited to hear you have

241
00:10:15,180 --> 00:10:17,040
the implementation do you have the link

242
00:10:17,040 --> 00:10:18,060
somewhere

243
00:10:18,060 --> 00:10:20,220
it's in the draft it's an implementation

244
00:10:20,220 --> 00:10:23,180
section awesome

245
00:10:24,959 --> 00:10:26,820
all right so I think that was still

246
00:10:26,820 --> 00:10:30,200
comments we had from the that documents

247
00:10:30,200 --> 00:10:33,839
so we will probably start an adoption

248
00:10:33,839 --> 00:10:37,880
call after this uh meeting

249
00:10:38,040 --> 00:10:39,839
all right so then we go to the next

250
00:10:39,839 --> 00:10:42,300
presentation which is the ipsec workshop

251
00:10:42,300 --> 00:10:45,540
report Stefan

252
00:10:55,440 --> 00:10:56,940
okay

253
00:10:56,940 --> 00:10:58,880
yeah hello everyone

254
00:10:58,880 --> 00:11:01,440
okay hello everyone

255
00:11:01,440 --> 00:11:03,959
this is a report from the IP secret shop

256
00:11:03,959 --> 00:11:07,860
that was held last week here in London

257
00:11:07,860 --> 00:11:10,200
next slide

258
00:11:10,200 --> 00:11:12,440
first some background about that event

259
00:11:12,440 --> 00:11:16,500
that event is funded by the ipsecant

260
00:11:16,500 --> 00:11:19,140
network security Association

261
00:11:19,140 --> 00:11:21,959
there's a yearly event and it was held

262
00:11:21,959 --> 00:11:25,140
first time in 2018.

263
00:11:25,140 --> 00:11:27,360
it will somewhat seeming public event

264
00:11:27,360 --> 00:11:29,459
because we tried to limit a number of

265
00:11:29,459 --> 00:11:33,240
attendees below 20 to be able to run all

266
00:11:33,240 --> 00:11:34,860
that in Workshop mode with discussions

267
00:11:34,860 --> 00:11:36,480
and so on

268
00:11:36,480 --> 00:11:38,940
topics are usually ipsec implementation

269
00:11:38,940 --> 00:11:40,620
protocol

270
00:11:40,620 --> 00:11:43,320
but also other security stuff that comes

271
00:11:43,320 --> 00:11:45,180
up as welcome

272
00:11:45,180 --> 00:11:47,899
next

273
00:11:48,000 --> 00:11:50,640
so we started a workshop with a

274
00:11:50,640 --> 00:11:52,920
discussion about fips requirements for a

275
00:11:52,920 --> 00:11:54,360
Year's GCM

276
00:11:54,360 --> 00:11:57,000
Paul came up with a question and he were

277
00:11:57,000 --> 00:11:59,100
asking if we can use the same key for

278
00:11:59,100 --> 00:12:00,779
more than due to the

279
00:12:00,779 --> 00:12:03,899
the issue packets in fips mode

280
00:12:03,899 --> 00:12:05,459
so we had a

281
00:12:05,459 --> 00:12:07,680
discussion about it looked at the specs

282
00:12:07,680 --> 00:12:09,540
and finally we agreed that yes that's

283
00:12:09,540 --> 00:12:12,120
possible even in fixed fips mode but

284
00:12:12,120 --> 00:12:14,820
there's one limitation so if your IV is

285
00:12:14,820 --> 00:12:17,040
on icv is only eight octaves then you're

286
00:12:17,040 --> 00:12:19,920
really limited to two to the 32 but in

287
00:12:19,920 --> 00:12:21,600
all other cases it should be possible to

288
00:12:21,600 --> 00:12:23,220
use more

289
00:12:23,220 --> 00:12:25,920
okay next

290
00:12:25,920 --> 00:12:29,040
so next topic we had was decorated

291
00:12:29,040 --> 00:12:31,320
policies and how to avoid overlapping

292
00:12:31,320 --> 00:12:34,260
policies tiro presented about that

293
00:12:34,260 --> 00:12:36,660
he gave an overview of what D Colonel

294
00:12:36,660 --> 00:12:40,019
policies are gave us some examples

295
00:12:40,019 --> 00:12:41,940
and showed

296
00:12:41,940 --> 00:12:44,579
that just gives a rather nice flat SPD

297
00:12:44,579 --> 00:12:46,980
data structure where you don't need

298
00:12:46,980 --> 00:12:49,620
to use priorities to find actually the

299
00:12:49,620 --> 00:12:52,980
right policy and that makes lookups much

300
00:12:52,980 --> 00:12:54,899
more efficient

301
00:12:54,899 --> 00:12:58,579
okay next one

302
00:13:00,560 --> 00:13:02,940
yeah next topic we had it was

303
00:13:02,940 --> 00:13:05,399
presentation and discussion about a full

304
00:13:05,399 --> 00:13:08,940
heart rate data part of flow for ipsec

305
00:13:08,940 --> 00:13:12,000
Ian romanovski presented about that

306
00:13:12,000 --> 00:13:14,820
and the point is we want to do all

307
00:13:14,820 --> 00:13:17,459
lookups encapsulation and crypto

308
00:13:17,459 --> 00:13:20,160
operations are flow to hardware

309
00:13:20,160 --> 00:13:23,100
we have an API for that that and Linux

310
00:13:23,100 --> 00:13:26,760
and currently the melanox Nvidia CX-7

311
00:13:26,760 --> 00:13:30,180
card support that type of offload so if

312
00:13:30,180 --> 00:13:32,220
you use Linux with that kind of card you

313
00:13:32,220 --> 00:13:34,680
really can run the full IP set data path

314
00:13:34,680 --> 00:13:37,079
in Hardware currently

315
00:13:37,079 --> 00:13:39,420
next

316
00:13:39,420 --> 00:13:43,139
okay next topic was about a forwarding

317
00:13:43,139 --> 00:13:45,600
fast path with packet parking in Linux

318
00:13:45,600 --> 00:13:49,500
the idea there was we just take out a

319
00:13:49,500 --> 00:13:51,779
net filter flow table with with that as

320
00:13:51,779 --> 00:13:54,959
possible to skip the entire L3 data path

321
00:13:54,959 --> 00:13:57,839
then we are creating packet box so that

322
00:13:57,839 --> 00:14:00,600
each bug consists of packets that are

323
00:14:00,600 --> 00:14:02,760
matching the same as a and with these

324
00:14:02,760 --> 00:14:04,680
packet piles we are running small code

325
00:14:04,680 --> 00:14:07,079
Loops that are rather cash friendly

326
00:14:07,079 --> 00:14:10,079
and we were able to show that in our

327
00:14:10,079 --> 00:14:13,079
test setups we got a performance uh

328
00:14:13,079 --> 00:14:15,180
booster Factor five

329
00:14:15,180 --> 00:14:17,880
compared to that what we had before

330
00:14:17,880 --> 00:14:20,279
okay next

331
00:14:20,279 --> 00:14:23,100
then Michael Richardson presented about

332
00:14:23,100 --> 00:14:26,940
anema and the use of ipsec there he gave

333
00:14:26,940 --> 00:14:29,880
a brief introduction about what anima is

334
00:14:29,880 --> 00:14:32,519
and how ipsec is used there and

335
00:14:32,519 --> 00:14:34,260
presented the problem that she was

336
00:14:34,260 --> 00:14:36,480
unable to cross network name status with

337
00:14:36,480 --> 00:14:39,540
vti interfaces we discussed that a bit

338
00:14:39,540 --> 00:14:41,880
on a proposed solution is to use XM

339
00:14:41,880 --> 00:14:44,459
interfaces those interfaces were created

340
00:14:44,459 --> 00:14:45,480
to replace

341
00:14:45,480 --> 00:14:49,740
ETI and Linux because vti has uh well

342
00:14:49,740 --> 00:14:52,079
vgi is basically broken from most of the

343
00:14:52,079 --> 00:14:54,300
use cases so we intervented inventor

344
00:14:54,300 --> 00:14:55,920
text frame interface a couple of years

345
00:14:55,920 --> 00:14:57,240
ago to

346
00:14:57,240 --> 00:15:01,339
get rid of that so next

347
00:15:02,519 --> 00:15:04,579
okay next was Chris presenting about

348
00:15:04,579 --> 00:15:07,440
iptfs he gave an introduction to that

349
00:15:07,440 --> 00:15:10,139
and showed us the state of the Legends

350
00:15:10,139 --> 00:15:12,660
implementation So currently aggregation

351
00:15:12,660 --> 00:15:14,519
and fragmentation is supported thanks

352
00:15:14,519 --> 00:15:15,540
Chris

353
00:15:15,540 --> 00:15:18,060
uh what's still missing is the constant

354
00:15:18,060 --> 00:15:20,699
rate sending uh but we hope that Chris

355
00:15:20,699 --> 00:15:22,920
will help us there too and we're getting

356
00:15:22,920 --> 00:15:25,500
eventually just also supported in the

357
00:15:25,500 --> 00:15:26,579
nuts

358
00:15:26,579 --> 00:15:29,220
next slide please

359
00:15:29,220 --> 00:15:32,160
okay I think well Paul talked about that

360
00:15:32,160 --> 00:15:36,000
one I think I can skip that slide next

361
00:15:36,000 --> 00:15:38,459
so then we had a longer discussion about

362
00:15:38,459 --> 00:15:42,660
reassigning efp so during the last time

363
00:15:42,660 --> 00:15:44,399
there were quite a lot of proposals

364
00:15:44,399 --> 00:15:46,920
around you support the multi-cpu use

365
00:15:46,920 --> 00:15:48,779
case quality of service classes Hardware

366
00:15:48,779 --> 00:15:52,019
flows and so on and so forth so and all

367
00:15:52,019 --> 00:15:54,060
that boiled down to the fact that we

368
00:15:54,060 --> 00:15:56,339
kind of need some separate anti-replay

369
00:15:56,339 --> 00:15:57,660
windows

370
00:15:57,660 --> 00:16:00,779
there are quite a lot of false Solutions

371
00:16:00,779 --> 00:16:03,180
some where it take some bits from the

372
00:16:03,180 --> 00:16:05,399
SBI or from the anti-replay window or

373
00:16:05,399 --> 00:16:08,639
just add a new field to ESP or whatever

374
00:16:08,639 --> 00:16:11,339
additionally to that Google came in

375
00:16:11,339 --> 00:16:13,800
April and published the PLP crypto

376
00:16:13,800 --> 00:16:16,199
protocol which also looks pretty similar

377
00:16:16,199 --> 00:16:19,199
to ESP but it's just not it

378
00:16:19,199 --> 00:16:22,019
so we agreed that it might be time to

379
00:16:22,019 --> 00:16:25,139
rethink ESP put everything on a table

380
00:16:25,139 --> 00:16:28,800
and eventually try to create the new ESP

381
00:16:28,800 --> 00:16:31,620
V4 version with that but well time will

382
00:16:31,620 --> 00:16:34,500
show next

383
00:16:34,500 --> 00:16:38,339
okay then we talked about beat mode the

384
00:16:38,339 --> 00:16:40,440
beat mode draft is rather old just from

385
00:16:40,440 --> 00:16:43,019
2008 and it's still unfinished and

386
00:16:43,019 --> 00:16:44,399
uncontinued

387
00:16:44,399 --> 00:16:46,320
but actually

388
00:16:46,320 --> 00:16:48,779
um beat mode is implemented in Linux and

389
00:16:48,779 --> 00:16:51,240
people are really use it so we agreed

390
00:16:51,240 --> 00:16:52,980
that could be a good idea to continue

391
00:16:52,980 --> 00:16:56,040
that work that we can eventually finish

392
00:16:56,040 --> 00:16:58,079
beat mode and get it to a proposed

393
00:16:58,079 --> 00:16:59,459
standards

394
00:16:59,459 --> 00:17:02,779
so next

395
00:17:03,180 --> 00:17:05,939
okay that was it okay so that was the

396
00:17:05,939 --> 00:17:07,740
report from the Ibiza workshop last week

397
00:17:07,740 --> 00:17:09,959
I have to say it was a rather productive

398
00:17:09,959 --> 00:17:11,099
event

399
00:17:11,099 --> 00:17:13,439
thanks to all attendees and looking

400
00:17:13,439 --> 00:17:15,720
forward for Workshop next year

401
00:17:15,720 --> 00:17:18,299
that's it from me thank you any comments

402
00:17:18,299 --> 00:17:19,919
on that Chris are you still in the com

403
00:17:19,919 --> 00:17:22,260
queue in the last time or are you

404
00:17:22,260 --> 00:17:24,299
okay I will review all right so any

405
00:17:24,299 --> 00:17:26,959
comments on that

406
00:17:27,000 --> 00:17:28,980
if not then we go to forward next one

407
00:17:28,980 --> 00:17:34,100
next presentation is IP comp extension

408
00:17:41,880 --> 00:17:44,880
uh hello everyone my name is harsher and

409
00:17:44,880 --> 00:17:47,039
I'm going to talk about an IP config

410
00:17:47,039 --> 00:17:49,140
extension which excludes the transport

411
00:17:49,140 --> 00:17:51,720
layer next slide please

412
00:17:51,720 --> 00:17:54,059
yeah first some background on the IP

413
00:17:54,059 --> 00:17:57,360
count is a IP field compression protocol

414
00:17:57,360 --> 00:17:59,760
it's just a compressed IV payload to

415
00:17:59,760 --> 00:18:01,860
save some binder weights and the

416
00:18:01,860 --> 00:18:04,260
compressor payload is prepared with an

417
00:18:04,260 --> 00:18:07,980
IP comp header the ibcon has A3 part the

418
00:18:07,980 --> 00:18:10,559
first part is the next cutter and it

419
00:18:10,559 --> 00:18:12,600
puts the original next header in there

420
00:18:12,600 --> 00:18:15,660
and the second part is flex now it must

421
00:18:15,660 --> 00:18:18,480
be zero and ignored by the decompression

422
00:18:18,480 --> 00:18:21,000
side and the third part is the

423
00:18:21,000 --> 00:18:23,940
compression parameter index to indicate

424
00:18:23,940 --> 00:18:27,480
the compression algorithm used and is

425
00:18:27,480 --> 00:18:29,660
maintained in this and

426
00:18:29,660 --> 00:18:32,820
registry now it's only for file

427
00:18:32,820 --> 00:18:35,640
next entries

428
00:18:35,640 --> 00:18:38,820
yeah and we see there is a two problems

429
00:18:38,820 --> 00:18:41,820
with this ipcon protocol the first one

430
00:18:41,820 --> 00:18:44,100
is that is incompatible with the network

431
00:18:44,100 --> 00:18:46,740
functions because the layer 4

432
00:18:46,740 --> 00:18:49,500
information I mean the the source port

433
00:18:49,500 --> 00:18:52,020
and destination Port is compressed

434
00:18:52,020 --> 00:18:54,840
so you cannot put any network function

435
00:18:54,840 --> 00:18:57,840
which relies on this information for

436
00:18:57,840 --> 00:19:01,140
example the firewall nity or some kind

437
00:19:01,140 --> 00:19:02,580
of HCL

438
00:19:02,580 --> 00:19:06,740
so this will limit the the IP count

439
00:19:06,740 --> 00:19:09,200
deployment

440
00:19:09,200 --> 00:19:11,580
science means

441
00:19:11,580 --> 00:19:13,679
oops

442
00:19:13,679 --> 00:19:16,080
yeah so we propose the first extension

443
00:19:16,080 --> 00:19:19,320
to solve this problem uh the statistic

444
00:19:19,320 --> 00:19:21,080
extension is very simple it's just

445
00:19:21,080 --> 00:19:23,820
excludes the protein info from the

446
00:19:23,820 --> 00:19:26,220
compression range to do that to

447
00:19:26,220 --> 00:19:28,679
basically we have two options the first

448
00:19:28,679 --> 00:19:31,200
option is that we can change the flags

449
00:19:31,200 --> 00:19:35,720
to to add one bit indication to say this

450
00:19:35,720 --> 00:19:38,220
compression will exclude the source

451
00:19:38,220 --> 00:19:40,679
proton destination port and the second

452
00:19:40,679 --> 00:19:43,200
option that we can duplicate each

453
00:19:43,200 --> 00:19:45,780
compression algorithm code point for

454
00:19:45,780 --> 00:19:49,140
example in in this table we can say the

455
00:19:49,140 --> 00:19:54,500
the CPI value one is the idcom or UI and

456
00:19:54,500 --> 00:19:56,600
there is another

457
00:19:56,600 --> 00:19:59,640
CPI value to indicate the test the same

458
00:19:59,640 --> 00:20:03,679
compression algorithm but the four bytes

459
00:20:03,679 --> 00:20:06,059
which contains the source port and the

460
00:20:06,059 --> 00:20:08,580
destination Port is is concluded from

461
00:20:08,580 --> 00:20:12,379
the compression next

462
00:20:12,440 --> 00:20:15,000
and the second formula of the IP company

463
00:20:15,000 --> 00:20:17,760
that it may cause some kind of odd order

464
00:20:17,760 --> 00:20:20,940
processing basically the reason is that

465
00:20:20,940 --> 00:20:25,700
in the IB count biopsy is specified that

466
00:20:25,700 --> 00:20:29,820
if a package is the compression is not

467
00:20:29,820 --> 00:20:32,160
effective meaning the compression May

468
00:20:32,160 --> 00:20:35,280
produce a longer pay node then the

469
00:20:35,280 --> 00:20:37,740
packet is sent uncompressed and the

470
00:20:37,740 --> 00:20:40,679
results the ipcon header but in the

471
00:20:40,679 --> 00:20:43,320
compression side a packet with the ID

472
00:20:43,320 --> 00:20:45,480
card will go through the decompression

473
00:20:45,480 --> 00:20:49,140
code processor first but if a calculate

474
00:20:49,140 --> 00:20:52,020
does not have the idcom header it will

475
00:20:52,020 --> 00:20:56,460
be forward directly so it is the process

476
00:20:56,460 --> 00:21:00,179
has is different for the cost out of

477
00:21:00,179 --> 00:21:02,880
order out of order is very bad for the

478
00:21:02,880 --> 00:21:06,000
open air protocols such as the TCP

479
00:21:06,000 --> 00:21:08,640
no no the same thing

480
00:21:08,640 --> 00:21:11,640
so we propose the second extension to

481
00:21:11,640 --> 00:21:14,900
solve the auto order from the uh

482
00:21:14,900 --> 00:21:18,120
basically we uh we can change the

483
00:21:18,120 --> 00:21:19,520
behavior to

484
00:21:19,520 --> 00:21:22,919
to add the ipconocator email if the

485
00:21:22,919 --> 00:21:26,280
payload is sent uncompressed so to do

486
00:21:26,280 --> 00:21:28,679
that we can use a new CPI value for the

487
00:21:28,679 --> 00:21:30,960
uncompressed packet basically this news

488
00:21:30,960 --> 00:21:34,260
API means this packet is sent

489
00:21:34,260 --> 00:21:38,539
uncompressed that next sense

490
00:21:38,900 --> 00:21:42,360
Yeah so basically that wasn't what our

491
00:21:42,360 --> 00:21:45,720
drop is about and we also would like to

492
00:21:45,720 --> 00:21:49,020
talk about the IP comp the relationship

493
00:21:49,020 --> 00:21:52,100
of ID compound ipsec

494
00:21:52,100 --> 00:21:54,659
currently the CPI code point you don't

495
00:21:54,659 --> 00:21:57,419
know created in the ip7 Regulatory and

496
00:21:57,419 --> 00:22:01,440
is negotiated using Ike but actually the

497
00:22:01,440 --> 00:22:03,179
compression is not related to the

498
00:22:03,179 --> 00:22:06,659
security and the CPI value does not have

499
00:22:06,659 --> 00:22:10,620
to be unlocked by Ike maybe there are

500
00:22:10,620 --> 00:22:13,260
other control plane protocol can be used

501
00:22:13,260 --> 00:22:16,200
so maybe this can decouple from the

502
00:22:16,200 --> 00:22:19,919
ipsec and for the transport layer it's

503
00:22:19,919 --> 00:22:24,539
including this L4 information we want to

504
00:22:24,539 --> 00:22:26,700
hear your opinion about whether we use

505
00:22:26,700 --> 00:22:32,659
the CTI or you use a new flag

506
00:22:33,120 --> 00:22:35,780
thank you

507
00:22:35,880 --> 00:22:39,059
all right comments there is you are

508
00:22:39,059 --> 00:22:41,360
first

509
00:22:41,600 --> 00:22:45,059
yeah Channel some stuff that was said

510
00:22:45,059 --> 00:22:48,559
there on the zulup

511
00:22:48,559 --> 00:22:51,720
for most ipsec implementations ipcon

512
00:22:51,720 --> 00:22:54,419
well it wasn't really removed but it's

513
00:22:54,419 --> 00:22:57,780
kind of deprecated hidden in a d player

514
00:22:57,780 --> 00:23:00,080
in the GUI so

515
00:23:00,080 --> 00:23:05,820
kind of as much deprecated as AHS so um

516
00:23:05,820 --> 00:23:09,179
uh if you want to decouple it from ipsec

517
00:23:09,179 --> 00:23:10,980
I think that's a good idea I'm not sure

518
00:23:10,980 --> 00:23:12,240
if it's

519
00:23:12,240 --> 00:23:14,640
I don't know how useful it is outside of

520
00:23:14,640 --> 00:23:17,039
the context of ipsec

521
00:23:17,039 --> 00:23:19,080
and they're not even a commenting the

522
00:23:19,080 --> 00:23:21,539
asset chair if it's decoupulated from

523
00:23:21,539 --> 00:23:23,159
ipsec 10 it doesn't belong to this

524
00:23:23,159 --> 00:23:25,320
working group it's closest somewhere

525
00:23:25,320 --> 00:23:28,500
else yeah actually with some musics

526
00:23:28,500 --> 00:23:30,480
travel to the sixth man because we think

527
00:23:30,480 --> 00:23:32,880
it's an ipcome kind of go into the

528
00:23:32,880 --> 00:23:36,000
maintenance mode but someone uh Samsung

529
00:23:36,000 --> 00:23:39,840
guy in sixth amendment is IP IP sexy

530
00:23:39,840 --> 00:23:43,020
it's also in go here yeah to to hear

531
00:23:43,020 --> 00:23:45,500
your opinion

532
00:23:46,260 --> 00:23:48,480
all right next poll

533
00:23:48,480 --> 00:23:51,059
ockos

534
00:23:51,059 --> 00:23:54,000
so so one way how this issue goes away

535
00:23:54,000 --> 00:23:56,820
is to not use ipicom so the question

536
00:23:56,820 --> 00:24:00,659
becomes why are you using ipcon when if

537
00:24:00,659 --> 00:24:03,360
it's for the MTU then boy we have a new

538
00:24:03,360 --> 00:24:04,799
solution for you that's coming up soon

539
00:24:04,799 --> 00:24:06,659
it's called iptfs

540
00:24:06,659 --> 00:24:09,720
no it's not about MTU you just want to

541
00:24:09,720 --> 00:24:12,720
save the batteries because some very

542
00:24:12,720 --> 00:24:16,980
high quality 90 is very expensive so we

543
00:24:16,980 --> 00:24:20,940
want to send as needle data over that as

544
00:24:20,940 --> 00:24:23,100
possible

545
00:24:23,100 --> 00:24:26,400
everything and the interior ad and we

546
00:24:26,400 --> 00:24:29,220
just get a draft over there which also

547
00:24:29,220 --> 00:24:31,860
compressed directly over the IP layer

548
00:24:31,860 --> 00:24:34,740
it's called Chic over IP that's a draft

549
00:24:34,740 --> 00:24:36,600
you may want to have a look at it as

550
00:24:36,600 --> 00:24:39,059
well the ratio for compression will be

551
00:24:39,059 --> 00:24:42,799
much higher okay thank you

552
00:24:44,159 --> 00:24:46,440
so this documents as well commentators

553
00:24:46,440 --> 00:24:48,419
there's also you know if you think about

554
00:24:48,419 --> 00:24:50,340
the cases you have this uncompressed

555
00:24:50,340 --> 00:24:52,260
payload that's using the IP competitor

556
00:24:52,260 --> 00:24:54,120
there even the reason why they didn't

557
00:24:54,120 --> 00:24:56,700
into this is that that expands the

558
00:24:56,700 --> 00:25:00,419
bucket which makes the MTU problems

559
00:25:00,419 --> 00:25:02,760
start to appear when they didn't appear

560
00:25:02,760 --> 00:25:03,900
in the beginning

561
00:25:03,900 --> 00:25:06,360
so that was the reason why they made it

562
00:25:06,360 --> 00:25:09,059
so that it can't expand the bucket so

563
00:25:09,059 --> 00:25:11,220
this solution is actually not very good

564
00:25:11,220 --> 00:25:12,299
for that

565
00:25:12,299 --> 00:25:17,520
yeah actually uh first uh uh first this

566
00:25:17,520 --> 00:25:20,640
uncompressive panel is secure IP comp

567
00:25:20,640 --> 00:25:24,299
enabled payload uh flow so it only

568
00:25:24,299 --> 00:25:28,460
affects a certain amount of load you you

569
00:25:28,460 --> 00:25:31,200
personally need to match your flow to to

570
00:25:31,200 --> 00:25:35,400
the ipcon so I'm I'm seeing here the top

571
00:25:35,400 --> 00:25:39,480
of order is happening in the IP I

572
00:25:39,480 --> 00:25:42,360
becoming enable the flow not any other

573
00:25:42,360 --> 00:25:48,000
package okay so the next one is Daniel

574
00:25:48,000 --> 00:25:50,340
yeah so just to complement with

575
00:25:50,340 --> 00:25:54,179
um Eric just said uh about chick we also

576
00:25:54,179 --> 00:25:57,140
have uh one protocol which is die tsp

577
00:25:57,140 --> 00:26:00,179
which is about compressing um

578
00:26:00,179 --> 00:26:05,039
um some of the fields in the um in the I

579
00:26:05,039 --> 00:26:08,820
mean well ESP IP packet

580
00:26:08,820 --> 00:26:09,960
um and it's

581
00:26:09,960 --> 00:26:12,419
um it is expected to interface pretty

582
00:26:12,419 --> 00:26:15,120
well with Chic as well I mean that that

583
00:26:15,120 --> 00:26:17,640
that's what we should work on also

584
00:26:17,640 --> 00:26:20,779
okay thank you

585
00:26:23,279 --> 00:26:26,460
so I think we get entered of Q then so

586
00:26:26,460 --> 00:26:28,559
that's all for this thank you thanks a

587
00:26:28,559 --> 00:26:30,000
lot

588
00:26:30,000 --> 00:26:32,700
so the next one is new like version two

589
00:26:32,700 --> 00:26:36,559
for portal payroll formats Valerie

590
00:26:37,020 --> 00:26:41,480
hello uh next slide please

591
00:26:42,120 --> 00:26:44,279
so uh uh

592
00:26:44,279 --> 00:26:48,000
you may notice that there is an um

593
00:26:48,000 --> 00:26:49,380
uh

594
00:26:49,380 --> 00:26:53,760
a question in the title so uh the

595
00:26:53,760 --> 00:26:55,740
purpose of this presentation it is not

596
00:26:55,740 --> 00:26:58,020
concerned with any with any particular

597
00:26:58,020 --> 00:27:01,080
draft is to go to an interest in the

598
00:27:01,080 --> 00:27:04,020
working group of their wise and

599
00:27:04,020 --> 00:27:06,419
likely to openload format

600
00:27:06,419 --> 00:27:08,880
so uh for existing payload format we

601
00:27:08,880 --> 00:27:11,520
have some limitations first uh the

602
00:27:11,520 --> 00:27:13,799
landfill occupies only two bytes so it's

603
00:27:13,799 --> 00:27:15,600
below its size is limited to 64

604
00:27:15,600 --> 00:27:17,039
carbohydes okay

605
00:27:17,039 --> 00:27:20,039
to both so

606
00:27:20,039 --> 00:27:23,460
um it made me not enough for some use

607
00:27:23,460 --> 00:27:25,679
cases especially for post Quantum

608
00:27:25,679 --> 00:27:28,880
algorithms that have large public keys

609
00:27:28,880 --> 00:27:33,120
and I must note that there is no

610
00:27:33,120 --> 00:27:35,059
problems there is a message size itself

611
00:27:35,059 --> 00:27:38,279
which which is limited to four gigabytes

612
00:27:38,279 --> 00:27:41,779
so the next piece

613
00:27:42,200 --> 00:27:45,419
and the other issue with the current

614
00:27:45,419 --> 00:27:49,679
format and both with generic format and

615
00:27:49,679 --> 00:27:54,419
some particular formats is that they

616
00:27:54,419 --> 00:27:58,500
have a lot of redundancy so we have uh

617
00:27:58,500 --> 00:28:02,279
a lot of not a lot but just a noticeable

618
00:28:02,279 --> 00:28:04,799
number of reserved fields that are

619
00:28:04,799 --> 00:28:08,039
always zero and never used a load field

620
00:28:08,039 --> 00:28:11,940
always occupies two bytes and most

621
00:28:11,940 --> 00:28:15,299
payloads are smaller especially notified

622
00:28:15,299 --> 00:28:19,980
pillows and most parameters in say

623
00:28:19,980 --> 00:28:23,220
pollute also occupy uh to buy it so

624
00:28:23,220 --> 00:28:26,100
while very few numbers very few will you

625
00:28:26,100 --> 00:28:28,860
satisfied so far this is just an example

626
00:28:28,860 --> 00:28:33,500
so before I say below uh with

627
00:28:33,500 --> 00:28:36,480
these parameters uh

628
00:28:36,480 --> 00:28:41,700
the lens is 48 bytes among them half of

629
00:28:41,700 --> 00:28:43,980
these bikes are zeros

630
00:28:43,980 --> 00:28:47,000
so the next please

631
00:28:47,539 --> 00:28:49,100
and

632
00:28:49,100 --> 00:28:53,039
why it is a good sin to leave to 64

633
00:28:53,039 --> 00:28:56,100
kilobyte size limits so it would allow

634
00:28:56,100 --> 00:28:59,340
using some cool post Quantum algorithm

635
00:28:59,340 --> 00:29:02,279
with some public keys and signatures

636
00:29:02,279 --> 00:29:06,000
uh and uh currently nist approved

637
00:29:06,000 --> 00:29:07,919
algorithm

638
00:29:07,919 --> 00:29:10,559
have a smaller public key size and

639
00:29:10,559 --> 00:29:13,440
signature but for example classic make

640
00:29:13,440 --> 00:29:15,960
Elise is still an Eastern for candidate

641
00:29:15,960 --> 00:29:18,840
and it is also recommended by some

642
00:29:18,840 --> 00:29:22,020
national state organizations like BSI in

643
00:29:22,020 --> 00:29:23,000
Germany

644
00:29:23,000 --> 00:29:26,940
and there may also be cases when we need

645
00:29:26,940 --> 00:29:29,220
to transfer that chance of data for

646
00:29:29,220 --> 00:29:32,100
example in configuration below

647
00:29:32,100 --> 00:29:34,820
and it's

648
00:29:35,039 --> 00:29:39,299
and why do we need to make a lot smaller

649
00:29:39,299 --> 00:29:41,880
uh it would decrease power Network

650
00:29:41,880 --> 00:29:44,580
bandwidth consumption which is important

651
00:29:44,580 --> 00:29:48,059
for iot devices and it will also

652
00:29:48,059 --> 00:29:50,460
decrease the chances of Ip fragmentation

653
00:29:50,460 --> 00:29:52,380
in I can say anything changes and

654
00:29:52,380 --> 00:29:54,620
recommendations that follow exchanges

655
00:29:54,620 --> 00:29:58,500
and these chances grow especially for

656
00:29:58,500 --> 00:30:01,500
you can say you need when we Define more

657
00:30:01,500 --> 00:30:04,679
and more new transforms for example for

658
00:30:04,679 --> 00:30:07,860
post Quantum algorithms and the full

659
00:30:07,860 --> 00:30:10,220
combination of such

660
00:30:10,220 --> 00:30:12,179
will

661
00:30:12,179 --> 00:30:14,940
make a simple little clutch larger and

662
00:30:14,940 --> 00:30:17,279
larger especially if you take

663
00:30:17,279 --> 00:30:19,200
integration uh

664
00:30:19,200 --> 00:30:21,539
set but Quantum algorithms may have

665
00:30:21,539 --> 00:30:23,220
different parameters

666
00:30:23,220 --> 00:30:26,419
as the next piece

667
00:30:26,600 --> 00:30:30,720
so uh what do we have now there are a

668
00:30:30,720 --> 00:30:33,779
few existing proposals uh first a large

669
00:30:33,779 --> 00:30:36,179
internet key exchange version 2 payload

670
00:30:36,179 --> 00:30:40,260
draft uh then beyond 64 call limits on

671
00:30:40,260 --> 00:30:42,240
my equator pillows and compared for much

672
00:30:42,240 --> 00:30:46,279
of IQ products as

673
00:30:46,399 --> 00:30:51,899
latest draft is currently expired but uh

674
00:30:51,899 --> 00:30:54,840
it was active for quite a lot as the

675
00:30:54,840 --> 00:30:57,139
next please

676
00:30:57,679 --> 00:31:01,440
so uh I will try to analyze to Quick

677
00:31:01,440 --> 00:31:05,039
analyze uh all of these proposals so a

678
00:31:05,039 --> 00:31:07,080
large internet key exchange version took

679
00:31:07,080 --> 00:31:09,840
a load IT addresses only 64 by its

680
00:31:09,840 --> 00:31:12,720
limitations it is a generic Solutions it

681
00:31:12,720 --> 00:31:16,500
is suitable for any preload and uh below

682
00:31:16,500 --> 00:31:18,299
it in all the different light can be

683
00:31:18,299 --> 00:31:20,159
mixed in a message

684
00:31:20,159 --> 00:31:22,620
and this feature is explicitly

685
00:31:22,620 --> 00:31:26,299
negotiated a re-exchange of 95s

686
00:31:26,299 --> 00:31:29,039
for this reason it cannot be used in

687
00:31:29,039 --> 00:31:31,799
initial Exchange and it is a relatively

688
00:31:31,799 --> 00:31:34,440
easy to implement but it depends on the

689
00:31:34,440 --> 00:31:37,279
basic with your code because if you if

690
00:31:37,279 --> 00:31:42,059
implementers uh just uses uh 16 beats

691
00:31:42,059 --> 00:31:44,940
for reload size inside the chords it may

692
00:31:44,940 --> 00:31:48,120
require some effector but otherwise it's

693
00:31:48,120 --> 00:31:49,799
it's pretty easy to implement

694
00:31:49,799 --> 00:31:52,919
and I'm not aware of any implementations

695
00:31:52,919 --> 00:31:55,740
uh yes please

696
00:31:55,740 --> 00:31:58,380
so beyond beyond 64.

697
00:31:58,380 --> 00:32:01,980
gigabytes a limited 950 loads it also

698
00:32:01,980 --> 00:32:04,500
addresses only uh 64 capellites

699
00:32:04,500 --> 00:32:07,260
limitation it is suitable only for

700
00:32:07,260 --> 00:32:11,220
sample loads so for those that most

701
00:32:11,220 --> 00:32:14,399
probably will have a problem

702
00:32:14,399 --> 00:32:16,980
with post Quantum algorithms it's key

703
00:32:16,980 --> 00:32:18,860
exchange authentication and set

704
00:32:18,860 --> 00:32:22,799
certificate and existing bullet format

705
00:32:22,799 --> 00:32:24,500
is fully preserved

706
00:32:24,500 --> 00:32:29,159
but encrypted per load is mainly somehow

707
00:32:29,159 --> 00:32:32,659
to make uh possible

708
00:32:32,659 --> 00:32:37,380
to have a message size greater than 64

709
00:32:37,380 --> 00:32:39,539
kilobytes so there's no explicit

710
00:32:39,539 --> 00:32:42,179
negotiation and duplicitly this which is

711
00:32:42,179 --> 00:32:45,200
negotiated when

712
00:32:45,659 --> 00:32:48,539
peer negotiated an algorithms having

713
00:32:48,539 --> 00:32:51,779
large public keys it also cannot be used

714
00:32:51,779 --> 00:32:54,419
in initial exchange at in Reliance on

715
00:32:54,419 --> 00:32:57,539
mandatory use and hypermentation and a

716
00:32:57,539 --> 00:32:59,520
relatively easy to implement and

717
00:32:59,520 --> 00:33:02,820
Implement some implementations exist

718
00:33:02,820 --> 00:33:05,779
so the next please

719
00:33:06,000 --> 00:33:09,000
and compact format of 502 payloads IT

720
00:33:09,000 --> 00:33:11,940
addresses redundancy a fight with fight

721
00:33:11,940 --> 00:33:14,480
pillows and

722
00:33:14,480 --> 00:33:17,880
this proposes suitable for any preload

723
00:33:17,880 --> 00:33:21,120
uh but some preloads are well compaction

724
00:33:21,120 --> 00:33:22,919
centered pillows can be mixed in a

725
00:33:22,919 --> 00:33:25,019
message sample loads have special

726
00:33:25,019 --> 00:33:27,480
extremely complex format there is no

727
00:33:27,480 --> 00:33:30,120
negotiation and

728
00:33:30,120 --> 00:33:33,500
a new initial exchange is used instead

729
00:33:33,500 --> 00:33:37,860
alternative I can say neat uh this is

730
00:33:37,860 --> 00:33:41,519
semantically equal to I guess in it but

731
00:33:41,519 --> 00:33:44,840
allows uh for compact below to appear

732
00:33:44,840 --> 00:33:48,240
and there is there is some kind of

733
00:33:48,240 --> 00:33:50,640
negotiation because again initiation can

734
00:33:50,640 --> 00:33:52,200
also can always relate to it because

735
00:33:52,200 --> 00:33:55,140
they need if if it receives a fatal

736
00:33:55,140 --> 00:33:58,860
error or uh timeout of descending

737
00:33:58,860 --> 00:34:01,679
initial message it is a moderative

738
00:34:01,679 --> 00:34:04,200
difficult to implement it can be

739
00:34:04,200 --> 00:34:06,840
implemented as post uh procession of

740
00:34:06,840 --> 00:34:09,179
reproduction of the standard iq2

741
00:34:09,179 --> 00:34:13,139
messages and an implementation exists

742
00:34:13,139 --> 00:34:16,099
so the next

743
00:34:16,260 --> 00:34:18,899
so uh the question which is a working

744
00:34:18,899 --> 00:34:19,800
group

745
00:34:19,800 --> 00:34:22,980
do we want to provide cycle load format

746
00:34:22,980 --> 00:34:25,440
if yes then what problem should they

747
00:34:25,440 --> 00:34:28,260
address or should you address uh just

748
00:34:28,260 --> 00:34:30,960
make it possible to

749
00:34:30,960 --> 00:34:34,199
to help the Lord greater than 64 car

750
00:34:34,199 --> 00:34:37,139
or decrease Mass Equity message

751
00:34:37,139 --> 00:34:40,739
redundancy or both and it is not in the

752
00:34:40,739 --> 00:34:43,918
presentation uh if both then should it

753
00:34:43,918 --> 00:34:46,800
be in a single solution or should it be

754
00:34:46,800 --> 00:34:48,359
different solutions

755
00:34:48,359 --> 00:34:52,260
so is there any interest in this book

756
00:34:52,260 --> 00:34:55,280
something else please

757
00:34:56,159 --> 00:35:00,060
well there are some backup slides but uh

758
00:35:00,060 --> 00:35:03,060
Sergeant is very tight the backup slide

759
00:35:03,060 --> 00:35:07,080
just proposes some way to address both

760
00:35:07,080 --> 00:35:11,640
uh both problems uh some preliminary

761
00:35:11,640 --> 00:35:14,880
approach so if the time permits I will

762
00:35:14,880 --> 00:35:18,119
show it but if now that we can go to the

763
00:35:18,119 --> 00:35:20,359
questions

764
00:35:23,339 --> 00:35:26,000
foreign

765
00:35:26,480 --> 00:35:30,359
I think it's interesting um one of the

766
00:35:30,359 --> 00:35:32,700
questions I have is that

767
00:35:32,700 --> 00:35:33,720
um

768
00:35:33,720 --> 00:35:35,760
when we decrease the redundancy do we

769
00:35:35,760 --> 00:35:38,760
end up in something easier to pass or

770
00:35:38,760 --> 00:35:41,220
um something more complex

771
00:35:41,220 --> 00:35:45,180
oh well uh it is a bit complex sense

772
00:35:45,180 --> 00:35:47,460
that's a simple solution but I think

773
00:35:47,460 --> 00:35:49,560
it's moderate actually the draft was

774
00:35:49,560 --> 00:35:52,460
written that it can be implemented as

775
00:35:52,460 --> 00:35:54,599
post-processing of the ready ipt

776
00:35:54,599 --> 00:35:56,520
messages and preprocessing of the

777
00:35:56,520 --> 00:36:02,040
received messages so it is it can be

778
00:36:02,040 --> 00:36:05,640
yeah relatively easy uh built into the

779
00:36:05,640 --> 00:36:07,380
current implementation without breaking

780
00:36:07,380 --> 00:36:10,740
it but it requires well

781
00:36:10,740 --> 00:36:12,060
some

782
00:36:12,060 --> 00:36:15,480
some amount of work but

783
00:36:15,480 --> 00:36:18,420
not much from mind

784
00:36:18,420 --> 00:36:20,820
well at least the 60k limitation is

785
00:36:20,820 --> 00:36:24,859
something we we may have to address

786
00:36:28,460 --> 00:36:32,880
so the question to uh chairs

787
00:36:32,880 --> 00:36:37,200
oh what do you think about this work

788
00:36:37,200 --> 00:36:39,599
so to start again and so

789
00:36:39,599 --> 00:36:41,640
um I think both of them are actually

790
00:36:41,640 --> 00:36:43,859
separate items in our Charter so with

791
00:36:43,859 --> 00:36:46,440
actually the 64k limitation is coming

792
00:36:46,440 --> 00:36:49,220
from the you know post Quantum algorithm

793
00:36:49,220 --> 00:36:51,839
and I think we need to solve that and I

794
00:36:51,839 --> 00:36:54,839
hope we get one solution for that not

795
00:36:54,839 --> 00:36:57,839
two so I would actually like to have you

796
00:36:57,839 --> 00:37:00,480
know people to discuss of those two

797
00:37:00,480 --> 00:37:02,040
because we have to implement it two

798
00:37:02,040 --> 00:37:03,540
different drafts for that so I would

799
00:37:03,540 --> 00:37:04,680
actually like to have a people to

800
00:37:04,680 --> 00:37:07,680
actually discuss and and agree on this

801
00:37:07,680 --> 00:37:10,079
of those proposals to go forward and

802
00:37:10,079 --> 00:37:12,900
hopefully when we can decide on one we

803
00:37:12,900 --> 00:37:15,480
can actually go forward with that and I

804
00:37:15,480 --> 00:37:17,099
would actually I think it would be

805
00:37:17,099 --> 00:37:18,780
better to have a solution that would

806
00:37:18,780 --> 00:37:20,400
actually work for all payloads because

807
00:37:20,400 --> 00:37:24,180
there's some other like like somebody

808
00:37:24,180 --> 00:37:25,760
was saying you know having a

809
00:37:25,760 --> 00:37:28,640
configuration payload covering the whole

810
00:37:28,640 --> 00:37:30,660
networking structure of the company

811
00:37:30,660 --> 00:37:33,420
which is completely messed up uh by bike

812
00:37:33,420 --> 00:37:35,940
week or more than 64 kilowatts which I

813
00:37:35,940 --> 00:37:38,160
think is usually provide that the

814
00:37:38,160 --> 00:37:40,920
Enterprise you know ID department is not

815
00:37:40,920 --> 00:37:42,420
doing very well based they have to have

816
00:37:42,420 --> 00:37:45,119
that many networks separate Networks but

817
00:37:45,119 --> 00:37:47,099
anyway so so I think it would be useful

818
00:37:47,099 --> 00:37:49,500
so at the

819
00:37:49,500 --> 00:37:52,800
compression or or or small things I

820
00:37:52,800 --> 00:37:54,480
think that's a separate issue and I

821
00:37:54,480 --> 00:37:56,579
think we should be probably keep them as

822
00:37:56,579 --> 00:37:58,740
a separate also

823
00:37:58,740 --> 00:38:01,020
and and for that we also have multiple I

824
00:38:01,020 --> 00:38:02,820
think we have a diet a couple of diet

825
00:38:02,820 --> 00:38:04,680
versions that we have at least I think

826
00:38:04,680 --> 00:38:06,180
we have multiple versions of that also

827
00:38:06,180 --> 00:38:08,220
so I would try to have an outers to

828
00:38:08,220 --> 00:38:09,000
actually

829
00:38:09,000 --> 00:38:12,900
try to find a common ground and common

830
00:38:12,900 --> 00:38:15,000
solution

831
00:38:15,000 --> 00:38:19,619
well uh so if I try to write a draft uh

832
00:38:19,619 --> 00:38:23,040
and present it to the working group easy

833
00:38:23,040 --> 00:38:25,800
to uh okay

834
00:38:25,800 --> 00:38:27,000
yep

835
00:38:27,000 --> 00:38:28,320
okay

836
00:38:28,320 --> 00:38:30,540
thank you and I I think as I said

837
00:38:30,540 --> 00:38:32,760
they're both or in Charter so I think

838
00:38:32,760 --> 00:38:34,800
there is there has been interest and I

839
00:38:34,800 --> 00:38:36,240
think they're still interest

840
00:38:36,240 --> 00:38:38,899
yes

841
00:38:40,160 --> 00:38:43,020
just the mere existence of two separate

842
00:38:43,020 --> 00:38:46,020
drafts is some evidence that there's

843
00:38:46,020 --> 00:38:47,880
some interest at least

844
00:38:47,880 --> 00:38:49,079
yeah

845
00:38:49,079 --> 00:38:53,280
let's give it a backup file slides

846
00:38:53,280 --> 00:38:57,740
yeah and the next one is Valerie

847
00:38:58,079 --> 00:39:00,839
so uh this presentation

848
00:39:00,839 --> 00:39:05,460
um was presented a few ideas ago and I

849
00:39:05,460 --> 00:39:07,400
just want to

850
00:39:07,400 --> 00:39:10,800
raise an interest to this problem and to

851
00:39:10,800 --> 00:39:13,680
to to get an impression where this

852
00:39:13,680 --> 00:39:15,420
problem should be solved or should be

853
00:39:15,420 --> 00:39:16,440
ignored

854
00:39:16,440 --> 00:39:20,400
so the next slide please uh well uh this

855
00:39:20,400 --> 00:39:22,920
is uh this diagram shows synthetic using

856
00:39:22,920 --> 00:39:28,020
cookies in iq2 so according to RFC 70 to

857
00:39:28,020 --> 00:39:31,859
90 96 uh the most recent I can say need

858
00:39:31,859 --> 00:39:34,079
request message is included into the

859
00:39:34,079 --> 00:39:36,780
output load calculation I think that it

860
00:39:36,780 --> 00:39:40,619
goes exchange so uh in this diagram it's

861
00:39:40,619 --> 00:39:43,740
it is a request to impose initiated and

862
00:39:43,740 --> 00:39:46,560
responded so it is standard way so the

863
00:39:46,560 --> 00:39:48,920
next please

864
00:39:49,099 --> 00:39:54,060
but what happens if we have some packet

865
00:39:54,060 --> 00:39:56,060
loss and the original

866
00:39:56,060 --> 00:39:58,859
uh well these there are two possible

867
00:39:58,859 --> 00:40:02,339
problem scenarios and both are concerned

868
00:40:02,339 --> 00:40:05,640
with the responded States change in the

869
00:40:05,640 --> 00:40:08,339
middle of I can say you need request for

870
00:40:08,339 --> 00:40:10,079
in this uh

871
00:40:10,079 --> 00:40:13,800
problem scenario one uh first the

872
00:40:13,800 --> 00:40:16,140
responder since that it is under attack

873
00:40:16,140 --> 00:40:20,339
and request a cookie but this message

874
00:40:20,339 --> 00:40:24,180
get reordered and before these the

875
00:40:24,180 --> 00:40:26,420
initiators sends another request

876
00:40:26,420 --> 00:40:30,300
and at this point the responded since

877
00:40:30,300 --> 00:40:33,119
that is no more under attack and it just

878
00:40:33,119 --> 00:40:36,180
responds with a usual response uh

879
00:40:36,180 --> 00:40:40,680
response uh rest to and uh one of the

880
00:40:40,680 --> 00:40:43,020
message well the

881
00:40:43,020 --> 00:40:45,000
one of the message get lost from the

882
00:40:45,000 --> 00:40:48,780
initiator and after all of that both

883
00:40:48,780 --> 00:40:51,480
initiate and respond to end up with a

884
00:40:51,480 --> 00:40:54,000
different View at what was the most

885
00:40:54,000 --> 00:40:56,359
recent

886
00:41:01,339 --> 00:41:03,780
only received track one so

887
00:41:03,780 --> 00:41:05,700
authentication would fail

888
00:41:05,700 --> 00:41:08,520
it's next please

889
00:41:08,520 --> 00:41:11,400
and tonight's a problem scenario if they

890
00:41:11,400 --> 00:41:15,060
responder changes a secret key that is

891
00:41:15,060 --> 00:41:16,500
used to

892
00:41:16,500 --> 00:41:19,140
produce a cookie in the middle of I can

893
00:41:19,140 --> 00:41:21,599
say neat exchange again this is very

894
00:41:21,599 --> 00:41:23,940
simple to prevent a scenario some

895
00:41:23,940 --> 00:41:26,700
packets are reorders and someone pick it

896
00:41:26,700 --> 00:41:30,599
is lost but the outcome is the same

897
00:41:30,599 --> 00:41:33,000
the most recent I can say I need

898
00:41:33,000 --> 00:41:36,180
requests and by initiative is rec3 but

899
00:41:36,180 --> 00:41:38,339
I'll respond to other only received a

900
00:41:38,339 --> 00:41:40,859
rec2 so syndication fail again

901
00:41:40,859 --> 00:41:43,940
so the next please

902
00:41:43,980 --> 00:41:46,980
and so since the problem is that I can

903
00:41:46,980 --> 00:41:48,720
send requests can be sent several times

904
00:41:48,720 --> 00:41:50,940
there's different content depending on

905
00:41:50,940 --> 00:41:52,500
the respond to state

906
00:41:52,500 --> 00:41:54,660
and uh

907
00:41:54,660 --> 00:41:57,720
if there is high probability of packet

908
00:41:57,720 --> 00:41:59,880
loss and Georgians and B is my complete

909
00:41:59,880 --> 00:42:02,099
I guess I need exchange having a

910
00:42:02,099 --> 00:42:03,839
different view of what was the most

911
00:42:03,839 --> 00:42:07,140
recent and like I say any digress and

912
00:42:07,140 --> 00:42:08,700
this request message is used in

913
00:42:08,700 --> 00:42:10,520
calculation

914
00:42:10,520 --> 00:42:14,400
and if PSU is different messages for the

915
00:42:14,400 --> 00:42:15,980
calculations the education would

916
00:42:15,980 --> 00:42:18,240
erroneously fail

917
00:42:18,240 --> 00:42:21,078
yes please

918
00:42:21,599 --> 00:42:24,180
and what is about severity of the

919
00:42:24,180 --> 00:42:25,079
problem

920
00:42:25,079 --> 00:42:28,320
uh there must be some precondition

921
00:42:28,320 --> 00:42:31,440
for the problem to become noticeable so

922
00:42:31,440 --> 00:42:35,220
high package hyperability of packet loss

923
00:42:35,220 --> 00:42:36,960
and delay

924
00:42:36,960 --> 00:42:40,680
and a relative frequent frequent change

925
00:42:40,680 --> 00:42:42,839
of responder state

926
00:42:42,839 --> 00:42:47,280
and in a real situation it's extremely

927
00:42:47,280 --> 00:42:48,380
rare

928
00:42:48,380 --> 00:42:53,339
but on a stress tests that we performed

929
00:42:53,339 --> 00:42:56,700
a few percent of the essays failed due

930
00:42:56,700 --> 00:42:59,819
to this problem and I think that the

931
00:42:59,819 --> 00:43:01,500
most problem for implementers for

932
00:43:01,500 --> 00:43:04,859
vendors is that customer would want the

933
00:43:04,859 --> 00:43:06,660
voice education sometimes failed with

934
00:43:06,660 --> 00:43:09,359
with absolutely proper credential

935
00:43:09,359 --> 00:43:13,260
this is just the flow in the equity

936
00:43:13,260 --> 00:43:14,579
protocol

937
00:43:14,579 --> 00:43:17,640
so it's the next piece

938
00:43:17,640 --> 00:43:21,180
and uh how can we fix this

939
00:43:21,180 --> 00:43:23,760
so we can Define the reverse cookie

940
00:43:23,760 --> 00:43:25,440
processing by excluding notified per

941
00:43:25,440 --> 00:43:27,119
load containing cookie from the hospital

942
00:43:27,119 --> 00:43:28,560
calculation

943
00:43:28,560 --> 00:43:31,460
and I think that

944
00:43:31,460 --> 00:43:34,220
it it will not

945
00:43:34,220 --> 00:43:37,440
bring a new secure security issues

946
00:43:37,440 --> 00:43:39,300
because the cookie was already verified

947
00:43:39,300 --> 00:43:41,220
by the responders so there's no need to

948
00:43:41,220 --> 00:43:43,020
verify it again but including inside

949
00:43:43,020 --> 00:43:44,400
records

950
00:43:44,400 --> 00:43:47,480
and foreign

951
00:43:48,079 --> 00:43:50,880
can be negotiatable

952
00:43:50,880 --> 00:43:53,660
let's please

953
00:43:53,880 --> 00:43:58,079
so negotiation uh so if responder

954
00:43:58,079 --> 00:44:01,440
supports a wise cookie purchasing it

955
00:44:01,440 --> 00:44:03,900
will Center wise cooking notify

956
00:44:03,900 --> 00:44:07,440
in the response of the I can say need

957
00:44:07,440 --> 00:44:09,780
along with cookie

958
00:44:09,780 --> 00:44:12,540
so it is only the case if it requires

959
00:44:12,540 --> 00:44:15,839
cooking and if the initiator uh also

960
00:44:15,839 --> 00:44:17,160
supports the Civilized cookie process

961
00:44:17,160 --> 00:44:19,859
and it will include the include the

962
00:44:19,859 --> 00:44:22,140
content of the cookie notification into

963
00:44:22,140 --> 00:44:26,400
this new upload rice cookie and so the

964
00:44:26,400 --> 00:44:28,619
reporter I would know that the revised

965
00:44:28,619 --> 00:44:30,960
booking processing is needed

966
00:44:30,960 --> 00:44:34,099
so the next please

967
00:44:34,440 --> 00:44:38,339
and if yes agrees to you to to go with

968
00:44:38,339 --> 00:44:41,880
the revised cookie processing that uh no

969
00:44:41,880 --> 00:44:44,460
change time to antiquality function of

970
00:44:44,460 --> 00:44:47,760
cookie and uh responded still send steak

971
00:44:47,760 --> 00:44:49,140
is Cookie

972
00:44:49,140 --> 00:44:52,260
but uh when uh house politics

973
00:44:52,260 --> 00:44:53,520
calculating

974
00:44:53,520 --> 00:44:58,319
uh the way it is done uh so initiate the

975
00:44:58,319 --> 00:45:01,920
sign of tests uh is equal to real

976
00:45:01,920 --> 00:45:06,660
message one and non-state and marked ID

977
00:45:06,660 --> 00:45:09,599
for initiator if Cookie plot is present

978
00:45:09,599 --> 00:45:12,480
then we

979
00:45:12,480 --> 00:45:15,300
change a real message one with a new

980
00:45:15,300 --> 00:45:17,880
construction in the next slide next

981
00:45:17,880 --> 00:45:19,859
piece

982
00:45:19,859 --> 00:45:24,140
so we just exclude uh from this message

983
00:45:24,140 --> 00:45:27,839
for the purpose of the calculation of

984
00:45:27,839 --> 00:45:30,359
icos of holes below

985
00:45:30,359 --> 00:45:34,020
uh we exclude the notify containing

986
00:45:34,020 --> 00:45:38,040
cookie and also uh make a modification

987
00:45:38,040 --> 00:45:42,000
to next reload in Arcadia and message

988
00:45:42,000 --> 00:45:43,819
learning

989
00:45:43,819 --> 00:45:46,800
and that's all

990
00:45:46,800 --> 00:45:49,800
if we do it then the

991
00:45:49,800 --> 00:45:52,819
calculation will be

992
00:45:52,819 --> 00:45:58,680
equal even in the case that uh cookie is

993
00:45:58,680 --> 00:46:00,660
different because it was something

994
00:46:00,660 --> 00:46:03,240
different like Ascent responses

995
00:46:03,240 --> 00:46:06,540
so my question is is this problem is

996
00:46:06,540 --> 00:46:08,099
most to address

997
00:46:08,099 --> 00:46:10,819
and if so that

998
00:46:10,819 --> 00:46:14,520
it is possible to issue a call for

999
00:46:14,520 --> 00:46:16,380
adoption of the draft because draft is

1000
00:46:16,380 --> 00:46:19,099
around for a while

1001
00:46:22,140 --> 00:46:24,480
so

1002
00:46:24,480 --> 00:46:26,940
so they're still coming so

1003
00:46:26,940 --> 00:46:29,160
I think this is that I'm talking about

1004
00:46:29,160 --> 00:46:32,819
some individual chair so uh

1005
00:46:32,819 --> 00:46:35,940
this is a little bit you know

1006
00:46:35,940 --> 00:46:37,440
questionable if it is worth of

1007
00:46:37,440 --> 00:46:39,420
addressable I think it's it's a flaw in

1008
00:46:39,420 --> 00:46:41,040
the protocol so that's why we should fix

1009
00:46:41,040 --> 00:46:44,640
it uh the question is that if it's a

1010
00:46:44,640 --> 00:46:47,099
flaw that doesn't affect security it

1011
00:46:47,099 --> 00:46:48,780
only affects you know funny error

1012
00:46:48,780 --> 00:46:50,640
messages now every now and then when you

1013
00:46:50,640 --> 00:46:52,319
are doing stress tests

1014
00:46:52,319 --> 00:46:56,040
and fixing it we will actually you know

1015
00:46:56,040 --> 00:46:58,520
of course a completely new you know

1016
00:46:58,520 --> 00:47:01,440
quite a you know big modification the

1017
00:47:01,440 --> 00:47:02,940
authentication system

1018
00:47:02,940 --> 00:47:05,339
I would be very hesitant but I think we

1019
00:47:05,339 --> 00:47:06,960
can actually find a solution that

1020
00:47:06,960 --> 00:47:09,660
actually is so works better one of the

1021
00:47:09,660 --> 00:47:12,480
problems what you are doing here in out

1022
00:47:12,480 --> 00:47:14,700
I say calculation

1023
00:47:14,700 --> 00:47:17,700
is that the those two messages might not

1024
00:47:17,700 --> 00:47:21,800
be exactly same we say that the repeat

1025
00:47:21,800 --> 00:47:24,839
retrospectors must be bitwise identical

1026
00:47:24,839 --> 00:47:27,420
but there is nothing not nothing they

1027
00:47:27,420 --> 00:47:29,160
are saying that we can't for example add

1028
00:47:29,160 --> 00:47:32,760
padding or put a you know uh payloads in

1029
00:47:32,760 --> 00:47:35,579
different order in the cookie message or

1030
00:47:35,579 --> 00:47:37,680
or or or you know when you are actually

1031
00:47:37,680 --> 00:47:40,619
adding cookie or not adding cookie so

1032
00:47:40,619 --> 00:47:42,660
that's actually would be a different way

1033
00:47:42,660 --> 00:47:45,420
but what we could actually do

1034
00:47:45,420 --> 00:47:49,380
is when we are uh where is this one this

1035
00:47:49,380 --> 00:47:50,839
case for example

1036
00:47:50,839 --> 00:47:54,240
uh the real issue is the authentication

1037
00:47:54,240 --> 00:47:56,040
file or a notification if you could get

1038
00:47:56,040 --> 00:47:58,020
the separate notification saying oh

1039
00:47:58,020 --> 00:48:00,060
Cookie changed in the middle

1040
00:48:00,060 --> 00:48:02,760
uh then the you know any theater would

1041
00:48:02,760 --> 00:48:04,140
know oh the cookie change in the middle

1042
00:48:04,140 --> 00:48:06,420
I start from the stretch I start again

1043
00:48:06,420 --> 00:48:08,940
and everything works take a time most

1044
00:48:08,940 --> 00:48:11,940
likely okay so one solution would be

1045
00:48:11,940 --> 00:48:14,520
that that the initiator would in the

1046
00:48:14,520 --> 00:48:17,460
last you know Ike out it would include

1047
00:48:17,460 --> 00:48:19,500
the cookie that is using for the out

1048
00:48:19,500 --> 00:48:20,700
calculation

1049
00:48:20,700 --> 00:48:22,980
so it would have a repeat the cookie

1050
00:48:22,980 --> 00:48:24,119
there

1051
00:48:24,119 --> 00:48:26,280
now the responder

1052
00:48:26,280 --> 00:48:28,380
can verify that the cookie is saying

1053
00:48:28,380 --> 00:48:30,420
that he thinks that he was using if it's

1054
00:48:30,420 --> 00:48:31,680
a different

1055
00:48:31,680 --> 00:48:33,660
he probably just returns an error

1056
00:48:33,660 --> 00:48:35,099
message saying that cookie changed

1057
00:48:35,099 --> 00:48:37,140
please try again

1058
00:48:37,140 --> 00:48:39,839
he could in theory go and modify your

1059
00:48:39,839 --> 00:48:41,640
initial pocket but there we have the

1060
00:48:41,640 --> 00:48:43,319
same problem that if the cookie changed

1061
00:48:43,319 --> 00:48:45,000
you know the some of the paddings or

1062
00:48:45,000 --> 00:48:46,380
something especially if you know cookie

1063
00:48:46,380 --> 00:48:48,359
length is different uh there might be

1064
00:48:48,359 --> 00:48:49,980
you know different amount of paddings

1065
00:48:49,980 --> 00:48:51,839
because the cookie happens to be you

1066
00:48:51,839 --> 00:48:52,760
know

1067
00:48:52,760 --> 00:48:56,040
17 OCTA slang along and somebody had

1068
00:48:56,040 --> 00:48:57,960
some padding somewhere or something

1069
00:48:57,960 --> 00:49:00,359
stupid so that's why I was thinking

1070
00:49:00,359 --> 00:49:02,460
about it this would probably work better

1071
00:49:02,460 --> 00:49:05,460
in that way so we only modify the code

1072
00:49:05,460 --> 00:49:08,339
in case you actually detect this issue

1073
00:49:08,339 --> 00:49:11,160
and it would be actually optional to you

1074
00:49:11,160 --> 00:49:13,200
know people to actually implement it and

1075
00:49:13,200 --> 00:49:15,420
it would be very easy for the imitator

1076
00:49:15,420 --> 00:49:17,099
side to implement it they just need to

1077
00:49:17,099 --> 00:49:18,900
repeat the cookie and it's a

1078
00:49:18,900 --> 00:49:20,640
notification you can add there without

1079
00:49:20,640 --> 00:49:23,420
any notifications without any you know

1080
00:49:23,420 --> 00:49:26,780
uh negotiation beforehand you try to add

1081
00:49:26,780 --> 00:49:30,660
uh no cookie copy in the ike out and

1082
00:49:30,660 --> 00:49:32,280
everybody will just ignore it because an

1083
00:49:32,280 --> 00:49:34,440
unknown status notification

1084
00:49:34,440 --> 00:49:37,500
a responder can either do or not do the

1085
00:49:37,500 --> 00:49:40,380
you know do you think this one would

1086
00:49:40,380 --> 00:49:42,420
solve the problem and do you think this

1087
00:49:42,420 --> 00:49:45,119
would be suitable solution for this also

1088
00:49:45,119 --> 00:49:47,280
or instead of date here

1089
00:49:47,280 --> 00:49:51,000
um I would I think that sending uh

1090
00:49:51,000 --> 00:49:53,940
cooking aikos is a good idea but

1091
00:49:53,940 --> 00:49:57,180
uh if you go further and use the respond

1092
00:49:57,180 --> 00:50:00,240
to notify and notice that the cookie is

1093
00:50:00,240 --> 00:50:01,500
different

1094
00:50:01,500 --> 00:50:04,020
in the in the I can say in each and I

1095
00:50:04,020 --> 00:50:08,339
goes then uh well what what what should

1096
00:50:08,339 --> 00:50:13,260
we do then so my my easy proposal I

1097
00:50:13,260 --> 00:50:14,579
would say that you said there's other

1098
00:50:14,579 --> 00:50:16,800
other notification error notification

1099
00:50:16,800 --> 00:50:20,540
saying that cookie cookie changed

1100
00:50:20,540 --> 00:50:23,460
that would be a lazy way of doing it of

1101
00:50:23,460 --> 00:50:25,140
course you could try to you know if you

1102
00:50:25,140 --> 00:50:26,880
have still the original edit there's a

1103
00:50:26,880 --> 00:50:28,920
full packet you could actually go and

1104
00:50:28,920 --> 00:50:30,119
try to

1105
00:50:30,119 --> 00:50:31,920
switch a cookie to be the one that they

1106
00:50:31,920 --> 00:50:32,819
used you know check out this

1107
00:50:32,819 --> 00:50:34,920
authentication track seeds but that's

1108
00:50:34,920 --> 00:50:36,839
quite a lot of work for very Corner

1109
00:50:36,839 --> 00:50:39,720
cases so I probably wouldn't be in my

1110
00:50:39,720 --> 00:50:41,099
implementations I wouldn't be doing that

1111
00:50:41,099 --> 00:50:43,319
I would just take a easy way out and say

1112
00:50:43,319 --> 00:50:45,480
oh separate error message that is not

1113
00:50:45,480 --> 00:50:48,740
how the education failed

1114
00:50:50,300 --> 00:50:53,460
for me well well it's possible but it

1115
00:50:53,460 --> 00:50:55,140
will just complicate it's the right

1116
00:50:55,140 --> 00:50:57,420
stick machine because it will a new

1117
00:50:57,420 --> 00:51:00,359
non-fital errors that you must um

1118
00:51:00,359 --> 00:51:04,680
handle gracefully just to repeat and if

1119
00:51:04,680 --> 00:51:07,280
you are sending a cookie notification

1120
00:51:07,280 --> 00:51:10,740
sorry cookie copy then you are you know

1121
00:51:10,740 --> 00:51:12,960
already know that you you are approached

1122
00:51:12,960 --> 00:51:13,920
you can actually process that

1123
00:51:13,920 --> 00:51:15,079
notification

1124
00:51:15,079 --> 00:51:17,760
okay Paul I think

1125
00:51:17,760 --> 00:51:19,819
um

1126
00:51:19,859 --> 00:51:22,319
I I it seems that this idea is actually

1127
00:51:22,319 --> 00:51:24,599
a nice idea so I do like it um so if you

1128
00:51:24,599 --> 00:51:27,180
need volunteers I can help Valerie

1129
00:51:27,180 --> 00:51:30,480
um I I was um on a few slides I can

1130
00:51:30,480 --> 00:51:32,160
start a few slides forward you had some

1131
00:51:32,160 --> 00:51:33,660
statistics about how bad this program

1132
00:51:33,660 --> 00:51:36,119
became I was running what that was based

1133
00:51:36,119 --> 00:51:37,859
on was it based on the error condition

1134
00:51:37,859 --> 00:51:39,900
one or the error condition two because I

1135
00:51:39,900 --> 00:51:42,420
think the one where the secret changes

1136
00:51:42,420 --> 00:51:45,180
couldn't responder who might remember

1137
00:51:45,180 --> 00:51:47,240
the last secret and the current secret

1138
00:51:47,240 --> 00:51:50,520
like C like if that is the case or not

1139
00:51:50,520 --> 00:51:52,200
like like is that really a case that

1140
00:51:52,200 --> 00:51:55,559
happens because you know that like you

1141
00:51:55,559 --> 00:51:57,059
cycle between two Secrets basically

1142
00:51:57,059 --> 00:51:59,640
right so if the first one fills you try

1143
00:51:59,640 --> 00:52:01,200
oh maybe this was a cookie from the old

1144
00:52:01,200 --> 00:52:03,540
team you are active as part of the

1145
00:52:03,540 --> 00:52:06,240
cookie you prefix a byte that says this

1146
00:52:06,240 --> 00:52:09,180
is secret current or secret or one or

1147
00:52:09,180 --> 00:52:11,220
two and then if you cycle between one

1148
00:52:11,220 --> 00:52:12,599
and two then you know that that cookie

1149
00:52:12,599 --> 00:52:13,920
was generated with the previous secret

1150
00:52:13,920 --> 00:52:15,960
so I don't think the secret case

1151
00:52:15,960 --> 00:52:18,540
actually happens in the world

1152
00:52:18,540 --> 00:52:22,500
uh it does because the world responder

1153
00:52:22,500 --> 00:52:24,300
can verify cookie and it's okay with

1154
00:52:24,300 --> 00:52:27,420
verification of the cookie but then uh

1155
00:52:27,420 --> 00:52:30,059
the responder uses these cookies that is

1156
00:52:30,059 --> 00:52:31,680
it it verified

1157
00:52:31,680 --> 00:52:34,020
it uses this cookie um

1158
00:52:34,020 --> 00:52:36,420
in the icons calculation instead of

1159
00:52:36,420 --> 00:52:38,400
using the previous cookie so it should

1160
00:52:38,400 --> 00:52:39,960
not verify it should reproduce the

1161
00:52:39,960 --> 00:52:43,200
previous cookie that should that was uh

1162
00:52:43,200 --> 00:52:44,579
actually generated with a different

1163
00:52:44,579 --> 00:52:45,660
Secret

1164
00:52:45,660 --> 00:52:49,020
and if it is possible to do it then well

1165
00:52:49,020 --> 00:52:52,140
okay it's probably will help but it's

1166
00:52:52,140 --> 00:52:54,960
it's not the problem that it cannot

1167
00:52:54,960 --> 00:52:57,240
verify it's not elegant I agree yeah so

1168
00:52:57,240 --> 00:53:00,059
so actually what we're starting to hate

1169
00:53:00,059 --> 00:53:01,619
that video you know because it's cookies

1170
00:53:01,619 --> 00:53:04,380
the irritator use things that we are

1171
00:53:04,380 --> 00:53:07,099
using the first

1172
00:53:08,480 --> 00:53:12,660
that's a you know in its out payload but

1173
00:53:12,660 --> 00:53:14,700
the rest Pottery is only seeing the

1174
00:53:14,700 --> 00:53:16,619
first one which has a different cookie

1175
00:53:16,619 --> 00:53:18,599
and it used that as an out calculation

1176
00:53:18,599 --> 00:53:21,119
Basin and so they do the out

1177
00:53:21,119 --> 00:53:23,819
calculations in different cookies and

1178
00:53:23,819 --> 00:53:25,740
there is no way of knowing of course you

1179
00:53:25,740 --> 00:53:27,900
know if you actually have a cookie copy

1180
00:53:27,900 --> 00:53:30,839
here then you know responder can see oh

1181
00:53:30,839 --> 00:53:32,760
yeah we are using wrong coupon it could

1182
00:53:32,760 --> 00:53:34,800
actually go and you know replace it but

1183
00:53:34,800 --> 00:53:36,780
as I said modifying somebody else's

1184
00:53:36,780 --> 00:53:38,660
scent packet is

1185
00:53:38,660 --> 00:53:43,040
I take it back I was wrong thank you

1186
00:53:48,599 --> 00:53:51,859
all right so

1187
00:53:52,740 --> 00:53:54,599
so I

1188
00:53:54,599 --> 00:53:57,480
think this is I would like to get some

1189
00:53:57,480 --> 00:53:59,339
other people's feedback on this and and

1190
00:53:59,339 --> 00:54:01,500
I would actually want to get people's uh

1191
00:54:01,500 --> 00:54:03,420
comments on the list and so on do you

1192
00:54:03,420 --> 00:54:04,920
think this is something that we want to

1193
00:54:04,920 --> 00:54:07,200
solve and uh

1194
00:54:07,200 --> 00:54:08,940
do we actually want to solve it in which

1195
00:54:08,940 --> 00:54:10,859
way

1196
00:54:10,859 --> 00:54:12,380
so um

1197
00:54:12,380 --> 00:54:15,240
the purpose of the presentation yeah

1198
00:54:15,240 --> 00:54:17,339
yeah so Valerie if you can send an email

1199
00:54:17,339 --> 00:54:19,140
to the list and ask for people to

1200
00:54:19,140 --> 00:54:21,420
actually comment that and and request

1201
00:54:21,420 --> 00:54:25,740
the comments of this document sure

1202
00:54:26,400 --> 00:54:29,040
all right

1203
00:54:29,040 --> 00:54:32,339
then we go the next one

1204
00:54:32,339 --> 00:54:35,359
it is then

1205
00:54:36,980 --> 00:54:38,700
what

1206
00:54:38,700 --> 00:54:41,419
yes yes

1207
00:54:41,520 --> 00:54:45,420
okay hello everyone this is coming from

1208
00:54:45,420 --> 00:54:47,940
qinghai University today I will talk

1209
00:54:47,940 --> 00:54:51,920
about the receive rpk and episode best

1210
00:54:51,920 --> 00:54:55,020
as2s approach for social gradual Edition

1211
00:54:55,020 --> 00:54:58,260
and here shows the document links in

1212
00:54:58,260 --> 00:55:00,839
data clicker and our workspace at the

1213
00:55:00,839 --> 00:55:01,740
GitHub

1214
00:55:01,740 --> 00:55:05,058
next page please

1215
00:55:05,460 --> 00:55:08,099
first I should introduce the source

1216
00:55:08,099 --> 00:55:10,920
address relation problem as defined in

1217
00:55:10,920 --> 00:55:12,200
RC

1218
00:55:12,200 --> 00:55:15,240
2827 Source address validation is used

1219
00:55:15,240 --> 00:55:18,180
to defend the new or service or Tech

1220
00:55:18,180 --> 00:55:22,920
well as defined in RFC file to one zero

1221
00:55:22,920 --> 00:55:24,960
it has been refinished three

1222
00:55:24,960 --> 00:55:28,619
difficulties that is vulnerability it is

1223
00:55:28,619 --> 00:55:31,920
difficult to resist the attacks by

1224
00:55:31,920 --> 00:55:34,920
disabling the IP Source address

1225
00:55:34,920 --> 00:55:39,180
directly and the second

1226
00:55:39,180 --> 00:55:40,760
credibility

1227
00:55:40,760 --> 00:55:43,740
attackers could conceal location and

1228
00:55:43,740 --> 00:55:45,960
identity

1229
00:55:45,960 --> 00:55:49,680
by using a spoofing address and the

1230
00:55:49,680 --> 00:55:54,059
second major ability it is difficult to

1231
00:55:54,059 --> 00:55:56,280
realize building and other management

1232
00:55:56,280 --> 00:55:59,339
through the IP Source address because

1233
00:55:59,339 --> 00:56:03,619
they may use a supporting address

1234
00:56:05,359 --> 00:56:08,520
projects that about 20 percent of

1235
00:56:08,520 --> 00:56:11,359
network prefix could be spoofed

1236
00:56:11,359 --> 00:56:16,980
Distributing in about 40 percent as in

1237
00:56:16,980 --> 00:56:22,559
IPv6 networks so does in ipv4 Networks

1238
00:56:22,559 --> 00:56:26,220
uh next page please

1239
00:56:26,220 --> 00:56:29,460
thanks so we promote and desire is safe

1240
00:56:29,460 --> 00:56:32,000
in general we saved is a

1241
00:56:32,000 --> 00:56:35,280
cryptographically based inter as source

1242
00:56:35,280 --> 00:56:38,579
to address relation protocol it is ipki

1243
00:56:38,579 --> 00:56:41,220
and IP stack to add a message or

1244
00:56:41,220 --> 00:56:43,440
authentication code and source as for

1245
00:56:43,440 --> 00:56:46,920
the router website and delete the max at

1246
00:56:46,920 --> 00:56:49,319
the destination as for the router for

1247
00:56:49,319 --> 00:56:51,180
validating The Source address

1248
00:56:51,180 --> 00:56:54,420
here shows the main process are receive

1249
00:56:54,420 --> 00:56:57,240
on the left picture

1250
00:56:57,240 --> 00:57:01,200
first rpk process the five Regional

1251
00:57:01,200 --> 00:57:04,500
internet regress piece authorized by

1252
00:57:04,500 --> 00:57:07,559
Anna use their root certificate to send

1253
00:57:07,559 --> 00:57:10,460
the certificate Authority that is

1254
00:57:10,460 --> 00:57:13,440
certificate of the local internet

1255
00:57:13,440 --> 00:57:15,540
registry

1256
00:57:15,540 --> 00:57:18,240
which is used to authorize the

1257
00:57:18,240 --> 00:57:21,559
autonomous system sometimes in

1258
00:57:21,559 --> 00:57:24,000
indirectly without the internet service

1259
00:57:24,000 --> 00:57:25,680
provider

1260
00:57:25,680 --> 00:57:28,319
when they aborting their own CA

1261
00:57:28,319 --> 00:57:31,980
certificate the as would sign an under

1262
00:57:31,980 --> 00:57:34,980
entity certificate with the road origin

1263
00:57:34,980 --> 00:57:36,359
authorization

1264
00:57:36,359 --> 00:57:38,520
that is Roa

1265
00:57:38,520 --> 00:57:42,059
which is a cryptographically signed

1266
00:57:42,059 --> 00:57:44,940
object that states which as are

1267
00:57:44,940 --> 00:57:49,260
authorized to originate a certain prefix

1268
00:57:49,260 --> 00:57:52,200
this authenticity bounding of the as

1269
00:57:52,200 --> 00:57:55,740
number two is IP prefix is published in

1270
00:57:55,740 --> 00:57:59,880
the APK database this is the requisites

1271
00:57:59,880 --> 00:58:01,559
for restave

1272
00:58:01,559 --> 00:58:05,400
and second ACS is certificate Pro

1273
00:58:05,400 --> 00:58:10,079
versioning the ACs would need its own ee

1274
00:58:10,079 --> 00:58:12,720
certificate for ikv2

1275
00:58:12,720 --> 00:58:15,900
this e certificate is required like the

1276
00:58:15,900 --> 00:58:19,980
bgb stack realtor certificate funny RC

1277
00:58:19,980 --> 00:58:22,980
8209

1278
00:58:23,700 --> 00:58:27,780
and the third receive announcement

1279
00:58:27,780 --> 00:58:30,900
each participating as announced is

1280
00:58:30,900 --> 00:58:34,339
support for receive in the rpk database

1281
00:58:34,339 --> 00:58:38,099
including the IP address of its as

1282
00:58:38,099 --> 00:58:39,900
contact server

1283
00:58:39,900 --> 00:58:42,780
and the IP address we call it as contact

1284
00:58:42,780 --> 00:58:44,160
IP

1285
00:58:44,160 --> 00:58:47,819
and the third on the first

1286
00:58:47,819 --> 00:58:51,540
secret security or storage Association

1287
00:58:51,540 --> 00:58:56,760
negotiation and delivery the excess uh

1288
00:58:56,760 --> 00:58:59,520
negotiate and

1289
00:58:59,520 --> 00:59:04,260
security Association using ikev2

1290
00:59:04,260 --> 00:59:07,680
after our synchronization all is for the

1291
00:59:07,680 --> 00:59:10,579
routers would get the security

1292
00:59:10,579 --> 00:59:13,920
Association including the second key and

1293
00:59:13,920 --> 00:59:15,960
other parameters

1294
00:59:15,960 --> 00:59:18,720
and the last

1295
00:59:18,720 --> 00:59:22,220
highest tag communication receive your

1296
00:59:22,220 --> 00:59:25,859
ID stack authentication header in

1297
00:59:25,859 --> 00:59:28,980
transport mode for authentication of the

1298
00:59:28,980 --> 00:59:32,099
IP Source address by default while s

1299
00:59:32,099 --> 00:59:35,760
model router in ASA send the package to

1300
00:59:35,760 --> 00:59:40,200
ASB it is established a reset channel to

1301
00:59:40,200 --> 00:59:41,819
add the required

1302
00:59:41,819 --> 00:59:45,420
as authentication header the export

1303
00:59:45,420 --> 00:59:48,540
router in Sp while this authentication

1304
00:59:48,540 --> 00:59:51,540
header to ensure that the package was

1305
00:59:51,540 --> 00:59:55,260
not spoofed and removes the header after

1306
00:59:55,260 --> 00:59:57,240
or validation

1307
00:59:57,240 --> 01:00:00,480
next page please

1308
01:00:00,480 --> 01:00:01,840
thanks

1309
01:00:01,840 --> 01:00:03,299
[Music]

1310
01:00:03,299 --> 01:00:07,799
this part includes the enabling and

1311
01:00:07,799 --> 01:00:10,500
disabling receiving control plane when

1312
01:00:10,500 --> 01:00:13,619
you have when enabling or receive it

1313
01:00:13,619 --> 01:00:16,440
includes the following steps announcing

1314
01:00:16,440 --> 01:00:19,619
that let's as suppose we save

1315
01:00:19,619 --> 01:00:21,680
and

1316
01:00:21,680 --> 01:00:26,040
published in content at least

1317
01:00:26,040 --> 01:00:28,799
and the last performing abstract session

1318
01:00:28,799 --> 01:00:32,520
initialization that is ikev2

1319
01:00:32,520 --> 01:00:34,099
videos

1320
01:00:34,099 --> 01:00:37,859
idiots receive announcement which is a

1321
01:00:37,859 --> 01:00:42,420
stand object in the rpk Repository

1322
01:00:42,420 --> 01:00:45,299
a receive announcements includes Awards

1323
01:00:45,299 --> 01:00:49,740
as number the contact IP address and our

1324
01:00:49,740 --> 01:00:52,079
Boolean type testing field for

1325
01:00:52,079 --> 01:00:54,780
indicating whether the content IP is

1326
01:00:54,780 --> 01:00:57,900
potentially unreliable

1327
01:00:57,900 --> 01:01:02,640
each as is as content server which has a

1328
01:01:02,640 --> 01:01:03,780
contact ID

1329
01:01:03,780 --> 01:01:06,240
uh recorders that were accessed for

1330
01:01:06,240 --> 01:01:10,380
operation ACS is used to present the

1331
01:01:10,380 --> 01:01:14,220
whole as to initiate ake negotiation

1332
01:01:14,220 --> 01:01:17,640
with other es ACS

1333
01:01:17,640 --> 01:01:21,059
where a key negotiation completes each

1334
01:01:21,059 --> 01:01:24,540
as for the router in one participate ins

1335
01:01:24,540 --> 01:01:28,260
will activate the same functions

1336
01:01:28,260 --> 01:01:31,619
and the next part is disabling is safe

1337
01:01:31,619 --> 01:01:34,920
when disabling receives the participant

1338
01:01:34,920 --> 01:01:39,059
team as would first stop requirements

1339
01:01:39,059 --> 01:01:41,700
receive authentication of incoming

1340
01:01:41,700 --> 01:01:45,900
package second remove Reserve or

1341
01:01:45,900 --> 01:01:49,680
announcement from the article Repository

1342
01:01:49,680 --> 01:01:53,819
third when the end is 24 hours

1343
01:01:53,819 --> 01:01:55,319
and

1344
01:01:55,319 --> 01:01:58,319
last stop sending receive and shut down

1345
01:01:58,319 --> 01:02:00,299
the counter IP

1346
01:02:00,299 --> 01:02:04,859
well there may be a open question shall

1347
01:02:04,859 --> 01:02:07,319
we use an authenticated permanent

1348
01:02:07,319 --> 01:02:10,500
rejection options that helps to disable

1349
01:02:10,500 --> 01:02:11,760
receive

1350
01:02:11,760 --> 01:02:14,359
as we have Scan RFC

1351
01:02:14,359 --> 01:02:17,420
7 to 6

1352
01:02:17,420 --> 01:02:22,020
96 the latest iq2 protocol it has two

1353
01:02:22,020 --> 01:02:25,140
nonification message tests that may be

1354
01:02:25,140 --> 01:02:28,879
used here as RFC

1355
01:02:29,000 --> 01:02:32,520
6023 defense countless activity to

1356
01:02:32,520 --> 01:02:34,200
supported option

1357
01:02:34,200 --> 01:02:39,420
it could use PS are acceptable or no

1358
01:02:39,420 --> 01:02:42,299
proposal chosen as an error code here

1359
01:02:42,299 --> 01:02:45,420
which means for Ikea to client should

1360
01:02:45,420 --> 01:02:49,500
not try and shouldn't try again after 24

1361
01:02:49,500 --> 01:02:50,819
hours

1362
01:02:50,819 --> 01:02:54,119
next take place

1363
01:02:54,119 --> 01:02:56,280
thanks

1364
01:02:56,280 --> 01:03:00,180
uh let's let's introduce data planes

1365
01:03:00,180 --> 01:03:02,640
when two participating as Communications

1366
01:03:02,640 --> 01:03:06,540
it would add a receive header to each

1367
01:03:06,540 --> 01:03:09,599
other package from one participating as

1368
01:03:09,599 --> 01:03:12,960
to another participating as after

1369
01:03:12,960 --> 01:03:15,180
receiving a package coming from another

1370
01:03:15,180 --> 01:03:19,079
participated yes as for the router would

1371
01:03:19,079 --> 01:03:23,400
check the SCV field and remove the

1372
01:03:23,400 --> 01:03:25,500
receive header

1373
01:03:25,500 --> 01:03:28,619
the headphone format depends on the mode

1374
01:03:28,619 --> 01:03:32,099
it use transport mode are turning mode

1375
01:03:32,099 --> 01:03:35,880
as it style has two modes the same also

1376
01:03:35,880 --> 01:03:39,119
supposedly two modes in default we may

1377
01:03:39,119 --> 01:03:41,160
hope to use receive

1378
01:03:41,160 --> 01:03:44,220
authentic header in transport mode the

1379
01:03:44,220 --> 01:03:46,200
only difference between the same Edge

1380
01:03:46,200 --> 01:03:49,319
header and standard absent Edge header

1381
01:03:49,319 --> 01:03:54,119
ask is that we save removes the sequence

1382
01:03:54,119 --> 01:03:56,640
number field for its

1383
01:03:56,640 --> 01:03:59,339
twist them to be a multi-centered

1384
01:03:59,339 --> 01:04:01,799
security Association

1385
01:04:01,799 --> 01:04:05,040
this mode is only used for S2s

1386
01:04:05,040 --> 01:04:08,040
communication here we think the endpoint

1387
01:04:08,040 --> 01:04:10,559
is the whole

1388
01:04:10,559 --> 01:04:13,559
autonomous autonomous system

1389
01:04:13,559 --> 01:04:17,099
for distinguishing we save and standard

1390
01:04:17,099 --> 01:04:19,980
abstract we single receive a security

1391
01:04:19,980 --> 01:04:24,720
association should be indexed by SP SPI

1392
01:04:24,720 --> 01:04:27,359
and the counterpart as number generally

1393
01:04:27,359 --> 01:04:30,599
regardless of source of IP address and

1394
01:04:30,599 --> 01:04:34,559
the destination I will address in assay

1395
01:04:34,559 --> 01:04:36,059
database

1396
01:04:36,059 --> 01:04:38,480
foreign

1397
01:04:47,540 --> 01:04:50,700
router and the ACs content IP over

1398
01:04:50,700 --> 01:04:52,680
another as

1399
01:04:52,680 --> 01:04:55,200
each as border router should maintain

1400
01:04:55,200 --> 01:04:58,619
its own assay database the index of

1401
01:04:58,619 --> 01:05:02,099
assay is the same as the transport mode

1402
01:05:02,099 --> 01:05:04,220
I will receive

1403
01:05:04,220 --> 01:05:07,319
uh however we also think there is

1404
01:05:07,319 --> 01:05:10,319
problem as you may know the isability of

1405
01:05:10,319 --> 01:05:13,980
the USP is an optional field as it says

1406
01:05:13,980 --> 01:05:16,460
in RC for

1407
01:05:16,460 --> 01:05:19,680
oswego3 but here it should be our

1408
01:05:19,680 --> 01:05:22,559
required field ESP doesn't protect the

1409
01:05:22,559 --> 01:05:23,760
source IP

1410
01:05:23,760 --> 01:05:26,460
in default so our package could be

1411
01:05:26,460 --> 01:05:29,720
replaced by changing the source IP

1412
01:05:29,720 --> 01:05:33,480
currently negotiate extension to ESP

1413
01:05:33,480 --> 01:05:36,780
that covers IP header or could we always

1414
01:05:36,780 --> 01:05:39,839
send from the contact key and encoded as

1415
01:05:39,839 --> 01:05:43,200
for the router ID in the low bits of the

1416
01:05:43,200 --> 01:05:44,640
SPI

1417
01:05:44,640 --> 01:05:48,140
on next page please

1418
01:05:49,339 --> 01:05:53,339
this this slide shows the possible

1419
01:05:53,339 --> 01:05:56,460
extensions where is the possible

1420
01:05:56,460 --> 01:05:59,520
extension for received here the force is

1421
01:05:59,520 --> 01:06:02,760
head only authentication as a source

1422
01:06:02,760 --> 01:06:06,780
address relation we save basic layers on

1423
01:06:06,780 --> 01:06:11,460
Max in the IQ field is that our tag so

1424
01:06:11,460 --> 01:06:13,859
it increased the computation cost here

1425
01:06:13,859 --> 01:06:17,339
for efficiency it could use the East

1426
01:06:17,339 --> 01:06:19,980
this extension by just authenticating

1427
01:06:19,980 --> 01:06:23,040
the IP Source address and IP destination

1428
01:06:23,040 --> 01:06:26,460
address and other constant skills in the

1429
01:06:26,460 --> 01:06:30,900
IP header but this tag for the same flow

1430
01:06:30,900 --> 01:06:33,839
could be always the same when the K is

1431
01:06:33,839 --> 01:06:35,220
unchanged

1432
01:06:35,220 --> 01:06:38,640
so the attacker may we use this tank for

1433
01:06:38,640 --> 01:06:41,039
launching our player tag this could only

1434
01:06:41,039 --> 01:06:44,640
be used for some non-expensive traffic I

1435
01:06:44,640 --> 01:06:45,539
think

1436
01:06:45,539 --> 01:06:49,460
and uh the second

1437
01:06:49,460 --> 01:06:53,339
extension is 10 best K rotation for

1438
01:06:53,339 --> 01:06:55,920
elevating the about problem this is the

1439
01:06:55,920 --> 01:06:58,740
10 best resident machine key generating

1440
01:06:58,740 --> 01:07:02,039
this will sharing the active time window

1441
01:07:02,039 --> 01:07:05,059
of the key after receiving or security

1442
01:07:05,059 --> 01:07:07,980
Association the two party will use the

1443
01:07:07,980 --> 01:07:11,220
key in a security Association as their

1444
01:07:11,220 --> 01:07:13,680
initial State and rotate the K

1445
01:07:13,680 --> 01:07:16,380
periodically based on the truth and

1446
01:07:16,380 --> 01:07:20,819
Status transition algorithm or

1447
01:07:20,819 --> 01:07:23,900
the tag is generated as a set product

1448
01:07:23,900 --> 01:07:27,420
the best way maybe to use the one-time

1449
01:07:27,420 --> 01:07:28,700
password

1450
01:07:28,700 --> 01:07:32,160
but it is not so easy in practice in

1451
01:07:32,160 --> 01:07:33,420
sync

1452
01:07:33,420 --> 01:07:37,619
and the last one is static static ecthk

1453
01:07:37,619 --> 01:07:43,160
negotiation that is defining an RC 6

1454
01:07:43,160 --> 01:07:46,799
2 8 8 7.

1455
01:07:46,799 --> 01:07:49,500
uh sorry 78

1456
01:07:49,500 --> 01:07:53,220
uh it would allow us to agree on shared

1457
01:07:53,220 --> 01:07:54,500
uh

1458
01:07:54,500 --> 01:07:57,260
circuits simplified by thinking

1459
01:07:57,260 --> 01:08:01,260
synchronizing the rtk database also Ike

1460
01:08:01,260 --> 01:08:05,599
is also stateless as it is iudp

1461
01:08:05,599 --> 01:08:08,940
button here's littlest simplifies the

1462
01:08:08,940 --> 01:08:13,140
provisioning of as border routers as we

1463
01:08:13,140 --> 01:08:16,020
may not use too many security channels

1464
01:08:16,020 --> 01:08:18,799
for S models and ACS communication

1465
01:08:18,799 --> 01:08:22,520
however this may require a new episode

1466
01:08:22,520 --> 01:08:25,560
negotiation mechanism as a supplement

1467
01:08:25,560 --> 01:08:29,060
the FC

1468
01:08:29,060 --> 01:08:33,120
6023 and that is cloudless initiation of

1469
01:08:33,120 --> 01:08:36,600
iq2 security Association may be a good

1470
01:08:36,600 --> 01:08:37,560
choice

1471
01:08:37,560 --> 01:08:41,120
on next page please

1472
01:08:42,899 --> 01:08:45,140
thanks

1473
01:08:45,140 --> 01:08:48,359
and here is some security consideration

1474
01:08:48,359 --> 01:08:51,080
operational consideration

1475
01:08:51,080 --> 01:08:52,979
uh

1476
01:08:52,979 --> 01:08:55,979
and uh

1477
01:08:55,979 --> 01:08:59,339
about the security is consideration with

1478
01:08:59,339 --> 01:09:02,399
with shows certain model in general we

1479
01:09:02,399 --> 01:09:04,679
save six to provide us strong defense

1480
01:09:04,679 --> 01:09:08,100
against arbitrary active attackers who

1481
01:09:08,100 --> 01:09:09,839
are external to the source and

1482
01:09:09,839 --> 01:09:11,580
destination yes

1483
01:09:11,580 --> 01:09:13,979
however different real estate modes and

1484
01:09:13,979 --> 01:09:16,679
the configuration of a different sequel

1485
01:09:16,679 --> 01:09:17,960
properties

1486
01:09:17,960 --> 01:09:22,259
underway is which shows two attacks one

1487
01:09:22,259 --> 01:09:25,560
is replied and the other is done great

1488
01:09:25,560 --> 01:09:27,420
attack

1489
01:09:27,420 --> 01:09:31,319
and we single receive also has provides

1490
01:09:31,319 --> 01:09:34,560
significant Security benefits even if it

1491
01:09:34,560 --> 01:09:39,899
is not only deployed by a fraction of RS

1492
01:09:39,899 --> 01:09:43,259
and we also think the series can

1493
01:09:43,259 --> 01:09:48,000
comparable with current episode and

1494
01:09:48,000 --> 01:09:50,759
even with other or social address

1495
01:09:50,759 --> 01:09:53,339
validation approach

1496
01:09:53,339 --> 01:09:56,239
and

1497
01:09:56,340 --> 01:09:59,660
yeah option operational considerations

1498
01:09:59,660 --> 01:10:04,219
we talk about a way questions about

1499
01:10:04,219 --> 01:10:06,540
reliability multiple

1500
01:10:06,540 --> 01:10:07,620
uh

1501
01:10:07,620 --> 01:10:10,320
as for the rotating synchronization and

1502
01:10:10,320 --> 01:10:13,560
performance and until on the net

1503
01:10:13,560 --> 01:10:15,660
scenaries

1504
01:10:15,660 --> 01:10:17,400
uh

1505
01:10:17,400 --> 01:10:20,719
next page please

1506
01:10:22,640 --> 01:10:25,640
uh so that is the

1507
01:10:25,640 --> 01:10:29,000
questions that we have in country in

1508
01:10:29,000 --> 01:10:31,980
writing this graph

1509
01:10:31,980 --> 01:10:36,379
and we need your help

1510
01:10:38,000 --> 01:10:39,900
[Music]

1511
01:10:39,900 --> 01:10:43,460
that's all thanks

1512
01:10:43,560 --> 01:10:45,980
yes

1513
01:10:48,239 --> 01:10:50,640
so I was gonna just um give three

1514
01:10:50,640 --> 01:10:52,860
answers quickly for the things I saw so

1515
01:10:52,860 --> 01:10:55,639
if we go to slide four

1516
01:10:59,219 --> 01:11:00,840
um the question was just like video of

1517
01:11:00,840 --> 01:11:02,699
an authenticated permanent rejection yes

1518
01:11:02,699 --> 01:11:05,040
that's a delete it's up to each end

1519
01:11:05,040 --> 01:11:06,780
where they will restart a total or not

1520
01:11:06,780 --> 01:11:08,280
but those are independent decisions so

1521
01:11:08,280 --> 01:11:10,739
if you delete the tunnel then then it

1522
01:11:10,739 --> 01:11:12,659
it's up to both peers where they decide

1523
01:11:12,659 --> 01:11:14,400
to establish the tunnel again or not

1524
01:11:14,400 --> 01:11:17,340
there's no negotiation to say don't ever

1525
01:11:17,340 --> 01:11:19,260
come back to me

1526
01:11:19,260 --> 01:11:20,880
so next slide so

1527
01:11:20,880 --> 01:11:25,620
uh sorry go ahead uh I'm a benchwartz

1528
01:11:25,620 --> 01:11:28,380
I'm a co-author on this draft

1529
01:11:28,380 --> 01:11:30,420
um I want to ask for a clarification

1530
01:11:30,420 --> 01:11:34,920
there my impression is that the uh is

1531
01:11:34,920 --> 01:11:38,400
that Ike the the ike authorization step

1532
01:11:38,400 --> 01:11:42,140
also produces a child essay

1533
01:11:42,140 --> 01:11:46,260
uh unless childless Ike V2 unless

1534
01:11:46,260 --> 01:11:48,960
there's a child with like me too

1535
01:11:48,960 --> 01:11:50,300
um

1536
01:11:50,300 --> 01:11:52,739
maybe I mentioned us to the permanent

1537
01:11:52,739 --> 01:11:54,239
rejection you mean not permanent

1538
01:11:54,239 --> 01:11:56,340
rejection of the ike peer not of the

1539
01:11:56,340 --> 01:11:57,600
child essay

1540
01:11:57,600 --> 01:11:59,699
I know I do mean of the child essay my

1541
01:11:59,699 --> 01:12:01,920
question is does delete

1542
01:12:01,920 --> 01:12:03,719
um is there a race condition basically

1543
01:12:03,719 --> 01:12:06,900
where the ike auth handshake generates a

1544
01:12:06,900 --> 01:12:09,239
child essay and then you have to delete

1545
01:12:09,239 --> 01:12:11,460
it afterward quickly that is possible

1546
01:12:11,460 --> 01:12:14,040
yes if if if you set up a child to say

1547
01:12:14,040 --> 01:12:16,260
and you end up not liking it and you

1548
01:12:16,260 --> 01:12:17,820
have to send a delete again

1549
01:12:17,820 --> 01:12:20,580
right but in order to the only it is

1550
01:12:20,580 --> 01:12:23,340
childless the only way to not set up a

1551
01:12:23,340 --> 01:12:24,540
child essay

1552
01:12:24,540 --> 01:12:26,520
yes okay

1553
01:12:26,520 --> 01:12:29,280
yes but there are there can be several

1554
01:12:29,280 --> 01:12:31,800
um reasons why you would want to listen

1555
01:12:31,800 --> 01:12:36,380
the RFC mentions at least some of them

1556
01:12:36,600 --> 01:12:39,140
thank you

1557
01:12:39,719 --> 01:12:42,239
uh next slide

1558
01:12:42,239 --> 01:12:45,420
uh the icv is optional uh I think this

1559
01:12:45,420 --> 01:12:48,000
needs a clarification because the icv is

1560
01:12:48,000 --> 01:12:50,100
mandatory for those ciphers that require

1561
01:12:50,100 --> 01:12:54,179
it so if you have a uh AES Shot 2 then

1562
01:12:54,179 --> 01:12:55,980
the ICP is definitely required because

1563
01:12:55,980 --> 01:12:58,080
that's where your integrity is if you're

1564
01:12:58,080 --> 01:13:00,900
using an aead then since it has a

1565
01:13:00,900 --> 01:13:02,880
built-in Integrity there's no icv so you

1566
01:13:02,880 --> 01:13:06,060
don't need it so optional is for the

1567
01:13:06,060 --> 01:13:07,860
packet format but it's not optional to

1568
01:13:07,860 --> 01:13:09,900
send the human gets to choose you have

1569
01:13:09,900 --> 01:13:11,820
to comply to your cryptographic

1570
01:13:11,820 --> 01:13:13,140
algorithm

1571
01:13:13,140 --> 01:13:15,320
foreign

1572
01:13:16,940 --> 01:13:19,800
how do peers Express a preference for a

1573
01:13:19,800 --> 01:13:22,679
requirement for transfer mode you can

1574
01:13:22,679 --> 01:13:24,300
only set a preference by saying use

1575
01:13:24,300 --> 01:13:26,040
transport mode and if the other end

1576
01:13:26,040 --> 01:13:27,540
doesn't agree with that you must use

1577
01:13:27,540 --> 01:13:28,800
total mode

1578
01:13:28,800 --> 01:13:30,719
and that was by Design and I understand

1579
01:13:30,719 --> 01:13:34,280
that a lot of people hate this word

1580
01:13:41,880 --> 01:13:45,000
uh thanks Paul uh if there's anybody

1581
01:13:45,000 --> 01:13:46,560
else who

1582
01:13:46,560 --> 01:13:47,520
um

1583
01:13:47,520 --> 01:13:50,540
yeah I've got

1584
01:13:55,199 --> 01:13:58,020
uh one quick comment about uh static

1585
01:13:58,020 --> 01:14:00,600
static defeat Hellman one issue you run

1586
01:14:00,600 --> 01:14:03,120
you will run into with that is there is

1587
01:14:03,120 --> 01:14:05,840
no post Quantum equivalent for that

1588
01:14:05,840 --> 01:14:09,000
uh so unless you want to run into big

1589
01:14:09,000 --> 01:14:11,340
problems in the future you're better off

1590
01:14:11,340 --> 01:14:13,260
avoiding it

1591
01:14:13,260 --> 01:14:15,239
okay thank you I want to emphasize that

1592
01:14:15,239 --> 01:14:16,860
these are possible extensions they're

1593
01:14:16,860 --> 01:14:20,219
not extensions that are actually uh

1594
01:14:20,219 --> 01:14:23,100
proposed in the draft their their sort

1595
01:14:23,100 --> 01:14:25,260
of notes to self about things we could

1596
01:14:25,260 --> 01:14:28,500
propose if we if we find it necessary

1597
01:14:28,500 --> 01:14:29,400
um

1598
01:14:29,400 --> 01:14:32,460
I just want to briefly add that this is

1599
01:14:32,460 --> 01:14:34,620
a very very early stage proposal and

1600
01:14:34,620 --> 01:14:37,380
we're still uh sort of looking through

1601
01:14:37,380 --> 01:14:40,380
the various ip6 specifications and

1602
01:14:40,380 --> 01:14:42,659
trying to figure out which pieces fit

1603
01:14:42,659 --> 01:14:46,440
what and what's missing and really this

1604
01:14:46,440 --> 01:14:49,199
is very closely connected to to things

1605
01:14:49,199 --> 01:14:52,699
like the anti-replay subspaces proposal

1606
01:14:52,699 --> 01:14:56,219
this is fundamentally about trying to

1607
01:14:56,219 --> 01:14:59,940
figure out how to operate an ipsec mesh

1608
01:14:59,940 --> 01:15:02,880
really at very large scale and trying to

1609
01:15:02,880 --> 01:15:04,560
figure out how to minimize the amount of

1610
01:15:04,560 --> 01:15:07,940
state to make that practical

1611
01:15:12,239 --> 01:15:16,199
all right so no more comments on that so

1612
01:15:16,199 --> 01:15:18,480
let's go forward then

1613
01:15:18,480 --> 01:15:24,239
and the next one is then raypan

1614
01:15:26,760 --> 01:15:30,020
um hello everyone my name is

1615
01:15:30,320 --> 01:15:35,640
go closer okay okay no yeah okay

1616
01:15:35,640 --> 01:15:38,480
um next please

1617
01:15:39,120 --> 01:15:41,699
um first I'd like to introduce the

1618
01:15:41,699 --> 01:15:47,120
background of this draft and in RFC 72

1619
01:15:47,120 --> 01:15:52,080
96 section 2.8 it says that when we're

1620
01:15:52,080 --> 01:15:54,540
keen the new child essay should not have

1621
01:15:54,540 --> 01:15:56,340
different traffic selectors and

1622
01:15:56,340 --> 01:16:01,140
algorithms than the old one so you don't

1623
01:16:01,140 --> 01:16:04,920
need to you can just resend the TS and

1624
01:16:04,920 --> 01:16:08,060
the sa payloads but furthermore you can

1625
01:16:08,060 --> 01:16:11,340
omit the essay and TS payloads during

1626
01:16:11,340 --> 01:16:15,260
the key and it doesn't violate the RFC

1627
01:16:15,260 --> 01:16:20,100
72 96 and also it can save the bandwidth

1628
01:16:20,100 --> 01:16:24,060
and reduce the CPU operations next slide

1629
01:16:24,060 --> 01:16:26,239
please

1630
01:16:27,000 --> 01:16:28,920
um so

1631
01:16:28,920 --> 01:16:31,500
um this is the solution recap

1632
01:16:31,500 --> 01:16:36,239
um it's it um after itf113 and there is

1633
01:16:36,239 --> 01:16:40,199
no change to the solution and um

1634
01:16:40,199 --> 01:16:42,260
um

1635
01:16:42,260 --> 01:16:45,300
there was a lot of discussions

1636
01:16:45,300 --> 01:16:47,520
um about this draft in the previous time

1637
01:16:47,520 --> 01:16:52,320
and so after but the solution gets uh

1638
01:16:52,320 --> 01:16:57,199
got Pure stable and mature um

1639
01:16:57,199 --> 01:17:02,640
step uh since itf113 and the solution is

1640
01:17:02,640 --> 01:17:05,760
quite simple first if the negotiating of

1641
01:17:05,760 --> 01:17:08,940
the support for this optimization during

1642
01:17:08,940 --> 01:17:12,420
the uh during the for the between the

1643
01:17:12,420 --> 01:17:14,840
POS and uh

1644
01:17:14,840 --> 01:17:19,620
next is to just send the new Optima

1645
01:17:19,620 --> 01:17:23,760
notification payloads instead of the

1646
01:17:23,760 --> 01:17:27,780
um TS and sa payloads for working the

1647
01:17:27,780 --> 01:17:31,500
iksa and child essays uh next slide

1648
01:17:31,500 --> 01:17:32,460
please

1649
01:17:32,460 --> 01:17:34,560
actually just joking about the comment

1650
01:17:34,560 --> 01:17:37,920
on the middle option is wrong because if

1651
01:17:37,920 --> 01:17:39,540
you read the previous stage it says

1652
01:17:39,540 --> 01:17:41,340
child essay

1653
01:17:41,340 --> 01:17:44,699
it doesn't cover ICS IKS can have a

1654
01:17:44,699 --> 01:17:46,380
different algorithms

1655
01:17:46,380 --> 01:17:50,100
so the optimization for Ikea doesn't

1656
01:17:50,100 --> 01:17:52,500
really apply but the other two actually

1657
01:17:52,500 --> 01:17:54,600
are useful

1658
01:17:54,600 --> 01:17:58,980
uh yeah yeah but uh yeah

1659
01:17:58,980 --> 01:18:00,780
so

1660
01:18:00,780 --> 01:18:02,219
um

1661
01:18:02,219 --> 01:18:05,640
um next about the updates the version 9

1662
01:18:05,640 --> 01:18:09,600
was updated for itf114 and there was no

1663
01:18:09,600 --> 01:18:12,960
change and version 10 was updated before

1664
01:18:12,960 --> 01:18:16,199
this meeting and only two types typos

1665
01:18:16,199 --> 01:18:20,640
were fixed and the next slide please

1666
01:18:20,640 --> 01:18:25,560
and for uh in the itf113 Ibis acne

1667
01:18:25,560 --> 01:18:30,120
report it says this work might be ready

1668
01:18:30,120 --> 01:18:32,940
to be adopted next slide please

1669
01:18:32,940 --> 01:18:36,960
and in 104 report it says this should be

1670
01:18:36,960 --> 01:18:40,320
ready for adoption next slide please so

1671
01:18:40,320 --> 01:18:42,000
these document should say must be ready

1672
01:18:42,000 --> 01:18:45,000
yeah

1673
01:18:46,440 --> 01:18:50,540
next slide no no shoot blush actually

1674
01:18:50,820 --> 01:18:54,480
next slide uh yeah so we sincerely ask

1675
01:18:54,480 --> 01:18:56,699
for working group adoption of this trap

1676
01:18:56,699 --> 01:18:59,699
because now we think they uh it's as

1677
01:18:59,699 --> 01:19:02,400
clear and mature and also in the future

1678
01:19:02,400 --> 01:19:06,920
we will do the interrupt test yep

1679
01:19:10,320 --> 01:19:13,699
any other comments on this

1680
01:19:16,199 --> 01:19:20,219
so I guess people are okay so there is a

1681
01:19:20,219 --> 01:19:24,860
couple of comments coming so great

1682
01:19:26,040 --> 01:19:29,820
hello I'm from Telecom

1683
01:19:29,820 --> 01:19:32,760
I have questions uh did you have a

1684
01:19:32,760 --> 01:19:36,120
deployed this technology in any

1685
01:19:36,120 --> 01:19:40,739
operators network uh actually for our

1686
01:19:40,739 --> 01:19:44,580
base station products as far as I know

1687
01:19:44,580 --> 01:19:47,940
they have deployed this um

1688
01:19:47,940 --> 01:19:49,739
this function yeah

1689
01:19:49,739 --> 01:19:53,400
for the you know the 5G scenarios yeah

1690
01:19:53,400 --> 01:19:56,340
to protect the because you know the base

1691
01:19:56,340 --> 01:19:59,100
stations will need to use the ipsec to

1692
01:19:59,100 --> 01:20:02,880
protect their Communications so uh they

1693
01:20:02,880 --> 01:20:06,120
have deployed this uh function yeah okay

1694
01:20:06,120 --> 01:20:09,920
yes I think it is very useful in the

1695
01:20:09,920 --> 01:20:15,600
network which deployed uh ipsec in large

1696
01:20:15,600 --> 01:20:19,140
scale and uh yes in personal I'm very

1697
01:20:19,140 --> 01:20:21,960
interested in this solutions thank you

1698
01:20:21,960 --> 01:20:24,860
thank you very much

1699
01:20:27,960 --> 01:20:30,980
all right next

1700
01:20:36,140 --> 01:20:39,620
chain mailing

1701
01:20:42,360 --> 01:20:45,000
mailing train from China mobile

1702
01:20:45,000 --> 01:20:48,360
uh I'm a covers on this draft uh it's

1703
01:20:48,360 --> 01:20:52,440
very reducing size and capability of i2v

1704
01:20:52,440 --> 01:20:56,880
I gave me to exchange to optimize the IP

1705
01:20:56,880 --> 01:20:59,820
set used by low power sensitive devices

1706
01:20:59,820 --> 01:21:02,719
and that was concerned environments

1707
01:21:02,719 --> 01:21:06,239
these two historical reports do call me

1708
01:21:06,239 --> 01:21:08,820
back that the choosing this draft is

1709
01:21:08,820 --> 01:21:10,860
ready for adoption

1710
01:21:10,860 --> 01:21:14,820
so no matter Master urge you to be ready

1711
01:21:14,820 --> 01:21:18,120
for the adoption I support this draft to

1712
01:21:18,120 --> 01:21:20,880
be adopted by the Sun

1713
01:21:20,880 --> 01:21:22,860
thanks

1714
01:21:22,860 --> 01:21:24,960
thank you

1715
01:21:24,960 --> 01:21:28,100
all right Valerie

1716
01:21:28,380 --> 01:21:31,860
oh I read the draft and I think it it

1717
01:21:31,860 --> 01:21:34,679
can be a good starting point because

1718
01:21:34,679 --> 01:21:37,620
it's relatively easy to implement and it

1719
01:21:37,620 --> 01:21:40,219
provides some optimization in many cases

1720
01:21:40,219 --> 01:21:45,239
so I think that it's a pretty reasonable

1721
01:21:45,239 --> 01:21:48,659
to adopt it is the issue a call for

1722
01:21:48,659 --> 01:21:51,139
adoption

1723
01:21:51,480 --> 01:21:54,139
thank you

1724
01:21:56,900 --> 01:21:59,520
all right anybody else

1725
01:21:59,520 --> 01:22:03,679
if not then I think I will

1726
01:22:03,780 --> 01:22:04,980
save

1727
01:22:04,980 --> 01:22:06,540
and now it's in the working group

1728
01:22:06,540 --> 01:22:07,860
adoption call

1729
01:22:07,860 --> 01:22:09,600
thank you very much after the data

1730
01:22:09,600 --> 01:22:12,380
tracker returns

1731
01:22:12,620 --> 01:22:15,360
after the presentation

1732
01:22:15,360 --> 01:22:18,139
thank you very much

1733
01:22:19,080 --> 01:22:20,940
what data tracker seems to be slow okay

1734
01:22:20,940 --> 01:22:24,659
the next one is uh IP secondary play sub

1735
01:22:24,659 --> 01:22:27,139
basis

1736
01:22:27,239 --> 01:22:31,140
and I got an error restricted access

1737
01:22:31,140 --> 01:22:33,380
foreign

1738
01:22:42,540 --> 01:22:45,420
and I'll be presenting the issue we have

1739
01:22:45,420 --> 01:22:50,000
with anti-replay in the multi passage

1740
01:22:50,000 --> 01:22:53,820
and multicore processing uh for ipsec

1741
01:22:53,820 --> 01:22:56,840
next slides please

1742
01:22:57,360 --> 01:22:59,640
so we have a problem that is quite

1743
01:22:59,640 --> 01:23:01,440
similar to the one that is addressed by

1744
01:23:01,440 --> 01:23:02,580
the

1745
01:23:02,580 --> 01:23:03,179
um

1746
01:23:03,179 --> 01:23:05,820
draft from power watches and other

1747
01:23:05,820 --> 01:23:08,400
previous draft as well which is to do

1748
01:23:08,400 --> 01:23:10,860
improve their performances of ipsec in

1749
01:23:10,860 --> 01:23:12,960
the context of multi multi-core and

1750
01:23:12,960 --> 01:23:15,320
multi-pass and Qs as well

1751
01:23:15,320 --> 01:23:19,020
the difference is that we are trying to

1752
01:23:19,020 --> 01:23:22,739
do it on a quite a large ipsec apps with

1753
01:23:22,739 --> 01:23:25,040
10 or thousands of

1754
01:23:25,040 --> 01:23:29,280
ipsec peers and in that situation if we

1755
01:23:29,280 --> 01:23:31,980
try to increase the number of child

1756
01:23:31,980 --> 01:23:33,900
let's say for instance assume we have

1757
01:23:33,900 --> 01:23:37,800
six path a cause aqs classes and it's

1758
01:23:37,800 --> 01:23:40,800
still quite a conservative number so we

1759
01:23:40,800 --> 01:23:44,219
get to like around 4 million uh child

1760
01:23:44,219 --> 01:23:45,840
let's say we would have to exchange to

1761
01:23:45,840 --> 01:23:47,940
establish all the tunnels

1762
01:23:47,940 --> 01:23:51,239
and so we fear that this will add an

1763
01:23:51,239 --> 01:23:53,699
unnecessarily load to the the ike

1764
01:23:53,699 --> 01:23:57,420
negotiation and re-keying as well uh

1765
01:23:57,420 --> 01:24:00,260
I've will have some issues with the the

1766
01:24:00,260 --> 01:24:03,780
cash and memory uh in the CPU to do that

1767
01:24:03,780 --> 01:24:06,960
next slide please

1768
01:24:06,960 --> 01:24:09,719
so uh what we want to do is uh try and

1769
01:24:09,719 --> 01:24:14,159
to to change the slightly the entry play

1770
01:24:14,159 --> 01:24:17,100
processing and because it cannot be done

1771
01:24:17,100 --> 01:24:19,679
efficiently across multiple cores and in

1772
01:24:19,679 --> 01:24:22,620
the context of multi-path it it is quite

1773
01:24:22,620 --> 01:24:24,540
easy to have out of other packets that

1774
01:24:24,540 --> 01:24:26,360
gets dropped because they're out of the

1775
01:24:26,360 --> 01:24:30,239
window so for that we want to uh for a

1776
01:24:30,239 --> 01:24:32,340
single child let's say I have multiple

1777
01:24:32,340 --> 01:24:34,860
anti-replay material anti-replay window

1778
01:24:34,860 --> 01:24:37,620
that we can spread across multiple

1779
01:24:37,620 --> 01:24:39,600
Subspace ID

1780
01:24:39,600 --> 01:24:43,080
and we just need to set the the sender

1781
01:24:43,080 --> 01:24:44,820
we just need to set the Subspace ID in

1782
01:24:44,820 --> 01:24:47,640
the ESP editor and when the receiver uh

1783
01:24:47,640 --> 01:24:49,260
see the packets it just has to get the

1784
01:24:49,260 --> 01:24:52,140
Subspace ID to uh use the correct

1785
01:24:52,140 --> 01:24:53,880
anti-replay window

1786
01:24:53,880 --> 01:24:56,340
next slide please

1787
01:24:56,340 --> 01:24:59,280
so we want to start uh some discussion

1788
01:24:59,280 --> 01:25:02,040
about that on the the emailing list the

1789
01:25:02,040 --> 01:25:05,159
first one is uh the ike negotiation uh

1790
01:25:05,159 --> 01:25:06,300
currently in the draft we have an

1791
01:25:06,300 --> 01:25:09,000
address that at all so any input from

1792
01:25:09,000 --> 01:25:12,000
the working group is warmly welcomed and

1793
01:25:12,000 --> 01:25:13,520
next slide please

1794
01:25:13,520 --> 01:25:16,320
the second one would be to where to

1795
01:25:16,320 --> 01:25:20,219
store the the set space ID in the ESP

1796
01:25:20,219 --> 01:25:23,820
Adder one option we started from was to

1797
01:25:23,820 --> 01:25:27,360
use the sequence number field in the ESP

1798
01:25:27,360 --> 01:25:29,880
editor but that limits the number of

1799
01:25:29,880 --> 01:25:32,280
bits we can use and on High beat threats

1800
01:25:32,280 --> 01:25:35,640
B trades link it can have some resync

1801
01:25:35,640 --> 01:25:38,699
issue and custom outage one solution for

1802
01:25:38,699 --> 01:25:42,780
that was to use an explicit extended

1803
01:25:42,780 --> 01:25:45,540
sequence number field in the ESP editor

1804
01:25:45,540 --> 01:25:47,880
in that case we can use more bits and

1805
01:25:47,880 --> 01:25:50,520
won't have this issue uh the second

1806
01:25:50,520 --> 01:25:52,980
option would be to have an additional

1807
01:25:52,980 --> 01:25:56,940
field in the ESP editor uh which like we

1808
01:25:56,940 --> 01:26:00,120
would get for instance 16 bits uh to to

1809
01:26:00,120 --> 01:26:03,840
encode the Subspace ID uh but yeah next

1810
01:26:03,840 --> 01:26:05,460
slide please

1811
01:26:05,460 --> 01:26:07,500
the last discussion and this is already

1812
01:26:07,500 --> 01:26:09,840
started on the mailing list was to have

1813
01:26:09,840 --> 01:26:12,600
the fips compliance uh especially we

1814
01:26:12,600 --> 01:26:14,639
talked about the AES GCM Phipps

1815
01:26:14,639 --> 01:26:17,520
compliance so there is a maximum number

1816
01:26:17,520 --> 01:26:19,679
of time you have to you can use the the

1817
01:26:19,679 --> 01:26:22,980
key material so we need to make sure

1818
01:26:22,980 --> 01:26:26,400
that you don't go above the 2264 usage

1819
01:26:26,400 --> 01:26:29,880
allowed and for that we think if it's in

1820
01:26:29,880 --> 01:26:31,620
the extended sequence number it's for

1821
01:26:31,620 --> 01:26:33,900
free if it's not then we just have to

1822
01:26:33,900 --> 01:26:36,000
divide that by the number of zip spaces

1823
01:26:36,000 --> 01:26:37,020
you will use

1824
01:26:37,020 --> 01:26:39,480
and we also need to make sure that the

1825
01:26:39,480 --> 01:26:43,320
iv used every time is unique and but we

1826
01:26:43,320 --> 01:26:46,199
think that is should not be a big issue

1827
01:26:46,199 --> 01:26:48,840
and should be quite easy to do next

1828
01:26:48,840 --> 01:26:50,520
slide please

1829
01:26:50,520 --> 01:26:53,699
so uh we want like what we actually want

1830
01:26:53,699 --> 01:26:56,040
is just the input from the the working

1831
01:26:56,040 --> 01:26:59,159
group to see if that's an issue that

1832
01:26:59,159 --> 01:27:02,520
other people would have and uh are there

1833
01:27:02,520 --> 01:27:05,820
like how to solve it and come with a

1834
01:27:05,820 --> 01:27:08,639
common proposal for for that so for that

1835
01:27:08,639 --> 01:27:09,960
problem

1836
01:27:09,960 --> 01:27:13,940
thank you if anyone has any soul

1837
01:27:18,659 --> 01:27:21,500
for this

1838
01:27:21,540 --> 01:27:26,340
for the GCM uh uh a nonce issue uh

1839
01:27:26,340 --> 01:27:28,320
remember 32 bits are actually coming

1840
01:27:28,320 --> 01:27:31,320
right now from the from the key exchange

1841
01:27:31,320 --> 01:27:33,900
from the key exchange the obvious thing

1842
01:27:33,900 --> 01:27:36,600
to do is take your Subspace ID and stir

1843
01:27:36,600 --> 01:27:38,639
that into those 32 bits and therefore

1844
01:27:38,639 --> 01:27:41,159
not Collision is impossible

1845
01:27:41,159 --> 01:27:43,699
okay

1846
01:27:50,940 --> 01:27:55,320
uh benchwort's alphabet uh I think this

1847
01:27:55,320 --> 01:27:58,260
is as I mentioned uh one of the main

1848
01:27:58,260 --> 01:28:00,239
problems that we ran into while trying

1849
01:28:00,239 --> 01:28:02,340
to draw up the resab so I would love to

1850
01:28:02,340 --> 01:28:05,460
see a solution here uh I would prefer a

1851
01:28:05,460 --> 01:28:07,980
like pure stateless solution it looks to

1852
01:28:07,980 --> 01:28:09,840
me like option two is the one that's

1853
01:28:09,840 --> 01:28:13,139
that that allows the recipient to be

1854
01:28:13,139 --> 01:28:13,940
um

1855
01:28:13,940 --> 01:28:16,560
basically stateless specifically the the

1856
01:28:16,560 --> 01:28:19,199
really important thing is like the for

1857
01:28:19,199 --> 01:28:21,060
the recipient to be able to lose all its

1858
01:28:21,060 --> 01:28:23,639
state and uh and only lose replay

1859
01:28:23,639 --> 01:28:25,920
protection and still be able to decrypt

1860
01:28:25,920 --> 01:28:27,239
packets

1861
01:28:27,239 --> 01:28:29,219
uh so anyway option number two looks

1862
01:28:29,219 --> 01:28:31,020
looks like a good approach to me there

1863
01:28:31,020 --> 01:28:32,280
are a lot of different approaches here

1864
01:28:32,280 --> 01:28:36,659
uh the another one that we talked about

1865
01:28:36,659 --> 01:28:40,500
was trying to uh

1866
01:28:40,500 --> 01:28:43,739
trying to Hash the

1867
01:28:43,739 --> 01:28:44,460
um

1868
01:28:44,460 --> 01:28:49,860
The Source IP of the sender into the

1869
01:28:49,860 --> 01:28:53,340
um using hkdf to to add the source IP of

1870
01:28:53,340 --> 01:28:56,280
the sender into the secret used for

1871
01:28:56,280 --> 01:28:58,260
decryption and validation

1872
01:28:58,260 --> 01:29:00,600
which means that every Source IP

1873
01:29:00,600 --> 01:29:03,120
automatically gets its own sequence

1874
01:29:03,120 --> 01:29:07,020
number space so if you are if you know

1875
01:29:07,020 --> 01:29:09,000
that you don't have Nats if you don't

1876
01:29:09,000 --> 01:29:13,199
have to be Nat compatible then I think

1877
01:29:13,199 --> 01:29:14,580
you might also want to consider that

1878
01:29:14,580 --> 01:29:16,260
kind of design

1879
01:29:16,260 --> 01:29:19,639
okay thank you

1880
01:29:25,440 --> 01:29:27,420
um Danielle from Erickson

1881
01:29:27,420 --> 01:29:29,820
um just to mention we thank you for for

1882
01:29:29,820 --> 01:29:31,980
the presentation

1883
01:29:31,980 --> 01:29:33,719
um we do support

1884
01:29:33,719 --> 01:29:36,600
um this work

1885
01:29:36,600 --> 01:29:37,380
um

1886
01:29:37,380 --> 01:29:39,960
and we are happy to

1887
01:29:39,960 --> 01:29:42,300
to find find I mean we are facing the

1888
01:29:42,300 --> 01:29:44,520
same the same problems and we are

1889
01:29:44,520 --> 01:29:46,320
willing to find a solution in that space

1890
01:29:46,320 --> 01:29:48,620
too

1891
01:29:48,780 --> 01:29:50,960
foreign

1892
01:29:52,340 --> 01:29:56,100
so we already have 32-bit sender ID

1893
01:29:56,100 --> 01:29:58,560
which tells what its reply counters use

1894
01:29:58,560 --> 01:30:01,620
it's called SPI so having multiple

1895
01:30:01,620 --> 01:30:03,800
essays is actually the solution for dust

1896
01:30:03,800 --> 01:30:05,820
uh the other thing is you have to

1897
01:30:05,820 --> 01:30:08,520
remember replay protection the sequence

1898
01:30:08,520 --> 01:30:10,800
number generation is mandatory the

1899
01:30:10,800 --> 01:30:12,120
checking is not

1900
01:30:12,120 --> 01:30:16,800
and I actually are very I don't think

1901
01:30:16,800 --> 01:30:18,840
actually the replay protection in this

1902
01:30:18,840 --> 01:30:19,800
kind of

1903
01:30:19,800 --> 01:30:22,679
in the middle tunnels gives that much of

1904
01:30:22,679 --> 01:30:24,840
benefits because they're gonna still be

1905
01:30:24,840 --> 01:30:27,719
replaced happening after your ipsec

1906
01:30:27,719 --> 01:30:30,420
gateway or before I pick this up Gateway

1907
01:30:30,420 --> 01:30:32,940
which is not detected by repay counter

1908
01:30:32,940 --> 01:30:36,179
so you can't actually really trust that

1909
01:30:36,179 --> 01:30:37,860
there is no replays ever in the network

1910
01:30:37,860 --> 01:30:40,080
so your upper layer protocols need to

1911
01:30:40,080 --> 01:30:42,239
have a sequest numbers or protection

1912
01:30:42,239 --> 01:30:46,260
from replace anyway so I'm not sure if

1913
01:30:46,260 --> 01:30:48,179
it actually gives that much of benefit

1914
01:30:48,179 --> 01:30:49,739
in this level

1915
01:30:49,739 --> 01:30:52,380
so I would actually just you know

1916
01:30:52,380 --> 01:30:55,560
generate separate spis for or separate

1917
01:30:55,560 --> 01:30:57,840
child essays for each of these and then

1918
01:30:57,840 --> 01:31:01,159
simply you know disabled or or or

1919
01:31:01,159 --> 01:31:03,179
perhaps even disable to the replay

1920
01:31:03,179 --> 01:31:07,520
checking if you have problems with that

1921
01:31:08,880 --> 01:31:12,920
uh this this was our individual comment

1922
01:31:18,360 --> 01:31:21,380
yes definitely go ahead

1923
01:31:22,400 --> 01:31:25,980
I don't want to make a comment comment

1924
01:31:25,980 --> 01:31:28,679
on any of the possible options to solve

1925
01:31:28,679 --> 01:31:31,320
that but a lot of people have the same

1926
01:31:31,320 --> 01:31:33,600
problems and this really shows that we

1927
01:31:33,600 --> 01:31:36,179
should try to solve that rather sooner

1928
01:31:36,179 --> 01:31:37,500
than later

1929
01:31:37,500 --> 01:31:39,960
and so I would propose to do a virtual

1930
01:31:39,960 --> 01:31:43,260
interim before the next ITF put things

1931
01:31:43,260 --> 01:31:44,760
together with all the people that are

1932
01:31:44,760 --> 01:31:46,739
untrusted and come up with a possible

1933
01:31:46,739 --> 01:31:50,659
solution and Screen done

1934
01:31:51,840 --> 01:31:54,300
we would be glad for that

1935
01:31:54,300 --> 01:31:56,820
good evening

1936
01:31:56,820 --> 01:31:58,980
Ben Ben Schwartz again uh just

1937
01:31:58,980 --> 01:32:02,400
responding to tiro to say uh you know

1938
01:32:02,400 --> 01:32:04,920
this presentation proposes that the

1939
01:32:04,920 --> 01:32:06,960
receiver might need to hold

1940
01:32:06,960 --> 01:32:08,280
um it might need to be able to talk to

1941
01:32:08,280 --> 01:32:11,580
four million different separate senders

1942
01:32:11,580 --> 01:32:13,380
uh with their own sequence number space

1943
01:32:13,380 --> 01:32:15,719
even without replay protection that that

1944
01:32:15,719 --> 01:32:16,380
that

1945
01:32:16,380 --> 01:32:19,320
um or that that recipient or that that

1946
01:32:19,320 --> 01:32:21,540
that Pier or those peers would you know

1947
01:32:21,540 --> 01:32:23,699
potentially then need four million child

1948
01:32:23,699 --> 01:32:27,960
essays and uh no they need one

1949
01:32:27,960 --> 01:32:31,560
one per each because I mean if you have

1950
01:32:31,560 --> 01:32:33,780
if you are not caring about replay

1951
01:32:33,780 --> 01:32:36,300
protection window you don't need to

1952
01:32:36,300 --> 01:32:38,659
create a separated

1953
01:32:38,659 --> 01:32:41,520
no you don't need to separate the you

1954
01:32:41,520 --> 01:32:44,219
know different parts or different cores

1955
01:32:44,219 --> 01:32:47,460
so you do because you can't use the same

1956
01:32:47,460 --> 01:32:50,040
sequence number twice on any of those

1957
01:32:50,040 --> 01:32:52,679
two so I if you

1958
01:32:52,679 --> 01:32:54,960
yeah but I mean quality service classes

1959
01:32:54,960 --> 01:32:56,960
require separate essays or Republic

1960
01:32:56,960 --> 01:33:00,120
replay counters and the parts we only

1961
01:33:00,120 --> 01:33:03,179
because uh they might come in the

1962
01:33:03,179 --> 01:33:04,800
different order they are sent in the

1963
01:33:04,800 --> 01:33:07,380
same location which means that they can

1964
01:33:07,380 --> 01:33:09,060
generate sequence numbers very I mean

1965
01:33:09,060 --> 01:33:11,639
sequels number generation is easy and it

1966
01:33:11,639 --> 01:33:14,280
can be done on multi-core environments

1967
01:33:14,280 --> 01:33:18,300
without any locks we just you know uh

1968
01:33:18,300 --> 01:33:21,900
you know uh what one SPI because it's

1969
01:33:21,900 --> 01:33:23,460
it's impossible to do that there's you

1970
01:33:23,460 --> 01:33:25,320
know tricks to do that it's an

1971
01:33:25,320 --> 01:33:27,659
implementation data but even if you

1972
01:33:27,659 --> 01:33:29,699
actually can't do you have to have a

1973
01:33:29,699 --> 01:33:31,679
course and you can't actually have any

1974
01:33:31,679 --> 01:33:33,659
communication between the course you

1975
01:33:33,659 --> 01:33:35,040
need to have and then you need to have

1976
01:33:35,040 --> 01:33:36,659
one SPI

1977
01:33:36,659 --> 01:33:38,880
or one essay for each score but then we

1978
01:33:38,880 --> 01:33:40,380
come to the back to the what Paul was

1979
01:33:40,380 --> 01:33:42,420
commented earlier that if you have 10

1980
01:33:42,420 --> 01:33:45,239
000 people or peers peers you probably

1981
01:33:45,239 --> 01:33:48,000
don't need each core to have a separate

1982
01:33:48,000 --> 01:33:51,840
uh you know uh a child essay for each of

1983
01:33:51,840 --> 01:33:53,880
those ten thousand because I mean the

1984
01:33:53,880 --> 01:33:55,139
ten thousand is probably going to be

1985
01:33:55,139 --> 01:33:57,300
spread up with each core anyway

1986
01:33:57,300 --> 01:34:00,719
yes but in the context of multipass you

1987
01:34:00,719 --> 01:34:03,420
easily come to a situation where you

1988
01:34:03,420 --> 01:34:06,179
actually have you can't have one essay

1989
01:34:06,179 --> 01:34:09,420
for a car yeah you can't specify that

1990
01:34:09,420 --> 01:34:11,280
each channel is going to be on one

1991
01:34:11,280 --> 01:34:14,280
specific call and so you have the issue

1992
01:34:14,280 --> 01:34:16,620
of steering packets between the core

1993
01:34:16,620 --> 01:34:18,659
quite easily that appears in that

1994
01:34:18,659 --> 01:34:20,699
situation and so you would need like

1995
01:34:20,699 --> 01:34:22,980
multiple like quite a lot of these essay

1996
01:34:22,980 --> 01:34:26,100
maybe not all the four million but a

1997
01:34:26,100 --> 01:34:30,679
number in the same magnitude than those

1998
01:34:34,020 --> 01:34:36,920
next one

1999
01:34:41,639 --> 01:34:43,560
can you hear me yeah hopefully it's

2000
01:34:43,560 --> 01:34:45,540
working yes hi everyone uh yes so I'm

2001
01:34:45,540 --> 01:34:47,580
here I'm one of the uh co-authors of the

2002
01:34:47,580 --> 01:34:49,620
drafts I just want to react to uh some

2003
01:34:49,620 --> 01:34:51,900
of the commands uh terra made the first

2004
01:34:51,900 --> 01:34:54,060
is on entire replay

2005
01:34:54,060 --> 01:34:56,880
um I think it's pretty much a concern I

2006
01:34:56,880 --> 01:34:59,340
mean the replay of packets from an

2007
01:34:59,340 --> 01:35:01,920
attacker the IPC Gateway or the ipsec

2008
01:35:01,920 --> 01:35:04,800
route or whatever it's used to protect

2009
01:35:04,800 --> 01:35:06,860
the internal Network

2010
01:35:06,860 --> 01:35:10,980
entirely is actually expected from uh

2011
01:35:10,980 --> 01:35:14,639
Standard Security standards and

2012
01:35:14,639 --> 01:35:17,940
um you even okay the attacker could not

2013
01:35:17,940 --> 01:35:20,100
create other packets but it could pretty

2014
01:35:20,100 --> 01:35:22,920
much close or help close DDOS attack

2015
01:35:22,920 --> 01:35:26,100
inside the the network if attackers

2016
01:35:26,100 --> 01:35:28,800
could just send more

2017
01:35:28,800 --> 01:35:30,540
um more packet more of the same packets

2018
01:35:30,540 --> 01:35:34,860
it could it could help cause the Adidas

2019
01:35:34,860 --> 01:35:38,219
um second command was about the SPI and

2020
01:35:38,219 --> 01:35:40,679
we could use the the SPI to do that and

2021
01:35:40,679 --> 01:35:43,139
so more shall they say really on that I

2022
01:35:43,139 --> 01:35:44,340
want to stress even though it was

2023
01:35:44,340 --> 01:35:47,580
mentioned that this has really serious

2024
01:35:47,580 --> 01:35:49,739
security not security scalability

2025
01:35:49,739 --> 01:35:53,040
concerned in the implementations

2026
01:35:53,040 --> 01:35:54,960
right now

2027
01:35:54,960 --> 01:35:56,699
um you know like I looked at the VPP

2028
01:35:56,699 --> 01:35:59,219
numbers because they are public uh

2029
01:35:59,219 --> 01:36:02,159
um the top uh speed can be achieved with

2030
01:36:02,159 --> 01:36:05,340
1 000 peers if you get to 10 000 here so

2031
01:36:05,340 --> 01:36:07,739
10 000 child essays you already get the

2032
01:36:07,739 --> 01:36:09,300
performance

2033
01:36:09,300 --> 01:36:12,540
um downgrade uh reduction

2034
01:36:12,540 --> 01:36:15,060
um so if you multiply by 10 or 20 or 100

2035
01:36:15,060 --> 01:36:17,040
the number of challenges that you have

2036
01:36:17,040 --> 01:36:20,159
then you you really lose performance

2037
01:36:20,159 --> 01:36:22,920
um finally on the the spreading of the

2038
01:36:22,920 --> 01:36:25,080
flows and the tunnels to the course so

2039
01:36:25,080 --> 01:36:27,179
one aspect is that

2040
01:36:27,179 --> 01:36:31,440
um okay so when you receive packets

2041
01:36:31,440 --> 01:36:34,199
um those typically of one one tunnel

2042
01:36:34,199 --> 01:36:35,699
typically goes to one specific core

2043
01:36:35,699 --> 01:36:37,800
that's that's correct but when you want

2044
01:36:37,800 --> 01:36:40,380
to transmit on a tunnel

2045
01:36:40,380 --> 01:36:42,420
um then the flows that you want to put

2046
01:36:42,420 --> 01:36:44,040
inside the tunnel they they get

2047
01:36:44,040 --> 01:36:46,560
processed on any core that you're

2048
01:36:46,560 --> 01:36:49,020
processing you don't control where the

2049
01:36:49,020 --> 01:36:52,080
inner flows they come from so you you

2050
01:36:52,080 --> 01:36:54,060
might have you might want to send

2051
01:36:54,060 --> 01:36:56,760
packets coming from the 32 cores into

2052
01:36:56,760 --> 01:37:00,120
the 10 000 tunnels that that pretty much

2053
01:37:00,120 --> 01:37:02,280
happens because you don't control where

2054
01:37:02,280 --> 01:37:06,259
the flows come from before utx

2055
01:37:10,040 --> 01:37:13,260
so actually yeah we actually already 67

2056
01:37:13,260 --> 01:37:14,760
minutes over time and cookies are

2057
01:37:14,760 --> 01:37:16,020
already gone

2058
01:37:16,020 --> 01:37:19,260
so so if I think that's we actually

2059
01:37:19,260 --> 01:37:20,820
managed to get to the end of the agenda

2060
01:37:20,820 --> 01:37:22,739
we didn't have time for the extra items

2061
01:37:22,739 --> 01:37:25,380
and there seems to be a lot of

2062
01:37:25,380 --> 01:37:27,420
discussion look we should do in the list

2063
01:37:27,420 --> 01:37:28,800
so

2064
01:37:28,800 --> 01:37:31,739
let's bring it back to the list

2065
01:37:31,739 --> 01:37:34,699
thank you

2066
01:37:36,719 --> 01:37:38,820
thank you

2067
01:37:38,820 --> 01:37:41,840
thank you everybody

