1
00:00:04,860 --> 00:00:06,960
notes

2
00:00:06,960 --> 00:00:10,340
but he's not in the room

3
00:00:10,980 --> 00:00:13,259
so I'm going to need somebody to back

4
00:00:13,259 --> 00:00:15,599
him up

5
00:00:15,599 --> 00:00:18,840
at least till he shows up

6
00:00:18,840 --> 00:00:21,619
thank you Carl

7
00:00:21,960 --> 00:00:23,060
um

8
00:00:23,060 --> 00:00:24,660
the

9
00:00:24,660 --> 00:00:27,240
laptop to share slides with everyone

10
00:00:27,240 --> 00:00:31,080
here is not on the usual screen so we're

11
00:00:31,080 --> 00:00:32,820
not sure

12
00:00:32,820 --> 00:00:37,200
uh how to fix it we've we've sent a

13
00:00:37,200 --> 00:00:41,100
message uh on jabber hoping one of them

14
00:00:41,100 --> 00:00:43,700
will show up

15
00:00:44,760 --> 00:00:46,920
I think I'm going to run down to get the

16
00:00:46,920 --> 00:00:48,420
secretary head I don't know what else to

17
00:00:48,420 --> 00:00:50,780
do yeah

18
00:01:11,720 --> 00:01:14,720
thank you

19
00:01:44,939 --> 00:01:47,839
thank you

20
00:02:09,080 --> 00:02:12,209
[Music]

21
00:02:15,959 --> 00:02:18,959
protection

22
00:03:15,300 --> 00:03:17,659
foreign

23
00:03:46,799 --> 00:03:49,040
foreign

24
00:03:58,560 --> 00:04:00,420
Roman do you know what to do to get from

25
00:04:00,420 --> 00:04:03,859
here you need to go

26
00:04:05,519 --> 00:04:08,060
we're

27
00:04:09,840 --> 00:04:11,519
here so apparently you're not reading

28
00:04:11,519 --> 00:04:13,280
the jabber chat

29
00:04:13,280 --> 00:04:15,420
where I said that three out of three

30
00:04:15,420 --> 00:04:18,260
Engineers consultant suggested rebooting

31
00:04:18,260 --> 00:04:21,660
so is it just not Broadcasting uh well

32
00:04:21,660 --> 00:04:24,300
no we're seeing what it's uh

33
00:04:24,300 --> 00:04:27,860
but there's no mouse

34
00:04:37,759 --> 00:04:41,220
the person who chaired in here yesterday

35
00:04:41,220 --> 00:04:45,020
said this never worked

36
00:04:45,419 --> 00:04:49,039
yeah that's where we are here

37
00:04:58,860 --> 00:05:01,860
probably

38
00:05:06,180 --> 00:05:10,400
without a mouse I don't have any idea

39
00:05:10,740 --> 00:05:12,840
that's the only app that's all it's

40
00:05:12,840 --> 00:05:15,320
telling you

41
00:05:16,680 --> 00:05:19,460
don't want to go

42
00:05:21,900 --> 00:05:25,440
so this is what kiosk right you think so

43
00:05:25,440 --> 00:05:27,660
it could be it's like full screen yeah

44
00:05:27,660 --> 00:05:29,400
that's what you think it's Linux

45
00:05:29,400 --> 00:05:32,160
but how do we get back to me there

46
00:05:32,160 --> 00:05:34,380
when it auto restart

47
00:05:34,380 --> 00:05:37,159
no idea

48
00:05:37,500 --> 00:05:39,600
at this point it can't make things worse

49
00:05:39,600 --> 00:05:41,460
so I'm just looking at you can't pull

50
00:05:41,460 --> 00:05:46,380
the battery no exactly yeah

51
00:05:47,120 --> 00:05:49,740
did you

52
00:05:49,740 --> 00:05:53,000
I went to the rich yeah

53
00:05:54,259 --> 00:05:56,060
all right

54
00:05:56,060 --> 00:05:59,360
the first one

55
00:06:02,940 --> 00:06:05,419
okay

56
00:06:07,340 --> 00:06:09,600
I mean we could have everyone just to

57
00:06:09,600 --> 00:06:12,500
log into their version

58
00:06:12,560 --> 00:06:14,820
like you can broadcast the slides and

59
00:06:14,820 --> 00:06:17,720
everyone just gotta look at their laptop

60
00:06:17,720 --> 00:06:19,680
I mean just so we can't better than

61
00:06:19,680 --> 00:06:22,759
coffee yeah

62
00:06:32,280 --> 00:06:33,900
all right we're going to try and work

63
00:06:33,900 --> 00:06:36,000
around this problem while uh the

64
00:06:36,000 --> 00:06:37,620
Secretariat's getting someone in here to

65
00:06:37,620 --> 00:06:39,419
fix it um

66
00:06:39,419 --> 00:06:41,880
so if each of you is set up using the

67
00:06:41,880 --> 00:06:44,520
on-site mediko we'll use the other one

68
00:06:44,520 --> 00:06:46,440
but muted

69
00:06:46,440 --> 00:06:47,940
um we will you'll at least be able to

70
00:06:47,940 --> 00:06:49,740
see slides

71
00:06:49,740 --> 00:06:50,460
um

72
00:06:50,460 --> 00:06:53,539
and uh

73
00:06:54,000 --> 00:06:57,000
while we're doing that we'll get the

74
00:06:57,000 --> 00:07:01,080
slides up the first thing as always was

75
00:07:01,080 --> 00:07:04,560
the the minute taker Alexis volunteered

76
00:07:04,560 --> 00:07:07,620
but then he has not shown up yet

77
00:07:07,620 --> 00:07:09,300
um so Carl was pinch hitting until he

78
00:07:09,300 --> 00:07:10,919
does

79
00:07:10,919 --> 00:07:12,479
um

80
00:07:12,479 --> 00:07:14,400
I would say read the note well but it's

81
00:07:14,400 --> 00:07:16,380
not on the screen but as soon as you

82
00:07:16,380 --> 00:07:20,160
I'll get your laptop up uh it will be

83
00:07:20,160 --> 00:07:23,160
the

84
00:07:23,460 --> 00:07:24,660
um

85
00:07:24,660 --> 00:07:27,419
so please uh please do not contribute

86
00:07:27,419 --> 00:07:29,699
until you know what your rights and

87
00:07:29,699 --> 00:07:33,000
responsibilities are uh in the note well

88
00:07:33,000 --> 00:07:36,419
in addition code of conduct please treat

89
00:07:36,419 --> 00:07:38,639
each other respectfully

90
00:07:38,639 --> 00:07:42,020
and um

91
00:07:42,900 --> 00:07:46,020
do you hit authorize I think that was

92
00:07:46,020 --> 00:07:46,940
the problem

93
00:07:46,940 --> 00:07:49,680
oh okay so

94
00:07:49,680 --> 00:07:51,539
um

95
00:07:51,539 --> 00:07:55,680
the agenda is posted uh you can pull

96
00:07:55,680 --> 00:07:57,120
that up

97
00:07:57,120 --> 00:08:01,440
the first things uh on the agenda were

98
00:08:01,440 --> 00:08:04,639
related to the

99
00:08:04,639 --> 00:08:08,880
documents that have made it to the isg

100
00:08:08,880 --> 00:08:13,759
and uh the RFC editor

101
00:08:13,759 --> 00:08:16,319
what do you do when it happened when

102
00:08:16,319 --> 00:08:19,160
they get this state

103
00:08:24,240 --> 00:08:26,240
ment

104
00:08:32,820 --> 00:08:34,559
this is the one that's projecting over

105
00:08:34,559 --> 00:08:36,140
there

106
00:08:36,140 --> 00:08:39,559
oh but I think

107
00:08:42,500 --> 00:08:46,680
she's he's a he's on the music

108
00:08:46,680 --> 00:08:49,339
a.m

109
00:08:49,339 --> 00:08:53,300
but you need to be on the

110
00:08:54,600 --> 00:08:57,980
go back to the agenda

111
00:09:02,279 --> 00:09:04,140
yeah the

112
00:09:04,140 --> 00:09:06,199
um

113
00:09:21,060 --> 00:09:23,940
and click

114
00:09:23,940 --> 00:09:25,940
um

115
00:09:30,600 --> 00:09:33,600
yep

116
00:09:57,120 --> 00:10:01,320
I think it doesn't matter yeah okay

117
00:10:01,320 --> 00:10:03,680
right

118
00:10:03,720 --> 00:10:06,140
now

119
00:10:20,339 --> 00:10:24,260
and go down to the agenda

120
00:10:24,260 --> 00:10:27,720
foreign okay you should be seeing the

121
00:10:27,720 --> 00:10:31,140
agenda on your screens now right

122
00:10:31,140 --> 00:10:34,699
I don't know okay

123
00:10:35,040 --> 00:10:37,880
we did that

124
00:10:43,440 --> 00:10:46,100
yep

125
00:10:49,019 --> 00:10:52,980
you're correct yay

126
00:10:57,600 --> 00:11:00,600
exactly

127
00:11:11,279 --> 00:11:13,880
you have to go to the

128
00:11:13,880 --> 00:11:17,540
presentation Arena

129
00:11:20,640 --> 00:11:22,860
and there's next slide so go to like

130
00:11:22,860 --> 00:11:25,140
four at this point

131
00:11:25,140 --> 00:11:26,880
all right all right so there's the

132
00:11:26,880 --> 00:11:28,620
agenda

133
00:11:28,620 --> 00:11:30,899
uh as you can see it's super full so

134
00:11:30,899 --> 00:11:32,940
this is super frustrating to have lost

135
00:11:32,940 --> 00:11:34,320
this time

136
00:11:34,320 --> 00:11:39,240
but the first batch are uh those that uh

137
00:11:39,240 --> 00:11:42,060
are with the RC editor or the isg I'd

138
00:11:42,060 --> 00:11:44,420
like to just quickly to go down those

139
00:11:44,420 --> 00:11:48,000
and see if the authors have any uh

140
00:11:48,000 --> 00:11:50,820
changes to report with the

141
00:11:50,820 --> 00:11:53,519
uh back to the community so if you can

142
00:11:53,519 --> 00:11:55,920
just go to the mic

143
00:11:55,920 --> 00:11:58,040
um

144
00:11:58,320 --> 00:12:00,420
Sean is there anything with the document

145
00:12:00,420 --> 00:12:03,060
signing uh

146
00:12:03,060 --> 00:12:07,140
um EKU document okay no no status to

147
00:12:07,140 --> 00:12:10,740
share the next one is the CMP algorithms

148
00:12:10,740 --> 00:12:14,720
document it's Hendrick here yep

149
00:12:15,420 --> 00:12:18,240
you've had slides right for this one

150
00:12:18,240 --> 00:12:21,740
okay so let's go to the

151
00:12:28,980 --> 00:12:31,800
Club you can already start

152
00:12:31,800 --> 00:12:33,600
um on the CMP algorithms there is

153
00:12:33,600 --> 00:12:36,420
nothing new we spotted one typo that

154
00:12:36,420 --> 00:12:39,720
should be fixed at all 48.

155
00:12:39,720 --> 00:12:41,959
um with CMP updates

156
00:12:41,959 --> 00:12:47,399
we went drafting 40 to 10 bits we

157
00:12:47,399 --> 00:12:50,899
found out that there is some improvement

158
00:12:50,899 --> 00:12:57,480
to be done in appendix C of 4210 there

159
00:12:57,480 --> 00:12:58,980
was the old

160
00:12:58,980 --> 00:13:02,220
um crmf syntax used

161
00:13:02,220 --> 00:13:05,600
so next slide

162
00:13:06,800 --> 00:13:10,160
next slide

163
00:13:10,200 --> 00:13:12,839
the next slide

164
00:13:12,839 --> 00:13:15,540
so yeah this um

165
00:13:15,540 --> 00:13:18,839
the thing we spotted in 40 to 10 while

166
00:13:18,839 --> 00:13:22,579
drafting the bistra document that in

167
00:13:22,579 --> 00:13:28,200
appendix C this old 2511 syntax was

168
00:13:28,200 --> 00:13:32,760
um used and um right now when we switch

169
00:13:32,760 --> 00:13:35,700
from encrypted values to envelope data

170
00:13:35,700 --> 00:13:40,260
it would be more more practical to make

171
00:13:40,260 --> 00:13:44,700
use of the updated 40 to 11 syntax there

172
00:13:44,700 --> 00:13:46,459
and therefore we

173
00:13:46,459 --> 00:13:51,420
propose to to change this already in CMP

174
00:13:51,420 --> 00:13:55,459
updates a section I think it was

175
00:13:55,459 --> 00:14:00,420
to 17 if I'm right to to make use of

176
00:14:00,420 --> 00:14:05,040
this extended syntax from 4211 already

177
00:14:05,040 --> 00:14:06,360
so

178
00:14:06,360 --> 00:14:08,279
um I

179
00:14:08,279 --> 00:14:11,279
wrote this also on the list and uh

180
00:14:11,279 --> 00:14:13,740
whereas you propose to do this also at

181
00:14:13,740 --> 00:14:17,760
for All 48 if this is agreed okay great

182
00:14:17,760 --> 00:14:18,839
thanks

183
00:14:18,839 --> 00:14:21,800
slide please

184
00:14:22,260 --> 00:14:25,019
regarding lightweight CMP profile so

185
00:14:25,019 --> 00:14:28,139
there was a new version submitted which

186
00:14:28,139 --> 00:14:31,500
addresses the comments from Roman thanks

187
00:14:31,500 --> 00:14:33,120
for that

188
00:14:33,120 --> 00:14:34,920
um also the

189
00:14:34,920 --> 00:14:38,160
um again art and other reviews were

190
00:14:38,160 --> 00:14:41,279
addressed I think two reviews are still

191
00:14:41,279 --> 00:14:45,600
still open but anyhow the document is on

192
00:14:45,600 --> 00:14:49,019
the telechat at first of December so

193
00:14:49,019 --> 00:14:52,440
yeah we are we are happily waiting for

194
00:14:52,440 --> 00:14:54,060
the results

195
00:14:54,060 --> 00:14:57,240
um yeah what what did we change we added

196
00:14:57,240 --> 00:15:02,160
a section that um points at 40 to 10

197
00:15:02,160 --> 00:15:05,880
bits and sixty seven twelve activities

198
00:15:05,880 --> 00:15:08,639
just to let the people know

199
00:15:08,639 --> 00:15:10,440
um

200
00:15:10,440 --> 00:15:15,959
and we extended the wording for extra

201
00:15:15,959 --> 00:15:20,220
search to also contain a trust anchor

202
00:15:20,220 --> 00:15:22,079
self-signed certificates for those

203
00:15:22,079 --> 00:15:24,899
devices who are not capable to store

204
00:15:24,899 --> 00:15:27,600
them but are capable to store for

205
00:15:27,600 --> 00:15:30,839
example a hash on the public key or the

206
00:15:30,839 --> 00:15:34,040
hash on of the certificate and we added

207
00:15:34,040 --> 00:15:38,040
a security consideration on that

208
00:15:38,040 --> 00:15:41,519
yeah so that is it

209
00:15:41,519 --> 00:15:44,220
with those CMP related

210
00:15:44,220 --> 00:15:45,839
drafts

211
00:15:45,839 --> 00:15:48,540
in the iesg evaluation

212
00:15:48,540 --> 00:15:49,920
thanks

213
00:15:49,920 --> 00:15:52,760
any questions

214
00:15:54,899 --> 00:15:59,360
okay mask back on

215
00:16:12,600 --> 00:16:14,880
I'm getting it

216
00:16:14,880 --> 00:16:17,959
oh my screen

217
00:16:21,680 --> 00:16:27,779
okay the next one is 3709 this

218
00:16:27,779 --> 00:16:30,180
um I'm the person for that one and

219
00:16:30,180 --> 00:16:32,220
there's no update to share with the

220
00:16:32,220 --> 00:16:35,120
working group and then after that is nft

221
00:16:35,120 --> 00:16:39,420
types for 5G and again no

222
00:16:39,420 --> 00:16:40,199
um

223
00:16:40,199 --> 00:16:43,680
uh update to share but Roman wants to

224
00:16:43,680 --> 00:16:45,480
say something I just want to double

225
00:16:45,480 --> 00:16:47,040
check because I Envision when it goes to

226
00:16:47,040 --> 00:16:49,440
the telechat this may come up there's no

227
00:16:49,440 --> 00:16:51,839
more coordination to go to do with 3gpp

228
00:16:51,839 --> 00:16:54,540
on that document that's correct we have

229
00:16:54,540 --> 00:16:58,459
coordinated yes that's correct

230
00:16:59,639 --> 00:17:01,860
okay so then we're going to move to the

231
00:17:01,860 --> 00:17:05,339
uh security or the pkx related drafts

232
00:17:05,339 --> 00:17:06,959
and

233
00:17:06,959 --> 00:17:13,020
uh Hendrick rolled in the the uh 4210

234
00:17:13,020 --> 00:17:15,720
um some of those topics but there's more

235
00:17:15,720 --> 00:17:18,679
slides I think

236
00:17:18,959 --> 00:17:20,220
is that right

237
00:17:20,220 --> 00:17:24,419
yep yeah as requested by isg

238
00:17:24,419 --> 00:17:25,919
um we provided

239
00:17:25,919 --> 00:17:30,840
the 4210 bits and 6712 bits drafts

240
00:17:30,840 --> 00:17:36,199
um after last ietf next slide please

241
00:17:36,600 --> 00:17:38,539
so regarding

242
00:17:38,539 --> 00:17:43,020
4210 bits I submitted a version 0 which

243
00:17:43,020 --> 00:17:46,559
is mainly the original RFC text updated

244
00:17:46,559 --> 00:17:50,280
to current XML versions so this should

245
00:17:50,280 --> 00:17:53,880
be the original text version zero one

246
00:17:53,880 --> 00:17:57,539
um includes the changes specified in CMP

247
00:17:57,539 --> 00:18:01,640
updates and then a version zero two

248
00:18:01,640 --> 00:18:05,940
provided changes and some minor

249
00:18:05,940 --> 00:18:08,360
restructuring the author's

250
00:18:08,360 --> 00:18:13,580
decided that yeah would make it clearer

251
00:18:13,580 --> 00:18:16,559
while doing a first review of the whole

252
00:18:16,559 --> 00:18:17,640
document

253
00:18:17,640 --> 00:18:20,220
so there is some key generation

254
00:18:20,220 --> 00:18:21,780
Authority

255
00:18:21,780 --> 00:18:25,679
um Extended key usage which is now

256
00:18:25,679 --> 00:18:29,160
specified in a new section there is this

257
00:18:29,160 --> 00:18:34,620
original pki message which was kind of

258
00:18:34,620 --> 00:18:36,000
yeah

259
00:18:36,000 --> 00:18:39,860
specified within some

260
00:18:39,860 --> 00:18:42,299
pki management

261
00:18:42,299 --> 00:18:43,020
um

262
00:18:43,020 --> 00:18:46,799
operation and we pulled that out to the

263
00:18:46,799 --> 00:18:51,179
section 5113 in a separate section to

264
00:18:51,179 --> 00:18:53,880
properly introduce it

265
00:18:53,880 --> 00:18:54,900
um

266
00:18:54,900 --> 00:18:58,559
we removed any references to specific

267
00:18:58,559 --> 00:19:01,620
algorithms and pointed to CMP up not CMP

268
00:19:01,620 --> 00:19:03,140
algorithms draft

269
00:19:03,140 --> 00:19:05,240
then we

270
00:19:05,240 --> 00:19:08,700
added additional references to the

271
00:19:08,700 --> 00:19:12,419
profiles in appendix d and e as well as

272
00:19:12,419 --> 00:19:16,039
to the lightwide CMP profiles in the

273
00:19:16,039 --> 00:19:19,620
section 5 where the messages are

274
00:19:19,620 --> 00:19:21,480
described

275
00:19:21,480 --> 00:19:24,900
and we broadened the scope from Human

276
00:19:24,900 --> 00:19:28,200
users also to devices and services so

277
00:19:28,200 --> 00:19:34,320
just a wording issue and there was one

278
00:19:34,320 --> 00:19:36,179
common from

279
00:19:36,179 --> 00:19:39,780
ID Nets that we should switch from ldap

280
00:19:39,780 --> 00:19:43,220
V2 to lw3

281
00:19:43,740 --> 00:19:47,520
then right before this meeting I

282
00:19:47,520 --> 00:19:50,160
submitted version 3 of the document

283
00:19:50,160 --> 00:19:54,240
where we fixed two remaining to Do's one

284
00:19:54,240 --> 00:19:56,820
was on the specification of the old with

285
00:19:56,820 --> 00:19:59,460
new new with old and new with new

286
00:19:59,460 --> 00:20:01,320
certificates we discussed this on the

287
00:20:01,320 --> 00:20:04,679
mailing list and I added

288
00:20:04,679 --> 00:20:07,320
um I updated the section accordingly

289
00:20:07,320 --> 00:20:10,200
then we also discussed on the mailing

290
00:20:10,200 --> 00:20:12,720
list that appendix see

291
00:20:12,720 --> 00:20:14,520
um could be

292
00:20:14,520 --> 00:20:16,559
um so the text in appendix C could be

293
00:20:16,559 --> 00:20:20,460
shifted to sections of subsections in

294
00:20:20,460 --> 00:20:23,880
section five where they they belong from

295
00:20:23,880 --> 00:20:26,460
the content perspective we did this

296
00:20:26,460 --> 00:20:28,620
change and

297
00:20:28,620 --> 00:20:30,720
um I'm I'm uncertain whether I already

298
00:20:30,720 --> 00:20:33,240
deleted appendix C or whether I added a

299
00:20:33,240 --> 00:20:36,240
to-do that this has to be deleted with

300
00:20:36,240 --> 00:20:40,100
the next version I don't know

301
00:20:40,740 --> 00:20:43,500
I will find out

302
00:20:43,500 --> 00:20:46,559
um then we added some

303
00:20:46,559 --> 00:20:49,440
to-do's in the text where we believe

304
00:20:49,440 --> 00:20:54,059
that support for chem Keys is needed as

305
00:20:54,059 --> 00:20:56,700
discussed in the interim meeting in

306
00:20:56,700 --> 00:20:57,780
September

307
00:20:57,780 --> 00:21:02,100
um this is mainly the last change that

308
00:21:02,100 --> 00:21:06,900
is needed for CMP 4210 biz so

309
00:21:06,900 --> 00:21:10,100
questions here

310
00:21:10,860 --> 00:21:13,919
so next slide please

311
00:21:13,919 --> 00:21:17,039
yeah the proposals for supporting chem

312
00:21:17,039 --> 00:21:19,679
Keys the authors had some internal

313
00:21:19,679 --> 00:21:24,240
discussions and there are two mainly two

314
00:21:24,240 --> 00:21:27,059
topics one is proof of procession in

315
00:21:27,059 --> 00:21:30,120
certificate requests as discussed in the

316
00:21:30,120 --> 00:21:34,200
interim Sean said that there is an ID in

317
00:21:34,200 --> 00:21:37,799
preparation on pop for chem key so we

318
00:21:37,799 --> 00:21:39,960
are waiting for that and to figure out

319
00:21:39,960 --> 00:21:43,559
how this can be can be used in in CMP

320
00:21:43,559 --> 00:21:47,280
but actually there is already a proof of

321
00:21:47,280 --> 00:21:49,679
procession mechanism available in CMP

322
00:21:49,679 --> 00:21:52,320
that works out fine that is called the

323
00:21:52,320 --> 00:21:54,299
indirect proof of possession which is

324
00:21:54,299 --> 00:21:57,539
also used for encryption keys

325
00:21:57,539 --> 00:22:00,059
um finally the newly issued certificate

326
00:22:00,059 --> 00:22:02,520
is delivered in encrypted form enter

327
00:22:02,520 --> 00:22:06,780
hash of the certificate is provided in

328
00:22:06,780 --> 00:22:10,020
the search conf message as a proof of

329
00:22:10,020 --> 00:22:11,820
private key procession

330
00:22:11,820 --> 00:22:15,720
so this this already works

331
00:22:15,720 --> 00:22:16,500
um

332
00:22:16,500 --> 00:22:19,440
then CMP message protection using chem

333
00:22:19,440 --> 00:22:22,799
keys at least for Regis um

334
00:22:22,799 --> 00:22:26,100
for key update requests and revocation

335
00:22:26,100 --> 00:22:30,659
requests the yeah key to be updated or

336
00:22:30,659 --> 00:22:32,820
to be revoked should be used for message

337
00:22:32,820 --> 00:22:34,260
protection

338
00:22:34,260 --> 00:22:38,059
if we then want to use it with Cam keys

339
00:22:38,059 --> 00:22:40,679
this could be used with a Mac based

340
00:22:40,679 --> 00:22:43,200
protection at the cost of an additional

341
00:22:43,200 --> 00:22:45,480
round trip in advance to the PKR

342
00:22:45,480 --> 00:22:48,360
management operation where a shared

343
00:22:48,360 --> 00:22:51,000
secret is established that is then used

344
00:22:51,000 --> 00:22:52,380
for the

345
00:22:52,380 --> 00:22:52,980
um

346
00:22:52,980 --> 00:22:55,740
for the message protection next slide

347
00:22:55,740 --> 00:22:57,919
please

348
00:22:58,260 --> 00:23:01,580
so the idea mainly is

349
00:23:01,580 --> 00:23:05,100
if we have a cam key on the client side

350
00:23:05,100 --> 00:23:09,179
that the client sends in a general

351
00:23:09,179 --> 00:23:12,960
message the type needs to be defined and

352
00:23:12,960 --> 00:23:16,140
provides a its cam certificate to the

353
00:23:16,140 --> 00:23:20,299
CMP server the CNP server

354
00:23:20,299 --> 00:23:25,140
returns a cipher text from the cam end

355
00:23:25,140 --> 00:23:26,580
caps

356
00:23:26,580 --> 00:23:27,360
um

357
00:23:27,360 --> 00:23:28,799
function

358
00:23:28,799 --> 00:23:32,159
and the client then uses this shared

359
00:23:32,159 --> 00:23:33,260
secret

360
00:23:33,260 --> 00:23:36,900
from from this response to do a Mac

361
00:23:36,900 --> 00:23:40,559
based protection for the um

362
00:23:40,559 --> 00:23:43,020
regular CMP request

363
00:23:43,020 --> 00:23:47,100
so I've spotted there is some slight

364
00:23:47,100 --> 00:23:49,500
mistake on the

365
00:23:49,500 --> 00:23:52,559
slide so the CMP server should have a

366
00:23:52,559 --> 00:23:55,500
server cancel it and a server a private

367
00:23:55,500 --> 00:23:58,799
chem key not a signature certificate and

368
00:23:58,799 --> 00:24:02,159
signature key here so that was from

369
00:24:02,159 --> 00:24:06,500
one additional slide we were discussing

370
00:24:06,539 --> 00:24:10,020
for situations where the server also not

371
00:24:10,020 --> 00:24:13,620
has a cam but a signature certificate so

372
00:24:13,620 --> 00:24:16,700
this can be extended to also support

373
00:24:16,700 --> 00:24:20,840
signature keys on server side

374
00:24:22,080 --> 00:24:25,679
any any comments on this

375
00:24:25,679 --> 00:24:28,559
yeah sketch of a

376
00:24:28,559 --> 00:24:30,960
mechanism to support chem keys for

377
00:24:30,960 --> 00:24:33,799
message protection

378
00:24:34,320 --> 00:24:36,840
if there is any feedback after the

379
00:24:36,840 --> 00:24:37,919
meeting

380
00:24:37,919 --> 00:24:40,140
please post on the list

381
00:24:40,140 --> 00:24:42,720
any discussion is welcome so it needs to

382
00:24:42,720 --> 00:24:44,580
be further

383
00:24:44,580 --> 00:24:45,600
um

384
00:24:45,600 --> 00:24:49,939
specified in in more detail of course

385
00:24:52,559 --> 00:24:55,200
I'm not hearing anyone have concerns at

386
00:24:55,200 --> 00:24:57,120
this point with that mechanism

387
00:24:57,120 --> 00:25:00,439
ah Mike

388
00:25:09,620 --> 00:25:12,840
Ellsworth at the risk of maybe reopening

389
00:25:12,840 --> 00:25:14,700
something from last time

390
00:25:14,700 --> 00:25:17,640
um we did solidly agree that it's worth

391
00:25:17,640 --> 00:25:20,640
waiting to get chem in and get chem in

392
00:25:20,640 --> 00:25:25,220
properly that was a solid decision

393
00:25:25,679 --> 00:25:28,679
so the issue here is that we sent that

394
00:25:28,679 --> 00:25:30,840
update stock of it forward in the isg

395
00:25:30,840 --> 00:25:33,059
asked for

396
00:25:33,059 --> 00:25:37,320
um a Consolidated document so the

397
00:25:37,320 --> 00:25:40,320
question is do we proceed with this and

398
00:25:40,320 --> 00:25:45,000
then uh do a cam if needed and that's

399
00:25:45,000 --> 00:25:47,720
really the discussion here is

400
00:25:47,720 --> 00:25:50,940
do a proof of possession for chem Keys

401
00:25:50,940 --> 00:25:54,419
sorry but if this mechanism works we

402
00:25:54,419 --> 00:25:57,320
won't have to do that

403
00:25:57,419 --> 00:25:59,820
that makes sense

404
00:25:59,820 --> 00:26:02,220
and I guess by if this mechanism works

405
00:26:02,220 --> 00:26:03,539
you mean if this mechanism doesn't

406
00:26:03,539 --> 00:26:05,279
generate an enormous amount of

407
00:26:05,279 --> 00:26:09,980
discussion or design or whatever

408
00:26:14,700 --> 00:26:19,260
but we owe the isg a uh a non-updates

409
00:26:19,260 --> 00:26:22,400
document Abyss

410
00:26:25,260 --> 00:26:28,679
okay so mainly the the change would be

411
00:26:28,679 --> 00:26:30,900
of course to add some text here and

412
00:26:30,900 --> 00:26:33,960
there but from a technical point of view

413
00:26:33,960 --> 00:26:36,840
if the indirect proof of possession is

414
00:26:36,840 --> 00:26:40,140
sufficient this is already there and

415
00:26:40,140 --> 00:26:44,460
this mechanism requires a new

416
00:26:44,460 --> 00:26:45,380
um

417
00:26:45,380 --> 00:26:47,700
infotype value

418
00:26:47,700 --> 00:26:50,940
to do this General message or to

419
00:26:50,940 --> 00:26:54,000
transfer the same similar data in the

420
00:26:54,000 --> 00:26:57,779
general info field of the header

421
00:26:57,779 --> 00:27:00,360
yeah hey it's John Turner um I guess I

422
00:27:00,360 --> 00:27:01,500
wonder because I know this is an

423
00:27:01,500 --> 00:27:03,000
indirect mechanism and it's the way it's

424
00:27:03,000 --> 00:27:05,520
been you know it worked before

425
00:27:05,520 --> 00:27:07,620
um but in peacocks we have a our Peaks

426
00:27:07,620 --> 00:27:08,940
that was a great history of letting a

427
00:27:08,940 --> 00:27:10,799
thousand flowers bloom do we have to

428
00:27:10,799 --> 00:27:13,279
have one way

429
00:27:13,679 --> 00:27:15,299
I mean this is the point that Mike is

430
00:27:15,299 --> 00:27:16,320
making like it's going to generate a

431
00:27:16,320 --> 00:27:18,000
bunch of discussion is this the one and

432
00:27:18,000 --> 00:27:19,919
only way we're gonna do it I don't know

433
00:27:19,919 --> 00:27:21,720
this is the way one of the indirect was

434
00:27:21,720 --> 00:27:22,919
one of the ways there's a direct

435
00:27:22,919 --> 00:27:25,080
mechanism right which I think you guys

436
00:27:25,080 --> 00:27:26,700
kind of looked on on already and there's

437
00:27:26,700 --> 00:27:28,140
a couple of other thoughts about it so

438
00:27:28,140 --> 00:27:31,200
I'm just saying great but you know we

439
00:27:31,200 --> 00:27:33,000
can think about this but like it's not

440
00:27:33,000 --> 00:27:34,679
that we have to get this update done

441
00:27:34,679 --> 00:27:38,240
like tomorrow right so

442
00:27:41,779 --> 00:27:43,679
yeah there's some other there's some

443
00:27:43,679 --> 00:27:45,000
other stuff in flight so I'm just saying

444
00:27:45,000 --> 00:27:46,320
it's great that we write this up and

445
00:27:46,320 --> 00:27:47,400
it's an option but I don't want to say

446
00:27:47,400 --> 00:27:50,220
it's the option and I don't want to like

447
00:27:50,220 --> 00:27:53,400
like by not objecting now right like oh

448
00:27:53,400 --> 00:27:54,720
we're good we're running off and we're

449
00:27:54,720 --> 00:27:56,100
done so

450
00:27:56,100 --> 00:27:57,659
there might there also might be more

451
00:27:57,659 --> 00:27:58,919
than one so we just have to kind of

452
00:27:58,919 --> 00:28:01,400
figure that out

453
00:28:01,799 --> 00:28:04,620
and there's the oids here to inject

454
00:28:04,620 --> 00:28:07,200
another one later if that's the right

455
00:28:07,200 --> 00:28:09,500
answer

456
00:28:09,840 --> 00:28:12,299
Mike Ellsworth I don't know if Thanos is

457
00:28:12,299 --> 00:28:14,760
on the online but I know Panos is going

458
00:28:14,760 --> 00:28:17,360
to push to adopt hpke

459
00:28:17,360 --> 00:28:20,400
everywhere and this is one of those

460
00:28:20,400 --> 00:28:22,440
places that I could see pandas wanting

461
00:28:22,440 --> 00:28:24,600
to you know stop doing what you're doing

462
00:28:24,600 --> 00:28:28,219
before and let's all switch to hpk

463
00:28:33,059 --> 00:28:36,000
so my advice at this point is to proceed

464
00:28:36,000 --> 00:28:38,880
with this mechanism in the document and

465
00:28:38,880 --> 00:28:39,779
we can

466
00:28:39,779 --> 00:28:42,720
uh if the other one gets mature at it if

467
00:28:42,720 --> 00:28:47,640
not we can do a a small one-pager to do

468
00:28:47,640 --> 00:28:50,460
that as well with this array

469
00:28:50,460 --> 00:28:52,320
does anyone think that's the wrong way

470
00:28:52,320 --> 00:28:54,620
forward

471
00:28:55,559 --> 00:28:58,380
okay I'm seeing thumbs up

472
00:28:58,380 --> 00:29:01,460
okay great so we'll move forward

473
00:29:01,460 --> 00:29:04,260
specifying this

474
00:29:04,260 --> 00:29:05,340
okay

475
00:29:05,340 --> 00:29:08,159
thanks next slide please

476
00:29:08,159 --> 00:29:12,059
so this is um on 6712 bits so mainly

477
00:29:12,059 --> 00:29:14,520
it's the same approach with 4210 best

478
00:29:14,520 --> 00:29:18,380
version zero original RFC version one

479
00:29:18,380 --> 00:29:22,620
updates from CMP updates version two

480
00:29:22,620 --> 00:29:27,120
a minor review and some alignments

481
00:29:27,120 --> 00:29:31,320
um addressing ID in its topics nothing

482
00:29:31,320 --> 00:29:34,799
special here and the document is quite

483
00:29:34,799 --> 00:29:36,299
stable

484
00:29:36,299 --> 00:29:38,700
thanks okay good thank you

485
00:29:38,700 --> 00:29:43,200
uh the next thing on the agenda was Sean

486
00:29:43,200 --> 00:29:45,720
John has more sorry I'm trying not to

487
00:29:45,720 --> 00:29:47,220
take the table out uh hi this is Sean

488
00:29:47,220 --> 00:29:49,200
Turner just a minor note we do have an

489
00:29:49,200 --> 00:29:52,799
84-46 bis in Flight which is almost done

490
00:29:52,799 --> 00:29:54,899
and so if this is another update you

491
00:29:54,899 --> 00:29:57,120
should just point to the latest one so

492
00:29:57,120 --> 00:29:58,679
they'll all kind of be I mean it's going

493
00:29:58,679 --> 00:30:02,120
to create a cluster but like that's

494
00:30:02,159 --> 00:30:04,320
it's gonna happen shortly

495
00:30:04,320 --> 00:30:06,360
we'll find out about it tomorrow what

496
00:30:06,360 --> 00:30:09,240
does shortly mean I think Ecker thinks

497
00:30:09,240 --> 00:30:11,940
he's done okay so it really is so like

498
00:30:11,940 --> 00:30:14,700
the 8446 this draft might get done

499
00:30:14,700 --> 00:30:16,440
before this one so I think it's just

500
00:30:16,440 --> 00:30:19,080
better to point to the yeah so might as

501
00:30:19,080 --> 00:30:21,659
well point to the ID at this point yes

502
00:30:21,659 --> 00:30:23,279
thank you

503
00:30:23,279 --> 00:30:25,919
okay thanks

504
00:30:25,919 --> 00:30:29,279
good thank you the next thing on the

505
00:30:29,279 --> 00:30:33,000
agenda I did not get slides for which is

506
00:30:33,000 --> 00:30:37,860
the pkcs12 support for Pb Mach 1.

507
00:30:37,860 --> 00:30:39,659
is there anyone who wants to speak to

508
00:30:39,659 --> 00:30:41,840
that

509
00:30:44,039 --> 00:30:46,260
okay skipping that agenda item the next

510
00:30:46,260 --> 00:30:47,100
one

511
00:30:47,100 --> 00:30:53,520
is uh RC 7030 CSR attributes Michael

512
00:30:53,520 --> 00:30:57,299
sent mail to the list about this

513
00:30:57,299 --> 00:30:58,380
um

514
00:30:58,380 --> 00:31:02,159
I'll just basically read it out uh he

515
00:31:02,159 --> 00:31:04,620
has a conflict in this uh this slot so

516
00:31:04,620 --> 00:31:06,179
he's not in the room

517
00:31:06,179 --> 00:31:08,460
there are still bugs in the examples of

518
00:31:08,460 --> 00:31:10,559
the internet draft

519
00:31:10,559 --> 00:31:12,120
um people have been very helpful about

520
00:31:12,120 --> 00:31:14,700
uh pointing them out to him

521
00:31:14,700 --> 00:31:16,980
and so he knows he has uh work to do

522
00:31:16,980 --> 00:31:18,720
that he expects to do by the end of

523
00:31:18,720 --> 00:31:20,100
November

524
00:31:20,100 --> 00:31:21,260
his

525
00:31:21,260 --> 00:31:23,940
co-authors have been very quiet

526
00:31:23,940 --> 00:31:26,399
and so he's nudging them

527
00:31:26,399 --> 00:31:27,059
um

528
00:31:27,059 --> 00:31:30,360
and he'd like help from them fixing the

529
00:31:30,360 --> 00:31:31,380
examples

530
00:31:31,380 --> 00:31:33,000
okay

531
00:31:33,000 --> 00:31:36,360
anyone anything uh anyone else wants to

532
00:31:36,360 --> 00:31:39,260
bring up about that

533
00:31:41,100 --> 00:31:44,520
okay so we'll move on from there the

534
00:31:44,520 --> 00:31:46,740
next one is

535
00:31:46,740 --> 00:31:49,260
um I updated the loaded the slide so you

536
00:31:49,260 --> 00:31:51,179
may have to hit the little refresh thing

537
00:31:51,179 --> 00:31:55,740
uh for uh the lithium certificates uh I

538
00:31:55,740 --> 00:31:57,779
think Jake is remote and we'll be

539
00:31:57,779 --> 00:32:00,419
presenting is that right

540
00:32:00,419 --> 00:32:02,960
foreign

541
00:32:07,159 --> 00:32:10,399
you Jake

542
00:32:12,720 --> 00:32:15,200
no

543
00:32:18,419 --> 00:32:20,940
I uploaded them wow

544
00:32:20,940 --> 00:32:23,880
Hendrick was talking about hello Cameron

545
00:32:23,880 --> 00:32:27,240
Amy yes

546
00:32:29,580 --> 00:32:31,620
okay just waiting to see the slides on

547
00:32:31,620 --> 00:32:34,219
my end

548
00:32:51,539 --> 00:32:54,140
to be

549
00:33:02,880 --> 00:33:05,480
in description

550
00:33:09,539 --> 00:33:12,140
Dave

551
00:33:13,200 --> 00:33:16,399
a matter of slide

552
00:33:46,019 --> 00:33:47,399
okay

553
00:33:47,399 --> 00:33:49,799
would you like me to try and take

554
00:33:49,799 --> 00:33:54,200
requests of the controller slides

555
00:34:01,080 --> 00:34:03,539
Perfect all right you have control I

556
00:34:03,539 --> 00:34:07,860
think yes thank you I mean just test

557
00:34:07,860 --> 00:34:09,899
uh yeah okay wonderful okay

558
00:34:09,899 --> 00:34:11,280
okay hello everyone

559
00:34:11,280 --> 00:34:13,800
um yeah despite my uh British accent I

560
00:34:13,800 --> 00:34:16,800
am remote over here in the USA so I uh I

561
00:34:16,800 --> 00:34:20,399
hope you're all enjoying um London

562
00:34:20,399 --> 00:34:24,418
um okay so uh just a quick update on the

563
00:34:24,418 --> 00:34:26,580
um internet x509 public key

564
00:34:26,580 --> 00:34:28,980
infrastructure uh algorithm identifiers

565
00:34:28,980 --> 00:34:32,699
for dilithium we now have a repository

566
00:34:32,699 --> 00:34:35,159
um for this within the uh Labs working

567
00:34:35,159 --> 00:34:37,980
group GitHub and I've got the link to

568
00:34:37,980 --> 00:34:41,219
the ID itself as that

569
00:34:41,219 --> 00:34:43,320
okay uh so just to recap anyone who

570
00:34:43,320 --> 00:34:45,540
missed uh what this draft is about the

571
00:34:45,540 --> 00:34:46,800
motivation is

572
00:34:46,800 --> 00:34:49,440
um for the inclusion of the dilithium

573
00:34:49,440 --> 00:34:51,659
signature algorithm into x509

574
00:34:51,659 --> 00:34:55,199
certificates uh this is aimed uh at the

575
00:34:55,199 --> 00:34:57,780
description of pure certificates

576
00:34:57,780 --> 00:35:00,420
um in fact to not composite or hybrid

577
00:35:00,420 --> 00:35:02,040
certificates and you can kind of think

578
00:35:02,040 --> 00:35:05,780
of this as RFC 3

579
00:35:05,780 --> 00:35:09,359
279 for uh nist's PQ signature

580
00:35:09,359 --> 00:35:10,920
algorithms

581
00:35:10,920 --> 00:35:13,320
so just a quick recap for the options no

582
00:35:13,320 --> 00:35:14,760
parameters the always will tell you

583
00:35:14,760 --> 00:35:16,619
everything you need to know the key

584
00:35:16,619 --> 00:35:18,420
format we'll talk a little bit more

585
00:35:18,420 --> 00:35:20,400
about this in this update

586
00:35:20,400 --> 00:35:22,800
um bit string that's been a healthy

587
00:35:22,800 --> 00:35:25,020
discussion about these options

588
00:35:25,020 --> 00:35:30,000
one signature algorithm uh per draft and

589
00:35:30,000 --> 00:35:32,880
uh nist is to define the or it's these

590
00:35:32,880 --> 00:35:34,619
are currently in the drafters to be

591
00:35:34,619 --> 00:35:36,660
determined

592
00:35:36,660 --> 00:35:39,000
so some updates uh since the last time

593
00:35:39,000 --> 00:35:40,859
the public Keys

594
00:35:40,859 --> 00:35:41,700
um

595
00:35:41,700 --> 00:35:43,380
uh if any of you've been following the

596
00:35:43,380 --> 00:35:45,119
discussion on this draft I'm sure you're

597
00:35:45,119 --> 00:35:47,160
already aware but the option moving

598
00:35:47,160 --> 00:35:50,339
forward is uh to go for an object stream

599
00:35:50,339 --> 00:35:53,220
that can be mapped to a bit string from

600
00:35:53,220 --> 00:35:56,700
RFC 5208 and we're kind of following

601
00:35:56,700 --> 00:36:01,200
some precedent here from the sepg org

602
00:36:01,200 --> 00:36:03,960
which uh in which we treat bit strings

603
00:36:03,960 --> 00:36:06,000
as octet strings identically and

604
00:36:06,000 --> 00:36:09,560
obviously just do sensible padding

605
00:36:09,839 --> 00:36:12,420
so we don't need to do any uh more

606
00:36:12,420 --> 00:36:14,940
wrapping or adding another layer for

607
00:36:14,940 --> 00:36:16,619
implementations

608
00:36:16,619 --> 00:36:19,260
um the internally use Opera optic

609
00:36:19,260 --> 00:36:20,940
strings then they can continue to do so

610
00:36:20,940 --> 00:36:22,800
and use split strings uh where we

611
00:36:22,800 --> 00:36:25,800
mandate the standard mandates it

612
00:36:25,800 --> 00:36:28,619
as a private Keys we've changed the data

613
00:36:28,619 --> 00:36:30,839
structure and a call out to The One

614
00:36:30,839 --> 00:36:34,520
asymmetric key has been made

615
00:36:35,040 --> 00:36:37,560
some other updates uh we did a hackathon

616
00:36:37,560 --> 00:36:39,599
for this over the weekend

617
00:36:39,599 --> 00:36:41,579
um this was just to do up on some

618
00:36:41,579 --> 00:36:44,579
interop and consistency between uh the

619
00:36:44,579 --> 00:36:47,280
numerous drafts that are specifying

620
00:36:47,280 --> 00:36:49,740
um encoding of data theme keys the

621
00:36:49,740 --> 00:36:51,119
outcome of this meeting I think there is

622
00:36:51,119 --> 00:36:52,500
a small presentation about what we

623
00:36:52,500 --> 00:36:54,900
worked on and how it went thank you for

624
00:36:54,900 --> 00:36:57,780
everyone for attending that we're going

625
00:36:57,780 --> 00:36:59,940
to continue to meet monthly and uh

626
00:36:59,940 --> 00:37:02,339
continue on the on the work we've kind

627
00:37:02,339 --> 00:37:05,540
of laid out of that

628
00:37:06,060 --> 00:37:08,940
so key to discussion points um I've got

629
00:37:08,940 --> 00:37:10,140
a link at the bottom here these are all

630
00:37:10,140 --> 00:37:12,119
being tracked in the issues section of

631
00:37:12,119 --> 00:37:14,280
the repository uh there is one

632
00:37:14,280 --> 00:37:16,140
discussion point on deterministic versus

633
00:37:16,140 --> 00:37:18,000
randomized signing

634
00:37:18,000 --> 00:37:19,920
um there's a bit of some some discussion

635
00:37:19,920 --> 00:37:22,859
within the Forum uh on a new version of

636
00:37:22,859 --> 00:37:25,800
a hedged mode of dilithium uh where

637
00:37:25,800 --> 00:37:27,359
they're kind of combining the idea of

638
00:37:27,359 --> 00:37:29,099
both um some randomized signatures that

639
00:37:29,099 --> 00:37:31,020
are seeded by the message and the key

640
00:37:31,020 --> 00:37:33,000
alongside a source of Randomness to try

641
00:37:33,000 --> 00:37:35,280
and facilitate those that may have a

642
00:37:35,280 --> 00:37:38,940
weak random a weak source of entropy and

643
00:37:38,940 --> 00:37:40,440
also you know

644
00:37:40,440 --> 00:37:42,780
consider some side Channel analysis uh

645
00:37:42,780 --> 00:37:44,700
so we're tracking that and we might

646
00:37:44,700 --> 00:37:45,960
expect to see something from the authors

647
00:37:45,960 --> 00:37:48,000
soon there's also quite a discussion

648
00:37:48,000 --> 00:37:50,880
about uh hash and then sign we're

649
00:37:50,880 --> 00:37:55,440
involved in uh an nccoe effort

650
00:37:55,440 --> 00:37:57,780
and will provide any findings that we

651
00:37:57,780 --> 00:38:01,260
have there that's me and Panos

652
00:38:01,260 --> 00:38:04,320
um it's also been discussed within the

653
00:38:04,320 --> 00:38:06,720
cfrg working group the lamps and the

654
00:38:06,720 --> 00:38:09,480
nist Alias so we're watching that and uh

655
00:38:09,480 --> 00:38:11,040
basically for this draft unless

656
00:38:11,040 --> 00:38:12,420
something happens to change our minds

657
00:38:12,420 --> 00:38:14,460
we're lean towards following the um at

658
00:38:14,460 --> 00:38:20,220
DSA uh x509 from RFC 8410 which does not

659
00:38:20,220 --> 00:38:22,560
pre hash essentially

660
00:38:22,560 --> 00:38:24,780
one last discussion Point uh publicly

661
00:38:24,780 --> 00:38:27,000
encoded inside of the private key this

662
00:38:27,000 --> 00:38:28,500
has also been some discussion in the

663
00:38:28,500 --> 00:38:30,859
working group where um

664
00:38:30,859 --> 00:38:34,079
do we want to include the private the

665
00:38:34,079 --> 00:38:36,060
public key inside the private key

666
00:38:36,060 --> 00:38:38,040
um or do we want to include values that

667
00:38:38,040 --> 00:38:39,660
um Can facilitate the Reconstruction of

668
00:38:39,660 --> 00:38:42,300
the public key if uh there are maybe

669
00:38:42,300 --> 00:38:43,680
perhaps lightweight modes that don't

670
00:38:43,680 --> 00:38:46,800
want to carry both the public and the

671
00:38:46,800 --> 00:38:48,839
private so as I said these issues are

672
00:38:48,839 --> 00:38:51,000
trapped on the um on the GitHub for free

673
00:38:51,000 --> 00:38:51,900
so

674
00:38:51,900 --> 00:38:52,500
um

675
00:38:52,500 --> 00:38:54,540
feel free to use it or not if you if you

676
00:38:54,540 --> 00:38:56,040
just want to message eventually through

677
00:38:56,040 --> 00:38:59,520
the uh emailing the email list um I will

678
00:38:59,520 --> 00:39:01,020
just convert them to GitHub issues

679
00:39:01,020 --> 00:39:02,760
myself

680
00:39:02,760 --> 00:39:04,140
so thank you everyone for the feedback

681
00:39:04,140 --> 00:39:06,240
so far and I'm happy to take more from

682
00:39:06,240 --> 00:39:07,800
you guys

683
00:39:07,800 --> 00:39:10,200
that's it

684
00:39:10,200 --> 00:39:12,300
I see so maybe someone has a question

685
00:39:12,300 --> 00:39:15,420
yep go ahead Carl uh Carl Wallace I have

686
00:39:15,420 --> 00:39:17,339
a question on the definition of the

687
00:39:17,339 --> 00:39:19,680
public key is an octet string

688
00:39:19,680 --> 00:39:22,740
I know there's precedence for this

689
00:39:22,740 --> 00:39:25,320
but it seems odd to to give a definition

690
00:39:25,320 --> 00:39:28,200
if something is an octet string and then

691
00:39:28,200 --> 00:39:30,060
immediately in the pros and say throw

692
00:39:30,060 --> 00:39:31,859
away the tag and the length

693
00:39:31,859 --> 00:39:34,680
why not delete that definition and just

694
00:39:34,680 --> 00:39:36,000
say you're encoding the public key

695
00:39:36,000 --> 00:39:39,500
directly into the bitstring value

696
00:39:39,900 --> 00:39:41,280
yeah

697
00:39:41,280 --> 00:39:43,020
um well there has been a lot of back and

698
00:39:43,020 --> 00:39:44,520
forth on this and there are a lot of

699
00:39:44,520 --> 00:39:47,700
people who are a strong opinion on which

700
00:39:47,700 --> 00:39:49,440
one to go for

701
00:39:49,440 --> 00:39:52,079
um what's the strong opinion for having

702
00:39:52,079 --> 00:39:56,220
a definition that you don't use yeah so

703
00:39:56,220 --> 00:39:58,140
the argument is that it's the most

704
00:39:58,140 --> 00:40:01,800
natural structure for the public key

705
00:40:01,800 --> 00:40:02,880
um

706
00:40:02,880 --> 00:40:05,760
and so we've been encouraged to use the

707
00:40:05,760 --> 00:40:08,099
most natural the most natural data

708
00:40:08,099 --> 00:40:10,400
structure

709
00:40:10,440 --> 00:40:14,760
I I think Carl's saying okay so you have

710
00:40:14,760 --> 00:40:17,099
an octet string but when you're putting

711
00:40:17,099 --> 00:40:19,320
it into the certificate in the subject

712
00:40:19,320 --> 00:40:22,800
public key info just take the octets and

713
00:40:22,800 --> 00:40:25,020
drop them into the bit string with zero

714
00:40:25,020 --> 00:40:28,020
additional bits so that one

715
00:40:28,020 --> 00:40:31,560
uh bike field will always be a zero and

716
00:40:31,560 --> 00:40:33,960
then so basically specify how to go from

717
00:40:33,960 --> 00:40:36,000
bitstring to octet string which has been

718
00:40:36,000 --> 00:40:38,400
in many specs over the years

719
00:40:38,400 --> 00:40:40,560
no I'm not really saying that I'm saying

720
00:40:40,560 --> 00:40:43,380
the octet string never appears naturally

721
00:40:43,380 --> 00:40:45,780
anywhere it's it's it's an it's an

722
00:40:45,780 --> 00:40:47,880
artifact here because I guess we feel

723
00:40:47,880 --> 00:40:50,339
like we need to define it but then we

724
00:40:50,339 --> 00:40:52,079
don't actually use it and I'm just

725
00:40:52,079 --> 00:40:53,940
saying because we had a number of things

726
00:40:53,940 --> 00:40:56,220
at the hackathon folks encoding the zero

727
00:40:56,220 --> 00:40:58,800
four and not encoding the zero four

728
00:40:58,800 --> 00:41:01,619
and I you know I

729
00:41:01,619 --> 00:41:03,660
I get it where we have keys that are

730
00:41:03,660 --> 00:41:05,820
sequences you have a structure but here

731
00:41:05,820 --> 00:41:07,440
we don't so just say you're encoding it

732
00:41:07,440 --> 00:41:09,780
directly into the bit string which seems

733
00:41:09,780 --> 00:41:12,060
the most natural to me but

734
00:41:12,060 --> 00:41:14,420
okay I don't know anyway that's that's

735
00:41:14,420 --> 00:41:17,880
your suggestion yeah okay uh yeah I

736
00:41:17,880 --> 00:41:19,500
agree unfortunately there are a lot of

737
00:41:19,500 --> 00:41:22,020
different opinions on which is the most

738
00:41:22,020 --> 00:41:23,099
natural

739
00:41:23,099 --> 00:41:25,400
um just trying to please everyone

740
00:41:25,400 --> 00:41:29,640
well it's most natural obviously

741
00:41:29,640 --> 00:41:31,800
um Mike you're next in the queue follow

742
00:41:31,800 --> 00:41:34,200
up Carl's point before I make the point

743
00:41:34,200 --> 00:41:37,140
I came up for so during the hackathon I

744
00:41:37,140 --> 00:41:39,660
think Carl if I'm not speaking ill of

745
00:41:39,660 --> 00:41:41,400
you you sort of skimmed the draft and

746
00:41:41,400 --> 00:41:42,900
you saw octet string the definition you

747
00:41:42,900 --> 00:41:44,280
said great and then you went on and then

748
00:41:44,280 --> 00:41:45,720
like two hours later you read the

749
00:41:45,720 --> 00:41:47,640
paragraph below it and we're angry with

750
00:41:47,640 --> 00:41:48,100
your life

751
00:41:48,100 --> 00:41:52,020
[Laughter]

752
00:41:53,640 --> 00:41:55,980
yeah right Carl Carl used the asn1

753
00:41:55,980 --> 00:41:57,240
modules which are actually not

754
00:41:57,240 --> 00:41:58,560
descriptive unless you read the English

755
00:41:58,560 --> 00:42:00,359
text below it and so that's sort of the

756
00:42:00,359 --> 00:42:01,800
problem here is if you take the asm1

757
00:42:01,800 --> 00:42:03,660
module as is you're going to end up with

758
00:42:03,660 --> 00:42:06,500
the wrong encoding

759
00:42:13,859 --> 00:42:15,859
yeah

760
00:42:16,440 --> 00:42:18,839
all right uh Carl's having conversation

761
00:42:18,839 --> 00:42:21,300
in the software from the mic the point I

762
00:42:21,300 --> 00:42:23,280
came up here to do can you go back to

763
00:42:23,280 --> 00:42:25,920
the private key public key contains

764
00:42:25,920 --> 00:42:27,839
private key slide

765
00:42:27,839 --> 00:42:32,400
oh uh yes uh this one here

766
00:42:32,400 --> 00:42:34,800
yes public key encoded Insider private

767
00:42:34,800 --> 00:42:36,839
key one

768
00:42:36,839 --> 00:42:38,820
different but I think also deserves to

769
00:42:38,820 --> 00:42:40,140
be on this slide discussion Point

770
00:42:40,140 --> 00:42:44,579
there's been proposals for including the

771
00:42:44,579 --> 00:42:47,280
seed of the private key rather than the

772
00:42:47,280 --> 00:42:48,839
entire private key

773
00:42:48,839 --> 00:42:51,359
yeah is that worth discussing here I

774
00:42:51,359 --> 00:42:53,220
mean that's like sort of Mega key

775
00:42:53,220 --> 00:42:54,780
compression

776
00:42:54,780 --> 00:42:56,820
so I've kind of put that in the sub

777
00:42:56,820 --> 00:42:58,560
bullet point uh where it says

778
00:42:58,560 --> 00:43:00,599
alternatively we can include the values

779
00:43:00,599 --> 00:43:02,700
uh that allow reconstruction that's what

780
00:43:02,700 --> 00:43:04,920
I was getting at then the seed yeah um

781
00:43:04,920 --> 00:43:06,960
that has been proposed and that is

782
00:43:06,960 --> 00:43:09,240
something we're considering if

783
00:43:09,240 --> 00:43:11,280
um if people feel like it's a good idea

784
00:43:11,280 --> 00:43:12,599
something that's useful then yeah

785
00:43:12,599 --> 00:43:14,700
absolutely that is an option political

786
00:43:14,700 --> 00:43:17,520
so that sounds to me like three

787
00:43:17,520 --> 00:43:19,680
different private key encodings that

788
00:43:19,680 --> 00:43:21,240
would need different structures you have

789
00:43:21,240 --> 00:43:22,980
the private key the private key and

790
00:43:22,980 --> 00:43:27,000
public key or just the seed right

791
00:43:27,000 --> 00:43:29,160
yeah it gets messy

792
00:43:29,160 --> 00:43:31,940
right okay

793
00:43:32,160 --> 00:43:33,619
um

794
00:43:33,619 --> 00:43:38,160
the um the draft you and I

795
00:43:38,160 --> 00:43:43,800
Q SC Keys Dash kyber offers

796
00:43:43,800 --> 00:43:46,319
um a way out of this with the choice I

797
00:43:46,319 --> 00:43:47,760
believe

798
00:43:47,760 --> 00:43:49,980
um I don't know if that's where we want

799
00:43:49,980 --> 00:43:51,839
to go but at least that should be part

800
00:43:51,839 --> 00:43:54,560
of the discussion

801
00:43:57,000 --> 00:44:00,180
okay John yeah hi it's John Gray

802
00:44:00,180 --> 00:44:01,560
um I was just wondering in the hash and

803
00:44:01,560 --> 00:44:03,780
sign case so

804
00:44:03,780 --> 00:44:07,740
I guess eddsa doesn't do that I just

805
00:44:07,740 --> 00:44:10,020
think of the use cases like for hsms or

806
00:44:10,020 --> 00:44:12,060
if I want to send you know my Gigabyte

807
00:44:12,060 --> 00:44:14,099
file across the network

808
00:44:14,099 --> 00:44:17,040
is there is there going to be a plan for

809
00:44:17,040 --> 00:44:19,440
some other draft that addresses that

810
00:44:19,440 --> 00:44:20,760
kind of problem because it does

811
00:44:20,760 --> 00:44:22,260
definitely seem to be a practical

812
00:44:22,260 --> 00:44:24,780
problem that you know is all over the

813
00:44:24,780 --> 00:44:27,000
place so I'm not saying it has to be in

814
00:44:27,000 --> 00:44:29,280
this draft I just think someone should

815
00:44:29,280 --> 00:44:32,040
be looking at it so I just wanted to

816
00:44:32,040 --> 00:44:33,420
point that out

817
00:44:33,420 --> 00:44:35,700
I agree I agree with you that I do see

818
00:44:35,700 --> 00:44:37,380
the use cases for both

819
00:44:37,380 --> 00:44:39,780
um maybe something will come out of uh

820
00:44:39,780 --> 00:44:42,540
some of the discussions in the nccoe as

821
00:44:42,540 --> 00:44:44,640
well about some plans there but I do

822
00:44:44,640 --> 00:44:45,960
agree with you there are strong use

823
00:44:45,960 --> 00:44:48,060
cases for for both

824
00:44:48,060 --> 00:44:50,880
and we need a solution for both

825
00:44:50,880 --> 00:44:53,540
okay thanks

826
00:44:54,380 --> 00:44:57,420
Jonathan Hamel uh so I have to agree

827
00:44:57,420 --> 00:45:00,060
with Carl that I think that the that the

828
00:45:00,060 --> 00:45:02,700
byte string like and not specifying

829
00:45:02,700 --> 00:45:05,520
octet string because that's as10.1 but

830
00:45:05,520 --> 00:45:07,980
the bytes that you get from the crypto

831
00:45:07,980 --> 00:45:10,260
Library should be just directly put into

832
00:45:10,260 --> 00:45:12,680
the bitstream and and this is because

833
00:45:12,680 --> 00:45:16,200
like in in one asymmetric key the the

834
00:45:16,200 --> 00:45:18,119
public optional public key in there is a

835
00:45:18,119 --> 00:45:20,220
bit string and then if you start

836
00:45:20,220 --> 00:45:23,040
specifying your key

837
00:45:23,040 --> 00:45:26,819
your your uh private key structure then

838
00:45:26,819 --> 00:45:30,839
that uses a a byte or an octet string

839
00:45:30,839 --> 00:45:33,359
for the public key then it's not going

840
00:45:33,359 --> 00:45:35,819
to match with that one asymmetric key

841
00:45:35,819 --> 00:45:37,980
definition

842
00:45:37,980 --> 00:45:40,740
um and and and and and then you now need

843
00:45:40,740 --> 00:45:42,780
to do an encoding

844
00:45:42,780 --> 00:45:45,420
um that this SEC G encoding to convert

845
00:45:45,420 --> 00:45:48,540
it from any other certificate into into

846
00:45:48,540 --> 00:45:51,660
this octet string so

847
00:45:51,660 --> 00:45:54,660
absolutely

848
00:45:58,740 --> 00:46:01,319
okay

849
00:46:01,319 --> 00:46:05,960
seeing no more questions thank you Jared

850
00:46:13,260 --> 00:46:16,160
next is kyber certificates

851
00:46:16,160 --> 00:46:20,640
I believe I got slides today

852
00:46:20,640 --> 00:46:23,960
oh yes we did okay

853
00:46:26,880 --> 00:46:29,700
no that's CMS certificate he put the

854
00:46:29,700 --> 00:46:32,359
wrong slides up okay

855
00:46:32,359 --> 00:46:34,859
he still wasn't

856
00:46:34,859 --> 00:46:38,839
so many giraffes so little time

857
00:46:47,099 --> 00:46:51,680
it's only one slide so you know

858
00:47:00,960 --> 00:47:03,000
hmm

859
00:47:03,000 --> 00:47:06,420
here it comes asm1 algorithm identifiers

860
00:47:06,420 --> 00:47:08,940
for typing

861
00:47:08,940 --> 00:47:12,800
it's a mouthful 509

862
00:47:18,540 --> 00:47:20,540
.

863
00:47:21,119 --> 00:47:23,160
well all right let me just start so the

864
00:47:23,160 --> 00:47:24,900
the strap was an individual draft and it

865
00:47:24,900 --> 00:47:26,520
got accepted as a working group draft so

866
00:47:26,520 --> 00:47:28,500
we're still on oo

867
00:47:28,500 --> 00:47:30,660
um basically IO and update people are

868
00:47:30,660 --> 00:47:32,160
starting to use this stuff I need to get

869
00:47:32,160 --> 00:47:34,200
off my butt and actually produce uh an

870
00:47:34,200 --> 00:47:35,880
output

871
00:47:35,880 --> 00:47:37,980
um and so this is just kind of a general

872
00:47:37,980 --> 00:47:39,960
status of what's coming next

873
00:47:39,960 --> 00:47:41,880
this draft I think is going to have is a

874
00:47:41,880 --> 00:47:44,220
lot shorter than the the lithium ones

875
00:47:44,220 --> 00:47:46,079
because it's just about Keys it doesn't

876
00:47:46,079 --> 00:47:47,220
have to talk about signatures and

877
00:47:47,220 --> 00:47:48,420
there's only one place to put it so it's

878
00:47:48,420 --> 00:47:49,500
pretty simple

879
00:47:49,500 --> 00:47:51,000
next

880
00:47:51,000 --> 00:47:54,300
um sorry it needs an update so the last

881
00:47:54,300 --> 00:47:57,119
the the initial version of this draft

882
00:47:57,119 --> 00:47:58,980
that was the individual draft kind of

883
00:47:58,980 --> 00:48:00,119
was like we didn't know what this was

884
00:48:00,119 --> 00:48:01,800
going to pick well they picked cam they

885
00:48:01,800 --> 00:48:03,960
picked one so we're kind of making it to

886
00:48:03,960 --> 00:48:06,119
be only about kyber so there's a whole

887
00:48:06,119 --> 00:48:07,319
bunch of text that's going to change

888
00:48:07,319 --> 00:48:09,540
that as a result of that we're going to

889
00:48:09,540 --> 00:48:10,500
put some

890
00:48:10,500 --> 00:48:12,599
um asn1 stuff in there with TBD for all

891
00:48:12,599 --> 00:48:14,099
the Lloyds because

892
00:48:14,099 --> 00:48:15,599
we're going to wait for this to um

893
00:48:15,599 --> 00:48:17,760
assign those and then we want to make

894
00:48:17,760 --> 00:48:18,900
sure that we maintain alignment with

895
00:48:18,900 --> 00:48:20,640
this how to do in CMS to make sure that

896
00:48:20,640 --> 00:48:22,619
we pick the right um

897
00:48:22,619 --> 00:48:24,540
recipient info so that we you know we're

898
00:48:24,540 --> 00:48:25,920
still doing key transport right we want

899
00:48:25,920 --> 00:48:26,880
to make sure we're aligned because

900
00:48:26,880 --> 00:48:28,079
otherwise the whole thing's not going to

901
00:48:28,079 --> 00:48:29,579
work and then of course we have this

902
00:48:29,579 --> 00:48:30,960
issue with the private key format

903
00:48:30,960 --> 00:48:32,880
whether we're going to include it and we

904
00:48:32,880 --> 00:48:34,200
just talked about that so I'm not I

905
00:48:34,200 --> 00:48:35,339
don't think we should really repeat the

906
00:48:35,339 --> 00:48:36,480
thing

907
00:48:36,480 --> 00:48:38,280
um repeat it so it's basically the same

908
00:48:38,280 --> 00:48:42,079
issue and that's really it

909
00:48:43,079 --> 00:48:45,480
any questions for sure

910
00:48:45,480 --> 00:48:47,160
okay so you and Jake are gonna

911
00:48:47,160 --> 00:48:48,780
coordinate right because you set

912
00:48:48,780 --> 00:48:50,280
alignment with the

913
00:48:50,280 --> 00:48:52,020
well we're yeah we're well let's think

914
00:48:52,020 --> 00:48:53,700
we're authors on both drafts co-authors

915
00:48:53,700 --> 00:48:55,500
on both drafts and

916
00:48:55,500 --> 00:48:57,540
we've talked so we're gonna try to make

917
00:48:57,540 --> 00:48:58,680
sure that we because I think the other

918
00:48:58,680 --> 00:49:00,060
draft is actually up for working group

919
00:49:00,060 --> 00:49:02,220
adoption right

920
00:49:02,220 --> 00:49:04,740
uh it was the uh

921
00:49:04,740 --> 00:49:07,319
um we've done the call we haven't done

922
00:49:07,319 --> 00:49:09,060
the right so my theory is once it gets

923
00:49:09,060 --> 00:49:10,680
adopted then we're all we're all in the

924
00:49:10,680 --> 00:49:12,980
same boat

925
00:49:15,300 --> 00:49:17,940
hello so Mark gray on his own it's just

926
00:49:17,940 --> 00:49:19,500
a little note about the private key

927
00:49:19,500 --> 00:49:22,740
thing so of course in kyber it has the

928
00:49:22,740 --> 00:49:25,200
difference that you actually need the

929
00:49:25,200 --> 00:49:27,240
public key in order to do the

930
00:49:27,240 --> 00:49:28,980
decapsulation operation

931
00:49:28,980 --> 00:49:31,920
so at least in CCA which is why it's

932
00:49:31,920 --> 00:49:34,319
being standardized so so the private key

933
00:49:34,319 --> 00:49:36,780
will always have the public key and it

934
00:49:36,780 --> 00:49:38,220
would be better if it didn't have it

935
00:49:38,220 --> 00:49:40,380
twice so it's a little optimization

936
00:49:40,380 --> 00:49:42,540
there perhaps I think they're big it's

937
00:49:42,540 --> 00:49:45,440
just a little bit bigger

938
00:49:45,480 --> 00:49:49,260
so in India lithium it only has a hash

939
00:49:49,260 --> 00:49:51,900
of the public key and and the public key

940
00:49:51,900 --> 00:49:54,660
in the lithium depart and half half of

941
00:49:54,660 --> 00:49:56,400
the half of the public key is in the

942
00:49:56,400 --> 00:49:58,319
private key anyway like there are a

943
00:49:58,319 --> 00:50:01,619
little bit 32 bytes so they uh so having

944
00:50:01,619 --> 00:50:04,740
having a keeper structure you know it's

945
00:50:04,740 --> 00:50:06,660
all right but you don't need the full

946
00:50:06,660 --> 00:50:09,060
public key uh to do a signature in

947
00:50:09,060 --> 00:50:10,980
deleting

948
00:50:10,980 --> 00:50:14,300
okay all right thanks

949
00:50:16,800 --> 00:50:19,680
okay Carl did you send any key

950
00:50:19,680 --> 00:50:21,720
attestations

951
00:50:21,720 --> 00:50:24,420
okay no update we're skipping that one

952
00:50:24,420 --> 00:50:26,520
all right on to the next section which

953
00:50:26,520 --> 00:50:29,640
is s mime related documents

954
00:50:29,640 --> 00:50:32,280
um Alexa do you want to just give a few

955
00:50:32,280 --> 00:50:34,380
words at the mic about the header

956
00:50:34,380 --> 00:50:36,680
protection

957
00:50:38,960 --> 00:50:42,660
yes editors for slacking so we're trying

958
00:50:42,660 --> 00:50:46,440
to get together next week to do update

959
00:50:46,440 --> 00:50:49,579
okay thank you

960
00:50:50,160 --> 00:50:51,359
um

961
00:50:51,359 --> 00:50:54,359
I'm unaware of anything to say about the

962
00:50:54,359 --> 00:50:57,480
end-to-end mail guidance is

963
00:50:57,480 --> 00:50:59,540
he just sent it to me

964
00:50:59,540 --> 00:51:03,680
oh okay go ahead

965
00:51:05,520 --> 00:51:07,859
hi there

966
00:51:07,859 --> 00:51:09,720
um so I released an update to anything

967
00:51:09,720 --> 00:51:13,380
mail guidance uh earlier this month

968
00:51:13,380 --> 00:51:14,099
um

969
00:51:14,099 --> 00:51:16,680
that included uh concrete updates

970
00:51:16,680 --> 00:51:20,700
specifically to uh guidance around

971
00:51:20,700 --> 00:51:22,140
protection against some of the e-fail

972
00:51:22,140 --> 00:51:24,359
attacks that Marcus Brickman and others

973
00:51:24,359 --> 00:51:25,819
described

974
00:51:25,819 --> 00:51:28,380
there still remain a number of to do

975
00:51:28,380 --> 00:51:29,940
items and I would love to get more

976
00:51:29,940 --> 00:51:33,380
feedback from folks on that

977
00:51:33,380 --> 00:51:37,920
I have not seen a lot of responses to it

978
00:51:37,920 --> 00:51:41,520
so I'm I'm continuing to update it uh

979
00:51:41,520 --> 00:51:43,800
with with with guidance that that's

980
00:51:43,800 --> 00:51:46,980
coming in from sort of the academy

981
00:51:46,980 --> 00:51:49,319
um but I have not heard a lot from other

982
00:51:49,319 --> 00:51:51,740
members

983
00:51:52,559 --> 00:51:54,720
I'm also continuing to shop it around to

984
00:51:54,720 --> 00:51:56,700
to people who I know are working on

985
00:51:56,700 --> 00:51:58,500
values are against

986
00:51:58,500 --> 00:52:02,040
so happy to be more ensure that's a try

987
00:52:02,040 --> 00:52:03,960
for review right

988
00:52:03,960 --> 00:52:06,300
I would love to go reviewing it it's not

989
00:52:06,300 --> 00:52:07,500
ready for working group last call

990
00:52:07,500 --> 00:52:08,640
because there's still a bunch of to do

991
00:52:08,640 --> 00:52:12,000
uh items in there uh but yeah I

992
00:52:12,000 --> 00:52:14,280
definitely want people to review it if

993
00:52:14,280 --> 00:52:16,740
you work on a male client or you use a

994
00:52:16,740 --> 00:52:18,119
male client

995
00:52:18,119 --> 00:52:20,579
uh and you do anything when you put the

996
00:52:20,579 --> 00:52:22,440
mail please take a look at what's in

997
00:52:22,440 --> 00:52:24,359
there and uh

998
00:52:24,359 --> 00:52:26,520
provide feedback

999
00:52:26,520 --> 00:52:28,500
happy to take feedback in whatever form

1000
00:52:28,500 --> 00:52:31,800
maybe the list issue tracker

1001
00:52:31,800 --> 00:52:33,960
now

1002
00:52:33,960 --> 00:52:35,819
if you send me private mail please

1003
00:52:35,819 --> 00:52:37,680
include the title of the document in the

1004
00:52:37,680 --> 00:52:39,839
mail and it's easier for you to find my

1005
00:52:39,839 --> 00:52:41,579
overwhelming mailbox

1006
00:52:41,579 --> 00:52:43,319
thanks

1007
00:52:43,319 --> 00:52:45,000
thank you people have questions now I'm

1008
00:52:45,000 --> 00:52:49,640
happy to to respond now too

1009
00:52:50,220 --> 00:52:52,920
okay now we need those CMS cover

1010
00:52:52,920 --> 00:52:55,760
supplies back

1011
00:53:05,119 --> 00:53:08,640
hi there can you can you hear me

1012
00:53:08,640 --> 00:53:12,599
yes we hear you yeah so hello everybody

1013
00:53:12,599 --> 00:53:17,339
um so we're just a shorter date of uh uh

1014
00:53:17,339 --> 00:53:18,980
the the

1015
00:53:18,980 --> 00:53:26,040
uh the camera in CMS aircraft RFC

1016
00:53:26,040 --> 00:53:30,740
um so just next slide please

1017
00:53:31,160 --> 00:53:36,119
uh yeah so uh the statues of the RFC is

1018
00:53:36,119 --> 00:53:38,880
is the following so we made some

1019
00:53:38,880 --> 00:53:42,359
editorial changes uh thanks to the

1020
00:53:42,359 --> 00:53:44,640
comments received by uh received from

1021
00:53:44,640 --> 00:53:48,200
Carl and Michael

1022
00:53:48,300 --> 00:53:53,940
um so we also uh definitely choose uh to

1023
00:53:53,940 --> 00:53:56,640
use the key trends recipient uh

1024
00:53:56,640 --> 00:53:58,740
recipient info to communicate the

1025
00:53:58,740 --> 00:54:02,640
algorithm info uh we introduced a new

1026
00:54:02,640 --> 00:54:06,420
type uh which is a generic cam trans

1027
00:54:06,420 --> 00:54:08,819
parameters type to

1028
00:54:08,819 --> 00:54:13,040
um to to store the algorithm parameters

1029
00:54:13,040 --> 00:54:17,280
and let's change uh is about the

1030
00:54:17,280 --> 00:54:19,920
algorithm limitations because at the

1031
00:54:19,920 --> 00:54:24,020
beginning the RSC was let's say

1032
00:54:24,020 --> 00:54:26,880
algorithm agnostic meaning that it would

1033
00:54:26,880 --> 00:54:29,720
it was possible to use any cam algorithm

1034
00:54:29,720 --> 00:54:33,720
and in this new version uh we limit the

1035
00:54:33,720 --> 00:54:38,520
algorithm to kyber and to the free

1036
00:54:38,520 --> 00:54:41,420
security levels of cable

1037
00:54:41,420 --> 00:54:45,859
uh meaning kyber 5 12

1038
00:54:45,859 --> 00:54:49,800
768 and 1024.

1039
00:54:49,800 --> 00:54:52,819
and we associate the

1040
00:54:52,819 --> 00:54:56,700
corresponding uh kdf and wrapping

1041
00:54:56,700 --> 00:55:00,680
algorithm to fit with the security level

1042
00:55:00,680 --> 00:55:04,260
so yeah that's it for the changes uh on

1043
00:55:04,260 --> 00:55:07,160
this latest version

1044
00:55:07,160 --> 00:55:11,180
and next slide please

1045
00:55:11,760 --> 00:55:15,599
and so yes the the open Point there's

1046
00:55:15,599 --> 00:55:19,740
open points that are still open uh

1047
00:55:19,740 --> 00:55:22,619
so yes uh Sean already addressed that

1048
00:55:22,619 --> 00:55:24,720
there is an open point about the

1049
00:55:24,720 --> 00:55:26,599
certificate convention

1050
00:55:26,599 --> 00:55:32,339
which fills uh have to be uh

1051
00:55:32,339 --> 00:55:36,000
field in the certificate so there are

1052
00:55:36,000 --> 00:55:38,819
some new ideas to be defined especially

1053
00:55:38,819 --> 00:55:43,800
the IDK Trends oid and the caliber IDs

1054
00:55:43,800 --> 00:55:46,740
and a developing question is about the

1055
00:55:46,740 --> 00:55:49,859
limitation of the algorithm combination

1056
00:55:49,859 --> 00:55:52,559
shall we limit the number of

1057
00:55:52,559 --> 00:55:56,220
combinations to free one per security

1058
00:55:56,220 --> 00:56:00,839
level or should we leave it open to the

1059
00:56:00,839 --> 00:56:04,619
implementers that's maybe the last

1060
00:56:04,619 --> 00:56:07,680
question or the last open point to be

1061
00:56:07,680 --> 00:56:10,859
discussed pretty soon so maybe that's it

1062
00:56:10,859 --> 00:56:13,559
for this status

1063
00:56:13,559 --> 00:56:16,619
if you have any question please let me

1064
00:56:16,619 --> 00:56:18,240
know

1065
00:56:18,240 --> 00:56:22,700
we have one person in line at the mic

1066
00:56:22,920 --> 00:56:24,440
hello there

1067
00:56:24,440 --> 00:56:27,480
so this is a kind of a four ever issue

1068
00:56:27,480 --> 00:56:29,880
that pops up it's the key question of

1069
00:56:29,880 --> 00:56:34,020
192-bit security so TLS TLS doesn't have

1070
00:56:34,020 --> 00:56:38,040
that so it's it's and it showed up in

1071
00:56:38,040 --> 00:56:40,140
various places like Risk 5 instructions

1072
00:56:40,140 --> 00:56:43,500
said we we thought do we really need key

1073
00:56:43,500 --> 00:56:45,780
generation the key expansion is really

1074
00:56:45,780 --> 00:56:48,720
the complex bit for 192 but many many

1075
00:56:48,720 --> 00:56:50,640
Hardware bits actually don't support it

1076
00:56:50,640 --> 00:56:53,579
at all so so I would I would personally

1077
00:56:53,579 --> 00:56:55,920
suggest uh dropping that and moving that

1078
00:56:55,920 --> 00:56:59,579
to two five six bits uh 192 is

1079
00:56:59,579 --> 00:57:02,040
especially aes192 is a little bit

1080
00:57:02,040 --> 00:57:05,640
obsolete the Char 3a4 for example is is

1081
00:57:05,640 --> 00:57:08,280
everywhere so that's I'm good with that

1082
00:57:08,280 --> 00:57:12,960
that's cnsa so suggestion

1083
00:57:14,520 --> 00:57:18,720
okay thanks okay uh John yeah um you

1084
00:57:18,720 --> 00:57:20,280
probably already had this and hopefully

1085
00:57:20,280 --> 00:57:22,200
I'm not bringing sir going back circular

1086
00:57:22,200 --> 00:57:25,319
but they can try and recipient info

1087
00:57:25,319 --> 00:57:27,720
um I know there's another recipient info

1088
00:57:27,720 --> 00:57:30,359
and I guess it never gets used and this

1089
00:57:30,359 --> 00:57:32,880
is a new mechanism so if it's not worthy

1090
00:57:32,880 --> 00:57:35,160
of using other recipient info I guess

1091
00:57:35,160 --> 00:57:38,040
nothing is but um has that I guess

1092
00:57:38,040 --> 00:57:40,500
that's been discussed in detail or I

1093
00:57:40,500 --> 00:57:42,960
guess just trying to figure out why chem

1094
00:57:42,960 --> 00:57:44,640
trans recipient input was used because

1095
00:57:44,640 --> 00:57:47,819
it it kind of fits but not perfect I

1096
00:57:47,819 --> 00:57:50,579
guess Nothing fits perfectly but or I I

1097
00:57:50,579 --> 00:57:52,500
guess I don't want to be in an older

1098
00:57:52,500 --> 00:57:54,240
horse either if it's already been

1099
00:57:54,240 --> 00:57:55,980
discussed and decided that this is the

1100
00:57:55,980 --> 00:57:57,300
way forward but

1101
00:57:57,300 --> 00:57:59,640
it just seems there's you know there was

1102
00:57:59,640 --> 00:58:01,500
already extension mechanisms built into

1103
00:58:01,500 --> 00:58:04,680
it to do this to add new things so why

1104
00:58:04,680 --> 00:58:07,079
wasn't that done I think what he's uh

1105
00:58:07,079 --> 00:58:09,240
proposing here on this slide is that

1106
00:58:09,240 --> 00:58:13,559
that identifier ID chemtrans is the

1107
00:58:13,559 --> 00:58:16,859
other recipient info oyed to say that's

1108
00:58:16,859 --> 00:58:20,339
what's going on oh is that okay I didn't

1109
00:58:20,339 --> 00:58:23,579
understand it then others have proposed

1110
00:58:23,579 --> 00:58:28,740
or say uh cam uses key trans recipient

1111
00:58:28,740 --> 00:58:31,339
info

1112
00:58:33,720 --> 00:58:38,299
I guess micro sign go back two slides

1113
00:58:42,960 --> 00:58:45,500
yeah right

1114
00:58:47,640 --> 00:58:49,740
yeah that's what I've seen on this slide

1115
00:58:49,740 --> 00:58:53,700
oh I see I I'm I missed that thank you

1116
00:58:53,700 --> 00:58:57,119
okay so yes so your suggestion is to use

1117
00:58:57,119 --> 00:59:00,660
Uber recipient info that's yeah I'm just

1118
00:59:00,660 --> 00:59:02,720
I guess wondering why

1119
00:59:02,720 --> 00:59:05,400
I guess is is this the best of the two

1120
00:59:05,400 --> 00:59:09,559
evils I guess is that why it was chosen

1121
00:59:09,559 --> 00:59:13,200
it is clear that the the those that is

1122
00:59:13,200 --> 00:59:15,000
the trade-off right because there's two

1123
00:59:15,000 --> 00:59:17,819
ways to wedge it in this is one and all

1124
00:59:17,819 --> 00:59:19,740
right and the question is and I think

1125
00:59:19,740 --> 00:59:21,299
that's why it was on the discussion

1126
00:59:21,299 --> 00:59:22,260
slide

1127
00:59:22,260 --> 00:59:25,380
is that the best trade-off okay that's

1128
00:59:25,380 --> 00:59:28,680
fine man okay and and sure let's if you

1129
00:59:28,680 --> 00:59:30,240
have an opinion we should take that to

1130
00:59:30,240 --> 00:59:33,960
the list Sean yeah sure hi I'm Queen

1131
00:59:33,960 --> 00:59:36,000
dang goodness um

1132
00:59:36,000 --> 00:59:39,240
I agree with the person before John

1133
00:59:39,240 --> 00:59:42,780
um about the 192. um however with the

1134
00:59:42,780 --> 00:59:45,839
the cam uh kyber cam

1135
00:59:45,839 --> 00:59:47,520
um

1136
00:59:47,520 --> 00:59:52,020
I I my vote would be to keep the uh the

1137
00:59:52,020 --> 00:59:56,220
um kyber 768. uh maybe because that that

1138
00:59:56,220 --> 00:59:57,660
could be

1139
00:59:57,660 --> 00:59:59,940
really good in performance and Trader a

1140
00:59:59,940 --> 01:00:02,700
security trade-off and might maybe a lot

1141
01:00:02,700 --> 01:00:04,740
of people are going to use that we just

1142
01:00:04,740 --> 01:00:06,000
don't know yet

1143
01:00:06,000 --> 01:00:09,059
um so with the AES the the story is very

1144
01:00:09,059 --> 01:00:12,359
clear but for the cam uh I'm not sure

1145
01:00:12,359 --> 01:00:14,640
about that so I think um I would

1146
01:00:14,640 --> 01:00:18,000
recommend to keep the cam uh kyber 760a

1147
01:00:18,000 --> 01:00:20,299
in there

1148
01:00:21,420 --> 01:00:23,099
okay

1149
01:00:23,099 --> 01:00:26,579
and the response Sean

1150
01:00:26,579 --> 01:00:28,940
um hi Sean Turner um

1151
01:00:28,940 --> 01:00:31,140
we would like to avoid some of the

1152
01:00:31,140 --> 01:00:32,700
problems we had with elliptic curve by

1153
01:00:32,700 --> 01:00:34,799
providing too many choices less is

1154
01:00:34,799 --> 01:00:36,780
probably more I don't know how much less

1155
01:00:36,780 --> 01:00:38,880
we want to go but like letting us you

1156
01:00:38,880 --> 01:00:41,220
know let it let it picking picking 80 of

1157
01:00:41,220 --> 01:00:43,619
these is going to be a bat so if it's

1158
01:00:43,619 --> 01:00:45,359
three or two I think we're probably on

1159
01:00:45,359 --> 01:00:47,520
the right magnitude of what we want if

1160
01:00:47,520 --> 01:00:51,359
it's any more than I think waste of time

1161
01:00:51,359 --> 01:00:53,099
your company

1162
01:00:53,099 --> 01:00:55,559
yeah Mark quick and so one thing that

1163
01:00:55,559 --> 01:00:58,619
just popped into my mind so kyber at

1164
01:00:58,619 --> 01:01:00,299
this lowest level

1165
01:01:00,299 --> 01:01:03,119
this has been some talk if the design

1166
01:01:03,119 --> 01:01:06,119
team may actually drop that so that's

1167
01:01:06,119 --> 01:01:09,299
that's because it's uh based on current

1168
01:01:09,299 --> 01:01:12,000
analytic results it might not quite meet

1169
01:01:12,000 --> 01:01:12,900
the

1170
01:01:12,900 --> 01:01:15,359
128 bit level so so that's something

1171
01:01:15,359 --> 01:01:18,119
that mist is considering of doing so

1172
01:01:18,119 --> 01:01:21,720
that would basically reassign the kyber

1173
01:01:21,720 --> 01:01:23,520
7

1174
01:01:23,520 --> 01:01:26,460
the middle middle as as the lowest

1175
01:01:26,460 --> 01:01:30,240
lowest uh level here and I I was

1176
01:01:30,240 --> 01:01:31,680
previously I was just talking about the

1177
01:01:31,680 --> 01:01:35,220
AES so so even in the AES based

1178
01:01:35,220 --> 01:01:37,260
Scarborough variants which are temporary

1179
01:01:37,260 --> 01:01:39,119
the specification makes it quite clear

1180
01:01:39,119 --> 01:01:41,040
that those are not the final version

1181
01:01:41,040 --> 01:01:44,700
will use shot three or Shake only

1182
01:01:44,700 --> 01:01:47,819
even those used internally as256 so AES

1183
01:01:47,819 --> 01:01:51,000
specifically the AES algorithm is 192

1184
01:01:51,000 --> 01:01:55,460
bit is not existent in kyber

1185
01:01:55,799 --> 01:01:58,020
that must be what Pals was about to say

1186
01:01:58,020 --> 01:02:01,520
because he sat back down

1187
01:02:02,579 --> 01:02:04,500
okay

1188
01:02:04,500 --> 01:02:05,950
Q's empty

1189
01:02:05,950 --> 01:02:08,099
[Music]

1190
01:02:08,099 --> 01:02:10,819
all right

1191
01:02:11,460 --> 01:02:13,200
thank you

1192
01:02:13,200 --> 01:02:15,799
thank you

1193
01:02:16,440 --> 01:02:19,559
so uh the next draft is kind of a

1194
01:02:19,559 --> 01:02:22,859
placeholder with this using Sphinx plus

1195
01:02:22,859 --> 01:02:25,740
uh you know with CMS we have a

1196
01:02:25,740 --> 01:02:27,839
placeholder document there the group and

1197
01:02:27,839 --> 01:02:30,980
group adopted it uh there was really

1198
01:02:30,980 --> 01:02:34,440
nothing to discuss at this point

1199
01:02:34,440 --> 01:02:37,980
um so please review it and send comments

1200
01:02:37,980 --> 01:02:40,440
to the list

1201
01:02:40,440 --> 01:02:43,319
and the next set is uh under

1202
01:02:43,319 --> 01:02:46,099
consideration

1203
01:02:46,200 --> 01:02:48,780
is anyone going to speak to the uh

1204
01:02:48,780 --> 01:02:51,960
binding for multi-auth document

1205
01:02:51,960 --> 01:02:56,000
I didn't get any slides for that

1206
01:02:56,460 --> 01:02:59,299
Here Comes Mike

1207
01:02:59,730 --> 01:03:02,860
[Music]

1208
01:03:06,180 --> 01:03:08,460
I think I'm moving about as fast as the

1209
01:03:08,460 --> 01:03:11,180
elevators these days

1210
01:03:11,880 --> 01:03:14,400
um yeah so um

1211
01:03:14,400 --> 01:03:17,880
this draft was presented in Philadelphia

1212
01:03:17,880 --> 01:03:19,980
um

1213
01:03:19,980 --> 01:03:23,720
it's just too low for you

1214
01:03:26,960 --> 01:03:31,380
there you go not my style

1215
01:03:31,380 --> 01:03:36,000
um so we presented this draft in Philly

1216
01:03:36,000 --> 01:03:38,579
um it hasn't changed since then

1217
01:03:38,579 --> 01:03:39,660
um

1218
01:03:39,660 --> 01:03:41,460
women presented in Philly we got a

1219
01:03:41,460 --> 01:03:43,440
little bit of positive feedback we got a

1220
01:03:43,440 --> 01:03:45,839
lot of don't care which actually wasn't

1221
01:03:45,839 --> 01:03:47,579
surprising

1222
01:03:47,579 --> 01:03:49,799
um and I'll kind of get to that

1223
01:03:49,799 --> 01:03:50,760
um

1224
01:03:50,760 --> 01:03:53,819
it uh it came up for adoption and it was

1225
01:03:53,819 --> 01:03:55,559
quiet and then we got a bunch of

1226
01:03:55,559 --> 01:03:58,680
objections and I'm not we're kind of

1227
01:03:58,680 --> 01:03:59,760
puzzled

1228
01:03:59,760 --> 01:04:01,680
um by that

1229
01:04:01,680 --> 01:04:06,020
um the objections kind of fell into

1230
01:04:06,480 --> 01:04:08,880
um what we kind of considered two camps

1231
01:04:08,880 --> 01:04:11,040
one was

1232
01:04:11,040 --> 01:04:13,099
um

1233
01:04:13,140 --> 01:04:16,319
uh one was things that that kind of had

1234
01:04:16,319 --> 01:04:18,480
been put into the draft and maybe the

1235
01:04:18,480 --> 01:04:20,339
maybe the objections were being made

1236
01:04:20,339 --> 01:04:22,619
before the the draft had been fully read

1237
01:04:22,619 --> 01:04:24,839
or understood

1238
01:04:24,839 --> 01:04:26,520
um because we had we had done quite a

1239
01:04:26,520 --> 01:04:28,319
bit of work into the into the second

1240
01:04:28,319 --> 01:04:29,880
draft based on comment earlier

1241
01:04:29,880 --> 01:04:32,520
especially early comments um and then

1242
01:04:32,520 --> 01:04:34,440
there were another set of comments that

1243
01:04:34,440 --> 01:04:36,540
seemed to not understand what we were

1244
01:04:36,540 --> 01:04:39,119
doing or to assume that it applied more

1245
01:04:39,119 --> 01:04:40,500
broadly

1246
01:04:40,500 --> 01:04:43,079
um than we intended so

1247
01:04:43,079 --> 01:04:45,660
um probably most of my comments here are

1248
01:04:45,660 --> 01:04:47,160
going to be

1249
01:04:47,160 --> 01:04:48,960
um of that sort

1250
01:04:48,960 --> 01:04:50,940
um I'm gonna I'm gonna kind of give this

1251
01:04:50,940 --> 01:04:53,220
overview and then um if there are

1252
01:04:53,220 --> 01:04:54,780
specific comments about the technical

1253
01:04:54,780 --> 01:04:57,299
contents um Rebecca is is there and

1254
01:04:57,299 --> 01:04:58,859
she's going to come up and address those

1255
01:04:58,859 --> 01:05:00,180
I don't know how much time we want to

1256
01:05:00,180 --> 01:05:01,920
take about this

1257
01:05:01,920 --> 01:05:04,440
um I'd like to take enough to resolve

1258
01:05:04,440 --> 01:05:06,480
but whether we're going to adopt it or

1259
01:05:06,480 --> 01:05:08,359
not um

1260
01:05:08,359 --> 01:05:10,920
sure but with Panos not here I'm not

1261
01:05:10,920 --> 01:05:13,079
sure he's uh

1262
01:05:13,079 --> 01:05:16,500
he's not uh yeah

1263
01:05:16,500 --> 01:05:17,359
um

1264
01:05:17,359 --> 01:05:19,200
so anyway

1265
01:05:19,200 --> 01:05:21,240
um that there's a transition uh scenario

1266
01:05:21,240 --> 01:05:23,040
in the paper but

1267
01:05:23,040 --> 01:05:25,200
um maybe it's not clear or maybe it's

1268
01:05:25,200 --> 01:05:26,760
not enough

1269
01:05:26,760 --> 01:05:30,000
um one thing is that

1270
01:05:30,000 --> 01:05:32,579
um this this extension is not a mimic of

1271
01:05:32,579 --> 01:05:35,099
of composite it does you know some of

1272
01:05:35,099 --> 01:05:37,980
the some of the questions seem to be how

1273
01:05:37,980 --> 01:05:40,559
are you going to address this or how

1274
01:05:40,559 --> 01:05:43,260
does this extension do uh these things

1275
01:05:43,260 --> 01:05:45,540
and it doesn't

1276
01:05:45,540 --> 01:05:47,700
um it has a very limited function which

1277
01:05:47,700 --> 01:05:49,740
is defined in the draft

1278
01:05:49,740 --> 01:05:52,980
um it's not meant to do

1279
01:05:52,980 --> 01:05:55,380
any specific thing than any other

1280
01:05:55,380 --> 01:05:57,660
mechanism does

1281
01:05:57,660 --> 01:05:58,500
um

1282
01:05:58,500 --> 01:06:01,140
uh the so the basic premise is you have

1283
01:06:01,140 --> 01:06:03,299
two independently issued and managed

1284
01:06:03,299 --> 01:06:05,579
certs if that's kind of not your

1285
01:06:05,579 --> 01:06:08,520
scenario this doesn't really apply

1286
01:06:08,520 --> 01:06:10,799
um this is this is however what the dod

1287
01:06:10,799 --> 01:06:12,660
pki well

1288
01:06:12,660 --> 01:06:15,720
udpkis will be issuing

1289
01:06:15,720 --> 01:06:18,119
um and so this is kind of the the thing

1290
01:06:18,119 --> 01:06:19,740
we're driving at

1291
01:06:19,740 --> 01:06:21,799
um

1292
01:06:22,859 --> 01:06:25,079
the

1293
01:06:25,079 --> 01:06:29,339
some of the questions were like about

1294
01:06:29,339 --> 01:06:31,559
um over you know how the validity

1295
01:06:31,559 --> 01:06:33,539
periods overlap or revocation things

1296
01:06:33,539 --> 01:06:35,039
like that there's a really important

1297
01:06:35,039 --> 01:06:37,260
questions this mechanism isn't meant to

1298
01:06:37,260 --> 01:06:38,940
address that

1299
01:06:38,940 --> 01:06:41,520
um this mechanism is meant to be used by

1300
01:06:41,520 --> 01:06:43,859
DOD units that

1301
01:06:43,859 --> 01:06:45,299
um and I mean it could be used by anyone

1302
01:06:45,299 --> 01:06:47,339
but specifically NSA is part of the deal

1303
01:06:47,339 --> 01:06:50,579
I'm I'm from the NSA Center for cyber

1304
01:06:50,579 --> 01:06:52,140
security standards if if that wasn't

1305
01:06:52,140 --> 01:06:53,520
clear

1306
01:06:53,520 --> 01:06:54,780
um

1307
01:06:54,780 --> 01:06:57,960
the the dod will have um has a lot of

1308
01:06:57,960 --> 01:07:01,079
different types of devices equipments it

1309
01:07:01,079 --> 01:07:04,200
will have a number of transition

1310
01:07:04,200 --> 01:07:06,000
challenges

1311
01:07:06,000 --> 01:07:06,900
um

1312
01:07:06,900 --> 01:07:09,059
and so this there will not be a

1313
01:07:09,059 --> 01:07:10,859
one-size-fits all

1314
01:07:10,859 --> 01:07:12,599
um so

1315
01:07:12,599 --> 01:07:15,539
the really the mechanism in the draft is

1316
01:07:15,539 --> 01:07:18,539
a transition tool for for

1317
01:07:18,539 --> 01:07:20,520
um for use by people who are planning

1318
01:07:20,520 --> 01:07:22,079
transitions

1319
01:07:22,079 --> 01:07:24,660
what it does is

1320
01:07:24,660 --> 01:07:26,520
um it allows

1321
01:07:26,520 --> 01:07:30,240
um it allows uh units to create make

1322
01:07:30,240 --> 01:07:32,460
people for a break uh transition

1323
01:07:32,460 --> 01:07:35,520
scenarios it allows them to do a

1324
01:07:35,520 --> 01:07:37,140
significant you know signing for the

1325
01:07:37,140 --> 01:07:39,180
widest possible audience

1326
01:07:39,180 --> 01:07:42,059
um perhaps on a key distribution

1327
01:07:42,059 --> 01:07:44,160
packages things like that I mean things

1328
01:07:44,160 --> 01:07:45,839
that a lot of people don't don't really

1329
01:07:45,839 --> 01:07:47,220
care about

1330
01:07:47,220 --> 01:07:48,359
um

1331
01:07:48,359 --> 01:07:51,359
it allows crucially it's going to the

1332
01:07:51,359 --> 01:07:54,720
plan is to allow for the movement uh

1333
01:07:54,720 --> 01:07:58,260
from traditional photography search to

1334
01:07:58,260 --> 01:08:01,200
post Quantum cryoga research

1335
01:08:01,200 --> 01:08:03,359
um I've taken say a pace

1336
01:08:03,359 --> 01:08:07,440
not as fast as possible but as fast as

1337
01:08:07,440 --> 01:08:08,760
um makes sense

1338
01:08:08,760 --> 01:08:11,400
for the transition this plan

1339
01:08:11,400 --> 01:08:12,839
um

1340
01:08:12,839 --> 01:08:15,780
so so the some of the questions asked

1341
01:08:15,780 --> 01:08:17,520
were good questions but this mechanism

1342
01:08:17,520 --> 01:08:19,080
isn't meant to address it at all it's

1343
01:08:19,080 --> 01:08:21,238
not going to that's not the purpose of

1344
01:08:21,238 --> 01:08:22,319
it

1345
01:08:22,319 --> 01:08:25,040
um the the mechanism

1346
01:08:25,040 --> 01:08:29,179
allows a relying party to understand

1347
01:08:29,179 --> 01:08:33,299
that a pqc certificate

1348
01:08:33,299 --> 01:08:35,880
and a traditional cryptography

1349
01:08:35,880 --> 01:08:36,960
certificate

1350
01:08:36,960 --> 01:08:39,420
the private Keys associated with them

1351
01:08:39,420 --> 01:08:41,880
are held by the same entity

1352
01:08:41,880 --> 01:08:44,219
that's all it does

1353
01:08:44,219 --> 01:08:46,679
um it is a

1354
01:08:46,679 --> 01:08:50,219
it's defined as a non-critical extension

1355
01:08:50,219 --> 01:08:51,600
you don't like it you don't understand

1356
01:08:51,600 --> 01:08:53,520
it that's fine

1357
01:08:53,520 --> 01:08:54,120
um

1358
01:08:54,120 --> 01:08:56,880
and then there is an Associated

1359
01:08:56,880 --> 01:08:58,319
um

1360
01:08:58,319 --> 01:09:02,698
certificate um signing request to get

1361
01:09:02,698 --> 01:09:05,819
the to tool to give the ca the

1362
01:09:05,819 --> 01:09:07,979
wherewithal to assert

1363
01:09:07,979 --> 01:09:09,779
that the private keys are held by the

1364
01:09:09,779 --> 01:09:11,640
same entity

1365
01:09:11,640 --> 01:09:14,100
um and and you know you're not in a

1366
01:09:14,100 --> 01:09:15,779
scenario where this is

1367
01:09:15,779 --> 01:09:17,698
uh extension is going to matter to you

1368
01:09:17,698 --> 01:09:20,460
you don't implement it so I'm we're not

1369
01:09:20,460 --> 01:09:22,380
we're kind of confused of why there's

1370
01:09:22,380 --> 01:09:23,640
all this

1371
01:09:23,640 --> 01:09:24,719
um

1372
01:09:24,719 --> 01:09:27,839
kind of objection and piling on and

1373
01:09:27,839 --> 01:09:29,279
whatnot

1374
01:09:29,279 --> 01:09:30,359
um I understand there's a lot of

1375
01:09:30,359 --> 01:09:32,040
questions but

1376
01:09:32,040 --> 01:09:34,140
most of the questions don't seem to

1377
01:09:34,140 --> 01:09:35,460
apply

1378
01:09:35,460 --> 01:09:37,080
um so I'm open to questions about that

1379
01:09:37,080 --> 01:09:38,640
if there are

1380
01:09:38,640 --> 01:09:40,920
specific technical questions about the

1381
01:09:40,920 --> 01:09:42,120
draft

1382
01:09:42,120 --> 01:09:45,380
um I'll have Rebecca come up

1383
01:09:46,380 --> 01:09:48,600
Mike elsewhere it's a High

1384
01:09:48,600 --> 01:09:49,560
um like

1385
01:09:49,560 --> 01:09:50,939
I

1386
01:09:50,939 --> 01:09:53,279
I feel awkward because I'm one of the

1387
01:09:53,279 --> 01:09:54,960
people throwing you a lot of questions

1388
01:09:54,960 --> 01:09:56,520
and I'm not trying to shoot down your

1389
01:09:56,520 --> 01:09:57,960
draft I just

1390
01:09:57,960 --> 01:10:00,239
you know they're not bad questions

1391
01:10:00,239 --> 01:10:02,820
they're just not the mechanism isn't

1392
01:10:02,820 --> 01:10:05,100
meant to address them yeah so let me

1393
01:10:05,100 --> 01:10:06,300
bring up two maybe that we can help

1394
01:10:06,300 --> 01:10:08,340
drive to whether this is worth adopting

1395
01:10:08,340 --> 01:10:10,920
or Not by discussing here the first one

1396
01:10:10,920 --> 01:10:12,719
is

1397
01:10:12,719 --> 01:10:14,340
um someone pointed out on the list that

1398
01:10:14,340 --> 01:10:18,179
there already is RFC 5697 which is the

1399
01:10:18,179 --> 01:10:21,000
other certs extension and its abstract

1400
01:10:21,000 --> 01:10:23,640
says some applications that associate

1401
01:10:23,640 --> 01:10:25,080
State information with public key

1402
01:10:25,080 --> 01:10:27,179
certificates can benefit from a way to

1403
01:10:27,179 --> 01:10:29,100
link together a set of certificates that

1404
01:10:29,100 --> 01:10:31,320
belong to the same and entity

1405
01:10:31,320 --> 01:10:33,360
it sounds exactly like the same problem

1406
01:10:33,360 --> 01:10:36,300
statement the last paragraph of the

1407
01:10:36,300 --> 01:10:38,340
introduction

1408
01:10:38,340 --> 01:10:40,620
of which of that

1409
01:10:40,620 --> 01:10:44,420
last paragraph of the introduction

1410
01:10:50,760 --> 01:10:53,760
foreign

1411
01:10:57,020 --> 01:10:59,280
it says

1412
01:10:59,280 --> 01:11:03,179
um that how the ca knows why and how to

1413
01:11:03,179 --> 01:11:06,900
assert that extension is out of scope

1414
01:11:06,900 --> 01:11:09,000
our our mechanism brings it in scope

1415
01:11:09,000 --> 01:11:11,580
okay well so that's my next question

1416
01:11:11,580 --> 01:11:14,460
so to my reading the major difference

1417
01:11:14,460 --> 01:11:17,820
between 56 and 97 and your cert binding

1418
01:11:17,820 --> 01:11:19,560
is that you're adding a CSR mechanism

1419
01:11:19,560 --> 01:11:22,380
which is not here okay I I don't think

1420
01:11:22,380 --> 01:11:24,300
the mechanism is exactly the same and

1421
01:11:24,300 --> 01:11:26,100
that could be debated whether whether

1422
01:11:26,100 --> 01:11:27,719
the yes I don't think the extension is

1423
01:11:27,719 --> 01:11:29,400
exactly the same and it could be debated

1424
01:11:29,400 --> 01:11:30,540
whether it should be or whether it

1425
01:11:30,540 --> 01:11:31,980
should be something different yeah but

1426
01:11:31,980 --> 01:11:34,280
yeah

1427
01:11:35,940 --> 01:11:38,940
so attribute so I'm here representing

1428
01:11:38,940 --> 01:11:42,600
entrust as a public CA what scares me

1429
01:11:42,600 --> 01:11:44,219
about this

1430
01:11:44,219 --> 01:11:46,140
let me start the other way what doesn't

1431
01:11:46,140 --> 01:11:47,580
scare me about this what I think in your

1432
01:11:47,580 --> 01:11:49,560
draft is totally reasonable and so we

1433
01:11:49,560 --> 01:11:50,640
can start with what I think is totally

1434
01:11:50,640 --> 01:11:53,580
reasonable vulture the ca issues two

1435
01:11:53,580 --> 01:11:55,440
certs to someone here's your two certs

1436
01:11:55,440 --> 01:11:57,420
I've bound them

1437
01:11:57,420 --> 01:11:58,980
great

1438
01:11:58,980 --> 01:12:01,920
also if it's coming from an RA user

1439
01:12:01,920 --> 01:12:04,560
already has a cert the ra is is sending

1440
01:12:04,560 --> 01:12:06,540
in a second cert request and the ra is

1441
01:12:06,540 --> 01:12:08,820
is saying these two search should be

1442
01:12:08,820 --> 01:12:11,940
bound great those two use cases I think

1443
01:12:11,940 --> 01:12:13,400
are fine

1444
01:12:13,400 --> 01:12:16,440
the genericness of putting this in a CSR

1445
01:12:16,440 --> 01:12:18,239
is I think what opens the Pandora's Box

1446
01:12:18,239 --> 01:12:21,719
for me and as a public CA if we receive

1447
01:12:21,719 --> 01:12:24,540
a CSR entrust receives a CSR and it's

1448
01:12:24,540 --> 01:12:27,239
got a cert binding CSR attribute

1449
01:12:27,239 --> 01:12:29,400
pointing to a digicert cert

1450
01:12:29,400 --> 01:12:32,159
what am I supposed to do with that I

1451
01:12:32,159 --> 01:12:34,380
can't copy it over into the cert without

1452
01:12:34,380 --> 01:12:36,120
validating it because on the ca I have

1453
01:12:36,120 --> 01:12:38,940
to validate what's in the CSR I also

1454
01:12:38,940 --> 01:12:40,260
don't want to get into the business of

1455
01:12:40,260 --> 01:12:41,760
entrust having to figure out how to

1456
01:12:41,760 --> 01:12:43,860
cross validate certs that belong to

1457
01:12:43,860 --> 01:12:46,020
other public Cas because that's going to

1458
01:12:46,020 --> 01:12:47,219
be a nightmare

1459
01:12:47,219 --> 01:12:48,600
so

1460
01:12:48,600 --> 01:12:50,520
in the context of Publix is what am I

1461
01:12:50,520 --> 01:12:52,020
supposed to do with a binding request

1462
01:12:52,020 --> 01:12:54,659
attribute in a CSR

1463
01:12:54,659 --> 01:12:56,520
that that's where the messiness I think

1464
01:12:56,520 --> 01:12:59,000
explodes

1465
01:13:04,860 --> 01:13:06,960
that was considering I hadn't considered

1466
01:13:06,960 --> 01:13:09,360
that dude Rebecca do you have an answer

1467
01:13:09,360 --> 01:13:11,400
to that or

1468
01:13:11,400 --> 01:13:13,020
okay

1469
01:13:13,020 --> 01:13:14,340
and so it might be as simple as just

1470
01:13:14,340 --> 01:13:15,960
saying if you're a public CA don't allow

1471
01:13:15,960 --> 01:13:17,820
using csrs and then most of my

1472
01:13:17,820 --> 01:13:20,280
objections would drop off

1473
01:13:20,280 --> 01:13:24,540
um right so and I and I again I mean

1474
01:13:24,540 --> 01:13:27,780
I I don't expect this to be a general

1475
01:13:27,780 --> 01:13:30,480
thing I mean I

1476
01:13:30,480 --> 01:13:34,860
this is really toward DOD use so I would

1477
01:13:34,860 --> 01:13:38,100
not expect that to be you know an issue

1478
01:13:38,100 --> 01:13:40,140
but that's worth considering I mean it's

1479
01:13:40,140 --> 01:13:42,000
worth saying something about absolutely

1480
01:13:42,000 --> 01:13:44,100
yeah

1481
01:13:44,100 --> 01:13:46,800
so uh Tim hobby did you start

1482
01:13:46,800 --> 01:13:49,620
um I mean you know if you blindly copy

1483
01:13:49,620 --> 01:13:52,679
uh stuff out at csrs and even if he

1484
01:13:52,679 --> 01:13:54,540
validated it if you expect that to go

1485
01:13:54,540 --> 01:13:57,179
well for you 100 of the time

1486
01:13:57,179 --> 01:13:59,040
uh you probably shouldn't be involved in

1487
01:13:59,040 --> 01:14:01,620
running a public CA uh so I would think

1488
01:14:01,620 --> 01:14:04,080
in the scenario that you mentioned

1489
01:14:04,080 --> 01:14:05,940
um if you do get a request finding a

1490
01:14:05,940 --> 01:14:07,980
certificate to an entity that's been

1491
01:14:07,980 --> 01:14:10,020
validated by another organization I

1492
01:14:10,020 --> 01:14:11,460
would think you exits state right

1493
01:14:11,460 --> 01:14:13,320
immediately

1494
01:14:13,320 --> 01:14:15,239
unless you have some agreement on how to

1495
01:14:15,239 --> 01:14:16,739
do that with the other organization or

1496
01:14:16,739 --> 01:14:18,120
there's some compliance rules somehow

1497
01:14:18,120 --> 01:14:19,380
that tell you how to do that but I think

1498
01:14:19,380 --> 01:14:20,880
that's just you just look at that CSR

1499
01:14:20,880 --> 01:14:22,500
and you just reject it and say you're

1500
01:14:22,500 --> 01:14:23,760
asking me to bind to assert I know

1501
01:14:23,760 --> 01:14:25,020
nothing about

1502
01:14:25,020 --> 01:14:27,360
okay and so that argument makes that

1503
01:14:27,360 --> 01:14:29,280
completely out of scope for this ietf

1504
01:14:29,280 --> 01:14:30,840
draft but maybe cab would have an

1505
01:14:30,840 --> 01:14:32,940
opinion on that yeah potentially or some

1506
01:14:32,940 --> 01:14:34,620
other group that you know like it's a

1507
01:14:34,620 --> 01:14:35,940
reasonable use case that you might

1508
01:14:35,940 --> 01:14:38,100
actually want to bind assert from two

1509
01:14:38,100 --> 01:14:40,020
Cas but if somebody wants to do that I

1510
01:14:40,020 --> 01:14:41,580
think they should write an RFC draft

1511
01:14:41,580 --> 01:14:43,140
about how exactly that works or

1512
01:14:43,140 --> 01:14:44,760
something like that or you know some cab

1513
01:14:44,760 --> 01:14:46,739
Forum rules or somebody's got to explain

1514
01:14:46,739 --> 01:14:48,000
how that works

1515
01:14:48,000 --> 01:14:49,320
certainly there would be a

1516
01:14:49,320 --> 01:14:51,120
pre-arrangement I mean if if you

1517
01:14:51,120 --> 01:14:52,860
expected that to succeed you'd better

1518
01:14:52,860 --> 01:14:54,900
pre-arraimed it right yeah I'm going to

1519
01:14:54,900 --> 01:14:56,520
ask the completely naive uh question

1520
01:14:56,520 --> 01:14:58,920
sorry this is Sean Turner so I got in

1521
01:14:58,920 --> 01:15:00,960
the queue and no one believes you is

1522
01:15:00,960 --> 01:15:02,580
this um

1523
01:15:02,580 --> 01:15:03,960
are you doing anything more than just

1524
01:15:03,960 --> 01:15:06,719
validating a certain past like past the

1525
01:15:06,719 --> 01:15:09,540
math checks like because I know like

1526
01:15:09,540 --> 01:15:11,640
like you're not sending in two csrs

1527
01:15:11,640 --> 01:15:13,320
you're sending in a CSR that points to

1528
01:15:13,320 --> 01:15:15,179
another certificate so like when you're

1529
01:15:15,179 --> 01:15:16,620
validating the other sir you're

1530
01:15:16,620 --> 01:15:18,840
requesting that just like the cert path

1531
01:15:18,840 --> 01:15:20,699
validates back to a trust anchor yeah

1532
01:15:20,699 --> 01:15:22,860
that's it right so then I'm kind of

1533
01:15:22,860 --> 01:15:24,840
worried about what is this other

1534
01:15:24,840 --> 01:15:27,000
thing that you guys think you need to do

1535
01:15:27,000 --> 01:15:29,760
that public Cas would need to do

1536
01:15:29,760 --> 01:15:31,320
because all their all they're checking

1537
01:15:31,320 --> 01:15:33,179
is that it's a valid certificate that

1538
01:15:33,179 --> 01:15:35,880
hasn't been revoked yes that's it right

1539
01:15:35,880 --> 01:15:37,800
yeah so I'm I'm kind of like what else

1540
01:15:37,800 --> 01:15:39,840
would you be validating Mike I'm just

1541
01:15:39,840 --> 01:15:40,679
curious

1542
01:15:40,679 --> 01:15:42,659
but yeah what I took from what Mike said

1543
01:15:42,659 --> 01:15:44,100
was

1544
01:15:44,100 --> 01:15:45,840
um public Cas don't have lots of trust

1545
01:15:45,840 --> 01:15:47,520
anchors hanging around from others the

1546
01:15:47,520 --> 01:15:49,440
other public facing Cas that's a good

1547
01:15:49,440 --> 01:15:50,940
thing they're publicly available right

1548
01:15:50,940 --> 01:15:53,839
so

1549
01:16:02,840 --> 01:16:05,699
I mean if you expected this to succeed

1550
01:16:05,699 --> 01:16:08,460
you would have a pre you would Prime

1551
01:16:08,460 --> 01:16:10,260
that to make sure that that was the case

1552
01:16:10,260 --> 01:16:11,820
okay fair enough yeah right so what I

1553
01:16:11,820 --> 01:16:13,980
mean again I would not expect to release

1554
01:16:13,980 --> 01:16:16,920
this this you know CSR in Into the Wild

1555
01:16:16,920 --> 01:16:20,000
and it just and just it's

1556
01:16:20,000 --> 01:16:22,620
this is part of a transition plan yeah

1557
01:16:22,620 --> 01:16:24,300
so I mean so that would so there is an

1558
01:16:24,300 --> 01:16:26,280
impetus there and then the public CA was

1559
01:16:26,280 --> 01:16:27,300
going to do is they would have to be

1560
01:16:27,300 --> 01:16:29,219
configured with these these other trust

1561
01:16:29,219 --> 01:16:30,840
anchors but they're the idea is they

1562
01:16:30,840 --> 01:16:32,159
would get that and then they would just

1563
01:16:32,159 --> 01:16:33,620
use the paths

1564
01:16:33,620 --> 01:16:35,820
they would just validate the circus it's

1565
01:16:35,820 --> 01:16:37,380
not not nearly as bad as I thought it

1566
01:16:37,380 --> 01:16:39,500
was

1567
01:16:39,739 --> 01:16:43,620
that my gown's worth yeah so I mean the

1568
01:16:43,620 --> 01:16:45,840
the point of the surf binding is it says

1569
01:16:45,840 --> 01:16:48,000
you know the this binding asserts that

1570
01:16:48,000 --> 01:16:49,560
these two certs belong to the same

1571
01:16:49,560 --> 01:16:51,360
entity or the private keys are held by

1572
01:16:51,360 --> 01:16:53,159
the same entity right that's that's the

1573
01:16:53,159 --> 01:16:57,120
assertion well right so the the CSR

1574
01:16:57,120 --> 01:16:59,580
contains something that is signed by the

1575
01:16:59,580 --> 01:17:03,020
other private key right so the the the

1576
01:17:03,020 --> 01:17:06,840
evidence provided is that

1577
01:17:06,840 --> 01:17:09,239
um and and then the CSR is presumably

1578
01:17:09,239 --> 01:17:11,640
signed by the pqc private key so the

1579
01:17:11,640 --> 01:17:14,760
evidence is that the person who holds

1580
01:17:14,760 --> 01:17:17,400
the private key for the pqc cert also

1581
01:17:17,400 --> 01:17:19,980
holds the private key for the ECC cert

1582
01:17:19,980 --> 01:17:21,960
right it's a sword I guess gets into

1583
01:17:21,960 --> 01:17:23,460
Tim's point of do you trust the other

1584
01:17:23,460 --> 01:17:27,000
Cas human validation processes and yada

1585
01:17:27,000 --> 01:17:29,400
yada yada and yeah all right I'll sit

1586
01:17:29,400 --> 01:17:32,100
down now yeah

1587
01:17:32,100 --> 01:17:34,260
um it's worth that it would be worth

1588
01:17:34,260 --> 01:17:37,260
adding some uh words I think though that

1589
01:17:37,260 --> 01:17:39,300
that situation would have to be

1590
01:17:39,300 --> 01:17:41,400
pre-arranged that yeah

1591
01:17:41,400 --> 01:17:43,879
sure

1592
01:17:43,980 --> 01:17:46,620
yeah there's a team ahead of me in the

1593
01:17:46,620 --> 01:17:48,960
queue okay yeah that would be me I I

1594
01:17:48,960 --> 01:17:50,760
think Sean actually said most of what I

1595
01:17:50,760 --> 01:17:52,140
was going to say but yeah the additional

1596
01:17:52,140 --> 01:17:53,940
stuff that I'm thinking about that a

1597
01:17:53,940 --> 01:17:56,040
public CA would have to do is around

1598
01:17:56,040 --> 01:17:59,460
making sure it really is the same entity

1599
01:17:59,460 --> 01:18:02,100
um I'm not sure I'm okay with this and I

1600
01:18:02,100 --> 01:18:04,199
mean you can fix this by just changing

1601
01:18:04,199 --> 01:18:05,760
what you're asserting

1602
01:18:05,760 --> 01:18:07,199
um but I was thinking that you would do

1603
01:18:07,199 --> 01:18:09,540
a better job of that than just uh I've

1604
01:18:09,540 --> 01:18:12,120
got a technical proof that these that

1605
01:18:12,120 --> 01:18:14,880
this person controls that particular key

1606
01:18:14,880 --> 01:18:16,980
um because the difference between the

1607
01:18:16,980 --> 01:18:19,140
identity that's associated with the key

1608
01:18:19,140 --> 01:18:21,360
and who actually controls the key is

1609
01:18:21,360 --> 01:18:23,900
subtle in some situations

1610
01:18:23,900 --> 01:18:28,860
so uh Tim would just would it not be

1611
01:18:28,860 --> 01:18:31,199
sufficient to say the subject and the

1612
01:18:31,199 --> 01:18:33,000
subject all names and the two certs have

1613
01:18:33,000 --> 01:18:34,320
to be the same

1614
01:18:34,320 --> 01:18:36,420
uh I would think that would be something

1615
01:18:36,420 --> 01:18:37,980
you would want to do but I would then

1616
01:18:37,980 --> 01:18:39,960
additionally have the issue that if it's

1617
01:18:39,960 --> 01:18:42,719
another organization I have to uh know

1618
01:18:42,719 --> 01:18:45,179
whether a my uh

1619
01:18:45,179 --> 01:18:46,800
the way that I validate subject

1620
01:18:46,800 --> 01:18:48,719
information is compatible and B that I

1621
01:18:48,719 --> 01:18:51,060
actually trust the other uh company's

1622
01:18:51,060 --> 01:18:52,800
validation well enough that I'm willing

1623
01:18:52,800 --> 01:18:55,739
to sign out on it but yes in theory uh

1624
01:18:55,739 --> 01:18:57,239
making mandating that these subjects are

1625
01:18:57,239 --> 01:18:58,980
identical is a pretty reasonable thing

1626
01:18:58,980 --> 01:19:00,360
to do

1627
01:19:00,360 --> 01:19:04,260
or even subject subject out name and

1628
01:19:04,260 --> 01:19:07,140
cert policy yes

1629
01:19:07,140 --> 01:19:10,800
okay go ahead yeah probably Global fine

1630
01:19:10,800 --> 01:19:12,179
um I think I think a lot of it's already

1631
01:19:12,179 --> 01:19:13,920
been said but yeah I was just gonna say

1632
01:19:13,920 --> 01:19:15,179
that

1633
01:19:15,179 --> 01:19:17,300
um yeah there's definitely a challenge

1634
01:19:17,300 --> 01:19:20,000
certainly in language if not in

1635
01:19:20,000 --> 01:19:22,199
practicality between making sure that

1636
01:19:22,199 --> 01:19:26,400
what the uh proposed RFC would say is

1637
01:19:26,400 --> 01:19:27,960
being guaranteed versus what the

1638
01:19:27,960 --> 01:19:30,179
certificate policy says

1639
01:19:30,179 --> 01:19:31,860
um particularly you know domain

1640
01:19:31,860 --> 01:19:34,140
validation means that there is really

1641
01:19:34,140 --> 01:19:35,760
not a lot of guarantees on the entity

1642
01:19:35,760 --> 01:19:37,800
that have been verified by the ca who's

1643
01:19:37,800 --> 01:19:39,179
then going to be signing this and saying

1644
01:19:39,179 --> 01:19:41,280
oh well there's a binding here so it's

1645
01:19:41,280 --> 01:19:43,800
the same person when really what's being

1646
01:19:43,800 --> 01:19:46,020
guaranteed is this the same person who

1647
01:19:46,020 --> 01:19:48,060
has control over the domain um but as I

1648
01:19:48,060 --> 01:19:50,840
say I think it's already been said

1649
01:19:52,920 --> 01:19:57,600
okay any other comments

1650
01:19:57,600 --> 01:20:00,900
can I ask you guys to send a summary to

1651
01:20:00,900 --> 01:20:05,000
the list to kick off thanos's response

1652
01:20:05,000 --> 01:20:08,120
thank you

1653
01:20:08,219 --> 01:20:10,580
okay

1654
01:20:11,219 --> 01:20:13,080
all right awesome

1655
01:20:13,080 --> 01:20:15,260
um

1656
01:20:16,260 --> 01:20:19,080
the next uh

1657
01:20:19,080 --> 01:20:22,140
topic is composite keys and signatures

1658
01:20:22,140 --> 01:20:24,000
and I think Max is doing the

1659
01:20:24,000 --> 01:20:26,540
presentation

1660
01:20:28,500 --> 01:20:30,620
thank you

1661
01:20:30,739 --> 01:20:34,080
good morning everybody can you hear me

1662
01:20:34,080 --> 01:20:35,880
yes we could hear you we're getting the

1663
01:20:35,880 --> 01:20:38,760
slides up and then we'll fast control

1664
01:20:38,760 --> 01:20:42,260
thank you yep

1665
01:20:42,360 --> 01:20:46,560
he's very early here in Colorado us so

1666
01:20:46,560 --> 01:20:48,300
good morning everybody and thank you for

1667
01:20:48,300 --> 01:20:50,640
for being here and thank you for the

1668
01:20:50,640 --> 01:20:52,739
opportunity to talk about this

1669
01:20:52,739 --> 01:20:56,100
So today we're going to present on the

1670
01:20:56,100 --> 01:20:58,080
composite crypto some updates on that

1671
01:20:58,080 --> 01:21:00,540
and the uh reports from the akaton

1672
01:21:00,540 --> 01:21:02,100
results

1673
01:21:02,100 --> 01:21:03,920
um

1674
01:21:03,920 --> 01:21:06,540
so yeah perfect

1675
01:21:06,540 --> 01:21:08,520
um so uh just very quickly what's his

1676
01:21:08,520 --> 01:21:10,500
composite composite crypto is just a

1677
01:21:10,500 --> 01:21:12,719
mechanism to combine keys and signatures

1678
01:21:12,719 --> 01:21:15,060
by using the same data structures that

1679
01:21:15,060 --> 01:21:16,560
we already support like the subject

1680
01:21:16,560 --> 01:21:18,420
public key info just the sequence of

1681
01:21:18,420 --> 01:21:21,540
that and so um we worked on the explicit

1682
01:21:21,540 --> 01:21:24,480
combination that that this working group

1683
01:21:24,480 --> 01:21:26,460
act really really stress the importance

1684
01:21:26,460 --> 01:21:28,980
of and to guide The pki Architects in

1685
01:21:28,980 --> 01:21:31,920
their choice for the combination and we

1686
01:21:31,920 --> 01:21:32,880
um actually

1687
01:21:32,880 --> 01:21:35,580
um removed the or Paradigm from the

1688
01:21:35,580 --> 01:21:37,560
current draft so the evaluation policy

1689
01:21:37,560 --> 01:21:40,140
for composite crypto only requires the

1690
01:21:40,140 --> 01:21:42,360
all signatures validate correctly

1691
01:21:42,360 --> 01:21:44,040
hmm

1692
01:21:44,040 --> 01:21:47,040
uh however uh you know sometimes when

1693
01:21:47,040 --> 01:21:49,199
when it comes to composite crypto uh so

1694
01:21:49,199 --> 01:21:51,659
we we um discussed some several use

1695
01:21:51,659 --> 01:21:53,460
cases right for migration across

1696
01:21:53,460 --> 01:21:56,340
different type of algorithms like for uh

1697
01:21:56,340 --> 01:21:58,260
forward-looking type of properties

1698
01:21:58,260 --> 01:21:59,820
whenever you don't have confidence in

1699
01:21:59,820 --> 01:22:02,280
the algorithms or as a migration tool to

1700
01:22:02,280 --> 01:22:04,679
provide backward compatibility uh across

1701
01:22:04,679 --> 01:22:07,560
you know newer devices that my uh might

1702
01:22:07,560 --> 01:22:09,540
try to use the new algorithms and you

1703
01:22:09,540 --> 01:22:11,400
might want to also have their support

1704
01:22:11,400 --> 01:22:13,219
for the other algorithms together

1705
01:22:13,219 --> 01:22:16,440
without renouncing to the overall

1706
01:22:16,440 --> 01:22:19,199
security but these are not the only use

1707
01:22:19,199 --> 01:22:21,420
cases so think about a composite crypto

1708
01:22:21,420 --> 01:22:23,340
as whenever you don't have all the

1709
01:22:23,340 --> 01:22:24,900
properties that you require from an

1710
01:22:24,900 --> 01:22:26,699
algorithm you have the possibility to

1711
01:22:26,699 --> 01:22:28,980
combine with a different one right so I

1712
01:22:28,980 --> 01:22:31,080
want to to make a very um extreme

1713
01:22:31,080 --> 01:22:33,480
example of this use case

1714
01:22:33,480 --> 01:22:34,739
um for example

1715
01:22:34,739 --> 01:22:37,800
um and let's let's try to think about

1716
01:22:37,800 --> 01:22:38,400
um

1717
01:22:38,400 --> 01:22:41,340
uh so let's start from from the

1718
01:22:41,340 --> 01:22:42,719
consideration that you know although

1719
01:22:42,719 --> 01:22:44,820
x509 you know provides all the needed

1720
01:22:44,820 --> 01:22:46,080
data structures you know for crypto

1721
01:22:46,080 --> 01:22:48,600
agility and we know we know that things

1722
01:22:48,600 --> 01:22:50,159
are more complex when it comes to real

1723
01:22:50,159 --> 01:22:51,659
deployments right there's many

1724
01:22:51,659 --> 01:22:53,219
characteristics of the algorithms the

1725
01:22:53,219 --> 01:22:55,140
memory that is used the type of

1726
01:22:55,140 --> 01:22:58,980
operation the um the sizes that really

1727
01:22:58,980 --> 01:23:01,800
really is is killing us right now uh for

1728
01:23:01,800 --> 01:23:03,540
Access Network databases so many many

1729
01:23:03,540 --> 01:23:05,820
different type of uses and in our

1730
01:23:05,820 --> 01:23:09,300
specific case where we have a very large

1731
01:23:09,300 --> 01:23:12,960
uh deployment of devices cryptography is

1732
01:23:12,960 --> 01:23:14,940
becoming a critical component right in

1733
01:23:14,940 --> 01:23:17,760
the device life cycle especially in the

1734
01:23:17,760 --> 01:23:20,100
consideration that uh this type of

1735
01:23:20,100 --> 01:23:22,199
problem we might you know we were very

1736
01:23:22,199 --> 01:23:25,080
very lucky with RSA being so long-lived

1737
01:23:25,080 --> 01:23:27,360
it probably will not be that lacking

1738
01:23:27,360 --> 01:23:30,360
with the new set of algorithms so we

1739
01:23:30,360 --> 01:23:32,699
really want to be able to build in

1740
01:23:32,699 --> 01:23:34,980
processes that allows us to repeat this

1741
01:23:34,980 --> 01:23:37,500
process in a cost-effective manner so

1742
01:23:37,500 --> 01:23:39,179
there are many considering patients that

1743
01:23:39,179 --> 01:23:42,960
we need we need to uh to do so do we

1744
01:23:42,960 --> 01:23:44,520
have enough memories in our really

1745
01:23:44,520 --> 01:23:47,460
deployed devices uh will our protocol

1746
01:23:47,460 --> 01:23:49,440
supports is not just on paper but on

1747
01:23:49,440 --> 01:23:52,199
Real uh unreal deployments

1748
01:23:52,199 --> 01:23:54,540
um so um addressing this so this is just

1749
01:23:54,540 --> 01:23:57,659
another example let's imagine now uh

1750
01:23:57,659 --> 01:24:00,300
that we can really measure and plan even

1751
01:24:00,300 --> 01:24:03,300
before we have this this algorithms I am

1752
01:24:03,300 --> 01:24:05,460
available so let's imagine that we are

1753
01:24:05,460 --> 01:24:06,840
actually in the process of doing this

1754
01:24:06,840 --> 01:24:09,960
Pro this and and to and and to

1755
01:24:09,960 --> 01:24:11,340
transition to the Next Generation

1756
01:24:11,340 --> 01:24:13,620
algorithms that we want in our access

1757
01:24:13,620 --> 01:24:15,659
networks for example uh like in the

1758
01:24:15,659 --> 01:24:17,699
DOCSIS one which is the Broadband one or

1759
01:24:17,699 --> 01:24:20,280
ocf or matter uh that are new

1760
01:24:20,280 --> 01:24:21,900
environments that are coming coming

1761
01:24:21,900 --> 01:24:24,600
along so we need to understand how are

1762
01:24:24,600 --> 01:24:27,360
our networks can really support these

1763
01:24:27,360 --> 01:24:29,760
new algorithms uh which ones can have

1764
01:24:29,760 --> 01:24:31,620
better performances giving you know the

1765
01:24:31,620 --> 01:24:33,540
real deployments that we have and what

1766
01:24:33,540 --> 01:24:35,340
about how can we plan for device

1767
01:24:35,340 --> 01:24:37,980
replacement according to our life cycle

1768
01:24:37,980 --> 01:24:40,380
for example could be 7 or 10 years type

1769
01:24:40,380 --> 01:24:43,920
of Replacements let's now imagine that

1770
01:24:43,920 --> 01:24:46,860
we can define an algorithm X right that

1771
01:24:46,860 --> 01:24:49,140
we could instead of using you know

1772
01:24:49,140 --> 01:24:51,840
security for um for you know via

1773
01:24:51,840 --> 01:24:53,219
signatures and encryption instead of

1774
01:24:53,219 --> 01:24:56,100
providing this type of properties it

1775
01:24:56,100 --> 01:24:58,020
actually provides uh it tries to

1776
01:24:58,020 --> 01:24:59,699
simulate different type of algorithm

1777
01:24:59,699 --> 01:25:01,560
characteristics like the memory or the

1778
01:25:01,560 --> 01:25:04,440
CPU usage and requirements and collects

1779
01:25:04,440 --> 01:25:06,060
measurements maybe in the form of

1780
01:25:06,060 --> 01:25:09,600
signatures uh so let's also imagine that

1781
01:25:09,600 --> 01:25:11,760
we don't have to provide the security

1782
01:25:11,760 --> 01:25:14,580
together with all these properties so we

1783
01:25:14,580 --> 01:25:16,560
can focus on you know let's define an

1784
01:25:16,560 --> 01:25:18,360
algorithm that has the property that we

1785
01:25:18,360 --> 01:25:19,679
really like

1786
01:25:19,679 --> 01:25:20,340
um

1787
01:25:20,340 --> 01:25:22,920
so in this point of view now

1788
01:25:22,920 --> 01:25:24,800
um and this is what I call the the

1789
01:25:24,800 --> 01:25:27,840
algorithm X Paradigm where we have when

1790
01:25:27,840 --> 01:25:30,000
we can imagine about using this

1791
01:25:30,000 --> 01:25:31,380
composite key

1792
01:25:31,380 --> 01:25:33,420
um that we combine with the real crypto

1793
01:25:33,420 --> 01:25:35,580
algorithm so that we keep the security

1794
01:25:35,580 --> 01:25:38,100
from the real crypto algorithm and we

1795
01:25:38,100 --> 01:25:39,840
get all the other properties from the

1796
01:25:39,840 --> 01:25:42,719
second key that we deploy and and we can

1797
01:25:42,719 --> 01:25:44,880
do this by simply updating the

1798
01:25:44,880 --> 01:25:47,580
credentials in our devices so this

1799
01:25:47,580 --> 01:25:49,500
algorithm X can really simulate

1800
01:25:49,500 --> 01:25:51,360
different characteristics as I said and

1801
01:25:51,360 --> 01:25:54,960
it can become a really important tool

1802
01:25:54,960 --> 01:25:58,199
for testing and planning for replacement

1803
01:25:58,199 --> 01:26:00,360
for hardware and this is something that

1804
01:26:00,360 --> 01:26:02,760
can be very very expensive in some some

1805
01:26:02,760 --> 01:26:04,260
environments

1806
01:26:04,260 --> 01:26:05,639
now

1807
01:26:05,639 --> 01:26:07,560
um so I hope that I I provide you with

1808
01:26:07,560 --> 01:26:09,840
another another

1809
01:26:09,840 --> 01:26:12,780
um another use of this composite crypto

1810
01:26:12,780 --> 01:26:14,880
that um really

1811
01:26:14,880 --> 01:26:17,040
um gives you an idea of other possible

1812
01:26:17,040 --> 01:26:18,719
use in the future of this type of

1813
01:26:18,719 --> 01:26:20,760
Technology uh that is not just related

1814
01:26:20,760 --> 01:26:22,440
to post Quantum but post Quantum is

1815
01:26:22,440 --> 01:26:25,800
really an interesting use case for us so

1816
01:26:25,800 --> 01:26:28,199
um coming to the document updates

1817
01:26:28,199 --> 01:26:30,840
um so there's major major changes in the

1818
01:26:30,840 --> 01:26:33,420
the draft for the keys especially uh you

1819
01:26:33,420 --> 01:26:35,760
know following the the work group

1820
01:26:35,760 --> 01:26:39,300
um discussion uh we added the explicit

1821
01:26:39,300 --> 01:26:41,820
composite key a signature keys there are

1822
01:26:41,820 --> 01:26:44,000
seven new uh composite signature

1823
01:26:44,000 --> 01:26:46,860
combinations and together with three

1824
01:26:46,860 --> 01:26:48,900
different composite Camp combinations

1825
01:26:48,900 --> 01:26:51,420
and other the examples for most of them

1826
01:26:51,420 --> 01:26:54,780
uh as in the appendixes

1827
01:26:54,780 --> 01:26:56,520
um one of the important important notes

1828
01:26:56,520 --> 01:26:59,460
is this discussion about uh should we

1829
01:26:59,460 --> 01:27:03,300
keep this genetic use genetic mode

1830
01:27:03,300 --> 01:27:05,820
um or you know all we need is really the

1831
01:27:05,820 --> 01:27:07,800
combination of the algorithms I hope

1832
01:27:07,800 --> 01:27:09,900
that the the example that I provided

1833
01:27:09,900 --> 01:27:12,480
today really opens up the discussion of

1834
01:27:12,480 --> 01:27:15,780
maybe there are there are really more

1835
01:27:15,780 --> 01:27:18,179
use cases for example the explicit one

1836
01:27:18,179 --> 01:27:20,040
would be when you want to use an

1837
01:27:20,040 --> 01:27:22,080
algorithm that is not standard so you

1838
01:27:22,080 --> 01:27:23,880
have you know your own deployments your

1839
01:27:23,880 --> 01:27:25,739
own data centers algorithms they're not

1840
01:27:25,739 --> 01:27:27,420
standardized but you can still combine

1841
01:27:27,420 --> 01:27:29,639
them with standardized algorithm to

1842
01:27:29,639 --> 01:27:33,060
maybe get some sort of certification

1843
01:27:33,060 --> 01:27:34,440
um and

1844
01:27:34,440 --> 01:27:35,639
um you know we try to synchronize the

1845
01:27:35,639 --> 01:27:37,920
terminology uh with the with the draft

1846
01:27:37,920 --> 01:27:42,120
for Drisco pqt a hybrid terminology and

1847
01:27:42,120 --> 01:27:43,320
um we really appreciate the good

1848
01:27:43,320 --> 01:27:45,300
discussion that's been on the on the

1849
01:27:45,300 --> 01:27:47,340
mini list for uh for all these

1850
01:27:47,340 --> 01:27:48,780
combinations so thank you so much it's

1851
01:27:48,780 --> 01:27:51,120
been really really great

1852
01:27:51,120 --> 01:27:52,800
um and uh

1853
01:27:52,800 --> 01:27:55,800
so the other update that we want to

1854
01:27:55,800 --> 01:27:58,139
bring in we were not really ready for

1855
01:27:58,139 --> 01:28:00,600
that but um one of the things that we

1856
01:28:00,600 --> 01:28:03,420
discussed last time was to remove the uh

1857
01:28:03,420 --> 01:28:04,320
or

1858
01:28:04,320 --> 01:28:06,000
um authentication mode because it was

1859
01:28:06,000 --> 01:28:07,440
felt like it was probably more

1860
01:28:07,440 --> 01:28:09,360
problematic so what we did we actually

1861
01:28:09,360 --> 01:28:11,639
removed it from the current draft and

1862
01:28:11,639 --> 01:28:13,260
we're working on a different a different

1863
01:28:13,260 --> 01:28:15,179
document that we're going to submit as

1864
01:28:15,179 --> 01:28:17,880
soon as possible that basically uses the

1865
01:28:17,880 --> 01:28:20,880
same type of approach and but defines a

1866
01:28:20,880 --> 01:28:23,280
new set of IDs for the keys reuses the

1867
01:28:23,280 --> 01:28:25,560
same IDs for the for the signatures but

1868
01:28:25,560 --> 01:28:29,280
introduces a public key parameter in the

1869
01:28:29,280 --> 01:28:31,020
in the composite signature that

1870
01:28:31,020 --> 01:28:32,520
basically is just an integer that says

1871
01:28:32,520 --> 01:28:35,580
you need at least a um K uh successful

1872
01:28:35,580 --> 01:28:37,440
validation when you do the validation

1873
01:28:37,440 --> 01:28:39,480
this allows you for for example to

1874
01:28:39,480 --> 01:28:41,480
achieve the perfect or

1875
01:28:41,480 --> 01:28:44,280
authentication mode uh if you use k

1876
01:28:44,280 --> 01:28:46,920
equals one k equals n is the same

1877
01:28:46,920 --> 01:28:49,139
behavior as the um

1878
01:28:49,139 --> 01:28:51,540
as a according composite

1879
01:28:51,540 --> 01:28:53,219
um and you can use you know intermediate

1880
01:28:53,219 --> 01:28:55,139
cases when you have the two out of three

1881
01:28:55,139 --> 01:28:57,300
this is the other use cases that we are

1882
01:28:57,300 --> 01:28:59,639
pursuing uh so the initial available is

1883
01:28:59,639 --> 01:29:02,040
available on GitHub uh and we are going

1884
01:29:02,040 --> 01:29:03,840
to upload it and does the tracker as

1885
01:29:03,840 --> 01:29:06,060
soon as possible uh so the other

1886
01:29:06,060 --> 01:29:08,580
announcement here it was uh at us on

1887
01:29:08,580 --> 01:29:11,219
October 26th that uh you know there's

1888
01:29:11,219 --> 01:29:13,260
there were some patents on another

1889
01:29:13,260 --> 01:29:15,780
option uh related to hybrid certificate

1890
01:29:15,780 --> 01:29:17,580
and the other option was to use

1891
01:29:17,580 --> 01:29:20,580
additional Keys as encoded in extensions

1892
01:29:20,580 --> 01:29:23,820
in the certificates uh now um this the

1893
01:29:23,820 --> 01:29:25,860
patterns that that encumber that type of

1894
01:29:25,860 --> 01:29:28,560
solution uh they've been donated and I'm

1895
01:29:28,560 --> 01:29:30,600
not a lawyer so I'm not endorsing

1896
01:29:30,600 --> 01:29:32,340
anything I'm just saying this was the

1897
01:29:32,340 --> 01:29:34,440
announcement please verify for yourself

1898
01:29:34,440 --> 01:29:37,739
and however uh there is a draft like the

1899
01:29:37,739 --> 01:29:42,540
draft trotskowski Labs PQ hybrid x509

1900
01:29:42,540 --> 01:29:45,360
um and uh maybe maybe this could be an

1901
01:29:45,360 --> 01:29:48,239
occasion to revive also that work that

1902
01:29:48,239 --> 01:29:49,980
could provide a different type of

1903
01:29:49,980 --> 01:29:53,400
backward compatibility that is not based

1904
01:29:53,400 --> 01:29:56,400
on the on the on the key but on an

1905
01:29:56,400 --> 01:29:58,620
extension there are some some benefits

1906
01:29:58,620 --> 01:30:00,960
coming from that as I said before and

1907
01:30:00,960 --> 01:30:03,300
actually also brought in in the in the

1908
01:30:03,300 --> 01:30:05,699
chat my personal point of view is that

1909
01:30:05,699 --> 01:30:08,880
we really need as many tools as possible

1910
01:30:08,880 --> 01:30:11,699
um to uh to be able to address in

1911
01:30:11,699 --> 01:30:15,000
different ways uh our our deployments

1912
01:30:15,000 --> 01:30:18,960
now uh okay so John uh I don't know if

1913
01:30:18,960 --> 01:30:20,940
uh you're you're there so do you want to

1914
01:30:20,940 --> 01:30:23,460
to take over for this the the slides for

1915
01:30:23,460 --> 01:30:26,060
the hackathon

1916
01:30:28,620 --> 01:30:32,340
yeah so yeah so this is John again so

1917
01:30:32,340 --> 01:30:34,080
yeah we had the hackathon I know we've

1918
01:30:34,080 --> 01:30:35,639
heard about that before so you can go to

1919
01:30:35,639 --> 01:30:37,020
the next slide

1920
01:30:37,020 --> 01:30:38,699
um so yeah we had a lot of participants

1921
01:30:38,699 --> 01:30:40,860
it was a great uh time I think a lot of

1922
01:30:40,860 --> 01:30:42,840
people had a lot of fun go to the next

1923
01:30:42,840 --> 01:30:45,139
slide

1924
01:30:45,480 --> 01:30:47,880
yeah so our main goals were to start

1925
01:30:47,880 --> 01:30:50,340
making use of these new PQ algorithms

1926
01:30:50,340 --> 01:30:53,159
also by themselves but also in

1927
01:30:53,159 --> 01:30:55,679
combinations with the Composites

1928
01:30:55,679 --> 01:30:57,420
um as Jake mentioned before in the

1929
01:30:57,420 --> 01:30:59,699
previous presentation we worked on some

1930
01:30:59,699 --> 01:31:02,040
of the asm1 encoding issues

1931
01:31:02,040 --> 01:31:03,960
um and obviously he's he's taken that

1932
01:31:03,960 --> 01:31:05,460
and he's he put that on the slides

1933
01:31:05,460 --> 01:31:06,719
they've taken that into consideration

1934
01:31:06,719 --> 01:31:08,880
the draft so that was one of the goals

1935
01:31:08,880 --> 01:31:11,639
as well to give feedback that way also

1936
01:31:11,639 --> 01:31:13,260
to obtain experiences in these new

1937
01:31:13,260 --> 01:31:15,480
algorithms and also providing an

1938
01:31:15,480 --> 01:31:17,699
artifact repository for interoperability

1939
01:31:17,699 --> 01:31:18,840
testing for many different

1940
01:31:18,840 --> 01:31:21,000
implementations so you can go to the

1941
01:31:21,000 --> 01:31:23,400
next slide yeah so we have a GitHub

1942
01:31:23,400 --> 01:31:26,100
hackathon repository we kind of Define

1943
01:31:26,100 --> 01:31:28,020
this artifact format you can see there

1944
01:31:28,020 --> 01:31:30,239
it's just simple object IDs because we

1945
01:31:30,239 --> 01:31:32,219
they don't have the official object IDs

1946
01:31:32,219 --> 01:31:34,679
yet for these new algorithms so we're

1947
01:31:34,679 --> 01:31:36,719
obviously there's different sets of them

1948
01:31:36,719 --> 01:31:38,880
being used by different vendors or

1949
01:31:38,880 --> 01:31:41,400
different people because of need and we

1950
01:31:41,400 --> 01:31:42,840
have just this is just an example that

1951
01:31:42,840 --> 01:31:44,760
we have a different uh file format for

1952
01:31:44,760 --> 01:31:48,000
different types like ca crls ocsp we're

1953
01:31:48,000 --> 01:31:49,800
going to add CMP and others and hope to

1954
01:31:49,800 --> 01:31:51,719
expand that in the future

1955
01:31:51,719 --> 01:31:53,400
um we had Severus at least at the moment

1956
01:31:53,400 --> 01:31:55,380
we have I think at least seven different

1957
01:31:55,380 --> 01:31:57,600
um yeah implementations or providers

1958
01:31:57,600 --> 01:31:59,940
yeah I think I think that there might be

1959
01:31:59,940 --> 01:32:01,199
nine now

1960
01:32:01,199 --> 01:32:03,000
yeah they're okay there's even nine in

1961
01:32:03,000 --> 01:32:04,380
the last few days there's been even more

1962
01:32:04,380 --> 01:32:07,139
that have come online so that's great

1963
01:32:07,139 --> 01:32:08,820
um so yeah so we have the the GitHub

1964
01:32:08,820 --> 01:32:11,280
repository you can check that out and we

1965
01:32:11,280 --> 01:32:14,040
Define that zip structure this yeah the

1966
01:32:14,040 --> 01:32:17,100
other thing is we have a lot of um open

1967
01:32:17,100 --> 01:32:18,840
source and internal vendor

1968
01:32:18,840 --> 01:32:20,880
implementation so we had the the open

1969
01:32:20,880 --> 01:32:23,820
SSL um developer on there as well bouncy

1970
01:32:23,820 --> 01:32:25,860
castle David Hook was there um so it's

1971
01:32:25,860 --> 01:32:27,900
great to have that range of Industry as

1972
01:32:27,900 --> 01:32:28,920
well

1973
01:32:28,920 --> 01:32:31,860
um as well as open source and uh yeah

1974
01:32:31,860 --> 01:32:33,780
the vendor implementations

1975
01:32:33,780 --> 01:32:35,520
and yeah this was already mentioned by

1976
01:32:35,520 --> 01:32:36,900
Jake actually looks like he used the

1977
01:32:36,900 --> 01:32:38,280
same slide

1978
01:32:38,280 --> 01:32:40,260
um the octet string thing did come up so

1979
01:32:40,260 --> 01:32:42,659
I won't mention that um basically I

1980
01:32:42,659 --> 01:32:44,639
think the the conclusion is that is we

1981
01:32:44,639 --> 01:32:45,659
don't want to have to have extra

1982
01:32:45,659 --> 01:32:48,120
encodings of you know octet strings or

1983
01:32:48,120 --> 01:32:51,120
that zero zero zero zero four extra bit

1984
01:32:51,120 --> 01:32:52,620
if we don't need them there's no point

1985
01:32:52,620 --> 01:32:55,199
object IDs need to be flexible at this

1986
01:32:55,199 --> 01:32:57,120
point we all know that um we're waiting

1987
01:32:57,120 --> 01:32:58,920
hopefully this soon will give us the

1988
01:32:58,920 --> 01:33:00,480
final oids

1989
01:33:00,480 --> 01:33:02,159
um one thing we did suggest until we

1990
01:33:02,159 --> 01:33:04,620
actually have those things we could have

1991
01:33:04,620 --> 01:33:07,139
an arc number aversion because that's

1992
01:33:07,139 --> 01:33:08,520
the other thing there are tweaks being

1993
01:33:08,520 --> 01:33:11,040
made to these algorithms at this time so

1994
01:33:11,040 --> 01:33:12,540
um to make sure that we can interrupt

1995
01:33:12,540 --> 01:33:13,980
and do our testing we want to make sure

1996
01:33:13,980 --> 01:33:16,100
we're actually using the same

1997
01:33:16,100 --> 01:33:18,659
implementation so that's one way that

1998
01:33:18,659 --> 01:33:20,820
can be done at using oids

1999
01:33:20,820 --> 01:33:22,800
um and yeah most issues that we found

2000
01:33:22,800 --> 01:33:25,380
were not related to the PQ algorithms it

2001
01:33:25,380 --> 01:33:27,960
was just good old x509 stuff one one

2002
01:33:27,960 --> 01:33:29,699
thing that isn't there

2003
01:33:29,699 --> 01:33:32,520
um is there was a bit with Falcon there

2004
01:33:32,520 --> 01:33:34,260
might be some things to look at because

2005
01:33:34,260 --> 01:33:35,940
there was a couple little things that

2006
01:33:35,940 --> 01:33:38,280
that came up with that that might need a

2007
01:33:38,280 --> 01:33:40,800
little bit more looking at but that's

2008
01:33:40,800 --> 01:33:42,540
also so far things have gone really well

2009
01:33:42,540 --> 01:33:44,580
and I know that was the end of this

2010
01:33:44,580 --> 01:33:45,360
slide

2011
01:33:45,360 --> 01:33:47,820
I think that was pretty much it yeah so

2012
01:33:47,820 --> 01:33:50,400
max I can turn it over to you

2013
01:33:50,400 --> 01:33:52,980
oh okay thank you thank you John uh I

2014
01:33:52,980 --> 01:33:54,900
really thank you for you know being that

2015
01:33:54,900 --> 01:33:57,179
champion really the akaton would not

2016
01:33:57,179 --> 01:33:59,040
have happened without Jon so thank you

2017
01:33:59,040 --> 01:34:02,219
so much uh so uh just to conclude our

2018
01:34:02,219 --> 01:34:05,280
our little uh little talk and so we

2019
01:34:05,280 --> 01:34:06,960
think that actually we reach some some

2020
01:34:06,960 --> 01:34:09,420
level of maturity that the work group um

2021
01:34:09,420 --> 01:34:11,100
is really we would like the work group

2022
01:34:11,100 --> 01:34:13,440
to take on this this work especially for

2023
01:34:13,440 --> 01:34:15,659
the keys and the signatures uh to be

2024
01:34:15,659 --> 01:34:17,699
adopted by the the work group

2025
01:34:17,699 --> 01:34:19,800
um we're not ready for the koban so

2026
01:34:19,800 --> 01:34:22,199
that's the reason why we we extracted

2027
01:34:22,199 --> 01:34:24,060
that so we continue to work on separate

2028
01:34:24,060 --> 01:34:26,280
separate on the koban and we hope that

2029
01:34:26,280 --> 01:34:29,820
this will help the um speeding up of the

2030
01:34:29,820 --> 01:34:32,340
you know the work group work on this

2031
01:34:32,340 --> 01:34:34,980
front and last thing that I would like

2032
01:34:34,980 --> 01:34:37,139
to ask and this is a question for the

2033
01:34:37,139 --> 01:34:38,580
chairs but really for the whole

2034
01:34:38,580 --> 01:34:41,280
Community is that you know as as we are

2035
01:34:41,280 --> 01:34:43,139
progressing this work which is not just

2036
01:34:43,139 --> 01:34:45,420
for the composite but also with pqc

2037
01:34:45,420 --> 01:34:47,100
certificate so it's just like a double

2038
01:34:47,100 --> 01:34:48,780
whammy right for us you know trying to

2039
01:34:48,780 --> 01:34:51,480
prove the technology also with the post

2040
01:34:51,480 --> 01:34:53,580
Quantum and so one of the things that we

2041
01:34:53,580 --> 01:34:56,040
are noticing is that we are starting to

2042
01:34:56,040 --> 01:34:57,960
um to see messages related to you know

2043
01:34:57,960 --> 01:35:00,120
implementations Etc and the question is

2044
01:35:00,120 --> 01:35:02,159
is that appropriate we would like to

2045
01:35:02,159 --> 01:35:04,080
share with the whole Community uh so on

2046
01:35:04,080 --> 01:35:05,100
the lamps

2047
01:35:05,100 --> 01:35:06,659
um uh work group you know mailing list

2048
01:35:06,659 --> 01:35:10,320
uh you know but we also aware that you

2049
01:35:10,320 --> 01:35:11,940
know we don't want to clutter with

2050
01:35:11,940 --> 01:35:14,400
implementation uh oriented um type of

2051
01:35:14,400 --> 01:35:15,780
consideration so

2052
01:35:15,780 --> 01:35:17,940
um the question the question for for the

2053
01:35:17,940 --> 01:35:19,920
chairs is you know do you think that

2054
01:35:19,920 --> 01:35:22,020
it's better for us to continue the

2055
01:35:22,020 --> 01:35:24,420
conversation like we are doing today in

2056
01:35:24,420 --> 01:35:26,219
lamps there might be some more

2057
01:35:26,219 --> 01:35:28,080
conversation related to implementations

2058
01:35:28,080 --> 01:35:31,860
or should we set up another mini list

2059
01:35:31,860 --> 01:35:34,080
still the public mailing list but

2060
01:35:34,080 --> 01:35:36,719
separate from lamps so that

2061
01:35:36,719 --> 01:35:39,719
you know the discussion can progress in

2062
01:35:39,719 --> 01:35:40,679
parallel

2063
01:35:40,679 --> 01:35:41,760
um so these are the two the two

2064
01:35:41,760 --> 01:35:43,440
questions for the for the group and for

2065
01:35:43,440 --> 01:35:45,980
the chairs today

2066
01:35:46,860 --> 01:35:50,400
so does anyone have any comments for uh

2067
01:35:50,400 --> 01:35:54,960
Max and then we'll respond to the uh his

2068
01:35:54,960 --> 01:35:58,560
his desire for uh

2069
01:35:58,560 --> 01:35:59,340
um

2070
01:35:59,340 --> 01:36:02,280
working group chair thoughts

2071
01:36:02,280 --> 01:36:05,239
go ahead Sean

2072
01:36:06,780 --> 01:36:08,880
hi Sean Turner I'm going to Echo a

2073
01:36:08,880 --> 01:36:11,699
little bit of what dkg said in the

2074
01:36:11,699 --> 01:36:13,380
um zulip room whatever we're calling it

2075
01:36:13,380 --> 01:36:15,480
now I'm not so sure that letting a

2076
01:36:15,480 --> 01:36:17,400
thousand flowers bloom on a lot of these

2077
01:36:17,400 --> 01:36:19,500
things is really a good idea

2078
01:36:19,500 --> 01:36:21,420
um I think it's kind of a

2079
01:36:21,420 --> 01:36:23,159
you know maybe it's just a philosophy

2080
01:36:23,159 --> 01:36:24,719
thing and you know maybe I'm on my

2081
01:36:24,719 --> 01:36:26,340
little little bike shed but I just don't

2082
01:36:26,340 --> 01:36:28,679
know if there's there's really like if

2083
01:36:28,679 --> 01:36:30,900
there's four ways to do a certificate if

2084
01:36:30,900 --> 01:36:33,000
like what are the public Cas think what

2085
01:36:33,000 --> 01:36:34,739
are they really going to do are there

2086
01:36:34,739 --> 01:36:36,060
actually protocols that are going to

2087
01:36:36,060 --> 01:36:37,739
support this like is TLS going to do

2088
01:36:37,739 --> 01:36:39,120
this there's a whole bunch of other

2089
01:36:39,120 --> 01:36:40,560
questions that we'd like to figure out

2090
01:36:40,560 --> 01:36:42,960
if before we just put out a bunch of

2091
01:36:42,960 --> 01:36:44,820
stuff because sometimes when the working

2092
01:36:44,820 --> 01:36:46,560
group starts to do things it gets

2093
01:36:46,560 --> 01:36:47,940
adopted and there's just part of

2094
01:36:47,940 --> 01:36:49,560
confusion and the only thing we're going

2095
01:36:49,560 --> 01:36:53,060
to do is slow deployment

2096
01:37:00,500 --> 01:37:03,719
I have the had the same knee drag

2097
01:37:03,719 --> 01:37:06,540
reaction as I found not

2098
01:37:06,540 --> 01:37:07,500
um

2099
01:37:07,500 --> 01:37:11,639
but x519 it's not only used for uh for

2100
01:37:11,639 --> 01:37:16,139
the webpi for the web APK I think uh

2101
01:37:16,139 --> 01:37:18,900
having this complicated Composites is

2102
01:37:18,900 --> 01:37:22,340
not great and I think actually I expect

2103
01:37:22,340 --> 01:37:24,659
we might not even see signature

2104
01:37:24,659 --> 01:37:27,840
Composites or hybrids at all just for

2105
01:37:27,840 --> 01:37:29,420
key agreements

2106
01:37:29,420 --> 01:37:32,340
but the replica is not the only thing we

2107
01:37:32,340 --> 01:37:34,820
use xl9 for so if they are convincing

2108
01:37:34,820 --> 01:37:38,820
applications where this is useful uh

2109
01:37:38,820 --> 01:37:42,000
then I wouldn't be against but

2110
01:37:42,000 --> 01:37:43,560
that's not my expertise of other

2111
01:37:43,560 --> 01:37:46,100
applications

2112
01:37:52,080 --> 01:37:55,920
so hello this is Martin so yes indeed

2113
01:37:55,920 --> 01:37:58,560
there are many many options here and

2114
01:37:58,560 --> 01:38:01,560
this being iitf where I witness at the

2115
01:38:01,560 --> 01:38:03,739
hackathon was good running code

2116
01:38:03,739 --> 01:38:06,000
interoperability between

2117
01:38:06,000 --> 01:38:08,639
about half a dozen implementations and

2118
01:38:08,639 --> 01:38:10,860
such many people being able to

2119
01:38:10,860 --> 01:38:12,420
understand the specification for

2120
01:38:12,420 --> 01:38:15,360
composite signatures as they exist at

2121
01:38:15,360 --> 01:38:16,320
the moment

2122
01:38:16,320 --> 01:38:19,800
so I I believe that that certainly

2123
01:38:19,800 --> 01:38:22,560
should go forward so it's uh of course

2124
01:38:22,560 --> 01:38:25,199
not a mandatory thing for people's

2125
01:38:25,199 --> 01:38:27,120
support but it is a technology that

2126
01:38:27,120 --> 01:38:30,000
exists and has been talked over in these

2127
01:38:30,000 --> 01:38:33,840
meetings for four years now and so in

2128
01:38:33,840 --> 01:38:36,239
relation to specific proposals like

2129
01:38:36,239 --> 01:38:39,480
going back to the izara thing no I

2130
01:38:39,480 --> 01:38:40,860
wouldn't I wouldn't like that but

2131
01:38:40,860 --> 01:38:42,420
personally you know it's a it's a

2132
01:38:42,420 --> 01:38:45,480
Minefield still to be honest uh and and

2133
01:38:45,480 --> 01:38:47,820
then these like a little bit more exotic

2134
01:38:47,820 --> 01:38:49,920
proposals here yes they can in my mind

2135
01:38:49,920 --> 01:38:51,900
they can exist as traps but perhaps

2136
01:38:51,900 --> 01:38:54,120
let's keep them out of the composite

2137
01:38:54,120 --> 01:38:58,099
compensate the RFC of the future

2138
01:38:59,400 --> 01:39:02,839
any other reactions

2139
01:39:03,480 --> 01:39:06,080
okay

2140
01:39:07,440 --> 01:39:09,239
yes please

2141
01:39:09,239 --> 01:39:13,679
yes uh well just uh one comment uh so

2142
01:39:13,679 --> 01:39:16,739
first uh many thanks for the work you

2143
01:39:16,739 --> 01:39:18,780
you made during the academy it's very

2144
01:39:18,780 --> 01:39:22,739
interesting and uh one of the topic you

2145
01:39:22,739 --> 01:39:25,800
mentioned is the possibility to reuse

2146
01:39:25,800 --> 01:39:29,040
the treskowsky draft RAC

2147
01:39:29,040 --> 01:39:31,679
uh I would say that it's maybe a very

2148
01:39:31,679 --> 01:39:34,880
good option for backward compatibility

2149
01:39:34,880 --> 01:39:40,320
and maybe it's worth uh uh yes putting

2150
01:39:40,320 --> 01:39:43,020
it on the table uh during the discussion

2151
01:39:43,020 --> 01:39:44,520
because I think it's an interesting

2152
01:39:44,520 --> 01:39:46,820
option

2153
01:39:53,580 --> 01:39:57,320
uh Julian

2154
01:39:58,260 --> 01:40:02,219
okay you're done okay uh Carl

2155
01:40:02,219 --> 01:40:04,920
on the question about the generic

2156
01:40:04,920 --> 01:40:07,080
composite that's mostly what we focused

2157
01:40:07,080 --> 01:40:08,940
on during the hackathon

2158
01:40:08,940 --> 01:40:12,000
I think that should be discussed perhaps

2159
01:40:12,000 --> 01:40:14,460
reverting back to that mechanism instead

2160
01:40:14,460 --> 01:40:16,320
of the explicit composite

2161
01:40:16,320 --> 01:40:17,880
you still don't need to let a thousand

2162
01:40:17,880 --> 01:40:20,340
flowers bloom you could Define a certain

2163
01:40:20,340 --> 01:40:23,100
set of algorithms that are supported via

2164
01:40:23,100 --> 01:40:24,360
this mechanism

2165
01:40:24,360 --> 01:40:26,520
but that mechanism is a little more

2166
01:40:26,520 --> 01:40:29,699
natural to implement support for and we

2167
01:40:29,699 --> 01:40:31,580
knock out several

2168
01:40:31,580 --> 01:40:33,960
implementations just in the last few

2169
01:40:33,960 --> 01:40:36,360
days that were interoperable so

2170
01:40:36,360 --> 01:40:38,460
I think that's a good argument for the

2171
01:40:38,460 --> 01:40:41,300
generic composite

2172
01:40:43,520 --> 01:40:47,699
yeah so one more thing so so this is a

2173
01:40:47,699 --> 01:40:49,739
separate issue this is about the debate

2174
01:40:49,739 --> 01:40:51,840
the composite composite works but

2175
01:40:51,840 --> 01:40:54,120
regarding the

2176
01:40:54,120 --> 01:40:56,940
the sort of extension non-critical

2177
01:40:56,940 --> 01:40:59,060
extension which is potentially

2178
01:40:59,060 --> 01:41:02,280
proprietary still I would suggest that

2179
01:41:02,280 --> 01:41:03,960
that might be something that is an

2180
01:41:03,960 --> 01:41:06,060
informative RFC

2181
01:41:06,060 --> 01:41:08,580
that that can exist so the so the those

2182
01:41:08,580 --> 01:41:10,139
people who want to support this

2183
01:41:10,139 --> 01:41:12,179
non-critical extension can can put

2184
01:41:12,179 --> 01:41:14,840
together an

2185
01:41:15,020 --> 01:41:18,239
important RFC and that would kind of

2186
01:41:18,239 --> 01:41:20,219
people could use it if they want I mean

2187
01:41:20,219 --> 01:41:23,699
it's optional anyway so that that's it

2188
01:41:23,699 --> 01:41:27,420
so if somebody put a non-critical

2189
01:41:27,420 --> 01:41:29,580
extension you're talking this K of n

2190
01:41:29,580 --> 01:41:33,000
right so I'm I'm referring to the

2191
01:41:33,000 --> 01:41:36,360
um isara proposal which was the patent

2192
01:41:36,360 --> 01:41:39,060
released so that mechanism works as a

2193
01:41:39,060 --> 01:41:40,159
non-critical

2194
01:41:40,159 --> 01:41:42,659
extension in in a certificate which

2195
01:41:42,659 --> 01:41:44,580
contains the post Quantum thing so this

2196
01:41:44,580 --> 01:41:46,260
was patented technology

2197
01:41:46,260 --> 01:41:49,020
so they they released uh

2198
01:41:49,020 --> 01:41:51,719
four translations of a patent that deals

2199
01:41:51,719 --> 01:41:53,639
with that specifically so that that

2200
01:41:53,639 --> 01:41:56,100
previously uh is our refused to release

2201
01:41:56,100 --> 01:41:58,380
that that IP and that that's why it's

2202
01:41:58,380 --> 01:41:59,699
not there but that's actually

2203
01:41:59,699 --> 01:42:01,920
technologically different from it's like

2204
01:42:01,920 --> 01:42:03,920
from the from the composite Bieber

2205
01:42:03,920 --> 01:42:07,320
interrupt testing already yeah I Now

2206
01:42:07,320 --> 01:42:10,340
understand your comments

2207
01:42:10,980 --> 01:42:12,420
hi

2208
01:42:12,420 --> 01:42:16,440
um I come from the open pgp space but

2209
01:42:16,440 --> 01:42:17,820
um we also been discussing about

2210
01:42:17,820 --> 01:42:20,100
composite and like the flexibility of

2211
01:42:20,100 --> 01:42:23,760
composite and in my opinion it's uh it

2212
01:42:23,760 --> 01:42:26,760
it can easily open up a Pandora via the

2213
01:42:26,760 --> 01:42:31,260
com of combinations to allow generic

2214
01:42:31,260 --> 01:42:33,659
um generic like generic composite

2215
01:42:33,659 --> 01:42:35,880
algorithms and furthermore even if you

2216
01:42:35,880 --> 01:42:38,340
restrict the choices what do you how do

2217
01:42:38,340 --> 01:42:40,800
you handle those who don't respect these

2218
01:42:40,800 --> 01:42:43,280
restrictions

2219
01:42:43,739 --> 01:42:45,980
foreign

2220
01:42:46,080 --> 01:42:49,040
tkg

2221
01:42:49,320 --> 01:42:52,380
so if I may if I may just to answer to

2222
01:42:52,380 --> 01:42:53,940
the last comment

2223
01:42:53,940 --> 01:42:56,040
um actually the the way that you handle

2224
01:42:56,040 --> 01:42:58,139
that is built in by using you know these

2225
01:42:58,139 --> 01:43:00,000
oids and definition for keys and

2226
01:43:00,000 --> 01:43:03,000
signatures is very natural for many

2227
01:43:03,000 --> 01:43:05,340
protocols to be adapted

2228
01:43:05,340 --> 01:43:07,260
um you know and you know exactly as we

2229
01:43:07,260 --> 01:43:10,920
support RSA or ecdsa or the next type of

2230
01:43:10,920 --> 01:43:13,920
algorithm this would be the same

2231
01:43:13,920 --> 01:43:16,679
um the same type of support so

2232
01:43:16,679 --> 01:43:17,820
um you know nothing nothing different

2233
01:43:17,820 --> 01:43:20,719
than what we do today

2234
01:43:22,080 --> 01:43:22,980
um

2235
01:43:22,980 --> 01:43:25,139
so I I just wanted to point out that we

2236
01:43:25,139 --> 01:43:27,119
can define a mechanism that says here's

2237
01:43:27,119 --> 01:43:30,179
how you combine algorithms

2238
01:43:30,179 --> 01:43:32,340
um in a generic way

2239
01:43:32,340 --> 01:43:33,780
uh

2240
01:43:33,780 --> 01:43:36,860
at a

2241
01:43:36,900 --> 01:43:39,420
at a software level

2242
01:43:39,420 --> 01:43:42,540
without embedding the generic composite

2243
01:43:42,540 --> 01:43:46,139
construction directly into the x79

2244
01:43:46,139 --> 01:43:47,520
certificate

2245
01:43:47,520 --> 01:43:50,159
when you embed the construction into the

2246
01:43:50,159 --> 01:43:52,619
certificate wire format itself

2247
01:43:52,619 --> 01:43:55,139
you are now pushing all of the

2248
01:43:55,139 --> 01:43:58,380
implementers to write their own when

2249
01:43:58,380 --> 01:44:00,060
they consume a certificate that has this

2250
01:44:00,060 --> 01:44:03,020
they now have to have their own complex

2251
01:44:03,020 --> 01:44:05,639
decision-making process about what kinds

2252
01:44:05,639 --> 01:44:07,199
of composite mechanisms are actually

2253
01:44:07,199 --> 01:44:09,480
reasonable and actually makes sense

2254
01:44:09,480 --> 01:44:10,980
and every implementation is going to

2255
01:44:10,980 --> 01:44:13,080
choose something different because it's

2256
01:44:13,080 --> 01:44:14,760
very hard to specify that in a way that

2257
01:44:14,760 --> 01:44:15,960
everybody's going to just adopt the

2258
01:44:15,960 --> 01:44:17,760
standard thing

2259
01:44:17,760 --> 01:44:19,860
this is a recipe for interoperability

2260
01:44:19,860 --> 01:44:21,659
failure

2261
01:44:21,659 --> 01:44:24,000
if the wire format itself says okay

2262
01:44:24,000 --> 01:44:27,840
here's an oid and it it this oid means

2263
01:44:27,840 --> 01:44:30,420
you use this particular combination then

2264
01:44:30,420 --> 01:44:31,980
implementations can choose to support

2265
01:44:31,980 --> 01:44:34,860
that oid or not support that void so you

2266
01:44:34,860 --> 01:44:38,040
can have the generic composition

2267
01:44:38,040 --> 01:44:40,619
um logic that is not embedded in The

2268
01:44:40,619 --> 01:44:42,300
Wire format

2269
01:44:42,300 --> 01:44:44,820
and I think that if you put it into if

2270
01:44:44,820 --> 01:44:47,280
you put the generic composition into the

2271
01:44:47,280 --> 01:44:49,560
wire format you're going to get a range

2272
01:44:49,560 --> 01:44:51,960
of certificates that show up with weird

2273
01:44:51,960 --> 01:44:55,139
combinations and every implementation is

2274
01:44:55,139 --> 01:44:56,760
going to have to decide what to do with

2275
01:44:56,760 --> 01:44:58,860
the combinatorial explosion there of

2276
01:44:58,860 --> 01:45:02,159
what they receive and that is a mistake

2277
01:45:02,159 --> 01:45:05,100
right dkg I think that actually I see it

2278
01:45:05,100 --> 01:45:07,440
very very differently uh the opposite

2279
01:45:07,440 --> 01:45:08,159
way

2280
01:45:08,159 --> 01:45:09,659
um in the sense that

2281
01:45:09,659 --> 01:45:12,420
um for us the um the combination of the

2282
01:45:12,420 --> 01:45:15,119
algorithms allows you to have a backward

2283
01:45:15,119 --> 01:45:17,760
compatibility type of mode

2284
01:45:17,760 --> 01:45:18,480
um

2285
01:45:18,480 --> 01:45:21,060
and uh oh

2286
01:45:21,060 --> 01:45:23,100
I'm I forgot the point

2287
01:45:23,100 --> 01:45:26,719
um I'll get back to you later

2288
01:45:26,900 --> 01:45:29,040
I was just going to say I think the

2289
01:45:29,040 --> 01:45:33,300
generic and the explicit can co-exist

2290
01:45:33,300 --> 01:45:35,520
um generic is we learned from the

2291
01:45:35,520 --> 01:45:37,440
hackathon too two implementations we're

2292
01:45:37,440 --> 01:45:38,580
born there

2293
01:45:38,580 --> 01:45:40,560
um that use generic it's it's not

2294
01:45:40,560 --> 01:45:42,540
difficult to implement if people are

2295
01:45:42,540 --> 01:45:44,520
worried about you know the explosion of

2296
01:45:44,520 --> 01:45:46,440
combinations

2297
01:45:46,440 --> 01:45:48,659
um I mean we have there I mean that was

2298
01:45:48,659 --> 01:45:50,100
proof right there they're able to

2299
01:45:50,100 --> 01:45:52,260
interrupt without issue

2300
01:45:52,260 --> 01:45:53,880
um the explicit one that we took the

2301
01:45:53,880 --> 01:45:56,580
feedback for that because of the you

2302
01:45:56,580 --> 01:45:58,320
know the comments at the last iitf

2303
01:45:58,320 --> 01:46:00,600
saying there's you know this explosion

2304
01:46:00,600 --> 01:46:01,980
possibility

2305
01:46:01,980 --> 01:46:03,960
um so with with that one you you do have

2306
01:46:03,960 --> 01:46:06,119
to basically do the checking

2307
01:46:06,119 --> 01:46:08,159
um to make sure that that the void that

2308
01:46:08,159 --> 01:46:10,080
you specify lines up with the algorithms

2309
01:46:10,080 --> 01:46:11,280
you use

2310
01:46:11,280 --> 01:46:14,040
um so the I guess the issue is I think

2311
01:46:14,040 --> 01:46:15,659
there's always going to be that you know

2312
01:46:15,659 --> 01:46:17,280
use case out there somewhere where

2313
01:46:17,280 --> 01:46:19,260
someone wants to use a combination that

2314
01:46:19,260 --> 01:46:21,960
isn't in That explicit combination so

2315
01:46:21,960 --> 01:46:24,300
that's why I think I mean I know we've

2316
01:46:24,300 --> 01:46:26,040
we've marked it for deprecation or

2317
01:46:26,040 --> 01:46:28,260
removal of the generic but I think

2318
01:46:28,260 --> 01:46:29,580
there's still a use case for that

2319
01:46:29,580 --> 01:46:31,619
because I don't think we can ever please

2320
01:46:31,619 --> 01:46:33,480
everybody

2321
01:46:33,480 --> 01:46:37,500
um so we we started because we wanted to

2322
01:46:37,500 --> 01:46:39,719
to to have you know an option that was

2323
01:46:39,719 --> 01:46:41,580
open that people could use but hearing

2324
01:46:41,580 --> 01:46:44,159
feedback we went to more explicit but I

2325
01:46:44,159 --> 01:46:45,659
think in the real world I mean there's

2326
01:46:45,659 --> 01:46:47,159
always going to be those generic use

2327
01:46:47,159 --> 01:46:49,500
cases that the people might want to use

2328
01:46:49,500 --> 01:46:51,600
so that's why it is the way it is so

2329
01:46:51,600 --> 01:46:53,880
we're happy to go back to draft go too

2330
01:46:53,880 --> 01:46:55,560
if that's what you know generic if

2331
01:46:55,560 --> 01:46:57,480
that's what people want but you know

2332
01:46:57,480 --> 01:46:59,100
there's always going to be probably this

2333
01:46:59,100 --> 01:47:00,780
argument so

2334
01:47:00,780 --> 01:47:04,320
and and John to complement your argument

2335
01:47:04,320 --> 01:47:07,320
um so for the generic one actually dkg I

2336
01:47:07,320 --> 01:47:10,260
think that your argument would be true

2337
01:47:10,260 --> 01:47:13,380
if we did choose not to reuse the same

2338
01:47:13,380 --> 01:47:16,199
data structures in a recursive way uh so

2339
01:47:16,199 --> 01:47:18,060
that choice actually prevents us from

2340
01:47:18,060 --> 01:47:20,159
having really that problem that that you

2341
01:47:20,159 --> 01:47:22,260
say that the explosion because is

2342
01:47:22,260 --> 01:47:23,820
actually just a sequence of what you

2343
01:47:23,820 --> 01:47:26,580
already uh support so the validation

2344
01:47:26,580 --> 01:47:29,100
policy is built in into the system so

2345
01:47:29,100 --> 01:47:32,159
there's actually no choices that that

2346
01:47:32,159 --> 01:47:33,739
this um

2347
01:47:33,739 --> 01:47:36,540
the crypto crypto libraries can really

2348
01:47:36,540 --> 01:47:37,560
do

2349
01:47:37,560 --> 01:47:40,199
um is is exactly the same as processing

2350
01:47:40,199 --> 01:47:43,619
a normal signature today so that that

2351
01:47:43,619 --> 01:47:45,800
would be my argument against the

2352
01:47:45,800 --> 01:47:48,239
anti-interoperability as demonstrated in

2353
01:47:48,239 --> 01:47:52,339
our uh in our hackathon results

2354
01:47:53,880 --> 01:47:55,040
yeah

2355
01:47:55,040 --> 01:47:56,820
so

2356
01:47:56,820 --> 01:48:00,119
um like the another Point against the

2357
01:48:00,119 --> 01:48:02,219
the using the generic composite is that

2358
01:48:02,219 --> 01:48:04,440
in for instance for cams you will need

2359
01:48:04,440 --> 01:48:07,260
to have a key combiner that accounts for

2360
01:48:07,260 --> 01:48:09,420
all edge cases of putting things

2361
01:48:09,420 --> 01:48:12,840
together and in general you'll also have

2362
01:48:12,840 --> 01:48:17,699
to worry about like a big metrics and if

2363
01:48:17,699 --> 01:48:19,619
you restrict that Matrix artificially by

2364
01:48:19,619 --> 01:48:22,679
saying hey you can only do X then just

2365
01:48:22,679 --> 01:48:26,219
Define those X algorithms because if you

2366
01:48:26,219 --> 01:48:28,619
if you don't if you don't if you leave

2367
01:48:28,619 --> 01:48:32,159
it unrestricted people are gonna mix

2368
01:48:32,159 --> 01:48:35,400
weird stuff together because that's what

2369
01:48:35,400 --> 01:48:38,159
fits them best and then they will

2370
01:48:38,159 --> 01:48:39,540
they're gonna have interoperability

2371
01:48:39,540 --> 01:48:42,360
issues and if you don't uh and if you do

2372
01:48:42,360 --> 01:48:44,100
restrict then you have the same

2373
01:48:44,100 --> 01:48:47,940
situation as defining them explicitly

2374
01:48:47,940 --> 01:48:51,719
uh yeah I I kind of disagree with that

2375
01:48:51,719 --> 01:48:54,300
in the sense that if you use standard

2376
01:48:54,300 --> 01:48:55,920
algorithms you will not have any

2377
01:48:55,920 --> 01:48:58,920
problems but if you want to do your

2378
01:48:58,920 --> 01:49:01,619
specific ones right your

2379
01:49:01,619 --> 01:49:03,360
um your non-standard ones you're still

2380
01:49:03,360 --> 01:49:06,239
allowed you would not have other clients

2381
01:49:06,239 --> 01:49:08,760
to validate exactly as if you're not

2382
01:49:08,760 --> 01:49:10,920
supporting that particular post Quantum

2383
01:49:10,920 --> 01:49:12,780
algorithm or that particular classic

2384
01:49:12,780 --> 01:49:15,960
algorithm so it's not a different way so

2385
01:49:15,960 --> 01:49:17,820
the way that you can actually very

2386
01:49:17,820 --> 01:49:20,820
simply limit what you wanted to set is I

2387
01:49:20,820 --> 01:49:22,619
want to set this algorithm not this

2388
01:49:22,619 --> 01:49:24,659
other one and you don't support the oil

2389
01:49:24,659 --> 01:49:26,880
it's very it's already it's something

2390
01:49:26,880 --> 01:49:29,280
that we do all the time when we set up

2391
01:49:29,280 --> 01:49:31,320
our servers we decide which which

2392
01:49:31,320 --> 01:49:33,360
algorithm we want support this is no

2393
01:49:33,360 --> 01:49:35,540
difference

2394
01:49:36,420 --> 01:49:39,480
sure I mean I I was also quite surprised

2395
01:49:39,480 --> 01:49:41,159
by this working group like the

2396
01:49:41,159 --> 01:49:43,320
scientists tend to die is like a post

2397
01:49:43,320 --> 01:49:45,659
Quantum algorithms as a standalone when

2398
01:49:45,659 --> 01:49:47,580
on the third centers of the kaiper

2399
01:49:47,580 --> 01:49:48,960
website that's written like use it

2400
01:49:48,960 --> 01:49:50,820
composite

2401
01:49:50,820 --> 01:49:56,460
um so I I already do see some problems

2402
01:49:56,460 --> 01:49:59,699
there but that's this is not my this is

2403
01:49:59,699 --> 01:50:01,320
not my working group

2404
01:50:01,320 --> 01:50:05,040
on the other hand uh like what is

2405
01:50:05,040 --> 01:50:08,400
stopping someone from just using the

2406
01:50:08,400 --> 01:50:10,860
weird combination that might bring to

2407
01:50:10,860 --> 01:50:13,020
security issues

2408
01:50:13,020 --> 01:50:15,060
well these are you know if the

2409
01:50:15,060 --> 01:50:17,040
individual algorithms have some problems

2410
01:50:17,040 --> 01:50:20,040
you have bigger problems so uh you know

2411
01:50:20,040 --> 01:50:22,139
these are signatures that I will not

2412
01:50:22,139 --> 01:50:23,820
changing the way that signatures are

2413
01:50:23,820 --> 01:50:25,619
performed it's signatures perform

2414
01:50:25,619 --> 01:50:27,719
exactly the same way and that's the

2415
01:50:27,719 --> 01:50:30,239
powerful thing that the property this is

2416
01:50:30,239 --> 01:50:32,520
the security properties are maintained

2417
01:50:32,520 --> 01:50:35,100
for each single algorithm so in many

2418
01:50:35,100 --> 01:50:37,139
cases you might decide that one

2419
01:50:37,139 --> 01:50:39,119
algorithm is sufficient for you or you

2420
01:50:39,119 --> 01:50:40,679
want a combination of post quantums

2421
01:50:40,679 --> 01:50:43,139
because you don't trust both of them or

2422
01:50:43,139 --> 01:50:45,239
you just want to add a classic because

2423
01:50:45,239 --> 01:50:47,760
you know for the next five years you

2424
01:50:47,760 --> 01:50:49,500
might want to still use your classic

2425
01:50:49,500 --> 01:50:52,080
classic algorithm because you you

2426
01:50:52,080 --> 01:50:54,780
validate that that's that's appropriate

2427
01:50:54,780 --> 01:50:57,300
and you know and this is something that

2428
01:50:57,300 --> 01:50:58,980
one of the things that we are worried

2429
01:50:58,980 --> 01:51:00,540
about especially in our environment is

2430
01:51:00,540 --> 01:51:02,280
that their placement of identities

2431
01:51:02,280 --> 01:51:05,340
especially in the uh in device that I

2432
01:51:05,340 --> 01:51:07,560
have access networks that we have uh you

2433
01:51:07,560 --> 01:51:09,179
know many many hundreds of millions of

2434
01:51:09,179 --> 01:51:10,320
devices

2435
01:51:10,320 --> 01:51:12,659
that's where we really need to have a

2436
01:51:12,659 --> 01:51:14,760
plan for the long term and actually what

2437
01:51:14,760 --> 01:51:16,800
we're trying to do is maybe you know

2438
01:51:16,800 --> 01:51:18,659
when we whenever in the future we have

2439
01:51:18,659 --> 01:51:20,400
an algorithm that doesn't provide with

2440
01:51:20,400 --> 01:51:22,500
all the characteristics that we want we

2441
01:51:22,500 --> 01:51:24,420
might just just add these

2442
01:51:24,420 --> 01:51:26,100
characteristics by

2443
01:51:26,100 --> 01:51:27,780
um by replacing the identity of that

2444
01:51:27,780 --> 01:51:30,119
device issue a new certificate that's

2445
01:51:30,119 --> 01:51:32,760
all we need to do uh to actually add

2446
01:51:32,760 --> 01:51:34,500
this this new

2447
01:51:34,500 --> 01:51:36,000
um this new property

2448
01:51:36,000 --> 01:51:39,360
uh of course you know given that you

2449
01:51:39,360 --> 01:51:41,280
have software updates and you can update

2450
01:51:41,280 --> 01:51:44,280
the algorithms Etc and so it's it's kind

2451
01:51:44,280 --> 01:51:46,380
of like a long-term view

2452
01:51:46,380 --> 01:51:47,820
um that we're trying to to bring here

2453
01:51:47,820 --> 01:51:50,280
not just just for a single

2454
01:51:50,280 --> 01:51:52,500
um single instance

2455
01:51:52,500 --> 01:51:54,480
if that makes sense

2456
01:51:54,480 --> 01:51:56,639
all of this makes sense my problem with

2457
01:51:56,639 --> 01:51:58,080
your statement was when you said the

2458
01:51:58,080 --> 01:52:00,960
user might want to use ECC composite I

2459
01:52:00,960 --> 01:52:04,500
think a user should use or must use uh

2460
01:52:04,500 --> 01:52:06,659
PCC composite as of now because we have

2461
01:52:06,659 --> 01:52:09,000
seen what happened recently with with

2462
01:52:09,000 --> 01:52:12,000
the psych or like it might happen to

2463
01:52:12,000 --> 01:52:14,600
kyber too

2464
01:52:15,480 --> 01:52:17,880
thank you okay John you're the last one

2465
01:52:17,880 --> 01:52:19,500
yeah I know our time is getting it I was

2466
01:52:19,500 --> 01:52:21,119
just going to mention um Kim was

2467
01:52:21,119 --> 01:52:22,739
mentioned so we do have a draft for

2468
01:52:22,739 --> 01:52:24,420
comps at chem as well there wasn't

2469
01:52:24,420 --> 01:52:26,460
really any updates this time for it but

2470
01:52:26,460 --> 01:52:28,500
the big thing for that one is we do have

2471
01:52:28,500 --> 01:52:30,119
the question on the key combiner that's

2472
01:52:30,119 --> 01:52:32,760
why we made it flexible on that draft so

2473
01:52:32,760 --> 01:52:34,920
if we're still looking for feedback on

2474
01:52:34,920 --> 01:52:37,980
that obviously the trivial xor is I mean

2475
01:52:37,980 --> 01:52:39,719
what we thought you would have to do but

2476
01:52:39,719 --> 01:52:41,219
then we started reading papers and it

2477
01:52:41,219 --> 01:52:44,639
gets into Quagmire so if anyone can have

2478
01:52:44,639 --> 01:52:46,920
a disc I don't know maybe that's an ifrg

2479
01:52:46,920 --> 01:52:49,199
discussion or whatever but anyway

2480
01:52:49,199 --> 01:52:51,659
there's a composite chem draft and the

2481
01:52:51,659 --> 01:52:53,100
key combiners is kind of the big

2482
01:52:53,100 --> 01:52:56,000
discussion on that one

2483
01:52:56,460 --> 01:52:58,560
okay so what I think

2484
01:52:58,560 --> 01:53:01,440
um the working group Way Forward here is

2485
01:53:01,440 --> 01:53:03,360
uh you've gotten all kinds of advice

2486
01:53:03,360 --> 01:53:04,980
here about

2487
01:53:04,980 --> 01:53:08,760
uh different approaches to who have from

2488
01:53:08,760 --> 01:53:12,480
generic to nailing down

2489
01:53:12,480 --> 01:53:15,300
um I don't know which one the authors

2490
01:53:15,300 --> 01:53:17,580
want to Advocate at this point

2491
01:53:17,580 --> 01:53:19,500
I'd like to see some discussion of that

2492
01:53:19,500 --> 01:53:22,020
on the list and then an update to the

2493
01:53:22,020 --> 01:53:23,520
draft and then we'll do a call for

2494
01:53:23,520 --> 01:53:25,739
adoption to see if you've found The

2495
01:53:25,739 --> 01:53:27,780
Sweet Spot

2496
01:53:27,780 --> 01:53:30,679
to make sense

2497
01:53:30,780 --> 01:53:32,340
okay

2498
01:53:32,340 --> 01:53:36,199
we have one more presentation

2499
01:53:36,360 --> 01:53:38,100
on

2500
01:53:38,100 --> 01:53:43,159
X5 hash based signatures in x509

2501
01:53:46,020 --> 01:53:48,179
hi can you hear me what

2502
01:53:48,179 --> 01:53:49,619
yes

2503
01:53:49,619 --> 01:53:52,980
um did you send slides no I didn't I

2504
01:53:52,980 --> 01:53:55,380
trust I wanted to quickly announce that

2505
01:53:55,380 --> 01:53:58,020
we just published an internet draft

2506
01:53:58,020 --> 01:54:01,860
that's kind of an early version I can

2507
01:54:01,860 --> 01:54:05,659
just check the draft if you want

2508
01:54:12,480 --> 01:54:15,960
can I share my screen

2509
01:54:15,960 --> 01:54:19,460
yep okay great

2510
01:54:20,400 --> 01:54:23,100
so you should now see my screen so it's

2511
01:54:23,100 --> 01:54:25,199
basically an early version of our an

2512
01:54:25,199 --> 01:54:27,540
internet draft that we want to

2513
01:54:27,540 --> 01:54:31,679
bring forward and it's based on some

2514
01:54:31,679 --> 01:54:33,480
previous work by Scott Cura and Daniel

2515
01:54:33,480 --> 01:54:34,860
fungist

2516
01:54:34,860 --> 01:54:37,199
and it's because we've talked to quite a

2517
01:54:37,199 --> 01:54:39,600
lot of people lately who want to

2518
01:54:39,600 --> 01:54:41,639
actually use hash based signatures in

2519
01:54:41,639 --> 01:54:44,219
ex-wife of nine and

2520
01:54:44,219 --> 01:54:47,940
it's mostly for uh yeah having like a

2521
01:54:47,940 --> 01:54:50,699
root ca for the pki so we're talking

2522
01:54:50,699 --> 01:54:54,780
about some secure uh key server or some

2523
01:54:54,780 --> 01:54:58,020
HSM so some means of secure Key

2524
01:54:58,020 --> 01:55:00,060
Management on the root level

2525
01:55:00,060 --> 01:55:02,400
and they want to use hashbest signatures

2526
01:55:02,400 --> 01:55:05,119
as like the quantum safe

2527
01:55:05,119 --> 01:55:07,940
alternative for the classical

2528
01:55:07,940 --> 01:55:11,699
schemes and they want to use it for the

2529
01:55:11,699 --> 01:55:14,639
root CA because you can trust cash-based

2530
01:55:14,639 --> 01:55:18,060
signatures right now while they don't

2531
01:55:18,060 --> 01:55:19,800
really

2532
01:55:19,800 --> 01:55:21,840
why they aren't true what to use on the

2533
01:55:21,840 --> 01:55:23,699
levels below

2534
01:55:23,699 --> 01:55:25,800
so on the levels below for example of

2535
01:55:25,800 --> 01:55:28,260
course you could like use lithium or

2536
01:55:28,260 --> 01:55:29,239
something

2537
01:55:29,239 --> 01:55:31,920
but they want to have like this real

2538
01:55:31,920 --> 01:55:33,840
secure route C8

2539
01:55:33,840 --> 01:55:36,960
and that's what we want to bring this

2540
01:55:36,960 --> 01:55:39,000
forward so

2541
01:55:39,000 --> 01:55:41,179
it's

2542
01:55:41,179 --> 01:55:44,880
some sketches that we made and don't be

2543
01:55:44,880 --> 01:55:47,219
scared of what we did so far for example

2544
01:55:47,219 --> 01:55:48,440
you use

2545
01:55:48,440 --> 01:55:52,139
asn1 sequences for the data structures

2546
01:55:52,139 --> 01:55:53,639
because we wanted to show the

2547
01:55:53,639 --> 01:55:55,739
differences in the different schemes

2548
01:55:55,739 --> 01:55:58,800
that we provide here

2549
01:55:58,800 --> 01:56:01,380
and that's nothing we have hard feelings

2550
01:56:01,380 --> 01:56:04,080
about but the problem is there's like a

2551
01:56:04,080 --> 01:56:06,360
lot of hashback signatures right now

2552
01:56:06,360 --> 01:56:09,719
there's LMS and HSS there's also xmss

2553
01:56:09,719 --> 01:56:13,199
and xmss Mt which are defined by RCS

2554
01:56:13,199 --> 01:56:16,260
already by the cfrt group then there's

2555
01:56:16,260 --> 01:56:19,020
the stateless Sphinx plus and the nist

2556
01:56:19,020 --> 01:56:20,699
process

2557
01:56:20,699 --> 01:56:23,400
there's a new scheme called pyramid that

2558
01:56:23,400 --> 01:56:25,199
is quite promising that overcomes some

2559
01:56:25,199 --> 01:56:28,020
issues between xmss and sphinx plus

2560
01:56:28,020 --> 01:56:30,780
which means you could have like one

2561
01:56:30,780 --> 01:56:33,540
scheme with a very small verifier for a

2562
01:56:33,540 --> 01:56:35,520
stateless scheme as well as a stateful

2563
01:56:35,520 --> 01:56:36,840
scheme

2564
01:56:36,840 --> 01:56:38,340
and

2565
01:56:38,340 --> 01:56:41,100
they're quite similar but still there's

2566
01:56:41,100 --> 01:56:43,500
a lot of difference in the details

2567
01:56:43,500 --> 01:56:45,840
and we wanted to have one document where

2568
01:56:45,840 --> 01:56:49,340
we can have like a more unified

2569
01:56:49,340 --> 01:56:53,520
nomenclature so more unified naming and

2570
01:56:53,520 --> 01:56:55,860
also providing like information about

2571
01:56:55,860 --> 01:56:57,960
the differences so making an

2572
01:56:57,960 --> 01:57:00,780
implementer's life easier in order to

2573
01:57:00,780 --> 01:57:03,900
show if you want to use this signature

2574
01:57:03,900 --> 01:57:06,719
scheme you have to do this and for the

2575
01:57:06,719 --> 01:57:08,780
other one you have to do that

2576
01:57:08,780 --> 01:57:11,580
and there's quite some interest because

2577
01:57:11,580 --> 01:57:13,920
we've talked to people from agencies who

2578
01:57:13,920 --> 01:57:18,599
have to provide like an pki for a

2579
01:57:18,599 --> 01:57:21,420
national agencies we've talked to trust

2580
01:57:21,420 --> 01:57:23,400
centers but also to some people from

2581
01:57:23,400 --> 01:57:25,080
industry

2582
01:57:25,080 --> 01:57:28,639
and we are interested if Lambs is

2583
01:57:28,639 --> 01:57:31,560
interested in picking something up like

2584
01:57:31,560 --> 01:57:36,300
this and if you have any other needs for

2585
01:57:36,300 --> 01:57:39,000
like any other use cases and of course

2586
01:57:39,000 --> 01:57:42,119
please feel free to have a look at it

2587
01:57:42,119 --> 01:57:45,119
please tell us your opinions as I said

2588
01:57:45,119 --> 01:57:47,699
it's like more like a sketch right now

2589
01:57:47,699 --> 01:57:49,380
we don't have too hard feelings about

2590
01:57:49,380 --> 01:57:53,300
the content we will extended for example

2591
01:57:53,300 --> 01:57:56,040
with information about what not to do

2592
01:57:56,040 --> 01:57:59,580
with your private key or how to handle

2593
01:57:59,580 --> 01:58:02,400
your priority securely there's some more

2594
01:58:02,400 --> 01:58:04,440
references we want to include

2595
01:58:04,440 --> 01:58:08,760
that in short the ideas have like one

2596
01:58:08,760 --> 01:58:11,940
content uh about hashvest signatures in

2597
01:58:11,940 --> 01:58:15,179
x559 for all those relevant schemes out

2598
01:58:15,179 --> 01:58:17,760
there because we also know that there's

2599
01:58:17,760 --> 01:58:20,040
some people who prefer like LMS there's

2600
01:58:20,040 --> 01:58:23,099
other that want to settle for XMS as so

2601
01:58:23,099 --> 01:58:26,099
we think those schemes will stick

2602
01:58:26,099 --> 01:58:29,580
and I'd welcome any feedback so thank

2603
01:58:29,580 --> 01:58:32,580
you very much okay so so one thing is we

2604
01:58:32,580 --> 01:58:36,900
have a draft on using these uh XMS LMS

2605
01:58:36,900 --> 01:58:41,940
I'm sorry HSS LMS in uh CMS

2606
01:58:41,940 --> 01:58:44,280
and it would be really important to me

2607
01:58:44,280 --> 01:58:47,040
that the signatures you're using in CMS

2608
01:58:47,040 --> 01:58:51,360
are the same as the ones the ones that

2609
01:58:51,360 --> 01:58:54,239
are there for CMS are the same as the

2610
01:58:54,239 --> 01:58:58,020
ones you're using in uh x509 environment

2611
01:58:58,020 --> 01:59:01,199
we have two people in the queue we have

2612
01:59:01,199 --> 01:59:04,020
two minutes left so I'm gonna let them

2613
01:59:04,020 --> 01:59:06,900
speak but then we'll close the queue so

2614
01:59:06,900 --> 01:59:10,139
Jonathan I had Jonathan Hamel so I was

2615
01:59:10,139 --> 01:59:12,619
going to say the same thing that rfc's

2616
01:59:12,619 --> 01:59:17,040
8708 I think it is it the HSS and our

2617
01:59:17,040 --> 01:59:20,099
LMS and and CMS has a specification for

2618
01:59:20,099 --> 01:59:21,440
public Keys which I think is

2619
01:59:21,440 --> 01:59:23,520
incompatible with how you've specified

2620
01:59:23,520 --> 01:59:25,980
it in your draft so it I think there

2621
01:59:25,980 --> 01:59:29,040
needs to be alignment there

2622
01:59:29,040 --> 01:59:30,659
okay

2623
01:59:30,659 --> 01:59:32,940
okay Siemens

2624
01:59:32,940 --> 01:59:36,780
um Stefan you have a draft on xmss there

2625
01:59:36,780 --> 01:59:39,960
was an Errata on the specification of

2626
01:59:39,960 --> 01:59:42,179
the key formats um are there any plans

2627
01:59:42,179 --> 01:59:46,320
to update the document

2628
01:59:46,320 --> 01:59:49,400
yeah we have to update it soon there's

2629
01:59:49,400 --> 01:59:52,020
again some questions that we wanted to

2630
01:59:52,020 --> 01:59:54,840
clarify first let's like an issue that's

2631
01:59:54,840 --> 01:59:56,580
taking quite some time right now and I'm

2632
01:59:56,580 --> 01:59:58,260
sorry about that

2633
01:59:58,260 --> 02:00:01,260
but there's like other changes uh that

2634
02:00:01,260 --> 02:00:04,199
are supposed to come for xmss and that's

2635
02:00:04,199 --> 02:00:06,719
what we wanted to clarify first but hope

2636
02:00:06,719 --> 02:00:09,420
that the xcr stuff will be clarified

2637
02:00:09,420 --> 02:00:13,080
soon so there will be an Errata yes

2638
02:00:13,080 --> 02:00:15,719
okay thanks

2639
02:00:15,719 --> 02:00:18,960
okay thank you that brings us to the end

2640
02:00:18,960 --> 02:00:21,719
of our agenda and the end of our time

2641
02:00:21,719 --> 02:00:24,420
uh so thank you very much to the note

2642
02:00:24,420 --> 02:00:27,900
takers but uh Alexian Carl and thank you

2643
02:00:27,900 --> 02:00:30,780
uh for all your participation have a

2644
02:00:30,780 --> 02:00:33,139
great day

2645
02:00:35,219 --> 02:00:39,139
just leave it in the notepad

2646
02:00:48,300 --> 02:00:53,060
yes that's true I'll grab it shortly

2647
02:01:00,679 --> 02:01:03,679
thank you

