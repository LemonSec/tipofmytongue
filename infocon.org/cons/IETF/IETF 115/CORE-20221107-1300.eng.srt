1
00:00:12,620 --> 00:00:15,739
thank you

2
00:01:07,140 --> 00:01:09,740
thank you

3
00:01:10,080 --> 00:01:13,799
okay so we are one past the hour uh we

4
00:01:13,799 --> 00:01:15,780
can start a meeting and welcome everyone

5
00:01:15,780 --> 00:01:18,420
this is the itf-150 meeting for the

6
00:01:18,420 --> 00:01:20,520
co-working group I'm Marco my coaches

7
00:01:20,520 --> 00:01:24,360
are I'm a humanity and Carson Borman

8
00:01:24,360 --> 00:01:28,140
um before starting the actual meeting I

9
00:01:28,140 --> 00:01:31,140
quickly share an external slide if I can

10
00:01:31,140 --> 00:01:33,680
share my screen

11
00:01:34,740 --> 00:01:38,600
all slots are taken good point

12
00:01:44,900 --> 00:01:47,280
that's just to convey some good news

13
00:01:47,280 --> 00:01:49,680
that most of you probably already had uh

14
00:01:49,680 --> 00:01:51,659
huge congratulations to Francesca and

15
00:01:51,659 --> 00:01:55,860
Christian uh for newborns and indeed

16
00:01:55,860 --> 00:01:57,780
thanks a lot also for providing uh

17
00:01:57,780 --> 00:01:59,520
likely future working group chairs and

18
00:01:59,520 --> 00:02:02,720
ads and or

19
00:02:04,759 --> 00:02:07,280
minute takers yeah as a fit

20
00:02:07,280 --> 00:02:10,560
congratulations indeed

21
00:02:10,560 --> 00:02:13,160
foreign

22
00:02:21,440 --> 00:02:23,940
right as usual we assume people here

23
00:02:23,940 --> 00:02:25,500
especially contributing to discussions

24
00:02:25,500 --> 00:02:27,780
to have read the documents in the agenda

25
00:02:27,780 --> 00:02:29,459
for today let's try to make good use of

26
00:02:29,459 --> 00:02:30,480
our time

27
00:02:30,480 --> 00:02:33,480
uh within discussion and as it comes in

28
00:02:33,480 --> 00:02:36,060
the next slide not well applies

29
00:02:36,060 --> 00:02:39,239
um please even on-site sign in with the

30
00:02:39,239 --> 00:02:42,180
meet Echo app to be sure you are uh

31
00:02:42,180 --> 00:02:44,640
taking the blue sheet uh the chairs will

32
00:02:44,640 --> 00:02:47,099
keep an eye on the chat and we have two

33
00:02:47,099 --> 00:02:49,319
volunteers for Undertakers uh Bill and

34
00:02:49,319 --> 00:02:51,540
Rickard thank you very much uh anyone

35
00:02:51,540 --> 00:02:53,519
else is more than welcome to

36
00:02:53,519 --> 00:02:56,239
further out

37
00:02:56,879 --> 00:02:59,459
yes and as an official ITF meeting uh

38
00:02:59,459 --> 00:03:02,400
the note will apply so nothing well uh

39
00:03:02,400 --> 00:03:04,500
be familiar with that if you're not it's

40
00:03:04,500 --> 00:03:07,739
not just about uh IPR patterns and so on

41
00:03:07,739 --> 00:03:10,260
it's also in the special about our color

42
00:03:10,260 --> 00:03:12,360
conduct so be nice and professional to

43
00:03:12,360 --> 00:03:14,659
each other

44
00:03:15,659 --> 00:03:18,300
uh yeah a few practicalities if you're

45
00:03:18,300 --> 00:03:20,280
not used to that already it doesn't

46
00:03:20,280 --> 00:03:22,980
really change much from the recent past

47
00:03:22,980 --> 00:03:25,739
for uh online attendees but for people

48
00:03:25,739 --> 00:03:28,920
on site again be sure to sign in uh the

49
00:03:28,920 --> 00:03:31,500
session with the mythical tool and if

50
00:03:31,500 --> 00:03:32,940
you want to

51
00:03:32,940 --> 00:03:35,040
um go to the mic please be sure to First

52
00:03:35,040 --> 00:03:37,860
join the queue and then go to the mic

53
00:03:37,860 --> 00:03:40,640
and then leave the queue as well

54
00:03:40,640 --> 00:03:43,080
uh you may also have to relay a question

55
00:03:43,080 --> 00:03:45,540
uh if it's better for you just type it

56
00:03:45,540 --> 00:03:50,239
on the chat with uh Mike prefixed

57
00:03:51,000 --> 00:03:53,700
uh this is the agenda for today uh we'll

58
00:03:53,700 --> 00:03:54,959
continue this chair slot with the

59
00:03:54,959 --> 00:03:57,659
document status update uh then we have

60
00:03:57,659 --> 00:04:01,440
updates about the href document uh

61
00:04:01,440 --> 00:04:03,120
conditional attributes and a new

62
00:04:03,120 --> 00:04:05,400
document on a potential Target attribute

63
00:04:05,400 --> 00:04:06,420
registry

64
00:04:06,420 --> 00:04:09,000
uh then we enter into a series of

65
00:04:09,000 --> 00:04:10,560
security Works

66
00:04:10,560 --> 00:04:12,659
um group of score uh the profiling

67
00:04:12,659 --> 00:04:14,220
availability establishment for cop

68
00:04:14,220 --> 00:04:17,399
underscore and key update for uh Oscar

69
00:04:17,399 --> 00:04:20,279
meaning Kudos and we conclude with uh

70
00:04:20,279 --> 00:04:21,660
two slots covered by a single

71
00:04:21,660 --> 00:04:24,180
presentation about the DNS of aircraft

72
00:04:24,180 --> 00:04:25,800
document in core and the companion

73
00:04:25,800 --> 00:04:28,740
document about encoding DNS messages

74
00:04:28,740 --> 00:04:30,320
in seabor

75
00:04:30,320 --> 00:04:33,540
uh does anyone have any bashing for this

76
00:04:33,540 --> 00:04:35,960
agenda

77
00:04:37,080 --> 00:04:40,758
heard in Reading none

78
00:04:40,919 --> 00:04:45,080
then we can go on with document status

79
00:04:45,300 --> 00:04:48,000
and we had uh the problem details

80
00:04:48,000 --> 00:04:51,540
document now published as RFC in 9220

81
00:04:51,540 --> 00:04:54,900
that was indeed a big achievement also

82
00:04:54,900 --> 00:04:59,040
done in a pretty much record time and I

83
00:04:59,040 --> 00:05:00,540
believe Carson can provide a little bit

84
00:05:00,540 --> 00:05:05,160
more context also on related work also

85
00:05:05,160 --> 00:05:09,180
happening in httpbs

86
00:05:10,699 --> 00:05:14,220
yeah just a quick

87
00:05:14,220 --> 00:05:16,919
piece of information this draft problem

88
00:05:16,919 --> 00:05:20,780
details actually is a knock off from RFC

89
00:05:20,780 --> 00:05:23,400
7807 which is solving the same problem

90
00:05:23,400 --> 00:05:25,620
for HTTP and Json

91
00:05:25,620 --> 00:05:28,500
so this is the co-op c-bar and energy we

92
00:05:28,500 --> 00:05:30,900
didn't copy it wholesale because it

93
00:05:30,900 --> 00:05:32,580
constrained

94
00:05:32,580 --> 00:05:35,220
systems are a bit different so there

95
00:05:35,220 --> 00:05:38,039
were some changes and

96
00:05:38,039 --> 00:05:40,620
uh we would have loved to use the new

97
00:05:40,620 --> 00:05:42,840
version of 7807

98
00:05:42,840 --> 00:05:46,320
but that is only completing now so this

99
00:05:46,320 --> 00:05:48,720
is pretty interesting

100
00:05:48,720 --> 00:05:51,720
so uh well the ipf last call just

101
00:05:51,720 --> 00:05:52,620
finished

102
00:05:52,620 --> 00:05:55,139
uh but I still think if you find

103
00:05:55,139 --> 00:05:56,520
something broken in there they still

104
00:05:56,520 --> 00:05:57,720
want to know that

105
00:05:57,720 --> 00:06:00,060
so if you want to have a look at this uh

106
00:06:00,060 --> 00:06:02,280
this was would be useful

107
00:06:02,280 --> 00:06:03,660
and

108
00:06:03,660 --> 00:06:07,199
um well one interesting thing is that uh

109
00:06:07,199 --> 00:06:10,680
to register these problem types you need

110
00:06:10,680 --> 00:06:13,199
identifiers and the question is where do

111
00:06:13,199 --> 00:06:15,840
these identifiers come from and we have

112
00:06:15,840 --> 00:06:18,300
decided they come from ayenna so if you

113
00:06:18,300 --> 00:06:21,419
want to get an edifier you go to Ayana

114
00:06:21,419 --> 00:06:23,940
and register it there and this should be

115
00:06:23,940 --> 00:06:25,080
sufficiently

116
00:06:25,080 --> 00:06:27,720
low overhead that you can do it and in

117
00:06:27,720 --> 00:06:29,000
this draft

118
00:06:29,000 --> 00:06:32,759
the ideas that uh you essentially can

119
00:06:32,759 --> 00:06:34,860
forge your own

120
00:06:34,860 --> 00:06:37,340
Ayana your eyes as the referenceable

121
00:06:37,340 --> 00:06:40,259
identifiers so we have integers

122
00:06:40,259 --> 00:06:42,720
the original or the updated original

123
00:06:42,720 --> 00:06:45,780
draft now has INR Uris and this is

124
00:06:45,780 --> 00:06:48,000
starting an interesting discussion it's

125
00:06:48,000 --> 00:06:50,220
probably more more an aerial General

126
00:06:50,220 --> 00:06:52,680
thing about the reference it will

127
00:06:52,680 --> 00:06:55,800
identifiers going into

128
00:06:55,800 --> 00:06:59,280
um the Ayana Registries uh but uh yeah

129
00:06:59,280 --> 00:07:01,020
if you're interested in this kind of

130
00:07:01,020 --> 00:07:04,520
thing you may want to have a look

131
00:07:05,880 --> 00:07:07,740
yeah the the one thing that that I'm not

132
00:07:07,740 --> 00:07:12,600
going to detail is that uh this RFC

133
00:07:12,600 --> 00:07:17,100
contains three pieces of Hebrew text

134
00:07:17,100 --> 00:07:19,620
which took us about two months to

135
00:07:19,620 --> 00:07:22,819
actually publish an energy

136
00:07:24,319 --> 00:07:27,800
thank you Carson

137
00:07:28,620 --> 00:07:30,900
yeah moving on we have um when

138
00:07:30,900 --> 00:07:33,539
documenting isg processing uh course C9

139
00:07:33,539 --> 00:07:37,680
version 19 and it's 4980 follow-up there

140
00:07:37,680 --> 00:07:39,000
is plan to have further discussion

141
00:07:39,000 --> 00:07:41,880
already during the um ITF week with

142
00:07:41,880 --> 00:07:44,340
other people involved in coreconf and

143
00:07:44,340 --> 00:07:46,220
and it covered also the later

144
00:07:46,220 --> 00:07:49,020
intermediate plan for uh for December

145
00:07:49,020 --> 00:07:51,180
but uh I believe this document can be

146
00:07:51,180 --> 00:07:53,759
wrapped up pretty soon to take the next

147
00:07:53,759 --> 00:07:56,599
step publication

148
00:07:57,180 --> 00:07:59,220
uh we have a number of documents that

149
00:07:59,220 --> 00:08:01,800
are after The Working of last call

150
00:08:01,800 --> 00:08:04,440
um Library are also part of the corecomm

151
00:08:04,440 --> 00:08:07,199
cluster they were put on ice and waiting

152
00:08:07,199 --> 00:08:08,460
for um

153
00:08:08,460 --> 00:08:10,440
the other two core of documents to be

154
00:08:10,440 --> 00:08:12,300
completed first so these are also

155
00:08:12,300 --> 00:08:13,340
supposed to be

156
00:08:13,340 --> 00:08:16,800
taken up uh soon too

157
00:08:16,800 --> 00:08:18,120
um we also have the Groupon score

158
00:08:18,120 --> 00:08:20,460
document uh in in shipper right up which

159
00:08:20,460 --> 00:08:22,199
is in the agenda for today following an

160
00:08:22,199 --> 00:08:26,599
update app and uh before this cutoff

161
00:08:27,000 --> 00:08:29,819
uh as to other documents we have two

162
00:08:29,819 --> 00:08:31,979
currently in working request call uh

163
00:08:31,979 --> 00:08:33,539
conditional attributes that got updated

164
00:08:33,539 --> 00:08:35,880
we have in today's agenda and group on

165
00:08:35,880 --> 00:08:38,219
this that is waiting for a second wave

166
00:08:38,219 --> 00:08:41,339
of comments or confirmation to come uh

167
00:08:41,339 --> 00:08:44,459
following the first one uh we have also

168
00:08:44,459 --> 00:08:48,240
adopted DNS over cop after summer it's

169
00:08:48,240 --> 00:08:50,700
also in the agenda for today and there's

170
00:08:50,700 --> 00:08:53,519
a document group comproxy appending a

171
00:08:53,519 --> 00:08:56,540
working group adoption call

172
00:08:57,660 --> 00:08:59,519
and a number of other individual

173
00:08:59,519 --> 00:09:01,080
documents were also resubmitted before

174
00:09:01,080 --> 00:09:03,240
the cutoff uh not in the agenda for

175
00:09:03,240 --> 00:09:05,040
today uh please have a look at those

176
00:09:05,040 --> 00:09:07,560
provide comments on the list and we had

177
00:09:07,560 --> 00:09:10,560
also a brand new uh individual document

178
00:09:10,560 --> 00:09:13,800
that was uh already resubmitted uh

179
00:09:13,800 --> 00:09:15,600
during the academic basically and it's

180
00:09:15,600 --> 00:09:18,899
on today's agenda proposing you a new

181
00:09:18,899 --> 00:09:22,160
registry for Target attributes

182
00:09:23,279 --> 00:09:25,620
yeah so we can start with the first item

183
00:09:25,620 --> 00:09:27,779
uh as a recommendation of course please

184
00:09:27,779 --> 00:09:29,760
be sure to wear your masks uh possible

185
00:09:29,760 --> 00:09:31,920
exception is up to you is if you are at

186
00:09:31,920 --> 00:09:33,779
the mic actively speaking and presenting

187
00:09:33,779 --> 00:09:36,620
thank you

188
00:09:43,459 --> 00:09:46,380
I'll demonstrate the right way to use

189
00:09:46,380 --> 00:09:48,959
the microphone with a mask hold it very

190
00:09:48,959 --> 00:09:51,420
close and unless you have singers

191
00:09:51,420 --> 00:09:54,180
training you cannot do this with a stand

192
00:09:54,180 --> 00:09:56,240
just so you always have to take them

193
00:09:56,240 --> 00:10:00,300
microphone so uh Sia eyes

194
00:10:00,300 --> 00:10:03,720
the document is called draft IIT iatf

195
00:10:03,720 --> 00:10:06,540
called href because we couldn't decide

196
00:10:06,540 --> 00:10:08,100
on how to call them but they are not

197
00:10:08,100 --> 00:10:12,540
called Cris so Cris are concise

198
00:10:12,540 --> 00:10:14,519
equivalent of Uris

199
00:10:14,519 --> 00:10:18,360
and URI references as we know them from

200
00:10:18,360 --> 00:10:22,320
RFC 39 86 next slide

201
00:10:22,320 --> 00:10:25,560
oh I can look there I'm stupid

202
00:10:25,560 --> 00:10:27,680
um

203
00:10:27,860 --> 00:10:31,920
so the interesting thing is when you

204
00:10:31,920 --> 00:10:34,620
take something that has such a long

205
00:10:34,620 --> 00:10:38,820
history as a UI and try to come up with

206
00:10:38,820 --> 00:10:41,760
a structured representation of that

207
00:10:41,760 --> 00:10:44,519
you essentially have to build a data

208
00:10:44,519 --> 00:10:45,839
model

209
00:10:45,839 --> 00:10:48,720
for what information is in a UI

210
00:10:48,720 --> 00:10:50,899
and that's a bit more complicated than

211
00:10:50,899 --> 00:10:54,420
maybe meets the eye immediately

212
00:10:54,420 --> 00:10:57,000
and there are some dark corners

213
00:10:57,000 --> 00:11:01,620
and we don't really care that much about

214
00:11:01,620 --> 00:11:04,200
those dark corners but we need to cover

215
00:11:04,200 --> 00:11:08,220
them to really make Cris faster citizens

216
00:11:08,220 --> 00:11:10,140
so we started to make sure we can do

217
00:11:10,140 --> 00:11:13,500
co-op and Co-op s now that's easy but

218
00:11:13,500 --> 00:11:16,560
yeah there's some some weird stuff and

219
00:11:16,560 --> 00:11:18,060
there are some features in particular

220
00:11:18,060 --> 00:11:20,760
the percent encoding mechanism

221
00:11:20,760 --> 00:11:23,820
that really is uh at three levels at the

222
00:11:23,820 --> 00:11:28,320
same time lexical syntax and semantics

223
00:11:28,320 --> 00:11:32,220
so uh Cris are the standard

224
00:11:32,220 --> 00:11:34,140
structure are intended as a standard

225
00:11:34,140 --> 00:11:36,839
structure for past UI so you don't need

226
00:11:36,839 --> 00:11:38,459
a UI browser

227
00:11:38,459 --> 00:11:40,740
anymore and of course every one of us

228
00:11:40,740 --> 00:11:43,920
has written a URI parser that was about

229
00:11:43,920 --> 00:11:45,959
20 correct

230
00:11:45,959 --> 00:11:49,019
and uh yeah this is supposed to be done

231
00:11:49,019 --> 00:11:51,899
for you before the CRI hits your

232
00:11:51,899 --> 00:11:54,000
constraint device and of course the

233
00:11:54,000 --> 00:11:54,980
other

234
00:11:54,980 --> 00:11:59,040
attempt is to be concise uh use less

235
00:11:59,040 --> 00:12:01,920
bytes than a URI in many cases next

236
00:12:01,920 --> 00:12:04,279
slide

237
00:12:05,279 --> 00:12:08,279
um so on this conciseness one

238
00:12:08,279 --> 00:12:10,260
contribution to the Consultants is to

239
00:12:10,260 --> 00:12:14,240
have uh integer representation for

240
00:12:14,240 --> 00:12:17,339
frequently used scheme IDs for instance

241
00:12:17,339 --> 00:12:20,940
HTTP https web and so on

242
00:12:20,940 --> 00:12:25,740
and uh it's easy to do that for for the

243
00:12:25,740 --> 00:12:28,740
maybe 10 or so we actually use a lot in

244
00:12:28,740 --> 00:12:30,480
in the core environment

245
00:12:30,480 --> 00:12:32,880
but of course you want to do this right

246
00:12:32,880 --> 00:12:36,240
to make Cris as universal

247
00:12:36,240 --> 00:12:39,480
um as possible and well we started out

248
00:12:39,480 --> 00:12:42,420
with the I was the idea that we would

249
00:12:42,420 --> 00:12:44,100
simply do the complete set

250
00:12:44,100 --> 00:12:48,240
in the RFC and not provide extensions

251
00:12:48,240 --> 00:12:50,519
so why why don't you want to provide an

252
00:12:50,519 --> 00:12:51,660
extension

253
00:12:51,660 --> 00:12:54,959
the problem is if you provide a text

254
00:12:54,959 --> 00:12:57,300
encoding for something that can also be

255
00:12:57,300 --> 00:13:00,060
encoded as an integer and that integer

256
00:13:00,060 --> 00:13:02,060
comes in later

257
00:13:02,060 --> 00:13:04,680
implementations need to choose whether

258
00:13:04,680 --> 00:13:06,660
they use the text encoding or the

259
00:13:06,660 --> 00:13:09,240
integer encoding and they will of course

260
00:13:09,240 --> 00:13:12,959
look at the uh deployment situation out

261
00:13:12,959 --> 00:13:16,160
there and say only

262
00:13:16,160 --> 00:13:19,980
99.73 actually Implement that yet and I

263
00:13:19,980 --> 00:13:23,100
don't want to lose the the other 0.37 so

264
00:13:23,100 --> 00:13:25,560
I'm going to use the text encoding

265
00:13:25,560 --> 00:13:28,320
so essentially adding something to a

266
00:13:28,320 --> 00:13:30,540
registry after the fact

267
00:13:30,540 --> 00:13:33,540
will have no effect in in many uh

268
00:13:33,540 --> 00:13:35,700
environments

269
00:13:35,700 --> 00:13:38,279
um so that that's a problem with just

270
00:13:38,279 --> 00:13:40,800
saying oh we drop in a registry here and

271
00:13:40,800 --> 00:13:41,459
and

272
00:13:41,459 --> 00:13:44,160
that provides the extensibility we need

273
00:13:44,160 --> 00:13:46,680
next slide

274
00:13:46,680 --> 00:13:50,160
so the idea is

275
00:13:50,160 --> 00:13:53,279
that we limit

276
00:13:53,279 --> 00:13:55,920
or restrict the point in time when these

277
00:13:55,920 --> 00:13:59,519
registrations can happen to a

278
00:13:59,519 --> 00:14:02,040
the initial prefill of the registry that

279
00:14:02,040 --> 00:14:04,980
happens when we publish this this drop

280
00:14:04,980 --> 00:14:08,519
and B to the point in time when a new

281
00:14:08,519 --> 00:14:10,620
URL scheme that we we couldn't know

282
00:14:10,620 --> 00:14:11,579
about

283
00:14:11,579 --> 00:14:13,500
at the time the

284
00:14:13,500 --> 00:14:17,220
draft was was published as an RC

285
00:14:17,220 --> 00:14:20,579
um when a new UI scheme is registered

286
00:14:20,579 --> 00:14:22,940
so that's uh

287
00:14:22,940 --> 00:14:26,820
relatively safe I mean the the UI

288
00:14:26,820 --> 00:14:29,579
schemes the new UI scheme is going to be

289
00:14:29,579 --> 00:14:32,760
and use in testing and so on

290
00:14:32,760 --> 00:14:36,079
uh but uh yeah it kind of only gets

291
00:14:36,079 --> 00:14:38,160
official when the URL scheme is

292
00:14:38,160 --> 00:14:40,260
registered and we have early allocation

293
00:14:40,260 --> 00:14:42,480
and so on so that that should happen

294
00:14:42,480 --> 00:14:43,980
early enough

295
00:14:43,980 --> 00:14:46,920
so we have a Wiki where we

296
00:14:46,920 --> 00:14:49,500
try to connect collect data for an

297
00:14:49,500 --> 00:14:54,019
initial preview and actually the dash o1

298
00:14:54,019 --> 00:14:57,180
version of this internet draft

299
00:14:57,180 --> 00:15:00,360
has a significantly expanded

300
00:15:00,360 --> 00:15:02,959
set of of items to

301
00:15:02,959 --> 00:15:07,139
prefill so yeah at some point we will

302
00:15:07,139 --> 00:15:09,060
declare Victory on this Gathering

303
00:15:09,060 --> 00:15:10,440
activity

304
00:15:10,440 --> 00:15:12,540
but really the question is whether this

305
00:15:12,540 --> 00:15:15,000
is the right way to do how do we get

306
00:15:15,000 --> 00:15:19,320
people who register a UI scheme to

307
00:15:19,320 --> 00:15:21,060
actually think about whether they should

308
00:15:21,060 --> 00:15:24,540
be registering a number for Cris as well

309
00:15:24,540 --> 00:15:26,639
I mean it's not not disaster if they

310
00:15:26,639 --> 00:15:29,579
don't would it's just less efficient

311
00:15:29,579 --> 00:15:32,100
so next slide

312
00:15:32,100 --> 00:15:37,019
during the hackathon uh an idea came up

313
00:15:37,019 --> 00:15:42,240
and the reason the idea came up is that

314
00:15:42,240 --> 00:15:45,600
the URI scheme registry

315
00:15:45,600 --> 00:15:48,779
already had a column

316
00:15:48,779 --> 00:15:50,639
added to it

317
00:15:50,639 --> 00:15:54,320
in the past so when when on your eyes

318
00:15:54,320 --> 00:15:58,079
needed to needed an indication on the UI

319
00:15:58,079 --> 00:16:01,320
scheme whether that your ice cream has

320
00:16:01,320 --> 00:16:04,740
um when on your eyes or not a column was

321
00:16:04,740 --> 00:16:07,199
added to the your ice cream register

322
00:16:07,199 --> 00:16:10,639
which is defined in 7595

323
00:16:10,639 --> 00:16:13,680
that provides the information

324
00:16:13,680 --> 00:16:15,540
essentially a Boolean Value Plus a

325
00:16:15,540 --> 00:16:18,420
reference to the RFC in which this is

326
00:16:18,420 --> 00:16:19,740
described

327
00:16:19,740 --> 00:16:24,420
so why don't we just add another column

328
00:16:24,420 --> 00:16:27,120
with this number

329
00:16:27,120 --> 00:16:29,100
so people who want to add something to

330
00:16:29,100 --> 00:16:32,519
the UI registry and look in there and

331
00:16:32,519 --> 00:16:36,660
and want to emulate match the existing

332
00:16:36,660 --> 00:16:37,620
entries

333
00:16:37,620 --> 00:16:40,019
they get kind of uh

334
00:16:40,019 --> 00:16:45,680
uh they they get LED nudged to actually

335
00:16:45,680 --> 00:16:49,920
register a number if that is Meaningful

336
00:16:49,920 --> 00:16:53,399
I mean registering a number too many is

337
00:16:53,399 --> 00:16:56,040
using up our space but we we are talking

338
00:16:56,040 --> 00:16:59,100
about 100 permanent

339
00:16:59,100 --> 00:17:01,560
UI scheme registrations at this point in

340
00:17:01,560 --> 00:17:04,380
time so before we even

341
00:17:04,380 --> 00:17:07,520
leave the first bite a lot of additional

342
00:17:07,520 --> 00:17:10,380
registrations will have to be done so we

343
00:17:10,380 --> 00:17:12,900
don't have a problem with that

344
00:17:12,900 --> 00:17:16,500
so that's really something that we as a

345
00:17:16,500 --> 00:17:17,459
working group

346
00:17:17,459 --> 00:17:19,559
try to prevent

347
00:17:19,559 --> 00:17:23,339
uh impinging on somebody else's space

348
00:17:23,339 --> 00:17:26,220
and meddling with that we don't do that

349
00:17:26,220 --> 00:17:28,199
uh but in this case it may be worth it

350
00:17:28,199 --> 00:17:31,080
and it's they're pretty innocuous thing

351
00:17:31,080 --> 00:17:33,059
so that that's what we are currently

352
00:17:33,059 --> 00:17:36,179
thinking about and I would like love to

353
00:17:36,179 --> 00:17:36,900
get

354
00:17:36,900 --> 00:17:39,960
uh some feedback for that there's a

355
00:17:39,960 --> 00:17:42,000
comment in the chat from Francesca or

356
00:17:42,000 --> 00:17:45,059
add the note to the Ayana registry and

357
00:17:45,059 --> 00:17:47,580
make sure Ayana asks the question with a

358
00:17:47,580 --> 00:17:51,840
pointer to the new register yes

359
00:17:51,840 --> 00:17:56,340
but yeah I mean why have two tables when

360
00:17:56,340 --> 00:17:58,020
the information can go into one so that

361
00:17:58,020 --> 00:17:59,760
that's the database person and we're

362
00:17:59,760 --> 00:18:01,919
speaking

363
00:18:01,919 --> 00:18:04,080
um yeah but we have to discuss what what

364
00:18:04,080 --> 00:18:06,299
what's the best way to do this

365
00:18:06,299 --> 00:18:09,059
but the important thing is that the the

366
00:18:09,059 --> 00:18:11,539
registry the Ayana page for the registry

367
00:18:11,539 --> 00:18:13,679
contains the information that there is

368
00:18:13,679 --> 00:18:16,020
the opportunity to get a number

369
00:18:16,020 --> 00:18:18,780
uh with the registration of the scheme

370
00:18:18,780 --> 00:18:20,760
Market

371
00:18:20,760 --> 00:18:23,820
so uh yeah but please look at the Wiki

372
00:18:23,820 --> 00:18:24,600
page

373
00:18:24,600 --> 00:18:27,419
that was mentioned on the previous slide

374
00:18:27,419 --> 00:18:31,620
and to see whether your favorite iot

375
00:18:31,620 --> 00:18:36,120
uh UI scheme actually is discovered

376
00:18:36,120 --> 00:18:39,360
so that that's the big one well it's not

377
00:18:39,360 --> 00:18:42,480
big but the largest one next slide and

378
00:18:42,480 --> 00:18:44,700
we have a few more issues

379
00:18:44,700 --> 00:18:48,179
uh open that essentially all have a

380
00:18:48,179 --> 00:18:52,500
resolution already in the GitHub issue

381
00:18:52,500 --> 00:18:55,080
discussion but the resolution needs to

382
00:18:55,080 --> 00:18:55,799
be

383
00:18:55,799 --> 00:18:59,039
written up we plan to have this done

384
00:18:59,039 --> 00:19:01,559
before this IDF but it didn't

385
00:19:01,559 --> 00:19:05,059
uh happen so uh the the ideas

386
00:19:05,059 --> 00:19:08,760
that we will do this now and use the

387
00:19:08,760 --> 00:19:09,419
next

388
00:19:09,419 --> 00:19:13,440
uh core interim on November 23rd uh to

389
00:19:13,440 --> 00:19:15,179
finish this up

390
00:19:15,179 --> 00:19:16,860
and of course they're pretty important

391
00:19:16,860 --> 00:19:22,200
issue here is uh having test vectors

392
00:19:22,200 --> 00:19:24,780
so how do people know that their CRI

393
00:19:24,780 --> 00:19:27,059
implementation is

394
00:19:27,059 --> 00:19:29,178
um

395
00:19:29,520 --> 00:19:33,240
approximately correct and uh of course

396
00:19:33,240 --> 00:19:35,100
we don't want to fill this draft with

397
00:19:35,100 --> 00:19:37,860
with uh fill the specification with test

398
00:19:37,860 --> 00:19:40,919
vectors but where test vectors actually

399
00:19:40,919 --> 00:19:42,320
are

400
00:19:42,320 --> 00:19:45,419
illustrating the way Cris work we want

401
00:19:45,419 --> 00:19:46,919
them in an appendix

402
00:19:46,919 --> 00:19:49,980
so we will uh

403
00:19:49,980 --> 00:19:53,059
make one more round on the test vectors

404
00:19:53,059 --> 00:19:56,039
and then select a few to add to the

405
00:19:56,039 --> 00:19:59,480
appendix next slide

406
00:19:59,580 --> 00:20:03,960
so uh yeah the idea is to work a little

407
00:20:03,960 --> 00:20:06,780
bit more on it to the next interim

408
00:20:06,780 --> 00:20:09,299
to decide the remaining issues

409
00:20:09,299 --> 00:20:12,000
we submit a dash 12.

410
00:20:12,000 --> 00:20:17,220
do working plus call and profit

411
00:20:17,220 --> 00:20:20,480
any comments on that

412
00:20:22,140 --> 00:20:24,919
nothing on General

413
00:20:27,360 --> 00:20:29,280
good there's comments for you in the

414
00:20:29,280 --> 00:20:31,080
chat that are not requesting to be

415
00:20:31,080 --> 00:20:33,059
relayed right now and you can read later

416
00:20:33,059 --> 00:20:34,980
the comment said

417
00:20:34,980 --> 00:20:36,740
yes

418
00:20:36,740 --> 00:20:38,940
there are comments for you in the chat

419
00:20:38,940 --> 00:20:43,200
not urgent okay yeah

420
00:20:43,200 --> 00:20:44,820
great

421
00:20:44,820 --> 00:20:47,640
so Bill I think your next

422
00:20:47,640 --> 00:20:50,539
thank you Carson

423
00:20:56,720 --> 00:21:00,140
control myself

424
00:21:10,039 --> 00:21:12,419
okay I'm left-handed so I'm going to

425
00:21:12,419 --> 00:21:14,660
hold the mic the other way

426
00:21:14,660 --> 00:21:16,799
hopefully this works

427
00:21:16,799 --> 00:21:19,260
hello everybody so uh this is the

428
00:21:19,260 --> 00:21:22,140
presentation for

429
00:21:22,140 --> 00:21:24,900
um a working group document conditional

430
00:21:24,900 --> 00:21:27,480
attributes for uh constrained restful

431
00:21:27,480 --> 00:21:29,280
environments so it's a pretty much of a

432
00:21:29,280 --> 00:21:31,919
mouthful but anyway it's conditional

433
00:21:31,919 --> 00:21:34,500
observed pretty much now

434
00:21:34,500 --> 00:21:36,840
um there's not very many slides here the

435
00:21:36,840 --> 00:21:39,299
if you can move it to the next page so

436
00:21:39,299 --> 00:21:41,580
the current status has been that the

437
00:21:41,580 --> 00:21:43,080
document has been in working group last

438
00:21:43,080 --> 00:21:44,400
call for a while

439
00:21:44,400 --> 00:21:47,820
uh we received one review Thanks Marco

440
00:21:47,820 --> 00:21:50,039
for it uh if you're interested in the

441
00:21:50,039 --> 00:21:52,320
review you can click on the URL and then

442
00:21:52,320 --> 00:21:54,299
you'd see how extensive it was

443
00:21:54,299 --> 00:21:56,100
uh

444
00:21:56,100 --> 00:21:59,340
myself is the editor I I opened up uh

445
00:21:59,340 --> 00:22:03,179
issues for every uh every little part

446
00:22:03,179 --> 00:22:06,600
that uh Marco Marco remarked upon so in

447
00:22:06,600 --> 00:22:08,460
total we had about 20 issues that were

448
00:22:08,460 --> 00:22:10,440
open on GitHub

449
00:22:10,440 --> 00:22:13,140
um 19th are closed one is still open

450
00:22:13,140 --> 00:22:15,419
next slide

451
00:22:15,419 --> 00:22:17,340
so the full the full list of the working

452
00:22:17,340 --> 00:22:20,159
group uh last call review comments are

453
00:22:20,159 --> 00:22:22,559
at that URL you can see them all

454
00:22:22,559 --> 00:22:25,260
uh like I said 20 issues 19 Clause wants

455
00:22:25,260 --> 00:22:26,700
to open

456
00:22:26,700 --> 00:22:28,500
um the majority of these issues were

457
00:22:28,500 --> 00:22:30,000
editorial in nature so it wasn't very

458
00:22:30,000 --> 00:22:32,580
difficult to to correct them

459
00:22:32,580 --> 00:22:36,000
um one close issue was just uh

460
00:22:36,000 --> 00:22:39,960
referring to RFC 7252 and RFC 7641 for

461
00:22:39,960 --> 00:22:42,240
the focal weapon and observe to be

462
00:22:42,240 --> 00:22:44,640
normative references and instead of

463
00:22:44,640 --> 00:22:46,559
informative

464
00:22:46,559 --> 00:22:49,260
and um then one other closed issue was

465
00:22:49,260 --> 00:22:52,260
just about a clarification uh to avoid

466
00:22:52,260 --> 00:22:56,220
the um draft talking about uh value

467
00:22:56,220 --> 00:22:59,159
changes and and transmitting values and

468
00:22:59,159 --> 00:23:01,260
instead considering state state

469
00:23:01,260 --> 00:23:04,080
representations and state changes

470
00:23:04,080 --> 00:23:06,120
so so that was done

471
00:23:06,120 --> 00:23:08,700
um there's one open issue still left it

472
00:23:08,700 --> 00:23:11,039
requires a minor code review I hope that

473
00:23:11,039 --> 00:23:12,659
can be done by this week

474
00:23:12,659 --> 00:23:14,460
so that should be closed very soon as

475
00:23:14,460 --> 00:23:15,919
well

476
00:23:15,919 --> 00:23:19,020
uh next slide so um that's it basically

477
00:23:19,020 --> 00:23:23,520
we want to complete the remaining issue

478
00:23:23,520 --> 00:23:24,480
um

479
00:23:24,480 --> 00:23:26,280
more reviews are always welcome we've

480
00:23:26,280 --> 00:23:27,900
only got one so far we had some some

481
00:23:27,900 --> 00:23:29,580
others before before we went to a

482
00:23:29,580 --> 00:23:32,039
working group last call but obviously uh

483
00:23:32,039 --> 00:23:33,840
more reviews are always welcome

484
00:23:33,840 --> 00:23:36,059
now a question that came up was uh when

485
00:23:36,059 --> 00:23:38,580
I was discussing uh uh a little bit more

486
00:23:38,580 --> 00:23:40,980
about um getting more review as was

487
00:23:40,980 --> 00:23:42,299
whether we should request an early

488
00:23:42,299 --> 00:23:44,880
review from the iot directorate so I'll

489
00:23:44,880 --> 00:23:46,200
leave that to the working group to

490
00:23:46,200 --> 00:23:48,419
decide in the working group chess

491
00:23:48,419 --> 00:23:51,360
if that's a good idea or not

492
00:23:51,360 --> 00:23:53,760
and that's the only thing I have

493
00:23:53,760 --> 00:23:55,799
um the next slide would say thank you

494
00:23:55,799 --> 00:23:58,980
but um it might be premature yet if any

495
00:23:58,980 --> 00:24:00,000
questions

496
00:24:00,000 --> 00:24:03,020
would you like to take them

497
00:24:03,299 --> 00:24:05,280
yeah thanks Bill I heard of it

498
00:24:05,280 --> 00:24:08,100
personally volunteering to review uh

499
00:24:08,100 --> 00:24:09,539
already and then I think it's a good

500
00:24:09,539 --> 00:24:11,280
idea anyway to request an early review

501
00:24:11,280 --> 00:24:13,559
to the IIT directorate

502
00:24:13,559 --> 00:24:16,580
but I think we should

503
00:24:16,640 --> 00:24:19,380
go ahead

504
00:24:19,380 --> 00:24:21,480
thank you

505
00:24:21,480 --> 00:24:24,000
yes can you hear me

506
00:24:24,000 --> 00:24:26,220
uh yes we can hear you

507
00:24:26,220 --> 00:24:28,740
okay yes uh that would be nice to have

508
00:24:28,740 --> 00:24:31,200
it at the iot directorate so you

509
00:24:31,200 --> 00:24:33,360
basically can click into the button

510
00:24:33,360 --> 00:24:36,299
review request and then we take it

511
00:24:36,299 --> 00:24:39,840
no problem with that I I can't review it

512
00:24:39,840 --> 00:24:44,539
as well thank you yeah thank you thanks

513
00:24:46,860 --> 00:24:51,379
okay any other comments anyone

514
00:24:51,679 --> 00:24:54,360
so if not I think we move on to the next

515
00:24:54,360 --> 00:24:58,820
right presentation thanks a lot thanks

516
00:25:01,280 --> 00:25:05,059
oh it's costing again

517
00:25:10,100 --> 00:25:12,900
well this is a really short one

518
00:25:12,900 --> 00:25:15,740
uh

519
00:25:17,240 --> 00:25:18,780
2000

520
00:25:18,780 --> 00:25:21,120
12.

521
00:25:21,120 --> 00:25:23,460
um we invented this link format thing

522
00:25:23,460 --> 00:25:28,380
with which became RFC 66 90.

523
00:25:28,380 --> 00:25:31,140
and this link format has so-called

524
00:25:31,140 --> 00:25:33,120
Target attributes

525
00:25:33,120 --> 00:25:37,200
and uh yeah now this is coming up again

526
00:25:37,200 --> 00:25:39,840
so about 10 years in the making this

527
00:25:39,840 --> 00:25:43,940
draft it's already a dash or one because

528
00:25:43,940 --> 00:25:47,760
yeah again it has an initial initial

529
00:25:47,760 --> 00:25:50,220
set of registrations and then of course

530
00:25:50,220 --> 00:25:53,900
is growing all the time next slide

531
00:25:53,900 --> 00:25:57,559
so the the link from a Target attributes

532
00:25:57,559 --> 00:26:00,480
are really meant

533
00:26:00,480 --> 00:26:03,600
to to tell you with a link that may be

534
00:26:03,600 --> 00:26:05,880
in the resource directory or in the way

535
00:26:05,880 --> 00:26:06,960
known call

536
00:26:06,960 --> 00:26:09,299
information

537
00:26:09,299 --> 00:26:11,820
what kind of Link

538
00:26:11,820 --> 00:26:15,679
this is well that's what the relation

539
00:26:15,679 --> 00:26:19,919
says but also what you can expect to

540
00:26:19,919 --> 00:26:22,620
find at the destination of the link and

541
00:26:22,620 --> 00:26:24,299
what that's why these things are called

542
00:26:24,299 --> 00:26:26,159
Target attributes

543
00:26:26,159 --> 00:26:29,940
so uh we don't we didn't invent this

544
00:26:29,940 --> 00:26:33,720
but took this from the web linking RFC

545
00:26:33,720 --> 00:26:36,120
uh 59.88

546
00:26:36,120 --> 00:26:39,480
and that has things like media type

547
00:26:39,480 --> 00:26:42,539
so for instance for a link you you can

548
00:26:42,539 --> 00:26:45,179
get a hint what you're likely to find

549
00:26:45,179 --> 00:26:46,799
what kind of media type you are likely

550
00:26:46,799 --> 00:26:48,900
to find at the other end so you can

551
00:26:48,900 --> 00:26:51,120
decide not to use the link if you don't

552
00:26:51,120 --> 00:26:53,279
support the media type

553
00:26:53,279 --> 00:26:56,700
and for us in particular the the two

554
00:26:56,700 --> 00:26:59,100
target attributes RT and if

555
00:26:59,100 --> 00:27:01,679
uh were very important and that's why we

556
00:27:01,679 --> 00:27:05,340
put Registries for the values of RT and

557
00:27:05,340 --> 00:27:08,760
if into 6690.

558
00:27:08,760 --> 00:27:11,520
but we didn't put in a registry for the

559
00:27:11,520 --> 00:27:15,059
Target attributes because 5988 said this

560
00:27:15,059 --> 00:27:16,500
specification does not attempt to

561
00:27:16,500 --> 00:27:18,600
coordinate the names of the target

562
00:27:18,600 --> 00:27:22,320
attributes but provides a number of

563
00:27:22,320 --> 00:27:24,919
common Target attributes like media type

564
00:27:24,919 --> 00:27:28,620
for the link HTTP header which which we

565
00:27:28,620 --> 00:27:30,360
just copied

566
00:27:30,360 --> 00:27:34,200
so we did not put a registry in 66.90

567
00:27:34,200 --> 00:27:36,419
next slide

568
00:27:36,419 --> 00:27:43,320
so uh 5988 is is 10 years old and uh or

569
00:27:43,320 --> 00:27:46,080
a bit more than 10 years old and of

570
00:27:46,080 --> 00:27:47,960
course has seen a revision

571
00:27:47,960 --> 00:27:52,980
and that revision is 82 ath actually now

572
00:27:52,980 --> 00:27:54,900
says

573
00:27:54,900 --> 00:27:56,700
um those creating and maintaining

574
00:27:56,700 --> 00:28:00,059
serializations of web linking and being

575
00:28:00,059 --> 00:28:02,640
format obviously as a serialization

576
00:28:02,640 --> 00:28:04,980
of web linking should

577
00:28:04,980 --> 00:28:07,080
coordinate their target attributes to

578
00:28:07,080 --> 00:28:10,020
avoid conflicts in semantics Authentics

579
00:28:10,020 --> 00:28:13,679
and may Define their own Registries

580
00:28:13,679 --> 00:28:16,500
because we don't really have a very good

581
00:28:16,500 --> 00:28:18,600
way of doing coordination except in a

582
00:28:18,600 --> 00:28:21,840
registry that this is kind of an obvious

583
00:28:21,840 --> 00:28:24,600
uh thing to do now

584
00:28:24,600 --> 00:28:29,220
so uh yeah this we should have done this

585
00:28:29,220 --> 00:28:32,039
right at the time of 8288 came out for

586
00:28:32,039 --> 00:28:35,460
some reason this didn't happen but we

587
00:28:35,460 --> 00:28:38,880
already had a couple of close calls

588
00:28:38,880 --> 00:28:42,480
for people registering uh attributes or

589
00:28:42,480 --> 00:28:44,220
not registering using attributes

590
00:28:44,220 --> 00:28:47,760
describing attributes in an RFC or other

591
00:28:47,760 --> 00:28:51,179
document that had the same name and we

592
00:28:51,179 --> 00:28:53,640
we want to make this less likely so

593
00:28:53,640 --> 00:28:56,779
let's do this now

594
00:28:57,120 --> 00:28:59,520
um so the idea is to add a new

595
00:28:59,520 --> 00:29:02,700
sub-registry for Target attributes in

596
00:29:02,700 --> 00:29:05,100
the core parameters registry

597
00:29:05,100 --> 00:29:07,679
so in in the INR document you always

598
00:29:07,679 --> 00:29:10,260
have a web page

599
00:29:10,260 --> 00:29:13,200
which is the registry and then in this

600
00:29:13,200 --> 00:29:15,840
web page you have several Registries

601
00:29:15,840 --> 00:29:18,360
which are then called sub Registries the

602
00:29:18,360 --> 00:29:21,899
terminology is totally confusing

603
00:29:21,899 --> 00:29:24,659
um but anyway so the

604
00:29:24,659 --> 00:29:27,539
policy for this sub-registry

605
00:29:27,539 --> 00:29:30,360
would be expert review

606
00:29:30,360 --> 00:29:33,720
so the isg will select an expert that

607
00:29:33,720 --> 00:29:36,299
actually looks at each registration

608
00:29:36,299 --> 00:29:37,799
request

609
00:29:37,799 --> 00:29:40,860
and maybe helps this request become

610
00:29:40,860 --> 00:29:42,179
better by

611
00:29:42,179 --> 00:29:44,159
giving some information and at some

612
00:29:44,159 --> 00:29:46,260
point it gets accepted

613
00:29:46,260 --> 00:29:48,779
and we have some instructions to

614
00:29:48,779 --> 00:29:50,640
designated experts and I think these

615
00:29:50,640 --> 00:29:55,140
need to eat a little bit more work

616
00:29:55,140 --> 00:29:57,720
um so I the idea was

617
00:29:57,720 --> 00:30:00,059
uh well if somebody

618
00:30:00,059 --> 00:30:02,460
uh registered

619
00:30:02,460 --> 00:30:05,460
type or something

620
00:30:05,460 --> 00:30:07,919
um you would look whether this was

621
00:30:07,919 --> 00:30:10,260
something that is very specific to one

622
00:30:10,260 --> 00:30:12,620
ecosystem one corner

623
00:30:12,620 --> 00:30:16,080
of an ecosystem or whether it's widely

624
00:30:16,080 --> 00:30:18,480
used so this is the frugal

625
00:30:18,480 --> 00:30:20,340
thing

626
00:30:20,340 --> 00:30:24,960
and the other thing is what RFC 8126

627
00:30:24,960 --> 00:30:26,520
does not have

628
00:30:26,520 --> 00:30:29,640
is specification desired they have a

629
00:30:29,640 --> 00:30:31,559
specification required

630
00:30:31,559 --> 00:30:34,860
uh policy which says hey you have to put

631
00:30:34,860 --> 00:30:37,500
a specification in there and they have

632
00:30:37,500 --> 00:30:40,440
expert review which doesn't say anything

633
00:30:40,440 --> 00:30:42,779
about that and this is kind of in the

634
00:30:42,779 --> 00:30:45,480
middle so we we really expect people to

635
00:30:45,480 --> 00:30:49,620
do a specification unless uh there are

636
00:30:49,620 --> 00:30:51,779
good arguments not to do that

637
00:30:51,779 --> 00:30:54,480
and there is uh somebody in the queue

638
00:30:54,480 --> 00:30:57,659
let's go you want to go now or

639
00:30:57,659 --> 00:31:00,779
yeah I'm almost done

640
00:31:00,779 --> 00:31:03,720
um yeah the the other instruction

641
00:31:03,720 --> 00:31:05,820
is to use

642
00:31:05,820 --> 00:31:09,240
a lowercase letter followed by lowercase

643
00:31:09,240 --> 00:31:13,980
letters digits and minus signs

644
00:31:13,980 --> 00:31:16,140
um because they

645
00:31:16,140 --> 00:31:19,679
they the the ancestry of these web

646
00:31:19,679 --> 00:31:21,899
linking things

647
00:31:21,899 --> 00:31:24,240
really are email headers which were

648
00:31:24,240 --> 00:31:26,820
defined in the late 1970s

649
00:31:26,820 --> 00:31:30,000
they are case insensitive of course no

650
00:31:30,000 --> 00:31:34,140
no same person would design something be

651
00:31:34,140 --> 00:31:36,960
in case insensitive at this point but

652
00:31:36,960 --> 00:31:39,679
because of this this

653
00:31:39,679 --> 00:31:43,020
45-year ancestry

654
00:31:43,020 --> 00:31:44,820
um they are

655
00:31:44,820 --> 00:31:47,940
they need to be case insensitive and we

656
00:31:47,940 --> 00:31:49,919
are just saying you always register the

657
00:31:49,919 --> 00:31:53,580
lower case form so people get nudged to

658
00:31:53,580 --> 00:31:56,940
using that and reducing for fees

659
00:31:56,940 --> 00:31:59,720
next slide

660
00:31:59,940 --> 00:32:03,320
so this is the prefill

661
00:32:03,419 --> 00:32:05,640
um as you can see this has been pretty

662
00:32:05,640 --> 00:32:07,500
Lively

663
00:32:07,500 --> 00:32:10,620
um the href anchor Rel and Rev

664
00:32:10,620 --> 00:32:13,020
are essentially things that are not

665
00:32:13,020 --> 00:32:15,240
useful as Target attribute names because

666
00:32:15,240 --> 00:32:17,460
they have a different meaning in web

667
00:32:17,460 --> 00:32:21,480
linking a traveling media and title

668
00:32:21,480 --> 00:32:24,720
Rd finders Target attributes by 808 so

669
00:32:24,720 --> 00:32:27,480
they they are also gone

670
00:32:27,480 --> 00:32:30,059
rtif size

671
00:32:30,059 --> 00:32:33,179
are in the link format document content

672
00:32:33,179 --> 00:32:35,820
format is in the co-op document Ops is

673
00:32:35,820 --> 00:32:39,659
in the observed document JCT

674
00:32:39,659 --> 00:32:40,860
um

675
00:32:40,860 --> 00:32:43,440
JCP http

676
00:32:43,440 --> 00:32:45,120
HTT

677
00:32:45,120 --> 00:32:46,440
um it's in the

678
00:32:46,440 --> 00:32:49,620
HTTP mapping document

679
00:32:49,620 --> 00:32:52,440
um Oscar has a Target attribute

680
00:32:52,440 --> 00:32:54,779
okay that's the the published out of

681
00:32:54,779 --> 00:32:58,080
season obviously we put the pre-fill in

682
00:32:58,080 --> 00:33:00,179
in this document because the rfcs cannot

683
00:33:00,179 --> 00:33:02,460
be better actively changed to do the

684
00:33:02,460 --> 00:33:03,779
registration

685
00:33:03,779 --> 00:33:06,720
and then we have several drafts that are

686
00:33:06,720 --> 00:33:07,980
in flight

687
00:33:07,980 --> 00:33:12,200
and this has two examples

688
00:33:12,200 --> 00:33:17,100
for for drafts one is IDF call Oscar ad

689
00:33:17,100 --> 00:33:20,460
hoc which has half a dozen

690
00:33:20,460 --> 00:33:22,919
of Target attributes

691
00:33:22,919 --> 00:33:26,340
and uh yeah let's see which of the two

692
00:33:26,340 --> 00:33:29,220
draft is published first and that

693
00:33:29,220 --> 00:33:32,299
actually uh

694
00:33:32,519 --> 00:33:35,340
decides where the registration will be

695
00:33:35,340 --> 00:33:36,720
made

696
00:33:36,720 --> 00:33:40,679
and uh draft you look it's called

697
00:33:40,679 --> 00:33:43,860
Discovery has another set of

698
00:33:43,860 --> 00:33:47,100
Target issues pretty many actually

699
00:33:47,100 --> 00:33:50,460
and uh yeah they they since that

700
00:33:50,460 --> 00:33:52,799
document is not in a really in a race to

701
00:33:52,799 --> 00:33:55,019
completion with

702
00:33:55,019 --> 00:33:57,679
um this uh

703
00:33:57,679 --> 00:34:00,240
specification they probably will be

704
00:34:00,240 --> 00:34:01,679
registered there because the target

705
00:34:01,679 --> 00:34:04,140
attributes vertices should be in place

706
00:34:04,140 --> 00:34:05,340
by the time

707
00:34:05,340 --> 00:34:07,919
uh that happens so we have to manage

708
00:34:07,919 --> 00:34:10,619
this preview but it's really historical

709
00:34:10,619 --> 00:34:13,440
work to make sure we have all of them

710
00:34:13,440 --> 00:34:14,940
and again

711
00:34:14,940 --> 00:34:17,040
if you have a Target attribute you know

712
00:34:17,040 --> 00:34:19,020
that

713
00:34:19,020 --> 00:34:21,480
something in the IGA for some other

714
00:34:21,480 --> 00:34:26,219
industry organization ocf Oma users we

715
00:34:26,219 --> 00:34:27,960
probably would like to know to do this

716
00:34:27,960 --> 00:34:29,159
briefly

717
00:34:29,159 --> 00:34:31,320
next slide and we should replace the

718
00:34:31,320 --> 00:34:33,839
underscores with dashes

719
00:34:33,839 --> 00:34:39,719
oh yes also in the referred document yes

720
00:34:39,719 --> 00:34:42,119
yeah we always have that problem but

721
00:34:42,119 --> 00:34:44,940
it's really really funny so a b and F

722
00:34:44,940 --> 00:34:47,399
for instance doesn't allow underscores

723
00:34:47,399 --> 00:34:49,980
in identifiers and each time you're

724
00:34:49,980 --> 00:34:51,780
reviewing someone who's coming in

725
00:34:51,780 --> 00:34:52,859
someone

726
00:34:52,859 --> 00:34:55,500
it's ABN F who's coming in you they use

727
00:34:55,500 --> 00:34:57,300
underscores and the identifiers because

728
00:34:57,300 --> 00:34:59,160
they're programming languages

729
00:34:59,160 --> 00:35:01,740
forced them to do that but a b and F was

730
00:35:01,740 --> 00:35:03,240
written by people who were programming

731
00:35:03,240 --> 00:35:05,940
in list where minus signs are normally

732
00:35:05,940 --> 00:35:08,520
identified as anyway uh next slide I

733
00:35:08,520 --> 00:35:10,619
have nine seconds let's ask on the Queue

734
00:35:10,619 --> 00:35:12,420
and those are Christian so I don't want

735
00:35:12,420 --> 00:35:16,820
they want they want to jump in now okay

736
00:35:18,000 --> 00:35:20,160
and no need to rush in general because

737
00:35:20,160 --> 00:35:24,420
we are minus 10 minutes okay very good

738
00:35:24,420 --> 00:35:26,700
yeah so first of all I support this

739
00:35:26,700 --> 00:35:29,520
draft and adoption because it's I think

740
00:35:29,520 --> 00:35:31,440
we have hit hit this issue a couple of

741
00:35:31,440 --> 00:35:33,060
times in the past

742
00:35:33,060 --> 00:35:36,300
so that that sounds good to have this uh

743
00:35:36,300 --> 00:35:37,980
also pre-filled

744
00:35:37,980 --> 00:35:40,320
and yeah make it also available to other

745
00:35:40,320 --> 00:35:43,500
standards bodies that want to submit

746
00:35:43,500 --> 00:35:44,940
their uh

747
00:35:44,940 --> 00:35:47,880
elements with maybe a pointer to their

748
00:35:47,880 --> 00:35:49,820
specifications

749
00:35:49,820 --> 00:35:52,079
one thing I was just looking at you

750
00:35:52,079 --> 00:35:54,599
mentioned expert review and

751
00:35:54,599 --> 00:35:57,480
I did see that we have currently the

752
00:35:57,480 --> 00:35:59,460
process of expert reviewing someone

753
00:35:59,460 --> 00:36:01,800
sends a request I recall the last

754
00:36:01,800 --> 00:36:04,440
request was in August and there was no

755
00:36:04,440 --> 00:36:07,320
reply yet to it so it's not particular

756
00:36:07,320 --> 00:36:10,020
quick process as far as I can see maybe

757
00:36:10,020 --> 00:36:12,000
we did do something but at least it was

758
00:36:12,000 --> 00:36:14,579
not visible on the core parameters

759
00:36:14,579 --> 00:36:16,200
mailing list yeah do you remember what

760
00:36:16,200 --> 00:36:17,960
that request was

761
00:36:17,960 --> 00:36:21,060
yeah it was I think for one of the

762
00:36:21,060 --> 00:36:22,740
standards organizations like something

763
00:36:22,740 --> 00:36:24,720
like old ocf or

764
00:36:24,720 --> 00:36:26,820
well I just answer the global platforms

765
00:36:26,820 --> 00:36:29,820
one which maybe that one but

766
00:36:29,820 --> 00:36:32,820
okay okay well it was not I just checked

767
00:36:32,820 --> 00:36:35,400
it was not in the email archive yet uh

768
00:36:35,400 --> 00:36:38,040
yeah maybe it's not not answered to the

769
00:36:38,040 --> 00:36:40,619
list yeah that's the problem maybe yeah

770
00:36:40,619 --> 00:36:44,099
so we we don't really have a good way to

771
00:36:44,099 --> 00:36:46,040
get a transparent

772
00:36:46,040 --> 00:36:49,260
sequence of messages between

773
00:36:49,260 --> 00:36:51,780
the registrant

774
00:36:51,780 --> 00:36:55,200
Ayana the experts and the working group

775
00:36:55,200 --> 00:36:57,000
that actually may be interested in this

776
00:36:57,000 --> 00:36:59,820
subject and right now we usually have

777
00:36:59,820 --> 00:37:02,339
bilateral messages and that doesn't make

778
00:37:02,339 --> 00:37:03,119
sense

779
00:37:03,119 --> 00:37:04,980
but it's currently the way things are

780
00:37:04,980 --> 00:37:07,380
being done and I think we need to to at

781
00:37:07,380 --> 00:37:09,300
some point need to change this yeah

782
00:37:09,300 --> 00:37:11,280
because our request comes in but but you

783
00:37:11,280 --> 00:37:13,740
can't see if it was granted or not or if

784
00:37:13,740 --> 00:37:17,040
anyone responded for example yes so for

785
00:37:17,040 --> 00:37:19,619
instance we we might instruct

786
00:37:19,619 --> 00:37:21,599
Ayana to actually send registration

787
00:37:21,599 --> 00:37:24,060
requests to the core parameters list

788
00:37:24,060 --> 00:37:26,820
and and yeah ask people to actually see

789
00:37:26,820 --> 00:37:29,640
that list on on all communities

790
00:37:29,640 --> 00:37:31,980
okay but it's something to consider

791
00:37:31,980 --> 00:37:35,160
as an improvement then I think and and a

792
00:37:35,160 --> 00:37:36,960
couple of things you mentioned like the

793
00:37:36,960 --> 00:37:39,660
don't use underscores but but hyphens

794
00:37:39,660 --> 00:37:41,520
and only lowercase I think that's also

795
00:37:41,520 --> 00:37:43,579
excellent idea for this uh

796
00:37:43,579 --> 00:37:47,119
yep thanks

797
00:37:47,880 --> 00:37:50,240
Christian

798
00:37:50,240 --> 00:37:53,099
uh does this document shoot this

799
00:37:53,099 --> 00:37:55,880
document or did you plan to um

800
00:37:55,880 --> 00:37:59,280
address the topic of whether the

801
00:37:59,280 --> 00:38:01,680
semantics of that attribute pertain to

802
00:38:01,680 --> 00:38:04,440
the link itself or to the link Target

803
00:38:04,440 --> 00:38:06,599
because all the examples that I've seen

804
00:38:06,599 --> 00:38:12,119
here except for title as defined in a288

805
00:38:12,119 --> 00:38:14,280
um are about the target independently of

806
00:38:14,280 --> 00:38:16,680
the link whereas other attributes could

807
00:38:16,680 --> 00:38:19,440
be about the target when used through

808
00:38:19,440 --> 00:38:22,800
that link or even the link itself as it

809
00:38:22,800 --> 00:38:25,520
was in some iterations of dining link

810
00:38:25,520 --> 00:38:28,020
will this document make any statement to

811
00:38:28,020 --> 00:38:30,359
that or we'll just talk about the

812
00:38:30,359 --> 00:38:32,040
formalities of registering and then

813
00:38:32,040 --> 00:38:35,300
leave this semantics as they are

814
00:38:35,520 --> 00:38:37,859
well that's a really good question I

815
00:38:37,859 --> 00:38:39,300
don't think we actually want to change

816
00:38:39,300 --> 00:38:41,880
82 88 or

817
00:38:41,880 --> 00:38:43,880
um

818
00:38:46,500 --> 00:38:48,180
go ahead

819
00:38:48,180 --> 00:38:50,640
um it wouldn't do anything about 8288 it

820
00:38:50,640 --> 00:38:52,200
would just be about

821
00:38:52,200 --> 00:38:56,579
um which attributes can be registered

822
00:38:56,579 --> 00:38:58,260
but

823
00:38:58,260 --> 00:39:01,320
yeah but but 8288 doesn't give you a way

824
00:39:01,320 --> 00:39:02,460
to

825
00:39:02,460 --> 00:39:04,320
add attributes that are not targeted

826
00:39:04,320 --> 00:39:06,359
attributes if I remember correctly no

827
00:39:06,359 --> 00:39:08,460
the terminology is a bit confusing um

828
00:39:08,460 --> 00:39:11,579
they are called Target attributes but

829
00:39:11,579 --> 00:39:15,060
they describe a property of quote the

830
00:39:15,060 --> 00:39:18,599
linked the link or its Target

831
00:39:18,599 --> 00:39:22,079
so especially the one example 8288 gives

832
00:39:22,079 --> 00:39:25,260
for title is next chapter which is only

833
00:39:25,260 --> 00:39:27,000
a valid name when following this

834
00:39:27,000 --> 00:39:29,280
particular link and not a property of of

835
00:39:29,280 --> 00:39:31,380
the target your of the target Resource

836
00:39:31,380 --> 00:39:33,839
as a whole

837
00:39:33,839 --> 00:39:37,079
okay but that's just then my my mistake

838
00:39:37,079 --> 00:39:39,060
of putting title in the second line on

839
00:39:39,060 --> 00:39:41,820
the of this slide instead of the first

840
00:39:41,820 --> 00:39:43,680
line

841
00:39:43,680 --> 00:39:47,339
but are people supposed to put in more

842
00:39:47,339 --> 00:39:49,200
information that really is about the

843
00:39:49,200 --> 00:39:50,820
link and not the target

844
00:39:50,820 --> 00:39:54,480
I I don't I didn't read 8288 that way

845
00:39:54,480 --> 00:39:57,359
and that's maybe worth examining but the

846
00:39:57,359 --> 00:39:59,460
type the title is an example the title

847
00:39:59,460 --> 00:40:01,260
is an example of that and the authors

848
00:40:01,260 --> 00:40:03,780
generally and I've I've made back and

849
00:40:03,780 --> 00:40:05,820
forth with uh with them

850
00:40:05,820 --> 00:40:09,780
um assume that it could also be just

851
00:40:09,780 --> 00:40:11,760
um only about this particular way of

852
00:40:11,760 --> 00:40:13,800
accessing that resource or possibly even

853
00:40:13,800 --> 00:40:18,320
the uh the the link on its own

854
00:40:18,540 --> 00:40:20,339
okay I think that that's really

855
00:40:20,339 --> 00:40:22,920
interesting uh I I hope this doesn't

856
00:40:22,920 --> 00:40:26,640
sort of fall into getting this document

857
00:40:26,640 --> 00:40:29,160
out quickly because I think that that's

858
00:40:29,160 --> 00:40:30,660
a pretty fundamental

859
00:40:30,660 --> 00:40:33,359
question about web linking that we would

860
00:40:33,359 --> 00:40:35,520
have to discuss with the HTTP people as

861
00:40:35,520 --> 00:40:36,480
well

862
00:40:36,480 --> 00:40:40,320
because we we just have copied that part

863
00:40:40,320 --> 00:40:43,320
and simplify that a little bit

864
00:40:43,320 --> 00:40:45,540
and and either way just one more comment

865
00:40:45,540 --> 00:40:47,280
on the document registered for that

866
00:40:47,280 --> 00:40:49,140
under the registry as a whole

867
00:40:49,140 --> 00:40:52,560
um Coral will very much want to add a

868
00:40:52,560 --> 00:40:54,540
column there that says and by the way

869
00:40:54,540 --> 00:40:56,040
the mapping is defined like this and

870
00:40:56,040 --> 00:40:59,220
that independently of what the answer to

871
00:40:59,220 --> 00:41:01,380
my first question is it's just if the

872
00:41:01,380 --> 00:41:02,940
answer to the first question is yeah it

873
00:41:02,940 --> 00:41:04,320
could be any of those

874
00:41:04,320 --> 00:41:05,940
um that second column will be a lot more

875
00:41:05,940 --> 00:41:08,240
complex

876
00:41:08,700 --> 00:41:10,560
yeah maybe we should get used to the

877
00:41:10,560 --> 00:41:12,540
idea of adding adding columns and

878
00:41:12,540 --> 00:41:15,900
Registries and in a later document

879
00:41:15,900 --> 00:41:18,420
um so that because the we probably know

880
00:41:18,420 --> 00:41:20,760
what how the race between the target

881
00:41:20,760 --> 00:41:23,040
attribute registry and coral is going to

882
00:41:23,040 --> 00:41:24,359
go and

883
00:41:24,359 --> 00:41:27,599
so we can't really have a column in

884
00:41:27,599 --> 00:41:29,400
there for a document that that isn't

885
00:41:29,400 --> 00:41:30,780
done yet

886
00:41:30,780 --> 00:41:33,300
uh

887
00:41:33,300 --> 00:41:37,460
yeah but let's discuss this

888
00:41:37,560 --> 00:41:39,960
good

889
00:41:39,960 --> 00:41:41,220
yeah

890
00:41:41,220 --> 00:41:44,040
last slide

891
00:41:44,040 --> 00:41:47,099
so uh this is still an individual draft

892
00:41:47,099 --> 00:41:48,720
we have discussed it

893
00:41:48,720 --> 00:41:51,420
I don't know how often uh

894
00:41:51,420 --> 00:41:54,599
in the last 10 years but somebody had to

895
00:41:54,599 --> 00:41:56,339
sit down and actually write the thing

896
00:41:56,339 --> 00:41:59,040
that has now happened and the next step

897
00:41:59,040 --> 00:42:00,300
would be to

898
00:42:00,300 --> 00:42:03,660
make this a working group document

899
00:42:03,660 --> 00:42:05,460
I think it's pretty clear that this is

900
00:42:05,460 --> 00:42:07,140
within our Charter because it's

901
00:42:07,140 --> 00:42:08,940
essentially just to maintenance

902
00:42:08,940 --> 00:42:12,119
uh housekeeping activity

903
00:42:12,119 --> 00:42:14,640
but of course it's always nice to get

904
00:42:14,640 --> 00:42:17,460
some confirmation from from the 80s

905
00:42:17,460 --> 00:42:18,960
about that

906
00:42:18,960 --> 00:42:22,260
and then do some working group work like

907
00:42:22,260 --> 00:42:24,060
answer questions

908
00:42:24,060 --> 00:42:27,180
uh do a working glass call and finally

909
00:42:27,180 --> 00:42:29,720
profit

910
00:42:31,380 --> 00:42:34,040
thank you

911
00:42:36,480 --> 00:42:39,619
okay great

912
00:42:39,839 --> 00:42:42,720
yeah I'd be happy to open for an option

913
00:42:42,720 --> 00:42:44,720
called sonish

914
00:42:44,720 --> 00:42:48,439
is there any objection

915
00:42:48,960 --> 00:42:50,820
I think we can start an adoption call

916
00:42:50,820 --> 00:42:54,440
this week great

917
00:42:57,180 --> 00:42:59,779
thank you

918
00:43:19,200 --> 00:43:22,098
yes

919
00:43:35,060 --> 00:43:38,760
thanks yeah very well okay hi everyone

920
00:43:38,760 --> 00:43:40,980
this is Marco uh this is an update on

921
00:43:40,980 --> 00:43:43,560
the group Oscar document uh next slide

922
00:43:43,560 --> 00:43:45,060
please

923
00:43:45,060 --> 00:43:47,160
yeah uh before the cutoff we submitted

924
00:43:47,160 --> 00:43:51,000
uh version 16 uh essentially merging

925
00:43:51,000 --> 00:43:54,900
um a single Consolidated PR uh 98 and

926
00:43:54,900 --> 00:43:56,520
covering fundamentally

927
00:43:56,520 --> 00:43:59,700
um four things uh number one is the

928
00:43:59,700 --> 00:44:02,400
major one and it was about

929
00:44:02,400 --> 00:44:04,800
um improving the handling of some

930
00:44:04,800 --> 00:44:07,260
particular responses that can happen

931
00:44:07,260 --> 00:44:09,359
during the group of score communication

932
00:44:09,359 --> 00:44:11,280
that we noticed was not completely

933
00:44:11,280 --> 00:44:14,760
handled uh number two was uh also a

934
00:44:14,760 --> 00:44:16,920
little trick to do to downgrade the must

935
00:44:16,920 --> 00:44:20,400
to should to not lock down uh possible

936
00:44:20,400 --> 00:44:23,640
cases well three and four uh were well

937
00:44:23,640 --> 00:44:25,140
extended editorials if you want

938
00:44:25,140 --> 00:44:27,000
improving the the presentation of the

939
00:44:27,000 --> 00:44:29,099
security properties of group of score to

940
00:44:29,099 --> 00:44:31,980
be more aligned with those of Oscar and

941
00:44:31,980 --> 00:44:34,200
the way those are presented and

942
00:44:34,200 --> 00:44:36,839
improving the presentation of the um the

943
00:44:36,839 --> 00:44:38,700
properties of the features that the

944
00:44:38,700 --> 00:44:41,640
pairwise mode has uh and inherits

945
00:44:41,640 --> 00:44:44,760
actually from the group mode we've had

946
00:44:44,760 --> 00:44:46,680
another discussion about this PR with a

947
00:44:46,680 --> 00:44:48,660
crystals document Shepard that

948
00:44:48,660 --> 00:44:51,180
encouraged us to not wait for his

949
00:44:51,180 --> 00:44:53,819
Shepherd review and write up before

950
00:44:53,819 --> 00:44:56,760
um going on um with this PR and this

951
00:44:56,760 --> 00:44:58,619
merging uh still of course will

952
00:44:58,619 --> 00:45:00,660
appreciate follow the comments from him

953
00:45:00,660 --> 00:45:02,180
and others

954
00:45:02,180 --> 00:45:05,160
and he actually realized that especially

955
00:45:05,160 --> 00:45:06,720
point one had a more General

956
00:45:06,720 --> 00:45:08,220
applicability in the context of

957
00:45:08,220 --> 00:45:10,920
non-traditional responses for which

958
00:45:10,920 --> 00:45:12,960
um an issue on the corresponding GitHub

959
00:45:12,960 --> 00:45:16,800
wrapper was also opened uh Eric also

960
00:45:16,800 --> 00:45:19,200
before emerging very carefully reviewed

961
00:45:19,200 --> 00:45:21,960
that VR we're very thankful uh for that

962
00:45:21,960 --> 00:45:23,940
So eventually we merged that and I'm

963
00:45:23,940 --> 00:45:26,160
mostly going to go through

964
00:45:26,160 --> 00:45:27,660
um well basically the content of the pr

965
00:45:27,660 --> 00:45:29,819
that was merged in version 16 and and

966
00:45:29,819 --> 00:45:31,619
for the end I have

967
00:45:31,619 --> 00:45:33,540
um a little open point that came up uh

968
00:45:33,540 --> 00:45:35,640
post cut off which is also related to

969
00:45:35,640 --> 00:45:38,460
the Target attribute registry discussed

970
00:45:38,460 --> 00:45:40,500
in the previous presentation uh by

971
00:45:40,500 --> 00:45:41,579
carsten

972
00:45:41,579 --> 00:45:44,280
uh so next slide please

973
00:45:44,280 --> 00:45:46,079
yeah and I actually start with with easy

974
00:45:46,079 --> 00:45:49,380
one uh number two we downgraded um a

975
00:45:49,380 --> 00:45:52,740
must to shoot uh about the use of the

976
00:45:52,740 --> 00:45:54,780
group mode for protecting a group

977
00:45:54,780 --> 00:45:56,940
request intended to multiple recipients

978
00:45:56,940 --> 00:45:59,700
uh we actually had uh already an

979
00:45:59,700 --> 00:46:02,339
exception uh under our nose uh for a

980
00:46:02,339 --> 00:46:03,960
while there may be probably more that

981
00:46:03,960 --> 00:46:06,599
we're not even imagining now but that

982
00:46:06,599 --> 00:46:09,780
was enough anyway to to switch

983
00:46:09,780 --> 00:46:11,819
um to a should

984
00:46:11,819 --> 00:46:14,520
uh next slide please

985
00:46:14,520 --> 00:46:17,400
uh right on the main thing uh handling

986
00:46:17,400 --> 00:46:19,980
of uh multiple responses uh I need to

987
00:46:19,980 --> 00:46:23,040
bring up some some context here why uh

988
00:46:23,040 --> 00:46:26,400
we had to to make some fix uh this is

989
00:46:26,400 --> 00:46:29,339
text quoted from the group comb base uh

990
00:46:29,339 --> 00:46:31,619
document and this text has been around

991
00:46:31,619 --> 00:46:34,980
for a couple of years now after changes

992
00:46:34,980 --> 00:46:38,400
in this direction that were uh discussed

993
00:46:38,400 --> 00:46:41,339
agreed and even confirmed later on at

994
00:46:41,339 --> 00:46:43,619
ITF 110 lastly and since then the text

995
00:46:43,619 --> 00:46:45,839
never changed

996
00:46:45,839 --> 00:46:47,640
um basically a cop client sending a

997
00:46:47,640 --> 00:46:50,339
group request to multiple recipients

998
00:46:50,339 --> 00:46:52,140
because of that preserves the token

999
00:46:52,140 --> 00:46:54,359
beyond the reception of a first response

1000
00:46:54,359 --> 00:46:56,579
and taking advantage of that in

1001
00:46:56,579 --> 00:46:59,520
principle a same server can send back

1002
00:46:59,520 --> 00:47:02,819
multiple responses uh not necessarily uh

1003
00:47:02,819 --> 00:47:05,880
as of certifications and the idea was to

1004
00:47:05,880 --> 00:47:08,040
leave the final decision about what to

1005
00:47:08,040 --> 00:47:09,900
do in that situation to the application

1006
00:47:09,900 --> 00:47:12,480
at the client and not the stock at the

1007
00:47:12,480 --> 00:47:14,339
client since the application of the

1008
00:47:14,339 --> 00:47:16,440
client can have more context to take a

1009
00:47:16,440 --> 00:47:18,060
better decision for that particular

1010
00:47:18,060 --> 00:47:19,980
application like considering only the

1011
00:47:19,980 --> 00:47:22,440
very last response from that server or

1012
00:47:22,440 --> 00:47:24,000
produce some kind of aggregation of

1013
00:47:24,000 --> 00:47:27,839
those whatever so this is the context uh

1014
00:47:27,839 --> 00:47:31,319
we we had and we consistently built on

1015
00:47:31,319 --> 00:47:33,780
um in group or score

1016
00:47:33,780 --> 00:47:35,819
um next slide please

1017
00:47:35,819 --> 00:47:38,280
yeah and considering that context well

1018
00:47:38,280 --> 00:47:41,400
we had a problem uh most was okay

1019
00:47:41,400 --> 00:47:44,400
already and basically the handling of a

1020
00:47:44,400 --> 00:47:47,160
single response uh to a center request

1021
00:47:47,160 --> 00:47:49,619
or multiple responses if they were

1022
00:47:49,619 --> 00:47:51,599
observed notifications

1023
00:47:51,599 --> 00:47:54,720
the problem was if a same server sent

1024
00:47:54,720 --> 00:47:56,000
multiple

1025
00:47:56,000 --> 00:47:59,040
non-modification responses to the same

1026
00:47:59,040 --> 00:48:01,380
group request and then there were two

1027
00:48:01,380 --> 00:48:04,800
issues uh due to under specification on

1028
00:48:04,800 --> 00:48:07,260
the server side that was uh no text

1029
00:48:07,260 --> 00:48:10,619
mandating the server to include its own

1030
00:48:10,619 --> 00:48:13,020
sender sequence number as partial ID in

1031
00:48:13,020 --> 00:48:15,180
the responses following the first one so

1032
00:48:15,180 --> 00:48:18,119
that of course opened for 80 nouns reuse

1033
00:48:18,119 --> 00:48:20,400
and on the client side on the other end

1034
00:48:20,400 --> 00:48:22,500
there was nothing really mandating the

1035
00:48:22,500 --> 00:48:24,900
client to do any form of

1036
00:48:24,900 --> 00:48:29,220
um response uh ordering enforcement or

1037
00:48:29,220 --> 00:48:31,200
replay check and anyway there were no

1038
00:48:31,200 --> 00:48:32,819
means to do that because there was not

1039
00:48:32,819 --> 00:48:34,980
necessarily a partial ID

1040
00:48:34,980 --> 00:48:36,540
um in those responses

1041
00:48:36,540 --> 00:48:38,240
so those were the issues

1042
00:48:38,240 --> 00:48:41,280
next slide please

1043
00:48:41,280 --> 00:48:44,660
yeah we think we fixed that uh basically

1044
00:48:44,660 --> 00:48:47,460
relying on the same rational and

1045
00:48:47,460 --> 00:48:49,859
approach used for handling exactly the

1046
00:48:49,859 --> 00:48:52,380
same kind of problems uh for Observer

1047
00:48:52,380 --> 00:48:55,859
notifications only separately because we

1048
00:48:55,859 --> 00:48:57,780
still want observe to be a separate

1049
00:48:57,780 --> 00:49:00,540
feature optional to support that may not

1050
00:49:00,540 --> 00:49:02,940
be around or used only by some servers

1051
00:49:02,940 --> 00:49:05,579
in the group and not all of them so

1052
00:49:05,579 --> 00:49:08,599
separately we Define the handling of

1053
00:49:08,599 --> 00:49:11,520
non-modification responses to group

1054
00:49:11,520 --> 00:49:13,940
requests again using the same rational

1055
00:49:13,940 --> 00:49:16,440
useful Observer notification

1056
00:49:16,440 --> 00:49:18,780
we had to introduce a new uh term

1057
00:49:18,780 --> 00:49:21,660
already in the terminology section we

1058
00:49:21,660 --> 00:49:23,579
called it non-notification group

1059
00:49:23,579 --> 00:49:26,160
exchange I stress the word exchange

1060
00:49:26,160 --> 00:49:28,380
because it's intended to be an

1061
00:49:28,380 --> 00:49:31,140
environment like an observation is so

1062
00:49:31,140 --> 00:49:33,540
something tied to uh the group request

1063
00:49:33,540 --> 00:49:35,760
that the client send and the

1064
00:49:35,760 --> 00:49:38,760
non-notification responses uh that the

1065
00:49:38,760 --> 00:49:42,480
server sent to that group request in

1066
00:49:42,480 --> 00:49:45,060
such a context uh we'll have well on the

1067
00:49:45,060 --> 00:49:47,339
server side including the sender

1068
00:49:47,339 --> 00:49:49,740
sequence number is partially V in the

1069
00:49:49,740 --> 00:49:51,540
responses with the possible let's say

1070
00:49:51,540 --> 00:49:54,599
exception of the first one which is good

1071
00:49:54,599 --> 00:49:57,240
and on the client side the client will

1072
00:49:57,240 --> 00:50:00,060
expect responses to comply with that

1073
00:50:00,060 --> 00:50:02,700
and just like a client that sends

1074
00:50:02,700 --> 00:50:04,280
specifically an observed request

1075
00:50:04,280 --> 00:50:06,240
considers the partial idea of

1076
00:50:06,240 --> 00:50:08,220
notifications as a notification number

1077
00:50:08,220 --> 00:50:10,260
well the client will consider the

1078
00:50:10,260 --> 00:50:11,700
partial review of non-notification

1079
00:50:11,700 --> 00:50:14,520
responses as a response number uh

1080
00:50:14,520 --> 00:50:16,619
trivially and based on that we'll

1081
00:50:16,619 --> 00:50:19,800
perform Ripley checks and ordering of

1082
00:50:19,800 --> 00:50:21,660
the responses like it happens for

1083
00:50:21,660 --> 00:50:23,880
notifications and like it happens for

1084
00:50:23,880 --> 00:50:26,579
notifications at most one response from

1085
00:50:26,579 --> 00:50:29,339
the same server is allowed to not have

1086
00:50:29,339 --> 00:50:31,140
the partial EV and that has to be

1087
00:50:31,140 --> 00:50:35,118
considered the oldest one

1088
00:50:35,400 --> 00:50:37,200
um next slide please

1089
00:50:37,200 --> 00:50:39,359
and those are the main points related to

1090
00:50:39,359 --> 00:50:41,819
the actual uh message processing uh

1091
00:50:41,819 --> 00:50:43,920
there's a number of side things that as

1092
00:50:43,920 --> 00:50:46,920
a side effect had to be said but they

1093
00:50:46,920 --> 00:50:48,720
are exactly like for the case of

1094
00:50:48,720 --> 00:50:51,059
notification so

1095
00:50:51,059 --> 00:50:52,680
um if a client and server would like to

1096
00:50:52,680 --> 00:50:54,300
have this kind of exchange continuing

1097
00:50:54,300 --> 00:50:57,180
Beyond a group of King they have to

1098
00:50:57,180 --> 00:50:59,520
preserve the caddy context meaning the

1099
00:50:59,520 --> 00:51:01,280
group ID

1100
00:51:01,280 --> 00:51:03,780
originally used for the original request

1101
00:51:03,780 --> 00:51:07,140
and use it for the external AED to bind

1102
00:51:07,140 --> 00:51:09,900
all responses across for Kings to the

1103
00:51:09,900 --> 00:51:12,540
same request just like we do for observe

1104
00:51:12,540 --> 00:51:15,300
and similarly if they want to have this

1105
00:51:15,300 --> 00:51:17,460
exchange surviving beyond the change of

1106
00:51:17,460 --> 00:51:20,400
clients and their ID they need to store

1107
00:51:20,400 --> 00:51:22,319
a use for the future external idea of

1108
00:51:22,319 --> 00:51:26,040
responses the original kid meaning the

1109
00:51:26,040 --> 00:51:27,540
original Center ID of the client that

1110
00:51:27,540 --> 00:51:30,180
was used uh for the group request in

1111
00:51:30,180 --> 00:51:31,079
question

1112
00:51:31,079 --> 00:51:33,359
I managed on the extended editorial uh

1113
00:51:33,359 --> 00:51:35,160
revisions in the presentation of the

1114
00:51:35,160 --> 00:51:37,440
security properties of Grupo score those

1115
00:51:37,440 --> 00:51:39,900
were of course also extended in order to

1116
00:51:39,900 --> 00:51:43,339
capture the properties that we now have

1117
00:51:43,339 --> 00:51:46,079
in addition to version 15 in order to

1118
00:51:46,079 --> 00:51:49,559
cover also this additional uh new

1119
00:51:49,559 --> 00:51:51,079
handling

1120
00:51:51,079 --> 00:51:54,359
I think this is the last leg on this

1121
00:51:54,359 --> 00:51:56,339
particular topic so if there is any

1122
00:51:56,339 --> 00:51:59,220
comment or question on this Christian

1123
00:51:59,220 --> 00:52:01,520
oh yeah I didn't quite get why

1124
00:52:01,520 --> 00:52:03,960
notifications would need separate

1125
00:52:03,960 --> 00:52:07,079
handling from uh other requests with

1126
00:52:07,079 --> 00:52:10,200
multiple responses so at least in in the

1127
00:52:10,200 --> 00:52:11,520
correspondence document which I'm

1128
00:52:11,520 --> 00:52:12,480
working on

1129
00:52:12,480 --> 00:52:14,400
um they could be unified so why can't

1130
00:52:14,400 --> 00:52:16,319
they be unified here

1131
00:52:16,319 --> 00:52:18,839
uh with the with the multiple responses

1132
00:52:18,839 --> 00:52:20,520
just being a generalization of

1133
00:52:20,520 --> 00:52:22,079
notifications people

1134
00:52:22,079 --> 00:52:25,380
the idea was to keep observices separate

1135
00:52:25,380 --> 00:52:27,780
optional service to support like it has

1136
00:52:27,780 --> 00:52:30,240
been so far in Oscar already and then in

1137
00:52:30,240 --> 00:52:33,300
group of score uh so we had to start

1138
00:52:33,300 --> 00:52:36,300
this from scratch it probably could have

1139
00:52:36,300 --> 00:52:38,819
taken that path now it means a bigger

1140
00:52:38,819 --> 00:52:41,099
structure and I'm afraid but but this

1141
00:52:41,099 --> 00:52:43,500
but this um this feature is not

1142
00:52:43,500 --> 00:52:46,440
something that is ever negotiated or or

1143
00:52:46,440 --> 00:52:48,300
kind of being technically exchanged it's

1144
00:52:48,300 --> 00:52:49,920
just a matter of phrasing right so

1145
00:52:49,920 --> 00:52:51,839
you're keeping the phrasing of the

1146
00:52:51,839 --> 00:52:53,460
document so that people can follow the

1147
00:52:53,460 --> 00:52:55,680
one line of phrasing

1148
00:52:55,680 --> 00:52:58,079
for for the notifications under

1149
00:52:58,079 --> 00:52:59,760
different line of phrasing for

1150
00:52:59,760 --> 00:53:01,980
everything else but then it effectively

1151
00:53:01,980 --> 00:53:04,740
duplicates text doesn't it

1152
00:53:04,740 --> 00:53:08,160
partly uh yes it uses a slightly

1153
00:53:08,160 --> 00:53:10,260
different terminology to emphasize what

1154
00:53:10,260 --> 00:53:13,140
is about non-notification responses

1155
00:53:13,140 --> 00:53:17,040
so it does draw a line uh indeed and

1156
00:53:17,040 --> 00:53:18,960
bottom line to stress that observe is a

1157
00:53:18,960 --> 00:53:21,300
separate service optional to support so

1158
00:53:21,300 --> 00:53:22,920
one may not even read anything about

1159
00:53:22,920 --> 00:53:26,780
observing if not interested in it

1160
00:53:26,900 --> 00:53:30,059
but but they could but they would still

1161
00:53:30,059 --> 00:53:31,980
do effectively the same implementation

1162
00:53:31,980 --> 00:53:35,400
just by doing the different part and not

1163
00:53:35,400 --> 00:53:38,640
know that the yes I'll have to read the

1164
00:53:38,640 --> 00:53:41,520
document again but if if it is how I now

1165
00:53:41,520 --> 00:53:43,260
imagine it is I don't think that's a

1166
00:53:43,260 --> 00:53:44,940
good idea

1167
00:53:44,940 --> 00:53:47,280
because okay the document is not set in

1168
00:53:47,280 --> 00:53:49,319
stone yet and I think it would be better

1169
00:53:49,319 --> 00:53:51,900
to unify it now even if it's more

1170
00:53:51,900 --> 00:53:54,660
editorial work than than leave it up to

1171
00:53:54,660 --> 00:53:56,160
the readers to do the unification

1172
00:53:56,160 --> 00:53:58,640
mentally

1173
00:53:58,980 --> 00:54:00,300
okay

1174
00:54:00,300 --> 00:54:01,619
um do you have in mind the proposal

1175
00:54:01,619 --> 00:54:04,040
request

1176
00:54:04,800 --> 00:54:07,339
yeah

1177
00:54:07,460 --> 00:54:10,800
I'll I'll have a look at it

1178
00:54:10,800 --> 00:54:14,359
much appreciated things

1179
00:54:20,640 --> 00:54:22,740
so yeah I was just wondering uh you

1180
00:54:22,740 --> 00:54:24,839
mentioned the possibility that the

1181
00:54:24,839 --> 00:54:27,000
server basically sends multiple

1182
00:54:27,000 --> 00:54:29,099
responses in this case I think in in

1183
00:54:29,099 --> 00:54:31,500
group comb this we have written that

1184
00:54:31,500 --> 00:54:34,260
that can happen because of uh somewhat

1185
00:54:34,260 --> 00:54:36,300
of a faulty server implementation or

1186
00:54:36,300 --> 00:54:38,940
something or medicine bug or a malicious

1187
00:54:38,940 --> 00:54:42,359
server that tries to uh yeah

1188
00:54:42,359 --> 00:54:44,880
do something to disrupt whatever is

1189
00:54:44,880 --> 00:54:46,800
ongoing

1190
00:54:46,800 --> 00:54:48,660
but but are you considering that the

1191
00:54:48,660 --> 00:54:51,480
server could just uh yeah send two

1192
00:54:51,480 --> 00:54:53,400
responses basically to request just

1193
00:54:53,400 --> 00:54:55,380
because she thinks oh I have some yeah

1194
00:54:55,380 --> 00:54:56,579
updates

1195
00:54:56,579 --> 00:54:59,400
to send why why not do that is that a

1196
00:54:59,400 --> 00:55:01,260
that's another case one thing we

1197
00:55:01,260 --> 00:55:02,520
mentioned already in group of English

1198
00:55:02,520 --> 00:55:05,280
was the case of a client resending the

1199
00:55:05,280 --> 00:55:07,200
same request with the same token and

1200
00:55:07,200 --> 00:55:09,599
same message ID yeah and the server not

1201
00:55:09,599 --> 00:55:11,460
supporting messages duplication but

1202
00:55:11,460 --> 00:55:13,440
you've just mentioned yet another case

1203
00:55:13,440 --> 00:55:16,440
yeah yeah I think the intention was not

1204
00:55:16,440 --> 00:55:18,839
not to support necessarily that uh okay

1205
00:55:18,839 --> 00:55:20,819
said that the server start sending

1206
00:55:20,819 --> 00:55:23,040
multiple responses it's more like saying

1207
00:55:23,040 --> 00:55:25,319
uh okay it could happen for example due

1208
00:55:25,319 --> 00:55:26,880
to uh

1209
00:55:26,880 --> 00:55:29,880
yeah this this uh datagram getting

1210
00:55:29,880 --> 00:55:32,819
duplicated so the server could just

1211
00:55:32,819 --> 00:55:35,339
send back two responses but maybe it's

1212
00:55:35,339 --> 00:55:37,559
different if you consider the the score

1213
00:55:37,559 --> 00:55:39,119
security

1214
00:55:39,119 --> 00:55:41,040
on top of that I mean I don't know the

1215
00:55:41,040 --> 00:55:43,260
details of that but

1216
00:55:43,260 --> 00:55:46,619
yeah it seems to me that should not be a

1217
00:55:46,619 --> 00:55:49,680
case that the server would willfully uh

1218
00:55:49,680 --> 00:55:51,780
send multiple responses because it's

1219
00:55:51,780 --> 00:55:55,260
supposed to send only one right

1220
00:55:55,260 --> 00:55:58,140
says depends on the application and the

1221
00:55:58,140 --> 00:55:59,520
application on the client will figure

1222
00:55:59,520 --> 00:56:00,900
out

1223
00:56:00,900 --> 00:56:02,700
yeah that's right the client will figure

1224
00:56:02,700 --> 00:56:04,740
it out but the server isn't supposed to

1225
00:56:04,740 --> 00:56:07,020
do it that's the also the message I

1226
00:56:07,020 --> 00:56:09,900
think or what we try to say there in the

1227
00:56:09,900 --> 00:56:12,480
draft because it's not not promoting the

1228
00:56:12,480 --> 00:56:14,339
server to do that

1229
00:56:14,339 --> 00:56:16,680
it's just saying that the client should

1230
00:56:16,680 --> 00:56:18,140
be prepared to

1231
00:56:18,140 --> 00:56:21,240
handle these kind of cases right so so

1232
00:56:21,240 --> 00:56:23,099
it the clients could could also say I'm

1233
00:56:23,099 --> 00:56:25,140
just throwing away

1234
00:56:25,140 --> 00:56:27,960
any second or third or following

1235
00:56:27,960 --> 00:56:30,660
response with the same token so and

1236
00:56:30,660 --> 00:56:33,119
that's the application again yeah so the

1237
00:56:33,119 --> 00:56:35,640
client must still be ready to to to have

1238
00:56:35,640 --> 00:56:38,640
this happening and even in the presence

1239
00:56:38,640 --> 00:56:39,839
of group of score you may have an

1240
00:56:39,839 --> 00:56:43,319
adversal injecting replayed responses

1241
00:56:43,319 --> 00:56:45,359
yeah but you could have a client that

1242
00:56:45,359 --> 00:56:47,760
implements group or score that already

1243
00:56:47,760 --> 00:56:50,040
decides I'm only going to accept the

1244
00:56:50,040 --> 00:56:51,059
first

1245
00:56:51,059 --> 00:56:54,119
response that comes in and then that

1246
00:56:54,119 --> 00:56:55,859
client doesn't want any code for for

1247
00:56:55,859 --> 00:56:57,900
example for handling

1248
00:56:57,900 --> 00:57:00,900
uh future or future responses with the

1249
00:57:00,900 --> 00:57:02,880
same token so

1250
00:57:02,880 --> 00:57:05,040
that that means that maybe part of what

1251
00:57:05,040 --> 00:57:06,540
you're proposing is not relevant for

1252
00:57:06,540 --> 00:57:09,960
that type of client right

1253
00:57:09,960 --> 00:57:11,220
sure

1254
00:57:11,220 --> 00:57:13,619
um so it's more like an option that's

1255
00:57:13,619 --> 00:57:16,260
how it sounds to me like if if you're a

1256
00:57:16,260 --> 00:57:18,720
client that wants to

1257
00:57:18,720 --> 00:57:21,660
process multiple responses then yeah

1258
00:57:21,660 --> 00:57:24,119
maybe it has to to check certain things

1259
00:57:24,119 --> 00:57:26,880
but you don't have to do that as a

1260
00:57:26,880 --> 00:57:28,380
client right group of scholarship

1261
00:57:28,380 --> 00:57:30,319
working one way

1262
00:57:30,319 --> 00:57:32,460
let's say

1263
00:57:32,460 --> 00:57:35,099
in a more secure way regardless of what

1264
00:57:35,099 --> 00:57:38,040
tolerance the application will have

1265
00:57:38,040 --> 00:57:40,619
so if the application had not tolerance

1266
00:57:40,619 --> 00:57:42,660
well okay then group of square can be

1267
00:57:42,660 --> 00:57:44,640
aligned accordingly but if the

1268
00:57:44,640 --> 00:57:45,960
application is tolerance group of scores

1269
00:57:45,960 --> 00:57:47,640
should enforce the best security

1270
00:57:47,640 --> 00:57:50,220
possible meaning

1271
00:57:50,220 --> 00:57:52,440
being ready to to have replaced coming

1272
00:57:52,440 --> 00:57:55,260
and and being able to detect them to

1273
00:57:55,260 --> 00:57:56,220
stop them

1274
00:57:56,220 --> 00:57:58,680
for example

1275
00:57:58,680 --> 00:58:01,680
yeah okay at least deal with duplicates

1276
00:58:01,680 --> 00:58:04,800
I agree with that but I don't know if it

1277
00:58:04,800 --> 00:58:05,880
should be

1278
00:58:05,880 --> 00:58:08,220
kind of designed for having a server

1279
00:58:08,220 --> 00:58:11,160
that that necessarily decides to send an

1280
00:58:11,160 --> 00:58:13,319
updated response later on because hey

1281
00:58:13,319 --> 00:58:15,599
they're still timing and can send an

1282
00:58:15,599 --> 00:58:18,599
update that seems to be going a bit out

1283
00:58:18,599 --> 00:58:20,940
of the co-op specification that they

1284
00:58:20,940 --> 00:58:22,079
have

1285
00:58:22,079 --> 00:58:23,760
buttercream yeah

1286
00:58:23,760 --> 00:58:27,240
I'll think about that thanks thank you

1287
00:58:27,240 --> 00:58:30,119
and and Christian back also to your

1288
00:58:30,119 --> 00:58:32,160
comment probably we are already on the

1289
00:58:32,160 --> 00:58:33,960
site on the right track for that on the

1290
00:58:33,960 --> 00:58:36,480
server side because it is phrased and

1291
00:58:36,480 --> 00:58:39,960
Nigeria in a general way to say uh must

1292
00:58:39,960 --> 00:58:42,299
include a partial V in any response

1293
00:58:42,299 --> 00:58:43,799
following the first one

1294
00:58:43,799 --> 00:58:46,020
regardless of being a notification or

1295
00:58:46,020 --> 00:58:47,579
not so probably that's generally enough

1296
00:58:47,579 --> 00:58:51,319
the big thing is on the client side then

1297
00:58:55,980 --> 00:58:57,660
Christian you want to join the queue and

1298
00:58:57,660 --> 00:58:59,040
mentioned what you're writing on the

1299
00:58:59,040 --> 00:58:59,880
chat

1300
00:58:59,880 --> 00:59:01,740
briefly

1301
00:59:01,740 --> 00:59:03,780
um I can just repeat it quite quick

1302
00:59:03,780 --> 00:59:06,480
quite briefly yes I agree that

1303
00:59:06,480 --> 00:59:07,380
um

1304
00:59:07,380 --> 00:59:09,599
if a client doesn't solicit multiple

1305
00:59:09,599 --> 00:59:11,579
responses then it can just take a simple

1306
00:59:11,579 --> 00:59:13,319
processing

1307
00:59:13,319 --> 00:59:14,460
um with

1308
00:59:14,460 --> 00:59:17,460
for one response and that's either valid

1309
00:59:17,460 --> 00:59:20,160
or not but there can be multiple ways in

1310
00:59:20,160 --> 00:59:21,720
which a client would solicit multiple

1311
00:59:21,720 --> 00:59:24,240
responses observe being one

1312
00:59:24,240 --> 00:59:26,400
um group proxy might be another and

1313
00:59:26,400 --> 00:59:28,859
whatever that is if it solicits then

1314
00:59:28,859 --> 00:59:30,900
then it there is a way of processing

1315
00:59:30,900 --> 00:59:33,960
them so that's that's opposed to to the

1316
00:59:33,960 --> 00:59:35,460
earlier discussion and to esco's

1317
00:59:35,460 --> 00:59:37,579
question

1318
00:59:38,160 --> 00:59:40,319
yeah and this problem would come back

1319
00:59:40,319 --> 00:59:42,660
again the moment you consider proxy

1320
00:59:42,660 --> 00:59:45,059
supporting groups because they will send

1321
00:59:45,059 --> 00:59:47,040
back multiple responses to the same

1322
00:59:47,040 --> 00:59:48,480
request

1323
00:59:48,480 --> 00:59:51,380
to the client

1324
00:59:54,900 --> 00:59:57,420
okay so we would expect some more

1325
00:59:57,420 --> 01:00:00,559
detailed input from you Christian

1326
01:00:11,460 --> 01:00:14,099
um I'll bring that in as part of my room

1327
01:00:14,099 --> 01:00:15,660
yes

1328
01:00:15,660 --> 01:00:17,579
thanks a lot

1329
01:00:17,579 --> 01:00:18,839
okay

1330
01:00:18,839 --> 01:00:20,880
um next slide please

1331
01:00:20,880 --> 01:00:23,520
and it's a final one in fact

1332
01:00:23,520 --> 01:00:26,099
um yeah about Target attributes uh when

1333
01:00:26,099 --> 01:00:28,319
working on that PR we you know that um

1334
01:00:28,319 --> 01:00:30,480
as cars I mentioned before the Oscar RFC

1335
01:00:30,480 --> 01:00:33,000
defines an Ask Target attribute to to

1336
01:00:33,000 --> 01:00:35,700
signal that resource is accessible

1337
01:00:35,700 --> 01:00:37,319
um using those score and should be

1338
01:00:37,319 --> 01:00:39,480
accessed using those score of course it

1339
01:00:39,480 --> 01:00:40,619
didn't mention

1340
01:00:40,619 --> 01:00:42,720
um group of score that's something that

1341
01:00:42,720 --> 01:00:45,000
likes like missing so we would propose

1342
01:00:45,000 --> 01:00:47,819
to Define in a group of score document a

1343
01:00:47,819 --> 01:00:51,119
new similar Target attribute G osk to

1344
01:00:51,119 --> 01:00:52,680
indicate that the resource is accessible

1345
01:00:52,680 --> 01:00:56,880
using Oscar and or Grupo score uh so

1346
01:00:56,880 --> 01:00:59,040
very similar of course we need to to be

1347
01:00:59,040 --> 01:01:00,720
supportive of all the implementations

1348
01:01:00,720 --> 01:01:02,940
that may retrieve a link to such a

1349
01:01:02,940 --> 01:01:05,040
resource but they don't support a

1350
01:01:05,040 --> 01:01:06,480
specifically group of score and the

1351
01:01:06,480 --> 01:01:08,220
target geosc

1352
01:01:08,220 --> 01:01:10,079
so we could think of these uh rules of

1353
01:01:10,079 --> 01:01:10,920
use

1354
01:01:10,920 --> 01:01:13,740
so that if the link specifies geosc uh

1355
01:01:13,740 --> 01:01:16,680
it must specify also ask and well an all

1356
01:01:16,680 --> 01:01:18,420
device not understanding group of square

1357
01:01:18,420 --> 01:01:21,059
geosc would ignore geosc because it

1358
01:01:21,059 --> 01:01:22,680
doesn't understand it after all and it's

1359
01:01:22,680 --> 01:01:24,980
not interested in Google score

1360
01:01:24,980 --> 01:01:27,480
but if it does understand group of score

1361
01:01:27,480 --> 01:01:30,480
ngos it will focus on it and ignore ask

1362
01:01:30,480 --> 01:01:32,819
because it's practically overshadowed by

1363
01:01:32,819 --> 01:01:34,559
the statement

1364
01:01:34,559 --> 01:01:37,940
um from from geosc

1365
01:01:38,059 --> 01:01:41,880
any comment or objection on defining a

1366
01:01:41,880 --> 01:01:45,980
Target attribute like this this way

1367
01:01:49,740 --> 01:01:52,500
and it can be also one more addition

1368
01:01:52,500 --> 01:01:55,020
um for the pre-filling of the registry

1369
01:01:55,020 --> 01:01:58,160
in Carson's draft

1370
01:01:59,040 --> 01:02:01,740
okay and the next slide should be really

1371
01:02:01,740 --> 01:02:05,280
the uh the wrap up we can Surah submit

1372
01:02:05,280 --> 01:02:08,400
of version 17 anyway adding the new

1373
01:02:08,400 --> 01:02:10,160
um Target attribute

1374
01:02:10,160 --> 01:02:13,619
and then we wait for more uh input and

1375
01:02:13,619 --> 01:02:16,079
review uh from Christians Christian for

1376
01:02:16,079 --> 01:02:18,619
the shepherding

1377
01:02:19,619 --> 01:02:22,400
that's it

1378
01:02:23,180 --> 01:02:26,598
thank you indeed

1379
01:02:45,839 --> 01:02:47,099
yeah

1380
01:02:47,099 --> 01:02:51,920
I changed because I think he's going to

1381
01:03:01,440 --> 01:03:03,980
be

1382
01:03:10,260 --> 01:03:11,520
okay

1383
01:03:11,520 --> 01:03:14,339
yes so I will be presenting this draft

1384
01:03:14,339 --> 01:03:17,520
profiling adult for Coop and oscore

1385
01:03:17,520 --> 01:03:20,720
and um

1386
01:03:21,240 --> 01:03:24,180
yep slide changing works so yes that's a

1387
01:03:24,180 --> 01:03:25,859
recap

1388
01:03:25,859 --> 01:03:28,859
um what is this about well we have a dog

1389
01:03:28,859 --> 01:03:31,020
which is a lightweight authenticated key

1390
01:03:31,020 --> 01:03:32,819
exchange being developed in the lake

1391
01:03:32,819 --> 01:03:34,619
working group

1392
01:03:34,619 --> 01:03:36,720
and its main use is basically

1393
01:03:36,720 --> 01:03:39,960
establishing an Oscar security context

1394
01:03:39,960 --> 01:03:42,540
um however normally when you run edoc it

1395
01:03:42,540 --> 01:03:44,880
will take you two round trips and before

1396
01:03:44,880 --> 01:03:47,880
you can start using oscore so what this

1397
01:03:47,880 --> 01:03:49,619
document proposes and the main

1398
01:03:49,619 --> 01:03:51,480
contribution of this document is an

1399
01:03:51,480 --> 01:03:54,059
optimization to this procedure where

1400
01:03:54,059 --> 01:03:57,240
when you send your ad book message 3

1401
01:03:57,240 --> 01:04:00,180
you actually combine that with an also

1402
01:04:00,180 --> 01:04:02,760
protected application request

1403
01:04:02,760 --> 01:04:04,619
and you can do that because at that

1404
01:04:04,619 --> 01:04:06,540
point you already have a valid.com

1405
01:04:06,540 --> 01:04:09,299
context to use

1406
01:04:09,299 --> 01:04:11,220
um there are other supports also in this

1407
01:04:11,220 --> 01:04:13,680
document specifying um

1408
01:04:13,680 --> 01:04:15,540
some other details like oscar-specific

1409
01:04:15,540 --> 01:04:18,660
processing of messages

1410
01:04:18,660 --> 01:04:20,880
um consistent extension of the educ

1411
01:04:20,880 --> 01:04:23,819
application profile you know web linking

1412
01:04:23,819 --> 01:04:26,640
and some performance considerations on

1413
01:04:26,640 --> 01:04:29,420
the Block wise

1414
01:04:29,599 --> 01:04:32,339
and when what updates have been done

1415
01:04:32,339 --> 01:04:36,000
since itf14 when version zero five has

1416
01:04:36,000 --> 01:04:39,240
been submitted and there will be no big

1417
01:04:39,240 --> 01:04:41,339
changes to the fundamental mechanics of

1418
01:04:41,339 --> 01:04:43,579
this optimized workflow

1419
01:04:43,579 --> 01:04:46,980
and we did make some modifications Diana

1420
01:04:46,980 --> 01:04:49,380
considerations regarding

1421
01:04:49,380 --> 01:04:52,200
um shortening the text and only like

1422
01:04:52,200 --> 01:04:54,920
narrowing it down to option number 21

1423
01:04:54,920 --> 01:04:57,900
previously we consider other numbers too

1424
01:04:57,900 --> 01:05:00,540
we have renewed the order registration

1425
01:05:00,540 --> 01:05:02,940
for option number 21 which will now

1426
01:05:02,940 --> 01:05:07,760
expire the 8th of November 2023

1427
01:05:08,900 --> 01:05:11,220
and as far as these performance

1428
01:05:11,220 --> 01:05:13,260
considerations on blockwise I mentioned

1429
01:05:13,260 --> 01:05:16,200
basically restructured it a bit so we

1430
01:05:16,200 --> 01:05:17,880
moved some of that down to an appendix

1431
01:05:17,880 --> 01:05:20,099
in appendix a

1432
01:05:20,099 --> 01:05:22,859
um it's now still the same content as

1433
01:05:22,859 --> 01:05:25,680
used to be in section six

1434
01:05:25,680 --> 01:05:28,680
and to kind of summarize our conclusions

1435
01:05:28,680 --> 01:05:31,859
from that is basically that if you have

1436
01:05:31,859 --> 01:05:34,799
to use block wise specifically because

1437
01:05:34,799 --> 01:05:36,960
you're using this optimized workflow

1438
01:05:36,960 --> 01:05:38,940
meaning this combined request becomes so

1439
01:05:38,940 --> 01:05:40,740
big you have to use clockwise

1440
01:05:40,740 --> 01:05:43,020
then this optimization has no

1441
01:05:43,020 --> 01:05:44,760
performance benefit and you might as

1442
01:05:44,760 --> 01:05:46,500
well use the original normal edoc

1443
01:05:46,500 --> 01:05:50,220
workflow because it's less complex and

1444
01:05:50,220 --> 01:05:51,660
um since the optimization doesn't give

1445
01:05:51,660 --> 01:05:53,160
you any benefit in that case just use

1446
01:05:53,160 --> 01:05:54,900
the normal Network

1447
01:05:54,900 --> 01:05:56,760
we also expanded them the security

1448
01:05:56,760 --> 01:05:58,380
considerations

1449
01:05:58,380 --> 01:06:01,559
so um basically there are some

1450
01:06:01,559 --> 01:06:03,000
considerations now about like access

1451
01:06:03,000 --> 01:06:05,460
control because

1452
01:06:05,460 --> 01:06:07,079
you have to consider that you may have

1453
01:06:07,079 --> 01:06:09,599
access control also involved and the

1454
01:06:09,599 --> 01:06:11,640
fact that is like just because you

1455
01:06:11,640 --> 01:06:13,920
completed with another pair that doesn't

1456
01:06:13,920 --> 01:06:16,040
mean you'll get any specific

1457
01:06:16,040 --> 01:06:19,200
resource access and that still has to

1458
01:06:19,200 --> 01:06:20,460
rely on the normal Access Control

1459
01:06:20,460 --> 01:06:23,579
procedures that you're using

1460
01:06:23,579 --> 01:06:24,359
um

1461
01:06:24,359 --> 01:06:27,359
otherwise

1462
01:06:27,839 --> 01:06:31,619
we have some information now about

1463
01:06:31,619 --> 01:06:33,900
um that like let's say you have access

1464
01:06:33,900 --> 01:06:36,299
control information

1465
01:06:36,299 --> 01:06:38,400
um how and what information may need to

1466
01:06:38,400 --> 01:06:42,720
be provided before the end of execution

1467
01:06:42,720 --> 01:06:45,780
um yeah basically no considerations on

1468
01:06:45,780 --> 01:06:48,839
this watch about access control

1469
01:06:48,839 --> 01:06:52,680
um now what happened after the cutoff

1470
01:06:52,680 --> 01:06:56,280
well we actually defined

1471
01:06:56,280 --> 01:06:59,339
um in section six some Target attributes

1472
01:06:59,339 --> 01:07:02,819
for added resources and basically so now

1473
01:07:02,819 --> 01:07:04,859
these attributes can be registered in

1474
01:07:04,859 --> 01:07:06,960
this upcoming I am a registry and that's

1475
01:07:06,960 --> 01:07:08,819
defined in this new

1476
01:07:08,819 --> 01:07:11,280
draft by custom

1477
01:07:11,280 --> 01:07:12,839
and the thing that was mentioned a

1478
01:07:12,839 --> 01:07:15,599
little bit but the proposal here is that

1479
01:07:15,599 --> 01:07:18,660
in these new drafts from Carson we

1480
01:07:18,660 --> 01:07:20,520
pre-filled the new registry with the

1481
01:07:20,520 --> 01:07:22,700
target attributes from this document

1482
01:07:22,700 --> 01:07:26,579
but we still ask for registration also

1483
01:07:26,579 --> 01:07:28,859
in this actual document and then

1484
01:07:28,859 --> 01:07:30,359
basically it's like a race between the

1485
01:07:30,359 --> 01:07:32,460
two documents which get there first and

1486
01:07:32,460 --> 01:07:33,900
the one that gets there first gets to

1487
01:07:33,900 --> 01:07:35,760
keep the text the other one the text is

1488
01:07:35,760 --> 01:07:38,880
removed okay

1489
01:07:38,880 --> 01:07:41,460
yeah sorry that was opposite yeah the

1490
01:07:41,460 --> 01:07:44,160
one that the one that yeah

1491
01:07:44,160 --> 01:07:44,760
um

1492
01:07:44,760 --> 01:07:47,460
anyway so

1493
01:07:47,460 --> 01:07:49,920
well regardless we may want to also

1494
01:07:49,920 --> 01:07:53,220
revise the names of the attributes like

1495
01:07:53,220 --> 01:07:55,740
starting with some kind of prefix that

1496
01:07:55,740 --> 01:07:57,420
shows that these are specifically

1497
01:07:57,420 --> 01:07:59,819
related to our document

1498
01:07:59,819 --> 01:08:01,680
and yeah and of course any thoughts or

1499
01:08:01,680 --> 01:08:04,440
objections or comments on this plan is

1500
01:08:04,440 --> 01:08:07,039
very welcome

1501
01:08:09,059 --> 01:08:11,160
and yeah I go to the next one so we had

1502
01:08:11,160 --> 01:08:12,720
a proposal

1503
01:08:12,720 --> 01:08:15,480
from David Navarro so this is also being

1504
01:08:15,480 --> 01:08:18,899
tracked in a pull request at um in the

1505
01:08:18,899 --> 01:08:20,660
GitHub repository

1506
01:08:20,660 --> 01:08:24,060
and basically he noted that in one of

1507
01:08:24,060 --> 01:08:27,600
the figures we have we do not include a

1508
01:08:27,600 --> 01:08:31,799
response to the edit message tree

1509
01:08:31,799 --> 01:08:35,040
and then here the answer yesterday okay

1510
01:08:35,040 --> 01:08:36,179
why don't you add that documents before

1511
01:08:36,179 --> 01:08:37,679
in that figure just to make it clear

1512
01:08:37,679 --> 01:08:39,540
that the message before can in fact be

1513
01:08:39,540 --> 01:08:41,939
used but basically the way the reason we

1514
01:08:41,939 --> 01:08:43,259
don't have another message further

1515
01:08:43,259 --> 01:08:47,219
currently is that uh in the text of that

1516
01:08:47,219 --> 01:08:49,140
doc draft it says that

1517
01:08:49,140 --> 01:08:51,359
um if add that message was used or if

1518
01:08:51,359 --> 01:08:53,759
there's an error then edit message for

1519
01:08:53,759 --> 01:08:55,859
then the response will be sent from the

1520
01:08:55,859 --> 01:08:58,219
server

1521
01:08:58,679 --> 01:09:01,380
um as a as a response to message D but

1522
01:09:01,380 --> 01:09:02,880
basically like this that you may

1523
01:09:02,880 --> 01:09:05,460
actually it's not mandatory to have

1524
01:09:05,460 --> 01:09:08,279
another message for and you can in fact

1525
01:09:08,279 --> 01:09:10,560
omit that okay

1526
01:09:10,560 --> 01:09:12,238
um so well anyway the proposal is we

1527
01:09:12,238 --> 01:09:14,819
merge this PR and we add a note to say

1528
01:09:14,819 --> 01:09:17,279
that okay edit message 4 is best and in

1529
01:09:17,279 --> 01:09:20,100
this example but in general it is

1530
01:09:20,100 --> 01:09:22,020
optional and we basically take the same

1531
01:09:22,020 --> 01:09:24,060
text as he said in the draft itself

1532
01:09:24,060 --> 01:09:27,299
under equivalent figure

1533
01:09:27,299 --> 01:09:28,799
and you see the figure there on the

1534
01:09:28,799 --> 01:09:30,000
right hand side

1535
01:09:30,000 --> 01:09:31,979
and the red part is traditionally we're

1536
01:09:31,979 --> 01:09:34,519
planning them

1537
01:09:35,580 --> 01:09:38,399
yeah just to summarize uh Next Step so

1538
01:09:38,399 --> 01:09:40,020
the document is quite stable it's

1539
01:09:40,020 --> 01:09:41,640
aligned also with the latest static

1540
01:09:41,640 --> 01:09:44,580
version which is version 17. and we have

1541
01:09:44,580 --> 01:09:46,560
agreed to keep in sync and keep

1542
01:09:46,560 --> 01:09:49,020
discussions uh and depending on the

1543
01:09:49,020 --> 01:09:52,198
state of the actual ad book document

1544
01:09:52,198 --> 01:09:54,060
um just include a working group let's go

1545
01:09:54,060 --> 01:09:55,620
of that which has actually concluded now

1546
01:09:55,620 --> 01:09:57,480
on the 4th of November

1547
01:09:57,480 --> 01:10:00,179
and yeah our proposal basically would be

1548
01:10:00,179 --> 01:10:01,980
at this point to start the working

1549
01:10:01,980 --> 01:10:06,120
world-classical for this document also

1550
01:10:06,120 --> 01:10:08,300
thank you

1551
01:10:09,300 --> 01:10:12,179
yeah and that was the last slide so of

1552
01:10:12,179 --> 01:10:13,620
course any

1553
01:10:13,620 --> 01:10:15,600
yeah comments your feedback are well

1554
01:10:15,600 --> 01:10:18,480
welcome or reviews and other

1555
01:10:18,480 --> 01:10:21,139
input

1556
01:10:24,480 --> 01:10:27,780
if not I guess I will proceed to the

1557
01:10:27,780 --> 01:10:30,920
next presentation

1558
01:10:50,940 --> 01:10:53,120
foreign

1559
01:10:58,760 --> 01:11:01,380
and this is already a key update for all

1560
01:11:01,380 --> 01:11:05,280
score and Kudos and we're now up to a

1561
01:11:05,280 --> 01:11:08,599
draft version number three

1562
01:11:10,219 --> 01:11:13,080
and yeah again just to recap I mean

1563
01:11:13,080 --> 01:11:16,020
basically this document has um multiple

1564
01:11:16,020 --> 01:11:17,699
subsections

1565
01:11:17,699 --> 01:11:20,880
um one of the main sections and where

1566
01:11:20,880 --> 01:11:23,159
the document gets its title is the Kudos

1567
01:11:23,159 --> 01:11:24,719
procedure which is a key update

1568
01:11:24,719 --> 01:11:26,760
procedure for all score and the whole

1569
01:11:26,760 --> 01:11:28,800
goal of that of that is to renew your

1570
01:11:28,800 --> 01:11:31,800
master secret and master salt and you

1571
01:11:31,800 --> 01:11:33,360
also wish derive when you send the

1572
01:11:33,360 --> 01:11:35,280
recipient keys because you change the

1573
01:11:35,280 --> 01:11:36,900
methods you get master result that is

1574
01:11:36,900 --> 01:11:38,880
the end result so you have a fresh set

1575
01:11:38,880 --> 01:11:41,040
of keys to continue communication with

1576
01:11:41,040 --> 01:11:43,140
and you may want to repeat for a variety

1577
01:11:43,140 --> 01:11:44,940
of reasons

1578
01:11:44,940 --> 01:11:47,100
um benefits is that you do not change

1579
01:11:47,100 --> 01:11:49,020
your ID context which is like an

1580
01:11:49,020 --> 01:11:51,120
internal identifier of telescope context

1581
01:11:51,120 --> 01:11:53,280
and you also achieve perfect forward

1582
01:11:53,280 --> 01:11:55,560
secrecy with this procedure it's Loosely

1583
01:11:55,560 --> 01:11:58,140
inspired by the appendix B2 procedure

1584
01:11:58,140 --> 01:12:00,360
that also defines for performing the

1585
01:12:00,360 --> 01:12:02,880
update but with a number of

1586
01:12:02,880 --> 01:12:05,940
um benefits over that one the other main

1587
01:12:05,940 --> 01:12:09,600
part is this thought about aad key usage

1588
01:12:09,600 --> 01:12:12,000
limits for all score because it was

1589
01:12:12,000 --> 01:12:14,100
discovered and is also defined in other

1590
01:12:14,100 --> 01:12:16,440
documents like the c4d draft you see on

1591
01:12:16,440 --> 01:12:18,840
the bottom right that if you have

1592
01:12:18,840 --> 01:12:21,980
excessive usage of the same key

1593
01:12:21,980 --> 01:12:24,659
that may enable breaking some security

1594
01:12:24,659 --> 01:12:27,719
properties of aad algorithms so what we

1595
01:12:27,719 --> 01:12:29,580
want to do in this document is to Define

1596
01:12:29,580 --> 01:12:31,560
appropriate limits when using all score

1597
01:12:31,560 --> 01:12:34,080
and the limits are really tied to what

1598
01:12:34,080 --> 01:12:36,540
particular algorithm you're using

1599
01:12:36,540 --> 01:12:39,420
we also want to Define concrete

1600
01:12:39,420 --> 01:12:41,699
processing steps for messages like what

1601
01:12:41,699 --> 01:12:44,760
counters and keys should you use

1602
01:12:44,760 --> 01:12:46,560
um and what you do when you reach the

1603
01:12:46,560 --> 01:12:48,480
limits and the final part is basically a

1604
01:12:48,480 --> 01:12:50,580
section about updating Osco and sending

1605
01:12:50,580 --> 01:12:53,480
recipient IDs

1606
01:12:54,140 --> 01:12:57,060
yep next slide so this is normal of the

1607
01:12:57,060 --> 01:12:59,640
keying procedure it's pretty basic it's

1608
01:12:59,640 --> 01:13:01,860
a metrics exchange to exchange nonsense

1609
01:13:01,860 --> 01:13:03,600
N1 and N2

1610
01:13:03,600 --> 01:13:05,460
and these are placed in a new field in

1611
01:13:05,460 --> 01:13:08,100
those called Co-op option then we feed

1612
01:13:08,100 --> 01:13:10,739
this into this update CTX function that

1613
01:13:10,739 --> 01:13:12,960
builds a new score security context for

1614
01:13:12,960 --> 01:13:14,760
the players

1615
01:13:14,760 --> 01:13:17,219
and and we also see a picture there the

1616
01:13:17,219 --> 01:13:19,679
way we extend the Oscar option with new

1617
01:13:19,679 --> 01:13:23,040
fields to hold the nuns and the X byte

1618
01:13:23,040 --> 01:13:24,900
and the X byte holds the length of the

1619
01:13:24,900 --> 01:13:28,759
actual nouns and some flag bits

1620
01:13:30,120 --> 01:13:32,520
yeah and to go into a bit more detail on

1621
01:13:32,520 --> 01:13:34,320
these flag bits and updates we did so we

1622
01:13:34,320 --> 01:13:36,380
updated the registrations regarding this

1623
01:13:36,380 --> 01:13:38,300
bit 15

1624
01:13:38,300 --> 01:13:41,040
as before in the case this is a Kudos

1625
01:13:41,040 --> 01:13:42,719
message and you have the presence of the

1626
01:13:42,719 --> 01:13:46,080
nuns and the X byte we also defined now

1627
01:13:46,080 --> 01:13:49,500
that bit 0 instead of it one should

1628
01:13:49,500 --> 01:13:51,719
Define uh that you have a second flag

1629
01:13:51,719 --> 01:13:54,179
byte in those core option

1630
01:13:54,179 --> 01:13:56,820
and it say I really didn't have any

1631
01:13:56,820 --> 01:13:59,219
concrete use case otherwise so we took

1632
01:13:59,219 --> 01:14:01,080
itself for the extension

1633
01:14:01,080 --> 01:14:03,480
and this is also a point where Kudos

1634
01:14:03,480 --> 01:14:05,699
will be updating the score FC

1635
01:14:05,699 --> 01:14:07,620
we also changed the status of bit one

1636
01:14:07,620 --> 01:14:10,920
from a server to unassigned and we also

1637
01:14:10,920 --> 01:14:14,100
plan to register with 816 Etc as further

1638
01:14:14,100 --> 01:14:16,199
extension bits to have a consistent

1639
01:14:16,199 --> 01:14:18,120
pattern for extension and this was all

1640
01:14:18,120 --> 01:14:19,739
based on previous discussion on the

1641
01:14:19,739 --> 01:14:23,120
mailing list and other meetings

1642
01:14:25,440 --> 01:14:27,960
um we simplify the method for updating

1643
01:14:27,960 --> 01:14:30,179
context we used to have two internal

1644
01:14:30,179 --> 01:14:33,000
code paths one relying on the Adobe

1645
01:14:33,000 --> 01:14:35,280
update one relying on an extract and

1646
01:14:35,280 --> 01:14:37,800
expand and we discussed this at the

1647
01:14:37,800 --> 01:14:39,840
Korean stream and we said okay some

1648
01:14:39,840 --> 01:14:42,000
feedback was was why don't you just have

1649
01:14:42,000 --> 01:14:44,219
met.2 based on the extract and expand

1650
01:14:44,219 --> 01:14:46,020
because there's no additional benefits

1651
01:14:46,020 --> 01:14:47,940
from that docky update so we'll simplify

1652
01:14:47,940 --> 01:14:49,920
this now so we no longer have two

1653
01:14:49,920 --> 01:14:52,800
separate code paths we only go for the

1654
01:14:52,800 --> 01:14:56,040
um extra expand method basically you see

1655
01:14:56,040 --> 01:14:57,420
in the green box there that's a new

1656
01:14:57,420 --> 01:14:59,960
style simplifies implementations

1657
01:14:59,960 --> 01:15:03,600
simplifies for building external values

1658
01:15:03,600 --> 01:15:05,520
um they're no need for any fallback

1659
01:15:05,520 --> 01:15:07,080
because previously it may have been the

1660
01:15:07,080 --> 01:15:08,640
case that the Edo key update was

1661
01:15:08,640 --> 01:15:10,260
unavailable because the endoc session

1662
01:15:10,260 --> 01:15:12,420
wasn't valid anymore

1663
01:15:12,420 --> 01:15:14,159
um so there's no need to signal that or

1664
01:15:14,159 --> 01:15:16,440
kind of negotiate on that you don't even

1665
01:15:16,440 --> 01:15:18,480
have to support that dog or be worried

1666
01:15:18,480 --> 01:15:20,600
or think about if the original

1667
01:15:20,600 --> 01:15:23,880
keys were established using a doc

1668
01:15:23,880 --> 01:15:26,159
so this was a simplification without

1669
01:15:26,159 --> 01:15:27,360
them

1670
01:15:27,360 --> 01:15:30,360
loss of security properties here we also

1671
01:15:30,360 --> 01:15:32,400
updated the update CTX function to not

1672
01:15:32,400 --> 01:15:35,640
only rely on an hkdf and previously we

1673
01:15:35,640 --> 01:15:37,980
specifically defined it to use the hqdf

1674
01:15:37,980 --> 01:15:40,920
expand now we analyzed that to say that

1675
01:15:40,920 --> 01:15:43,260
it should use Kudos expand which is like

1676
01:15:43,260 --> 01:15:45,300
an interface to the key derivation

1677
01:15:45,300 --> 01:15:48,000
function used by all score and this

1678
01:15:48,000 --> 01:15:50,640
ensures flexibility and is also future

1679
01:15:50,640 --> 01:15:51,960
proof

1680
01:15:51,960 --> 01:15:54,239
I mean typically our scores today we'll

1681
01:15:54,239 --> 01:15:57,120
use an hdf algorithm in such case Kudos

1682
01:15:57,120 --> 01:16:00,120
expand is simply maps to hkdf expand as

1683
01:16:00,120 --> 01:16:01,620
you see in them

1684
01:16:01,620 --> 01:16:05,540
in the text there taken from the draft

1685
01:16:05,540 --> 01:16:08,520
however a potential future update to

1686
01:16:08,520 --> 01:16:12,000
Oscar May Define other kdfs in such case

1687
01:16:12,000 --> 01:16:14,040
that update can also defined on a

1688
01:16:14,040 --> 01:16:15,900
mapping between Kudos expand and this

1689
01:16:15,900 --> 01:16:17,460
new kdf

1690
01:16:17,460 --> 01:16:21,440
so we are future proof in that sense

1691
01:16:23,520 --> 01:16:26,580
yeah another part that we did was the

1692
01:16:26,580 --> 01:16:29,820
find ways that you can use end hook to

1693
01:16:29,820 --> 01:16:32,760
actually signal Kudos support

1694
01:16:32,760 --> 01:16:34,440
so let's say that you actually do

1695
01:16:34,440 --> 01:16:36,480
support and you have to be implemented

1696
01:16:36,480 --> 01:16:38,460
between the pairs then when the pairs

1697
01:16:38,460 --> 01:16:42,600
run a block they can use this EAD which

1698
01:16:42,600 --> 01:16:45,000
is basically optional data that can be

1699
01:16:45,000 --> 01:16:47,580
exchanged during a network execution and

1700
01:16:47,580 --> 01:16:50,820
we're defined EAD items for pairs to

1701
01:16:50,820 --> 01:16:53,219
signal each other whether they support

1702
01:16:53,219 --> 01:16:56,699
Kudos or not and in which mode

1703
01:16:56,699 --> 01:17:00,060
so basically register an ID label

1704
01:17:00,060 --> 01:17:03,659
and four possible values of this you can

1705
01:17:03,659 --> 01:17:05,100
see that on the right hand side on the

1706
01:17:05,100 --> 01:17:07,080
table what these values are so basically

1707
01:17:07,080 --> 01:17:09,179
it can be asked meaning you want to ask

1708
01:17:09,179 --> 01:17:12,060
the other pair if it supports kudos it's

1709
01:17:12,060 --> 01:17:13,920
none which indicates that me as

1710
01:17:13,920 --> 01:17:15,840
descending pin doesn't support kulis at

1711
01:17:15,840 --> 01:17:19,800
all it's full meaning me as the sending

1712
01:17:19,800 --> 01:17:23,100
pair supports Kudos both in the um

1713
01:17:23,100 --> 01:17:25,440
forward secrecy mode and the Note 4

1714
01:17:25,440 --> 01:17:26,880
secrets mode or let's call it the

1715
01:17:26,880 --> 01:17:29,040
stateless and stateful modes

1716
01:17:29,040 --> 01:17:31,199
and you can also indicate Port which

1717
01:17:31,199 --> 01:17:33,600
means you only support Kudos in the nor

1718
01:17:33,600 --> 01:17:36,300
forward secrecy mode

1719
01:17:36,300 --> 01:17:37,199
um

1720
01:17:37,199 --> 01:17:40,440
and um yeah I see Jordan is in the queue

1721
01:17:40,440 --> 01:17:42,480
there also

1722
01:17:42,480 --> 01:17:44,760
but you can also see on the left hand

1723
01:17:44,760 --> 01:17:47,340
side there's a small example basically

1724
01:17:47,340 --> 01:17:50,280
um when you indicate ask from the

1725
01:17:50,280 --> 01:17:53,280
initiator well in edit message too they

1726
01:17:53,280 --> 01:17:54,900
responder with an indicate full meaning

1727
01:17:54,900 --> 01:17:58,260
I fully support Kudos and that's saying

1728
01:17:58,260 --> 01:18:00,120
fully message to you also is an

1729
01:18:00,120 --> 01:18:02,400
indication to the initiator to indicate

1730
01:18:02,400 --> 01:18:04,500
what it supports so it will in turn

1731
01:18:04,500 --> 01:18:06,420
respond with full so after he said the

1732
01:18:06,420 --> 01:18:08,219
execution both pairs know that each

1733
01:18:08,219 --> 01:18:11,219
other supports Kudos in both fs and no

1734
01:18:11,219 --> 01:18:13,140
FS modes

1735
01:18:13,140 --> 01:18:16,140
foreign

1736
01:18:17,040 --> 01:18:19,380
yeah so my question was do we need to

1737
01:18:19,380 --> 01:18:22,560
Signal this at all or I mean it will be

1738
01:18:22,560 --> 01:18:25,260
understood by each party that we are if

1739
01:18:25,260 --> 01:18:28,980
one is proposing to run Kudos or not

1740
01:18:28,980 --> 01:18:31,320
it would I mean it's I would say that

1741
01:18:31,320 --> 01:18:32,699
like even if you didn't have this

1742
01:18:32,699 --> 01:18:34,560
signaling you could always do like a

1743
01:18:34,560 --> 01:18:36,960
trial and error approach so you try to

1744
01:18:36,960 --> 01:18:38,699
run Kudos with other player and see if

1745
01:18:38,699 --> 01:18:40,380
it works

1746
01:18:40,380 --> 01:18:42,300
um so you would eventually learn you

1747
01:18:42,300 --> 01:18:44,460
could try and see if it fails or you

1748
01:18:44,460 --> 01:18:47,100
could try in the fs mode and then the

1749
01:18:47,100 --> 01:18:48,540
other pyramid indicate no I don't

1750
01:18:48,540 --> 01:18:50,699
support FS mode please retry in the no

1751
01:18:50,699 --> 01:18:54,060
FS mode so it's not something that Kudos

1752
01:18:54,060 --> 01:18:55,380
fundamentally relies on this

1753
01:18:55,380 --> 01:18:57,780
functionality it's like an extra nice

1754
01:18:57,780 --> 01:19:00,380
feature that you may have this um

1755
01:19:00,380 --> 01:19:02,280
pre-established pin knowledge after

1756
01:19:02,280 --> 01:19:04,199
running a doc so you don't have to go

1757
01:19:04,199 --> 01:19:06,239
for the trial and error approach but

1758
01:19:06,239 --> 01:19:08,880
it's not a critical and coolest doesn't

1759
01:19:08,880 --> 01:19:11,480
rely on this basically

1760
01:19:11,480 --> 01:19:13,739
okay I think

1761
01:19:13,739 --> 01:19:16,080
um there's nice features and it's also

1762
01:19:16,080 --> 01:19:18,420
adding complexity so it's a trade-off

1763
01:19:18,420 --> 01:19:19,560
there

1764
01:19:19,560 --> 01:19:22,440
yeah I think that's a text for input

1765
01:19:22,440 --> 01:19:25,440
yeah I mean definitely if this can be um

1766
01:19:25,440 --> 01:19:27,239
then there's a trade-off like you said

1767
01:19:27,239 --> 01:19:29,460
is it worth the add complexity I mean

1768
01:19:29,460 --> 01:19:31,980
this is again it's if you use if you

1769
01:19:31,980 --> 01:19:33,540
have Network supported and even if you

1770
01:19:33,540 --> 01:19:36,540
have support with red doc this is not

1771
01:19:36,540 --> 01:19:38,640
um mandatory that you use

1772
01:19:38,640 --> 01:19:39,659
um

1773
01:19:39,659 --> 01:19:41,880
but yeah thank you for them

1774
01:19:41,880 --> 01:19:44,840
for input

1775
01:19:45,900 --> 01:19:48,480
and further updates yeah we now forbid

1776
01:19:48,480 --> 01:19:50,280
sending Kudos messages during a curious

1777
01:19:50,280 --> 01:19:52,320
execution

1778
01:19:52,320 --> 01:19:55,679
um we also indicate clearly that in the

1779
01:19:55,679 --> 01:19:58,679
client initiated version of Kudos and

1780
01:19:58,679 --> 01:20:02,159
the server must include a partial AV in

1781
01:20:02,159 --> 01:20:04,500
its Kudos response message and I'll come

1782
01:20:04,500 --> 01:20:06,659
back to that later but basically this

1783
01:20:06,659 --> 01:20:09,000
prevents are using the same pair of a

1784
01:20:09,000 --> 01:20:11,640
denouncing key in certain situations

1785
01:20:11,640 --> 01:20:13,980
and there's a little open point on how

1786
01:20:13,980 --> 01:20:17,040
to analyze this first score overall

1787
01:20:17,040 --> 01:20:19,080
and we clarified we have this concept of

1788
01:20:19,080 --> 01:20:21,179
a capable and non-capable device so a

1789
01:20:21,179 --> 01:20:22,440
capable device is more like a

1790
01:20:22,440 --> 01:20:24,900
non-constrained device yeah capabilism

1791
01:20:24,900 --> 01:20:26,400
non-constraining device and non-capable

1792
01:20:26,400 --> 01:20:28,260
it's a constrained device and we're not

1793
01:20:28,260 --> 01:20:30,360
defined clearly what mode of Kudos they

1794
01:20:30,360 --> 01:20:32,640
must support So if you're capable device

1795
01:20:32,640 --> 01:20:34,860
you must support forward secrecy mode

1796
01:20:34,860 --> 01:20:36,600
and you should support the no FS mode

1797
01:20:36,600 --> 01:20:38,820
but yeah you can see in the draft these

1798
01:20:38,820 --> 01:20:40,440
these concepts are basically related to

1799
01:20:40,440 --> 01:20:42,420
if the device can write to persistent

1800
01:20:42,420 --> 01:20:43,980
memory or not

1801
01:20:43,980 --> 01:20:45,780
we also a structure the section about

1802
01:20:45,780 --> 01:20:48,840
reasons for a keying and improved some

1803
01:20:48,840 --> 01:20:50,040
portrait regarding the retention

1804
01:20:50,040 --> 01:20:52,620
policies of old contexts

1805
01:20:52,620 --> 01:20:55,860
now I come to this point about partial

1806
01:20:55,860 --> 01:20:57,540
living responses

1807
01:20:57,540 --> 01:20:59,699
so basically if you look on the figure

1808
01:20:59,699 --> 01:21:01,800
to the right there and the blue arrow

1809
01:21:01,800 --> 01:21:04,380
you see that in that response one

1810
01:21:04,380 --> 01:21:06,780
there's a partial ABCO and we'll

1811
01:21:06,780 --> 01:21:09,000
conclude that the server must in fact

1812
01:21:09,000 --> 01:21:10,980
include that partial living in response

1813
01:21:10,980 --> 01:21:13,980
one and the otherwise it's not secure

1814
01:21:13,980 --> 01:21:16,860
behavior and and why do you need to do

1815
01:21:16,860 --> 01:21:18,780
this well it's because you don't want to

1816
01:21:18,780 --> 01:21:22,620
reuse the same adenons and key pair so

1817
01:21:22,620 --> 01:21:24,860
if you look at the table you see that

1818
01:21:24,860 --> 01:21:27,659
these are the request one and response

1819
01:21:27,659 --> 01:21:29,880
one and request two request two from the

1820
01:21:29,880 --> 01:21:32,100
client and server point of view and you

1821
01:21:32,100 --> 01:21:34,560
see that okay let's say the user nouns

1822
01:21:34,560 --> 01:21:37,080
placeholder value a it just stands for a

1823
01:21:37,080 --> 01:21:39,420
particular nouns but the point here is

1824
01:21:39,420 --> 01:21:42,440
that request 1 and response one

1825
01:21:42,440 --> 01:21:45,840
basically the client will use a certain

1826
01:21:45,840 --> 01:21:48,780
amounts and the typical behavior is that

1827
01:21:48,780 --> 01:21:52,199
the server mirrors and reuses the nouns

1828
01:21:52,199 --> 01:21:54,360
from the request so let's say it does

1829
01:21:54,360 --> 01:21:57,300
that then following that the client

1830
01:21:57,300 --> 01:22:00,719
sends a request 2 using the same nouns

1831
01:22:00,719 --> 01:22:03,540
um and you may I mean the thing is that

1832
01:22:03,540 --> 01:22:04,920
like the cloud from the client's point

1833
01:22:04,920 --> 01:22:07,140
of view the client switches context from

1834
01:22:07,140 --> 01:22:09,600
Context one to context new right so from

1835
01:22:09,600 --> 01:22:11,760
the client's point of view it's sending

1836
01:22:11,760 --> 01:22:13,500
two messages with the same numbers but

1837
01:22:13,500 --> 01:22:15,239
it has different key right so it's

1838
01:22:15,239 --> 01:22:17,880
completely fine however on the server

1839
01:22:17,880 --> 01:22:21,000
side server will send response 1 with

1840
01:22:21,000 --> 01:22:23,640
CTX new and the mirrored nouns from the

1841
01:22:23,640 --> 01:22:25,920
client and it will also send response to

1842
01:22:25,920 --> 01:22:28,380
with C takes new and the nearest nodes

1843
01:22:28,380 --> 01:22:29,760
from the client

1844
01:22:29,760 --> 01:22:32,280
and okay you may say why is the most the

1845
01:22:32,280 --> 01:22:35,219
same because the ctx1 has become CTX new

1846
01:22:35,219 --> 01:22:36,719
for the client and then you reset your

1847
01:22:36,719 --> 01:22:38,880
partial ID and so fundamentally

1848
01:22:38,880 --> 01:22:40,739
announced would become the same so

1849
01:22:40,739 --> 01:22:43,260
essentially to avoid this red line we

1850
01:22:43,260 --> 01:22:45,780
will see that the same key and the same

1851
01:22:45,780 --> 01:22:49,199
nonce is used you need the server in

1852
01:22:49,199 --> 01:22:51,120
response one to actually include a

1853
01:22:51,120 --> 01:22:53,640
partial ID

1854
01:22:53,640 --> 01:22:55,679
and now okay the way we fix this now is

1855
01:22:55,679 --> 01:22:58,260
just an adult fix for Kudos but we want

1856
01:22:58,260 --> 01:23:01,320
to define a more generalized fix

1857
01:23:01,320 --> 01:23:04,320
um to say that well this this can also

1858
01:23:04,320 --> 01:23:05,880
be a general fixed first score itself

1859
01:23:05,880 --> 01:23:07,679
because anytime you transition between

1860
01:23:07,679 --> 01:23:10,020
contexts like this you will want to

1861
01:23:10,020 --> 01:23:12,480
include your partial area so we have a

1862
01:23:12,480 --> 01:23:15,179
proposal for text there saying that um

1863
01:23:15,179 --> 01:23:17,760
if an OS corresponds is protected with a

1864
01:23:17,760 --> 01:23:19,739
different security context then the

1865
01:23:19,739 --> 01:23:22,080
corresponding response the corresponding

1866
01:23:22,080 --> 01:23:24,540
request was unprotected with the server

1867
01:23:24,540 --> 01:23:26,219
must include its sequence numbers

1868
01:23:26,219 --> 01:23:27,960
partial AV

1869
01:23:27,960 --> 01:23:30,600
as a Christian in the queue also and an

1870
01:23:30,600 --> 01:23:33,659
exception is appendix B2 because that is

1871
01:23:33,659 --> 01:23:35,159
constructed in a way where it also

1872
01:23:35,159 --> 01:23:39,120
avoids this problem yeah Christian

1873
01:23:39,120 --> 01:23:40,440
um yeah I think this is a very good

1874
01:23:40,440 --> 01:23:42,719
thing to do to just send the partial ID

1875
01:23:42,719 --> 01:23:44,760
again

1876
01:23:44,760 --> 01:23:47,960
yeah I think yeah

1877
01:23:48,120 --> 01:23:50,219
yeah I think it makes sense it's an easy

1878
01:23:50,219 --> 01:23:53,040
way to solve this problem but yeah the

1879
01:23:53,040 --> 01:23:56,280
problem is really like the the um

1880
01:23:56,280 --> 01:23:58,980
you will transition between the between

1881
01:23:58,980 --> 01:24:01,080
contexts in the middle of a message

1882
01:24:01,080 --> 01:24:03,120
processing right so you unprotect

1883
01:24:03,120 --> 01:24:04,920
request one with one context and you

1884
01:24:04,920 --> 01:24:06,239
protect the response one with a

1885
01:24:06,239 --> 01:24:07,500
different context and you may run into

1886
01:24:07,500 --> 01:24:09,300
this problem but including the partial

1887
01:24:09,300 --> 01:24:10,679
release and easy fix

1888
01:24:10,679 --> 01:24:14,460
and now I come to another question so we

1889
01:24:14,460 --> 01:24:16,620
discussed this in multiple earlier

1890
01:24:16,620 --> 01:24:18,719
meetings about the future structure of

1891
01:24:18,719 --> 01:24:21,600
this document so as I mentioned we have

1892
01:24:21,600 --> 01:24:24,000
kind of multiple ports now incense three

1893
01:24:24,000 --> 01:24:26,880
parts the Kudos procedure the limits and

1894
01:24:26,880 --> 01:24:29,100
then those scores and their ID recipient

1895
01:24:29,100 --> 01:24:31,860
ID update section so the question we'd

1896
01:24:31,860 --> 01:24:34,440
like to bring up here is um should this

1897
01:24:34,440 --> 01:24:37,260
be split out into a separate working

1898
01:24:37,260 --> 01:24:40,080
group document meaning the content about

1899
01:24:40,080 --> 01:24:43,020
the limits so

1900
01:24:43,020 --> 01:24:46,199
we kind of try to summarize the feeling

1901
01:24:46,199 --> 01:24:48,480
from the last coin dream where it was

1902
01:24:48,480 --> 01:24:49,860
people

1903
01:24:49,860 --> 01:24:51,140
um

1904
01:24:51,140 --> 01:24:53,640
expressed a strong preference to split

1905
01:24:53,640 --> 01:24:54,960
this out

1906
01:24:54,960 --> 01:24:56,880
and the name of it there is that the

1907
01:24:56,880 --> 01:24:59,520
limits document relies also on the

1908
01:24:59,520 --> 01:25:03,120
document in c4d and if we split this out

1909
01:25:03,120 --> 01:25:06,800
it can be updated independently based on

1910
01:25:06,800 --> 01:25:09,360
what can happen in the cfrd documents

1911
01:25:09,360 --> 01:25:10,739
and such

1912
01:25:10,739 --> 01:25:13,140
and so we got that impression that for

1913
01:25:13,140 --> 01:25:15,480
image poetry was a stronger consensus to

1914
01:25:15,480 --> 01:25:17,340
split it out

1915
01:25:17,340 --> 01:25:17,940
um

1916
01:25:17,940 --> 01:25:20,100
then a similar question comes for the

1917
01:25:20,100 --> 01:25:22,860
method for updating this under recipient

1918
01:25:22,860 --> 01:25:26,480
ID and this send me recipient ID

1919
01:25:26,480 --> 01:25:29,699
procedure it can run either Standalone

1920
01:25:29,699 --> 01:25:32,640
or embedded in a cureless execution so

1921
01:25:32,640 --> 01:25:34,320
the question is should we also split

1922
01:25:34,320 --> 01:25:35,940
this out into a separate working group

1923
01:25:35,940 --> 01:25:38,580
document the consensus from the internet

1924
01:25:38,580 --> 01:25:41,699
was well more mild preference or people

1925
01:25:41,699 --> 01:25:44,360
having no opinion regarding this

1926
01:25:44,360 --> 01:25:46,860
we still need a bit to work on this

1927
01:25:46,860 --> 01:25:49,560
section on preserving observations

1928
01:25:49,560 --> 01:25:50,940
mainly

1929
01:25:50,940 --> 01:25:54,300
so our proposal here is to keep the part

1930
01:25:54,300 --> 01:25:57,179
about the center and zip into the update

1931
01:25:57,179 --> 01:26:00,060
in the current document and when we have

1932
01:26:00,060 --> 01:26:01,920
that section more finalized we come back

1933
01:26:01,920 --> 01:26:03,480
to this

1934
01:26:03,480 --> 01:26:05,460
um but on the limits I would say we have

1935
01:26:05,460 --> 01:26:06,360
a

1936
01:26:06,360 --> 01:26:08,639
our stance is that you can actually be

1937
01:26:08,639 --> 01:26:11,580
split out today

1938
01:26:11,580 --> 01:26:13,199
um as a working group document and the

1939
01:26:13,199 --> 01:26:14,880
benefit of doing this split is basically

1940
01:26:14,880 --> 01:26:15,659
like

1941
01:26:15,659 --> 01:26:18,420
well then this document could in the

1942
01:26:18,420 --> 01:26:21,179
future be focused only on Kudos instead

1943
01:26:21,179 --> 01:26:23,040
of as it is now having kind of three

1944
01:26:23,040 --> 01:26:25,820
separate parts

1945
01:26:28,280 --> 01:26:30,980
yeah that's quickly the main next steps

1946
01:26:30,980 --> 01:26:33,659
we want to address token points that we

1947
01:26:33,659 --> 01:26:35,520
discussed

1948
01:26:35,520 --> 01:26:38,040
um about this restructuring and also

1949
01:26:38,040 --> 01:26:39,600
about the partiality inclusion more

1950
01:26:39,600 --> 01:26:42,179
General text on that and yeah we've got

1951
01:26:42,179 --> 01:26:44,100
some good feedback from ralpha Marine

1952
01:26:44,100 --> 01:26:47,460
Lopez on soft versus hard limits with

1953
01:26:47,460 --> 01:26:49,980
kind of references to ipsec and how they

1954
01:26:49,980 --> 01:26:51,500
have soft limits there

1955
01:26:51,500 --> 01:26:54,900
we want to expand the example about

1956
01:26:54,900 --> 01:26:58,199
those score ID updates to provide

1957
01:26:58,199 --> 01:27:00,840
textual description of the examples and

1958
01:27:00,840 --> 01:27:03,600
yeah any comments or reviews are very

1959
01:27:03,600 --> 01:27:06,179
welcome and also feedback on this

1960
01:27:06,179 --> 01:27:08,400
question about the future structure of

1961
01:27:08,400 --> 01:27:10,020
the document and if we should split out

1962
01:27:10,020 --> 01:27:14,179
and let's say the limit spot for now

1963
01:27:14,300 --> 01:27:16,980
yeah thank you that was the full

1964
01:27:16,980 --> 01:27:19,459
presentation

1965
01:27:21,420 --> 01:27:24,920
thanks Richard yeah thank you

1966
01:27:26,480 --> 01:27:28,679
well I'm just curious because it didn't

1967
01:27:28,679 --> 01:27:30,420
get it fully was the conclusion about

1968
01:27:30,420 --> 01:27:33,060
the split thing especially is it about

1969
01:27:33,060 --> 01:27:35,040
following the plans suggested in that

1970
01:27:35,040 --> 01:27:38,520
slide as is or is there any

1971
01:27:38,520 --> 01:27:41,360
you say so

1972
01:27:41,520 --> 01:27:43,880
it's a hard split of the limits for now

1973
01:27:43,880 --> 01:27:46,260
and we'll see

1974
01:27:46,260 --> 01:27:49,260
updates

1975
01:27:49,320 --> 01:27:51,540
oh

1976
01:27:51,540 --> 01:27:54,000
yeah since you asked for feedback so I I

1977
01:27:54,000 --> 01:27:55,620
think it's a good proposal to split out

1978
01:27:55,620 --> 01:27:57,719
the limits and keep the

1979
01:27:57,719 --> 01:28:00,239
these and the recipient ID options

1980
01:28:00,239 --> 01:28:03,480
in the code AS document

1981
01:28:03,480 --> 01:28:05,159
yeah I think that makes sense for now

1982
01:28:05,159 --> 01:28:07,199
like the limits can

1983
01:28:07,199 --> 01:28:09,060
um more and more freedom to update your

1984
01:28:09,060 --> 01:28:12,440
Customs coming up also yeah

1985
01:28:18,840 --> 01:28:22,560
because when I had this experience just

1986
01:28:22,560 --> 01:28:24,300
just last Friday

1987
01:28:24,300 --> 01:28:26,880
with the new student group who were

1988
01:28:26,880 --> 01:28:28,260
looking at

1989
01:28:28,260 --> 01:28:30,780
various ways to achieve a specific

1990
01:28:30,780 --> 01:28:32,219
objective

1991
01:28:32,219 --> 01:28:35,760
and in the end they looked at the two

1992
01:28:35,760 --> 01:28:38,760
documents one RFC and one internet draft

1993
01:28:38,760 --> 01:28:41,760
and said one has 70 pages one has 90

1994
01:28:41,760 --> 01:28:44,460
Pages let's implement the one with 70

1995
01:28:44,460 --> 01:28:45,900
pages

1996
01:28:45,900 --> 01:28:49,080
and I I suspect that's not happening

1997
01:28:49,080 --> 01:28:51,540
with students only so I think we need to

1998
01:28:51,540 --> 01:28:53,699
be a bit careful to

1999
01:28:53,699 --> 01:28:57,120
not create documents that have the

2000
01:28:57,120 --> 01:28:58,139
appearance

2001
01:28:58,139 --> 01:29:00,840
of being complex by by having stuff in

2002
01:29:00,840 --> 01:29:03,960
there that you actually don't need to to

2003
01:29:03,960 --> 01:29:06,179
read to implement it I think that's a

2004
01:29:06,179 --> 01:29:07,920
very good point because if someone comes

2005
01:29:07,920 --> 01:29:09,659
to this document only interested in the

2006
01:29:09,659 --> 01:29:12,179
limits or all interesting kudos

2007
01:29:12,179 --> 01:29:15,780
then they may be misled to think that

2008
01:29:15,780 --> 01:29:17,760
this is longer and more complex than it

2009
01:29:17,760 --> 01:29:20,100
is just because it has multiple

2010
01:29:20,100 --> 01:29:22,080
independent Parts basically so if we

2011
01:29:22,080 --> 01:29:23,460
could split out the limits it would make

2012
01:29:23,460 --> 01:29:26,580
the document simpler and make the new ad

2013
01:29:26,580 --> 01:29:30,540
limits document also simpler definitely

2014
01:29:30,540 --> 01:29:34,400
so thanks for the feedback yeah

2015
01:29:36,300 --> 01:29:38,699
[Music]

2016
01:29:38,699 --> 01:29:40,920
okay next is Martina with one

2017
01:29:40,920 --> 01:29:42,900
presentation covering the last two slots

2018
01:29:42,900 --> 01:29:45,080
actually

2019
01:29:55,040 --> 01:29:58,220
[Music]

2020
01:29:58,340 --> 01:30:00,360
uh so yeah

2021
01:30:00,360 --> 01:30:02,580
um for my talk yeah I will talk about

2022
01:30:02,580 --> 01:30:04,920
DNS of a co-op in the first part and

2023
01:30:04,920 --> 01:30:07,500
then about the DNS message format uh

2024
01:30:07,500 --> 01:30:09,659
using sibo

2025
01:30:09,659 --> 01:30:11,219
um these are two drafts one is the

2026
01:30:11,219 --> 01:30:14,940
working group draft for the doc and the

2027
01:30:14,940 --> 01:30:17,340
other one is currently a

2028
01:30:17,340 --> 01:30:19,050
person on draft

2029
01:30:19,050 --> 01:30:19,560
[Music]

2030
01:30:19,560 --> 01:30:20,219
um

2031
01:30:20,219 --> 01:30:22,500
yeah first of course I spoke to speak

2032
01:30:22,500 --> 01:30:24,420
about Dennis over Co-op the motivation

2033
01:30:24,420 --> 01:30:26,340
behind that for those who still don't

2034
01:30:26,340 --> 01:30:27,480
know

2035
01:30:27,480 --> 01:30:30,120
um is that we want to have an iot device

2036
01:30:30,120 --> 01:30:34,199
that requests a name and we want to

2037
01:30:34,199 --> 01:30:36,120
protect against uh potential

2038
01:30:36,120 --> 01:30:37,679
eavesdrivers and a typical

2039
01:30:37,679 --> 01:30:39,360
countermeasure there is to encrypt the

2040
01:30:39,360 --> 01:30:40,739
name resolution

2041
01:30:40,739 --> 01:30:42,860
and oh

2042
01:30:42,860 --> 01:30:47,040
and yeah uh with DNS over Co-op we would

2043
01:30:47,040 --> 01:30:49,080
have such encryption and additionally we

2044
01:30:49,080 --> 01:30:50,820
would also benefit from blockwise

2045
01:30:50,820 --> 01:30:53,580
message transfer and uh the shared

2046
01:30:53,580 --> 01:30:56,639
research systems system resources of the

2047
01:30:56,639 --> 01:30:59,340
co-op application so we can use the same

2048
01:30:59,340 --> 01:31:03,420
sockets and buffers and reuse also uh

2049
01:31:03,420 --> 01:31:06,719
The Cooperative transmission mechanism

2050
01:31:06,719 --> 01:31:12,239
and yeah since the last ITF uh not that

2051
01:31:12,239 --> 01:31:14,040
much has happened except for of course

2052
01:31:14,040 --> 01:31:18,060
uh the working group adaption but we

2053
01:31:18,060 --> 01:31:20,699
added some security considerations on

2054
01:31:20,699 --> 01:31:25,080
how ID 0 will should be used in an

2055
01:31:25,080 --> 01:31:27,000
encrypted or how the idea in general

2056
01:31:27,000 --> 01:31:30,719
should be used when an unencrypted use

2057
01:31:30,719 --> 01:31:33,480
um then we replace the layer violation

2058
01:31:33,480 --> 01:31:36,420
where we stated something about con

2059
01:31:36,420 --> 01:31:39,239
um with a statement of facts that well

2060
01:31:39,239 --> 01:31:42,780
if you uh use uh con you have you can

2061
01:31:42,780 --> 01:31:44,460
you don't need a re-transmission

2062
01:31:44,460 --> 01:31:46,139
mechanism

2063
01:31:46,139 --> 01:31:48,600
and we removed the doc server

2064
01:31:48,600 --> 01:31:50,219
considerations which were basically

2065
01:31:50,219 --> 01:31:52,679
moved to its own draft which a little

2066
01:31:52,679 --> 01:31:55,560
bit uh I will discuss a little bit in

2067
01:31:55,560 --> 01:31:58,679
the next steps also

2068
01:31:58,679 --> 01:32:02,580
uh then there is some open discussion

2069
01:32:02,580 --> 01:32:05,520
still on Doc uh we got some feedback

2070
01:32:05,520 --> 01:32:06,960
from DNS up

2071
01:32:06,960 --> 01:32:09,600
uh thanks for that by the way

2072
01:32:09,600 --> 01:32:11,580
um so the first question was basically

2073
01:32:11,580 --> 01:32:15,300
why there why it isn't just Doh via

2074
01:32:15,300 --> 01:32:17,580
Co-op Gateway

2075
01:32:17,580 --> 01:32:19,800
um that the draft should explain that at

2076
01:32:19,800 --> 01:32:23,100
least um then we uh use the different

2077
01:32:23,100 --> 01:32:26,639
TTL rewriting proposal that is uh

2078
01:32:26,639 --> 01:32:28,560
different from the one in Doh that

2079
01:32:28,560 --> 01:32:30,780
should also be probably explained a

2080
01:32:30,780 --> 01:32:34,460
little bit more in depth depth

2081
01:32:35,420 --> 01:32:38,580
was a question if doc lives on a URI

2082
01:32:38,580 --> 01:32:41,100
path of course it does and uh if there

2083
01:32:41,100 --> 01:32:43,620
is a default path that we can use as a

2084
01:32:43,620 --> 01:32:46,560
common practice in Co-op uh so maybe

2085
01:32:46,560 --> 01:32:51,600
something that uh some more Co-op Pros

2086
01:32:51,600 --> 01:32:54,659
can answer and uh then that is also

2087
01:32:54,659 --> 01:32:56,340
something that was brought up by Carson

2088
01:32:56,340 --> 01:32:58,980
in the GitHub um that we need some

2089
01:32:58,980 --> 01:33:01,920
uh recommendation how to bootstrap doc

2090
01:33:01,920 --> 01:33:04,860
with a service B record

2091
01:33:04,860 --> 01:33:07,199
um where we probably need to allocate

2092
01:33:07,199 --> 01:33:11,880
some almp n ID for Co-Op or the end or

2093
01:33:11,880 --> 01:33:14,480
dtls

2094
01:33:14,820 --> 01:33:17,460
um are there any comments already on

2095
01:33:17,460 --> 01:33:18,900
that maybe

2096
01:33:18,900 --> 01:33:21,540
before I proceed

2097
01:33:21,540 --> 01:33:24,239
okay then I continue

2098
01:33:24,239 --> 01:33:24,840
um

2099
01:33:24,840 --> 01:33:26,820
so for the next step

2100
01:33:26,820 --> 01:33:28,920
um of course addressing the feedback is

2101
01:33:28,920 --> 01:33:33,060
one big step then we still need to pick

2102
01:33:33,060 --> 01:33:35,040
an ID for the application DNS message

2103
01:33:35,040 --> 01:33:38,100
for Content format uh I guess I will

2104
01:33:38,100 --> 01:33:41,880
just propose one and um yeah for the

2105
01:33:41,880 --> 01:33:43,980
other draft where that was split out so

2106
01:33:43,980 --> 01:33:47,340
basically of that um where this you can

2107
01:33:47,340 --> 01:33:49,560
have a look at that but there was

2108
01:33:49,560 --> 01:33:51,840
already some comments that it might not

2109
01:33:51,840 --> 01:33:53,880
be that much of a

2110
01:33:53,880 --> 01:33:58,679
uh edit value so maybe we can just

2111
01:33:58,679 --> 01:34:01,739
leave it by the wayside so uh yeah we'll

2112
01:34:01,739 --> 01:34:04,139
have to see about that

2113
01:34:04,139 --> 01:34:06,780
uh so thank you that was basically the

2114
01:34:06,780 --> 01:34:09,060
first talk uh are there any questions or

2115
01:34:09,060 --> 01:34:11,420
comments

2116
01:34:14,760 --> 01:34:16,139
yes question

2117
01:34:16,139 --> 01:34:18,360
uh just a brief comment on the default

2118
01:34:18,360 --> 01:34:20,040
path uh while we don't usually do

2119
01:34:20,040 --> 01:34:22,739
default paths I would recommend that a

2120
01:34:22,739 --> 01:34:24,780
server that is just a DNS server just

2121
01:34:24,780 --> 01:34:28,020
place the lookup lookup server resource

2122
01:34:28,020 --> 01:34:30,239
at the slash resource it's like saving

2123
01:34:30,239 --> 01:34:31,620
at least two bytes compared to every

2124
01:34:31,620 --> 01:34:33,780
other message and if it's this piece of

2125
01:34:33,780 --> 01:34:36,120
software using doing just that and it

2126
01:34:36,120 --> 01:34:37,440
can easily do that there is nothing

2127
01:34:37,440 --> 01:34:39,360
special about the slash resource that's

2128
01:34:39,360 --> 01:34:43,199
available and why not use that

2129
01:34:43,199 --> 01:34:47,100
uh yeah I I think I agree on that so

2130
01:34:47,100 --> 01:34:50,960
yeah uh bench watch

2131
01:34:53,639 --> 01:34:58,139
hi uh so I think that that is a

2132
01:34:58,139 --> 01:35:00,239
perfectly reasonable recommendation but

2133
01:35:00,239 --> 01:35:02,460
the the question here is

2134
01:35:02,460 --> 01:35:05,639
is it possible to bootstrap a DNS over

2135
01:35:05,639 --> 01:35:09,120
co-app connection without explicitly

2136
01:35:09,120 --> 01:35:11,360
conveying a path

2137
01:35:11,360 --> 01:35:14,580
because if it is necessary to it's

2138
01:35:14,580 --> 01:35:18,000
always necessary to pay a path then that

2139
01:35:18,000 --> 01:35:20,460
places additional requirements on the

2140
01:35:20,460 --> 01:35:24,780
bootstrap mechanism that that is used

2141
01:35:24,780 --> 01:35:26,820
so for example in the context of

2142
01:35:26,820 --> 01:35:29,760
something like service bindings you need

2143
01:35:29,760 --> 01:35:32,400
a service bindings parameter that

2144
01:35:32,400 --> 01:35:34,199
conveys the path and that parameter

2145
01:35:34,199 --> 01:35:37,739
always has to be present uh you know the

2146
01:35:37,739 --> 01:35:40,739
client can't probe for the presence of

2147
01:35:40,739 --> 01:35:43,380
uh of a DNS server co-ops nerver on a or

2148
01:35:43,380 --> 01:35:45,719
supported for DNS over co-op on a co-op

2149
01:35:45,719 --> 01:35:48,120
server because it doesn't know what path

2150
01:35:48,120 --> 01:35:51,179
to look at

2151
01:35:51,179 --> 01:35:53,219
this is all stuff that has come up with

2152
01:35:53,219 --> 01:35:56,460
DNS over https and there is no default

2153
01:35:56,460 --> 01:35:59,040
path in DNS over https we have we have

2154
01:35:59,040 --> 01:36:00,540
this all working but we've had to plumb

2155
01:36:00,540 --> 01:36:02,460
through the path component through all

2156
01:36:02,460 --> 01:36:04,920
of the bootstrap channels

2157
01:36:04,920 --> 01:36:07,020
uh I guess Carson has an answer for that

2158
01:36:07,020 --> 01:36:10,440
yeah I think if we can emulate the HTTP

2159
01:36:10,440 --> 01:36:13,320
here then that's fine

2160
01:36:13,320 --> 01:36:14,940
um I think it's important to keep in

2161
01:36:14,940 --> 01:36:17,940
mind that uh in in the constrained

2162
01:36:17,940 --> 01:36:19,920
environment the discovery will not

2163
01:36:19,920 --> 01:36:23,820
necessarily run over DNS that will often

2164
01:36:23,820 --> 01:36:27,120
be in the resource directory and there

2165
01:36:27,120 --> 01:36:29,639
of course we can indicate the path

2166
01:36:29,639 --> 01:36:31,460
because that's just part of the link

2167
01:36:31,460 --> 01:36:33,980
that the resource directory

2168
01:36:33,980 --> 01:36:38,639
provides so uh one possible outcome I

2169
01:36:38,639 --> 01:36:40,260
don't know whether that's necessary but

2170
01:36:40,260 --> 01:36:45,420
one possible outcome would be to say for

2171
01:36:45,420 --> 01:36:48,060
um servers that use resource directory

2172
01:36:48,060 --> 01:36:51,719
discovery uh they can use any path for

2173
01:36:51,719 --> 01:36:53,940
servers that use a more limited form of

2174
01:36:53,940 --> 01:36:57,780
Discovery they are stuck with the mg

2175
01:36:57,780 --> 01:37:01,440
path yeah so that could just one more

2176
01:37:01,440 --> 01:37:04,400
suggestion on the table

2177
01:37:04,500 --> 01:37:07,340
yeah you're right

2178
01:37:13,920 --> 01:37:16,199
see who's next yeah

2179
01:37:16,199 --> 01:37:18,780
it's me no I I was thinking about uh we

2180
01:37:18,780 --> 01:37:21,560
could also reserve one of the

2181
01:37:21,560 --> 01:37:25,739
well-known something resources for that

2182
01:37:25,739 --> 01:37:29,340
and I've seen this also in other working

2183
01:37:29,340 --> 01:37:31,800
groups that sometimes that's useful if

2184
01:37:31,800 --> 01:37:34,440
you have a known resource path because

2185
01:37:34,440 --> 01:37:37,260
then in that case you can skip Discovery

2186
01:37:37,260 --> 01:37:38,880
processes and

2187
01:37:38,880 --> 01:37:41,460
in constrained networks it's often yeah

2188
01:37:41,460 --> 01:37:44,880
takes time takes network resources

2189
01:37:44,880 --> 01:37:46,800
to do this whole round trip of this

2190
01:37:46,800 --> 01:37:49,139
cover and then get a response back so if

2191
01:37:49,139 --> 01:37:51,900
you can typical situations skip all of

2192
01:37:51,900 --> 01:37:54,420
that and just make your message a little

2193
01:37:54,420 --> 01:37:55,860
bit longer

2194
01:37:55,860 --> 01:37:58,620
it's not not that many bites so it's

2195
01:37:58,620 --> 01:38:00,480
also useful to have one of these

2196
01:38:00,480 --> 01:38:02,639
well-known piles because I'm not sure if

2197
01:38:02,639 --> 01:38:05,159
we can assume that the server will if

2198
01:38:05,159 --> 01:38:07,560
you get an IP address and port for

2199
01:38:07,560 --> 01:38:09,840
example uh through some

2200
01:38:09,840 --> 01:38:13,080
some way and if you don't get a resource

2201
01:38:13,080 --> 01:38:15,060
I don't think you can always assume that

2202
01:38:15,060 --> 01:38:17,699
it's always at the slash root resource

2203
01:38:17,699 --> 01:38:19,199
or

2204
01:38:19,199 --> 01:38:21,900
yeah maybe we can actually there's a

2205
01:38:21,900 --> 01:38:23,580
similar case we are working on right now

2206
01:38:23,580 --> 01:38:25,560
in the animal working group where we

2207
01:38:25,560 --> 01:38:27,300
also want to play something at the slash

2208
01:38:27,300 --> 01:38:29,219
resource

2209
01:38:29,219 --> 01:38:31,860
and there the ideas what you discover is

2210
01:38:31,860 --> 01:38:34,679
basically in IP address and a port

2211
01:38:34,679 --> 01:38:37,020
and and you also know the purpose of

2212
01:38:37,020 --> 01:38:39,659
that so it's kind of a relay uh Co-op

2213
01:38:39,659 --> 01:38:42,360
relay function and then you also know by

2214
01:38:42,360 --> 01:38:44,520
that said oh the default resource is

2215
01:38:44,520 --> 01:38:47,639
slash so that yeah I mean we also have

2216
01:38:47,639 --> 01:38:51,060
like the uh content format where we can

2217
01:38:51,060 --> 01:38:52,380
basically

2218
01:38:52,380 --> 01:38:54,719
say tell the server hey I actually want

2219
01:38:54,719 --> 01:38:57,420
this DNS resource but maybe that's not a

2220
01:38:57,420 --> 01:39:00,840
good idea in our evaluations we use DNS

2221
01:39:00,840 --> 01:39:03,300
but then again we use four bytes in the

2222
01:39:03,300 --> 01:39:04,739
header so

2223
01:39:04,739 --> 01:39:07,500
yeah I guess that we we need to put some

2224
01:39:07,500 --> 01:39:10,020
thought into that more uh this is the

2225
01:39:10,020 --> 01:39:11,219
conclusion

2226
01:39:11,219 --> 01:39:14,400
yeah but at least consider uh like one

2227
01:39:14,400 --> 01:39:16,260
of those well-known Parts because a

2228
01:39:16,260 --> 01:39:19,020
server can easily uh support multiple

2229
01:39:19,020 --> 01:39:20,760
assets could support the well-known one

2230
01:39:20,760 --> 01:39:23,400
plus discovered one which may be the

2231
01:39:23,400 --> 01:39:26,400
slash resource so uh so it's fine to

2232
01:39:26,400 --> 01:39:28,080
have multiple

2233
01:39:28,080 --> 01:39:30,179
and if you have something to fall back

2234
01:39:30,179 --> 01:39:31,500
to then

2235
01:39:31,500 --> 01:39:33,659
if you already have an IP address and

2236
01:39:33,659 --> 01:39:35,520
ports where to go to or maybe it's a

2237
01:39:35,520 --> 01:39:38,460
default port then you can just go and do

2238
01:39:38,460 --> 01:39:40,739
the DNS request without needing to

2239
01:39:40,739 --> 01:39:45,080
discover anything first that's the idea

2240
01:39:48,600 --> 01:39:51,659
okay then uh let's continue with the

2241
01:39:51,659 --> 01:39:54,000
second talk

2242
01:39:54,000 --> 01:39:56,159
um which is about uh concise binary

2243
01:39:56,159 --> 01:39:59,520
object representation of DNS messages or

2244
01:39:59,520 --> 01:40:03,840
sibo in of this DNS messages

2245
01:40:03,840 --> 01:40:06,120
um so the uh

2246
01:40:06,120 --> 01:40:07,699
the

2247
01:40:07,699 --> 01:40:10,199
motivation is basically that we have a

2248
01:40:10,199 --> 01:40:12,179
huge drawback of DNS and constraint

2249
01:40:12,179 --> 01:40:15,060
messages that if we look at the diagrams

2250
01:40:15,060 --> 01:40:18,239
here we're on the x-axis we see for each

2251
01:40:18,239 --> 01:40:21,719
name length a pair of queries and quad a

2252
01:40:21,719 --> 01:40:23,820
responses

2253
01:40:23,820 --> 01:40:26,159
um and on the y-axis the size of the

2254
01:40:26,159 --> 01:40:28,500
packet uh with the fragmentation borders

2255
01:40:28,500 --> 01:40:29,639
marked

2256
01:40:29,639 --> 01:40:33,600
at uh as a dashed line we see that we

2257
01:40:33,600 --> 01:40:36,540
quickly even for very short names

2258
01:40:36,540 --> 01:40:37,260
um

2259
01:40:37,260 --> 01:40:42,000
can exceed the fragmentation limit so we

2260
01:40:42,000 --> 01:40:44,580
need some way to compress our DNS

2261
01:40:44,580 --> 01:40:46,880
messages

2262
01:40:47,219 --> 01:40:48,060
um

2263
01:40:48,060 --> 01:40:51,420
and uh yeah that's basically uh the

2264
01:40:51,420 --> 01:40:54,300
proposal we wrote application DNS

2265
01:40:54,300 --> 01:40:56,050
placebo

2266
01:40:56,050 --> 01:40:56,760
[Music]

2267
01:40:56,760 --> 01:40:57,600
um

2268
01:40:57,600 --> 01:41:00,360
the idea behind it is that we reduce the

2269
01:41:00,360 --> 01:41:02,940
packet size by the of DNS queries and

2270
01:41:02,940 --> 01:41:05,520
replies by encoding them first in seabor

2271
01:41:05,520 --> 01:41:09,380
and then emitting redundant or

2272
01:41:09,380 --> 01:41:12,719
unnecessary and DNS fields in the DNS

2273
01:41:12,719 --> 01:41:16,800
queries and responses and then we also

2274
01:41:16,800 --> 01:41:18,600
provide address and name compression

2275
01:41:18,600 --> 01:41:21,000
using packed Sable as a seabor as an

2276
01:41:21,000 --> 01:41:25,380
optional measure for the DNS responses

2277
01:41:25,380 --> 01:41:28,500
um for DNS queries you can see the

2278
01:41:28,500 --> 01:41:31,320
definition of them in in cddl on the

2279
01:41:31,320 --> 01:41:34,080
left side for those who don't know that

2280
01:41:34,080 --> 01:41:36,179
much cddl there's also an explanation on

2281
01:41:36,179 --> 01:41:38,460
the right side so basically a DNS query

2282
01:41:38,460 --> 01:41:41,340
is a sibo array which at minimum

2283
01:41:41,340 --> 01:41:44,699
contains the text string of the domain

2284
01:41:44,699 --> 01:41:45,719
name

2285
01:41:45,719 --> 01:41:48,780
and it also optionally provides an ID

2286
01:41:48,780 --> 01:41:51,300
and a record tab specification the ID

2287
01:41:51,300 --> 01:41:53,340
defaults to zero if it's not present the

2288
01:41:53,340 --> 01:41:56,219
record type defaults to quote a and the

2289
01:41:56,219 --> 01:41:58,080
record class to in if they are not

2290
01:41:58,080 --> 01:42:00,179
present

2291
01:42:00,179 --> 01:42:03,000
um the DNS resource record which is then

2292
01:42:03,000 --> 01:42:06,060
part of the response is defined to also

2293
01:42:06,060 --> 01:42:07,920
be a sibo array which at minimum

2294
01:42:07,920 --> 01:42:12,260
contains a TT a TTL and a resource data

2295
01:42:12,260 --> 01:42:15,719
and it optionally can also contain the

2296
01:42:15,719 --> 01:42:18,300
name and the record type and if both are

2297
01:42:18,300 --> 01:42:20,219
not present then they basically defer to

2298
01:42:20,219 --> 01:42:22,139
the question value

2299
01:42:22,139 --> 01:42:24,600
and the DNS response is an array of

2300
01:42:24,600 --> 01:42:27,719
arrays which at minimum contains the

2301
01:42:27,719 --> 01:42:29,600
answer section

2302
01:42:29,600 --> 01:42:32,760
which again is an array of DNS resource

2303
01:42:32,760 --> 01:42:34,500
records

2304
01:42:34,500 --> 01:42:36,719
um but this basically generally assumes

2305
01:42:36,719 --> 01:42:39,060
that the transport can map the query to

2306
01:42:39,060 --> 01:42:42,840
the response which for example for DOA C

2307
01:42:42,840 --> 01:42:45,139
or Doh is the case

2308
01:42:45,139 --> 01:42:47,580
but we can also provide the original

2309
01:42:47,580 --> 01:42:49,860
question and the ID

2310
01:42:49,860 --> 01:42:51,900
if that is not the case

2311
01:42:51,900 --> 01:42:54,239
yeah

2312
01:42:54,239 --> 01:42:56,520
um yeah for a simple example if we want

2313
01:42:56,520 --> 01:42:59,940
to query the IPv6 address of example.org

2314
01:42:59,940 --> 01:43:04,920
we have this uh basically in uh sibo

2315
01:43:04,920 --> 01:43:08,820
diagnostic format represented here

2316
01:43:08,820 --> 01:43:11,340
um this is then certain bytes compared

2317
01:43:11,340 --> 01:43:14,460
to the 52 bytes of wire format which is

2318
01:43:14,460 --> 01:43:17,040
a compression rate of 400 percent and

2319
01:43:17,040 --> 01:43:19,679
the correspondent corresponding response

2320
01:43:19,679 --> 01:43:21,719
you can also see on the slide which is

2321
01:43:21,719 --> 01:43:24,420
only 24 bytes compared to the 68 bytes

2322
01:43:24,420 --> 01:43:26,940
of the wire format compression

2323
01:43:26,940 --> 01:43:30,060
um of the wire format which provides us

2324
01:43:30,060 --> 01:43:32,760
with a compression rate of 284 percent

2325
01:43:32,760 --> 01:43:34,260
or three percent

2326
01:43:34,260 --> 01:43:35,460
uh

2327
01:43:35,460 --> 01:43:37,320
yeah

2328
01:43:37,320 --> 01:43:39,480
um for a more complex example if we for

2329
01:43:39,480 --> 01:43:40,860
example want to request the annual

2330
01:43:40,860 --> 01:43:44,820
record of a example.org domain

2331
01:43:44,820 --> 01:43:45,480
um

2332
01:43:45,480 --> 01:43:48,300
like we would do for dnssd

2333
01:43:48,300 --> 01:43:51,300
then we get a good compression for the

2334
01:43:51,300 --> 01:43:52,980
wire format still

2335
01:43:52,980 --> 01:43:57,480
but for the response uh not so much we

2336
01:43:57,480 --> 01:44:00,739
have then 200 bytes of the sibo format

2337
01:44:00,739 --> 01:44:03,900
compared to the 195 price of the wire

2338
01:44:03,900 --> 01:44:05,940
format

2339
01:44:05,940 --> 01:44:09,480
um so um we need some address and name

2340
01:44:09,480 --> 01:44:11,880
compression

2341
01:44:11,880 --> 01:44:14,400
um which with a little bit of past and

2342
01:44:14,400 --> 01:44:16,199
help we

2343
01:44:16,199 --> 01:44:19,500
provided so um

2344
01:44:19,500 --> 01:44:23,159
yeah for our proposal we provide an

2345
01:44:23,159 --> 01:44:25,679
optional cboard support for the response

2346
01:44:25,679 --> 01:44:29,040
which is negotiated by a content type no

2347
01:44:29,040 --> 01:44:32,179
media type negotiation

2348
01:44:32,179 --> 01:44:35,400
via this uh packed parameter for the

2349
01:44:35,400 --> 01:44:37,020
media type

2350
01:44:37,020 --> 01:44:40,800
uh in as a note in version one of the

2351
01:44:40,800 --> 01:44:43,739
drafts this is still its own media type

2352
01:44:43,739 --> 01:44:46,500
um but in the next version it will be a

2353
01:44:46,500 --> 01:44:48,780
parameter

2354
01:44:48,780 --> 01:44:49,500
um

2355
01:44:49,500 --> 01:44:52,800
yeah and then we make a shared value and

2356
01:44:52,800 --> 01:44:55,560
argument table one list instead of uh

2357
01:44:55,560 --> 01:44:58,800
compared to the sibo pack draft

2358
01:44:58,800 --> 01:45:01,560
and uh then basically we the response

2359
01:45:01,560 --> 01:45:04,679
becomes another area of two arrays

2360
01:45:04,679 --> 01:45:07,860
which the first parameter is the packing

2361
01:45:07,860 --> 01:45:09,900
table which is basically a complete

2362
01:45:09,900 --> 01:45:12,179
combined shared value and argument table

2363
01:45:12,179 --> 01:45:15,840
and the second element is a compressed

2364
01:45:15,840 --> 01:45:17,639
DNS response

2365
01:45:17,639 --> 01:45:20,179
the structure follows of course the

2366
01:45:20,179 --> 01:45:22,560
uncompressed DNS response button is

2367
01:45:22,560 --> 01:45:24,179
compressed

2368
01:45:24,179 --> 01:45:26,760
and if we look at our and the question

2369
01:45:26,760 --> 01:45:29,280
was that came up in other meetings was

2370
01:45:29,280 --> 01:45:32,520
why we then don't use for example stuff

2371
01:45:32,520 --> 01:45:34,619
like Chic there

2372
01:45:34,619 --> 01:45:35,400
um

2373
01:45:35,400 --> 01:45:37,199
the problem is there that we basically

2374
01:45:37,199 --> 01:45:39,540
have this this chick we have this

2375
01:45:39,540 --> 01:45:42,540
assumed Network structure and somehow

2376
01:45:42,540 --> 01:45:46,199
the rules for compression are exchanged

2377
01:45:46,199 --> 01:45:48,000
between the device and the shake

2378
01:45:48,000 --> 01:45:49,860
compressor decompressor

2379
01:45:49,860 --> 01:45:53,219
and so that the rule ID can be used for

2380
01:45:53,219 --> 01:45:55,800
the identification of how this was

2381
01:45:55,800 --> 01:45:57,420
compressed

2382
01:45:57,420 --> 01:45:59,219
and uh

2383
01:45:59,219 --> 01:46:01,020
that basically means there must be an

2384
01:46:01,020 --> 01:46:02,280
established connection between the

2385
01:46:02,280 --> 01:46:04,920
device and the compressor and

2386
01:46:04,920 --> 01:46:08,280
decompressor um which usually we don't

2387
01:46:08,280 --> 01:46:10,619
have when we just select the DNS server

2388
01:46:10,619 --> 01:46:13,340
with a DNS client we can basically just

2389
01:46:13,340 --> 01:46:16,040
select any DNS server there

2390
01:46:16,040 --> 01:46:20,580
so uh we don't have any uh agreed upon

2391
01:46:20,580 --> 01:46:22,199
rules between the server and the client

2392
01:46:22,199 --> 01:46:24,320
except maybe for a few Global

2393
01:46:24,320 --> 01:46:27,060
compression contracts that we have in

2394
01:46:27,060 --> 01:46:29,639
DNS for example the tlds

2395
01:46:29,639 --> 01:46:32,100
uh so that is why we decided for the

2396
01:46:32,100 --> 01:46:34,380
pack format

2397
01:46:34,380 --> 01:46:36,300
um and to give you an example how this

2398
01:46:36,300 --> 01:46:38,400
then would compress down

2399
01:46:38,400 --> 01:46:42,239
uh is that we have this table on the in

2400
01:46:42,239 --> 01:46:44,159
the first array here

2401
01:46:44,159 --> 01:46:45,840
um which is then referenced in the

2402
01:46:45,840 --> 01:46:47,820
response itself and even though in

2403
01:46:47,820 --> 01:46:50,580
diagnostic format it looks much bigger

2404
01:46:50,580 --> 01:46:53,520
than the original uh if you compile that

2405
01:46:53,520 --> 01:46:57,119
to actual cboard it's actually only 119

2406
01:46:57,119 --> 01:46:59,540
bytes so we have a compression rate of

2407
01:46:59,540 --> 01:47:04,139
164 bytes uh percent sorry

2408
01:47:04,139 --> 01:47:05,280
um yeah

2409
01:47:05,280 --> 01:47:09,119
um there's also maybe a way to how we

2410
01:47:09,119 --> 01:47:12,360
can even more optimize it then if we use

2411
01:47:12,360 --> 01:47:14,219
these Global compression contexts I

2412
01:47:14,219 --> 01:47:15,300
mentioned before

2413
01:47:15,300 --> 01:47:19,440
like the tlds to even Elite more stuff

2414
01:47:19,440 --> 01:47:23,400
but um maybe that's not that much worse

2415
01:47:23,400 --> 01:47:26,059
of an effort

2416
01:47:26,100 --> 01:47:27,119
um

2417
01:47:27,119 --> 01:47:30,360
yeah but for the next steps here we need

2418
01:47:30,360 --> 01:47:33,239
to Define some more details using packed

2419
01:47:33,239 --> 01:47:36,239
sibo's for example we didn't Define yet

2420
01:47:36,239 --> 01:47:38,400
how the packing table is constructured

2421
01:47:38,400 --> 01:47:40,100
constructed

2422
01:47:40,100 --> 01:47:43,500
and uh yeah again the global compression

2423
01:47:43,500 --> 01:47:46,199
context might also be a venue that needs

2424
01:47:46,199 --> 01:47:48,719
to be discussed and thought upon

2425
01:47:48,719 --> 01:47:52,260
So yeah thank you and if you have any

2426
01:47:52,260 --> 01:47:53,580
comments and

2427
01:47:53,580 --> 01:47:54,900
questions

2428
01:47:54,900 --> 01:47:56,639
please ask them

2429
01:47:56,639 --> 01:47:59,420
yeah pin

2430
01:47:59,880 --> 01:48:03,980
so there have been a few attempts to

2431
01:48:03,980 --> 01:48:07,980
re-express DNS uh over the past few

2432
01:48:07,980 --> 01:48:10,380
years and

2433
01:48:10,380 --> 01:48:13,260
uh in general I would say dnsop has not

2434
01:48:13,260 --> 01:48:15,960
been very friendly to these kinds of

2435
01:48:15,960 --> 01:48:19,260
proposals so I would I would say you

2436
01:48:19,260 --> 01:48:22,619
should start by by going to DNS knob and

2437
01:48:22,619 --> 01:48:25,500
seeing what the DNS Community makes of

2438
01:48:25,500 --> 01:48:27,659
it I think that the biggest concern

2439
01:48:27,659 --> 01:48:30,719
there has generally been about

2440
01:48:30,719 --> 01:48:34,139
ossification the concern being that if a

2441
01:48:34,139 --> 01:48:37,440
new format cannot express not only any

2442
01:48:37,440 --> 01:48:39,360
DNS message that can be defined today

2443
01:48:39,360 --> 01:48:42,300
but any DNS message that will ever could

2444
01:48:42,300 --> 01:48:45,119
ever be defined losslessly

2445
01:48:45,119 --> 01:48:48,600
uh if it doesn't meet that bar then it

2446
01:48:48,600 --> 01:48:51,060
is ossifying it's creating devices that

2447
01:48:51,060 --> 01:48:52,739
appear to do DNS but actually only

2448
01:48:52,739 --> 01:48:54,600
support a subset you know creating

2449
01:48:54,600 --> 01:48:57,000
problems for the evolution of DNS in the

2450
01:48:57,000 --> 01:48:57,659
future

2451
01:48:57,659 --> 01:49:02,159
so that uh that has been a a concern

2452
01:49:02,159 --> 01:49:04,860
it's definitely something to think about

2453
01:49:04,860 --> 01:49:06,540
in general

2454
01:49:06,540 --> 01:49:09,239
I I have trouble seeing the value here

2455
01:49:09,239 --> 01:49:10,619
because

2456
01:49:10,619 --> 01:49:14,159
DNS messages are almost always a tiny

2457
01:49:14,159 --> 01:49:16,500
fraction of the total bandwidth they're

2458
01:49:16,500 --> 01:49:18,420
a bootstrap mechanism for something else

2459
01:49:18,420 --> 01:49:21,840
so saving even 50 percent

2460
01:49:21,840 --> 01:49:25,020
off of the size of your DNS messages

2461
01:49:25,020 --> 01:49:28,500
doesn't save you very much it's not

2462
01:49:28,500 --> 01:49:32,960
really measurable in aggregate

2463
01:49:34,860 --> 01:49:35,699
um

2464
01:49:35,699 --> 01:49:38,639
I I tend to disagree with that that it's

2465
01:49:38,639 --> 01:49:41,820
not that little of traffic but uh

2466
01:49:41,820 --> 01:49:44,760
yeah we uh we actually of course we want

2467
01:49:44,760 --> 01:49:47,760
to go with DNS up into that uh so yeah

2468
01:49:47,760 --> 01:49:51,360
but first I guess we need to uh have the

2469
01:49:51,360 --> 01:49:54,840
general format uh done before we go

2470
01:49:54,840 --> 01:49:56,400
further into that

2471
01:49:56,400 --> 01:49:59,280
uh let's go yeah

2472
01:49:59,280 --> 01:50:01,500
um yeah I was just considering uh that

2473
01:50:01,500 --> 01:50:04,380
the the normal DNS format has basically

2474
01:50:04,380 --> 01:50:07,320
the packing already integrated there so

2475
01:50:07,320 --> 01:50:10,260
you can use it or cannot use it but it's

2476
01:50:10,260 --> 01:50:12,600
all the same format and I think that's

2477
01:50:12,600 --> 01:50:14,940
General easier uh

2478
01:50:14,940 --> 01:50:17,159
to to handle that so you don't need to

2479
01:50:17,159 --> 01:50:19,679
consider oh wait there's two formats or

2480
01:50:19,679 --> 01:50:21,540
I need to negotiate

2481
01:50:21,540 --> 01:50:23,880
so somehow I think it would be easy if

2482
01:50:23,880 --> 01:50:27,540
you just one format where you can with a

2483
01:50:27,540 --> 01:50:29,460
clients or basically sender of the

2484
01:50:29,460 --> 01:50:31,139
message can actually compress on things

2485
01:50:31,139 --> 01:50:33,659
or decide to not compress things and the

2486
01:50:33,659 --> 01:50:35,580
receiver side will always

2487
01:50:35,580 --> 01:50:39,199
be able to construct uh yeah back to the

2488
01:50:39,199 --> 01:50:41,639
uncompressed message so that

2489
01:50:41,639 --> 01:50:44,100
yeah beautiful the year behind that is

2490
01:50:44,100 --> 01:50:47,960
that the client might not support

2491
01:50:47,960 --> 01:50:51,239
Co-op so that's the way the negotiation

2492
01:50:51,239 --> 01:50:53,040
part is basically a way for the client

2493
01:50:53,040 --> 01:50:55,980
to say hey I support that and if you're

2494
01:50:55,980 --> 01:50:58,980
uh yeah the response is quite large then

2495
01:50:58,980 --> 01:51:01,619
please send it back to me okay yeah you

2496
01:51:01,619 --> 01:51:03,900
just want to be sure that that you can

2497
01:51:03,900 --> 01:51:07,080
have clients that that cannot do the

2498
01:51:07,080 --> 01:51:08,820
decompression okay

2499
01:51:08,820 --> 01:51:11,100
yeah and then one other just random

2500
01:51:11,100 --> 01:51:13,860
remark is I have a system on my laptop

2501
01:51:13,860 --> 01:51:17,040
running simulated uh Wireless nodes that

2502
01:51:17,040 --> 01:51:20,880
can talk DNS SD so register services and

2503
01:51:20,880 --> 01:51:21,900
query

2504
01:51:21,900 --> 01:51:24,480
things like that so just uh just to be

2505
01:51:24,480 --> 01:51:28,920
aware of okay thanks thank you

2506
01:51:28,920 --> 01:51:32,159
uh awesome yeah just just a quick answer

2507
01:51:32,159 --> 01:51:35,760
to Ben uh if you look at the the

2508
01:51:35,760 --> 01:51:37,199
percentage

2509
01:51:37,199 --> 01:51:40,560
of the DNS traffic to other traffic then

2510
01:51:40,560 --> 01:51:42,540
of course the the total

2511
01:51:42,540 --> 01:51:45,900
gain of a concise representation is

2512
01:51:45,900 --> 01:51:48,719
pretty limited but I think as Martine

2513
01:51:48,719 --> 01:51:50,659
had in in her first

2514
01:51:50,659 --> 01:51:52,920
slides the

2515
01:51:52,920 --> 01:51:55,440
um the environments that have limited

2516
01:51:55,440 --> 01:51:58,800
uh pdu sizes

2517
01:51:58,800 --> 01:52:01,619
um actually have a cost

2518
01:52:01,619 --> 01:52:04,639
for for using larger packets that is

2519
01:52:04,639 --> 01:52:06,780
going Beyond

2520
01:52:06,780 --> 01:52:10,800
just a few bytes

2521
01:52:10,800 --> 01:52:13,500
um so the the problem really is that you

2522
01:52:13,500 --> 01:52:16,020
you're using DNS when when you

2523
01:52:16,020 --> 01:52:18,780
when you're resetting when when you are

2524
01:52:18,780 --> 01:52:21,119
uh recovering from from a network

2525
01:52:21,119 --> 01:52:22,980
failure or something like that

2526
01:52:22,980 --> 01:52:25,020
and that's exactly when when everybody

2527
01:52:25,020 --> 01:52:28,199
else does it and uh your network will be

2528
01:52:28,199 --> 01:52:29,940
impaired a little bit

2529
01:52:29,940 --> 01:52:32,940
and if then you actually have to do

2530
01:52:32,940 --> 01:52:34,980
application data fragmentation so this

2531
01:52:34,980 --> 01:52:36,780
is not IP fragmentation but but the

2532
01:52:36,780 --> 01:52:40,139
adaptation layer that needs to do the

2533
01:52:40,139 --> 01:52:41,699
fragmentation

2534
01:52:41,699 --> 01:52:43,860
um you are further reducing uh your

2535
01:52:43,860 --> 01:52:47,520
performance so it would be nice if the

2536
01:52:47,520 --> 01:52:50,639
the actual DNS interchange would be as

2537
01:52:50,639 --> 01:52:53,159
resilient as possible and that that

2538
01:52:53,159 --> 01:52:56,159
makes it necessary to stay within about

2539
01:52:56,159 --> 01:52:59,520
80 bytes yeah and I mean what you can

2540
01:52:59,520 --> 01:53:02,100
see also in on the slide is that uh

2541
01:53:02,100 --> 01:53:06,300
uh larger packages also create more

2542
01:53:06,300 --> 01:53:08,639
overhead because they also include the

2543
01:53:08,639 --> 01:53:11,460
link and six Loop and headers and and so

2544
01:53:11,460 --> 01:53:15,860
we try to want to try to avoid this

2545
01:53:16,139 --> 01:53:19,980
uh there's yep and again okay

2546
01:53:19,980 --> 01:53:21,000
yeah

2547
01:53:21,000 --> 01:53:22,560
so

2548
01:53:22,560 --> 01:53:25,020
if you're trying to stay under this

2549
01:53:25,020 --> 01:53:26,760
limit deterministically then I don't

2550
01:53:26,760 --> 01:53:29,340
think a a concise representation is

2551
01:53:29,340 --> 01:53:32,159
sufficient right so like the the path

2552
01:53:32,159 --> 01:53:35,159
that seems more appealing to me is to

2553
01:53:35,159 --> 01:53:37,500
say we're not providing a general

2554
01:53:37,500 --> 01:53:40,440
purpose representation of DNS that's

2555
01:53:40,440 --> 01:53:41,880
more compact which is very difficult

2556
01:53:41,880 --> 01:53:44,040
because the base representation which is

2557
01:53:44,040 --> 01:53:45,659
already very compact

2558
01:53:45,659 --> 01:53:49,619
uh what we're doing is is defining a

2559
01:53:49,619 --> 01:53:52,260
very simple service like a name to IP

2560
01:53:52,260 --> 01:53:55,800
service you only get one IP Mac uh you

2561
01:53:55,800 --> 01:53:57,780
know very simplified

2562
01:53:57,780 --> 01:54:00,719
uh that could then sort of this use case

2563
01:54:00,719 --> 01:54:02,460
without claiming to be a general purpose

2564
01:54:02,460 --> 01:54:05,840
replacement for DNS

2565
01:54:06,360 --> 01:54:10,380
no because we of course also want to

2566
01:54:10,380 --> 01:54:12,360
support stuff like DNS service Discovery

2567
01:54:12,360 --> 01:54:14,880
where we don't just want to

2568
01:54:14,880 --> 01:54:17,280
resolve names to addresses but also

2569
01:54:17,280 --> 01:54:20,520
maybe other records so

2570
01:54:20,520 --> 01:54:24,199
uh uh I don't think a name to address

2571
01:54:24,199 --> 01:54:29,000
service would just suffice for that

2572
01:54:35,400 --> 01:54:37,560
I don't worry over time even in that

2573
01:54:37,560 --> 01:54:39,860
case I would suggest

2574
01:54:39,860 --> 01:54:42,840
uh seeing if you could specify an API

2575
01:54:42,840 --> 01:54:45,420
specifically for service Discovery and

2576
01:54:45,420 --> 01:54:46,980
think of it as a service Discovery

2577
01:54:46,980 --> 01:54:50,059
system not a DNS

2578
01:54:50,639 --> 01:54:52,139
okay

2579
01:54:52,139 --> 01:54:55,139
foreign

2580
01:55:05,960 --> 01:55:08,880
I really don't understand your argument

2581
01:55:08,880 --> 01:55:12,060
um why are you arguing against the

2582
01:55:12,060 --> 01:55:15,420
compression of the DNS messages I mean

2583
01:55:15,420 --> 01:55:19,260
that the DNS is a rather tiny part uh

2584
01:55:19,260 --> 01:55:21,780
also over a traffic okay fine but it's

2585
01:55:21,780 --> 01:55:25,860
not an argument to not standardize I

2586
01:55:25,860 --> 01:55:27,360
mean work on the compassion of the

2587
01:55:27,360 --> 01:55:30,019
messages

2588
01:55:32,100 --> 01:55:35,600
uh so I do think it is right like

2589
01:55:35,600 --> 01:55:38,340
complexity has a cost

2590
01:55:38,340 --> 01:55:41,820
um defining new new things with small

2591
01:55:41,820 --> 01:55:43,860
benefits is

2592
01:55:43,860 --> 01:55:46,260
um is not I think a good a good path

2593
01:55:46,260 --> 01:55:48,600
forward in general we should only take

2594
01:55:48,600 --> 01:55:51,659
the create all of this documentation and

2595
01:55:51,659 --> 01:55:53,520
complexity if there's a significant

2596
01:55:53,520 --> 01:55:57,179
payoff that actually benefits users in a

2597
01:55:57,179 --> 01:55:59,340
meaningful way but

2598
01:55:59,340 --> 01:56:01,920
uh but specifically in this case I think

2599
01:56:01,920 --> 01:56:03,719
that as I mentioned there are also some

2600
01:56:03,719 --> 01:56:05,520
systemic concerns about alternative

2601
01:56:05,520 --> 01:56:07,380
representations of DNS so for example

2602
01:56:07,380 --> 01:56:09,900
there's been a lot of effort to to try

2603
01:56:09,900 --> 01:56:12,659
to Define Json representations of DNS

2604
01:56:12,659 --> 01:56:15,300
that's and there are apis out there that

2605
01:56:15,300 --> 01:56:17,940
will give you DNS answers in Json format

2606
01:56:17,940 --> 01:56:20,460
but standardizing that has been very

2607
01:56:20,460 --> 01:56:22,320
challenging because

2608
01:56:22,320 --> 01:56:24,900
it's not enough to specify a Json format

2609
01:56:24,900 --> 01:56:27,139
that represents DNS as it exists today

2610
01:56:27,139 --> 01:56:30,900
it needs to be able to evolve forward

2611
01:56:30,900 --> 01:56:33,179
with any future uses of DNS including

2612
01:56:33,179 --> 01:56:35,699
things like edns options that have yet

2613
01:56:35,699 --> 01:56:36,840
to be defined

2614
01:56:36,840 --> 01:56:38,179
so

2615
01:56:38,179 --> 01:56:41,699
that uh that raises the bar considerably

2616
01:56:41,699 --> 01:56:45,360
I do think that it's possible to to

2617
01:56:45,360 --> 01:56:47,940
define a representation of DNS messages

2618
01:56:47,940 --> 01:56:50,400
that is a little bit smaller on average

2619
01:56:50,400 --> 01:56:55,139
than uh than the current messages and

2620
01:56:55,139 --> 01:56:57,600
certainly you can save a lot of space if

2621
01:56:57,600 --> 01:56:59,460
you're willing to discard some of the

2622
01:56:59,460 --> 01:57:01,139
information but discarding DNS

2623
01:57:01,139 --> 01:57:07,100
information is a very sticky area

2624
01:57:08,520 --> 01:57:11,040
um yeah customer I just want to say we

2625
01:57:11,040 --> 01:57:13,560
already have a resource Discovery

2626
01:57:13,560 --> 01:57:15,960
service so we don't need a new one uh

2627
01:57:15,960 --> 01:57:19,860
this really is about uh enabling uh DNS

2628
01:57:19,860 --> 01:57:23,159
usage uh as as it is being used

2629
01:57:23,159 --> 01:57:25,440
uh in other environments in in the

2630
01:57:25,440 --> 01:57:29,540
constrained environments as well yeah

2631
01:57:33,900 --> 01:57:35,820
yeah that's good John yeah I just

2632
01:57:35,820 --> 01:57:39,300
another comment on on this show uh what

2633
01:57:39,300 --> 01:57:41,580
I work with is actually a constrained

2634
01:57:41,580 --> 01:57:44,040
Network implementation so it's a threat

2635
01:57:44,040 --> 01:57:46,980
wireless mesh network based on six low

2636
01:57:46,980 --> 01:57:49,080
band but it's not the most constrained

2637
01:57:49,080 --> 01:57:51,900
so it still has the 2.4 gigahertz

2638
01:57:51,900 --> 01:57:56,040
operation so it can have a relatively

2639
01:57:56,040 --> 01:57:56,900
large

2640
01:57:56,900 --> 01:57:59,699
usage of the Bands so no duty cycle

2641
01:57:59,699 --> 01:58:02,400
limits so so I know there are even far

2642
01:58:02,400 --> 01:58:03,719
more constraints

2643
01:58:03,719 --> 01:58:05,460
types of networks I think than than

2644
01:58:05,460 --> 01:58:07,679
threats not for threats what we use is

2645
01:58:07,679 --> 01:58:11,099
just the normal DNS so for

2646
01:58:11,099 --> 01:58:14,880
doing server lookups but also uh DNS SD

2647
01:58:14,880 --> 01:58:17,460
so Service registration querying for

2648
01:58:17,460 --> 01:58:19,980
services so that's all done with uh yeah

2649
01:58:19,980 --> 01:58:22,320
let's say on my meta devices with with

2650
01:58:22,320 --> 01:58:23,940
the regular

2651
01:58:23,940 --> 01:58:26,219
DNS format so in that sense I understand

2652
01:58:26,219 --> 01:58:28,980
the argument a bit uh

2653
01:58:28,980 --> 01:58:31,619
yeah why would that yeah why do things

2654
01:58:31,619 --> 01:58:33,060
differently are we of course we already

2655
01:58:33,060 --> 01:58:35,760
have the DNS formats and it offers some

2656
01:58:35,760 --> 01:58:38,040
uh form of compression maybe not the

2657
01:58:38,040 --> 01:58:39,719
best but uh

2658
01:58:39,719 --> 01:58:42,179
yeah it's it's uh in terms of traffic

2659
01:58:42,179 --> 01:58:45,179
it's not uh you know not the main source

2660
01:58:45,179 --> 01:58:46,980
of traffic you can say for the

2661
01:58:46,980 --> 01:58:49,380
obligations

2662
01:58:49,380 --> 01:58:52,440
so I can understand that argument so

2663
01:58:52,440 --> 01:58:54,540
maybe it's good to think about well

2664
01:58:54,540 --> 01:58:56,280
maybe they're more construct even more

2665
01:58:56,280 --> 01:58:57,900
constraint implementations here where

2666
01:58:57,900 --> 01:59:01,260
you have to be uh like in the single uh

2667
01:59:01,260 --> 01:59:03,080
radio frame

2668
01:59:03,080 --> 01:59:07,619
for for common queries like looking up a

2669
01:59:07,619 --> 01:59:10,800
name to an RP address yeah which is the

2670
01:59:10,800 --> 01:59:12,719
most common example I'm not sure if

2671
01:59:12,719 --> 01:59:14,400
those type of systems would actually go

2672
01:59:14,400 --> 01:59:16,320
into service discovery

2673
01:59:16,320 --> 01:59:20,159
things like that I don't know but uh

2674
01:59:20,159 --> 01:59:21,840
yeah it's good good to think about

2675
01:59:21,840 --> 01:59:24,060
something that might be very compact for

2676
01:59:24,060 --> 01:59:26,219
for the the bulk of the queries which is

2677
01:59:26,219 --> 01:59:29,300
like okay give me the IP address of this

2678
01:59:29,300 --> 01:59:32,520
server and maybe they are slightly more

2679
01:59:32,520 --> 01:59:34,560
bulkier for for complex things here like

2680
01:59:34,560 --> 01:59:36,960
if you have a DNS SD maybe that that

2681
01:59:36,960 --> 01:59:39,719
just uses the existing encoding I can

2682
01:59:39,719 --> 01:59:42,719
also imagine that so yeah in that case

2683
01:59:42,719 --> 01:59:44,880
there is no there's no problem that that

2684
01:59:44,880 --> 01:59:46,800
you hit a limit that your new format

2685
01:59:46,800 --> 01:59:48,840
cannot do everything that's at Classic

2686
01:59:48,840 --> 01:59:51,599
DNS can do so that's also something to

2687
01:59:51,599 --> 01:59:53,219
consider as well so a bit of a hybrid

2688
01:59:53,219 --> 01:59:56,780
approach in that case yeah

2689
01:59:58,739 --> 02:00:01,860
so are there I think the queue is closed

2690
02:00:01,860 --> 02:00:04,040
so

2691
02:00:06,900 --> 02:00:08,880
so

2692
02:00:08,880 --> 02:00:11,840
yeah thank you

2693
02:00:25,159 --> 02:00:27,360
so there's going to be an interview on

2694
02:00:27,360 --> 02:00:31,619
November 23 already scheduled and it's

2695
02:00:31,619 --> 02:00:34,260
going to cover most vhrefs and Target

2696
02:00:34,260 --> 02:00:36,780
attributes uh we can also continue this

2697
02:00:36,780 --> 02:00:40,080
discussion on dnsc board

2698
02:00:40,080 --> 02:00:42,239
there's more interim already discovered

2699
02:00:42,239 --> 02:00:43,639
already

2700
02:00:43,639 --> 02:00:46,860
till then thanks everyone for attending

2701
02:00:46,860 --> 02:00:50,360
enjoying the rest of itf-15

2702
02:00:53,719 --> 02:00:56,280
thank you

2703
02:00:56,280 --> 02:00:59,820
uh just one thing I want to do

2704
02:00:59,820 --> 02:01:01,980
a Terrace and the working group it's

2705
02:01:01,980 --> 02:01:05,639
Francesca I have been going through the

2706
02:01:05,639 --> 02:01:08,940
um list of erratas and uh there are

2707
02:01:08,940 --> 02:01:10,980
currently 10 reports of the router and I

2708
02:01:10,980 --> 02:01:13,020
will post the remaining list I'm looking

2709
02:01:13,020 --> 02:01:16,440
for uh agreement that this is the right

2710
02:01:16,440 --> 02:01:18,540
way to mark them so I will send an email

2711
02:01:18,540 --> 02:01:19,860
shortly

2712
02:01:19,860 --> 02:01:22,320
look out for that thank you

2713
02:01:22,320 --> 02:01:24,920
thanks

2714
02:01:33,239 --> 02:01:35,480
foreign

2715
02:02:05,099 --> 02:02:08,719
remember that now that we

2716
02:02:09,480 --> 02:02:11,480
have

2717
02:02:11,820 --> 02:02:14,480
a problem

