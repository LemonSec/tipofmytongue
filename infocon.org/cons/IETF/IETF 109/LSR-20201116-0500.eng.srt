1
00:00:23,600 --> 00:00:31,840
let's see

2
00:01:01,680 --> 00:01:08,240
is anybody using on jabber

3
00:01:05,438 --> 00:01:09,600
uh i've got the oh yeah that's the chat

4
00:01:08,240 --> 00:01:11,039
window

5
00:01:09,600 --> 00:01:13,199
oh okay i got the chat window we can

6
00:01:11,040 --> 00:01:16,000
just uh that's oh it's

7
00:01:13,200 --> 00:01:16,799
it's it that is jabber okay yeah that's

8
00:01:16,000 --> 00:01:18,880
chamber

9
00:01:16,799 --> 00:01:20,159
so um yeah i don't think we need a

10
00:01:18,880 --> 00:01:22,640
scribe right i

11
00:01:20,159 --> 00:01:23,920
i don't think so either that's more

12
00:01:22,640 --> 00:01:27,840
useful when

13
00:01:23,920 --> 00:01:27,840
we're not virtual

14
00:01:32,560 --> 00:01:43,609
uh keep trying to reply to people

15
00:01:40,560 --> 00:01:43,609
[Music]

16
00:01:50,479 --> 00:01:53,679
zhen zhang is still having problems but

17
00:01:53,119 --> 00:01:55,520
i

18
00:01:53,680 --> 00:01:58,640
don't know how much longer we can wait

19
00:01:55,520 --> 00:01:58,640
for people to get this

20
00:01:58,719 --> 00:02:05,679
fixed um there were test sessions

21
00:02:01,759 --> 00:02:06,399
so i think we do need to start pretty

22
00:02:05,680 --> 00:02:11,039
soon though

23
00:02:06,399 --> 00:02:11,038
right yeah i think so okay

24
00:02:13,680 --> 00:02:16,720
all right um

25
00:02:18,640 --> 00:02:22,640
all right everybody so this is the lsr

26
00:02:21,200 --> 00:02:25,920
working group

27
00:02:22,640 --> 00:02:27,920
as the screen share shows and our agenda

28
00:02:25,920 --> 00:02:29,119
is up there

29
00:02:27,920 --> 00:02:32,879
[Music]

30
00:02:29,120 --> 00:02:32,879
does anyone have any problems with the

31
00:02:34,840 --> 00:02:37,840
agenda

32
00:02:38,239 --> 00:02:45,920
okay so um i will bring up

33
00:02:42,080 --> 00:02:45,920
the status slides

34
00:02:46,080 --> 00:02:51,840
let's see if i can do that

35
00:03:09,040 --> 00:03:11,920
wow it works

36
00:03:16,000 --> 00:03:20,560
um there are a couple people saying they

37
00:03:18,959 --> 00:03:23,200
can't hear even with chrome i

38
00:03:20,560 --> 00:03:25,680
i don't know what to do though i don't

39
00:03:23,200 --> 00:03:28,640
think we can just hold the meeting up

40
00:03:25,680 --> 00:03:31,040
no i don't know what to do either uh i

41
00:03:28,640 --> 00:03:33,200
had a problem with that for about

42
00:03:31,040 --> 00:03:34,400
maybe they could have updated to big sur

43
00:03:33,200 --> 00:03:36,480
and there could be problems we don't

44
00:03:34,400 --> 00:03:37,360
even know about

45
00:03:36,480 --> 00:03:40,409
i will um

46
00:03:37,360 --> 00:03:40,409
[Music]

47
00:03:41,040 --> 00:03:47,840
there's a there's a reporting problems

48
00:03:49,280 --> 00:04:01,840
and i'll do that and then we'll start

49
00:03:52,000 --> 00:04:01,840
see if that works

50
00:04:02,720 --> 00:04:08,720
okay uh yeah if you want to start ac

51
00:04:09,280 --> 00:04:17,040
okay next slide

52
00:04:15,200 --> 00:04:20,560
okay this is uh i guess the first

53
00:04:17,040 --> 00:04:22,720
meeting of ietf 109.

54
00:04:20,560 --> 00:04:23,600
be aware of the note well and that if

55
00:04:22,720 --> 00:04:26,960
you

56
00:04:23,600 --> 00:04:28,479
uh by participating in this meeting

57
00:04:26,960 --> 00:04:30,000
registering to participate in these

58
00:04:28,479 --> 00:04:33,758
meetings you

59
00:04:30,000 --> 00:04:37,360
are obliged to disclose any

60
00:04:33,759 --> 00:04:37,360
ipr that you are aware of

61
00:04:38,400 --> 00:04:42,000
also i mean it it's it's wider than that

62
00:04:40,400 --> 00:04:42,799
you can just kind of look at the slide i

63
00:04:42,000 --> 00:04:47,120
know you've seen

64
00:04:42,800 --> 00:04:47,120
most you've seen this many times before

65
00:04:49,600 --> 00:04:53,040
okay next slide

66
00:04:54,400 --> 00:05:02,560
since ietf 108 virtual we uh

67
00:04:58,080 --> 00:05:06,240
have three rfcs the isis invalid

68
00:05:02,560 --> 00:05:09,759
uh tlv handling that was good to finally

69
00:05:06,240 --> 00:05:13,759
get that all documented and get the

70
00:05:09,759 --> 00:05:18,160
iana updated as to what tlvs were valid

71
00:05:13,759 --> 00:05:22,080
for which uh pd pdus

72
00:05:18,160 --> 00:05:25,440
and these two uh the two app

73
00:05:22,080 --> 00:05:29,198
specific link attributes uh

74
00:05:25,440 --> 00:05:30,960
drafts both for isis and ospf

75
00:05:29,199 --> 00:05:32,560
uh these are these are good as

76
00:05:30,960 --> 00:05:34,960
especially

77
00:05:32,560 --> 00:05:35,759
as we spend a lot of time on these those

78
00:05:34,960 --> 00:05:37,840
people

79
00:05:35,759 --> 00:05:39,440
know that we are involved in for ospf it

80
00:05:37,840 --> 00:05:43,758
allows us to get

81
00:05:39,440 --> 00:05:45,600
down to much many fewer lsas for all the

82
00:05:43,759 --> 00:05:49,039
different applications

83
00:05:45,600 --> 00:05:50,880
that we're going to support i mean uh

84
00:05:49,039 --> 00:05:52,479
so this was this this is great that

85
00:05:50,880 --> 00:05:55,039
these are done

86
00:05:52,479 --> 00:05:55,039
next slide

87
00:05:57,199 --> 00:06:01,199
we have the same drafts with missed

88
00:05:59,120 --> 00:06:03,680
references the two yang models

89
00:06:01,199 --> 00:06:05,039
ospf and isis and the tunnel end caps

90
00:06:03,680 --> 00:06:07,600
now the tunnel end caps

91
00:06:05,039 --> 00:06:09,120
appears to me moving along in idr they

92
00:06:07,600 --> 00:06:13,360
got a new editor

93
00:06:09,120 --> 00:06:16,000
thank you john and uh it's uh

94
00:06:13,360 --> 00:06:16,960
hopefully it'll be published soon and

95
00:06:16,000 --> 00:06:20,080
that'll go

96
00:06:16,960 --> 00:06:21,599
now another thing about these giraffes

97
00:06:20,080 --> 00:06:24,000
these three drafts these are the last

98
00:06:21,600 --> 00:06:27,840
ones that don't have lsr

99
00:06:24,000 --> 00:06:31,280
in the name so after this we'll

100
00:06:27,840 --> 00:06:35,599
have finished all the work

101
00:06:31,280 --> 00:06:39,359
when we had separate isis and ospf

102
00:06:35,600 --> 00:06:39,360
working groups next slide

103
00:06:41,440 --> 00:06:46,800
i guess we have these two that are

104
00:06:44,240 --> 00:06:49,520
waiting on

105
00:06:46,800 --> 00:06:51,280
the segment routing bgpls segment

106
00:06:49,520 --> 00:06:55,680
routing extensions

107
00:06:51,280 --> 00:07:00,638
the isis and ospf uh elc advertisement

108
00:06:55,680 --> 00:07:00,639
that's entropy label capability next

109
00:07:00,840 --> 00:07:03,840
slide

110
00:07:05,919 --> 00:07:13,039
the we completed the last call on

111
00:07:09,280 --> 00:07:16,400
the isis rv6 extension

112
00:07:13,039 --> 00:07:18,960
uh we just completed the flex algorithm

113
00:07:16,400 --> 00:07:20,400
working group last call and the prefix

114
00:07:18,960 --> 00:07:22,560
originator is

115
00:07:20,400 --> 00:07:23,919
pretty close to pretty close to complete

116
00:07:22,560 --> 00:07:28,080
or we had some

117
00:07:23,919 --> 00:07:30,639
uh discussion fun differences with the

118
00:07:28,080 --> 00:07:32,800
similar document in isis just recently

119
00:07:30,639 --> 00:07:32,800
but

120
00:07:33,280 --> 00:07:37,919
that should go forward as well next

121
00:07:35,599 --> 00:07:37,919
slide

122
00:07:43,039 --> 00:07:49,599
uh i think

123
00:07:46,479 --> 00:07:51,039
for the ospf and isis segment routing

124
00:07:49,599 --> 00:07:54,080
the base the mpls

125
00:07:51,039 --> 00:07:57,360
based segment routing yang models

126
00:07:54,080 --> 00:07:58,000
are also ready i'm an offer on that

127
00:07:57,360 --> 00:08:01,440
we'll

128
00:07:58,000 --> 00:08:04,080
we'll probably last call them

129
00:08:01,440 --> 00:08:06,080
before the next ietf additionally the

130
00:08:04,080 --> 00:08:09,440
reverse metric

131
00:08:06,080 --> 00:08:12,240
that's uh augmentation to the isis

132
00:08:09,440 --> 00:08:13,599
yang model that's on the rcq i think i

133
00:08:12,240 --> 00:08:15,680
uh

134
00:08:13,599 --> 00:08:17,199
i'll i'll working group last call that

135
00:08:15,680 --> 00:08:21,440
one probably with

136
00:08:17,199 --> 00:08:23,759
before uh within the next few weeks

137
00:08:21,440 --> 00:08:24,960
and extended lsas i think this is also

138
00:08:23,759 --> 00:08:28,720
ready

139
00:08:24,960 --> 00:08:28,719
i'm also offer on that uh

140
00:08:29,520 --> 00:08:34,799
next slide yeah i was gonna um

141
00:08:32,640 --> 00:08:35,919
mention my mic didn't unmute last time

142
00:08:34,799 --> 00:08:39,199
but on the

143
00:08:35,919 --> 00:08:40,478
on the prefix originator um i'm shepard

144
00:08:39,200 --> 00:08:43,120
on that one and

145
00:08:40,479 --> 00:08:44,640
it's it's ready to go when it went into

146
00:08:43,120 --> 00:08:45,600
work in your blast call there was some

147
00:08:44,640 --> 00:08:48,800
contention over

148
00:08:45,600 --> 00:08:49,760
some use cases being removed and that

149
00:08:48,800 --> 00:08:53,120
got resolved the

150
00:08:49,760 --> 00:08:54,560
use cases were removed um so uh if if

151
00:08:53,120 --> 00:08:56,399
anybody uh

152
00:08:54,560 --> 00:08:58,319
we'll be doing we'll be ending the last

153
00:08:56,399 --> 00:09:00,399
call very soon

154
00:08:58,320 --> 00:09:01,920
so if there are any more objections then

155
00:09:00,399 --> 00:09:02,320
please post them i don't believe there

156
00:09:01,920 --> 00:09:04,959
are

157
00:09:02,320 --> 00:09:06,080
i think that it's ready to go but just

158
00:09:04,959 --> 00:09:10,160
in case get get

159
00:09:06,080 --> 00:09:10,160
your objection and fast

160
00:09:14,880 --> 00:09:23,040
right um

161
00:09:18,800 --> 00:09:26,240
okay we have uh these existing

162
00:09:23,040 --> 00:09:28,719
working group documents the dynamic

163
00:09:26,240 --> 00:09:28,720
flooding

164
00:09:29,360 --> 00:09:34,080
this it seems that at least we might

165
00:09:32,160 --> 00:09:34,839
have some implementations in progress

166
00:09:34,080 --> 00:09:39,040
it's

167
00:09:34,839 --> 00:09:40,640
it's a foundation for other drafts

168
00:09:39,040 --> 00:09:42,399
so hopefully we can have some good

169
00:09:40,640 --> 00:09:45,439
discussion on that one during

170
00:09:42,399 --> 00:09:47,519
during the next uh couple months and

171
00:09:45,440 --> 00:09:49,040
maybe working group let's call it the

172
00:09:47,519 --> 00:09:52,720
hierarchy

173
00:09:49,040 --> 00:09:54,319
we probably won't move forward with that

174
00:09:52,720 --> 00:09:57,680
right now because

175
00:09:54,320 --> 00:10:01,120
it's a pretty complicated

176
00:09:57,680 --> 00:10:04,959
uh not complex but it's a it's a major

177
00:10:01,120 --> 00:10:07,760
protocol uh

178
00:10:04,959 --> 00:10:08,560
enhancement so if nobody's going to

179
00:10:07,760 --> 00:10:10,560
implement it

180
00:10:08,560 --> 00:10:12,079
i don't know that it makes sense to work

181
00:10:10,560 --> 00:10:14,239
in group less call it and move it

182
00:10:12,079 --> 00:10:16,079
forward

183
00:10:14,240 --> 00:10:17,600
and then this is this is one of those

184
00:10:16,079 --> 00:10:18,399
ones that you might you know that it

185
00:10:17,600 --> 00:10:20,880
really does help

186
00:10:18,399 --> 00:10:21,440
maybe to get some implementations or

187
00:10:20,880 --> 00:10:26,480
that's right

188
00:10:21,440 --> 00:10:26,480
right patient experience yeah i agree

189
00:10:29,279 --> 00:10:35,040
and we have uh the flooding algorithm

190
00:10:33,040 --> 00:10:36,480
one one of the one of the a documented

191
00:10:35,040 --> 00:10:39,760
flooding algorithm for

192
00:10:36,480 --> 00:10:40,399
the distributed case that's based on the

193
00:10:39,760 --> 00:10:43,519
first

194
00:10:40,399 --> 00:10:48,160
draft the flooding uh on dense graphs

195
00:10:43,519 --> 00:10:48,160
draft slide

196
00:10:51,760 --> 00:10:56,720
we have all the let's see is there

197
00:10:54,480 --> 00:10:58,720
anything

198
00:10:56,720 --> 00:11:01,760
that was an accomplishment we decided to

199
00:10:58,720 --> 00:11:05,519
go forward with experimental drafts

200
00:11:01,760 --> 00:11:09,040
for flooding reduction and we accepted

201
00:11:05,519 --> 00:11:12,839
three pieces of work the area proxy the

202
00:11:09,040 --> 00:11:15,040
flood reflection for isis and the isis

203
00:11:12,839 --> 00:11:18,079
ttz

204
00:11:15,040 --> 00:11:19,279
we also have uh

205
00:11:18,079 --> 00:11:21,120
i probably shouldn't have listed the

206
00:11:19,279 --> 00:11:22,320
second one this is a mistake

207
00:11:21,120 --> 00:11:24,959
shouldn't be a new working group

208
00:11:22,320 --> 00:11:28,240
document it's been a long time

209
00:11:24,959 --> 00:11:30,640
and uh i need to

210
00:11:28,240 --> 00:11:32,000
make sure i saw that the offers re

211
00:11:30,640 --> 00:11:32,880
refreshed and make sure there's still

212
00:11:32,000 --> 00:11:34,320
interest in this

213
00:11:32,880 --> 00:11:37,920
it's pretty much just a protocol

214
00:11:34,320 --> 00:11:37,920
maintenance um

215
00:11:38,640 --> 00:11:42,079
draft where the where for pc we have pce

216
00:11:41,680 --> 00:11:45,359
and the

217
00:11:42,079 --> 00:11:48,000
capabilities this uh whether

218
00:11:45,360 --> 00:11:49,839
you know where the pc the pce

219
00:11:48,000 --> 00:11:53,360
capabilities of uh

220
00:11:49,839 --> 00:11:56,000
of a server and a cloud and clients

221
00:11:53,360 --> 00:11:57,040
and what this does is it allows you to

222
00:11:56,000 --> 00:12:00,320
also

223
00:11:57,040 --> 00:12:02,399
just discover what type of security is

224
00:12:00,320 --> 00:12:05,920
supported

225
00:12:02,399 --> 00:12:07,680
the yang model augmentations

226
00:12:05,920 --> 00:12:09,599
for this first cut of augmentation

227
00:12:07,680 --> 00:12:13,839
supporting drafts that weren't

228
00:12:09,600 --> 00:12:15,680
in the ospf model

229
00:12:13,839 --> 00:12:18,079
we probably won't go forward we'll

230
00:12:15,680 --> 00:12:20,560
probably want to get at least a few more

231
00:12:18,079 --> 00:12:22,079
uh augmentations in that before we

232
00:12:20,560 --> 00:12:24,000
publish that

233
00:12:22,079 --> 00:12:27,120
or go at least go forward before you

234
00:12:24,000 --> 00:12:27,120
last call next slide

235
00:12:31,600 --> 00:12:34,639
and we got these

236
00:12:34,720 --> 00:12:39,839
uh working group documents um

237
00:12:40,480 --> 00:12:43,519
let's see if there's any

238
00:12:43,760 --> 00:12:49,360
yeah there's one one

239
00:12:46,959 --> 00:12:50,479
these are ones we added since in the

240
00:12:49,360 --> 00:12:52,959
last

241
00:12:50,480 --> 00:12:54,320
since the last ietf for right before the

242
00:12:52,959 --> 00:12:59,359
last ietf

243
00:12:54,320 --> 00:13:01,440
the ospf b3 extensions for srv6

244
00:12:59,360 --> 00:13:03,920
i believe there's a reference to that in

245
00:13:01,440 --> 00:13:09,680
flex algorithm

246
00:13:03,920 --> 00:13:12,719
so we might want to give that a priority

247
00:13:09,680 --> 00:13:15,359
um and i as you as

248
00:13:12,720 --> 00:13:16,240
i don't know if anybody's implemented it

249
00:13:15,360 --> 00:13:19,120
uh

250
00:13:16,240 --> 00:13:21,440
i'll start a discussion on that one just

251
00:13:19,120 --> 00:13:22,000
because uh there's a normative reference

252
00:13:21,440 --> 00:13:25,120
in the

253
00:13:22,000 --> 00:13:26,000
flex algorithm draft a lot of these

254
00:13:25,120 --> 00:13:28,320
other ones like

255
00:13:26,000 --> 00:13:32,399
reverse metric and link bundles there's

256
00:13:28,320 --> 00:13:32,399
things that are in isis that were

257
00:13:32,480 --> 00:13:37,839
putting the comparable function in is

258
00:13:34,800 --> 00:13:37,839
into ospf

259
00:13:41,279 --> 00:13:48,560
you can see i must have thought that the

260
00:13:44,959 --> 00:13:50,560
ospf sr6 extensions was important

261
00:13:48,560 --> 00:13:54,719
because i listed it twice

262
00:13:50,560 --> 00:13:55,040
and we just accepted isis rfc 5316 bis

263
00:13:54,720 --> 00:13:59,440
this

264
00:13:55,040 --> 00:14:02,880
allows you to support uh 5316 in

265
00:13:59,440 --> 00:14:05,920
ipb6 only networks

266
00:14:02,880 --> 00:14:09,519
the gm gmp os extensions in

267
00:14:05,920 --> 00:14:13,599
in ipv6 only uh networks

268
00:14:09,519 --> 00:14:15,680
previously you required it required the

269
00:14:13,600 --> 00:14:18,000
routers to have the encodings required

270
00:14:15,680 --> 00:14:20,560
the routers to have an ipv4 address

271
00:14:18,000 --> 00:14:20,560
next slide

272
00:14:22,639 --> 00:14:26,320
we got quite a backlog

273
00:14:28,560 --> 00:14:34,319
we i think all of these we'd like

274
00:14:32,240 --> 00:14:36,480
all the uh the offers have asked for

275
00:14:34,320 --> 00:14:38,880
working group adoption

276
00:14:36,480 --> 00:14:40,000
i think there's a good reason to adopt

277
00:14:38,880 --> 00:14:42,639
all of them

278
00:14:40,000 --> 00:14:44,639
the flooding parameter advertisement i

279
00:14:42,639 --> 00:14:46,720
expect that to

280
00:14:44,639 --> 00:14:48,000
generate working group discussion again

281
00:14:46,720 --> 00:14:50,160
but it's

282
00:14:48,000 --> 00:14:52,079
definitely been presented enough times

283
00:14:50,160 --> 00:14:54,880
and

284
00:14:52,079 --> 00:14:54,880
it's time we

285
00:14:57,680 --> 00:15:02,319
discuss it you know discuss it and

286
00:15:00,480 --> 00:15:04,880
possibly adopt this

287
00:15:02,320 --> 00:15:04,880
document

288
00:15:06,079 --> 00:15:12,638
or some form of it

289
00:15:09,120 --> 00:15:14,880
and i believe that's all

290
00:15:12,639 --> 00:15:14,880
yep

291
00:15:16,720 --> 00:15:22,160
uh any any comments

292
00:15:23,360 --> 00:15:27,839
if not we'll move to the flooding

293
00:15:25,120 --> 00:15:27,839
results

294
00:15:29,759 --> 00:15:32,000
okay

295
00:15:34,800 --> 00:15:39,599
okay what happens when i close the

296
00:15:38,560 --> 00:15:55,839
window

297
00:15:39,600 --> 00:15:55,839
oh perfect

298
00:16:05,040 --> 00:16:09,839
okay go ahead

299
00:16:14,000 --> 00:16:20,320
uh yeah uh hello yep

300
00:16:17,120 --> 00:16:24,320
we can hear you uh

301
00:16:20,320 --> 00:16:24,320
yep yeah i'm yeah

302
00:16:28,480 --> 00:16:37,040
uh hello yes we can hear you

303
00:16:31,600 --> 00:16:40,079
okay okay uh shout out stop started

304
00:16:37,040 --> 00:16:43,360
okay thank you uh okay

305
00:16:40,079 --> 00:16:44,000
uh hello everybody here in yangon from

306
00:16:43,360 --> 00:16:47,519
javi

307
00:16:44,000 --> 00:16:47,519
okay next page please

308
00:16:48,480 --> 00:16:53,600
okay uh right now itf irsa working group

309
00:16:52,639 --> 00:16:56,720
have several

310
00:16:53,600 --> 00:16:57,759
drops really related to igp flooding

311
00:16:56,720 --> 00:17:00,079
processing

312
00:16:57,759 --> 00:17:03,600
so there are two directions one is to

313
00:17:00,079 --> 00:17:05,918
reduce flooding amount by using flooding

314
00:17:03,600 --> 00:17:06,880
top logic and another is to reduce

315
00:17:05,919 --> 00:17:10,319
transmission and

316
00:17:06,880 --> 00:17:13,120
speed ups flooding so we try to do some

317
00:17:10,319 --> 00:17:13,599
testing planning tests and hope it can

318
00:17:13,119 --> 00:17:17,438
provide

319
00:17:13,599 --> 00:17:20,000
some help to optimize igp flood

320
00:17:17,439 --> 00:17:21,760
this is the menu so the first i

321
00:17:20,000 --> 00:17:26,480
introduce our motivation

322
00:17:21,760 --> 00:17:30,840
and the test scenario and the test case

323
00:17:26,480 --> 00:17:33,840
finally it is our conclusion next page

324
00:17:30,840 --> 00:17:38,399
please

325
00:17:33,840 --> 00:17:38,399
so let's test

326
00:17:38,640 --> 00:17:46,000
adjust adjust some lighting parameters

327
00:17:43,039 --> 00:17:48,559
try to achieve minimum flooding time and

328
00:17:46,000 --> 00:17:51,679
the minimum retransmission amount

329
00:17:48,559 --> 00:17:53,360
okay what they are what we adjust at

330
00:17:51,679 --> 00:17:56,559
least here

331
00:17:53,360 --> 00:18:00,240
the first parameter is window

332
00:17:56,559 --> 00:18:01,440
it is similar with the interface rsp

333
00:18:00,240 --> 00:18:03,679
receiver window

334
00:18:01,440 --> 00:18:06,320
in flooding speed draft it is the

335
00:18:03,679 --> 00:18:09,360
threshold of retransmission queue

336
00:18:06,320 --> 00:18:09,918
and the next one is tx interval it is to

337
00:18:09,360 --> 00:18:13,199
control

338
00:18:09,919 --> 00:18:16,080
the transmission timer the last one is

339
00:18:13,200 --> 00:18:17,120
interface tx interval it is rsp sending

340
00:18:16,080 --> 00:18:20,480
speed

341
00:18:17,120 --> 00:18:22,479
so the process of our test is similar

342
00:18:20,480 --> 00:18:25,840
with plotting speed draft

343
00:18:22,480 --> 00:18:28,320
but we don't implement the draft just

344
00:18:25,840 --> 00:18:29,520
use configuration to simulate the

345
00:18:28,320 --> 00:18:32,320
process

346
00:18:29,520 --> 00:18:33,600
that the standard side receives those

347
00:18:32,320 --> 00:18:36,720
parameters

348
00:18:33,600 --> 00:18:42,799
and we check the result

349
00:18:36,720 --> 00:18:46,880
so next page please okay

350
00:18:42,799 --> 00:18:49,679
i introduce our test case

351
00:18:46,880 --> 00:18:50,640
here we have three test cases and the

352
00:18:49,679 --> 00:18:53,919
case one

353
00:18:50,640 --> 00:18:56,720
want to find the impact of

354
00:18:53,919 --> 00:18:57,520
retransmission interval and the case 2

355
00:18:56,720 --> 00:19:00,880
want to find

356
00:18:57,520 --> 00:19:01,918
the impact of interface rsp receive

357
00:19:00,880 --> 00:19:04,799
window

358
00:19:01,919 --> 00:19:05,760
and the k3 is based on the is based on

359
00:19:04,799 --> 00:19:09,440
the

360
00:19:05,760 --> 00:19:11,440
kit 2 and under the dynamic read control

361
00:19:09,440 --> 00:19:14,799
is added

362
00:19:11,440 --> 00:19:18,080
and here we in our test case

363
00:19:14,799 --> 00:19:21,840
there are three kind of device tester

364
00:19:18,080 --> 00:19:25,280
sender and receiver the tester generated

365
00:19:21,840 --> 00:19:29,439
20 thousand rsps and the senate sender

366
00:19:25,280 --> 00:19:32,480
the thunder flatters rsps to receiver

367
00:19:29,440 --> 00:19:35,840
and we have serious scenario single link

368
00:19:32,480 --> 00:19:39,840
parallel link and dual home network okay

369
00:19:35,840 --> 00:19:39,840
next page please

370
00:19:41,280 --> 00:19:48,080
so the first is case one

371
00:19:45,120 --> 00:19:50,159
we change the tx interval it is a

372
00:19:48,080 --> 00:19:53,120
retransmit interval

373
00:19:50,160 --> 00:19:54,160
in this case no interface are sphere is

374
00:19:53,120 --> 00:19:56,959
a window

375
00:19:54,160 --> 00:19:58,720
and that the interface tx interval is

376
00:19:56,960 --> 00:20:01,760
100 rsps

377
00:19:58,720 --> 00:20:04,799
per 100 milliseconds

378
00:20:01,760 --> 00:20:08,158
text interval is started at 5 seconds

379
00:20:04,799 --> 00:20:10,158
3 seconds and 5 seconds

380
00:20:08,159 --> 00:20:12,480
we can find the flooding timer is

381
00:20:10,159 --> 00:20:14,880
similar

382
00:20:12,480 --> 00:20:16,000
run time is similar the impact of risk

383
00:20:14,880 --> 00:20:19,039
factor

384
00:20:16,000 --> 00:20:21,919
to the flooding timer is small but

385
00:20:19,039 --> 00:20:23,840
small tx interval will increase the

386
00:20:21,919 --> 00:20:27,200
retransmission amount

387
00:20:23,840 --> 00:20:27,199
okay next page please

388
00:20:29,120 --> 00:20:35,840
so the case tool

389
00:20:32,320 --> 00:20:38,879
we test interface rsv receive window

390
00:20:35,840 --> 00:20:41,280
now this test case is only execute on

391
00:20:38,880 --> 00:20:44,559
the scenario y single link

392
00:20:41,280 --> 00:20:44,960
here we have two kind of read default

393
00:20:44,559 --> 00:20:48,158
rate

394
00:20:44,960 --> 00:20:51,520
is 100 rsps per 100

395
00:20:48,159 --> 00:20:55,600
milliseconds the minimum rate is 10

396
00:20:51,520 --> 00:20:58,799
rsps per 100 milliseconds

397
00:20:55,600 --> 00:21:00,799
interface tx interval will be set to

398
00:20:58,799 --> 00:21:03,840
default rate in default

399
00:21:00,799 --> 00:21:04,320
and the site to minimum rate the number

400
00:21:03,840 --> 00:21:08,399
of

401
00:21:04,320 --> 00:21:12,080
unacknowledged rsps reached threshold

402
00:21:08,400 --> 00:21:14,880
the interface as prereceived window

403
00:21:12,080 --> 00:21:16,960
through this test case result we can

404
00:21:14,880 --> 00:21:20,320
find the one proper

405
00:21:16,960 --> 00:21:23,440
interface rsp receive window can

406
00:21:20,320 --> 00:21:26,480
effectively reduce the number of

407
00:21:23,440 --> 00:21:30,000
retransmit rsps on the interface

408
00:21:26,480 --> 00:21:33,520
but the flooding time is not so good

409
00:21:30,000 --> 00:21:33,520
so next page please

410
00:21:36,640 --> 00:21:44,000
to k3 based on the case tool we change

411
00:21:40,400 --> 00:21:47,520
the interface tx interval from static

412
00:21:44,000 --> 00:21:51,240
control to dynamic control

413
00:21:47,520 --> 00:21:55,039
the process is if the number of

414
00:21:51,240 --> 00:21:57,039
unacknowledged rsps reach interface rsp

415
00:21:55,039 --> 00:22:00,559
receive window

416
00:21:57,039 --> 00:22:03,840
decrease the rate by 50

417
00:22:00,559 --> 00:22:07,360
otherwise increase the rate by 20

418
00:22:03,840 --> 00:22:11,120
percent until 200 rsps

419
00:22:07,360 --> 00:22:14,240
per 100 milliseconds

420
00:22:11,120 --> 00:22:16,479
here the interval is one second

421
00:22:14,240 --> 00:22:17,520
you can see the number two and the

422
00:22:16,480 --> 00:22:19,840
number three

423
00:22:17,520 --> 00:22:21,360
the flooding timer improvement is

424
00:22:19,840 --> 00:22:24,879
obvious

425
00:22:21,360 --> 00:22:28,719
and number four they think the speed

426
00:22:24,880 --> 00:22:31,840
keep reaching because the standing rsps

427
00:22:28,720 --> 00:22:35,840
have not reached the series hot

428
00:22:31,840 --> 00:22:39,360
so dynamic randomical speed adjustment

429
00:22:35,840 --> 00:22:42,320
based on the static window significantly

430
00:22:39,360 --> 00:22:43,520
reduce the rsp flooding time and the

431
00:22:42,320 --> 00:22:46,799
number of

432
00:22:43,520 --> 00:22:50,480
re-transmitted rsps so

433
00:22:46,799 --> 00:22:50,480
okay next page please

434
00:22:52,559 --> 00:22:59,600
based on these three test cases

435
00:22:55,679 --> 00:23:02,480
we get some conclusion the first one is

436
00:22:59,600 --> 00:23:03,360
the sender should be aware of the

437
00:23:02,480 --> 00:23:05,679
capability

438
00:23:03,360 --> 00:23:06,639
and the processing status of the

439
00:23:05,679 --> 00:23:08,720
receiver

440
00:23:06,640 --> 00:23:11,120
to control the floating time under the

441
00:23:08,720 --> 00:23:14,480
number of retransmission

442
00:23:11,120 --> 00:23:17,918
and the second is if only

443
00:23:14,480 --> 00:23:21,600
the static window is used to control

444
00:23:17,919 --> 00:23:25,679
the retransm transmit rate of the sender

445
00:23:21,600 --> 00:23:28,480
the number of retransmission

446
00:23:25,679 --> 00:23:29,280
can be reduced but the flooding time

447
00:23:28,480 --> 00:23:32,799
will be

448
00:23:29,280 --> 00:23:36,639
prolonged if the window size

449
00:23:32,799 --> 00:23:39,679
reside is too small the flooding time

450
00:23:36,640 --> 00:23:40,480
would be too long if the window side is

451
00:23:39,679 --> 00:23:43,200
too large

452
00:23:40,480 --> 00:23:43,679
the upper limit of the window cannot be

453
00:23:43,200 --> 00:23:46,240
reached

454
00:23:43,679 --> 00:23:46,799
and the flooding speed on the interface

455
00:23:46,240 --> 00:23:50,559
keeps

456
00:23:46,799 --> 00:23:53,840
reaching until maximum adaptive learning

457
00:23:50,559 --> 00:23:56,799
is required to obtain an

458
00:23:53,840 --> 00:23:58,240
appropriate window site dynamic

459
00:23:56,799 --> 00:24:01,279
adjustment

460
00:23:58,240 --> 00:24:03,760
of the flooding of the sanding speed

461
00:24:01,279 --> 00:24:06,000
based on the appropriate window

462
00:24:03,760 --> 00:24:07,200
can achieve better flooding time and

463
00:24:06,000 --> 00:24:10,880
better rsp

464
00:24:07,200 --> 00:24:13,840
transmissions it is our conclusion

465
00:24:10,880 --> 00:24:13,840
next page please

466
00:24:17,200 --> 00:24:24,000
so uh actually uh we are keep on

467
00:24:21,200 --> 00:24:26,559
uh put more effort we have put more uh

468
00:24:24,000 --> 00:24:30,080
more effort on the flooding process

469
00:24:26,559 --> 00:24:33,678
uh we will keep on doing it

470
00:24:30,080 --> 00:24:37,678
so actually we also need more input

471
00:24:33,679 --> 00:24:47,840
and the suggestion about this this test

472
00:24:37,679 --> 00:24:47,840
yeah it's all any suggestion

473
00:24:49,919 --> 00:24:56,320
uh yeah go ahead les

474
00:24:53,120 --> 00:24:59,039
yeah this is

475
00:24:56,320 --> 00:25:01,039
leskinsburg from cisco uh just a couple

476
00:24:59,039 --> 00:25:04,559
of quick questions

477
00:25:01,039 --> 00:25:08,640
um did you do any uh adjustment

478
00:25:04,559 --> 00:25:08,639
to is this guillain can you hear me

479
00:25:10,159 --> 00:25:13,279
sorry can you can you folks hear me yeah

480
00:25:12,880 --> 00:25:15,200
i

481
00:25:13,279 --> 00:25:16,960
unless i can everyone i mean we can hear

482
00:25:15,200 --> 00:25:19,840
yeah we can hear you but you're cutting

483
00:25:16,960 --> 00:25:19,840
in front of us

484
00:25:21,520 --> 00:25:29,840
so hey can i get any special equipment

485
00:25:23,919 --> 00:25:29,840
used for the testing or

486
00:25:29,919 --> 00:25:33,039
so christo i still have the floor here

487
00:25:32,720 --> 00:25:36,960
you

488
00:25:33,039 --> 00:25:36,960
you do i suspect he can't hear us

489
00:25:37,760 --> 00:25:41,360
okay so the the question i want to ask

490
00:25:40,320 --> 00:25:46,720
is

491
00:25:41,360 --> 00:25:46,719
did you do any adjustment to the psnp

492
00:25:47,120 --> 00:25:50,719
response time because there was a

493
00:25:49,520 --> 00:25:54,158
presentation

494
00:25:50,720 --> 00:25:55,760
last time from sarah and tony that

495
00:25:54,159 --> 00:25:57,760
indicated that that made a big

496
00:25:55,760 --> 00:26:02,799
difference

497
00:25:57,760 --> 00:26:02,799
uh right now in our test

498
00:26:03,279 --> 00:26:09,440
okay ipsnt its interval is a constant

499
00:26:06,720 --> 00:26:10,240
in the standard it is five seconds but

500
00:26:09,440 --> 00:26:14,720
right now in

501
00:26:10,240 --> 00:26:17,840
our test we set it to 800

502
00:26:14,720 --> 00:26:20,880
milliseconds we think it is

503
00:26:17,840 --> 00:26:24,559
already small enough and

504
00:26:20,880 --> 00:26:28,320
we try to send that

505
00:26:24,559 --> 00:26:28,320
act as soon as possible

506
00:26:28,559 --> 00:26:34,559
okay uh second quick question is

507
00:26:32,000 --> 00:26:35,600
the the receive window that you talk

508
00:26:34,559 --> 00:26:37,039
about

509
00:26:35,600 --> 00:26:38,799
what you're actually doing is just

510
00:26:37,039 --> 00:26:41,200
monitoring the local

511
00:26:38,799 --> 00:26:43,520
retransmission queue for each interface

512
00:26:41,200 --> 00:26:43,520
correct

513
00:26:44,400 --> 00:26:51,200
yes about about this issue

514
00:26:48,080 --> 00:26:54,399
actually we also

515
00:26:51,200 --> 00:26:57,600
discuss it internally

516
00:26:54,400 --> 00:27:01,919
okay we need to get uh

517
00:26:57,600 --> 00:27:04,879
get this kind of control so

518
00:27:01,919 --> 00:27:05,360
the kill size and acknowledge the kill

519
00:27:04,880 --> 00:27:08,880
size

520
00:27:05,360 --> 00:27:12,399
it is one condition

521
00:27:08,880 --> 00:27:16,000
and how to say that

522
00:27:12,400 --> 00:27:19,520
also we also can get some feedback

523
00:27:16,000 --> 00:27:22,000
from the the the receiver side

524
00:27:19,520 --> 00:27:24,639
all of this is possible because

525
00:27:22,000 --> 00:27:24,640
sometimes

526
00:27:24,720 --> 00:27:31,919
especially in ss some scenarios

527
00:27:28,320 --> 00:27:35,600
no enough information

528
00:27:31,919 --> 00:27:38,799
to control it

529
00:27:35,600 --> 00:27:39,439
sometimes on some interface we we can

530
00:27:38,799 --> 00:27:42,639
just

531
00:27:39,440 --> 00:27:45,600
check the the secure side some

532
00:27:42,640 --> 00:27:47,279
condition maybe maybe we needed the

533
00:27:45,600 --> 00:27:51,760
receiver side

534
00:27:47,279 --> 00:27:51,760
feedback some some information

535
00:27:52,000 --> 00:27:55,200
okay i just wanted to clarify what you

536
00:27:54,480 --> 00:27:58,399
actually did

537
00:27:55,200 --> 00:28:02,960
in your test thanks okay

538
00:27:58,399 --> 00:28:05,600
thank you

539
00:28:02,960 --> 00:28:05,600
okay again

540
00:28:07,279 --> 00:28:12,799
when he turns his audio on um

541
00:28:10,799 --> 00:28:17,840
when he turns his mic on he can't hear

542
00:28:12,799 --> 00:28:17,840
anymore apparently

543
00:28:24,000 --> 00:28:34,399
yes we can hear you hello

544
00:28:31,760 --> 00:28:34,399
can you hear me

545
00:28:37,200 --> 00:28:45,840
i'm gonna turn it off

546
00:28:48,080 --> 00:28:51,199
uh yeah

547
00:28:51,440 --> 00:28:56,320
just uh try asking your question in

548
00:28:53,840 --> 00:28:56,320
jabber

549
00:28:56,840 --> 00:29:02,959
uh

550
00:28:59,360 --> 00:29:06,320
we've got about a minute left bruno

551
00:29:02,960 --> 00:29:09,360
go ahead molina from

552
00:29:06,320 --> 00:29:12,799
orange do you hear me yeah

553
00:29:09,360 --> 00:29:16,559
yes and thank you for the test

554
00:29:12,799 --> 00:29:20,480
uh very useful uh

555
00:29:16,559 --> 00:29:22,240
similar comment from compared to lesser

556
00:29:20,480 --> 00:29:23,919
when you lose a test with a static

557
00:29:22,240 --> 00:29:27,039
window

558
00:29:23,919 --> 00:29:29,919
it would be useful to

559
00:29:27,039 --> 00:29:30,480
uh to acknowledge the lsp the receiver

560
00:29:29,919 --> 00:29:34,799
xp

561
00:29:30,480 --> 00:29:39,919
faster as as illustrated by uh

562
00:29:34,799 --> 00:29:42,158
sarah on turning uh one or two years ago

563
00:29:39,919 --> 00:29:45,279
because it allows allows you to have a

564
00:29:42,159 --> 00:29:47,360
dynamic acknowledgement

565
00:29:45,279 --> 00:29:49,360
on the dynamic adaptation of the other

566
00:29:47,360 --> 00:29:50,879
windows

567
00:29:49,360 --> 00:29:53,039
if you if you want to do more tests you

568
00:29:50,880 --> 00:29:55,740
would be interested to

569
00:29:53,039 --> 00:29:56,799
so to acknowledge uh clsps every

570
00:29:55,740 --> 00:30:00,000
[Music]

571
00:29:56,799 --> 00:30:09,840
every every few hp's sarah

572
00:30:00,000 --> 00:30:09,840
antony proposes thank you

573
00:30:16,720 --> 00:30:23,840
thanks bruno um

574
00:30:28,960 --> 00:30:32,960
is from jabber now is was the testing

575
00:30:32,320 --> 00:30:36,000
done with

576
00:30:32,960 --> 00:30:38,880
a software-based uh simulation or was it

577
00:30:36,000 --> 00:30:38,880
done with hardware

578
00:30:44,480 --> 00:30:51,840
so about next step

579
00:30:47,520 --> 00:30:51,840
will we will keep on

580
00:30:51,919 --> 00:30:59,440
get more suggestion and

581
00:30:55,919 --> 00:31:02,880
try to do more test case and right now

582
00:30:59,440 --> 00:31:06,080
for the case 2 and k3 we only tested

583
00:31:02,880 --> 00:31:07,279
the single link maybe next time we will

584
00:31:06,080 --> 00:31:10,320
confirm

585
00:31:07,279 --> 00:31:11,919
we will test it on the on the parallel

586
00:31:10,320 --> 00:31:15,600
link and the dual

587
00:31:11,919 --> 00:31:18,960
dual home network because in the

588
00:31:15,600 --> 00:31:22,879
in the singling the

589
00:31:18,960 --> 00:31:27,519
the parameter adjustment is simple

590
00:31:22,880 --> 00:31:31,440
but when the tester

591
00:31:27,519 --> 00:31:34,960
test device how many peers

592
00:31:31,440 --> 00:31:36,720
so it means all of this all of this

593
00:31:34,960 --> 00:31:40,720
parameter

594
00:31:36,720 --> 00:31:44,159
its adjustment will be more difficult

595
00:31:40,720 --> 00:31:47,440
i i think next step we will test

596
00:31:44,159 --> 00:31:51,039
test complex scenario

597
00:31:47,440 --> 00:31:52,000
uh pyro link and uh and dual home

598
00:31:51,039 --> 00:31:54,480
network

599
00:31:52,000 --> 00:31:57,039
even some all of this kind of scenario

600
00:31:54,480 --> 00:31:57,039
is mixed

601
00:31:57,440 --> 00:32:01,360
did you did you use a hardware like

602
00:31:59,519 --> 00:32:04,559
router hardware or did you use

603
00:32:01,360 --> 00:32:08,479
a software simulation uh

604
00:32:04,559 --> 00:32:10,799
uh they test it in huawei hardware

605
00:32:08,480 --> 00:32:11,840
uh okay thank you that was that was

606
00:32:10,799 --> 00:32:15,840
gehan's question

607
00:32:11,840 --> 00:32:15,840
thank you yeah yeah

608
00:32:16,240 --> 00:32:29,840
is your song

609
00:32:33,760 --> 00:32:40,720
okay um

610
00:32:37,200 --> 00:32:43,840
we need to wrap this up unfortunately uh

611
00:32:40,720 --> 00:32:43,840
the song

612
00:32:45,120 --> 00:32:49,039
yeah you can't be heard so we're going

613
00:32:46,720 --> 00:32:50,399
to move to the next one um

614
00:32:49,039 --> 00:32:52,960
because we're two minute two or three

615
00:32:50,399 --> 00:32:55,039
minutes over

616
00:32:52,960 --> 00:32:57,039
yeah g g's going to do it uh jay's going

617
00:32:55,039 --> 00:33:01,120
to she's going to do it

618
00:32:57,039 --> 00:33:06,158
okay yes thank you again

619
00:33:01,120 --> 00:33:06,158
okay thank you i mute my mac

620
00:33:09,039 --> 00:33:15,679
hi ac hi chris can you hear me

621
00:33:12,480 --> 00:33:18,159
yes okay great

622
00:33:15,679 --> 00:33:20,080
okay i will present this on behalf of

623
00:33:18,159 --> 00:33:22,720
youtube because we have some

624
00:33:20,080 --> 00:33:23,519
natural problem you cannot log in to

625
00:33:22,720 --> 00:33:25,840
this

626
00:33:23,519 --> 00:33:25,840
meeting

627
00:33:30,320 --> 00:33:35,760
okay okay so this topic is about

628
00:33:33,519 --> 00:33:37,360
using flux algo for second routine based

629
00:33:35,760 --> 00:33:39,679
vtn

630
00:33:37,360 --> 00:33:41,279
here are the draw this is a zero version

631
00:33:39,679 --> 00:33:46,159
version zero one

632
00:33:41,279 --> 00:33:46,159
and here are the closers okay next page

633
00:33:49,360 --> 00:33:52,719
okay here are some background about this

634
00:33:51,840 --> 00:33:55,360
work uh

635
00:33:52,720 --> 00:33:57,760
we introduced uh this term of vtn in the

636
00:33:55,360 --> 00:33:59,918
draft itft's enhanced vpn

637
00:33:57,760 --> 00:34:01,519
basically it is a virtual android

638
00:33:59,919 --> 00:34:04,480
network with the required

639
00:34:01,519 --> 00:34:06,320
topology and resource characteristics

640
00:34:04,480 --> 00:34:09,280
and then we introduce the

641
00:34:06,320 --> 00:34:11,279
term resource aware seeds in draft itf

642
00:34:09,280 --> 00:34:14,079
spring resource aware segments

643
00:34:11,280 --> 00:34:15,119
so that src's can be used to represent

644
00:34:14,079 --> 00:34:16,960
different sets of

645
00:34:15,119 --> 00:34:19,119
resources allocated for the packet

646
00:34:16,960 --> 00:34:22,720
processing

647
00:34:19,119 --> 00:34:25,440
then we have this sr4 vpn plus described

648
00:34:22,719 --> 00:34:26,399
in the spring draft as iphone has vpn

649
00:34:25,440 --> 00:34:28,720
basically it

650
00:34:26,399 --> 00:34:32,000
describes the mechanism to build as a

651
00:34:28,719 --> 00:34:34,158
base region with a resource aware series

652
00:34:32,000 --> 00:34:37,199
then we think this draft is more

653
00:34:34,159 --> 00:34:40,079
focusing on the control plane mechanisms

654
00:34:37,199 --> 00:34:40,560
more specifically how to use flux algo

655
00:34:40,079 --> 00:34:44,159
based

656
00:34:40,560 --> 00:34:47,918
mechanism to distribute the information

657
00:34:44,159 --> 00:34:48,720
for the region specific topology and

658
00:34:47,918 --> 00:34:51,040
resource

659
00:34:48,719 --> 00:34:53,598
attributes to natural nodes and also can

660
00:34:51,040 --> 00:34:57,520
be collected to the network controller

661
00:34:53,599 --> 00:34:57,520
okay next page please

662
00:35:00,240 --> 00:35:04,000
okay this is uh the mechanism we use in

663
00:35:03,040 --> 00:35:07,279
this draft

664
00:35:04,000 --> 00:35:10,640
basically we reuse the flux algo id

665
00:35:07,280 --> 00:35:12,880
as the control plane identifier of a vgn

666
00:35:10,640 --> 00:35:15,118
so that we can use a flux argon

667
00:35:12,880 --> 00:35:17,280
mechanism to describe the topology

668
00:35:15,119 --> 00:35:20,079
constraints of mvtn

669
00:35:17,280 --> 00:35:21,920
and we can also use the isis extension

670
00:35:20,079 --> 00:35:24,800
as segment routing extensions

671
00:35:21,920 --> 00:35:25,760
to advertise the algorithm specific

672
00:35:24,800 --> 00:35:29,359
prefixes

673
00:35:25,760 --> 00:35:31,440
or srv6 locators

674
00:35:29,359 --> 00:35:32,480
then we also need some mechanism to

675
00:35:31,440 --> 00:35:36,079
advertise the t

676
00:35:32,480 --> 00:35:39,040
attributes associated with uh hvtn

677
00:35:36,079 --> 00:35:40,160
here are the extensions we use we use

678
00:35:39,040 --> 00:35:42,480
the iss

679
00:35:40,160 --> 00:35:43,680
l2 bundle with some extension to

680
00:35:42,480 --> 00:35:46,640
advertise these

681
00:35:43,680 --> 00:35:47,359
t attributes for each vtn and we have

682
00:35:46,640 --> 00:35:51,279
made some

683
00:35:47,359 --> 00:35:54,000
uh small extensions to our the l2 bundle

684
00:35:51,280 --> 00:35:55,920
to make it uh applicable for both

685
00:35:54,000 --> 00:35:58,320
physical and virtual member links

686
00:35:55,920 --> 00:36:01,200
we introduce a new flag we to indicate

687
00:35:58,320 --> 00:36:04,160
the member link of virtual links

688
00:36:01,200 --> 00:36:04,560
and so that we can associate the vtn

689
00:36:04,160 --> 00:36:06,640
with

690
00:36:04,560 --> 00:36:07,920
one or more physical virtual member

691
00:36:06,640 --> 00:36:10,960
links in a

692
00:36:07,920 --> 00:36:13,119
bundle interface

693
00:36:10,960 --> 00:36:14,560
we need to use the admin group or the

694
00:36:13,119 --> 00:36:17,040
extended admin group

695
00:36:14,560 --> 00:36:18,000
to correlate a flux algo and the member

696
00:36:17,040 --> 00:36:20,320
links

697
00:36:18,000 --> 00:36:21,040
so that the key attributes and the seed

698
00:36:20,320 --> 00:36:23,440
attributes

699
00:36:21,040 --> 00:36:25,440
advertised for the member link will be

700
00:36:23,440 --> 00:36:27,040
belong to the corresponding vtn so that

701
00:36:25,440 --> 00:36:30,079
the everything can have

702
00:36:27,040 --> 00:36:32,079
this kind of kind of information for the

703
00:36:30,079 --> 00:36:33,920
controller and for the computation of

704
00:36:32,079 --> 00:36:37,760
the past

705
00:36:33,920 --> 00:36:37,760
okay next page

706
00:36:38,640 --> 00:36:44,640
here are the updates in this version

707
00:36:42,160 --> 00:36:45,520
basically we didn't make a significant

708
00:36:44,640 --> 00:36:48,640
change to the

709
00:36:45,520 --> 00:36:49,280
mechanism and the mechanism is stable

710
00:36:48,640 --> 00:36:52,480
since the

711
00:36:49,280 --> 00:36:54,000
0 version in this version we add some

712
00:36:52,480 --> 00:36:57,440
description about the forwarding

713
00:36:54,000 --> 00:37:00,480
plane behaviors about waiting specific

714
00:36:57,440 --> 00:37:03,280
prefixes and adjacencies

715
00:37:00,480 --> 00:37:03,920
we also add a reference to the itf

716
00:37:03,280 --> 00:37:06,240
spring

717
00:37:03,920 --> 00:37:07,839
resource aware segment draft because the

718
00:37:06,240 --> 00:37:11,359
resource overseas are used

719
00:37:07,839 --> 00:37:14,560
in the data plane of this sr based vtn

720
00:37:11,359 --> 00:37:17,839
there are also some editorial changes

721
00:37:14,560 --> 00:37:22,880
to improve the readability

722
00:37:17,839 --> 00:37:24,480
let's page please okay then for the next

723
00:37:22,880 --> 00:37:26,480
steps uh

724
00:37:24,480 --> 00:37:27,760
the authors think this mechanism and the

725
00:37:26,480 --> 00:37:31,040
content are

726
00:37:27,760 --> 00:37:33,520
straightforward and is stable so that

727
00:37:31,040 --> 00:37:37,839
we would like to ask for working group

728
00:37:33,520 --> 00:37:37,839
adoption of this document

729
00:37:38,079 --> 00:37:42,640
okay that's all thanks

730
00:37:45,119 --> 00:37:49,599
uh jade just uh speaking as chair can

731
00:37:48,960 --> 00:37:52,160
you

732
00:37:49,599 --> 00:37:54,240
can you start a thread with some more uh

733
00:37:52,160 --> 00:37:55,759
with some more discussion on this draft

734
00:37:54,240 --> 00:37:59,759
before we uh

735
00:37:55,760 --> 00:38:02,079
see if people get people to read it and

736
00:37:59,760 --> 00:38:04,079
socialize and i know it's been around i

737
00:38:02,079 --> 00:38:06,960
read it and i understood it all

738
00:38:04,079 --> 00:38:08,240
except the need for the v flag wasn't

739
00:38:06,960 --> 00:38:11,760
clear to me

740
00:38:08,240 --> 00:38:11,759
that part of it wasn't clear but

741
00:38:12,320 --> 00:38:17,200
okay you mean we can start to

742
00:38:15,599 --> 00:38:19,520
have more discussion on the mail list

743
00:38:17,200 --> 00:38:23,279
and then have the adoption

744
00:38:19,520 --> 00:38:23,520
started on the list right and that was

745
00:38:23,280 --> 00:38:25,040
the

746
00:38:23,520 --> 00:38:27,280
this was the first time i'd read it i

747
00:38:25,040 --> 00:38:29,680
mean i read it rather quickly i see we

748
00:38:27,280 --> 00:38:33,839
have peter on the queue

749
00:38:29,680 --> 00:38:33,839
okay go ahead peter

750
00:38:36,800 --> 00:38:39,599
can you guys hear me

751
00:38:40,560 --> 00:38:45,359
yes okay okay i i commented on this

752
00:38:43,599 --> 00:38:48,000
earlier on the list

753
00:38:45,359 --> 00:38:48,000
the way the

754
00:38:48,640 --> 00:38:52,000
constraints are being used for the

755
00:38:50,640 --> 00:38:54,480
bundle members

756
00:38:52,000 --> 00:38:54,480
is very

757
00:38:55,040 --> 00:39:01,839
it's saying the complete truths

758
00:39:22,400 --> 00:39:28,800
yeah yes i understood type peter i think

759
00:39:26,079 --> 00:39:29,920
we had a discussion on the list and we

760
00:39:28,800 --> 00:39:33,440
will

761
00:39:29,920 --> 00:39:35,839
explicitly explicitly mention that uh

762
00:39:33,440 --> 00:39:36,480
restriction in the next version of this

763
00:39:35,839 --> 00:39:40,720
draft

764
00:39:36,480 --> 00:39:40,720
and i think that's a good point thank

765
00:39:40,839 --> 00:39:43,839
you

766
00:40:05,040 --> 00:40:10,400
okay uh ac by the way i'm muting so i

767
00:40:08,400 --> 00:40:12,160
can type so if you want to do the

768
00:40:10,400 --> 00:40:13,200
handle the queue that'd be great i i

769
00:40:12,160 --> 00:40:14,640
think we're ready for the next

770
00:40:13,200 --> 00:40:16,000
presentation

771
00:40:14,640 --> 00:40:17,839
yep okay i think we're ready for the

772
00:40:16,000 --> 00:40:18,240
next presentation again yeah let's take

773
00:40:17,839 --> 00:40:20,560
this

774
00:40:18,240 --> 00:40:25,279
let's take this discussion to the list i

775
00:40:20,560 --> 00:40:27,119
don't think too many people have read it

776
00:40:25,280 --> 00:40:30,079
in the interesting time we won't use the

777
00:40:27,119 --> 00:40:30,079
show of hands tool

778
00:40:34,880 --> 00:40:43,119
so next on the agenda is another

779
00:40:38,240 --> 00:40:47,279
vtn uh draft this time using the

780
00:40:43,119 --> 00:40:47,280
informational draft just using multi

781
00:40:50,839 --> 00:40:53,839
topology

782
00:40:55,839 --> 00:41:00,720
okay can you hear me

783
00:41:01,680 --> 00:41:09,359
yes okay thank you

784
00:41:05,520 --> 00:41:12,960
should i stop right yes go ahead

785
00:41:09,359 --> 00:41:15,279
okay uh yes this uh presentation about

786
00:41:12,960 --> 00:41:16,560
using iss smart topology for some

787
00:41:15,280 --> 00:41:20,240
ranking based

788
00:41:16,560 --> 00:41:22,960
uh vtn uh beating uh

789
00:41:20,240 --> 00:41:23,520
uh the hustle vpn is a enhancement to

790
00:41:22,960 --> 00:41:25,760
existing

791
00:41:23,520 --> 00:41:27,119
vpn service to support the needs of new

792
00:41:25,760 --> 00:41:28,720
applications

793
00:41:27,119 --> 00:41:30,480
uh so it can be considered as a

794
00:41:28,720 --> 00:41:33,520
revolution of traditional

795
00:41:30,480 --> 00:41:36,480
vpn uh but with additional

796
00:41:33,520 --> 00:41:39,200
subspecific commitments such as

797
00:41:36,480 --> 00:41:42,560
isolation and performance guarantee

798
00:41:39,200 --> 00:41:44,560
so it may be using uh using 5g transport

799
00:41:42,560 --> 00:41:49,839
network slicing and other

800
00:41:44,560 --> 00:41:49,839
genetic generic scenarios next

801
00:41:51,760 --> 00:41:58,960
this is background uh

802
00:41:55,359 --> 00:42:01,680
the draft proposed to reuse the

803
00:41:58,960 --> 00:42:04,079
mrtid as a control plane identifier of

804
00:42:01,680 --> 00:42:07,520
vtn

805
00:42:04,079 --> 00:42:12,240
soviet has been introducing the previous

806
00:42:07,520 --> 00:42:14,720
slides so

807
00:42:12,240 --> 00:42:16,720
it is a virtual panel network with the

808
00:42:14,720 --> 00:42:20,160
required quality and reduce

809
00:42:16,720 --> 00:42:20,160
resource characteristics

810
00:42:20,480 --> 00:42:22,720
also

811
00:42:28,480 --> 00:42:35,520
resource awareness segments is defined

812
00:42:32,000 --> 00:42:38,640
resource awares in state so

813
00:42:35,520 --> 00:42:41,839
src can require different set results

814
00:42:38,640 --> 00:42:42,480
are looking for packet processing your

815
00:42:41,839 --> 00:42:44,960
third graph

816
00:42:42,480 --> 00:42:46,000
is about the second routing for enhanced

817
00:42:44,960 --> 00:42:49,760
vpn

818
00:42:46,000 --> 00:42:50,880
it is uh described the mechanism to

819
00:42:49,760 --> 00:42:53,920
build srv

820
00:42:50,880 --> 00:42:56,319
service srbs the meetings with resource

821
00:42:53,920 --> 00:42:59,760
awareness

822
00:42:56,319 --> 00:43:02,800
so in this uh the mechanisms

823
00:42:59,760 --> 00:43:05,599
described in this document assume that

824
00:43:02,800 --> 00:43:06,160
each region has a dependent apology so

825
00:43:05,599 --> 00:43:09,440
that

826
00:43:06,160 --> 00:43:13,598
reaching can be identified using the

827
00:43:09,440 --> 00:43:15,920
corresponding mit and tips

828
00:43:13,599 --> 00:43:15,920
next

829
00:43:18,800 --> 00:43:21,920
this is the introduction of boxing

830
00:43:21,119 --> 00:43:26,640
mechanics

831
00:43:21,920 --> 00:43:29,680
of this draft uh

832
00:43:26,640 --> 00:43:31,759
fc uh 5120

833
00:43:29,680 --> 00:43:33,279
has been defined to create a dependent

834
00:43:31,760 --> 00:43:35,520
policy in our network

835
00:43:33,280 --> 00:43:37,599
with a single access domain a set of

836
00:43:35,520 --> 00:43:40,640
independent topologies that

837
00:43:37,599 --> 00:43:43,839
we call empty topology i'm at

838
00:43:40,640 --> 00:43:44,799
mt this magnetic station can be used for

839
00:43:43,839 --> 00:43:47,279
variety

840
00:43:44,800 --> 00:43:47,280
purpose

841
00:43:47,839 --> 00:43:51,200
it's also been created specifying custom

842
00:43:50,480 --> 00:43:54,160
customized

843
00:43:51,200 --> 00:43:54,960
attributes of each product each topology

844
00:43:54,160 --> 00:43:57,598
when each

845
00:43:54,960 --> 00:43:59,440
vting has a dependent network topology

846
00:43:57,599 --> 00:44:02,240
the mit id could be used

847
00:43:59,440 --> 00:44:04,000
as an adding fail of beating the control

848
00:44:02,240 --> 00:44:07,759
plane

849
00:44:04,000 --> 00:44:10,160
office 86 67

850
00:44:07,760 --> 00:44:11,040
describes less extensions that need to

851
00:44:10,160 --> 00:44:14,640
be introduced

852
00:44:11,040 --> 00:44:18,359
for sound routing operating on mps

853
00:44:14,640 --> 00:44:21,440
data plane the draft srv as the

854
00:44:18,359 --> 00:44:22,240
ssrv6 extension describes the assets

855
00:44:21,440 --> 00:44:25,520
initiatives to

856
00:44:22,240 --> 00:44:28,319
advertise topology specific nasa basic

857
00:44:25,520 --> 00:44:31,680
location analysis

858
00:44:28,319 --> 00:44:34,400
so in order to perform

859
00:44:31,680 --> 00:44:36,078
in order to perform the constraint basis

860
00:44:34,400 --> 00:44:37,760
pass computation for utility on the

861
00:44:36,079 --> 00:44:40,319
network controller or integrated

862
00:44:37,760 --> 00:44:41,280
nucleus nodes the network resource

863
00:44:40,319 --> 00:44:43,040
attributes

864
00:44:41,280 --> 00:44:44,480
associated with each btm needs to be

865
00:44:43,040 --> 00:44:46,960
advertised

866
00:44:44,480 --> 00:44:48,480
when maximum link bandwidth sub tv is

867
00:44:46,960 --> 00:44:51,839
carrying the mt

868
00:44:48,480 --> 00:44:54,960
as an idea of topology it indicates that

869
00:44:51,839 --> 00:44:57,040
amount amount of link bandwidth value

870
00:44:54,960 --> 00:44:58,319
to the corresponding return the

871
00:44:57,040 --> 00:45:00,400
bandwidth allocated

872
00:44:58,319 --> 00:45:04,960
to a meeting can be exclusive for

873
00:45:00,400 --> 00:45:07,280
service carrying the credit only return

874
00:45:04,960 --> 00:45:07,280
next

875
00:45:09,920 --> 00:45:17,359
so this document was present in the itf

876
00:45:14,079 --> 00:45:18,079
108 me as a working group based on the

877
00:45:17,359 --> 00:45:19,680
discussion

878
00:45:18,079 --> 00:45:22,160
and the suggestion from the working

879
00:45:19,680 --> 00:45:24,319
group the document type is changed to

880
00:45:22,160 --> 00:45:26,319
informational

881
00:45:24,319 --> 00:45:28,000
and the descriptions about the

882
00:45:26,319 --> 00:45:31,040
forwarding plane behavior

883
00:45:28,000 --> 00:45:33,599
is added in new text

884
00:45:31,040 --> 00:45:34,960
continuous results aware state are used

885
00:45:33,599 --> 00:45:38,000
in a data plane

886
00:45:34,960 --> 00:45:41,280
of srvtns so the draft of

887
00:45:38,000 --> 00:45:43,440
spring resource aware segments is added

888
00:45:41,280 --> 00:45:46,720
to the reference section

889
00:45:43,440 --> 00:45:51,440
we also made editorial change

890
00:45:46,720 --> 00:45:51,439
based on comments next

891
00:45:53,520 --> 00:45:57,200
so for the time being the content of

892
00:45:56,240 --> 00:46:00,160
document

893
00:45:57,200 --> 00:46:01,680
is stable document type is now

894
00:46:00,160 --> 00:46:04,000
informational

895
00:46:01,680 --> 00:46:06,078
the previous one is standard track we're

896
00:46:04,000 --> 00:46:08,480
matching it to the informational

897
00:46:06,079 --> 00:46:09,200
so we would like to ask the working

898
00:46:08,480 --> 00:46:12,960
group

899
00:46:09,200 --> 00:46:15,520
to adopt this document

900
00:46:12,960 --> 00:46:17,280
this document received a lot of comments

901
00:46:15,520 --> 00:46:20,560
from different people

902
00:46:17,280 --> 00:46:21,680
in within amazon we really appreciate

903
00:46:20,560 --> 00:46:29,839
that

904
00:46:21,680 --> 00:46:29,839
thank you this is it

905
00:46:29,920 --> 00:46:34,640
any comments on the draft anybody

906
00:46:35,200 --> 00:46:38,799
i think this one's more straightforward

907
00:46:37,359 --> 00:46:42,319
than the other one

908
00:46:38,800 --> 00:46:44,000
uh i guess we could we could put it in

909
00:46:42,319 --> 00:46:46,319
the queue for adoption

910
00:46:44,000 --> 00:46:49,040
myself that's my opinion speaking as a

911
00:46:46,319 --> 00:46:51,759
working group member but we can

912
00:46:49,040 --> 00:46:54,640
uh i i think we could do it the only

913
00:46:51,760 --> 00:46:54,640
question would be

914
00:46:54,839 --> 00:47:00,720
and would be whether it's needed and i

915
00:46:58,800 --> 00:47:11,440
think it's good to have an informational

916
00:47:00,720 --> 00:47:14,240
draft explaining this myself

917
00:47:11,440 --> 00:47:15,520
uh so we have a few minutes and nobody's

918
00:47:14,240 --> 00:47:18,240
in the queue do you want to try to use

919
00:47:15,520 --> 00:47:18,240
the hand thing

920
00:47:18,640 --> 00:47:25,040
okay yeah

921
00:47:21,920 --> 00:47:26,720
all right uh

922
00:47:25,040 --> 00:47:28,079
do you remember how to do this okay show

923
00:47:26,720 --> 00:47:31,200
of hands tool

924
00:47:28,079 --> 00:47:32,960
all right so the the question

925
00:47:31,200 --> 00:47:34,558
if there's a show of hands tool on the

926
00:47:32,960 --> 00:47:38,559
left side

927
00:47:34,559 --> 00:47:41,599
uh the question is uh

928
00:47:38,559 --> 00:47:41,599
do people support

929
00:47:42,079 --> 00:47:49,119
adopting this draft

930
00:47:45,839 --> 00:47:51,359
okay so

931
00:47:49,119 --> 00:47:54,319
like i said there's where the

932
00:47:51,359 --> 00:47:58,160
participants are normally listed

933
00:47:54,319 --> 00:48:01,119
you click on the little bar chart

934
00:47:58,160 --> 00:48:04,000
and then you can raise your hand looks

935
00:48:01,119 --> 00:48:07,119
like people are understanding it

936
00:48:04,000 --> 00:48:10,160
um we have the 15

937
00:48:07,119 --> 00:48:12,960
16 voters voters yeah we don't vote but

938
00:48:10,160 --> 00:48:12,960
we raise hands

939
00:48:17,119 --> 00:48:21,839
uh okay so

940
00:48:22,000 --> 00:48:26,480
everyone will see the results when i hit

941
00:48:24,160 --> 00:48:29,920
it and i think

942
00:48:26,480 --> 00:48:29,920
i don't know if people see it right now

943
00:48:30,400 --> 00:48:36,319
i can see it yeah because only the

944
00:48:33,680 --> 00:48:38,399
chairs can see it i think oh yeah

945
00:48:36,319 --> 00:48:41,200
i think only the chairs can see it oh

946
00:48:38,400 --> 00:48:43,440
joel joel says they're visible

947
00:48:41,200 --> 00:48:43,439
okay

948
00:48:44,720 --> 00:48:51,359
awesome great oh it's

949
00:48:48,079 --> 00:48:55,920
it's still changing

950
00:48:51,359 --> 00:48:55,920
all right uh

951
00:48:56,000 --> 00:48:59,040
there are a bunch of people in the queue

952
00:48:57,440 --> 00:49:02,160
now

953
00:48:59,040 --> 00:49:02,160
do you want to call them out

954
00:49:14,400 --> 00:49:20,800
okay remove from i can't remove myself

955
00:49:17,520 --> 00:49:20,800
from the queue can you remove me

956
00:49:20,880 --> 00:49:24,480
oh yeah no i mean i think we should have

957
00:49:23,520 --> 00:49:28,839
called them

958
00:49:24,480 --> 00:49:31,839
to talk yeah yeah no i'm gonna i'm gonna

959
00:49:28,839 --> 00:49:31,839
again

960
00:49:32,720 --> 00:49:35,839
do you want to send audio

961
00:49:42,960 --> 00:49:47,119
i'm sending the audio okay we can hear

962
00:49:46,160 --> 00:49:52,558
you

963
00:49:47,119 --> 00:49:52,559
can you hear me yes can you hear me

964
00:49:56,839 --> 00:50:02,400
yes

965
00:49:59,839 --> 00:50:02,400
can you hear me

966
00:50:05,680 --> 00:50:13,839
yes i can't

967
00:50:08,880 --> 00:50:13,839
i can't hear anybody else

968
00:50:18,559 --> 00:50:27,760
okay uh can we move to lower

969
00:50:22,720 --> 00:50:27,759
yeah lower can you send audio hello

970
00:50:28,400 --> 00:50:41,839
can you hear me

971
00:50:52,839 --> 00:50:58,160
lower

972
00:50:54,000 --> 00:50:58,160
can you you can speak lower

973
00:51:02,960 --> 00:51:09,440
sorry i yo you're asking me something

974
00:51:07,839 --> 00:51:10,160
yeah you were in the queue you maybe it

975
00:51:09,440 --> 00:51:12,960
was a mistake

976
00:51:10,160 --> 00:51:13,359
oh okay that must have been a mistake

977
00:51:12,960 --> 00:51:17,119
thank you

978
00:51:13,359 --> 00:51:19,359
okay okay all right well we're out of

979
00:51:17,119 --> 00:51:22,400
time on this slot

980
00:51:19,359 --> 00:51:24,880
uh let's move to the next one

981
00:51:22,400 --> 00:51:25,839
um so we it sounds like we can ask for

982
00:51:24,880 --> 00:51:27,839
adoption on the

983
00:51:25,839 --> 00:51:30,000
on the list it was pretty well supported

984
00:51:27,839 --> 00:51:32,400
in the by the call of hands too

985
00:51:30,000 --> 00:51:33,280
uh not necessarily that'll get adopted

986
00:51:32,400 --> 00:51:37,119
but you know

987
00:51:33,280 --> 00:51:40,400
it's worth probably putting it out there

988
00:51:37,119 --> 00:51:44,240
all right let's let's move on i think

989
00:51:40,400 --> 00:51:44,240
thank you thank you

990
00:51:49,040 --> 00:51:55,440
this will be you ac yes i'll try and go

991
00:51:52,960 --> 00:51:55,440
fast

992
00:51:57,280 --> 00:52:04,880
oh yeah okay

993
00:52:02,000 --> 00:52:07,359
okay you can move forward i'll talk to

994
00:52:04,880 --> 00:52:10,400
this on the next slide

995
00:52:07,359 --> 00:52:13,359
okay this is a very old draft

996
00:52:10,400 --> 00:52:14,880
that we dropped work on the transport

997
00:52:13,359 --> 00:52:19,040
instance

998
00:52:14,880 --> 00:52:19,599
and uh there were really two motivations

999
00:52:19,040 --> 00:52:22,240
for

1000
00:52:19,599 --> 00:52:22,880
reviving it the first one was there's

1001
00:52:22,240 --> 00:52:26,000
the

1002
00:52:22,880 --> 00:52:29,040
mechanism and i applied the

1003
00:52:26,000 --> 00:52:32,960
known as the gen app

1004
00:52:29,040 --> 00:52:37,279
uh graft or the generic isis

1005
00:52:32,960 --> 00:52:39,760
instance rfc 6823 did go forward

1006
00:52:37,280 --> 00:52:40,319
and it seems like a recurring theme now

1007
00:52:39,760 --> 00:52:45,440
is to

1008
00:52:40,319 --> 00:52:47,279
advertise using the igps to advertise

1009
00:52:45,440 --> 00:52:48,640
information that's really not related to

1010
00:52:47,280 --> 00:52:51,200
routing so we revived it

1011
00:52:48,640 --> 00:52:51,200
next slide

1012
00:52:54,880 --> 00:53:01,440
there's a number of use cases uh

1013
00:52:58,160 --> 00:53:04,319
some of them being present at this

1014
00:53:01,440 --> 00:53:06,000
ietf or past ietf some that are in the

1015
00:53:04,319 --> 00:53:08,319
queue where we want to

1016
00:53:06,000 --> 00:53:09,599
where people are proposing to advertise

1017
00:53:08,319 --> 00:53:13,680
non-routing that

1018
00:53:09,599 --> 00:53:17,760
information in the in the in ospf

1019
00:53:13,680 --> 00:53:18,160
and that would be one use case one this

1020
00:53:17,760 --> 00:53:21,760
is

1021
00:53:18,160 --> 00:53:24,720
one use case on here is the multi-axis

1022
00:53:21,760 --> 00:53:25,119
edge computing for service discovery of

1023
00:53:24,720 --> 00:53:28,160
uh

1024
00:53:25,119 --> 00:53:30,720
servers supporting various

1025
00:53:28,160 --> 00:53:30,720
services

1026
00:53:31,200 --> 00:53:40,000
uh another one we've also had some

1027
00:53:36,079 --> 00:53:43,839
people some discussions of

1028
00:53:40,000 --> 00:53:47,680
running putting more information into

1029
00:53:43,839 --> 00:53:50,720
lsas so the information could be

1030
00:53:47,680 --> 00:53:52,078
exposed across areas now right

1031
00:53:50,720 --> 00:53:54,078
now there's a number of ways you could

1032
00:53:52,079 --> 00:53:56,319
do it you could run more bgpls

1033
00:53:54,079 --> 00:53:58,640
sessions but another way to do it you

1034
00:53:56,319 --> 00:54:01,759
could use the transport instance

1035
00:53:58,640 --> 00:54:04,480
and send uh

1036
00:54:01,760 --> 00:54:05,280
this information from other areas just

1037
00:54:04,480 --> 00:54:08,960
for

1038
00:54:05,280 --> 00:54:11,599
bgpls purposes in the transport

1039
00:54:08,960 --> 00:54:14,000
instance session these are hypothetical

1040
00:54:11,599 --> 00:54:17,040
this draft isn't about this but

1041
00:54:14,000 --> 00:54:17,040
uh next slide

1042
00:54:20,160 --> 00:54:24,078
so what is the transport instance a

1043
00:54:22,240 --> 00:54:27,598
transport instance is a

1044
00:54:24,079 --> 00:54:28,400
is a pair of a parallels parallel

1045
00:54:27,599 --> 00:54:30,480
session

1046
00:54:28,400 --> 00:54:31,920
or i mean you you have you set up

1047
00:54:30,480 --> 00:54:35,200
separate ospf

1048
00:54:31,920 --> 00:54:38,960
adjacencies and you do not

1049
00:54:35,200 --> 00:54:42,078
send normal routing uh topology on them

1050
00:54:38,960 --> 00:54:44,240
you can do this and you can use the same

1051
00:54:42,079 --> 00:54:45,040
links because the ospf packets have an

1052
00:54:44,240 --> 00:54:50,000
instance id

1053
00:54:45,040 --> 00:54:53,200
already ospf b3 has always had one

1054
00:54:50,000 --> 00:54:57,200
because but ospf v2 you'd use

1055
00:54:53,200 --> 00:55:00,399
rfc 6549 which supports

1056
00:54:57,200 --> 00:55:02,640
is an extension to the packet formats

1057
00:55:00,400 --> 00:55:04,319
to support an instance id so you can

1058
00:55:02,640 --> 00:55:06,879
differentiate

1059
00:55:04,319 --> 00:55:07,759
demux the packets when the ospf packets

1060
00:55:06,880 --> 00:55:11,280
to the

1061
00:55:07,760 --> 00:55:15,119
the regular routing instance and the

1062
00:55:11,280 --> 00:55:17,200
transport instance as as a as a

1063
00:55:15,119 --> 00:55:20,319
the relationship to normal ospf

1064
00:55:17,200 --> 00:55:22,480
instances it ships in the night

1065
00:55:20,319 --> 00:55:24,400
you may want to use depending on the

1066
00:55:22,480 --> 00:55:25,760
information that's being non-routing

1067
00:55:24,400 --> 00:55:27,359
information that's being transported you

1068
00:55:25,760 --> 00:55:30,880
may want to have the condition of

1069
00:55:27,359 --> 00:55:33,200
reachability where you wouldn't want to

1070
00:55:30,880 --> 00:55:36,240
use the information

1071
00:55:33,200 --> 00:55:37,040
unless the node that advertised it was

1072
00:55:36,240 --> 00:55:40,078
reachable

1073
00:55:37,040 --> 00:55:43,759
in the uh in the in

1074
00:55:40,079 --> 00:55:47,280
the uh in the normal

1075
00:55:43,760 --> 00:55:50,720
routing plane in the plane

1076
00:55:47,280 --> 00:55:51,920
uh that depends on now how strict you

1077
00:55:50,720 --> 00:55:53,839
want to be

1078
00:55:51,920 --> 00:55:55,599
is dependent on what this application

1079
00:55:53,839 --> 00:55:58,960
data is

1080
00:55:55,599 --> 00:56:02,799
and you could also uh

1081
00:55:58,960 --> 00:56:04,559
if you didn't want to impact the

1082
00:56:02,799 --> 00:56:06,160
packets on the wire you could make these

1083
00:56:04,559 --> 00:56:06,880
lower priority for the transport

1084
00:56:06,160 --> 00:56:09,440
instance

1085
00:56:06,880 --> 00:56:09,440
next slide

1086
00:56:12,319 --> 00:56:15,920
okay uh one thing about the transport

1087
00:56:14,319 --> 00:56:17,040
instance it does you don't install any

1088
00:56:15,920 --> 00:56:20,240
routes

1089
00:56:17,040 --> 00:56:23,599
so we will have the topological lsas

1090
00:56:20,240 --> 00:56:27,680
just so you can debug it and you know

1091
00:56:23,599 --> 00:56:31,040
uh you know what uh

1092
00:56:27,680 --> 00:56:33,759
what for routers make up

1093
00:56:31,040 --> 00:56:35,200
the topology for dissemination of

1094
00:56:33,760 --> 00:56:36,559
information in a transport

1095
00:56:35,200 --> 00:56:38,640
instance but you wouldn't have any of

1096
00:56:36,559 --> 00:56:39,200
these other lsas and you would not

1097
00:56:38,640 --> 00:56:42,558
install

1098
00:56:39,200 --> 00:56:45,839
any routes into the rib

1099
00:56:42,559 --> 00:56:45,839
next slide

1100
00:56:47,599 --> 00:56:50,880
now one thing that's interesting about

1101
00:56:49,200 --> 00:56:53,680
this you can support

1102
00:56:50,880 --> 00:56:55,200
sparse topologies in other words you

1103
00:56:53,680 --> 00:56:59,279
don't have to have

1104
00:56:55,200 --> 00:56:59,919
the same ospf routers connected to one

1105
00:56:59,280 --> 00:57:01,280
another

1106
00:56:59,920 --> 00:57:02,720
i mean you don't have to have the same

1107
00:57:01,280 --> 00:57:03,520
set of sessions for the transport

1108
00:57:02,720 --> 00:57:07,359
instance

1109
00:57:03,520 --> 00:57:09,759
as your normal ospf uh instances

1110
00:57:07,359 --> 00:57:12,000
and you can also support the concept of

1111
00:57:09,760 --> 00:57:15,200
a pre-configured ospf neighbor that

1112
00:57:12,000 --> 00:57:17,359
is more than one hop away

1113
00:57:15,200 --> 00:57:19,359
so you have a remote neighbor which is

1114
00:57:17,359 --> 00:57:20,078
pretty powerful because you think about

1115
00:57:19,359 --> 00:57:24,160
it

1116
00:57:20,079 --> 00:57:26,240
one of the problems with uh

1117
00:57:24,160 --> 00:57:28,399
putting things in the igps is every

1118
00:57:26,240 --> 00:57:30,479
router gets it when only a small subset

1119
00:57:28,400 --> 00:57:32,960
of of the routers need to get it

1120
00:57:30,480 --> 00:57:33,839
with the transport instance you could

1121
00:57:32,960 --> 00:57:37,599
say have

1122
00:57:33,839 --> 00:57:39,759
a controller and it could have ospf

1123
00:57:37,599 --> 00:57:43,920
remote neighbor

1124
00:57:39,760 --> 00:57:46,160
sessions with only those ospf routers

1125
00:57:43,920 --> 00:57:48,880
that need to have this information

1126
00:57:46,160 --> 00:57:48,879
whatever it is

1127
00:57:48,960 --> 00:57:55,040
now the concept of multi topologies

1128
00:57:52,799 --> 00:57:57,040
for routing is inapplicable but you

1129
00:57:55,040 --> 00:57:59,520
could have even multiple transport

1130
00:57:57,040 --> 00:58:02,160
instances for different types of data

1131
00:57:59,520 --> 00:58:03,839
with different types of different

1132
00:58:02,160 --> 00:58:06,399
topologies

1133
00:58:03,839 --> 00:58:07,839
when i'm for disseminating this

1134
00:58:06,400 --> 00:58:10,400
information

1135
00:58:07,839 --> 00:58:10,400
next slide

1136
00:58:15,280 --> 00:58:19,920
we're using the same encoding that we

1137
00:58:17,200 --> 00:58:24,399
use in all the ospf

1138
00:58:19,920 --> 00:58:28,880
tlbs it was dates back to

1139
00:58:24,400 --> 00:58:28,880
rfc 3630

1140
00:58:32,799 --> 00:58:39,359
and it was carried into the opaque lsas

1141
00:58:36,319 --> 00:58:41,119
well in ospf v2 you could you'd use the

1142
00:58:39,359 --> 00:58:45,680
opaque lsas

1143
00:58:41,119 --> 00:58:49,119
and in ospf b3 because ospf v3

1144
00:58:45,680 --> 00:58:51,839
it's very easy to allocate new

1145
00:58:49,119 --> 00:58:53,520
lsas in a backward compatible fashion

1146
00:58:51,839 --> 00:58:56,558
you'd

1147
00:58:53,520 --> 00:58:56,559
preferably uh

1148
00:58:56,640 --> 00:59:02,558
define new lsas for this data

1149
00:59:00,319 --> 00:59:04,880
conceivably one could use the extended

1150
00:59:02,559 --> 00:59:05,359
lsas and piggyback on the normal ones

1151
00:59:04,880 --> 00:59:07,839
but

1152
00:59:05,359 --> 00:59:08,640
i think it would be better to keep this

1153
00:59:07,839 --> 00:59:10,400
information

1154
00:59:08,640 --> 00:59:12,240
separate we can take it as a

1155
00:59:10,400 --> 00:59:14,720
case-by-case

1156
00:59:12,240 --> 00:59:14,720
basis

1157
00:59:15,599 --> 00:59:19,119
as applications are defined to use the

1158
00:59:18,160 --> 00:59:22,558
transport

1159
00:59:19,119 --> 00:59:22,559
instance next slide

1160
00:59:24,000 --> 00:59:28,000
i think this is the last one here's just

1161
00:59:26,319 --> 00:59:31,680
one that we had talked about

1162
00:59:28,000 --> 00:59:35,119
i talked about with yin xen is

1163
00:59:31,680 --> 00:59:38,480
for this multi-axis edge computing

1164
00:59:35,119 --> 00:59:41,680
to identify the servers and you could

1165
00:59:38,480 --> 00:59:45,599
put this in no

1166
00:59:41,680 --> 00:59:47,680
an ospf v2 opaque lsa and an ospf v3 a

1167
00:59:45,599 --> 00:59:51,200
new lsa type

1168
00:59:47,680 --> 00:59:53,440
uh you'd identify the servers

1169
00:59:51,200 --> 00:59:54,879
by their application address that's the

1170
00:59:53,440 --> 00:59:56,799
address and you'd have

1171
00:59:54,880 --> 00:59:57,920
have a service id for the type of

1172
00:59:56,799 --> 01:00:02,079
services

1173
00:59:57,920 --> 01:00:05,440
and then you'd have uh cpu usage

1174
01:00:02,079 --> 01:00:06,960
and the thresholds this is just one

1175
01:00:05,440 --> 01:00:09,520
example but you could use this for many

1176
01:00:06,960 --> 01:00:09,520
different things

1177
01:00:10,319 --> 01:00:15,839
last slide

1178
01:00:16,799 --> 01:00:19,920
okay we're going to see if there's

1179
01:00:18,079 --> 01:00:22,319
interest in this

1180
01:00:19,920 --> 01:00:24,400
and right now we're not asking for

1181
01:00:22,319 --> 01:00:28,960
working group adoption

1182
01:00:24,400 --> 01:00:31,359
we're just going to uh

1183
01:00:28,960 --> 01:00:32,160
ask for comments and see if people are

1184
01:00:31,359 --> 01:00:35,040
interested in

1185
01:00:32,160 --> 01:00:35,040
in using this

1186
01:00:35,520 --> 01:00:40,079
uh aizen hello

1187
01:00:40,319 --> 01:00:47,520
so how about put the information

1188
01:00:43,839 --> 01:00:50,558
in one independent top tier way

1189
01:00:47,520 --> 01:00:54,559
which can be only be included included

1190
01:00:50,559 --> 01:00:56,640
in the router lsa

1191
01:00:54,559 --> 01:00:57,680
so we can we need not define the

1192
01:00:56,640 --> 01:01:00,720
separate

1193
01:00:57,680 --> 01:01:00,720
otp instance

1194
01:01:06,079 --> 01:01:10,480
i guess it depends on what the

1195
01:01:08,000 --> 01:01:13,599
information is

1196
01:01:10,480 --> 01:01:17,040
that you want to put in the router lsa

1197
01:01:13,599 --> 01:01:19,280
yeah currently you you just mentioned

1198
01:01:17,040 --> 01:01:21,279
some information related to the server

1199
01:01:19,280 --> 01:01:24,640
so i think

1200
01:01:21,280 --> 01:01:25,440
it has a similar application for another

1201
01:01:24,640 --> 01:01:28,480
job that

1202
01:01:25,440 --> 01:01:31,599
provided by the linda so

1203
01:01:28,480 --> 01:01:32,720
i think we can think we can try to put

1204
01:01:31,599 --> 01:01:35,760
the information

1205
01:01:32,720 --> 01:01:36,879
in an independent dialog i think it may

1206
01:01:35,760 --> 01:01:40,160
be more simple

1207
01:01:36,880 --> 01:01:40,160
for your solution

1208
01:01:42,079 --> 01:01:45,520
yeah i think that this should be

1209
01:01:43,760 --> 01:01:48,000
discussed on the list for sure

1210
01:01:45,520 --> 01:01:51,200
especially in the context of some of the

1211
01:01:48,000 --> 01:01:53,040
presentations today

1212
01:01:51,200 --> 01:01:55,439
coming up later that i think you're

1213
01:01:53,040 --> 01:02:00,480
referring to

1214
01:01:55,440 --> 01:02:00,480
okay uh okay less

1215
01:02:02,690 --> 01:02:07,680
[Music]

1216
01:02:03,839 --> 01:02:10,599
just um i didn't realize until

1217
01:02:07,680 --> 01:02:12,000
just now that you had revived this um

1218
01:02:10,599 --> 01:02:15,119
6823

1219
01:02:12,000 --> 01:02:16,960
introduced uh an application identifier

1220
01:02:15,119 --> 01:02:18,799
with a registry

1221
01:02:16,960 --> 01:02:20,559
you know to control the assignment of

1222
01:02:18,799 --> 01:02:22,960
the applications

1223
01:02:20,559 --> 01:02:25,760
um do you think that that concept has

1224
01:02:22,960 --> 01:02:28,000
any relevance here

1225
01:02:25,760 --> 01:02:29,680
yeah let me look at that we'll look

1226
01:02:28,000 --> 01:02:31,359
we'll take a look at that

1227
01:02:29,680 --> 01:02:33,038
and you know maybe we could we'd have to

1228
01:02:31,359 --> 01:02:34,000
change things a bit but maybe we could

1229
01:02:33,039 --> 01:02:38,720
share the registry

1230
01:02:34,000 --> 01:02:42,240
between the two igps yeah

1231
01:02:38,720 --> 01:02:48,078
okay thanks you know uh robin was in the

1232
01:02:42,240 --> 01:02:50,078
queue too i i removed him by mistake see

1233
01:02:48,079 --> 01:02:52,480
he's back in the queue

1234
01:02:50,079 --> 01:02:52,480
go ahead

1235
01:02:53,359 --> 01:02:57,839
guys not yet

1236
01:03:00,839 --> 01:03:03,839
robin

1237
01:03:05,760 --> 01:03:12,559
you say hello yes

1238
01:03:09,760 --> 01:03:14,960
we can hear you okay okay they say i

1239
01:03:12,559 --> 01:03:18,640
have the similar the concern

1240
01:03:14,960 --> 01:03:19,760
as a hygiene because from my point of

1241
01:03:18,640 --> 01:03:23,038
view because i

1242
01:03:19,760 --> 01:03:26,480
introduced a instance because i think

1243
01:03:23,039 --> 01:03:26,799
there is a problem the complexity for

1244
01:03:26,480 --> 01:03:29,760
the

1245
01:03:26,799 --> 01:03:30,400
network evolution because this may

1246
01:03:29,760 --> 01:03:33,280
introduce

1247
01:03:30,400 --> 01:03:33,920
more configuration because we know the

1248
01:03:33,280 --> 01:03:36,319
pdp

1249
01:03:33,920 --> 01:03:38,160
they always use the same session to

1250
01:03:36,319 --> 01:03:41,119
support the different

1251
01:03:38,160 --> 01:03:42,480
services so from my point of view maybe

1252
01:03:41,119 --> 01:03:45,359
we can also

1253
01:03:42,480 --> 01:03:46,799
take the similar mechanism and also use

1254
01:03:45,359 --> 01:03:49,839
for the better

1255
01:03:46,799 --> 01:03:54,880
network evolution and also

1256
01:03:49,839 --> 01:03:58,400
reduce the possible the cost of the igp

1257
01:03:54,880 --> 01:04:01,440
so that's my comments on this this

1258
01:03:58,400 --> 01:04:01,440
uh draft

1259
01:04:03,520 --> 01:04:07,680
thank you guys i don't know do you

1260
01:04:06,559 --> 01:04:11,440
really think that you fix

1261
01:04:07,680 --> 01:04:13,839
things you're in the queue again

1262
01:04:11,440 --> 01:04:15,119
i i do we're we're four minutes over so

1263
01:04:13,839 --> 01:04:19,119
i think we have to cut

1264
01:04:15,119 --> 01:04:19,119
now and move to the next presentation

1265
01:04:19,839 --> 01:04:26,558
yes we can hear you okay all right i

1266
01:04:23,119 --> 01:04:26,559
i think i fixed the issue

1267
01:04:33,280 --> 01:04:37,920
it seems similar to like i guess like an

1268
01:04:35,359 --> 01:04:39,920
isis multi topology i guess or

1269
01:04:37,920 --> 01:04:41,520
let's say flat salary would it work

1270
01:04:39,920 --> 01:04:43,359
let's say in conjunction with

1271
01:04:41,520 --> 01:04:44,720
it like let's say the layering concept

1272
01:04:43,359 --> 01:04:47,759
where you can do like

1273
01:04:44,720 --> 01:04:49,680
multiple sparse instances um

1274
01:04:47,760 --> 01:04:51,359
and let's say if you had flex algorithm

1275
01:04:49,680 --> 01:04:53,839
as well would it um

1276
01:04:51,359 --> 01:04:55,279
could you use it to leverage i guess in

1277
01:04:53,839 --> 01:04:57,680
some way or maybe

1278
01:04:55,280 --> 01:04:59,359
instead of using a normal identification

1279
01:04:57,680 --> 01:05:01,839
i guess

1280
01:04:59,359 --> 01:05:03,920
leverage flex algo or i guess use this

1281
01:05:01,839 --> 01:05:06,240
in conjunction i guess possibly request

1282
01:05:03,920 --> 01:05:06,240
algorithm

1283
01:05:08,480 --> 01:05:12,559
i i i don't think so because because

1284
01:05:10,960 --> 01:05:13,359
this is about distribution of

1285
01:05:12,559 --> 01:05:16,559
information

1286
01:05:13,359 --> 01:05:19,440
not computing different uh

1287
01:05:16,559 --> 01:05:19,760
paths the transport is for information

1288
01:05:19,440 --> 01:05:23,280
that

1289
01:05:19,760 --> 01:05:25,440
isn't for routing okay

1290
01:05:23,280 --> 01:05:26,400
it's it's it's actually really it's a

1291
01:05:25,440 --> 01:05:29,680
direct analog

1292
01:05:26,400 --> 01:05:30,640
an analogous draft to what's in isis gen

1293
01:05:29,680 --> 01:05:32,480
app

1294
01:05:30,640 --> 01:05:34,078
i don't know i have the rfc off the top

1295
01:05:32,480 --> 01:05:36,559
of my head

1296
01:05:34,079 --> 01:05:40,240
i got you so it's really just transport

1297
01:05:36,559 --> 01:05:40,240
i guess right no routing construct

1298
01:05:41,280 --> 01:05:46,720
all right we need to move to the next

1299
01:05:42,480 --> 01:05:46,720
presentation thanks ac

1300
01:05:48,839 --> 01:05:55,359
thanks

1301
01:05:51,520 --> 01:06:05,839
this is um flex algorithm

1302
01:05:55,359 --> 01:06:05,839
yes we can hear you

1303
01:06:14,960 --> 01:06:19,839
barack canaria will present this for me

1304
01:06:21,599 --> 01:06:24,400
okay that's great

1305
01:06:24,960 --> 01:06:33,839
you're up

1306
01:06:42,160 --> 01:06:49,038
hello christian can you hear me

1307
01:06:46,960 --> 01:06:50,000
i can't hear your voice christian we can

1308
01:06:49,039 --> 01:06:53,200
hear you yeah

1309
01:06:50,000 --> 01:06:55,760
yes we can hear you okay yeah

1310
01:06:53,200 --> 01:06:56,720
so let's get started welcome all to the

1311
01:06:55,760 --> 01:06:59,760
presentation

1312
01:06:56,720 --> 01:07:02,240
this is from juniper network

1313
01:06:59,760 --> 01:07:03,520
presenting the draft flex algorithm in

1314
01:07:02,240 --> 01:07:06,799
ip network

1315
01:07:03,520 --> 01:07:09,119
on behalf of the authors next slide

1316
01:07:06,799 --> 01:07:09,119
please

1317
01:07:10,960 --> 01:07:14,640
so this is the agenda of today's

1318
01:07:12,640 --> 01:07:16,240
presentation we will go through over the

1319
01:07:14,640 --> 01:07:17,520
introduction use case and propose

1320
01:07:16,240 --> 01:07:20,000
solutions

1321
01:07:17,520 --> 01:07:22,480
and that will be covered in the next

1322
01:07:20,000 --> 01:07:22,480
slides

1323
01:07:23,359 --> 01:07:26,240
next slides please

1324
01:07:26,400 --> 01:07:30,799
okay to the introduction so currently

1325
01:07:29,119 --> 01:07:34,000
the igp flex algorithm

1326
01:07:30,799 --> 01:07:36,240
compute the constraint based part to the

1327
01:07:34,000 --> 01:07:38,799
segment routing data plan which is like

1328
01:07:36,240 --> 01:07:41,279
sr mpls and srv6

1329
01:07:38,799 --> 01:07:42,000
so therefore the igp flex algorithm

1330
01:07:41,280 --> 01:07:44,799
cannot be

1331
01:07:42,000 --> 01:07:46,480
deployed in the absence of srm pls and

1332
01:07:44,799 --> 01:07:48,880
srv6

1333
01:07:46,480 --> 01:07:50,559
so idea of this draft is to extend the

1334
01:07:48,880 --> 01:07:52,559
igp flex algorithm

1335
01:07:50,559 --> 01:07:53,680
allowing it to compute the constraint

1336
01:07:52,559 --> 01:07:58,000
based part

1337
01:07:53,680 --> 01:08:00,879
to the ipv4 or ipv6 prefix in the

1338
01:07:58,000 --> 01:08:00,880
ip networks

1339
01:08:01,920 --> 01:08:08,480
so the with the with this graph we can

1340
01:08:05,839 --> 01:08:09,839
deploy the flex algorithm in the ip

1341
01:08:08,480 --> 01:08:13,599
network in the absence of

1342
01:08:09,839 --> 01:08:15,520
srmp less than srv6 so this cover the

1343
01:08:13,599 --> 01:08:18,960
intention of this draft

1344
01:08:15,520 --> 01:08:18,960
next next slide please

1345
01:08:20,238 --> 01:08:25,278
now how do how do we associate prefix

1346
01:08:22,880 --> 01:08:28,239
with the ipflex algorithm

1347
01:08:25,279 --> 01:08:29,520
this can be done in via the egress node

1348
01:08:28,238 --> 01:08:31,678
procedure

1349
01:08:29,520 --> 01:08:34,080
so the loopback interface is associated

1350
01:08:31,679 --> 01:08:35,920
with one or more ip addresses right

1351
01:08:34,080 --> 01:08:38,080
so each of this look back address is

1352
01:08:35,920 --> 01:08:39,839
associated with the flex algo so we can

1353
01:08:38,080 --> 01:08:41,359
associate one loopback address with the

1354
01:08:39,839 --> 01:08:43,198
ipflexalgo

1355
01:08:41,359 --> 01:08:44,960
so if packet sent to that loopback

1356
01:08:43,198 --> 01:08:46,318
address associate with the particular

1357
01:08:44,960 --> 01:08:48,158
flex algo

1358
01:08:46,319 --> 01:08:51,440
it follow the constraint based path

1359
01:08:48,158 --> 01:08:54,399
calculated by igp during the computation

1360
01:08:51,439 --> 01:08:55,439
otherwise the packet follows the igp

1361
01:08:54,399 --> 01:08:57,759
list cost

1362
01:08:55,439 --> 01:08:57,759
path

1363
01:08:59,439 --> 01:09:02,559
yeah next slide please

1364
01:09:04,960 --> 01:09:10,319
uh so one more thing like association of

1365
01:09:06,960 --> 01:09:12,880
this address to the ipflex algorithm

1366
01:09:10,319 --> 01:09:15,040
implementation independent operator is

1367
01:09:12,880 --> 01:09:16,799
free free to choose existing mechanism

1368
01:09:15,040 --> 01:09:18,960
or any new mechanism

1369
01:09:16,799 --> 01:09:20,319
for the ip address to the flexelgo

1370
01:09:18,960 --> 01:09:22,799
association

1371
01:09:20,319 --> 01:09:24,719
now coming to the advertising part of

1372
01:09:22,799 --> 01:09:27,839
the ip flex algorithm

1373
01:09:24,719 --> 01:09:30,560
each participating node advertise an ipv

1374
01:09:27,839 --> 01:09:31,278
algorithm sub tlv this is new subtle we

1375
01:09:30,560 --> 01:09:35,520
defined

1376
01:09:31,279 --> 01:09:38,159
in the draft so the for the isis this

1377
01:09:35,520 --> 01:09:40,000
sub tlv will be present in the router

1378
01:09:38,158 --> 01:09:42,639
capability tlb

1379
01:09:40,000 --> 01:09:43,759
and for the ospf it will go as a router

1380
01:09:42,640 --> 01:09:47,120
information

1381
01:09:43,759 --> 01:09:50,238
lsa so the participating router

1382
01:09:47,120 --> 01:09:54,158
by ascending this tlv intent to

1383
01:09:50,238 --> 01:09:59,199
participate in a particular ip flex algo

1384
01:09:54,158 --> 01:09:59,199
throughout the domain next slide please

1385
01:10:01,679 --> 01:10:07,600
so advertising the flexible definition

1386
01:10:05,040 --> 01:10:09,199
all the router participating in the ip

1387
01:10:07,600 --> 01:10:11,920
flex algo

1388
01:10:09,199 --> 01:10:13,759
must agree on the flex algo common flex

1389
01:10:11,920 --> 01:10:16,880
algo definition

1390
01:10:13,760 --> 01:10:18,480
the selected node within the igp domain

1391
01:10:16,880 --> 01:10:21,600
advertise the

1392
01:10:18,480 --> 01:10:23,919
fed which are agreed by the old node

1393
01:10:21,600 --> 01:10:25,760
and for the ipflex algorithm we can

1394
01:10:23,920 --> 01:10:28,800
leverage the

1395
01:10:25,760 --> 01:10:31,760
fed protocol machinery defined in the

1396
01:10:28,800 --> 01:10:35,120
internet draft ls reflex algo

1397
01:10:31,760 --> 01:10:37,199
based on the section 5 6 and 7 so the

1398
01:10:35,120 --> 01:10:38,559
this new ipflex algo will use the

1399
01:10:37,199 --> 01:10:41,519
flexalgo

1400
01:10:38,560 --> 01:10:42,400
machinery which is already well defined

1401
01:10:41,520 --> 01:10:45,840
in the

1402
01:10:42,400 --> 01:10:45,839
fade algorithm

1403
01:10:46,080 --> 01:10:48,880
next slide please

1404
01:10:50,800 --> 01:10:55,360
so we have set the common ground by

1405
01:10:53,199 --> 01:10:57,599
advertising the fed and the ipflex

1406
01:10:55,360 --> 01:11:00,320
algorithm throughout the igp daemon

1407
01:10:57,600 --> 01:11:02,400
now we have to associate the prefix with

1408
01:11:00,320 --> 01:11:04,320
the ipflex algorithm and we have to

1409
01:11:02,400 --> 01:11:08,000
advertise reachability

1410
01:11:04,320 --> 01:11:09,280
throughout the igp so to be able to

1411
01:11:08,000 --> 01:11:12,320
associate ip

1412
01:11:09,280 --> 01:11:15,440
and ipv6 prefix with flex algorithm a

1413
01:11:12,320 --> 01:11:18,239
new top level tlb defined in the isis

1414
01:11:15,440 --> 01:11:19,759
this tlv are the ipv4 algorithm prefix

1415
01:11:18,239 --> 01:11:23,199
reachability tlv and

1416
01:11:19,760 --> 01:11:26,719
ipv6 prefix ipv6 algorithm prefix

1417
01:11:23,199 --> 01:11:30,559
reachability tlp

1418
01:11:26,719 --> 01:11:33,760
we cannot use the existing

1419
01:11:30,560 --> 01:11:37,120
uh prefix switchability tlb because by

1420
01:11:33,760 --> 01:11:39,360
default it is associated with the algo0

1421
01:11:37,120 --> 01:11:40,640
in the igp right so we have curve out

1422
01:11:39,360 --> 01:11:43,519
two new tlv

1423
01:11:40,640 --> 01:11:44,560
for the sending the reachability of ip

1424
01:11:43,520 --> 01:11:49,840
flex algo

1425
01:11:44,560 --> 01:11:52,800
tlv so this new tl we share the

1426
01:11:49,840 --> 01:11:54,239
same uh set of the sub tlv space defined

1427
01:11:52,800 --> 01:11:57,440
in tlb 135

1428
01:11:54,239 --> 01:11:59,440
235 236 and 237

1429
01:11:57,440 --> 01:12:01,040
the point to note here is like the whole

1430
01:11:59,440 --> 01:12:03,919
sub tlp of this

1431
01:12:01,040 --> 01:12:06,400
tlvs can not be applicable for example

1432
01:12:03,920 --> 01:12:06,400
prefix

1433
01:12:06,719 --> 01:12:11,360
prefix segment identifier cannot be part

1434
01:12:08,880 --> 01:12:14,000
of this ip flex algorithm

1435
01:12:11,360 --> 01:12:15,360
uh so now let us look at the body of

1436
01:12:14,000 --> 01:12:18,320
this tlv it

1437
01:12:15,360 --> 01:12:20,480
it has a metric and the associated flake

1438
01:12:18,320 --> 01:12:22,400
algo and the prefix and prefix length

1439
01:12:20,480 --> 01:12:23,360
and the bunch of if there are presence

1440
01:12:22,400 --> 01:12:27,040
of tail v

1441
01:12:23,360 --> 01:12:27,040
it will go in sub tlp fields

1442
01:12:27,360 --> 01:12:31,839
uh just the point to note here is i have

1443
01:12:29,360 --> 01:12:35,599
not defined the type and length

1444
01:12:31,840 --> 01:12:36,960
at just a moment yeah so the point to

1445
01:12:35,600 --> 01:12:39,199
note here is like uh

1446
01:12:36,960 --> 01:12:41,199
due to the space constraint in this

1447
01:12:39,199 --> 01:12:43,519
slide i have not defined the type and

1448
01:12:41,199 --> 01:12:46,719
length field of this new tlb

1449
01:12:43,520 --> 01:12:50,640
but it is well present in the draft

1450
01:12:46,719 --> 01:12:53,679
here next slide please

1451
01:12:50,640 --> 01:12:56,480
so similarly for ospf uh we have to

1452
01:12:53,679 --> 01:13:00,080
define a new tlb for the ospf v2

1453
01:12:56,480 --> 01:13:03,199
this is la and this tl we go as a

1454
01:13:00,080 --> 01:13:06,640
ospfv to extend opec lsa

1455
01:13:03,199 --> 01:13:07,280
for the ospf topologies and it has like

1456
01:13:06,640 --> 01:13:10,159
empty id

1457
01:13:07,280 --> 01:13:11,679
algorithm prefix matrix and other sub

1458
01:13:10,159 --> 01:13:14,159
tlp of that

1459
01:13:11,679 --> 01:13:14,159
tlv

1460
01:13:15,440 --> 01:13:22,960
next slide please

1461
01:13:19,440 --> 01:13:24,960
so now on the calculating part of this

1462
01:13:22,960 --> 01:13:28,239
ip flex algorithm

1463
01:13:24,960 --> 01:13:30,480
tlv algorithm graph right so as we know

1464
01:13:28,239 --> 01:13:32,400
that the ipflex algorithm is yet

1465
01:13:30,480 --> 01:13:33,919
another replication of this flake

1466
01:13:32,400 --> 01:13:36,159
algorithm

1467
01:13:33,920 --> 01:13:38,320
it follows the same procedure of the

1468
01:13:36,159 --> 01:13:41,040
calculating the constraint path

1469
01:13:38,320 --> 01:13:42,400
defined in the internet draft ls or flex

1470
01:13:41,040 --> 01:13:45,600
algorithm

1471
01:13:42,400 --> 01:13:48,239
in the section 10 11 and 12.

1472
01:13:45,600 --> 01:13:50,400
so when the ipfx allowed to compute to a

1473
01:13:48,239 --> 01:13:53,040
node it must use the

1474
01:13:50,400 --> 01:13:55,040
corresponding flex algorithm participant

1475
01:13:53,040 --> 01:13:58,159
participation algo

1476
01:13:55,040 --> 01:14:00,159
and it compute the constraint based part

1477
01:13:58,159 --> 01:14:02,159
which is independent of the underlying

1478
01:14:00,159 --> 01:14:05,280
sr or srv6 path

1479
01:14:02,159 --> 01:14:05,280
algo if present

1480
01:14:05,360 --> 01:14:10,559
and this iplex algorithm can use the lfa

1481
01:14:09,120 --> 01:14:14,159
protection mechanism

1482
01:14:10,560 --> 01:14:17,440
which is well defined in the igp

1483
01:14:14,159 --> 01:14:20,239
also the s the sr segment routing flex

1484
01:14:17,440 --> 01:14:22,799
algo and the ip flex and go go

1485
01:14:20,239 --> 01:14:23,599
parallelly in the network if there is a

1486
01:14:22,800 --> 01:14:25,840
need arise

1487
01:14:23,600 --> 01:14:29,600
they cannot interfere each other because

1488
01:14:25,840 --> 01:14:29,600
they advertise different flex will go

1489
01:14:30,000 --> 01:14:33,120
okay next slide please

1490
01:14:34,000 --> 01:14:39,120
so since the this graph used the

1491
01:14:36,800 --> 01:14:42,080
existing mechanism of the lsr flex

1492
01:14:39,120 --> 01:14:44,000
algorithm and that is very stable

1493
01:14:42,080 --> 01:14:45,600
as of now so author would like to

1494
01:14:44,000 --> 01:14:49,600
request for call of

1495
01:14:45,600 --> 01:14:49,600
call for the adoption of this draft

1496
01:14:50,640 --> 01:14:58,960
next slide please

1497
01:14:56,800 --> 01:15:00,960
the author would like to thank you ietf

1498
01:14:58,960 --> 01:15:02,560
for giving opportunity to present his

1499
01:15:00,960 --> 01:15:08,000
draft

1500
01:15:02,560 --> 01:15:08,000
i would like to ask for any comments

1501
01:15:08,840 --> 01:15:24,560
suggestions

1502
01:15:10,239 --> 01:15:27,599
so thank you once again

1503
01:15:24,560 --> 01:15:30,719
hello yes uh

1504
01:15:27,600 --> 01:15:33,040
ac you're you're in the queue okay

1505
01:15:30,719 --> 01:15:33,040
okay

1506
01:15:34,159 --> 01:15:42,000
yeah yeah this is ac uh

1507
01:15:38,000 --> 01:15:45,920
why did you define a new top level uh

1508
01:15:42,000 --> 01:15:49,600
tlb for ospf extended

1509
01:15:45,920 --> 01:15:49,600
prefix lsa do you mean

1510
01:15:50,800 --> 01:15:55,760
i guess i guess i i was wondering why

1511
01:15:53,040 --> 01:15:55,760
you just didn't

1512
01:15:55,920 --> 01:16:00,320
you use the existing one i'm not saying

1513
01:15:59,520 --> 01:16:04,840
it's wrong

1514
01:16:00,320 --> 01:16:07,840
i was just wondering the the the

1515
01:16:04,840 --> 01:16:07,840
reasoning

1516
01:16:08,080 --> 01:16:12,239
uh for the ospf right

1517
01:16:14,320 --> 01:16:18,799
so you mean to say we can use the

1518
01:16:16,159 --> 01:16:22,159
existing ospf tlb for the same

1519
01:16:18,800 --> 01:16:24,480
but that that is a specific to the algo

1520
01:16:22,159 --> 01:16:27,759
zero right

1521
01:16:24,480 --> 01:16:32,320
oh okay so but here we

1522
01:16:27,760 --> 01:16:34,159
can if i can jump here we can't use yeah

1523
01:16:32,320 --> 01:16:36,719
because the existing one would advertise

1524
01:16:34,159 --> 01:16:39,040
delga zero reachability

1525
01:16:36,719 --> 01:16:39,040
okay

1526
01:16:44,239 --> 01:16:49,839
okay gehan

1527
01:16:54,400 --> 01:16:58,559
can you hear me barely

1528
01:16:59,840 --> 01:17:03,840
trying to test before the next

1529
01:17:04,810 --> 01:17:07,939
[Music]

1530
01:17:10,640 --> 01:17:16,159
the question i had was um

1531
01:17:13,840 --> 01:17:17,360
how would um i guess interoperability

1532
01:17:16,159 --> 01:17:18,559
work with uh

1533
01:17:17,360 --> 01:17:20,000
segment routing i think you may have

1534
01:17:18,560 --> 01:17:22,480
mentioned but let's say that you wanted

1535
01:17:20,000 --> 01:17:22,480
to use

1536
01:17:22,560 --> 01:17:26,000
this and let's say with srv let's say

1537
01:17:24,560 --> 01:17:29,199
with srv6 which

1538
01:17:26,000 --> 01:17:31,280
you know reuses the ipv6 data

1539
01:17:29,199 --> 01:17:32,719
could this plan used in conjunction or

1540
01:17:31,280 --> 01:17:35,360
how would this

1541
01:17:32,719 --> 01:17:36,800
work i guess with the uh flex algo

1542
01:17:35,360 --> 01:17:39,280
that's uh

1543
01:17:36,800 --> 01:17:42,840
that's utilized for sr i guess would

1544
01:17:39,280 --> 01:17:45,840
there be any benefit or reason to do

1545
01:17:42,840 --> 01:17:45,840
that

1546
01:17:46,640 --> 01:17:52,480
so i think voice was not clear but let

1547
01:17:49,520 --> 01:17:56,000
me repeat it like the gyan was asking

1548
01:17:52,480 --> 01:17:59,280
how do we how does it benefit to the

1549
01:17:56,000 --> 01:18:03,280
srm pls srv6 so let's say

1550
01:17:59,280 --> 01:18:06,239
using it with srv6 um

1551
01:18:03,280 --> 01:18:07,280
since i think since srv6 uses the ipv6

1552
01:18:06,239 --> 01:18:13,839
data plane

1553
01:18:07,280 --> 01:18:13,840
could this be used with srv6

1554
01:18:14,800 --> 01:18:20,159
but this this this draft is independent

1555
01:18:17,440 --> 01:18:21,040
of the any existing srm plus or srv6

1556
01:18:20,159 --> 01:18:23,199
right maybe

1557
01:18:21,040 --> 01:18:24,320
the operator if they doesn't want to run

1558
01:18:23,199 --> 01:18:26,799
or they don't have

1559
01:18:24,320 --> 01:18:28,400
this hardware capability they can use

1560
01:18:26,800 --> 01:18:31,120
this

1561
01:18:28,400 --> 01:18:32,239
you know software based uh programming

1562
01:18:31,120 --> 01:18:34,559
in the hardware and can

1563
01:18:32,239 --> 01:18:35,440
achieve the same level of the data plane

1564
01:18:34,560 --> 01:18:40,400
separation

1565
01:18:35,440 --> 01:18:44,159
or the network slicing may i add to that

1566
01:18:40,400 --> 01:18:47,839
yeah so long as

1567
01:18:44,159 --> 01:18:50,480
the addresses that you bind to flex algo

1568
01:18:47,840 --> 01:18:52,560
are different from the locators that you

1569
01:18:50,480 --> 01:18:54,480
bind to flex algo

1570
01:18:52,560 --> 01:18:56,400
you should be able to run them both at

1571
01:18:54,480 --> 01:19:00,320
once but the question is

1572
01:18:56,400 --> 01:19:00,320
why would you ever run them both at once

1573
01:19:00,400 --> 01:19:04,639
i mean i guess if you had multiple

1574
01:19:01,760 --> 01:19:07,120
topologies and maybe you had later

1575
01:19:04,640 --> 01:19:08,000
you know different layers if you're

1576
01:19:07,120 --> 01:19:10,559
running isis

1577
01:19:08,000 --> 01:19:11,840
multiple apology or different instances

1578
01:19:10,560 --> 01:19:14,400
but i agree

1579
01:19:11,840 --> 01:19:16,719
it would be very corner case that you

1580
01:19:14,400 --> 01:19:18,639
would do that

1581
01:19:16,719 --> 01:19:20,800
um correct me if i'm wrong here ron but

1582
01:19:18,640 --> 01:19:25,199
i i thought this is kind of like an

1583
01:19:20,800 --> 01:19:25,199
alternative to sr right

1584
01:19:25,840 --> 01:19:30,159
yes uh that's why i ask why would you

1585
01:19:28,400 --> 01:19:37,839
ever run them both at once

1586
01:19:30,159 --> 01:19:37,839
right okay

1587
01:19:49,920 --> 01:19:53,520
okay thanks bruno you're up

1588
01:19:55,679 --> 01:20:00,159
uh thank you for the presentation i

1589
01:19:57,760 --> 01:20:02,800
haven't read draft001

1590
01:20:00,159 --> 01:20:06,080
sorry for that the question is specific

1591
01:20:02,800 --> 01:20:09,120
to isis on ipv6

1592
01:20:06,080 --> 01:20:12,480
and when writing draft

1593
01:20:09,120 --> 01:20:13,040
all zero zero it seems that what you're

1594
01:20:12,480 --> 01:20:16,480
trying

1595
01:20:13,040 --> 01:20:19,440
to do which is useful

1596
01:20:16,480 --> 01:20:20,000
is already available it is currently

1597
01:20:19,440 --> 01:20:23,280
called

1598
01:20:20,000 --> 01:20:24,400
srv6 flex algo but it does not use any

1599
01:20:23,280 --> 01:20:29,440
uh

1600
01:20:24,400 --> 01:20:33,519
srv6 srh sr it's only ipv6

1601
01:20:29,440 --> 01:20:36,320
so um for ipv6 it's already available

1602
01:20:33,520 --> 01:20:36,719
so why do you need to define a new tlv

1603
01:20:36,320 --> 01:20:39,840
for

1604
01:20:36,719 --> 01:20:39,840
isis 1966

1605
01:20:40,560 --> 01:20:43,600
so you mean to say why there is a

1606
01:20:42,320 --> 01:20:47,440
different tlv for

1607
01:20:43,600 --> 01:20:51,120
ipv4 and ipv6 in isis no i mean

1608
01:20:47,440 --> 01:20:51,120
why there is a different leds

1609
01:20:51,520 --> 01:21:00,719
between ip flex algo ipv6

1610
01:20:55,360 --> 01:21:03,839
on srv6 flex algo

1611
01:21:00,719 --> 01:21:07,120
um okay but

1612
01:21:03,840 --> 01:21:10,480
see the srv6 i was

1613
01:21:07,120 --> 01:21:10,480
so yeah hello

1614
01:21:12,840 --> 01:21:15,840
uh

1615
01:21:20,639 --> 01:21:25,440
so the srv6 of tlv has like the subtle

1616
01:21:23,440 --> 01:21:27,199
ways like ncd and other stuff right

1617
01:21:25,440 --> 01:21:28,000
which are not applicable here right so

1618
01:21:27,199 --> 01:21:33,040
we cannot use

1619
01:21:28,000 --> 01:21:38,159
the same tlv of srv64 ipv6

1620
01:21:33,040 --> 01:21:38,159
or maybe the can you add anything

1621
01:21:38,560 --> 01:21:44,080
yeah i i guess in theory one could do

1622
01:21:41,600 --> 01:21:45,360
that and use the locator tlv without the

1623
01:21:44,080 --> 01:21:48,559
seats

1624
01:21:45,360 --> 01:21:51,679
that is not prohibited at the moment so

1625
01:21:48,560 --> 01:21:54,800
one can do it i don't

1626
01:21:51,679 --> 01:21:56,480
well i don't think that would be

1627
01:21:54,800 --> 01:21:58,639
from the encoding perspective that would

1628
01:21:56,480 --> 01:21:58,959
really be something that i would prefer

1629
01:21:58,639 --> 01:22:01,520
but

1630
01:21:58,960 --> 01:22:03,840
you know theoretically you can advertise

1631
01:22:01,520 --> 01:22:05,760
the locator without any sid and treat it

1632
01:22:03,840 --> 01:22:07,440
as ipv6 prefix

1633
01:22:05,760 --> 01:22:09,360
whether we want to do it or not i would

1634
01:22:07,440 --> 01:22:10,320
rather not to i would prefer to have a

1635
01:22:09,360 --> 01:22:13,440
clean

1636
01:22:10,320 --> 01:22:16,080
encoding and not mixing things but in

1637
01:22:13,440 --> 01:22:19,120
theory you can do that

1638
01:22:16,080 --> 01:22:25,440
so locators locators are

1639
01:22:19,120 --> 01:22:25,440
uh are not 128 bit right here it's uh

1640
01:22:26,159 --> 01:22:31,280
okay recent address yeah but that cannot

1641
01:22:29,280 --> 01:22:33,519
be a 128-bit address i guess

1642
01:22:31,280 --> 01:22:33,519
yes

1643
01:22:34,560 --> 01:22:39,920
okay well entirely it has a prefix and a

1644
01:22:37,600 --> 01:22:42,239
mask so it can be

1645
01:22:39,920 --> 01:22:43,600
i'm not i'm not uh suggesting me to do

1646
01:22:42,239 --> 01:22:47,199
that i don't like it but

1647
01:22:43,600 --> 01:22:47,199
you know in theory one can do that

1648
01:22:47,440 --> 01:22:51,519
but by siri do you mean that some

1649
01:22:50,639 --> 01:22:55,520
implementation

1650
01:22:51,520 --> 01:22:57,120
would not support or no no no no i

1651
01:22:55,520 --> 01:22:59,040
basically bruno what you're asking is

1652
01:22:57,120 --> 01:23:01,519
why we are not using the located tlb

1653
01:22:59,040 --> 01:23:04,880
right that's the question

1654
01:23:01,520 --> 01:23:07,760
well as i said one one can do that

1655
01:23:04,880 --> 01:23:11,280
i don't think we want to do it but the

1656
01:23:07,760 --> 01:23:11,280
functionality is there yes

1657
01:23:11,600 --> 01:23:14,080
okay thanks

1658
01:23:15,360 --> 01:23:18,799
peter did you have something else to say

1659
01:23:17,679 --> 01:23:21,570
no

1660
01:23:18,800 --> 01:23:24,620
yeah okay tony you're up

1661
01:23:21,570 --> 01:23:24,620
[Music]

1662
01:23:31,360 --> 01:23:34,400
you will have to unmute yourself the

1663
01:23:33,840 --> 01:23:37,520
little mic

1664
01:23:34,400 --> 01:23:37,519
up in the left side

1665
01:23:41,120 --> 01:23:45,679
there we go hi i noticed you just

1666
01:23:44,719 --> 01:23:48,719
published the

1667
01:23:45,679 --> 01:23:49,679
dash 01 draft with less than 24 hours

1668
01:23:48,719 --> 01:23:51,360
before the meeting

1669
01:23:49,679 --> 01:23:54,560
i was wondering if you could quickly

1670
01:23:51,360 --> 01:23:54,559
summarize the changes

1671
01:23:57,360 --> 01:24:00,639
so in the draft zero on right we have

1672
01:23:59,760 --> 01:24:03,040
merged the

1673
01:24:00,639 --> 01:24:03,760
in earlier draft we have i mean we have

1674
01:24:03,040 --> 01:24:06,560
not

1675
01:24:03,760 --> 01:24:08,320
counted the empty id we we have four

1676
01:24:06,560 --> 01:24:09,600
different top level tlv now we have

1677
01:24:08,320 --> 01:24:13,599
merged to the two

1678
01:24:09,600 --> 01:24:16,080
tlv the top level tlv of the ip

1679
01:24:13,600 --> 01:24:17,040
v4 and ipv6 header which contain the

1680
01:24:16,080 --> 01:24:19,360
empty id of

1681
01:24:17,040 --> 01:24:20,960
12 bits and some reserve bit so with

1682
01:24:19,360 --> 01:24:24,159
that we can use this

1683
01:24:20,960 --> 01:24:27,360
we can reduce the number of top tlv to 2

1684
01:24:24,159 --> 01:24:30,879
and which also cover the mtid multi

1685
01:24:27,360 --> 01:24:33,040
topology instance also

1686
01:24:30,880 --> 01:24:36,800
i think other than that there is just

1687
01:24:33,040 --> 01:24:36,800
editorial changes not much

1688
01:24:38,000 --> 01:24:45,840
okay thanks g europe

1689
01:24:46,080 --> 01:24:53,280
okay yeah i think uh can you hear me

1690
01:24:50,000 --> 01:24:55,600
yep okay uh i think i send

1691
01:24:53,280 --> 01:24:56,559
some comments to the list uh here i want

1692
01:24:55,600 --> 01:24:59,440
to

1693
01:24:56,560 --> 01:25:02,000
restate uh can i think basically you

1694
01:24:59,440 --> 01:25:05,599
defined a new application

1695
01:25:02,000 --> 01:25:08,080
to use flux argo and my question is can

1696
01:25:05,600 --> 01:25:11,440
different applications use the same flux

1697
01:25:08,080 --> 01:25:13,280
argo id and if so can the past

1698
01:25:11,440 --> 01:25:15,919
computation result be shared

1699
01:25:13,280 --> 01:25:16,639
or the past computation should be done

1700
01:25:15,920 --> 01:25:20,080
for each

1701
01:25:16,639 --> 01:25:22,320
uh application even if the id is the

1702
01:25:20,080 --> 01:25:22,320
same

1703
01:25:24,320 --> 01:25:28,239
no i think uh it's not good to use the

1704
01:25:26,719 --> 01:25:30,239
same flux algorithm then

1705
01:25:28,239 --> 01:25:33,440
there is a conflict happen right which

1706
01:25:30,239 --> 01:25:38,839
one to prepare for the forwarding

1707
01:25:33,440 --> 01:25:41,919
so the draft so strictly speaking

1708
01:25:38,840 --> 01:25:44,000
perfect you can

1709
01:25:41,920 --> 01:25:46,080
it's completely bad and need rest of the

1710
01:25:44,000 --> 01:25:48,000
calculation for each application

1711
01:25:46,080 --> 01:25:50,480
nothing to see to use the same flex algo

1712
01:25:48,000 --> 01:25:50,480
it works

1713
01:25:52,800 --> 01:25:58,239
okay but the competition

1714
01:25:56,000 --> 01:26:00,800
uh for the same flashlight with

1715
01:25:58,239 --> 01:26:04,320
different application will be

1716
01:26:00,800 --> 01:26:07,040
different the result yes right and

1717
01:26:04,320 --> 01:26:09,120
if you read the draft the latest version

1718
01:26:07,040 --> 01:26:12,639
me just publish it

1719
01:26:09,120 --> 01:26:12,639
there's a section that describes that

1720
01:26:12,880 --> 01:26:18,639
okay okay okay thanks uh

1721
01:26:16,880 --> 01:26:20,000
we're out of time so we're gonna cut the

1722
01:26:18,639 --> 01:26:23,120
line right here

1723
01:26:20,000 --> 01:26:26,560
your last stop very quick thing

1724
01:26:23,120 --> 01:26:29,120
uh is uh ketan talalik or cisco uh

1725
01:26:26,560 --> 01:26:31,360
i i actually support the flash uh you

1726
01:26:29,120 --> 01:26:33,199
know new tlvs and encoding not to mix

1727
01:26:31,360 --> 01:26:36,159
with the existing

1728
01:26:33,199 --> 01:26:38,480
reachability and even the srv6 locator i

1729
01:26:36,159 --> 01:26:42,000
think this is also because uh

1730
01:26:38,480 --> 01:26:43,759
for srv6 the participation is advertised

1731
01:26:42,000 --> 01:26:46,719
by the sr algorithm

1732
01:26:43,760 --> 01:26:47,840
whereas here we have the you know uh ip

1733
01:26:46,719 --> 01:26:50,480
algorithm

1734
01:26:47,840 --> 01:26:53,600
so i think it's better to keep them

1735
01:26:50,480 --> 01:26:53,599
separate just cleaner

1736
01:27:02,840 --> 01:27:06,000
thanks

1737
01:27:04,080 --> 01:27:07,679
ac did you have any comments on the

1738
01:27:06,000 --> 01:27:10,639
adoption uh

1739
01:27:07,679 --> 01:27:11,600
request there do you think that's ready

1740
01:27:10,639 --> 01:27:13,920
for that or

1741
01:27:11,600 --> 01:27:15,199
i i you know you know this this

1742
01:27:13,920 --> 01:27:17,600
generated

1743
01:27:15,199 --> 01:27:21,040
with applications and using in parallel

1744
01:27:17,600 --> 01:27:24,400
with srv it generated a lot of

1745
01:27:21,040 --> 01:27:27,760
interest already you know probably over

1746
01:27:24,400 --> 01:27:30,879
100 emails um

1747
01:27:27,760 --> 01:27:34,239
i think it would be ready for adoption

1748
01:27:30,880 --> 01:27:37,520
just based on the interest that was my

1749
01:27:34,239 --> 01:27:39,280
opinion okay unfortunately we don't have

1750
01:27:37,520 --> 01:27:41,440
time to do the show of hands so

1751
01:27:39,280 --> 01:27:43,519
um it sounds like we we may be moving

1752
01:27:41,440 --> 01:27:45,599
forward with that then

1753
01:27:43,520 --> 01:27:47,360
yeah and i i was just gonna say i i

1754
01:27:45,600 --> 01:27:49,679
looked again just when

1755
01:27:47,360 --> 01:27:51,120
uh as we were speaking and i agree that

1756
01:27:49,679 --> 01:27:54,159
separate tlvs or

1757
01:27:51,120 --> 01:27:56,719
our top-level tlvs are the way to go for

1758
01:27:54,159 --> 01:27:56,719
ospf

1759
01:27:58,880 --> 01:28:03,760
okay thanks prague thanks thank you

1760
01:28:01,760 --> 01:28:07,360
thank you so much

1761
01:28:03,760 --> 01:28:15,840
who's up next up

1762
01:28:07,360 --> 01:28:15,839
yeah yeah

1763
01:28:24,080 --> 01:28:31,360
hi i see we can hear you

1764
01:28:28,080 --> 01:28:33,600
oh thank you uh hello everyone my name

1765
01:28:31,360 --> 01:28:36,639
is jali wang from huawei

1766
01:28:33,600 --> 01:28:39,920
and nice to hear you guys all and

1767
01:28:36,639 --> 01:28:43,360
i will present less new draft about

1768
01:28:39,920 --> 01:28:46,400
the idp extensions for

1769
01:28:43,360 --> 01:28:48,719
advertising the hobart hub options

1770
01:28:46,400 --> 01:28:56,559
header processing action

1771
01:28:48,719 --> 01:29:00,159
and next please

1772
01:28:56,560 --> 01:29:03,280
okay so uh as specified

1773
01:29:00,159 --> 01:29:06,719
in rsd820

1774
01:29:03,280 --> 01:29:07,840
the uh hubble hub option headers is only

1775
01:29:06,719 --> 01:29:11,040
examined

1776
01:29:07,840 --> 01:29:14,800
and processed process processed by

1777
01:29:11,040 --> 01:29:18,719
nodes along a package delivery path

1778
01:29:14,800 --> 01:29:22,000
uh if they are exp explexity

1779
01:29:18,719 --> 01:29:25,280
uh configured to process so

1780
01:29:22,000 --> 01:29:28,639
in less draft we considering to

1781
01:29:25,280 --> 01:29:31,840
signaling the nodes capability uh

1782
01:29:28,639 --> 01:29:32,800
to process the uh hubble hub option

1783
01:29:31,840 --> 01:29:36,840
header

1784
01:29:32,800 --> 01:29:39,760
so um based on the rfc

1785
01:29:36,840 --> 01:29:43,520
specified we notice that

1786
01:29:39,760 --> 01:29:46,560
the nodes may be configured into several

1787
01:29:43,520 --> 01:29:49,280
options the first one maybe it's

1788
01:29:46,560 --> 01:29:49,920
configured to ignore the hubble hub

1789
01:29:49,280 --> 01:29:54,080
options

1790
01:29:49,920 --> 01:29:57,760
header and second one is job it and

1791
01:29:54,080 --> 01:30:00,960
another option is assign the packet

1792
01:29:57,760 --> 01:30:04,800
to the slow processing path

1793
01:30:00,960 --> 01:30:07,199
so here we see that the problem is

1794
01:30:04,800 --> 01:30:08,960
different devices can be configured to

1795
01:30:07,199 --> 01:30:12,080
process the

1796
01:30:08,960 --> 01:30:15,679
options header in different ways

1797
01:30:12,080 --> 01:30:18,880
and we found that there's a a lot of

1798
01:30:15,679 --> 01:30:20,080
service to use this hubble hub options

1799
01:30:18,880 --> 01:30:23,600
header

1800
01:30:20,080 --> 01:30:26,480
such as the iom and

1801
01:30:23,600 --> 01:30:27,760
another one is the alternate marking

1802
01:30:26,480 --> 01:30:31,199
measurement

1803
01:30:27,760 --> 01:30:35,360
so so we think that if

1804
01:30:31,199 --> 01:30:38,559
node are not configured to process this

1805
01:30:35,360 --> 01:30:41,679
option header they may ignore them

1806
01:30:38,560 --> 01:30:44,719
or drop this service package so

1807
01:30:41,679 --> 01:30:44,719
it will result

1808
01:30:44,800 --> 01:30:51,360
it will not account for all

1809
01:30:48,159 --> 01:30:51,839
links to performance measurements and

1810
01:30:51,360 --> 01:30:55,199
will

1811
01:30:51,840 --> 01:30:59,360
result in the packet loss

1812
01:30:55,199 --> 01:31:02,960
so this document and define them

1813
01:30:59,360 --> 01:31:06,080
defines a way to signal the configured

1814
01:31:02,960 --> 01:31:10,960
processing action of this hub hub

1815
01:31:06,080 --> 01:31:14,840
options header and using the isis

1816
01:31:10,960 --> 01:31:19,280
and ospf so by

1817
01:31:14,840 --> 01:31:23,040
advertising uh less information

1818
01:31:19,280 --> 01:31:24,400
this can be helpful for uh entities to

1819
01:31:23,040 --> 01:31:28,560
gather

1820
01:31:24,400 --> 01:31:33,199
less information and

1821
01:31:28,560 --> 01:31:35,440
based on this topology and to come

1822
01:31:33,199 --> 01:31:36,480
calculate the process for specific

1823
01:31:35,440 --> 01:31:38,799
services

1824
01:31:36,480 --> 01:31:40,559
uh requires the hobart hub options

1825
01:31:38,800 --> 01:31:45,120
header

1826
01:31:40,560 --> 01:31:48,239
next page please

1827
01:31:45,120 --> 01:31:50,639
so uh in let's dropped we first

1828
01:31:48,239 --> 01:31:52,799
first defined the hobo options header

1829
01:31:50,639 --> 01:31:56,960
processing action

1830
01:31:52,800 --> 01:31:56,960
as we see english

1831
01:31:57,040 --> 01:32:01,760
the first figure we defined the hobart

1832
01:32:00,000 --> 01:32:05,199
hope processing action

1833
01:32:01,760 --> 01:32:08,080
uh information forms of uh three

1834
01:32:05,199 --> 01:32:10,000
uh field the first one is the eight bit

1835
01:32:08,080 --> 01:32:14,080
action flag field

1836
01:32:10,000 --> 01:32:17,440
and the second one is the 8-bit maximum

1837
01:32:14,080 --> 01:32:20,800
extension header lens field

1838
01:32:17,440 --> 01:32:24,839
and the last field is the 16-bit

1839
01:32:20,800 --> 01:32:27,840
service flag so the action flag

1840
01:32:24,840 --> 01:32:31,040
we use the higher highest

1841
01:32:27,840 --> 01:32:34,560
order 3b to indicate the

1842
01:32:31,040 --> 01:32:38,320
uh supported processing action

1843
01:32:34,560 --> 01:32:42,400
and the the max extension

1844
01:32:38,320 --> 01:32:45,040
lens field we indicate the

1845
01:32:42,400 --> 01:32:46,799
the length the maximum length of the

1846
01:32:45,040 --> 01:32:48,800
extension header

1847
01:32:46,800 --> 01:32:50,000
can be examined and processed and the

1848
01:32:48,800 --> 01:32:53,040
node or link

1849
01:32:50,000 --> 01:32:56,719
grand granularity and

1850
01:32:53,040 --> 01:33:00,000
the last field is service flat uh

1851
01:32:56,719 --> 01:33:03,360
it's to indicate the

1852
01:33:00,000 --> 01:33:07,040
supported services uh requires the

1853
01:33:03,360 --> 01:33:10,880
hub hub options header uh here we

1854
01:33:07,040 --> 01:33:14,880
we we defined two uh bits

1855
01:33:10,880 --> 01:33:18,159
the one the the first one is to the

1856
01:33:14,880 --> 01:33:21,280
ion tris option and another

1857
01:33:18,159 --> 01:33:24,320
bit is the the alternate marking

1858
01:33:21,280 --> 01:33:27,519
method and on other

1859
01:33:24,320 --> 01:33:32,559
beats we will reserved for future

1860
01:33:27,520 --> 01:33:32,560
use next please

1861
01:33:33,679 --> 01:33:40,719
so uh based on the definition of the

1862
01:33:37,280 --> 01:33:44,400
first processing action information and

1863
01:33:40,719 --> 01:33:47,440
here we propose the extensions to the

1864
01:33:44,400 --> 01:33:50,400
isis protocol and

1865
01:33:47,440 --> 01:33:52,080
we defined the node processing action

1866
01:33:50,400 --> 01:33:55,440
subtrees

1867
01:33:52,080 --> 01:33:58,639
sorry extend it to access router

1868
01:33:55,440 --> 01:34:02,080
and capability to and

1869
01:33:58,639 --> 01:34:05,440
another extension is the

1870
01:34:02,080 --> 01:34:09,199
link processing action action

1871
01:34:05,440 --> 01:34:12,239
sub theory and to indicate

1872
01:34:09,199 --> 01:34:15,759
the actions of the interface or social

1873
01:34:12,239 --> 01:34:15,759
associated with the link

1874
01:34:17,440 --> 01:34:23,678
so uh in yeah in this

1875
01:34:21,120 --> 01:34:26,080
document uh we define because we define

1876
01:34:23,679 --> 01:34:30,159
the node and link processing action

1877
01:34:26,080 --> 01:34:30,159
uh theories and

1878
01:34:30,400 --> 01:34:36,559
we we need to mention that if we all the

1879
01:34:33,920 --> 01:34:38,960
uh interfaces or social was associated

1880
01:34:36,560 --> 01:34:39,920
with links supported the same processing

1881
01:34:38,960 --> 01:34:42,639
action

1882
01:34:39,920 --> 01:34:46,239
so we we need uh we need just to

1883
01:34:42,639 --> 01:34:49,600
advertise the node

1884
01:34:46,239 --> 01:34:51,519
capability tlvs yeah and the list page

1885
01:34:49,600 --> 01:34:54,239
we shoot the

1886
01:34:51,520 --> 01:34:56,239
signaling processing action using the

1887
01:34:54,239 --> 01:34:59,919
ospf

1888
01:34:56,239 --> 01:35:00,799
similarly we extend the nodes processing

1889
01:34:59,920 --> 01:35:03,199
action theory

1890
01:35:00,800 --> 01:35:04,080
and the link processing action sub tube

1891
01:35:03,199 --> 01:35:07,280
is

1892
01:35:04,080 --> 01:35:10,400
extended to the the the os

1893
01:35:07,280 --> 01:35:14,400
ospf router information pack

1894
01:35:10,400 --> 01:35:17,519
osa and for the ospf

1895
01:35:14,400 --> 01:35:22,559
version two uh uh we defined the

1896
01:35:17,520 --> 01:35:25,840
link processing action sub tvs of the

1897
01:35:22,560 --> 01:35:29,040
extended link tov and for the

1898
01:35:25,840 --> 01:35:34,639
ospf version 3 we

1899
01:35:29,040 --> 01:35:34,639
extend it to the e-router ls tv

1900
01:35:34,719 --> 01:35:42,159
next please please yes this is

1901
01:35:38,239 --> 01:35:47,119
all the content in this dropped

1902
01:35:42,159 --> 01:35:47,119
and the comments are very calm thank you

1903
01:35:49,679 --> 01:35:55,119
chris go hey yo uh hi ali so

1904
01:35:53,199 --> 01:35:57,040
this is this reminds me a lot this

1905
01:35:55,119 --> 01:35:58,400
reminds me a lot of the ifit one which i

1906
01:35:57,040 --> 01:36:01,519
also sort of had

1907
01:35:58,400 --> 01:36:04,719
issues with um i noticed the latest ifit

1908
01:36:01,520 --> 01:36:06,719
uh draft uh now mentions

1909
01:36:04,719 --> 01:36:07,920
uh using the information for path

1910
01:36:06,719 --> 01:36:11,040
computation

1911
01:36:07,920 --> 01:36:12,560
one of the complaints uh before was

1912
01:36:11,040 --> 01:36:14,480
that this was sort of you know

1913
01:36:12,560 --> 01:36:15,920
capability stuff that didn't that had to

1914
01:36:14,480 --> 01:36:19,119
do with oam

1915
01:36:15,920 --> 01:36:20,800
and not routing right and so it wasn't

1916
01:36:19,119 --> 01:36:22,320
appropriate to put it into the routing

1917
01:36:20,800 --> 01:36:25,440
protocol

1918
01:36:22,320 --> 01:36:27,519
so you know i guess my first question

1919
01:36:25,440 --> 01:36:29,519
with a follow-up based on your answer is

1920
01:36:27,520 --> 01:36:32,639
are you going to use this

1921
01:36:29,520 --> 01:36:38,639
uh to determine routes

1922
01:36:32,639 --> 01:36:42,320
through a network

1923
01:36:38,639 --> 01:36:44,880
uh thanks for your questions and

1924
01:36:42,320 --> 01:36:45,519
and thanks for your comments for the i

1925
01:36:44,880 --> 01:36:48,639
think

1926
01:36:45,520 --> 01:36:52,400
i dropped uh in the last meeting and

1927
01:36:48,639 --> 01:36:55,440
for this draft we we want to mention the

1928
01:36:52,400 --> 01:36:57,519
motivation is to advertise the the whole

1929
01:36:55,440 --> 01:37:01,678
by hope processing action not

1930
01:36:57,520 --> 01:37:06,480
the iphat capability so this is

1931
01:37:01,679 --> 01:37:09,280
not the same uh the problem we think

1932
01:37:06,480 --> 01:37:09,759
and because we're considering the the

1933
01:37:09,280 --> 01:37:13,119
nose

1934
01:37:09,760 --> 01:37:15,840
or the interface uh supported the

1935
01:37:13,119 --> 01:37:16,159
processing action for the callback hub

1936
01:37:15,840 --> 01:37:20,560
uh

1937
01:37:16,159 --> 01:37:24,080
header it's uh may uh affect

1938
01:37:20,560 --> 01:37:27,199
the the past and computation

1939
01:37:24,080 --> 01:37:30,159
uh for example if we we

1940
01:37:27,199 --> 01:37:32,000
uh if we have the service using or

1941
01:37:30,159 --> 01:37:35,519
require the hardware hub

1942
01:37:32,000 --> 01:37:36,560
header options we need to determine

1943
01:37:35,520 --> 01:37:39,760
where

1944
01:37:36,560 --> 01:37:42,800
we need to know which nodes or

1945
01:37:39,760 --> 01:37:45,840
links supported to process

1946
01:37:42,800 --> 01:37:49,679
this extension header so

1947
01:37:45,840 --> 01:37:53,360
this is not the same i mean right

1948
01:37:49,679 --> 01:37:55,440
now with the i f8 capability

1949
01:37:53,360 --> 01:37:57,119
yeah no i understand it isn't but i i'm

1950
01:37:55,440 --> 01:37:58,879
just thinking i'm putting to throw

1951
01:37:57,119 --> 01:38:00,559
like an operator hat on and i'm looking

1952
01:37:58,880 --> 01:38:02,800
at this and i'm wondering like

1953
01:38:00,560 --> 01:38:03,679
you know i buy a bunch of routers and

1954
01:38:02,800 --> 01:38:06,639
you know and

1955
01:38:03,679 --> 01:38:08,000
i want to do oam on them and do i really

1956
01:38:06,639 --> 01:38:10,080
want

1957
01:38:08,000 --> 01:38:12,159
my traffic being determined by whether

1958
01:38:10,080 --> 01:38:12,880
i've upgraded my line cards or do i want

1959
01:38:12,159 --> 01:38:17,360
to just upload

1960
01:38:12,880 --> 01:38:20,159
my line cards and uh and then use my oem

1961
01:38:17,360 --> 01:38:21,440
uh software right i just i you know i'm

1962
01:38:20,159 --> 01:38:24,000
not sure

1963
01:38:21,440 --> 01:38:26,000
i believe the use case that you know

1964
01:38:24,000 --> 01:38:28,159
that i really want my network uh

1965
01:38:26,000 --> 01:38:30,719
paths being determined by whether i've

1966
01:38:28,159 --> 01:38:33,040
got an updated line card or not i

1967
01:38:30,719 --> 01:38:34,320
i mean i'm not saying that it's not that

1968
01:38:33,040 --> 01:38:37,679
it wouldn't happen it's just

1969
01:38:34,320 --> 01:38:41,040
it's it feels a little funky that's all

1970
01:38:37,679 --> 01:38:45,360
um thanks thank you

1971
01:38:41,040 --> 01:38:45,360
okay okay loa are you in queue loa

1972
01:38:49,600 --> 01:38:52,159
number four

1973
01:38:53,840 --> 01:38:57,280
okay i guess i'm in i guess i'm in queue

1974
01:38:56,719 --> 01:38:59,760
next

1975
01:38:57,280 --> 01:39:01,040
so these are all these oem techniques i

1976
01:38:59,760 --> 01:39:05,360
didn't look them up but they're

1977
01:39:01,040 --> 01:39:05,360
inbox they're in band techniques right

1978
01:39:06,000 --> 01:39:11,119
in statue yeah in in yeah in situ yeah

1979
01:39:09,600 --> 01:39:13,920
in band okay

1980
01:39:11,119 --> 01:39:15,679
yeah and and so the basic proposition

1981
01:39:13,920 --> 01:39:18,880
that chris was getting at

1982
01:39:15,679 --> 01:39:21,440
is that these

1983
01:39:18,880 --> 01:39:22,320
you're going to compute only those paths

1984
01:39:21,440 --> 01:39:25,440
that support

1985
01:39:22,320 --> 01:39:27,440
these oem techniques because you need

1986
01:39:25,440 --> 01:39:30,638
the uh

1987
01:39:27,440 --> 01:39:33,040
performance that data to

1988
01:39:30,639 --> 01:39:33,840
measure your slas or something of that

1989
01:39:33,040 --> 01:39:41,840
nature

1990
01:39:33,840 --> 01:39:41,840
i guess

1991
01:39:44,719 --> 01:39:52,400
okay you go ahead ron uh yes that is the

1992
01:39:48,320 --> 01:39:55,280
one case uh we mentioned in the draft

1993
01:39:52,400 --> 01:39:56,719
but i think there's a lot of use case

1994
01:39:55,280 --> 01:39:59,840
use the

1995
01:39:56,719 --> 01:40:02,960
hobart hub options header

1996
01:39:59,840 --> 01:40:04,719
okay yeah

1997
01:40:02,960 --> 01:40:08,719
yeah but the only ones you have bits for

1998
01:40:04,719 --> 01:40:10,159
the uh are the oem techniques so those

1999
01:40:08,719 --> 01:40:13,440
are those will be the ones you're

2000
01:40:10,159 --> 01:40:13,440
you're advertising today

2001
01:40:16,239 --> 01:40:19,280
i think we need to cut the line uh right

2002
01:40:18,960 --> 01:40:22,639
right

2003
01:40:19,280 --> 01:40:25,599
right ron go ahead yeah go ahead

2004
01:40:22,639 --> 01:40:27,440
if the only application for this is past

2005
01:40:25,600 --> 01:40:29,520
computation

2006
01:40:27,440 --> 01:40:32,239
couldn't you achieve the same thing with

2007
01:40:29,520 --> 01:40:32,239
link colors

2008
01:40:34,239 --> 01:40:37,759
yeah ron actually i want to answer that

2009
01:40:35,920 --> 01:40:40,000
that's what i thought uh

2010
01:40:37,760 --> 01:40:42,159
i i thought you know like okay so i i've

2011
01:40:40,000 --> 01:40:44,480
got line cards i just mark my

2012
01:40:42,159 --> 01:40:50,799
interfaces that support this right and

2013
01:40:44,480 --> 01:40:53,919
and i'm done

2014
01:40:50,800 --> 01:40:53,920
that's where i was going with it

2015
01:40:59,600 --> 01:41:05,840
gee you're up last yeah

2016
01:41:07,119 --> 01:41:11,440
this is jadon and to my understanding

2017
01:41:10,560 --> 01:41:14,480
this

2018
01:41:11,440 --> 01:41:17,199
documentary aims to advertise some

2019
01:41:14,480 --> 01:41:18,080
generic attribute of the packet

2020
01:41:17,199 --> 01:41:20,719
processing

2021
01:41:18,080 --> 01:41:21,519
capability regarding the hub option

2022
01:41:20,719 --> 01:41:24,560
headers

2023
01:41:21,520 --> 01:41:28,400
i think there are also other use cases

2024
01:41:24,560 --> 01:41:32,880
in addition to the iom or if it

2025
01:41:28,400 --> 01:41:35,440
functionality such as some traffic which

2026
01:41:32,880 --> 01:41:36,000
may need to carry the hover hop option

2027
01:41:35,440 --> 01:41:39,280
header

2028
01:41:36,000 --> 01:41:42,320
to for some processing behaviors

2029
01:41:39,280 --> 01:41:45,759
required uh on each hop along the path

2030
01:41:42,320 --> 01:41:48,000
so well we have another draft in the six

2031
01:41:45,760 --> 01:41:50,880
man actually related to this uh

2032
01:41:48,000 --> 01:41:51,199
hub option header extension so i think

2033
01:41:50,880 --> 01:41:54,400
this

2034
01:41:51,199 --> 01:41:57,040
can be a generic mechanism

2035
01:41:54,400 --> 01:41:57,679
and maybe some application would require

2036
01:41:57,040 --> 01:42:00,159
to

2037
01:41:57,679 --> 01:42:01,920
select the route based on this

2038
01:42:00,159 --> 01:42:04,879
capability

2039
01:42:01,920 --> 01:42:06,000
yeah maybe we can see how that goes as

2040
01:42:04,880 --> 01:42:07,920
that moves forward

2041
01:42:06,000 --> 01:42:09,520
to see if there are you know that that

2042
01:42:07,920 --> 01:42:10,719
moves forward some other options

2043
01:42:09,520 --> 01:42:12,320
we've got to move to the next

2044
01:42:10,719 --> 01:42:13,360
presentation now we're going to run out

2045
01:42:12,320 --> 01:42:16,719
of time

2046
01:42:13,360 --> 01:42:20,000
thank you i think i think uh

2047
01:42:16,719 --> 01:42:24,560
uh jin's gonna present for uh

2048
01:42:20,000 --> 01:42:24,560
for the offers he's in the queue

2049
01:42:25,199 --> 01:42:33,599
let's see how that works yeah

2050
01:42:28,639 --> 01:42:37,199
or i see i love itunes in the queue too

2051
01:42:33,600 --> 01:42:40,560
hello i see are you presenting

2052
01:42:37,199 --> 01:42:42,000
yeah i i let let me try to

2053
01:42:40,560 --> 01:42:43,679
make repetition for the passive

2054
01:42:42,000 --> 01:42:46,960
interface attribute

2055
01:42:43,679 --> 01:42:50,080
okay thank you all oh

2056
01:42:46,960 --> 01:42:52,560
thank you so uh

2057
01:42:50,080 --> 01:42:53,199
this is the third time to make the

2058
01:42:52,560 --> 01:42:57,840
prediction

2059
01:42:53,199 --> 01:42:57,839
so next slide

2060
01:42:59,520 --> 01:43:03,040
uh yeah we uh so we want to hear uh

2061
01:43:02,080 --> 01:43:05,760
information

2062
01:43:03,040 --> 01:43:07,840
uh what what do we want what's the

2063
01:43:05,760 --> 01:43:09,600
proper one to show

2064
01:43:07,840 --> 01:43:11,119
you know passive interface are used

2065
01:43:09,600 --> 01:43:13,520
commonly in the network

2066
01:43:11,119 --> 01:43:15,040
uh here we just list three three

2067
01:43:13,520 --> 01:43:17,679
scenarios the first is

2068
01:43:15,040 --> 01:43:19,040
in the data center so they are used for

2069
01:43:17,679 --> 01:43:20,880
the villa interface

2070
01:43:19,040 --> 01:43:22,560
let's say in the layer two broadcast

2071
01:43:20,880 --> 01:43:25,040
domain and the second

2072
01:43:22,560 --> 01:43:25,840
scenario for the interest boundary they

2073
01:43:25,040 --> 01:43:28,639
are used to

2074
01:43:25,840 --> 01:43:30,560
protect each domain from igp flapping

2075
01:43:28,639 --> 01:43:34,080
and called by our command

2076
01:43:30,560 --> 01:43:34,480
and the last scenario is described in

2077
01:43:34,080 --> 01:43:37,360
our

2078
01:43:34,480 --> 01:43:37,360
in one drop that

2079
01:43:37,600 --> 01:43:42,400
provided by linda for the edge computing

2080
01:43:40,400 --> 01:43:45,599
scenario i think it is the same

2081
01:43:42,400 --> 01:43:49,599
as scenario as the ac has just

2082
01:43:45,600 --> 01:43:52,639
created but currently

2083
01:43:49,600 --> 01:43:54,080
there is no suitable place to advertise

2084
01:43:52,639 --> 01:43:56,400
the pencil interface

2085
01:43:54,080 --> 01:43:57,760
and their associated attribute so we

2086
01:43:56,400 --> 01:44:00,480
want to

2087
01:43:57,760 --> 01:44:01,520
find some place to put this information

2088
01:44:00,480 --> 01:44:07,839
in

2089
01:44:01,520 --> 01:44:07,840
in the protocol okay next please

2090
01:44:08,159 --> 01:44:14,159
uh they also investigate the existing

2091
01:44:11,679 --> 01:44:17,520
possible solutions

2092
01:44:14,159 --> 01:44:19,839
for iss they are held defined by link

2093
01:44:17,520 --> 01:44:21,920
attribute subtle

2094
01:44:19,840 --> 01:44:24,400
this sub theory can only be carried

2095
01:44:21,920 --> 01:44:26,800
within the tlp22

2096
01:44:24,400 --> 01:44:27,679
this glv is used to describe the

2097
01:44:26,800 --> 01:44:29,600
attached

2098
01:44:27,679 --> 01:44:31,360
loader but for passive interface there

2099
01:44:29,600 --> 01:44:34,560
is no no

2100
01:44:31,360 --> 01:44:36,960
idp router so it is not suitable for

2101
01:44:34,560 --> 01:44:38,000
for for the information to contain that

2102
01:44:36,960 --> 01:44:41,360
in in this

2103
01:44:38,000 --> 01:44:46,639
subjective way uh ospf v2

2104
01:44:41,360 --> 01:44:49,040
also have one link type in the ultra lsa

2105
01:44:46,639 --> 01:44:50,880
the type 3 can be used to flag the

2106
01:44:49,040 --> 01:44:51,280
passive interface but there is no other

2107
01:44:50,880 --> 01:44:54,800
place

2108
01:44:51,280 --> 01:44:58,960
to put the interface attribute

2109
01:44:54,800 --> 01:44:59,760
and ospf v3 has removed the type 3 link

2110
01:44:58,960 --> 01:45:03,600
type

2111
01:44:59,760 --> 01:45:06,239
so as we said it is necessary to

2112
01:45:03,600 --> 01:45:06,800
extend the opioids mutual history and

2113
01:45:06,239 --> 01:45:08,879
iss

2114
01:45:06,800 --> 01:45:10,800
to transfer the passive interface and

2115
01:45:08,880 --> 01:45:16,080
their related attitudes

2116
01:45:10,800 --> 01:45:19,119
okay next please

2117
01:45:16,080 --> 01:45:20,639
so here is the eq actually two excessive

2118
01:45:19,119 --> 01:45:24,480
propeller

2119
01:45:20,639 --> 01:45:27,600
currently rc 7684 defined

2120
01:45:24,480 --> 01:45:30,559
or fpv2 extend the link opec

2121
01:45:27,600 --> 01:45:32,400
lsa to contain the additional link

2122
01:45:30,560 --> 01:45:35,520
recipe of the tlv

2123
01:45:32,400 --> 01:45:36,480
and only the extended link theory is

2124
01:45:35,520 --> 01:45:40,480
defined

2125
01:45:36,480 --> 01:45:43,599
uh so we propose defined

2126
01:45:40,480 --> 01:45:46,799
extend stabling theory to contain

2127
01:45:43,600 --> 01:45:48,960
the subtleties related to the peso

2128
01:45:46,800 --> 01:45:52,080
interface attribute

2129
01:45:48,960 --> 01:45:55,360
this is the format of the theory

2130
01:45:52,080 --> 01:45:58,719
and the existing subtle

2131
01:45:55,360 --> 01:46:01,040
as defined in the itf

2132
01:45:58,719 --> 01:46:01,760
logistic can also be included if

2133
01:46:01,040 --> 01:46:05,600
necessary

2134
01:46:01,760 --> 01:46:10,080
we um we have defined one new sub tlp

2135
01:46:05,600 --> 01:46:13,840
in the in i will describe later

2136
01:46:10,080 --> 01:46:13,840
our next slide

2137
01:46:14,960 --> 01:46:23,679
so this is for ipv3

2138
01:46:18,800 --> 01:46:23,679
for ipv3 and it finds

2139
01:46:24,480 --> 01:46:29,599
it easy to defined the uh lsa in tlv

2140
01:46:27,520 --> 01:46:33,040
tube so it is easy to

2141
01:46:29,600 --> 01:46:34,080
expand uh we similarly we propose to

2142
01:46:33,040 --> 01:46:37,199
define the

2143
01:46:34,080 --> 01:46:39,440
root router stub link till we can uh

2144
01:46:37,199 --> 01:46:41,839
to describe a single literal passive

2145
01:46:39,440 --> 01:46:41,839
interface

2146
01:46:42,639 --> 01:46:48,400
as as the rooter link theory

2147
01:46:45,840 --> 01:46:50,639
this theory should only be contained

2148
01:46:48,400 --> 01:46:54,480
within the

2149
01:46:50,639 --> 01:46:58,080
extension router lsa it can also

2150
01:46:54,480 --> 01:47:02,559
reuse the existing subtle defined

2151
01:46:58,080 --> 01:47:05,199
within the deleted ospf for registry

2152
01:47:02,560 --> 01:47:05,199
next slide

2153
01:47:07,040 --> 01:47:10,400
yeah this is for the isis extension

2154
01:47:09,360 --> 01:47:14,400
proto uh

2155
01:47:10,400 --> 01:47:17,920
proposal for isis as we have discussed

2156
01:47:14,400 --> 01:47:19,920
on the main main list we can only define

2157
01:47:17,920 --> 01:47:22,239
one new top theory

2158
01:47:19,920 --> 01:47:23,199
to contain them to contain such

2159
01:47:22,239 --> 01:47:26,718
information

2160
01:47:23,199 --> 01:47:27,599
so they define the uh theory at this

2161
01:47:26,719 --> 01:47:31,600
format

2162
01:47:27,600 --> 01:47:32,880
and the uh related releasing subject can

2163
01:47:31,600 --> 01:47:36,480
also be included

2164
01:47:32,880 --> 01:47:38,800
is necessary so next please next slide

2165
01:47:36,480 --> 01:47:38,799
please

2166
01:47:39,199 --> 01:47:44,080
so uh in this document we defined one

2167
01:47:41,920 --> 01:47:47,280
newly

2168
01:47:44,080 --> 01:47:50,239
a new subtlety to contain the

2169
01:47:47,280 --> 01:47:52,000
ipo address information that associated

2170
01:47:50,239 --> 01:47:52,638
with the pacific interface for example

2171
01:47:52,000 --> 01:47:55,760
the

2172
01:47:52,639 --> 01:47:57,040
the the server's interface address there

2173
01:47:55,760 --> 01:47:59,520
may be

2174
01:47:57,040 --> 01:48:00,400
several addresses to associate to

2175
01:47:59,520 --> 01:48:04,080
connect

2176
01:48:00,400 --> 01:48:07,440
with the passive interface so we use the

2177
01:48:04,080 --> 01:48:09,280
existing sub objects to include this

2178
01:48:07,440 --> 01:48:13,440
information

2179
01:48:09,280 --> 01:48:16,239
and we also because

2180
01:48:13,440 --> 01:48:16,879
this sub theology and the future news of

2181
01:48:16,239 --> 01:48:20,480
the love

2182
01:48:16,880 --> 01:48:23,679
is associated with the sub link

2183
01:48:20,480 --> 01:48:26,799
can be both applied to the

2184
01:48:23,679 --> 01:48:29,280
ospf and iso may proper to define one

2185
01:48:26,800 --> 01:48:31,760
independent legitimate code point

2186
01:48:29,280 --> 01:48:33,199
which can be delivered by both igp

2187
01:48:31,760 --> 01:48:34,750
protocol

2188
01:48:33,199 --> 01:48:37,519
so next next slide

2189
01:48:34,750 --> 01:48:41,840
[Music]

2190
01:48:37,520 --> 01:48:44,840
yeah this is a for the practitioner so

2191
01:48:41,840 --> 01:48:46,239
and we also discuss on the main list so

2192
01:48:44,840 --> 01:48:49,520
uh

2193
01:48:46,239 --> 01:48:52,480
here just want to hear

2194
01:48:49,520 --> 01:48:53,760
easier and i recommend for this job and

2195
01:48:52,480 --> 01:49:01,839
can it be adopted

2196
01:48:53,760 --> 01:49:01,840
w working group document thank you

2197
01:49:05,760 --> 01:49:09,600
okay oh well i'm in the queue i wanted

2198
01:49:07,600 --> 01:49:12,560
to back up just one second the previous

2199
01:49:09,600 --> 01:49:14,239
uh my previous comments on the other uh

2200
01:49:12,560 --> 01:49:15,520
presentation yali

2201
01:49:14,239 --> 01:49:17,519
those were made as a working group

2202
01:49:15,520 --> 01:49:18,480
member i i'm supposed to say that each

2203
01:49:17,520 --> 01:49:21,119
time and i i

2204
01:49:18,480 --> 01:49:22,879
sometimes forget so it was just my work

2205
01:49:21,119 --> 01:49:24,400
remember as well as these comments are

2206
01:49:22,880 --> 01:49:27,040
as a working group member

2207
01:49:24,400 --> 01:49:28,719
um you know i i'm curious about some of

2208
01:49:27,040 --> 01:49:30,800
the use cases it seemed like

2209
01:49:28,719 --> 01:49:32,639
on the mailing list that there was like

2210
01:49:30,800 --> 01:49:34,960
one use case where it was inter

2211
01:49:32,639 --> 01:49:36,480
inter as and that you know there was

2212
01:49:34,960 --> 01:49:38,000
some discussion that that was already

2213
01:49:36,480 --> 01:49:40,239
covered by tlb

2214
01:49:38,000 --> 01:49:41,360
and then there's a reference to like

2215
01:49:40,239 --> 01:49:43,839
linda dunbar's

2216
01:49:41,360 --> 01:49:44,559
uh draft which i went and read which was

2217
01:49:43,840 --> 01:49:47,040
about

2218
01:49:44,560 --> 01:49:47,840
sort of like using passive interfaces to

2219
01:49:47,040 --> 01:49:51,280
describe

2220
01:49:47,840 --> 01:49:54,320
load balance load loading on servers

2221
01:49:51,280 --> 01:49:56,320
with anycast addresses and in that case

2222
01:49:54,320 --> 01:49:58,799
it's it's like you know why wouldn't you

2223
01:49:56,320 --> 01:49:59,119
just advertise the anycast as a prefix

2224
01:49:58,800 --> 01:50:01,040
and

2225
01:49:59,119 --> 01:50:03,360
attach that you know the attributes to

2226
01:50:01,040 --> 01:50:07,040
that prefix why would you call a server

2227
01:50:03,360 --> 01:50:08,239
a link so anyway it just seemed to me

2228
01:50:07,040 --> 01:50:11,599
like there's

2229
01:50:08,239 --> 01:50:12,879
it's it seems weird to be using a link

2230
01:50:11,599 --> 01:50:14,639
in these cases when

2231
01:50:12,880 --> 01:50:16,239
you know if it's enter a s there's

2232
01:50:14,639 --> 01:50:18,080
already something for that and if it's

2233
01:50:16,239 --> 01:50:25,839
servers then why not use the

2234
01:50:18,080 --> 01:50:25,840
prefix thanks

2235
01:50:26,320 --> 01:50:30,320
so i think the uh the information

2236
01:50:29,280 --> 01:50:33,679
provided by the

2237
01:50:30,320 --> 01:50:36,719
traffic described in by leader

2238
01:50:33,679 --> 01:50:40,400
is connect to the connected scrap link

2239
01:50:36,719 --> 01:50:43,679
so i think they are suitable to

2240
01:50:40,400 --> 01:50:48,400
putting too into the into

2241
01:50:43,679 --> 01:50:48,400
this special interface attribute

2242
01:50:48,480 --> 01:50:52,400
yeah i guess my point was i i think that

2243
01:50:50,639 --> 01:50:54,080
drafts are wrong

2244
01:50:52,400 --> 01:50:55,440
it's describing a server and then

2245
01:50:54,080 --> 01:50:56,960
anycast address and

2246
01:50:55,440 --> 01:50:59,040
and then trying to attach the

2247
01:50:56,960 --> 01:51:01,520
information for it to a link

2248
01:50:59,040 --> 01:51:04,800
but that just doesn't why not just do a

2249
01:51:01,520 --> 01:51:04,800
prefix for the server

2250
01:51:05,040 --> 01:51:11,280
okay we can discuss it more in the list

2251
01:51:08,639 --> 01:51:12,239
okay ac did you have account i'm gonna

2252
01:51:11,280 --> 01:51:14,559
be quick too

2253
01:51:12,239 --> 01:51:16,638
i the thing i'm thinking here right

2254
01:51:14,560 --> 01:51:20,400
rather than coming up

2255
01:51:16,639 --> 01:51:22,880
with a generic uh way of advertising

2256
01:51:20,400 --> 01:51:24,239
that it's a stub link you're using the

2257
01:51:22,880 --> 01:51:28,400
fact that it's stubbly

2258
01:51:24,239 --> 01:51:31,919
to make inferences for these use cases

2259
01:51:28,400 --> 01:51:34,159
why wouldn't you just advertise

2260
01:51:31,920 --> 01:51:35,760
you know because what you're you know

2261
01:51:34,159 --> 01:51:37,920
that you have this inner ass

2262
01:51:35,760 --> 01:51:40,000
thing why wouldn't you just advertise

2263
01:51:37,920 --> 01:51:41,840
this as an inner as boundary or

2264
01:51:40,000 --> 01:51:42,639
something like that or whatever your use

2265
01:51:41,840 --> 01:51:44,400
case is

2266
01:51:42,639 --> 01:51:46,080
and we can discuss this on the list too

2267
01:51:44,400 --> 01:51:47,199
i think this is just when we have nine

2268
01:51:46,080 --> 01:51:50,239
minutes left and

2269
01:51:47,199 --> 01:51:52,080
you got one more presentation

2270
01:51:50,239 --> 01:51:54,320
okay okay let's discuss it in our main

2271
01:51:52,080 --> 01:51:54,320
list

2272
01:51:55,760 --> 01:51:58,560
thanks and i'll review the update i'll

2273
01:51:57,280 --> 01:51:59,920
take a look at the updated when i see

2274
01:51:58,560 --> 01:52:01,920
you just updated it

2275
01:51:59,920 --> 01:52:04,159
in the last you told me you were going

2276
01:52:01,920 --> 01:52:06,159
to do this but when the window opened

2277
01:52:04,159 --> 01:52:07,839
yeah we have open updated the job but

2278
01:52:06,159 --> 01:52:10,400
i'm not not seeing the notifications on

2279
01:52:07,840 --> 01:52:10,400
the main list

2280
01:52:14,840 --> 01:52:17,840
yes

2281
01:52:20,719 --> 01:52:31,840
okay next up

2282
01:52:32,800 --> 01:52:39,280
can you hear me yes yes

2283
01:52:36,159 --> 01:52:44,000
okay all right so this strapped up

2284
01:52:39,280 --> 01:52:46,800
pua prefix unreachable announcement

2285
01:52:44,000 --> 01:52:46,800
good next slide

2286
01:52:51,280 --> 01:52:54,639
so the motivation behind so really the

2287
01:52:54,159 --> 01:52:56,719
main

2288
01:52:54,639 --> 01:52:58,639
problem statement i guess where this

2289
01:52:56,719 --> 01:53:01,760
draft can be beneficial

2290
01:52:58,639 --> 01:53:05,520
is in cases where you want to have a

2291
01:53:01,760 --> 01:53:07,679
converge the data plane so like

2292
01:53:05,520 --> 01:53:08,960
so instead of again relying on control

2293
01:53:07,679 --> 01:53:10,560
plane convergence

2294
01:53:08,960 --> 01:53:12,000
uh to speed up the data plane

2295
01:53:10,560 --> 01:53:14,239
convergence and one of the really the

2296
01:53:12,000 --> 01:53:18,560
big use case for this

2297
01:53:14,239 --> 01:53:21,119
would be for uh and if you have a um

2298
01:53:18,560 --> 01:53:22,159
your bgp next top attribute convergence

2299
01:53:21,119 --> 01:53:24,960
so let's say if you have

2300
01:53:22,159 --> 01:53:26,400
external peers and where you where

2301
01:53:24,960 --> 01:53:28,960
you're marking your uh

2302
01:53:26,400 --> 01:53:30,239
your your bgp next hop doing the next

2303
01:53:28,960 --> 01:53:32,639
hops self

2304
01:53:30,239 --> 01:53:34,159
um so in that particular case and you

2305
01:53:32,639 --> 01:53:35,840
have a link failure

2306
01:53:34,159 --> 01:53:37,920
uh being able to detect that link

2307
01:53:35,840 --> 01:53:39,760
failure quickly with a with a

2308
01:53:37,920 --> 01:53:41,840
advertisement with the negative

2309
01:53:39,760 --> 01:53:43,760
advertisement saying the link is down

2310
01:53:41,840 --> 01:53:45,360
and allowing your um if you're running

2311
01:53:43,760 --> 01:53:48,239
let's say bgp like pick

2312
01:53:45,360 --> 01:53:48,559
core in the core your hierarchical fib

2313
01:53:48,239 --> 01:53:51,598
can

2314
01:53:48,560 --> 01:53:53,119
converge quickly um noticing that data

2315
01:53:51,599 --> 01:53:55,360
plane failure and then you can and

2316
01:53:53,119 --> 01:53:58,799
you're able to converge quickly

2317
01:53:55,360 --> 01:53:59,199
another use case for this draft is with

2318
01:53:58,800 --> 01:54:03,199
um

2319
01:53:59,199 --> 01:54:05,678
with summarization where you have a area

2320
01:54:03,199 --> 01:54:07,119
a igp domain that's subdivided into

2321
01:54:05,679 --> 01:54:08,639
multiple areas

2322
01:54:07,119 --> 01:54:10,880
and you want to have you want to be able

2323
01:54:08,639 --> 01:54:11,760
to switch the data plane convergence

2324
01:54:10,880 --> 01:54:13,599
from from

2325
01:54:11,760 --> 01:54:15,119
one a b or your primary abr to the

2326
01:54:13,599 --> 01:54:18,719
secondary audio

2327
01:54:15,119 --> 01:54:21,759
so that that's another use case and then

2328
01:54:18,719 --> 01:54:23,679
within a within an area either link or

2329
01:54:21,760 --> 01:54:26,159
node failure so intra area

2330
01:54:23,679 --> 01:54:27,520
link or node failure and being able to

2331
01:54:26,159 --> 01:54:30,559
with this negative

2332
01:54:27,520 --> 01:54:32,639
advertisement uh this prefix unreachable

2333
01:54:30,560 --> 01:54:33,599
component so when a component prefix

2334
01:54:32,639 --> 01:54:35,280
goes down

2335
01:54:33,599 --> 01:54:37,440
being able to converge that data thing

2336
01:54:35,280 --> 01:54:40,000
quickly

2337
01:54:37,440 --> 01:54:40,000
next slide

2338
01:54:44,239 --> 01:54:47,598
go ahead and excellent thanks so this is

2339
01:54:46,400 --> 01:54:49,440
a typical uh

2340
01:54:47,599 --> 01:54:51,360
just a service provider core you have

2341
01:54:49,440 --> 01:54:53,519
edges here there you go yeah just that

2342
01:54:51,360 --> 01:54:56,480
that one

2343
01:54:53,520 --> 01:54:56,480
sorry the previous one

2344
01:54:57,440 --> 01:55:01,280
yeah there you go there you go okay so

2345
01:54:59,280 --> 01:55:03,679
so let's say you have a

2346
01:55:01,280 --> 01:55:05,119
typical service provider core and where

2347
01:55:03,679 --> 01:55:07,199
you have the edges to uh

2348
01:55:05,119 --> 01:55:08,960
you know you have bgp overlay services

2349
01:55:07,199 --> 01:55:09,839
and you want to converge the core

2350
01:55:08,960 --> 01:55:12,880
quickly

2351
01:55:09,840 --> 01:55:15,440
um and where you're running let's say be

2352
01:55:12,880 --> 01:55:17,199
you know bgp pic pick edge at the edges

2353
01:55:15,440 --> 01:55:19,280
and you're running let's say bgp

2354
01:55:17,199 --> 01:55:21,119
core but the hierarchical fib you're

2355
01:55:19,280 --> 01:55:22,480
doing a next top self to the route

2356
01:55:21,119 --> 01:55:24,480
reflector so in that

2357
01:55:22,480 --> 01:55:25,839
in that case you're you're rewriting the

2358
01:55:24,480 --> 01:55:27,280
next stop to the loopback but the

2359
01:55:25,840 --> 01:55:29,119
loopback is always up

2360
01:55:27,280 --> 01:55:31,519
so you're you're in the core your core

2361
01:55:29,119 --> 01:55:33,759
doesn't converge as quickly because you

2362
01:55:31,520 --> 01:55:35,679
you've done a rewrite to the loopback

2363
01:55:33,760 --> 01:55:37,760
it's it's something that's it can really

2364
01:55:35,679 --> 01:55:38,080
exist at day one you know with pig core

2365
01:55:37,760 --> 01:55:40,800
and

2366
01:55:38,080 --> 01:55:41,599
and to work around that what you end up

2367
01:55:40,800 --> 01:55:43,840
doing is

2368
01:55:41,599 --> 01:55:45,840
you end up having to advertise all of

2369
01:55:43,840 --> 01:55:46,239
your external prefixes into the core

2370
01:55:45,840 --> 01:55:49,360
which

2371
01:55:46,239 --> 01:55:50,959
creates a bigger fib so this work around

2372
01:55:49,360 --> 01:55:52,639
what it does is with this with this

2373
01:55:50,960 --> 01:55:55,040
negative advertisement

2374
01:55:52,639 --> 01:55:57,040
it converges that data plane quickly so

2375
01:55:55,040 --> 01:55:58,159
now you're doing this prefix unreachable

2376
01:55:57,040 --> 01:56:00,400
advertisement

2377
01:55:58,159 --> 01:56:02,159
of that link that's down and you're able

2378
01:56:00,400 --> 01:56:06,400
to converge the core quickly

2379
01:56:02,159 --> 01:56:08,960
onto that um onto the new path

2380
01:56:06,400 --> 01:56:08,960
next slide

2381
01:56:11,280 --> 01:56:15,360
so this is a topological um uh layout of

2382
01:56:15,119 --> 01:56:18,000
a

2383
01:56:15,360 --> 01:56:18,960
multiple areas where you actually have

2384
01:56:18,000 --> 01:56:22,080
the uh

2385
01:56:18,960 --> 01:56:25,440
pua convergence with multiple areas

2386
01:56:22,080 --> 01:56:25,440
uh go on to the next slide

2387
01:56:27,119 --> 01:56:33,280
now so here in this scenario this is a

2388
01:56:30,159 --> 01:56:36,960
uh an inter area scenario where you have

2389
01:56:33,280 --> 01:56:40,480
two avr so in the center of the diagram

2390
01:56:36,960 --> 01:56:44,000
you have um router one and router three

2391
01:56:40,480 --> 01:56:45,919
router router three or router two router

2392
01:56:44,000 --> 01:56:48,480
four and they're both abrs or or

2393
01:56:45,920 --> 01:56:49,520
l1 l2 routers and you have a a link

2394
01:56:48,480 --> 01:56:51,440
failure

2395
01:56:49,520 --> 01:56:53,840
when that happens within the area or

2396
01:56:51,440 --> 01:56:55,360
node failure in this case we have t1

2397
01:56:53,840 --> 01:56:57,199
you know went down on the left on the

2398
01:56:55,360 --> 01:56:58,239
right side and here we have s2 on the

2399
01:56:57,199 --> 01:57:00,159
left side

2400
01:56:58,239 --> 01:57:01,519
so in that case what ends up happening

2401
01:57:00,159 --> 01:57:03,199
is you end up having a summary

2402
01:57:01,520 --> 01:57:04,480
advertisement that gets advertised by

2403
01:57:03,199 --> 01:57:06,559
the adr

2404
01:57:04,480 --> 01:57:08,638
so like on the right side you have route

2405
01:57:06,560 --> 01:57:09,360
r2 and r4 they'll advertise a summary

2406
01:57:08,639 --> 01:57:12,080
back

2407
01:57:09,360 --> 01:57:14,559
towards area one and on and on and on

2408
01:57:12,080 --> 01:57:16,159
the left side you have s2 went down

2409
01:57:14,560 --> 01:57:18,480
so you have router one and router three

2410
01:57:16,159 --> 01:57:21,759
they're advertising a summary

2411
01:57:18,480 --> 01:57:23,759
so in that particular case when where s2

2412
01:57:21,760 --> 01:57:25,440
has gone down and the prefix is no

2413
01:57:23,760 --> 01:57:26,800
longer reachable

2414
01:57:25,440 --> 01:57:29,040
you still have traffic that kind of

2415
01:57:26,800 --> 01:57:31,920
heads back towards s2

2416
01:57:29,040 --> 01:57:32,800
um you know comes up to r1 and r3 if

2417
01:57:31,920 --> 01:57:35,360
they're both

2418
01:57:32,800 --> 01:57:36,480
active primary um and then the same in

2419
01:57:35,360 --> 01:57:38,719
the other direction

2420
01:57:36,480 --> 01:57:40,320
you would get an icmp back the other way

2421
01:57:38,719 --> 01:57:43,280
but you got traffic

2422
01:57:40,320 --> 01:57:44,000
um going in that direction the other

2423
01:57:43,280 --> 01:57:46,000
caveat

2424
01:57:44,000 --> 01:57:47,040
and part of the problem statement is

2425
01:57:46,000 --> 01:57:49,199
cases where

2426
01:57:47,040 --> 01:57:50,560
you have component prefixes that are

2427
01:57:49,199 --> 01:57:52,638
part of a summary

2428
01:57:50,560 --> 01:57:53,679
where you have a false positive that

2429
01:57:52,639 --> 01:57:55,440
happens where

2430
01:57:53,679 --> 01:57:56,880
the components are there but then let's

2431
01:57:55,440 --> 01:57:58,480
say the component

2432
01:57:56,880 --> 01:58:00,000
disappeared and there's no and there's

2433
01:57:58,480 --> 01:58:02,799
no component prefixes

2434
01:58:00,000 --> 01:58:04,000
but but the uh but the summary route is

2435
01:58:02,800 --> 01:58:05,760
still advertised

2436
01:58:04,000 --> 01:58:08,000
so in that case you made black hole

2437
01:58:05,760 --> 01:58:09,599
traffic um in those cases so

2438
01:58:08,000 --> 01:58:11,119
this what this does is with this

2439
01:58:09,599 --> 01:58:13,679
negative advertisement

2440
01:58:11,119 --> 01:58:14,639
it converges a data plane quickly so you

2441
01:58:13,679 --> 01:58:21,679
don't risk

2442
01:58:14,639 --> 01:58:24,400
any any uh black hole traffic next slide

2443
01:58:21,679 --> 01:58:25,840
so so in this case this is the inter

2444
01:58:24,400 --> 01:58:28,159
area scenario

2445
01:58:25,840 --> 01:58:30,880
so where you have a node on the right

2446
01:58:28,159 --> 01:58:32,960
side t2 has gone has gone down

2447
01:58:30,880 --> 01:58:34,639
and you have a so you still have a

2448
01:58:32,960 --> 01:58:35,840
summary route advertisement that gets

2449
01:58:34,639 --> 01:58:38,960
advertised by

2450
01:58:35,840 --> 01:58:42,320
r2 and r4 into the background area zero

2451
01:58:38,960 --> 01:58:44,159
and then back over to area one um and

2452
01:58:42,320 --> 01:58:46,000
and then so on the left side you have

2453
01:58:44,159 --> 01:58:48,638
the summary gets advertised

2454
01:58:46,000 --> 01:58:49,280
back over but but now because the uh

2455
01:58:48,639 --> 01:58:52,400
link the

2456
01:58:49,280 --> 01:58:53,280
node t2 is down um you have traffic that

2457
01:58:52,400 --> 01:58:55,280
will flow because

2458
01:58:53,280 --> 01:58:57,360
the summary is still present so you you

2459
01:58:55,280 --> 01:59:00,320
have traffic that flows up to r4

2460
01:58:57,360 --> 01:59:01,199
r4 will send and we'll send an icmp back

2461
01:59:00,320 --> 01:59:04,080
but you have

2462
01:59:01,199 --> 01:59:04,480
that data traffic that comes over to r4

2463
01:59:04,080 --> 01:59:06,800
so

2464
01:59:04,480 --> 01:59:08,239
in a scenario where let's say there is a

2465
01:59:06,800 --> 01:59:09,920
partitioned

2466
01:59:08,239 --> 01:59:12,480
the network is partitioned or something

2467
01:59:09,920 --> 01:59:14,719
happen let's say r4 is not reachable

2468
01:59:12,480 --> 01:59:16,959
but he was reachable for a period of

2469
01:59:14,719 --> 01:59:18,800
time but became unreachable and the

2470
01:59:16,960 --> 01:59:20,960
component prefixes

2471
01:59:18,800 --> 01:59:23,440
were present and they're present on r2

2472
01:59:20,960 --> 01:59:25,280
but they're not no longer present on r4

2473
01:59:23,440 --> 01:59:27,678
and if we're still sending the summary

2474
01:59:25,280 --> 01:59:29,519
route you end up having a um

2475
01:59:27,679 --> 01:59:30,800
a situation where you end up hole in

2476
01:59:29,520 --> 01:59:33,840
traffic um

2477
01:59:30,800 --> 01:59:35,199
so with this so go go on the next slide

2478
01:59:33,840 --> 01:59:37,840
so that's that's a use case with the

2479
01:59:35,199 --> 01:59:39,280
node failure i'm going to next

2480
01:59:37,840 --> 01:59:40,960
yeah we've got one minute left i don't

2481
01:59:39,280 --> 01:59:42,000
know if it'll cut us off or give us five

2482
01:59:40,960 --> 01:59:45,520
minutes

2483
01:59:42,000 --> 01:59:47,199
okay all right thank you um this

2484
01:59:45,520 --> 01:59:48,880
go on to the next slide we'll just go

2485
01:59:47,199 --> 01:59:51,040
into uh skip a couple slides go to the

2486
01:59:48,880 --> 01:59:54,239
next slide

2487
01:59:51,040 --> 01:59:55,920
all right so this slide this is a case

2488
01:59:54,239 --> 01:59:57,360
that's fine that's right just keep it on

2489
01:59:55,920 --> 01:59:59,599
this one so

2490
01:59:57,360 --> 02:00:01,839
with prefix unreachable advertisement

2491
01:59:59,599 --> 02:00:03,520
what ends up what ends up happening is

2492
02:00:01,840 --> 02:00:06,560
when you have that node failure happen

2493
02:00:03,520 --> 02:00:08,960
so like on t2 the node failure happens

2494
02:00:06,560 --> 02:00:09,920
so now a prefix unreachable

2495
02:00:08,960 --> 02:00:13,840
advertisement

2496
02:00:09,920 --> 02:00:16,960
is sent you know from from um

2497
02:00:13,840 --> 02:00:19,360
from the abr so r2 on r4 they detect

2498
02:00:16,960 --> 02:00:21,599
and they send that the pua advertisement

2499
02:00:19,360 --> 02:00:22,799
out towards through the backbone over to

2500
02:00:21,599 --> 02:00:25,440
area one

2501
02:00:22,800 --> 02:00:27,760
area one sees that and then the route

2502
02:00:25,440 --> 02:00:30,480
when when it's flooded out to area one

2503
02:00:27,760 --> 02:00:31,840
they install a uh in the fib in the data

2504
02:00:30,480 --> 02:00:33,280
plane and that's where the data plane

2505
02:00:31,840 --> 02:00:35,440
convergence happens

2506
02:00:33,280 --> 02:00:37,360
and and all zero to black hole the trust

2507
02:00:35,440 --> 02:00:38,159
of the traffic so no traffic is sent to

2508
02:00:37,360 --> 02:00:40,000
that route

2509
02:00:38,159 --> 02:00:42,239
and that's really for the abr so let's

2510
02:00:40,000 --> 02:00:43,760
say if for some reason let's say there's

2511
02:00:42,239 --> 02:00:46,718
a partition network

2512
02:00:43,760 --> 02:00:48,639
r2 is down he's no longer reachable he

2513
02:00:46,719 --> 02:00:50,080
doesn't have any component prefixes but

2514
02:00:48,639 --> 02:00:52,000
he's advertising

2515
02:00:50,080 --> 02:00:53,599
the summary for for whatever reason

2516
02:00:52,000 --> 02:00:54,000
because there was maybe a race condition

2517
02:00:53,599 --> 02:00:56,400
or something

2518
02:00:54,000 --> 02:00:58,080
but he's advertising the summary our

2519
02:00:56,400 --> 02:00:59,759
four is still up but we don't want any

2520
02:00:58,080 --> 02:01:01,920
traffic to go to our two

2521
02:00:59,760 --> 02:01:03,760
um you know black hole in traffic so in

2522
02:01:01,920 --> 02:01:05,760
that case the data plane

2523
02:01:03,760 --> 02:01:07,679
it converges on the left side so like

2524
02:01:05,760 --> 02:01:11,440
also the routers on on

2525
02:01:07,679 --> 02:01:13,840
s1 s4 s2 and s3 they end up

2526
02:01:11,440 --> 02:01:14,960
you know poor programming into their fib

2527
02:01:13,840 --> 02:01:18,400
the um

2528
02:01:14,960 --> 02:01:18,960
the to black hole that uh that lsa

2529
02:01:18,400 --> 02:01:21,598
that's

2530
02:01:18,960 --> 02:01:23,119
advertised to set the next stop to all

2531
02:01:21,599 --> 02:01:26,000
zeros so basically

2532
02:01:23,119 --> 02:01:27,920
um not using not using that summary

2533
02:01:26,000 --> 02:01:29,199
advertisement for that free for this for

2534
02:01:27,920 --> 02:01:31,280
that prefix

2535
02:01:29,199 --> 02:01:33,919
um so no traffic goes that frequency go

2536
02:01:31,280 --> 02:01:37,360
ahead next slide

2537
02:01:33,920 --> 02:01:39,119
we're gonna get cut off soon okay

2538
02:01:37,360 --> 02:01:41,119
i'll just talk until it cuts off go

2539
02:01:39,119 --> 02:01:43,440
ahead next well i i mean maybe maybe

2540
02:01:41,119 --> 02:01:44,799
people have comments i don't know yeah

2541
02:01:43,440 --> 02:01:46,638
yeah go ahead actually why don't we why

2542
02:01:44,800 --> 02:01:49,599
don't we just do some q a i guess

2543
02:01:46,639 --> 02:01:51,280
right now that would be fine since we

2544
02:01:49,599 --> 02:01:53,119
don't have much time left

2545
02:01:51,280 --> 02:01:55,360
i'll just talk through this last slide

2546
02:01:53,119 --> 02:01:57,598
actually if you don't mind and then

2547
02:01:55,360 --> 02:01:59,519
see which one you're a few seconds

2548
02:01:57,599 --> 02:02:01,840
behind when i switch them

2549
02:01:59,520 --> 02:02:05,840
okay sorry go to the next one at the

2550
02:02:01,840 --> 02:02:09,040
last slide

2551
02:02:05,840 --> 02:02:11,040
okay so this so with this uh

2552
02:02:09,040 --> 02:02:12,960
prefix unreachable advertisement there

2553
02:02:11,040 --> 02:02:16,239
is a feature called uh

2554
02:02:12,960 --> 02:02:19,280
maximum advertisement which uh

2555
02:02:16,239 --> 02:02:19,598
in a case where you have um prefixes and

2556
02:02:19,280 --> 02:02:21,199
this

2557
02:02:19,599 --> 02:02:22,880
is something that you know could

2558
02:02:21,199 --> 02:02:23,360
possibly happen where you're the number

2559
02:02:22,880 --> 02:02:25,040
of

2560
02:02:23,360 --> 02:02:27,280
reachable prefixes on unreachable

2561
02:02:25,040 --> 02:02:29,360
prefixes there are more

2562
02:02:27,280 --> 02:02:30,800
unreachable component prefixes than

2563
02:02:29,360 --> 02:02:33,679
reachable

2564
02:02:30,800 --> 02:02:35,599
so in that case it makes the pre the

2565
02:02:33,679 --> 02:02:37,280
summary advertisement work even more

2566
02:02:35,599 --> 02:02:39,119
conditional that

2567
02:02:37,280 --> 02:02:40,719
typically if you have a single component

2568
02:02:39,119 --> 02:02:41,679
route the pre the summary is always

2569
02:02:40,719 --> 02:02:44,400
advertised

2570
02:02:41,679 --> 02:02:45,199
so in this case it would there would be

2571
02:02:44,400 --> 02:02:47,920
there would be a

2572
02:02:45,199 --> 02:02:49,519
another uh factor or another variable

2573
02:02:47,920 --> 02:02:50,320
that allows you to con you know would be

2574
02:02:49,520 --> 02:02:52,800
able to configure

2575
02:02:50,320 --> 02:02:54,480
so you don't always advertise and you

2576
02:02:52,800 --> 02:02:55,840
could switch to only advertising longer

2577
02:02:54,480 --> 02:02:59,119
matches so

2578
02:02:55,840 --> 02:03:00,560
it's just another layer of um

2579
02:02:59,119 --> 02:03:02,799
condition conditionality i guess with

2580
02:03:00,560 --> 02:03:05,280
the um with the summary route

2581
02:03:02,800 --> 02:03:06,960
um so that's pretty much it with for the

2582
02:03:05,280 --> 02:03:08,639
slide deck um if anyone has any

2583
02:03:06,960 --> 02:03:11,040
questions um we can go ahead and go to

2584
02:03:08,639 --> 02:03:11,040
questions

2585
02:03:12,239 --> 02:03:16,000
well something occurred to me as is

2586
02:03:14,000 --> 02:03:18,159
being working remember when i was uh

2587
02:03:16,000 --> 02:03:19,920
thinking about this a lot of people seem

2588
02:03:18,159 --> 02:03:20,320
to have complaints about the mechanism

2589
02:03:19,920 --> 02:03:23,760
for

2590
02:03:20,320 --> 02:03:25,679
drawing the unreachable and using timers

2591
02:03:23,760 --> 02:03:27,440
and whatnot and how it was you know rift

2592
02:03:25,679 --> 02:03:30,000
it was compared to rift and how rift had

2593
02:03:27,440 --> 02:03:32,159
a more deterministic way to deal with it

2594
02:03:30,000 --> 02:03:34,560
it made me think what you know if there

2595
02:03:32,159 --> 02:03:35,920
was a way to attach the unreachable to

2596
02:03:34,560 --> 02:03:37,679
the summary route

2597
02:03:35,920 --> 02:03:39,040
so that then you would just re-advertise

2598
02:03:37,679 --> 02:03:41,280
the summary route

2599
02:03:39,040 --> 02:03:42,960
with with or without the unreachable the

2600
02:03:41,280 --> 02:03:45,759
holes basically right

2601
02:03:42,960 --> 02:03:47,599
and that way you know if you don't have

2602
02:03:45,760 --> 02:03:48,800
that problem timing out that was just an

2603
02:03:47,599 --> 02:03:51,920
idea

2604
02:03:48,800 --> 02:03:53,280
i don't know how a bit

2605
02:03:51,920 --> 02:03:56,000
i don't know if it's a you're able to do

2606
02:03:53,280 --> 02:03:58,800
that like in lsdf and stuff

2607
02:03:56,000 --> 02:04:00,800
right so with this let's say when they

2608
02:03:58,800 --> 02:04:02,400
route the so this these the uh

2609
02:04:00,800 --> 02:04:03,920
prefix unreachable advertisement they

2610
02:04:02,400 --> 02:04:06,638
would only be present

2611
02:04:03,920 --> 02:04:07,920
when a component is down so when that

2612
02:04:06,639 --> 02:04:09,679
component comes up

2613
02:04:07,920 --> 02:04:11,440
the unreachable like you know it stops

2614
02:04:09,679 --> 02:04:12,239
immediately so it's it wouldn't stay but

2615
02:04:11,440 --> 02:04:14,719
it would help

2616
02:04:12,239 --> 02:04:15,598
it would help for you know propagation

2617
02:04:14,719 --> 02:04:17,199
but when that

2618
02:04:15,599 --> 02:04:19,199
when the summary is advertised it would

2619
02:04:17,199 --> 02:04:20,879
be the summary plus this

2620
02:04:19,199 --> 02:04:22,799
this component so it would be attached

2621
02:04:20,880 --> 02:04:25,760
to the summary route so when the

2622
02:04:22,800 --> 02:04:26,800
the um the receivers i guess on the

2623
02:04:25,760 --> 02:04:28,159
other side when they

2624
02:04:26,800 --> 02:04:30,239
let's say on the left side let's say

2625
02:04:28,159 --> 02:04:32,719
when they receive the um

2626
02:04:30,239 --> 02:04:33,360
the summary the summary they'll see the

2627
02:04:32,719 --> 02:04:34,960
routes

2628
02:04:33,360 --> 02:04:36,639
the components that are down and it will

2629
02:04:34,960 --> 02:04:37,280
automatically program it in but let's

2630
02:04:36,639 --> 02:04:39,840
say

2631
02:04:37,280 --> 02:04:41,920
program into the fib to stop you know to

2632
02:04:39,840 --> 02:04:42,320
drop traffic and not send any traffic to

2633
02:04:41,920 --> 02:04:45,360
that

2634
02:04:42,320 --> 02:04:47,519
to that summary route right now

2635
02:04:45,360 --> 02:04:49,280
if you have it if you have it as a sub

2636
02:04:47,520 --> 02:04:50,000
tlv then you can withdraw by just

2637
02:04:49,280 --> 02:04:52,079
changing this

2638
02:04:50,000 --> 02:04:54,719
summary again right i think we're going

2639
02:04:52,079 --> 02:04:57,759
to get cut off in 10 seconds

2640
02:04:54,719 --> 02:04:59,679
do you want any last words um

2641
02:04:57,760 --> 02:05:00,880
that's it i mean i think uh we could we

2642
02:04:59,679 --> 02:05:03,520
just pick it up on

2643
02:05:00,880 --> 02:05:04,159
on ml on the mailing list um yeah yeah i

2644
02:05:03,520 --> 02:05:06,079
was just

2645
02:05:04,159 --> 02:05:07,519
i wasn't going to speaking as working

2646
02:05:06,079 --> 02:05:09,280
remember i was gonna say there's a lot

2647
02:05:07,520 --> 02:05:11,040
of complexity here for the different use

2648
02:05:09,280 --> 02:05:11,679
cases and it looks like you even added

2649
02:05:11,040 --> 02:05:14,320
some

2650
02:05:11,679 --> 02:05:15,599
additional use cases in your slides and

2651
02:05:14,320 --> 02:05:19,679
the interaction with

2652
02:05:15,599 --> 02:05:23,040
with the rib is going to be

2653
02:05:19,679 --> 02:05:25,440
quite complic complicated that if

2654
02:05:23,040 --> 02:05:28,159
you should describe what you'd expect to

2655
02:05:25,440 --> 02:05:31,360
be installed in these cases

2656
02:05:28,159 --> 02:05:34,719
uh and how it's going to work because

2657
02:05:31,360 --> 02:05:36,400
i i look at it and i said oh i yeah

2658
02:05:34,719 --> 02:05:37,840
you know i can kind of wave my hands and

2659
02:05:36,400 --> 02:05:41,360
say how it works

2660
02:05:37,840 --> 02:05:43,280
i think that needs to be specified yeah

2661
02:05:41,360 --> 02:05:45,440
i mean i think i think that piece of it

2662
02:05:43,280 --> 02:05:47,440
with the convergence and let's say i

2663
02:05:45,440 --> 02:05:48,638
you know if you have a false positive

2664
02:05:47,440 --> 02:05:50,638
false negative

2665
02:05:48,639 --> 02:05:52,159
i think with timers because you're

2666
02:05:50,639 --> 02:05:53,760
impacting the data plane

2667
02:05:52,159 --> 02:05:56,079
it's supposed to make the convergence

2668
02:05:53,760 --> 02:05:57,679
better not worse so we want to make sure

2669
02:05:56,079 --> 02:06:00,960
that whatever timers

2670
02:05:57,679 --> 02:06:03,440
that we make sure that the um that

2671
02:06:00,960 --> 02:06:04,320
when services come back that and it

2672
02:06:03,440 --> 02:06:06,799
would be a flood

2673
02:06:04,320 --> 02:06:08,239
that it would be part of the summary so

2674
02:06:06,800 --> 02:06:10,079
when when the um

2675
02:06:08,239 --> 02:06:12,159
when the service comes back up it's

2676
02:06:10,079 --> 02:06:15,199
immediately flooded and removed

2677
02:06:12,159 --> 02:06:15,440
so you you converge immediately as soon

2678
02:06:15,199 --> 02:06:17,119
as

2679
02:06:15,440 --> 02:06:18,559
and it would be part of the same summary

2680
02:06:17,119 --> 02:06:21,280
advertisement same

2681
02:06:18,560 --> 02:06:22,400
sub tlv so when when when when the

2682
02:06:21,280 --> 02:06:25,119
service is back

2683
02:06:22,400 --> 02:06:26,879
it comes back when it goes down data

2684
02:06:25,119 --> 02:06:27,839
plane converges immediately on that

2685
02:06:26,880 --> 02:06:30,560
component

2686
02:06:27,840 --> 02:06:32,560
that goes down so just and it's for a

2687
02:06:30,560 --> 02:06:35,920
link or a node failure but really

2688
02:06:32,560 --> 02:06:38,239
improving the um data plane convergence

2689
02:06:35,920 --> 02:06:39,280
um i i think the big one that i i think

2690
02:06:38,239 --> 02:06:40,799
you know overall like

2691
02:06:39,280 --> 02:06:43,040
you know on on the mailing list i think

2692
02:06:40,800 --> 02:06:45,040
that came up with with the bgp

2693
02:06:43,040 --> 02:06:46,560
which could be like in this drawing we

2694
02:06:45,040 --> 02:06:48,079
actually have multiple areas but if you

2695
02:06:46,560 --> 02:06:50,320
had a single area

2696
02:06:48,079 --> 02:06:51,599
and that issue with the next top self on

2697
02:06:50,320 --> 02:06:54,480
your tie to let's say

2698
02:06:51,599 --> 02:06:54,880
you know other you know customer yes's

2699
02:06:54,480 --> 02:06:56,079
where

2700
02:06:54,880 --> 02:06:58,560
you know because you're doing that next

2701
02:06:56,079 --> 02:07:00,960
top rewrite your your um

2702
02:06:58,560 --> 02:07:02,480
your your bgp like prefix independent

2703
02:07:00,960 --> 02:07:05,440
convergence your your

2704
02:07:02,480 --> 02:07:07,360
your core pick core because that that

2705
02:07:05,440 --> 02:07:08,320
hierarchical fib that now it's dependent

2706
02:07:07,360 --> 02:07:10,400
on the loopback

2707
02:07:08,320 --> 02:07:11,599
doesn't go down so that kind of impact

2708
02:07:10,400 --> 02:07:13,519
and that's something that's always

2709
02:07:11,599 --> 02:07:16,239
existed for a long time so this

2710
02:07:13,520 --> 02:07:17,679
this thing would make the um that next

2711
02:07:16,239 --> 02:07:19,839
hop reachability

2712
02:07:17,679 --> 02:07:22,480
that the next hop you know where that

2713
02:07:19,840 --> 02:07:24,320
when that that pec links goes down

2714
02:07:22,480 --> 02:07:26,159
now you're converged immediately and i

2715
02:07:24,320 --> 02:07:27,519
think that would be like a huge gain

2716
02:07:26,159 --> 02:07:29,199
and it would be really for any service

2717
02:07:27,520 --> 02:07:32,079
provider operator

2718
02:07:29,199 --> 02:07:32,638
um that that you have um where you have

2719
02:07:32,079 --> 02:07:34,960
that

2720
02:07:32,639 --> 02:07:36,400
tie but now now you actually converge

2721
02:07:34,960 --> 02:07:37,920
that data plane quickly when that when

2722
02:07:36,400 --> 02:07:40,320
that next top goes down

2723
02:07:37,920 --> 02:07:41,920
so i mean i would say overall that's

2724
02:07:40,320 --> 02:07:45,119
probably the biggest one

2725
02:07:41,920 --> 02:07:45,840
i mean i think that the main the um the

2726
02:07:45,119 --> 02:07:47,679
timers

2727
02:07:45,840 --> 02:07:49,199
and i guess really converging the data

2728
02:07:47,679 --> 02:07:52,480
plan and making sure that

2729
02:07:49,199 --> 02:07:54,320
that when when services come up we just

2730
02:07:52,480 --> 02:07:56,079
have to make sure that the uh

2731
02:07:54,320 --> 02:07:58,079
that that entry that's tied to the

2732
02:07:56,079 --> 02:07:59,679
prefix the component prefix

2733
02:07:58,079 --> 02:08:01,920
that it's actually it's gone and it

2734
02:07:59,679 --> 02:08:03,679
would be a flood so so that igp would

2735
02:08:01,920 --> 02:08:06,079
flood that lsa out

2736
02:08:03,679 --> 02:08:07,360
at you know and with with the uh with

2737
02:08:06,079 --> 02:08:08,960
this new tlv

2738
02:08:07,360 --> 02:08:10,239
but it would age it out quickly like

2739
02:08:08,960 --> 02:08:12,719
immediately it would be immediately

2740
02:08:10,239 --> 02:08:14,559
flooded as soon as the service comes up

2741
02:08:12,719 --> 02:08:15,840
boom that black hole route is gone the

2742
02:08:14,560 --> 02:08:17,760
unreachable's gone

2743
02:08:15,840 --> 02:08:19,440
as soon as the component you know as

2744
02:08:17,760 --> 02:08:21,840
soon as the component is

2745
02:08:19,440 --> 02:08:23,360
down you know as soon as it's down like

2746
02:08:21,840 --> 02:08:24,719
the next stop goes away

2747
02:08:23,360 --> 02:08:26,799
then immediately the data plane

2748
02:08:24,719 --> 02:08:27,440
converges as soon as that next out comes

2749
02:08:26,800 --> 02:08:29,599
up

2750
02:08:27,440 --> 02:08:31,839
then immediately the um it's withdrawn

2751
02:08:29,599 --> 02:08:34,320
basically the poa has to be withdrawn so

2752
02:08:31,840 --> 02:08:35,040
it would really have to be immediate you

2753
02:08:34,320 --> 02:08:37,360
know and it

2754
02:08:35,040 --> 02:08:38,239
it would you it can't be that that it's

2755
02:08:37,360 --> 02:08:40,159
lingering

2756
02:08:38,239 --> 02:08:41,678
and or any case of a false positive or

2757
02:08:40,159 --> 02:08:43,119
false negative happening i mean

2758
02:08:41,679 --> 02:08:44,960
that's really the critical one because

2759
02:08:43,119 --> 02:08:46,000
we don't want to make things worse we

2760
02:08:44,960 --> 02:08:49,040
want to make it better

2761
02:08:46,000 --> 02:08:49,040
and improve conversions

2762
02:08:49,599 --> 02:08:52,639
okay somehow we got more grace period

2763
02:08:52,239 --> 02:08:54,879
than

2764
02:08:52,639 --> 02:08:54,880
i thought

2765
02:08:55,760 --> 02:08:59,599
hey are you still there i don't know if

2766
02:08:58,000 --> 02:09:01,280
you want to comment or anything on on

2767
02:08:59,599 --> 02:09:05,040
the draft i guess

2768
02:09:01,280 --> 02:09:07,440
any any other comments did you make

2769
02:09:05,040 --> 02:09:10,000
yeah and then we went over to we're at

2770
02:09:07,440 --> 02:09:10,000
202

2771
02:09:10,159 --> 02:09:17,040
a little bit ago 209 yeah

2772
02:09:14,480 --> 02:09:18,718
i i think i think this this probably

2773
02:09:17,040 --> 02:09:19,679
needs a lot more discussion on the list

2774
02:09:18,719 --> 02:09:21,280
that there's

2775
02:09:19,679 --> 02:09:23,679
you're sort of mid discussion on it it

2776
02:09:21,280 --> 02:09:25,759
feels like

2777
02:09:23,679 --> 02:09:27,440
i'm interested i didn't do and and the

2778
02:09:25,760 --> 02:09:30,079
different use cases

2779
02:09:27,440 --> 02:09:31,519
have uh have different this is ac again

2780
02:09:30,079 --> 02:09:35,040
speaking of working remember

2781
02:09:31,520 --> 02:09:38,480
uh they have different uh

2782
02:09:35,040 --> 02:09:40,480
different behaviors yeah and and so

2783
02:09:38,480 --> 02:09:40,959
mixing them mixing them is confusing as

2784
02:09:40,480 --> 02:09:43,919
well

2785
02:09:40,960 --> 02:09:44,400
and saying you just can do them all

2786
02:09:43,920 --> 02:09:47,040
right

2787
02:09:44,400 --> 02:09:48,879
no it is i mean i think there's some

2788
02:09:47,040 --> 02:09:51,119
stuff i think we have to really

2789
02:09:48,880 --> 02:09:52,480
you know clarify and just kind of you

2790
02:09:51,119 --> 02:09:54,320
know clean up some of the verbiage in

2791
02:09:52,480 --> 02:09:56,400
the draft but i agree the mix

2792
02:09:54,320 --> 02:09:57,840
there are there is a mix of use cases

2793
02:09:56,400 --> 02:10:00,320
with the areas

2794
02:09:57,840 --> 02:10:01,280
at you know convergence and all but i

2795
02:10:00,320 --> 02:10:03,920
think some of that will

2796
02:10:01,280 --> 02:10:04,400
we have to work on um cleaning that up

2797
02:10:03,920 --> 02:10:08,000
you know

2798
02:10:04,400 --> 02:10:08,480
in the uh um tony did you have something

2799
02:10:08,000 --> 02:10:11,119
to say

2800
02:10:08,480 --> 02:10:11,678
while we're still able to talk yeah i

2801
02:10:11,119 --> 02:10:14,880
have a

2802
02:10:11,679 --> 02:10:17,520
concern about scalability um it seems to

2803
02:10:14,880 --> 02:10:20,079
me like if you had a significant failure

2804
02:10:17,520 --> 02:10:21,840
you could use this to inject a whole lot

2805
02:10:20,079 --> 02:10:24,880
of stuff into your igp

2806
02:10:21,840 --> 02:10:29,840
relatively suddenly that seems

2807
02:10:24,880 --> 02:10:29,840
like an unintentional stress test

2808
02:10:30,880 --> 02:10:34,480
yes so so tony that's that's a good

2809
02:10:32,719 --> 02:10:36,400
point but i think that so that is

2810
02:10:34,480 --> 02:10:39,119
something that we would control

2811
02:10:36,400 --> 02:10:40,480
with a there there's a timer that we

2812
02:10:39,119 --> 02:10:42,880
would have and it's a

2813
02:10:40,480 --> 02:10:44,320
variable that's really based on it i

2814
02:10:42,880 --> 02:10:46,400
think would be it would be a user

2815
02:10:44,320 --> 02:10:47,440
configurable like based on the number of

2816
02:10:46,400 --> 02:10:49,839
um

2817
02:10:47,440 --> 02:10:50,879
the number of component prefixes that

2818
02:10:49,840 --> 02:10:53,119
are down

2819
02:10:50,880 --> 02:10:54,719
versus the number that are up or what

2820
02:10:53,119 --> 02:10:57,280
you know how many negative

2821
02:10:54,719 --> 02:10:58,159
components you have and how many how

2822
02:10:57,280 --> 02:11:00,400
many services

2823
02:10:58,159 --> 02:11:02,000
are up and it would be it would be

2824
02:11:00,400 --> 02:11:04,159
something configurable based on the

2825
02:11:02,000 --> 02:11:06,000
prefix length that you

2826
02:11:04,159 --> 02:11:07,360
you know use a configurable so depending

2827
02:11:06,000 --> 02:11:09,440
on and it would be really like

2828
02:11:07,360 --> 02:11:11,920
let's say if you have i think like by

2829
02:11:09,440 --> 02:11:14,159
default as long as you have one match

2830
02:11:11,920 --> 02:11:16,079
and there's one component that's up the

2831
02:11:14,159 --> 02:11:18,638
summary always gets advertised

2832
02:11:16,079 --> 02:11:20,719
so you could keep it the same or you

2833
02:11:18,639 --> 02:11:23,199
could change it and that's a variable

2834
02:11:20,719 --> 02:11:24,880
that you could change depending on

2835
02:11:23,199 --> 02:11:26,638
depending on the use case

2836
02:11:24,880 --> 02:11:28,320
that if you don't want it to change and

2837
02:11:26,639 --> 02:11:29,760
you want to like always advertise it

2838
02:11:28,320 --> 02:11:30,400
summary no matter what even though

2839
02:11:29,760 --> 02:11:32,000
you're just

2840
02:11:30,400 --> 02:11:34,559
let's say you have a thousand component

2841
02:11:32,000 --> 02:11:36,400
prefixes but as long as one component is

2842
02:11:34,560 --> 02:11:37,760
up you always advertise it

2843
02:11:36,400 --> 02:11:39,280
um and that's something that you could

2844
02:11:37,760 --> 02:11:40,000
change you could say well make it like

2845
02:11:39,280 --> 02:11:43,440
50

2846
02:11:40,000 --> 02:11:44,400
if you have 50 of your your components

2847
02:11:43,440 --> 02:11:46,000
are down

2848
02:11:44,400 --> 02:11:47,920
really you know you shouldn't be sending

2849
02:11:46,000 --> 02:11:49,840
out the you know summary maybe at that

2850
02:11:47,920 --> 02:11:51,280
point you know send out your components

2851
02:11:49,840 --> 02:11:53,199
because they're there there's a lot of

2852
02:11:51,280 --> 02:11:54,159
downstream failures but it would be

2853
02:11:53,199 --> 02:11:56,799
something that would be user

2854
02:11:54,159 --> 02:11:56,799
configurable

2855
02:12:01,040 --> 02:12:08,320
hope that answers the question tony

2856
02:12:06,800 --> 02:12:09,840
anyone have any other any other

2857
02:12:08,320 --> 02:12:11,440
questions or comments and

2858
02:12:09,840 --> 02:12:14,000
uh we can pick it up i guess on the

2859
02:12:11,440 --> 02:12:14,000
mailing list

2860
02:12:14,239 --> 02:12:17,678
there's been there's been comments

2861
02:12:15,840 --> 02:12:19,280
before too about um

2862
02:12:17,679 --> 02:12:20,880
we let it run over but we shouldn't let

2863
02:12:19,280 --> 02:12:23,199
it run over too far because people may

2864
02:12:20,880 --> 02:12:24,880
have other things scheduled

2865
02:12:23,199 --> 02:12:26,400
so i think we should probably we should

2866
02:12:24,880 --> 02:12:28,320
probably wrap up

2867
02:12:26,400 --> 02:12:29,440
yeah we're supposed to leave uh grace

2868
02:12:28,320 --> 02:12:32,719
period between

2869
02:12:29,440 --> 02:12:36,320
the next meeting starting at uh at

2870
02:12:32,719 --> 02:12:39,360
2 30 eastern standard time

2871
02:12:36,320 --> 02:12:41,599
yeah okay

2872
02:12:39,360 --> 02:12:43,598
sound i guess now like i i'm just going

2873
02:12:41,599 --> 02:12:46,159
directly to the pc but i'm like

2874
02:12:43,599 --> 02:12:48,400
talking like really close to the mic

2875
02:12:46,159 --> 02:12:52,079
does it sound any better or is it still

2876
02:12:48,400 --> 02:12:55,199
still low yeah you sound fine

2877
02:12:52,079 --> 02:12:57,440
um ac i i think we should wrap up

2878
02:12:55,199 --> 02:12:58,638
yeah i think so too so we'll continue

2879
02:12:57,440 --> 02:13:02,159
the discussion on the

2880
02:12:58,639 --> 02:13:05,920
list sorry to uh barack and uh

2881
02:13:02,159 --> 02:13:05,920
cair but

2882
02:13:06,000 --> 02:13:10,079
all right well thanks everyone thanks

2883
02:13:07,840 --> 02:13:13,920
everyone seems to go pretty well

2884
02:13:10,079 --> 02:13:16,159
yeah thank you yeah

2885
02:13:13,920 --> 02:13:18,400
this was this was better than the last

2886
02:13:16,159 --> 02:13:31,839
uh online meeting

2887
02:13:18,400 --> 02:13:31,839
yeah i agree yeah all right ciao

