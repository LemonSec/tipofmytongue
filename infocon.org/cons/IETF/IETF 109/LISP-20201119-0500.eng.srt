1
00:01:10,840 --> 00:01:13,840
so

2
00:01:19,759 --> 00:01:23,520
hello everybody i guess it's time to

3
00:01:22,560 --> 00:01:25,759
start today

4
00:01:23,520 --> 00:01:27,119
welcome to the lisp working group

5
00:01:25,759 --> 00:01:30,479
session

6
00:01:27,119 --> 00:01:32,560
okay i'm luigi anony online is also joel

7
00:01:30,479 --> 00:01:35,520
alpern i'm my co-chair

8
00:01:32,560 --> 00:01:36,400
and we have also padma our secretary

9
00:01:35,520 --> 00:01:40,158
which is listed

10
00:01:36,400 --> 00:01:44,640
among the participants

11
00:01:40,159 --> 00:01:44,640
do you guys uh hear me loud and here

12
00:01:49,360 --> 00:01:53,360
somebody what's up i can hear you i'm

13
00:01:51,840 --> 00:01:57,360
here

14
00:01:53,360 --> 00:01:58,560
okay on the screen in front now you have

15
00:01:57,360 --> 00:02:01,439
the note well

16
00:01:58,560 --> 00:02:02,320
you should be used to it everything is

17
00:02:01,439 --> 00:02:04,719
say

18
00:02:02,320 --> 00:02:07,119
there is a register at the uniq mythical

19
00:02:04,719 --> 00:02:12,319
is a contribution to the

20
00:02:07,119 --> 00:02:12,319
itf and maybe published publicly okay

21
00:02:13,280 --> 00:02:19,680
um the usual pointers

22
00:02:16,640 --> 00:02:23,040
okay the jabber room which is actually

23
00:02:19,680 --> 00:02:23,040
integrated with the mythical

24
00:02:24,000 --> 00:02:28,239
video stream and the slides everything

25
00:02:27,120 --> 00:02:31,920
is on the

26
00:02:28,239 --> 00:02:36,400
material page a quick update

27
00:02:31,920 --> 00:02:39,760
this was 108 we

28
00:02:36,400 --> 00:02:44,800
i mean we do progress slowly slowly

29
00:02:39,760 --> 00:02:46,879
these are the changes until yesterday

30
00:02:44,800 --> 00:02:48,720
the only thing that really changed is

31
00:02:46,879 --> 00:02:51,840
about um

32
00:02:48,720 --> 00:02:52,239
the beast documents we have less red in

33
00:02:51,840 --> 00:02:56,319
the

34
00:02:52,239 --> 00:02:59,760
isg ballot and actually during the night

35
00:02:56,319 --> 00:03:03,040
there was an exchange between albert and

36
00:02:59,760 --> 00:03:06,480
roman and we have

37
00:03:03,040 --> 00:03:10,239
one less red dot in the

38
00:03:06,480 --> 00:03:12,879
68 30 piece document okay

39
00:03:10,239 --> 00:03:13,280
so we just need to clear one discuss

40
00:03:12,879 --> 00:03:16,640
from

41
00:03:13,280 --> 00:03:20,720
eric in the 6830

42
00:03:16,640 --> 00:03:21,679
and one from martin in 68 33 i guess

43
00:03:20,720 --> 00:03:25,920
i'll bet we

44
00:03:21,680 --> 00:03:29,840
could speak about that so

45
00:03:25,920 --> 00:03:31,839
the agenda uh as usual that will give us

46
00:03:29,840 --> 00:03:33,360
a quick update about the police

47
00:03:31,840 --> 00:03:35,680
documents

48
00:03:33,360 --> 00:03:36,560
i will open a bottle of champagne once

49
00:03:35,680 --> 00:03:38,959
we are done with

50
00:03:36,560 --> 00:03:39,599
these two documents it's been a lot of

51
00:03:38,959 --> 00:03:42,640
work

52
00:03:39,599 --> 00:03:43,200
especially for albert and then we will

53
00:03:42,640 --> 00:03:46,238
have

54
00:03:43,200 --> 00:03:50,159
alberto giving us an update on the

55
00:03:46,239 --> 00:03:51,440
pops up document now in the schedule we

56
00:03:50,159 --> 00:03:54,798
have

57
00:03:51,440 --> 00:03:58,720
sharon speaking a

58
00:03:54,799 --> 00:04:02,640
position about network hexagons

59
00:03:58,720 --> 00:04:03,359
but actually he's also speaking maybe

60
00:04:02,640 --> 00:04:06,559
right now

61
00:04:03,360 --> 00:04:10,000
in the corneal g

62
00:04:06,560 --> 00:04:12,879
meeting so

63
00:04:10,000 --> 00:04:14,959
if he's late it's running late for any

64
00:04:12,879 --> 00:04:18,880
reason we will postpone his talk

65
00:04:14,959 --> 00:04:19,280
later on okay and we will give priority

66
00:04:18,880 --> 00:04:22,560
to

67
00:04:19,279 --> 00:04:24,320
albert which will give us an update on

68
00:04:22,560 --> 00:04:27,520
the naturopath

69
00:04:24,320 --> 00:04:29,919
document then dino

70
00:04:27,520 --> 00:04:31,039
on the uh his distinguished name

71
00:04:29,919 --> 00:04:32,639
encoding

72
00:04:31,040 --> 00:04:34,160
there's been some discussion about this

73
00:04:32,639 --> 00:04:38,320
on the mailing list

74
00:04:34,160 --> 00:04:43,360
and the last talk scheduled today is

75
00:04:38,320 --> 00:04:46,639
uh charlie she

76
00:04:43,360 --> 00:04:48,080
show us a real deployment of lisbon

77
00:04:46,639 --> 00:04:51,040
campus network as well

78
00:04:48,080 --> 00:04:51,919
as i have understood the the long title

79
00:04:51,040 --> 00:04:54,080
that you can see is

80
00:04:51,919 --> 00:04:55,919
sd access practical experience in

81
00:04:54,080 --> 00:04:57,599
designing and deploying software-defined

82
00:04:55,919 --> 00:05:01,520
enterprise networks

83
00:04:57,600 --> 00:05:06,080
okay has anybody any comment

84
00:05:01,520 --> 00:05:06,080
on the on the agenda

85
00:05:09,440 --> 00:05:15,440
i take silence for no and

86
00:05:12,880 --> 00:05:16,080
just to be clear i will i think it's

87
00:05:15,440 --> 00:05:19,440
better if

88
00:05:16,080 --> 00:05:21,758
i run the slides for everybody okay

89
00:05:19,440 --> 00:05:22,800
so just give me the the time to to

90
00:05:21,759 --> 00:05:26,160
switch the

91
00:05:22,800 --> 00:05:30,080
slide deck and then when you speak just

92
00:05:26,160 --> 00:05:32,320
say next and i move forward the slides

93
00:05:30,080 --> 00:05:32,320
okay

94
00:05:36,840 --> 00:05:40,479
okay that case

95
00:05:40,880 --> 00:05:44,560
we will move to albert

96
00:05:44,960 --> 00:05:53,840
i will stop my camera

97
00:06:00,880 --> 00:06:07,360
here with you good morning good morning

98
00:06:05,919 --> 00:06:12,000
doing fine

99
00:06:07,360 --> 00:06:12,000
ah a little bit sleepy and that's fine

100
00:06:13,199 --> 00:06:17,039
yeah yeah but i mean our colleagues in

101
00:06:16,479 --> 00:06:20,080
u.s

102
00:06:17,039 --> 00:06:20,080
are worse than us

103
00:06:33,600 --> 00:06:38,080
okay so um so i'm going to give the

104
00:06:36,400 --> 00:06:40,000
let's call it traditional update

105
00:06:38,080 --> 00:06:41,520
um and i hope that this is the last one

106
00:06:40,000 --> 00:06:43,840
because i believe that we are very close

107
00:06:41,520 --> 00:06:48,159
to finishing so if you

108
00:06:43,840 --> 00:06:49,359
uh go to next slide paste so as um rudy

109
00:06:48,160 --> 00:06:52,240
was saying we

110
00:06:49,360 --> 00:06:53,680
posted three three three revisions since

111
00:06:52,240 --> 00:06:55,680
last 80th

112
00:06:53,680 --> 00:06:58,560
for the data plane and two for the

113
00:06:55,680 --> 00:07:00,960
control plane and and now we are only

114
00:06:58,560 --> 00:07:01,599
down to uh one discussed for each

115
00:07:00,960 --> 00:07:05,359
document

116
00:07:01,599 --> 00:07:09,120
and and the discuss are really

117
00:07:05,360 --> 00:07:11,039
i don't want the same minor things

118
00:07:09,120 --> 00:07:13,199
because they are discussed right but uh

119
00:07:11,039 --> 00:07:15,039
at least they are super easy to fix and

120
00:07:13,199 --> 00:07:16,240
and i have already replied to both eric

121
00:07:15,039 --> 00:07:19,440
and martin

122
00:07:16,240 --> 00:07:20,319
so hopefully they clear the discuss and

123
00:07:19,440 --> 00:07:23,520
and we're pretty much

124
00:07:20,319 --> 00:07:26,960
done so next slide

125
00:07:23,520 --> 00:07:29,359
so i have one slide per um per document

126
00:07:26,960 --> 00:07:32,560
specifying what has been changed

127
00:07:29,360 --> 00:07:34,800
for data plane we have pretty much

128
00:07:32,560 --> 00:07:37,280
clarified some different aspects

129
00:07:34,800 --> 00:07:40,400
uh i would say that the most relevant

130
00:07:37,280 --> 00:07:42,960
ones are the limitations for icmp

131
00:07:40,400 --> 00:07:44,090
in the case for the use of icmp in the

132
00:07:42,960 --> 00:07:45,599
case of past

133
00:07:44,090 --> 00:07:48,638
[Music]

134
00:07:45,599 --> 00:07:50,479
passenger discovery and also clarified

135
00:07:48,639 --> 00:07:52,319
that the instance id is not protected

136
00:07:50,479 --> 00:07:53,520
and when they are carrying villain

137
00:07:52,319 --> 00:07:56,560
attacks

138
00:07:53,520 --> 00:07:59,520
on path attackers can change them and

139
00:07:56,560 --> 00:08:03,039
next slide

140
00:07:59,520 --> 00:08:05,440
and then data plane has more changes uh

141
00:08:03,039 --> 00:08:08,000
we have removed a bunch of text related

142
00:08:05,440 --> 00:08:11,280
to verifying map requests

143
00:08:08,000 --> 00:08:13,680
of what was the the use

144
00:08:11,280 --> 00:08:15,198
some specification of what you should do

145
00:08:13,680 --> 00:08:17,360
when you receive piggyback

146
00:08:15,199 --> 00:08:18,960
data on the map request and we have

147
00:08:17,360 --> 00:08:19,919
removed uh pretty much all the tax

148
00:08:18,960 --> 00:08:23,120
related to that

149
00:08:19,919 --> 00:08:26,799
we have also elevated uh

150
00:08:23,120 --> 00:08:28,160
a must and a shoot for the different um

151
00:08:26,800 --> 00:08:31,520
[Music]

152
00:08:28,160 --> 00:08:33,519
crypto shoots for the mob register

153
00:08:31,520 --> 00:08:34,799
then we have also clarified what happens

154
00:08:33,519 --> 00:08:36,959
when the record count

155
00:08:34,799 --> 00:08:38,559
that the record count can actually be

156
00:08:36,958 --> 00:08:41,919
larger than the

157
00:08:38,559 --> 00:08:44,159
requested count because you may have

158
00:08:41,919 --> 00:08:47,279
more specifics

159
00:08:44,159 --> 00:08:47,760
also specified uh better the use of the

160
00:08:47,279 --> 00:08:50,240
salt

161
00:08:47,760 --> 00:08:51,519
in the kvs mechanism because it was not

162
00:08:50,240 --> 00:08:55,120
clear how to use it

163
00:08:51,519 --> 00:08:58,399
for different messages and then

164
00:08:55,120 --> 00:09:00,399
some clarifications on how actually map

165
00:08:58,399 --> 00:09:04,240
notifies and mammoth device

166
00:09:00,399 --> 00:09:04,240
acknowledgements are retransmitted

167
00:09:04,560 --> 00:09:11,040
and that's it from my side with you

168
00:09:08,560 --> 00:09:11,760
okay thank you very much albert is there

169
00:09:11,040 --> 00:09:15,040
any

170
00:09:11,760 --> 00:09:15,040
question from the audience

171
00:09:21,120 --> 00:09:26,399
nobody in the queue nobody's speaking up

172
00:09:24,320 --> 00:09:28,080
take it as i know everything is clear

173
00:09:26,399 --> 00:09:36,880
thank you very much

174
00:09:28,080 --> 00:09:39,839
thank you

175
00:09:36,880 --> 00:09:42,240
alberto up to you like putting up the

176
00:09:39,839 --> 00:09:42,240
slides

177
00:09:42,320 --> 00:09:45,040
you can do that

178
00:09:45,760 --> 00:09:50,959
i can hear you all right

179
00:09:48,800 --> 00:09:50,959
right

180
00:10:03,360 --> 00:10:07,040
we had a a long discussion on on pops up

181
00:10:06,160 --> 00:10:09,920
and we made some

182
00:10:07,040 --> 00:10:11,920
complete progress basically to

183
00:10:09,920 --> 00:10:14,719
definitely update on the document

184
00:10:11,920 --> 00:10:15,439
but especially to discuss with the

185
00:10:14,720 --> 00:10:18,880
working group

186
00:10:15,440 --> 00:10:18,880
some comments as we talked to

187
00:10:24,959 --> 00:10:34,239
let's go to the supply these are the

188
00:10:32,720 --> 00:10:35,920
the summary of changes in the last

189
00:10:34,240 --> 00:10:38,720
version um

190
00:10:35,920 --> 00:10:40,000
basically the big tank of changes were

191
00:10:38,720 --> 00:10:42,480
about

192
00:10:40,000 --> 00:10:43,120
how to establish a security resistance

193
00:10:42,480 --> 00:10:45,760
between

194
00:10:43,120 --> 00:10:47,279
the ipf and of course without requiring

195
00:10:45,760 --> 00:10:50,880
this charge everyone

196
00:10:47,279 --> 00:10:52,240
and the the design that we

197
00:10:50,880 --> 00:10:54,480
wrote down in the document after the

198
00:10:52,240 --> 00:10:56,880
discussion with the working group

199
00:10:54,480 --> 00:10:58,800
can be summarized and that we use listic

200
00:10:56,880 --> 00:11:02,000
to study that computer vision and

201
00:10:58,800 --> 00:11:03,599
basically you derive a popular key

202
00:11:02,000 --> 00:11:06,000
from there from the attic that you

203
00:11:03,600 --> 00:11:07,279
change and you know the details that

204
00:11:06,000 --> 00:11:10,720
are in the document they are not that

205
00:11:07,279 --> 00:11:10,720
that's accomplished um

206
00:11:11,839 --> 00:11:16,720
and another minor change we might need

207
00:11:14,959 --> 00:11:19,119
another thing that we did there was that

208
00:11:16,720 --> 00:11:21,920
the the known

209
00:11:19,120 --> 00:11:23,680
recap on the on the top of operations

210
00:11:21,920 --> 00:11:29,839
has to be

211
00:11:23,680 --> 00:11:29,839
for both skd flash kd records

212
00:11:30,720 --> 00:11:34,399
now we are saying that it should be

213
00:11:32,000 --> 00:11:37,600
freshly and negative

214
00:11:34,399 --> 00:11:37,600
so let's go to the next one

215
00:11:38,640 --> 00:11:44,480
and and this is what i wanted to the

216
00:11:41,839 --> 00:11:45,760
of the working group so we had this like

217
00:11:44,480 --> 00:11:48,959
the early review

218
00:11:45,760 --> 00:11:50,160
um and i just realized when i was in the

219
00:11:48,959 --> 00:11:52,800
slide that

220
00:11:50,160 --> 00:11:54,000
the working group was not in in history

221
00:11:52,800 --> 00:11:56,160
on the on the review

222
00:11:54,000 --> 00:11:57,920
although the review has in public

223
00:11:56,160 --> 00:11:59,120
attractive for anyone with interesting

224
00:11:57,920 --> 00:12:01,279
subs like that

225
00:11:59,120 --> 00:12:03,839
but i just i forgot that there you go to

226
00:12:01,279 --> 00:12:08,160
the working group just in case

227
00:12:03,839 --> 00:12:10,639
but basically what the review was saying

228
00:12:08,160 --> 00:12:11,920
that the main point was that he has been

229
00:12:10,639 --> 00:12:15,360
looking at different

230
00:12:11,920 --> 00:12:18,639
documents and he saw that the term noise

231
00:12:15,360 --> 00:12:20,079
if you were seeing in the document and

232
00:12:18,639 --> 00:12:21,920
that's what he understands more as a

233
00:12:20,079 --> 00:12:24,959
token because

234
00:12:21,920 --> 00:12:27,199
we we use the nouns as as you know

235
00:12:24,959 --> 00:12:28,719
now we we increase then and we compare

236
00:12:27,200 --> 00:12:31,279
the the number the the

237
00:12:28,720 --> 00:12:32,880
the token oh sorry the nonce is greater

238
00:12:31,279 --> 00:12:35,360
than the previous nodes to

239
00:12:32,880 --> 00:12:37,680
prevent reply attacks and so on and he

240
00:12:35,360 --> 00:12:40,959
understands that as an inconsistency

241
00:12:37,680 --> 00:12:43,439
itf executive glossary on that rfc

242
00:12:40,959 --> 00:12:44,800
so i'm copying the the definition from

243
00:12:43,440 --> 00:12:46,639
that rfc

244
00:12:44,800 --> 00:12:48,000
the definition of nouns from that rfc

245
00:12:46,639 --> 00:12:49,600
there and

246
00:12:48,000 --> 00:12:51,120
the question i have for the working

247
00:12:49,600 --> 00:12:53,680
group is

248
00:12:51,120 --> 00:12:56,320
because this is not only a pub sub scene

249
00:12:53,680 --> 00:12:58,719
so pub sub is just following the

250
00:12:56,320 --> 00:12:59,440
the the way we use nones in in other

251
00:12:58,720 --> 00:13:03,600
places in

252
00:12:59,440 --> 00:13:05,600
english so do we believe that the way we

253
00:13:03,600 --> 00:13:07,920
use the word non is fine on the

254
00:13:05,600 --> 00:13:11,600
documents how we

255
00:13:07,920 --> 00:13:12,399
rethink that also we you know just say

256
00:13:11,600 --> 00:13:14,480
to

257
00:13:12,399 --> 00:13:16,079
reply to chris that that we believe that

258
00:13:14,480 --> 00:13:20,160
we are within the definition

259
00:13:16,079 --> 00:13:22,000
of rsc 4949 the second i'm gonna pause

260
00:13:20,160 --> 00:13:25,199
here and see if anyone has

261
00:13:22,000 --> 00:13:25,200
any any comment on this

262
00:13:28,720 --> 00:13:32,880
so this is alberta so we have the same

263
00:13:31,680 --> 00:13:35,120
issue for uh

264
00:13:32,880 --> 00:13:37,439
for the big document but at the end i

265
00:13:35,120 --> 00:13:40,480
believe that they accepted the terminal

266
00:13:37,440 --> 00:13:43,839
because it has been used

267
00:13:40,480 --> 00:13:45,839
in the past for so long that it was

268
00:13:43,839 --> 00:13:49,600
hard to think but i don't know if this

269
00:13:45,839 --> 00:13:53,120
applies here

270
00:13:49,600 --> 00:13:53,519
i've seen it soon right yeah my take on

271
00:13:53,120 --> 00:13:57,040
this

272
00:13:53,519 --> 00:13:57,920
is that in my opinion we should keep

273
00:13:57,040 --> 00:14:01,199
noise

274
00:13:57,920 --> 00:14:04,319
i understand the review and

275
00:14:01,199 --> 00:14:06,800
probably we somehow did

276
00:14:04,320 --> 00:14:08,560
not a mistake what was not the correct

277
00:14:06,800 --> 00:14:11,120
attempt to use for knowledge

278
00:14:08,560 --> 00:14:11,680
anyway if we change it in this document

279
00:14:11,120 --> 00:14:14,560
we'll be

280
00:14:11,680 --> 00:14:16,079
inconsistent with the other documents

281
00:14:14,560 --> 00:14:19,359
and uh

282
00:14:16,079 --> 00:14:22,479
that's not true might be

283
00:14:19,360 --> 00:14:24,880
might be maybe uh something to to to put

284
00:14:22,480 --> 00:14:28,320
in the document is somewhere just a

285
00:14:24,880 --> 00:14:31,839
sense a sentence that says

286
00:14:28,320 --> 00:14:34,959
we use those mouse uh yeah to be

287
00:14:31,839 --> 00:14:38,560
consistent with the main specs of list

288
00:14:34,959 --> 00:14:40,880
uh because but he if we look the

289
00:14:38,560 --> 00:14:44,399
definition then

290
00:14:40,880 --> 00:14:48,399
the rfc 4949 security glossary

291
00:14:44,399 --> 00:14:51,279
this would be categorized like a token

292
00:14:48,399 --> 00:14:51,600
just take it as it is but we keep nose

293
00:14:51,279 --> 00:14:55,439
for

294
00:14:51,600 --> 00:14:59,839
for consistency a simple sentence to add

295
00:14:55,440 --> 00:14:59,839
somewhere i don't know

296
00:15:05,519 --> 00:15:09,040
sentence what do you see

297
00:15:09,440 --> 00:15:14,959
that works for me luigi if

298
00:15:12,720 --> 00:15:16,880
if there are no arguments against that

299
00:15:14,959 --> 00:15:18,959
approach from the working group i'm i'm

300
00:15:16,880 --> 00:15:21,760
perfectly fine with that

301
00:15:18,959 --> 00:15:22,319
and certainly i don't want to to have to

302
00:15:21,760 --> 00:15:23,920
change

303
00:15:22,320 --> 00:15:26,320
other documents i think we can keep

304
00:15:23,920 --> 00:15:28,719
non-success okay

305
00:15:26,320 --> 00:15:30,560
hello can you hear me this is dino yes

306
00:15:28,720 --> 00:15:32,320
we can dinner yes

307
00:15:30,560 --> 00:15:34,239
uh yeah i think we shouldn't change it

308
00:15:32,320 --> 00:15:37,360
at all and plus

309
00:15:34,240 --> 00:15:38,560
you know adding extra sentences with new

310
00:15:37,360 --> 00:15:41,680
terminology

311
00:15:38,560 --> 00:15:43,199
um just adds a term that's not going to

312
00:15:41,680 --> 00:15:44,638
be used anywhere

313
00:15:43,199 --> 00:15:46,880
and you know how many occurrences of

314
00:15:44,639 --> 00:15:50,079
nonce we have across all the documents

315
00:15:46,880 --> 00:15:52,839
it it's just this is just busy work

316
00:15:50,079 --> 00:15:55,040
and i don't think we should make any

317
00:15:52,839 --> 00:15:56,639
changes

318
00:15:55,040 --> 00:15:58,719
so dina your point is that we should

319
00:15:56,639 --> 00:15:59,920
probably reply to chris stating what

320
00:15:58,720 --> 00:16:03,120
albert said before

321
00:15:59,920 --> 00:16:04,639
that that we we are using nouns and and

322
00:16:03,120 --> 00:16:06,839
that's what the rest of the documents

323
00:16:04,639 --> 00:16:09,839
did yes

324
00:16:06,839 --> 00:16:09,839
okay

325
00:16:12,079 --> 00:16:15,279
okay yeah i'm fine with whatever the

326
00:16:14,399 --> 00:16:17,600
working group

327
00:16:15,279 --> 00:16:19,439
thinks and this we can maybe start with

328
00:16:17,600 --> 00:16:22,160
just trying to decrease along

329
00:16:19,440 --> 00:16:24,240
the lines that albert said and see if he

330
00:16:22,160 --> 00:16:25,519
agrees with that and and if not we can

331
00:16:24,240 --> 00:16:27,759
maybe explore what what the lord you

332
00:16:25,519 --> 00:16:29,759
guys were suggesting so i think we have

333
00:16:27,759 --> 00:16:32,399
a plan

334
00:16:29,759 --> 00:16:35,040
okay so maybe let's go to the next uh

335
00:16:32,399 --> 00:16:37,680
slide reading

336
00:16:35,040 --> 00:16:39,120
so this is the other comment uh that uh

337
00:16:37,680 --> 00:16:40,800
chris put on the review

338
00:16:39,120 --> 00:16:42,560
that i finished you see two others that

339
00:16:40,800 --> 00:16:44,399
is what to do when the when the

340
00:16:42,560 --> 00:16:46,800
value of the knowledge is the first

341
00:16:44,399 --> 00:16:49,040
space and and here i think the

342
00:16:46,800 --> 00:16:50,560
the answer is what we have said in in

343
00:16:49,040 --> 00:16:53,199
other cases in the past that the

344
00:16:50,560 --> 00:16:55,758
the feeder space should be big enough to

345
00:16:53,199 --> 00:16:57,758
accommodate with plenty of updates

346
00:16:55,759 --> 00:16:59,120
and i'm i'm doing some some numbers that

347
00:16:57,759 --> 00:17:01,600
i i will check like

348
00:16:59,120 --> 00:17:02,880
three times i i am sure that they are

349
00:17:01,600 --> 00:17:05,919
right still

350
00:17:02,880 --> 00:17:09,280
um so if we assume

351
00:17:05,919 --> 00:17:12,000
one update the hd pediatric record

352
00:17:09,280 --> 00:17:13,119
per second so that's a lot of updates

353
00:17:12,000 --> 00:17:15,439
actually

354
00:17:13,119 --> 00:17:16,799
we will you know run out of nonsense in

355
00:17:15,439 --> 00:17:18,000
i don't know how many years that's a

356
00:17:16,799 --> 00:17:20,160
very big number

357
00:17:18,000 --> 00:17:21,039
so i think that we are probably safe

358
00:17:20,160 --> 00:17:23,600
saying that

359
00:17:21,039 --> 00:17:24,079
we are not gonna exceed the the field

360
00:17:23,599 --> 00:17:26,480
space

361
00:17:24,079 --> 00:17:27,678
especially now that we did that change

362
00:17:26,480 --> 00:17:29,440
uh that the

363
00:17:27,679 --> 00:17:31,919
the nuances are very extremely periodic

364
00:17:29,440 --> 00:17:32,880
record so so the space that we have is

365
00:17:31,919 --> 00:17:37,200
beginner

366
00:17:32,880 --> 00:17:40,400
for those updates and then the

367
00:17:37,200 --> 00:17:41,120
may i ask a question uh of course yes i

368
00:17:40,400 --> 00:17:45,919
bet

369
00:17:41,120 --> 00:17:47,760
um did you specify the fact that i mean

370
00:17:45,919 --> 00:17:50,960
but the fact that

371
00:17:47,760 --> 00:17:54,640
once you reach the the top i mean

372
00:17:50,960 --> 00:17:56,240
2 power 64 minus 1 then you wrap around

373
00:17:54,640 --> 00:17:58,720
to zero

374
00:17:56,240 --> 00:18:00,640
and then there is the usual thing you

375
00:17:58,720 --> 00:18:02,799
know

376
00:18:00,640 --> 00:18:04,000
you take half of the space before the

377
00:18:02,799 --> 00:18:07,360
value is

378
00:18:04,000 --> 00:18:11,280
minor half of the space in the front is

379
00:18:07,360 --> 00:18:15,360
uh is an increase so zero is

380
00:18:11,280 --> 00:18:18,639
uh is bigger than 2 power 64

381
00:18:15,360 --> 00:18:21,600
minus 1 you see it's around space

382
00:18:18,640 --> 00:18:21,919
just to state that yeah at some point

383
00:18:21,600 --> 00:18:25,280
you

384
00:18:21,919 --> 00:18:28,640
wrap around but the space is so huge

385
00:18:25,280 --> 00:18:32,240
that you don't have any any doubt

386
00:18:28,640 --> 00:18:35,280
that is well specified

387
00:18:32,240 --> 00:18:37,280
you see what i mean yes and

388
00:18:35,280 --> 00:18:39,360
yeah you're making a good point i don't

389
00:18:37,280 --> 00:18:41,280
think yeah i took that for granted

390
00:18:39,360 --> 00:18:43,439
but i'm checking the document right now

391
00:18:41,280 --> 00:18:44,320
and i don't think we we specify that i

392
00:18:43,440 --> 00:18:47,200
mean which is

393
00:18:44,320 --> 00:18:48,399
uh you know what you would expect yeah

394
00:18:47,200 --> 00:18:50,080
yeah i understand

395
00:18:48,400 --> 00:18:51,679
i take it for granted as well but you

396
00:18:50,080 --> 00:18:54,960
know better be clear

397
00:18:51,679 --> 00:18:56,559
no yeah i agree okay that's that's a

398
00:18:54,960 --> 00:18:58,400
good thing we can make yeah we can add a

399
00:18:56,559 --> 00:19:00,559
sentence for for the others that's fine

400
00:18:58,400 --> 00:19:00,559
yeah

401
00:19:01,440 --> 00:19:07,600
okay so then you know

402
00:19:04,559 --> 00:19:09,120
yeah in previous protocols um when

403
00:19:07,600 --> 00:19:10,240
you're comparing sequence numbers that

404
00:19:09,120 --> 00:19:12,000
wrap around

405
00:19:10,240 --> 00:19:13,679
you usually look at the old sequence

406
00:19:12,000 --> 00:19:16,400
number and if it's in

407
00:19:13,679 --> 00:19:18,080
the upper half of the space and you're

408
00:19:16,400 --> 00:19:20,240
comparing it to a new sequence number

409
00:19:18,080 --> 00:19:21,918
which is in the lower half of the space

410
00:19:20,240 --> 00:19:23,520
then the ladder is greater than the

411
00:19:21,919 --> 00:19:27,840
former

412
00:19:23,520 --> 00:19:27,840
right yeah exactly right exactly

413
00:19:28,000 --> 00:19:31,760
no that makes complete sense okay

414
00:19:32,720 --> 00:19:36,559
so the the very last slide if we go

415
00:19:35,120 --> 00:19:40,000
there is just to say

416
00:19:36,559 --> 00:19:42,799
um so once we you know we put these the

417
00:19:40,000 --> 00:19:43,840
two words about the wrapping notes and

418
00:19:42,799 --> 00:19:46,000
we get back to

419
00:19:43,840 --> 00:19:47,280
to chris and the on the comic he made on

420
00:19:46,000 --> 00:19:50,000
the notes

421
00:19:47,280 --> 00:19:50,639
uh i don't think i i don't know what

422
00:19:50,000 --> 00:19:52,080
else is to

423
00:19:50,640 --> 00:19:54,000
be done on this document so i think we

424
00:19:52,080 --> 00:19:56,639
are ready for for last call

425
00:19:54,000 --> 00:19:58,080
so i will open the the floor now for

426
00:19:56,640 --> 00:20:00,000
anyone to

427
00:19:58,080 --> 00:20:01,600
comment on that or if not i think it's

428
00:20:00,000 --> 00:20:03,760
just a matter of publishing the

429
00:20:01,600 --> 00:20:06,959
new version and then sending it to the

430
00:20:03,760 --> 00:20:10,640
list for last call

431
00:20:06,960 --> 00:20:12,960
so i have two questions uh

432
00:20:10,640 --> 00:20:14,240
so the first one is maybe you meant to

433
00:20:12,960 --> 00:20:16,080
say uh

434
00:20:14,240 --> 00:20:17,760
working group adoption as far as i

435
00:20:16,080 --> 00:20:20,480
remember the documents still

436
00:20:17,760 --> 00:20:20,480
came again

437
00:20:33,360 --> 00:20:38,000
yeah yeah yeah yeah yeah yeah yeah sorry

438
00:20:36,000 --> 00:20:42,080
that was my mistake

439
00:20:38,000 --> 00:20:45,679
it was my mistake yeah i don't know

440
00:20:42,080 --> 00:20:50,720
i open the floor for any comments

441
00:20:45,679 --> 00:20:50,720
about lascal or on the documents itself

442
00:20:52,880 --> 00:20:55,360
last call

443
00:20:57,600 --> 00:21:03,840
i heard you dino

444
00:21:14,559 --> 00:21:16,960
you want to say

445
00:21:19,679 --> 00:21:23,120
i think that's the the two painting

446
00:21:21,760 --> 00:21:24,240
issues are the ones that are raised by

447
00:21:23,120 --> 00:21:26,719
the everything by the

448
00:21:24,240 --> 00:21:28,480
holistic director review and this one

449
00:21:26,720 --> 00:21:30,400
had really manual ones that you can

450
00:21:28,480 --> 00:21:31,919
really handle and i think that yeah they

451
00:21:30,400 --> 00:21:34,480
do have just here from such

452
00:21:31,919 --> 00:21:35,520
a while and the um many iterations even

453
00:21:34,480 --> 00:21:37,679
if yeah

454
00:21:35,520 --> 00:21:38,559
we are a little bit slow in the in the

455
00:21:37,679 --> 00:21:40,960
published

456
00:21:38,559 --> 00:21:41,678
version i think that the the document is

457
00:21:40,960 --> 00:21:44,400
really um

458
00:21:41,679 --> 00:21:47,280
stable enough and it is really ready for

459
00:21:44,400 --> 00:21:47,280
the workings right

460
00:21:49,120 --> 00:21:54,399
okay thanks for that matt thank you very

461
00:21:52,159 --> 00:21:54,400
much

462
00:21:56,240 --> 00:22:01,280
so that's all i have okay

463
00:21:59,360 --> 00:22:02,799
what i can say is that i i agree with

464
00:22:01,280 --> 00:22:05,600
matt the the

465
00:22:02,799 --> 00:22:06,480
document is stable if you fix the things

466
00:22:05,600 --> 00:22:09,760
that you

467
00:22:06,480 --> 00:22:11,440
just discussed since we discuss it today

468
00:22:09,760 --> 00:22:12,400
we can take it to the list for the last

469
00:22:11,440 --> 00:22:15,440
call

470
00:22:12,400 --> 00:22:18,640
i mean okay okay

471
00:22:15,440 --> 00:22:24,080
sounds good thank you yeah

472
00:22:18,640 --> 00:22:24,080
okay thank you very much oh thank you

473
00:22:25,200 --> 00:22:31,760
so it's did sharon

474
00:22:28,240 --> 00:22:33,919
join us i would say

475
00:22:31,760 --> 00:22:33,919
no

476
00:22:36,159 --> 00:22:43,840
no so albert lopez

477
00:22:40,960 --> 00:22:47,280
uh we have to make the distinction here

478
00:22:43,840 --> 00:22:50,639
too many albert and alberto

479
00:22:47,280 --> 00:22:55,840
so not reversal um let me put up

480
00:22:50,640 --> 00:22:55,840
the slides

481
00:23:01,919 --> 00:23:06,320
here we go can you hear me

482
00:23:06,840 --> 00:23:11,840
yes okay

483
00:23:08,480 --> 00:23:14,799
so i will try to present

484
00:23:11,840 --> 00:23:18,959
some modifications that we have done in

485
00:23:14,799 --> 00:23:23,679
the graph document in the last cdf

486
00:23:18,960 --> 00:23:26,159
edition next slide

487
00:23:23,679 --> 00:23:26,799
let's explain that in the presentation

488
00:23:26,159 --> 00:23:29,840
of

489
00:23:26,799 --> 00:23:31,918
the uh the last edition an

490
00:23:29,840 --> 00:23:33,678
art is a critical point in current

491
00:23:31,919 --> 00:23:36,080
appointments especially for

492
00:23:33,679 --> 00:23:37,600
these mobile note devices that are

493
00:23:36,080 --> 00:23:40,559
constantly moving

494
00:23:37,600 --> 00:23:41,918
and changing the direct endpoint

495
00:23:40,559 --> 00:23:44,879
connections

496
00:23:41,919 --> 00:23:46,080
the main changes of the draft present in

497
00:23:44,880 --> 00:23:48,960
this document

498
00:23:46,080 --> 00:23:50,320
are focused on the updates of mappings

499
00:23:48,960 --> 00:23:52,480
like the

500
00:23:50,320 --> 00:23:55,360
produced when changing from nut to no

501
00:23:52,480 --> 00:23:57,919
nut or changing the rtr

502
00:23:55,360 --> 00:23:57,918
next slide

503
00:23:59,039 --> 00:24:05,760
as a first step when an xtr receive

504
00:24:02,480 --> 00:24:07,840
anywhere log is to check if

505
00:24:05,760 --> 00:24:09,840
it is behind not by sending an info

506
00:24:07,840 --> 00:24:12,639
request to map server

507
00:24:09,840 --> 00:24:13,918
and processing the received info reply

508
00:24:12,640 --> 00:24:16,960
if the device was

509
00:24:13,919 --> 00:24:18,320
previously using net and the newer log

510
00:24:16,960 --> 00:24:21,679
is also behind that

511
00:24:18,320 --> 00:24:24,399
using the same rtr we only need

512
00:24:21,679 --> 00:24:26,640
to update the catch entry of the rtr by

513
00:24:24,400 --> 00:24:29,919
sending an encapsulated pump register

514
00:24:26,640 --> 00:24:30,640
to the map server through the rtr for

515
00:24:29,919 --> 00:24:33,919
any other

516
00:24:30,640 --> 00:24:36,559
scenarios we need to notify remote idrs

517
00:24:33,919 --> 00:24:36,559
and proxies

518
00:24:36,960 --> 00:24:43,520
in the draft we point to

519
00:24:40,360 --> 00:24:46,879
6830p and 6833vs

520
00:24:43,520 --> 00:24:48,799
and pops up where i transcribe it the

521
00:24:46,880 --> 00:24:49,679
current methods to notify mappings

522
00:24:48,799 --> 00:24:53,600
updates

523
00:24:49,679 --> 00:24:56,080
but we recommend to use pubsubdraft

524
00:24:53,600 --> 00:24:57,439
as it is a faster mechanism to notify

525
00:24:56,080 --> 00:25:00,879
peers

526
00:24:57,440 --> 00:25:03,039
and it avoids the temporal increase

527
00:25:00,880 --> 00:25:04,080
of the path length associated with the

528
00:25:03,039 --> 00:25:07,760
nitty arts

529
00:25:04,080 --> 00:25:10,480
disassociation of an rtr

530
00:25:07,760 --> 00:25:12,799
in the draft we also indicate the option

531
00:25:10,480 --> 00:25:16,080
for the devices that can move from nut

532
00:25:12,799 --> 00:25:17,600
to no not like in the case of this

533
00:25:16,080 --> 00:25:21,279
mobile node devices

534
00:25:17,600 --> 00:25:23,120
to use an rtr as an anchor

535
00:25:21,279 --> 00:25:24,400
and in that way avoiding frequent

536
00:25:23,120 --> 00:25:30,239
notifications of our

537
00:25:24,400 --> 00:25:30,240
lock changes next slide please

538
00:25:31,840 --> 00:25:36,080
generally i'm having an update that

539
00:25:34,159 --> 00:25:39,679
needs to be notified

540
00:25:36,080 --> 00:25:42,000
involves an eid from an etr

541
00:25:39,679 --> 00:25:43,039
that was previously associated with an

542
00:25:42,000 --> 00:25:46,640
rtr

543
00:25:43,039 --> 00:25:47,600
and due to it is now using new rtr or a

544
00:25:46,640 --> 00:25:50,640
public address

545
00:25:47,600 --> 00:25:52,879
we need to remove this association

546
00:25:50,640 --> 00:25:54,000
the registration process described it is

547
00:25:52,880 --> 00:25:57,120
based on

548
00:25:54,000 --> 00:25:59,279
the eid mobility draft and involves that

549
00:25:57,120 --> 00:26:02,080
when the map server detects a change

550
00:25:59,279 --> 00:26:04,000
of the mapping it should notify the

551
00:26:02,080 --> 00:26:08,320
removed active air locks

552
00:26:04,000 --> 00:26:10,880
by sending an unsolicited map modify

553
00:26:08,320 --> 00:26:12,000
as a change to introduce in the draft to

554
00:26:10,880 --> 00:26:15,120
make possible

555
00:26:12,000 --> 00:26:15,760
this mechanism i will explain that the

556
00:26:15,120 --> 00:26:17,840
atr

557
00:26:15,760 --> 00:26:18,799
should mandatory register its local

558
00:26:17,840 --> 00:26:21,918
airlocks

559
00:26:18,799 --> 00:26:23,679
with the reachability v to zero

560
00:26:21,919 --> 00:26:25,520
in the previous version of the draft

561
00:26:23,679 --> 00:26:27,520
this was optional

562
00:26:25,520 --> 00:26:28,720
i will provide more details of this

563
00:26:27,520 --> 00:26:33,039
mechanism in the following

564
00:26:28,720 --> 00:26:33,039
slides next slide please

565
00:26:34,880 --> 00:26:42,080
this scenario consists of two xtrs

566
00:26:38,400 --> 00:26:46,559
a and b serving the same eid

567
00:26:42,080 --> 00:26:49,120
and both with one interface behind that

568
00:26:46,559 --> 00:26:49,120
next slide

569
00:26:49,919 --> 00:26:56,480
the xtra changed its airlock

570
00:26:53,520 --> 00:26:58,000
and now it is using a public address a

571
00:26:56,480 --> 00:27:00,880
prima

572
00:26:58,000 --> 00:27:01,919
once it has detected that is not behind

573
00:27:00,880 --> 00:27:04,080
nut

574
00:27:01,919 --> 00:27:05,440
it registers directly the new mapping to

575
00:27:04,080 --> 00:27:08,399
the map server

576
00:27:05,440 --> 00:27:09,279
so now the mapping for the eid is the

577
00:27:08,400 --> 00:27:11,760
one

578
00:27:09,279 --> 00:27:12,880
shot in the top right where the orange

579
00:27:11,760 --> 00:27:16,320
locators

580
00:27:12,880 --> 00:27:21,039
are the ones that will remove it

581
00:27:16,320 --> 00:27:23,600
next slide as we said before

582
00:27:21,039 --> 00:27:25,360
the map server sends an unsolicited map

583
00:27:23,600 --> 00:27:27,760
notified

584
00:27:25,360 --> 00:27:28,559
to leaving active earth locks in this

585
00:27:27,760 --> 00:27:31,840
case

586
00:27:28,559 --> 00:27:31,840
the rtr airlock

587
00:27:32,000 --> 00:27:38,320
next slide

588
00:27:35,440 --> 00:27:40,799
in this slide i will try to describe the

589
00:27:38,320 --> 00:27:44,158
behavior of the rtr when receiving an

590
00:27:40,799 --> 00:27:46,879
unsolicited map notify firstly

591
00:27:44,159 --> 00:27:50,320
the rtr check if any of the local

592
00:27:46,880 --> 00:27:54,240
locators associated with the xtr id

593
00:27:50,320 --> 00:27:56,080
of the eid map cache entry the red one

594
00:27:54,240 --> 00:27:57,520
are present in the record of the map

595
00:27:56,080 --> 00:28:00,559
notify

596
00:27:57,520 --> 00:28:02,720
if so the rtr use the information

597
00:28:00,559 --> 00:28:03,918
of the selected locator to forward the

598
00:28:02,720 --> 00:28:07,760
map notifier

599
00:28:03,919 --> 00:28:11,039
to the xtr to do so it replaced the

600
00:28:07,760 --> 00:28:14,399
destination address of the map notify

601
00:28:11,039 --> 00:28:17,520
from the rtr airlock to a local airlock

602
00:28:14,399 --> 00:28:20,000
of the xtr then it generates

603
00:28:17,520 --> 00:28:20,559
a data map notified that forwards to the

604
00:28:20,000 --> 00:28:23,440
xtr

605
00:28:20,559 --> 00:28:24,158
using the net state information of the

606
00:28:23,440 --> 00:28:27,360
selected

607
00:28:24,159 --> 00:28:27,360
and local airlock

608
00:28:28,000 --> 00:28:33,919
now we are in the eldest section

609
00:28:31,360 --> 00:28:34,719
where any of the local airlocks are

610
00:28:33,919 --> 00:28:37,760
registered

611
00:28:34,720 --> 00:28:41,039
in the web notify record this

612
00:28:37,760 --> 00:28:42,640
indicates to the rtr that the xtr with

613
00:28:41,039 --> 00:28:46,240
xtrid

614
00:28:42,640 --> 00:28:49,120
a has left the rtr

615
00:28:46,240 --> 00:28:50,399
as we cannot authenticate the map notify

616
00:28:49,120 --> 00:28:52,799
because the authentication

617
00:28:50,399 --> 00:28:54,719
data of the map notify is for the

618
00:28:52,799 --> 00:28:58,000
destination xtr

619
00:28:54,720 --> 00:29:01,760
we need to validate its information so

620
00:28:58,000 --> 00:29:04,640
we send we store the map modify record

621
00:29:01,760 --> 00:29:06,240
and request the mapping to the mapping

622
00:29:04,640 --> 00:29:08,640
system

623
00:29:06,240 --> 00:29:09,919
the replay is used to validate the map

624
00:29:08,640 --> 00:29:13,760
notify

625
00:29:09,919 --> 00:29:16,960
not to insert it in the catch otherwise

626
00:29:13,760 --> 00:29:19,840
in the example of this slide the rtr

627
00:29:16,960 --> 00:29:22,240
would lose the state associated with xtr

628
00:29:19,840 --> 00:29:24,639
idv

629
00:29:22,240 --> 00:29:25,279
once validated the map notify we can

630
00:29:24,640 --> 00:29:27,760
remove

631
00:29:25,279 --> 00:29:29,679
from the entry the locators associated

632
00:29:27,760 --> 00:29:34,480
with the xtr id

633
00:29:29,679 --> 00:29:37,760
a indicated in the map notify

634
00:29:34,480 --> 00:29:41,279
finally if the catch entry doesn't have

635
00:29:37,760 --> 00:29:43,679
any locator we can replace the catch

636
00:29:41,279 --> 00:29:45,520
entry with the map replace record

637
00:29:43,679 --> 00:29:47,440
and start to forward traffic to the

638
00:29:45,520 --> 00:29:50,080
valid destination airlocks until the

639
00:29:47,440 --> 00:29:54,000
entry expires

640
00:29:50,080 --> 00:29:56,158
next slide

641
00:29:54,000 --> 00:29:57,679
so in the example that we were

642
00:29:56,159 --> 00:30:01,120
explaining the rtr

643
00:29:57,679 --> 00:30:02,880
checks if local airlock a the one in red

644
00:30:01,120 --> 00:30:04,239
in the slide is present in the map

645
00:30:02,880 --> 00:30:07,120
notify record

646
00:30:04,240 --> 00:30:09,919
if the air lock was present the rtr will

647
00:30:07,120 --> 00:30:13,678
forward them and modify encapsulated

648
00:30:09,919 --> 00:30:16,720
in a data packet to the xtr a

649
00:30:13,679 --> 00:30:18,399
but as it is not the case this means

650
00:30:16,720 --> 00:30:23,039
that the xtr idea

651
00:30:18,399 --> 00:30:25,360
is not longer associated with the rtr

652
00:30:23,039 --> 00:30:26,080
we need to validate the map notify

653
00:30:25,360 --> 00:30:30,158
information

654
00:30:26,080 --> 00:30:32,720
so we store it and send a map request

655
00:30:30,159 --> 00:30:32,720
next slide

656
00:30:33,760 --> 00:30:38,399
the reply confirms the mapnotify

657
00:30:36,399 --> 00:30:40,719
information

658
00:30:38,399 --> 00:30:41,918
so now we can remove all locators

659
00:30:40,720 --> 00:30:45,440
associated with

660
00:30:41,919 --> 00:30:47,679
xdr ida here

661
00:30:45,440 --> 00:30:48,640
and the process of own registration of

662
00:30:47,679 --> 00:30:54,159
the xtr

663
00:30:48,640 --> 00:30:54,159
ida from the rtr next slide

664
00:30:56,159 --> 00:31:02,799
if the eid is only associated with

665
00:30:59,200 --> 00:31:05,519
xdr ida when it completes don't rush the

666
00:31:02,799 --> 00:31:06,158
unregistration process the id catch

667
00:31:05,519 --> 00:31:08,880
entry

668
00:31:06,159 --> 00:31:10,880
don't have any locator and in that case

669
00:31:08,880 --> 00:31:11,919
we replace the catch entry with the new

670
00:31:10,880 --> 00:31:14,159
one

671
00:31:11,919 --> 00:31:17,360
and we start to ring up straight traffic

672
00:31:14,159 --> 00:31:19,919
to the destination the new destination

673
00:31:17,360 --> 00:31:21,279
optionally we use the mechanism

674
00:31:19,919 --> 00:31:25,039
presented in the eid

675
00:31:21,279 --> 00:31:28,159
mobility draft to send reactive smrs

676
00:31:25,039 --> 00:31:30,158
to the remote itrs

677
00:31:28,159 --> 00:31:31,679
that are sending traffic to the aid

678
00:31:30,159 --> 00:31:34,559
through the rtr

679
00:31:31,679 --> 00:31:36,880
to notify them that have an old version

680
00:31:34,559 --> 00:31:39,440
of the mapping

681
00:31:36,880 --> 00:31:39,440
next slide

682
00:31:40,399 --> 00:31:47,360
regarding if an rtr receive an

683
00:31:43,840 --> 00:31:49,918
smr for a server server vid

684
00:31:47,360 --> 00:31:51,039
the rtr will request the new mapping to

685
00:31:49,919 --> 00:31:53,760
the mapping system

686
00:31:51,039 --> 00:31:54,240
but it will only replace the eid catch

687
00:31:53,760 --> 00:31:57,039
entry

688
00:31:54,240 --> 00:32:00,159
if the received record doesn't contain

689
00:31:57,039 --> 00:32:03,440
any locator of the rtr

690
00:32:00,159 --> 00:32:06,320
if the record contains an rtr locator

691
00:32:03,440 --> 00:32:06,799
it means that it exists at less one xtr

692
00:32:06,320 --> 00:32:10,158
that is

693
00:32:06,799 --> 00:32:10,879
still associated with the rtr and if we

694
00:32:10,159 --> 00:32:13,600
over

695
00:32:10,880 --> 00:32:17,039
overwrite the entry we will lose the net

696
00:32:13,600 --> 00:32:19,760
state user to function at

697
00:32:17,039 --> 00:32:19,760
next slide

698
00:32:20,640 --> 00:32:24,480
until here we presented the part of

699
00:32:22,799 --> 00:32:26,879
mapping updates

700
00:32:24,480 --> 00:32:28,320
now i will present a couple of more of

701
00:32:26,880 --> 00:32:31,440
modifications introduced

702
00:32:28,320 --> 00:32:32,480
in the draft the first one is related to

703
00:32:31,440 --> 00:32:35,840
the map request

704
00:32:32,480 --> 00:32:36,880
replay handling in the previous version

705
00:32:35,840 --> 00:32:39,678
of the draft

706
00:32:36,880 --> 00:32:40,480
it gives the option for an xtr to replay

707
00:32:39,679 --> 00:32:43,519
directly

708
00:32:40,480 --> 00:32:45,760
to the map request to do that

709
00:32:43,519 --> 00:32:47,760
it is required that the map server has

710
00:32:45,760 --> 00:32:51,200
information to punch the nut

711
00:32:47,760 --> 00:32:54,559
to forward the map request to the xtr

712
00:32:51,200 --> 00:32:57,440
to do that the xtr registers

713
00:32:54,559 --> 00:33:00,000
to the map server the nut elcaf address

714
00:32:57,440 --> 00:33:03,360
learned in the info request process

715
00:33:00,000 --> 00:33:04,519
and the used rtr air locks are set to

716
00:33:03,360 --> 00:33:07,439
priority

717
00:33:04,519 --> 00:33:10,399
255 when

718
00:33:07,440 --> 00:33:12,880
the etr replace is replaced with the set

719
00:33:10,399 --> 00:33:15,518
of rtr airlocks

720
00:33:12,880 --> 00:33:15,519
next slide

721
00:33:16,640 --> 00:33:20,960
as the information stored in the mapping

722
00:33:18,799 --> 00:33:23,039
of the map server is not the one

723
00:33:20,960 --> 00:33:25,360
needed to forward the traffic this

724
00:33:23,039 --> 00:33:28,080
option is not compatible with pub sub

725
00:33:25,360 --> 00:33:29,279
mechanisms which is the one we recommend

726
00:33:28,080 --> 00:33:31,840
to use

727
00:33:29,279 --> 00:33:33,760
also this mechanism introduce extra

728
00:33:31,840 --> 00:33:34,879
state internet device for each map

729
00:33:33,760 --> 00:33:36,640
replay

730
00:33:34,880 --> 00:33:39,200
for all these reasons we change the

731
00:33:36,640 --> 00:33:43,279
draft to make proximity to one mandatory

732
00:33:39,200 --> 00:33:43,279
and not allowing the xtr to replay

733
00:33:43,760 --> 00:33:46,399
next slide

734
00:33:47,440 --> 00:33:53,600
as a last change in previous version

735
00:33:50,480 --> 00:33:54,320
of the draft the rtr rewrites the inner

736
00:33:53,600 --> 00:33:56,158
header

737
00:33:54,320 --> 00:33:57,439
of the encapsulated map register from

738
00:33:56,159 --> 00:34:00,559
etr to

739
00:33:57,440 --> 00:34:02,720
local airlock to rtr airlock when

740
00:34:00,559 --> 00:34:05,279
sending the message to the map server

741
00:34:02,720 --> 00:34:07,840
and vice versa when sending back the

742
00:34:05,279 --> 00:34:09,918
data map notify to the xtr

743
00:34:07,840 --> 00:34:10,879
we consider that this behavior is

744
00:34:09,918 --> 00:34:12,480
inherited from

745
00:34:10,879 --> 00:34:14,960
the first person of the draft when

746
00:34:12,480 --> 00:34:20,960
encapsulated methods were not used

747
00:34:14,960 --> 00:34:24,000
and the write is no longer needed

748
00:34:20,960 --> 00:34:27,679
with this concludes my presentation if

749
00:34:24,000 --> 00:34:27,679
there is any question or comments

750
00:34:30,239 --> 00:34:35,839
any question from the floor

751
00:34:41,280 --> 00:34:44,720
yes i have a comment uh i will uh i'm

752
00:34:44,239 --> 00:34:48,799
also

753
00:34:44,719 --> 00:34:51,918
also this is

754
00:34:48,800 --> 00:34:53,599
and the draft has been it has at least

755
00:34:51,918 --> 00:34:56,000
two implementations

756
00:34:53,599 --> 00:34:57,599
it has gone through several iterations

757
00:34:56,000 --> 00:35:00,960
and as far as i know it is

758
00:34:57,599 --> 00:35:03,359
still um an individual commission

759
00:35:00,960 --> 00:35:04,160
and i would like to understand if if we

760
00:35:03,359 --> 00:35:07,119
can move to

761
00:35:04,160 --> 00:35:07,118
working group adoption

762
00:35:07,920 --> 00:35:11,920
excellent question uh i i like the work

763
00:35:11,200 --> 00:35:15,759
that you did

764
00:35:11,920 --> 00:35:17,920
because this is a nice laugh that is

765
00:35:15,760 --> 00:35:20,800
really based on the

766
00:35:17,920 --> 00:35:22,640
on the pain you experienced in doing

767
00:35:20,800 --> 00:35:25,200
much others

768
00:35:22,640 --> 00:35:26,160
while implementing this as far as i have

769
00:35:25,200 --> 00:35:28,960
understood

770
00:35:26,160 --> 00:35:30,000
so it's a nice piece of work and there's

771
00:35:28,960 --> 00:35:32,640
been

772
00:35:30,000 --> 00:35:33,200
around for a while i i have only one

773
00:35:32,640 --> 00:35:35,200
question

774
00:35:33,200 --> 00:35:37,200
last time dino presented also an

775
00:35:35,200 --> 00:35:40,640
universal solution

776
00:35:37,200 --> 00:35:45,839
so do you know what are your plans

777
00:35:40,640 --> 00:35:45,839
about this

778
00:35:49,200 --> 00:35:53,118
plan um

779
00:35:53,440 --> 00:35:57,680
i i'm not going to i mean if you're

780
00:35:55,839 --> 00:35:59,279
asking my implementation plans

781
00:35:57,680 --> 00:36:01,440
i'm not going to implement it because i

782
00:35:59,280 --> 00:36:02,160
think the performance of the system is

783
00:36:01,440 --> 00:36:03,760
going to be

784
00:36:02,160 --> 00:36:05,598
way worse than what i implemented

785
00:36:03,760 --> 00:36:08,000
because of all the inter

786
00:36:05,599 --> 00:36:10,560
intermediate processing of the packets

787
00:36:08,000 --> 00:36:13,839
that have to be relayed through the rtr

788
00:36:10,560 --> 00:36:14,480
so that's my fundamental point with the

789
00:36:13,839 --> 00:36:16,400
problem

790
00:36:14,480 --> 00:36:18,320
there's too much indirection of

791
00:36:16,400 --> 00:36:21,359
messaging that's happening

792
00:36:18,320 --> 00:36:22,720
and um there's you know i showed you an

793
00:36:21,359 --> 00:36:25,279
alternative solution

794
00:36:22,720 --> 00:36:26,799
that i believe performs much quicker and

795
00:36:25,280 --> 00:36:27,599
you know handoffs are really important

796
00:36:26,800 --> 00:36:31,520
if you want

797
00:36:27,599 --> 00:36:33,440
fast convergence on our location so

798
00:36:31,520 --> 00:36:35,359
so but let's say what you plan to do

799
00:36:33,440 --> 00:36:39,359
with your document because

800
00:36:35,359 --> 00:36:42,078
uh he he if you want to push it i mean

801
00:36:39,359 --> 00:36:43,359
we cannot have two two documents that

802
00:36:42,079 --> 00:36:45,520
explain two different

803
00:36:43,359 --> 00:36:46,960
not traversal properties there are

804
00:36:45,520 --> 00:36:49,680
approaches

805
00:36:46,960 --> 00:36:51,680
so the working group at some point has

806
00:36:49,680 --> 00:36:55,839
to discuss whether or not

807
00:36:51,680 --> 00:36:55,839
um merge the documents

808
00:36:56,400 --> 00:37:01,680
um well anyways well

809
00:36:59,839 --> 00:37:03,359
like i said in my presentation at last

810
00:37:01,680 --> 00:37:04,078
it have whatever the working group wants

811
00:37:03,359 --> 00:37:05,920
to do

812
00:37:04,079 --> 00:37:08,160
with the document but with the document

813
00:37:05,920 --> 00:37:10,000
that i wrote i'll support that

814
00:37:08,160 --> 00:37:11,200
i'm not sure if i'll support a merge

815
00:37:10,000 --> 00:37:13,760
because

816
00:37:11,200 --> 00:37:14,720
you have to take the pros and cons of

817
00:37:13,760 --> 00:37:18,000
each one and

818
00:37:14,720 --> 00:37:20,799
merge it to have a sensible design

819
00:37:18,000 --> 00:37:23,040
and that will be a lot of work and it

820
00:37:20,800 --> 00:37:26,480
typically compromises the design

821
00:37:23,040 --> 00:37:26,480
so you know

822
00:37:26,800 --> 00:37:32,160
um okay we would have to go through

823
00:37:29,920 --> 00:37:33,440
a thorough review of the pluses and

824
00:37:32,160 --> 00:37:35,598
minuses of each

825
00:37:33,440 --> 00:37:36,960
proposal and either decide to go with

826
00:37:35,599 --> 00:37:40,400
one or the other

827
00:37:36,960 --> 00:37:41,920
um or try to come up with a third option

828
00:37:40,400 --> 00:37:43,599
which is take some of the ideas from

829
00:37:41,920 --> 00:37:45,440
here and the other ideas from there

830
00:37:43,599 --> 00:37:48,480
and that's what that's what you're

831
00:37:45,440 --> 00:37:50,079
suggesting with a possible merge

832
00:37:48,480 --> 00:37:52,640
but i've never seen that successful

833
00:37:50,079 --> 00:37:56,320
before it always produces something

834
00:37:52,640 --> 00:37:56,319
worse than either of the other two

835
00:38:02,839 --> 00:38:09,279
alternatives

836
00:38:05,119 --> 00:38:12,960
my question is why why can't we have

837
00:38:09,280 --> 00:38:16,480
i mean if need be and there is that

838
00:38:12,960 --> 00:38:18,960
um for the the not capital graphs are

839
00:38:16,480 --> 00:38:18,960
always

840
00:38:27,760 --> 00:38:33,599
you know think of all or many

841
00:38:31,440 --> 00:38:35,200
foreign cases that none of us

842
00:38:33,599 --> 00:38:37,920
participated

843
00:38:35,200 --> 00:38:40,240
in wouldn't be back in that

844
00:38:37,920 --> 00:38:43,520
implementation that would provide

845
00:38:40,240 --> 00:38:46,720
a lot of conversation um

846
00:38:43,520 --> 00:38:46,720
if we know

847
00:38:47,370 --> 00:38:50,509
[Music]

848
00:39:26,960 --> 00:39:30,480
you know something that is not gonna

849
00:39:29,680 --> 00:39:34,879
make

850
00:39:30,480 --> 00:39:37,520
anyone happy so yeah

851
00:39:34,880 --> 00:39:39,839
what i suggest is the following um i i

852
00:39:37,520 --> 00:39:42,640
understand that

853
00:39:39,839 --> 00:39:43,520
the request for the authors to adopt the

854
00:39:42,640 --> 00:39:46,640
document

855
00:39:43,520 --> 00:39:49,280
okay and by the way i'm not an author of

856
00:39:46,640 --> 00:39:49,279
crystal command

857
00:39:50,480 --> 00:39:57,359
and if joel's agree what we can do is

858
00:39:53,680 --> 00:39:58,879
we we can formulate a call for an option

859
00:39:57,359 --> 00:40:02,480
on the mailing list i just

860
00:39:58,880 --> 00:40:05,200
want to formulate it in in a way that

861
00:40:02,480 --> 00:40:06,400
makes that all the participants in the

862
00:40:05,200 --> 00:40:09,759
mailing list

863
00:40:06,400 --> 00:40:12,079
aware that there has been a recently a

864
00:40:09,760 --> 00:40:15,359
different approach from

865
00:40:12,079 --> 00:40:15,920
herself which is the one people's baby

866
00:40:15,359 --> 00:40:19,359
note

867
00:40:15,920 --> 00:40:22,560
okay and uh uh in

868
00:40:19,359 --> 00:40:24,960
comment of that on that okay and

869
00:40:22,560 --> 00:40:24,960
let's see

870
00:40:36,400 --> 00:40:39,440
in a correct way i would say but it's

871
00:40:38,560 --> 00:40:41,440
just to make the

872
00:40:39,440 --> 00:40:43,119
the working group aware that there is

873
00:40:41,440 --> 00:40:45,920
the second proposal

874
00:40:43,119 --> 00:40:47,440
not that in next year somebody said oh

875
00:40:45,920 --> 00:40:48,560
but there is another proposal why you

876
00:40:47,440 --> 00:40:52,560
didn't do it

877
00:40:48,560 --> 00:40:55,279
okay just to to be clear on the process

878
00:40:52,560 --> 00:40:56,799
that's it yep we need to we need the

879
00:40:55,280 --> 00:40:59,280
working group to be clear about what it

880
00:40:56,800 --> 00:41:02,960
wants and then we'll move it forward

881
00:40:59,280 --> 00:41:02,960
absolutely okay

882
00:41:04,880 --> 00:41:08,079
okay okay thank you

883
00:41:08,319 --> 00:41:11,359
thank you for the clear presentation i

884
00:41:10,000 --> 00:41:14,480
did enjoy it

885
00:41:11,359 --> 00:41:14,480
let's move on

886
00:41:18,640 --> 00:41:26,000
sharon joined us so if shadown is ready

887
00:41:22,480 --> 00:41:30,400
i will put up his slides

888
00:41:26,000 --> 00:41:32,960
yes hi good morning good evening hello

889
00:41:30,400 --> 00:41:34,560
being late but i think i did a good pr

890
00:41:32,960 --> 00:41:38,079
for this

891
00:41:34,560 --> 00:41:41,119
excellent took longer than i was planned

892
00:41:38,079 --> 00:41:44,079
but uh was good good interest uh

893
00:41:41,119 --> 00:41:46,240
so i um i want to give a quick update on

894
00:41:44,079 --> 00:41:49,920
what has

895
00:41:46,240 --> 00:41:53,279
changed in uh list hexagon since 108.

896
00:41:49,920 --> 00:41:56,560
uh mostly courtesy of luigi

897
00:41:53,280 --> 00:41:59,839
thank you we were had a pre-review of uh

898
00:41:56,560 --> 00:42:02,480
security aspects and that resulted in

899
00:41:59,839 --> 00:42:05,200
some clarification in the wording

900
00:42:02,480 --> 00:42:05,599
let me just quickly summarize what what

901
00:42:05,200 --> 00:42:09,279
was

902
00:42:05,599 --> 00:42:12,319
the discussion about and what mechanisms

903
00:42:09,280 --> 00:42:15,440
were pointed to

904
00:42:12,319 --> 00:42:18,640
to mitigate security concerns

905
00:42:15,440 --> 00:42:20,079
one was tapping uh the ability to tap

906
00:42:18,640 --> 00:42:24,000
into

907
00:42:20,079 --> 00:42:26,720
uh traffic from uh mobility clients

908
00:42:24,000 --> 00:42:27,520
uh uploading a potentially sensitive

909
00:42:26,720 --> 00:42:30,319
data

910
00:42:27,520 --> 00:42:31,759
and here the answer is that we use an

911
00:42:30,319 --> 00:42:35,359
rtr scheme

912
00:42:31,760 --> 00:42:38,400
meaning all communications are tunneled

913
00:42:35,359 --> 00:42:41,440
uh between the eid and the rtr

914
00:42:38,400 --> 00:42:42,240
between the rtrs and in between the rtrs

915
00:42:41,440 --> 00:42:45,839
and the

916
00:42:42,240 --> 00:42:47,118
services the h3 services and therefore

917
00:42:45,839 --> 00:42:50,240
we can

918
00:42:47,119 --> 00:42:50,800
do uh tunnel encryption i know tunnel is

919
00:42:50,240 --> 00:42:52,879
not the

920
00:42:50,800 --> 00:42:54,079
perfect term for this but these are

921
00:42:52,880 --> 00:42:55,920
tunnel routers but

922
00:42:54,079 --> 00:42:58,079
uh there are more dynamic encapsulations

923
00:42:55,920 --> 00:43:01,440
but we can still use

924
00:42:58,079 --> 00:43:03,839
uh a point-to-point in-cap encryptions

925
00:43:01,440 --> 00:43:05,440
uh by default ipsec

926
00:43:03,839 --> 00:43:08,000
but if there is support for more

927
00:43:05,440 --> 00:43:10,560
advanced uh mechanisms

928
00:43:08,000 --> 00:43:12,319
then we can do that on a per tunnel

929
00:43:10,560 --> 00:43:15,359
basis without

930
00:43:12,319 --> 00:43:19,680
tying the clients which are

931
00:43:15,359 --> 00:43:23,759
in cars to services which is in edges

932
00:43:19,680 --> 00:43:25,919
or cloud which have a very different

933
00:43:23,760 --> 00:43:27,680
development and update rates so we're

934
00:43:25,920 --> 00:43:29,040
not tightly coupling but we're doing it

935
00:43:27,680 --> 00:43:32,799
by tunnel by town

936
00:43:29,040 --> 00:43:35,839
the next concern was spoofing

937
00:43:32,800 --> 00:43:39,359
and here what we pointed to is that

938
00:43:35,839 --> 00:43:42,400
there is a aaa stage

939
00:43:39,359 --> 00:43:43,200
where the eid clients are allocated an

940
00:43:42,400 --> 00:43:47,200
eid

941
00:43:43,200 --> 00:43:49,598
that reflects uh it's completely logical

942
00:43:47,200 --> 00:43:51,279
and reflects their credentials and

943
00:43:49,599 --> 00:43:55,680
affiliations

944
00:43:51,280 --> 00:43:57,839
uh and also their um

945
00:43:55,680 --> 00:43:58,720
kind of channels they are allowed to

946
00:43:57,839 --> 00:44:02,240
subscribe to

947
00:43:58,720 --> 00:44:06,799
uh this is all encoded in the eid and

948
00:44:02,240 --> 00:44:10,319
um that eid is provisioned at the rtr

949
00:44:06,800 --> 00:44:10,960
which is the home so even if it's two

950
00:44:10,319 --> 00:44:14,160
homes

951
00:44:10,960 --> 00:44:15,200
uh you cannot skip between rtrs as you

952
00:44:14,160 --> 00:44:17,440
choose

953
00:44:15,200 --> 00:44:18,560
uh and that's the spoofing protection

954
00:44:17,440 --> 00:44:21,599
you have to spoof

955
00:44:18,560 --> 00:44:22,640
both the arloc and the eid and that

956
00:44:21,599 --> 00:44:25,839
should be detected

957
00:44:22,640 --> 00:44:29,118
by the underlay network uh

958
00:44:25,839 --> 00:44:34,160
same goes for the h3 services

959
00:44:29,119 --> 00:44:34,160
these are provisions for for

960
00:44:34,960 --> 00:44:38,800
devops considerations and therefore

961
00:44:37,359 --> 00:44:41,680
provision at the

962
00:44:38,800 --> 00:44:43,200
rtrs and again if you need if you want

963
00:44:41,680 --> 00:44:45,440
to spoof them

964
00:44:43,200 --> 00:44:46,560
you you'd have to spoof both underlaying

965
00:44:45,440 --> 00:44:50,319
over the addresses

966
00:44:46,560 --> 00:44:52,960
and the routers between uh the services

967
00:44:50,319 --> 00:44:57,520
and the rtr should detect

968
00:44:52,960 --> 00:45:00,720
that based on a double lookup

969
00:44:57,520 --> 00:45:04,240
the next concern was

970
00:45:00,720 --> 00:45:06,160
a privacy and here we pointed to the

971
00:45:04,240 --> 00:45:08,720
fact that that was the point of using

972
00:45:06,160 --> 00:45:12,078
standard lisp

973
00:45:08,720 --> 00:45:15,319
to create the skeleton on his network

974
00:45:12,079 --> 00:45:18,720
uh and the

975
00:45:15,319 --> 00:45:21,279
geoprivacy is protected by the ability

976
00:45:18,720 --> 00:45:23,279
of say toyota to bring their own rtr

977
00:45:21,280 --> 00:45:25,119
uh it would be provisioned to the system

978
00:45:23,280 --> 00:45:27,599
it just has to function like a standard

979
00:45:25,119 --> 00:45:31,599
list rtr and support

980
00:45:27,599 --> 00:45:34,800
the rfcs that are used in the

981
00:45:31,599 --> 00:45:36,000
list next ones uh mostly six eight three

982
00:45:34,800 --> 00:45:39,599
zero and

983
00:45:36,000 --> 00:45:43,359
eight three seven and three

984
00:45:39,599 --> 00:45:46,400
the the signal free um and

985
00:45:43,359 --> 00:45:49,520
the a3 services themselves

986
00:45:46,400 --> 00:45:53,359
don't have the ip address of the age

987
00:45:49,520 --> 00:45:57,040
of the eid clients so they don't know uh

988
00:45:53,359 --> 00:45:58,839
they know the eid the eid of the client

989
00:45:57,040 --> 00:46:00,319
they know its credentials its

990
00:45:58,839 --> 00:46:04,480
credibility

991
00:46:00,319 --> 00:46:04,480
but they don't know it's real ip address

992
00:46:05,200 --> 00:46:12,000
so we have a geo privacy

993
00:46:08,960 --> 00:46:15,280
the last point was about fake news

994
00:46:12,000 --> 00:46:17,280
what if you spread uh a bunch of traffic

995
00:46:15,280 --> 00:46:18,640
jams and problems where they're not so

996
00:46:17,280 --> 00:46:22,079
you'll have a clear path

997
00:46:18,640 --> 00:46:25,200
to work um and here

998
00:46:22,079 --> 00:46:27,119
uh you know uh the the

999
00:46:25,200 --> 00:46:28,480
explanation was that this is a source

1000
00:46:27,119 --> 00:46:31,599
crowdsource

1001
00:46:28,480 --> 00:46:34,640
uh system so uh

1002
00:46:31,599 --> 00:46:37,440
nothing is uh set and published

1003
00:46:34,640 --> 00:46:37,759
to subscribers based just on one account

1004
00:46:37,440 --> 00:46:40,560
there

1005
00:46:37,760 --> 00:46:42,800
has to be multiple accounts uh the

1006
00:46:40,560 --> 00:46:46,400
credibility of the client

1007
00:46:42,800 --> 00:46:50,800
is encoded in its eid

1008
00:46:46,400 --> 00:46:50,800
and its detections

1009
00:46:52,800 --> 00:46:56,800
are adding or subtracting to its credit

1010
00:46:55,599 --> 00:46:59,760
score

1011
00:46:56,800 --> 00:47:01,280
uh the credit score based on what it

1012
00:46:59,760 --> 00:47:03,440
detected versus what other people

1013
00:47:01,280 --> 00:47:06,560
detected and was verified

1014
00:47:03,440 --> 00:47:09,200
uh is passed back to the h3

1015
00:47:06,560 --> 00:47:10,160
to the to the aaa service uh to the

1016
00:47:09,200 --> 00:47:14,000
diameter server

1017
00:47:10,160 --> 00:47:17,839
but not from a specific h3 service

1018
00:47:14,000 --> 00:47:19,599
but from all h3 services so the

1019
00:47:17,839 --> 00:47:20,880
aaa doesn't know where the client has

1020
00:47:19,599 --> 00:47:24,240
been uh

1021
00:47:20,880 --> 00:47:27,520
why did he get these credit uh

1022
00:47:24,240 --> 00:47:30,640
scored uh increase or decrease

1023
00:47:27,520 --> 00:47:34,079
and uh and that was okay i think uh

1024
00:47:30,640 --> 00:47:39,839
for this examiner it was okay

1025
00:47:34,079 --> 00:47:39,839
so if any questions uh i can move on

1026
00:47:40,880 --> 00:47:44,160
any question from the audience

1027
00:47:46,480 --> 00:47:53,440
all right so the next uh topic was

1028
00:47:50,079 --> 00:47:55,119
you know uh the presentation to coin and

1029
00:47:53,440 --> 00:47:58,720
it has to do with a presentation that

1030
00:47:55,119 --> 00:48:02,000
uh louis teacher yesterday about uh

1031
00:47:58,720 --> 00:48:04,799
using virtual routing uh

1032
00:48:02,000 --> 00:48:06,559
for edge computing and to do concurrency

1033
00:48:04,800 --> 00:48:11,200
and computing and here

1034
00:48:06,559 --> 00:48:13,839
um we show this mexico in two examples

1035
00:48:11,200 --> 00:48:14,879
for uh to triangulate what's going on

1036
00:48:13,839 --> 00:48:17,680
here

1037
00:48:14,880 --> 00:48:18,839
uh to try and triangulate and maybe as a

1038
00:48:17,680 --> 00:48:21,839
next step uh

1039
00:48:18,839 --> 00:48:25,119
generalized uh this

1040
00:48:21,839 --> 00:48:27,119
draft for other use cases and

1041
00:48:25,119 --> 00:48:28,559
the logic may be interesting to the

1042
00:48:27,119 --> 00:48:30,240
group and

1043
00:48:28,559 --> 00:48:32,319
i can go through it really quickly i'm

1044
00:48:30,240 --> 00:48:35,520
not gonna repeat the whole presentation

1045
00:48:32,319 --> 00:48:38,640
but if you can go down one side

1046
00:48:35,520 --> 00:48:40,880
okay so here's the problem

1047
00:48:38,640 --> 00:48:40,879
um

1048
00:48:42,720 --> 00:48:50,640
ai needs a very heavy processing

1049
00:48:46,559 --> 00:48:50,640
and high concurrency which is achieved

1050
00:48:51,359 --> 00:48:59,279
at the data center using

1051
00:48:54,960 --> 00:49:02,400
frameworks like spark or data breaks

1052
00:48:59,280 --> 00:49:05,200
leveraging spine lifts get together

1053
00:49:02,400 --> 00:49:06,559
for concurrency uh but what if we have

1054
00:49:05,200 --> 00:49:08,720
to process on the edge

1055
00:49:06,559 --> 00:49:10,640
i mean if we don't have to we will

1056
00:49:08,720 --> 00:49:13,598
process in the data center

1057
00:49:10,640 --> 00:49:16,480
uh but if we have to we have to process

1058
00:49:13,599 --> 00:49:18,559
on the edge why do we have to process on

1059
00:49:16,480 --> 00:49:22,880
the edge there's multiple reasons

1060
00:49:18,559 --> 00:49:23,920
uh a like if you think of a data center

1061
00:49:22,880 --> 00:49:26,960
as a brain

1062
00:49:23,920 --> 00:49:29,200
that can think about things and spawn

1063
00:49:26,960 --> 00:49:30,079
the concurrent load or for it takes a

1064
00:49:29,200 --> 00:49:33,759
few seconds

1065
00:49:30,079 --> 00:49:37,119
and all that uh the edge is more like a

1066
00:49:33,760 --> 00:49:38,480
a spine reaction an intelligent reaction

1067
00:49:37,119 --> 00:49:41,040
to physical world

1068
00:49:38,480 --> 00:49:42,640
activities and has to respond with a

1069
00:49:41,040 --> 00:49:46,240
subsequent

1070
00:49:42,640 --> 00:49:50,078
the other reason is that if the raw data

1071
00:49:46,240 --> 00:49:52,640
the fresh raw data load uh is too much

1072
00:49:50,079 --> 00:49:54,800
to upload to to the cloud i have to

1073
00:49:52,640 --> 00:49:58,078
process it in the edge

1074
00:49:54,800 --> 00:50:00,559
and the last is a regulatory

1075
00:49:58,079 --> 00:50:00,559
business

1076
00:50:02,079 --> 00:50:06,480
reasons i have to process within the

1077
00:50:04,480 --> 00:50:09,280
city within the state

1078
00:50:06,480 --> 00:50:11,119
or in the metro area within the carrier

1079
00:50:09,280 --> 00:50:14,160
within the private

1080
00:50:11,119 --> 00:50:17,520
of cloud of toyota let's say

1081
00:50:14,160 --> 00:50:20,799
and therefore i have to do it in a

1082
00:50:17,520 --> 00:50:24,160
specific location also if i wanna

1083
00:50:20,800 --> 00:50:26,880
if i wanna pull uh as much ai as i can

1084
00:50:24,160 --> 00:50:28,319
out of the car uh

1085
00:50:26,880 --> 00:50:30,720
from the same exact principle of

1086
00:50:28,319 --> 00:50:33,279
concentrate as much as possible

1087
00:50:30,720 --> 00:50:34,319
then i have to do it at the edge i

1088
00:50:33,280 --> 00:50:36,319
cannot

1089
00:50:34,319 --> 00:50:38,640
pull a lot of the ai all the way to the

1090
00:50:36,319 --> 00:50:38,640
cloud

1091
00:50:39,040 --> 00:50:43,440
and and keep only the necessary ai in

1092
00:50:41,599 --> 00:50:45,599
the car

1093
00:50:43,440 --> 00:50:47,359
there's multiple reasons for that uh the

1094
00:50:45,599 --> 00:50:50,160
car is very idle

1095
00:50:47,359 --> 00:50:50,799
uh it has a different depreciation and

1096
00:50:50,160 --> 00:50:53,839
so on

1097
00:50:50,800 --> 00:50:54,960
so this is the general a problem

1098
00:50:53,839 --> 00:50:58,000
statement and if you go

1099
00:50:54,960 --> 00:51:00,800
next slide uh

1100
00:50:58,000 --> 00:51:03,040
we gave nexagon as an example uh where

1101
00:51:00,800 --> 00:51:06,240
the cars are generating every

1102
00:51:03,040 --> 00:51:09,839
car generates four megabits per second

1103
00:51:06,240 --> 00:51:11,919
data so 10 000 cars is 40

1104
00:51:09,839 --> 00:51:14,960
gigabits and that's nothing compared to

1105
00:51:11,920 --> 00:51:18,319
100 000 cards so i have to process

1106
00:51:14,960 --> 00:51:20,839
it at the edge i have to react

1107
00:51:18,319 --> 00:51:23,680
quickly if there was a stroller there

1108
00:51:20,839 --> 00:51:25,119
and of course if i'm an av i'll stop but

1109
00:51:23,680 --> 00:51:26,720
what about the cars behind me they

1110
00:51:25,119 --> 00:51:30,960
should know about it

1111
00:51:26,720 --> 00:51:32,720
and so on and there is uh muni and oem

1112
00:51:30,960 --> 00:51:34,079
reasoning why you should do it at the

1113
00:51:32,720 --> 00:51:36,959
edge and we give

1114
00:51:34,079 --> 00:51:39,200
mexico as an example if you go down one

1115
00:51:36,960 --> 00:51:39,200
more

1116
00:51:40,319 --> 00:51:45,599
we gave another example a cyber example

1117
00:51:44,160 --> 00:51:48,879
where

1118
00:51:45,599 --> 00:51:54,400
terabit switches maybe hundreds of those

1119
00:51:48,880 --> 00:51:54,400
are sample the the 0.1 percent

1120
00:51:54,880 --> 00:52:01,119
rate uh and to

1121
00:51:58,800 --> 00:52:02,800
create gigabits per second and that

1122
00:52:01,119 --> 00:52:04,960
cannot be go

1123
00:52:02,800 --> 00:52:07,200
cannot go all the way to the cloud and i

1124
00:52:04,960 --> 00:52:09,280
have to process that in the edge

1125
00:52:07,200 --> 00:52:11,200
and it will explain how you use the kind

1126
00:52:09,280 --> 00:52:14,640
of a nexagon-like

1127
00:52:11,200 --> 00:52:18,399
um architecture to do that

1128
00:52:14,640 --> 00:52:21,520
so if you go down uh

1129
00:52:18,400 --> 00:52:24,720
yeah okay this is why this uh is uh

1130
00:52:21,520 --> 00:52:27,359
if you go down you all know that uh

1131
00:52:24,720 --> 00:52:28,078
this ability to use the purely logical

1132
00:52:27,359 --> 00:52:30,319
addresses

1133
00:52:28,079 --> 00:52:32,079
no topological constraints because of

1134
00:52:30,319 --> 00:52:35,680
the mapping system

1135
00:52:32,079 --> 00:52:38,160
and list of ability if you go down to do

1136
00:52:35,680 --> 00:52:39,200
a channels multicast channels which are

1137
00:52:38,160 --> 00:52:40,879
good for

1138
00:52:39,200 --> 00:52:43,200
millions of channels for thousands of

1139
00:52:40,880 --> 00:52:47,359
users very good for

1140
00:52:43,200 --> 00:52:51,680
if i reduce data

1141
00:52:47,359 --> 00:52:52,880
uh to indexes then i can subscribe to

1142
00:52:51,680 --> 00:52:56,078
those indexes

1143
00:52:52,880 --> 00:52:59,680
and this subscription is for a much

1144
00:52:56,079 --> 00:53:00,960
more portable uh feed than the raw data

1145
00:52:59,680 --> 00:53:02,640
after reduction

1146
00:53:00,960 --> 00:53:04,880
okay so this is why the least part of

1147
00:53:02,640 --> 00:53:09,759
all the overlays out there

1148
00:53:04,880 --> 00:53:13,280
uh it's very ready um next slide

1149
00:53:09,760 --> 00:53:15,040
uh and this is the you know what is the

1150
00:53:13,280 --> 00:53:16,720
hexagon what are the tiles

1151
00:53:15,040 --> 00:53:18,480
every problem will have its own tiles

1152
00:53:16,720 --> 00:53:20,399
the problem that the tiles of

1153
00:53:18,480 --> 00:53:22,160
cyber is the flows the five couple

1154
00:53:20,400 --> 00:53:25,760
throws of masks

1155
00:53:22,160 --> 00:53:28,799
so if i if i'm scooping thousands of uh

1156
00:53:25,760 --> 00:53:30,960
five tuples uh out of millions

1157
00:53:28,800 --> 00:53:32,960
then in multiple points in the network

1158
00:53:30,960 --> 00:53:35,119
they will still be steered to the same

1159
00:53:32,960 --> 00:53:38,160
location where they'll be reduced

1160
00:53:35,119 --> 00:53:41,200
the distribution of the flow uh

1161
00:53:38,160 --> 00:53:44,399
the bayesian behavior will be learned

1162
00:53:41,200 --> 00:53:47,839
uh visibility will be reflected

1163
00:53:44,400 --> 00:53:51,839
and the surprise will be

1164
00:53:47,839 --> 00:53:55,279
which will from what is expected will

1165
00:53:51,839 --> 00:53:55,279
create a hyper

1166
00:53:55,520 --> 00:54:00,640
attention uh so this has been very

1167
00:53:58,160 --> 00:54:02,078
successful it was able to

1168
00:54:00,640 --> 00:54:04,078
it's very easy to put on top of the

1169
00:54:02,079 --> 00:54:06,240
network uh

1170
00:54:04,079 --> 00:54:08,800
and it was able to detect ddos like a

1171
00:54:06,240 --> 00:54:13,040
minute before a firewall

1172
00:54:08,800 --> 00:54:15,200
uh next slide and this is the reduction

1173
00:54:13,040 --> 00:54:16,880
factors next slide i mean i want to get

1174
00:54:15,200 --> 00:54:17,759
to the gist of it okay this is the gist

1175
00:54:16,880 --> 00:54:20,960
of it

1176
00:54:17,760 --> 00:54:24,280
is we use this for this pattern

1177
00:54:20,960 --> 00:54:26,880
uh we take a problem we pre-divide it

1178
00:54:24,280 --> 00:54:30,240
algorithmically

1179
00:54:26,880 --> 00:54:32,640
to something that can be addressable

1180
00:54:30,240 --> 00:54:34,799
we steer the raw samples to these

1181
00:54:32,640 --> 00:54:37,920
addressable contexts

1182
00:54:34,800 --> 00:54:39,920
these contexts apply reduction functions

1183
00:54:37,920 --> 00:54:42,400
and then we subscribe to those

1184
00:54:39,920 --> 00:54:43,680
that's it so the point here is that if

1185
00:54:42,400 --> 00:54:47,359
there is interest in the group

1186
00:54:43,680 --> 00:54:49,520
to further develop this the

1187
00:54:47,359 --> 00:54:51,680
design of what luigi presented than

1188
00:54:49,520 --> 00:54:54,240
other use cases

1189
00:54:51,680 --> 00:54:56,640
then it would be good to know and if

1190
00:54:54,240 --> 00:55:00,399
anybody wants to help on that

1191
00:54:56,640 --> 00:55:00,400
very welcome that's it

1192
00:55:02,240 --> 00:55:09,598
okay thank you very much

1193
00:55:07,760 --> 00:55:12,079
any questions or comments from the

1194
00:55:09,599 --> 00:55:12,079
audience

1195
00:55:18,000 --> 00:55:25,200
okay so i have a question luigi yes

1196
00:55:22,400 --> 00:55:26,640
uh so given that you know we wanna uh

1197
00:55:25,200 --> 00:55:29,520
mark this and move on

1198
00:55:26,640 --> 00:55:31,118
to generalize to that every problem can

1199
00:55:29,520 --> 00:55:34,720
have its own tiles and

1200
00:55:31,119 --> 00:55:37,280
on channels and feeds um then

1201
00:55:34,720 --> 00:55:38,879
i want to finish the next one draft to

1202
00:55:37,280 --> 00:55:42,160
be an rfc

1203
00:55:38,880 --> 00:55:44,960
um and the question to you and joel is

1204
00:55:42,160 --> 00:55:46,879
uh do we have to wait for the base to do

1205
00:55:44,960 --> 00:55:50,480
that or we can just

1206
00:55:46,880 --> 00:55:53,119
publish it as is and then

1207
00:55:50,480 --> 00:55:54,079
refer to the beast in the generalized in

1208
00:55:53,119 --> 00:55:58,079
a

1209
00:55:54,079 --> 00:56:02,799
generalized draft so so we can just

1210
00:55:58,079 --> 00:56:06,000
you know as far as attention adhd

1211
00:56:02,799 --> 00:56:08,559
if we try to publish any lisp drafts

1212
00:56:06,000 --> 00:56:11,599
that are pointing at the

1213
00:56:08,559 --> 00:56:14,400
current experimental things even if

1214
00:56:11,599 --> 00:56:16,640
those drafts are themselves experimental

1215
00:56:14,400 --> 00:56:18,640
the isg is going to look at us and go

1216
00:56:16,640 --> 00:56:21,040
wait but you're having us work on all

1217
00:56:18,640 --> 00:56:23,680
this other stuff

1218
00:56:21,040 --> 00:56:24,480
i understand why you want to get it done

1219
00:56:23,680 --> 00:56:28,480
sharon

1220
00:56:24,480 --> 00:56:29,599
i sympathize but i really think we need

1221
00:56:28,480 --> 00:56:32,559
to be pointing at the biz

1222
00:56:29,599 --> 00:56:34,240
drafts and we will but you can you can

1223
00:56:32,559 --> 00:56:35,119
point at the biz drafts get everything

1224
00:56:34,240 --> 00:56:37,919
done

1225
00:56:35,119 --> 00:56:40,079
we're close enough don't worry about the

1226
00:56:37,920 --> 00:56:43,520
time difference

1227
00:56:40,079 --> 00:56:44,319
okay so you just yes it is alberto just

1228
00:56:43,520 --> 00:56:47,440
a quick comment

1229
00:56:44,319 --> 00:56:48,480
um and i i don't have an opinion i just

1230
00:56:47,440 --> 00:56:50,480
raised the point

1231
00:56:48,480 --> 00:56:52,160
the intended status of next second right

1232
00:56:50,480 --> 00:56:55,839
now is informational

1233
00:56:52,160 --> 00:56:58,399
not experimental so i i don't know if

1234
00:56:55,839 --> 00:57:00,160
if we still have to wait for the screen

1235
00:56:58,400 --> 00:57:03,280
i'm perfectly fine waiting but

1236
00:57:00,160 --> 00:57:03,279
you know i don't know if we need to

1237
00:57:04,720 --> 00:57:09,359
my personal opinion honestly is even if

1238
00:57:07,599 --> 00:57:11,599
it is informational it would be better

1239
00:57:09,359 --> 00:57:14,240
if it points to the beast documents

1240
00:57:11,599 --> 00:57:15,599
because uh uh is just for more

1241
00:57:14,240 --> 00:57:17,279
credibility from the

1242
00:57:15,599 --> 00:57:19,280
for the content because at some point

1243
00:57:17,280 --> 00:57:20,480
somebody could read and say yeah that is

1244
00:57:19,280 --> 00:57:24,240
based on the

1245
00:57:20,480 --> 00:57:27,520
old specs not the the proposed standard

1246
00:57:24,240 --> 00:57:30,160
okay the the the work going on we are

1247
00:57:27,520 --> 00:57:33,280
close enough

1248
00:57:30,160 --> 00:57:36,960
worst case will sit a little bit in the

1249
00:57:33,280 --> 00:57:41,040
editor i don't know but um

1250
00:57:36,960 --> 00:57:41,040
but this is real my my personal

1251
00:57:44,480 --> 00:57:48,400
all right so i think you know it's your

1252
00:57:46,799 --> 00:57:51,440
consideration is your decision

1253
00:57:48,400 --> 00:57:51,839
um the i understand what john said uh

1254
00:57:51,440 --> 00:57:53,599
just

1255
00:57:51,839 --> 00:57:55,040
uh be aware of the other side of it

1256
00:57:53,599 --> 00:57:57,359
which is um if

1257
00:57:55,040 --> 00:57:58,160
you want to hand off this nexagon as an

1258
00:57:57,359 --> 00:58:02,000
rfc to

1259
00:57:58,160 --> 00:58:05,598
organizations like aacc the auto edge

1260
00:58:02,000 --> 00:58:08,079
anything itf is uh all right already

1261
00:58:05,599 --> 00:58:10,559
not their industry it's not like dealing

1262
00:58:08,079 --> 00:58:13,920
with juniper and cisco and those

1263
00:58:10,559 --> 00:58:16,799
uh and the minimum has to be in rfc so

1264
00:58:13,920 --> 00:58:18,079
uh until then you know it's it's really

1265
00:58:16,799 --> 00:58:21,119
delaying it so

1266
00:58:18,079 --> 00:58:24,160
uh you know just um observe the

1267
00:58:21,119 --> 00:58:27,200
the progress and if it's uh

1268
00:58:24,160 --> 00:58:28,240
reasonable then fine if not just make a

1269
00:58:27,200 --> 00:58:30,640
call

1270
00:58:28,240 --> 00:58:30,640
up to you

1271
00:58:33,040 --> 00:58:36,240
again i will give you my my personal

1272
00:58:34,960 --> 00:58:38,720
opinion okay

1273
00:58:36,240 --> 00:58:41,279
uh these documents are very very close

1274
00:58:38,720 --> 00:58:41,279
to be done

1275
00:58:41,440 --> 00:58:48,720
so okay i would wait uh a few weeks

1276
00:58:45,200 --> 00:58:50,000
just to see if the albert just submitted

1277
00:58:48,720 --> 00:58:53,040
new versions

1278
00:58:50,000 --> 00:58:54,160
maybe today or tomorrow they they clear

1279
00:58:53,040 --> 00:58:57,200
all the discuss

1280
00:58:54,160 --> 00:59:01,279
if not actually like i think

1281
00:58:57,200 --> 00:59:04,720
as a chair to please have a look to the

1282
00:59:01,280 --> 00:59:07,440
to the to the new versions okay so

1283
00:59:04,720 --> 00:59:08,480
maybe maybe in a couple of weeks these

1284
00:59:07,440 --> 00:59:11,680
documents

1285
00:59:08,480 --> 00:59:11,680
are through so

1286
00:59:11,839 --> 00:59:17,680
if you move your document right behind

1287
00:59:15,440 --> 00:59:19,200
it's just two weeks delay i mean it's

1288
00:59:17,680 --> 00:59:21,440
not a big deal

1289
00:59:19,200 --> 00:59:22,399
but again this is my personal opinion

1290
00:59:21,440 --> 00:59:25,040
all right

1291
00:59:22,400 --> 00:59:26,559
that's a very good news by christmas

1292
00:59:25,040 --> 00:59:29,440
thank you

1293
00:59:26,559 --> 00:59:29,440
let's cross finger

1294
00:59:29,680 --> 00:59:36,399
thanks okay

1295
00:59:33,280 --> 00:59:37,920
okay um so let's

1296
00:59:36,400 --> 00:59:41,200
unless there are all the comments of

1297
00:59:37,920 --> 00:59:44,880
question we move forward toward

1298
00:59:41,200 --> 00:59:47,919
its style for uh

1299
00:59:44,880 --> 00:59:50,240
dino for

1300
00:59:47,920 --> 00:59:51,680
encoding names i'm going to take up your

1301
00:59:50,240 --> 00:59:56,078
slides

1302
00:59:51,680 --> 00:59:56,078
can you hear me okay yes

1303
00:59:56,960 --> 01:00:05,040
here we go you can hear me okay

1304
01:00:01,520 --> 01:00:05,920
hello i can you hear me yes i can hear

1305
01:00:05,040 --> 01:00:09,200
you

1306
01:00:05,920 --> 01:00:12,559
can you hear me yes i can okay

1307
01:00:09,200 --> 01:00:14,399
great uh okay so i'm gonna talk about

1308
01:00:12,559 --> 01:00:17,680
the um

1309
01:00:14,400 --> 01:00:20,559
i guess the 11th revision of the list

1310
01:00:17,680 --> 01:00:20,558
name encoding spec

1311
01:00:20,960 --> 01:00:26,160
next slide so an

1312
01:00:24,319 --> 01:00:29,680
overview of the spec it's it's an

1313
01:00:26,160 --> 01:00:33,359
extraordinarily simple spec

1314
01:00:29,680 --> 01:00:36,480
basically this is a compact way

1315
01:00:33,359 --> 01:00:39,040
of encoding an ascii string in either an

1316
01:00:36,480 --> 01:00:41,839
eid record or an arloc record

1317
01:00:39,040 --> 01:00:42,640
there's an afi that has been defined

1318
01:00:41,839 --> 01:00:44,880
before

1319
01:00:42,640 --> 01:00:46,240
afi number 17 that's called a

1320
01:00:44,880 --> 01:00:49,200
distinguished name

1321
01:00:46,240 --> 01:00:51,040
um i thought the draft could use that um

1322
01:00:49,200 --> 01:00:53,759
and we could encode names

1323
01:00:51,040 --> 01:00:55,040
in either of those records uh it's much

1324
01:00:53,760 --> 01:00:58,640
more compact than

1325
01:00:55,040 --> 01:00:59,279
l caps and it has much more flexibility

1326
01:00:58,640 --> 01:01:01,839
than

1327
01:00:59,280 --> 01:01:03,920
um elcas because it's shorter and these

1328
01:01:01,839 --> 01:01:05,520
things will typically be nested in other

1329
01:01:03,920 --> 01:01:07,520
things so

1330
01:01:05,520 --> 01:01:09,599
the shorter the better make the packet

1331
01:01:07,520 --> 01:01:11,920
sizes smaller

1332
01:01:09,599 --> 01:01:13,280
what's the advantage of distinguished

1333
01:01:11,920 --> 01:01:16,319
names is that

1334
01:01:13,280 --> 01:01:18,160
you can provide a self-documenting

1335
01:01:16,319 --> 01:01:19,520
set of mapping records in the mapping

1336
01:01:18,160 --> 01:01:21,759
database

1337
01:01:19,520 --> 01:01:23,040
i've you know since i've done my

1338
01:01:21,760 --> 01:01:25,520
implementation it's been

1339
01:01:23,040 --> 01:01:27,920
eight years now that these names are

1340
01:01:25,520 --> 01:01:30,720
lifesavers and debugging problems

1341
01:01:27,920 --> 01:01:32,079
and maintaining systems uh very much you

1342
01:01:30,720 --> 01:01:34,959
know the idea is not

1343
01:01:32,079 --> 01:01:36,319
very original it basically came from um

1344
01:01:34,960 --> 01:01:38,640
isis first and

1345
01:01:36,319 --> 01:01:40,640
ospf second where you could put host

1346
01:01:38,640 --> 01:01:44,319
names to name lsp ids

1347
01:01:40,640 --> 01:01:46,720
and is pdus those were you know in the

1348
01:01:44,319 --> 01:01:47,520
early 90s those things were invaluable

1349
01:01:46,720 --> 01:01:49,118
tools and

1350
01:01:47,520 --> 01:01:50,640
i thought we could use something in

1351
01:01:49,119 --> 01:01:53,760
inside of list to do that

1352
01:01:50,640 --> 01:01:55,200
here and it also allows you to do these

1353
01:01:53,760 --> 01:01:57,440
groupings if you wanted

1354
01:01:55,200 --> 01:01:58,480
to have a name that maps to other things

1355
01:01:57,440 --> 01:02:01,200
to other names

1356
01:01:58,480 --> 01:02:02,480
which then maps to um you know

1357
01:02:01,200 --> 01:02:05,359
traditional our looks

1358
01:02:02,480 --> 01:02:07,599
or whatever the lcaps can be you can set

1359
01:02:05,359 --> 01:02:10,558
up a multi-stage lookup if you

1360
01:02:07,599 --> 01:02:11,280
chose to do so and it turns out that the

1361
01:02:10,559 --> 01:02:14,319
names

1362
01:02:11,280 --> 01:02:16,640
could be um formatted in a way

1363
01:02:14,319 --> 01:02:17,759
where they fit into a hierarchy of list

1364
01:02:16,640 --> 01:02:20,799
ddt

1365
01:02:17,760 --> 01:02:23,440
so for instance a look up of

1366
01:02:20,799 --> 01:02:25,359
slash root slash dino slide slash

1367
01:02:23,440 --> 01:02:29,039
bangkok which is a fully

1368
01:02:25,359 --> 01:02:32,640
a fully specified eid distinguished name

1369
01:02:29,039 --> 01:02:34,559
um the root could you know parse the

1370
01:02:32,640 --> 01:02:36,720
slash roots do you know because

1371
01:02:34,559 --> 01:02:37,599
that's the authoritative prefix at the

1372
01:02:36,720 --> 01:02:40,000
root level

1373
01:02:37,599 --> 01:02:42,559
and then point you to a set of children

1374
01:02:40,000 --> 01:02:44,480
that are the next level like slides

1375
01:02:42,559 --> 01:02:46,000
and then the next level would be bangkok

1376
01:02:44,480 --> 01:02:47,680
would be the map servers

1377
01:02:46,000 --> 01:02:49,520
so there's no changes at all that have

1378
01:02:47,680 --> 01:02:51,839
to be done um

1379
01:02:49,520 --> 01:02:53,359
list ddt you just have to con figure the

1380
01:02:51,839 --> 01:02:56,240
authoritative pre-six

1381
01:02:53,359 --> 01:02:57,839
to be the set of um characters versus

1382
01:02:56,240 --> 01:03:01,839
the set of bits that we use for

1383
01:02:57,839 --> 01:03:04,160
ipv4 and ipv6 uh eids

1384
01:03:01,839 --> 01:03:04,960
and the same goes for supporting lisp

1385
01:03:04,160 --> 01:03:07,520
decent

1386
01:03:04,960 --> 01:03:10,000
list decent is a way of hashing the id

1387
01:03:07,520 --> 01:03:12,559
to pick a map server to register to

1388
01:03:10,000 --> 01:03:14,079
um or a map server a map resolver to

1389
01:03:12,559 --> 01:03:16,480
send map requests to

1390
01:03:14,079 --> 01:03:18,480
so since it's a fully it's since it's

1391
01:03:16,480 --> 01:03:21,039
just a set of bits you can still

1392
01:03:18,480 --> 01:03:23,599
hash across that to pick a map server so

1393
01:03:21,039 --> 01:03:27,119
the decentralized list mapping system

1394
01:03:23,599 --> 01:03:29,920
works with zero changes as well um

1395
01:03:27,119 --> 01:03:31,200
and uh map request lookups um usually

1396
01:03:29,920 --> 01:03:35,200
are doing exact match

1397
01:03:31,200 --> 01:03:38,799
um typically so if you have um

1398
01:03:35,200 --> 01:03:40,319
a fixed name or you're using maybe a

1399
01:03:38,799 --> 01:03:41,280
hash of a public key where it's been

1400
01:03:40,319 --> 01:03:43,200
defined

1401
01:03:41,280 --> 01:03:44,640
as being fixed length you're always

1402
01:03:43,200 --> 01:03:46,720
doing uh

1403
01:03:44,640 --> 01:03:48,879
you're always doing a length with a with

1404
01:03:46,720 --> 01:03:50,720
a mask length and you're always getting

1405
01:03:48,880 --> 01:03:51,280
the map reply back with the same mass

1406
01:03:50,720 --> 01:03:53,680
length

1407
01:03:51,280 --> 01:03:56,000
that's what i meant by exact match next

1408
01:03:53,680 --> 01:03:56,000
slide

1409
01:03:56,160 --> 01:03:59,598
so here's an example um if you look at

1410
01:03:59,039 --> 01:04:01,839
the top

1411
01:03:59,599 --> 01:04:02,960
um this is the eid prefix that's being

1412
01:04:01,839 --> 01:04:06,640
registered

1413
01:04:02,960 --> 01:04:09,520
as g xtr one the the

1414
01:04:06,640 --> 01:04:11,440
actual mass length of that would be uh

1415
01:04:09,520 --> 01:04:12,240
what is it one two three four five six

1416
01:04:11,440 --> 01:04:16,640
seven

1417
01:04:12,240 --> 01:04:18,240
times eight so 56 bit mask length

1418
01:04:16,640 --> 01:04:20,720
that would be stored in the system if

1419
01:04:18,240 --> 01:04:23,919
you wanted to use the same

1420
01:04:20,720 --> 01:04:27,359
concept as um as ipv4

1421
01:04:23,920 --> 01:04:29,520
and ipv6 masculine um

1422
01:04:27,359 --> 01:04:31,440
now the our loc name that you see down

1423
01:04:29,520 --> 01:04:34,880
there that's called xtr1

1424
01:04:31,440 --> 01:04:37,839
that's encoded in this rlok record

1425
01:04:34,880 --> 01:04:40,799
as an afi list where the first item in

1426
01:04:37,839 --> 01:04:44,160
the afi list is an ipv4

1427
01:04:40,799 --> 01:04:47,280
arlo or an afi and then the second one

1428
01:04:44,160 --> 01:04:48,480
is the afi 17. so this is this is the

1429
01:04:47,280 --> 01:04:51,839
representation

1430
01:04:48,480 --> 01:04:54,559
on how a lcaf afi list

1431
01:04:51,839 --> 01:04:55,520
would be encoded so example of something

1432
01:04:54,559 --> 01:04:58,000
being nested

1433
01:04:55,520 --> 01:04:58,000
next slide

1434
01:04:58,880 --> 01:05:02,799
so the changes that i put in to reflect

1435
01:05:00,720 --> 01:05:05,919
the comments that came on the

1436
01:05:02,799 --> 01:05:07,440
mailing list was describe better how the

1437
01:05:05,920 --> 01:05:10,160
mass lengths work in each of the

1438
01:05:07,440 --> 01:05:12,480
messages so i did that

1439
01:05:10,160 --> 01:05:14,160
and then i added a use case section

1440
01:05:12,480 --> 01:05:15,680
saying that we have some examples that

1441
01:05:14,160 --> 01:05:18,480
use distinguished names

1442
01:05:15,680 --> 01:05:20,879
and those three documents there are

1443
01:05:18,480 --> 01:05:23,920
examples of using

1444
01:05:20,880 --> 01:05:26,880
distinguished names i also added a name

1445
01:05:23,920 --> 01:05:30,160
collision consideration section

1446
01:05:26,880 --> 01:05:32,799
because a distinguished name

1447
01:05:30,160 --> 01:05:34,319
can be the structure of a distinguished

1448
01:05:32,799 --> 01:05:36,079
name can be decided on

1449
01:05:34,319 --> 01:05:37,759
what instance id you registered the

1450
01:05:36,079 --> 01:05:38,559
mapping system and the mapping system

1451
01:05:37,760 --> 01:05:40,960
could decide

1452
01:05:38,559 --> 01:05:42,400
what it is joel had a comment that if

1453
01:05:40,960 --> 01:05:43,520
there's two different types of

1454
01:05:42,400 --> 01:05:45,520
distinguished names

1455
01:05:43,520 --> 01:05:46,640
registered will they counter conflict

1456
01:05:45,520 --> 01:05:48,880
with each other

1457
01:05:46,640 --> 01:05:50,558
and if they if they would they would

1458
01:05:48,880 --> 01:05:53,920
have to be in separate

1459
01:05:50,559 --> 01:05:53,920
instance ids just like

1460
01:05:54,240 --> 01:06:00,799
two two houses that are behind nats

1461
01:05:57,760 --> 01:06:02,799
use 192.168.1

1462
01:06:00,799 --> 01:06:04,000
those two things are registered to the

1463
01:06:02,799 --> 01:06:05,520
same mapping system

1464
01:06:04,000 --> 01:06:07,440
but they don't collide because they're

1465
01:06:05,520 --> 01:06:10,079
in separate instance ids

1466
01:06:07,440 --> 01:06:10,079
next slide

1467
01:06:11,200 --> 01:06:19,279
so we started the draft in april of 2016

1468
01:06:16,640 --> 01:06:20,000
and we're now at um the latest draft

1469
01:06:19,280 --> 01:06:23,440
that i just

1470
01:06:20,000 --> 01:06:23,839
submitted a few days ago is 2020. so

1471
01:06:23,440 --> 01:06:26,720
this

1472
01:06:23,839 --> 01:06:28,720
this very simple seven page draft has

1473
01:06:26,720 --> 01:06:32,000
been going on now for four years

1474
01:06:28,720 --> 01:06:35,598
next slide and if you look at um

1475
01:06:32,000 --> 01:06:37,200
what we did is we had the initial um

1476
01:06:35,599 --> 01:06:39,760
submission there on the right which is

1477
01:06:37,200 --> 01:06:40,480
in green and then we just spent a good

1478
01:06:39,760 --> 01:06:42,559
you know

1479
01:06:40,480 --> 01:06:43,760
uh one two three four five six seven

1480
01:06:42,559 --> 01:06:45,920
eight four years

1481
01:06:43,760 --> 01:06:46,880
of just updating the changes to the

1482
01:06:45,920 --> 01:06:49,359
draft

1483
01:06:46,880 --> 01:06:51,119
and so you know maybe it comes to a

1484
01:06:49,359 --> 01:06:52,880
point where you have to ask why is the

1485
01:06:51,119 --> 01:06:56,079
progress been so slow

1486
01:06:52,880 --> 01:06:57,280
um there is utility um there has been

1487
01:06:56,079 --> 01:06:59,200
some support

1488
01:06:57,280 --> 01:07:01,039
um there has been commentary over the

1489
01:06:59,200 --> 01:07:02,640
course of the six years

1490
01:07:01,039 --> 01:07:05,039
and there's really has been no strong

1491
01:07:02,640 --> 01:07:07,680
objections so i'm wondering why

1492
01:07:05,039 --> 01:07:09,039
once i went to look you know i have to

1493
01:07:07,680 --> 01:07:10,558
disagree with that once i went and

1494
01:07:09,039 --> 01:07:12,400
looked carefully at this i do have

1495
01:07:10,559 --> 01:07:14,880
strong objections what is in here are

1496
01:07:12,400 --> 01:07:17,200
not distinguished names

1497
01:07:14,880 --> 01:07:18,640
and as i've said on the list the

1498
01:07:17,200 --> 01:07:22,319
solutions you've proposed

1499
01:07:18,640 --> 01:07:24,400
are not good enough this is a

1500
01:07:22,319 --> 01:07:26,880
i can just dump an arbitrary string in

1501
01:07:24,400 --> 01:07:27,440
and well it'll work with my use cases

1502
01:07:26,880 --> 01:07:29,039
and

1503
01:07:27,440 --> 01:07:30,720
as long as everybody's careful it'll

1504
01:07:29,039 --> 01:07:32,160
work but i can't tell you exactly how to

1505
01:07:30,720 --> 01:07:33,759
be careful

1506
01:07:32,160 --> 01:07:35,598
other protocols that have done this have

1507
01:07:33,760 --> 01:07:37,359
gotten into big trouble

1508
01:07:35,599 --> 01:07:43,839
and i really don't want us going down

1509
01:07:37,359 --> 01:07:43,839
this path

1510
01:07:46,000 --> 01:07:49,359
well i have no reply to that i don't

1511
01:07:48,160 --> 01:07:50,799
know what your definition of a

1512
01:07:49,359 --> 01:07:53,680
distinguished name is

1513
01:07:50,799 --> 01:07:54,880
but i'm using that term because it's

1514
01:07:53,680 --> 01:07:58,480
assigned to afi

1515
01:07:54,880 --> 01:08:00,720
17. what it is is a ascii encoding

1516
01:07:58,480 --> 01:08:01,839
which or can be a unique unicode

1517
01:08:00,720 --> 01:08:04,480
encoding if we use

1518
01:08:01,839 --> 01:08:05,839
a different afi but it's just a it's

1519
01:08:04,480 --> 01:08:07,760
just a string

1520
01:08:05,839 --> 01:08:09,680
and you know it's no different than a

1521
01:08:07,760 --> 01:08:10,720
dns name where you have to coordinate

1522
01:08:09,680 --> 01:08:12,640
what the value is

1523
01:08:10,720 --> 01:08:13,919
so i don't know what the dns names are

1524
01:08:12,640 --> 01:08:17,198
structured

1525
01:08:13,920 --> 01:08:19,839
dns names are structured yes

1526
01:08:17,198 --> 01:08:22,080
they are distinguished these things are

1527
01:08:19,839 --> 01:08:24,318
not distinguished they're just arbitrary

1528
01:08:22,080 --> 01:08:25,278
i'm not calling them distinguished joel

1529
01:08:24,319 --> 01:08:27,920
i'm saying that

1530
01:08:25,279 --> 01:08:29,600
the afi is distinguished on the

1531
01:08:27,920 --> 01:08:32,080
particular use case

1532
01:08:29,600 --> 01:08:33,080
they have to have structure and if you

1533
01:08:32,080 --> 01:08:36,640
look at the

1534
01:08:33,080 --> 01:08:39,759
ecdsa author um

1535
01:08:36,640 --> 01:08:41,359
draft it shows an encoding where you do

1536
01:08:39,759 --> 01:08:43,520
not have collisions

1537
01:08:41,359 --> 01:08:45,279
and it's as simple as that and if you

1538
01:08:43,520 --> 01:08:46,080
think another use of it's going to

1539
01:08:45,279 --> 01:08:48,480
collide

1540
01:08:46,080 --> 01:08:50,318
with this that specification you don't

1541
01:08:48,479 --> 01:08:53,120
run it in the same instance id

1542
01:08:50,319 --> 01:08:54,239
so these are very solvable problems so i

1543
01:08:53,120 --> 01:08:56,000
don't know what the objective they're

1544
01:08:54,238 --> 01:08:58,158
not

1545
01:08:56,000 --> 01:09:00,640
fundamentally you're expecting everybody

1546
01:08:58,158 --> 01:09:04,399
to magically go over and use it without

1547
01:09:00,640 --> 01:09:04,400
going to finding how to distinguish it

1548
01:09:05,600 --> 01:09:12,159
i those those drafts say how the

1549
01:09:09,120 --> 01:09:14,399
how the names are supposed to be encoded

1550
01:09:12,158 --> 01:09:16,318
that is specified in those drafts go

1551
01:09:14,399 --> 01:09:18,399
read those drafts okay

1552
01:09:16,319 --> 01:09:19,520
give me specific comments please rather

1553
01:09:18,399 --> 01:09:21,278
than i don't like it

1554
01:09:19,520 --> 01:09:22,960
because it's been done that way before

1555
01:09:21,279 --> 01:09:25,199
you know you're missing my point

1556
01:09:22,960 --> 01:09:26,000
yes the usage draft specifies how to

1557
01:09:25,198 --> 01:09:29,120
encode it

1558
01:09:26,000 --> 01:09:30,880
but the but this draft doesn't specify

1559
01:09:29,120 --> 01:09:33,040
what the requirements are that must be

1560
01:09:30,880 --> 01:09:36,159
met so that things are distinguishable

1561
01:09:33,040 --> 01:09:37,278
so that different uses don't collide and

1562
01:09:36,158 --> 01:09:38,799
just saying don't think

1563
01:09:37,279 --> 01:09:41,199
they might collide into different

1564
01:09:38,799 --> 01:09:43,920
instance ids is not going to work

1565
01:09:41,198 --> 01:09:46,799
for writing other specs it requires

1566
01:09:43,920 --> 01:09:48,640
magic knowledge

1567
01:09:46,799 --> 01:09:50,479
it does work joel i don't know what the

1568
01:09:48,640 --> 01:09:52,480
problem is they won't collide if they

1569
01:09:50,479 --> 01:09:58,799
stay separate

1570
01:09:52,479 --> 01:09:58,799
why do rfc 1918 addresses not collide

1571
01:09:59,840 --> 01:10:05,520
that's a big problem

1572
01:10:03,040 --> 01:10:06,719
but it works the system works and we

1573
01:10:05,520 --> 01:10:08,719
keep them separated

1574
01:10:06,719 --> 01:10:10,000
because we have virtualized networks

1575
01:10:08,719 --> 01:10:12,880
that's how it works

1576
01:10:10,000 --> 01:10:12,880
next slide please

1577
01:10:14,719 --> 01:10:18,719
so this is my third attempt at least to

1578
01:10:16,960 --> 01:10:19,679
request at least the working group to

1579
01:10:18,719 --> 01:10:22,000
work on it

1580
01:10:19,679 --> 01:10:23,920
so it's not like we have to make this an

1581
01:10:22,000 --> 01:10:24,640
rc right away because we can't do that

1582
01:10:23,920 --> 01:10:26,640
anyways

1583
01:10:24,640 --> 01:10:28,480
but i just does the does the working

1584
01:10:26,640 --> 01:10:31,520
group want to work on such a feature

1585
01:10:28,480 --> 01:10:33,599
because it's actually useful and it

1586
01:10:31,520 --> 01:10:34,640
would be nice to build practical

1587
01:10:33,600 --> 01:10:36,960
solutions

1588
01:10:34,640 --> 01:10:40,000
it's only a seven page spec and we can

1589
01:10:36,960 --> 01:10:42,640
comment on it as a working group draft

1590
01:10:40,000 --> 01:10:43,520
we had support on when i sent it out a

1591
01:10:42,640 --> 01:10:45,199
few months ago

1592
01:10:43,520 --> 01:10:47,280
there was support the chairs thought

1593
01:10:45,199 --> 01:10:48,799
there were wasn't support

1594
01:10:47,280 --> 01:10:50,800
and then joel decided to read the

1595
01:10:48,800 --> 01:10:54,080
document and then objected to it

1596
01:10:50,800 --> 01:10:58,400
so so we have had support

1597
01:10:54,080 --> 01:10:58,880
okay on that i i i have to disagree as

1598
01:10:58,400 --> 01:11:03,120
well

1599
01:10:58,880 --> 01:11:05,040
dean i'm sorry but um so

1600
01:11:03,120 --> 01:11:06,640
what do you what do you mean let me try

1601
01:11:05,040 --> 01:11:08,560
to explain my concerns

1602
01:11:06,640 --> 01:11:10,840
let me try to inspire you okay so the

1603
01:11:08,560 --> 01:11:13,040
point is the the

1604
01:11:10,840 --> 01:11:17,120
the the document

1605
01:11:13,040 --> 01:11:20,400
has not been really

1606
01:11:17,120 --> 01:11:23,199
evaluated by the group you had a

1607
01:11:20,400 --> 01:11:24,480
once you presented the document then you

1608
01:11:23,199 --> 01:11:28,960
had

1609
01:11:24,480 --> 01:11:31,280
several updates etc but the the

1610
01:11:28,960 --> 01:11:34,320
what happened is that you moved forward

1611
01:11:31,280 --> 01:11:37,679
the document at some point you you you

1612
01:11:34,320 --> 01:11:39,120
uh you you said uh it's time for the the

1613
01:11:37,679 --> 01:11:41,840
working loop to adopt this

1614
01:11:39,120 --> 01:11:42,719
document i did not say that i never say

1615
01:11:41,840 --> 01:11:45,600
that luigi

1616
01:11:42,719 --> 01:11:46,640
i have to clarify you you always tell me

1617
01:11:45,600 --> 01:11:49,679
that i say that

1618
01:11:46,640 --> 01:11:51,520
i requested the working group but

1619
01:11:49,679 --> 01:11:55,199
considered as a working group document

1620
01:11:51,520 --> 01:11:58,159
yeah okay okay fair enough what is that

1621
01:11:55,199 --> 01:11:58,799
what i why why and if we make a working

1622
01:11:58,159 --> 01:12:02,239
group

1623
01:11:58,800 --> 01:12:04,400
more people will will will review it and

1624
01:12:02,239 --> 01:12:07,040
and it's not to you take an action that

1625
01:12:04,400 --> 01:12:09,360
causes some an action from somebody else

1626
01:12:07,040 --> 01:12:10,239
and joe an example of that and i i

1627
01:12:09,360 --> 01:12:14,000
appreciate the

1628
01:12:10,239 --> 01:12:16,559
comments so the point is

1629
01:12:14,000 --> 01:12:18,159
uh to become working group document

1630
01:12:16,560 --> 01:12:19,920
there must be some interest

1631
01:12:18,159 --> 01:12:21,199
people have to to see the interest in

1632
01:12:19,920 --> 01:12:24,560
the document and say

1633
01:12:21,199 --> 01:12:26,159
i i need this okay so

1634
01:12:24,560 --> 01:12:28,640
what happened on the mailing list was

1635
01:12:26,159 --> 01:12:31,839
more about what yes why not

1636
01:12:28,640 --> 01:12:31,840
okay okay

1637
01:12:34,239 --> 01:12:39,440
type of support okay there was support

1638
01:12:37,679 --> 01:12:40,719
on the list people said it should be a

1639
01:12:39,440 --> 01:12:42,480
working group document

1640
01:12:40,719 --> 01:12:44,000
for some reason the chairs are deciding

1641
01:12:42,480 --> 01:12:46,639
to ignore that no no

1642
01:12:44,000 --> 01:12:47,040
no no no no that's not fair that's not

1643
01:12:46,640 --> 01:12:50,000
fair

1644
01:12:47,040 --> 01:12:51,120
i i i'm trying to to to see what is

1645
01:12:50,000 --> 01:12:54,800
happening so

1646
01:12:51,120 --> 01:12:57,840
um there is

1647
01:12:54,800 --> 01:13:01,440
some concerns about development or

1648
01:12:57,840 --> 01:13:04,640
what i suggest what i suggest uh

1649
01:13:01,440 --> 01:13:06,719
is that um you and joel

1650
01:13:04,640 --> 01:13:08,400
you you you really try to discuss what

1651
01:13:06,719 --> 01:13:09,520
what are the concerns and what are the

1652
01:13:08,400 --> 01:13:12,639
technical issues

1653
01:13:09,520 --> 01:13:13,760
concerning the this document okay and

1654
01:13:12,640 --> 01:13:16,159
then

1655
01:13:13,760 --> 01:13:18,080
we go back to the mailing list and the

1656
01:13:16,159 --> 01:13:21,839
working group and say

1657
01:13:18,080 --> 01:13:25,280
this is me are the issues that

1658
01:13:21,840 --> 01:13:28,159
joel had and uh does anybody

1659
01:13:25,280 --> 01:13:30,400
has ordered concerns uh are people

1660
01:13:28,159 --> 01:13:33,440
really interested in having these

1661
01:13:30,400 --> 01:13:36,480
uh uh in lisp because you think

1662
01:13:33,440 --> 01:13:39,040
this is a feature that lease needs

1663
01:13:36,480 --> 01:13:41,199
it's not a feature that you need and it

1664
01:13:39,040 --> 01:13:43,040
works for you when you are alone in

1665
01:13:41,199 --> 01:13:44,239
your implementation something that has

1666
01:13:43,040 --> 01:13:46,239
to work with

1667
01:13:44,239 --> 01:13:48,000
with the internet and the lisp as a

1668
01:13:46,239 --> 01:13:51,440
whole that's my point

1669
01:13:48,000 --> 01:13:54,880
okay if we reach this this uh level of

1670
01:13:51,440 --> 01:13:57,199
uh specification because in my opinion

1671
01:13:54,880 --> 01:13:59,440
the documents i i told you this on the

1672
01:13:57,199 --> 01:14:02,159
native list is under specified

1673
01:13:59,440 --> 01:14:03,599
okay that there are missing pieces that

1674
01:14:02,159 --> 01:14:07,920
maybe they are clear

1675
01:14:03,600 --> 01:14:10,719
in your idea but are not written there

1676
01:14:07,920 --> 01:14:12,320
okay so i would like to receive specific

1677
01:14:10,719 --> 01:14:15,040
comments please

1678
01:14:12,320 --> 01:14:16,000
okay rather than just making a high

1679
01:14:15,040 --> 01:14:18,000
level problem

1680
01:14:16,000 --> 01:14:19,280
i did not have english i i didn't know

1681
01:14:18,000 --> 01:14:21,679
the mailing list i didn't

1682
01:14:19,280 --> 01:14:23,519
read your last version of the document

1683
01:14:21,679 --> 01:14:25,920
to be honest i cannot say

1684
01:14:23,520 --> 01:14:28,719
if they have been addressed or not i

1685
01:14:25,920 --> 01:14:28,719
will read you

1686
01:14:29,360 --> 01:14:32,880
i will send you the specific uh specific

1687
01:14:32,080 --> 01:14:35,840
remarks

1688
01:14:32,880 --> 01:14:36,159
this is not a problem it's just that we

1689
01:14:35,840 --> 01:14:39,280
need

1690
01:14:36,159 --> 01:14:42,159
the token to be clear okay and

1691
01:14:39,280 --> 01:14:44,080
well specified then we move it on and to

1692
01:14:42,159 --> 01:14:47,360
really check if the working group

1693
01:14:44,080 --> 01:14:48,080
is entrusted keep in mind that this is

1694
01:14:47,360 --> 01:14:51,839
the point

1695
01:14:48,080 --> 01:14:55,440
being trusted because it's not that

1696
01:14:51,840 --> 01:14:57,840
we i write something concerning please

1697
01:14:55,440 --> 01:14:59,839
and i say okay the working group needs

1698
01:14:57,840 --> 01:15:02,800
to to adopt this

1699
01:14:59,840 --> 01:15:03,199
should consider adopting this document

1700
01:15:02,800 --> 01:15:05,360
okay

1701
01:15:03,199 --> 01:15:07,519
it's about the interest how useful is

1702
01:15:05,360 --> 01:15:10,080
for the least i understand from your

1703
01:15:07,520 --> 01:15:11,600
perspective is very useful but it's

1704
01:15:10,080 --> 01:15:13,760
about the working group

1705
01:15:11,600 --> 01:15:15,120
see what i mean well we have other

1706
01:15:13,760 --> 01:15:16,800
implementations of it too

1707
01:15:15,120 --> 01:15:20,320
i i'm not the only one using the

1708
01:15:16,800 --> 01:15:23,600
implement implementation so

1709
01:15:20,320 --> 01:15:26,719
maybe i'm missing something and we

1710
01:15:23,600 --> 01:15:27,040
and we will work in the coming weeks to

1711
01:15:26,719 --> 01:15:30,719
to

1712
01:15:27,040 --> 01:15:34,800
clarify everything and then when all the

1713
01:15:30,719 --> 01:15:38,800
especially joy has strong concerns

1714
01:15:34,800 --> 01:15:41,679
we we work on this

1715
01:15:38,800 --> 01:15:42,719
and then we move on we check what the

1716
01:15:41,679 --> 01:15:46,480
working groups

1717
01:15:42,719 --> 01:15:50,000
uh group uh yeah i mean

1718
01:15:46,480 --> 01:15:50,000
you know making it working

1719
01:15:57,920 --> 01:16:00,960
i just wanted to make a short comment

1720
01:15:59,679 --> 01:16:03,040
sorry uh

1721
01:16:00,960 --> 01:16:04,400
so you know looks like the joel has some

1722
01:16:03,040 --> 01:16:07,280
specific

1723
01:16:04,400 --> 01:16:08,159
objection right probably it seems that

1724
01:16:07,280 --> 01:16:11,360
the

1725
01:16:08,159 --> 01:16:13,360
um the word might help

1726
01:16:11,360 --> 01:16:15,040
from him articulating better what are

1727
01:16:13,360 --> 01:16:17,280
the objections

1728
01:16:15,040 --> 01:16:19,440
so i think at this point the suggestion

1729
01:16:17,280 --> 01:16:22,000
that luigi's giving is

1730
01:16:19,440 --> 01:16:23,120
spend some time with joel if you the two

1731
01:16:22,000 --> 01:16:25,920
of you sit down

1732
01:16:23,120 --> 01:16:28,559
and you try to basically understand what

1733
01:16:25,920 --> 01:16:30,880
joel is saying and joel is trying to

1734
01:16:28,560 --> 01:16:31,679
articulating in more detail what are his

1735
01:16:30,880 --> 01:16:34,880
objections

1736
01:16:31,679 --> 01:16:38,000
that will eventually lead to

1737
01:16:34,880 --> 01:16:40,080
i mean having more content for for your

1738
01:16:38,000 --> 01:16:43,040
document so i i don't see how

1739
01:16:40,080 --> 01:16:44,640
that that is detrimental right we have

1740
01:16:43,040 --> 01:16:47,840
started that process

1741
01:16:44,640 --> 01:16:48,480
and we had one round and the document

1742
01:16:47,840 --> 01:16:50,239
was written

1743
01:16:48,480 --> 01:16:52,159
and joel's not satisfied so we have to

1744
01:16:50,239 --> 01:16:54,559
do it again so that's all there's to it

1745
01:16:52,159 --> 01:16:56,400
right yeah that's that's yeah yeah yeah

1746
01:16:54,560 --> 01:17:00,800
that's how it works right sometimes

1747
01:16:56,400 --> 01:17:02,879
yeah yeah yeah

1748
01:17:00,800 --> 01:17:04,000
and then we will check if the working

1749
01:17:02,880 --> 01:17:08,080
group

1750
01:17:04,000 --> 01:17:11,280
is interested in this work i i hear your

1751
01:17:08,080 --> 01:17:12,239
your voice you say it is but we have to

1752
01:17:11,280 --> 01:17:17,840
check it

1753
01:17:12,239 --> 01:17:17,839
as for the usual process okay

1754
01:17:24,159 --> 01:17:30,879
is it okay for everybody if we

1755
01:17:27,199 --> 01:17:34,239
proceed in this way

1756
01:17:30,880 --> 01:17:37,600
does anybody has further comments

1757
01:17:34,239 --> 01:17:40,000
i invite you all of the

1758
01:17:37,600 --> 01:17:41,120
people to read anyway the the document

1759
01:17:40,000 --> 01:17:43,280
and and

1760
01:17:41,120 --> 01:17:45,599
beside the technical concerns that you

1761
01:17:43,280 --> 01:17:48,080
may or may not have

1762
01:17:45,600 --> 01:17:49,040
make up your mind if whether or not this

1763
01:17:48,080 --> 01:17:54,000
is something

1764
01:17:49,040 --> 01:17:58,159
useful for this and the working group

1765
01:17:54,000 --> 01:18:00,320
okay so uh uh uh

1766
01:17:58,159 --> 01:18:01,360
quick commentary uh yeah sorry i haven't

1767
01:18:00,320 --> 01:18:03,360
i haven't spent the

1768
01:18:01,360 --> 01:18:05,120
time maybe i shouldn't on this document

1769
01:18:03,360 --> 01:18:07,360
and i don't have the expertise

1770
01:18:05,120 --> 01:18:08,800
but my personal opinion as a working

1771
01:18:07,360 --> 01:18:10,400
good participant is that this

1772
01:18:08,800 --> 01:18:12,159
could potentially be something something

1773
01:18:10,400 --> 01:18:14,559
difficult for the protocols

1774
01:18:12,159 --> 01:18:15,440
so i would definitely like to see the

1775
01:18:14,560 --> 01:18:17,679
discussion

1776
01:18:15,440 --> 01:18:18,480
going on and and you know where i want

1777
01:18:17,679 --> 01:18:20,320
to

1778
01:18:18,480 --> 01:18:24,239
turn in on the technical details to do

1779
01:18:20,320 --> 01:18:26,880
so so we can start with hardware

1780
01:18:24,239 --> 01:18:27,678
okay so that you see potentially in this

1781
01:18:26,880 --> 01:18:30,480
document

1782
01:18:27,679 --> 01:18:30,480
please really

1783
01:18:30,880 --> 01:18:34,800
the more voice voices there are there

1784
01:18:33,199 --> 01:18:38,639
the better the

1785
01:18:34,800 --> 01:18:40,640
document will be happening so

1786
01:18:38,640 --> 01:18:42,400
review the documents and send the any

1787
01:18:40,640 --> 01:18:44,239
concerns that you have or

1788
01:18:42,400 --> 01:18:46,159
if you don't have concerns you say for

1789
01:18:44,239 --> 01:18:48,480
me it's good i can implement

1790
01:18:46,159 --> 01:18:49,599
alberto alberto said that on the list

1791
01:18:48,480 --> 01:18:52,239
that he supported it

1792
01:18:49,600 --> 01:18:53,360
as among as well as other people so i

1793
01:18:52,239 --> 01:18:55,678
hope you saw that

1794
01:18:53,360 --> 01:18:58,159
that level of support there were a half

1795
01:18:55,679 --> 01:19:02,800
a dozen messages right

1796
01:18:58,159 --> 01:19:02,799
nobody said that nobody is interested

1797
01:19:04,400 --> 01:19:09,199
try to understand it's just that uh we

1798
01:19:07,360 --> 01:19:12,239
we

1799
01:19:09,199 --> 01:19:15,120
we were not able to to

1800
01:19:12,239 --> 01:19:16,000
to declare a strong consensus and there

1801
01:19:15,120 --> 01:19:19,040
were

1802
01:19:16,000 --> 01:19:21,440
technical concerns about your document

1803
01:19:19,040 --> 01:19:23,679
that's the point we can work on the

1804
01:19:21,440 --> 01:19:27,599
technical concerns

1805
01:19:23,679 --> 01:19:28,960
and make a full normal checking whether

1806
01:19:27,600 --> 01:19:30,159
or not the working ability is

1807
01:19:28,960 --> 01:19:37,840
interesting

1808
01:19:30,159 --> 01:19:37,839
that's it simple as that

1809
01:19:40,080 --> 01:19:43,840
that's great for everybody

1810
01:19:45,679 --> 01:19:51,840
okay let's move on in this case

1811
01:19:54,159 --> 01:19:58,879
nice presentation put it on

1812
01:20:02,840 --> 01:20:05,840
jody

1813
01:20:09,600 --> 01:20:12,960
here we go i jumped

1814
01:20:13,920 --> 01:20:19,840
i cannot hear you

1815
01:20:23,280 --> 01:20:26,389
[Music]

1816
01:20:31,520 --> 01:20:36,800
okay you have to click both buttons okay

1817
01:20:36,880 --> 01:20:44,880
okay we hear you now okay great

1818
01:20:40,800 --> 01:20:48,400
and i hope you can also see me yes

1819
01:20:44,880 --> 01:20:50,159
okay so um in this presentation we'll

1820
01:20:48,400 --> 01:20:52,159
show how we use lisp into

1821
01:20:50,159 --> 01:20:53,679
real life deployments and this

1822
01:20:52,159 --> 01:20:54,400
presentation is based on a paper that

1823
01:20:53,679 --> 01:20:59,040
you

1824
01:20:54,400 --> 01:21:02,159
can find here in archive and can you

1825
01:20:59,040 --> 01:21:02,159
big next slide

1826
01:21:03,840 --> 01:21:07,199
so well basically these deployments are

1827
01:21:05,520 --> 01:21:09,360
part of a larger product

1828
01:21:07,199 --> 01:21:10,480
that it's for enterprise and campus

1829
01:21:09,360 --> 01:21:12,159
networks

1830
01:21:10,480 --> 01:21:14,879
and well first i will give a quick

1831
01:21:12,159 --> 01:21:17,280
overview of of this product

1832
01:21:14,880 --> 01:21:18,400
and then i will explain why we use lisp

1833
01:21:17,280 --> 01:21:20,719
for this product

1834
01:21:18,400 --> 01:21:22,239
i will also give a quick overview of the

1835
01:21:20,719 --> 01:21:24,639
design and architecture

1836
01:21:22,239 --> 01:21:26,320
and i will end up with some evolution

1837
01:21:24,639 --> 01:21:29,440
details

1838
01:21:26,320 --> 01:21:31,599
next slide please so

1839
01:21:29,440 --> 01:21:32,960
sda or software defined access is a

1840
01:21:31,600 --> 01:21:35,199
product for

1841
01:21:32,960 --> 01:21:36,560
campus and access networks and well it

1842
01:21:35,199 --> 01:21:39,599
does several

1843
01:21:36,560 --> 01:21:41,520
things but it basically has a big

1844
01:21:39,600 --> 01:21:45,360
explanatory plane and it usually

1845
01:21:41,520 --> 01:21:47,040
has a control plane and it treats

1846
01:21:45,360 --> 01:21:48,880
white and wireless traffic in the same

1847
01:21:47,040 --> 01:21:54,159
way

1848
01:21:48,880 --> 01:21:54,159
and it's basically it's aimed to

1849
01:21:55,679 --> 01:21:59,280
support uh the requirements of core

1850
01:21:57,679 --> 01:22:02,639
enterprise networks

1851
01:21:59,280 --> 01:22:06,159
so in short its mobility segmentation

1852
01:22:02,639 --> 01:22:07,600
and resource efficiency and also we

1853
01:22:06,159 --> 01:22:10,879
it provides segmentation into our

1854
01:22:07,600 --> 01:22:13,280
technology we're using the bix lan bni

1855
01:22:10,880 --> 01:22:15,760
and also group based policies while this

1856
01:22:13,280 --> 01:22:18,000
is quite a widespread

1857
01:22:15,760 --> 01:22:19,679
standard in the industry basically

1858
01:22:18,000 --> 01:22:20,880
mapping ip addresses to a group and then

1859
01:22:19,679 --> 01:22:23,440
enforcing policies

1860
01:22:20,880 --> 01:22:24,560
on this group and it also provides layer

1861
01:22:23,440 --> 01:22:26,239
to stretching

1862
01:22:24,560 --> 01:22:27,760
and we also use some list probabilities

1863
01:22:26,239 --> 01:22:30,559
for that

1864
01:22:27,760 --> 01:22:30,560
next slide please

1865
01:22:31,920 --> 01:22:37,760
so why did we use lisp

1866
01:22:34,960 --> 01:22:38,080
for this product uh well first of all to

1867
01:22:37,760 --> 01:22:40,560
provide

1868
01:22:38,080 --> 01:22:41,519
mobility uh about layer two and layer

1869
01:22:40,560 --> 01:22:44,239
three

1870
01:22:41,520 --> 01:22:45,840
also to reduce uh and distribute the

1871
01:22:44,239 --> 01:22:48,480
data playing state

1872
01:22:45,840 --> 01:22:50,159
um and especially to reduce the

1873
01:22:48,480 --> 01:22:53,280
electronic state so

1874
01:22:50,159 --> 01:22:54,000
our main goal is reusing capex so

1875
01:22:53,280 --> 01:22:55,840
basically

1876
01:22:54,000 --> 01:22:57,920
if we have less entities in the data

1877
01:22:55,840 --> 01:23:00,800
plane we need a smaller fit

1878
01:22:57,920 --> 01:23:02,080
this means less memory and this means

1879
01:23:00,800 --> 01:23:04,800
cheaper

1880
01:23:02,080 --> 01:23:06,800
routers because they will need a smaller

1881
01:23:04,800 --> 01:23:07,840
chips or memories or tickets or whatever

1882
01:23:06,800 --> 01:23:10,080
they are using

1883
01:23:07,840 --> 01:23:12,320
and also because we can at least we can

1884
01:23:10,080 --> 01:23:16,000
provide incremental deployment

1885
01:23:12,320 --> 01:23:18,239
basically we can leave all routers

1886
01:23:16,000 --> 01:23:21,199
in the underlay and just update the ones

1887
01:23:18,239 --> 01:23:24,080
that are using this

1888
01:23:21,199 --> 01:23:24,080
next slide please

1889
01:23:24,800 --> 01:23:28,639
so keep note on the creator and design

1890
01:23:27,360 --> 01:23:30,960
can you switch

1891
01:23:28,639 --> 01:23:32,320
sorry i was thinking i would be able to

1892
01:23:30,960 --> 01:23:36,000
click them for myself

1893
01:23:32,320 --> 01:23:37,199
no problem so we use the standard list

1894
01:23:36,000 --> 01:23:39,920
with a few tweaks

1895
01:23:37,199 --> 01:23:42,159
as i said before we also use the big sun

1896
01:23:39,920 --> 01:23:44,320
as a data plane

1897
01:23:42,159 --> 01:23:46,000
and we tap endpoints individually so

1898
01:23:44,320 --> 01:23:49,120
that means that all eit's

1899
01:23:46,000 --> 01:23:52,480
are slash 32s

1900
01:23:49,120 --> 01:23:53,519
and we store uh four mappings for each

1901
01:23:52,480 --> 01:23:55,839
uh

1902
01:23:53,520 --> 01:23:57,600
endpoint so we have their ip version for

1903
01:23:55,840 --> 01:23:59,840
address ipv6

1904
01:23:57,600 --> 01:24:02,159
mac address and then we also have a

1905
01:23:59,840 --> 01:24:05,600
mapping of

1906
01:24:02,159 --> 01:24:08,080
mac eid to ipa id and we use that

1907
01:24:05,600 --> 01:24:09,199
for layer 2 stretching that i will

1908
01:24:08,080 --> 01:24:13,440
explain it

1909
01:24:09,199 --> 01:24:13,440
later next slide

1910
01:24:14,639 --> 01:24:17,679
and regarding the wireless parts

1911
01:24:16,719 --> 01:24:20,719
basically to

1912
01:24:17,679 --> 01:24:23,760
to paste or to join list

1913
01:24:20,719 --> 01:24:24,800
and and wireless what we do is on one

1914
01:24:23,760 --> 01:24:28,080
hand

1915
01:24:24,800 --> 01:24:29,840
we connect access points to xtrs

1916
01:24:28,080 --> 01:24:32,239
and on the other hand we connect the

1917
01:24:29,840 --> 01:24:34,639
vlan controller to the map server

1918
01:24:32,239 --> 01:24:35,280
so this way the when the vlan controller

1919
01:24:34,639 --> 01:24:38,960
detects

1920
01:24:35,280 --> 01:24:41,519
that the host is doing a mobility event

1921
01:24:38,960 --> 01:24:42,239
it sends a map resistor to the amp

1922
01:24:41,520 --> 01:24:45,920
server so

1923
01:24:42,239 --> 01:24:47,120
the location is updated and also i have

1924
01:24:45,920 --> 01:24:51,520
to mention that

1925
01:24:47,120 --> 01:24:54,559
we add a big slant panel

1926
01:24:51,520 --> 01:24:58,159
between the hdrs and access points but

1927
01:24:54,560 --> 01:25:00,400
next slide please

1928
01:24:58,159 --> 01:25:01,839
well we actually i mean however this big

1929
01:25:00,400 --> 01:25:03,759
land tunnel i was mentioning between the

1930
01:25:01,840 --> 01:25:05,840
access point and this guy is different

1931
01:25:03,760 --> 01:25:07,360
from the ones in the underlay so the the

1932
01:25:05,840 --> 01:25:10,320
one index

1933
01:25:07,360 --> 01:25:12,080
between the hdr and access point just to

1934
01:25:10,320 --> 01:25:14,960
be able to have several access points

1935
01:25:12,080 --> 01:25:16,800
in the same xtr but this information is

1936
01:25:14,960 --> 01:25:18,800
not propagated in the map

1937
01:25:16,800 --> 01:25:21,360
mapping system we we just have the

1938
01:25:18,800 --> 01:25:24,400
regular ones from the underlay

1939
01:25:21,360 --> 01:25:24,400
uh next slide please

1940
01:25:24,719 --> 01:25:28,400
so i i will explain just a few details

1941
01:25:27,199 --> 01:25:31,599
about how we handle

1942
01:25:28,400 --> 01:25:34,080
all the mobility with the wireless stuff

1943
01:25:31,600 --> 01:25:35,440
um as i said we have this static uh big

1944
01:25:34,080 --> 01:25:37,440
slant tunnel

1945
01:25:35,440 --> 01:25:38,960
basically we needed to carry the layer

1946
01:25:37,440 --> 01:25:41,280
two frames between the xtr and access

1947
01:25:38,960 --> 01:25:46,960
points

1948
01:25:41,280 --> 01:25:50,000
and and we also

1949
01:25:46,960 --> 01:25:51,840
what we also do is we store the ip of

1950
01:25:50,000 --> 01:25:53,760
the access point

1951
01:25:51,840 --> 01:25:55,760
and the xtr where it is connected in the

1952
01:25:53,760 --> 01:25:59,440
map server we'll see later

1953
01:25:55,760 --> 01:26:04,400
why we need that and when the

1954
01:25:59,440 --> 01:26:05,919
vlan controller detects a roaming event

1955
01:26:04,400 --> 01:26:08,159
from an access point via the cab web

1956
01:26:05,920 --> 01:26:09,840
protocol as i said before it sends the

1957
01:26:08,159 --> 01:26:11,120
map register to the map server to update

1958
01:26:09,840 --> 01:26:14,400
the location

1959
01:26:11,120 --> 01:26:16,800
of this of this endpoint uh but

1960
01:26:14,400 --> 01:26:18,400
and here is when when the the mapping of

1961
01:26:16,800 --> 01:26:20,880
access point ap to xtr

1962
01:26:18,400 --> 01:26:23,120
airlock is useful uh because so

1963
01:26:20,880 --> 01:26:26,960
basically we do to

1964
01:26:23,120 --> 01:26:30,480
push the wheel on contour does a

1965
01:26:26,960 --> 01:26:34,880
map request to know the

1966
01:26:30,480 --> 01:26:36,879
exterior lock of the new access point

1967
01:26:34,880 --> 01:26:38,000
and then that's the the actual map

1968
01:26:36,880 --> 01:26:43,360
register of the

1969
01:26:38,000 --> 01:26:43,360
of this endpoint uh next slide please

1970
01:26:43,760 --> 01:26:47,040
so once we have updated the the location

1971
01:26:46,239 --> 01:26:50,320
of the endpoint

1972
01:26:47,040 --> 01:26:52,239
in the map server uh the new xtr

1973
01:26:50,320 --> 01:26:55,120
receives a map notify

1974
01:26:52,239 --> 01:26:55,919
in order to update local estate so it

1975
01:26:55,120 --> 01:26:59,519
can

1976
01:26:55,920 --> 01:27:01,440
so traffic can reach the new host

1977
01:26:59,520 --> 01:27:03,199
and also we use a couple of mechanisms

1978
01:27:01,440 --> 01:27:06,400
to improve connectivity

1979
01:27:03,199 --> 01:27:08,480
they are the away entry and the smr

1980
01:27:06,400 --> 01:27:11,360
and i will well can you you switch to

1981
01:27:08,480 --> 01:27:11,360
next light please

1982
01:27:11,920 --> 01:27:15,199
and basically what we do is we usually

1983
01:27:13,760 --> 01:27:19,520
use smr

1984
01:27:15,199 --> 01:27:21,280
if even xtr receives traffic for an eid

1985
01:27:19,520 --> 01:27:24,400
that is no longer in this xtr

1986
01:27:21,280 --> 01:27:26,719
it sends an smr to the origin xtr so it

1987
01:27:24,400 --> 01:27:30,239
can update its map cache

1988
01:27:26,719 --> 01:27:33,199
and well how does this this xtr

1989
01:27:30,239 --> 01:27:33,519
know that the e8 is no longer connected

1990
01:27:33,199 --> 01:27:35,599
well

1991
01:27:33,520 --> 01:27:36,960
we have the the other mechanism the y

1992
01:27:35,600 --> 01:27:38,960
entry that basically remembers this

1993
01:27:36,960 --> 01:27:42,000
information

1994
01:27:38,960 --> 01:27:44,239
and also uh the oynt what does is tell

1995
01:27:42,000 --> 01:27:46,639
the xtr to forward

1996
01:27:44,239 --> 01:27:48,000
this traffic to the new xtr so well it's

1997
01:27:46,639 --> 01:27:50,719
what you can see here in the

1998
01:27:48,000 --> 01:27:52,320
in the graph basically the way entry uh

1999
01:27:50,719 --> 01:27:54,320
instead of dropping traffic

2000
01:27:52,320 --> 01:27:55,360
for for an id that is no longer present

2001
01:27:54,320 --> 01:28:00,000
it forwards it to the

2002
01:27:55,360 --> 01:28:03,679
to the new xdr

2003
01:28:00,000 --> 01:28:07,840
i think that's all uh next slide please

2004
01:28:03,679 --> 01:28:07,840
oh yeah and finally a design note about

2005
01:28:09,040 --> 01:28:12,560
the resolution delay as you know we have

2006
01:28:11,440 --> 01:28:16,080
a

2007
01:28:12,560 --> 01:28:19,120
small delay until we

2008
01:28:16,080 --> 01:28:20,880
resolve a map request and to avoid

2009
01:28:19,120 --> 01:28:24,159
dropping packets during this time

2010
01:28:20,880 --> 01:28:25,760
we use this list configuration first of

2011
01:28:24,159 --> 01:28:29,360
all all the hdrs

2012
01:28:25,760 --> 01:28:32,159
have a default route to a proxy xtr

2013
01:28:29,360 --> 01:28:33,759
but this proxy has also a bearing of the

2014
01:28:32,159 --> 01:28:37,120
publish subscribe that

2015
01:28:33,760 --> 01:28:38,159
active so that it always is synchronized

2016
01:28:37,120 --> 01:28:40,000
with the map server

2017
01:28:38,159 --> 01:28:42,159
so in other words the proxy can forward

2018
01:28:40,000 --> 01:28:45,840
traffic to any destination

2019
01:28:42,159 --> 01:28:48,320
so this way we can

2020
01:28:45,840 --> 01:28:50,960
forward the the pack the packets uh

2021
01:28:48,320 --> 01:28:53,599
until the

2022
01:28:50,960 --> 01:28:54,960
map request is reset received in the xtr

2023
01:28:53,600 --> 01:28:57,280
so this way we

2024
01:28:54,960 --> 01:28:59,520
don't drop any any packet and we also

2025
01:28:57,280 --> 01:29:02,719
use this proxy to

2026
01:28:59,520 --> 01:29:05,199
to provide external connectivity next

2027
01:29:02,719 --> 01:29:05,199
slide please

2028
01:29:05,840 --> 01:29:10,000
and well finally just a few notes about

2029
01:29:08,560 --> 01:29:11,440
layer 2 stretching

2030
01:29:10,000 --> 01:29:13,600
i mean by layer to stretching i mean

2031
01:29:11,440 --> 01:29:16,559
that being able to extend

2032
01:29:13,600 --> 01:29:17,840
layers to domains in a scalable way and

2033
01:29:16,560 --> 01:29:19,920
this is something that is

2034
01:29:17,840 --> 01:29:22,239
quite useful for enterprises because

2035
01:29:19,920 --> 01:29:24,400
sometimes you want to avoid

2036
01:29:22,239 --> 01:29:26,799
air free broadcasts propagating through

2037
01:29:24,400 --> 01:29:28,000
the whole network i mean it's especially

2038
01:29:26,800 --> 01:29:30,560
important in medium and large

2039
01:29:28,000 --> 01:29:32,159
deployments also you have you have some

2040
01:29:30,560 --> 01:29:34,400
layer two protocols that require

2041
01:29:32,159 --> 01:29:35,679
layer two visibility for example apple

2042
01:29:34,400 --> 01:29:37,759
conjure

2043
01:29:35,679 --> 01:29:40,560
and also it's very common that to have

2044
01:29:37,760 --> 01:29:44,080
legacy iot devices that are not using

2045
01:29:40,560 --> 01:29:45,920
ips so you need some way to connect them

2046
01:29:44,080 --> 01:29:47,280
and well what we basically do is it's

2047
01:29:45,920 --> 01:29:49,440
quite simple and

2048
01:29:47,280 --> 01:29:51,280
straightforward the the source xtr

2049
01:29:49,440 --> 01:29:52,559
encapsulates the layer two frames to the

2050
01:29:51,280 --> 01:29:54,320
destination xtr

2051
01:29:52,560 --> 01:29:55,600
because we can do that because we have

2052
01:29:54,320 --> 01:29:58,719
the option of

2053
01:29:55,600 --> 01:30:00,159
uh in the xlan and we use the map server

2054
01:29:58,719 --> 01:30:01,440
to resolve the missing information for

2055
01:30:00,159 --> 01:30:06,080
example we use the

2056
01:30:01,440 --> 01:30:09,120
destination mac address to know which um

2057
01:30:06,080 --> 01:30:11,600
xtr has uh this

2058
01:30:09,120 --> 01:30:13,519
this uh endpoint and we know this

2059
01:30:11,600 --> 01:30:14,719
because we we registered previously in

2060
01:30:13,520 --> 01:30:17,520
the map server

2061
01:30:14,719 --> 01:30:20,000
uh both the ip address and the macadas

2062
01:30:17,520 --> 01:30:24,080
of an endpoint

2063
01:30:20,000 --> 01:30:25,920
and also for for being able to propagate

2064
01:30:24,080 --> 01:30:29,360
irp request we use the

2065
01:30:25,920 --> 01:30:31,600
mac to id mapping so um this way we can

2066
01:30:29,360 --> 01:30:31,599
know

2067
01:30:32,000 --> 01:30:36,560
which ip which gid corresponds to a

2068
01:30:34,719 --> 01:30:39,600
specific mac address

2069
01:30:36,560 --> 01:30:42,080
and well just as a small note we

2070
01:30:39,600 --> 01:30:43,440
forward all irp requests instead of

2071
01:30:42,080 --> 01:30:46,480
creating them i mean

2072
01:30:43,440 --> 01:30:49,120
the xtr could respond

2073
01:30:46,480 --> 01:30:51,199
to some irp requests but we forward them

2074
01:30:49,120 --> 01:30:56,639
for coherence with ipv6

2075
01:30:51,199 --> 01:30:59,678
ndp next slide please

2076
01:30:56,639 --> 01:31:00,560
so while i provide some some results

2077
01:30:59,679 --> 01:31:03,600
that

2078
01:31:00,560 --> 01:31:06,719
prove more or less what i've been saying

2079
01:31:03,600 --> 01:31:09,280
until now um next slide please

2080
01:31:06,719 --> 01:31:10,159
so the the first um measurement we

2081
01:31:09,280 --> 01:31:12,480
performed was

2082
01:31:10,159 --> 01:31:13,920
uh trying to prove that we could reduce

2083
01:31:12,480 --> 01:31:15,759
the data playing state

2084
01:31:13,920 --> 01:31:18,960
and what we did was count the map cache

2085
01:31:15,760 --> 01:31:20,719
entries in the proxies and the xtrs

2086
01:31:18,960 --> 01:31:23,199
since uh as i told you before the

2087
01:31:20,719 --> 01:31:25,840
process has all the map server data

2088
01:31:23,199 --> 01:31:27,440
uh we should be seeing uh index dr just

2089
01:31:25,840 --> 01:31:30,080
a fraction of the mappings that

2090
01:31:27,440 --> 01:31:31,678
that has the proxies and we have data

2091
01:31:30,080 --> 01:31:33,760
from two deployments you can see here

2092
01:31:31,679 --> 01:31:35,600
the topology which is quite simple

2093
01:31:33,760 --> 01:31:37,280
um i'm not showing the underlay for

2094
01:31:35,600 --> 01:31:39,920
clarity

2095
01:31:37,280 --> 01:31:42,559
we have a deployment with 150 hosts

2096
01:31:39,920 --> 01:31:44,239
another one with 450 horse

2097
01:31:42,560 --> 01:31:45,760
there are usually two proxies for

2098
01:31:44,239 --> 01:31:48,320
redundancy

2099
01:31:45,760 --> 01:31:51,040
six xtrs and approximately 20 access

2100
01:31:48,320 --> 01:31:54,239
points per xpr

2101
01:31:51,040 --> 01:31:57,280
next slide please and

2102
01:31:54,239 --> 01:32:00,718
here you can see the the results

2103
01:31:57,280 --> 01:32:04,320
these graphs plot the average number

2104
01:32:00,719 --> 01:32:05,280
of map cache entries for ip version for

2105
01:32:04,320 --> 01:32:07,920
eads

2106
01:32:05,280 --> 01:32:10,239
for the proxies and xtrs for the two

2107
01:32:07,920 --> 01:32:12,880
deployments and for two weeks

2108
01:32:10,239 --> 01:32:15,678
and you can see that usually we have

2109
01:32:12,880 --> 01:32:18,400
more entries in the proxy that index trs

2110
01:32:15,679 --> 01:32:18,400
next slide please

2111
01:32:18,880 --> 01:32:22,239
and specifically you can see that in the

2112
01:32:20,480 --> 01:32:23,759
first deployment you have a 50 reduction

2113
01:32:22,239 --> 01:32:26,400
in the data point state

2114
01:32:23,760 --> 01:32:27,840
and in the second slide we have an 80

2115
01:32:26,400 --> 01:32:30,719
reduction

2116
01:32:27,840 --> 01:32:30,719
uh next slide please

2117
01:32:30,960 --> 01:32:34,639
and well just some other things i we can

2118
01:32:34,239 --> 01:32:36,080
see

2119
01:32:34,639 --> 01:32:38,000
from this graph for example you can see

2120
01:32:36,080 --> 01:32:40,000
that deployment b

2121
01:32:38,000 --> 01:32:41,360
there is an amount of devices that are

2122
01:32:40,000 --> 01:32:44,639
always connected

2123
01:32:41,360 --> 01:32:47,040
uh and while these are iphones i i

2124
01:32:44,639 --> 01:32:48,560
if i recall correctly and you can also

2125
01:32:47,040 --> 01:32:51,519
see that the proxy

2126
01:32:48,560 --> 01:32:52,080
uh since using pops up or well actually

2127
01:32:51,520 --> 01:32:54,239
a very

2128
01:32:52,080 --> 01:32:55,199
pops up it's always following the the

2129
01:32:54,239 --> 01:32:56,638
work they schedule

2130
01:32:55,199 --> 01:32:58,638
for example you can see that there is no

2131
01:32:56,639 --> 01:32:58,960
one during weekends and you have all

2132
01:32:58,639 --> 01:33:01,280
these

2133
01:32:58,960 --> 01:33:02,800
spikes uh across the weekday that they

2134
01:33:01,280 --> 01:33:04,080
go down when people leave the office

2135
01:33:02,800 --> 01:33:07,520
because we're talking about

2136
01:33:04,080 --> 01:33:08,880
an enterprise network so people come and

2137
01:33:07,520 --> 01:33:13,440
go

2138
01:33:08,880 --> 01:33:15,840
and also you can see in the uh

2139
01:33:13,440 --> 01:33:17,040
saturday afternoon in well here in the

2140
01:33:15,840 --> 01:33:19,520
top right

2141
01:33:17,040 --> 01:33:20,639
uh you can see like a large drop in the

2142
01:33:19,520 --> 01:33:23,280
number of entries in the

2143
01:33:20,639 --> 01:33:23,840
xtrs well this is due that to the fact

2144
01:33:23,280 --> 01:33:26,080
that

2145
01:33:23,840 --> 01:33:26,880
we are using a 24-hour tpl for the map

2146
01:33:26,080 --> 01:33:29,760
cache

2147
01:33:26,880 --> 01:33:30,239
so more or less saturday afternoon when

2148
01:33:29,760 --> 01:33:32,480
it's

2149
01:33:30,239 --> 01:33:34,239
a day after people have left the office

2150
01:33:32,480 --> 01:33:36,480
all these entities get evicted

2151
01:33:34,239 --> 01:33:38,159
and you don't see this in the proxies

2152
01:33:36,480 --> 01:33:40,799
because since they are synchronized

2153
01:33:38,159 --> 01:33:42,799
when an endpoint leaves the office uh

2154
01:33:40,800 --> 01:33:45,840
it's very probable that so

2155
01:33:42,800 --> 01:33:47,440
probably or it's very

2156
01:33:45,840 --> 01:33:49,600
yeah it's very possible that someone

2157
01:33:47,440 --> 01:33:50,879
wants to talk with it and since

2158
01:33:49,600 --> 01:33:52,400
this endpoint is no longer in the

2159
01:33:50,880 --> 01:33:53,120
network it will receive a negative map

2160
01:33:52,400 --> 01:33:55,440
reply

2161
01:33:53,120 --> 01:33:57,440
and it will get deleted from the map

2162
01:33:55,440 --> 01:34:00,638
server

2163
01:33:57,440 --> 01:34:00,638
um next slide please

2164
01:34:01,040 --> 01:34:05,600
and finally we we related the handover

2165
01:34:03,199 --> 01:34:07,919
delay

2166
01:34:05,600 --> 01:34:10,080
we simulated in the lab the conditions

2167
01:34:07,920 --> 01:34:12,400
of a real-life use case

2168
01:34:10,080 --> 01:34:13,679
specifically it's the warehouse with

2169
01:34:12,400 --> 01:34:16,799
thousands of mobile

2170
01:34:13,679 --> 01:34:18,960
robots going around and

2171
01:34:16,800 --> 01:34:20,000
the setup consisted of three physical

2172
01:34:18,960 --> 01:34:23,360
routers

2173
01:34:20,000 --> 01:34:25,520
uh one proxy and two xtrs uh

2174
01:34:23,360 --> 01:34:26,799
we also used the traffic generator to

2175
01:34:25,520 --> 01:34:29,360
emulate

2176
01:34:26,800 --> 01:34:30,840
roughly 200 xtrs and they were all

2177
01:34:29,360 --> 01:34:32,000
generating traffic to an external

2178
01:34:30,840 --> 01:34:34,639
network

2179
01:34:32,000 --> 01:34:35,440
and also we use the traffic generator to

2180
01:34:34,639 --> 01:34:37,120
create

2181
01:34:35,440 --> 01:34:39,759
handover events between the two physical

2182
01:34:37,120 --> 01:34:40,800
routers at the rate of 800 moves per

2183
01:34:39,760 --> 01:34:43,600
second

2184
01:34:40,800 --> 01:34:44,480
and this was a requirement of the this

2185
01:34:43,600 --> 01:34:47,679
deployment

2186
01:34:44,480 --> 01:34:51,440
that i was telling you before and

2187
01:34:47,679 --> 01:34:54,800
next slide please and you can see here

2188
01:34:51,440 --> 01:34:56,638
the results so we

2189
01:34:54,800 --> 01:34:58,560
measure the handover delay for the list

2190
01:34:56,639 --> 01:35:00,639
control plane and also an implementation

2191
01:34:58,560 --> 01:35:02,320
with a bcp control plane

2192
01:35:00,639 --> 01:35:04,560
and you can see there's a difference of

2193
01:35:02,320 --> 01:35:07,119
approximately one order of magnitude

2194
01:35:04,560 --> 01:35:08,800
and this due to the fact that lis only

2195
01:35:07,119 --> 01:35:11,839
notifies the routers that need

2196
01:35:08,800 --> 01:35:14,639
an update for drops while busy needs to

2197
01:35:11,840 --> 01:35:16,159
send updates to all the routers and also

2198
01:35:14,639 --> 01:35:18,080
you can see that this also creates more

2199
01:35:16,159 --> 01:35:20,400
variability you know because it depends

2200
01:35:18,080 --> 01:35:22,159
on the moment that bcp received this

2201
01:35:20,400 --> 01:35:24,559
update and then the connection will

2202
01:35:22,159 --> 01:35:25,839
restart so you can see that there is

2203
01:35:24,560 --> 01:35:29,199
much more variability

2204
01:35:25,840 --> 01:35:33,679
in the bcp delay than in the

2205
01:35:29,199 --> 01:35:33,678
list delay next slide please

2206
01:35:33,840 --> 01:35:38,480
and that's all in conclusion we

2207
01:35:36,800 --> 01:35:40,159
presented

2208
01:35:38,480 --> 01:35:43,199
an example of a list deployment in a

2209
01:35:40,159 --> 01:35:45,839
private setup we have shown how

2210
01:35:43,199 --> 01:35:46,719
lisp can be used to reduce data plane

2211
01:35:45,840 --> 01:35:49,040
state

2212
01:35:46,719 --> 01:35:51,280
and how we created a distributed

2213
01:35:49,040 --> 01:35:53,679
mobility data plane

2214
01:35:51,280 --> 01:35:55,360
when we compare this setup to the

2215
01:35:53,679 --> 01:35:57,040
classical vlan controls we have improved

2216
01:35:55,360 --> 01:35:59,119
routing because we are not

2217
01:35:57,040 --> 01:36:01,760
sending traffic to the vlan controller

2218
01:35:59,119 --> 01:36:03,599
and back to the network

2219
01:36:01,760 --> 01:36:06,080
and also this makes it possible to scale

2220
01:36:03,600 --> 01:36:09,520
better and so we have shown how it can

2221
01:36:06,080 --> 01:36:13,280
reduce the mobility handover and

2222
01:36:09,520 --> 01:36:16,560
i think that's all let's slide but yeah

2223
01:36:13,280 --> 01:36:18,559
thanks if you have any questions

2224
01:36:16,560 --> 01:36:25,840
thank you very much uh jody any

2225
01:36:18,560 --> 01:36:25,840
questions or comments from the audience

2226
01:36:28,159 --> 01:36:32,080
i i actually have one uh oh there is

2227
01:36:31,280 --> 01:36:34,559
alberto

2228
01:36:32,080 --> 01:36:35,600
let's go ahead yeah i just have one

2229
01:36:34,560 --> 01:36:38,400
quick comment

2230
01:36:35,600 --> 01:36:40,400
i wanted to say that um so jordy has

2231
01:36:38,400 --> 01:36:42,559
done a great summary of the

2232
01:36:40,400 --> 01:36:44,400
paper in the presentation but the the

2233
01:36:42,560 --> 01:36:44,719
actual paper that is available on that

2234
01:36:44,400 --> 01:36:53,839
link

2235
01:36:44,719 --> 01:36:53,840
that is very interesting

2236
01:37:02,560 --> 01:37:06,880
different real world deployment so

2237
01:37:15,679 --> 01:37:21,840
in several real world scenarios

2238
01:37:24,320 --> 01:37:31,679
uh i switch back to my question so um

2239
01:37:28,239 --> 01:37:32,799
uh it's a nice piece of work that you

2240
01:37:31,679 --> 01:37:36,320
did first of all

2241
01:37:32,800 --> 01:37:37,760
it's very interesting and um you seem to

2242
01:37:36,320 --> 01:37:40,960
rely

2243
01:37:37,760 --> 01:37:42,560
quite a bit on the mac address okay now

2244
01:37:40,960 --> 01:37:45,199
that that's what

2245
01:37:42,560 --> 01:37:46,880
that works very well in enterprise

2246
01:37:45,199 --> 01:37:50,400
networks but if you have a

2247
01:37:46,880 --> 01:37:51,840
more public deployment let's say a huge

2248
01:37:50,400 --> 01:37:56,638
campus that wants to

2249
01:37:51,840 --> 01:37:56,639
get wi-fi connectivity now maybe

2250
01:37:56,960 --> 01:38:03,280
you will connect to user in ios or

2251
01:38:00,080 --> 01:38:03,840
android and i discovered this week that

2252
01:38:03,280 --> 01:38:07,360
they have

2253
01:38:03,840 --> 01:38:09,520
features to change dynamically the mac

2254
01:38:07,360 --> 01:38:13,190
address

2255
01:38:09,520 --> 01:38:14,560
because of private sequences okay

2256
01:38:13,190 --> 01:38:17,119
[Music]

2257
01:38:14,560 --> 01:38:19,280
so maybe you don't have an answer now

2258
01:38:17,119 --> 01:38:19,280
but

2259
01:38:19,360 --> 01:38:24,880
have you thought how or how

2260
01:38:22,960 --> 01:38:26,000
can you comment how would work if there

2261
01:38:24,880 --> 01:38:29,119
is

2262
01:38:26,000 --> 01:38:31,840
this thing of dynamically changing the

2263
01:38:29,119 --> 01:38:31,839
mac address

2264
01:38:32,080 --> 01:38:36,239
well that's really good question i

2265
01:38:33,920 --> 01:38:37,760
should probably think about it

2266
01:38:36,239 --> 01:38:40,320
because i couldn't attend above

2267
01:38:37,760 --> 01:38:40,320
yesterday

2268
01:38:40,800 --> 01:38:45,600
and also because i'm not very savvy in

2269
01:38:44,320 --> 01:38:48,719
the implementation

2270
01:38:45,600 --> 01:38:51,920
and especially because we so the the

2271
01:38:48,719 --> 01:38:53,600
we left the i think we have mark here

2272
01:38:51,920 --> 01:38:56,560
that can comment more on the

2273
01:38:53,600 --> 01:38:58,000
implementation but so lisp is just

2274
01:38:56,560 --> 01:39:01,760
something on top of all the layer

2275
01:38:58,000 --> 01:39:05,679
two parts so it's not doing yes so

2276
01:39:01,760 --> 01:39:05,679
it i guess it would be uh

2277
01:39:07,920 --> 01:39:13,040
i really don't know how it would solve

2278
01:39:09,679 --> 01:39:14,560
it um but i think it's a problem that

2279
01:39:13,040 --> 01:39:17,760
everyone would have also still

2280
01:39:14,560 --> 01:39:19,280
because it's not easy specific no no

2281
01:39:17,760 --> 01:39:20,320
it's not least specific oh no it's

2282
01:39:19,280 --> 01:39:23,599
definitely not list

2283
01:39:20,320 --> 01:39:25,759
specific but for those who are tracking

2284
01:39:23,600 --> 01:39:29,199
the missing pieces this there was a bath

2285
01:39:25,760 --> 01:39:32,400
called madinas m-a-d-i-n-a-s

2286
01:39:29,199 --> 01:39:34,638
yesterday uh on driven by

2287
01:39:32,400 --> 01:39:36,320
a bunch of work over at ieee on

2288
01:39:34,639 --> 01:39:39,360
randomizing mac addresses

2289
01:39:36,320 --> 01:39:42,559
periodically changing mac addresses

2290
01:39:39,360 --> 01:39:44,400
and what that does for ip activities

2291
01:39:42,560 --> 01:39:47,199
which depend on

2292
01:39:44,400 --> 01:39:47,199
mac addresses

2293
01:39:49,040 --> 01:39:52,719
and obviously journey already knew about

2294
01:39:50,880 --> 01:39:56,000
it but other folks might not so i want

2295
01:39:52,719 --> 01:39:56,000
to just fill in the other bits

2296
01:39:56,480 --> 01:40:02,559
yeah hi hi mark here actually we have

2297
01:39:59,840 --> 01:40:05,679
started discussing how to

2298
01:40:02,560 --> 01:40:08,960
address this problem in the

2299
01:40:05,679 --> 01:40:08,960
with the sda solution

2300
01:40:09,119 --> 01:40:13,360
there are and this was explained

2301
01:40:12,159 --> 01:40:16,638
yesterday in that

2302
01:40:13,360 --> 01:40:20,000
buff there are multiple approaches to

2303
01:40:16,639 --> 01:40:20,000
randomization of max

2304
01:40:20,159 --> 01:40:25,839
i would say that thanks to the way that

2305
01:40:23,280 --> 01:40:28,960
lease works

2306
01:40:25,840 --> 01:40:32,480
multiple of those use cases could

2307
01:40:28,960 --> 01:40:36,320
still be handled well the most

2308
01:40:32,480 --> 01:40:38,559
extreme one though i think it's the one

2309
01:40:36,320 --> 01:40:40,239
that apple has implemented in some of

2310
01:40:38,560 --> 01:40:44,000
the latest ios where

2311
01:40:40,239 --> 01:40:44,000
when they really randomize

2312
01:40:44,159 --> 01:40:48,960
or they really generate the different

2313
01:40:46,159 --> 01:40:51,839
mag address every time they change

2314
01:40:48,960 --> 01:40:52,080
access point and this is the one that we

2315
01:40:51,840 --> 01:40:55,440
are

2316
01:40:52,080 --> 01:40:56,639
studying now um but there is this mode

2317
01:40:55,440 --> 01:41:00,159
in sda where

2318
01:40:56,639 --> 01:41:03,440
where you can work l3 only

2319
01:41:00,159 --> 01:41:06,638
and and just use ip addresses as

2320
01:41:03,440 --> 01:41:09,919
identifiers that could be one

2321
01:41:06,639 --> 01:41:12,000
possible first approach but

2322
01:41:09,920 --> 01:41:13,199
but still yeah some work to be done

2323
01:41:12,000 --> 01:41:15,280
there

2324
01:41:13,199 --> 01:41:16,480
and as you say right it's affecting

2325
01:41:15,280 --> 01:41:19,840
everybody right not

2326
01:41:16,480 --> 01:41:22,080
just at least

2327
01:41:19,840 --> 01:41:23,760
in general having a centralized database

2328
01:41:22,080 --> 01:41:25,519
right for the mac and the ip that are

2329
01:41:23,760 --> 01:41:28,560
the table that

2330
01:41:25,520 --> 01:41:30,840
you have marked um that

2331
01:41:28,560 --> 01:41:32,239
probably makes things a little simpler

2332
01:41:30,840 --> 01:41:34,239
and

2333
01:41:32,239 --> 01:41:36,879
keeping in mind that sure if you if you

2334
01:41:34,239 --> 01:41:40,320
change the mac address at every

2335
01:41:36,880 --> 01:41:42,639
change of uh practice point then yeah

2336
01:41:40,320 --> 01:41:44,080
i mean you need something in the first

2337
01:41:42,639 --> 01:41:46,480
folder

2338
01:41:44,080 --> 01:41:47,679
yeah actually it's interesting i mean

2339
01:41:46,480 --> 01:41:50,799
it's what you say right

2340
01:41:47,679 --> 01:41:52,080
from a scalability perspective um the

2341
01:41:50,800 --> 01:41:55,760
solution just holds

2342
01:41:52,080 --> 01:41:59,040
the the the main effect is in mobility

2343
01:41:55,760 --> 01:42:00,080
right uh the problem is that this guy

2344
01:41:59,040 --> 01:42:02,080
that randomizes

2345
01:42:00,080 --> 01:42:04,559
every time that changes access point

2346
01:42:02,080 --> 01:42:06,880
needs to re-authenticate again and

2347
01:42:04,560 --> 01:42:08,159
this affects the speed at which things

2348
01:42:06,880 --> 01:42:12,840
happen

2349
01:42:08,159 --> 01:42:14,159
but but yeah the way sda has been

2350
01:42:12,840 --> 01:42:16,239
designed

2351
01:42:14,159 --> 01:42:17,599
you you can detect that the guy is the

2352
01:42:16,239 --> 01:42:21,599
same right once

2353
01:42:17,600 --> 01:42:21,600
it reauthenticates so so

2354
01:42:21,840 --> 01:42:25,760
the database is able to forget to hold

2355
01:42:24,080 --> 01:42:26,880
it sounds like the problem is a mac

2356
01:42:25,760 --> 01:42:30,000
address is being used

2357
01:42:26,880 --> 01:42:32,080
as an eid and when you reassign eids

2358
01:42:30,000 --> 01:42:33,600
that causes problems if you just run

2359
01:42:32,080 --> 01:42:34,239
layer 3 over this you don't care what

2360
01:42:33,600 --> 01:42:37,199
the mac

2361
01:42:34,239 --> 01:42:39,678
address is so it's kind of it could be

2362
01:42:37,199 --> 01:42:41,678
arguably a misuse of layers right

2363
01:42:39,679 --> 01:42:44,800
and the problems with traditionally we

2364
01:42:41,679 --> 01:42:44,800
have with layer two

2365
01:42:45,760 --> 01:42:49,440
so yeah well i mean well everything

2366
01:42:47,840 --> 01:42:52,560
duration is good

2367
01:42:49,440 --> 01:42:56,000
if you then start scrambling

2368
01:42:52,560 --> 01:42:56,400
the the the tables randomly then it's it

2369
01:42:56,000 --> 01:42:59,199
makes

2370
01:42:56,400 --> 01:42:59,199
everything harder

2371
01:43:02,960 --> 01:43:07,360
i don't think there's a problem if you

2372
01:43:05,119 --> 01:43:10,000
just randomize the mac address

2373
01:43:07,360 --> 01:43:11,599
as long as it's not being used otherwise

2374
01:43:10,000 --> 01:43:14,800
nowhere else but locally

2375
01:43:11,600 --> 01:43:16,560
like on a layer two land right so i mean

2376
01:43:14,800 --> 01:43:18,800
i don't see the problem

2377
01:43:16,560 --> 01:43:19,600
the fact that you want to build l2

2378
01:43:18,800 --> 01:43:21,360
overlays

2379
01:43:19,600 --> 01:43:23,679
means that problem now moves into the

2380
01:43:21,360 --> 01:43:25,280
overlay that's the problem

2381
01:43:23,679 --> 01:43:29,280
yeah yeah exactly that you bring it up

2382
01:43:25,280 --> 01:43:29,280
to for mobility yeah

2383
01:43:29,600 --> 01:43:32,880
one thing to to highlight is what mar

2384
01:43:31,600 --> 01:43:35,920
just just said

2385
01:43:32,880 --> 01:43:37,440
that um on sda that is the solution that

2386
01:43:35,920 --> 01:43:39,600
this paper evaluates

2387
01:43:37,440 --> 01:43:41,280
you still have an authentication to be

2388
01:43:39,600 --> 01:43:42,480
allowed into the network right and on

2389
01:43:41,280 --> 01:43:43,599
that authentication you have to

2390
01:43:42,480 --> 01:43:46,320
establish your unique

2391
01:43:43,600 --> 01:43:46,960
identity against the system so it's not

2392
01:43:46,320 --> 01:43:48,880
gonna

2393
01:43:46,960 --> 01:43:51,040
matter on this particular solution what

2394
01:43:48,880 --> 01:43:51,920
your mac address is or how random it is

2395
01:43:51,040 --> 01:43:53,360
because

2396
01:43:51,920 --> 01:43:56,000
the system still needs to allow your

2397
01:43:53,360 --> 01:43:57,839
identity and it's going to assign you

2398
01:43:56,000 --> 01:43:59,520
an ip address that that it can

2399
01:43:57,840 --> 01:44:01,280
potentially be the same no matter where

2400
01:43:59,520 --> 01:44:04,639
you're connecting from or which macros

2401
01:44:01,280 --> 01:44:06,960
you're using so there are other

2402
01:44:04,639 --> 01:44:10,000
systems in place that is not just the

2403
01:44:06,960 --> 01:44:10,000
legend 2 mac address

2404
01:44:12,239 --> 01:44:16,480
well maybe this mix in in the future

2405
01:44:14,960 --> 01:44:18,719
maybe they also randomize

2406
01:44:16,480 --> 01:44:21,839
ipad assessment then we'll have a

2407
01:44:18,719 --> 01:44:21,840
problem in another layer

2408
01:44:25,920 --> 01:44:28,159
yes

2409
01:44:31,199 --> 01:44:34,799
but i mean the eid anemity giraffe

2410
01:44:33,679 --> 01:44:38,080
basically says

2411
01:44:34,800 --> 01:44:40,800
that's a feature by um randomizing

2412
01:44:38,080 --> 01:44:43,199
an eid and that you can use multiple

2413
01:44:40,800 --> 01:44:46,800
eids at the same time and phase them out

2414
01:44:43,199 --> 01:44:48,879
and since you have a mapping you know

2415
01:44:46,800 --> 01:44:49,840
they can be added to the system a lot

2416
01:44:48,880 --> 01:44:53,280
easier when you're

2417
01:44:49,840 --> 01:44:53,280
on an overlay so

2418
01:44:54,480 --> 01:44:58,080
it depends how often you're randomizing

2419
01:44:56,159 --> 01:45:01,519
it right that's the thing

2420
01:44:58,080 --> 01:45:04,480
because i mean a randomized eid is

2421
01:45:01,520 --> 01:45:06,400
no different than an eid that's

2422
01:45:04,480 --> 01:45:07,919
statically defined to some node

2423
01:45:06,400 --> 01:45:09,920
that now comes to a new place in the

2424
01:45:07,920 --> 01:45:10,480
network it just looks like a mobility

2425
01:45:09,920 --> 01:45:17,840
event

2426
01:45:10,480 --> 01:45:17,839
and a new binding within our load right

2427
01:45:20,320 --> 01:45:26,799
okay okay thank you very much

2428
01:45:24,080 --> 01:45:28,639
very much jody unless there are all the

2429
01:45:26,800 --> 01:45:31,679
comments or questions

2430
01:45:28,639 --> 01:45:34,800
we are over

2431
01:45:31,679 --> 01:45:39,199
with the presentations okay so we

2432
01:45:34,800 --> 01:45:42,159
have something like 15 minutes

2433
01:45:39,199 --> 01:45:44,080
uh to the end of this session if anybody

2434
01:45:42,159 --> 01:45:47,759
wants to

2435
01:45:44,080 --> 01:45:50,480
arise any question or general discussion

2436
01:45:47,760 --> 01:45:50,480
that we

2437
01:45:51,440 --> 01:46:01,040
want to have here in the sporting group

2438
01:45:58,639 --> 01:46:02,400
um are the rsc numbers going to be

2439
01:46:01,040 --> 01:46:05,199
assigned soon to the

2440
01:46:02,400 --> 01:46:05,199
this document

2441
01:46:06,239 --> 01:46:12,879
did it catch what you just said you know

2442
01:46:09,440 --> 01:46:15,599
will the will rfc numbers be assigned

2443
01:46:12,880 --> 01:46:17,040
relatively soon to the best documents

2444
01:46:15,600 --> 01:46:17,920
since it's going to go into the rfc

2445
01:46:17,040 --> 01:46:21,760
entered eq

2446
01:46:17,920 --> 01:46:24,320
in a couple weeks as been stated earlier

2447
01:46:21,760 --> 01:46:26,080
well a we can't be sure we're hoping

2448
01:46:24,320 --> 01:46:29,759
it's going to go in soon

2449
01:46:26,080 --> 01:46:32,000
we're close b then it depends on the

2450
01:46:29,760 --> 01:46:33,840
work queue at the rfc editor and we do

2451
01:46:32,000 --> 01:46:34,880
not get to tell them what the priority

2452
01:46:33,840 --> 01:46:38,239
is

2453
01:46:34,880 --> 01:46:38,239
and yeah i remember

2454
01:46:38,800 --> 01:46:44,080
once it goes on the queue um an rfc

2455
01:46:41,840 --> 01:46:45,600
number is allocated and that you could

2456
01:46:44,080 --> 01:46:48,480
start referencing it

2457
01:46:45,600 --> 01:46:49,360
i'm trying to um address sharon's

2458
01:46:48,480 --> 01:46:51,919
concern

2459
01:46:49,360 --> 01:46:54,000
so we could still write documents that

2460
01:46:51,920 --> 01:46:56,800
reference the bit but we can start

2461
01:46:54,000 --> 01:46:57,679
um referencing the rfc numbers and we

2462
01:46:56,800 --> 01:47:00,560
could have some

2463
01:46:57,679 --> 01:47:02,320
parallelism or concurrency while that's

2464
01:47:00,560 --> 01:47:03,920
while sitting in the editor queue

2465
01:47:02,320 --> 01:47:06,880
and we're doing all the you know

2466
01:47:03,920 --> 01:47:08,239
editorial comments with the rfc editor

2467
01:47:06,880 --> 01:47:10,080
right you believe that we don't even

2468
01:47:08,239 --> 01:47:13,199
need the number for that you know

2469
01:47:10,080 --> 01:47:15,280
the rfc editor will happily correct a

2470
01:47:13,199 --> 01:47:17,839
reference to the best drafts

2471
01:47:15,280 --> 01:47:19,599
into a reference to the rfc number

2472
01:47:17,840 --> 01:47:22,880
during final edit

2473
01:47:19,600 --> 01:47:23,760
so that's but not to all the documents

2474
01:47:22,880 --> 01:47:26,480
that are referencing

2475
01:47:23,760 --> 01:47:26,880
it right like working group documents

2476
01:47:26,480 --> 01:47:28,718
and

2477
01:47:26,880 --> 01:47:30,719
individual submissions that's what i'm

2478
01:47:28,719 --> 01:47:32,400
talking about

2479
01:47:30,719 --> 01:47:34,080
but we're really not supposed to use

2480
01:47:32,400 --> 01:47:35,679
those numbers until they're really

2481
01:47:34,080 --> 01:47:37,760
permanently assigned they can get

2482
01:47:35,679 --> 01:47:39,920
changed

2483
01:47:37,760 --> 01:47:41,520
so i i'm not sure what problem you're

2484
01:47:39,920 --> 01:47:44,080
trying to solve i'm sorry i'm just not

2485
01:47:41,520 --> 01:47:47,440
following it

2486
01:47:44,080 --> 01:47:48,800
i i i want the i want the documents that

2487
01:47:47,440 --> 01:47:51,599
depend on this

2488
01:47:48,800 --> 01:47:53,520
to be rewritten to that are going to go

2489
01:47:51,600 --> 01:47:56,800
fast track right on its heels

2490
01:47:53,520 --> 01:47:59,040
uh that the editing could be done

2491
01:47:56,800 --> 01:48:00,159
while we're waiting for the rfc editor

2492
01:47:59,040 --> 01:48:01,679
you know trying to

2493
01:48:00,159 --> 01:48:03,920
to build some concurrency instead of

2494
01:48:01,679 --> 01:48:05,600
serialization the rfc editor will fix

2495
01:48:03,920 --> 01:48:07,920
all of those documents when we hand them

2496
01:48:05,600 --> 01:48:07,920
over

2497
01:48:08,560 --> 01:48:12,480
yes anyway you have to go through the

2498
01:48:10,560 --> 01:48:15,199
rfc editor

2499
01:48:12,480 --> 01:48:16,480
so even if it's an info even if it's an

2500
01:48:15,199 --> 01:48:19,678
informational

2501
01:48:16,480 --> 01:48:21,440
that yeah

2502
01:48:19,679 --> 01:48:22,800
they still go through the rfc editor and

2503
01:48:21,440 --> 01:48:27,280
the rfc editor will

2504
01:48:22,800 --> 01:48:27,280
fix all of these yeah no worries

2505
01:48:29,119 --> 01:48:33,759
informational rfcs still go through the

2506
01:48:31,040 --> 01:48:36,800
rfc editor

2507
01:48:33,760 --> 01:48:39,600
yeah but i remember all the documents

2508
01:48:36,800 --> 01:48:40,000
i remember in the past when we had 68 30

2509
01:48:39,600 --> 01:48:41,760
that

2510
01:48:40,000 --> 01:48:43,199
the current documents we were working on

2511
01:48:41,760 --> 01:48:45,440
had to be changed right

2512
01:48:43,199 --> 01:48:46,480
and they will the ones that have not

2513
01:48:45,440 --> 01:48:48,400
been

2514
01:48:46,480 --> 01:48:49,839
sent to iesg yet that's what i'm talking

2515
01:48:48,400 --> 01:48:50,960
about because those things tend to have

2516
01:48:49,840 --> 01:48:52,480
long lifetimes

2517
01:48:50,960 --> 01:48:54,960
and you'd like to point it to the latest

2518
01:48:52,480 --> 01:48:56,320
specs so the people

2519
01:48:54,960 --> 01:48:58,639
the working group documents are going to

2520
01:48:56,320 --> 01:49:01,519
have to be modified by us

2521
01:48:58,639 --> 01:49:03,199
not by the arts the editor maybe you

2522
01:49:01,520 --> 01:49:03,520
referred the fact that you had to switch

2523
01:49:03,199 --> 01:49:06,879
it

2524
01:49:03,520 --> 01:49:12,080
from the 68 30 for example

2525
01:49:06,880 --> 01:49:12,080
268 30 this this is a challenge

2526
01:49:12,480 --> 01:49:15,839
way before that

2527
01:49:16,239 --> 01:49:20,000
and the reason is is because the the

2528
01:49:18,000 --> 01:49:22,000
best documents eventually go away

2529
01:49:20,000 --> 01:49:24,000
and they're not referenceable anymore

2530
01:49:22,000 --> 01:49:29,840
that's what i remember

2531
01:49:24,000 --> 01:49:29,840
but anyway i think you're misremembering

2532
01:49:30,719 --> 01:49:35,119
it it would be good to know uh as soon

2533
01:49:32,639 --> 01:49:35,840
as possible also for ipd papers and

2534
01:49:35,119 --> 01:49:38,239
people have

2535
01:49:35,840 --> 01:49:39,199
uh like deadlines and they're probably

2536
01:49:38,239 --> 01:49:42,879
like

2537
01:49:39,199 --> 01:49:42,879
much better because

2538
01:49:43,440 --> 01:49:48,480
that's where i wanted to be careful

2539
01:49:44,960 --> 01:49:50,800
because a paper going to ieee should not

2540
01:49:48,480 --> 01:49:52,638
be referencing an rfc number for an rfc

2541
01:49:50,800 --> 01:49:55,280
that has not been published because

2542
01:49:52,639 --> 01:49:57,199
we don't know how long lost 48 will take

2543
01:49:55,280 --> 01:49:58,800
we can't make commitments no matter how

2544
01:49:57,199 --> 01:50:01,678
much i want to

2545
01:49:58,800 --> 01:50:03,760
look i want this stuff to be done i

2546
01:50:01,679 --> 01:50:06,960
understand we all want it to be

2547
01:50:03,760 --> 01:50:11,119
done but

2548
01:50:06,960 --> 01:50:13,440
we got to go through things in order

2549
01:50:11,119 --> 01:50:14,559
yeah we cannot have commitments on the

2550
01:50:13,440 --> 01:50:25,839
deadlines because

2551
01:50:14,560 --> 01:50:25,840
that's the way your ietf works

2552
01:50:26,639 --> 01:50:33,199
okay any other

2553
01:50:30,239 --> 01:50:33,199
question or issues

2554
01:50:33,760 --> 01:50:39,920
otherwise we can say goodbye a good

2555
01:50:37,199 --> 01:50:40,440
grab a cup of coffees coffee that i

2556
01:50:39,920 --> 01:50:42,639
really need

2557
01:50:40,440 --> 01:50:46,480
[Laughter]

2558
01:50:42,639 --> 01:50:49,440
fabio go ahead no no just wanted to say

2559
01:50:46,480 --> 01:50:49,440
good night everyone

2560
01:50:50,000 --> 01:50:57,760
for keeping the meeting going uh

2561
01:50:53,920 --> 01:51:01,599
you do a lot of work and thank you

2562
01:50:57,760 --> 01:51:04,480
okay uh so in that case thank you all

2563
01:51:01,599 --> 01:51:05,280
um the next meeting will be again in

2564
01:51:04,480 --> 01:51:08,480
virtual

2565
01:51:05,280 --> 01:51:10,639
in the european time zone because it was

2566
01:51:08,480 --> 01:51:14,159
supposed to be held in prague

2567
01:51:10,639 --> 01:51:17,520
so a little bit easier from for the

2568
01:51:14,159 --> 01:51:21,519
american people right thai ones

2569
01:51:17,520 --> 01:51:25,199
so anyhow have a good evening

2570
01:51:21,520 --> 01:51:28,639
good day good morning and stay safe

2571
01:51:25,199 --> 01:51:30,400
okay bye bye all right thank you guys

2572
01:51:28,639 --> 01:51:35,840
bye

2573
01:51:30,400 --> 01:51:35,839
thanks bye bye thank you

