1
00:00:10,320 --> 00:00:13,280
for those of you who are following this

2
00:00:11,920 --> 00:00:15,920
remotely which is

3
00:00:13,280 --> 00:00:17,680
everybody and the chairs are just

4
00:00:15,920 --> 00:00:22,400
gathering people and

5
00:00:17,680 --> 00:00:22,400
we'll soon be starting the tsvwg meeting

6
00:00:28,720 --> 00:00:31,919
this will be the second of the two

7
00:00:30,240 --> 00:00:36,160
meetings so the

8
00:00:31,920 --> 00:00:39,280
agenda's the second set of

9
00:00:36,160 --> 00:00:39,279
information in the

10
00:00:40,079 --> 00:00:45,840
in the documents area

11
00:00:56,840 --> 00:00:59,840
sure

12
00:01:01,180 --> 00:01:04,640
[Music]

13
00:01:03,199 --> 00:01:06,320
okay can i compare with people whether

14
00:01:04,640 --> 00:01:09,439
we have a note taker

15
00:01:06,320 --> 00:01:09,439
and somebody's watching chap

16
00:01:09,520 --> 00:01:13,840
do we have a note taker

17
00:01:22,240 --> 00:01:27,839
do we have a volunteer for a note ticker

18
00:01:38,079 --> 00:01:41,839
jake is in the queue that might be a

19
00:01:39,520 --> 00:01:41,839
volunteer

20
00:01:47,520 --> 00:01:51,200
you're i was raising my hand to

21
00:01:49,439 --> 00:01:54,559
volunteer i i can do it

22
00:01:51,200 --> 00:01:57,759
um i'd be happy to have assistance i see

23
00:01:54,560 --> 00:02:01,360
andrew offering in the chat

24
00:01:57,759 --> 00:02:04,399
uh so yeah please uh

25
00:02:01,360 --> 00:02:05,200
great and thanks brian also i just

26
00:02:04,399 --> 00:02:09,840
pasted

27
00:02:05,200 --> 00:02:09,840
the agenda into the notepad

28
00:02:13,440 --> 00:02:16,959
so for those that you are following the

29
00:02:15,280 --> 00:02:18,959
notepad can you

30
00:02:16,959 --> 00:02:20,879
make can you look to the end of the

31
00:02:18,959 --> 00:02:23,200
notepad because the

32
00:02:20,879 --> 00:02:25,359
the session are going to be taken after

33
00:02:23,200 --> 00:02:25,359
the

34
00:02:25,760 --> 00:02:28,879
current items um

35
00:02:30,319 --> 00:02:34,958
okay they're now being entered so that's

36
00:02:33,280 --> 00:02:37,440
great so we have a note taker and a few

37
00:02:34,959 --> 00:02:40,640
backups that's great

38
00:02:37,440 --> 00:02:41,440
clarification there uh the the link that

39
00:02:40,640 --> 00:02:44,480
i saw

40
00:02:41,440 --> 00:02:46,720
uh on uh

41
00:02:44,480 --> 00:02:48,640
on the note taking tool from inside the

42
00:02:46,720 --> 00:02:51,599
meat echo here

43
00:02:48,640 --> 00:02:53,279
is pointing me to something that uh that

44
00:02:51,599 --> 00:02:58,480
is new for this session

45
00:02:53,280 --> 00:03:01,200
uh right so that's notes ietf 109 tsv2

46
00:02:58,480 --> 00:03:03,119
uh which i'll put the link here just to

47
00:03:01,200 --> 00:03:06,720
clarify in the chat

48
00:03:03,120 --> 00:03:10,159
and uh um so it's interesting

49
00:03:06,720 --> 00:03:13,359
because i think i i won't follow off the

50
00:03:10,159 --> 00:03:17,200
agenda page

51
00:03:13,360 --> 00:03:21,440
if i want to get the wrong one no

52
00:03:17,200 --> 00:03:23,119
my mistake perhaps okay i think that

53
00:03:21,440 --> 00:03:25,840
there's opportunity to get this wrong in

54
00:03:23,120 --> 00:03:26,159
the in the agenda so i might get it

55
00:03:25,840 --> 00:03:29,440
wrong

56
00:03:26,159 --> 00:03:34,239
as well right so there there are

57
00:03:29,440 --> 00:03:36,400
separate um strings for the meet echo

58
00:03:34,239 --> 00:03:38,159
uh session because it's like two

59
00:03:36,400 --> 00:03:40,159
sessions is two sessions but the agenda

60
00:03:38,159 --> 00:03:41,440
page actually links back to the same

61
00:03:40,159 --> 00:03:43,040
for the two sessions things that's

62
00:03:41,440 --> 00:03:43,760
actually probably something we should

63
00:03:43,040 --> 00:03:45,440
talk to me to

64
00:03:43,760 --> 00:03:48,319
echo about for the second time but let's

65
00:03:45,440 --> 00:03:49,920
use the link that i posted

66
00:03:48,319 --> 00:03:51,599
so they're all in the same place just to

67
00:03:49,920 --> 00:03:52,559
keep keep you all from having to merge

68
00:03:51,599 --> 00:03:56,000
things

69
00:03:52,560 --> 00:03:59,360
okay i will do that uh

70
00:03:56,000 --> 00:04:00,879
thank you just to like put a link to the

71
00:03:59,360 --> 00:04:02,480
second one and the one you're not using

72
00:04:00,879 --> 00:04:15,840
so people can fall back to it

73
00:04:02,480 --> 00:04:15,839
if they get the wrong one i will do that

74
00:04:26,840 --> 00:04:29,840
um

75
00:04:36,880 --> 00:04:43,840
oh very helpful

76
00:05:05,680 --> 00:05:09,280
okay bob i've just uploaded your slides

77
00:05:07,840 --> 00:05:12,320
so i think we have all the meeting

78
00:05:09,280 --> 00:05:13,840
materials posted now

79
00:05:12,320 --> 00:05:15,520
where where are the notes for the first

80
00:05:13,840 --> 00:05:17,840
meeting

81
00:05:15,520 --> 00:05:19,198
so i can just quickly look at them

82
00:05:17,840 --> 00:05:21,119
they're on the same page

83
00:05:19,199 --> 00:05:23,680
as we're taking the notes and second

84
00:05:21,120 --> 00:05:25,919
being to scroll upward

85
00:05:23,680 --> 00:05:27,440
no they're not they there's nothing in

86
00:05:25,919 --> 00:05:31,680
the current

87
00:05:27,440 --> 00:05:31,680
meeting page in the proceedings

88
00:05:31,840 --> 00:05:39,840
um follow the following

89
00:05:35,120 --> 00:05:39,840
brian pasted

90
00:05:40,400 --> 00:05:53,840
it's all there

91
00:06:13,520 --> 00:06:21,840
it's like

92
00:06:33,520 --> 00:06:35,840
okay

93
00:07:00,840 --> 00:07:03,840
yes

94
00:07:04,040 --> 00:07:07,739
[Music]

95
00:07:22,319 --> 00:07:45,680
all right should we get started here

96
00:07:31,599 --> 00:07:49,039
i think we can get started

97
00:07:45,680 --> 00:07:52,319
yeah so i think we uh i've already spent

98
00:07:49,039 --> 00:07:54,240
time wrestling with uh tools here so

99
00:07:52,319 --> 00:07:57,199
i think we probably should just jump

100
00:07:54,240 --> 00:07:59,520
into the agenda so i think uh

101
00:07:57,199 --> 00:08:00,800
today we have uh greg on the operational

102
00:07:59,520 --> 00:08:04,318
guidance then bob

103
00:08:00,800 --> 00:08:07,199
on the uh other l4s drafts

104
00:08:04,319 --> 00:08:08,240
and if there's any time left there's

105
00:08:07,199 --> 00:08:11,440
some

106
00:08:08,240 --> 00:08:15,039
l4s and 5g work that uh

107
00:08:11,440 --> 00:08:15,039
ingomar will discuss so

108
00:08:15,120 --> 00:08:19,520
if there's nothing else or any agenda

109
00:08:18,080 --> 00:08:27,840
bashing people want to do

110
00:08:19,520 --> 00:08:27,840
i think we'll go straight to greg

111
00:08:31,440 --> 00:08:40,479
it looks good to me i have bob's side so

112
00:08:34,479 --> 00:08:44,000
i'll put those in the notes as well

113
00:08:40,479 --> 00:08:44,000
okay are you able to hear me

114
00:08:45,360 --> 00:08:48,720
test one two test one two

115
00:08:50,640 --> 00:08:54,560
yes yeah all right thank you i'm trying

116
00:08:53,839 --> 00:08:57,040
to pull your

117
00:08:54,560 --> 00:08:57,040
charts up

118
00:09:02,560 --> 00:09:11,119
okay so this first topic is to discuss

119
00:09:07,360 --> 00:09:12,800
this work in progress draft

120
00:09:11,120 --> 00:09:16,160
title operational guidance for

121
00:09:12,800 --> 00:09:19,680
deployment of l4s in the internet

122
00:09:16,160 --> 00:09:23,760
this is an individual draft that

123
00:09:19,680 --> 00:09:26,959
i agreed to put together as

124
00:09:23,760 --> 00:09:30,160
an editor and

125
00:09:26,959 --> 00:09:32,399
in collaboration with several others

126
00:09:30,160 --> 00:09:34,640
from the working group

127
00:09:32,399 --> 00:09:36,560
folding in suggestions that had been

128
00:09:34,640 --> 00:09:38,319
made via email

129
00:09:36,560 --> 00:09:39,599
on the mailing list over the past

130
00:09:38,320 --> 00:09:43,680
several months

131
00:09:39,600 --> 00:09:43,680
um let me go on the next line

132
00:09:44,959 --> 00:09:50,719
so although the title of the draft may

133
00:09:48,080 --> 00:09:53,200
make it sound like it's covering more

134
00:09:50,720 --> 00:09:57,519
territory than it is

135
00:09:53,200 --> 00:10:00,800
i want to make clear here that the scope

136
00:09:57,519 --> 00:10:04,320
actually the draft is specific to

137
00:10:00,800 --> 00:10:09,680
a single issue and that is the issue of

138
00:10:04,320 --> 00:10:12,720
single queue rfc 3168 bottleneck links

139
00:10:09,680 --> 00:10:13,519
and some issues that need to be dealt

140
00:10:12,720 --> 00:10:16,800
with

141
00:10:13,519 --> 00:10:19,120
in that case and in particular it

142
00:10:16,800 --> 00:10:22,160
provides guidance for

143
00:10:19,120 --> 00:10:25,519
operators of hosts that would like to

144
00:10:22,160 --> 00:10:27,839
utilize l4s and guidance to

145
00:10:25,519 --> 00:10:29,040
operators and networks in particular

146
00:10:27,839 --> 00:10:31,519
networks that have

147
00:10:29,040 --> 00:10:33,199
deployed single queue rfc 3160

148
00:10:31,519 --> 00:10:35,440
bottleneck links

149
00:10:33,200 --> 00:10:37,279
and then recommendations to researchers

150
00:10:35,440 --> 00:10:41,040
as well and how to

151
00:10:37,279 --> 00:10:42,959
um or things that they could look at

152
00:10:41,040 --> 00:10:46,560
and try to try to understand the scope

153
00:10:42,959 --> 00:10:46,560
of the issue and any

154
00:10:47,040 --> 00:10:52,640
any severity metrics that could be

155
00:10:50,000 --> 00:10:52,640
derived from that

156
00:10:52,720 --> 00:11:00,800
so all the general requirements for

157
00:10:57,360 --> 00:11:01,839
l4s definition of the l4s experiment

158
00:11:00,800 --> 00:11:05,359
itself

159
00:11:01,839 --> 00:11:05,920
and other operational guidance for l4s

160
00:11:05,360 --> 00:11:09,440
hosts

161
00:11:05,920 --> 00:11:10,719
and networks can all be found in the l4s

162
00:11:09,440 --> 00:11:13,120
drafts

163
00:11:10,720 --> 00:11:15,200
themselves so the architecture draft

164
00:11:13,120 --> 00:11:19,600
dual queue coupled aqm draft

165
00:11:15,200 --> 00:11:19,600
and the ecnl for sid craft

166
00:11:19,760 --> 00:11:24,000
there's a comment recently on the

167
00:11:21,360 --> 00:11:28,000
mailing list from jake and

168
00:11:24,000 --> 00:11:31,760
pete heist that perhaps this

169
00:11:28,000 --> 00:11:35,240
draft should also um mention

170
00:11:31,760 --> 00:11:36,959
uh fq uh bottleneck links that implement

171
00:11:35,240 --> 00:11:38,480
rfc3168

172
00:11:36,959 --> 00:11:40,800
um i think the next slide talks a little

173
00:11:38,480 --> 00:11:42,800
bit about welcome back that gets to that

174
00:11:40,800 --> 00:11:46,880
point on the next slide

175
00:11:42,800 --> 00:11:52,079
move on so just to summarize

176
00:11:46,880 --> 00:11:54,240
um situations where

177
00:11:52,079 --> 00:11:55,120
coexistence of l4s and classic crappit

178
00:11:54,240 --> 00:11:58,399
have been

179
00:11:55,120 --> 00:11:58,399
discussed in the mailing list

180
00:11:59,279 --> 00:12:04,160
we group the different network

181
00:12:01,920 --> 00:12:06,399
bottleneck types in these six

182
00:12:04,160 --> 00:12:07,199
categories based on the active q

183
00:12:06,399 --> 00:12:09,680
management

184
00:12:07,200 --> 00:12:10,639
technology that exists in the bottleneck

185
00:12:09,680 --> 00:12:12,880
and the scheduler

186
00:12:10,639 --> 00:12:16,000
that exists at that bottleneck so the

187
00:12:12,880 --> 00:12:17,680
aqm could be an l4s

188
00:12:16,000 --> 00:12:19,440
ecm

189
00:12:17,680 --> 00:12:23,040
[Music]

190
00:12:19,440 --> 00:12:25,600
aqm it could be a classic ecn aqm

191
00:12:23,040 --> 00:12:27,519
could be just an aqm that does packet

192
00:12:25,600 --> 00:12:29,680
drop so no no ecn at all

193
00:12:27,519 --> 00:12:31,920
or could even be no aqm at all and just

194
00:12:29,680 --> 00:12:37,120
tail drop and the scheduling could be

195
00:12:31,920 --> 00:12:41,279
dual queue or fq or a single queue fifo

196
00:12:37,120 --> 00:12:43,440
in all these cases um l4s traffic and

197
00:12:41,279 --> 00:12:46,560
classic traffic coexist

198
00:12:43,440 --> 00:12:50,000
uh well um except for

199
00:12:46,560 --> 00:12:52,880
the one um in red where there's

200
00:12:50,000 --> 00:12:54,320
a problem that's been identified where

201
00:12:52,880 --> 00:12:58,320
classic flows

202
00:12:54,320 --> 00:12:59,120
uh will receive less throughput than l4s

203
00:12:58,320 --> 00:13:02,399
flows

204
00:12:59,120 --> 00:13:05,279
when they are coexisting in a bottleneck

205
00:13:02,399 --> 00:13:07,920
that is a single queue and

206
00:13:05,279 --> 00:13:10,000
classification

207
00:13:07,920 --> 00:13:11,199
and just the focus of the draft there is

208
00:13:10,000 --> 00:13:14,880
an asterisk on the

209
00:13:11,200 --> 00:13:18,320
fq classic ecn case getting back to

210
00:13:14,880 --> 00:13:21,519
jake and pete's comment that there are

211
00:13:18,320 --> 00:13:24,560
scenarios in an fq

212
00:13:21,519 --> 00:13:24,880
classic ecm bottleneck where we don't

213
00:13:24,560 --> 00:13:28,479
see

214
00:13:24,880 --> 00:13:31,040
fairness being enforced by fq

215
00:13:28,480 --> 00:13:32,880
one of those is a case where you've got

216
00:13:31,040 --> 00:13:34,880
mixed traffic in tunnels

217
00:13:32,880 --> 00:13:35,920
that are going through the fq fq is

218
00:13:34,880 --> 00:13:38,240
known to

219
00:13:35,920 --> 00:13:39,920
not provide fairness for the flows that

220
00:13:38,240 --> 00:13:43,440
are inside tunnels

221
00:13:39,920 --> 00:13:45,519
and um in this case if you have a

222
00:13:43,440 --> 00:13:46,560
tunnel that has a mix of classic and l4s

223
00:13:45,519 --> 00:13:50,639
traffic

224
00:13:46,560 --> 00:13:52,000
there's a further unfairness between the

225
00:13:50,639 --> 00:13:55,120
flows

226
00:13:52,000 --> 00:13:56,240
that are within the tunnel also there's

227
00:13:55,120 --> 00:13:58,560
a potential

228
00:13:56,240 --> 00:14:00,480
in some fq implementations for hash

229
00:13:58,560 --> 00:14:03,599
collisions to result in

230
00:14:00,480 --> 00:14:06,959
multiple flows sharing a single queue

231
00:14:03,600 --> 00:14:11,360
and so in those

232
00:14:06,959 --> 00:14:14,399
relatively rare cases where you'd have

233
00:14:11,360 --> 00:14:17,120
multiple long-running flows that are

234
00:14:14,399 --> 00:14:18,800
hashed into the same queue and those

235
00:14:17,120 --> 00:14:21,440
multiple long running flows are

236
00:14:18,800 --> 00:14:25,279
mixed well for us in classic then you

237
00:14:21,440 --> 00:14:25,279
can see some unfairness there as well

238
00:14:25,839 --> 00:14:29,120
i think most of the bottleneck links

239
00:14:28,320 --> 00:14:32,480
that

240
00:14:29,120 --> 00:14:35,519
implement fq today run a more

241
00:14:32,480 --> 00:14:36,240
advanced version of fq that eliminates a

242
00:14:35,519 --> 00:14:39,600
lot of

243
00:14:36,240 --> 00:14:39,600
that issue around hash collisions

244
00:14:39,680 --> 00:14:43,439
okay next slide

245
00:14:43,600 --> 00:14:47,440
we have a comment from sebastian

246
00:14:52,800 --> 00:14:55,920
um something

247
00:14:56,639 --> 00:15:02,959
can i do you hear me yes please go ahead

248
00:15:00,000 --> 00:15:03,920
okay so um this looks fine and very

249
00:15:02,959 --> 00:15:06,079
systematic

250
00:15:03,920 --> 00:15:07,760
except that the first draw in this table

251
00:15:06,079 --> 00:15:09,920
is pretty much under discussion

252
00:15:07,760 --> 00:15:11,279
so it says duracu coupled akm provides

253
00:15:09,920 --> 00:15:12,000
reasonable fairness across a range of

254
00:15:11,279 --> 00:15:14,720
conditions which

255
00:15:12,000 --> 00:15:15,360
is true i admit that the problem is

256
00:15:14,720 --> 00:15:17,360
whether the

257
00:15:15,360 --> 00:15:18,720
range of tested conditions actually is

258
00:15:17,360 --> 00:15:21,440
sufficiently broad

259
00:15:18,720 --> 00:15:22,000
to allow extrapolation onto the wider

260
00:15:21,440 --> 00:15:24,399
internet

261
00:15:22,000 --> 00:15:26,959
and i do not believe that this is

262
00:15:24,399 --> 00:15:29,920
currently true that's just

263
00:15:26,959 --> 00:15:29,920
the point i wanted to make

264
00:15:30,800 --> 00:15:33,599
okay thanks

265
00:15:35,440 --> 00:15:43,279
um so a little bit more detail on

266
00:15:40,079 --> 00:15:48,079
um on this specific issue of um

267
00:15:43,279 --> 00:15:48,079
the classic ecm bottleneck um

268
00:15:49,040 --> 00:15:54,000
so rfc 3168 is the definition of classic

269
00:15:52,839 --> 00:15:57,759
ecn

270
00:15:54,000 --> 00:15:59,759
where an aqm ce marks are applied to ect

271
00:15:57,759 --> 00:16:04,800
0 and ect1 packets instead of

272
00:15:59,759 --> 00:16:07,519
drop and l4s which uses ect1

273
00:16:04,800 --> 00:16:09,359
responds differently to those ce marks

274
00:16:07,519 --> 00:16:12,890
compared to classic

275
00:16:09,360 --> 00:16:14,880
senders which use ect 0.

276
00:16:12,890 --> 00:16:19,199
[Music]

277
00:16:14,880 --> 00:16:21,759
and specifically the l4s flows

278
00:16:19,199 --> 00:16:23,199
effectively aim for a higher ce marking

279
00:16:21,759 --> 00:16:25,519
rate than classic flows do

280
00:16:23,199 --> 00:16:26,719
and so when you've got a mix of the two

281
00:16:25,519 --> 00:16:29,279
flow types

282
00:16:26,720 --> 00:16:30,160
sharing a single queue rfc 3168

283
00:16:29,279 --> 00:16:32,320
bottleneck

284
00:16:30,160 --> 00:16:34,719
the l4s flows will outperform the

285
00:16:32,320 --> 00:16:38,079
classic flows

286
00:16:34,720 --> 00:16:39,759
and so this really um affects uh

287
00:16:38,079 --> 00:16:41,680
when you have multiple long-running

288
00:16:39,759 --> 00:16:45,839
capacity seeking flows

289
00:16:41,680 --> 00:16:49,120
um where this phenomenon occurs

290
00:16:45,839 --> 00:16:50,560
um appears to be worse in situations

291
00:16:49,120 --> 00:16:54,399
with moderate

292
00:16:50,560 --> 00:16:57,119
bdp um levels so

293
00:16:54,399 --> 00:16:58,399
on the order of 100 150 packets give or

294
00:16:57,120 --> 00:17:01,440
take seems to be

295
00:16:58,399 --> 00:17:02,240
where the problem is most pronounced um

296
00:17:01,440 --> 00:17:05,439
so less

297
00:17:02,240 --> 00:17:08,799
less so in low bdp connections

298
00:17:05,439 --> 00:17:12,160
uh or in high bdp connections um

299
00:17:08,799 --> 00:17:13,439
so low data rate um connections not as

300
00:17:12,160 --> 00:17:16,480
big of an issue

301
00:17:13,439 --> 00:17:20,000
and appears that potentially it's

302
00:17:16,480 --> 00:17:22,559
for the high bdp bdp case um

303
00:17:20,000 --> 00:17:23,760
uh potentially when cubic is operating

304
00:17:22,559 --> 00:17:27,039
in its cubic mode

305
00:17:23,760 --> 00:17:30,720
um maybe that's the the reason why it's

306
00:17:27,039 --> 00:17:34,000
less impacted to hide bdb okay

307
00:17:30,720 --> 00:17:37,280
but um in the cases where um

308
00:17:34,000 --> 00:17:38,000
the impact is at its worst um it's been

309
00:17:37,280 --> 00:17:42,799
shown

310
00:17:38,000 --> 00:17:45,679
to to result in more than ten to one

311
00:17:42,799 --> 00:17:46,799
uh flow rate ratio and there's an

312
00:17:45,679 --> 00:17:49,200
example

313
00:17:46,799 --> 00:17:49,918
um of some of the data that's been shown

314
00:17:49,200 --> 00:17:53,039
on that there's

315
00:17:49,919 --> 00:17:56,320
a number of experiments have been done

316
00:17:53,039 --> 00:17:59,360
over the past uh year or more

317
00:17:56,320 --> 00:18:01,120
um on that but um you can see figure one

318
00:17:59,360 --> 00:18:04,959
in the in that link

319
00:18:01,120 --> 00:18:08,639
uh for an example okay next

320
00:18:04,960 --> 00:18:10,720
apply i see

321
00:18:08,640 --> 00:18:12,000
you i don't know if there's something

322
00:18:10,720 --> 00:18:13,679
more you want to share if you're still

323
00:18:12,000 --> 00:18:15,840
in there from the last

324
00:18:13,679 --> 00:18:15,840
chart

325
00:18:26,840 --> 00:18:32,000
okay

326
00:18:29,039 --> 00:18:33,440
next slide yeah so the the draft has um

327
00:18:32,000 --> 00:18:36,430
again these sections on

328
00:18:33,440 --> 00:18:38,000
uh guidance for the different um

329
00:18:36,430 --> 00:18:40,240
[Music]

330
00:18:38,000 --> 00:18:41,520
different audiences the operator from

331
00:18:40,240 --> 00:18:44,080
l4s host

332
00:18:41,520 --> 00:18:47,440
breaks down the host into two categories

333
00:18:44,080 --> 00:18:50,879
um so one that would be deployed

334
00:18:47,440 --> 00:18:52,400
in a constrained whether there's a

335
00:18:50,880 --> 00:18:54,240
constrained set of networks or clients

336
00:18:52,400 --> 00:18:56,799
that it's serving

337
00:18:54,240 --> 00:18:58,320
where there are opportunities for

338
00:18:56,799 --> 00:19:01,918
coordination

339
00:18:58,320 --> 00:19:03,520
um and um and pre-launch testing

340
00:19:01,919 --> 00:19:05,280
um across that constrained set of

341
00:19:03,520 --> 00:19:09,280
networks of clients

342
00:19:05,280 --> 00:19:12,320
um uh and so the graph talks about

343
00:19:09,280 --> 00:19:14,080
what some of those options are um and

344
00:19:12,320 --> 00:19:15,520
you know as as i mentioned this is a

345
00:19:14,080 --> 00:19:17,840
work in progress draft

346
00:19:15,520 --> 00:19:19,200
so there are some to do's left um in

347
00:19:17,840 --> 00:19:22,320
this section

348
00:19:19,200 --> 00:19:25,440
um so we would invite input

349
00:19:22,320 --> 00:19:28,240
from the working group on

350
00:19:25,440 --> 00:19:29,039
more details that can be added in in

351
00:19:28,240 --> 00:19:32,559
these sections

352
00:19:29,039 --> 00:19:36,000
as well as others um

353
00:19:32,559 --> 00:19:36,840
so in particular um one thing that seems

354
00:19:36,000 --> 00:19:40,000
to be

355
00:19:36,840 --> 00:19:43,280
uh potentially useful in

356
00:19:40,000 --> 00:19:46,400
in the case of the cdn or isp servers

357
00:19:43,280 --> 00:19:48,559
is to do some pre-launch testing

358
00:19:46,400 --> 00:19:50,000
to assess the presence or absence of

359
00:19:48,559 --> 00:19:52,160
these bottlenecks

360
00:19:50,000 --> 00:19:54,000
and there be nice to have some specific

361
00:19:52,160 --> 00:19:55,360
tests uh coupled out or specific

362
00:19:54,000 --> 00:19:58,000
requirements around

363
00:19:55,360 --> 00:20:00,719
those tests um in the draft to give

364
00:19:58,000 --> 00:20:00,720
guidance for

365
00:20:00,880 --> 00:20:04,480
those who might be interested in

366
00:20:01,919 --> 00:20:06,799
deploying hosts um

367
00:20:04,480 --> 00:20:07,840
the second kind of sub bullet under

368
00:20:06,799 --> 00:20:10,799
section 3.1

369
00:20:07,840 --> 00:20:12,879
is in-band detection monitoring so the

370
00:20:10,799 --> 00:20:16,720
l4s id draft has some

371
00:20:12,880 --> 00:20:20,400
mandatory features that hosts need to

372
00:20:16,720 --> 00:20:23,840
support to facilitate this uh

373
00:20:20,400 --> 00:20:26,960
to attempt to detect uh rfc 3168

374
00:20:23,840 --> 00:20:30,399
in in the bottleneck

375
00:20:26,960 --> 00:20:31,280
and then the server could fall back in

376
00:20:30,400 --> 00:20:33,280
real time

377
00:20:31,280 --> 00:20:35,600
so when it detects the potential

378
00:20:33,280 --> 00:20:37,580
presence of rc3168

379
00:20:35,600 --> 00:20:38,799
it immediately

380
00:20:37,580 --> 00:20:41,439
[Music]

381
00:20:38,799 --> 00:20:42,240
discontinues the l4s congestion response

382
00:20:41,440 --> 00:20:44,880
and

383
00:20:42,240 --> 00:20:47,039
utilizes the classic congestion response

384
00:20:44,880 --> 00:20:50,559
an alternative would be to flag

385
00:20:47,039 --> 00:20:54,158
that path of that host

386
00:20:50,559 --> 00:20:57,280
client as being potentially

387
00:20:54,159 --> 00:21:00,400
behind a 3168 bottleneck and then

388
00:20:57,280 --> 00:21:03,440
discontinue using l4s

389
00:21:00,400 --> 00:21:05,360
for future connections to that host

390
00:21:03,440 --> 00:21:07,440
and the second subsection in section

391
00:21:05,360 --> 00:21:10,479
three is other hosts that are

392
00:21:07,440 --> 00:21:11,600
serving a much wider uh set of networks

393
00:21:10,480 --> 00:21:14,720
or clients

394
00:21:11,600 --> 00:21:18,399
where that pre-launch testing may be

395
00:21:14,720 --> 00:21:20,760
not feasible still the in-band

396
00:21:18,400 --> 00:21:22,240
methods apply

397
00:21:20,760 --> 00:21:23,919
[Music]

398
00:21:22,240 --> 00:21:25,600
in either a real-time or non-real-time

399
00:21:23,919 --> 00:21:27,520
response for those

400
00:21:25,600 --> 00:21:29,520
real time might be a little bit more

401
00:21:27,520 --> 00:21:32,320
feasible there

402
00:21:29,520 --> 00:21:33,360
also could be some per destination path

403
00:21:32,320 --> 00:21:36,080
testing

404
00:21:33,360 --> 00:21:38,639
that could take place in addition to the

405
00:21:36,080 --> 00:21:42,000
in-band detection monitoring

406
00:21:38,640 --> 00:21:43,360
and draft has a placeholder for specific

407
00:21:42,000 --> 00:21:45,679
tests there again

408
00:21:43,360 --> 00:21:47,918
feedback or input would be helpful to

409
00:21:45,679 --> 00:21:49,360
flesh out

410
00:21:47,919 --> 00:21:51,360
that as well as the other components of

411
00:21:49,360 --> 00:21:55,520
this section

412
00:21:51,360 --> 00:21:58,559
yeah greg um where do you expect

413
00:21:55,520 --> 00:22:03,280
the code that implements those

414
00:21:58,559 --> 00:22:08,240
tests to reside is that residing in

415
00:22:03,280 --> 00:22:08,240
the protocol being used

416
00:22:08,799 --> 00:22:15,280
by the servers involved

417
00:22:12,240 --> 00:22:16,400
or and other hosts or do you and or do

418
00:22:15,280 --> 00:22:19,840
you expect

419
00:22:16,400 --> 00:22:24,400
uh set um uh separate uh

420
00:22:19,840 --> 00:22:28,080
test functionality um

421
00:22:24,400 --> 00:22:31,440
well i think it it depends um so the

422
00:22:28,080 --> 00:22:35,600
um pre-launch testing seems to me to be

423
00:22:31,440 --> 00:22:39,840
separate testing code that would be

424
00:22:35,600 --> 00:22:43,799
provided on a l4s host

425
00:22:39,840 --> 00:22:47,199
that could be used to detect whether

426
00:22:43,799 --> 00:22:49,039
rc3168 exists or not

427
00:22:47,200 --> 00:22:50,320
certainly the in-band detection

428
00:22:49,039 --> 00:22:54,640
monitoring

429
00:22:50,320 --> 00:22:58,158
is utilizing features that are

430
00:22:54,640 --> 00:22:58,559
already required in l4s hosts by the l4s

431
00:22:58,159 --> 00:23:02,400
id

432
00:22:58,559 --> 00:23:03,039
draft the response mechanism whether

433
00:23:02,400 --> 00:23:06,480
it's

434
00:23:03,039 --> 00:23:08,480
a fallback a real-time response

435
00:23:06,480 --> 00:23:10,240
certainly would have to be a feature

436
00:23:08,480 --> 00:23:15,039
supported by

437
00:23:10,240 --> 00:23:18,640
the uh um by the l4s implementation

438
00:23:15,039 --> 00:23:20,799
in the sender non-real-time response

439
00:23:18,640 --> 00:23:22,240
would presumably be somewhat different

440
00:23:20,799 --> 00:23:24,960
code but uh

441
00:23:22,240 --> 00:23:25,679
um more operational management code that

442
00:23:24,960 --> 00:23:28,720
could uh

443
00:23:25,679 --> 00:23:29,440
control whether or not l4s is enabled on

444
00:23:28,720 --> 00:23:32,720
a per

445
00:23:29,440 --> 00:23:36,000
host basis uh so i think it's a mix um

446
00:23:32,720 --> 00:23:38,400
but the draft certainly um adds some

447
00:23:36,000 --> 00:23:40,159
some detail on that okay just please

448
00:23:38,400 --> 00:23:44,480
please make sure that that answer is

449
00:23:40,159 --> 00:23:44,480
reflected in the draft okay

450
00:23:44,640 --> 00:23:48,400
so there's someone in the andrews in the

451
00:23:48,840 --> 00:23:54,959
queue

452
00:23:51,600 --> 00:23:57,279
so i was wondering as a follow-up to

453
00:23:54,960 --> 00:24:00,080
um david's question on what kind of

454
00:23:57,279 --> 00:24:03,360
granularity you expect

455
00:24:00,080 --> 00:24:06,480
this to be done as in per

456
00:24:03,360 --> 00:24:08,959
what destination prefix per host or

457
00:24:06,480 --> 00:24:08,960
or what

458
00:24:10,480 --> 00:24:16,000
um that's a good question um

459
00:24:13,520 --> 00:24:18,158
so it probably depends a bit on the

460
00:24:16,000 --> 00:24:21,520
network so one scenario that

461
00:24:18,159 --> 00:24:25,840
has been highlighted

462
00:24:21,520 --> 00:24:29,520
on the mailing list is a

463
00:24:25,840 --> 00:24:32,799
residential isp where

464
00:24:29,520 --> 00:24:33,918
the individual customer so a single ip

465
00:24:32,799 --> 00:24:37,520
address

466
00:24:33,919 --> 00:24:40,559
may have an implementation of

467
00:24:37,520 --> 00:24:44,799
a single qr 6138 bottleneck

468
00:24:40,559 --> 00:24:46,399
in their network and so

469
00:24:44,799 --> 00:24:48,559
results of this testing could be

470
00:24:46,400 --> 00:24:50,920
different on an ip address by

471
00:24:48,559 --> 00:24:52,080
ip address basis

472
00:24:50,920 --> 00:24:55,360
[Music]

473
00:24:52,080 --> 00:25:01,840
that may not be true in all scenarios

474
00:24:55,360 --> 00:25:01,840
but certainly could be that granularity

475
00:25:10,159 --> 00:25:16,400
okay um the other comments

476
00:25:14,159 --> 00:25:16,400
that

477
00:25:17,919 --> 00:25:23,200
all right uh next slide then um the next

478
00:25:21,279 --> 00:25:26,159
section the draft talks about

479
00:25:23,200 --> 00:25:28,480
recommendations for an operator who has

480
00:25:26,159 --> 00:25:29,840
deployed single queue rfc 3168

481
00:25:28,480 --> 00:25:32,880
bottlenecks

482
00:25:29,840 --> 00:25:36,000
um it provides currently a

483
00:25:32,880 --> 00:25:39,440
a list of potential options um

484
00:25:36,000 --> 00:25:42,720
for configuring uh that bottleneck

485
00:25:39,440 --> 00:25:45,440
to or those bottlenecks to work better

486
00:25:42,720 --> 00:25:49,440
with l4s traffic

487
00:25:45,440 --> 00:25:52,080
and i won't go through all these in

488
00:25:49,440 --> 00:25:53,440
detail on the call but the first one

489
00:25:52,080 --> 00:25:54,320
there's a question on the mailing list

490
00:25:53,440 --> 00:25:57,440
whether

491
00:25:54,320 --> 00:25:58,720
routers are able to uh to actually

492
00:25:57,440 --> 00:26:01,360
support that

493
00:25:58,720 --> 00:26:01,760
um i think certainly it's um well known

494
00:26:01,360 --> 00:26:05,199
that

495
00:26:01,760 --> 00:26:08,840
uh software routers can can do that but

496
00:26:05,200 --> 00:26:12,240
uh the question would be um in

497
00:26:08,840 --> 00:26:12,720
hardware routers or other restrictions

498
00:26:12,240 --> 00:26:15,679
that would

499
00:26:12,720 --> 00:26:16,159
prevent the differential treatment

500
00:26:15,679 --> 00:26:19,520
between

501
00:26:16,159 --> 00:26:21,440
ect 0 and ect1 so that in that case here

502
00:26:19,520 --> 00:26:24,320
it's

503
00:26:21,440 --> 00:26:25,200
effectively treating ec2-1 as not ect

504
00:26:24,320 --> 00:26:28,000
and

505
00:26:25,200 --> 00:26:31,360
and only doing congestion experience

506
00:26:28,000 --> 00:26:34,240
marking on ect 0 packets

507
00:26:31,360 --> 00:26:37,199
for all of these i think that's an open

508
00:26:34,240 --> 00:26:41,110
question to network gear vendors

509
00:26:37,200 --> 00:26:43,840
operators as to

510
00:26:41,110 --> 00:26:46,719
[Music]

511
00:26:43,840 --> 00:26:47,918
how feasible are all of these are there

512
00:26:46,720 --> 00:26:52,320
any

513
00:26:47,919 --> 00:26:54,799
downsides to any any one of these uh

514
00:26:52,320 --> 00:26:56,720
are there other options that have not

515
00:26:54,799 --> 00:26:58,480
been identified so far that could be

516
00:26:56,720 --> 00:27:02,559
added to this section

517
00:26:58,480 --> 00:27:05,120
um and further um the details i guess on

518
00:27:02,559 --> 00:27:08,240
on configuration of of these different

519
00:27:05,120 --> 00:27:08,239
approaches would be helpful

520
00:27:10,400 --> 00:27:13,120
okay um

521
00:27:13,840 --> 00:27:16,240
corey

522
00:27:17,200 --> 00:27:23,760
okay i just wondered if anybody who was

523
00:27:20,799 --> 00:27:25,918
joining the meeting had um any eyes

524
00:27:23,760 --> 00:27:28,399
which might help us from the

525
00:27:25,919 --> 00:27:30,080
understanding of particular operated

526
00:27:28,399 --> 00:27:32,158
routers that they're using or maybe

527
00:27:30,080 --> 00:27:34,399
they're a vendor

528
00:27:32,159 --> 00:27:35,679
does anybody come from the vendor

529
00:27:34,399 --> 00:27:37,439
community who wants to kind of

530
00:27:35,679 --> 00:27:49,840
comment quickly on that list that we

531
00:27:37,440 --> 00:27:53,120
just had

532
00:27:49,840 --> 00:27:56,399
um routers exist that can

533
00:27:53,120 --> 00:28:00,080
do 4.1 treat um

534
00:27:56,399 --> 00:28:03,039
ect1 as not ect jonathan pointed out in

535
00:28:00,080 --> 00:28:07,600
the chat that it's um

536
00:28:03,039 --> 00:28:08,720
formally contrary to rfc 3168 um

537
00:28:07,600 --> 00:28:10,639
i don't think the feature is

538
00:28:08,720 --> 00:28:12,240
particularly common

539
00:28:10,640 --> 00:28:17,840
or the ability is particularly common

540
00:28:12,240 --> 00:28:17,840
but it does exist in some routers

541
00:28:18,240 --> 00:28:22,080
thank you that was andrew mcgregor yeah

542
00:28:23,600 --> 00:28:27,120
what yes

543
00:28:28,080 --> 00:28:33,039
well anybody else from the operating

544
00:28:31,120 --> 00:28:34,879
community

545
00:28:33,039 --> 00:28:37,840
can i just pick up andrew's point about

546
00:28:34,880 --> 00:28:39,039
formally being countries to 3168 i don't

547
00:28:37,840 --> 00:28:41,199
i don't think it is because it's not

548
00:28:39,039 --> 00:28:44,320
saying um you don't change east tijuana

549
00:28:41,200 --> 00:28:46,880
or tct you just um

550
00:28:44,320 --> 00:28:47,918
treat it as not ect so you're you're

551
00:28:46,880 --> 00:28:52,720
effectively being

552
00:28:47,919 --> 00:28:52,720
a non-ecn router for the ect1 code point

553
00:28:53,360 --> 00:28:57,840
bob while you're on the line um wasn't

554
00:28:55,440 --> 00:29:00,159
um there's something in pcn

555
00:28:57,840 --> 00:29:02,080
anyway so we we have that specs that

556
00:29:00,159 --> 00:29:02,799
have chip played with ect one in the

557
00:29:02,080 --> 00:29:07,760
ietf

558
00:29:02,799 --> 00:29:07,760
in a different context that is true yeah

559
00:29:08,159 --> 00:29:12,000
and and on the standard track effect oh

560
00:29:10,559 --> 00:29:14,799
yeah i shouldn't say playing yeah a

561
00:29:12,000 --> 00:29:14,799
standard striker

562
00:29:16,399 --> 00:29:20,000
okay i wasn't mean to hold up the talk i

563
00:29:18,240 --> 00:29:20,880
was just hoping to start this discussion

564
00:29:20,000 --> 00:29:23,120
with people who

565
00:29:20,880 --> 00:29:25,039
had inside knowledge about what products

566
00:29:23,120 --> 00:29:28,479
might actually

567
00:29:25,039 --> 00:29:28,480
i'll offer i'll leave um

568
00:29:28,559 --> 00:29:31,840
i think it's also been suggested that um

569
00:29:30,960 --> 00:29:34,799
you know the

570
00:29:31,840 --> 00:29:36,240
working group could consider um formally

571
00:29:34,799 --> 00:29:40,000
deprecating

572
00:29:36,240 --> 00:29:42,159
um treating ect1 identically to ect 0

573
00:29:40,000 --> 00:29:44,159
i think as a good point out it's not

574
00:29:42,159 --> 00:29:46,240
required to be treated the same but

575
00:29:44,159 --> 00:29:47,679
it could be formally deprecated and that

576
00:29:46,240 --> 00:29:49,520
might

577
00:29:47,679 --> 00:29:52,000
nudge things along towards implementing

578
00:29:49,520 --> 00:29:52,000
borderline

579
00:29:52,960 --> 00:30:00,399
okay next slide nope couple of uh

580
00:29:57,360 --> 00:30:06,000
people in the queue um bob

581
00:30:00,399 --> 00:30:06,000
oh sorry i'm not in the key okay jake

582
00:30:07,520 --> 00:30:14,320
let's say i thought 8311 did that

583
00:30:10,960 --> 00:30:17,279
um and placed some requirements on it

584
00:30:14,320 --> 00:30:17,279
is that not correct

585
00:30:17,919 --> 00:30:23,120
uh that has deprecated the treatment of

586
00:30:20,880 --> 00:30:25,600
these t1 as

587
00:30:23,120 --> 00:30:28,080
uh necessary and easy to zero i thought

588
00:30:25,600 --> 00:30:31,279
that's already like

589
00:30:28,080 --> 00:30:31,279
released as standard strike

590
00:30:35,440 --> 00:30:42,159
um is it opens the door

591
00:30:39,200 --> 00:30:43,279
to alternative treatments um as long as

592
00:30:42,159 --> 00:30:46,880
they are

593
00:30:43,279 --> 00:30:51,840
uh documented in an experimental rfc

594
00:30:46,880 --> 00:30:51,840
um but doesn't um

595
00:30:51,919 --> 00:30:55,679
oh i see this thing you're saying

596
00:30:54,240 --> 00:30:57,840
reading them out you're saying

597
00:30:55,679 --> 00:31:01,440
this is this is subtly different i think

598
00:30:57,840 --> 00:31:04,720
goes back to 3168 which in particular

599
00:31:01,440 --> 00:31:08,159
uh 3168 um allows

600
00:31:04,720 --> 00:31:11,440
uh allows drop of uh

601
00:31:08,159 --> 00:31:15,519
ect marked uh to mark mark traffic and

602
00:31:11,440 --> 00:31:19,279
uh uh end points uh that that

603
00:31:15,519 --> 00:31:20,799
uh apply to 3168 have to be prepared to

604
00:31:19,279 --> 00:31:23,039
deal with drops because some

605
00:31:20,799 --> 00:31:25,918
somebody got backed up and uh couldn't

606
00:31:23,039 --> 00:31:25,919
mark had to drop

607
00:31:26,720 --> 00:31:30,559
and so if you configure this you're

608
00:31:28,240 --> 00:31:33,840
still compatible with 3168 as far as i

609
00:31:30,559 --> 00:31:33,840
can tell

610
00:31:39,919 --> 00:31:44,080
all right um you know i'm short on time

611
00:31:42,720 --> 00:31:45,679
here um so

612
00:31:44,080 --> 00:31:47,678
section five in the draft rule for

613
00:31:45,679 --> 00:31:51,279
researchers um

614
00:31:47,679 --> 00:31:54,080
pretty lightweight um uh text in this

615
00:31:51,279 --> 00:31:56,880
section so far so certainly would

616
00:31:54,080 --> 00:32:01,840
appreciate input from researchers on

617
00:31:56,880 --> 00:32:01,840
um things we could add

618
00:32:02,080 --> 00:32:04,960
[Music]

619
00:32:03,120 --> 00:32:06,879
point out as well that um it would be

620
00:32:04,960 --> 00:32:09,600
nice to have some specific

621
00:32:06,880 --> 00:32:11,120
test requirements uh in this section and

622
00:32:09,600 --> 00:32:13,840
not just

623
00:32:11,120 --> 00:32:15,039
the fairly high level statements here

624
00:32:13,840 --> 00:32:16,240
but we do have at least the high level

625
00:32:15,039 --> 00:32:18,799
statements of

626
00:32:16,240 --> 00:32:20,320
a couple of of items that researchers

627
00:32:18,799 --> 00:32:23,519
could look at

628
00:32:20,320 --> 00:32:25,279
obviously detecting 3168 through

629
00:32:23,519 --> 00:32:28,240
measurement campaigns would be

630
00:32:25,279 --> 00:32:29,039
an interesting step there's been some

631
00:32:28,240 --> 00:32:32,399
attempt at that

632
00:32:29,039 --> 00:32:36,720
in the past um but more useful

633
00:32:32,399 --> 00:32:38,879
um also um uh out-of-band measurement

634
00:32:36,720 --> 00:32:40,840
of l4s versus classic performance might

635
00:32:38,880 --> 00:32:43,039
be

636
00:32:40,840 --> 00:32:46,639
um uh

637
00:32:43,039 --> 00:32:48,960
um something that be done as well

638
00:32:46,640 --> 00:32:49,919
and then um not in the graph yet but

639
00:32:48,960 --> 00:32:53,519
something is pointed out

640
00:32:49,919 --> 00:32:56,880
off list to me um uh

641
00:32:53,519 --> 00:32:59,440
research looking at how often

642
00:32:56,880 --> 00:33:00,640
do you have multiple long-running flows

643
00:32:59,440 --> 00:33:04,080
coinciding within

644
00:33:00,640 --> 00:33:04,880
a bottleneck link and how often does it

645
00:33:04,080 --> 00:33:09,360
happen and

646
00:33:04,880 --> 00:33:12,480
help i can assess the scope of the

647
00:33:09,360 --> 00:33:13,840
issue looks like your mic

648
00:33:12,480 --> 00:33:16,159
is still on bob i don't know if you're

649
00:33:13,840 --> 00:33:16,158
aware of that

650
00:33:18,159 --> 00:33:25,039
next slide so there's some additional

651
00:33:22,559 --> 00:33:25,600
meaningless comments recently last few

652
00:33:25,039 --> 00:33:28,879
days

653
00:33:25,600 --> 00:33:32,719
um sebastian had a comment to uh

654
00:33:28,880 --> 00:33:35,440
reword the phrase more precise flow

655
00:33:32,720 --> 00:33:38,720
balance in reference to dual cue

656
00:33:35,440 --> 00:33:41,440
jonathan morton pointed out that

657
00:33:38,720 --> 00:33:42,159
if the working group had gone a

658
00:33:41,440 --> 00:33:43,760
different path

659
00:33:42,159 --> 00:33:46,159
then we wouldn't have to write this

660
00:33:43,760 --> 00:33:48,879
draft and then jake had a couple of

661
00:33:46,159 --> 00:33:52,159
other comments

662
00:33:48,880 --> 00:33:54,880
around adding some references that

663
00:33:52,159 --> 00:33:55,840
uh help illustrate the unfairness issue

664
00:33:54,880 --> 00:33:57,519
and then raise the question

665
00:33:55,840 --> 00:33:58,959
the draft is currently listed as an

666
00:33:57,519 --> 00:34:00,480
informational draft

667
00:33:58,960 --> 00:34:02,640
raise a question of whether that's the

668
00:34:00,480 --> 00:34:03,279
appropriate categorization or should it

669
00:34:02,640 --> 00:34:06,559
be

670
00:34:03,279 --> 00:34:07,360
listed as experimental and so that can

671
00:34:06,559 --> 00:34:11,199
be

672
00:34:07,360 --> 00:34:11,199
open for discussion so next slide

673
00:34:12,000 --> 00:34:18,480
so uh last slide um i think this is

674
00:34:15,599 --> 00:34:20,320
uh time for the work group working group

675
00:34:18,480 --> 00:34:23,760
to consider whether this is

676
00:34:20,320 --> 00:34:25,200
something we adopt um and i think

677
00:34:23,760 --> 00:34:27,200
you know as i said i've been the editor

678
00:34:25,199 --> 00:34:29,918
and folding in comments from

679
00:34:27,199 --> 00:34:31,598
and text provided from others there have

680
00:34:29,918 --> 00:34:32,078
been several who have contributed texts

681
00:34:31,599 --> 00:34:34,159
but

682
00:34:32,079 --> 00:34:36,399
i would hope that with adoption we'll

683
00:34:34,159 --> 00:34:38,800
bring the commitment from

684
00:34:36,399 --> 00:34:39,598
the working group to uh to flesh this

685
00:34:38,800 --> 00:34:42,000
out and

686
00:34:39,599 --> 00:34:43,040
provide a full list of what we're aware

687
00:34:42,000 --> 00:34:46,639
of in terms of

688
00:34:43,040 --> 00:34:49,679
uh guidance for for making l4s

689
00:34:46,639 --> 00:34:50,320
work well with the presence of 3168

690
00:34:49,679 --> 00:34:52,480
bottlenecks

691
00:34:50,320 --> 00:34:52,480
so

692
00:34:53,440 --> 00:34:57,280
i'll hand it back to the chairs

693
00:34:57,680 --> 00:35:02,078
yeah i think uh starting an adoption

694
00:35:00,800 --> 00:35:04,160
call on the mailing list is probably a

695
00:35:02,079 --> 00:35:06,400
good idea but i think we'd like to

696
00:35:04,160 --> 00:35:08,078
open the floor to hear some other

697
00:35:06,400 --> 00:35:09,599
people's thoughts but i think

698
00:35:08,079 --> 00:35:12,160
because this is something that came

699
00:35:09,599 --> 00:35:14,400
about as a mitigation to

700
00:35:12,160 --> 00:35:15,200
some of the comments and concerns people

701
00:35:14,400 --> 00:35:19,760
had

702
00:35:15,200 --> 00:35:23,200
when we decided to make the ect one

703
00:35:19,760 --> 00:35:26,640
decision at the interim meeting

704
00:35:23,200 --> 00:35:29,839
i think this is probably a good thing to

705
00:35:26,640 --> 00:35:33,520
adopt myself i think jonathan's in the

706
00:35:29,839 --> 00:35:33,520
queue so please go ahead jonathan

707
00:35:35,280 --> 00:35:42,480
so i'd just like to clarify

708
00:35:38,800 --> 00:35:42,800
a very brief summary of what this draft

709
00:35:42,480 --> 00:35:46,000
is

710
00:35:42,800 --> 00:35:49,280
trying to do

711
00:35:46,000 --> 00:35:51,200
which is basically ensure that any

712
00:35:49,280 --> 00:35:54,800
network that carries l4s

713
00:35:51,200 --> 00:35:57,118
traffic is specially prepared for it

714
00:35:54,800 --> 00:35:59,040
and the delphos traffic does not escape

715
00:35:57,119 --> 00:36:01,839
such a network

716
00:35:59,040 --> 00:36:01,839
is that correct

717
00:36:02,079 --> 00:36:10,640
um i i think that's overstating it um

718
00:36:05,119 --> 00:36:10,640
as i indicate in the first few slides

719
00:36:10,720 --> 00:36:17,279
there are um they're known to exist

720
00:36:13,920 --> 00:36:20,480
these 3168 single cube bottleneck um

721
00:36:17,280 --> 00:36:23,599
implementations what's not known is

722
00:36:20,480 --> 00:36:28,160
the prevalence of them um believed to be

723
00:36:23,599 --> 00:36:30,480
rare um at least

724
00:36:28,160 --> 00:36:32,000
you know studies so far have not shown

725
00:36:30,480 --> 00:36:36,240
them to be widely

726
00:36:32,000 --> 00:36:40,240
deployed in bottleneck locations

727
00:36:36,240 --> 00:36:43,279
and again as as i discussed earlier

728
00:36:40,240 --> 00:36:48,078
the impact of them existing

729
00:36:43,280 --> 00:36:51,680
um it is not catastrophic it's not a

730
00:36:48,079 --> 00:36:52,000
um not a major issue in a lot of cases

731
00:36:51,680 --> 00:36:54,000
but

732
00:36:52,000 --> 00:36:55,280
uh it's only in the case of long-running

733
00:36:54,000 --> 00:36:58,240
flows

734
00:36:55,280 --> 00:37:00,000
uh sharing those bottlenecks with a

735
00:36:58,240 --> 00:37:03,598
moderate bdp

736
00:37:00,000 --> 00:37:06,880
levels where um result is

737
00:37:03,599 --> 00:37:10,480
something that we want to track and

738
00:37:06,880 --> 00:37:11,440
and avoid it so i wouldn't say it has

739
00:37:10,480 --> 00:37:16,400
anything to do with

740
00:37:11,440 --> 00:37:19,680
um um uh

741
00:37:16,400 --> 00:37:22,720
making networks in general prepared for

742
00:37:19,680 --> 00:37:25,118
l4s it's really just this specific

743
00:37:22,720 --> 00:37:25,118
scenario

744
00:37:34,000 --> 00:37:39,359
so when it comes to these long-running

745
00:37:36,320 --> 00:37:41,119
flows sharing a single queue

746
00:37:39,359 --> 00:37:43,040
uh does that take into account the

747
00:37:41,119 --> 00:37:46,079
possibility of

748
00:37:43,040 --> 00:37:51,839
tunnels encountering um

749
00:37:46,079 --> 00:37:51,839
an aqm even if that aqm

750
00:37:55,680 --> 00:37:59,520
it will treat the tunnel as a single a

751
00:37:58,160 --> 00:38:02,319
single flow

752
00:37:59,520 --> 00:38:05,839
put it into a single cube apply a single

753
00:38:02,320 --> 00:38:05,839
aqm instance to it

754
00:38:06,880 --> 00:38:11,920
yeah as as i mentioned earlier um

755
00:38:10,079 --> 00:38:14,320
that you know the asterisk on the

756
00:38:11,920 --> 00:38:19,839
regular slide um

757
00:38:14,320 --> 00:38:19,839
so so flow queue flow queueing

758
00:38:20,160 --> 00:38:24,960
bottlenecks group tunnel traffic into a

759
00:38:24,400 --> 00:38:29,280
single

760
00:38:24,960 --> 00:38:31,520
queue and so they don't provide fairness

761
00:38:29,280 --> 00:38:33,839
for tunnel traffic or flows are within a

762
00:38:31,520 --> 00:38:33,839
tunnel

763
00:38:33,920 --> 00:38:37,440
yeah that's a known issue with uh with

764
00:38:36,880 --> 00:38:40,720
fq

765
00:38:37,440 --> 00:38:45,280
systems and on top of that

766
00:38:40,720 --> 00:38:48,480
if the mix of flows within that tunnel

767
00:38:45,280 --> 00:38:51,119
contains both l4s and classic uh

768
00:38:48,480 --> 00:38:51,920
then the entire tunnel is clearly only

769
00:38:51,119 --> 00:38:54,120
seeing a

770
00:38:51,920 --> 00:38:57,119
single uh ce marking

771
00:38:54,120 --> 00:38:58,560
[Music]

772
00:38:57,119 --> 00:39:00,880
well at least existing at q

773
00:38:58,560 --> 00:39:02,078
implementations that total traffic would

774
00:39:00,880 --> 00:39:05,680
see a single

775
00:39:02,079 --> 00:39:08,640
um ce marking probability

776
00:39:05,680 --> 00:39:10,078
and you see further unfairness within uh

777
00:39:08,640 --> 00:39:14,319
flows inside the tunnel

778
00:39:10,079 --> 00:39:16,720
that's true um it's been um

779
00:39:14,320 --> 00:39:17,760
discussed that it's fairly uh

780
00:39:16,720 --> 00:39:21,439
straightforward for

781
00:39:17,760 --> 00:39:26,160
fq uh implementations to support

782
00:39:21,440 --> 00:39:29,599
uh the all4s um

783
00:39:26,160 --> 00:39:30,960
marking thresholds so it's not a problem

784
00:39:29,599 --> 00:39:32,960
with fq in general

785
00:39:30,960 --> 00:39:35,440
but but yes in the case of tunnel

786
00:39:32,960 --> 00:39:39,280
traffic over an fq

787
00:39:35,440 --> 00:39:42,960
uh uh bottleneck

788
00:39:39,280 --> 00:39:42,960
then there is a second half in there as

789
00:39:48,720 --> 00:39:55,040
uh as quickly as we can

790
00:39:52,320 --> 00:39:56,480
yeah i just like to mention that in risk

791
00:39:55,040 --> 00:39:59,759
analysis we need to need

792
00:39:56,480 --> 00:40:01,280
to consider both the prevalence and the

793
00:39:59,760 --> 00:40:02,640
severity

794
00:40:01,280 --> 00:40:06,240
so we should also have a discussion

795
00:40:02,640 --> 00:40:06,240
about the severity at some point

796
00:40:06,720 --> 00:40:09,759
yeah i touched on that in the earlier

797
00:40:08,319 --> 00:40:11,599
slides but

798
00:40:09,760 --> 00:40:14,480
certainly something to be studied

799
00:40:11,599 --> 00:40:14,480
further thanks

800
00:40:15,040 --> 00:40:17,440
stuart

801
00:40:18,079 --> 00:40:22,079
hi yeah i just wanted to comment on the

802
00:40:20,160 --> 00:40:25,839
previous point

803
00:40:22,079 --> 00:40:29,200
as i think many people know we enabled

804
00:40:25,839 --> 00:40:30,960
ecn in apple clients

805
00:40:29,200 --> 00:40:33,359
several years back so they would

806
00:40:30,960 --> 00:40:35,599
negotiate end-to-end ecn

807
00:40:33,359 --> 00:40:37,359
with the majority of linux servers out

808
00:40:35,599 --> 00:40:40,880
there

809
00:40:37,359 --> 00:40:44,160
i wish we had the problem today of

810
00:40:40,880 --> 00:40:44,800
deployed legacy ecn routers that were

811
00:40:44,160 --> 00:40:47,839
doing

812
00:40:44,800 --> 00:40:51,200
smart queuing instead of tail drop

813
00:40:47,839 --> 00:40:53,119
the sad reality is that from the data

814
00:40:51,200 --> 00:40:54,399
we've collected from a billion iphones

815
00:40:53,119 --> 00:40:58,160
around the world

816
00:40:54,400 --> 00:41:01,359
the prevalence of ecn marking routers is

817
00:40:58,160 --> 00:41:03,118
zero percent too many decimal places so

818
00:41:01,359 --> 00:41:04,960
it would be nice if we had that legacy

819
00:41:03,119 --> 00:41:08,160
problem to deal with

820
00:41:04,960 --> 00:41:08,160
but the fact is we don't

821
00:41:09,040 --> 00:41:12,400
you know thank you stuart that's uh

822
00:41:11,440 --> 00:41:14,560
that's

823
00:41:12,400 --> 00:41:15,599
definitely good feedback um help

824
00:41:14,560 --> 00:41:18,839
understand the

825
00:41:15,599 --> 00:41:21,839
scope of this uh issue and or maybe lack

826
00:41:18,839 --> 00:41:21,839
thereof

827
00:41:23,119 --> 00:41:26,720
all right uh jenna

828
00:41:28,079 --> 00:41:33,119
hi um i love stuart i love the

829
00:41:31,359 --> 00:41:35,200
zero percent to many decimal places by

830
00:41:33,119 --> 00:41:38,800
the way i'd love to know

831
00:41:35,200 --> 00:41:41,839
uh yeah the the thing i wanted to say

832
00:41:38,800 --> 00:41:44,800
about this draft is that i think it's

833
00:41:41,839 --> 00:41:47,200
the general uh it makes a lot of sense

834
00:41:44,800 --> 00:41:50,400
to have an operational guidance

835
00:41:47,200 --> 00:41:52,799
draft in the working group for for

836
00:41:50,400 --> 00:41:53,599
for this i think the the questions that

837
00:41:52,800 --> 00:41:56,240
are being

838
00:41:53,599 --> 00:41:57,760
raised and addressed in this draft are

839
00:41:56,240 --> 00:42:00,479
very useful

840
00:41:57,760 --> 00:42:01,280
uh and i i think this ought to be

841
00:42:00,480 --> 00:42:03,599
adopted

842
00:42:01,280 --> 00:42:05,599
um i've taken a look at the draft i'll

843
00:42:03,599 --> 00:42:08,960
admit to not having read it carefully

844
00:42:05,599 --> 00:42:10,319
um it seems very thin but i suspect that

845
00:42:08,960 --> 00:42:13,599
can be resolved

846
00:42:10,319 --> 00:42:14,800
as we get into the as it gets into the

847
00:42:13,599 --> 00:42:16,240
working room i would definitely

848
00:42:14,800 --> 00:42:17,839
encourage adoption of this

849
00:42:16,240 --> 00:42:19,919
uh the one thing i would i would also

850
00:42:17,839 --> 00:42:21,119
suggest is maybe to articulate a little

851
00:42:19,920 --> 00:42:25,760
bit more

852
00:42:21,119 --> 00:42:28,839
of articulate the the

853
00:42:25,760 --> 00:42:32,400
the the the goal

854
00:42:28,839 --> 00:42:34,240
as not to promote fairness but to avoid

855
00:42:32,400 --> 00:42:35,440
unfairness i think there is a difference

856
00:42:34,240 --> 00:42:38,160
between the two

857
00:42:35,440 --> 00:42:40,480
but again that isn't it i don't want to

858
00:42:38,160 --> 00:42:43,680
spend too much time on it here

859
00:42:40,480 --> 00:42:45,839
okay thank you good feedback

860
00:42:43,680 --> 00:42:45,839
jake

861
00:42:49,920 --> 00:42:56,319
yeah so i i did a presentation at

862
00:42:53,280 --> 00:42:59,359
um uh map rg the

863
00:42:56,319 --> 00:43:02,480
interim uh map rg

864
00:42:59,359 --> 00:43:05,598
uh i think it was just after last ietf

865
00:43:02,480 --> 00:43:08,400
and it was uh interim with

866
00:43:05,599 --> 00:43:09,200
um with that at the conference right

867
00:43:08,400 --> 00:43:12,240
yeah

868
00:43:09,200 --> 00:43:16,240
and they uh

869
00:43:12,240 --> 00:43:18,160
so we did not see uh

870
00:43:16,240 --> 00:43:19,279
zero percent there were several networks

871
00:43:18,160 --> 00:43:22,799
in which we saw

872
00:43:19,280 --> 00:43:25,440
non-zero uh percentage deployment of ecn

873
00:43:22,800 --> 00:43:27,599
uh when we looked according to asn so i

874
00:43:25,440 --> 00:43:29,280
i would be very interested stuart if you

875
00:43:27,599 --> 00:43:30,560
get a chance to

876
00:43:29,280 --> 00:43:32,400
i don't know if you're planning on

877
00:43:30,560 --> 00:43:35,440
publishing the data that you see

878
00:43:32,400 --> 00:43:37,119
but um i

879
00:43:35,440 --> 00:43:39,119
you know not only did we see non-zero

880
00:43:37,119 --> 00:43:40,560
percent in a number of networks but we

881
00:43:39,119 --> 00:43:44,000
saw a

882
00:43:40,560 --> 00:43:48,078
growth in adoption over the last year um

883
00:43:44,000 --> 00:43:50,720
so i just wanted to mention that i

884
00:43:48,079 --> 00:43:52,160
although i agree the deployment is

885
00:43:50,720 --> 00:43:53,359
relatively low when you look in the

886
00:43:52,160 --> 00:43:56,560
aggregate

887
00:43:53,359 --> 00:43:57,440
um it was uh it was only zero percent

888
00:43:56,560 --> 00:44:00,160
down to

889
00:43:57,440 --> 00:44:01,359
uh down to two decimal places for us

890
00:44:00,160 --> 00:44:04,399
overall

891
00:44:01,359 --> 00:44:07,359
um and i think we're we are getting

892
00:44:04,400 --> 00:44:07,839
probably a different data set than the

893
00:44:07,359 --> 00:44:09,839
then

894
00:44:07,839 --> 00:44:12,000
you know what iphone would see in

895
00:44:09,839 --> 00:44:15,839
general but um

896
00:44:12,000 --> 00:44:17,599
uh we we did have some uh you know

897
00:44:15,839 --> 00:44:19,359
zero percent to many decimal places was

898
00:44:17,599 --> 00:44:19,760
not our observation so it might be good

899
00:44:19,359 --> 00:44:22,560
to

900
00:44:19,760 --> 00:44:23,200
sort of see if we can link those up a

901
00:44:22,560 --> 00:44:27,200
little better

902
00:44:23,200 --> 00:44:27,200
and maybe even get an ongoing

903
00:44:27,680 --> 00:44:31,118
you know refresh of that perhaps

904
00:44:32,640 --> 00:44:36,480
thanks i just wanted to point that out

905
00:44:35,920 --> 00:44:39,920
in case

906
00:44:36,480 --> 00:44:42,000
anybody hadn't seen it thank you

907
00:44:39,920 --> 00:44:43,680
yeah thanks for that jake if you have

908
00:44:42,000 --> 00:44:46,960
newer data

909
00:44:43,680 --> 00:44:47,680
then then the data we collected a year

910
00:44:46,960 --> 00:44:50,720
or two ago

911
00:44:47,680 --> 00:44:54,160
that would be interesting the one

912
00:44:50,720 --> 00:44:55,919
suggestion i would have is when we first

913
00:44:54,160 --> 00:44:59,118
collected data

914
00:44:55,920 --> 00:45:00,960
we were seeing uh some plausible amount

915
00:44:59,119 --> 00:45:05,680
of ecn marking

916
00:45:00,960 --> 00:45:07,359
in argentina notably and in france

917
00:45:05,680 --> 00:45:09,520
and it led us to a false sense of

918
00:45:07,359 --> 00:45:11,920
optimism at the start

919
00:45:09,520 --> 00:45:13,680
and when we dug into a little bit deeper

920
00:45:11,920 --> 00:45:17,359
it turned out to be

921
00:45:13,680 --> 00:45:21,200
bogus it wasn't actual working

922
00:45:17,359 --> 00:45:23,520
smart queuing with ecm uh

923
00:45:21,200 --> 00:45:24,640
it was as far as we could tell it was

924
00:45:23,520 --> 00:45:27,599
just bugs

925
00:45:24,640 --> 00:45:28,879
so yeah if you have some actual working

926
00:45:27,599 --> 00:45:32,480
ecm

927
00:45:28,880 --> 00:45:32,480
that's that's very interesting because

928
00:45:32,640 --> 00:45:35,759
thank you we we did note that when we

929
00:45:35,119 --> 00:45:37,359
started our

930
00:45:35,760 --> 00:45:39,520
project and we were looking for it also

931
00:45:37,359 --> 00:45:40,880
and and uh did fail to replicate that i

932
00:45:39,520 --> 00:45:42,319
think i reported that in the in the

933
00:45:40,880 --> 00:45:45,359
presentation i did

934
00:45:42,319 --> 00:45:47,119
um and uh but

935
00:45:45,359 --> 00:45:48,799
nonetheless there were other networks

936
00:45:47,119 --> 00:45:51,680
where they're there

937
00:45:48,800 --> 00:45:52,400
and uh by country it was hard to find

938
00:45:51,680 --> 00:45:54,399
anything with

939
00:45:52,400 --> 00:45:56,000
uh that remotely approached some of the

940
00:45:54,400 --> 00:45:57,839
numbers you reported in the initial

941
00:45:56,000 --> 00:45:59,280
stuff and i understand that was

942
00:45:57,839 --> 00:46:01,040
found to be bugs i think that's also

943
00:45:59,280 --> 00:46:02,240
been reported and maybe mentioned during

944
00:46:01,040 --> 00:46:05,279
that talk

945
00:46:02,240 --> 00:46:06,879
uh but uh they're they're looking at

946
00:46:05,280 --> 00:46:08,079
individual networks there are some that

947
00:46:06,880 --> 00:46:12,240
do appear to be doing

948
00:46:08,079 --> 00:46:12,240
uh real ecn traffic yeah

949
00:46:13,359 --> 00:46:15,839
uh thanks

950
00:46:17,839 --> 00:46:22,799
bob yeah i just um

951
00:46:21,119 --> 00:46:24,560
just to make sure everyone's caught up

952
00:46:22,800 --> 00:46:27,119
on this as well um you know

953
00:46:24,560 --> 00:46:28,880
jake's data was important um but then

954
00:46:27,119 --> 00:46:32,319
there's also the question of

955
00:46:28,880 --> 00:46:34,800
was that single queue or fq um

956
00:46:32,319 --> 00:46:35,680
because obviously in the last few years

957
00:46:34,800 --> 00:46:37,760
um

958
00:46:35,680 --> 00:46:39,359
fq coddle has been deployed with ecn

959
00:46:37,760 --> 00:46:41,200
support and so

960
00:46:39,359 --> 00:46:43,119
um i would have expected to see some of

961
00:46:41,200 --> 00:46:45,200
that and i i'm assuming that's what jake

962
00:46:43,119 --> 00:46:47,520
was finding but we

963
00:46:45,200 --> 00:46:49,439
obviously now don't know without even

964
00:46:47,520 --> 00:46:53,040
more difficult tests

965
00:46:49,440 --> 00:46:55,920
to distinguish between um an fq

966
00:46:53,040 --> 00:46:56,960
producing ce and a um single queue

967
00:46:55,920 --> 00:46:58,480
because the fq

968
00:46:56,960 --> 00:47:00,240
obviously does the scheduling itself and

969
00:46:58,480 --> 00:47:05,440
isn't isn't going to allow

970
00:47:00,240 --> 00:47:05,439
um this um domination of one flow by

971
00:47:08,839 --> 00:47:13,839
another

972
00:47:10,720 --> 00:47:13,839
okay thanks bob

973
00:47:16,880 --> 00:47:21,680
i see no one else in the queue so i

974
00:47:19,680 --> 00:47:24,640
because i hand it back to the chairs

975
00:47:21,680 --> 00:47:26,319
yeah and i think uh this has been useful

976
00:47:24,640 --> 00:47:26,960
discussion i think we're going to plan

977
00:47:26,319 --> 00:47:31,040
to take

978
00:47:26,960 --> 00:47:31,040
a adoption call to the mailing list

979
00:47:34,400 --> 00:47:37,520
one quick reflective discussion for the

980
00:47:36,160 --> 00:47:40,240
chat we're going to run in

981
00:47:37,520 --> 00:47:40,880
we're going to run over one hour into

982
00:47:40,240 --> 00:47:43,439
the break

983
00:47:40,880 --> 00:47:45,040
uh sebastian suggested that we take no

984
00:47:43,440 --> 00:47:48,400
more than 25 minutes to break which

985
00:47:45,040 --> 00:47:48,400
seems like a reasonable suggestion

986
00:47:50,240 --> 00:47:57,040
can i ask was that that we also check um

987
00:47:53,760 --> 00:47:59,359
how many people have read the adoption

988
00:47:57,040 --> 00:48:00,480
draft that this or the previous version

989
00:47:59,359 --> 00:48:02,640
and therefore

990
00:48:00,480 --> 00:48:05,440
get some view of um there are people

991
00:48:02,640 --> 00:48:07,440
being exposed to this

992
00:48:05,440 --> 00:48:21,839
sure do we know how to press these

993
00:48:07,440 --> 00:48:21,839
buttons i don't

994
00:48:23,760 --> 00:48:35,839
uh i think i just posted a question

995
00:48:28,400 --> 00:48:35,839
operator guidance strap and we read it

996
00:48:43,280 --> 00:48:46,880
that looks like a decent threshold of

997
00:48:45,040 --> 00:48:49,839
people have read it

998
00:48:46,880 --> 00:48:51,119
so click on the bar chart and um tick

999
00:48:49,839 --> 00:48:53,279
raise your hand if you

1000
00:48:51,119 --> 00:48:55,359
have read it or do not raise your hand

1001
00:48:53,280 --> 00:48:57,200
if you have not read it

1002
00:48:55,359 --> 00:48:58,640
and we'll collect that as we go into the

1003
00:48:57,200 --> 00:49:03,839
next talk so that we can

1004
00:48:58,640 --> 00:49:03,839
run this adoption call later on the list

1005
00:49:06,720 --> 00:49:12,799
back to you and bob are you planning to

1006
00:49:09,920 --> 00:49:12,800
project your charts

1007
00:49:14,800 --> 00:49:19,760
um i'd would rather you do to be honest

1008
00:49:17,280 --> 00:49:23,920
but i well

1009
00:49:19,760 --> 00:49:28,800
i suppose i could whatever no you do it

1010
00:49:23,920 --> 00:49:28,800
okay is that okay it'll take a minute

1011
00:49:28,839 --> 00:49:31,839
okay

1012
00:49:33,359 --> 00:49:36,240
i only say that because i've not done it

1013
00:49:34,640 --> 00:49:45,839
before so it will take me a minute as

1014
00:49:36,240 --> 00:49:45,839
well to work out how to do it

1015
00:49:57,280 --> 00:50:00,319
i guess i could just start by saying

1016
00:49:59,280 --> 00:50:01,920
that um

1017
00:50:00,319 --> 00:50:04,079
the next door what the next talk is

1018
00:50:01,920 --> 00:50:07,200
going to be before we get the title side

1019
00:50:04,079 --> 00:50:11,040
it's um a status update on

1020
00:50:07,200 --> 00:50:12,879
um l4s and the the three

1021
00:50:11,040 --> 00:50:14,720
main alfres drafts other than the one

1022
00:50:12,880 --> 00:50:18,559
greg has just been talking about

1023
00:50:14,720 --> 00:50:21,680
um that's the architecture draft

1024
00:50:18,559 --> 00:50:26,559
the um alphas id

1025
00:50:21,680 --> 00:50:29,680
and the um dual queue couple day qm

1026
00:50:26,559 --> 00:50:30,480
right um that's fairly small on my

1027
00:50:29,680 --> 00:50:34,319
screen

1028
00:50:30,480 --> 00:50:37,040
um um i jump in just one second

1029
00:50:34,319 --> 00:50:38,880
yep while you're getting screen sorted

1030
00:50:37,040 --> 00:50:41,359
and i want to summarize the results of

1031
00:50:38,880 --> 00:50:43,200
the poll that we just ran

1032
00:50:41,359 --> 00:50:45,440
yeah there were 15 people said that

1033
00:50:43,200 --> 00:50:46,160
they'd read one of the operational

1034
00:50:45,440 --> 00:50:48,079
drafts

1035
00:50:46,160 --> 00:50:49,520
one of the two revisions and there were

1036
00:50:48,079 --> 00:50:51,040
19 people who

1037
00:50:49,520 --> 00:50:52,960
said that they hadn't presumably

1038
00:50:51,040 --> 00:50:54,400
intended to so a reasonable number of

1039
00:50:52,960 --> 00:50:57,599
people have read this

1040
00:50:54,400 --> 00:50:58,880
and that's useful input to our

1041
00:50:57,599 --> 00:51:01,680
processor's chairs

1042
00:50:58,880 --> 00:51:03,200
thanks ever so much that polls closed

1043
00:51:01,680 --> 00:51:05,919
back to you bob

1044
00:51:03,200 --> 00:51:06,399
okay yeah actually i um i don't know was

1045
00:51:05,920 --> 00:51:08,160
that

1046
00:51:06,400 --> 00:51:10,079
meant to be a precursor to a working

1047
00:51:08,160 --> 00:51:13,118
group working group adoption or

1048
00:51:10,079 --> 00:51:13,119
what's going to happen with that

1049
00:51:17,040 --> 00:51:20,880
yes that's a precursor to what adoption

1050
00:51:19,359 --> 00:51:24,880
will handle that in the list

1051
00:51:20,880 --> 00:51:24,880
okay good yeah right

1052
00:51:25,440 --> 00:51:28,960
okay so um there are the three drafts

1053
00:51:28,000 --> 00:51:36,160
with their

1054
00:51:28,960 --> 00:51:38,559
vision numbers and um next slide please

1055
00:51:36,160 --> 00:51:39,520
uh one slide recap of what l4s is and

1056
00:51:38,559 --> 00:51:42,960
why uh

1057
00:51:39,520 --> 00:51:46,240
how it's motivated it's motivated

1058
00:51:42,960 --> 00:51:48,240
as um a desire for

1059
00:51:46,240 --> 00:51:50,000
ultra low queueing delay for all

1060
00:51:48,240 --> 00:51:53,200
internet applications

1061
00:51:50,000 --> 00:51:54,480
um so so that um you don't have the

1062
00:51:53,200 --> 00:51:57,680
problem of

1063
00:51:54,480 --> 00:51:59,250
um the management problem of having some

1064
00:51:57,680 --> 00:52:00,799
favored over others

1065
00:51:59,250 --> 00:52:04,400
[Music]

1066
00:52:00,800 --> 00:52:07,520
and the key idea

1067
00:52:04,400 --> 00:52:08,720
is getting smaller saw teeth to respond

1068
00:52:07,520 --> 00:52:10,319
to congestion

1069
00:52:08,720 --> 00:52:12,480
so that you don't have the compromise

1070
00:52:10,319 --> 00:52:15,599
between low queueing delay

1071
00:52:12,480 --> 00:52:16,480
and poor utilization so you can keep

1072
00:52:15,599 --> 00:52:20,000
your

1073
00:52:16,480 --> 00:52:21,680
get your aqm right tight and you and you

1074
00:52:20,000 --> 00:52:22,240
also get them scalable throughput which

1075
00:52:21,680 --> 00:52:25,279
is the s

1076
00:52:22,240 --> 00:52:28,959
part of the l4s which um

1077
00:52:25,280 --> 00:52:29,599
otherwise um that has has been known

1078
00:52:28,960 --> 00:52:32,640
since

1079
00:52:29,599 --> 00:52:35,680
um early work in the 1990s which sally

1080
00:52:32,640 --> 00:52:38,558
floyd published as an rfc 3649 i think

1081
00:52:35,680 --> 00:52:39,919
um you you get longer and longer time

1082
00:52:38,559 --> 00:52:43,520
between each sawtooth as

1083
00:52:39,920 --> 00:52:46,640
as you try and get faster um and

1084
00:52:43,520 --> 00:52:48,960
um you get less tight control

1085
00:52:46,640 --> 00:52:48,960
next

1086
00:52:49,920 --> 00:52:55,760
i'll try and speed up the um

1087
00:52:54,079 --> 00:52:58,319
just just a bit of news on various

1088
00:52:55,760 --> 00:53:00,559
implementation things been going on

1089
00:52:58,319 --> 00:53:01,520
since the last time we gave a status

1090
00:53:00,559 --> 00:53:03,520
update which was

1091
00:53:01,520 --> 00:53:05,759
april i believe maybe july i can't

1092
00:53:03,520 --> 00:53:09,599
remember um

1093
00:53:05,760 --> 00:53:12,559
the uh low latency docsis

1094
00:53:09,599 --> 00:53:14,319
um working group has been continuing

1095
00:53:12,559 --> 00:53:16,640
doing interop testing

1096
00:53:14,319 --> 00:53:18,720
um currently three independent

1097
00:53:16,640 --> 00:53:20,078
implementations two cable modems one

1098
00:53:18,720 --> 00:53:22,240
cmts

1099
00:53:20,079 --> 00:53:23,680
and two implementations now completely

1100
00:53:22,240 --> 00:53:26,640
pass all the functional tests

1101
00:53:23,680 --> 00:53:28,160
there was a uh i know before i left

1102
00:53:26,640 --> 00:53:32,240
cleveland there was a

1103
00:53:28,160 --> 00:53:34,000
large set of um conformance tests

1104
00:53:32,240 --> 00:53:36,799
uh and functional tests that that were

1105
00:53:34,000 --> 00:53:39,680
defined against the spec

1106
00:53:36,800 --> 00:53:39,920
next one um this work hasn't started yet

1107
00:53:39,680 --> 00:53:41,919
but

1108
00:53:39,920 --> 00:53:43,440
the only new news is that it it's got a

1109
00:53:41,920 --> 00:53:44,000
date for when it's planned to start and

1110
00:53:43,440 --> 00:53:46,240
that's the

1111
00:53:44,000 --> 00:53:47,280
data plane development kit that's the

1112
00:53:46,240 --> 00:53:50,479
open source

1113
00:53:47,280 --> 00:53:53,440
libraries for um virtualization

1114
00:53:50,480 --> 00:53:54,079
um for a variety of cpu architectures

1115
00:53:53,440 --> 00:53:56,079
and

1116
00:53:54,079 --> 00:53:57,119
that's planned for dual queue coupled

1117
00:53:56,079 --> 00:54:01,040
aqm

1118
00:53:57,119 --> 00:54:02,559
implementation um in q1 next year

1119
00:54:01,040 --> 00:54:04,240
and then there's a lot of um

1120
00:54:02,559 --> 00:54:06,240
publications coming out of

1121
00:54:04,240 --> 00:54:08,879
ns3 sorry by publication i mean

1122
00:54:06,240 --> 00:54:12,240
published source

1123
00:54:08,880 --> 00:54:15,200
out of the ns3 efforts um

1124
00:54:12,240 --> 00:54:16,479
there's the simulation model of of low

1125
00:54:15,200 --> 00:54:20,558
latency docsis

1126
00:54:16,480 --> 00:54:23,119
itself which was used by um

1127
00:54:20,559 --> 00:54:25,280
the low latency docsis working group to

1128
00:54:23,119 --> 00:54:28,720
test everything

1129
00:54:25,280 --> 00:54:29,280
and that's in the ns3 app store and that

1130
00:54:28,720 --> 00:54:33,040
link

1131
00:54:29,280 --> 00:54:35,920
takes you to it off the slides

1132
00:54:33,040 --> 00:54:38,400
and it includes not only the dual queue

1133
00:54:35,920 --> 00:54:40,319
capital dqm but also low latency

1134
00:54:38,400 --> 00:54:44,480
doctor's cue protection

1135
00:54:40,319 --> 00:54:46,400
um which i think will be useful news to

1136
00:54:44,480 --> 00:54:50,000
some people who've been wanting a form

1137
00:54:46,400 --> 00:54:50,000
of q protection to test things against

1138
00:54:50,559 --> 00:54:54,240
and there's also a link to cable lab's

1139
00:54:52,400 --> 00:54:57,359
press release about that so you can

1140
00:54:54,240 --> 00:55:01,200
get a quick feel for what what's in that

1141
00:54:57,359 --> 00:55:04,960
that was released in september then

1142
00:55:01,200 --> 00:55:07,520
um it also um

1143
00:55:04,960 --> 00:55:08,720
tom henderson pointed out tom was

1144
00:55:07,520 --> 00:55:11,759
largely pulling all that

1145
00:55:08,720 --> 00:55:12,799
um stuff above together then he's also

1146
00:55:11,760 --> 00:55:15,599
pointed out that

1147
00:55:12,799 --> 00:55:16,400
alfred support has been added to um

1148
00:55:15,599 --> 00:55:21,119
coddle and

1149
00:55:16,400 --> 00:55:24,960
fq coddle models in ns3

1150
00:55:21,119 --> 00:55:26,480
and it's about to be released

1151
00:55:24,960 --> 00:55:29,440
it's been added and about to be released

1152
00:55:26,480 --> 00:55:32,720
in fq pi and fq cobalt

1153
00:55:29,440 --> 00:55:36,240
in their models in ns3 um

1154
00:55:32,720 --> 00:55:41,279
and it's already in the linux fq cuddle

1155
00:55:36,240 --> 00:55:41,279
um and that adds um

1156
00:55:41,440 --> 00:55:47,040
as as well that they add to the

1157
00:55:44,720 --> 00:55:49,359
the itf dual cue coupled acre meaning

1158
00:55:47,040 --> 00:55:52,799
the one that's in the itf draft the

1159
00:55:49,359 --> 00:55:55,839
sort of reference pseudocode um the

1160
00:55:52,799 --> 00:55:59,040
the code for that um is also

1161
00:55:55,839 --> 00:55:59,759
modeled in ns3 and has been for some

1162
00:55:59,040 --> 00:56:03,839
time

1163
00:55:59,760 --> 00:56:03,839
right um next

1164
00:56:05,599 --> 00:56:10,880
right um just want a quick heads up we

1165
00:56:10,079 --> 00:56:15,359
have a um

1166
00:56:10,880 --> 00:56:19,040
iccrg session on friday 500 utc

1167
00:56:15,359 --> 00:56:22,640
um 1400 in bangkok time

1168
00:56:19,040 --> 00:56:26,319
and um i think that's right

1169
00:56:22,640 --> 00:56:29,520
no no midday 1200 bangkok time

1170
00:56:26,319 --> 00:56:32,319
and um the

1171
00:56:29,520 --> 00:56:33,520
the i'll give a quick outline of what's

1172
00:56:32,319 --> 00:56:36,880
going to happen

1173
00:56:33,520 --> 00:56:38,559
um we have a congestion control that

1174
00:56:36,880 --> 00:56:41,280
gives really low latency

1175
00:56:38,559 --> 00:56:42,079
over a range of conditions um as in that

1176
00:56:41,280 --> 00:56:45,680
paper

1177
00:56:42,079 --> 00:56:48,799
you know reasonable um rtts and

1178
00:56:45,680 --> 00:56:51,440
um link rates

1179
00:56:48,799 --> 00:56:52,799
but you know pieces of it are still

1180
00:56:51,440 --> 00:56:55,839
missing you know that's

1181
00:56:52,799 --> 00:56:57,280
um absolutely obvious um so it's easy to

1182
00:56:55,839 --> 00:56:58,319
think up conditions where it doesn't

1183
00:56:57,280 --> 00:57:00,880
work well

1184
00:56:58,319 --> 00:57:02,240
and show that and we admit progress has

1185
00:57:00,880 --> 00:57:05,920
been slow

1186
00:57:02,240 --> 00:57:09,598
um covering up all those holes

1187
00:57:05,920 --> 00:57:12,640
and and fixing it all so

1188
00:57:09,599 --> 00:57:15,040
um you know as we've said many times

1189
00:57:12,640 --> 00:57:16,319
we being the um core team the design

1190
00:57:15,040 --> 00:57:19,920
team working on

1191
00:57:16,319 --> 00:57:22,000
um l4s we we're

1192
00:57:19,920 --> 00:57:23,599
primarily for network companies and and

1193
00:57:22,000 --> 00:57:26,640
being network operators or

1194
00:57:23,599 --> 00:57:28,079
vendors for for networks um

1195
00:57:26,640 --> 00:57:29,680
and you know we've got a bit of a

1196
00:57:28,079 --> 00:57:30,720
background in congestion control over

1197
00:57:29,680 --> 00:57:32,720
the years

1198
00:57:30,720 --> 00:57:34,319
but we're not the guys that will produce

1199
00:57:32,720 --> 00:57:34,558
this so you know we're having to do it

1200
00:57:34,319 --> 00:57:36,880
in

1201
00:57:34,559 --> 00:57:38,480
spare time because it's not funded by

1202
00:57:36,880 --> 00:57:41,760
our companies and so on

1203
00:57:38,480 --> 00:57:44,960
um so we want to generate interest

1204
00:57:41,760 --> 00:57:48,000
in the problem and the potential again

1205
00:57:44,960 --> 00:57:49,280
um and we thought if we explain the

1206
00:57:48,000 --> 00:57:51,440
interesting

1207
00:57:49,280 --> 00:57:53,599
things that we've done had to do in dc

1208
00:57:51,440 --> 00:57:55,119
tcp to get it um

1209
00:57:53,599 --> 00:57:57,280
to get it to meet all these prague

1210
00:57:55,119 --> 00:58:00,160
requirements and work over the internet

1211
00:57:57,280 --> 00:58:00,799
and talk about what we've learned um we

1212
00:58:00,160 --> 00:58:03,680
might

1213
00:58:00,799 --> 00:58:05,359
generate some interest and um get a bit

1214
00:58:03,680 --> 00:58:07,440
of a buzz around this

1215
00:58:05,359 --> 00:58:09,920
but at the end of the talk we want to

1216
00:58:07,440 --> 00:58:13,280
have start a conversation about

1217
00:58:09,920 --> 00:58:14,799
um what what is needed to get that buzz

1218
00:58:13,280 --> 00:58:15,839
going again because after the initial

1219
00:58:14,799 --> 00:58:19,280
buzz

1220
00:58:15,839 --> 00:58:22,799
we um imagined that

1221
00:58:19,280 --> 00:58:24,960
this was a good um

1222
00:58:22,799 --> 00:58:26,319
enough potential that people would want

1223
00:58:24,960 --> 00:58:29,200
to work on this

1224
00:58:26,319 --> 00:58:30,720
um we imagined a different way of

1225
00:58:29,200 --> 00:58:31,279
building congestion control if you like

1226
00:58:30,720 --> 00:58:33,359
whereas

1227
00:58:31,280 --> 00:58:35,760
mostly what a congestion control has

1228
00:58:33,359 --> 00:58:37,359
been given as a blob to the community by

1229
00:58:35,760 --> 00:58:39,599
researchers

1230
00:58:37,359 --> 00:58:41,759
and we were thinking it'd be great to

1231
00:58:39,599 --> 00:58:44,799
have something where

1232
00:58:41,760 --> 00:58:46,559
different components um

1233
00:58:44,799 --> 00:58:48,240
were were brought in by different

1234
00:58:46,559 --> 00:58:51,839
different groups

1235
00:58:48,240 --> 00:58:53,919
as more of open source project and that

1236
00:58:51,839 --> 00:58:56,000
didn't happen and that's probably our

1237
00:58:53,920 --> 00:58:58,640
fault nearly certainly our fault

1238
00:58:56,000 --> 00:58:59,680
as the core team just you know we didn't

1239
00:58:58,640 --> 00:59:02,720
um do it right

1240
00:58:59,680 --> 00:59:05,520
didn't make it open enough at the start

1241
00:59:02,720 --> 00:59:06,558
um but now with something worse has

1242
00:59:05,520 --> 00:59:10,559
happened we've sort of got a

1243
00:59:06,559 --> 00:59:12,640
toxic code point war that's um

1244
00:59:10,559 --> 00:59:14,559
you know it's it's good to have a red

1245
00:59:12,640 --> 00:59:16,879
team you know to be

1246
00:59:14,559 --> 00:59:18,880
um picking holes in in everything but

1247
00:59:16,880 --> 00:59:19,200
it's it's now getting to the point where

1248
00:59:18,880 --> 00:59:22,319
it's

1249
00:59:19,200 --> 00:59:25,118
i i think being a bit more destructive

1250
00:59:22,319 --> 00:59:25,440
in that it's you know there are problems

1251
00:59:25,119 --> 00:59:28,640
that

1252
00:59:25,440 --> 00:59:30,240
aren't really anything to do with l4s

1253
00:59:28,640 --> 00:59:32,160
congestion controls in particular that

1254
00:59:30,240 --> 00:59:34,078
you could you could pick up in

1255
00:59:32,160 --> 00:59:36,558
in other congestion controls that are

1256
00:59:34,079 --> 00:59:39,440
being pulled out for that and so

1257
00:59:36,559 --> 00:59:39,920
i think it overshadows the potential of

1258
00:59:39,440 --> 00:59:42,240
any

1259
00:59:39,920 --> 00:59:43,359
congestion control using high facility

1260
00:59:42,240 --> 00:59:46,078
fidelity signaling

1261
00:59:43,359 --> 00:59:47,200
where we're risking losing the losing

1262
00:59:46,079 --> 00:59:51,520
sight of the

1263
00:59:47,200 --> 00:59:53,439
potential of this so

1264
00:59:51,520 --> 00:59:55,280
we want a conversation about what a

1265
00:59:53,440 --> 00:59:56,640
relaunch would need to look like for you

1266
00:59:55,280 --> 00:59:57,839
to want to get involved and

1267
00:59:56,640 --> 01:00:00,000
you know we're looking for constructive

1268
00:59:57,839 --> 01:00:04,480
views but i'm not asking for that now

1269
01:00:00,000 --> 01:00:08,079
i'm just giving a heads up um

1270
01:00:04,480 --> 01:00:08,079
bob so yeah there's um

1271
01:00:08,480 --> 01:00:11,520
there was some confusion about the the

1272
01:00:10,240 --> 01:00:14,640
deadline for this meeting

1273
01:00:11,520 --> 01:00:16,319
and and that's not your fault however uh

1274
01:00:14,640 --> 01:00:18,000
i and many other people are not going to

1275
01:00:16,319 --> 01:00:20,880
be able to stretch this until

1276
01:00:18,000 --> 01:00:22,799
55 past um is there any way you can

1277
01:00:20,880 --> 01:00:24,160
bring forward like the key takeaways

1278
01:00:22,799 --> 01:00:26,079
and then for people who are interested

1279
01:00:24,160 --> 01:00:27,920
they'd be welcome to stick around for

1280
01:00:26,079 --> 01:00:29,280
okay your full presentation i'm i'm

1281
01:00:27,920 --> 01:00:31,280
sorry for that i know this is

1282
01:00:29,280 --> 01:00:32,559
unfortunate yeah it's actually the next

1283
01:00:31,280 --> 01:00:34,559
slide i think i i

1284
01:00:32,559 --> 01:00:36,160
i was going to say if if you want to

1285
01:00:34,559 --> 01:00:40,960
hear the whole talk in the next slide

1286
01:00:36,160 --> 01:00:43,839
then you can and go if you want um

1287
01:00:40,960 --> 01:00:43,839
so um

1288
01:00:44,160 --> 01:00:48,480
all three drafts that you know the rest

1289
01:00:47,119 --> 01:00:49,839
of the rest of the talk is about is

1290
01:00:48,480 --> 01:00:51,200
about the alfres drafts

1291
01:00:49,839 --> 01:00:53,279
because we've been putting a lot of work

1292
01:00:51,200 --> 01:00:54,078
into them to get them get them finished

1293
01:00:53,280 --> 01:00:56,559
and ready for

1294
01:00:54,079 --> 01:00:57,839
working group last call in our humble

1295
01:00:56,559 --> 01:01:01,520
opinion that stands for

1296
01:00:57,839 --> 01:01:05,359
um or it's an anagram of ohio

1297
01:01:01,520 --> 01:01:07,520
um and um

1298
01:01:05,359 --> 01:01:09,680
there the only bit left really is is

1299
01:01:07,520 --> 01:01:11,280
what the status of this alpha s ops

1300
01:01:09,680 --> 01:01:13,919
draft is it's an individual draft so we

1301
01:01:11,280 --> 01:01:16,960
didn't um refer to it yet so it

1302
01:01:13,920 --> 01:01:18,640
um we need to

1303
01:01:16,960 --> 01:01:20,000
put in a reference to that but otherwise

1304
01:01:18,640 --> 01:01:23,359
we're done and

1305
01:01:20,000 --> 01:01:26,160
and describe it a bit in the l4s id

1306
01:01:23,359 --> 01:01:28,000
but otherwise the three drafts there's

1307
01:01:26,160 --> 01:01:31,200
the offress architecture

1308
01:01:28,000 --> 01:01:35,200
had two revs since um the last

1309
01:01:31,200 --> 01:01:36,879
um status update and i guess the main

1310
01:01:35,200 --> 01:01:38,640
change i mean there's been some very

1311
01:01:36,880 --> 01:01:42,240
significant change in that um

1312
01:01:38,640 --> 01:01:45,759
and i will go through them but top level

1313
01:01:42,240 --> 01:01:48,959
really it's it's put fq up there

1314
01:01:45,760 --> 01:01:50,720
with dual queue as um sort of

1315
01:01:48,960 --> 01:01:51,680
alternatives in the architecture it's no

1316
01:01:50,720 --> 01:01:54,240
longer

1317
01:01:51,680 --> 01:01:56,240
the dual queue is no longer the

1318
01:01:54,240 --> 01:01:59,279
architecture it's um

1319
01:01:56,240 --> 01:02:04,319
fq as well and um

1320
01:01:59,280 --> 01:02:06,079
the other l4sid draft

1321
01:02:04,319 --> 01:02:07,759
there's been a lot of changes in that

1322
01:02:06,079 --> 01:02:10,880
one um

1323
01:02:07,760 --> 01:02:13,599
mainly uh you know i mean a lot of

1324
01:02:10,880 --> 01:02:14,960
um clarity changes but there's also been

1325
01:02:13,599 --> 01:02:18,000
a number of

1326
01:02:14,960 --> 01:02:22,160
um normative text changes

1327
01:02:18,000 --> 01:02:25,920
um based on conversations on the list um

1328
01:02:22,160 --> 01:02:26,960
where we've been tweaking the wording if

1329
01:02:25,920 --> 01:02:30,400
you like

1330
01:02:26,960 --> 01:02:34,880
and and some new stuff about smoothing

1331
01:02:30,400 --> 01:02:38,400
um smoothing signals um pacing

1332
01:02:34,880 --> 01:02:39,839
um to to make them um

1333
01:02:38,400 --> 01:02:43,119
requirements because that draft is

1334
01:02:39,839 --> 01:02:45,599
primarily a draft

1335
01:02:43,119 --> 01:02:48,960
about how to write a congestion control

1336
01:02:45,599 --> 01:02:51,520
draft or how to write a um

1337
01:02:48,960 --> 01:02:53,039
a draft about network equipment and it's

1338
01:02:51,520 --> 01:02:54,640
giving the requirements as to what has

1339
01:02:53,039 --> 01:02:56,480
to be in that draft so there's some

1340
01:02:54,640 --> 01:02:59,359
shits and musts on what on what has to

1341
01:02:56,480 --> 01:03:00,559
be in those things about pacing and

1342
01:02:59,359 --> 01:03:03,440
stuff

1343
01:03:00,559 --> 01:03:04,720
and um finally the dual queue coupled

1344
01:03:03,440 --> 01:03:07,200
aqm that's

1345
01:03:04,720 --> 01:03:08,879
very stable um wasn't i couldn't find

1346
01:03:07,200 --> 01:03:11,279
anything to change in that

1347
01:03:08,880 --> 01:03:12,640
um just some modern editorial stuff so

1348
01:03:11,280 --> 01:03:16,480
that's the top level for

1349
01:03:12,640 --> 01:03:18,558
martin if you want to go now um

1350
01:03:16,480 --> 01:03:20,559
well bob i think that might be a good

1351
01:03:18,559 --> 01:03:21,839
point just to pause for a moment to see

1352
01:03:20,559 --> 01:03:24,559
people have questions

1353
01:03:21,839 --> 01:03:25,119
because you'll have time to present the

1354
01:03:24,559 --> 01:03:26,960
rest

1355
01:03:25,119 --> 01:03:28,960
later but it'd be more important to take

1356
01:03:26,960 --> 01:03:32,240
questions if people have observations or

1357
01:03:28,960 --> 01:03:32,240
questions on this from the room

1358
01:03:35,520 --> 01:03:38,720
would anyone like to join our queue go

1359
01:03:37,920 --> 01:03:42,839
ahead

1360
01:03:38,720 --> 01:03:45,680
queue should i should i start

1361
01:03:42,839 --> 01:03:46,799
go okay thank you uh well at a high

1362
01:03:45,680 --> 01:03:48,960
level i

1363
01:03:46,799 --> 01:03:50,799
bob i i don't know that we need to go

1364
01:03:48,960 --> 01:03:54,240
over all the l4s drafts again

1365
01:03:50,799 --> 01:03:55,599
uh but i want to ask what is the intent

1366
01:03:54,240 --> 01:03:56,959
here ultimately are we

1367
01:03:55,599 --> 01:03:59,440
are we asking whether we should go to

1368
01:03:56,960 --> 01:04:01,280
last call are we are there any major

1369
01:03:59,440 --> 01:04:02,720
issues pending but the extent that i've

1370
01:04:01,280 --> 01:04:04,000
seen my understanding is that the

1371
01:04:02,720 --> 01:04:06,879
biggest issue

1372
01:04:04,000 --> 01:04:07,200
the biggest issue i've see i've seen and

1373
01:04:06,880 --> 01:04:08,480
and

1374
01:04:07,200 --> 01:04:11,439
forgive me if i've not seen all the

1375
01:04:08,480 --> 01:04:14,640
issues is the competition with classic

1376
01:04:11,440 --> 01:04:17,680
eqn at uh fifo queues

1377
01:04:14,640 --> 01:04:18,720
and uh is that the biggest issue that's

1378
01:04:17,680 --> 01:04:20,078
spending because i'd like to speak to

1379
01:04:18,720 --> 01:04:22,399
that if that is the biggest issue that's

1380
01:04:20,079 --> 01:04:22,400
pending

1381
01:04:23,920 --> 01:04:28,160
i guess god against that and and the

1382
01:04:25,760 --> 01:04:31,520
point i've just made about um

1383
01:04:28,160 --> 01:04:33,759
our congestion control is is not

1384
01:04:31,520 --> 01:04:35,599
up to speed with the with um the

1385
01:04:33,760 --> 01:04:37,280
aspirations in this draft but but one of

1386
01:04:35,599 --> 01:04:39,039
the questions at the end is

1387
01:04:37,280 --> 01:04:40,880
is the intent that that is part of the

1388
01:04:39,039 --> 01:04:44,000
experiment um rather than

1389
01:04:40,880 --> 01:04:45,359
right so so that's that's so so so

1390
01:04:44,000 --> 01:04:47,599
maybe i'll just take a minute to speak

1391
01:04:45,359 --> 01:04:47,920
to to to both of those points because i

1392
01:04:47,599 --> 01:04:50,319
think

1393
01:04:47,920 --> 01:04:51,280
my my point will ought to cover them

1394
01:04:50,319 --> 01:04:54,160
both

1395
01:04:51,280 --> 01:04:56,160
at a high level i feel i i'm i i feel

1396
01:04:54,160 --> 01:04:58,720
like this is ready for an experiment

1397
01:04:56,160 --> 01:04:59,440
uh i absolutely think that we should

1398
01:04:58,720 --> 01:05:01,118
outline

1399
01:04:59,440 --> 01:05:02,640
precisely what the outcomes of the

1400
01:05:01,119 --> 01:05:04,559
experiment ought to be

1401
01:05:02,640 --> 01:05:06,240
meaning that what are we measuring what

1402
01:05:04,559 --> 01:05:10,000
are we looking to see

1403
01:05:06,240 --> 01:05:11,759
um but uh era it absolutely seems like

1404
01:05:10,000 --> 01:05:14,079
we are ready to launch this experiment

1405
01:05:11,760 --> 01:05:15,039
um something that stewart said earlier

1406
01:05:14,079 --> 01:05:18,640
um

1407
01:05:15,039 --> 01:05:23,119
is is is very uh i think uh

1408
01:05:18,640 --> 01:05:25,920
uh it's an important point to note here

1409
01:05:23,119 --> 01:05:27,119
if if the concern about a competition

1410
01:05:25,920 --> 01:05:30,720
with classic issue

1411
01:05:27,119 --> 01:05:33,520
a classic ecn is a concern

1412
01:05:30,720 --> 01:05:35,359
uh i might argue that that only becomes

1413
01:05:33,520 --> 01:05:40,799
a real concern or a reality

1414
01:05:35,359 --> 01:05:43,520
if l4s becomes very successful

1415
01:05:40,799 --> 01:05:45,119
i would like that to happen i would like

1416
01:05:43,520 --> 01:05:47,119
for us to become successful and i would

1417
01:05:45,119 --> 01:05:50,319
like it to become a problem

1418
01:05:47,119 --> 01:05:52,079
for the non-existent classic ecn

1419
01:05:50,319 --> 01:05:54,160
so if the world we are talking about is

1420
01:05:52,079 --> 01:05:54,880
is potentially that we could we could

1421
01:05:54,160 --> 01:05:57,920
make this

1422
01:05:54,880 --> 01:06:02,079
uh get us out the door try and deploy

1423
01:05:57,920 --> 01:06:04,079
uh l4s then let's do it

1424
01:06:02,079 --> 01:06:18,640
i don't know that we need to wait for

1425
01:06:04,079 --> 01:06:21,359
much else at this point

1426
01:06:18,640 --> 01:06:22,240
so colin perkins in java says plus one

1427
01:06:21,359 --> 01:06:24,078
and

1428
01:06:22,240 --> 01:06:32,078
is there are there more comments apart

1429
01:06:24,079 --> 01:06:34,000
from jonas

1430
01:06:32,079 --> 01:06:35,599
i was going to add to john's comment

1431
01:06:34,000 --> 01:06:38,799
that i think john is going to suggest

1432
01:06:35,599 --> 01:06:41,359
that a path to

1433
01:06:38,799 --> 01:06:43,038
um successful working with glasgow on

1434
01:06:41,359 --> 01:06:46,558
the main lforest drafts

1435
01:06:43,039 --> 01:06:48,720
runs through uh solidification of the

1436
01:06:46,559 --> 01:06:53,200
lfrs operations traffic that

1437
01:06:48,720 --> 01:06:53,200
that's where the 3168 issue could sell

1438
01:06:54,640 --> 01:07:00,240
are you taking that as a um

1439
01:06:58,480 --> 01:07:03,039
are you taking that as a comment that

1440
01:07:00,240 --> 01:07:03,038
we're not ready

1441
01:07:12,839 --> 01:07:15,839
david

1442
01:07:20,400 --> 01:07:24,480
i i'm not sure i think as part of ruger

1443
01:07:23,599 --> 01:07:27,520
glass quality

1444
01:07:24,480 --> 01:07:31,000
group has to judge whether um there is

1445
01:07:27,520 --> 01:07:33,038
a reasonable approach to dealing with

1446
01:07:31,000 --> 01:07:36,559
3168

1447
01:07:33,039 --> 01:07:39,599
yeah i can care with that and i think

1448
01:07:36,559 --> 01:07:41,680
that's that is i mean just

1449
01:07:39,599 --> 01:07:43,119
so to clarify for anybody who's watching

1450
01:07:41,680 --> 01:07:46,240
this

1451
01:07:43,119 --> 01:07:47,760
or listening remotely and the working

1452
01:07:46,240 --> 01:07:49,439
group last call doesn't confirm the

1453
01:07:47,760 --> 01:07:51,119
document the working group last call

1454
01:07:49,440 --> 01:07:53,839
gives people a last

1455
01:07:51,119 --> 01:07:54,640
call for comments on it where we have to

1456
01:07:53,839 --> 01:07:56,720
in detail

1457
01:07:54,640 --> 01:07:58,799
check that things are right and the

1458
01:07:56,720 --> 01:07:59,839
document could be frozen after that or

1459
01:07:58,799 --> 01:08:02,160
the document could be

1460
01:07:59,839 --> 01:08:03,440
published or the document could be could

1461
01:08:02,160 --> 01:08:05,680
we have certain pieces of work

1462
01:08:03,440 --> 01:08:08,400
identified that need to be done

1463
01:08:05,680 --> 01:08:10,078
so or indeed it could be dropped the

1464
01:08:08,400 --> 01:08:12,799
working group last call is a call

1465
01:08:10,079 --> 01:08:12,799
for comments

1466
01:08:15,200 --> 01:08:19,920
we're seeing several things in the java

1467
01:08:17,600 --> 01:08:19,920
um

1468
01:08:20,080 --> 01:08:26,238
does anybody want to speak we can take

1469
01:08:23,279 --> 01:08:26,239
notes from the jabber

1470
01:08:30,000 --> 01:08:36,158
i see two people saying that's right

1471
01:08:33,439 --> 01:08:37,439
go ahead i've taken some notes from the

1472
01:08:36,158 --> 01:08:40,799
jabber recorded several

1473
01:08:37,439 --> 01:08:44,080
plus ones and two i i believe

1474
01:08:40,799 --> 01:08:47,120
the jonas statement and also

1475
01:08:44,080 --> 01:08:50,399
some several

1476
01:08:47,120 --> 01:08:50,399
notes saying not ready

1477
01:08:51,040 --> 01:08:54,960
um they'll be there in the notes as best

1478
01:08:53,520 --> 01:08:57,440
i can capture them

1479
01:08:54,960 --> 01:08:58,080
yeah uh something's different from john

1480
01:08:57,439 --> 01:09:01,358
morton

1481
01:08:58,080 --> 01:09:03,759
he was he he said i'll read it exactly

1482
01:09:01,359 --> 01:09:05,359
i think working group last call at least

1483
01:09:03,759 --> 01:09:08,640
has to wait for l4s

1484
01:09:05,359 --> 01:09:09,679
ops to be completed so that's a personal

1485
01:09:08,640 --> 01:09:12,319
statement that the

1486
01:09:09,679 --> 01:09:20,640
ops draft should be completed does

1487
01:09:12,319 --> 01:09:23,679
anybody want to speak to that one

1488
01:09:20,640 --> 01:09:26,159
to that for no particular reason but uh

1489
01:09:23,679 --> 01:09:27,359
because i'm here in the queue uh i i

1490
01:09:26,158 --> 01:09:29,120
don't think that we need to wait for the

1491
01:09:27,359 --> 01:09:30,239
ops drafts i mean i think the obstacles

1492
01:09:29,120 --> 01:09:32,479
are useful it's it's

1493
01:09:30,238 --> 01:09:33,599
it's a brand new one and i think that

1494
01:09:32,479 --> 01:09:36,639
putting that

1495
01:09:33,600 --> 01:09:37,679
on the critical path rushes the draft i

1496
01:09:36,640 --> 01:09:39,839
think it's worth

1497
01:09:37,679 --> 01:09:41,040
spending some time getting that uh

1498
01:09:39,839 --> 01:09:42,719
ironed out

1499
01:09:41,040 --> 01:09:44,158
uh just in terms of getting the text

1500
01:09:42,719 --> 01:09:46,799
right and everything else but

1501
01:09:44,158 --> 01:09:49,358
uh i still don't understand why that

1502
01:09:46,799 --> 01:09:50,799
needs to be on the critical path

1503
01:09:49,359 --> 01:09:52,960
for getting these two experimental

1504
01:09:50,799 --> 01:09:53,679
status if people know how to deploy this

1505
01:09:52,960 --> 01:10:02,720
stuff

1506
01:09:53,679 --> 01:10:05,899
then they can do it

1507
01:10:02,720 --> 01:10:05,899
[Music]

1508
01:10:05,920 --> 01:10:08,640
any more thoughts

1509
01:10:10,080 --> 01:10:13,679
so i'm in the queue after jonah but i

1510
01:10:11,760 --> 01:10:13,920
see colin and john are still ahead of me

1511
01:10:13,679 --> 01:10:17,520
or

1512
01:10:13,920 --> 01:10:22,640
should i just speak i guess um

1513
01:10:17,520 --> 01:10:22,640
yes i will uh so the uh

1514
01:10:22,800 --> 01:10:26,560
you know the tests that jonathan and

1515
01:10:24,880 --> 01:10:29,360
pete have published lately

1516
01:10:26,560 --> 01:10:31,040
uh do show some some bad problems i

1517
01:10:29,360 --> 01:10:33,599
guess the

1518
01:10:31,040 --> 01:10:34,480
you know the claim is that this is as i

1519
01:10:33,600 --> 01:10:38,400
understand it is

1520
01:10:34,480 --> 01:10:41,519
essentially sufficient to uh

1521
01:10:38,400 --> 01:10:42,080
to call the l4s experiment likely to

1522
01:10:41,520 --> 01:10:44,719
fail

1523
01:10:42,080 --> 01:10:45,360
um so i'm not sure if the intent is to

1524
01:10:44,719 --> 01:10:47,280
sort of just

1525
01:10:45,360 --> 01:10:48,480
fix that after seeing the experiments

1526
01:10:47,280 --> 01:10:49,759
and i'm not sure why that wouldn't

1527
01:10:48,480 --> 01:10:51,519
happen in lab before

1528
01:10:49,760 --> 01:10:53,360
moving it forward but i guess the

1529
01:10:51,520 --> 01:10:54,880
sentiment here seems to be

1530
01:10:53,360 --> 01:10:57,040
let's get this rolled out so that people

1531
01:10:54,880 --> 01:10:57,840
can try it or something

1532
01:10:57,040 --> 01:10:59,199
i think there's already an

1533
01:10:57,840 --> 01:11:00,960
implementation people can try so i'm a

1534
01:10:59,199 --> 01:11:02,839
little confused what the

1535
01:11:00,960 --> 01:11:05,440
what the hold up is on running an

1536
01:11:02,840 --> 01:11:09,600
experiment just in terms of gathering

1537
01:11:05,440 --> 01:11:12,080
data i'm not sure

1538
01:11:09,600 --> 01:11:13,360
how that relates exactly to the last

1539
01:11:12,080 --> 01:11:14,960
call or not

1540
01:11:13,360 --> 01:11:16,639
like to me so far what's been

1541
01:11:14,960 --> 01:11:19,199
demonstrated kind of just

1542
01:11:16,640 --> 01:11:20,800
looks like probably a bad idea but it

1543
01:11:19,199 --> 01:11:22,559
there might be fixes for it that could

1544
01:11:20,800 --> 01:11:24,640
be in the works and i guess the idea is

1545
01:11:22,560 --> 01:11:26,960
to generate interest enough to get them

1546
01:11:24,640 --> 01:11:30,159
actually fixed um

1547
01:11:26,960 --> 01:11:31,840
you know that's that's just my sort of

1548
01:11:30,159 --> 01:11:33,519
take on on the experiments i've seen so

1549
01:11:31,840 --> 01:11:36,800
far but uh

1550
01:11:33,520 --> 01:11:38,080
yeah in terms of i guess the the goal

1551
01:11:36,800 --> 01:11:39,600
here is to get

1552
01:11:38,080 --> 01:11:41,040
wider operational experiment and that's

1553
01:11:39,600 --> 01:11:41,679
waiting on a draft i'm a little just

1554
01:11:41,040 --> 01:11:43,920
confused

1555
01:11:41,679 --> 01:11:46,400
on a on an rfc rather than than on a

1556
01:11:43,920 --> 01:11:49,840
draft and i'm a little confused on

1557
01:11:46,400 --> 01:11:52,839
how that even relates exactly so

1558
01:11:49,840 --> 01:11:55,840
i don't know who wants to speak to that

1559
01:11:52,840 --> 01:11:55,840
but

1560
01:12:02,400 --> 01:12:05,920
um so i'm not sure who's running with q

1561
01:12:04,159 --> 01:12:07,839
but i guess i may be next

1562
01:12:05,920 --> 01:12:09,280
um i i don't think we need to wait for

1563
01:12:07,840 --> 01:12:12,080
the abstract here uh

1564
01:12:09,280 --> 01:12:13,440
i'm confused as to why we're not just

1565
01:12:12,080 --> 01:12:15,760
proceeding with this already

1566
01:12:13,440 --> 01:12:17,040
the the problems we've seen identified

1567
01:12:15,760 --> 01:12:19,520
seem very minor

1568
01:12:17,040 --> 01:12:21,440
and unlikely to be a practical issue so

1569
01:12:19,520 --> 01:12:22,800
i don't i don't quite understand why

1570
01:12:21,440 --> 01:12:24,559
we're not proceeding with the

1571
01:12:22,800 --> 01:12:26,000
the experiment so yes i i would

1572
01:12:24,560 --> 01:12:28,239
encourage us to to move forward with

1573
01:12:26,000 --> 01:12:28,239
this

1574
01:12:33,040 --> 01:12:36,640
okay so i guess it's my turn and and i

1575
01:12:35,360 --> 01:12:37,679
will echo what some people said on this

1576
01:12:36,640 --> 01:12:39,120
like that um

1577
01:12:37,679 --> 01:12:40,560
just like on the chat that a little

1578
01:12:39,120 --> 01:12:42,640
active queue management telling us who

1579
01:12:40,560 --> 01:12:44,719
is next would be helpful from the chairs

1580
01:12:42,640 --> 01:12:46,960
um so i'm sort of struggling to know

1581
01:12:44,719 --> 01:12:49,040
what the experiment the experiment

1582
01:12:46,960 --> 01:12:51,199
uh actually is right so there's a bunch

1583
01:12:49,040 --> 01:12:53,120
of specs that talk about you know

1584
01:12:51,199 --> 01:12:55,120
queueing scheme all that that's great

1585
01:12:53,120 --> 01:12:57,199
but what's the experiment and i

1586
01:12:55,120 --> 01:12:58,159
think i try to say this in email so at

1587
01:12:57,199 --> 01:13:00,879
least in my mind

1588
01:12:58,159 --> 01:13:02,239
this tcp variant that would do something

1589
01:13:00,880 --> 01:13:03,920
clever with

1590
01:13:02,239 --> 01:13:05,759
whatever we put into the network is sort

1591
01:13:03,920 --> 01:13:06,960
of an intrinsic part of the experiment

1592
01:13:05,760 --> 01:13:08,640
because how else are you going to

1593
01:13:06,960 --> 01:13:10,239
evaluate something

1594
01:13:08,640 --> 01:13:11,840
and and that part i don't really see

1595
01:13:10,239 --> 01:13:13,678
described right so

1596
01:13:11,840 --> 01:13:15,679
i'm i'm probably convinced that what we

1597
01:13:13,679 --> 01:13:17,600
have in the draft is sort of

1598
01:13:15,679 --> 01:13:19,760
described well enough that you can

1599
01:13:17,600 --> 01:13:21,280
implement the queueing scheme like this

1600
01:13:19,760 --> 01:13:22,960
but i don't quite know unders i don't

1601
01:13:21,280 --> 01:13:24,320
know what what we're going to experiment

1602
01:13:22,960 --> 01:13:26,480
with

1603
01:13:24,320 --> 01:13:27,759
what's the outcome and what the date

1604
01:13:26,480 --> 01:13:29,360
what data do we want out of the

1605
01:13:27,760 --> 01:13:29,840
experiment to know whether we succeeded

1606
01:13:29,360 --> 01:13:33,839
or not

1607
01:13:29,840 --> 01:13:33,840
that that's the part i'm struggling with

1608
01:13:38,159 --> 01:13:43,040
um yes so i think the experiment is so i

1609
01:13:41,440 --> 01:13:44,879
think problems that have been detected

1610
01:13:43,040 --> 01:13:47,120
about dual queue actually make certain

1611
01:13:44,880 --> 01:13:48,800
assumptions about deployments

1612
01:13:47,120 --> 01:13:50,480
so part of the experiment is actually to

1613
01:13:48,800 --> 01:13:52,880
figure out if these deployments are

1614
01:13:50,480 --> 01:13:54,799
do exist in our problem because we

1615
01:13:52,880 --> 01:13:57,120
assume that it's not the case

1616
01:13:54,800 --> 01:13:58,880
so um you know that's something we can

1617
01:13:57,120 --> 01:14:00,480
figure out from a larger scale

1618
01:13:58,880 --> 01:14:04,000
experimentation

1619
01:14:00,480 --> 01:14:04,559
um and the and to also like hit on last

1620
01:14:04,000 --> 01:14:06,960
point

1621
01:14:04,560 --> 01:14:08,640
i think part of the experiment is also

1622
01:14:06,960 --> 01:14:10,560
um to give

1623
01:14:08,640 --> 01:14:13,040
these new kind of congestion control

1624
01:14:10,560 --> 01:14:15,679
rooms to evolve

1625
01:14:13,040 --> 01:14:17,360
and therefore we need some deployment of

1626
01:14:15,679 --> 01:14:21,280
the queuing scheme in the network

1627
01:14:17,360 --> 01:14:21,280
um so i think we're ready for that part

1628
01:14:25,520 --> 01:14:29,840
respond directly to that before we go to

1629
01:14:27,440 --> 01:14:29,839
cone

1630
01:14:31,360 --> 01:14:35,599
so did i understand this correctly that

1631
01:14:34,239 --> 01:14:37,280
the experiment is we're going to

1632
01:14:35,600 --> 01:14:39,040
throw this in the network and and see

1633
01:14:37,280 --> 01:14:41,679
what happens because that's kind of what

1634
01:14:39,040 --> 01:14:44,960
it sounded like

1635
01:14:41,679 --> 01:14:46,320
maybe cohn can speak to that yeah maybe

1636
01:14:44,960 --> 01:14:49,040
the thing i want to say is the

1637
01:14:46,320 --> 01:14:49,519
the experiment is is mainly for people

1638
01:14:49,040 --> 01:14:51,040
to

1639
01:14:49,520 --> 01:14:54,000
to start working on the congestion

1640
01:14:51,040 --> 01:14:54,719
controls uh to get the real experience

1641
01:14:54,000 --> 01:14:57,120
of of

1642
01:14:54,719 --> 01:14:58,400
what is going on and to get engagement

1643
01:14:57,120 --> 01:15:00,719
because a lot of

1644
01:14:58,400 --> 01:15:02,719
uh application developers i guess are

1645
01:15:00,719 --> 01:15:04,560
interested in using this and want to see

1646
01:15:02,719 --> 01:15:07,360
deployment

1647
01:15:04,560 --> 01:15:09,040
and also get convinced that deployment

1648
01:15:07,360 --> 01:15:09,440
will happen before they really engage

1649
01:15:09,040 --> 01:15:11,840
and

1650
01:15:09,440 --> 01:15:13,360
and solve all the problems and what the

1651
01:15:11,840 --> 01:15:15,280
problems we see today

1652
01:15:13,360 --> 01:15:16,880
are mainly well the main problem is of

1653
01:15:15,280 --> 01:15:20,400
course classic ecn

1654
01:15:16,880 --> 01:15:22,719
fallback and the longer we wait the more

1655
01:15:20,400 --> 01:15:24,480
classic ecn will be an alternative

1656
01:15:22,719 --> 01:15:26,239
because nobody starts to believe in

1657
01:15:24,480 --> 01:15:27,040
whether alphas will actually really

1658
01:15:26,239 --> 01:15:30,559
happen

1659
01:15:27,040 --> 01:15:32,320
that's that's the main danger and

1660
01:15:30,560 --> 01:15:34,800
i i don't think a lot of people are

1661
01:15:32,320 --> 01:15:35,360
convinced that the problems in in the

1662
01:15:34,800 --> 01:15:37,760
current

1663
01:15:35,360 --> 01:15:39,199
implementation cannot be solved it's a

1664
01:15:37,760 --> 01:15:42,159
huge opportunity to

1665
01:15:39,199 --> 01:15:42,719
to to experiment and to again gain

1666
01:15:42,159 --> 01:15:44,960
better

1667
01:15:42,719 --> 01:15:46,719
experience in the beginning we thought

1668
01:15:44,960 --> 01:15:49,600
okay data center tcp would

1669
01:15:46,719 --> 01:15:50,560
would be the reference and we didn't

1670
01:15:49,600 --> 01:15:53,280
need to work

1671
01:15:50,560 --> 01:15:54,239
on on the congestion control but in the

1672
01:15:53,280 --> 01:15:56,159
meantime

1673
01:15:54,239 --> 01:15:57,919
this this prague has become a kind of

1674
01:15:56,159 --> 01:16:01,759
reference implementation

1675
01:15:57,920 --> 01:16:05,360
uh status and and now even

1676
01:16:01,760 --> 01:16:09,120
asked to be to prove everything that uh

1677
01:16:05,360 --> 01:16:10,080
that it can gain i i think it's a wrong

1678
01:16:09,120 --> 01:16:11,760
expectation

1679
01:16:10,080 --> 01:16:13,360
especially from the people working on

1680
01:16:11,760 --> 01:16:15,760
that um

1681
01:16:13,360 --> 01:16:16,960
uh if if people are really concerned

1682
01:16:15,760 --> 01:16:20,080
that there is no

1683
01:16:16,960 --> 01:16:22,640
improvement possible then then okay

1684
01:16:20,080 --> 01:16:25,040
we we should stop here or wait until

1685
01:16:22,640 --> 01:16:28,000
this is really the case but i don't have

1686
01:16:25,040 --> 01:16:29,280
the the impression that people are are

1687
01:16:28,000 --> 01:16:30,960
thinking in that way

1688
01:16:29,280 --> 01:16:32,559
people are waiting for deployment and

1689
01:16:30,960 --> 01:16:36,159
really to to

1690
01:16:32,560 --> 01:16:37,760
to get things running and see this also

1691
01:16:36,159 --> 01:16:39,519
what's important is we get a lot of

1692
01:16:37,760 --> 01:16:40,800
traction in implementations if you're

1693
01:16:39,520 --> 01:16:43,840
going to wait

1694
01:16:40,800 --> 01:16:47,199
i i think the the confidence in

1695
01:16:43,840 --> 01:16:49,920
in this whole experiment and this whole

1696
01:16:47,199 --> 01:16:50,719
topic will will slowly disappear which

1697
01:16:49,920 --> 01:16:54,080
is a bigger

1698
01:16:50,719 --> 01:16:57,360
danger to get progress than than

1699
01:16:54,080 --> 01:17:00,960
whatever concerns there are now

1700
01:16:57,360 --> 01:17:01,679
which are i agree minor and or mainly

1701
01:17:00,960 --> 01:17:04,640
performance

1702
01:17:01,679 --> 01:17:06,320
improvement or performance issues with

1703
01:17:04,640 --> 01:17:09,440
uh

1704
01:17:06,320 --> 01:17:12,880
the the congestion control itself uh

1705
01:17:09,440 --> 01:17:15,360
so i'm i'm saying we should not wait

1706
01:17:12,880 --> 01:17:16,880
definitely not and the experiment is

1707
01:17:15,360 --> 01:17:18,719
still an experiment we should

1708
01:17:16,880 --> 01:17:20,000
we should engage and and more people

1709
01:17:18,719 --> 01:17:22,560
will will automatically

1710
01:17:20,000 --> 01:17:22,560
work on it

1711
01:17:24,880 --> 01:17:31,840
okay and then uh janna

1712
01:17:32,159 --> 01:17:36,559
um to to last this question of uh what

1713
01:17:35,280 --> 01:17:39,360
is the experiment i think

1714
01:17:36,560 --> 01:17:41,280
i think he is right in that we should

1715
01:17:39,360 --> 01:17:42,639
articulate precisely what the experiment

1716
01:17:41,280 --> 01:17:44,800
here is and i think

1717
01:17:42,640 --> 01:17:46,719
 answer uh some of the questions

1718
01:17:44,800 --> 01:17:48,880
i'll emphasize just two points in there

1719
01:17:46,719 --> 01:17:52,719
one of them is that

1720
01:17:48,880 --> 01:17:55,199
our history history has shown that

1721
01:17:52,719 --> 01:17:56,960
uh just getting this deployed itself can

1722
01:17:55,199 --> 01:17:57,519
be a simple experiment what i mean by

1723
01:17:56,960 --> 01:17:59,600
that is

1724
01:17:57,520 --> 01:18:00,640
even though it does yes you write large

1725
01:17:59,600 --> 01:18:01,760
that you know are we just

1726
01:18:00,640 --> 01:18:04,320
going to throw this out there and see

1727
01:18:01,760 --> 01:18:06,640
what happens uh getting this

1728
01:18:04,320 --> 01:18:08,000
getting getting something like for us

1729
01:18:06,640 --> 01:18:11,280
the the

1730
01:18:08,000 --> 01:18:13,520
the ecn marking itself deployed is a

1731
01:18:11,280 --> 01:18:14,400
pretty big experiment if you succeed in

1732
01:18:13,520 --> 01:18:18,159
that

1733
01:18:14,400 --> 01:18:21,199
then i i'd be very happy um but yes uh

1734
01:18:18,159 --> 01:18:22,239
the encouraging endpoints to

1735
01:18:21,199 --> 01:18:24,719
experiment with different congestion

1736
01:18:22,239 --> 01:18:26,480
controllers is also an additional

1737
01:18:24,719 --> 01:18:28,800
piece there but for them to do that we

1738
01:18:26,480 --> 01:18:32,159
need the bit out there in the network

1739
01:18:28,800 --> 01:18:33,360
so i would say that we we launched the

1740
01:18:32,159 --> 01:18:34,960
experiment to see if we can actually

1741
01:18:33,360 --> 01:18:36,239
deploy this into the network and once we

1742
01:18:34,960 --> 01:18:37,120
do that we know that we can build

1743
01:18:36,239 --> 01:18:38,400
controllers

1744
01:18:37,120 --> 01:18:40,000
and we already have some example

1745
01:18:38,400 --> 01:18:40,400
controllers that even though they are

1746
01:18:40,000 --> 01:18:42,719
not

1747
01:18:40,400 --> 01:18:45,440
perfect they'll do something with it

1748
01:18:42,719 --> 01:18:47,679
something pretty good with it

1749
01:18:45,440 --> 01:18:48,480
i would also ask a a slightly different

1750
01:18:47,679 --> 01:18:52,560
question

1751
01:18:48,480 --> 01:18:56,159
which is do we think that by keeping it

1752
01:18:52,560 --> 01:18:59,199
in committee so to speak or keeping it

1753
01:18:56,159 --> 01:19:02,799
as a draft in the working group we

1754
01:18:59,199 --> 01:19:04,480
gain anything if we don't gain anything

1755
01:19:02,800 --> 01:19:06,080
by making it an experiment out there

1756
01:19:04,480 --> 01:19:09,839
my question would be what do we gain by

1757
01:19:06,080 --> 01:19:09,840
keeping it in the working group

1758
01:19:11,760 --> 01:19:15,920
i noticed that we lost sebastian from

1759
01:19:13,920 --> 01:19:17,520
the queue if you want to

1760
01:19:15,920 --> 01:19:20,080
jump back in i think you were in the

1761
01:19:17,520 --> 01:19:23,600
front uh at this point

1762
01:19:20,080 --> 01:19:26,000
thanks so um the concern i have at the

1763
01:19:23,600 --> 01:19:27,840
moment is that the operational safety

1764
01:19:26,000 --> 01:19:30,000
of all of the lfrs design and

1765
01:19:27,840 --> 01:19:32,800
implementation over the wider internet

1766
01:19:30,000 --> 01:19:34,640
has not been proven sufficiently at the

1767
01:19:32,800 --> 01:19:35,520
current time speaking about deploying

1768
01:19:34,640 --> 01:19:38,560
what we have

1769
01:19:35,520 --> 01:19:41,120
seems rather premature without

1770
01:19:38,560 --> 01:19:43,520
data showing that it really is safe over

1771
01:19:41,120 --> 01:19:46,559
the long haul and not just over the

1772
01:19:43,520 --> 01:19:50,080
short rtt low hop count

1773
01:19:46,560 --> 01:19:53,199
links between end user and cdns

1774
01:19:50,080 --> 01:19:56,320
seems rather uncautious

1775
01:19:53,199 --> 01:19:58,159
i think l4s simply isn't there

1776
01:19:56,320 --> 01:19:59,440
that we should talk about the lost last

1777
01:19:58,159 --> 01:20:02,239
call now

1778
01:19:59,440 --> 01:20:03,839
the data is missing i'm it's sad that

1779
01:20:02,239 --> 01:20:04,400
after seven years the data is still on

1780
01:20:03,840 --> 01:20:06,480
there but

1781
01:20:04,400 --> 01:20:08,320
that's how it is i'm pretty sure that

1782
01:20:06,480 --> 01:20:10,879
this data can be produced relatively

1783
01:20:08,320 --> 01:20:12,639
quickly and presented and if it's safe

1784
01:20:10,880 --> 01:20:14,560
no matter whether i like it or not then

1785
01:20:12,639 --> 01:20:15,360
make it an experiment but if it's not

1786
01:20:14,560 --> 01:20:18,320
safe

1787
01:20:15,360 --> 01:20:19,040
let's just drop them but let's make this

1788
01:20:18,320 --> 01:20:21,280
based on

1789
01:20:19,040 --> 01:20:22,800
data and not just how we feel about this

1790
01:20:21,280 --> 01:20:24,719
i have a feeling in this discussion that

1791
01:20:22,800 --> 01:20:27,199
many people have not actually looked

1792
01:20:24,719 --> 01:20:28,080
in the detailed measurements that were

1793
01:20:27,199 --> 01:20:30,080
presented

1794
01:20:28,080 --> 01:20:31,679
and hence we are discussing very much in

1795
01:20:30,080 --> 01:20:33,840
the abstract why we should be actually

1796
01:20:31,679 --> 01:20:37,440
talking about real data and numbers

1797
01:20:33,840 --> 01:20:40,639
thanks i see

1798
01:20:37,440 --> 01:20:42,239
cone jumped back in uh maybe you want to

1799
01:20:40,639 --> 01:20:43,199
address that comment before we go to

1800
01:20:42,239 --> 01:20:47,280
greg

1801
01:20:43,199 --> 01:20:50,638
yes maybe the the the main problem that

1802
01:20:47,280 --> 01:20:51,280
is open now like if i see it sebastian

1803
01:20:50,639 --> 01:20:54,880
is the

1804
01:20:51,280 --> 01:20:58,480
the the big round trip time uh

1805
01:20:54,880 --> 01:21:01,040
alpha s competing with alfres itself um

1806
01:20:58,480 --> 01:21:01,759
this this is not it's a concern of

1807
01:21:01,040 --> 01:21:04,800
course

1808
01:21:01,760 --> 01:21:08,480
and it's a performance concerns for

1809
01:21:04,800 --> 01:21:12,159
alfres users themselves um

1810
01:21:08,480 --> 01:21:14,080
it's a range where the the

1811
01:21:12,159 --> 01:21:15,440
congestion control that we have now is

1812
01:21:14,080 --> 01:21:18,960
not optimal yet

1813
01:21:15,440 --> 01:21:21,519
for the users themselves a very simple

1814
01:21:18,960 --> 01:21:23,199
fallback is just okay if your run trip

1815
01:21:21,520 --> 01:21:25,440
time is bigger than a certain amount

1816
01:21:23,199 --> 01:21:26,480
we fall back to cubic and and the

1817
01:21:25,440 --> 01:21:29,839
problem

1818
01:21:26,480 --> 01:21:33,919
in itself for our reference uh

1819
01:21:29,840 --> 01:21:36,480
uh um congestion control is solved

1820
01:21:33,920 --> 01:21:37,120
and it could be used as a as a as a

1821
01:21:36,480 --> 01:21:39,040
reference

1822
01:21:37,120 --> 01:21:40,159
for for experiments and of course it's

1823
01:21:39,040 --> 01:21:42,480
better to

1824
01:21:40,159 --> 01:21:44,239
to work on improving for longer round

1825
01:21:42,480 --> 01:21:45,120
trip times also the performance for

1826
01:21:44,239 --> 01:21:46,879
alphas

1827
01:21:45,120 --> 01:21:48,480
but on the other hand what's the value

1828
01:21:46,880 --> 01:21:51,360
of that because if you have a

1829
01:21:48,480 --> 01:21:52,480
run trip time of 160 already you you're

1830
01:21:51,360 --> 01:21:56,159
better off

1831
01:21:52,480 --> 01:21:56,959
uh or that extra one millisecond or 15

1832
01:21:56,159 --> 01:21:58,879
milliseconds

1833
01:21:56,960 --> 01:22:00,560
is not going to make a big difference so

1834
01:21:58,880 --> 01:22:00,880
we should also see what is the relevance

1835
01:22:00,560 --> 01:22:04,239
of

1836
01:22:00,880 --> 01:22:05,040
the problems that we see today uh in in

1837
01:22:04,239 --> 01:22:07,360
practice they

1838
01:22:05,040 --> 01:22:08,880
i i think they are zero um it's just a

1839
01:22:07,360 --> 01:22:09,679
matter if there is interest for people

1840
01:22:08,880 --> 01:22:11,679
with a very

1841
01:22:09,679 --> 01:22:13,199
long round trip time to have a buffer of

1842
01:22:11,679 --> 01:22:13,920
one millisecond instead of 15

1843
01:22:13,199 --> 01:22:16,480
milliseconds

1844
01:22:13,920 --> 01:22:18,320
it will be worked on otherwise the the

1845
01:22:16,480 --> 01:22:19,759
congestion controls will automatically

1846
01:22:18,320 --> 01:22:23,360
fall back

1847
01:22:19,760 --> 01:22:25,199
but all these things that's experience

1848
01:22:23,360 --> 01:22:25,519
that we need people working on it and

1849
01:22:25,199 --> 01:22:27,120
and

1850
01:22:25,520 --> 01:22:29,120
the right people with the right

1851
01:22:27,120 --> 01:22:29,840
incentives working on that and improving

1852
01:22:29,120 --> 01:22:33,199
it

1853
01:22:29,840 --> 01:22:35,199
uh if if you're if everybody looks at us

1854
01:22:33,199 --> 01:22:36,839
and and and expects that we are going to

1855
01:22:35,199 --> 01:22:41,120
make this this uh

1856
01:22:36,840 --> 01:22:43,280
uh ultimate super uh

1857
01:22:41,120 --> 01:22:44,639
perfect congestion control then then

1858
01:22:43,280 --> 01:22:48,000
that is the wrong

1859
01:22:44,639 --> 01:22:50,840
way of progressing we will probably

1860
01:22:48,000 --> 01:22:52,400
uh starve at the end from from

1861
01:22:50,840 --> 01:22:55,679
exhausting uh

1862
01:22:52,400 --> 01:22:58,400
i mean let's engage let's other people

1863
01:22:55,679 --> 01:23:00,000
get the opportunity to work on uh i see

1864
01:22:58,400 --> 01:23:02,400
only one main problem

1865
01:23:00,000 --> 01:23:04,320
which is not that big it's the the

1866
01:23:02,400 --> 01:23:06,400
classic ecn detection

1867
01:23:04,320 --> 01:23:08,559
so and the longer we wait the more

1868
01:23:06,400 --> 01:23:11,839
classic ecn will be the alternative

1869
01:23:08,560 --> 01:23:14,080
so i don't see any gain in waiting let's

1870
01:23:11,840 --> 01:23:15,280
go forward the question is is the

1871
01:23:14,080 --> 01:23:17,280
network part okay

1872
01:23:15,280 --> 01:23:18,880
then we should go ahead if the

1873
01:23:17,280 --> 01:23:22,000
congestion control is

1874
01:23:18,880 --> 01:23:23,760
okay i think now it's not perfect uh but

1875
01:23:22,000 --> 01:23:27,040
it can be improved so

1876
01:23:23,760 --> 01:23:29,280
what's why stopping i would say go ahead

1877
01:23:27,040 --> 01:23:31,280
make sure we can as fast as possible go

1878
01:23:29,280 --> 01:23:35,360
to work group lost call

1879
01:23:31,280 --> 01:23:38,960
and and the rest will follow

1880
01:23:35,360 --> 01:23:40,880
okay thanks i have uh greg then gory

1881
01:23:38,960 --> 01:23:44,400
lars and sebastian and we have to be

1882
01:23:40,880 --> 01:23:44,400
quick there's only a couple minutes left

1883
01:23:45,840 --> 01:23:49,920
yeah i just want to point out that the

1884
01:23:48,239 --> 01:23:54,879
original definition of ecn

1885
01:23:49,920 --> 01:23:56,880
is uh is 20 years old and so far

1886
01:23:54,880 --> 01:23:58,639
sounds like the deployment of that in

1887
01:23:56,880 --> 01:24:00,719
networks is

1888
01:23:58,639 --> 01:24:01,410
zero percent to some number of decimal

1889
01:24:00,719 --> 01:24:02,560
points

1890
01:24:01,410 --> 01:24:05,599
[Music]

1891
01:24:02,560 --> 01:24:07,280
whereas here we have

1892
01:24:05,600 --> 01:24:09,760
networks that are very interested in

1893
01:24:07,280 --> 01:24:13,920
deploying l4s

1894
01:24:09,760 --> 01:24:16,080
ecn signaling

1895
01:24:13,920 --> 01:24:17,600
and it would be a shame if the ietf

1896
01:24:16,080 --> 01:24:19,600
didn't take that opportunity to

1897
01:24:17,600 --> 01:24:21,600
to move this forward into an experiment

1898
01:24:19,600 --> 01:24:25,120
and and get all the benefits that uh

1899
01:24:21,600 --> 01:24:25,120
we're expecting to see from all for us

1900
01:24:27,920 --> 01:24:33,840
okay corey

1901
01:24:31,040 --> 01:24:33,840
am i at the end

1902
01:24:34,159 --> 01:24:40,559
i i'll i'll wait to the end

1903
01:24:37,199 --> 01:24:40,559
okay uh lars

1904
01:24:41,679 --> 01:24:45,040
i didn't want to sound oh my audio is

1905
01:24:43,360 --> 01:24:46,719
really garbled um

1906
01:24:45,040 --> 01:24:48,560
i didn't want to sound like i was going

1907
01:24:46,719 --> 01:24:50,800
to require like the perfect congestion

1908
01:24:48,560 --> 01:24:54,159
controller for for this experiment right

1909
01:24:50,800 --> 01:24:56,840
but but um you know asking for a fabric

1910
01:24:54,159 --> 01:24:59,920
upgrade is a pretty tall ask

1911
01:24:56,840 --> 01:25:01,920
and not being able to motivate it

1912
01:24:59,920 --> 01:25:03,120
to application developers that you also

1913
01:25:01,920 --> 01:25:05,040
talked about kind of

1914
01:25:03,120 --> 01:25:06,239
that you know no application can use

1915
01:25:05,040 --> 01:25:07,920
this without there being a

1916
01:25:06,239 --> 01:25:10,559
congestion controller that delivers some

1917
01:25:07,920 --> 01:25:11,600
sort of benefits to that application

1918
01:25:10,560 --> 01:25:14,320
right so you can throw this in the

1919
01:25:11,600 --> 01:25:16,560
network but if you can't be exploited by

1920
01:25:14,320 --> 01:25:18,880
the app

1921
01:25:16,560 --> 01:25:20,880
it's it's not going to be a very great

1922
01:25:18,880 --> 01:25:22,880
deployment story right so

1923
01:25:20,880 --> 01:25:24,239
um we can argue whether what we

1924
01:25:22,880 --> 01:25:26,159
currently have as a congestion

1925
01:25:24,239 --> 01:25:28,239
controller is good enough

1926
01:25:26,159 --> 01:25:29,599
but i think this is an integral part of

1927
01:25:28,239 --> 01:25:31,839
of this experiment if you

1928
01:25:29,600 --> 01:25:33,840
think back right we've done a few

1929
01:25:31,840 --> 01:25:36,480
classes of this before so

1930
01:25:33,840 --> 01:25:37,360
either we've done queueing improvements

1931
01:25:36,480 --> 01:25:40,000
that

1932
01:25:37,360 --> 01:25:40,799
intended to improve existing tcp traffic

1933
01:25:40,000 --> 01:25:42,639
without tcp

1934
01:25:40,800 --> 01:25:45,040
changes right we know how to do that

1935
01:25:42,639 --> 01:25:46,560
we've also done tcp changes to try to

1936
01:25:45,040 --> 01:25:48,159
you know work better with whatever cues

1937
01:25:46,560 --> 01:25:49,760
they found in the network and we know

1938
01:25:48,159 --> 01:25:51,599
how to do that and then we've done

1939
01:25:49,760 --> 01:25:53,520
ecn right we changed both changed the

1940
01:25:51,600 --> 01:25:55,040
network and changed gcp and it was a

1941
01:25:53,520 --> 01:25:56,480
pretty integrated design

1942
01:25:55,040 --> 01:25:58,480
right it was pretty minimal but it was

1943
01:25:56,480 --> 01:26:00,879
it was integrated and in my mind this

1944
01:25:58,480 --> 01:26:02,718
this needs to be a similarly integrated

1945
01:26:00,880 --> 01:26:04,320
activity it's not enough to just to

1946
01:26:02,719 --> 01:26:06,960
upgrade one part

1947
01:26:04,320 --> 01:26:08,320
without at least some heavy thinking

1948
01:26:06,960 --> 01:26:11,280
about how

1949
01:26:08,320 --> 01:26:12,320
you know that that q change is gonna

1950
01:26:11,280 --> 01:26:15,360
manifest itself

1951
01:26:12,320 --> 01:26:19,199
in application level improvements

1952
01:26:15,360 --> 01:26:19,199
otherwise what's the incentive

1953
01:26:21,600 --> 01:26:27,840
okay so so i i agree it's it's

1954
01:26:25,040 --> 01:26:28,880
it's very important to have both and

1955
01:26:27,840 --> 01:26:30,159
looking at the past

1956
01:26:28,880 --> 01:26:33,280
in the past we had the congestion

1957
01:26:30,159 --> 01:26:34,400
control for acn which was very simple

1958
01:26:33,280 --> 01:26:37,759
just do the same

1959
01:26:34,400 --> 01:26:40,960
as before instead of drop

1960
01:26:37,760 --> 01:26:42,400
and afterwards we didn't see any or

1961
01:26:40,960 --> 01:26:44,800
hardly any deployment

1962
01:26:42,400 --> 01:26:46,239
in the network now is the opposite we

1963
01:26:44,800 --> 01:26:50,080
have a network

1964
01:26:46,239 --> 01:26:53,519
with a lot of interest with a lot of uh

1965
01:26:50,080 --> 01:26:54,880
plans to deploy uh with standards

1966
01:26:53,520 --> 01:26:58,080
already defined

1967
01:26:54,880 --> 01:26:58,960
uh people working on products and now

1968
01:26:58,080 --> 01:27:02,559
we're saying

1969
01:26:58,960 --> 01:27:04,480
uh let's let's uh

1970
01:27:02,560 --> 01:27:07,199
wait until the end host which are

1971
01:27:04,480 --> 01:27:10,559
usually the easiest one to change things

1972
01:27:07,199 --> 01:27:13,360
uh are are at par i i think we are

1973
01:27:10,560 --> 01:27:14,480
blocking this at the moment we we have

1974
01:27:13,360 --> 01:27:18,239
uh

1975
01:27:14,480 --> 01:27:20,320
good uh engagement in networks

1976
01:27:18,239 --> 01:27:21,280
and and plans to deploy let's let's

1977
01:27:20,320 --> 01:27:25,280
release this

1978
01:27:21,280 --> 01:27:27,759
um i don't see any and unless

1979
01:27:25,280 --> 01:27:30,080
i would like to ask other people uh as

1980
01:27:27,760 --> 01:27:32,239
well i i don't see anything

1981
01:27:30,080 --> 01:27:33,199
that cannot be solved in the host at the

1982
01:27:32,239 --> 01:27:34,718
moment

1983
01:27:33,199 --> 01:27:36,559
um we're gonna need to we're gonna need

1984
01:27:34,719 --> 01:27:37,360
to wrap wrap this up the next minute or

1985
01:27:36,560 --> 01:27:40,400
two because the

1986
01:27:37,360 --> 01:27:42,960
plenary is about to start

1987
01:27:40,400 --> 01:27:43,519
so so but anyway the short thing is we

1988
01:27:42,960 --> 01:27:44,880
have

1989
01:27:43,520 --> 01:27:46,719
something which is good which can be

1990
01:27:44,880 --> 01:27:49,760
used at the moment already

1991
01:27:46,719 --> 01:27:53,520
um within a specific range

1992
01:27:49,760 --> 01:27:56,320
with some corner cases not but

1993
01:27:53,520 --> 01:27:56,960
if if that's the pro or the the the

1994
01:27:56,320 --> 01:27:58,880
question

1995
01:27:56,960 --> 01:28:00,639
we have that already we can do the the

1996
01:27:58,880 --> 01:28:02,960
experiment applications can

1997
01:28:00,639 --> 01:28:03,679
use it already within certain

1998
01:28:02,960 --> 01:28:06,480
constraints

1999
01:28:03,679 --> 01:28:08,000
defined in the operational guidelines

2000
01:28:06,480 --> 01:28:10,320
okay i think the chairs

2001
01:28:08,000 --> 01:28:11,360
need to take what's been said here under

2002
01:28:10,320 --> 01:28:14,480
advisement we'll

2003
01:28:11,360 --> 01:28:17,040
uh and we will consult with the ad about

2004
01:28:14,480 --> 01:28:17,599
a.d about the path forward here corey

2005
01:28:17,040 --> 01:28:29,840
did you want

2006
01:28:17,600 --> 01:28:29,840
anything to add

2007
01:28:40,840 --> 01:28:43,840
uh

2008
01:28:44,080 --> 01:28:47,360
all right any last words from anybody

2009
01:28:46,320 --> 01:28:51,599
else

2010
01:28:47,360 --> 01:28:51,599
i think bob uh may want to wrap up his

2011
01:28:51,840 --> 01:28:55,199
well um i don't necessarily want to wrap

2012
01:28:54,400 --> 01:28:58,159
up the talk but

2013
01:28:55,199 --> 01:28:58,960
i i just want to sort of state a fact

2014
01:28:58,159 --> 01:29:02,080
that

2015
01:28:58,960 --> 01:29:04,639
um i believe that

2016
01:29:02,080 --> 01:29:06,000
the people who are doing these network

2017
01:29:04,639 --> 01:29:09,280
implementations

2018
01:29:06,000 --> 01:29:10,480
would not deploy it unless there was an

2019
01:29:09,280 --> 01:29:12,159
rfc out there and

2020
01:29:10,480 --> 01:29:14,080
you know the process of going from

2021
01:29:12,159 --> 01:29:15,519
working group call to that

2022
01:29:14,080 --> 01:29:17,519
it's still going to be a you know a few

2023
01:29:15,520 --> 01:29:19,199
months away because that's how how long

2024
01:29:17,520 --> 01:29:21,360
the ietf takes

2025
01:29:19,199 --> 01:29:22,559
and these guys are ready but they're not

2026
01:29:21,360 --> 01:29:23,040
they're not going to deploy if there's

2027
01:29:22,560 --> 01:29:24,480
not a

2028
01:29:23,040 --> 01:29:26,960
you're not you're not going to you know

2029
01:29:24,480 --> 01:29:32,559
start dealing with a

2030
01:29:26,960 --> 01:29:32,560
change to ip without the itf approving

2031
01:29:36,840 --> 01:29:39,840
it

2032
01:29:45,120 --> 01:29:53,840
i think we're basically at time gord did

2033
01:29:47,199 --> 01:29:53,839
did you want to have a last word

2034
01:29:56,480 --> 01:29:59,759
i think it would be worthwhile um taking

2035
01:29:59,520 --> 01:30:01,440
a

2036
01:29:59,760 --> 01:30:02,800
sense of those people left in the room

2037
01:30:01,440 --> 01:30:04,879
we know people have already left the

2038
01:30:02,800 --> 01:30:05,520
meeting so this can only be imprecise

2039
01:30:04,880 --> 01:30:08,639
but

2040
01:30:05,520 --> 01:30:11,600
um if you think that it would be

2041
01:30:08,639 --> 01:30:12,159
a good idea to have a working group last

2042
01:30:11,600 --> 01:30:15,679
call

2043
01:30:12,159 --> 01:30:15,679
in the next period

2044
01:30:16,480 --> 01:30:20,000
can we get some indication about who

2045
01:30:18,719 --> 01:30:23,360
would be against

2046
01:30:20,000 --> 01:30:23,360
that and who would be for it

2047
01:30:25,600 --> 01:30:28,560
i think we've lost something

2048
01:30:29,280 --> 01:30:35,840
a bit more clearly yeah yeah

2049
01:30:37,760 --> 01:30:42,239
how many people would commit to review

2050
01:30:40,639 --> 01:30:44,800
this document

2051
01:30:42,239 --> 01:30:45,759
and contribute to a working group last

2052
01:30:44,800 --> 01:30:48,080
call

2053
01:30:45,760 --> 01:30:50,639
if we were to start one before the next

2054
01:30:48,080 --> 01:30:50,639
idea

2055
01:30:51,679 --> 01:31:03,840
how many people would review

2056
01:31:16,719 --> 01:31:19,760
okay so we're collecting that by the

2057
01:31:18,800 --> 01:31:22,239
tool and

2058
01:31:19,760 --> 01:31:24,400
it will again help the chairs to

2059
01:31:22,239 --> 01:31:26,400
gradually make forward progress we will

2060
01:31:24,400 --> 01:31:30,080
be talking to our ad we'll be talking to

2061
01:31:26,400 --> 01:31:33,440
the document editors

2062
01:31:30,080 --> 01:31:36,559
and when does this

2063
01:31:33,440 --> 01:31:38,320
pull clue conclude when you when when

2064
01:31:36,560 --> 01:31:41,520
you click on in session

2065
01:31:38,320 --> 01:31:43,360
there we go at that point here and 18

2066
01:31:41,520 --> 01:31:46,560
people said that they would

2067
01:31:43,360 --> 01:31:47,920
review this if it was uh presented for a

2068
01:31:46,560 --> 01:31:49,920
working group last call

2069
01:31:47,920 --> 01:31:51,520
that's a good number so that that makes

2070
01:31:49,920 --> 01:31:53,760
me happy that we will have reviewers

2071
01:31:51,520 --> 01:31:56,159
when we come to that decision

2072
01:31:53,760 --> 01:31:57,199
right we we meet echo says we can have a

2073
01:31:56,159 --> 01:32:01,839
little more

2074
01:31:57,199 --> 01:32:05,839
time if it's necessary is there anything

2075
01:32:01,840 --> 01:32:08,239
necessary now i think we need to declare

2076
01:32:05,840 --> 01:32:08,239
victory

2077
01:32:11,520 --> 01:32:15,840
i'm happy with that uh bob's got

2078
01:32:14,159 --> 01:32:18,400
additional slides that will be in the

2079
01:32:15,840 --> 01:32:21,520
proceedings

2080
01:32:18,400 --> 01:32:23,199
yeah i mean they're basically saying

2081
01:32:21,520 --> 01:32:24,159
what's in the draft i can also post on

2082
01:32:23,199 --> 01:32:27,759
the mailing list

2083
01:32:24,159 --> 01:32:30,879
um which well i've already done that um

2084
01:32:27,760 --> 01:32:33,199
for the last set of deltas but i can

2085
01:32:30,880 --> 01:32:36,639
say what the main changes are um that

2086
01:32:33,199 --> 01:32:36,638
haven't been discussed on the main list

2087
01:32:38,840 --> 01:32:44,560
okay thank you

2088
01:32:42,159 --> 01:32:45,360
and i'm done from my side thank you ever

2089
01:32:44,560 --> 01:32:47,520
so much for

2090
01:32:45,360 --> 01:32:50,000
a very productive meeting the other

2091
01:32:47,520 --> 01:32:51,760
chairs can say something more finished

2092
01:32:50,000 --> 01:32:54,080
i think we're done i'm going to tell

2093
01:32:51,760 --> 01:32:56,800
miracle i think we're done

2094
01:32:54,080 --> 01:32:56,800
going once

2095
01:33:01,280 --> 01:33:09,840
okay i think we're done thank you very

2096
01:33:03,120 --> 01:33:09,840
much everybody

2097
01:33:20,840 --> 01:33:23,840
so

2098
01:33:34,840 --> 01:33:39,440
oh

2099
01:33:37,360 --> 01:33:39,440
you

