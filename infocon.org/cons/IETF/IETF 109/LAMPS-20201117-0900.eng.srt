1
00:05:33,840 --> 00:05:43,520
hey i'm just testing can anyone hear me

2
00:05:38,880 --> 00:05:43,520
yes yes we can hear you

3
00:05:45,759 --> 00:05:49,280
so for those of you following on long in

4
00:05:47,919 --> 00:05:51,758
chat and uh

5
00:05:49,280 --> 00:05:54,400
the announcement i made five minutes ago

6
00:05:51,759 --> 00:05:56,319
russ is apparently having audio issues

7
00:05:54,400 --> 00:05:58,239
he was going to try to leave and rejoin

8
00:05:56,319 --> 00:06:00,400
to see if that would fix it

9
00:05:58,240 --> 00:06:03,600
and i saw him back on here briefly but i

10
00:06:00,400 --> 00:06:03,599
haven't seen him yet so

11
00:06:04,639 --> 00:06:07,919
that's where we are we'll give him a

12
00:06:07,440 --> 00:06:10,080
little bit

13
00:06:07,919 --> 00:06:11,680
and if he doesn't show up relatively

14
00:06:10,080 --> 00:06:14,960
soon we will just

15
00:06:11,680 --> 00:06:14,960
start the meeting without him

16
00:06:18,080 --> 00:06:21,280
uh test one two three four could you

17
00:06:20,080 --> 00:06:24,400
hear me now

18
00:06:21,280 --> 00:06:27,198
yes we can hear you russ awesome okay

19
00:06:24,400 --> 00:06:29,679
i i rebooted don't ask me what happened

20
00:06:27,199 --> 00:06:29,680
in between

21
00:06:31,280 --> 00:06:35,840
all right let me get the slides up

22
00:07:12,000 --> 00:07:19,919
okay uh tim if you would watch the chat

23
00:07:16,639 --> 00:07:19,919
i can run the screen

24
00:07:20,240 --> 00:07:25,280
and i have all the slides just in case

25
00:07:24,080 --> 00:07:29,198
the presenter

26
00:07:25,280 --> 00:07:29,198
is not able to share their screen

27
00:07:29,440 --> 00:07:34,960
okay so uh we'll start with the

28
00:07:32,639 --> 00:07:36,400
chair slides this is the lamps working

29
00:07:34,960 --> 00:07:38,719
group

30
00:07:36,400 --> 00:07:38,719
um

31
00:07:39,840 --> 00:07:48,799
the uh

32
00:07:44,400 --> 00:07:51,919
no well remind you everyone that

33
00:07:48,800 --> 00:07:54,560
please don't contribute unless you've

34
00:07:51,919 --> 00:08:00,318
paid attention to this

35
00:07:54,560 --> 00:08:03,280
and this is the agenda for today

36
00:08:00,319 --> 00:08:05,360
it's been out there for a while with

37
00:08:03,280 --> 00:08:12,559
very few changes

38
00:08:05,360 --> 00:08:16,800
are there any agenda bashes

39
00:08:12,560 --> 00:08:19,599
okay hearing none um

40
00:08:16,800 --> 00:08:22,000
let's talk about the minute taking we

41
00:08:19,599 --> 00:08:25,599
had two volunteers thanks to jonathan

42
00:08:22,000 --> 00:08:28,240
and rich they both said they would take

43
00:08:25,599 --> 00:08:29,360
notes in code emd hopefully between the

44
00:08:28,240 --> 00:08:32,000
two of them

45
00:08:29,360 --> 00:08:33,839
everything will be captured of course

46
00:08:32,000 --> 00:08:36,240
you can take a look there yourself to

47
00:08:33,839 --> 00:08:41,599
make sure if you make a point that it

48
00:08:36,240 --> 00:08:44,640
gets captured correctly

49
00:08:41,599 --> 00:08:46,720
the blue sheets are captured

50
00:08:44,640 --> 00:08:48,720
automatically by joining the session

51
00:08:46,720 --> 00:08:50,000
so you don't have to do anything for

52
00:08:48,720 --> 00:08:51,760
that

53
00:08:50,000 --> 00:08:53,760
and we have two documents that are with

54
00:08:51,760 --> 00:08:54,480
the rfc editor as a matter of fact

55
00:08:53,760 --> 00:08:58,800
they're both

56
00:08:54,480 --> 00:09:02,160
now in auth 48 so we expect them to

57
00:08:58,800 --> 00:09:05,359
uh come out shortly

58
00:09:02,160 --> 00:09:06,000
i am unaware of any open issues with

59
00:09:05,360 --> 00:09:08,240
them

60
00:09:06,000 --> 00:09:09,200
given that they're at auth 48 there

61
00:09:08,240 --> 00:09:13,200
shouldn't be

62
00:09:09,200 --> 00:09:14,320
but if the authors of those two

63
00:09:13,200 --> 00:09:19,920
documents

64
00:09:14,320 --> 00:09:23,440
uh ocsp nonce and 730

65
00:09:19,920 --> 00:09:27,199
clarify are aware of any please

66
00:09:23,440 --> 00:09:27,200
come to the mic and tell us about them

67
00:09:33,920 --> 00:09:39,519
okay hearing none

68
00:09:37,120 --> 00:09:42,320
we'll move on to the active working

69
00:09:39,519 --> 00:09:45,040
group documents

70
00:09:42,320 --> 00:09:47,600
one presentation by hendrick is going to

71
00:09:45,040 --> 00:09:48,399
cover the updates the algorithms and the

72
00:09:47,600 --> 00:09:52,560
lightweight

73
00:09:48,399 --> 00:09:53,040
cmp profile hendrick are you planning to

74
00:09:52,560 --> 00:09:57,518
share

75
00:09:53,040 --> 00:10:00,719
your screen or do you want me to put

76
00:09:57,519 --> 00:10:00,720
them up for you

77
00:10:01,120 --> 00:10:07,440
great okay so let me stop

78
00:10:04,959 --> 00:10:07,439
sharing

79
00:10:09,440 --> 00:10:19,839
you should be able to

80
00:10:30,839 --> 00:10:33,839
so

81
00:10:35,360 --> 00:10:40,320
so here we are okay so if you could get

82
00:10:38,480 --> 00:10:41,120
rid of the thumbnails on the side to

83
00:10:40,320 --> 00:10:46,640
make it bigger

84
00:10:41,120 --> 00:10:50,000
that would help

85
00:10:46,640 --> 00:10:52,000
when you put it in presentation that is

86
00:10:50,000 --> 00:10:55,360
not the one that gets sent to me to go

87
00:10:52,000 --> 00:10:55,760
the edit version is the one that gets

88
00:10:55,360 --> 00:11:01,839
sent

89
00:10:55,760 --> 00:11:01,839
don't ask me why on that

90
00:11:06,640 --> 00:11:15,839
okay i will um i will mute and turn it

91
00:11:10,160 --> 00:11:15,839
over to you

92
00:11:24,560 --> 00:11:32,000
okay so now it should work sorry

93
00:11:29,200 --> 00:11:33,279
the confusion so yeah thanks for giving

94
00:11:32,000 --> 00:11:37,120
me the opportunity to

95
00:11:33,279 --> 00:11:40,399
give an update to the cmp related drafts

96
00:11:37,120 --> 00:11:44,720
so since last itf

97
00:11:40,399 --> 00:11:45,760
i submitted a draft on cmp algorithms as

98
00:11:44,720 --> 00:11:49,519
discussed in

99
00:11:45,760 --> 00:11:53,200
during last itf um this

100
00:11:49,519 --> 00:11:53,920
draft has probably the well-known

101
00:11:53,200 --> 00:11:57,040
structure

102
00:11:53,920 --> 00:11:58,880
like other documents lists

103
00:11:57,040 --> 00:12:00,079
message digest algorithm signature

104
00:11:58,880 --> 00:12:02,240
algorithm

105
00:12:00,079 --> 00:12:04,160
a section on different key management

106
00:12:02,240 --> 00:12:07,519
algorithms for the

107
00:12:04,160 --> 00:12:10,719
envelope data stuff in the

108
00:12:07,519 --> 00:12:12,800
document content encryption algorithm

109
00:12:10,720 --> 00:12:15,600
also used only in the context of

110
00:12:12,800 --> 00:12:17,680
envelope data and message authentication

111
00:12:15,600 --> 00:12:20,800
code algorithms

112
00:12:17,680 --> 00:12:21,359
so i will briefly show what the status

113
00:12:20,800 --> 00:12:24,479
is

114
00:12:21,360 --> 00:12:28,639
first of all i focused on

115
00:12:24,480 --> 00:12:31,279
section 2 5 and 6 from the document

116
00:12:28,639 --> 00:12:32,800
and had some some rounds there

117
00:12:31,279 --> 00:12:36,480
internally

118
00:12:32,800 --> 00:12:39,680
message digest algorithms i

119
00:12:36,480 --> 00:12:40,959
have only sharp two right now in in the

120
00:12:39,680 --> 00:12:44,479
document

121
00:12:40,959 --> 00:12:48,638
um but i would plan to also um add

122
00:12:44,480 --> 00:12:49,279
shake is there any other suggestion from

123
00:12:48,639 --> 00:12:52,320
the group

124
00:12:49,279 --> 00:12:56,000
on adding further algorithms

125
00:12:52,320 --> 00:12:56,560
so i saw that there is blake 2 out there

126
00:12:56,000 --> 00:12:59,279
but

127
00:12:56,560 --> 00:13:00,560
not in seem not to be in the focus of

128
00:12:59,279 --> 00:13:03,680
itf

129
00:13:00,560 --> 00:13:06,399
so any any feedback here

130
00:13:03,680 --> 00:13:09,040
on hash algorithm that should be should

131
00:13:06,399 --> 00:13:09,040
be covered

132
00:13:12,240 --> 00:13:15,220
the ones you've picked sound good to me

133
00:13:14,079 --> 00:13:18,319
anyone else

134
00:13:15,220 --> 00:13:18,320
[Music]

135
00:13:19,600 --> 00:13:26,079
okay if if not i'm fine

136
00:13:22,800 --> 00:13:29,199
with continuum on and uh we anyhow have

137
00:13:26,079 --> 00:13:30,160
time on the mailing list to to discuss

138
00:13:29,200 --> 00:13:33,680
if there are

139
00:13:30,160 --> 00:13:35,839
others for content i can't see the chat

140
00:13:33,680 --> 00:13:39,359
i guess but others are saying that

141
00:13:35,839 --> 00:13:41,760
looks good yeah

142
00:13:39,360 --> 00:13:43,519
thanks for the feedback so regarding

143
00:13:41,760 --> 00:13:47,040
content encryption algorithms

144
00:13:43,519 --> 00:13:47,680
in the context of cmp content encryption

145
00:13:47,040 --> 00:13:50,800
is

146
00:13:47,680 --> 00:13:53,359
only relevant with asymmetric key

147
00:13:50,800 --> 00:13:57,120
packages

148
00:13:53,360 --> 00:14:01,360
providing encrypted certificates

149
00:13:57,120 --> 00:14:02,079
and providing passphrase revocation pass

150
00:14:01,360 --> 00:14:06,560
phrases in

151
00:14:02,079 --> 00:14:09,680
encrypted form so just a very limited

152
00:14:06,560 --> 00:14:12,880
use cases for content encryption

153
00:14:09,680 --> 00:14:16,000
and currently i have aes ccm

154
00:14:12,880 --> 00:14:19,839
and aes gcm in

155
00:14:16,000 --> 00:14:23,519
in the document i could add

156
00:14:19,839 --> 00:14:26,800
um aes cbc or

157
00:14:23,519 --> 00:14:30,480
charger 20 one

158
00:14:26,800 --> 00:14:33,519
as an yeah older algorithm and

159
00:14:30,480 --> 00:14:35,760
and one for the future let's say

160
00:14:33,519 --> 00:14:38,320
is there any feedback what is the

161
00:14:35,760 --> 00:14:41,120
opinion from the group here

162
00:14:38,320 --> 00:14:42,839
so um i thought you were using envelope

163
00:14:41,120 --> 00:14:45,600
data

164
00:14:42,839 --> 00:14:49,040
yes um aes ccm

165
00:14:45,600 --> 00:14:51,680
and aes gcm both require authenticated

166
00:14:49,040 --> 00:14:54,800
envelope data

167
00:14:51,680 --> 00:14:58,719
not just um envelope data

168
00:14:54,800 --> 00:15:02,560
so 50 50 83

169
00:14:58,720 --> 00:15:06,480
and uh rfc 5083

170
00:15:02,560 --> 00:15:09,359
um specifies authenticated envelope data

171
00:15:06,480 --> 00:15:10,399
but rfc 5652 which is what i think

172
00:15:09,360 --> 00:15:13,600
you're using

173
00:15:10,399 --> 00:15:16,800
only has envelope data

174
00:15:13,600 --> 00:15:18,639
so i think you either need to do a

175
00:15:16,800 --> 00:15:20,880
bigger re-plumbing to support

176
00:15:18,639 --> 00:15:24,800
authenticated encryption

177
00:15:20,880 --> 00:15:27,920
or you need to not use an aead

178
00:15:24,800 --> 00:15:31,680
so like aes cbc or

179
00:15:27,920 --> 00:15:34,880
something like that yeah so

180
00:15:31,680 --> 00:15:35,599
actually i guess we do not really need

181
00:15:34,880 --> 00:15:38,320
the

182
00:15:35,600 --> 00:15:39,360
authenticated encryption in in this use

183
00:15:38,320 --> 00:15:42,880
case

184
00:15:39,360 --> 00:15:46,000
as the envelope data

185
00:15:42,880 --> 00:15:49,360
package is part of a cms message

186
00:15:46,000 --> 00:15:53,680
that is authenticated by

187
00:15:49,360 --> 00:15:57,279
by signature or a mac

188
00:15:53,680 --> 00:16:01,040
so that was my memory too

189
00:15:57,279 --> 00:16:04,160
so uh you could get rid of the uh

190
00:16:01,040 --> 00:16:06,880
the additional um

191
00:16:04,160 --> 00:16:08,880
mac capability if you had authenticated

192
00:16:06,880 --> 00:16:12,880
encryption but it would require

193
00:16:08,880 --> 00:16:15,560
a bigger change to cmp

194
00:16:12,880 --> 00:16:17,600
to support authenticated encryption

195
00:16:15,560 --> 00:16:22,319
[Music]

196
00:16:17,600 --> 00:16:25,199
yeah so not sure whether this is

197
00:16:22,320 --> 00:16:25,199
it worth doing

198
00:16:26,399 --> 00:16:37,040
for this use case so probably better to

199
00:16:30,480 --> 00:16:40,639
to move to aes cbc

200
00:16:37,040 --> 00:16:40,639
that's probably a good plan

201
00:16:42,160 --> 00:16:44,399
okay

202
00:16:46,480 --> 00:16:52,959
so yeah again learn

203
00:16:49,680 --> 00:16:52,959
something about cms

204
00:16:54,480 --> 00:16:57,839
with regard to message authentication

205
00:16:56,800 --> 00:17:02,240
code so

206
00:16:57,839 --> 00:17:06,079
from rsc

207
00:17:02,240 --> 00:17:08,480
42 10 and 11 we have these

208
00:17:06,079 --> 00:17:09,678
password-based mac and dv hellman based

209
00:17:08,480 --> 00:17:14,160
mac

210
00:17:09,679 --> 00:17:16,839
um even though they they look

211
00:17:14,160 --> 00:17:18,640
some somehow not that the

212
00:17:16,839 --> 00:17:22,799
state-of-the-art

213
00:17:18,640 --> 00:17:26,640
anymore we also have a draft from

214
00:17:22,799 --> 00:17:30,000
from russ on the password-based mac

215
00:17:26,640 --> 00:17:34,080
definition in 40-11

216
00:17:30,000 --> 00:17:37,840
so i thought about offering

217
00:17:34,080 --> 00:17:41,600
alternatives like pb mac 1

218
00:17:37,840 --> 00:17:45,600
from rfc 8018

219
00:17:41,600 --> 00:17:48,080
for cmc use even though i believe

220
00:17:45,600 --> 00:17:51,360
implementations will will not move away

221
00:17:48,080 --> 00:17:54,879
from from using password-based mac

222
00:17:51,360 --> 00:17:58,479
actually but

223
00:17:54,880 --> 00:17:59,840
in the context of other key management

224
00:17:58,480 --> 00:18:03,120
techniques

225
00:17:59,840 --> 00:18:04,959
mac algorithms are used

226
00:18:03,120 --> 00:18:06,639
and also in the context of the

227
00:18:04,960 --> 00:18:11,200
password-based mac

228
00:18:06,640 --> 00:18:14,240
a mac algorithm is is used and therefore

229
00:18:11,200 --> 00:18:18,400
we will also need to to specify

230
00:18:14,240 --> 00:18:21,440
some some regular mac algorithms like

231
00:18:18,400 --> 00:18:24,240
sha2 hmac or maybe

232
00:18:21,440 --> 00:18:26,720
others and that that would be the

233
00:18:24,240 --> 00:18:30,559
question whether to add furthers

234
00:18:26,720 --> 00:18:34,160
for the mac algorithm like

235
00:18:30,559 --> 00:18:34,799
aes gmac that was also a discussion on

236
00:18:34,160 --> 00:18:39,200
the list

237
00:18:34,799 --> 00:18:42,240
with regard to the update to 4211

238
00:18:39,200 --> 00:18:46,240
and if we add shake

239
00:18:42,240 --> 00:18:50,480
hash algorithms then the kmac

240
00:18:46,240 --> 00:18:53,520
variant of shape could also be added

241
00:18:50,480 --> 00:18:57,200
so on on that thread people were

242
00:18:53,520 --> 00:19:00,400
not particularly interested in cmac

243
00:18:57,200 --> 00:19:05,039
so i would i would stick to either gmac

244
00:19:00,400 --> 00:19:08,799
or the h

245
00:19:05,039 --> 00:19:08,799
h mac based on xu

246
00:19:09,280 --> 00:19:14,320
that's for the that those were the two

247
00:19:11,039 --> 00:19:16,879
that that had the most interest

248
00:19:14,320 --> 00:19:18,159
i i remember sean turner speaking and i

249
00:19:16,880 --> 00:19:20,320
know he's in a

250
00:19:18,160 --> 00:19:25,840
parallel session right now so that's why

251
00:19:20,320 --> 00:19:25,840
i raised it for him

252
00:19:26,080 --> 00:19:32,720
okay um is there a

253
00:19:29,200 --> 00:19:36,480
a reason behind not uh having

254
00:19:32,720 --> 00:19:39,440
a cmak a cmec in favor

255
00:19:36,480 --> 00:19:42,000
oh there's no problem with it it's just

256
00:19:39,440 --> 00:19:44,440
we're just seeing a lot of uh

257
00:19:42,000 --> 00:19:47,440
support for gmac uh because it's

258
00:19:44,440 --> 00:19:47,440
parallelizable

259
00:19:50,840 --> 00:19:55,199
okay

260
00:19:52,160 --> 00:20:00,160
good so

261
00:19:55,200 --> 00:20:00,160
this is this is it um

262
00:20:01,039 --> 00:20:06,000
for for the next slide um these are the

263
00:20:04,159 --> 00:20:09,039
sections i

264
00:20:06,000 --> 00:20:13,360
didn't look further into so

265
00:20:09,039 --> 00:20:18,720
currently i have dsa rsa

266
00:20:13,360 --> 00:20:22,639
and ecdsa all with sha2

267
00:20:18,720 --> 00:20:27,039
in in the document and rsa ssa

268
00:20:22,640 --> 00:20:30,000
pss in addition

269
00:20:27,039 --> 00:20:31,120
i was thinking about listing some

270
00:20:30,000 --> 00:20:34,159
examples of

271
00:20:31,120 --> 00:20:38,320
curves to be used with ecdsa

272
00:20:34,159 --> 00:20:43,360
like the nist curves or the newer curves

273
00:20:38,320 --> 00:20:43,360
like 22 519

274
00:20:44,060 --> 00:20:48,480
[Music]

275
00:20:46,240 --> 00:20:52,320
what do others think would that make

276
00:20:48,480 --> 00:20:52,320
sense in this kind of document

277
00:20:52,799 --> 00:21:03,840
i didn't see it in other similar

278
00:20:55,120 --> 00:21:03,840
documents yet

279
00:21:16,159 --> 00:21:22,000
uh two five five one nine uh is gaining

280
00:21:19,520 --> 00:21:24,720
uh support and there is an rc that says

281
00:21:22,000 --> 00:21:27,039
how to use it i believe

282
00:21:24,720 --> 00:21:31,840
now they came out of uh the kernel

283
00:21:27,039 --> 00:21:34,158
working group

284
00:21:31,840 --> 00:21:34,158
okay

285
00:21:40,480 --> 00:21:48,080
good so yeah yeah but uh two

286
00:21:43,600 --> 00:21:48,719
it is uh it's not ecdsa with curve225.9

287
00:21:48,080 --> 00:21:51,960
there's a

288
00:21:48,720 --> 00:21:54,960
there's a signature algorithm called

289
00:21:51,960 --> 00:21:54,960
ed25519

290
00:22:01,039 --> 00:22:09,039
was that the stuff that came out of cfrg

291
00:22:04,240 --> 00:22:09,039
right it's the cfrg curve but the

292
00:22:10,640 --> 00:22:15,280
there is a curdled draft i thought on

293
00:22:13,520 --> 00:22:19,918
how to use it

294
00:22:15,280 --> 00:22:19,918
for uh cms

295
00:22:20,880 --> 00:22:24,720
oh yeah you're probably right didn't win

296
00:22:23,120 --> 00:22:28,320
okay

297
00:22:24,720 --> 00:22:30,960
i think you chaired that i still do as

298
00:22:28,320 --> 00:22:30,960
far as i know

299
00:22:31,280 --> 00:22:34,639
just

300
00:22:32,300 --> 00:22:38,000
[Music]

301
00:22:34,640 --> 00:22:41,679
yeah yeah

302
00:22:38,000 --> 00:22:44,960
okay okay okay

303
00:22:41,679 --> 00:22:48,000
so thanks for that um

304
00:22:44,960 --> 00:22:50,559
there was also some internal discussion

305
00:22:48,000 --> 00:22:55,440
whether to

306
00:22:50,559 --> 00:22:58,320
to stick to listing the dsa

307
00:22:55,440 --> 00:22:59,520
even though it's not that widely used

308
00:22:58,320 --> 00:23:09,840
anymore

309
00:22:59,520 --> 00:23:09,840
is there any opinion in the group there

310
00:23:12,720 --> 00:23:17,280
i would uh advocate removing it unless

311
00:23:15,840 --> 00:23:19,360
somebody has a use for

312
00:23:17,280 --> 00:23:19,360
it

313
00:23:20,640 --> 00:23:28,159
okay i can speak up uh um please if you

314
00:23:24,640 --> 00:23:28,159
have a need for dsa

315
00:23:31,919 --> 00:23:35,039
not hearing anything so uh i i would

316
00:23:34,640 --> 00:23:38,080
drop

317
00:23:35,039 --> 00:23:41,120
it and see if somebody pushes back

318
00:23:38,080 --> 00:23:44,320
it's uh uh

319
00:23:41,120 --> 00:23:47,678
most people have moved on to uh

320
00:23:44,320 --> 00:23:51,039
well bigger rsa keys or ecdsa

321
00:23:47,679 --> 00:23:52,159
yeah so that's also my impression and

322
00:23:51,039 --> 00:23:54,320
therefore

323
00:23:52,159 --> 00:23:56,080
yeah we were thinking also about

324
00:23:54,320 --> 00:23:58,240
removing it

325
00:23:56,080 --> 00:23:59,760
yeah several people in chat want dsa

326
00:23:58,240 --> 00:24:05,279
removed as well

327
00:23:59,760 --> 00:24:08,480
okay yeah i'm fine with that

328
00:24:05,279 --> 00:24:10,640
okay good um

329
00:24:08,480 --> 00:24:11,840
with regard to key management algorithms

330
00:24:10,640 --> 00:24:15,039
so this is just

331
00:24:11,840 --> 00:24:18,720
some first set

332
00:24:15,039 --> 00:24:21,919
um i i put together as said i didn't

333
00:24:18,720 --> 00:24:26,640
look much deeper in in this i was just

334
00:24:21,919 --> 00:24:26,640
thinking about whether to

335
00:24:27,039 --> 00:24:33,360
yeah not to list any aesthetic static

336
00:24:31,360 --> 00:24:36,320
[Music]

337
00:24:33,360 --> 00:24:39,520
variants here as i believe in in the

338
00:24:36,320 --> 00:24:42,799
context or in the kind of usage in

339
00:24:39,520 --> 00:24:46,720
within cmp within certificate management

340
00:24:42,799 --> 00:24:48,559
it doesn't really make sense so you

341
00:24:46,720 --> 00:24:50,159
should should always have an ephemeral

342
00:24:48,559 --> 00:24:53,440
part so

343
00:24:50,159 --> 00:24:57,600
if there is no one

344
00:24:53,440 --> 00:25:01,360
having a use case for static static

345
00:24:57,600 --> 00:25:15,840
tiffy helmet variants i would just

346
00:25:01,360 --> 00:25:15,840
ignore them in this document

347
00:25:15,960 --> 00:25:19,479
[Music]

348
00:25:22,080 --> 00:25:26,840
i would recommend not just uh ignoring

349
00:25:24,320 --> 00:25:29,039
them but maybe explicitly deprecating

350
00:25:26,840 --> 00:25:30,399
them if you're trying to write a profile

351
00:25:29,039 --> 00:25:32,960
for modern

352
00:25:30,400 --> 00:25:34,559
uh you know crypto that you're exactly

353
00:25:32,960 --> 00:25:37,200
strong i would i would just discourage

354
00:25:34,559 --> 00:25:37,200
them actively

355
00:25:40,840 --> 00:25:43,840
okay

356
00:25:43,919 --> 00:25:49,679
yeah i i said i i also

357
00:25:46,960 --> 00:25:51,919
don't see use cases actually so could

358
00:25:49,679 --> 00:25:54,720
also

359
00:25:51,919 --> 00:25:57,840
put a sentence to to discourage usage of

360
00:25:54,720 --> 00:25:57,840
static static

361
00:25:58,030 --> 00:26:04,879
[Music]

362
00:26:00,720 --> 00:26:08,799
good for key transport algorithms i

363
00:26:04,880 --> 00:26:13,279
just list standard

364
00:26:08,799 --> 00:26:17,279
rsa encryption and

365
00:26:13,279 --> 00:26:21,039
rsaes op

366
00:26:17,279 --> 00:26:26,240
so yeah i've not seen

367
00:26:21,039 --> 00:26:29,039
any oaep really implemented in the wild

368
00:26:26,240 --> 00:26:31,440
although it's a strong crypto i've just

369
00:26:29,039 --> 00:26:36,158
never seen it take off

370
00:26:31,440 --> 00:26:39,840
yeah i i don't haven't seen it either

371
00:26:36,159 --> 00:26:39,840
so i could also drop it

372
00:26:52,640 --> 00:26:56,159
okay maybe you know drop it but don't

373
00:26:55,039 --> 00:26:59,600
unrecommend it

374
00:26:56,159 --> 00:27:01,039
like the other like dsl cds just not

375
00:26:59,600 --> 00:27:04,799
mentioning it

376
00:27:01,039 --> 00:27:04,799
yes okay that works for me

377
00:27:05,200 --> 00:27:08,559
so any anyhow the the focus of the

378
00:27:07,279 --> 00:27:13,039
document is

379
00:27:08,559 --> 00:27:13,039
to list some some some typical

380
00:27:13,120 --> 00:27:19,678
some typical algorithms but not saying

381
00:27:16,720 --> 00:27:20,320
you you cannot use others so anyhow you

382
00:27:19,679 --> 00:27:23,600
can

383
00:27:20,320 --> 00:27:26,559
use whatever you think is reasonable for

384
00:27:23,600 --> 00:27:26,559
your use cases

385
00:27:29,500 --> 00:27:35,200
[Music]

386
00:27:31,760 --> 00:27:37,600
good for

387
00:27:35,200 --> 00:27:38,799
symmetric key encryption algorithms i

388
00:27:37,600 --> 00:27:41,840
just list

389
00:27:38,799 --> 00:27:41,840
aes keywrap

390
00:27:42,399 --> 00:27:49,840
and for key derivation algorithms

391
00:27:46,840 --> 00:27:49,840
pbkdf2

392
00:27:49,919 --> 00:27:55,679
so any further feedbacks on this status

393
00:27:59,360 --> 00:28:03,840
[Music]

394
00:28:00,840 --> 00:28:03,840
here

395
00:28:06,159 --> 00:28:14,559
okay so i jump to the next slide so on

396
00:28:10,320 --> 00:28:14,559
the status of cmp updates

397
00:28:15,600 --> 00:28:20,480
i did i think quite all of the the

398
00:28:18,720 --> 00:28:23,679
updates discussed in

399
00:28:20,480 --> 00:28:26,799
itf 108 and in the subsequent

400
00:28:23,679 --> 00:28:28,880
discussions on the mailing list so i

401
00:28:26,799 --> 00:28:30,559
added the asymmetry key package

402
00:28:28,880 --> 00:28:34,080
structure

403
00:28:30,559 --> 00:28:37,840
for centrally generated keys

404
00:28:34,080 --> 00:28:41,279
i did some clarification

405
00:28:37,840 --> 00:28:42,240
on the the usage of general message

406
00:28:41,279 --> 00:28:45,039
together with

407
00:28:42,240 --> 00:28:47,840
ec curves after discussion with russ on

408
00:28:45,039 --> 00:28:47,840
the mailing list

409
00:28:48,159 --> 00:28:56,480
i updated or i added the sections

410
00:28:52,000 --> 00:28:58,559
on the new general message types

411
00:28:56,480 --> 00:28:59,679
that were you that are used in the

412
00:28:58,559 --> 00:29:03,840
lightweight cmp

413
00:28:59,679 --> 00:29:07,440
profile just to to add the

414
00:29:03,840 --> 00:29:11,279
new part the new oids and asn 1

415
00:29:07,440 --> 00:29:14,960
syntax for these general messages

416
00:29:11,279 --> 00:29:18,080
and the the detailed usage is

417
00:29:14,960 --> 00:29:20,640
still in in lightweight cmp profile

418
00:29:18,080 --> 00:29:20,639
document

419
00:29:21,200 --> 00:29:28,480
i also make use of

420
00:29:25,279 --> 00:29:33,520
the id rec control

421
00:29:28,480 --> 00:29:36,880
controls from crmf instead of rsa

422
00:29:33,520 --> 00:29:40,000
keylink variable

423
00:29:36,880 --> 00:29:43,039
in the certificate request

424
00:29:40,000 --> 00:29:46,159
template structure

425
00:29:43,039 --> 00:29:46,879
i'll have further questions on on on

426
00:29:46,159 --> 00:29:52,320
that

427
00:29:46,880 --> 00:29:55,760
later on i also updated the appendix d2

428
00:29:52,320 --> 00:29:59,600
of 4210 and

429
00:29:55,760 --> 00:30:02,640
just refer to cmp algorithms document

430
00:29:59,600 --> 00:30:06,959
for an updated list of algorithms

431
00:30:02,640 --> 00:30:11,440
mandatory algorithms here i also

432
00:30:06,960 --> 00:30:14,960
added the uri discovery part

433
00:30:11,440 --> 00:30:18,399
from the lightweight profile document to

434
00:30:14,960 --> 00:30:18,880
cmp updates as the usage of dot well

435
00:30:18,399 --> 00:30:22,879
known

436
00:30:18,880 --> 00:30:24,960
is kind of changing the normative part

437
00:30:22,880 --> 00:30:24,960
of

438
00:30:25,159 --> 00:30:31,440
60 70

439
00:30:28,200 --> 00:30:34,240
6712 and

440
00:30:31,440 --> 00:30:35,360
yeah did some some discussion with

441
00:30:34,240 --> 00:30:38,640
martin palo

442
00:30:35,360 --> 00:30:42,479
also on this section and i added

443
00:30:38,640 --> 00:30:44,159
the asn 1 modules and did the updates

444
00:30:42,480 --> 00:30:48,320
there

445
00:30:44,159 --> 00:30:51,840
so that is what was done since last itf

446
00:30:48,320 --> 00:30:55,520
coming to the root ca

447
00:30:51,840 --> 00:30:57,439
certificate update um general message

448
00:30:55,520 --> 00:30:59,360
this is a general message as it is

449
00:30:57,440 --> 00:31:02,559
currently specified but

450
00:30:59,360 --> 00:31:06,000
after discussing this internally we

451
00:31:02,559 --> 00:31:09,279
figured out that this is

452
00:31:06,000 --> 00:31:12,640
this exchange is unspecific on

453
00:31:09,279 --> 00:31:16,240
which route ca for which route

454
00:31:12,640 --> 00:31:20,159
route ca we are requesting an update so

455
00:31:16,240 --> 00:31:23,519
currently if there is a pki that serves

456
00:31:20,159 --> 00:31:26,960
different root case then

457
00:31:23,519 --> 00:31:30,559
currently we have no means to

458
00:31:26,960 --> 00:31:33,679
neither specify for which root ca

459
00:31:30,559 --> 00:31:34,240
we want to have an update not nor can

460
00:31:33,679 --> 00:31:38,559
the

461
00:31:34,240 --> 00:31:42,080
pki respond with a set of

462
00:31:38,559 --> 00:31:45,440
updates for all of the routes it has

463
00:31:42,080 --> 00:31:47,199
and therefore we

464
00:31:45,440 --> 00:31:49,120
yeah we're just discussing about

465
00:31:47,200 --> 00:31:52,960
solutions and our

466
00:31:49,120 --> 00:31:55,439
main suggestion was to just put the

467
00:31:52,960 --> 00:31:56,240
old result so the old root ca

468
00:31:55,440 --> 00:32:00,399
certificate

469
00:31:56,240 --> 00:32:04,000
into the request message um

470
00:32:00,399 --> 00:32:08,320
and then it is it is clear

471
00:32:04,000 --> 00:32:08,320
on what update is requested

472
00:32:08,880 --> 00:32:16,559
so you're just gonna pass the um

473
00:32:13,360 --> 00:32:17,120
are what it becomes is is this are there

474
00:32:16,559 --> 00:32:22,320
any

475
00:32:17,120 --> 00:32:22,320
updates to this root certificate

476
00:32:23,440 --> 00:32:28,240
because it's not the old sign with the

477
00:32:26,840 --> 00:32:31,519
old

478
00:32:28,240 --> 00:32:34,559
so the old signed with the old is a

479
00:32:31,519 --> 00:32:37,600
current root ca certificate and

480
00:32:34,559 --> 00:32:41,120
if we would put this into the

481
00:32:37,600 --> 00:32:45,279
into the request message then the pki

482
00:32:41,120 --> 00:32:48,959
knows for which root ca

483
00:32:45,279 --> 00:32:48,960
is the update requested

484
00:32:49,840 --> 00:32:53,199
if we're going to change

485
00:32:53,840 --> 00:32:57,360
that don't we need to assign a new oid

486
00:32:56,720 --> 00:33:00,080
so that

487
00:32:57,360 --> 00:33:02,639
existing implementations don't choke

488
00:33:00,080 --> 00:33:02,639
when they get

489
00:33:02,720 --> 00:33:09,440
a root

490
00:33:06,159 --> 00:33:13,120
certificate there instead of a null

491
00:33:09,440 --> 00:33:16,640
we we introduce in cmp updates this oid

492
00:33:13,120 --> 00:33:21,199
so this is a new void okay thank you

493
00:33:16,640 --> 00:33:24,480
yeah we as of today we are free

494
00:33:21,200 --> 00:33:27,840
to to specify it that if you're using a

495
00:33:24,480 --> 00:33:27,840
new oil that's fine yeah

496
00:33:31,360 --> 00:33:34,959
so yeah the question would be would we

497
00:33:34,559 --> 00:33:37,519
then

498
00:33:34,960 --> 00:33:39,279
need a different oid for the request and

499
00:33:37,519 --> 00:33:43,600
the response message but

500
00:33:39,279 --> 00:33:44,000
i thought it is okay to use the same oid

501
00:33:43,600 --> 00:33:47,199
here

502
00:33:44,000 --> 00:33:47,200
and just specify

503
00:33:47,679 --> 00:33:51,840
no that's correct it's the the oid is

504
00:33:50,880 --> 00:33:56,320
used

505
00:33:51,840 --> 00:33:58,720
for both is my the way i read the spec

506
00:33:56,320 --> 00:34:02,720
but in the context tells you whether

507
00:33:58,720 --> 00:34:02,720
you're doing the request or the response

508
00:34:04,840 --> 00:34:10,879
good

509
00:34:07,600 --> 00:34:11,679
okay if no one objects again this

510
00:34:10,879 --> 00:34:13,839
suggestion

511
00:34:11,679 --> 00:34:15,679
i would just update the draft

512
00:34:13,839 --> 00:34:20,560
accordingly

513
00:34:15,679 --> 00:34:22,720
and move to the next certificate

514
00:34:20,560 --> 00:34:24,719
the next general message type this

515
00:34:22,719 --> 00:34:29,359
certificate request template

516
00:34:24,719 --> 00:34:33,678
we kind of have a similar issue here

517
00:34:29,359 --> 00:34:37,359
so typically we see pkis

518
00:34:33,679 --> 00:34:38,960
where sca supports different certificate

519
00:34:37,359 --> 00:34:42,960
profiles

520
00:34:38,960 --> 00:34:46,320
so for example it's opc ua certificates

521
00:34:42,960 --> 00:34:46,639
and tls client and other certificates

522
00:34:46,320 --> 00:34:50,079
for

523
00:34:46,639 --> 00:34:52,720
for maybe other applications so

524
00:34:50,079 --> 00:34:55,119
one ca could serve different certificate

525
00:34:52,719 --> 00:34:59,118
types or certificate profiles

526
00:34:55,119 --> 00:35:01,440
so if you send a request message to

527
00:34:59,119 --> 00:35:03,040
say give me the certificate request

528
00:35:01,440 --> 00:35:06,320
template

529
00:35:03,040 --> 00:35:09,920
to a ca then it may be not clear

530
00:35:06,320 --> 00:35:09,920
which template to respond

531
00:35:11,599 --> 00:35:15,440
so therefore

532
00:35:15,520 --> 00:35:19,599
yeah we also thought about that we have

533
00:35:18,160 --> 00:35:22,879
a similar

534
00:35:19,599 --> 00:35:25,200
issue with sending a request message

535
00:35:22,880 --> 00:35:27,359
a certificate request measure message to

536
00:35:25,200 --> 00:35:30,560
a ca if the ca

537
00:35:27,359 --> 00:35:31,040
supports different certificate types it

538
00:35:30,560 --> 00:35:35,440
is

539
00:35:31,040 --> 00:35:39,040
maybe not completely clear which

540
00:35:35,440 --> 00:35:41,040
certificate profile to use on that ca

541
00:35:39,040 --> 00:35:42,160
and therefore the question was do we

542
00:35:41,040 --> 00:35:45,440
need or

543
00:35:42,160 --> 00:35:48,720
how does other certificate management

544
00:35:45,440 --> 00:35:53,200
protocols handle this

545
00:35:48,720 --> 00:35:54,240
i know that est has a get csr attributes

546
00:35:53,200 --> 00:35:58,399
message

547
00:35:54,240 --> 00:36:02,000
but i'm not aware that

548
00:35:58,400 --> 00:36:05,839
there are means to to differentiate

549
00:36:02,000 --> 00:36:09,359
for which um template they request

550
00:36:05,839 --> 00:36:12,720
the attributes so

551
00:36:09,359 --> 00:36:16,078
yeah the question is are there any ideas

552
00:36:12,720 --> 00:36:19,759
on on how to to handle this

553
00:36:16,079 --> 00:36:24,480
or is there any best practice and

554
00:36:19,760 --> 00:36:27,520
if not we we could think about

555
00:36:24,480 --> 00:36:29,359
adding some some content on the

556
00:36:27,520 --> 00:36:34,960
requested certificate

557
00:36:29,359 --> 00:36:34,960
profile in the pki header general info

558
00:36:38,839 --> 00:36:46,160
field

559
00:36:41,680 --> 00:36:46,160
i think uh info type value is fine

560
00:36:46,320 --> 00:36:55,839
does anyone else have a thought

561
00:36:58,240 --> 00:37:06,560
i would say go with that suggestion

562
00:37:02,880 --> 00:37:06,560
okay good

563
00:37:06,640 --> 00:37:14,879
thank you so let's move on

564
00:37:10,960 --> 00:37:14,880
to the next um

565
00:37:15,359 --> 00:37:21,920
generally i as as shown

566
00:37:19,040 --> 00:37:23,359
on maybe a jump back as shown on on this

567
00:37:21,920 --> 00:37:26,400
slide we use

568
00:37:23,359 --> 00:37:27,119
the controls here so these are attribute

569
00:37:26,400 --> 00:37:30,880
type

570
00:37:27,119 --> 00:37:34,560
type value as defined

571
00:37:30,880 --> 00:37:37,920
in rfc 42

572
00:37:34,560 --> 00:37:39,759
11 and we use it

573
00:37:37,920 --> 00:37:42,480
so they are supposed to be used in the

574
00:37:39,760 --> 00:37:45,280
context of certificate requests

575
00:37:42,480 --> 00:37:45,920
here we use it kind of in a different

576
00:37:45,280 --> 00:37:49,200
kind of

577
00:37:45,920 --> 00:37:52,240
context and we had some internal

578
00:37:49,200 --> 00:37:55,919
discussion whether this is suitable here

579
00:37:52,240 --> 00:37:59,279
and i just wanted to to to double check

580
00:37:55,920 --> 00:38:00,240
with the group um whether it is it is

581
00:37:59,280 --> 00:38:05,119
okay to

582
00:38:00,240 --> 00:38:08,399
register new rec control types or ids

583
00:38:05,119 --> 00:38:09,520
for the usage in this certificate

584
00:38:08,400 --> 00:38:12,880
request template

585
00:38:09,520 --> 00:38:19,839
general message or whether we

586
00:38:12,880 --> 00:38:19,839
should do it differently

587
00:38:23,040 --> 00:38:28,160
does anyone think can anyone think of a

588
00:38:25,359 --> 00:38:28,160
better way to do

589
00:38:31,680 --> 00:38:36,000
i it ayanna is going to get some

590
00:38:33,280 --> 00:38:40,800
additional uh requests for oids

591
00:38:36,000 --> 00:38:44,240
go ahead okay

592
00:38:40,800 --> 00:38:45,359
so um there was some discussion also in

593
00:38:44,240 --> 00:38:48,160
brisky ae

594
00:38:45,359 --> 00:38:49,759
don't know whether michael is there in

595
00:38:48,160 --> 00:38:53,200
in the call

596
00:38:49,760 --> 00:38:54,000
and we thought about how to to make the

597
00:38:53,200 --> 00:38:57,520
discovery

598
00:38:54,000 --> 00:39:00,800
in the cmp whether to

599
00:38:57,520 --> 00:39:04,800
go with a known slash

600
00:39:00,800 --> 00:39:04,800
cmp or just was well known

601
00:39:05,359 --> 00:39:09,839
so don't know whether the discussion in

602
00:39:07,839 --> 00:39:13,520
briskey or briskey ae

603
00:39:09,839 --> 00:39:16,720
is already concluded

604
00:39:13,520 --> 00:39:18,960
or whether there is any any guidance

605
00:39:16,720 --> 00:39:18,959
here

606
00:39:19,839 --> 00:39:22,880
go ahead dkg

607
00:39:23,359 --> 00:39:26,839
understanding is that there are some

608
00:39:24,960 --> 00:39:30,079
strong feelings about

609
00:39:26,839 --> 00:39:30,720
uh how specifically to use dot well

610
00:39:30,079 --> 00:39:34,720
known

611
00:39:30,720 --> 00:39:35,839
in um within the ietf anyway

612
00:39:34,720 --> 00:39:37,118
um and i know that there are different

613
00:39:35,839 --> 00:39:38,000
drafts that do it in different in

614
00:39:37,119 --> 00:39:41,520
different ways

615
00:39:38,000 --> 00:39:44,000
but martin uh mark sorry mark nottingham

616
00:39:41,520 --> 00:39:45,680
um is known for having some pretty

617
00:39:44,000 --> 00:39:48,480
strong opinions about

618
00:39:45,680 --> 00:39:49,598
how it's intended to be used like uh not

619
00:39:48,480 --> 00:39:52,480
wanting

620
00:39:49,599 --> 00:39:54,079
uh predefined trees within that

621
00:39:52,480 --> 00:39:55,040
well-known but rather having a single

622
00:39:54,079 --> 00:39:57,839
point that

623
00:39:55,040 --> 00:39:59,359
makes a reference to other endpoints so

624
00:39:57,839 --> 00:40:02,078
i would make sure that you get feedback

625
00:39:59,359 --> 00:40:05,279
from people like mark

626
00:40:02,079 --> 00:40:05,280
okay thank you

627
00:40:07,280 --> 00:40:15,119
in chat uh several people have said

628
00:40:10,880 --> 00:40:18,000
use well-known cmp okay

629
00:40:15,119 --> 00:40:18,720
i think this is also the way i specified

630
00:40:18,000 --> 00:40:21,920
it

631
00:40:18,720 --> 00:40:24,959
as of today but yeah

632
00:40:21,920 --> 00:40:27,599
that was just to reflect the discussion

633
00:40:24,960 --> 00:40:27,599
elsewhere

634
00:40:28,319 --> 00:40:32,560
good yeah thank you for the all the

635
00:40:30,800 --> 00:40:35,599
feedback

636
00:40:32,560 --> 00:40:39,359
um as we

637
00:40:35,599 --> 00:40:43,200
also have an appendix on the new

638
00:40:39,359 --> 00:40:48,720
2002 asm1 module

639
00:40:43,200 --> 00:40:48,720
to update that one from rfc 5912

640
00:40:48,960 --> 00:40:53,280
should we also say that this draft

641
00:40:51,599 --> 00:40:56,400
updates

642
00:40:53,280 --> 00:40:59,680
59 12

643
00:40:56,400 --> 00:41:04,400
yes okay

644
00:40:59,680 --> 00:41:04,399
good okay

645
00:41:05,520 --> 00:41:08,960
yeah so this first point we just

646
00:41:07,839 --> 00:41:12,160
discussed the

647
00:41:08,960 --> 00:41:15,200
second point um as we

648
00:41:12,160 --> 00:41:16,240
said we will continue on with the new

649
00:41:15,200 --> 00:41:19,439
rec controls

650
00:41:16,240 --> 00:41:22,040
um russ

651
00:41:19,440 --> 00:41:25,599
could you could you arrange for a

652
00:41:22,040 --> 00:41:25,599
pre-registration for these

653
00:41:26,880 --> 00:41:33,280
um let's let's get uh some agreement on

654
00:41:29,839 --> 00:41:35,680
the draft and then we will

655
00:41:33,280 --> 00:41:37,920
you know get it posted in a little

656
00:41:35,680 --> 00:41:38,240
review time and once it looks stable i

657
00:41:37,920 --> 00:41:43,520
can

658
00:41:38,240 --> 00:41:43,520
i can help with that yeah great thanks

659
00:41:45,920 --> 00:41:49,599
yeah the same with the other next point

660
00:41:48,800 --> 00:41:51,920
is also

661
00:41:49,599 --> 00:41:52,880
probably something when when the draft

662
00:41:51,920 --> 00:41:56,480
is

663
00:41:52,880 --> 00:41:59,760
stable and will be completed

664
00:41:56,480 --> 00:42:02,240
good so of course like always any any

665
00:41:59,760 --> 00:42:05,359
feedback to the content of the draft is

666
00:42:02,240 --> 00:42:08,720
very welcome so please please let me

667
00:42:05,359 --> 00:42:08,720
know if you have any feedback

668
00:42:09,119 --> 00:42:16,319
on the light from the chat uh just a bit

669
00:42:13,280 --> 00:42:19,119
from the chat you may need to

670
00:42:16,319 --> 00:42:20,240
put in additional iana consideration to

671
00:42:19,119 --> 00:42:23,760
register

672
00:42:20,240 --> 00:42:23,759
well-known cmp

673
00:42:24,960 --> 00:42:29,200
and if after the reading if you take a

674
00:42:27,520 --> 00:42:32,960
look at the chat it tells you

675
00:42:29,200 --> 00:42:36,560
which exact iana registry

676
00:42:32,960 --> 00:42:39,440
okay thought of i had added this

677
00:42:36,560 --> 00:42:40,720
but i will check the chat and and see

678
00:42:39,440 --> 00:42:45,839
what

679
00:42:40,720 --> 00:42:45,839
what the feedback is thanks

680
00:42:48,160 --> 00:42:52,319
okay on the lightweight cmp profile so

681
00:42:51,520 --> 00:42:57,280
there is

682
00:42:52,319 --> 00:43:01,359
no much work on the content

683
00:42:57,280 --> 00:43:04,079
as of today um i just moved some of the

684
00:43:01,359 --> 00:43:04,799
the parts um or changed some of the the

685
00:43:04,079 --> 00:43:08,319
content

686
00:43:04,800 --> 00:43:12,560
with regard to updates of cmp updates

687
00:43:08,319 --> 00:43:17,440
and with the new cnp algorithms document

688
00:43:12,560 --> 00:43:18,160
i also did some changes with regard to

689
00:43:17,440 --> 00:43:21,760
the

690
00:43:18,160 --> 00:43:27,520
new draft rush submitted

691
00:43:21,760 --> 00:43:30,880
on crmf algorithms requirements update

692
00:43:27,520 --> 00:43:34,800
i did some minor editorial

693
00:43:30,880 --> 00:43:38,400
things and the rest

694
00:43:34,800 --> 00:43:41,280
of it is more or less due to

695
00:43:38,400 --> 00:43:43,280
the discussion and changes to cmp

696
00:43:41,280 --> 00:43:46,560
updates

697
00:43:43,280 --> 00:43:47,359
so moving moving some of the the parts

698
00:43:46,560 --> 00:43:50,480
to

699
00:43:47,359 --> 00:43:54,000
cmp updates to get rid of an

700
00:43:50,480 --> 00:43:57,280
asn 1 module in lightweight cmp

701
00:43:54,000 --> 00:43:59,359
and um to yeah

702
00:43:57,280 --> 00:44:00,560
to make use of the asymmetric key

703
00:43:59,359 --> 00:44:03,839
package

704
00:44:00,560 --> 00:44:07,200
and yeah i think this is

705
00:44:03,839 --> 00:44:11,920
it what was done since last itf

706
00:44:07,200 --> 00:44:16,000
um the to do's

707
00:44:11,920 --> 00:44:19,119
is that of course after the discussion

708
00:44:16,000 --> 00:44:22,880
on the support messages

709
00:44:19,119 --> 00:44:26,160
i will revisit the cmp

710
00:44:22,880 --> 00:44:28,560
the the sections in the cmp lightweight

711
00:44:26,160 --> 00:44:32,560
profile

712
00:44:28,560 --> 00:44:36,560
we had discussions or while implementing

713
00:44:32,560 --> 00:44:40,240
maybe some of you noticed that we

714
00:44:36,560 --> 00:44:44,160
um yeah submitted

715
00:44:40,240 --> 00:44:46,560
um a lightweight cmp ra implementation

716
00:44:44,160 --> 00:44:47,598
kind of a let's say reference

717
00:44:46,560 --> 00:44:50,640
implementation

718
00:44:47,599 --> 00:44:53,359
on github siemens

719
00:44:50,640 --> 00:44:54,319
so if anyone is interested you're

720
00:44:53,359 --> 00:44:57,279
welcome to

721
00:44:54,319 --> 00:44:58,079
to have a look at that and while doing

722
00:44:57,280 --> 00:45:01,520
so

723
00:44:58,079 --> 00:45:05,599
we figured out that tls srp

724
00:45:01,520 --> 00:45:10,560
cipher suite is not

725
00:45:05,599 --> 00:45:12,880
available in jsse and therefore we were

726
00:45:10,560 --> 00:45:14,880
thinking are there any suitable

727
00:45:12,880 --> 00:45:18,079
alternatives

728
00:45:14,880 --> 00:45:21,040
that are more

729
00:45:18,079 --> 00:45:22,079
yeah have more footprint in

730
00:45:21,040 --> 00:45:25,839
implementations

731
00:45:22,079 --> 00:45:29,040
or whether yeah how to to handle

732
00:45:25,839 --> 00:45:30,400
a certificate based or shared secret

733
00:45:29,040 --> 00:45:32,960
based

734
00:45:30,400 --> 00:45:33,760
authentication client authentication in

735
00:45:32,960 --> 00:45:47,359
tls

736
00:45:33,760 --> 00:45:50,880
what is the is there any suggestion

737
00:45:47,359 --> 00:45:55,200
okay so we we also didn't figure out

738
00:45:50,880 --> 00:45:55,200
a better solution so

739
00:45:59,440 --> 00:46:03,359
yeah we will see and if if there is

740
00:46:02,800 --> 00:46:07,040
nothing

741
00:46:03,359 --> 00:46:08,799
else then we will leave it as it is

742
00:46:07,040 --> 00:46:10,720
we will have to do an update of the

743
00:46:08,800 --> 00:46:12,000
certificate request template in the

744
00:46:10,720 --> 00:46:15,279
appendix

745
00:46:12,000 --> 00:46:19,599
and yeah that is it

746
00:46:15,280 --> 00:46:23,280
um for the moment um

747
00:46:19,599 --> 00:46:24,640
as well um i welcome i welcome all of

748
00:46:23,280 --> 00:46:29,839
the feedbacks

749
00:46:24,640 --> 00:46:29,839
you have so please let me know

750
00:46:30,560 --> 00:46:35,599
okay this is it from from my side to the

751
00:46:34,400 --> 00:46:39,040
status of the

752
00:46:35,599 --> 00:46:41,359
three drafts on on cmp

753
00:46:39,040 --> 00:46:42,079
so yeah i'm i'm done with my

754
00:46:41,359 --> 00:46:45,119
presentation

755
00:46:42,079 --> 00:46:48,560
thanks okay and

756
00:46:45,119 --> 00:46:53,040
any uh additional feedback for

757
00:46:48,560 --> 00:46:53,040
uh hendrick before we move to the next

758
00:46:54,839 --> 00:47:01,440
presentation

759
00:46:56,720 --> 00:47:04,480
dkg is uh on deck then

760
00:47:01,440 --> 00:47:07,040
so uh if you hendra could stop sharing

761
00:47:04,480 --> 00:47:07,040
your screen

762
00:47:08,839 --> 00:47:11,839
yes

763
00:47:18,640 --> 00:47:24,000
you're still sharing yeah i'm

764
00:47:21,680 --> 00:47:24,000
okay

765
00:47:26,880 --> 00:47:32,720
um it's up top

766
00:47:30,640 --> 00:47:34,000
under your name there's a little

767
00:47:32,720 --> 00:47:39,839
published screen

768
00:47:34,000 --> 00:47:39,839
you click it again

769
00:47:55,200 --> 00:48:00,240
okay now we're going to talk about

770
00:47:59,280 --> 00:48:03,520
header protection

771
00:48:00,240 --> 00:48:04,558
over um there's going to be a tag team

772
00:48:03,520 --> 00:48:07,839
on this one i believe

773
00:48:04,559 --> 00:48:07,839
go ahead

774
00:48:09,599 --> 00:48:12,319
can you hear me

775
00:48:17,920 --> 00:48:21,680
so is my audio coming through much

776
00:48:20,480 --> 00:48:24,880
better

777
00:48:21,680 --> 00:48:27,279
okay good

778
00:48:24,880 --> 00:48:29,280
so this is bernie hennison i'm making

779
00:48:27,280 --> 00:48:32,480
this presentation together with

780
00:48:29,280 --> 00:48:34,079
dkg like i will have a first section

781
00:48:32,480 --> 00:48:36,880
that is just like saying

782
00:48:34,079 --> 00:48:37,599
what happened so far and daniel will

783
00:48:36,880 --> 00:48:40,480
then

784
00:48:37,599 --> 00:48:42,160
take over and discuss some issues like

785
00:48:40,480 --> 00:48:45,040
more like what's coming

786
00:48:42,160 --> 00:48:47,040
from now on during my part of the

787
00:48:45,040 --> 00:48:48,800
presentation there may be clarifying

788
00:48:47,040 --> 00:48:51,359
questions but

789
00:48:48,800 --> 00:48:53,119
not contributions for discussions those

790
00:48:51,359 --> 00:48:54,558
should be postponed to danielle's

791
00:48:53,119 --> 00:48:57,119
section

792
00:48:54,559 --> 00:48:57,119
next slide

793
00:48:57,599 --> 00:49:02,000
so what are the changes since last time

794
00:49:00,400 --> 00:49:04,800
we had a lively discussion during

795
00:49:02,000 --> 00:49:06,160
itf 108 and most of the feedback has

796
00:49:04,800 --> 00:49:08,720
been implemented

797
00:49:06,160 --> 00:49:10,399
at least um those cases that weren't too

798
00:49:08,720 --> 00:49:12,799
complicated

799
00:49:10,400 --> 00:49:13,520
this includes an editorial cleanup that

800
00:49:12,800 --> 00:49:15,359
was like

801
00:49:13,520 --> 00:49:16,559
in particular abstract need production

802
00:49:15,359 --> 00:49:19,680
needed to

803
00:49:16,559 --> 00:49:22,960
be rewritten which was complained about

804
00:49:19,680 --> 00:49:25,919
for good reasons then we

805
00:49:22,960 --> 00:49:27,680
started to restructure it a bit

806
00:49:25,920 --> 00:49:30,240
regarding the

807
00:49:27,680 --> 00:49:32,000
definitions for example like we have now

808
00:49:30,240 --> 00:49:33,680
cryptographic clear cryptographic

809
00:49:32,000 --> 00:49:36,640
payload and cryptographic envelope

810
00:49:33,680 --> 00:49:38,558
those are now defined in another draft

811
00:49:36,640 --> 00:49:40,558
and this draft is referred to and

812
00:49:38,559 --> 00:49:43,440
regarding this other draft

813
00:49:40,559 --> 00:49:44,000
the plan is to split the current data

814
00:49:43,440 --> 00:49:46,480
protection

815
00:49:44,000 --> 00:49:49,040
draft into us into a draft that only

816
00:49:46,480 --> 00:49:51,119
discusses header protection

817
00:49:49,040 --> 00:49:52,720
which is the one we are discussing and

818
00:49:51,119 --> 00:49:55,119
then there's an auto draft it's also on

819
00:49:52,720 --> 00:49:58,720
the agenda on the next point if i

820
00:49:55,119 --> 00:50:01,680
correctly that discusses general e2e

821
00:49:58,720 --> 00:50:03,520
mail guidance we figured out that there

822
00:50:01,680 --> 00:50:05,680
is much more than header protection to

823
00:50:03,520 --> 00:50:09,599
make this stuff

824
00:50:05,680 --> 00:50:12,879
secure and private um we dropped

825
00:50:09,599 --> 00:50:14,559
encrypted only messages case as well as

826
00:50:12,880 --> 00:50:18,160
any other cases that are not

827
00:50:14,559 --> 00:50:21,200
signed only and signed and encrypted and

828
00:50:18,160 --> 00:50:24,319
we update obfuscation recommendations

829
00:50:21,200 --> 00:50:26,078
as per mailing list and as i mentioned

830
00:50:24,319 --> 00:50:28,640
dkg is now a co-author

831
00:50:26,079 --> 00:50:29,119
and the draft will substantially change

832
00:50:28,640 --> 00:50:32,720
in the

833
00:50:29,119 --> 00:50:32,720
next version next slide please

834
00:50:32,880 --> 00:50:36,880
so the issues we discussed last time i

835
00:50:36,319 --> 00:50:38,480
just going

836
00:50:36,880 --> 00:50:40,319
briefly through that you know what the

837
00:50:38,480 --> 00:50:42,160
state is after the last discussion

838
00:50:40,319 --> 00:50:43,440
these backwards compatibility things are

839
00:50:42,160 --> 00:50:46,480
still open

840
00:50:43,440 --> 00:50:49,040
protection levels is closed

841
00:50:46,480 --> 00:50:51,119
as we are limited to signature only and

842
00:50:49,040 --> 00:50:52,880
encrypted and signature or the other way

843
00:50:51,119 --> 00:50:55,839
around basically

844
00:50:52,880 --> 00:50:58,160
um and on the receiving side we may need

845
00:50:55,839 --> 00:51:00,240
to document auto use case basically

846
00:50:58,160 --> 00:51:01,440
this is a different story than the

847
00:51:00,240 --> 00:51:03,279
sending side

848
00:51:01,440 --> 00:51:05,040
then the mind format is still open we

849
00:51:03,280 --> 00:51:06,559
will have a discussion in the next

850
00:51:05,040 --> 00:51:09,839
section of this presentation

851
00:51:06,559 --> 00:51:09,839
next slide

852
00:51:11,359 --> 00:51:15,279
then we also changed obfuscation header

853
00:51:14,480 --> 00:51:18,640
fields we took

854
00:51:15,280 --> 00:51:19,440
out the suggestions for obfuscating date

855
00:51:18,640 --> 00:51:23,040
from two

856
00:51:19,440 --> 00:51:25,599
and all the stuff and

857
00:51:23,040 --> 00:51:26,800
what's left this subject and message id

858
00:51:25,599 --> 00:51:29,760
though message id

859
00:51:26,800 --> 00:51:30,160
is still under discussion and this will

860
00:51:29,760 --> 00:51:31,920
be

861
00:51:30,160 --> 00:51:34,160
discussed in the next part of the

862
00:51:31,920 --> 00:51:37,599
presentation

863
00:51:34,160 --> 00:51:40,319
rendering messages um

864
00:51:37,599 --> 00:51:42,079
so far we discussed that we rendered the

865
00:51:40,319 --> 00:51:43,920
inner message only or like

866
00:51:42,079 --> 00:51:46,480
what is the cryptographic payload or

867
00:51:43,920 --> 00:51:48,480
whatever is in the new terminology

868
00:51:46,480 --> 00:51:50,000
and but some additional information

869
00:51:48,480 --> 00:51:52,079
should be made available how we do

870
00:51:50,000 --> 00:51:54,319
this it's not yet clear but this will be

871
00:51:52,079 --> 00:51:55,520
a thing that is discussed in the

872
00:51:54,319 --> 00:51:57,680
autodraft uh

873
00:51:55,520 --> 00:51:59,040
guidance for end-to-end encryption if i

874
00:51:57,680 --> 00:52:00,480
am correct here

875
00:51:59,040 --> 00:52:02,160
then we had some discussion about the

876
00:52:00,480 --> 00:52:05,680
bcc handling

877
00:52:02,160 --> 00:52:07,920
and we can close this one because the

878
00:52:05,680 --> 00:52:10,078
text regarding bcc will keep minimal in

879
00:52:07,920 --> 00:52:11,119
this document and we will refer to other

880
00:52:10,079 --> 00:52:12,960
comments

881
00:52:11,119 --> 00:52:15,040
that was my section are there any

882
00:52:12,960 --> 00:52:18,480
clarifying questions

883
00:52:15,040 --> 00:52:22,079
clarifying questions only if this is not

884
00:52:18,480 --> 00:52:22,079
the case i'll hand over to danielle

885
00:52:23,760 --> 00:52:35,119
thanks bernie um can folks hear me okay

886
00:52:32,000 --> 00:52:38,800
you fine great so

887
00:52:35,119 --> 00:52:39,760
um uh bernie and alexa and i have worked

888
00:52:38,800 --> 00:52:43,119
a bunch on this

889
00:52:39,760 --> 00:52:46,079
uh draft in the in the meantime um and

890
00:52:43,119 --> 00:52:47,680
we're gonna try to tighten it up the

891
00:52:46,079 --> 00:52:49,200
main goal is to get it to focus on

892
00:52:47,680 --> 00:52:51,118
implementation guidance

893
00:52:49,200 --> 00:52:52,799
i think the the issue that we really

894
00:52:51,119 --> 00:52:55,760
want is we want this to be

895
00:52:52,800 --> 00:52:56,480
um to provide a set of pretty clear

896
00:52:55,760 --> 00:52:58,640
instructions

897
00:52:56,480 --> 00:53:00,160
without too many choice points for

898
00:52:58,640 --> 00:53:00,480
implementers to just walk through and

899
00:53:00,160 --> 00:53:02,799
said

900
00:53:00,480 --> 00:53:05,440
am i doing these these things yep i'm

901
00:53:02,800 --> 00:53:08,160
doing them okay we're good to go

902
00:53:05,440 --> 00:53:09,200
um one concern that that is raised here

903
00:53:08,160 --> 00:53:10,960
is

904
00:53:09,200 --> 00:53:12,240
uh you know the user agent implementers

905
00:53:10,960 --> 00:53:13,680
are going to be dealing with arbitrary

906
00:53:12,240 --> 00:53:14,640
messages that are out there and some

907
00:53:13,680 --> 00:53:16,240
messages are going to be

908
00:53:14,640 --> 00:53:17,839
in possibly different forms because

909
00:53:16,240 --> 00:53:19,759
there are two main schemes of header

910
00:53:17,839 --> 00:53:20,960
protection that are found in the wild

911
00:53:19,760 --> 00:53:23,200
and we've talked about this in previous

912
00:53:20,960 --> 00:53:25,200
versions of the draft

913
00:53:23,200 --> 00:53:26,720
and ultimately implementers are going to

914
00:53:25,200 --> 00:53:28,480
want to be able to deal with either

915
00:53:26,720 --> 00:53:29,520
scheme that they encounter

916
00:53:28,480 --> 00:53:31,520
and it turns out the schemes are not

917
00:53:29,520 --> 00:53:32,880
that different but they are different

918
00:53:31,520 --> 00:53:35,520
they're subtly different one of them

919
00:53:32,880 --> 00:53:37,280
i'm referring to in this um as wrapped

920
00:53:35,520 --> 00:53:39,440
message which is what was specified in s

921
00:53:37,280 --> 00:53:40,720
3.1 there are some implementations out

922
00:53:39,440 --> 00:53:42,160
there there are some messages that are

923
00:53:40,720 --> 00:53:44,078
wrapped in that way

924
00:53:42,160 --> 00:53:45,598
and the other form is injected headers

925
00:53:44,079 --> 00:53:47,359
which was also known as this draft

926
00:53:45,599 --> 00:53:50,559
autocrypt protected headers

927
00:53:47,359 --> 00:53:52,000
or a memory hole specification um those

928
00:53:50,559 --> 00:53:53,119
there are messages of both forms that

929
00:53:52,000 --> 00:53:54,480
are out there floating around so we

930
00:53:53,119 --> 00:53:56,000
think that actually this draft is going

931
00:53:54,480 --> 00:53:57,599
to need to give you guidance as a

932
00:53:56,000 --> 00:53:58,559
receiving male user agent as to how to

933
00:53:57,599 --> 00:54:01,359
implement them

934
00:53:58,559 --> 00:54:02,800
uh how to interpret them it also needs

935
00:54:01,359 --> 00:54:03,279
to give guidance about how to compose

936
00:54:02,800 --> 00:54:04,720
them

937
00:54:03,280 --> 00:54:05,920
although maybe we only need to give

938
00:54:04,720 --> 00:54:06,319
guidance about how to compose one of

939
00:54:05,920 --> 00:54:09,200
them

940
00:54:06,319 --> 00:54:10,880
if there's a clear a clear choice for

941
00:54:09,200 --> 00:54:12,160
what we think implementers should do

942
00:54:10,880 --> 00:54:14,720
that's an open question i'll talk about

943
00:54:12,160 --> 00:54:16,640
that in a second um

944
00:54:14,720 --> 00:54:18,399
uh also as you're encrypting a message

945
00:54:16,640 --> 00:54:19,759
there's this question about

946
00:54:18,400 --> 00:54:21,440
what do you how do you obscure the

947
00:54:19,760 --> 00:54:24,960
headers that are going to be

948
00:54:21,440 --> 00:54:27,040
covered by encryption and uh

949
00:54:24,960 --> 00:54:28,880
i'm proposing here a formalization of

950
00:54:27,040 --> 00:54:30,160
that called a header confidentiality

951
00:54:28,880 --> 00:54:31,599
policy

952
00:54:30,160 --> 00:54:33,680
to make it easier to talk about and

953
00:54:31,599 --> 00:54:35,359
again i'll get into that in a little bit

954
00:54:33,680 --> 00:54:37,759
i also think that the draft is going to

955
00:54:35,359 --> 00:54:39,680
end up growing a bunch of test vectors

956
00:54:37,760 --> 00:54:42,720
and some analysis and comparison of the

957
00:54:39,680 --> 00:54:44,480
different mechanisms available

958
00:54:42,720 --> 00:54:46,480
so the two main open questions that we

959
00:54:44,480 --> 00:54:48,240
have that we definitely need working

960
00:54:46,480 --> 00:54:50,640
group feedback on

961
00:54:48,240 --> 00:54:51,520
are which header protection scheme so

962
00:54:50,640 --> 00:54:53,040
first off the question

963
00:54:51,520 --> 00:54:54,559
the open questions in terms of

964
00:54:53,040 --> 00:54:56,880
implementation guidance are about

965
00:54:54,559 --> 00:54:58,240
message composition that's the time when

966
00:54:56,880 --> 00:54:59,680
you really have choice points

967
00:54:58,240 --> 00:55:01,200
right an implementer who's receiving a

968
00:54:59,680 --> 00:55:03,598
message basically has to know what to do

969
00:55:01,200 --> 00:55:05,040
with the message it received

970
00:55:03,599 --> 00:55:06,480
but when it's submitting a message there

971
00:55:05,040 --> 00:55:07,119
will be some choices to make and we

972
00:55:06,480 --> 00:55:10,799
think that

973
00:55:07,119 --> 00:55:12,319
the draft should give clear guidance

974
00:55:10,799 --> 00:55:14,319
about what to do and so the two main

975
00:55:12,319 --> 00:55:15,839
questions are

976
00:55:14,319 --> 00:55:17,599
which scheme should you use when you're

977
00:55:15,839 --> 00:55:20,558
composing a message with with

978
00:55:17,599 --> 00:55:20,960
header protection and what should you if

979
00:55:20,559 --> 00:55:22,400
you're

980
00:55:20,960 --> 00:55:24,319
doing an encrypted message what should

981
00:55:22,400 --> 00:55:25,520
the header confidentiality policy be

982
00:55:24,319 --> 00:55:26,799
so i'm going to go into those in a

983
00:55:25,520 --> 00:55:27,759
little bit more detail a couple slides

984
00:55:26,799 --> 00:55:30,000
on each one

985
00:55:27,760 --> 00:55:31,760
um and so you know i'm going to be

986
00:55:30,000 --> 00:55:32,799
posing specific questions here for the

987
00:55:31,760 --> 00:55:34,160
working group

988
00:55:32,799 --> 00:55:36,079
obviously this is going to be taken up

989
00:55:34,160 --> 00:55:38,078
on the list eventually but i'm

990
00:55:36,079 --> 00:55:39,920
um i don't claim to have answers to

991
00:55:38,079 --> 00:55:41,599
these things right now

992
00:55:39,920 --> 00:55:42,960
um there should be pretty

993
00:55:41,599 --> 00:55:44,720
straightforward questions but the

994
00:55:42,960 --> 00:55:46,319
answers are not clear yet i'm going to

995
00:55:44,720 --> 00:55:48,160
i have a proposal about ways we can

996
00:55:46,319 --> 00:55:49,119
think about this ways to ways to go

997
00:55:48,160 --> 00:55:50,720
forward

998
00:55:49,119 --> 00:55:52,000
but no specific answers so i just want

999
00:55:50,720 --> 00:55:54,240
to highlight this because this is the

1000
00:55:52,000 --> 00:55:56,400
open questions that we'll be working on

1001
00:55:54,240 --> 00:55:57,839
as the next revision comes around so

1002
00:55:56,400 --> 00:55:59,119
here's the two header protection schemes

1003
00:55:57,839 --> 00:56:00,880
that are out there on the left we have

1004
00:55:59,119 --> 00:56:03,920
the wrapped message

1005
00:56:00,880 --> 00:56:04,960
which uses this message rfca 22 um some

1006
00:56:03,920 --> 00:56:07,040
of that

1007
00:56:04,960 --> 00:56:08,240
this forwarded equals no tag i don't

1008
00:56:07,040 --> 00:56:11,839
know if anybody was on

1009
00:56:08,240 --> 00:56:13,598
at the dispatch earlier this week

1010
00:56:11,839 --> 00:56:14,960
uh but it was discussed maybe it's not

1011
00:56:13,599 --> 00:56:16,720
forwarded equals no maybe it's some

1012
00:56:14,960 --> 00:56:19,040
other mechanism

1013
00:56:16,720 --> 00:56:19,759
but basically there's this one wrapping

1014
00:56:19,040 --> 00:56:22,558
part

1015
00:56:19,760 --> 00:56:23,839
and then there's the the embedded part

1016
00:56:22,559 --> 00:56:26,079
that has the headers

1017
00:56:23,839 --> 00:56:28,078
the bold in this diagram shows you where

1018
00:56:26,079 --> 00:56:29,280
the protected headers live within the

1019
00:56:28,079 --> 00:56:32,000
cryptographic payload

1020
00:56:29,280 --> 00:56:33,520
right so this is here regardless of what

1021
00:56:32,000 --> 00:56:34,160
kinds of cryptographic protections are

1022
00:56:33,520 --> 00:56:35,839
in place

1023
00:56:34,160 --> 00:56:37,520
you have the cryptographic layers on the

1024
00:56:35,839 --> 00:56:38,319
outside those form the cryptographic

1025
00:56:37,520 --> 00:56:39,920
envelope

1026
00:56:38,319 --> 00:56:41,680
and then the protections arise because

1027
00:56:39,920 --> 00:56:43,599
the headers are present

1028
00:56:41,680 --> 00:56:45,040
inside the payload and in wrap message

1029
00:56:43,599 --> 00:56:47,599
they're in part b

1030
00:56:45,040 --> 00:56:49,359
there in this diagram the other

1031
00:56:47,599 --> 00:56:50,799
alternative is injected headers

1032
00:56:49,359 --> 00:56:52,558
and just look at the top one there for a

1033
00:56:50,799 --> 00:56:54,319
second um it looks an

1034
00:56:52,559 --> 00:56:56,960
awful lot like wrapped message the only

1035
00:56:54,319 --> 00:56:59,279
difference being that there isn't this

1036
00:56:56,960 --> 00:57:00,960
wrapping layer and the you know there's

1037
00:56:59,280 --> 00:57:04,000
a different content type

1038
00:57:00,960 --> 00:57:05,520
um parameter

1039
00:57:04,000 --> 00:57:08,160
that's supplied protected dash headers

1040
00:57:05,520 --> 00:57:09,839
equals v1 is the the

1041
00:57:08,160 --> 00:57:12,799
structure that people are using on the

1042
00:57:09,839 --> 00:57:14,319
on the network today

1043
00:57:12,799 --> 00:57:15,759
but basically it's you know the headers

1044
00:57:14,319 --> 00:57:16,240
that live on part d and they live on

1045
00:57:15,760 --> 00:57:18,000
part d

1046
00:57:16,240 --> 00:57:19,919
just uh directly inside the

1047
00:57:18,000 --> 00:57:24,240
cryptographic envelope

1048
00:57:19,920 --> 00:57:25,760
there is a weird corner case for um

1049
00:57:24,240 --> 00:57:27,680
for an encrypted message that's being

1050
00:57:25,760 --> 00:57:28,799
sent to a client that isn't going to be

1051
00:57:27,680 --> 00:57:31,919
able

1052
00:57:28,799 --> 00:57:34,160
to uh read

1053
00:57:31,920 --> 00:57:35,280
uh that isn't going to know about

1054
00:57:34,160 --> 00:57:38,000
injected headers

1055
00:57:35,280 --> 00:57:39,839
and that adds this legacy display part

1056
00:57:38,000 --> 00:57:41,680
which is a way of just sort of stuffing

1057
00:57:39,839 --> 00:57:43,440
an additional text part

1058
00:57:41,680 --> 00:57:45,759
that includes the headers that you would

1059
00:57:43,440 --> 00:57:46,640
think that a legacy client would want to

1060
00:57:45,760 --> 00:57:50,480
know about

1061
00:57:46,640 --> 00:57:52,319
um so that for example so that you don't

1062
00:57:50,480 --> 00:57:53,599
hide the subject from them the person

1063
00:57:52,319 --> 00:57:54,799
who's reading the message can still see

1064
00:57:53,599 --> 00:57:56,079
the subject even if they

1065
00:57:54,799 --> 00:57:58,000
even if it doesn't sort of land in the

1066
00:57:56,079 --> 00:58:00,079
right place in the mail user agent

1067
00:57:58,000 --> 00:58:01,520
um so it's really only this with legacy

1068
00:58:00,079 --> 00:58:03,440
display is a bit more complex as a

1069
00:58:01,520 --> 00:58:05,520
structure but if you look closely

1070
00:58:03,440 --> 00:58:07,440
you'll see that i j and k in that legacy

1071
00:58:05,520 --> 00:58:08,400
display are the same as d e and f in

1072
00:58:07,440 --> 00:58:10,799
injected headers

1073
00:58:08,400 --> 00:58:12,079
and it's just about using multi-part mix

1074
00:58:10,799 --> 00:58:14,720
and text playing part

1075
00:58:12,079 --> 00:58:15,599
to stuff an additional display field the

1076
00:58:14,720 --> 00:58:17,118
idea is that

1077
00:58:15,599 --> 00:58:18,480
an implementer who's receiving messages

1078
00:58:17,119 --> 00:58:20,240
that look like this can detect that

1079
00:58:18,480 --> 00:58:23,040
that's a legacy display part

1080
00:58:20,240 --> 00:58:24,479
and avoid rendering it entirely um

1081
00:58:23,040 --> 00:58:26,000
because they already know that they get

1082
00:58:24,480 --> 00:58:26,720
the headers from the right place which

1083
00:58:26,000 --> 00:58:30,160
is part

1084
00:58:26,720 --> 00:58:30,959
g or part d in the um without a legacy

1085
00:58:30,160 --> 00:58:33,520
display

1086
00:58:30,960 --> 00:58:34,559
so those are the two schemes um and then

1087
00:58:33,520 --> 00:58:36,079
the question is how are we going to

1088
00:58:34,559 --> 00:58:37,839
choose at composition time

1089
00:58:36,079 --> 00:58:39,119
or when at implementation time which of

1090
00:58:37,839 --> 00:58:40,400
the two schemes we're going to recommend

1091
00:58:39,119 --> 00:58:41,839
maybe the draft should only recommend

1092
00:58:40,400 --> 00:58:43,440
composing one

1093
00:58:41,839 --> 00:58:46,880
and i'm proposing this particular

1094
00:58:43,440 --> 00:58:49,119
analysis matrix to do that

1095
00:58:46,880 --> 00:58:50,640
so what you're seeing here is a chart

1096
00:58:49,119 --> 00:58:51,680
that i'm proposing that we need to fill

1097
00:58:50,640 --> 00:58:54,879
in

1098
00:58:51,680 --> 00:58:56,558
hopefully as a group that describes

1099
00:58:54,880 --> 00:58:57,920
different scenarios for message

1100
00:58:56,559 --> 00:59:01,280
composition and sending

1101
00:58:57,920 --> 00:59:01,920
and receiving to think about the header

1102
00:59:01,280 --> 00:59:05,200
schemes

1103
00:59:01,920 --> 00:59:07,520
so the vertical axis here is protections

1104
00:59:05,200 --> 00:59:09,200
is is what kinds of protections you're

1105
00:59:07,520 --> 00:59:10,559
applying to the composed message right

1106
00:59:09,200 --> 00:59:13,359
is it signed

1107
00:59:10,559 --> 00:59:14,640
um which type of signature form is it is

1108
00:59:13,359 --> 00:59:16,640
it signed and encrypted

1109
00:59:14,640 --> 00:59:17,839
um as bernie mentioned we are not going

1110
00:59:16,640 --> 00:59:19,598
to deal with the case where you're just

1111
00:59:17,839 --> 00:59:21,279
sending an encrypted message

1112
00:59:19,599 --> 00:59:23,119
we think the draft should be should

1113
00:59:21,280 --> 00:59:23,680
encourage basically only one of two

1114
00:59:23,119 --> 00:59:25,839
choices

1115
00:59:23,680 --> 00:59:26,960
signed only or signing encrypted on the

1116
00:59:25,839 --> 00:59:29,440
receiving side of course

1117
00:59:26,960 --> 00:59:31,040
lack of signatures or signature

1118
00:59:29,440 --> 00:59:32,319
validation failures mean the receiver is

1119
00:59:31,040 --> 00:59:33,839
going to need to deal with

1120
00:59:32,319 --> 00:59:36,079
messages that are encrypted but have no

1121
00:59:33,839 --> 00:59:37,520
valid signature but at the generation

1122
00:59:36,079 --> 00:59:39,200
time you really there's only two

1123
00:59:37,520 --> 00:59:40,960
sort of choices signed encrypted versus

1124
00:59:39,200 --> 00:59:44,480
signed only of course there are two

1125
00:59:40,960 --> 00:59:46,559
different kinds of signed only in pkcs7

1126
00:59:44,480 --> 00:59:48,480
but anyway the horizontal axis here is

1127
00:59:46,559 --> 00:59:50,000
whether what we think the recipient mail

1128
00:59:48,480 --> 00:59:51,359
user agent can do now obviously if

1129
00:59:50,000 --> 00:59:53,200
you're sending a message to multiple

1130
00:59:51,359 --> 00:59:55,119
mail user agents um they've got

1131
00:59:53,200 --> 00:59:56,558
different uh

1132
00:59:55,119 --> 00:59:58,559
that you know they might have different

1133
00:59:56,559 --> 01:00:00,720
capabilities but we'll just think about

1134
00:59:58,559 --> 01:00:01,839
the case where one recipient is looking

1135
01:00:00,720 --> 01:00:03,759
at the message

1136
01:00:01,839 --> 01:00:05,359
and i've divided here the categories of

1137
01:00:03,760 --> 01:00:07,200
recipient into three buckets

1138
01:00:05,359 --> 01:00:08,400
there's the folks that fully implement

1139
01:00:07,200 --> 01:00:09,520
the header protection scheme that we

1140
01:00:08,400 --> 01:00:12,720
recommend

1141
01:00:09,520 --> 01:00:14,799
um that's the green columns on the right

1142
01:00:12,720 --> 01:00:16,558
um and we want to think separately about

1143
01:00:14,799 --> 01:00:17,200
how do these male user agents render the

1144
01:00:16,559 --> 01:00:19,440
message

1145
01:00:17,200 --> 01:00:20,960
and also how do they how do they behave

1146
01:00:19,440 --> 01:00:23,280
when you reply to the message

1147
01:00:20,960 --> 01:00:25,040
because that might be different as well

1148
01:00:23,280 --> 01:00:26,400
um and so

1149
01:00:25,040 --> 01:00:27,920
in the yellow column on the left we're

1150
01:00:26,400 --> 01:00:29,359
talking about male user agents that have

1151
01:00:27,920 --> 01:00:31,760
that are legacy clients that have no

1152
01:00:29,359 --> 01:00:33,279
cryptic capabilities whatsoever

1153
01:00:31,760 --> 01:00:35,280
and in the blue we're looking at legacy

1154
01:00:33,280 --> 01:00:37,119
clients legacy just meaning they don't

1155
01:00:35,280 --> 01:00:38,559
implement header protection

1156
01:00:37,119 --> 01:00:40,079
but they do have cryptographic

1157
01:00:38,559 --> 01:00:41,440
capabilities already they have the

1158
01:00:40,079 --> 01:00:42,480
standard cryptographic capabilities but

1159
01:00:41,440 --> 01:00:43,280
they don't understand this header

1160
01:00:42,480 --> 01:00:44,559
protection thing

1161
01:00:43,280 --> 01:00:46,160
i think that's the majority of all the

1162
01:00:44,559 --> 01:00:48,240
male user agents that have crypto right

1163
01:00:46,160 --> 01:00:50,799
now

1164
01:00:48,240 --> 01:00:52,399
and so those uh eight boxes that are in

1165
01:00:50,799 --> 01:00:53,359
there that are unfilled in i think are

1166
01:00:52,400 --> 01:00:54,559
the things that are going to make a

1167
01:00:53,359 --> 01:00:55,920
difference because the ones that are

1168
01:00:54,559 --> 01:00:57,680
already filled in should be the same

1169
01:00:55,920 --> 01:01:00,079
regardless of header protection scheme

1170
01:00:57,680 --> 01:01:01,839
right you get unreadable messages in the

1171
01:01:00,079 --> 01:01:04,240
four boxes in the lower left

1172
01:01:01,839 --> 01:01:05,520
everything is perfect on the right in

1173
01:01:04,240 --> 01:01:06,879
the green and so we really need to think

1174
01:01:05,520 --> 01:01:08,000
about those eight boxes here in the

1175
01:01:06,880 --> 01:01:10,400
middle

1176
01:01:08,000 --> 01:01:11,839
so i'm just i don't actually have the

1177
01:01:10,400 --> 01:01:12,240
answers for what this looks like but i'm

1178
01:01:11,839 --> 01:01:14,400
just

1179
01:01:12,240 --> 01:01:15,839
framing this as how i think we should be

1180
01:01:14,400 --> 01:01:16,480
evaluating which header protection

1181
01:01:15,839 --> 01:01:20,640
scheme

1182
01:01:16,480 --> 01:01:22,559
to use for uh message composition

1183
01:01:20,640 --> 01:01:24,558
if people have concerns about this as an

1184
01:01:22,559 --> 01:01:26,400
evaluation scheme where they want to

1185
01:01:24,559 --> 01:01:27,680
suggest additional nuance i'd be happy

1186
01:01:26,400 --> 01:01:30,000
to hear it

1187
01:01:27,680 --> 01:01:31,200
both now and on the list but just so you

1188
01:01:30,000 --> 01:01:33,440
know this is sort of

1189
01:01:31,200 --> 01:01:37,118
where where i'm thinking we need to go

1190
01:01:33,440 --> 01:01:37,119
to evaluate which scheme to recommend

1191
01:01:37,440 --> 01:01:45,119
so not seeing anyone in the queue um

1192
01:01:42,160 --> 01:01:46,640
uh i'm going to go ahead with the next

1193
01:01:45,119 --> 01:01:48,079
section that was header protection

1194
01:01:46,640 --> 01:01:50,078
uh schemes different header protection

1195
01:01:48,079 --> 01:01:53,440
schemes and then this is this header

1196
01:01:50,079 --> 01:01:54,640
i would like to ask if anyone disagrees

1197
01:01:53,440 --> 01:01:57,599
with this approach

1198
01:01:54,640 --> 01:01:57,598
please speak now

1199
01:01:58,720 --> 01:02:03,919
yep or raise it on the list but raise it

1200
01:02:00,720 --> 01:02:06,240
soon soon but real soon

1201
01:02:03,920 --> 01:02:07,039
yep because we want to we want to keep

1202
01:02:06,240 --> 01:02:08,640
going here

1203
01:02:07,039 --> 01:02:10,400
and you know obviously if we if we

1204
01:02:08,640 --> 01:02:13,839
complete this analysis

1205
01:02:10,400 --> 01:02:14,960
um and there's no clear

1206
01:02:13,839 --> 01:02:18,558
answer then we're going to need to

1207
01:02:14,960 --> 01:02:21,839
figure some other way to carve it up

1208
01:02:18,559 --> 01:02:24,720
but let's get the data right yep

1209
01:02:21,839 --> 01:02:26,160
okay um i'm not hearing anyone think

1210
01:02:24,720 --> 01:02:29,919
this is a bad way

1211
01:02:26,160 --> 01:02:32,078
to explore the problem cool

1212
01:02:29,920 --> 01:02:33,119
um so this may mean that i ask you on

1213
01:02:32,079 --> 01:02:34,799
the list to like

1214
01:02:33,119 --> 01:02:36,720
try out your the mail user agent that

1215
01:02:34,799 --> 01:02:38,240
you work on or

1216
01:02:36,720 --> 01:02:40,000
old versions of the mail user agent that

1217
01:02:38,240 --> 01:02:42,879
you work on or the mail agent

1218
01:02:40,000 --> 01:02:43,440
that you use um and if you want to just

1219
01:02:42,880 --> 01:02:45,760
you know give

1220
01:02:43,440 --> 01:02:47,920
give some feedback you know say hey i

1221
01:02:45,760 --> 01:02:50,400
tried and it looked this way

1222
01:02:47,920 --> 01:02:52,240
it'd be cool to to get that from from

1223
01:02:50,400 --> 01:02:54,960
people on the list so i hope people will

1224
01:02:52,240 --> 01:02:54,959
consider doing that

1225
01:02:55,280 --> 01:02:58,559
so moving on this header confidentiality

1226
01:02:57,440 --> 01:03:00,480
policy is a

1227
01:02:58,559 --> 01:03:02,319
formalism that i'm proposing here so

1228
01:03:00,480 --> 01:03:05,119
that we can talk about what it means

1229
01:03:02,319 --> 01:03:06,558
to protect headers of encrypted messages

1230
01:03:05,119 --> 01:03:07,200
so this is not about signed only

1231
01:03:06,559 --> 01:03:08,640
messages

1232
01:03:07,200 --> 01:03:11,919
we're just talking about messages that

1233
01:03:08,640 --> 01:03:13,598
are that have a layer of encryption

1234
01:03:11,920 --> 01:03:15,119
we don't actually believe that we can

1235
01:03:13,599 --> 01:03:17,520
give all of the headers

1236
01:03:15,119 --> 01:03:19,280
of the message the same protections that

1237
01:03:17,520 --> 01:03:21,200
the message body has

1238
01:03:19,280 --> 01:03:23,280
in terms of confidentiality because

1239
01:03:21,200 --> 01:03:25,359
there may be routing issues or spam

1240
01:03:23,280 --> 01:03:28,480
issues or whatever so the question

1241
01:03:25,359 --> 01:03:30,078
becomes how do i choose

1242
01:03:28,480 --> 01:03:31,760
what to put on the outside of the

1243
01:03:30,079 --> 01:03:33,920
cryptographic envelope

1244
01:03:31,760 --> 01:03:36,160
um given what i know is going to go on

1245
01:03:33,920 --> 01:03:38,720
the inside as i'm composing it

1246
01:03:36,160 --> 01:03:39,359
and so this is a simple formalization

1247
01:03:38,720 --> 01:03:40,558
which is

1248
01:03:39,359 --> 01:03:43,440
we're defining the header

1249
01:03:40,559 --> 01:03:45,839
confidentiality policy as a function

1250
01:03:43,440 --> 01:03:47,839
that takes the name of the header and

1251
01:03:45,839 --> 01:03:50,160
the value of the header as it looks on

1252
01:03:47,839 --> 01:03:51,759
the interior of the cryptographic

1253
01:03:50,160 --> 01:03:53,440
envelope that is in the cryptographic

1254
01:03:51,760 --> 01:03:57,200
payload the protected

1255
01:03:53,440 --> 01:03:58,000
header and we're going to map that to a

1256
01:03:57,200 --> 01:04:00,399
value that goes

1257
01:03:58,000 --> 01:04:02,079
in the output and if the value that goes

1258
01:04:00,400 --> 01:04:03,359
in the output is a special value null

1259
01:04:02,079 --> 01:04:05,280
then that means we won't even bother

1260
01:04:03,359 --> 01:04:07,359
putting it on the outside

1261
01:04:05,280 --> 01:04:08,880
so this is just a simple way that if

1262
01:04:07,359 --> 01:04:09,598
you're an implementer or you're a

1263
01:04:08,880 --> 01:04:11,119
researcher

1264
01:04:09,599 --> 01:04:12,880
you want to document how header

1265
01:04:11,119 --> 01:04:13,599
protection can work or should work in

1266
01:04:12,880 --> 01:04:15,359
the future

1267
01:04:13,599 --> 01:04:17,760
you can say hey here's the new header

1268
01:04:15,359 --> 01:04:20,160
confidential confidentiality policy the

1269
01:04:17,760 --> 01:04:22,480
new hcp i think we should use

1270
01:04:20,160 --> 01:04:24,319
and we can test that i want to be clear

1271
01:04:22,480 --> 01:04:27,119
that for this particular draft

1272
01:04:24,319 --> 01:04:28,240
i hope to recommend one particular hcp

1273
01:04:27,119 --> 01:04:30,640
by default

1274
01:04:28,240 --> 01:04:31,839
and the idea of declaring this hcp

1275
01:04:30,640 --> 01:04:34,319
formalism

1276
01:04:31,839 --> 01:04:36,240
is that future drafts could propose new

1277
01:04:34,319 --> 01:04:38,240
ones and we can talk about what the

1278
01:04:36,240 --> 01:04:40,160
consequences of those things would be

1279
01:04:38,240 --> 01:04:41,520
while having a very concise summary of

1280
01:04:40,160 --> 01:04:43,440
what the actual proposal under

1281
01:04:41,520 --> 01:04:46,160
discussion is

1282
01:04:43,440 --> 01:04:46,960
so let me just show you two example hcps

1283
01:04:46,160 --> 01:04:48,799
that i think

1284
01:04:46,960 --> 01:04:50,079
are candidates for what we recommend

1285
01:04:48,799 --> 01:04:51,599
here but there are obviously

1286
01:04:50,079 --> 01:04:53,760
you know this is a function the function

1287
01:04:51,599 --> 01:04:55,039
space could be arbitrarily large

1288
01:04:53,760 --> 01:04:57,359
there are other ones you could imagine

1289
01:04:55,039 --> 01:04:59,440
but here's two to consider

1290
01:04:57,359 --> 01:05:01,920
so the first one on the left is called

1291
01:04:59,440 --> 01:05:03,599
we just named it hcp minimal

1292
01:05:01,920 --> 01:05:04,720
and it basically says we look at the

1293
01:05:03,599 --> 01:05:05,359
headers that are going to go on the

1294
01:05:04,720 --> 01:05:06,959
inside of

1295
01:05:05,359 --> 01:05:08,640
the you know the header that are going

1296
01:05:06,960 --> 01:05:10,240
to get um on the

1297
01:05:08,640 --> 01:05:12,240
on the cryptographic payload that is

1298
01:05:10,240 --> 01:05:13,680
inside the cryptographic envelope

1299
01:05:12,240 --> 01:05:15,520
and for each of them we're just going to

1300
01:05:13,680 --> 01:05:16,000
copy it to the outside so we're not

1301
01:05:15,520 --> 01:05:18,480
going to give

1302
01:05:16,000 --> 01:05:20,160
any confidentiality with the exception

1303
01:05:18,480 --> 01:05:21,920
of the subject header

1304
01:05:20,160 --> 01:05:23,759
and if it's a subject header we're just

1305
01:05:21,920 --> 01:05:25,520
going to replace it with square bracket

1306
01:05:23,760 --> 01:05:26,880
dot dot dot square bracket the literal

1307
01:05:25,520 --> 01:05:29,680
string

1308
01:05:26,880 --> 01:05:31,200
so this hcp minimal basically says

1309
01:05:29,680 --> 01:05:32,160
protect the subject as though it were

1310
01:05:31,200 --> 01:05:33,598
part of the body

1311
01:05:32,160 --> 01:05:37,200
but otherwise we're not protecting

1312
01:05:33,599 --> 01:05:39,760
confidentiality of anything else

1313
01:05:37,200 --> 01:05:42,160
so that's one and the other one is this

1314
01:05:39,760 --> 01:05:43,280
hcp strong

1315
01:05:42,160 --> 01:05:45,200
and this one is a little bit more

1316
01:05:43,280 --> 01:05:46,240
nuanced and it's a little more privacy

1317
01:05:45,200 --> 01:05:48,839
preserving

1318
01:05:46,240 --> 01:05:50,000
but may have other issues it basically

1319
01:05:48,839 --> 01:05:53,759
says

1320
01:05:50,000 --> 01:05:56,880
if the header is from to cc or date

1321
01:05:53,760 --> 01:06:00,319
then we'll map it to the outside

1322
01:05:56,880 --> 01:06:01,280
if it's a subject we um we obscure it in

1323
01:06:00,319 --> 01:06:03,759
the same way

1324
01:06:01,280 --> 01:06:04,799
that http minimal obscures it if it's a

1325
01:06:03,760 --> 01:06:06,640
message id

1326
01:06:04,799 --> 01:06:08,000
we're going to generate a new message id

1327
01:06:06,640 --> 01:06:09,279
on the outside and

1328
01:06:08,000 --> 01:06:11,200
all other headers we're going to

1329
01:06:09,280 --> 01:06:13,680
completely strip

1330
01:06:11,200 --> 01:06:14,480
so there will be no other headers as the

1331
01:06:13,680 --> 01:06:16,399
messages in

1332
01:06:14,480 --> 01:06:17,839
you know is injected into the mail

1333
01:06:16,400 --> 01:06:19,119
system by the mail user agent there will

1334
01:06:17,839 --> 01:06:20,160
be no other headers on the outside

1335
01:06:19,119 --> 01:06:23,680
besides

1336
01:06:20,160 --> 01:06:25,038
from to cc date subject and message id

1337
01:06:23,680 --> 01:06:26,960
where subject and message id are

1338
01:06:25,039 --> 01:06:28,720
obscured in the ways defined here this

1339
01:06:26,960 --> 01:06:29,920
function new message id just means

1340
01:06:28,720 --> 01:06:32,078
however the mail user agent would

1341
01:06:29,920 --> 01:06:33,280
generate a message id just do it again

1342
01:06:32,079 --> 01:06:34,640
so you've got one on the inside and

1343
01:06:33,280 --> 01:06:35,440
you've got a different message id on the

1344
01:06:34,640 --> 01:06:37,839
outside

1345
01:06:35,440 --> 01:06:38,799
and everything else gets stripped so

1346
01:06:37,839 --> 01:06:42,480
these are two

1347
01:06:38,799 --> 01:06:44,799
sample hcps does it

1348
01:06:42,480 --> 01:06:46,880
does anyone want to ask questions about

1349
01:06:44,799 --> 01:06:47,680
this particular formalism the goal is to

1350
01:06:46,880 --> 01:06:50,720
make it

1351
01:06:47,680 --> 01:06:52,640
pretty pretty concise to describe

1352
01:06:50,720 --> 01:06:54,319
what what it is that a user agent is

1353
01:06:52,640 --> 01:06:57,279
going to do

1354
01:06:54,319 --> 01:06:57,279
so i hope it's clear there

1355
01:06:59,440 --> 01:07:02,640
so i really like this and i get into the

1356
01:07:01,200 --> 01:07:05,839
chat um

1357
01:07:02,640 --> 01:07:09,440
and um

1358
01:07:05,839 --> 01:07:09,440
okay i see one hand from bernie

1359
01:07:10,319 --> 01:07:14,720
jim kind of got cut off there i don't

1360
01:07:11,760 --> 01:07:17,440
know if he was saying something

1361
01:07:14,720 --> 01:07:19,598
i was going to but bernie can go first

1362
01:07:17,440 --> 01:07:23,280
okay

1363
01:07:19,599 --> 01:07:24,079
okay well for me this interesting thing

1364
01:07:23,280 --> 01:07:26,559
would be

1365
01:07:24,079 --> 01:07:28,000
how much do we lose if we make the

1366
01:07:26,559 --> 01:07:31,520
header protection

1367
01:07:28,000 --> 01:07:34,079
strong like we lose a message id

1368
01:07:31,520 --> 01:07:34,559
which is used for imap server threading

1369
01:07:34,079 --> 01:07:36,880
and like

1370
01:07:34,559 --> 01:07:37,920
kind of aligning messages to each other

1371
01:07:36,880 --> 01:07:41,119
for me the open

1372
01:07:37,920 --> 01:07:43,440
question is still like is this really a

1373
01:07:41,119 --> 01:07:45,440
useful feature if we have encrypted

1374
01:07:43,440 --> 01:07:46,559
messages on the outside that we can

1375
01:07:45,440 --> 01:07:49,280
thread them

1376
01:07:46,559 --> 01:07:51,039
and what other use cases like you

1377
01:07:49,280 --> 01:07:51,839
probably have some more experience with

1378
01:07:51,039 --> 01:07:54,880
that

1379
01:07:51,839 --> 01:08:10,240
like you as a crowd here are there any

1380
01:07:54,880 --> 01:08:13,440
answers to that questions

1381
01:08:10,240 --> 01:08:13,439
i'm not hearing any

1382
01:08:14,480 --> 01:08:18,238
russ sorry i just put up the hand maybe

1383
01:08:17,359 --> 01:08:22,239
can i just speak

1384
01:08:18,238 --> 01:08:25,358
quickly sure go ahead um

1385
01:08:22,238 --> 01:08:26,559
from me being both uh as mime implement

1386
01:08:25,359 --> 01:08:29,920
as well as

1387
01:08:26,560 --> 01:08:31,839
i'm a client implementer the um

1388
01:08:29,920 --> 01:08:33,520
positive thing about threading you can

1389
01:08:31,839 --> 01:08:37,040
thread methods

1390
01:08:33,520 --> 01:08:40,799
without downloading them in full

1391
01:08:37,040 --> 01:08:43,519
um so not being able to thread them

1392
01:08:40,799 --> 01:08:45,040
would you know if you have to download

1393
01:08:43,520 --> 01:08:45,759
all the messages before you can thread

1394
01:08:45,040 --> 01:08:48,799
them that's

1395
01:08:45,759 --> 01:08:50,000
way more bandwidth way more cpu power

1396
01:08:48,799 --> 01:08:51,439
and stuff like that you might

1397
01:08:50,000 --> 01:08:53,279
agree or disagree with this goal but

1398
01:08:51,439 --> 01:08:55,678
this is basically the advantage of this

1399
01:08:53,279 --> 01:08:55,679
approach

1400
01:09:05,040 --> 01:09:09,278
anyone else with experience they want to

1401
01:09:07,040 --> 01:09:09,278
share

1402
01:09:17,920 --> 01:09:21,120
the only other thing yeah the only thing

1403
01:09:20,399 --> 01:09:23,198
i wanted to

1404
01:09:21,120 --> 01:09:25,040
mention here is i'm maybe showing my

1405
01:09:23,198 --> 01:09:26,960
former mathematician roots but

1406
01:09:25,040 --> 01:09:29,439
uh there's an implicit assumption here

1407
01:09:26,960 --> 01:09:32,799
that uh your htc

1408
01:09:29,439 --> 01:09:35,040
function uh works on a header by here

1409
01:09:32,799 --> 01:09:36,000
header basis and i think it's a correct

1410
01:09:35,040 --> 01:09:38,319
assumption

1411
01:09:36,000 --> 01:09:40,238
that there isn't a hcp we would want to

1412
01:09:38,319 --> 01:09:42,319
think of that that doesn't work in that

1413
01:09:40,238 --> 01:09:44,799
manner but that's

1414
01:09:42,319 --> 01:09:46,400
one of the this one of the drawbacks of

1415
01:09:44,799 --> 01:09:47,679
this mathematical model that you have

1416
01:09:46,399 --> 01:09:49,839
here

1417
01:09:47,679 --> 01:09:52,158
yes um so there's a number of sort of

1418
01:09:49,839 --> 01:09:53,439
sneaky implicit assumptions in the hcp

1419
01:09:52,158 --> 01:09:55,199
as it's defined here

1420
01:09:53,439 --> 01:09:56,639
and if we find that those assumptions

1421
01:09:55,199 --> 01:09:59,519
are are un

1422
01:09:56,640 --> 01:10:00,159
are you know problematically wrong i'm

1423
01:09:59,520 --> 01:10:02,159
fine with

1424
01:10:00,159 --> 01:10:03,440
trying to refine how we do how we

1425
01:10:02,159 --> 01:10:06,480
declare in hcp

1426
01:10:03,440 --> 01:10:09,199
in addition to what tim mentions it also

1427
01:10:06,480 --> 01:10:10,639
um the function is the benefit of being

1428
01:10:09,199 --> 01:10:13,199
sort of stateless

1429
01:10:10,640 --> 01:10:15,520
in that uh it's probably not supposed to

1430
01:10:13,199 --> 01:10:18,559
like keep track of what other

1431
01:10:15,520 --> 01:10:18,560
scrubbing it's done

1432
01:10:18,800 --> 01:10:24,159
it's not it doesn't appear to be ordered

1433
01:10:21,840 --> 01:10:25,440
it doesn't appear to have there's no

1434
01:10:24,159 --> 01:10:27,839
other inputs like

1435
01:10:25,440 --> 01:10:29,599
other special information that maybe the

1436
01:10:27,840 --> 01:10:30,000
header maybe the mail user agent happens

1437
01:10:29,600 --> 01:10:32,800
to know

1438
01:10:30,000 --> 01:10:34,560
at message composition time so it is it

1439
01:10:32,800 --> 01:10:36,159
is actually a fairly constrained space

1440
01:10:34,560 --> 01:10:38,480
to do the reasoning about

1441
01:10:36,159 --> 01:10:39,759
and if people come up with proposed hcps

1442
01:10:38,480 --> 01:10:40,639
that require a different function

1443
01:10:39,760 --> 01:10:43,679
signature

1444
01:10:40,640 --> 01:10:44,640
then you know we can talk about them

1445
01:10:43,679 --> 01:10:46,719
and we can talk about changing the

1446
01:10:44,640 --> 01:10:49,199
signature of it just you know like

1447
01:10:46,719 --> 01:10:50,000
new inputs right like a user flag that

1448
01:10:49,199 --> 01:10:52,480
says

1449
01:10:50,000 --> 01:10:54,159
do this and that um but i think that

1450
01:10:52,480 --> 01:10:55,759
trying to keep it as simple as possible

1451
01:10:54,159 --> 01:10:57,440
in this initial version

1452
01:10:55,760 --> 01:10:58,960
so that we under you know we have a

1453
01:10:57,440 --> 01:10:59,599
clear thing that we can suggest

1454
01:10:58,960 --> 01:11:03,040
initially

1455
01:10:59,600 --> 01:11:03,040
is going to be a useful approach

1456
01:11:06,239 --> 01:11:11,440
um so uh we're going to probably try to

1457
01:11:09,840 --> 01:11:14,480
do a call on the list

1458
01:11:11,440 --> 01:11:15,919
for people's feedback about what they

1459
01:11:14,480 --> 01:11:19,040
think the default

1460
01:11:15,920 --> 01:11:20,320
hcp should be in this draft but i really

1461
01:11:19,040 --> 01:11:24,159
don't want us to get

1462
01:11:20,320 --> 01:11:26,239
super bogged down on that question

1463
01:11:24,159 --> 01:11:28,719
because i think that we don't actually

1464
01:11:26,239 --> 01:11:29,599
know i think the goal of this draft in

1465
01:11:28,719 --> 01:11:32,880
general

1466
01:11:29,600 --> 01:11:34,400
is to declare a mechanism and get people

1467
01:11:32,880 --> 01:11:35,840
to implement the mechanism on both

1468
01:11:34,400 --> 01:11:37,199
sending and receiving sides

1469
01:11:35,840 --> 01:11:39,679
and then we'll actually have the ability

1470
01:11:37,199 --> 01:11:41,120
to experiment with additional hcps

1471
01:11:39,679 --> 01:11:43,199
and i think follow-up drafts can cover

1472
01:11:41,120 --> 01:11:44,800
that so anyway

1473
01:11:43,199 --> 01:11:46,320
you know i'm just raising the point that

1474
01:11:44,800 --> 01:11:48,640
we do need to make a decision about this

1475
01:11:46,320 --> 01:11:50,000
draft i only want to recommend one

1476
01:11:48,640 --> 01:11:51,120
because i want this draft to basically

1477
01:11:50,000 --> 01:11:52,800
be something where you where an

1478
01:11:51,120 --> 01:11:56,000
implementer can just go check stuff off

1479
01:11:52,800 --> 01:11:58,320
and not have to make any hard decisions

1480
01:11:56,000 --> 01:11:59,520
one additional note about the hcp which

1481
01:11:58,320 --> 01:12:02,799
is awkward

1482
01:11:59,520 --> 01:12:05,199
is that the implementer of the hcp

1483
01:12:02,800 --> 01:12:07,040
is the sender but the person who is

1484
01:12:05,199 --> 01:12:09,199
affected by it in terms of server-side

1485
01:12:07,040 --> 01:12:11,760
threading for example

1486
01:12:09,199 --> 01:12:13,040
is the recipient and it's possible that

1487
01:12:11,760 --> 01:12:16,800
you need some sort

1488
01:12:13,040 --> 01:12:18,560
of um uh i don't know signaling

1489
01:12:16,800 --> 01:12:20,719
mechanism between male clients

1490
01:12:18,560 --> 01:12:21,679
that says i'm fine if you want to use

1491
01:12:20,719 --> 01:12:24,080
hcp strong

1492
01:12:21,679 --> 01:12:26,640
for example so again i can i would

1493
01:12:24,080 --> 01:12:28,559
imagine that being

1494
01:12:26,640 --> 01:12:30,560
future work not part of this particular

1495
01:12:28,560 --> 01:12:32,400
draft but you know the draft is

1496
01:12:30,560 --> 01:12:34,400
suggesting that that the sender

1497
01:12:32,400 --> 01:12:35,519
this is just the state of play and email

1498
01:12:34,400 --> 01:12:39,120
the sender is gonna have to make some

1499
01:12:35,520 --> 01:12:42,800
decisions on behalf of the recipient

1500
01:12:39,120 --> 01:12:45,280
so um that was the

1501
01:12:42,800 --> 01:12:48,159
kind of reasoning that led to s5

1502
01:12:45,280 --> 01:12:48,159
capabilities

1503
01:12:49,040 --> 01:12:55,440
you know what uh encryption algorithms

1504
01:12:53,120 --> 01:12:58,640
do different recipients support

1505
01:12:55,440 --> 01:12:58,639
that the uh

1506
01:12:58,960 --> 01:13:05,199
sender could learn over time to know

1507
01:13:02,880 --> 01:13:06,800
which algorithms for which collection of

1508
01:13:05,199 --> 01:13:11,519
recipients

1509
01:13:06,800 --> 01:13:14,000
to use and we haven't seen

1510
01:13:11,520 --> 01:13:14,719
that that really has influenced the

1511
01:13:14,000 --> 01:13:19,840
sender's

1512
01:13:14,719 --> 01:13:23,840
choice in encryption algorithm

1513
01:13:19,840 --> 01:13:26,239
at least you know it hasn't had

1514
01:13:23,840 --> 01:13:28,800
it hasn't been the wild success that we

1515
01:13:26,239 --> 01:13:32,000
hoped it would be

1516
01:13:28,800 --> 01:13:33,520
and other things that were put in there

1517
01:13:32,000 --> 01:13:35,600
are like whether compression was

1518
01:13:33,520 --> 01:13:38,719
supported stuff like that

1519
01:13:35,600 --> 01:13:43,040
so um

1520
01:13:38,719 --> 01:13:46,480
i'm just not sure whether uh putting a

1521
01:13:43,040 --> 01:13:48,159
adding a clause to the s mine

1522
01:13:46,480 --> 01:13:51,360
capabilities for which

1523
01:13:48,159 --> 01:13:54,080
hcps you prefer um

1524
01:13:51,360 --> 01:13:56,080
is is would be any different than what

1525
01:13:54,080 --> 01:13:58,800
you just suggested

1526
01:13:56,080 --> 01:13:59,280
yep um and i you know i agree with you

1527
01:13:58,800 --> 01:14:00,880
that

1528
01:13:59,280 --> 01:14:02,400
that sounds like the most plausible

1529
01:14:00,880 --> 01:14:04,400
place to do it i also agree with you

1530
01:14:02,400 --> 01:14:06,799
that i have no idea if it would work

1531
01:14:04,400 --> 01:14:10,400
um but i just want to say that we don't

1532
01:14:06,800 --> 01:14:10,400
need to do that for this draft

1533
01:14:11,120 --> 01:14:14,400
i just i just wanted to note the

1534
01:14:13,120 --> 01:14:19,280
parallel for

1535
01:14:14,400 --> 01:14:19,280
for the way people think about it yep

1536
01:14:21,120 --> 01:14:25,199
uh alexia is that a new hand or an old

1537
01:14:23,040 --> 01:14:25,199
one

1538
01:14:26,640 --> 01:14:29,840
old one

1539
01:14:30,159 --> 01:14:34,080
you can uncue yourself with the same

1540
01:14:31,679 --> 01:14:36,159
button you use to enqueue yourself

1541
01:14:34,080 --> 01:14:37,280
if you want okay so i just had one more

1542
01:14:36,159 --> 01:14:40,480
slide here

1543
01:14:37,280 --> 01:14:43,759
um um

1544
01:14:40,480 --> 01:14:46,159
sorry um so in the course of

1545
01:14:43,760 --> 01:14:47,840
trying to tighten this draft up and make

1546
01:14:46,159 --> 01:14:48,799
it a clearer set of guidance for

1547
01:14:47,840 --> 01:14:50,640
implementers

1548
01:14:48,800 --> 01:14:52,800
i actually realize that there are some

1549
01:14:50,640 --> 01:14:55,440
uh interesting subtleties

1550
01:14:52,800 --> 01:14:56,320
um and you know russ feel free to to

1551
01:14:55,440 --> 01:14:59,280
yank this

1552
01:14:56,320 --> 01:14:59,599
because i could go uh far far over time

1553
01:14:59,280 --> 01:15:01,040
and

1554
01:14:59,600 --> 01:15:02,320
in all of the like weird details and

1555
01:15:01,040 --> 01:15:03,519
corner cases that came up in this

1556
01:15:02,320 --> 01:15:06,159
discussion

1557
01:15:03,520 --> 01:15:06,800
um but just to identify a couple of

1558
01:15:06,159 --> 01:15:08,400
interesting

1559
01:15:06,800 --> 01:15:10,640
ones that came up around the header

1560
01:15:08,400 --> 01:15:14,480
confidentiality policy question

1561
01:15:10,640 --> 01:15:14,880
um uh and this is this is something

1562
01:15:14,480 --> 01:15:16,239
again

1563
01:15:14,880 --> 01:15:17,760
we may not solve in this particular

1564
01:15:16,239 --> 01:15:18,879
draft i just want to give people a heads

1565
01:15:17,760 --> 01:15:19,760
up if you're a male user agent

1566
01:15:18,880 --> 01:15:20,800
implementer

1567
01:15:19,760 --> 01:15:22,719
and you're thinking about these

1568
01:15:20,800 --> 01:15:24,080
questions you know i'd love to hear your

1569
01:15:22,719 --> 01:15:26,320
feedback on how you would solve the

1570
01:15:24,080 --> 01:15:28,400
problem but so here's an example

1571
01:15:26,320 --> 01:15:30,480
the sender some you receive a message

1572
01:15:28,400 --> 01:15:32,320
from someone who use a stronger hcp than

1573
01:15:30,480 --> 01:15:34,718
you would use by default

1574
01:15:32,320 --> 01:15:36,239
when you reply to their message you're

1575
01:15:34,719 --> 01:15:38,000
going to stuff some stuff in header

1576
01:15:36,239 --> 01:15:39,440
fields that they would have obscured but

1577
01:15:38,000 --> 01:15:41,120
you didn't

1578
01:15:39,440 --> 01:15:42,559
now we all know that replying to an

1579
01:15:41,120 --> 01:15:44,159
encrypted email in the clear

1580
01:15:42,560 --> 01:15:45,520
is pretty bad form and you don't want

1581
01:15:44,159 --> 01:15:46,320
your mail user agent to be the one that

1582
01:15:45,520 --> 01:15:49,280
does that

1583
01:15:46,320 --> 01:15:50,480
so how do you adjust your hcp if you

1584
01:15:49,280 --> 01:15:53,599
receive a message

1585
01:15:50,480 --> 01:15:56,639
from someone with a stronger um

1586
01:15:53,600 --> 01:15:58,719
uh uh with

1587
01:15:56,640 --> 01:16:00,080
with a stronger hcp than than you have

1588
01:15:58,719 --> 01:16:04,000
how do you avoid

1589
01:16:00,080 --> 01:16:06,000
like say they protect the um

1590
01:16:04,000 --> 01:16:07,679
they pre you know say they're using http

1591
01:16:06,000 --> 01:16:09,199
strong and they strip out references and

1592
01:16:07,679 --> 01:16:11,679
then reply to and they

1593
01:16:09,199 --> 01:16:13,120
mangle the message id but you're you

1594
01:16:11,679 --> 01:16:15,760
suggest sending

1595
01:16:13,120 --> 01:16:17,519
using http minimal um are you going to

1596
01:16:15,760 --> 01:16:18,239
end up leaking all of their references

1597
01:16:17,520 --> 01:16:20,560
tags that

1598
01:16:18,239 --> 01:16:22,718
that they avoided leaking before like

1599
01:16:20,560 --> 01:16:26,400
that's a little bit weird and awkward

1600
01:16:22,719 --> 01:16:29,520
another point you can imagine some uh

1601
01:16:26,400 --> 01:16:32,719
some hcps that subtly

1602
01:16:29,520 --> 01:16:35,280
obfuscate a field not completely

1603
01:16:32,719 --> 01:16:35,920
but for example you know when i send a

1604
01:16:35,280 --> 01:16:38,960
message

1605
01:16:35,920 --> 01:16:41,120
my date exposes my system's time zone

1606
01:16:38,960 --> 01:16:42,400
and i don't need to do that um why do i

1607
01:16:41,120 --> 01:16:43,599
need to send why do i need to expose

1608
01:16:42,400 --> 01:16:45,040
that on the wire maybe i want the

1609
01:16:43,600 --> 01:16:47,199
recipient to know what time zone i'm in

1610
01:16:45,040 --> 01:16:48,640
but i don't want the

1611
01:16:47,199 --> 01:16:50,400
i don't want the mail transport system

1612
01:16:48,640 --> 01:16:52,560
to know what times i'm in so maybe i

1613
01:16:50,400 --> 01:16:56,000
have an hcp that takes the date

1614
01:16:52,560 --> 01:16:57,600
and just translates it to gmt um

1615
01:16:56,000 --> 01:16:59,679
or utc or whatever we're calling it

1616
01:16:57,600 --> 01:17:01,280
these days right or maybe it takes the

1617
01:16:59,679 --> 01:17:03,600
email addresses that are in the to

1618
01:17:01,280 --> 01:17:05,040
and the from header headers and it

1619
01:17:03,600 --> 01:17:07,360
removes all the display names and just

1620
01:17:05,040 --> 01:17:09,120
puts them as raw email addresses

1621
01:17:07,360 --> 01:17:11,440
in those headers right so these are

1622
01:17:09,120 --> 01:17:14,400
subtle obfuscations they would show up

1623
01:17:11,440 --> 01:17:15,839
when you're when you're looking at uh at

1624
01:17:14,400 --> 01:17:16,960
an email they would show up as being

1625
01:17:15,840 --> 01:17:18,640
things that don't match

1626
01:17:16,960 --> 01:17:20,400
the outside of the envelope doesn't

1627
01:17:18,640 --> 01:17:22,159
match the inside of the

1628
01:17:20,400 --> 01:17:24,080
the cryptographic envelope you know it

1629
01:17:22,159 --> 01:17:27,360
doesn't match what's on the inside

1630
01:17:24,080 --> 01:17:29,519
um but it's not like it's fully

1631
01:17:27,360 --> 01:17:30,960
confidential because the actual date is

1632
01:17:29,520 --> 01:17:32,400
still there just the time zone's gone

1633
01:17:30,960 --> 01:17:34,159
right or the email address is there but

1634
01:17:32,400 --> 01:17:36,080
the display name is gone

1635
01:17:34,159 --> 01:17:37,679
um and so there there's like a user

1636
01:17:36,080 --> 01:17:40,239
interface and user experience question

1637
01:17:37,679 --> 01:17:42,880
about how you identify to the user

1638
01:17:40,239 --> 01:17:44,718
that um a header might have been

1639
01:17:42,880 --> 01:17:45,679
obfuscated or might have been partly

1640
01:17:44,719 --> 01:17:47,600
obfuscated

1641
01:17:45,679 --> 01:17:50,560
that i think is a is a real challenge

1642
01:17:47,600 --> 01:17:52,000
from a usability perspective

1643
01:17:50,560 --> 01:17:53,120
and it's also a challenge in terms of

1644
01:17:52,000 --> 01:17:54,560
when you're looking at a message and

1645
01:17:53,120 --> 01:17:54,880
you're trying to decide how to reply to

1646
01:17:54,560 --> 01:17:56,159
it

1647
01:17:54,880 --> 01:17:58,800
which headers do you want to make sure

1648
01:17:56,159 --> 01:18:00,879
you obfuscate him in what way

1649
01:17:58,800 --> 01:18:02,000
so that you don't end up leaking more of

1650
01:18:00,880 --> 01:18:05,920
the information

1651
01:18:02,000 --> 01:18:07,440
than came in and you know bernie already

1652
01:18:05,920 --> 01:18:08,800
mentioned questions about what what is

1653
01:18:07,440 --> 01:18:10,400
the impact of header confidentiality

1654
01:18:08,800 --> 01:18:12,719
policy on

1655
01:18:10,400 --> 01:18:14,159
imap threading imap header search

1656
01:18:12,719 --> 01:18:15,120
server-side spam filtering and things

1657
01:18:14,159 --> 01:18:16,400
like that

1658
01:18:15,120 --> 01:18:17,840
so these are just some wrinkles that

1659
01:18:16,400 --> 01:18:19,440
we're going to need to grapple with if

1660
01:18:17,840 --> 01:18:20,880
this thing actually gets traction which

1661
01:18:19,440 --> 01:18:27,040
i hope it will

1662
01:18:20,880 --> 01:18:28,239
but i wanted people to have it in mind

1663
01:18:27,040 --> 01:18:30,560
bernie's in the queue bernie want to

1664
01:18:28,239 --> 01:18:30,559
speak up

1665
01:18:31,520 --> 01:18:36,560
yes just a remark regarding this set of

1666
01:18:34,640 --> 01:18:38,640
confidential policies strong

1667
01:18:36,560 --> 01:18:41,520
it's basically what we have implemented

1668
01:18:38,640 --> 01:18:43,760
at pep and we are only using the inner

1669
01:18:41,520 --> 01:18:45,440
message and leave the auto message out

1670
01:18:43,760 --> 01:18:47,040
but

1671
01:18:45,440 --> 01:18:48,639
sometimes comparing the outer and the

1672
01:18:47,040 --> 01:18:49,920
inner side may be confusing as you

1673
01:18:48,640 --> 01:18:51,840
mentioned but

1674
01:18:49,920 --> 01:18:54,960
i don't see a problem with the http

1675
01:18:51,840 --> 01:18:56,880
strong in the implementation wise

1676
01:18:54,960 --> 01:18:58,239
question is only like what we do with

1677
01:18:56,880 --> 01:19:00,239
implementations that do not

1678
01:18:58,239 --> 01:19:02,080
implement it correctly and start to leak

1679
01:19:00,239 --> 01:19:04,320
data

1680
01:19:02,080 --> 01:19:06,719
yeah so i i want to be clear when you

1681
01:19:04,320 --> 01:19:08,480
say that what pep only uses the

1682
01:19:06,719 --> 01:19:09,920
the inner layer and leaves the outer

1683
01:19:08,480 --> 01:19:11,280
layer alone

1684
01:19:09,920 --> 01:19:13,120
one way to interpret that would be that

1685
01:19:11,280 --> 01:19:14,000
you're talking about how you receive a

1686
01:19:13,120 --> 01:19:16,400
message

1687
01:19:14,000 --> 01:19:18,400
right and i want to be clear that http

1688
01:19:16,400 --> 01:19:21,440
has nothing to do with message receipt

1689
01:19:18,400 --> 01:19:23,839
right we have influences yeah yeah

1690
01:19:21,440 --> 01:19:25,519
i agree today well but yeah but so but

1691
01:19:23,840 --> 01:19:27,120
so the way the draft is written

1692
01:19:25,520 --> 01:19:29,440
there is there are no decisions to be

1693
01:19:27,120 --> 01:19:31,920
made at receipt time we have the draft

1694
01:19:29,440 --> 01:19:32,960
outlines a deterministic set of ways to

1695
01:19:31,920 --> 01:19:34,719
handle the message

1696
01:19:32,960 --> 01:19:36,000
and of course you know implementers who

1697
01:19:34,719 --> 01:19:38,239
haven't implemented the draft

1698
01:19:36,000 --> 01:19:40,159
won't do those things uh but there are

1699
01:19:38,239 --> 01:19:40,400
no choices to be made at receipt time it

1700
01:19:40,159 --> 01:19:43,199
is

1701
01:19:40,400 --> 01:19:43,759
it is an unambiguous mechanical process

1702
01:19:43,199 --> 01:19:45,440
the only

1703
01:19:43,760 --> 01:19:48,000
choices that you have are at sending

1704
01:19:45,440 --> 01:19:50,639
time and that includes you know so the

1705
01:19:48,000 --> 01:19:52,239
the tricky bit of course is sending time

1706
01:19:50,640 --> 01:19:53,760
that involves a reply

1707
01:19:52,239 --> 01:19:56,320
right that's where the subtleties really

1708
01:19:53,760 --> 01:19:59,040
get um really get tough

1709
01:19:56,320 --> 01:19:59,519
but um but yeah but but just to be clear

1710
01:19:59,040 --> 01:20:00,960
like what

1711
01:19:59,520 --> 01:20:02,159
you know when bernie's saying that that

1712
01:20:00,960 --> 01:20:04,880
he's implemented that pep has

1713
01:20:02,159 --> 01:20:04,879
implemented this

1714
01:20:05,840 --> 01:20:09,120
i think what you're saying is that pep

1715
01:20:07,040 --> 01:20:12,159
is implementing the hcp strong

1716
01:20:09,120 --> 01:20:12,159
for sending time

1717
01:20:12,719 --> 01:20:18,000
and maybe that means bernie that you can

1718
01:20:15,840 --> 01:20:19,360
report back with some data of what your

1719
01:20:18,000 --> 01:20:21,440
experiences are

1720
01:20:19,360 --> 01:20:22,480
in terms of sending messages like that

1721
01:20:21,440 --> 01:20:25,280
to

1722
01:20:22,480 --> 01:20:26,400
users that have male user agents that

1723
01:20:25,280 --> 01:20:28,719
fall in one of those

1724
01:20:26,400 --> 01:20:30,879
different categories that are outlined

1725
01:20:28,719 --> 01:20:34,000
in the

1726
01:20:30,880 --> 01:20:34,800
in this uh evaluation slide right just

1727
01:20:34,000 --> 01:20:36,960
so we can

1728
01:20:34,800 --> 01:20:38,400
we can talk about and reason about how

1729
01:20:36,960 --> 01:20:39,760
that goes

1730
01:20:38,400 --> 01:20:41,679
that kind of data would be really useful

1731
01:20:39,760 --> 01:20:44,400
for us and

1732
01:20:41,679 --> 01:20:45,679
yeah yeah like first of all i was

1733
01:20:44,400 --> 01:20:47,839
referring to the

1734
01:20:45,679 --> 01:20:49,600
to what you said that the sender makes a

1735
01:20:47,840 --> 01:20:50,400
choice that has an impact on the

1736
01:20:49,600 --> 01:20:53,280
receiver

1737
01:20:50,400 --> 01:20:55,199
that was basically comment about so of

1738
01:20:53,280 --> 01:20:57,519
course

1739
01:20:55,199 --> 01:20:59,360
this is on the sending side but it

1740
01:20:57,520 --> 01:21:00,239
impacts the receiver and what i want to

1741
01:20:59,360 --> 01:21:02,000
say we have

1742
01:21:00,239 --> 01:21:03,599
we have a system in place that didn't

1743
01:21:02,000 --> 01:21:05,360
cause any of these issues

1744
01:21:03,600 --> 01:21:06,480
that we observed that doesn't mean that

1745
01:21:05,360 --> 01:21:08,000
they don't show up with other

1746
01:21:06,480 --> 01:21:10,000
implementations

1747
01:21:08,000 --> 01:21:11,520
but that's all what i said and uh yeah

1748
01:21:10,000 --> 01:21:15,840
we can share the experience

1749
01:21:11,520 --> 01:21:18,080
if that is needed or if that is useful

1750
01:21:15,840 --> 01:21:18,080
great

1751
01:21:19,280 --> 01:21:24,480
so i think that wraps up this this

1752
01:21:21,199 --> 01:21:24,480
presentation unless other folks have

1753
01:21:26,840 --> 01:21:29,840
comments

1754
01:21:31,120 --> 01:21:35,440
hearing nothing i will stop sharing that

1755
01:21:32,880 --> 01:21:39,040
slide deck

1756
01:21:35,440 --> 01:21:40,839
okay i think you wanna uh at this point

1757
01:21:39,040 --> 01:21:44,159
we're moving on to

1758
01:21:40,840 --> 01:21:46,480
um prospective

1759
01:21:44,159 --> 01:21:46,480
work

1760
01:21:48,000 --> 01:21:54,639
the each of these has been talked about

1761
01:21:51,280 --> 01:21:55,040
a little bit on the mail list the first

1762
01:21:54,639 --> 01:21:59,199
one

1763
01:21:55,040 --> 01:22:02,400
is the end-to-end mail guidance and

1764
01:21:59,199 --> 01:22:05,040
um when this thread started

1765
01:22:02,400 --> 01:22:06,879
dkg observed that we probably would have

1766
01:22:05,040 --> 01:22:10,480
to recharter to

1767
01:22:06,880 --> 01:22:13,280
make sure this is uh within scope

1768
01:22:10,480 --> 01:22:14,239
and so i just wanted to preface your

1769
01:22:13,280 --> 01:22:17,280
presentation

1770
01:22:14,239 --> 01:22:20,400
with that making sure that was

1771
01:22:17,280 --> 01:22:20,400
in everyone's mind

1772
01:22:22,320 --> 01:22:25,840
okay go ahead

1773
01:22:25,920 --> 01:22:32,159
um oh you let go of the screen

1774
01:22:30,080 --> 01:22:33,440
okay i'm changing i'm sharing a

1775
01:22:32,159 --> 01:22:36,400
different uh yeah

1776
01:22:33,440 --> 01:22:38,080
i get a window here let's see here how

1777
01:22:36,400 --> 01:22:41,679
does this work

1778
01:22:38,080 --> 01:22:44,719
something like that

1779
01:22:41,679 --> 01:22:47,920
um yeah so

1780
01:22:44,719 --> 01:22:51,199
uh thanks i'm back um

1781
01:22:47,920 --> 01:22:53,120
so i don't actually think russ that i

1782
01:22:51,199 --> 01:22:54,719
intended to say that we must recharter

1783
01:22:53,120 --> 01:22:56,320
just that it occurred to me that maybe

1784
01:22:54,719 --> 01:22:59,920
chairs think we should recharter

1785
01:22:56,320 --> 01:23:01,759
uh i proposed a little bit of um

1786
01:22:59,920 --> 01:23:03,679
oh no you know i think the guidance i

1787
01:23:01,760 --> 01:23:06,880
proposed was about the

1788
01:23:03,679 --> 01:23:09,280
the sample um

1789
01:23:06,880 --> 01:23:10,080
certificates anyway i'm fine if we need

1790
01:23:09,280 --> 01:23:11,679
to recharge her

1791
01:23:10,080 --> 01:23:13,280
uh to do this like that doesn't

1792
01:23:11,679 --> 01:23:15,040
particularly bother me i will write up

1793
01:23:13,280 --> 01:23:19,360
some text if people think that's useful

1794
01:23:15,040 --> 01:23:23,440
yeah you i thought you proposed one but

1795
01:23:19,360 --> 01:23:27,040
regardless what we have to do is look at

1796
01:23:23,440 --> 01:23:27,040
whether the header protection

1797
01:23:27,520 --> 01:23:32,080
work item encompasses everything you

1798
01:23:31,040 --> 01:23:35,440
want to do here

1799
01:23:32,080 --> 01:23:38,080
so one alternative would be to

1800
01:23:35,440 --> 01:23:39,280
put more flexibility in that work item

1801
01:23:38,080 --> 01:23:41,360
if it doesn't

1802
01:23:39,280 --> 01:23:43,280
and the other would be to add a an

1803
01:23:41,360 --> 01:23:46,159
additional work item

1804
01:23:43,280 --> 01:23:47,440
yeah so the reason that i split this out

1805
01:23:46,159 --> 01:23:49,040
was because i think there's actually

1806
01:23:47,440 --> 01:23:51,360
general guidance here even for folks

1807
01:23:49,040 --> 01:23:53,920
that are not doing header protection

1808
01:23:51,360 --> 01:23:55,280
and so lumping this entirely under

1809
01:23:53,920 --> 01:23:56,239
header protection seems like it might be

1810
01:23:55,280 --> 01:23:59,440
a mistake because

1811
01:23:56,239 --> 01:24:00,799
i suspect if we can get a quorum of

1812
01:23:59,440 --> 01:24:02,638
implementers

1813
01:24:00,800 --> 01:24:03,840
actively talking about this i think

1814
01:24:02,639 --> 01:24:04,719
there's a lot of room for people to

1815
01:24:03,840 --> 01:24:06,159
share

1816
01:24:04,719 --> 01:24:08,080
observations that they have or

1817
01:24:06,159 --> 01:24:10,559
subtleties for their clients

1818
01:24:08,080 --> 01:24:11,679
um and in fact you know there are some

1819
01:24:10,560 --> 01:24:13,520
researchers who've done a bunch of

1820
01:24:11,679 --> 01:24:14,400
really interesting stuff recently i mean

1821
01:24:13,520 --> 01:24:17,440
even the

1822
01:24:14,400 --> 01:24:18,960
like the the e-fail folks um

1823
01:24:17,440 --> 01:24:20,080
who i would love to hear their guidance

1824
01:24:18,960 --> 01:24:21,760
that has nothing to do with header

1825
01:24:20,080 --> 01:24:22,639
protection but how to do you know how to

1826
01:24:21,760 --> 01:24:26,000
deal with other

1827
01:24:22,639 --> 01:24:28,560
uh particular kinds of problems so

1828
01:24:26,000 --> 01:24:30,080
um let me just give you a quick sense of

1829
01:24:28,560 --> 01:24:33,840
what's in the current

1830
01:24:30,080 --> 01:24:34,159
draft um so it's got like these concepts

1831
01:24:33,840 --> 01:24:36,000
like

1832
01:24:34,159 --> 01:24:38,239
cryptographic envelope and cryptographic

1833
01:24:36,000 --> 01:24:41,040
payload cryptographic layer

1834
01:24:38,239 --> 01:24:42,080
um which we're using in the header

1835
01:24:41,040 --> 01:24:44,480
protection work

1836
01:24:42,080 --> 01:24:45,920
um but those i think are useful concepts

1837
01:24:44,480 --> 01:24:47,599
just for thinking about how you

1838
01:24:45,920 --> 01:24:49,920
present a message and how you compose a

1839
01:24:47,600 --> 01:24:51,600
message as well um it tries to outline

1840
01:24:49,920 --> 01:24:52,239
what user expectations are for

1841
01:24:51,600 --> 01:24:55,140
end-to-end

1842
01:24:52,239 --> 01:24:56,959
encrypted email for example um

1843
01:24:55,140 --> 01:24:58,639
[Music]

1844
01:24:56,960 --> 01:25:00,080
users are looking for things that behave

1845
01:24:58,639 --> 01:25:01,440
like email

1846
01:25:00,080 --> 01:25:02,960
so if you propose something that's going

1847
01:25:01,440 --> 01:25:03,519
to give you an unencrypted email but it

1848
01:25:02,960 --> 01:25:04,639
breaks

1849
01:25:03,520 --> 01:25:06,880
a lot of things that are sort of

1850
01:25:04,639 --> 01:25:08,400
standard email features maybe this is

1851
01:25:06,880 --> 01:25:10,000
not the right place to do that work

1852
01:25:08,400 --> 01:25:11,759
maybe you need to propose a new

1853
01:25:10,000 --> 01:25:14,800
messaging system or

1854
01:25:11,760 --> 01:25:17,040
or some other platform um uh

1855
01:25:14,800 --> 01:25:18,560
it is intended to provide pretty

1856
01:25:17,040 --> 01:25:20,000
straightforward guidance for like here's

1857
01:25:18,560 --> 01:25:21,440
how you compose a message here's how you

1858
01:25:20,000 --> 01:25:21,840
interpret a message similar to the way

1859
01:25:21,440 --> 01:25:23,759
that

1860
01:25:21,840 --> 01:25:25,440
the header protection stuff works but

1861
01:25:23,760 --> 01:25:27,520
not necessarily about headers right just

1862
01:25:25,440 --> 01:25:30,638
like when you're composing the message

1863
01:25:27,520 --> 01:25:32,239
you know how should you like how should

1864
01:25:30,639 --> 01:25:33,600
you think about structuring it what

1865
01:25:32,239 --> 01:25:35,919
what kind of indicators should you give

1866
01:25:33,600 --> 01:25:38,480
to the user those kind of things

1867
01:25:35,920 --> 01:25:39,199
and then room for other pitfalls

1868
01:25:38,480 --> 01:25:40,718
concerns

1869
01:25:39,199 --> 01:25:43,199
like common traps that you find yourself

1870
01:25:40,719 --> 01:25:45,040
running into um

1871
01:25:43,199 --> 01:25:46,719
and then also test factors like i'd love

1872
01:25:45,040 --> 01:25:48,239
to see some examples of

1873
01:25:46,719 --> 01:25:51,520
here are some messages that people

1874
01:25:48,239 --> 01:25:51,519
typically have received

1875
01:25:52,719 --> 01:25:56,080
and here's how you know here's how

1876
01:25:54,800 --> 01:25:57,760
people might want to think about

1877
01:25:56,080 --> 01:26:01,199
interpreting them

1878
01:25:57,760 --> 01:26:02,480
um so you know some examples specific

1879
01:26:01,199 --> 01:26:03,759
examples of the types of things that are

1880
01:26:02,480 --> 01:26:06,239
in there right like

1881
01:26:03,760 --> 01:26:07,920
encrypt the entire message you know

1882
01:26:06,239 --> 01:26:08,480
encrypt the entire mime structure don't

1883
01:26:07,920 --> 01:26:11,199
have

1884
01:26:08,480 --> 01:26:12,879
some subparts that are encrypted or or

1885
01:26:11,199 --> 01:26:14,638
protected in one way and other subparts

1886
01:26:12,880 --> 01:26:16,880
that are protected in a different way

1887
01:26:14,639 --> 01:26:18,719
um don't render a failed signature

1888
01:26:16,880 --> 01:26:20,880
similar to the guidance that's in dkim

1889
01:26:18,719 --> 01:26:22,000
right like let's not treat a failed

1890
01:26:20,880 --> 01:26:23,920
signature as worse than

1891
01:26:22,000 --> 01:26:25,199
no signature just don't render it if

1892
01:26:23,920 --> 01:26:26,800
it's not there of course that's

1893
01:26:25,199 --> 01:26:28,960
you know maybe this is controversial

1894
01:26:26,800 --> 01:26:31,120
maybe we should take that out this is my

1895
01:26:28,960 --> 01:26:32,560
my perspective right now if the working

1896
01:26:31,120 --> 01:26:34,080
group does pick this up i would expect

1897
01:26:32,560 --> 01:26:35,199
to try to get working group consensus on

1898
01:26:34,080 --> 01:26:38,960
this stuff

1899
01:26:35,199 --> 01:26:40,400
um you know as bernie mentioned earlier

1900
01:26:38,960 --> 01:26:42,080
like we're encouraging people not to

1901
01:26:40,400 --> 01:26:44,239
send encrypted but unsigned messages

1902
01:26:42,080 --> 01:26:46,719
it's just a corner case that that causes

1903
01:26:44,239 --> 01:26:48,080
um weird rendering problems on on the

1904
01:26:46,719 --> 01:26:51,440
receiving side

1905
01:26:48,080 --> 01:26:52,639
um so forth so um so this

1906
01:26:51,440 --> 01:26:54,960
is the kind of guidance if you ever

1907
01:26:52,639 --> 01:26:57,920
worked on an unencrypted email

1908
01:26:54,960 --> 01:26:59,360
client uh you probably have a list of

1909
01:26:57,920 --> 01:27:00,320
things like this in your back pocket

1910
01:26:59,360 --> 01:27:02,799
that you ran into

1911
01:27:00,320 --> 01:27:04,320
that you you know stubbed your toe on um

1912
01:27:02,800 --> 01:27:05,760
or even just as a user

1913
01:27:04,320 --> 01:27:07,519
it'd be great to try to work some of

1914
01:27:05,760 --> 01:27:09,520
those things in here in a way that is

1915
01:27:07,520 --> 01:27:10,880
that is actionable by somebody who's

1916
01:27:09,520 --> 01:27:13,040
implementing

1917
01:27:10,880 --> 01:27:14,080
um so if you're interested in this read

1918
01:27:13,040 --> 01:27:15,679
the current draft

1919
01:27:14,080 --> 01:27:17,199
contribute suggestions there's a bunch

1920
01:27:15,679 --> 01:27:18,960
of to do's there

1921
01:27:17,199 --> 01:27:21,040
um and you're welcome to just like pick

1922
01:27:18,960 --> 01:27:22,239
one of those out of the to-do's and try

1923
01:27:21,040 --> 01:27:24,159
to implement it

1924
01:27:22,239 --> 01:27:26,718
um i'm currently working on it in

1925
01:27:24,159 --> 01:27:31,920
markdown this is the url for it here

1926
01:27:26,719 --> 01:27:34,239
it's get lab dkg e2 email guidance

1927
01:27:31,920 --> 01:27:35,760
note that that's gitlab and not github

1928
01:27:34,239 --> 01:27:38,718
if that's a problem for you let me know

1929
01:27:35,760 --> 01:27:40,480
i can mirror it someplace else but i

1930
01:27:38,719 --> 01:27:41,199
prefer to keep working on it and get

1931
01:27:40,480 --> 01:27:42,959
with people

1932
01:27:41,199 --> 01:27:44,320
and i welcome merge requests or pull

1933
01:27:42,960 --> 01:27:47,440
requests or whatever you want to call it

1934
01:27:44,320 --> 01:27:50,400
patches to the list are also fine

1935
01:27:47,440 --> 01:27:52,320
um so i would like to see lamps adopt

1936
01:27:50,400 --> 01:27:54,159
this if that means recharging i'm fine

1937
01:27:52,320 --> 01:27:56,400
with that i'm fine being an editor for

1938
01:27:54,159 --> 01:27:57,599
it if anybody wants to co-edit with me

1939
01:27:56,400 --> 01:27:59,120
that'd be great

1940
01:27:57,600 --> 01:28:00,639
if anybody wants to replace me as editor

1941
01:27:59,120 --> 01:28:02,000
that would be super i'm always happy to

1942
01:28:00,639 --> 01:28:03,920
have someone else do the work that i

1943
01:28:02,000 --> 01:28:06,000
thought i would have to do

1944
01:28:03,920 --> 01:28:07,679
so any i just think that we as

1945
01:28:06,000 --> 01:28:10,960
implementers and people who care about

1946
01:28:07,679 --> 01:28:12,239
um protected email should be

1947
01:28:10,960 --> 01:28:14,960
trying to talk to each other about the

1948
01:28:12,239 --> 01:28:16,799
expectations that we have

1949
01:28:14,960 --> 01:28:19,120
so yeah so that's the that's the short

1950
01:28:16,800 --> 01:28:21,040
run there um

1951
01:28:19,120 --> 01:28:22,159
if folks have comments i'd be happy to

1952
01:28:21,040 --> 01:28:29,840
hear them

1953
01:28:22,159 --> 01:28:29,839
and also happy to hear stuff on the list

1954
01:28:30,400 --> 01:28:34,879
the high level question is is there

1955
01:28:32,800 --> 01:28:37,600
anyone who thinks we should not

1956
01:28:34,880 --> 01:28:37,600
do this work

1957
01:28:41,600 --> 01:28:46,639
so for example if you think that any

1958
01:28:44,880 --> 01:28:49,360
thoughts about user experience

1959
01:28:46,639 --> 01:28:49,920
are should be off limits to the ietf you

1960
01:28:49,360 --> 01:28:52,080
should speak

1961
01:28:49,920 --> 01:28:57,840
up now because i warn you this draft is

1962
01:28:52,080 --> 01:28:57,840
going to talk about user experience

1963
01:29:01,520 --> 01:29:06,080
happy to see no obvious objections

1964
01:29:04,320 --> 01:29:10,719
although maybe the fact that

1965
01:29:06,080 --> 01:29:15,040
maybe the hour is helping to keep things

1966
01:29:10,719 --> 01:29:18,080
indeed so we we will continue the thread

1967
01:29:15,040 --> 01:29:19,440
on the list i do think um if you don't

1968
01:29:18,080 --> 01:29:20,800
want to couple this with header

1969
01:29:19,440 --> 01:29:25,040
protection

1970
01:29:20,800 --> 01:29:25,760
the um some words about interoperability

1971
01:29:25,040 --> 01:29:27,360
end to end

1972
01:29:25,760 --> 01:29:29,120
are probably going to be needed in the

1973
01:29:27,360 --> 01:29:32,400
charter there

1974
01:29:29,120 --> 01:29:32,400
are some things there

1975
01:29:33,040 --> 01:29:39,199
that regarding header protection

1976
01:29:37,520 --> 01:29:41,199
about increasing security while

1977
01:29:39,199 --> 01:29:43,759
maintaining interoperability

1978
01:29:41,199 --> 01:29:44,239
uh but if you don't want to couple with

1979
01:29:43,760 --> 01:29:46,159
that

1980
01:29:44,239 --> 01:29:50,080
this this is really about user

1981
01:29:46,159 --> 01:29:50,080
experience and interoperability

1982
01:29:50,239 --> 01:29:53,839
i i would agree with that russ and i i'm

1983
01:29:52,719 --> 01:29:56,400
happy to propose some

1984
01:29:53,840 --> 01:29:57,600
some uh an edit to the charter that

1985
01:29:56,400 --> 01:30:00,960
would make this

1986
01:29:57,600 --> 01:30:01,600
that would make this in scope okay um i

1987
01:30:00,960 --> 01:30:05,520
noticed

1988
01:30:01,600 --> 01:30:08,560
that uh we don't have

1989
01:30:05,520 --> 01:30:12,480
our a.d with us right now oh no we do

1990
01:30:08,560 --> 01:30:12,480
roman roman any concern with that

1991
01:30:12,719 --> 01:30:16,000
i don't have any concerns you know

1992
01:30:14,480 --> 01:30:16,559
generally i know there's always a

1993
01:30:16,000 --> 01:30:18,480
tension

1994
01:30:16,560 --> 01:30:21,120
with how broad and how specific we do

1995
01:30:18,480 --> 01:30:22,718
things in this working group

1996
01:30:21,120 --> 01:30:24,800
i'm in favor of always a little more

1997
01:30:22,719 --> 01:30:27,440
general so we don't have to constantly

1998
01:30:24,800 --> 01:30:30,960
recharter and i'm good with ux because

1999
01:30:27,440 --> 01:30:34,400
that's the whole other part of security

2000
01:30:30,960 --> 01:30:38,080
okay so um

2001
01:30:34,400 --> 01:30:41,280
why don't uh as a next step

2002
01:30:38,080 --> 01:30:43,840
in the thread uh dkg why don't you

2003
01:30:41,280 --> 01:30:45,040
propose that uh broadening of the

2004
01:30:43,840 --> 01:30:48,080
charter

2005
01:30:45,040 --> 01:30:51,199
and uh that

2006
01:30:48,080 --> 01:30:51,920
will guarantee that if there's anyone

2007
01:30:51,199 --> 01:30:53,839
who

2008
01:30:51,920 --> 01:30:55,840
is not happy with this work they will

2009
01:30:53,840 --> 01:31:00,159
speak up

2010
01:30:55,840 --> 01:31:00,159
yep i will do that

2011
01:31:01,040 --> 01:31:17,840
all right great um

2012
01:31:04,480 --> 01:31:17,839
if you could uh stop sharing your screen

2013
01:31:23,520 --> 01:31:26,400
so um

2014
01:31:28,320 --> 01:31:36,719
i'm going to talk briefly about the crmf

2015
01:31:31,679 --> 01:31:36,719
algorithm update document um

2016
01:31:38,239 --> 01:31:42,400
the goal of this is to update the

2017
01:31:40,560 --> 01:31:44,560
cryptographic algorithms for the

2018
01:31:42,400 --> 01:31:47,759
password-based mac

2019
01:31:44,560 --> 01:31:51,280
in crmf which is rfc

2020
01:31:47,760 --> 01:31:52,719
4211 the problem was discovered by

2021
01:31:51,280 --> 01:31:56,880
hendrick when he was

2022
01:31:52,719 --> 01:31:58,800
working on his algorithm document

2023
01:31:56,880 --> 01:32:01,440
and i noticed he was pulling in a bunch

2024
01:31:58,800 --> 01:32:04,480
of really old algorithms and he said

2025
01:32:01,440 --> 01:32:07,839
oh i have to because they're needed for

2026
01:32:04,480 --> 01:32:07,839
this password-based mac

2027
01:32:07,920 --> 01:32:12,719
what uh he was talking about was if you

2028
01:32:11,440 --> 01:32:16,320
go there

2029
01:32:12,719 --> 01:32:20,080
and look at section 4.4 of

2030
01:32:16,320 --> 01:32:23,599
crmf you'll see that it must support

2031
01:32:20,080 --> 01:32:27,120
sha-1 it must support hmac sha-1

2032
01:32:23,600 --> 01:32:27,840
it must support mac and it must support

2033
01:32:27,120 --> 01:32:31,760
triple des

2034
01:32:27,840 --> 01:32:34,000
mac well the idea is to

2035
01:32:31,760 --> 01:32:36,400
replace those choices with something

2036
01:32:34,000 --> 01:32:40,639
that's more modern

2037
01:32:36,400 --> 01:32:43,120
and so the proposed replacements after

2038
01:32:40,639 --> 01:32:44,639
a little bit of discussion on the list

2039
01:32:43,120 --> 01:32:47,280
are

2040
01:32:44,639 --> 01:32:48,639
the mandatory to implement being shot

2041
01:32:47,280 --> 01:32:52,840
256 and

2042
01:32:48,639 --> 01:32:54,800
hmac shot 256 at a should

2043
01:32:52,840 --> 01:32:58,719
aesgmac and

2044
01:32:54,800 --> 01:32:59,280
uh my first my zero zero version of this

2045
01:32:58,719 --> 01:33:01,679
had

2046
01:32:59,280 --> 01:33:03,759
cmac there that's what led to the

2047
01:33:01,679 --> 01:33:07,679
comments earlier

2048
01:33:03,760 --> 01:33:12,000
that gmax seemed to have a little

2049
01:33:07,679 --> 01:33:13,120
more support so the way forward would be

2050
01:33:12,000 --> 01:33:15,840
to do a

2051
01:33:13,120 --> 01:33:16,159
working group call for adoption i think

2052
01:33:15,840 --> 01:33:19,440
this

2053
01:33:16,159 --> 01:33:22,638
fits within the current charter

2054
01:33:19,440 --> 01:33:25,440
about supporting uh

2055
01:33:22,639 --> 01:33:27,199
modern cryptography of course since i

2056
01:33:25,440 --> 01:33:29,919
wrote this draft tim will make any

2057
01:33:27,199 --> 01:33:33,839
consensus calls related to it

2058
01:33:29,920 --> 01:33:34,639
um are there any concerns about moving

2059
01:33:33,840 --> 01:33:37,840
forward

2060
01:33:34,639 --> 01:33:37,840
with this

2061
01:33:38,560 --> 01:33:41,280
looking for

2062
01:33:43,679 --> 01:33:50,239
not seeing any hands not seeing anything

2063
01:33:46,159 --> 01:33:55,120
about this document in the chat

2064
01:33:50,239 --> 01:33:55,120
so tim i would ask you to start the

2065
01:33:55,360 --> 01:33:59,040
call for adoption on this one

2066
01:33:59,840 --> 01:34:19,840
all right

2067
01:34:04,239 --> 01:34:19,839
okay now

2068
01:34:26,960 --> 01:34:29,199
wrong

2069
01:34:30,960 --> 01:34:37,600
okay so um it turned out

2070
01:34:34,639 --> 01:34:38,560
that when i went to write the section in

2071
01:34:37,600 --> 01:34:41,520
the document

2072
01:34:38,560 --> 01:34:43,360
that we just discussed for how to do

2073
01:34:41,520 --> 01:34:46,400
gmac

2074
01:34:43,360 --> 01:34:50,159
i could not find

2075
01:34:46,400 --> 01:34:52,400
an algorithm identifier for it

2076
01:34:50,159 --> 01:34:52,400
so

2077
01:34:52,840 --> 01:34:57,360
[Music]

2078
01:34:54,480 --> 01:34:57,360
i asked

2079
01:34:58,159 --> 01:35:04,799
quinn and tim polk to uh look at that

2080
01:35:01,760 --> 01:35:09,040
and quinn came through and

2081
01:35:04,800 --> 01:35:12,320
uh assigned one for it

2082
01:35:09,040 --> 01:35:16,159
so the simple goal of this

2083
01:35:12,320 --> 01:35:18,960
document is to move forward and

2084
01:35:16,159 --> 01:35:18,960
put out the

2085
01:35:20,320 --> 01:35:28,400
ultimately rfc that defines those

2086
01:35:24,880 --> 01:35:30,480
algorithm identifiers and the associated

2087
01:35:28,400 --> 01:35:34,559
parameters

2088
01:35:30,480 --> 01:35:38,638
so they were assigned for

2089
01:35:34,560 --> 01:35:42,080
the three aes key sizes and

2090
01:35:38,639 --> 01:35:45,360
the parameters are all the same

2091
01:35:42,080 --> 01:35:47,440
for all three key sizes basically you

2092
01:35:45,360 --> 01:35:48,239
need a nonce because that's when gmac

2093
01:35:47,440 --> 01:35:50,719
works it's

2094
01:35:48,239 --> 01:35:52,239
essentially an iv for for the mac

2095
01:35:50,719 --> 01:35:55,440
function

2096
01:35:52,239 --> 01:35:59,330
and you can get

2097
01:35:55,440 --> 01:36:00,799
a resulting

2098
01:35:59,330 --> 01:36:05,679
[Music]

2099
01:36:00,800 --> 01:36:09,280
mac that is either 12 13 14 15 or 16

2100
01:36:05,679 --> 01:36:09,280
octets in size

2101
01:36:09,600 --> 01:36:13,040
so in order for the previous document to

2102
01:36:12,639 --> 01:36:16,239
work

2103
01:36:13,040 --> 01:36:19,280
we need this one tim already started

2104
01:36:16,239 --> 01:36:23,280
the call for consensus

2105
01:36:19,280 --> 01:36:27,119
or adoption on this document

2106
01:36:23,280 --> 01:36:27,119
and in fact it will end

2107
01:36:27,280 --> 01:36:33,840
a week from tomorrow so if uh

2108
01:36:30,639 --> 01:36:36,880
people have any concerns with this

2109
01:36:33,840 --> 01:36:40,320
please speak up on the mail list

2110
01:36:36,880 --> 01:36:44,000
and we'll address them

2111
01:36:40,320 --> 01:36:52,960
are there any concerns or questions

2112
01:36:44,000 --> 01:36:55,600
about this

2113
01:36:52,960 --> 01:36:58,719
okay i see some support in the chat i

2114
01:36:55,600 --> 01:37:02,080
see no hands

2115
01:36:58,719 --> 01:37:02,080
um so

2116
01:37:02,159 --> 01:37:09,759
um i think i'm done

2117
01:37:06,000 --> 01:37:12,880
this brings us to the end of the agenda

2118
01:37:09,760 --> 01:37:15,440
are there any other topics we need to

2119
01:37:12,880 --> 01:37:15,440
talk about

2120
01:37:18,840 --> 01:37:21,840
today

2121
01:37:22,880 --> 01:37:27,520
all right seeing no hands i think we're

2122
01:37:25,199 --> 01:37:28,239
done thank you very much to the note

2123
01:37:27,520 --> 01:37:31,679
takers

2124
01:37:28,239 --> 01:37:32,839
i've jumped over a couple times to look

2125
01:37:31,679 --> 01:37:36,080
at the

2126
01:37:32,840 --> 01:37:38,239
uh kodi md

2127
01:37:36,080 --> 01:37:40,880
looks like you guys did a fantastic job

2128
01:37:38,239 --> 01:37:44,718
thank you very much

2129
01:37:40,880 --> 01:37:49,130
and enjoy the rest of your itf

2130
01:37:44,719 --> 01:37:52,220
thank you

2131
01:37:49,130 --> 01:37:52,220
[Applause]

2132
01:38:06,560 --> 01:38:08,639
you

