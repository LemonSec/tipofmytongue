1
00:01:10,840 --> 00:01:13,840
so

2
00:01:24,840 --> 00:01:27,840
hey

3
00:01:37,360 --> 00:01:44,479
hello um i'm bob hinden and this is

4
00:01:40,880 --> 00:01:47,679
only tron with uh six man chairs

5
00:01:44,479 --> 00:01:50,720
welcome to ietf 109

6
00:01:47,680 --> 00:01:54,720
first of two six-man sessions

7
00:01:50,720 --> 00:01:57,840
um so using meat echo

8
00:01:54,720 --> 00:01:59,840
if you haven't read the procedures if

9
00:01:57,840 --> 00:02:03,680
you want to when we

10
00:01:59,840 --> 00:02:06,560
get to a discussion if you want to

11
00:02:03,680 --> 00:02:07,360
be recognized press the raise hand thing

12
00:02:06,560 --> 00:02:09,360
and then we'll

13
00:02:07,360 --> 00:02:10,639
tell you to talk then you can turn on

14
00:02:09,360 --> 00:02:14,160
your audio or

15
00:02:10,639 --> 00:02:16,809
and or video um

16
00:02:14,160 --> 00:02:18,239
and it'll be good to

17
00:02:16,810 --> 00:02:21,040
[Music]

18
00:02:18,239 --> 00:02:23,599
propose that for the speakers that you

19
00:02:21,040 --> 00:02:25,760
turn on your video

20
00:02:23,599 --> 00:02:27,839
and if that somehow interferes with the

21
00:02:25,760 --> 00:02:29,280
session we'll say so but you'll also

22
00:02:27,840 --> 00:02:32,640
need to turn on your

23
00:02:29,280 --> 00:02:35,680
audio and video it's the

24
00:02:32,640 --> 00:02:36,799
icons in the upper right so why don't we

25
00:02:35,680 --> 00:02:39,920
get started

26
00:02:36,800 --> 00:02:41,760
so this is um so

27
00:02:39,920 --> 00:02:43,518
here's the meeting notes how to use meat

28
00:02:41,760 --> 00:02:47,280
echo

29
00:02:43,519 --> 00:02:50,160
and remember to

30
00:02:47,280 --> 00:02:52,000
state your name when you speak blue

31
00:02:50,160 --> 00:02:53,440
sheets are automatic this time by

32
00:02:52,000 --> 00:02:56,879
logging in

33
00:02:53,440 --> 00:03:00,079
and the notes are on code

34
00:02:56,879 --> 00:03:00,640
mid however you say that in a separate

35
00:03:00,080 --> 00:03:05,519
window

36
00:03:00,640 --> 00:03:08,640
and you can join the jabra room by also

37
00:03:05,519 --> 00:03:10,400
clicking on the chat icon and i what i

38
00:03:08,640 --> 00:03:12,238
do is move it to a

39
00:03:10,400 --> 00:03:13,920
click on the move to a separate window

40
00:03:12,239 --> 00:03:15,360
and move it out of the way of the main

41
00:03:13,920 --> 00:03:19,119
presentation

42
00:03:15,360 --> 00:03:22,800
okay next slide

43
00:03:19,120 --> 00:03:26,799
so this is the no well we trust you have

44
00:03:22,800 --> 00:03:30,959
agreed to this and i won't read it you

45
00:03:26,799 --> 00:03:36,640
should have it memorized by now

46
00:03:30,959 --> 00:03:40,159
next slide uh we have a question

47
00:03:36,640 --> 00:03:40,159
edward go ahead

48
00:03:42,480 --> 00:03:47,840
you have to turn on your video or audio

49
00:03:45,440 --> 00:03:47,840
sorry

50
00:03:49,120 --> 00:03:55,840
we seem to have left the cue so

51
00:03:52,319 --> 00:03:59,280
okay we'll just move on yes

52
00:03:55,840 --> 00:04:02,080
it's easy to press the wrong button um

53
00:03:59,280 --> 00:04:02,480
so we're jabbering is automatic this

54
00:04:02,080 --> 00:04:05,599
time

55
00:04:02,480 --> 00:04:09,200
we do not have a jabra scribe but um

56
00:04:05,599 --> 00:04:12,079
i think that will be okay um

57
00:04:09,200 --> 00:04:13,040
you know if you but if you were we're

58
00:04:12,080 --> 00:04:15,280
both

59
00:04:13,040 --> 00:04:17,358
watching the jabber room so if anything

60
00:04:15,280 --> 00:04:20,478
has anything to raise

61
00:04:17,358 --> 00:04:20,478
you can still use it

62
00:04:21,519 --> 00:04:27,919
the oh we didn't update this barbara

63
00:04:24,960 --> 00:04:30,080
and zuping are going to be work on

64
00:04:27,919 --> 00:04:32,880
minutes

65
00:04:30,080 --> 00:04:35,599
and this little link for presentations

66
00:04:32,880 --> 00:04:35,600
next slide

67
00:04:35,840 --> 00:04:39,119
so again we have two sessions we're

68
00:04:38,240 --> 00:04:42,320
doing

69
00:04:39,120 --> 00:04:43,440
mostly the the new internet drafts this

70
00:04:42,320 --> 00:04:46,479
time

71
00:04:43,440 --> 00:04:48,880
um and

72
00:04:46,479 --> 00:04:50,560
you can all read this so some of these

73
00:04:48,880 --> 00:04:52,800
have had some discussion on the list

74
00:04:50,560 --> 00:04:55,199
some have not

75
00:04:52,800 --> 00:04:56,000
but we wanted to give the speakers a

76
00:04:55,199 --> 00:04:58,560
chance

77
00:04:56,000 --> 00:05:00,560
we as we said we got two two-hour

78
00:04:58,560 --> 00:05:04,320
sessions for this meeting

79
00:05:00,560 --> 00:05:05,039
next slide and this is the friday

80
00:05:04,320 --> 00:05:08,080
session

81
00:05:05,039 --> 00:05:11,280
we have um

82
00:05:08,080 --> 00:05:15,039
we'll do an introduction we'll have a

83
00:05:11,280 --> 00:05:19,599
t a report of the source routing

84
00:05:15,039 --> 00:05:22,400
basically the spring design team report

85
00:05:19,600 --> 00:05:23,280
um two working group graphs the minimum

86
00:05:22,400 --> 00:05:26,638
path and

87
00:05:23,280 --> 00:05:29,840
minimum mtu hop by hop option and

88
00:05:26,639 --> 00:05:33,120
application of alternate marking method

89
00:05:29,840 --> 00:05:36,320
and then one new draft

90
00:05:33,120 --> 00:05:38,639
that the request for a slot came in

91
00:05:36,320 --> 00:05:40,240
late so we put that at the end of the

92
00:05:38,639 --> 00:05:43,440
session

93
00:05:40,240 --> 00:05:43,440
um next slide

94
00:05:44,320 --> 00:05:51,680
okay yes so the document status

95
00:05:48,639 --> 00:05:53,520
update since the last meeting we have

96
00:05:51,680 --> 00:05:57,360
published one rfc

97
00:05:53,520 --> 00:06:01,120
that's the uh is icmp limits

98
00:05:57,360 --> 00:06:03,759
uh document that tom herbert authored

99
00:06:01,120 --> 00:06:06,160
eight eight eight three uh we have

100
00:06:03,759 --> 00:06:09,280
nothing in the roc edition of queue

101
00:06:06,160 --> 00:06:11,120
and we have three documents submitted to

102
00:06:09,280 --> 00:06:13,599
the iesg

103
00:06:11,120 --> 00:06:14,880
it's the temporary addresses based

104
00:06:13,600 --> 00:06:17,199
document

105
00:06:14,880 --> 00:06:18,400
it's the gratuitous neighbor discovery

106
00:06:17,199 --> 00:06:21,039
document

107
00:06:18,400 --> 00:06:22,960
that gen authored and it's the oem

108
00:06:21,039 --> 00:06:23,599
document for segment routine that's so

109
00:06:22,960 --> 00:06:27,120
far

110
00:06:23,600 --> 00:06:30,240
authored um so those are just

111
00:06:27,120 --> 00:06:32,479
uh just quite recently advanced to the

112
00:06:30,240 --> 00:06:33,039
isg so it will be a little while i think

113
00:06:32,479 --> 00:06:35,199
before

114
00:06:33,039 --> 00:06:37,360
eric gets to them and they continue

115
00:06:35,199 --> 00:06:41,120
through the process

116
00:06:37,360 --> 00:06:43,039
um then we have

117
00:06:41,120 --> 00:06:45,680
no documents in working group last call

118
00:06:43,039 --> 00:06:48,560
so we cleaned off our slate quite well

119
00:06:45,680 --> 00:06:49,039
and we have three documents in working

120
00:06:48,560 --> 00:06:51,039
group

121
00:06:49,039 --> 00:06:53,520
that we work on currently it's the path

122
00:06:51,039 --> 00:06:56,240
mtu hop by hop option that

123
00:06:53,520 --> 00:06:57,840
bob and gory will talk about later it's

124
00:06:56,240 --> 00:07:00,400
the alternate marking method that

125
00:06:57,840 --> 00:07:03,758
giuseppe will

126
00:07:00,400 --> 00:07:06,318
talk about on friday

127
00:07:03,759 --> 00:07:07,520
and it's the improving the robustness of

128
00:07:06,319 --> 00:07:09,199
of status

129
00:07:07,520 --> 00:07:11,359
stateless address also configuration by

130
00:07:09,199 --> 00:07:11,919
fernando that's not on the agenda for

131
00:07:11,360 --> 00:07:16,080
this

132
00:07:11,919 --> 00:07:19,280
this meeting um

133
00:07:16,080 --> 00:07:23,359
we have a report on friday

134
00:07:19,280 --> 00:07:25,679
uh for the um the design team the sr

135
00:07:23,360 --> 00:07:27,919
design team that is working on compact

136
00:07:25,680 --> 00:07:29,039
routing headers as sort of a follow-on

137
00:07:27,919 --> 00:07:31,599
work on the

138
00:07:29,039 --> 00:07:33,280
segment routing stuff that six man has

139
00:07:31,599 --> 00:07:37,360
been doing for a while

140
00:07:33,280 --> 00:07:39,840
um they have a session on

141
00:07:37,360 --> 00:07:40,880
friday morning just before six man on

142
00:07:39,840 --> 00:07:42,880
friday

143
00:07:40,880 --> 00:07:44,080
going through the design teamwork so

144
00:07:42,880 --> 00:07:47,039
that's

145
00:07:44,080 --> 00:07:48,000
certainly worth joining that session as

146
00:07:47,039 --> 00:07:50,000
well before

147
00:07:48,000 --> 00:07:51,440
they come and give a readout of the

148
00:07:50,000 --> 00:07:54,720
status

149
00:07:51,440 --> 00:07:56,879
um on friday that obviously affects

150
00:07:54,720 --> 00:07:58,720
uh you know that's kind of this crh

151
00:07:56,879 --> 00:08:01,440
document that ron has that has been

152
00:07:58,720 --> 00:08:02,800
left in stasis uh awaiting the decision

153
00:08:01,440 --> 00:08:05,759
from

154
00:08:02,800 --> 00:08:05,759
from the design team

155
00:08:06,400 --> 00:08:12,878
so uh fred templin i believe you are up

156
00:08:09,919 --> 00:08:15,359
let me get your slides um

157
00:08:12,879 --> 00:08:17,199
so fred is going to talk about the rp6

158
00:08:15,360 --> 00:08:21,199
neighbor option for the

159
00:08:17,199 --> 00:08:23,280
omni um the only draft we're not

160
00:08:21,199 --> 00:08:25,919
presenting the main draft here but

161
00:08:23,280 --> 00:08:27,198
only the neighbor discovery options fred

162
00:08:25,919 --> 00:08:30,479
you've unmuted yourself

163
00:08:27,199 --> 00:08:33,360
the floor is yours do you hear me

164
00:08:30,479 --> 00:08:35,279
we can hear you fine okay i'll send

165
00:08:33,360 --> 00:08:36,399
video too

166
00:08:35,279 --> 00:08:39,519
not that i'm the prettiest looking

167
00:08:36,399 --> 00:08:44,320
person to look at but there it is

168
00:08:39,519 --> 00:08:44,320
okay slowly not seeing this slide yet

169
00:08:44,399 --> 00:08:49,600
you're not seeing the slides

170
00:08:47,440 --> 00:08:50,800
is anyone else seeing them or fred can

171
00:08:49,600 --> 00:08:54,399
you see them

172
00:08:50,800 --> 00:08:56,399
i don't see slides i can't see them

173
00:08:54,399 --> 00:09:09,440
changing either let me disable and start

174
00:08:56,399 --> 00:09:10,880
again the sharing

175
00:09:09,440 --> 00:09:13,760
there you can see them right that's

176
00:09:10,880 --> 00:09:16,720
better good

177
00:09:13,760 --> 00:09:17,439
so go ahead fred okay so this is a draft

178
00:09:16,720 --> 00:09:20,320
on

179
00:09:17,440 --> 00:09:21,440
ipv6 neighbor discovery overlay

180
00:09:20,320 --> 00:09:24,480
multi-link network

181
00:09:21,440 --> 00:09:25,839
interface option a new ipv6 neighbor

182
00:09:24,480 --> 00:09:28,720
discovery option

183
00:09:25,839 --> 00:09:28,720
next chart please

184
00:09:28,959 --> 00:09:33,518
so the draft title here is here draft

185
00:09:31,120 --> 00:09:36,720
temple and six man omni option

186
00:09:33,519 --> 00:09:38,560
uh it is specifying a new ipv6 neighbor

187
00:09:36,720 --> 00:09:40,800
discovery option type

188
00:09:38,560 --> 00:09:42,399
uh and it's uh requesting an iana

189
00:09:40,800 --> 00:09:46,000
assignment for that type for that

190
00:09:42,399 --> 00:09:49,279
that option the option body contains

191
00:09:46,000 --> 00:09:51,440
tlv format sub options and this document

192
00:09:49,279 --> 00:09:53,760
defines an initial set

193
00:09:51,440 --> 00:09:55,519
the option may occur in any ipv6

194
00:09:53,760 --> 00:09:56,399
neighbor discovery message being router

195
00:09:55,519 --> 00:09:58,320
solicitation

196
00:09:56,399 --> 00:10:00,320
advertisement neighbor solicitation

197
00:09:58,320 --> 00:10:03,040
neighbor advertisement

198
00:10:00,320 --> 00:10:04,880
nodes that recognize the option apply

199
00:10:03,040 --> 00:10:06,880
omni conventions

200
00:10:04,880 --> 00:10:08,640
nodes that do not recognize the option

201
00:10:06,880 --> 00:10:11,760
simply ignore it

202
00:10:08,640 --> 00:10:14,319
and uh the iana signed value

203
00:10:11,760 --> 00:10:16,560
allows immediate option recognition in a

204
00:10:14,320 --> 00:10:18,560
single octet compare in other words just

205
00:10:16,560 --> 00:10:20,319
check the type and that determines

206
00:10:18,560 --> 00:10:22,160
whether the peer understands omni

207
00:10:20,320 --> 00:10:23,120
without having to look more deeply into

208
00:10:22,160 --> 00:10:24,959
the option

209
00:10:23,120 --> 00:10:26,160
so it's a faster processing thing the

210
00:10:24,959 --> 00:10:29,439
fact that we've gotten

211
00:10:26,160 --> 00:10:33,680
a unique uh type value for this option

212
00:10:29,440 --> 00:10:36,480
next chart please

213
00:10:33,680 --> 00:10:37,599
so the overlay multi network uh

214
00:10:36,480 --> 00:10:40,800
interface option

215
00:10:37,600 --> 00:10:42,480
is essentially type and length are the

216
00:10:40,800 --> 00:10:43,920
same for standard ipv6 neighbor

217
00:10:42,480 --> 00:10:46,480
discovery messages

218
00:10:43,920 --> 00:10:47,120
we have a prefix length field source

219
00:10:46,480 --> 00:10:50,240
target

220
00:10:47,120 --> 00:10:51,600
uh in index field and then the sub

221
00:10:50,240 --> 00:10:53,279
options can

222
00:10:51,600 --> 00:10:56,079
follow immediately after the the first

223
00:10:53,279 --> 00:10:59,600
four octets

224
00:10:56,079 --> 00:11:01,120
next chart please by the way

225
00:10:59,600 --> 00:11:02,880
there's a there's a tab that says

226
00:11:01,120 --> 00:11:04,640
olatron screen

227
00:11:02,880 --> 00:11:06,000
that obscures some of my chart is there

228
00:11:04,640 --> 00:11:09,839
a way to

229
00:11:06,000 --> 00:11:13,360
to turn that off it that only shows up

230
00:11:09,839 --> 00:11:17,279
move your mouse um somewhere else on the

231
00:11:13,360 --> 00:11:20,399
display that's that's just local to you

232
00:11:17,279 --> 00:11:22,399
okay yeah i can't seem to lose that i'll

233
00:11:20,399 --> 00:11:25,200
just i'll work around it it's okay

234
00:11:22,399 --> 00:11:26,320
or resize your browser perhaps if that

235
00:11:25,200 --> 00:11:28,800
helps

236
00:11:26,320 --> 00:11:29,760
i i i think i'll be okay it's it's it's

237
00:11:28,800 --> 00:11:31,359
okay it's

238
00:11:29,760 --> 00:11:33,360
somewhat transparent so i can see

239
00:11:31,360 --> 00:11:35,519
through it a little bit but it is

240
00:11:33,360 --> 00:11:37,040
it only it's only a it's local to you

241
00:11:35,519 --> 00:11:40,399
it's not

242
00:11:37,040 --> 00:11:43,120
okay okay that's that's fine then

243
00:11:40,399 --> 00:11:45,040
okay so in in the omni option header uh

244
00:11:43,120 --> 00:11:46,720
we have a type field which is

245
00:11:45,040 --> 00:11:48,319
set to tbd and this is where we're

246
00:11:46,720 --> 00:11:51,279
requesting the iona value

247
00:11:48,320 --> 00:11:53,040
uh for the type the length is set to the

248
00:11:51,279 --> 00:11:54,959
number of eight octet blocks the same as

249
00:11:53,040 --> 00:11:56,240
for any ipv6 neighbor discovery option

250
00:11:54,959 --> 00:11:59,040
type

251
00:11:56,240 --> 00:12:01,760
prefix length is a one octet field that

252
00:11:59,040 --> 00:12:03,120
encodes a value between 0 and 128 as a

253
00:12:01,760 --> 00:12:05,920
prefix length

254
00:12:03,120 --> 00:12:07,120
for the ipv6 source or destination

255
00:12:05,920 --> 00:12:08,240
address of the neighbor discovery

256
00:12:07,120 --> 00:12:10,240
message

257
00:12:08,240 --> 00:12:11,680
the prefix length is set to the length

258
00:12:10,240 --> 00:12:13,839
of the prefix

259
00:12:11,680 --> 00:12:15,439
for for addresses that include a global

260
00:12:13,839 --> 00:12:16,880
or unique local prefix

261
00:12:15,440 --> 00:12:19,200
and for other address types is simply

262
00:12:16,880 --> 00:12:22,240
set to 128.

263
00:12:19,200 --> 00:12:24,240
um the source target om

264
00:12:22,240 --> 00:12:27,040
index field is a one octet field that

265
00:12:24,240 --> 00:12:29,600
encodes a value between 0 and 255

266
00:12:27,040 --> 00:12:31,279
that identifies the source or target

267
00:12:29,600 --> 00:12:33,200
underlying interface

268
00:12:31,279 --> 00:12:34,399
for the ipv6 neighbor discovery message

269
00:12:33,200 --> 00:12:36,160
remember it's called

270
00:12:34,399 --> 00:12:38,000
overlay multi-link network interface

271
00:12:36,160 --> 00:12:40,319
which means it's an overlay

272
00:12:38,000 --> 00:12:42,959
over underlying interfaces and this

273
00:12:40,320 --> 00:12:44,480
field tells which underlying interface

274
00:12:42,959 --> 00:12:46,319
that the message is either going out

275
00:12:44,480 --> 00:12:49,440
over or coming in on

276
00:12:46,320 --> 00:12:51,120
that's why it's called source target

277
00:12:49,440 --> 00:12:52,880
and then again the sub options is a

278
00:12:51,120 --> 00:12:54,480
variable length field

279
00:12:52,880 --> 00:12:56,320
of length such that the complete omni

280
00:12:54,480 --> 00:12:58,639
option is an integer multiple of eight

281
00:12:56,320 --> 00:13:01,440
octets long

282
00:12:58,639 --> 00:13:01,440
next chart place

283
00:13:02,079 --> 00:13:06,719
so the omni option may appear in any

284
00:13:04,160 --> 00:13:08,480
ipv6 neighbor discovery message type

285
00:13:06,720 --> 00:13:10,000
it is processed by interfaces that

286
00:13:08,480 --> 00:13:12,959
recognize the option

287
00:13:10,000 --> 00:13:14,720
and ignored by all other interfaces if a

288
00:13:12,959 --> 00:13:16,880
single ipv6 neighbor discovery message

289
00:13:14,720 --> 00:13:18,639
contains multiple omni options

290
00:13:16,880 --> 00:13:20,959
the first one is processed and any

291
00:13:18,639 --> 00:13:23,519
additional options are ignored

292
00:13:20,959 --> 00:13:25,680
so an omni option may include full or

293
00:13:23,519 --> 00:13:27,519
partial information for the neighbor

294
00:13:25,680 --> 00:13:29,439
if it includes full information its

295
00:13:27,519 --> 00:13:31,200
contents provide new information

296
00:13:29,440 --> 00:13:33,760
and or update any previously cached

297
00:13:31,200 --> 00:13:34,880
information if it includes only partial

298
00:13:33,760 --> 00:13:38,399
information

299
00:13:34,880 --> 00:13:39,519
uh it updates uh uh the corresponding

300
00:13:38,399 --> 00:13:41,920
cash information

301
00:13:39,519 --> 00:13:43,440
so that's the union of the most recently

302
00:13:41,920 --> 00:13:45,599
received omni options

303
00:13:43,440 --> 00:13:49,040
that define the state that's that's been

304
00:13:45,600 --> 00:13:51,839
established by the omni options

305
00:13:49,040 --> 00:13:51,839
next chart please

306
00:13:53,120 --> 00:13:58,720
so the omni uh sub option format it

307
00:13:56,399 --> 00:13:59,920
the the sub option contains zero or more

308
00:13:58,720 --> 00:14:02,800
sub options

309
00:13:59,920 --> 00:14:04,639
uh each one is concatenated immediately

310
00:14:02,800 --> 00:14:06,959
after its predecessor

311
00:14:04,639 --> 00:14:08,079
all sub options except pad one are of

312
00:14:06,959 --> 00:14:11,439
type length value

313
00:14:08,079 --> 00:14:14,160
encoded format uh so you have a subtype

314
00:14:11,440 --> 00:14:15,120
sub length and sub option data now the

315
00:14:14,160 --> 00:14:17,760
data here

316
00:14:15,120 --> 00:14:18,720
is not an integral number of eight octet

317
00:14:17,760 --> 00:14:20,959
bytes it's it's

318
00:14:18,720 --> 00:14:22,000
it's an an arbitrary number of bytes and

319
00:14:20,959 --> 00:14:23,920
the sub length

320
00:14:22,000 --> 00:14:25,199
is just a byte count it's not an oc

321
00:14:23,920 --> 00:14:29,040
number of octa

322
00:14:25,199 --> 00:14:31,519
octa bytes uh so um

323
00:14:29,040 --> 00:14:33,599
and again the sub option data is a block

324
00:14:31,519 --> 00:14:36,399
of data with format determine the sub

325
00:14:33,600 --> 00:14:36,399
by the subtype

326
00:14:36,880 --> 00:14:39,680
next chart please

327
00:14:40,240 --> 00:14:43,279
this this document defines uh the

328
00:14:42,560 --> 00:14:45,760
following sub

329
00:14:43,279 --> 00:14:46,639
options pad one which is one that we're

330
00:14:45,760 --> 00:14:50,000
very familiar with

331
00:14:46,639 --> 00:14:53,040
is one octet of zero padding pad n is in

332
00:14:50,000 --> 00:14:54,560
octets of zero padding uh number option

333
00:14:53,040 --> 00:14:57,680
some option number two is

334
00:14:54,560 --> 00:14:58,160
interface attributes type one uh some

335
00:14:57,680 --> 00:14:59,920
options

336
00:14:58,160 --> 00:15:01,600
three through 252 are available for

337
00:14:59,920 --> 00:15:03,839
future assignment

338
00:15:01,600 --> 00:15:05,199
253 through 254 are reserved for

339
00:15:03,839 --> 00:15:08,800
experimentation

340
00:15:05,199 --> 00:15:12,639
and 255 is reserved by iana and other

341
00:15:08,800 --> 00:15:15,519
documents may define new subtypes

342
00:15:12,639 --> 00:15:15,519
next chart please

343
00:15:16,079 --> 00:15:22,319
so the first uh subtype that we have

344
00:15:19,760 --> 00:15:22,959
that is is defined is called the

345
00:15:22,320 --> 00:15:25,760
interface

346
00:15:22,959 --> 00:15:27,680
attribute subtype and this is a type one

347
00:15:25,760 --> 00:15:30,399
interface attributes

348
00:15:27,680 --> 00:15:32,719
uh the interface attributes contains

349
00:15:30,399 --> 00:15:36,079
again subtype and sub length

350
00:15:32,720 --> 00:15:40,639
then it contains a uh omni in

351
00:15:36,079 --> 00:15:44,638
in index omni type provider id

352
00:15:40,639 --> 00:15:48,079
link metric a reserve field

353
00:15:44,639 --> 00:15:49,120
and then a set of preferences for the 64

354
00:15:48,079 --> 00:15:52,160
dscp

355
00:15:49,120 --> 00:15:54,320
codes that tells what the preference is

356
00:15:52,160 --> 00:15:57,040
for each of those dscps

357
00:15:54,320 --> 00:15:59,680
for sending packets over that interface

358
00:15:57,040 --> 00:16:02,319
and those preferences are encoded as

359
00:15:59,680 --> 00:16:03,920
low medium high or disabled and that

360
00:16:02,320 --> 00:16:06,720
gives an indication

361
00:16:03,920 --> 00:16:09,199
to the ip layer which underlying

362
00:16:06,720 --> 00:16:12,560
interface among potentially multiple

363
00:16:09,199 --> 00:16:15,519
the packet should be destined to

364
00:16:12,560 --> 00:16:16,160
so again this is a us interface

365
00:16:15,519 --> 00:16:18,639
attributes

366
00:16:16,160 --> 00:16:20,319
type there may be multiple of these in

367
00:16:18,639 --> 00:16:22,160
an omni option if you have multiple

368
00:16:20,320 --> 00:16:23,759
underlying interfaces and each

369
00:16:22,160 --> 00:16:24,319
underlying interface is differentiated

370
00:16:23,759 --> 00:16:27,759
by the

371
00:16:24,320 --> 00:16:27,759
om index octat

372
00:16:28,240 --> 00:16:32,320
next chart please fred do you want to

373
00:16:30,560 --> 00:16:34,719
take a question from our ad

374
00:16:32,320 --> 00:16:37,839
eric line is in the queue before moving

375
00:16:34,720 --> 00:16:37,839
on sure go ahead go ahead

376
00:16:40,480 --> 00:16:43,120
go ahead eric

377
00:16:48,639 --> 00:16:53,839
you just need to unmute yourself eric we

378
00:16:51,199 --> 00:16:53,839
can't hear you

379
00:16:57,360 --> 00:17:02,560
i'm muted we could hear

380
00:17:00,399 --> 00:17:04,959
it you can hear me i see this yeah we

381
00:17:02,560 --> 00:17:04,958
can hear your

382
00:17:08,000 --> 00:17:12,319
did you mean to say dscp in the document

383
00:17:10,160 --> 00:17:13,600
i noticed dhcp but should these be rio

384
00:17:12,319 --> 00:17:16,639
preference instead since they're two

385
00:17:13,599 --> 00:17:16,639
bits and not six bits

386
00:17:17,599 --> 00:17:22,958
well the the encoding of these bits uh

387
00:17:20,559 --> 00:17:25,439
takes on the values zero for disabled

388
00:17:22,959 --> 00:17:26,400
one for low two for medium and three for

389
00:17:25,439 --> 00:17:29,200
high

390
00:17:26,400 --> 00:17:30,320
and that's a preference for for example

391
00:17:29,200 --> 00:17:33,440
p00

392
00:17:30,320 --> 00:17:36,639
corresponds to dscp0

393
00:17:33,440 --> 00:17:38,480
p01 corresponds to dscp1

394
00:17:36,640 --> 00:17:40,400
and each one of those two bit fields

395
00:17:38,480 --> 00:17:42,880
gives a disabled

396
00:17:40,400 --> 00:17:45,039
low medium high and it corresponds to

397
00:17:42,880 --> 00:17:45,760
the dscp value that appears in the ip

398
00:17:45,039 --> 00:17:47,280
header

399
00:17:45,760 --> 00:17:49,440
the packet that's being examined by the

400
00:17:47,280 --> 00:17:52,960
forwarding

401
00:17:49,440 --> 00:17:55,280
i see sorry thanks

402
00:17:52,960 --> 00:17:55,280
okay

403
00:17:56,320 --> 00:18:01,520
okay so now in this interface attributes

404
00:17:59,520 --> 00:18:03,520
subtype is set to two

405
00:18:01,520 --> 00:18:05,918
uh if multiple instances with different

406
00:18:03,520 --> 00:18:06,639
om index values appear in the same omni

407
00:18:05,919 --> 00:18:09,840
option

408
00:18:06,640 --> 00:18:10,799
all are processed if multiple instances

409
00:18:09,840 --> 00:18:13,280
with the same

410
00:18:10,799 --> 00:18:15,760
om index value appear the first is

411
00:18:13,280 --> 00:18:18,480
processed and all others are ignored

412
00:18:15,760 --> 00:18:20,799
uh the sub length is again set from to a

413
00:18:18,480 --> 00:18:21,840
value n from 1 to 255 then it encodes

414
00:18:20,799 --> 00:18:24,240
the number of

415
00:18:21,840 --> 00:18:25,360
sub-option octet data the octets that

416
00:18:24,240 --> 00:18:28,240
follow

417
00:18:25,360 --> 00:18:30,559
um om index is a one octave field that

418
00:18:28,240 --> 00:18:32,240
encodes a value from zero to 255

419
00:18:30,559 --> 00:18:34,559
identifying the underlying interface for

420
00:18:32,240 --> 00:18:37,360
which the interface attributes apply

421
00:18:34,559 --> 00:18:38,639
om type is a one octet field that

422
00:18:37,360 --> 00:18:40,320
includes a value

423
00:18:38,640 --> 00:18:41,760
that corresponds to the type of the

424
00:18:40,320 --> 00:18:45,840
underlying interface

425
00:18:41,760 --> 00:18:47,520
for example ethernet or wi-fi or

426
00:18:45,840 --> 00:18:49,120
or cellular whatever the underlying

427
00:18:47,520 --> 00:18:51,440
interface happens to be there's a type

428
00:18:49,120 --> 00:18:51,439
value

429
00:18:51,679 --> 00:18:58,799
next chart place

430
00:18:56,080 --> 00:19:00,960
provider id is a one octet field

431
00:18:58,799 --> 00:19:02,240
contains a value from zero to 255

432
00:19:00,960 --> 00:19:05,600
corresponding to the underlying

433
00:19:02,240 --> 00:19:09,360
interface identified by om index

434
00:19:05,600 --> 00:19:11,840
and again link is a four bit link metric

435
00:19:09,360 --> 00:19:13,520
the value 0 means the link is down and

436
00:19:11,840 --> 00:19:15,439
the remaining values mean that the link

437
00:19:13,520 --> 00:19:20,559
is up with metrics ranging from

438
00:19:15,440 --> 00:19:22,720
1 meaning lowest to 15 which is highest

439
00:19:20,559 --> 00:19:24,080
and then again the 16 octa preferences

440
00:19:22,720 --> 00:19:26,400
field which we just discussed

441
00:19:24,080 --> 00:19:27,760
with eric's question immediately follows

442
00:19:26,400 --> 00:19:30,080
the reserve field

443
00:19:27,760 --> 00:19:31,520
with values p00 through p63

444
00:19:30,080 --> 00:19:33,439
corresponding to the

445
00:19:31,520 --> 00:19:34,559
64 differentiated service code point

446
00:19:33,440 --> 00:19:37,280
values

447
00:19:34,559 --> 00:19:39,760
and again each two bit field includes

448
00:19:37,280 --> 00:19:41,678
disabled low medium or high

449
00:19:39,760 --> 00:19:44,879
which is the preference for sending

450
00:19:41,679 --> 00:19:46,480
packets that have that dscp value

451
00:19:44,880 --> 00:19:49,039
over that particular underlying

452
00:19:46,480 --> 00:19:49,039
interface

453
00:19:50,000 --> 00:19:56,640
next chart please

454
00:19:53,600 --> 00:19:57,840
so uh sub options that may be defined in

455
00:19:56,640 --> 00:20:01,919
in future documents

456
00:19:57,840 --> 00:20:04,799
include type 2 interface attributes

457
00:20:01,919 --> 00:20:06,960
traffic selector mobility service

458
00:20:04,799 --> 00:20:10,639
register and release uh sub

459
00:20:06,960 --> 00:20:14,320
options network access identifier

460
00:20:10,640 --> 00:20:15,679
geographical coordinates and dhcp unique

461
00:20:14,320 --> 00:20:17,678
identifier

462
00:20:15,679 --> 00:20:19,039
and i won't get into what those are used

463
00:20:17,679 --> 00:20:21,760
for that's in us and

464
00:20:19,039 --> 00:20:23,520
that's in in future documents we'll be

465
00:20:21,760 --> 00:20:26,400
looking to define these new sub

466
00:20:23,520 --> 00:20:26,400
sub option types

467
00:20:26,960 --> 00:20:29,840
next chart please

468
00:20:30,480 --> 00:20:34,720
so in iana considers what we're asking

469
00:20:33,280 --> 00:20:37,600
is that the iana

470
00:20:34,720 --> 00:20:40,320
allocate a type number for the registry

471
00:20:37,600 --> 00:20:43,918
ipv6 neighbor discovery option formats

472
00:20:40,320 --> 00:20:46,840
for the omni option um as a provisional

473
00:20:43,919 --> 00:20:50,480
registration in accordance with rfc

474
00:20:46,840 --> 00:20:52,480
8126 the omni option also defines an

475
00:20:50,480 --> 00:20:53,840
8-bit subtype field

476
00:20:52,480 --> 00:20:55,760
for which the ian is going to be

477
00:20:53,840 --> 00:20:56,720
instructed to create and maintain a new

478
00:20:55,760 --> 00:20:59,919
registry

479
00:20:56,720 --> 00:21:01,360
entitled omni option subtype values

480
00:20:59,919 --> 00:21:04,000
and the initial values from the omni

481
00:21:01,360 --> 00:21:04,959
option subtype values registry are are

482
00:21:04,000 --> 00:21:06,240
given

483
00:21:04,960 --> 00:21:08,400
well it says given below but the

484
00:21:06,240 --> 00:21:11,120
document contains the the

485
00:21:08,400 --> 00:21:11,919
the values and then again future

486
00:21:11,120 --> 00:21:14,158
assignments

487
00:21:11,919 --> 00:21:17,840
are to may be made through expert review

488
00:21:14,159 --> 00:21:17,840
according to rfc 8126

489
00:21:18,799 --> 00:21:21,679
next chart please

490
00:21:22,400 --> 00:21:25,039
i'm already to the end i don't know if

491
00:21:23,840 --> 00:21:26,399
we're out of time or whether we still

492
00:21:25,039 --> 00:21:28,960
have time but the

493
00:21:26,400 --> 00:21:30,480
the final question i had we have time

494
00:21:28,960 --> 00:21:33,600
for discussion

495
00:21:30,480 --> 00:21:45,840
okay should i ask questions then

496
00:21:33,600 --> 00:21:45,840
yes yep

497
00:21:46,799 --> 00:21:59,840
so if you're interested in thanks uh

498
00:21:50,159 --> 00:21:59,840
dave thaler go ahead

499
00:22:01,840 --> 00:22:06,559
dave if you can hear me go ahead uh just

500
00:22:04,880 --> 00:22:09,600
checking can you guys hear me

501
00:22:06,559 --> 00:22:12,320
we can hear you okay um yeah

502
00:22:09,600 --> 00:22:13,918
so uh it looks to me like the main use

503
00:22:12,320 --> 00:22:16,720
of this option

504
00:22:13,919 --> 00:22:17,360
is for uh omni interfaces i mean i was

505
00:22:16,720 --> 00:22:18,960
trying to

506
00:22:17,360 --> 00:22:20,479
figure out what problem you're trying to

507
00:22:18,960 --> 00:22:22,080
solve since you didn't actually present

508
00:22:20,480 --> 00:22:23,120
that in here so i was looking at the uh

509
00:22:22,080 --> 00:22:24,720
draft as you were

510
00:22:23,120 --> 00:22:25,918
presenting while i was kind of following

511
00:22:24,720 --> 00:22:27,440
along where you were presenting in the

512
00:22:25,919 --> 00:22:28,960
draft

513
00:22:27,440 --> 00:22:30,799
and the draft talks about that the

514
00:22:28,960 --> 00:22:31,840
problem being uh solved is in the omni

515
00:22:30,799 --> 00:22:34,480
interface is one

516
00:22:31,840 --> 00:22:37,039
and so first a clarifying question where

517
00:22:34,480 --> 00:22:38,799
is the omni interfaces draft

518
00:22:37,039 --> 00:22:39,919
um but don't answer it yet because i'm

519
00:22:38,799 --> 00:22:41,200
just going to get all my questions on

520
00:22:39,919 --> 00:22:41,919
the table here first and then you can

521
00:22:41,200 --> 00:22:44,320
answer

522
00:22:41,919 --> 00:22:46,159
um i i understand you're saying it could

523
00:22:44,320 --> 00:22:47,360
be usable by other interfaces but if i

524
00:22:46,159 --> 00:22:48,960
was looking for what problem you're

525
00:22:47,360 --> 00:22:50,559
trying to solve where would i look and

526
00:22:48,960 --> 00:22:52,000
which draft is that

527
00:22:50,559 --> 00:22:53,918
because i think what problem you're

528
00:22:52,000 --> 00:22:55,600
trying to solve if there's a draft and

529
00:22:53,919 --> 00:22:56,960
they're working in the working group

530
00:22:55,600 --> 00:22:58,240
then the working group document should

531
00:22:56,960 --> 00:22:59,840
also have what problem is trying to

532
00:22:58,240 --> 00:23:03,280
solve that's my meta question

533
00:22:59,840 --> 00:23:05,840
um and then the last comment is um if i

534
00:23:03,280 --> 00:23:07,200
remember correctly the uh allocation

535
00:23:05,840 --> 00:23:10,480
policy

536
00:23:07,200 --> 00:23:13,600
for um nd option numbers is

537
00:23:10,480 --> 00:23:17,039
rfc required right it's not iets

538
00:23:13,600 --> 00:23:20,000
um a consensus it's not you know uh

539
00:23:17,039 --> 00:23:20,559
you know anything else so even you can

540
00:23:20,000 --> 00:23:22,480
get this

541
00:23:20,559 --> 00:23:24,158
even if it were to be an independent

542
00:23:22,480 --> 00:23:26,559
track rfc and so

543
00:23:24,159 --> 00:23:28,080
even if the answer is no on the adopt as

544
00:23:26,559 --> 00:23:29,600
a six-man working group item it doesn't

545
00:23:28,080 --> 00:23:30,000
mean that you can't get the actual

546
00:23:29,600 --> 00:23:32,320
option

547
00:23:30,000 --> 00:23:33,600
and use it the real question is would

548
00:23:32,320 --> 00:23:35,120
there be

549
00:23:33,600 --> 00:23:37,199
multiple interoperability

550
00:23:35,120 --> 00:23:38,799
implementations from enough people to be

551
00:23:37,200 --> 00:23:40,000
to warrant a working group item

552
00:23:38,799 --> 00:23:42,400
all right that's the end of my questions

553
00:23:40,000 --> 00:23:42,400
i'll stop

554
00:23:42,640 --> 00:23:47,279
okay uh so dave you're right there is a

555
00:23:45,520 --> 00:23:49,360
different draft that's called the

556
00:23:47,279 --> 00:23:50,400
omni draft that's different than this

557
00:23:49,360 --> 00:23:53,439
draft

558
00:23:50,400 --> 00:23:55,679
and that is a full explanation of

559
00:23:53,440 --> 00:23:56,720
the omni interface and the omni link and

560
00:23:55,679 --> 00:23:59,919
all those those those

561
00:23:56,720 --> 00:24:01,120
those aspects this document is strictly

562
00:23:59,919 --> 00:24:03,279
looking for

563
00:24:01,120 --> 00:24:04,320
the assignment the allocation of the

564
00:24:03,279 --> 00:24:07,279
option

565
00:24:04,320 --> 00:24:08,879
um now i think one of your other

566
00:24:07,279 --> 00:24:10,720
questions had to do with whether there's

567
00:24:08,880 --> 00:24:13,120
an rfc required for

568
00:24:10,720 --> 00:24:14,159
obtaining an ipv6 neighbor discovery

569
00:24:13,120 --> 00:24:15,678
option

570
00:24:14,159 --> 00:24:17,360
and that's the purpose of publishing

571
00:24:15,679 --> 00:24:18,960
this document is to

572
00:24:17,360 --> 00:24:20,639
if they have an rfc number so that we

573
00:24:18,960 --> 00:24:22,080
can have an iana

574
00:24:20,640 --> 00:24:25,360
assignment of the option number in

575
00:24:22,080 --> 00:24:25,360
conjunction with the rfc

576
00:24:25,520 --> 00:24:29,840
yeah i guess my point is that um you

577
00:24:28,159 --> 00:24:32,080
don't need it to be a six-man working

578
00:24:29,840 --> 00:24:34,080
group item in order to get a number you

579
00:24:32,080 --> 00:24:35,520
just need an rfc which could even happen

580
00:24:34,080 --> 00:24:37,760
through the independent stream through

581
00:24:35,520 --> 00:24:40,799
the rfc editor submission process

582
00:24:37,760 --> 00:24:42,799
so uh the question is really what is the

583
00:24:40,799 --> 00:24:44,320
rationale for adopting as a six-man

584
00:24:42,799 --> 00:24:46,000
working group item as opposed to

585
00:24:44,320 --> 00:24:48,158
independent and that would be you know

586
00:24:46,000 --> 00:24:50,080
if there's sufficient interest in having

587
00:24:48,159 --> 00:24:51,840
multiple interoperable standards based

588
00:24:50,080 --> 00:24:52,799
implementations and the answer might be

589
00:24:51,840 --> 00:24:55,120
yes but

590
00:24:52,799 --> 00:24:56,480
i can't tell for sure yet given that i

591
00:24:55,120 --> 00:24:57,760
don't fully understand the problem

592
00:24:56,480 --> 00:24:59,200
you're trying to solve i kind of can

593
00:24:57,760 --> 00:25:01,120
guess it some of it because

594
00:24:59,200 --> 00:25:03,279
i understand you're trying to address a

595
00:25:01,120 --> 00:25:04,959
multi-link subnet style thing and so i

596
00:25:03,279 --> 00:25:06,400
could kind of read some of that into it

597
00:25:04,960 --> 00:25:08,159
but it wasn't documented in the draft

598
00:25:06,400 --> 00:25:11,120
for this presentation and so

599
00:25:08,159 --> 00:25:12,799
uh my point is just uh whatever the

600
00:25:11,120 --> 00:25:14,719
problem is that we're trying to solve

601
00:25:12,799 --> 00:25:16,400
then it should either be in the graph or

602
00:25:14,720 --> 00:25:18,640
in a draft in the same place whether

603
00:25:16,400 --> 00:25:20,880
that's a six-man working group draft or

604
00:25:18,640 --> 00:25:22,400
a rfc editor you know independent

605
00:25:20,880 --> 00:25:26,159
submission stream or

606
00:25:22,400 --> 00:25:27,600
uh whatever so but it sounds like you're

607
00:25:26,159 --> 00:25:29,120
saying

608
00:25:27,600 --> 00:25:31,199
yes you're doing this so that you can

609
00:25:29,120 --> 00:25:32,639
get a number

610
00:25:31,200 --> 00:25:34,000
which i'm saying you could do without

611
00:25:32,640 --> 00:25:35,440
having it be adopted as a six-man

612
00:25:34,000 --> 00:25:37,520
working year by them

613
00:25:35,440 --> 00:25:38,880
i i understand your point david it had

614
00:25:37,520 --> 00:25:41,200
not occurred to me and it's

615
00:25:38,880 --> 00:25:43,919
a valid point and uh i think i should

616
00:25:41,200 --> 00:25:46,159
probably drop back and discuss with uh

617
00:25:43,919 --> 00:25:47,279
uh perhaps some of the area directors or

618
00:25:46,159 --> 00:25:49,919
chairs as to

619
00:25:47,279 --> 00:25:51,600
what's the right way to go or or maybe i

620
00:25:49,919 --> 00:25:53,679
should just ask the chairs

621
00:25:51,600 --> 00:25:54,879
now that dave has brought up this other

622
00:25:53,679 --> 00:25:56,480
possibility

623
00:25:54,880 --> 00:25:58,799
should i even be asking this question

624
00:25:56,480 --> 00:25:58,799
today

625
00:26:02,080 --> 00:26:08,320
well so first of all ollie started a

626
00:26:05,279 --> 00:26:09,840
there's a show of hands tool

627
00:26:08,320 --> 00:26:11,439
basically wanted to see how many people

628
00:26:09,840 --> 00:26:15,279
have read the draft

629
00:26:11,440 --> 00:26:19,120
so if people could

630
00:26:15,279 --> 00:26:19,120
use the tool and indicate that

631
00:26:20,320 --> 00:26:24,320
raise your hand if you've read it do not

632
00:26:22,720 --> 00:26:27,360
raise your hand if you

633
00:26:24,320 --> 00:26:27,360
want to say you didn't

634
00:26:33,360 --> 00:26:40,879
i read it have you raised your hand

635
00:26:37,679 --> 00:26:40,880
i did yeah

636
00:26:45,440 --> 00:26:49,039
so so far we have five raised hands out

637
00:26:48,480 --> 00:26:52,559
of

638
00:26:49,039 --> 00:26:54,320
93 participants which is likely that we

639
00:26:52,559 --> 00:26:55,840
would have to take this question to the

640
00:26:54,320 --> 00:26:59,120
list

641
00:26:55,840 --> 00:27:01,840
anyway just just and encourage people to

642
00:26:59,120 --> 00:27:06,879
to read both documents uh before we can

643
00:27:01,840 --> 00:27:10,000
answer that question i think

644
00:27:06,880 --> 00:27:12,080
but yes i i i also think we should um

645
00:27:10,000 --> 00:27:13,520
well perhaps based on that we should or

646
00:27:12,080 --> 00:27:15,918
what happens with that we

647
00:27:13,520 --> 00:27:17,279
can discuss uh dave's suggestion as well

648
00:27:15,919 --> 00:27:19,200
what avenues

649
00:27:17,279 --> 00:27:20,640
uh what the best avenues are depending

650
00:27:19,200 --> 00:27:23,840
on the interest

651
00:27:20,640 --> 00:27:24,640
interest here so we're up to seven now

652
00:27:23,840 --> 00:27:27,600
this is

653
00:27:24,640 --> 00:27:27,600
you know exciting

654
00:27:31,440 --> 00:27:35,600
any other questions for fred well you

655
00:27:34,080 --> 00:27:36,639
can just leave this open for a little

656
00:27:35,600 --> 00:27:39,840
while until people

657
00:27:36,640 --> 00:27:39,840
figure out how to use the tool

658
00:27:47,039 --> 00:27:49,840
go for the comments

659
00:27:52,320 --> 00:27:55,678
okay i think that's it for me then

660
00:27:53,760 --> 00:27:57,600
correct

661
00:27:55,679 --> 00:28:00,000
yes i think we'll take that question to

662
00:27:57,600 --> 00:28:03,520
the list and continue discussing uh

663
00:28:00,000 --> 00:28:06,880
um you know between our 80s and and and

664
00:28:03,520 --> 00:28:08,639
and cheers fred if that's okay with you

665
00:28:06,880 --> 00:28:10,559
thanks i think it's okay for me thank

666
00:28:08,640 --> 00:28:11,600
you yeah and by the way i think someone

667
00:28:10,559 --> 00:28:14,320
asked in a

668
00:28:11,600 --> 00:28:15,120
jabber room but oh it's it's actually

669
00:28:14,320 --> 00:28:18,399
recorded so

670
00:28:15,120 --> 00:28:20,799
there's 92 participants seven people

671
00:28:18,399 --> 00:28:23,439
said they read the draft and 17

672
00:28:20,799 --> 00:28:23,440
said they didn't

673
00:28:24,640 --> 00:28:28,399
okay thank you kevin's a good number

674
00:28:28,720 --> 00:28:31,840
okay thank you bye now

675
00:28:33,760 --> 00:28:36,879
it looks like i have to

676
00:28:36,960 --> 00:28:40,880
share my screen again for some reason i

677
00:28:39,520 --> 00:28:44,000
didn't like my

678
00:28:40,880 --> 00:28:47,120
setup with preview i did try that

679
00:28:44,000 --> 00:28:47,120
before the weekend so

680
00:28:49,039 --> 00:28:54,640
okay go ahead okay so i guess

681
00:28:52,240 --> 00:28:55,520
i'll jump into the pink box take off my

682
00:28:54,640 --> 00:28:59,440
chair hatch

683
00:28:55,520 --> 00:29:02,639
uh bob is left the sole

684
00:28:59,440 --> 00:29:05,760
chair of this one um

685
00:29:02,640 --> 00:29:07,279
this is the um a presentation of the

686
00:29:05,760 --> 00:29:10,879
universal configuration

687
00:29:07,279 --> 00:29:17,840
information option which is

688
00:29:10,880 --> 00:29:17,840
a draft that i presented back in itf 104

689
00:29:18,480 --> 00:29:23,919
in the meantime there has been some

690
00:29:20,080 --> 00:29:23,918
developments in this area

691
00:29:24,840 --> 00:29:29,760
um

692
00:29:26,240 --> 00:29:32,799
we have gotten a new co-author so

693
00:29:29,760 --> 00:29:34,720
tim winters have joined in

694
00:29:32,799 --> 00:29:36,158
working on this draft which is greatly

695
00:29:34,720 --> 00:29:40,159
appreciated

696
00:29:36,159 --> 00:29:43,919
um i'll be presenting this

697
00:29:40,159 --> 00:29:47,600
team is hopefully here to to help me out

698
00:29:43,919 --> 00:29:47,600
apparently it's a little tight

699
00:29:49,360 --> 00:29:56,240
i've after the discussion we had we

700
00:29:53,200 --> 00:29:57,200
moved it from experimental status to

701
00:29:56,240 --> 00:29:59,120
proposed

702
00:29:57,200 --> 00:30:00,320
standard status

703
00:29:59,120 --> 00:30:04,799
[Music]

704
00:30:00,320 --> 00:30:07,840
and we've added dhpv6 support

705
00:30:04,799 --> 00:30:08,720
as well and some more details on that in

706
00:30:07,840 --> 00:30:12,000
the

707
00:30:08,720 --> 00:30:14,880
in the following slides um

708
00:30:12,000 --> 00:30:16,000
so the problem this is looking at is

709
00:30:14,880 --> 00:30:19,120
twofold

710
00:30:16,000 --> 00:30:21,200
it's it's partly

711
00:30:19,120 --> 00:30:23,279
how we do new options in the working

712
00:30:21,200 --> 00:30:26,399
grief

713
00:30:23,279 --> 00:30:27,840
that we're spending an inordinate amount

714
00:30:26,399 --> 00:30:31,199
of time arguing over

715
00:30:27,840 --> 00:30:32,399
over relatively simple new configuration

716
00:30:31,200 --> 00:30:35,600
information options

717
00:30:32,399 --> 00:30:36,000
and where we also end up being you know

718
00:30:35,600 --> 00:30:39,120
split

719
00:30:36,000 --> 00:30:41,120
halfway between the people who you know

720
00:30:39,120 --> 00:30:44,399
need it and the other people who think

721
00:30:41,120 --> 00:30:47,439
you you shouldn't need it

722
00:30:44,399 --> 00:30:50,639
and so this document proposes a

723
00:30:47,440 --> 00:30:53,360
a slightly different approach to how

724
00:30:50,640 --> 00:30:54,640
you can do configuration information

725
00:30:53,360 --> 00:30:57,520
options in the

726
00:30:54,640 --> 00:30:57,520
india itf

727
00:30:59,200 --> 00:31:04,000
and and the solution it proposes is

728
00:31:03,120 --> 00:31:06,879
basically do you

729
00:31:04,000 --> 00:31:10,559
say a modeling language and a

730
00:31:06,880 --> 00:31:13,519
self-describing data format

731
00:31:10,559 --> 00:31:15,200
which also has the you know or should

732
00:31:13,519 --> 00:31:17,679
have the implications of

733
00:31:15,200 --> 00:31:19,440
implementations that they no longer need

734
00:31:17,679 --> 00:31:22,880
to change code

735
00:31:19,440 --> 00:31:25,440
uh to add support for new options well

736
00:31:22,880 --> 00:31:26,320
not at the network side at least that's

737
00:31:25,440 --> 00:31:29,519
the

738
00:31:26,320 --> 00:31:32,480
that's the idea um

739
00:31:29,519 --> 00:31:34,240
yeah so the technical idea here is that

740
00:31:32,480 --> 00:31:36,000
the option should use a self-describing

741
00:31:34,240 --> 00:31:38,080
option format

742
00:31:36,000 --> 00:31:39,279
where on the you know reach or network

743
00:31:38,080 --> 00:31:43,600
side for example

744
00:31:39,279 --> 00:31:47,039
the operator just specifies new json

745
00:31:43,600 --> 00:31:50,080
objects those are modeled in cddl

746
00:31:47,039 --> 00:31:51,519
and encoded in cbore is the proposal we

747
00:31:50,080 --> 00:31:53,600
had some discussion on that leading up

748
00:31:51,519 --> 00:31:56,480
to itf 104

749
00:31:53,600 --> 00:31:58,559
and that would allow new options to add

750
00:31:56,480 --> 00:32:00,799
to be added without changes

751
00:31:58,559 --> 00:32:02,000
in the router os or in the host os for

752
00:32:00,799 --> 00:32:04,559
that matter you could have

753
00:32:02,000 --> 00:32:06,320
applications just subscribing to keys in

754
00:32:04,559 --> 00:32:08,879
the

755
00:32:06,320 --> 00:32:11,600
all those objects that the application

756
00:32:08,880 --> 00:32:11,600
is interested in

757
00:32:11,919 --> 00:32:18,080
the process changes the idea is now that

758
00:32:15,840 --> 00:32:20,480
since the option space is not really a

759
00:32:18,080 --> 00:32:23,678
constrained resource anymore

760
00:32:20,480 --> 00:32:24,559
there isn't any huge justification for

761
00:32:23,679 --> 00:32:28,880
the ietf

762
00:32:24,559 --> 00:32:30,320
to to manage the number space um

763
00:32:28,880 --> 00:32:32,480
and somewhat depending on what the

764
00:32:30,320 --> 00:32:34,080
options are the the idea here

765
00:32:32,480 --> 00:32:36,559
and this is you know why it was

766
00:32:34,080 --> 00:32:38,720
experimental initially as well was to

767
00:32:36,559 --> 00:32:39,760
to see what would happen if we open this

768
00:32:38,720 --> 00:32:42,559
up

769
00:32:39,760 --> 00:32:45,600
um and allow the you know as long as you

770
00:32:42,559 --> 00:32:46,960
had a cddl going in the iana registry

771
00:32:45,600 --> 00:32:49,279
uh the option was essentially

772
00:32:46,960 --> 00:32:49,679
implementable although you could argue

773
00:32:49,279 --> 00:32:54,000
that

774
00:32:49,679 --> 00:32:56,640
um the semantics of it required more

775
00:32:54,000 --> 00:32:57,840
more documentation so they so the idea

776
00:32:56,640 --> 00:33:01,600
here is to

777
00:32:57,840 --> 00:33:04,000
um put in some more text perhaps around

778
00:33:01,600 --> 00:33:06,000
what the ayanna registry it's it's

779
00:33:04,000 --> 00:33:08,640
expert review at the moment

780
00:33:06,000 --> 00:33:09,279
of how involved that could be and you

781
00:33:08,640 --> 00:33:12,399
know if the

782
00:33:09,279 --> 00:33:13,200
expert could then punt um to the working

783
00:33:12,399 --> 00:33:16,879
group if if

784
00:33:13,200 --> 00:33:16,880
more specification was required

785
00:33:16,960 --> 00:33:22,880
um so it's essentially making

786
00:33:21,120 --> 00:33:27,840
use of the roofer advertisement under

787
00:33:22,880 --> 00:33:27,840
the hp v6 as a generic carrier for this

788
00:33:27,919 --> 00:33:33,120
this option um

789
00:33:31,120 --> 00:33:34,959
it's useful for you know in the ri case

790
00:33:33,120 --> 00:33:37,120
it's it's certainly useful for one to

791
00:33:34,960 --> 00:33:39,279
many communication but you can also use

792
00:33:37,120 --> 00:33:41,678
it as you can with ra

793
00:33:39,279 --> 00:33:42,720
for one to one either with you know

794
00:33:41,679 --> 00:33:44,799
unicast ra

795
00:33:42,720 --> 00:33:46,159
or if you're on a point-to-point link

796
00:33:44,799 --> 00:33:52,559
and as i said

797
00:33:46,159 --> 00:33:58,320
c-board would see the dl of json objects

798
00:33:52,559 --> 00:33:58,320
the the format here is um

799
00:33:58,880 --> 00:34:06,240
is unchanged from from itf 104 revision

800
00:34:03,039 --> 00:34:07,600
we obviously ask for type code 42 since

801
00:34:06,240 --> 00:34:11,119
this is the universal

802
00:34:07,600 --> 00:34:11,118
answer to any other option

803
00:34:11,359 --> 00:34:15,199
unfortunately when we made this generic

804
00:34:14,639 --> 00:34:18,480
and

805
00:34:15,199 --> 00:34:20,638
usable for dhp as well

806
00:34:18,480 --> 00:34:23,839
option 42 is taken so we might have to

807
00:34:20,639 --> 00:34:26,960
obsolete rfc 4833 which is some

808
00:34:23,839 --> 00:34:30,960
some time option to get number 42

809
00:34:26,960 --> 00:34:30,960
that is a joke um

810
00:34:31,280 --> 00:34:34,480
here's some examples of how this can

811
00:34:33,440 --> 00:34:38,399
look like

812
00:34:34,480 --> 00:34:41,359
um we're suggesting that you put

813
00:34:38,399 --> 00:34:43,040
all the idf sanctioned objects under the

814
00:34:41,359 --> 00:34:46,078
idf

815
00:34:43,040 --> 00:34:48,000
key and and then other private uses as

816
00:34:46,079 --> 00:34:51,200
well can uh

817
00:34:48,000 --> 00:34:55,199
is allowed within this format outside of

818
00:34:51,199 --> 00:34:57,359
the idf object

819
00:34:55,199 --> 00:34:58,480
so this is just simply you know text

820
00:34:57,359 --> 00:35:02,160
based as you know with

821
00:34:58,480 --> 00:35:03,920
with json and this is an example of the

822
00:35:02,160 --> 00:35:05,279
cddl how that would look like

823
00:35:03,920 --> 00:35:08,160
if you know question mark is the

824
00:35:05,280 --> 00:35:10,160
optional optional entries

825
00:35:08,160 --> 00:35:13,759
you can specify ranges and limits you

826
00:35:10,160 --> 00:35:13,759
know for example for prefix length

827
00:35:14,720 --> 00:35:17,839
dave please go ahead

828
00:35:19,520 --> 00:35:22,880
if you're almost done i can wait but i

829
00:35:21,440 --> 00:35:24,240
have a question about

830
00:35:22,880 --> 00:35:26,160
multiple slides here so do you want to

831
00:35:24,240 --> 00:35:27,919
finish or do you want me to ask now no

832
00:35:26,160 --> 00:35:31,359
i think we can we can just evolve this

833
00:35:27,920 --> 00:35:33,839
as we go so please go ahead um yeah so

834
00:35:31,359 --> 00:35:36,240
so first of all i want to say i really

835
00:35:33,839 --> 00:35:38,320
like this idea of the universal option

836
00:35:36,240 --> 00:35:39,439
of something that can be encoded the

837
00:35:38,320 --> 00:35:42,640
same blob in

838
00:35:39,440 --> 00:35:45,280
dhcp and ra and so um

839
00:35:42,640 --> 00:35:46,480
overall i am in favor of this approach i

840
00:35:45,280 --> 00:35:48,400
don't know if that's a

841
00:35:46,480 --> 00:35:50,079
that's a contentious point but i just

842
00:35:48,400 --> 00:35:53,520
want to add support for this

843
00:35:50,079 --> 00:35:55,920
however the way that it's being done um

844
00:35:53,520 --> 00:35:57,680
since as you point out that there's

845
00:35:55,920 --> 00:35:58,000
issues with you know length you can only

846
00:35:57,680 --> 00:36:01,118
encode

847
00:35:58,000 --> 00:36:03,760
so much stuff the choice of

848
00:36:01,119 --> 00:36:05,040
json rather than native c-bor seems

849
00:36:03,760 --> 00:36:06,880
questionable to me

850
00:36:05,040 --> 00:36:09,920
so like on the previous slide if you go

851
00:36:06,880 --> 00:36:11,520
back one you see that the rdnss

852
00:36:09,920 --> 00:36:13,200
you can see the ipv6 addresses are

853
00:36:11,520 --> 00:36:16,960
encoded in text format

854
00:36:13,200 --> 00:36:20,240
you see the labels rdnss is text format

855
00:36:16,960 --> 00:36:22,320
go forward one slide in the cddl

856
00:36:20,240 --> 00:36:24,640
right normally the labels in the map

857
00:36:22,320 --> 00:36:25,200
right you know pvd colon dns colon and

858
00:36:24,640 --> 00:36:27,680
so on

859
00:36:25,200 --> 00:36:28,640
in sibor normally those would be nice

860
00:36:27,680 --> 00:36:31,680
short integers

861
00:36:28,640 --> 00:36:35,920
as opposed to big long strings and so

862
00:36:31,680 --> 00:36:37,759
using a json and t stirs for things like

863
00:36:35,920 --> 00:36:39,839
you can see prefixes of t stir

864
00:36:37,760 --> 00:36:41,920
can be much larger and so it limits the

865
00:36:39,839 --> 00:36:44,720
applicability as opposed to

866
00:36:41,920 --> 00:36:45,200
just using c board directly without json

867
00:36:44,720 --> 00:36:47,040
and so

868
00:36:45,200 --> 00:36:48,640
i'm in favor of this approach but i will

869
00:36:47,040 --> 00:36:50,320
be in favor of it even more

870
00:36:48,640 --> 00:36:52,640
if you deleted all the json stuff and

871
00:36:50,320 --> 00:36:55,599
said just use cbor

872
00:36:52,640 --> 00:36:56,960
um so so this is uh you know i'm not the

873
00:36:55,599 --> 00:36:58,960
expert on this you know i've been

874
00:36:56,960 --> 00:37:00,880
speaking to carson a bit

875
00:36:58,960 --> 00:37:03,599
am i writing that you could very well

876
00:37:00,880 --> 00:37:06,000
specify this cddl with

877
00:37:03,599 --> 00:37:07,839
with you know the ip6 address and prefix

878
00:37:06,000 --> 00:37:10,000
tags

879
00:37:07,839 --> 00:37:12,320
and still have a json representation it

880
00:37:10,000 --> 00:37:14,480
would still be easy for a

881
00:37:12,320 --> 00:37:16,480
json you know implementation to map from

882
00:37:14,480 --> 00:37:19,520
a json object into

883
00:37:16,480 --> 00:37:21,680
a that cbo representation as long as the

884
00:37:19,520 --> 00:37:24,160
cdl specified the

885
00:37:21,680 --> 00:37:24,879
the address tags is that you agree with

886
00:37:24,160 --> 00:37:26,799
that

887
00:37:24,880 --> 00:37:28,320
so you're taking an approach it's very

888
00:37:26,800 --> 00:37:29,520
similar to what uh

889
00:37:28,320 --> 00:37:31,440
one of the other working groups that i

890
00:37:29,520 --> 00:37:33,359
participate in did where they were

891
00:37:31,440 --> 00:37:36,560
designing a protocol and they wanted to

892
00:37:33,359 --> 00:37:38,078
allow originally used both json and cbor

893
00:37:36,560 --> 00:37:39,599
kind of your choice and past you know

894
00:37:38,079 --> 00:37:41,200
like a media type or something because

895
00:37:39,599 --> 00:37:42,320
this wasn't an ipv6 option it wasn't

896
00:37:41,200 --> 00:37:44,240
that low level

897
00:37:42,320 --> 00:37:45,440
um and eventually the working group

898
00:37:44,240 --> 00:37:47,439
concluded that

899
00:37:45,440 --> 00:37:48,880
let's just delete all the json stuff

900
00:37:47,440 --> 00:37:51,119
because it's actually

901
00:37:48,880 --> 00:37:52,800
much more cumbersome to use compared to

902
00:37:51,119 --> 00:37:53,359
just using c or by cumbersome i just

903
00:37:52,800 --> 00:37:55,200
mean

904
00:37:53,359 --> 00:37:56,880
bloated right and i don't think it

905
00:37:55,200 --> 00:37:58,480
provides you any value other than

906
00:37:56,880 --> 00:38:00,400
readability and i don't know that

907
00:37:58,480 --> 00:38:01,920
readability is actually important for an

908
00:38:00,400 --> 00:38:03,200
nd option since none of the other ones

909
00:38:01,920 --> 00:38:06,480
are text based

910
00:38:03,200 --> 00:38:09,598
and so uh in the in the maps here right

911
00:38:06,480 --> 00:38:10,560
the seabora map is basically a tuple of

912
00:38:09,599 --> 00:38:12,079
two tlv

913
00:38:10,560 --> 00:38:13,759
encoded things and so the thing to the

914
00:38:12,079 --> 00:38:14,800
left of the colon is one value and the

915
00:38:13,760 --> 00:38:15,599
thing to the right of the colon is

916
00:38:14,800 --> 00:38:17,599
another value

917
00:38:15,599 --> 00:38:19,520
so it's basically like an array of size

918
00:38:17,599 --> 00:38:21,280
two where you have something the left

919
00:38:19,520 --> 00:38:22,480
sum to the right so you can put a string

920
00:38:21,280 --> 00:38:24,720
on the left okay

921
00:38:22,480 --> 00:38:25,599
as so that the keys of your map could be

922
00:38:24,720 --> 00:38:28,560
a string

923
00:38:25,599 --> 00:38:30,880
but uh normal c bar stuff tends to put

924
00:38:28,560 --> 00:38:33,359
integers there which is more compact

925
00:38:30,880 --> 00:38:35,359
and so they're both unique and you need

926
00:38:33,359 --> 00:38:36,960
a registry for them in iana either way

927
00:38:35,359 --> 00:38:38,560
so that you don't have collisions

928
00:38:36,960 --> 00:38:40,960
and so all i'm saying is i don't see the

929
00:38:38,560 --> 00:38:43,520
value in using json

930
00:38:40,960 --> 00:38:45,040
as the native object format if you just

931
00:38:43,520 --> 00:38:45,440
specified it with steep or it would be

932
00:38:45,040 --> 00:38:48,400
more

933
00:38:45,440 --> 00:38:49,280
both more compact hence more widely

934
00:38:48,400 --> 00:38:50,720
applicable

935
00:38:49,280 --> 00:38:52,400
meaning you could pack more stuff into

936
00:38:50,720 --> 00:38:54,879
the same nd message

937
00:38:52,400 --> 00:38:55,520
um and i don't think the json buys you

938
00:38:54,880 --> 00:38:56,880
anything so

939
00:38:55,520 --> 00:38:58,160
anything like that's just me arguing

940
00:38:56,880 --> 00:39:00,079
that you should delete the json stuff

941
00:38:58,160 --> 00:39:01,200
but otherwise i love it and the cddo

942
00:39:00,079 --> 00:39:02,960
here looks fine

943
00:39:01,200 --> 00:39:04,879
it's just you're you're the left side of

944
00:39:02,960 --> 00:39:06,000
the colon you'd assign integer values to

945
00:39:04,880 --> 00:39:08,320
and those would be integers and a

946
00:39:06,000 --> 00:39:10,240
registry you define

947
00:39:08,320 --> 00:39:12,000
that's a very good point dave and i

948
00:39:10,240 --> 00:39:14,879
think i don't think we disagree

949
00:39:12,000 --> 00:39:16,240
because because json is really there

950
00:39:14,880 --> 00:39:18,960
more as of us

951
00:39:16,240 --> 00:39:20,720
you know as an example of the user side

952
00:39:18,960 --> 00:39:23,760
representation if you like

953
00:39:20,720 --> 00:39:25,200
than what's going on the wire thank you

954
00:39:23,760 --> 00:39:26,480
in the deep working group we start

955
00:39:25,200 --> 00:39:28,078
exactly the same way i can see you're

956
00:39:26,480 --> 00:39:29,680
going along the same path and i'm saying

957
00:39:28,079 --> 00:39:32,720
jump to the end jump to the other okay

958
00:39:29,680 --> 00:39:33,759
yeah that's a that's a good point thank

959
00:39:32,720 --> 00:39:43,279
you

960
00:39:33,760 --> 00:39:45,839
okay brian carpenter next

961
00:39:43,280 --> 00:39:45,839
we see you

962
00:39:46,960 --> 00:39:51,760
can you hear me yeah we can hear you

963
00:39:50,000 --> 00:39:54,079
okay good first time it didn't work for

964
00:39:51,760 --> 00:39:54,960
some reason i really wanted to say plus

965
00:39:54,079 --> 00:39:57,440
one today

966
00:39:54,960 --> 00:39:59,200
but this is more or less what we've done

967
00:39:57,440 --> 00:40:00,320
and grasped in the animal working group

968
00:39:59,200 --> 00:40:02,160
and

969
00:40:00,320 --> 00:40:04,240
you know there is nothing you can't you

970
00:40:02,160 --> 00:40:05,118
can't do because of restricting yourself

971
00:40:04,240 --> 00:40:07,118
to sibo

972
00:40:05,119 --> 00:40:08,800
and if someone really wants to do json

973
00:40:07,119 --> 00:40:10,800
they basically just

974
00:40:08,800 --> 00:40:12,400
stuff the json into seymour and it

975
00:40:10,800 --> 00:40:15,280
arrives at the other end

976
00:40:12,400 --> 00:40:18,720
uh in good shape so it really it really

977
00:40:15,280 --> 00:40:18,720
is more powerful to say sibo

978
00:40:18,960 --> 00:40:22,800
okay excellent so i you know again i was

979
00:40:21,440 --> 00:40:24,400
i was thinking

980
00:40:22,800 --> 00:40:25,839
there's the mapping between seabor and

981
00:40:24,400 --> 00:40:29,200
jason

982
00:40:25,839 --> 00:40:29,680
is is easy then the natural choice area

983
00:40:29,200 --> 00:40:31,520
i think

984
00:40:29,680 --> 00:40:33,118
you know for a router cli if you were

985
00:40:31,520 --> 00:40:33,839
taking that as an example would be to

986
00:40:33,119 --> 00:40:36,560
give

987
00:40:33,839 --> 00:40:38,960
you know type in json objects and and

988
00:40:36,560 --> 00:40:38,960
the sea

989
00:40:40,640 --> 00:40:43,759
i'm pretty sure that exists as a web

990
00:40:42,480 --> 00:40:46,079
service already

991
00:40:43,760 --> 00:40:48,160
yeah yeah this is easy stuff i've done

992
00:40:46,079 --> 00:40:50,960
most of my code in python and python

993
00:40:48,160 --> 00:40:50,960
it's just seamless

994
00:40:51,200 --> 00:40:56,000
yeah well thanks for for for for

995
00:40:54,240 --> 00:40:56,479
supporting dave on that that that sounds

996
00:40:56,000 --> 00:41:01,280
like

997
00:40:56,480 --> 00:41:01,280
we should clean that up okay andrew

998
00:41:02,800 --> 00:41:06,720
i also just wanted to say that um i

999
00:41:05,760 --> 00:41:08,480
definitely

1000
00:41:06,720 --> 00:41:11,200
prefer the straight sea ball option

1001
00:41:08,480 --> 00:41:13,359
rather than the json

1002
00:41:11,200 --> 00:41:15,279
not really a fan of having to process

1003
00:41:13,359 --> 00:41:17,680
strings etc

1004
00:41:15,280 --> 00:41:20,800
and the bloat that they bring so yeah

1005
00:41:17,680 --> 00:41:24,640
i'd also just want to second that

1006
00:41:20,800 --> 00:41:27,680
okay good sounds like we have

1007
00:41:24,640 --> 00:41:30,879
a clear task then

1008
00:41:27,680 --> 00:41:30,879
of fixing that

1009
00:41:31,440 --> 00:41:36,560
um okay so let me i see brian you're

1010
00:41:35,200 --> 00:41:39,759
back in

1011
00:41:36,560 --> 00:41:43,359
no you get a cue is done and see how

1012
00:41:39,760 --> 00:41:44,960
if it times out um so the

1013
00:41:43,359 --> 00:41:47,040
suggestion is to have a new iano

1014
00:41:44,960 --> 00:41:50,800
registry then for the uh

1015
00:41:47,040 --> 00:41:53,119
cr option um we have the cddl going

1016
00:41:50,800 --> 00:41:56,800
directly in the registry

1017
00:41:53,119 --> 00:41:58,319
um so you could

1018
00:41:56,800 --> 00:42:01,200
you know for simple options you could

1019
00:41:58,319 --> 00:42:02,720
just have the iana registry without any

1020
00:42:01,200 --> 00:42:06,240
further you know rfc

1021
00:42:02,720 --> 00:42:06,720
or any itf work done um and this should

1022
00:42:06,240 --> 00:42:08,479
have

1023
00:42:06,720 --> 00:42:09,759
expert review and i think the expert

1024
00:42:08,480 --> 00:42:11,520
should have the option

1025
00:42:09,760 --> 00:42:14,000
we should write some guidance text i

1026
00:42:11,520 --> 00:42:17,759
think for the expert review

1027
00:42:14,000 --> 00:42:20,000
where he could or she could

1028
00:42:17,760 --> 00:42:20,960
punt to the working group or to the itf

1029
00:42:20,000 --> 00:42:22,800
to

1030
00:42:20,960 --> 00:42:24,480
decide that an idf document would be

1031
00:42:22,800 --> 00:42:28,560
required for a particular option

1032
00:42:24,480 --> 00:42:28,560
depending on the semantics of the option

1033
00:42:28,839 --> 00:42:31,839
lorenzo

1034
00:42:41,440 --> 00:42:45,520
lorenzo do you wanna go ahead there's a

1035
00:42:43,680 --> 00:42:49,440
little bit of delay everyone it's

1036
00:42:45,520 --> 00:42:49,440
it's just how mutika works with

1037
00:42:53,359 --> 00:42:59,440
sorry there's a problem exist between

1038
00:42:56,560 --> 00:43:03,040
keyboard and chair

1039
00:42:59,440 --> 00:43:08,160
so i'm not

1040
00:43:03,040 --> 00:43:08,160
i don't um really see a lot of

1041
00:43:08,319 --> 00:43:12,240
value in this proposal in the sense that

1042
00:43:10,079 --> 00:43:14,000
i think options are mostly useful to

1043
00:43:12,240 --> 00:43:15,200
convey semantics

1044
00:43:14,000 --> 00:43:17,040
and this doesn't really give you any

1045
00:43:15,200 --> 00:43:18,319
semantics you you it basically has like

1046
00:43:17,040 --> 00:43:20,720
a

1047
00:43:18,319 --> 00:43:22,079
a human readable description it it like

1048
00:43:20,720 --> 00:43:23,520
clearly defines the syntax but it

1049
00:43:22,079 --> 00:43:24,880
doesn't say what the option means it

1050
00:43:23,520 --> 00:43:26,400
doesn't say what somebody

1051
00:43:24,880 --> 00:43:28,640
what some implementation should do if it

1052
00:43:26,400 --> 00:43:29,200
receives one of these it doesn't say how

1053
00:43:28,640 --> 00:43:30,480
the

1054
00:43:29,200 --> 00:43:32,480
necessarily even how the fields are

1055
00:43:30,480 --> 00:43:33,599
defined like maybe i don't even i don't

1056
00:43:32,480 --> 00:43:35,119
know like

1057
00:43:33,599 --> 00:43:37,119
if you have an integer lifetime field is

1058
00:43:35,119 --> 00:43:40,560
that milliseconds is that microseconds

1059
00:43:37,119 --> 00:43:42,319
what is that so maybe that's and

1060
00:43:40,560 --> 00:43:45,119
so i think you you kind of need you're

1061
00:43:42,319 --> 00:43:48,400
kind of going to need a document anyway

1062
00:43:45,119 --> 00:43:50,720
so at that point i'm not sure

1063
00:43:48,400 --> 00:43:52,240
what the use is of defining a a common

1064
00:43:50,720 --> 00:43:52,560
format because i don't think that that's

1065
00:43:52,240 --> 00:43:54,640
a

1066
00:43:52,560 --> 00:43:55,599
big part of the work in defining a new

1067
00:43:54,640 --> 00:43:57,759
option

1068
00:43:55,599 --> 00:43:59,359
and we think if you look at the prep 64

1069
00:43:57,760 --> 00:44:00,880
option and yeah we

1070
00:43:59,359 --> 00:44:02,640
there happened to be some bike shedding

1071
00:44:00,880 --> 00:44:03,760
over like you know what fields we're

1072
00:44:02,640 --> 00:44:05,598
going to go where but i think we would

1073
00:44:03,760 --> 00:44:07,520
have had that anyway

1074
00:44:05,599 --> 00:44:08,960
um i don't think it's true that in order

1075
00:44:07,520 --> 00:44:11,359
to

1076
00:44:08,960 --> 00:44:12,640
um in order to get this past the kernel

1077
00:44:11,359 --> 00:44:13,759
you need

1078
00:44:12,640 --> 00:44:15,200
i i don't think it's true that this

1079
00:44:13,760 --> 00:44:16,560
makes it easier to make it to get this

1080
00:44:15,200 --> 00:44:17,200
past the kernel there are ways of doing

1081
00:44:16,560 --> 00:44:20,720
this today

1082
00:44:17,200 --> 00:44:22,879
i mean um linux has the nd options or

1083
00:44:20,720 --> 00:44:26,160
and the user up to our dnss facility

1084
00:44:22,880 --> 00:44:29,839
where you can pass up arbitrary options

1085
00:44:26,160 --> 00:44:31,440
and um i also you know

1086
00:44:29,839 --> 00:44:32,720
the first time we defined some of these

1087
00:44:31,440 --> 00:44:34,000
now i'm going to have to go and find the

1088
00:44:32,720 --> 00:44:37,359
seaboard passer

1089
00:44:34,000 --> 00:44:39,359
which i don't have so i'd much rather

1090
00:44:37,359 --> 00:44:40,720
write my tlb code which i have libraries

1091
00:44:39,359 --> 00:44:42,400
for already

1092
00:44:40,720 --> 00:44:43,919
so that's just as a sort of

1093
00:44:42,400 --> 00:44:46,319
implementation perspective

1094
00:44:43,920 --> 00:44:47,760
so lorenzo how many uh implementations

1095
00:44:46,319 --> 00:44:51,839
do you have a pref64

1096
00:44:47,760 --> 00:44:51,839
in in router operating systems

1097
00:44:54,000 --> 00:45:00,000
um i we have one but it's an sdn one

1098
00:44:58,079 --> 00:45:02,160
so yeah maybe that doesn't count i don't

1099
00:45:00,000 --> 00:45:02,160
know

1100
00:45:02,720 --> 00:45:05,759
i i think that's what you know one of

1101
00:45:04,560 --> 00:45:08,480
the

1102
00:45:05,760 --> 00:45:10,160
purposes here is is to avoid that

1103
00:45:08,480 --> 00:45:12,000
problem right like we had with

1104
00:45:10,160 --> 00:45:14,240
especially the dns option for example

1105
00:45:12,000 --> 00:45:15,359
where it took many many years before you

1106
00:45:14,240 --> 00:45:19,040
had

1107
00:45:15,359 --> 00:45:21,598
had support in the network devices

1108
00:45:19,040 --> 00:45:23,440
at least in this scheme the idea is to

1109
00:45:21,599 --> 00:45:27,200
do that once on the

1110
00:45:23,440 --> 00:45:31,359
on the router os side and and then even

1111
00:45:27,200 --> 00:45:31,359
but even there just define a

1112
00:45:31,520 --> 00:45:34,000
get it from radius you know because

1113
00:45:32,960 --> 00:45:35,760
you're gonna have to get it from

1114
00:45:34,000 --> 00:45:37,839
somewhere

1115
00:45:35,760 --> 00:45:39,119
anyway i suppose i mean i suppose it

1116
00:45:37,839 --> 00:45:41,520
makes it easier if you're like literally

1117
00:45:39,119 --> 00:45:42,720
typing the configuration by hand perhaps

1118
00:45:41,520 --> 00:45:47,839
in the sense you have that you can type

1119
00:45:42,720 --> 00:45:47,839
in the json and so on but

1120
00:45:48,000 --> 00:45:54,400
well the difference is uh yes you could

1121
00:45:51,119 --> 00:45:57,520
certainly have a way of passing opaque

1122
00:45:54,400 --> 00:45:59,359
opaque tlvs um

1123
00:45:57,520 --> 00:46:01,440
but this allows you you know with the

1124
00:45:59,359 --> 00:46:04,480
key space it allows you to

1125
00:46:01,440 --> 00:46:06,160
you know to subscribe to

1126
00:46:04,480 --> 00:46:07,920
the messages if you're an application

1127
00:46:06,160 --> 00:46:09,118
for example and you could also as an

1128
00:46:07,920 --> 00:46:13,599
application just

1129
00:46:09,119 --> 00:46:15,359
state that please mr network send me

1130
00:46:13,599 --> 00:46:16,800
this set of configuration information

1131
00:46:15,359 --> 00:46:18,560
and it would purely be a

1132
00:46:16,800 --> 00:46:20,640
an action between the network operator

1133
00:46:18,560 --> 00:46:23,759
and the application

1134
00:46:20,640 --> 00:46:26,839
at that point you would take out changes

1135
00:46:23,760 --> 00:46:29,839
in in the underlying network

1136
00:46:26,839 --> 00:46:29,839
infrastructure

1137
00:46:31,680 --> 00:46:34,879
okay so we have a bunch of people in the

1138
00:46:33,359 --> 00:46:37,680
queue so why don't we

1139
00:46:34,880 --> 00:46:37,680
move on jen

1140
00:46:40,079 --> 00:46:44,800
actually going to say almost what

1141
00:46:42,640 --> 00:46:48,078
lorenzo was saying that

1142
00:46:44,800 --> 00:46:49,920
frog we not just talking about

1143
00:46:48,079 --> 00:46:51,680
option format right we need to know what

1144
00:46:49,920 --> 00:46:53,440
the client is supposed to do and what

1145
00:46:51,680 --> 00:46:54,560
kind of behavior i can expect from a

1146
00:46:53,440 --> 00:46:56,880
client

1147
00:46:54,560 --> 00:46:59,359
so i'm a bit surprised to hear there is

1148
00:46:56,880 --> 00:47:01,280
no ietf document required

1149
00:46:59,359 --> 00:47:03,440
because i think this part needs to be

1150
00:47:01,280 --> 00:47:05,200
specified somewhere otherwise i cannot

1151
00:47:03,440 --> 00:47:06,960
reliably use it in the network

1152
00:47:05,200 --> 00:47:08,720
if every operating system gonna do

1153
00:47:06,960 --> 00:47:09,440
something different with the option i

1154
00:47:08,720 --> 00:47:13,279
said

1155
00:47:09,440 --> 00:47:16,640
however i like the idea of being able to

1156
00:47:13,280 --> 00:47:18,160
specify some random thing on my router

1157
00:47:16,640 --> 00:47:21,440
without waiting for the new

1158
00:47:18,160 --> 00:47:22,720
version really yeah so i i i think it's

1159
00:47:21,440 --> 00:47:24,640
a good idea right

1160
00:47:22,720 --> 00:47:26,078
so i fully support the idea of the

1161
00:47:24,640 --> 00:47:28,480
universal option format

1162
00:47:26,079 --> 00:47:30,319
i just still think we need to make sure

1163
00:47:28,480 --> 00:47:30,960
we are on the same page about what it

1164
00:47:30,319 --> 00:47:33,759
means for

1165
00:47:30,960 --> 00:47:34,160
every participant and yes we do have at

1166
00:47:33,760 --> 00:47:37,359
least

1167
00:47:34,160 --> 00:47:39,680
one uh text for implementation on the

1168
00:47:37,359 --> 00:47:41,839
router

1169
00:47:39,680 --> 00:47:43,839
yes i i mean this this proposal is

1170
00:47:41,839 --> 00:47:45,040
trying to design ourselves out to a job

1171
00:47:43,839 --> 00:47:47,920
and and

1172
00:47:45,040 --> 00:47:53,839
you know we cannot yeah it's the future

1173
00:47:47,920 --> 00:47:53,839
won't tell if that was a good idea

1174
00:48:00,240 --> 00:48:06,640
can you hear me okay cool

1175
00:48:03,599 --> 00:48:09,680
so i have a question um so

1176
00:48:06,640 --> 00:48:10,720
if i got the your um your description

1177
00:48:09,680 --> 00:48:14,078
right about the option

1178
00:48:10,720 --> 00:48:14,879
is that uh the main goal is to reduce

1179
00:48:14,079 --> 00:48:17,520
the overhead

1180
00:48:14,880 --> 00:48:19,760
that they do essentially specify new

1181
00:48:17,520 --> 00:48:23,680
options is that correct

1182
00:48:19,760 --> 00:48:26,319
yes part of it yes okay so

1183
00:48:23,680 --> 00:48:26,879
if that is the case um so my question

1184
00:48:26,319 --> 00:48:30,079
would be

1185
00:48:26,880 --> 00:48:31,280
if um your assessment would be that the

1186
00:48:30,079 --> 00:48:34,400
main overhead

1187
00:48:31,280 --> 00:48:36,480
is in um you know essentially the

1188
00:48:34,400 --> 00:48:38,880
working group specifying the syntax

1189
00:48:36,480 --> 00:48:40,319
in which case i would agree that this

1190
00:48:38,880 --> 00:48:42,640
would make a difference

1191
00:48:40,319 --> 00:48:44,160
or whether the main overhead is in

1192
00:48:42,640 --> 00:48:46,319
specifying the semantics

1193
00:48:44,160 --> 00:48:48,720
in which case it wouldn't so that'll be

1194
00:48:46,319 --> 00:48:52,400
it's a question not a statement

1195
00:48:48,720 --> 00:48:55,759
um so my concern in a way is that

1196
00:48:52,400 --> 00:48:58,960
if the main overhead is in the semantics

1197
00:48:55,760 --> 00:49:00,880
then you know still uh we wouldn't be

1198
00:48:58,960 --> 00:49:02,559
making much of a difference in that

1199
00:49:00,880 --> 00:49:05,599
respect and

1200
00:49:02,559 --> 00:49:08,160
my other concern is that um

1201
00:49:05,599 --> 00:49:09,280
you know if folks get to specify the

1202
00:49:08,160 --> 00:49:11,839
syntax quickly

1203
00:49:09,280 --> 00:49:13,280
and we don't get a document then

1204
00:49:11,839 --> 00:49:16,160
essentially i wonder

1205
00:49:13,280 --> 00:49:16,640
you know what would implementations uh

1206
00:49:16,160 --> 00:49:18,879
uh

1207
00:49:16,640 --> 00:49:20,319
referred to when you know trying to

1208
00:49:18,880 --> 00:49:22,400
specify this

1209
00:49:20,319 --> 00:49:25,119
when trying to implement a specific

1210
00:49:22,400 --> 00:49:27,440
option okay so there's a way for them

1211
00:49:25,119 --> 00:49:28,800
already if you know this is um you know

1212
00:49:27,440 --> 00:49:29,520
if this document is adopted and

1213
00:49:28,800 --> 00:49:32,400
published

1214
00:49:29,520 --> 00:49:34,480
there will be a way for them to specify

1215
00:49:32,400 --> 00:49:36,400
the syntax of new options

1216
00:49:34,480 --> 00:49:37,839
but still in order to be able to do

1217
00:49:36,400 --> 00:49:40,319
something useful they

1218
00:49:37,839 --> 00:49:41,759
should be able to agree on the semantics

1219
00:49:40,319 --> 00:49:43,520
and if there's no

1220
00:49:41,760 --> 00:49:44,800
document that specifies the semantics

1221
00:49:43,520 --> 00:49:47,599
for the option

1222
00:49:44,800 --> 00:49:49,599
then well we have a you know an inter we

1223
00:49:47,599 --> 00:49:52,720
would be having an interoperability

1224
00:49:49,599 --> 00:49:56,400
problem i think i

1225
00:49:52,720 --> 00:49:59,200
had yes um

1226
00:49:56,400 --> 00:50:00,480
i think i made that that point as well

1227
00:49:59,200 --> 00:50:04,000
that that's a very

1228
00:50:00,480 --> 00:50:06,000
well made point fernando and okay

1229
00:50:04,000 --> 00:50:07,119
and that that is why you know we we

1230
00:50:06,000 --> 00:50:09,200
started out with this as

1231
00:50:07,119 --> 00:50:11,200
experimental because we are you know

1232
00:50:09,200 --> 00:50:14,399
what is the consequence of the idf

1233
00:50:11,200 --> 00:50:16,879
you know letting go if you like here

1234
00:50:14,400 --> 00:50:17,440
and uh and you know in the sense moving

1235
00:50:16,880 --> 00:50:20,720
power

1236
00:50:17,440 --> 00:50:21,280
from from the itf to implementers in a

1237
00:50:20,720 --> 00:50:25,118
sense

1238
00:50:21,280 --> 00:50:27,280
um but i was

1239
00:50:25,119 --> 00:50:29,920
also suggesting to put in a safety valve

1240
00:50:27,280 --> 00:50:32,079
that the you know expert reviewer could

1241
00:50:29,920 --> 00:50:34,240
you could say you know how the semantics

1242
00:50:32,079 --> 00:50:35,520
here needs to be specified this is so

1243
00:50:34,240 --> 00:50:38,399
complex that

1244
00:50:35,520 --> 00:50:39,520
that you need an rc document uh to get a

1245
00:50:38,400 --> 00:50:43,359
code point here

1246
00:50:39,520 --> 00:50:44,880
so so you know i don't know i i

1247
00:50:43,359 --> 00:50:47,920
certainly share the same

1248
00:50:44,880 --> 00:50:51,359
um same view as

1249
00:50:47,920 --> 00:50:53,359
as you um

1250
00:50:51,359 --> 00:50:55,359
and sort of you know this came out of

1251
00:50:53,359 --> 00:50:56,880
you know the ipv6 only debates we had

1252
00:50:55,359 --> 00:50:58,160
where we spent you know two years

1253
00:50:56,880 --> 00:50:59,839
debating a single bit

1254
00:50:58,160 --> 00:51:02,240
or a single flag and what it was

1255
00:50:59,839 --> 00:51:04,880
supposed to mean

1256
00:51:02,240 --> 00:51:06,399
um and i'm not sure right perhaps it

1257
00:51:04,880 --> 00:51:08,960
would have been better in that case to

1258
00:51:06,400 --> 00:51:12,480
just specify the syntax and then

1259
00:51:08,960 --> 00:51:15,280
the implementations would evolve

1260
00:51:12,480 --> 00:51:17,200
you know into doing what was the right

1261
00:51:15,280 --> 00:51:20,079
thing for them right it wasn't necessary

1262
00:51:17,200 --> 00:51:23,598
that the itf would have

1263
00:51:20,079 --> 00:51:28,720
provided value there um but

1264
00:51:23,599 --> 00:51:28,720
yeah i you know you're right i mean this

1265
00:51:29,119 --> 00:51:32,720
we don't know what the consequences are

1266
00:51:30,800 --> 00:51:36,240
of sort of you know opening this up

1267
00:51:32,720 --> 00:51:37,919
up completely right so let's say

1268
00:51:36,240 --> 00:51:39,359
my concern is that you know essentially

1269
00:51:37,920 --> 00:51:41,599
besides the syntax the

1270
00:51:39,359 --> 00:51:43,440
you know implementations need to agree

1271
00:51:41,599 --> 00:51:45,760
on what they are doing with the option

1272
00:51:43,440 --> 00:51:47,599
so you know part of my question is if

1273
00:51:45,760 --> 00:51:49,760
there's not going to be a document

1274
00:51:47,599 --> 00:51:51,839
because you know uh let's say

1275
00:51:49,760 --> 00:51:53,280
implementations are relieved from that

1276
00:51:51,839 --> 00:51:55,200
because they can already specify the

1277
00:51:53,280 --> 00:51:56,000
option where they would still need to

1278
00:51:55,200 --> 00:51:58,720
point somewhere

1279
00:51:56,000 --> 00:52:00,000
would that be like you know i don't know

1280
00:51:58,720 --> 00:52:02,879
vendor website uh

1281
00:52:00,000 --> 00:52:04,160
an open source implementation still i

1282
00:52:02,880 --> 00:52:07,040
mean even if

1283
00:52:04,160 --> 00:52:07,759
it looks to me that somehow you know the

1284
00:52:07,040 --> 00:52:10,960
document

1285
00:52:07,760 --> 00:52:11,359
uh we'd still need a document it's uh it

1286
00:52:10,960 --> 00:52:13,200
just

1287
00:52:11,359 --> 00:52:15,040
would be elsewhere whether that's a

1288
00:52:13,200 --> 00:52:18,078
website a wiki uh

1289
00:52:15,040 --> 00:52:21,200
something but you know still if you know

1290
00:52:18,079 --> 00:52:23,920
if we want interoperability well

1291
00:52:21,200 --> 00:52:26,000
a document is going to be needed so so i

1292
00:52:23,920 --> 00:52:28,240
think it depends right in some cases

1293
00:52:26,000 --> 00:52:29,839
and and certainly you know we i

1294
00:52:28,240 --> 00:52:31,279
certainly are is not

1295
00:52:29,839 --> 00:52:33,520
all the opinion that we should not have

1296
00:52:31,280 --> 00:52:35,200
a document you can have

1297
00:52:33,520 --> 00:52:37,280
you know and there should be some stable

1298
00:52:35,200 --> 00:52:38,720
reference um and it might be a document

1299
00:52:37,280 --> 00:52:41,359
that exists already or

1300
00:52:38,720 --> 00:52:42,959
or it might be obvious right if you you

1301
00:52:41,359 --> 00:52:44,319
know the option is here's here's the

1302
00:52:42,960 --> 00:52:47,520
address of the

1303
00:52:44,319 --> 00:52:49,200
encrypted dns resolver then

1304
00:52:47,520 --> 00:52:50,559
presumably there are other documents you

1305
00:52:49,200 --> 00:52:52,480
could reference that

1306
00:52:50,559 --> 00:52:54,160
you would need this specific one for

1307
00:52:52,480 --> 00:52:56,960
this option for example

1308
00:52:54,160 --> 00:52:58,480
but but yeah i i share your i share your

1309
00:52:56,960 --> 00:53:01,760
concern

1310
00:52:58,480 --> 00:53:03,839
okay so we're a bit over time so let's

1311
00:53:01,760 --> 00:53:05,520
um with two people in the queue dave

1312
00:53:03,839 --> 00:53:07,920
thaler and michael

1313
00:53:05,520 --> 00:53:07,920
dave

1314
00:53:13,440 --> 00:53:17,200
um so while i've been waiting in the

1315
00:53:15,040 --> 00:53:19,920
queue i have now uh three comments and

1316
00:53:17,200 --> 00:53:22,720
so two responses and then one suggestion

1317
00:53:19,920 --> 00:53:24,960
um lorenzo's points about you know not

1318
00:53:22,720 --> 00:53:26,160
having a seabor parser and so on mirror

1319
00:53:24,960 --> 00:53:26,880
is a bunch of the discussion we were

1320
00:53:26,160 --> 00:53:28,879
having in

1321
00:53:26,880 --> 00:53:30,319
i think the suit working group for that

1322
00:53:28,880 --> 00:53:33,440
one where

1323
00:53:30,319 --> 00:53:36,319
uh i was eventually convinced uh

1324
00:53:33,440 --> 00:53:38,160
two things seaward parsers are really

1325
00:53:36,319 --> 00:53:40,000
small because they're meant for

1326
00:53:38,160 --> 00:53:42,000
even applicability to tiny constrained

1327
00:53:40,000 --> 00:53:43,440
devices and there's open source ones out

1328
00:53:42,000 --> 00:53:45,119
there so that's quite easy

1329
00:53:43,440 --> 00:53:46,400
but the other point was if you have a

1330
00:53:45,119 --> 00:53:47,839
structure that you're encoding that's

1331
00:53:46,400 --> 00:53:49,440
simple enough like there's not a bunch

1332
00:53:47,839 --> 00:53:50,720
of optional things it's just

1333
00:53:49,440 --> 00:53:53,040
so the optional ones are those question

1334
00:53:50,720 --> 00:53:53,359
mark colons um you can actually parse it

1335
00:53:53,040 --> 00:53:55,040
um

1336
00:53:53,359 --> 00:53:56,640
with just a regular typedesk struct

1337
00:53:55,040 --> 00:53:58,000
right because it's just a binary thing

1338
00:53:56,640 --> 00:53:59,440
and so it's actually flexible enough

1339
00:53:58,000 --> 00:54:00,559
depending on how you define what option

1340
00:53:59,440 --> 00:54:02,240
you're going to put in there

1341
00:54:00,559 --> 00:54:03,760
um so anyway other working groups have

1342
00:54:02,240 --> 00:54:04,879
decided that that actually wasn't a

1343
00:54:03,760 --> 00:54:06,400
problem either that they could grab a

1344
00:54:04,880 --> 00:54:07,920
keyboard parser that's only

1345
00:54:06,400 --> 00:54:10,240
you know a very tiny number of lines of

1346
00:54:07,920 --> 00:54:12,480
code and so on

1347
00:54:10,240 --> 00:54:14,399
uh other comment that was a response

1348
00:54:12,480 --> 00:54:17,280
before i get to my suggestion

1349
00:54:14,400 --> 00:54:18,720
is i think the main overhead uh that

1350
00:54:17,280 --> 00:54:20,160
we've seen in the ietf at least that

1351
00:54:18,720 --> 00:54:21,919
i've seen the ietf

1352
00:54:20,160 --> 00:54:23,598
ola had on one of the first slides which

1353
00:54:21,920 --> 00:54:25,359
is people arguing about whether the

1354
00:54:23,599 --> 00:54:26,720
something belongs in an ra option or a

1355
00:54:25,359 --> 00:54:28,400
dhcp option or both

1356
00:54:26,720 --> 00:54:30,879
and every working group gets into that

1357
00:54:28,400 --> 00:54:33,280
debate we said oh no not this again

1358
00:54:30,880 --> 00:54:34,160
so don't underestimate that and then in

1359
00:54:33,280 --> 00:54:37,119
many cases

1360
00:54:34,160 --> 00:54:38,960
uh the duplication of specifying both as

1361
00:54:37,119 --> 00:54:40,880
twice the work of specifying one and so

1362
00:54:38,960 --> 00:54:41,760
i think ola is at least cutting the work

1363
00:54:40,880 --> 00:54:43,520
la and tim

1364
00:54:41,760 --> 00:54:44,880
or at least cutting the work in half and

1365
00:54:43,520 --> 00:54:46,319
probably much more than half

1366
00:54:44,880 --> 00:54:48,319
but it doesn't make the need for a spec

1367
00:54:46,319 --> 00:54:50,319
go away and that's what uh my last

1368
00:54:48,319 --> 00:54:53,440
comment goes to you

1369
00:54:50,319 --> 00:54:55,119
on expert review um so i'm going to make

1370
00:54:53,440 --> 00:54:57,119
a suggestion but on expert review i

1371
00:54:55,119 --> 00:54:57,839
happen to be the expert for the iftype

1372
00:54:57,119 --> 00:55:01,119
registry

1373
00:54:57,839 --> 00:55:02,400
which is listed as um as expert review

1374
00:55:01,119 --> 00:55:04,160
and one of the requirements for the

1375
00:55:02,400 --> 00:55:05,200
expert review and that one is when you

1376
00:55:04,160 --> 00:55:07,040
submit the expert

1377
00:55:05,200 --> 00:55:09,200
you need a pointer to a spec it doesn't

1378
00:55:07,040 --> 00:55:10,720
have to be a spec that's actually public

1379
00:55:09,200 --> 00:55:12,399
and so if you have a spec that's you

1380
00:55:10,720 --> 00:55:13,520
know a private spec as long as you're

1381
00:55:12,400 --> 00:55:14,000
willing to share it with the expert you

1382
00:55:13,520 --> 00:55:16,160
can get

1383
00:55:14,000 --> 00:55:18,160
the number so now let me get to what my

1384
00:55:16,160 --> 00:55:20,319
specific suggestion is

1385
00:55:18,160 --> 00:55:21,759
once you convert to cbor and use

1386
00:55:20,319 --> 00:55:24,319
integers for the keys

1387
00:55:21,760 --> 00:55:26,160
okay integers that are smaller numbers

1388
00:55:24,319 --> 00:55:28,000
are encoded in fewer bytes

1389
00:55:26,160 --> 00:55:29,920
okay so what i'm going to suggest is if

1390
00:55:28,000 --> 00:55:34,319
you say let's use

1391
00:55:29,920 --> 00:55:36,960
say ietf consensus to get any number

1392
00:55:34,319 --> 00:55:37,759
that it can be can be represented in two

1393
00:55:36,960 --> 00:55:40,319
bytes

1394
00:55:37,760 --> 00:55:42,079
and expert review with a specification

1395
00:55:40,319 --> 00:55:42,558
needed for anything larger than two

1396
00:55:42,079 --> 00:55:44,480
bytes

1397
00:55:42,559 --> 00:55:46,480
okay that means there's an incentive to

1398
00:55:44,480 --> 00:55:47,200
get ietf consensus to get the efficient

1399
00:55:46,480 --> 00:55:49,200
encoding

1400
00:55:47,200 --> 00:55:50,480
but it doesn't stop you from from doing

1401
00:55:49,200 --> 00:55:51,839
your own thing if you want to with a

1402
00:55:50,480 --> 00:55:52,960
high enough number as long as you go

1403
00:55:51,839 --> 00:55:54,400
through

1404
00:55:52,960 --> 00:55:56,079
so we've got other cases where you have

1405
00:55:54,400 --> 00:55:57,280
two different uh you know the low spin

1406
00:55:56,079 --> 00:55:58,960
numbers and the high numbers have

1407
00:55:57,280 --> 00:55:59,920
different reviews and so my suggestion

1408
00:55:58,960 --> 00:56:03,280
is

1409
00:55:59,920 --> 00:56:04,559
ietf consensus or uh expert review with

1410
00:56:03,280 --> 00:56:06,720
a spec

1411
00:56:04,559 --> 00:56:08,000
for those two cases but in either cases

1412
00:56:06,720 --> 00:56:09,279
uh you need a spec

1413
00:56:08,000 --> 00:56:10,799
it's just another one only the expert

1414
00:56:09,280 --> 00:56:12,720
review has to see it so if you have like

1415
00:56:10,799 --> 00:56:15,599
an nda spec or something like that

1416
00:56:12,720 --> 00:56:16,000
okay a non-non-disclosure agreement you

1417
00:56:15,599 --> 00:56:17,839
can still

1418
00:56:16,000 --> 00:56:19,359
get a number for use on your routers or

1419
00:56:17,839 --> 00:56:22,400
whatever so that would be my suggestion

1420
00:56:19,359 --> 00:56:22,799
thanks excellent thanks dave that's

1421
00:56:22,400 --> 00:56:26,240
useful

1422
00:56:22,799 --> 00:56:31,440
and by the way there is a raise of hands

1423
00:56:26,240 --> 00:56:35,200
for if you've read the draft going on

1424
00:56:31,440 --> 00:56:35,200
okay and i think michael

1425
00:56:35,280 --> 00:56:39,440
hi is it working so i want to echo

1426
00:56:38,240 --> 00:56:41,359
everything dave said

1427
00:56:39,440 --> 00:56:42,839
said it better than me um but i also

1428
00:56:41,359 --> 00:56:45,279
want to suggest that the

1429
00:56:42,839 --> 00:56:46,240
the um and the some of the discussion

1430
00:56:45,280 --> 00:56:48,799
between um

1431
00:56:46,240 --> 00:56:50,399
jen and lorenzo in the chat um the the

1432
00:56:48,799 --> 00:56:52,319
real big problem i think for

1433
00:56:50,400 --> 00:56:54,160
actually figuring out what the semantics

1434
00:56:52,319 --> 00:56:55,759
are of the thing

1435
00:56:54,160 --> 00:56:57,920
is actually letting people to build some

1436
00:56:55,760 --> 00:56:59,119
running code and and we continuously get

1437
00:56:57,920 --> 00:57:01,920
into this thing well

1438
00:56:59,119 --> 00:57:03,280
we we've implemented some new ra option

1439
00:57:01,920 --> 00:57:03,839
but it's not going to get out there be

1440
00:57:03,280 --> 00:57:07,040
usable

1441
00:57:03,839 --> 00:57:08,799
until you know five years of of uh

1442
00:57:07,040 --> 00:57:10,480
of revisions of routers and so i think

1443
00:57:08,799 --> 00:57:12,720
that this this lets people do some

1444
00:57:10,480 --> 00:57:14,319
experiments easily and figure out this

1445
00:57:12,720 --> 00:57:17,598
is useful this is stupid

1446
00:57:14,319 --> 00:57:20,160
um and come back in so this really puts

1447
00:57:17,599 --> 00:57:21,280
it into someone who has a a client

1448
00:57:20,160 --> 00:57:23,520
implementation

1449
00:57:21,280 --> 00:57:25,040
a host implementation that says okay i

1450
00:57:23,520 --> 00:57:26,880
want to try this thing out

1451
00:57:25,040 --> 00:57:28,640
i'm going to get a number and that's why

1452
00:57:26,880 --> 00:57:30,319
expert review is appropriate and not

1453
00:57:28,640 --> 00:57:30,960
spec required and i totally think yeah

1454
00:57:30,319 --> 00:57:32,640
three bytes

1455
00:57:30,960 --> 00:57:34,319
a three byte number is perfectly fine

1456
00:57:32,640 --> 00:57:37,118
for this kind of effort

1457
00:57:34,319 --> 00:57:38,799
um and to say figure it out and go well

1458
00:57:37,119 --> 00:57:39,920
that actually wasn't very useful i did

1459
00:57:38,799 --> 00:57:41,280
this and this and this and this wasn't

1460
00:57:39,920 --> 00:57:42,160
very useful but maybe this other thing

1461
00:57:41,280 --> 00:57:44,319
will be better

1462
00:57:42,160 --> 00:57:46,160
and if we can get that down to you know

1463
00:57:44,319 --> 00:57:47,520
one month instead of two years

1464
00:57:46,160 --> 00:57:48,879
then i think that's a really useful

1465
00:57:47,520 --> 00:57:49,680
thing and that's why i really think this

1466
00:57:48,880 --> 00:57:52,079
is a useful

1467
00:57:49,680 --> 00:57:53,279
process even if in the end we actually

1468
00:57:52,079 --> 00:57:55,520
go and re-encode

1469
00:57:53,280 --> 00:57:56,319
the the semantics in the traditional tlv

1470
00:57:55,520 --> 00:57:59,040
format

1471
00:57:56,319 --> 00:58:00,480
the the result of the experiment will

1472
00:57:59,040 --> 00:58:04,720
will be very useful

1473
00:58:00,480 --> 00:58:04,720
uh even if we wind up doing that thanks

1474
00:58:05,839 --> 00:58:12,720
so bob i have a question if we should um

1475
00:58:10,480 --> 00:58:13,760
if the working group would like to adopt

1476
00:58:12,720 --> 00:58:16,720
this but this is

1477
00:58:13,760 --> 00:58:17,280
without my chair hat on so it's up to

1478
00:58:16,720 --> 00:58:20,160
you if

1479
00:58:17,280 --> 00:58:20,880
if you think there's enough people to

1480
00:58:20,160 --> 00:58:23,520
also

1481
00:58:20,880 --> 00:58:24,240
the the poll for reading the draft

1482
00:58:23,520 --> 00:58:27,920
there's

1483
00:58:24,240 --> 00:58:31,279
um 16 said they have three they said

1484
00:58:27,920 --> 00:58:34,400
they had not and then out of

1485
00:58:31,280 --> 00:58:38,960
a total of 93 people so

1486
00:58:34,400 --> 00:58:42,079
better than the last draft um

1487
00:58:38,960 --> 00:58:42,960
i'm i i think i think this is very

1488
00:58:42,079 --> 00:58:46,400
interesting

1489
00:58:42,960 --> 00:58:49,440
work i'm not quite sure we're ready to

1490
00:58:46,400 --> 00:58:53,119
do the adoption call or at least here

1491
00:58:49,440 --> 00:58:54,319
um my take is that i sort of wonder if

1492
00:58:53,119 --> 00:58:57,200
you and we end up

1493
00:58:54,319 --> 00:58:57,599
doing specification required then i'm

1494
00:58:57,200 --> 00:59:01,520
not

1495
00:58:57,599 --> 00:59:04,000
so sure that the the encodings here

1496
00:59:01,520 --> 00:59:05,520
make are needed because i think the idea

1497
00:59:04,000 --> 00:59:08,480
of the encoding system

1498
00:59:05,520 --> 00:59:10,960
to try to not have a spec so i'm not

1499
00:59:08,480 --> 00:59:14,079
sure how to reconcile those two things

1500
00:59:10,960 --> 00:59:16,400
but i we we we are

1501
00:59:14,079 --> 00:59:18,160
over time so i think we should just go

1502
00:59:16,400 --> 00:59:23,119
on to the next talk at this point

1503
00:59:18,160 --> 00:59:23,118
so thank you thank you bo

1504
00:59:23,520 --> 00:59:29,599
okay so i have to go in and out of

1505
00:59:25,839 --> 00:59:29,599
screen sharing again that was weird

1506
00:59:30,079 --> 00:59:36,079
you can call the next speaker um

1507
00:59:33,520 --> 00:59:36,079
edward

1508
00:59:41,520 --> 00:59:49,680
there we are here just

1509
00:59:46,079 --> 00:59:49,680
enable your audio and video

1510
00:59:49,920 --> 01:00:01,839
stand in the pink box

1511
00:59:52,960 --> 01:00:01,839
there we go

1512
01:00:06,799 --> 01:00:10,640
my presentation here about the

1513
01:00:08,799 --> 01:00:13,920
literature for leakage of

1514
01:00:10,640 --> 01:00:15,759
information which we still have in md

1515
01:00:13,920 --> 01:00:17,599
i am asking here evident for adoption

1516
01:00:15,760 --> 01:00:18,880
but i am asking for adoption of the

1517
01:00:17,599 --> 01:00:21,520
problem

1518
01:00:18,880 --> 01:00:22,160
not the solution because in solution

1519
01:00:21,520 --> 01:00:24,000
definitely

1520
01:00:22,160 --> 01:00:26,799
we have some number of trade-offs for

1521
01:00:24,000 --> 01:00:29,680
example even internally between bank

1522
01:00:26,799 --> 01:00:32,079
we have some some disputes where to stop

1523
01:00:29,680 --> 01:00:34,480
because currently what is proposed is

1524
01:00:32,079 --> 01:00:35,280
conversion of uh the really big hole for

1525
01:00:34,480 --> 01:00:38,400
me

1526
01:00:35,280 --> 01:00:41,520
in the middle attack

1527
01:00:38,400 --> 01:00:43,440
to denial of service and

1528
01:00:41,520 --> 01:00:44,640
my partner shepard was not satisfied at

1529
01:00:43,440 --> 01:00:46,960
all about this he said okay

1530
01:00:44,640 --> 01:00:48,480
let me do something more that we make

1531
01:00:46,960 --> 01:00:51,599
maybe more complex but

1532
01:00:48,480 --> 01:00:55,119
maybe we could cut even our shirts and

1533
01:00:51,599 --> 01:00:56,880
okay we have some some maybe still

1534
01:00:55,119 --> 01:01:00,640
some discussion possible here where to

1535
01:00:56,880 --> 01:01:00,640
start please go to the next slide

1536
01:01:01,200 --> 01:01:05,279
okay what we have here is a problem the

1537
01:01:03,280 --> 01:01:08,559
problem is very is very simple to

1538
01:01:05,280 --> 01:01:10,480
for intruder because what is the

1539
01:01:08,559 --> 01:01:12,640
essence of the problem that even in the

1540
01:01:10,480 --> 01:01:16,160
basic navy discovery protocol

1541
01:01:12,640 --> 01:01:17,200
uh if a router will ask everybody who is

1542
01:01:16,160 --> 01:01:20,160
who has particular

1543
01:01:17,200 --> 01:01:20,720
mac address particular lla link local

1544
01:01:20,160 --> 01:01:22,160
address

1545
01:01:20,720 --> 01:01:25,680
who has particular mac address for

1546
01:01:22,160 --> 01:01:27,759
particular ap address of course

1547
01:01:25,680 --> 01:01:29,118
the right host will have legal cost will

1548
01:01:27,760 --> 01:01:29,839
answer but additionally intelligent

1549
01:01:29,119 --> 01:01:34,079
questions were

1550
01:01:29,839 --> 01:01:34,078
just after and because unsolicited uh

1551
01:01:35,040 --> 01:01:42,720
unsolicited answer unsolicited message

1552
01:01:38,559 --> 01:01:46,079
could have raised bids for

1553
01:01:42,720 --> 01:01:48,319
solicited bids override beats

1554
01:01:46,079 --> 01:01:49,440
he could he could easily achieve the

1555
01:01:48,319 --> 01:01:52,880
right cash

1556
01:01:49,440 --> 01:01:53,839
for for for router and and the router

1557
01:01:52,880 --> 01:01:56,559
after this uh

1558
01:01:53,839 --> 01:01:58,319
uh we'll send as presented here on the

1559
01:01:56,559 --> 01:02:00,960
on the bottom of the slide

1560
01:01:58,319 --> 01:02:02,079
the router after this will send traffic

1561
01:02:00,960 --> 01:02:05,680
basic traffic in

1562
01:02:02,079 --> 01:02:08,480
in upstream direction from the legal

1563
01:02:05,680 --> 01:02:10,319
victim but in opposite direction the

1564
01:02:08,480 --> 01:02:12,799
traffic will go through intruder

1565
01:02:10,319 --> 01:02:14,558
and additionally to this if anybody from

1566
01:02:12,799 --> 01:02:16,319
outside of this link will uh ask

1567
01:02:14,559 --> 01:02:18,079
connectivity to this particular ap

1568
01:02:16,319 --> 01:02:21,520
address this particular

1569
01:02:18,079 --> 01:02:23,839
address would be sent to intruder

1570
01:02:21,520 --> 01:02:25,200
it's a classical mean in the middle man

1571
01:02:23,839 --> 01:02:27,440
in the middle attack especially for

1572
01:02:25,200 --> 01:02:28,399
from outside from outside is fully

1573
01:02:27,440 --> 01:02:30,720
two-way

1574
01:02:28,400 --> 01:02:31,599
men in the middle from inside is one way

1575
01:02:30,720 --> 01:02:33,919
but

1576
01:02:31,599 --> 01:02:35,280
because dumbling could have done

1577
01:02:33,920 --> 01:02:38,079
downstream could have

1578
01:02:35,280 --> 01:02:39,200
hd could have some dns requests for

1579
01:02:38,079 --> 01:02:41,920
example and dns

1580
01:02:39,200 --> 01:02:42,558
request would be fake and then it would

1581
01:02:41,920 --> 01:02:45,359
become

1582
01:02:42,559 --> 01:02:47,760
two-way mainly in the middle attack in

1583
01:02:45,359 --> 01:02:51,598
reality this particular

1584
01:02:47,760 --> 01:02:54,160
problem has one mitigation we have

1585
01:02:51,599 --> 01:02:55,520
the standard for so-called sorry source

1586
01:02:54,160 --> 01:02:59,038
address validation and

1587
01:02:55,520 --> 01:02:59,920
so so there is validation does mitigate

1588
01:02:59,039 --> 01:03:02,319
this because

1589
01:02:59,920 --> 01:03:03,520
on the switch on the layer to device

1590
01:03:02,319 --> 01:03:06,799
savvy uh snoop

1591
01:03:03,520 --> 01:03:10,000
all nd messages and

1592
01:03:06,799 --> 01:03:11,920
and if uh uh sally is

1593
01:03:10,000 --> 01:03:13,920
in question about who is the right owner

1594
01:03:11,920 --> 01:03:16,480
so he could send a

1595
01:03:13,920 --> 01:03:19,280
nato solicitation and to to clarify

1596
01:03:16,480 --> 01:03:21,599
which one particular

1597
01:03:19,280 --> 01:03:23,039
which one particular ordinary is right

1598
01:03:21,599 --> 01:03:25,280
order

1599
01:03:23,039 --> 01:03:27,520
uh maybe i need to mention here that

1600
01:03:25,280 --> 01:03:28,160
this particular problem is only about an

1601
01:03:27,520 --> 01:03:29,599
snr

1602
01:03:28,160 --> 01:03:31,680
neighbor solicitation neighbor

1603
01:03:29,599 --> 01:03:33,039
advertisement is not a problem at all

1604
01:03:31,680 --> 01:03:36,558
for perez

1605
01:03:33,039 --> 01:03:39,680
i mean for rsr i do not have here any

1606
01:03:36,559 --> 01:03:40,480
any discussion because uh we still don't

1607
01:03:39,680 --> 01:03:42,960
understand

1608
01:03:40,480 --> 01:03:44,799
what would be done better in addition to

1609
01:03:42,960 --> 01:03:49,119
agar regard

1610
01:03:44,799 --> 01:03:51,440
plus this this couple of uh

1611
01:03:49,119 --> 01:03:53,440
standards is still assumed here as a

1612
01:03:51,440 --> 01:03:55,039
pre-request therefore help from switch

1613
01:03:53,440 --> 01:03:58,000
steel needed for

1614
01:03:55,039 --> 01:03:59,119
our protection arrest protection here is

1615
01:03:58,000 --> 01:04:01,920
a discussion only

1616
01:03:59,119 --> 01:04:04,240
about ns okay please go to the next

1617
01:04:01,920 --> 01:04:04,240
slide

1618
01:04:06,000 --> 01:04:12,799
the previous slide was easy for intruder

1619
01:04:09,680 --> 01:04:14,720
but if we'll block the previous uh the

1620
01:04:12,799 --> 01:04:16,640
previous problem by by some means and

1621
01:04:14,720 --> 01:04:18,720
we have discovered it during this

1622
01:04:16,640 --> 01:04:21,038
particular development that okay we

1623
01:04:18,720 --> 01:04:22,399
could block the previous problem then

1624
01:04:21,039 --> 01:04:24,079
additionally we could find some

1625
01:04:22,400 --> 01:04:26,000
additional corner cases

1626
01:04:24,079 --> 01:04:27,280
which is more difficult for intruder but

1627
01:04:26,000 --> 01:04:29,920
even more difficult for

1628
01:04:27,280 --> 01:04:31,760
for us to protect for standard or for

1629
01:04:29,920 --> 01:04:34,960
for developer to protect

1630
01:04:31,760 --> 01:04:36,960
the first one on the left is the

1631
01:04:34,960 --> 01:04:39,039
the situation which is not protected

1632
01:04:36,960 --> 01:04:41,440
even by by saudi architecture

1633
01:04:39,039 --> 01:04:42,240
is the situation that for some legal

1634
01:04:41,440 --> 01:04:44,880
reason

1635
01:04:42,240 --> 01:04:46,479
the victim could be reloaded it could be

1636
01:04:44,880 --> 01:04:47,680
it could be absent effectively it could

1637
01:04:46,480 --> 01:04:50,079
be absent

1638
01:04:47,680 --> 01:04:50,799
for example hardware upgrade of the

1639
01:04:50,079 --> 01:04:53,839
server

1640
01:04:50,799 --> 01:04:54,640
or maybe software upgrade and reload

1641
01:04:53,839 --> 01:04:57,920
after this

1642
01:04:54,640 --> 01:04:58,720
it could be that uh the the legal survey

1643
01:04:57,920 --> 01:05:01,119
is absent

1644
01:04:58,720 --> 01:05:02,959
and then at that time a couple of couple

1645
01:05:01,119 --> 01:05:05,839
of minutes for example at that time

1646
01:05:02,960 --> 01:05:06,400
into the could claim his ap address and

1647
01:05:05,839 --> 01:05:08,880
because

1648
01:05:06,400 --> 01:05:11,039
at that time intruder is only one who

1649
01:05:08,880 --> 01:05:13,520
claimed this particular ip to mark

1650
01:05:11,039 --> 01:05:14,559
binding uh of course definitely he will

1651
01:05:13,520 --> 01:05:16,720
pass any

1652
01:05:14,559 --> 01:05:18,799
any check doesn't matter what check he

1653
01:05:16,720 --> 01:05:20,640
will do at that time it will pass

1654
01:05:18,799 --> 01:05:22,720
inside architecture too inside

1655
01:05:20,640 --> 01:05:25,200
architecture it's the same problem

1656
01:05:22,720 --> 01:05:26,480
and then after the server will be loaded

1657
01:05:25,200 --> 01:05:28,240
uh

1658
01:05:26,480 --> 01:05:31,200
the intruder should just not respond to

1659
01:05:28,240 --> 01:05:34,640
that to to that message and then

1660
01:05:31,200 --> 01:05:35,598
uh effectively uh will be capable to

1661
01:05:34,640 --> 01:05:37,279
claim

1662
01:05:35,599 --> 01:05:39,359
his ap address from the route and we

1663
01:05:37,280 --> 01:05:42,640
will have exactly the same situation

1664
01:05:39,359 --> 01:05:45,759
uh one way uh traffic will go from legal

1665
01:05:42,640 --> 01:05:47,759
horse to route to router and the

1666
01:05:45,760 --> 01:05:49,520
the downstream traffic will go from from

1667
01:05:47,760 --> 01:05:51,119
route through intruder

1668
01:05:49,520 --> 01:05:53,440
and it's again exactly the same

1669
01:05:51,119 --> 01:05:55,680
situation exactly the same situation for

1670
01:05:53,440 --> 01:05:57,599
traffic inside the link and inside the

1671
01:05:55,680 --> 01:05:58,160
same situation for traffic from outside

1672
01:05:57,599 --> 01:06:00,559
it's

1673
01:05:58,160 --> 01:06:01,920
again mainly in the need to attack it's

1674
01:06:00,559 --> 01:06:04,160
uh it's one problem

1675
01:06:01,920 --> 01:06:05,280
and here his analysis that it doesn't

1676
01:06:04,160 --> 01:06:07,359
matter is it uh

1677
01:06:05,280 --> 01:06:08,400
grant enable it or not grant enabled

1678
01:06:07,359 --> 01:06:11,200
because

1679
01:06:08,400 --> 01:06:13,280
if it's uh you have plenty of time for a

1680
01:06:11,200 --> 01:06:15,279
couple of minutes uh after

1681
01:06:13,280 --> 01:06:17,200
after server go to reload with a couple

1682
01:06:15,280 --> 01:06:19,839
of minutes and it doesn't matter

1683
01:06:17,200 --> 01:06:20,319
uh the second uh in the middle problem

1684
01:06:19,839 --> 01:06:22,160
uh

1685
01:06:20,319 --> 01:06:23,680
which is even more difficult for each

1686
01:06:22,160 --> 01:06:26,640
other but even more difficult

1687
01:06:23,680 --> 01:06:27,038
to block it's a situation then intruder

1688
01:06:26,640 --> 01:06:29,598
uh

1689
01:06:27,039 --> 01:06:32,000
will not try to do anything bad up to

1690
01:06:29,599 --> 01:06:33,440
intruder will see the dub message

1691
01:06:32,000 --> 01:06:35,680
after intruder will see that that

1692
01:06:33,440 --> 01:06:38,079
message uh he will have

1693
01:06:35,680 --> 01:06:38,720
a transmit timer one second one second

1694
01:06:38,079 --> 01:06:40,640
to

1695
01:06:38,720 --> 01:06:42,640
persuade router that he is the legal

1696
01:06:40,640 --> 01:06:45,279
owner of this particular apis

1697
01:06:42,640 --> 01:06:47,200
and okay if it is possible a little bit

1698
01:06:45,280 --> 01:06:48,559
different situation for grant and

1699
01:06:47,200 --> 01:06:50,240
non-grand environment but

1700
01:06:48,559 --> 01:06:52,319
it's not a big change it's exactly the

1701
01:06:50,240 --> 01:06:54,720
same because one second is big enough

1702
01:06:52,319 --> 01:06:55,440
uh even for to send just normal legal

1703
01:06:54,720 --> 01:06:57,279
traffic and

1704
01:06:55,440 --> 01:06:59,359
to have traffic in return and traffic

1705
01:06:57,280 --> 01:07:00,880
and return will activate router to ask

1706
01:06:59,359 --> 01:07:02,720
who is the legal owner and

1707
01:07:00,880 --> 01:07:04,559
intruder could ask yes me and the

1708
01:07:02,720 --> 01:07:06,720
citizens again

1709
01:07:04,559 --> 01:07:08,559
uh in in current proposition we block

1710
01:07:06,720 --> 01:07:09,439
all of this to block not just previous

1711
01:07:08,559 --> 01:07:12,079
one which is

1712
01:07:09,440 --> 01:07:13,200
easy to block but even these two things

1713
01:07:12,079 --> 01:07:15,359
we do block

1714
01:07:13,200 --> 01:07:17,680
and uh please go to the next slide we

1715
01:07:15,359 --> 01:07:20,480
will discuss how to look

1716
01:07:17,680 --> 01:07:22,240
by the way i did start another uh hand

1717
01:07:20,480 --> 01:07:23,359
raised thing for if people have read the

1718
01:07:22,240 --> 01:07:26,479
draft

1719
01:07:23,359 --> 01:07:28,720
okay the

1720
01:07:26,480 --> 01:07:29,839
proposition current proposition is very

1721
01:07:28,720 --> 01:07:33,680
simple in reality

1722
01:07:29,839 --> 01:07:35,839
um any change of mac address in the

1723
01:07:33,680 --> 01:07:37,359
neighbor cache uh doesn't matter is it

1724
01:07:35,839 --> 01:07:39,680
initial right or

1725
01:07:37,359 --> 01:07:41,279
maybe rev right after somebody will send

1726
01:07:39,680 --> 01:07:42,720
you unsolicited neighbor advertisement

1727
01:07:41,280 --> 01:07:43,920
or soliciting neighborhood builders any

1728
01:07:42,720 --> 01:07:47,118
change of mark

1729
01:07:43,920 --> 01:07:49,920
of alola should be uh only

1730
01:07:47,119 --> 01:07:52,000
as a result of multicast request because

1731
01:07:49,920 --> 01:07:52,720
we should give the capability for legal

1732
01:07:52,000 --> 01:07:55,440
cost

1733
01:07:52,720 --> 01:07:56,480
to respond and for us for for router to

1734
01:07:55,440 --> 01:07:59,440
see the duplicity

1735
01:07:56,480 --> 01:08:00,880
if it's duplicate or not if this

1736
01:07:59,440 --> 01:08:03,680
particular

1737
01:08:00,880 --> 01:08:05,359
link is normal link where only one ap

1738
01:08:03,680 --> 01:08:08,319
address is permitted for

1739
01:08:05,359 --> 01:08:10,960
for one one host or one relationship to

1740
01:08:08,319 --> 01:08:10,960
ap to mark one

1741
01:08:11,440 --> 01:08:18,080
then we expected only one only one uh

1742
01:08:15,440 --> 01:08:19,520
response will be on our alien neighbor

1743
01:08:18,080 --> 01:08:21,040
solicitation only one neighbor

1744
01:08:19,520 --> 01:08:22,880
advertisement response

1745
01:08:21,040 --> 01:08:25,839
if it would be two responses then we

1746
01:08:22,880 --> 01:08:25,839
will off

1747
01:08:37,198 --> 01:08:42,080
bit additional discussion that uh to

1748
01:08:40,238 --> 01:08:43,919
block the last one problem which we have

1749
01:08:42,080 --> 01:08:47,040
discussed in the previous slide

1750
01:08:43,920 --> 01:08:50,399
the new host after it will start after

1751
01:08:47,040 --> 01:08:53,920
it will finish uh that solicitation

1752
01:08:50,399 --> 01:08:57,120
uh after this the host should send uh

1753
01:08:53,920 --> 01:08:58,719
nabel uh announcement about

1754
01:08:57,120 --> 01:09:00,479
he should he should reveal himself it's

1755
01:08:58,719 --> 01:09:02,000
effectively grant but granting more

1756
01:09:00,479 --> 01:09:05,358
strong form because

1757
01:09:02,000 --> 01:09:07,439
uh the override bit should be set

1758
01:09:05,359 --> 01:09:09,359
it's a little bit a little bit more

1759
01:09:07,439 --> 01:09:10,719
complex than on this slide but but not

1760
01:09:09,359 --> 01:09:14,319
much

1761
01:09:10,719 --> 01:09:16,239
uh what it is it gives uh for majority

1762
01:09:14,319 --> 01:09:20,480
of cases no need for

1763
01:09:16,238 --> 01:09:23,120
change of host it uh

1764
01:09:20,479 --> 01:09:24,479
it's more or less simple i i show later

1765
01:09:23,120 --> 01:09:25,759
next slide about details of

1766
01:09:24,479 --> 01:09:28,879
implementation is more or less

1767
01:09:25,759 --> 01:09:31,120
some simple uh

1768
01:09:28,880 --> 01:09:32,319
improvement for engineering but not very

1769
01:09:31,120 --> 01:09:35,759
complex

1770
01:09:32,319 --> 01:09:38,000
we don't need for this nsnr any help

1771
01:09:35,759 --> 01:09:38,960
from switch no no need for savvy

1772
01:09:38,000 --> 01:09:40,799
architecture which

1773
01:09:38,960 --> 01:09:42,399
does not help against the last couple of

1774
01:09:40,799 --> 01:09:45,839
problems anyway

1775
01:09:42,399 --> 01:09:47,839
uh we have uh support here for any cast

1776
01:09:45,839 --> 01:09:50,399
by the way that

1777
01:09:47,839 --> 01:09:52,238
there is some counter which could be

1778
01:09:50,399 --> 01:09:55,280
programmed in advance

1779
01:09:52,238 --> 01:09:58,718
and some configuration counter and if

1780
01:09:55,280 --> 01:10:01,920
this is this link where we have any cast

1781
01:09:58,719 --> 01:10:03,360
then we do expect more than one response

1782
01:10:01,920 --> 01:10:06,400
to our ns

1783
01:10:03,360 --> 01:10:09,599
more than more than one and a uh

1784
01:10:06,400 --> 01:10:11,280
will come to us uh it's uh has a little

1785
01:10:09,600 --> 01:10:13,120
bit more multicast but not much

1786
01:10:11,280 --> 01:10:14,719
in majority of cases additional

1787
01:10:13,120 --> 01:10:17,760
multicast would be zero

1788
01:10:14,719 --> 01:10:20,080
because in maturity of cases uh an s and

1789
01:10:17,760 --> 01:10:22,880
r response uh would be reused

1790
01:10:20,080 --> 01:10:24,400
uh to check uh that it's really uh only

1791
01:10:22,880 --> 01:10:27,199
one response receipt

1792
01:10:24,400 --> 01:10:29,040
uh here in in the grant environment uh

1793
01:10:27,199 --> 01:10:31,519
if we have one router for example

1794
01:10:29,040 --> 01:10:32,560
there is analysis in the draft then uh

1795
01:10:31,520 --> 01:10:35,440
would be

1796
01:10:32,560 --> 01:10:35,920
33 percentage of uh additional multicast

1797
01:10:35,440 --> 01:10:38,480
and

1798
01:10:35,920 --> 01:10:40,320
if it many many routers then up to 50

1799
01:10:38,480 --> 01:10:42,400
percentage of additional multicast

1800
01:10:40,320 --> 01:10:44,159
it could be the situation it's a deep

1801
01:10:42,400 --> 01:10:45,360
analysis inside the drug it could be the

1802
01:10:44,159 --> 01:10:46,080
situation that a little bit more

1803
01:10:45,360 --> 01:10:51,040
multicast

1804
01:10:46,080 --> 01:10:51,040
is possible please go to the next slide

1805
01:10:52,000 --> 01:10:55,760
uh i don't have intention to deep dive

1806
01:10:54,080 --> 01:10:56,559
in details here of course if you like i

1807
01:10:55,760 --> 01:11:00,000
could but

1808
01:10:56,560 --> 01:11:02,239
uh the improvement uh for state machine

1809
01:11:00,000 --> 01:11:04,800
insight int protocol is very simple

1810
01:11:02,239 --> 01:11:06,718
uh when you send neighbor solicitation

1811
01:11:04,800 --> 01:11:08,880
from from your host or from the router

1812
01:11:06,719 --> 01:11:11,520
you should effectively activate a couple

1813
01:11:08,880 --> 01:11:12,239
of uh things you should activate timer

1814
01:11:11,520 --> 01:11:14,320
uh

1815
01:11:12,239 --> 01:11:16,320
wait for you to later to understand

1816
01:11:14,320 --> 01:11:16,880
which one response is inside the timer

1817
01:11:16,320 --> 01:11:19,280
which was

1818
01:11:16,880 --> 01:11:21,280
one responses really responds to your ms

1819
01:11:19,280 --> 01:11:22,800
and which one is not response to uns you

1820
01:11:21,280 --> 01:11:23,599
should activate the timer and you should

1821
01:11:22,800 --> 01:11:26,960
activate

1822
01:11:23,600 --> 01:11:27,920
uh initialized counter here because it

1823
01:11:26,960 --> 01:11:30,960
could be the

1824
01:11:27,920 --> 01:11:32,239
link which has any cost and then you do

1825
01:11:30,960 --> 01:11:36,000
expect more than one

1826
01:11:32,239 --> 01:11:37,360
response a little bit uh complexity not

1827
01:11:36,000 --> 01:11:39,199
much but a little bit additional

1828
01:11:37,360 --> 01:11:41,679
complexity on the receive side

1829
01:11:39,199 --> 01:11:42,480
when you receive an a uh on router on

1830
01:11:41,679 --> 01:11:44,800
host

1831
01:11:42,480 --> 01:11:45,839
then you should check first is it

1832
01:11:44,800 --> 01:11:48,320
response to

1833
01:11:45,840 --> 01:11:49,600
your ns or is it inside the timer or is

1834
01:11:48,320 --> 01:11:51,120
it unsolicited

1835
01:11:49,600 --> 01:11:54,320
and it is a little bit different

1836
01:11:51,120 --> 01:11:56,640
behavior is a listing announcer isn't it

1837
01:11:54,320 --> 01:11:57,599
the algorithm is here on this light and

1838
01:11:56,640 --> 01:12:00,800
more details

1839
01:11:57,600 --> 01:12:01,360
inside there inside the draft tip

1840
01:12:00,800 --> 01:12:04,239
probably

1841
01:12:01,360 --> 01:12:05,759
uh except maybe i need to tell what was

1842
01:12:04,239 --> 01:12:07,919
the reaction to this

1843
01:12:05,760 --> 01:12:10,159
i have a couple of comments which is

1844
01:12:07,920 --> 01:12:12,560
about implementation which

1845
01:12:10,159 --> 01:12:14,400
i definitely should follow yeah i have a

1846
01:12:12,560 --> 01:12:15,840
comment for example that i need to tell

1847
01:12:14,400 --> 01:12:17,599
more in the draft about science

1848
01:12:15,840 --> 01:12:20,000
architecture because currently

1849
01:12:17,600 --> 01:12:22,159
right in the draft there is only story

1850
01:12:20,000 --> 01:12:24,719
that this particular implementation

1851
01:12:22,159 --> 01:12:26,559
uh does not create a problem for psych

1852
01:12:24,719 --> 01:12:27,840
architecture it's completely orthogonal

1853
01:12:26,560 --> 01:12:29,600
that

1854
01:12:27,840 --> 01:12:30,880
even if you will implement this study

1855
01:12:29,600 --> 01:12:31,760
would not be broken and this

1856
01:12:30,880 --> 01:12:33,679
implementation

1857
01:12:31,760 --> 01:12:35,920
would not be broken by side it could

1858
01:12:33,679 --> 01:12:37,760
coexist but it's not enough because

1859
01:12:35,920 --> 01:12:39,280
saudi is a partially distribution

1860
01:12:37,760 --> 01:12:42,320
therefore i need to put a little bit

1861
01:12:39,280 --> 01:12:42,320
more text up outside

1862
01:12:42,400 --> 01:12:46,000
the biggest concern was from a couple of

1863
01:12:44,880 --> 01:12:48,640
people from

1864
01:12:46,000 --> 01:12:50,800
uh philippines from fernando their

1865
01:12:48,640 --> 01:12:51,840
primary concern was about the problem

1866
01:12:50,800 --> 01:12:53,679
itself because

1867
01:12:51,840 --> 01:12:55,679
they have assumed effectively they both

1868
01:12:53,679 --> 01:12:57,040
assumed as i understand the same they

1869
01:12:55,679 --> 01:13:00,239
have assumed that

1870
01:12:57,040 --> 01:13:02,400
uh because we need we still need to this

1871
01:13:00,239 --> 01:13:03,678
the helpful switch we still need the

1872
01:13:02,400 --> 01:13:06,799
help from player 2

1873
01:13:03,679 --> 01:13:09,520
at least for a

1874
01:13:06,800 --> 01:13:11,600
guard at least for filtering of router

1875
01:13:09,520 --> 01:13:14,560
messages there are burnt messages

1876
01:13:11,600 --> 01:13:16,320
uh but uh and because we need the help

1877
01:13:14,560 --> 01:13:19,120
from player 2 does not make sense to

1878
01:13:16,320 --> 01:13:19,120
solve anything

1879
01:13:19,679 --> 01:13:23,440
it was a message that any security

1880
01:13:21,679 --> 01:13:25,199
problem of an sni is a

1881
01:13:23,440 --> 01:13:26,879
is a problem for layer 2 device for

1882
01:13:25,199 --> 01:13:30,080
device which is below

1883
01:13:26,880 --> 01:13:31,520
ip it's

1884
01:13:30,080 --> 01:13:33,360
questionable from my point of view i

1885
01:13:31,520 --> 01:13:34,640
don't accept this particular comment

1886
01:13:33,360 --> 01:13:36,400
because

1887
01:13:34,640 --> 01:13:38,400
we still have currently the problem we

1888
01:13:36,400 --> 01:13:41,440
still have very easy

1889
01:13:38,400 --> 01:13:42,000
attack vector uh for an snr we could

1890
01:13:41,440 --> 01:13:44,159
really

1891
01:13:42,000 --> 01:13:45,520
conjure uh we could not conjugate

1892
01:13:44,159 --> 01:13:46,719
probably the current session because

1893
01:13:45,520 --> 01:13:49,360
current session would be

1894
01:13:46,719 --> 01:13:50,880
encrypted in major cases but we could be

1895
01:13:49,360 --> 01:13:52,719
inserted in the middle when in the

1896
01:13:50,880 --> 01:13:54,239
middle and after this we could collect

1897
01:13:52,719 --> 01:13:57,120
all credentials we could

1898
01:13:54,239 --> 01:13:58,959
change dns responses it's it's really

1899
01:13:57,120 --> 01:14:00,159
big big leakage of information right now

1900
01:13:58,960 --> 01:14:02,480
which is really open

1901
01:14:00,159 --> 01:14:04,239
and because it's uh if you will have a

1902
01:14:02,480 --> 01:14:04,718
solution some other solution okay if

1903
01:14:04,239 --> 01:14:07,199
it's fine

1904
01:14:04,719 --> 01:14:08,880
then i would be silent but the problem

1905
01:14:07,199 --> 01:14:10,639
that you don't have a solution currently

1906
01:14:08,880 --> 01:14:13,120
it's a big big leakage of information

1907
01:14:10,640 --> 01:14:15,199
which is open

1908
01:14:13,120 --> 01:14:17,599
now we visit for myself now this

1909
01:14:15,199 --> 01:14:17,599
question

1910
01:14:19,679 --> 01:14:22,880
okay jen go ahead

1911
01:14:25,679 --> 01:14:30,159
i have a clarifying question and i have

1912
01:14:28,320 --> 01:14:34,559
a concern

1913
01:14:30,159 --> 01:14:38,559
so uh actually i have a concern

1914
01:14:34,560 --> 01:14:41,679
let's go straight away until this day

1915
01:14:38,560 --> 01:14:45,040
the all work of neighbor discovery

1916
01:14:41,679 --> 01:14:48,080
all state machines

1917
01:14:45,040 --> 01:14:51,360
were developed in the assumption

1918
01:14:48,080 --> 01:14:54,800
that if we have duplicated addresses

1919
01:14:51,360 --> 01:14:57,040
the we should uh we should not disrupt

1920
01:14:54,800 --> 01:14:58,560
already iterated host right so if

1921
01:14:57,040 --> 01:15:01,120
someone has this address

1922
01:14:58,560 --> 01:15:02,400
let the cost to work and let's deal with

1923
01:15:01,120 --> 01:15:05,760
the new camera

1924
01:15:02,400 --> 01:15:07,920
and then duplicate that address what you

1925
01:15:05,760 --> 01:15:09,040
suggested is drastically changes that

1926
01:15:07,920 --> 01:15:11,280
approach

1927
01:15:09,040 --> 01:15:13,040
now you basically say okay as long as

1928
01:15:11,280 --> 01:15:16,159
you have duplicated addresses

1929
01:15:13,040 --> 01:15:18,400
does it matter if it's attack or not

1930
01:15:16,159 --> 01:15:19,599
let's break everything let's break all

1931
01:15:18,400 --> 01:15:23,040
participants

1932
01:15:19,600 --> 01:15:26,320
and deal with that and my concern here

1933
01:15:23,040 --> 01:15:28,880
is also that i do not

1934
01:15:26,320 --> 01:15:30,559
care about all this application layer

1935
01:15:28,880 --> 01:15:32,560
like men and the mizzle attacks because

1936
01:15:30,560 --> 01:15:34,960
each protocol should deal with it on the

1937
01:15:32,560 --> 01:15:35,600
higher level for dns we have dns stack

1938
01:15:34,960 --> 01:15:38,640
right

1939
01:15:35,600 --> 01:15:42,000
we have encryption on the for play

1940
01:15:38,640 --> 01:15:43,280
i would not be i wouldn't try solve it

1941
01:15:42,000 --> 01:15:45,360
better than the middle attack or the

1942
01:15:43,280 --> 01:15:47,759
neighbor discovery problem because when

1943
01:15:45,360 --> 01:15:50,239
you send your traffic to the internet

1944
01:15:47,760 --> 01:15:51,440
you never know if it's actually going to

1945
01:15:50,239 --> 01:15:53,280
the

1946
01:15:51,440 --> 01:15:54,799
intelligent destination unless you use

1947
01:15:53,280 --> 01:15:56,880
some formal authentication

1948
01:15:54,800 --> 01:15:58,159
so i don't think it's worth solving on

1949
01:15:56,880 --> 01:15:59,440
neighbor discovery level

1950
01:15:58,159 --> 01:16:01,360
and what you're doing here you're

1951
01:15:59,440 --> 01:16:02,480
replacing potential when you do the

1952
01:16:01,360 --> 01:16:05,040
middle attack

1953
01:16:02,480 --> 01:16:06,879
with ddos attack right now with that

1954
01:16:05,040 --> 01:16:08,880
thing i can easily disrupt

1955
01:16:06,880 --> 01:16:10,400
any already accurate holes in the

1956
01:16:08,880 --> 01:16:12,719
network segment

1957
01:16:10,400 --> 01:16:14,159
by saving another neighbor advertisement

1958
01:16:12,719 --> 01:16:16,480
right and putting

1959
01:16:14,159 --> 01:16:17,920
that host neighbor cache entry into

1960
01:16:16,480 --> 01:16:19,759
duplicated state

1961
01:16:17,920 --> 01:16:21,679
and everything would stop working for

1962
01:16:19,760 --> 01:16:24,560
everyone i am not sure

1963
01:16:21,679 --> 01:16:27,120
in this situation the cure is not worse

1964
01:16:24,560 --> 01:16:27,120
than dignity

1965
01:16:28,239 --> 01:16:31,678
not exactly like you said not exactly

1966
01:16:30,239 --> 01:16:35,519
this way because

1967
01:16:31,679 --> 01:16:37,440
uh uh the problem uh for duplicated ip

1968
01:16:35,520 --> 01:16:39,199
addresses could happen only if you will

1969
01:16:37,440 --> 01:16:41,280
have a real uh uh intruder

1970
01:16:39,199 --> 01:16:43,440
in in the in the subnet they even do

1971
01:16:41,280 --> 01:16:45,679
that i mean if it would be just that

1972
01:16:43,440 --> 01:16:46,559
the dot will never send your flux and is

1973
01:16:45,679 --> 01:16:50,159
it at all

1974
01:16:46,560 --> 01:16:52,080
the flag then the normal cost even after

1975
01:16:50,159 --> 01:16:55,440
collision will never try to

1976
01:16:52,080 --> 01:16:56,239
uh to install uh poisoned cash on your

1977
01:16:55,440 --> 01:16:58,400
router

1978
01:16:56,239 --> 01:17:00,559
if somebody is trying to install poison

1979
01:16:58,400 --> 01:17:02,320
cache on the router it's really the

1980
01:17:00,560 --> 01:17:02,960
evidence that you have the intruder

1981
01:17:02,320 --> 01:17:04,719
therefore

1982
01:17:02,960 --> 01:17:07,120
this particular mechanism would be

1983
01:17:04,719 --> 01:17:08,960
activated only in the presence of the

1984
01:17:07,120 --> 01:17:12,159
real intruder it could not be for any

1985
01:17:08,960 --> 01:17:15,040
other reason it could not be for example

1986
01:17:12,159 --> 01:17:15,599
yeah okay i totally disagree because you

1987
01:17:15,040 --> 01:17:19,519
look like

1988
01:17:15,600 --> 01:17:21,760
look at that like uh all uh rfc is about

1989
01:17:19,520 --> 01:17:22,239
duplicate address detection optimistic

1990
01:17:21,760 --> 01:17:24,080
that

1991
01:17:22,239 --> 01:17:25,360
we need to work in the assumption that

1992
01:17:24,080 --> 01:17:29,679
you for example can

1993
01:17:25,360 --> 01:17:31,920
have hosts using ui 64 based

1994
01:17:29,679 --> 01:17:33,280
interface id and you might have uh

1995
01:17:31,920 --> 01:17:35,760
people i don't know

1996
01:17:33,280 --> 01:17:37,040
duplicated with duplicated mac addresses

1997
01:17:35,760 --> 01:17:40,159
so manually creating

1998
01:17:37,040 --> 01:17:42,719
ipv6 addresses on the interfaces

1999
01:17:40,159 --> 01:17:44,239
which can lead to duplicated i've seen

2000
01:17:42,719 --> 01:17:46,719
that in the real life right

2001
01:17:44,239 --> 01:17:47,759
you cannot guarantee that you would

2002
01:17:46,719 --> 01:17:51,120
never see

2003
01:17:47,760 --> 01:17:51,120
two legitimate hosts

2004
01:17:52,239 --> 01:17:55,678
again again you misunderstood again

2005
01:17:53,840 --> 01:17:57,760
again you misunderstood no

2006
01:17:55,679 --> 01:17:59,120
it's not because it's not because

2007
01:17:57,760 --> 01:18:01,679
duplication could not happen

2008
01:17:59,120 --> 01:18:02,400
duplication could happen is no problem

2009
01:18:01,679 --> 01:18:04,159
uh uh

2010
01:18:02,400 --> 01:18:06,159
because in in the duplication if

2011
01:18:04,159 --> 01:18:07,759
duplication will happen nobody will try

2012
01:18:06,159 --> 01:18:09,120
to rewrite the cache on the router

2013
01:18:07,760 --> 01:18:11,600
nobody will try

2014
01:18:09,120 --> 01:18:12,239
to raise the flag uh to raise the flag

2015
01:18:11,600 --> 01:18:14,960
of uh

2016
01:18:12,239 --> 01:18:15,280
override of solicited nobody will behave

2017
01:18:14,960 --> 01:18:18,159
like

2018
01:18:15,280 --> 01:18:19,120
uh the intruder therefore duplication

2019
01:18:18,159 --> 01:18:21,120
will not

2020
01:18:19,120 --> 01:18:23,040
activate this particular mechanism this

2021
01:18:21,120 --> 01:18:25,519
particular mechanism would be activated

2022
01:18:23,040 --> 01:18:26,320
only if somebody will misuse ng protocol

2023
01:18:25,520 --> 01:18:28,239
if somebody

2024
01:18:26,320 --> 01:18:30,239
will not just claim the address but he

2025
01:18:28,239 --> 01:18:32,159
claimed it with the flag override

2026
01:18:30,239 --> 01:18:33,599
so he said that somebody will do

2027
01:18:32,159 --> 01:18:34,480
something which is opposite to the

2028
01:18:33,600 --> 01:18:38,239
standard

2029
01:18:34,480 --> 01:18:39,040
uh okay so um we so we're already over

2030
01:18:38,239 --> 01:18:42,080
time so

2031
01:18:39,040 --> 01:18:42,880
we why don't we we have two other two

2032
01:18:42,080 --> 01:18:44,800
igars

2033
01:18:42,880 --> 01:18:46,880
in the queue why don't we let them talk

2034
01:18:44,800 --> 01:18:48,800
briefly and then we'll need to move on

2035
01:18:46,880 --> 01:18:50,719
three people in the queue now okay but

2036
01:18:48,800 --> 01:18:55,840
we'll freeze the queue at this point

2037
01:18:50,719 --> 01:18:55,840
so eagle garcia first yes

2038
01:18:58,719 --> 01:19:05,440
hey guys um so

2039
01:19:01,760 --> 01:19:06,800
i kind of agree with jen but only kind

2040
01:19:05,440 --> 01:19:09,360
of

2041
01:19:06,800 --> 01:19:11,120
so i do think that this is definitely a

2042
01:19:09,360 --> 01:19:12,880
problem that

2043
01:19:11,120 --> 01:19:14,159
should be well there's a lot of echo

2044
01:19:12,880 --> 01:19:16,960
going on

2045
01:19:14,159 --> 01:19:18,480
um so this definitely is a problem that

2046
01:19:16,960 --> 01:19:19,120
needs to be solved but i kind of wonder

2047
01:19:18,480 --> 01:19:22,000
if this is

2048
01:19:19,120 --> 01:19:22,559
the right approach a different approach

2049
01:19:22,000 --> 01:19:25,280
might be

2050
01:19:22,560 --> 01:19:27,040
that the whoever held the address the

2051
01:19:25,280 --> 01:19:28,880
oldest

2052
01:19:27,040 --> 01:19:30,320
holds the address and then the router

2053
01:19:28,880 --> 01:19:32,480
will perform or

2054
01:19:30,320 --> 01:19:34,159
not just the router but every other node

2055
01:19:32,480 --> 01:19:36,159
will basically

2056
01:19:34,159 --> 01:19:37,759
perform validation this was actually

2057
01:19:36,159 --> 01:19:38,159
something that we proposed as part of

2058
01:19:37,760 --> 01:19:41,199
the

2059
01:19:38,159 --> 01:19:43,280
6nd uh

2060
01:19:41,199 --> 01:19:45,440
problem statement that we put out a

2061
01:19:43,280 --> 01:19:48,320
couple years ago

2062
01:19:45,440 --> 01:19:48,799
i i think the idea of flushing the

2063
01:19:48,320 --> 01:19:52,960
oldest

2064
01:19:48,800 --> 01:19:56,719
and the newest is actually harmful

2065
01:19:52,960 --> 01:20:00,719
because that you can effectively

2066
01:19:56,719 --> 01:20:00,719
ddas an older node of the network

2067
01:20:02,000 --> 01:20:07,280
but but then you open the door for me

2068
01:20:05,280 --> 01:20:08,400
let me let let's we don't have time to

2069
01:20:07,280 --> 01:20:10,719
have the

2070
01:20:08,400 --> 01:20:11,599
interactive discussion so let's get to

2071
01:20:10,719 --> 01:20:14,639
the other

2072
01:20:11,600 --> 01:20:17,760
two other two people in the queue

2073
01:20:14,639 --> 01:20:20,560
hi uh you go just quickly

2074
01:20:17,760 --> 01:20:21,679
i would i see where jen is coming from

2075
01:20:20,560 --> 01:20:23,840
and i agree that

2076
01:20:21,679 --> 01:20:24,719
in my data center i may actually be

2077
01:20:23,840 --> 01:20:28,159
worried about

2078
01:20:24,719 --> 01:20:29,520
duplicated addresses uh causing any sort

2079
01:20:28,159 --> 01:20:32,638
of disruption to

2080
01:20:29,520 --> 01:20:35,679
anybody now i hear that it's

2081
01:20:32,639 --> 01:20:36,960
there's a there's a question whether

2082
01:20:35,679 --> 01:20:38,880
it's actually even possible in a

2083
01:20:36,960 --> 01:20:42,320
well-behaved application

2084
01:20:38,880 --> 01:20:45,360
but in my home environment i definitely

2085
01:20:42,320 --> 01:20:46,080
would really really prefer if some

2086
01:20:45,360 --> 01:20:49,280
disruption

2087
01:20:46,080 --> 01:20:52,239
happens rather than let my compromised

2088
01:20:49,280 --> 01:20:53,440
dvd player uh basically men in the

2089
01:20:52,239 --> 01:20:56,638
middle

2090
01:20:53,440 --> 01:20:59,440
unsecure unfortunately still unsecure

2091
01:20:56,639 --> 01:21:01,600
dns responses to my laptop about like

2092
01:20:59,440 --> 01:21:05,360
where bank of america is

2093
01:21:01,600 --> 01:21:06,960
and so i can see it in two different

2094
01:21:05,360 --> 01:21:08,880
environments actually having very

2095
01:21:06,960 --> 01:21:13,040
different preference for

2096
01:21:08,880 --> 01:21:16,159
uh availability versus security pressure

2097
01:21:13,040 --> 01:21:19,440
that's my entire comment

2098
01:21:16,159 --> 01:21:19,440
okay and then fernando

2099
01:21:21,199 --> 01:21:24,480
focusing on any specific vector i think

2100
01:21:23,679 --> 01:21:27,840
that the

2101
01:21:24,480 --> 01:21:28,320
first and most basic question one should

2102
01:21:27,840 --> 01:21:31,840
ask

2103
01:21:28,320 --> 01:21:34,960
is what's the thread model for nd

2104
01:21:31,840 --> 01:21:38,480
my take is that nd depends on

2105
01:21:34,960 --> 01:21:41,520
trusting the link so if you mitigate

2106
01:21:38,480 --> 01:21:44,239
one specific vendor better but

2107
01:21:41,520 --> 01:21:45,679
you still leave so many others to do

2108
01:21:44,239 --> 01:21:47,678
exactly the same thing

2109
01:21:45,679 --> 01:21:48,960
the article will essentially employ

2110
01:21:47,679 --> 01:21:51,760
whatever works

2111
01:21:48,960 --> 01:21:52,080
and in nd if you want to mitigate all of

2112
01:21:51,760 --> 01:21:54,480
them

2113
01:21:52,080 --> 01:21:55,600
unfortunately you need to rely on stuff

2114
01:21:54,480 --> 01:21:58,799
like said

2115
01:21:55,600 --> 01:22:00,960
because you trust the nd messages after

2116
01:21:58,800 --> 01:22:00,960
all

2117
01:22:06,080 --> 01:22:10,000
okay well thank you i i think we need to

2118
01:22:08,960 --> 01:22:13,920
move on

2119
01:22:10,000 --> 01:22:14,560
um yeah i mean i tend to be sympathetic

2120
01:22:13,920 --> 01:22:17,120
to what

2121
01:22:14,560 --> 01:22:19,040
fernando said it's it's a land and you

2122
01:22:17,120 --> 01:22:19,360
can do lots of things on a land and it's

2123
01:22:19,040 --> 01:22:21,440
real

2124
01:22:19,360 --> 01:22:24,080
you can fix individual things but

2125
01:22:21,440 --> 01:22:27,360
there's just other attack vectors but we

2126
01:22:24,080 --> 01:22:27,360
should move this to the list

2127
01:22:28,159 --> 01:22:31,519
okay this on

2128
01:22:35,760 --> 01:22:39,840
go ahead can you hear us

2129
01:22:41,360 --> 01:22:46,159
we cannot hear you yet we can see you

2130
01:22:46,639 --> 01:22:53,840
your audio was enabled but

2131
01:22:55,760 --> 01:22:59,120
can you hear me now we can hear you now

2132
01:22:58,239 --> 01:23:01,599
go ahead

2133
01:22:59,120 --> 01:23:02,719
excellent okay some reason didn't work

2134
01:23:01,600 --> 01:23:06,639
right away

2135
01:23:02,719 --> 01:23:10,000
so uh this draft is uh

2136
01:23:06,639 --> 01:23:13,040
about the use of least common scope

2137
01:23:10,000 --> 01:23:13,760
during communication and it's going to

2138
01:23:13,040 --> 01:23:16,960
focus

2139
01:23:13,760 --> 01:23:19,679
on only in communication uh

2140
01:23:16,960 --> 01:23:22,560
alexander and maverick only together

2141
01:23:19,679 --> 01:23:22,560
next slide please

2142
01:23:23,360 --> 01:23:27,040
and the problem statement here

2143
01:23:27,920 --> 01:23:33,040
what we're seeing here on this diagram

2144
01:23:31,120 --> 01:23:36,400
is that

2145
01:23:33,040 --> 01:23:38,880
there are hosts

2146
01:23:36,400 --> 01:23:40,799
uh different parts of the network and uh

2147
01:23:38,880 --> 01:23:41,600
we are going to focus on the holes that

2148
01:23:40,800 --> 01:23:44,719
are

2149
01:23:41,600 --> 01:23:48,080
on the same local link like uh in the

2150
01:23:44,719 --> 01:23:52,000
bottom uh right corner

2151
01:23:48,080 --> 01:23:55,679
where we have host h b and h d

2152
01:23:52,000 --> 01:23:58,960
and uh there might be a need

2153
01:23:55,679 --> 01:24:02,400
by applications to

2154
01:23:58,960 --> 01:24:04,960
communicate on the local link using link

2155
01:24:02,400 --> 01:24:08,239
local rather than global address and

2156
01:24:04,960 --> 01:24:12,480
uh mitigate attacks

2157
01:24:08,239 --> 01:24:15,759
through the sockets if they open

2158
01:24:12,480 --> 01:24:19,120
uh sockets using global addresses

2159
01:24:15,760 --> 01:24:22,159
so in most of the cases as far as i know

2160
01:24:19,120 --> 01:24:26,320
communication is done using

2161
01:24:22,159 --> 01:24:29,920
new global addresses and

2162
01:24:26,320 --> 01:24:30,799
this draft is going to propose a

2163
01:24:29,920 --> 01:24:32,719
solution where

2164
01:24:30,800 --> 01:24:33,840
applications on the local link can

2165
01:24:32,719 --> 01:24:36,960
decide to use

2166
01:24:33,840 --> 01:24:40,480
link local addresses instead even though

2167
01:24:36,960 --> 01:24:43,840
uh applications are not

2168
01:24:40,480 --> 01:24:45,440
aware of link local addresses in some

2169
01:24:43,840 --> 01:24:48,320
cases or in many of the cases

2170
01:24:45,440 --> 01:24:48,320
next likewise

2171
01:24:51,520 --> 01:24:58,000
as we know in 6724

2172
01:24:55,440 --> 01:24:58,000
rfc

2173
01:24:59,120 --> 01:25:03,599
the least common scope addresses are

2174
01:25:01,520 --> 01:25:05,040
preferred during the destination of this

2175
01:25:03,600 --> 01:25:09,600
election

2176
01:25:05,040 --> 01:25:10,800
uh but uh socket api can be given only

2177
01:25:09,600 --> 01:25:15,440
global address or

2178
01:25:10,800 --> 01:25:20,000
or list of global and ula addresses

2179
01:25:15,440 --> 01:25:23,280
and there is no way to use

2180
01:25:20,000 --> 01:25:27,120
this precedence if

2181
01:25:23,280 --> 01:25:30,480
link local others is not present

2182
01:25:27,120 --> 01:25:31,599
in in those cases applications would use

2183
01:25:30,480 --> 01:25:35,360
global addresses

2184
01:25:31,600 --> 01:25:37,840
and for for sockets and open

2185
01:25:35,360 --> 01:25:40,480
uh a socket to listen on global others

2186
01:25:37,840 --> 01:25:43,040
and expose themselves himself

2187
01:25:40,480 --> 01:25:45,360
to the tax potential attacks next slide

2188
01:25:43,040 --> 01:25:45,360
please

2189
01:25:48,400 --> 01:25:53,679
and here we have a proposal for a

2190
01:25:52,320 --> 01:25:56,719
solution

2191
01:25:53,679 --> 01:25:58,800
where in order to use

2192
01:25:56,719 --> 01:26:01,679
link local addresses for all link

2193
01:25:58,800 --> 01:26:01,679
communications

2194
01:26:02,239 --> 01:26:09,360
we would like to propose a way to

2195
01:26:06,159 --> 01:26:10,719
obtain a link local address for a

2196
01:26:09,360 --> 01:26:13,920
destination

2197
01:26:10,719 --> 01:26:17,120
knowing global address that's

2198
01:26:13,920 --> 01:26:21,440
on link and for that

2199
01:26:17,120 --> 01:26:24,400
we propose link local address resolution

2200
01:26:21,440 --> 01:26:26,559
as a way of obtaining destination link

2201
01:26:24,400 --> 01:26:29,519
local others

2202
01:26:26,560 --> 01:26:29,520
next slide please

2203
01:26:32,880 --> 01:26:39,920
so what is uh link local address

2204
01:26:37,120 --> 01:26:40,719
resolution so it's practically an

2205
01:26:39,920 --> 01:26:44,159
extension

2206
01:26:40,719 --> 01:26:46,639
to address resolution where

2207
01:26:44,159 --> 01:26:47,839
a host needs to obtain mac address of

2208
01:26:46,639 --> 01:26:51,120
the destination

2209
01:26:47,840 --> 01:26:54,320
given global ip address

2210
01:26:51,120 --> 01:26:57,920
in this case we propose that

2211
01:26:54,320 --> 01:27:01,120
neighbor solicitation message can

2212
01:26:57,920 --> 01:27:02,880
use extra link local bit we call it

2213
01:27:01,120 --> 01:27:06,880
albeit

2214
01:27:02,880 --> 01:27:09,520
to indicate that it's uh

2215
01:27:06,880 --> 01:27:11,120
requesting a link local address from the

2216
01:27:09,520 --> 01:27:13,920
destination

2217
01:27:11,120 --> 01:27:15,760
and it will send neighbor solicitation

2218
01:27:13,920 --> 01:27:18,159
with the target address as global

2219
01:27:15,760 --> 01:27:21,520
address global destination address

2220
01:27:18,159 --> 01:27:24,400
and source address

2221
01:27:21,520 --> 01:27:27,040
is going to be link local address if

2222
01:27:24,400 --> 01:27:30,839
this albeit is set

2223
01:27:27,040 --> 01:27:33,920
and maybe solicitation destination

2224
01:27:30,840 --> 01:27:37,199
address can be global address or

2225
01:27:33,920 --> 01:27:40,159
solicited known multicultural status

2226
01:27:37,199 --> 01:27:40,159
next slide please

2227
01:27:43,840 --> 01:27:50,480
so here is the proposed albeit

2228
01:27:48,080 --> 01:27:52,000
and we want to use this l bit to

2229
01:27:50,480 --> 01:27:55,759
indicate

2230
01:27:52,000 --> 01:27:59,040
that a source wants to obtain

2231
01:27:55,760 --> 01:28:00,960
link local address because

2232
01:27:59,040 --> 01:28:03,440
through this mechanism because it's it

2233
01:28:00,960 --> 01:28:04,639
knows only about global destination

2234
01:28:03,440 --> 01:28:08,400
address

2235
01:28:04,639 --> 01:28:13,120
and wants to uh kind of resolve this

2236
01:28:08,400 --> 01:28:16,159
by using link local address resolution

2237
01:28:13,120 --> 01:28:16,159
and next slides with

2238
01:28:17,280 --> 01:28:24,880
so the target will respond and this

2239
01:28:21,440 --> 01:28:26,000
option will respond with its link local

2240
01:28:24,880 --> 01:28:29,920
address

2241
01:28:26,000 --> 01:28:32,960
uh when it's requested and

2242
01:28:29,920 --> 01:28:33,600
uh by doing that uh the source will

2243
01:28:32,960 --> 01:28:36,000
obtain

2244
01:28:33,600 --> 01:28:37,840
destination link local address and they

2245
01:28:36,000 --> 01:28:42,239
can open a socket

2246
01:28:37,840 --> 01:28:45,840
uh using uh its own link local address

2247
01:28:42,239 --> 01:28:46,559
from the same link so the communication

2248
01:28:45,840 --> 01:28:48,400
can be done

2249
01:28:46,560 --> 01:28:50,960
on the local link using link local

2250
01:28:48,400 --> 01:28:50,960
addresses

2251
01:28:51,360 --> 01:28:55,389
so that's practically the end of this

2252
01:28:54,159 --> 01:28:57,040
presentation

2253
01:28:55,390 --> 01:29:00,239
[Music]

2254
01:28:57,040 --> 01:29:00,239
i'm open for questions

2255
01:29:02,960 --> 01:29:08,960
yeah comments please edward also started

2256
01:29:07,120 --> 01:29:10,800
a poll

2257
01:29:08,960 --> 01:29:25,840
edward you're at the head of the queue

2258
01:29:10,800 --> 01:29:25,840
please go ahead

2259
01:29:29,280 --> 01:29:33,679
edward we cannot hear you you're at the

2260
01:29:32,000 --> 01:29:36,159
head of the queue

2261
01:29:33,679 --> 01:29:36,159
you have to

2262
01:29:36,960 --> 01:29:39,840
enable your audio

2263
01:29:43,520 --> 01:29:47,280
he disappeared so i guess that was a lag

2264
01:29:46,320 --> 01:29:50,400
from

2265
01:29:47,280 --> 01:29:55,120
the previous talk any questions for

2266
01:29:50,400 --> 01:29:57,839
put this on on this uh this draft

2267
01:29:55,120 --> 01:29:57,840
going once

2268
01:29:58,800 --> 01:30:02,239
well i have i guess one question i mean

2269
01:30:01,920 --> 01:30:05,440
i

2270
01:30:02,239 --> 01:30:07,919
i guess i wonder if i understand

2271
01:30:05,440 --> 01:30:09,040
this it's basically to try to move more

2272
01:30:07,920 --> 01:30:10,960
communication

2273
01:30:09,040 --> 01:30:12,800
local communication to just usually

2274
01:30:10,960 --> 01:30:15,040
global locals

2275
01:30:12,800 --> 01:30:16,480
so they don't have nodes don't use a

2276
01:30:15,040 --> 01:30:20,080
global address

2277
01:30:16,480 --> 01:30:23,759
but i wonder how

2278
01:30:20,080 --> 01:30:25,440
useful that really is does it

2279
01:30:23,760 --> 01:30:27,360
i mean it seems like a lot of devices

2280
01:30:25,440 --> 01:30:29,919
are going to need global addresses to

2281
01:30:27,360 --> 01:30:31,040
communicate outside of the local

2282
01:30:29,920 --> 01:30:34,800
environment so

2283
01:30:31,040 --> 01:30:37,600
i don't know how

2284
01:30:34,800 --> 01:30:37,600
useful this is

2285
01:30:37,920 --> 01:30:45,600
well uh the expectation is that uh

2286
01:30:41,920 --> 01:30:48,639
if we have flat infrastructure

2287
01:30:45,600 --> 01:30:49,199
within enterprises let's say small

2288
01:30:48,639 --> 01:30:52,719
medium

2289
01:30:49,199 --> 01:30:55,678
enterprises we we can keep all the

2290
01:30:52,719 --> 01:30:56,960
local traffic inside using link local

2291
01:30:55,679 --> 01:30:59,280
addresses and it would be

2292
01:30:56,960 --> 01:31:00,639
practically invisible to the outside

2293
01:30:59,280 --> 01:31:02,639
world so

2294
01:31:00,639 --> 01:31:04,880
it would be secured very easily that

2295
01:31:02,639 --> 01:31:04,880
thing

2296
01:31:05,199 --> 01:31:08,480
but aren't there a lot the enterprises

2297
01:31:07,199 --> 01:31:11,280
already have

2298
01:31:08,480 --> 01:31:11,919
ways of doing that you know use a lot of

2299
01:31:11,280 --> 01:31:13,920
people

2300
01:31:11,920 --> 01:31:15,600
firewalls and then we also have unique

2301
01:31:13,920 --> 01:31:18,800
local addresses

2302
01:31:15,600 --> 01:31:19,600
that keep stuff inside well i don't we

2303
01:31:18,800 --> 01:31:21,280
have

2304
01:31:19,600 --> 01:31:30,560
three other people in the four other

2305
01:31:21,280 --> 01:31:32,960
people in the queue so gaian

2306
01:31:30,560 --> 01:31:32,960
go ahead

2307
01:31:37,520 --> 01:31:49,520
we're not hearing you

2308
01:31:45,040 --> 01:31:49,519
okay when we go to ted ted lemon

2309
01:31:51,760 --> 01:31:57,760
hi so i just wanted to point out that um

2310
01:31:55,520 --> 01:31:58,719
whether or not you could ever even use

2311
01:31:57,760 --> 01:32:01,120
this depends on

2312
01:31:58,719 --> 01:32:03,440
how you got the ip address or the host

2313
01:32:01,120 --> 01:32:05,440
to begin with

2314
01:32:03,440 --> 01:32:07,120
if you're using multicast dns you would

2315
01:32:05,440 --> 01:32:10,480
already have the link local address

2316
01:32:07,120 --> 01:32:13,199
if you're using dns

2317
01:32:10,480 --> 01:32:14,080
then you need to tell that the host is

2318
01:32:13,199 --> 01:32:17,599
not on the

2319
01:32:14,080 --> 01:32:19,600
is on the link um so i just

2320
01:32:17,600 --> 01:32:21,280
and and your use case is kind of like

2321
01:32:19,600 --> 01:32:24,239
giant flat network which is

2322
01:32:21,280 --> 01:32:25,280
the use case we don't really uh tend to

2323
01:32:24,239 --> 01:32:28,239
recommend

2324
01:32:25,280 --> 01:32:29,120
so i guess my question is is there is

2325
01:32:28,239 --> 01:32:32,638
there

2326
01:32:29,120 --> 01:32:33,760
a real problem to solve here like

2327
01:32:32,639 --> 01:32:36,000
is this is this something that we

2328
01:32:33,760 --> 01:32:38,639
actually need to do or is it just

2329
01:32:36,000 --> 01:32:41,840
uh you know is there a better way to

2330
01:32:38,639 --> 01:32:41,840
solve the problem

2331
01:32:46,239 --> 01:32:51,519
well i think we lost los dusan there

2332
01:32:52,159 --> 01:32:58,480
gion are you here now we can

2333
01:32:56,239 --> 01:33:00,959
you want to try otherwise we'll go to

2334
01:32:58,480 --> 01:33:00,959
fernando

2335
01:33:02,400 --> 01:33:05,120
can you hear me

2336
01:33:05,520 --> 01:33:11,040
okay all right um yes so uh the question

2337
01:33:08,880 --> 01:33:13,760
i had i guess was for this um

2338
01:33:11,040 --> 01:33:14,159
use case it does seem quite a lot to do

2339
01:33:13,760 --> 01:33:18,960
uh

2340
01:33:14,159 --> 01:33:21,599
for um to resolve a uh to mitigate a um

2341
01:33:18,960 --> 01:33:22,960
an issue with um with glow i guess

2342
01:33:21,600 --> 01:33:26,560
reachability in

2343
01:33:22,960 --> 01:33:28,000
leveraging the link local address um

2344
01:33:26,560 --> 01:33:30,159
but i wonder if there's other maybe

2345
01:33:28,000 --> 01:33:32,639
other mechanisms i guess to

2346
01:33:30,159 --> 01:33:33,920
mitigate this type of issue maybe with

2347
01:33:32,639 --> 01:33:37,679
acls or whatnot

2348
01:33:33,920 --> 01:33:39,920
you know that are already in place um

2349
01:33:37,679 --> 01:33:42,560
towards it to uh get around you know

2350
01:33:39,920 --> 01:33:44,480
this type of an attack vector

2351
01:33:42,560 --> 01:33:46,080
especially because link local there are

2352
01:33:44,480 --> 01:33:47,759
definitely there are other

2353
01:33:46,080 --> 01:33:49,440
control plane protocols like routing

2354
01:33:47,760 --> 01:33:51,440
protocols and whatnot similar to

2355
01:33:49,440 --> 01:33:53,759
neighbor discovery they use link local

2356
01:33:51,440 --> 01:33:55,199
but it's generally local and i wonder if

2357
01:33:53,760 --> 01:33:58,320
um opening

2358
01:33:55,199 --> 01:34:00,080
link local up to be used globally

2359
01:33:58,320 --> 01:34:01,840
if that would actually create a new

2360
01:34:00,080 --> 01:34:05,519
attack vector

2361
01:34:01,840 --> 01:34:09,120
you know that maybe they may be unwanted

2362
01:34:05,520 --> 01:34:10,719
so um that's all those those are the

2363
01:34:09,120 --> 01:34:11,360
only uh comments i had on the uh that

2364
01:34:10,719 --> 01:34:14,320
draft

2365
01:34:11,360 --> 01:34:16,639
thanks okay thank you that makes sense

2366
01:34:14,320 --> 01:34:16,639
ted

2367
01:34:16,840 --> 01:34:23,199
dude i think ted

2368
01:34:19,360 --> 01:34:24,559
um yeah so when you're done speaking or

2369
01:34:23,199 --> 01:34:26,400
leaving the microphone line you can

2370
01:34:24,560 --> 01:34:30,840
unclick your

2371
01:34:26,400 --> 01:34:32,080
um your hand i think fernando you are

2372
01:34:30,840 --> 01:34:35,679
next

2373
01:34:32,080 --> 01:34:37,840
yes um

2374
01:34:35,679 --> 01:34:40,719
i'm trying to understand what is being

2375
01:34:37,840 --> 01:34:43,280
proposed here my understanding is that

2376
01:34:40,719 --> 01:34:44,320
you know given that two notes are on the

2377
01:34:43,280 --> 01:34:46,480
same link

2378
01:34:44,320 --> 01:34:48,719
the authors want to essentially suggest

2379
01:34:46,480 --> 01:34:52,000
that link local should be used

2380
01:34:48,719 --> 01:34:55,040
instead now my um question is

2381
01:34:52,000 --> 01:34:57,679
that if it's for a local application

2382
01:34:55,040 --> 01:34:59,440
what first of all normally when you

2383
01:34:57,679 --> 01:35:01,360
access a service

2384
01:34:59,440 --> 01:35:03,119
normally it's the result of mapping a

2385
01:35:01,360 --> 01:35:06,239
name to the addresses

2386
01:35:03,119 --> 01:35:08,960
right um

2387
01:35:06,239 --> 01:35:10,320
then in that case you know it could be

2388
01:35:08,960 --> 01:35:12,880
an application policy

2389
01:35:10,320 --> 01:35:14,559
to essentially you know select the you

2390
01:35:12,880 --> 01:35:16,560
know the um

2391
01:35:14,560 --> 01:35:18,880
the address of choice actually we do

2392
01:35:16,560 --> 01:35:20,880
have a specification for that

2393
01:35:18,880 --> 01:35:22,960
and on the other hand if it's an

2394
01:35:20,880 --> 01:35:26,000
application that is supposed to

2395
01:35:22,960 --> 01:35:28,239
operate only on the local link uh then

2396
01:35:26,000 --> 01:35:29,760
you know probably it should it should

2397
01:35:28,239 --> 01:35:32,799
buy a link local address

2398
01:35:29,760 --> 01:35:35,520
or a ula and not

2399
01:35:32,800 --> 01:35:36,320
a global address so i'm i'm i'm

2400
01:35:35,520 --> 01:35:38,400
wondering if

2401
01:35:36,320 --> 01:35:39,360
um what's what they're trying to achieve

2402
01:35:38,400 --> 01:35:43,839
here and whether

2403
01:35:39,360 --> 01:35:43,839
you know that it's really necessary

2404
01:35:44,320 --> 01:35:51,920
yep that's a good point

2405
01:35:47,600 --> 01:35:56,800
alexandra um

2406
01:35:51,920 --> 01:35:59,920
yes if you can hear me we can hear you

2407
01:35:56,800 --> 01:36:03,280
um yes let me try to

2408
01:35:59,920 --> 01:36:05,360
say a few words answering to fernando's

2409
01:36:03,280 --> 01:36:07,119
question uh first i was wondering what

2410
01:36:05,360 --> 01:36:10,159
is that

2411
01:36:07,119 --> 01:36:13,280
application policy that or a document

2412
01:36:10,159 --> 01:36:13,280
that tells which

2413
01:36:13,520 --> 01:36:20,400
source address to to use whether there

2414
01:36:16,560 --> 01:36:20,400
is already such an application then

2415
01:36:20,880 --> 01:36:27,119
we would be interesting to look at and

2416
01:36:24,000 --> 01:36:30,400
then also fernando says that

2417
01:36:27,119 --> 01:36:34,000
the application could select a ll

2418
01:36:30,400 --> 01:36:34,960
or a ula yes it is true but it depends

2419
01:36:34,000 --> 01:36:36,960
also on the

2420
01:36:34,960 --> 01:36:38,000
site deployment if that site's

2421
01:36:36,960 --> 01:36:41,600
deployment

2422
01:36:38,000 --> 01:36:44,719
has considered ulas and has deployed

2423
01:36:41,600 --> 01:36:46,480
ulas has auto configured uras on these

2424
01:36:44,719 --> 01:36:49,520
phones because i think it's mostly about

2425
01:36:46,480 --> 01:36:53,040
the phones sip phones in enterprises

2426
01:36:49,520 --> 01:36:56,159
then uh probably it could be uh

2427
01:36:53,040 --> 01:36:56,480
also an idea to prefer uh ulas instead

2428
01:36:56,159 --> 01:37:00,000
of

2429
01:36:56,480 --> 01:37:02,799
um lls uh it all

2430
01:37:00,000 --> 01:37:06,080
boils down to same scope communication

2431
01:37:02,800 --> 01:37:11,440
so if my destination is a ula then

2432
01:37:06,080 --> 01:37:15,440
probably yes prefer a ula in the source

2433
01:37:11,440 --> 01:37:18,960
i think also if i can continue on this

2434
01:37:15,440 --> 01:37:21,199
the ted recommended

2435
01:37:18,960 --> 01:37:22,560
asked whether there is a real problem

2436
01:37:21,199 --> 01:37:25,839
here to solve in this

2437
01:37:22,560 --> 01:37:29,199
indeed it is a a good question

2438
01:37:25,840 --> 01:37:30,960
uh the first one one of the slides that

2439
01:37:29,199 --> 01:37:34,559
showed the topology

2440
01:37:30,960 --> 01:37:35,360
um this place i think a real deployment

2441
01:37:34,560 --> 01:37:39,040
into which

2442
01:37:35,360 --> 01:37:42,080
indeed maybe flat networks are used and

2443
01:37:39,040 --> 01:37:45,199
but that's how it is deployed there

2444
01:37:42,080 --> 01:37:48,400
this this you would see

2445
01:37:45,199 --> 01:37:49,199
on the right hand of the slide there is

2446
01:37:48,400 --> 01:37:52,638
a

2447
01:37:49,199 --> 01:37:56,320
deployment with zip phones at one side

2448
01:37:52,639 --> 01:37:59,440
and across the internet on the left side

2449
01:37:56,320 --> 01:38:03,519
there is another site which also has

2450
01:37:59,440 --> 01:38:06,719
these phones and

2451
01:38:03,520 --> 01:38:07,679
there are sip services deployed and then

2452
01:38:06,719 --> 01:38:10,639
of course

2453
01:38:07,679 --> 01:38:11,920
one needs to talk to the others across

2454
01:38:10,639 --> 01:38:15,119
the internet by using

2455
01:38:11,920 --> 01:38:18,000
gwas globally unique

2456
01:38:15,119 --> 01:38:19,119
addresses but when opening a circuit

2457
01:38:18,000 --> 01:38:23,440
with agua

2458
01:38:19,119 --> 01:38:26,480
one exposes itself to attacks

2459
01:38:23,440 --> 01:38:28,559
so if i speak to a phone that is near me

2460
01:38:26,480 --> 01:38:30,638
why using agua

2461
01:38:28,560 --> 01:38:31,600
why opening myself to attacks when i

2462
01:38:30,639 --> 01:38:34,800
could just use a

2463
01:38:31,600 --> 01:38:36,159
relatives okay there is the

2464
01:38:34,800 --> 01:38:39,679
recommendations against

2465
01:38:36,159 --> 01:38:41,440
giant flat networks i agree but i think

2466
01:38:39,679 --> 01:38:44,719
it depends on the size of that

2467
01:38:41,440 --> 01:38:47,599
giant and uh um

2468
01:38:44,719 --> 01:38:49,440
if probably there are some ethernet

2469
01:38:47,600 --> 01:38:49,840
networks that could accommodate very

2470
01:38:49,440 --> 01:38:52,879
many

2471
01:38:49,840 --> 01:38:55,199
uh zip phones in my enterprise which

2472
01:38:52,880 --> 01:38:58,320
would make it a flat network

2473
01:38:55,199 --> 01:39:02,320
so yeah basically i wanted to give these

2474
01:38:58,320 --> 01:39:07,199
comments as a reply to earlier comments

2475
01:39:02,320 --> 01:39:07,199
thank you okay fernando

2476
01:39:10,400 --> 01:39:13,599
the the kinds of uh attacks that you are

2477
01:39:13,280 --> 01:39:16,159
uh

2478
01:39:13,600 --> 01:39:18,239
trying to mitigate or prevent attacks

2479
01:39:16,159 --> 01:39:20,320
against the server attacks against the

2480
01:39:18,239 --> 01:39:22,159
clients attacks against

2481
01:39:20,320 --> 01:39:27,840
for example established connections

2482
01:39:22,159 --> 01:39:27,839
between clients and servers

2483
01:39:29,600 --> 01:39:32,960
i think against against clients mainly

2484
01:39:32,000 --> 01:39:35,840
against uh

2485
01:39:32,960 --> 01:39:36,560
clients nobody so let's say that you

2486
01:39:35,840 --> 01:39:39,679
have enough

2487
01:39:36,560 --> 01:39:43,199
like an off-site archer okay

2488
01:39:39,679 --> 01:39:45,520
so your concern is that the um

2489
01:39:43,199 --> 01:39:46,960
the attacker would attack the server the

2490
01:39:45,520 --> 01:39:50,639
client the established

2491
01:39:46,960 --> 01:39:50,639
connection or or what else

2492
01:39:52,840 --> 01:39:59,840
i speak under authority of

2493
01:39:56,159 --> 01:39:59,839
of presenter but

2494
01:40:01,119 --> 01:40:05,280
against clients again attacks against

2495
01:40:03,679 --> 01:40:08,239
clients

2496
01:40:05,280 --> 01:40:09,679
but my concern is that if what you're

2497
01:40:08,239 --> 01:40:12,480
trying to

2498
01:40:09,679 --> 01:40:13,600
protect against is not attacks against

2499
01:40:12,480 --> 01:40:15,839
the established

2500
01:40:13,600 --> 01:40:17,280
sessions but attacks against the clients

2501
01:40:15,840 --> 01:40:19,760
then it doesn't really matter

2502
01:40:17,280 --> 01:40:20,400
what the client uses because as long as

2503
01:40:19,760 --> 01:40:22,400
the client

2504
01:40:20,400 --> 01:40:23,679
as long as the client has a global

2505
01:40:22,400 --> 01:40:27,119
address you know

2506
01:40:23,679 --> 01:40:29,520
it is subject to attack because the

2507
01:40:27,119 --> 01:40:31,119
the client will still will still have a

2508
01:40:29,520 --> 01:40:32,960
a global address so you're not

2509
01:40:31,119 --> 01:40:36,719
preventing or recommend the decline

2510
01:40:32,960 --> 01:40:40,880
to use let's say lean locals only

2511
01:40:36,719 --> 01:40:43,600
true true enough there would be

2512
01:40:40,880 --> 01:40:44,800
but the attacks are different if the

2513
01:40:43,600 --> 01:40:48,159
address is just

2514
01:40:44,800 --> 01:40:51,360
auto configured on the interface

2515
01:40:48,159 --> 01:40:55,119
versus the others has a open

2516
01:40:51,360 --> 01:40:55,759
socket on it okay but in the case of the

2517
01:40:55,119 --> 01:40:57,280
client

2518
01:40:55,760 --> 01:40:58,960
it wouldn't have an open socket because

2519
01:40:57,280 --> 01:41:01,840
it would be the server who would have

2520
01:40:58,960 --> 01:41:01,840
the open socket

2521
01:41:02,560 --> 01:41:09,360
uh sip has multiple streams i think

2522
01:41:06,800 --> 01:41:10,560
and some of them would be in a listening

2523
01:41:09,360 --> 01:41:14,080
mode

2524
01:41:10,560 --> 01:41:15,840
so my my comment is that for the

2525
01:41:14,080 --> 01:41:18,159
you know essentially for the nodes that

2526
01:41:15,840 --> 01:41:20,880
are listening on a socket

2527
01:41:18,159 --> 01:41:22,559
if you want to prevent attacks from you

2528
01:41:20,880 --> 01:41:26,000
know off-site attackers

2529
01:41:22,560 --> 01:41:27,520
just don't bind a global address

2530
01:41:26,000 --> 01:41:29,520
as long as you're buying a global

2531
01:41:27,520 --> 01:41:30,480
address as long as you are using a

2532
01:41:29,520 --> 01:41:33,679
global address

2533
01:41:30,480 --> 01:41:35,678
the address is going to be reachable

2534
01:41:33,679 --> 01:41:38,000
so the device is going to be the node is

2535
01:41:35,679 --> 01:41:41,040
going it's still going to be subject

2536
01:41:38,000 --> 01:41:42,800
to attack even if clients are not using

2537
01:41:41,040 --> 01:41:46,800
that global address the global address

2538
01:41:42,800 --> 01:41:51,679
is still there

2539
01:41:46,800 --> 01:41:55,199
um yes yes

2540
01:41:51,679 --> 01:41:58,320
we are um over time so let's

2541
01:41:55,199 --> 01:42:00,000
get we have ted jan in the queue let's

2542
01:41:58,320 --> 01:42:03,119
do it quickly and then we can move

2543
01:42:00,000 --> 01:42:06,000
on yeah so just two points

2544
01:42:03,119 --> 01:42:07,440
uh one uh the suggestion to use ulas

2545
01:42:06,000 --> 01:42:08,639
makes a lot of sense to me and i don't

2546
01:42:07,440 --> 01:42:10,080
actually know why that's not what's

2547
01:42:08,639 --> 01:42:13,440
being proposed here

2548
01:42:10,080 --> 01:42:17,360
um and secondly uh

2549
01:42:13,440 --> 01:42:21,360
you know uh alexandra's uh

2550
01:42:17,360 --> 01:42:22,799
comment about uh the phone

2551
01:42:21,360 --> 01:42:24,639
you know the phone has to be reached

2552
01:42:22,800 --> 01:42:26,480
somehow you have to look it up somehow

2553
01:42:24,639 --> 01:42:28,480
so why not just fix the way you look it

2554
01:42:26,480 --> 01:42:29,360
up so that you get so you return an

2555
01:42:28,480 --> 01:42:32,080
address

2556
01:42:29,360 --> 01:42:33,839
that's appropriate and then you can

2557
01:42:32,080 --> 01:42:36,320
listen on that address and not listen on

2558
01:42:33,840 --> 01:42:36,320
the gua

2559
01:42:41,040 --> 01:42:46,159
okay jen yeah noted noted okay noted

2560
01:42:57,600 --> 01:43:01,520
she dropped off how about eric

2561
01:43:02,480 --> 01:43:09,678
question if we're concerned about not uh

2562
01:43:06,639 --> 01:43:10,320
receiving communications for the service

2563
01:43:09,679 --> 01:43:12,400
awfully

2564
01:43:10,320 --> 01:43:13,759
quietly that we use mineral detail

2565
01:43:12,400 --> 01:43:16,559
security mechanisms

2566
01:43:13,760 --> 01:43:17,600
just do not accept anything with a hope

2567
01:43:16,560 --> 01:43:20,239
limit

2568
01:43:17,600 --> 01:43:21,199
which is not equal to 255 and done you

2569
01:43:20,239 --> 01:43:25,839
can only get

2570
01:43:21,199 --> 01:43:25,839
on linked packets

2571
01:43:26,560 --> 01:43:32,159
or or use the um you know the 255 trick

2572
01:43:32,880 --> 01:43:38,400
i must say i i did not

2573
01:43:35,920 --> 01:43:41,040
receive the question from jen why not

2574
01:43:38,400 --> 01:43:41,040
using what

2575
01:43:44,239 --> 01:43:47,360
a security mechanism basically what mds

2576
01:43:46,719 --> 01:43:51,119
do is

2577
01:43:47,360 --> 01:43:52,639
you always set your hope limit to 255

2578
01:43:51,119 --> 01:43:54,480
and you never accept paychecks if

2579
01:43:52,639 --> 01:43:56,480
hopefully which is not 255

2580
01:43:54,480 --> 01:43:58,239
which basically guarantees you that your

2581
01:43:56,480 --> 01:44:01,280
packets are always arriving

2582
01:43:58,239 --> 01:44:03,199
from online and as a result you can use

2583
01:44:01,280 --> 01:44:04,880
global address ula you could just link

2584
01:44:03,199 --> 01:44:05,440
local address does it flatter you can

2585
01:44:04,880 --> 01:44:08,560
only

2586
01:44:05,440 --> 01:44:10,960
reach the service from the online

2587
01:44:08,560 --> 01:44:10,960
client

2588
01:44:12,000 --> 01:44:18,880
um okay i i know this uh

2589
01:44:15,840 --> 01:44:21,280
question of 255 ah the hop limit okay

2590
01:44:18,880 --> 01:44:23,440
255 must be the hop limit and i note it

2591
01:44:21,280 --> 01:44:27,119
down and

2592
01:44:23,440 --> 01:44:35,839
i we will see uh about it thank you

2593
01:44:27,119 --> 01:44:35,839
okay eric

2594
01:44:36,800 --> 01:44:40,159
you're still in the queue do you want to

2595
01:44:46,840 --> 01:44:52,320
talk

2596
01:44:48,639 --> 01:44:55,760
i guess we will assume

2597
01:44:52,320 --> 01:44:55,759
not okay

2598
01:44:57,920 --> 01:45:04,880
okay hello hi can you hear me

2599
01:45:01,840 --> 01:45:08,080
yes we can go ahead

2600
01:45:04,880 --> 01:45:10,480
hi thank you hello everyone

2601
01:45:08,080 --> 01:45:11,600
this is jaydon uh and i'm going to

2602
01:45:10,480 --> 01:45:14,718
present this

2603
01:45:11,600 --> 01:45:18,000
document on carrying between id

2604
01:45:14,719 --> 01:45:19,520
ipv6 extension header okay this is

2605
01:45:18,000 --> 01:45:23,360
these are the co-authors of this

2606
01:45:19,520 --> 01:45:25,119
document next page please

2607
01:45:23,360 --> 01:45:26,480
okay here are some background of this

2608
01:45:25,119 --> 01:45:29,280
work uh

2609
01:45:26,480 --> 01:45:30,400
vtn is defined as a virtual android

2610
01:45:29,280 --> 01:45:32,159
network

2611
01:45:30,400 --> 01:45:34,000
with the topology and the network

2612
01:45:32,159 --> 01:45:37,040
resource required by

2613
01:45:34,000 --> 01:45:39,920
one or group of services

2614
01:45:37,040 --> 01:45:41,760
and we think the information of the

2615
01:45:39,920 --> 01:45:44,800
associated vtn needs to be

2616
01:45:41,760 --> 01:45:45,920
carried into the package this is used to

2617
01:45:44,800 --> 01:45:48,080
steer the packet

2618
01:45:45,920 --> 01:45:49,520
to the set of local network resource

2619
01:45:48,080 --> 01:45:52,559
allocated to the vtn

2620
01:45:49,520 --> 01:45:54,800
for the packet processing and dvd

2621
01:45:52,560 --> 01:45:57,280
information needs to be processed

2622
01:45:54,800 --> 01:45:58,880
on each hub along the path in packet

2623
01:45:57,280 --> 01:46:02,320
forwarding

2624
01:45:58,880 --> 01:46:04,239
so this document proposed a mechanism to

2625
01:46:02,320 --> 01:46:07,440
carry the waiting id

2626
01:46:04,239 --> 01:46:10,400
information in ipv6 extension headers

2627
01:46:07,440 --> 01:46:12,559
so that it can be applicable to both

2628
01:46:10,400 --> 01:46:16,799
ipv6 and i services

2629
01:46:12,560 --> 01:46:16,800
networks next page please

2630
01:46:19,199 --> 01:46:24,638
okay here we give some analysis about

2631
01:46:22,239 --> 01:46:28,159
the options of carrying the video id

2632
01:46:24,639 --> 01:46:31,280
in ipv6 packet the first one is

2633
01:46:28,159 --> 01:46:34,480
using the ipv6 destination address

2634
01:46:31,280 --> 01:46:37,759
in this way we need to allocate

2635
01:46:34,480 --> 01:46:38,320
different ipv6 address or i service

2636
01:46:37,760 --> 01:46:40,960
exceed

2637
01:46:38,320 --> 01:46:41,960
per node for vtn because this address

2638
01:46:40,960 --> 01:46:44,800
will

2639
01:46:41,960 --> 01:46:49,199
represent both a node and

2640
01:46:44,800 --> 01:46:51,679
the rating it belongs to this way

2641
01:46:49,199 --> 01:46:53,199
it will increase the complexity in the

2642
01:46:51,679 --> 01:46:55,119
address management

2643
01:46:53,199 --> 01:46:56,400
and also it will increase the amount of

2644
01:46:55,119 --> 01:46:59,839
uh forwarding

2645
01:46:56,400 --> 01:47:00,719
entries in the database the second

2646
01:46:59,840 --> 01:47:04,320
option is

2647
01:47:00,719 --> 01:47:06,880
the traffic class field was designed for

2648
01:47:04,320 --> 01:47:09,920
the differentiated qrs treatment and

2649
01:47:06,880 --> 01:47:12,639
the ec in function and we

2650
01:47:09,920 --> 01:47:14,400
note that the value of the tcps may be

2651
01:47:12,639 --> 01:47:14,800
changed during the packet forwarding

2652
01:47:14,400 --> 01:47:17,920
which

2653
01:47:14,800 --> 01:47:21,520
may not be what we want with the routine

2654
01:47:17,920 --> 01:47:24,960
information in the

2655
01:47:21,520 --> 01:47:28,080
last point is within a vtn we may still

2656
01:47:24,960 --> 01:47:30,880
want to use the tc field to specify the

2657
01:47:28,080 --> 01:47:33,840
different traffic classes

2658
01:47:30,880 --> 01:47:35,520
and the third option is the flow label

2659
01:47:33,840 --> 01:47:38,480
the flow label was designed to

2660
01:47:35,520 --> 01:47:41,119
for the load distribution among the ecmp

2661
01:47:38,480 --> 01:47:43,519
parts of the lags

2662
01:47:41,119 --> 01:47:44,480
which means that the load distribution

2663
01:47:43,520 --> 01:47:47,920
is a perhaps

2664
01:47:44,480 --> 01:47:50,799
behavior while the steering of package

2665
01:47:47,920 --> 01:47:53,440
to the retains the specific resource

2666
01:47:50,800 --> 01:47:54,480
needs to be deterministic and it's be

2667
01:47:53,440 --> 01:47:58,080
done with a

2668
01:47:54,480 --> 01:48:02,400
whole net whole network uh

2669
01:47:58,080 --> 01:48:04,080
planning based approach so

2670
01:48:02,400 --> 01:48:05,759
the last option we think is the

2671
01:48:04,080 --> 01:48:08,239
extension headers

2672
01:48:05,760 --> 01:48:09,119
and it needs to be processed hot by hop

2673
01:48:08,239 --> 01:48:12,480
in the data plane

2674
01:48:09,119 --> 01:48:15,119
so we have the hub hub option header and

2675
01:48:12,480 --> 01:48:16,080
we can have a dedicated option type

2676
01:48:15,119 --> 01:48:19,280
defined

2677
01:48:16,080 --> 01:48:22,480
for the btn information okay

2678
01:48:19,280 --> 01:48:22,480
uh next page please

2679
01:48:24,159 --> 01:48:27,440
okay this uh page shows the mechanisms

2680
01:48:26,639 --> 01:48:30,080
we used

2681
01:48:27,440 --> 01:48:32,960
in this document basically we proposed

2682
01:48:30,080 --> 01:48:36,000
to define a new ipv6 option type

2683
01:48:32,960 --> 01:48:38,159
to carry the waiting id and the option

2684
01:48:36,000 --> 01:48:40,719
type the first two bits in option type

2685
01:48:38,159 --> 01:48:41,599
asset to zero zero so that it can be

2686
01:48:40,719 --> 01:48:43,920
skipped

2687
01:48:41,600 --> 01:48:46,400
if i'm recognized and continue be

2688
01:48:43,920 --> 01:48:49,600
processed in the

2689
01:48:46,400 --> 01:48:52,159
forwarding path and the c bit is set to

2690
01:48:49,600 --> 01:48:54,960
zero which means it cannot be changed

2691
01:48:52,159 --> 01:48:55,679
during the forwarding and waiting id

2692
01:48:54,960 --> 01:48:59,119
field is

2693
01:48:55,679 --> 01:49:01,760
for architect for archetype identifier

2694
01:48:59,119 --> 01:49:03,119
this is to match the length of the

2695
01:49:01,760 --> 01:49:06,400
network slice id

2696
01:49:03,119 --> 01:49:08,960
in the ice ssa as defined in the 3gpp

2697
01:49:06,400 --> 01:49:12,879
for the 5g

2698
01:49:08,960 --> 01:49:14,960
because we the written option should be

2699
01:49:12,880 --> 01:49:16,239
processed on each hub along the path

2700
01:49:14,960 --> 01:49:18,560
will simply be

2701
01:49:16,239 --> 01:49:20,239
carried in the ipv6 hardware hub option

2702
01:49:18,560 --> 01:49:22,159
header

2703
01:49:20,239 --> 01:49:24,400
so the package forwarding will be based

2704
01:49:22,159 --> 01:49:26,719
on both the destination ip address and

2705
01:49:24,400 --> 01:49:29,839
the debating option

2706
01:49:26,719 --> 01:49:29,840
okay next slide please

2707
01:49:33,679 --> 01:49:37,119
here are the changes in the latest

2708
01:49:35,920 --> 01:49:40,159
version

2709
01:49:37,119 --> 01:49:41,839
okay in this version we clarified that

2710
01:49:40,159 --> 01:49:44,239
we should use the hopper hub option

2711
01:49:41,840 --> 01:49:46,320
header to carry the vtn option

2712
01:49:44,239 --> 01:49:47,280
because it need to be processed on each

2713
01:49:46,320 --> 01:49:50,480
hub

2714
01:49:47,280 --> 01:49:54,400
along the path and we removed

2715
01:49:50,480 --> 01:49:56,959
the reference to the rfc 8754

2716
01:49:54,400 --> 01:49:57,839
the srh because the processing of the

2717
01:49:56,960 --> 01:50:01,360
waiting option

2718
01:49:57,840 --> 01:50:04,719
is independent from the srh

2719
01:50:01,360 --> 01:50:08,239
header we also updated

2720
01:50:04,719 --> 01:50:08,239
operational considerations

2721
01:50:08,400 --> 01:50:13,040
more specifically the processing of the

2722
01:50:11,040 --> 01:50:14,960
network nodes on hubba hub header needs

2723
01:50:13,040 --> 01:50:16,480
to be considered by the operator when

2724
01:50:14,960 --> 01:50:20,800
they want to use the

2725
01:50:16,480 --> 01:50:22,879
uh updating option in their network

2726
01:50:20,800 --> 01:50:24,159
so that the waiting option should either

2727
01:50:22,880 --> 01:50:27,199
be processed or

2728
01:50:24,159 --> 01:50:30,799
ignored in the packet forwarding and

2729
01:50:27,199 --> 01:50:33,360
it should be based on this

2730
01:50:30,800 --> 01:50:35,440
pop-up hub processing information

2731
01:50:33,360 --> 01:50:37,199
operator can avoid the packet drop due

2732
01:50:35,440 --> 01:50:40,719
to the existence of the

2733
01:50:37,199 --> 01:50:43,280
hubba hub header okay

2734
01:50:40,719 --> 01:50:43,280
next page

2735
01:50:45,599 --> 01:50:49,040
okay for next steps we would like to

2736
01:50:48,239 --> 01:50:52,080
collect

2737
01:50:49,040 --> 01:50:52,880
more feedbacks on this document and hope

2738
01:50:52,080 --> 01:50:56,080
we can

2739
01:50:52,880 --> 01:50:59,679
revise it and polish it accordingly

2740
01:50:56,080 --> 01:51:04,000
to make it more stable in the next

2741
01:50:59,679 --> 01:51:07,520
in the next meeting thank you

2742
01:51:04,000 --> 01:51:08,239
good thank you um yeah so i have a poll

2743
01:51:07,520 --> 01:51:09,760
going about

2744
01:51:08,239 --> 01:51:12,400
see how many people have read the draft

2745
01:51:09,760 --> 01:51:14,239
are there any comments

2746
01:51:12,400 --> 01:51:16,719
we have wrong in the queue i believe ron

2747
01:51:14,239 --> 01:51:16,718
go ahead

2748
01:51:16,800 --> 01:51:20,719
i have a two-part question two-part

2749
01:51:19,040 --> 01:51:23,679
question

2750
01:51:20,719 --> 01:51:24,480
the first part is does the vtn

2751
01:51:23,679 --> 01:51:27,040
contribute

2752
01:51:24,480 --> 01:51:29,678
the next top determination or does it

2753
01:51:27,040 --> 01:51:32,560
only determine which queue you go in

2754
01:51:29,679 --> 01:51:32,560
uh on a hop

2755
01:51:33,040 --> 01:51:40,000
okay in this draft it is mainly used for

2756
01:51:37,199 --> 01:51:41,360
the determination of the queues or like

2757
01:51:40,000 --> 01:51:44,880
the logical

2758
01:51:41,360 --> 01:51:47,920
interface the next option okay

2759
01:51:44,880 --> 01:51:50,080
by the destination address when you say

2760
01:51:47,920 --> 01:51:53,119
the logical interface you mean

2761
01:51:50,080 --> 01:51:55,920
the vtn id might cause a packet

2762
01:51:53,119 --> 01:51:59,759
to go to a different next hop than then

2763
01:51:55,920 --> 01:51:59,760
it would have had the vtn not been there

2764
01:52:00,840 --> 01:52:06,560
no the logical interface

2765
01:52:03,119 --> 01:52:09,040
belongs to the uh

2766
01:52:06,560 --> 01:52:11,280
layer 3 interface which is determined by

2767
01:52:09,040 --> 01:52:14,400
the destination address field

2768
01:52:11,280 --> 01:52:17,440
we can have multiple logical interfaces

2769
01:52:14,400 --> 01:52:21,679
under the one layer three interface this

2770
01:52:17,440 --> 01:52:24,799
is uh the one approach to

2771
01:52:21,679 --> 01:52:28,159
separate the resources under the same

2772
01:52:24,800 --> 01:52:30,000
interface okay i'm a little confused by

2773
01:52:28,159 --> 01:52:32,799
your words when you say

2774
01:52:30,000 --> 01:52:34,159
the vtn id determines the logical

2775
01:52:32,800 --> 01:52:35,679
interface

2776
01:52:34,159 --> 01:52:37,440
in your mind do all the logical

2777
01:52:35,679 --> 01:52:40,880
interfaces on a node

2778
01:52:37,440 --> 01:52:40,879
terminate at the same neighbor

2779
01:52:41,520 --> 01:52:48,239
yeah for um actually

2780
01:52:44,960 --> 01:52:48,719
the forwarding is based on two steps

2781
01:52:48,239 --> 01:52:52,159
first

2782
01:52:48,719 --> 01:52:55,360
step is you use the destination address

2783
01:52:52,159 --> 01:52:58,320
to identify the

2784
01:52:55,360 --> 01:52:59,839
neighbor or your next hop and then you

2785
01:52:58,320 --> 01:53:02,880
use the written id

2786
01:52:59,840 --> 01:53:04,480
to identify which uh

2787
01:53:02,880 --> 01:53:07,119
like which queue or which logical

2788
01:53:04,480 --> 01:53:08,320
interface to send the traffic to the

2789
01:53:07,119 --> 01:53:11,280
desktop

2790
01:53:08,320 --> 01:53:12,960
okay if it's just next to you yes that's

2791
01:53:11,280 --> 01:53:16,239
good that's good if it's just next

2792
01:53:12,960 --> 01:53:19,360
q um then we're okay if it

2793
01:53:16,239 --> 01:53:22,400
determined the uh next hop

2794
01:53:19,360 --> 01:53:24,400
you have having a node skip it would run

2795
01:53:22,400 --> 01:53:26,320
the risk of routing loops

2796
01:53:24,400 --> 01:53:29,360
but so long as you're not determining

2797
01:53:26,320 --> 01:53:31,759
the next hop with the vtn id you're okay

2798
01:53:29,360 --> 01:53:32,400
yeah yeah i understand that problem no

2799
01:53:31,760 --> 01:53:41,040
we will

2800
01:53:32,400 --> 01:53:45,759
not use it for the next hop okay

2801
01:53:41,040 --> 01:53:45,760
senbin you are next please go ahead

2802
01:53:51,520 --> 01:53:55,360
hello we can hear yes we can hear you

2803
01:53:54,320 --> 01:53:57,679
okay okay yeah

2804
01:53:55,360 --> 01:53:59,759
uh i i'd add one point to the

2805
01:53:57,679 --> 01:54:02,000
explanation to the robonica

2806
01:53:59,760 --> 01:54:03,760
uh because this waiting idea is to

2807
01:54:02,000 --> 01:54:05,440
identify the resource

2808
01:54:03,760 --> 01:54:07,119
is in order to determine the outcome

2809
01:54:05,440 --> 01:54:10,000
interface other resource

2810
01:54:07,119 --> 01:54:11,119
it can have the different format it

2811
01:54:10,000 --> 01:54:14,159
means

2812
01:54:11,119 --> 01:54:16,159
as explained by the jimmy that's the

2813
01:54:14,159 --> 01:54:18,239
this can be the queue it also can be

2814
01:54:16,159 --> 01:54:23,839
some the layer 2 interface

2815
01:54:18,239 --> 01:54:23,839
is identified as logical interface etc

2816
01:54:28,639 --> 01:54:31,920
okay joel

2817
01:54:32,560 --> 01:54:38,639
seems to me that this assumes

2818
01:54:35,599 --> 01:54:39,440
certain facts like knowing that the path

2819
01:54:38,639 --> 01:54:42,159
you're following

2820
01:54:39,440 --> 01:54:44,239
will be paying attention to this

2821
01:54:42,159 --> 01:54:46,000
destination option

2822
01:54:44,239 --> 01:54:47,839
that inherently require that you're

2823
01:54:46,000 --> 01:54:49,920
using some other traffic engineering

2824
01:54:47,840 --> 01:54:52,000
technique either flex algo or segment

2825
01:54:49,920 --> 01:54:54,239
routing or something else

2826
01:54:52,000 --> 01:54:55,520
all of which have the the capability to

2827
01:54:54,239 --> 01:54:58,480
implicitly provide

2828
01:54:55,520 --> 01:54:59,520
any logical interface or cue selection

2829
01:54:58,480 --> 01:55:02,239
that you need

2830
01:54:59,520 --> 01:55:02,800
at whatever granularity you need and

2831
01:55:02,239 --> 01:55:05,839
adding

2832
01:55:02,800 --> 01:55:09,280
an extra identifier to the packet

2833
01:55:05,840 --> 01:55:09,280
seems counterproductive

2834
01:55:10,719 --> 01:55:16,639
okay let me answer the question

2835
01:55:14,159 --> 01:55:18,320
you mentioned that flux algo or some

2836
01:55:16,639 --> 01:55:21,119
other mechanism can be used to

2837
01:55:18,320 --> 01:55:22,000
for the traffic engineering different

2838
01:55:21,119 --> 01:55:24,400
like a different

2839
01:55:22,000 --> 01:55:26,560
engineering purpose yeah that's true but

2840
01:55:24,400 --> 01:55:27,360
that is in the control plane in a data

2841
01:55:26,560 --> 01:55:29,280
plane you need

2842
01:55:27,360 --> 01:55:31,119
different identifiers allocated for

2843
01:55:29,280 --> 01:55:32,719
different flight circles like we have

2844
01:55:31,119 --> 01:55:34,559
the same routing based

2845
01:55:32,719 --> 01:55:35,840
identifiers we have the ip based

2846
01:55:34,560 --> 01:55:39,119
identifiers just

2847
01:55:35,840 --> 01:55:41,840
discussed on this uh yesterday

2848
01:55:39,119 --> 01:55:44,159
so this document just proposed a data

2849
01:55:41,840 --> 01:55:46,320
plane identifier which can be

2850
01:55:44,159 --> 01:55:48,320
mapped to the control plane mechanisms

2851
01:55:46,320 --> 01:55:49,040
for the traffic engineering so they need

2852
01:55:48,320 --> 01:55:52,000
to

2853
01:55:49,040 --> 01:55:54,159
work together yeah but you said that

2854
01:55:52,000 --> 01:55:56,320
this algorithm that this identifier is

2855
01:55:54,159 --> 01:55:58,400
not used for next top selection

2856
01:55:56,320 --> 01:56:00,080
therefore this is not the identifier for

2857
01:55:58,400 --> 01:56:01,119
flex algo something else is the

2858
01:56:00,080 --> 01:56:04,639
identifier for flex

2859
01:56:01,119 --> 01:56:06,480
alco and that identifier

2860
01:56:04,639 --> 01:56:08,639
can provide any needed traffic

2861
01:56:06,480 --> 01:56:10,080
engineering if this identifier is

2862
01:56:08,639 --> 01:56:11,360
driving the flexalgo then this

2863
01:56:10,080 --> 01:56:13,360
identifier is

2864
01:56:11,360 --> 01:56:15,199
directly affecting the next top

2865
01:56:13,360 --> 01:56:17,839
selection and then we have all sorts of

2866
01:56:15,199 --> 01:56:20,719
other problems

2867
01:56:17,840 --> 01:56:22,800
yeah okay i see your point yeah i mean

2868
01:56:20,719 --> 01:56:26,000
flat cycle is

2869
01:56:22,800 --> 01:56:28,239
for the routing can be used to

2870
01:56:26,000 --> 01:56:29,440
impact the routing orders that's hub

2871
01:56:28,239 --> 01:56:32,320
selection right

2872
01:56:29,440 --> 01:56:34,000
but uh even after you select the last

2873
01:56:32,320 --> 01:56:37,280
type you still need some

2874
01:56:34,000 --> 01:56:38,480
fine granularity identifier to select

2875
01:56:37,280 --> 01:56:41,280
the resource

2876
01:56:38,480 --> 01:56:41,919
used for uh to send traffic to the nest

2877
01:56:41,280 --> 01:56:45,119
hop

2878
01:56:41,920 --> 01:56:46,000
this is the uh why we need uh this

2879
01:56:45,119 --> 01:56:48,799
identifier

2880
01:56:46,000 --> 01:56:48,800
in the data plane

2881
01:56:50,400 --> 01:57:01,199
okay ron and then we'll wrap up

2882
01:56:57,440 --> 01:57:03,199
i'm having heard joel's question i'm

2883
01:57:01,199 --> 01:57:04,719
i'm more confused about the answer to my

2884
01:57:03,199 --> 01:57:07,759
own before

2885
01:57:04,719 --> 01:57:11,280
i'm thinking that this vtn identifier

2886
01:57:07,760 --> 01:57:12,400
is um the moral equivalent of more dscp

2887
01:57:11,280 --> 01:57:15,360
bits

2888
01:57:12,400 --> 01:57:17,679
it's only used for cue selection never

2889
01:57:15,360 --> 01:57:20,799
used for next hop selection

2890
01:57:17,679 --> 01:57:24,080
do i have that much right yeah yeah

2891
01:57:20,800 --> 01:57:27,360
maybe i should make that clear in the

2892
01:57:24,080 --> 01:57:29,519
answer to joe yeah we need the

2893
01:57:27,360 --> 01:57:30,639
two other identifiers in the data plane

2894
01:57:29,520 --> 01:57:33,599
actually

2895
01:57:30,639 --> 01:57:34,719
one for the that's hop selection one for

2896
01:57:33,599 --> 01:57:38,560
this

2897
01:57:34,719 --> 01:57:41,360
like more fragrance fight granularity

2898
01:57:38,560 --> 01:57:44,880
resource selection

2899
01:57:41,360 --> 01:57:44,880
is that uh clear

2900
01:57:47,679 --> 01:57:53,440
just could i couldn't uh clean that from

2901
01:57:50,239 --> 01:57:57,919
the draft

2902
01:57:53,440 --> 01:58:01,440
yeah we can make that clearer maybe

2903
01:57:57,920 --> 01:58:04,800
with some more text

2904
01:58:01,440 --> 01:58:05,678
okay i think we need to wrap up for over

2905
01:58:04,800 --> 01:58:09,119
time

2906
01:58:05,679 --> 01:58:12,320
so um the next presentation

2907
01:58:09,119 --> 01:58:16,159
is um linda dunbar

2908
01:58:12,320 --> 01:58:18,159
linda um so we're very close to the end

2909
01:58:16,159 --> 01:58:21,759
of the session i think it will let us

2910
01:58:18,159 --> 01:58:22,960
run over but if it's okay with you we'd

2911
01:58:21,760 --> 01:58:25,280
like to

2912
01:58:22,960 --> 01:58:26,719
move you to the friday session is that

2913
01:58:25,280 --> 01:58:29,759
okay

2914
01:58:26,719 --> 01:58:31,520
uh sure um for the friday session can

2915
01:58:29,760 --> 01:58:33,119
you put me on the beginning of the

2916
01:58:31,520 --> 01:58:34,960
agenda because i have two more

2917
01:58:33,119 --> 01:58:37,360
presentations at idr

2918
01:58:34,960 --> 01:58:38,800
happens at the same session with you

2919
01:58:37,360 --> 01:58:42,639
same time

2920
01:58:38,800 --> 01:58:43,920
so my uh slotting idi said that towards

2921
01:58:42,639 --> 01:58:48,320
the end of the

2922
01:58:43,920 --> 01:58:50,159
session i think uh maybe um i could

2923
01:58:48,320 --> 01:58:52,880
we could put you after the working group

2924
01:58:50,159 --> 01:58:56,799
says uh presentations

2925
01:58:52,880 --> 01:58:58,320
so that'll be more yeah

2926
01:58:56,800 --> 01:59:00,400
we're not going to use most of the time

2927
01:58:58,320 --> 01:59:03,440
on friday okay well good

2928
01:59:00,400 --> 01:59:07,360
well thank you thank you all right

2929
01:59:03,440 --> 01:59:10,080
so enjoy bangkok yes

2930
01:59:07,360 --> 01:59:11,598
or wherever you are and if you're awake

2931
01:59:10,080 --> 01:59:13,360
or asleep

2932
01:59:11,599 --> 01:59:16,000
i think this is only going to get to be

2933
01:59:13,360 --> 01:59:19,598
more fun as the week goes on

2934
01:59:16,000 --> 01:59:22,719
so thanks a lot very much

2935
01:59:19,599 --> 01:59:23,440
we'll talk to you again on friday or

2936
01:59:22,719 --> 01:59:30,080
wherever

2937
01:59:23,440 --> 01:59:37,598
whenever that is

2938
01:59:30,080 --> 01:59:37,599
thank you all

