1
00:00:16,160 --> 00:00:19,199
one two three

2
00:00:24,080 --> 00:00:27,119
morning ed morning everyone else do i

3
00:00:26,480 --> 00:00:29,039
have

4
00:00:27,119 --> 00:00:30,160
can i hear anything i can't hear

5
00:00:29,039 --> 00:00:32,880
anything that's never

6
00:00:30,160 --> 00:00:33,920
get here you're fine oh good now i can

7
00:00:32,880 --> 00:00:35,600
hear myself

8
00:00:33,920 --> 00:00:37,360
there was a bit of a bit of a bit of lag

9
00:00:35,600 --> 00:00:40,079
there

10
00:00:37,360 --> 00:00:41,200
um look at that and i get in just in

11
00:00:40,079 --> 00:00:43,200
time for five o'clock

12
00:00:41,200 --> 00:00:46,879
sorry i was making myself my two cups of

13
00:00:43,200 --> 00:00:46,879
coffee too to survive this

14
00:00:48,399 --> 00:00:54,879
so let me just uh find some slides

15
00:00:56,840 --> 00:01:03,359
actually give me 30 seconds just to

16
00:00:59,760 --> 00:01:03,358
open all the slides

17
00:01:06,400 --> 00:01:15,920
and then

18
00:01:12,000 --> 00:01:19,200
so morning everyone i think

19
00:01:15,920 --> 00:01:22,320
given it's five o'clock from my time

20
00:01:19,200 --> 00:01:24,479
and uh let's say 12 o'clock bangkok time

21
00:01:22,320 --> 00:01:27,839
is probably easier way to put it

22
00:01:24,479 --> 00:01:30,080
shall we make a start

23
00:01:27,840 --> 00:01:30,080
um

24
00:01:31,520 --> 00:01:36,798
find out how to make meat echo share my

25
00:01:38,840 --> 00:01:41,840
slides

26
00:01:42,479 --> 00:01:45,920
no that doesn't help does it

27
00:01:46,320 --> 00:01:48,880
that helps

28
00:01:52,840 --> 00:01:57,439
excellent yeah

29
00:01:55,600 --> 00:01:59,439
be nicer if that wasn't quite in that

30
00:01:57,439 --> 00:02:01,839
aspect ratio but there we go

31
00:01:59,439 --> 00:02:03,758
can everyone see that slide just a

32
00:02:01,840 --> 00:02:07,439
little bit of

33
00:02:03,759 --> 00:02:10,399
um i can see him i can see him well

34
00:02:07,439 --> 00:02:11,840
excellent okay brilliant so uh may as

35
00:02:10,399 --> 00:02:15,040
well make a start

36
00:02:11,840 --> 00:02:19,760
um hello everyone um

37
00:02:15,040 --> 00:02:19,760
rick and ed here welcome to dtn 109

38
00:02:20,840 --> 00:02:25,760
um

39
00:02:22,319 --> 00:02:27,200
so uh just to kick off uh this session

40
00:02:25,760 --> 00:02:27,760
is being recorded because we're on meat

41
00:02:27,200 --> 00:02:30,799
echo

42
00:02:27,760 --> 00:02:33,280
um so it's all being recorded as usual

43
00:02:30,800 --> 00:02:34,560
um i'll get to the agenda on the next

44
00:02:33,280 --> 00:02:36,959
slide

45
00:02:34,560 --> 00:02:37,920
standard things there's a participation

46
00:02:36,959 --> 00:02:40,160
guide

47
00:02:37,920 --> 00:02:41,679
given this is the friday of this ietf

48
00:02:40,160 --> 00:02:43,440
and i'm assuming most of you have

49
00:02:41,680 --> 00:02:44,959
attended other sessions already

50
00:02:43,440 --> 00:02:47,120
you should be fairly familiar with how

51
00:02:44,959 --> 00:02:49,280
meat echo works um

52
00:02:47,120 --> 00:02:51,200
given you're listening to me it assumes

53
00:02:49,280 --> 00:02:54,640
mute echo is working

54
00:02:51,200 --> 00:02:56,879
um but the links for

55
00:02:54,640 --> 00:02:58,079
how to report technical issues etc are

56
00:02:56,879 --> 00:03:00,959
also on this slide

57
00:02:58,080 --> 00:03:02,560
but a quick search on the internet using

58
00:03:00,959 --> 00:03:02,959
your favorite search provider will also

59
00:03:02,560 --> 00:03:06,480
find

60
00:03:02,959 --> 00:03:08,720
the usual ietf assistance pages

61
00:03:06,480 --> 00:03:09,518
in case of a catastrophic technical

62
00:03:08,720 --> 00:03:12,879
breakdown

63
00:03:09,519 --> 00:03:13,440
although how using the internet to solve

64
00:03:12,879 --> 00:03:17,359
an internet

65
00:03:13,440 --> 00:03:19,760
problem helps i'm not quite sure anyway

66
00:03:17,360 --> 00:03:21,519
so uh this being an itf session it is

67
00:03:19,760 --> 00:03:24,798
covered under the note well

68
00:03:21,519 --> 00:03:28,000
um i hope you are familiar with this

69
00:03:24,799 --> 00:03:30,640
if not i suggest you read it carefully

70
00:03:28,000 --> 00:03:32,080
um it covers all the usual things

71
00:03:30,640 --> 00:03:35,359
behavior

72
00:03:32,080 --> 00:03:38,879
ipr disclosures

73
00:03:35,360 --> 00:03:42,720
copyright code of conduct etc please

74
00:03:38,879 --> 00:03:45,599
take time to read this but

75
00:03:42,720 --> 00:03:46,080
yeah it's an effect so the agenda the

76
00:03:45,599 --> 00:03:48,959
agenda

77
00:03:46,080 --> 00:03:49,599
has uh gone through a couple of updates

78
00:03:48,959 --> 00:03:52,480
um

79
00:03:49,599 --> 00:03:53,439
this week uh including some very last

80
00:03:52,480 --> 00:03:56,480
minute updates

81
00:03:53,439 --> 00:03:59,599
uh not half an hour ago

82
00:03:56,480 --> 00:04:02,720
so highlights of that are we have

83
00:03:59,599 --> 00:04:05,839
moved the so okay

84
00:04:02,720 --> 00:04:08,640
we are covering in some detail

85
00:04:05,840 --> 00:04:10,400
the changes to the drafts that are in

86
00:04:08,640 --> 00:04:13,839
iesg review

87
00:04:10,400 --> 00:04:15,360
in order to ensure we are getting these

88
00:04:13,840 --> 00:04:18,478
issues resolved

89
00:04:15,360 --> 00:04:20,720
um this is dragged on for a long time

90
00:04:18,478 --> 00:04:22,079
and we really do have to get these

91
00:04:20,720 --> 00:04:22,880
things finished there's been a list of

92
00:04:22,079 --> 00:04:25,919
discusses

93
00:04:22,880 --> 00:04:26,719
i know the authors and the working group

94
00:04:25,919 --> 00:04:28,479
have been

95
00:04:26,720 --> 00:04:31,199
uh working quite hard to try and get

96
00:04:28,479 --> 00:04:34,719
these cleared

97
00:04:31,199 --> 00:04:38,320
because of that we have moved the tcpcl

98
00:04:34,720 --> 00:04:39,040
updates presentation later into the

99
00:04:38,320 --> 00:04:42,080
agenda

100
00:04:39,040 --> 00:04:43,600
this is to give benjamin caduck and i'm

101
00:04:42,080 --> 00:04:45,280
sorry if i

102
00:04:43,600 --> 00:04:47,840
get your pronunciation of your name

103
00:04:45,280 --> 00:04:48,559
incorrect who is one of the isg

104
00:04:47,840 --> 00:04:50,880
reviewers

105
00:04:48,560 --> 00:04:52,160
it gives him a chance to attend and

106
00:04:50,880 --> 00:04:54,000
actually we can try and get some of

107
00:04:52,160 --> 00:04:55,759
these comments addressed at the mic

108
00:04:54,000 --> 00:04:57,440
because doing these things in real time

109
00:04:55,759 --> 00:04:58,400
is often quicker than doing them over

110
00:04:57,440 --> 00:05:00,240
email

111
00:04:58,400 --> 00:05:01,679
um obviously everything will always be

112
00:05:00,240 --> 00:05:04,400
confirmed on the mailing list because

113
00:05:01,680 --> 00:05:07,199
that is a record of decisions made

114
00:05:04,400 --> 00:05:08,080
but the ability to have um conversations

115
00:05:07,199 --> 00:05:10,160
at the mic

116
00:05:08,080 --> 00:05:11,680
uh should hopefully help us clear up

117
00:05:10,160 --> 00:05:14,960
those last issues

118
00:05:11,680 --> 00:05:17,520
the other issue is uh jungwon chung

119
00:05:14,960 --> 00:05:19,198
was going to present on his extensions

120
00:05:17,520 --> 00:05:22,000
to profit

121
00:05:19,199 --> 00:05:24,000
there is that is cancelled i'm afraid

122
00:05:22,000 --> 00:05:25,120
because there is an ipr issue which we

123
00:05:24,000 --> 00:05:28,240
are going to resolve

124
00:05:25,120 --> 00:05:30,639
and uh hopefully he will be able to

125
00:05:28,240 --> 00:05:32,720
present that at the next ietf meeting

126
00:05:30,639 --> 00:05:34,400
so uh apologies to anyone who came

127
00:05:32,720 --> 00:05:38,080
specifically to hear about that

128
00:05:34,400 --> 00:05:41,039
it's not happening everyone involved

129
00:05:38,080 --> 00:05:42,479
is uh extremely apologetic because we

130
00:05:41,039 --> 00:05:46,320
wanted to but it's

131
00:05:42,479 --> 00:05:49,520
it's got a bit complex that's fine

132
00:05:46,320 --> 00:05:51,840
um okay a little bit of administrivia

133
00:05:49,520 --> 00:05:53,520
meat echo can struggle apparently there

134
00:05:51,840 --> 00:05:55,119
was a denial of service attack on it

135
00:05:53,520 --> 00:05:58,318
yesterday for some reason

136
00:05:55,120 --> 00:05:58,319
on the jabber part of it

137
00:05:59,039 --> 00:06:02,960
all video conferencing systems have

138
00:06:00,639 --> 00:06:04,720
their problems i personally think meet

139
00:06:02,960 --> 00:06:06,000
echo is a pretty good solution for what

140
00:06:04,720 --> 00:06:08,880
we're doing

141
00:06:06,000 --> 00:06:10,000
please be patient with it there are a

142
00:06:08,880 --> 00:06:13,120
number of

143
00:06:10,000 --> 00:06:14,800
just reload the whole site buttons

144
00:06:13,120 --> 00:06:16,800
at the bottom right hand corner of your

145
00:06:14,800 --> 00:06:19,039
screen and that

146
00:06:16,800 --> 00:06:22,960
really helps if your audio breaks up if

147
00:06:19,039 --> 00:06:24,479
not just reload your whole browser page

148
00:06:22,960 --> 00:06:25,919
as you can understand there's a lot of

149
00:06:24,479 --> 00:06:27,120
people from all over the world trying to

150
00:06:25,919 --> 00:06:29,120
use this system

151
00:06:27,120 --> 00:06:30,960
it's running on a cloud provider

152
00:06:29,120 --> 00:06:33,039
occasionally there are hiccups

153
00:06:30,960 --> 00:06:34,719
apparently the cloud provider decided to

154
00:06:33,039 --> 00:06:36,800
reconfigure half of the virtual

155
00:06:34,720 --> 00:06:38,319
network interfaces halfway through the

156
00:06:36,800 --> 00:06:41,600
ietf meeting

157
00:06:38,319 --> 00:06:42,240
which caused absolute mayhem but bless

158
00:06:41,600 --> 00:06:46,479
them

159
00:06:42,240 --> 00:06:50,319
they seem to have kept it all afloat

160
00:06:46,479 --> 00:06:54,000
we need minutes taken um the interactive

161
00:06:50,319 --> 00:06:56,000
uh sort of shared the equivalent of

162
00:06:54,000 --> 00:06:57,440
etherpad there's a system called kodi md

163
00:06:56,000 --> 00:07:00,160
that is built into

164
00:06:57,440 --> 00:07:02,560
uh meet echo uh we would like to use

165
00:07:00,160 --> 00:07:06,319
this for the minutes um

166
00:07:02,560 --> 00:07:09,440
our normal um excellent minute taker ed

167
00:07:06,319 --> 00:07:10,880
is now of course one of our is our new

168
00:07:09,440 --> 00:07:14,400
co-chair with me

169
00:07:10,880 --> 00:07:16,880
um so there

170
00:07:14,400 --> 00:07:17,599
we need volunteers to work on keeping

171
00:07:16,880 --> 00:07:19,520
the minutes

172
00:07:17,599 --> 00:07:21,280
please can you use kodi md it's a

173
00:07:19,520 --> 00:07:22,400
collaborative tool which means we can

174
00:07:21,280 --> 00:07:24,799
all help out

175
00:07:22,400 --> 00:07:26,080
and we can all do things such as correct

176
00:07:24,800 --> 00:07:29,520
our names when

177
00:07:26,080 --> 00:07:33,120
whoever is currently typing has missed

178
00:07:29,520 --> 00:07:35,280
or mistyped or whatever

179
00:07:33,120 --> 00:07:36,800
please don't use it as an opportunity to

180
00:07:35,280 --> 00:07:39,440
stick an entire essay

181
00:07:36,800 --> 00:07:40,319
underlining your point in extreme detail

182
00:07:39,440 --> 00:07:43,599
but

183
00:07:40,319 --> 00:07:46,639
a good capture of of what is happening

184
00:07:43,599 --> 00:07:48,878
is of course useful um

185
00:07:46,639 --> 00:07:49,680
and the mailing lists uh just to

186
00:07:48,879 --> 00:07:52,560
reiterate

187
00:07:49,680 --> 00:07:53,919
uh dtn itf.org and also if you need to

188
00:07:52,560 --> 00:07:57,199
contact the chairs

189
00:07:53,919 --> 00:07:59,758
unlike my previous typo when

190
00:07:57,199 --> 00:08:02,680
asking for agenda items it is dtn chairs

191
00:07:59,759 --> 00:08:05,120
at ietf.org not

192
00:08:02,680 --> 00:08:06,720
itef.org although if anyone wants to

193
00:08:05,120 --> 00:08:07,840
register that domain and forward it to

194
00:08:06,720 --> 00:08:11,199
somewhere useful

195
00:08:07,840 --> 00:08:15,198
i'm sure that would be appreciated

196
00:08:11,199 --> 00:08:16,400
um what i will stick in i should have

197
00:08:15,199 --> 00:08:20,400
put a slide in for this

198
00:08:16,400 --> 00:08:23,520
um i would like to um introduce

199
00:08:20,400 --> 00:08:24,878
ed brain a lot of you know ed um he's

200
00:08:23,520 --> 00:08:28,560
been our secretary for

201
00:08:24,879 --> 00:08:31,919
a couple of years now mark blanchet

202
00:08:28,560 --> 00:08:32,479
has uh decided to step down as a dtn

203
00:08:31,919 --> 00:08:34,880
chair

204
00:08:32,479 --> 00:08:35,839
and i'd like to take this opportunity to

205
00:08:34,880 --> 00:08:38,640
thank him

206
00:08:35,839 --> 00:08:40,320
for all his hard work over from the

207
00:08:38,640 --> 00:08:42,718
inception of this working group

208
00:08:40,320 --> 00:08:43,680
um all the way through to this current

209
00:08:42,719 --> 00:08:46,880
session

210
00:08:43,679 --> 00:08:47,920
um i think he's done the working group

211
00:08:46,880 --> 00:08:51,200
proud

212
00:08:47,920 --> 00:08:54,560
and his input continues i know so

213
00:08:51,200 --> 00:08:56,080
a big thank you to mark and equally

214
00:08:54,560 --> 00:08:58,399
i'd like to welcome ed as my new

215
00:08:56,080 --> 00:08:59,200
co-chair because he has taken mark's

216
00:08:58,399 --> 00:09:01,920
slot

217
00:08:59,200 --> 00:09:04,320
um congratulations ed uh welcome to the

218
00:09:01,920 --> 00:09:04,319
mayhem

219
00:09:06,399 --> 00:09:11,360
well no thank you very much and um i i

220
00:09:09,760 --> 00:09:13,360
just wanted to echo you know

221
00:09:11,360 --> 00:09:14,959
the the conversations that i'd had with

222
00:09:13,360 --> 00:09:18,000
mark over the years

223
00:09:14,959 --> 00:09:20,319
about dtn and understanding its use

224
00:09:18,000 --> 00:09:21,279
in a variety of different use cases

225
00:09:20,320 --> 00:09:25,120
terrestrial

226
00:09:21,279 --> 00:09:27,439
and and in space uh have been have been

227
00:09:25,120 --> 00:09:28,880
extremely helpful and his dedication to

228
00:09:27,440 --> 00:09:29,839
making sure that that this work

229
00:09:28,880 --> 00:09:31,680
continues

230
00:09:29,839 --> 00:09:33,120
and continues in a way that makes it uh

231
00:09:31,680 --> 00:09:36,399
correct and implementable

232
00:09:33,120 --> 00:09:39,040
and operational uh is is and

233
00:09:36,399 --> 00:09:40,640
continues to be appreciated uh what i

234
00:09:39,040 --> 00:09:42,399
what i'd like to say otherwise is uh

235
00:09:40,640 --> 00:09:44,160
thank you for the opportunity to come in

236
00:09:42,399 --> 00:09:45,600
and help chair the working group

237
00:09:44,160 --> 00:09:47,920
uh something certainly that we are

238
00:09:45,600 --> 00:09:48,800
passionate about and speaking about

239
00:09:47,920 --> 00:09:51,279
being passionate

240
00:09:48,800 --> 00:09:53,519
about some of this work uh we we have

241
00:09:51,279 --> 00:09:57,360
been passionately pursuing

242
00:09:53,519 --> 00:10:00,080
uh bp biz bp sac and tcp clv4

243
00:09:57,360 --> 00:10:01,680
uh for really uh quite some time uh and

244
00:10:00,080 --> 00:10:04,240
as we have

245
00:10:01,680 --> 00:10:06,000
gone through several iterations uh and

246
00:10:04,240 --> 00:10:07,920
this most recent being the comments from

247
00:10:06,000 --> 00:10:10,640
the iesg review

248
00:10:07,920 --> 00:10:11,120
we have gotten to be uh very very very

249
00:10:10,640 --> 00:10:13,439
close

250
00:10:11,120 --> 00:10:15,120
to finishing uh the outstanding uh

251
00:10:13,440 --> 00:10:17,440
discusses and comments

252
00:10:15,120 --> 00:10:19,680
associated with these documents the

253
00:10:17,440 --> 00:10:20,480
expectation is through the presentations

254
00:10:19,680 --> 00:10:22,160
today

255
00:10:20,480 --> 00:10:24,240
we'll be able to understand if there are

256
00:10:22,160 --> 00:10:27,439
any remaining questions

257
00:10:24,240 --> 00:10:29,200
something that is important is even

258
00:10:27,440 --> 00:10:31,279
when the documents come out of the

259
00:10:29,200 --> 00:10:33,760
working group last call but then

260
00:10:31,279 --> 00:10:35,200
we look at discusses and comments there

261
00:10:33,760 --> 00:10:36,399
are questions that come back to the

262
00:10:35,200 --> 00:10:37,839
working group

263
00:10:36,399 --> 00:10:40,079
and questions that come back from the

264
00:10:37,839 --> 00:10:41,360
mailing list and we really need to make

265
00:10:40,079 --> 00:10:43,680
sure

266
00:10:41,360 --> 00:10:45,120
wherever possible that we are engaging

267
00:10:43,680 --> 00:10:47,839
in those discussions

268
00:10:45,120 --> 00:10:48,560
to make sure that we have time to uh

269
00:10:47,839 --> 00:10:51,680
update

270
00:10:48,560 --> 00:10:54,880
and and get the uh drafts in

271
00:10:51,680 --> 00:10:57,519
for review so that by the time the uh

272
00:10:54,880 --> 00:10:59,360
the drafts get back onto the isg

273
00:10:57,519 --> 00:11:00,480
telechat the next one being the 3rd of

274
00:10:59,360 --> 00:11:03,040
december

275
00:11:00,480 --> 00:11:04,399
we've made sure that all opinions on

276
00:11:03,040 --> 00:11:05,599
some of the open items have been

277
00:11:04,399 --> 00:11:08,240
represented

278
00:11:05,600 --> 00:11:10,800
in particular we've been tracing bp biz

279
00:11:08,240 --> 00:11:11,920
bpseq and tcpclb4

280
00:11:10,800 --> 00:11:14,079
but something else that we're going to

281
00:11:11,920 --> 00:11:17,120
hear about today is the idea

282
00:11:14,079 --> 00:11:18,239
that the default security contacts for

283
00:11:17,120 --> 00:11:20,800
bpsac

284
00:11:18,240 --> 00:11:21,760
really also need to go in front of the

285
00:11:20,800 --> 00:11:24,959
iesg

286
00:11:21,760 --> 00:11:26,399
uh to to give bp sec

287
00:11:24,959 --> 00:11:28,079
and the people who would be approving

288
00:11:26,399 --> 00:11:30,959
bpsac the

289
00:11:28,079 --> 00:11:33,040
the comfort that uh that we have draft

290
00:11:30,959 --> 00:11:34,079
security context that can be operational

291
00:11:33,040 --> 00:11:36,719
from day one

292
00:11:34,079 --> 00:11:38,640
and so please pay attention to uh these

293
00:11:36,720 --> 00:11:40,399
four documents in particular

294
00:11:38,640 --> 00:11:41,920
and if you do have questions come to the

295
00:11:40,399 --> 00:11:43,600
mic and if you do have questions

296
00:11:41,920 --> 00:11:45,360
participate on the mailing list

297
00:11:43,600 --> 00:11:46,720
as we wrap this up so that we can do

298
00:11:45,360 --> 00:11:48,560
this and then get on

299
00:11:46,720 --> 00:11:51,040
to our other items that we would like to

300
00:11:48,560 --> 00:11:55,040
get to in a recharter

301
00:11:51,040 --> 00:11:58,160
here so um yes this slide is

302
00:11:55,040 --> 00:11:59,519
is no longer relevant because we

303
00:11:58,160 --> 00:12:01,600
uh we're going to discuss this but

304
00:11:59,519 --> 00:12:05,120
unfortunately it's cancelled

305
00:12:01,600 --> 00:12:08,560
uh so this is the agenda we have so

306
00:12:05,120 --> 00:12:09,680
um really i'm looking at the clock

307
00:12:08,560 --> 00:12:11,839
we should probably kick off with the

308
00:12:09,680 --> 00:12:15,040
agenda um

309
00:12:11,839 --> 00:12:16,000
we have left 20 minutes for open mic uh

310
00:12:15,040 --> 00:12:19,199
any other business

311
00:12:16,000 --> 00:12:21,200
at the end of the session that may well

312
00:12:19,200 --> 00:12:23,760
be eaten up by overruns

313
00:12:21,200 --> 00:12:25,920
uh have no objection to overrunning

314
00:12:23,760 --> 00:12:26,480
particularly on the key documents as ed

315
00:12:25,920 --> 00:12:28,719
said

316
00:12:26,480 --> 00:12:29,760
that are under iasg review at the moment

317
00:12:28,720 --> 00:12:33,200
as

318
00:12:29,760 --> 00:12:34,959
they are really blocking uh

319
00:12:33,200 --> 00:12:36,639
further work in the working group so so

320
00:12:34,959 --> 00:12:38,399
we need to get these things sorted so

321
00:12:36,639 --> 00:12:42,399
we'll be fairly lenient with time

322
00:12:38,399 --> 00:12:44,000
for the early things but um

323
00:12:42,399 --> 00:12:46,720
so i can only apologize to some people

324
00:12:44,000 --> 00:12:48,399
who have late agenda

325
00:12:46,720 --> 00:12:50,160
items at the end of the agenda if you

326
00:12:48,399 --> 00:12:51,680
get squeezed for time

327
00:12:50,160 --> 00:12:54,399
we will certainly make time for you next

328
00:12:51,680 --> 00:12:57,439
time if you get pushed out

329
00:12:54,399 --> 00:13:01,040
so uh all that being said

330
00:12:57,440 --> 00:13:04,560
scott are you here

331
00:13:01,040 --> 00:13:06,240
yes you are um ed do you want to try

332
00:13:04,560 --> 00:13:09,359
driving me taco for a second while i tr

333
00:13:06,240 --> 00:13:09,360
while i find scott's slides

334
00:13:10,480 --> 00:13:14,399
i will certainly do my best this is my

335
00:13:12,079 --> 00:13:15,359
first time with the expanded meet echo

336
00:13:14,399 --> 00:13:17,360
interface

337
00:13:15,360 --> 00:13:18,800
so there are many buttons and i don't

338
00:13:17,360 --> 00:13:20,399
want to you know

339
00:13:18,800 --> 00:13:21,920
denial of service attack jabber

340
00:13:20,399 --> 00:13:25,040
accidentally

341
00:13:21,920 --> 00:13:26,160
okay so you press all the buttons all at

342
00:13:25,040 --> 00:13:30,719
the same time at

343
00:13:26,160 --> 00:13:30,719
that is the best way forward that is

344
00:13:31,040 --> 00:13:39,120
you've seen me program

345
00:13:35,839 --> 00:13:40,639
all right million million monkeys so i

346
00:13:39,120 --> 00:13:43,600
have a quick apology to scott

347
00:13:40,639 --> 00:13:45,440
um i built these slides for him based on

348
00:13:43,600 --> 00:13:47,199
an email conversation because of time

349
00:13:45,440 --> 00:13:49,440
constraints so they are a

350
00:13:47,199 --> 00:13:50,399
ugly and be a little bit of a stream of

351
00:13:49,440 --> 00:13:52,399
consciousness but

352
00:13:50,399 --> 00:13:54,399
uh on you go scott just just ask me to

353
00:13:52,399 --> 00:13:57,440
switch slides for you

354
00:13:54,399 --> 00:13:59,680
uh okay uh everybody can hear me okay um

355
00:13:57,440 --> 00:14:02,959
the audio is coming through all right uh

356
00:13:59,680 --> 00:14:05,519
i'll try to go quickly through this

357
00:14:02,959 --> 00:14:05,518
next slide

358
00:14:07,199 --> 00:14:15,279
the status of the vpv7

359
00:14:11,120 --> 00:14:17,920
vps bundle protocol specification

360
00:14:15,279 --> 00:14:18,480
is this is actually slightly out of date

361
00:14:17,920 --> 00:14:20,880
um

362
00:14:18,480 --> 00:14:23,600
because version 29 of the draft was

363
00:14:20,880 --> 00:14:26,240
posted two days ago

364
00:14:23,600 --> 00:14:27,199
and it addressed a couple of additional

365
00:14:26,240 --> 00:14:30,639
points

366
00:14:27,199 --> 00:14:34,079
brought up by magnus uh

367
00:14:30,639 --> 00:14:37,120
in in retiring one of the discusses

368
00:14:34,079 --> 00:14:40,800
um so with that in mind i will try to

369
00:14:37,120 --> 00:14:42,800
mention the further updates

370
00:14:40,800 --> 00:14:44,639
uh beyond what's on these slides as we

371
00:14:42,800 --> 00:14:45,839
go through them

372
00:14:44,639 --> 00:14:49,519
when i was putting this together i

373
00:14:45,839 --> 00:14:52,800
looked back through the last

374
00:14:49,519 --> 00:14:56,000
four or five months of emails and

375
00:14:52,800 --> 00:14:57,599
tried to compile the status of

376
00:14:56,000 --> 00:15:00,240
what i understand to be the remaining

377
00:14:57,600 --> 00:15:02,560
open uh questions on the draft so next

378
00:15:00,240 --> 00:15:02,560
slide

379
00:15:06,720 --> 00:15:10,720
this is the big one because it's it's

380
00:15:09,600 --> 00:15:13,920
pretty much unreadable

381
00:15:10,720 --> 00:15:16,480
for anybody but me the

382
00:15:13,920 --> 00:15:17,680
the big question has been uh there's the

383
00:15:16,480 --> 00:15:19,920
one that has gotten the most

384
00:15:17,680 --> 00:15:20,959
attention has been whether or not and if

385
00:15:19,920 --> 00:15:24,000
so how

386
00:15:20,959 --> 00:15:26,399
uh the um dp

387
00:15:24,000 --> 00:15:27,360
security extensions would be mandated

388
00:15:26,399 --> 00:15:30,560
within

389
00:15:27,360 --> 00:15:32,079
the bp bis the core bundle protocol

390
00:15:30,560 --> 00:15:33,758
specification

391
00:15:32,079 --> 00:15:36,000
there was discussion back and forth on

392
00:15:33,759 --> 00:15:36,000
this

393
00:15:36,399 --> 00:15:41,199
the and i won't go through this

394
00:15:39,040 --> 00:15:44,560
extensive email trail

395
00:15:41,199 --> 00:15:47,359
at the end of it we i believe settled on

396
00:15:44,560 --> 00:15:48,399
some language that is in the first two

397
00:15:47,360 --> 00:15:51,040
paragraphs of

398
00:15:48,399 --> 00:15:52,079
section nine of the specification that i

399
00:15:51,040 --> 00:15:55,680
believe

400
00:15:52,079 --> 00:15:59,359
uh addresses uh everybody's concerns

401
00:15:55,680 --> 00:16:01,359
and reflects the um

402
00:15:59,360 --> 00:16:02,399
the consensus of people who are on the

403
00:16:01,360 --> 00:16:05,680
mailing list

404
00:16:02,399 --> 00:16:09,839
uh aside from mark who disagreed with

405
00:16:05,680 --> 00:16:09,839
this the concept entirely

406
00:16:10,399 --> 00:16:17,040
everybody else is okay with there being

407
00:16:13,440 --> 00:16:18,079
some element of mandate and the text of

408
00:16:17,040 --> 00:16:20,560
that mandate is

409
00:16:18,079 --> 00:16:21,519
written in those uh first two paragraphs

410
00:16:20,560 --> 00:16:24,160
of section nine

411
00:16:21,519 --> 00:16:25,759
we can go through those now but uh i

412
00:16:24,160 --> 00:16:27,680
would propose that we instead

413
00:16:25,759 --> 00:16:28,800
press through the rest of this list and

414
00:16:27,680 --> 00:16:31,920
then uh

415
00:16:28,800 --> 00:16:36,319
come back to um specific questions

416
00:16:31,920 --> 00:16:38,319
uh at the end if if there are some scott

417
00:16:36,320 --> 00:16:40,240
scott sorry rick interrupting here sorry

418
00:16:38,320 --> 00:16:43,600
i think it is worth

419
00:16:40,240 --> 00:16:46,560
at the end of this just reiterating the

420
00:16:43,600 --> 00:16:48,079
um statement that's in the current uh

421
00:16:46,560 --> 00:16:49,839
the latest draft

422
00:16:48,079 --> 00:16:51,359
just to make sure that everyone has that

423
00:16:49,839 --> 00:16:54,720
understanding of

424
00:16:51,360 --> 00:16:56,639
uh mandatory to and i'm

425
00:16:54,720 --> 00:16:58,160
sorry it's early for me mandatory to

426
00:16:56,639 --> 00:17:00,399
implement uh sorry

427
00:16:58,160 --> 00:17:02,319
mandatory to implement optional to use

428
00:17:00,399 --> 00:17:04,079
is the executive summary

429
00:17:02,320 --> 00:17:06,799
is that that being the case why don't i

430
00:17:04,079 --> 00:17:09,198
just uh i'll just do it now

431
00:17:06,799 --> 00:17:11,039
right do it right now um okay so the

432
00:17:09,199 --> 00:17:12,799
first two paragraphs of section nine

433
00:17:11,039 --> 00:17:14,400
bundle protocol security architecture

434
00:17:12,799 --> 00:17:16,160
and the available security services are

435
00:17:14,400 --> 00:17:17,839
specified in an accompanying document

436
00:17:16,160 --> 00:17:19,839
the bundle security protocol

437
00:17:17,839 --> 00:17:21,760
specification bpsec

438
00:17:19,839 --> 00:17:22,958
whenever bundled protocol security

439
00:17:21,760 --> 00:17:24,799
services

440
00:17:22,959 --> 00:17:26,559
as opposed to the security services

441
00:17:24,799 --> 00:17:28,400
provided by overlying application

442
00:17:26,559 --> 00:17:29,840
protocols or underlying convergence

443
00:17:28,400 --> 00:17:32,880
layer protocols

444
00:17:29,840 --> 00:17:34,639
are required those services shall be

445
00:17:32,880 --> 00:17:37,120
provided by bpsec

446
00:17:34,640 --> 00:17:39,679
rather than by some other mechanism with

447
00:17:37,120 --> 00:17:42,959
the same or similar scope that is

448
00:17:39,679 --> 00:17:44,240
when security is is required bpsec is

449
00:17:42,960 --> 00:17:46,720
the way you do it

450
00:17:44,240 --> 00:17:47,600
a second paragraph a bundle protocol

451
00:17:46,720 --> 00:17:50,799
agent which

452
00:17:47,600 --> 00:17:54,320
sources cryptographically verifies

453
00:17:50,799 --> 00:17:58,000
and or accepts a bundle must implement

454
00:17:54,320 --> 00:18:00,159
support for bpsec use of bpsec for a

455
00:17:58,000 --> 00:18:03,120
particular bundled protocol session

456
00:18:00,160 --> 00:18:04,720
is optional i think that is the language

457
00:18:03,120 --> 00:18:08,159
that

458
00:18:04,720 --> 00:18:11,200
then ran atkinson uh proposed and i

459
00:18:08,160 --> 00:18:12,720
that everybody agreed to and i'm

460
00:18:11,200 --> 00:18:15,840
certainly fine with it

461
00:18:12,720 --> 00:18:16,960
if there are objections to it it would

462
00:18:15,840 --> 00:18:19,678
be good to bring those out on the

463
00:18:16,960 --> 00:18:19,679
mailing list

464
00:18:21,120 --> 00:18:28,639
good good yeah thank you

465
00:18:25,120 --> 00:18:31,039
uh so let's move to the next slide then

466
00:18:28,640 --> 00:18:32,320
some of these will go very quickly

467
00:18:31,039 --> 00:18:34,320
because there have been

468
00:18:32,320 --> 00:18:37,520
no comments but this is one of the open

469
00:18:34,320 --> 00:18:37,520
questions that uh

470
00:18:37,760 --> 00:18:43,919
that we do need to resolve

471
00:18:41,679 --> 00:18:44,880
there was a discuss on this and i

472
00:18:43,919 --> 00:18:47,600
believe

473
00:18:44,880 --> 00:18:49,480
uh from the last email exchange with

474
00:18:47,600 --> 00:18:53,439
magnus i believe we've

475
00:18:49,480 --> 00:18:57,679
satisfactorily resolved uh this question

476
00:18:53,440 --> 00:19:00,640
there were a couple of sections in

477
00:18:57,679 --> 00:19:02,559
paragraphs in sections 10.3 and 10.4

478
00:19:00,640 --> 00:19:06,240
that were simply removed

479
00:19:02,559 --> 00:19:09,360
in version 29 of the specification

480
00:19:06,240 --> 00:19:13,039
so um magnus do you

481
00:19:09,360 --> 00:19:15,120
have a comment at this point

482
00:19:13,039 --> 00:19:17,120
i i just wanted to clarify we are back

483
00:19:15,120 --> 00:19:19,039
to specification required

484
00:19:17,120 --> 00:19:20,719
and then and their experts are gonna

485
00:19:19,039 --> 00:19:23,440
check those when they come in so

486
00:19:20,720 --> 00:19:23,840
it's there's some chance so that's basic

487
00:19:23,440 --> 00:19:25,919
by

488
00:19:23,840 --> 00:19:28,080
removing the changes we're actually back

489
00:19:25,919 --> 00:19:32,799
to specification required

490
00:19:28,080 --> 00:19:35,918
yeah and that's so

491
00:19:32,799 --> 00:19:38,639
go ahead yeah that's what i i take away

492
00:19:35,919 --> 00:19:40,559
from the previous discussion and etc

493
00:19:38,640 --> 00:19:42,160
and it's most definitely results and

494
00:19:40,559 --> 00:19:43,039
morrow's discuss even if he hasn't

495
00:19:42,160 --> 00:19:46,240
cleared

496
00:19:43,039 --> 00:19:48,640
so okay excellent

497
00:19:46,240 --> 00:19:52,480
uh all right that said let's move to the

498
00:19:48,640 --> 00:19:54,880
next slide

499
00:19:52,480 --> 00:19:56,240
there was a question of um similarly a

500
00:19:54,880 --> 00:19:59,360
question of mandating

501
00:19:56,240 --> 00:19:59,760
implementation of uh the tcp convergence

502
00:19:59,360 --> 00:20:03,120
layer

503
00:19:59,760 --> 00:20:06,480
tcpcl v4 in the bp specif

504
00:20:03,120 --> 00:20:09,199
uh vp bis specification there is a

505
00:20:06,480 --> 00:20:10,080
text on that which uh which i can find

506
00:20:09,200 --> 00:20:13,520
if we need to

507
00:20:10,080 --> 00:20:15,520
but um the the the um

508
00:20:13,520 --> 00:20:16,639
i think the gist of it is that we are

509
00:20:15,520 --> 00:20:20,240
agreed that

510
00:20:16,640 --> 00:20:24,720
um implementation of tcp

511
00:20:20,240 --> 00:20:29,039
cl is mandatory as a

512
00:20:24,720 --> 00:20:34,400
minimum connectivity option

513
00:20:29,039 --> 00:20:34,400
for bundle protocol nodes

514
00:20:34,960 --> 00:20:40,320
there was no further discussion on the

515
00:20:38,559 --> 00:20:42,080
working group mailing list that i know

516
00:20:40,320 --> 00:20:45,918
of so

517
00:20:42,080 --> 00:20:49,439
i i'm at this point i'm taking

518
00:20:45,919 --> 00:20:52,000
silences ascent uh i think

519
00:20:49,440 --> 00:20:53,360
that's right scott um the question has

520
00:20:52,000 --> 00:20:55,919
been asked on the mailing list

521
00:20:53,360 --> 00:20:56,639
um silence is is viewed as ascent with

522
00:20:55,919 --> 00:20:59,760
with

523
00:20:56,640 --> 00:21:01,840
these things okay

524
00:20:59,760 --> 00:21:02,799
uh so i'm gonna assume that that

525
00:21:01,840 --> 00:21:06,080
language is okay

526
00:21:02,799 --> 00:21:08,480
and on the next slide uh similarly uh

527
00:21:06,080 --> 00:21:09,360
there is this uh uh question of

528
00:21:08,480 --> 00:21:11,280
authorizing

529
00:21:09,360 --> 00:21:13,439
protocol agents to override the bundle

530
00:21:11,280 --> 00:21:15,520
lifetimes that are asserted by bp

531
00:21:13,440 --> 00:21:19,360
applications and the idea here is

532
00:21:15,520 --> 00:21:23,280
uh to uh enable a mechanism

533
00:21:19,360 --> 00:21:25,600
for um congestion mitigation which was

534
00:21:23,280 --> 00:21:26,879
one of the early discuss items that that

535
00:21:25,600 --> 00:21:30,158
merger brought up

536
00:21:26,880 --> 00:21:33,360
um to enable congestion mitigation by

537
00:21:30,159 --> 00:21:36,799
authorizing bundle protocol agents

538
00:21:33,360 --> 00:21:40,000
to essentially

539
00:21:36,799 --> 00:21:41,360
delete bundles by changing the bundle

540
00:21:40,000 --> 00:21:45,039
lifetime

541
00:21:41,360 --> 00:21:47,760
locally and and by uh using a

542
00:21:45,039 --> 00:21:48,799
uh an overriding bundle lifetime for

543
00:21:47,760 --> 00:21:53,120
this purpose

544
00:21:48,799 --> 00:21:55,840
uh we uh provide a a little bit of uh

545
00:21:53,120 --> 00:21:56,799
uh adjustability to it you could uh set

546
00:21:55,840 --> 00:21:58,399
it up so that it

547
00:21:56,799 --> 00:22:00,320
if you're if you're running short on

548
00:21:58,400 --> 00:22:02,320
space maybe you

549
00:22:00,320 --> 00:22:03,360
set the the bundle lifetime for the

550
00:22:02,320 --> 00:22:05,840
purpose of

551
00:22:03,360 --> 00:22:07,678
your own uh as a as your own bundle note

552
00:22:05,840 --> 00:22:08,959
is your own possession of the bundle you

553
00:22:07,679 --> 00:22:10,960
set it to

554
00:22:08,960 --> 00:22:12,799
um half an hour if the bundle has not

555
00:22:10,960 --> 00:22:16,480
been forwarded in half an hour then

556
00:22:12,799 --> 00:22:18,720
you uh authorize it to to be uh deleted

557
00:22:16,480 --> 00:22:20,480
as a as a way of controlling congestion

558
00:22:18,720 --> 00:22:22,640
in the network

559
00:22:20,480 --> 00:22:24,880
so scott can i ask a clarifying question

560
00:22:22,640 --> 00:22:25,760
here because this this has slightly

561
00:22:24,880 --> 00:22:29,200
confused me

562
00:22:25,760 --> 00:22:32,400
so what you're not discussing here

563
00:22:29,200 --> 00:22:35,280
is an intermediate bundle agent

564
00:22:32,400 --> 00:22:36,000
altering the lifetime on a bundle before

565
00:22:35,280 --> 00:22:39,039
forward

566
00:22:36,000 --> 00:22:41,360
as it forwards it absolutely

567
00:22:39,039 --> 00:22:42,559
what you're discussing is a bundle

568
00:22:41,360 --> 00:22:46,240
processing agent

569
00:22:42,559 --> 00:22:48,720
making a local decision to drop bundles

570
00:22:46,240 --> 00:22:51,120
that it knows it's never going to

571
00:22:48,720 --> 00:22:53,120
forward because there's congestion

572
00:22:51,120 --> 00:22:54,719
that's exactly right it's it's a local

573
00:22:53,120 --> 00:22:58,158
drop decision rather than an

574
00:22:54,720 --> 00:23:00,480
alteration of the bundles um

575
00:22:58,159 --> 00:23:02,320
primary block or or the bundles

576
00:23:00,480 --> 00:23:04,240
forwarding information

577
00:23:02,320 --> 00:23:06,080
that's right and and i believe that's

578
00:23:04,240 --> 00:23:07,520
that's very clear in the specification

579
00:23:06,080 --> 00:23:10,399
that uh

580
00:23:07,520 --> 00:23:12,000
we're not talking about um altering the

581
00:23:10,400 --> 00:23:13,679
lifetime of the bundle which you can't

582
00:23:12,000 --> 00:23:16,720
do anyway because it's in the

583
00:23:13,679 --> 00:23:19,520
exactly primary block and that would uh

584
00:23:16,720 --> 00:23:21,600
violate immutability so uh it is

585
00:23:19,520 --> 00:23:25,840
strictly a local

586
00:23:21,600 --> 00:23:26,399
processing decision scott this is ed i

587
00:23:25,840 --> 00:23:29,360
had a

588
00:23:26,400 --> 00:23:31,440
question about that when when we uh when

589
00:23:29,360 --> 00:23:32,240
we use this if we were to delete a

590
00:23:31,440 --> 00:23:35,679
bundle

591
00:23:32,240 --> 00:23:37,760
uh by uh advancing uh or or changing or

592
00:23:35,679 --> 00:23:40,960
overriding its bundle lifetime

593
00:23:37,760 --> 00:23:42,879
and a reason code uh would be generated

594
00:23:40,960 --> 00:23:44,720
as an administrative record

595
00:23:42,880 --> 00:23:46,080
showing that the bundle had been deleted

596
00:23:44,720 --> 00:23:49,200
for this purpose

597
00:23:46,080 --> 00:23:50,158
uh would the reason code uh be that the

598
00:23:49,200 --> 00:23:52,159
lifetime

599
00:23:50,159 --> 00:23:53,520
was expired or would it be something

600
00:23:52,159 --> 00:23:56,159
else

601
00:23:53,520 --> 00:23:57,440
uh i we've sort of gone back and forth

602
00:23:56,159 --> 00:23:59,279
on that i believe what the

603
00:23:57,440 --> 00:24:00,960
specification says now is that the

604
00:23:59,279 --> 00:24:03,679
reason code would be

605
00:24:00,960 --> 00:24:04,720
um i forgot exactly what the word is but

606
00:24:03,679 --> 00:24:07,520
it's a

607
00:24:04,720 --> 00:24:07,520
traffic um

608
00:24:09,679 --> 00:24:12,799
cleansed or something that

609
00:24:19,279 --> 00:24:23,919
it would be differentiatable from a

610
00:24:21,760 --> 00:24:29,039
normal lifetime expiration

611
00:24:23,919 --> 00:24:29,039
yes it would be okay good

612
00:24:31,039 --> 00:24:35,440
uh any other thoughts on that

613
00:24:40,240 --> 00:24:44,480
uh okay then uh let's go on to the next

614
00:24:43,840 --> 00:24:47,760
slide

615
00:24:44,480 --> 00:24:53,200
uh this is uh

616
00:24:47,760 --> 00:24:56,400
whether or not the language in 41511

617
00:24:53,200 --> 00:24:59,440
is a satisfactory

618
00:24:56,400 --> 00:25:04,000
specification of the dtn scheme

619
00:24:59,440 --> 00:25:04,000
endpoint id syntax that enables

620
00:25:04,080 --> 00:25:10,960
enables a bundle protocol agent to

621
00:25:07,440 --> 00:25:14,000
differentiate between a dtm scheme

622
00:25:10,960 --> 00:25:17,840
endpoint that is singleton and one

623
00:25:14,000 --> 00:25:20,159
that is that has multiple

624
00:25:17,840 --> 00:25:21,360
or potentially has multiple members in

625
00:25:20,159 --> 00:25:24,559
the endpoint

626
00:25:21,360 --> 00:25:29,840
and the mechanism proposed to that is uh

627
00:25:24,559 --> 00:25:29,840
for the um

628
00:25:30,640 --> 00:25:43,840
the demux portion of the endpoint id

629
00:25:35,520 --> 00:25:43,840
beginning uh

630
00:26:08,840 --> 00:26:11,840
so

631
00:26:22,840 --> 00:26:25,840
uh

632
00:27:04,840 --> 00:27:07,840
so

633
00:27:19,039 --> 00:27:22,158
uh this is another one where there was

634
00:27:20,880 --> 00:27:24,240
some uh

635
00:27:22,159 --> 00:27:26,159
discussion on the mailing list uh and

636
00:27:24,240 --> 00:27:29,200
the the core question here is

637
00:27:26,159 --> 00:27:29,919
and this has come up in a number of of

638
00:27:29,200 --> 00:27:33,520
contexts

639
00:27:29,919 --> 00:27:36,080
uh bona protocol time values

640
00:27:33,520 --> 00:27:38,080
such as creation time lifetime bundle

641
00:27:36,080 --> 00:27:41,439
age

642
00:27:38,080 --> 00:27:43,678
has been denominated in seconds uh

643
00:27:41,440 --> 00:27:45,360
and there is has there's been this this

644
00:27:43,679 --> 00:27:46,559
objection that oh no it needs to be in

645
00:27:45,360 --> 00:27:50,399
milliseconds because

646
00:27:46,559 --> 00:27:54,399
for some purposes we need finer grained

647
00:27:50,399 --> 00:27:56,719
uh decision making on on the basis of

648
00:27:54,399 --> 00:27:56,719
time

649
00:27:58,159 --> 00:28:01,679
we considered several alternatives

650
00:28:00,559 --> 00:28:04,639
seconds

651
00:28:01,679 --> 00:28:05,919
nanoseconds microseconds milliseconds

652
00:28:04,640 --> 00:28:17,840
milliseconds seems

653
00:28:05,919 --> 00:28:17,840
to be

654
00:28:41,520 --> 00:28:46,000
um and how do we guarantee that it

655
00:28:44,480 --> 00:28:49,520
really is immutable when

656
00:28:46,000 --> 00:28:50,720
there is it when it's at least in theory

657
00:28:49,520 --> 00:28:54,000
possible to

658
00:28:50,720 --> 00:28:56,000
change um from one valid

659
00:28:54,000 --> 00:28:57,039
civil representation of time to another

660
00:28:56,000 --> 00:28:58,720
civil war

661
00:28:57,039 --> 00:29:01,360
representation of time that is equally

662
00:28:58,720 --> 00:29:03,679
valid but has a different number of

663
00:29:01,360 --> 00:29:03,678
bytes

664
00:29:05,679 --> 00:29:14,159
in draft 29

665
00:29:08,960 --> 00:29:17,279
i inserted text to the effect that

666
00:29:14,159 --> 00:29:20,480
all seabor representation all

667
00:29:17,279 --> 00:29:24,840
simple representation values in

668
00:29:20,480 --> 00:29:27,840
bundled protocol blocks needs to be in

669
00:29:24,840 --> 00:29:27,840
canonical

670
00:29:42,000 --> 00:29:45,679
so rick here again um

671
00:29:45,840 --> 00:29:49,600
what was the decision milli seconds or

672
00:29:52,840 --> 00:30:13,120
seconds okay

673
00:30:08,480 --> 00:30:16,480
and um it's it's a uh i believe a

674
00:30:13,120 --> 00:30:19,678
a small increase in uh um

675
00:30:16,480 --> 00:30:22,399
transmission overhead so i think it's i

676
00:30:19,679 --> 00:30:23,679
think the value outweighs the cost

677
00:30:22,399 --> 00:30:25,678
if i remember correctly from the

678
00:30:23,679 --> 00:30:28,000
discussion the reason people were keen

679
00:30:25,679 --> 00:30:31,039
on milliseconds was not so much for the

680
00:30:28,000 --> 00:30:34,480
delay tolerant aspect but for

681
00:30:31,039 --> 00:30:38,000
uh disruption tolerant aspects so

682
00:30:34,480 --> 00:30:41,039
you might have very fast uh networks

683
00:30:38,000 --> 00:30:41,679
which are constantly disrupted so in

684
00:30:41,039 --> 00:30:44,399
those

685
00:30:41,679 --> 00:30:46,399
fast transmission networks milliseconds

686
00:30:44,399 --> 00:30:48,879
make a lot of sense

687
00:30:46,399 --> 00:30:50,000
um as compared to you know the space use

688
00:30:48,880 --> 00:30:53,279
case where

689
00:30:50,000 --> 00:30:54,399
seconds is fine um i think that was the

690
00:30:53,279 --> 00:30:56,159
argument

691
00:30:54,399 --> 00:30:57,840
uh that's that's right it's it's

692
00:30:56,159 --> 00:30:58,480
particularly useful for low-earth

693
00:30:57,840 --> 00:31:03,039
orbiting

694
00:30:58,480 --> 00:31:05,440
uh satellite operations for example yeah

695
00:31:03,039 --> 00:31:07,679
uh just as a side note uh me techo has a

696
00:31:05,440 --> 00:31:10,640
queue if you if anyone has any comment

697
00:31:07,679 --> 00:31:11,120
um please jump to the queue now rather

698
00:31:10,640 --> 00:31:12,480
than

699
00:31:11,120 --> 00:31:14,399
waiting right until the end of the

700
00:31:12,480 --> 00:31:15,760
presentation i think it's worth

701
00:31:14,399 --> 00:31:18,158
because some of these questions are

702
00:31:15,760 --> 00:31:19,120
complex and there's a few outstanding

703
00:31:18,159 --> 00:31:21,039
questions so

704
00:31:19,120 --> 00:31:22,719
if you're hanging back to ask all your

705
00:31:21,039 --> 00:31:24,000
questions in a big rush i have no

706
00:31:22,720 --> 00:31:27,279
objection to stepping to the

707
00:31:24,000 --> 00:31:27,279
stepping on the queue now

708
00:31:29,760 --> 00:31:36,640
okay we can discuss this some more

709
00:31:33,919 --> 00:31:37,919
if has everyone has points to bring up

710
00:31:36,640 --> 00:31:41,679
but in the meantime i would

711
00:31:37,919 --> 00:31:41,679
propose we move on to the next slide

712
00:31:44,840 --> 00:31:51,199
uh how should we do this uh adam

713
00:31:47,840 --> 00:31:52,879
is is in the queue now um

714
00:31:51,200 --> 00:31:54,240
i went into the queue because i saw that

715
00:31:52,880 --> 00:31:57,840
there was some discussion

716
00:31:54,240 --> 00:31:59,279
in the uh the chat from i'm not watching

717
00:31:57,840 --> 00:32:01,918
the chat

718
00:31:59,279 --> 00:32:02,559
sorry so there was some discussion from

719
00:32:01,919 --> 00:32:05,919
stu

720
00:32:02,559 --> 00:32:08,639
on the dropping thing a little while ago

721
00:32:05,919 --> 00:32:08,960
that i added to the um to the cody but

722
00:32:08,640 --> 00:32:10,960
will

723
00:32:08,960 --> 00:32:12,480
asked a question right before you said

724
00:32:10,960 --> 00:32:13,840
something about the queue and i waited

725
00:32:12,480 --> 00:32:15,760
for him to hopefully get in the queue he

726
00:32:13,840 --> 00:32:18,158
didn't so i stepped in the queue

727
00:32:15,760 --> 00:32:19,519
so will if you don't mind i'll just uh

728
00:32:18,159 --> 00:32:21,760
vocalize your question

729
00:32:19,519 --> 00:32:24,640
was there a discussion of a variable

730
00:32:21,760 --> 00:32:24,640
denomination

731
00:32:26,840 --> 00:32:31,199
scheme

732
00:32:28,080 --> 00:32:34,240
uh right so um

733
00:32:31,200 --> 00:32:35,279
uh there there was some discussion on

734
00:32:34,240 --> 00:32:38,799
the mailing list

735
00:32:35,279 --> 00:32:42,480
of uh being able to

736
00:32:38,799 --> 00:32:45,360
uh uh vary the denomination of

737
00:32:42,480 --> 00:32:46,640
time values in the course of end to end

738
00:32:45,360 --> 00:32:50,639
transmission

739
00:32:46,640 --> 00:32:50,640
maybe changing from seconds to

740
00:32:54,840 --> 00:32:57,840
milliseconds

741
00:33:00,080 --> 00:33:06,080
um primary block uh immutability

742
00:33:03,360 --> 00:33:07,439
and so it uh was was not gonna be okay

743
00:33:06,080 --> 00:33:10,879
that is uh

744
00:33:07,440 --> 00:33:14,240
changing from seconds to milliseconds

745
00:33:10,880 --> 00:33:16,320
uh on route from the source to

746
00:33:14,240 --> 00:33:19,919
destination that's not going to be

747
00:33:16,320 --> 00:33:24,320
an okay option um

748
00:33:19,919 --> 00:33:28,399
uh i i would go a little further and for

749
00:33:24,320 --> 00:33:31,519
um for purposes of of simplicity

750
00:33:28,399 --> 00:33:39,840
i i i would endorse uh

751
00:33:31,519 --> 00:33:39,840
the idea that all times throughout the

752
00:33:51,919 --> 00:33:55,039
uh just a quick comment uh will on the

753
00:33:54,320 --> 00:33:56,320
chat said

754
00:33:55,039 --> 00:33:58,480
i'm sorry i'm wasting everyone's time

755
00:33:56,320 --> 00:34:00,158
you're not well that's the point of

756
00:33:58,480 --> 00:34:07,840
these things that there's no such thing

757
00:34:00,159 --> 00:34:07,840
as a stupid question

758
00:34:18,839 --> 00:34:21,839
uh

759
00:35:09,839 --> 00:35:15,359
um i'm just stepping in again

760
00:35:12,880 --> 00:35:17,920
i know because i know stu can actually

761
00:35:15,359 --> 00:35:20,078
talk he's i talked to him earlier

762
00:35:17,920 --> 00:35:21,760
does he want to step up and go to the

763
00:35:20,079 --> 00:35:26,000
mic to ask his questions

764
00:35:21,760 --> 00:35:27,040
on the drops of the bundles because he

765
00:35:26,000 --> 00:35:28,960
did ask a question

766
00:35:27,040 --> 00:35:30,800
there i don't know if we want to just

767
00:35:28,960 --> 00:35:33,599
backtrack back to that real fast

768
00:35:30,800 --> 00:35:34,480
or if sure that's fine stu do you want

769
00:35:33,599 --> 00:35:38,160
to step up

770
00:35:34,480 --> 00:35:38,160
and ask that question

771
00:35:39,119 --> 00:35:45,839
i think ed um answered it adequately

772
00:35:42,400 --> 00:35:45,839
in the chat window thank you

773
00:35:46,640 --> 00:35:59,839
okay so i'll flip back to the

774
00:35:50,320 --> 00:35:59,839
uh i've changed slides there we go so

775
00:36:08,320 --> 00:36:13,839
specification should be mandatory or

776
00:36:10,960 --> 00:36:13,839
conditional

777
00:36:24,839 --> 00:36:31,119
uh

778
00:36:27,839 --> 00:36:33,599
extension blocks where they're needed um

779
00:36:31,119 --> 00:36:35,119
and uh omit them where they're not

780
00:36:33,599 --> 00:36:40,079
needed so i i

781
00:36:35,119 --> 00:36:41,680
i'm personally opposed to make

782
00:36:40,079 --> 00:36:44,800
that are defined in the bps this

783
00:36:41,680 --> 00:36:48,480
specification mandatory in all bundles

784
00:36:44,800 --> 00:36:50,480
um they're uh sorry scott

785
00:36:48,480 --> 00:36:52,000
this is this is this is this is rick

786
00:36:50,480 --> 00:36:54,160
again sorry the mandatory

787
00:36:52,000 --> 00:36:55,440
question again this is mandatory to

788
00:36:54,160 --> 00:36:58,480
implement

789
00:36:55,440 --> 00:37:02,240
uh optional to use

790
00:36:58,480 --> 00:37:06,000
am i correct uh well uh

791
00:37:02,240 --> 00:37:07,759
uh though i think this is from a

792
00:37:06,000 --> 00:37:09,839
from a comment i think it may have been

793
00:37:07,760 --> 00:37:13,119
one of benjamin's comments

794
00:37:09,839 --> 00:37:16,240
that some of these extension blocks seem

795
00:37:13,119 --> 00:37:18,400
uh important enough that

796
00:37:16,240 --> 00:37:19,439
they ought to be mandatory in all

797
00:37:18,400 --> 00:37:22,800
bundles

798
00:37:19,440 --> 00:37:24,640
and i i would interpret that as meaning

799
00:37:22,800 --> 00:37:28,480
that they would be mandatory

800
00:37:24,640 --> 00:37:28,480
to use as well as mandatory to

801
00:37:34,720 --> 00:37:39,359
yes i do believe this was a

802
00:37:38,079 --> 00:37:41,839
question that was great for one of my

803
00:37:39,359 --> 00:37:42,319
comments and the intent i had in my

804
00:37:41,839 --> 00:37:46,160
comment

805
00:37:42,320 --> 00:37:49,520
was more along the lines of can we

806
00:37:46,160 --> 00:37:52,078
ensure that if that if i

807
00:37:49,520 --> 00:37:54,160
put this extension in i can be confident

808
00:37:52,079 --> 00:37:56,160
that the other end will understand it

809
00:37:54,160 --> 00:37:58,000
so that would be the sort of mandatory

810
00:37:56,160 --> 00:38:01,040
to implement but not mandatory to

811
00:37:58,000 --> 00:38:01,040
include in every bundle

812
00:38:02,839 --> 00:38:05,839
since

813
00:38:16,839 --> 00:38:19,839
so

814
00:39:05,200 --> 00:39:12,640
uh whether that's whether

815
00:39:08,240 --> 00:39:15,439
that ought to be moot because all

816
00:39:12,640 --> 00:39:17,040
nodes should uh understand and be able

817
00:39:15,440 --> 00:39:20,079
to process

818
00:39:17,040 --> 00:39:24,320
these uh these defined extension blocks

819
00:39:20,079 --> 00:39:24,320
is uh that's a valid question

820
00:39:26,839 --> 00:39:32,960
um uh rick here what i i get

821
00:39:30,240 --> 00:39:33,759
i get confused by the word extension

822
00:39:32,960 --> 00:39:37,920
because

823
00:39:33,760 --> 00:39:41,119
um for some protocols extension is

824
00:39:37,920 --> 00:39:45,040
is used to describe a mechanism

825
00:39:41,119 --> 00:39:47,599
that additional

826
00:39:45,040 --> 00:39:49,839
functionality possibly not described in

827
00:39:47,599 --> 00:39:53,040
the original specification

828
00:39:49,839 --> 00:39:54,799
can use so extending a protocol to add

829
00:39:53,040 --> 00:39:57,040
features that you might require for your

830
00:39:54,800 --> 00:40:00,400
enterprise or your deployment

831
00:39:57,040 --> 00:40:02,240
um as compared to uh

832
00:40:00,400 --> 00:40:04,160
where i think we use the word extension

833
00:40:02,240 --> 00:40:06,879
in bpbs to mean

834
00:40:04,160 --> 00:40:08,720
flexible extra blocks that are optional

835
00:40:06,880 --> 00:40:11,040
to have within a bundle

836
00:40:08,720 --> 00:40:13,040
and i wonder whether yes that

837
00:40:11,040 --> 00:40:15,759
terminology confuses people

838
00:40:13,040 --> 00:40:17,279
so traditionally an extension would be

839
00:40:15,760 --> 00:40:19,359
optional to implement

840
00:40:17,280 --> 00:40:21,119
i you you implement it if you support

841
00:40:19,359 --> 00:40:22,560
the extension

842
00:40:21,119 --> 00:40:25,280
and the extension would be specified in

843
00:40:22,560 --> 00:40:28,799
some way whereas

844
00:40:25,280 --> 00:40:30,800
a bit like ip header fields they are

845
00:40:28,800 --> 00:40:32,480
mandatory to understand and for and

846
00:40:30,800 --> 00:40:35,839
defined but

847
00:40:32,480 --> 00:40:39,520
optional to use if you

848
00:40:35,839 --> 00:40:42,880
understand my analogy and i wonder so

849
00:40:39,520 --> 00:40:43,520
i'm glancing back at uh section 4.3 in

850
00:40:42,880 --> 00:40:47,040
the spec

851
00:40:43,520 --> 00:40:49,599
um the the um

852
00:40:47,040 --> 00:40:50,560
language here is really silent on

853
00:40:49,599 --> 00:40:53,520
whether

854
00:40:50,560 --> 00:40:55,040
the weather implementation of support

855
00:40:53,520 --> 00:40:58,079
for these extension blocks is

856
00:40:55,040 --> 00:41:00,960
is mandatory uh it is clear

857
00:40:58,079 --> 00:41:00,960
that um

858
00:41:01,680 --> 00:41:04,879
that the the presence or absence of the

859
00:41:03,920 --> 00:41:09,200
blocks

860
00:41:04,880 --> 00:41:12,560
is optional subject to some constraints

861
00:41:09,200 --> 00:41:12,879
uh so i i i'm uh at the moment i think

862
00:41:12,560 --> 00:41:15,920
the

863
00:41:12,880 --> 00:41:18,640
the language is correct about

864
00:41:15,920 --> 00:41:20,720
the presence or absence of the blocks uh

865
00:41:18,640 --> 00:41:22,319
if we want to add some language that

866
00:41:20,720 --> 00:41:25,359
says that uh

867
00:41:22,319 --> 00:41:27,599
these extension blocks um uh

868
00:41:25,359 --> 00:41:28,400
must be implemented that that is the

869
00:41:27,599 --> 00:41:30,720
ability to

870
00:41:28,400 --> 00:41:31,839
handle these particular extension blocks

871
00:41:30,720 --> 00:41:34,640
is mandatory

872
00:41:31,839 --> 00:41:35,759
i think that's a perfectly reasonable uh

873
00:41:34,640 --> 00:41:39,440
thing to add to the

874
00:41:35,760 --> 00:41:39,440
to the start of 4.3

875
00:41:41,839 --> 00:41:46,640
yeah on the on the chat mark blanche

876
00:41:44,720 --> 00:41:48,078
correctly points out that

877
00:41:46,640 --> 00:41:49,920
given this is a very disconnected

878
00:41:48,079 --> 00:41:51,839
network protocol

879
00:41:49,920 --> 00:41:53,920
we can't have a negotiation protocol

880
00:41:51,839 --> 00:41:56,000
between the two endpoints to negotiate

881
00:41:53,920 --> 00:41:57,839
extensions and capabilities therefore we

882
00:41:56,000 --> 00:41:59,040
need to make extensions mandatory to

883
00:41:57,839 --> 00:42:00,640
implement

884
00:41:59,040 --> 00:42:02,240
but that could create an issue in the

885
00:42:00,640 --> 00:42:04,160
future as new extensions could then

886
00:42:02,240 --> 00:42:07,359
require implementations to become

887
00:42:04,160 --> 00:42:09,359
non-conformant in some way so

888
00:42:07,359 --> 00:42:11,520
i i agree with him on this there's

889
00:42:09,359 --> 00:42:14,640
there's a difference between

890
00:42:11,520 --> 00:42:17,359
future extension of bp bis

891
00:42:14,640 --> 00:42:17,680
to add capabilities that may not exist

892
00:42:17,359 --> 00:42:20,640
in

893
00:42:17,680 --> 00:42:21,200
existing implementations which is

894
00:42:20,640 --> 00:42:24,078
different

895
00:42:21,200 --> 00:42:26,078
from here are some extra blocks that may

896
00:42:24,079 --> 00:42:28,160
appear in your bundle

897
00:42:26,079 --> 00:42:30,560
but you must be able to handle them if

898
00:42:28,160 --> 00:42:32,640
you see them

899
00:42:30,560 --> 00:42:34,480
and i i think okay action for the

900
00:42:32,640 --> 00:42:36,400
working group on this

901
00:42:34,480 --> 00:42:37,760
please can people double check this

902
00:42:36,400 --> 00:42:41,200
section and

903
00:42:37,760 --> 00:42:43,119
ensure that it um

904
00:42:41,200 --> 00:42:44,319
meets your understanding of what's

905
00:42:43,119 --> 00:42:45,839
needed here

906
00:42:44,319 --> 00:42:48,160
uh i'll make a note of that and i'll

907
00:42:45,839 --> 00:42:50,880
i'll get that on the mailing list

908
00:42:48,160 --> 00:42:51,598
and adam's in the queue again go ahead

909
00:42:50,880 --> 00:42:54,560
adam

910
00:42:51,599 --> 00:42:55,839
yes so i agree with everything that's

911
00:42:54,560 --> 00:42:59,359
been said up to this point

912
00:42:55,839 --> 00:43:02,240
on i think i don't like to make

913
00:42:59,359 --> 00:43:03,839
terminology when we don't need to but

914
00:43:02,240 --> 00:43:08,000
you pointed out a good

915
00:43:03,839 --> 00:43:10,799
thing uh rick where the word extension

916
00:43:08,000 --> 00:43:11,200
means something extending the protocol

917
00:43:10,800 --> 00:43:13,359
and

918
00:43:11,200 --> 00:43:15,359
it's being used here as oh yeah it's

919
00:43:13,359 --> 00:43:16,640
kind of a flexible thing that may or may

920
00:43:15,359 --> 00:43:19,839
not appear in the

921
00:43:16,640 --> 00:43:21,118
in the bundle so the word extension i

922
00:43:19,839 --> 00:43:23,599
think is the problem

923
00:43:21,119 --> 00:43:27,040
maybe we change that word and this is a

924
00:43:23,599 --> 00:43:28,880
different word there's got to be a word

925
00:43:27,040 --> 00:43:31,440
somewhere that uses that

926
00:43:28,880 --> 00:43:32,880
describes exactly what is happening with

927
00:43:31,440 --> 00:43:36,319
these structures

928
00:43:32,880 --> 00:43:38,160
well what i'm saying i i think uh if if

929
00:43:36,319 --> 00:43:40,160
we wanted to do that i think we would

930
00:43:38,160 --> 00:43:41,279
add a term rather than replacing the

931
00:43:40,160 --> 00:43:44,480
term because

932
00:43:41,280 --> 00:43:46,079
there are it sounds like there are

933
00:43:44,480 --> 00:43:47,839
what we are currently calling extension

934
00:43:46,079 --> 00:43:50,400
blocks that are mandatory

935
00:43:47,839 --> 00:43:50,960
and mandatory to implement and then

936
00:43:50,400 --> 00:43:53,359
there are

937
00:43:50,960 --> 00:43:55,119
additional extension blocks that cannot

938
00:43:53,359 --> 00:43:56,720
be made mandatory to implement in this

939
00:43:55,119 --> 00:43:58,319
specification because nobody's defined

940
00:43:56,720 --> 00:43:59,919
them yet

941
00:43:58,319 --> 00:44:01,759
and i think we need to discriminate

942
00:43:59,920 --> 00:44:02,960
between the two and i think the best way

943
00:44:01,760 --> 00:44:06,800
to discriminate

944
00:44:02,960 --> 00:44:06,800
is to name them differently

945
00:44:06,960 --> 00:44:12,000
so well i i i would i would propose

946
00:44:10,000 --> 00:44:13,599
that we don't necessarily have to do

947
00:44:12,000 --> 00:44:15,040
that if we don't want to introduce

948
00:44:13,599 --> 00:44:17,359
additional terminology and i

949
00:44:15,040 --> 00:44:19,279
i actually i agree with adam that

950
00:44:17,359 --> 00:44:23,040
introducing additional terminology

951
00:44:19,280 --> 00:44:24,400
you know willy-nilly is is often a bad

952
00:44:23,040 --> 00:44:26,640
idea what we say

953
00:44:24,400 --> 00:44:28,240
currently is extension blocks are all

954
00:44:26,640 --> 00:44:31,359
blocks other than the primary

955
00:44:28,240 --> 00:44:35,118
payload blocks which is very clear uh

956
00:44:31,359 --> 00:44:38,160
we we can say in 4.3

957
00:44:35,119 --> 00:44:41,200
that those extension blocks which

958
00:44:38,160 --> 00:44:45,200
are defined

959
00:44:41,200 --> 00:44:45,200
in this specification

960
00:44:45,680 --> 00:44:50,078
implementation of support for those

961
00:44:47,680 --> 00:44:54,319
extension blocks is mandatory

962
00:44:50,079 --> 00:44:57,359
uh and and just leave it at that

963
00:44:54,319 --> 00:44:59,440
go ahead magnus yeah

964
00:44:57,359 --> 00:45:01,119
i i would support scott here i think

965
00:44:59,440 --> 00:45:04,560
that's the way of

966
00:45:01,119 --> 00:45:07,119
least risk of introducing other

967
00:45:04,560 --> 00:45:07,920
changes etc to rather explicitly name

968
00:45:07,119 --> 00:45:09,520
those blocks

969
00:45:07,920 --> 00:45:11,040
so we don't get because we are in the

970
00:45:09,520 --> 00:45:13,599
late stages and i would

971
00:45:11,040 --> 00:45:16,720
like to avoid having large sweeping

972
00:45:13,599 --> 00:45:16,720
changes in the document at this

973
00:45:16,839 --> 00:45:19,839
point

974
00:45:20,800 --> 00:45:27,520
okay so um i'm watching the

975
00:45:24,000 --> 00:45:28,880
clock here um ronald in the chat makes a

976
00:45:27,520 --> 00:45:30,640
very valid point which is

977
00:45:28,880 --> 00:45:32,079
extension block is a well-known term in

978
00:45:30,640 --> 00:45:35,200
this dtn

979
00:45:32,079 --> 00:45:38,319
uh in the dtn

980
00:45:35,200 --> 00:45:40,640
itf work so those were inside dtn do

981
00:45:38,319 --> 00:45:43,920
understand what an extension block is

982
00:45:40,640 --> 00:45:44,879
but i think for fresh readers to bp bis

983
00:45:43,920 --> 00:45:46,720
we need to make sure that that

984
00:45:44,880 --> 00:45:49,520
terminology is

985
00:45:46,720 --> 00:45:50,560
correctly defined and the rules for

986
00:45:49,520 --> 00:45:53,759
implementers is

987
00:45:50,560 --> 00:45:56,560
is there but we'll move on

988
00:45:53,760 --> 00:45:58,480
if you don't mind yes please switch back

989
00:45:56,560 --> 00:46:01,680
to the slides

990
00:45:58,480 --> 00:46:04,160
no clicked in the wrong window oh come

991
00:46:01,680 --> 00:46:05,839
on uh oh that's the last slide

992
00:46:04,160 --> 00:46:07,759
oh that's the last okay that's the last

993
00:46:05,839 --> 00:46:08,720
slide sorry i didn't put a final slide

994
00:46:07,760 --> 00:46:11,359
on

995
00:46:08,720 --> 00:46:11,359
laziness okay

996
00:46:12,160 --> 00:46:15,759
so uh you've overrun by an hour thank

997
00:46:14,960 --> 00:46:18,640
you

998
00:46:15,760 --> 00:46:18,640
go ahead magnus

999
00:46:21,760 --> 00:46:28,960
ah okay no

1000
00:46:25,200 --> 00:46:30,160
okay so um i think we have to take this

1001
00:46:28,960 --> 00:46:30,720
to the list because we've got a full

1002
00:46:30,160 --> 00:46:33,440
agenda

1003
00:46:30,720 --> 00:46:33,759
and i was happy to let that overrun but

1004
00:46:33,440 --> 00:46:36,960
uh

1005
00:46:33,760 --> 00:46:37,280
i'm looking at the clock okay so at this

1006
00:46:36,960 --> 00:46:39,680
point

1007
00:46:37,280 --> 00:46:40,720
we have one remaining residual question

1008
00:46:39,680 --> 00:46:44,000
which is this one

1009
00:46:40,720 --> 00:46:46,959
and uh the the proposed

1010
00:46:44,000 --> 00:46:47,680
cure for it being i think uh adding some

1011
00:46:46,960 --> 00:46:51,359
text in

1012
00:46:47,680 --> 00:46:55,040
a sentence in 4.3

1013
00:46:51,359 --> 00:46:57,839
and i would propose to leave

1014
00:46:55,040 --> 00:46:57,839
it at that

1015
00:46:58,319 --> 00:47:00,640
okay

1016
00:47:02,640 --> 00:47:08,960
um yeah if if you want to

1017
00:47:06,640 --> 00:47:10,400
propose that on the list scott and and

1018
00:47:08,960 --> 00:47:12,800
just make sure we've got

1019
00:47:10,400 --> 00:47:14,319
um agreement from the working group on

1020
00:47:12,800 --> 00:47:17,040
that that would be great

1021
00:47:14,319 --> 00:47:18,000
i'll do that and i will now mute myself

1022
00:47:17,040 --> 00:47:21,200
thank you very much

1023
00:47:18,000 --> 00:47:23,599
um so next we have i'm

1024
00:47:21,200 --> 00:47:25,118
juggling through slides it's bpc so

1025
00:47:23,599 --> 00:47:26,640
you're jumping through the slides rick

1026
00:47:25,119 --> 00:47:30,160
i'm just gonna say one thing

1027
00:47:26,640 --> 00:47:31,598
sure um during that little conversation

1028
00:47:30,160 --> 00:47:34,319
we just had there because i

1029
00:47:31,599 --> 00:47:35,280
got involved speaking i did miss a

1030
00:47:34,319 --> 00:47:38,240
couple

1031
00:47:35,280 --> 00:47:40,079
bits of it if you can cat if people can

1032
00:47:38,240 --> 00:47:43,279
capture that into the kodi that would be

1033
00:47:40,079 --> 00:47:44,960
wonderful because i did miss bits and

1034
00:47:43,280 --> 00:47:47,839
pieces of that because

1035
00:47:44,960 --> 00:47:49,119
i was speaking and it was hard to switch

1036
00:47:47,839 --> 00:47:52,799
back and forth

1037
00:47:49,119 --> 00:47:57,200
just so everyone is aware thanks adam

1038
00:47:52,800 --> 00:47:57,200
yeah it's a good good point um

1039
00:47:57,280 --> 00:48:02,480
what are we on bp sec updates i think

1040
00:48:00,160 --> 00:48:06,399
this is the right slide

1041
00:48:02,480 --> 00:48:07,200
so probably me echo is i can't see my

1042
00:48:06,400 --> 00:48:10,559
slides

1043
00:48:07,200 --> 00:48:12,078
and see oh no speedpiece yeah

1044
00:48:10,559 --> 00:48:14,559
i can't see my slides and meet echo at

1045
00:48:12,079 --> 00:48:16,079
the same time which is confusing

1046
00:48:14,559 --> 00:48:21,839
yeah i think you're showing the the

1047
00:48:16,079 --> 00:48:21,839
security context but yeah

1048
00:48:26,720 --> 00:48:32,720
can you all hear me okay yes we can

1049
00:48:29,920 --> 00:48:32,720
think excellent

1050
00:48:33,040 --> 00:48:39,920
what i ah oh this is the

1051
00:48:37,680 --> 00:48:39,919
right

1052
00:48:44,319 --> 00:48:50,880
these are the right slides

1053
00:48:47,440 --> 00:48:53,680
yeah okay cool all right

1054
00:48:50,880 --> 00:48:54,319
um well let's uh go ahead and jump into

1055
00:48:53,680 --> 00:48:58,000
it here

1056
00:48:54,319 --> 00:49:01,119
um so really just a quick overview

1057
00:48:58,000 --> 00:49:03,359
of where we're at with bp sec um

1058
00:49:01,119 --> 00:49:04,800
we have one outstanding discuss item

1059
00:49:03,359 --> 00:49:08,240
that is teed up

1060
00:49:04,800 --> 00:49:10,319
primarily for discussion here today um

1061
00:49:08,240 --> 00:49:11,759
and that's regarding mandatory security

1062
00:49:10,319 --> 00:49:13,680
contexts

1063
00:49:11,760 --> 00:49:15,839
and at this point we believe that to be

1064
00:49:13,680 --> 00:49:18,078
addressed with the current version of bp

1065
00:49:15,839 --> 00:49:23,119
sec which is version 24.

1066
00:49:18,079 --> 00:49:26,319
um so if you flip over to the next slide

1067
00:49:23,119 --> 00:49:29,200
is that yeah it is doing it yeah

1068
00:49:26,319 --> 00:49:29,680
perfect um so this is a an update from

1069
00:49:29,200 --> 00:49:33,520
what

1070
00:49:29,680 --> 00:49:35,440
ed presented at the last meeting at 108

1071
00:49:33,520 --> 00:49:36,880
i captured all of the questions that

1072
00:49:35,440 --> 00:49:39,520
questions that he

1073
00:49:36,880 --> 00:49:40,880
spoke to just highlighting some of the

1074
00:49:39,520 --> 00:49:42,160
updates made and

1075
00:49:40,880 --> 00:49:44,079
identifying whether or not there's some

1076
00:49:42,160 --> 00:49:47,759
functional changes between those between

1077
00:49:44,079 --> 00:49:48,480
22 and 24 so the bolded items there are

1078
00:49:47,760 --> 00:49:50,480
the ones that

1079
00:49:48,480 --> 00:49:53,200
i'm going to be discussing in the rest

1080
00:49:50,480 --> 00:49:53,200
of the slide deck

1081
00:49:53,359 --> 00:49:57,839
the items that are not bolded there are

1082
00:49:56,079 --> 00:49:58,480
obviously no changes at all no changes

1083
00:49:57,839 --> 00:49:59,920
made at all

1084
00:49:58,480 --> 00:50:02,319
so we left those alone and those won't

1085
00:49:59,920 --> 00:50:05,040
be discussed here

1086
00:50:02,319 --> 00:50:06,160
so with that we'll jump into the the

1087
00:50:05,040 --> 00:50:09,119
first topic there

1088
00:50:06,160 --> 00:50:10,799
which is uh mandatory to implement

1089
00:50:09,119 --> 00:50:13,839
security contexts

1090
00:50:10,800 --> 00:50:13,839
so the next slide there

1091
00:50:19,359 --> 00:50:25,680
so the perfect

1092
00:50:22,480 --> 00:50:27,440
um so uh should there be one security

1093
00:50:25,680 --> 00:50:28,480
context that's considered mandatory to

1094
00:50:27,440 --> 00:50:32,079
implement

1095
00:50:28,480 --> 00:50:34,960
uh in for all bpsec implementations

1096
00:50:32,079 --> 00:50:36,960
previously there was not there was no

1097
00:50:34,960 --> 00:50:39,119
mandated security context

1098
00:50:36,960 --> 00:50:40,079
however based on a previous discussion

1099
00:50:39,119 --> 00:50:43,119
and discussion on the mailing

1100
00:50:40,079 --> 00:50:46,480
list the current version we've

1101
00:50:43,119 --> 00:50:48,559
put in an update there to mandate that

1102
00:50:46,480 --> 00:50:50,559
mandate support at a minimum for the

1103
00:50:48,559 --> 00:50:51,920
default security contexts

1104
00:50:50,559 --> 00:50:53,920
which is going to be discussed in the

1105
00:50:51,920 --> 00:50:56,160
next presentation that we have teed up

1106
00:50:53,920 --> 00:50:56,160
here

1107
00:50:56,240 --> 00:51:02,399
and it also maintains the requirement

1108
00:51:00,160 --> 00:51:04,160
that was in 24 maintains a requirement

1109
00:51:02,400 --> 00:51:06,880
that was in 22

1110
00:51:04,160 --> 00:51:08,078
that implementations must support

1111
00:51:06,880 --> 00:51:09,280
security contexts

1112
00:51:08,079 --> 00:51:10,880
within the networks that they're

1113
00:51:09,280 --> 00:51:11,839
operating so that's above and beyond

1114
00:51:10,880 --> 00:51:14,240
minimum

1115
00:51:11,839 --> 00:51:15,040
should they exist to make sure that all

1116
00:51:14,240 --> 00:51:17,919
nodes and all

1117
00:51:15,040 --> 00:51:20,079
all nodes in the network are able to uh

1118
00:51:17,920 --> 00:51:23,680
understand and comprehend and operate

1119
00:51:20,079 --> 00:51:25,839
with those security contexts

1120
00:51:23,680 --> 00:51:29,759
so with that i'll take a pause here and

1121
00:51:25,839 --> 00:51:29,759
open up for any discussion or questions

1122
00:51:34,640 --> 00:51:37,920
i would just uh put in the comment that

1123
00:51:37,040 --> 00:51:41,119
i think this

1124
00:51:37,920 --> 00:51:44,319
this text uh here was uh

1125
00:51:41,119 --> 00:51:44,720
drafted by ran atkinson on the mailing

1126
00:51:44,319 --> 00:51:48,640
list

1127
00:51:44,720 --> 00:51:51,200
uh and brought in uh based on uh what he

1128
00:51:48,640 --> 00:51:54,558
felt was a parallel construction from

1129
00:51:51,200 --> 00:51:54,558
some of his other security work

1130
00:51:56,319 --> 00:52:01,839
yes thanks ed can i add a thank you to

1131
00:52:00,079 --> 00:52:02,319
ran who's been really supportive on this

1132
00:52:01,839 --> 00:52:03,680
and and

1133
00:52:02,319 --> 00:52:06,558
actually really helpful with some of

1134
00:52:03,680 --> 00:52:08,558
this um security terminology work so

1135
00:52:06,559 --> 00:52:11,760
if if you're dialed in rand thank you

1136
00:52:08,559 --> 00:52:11,760
for that really appreciate it

1137
00:52:14,400 --> 00:52:19,839
okay nothing further next slide please

1138
00:52:20,000 --> 00:52:25,520
all right thank you um so one of the

1139
00:52:23,599 --> 00:52:27,359
uh remaining or one of the open

1140
00:52:25,520 --> 00:52:29,119
questions that was previously discussed

1141
00:52:27,359 --> 00:52:31,200
was uh whether or not we would be

1142
00:52:29,119 --> 00:52:34,720
allowing nested signatures

1143
00:52:31,200 --> 00:52:37,200
and having um uh

1144
00:52:34,720 --> 00:52:39,200
having multiple signatures nested within

1145
00:52:37,200 --> 00:52:41,439
uh

1146
00:52:39,200 --> 00:52:42,720
within a security operation um so there

1147
00:52:41,440 --> 00:52:44,079
were some

1148
00:52:42,720 --> 00:52:46,319
there were no functional changes that

1149
00:52:44,079 --> 00:52:49,440
were that we made since 22.

1150
00:52:46,319 --> 00:52:52,079
um bpsec 24 adds a rec

1151
00:52:49,440 --> 00:52:52,880
adds that this capability should be

1152
00:52:52,079 --> 00:52:55,680
implemented

1153
00:52:52,880 --> 00:52:57,760
through a custom security context and or

1154
00:52:55,680 --> 00:52:59,919
custom security blocks

1155
00:52:57,760 --> 00:53:01,359
uh so you know kind of putting that

1156
00:52:59,920 --> 00:53:02,720
outside of the main line implementation

1157
00:53:01,359 --> 00:53:05,759
and specification here in bp

1158
00:53:02,720 --> 00:53:08,959
sec um and but allowing the flexibility

1159
00:53:05,760 --> 00:53:08,960
should those needs arise

1160
00:53:10,240 --> 00:53:13,279
i can i can speak to that also uh for a

1161
00:53:12,400 --> 00:53:17,119
moment that we

1162
00:53:13,280 --> 00:53:19,839
we were getting questions uh related to

1163
00:53:17,119 --> 00:53:21,119
uh the idea that if a bundle was going

1164
00:53:19,839 --> 00:53:24,000
through a network

1165
00:53:21,119 --> 00:53:24,559
and every node in the network wanted to

1166
00:53:24,000 --> 00:53:27,520
provide

1167
00:53:24,559 --> 00:53:29,040
its own signature over a particular

1168
00:53:27,520 --> 00:53:31,920
security target

1169
00:53:29,040 --> 00:53:33,279
what do you do in that case if you have

1170
00:53:31,920 --> 00:53:35,760
many many dibs

1171
00:53:33,280 --> 00:53:37,680
all pointing to the same security target

1172
00:53:35,760 --> 00:53:39,839
that's not allowed in dp sac and the

1173
00:53:37,680 --> 00:53:41,598
reason it's not allowed in vpsa

1174
00:53:39,839 --> 00:53:42,880
is because it becomes a nightmare for

1175
00:53:41,599 --> 00:53:45,440
verification

1176
00:53:42,880 --> 00:53:46,160
uh afterwards and and should not be

1177
00:53:45,440 --> 00:53:48,079
allowed

1178
00:53:46,160 --> 00:53:49,359
and so we made it clear here that if

1179
00:53:48,079 --> 00:53:52,240
there is some

1180
00:53:49,359 --> 00:53:54,000
uh i'll use the term madness that needs

1181
00:53:52,240 --> 00:53:56,160
to be done

1182
00:53:54,000 --> 00:53:57,839
then the behavior of it really should

1183
00:53:56,160 --> 00:54:00,640
just be encapsulated

1184
00:53:57,839 --> 00:54:02,480
inside of a single security context

1185
00:54:00,640 --> 00:54:04,879
where they allow multiple security

1186
00:54:02,480 --> 00:54:07,680
results to be added if they needed to

1187
00:54:04,880 --> 00:54:08,480
to that single bid that would exist to

1188
00:54:07,680 --> 00:54:11,598
capture

1189
00:54:08,480 --> 00:54:14,720
uh those results but but otherwise uh

1190
00:54:11,599 --> 00:54:17,200
one it's a bad idea and two bp sec

1191
00:54:14,720 --> 00:54:19,520
is not going to support it out of the

1192
00:54:17,200 --> 00:54:19,520
box

1193
00:54:19,599 --> 00:54:22,800
ed adding adding a following comment so

1194
00:54:22,480 --> 00:54:25,200
in

1195
00:54:22,800 --> 00:54:27,040
in the multi-signature scenario or the

1196
00:54:25,200 --> 00:54:29,520
multiple verification scenario

1197
00:54:27,040 --> 00:54:31,279
the assumption is that in the definition

1198
00:54:29,520 --> 00:54:33,920
of the security context

1199
00:54:31,280 --> 00:54:35,680
that does this operation the the

1200
00:54:33,920 --> 00:54:37,200
verification methods and all the

1201
00:54:35,680 --> 00:54:39,040
problems associated with it will of

1202
00:54:37,200 --> 00:54:42,480
course be solved in that

1203
00:54:39,040 --> 00:54:44,480
specification therefore avoiding bp sec

1204
00:54:42,480 --> 00:54:46,160
having to go down that rabbit hole

1205
00:54:44,480 --> 00:54:48,160
yes and and i think what what kem will

1206
00:54:46,160 --> 00:54:49,520
show in the next slide uh in the next

1207
00:54:48,160 --> 00:54:51,920
presentation

1208
00:54:49,520 --> 00:54:53,680
is that security context can have

1209
00:54:51,920 --> 00:54:57,680
processing behavior

1210
00:54:53,680 --> 00:54:57,680
as part of the definition of the context

1211
00:55:01,440 --> 00:55:04,839
all right um so if there's nothing

1212
00:55:02,799 --> 00:55:07,200
further let's uh go to the next slide

1213
00:55:04,839 --> 00:55:10,960
please thank you

1214
00:55:07,200 --> 00:55:14,078
um so the the topic here for discussion

1215
00:55:10,960 --> 00:55:15,760
uh was somewhat similarly considering

1216
00:55:14,079 --> 00:55:17,359
uh whether or not we should be

1217
00:55:15,760 --> 00:55:18,960
considering signature encryption over

1218
00:55:17,359 --> 00:55:22,240
multiple blocks

1219
00:55:18,960 --> 00:55:24,880
again taking the same path here and

1220
00:55:22,240 --> 00:55:25,759
making no functional change from 22 into

1221
00:55:24,880 --> 00:55:28,480
24

1222
00:55:25,760 --> 00:55:30,319
and instead adding language to recommend

1223
00:55:28,480 --> 00:55:32,960
implementation through a custom

1224
00:55:30,319 --> 00:55:34,799
security context uh you know staying

1225
00:55:32,960 --> 00:55:35,359
with the the design paradigm that we

1226
00:55:34,799 --> 00:55:38,160
want

1227
00:55:35,359 --> 00:55:39,359
you know we want that madness as ed ed

1228
00:55:38,160 --> 00:55:40,558
says to be

1229
00:55:39,359 --> 00:55:43,359
kind of outside of the mainline

1230
00:55:40,559 --> 00:55:46,720
implementation and again i've got the uh

1231
00:55:43,359 --> 00:55:49,040
the text from the uh from 24 there

1232
00:55:46,720 --> 00:55:52,720
for uh specifically referring to the bib

1233
00:55:49,040 --> 00:55:52,720
pieces but it's it's similar for both

1234
00:55:55,839 --> 00:56:00,558
i must admit i'm a huge fan of reducing

1235
00:55:58,559 --> 00:56:04,960
potential madness opportunities

1236
00:56:00,559 --> 00:56:04,960
so i in general support this

1237
00:56:06,240 --> 00:56:09,040
i think actually one of one of the

1238
00:56:07,440 --> 00:56:11,280
legitimate criticisms of some of the

1239
00:56:09,040 --> 00:56:14,319
early bp sec drafts was

1240
00:56:11,280 --> 00:56:16,319
it was so flexible that it was

1241
00:56:14,319 --> 00:56:17,839
entirely conceivable to tie yourself in

1242
00:56:16,319 --> 00:56:20,640
knots and

1243
00:56:17,839 --> 00:56:21,520
from an implementer perspective it looks

1244
00:56:20,640 --> 00:56:24,720
like a

1245
00:56:21,520 --> 00:56:26,960
um such a tough target

1246
00:56:24,720 --> 00:56:28,640
to to try and get your implementation

1247
00:56:26,960 --> 00:56:31,040
correct because of such

1248
00:56:28,640 --> 00:56:32,799
options i'm a huge fan of security

1249
00:56:31,040 --> 00:56:35,119
context i think they solve a lot of this

1250
00:56:32,799 --> 00:56:35,119
problem

1251
00:56:36,160 --> 00:56:39,920
okay uh if there's nothing nothing

1252
00:56:38,720 --> 00:56:43,279
further

1253
00:56:39,920 --> 00:56:46,400
uh next uh next slide there okay um

1254
00:56:43,280 --> 00:56:49,760
so this uh this topic here was uh

1255
00:56:46,400 --> 00:56:53,680
uh asking you know proposing that we

1256
00:56:49,760 --> 00:56:55,280
add uh bundle protocol reason codes um

1257
00:56:53,680 --> 00:56:56,799
again because there's there's new

1258
00:56:55,280 --> 00:56:59,839
reasons that a bundle might

1259
00:56:56,799 --> 00:57:00,680
or a a node might discard a bundle um so

1260
00:56:59,839 --> 00:57:03,920
within

1261
00:57:00,680 --> 00:57:08,240
bpsec24 uh there are five new

1262
00:57:03,920 --> 00:57:11,359
reason codes that are added um and uh

1263
00:57:08,240 --> 00:57:12,399
and recommends that those are allo those

1264
00:57:11,359 --> 00:57:15,520
reason codes

1265
00:57:12,400 --> 00:57:17,599
be allocated within the

1266
00:57:15,520 --> 00:57:20,480
uh existing bundle status report reason

1267
00:57:17,599 --> 00:57:20,480
codes registry

1268
00:57:25,119 --> 00:57:28,240
so if there's nothing further we'll go

1269
00:57:26,319 --> 00:57:30,480
on to what i believe is the last slide

1270
00:57:28,240 --> 00:57:30,479
here

1271
00:57:31,119 --> 00:57:37,760
and uh in a similar vein there

1272
00:57:35,280 --> 00:57:39,359
um should be set should bp sec be

1273
00:57:37,760 --> 00:57:42,079
reserving uh

1274
00:57:39,359 --> 00:57:43,440
some security context per uh parameter

1275
00:57:42,079 --> 00:57:46,960
and result ids to pro

1276
00:57:43,440 --> 00:57:50,319
promote con commonality um

1277
00:57:46,960 --> 00:57:52,000
they're the change in mvp 24

1278
00:57:50,319 --> 00:57:54,558
is to set negative values as reserved

1279
00:57:52,000 --> 00:57:56,720
for local and on-site specific use

1280
00:57:54,559 --> 00:57:58,079
within the security context identifier

1281
00:57:56,720 --> 00:58:00,240
registry

1282
00:57:58,079 --> 00:58:02,559
uh so again this the only change here is

1283
00:58:00,240 --> 00:58:05,040
is adding those negative values as being

1284
00:58:02,559 --> 00:58:05,040
reserved

1285
00:58:05,520 --> 00:58:10,079
so i had a two two quick comments on

1286
00:58:07,920 --> 00:58:12,880
that number one there's actually a typo

1287
00:58:10,079 --> 00:58:14,960
uh in bp stack where this registry uh is

1288
00:58:12,880 --> 00:58:18,160
defined as an unsigned integer

1289
00:58:14,960 --> 00:58:19,040
uh meaning and zero uh are right back to

1290
00:58:18,160 --> 00:58:21,598
madness

1291
00:58:19,040 --> 00:58:23,359
but the um so presumably we would change

1292
00:58:21,599 --> 00:58:25,599
that to a signed value

1293
00:58:23,359 --> 00:58:26,400
uh and then this this particular uh

1294
00:58:25,599 --> 00:58:29,839
suggestion

1295
00:58:26,400 --> 00:58:32,720
um came from uh benjamin

1296
00:58:29,839 --> 00:58:34,160
and uh kaduk and so if if there were any

1297
00:58:32,720 --> 00:58:36,078
other discussions or or

1298
00:58:34,160 --> 00:58:38,240
areas where that had been useful or not

1299
00:58:36,079 --> 00:58:41,520
it certainly seems reasonable to me

1300
00:58:38,240 --> 00:58:41,520
and would be happy to include it

1301
00:58:44,079 --> 00:58:50,079
ricky my my only comment would be this

1302
00:58:47,040 --> 00:58:53,839
doesn't seem to follow the pattern

1303
00:58:50,079 --> 00:58:57,359
of registered identifiers in bpbs

1304
00:58:53,839 --> 00:58:58,319
where small values are specification

1305
00:58:57,359 --> 00:59:01,759
required

1306
00:58:58,319 --> 00:59:05,759
and larger values are

1307
00:59:01,760 --> 00:59:08,160
private use i do understand that

1308
00:59:05,760 --> 00:59:09,920
this is uh that the local site specific

1309
00:59:08,160 --> 00:59:13,279
use cases are

1310
00:59:09,920 --> 00:59:16,000
not so much experiments which is

1311
00:59:13,280 --> 00:59:19,520
commonly where private use reserved

1312
00:59:16,000 --> 00:59:22,160
flags are used it they they could be

1313
00:59:19,520 --> 00:59:23,359
production grade used in anger hence

1314
00:59:22,160 --> 00:59:26,480
keeping the bit count

1315
00:59:23,359 --> 00:59:28,558
low has some advantage i wonder what

1316
00:59:26,480 --> 00:59:30,160
other people think

1317
00:59:28,559 --> 00:59:32,160
it's just a comment about using a

1318
00:59:30,160 --> 00:59:35,040
negative value which seems unusual but

1319
00:59:32,160 --> 00:59:35,040
i can see reasons

1320
00:59:40,400 --> 00:59:43,119
perhaps that's just me

1321
00:59:43,440 --> 00:59:47,200
so i i know that that i i have no strong

1322
00:59:46,240 --> 00:59:50,799
opinion

1323
00:59:47,200 --> 00:59:51,598
on it uh is there instead uh a value

1324
00:59:50,799 --> 00:59:53,680
saying

1325
00:59:51,599 --> 00:59:55,440
something to say you know the first 10

1326
00:59:53,680 --> 00:59:58,480
values or the first 20 values

1327
00:59:55,440 --> 01:00:01,440
instead uh are reserved uh

1328
00:59:58,480 --> 01:00:04,000
for for local use i i see brian up in

1329
01:00:01,440 --> 01:00:04,000
the queue now

1330
01:00:09,520 --> 01:00:13,520
that's what it's worth the investigation

1331
01:00:12,160 --> 01:00:15,920
i've been doing into

1332
01:00:13,520 --> 01:00:17,200
cosi and some other uses of sibor for

1333
01:00:15,920 --> 01:00:19,920
this kind of thing

1334
01:00:17,200 --> 01:00:20,480
does use positive and negative values so

1335
01:00:19,920 --> 01:00:23,599
okay

1336
01:00:20,480 --> 01:00:26,799
what you're talking about fine in which

1337
01:00:23,599 --> 01:00:26,799
yeah that's fine

1338
01:00:27,520 --> 01:00:31,440
i can see some benefits so yeah okay

1339
01:00:32,160 --> 01:00:35,598
i was the point of my question was

1340
01:00:34,000 --> 01:00:37,920
trying to avoid

1341
01:00:35,599 --> 01:00:40,160
getting all the way to ayana assignment

1342
01:00:37,920 --> 01:00:41,839
and someone in iana saying

1343
01:00:40,160 --> 01:00:43,200
this isn't the way we usually do things

1344
01:00:41,839 --> 01:00:46,558
can you go back and change it

1345
01:00:43,200 --> 01:00:47,200
i so as long as there's there's prior

1346
01:00:46,559 --> 01:00:50,240
art

1347
01:00:47,200 --> 01:00:50,240
let's let's stick with it

1348
01:00:52,240 --> 01:00:59,520
next slide okay and that is that should

1349
01:00:55,839 --> 01:01:01,680
yeah thank you ken i will roll

1350
01:00:59,520 --> 01:01:03,280
straight into your next presentation

1351
01:01:01,680 --> 01:01:06,480
because it

1352
01:01:03,280 --> 01:01:11,839
follows directly from there

1353
01:01:06,480 --> 01:01:11,839
perfect thank you

1354
01:01:12,799 --> 01:01:19,680
and find the other one now which is

1355
01:01:16,640 --> 01:01:21,920
why has it moved all my tabs around

1356
01:01:19,680 --> 01:01:25,839
is this is the right one so you titled

1357
01:01:21,920 --> 01:01:25,839
them both the same

1358
01:01:26,799 --> 01:01:32,880
yes uh but yep you've got it here so

1359
01:01:30,720 --> 01:01:34,959
uh again we'll go ahead and jump into

1360
01:01:32,880 --> 01:01:35,680
this one uh so here we're talking about

1361
01:01:34,960 --> 01:01:38,400
the uh

1362
01:01:35,680 --> 01:01:41,118
updates the default security context the

1363
01:01:38,400 --> 01:01:42,799
as the companion document to bp sec

1364
01:01:41,119 --> 01:01:45,680
so if you jump into the the summary

1365
01:01:42,799 --> 01:01:45,680
slide next please

1366
01:01:49,200 --> 01:01:54,240
uh so the you know the the takeaway

1367
01:01:52,880 --> 01:01:56,079
and kind of what to be looking for in

1368
01:01:54,240 --> 01:01:59,118
this presentation um

1369
01:01:56,079 --> 01:02:03,039
is in the update that ed made from

1370
01:01:59,119 --> 01:02:05,920
uh the dash 01 to dash 02

1371
01:02:03,039 --> 01:02:06,960
um there's a lot of additions to uh

1372
01:02:05,920 --> 01:02:09,359
provide

1373
01:02:06,960 --> 01:02:11,119
better more flexibility and and more

1374
01:02:09,359 --> 01:02:13,359
specificity

1375
01:02:11,119 --> 01:02:14,799
in the security context and leaves it

1376
01:02:13,359 --> 01:02:16,960
leaves a little bit less up to the

1377
01:02:14,799 --> 01:02:20,480
imagination for the implementer

1378
01:02:16,960 --> 01:02:22,640
um so you know it adds uh detail to the

1379
01:02:20,480 --> 01:02:25,680
security context that already exists

1380
01:02:22,640 --> 01:02:29,598
so that's the the hmac and sha-2 bib

1381
01:02:25,680 --> 01:02:32,799
uh as well as the aes gcm

1382
01:02:29,599 --> 01:02:36,160
uh bcb security context

1383
01:02:32,799 --> 01:02:40,000
um and as a a reminder the um

1384
01:02:36,160 --> 01:02:43,598
for the the aes gcm bcb that provides

1385
01:02:40,000 --> 01:02:44,480
a uh integrity uh mechanism as well as a

1386
01:02:43,599 --> 01:02:48,400
encryption

1387
01:02:44,480 --> 01:02:51,520
uh and decryption mechanism and so in

1388
01:02:48,400 --> 01:02:53,680
in each of the security contexts

1389
01:02:51,520 --> 01:02:55,520
the following is the following are are

1390
01:02:53,680 --> 01:02:57,440
added so support for multiple key

1391
01:02:55,520 --> 01:03:00,319
lengths

1392
01:02:57,440 --> 01:03:01,200
definition of a security contact scope

1393
01:03:00,319 --> 01:03:02,880
to identify

1394
01:03:01,200 --> 01:03:05,240
what the inputs are to the the

1395
01:03:02,880 --> 01:03:07,280
operations

1396
01:03:05,240 --> 01:03:09,598
canonicalization algorithms for the

1397
01:03:07,280 --> 01:03:11,520
inputs to help specify the exact order

1398
01:03:09,599 --> 01:03:15,119
in which those are processed

1399
01:03:11,520 --> 01:03:17,440
and then finally updated security

1400
01:03:15,119 --> 01:03:20,400
context parameters that are added into

1401
01:03:17,440 --> 01:03:22,799
uh to accommodate these new features

1402
01:03:20,400 --> 01:03:24,559
so with that um we'll step through each

1403
01:03:22,799 --> 01:03:26,640
of those things in the the following few

1404
01:03:24,559 --> 01:03:29,680
slides

1405
01:03:26,640 --> 01:03:31,520
uh some of the one of the big changes in

1406
01:03:29,680 --> 01:03:33,359
the security default security contacts

1407
01:03:31,520 --> 01:03:36,720
document was the addition

1408
01:03:33,359 --> 01:03:38,000
of the ability to specify multiple key

1409
01:03:36,720 --> 01:03:40,720
links for the

1410
01:03:38,000 --> 01:03:41,920
within these security contexts so

1411
01:03:40,720 --> 01:03:44,640
previously it was a

1412
01:03:41,920 --> 01:03:46,079
specified fixed value however adding in

1413
01:03:44,640 --> 01:03:50,319
that flexibility to support

1414
01:03:46,079 --> 01:03:51,839
multiple key links allows you to

1415
01:03:50,319 --> 01:03:53,359
streamline the definition of the context

1416
01:03:51,839 --> 01:03:55,200
yet add flexibility for the

1417
01:03:53,359 --> 01:03:59,359
implementations

1418
01:03:55,200 --> 01:04:02,319
so you can select uh 256 bit key or

1419
01:03:59,359 --> 01:04:02,640
all the way up to 512 for the uh for the

1420
01:04:02,319 --> 01:04:04,400
bib

1421
01:04:02,640 --> 01:04:05,839
security context and then for bcb

1422
01:04:04,400 --> 01:04:08,000
likewise uh

1423
01:04:05,839 --> 01:04:10,319
anything ranging from 128 bit all the

1424
01:04:08,000 --> 01:04:13,200
way up to 256 bit

1425
01:04:10,319 --> 01:04:14,558
and those follow directly from uh

1426
01:04:13,200 --> 01:04:17,439
definitions in rfc

1427
01:04:14,559 --> 01:04:17,440
8152

1428
01:04:18,799 --> 01:04:23,200
um so i'll take a quick pause here and

1429
01:04:22,319 --> 01:04:27,839
offer it up for any

1430
01:04:23,200 --> 01:04:27,839
any comments or thoughts

1431
01:04:31,680 --> 01:04:35,680
all right um if there's nothing uh

1432
01:04:34,559 --> 01:04:41,359
nothing further let's go ahead to the

1433
01:04:35,680 --> 01:04:44,480
next slide please

1434
01:04:41,359 --> 01:04:45,598
so another addition here was uh more

1435
01:04:44,480 --> 01:04:47,920
definition for this

1436
01:04:45,599 --> 01:04:49,039
uh the scope of each of the security

1437
01:04:47,920 --> 01:04:51,119
contexts

1438
01:04:49,039 --> 01:04:53,680
um so here the scope refers to the set

1439
01:04:51,119 --> 01:04:55,520
of information used as input

1440
01:04:53,680 --> 01:04:56,879
for each of those each of the security

1441
01:04:55,520 --> 01:05:00,319
operations

1442
01:04:56,880 --> 01:05:01,200
and um you know those are spelled out

1443
01:05:00,319 --> 01:05:03,038
here

1444
01:05:01,200 --> 01:05:04,558
uh i'm not going to go into the the

1445
01:05:03,039 --> 01:05:06,400
detail of those but

1446
01:05:04,559 --> 01:05:08,079
for each of the operation or each of the

1447
01:05:06,400 --> 01:05:08,880
security contacts defined in the default

1448
01:05:08,079 --> 01:05:12,799
security doc

1449
01:05:08,880 --> 01:05:14,960
uh context document uh the primary block

1450
01:05:12,799 --> 01:05:16,400
security target other fields including

1451
01:05:14,960 --> 01:05:16,720
some of the you know the content list

1452
01:05:16,400 --> 01:05:20,960
and

1453
01:05:16,720 --> 01:05:23,038
the text there as well as other fields

1454
01:05:20,960 --> 01:05:24,880
that are spelled out there these are all

1455
01:05:23,039 --> 01:05:27,359
uh selectable targets

1456
01:05:24,880 --> 01:05:29,280
that can be used specified in the scope

1457
01:05:27,359 --> 01:05:32,160
as the scope for the inputs

1458
01:05:29,280 --> 01:05:33,839
and again that allows more flexibility

1459
01:05:32,160 --> 01:05:35,440
when it comes to the implementation

1460
01:05:33,839 --> 01:05:37,200
and you know the actual employment of

1461
01:05:35,440 --> 01:05:40,079
these security contexts

1462
01:05:37,200 --> 01:05:41,680
and without requiring new security

1463
01:05:40,079 --> 01:05:45,200
context for every single possible

1464
01:05:41,680 --> 01:05:45,200
configuration that someone would want to

1465
01:05:49,119 --> 01:05:53,359
i use just had a point of clarification

1466
01:05:51,839 --> 01:05:56,240
to this that there were

1467
01:05:53,359 --> 01:05:56,720
uh this was based on uh on the mailing

1468
01:05:56,240 --> 01:05:58,479
list

1469
01:05:56,720 --> 01:06:00,959
an observation that brian seapost had

1470
01:05:58,480 --> 01:06:04,240
made about uh for example

1471
01:06:00,960 --> 01:06:06,319
how would you uh cryptographically bind

1472
01:06:04,240 --> 01:06:07,680
uh a block to the bundle in which it

1473
01:06:06,319 --> 01:06:08,960
should exist

1474
01:06:07,680 --> 01:06:10,960
certainly one thing that you could do

1475
01:06:08,960 --> 01:06:12,960
would be include the individual

1476
01:06:10,960 --> 01:06:16,480
signature of the primary block

1477
01:06:12,960 --> 01:06:18,640
as a secondary result with the bib

1478
01:06:16,480 --> 01:06:20,240
but then you're carrying two signatures

1479
01:06:18,640 --> 01:06:23,680
around and that seems to be

1480
01:06:20,240 --> 01:06:26,160
uh extra work and extra bytes and uh by

1481
01:06:23,680 --> 01:06:27,919
by including the primary block in the

1482
01:06:26,160 --> 01:06:29,359
set of information provided and

1483
01:06:27,920 --> 01:06:32,400
calculating a signal

1484
01:06:29,359 --> 01:06:32,960
a single signature over the normal

1485
01:06:32,400 --> 01:06:35,599
target

1486
01:06:32,960 --> 01:06:37,440
and perhaps these other optional targets

1487
01:06:35,599 --> 01:06:39,119
that will have the same function

1488
01:06:37,440 --> 01:06:47,760
of binding it all together and then

1489
01:06:39,119 --> 01:06:51,039
you're only carrying one signature

1490
01:06:47,760 --> 01:06:52,000
okay if there's uh nothing further let's

1491
01:06:51,039 --> 01:06:55,039
uh

1492
01:06:52,000 --> 01:06:55,039
go on to the next slide here

1493
01:06:55,599 --> 01:07:02,079
thank you um so here

1494
01:06:59,039 --> 01:07:03,839
uh this is you know

1495
01:07:02,079 --> 01:07:06,079
mostly included for included for

1496
01:07:03,839 --> 01:07:09,038
completeness this is obviously a

1497
01:07:06,079 --> 01:07:10,160
copy and paste from the document itself

1498
01:07:09,039 --> 01:07:11,640
um

1499
01:07:10,160 --> 01:07:14,078
again kind of talking to

1500
01:07:11,640 --> 01:07:17,598
canonicalization algorithms

1501
01:07:14,079 --> 01:07:20,160
so for the uh integrity

1502
01:07:17,599 --> 01:07:21,280
uh integrity uh protection security

1503
01:07:20,160 --> 01:07:23,839
context

1504
01:07:21,280 --> 01:07:24,799
um there's a canonicalization algorithm

1505
01:07:23,839 --> 01:07:28,480
defined

1506
01:07:24,799 --> 01:07:30,319
that appen in order to append the

1507
01:07:28,480 --> 01:07:32,640
to specify how the canonical forms the

1508
01:07:30,319 --> 01:07:35,038
components of the bundle

1509
01:07:32,640 --> 01:07:37,038
specified by the scope parameters are

1510
01:07:35,039 --> 01:07:39,119
appended and formed together as a as an

1511
01:07:37,039 --> 01:07:43,119
input to the security operation

1512
01:07:39,119 --> 01:07:45,280
um so you know there's a well-defined

1513
01:07:43,119 --> 01:07:46,480
uh operation you know processing flow

1514
01:07:45,280 --> 01:07:48,880
defined there

1515
01:07:46,480 --> 01:07:50,240
um so starting with an empty set of

1516
01:07:48,880 --> 01:07:53,760
length zero

1517
01:07:50,240 --> 01:07:54,959
um there's a bunch essentially a series

1518
01:07:53,760 --> 01:07:57,680
of

1519
01:07:54,960 --> 01:07:59,119
if statements and depending on what are

1520
01:07:57,680 --> 01:08:02,480
what is specified as the

1521
01:07:59,119 --> 01:08:04,079
the input scope um it take first of all

1522
01:08:02,480 --> 01:08:06,079
first it will take the canonical form of

1523
01:08:04,079 --> 01:08:10,640
the primary block um

1524
01:08:06,079 --> 01:08:14,400
append that to the uh to the ippt

1525
01:08:10,640 --> 01:08:16,719
next up it will look at the uh

1526
01:08:14,400 --> 01:08:18,319
security header flag you know uh let's

1527
01:08:16,719 --> 01:08:20,239
see

1528
01:08:18,319 --> 01:08:21,359
security header flags and and various

1529
01:08:20,238 --> 01:08:24,559
flags there

1530
01:08:21,359 --> 01:08:26,400
um let's

1531
01:08:24,560 --> 01:08:27,679
apologize for being a little bit lost in

1532
01:08:26,399 --> 01:08:30,559
the text here

1533
01:08:27,679 --> 01:08:32,000
but essentially it um you know go

1534
01:08:30,560 --> 01:08:34,480
through it goes through again

1535
01:08:32,000 --> 01:08:35,839
looks at all of the uh integrity scope

1536
01:08:34,479 --> 01:08:37,519
parameters specified

1537
01:08:35,839 --> 01:08:39,278
computes the canonicalized form of each

1538
01:08:37,520 --> 01:08:42,640
of those and sequentially appends those

1539
01:08:39,279 --> 01:08:42,640
in a well-defined order

1540
01:08:44,640 --> 01:08:48,799
so with that i'll take a pause if

1541
01:08:46,238 --> 01:08:53,839
there's any questions

1542
01:08:48,799 --> 01:08:53,839
comments thoughts

1543
01:08:55,920 --> 01:08:59,920
all right um so with that we'll uh flip

1544
01:08:58,238 --> 01:09:01,120
over to the next slide talking about the

1545
01:08:59,920 --> 01:09:03,799
uh

1546
01:09:01,120 --> 01:09:05,358
uh the bcb aes gcm input

1547
01:09:03,799 --> 01:09:08,158
canonicalizations

1548
01:09:05,359 --> 01:09:08,560
uh generally those those follow right

1549
01:09:08,158 --> 01:09:10,639
after

1550
01:09:08,560 --> 01:09:13,600
exactly what's defined for the uh for

1551
01:09:10,640 --> 01:09:18,640
the integrity protection mechanisms

1552
01:09:13,600 --> 01:09:21,759
um so looking for the the bcbas gcm

1553
01:09:18,640 --> 01:09:23,839
security context there is

1554
01:09:21,759 --> 01:09:25,520
a there's an encryption process a

1555
01:09:23,839 --> 01:09:30,559
decryption process

1556
01:09:25,520 --> 01:09:33,839
and then uh an integr and then a

1557
01:09:30,560 --> 01:09:35,600
integrity check that is that can be

1558
01:09:33,839 --> 01:09:38,880
performed on that as well

1559
01:09:35,600 --> 01:09:40,319
so for the uh

1560
01:09:38,880 --> 01:09:42,159
you know canonicalization of the plain

1561
01:09:40,319 --> 01:09:45,359
text used during the encryption

1562
01:09:42,158 --> 01:09:46,639
uh it's uh some language there

1563
01:09:45,359 --> 01:09:48,640
right from the uh right from the

1564
01:09:46,640 --> 01:09:52,480
document as well

1565
01:09:48,640 --> 01:09:55,040
to uh specify how that's how that's uh

1566
01:09:52,479 --> 01:09:56,799
presented as an input there likewise for

1567
01:09:55,040 --> 01:09:58,800
decryption the ciphertext is

1568
01:09:56,800 --> 01:10:01,040
is formatted in a similar way

1569
01:09:58,800 --> 01:10:02,640
well-defined way to be passed into that

1570
01:10:01,040 --> 01:10:05,600
that processing

1571
01:10:02,640 --> 01:10:06,880
and then for the integrity calculations

1572
01:10:05,600 --> 01:10:07,679
against the additional authenticated

1573
01:10:06,880 --> 01:10:10,640
data

1574
01:10:07,679 --> 01:10:11,440
uh that follows essentially just as

1575
01:10:10,640 --> 01:10:13,199
previously

1576
01:10:11,440 --> 01:10:17,839
shown in the uh in the integrity

1577
01:10:13,199 --> 01:10:17,839
protection mechanisms

1578
01:10:23,280 --> 01:10:27,840
okay so uh sorry rick um a thought

1579
01:10:25,920 --> 01:10:28,960
occurred to me while reading that which

1580
01:10:27,840 --> 01:10:31,760
was

1581
01:10:28,960 --> 01:10:33,199
why was this why is this text not in bp

1582
01:10:31,760 --> 01:10:35,840
sec itself

1583
01:10:33,199 --> 01:10:36,879
so uh but i think i know the answer to

1584
01:10:35,840 --> 01:10:39,199
that

1585
01:10:36,880 --> 01:10:41,440
uh so from my pers my perspective the

1586
01:10:39,199 --> 01:10:45,040
answer is that

1587
01:10:41,440 --> 01:10:46,480
by specifying it in the security context

1588
01:10:45,040 --> 01:10:48,800
it allows you to

1589
01:10:46,480 --> 01:10:50,639
introduce a new security context that

1590
01:10:48,800 --> 01:10:53,400
may be using the same

1591
01:10:50,640 --> 01:10:55,040
encryption primitives but a different

1592
01:10:53,400 --> 01:10:58,559
canonicalization algorithm

1593
01:10:55,040 --> 01:11:00,159
is that correct so this is

1594
01:10:58,560 --> 01:11:02,159
it's definitely you know from my

1595
01:11:00,159 --> 01:11:04,239
perspective it seems to be

1596
01:11:02,159 --> 01:11:06,320
you know oriented that way right so that

1597
01:11:04,239 --> 01:11:08,080
way you can have flexibility in terms of

1598
01:11:06,320 --> 01:11:08,559
how you implement the processing how you

1599
01:11:08,080 --> 01:11:11,040
how you

1600
01:11:08,560 --> 01:11:12,719
implement your formatting in such a way

1601
01:11:11,040 --> 01:11:13,760
that makes sense for a given security

1602
01:11:12,719 --> 01:11:15,120
context

1603
01:11:13,760 --> 01:11:16,880
that you might want to implement that

1604
01:11:15,120 --> 01:11:19,199
would be different than this one

1605
01:11:16,880 --> 01:11:21,600
so by not putting this in the main you

1606
01:11:19,199 --> 01:11:25,280
know bp sec again we're not tying the bp

1607
01:11:21,600 --> 01:11:28,640
sec to have a specific implementation

1608
01:11:25,280 --> 01:11:31,759
so rick an example of that would be

1609
01:11:28,640 --> 01:11:34,000
uh context uh if someone

1610
01:11:31,760 --> 01:11:35,920
really wanted to do this where they

1611
01:11:34,000 --> 01:11:38,960
would uh portion out

1612
01:11:35,920 --> 01:11:41,280
and and encrypt uh only portions of

1613
01:11:38,960 --> 01:11:42,640
of the target as opposed to the entire

1614
01:11:41,280 --> 01:11:45,040
thing and get into

1615
01:11:42,640 --> 01:11:46,000
you know encryption ranges and blocking

1616
01:11:45,040 --> 01:11:47,760
off

1617
01:11:46,000 --> 01:11:49,679
the plain text and that's just not

1618
01:11:47,760 --> 01:11:51,040
something that should be in bp sec

1619
01:11:49,679 --> 01:11:52,800
it's also not something that should be

1620
01:11:51,040 --> 01:11:54,560
in the default security context

1621
01:11:52,800 --> 01:11:56,159
maybe it shouldn't be anywhere but if it

1622
01:11:54,560 --> 01:11:56,560
needs to be somewhere it would be in its

1623
01:11:56,159 --> 01:12:01,360
own

1624
01:11:56,560 --> 01:12:01,360
uh document understood yeah

1625
01:12:04,000 --> 01:12:07,600
okay if there's uh nothing further we

1626
01:12:06,320 --> 01:12:10,159
can

1627
01:12:07,600 --> 01:12:12,880
go on to perhaps my last slide if my

1628
01:12:10,159 --> 01:12:12,879
memory serves

1629
01:12:13,360 --> 01:12:20,320
so with the the above changes

1630
01:12:17,520 --> 01:12:22,000
there are additional security context

1631
01:12:20,320 --> 01:12:25,199
parameters that are added in

1632
01:12:22,000 --> 01:12:27,120
um that uh

1633
01:12:25,199 --> 01:12:29,199
you know really encapsulate capture all

1634
01:12:27,120 --> 01:12:30,719
of the different aspects there

1635
01:12:29,199 --> 01:12:32,719
so the sha variant again kind of

1636
01:12:30,719 --> 01:12:35,040
speaking towards to ident

1637
01:12:32,719 --> 01:12:36,080
used to identify which of the the

1638
01:12:35,040 --> 01:12:37,920
different key links which are the

1639
01:12:36,080 --> 01:12:40,320
variants to be used

1640
01:12:37,920 --> 01:12:41,840
encapsulated key to be able to transfer

1641
01:12:40,320 --> 01:12:43,599
some key information

1642
01:12:41,840 --> 01:12:44,960
and then the integrity scope flags which

1643
01:12:43,600 --> 01:12:48,000
are used to identify

1644
01:12:44,960 --> 01:12:48,640
uh which portions of of data are to be

1645
01:12:48,000 --> 01:12:50,320
used

1646
01:12:48,640 --> 01:12:51,920
for the input canonicalization

1647
01:12:50,320 --> 01:12:54,000
algorithms to then be processed by the

1648
01:12:51,920 --> 01:12:58,320
security context

1649
01:12:54,000 --> 01:13:00,000
and likewise for the the bcbas gcm

1650
01:12:58,320 --> 01:13:02,639
context

1651
01:13:00,000 --> 01:13:05,040
you have similar information as well as

1652
01:13:02,640 --> 01:13:08,080
an initialization vector that's used

1653
01:13:05,040 --> 01:13:10,080
um that parameter was already present

1654
01:13:08,080 --> 01:13:12,239
in the previous version so the the

1655
01:13:10,080 --> 01:13:16,559
following

1656
01:13:12,239 --> 01:13:16,559
three items are our new ads with the o2

1657
01:13:16,840 --> 01:13:21,040
version

1658
01:13:18,239 --> 01:13:23,040
so if there's nothing further i think

1659
01:13:21,040 --> 01:13:28,080
that was my last slide

1660
01:13:23,040 --> 01:13:31,280
and i'll turn it over

1661
01:13:28,080 --> 01:13:32,159
my last comment on this is as we look at

1662
01:13:31,280 --> 01:13:34,800
getting uh

1663
01:13:32,159 --> 01:13:36,239
the the core three documents uh through

1664
01:13:34,800 --> 01:13:39,360
iesg

1665
01:13:36,239 --> 01:13:42,320
uh the bp sec uh document uh

1666
01:13:39,360 --> 01:13:42,960
has a single discuss against it from

1667
01:13:42,320 --> 01:13:45,280
mira

1668
01:13:42,960 --> 01:13:46,159
and that is that there needs to be an

1669
01:13:45,280 --> 01:13:48,400
approved

1670
01:13:46,159 --> 01:13:49,199
set of default security contacts to go

1671
01:13:48,400 --> 01:13:51,360
with it

1672
01:13:49,199 --> 01:13:53,678
so this document and the security

1673
01:13:51,360 --> 01:13:56,559
context dash o2

1674
01:13:53,679 --> 01:13:57,520
does need a nice review before it goes

1675
01:13:56,560 --> 01:13:59,760
out

1676
01:13:57,520 --> 01:14:01,760
it is in working group last call if you

1677
01:13:59,760 --> 01:14:04,640
have not read it or read the new version

1678
01:14:01,760 --> 01:14:06,080
please this week take some time and go

1679
01:14:04,640 --> 01:14:08,000
through it and provide comments on the

1680
01:14:06,080 --> 01:14:09,679
mailing list

1681
01:14:08,000 --> 01:14:11,040
and equally we will be needing a

1682
01:14:09,679 --> 01:14:14,000
document shepard for this

1683
01:14:11,040 --> 01:14:15,280
as well so that we can complete all our

1684
01:14:14,000 --> 01:14:17,360
checks and balances

1685
01:14:15,280 --> 01:14:19,759
uh before pushing it to the isg magnus

1686
01:14:17,360 --> 01:14:19,759
go ahead

1687
01:14:22,800 --> 01:14:26,159
not on the press um yes but if it's i

1688
01:14:25,520 --> 01:14:29,520
don't think

1689
01:14:26,159 --> 01:14:32,799
i mean this all these gases that

1690
01:14:29,520 --> 01:14:33,360
are for 80s to step down is not enforcer

1691
01:14:32,800 --> 01:14:36,560
to say

1692
01:14:33,360 --> 01:14:38,320
so it's don't get fooled by that

1693
01:14:36,560 --> 01:14:41,280
if the name under this cash holder is in

1694
01:14:38,320 --> 01:14:44,559
parenthesis it's it's actually not

1695
01:14:41,280 --> 01:14:47,759
in force and you if so it's

1696
01:14:44,560 --> 01:14:51,040
um i think we're in

1697
01:14:47,760 --> 01:14:52,960
80s we're using part of the data tracker

1698
01:14:51,040 --> 01:14:55,280
where maybe you don't see the summary

1699
01:14:52,960 --> 01:14:57,440
graphics etc which actually correctly

1700
01:14:55,280 --> 01:14:59,840
summarize it it's green or red etc and

1701
01:14:57,440 --> 01:15:02,799
you may looking mostly at the

1702
01:14:59,840 --> 01:15:04,640
ice the evaluation page for for the

1703
01:15:02,800 --> 01:15:05,920
individual document the evaluation

1704
01:15:04,640 --> 01:15:08,640
record and that

1705
01:15:05,920 --> 01:15:09,360
might give you that misconception that

1706
01:15:08,640 --> 01:15:13,120
they

1707
01:15:09,360 --> 01:15:16,480
is active so um okay

1708
01:15:13,120 --> 01:15:17,599
but um but it's so it's it's probably

1709
01:15:16,480 --> 01:15:19,120
not blocking but i mean

1710
01:15:17,600 --> 01:15:21,760
we still need to make progress on this

1711
01:15:19,120 --> 01:15:24,960
because uh that question of

1712
01:15:21,760 --> 01:15:28,480
uh dependency is

1713
01:15:24,960 --> 01:15:30,560
needed absolutely

1714
01:15:28,480 --> 01:15:32,320
absolutely um we have a quick agenda

1715
01:15:30,560 --> 01:15:35,600
change because we have

1716
01:15:32,320 --> 01:15:37,519
reshuffled so that uh ben could could

1717
01:15:35,600 --> 01:15:38,719
uh get involved with the tcpcl

1718
01:15:37,520 --> 01:15:40,880
conversation

1719
01:15:38,719 --> 01:15:42,560
he has multiple clashes today he's asked

1720
01:15:40,880 --> 01:15:44,800
that we bring tcpcl

1721
01:15:42,560 --> 01:15:45,679
in as the next item rather than the cozy

1722
01:15:44,800 --> 01:15:47,280
context

1723
01:15:45,679 --> 01:15:49,120
i am very sorry to juggle everyone

1724
01:15:47,280 --> 01:15:52,639
around but we really need ben

1725
01:15:49,120 --> 01:15:55,199
and brian to talk about tcpcl together

1726
01:15:52,640 --> 01:15:56,239
so uh i'm going to shuffle it everything

1727
01:15:55,199 --> 01:15:59,919
around

1728
01:15:56,239 --> 01:16:03,120
once more brian are you happy to

1729
01:15:59,920 --> 01:16:06,000
present now i'm really hoping you're not

1730
01:16:03,120 --> 01:16:09,440
getting a coffee

1731
01:16:06,000 --> 01:16:09,440
he's there right i'll find the slides

1732
01:16:14,159 --> 01:16:17,280
and as far as the slides are concerned

1733
01:16:15,520 --> 01:16:21,360
this should be relatively

1734
01:16:17,280 --> 01:16:21,920
short in terms of presentation content

1735
01:16:21,360 --> 01:16:23,839
uh

1736
01:16:21,920 --> 01:16:25,520
it may take a little bit of time to

1737
01:16:23,840 --> 01:16:28,719
discuss all right

1738
01:16:25,520 --> 01:16:31,440
no i've got to find the slides because

1739
01:16:28,719 --> 01:16:32,719
i appear to have had a competency

1740
01:16:31,440 --> 01:16:35,839
failure

1741
01:16:32,719 --> 01:16:35,840
um sorry

1742
01:16:44,719 --> 01:16:52,080
cozy slides that's it

1743
01:16:48,800 --> 01:16:52,080
no not cozy slides

1744
01:16:52,159 --> 01:16:59,759
tcp tcp stop sharing the wrong window

1745
01:16:56,560 --> 01:17:03,840
share the right window i'm sorry

1746
01:16:59,760 --> 01:17:03,840
i got up at 4am

1747
01:17:06,560 --> 01:17:10,960
hold on that's because it's called but

1748
01:17:08,800 --> 01:17:12,800
you've named your slides bp set cozy

1749
01:17:10,960 --> 01:17:15,679
context

1750
01:17:12,800 --> 01:17:16,080
oh really yeah that's what's confused

1751
01:17:15,679 --> 01:17:18,159
with

1752
01:17:16,080 --> 01:17:19,519
there we go it's fine these are i assume

1753
01:17:18,159 --> 01:17:23,280
the slides

1754
01:17:19,520 --> 01:17:25,360
yes good okay cool okay all right so

1755
01:17:23,280 --> 01:17:26,480
the going to the next slide so the first

1756
01:17:25,360 --> 01:17:29,360
two slides

1757
01:17:26,480 --> 01:17:32,639
are a bit of boilerplate um the goals

1758
01:17:29,360 --> 01:17:33,679
are exactly the same as they have been

1759
01:17:32,640 --> 01:17:36,719
a rough amount of backwards

1760
01:17:33,679 --> 01:17:39,840
compatibility but adding in

1761
01:17:36,719 --> 01:17:42,840
uh new extensibility and

1762
01:17:39,840 --> 01:17:45,840
intro interoperability so next slide

1763
01:17:42,840 --> 01:17:45,840
please

1764
01:17:47,360 --> 01:17:52,080
uh so uh there were two main sources of

1765
01:17:50,480 --> 01:17:53,280
changes from the last draft and there's

1766
01:17:52,080 --> 01:17:56,559
even a further uh

1767
01:17:53,280 --> 01:18:00,320
23 uh revision um and

1768
01:17:56,560 --> 01:18:02,560
these are uh feedback from uh ben caduc

1769
01:18:00,320 --> 01:18:05,840
and and feedback from martin duke

1770
01:18:02,560 --> 01:18:08,800
um and

1771
01:18:05,840 --> 01:18:09,120
uh the good news is this is not changing

1772
01:18:08,800 --> 01:18:11,920
the

1773
01:18:09,120 --> 01:18:12,960
the structure of tcpcl not changing the

1774
01:18:11,920 --> 01:18:17,199
encodings

1775
01:18:12,960 --> 01:18:17,199
of things in a fundamental way

1776
01:18:17,440 --> 01:18:21,360
ben's feedback has really been focused

1777
01:18:20,239 --> 01:18:25,360
on

1778
01:18:21,360 --> 01:18:28,559
the pki and the tls

1779
01:18:25,360 --> 01:18:32,000
aspects of the the convergence

1780
01:18:28,560 --> 01:18:35,040
spec and it's really

1781
01:18:32,000 --> 01:18:37,840
it's going a long way to solidify things

1782
01:18:35,040 --> 01:18:37,840
and make things

1783
01:18:38,840 --> 01:18:45,360
interoperable is the goal here and

1784
01:18:42,000 --> 01:18:49,920
also usable with the current pki

1785
01:18:45,360 --> 01:18:53,360
x tools and and tooling that's available

1786
01:18:49,920 --> 01:18:55,920
uh so this is still

1787
01:18:53,360 --> 01:18:57,040
uh there are a few issues remaining to

1788
01:18:55,920 --> 01:18:57,920
be worked out and i have another slide

1789
01:18:57,040 --> 01:19:00,960
later on that i

1790
01:18:57,920 --> 01:19:04,159
i can talk about uh but

1791
01:19:00,960 --> 01:19:08,000
it's really nailing down specifics about

1792
01:19:04,159 --> 01:19:11,199
how to make tcpcl behave in a way

1793
01:19:08,000 --> 01:19:13,040
that is in agreement with

1794
01:19:11,199 --> 01:19:14,400
best current practices and in agreement

1795
01:19:13,040 --> 01:19:16,000
with um

1796
01:19:14,400 --> 01:19:18,719
other protocols using the same types of

1797
01:19:16,000 --> 01:19:21,120
mechanisms or the same mechanisms

1798
01:19:18,719 --> 01:19:23,120
there are some terminology changes again

1799
01:19:21,120 --> 01:19:25,679
just to be clear about

1800
01:19:23,120 --> 01:19:28,000
uh when an ip address is being named

1801
01:19:25,679 --> 01:19:30,560
versus a dns name

1802
01:19:28,000 --> 01:19:31,520
and this is again pulling tcpcl closer

1803
01:19:30,560 --> 01:19:34,840
in line with

1804
01:19:31,520 --> 01:19:37,840
other specs covering the same ground

1805
01:19:34,840 --> 01:19:40,320
um i added a clarification

1806
01:19:37,840 --> 01:19:42,320
uh based on scott burley's comment about

1807
01:19:40,320 --> 01:19:42,960
uh how do existing implementations

1808
01:19:42,320 --> 01:19:47,120
handle

1809
01:19:42,960 --> 01:19:50,400
if i ask to make contact with node a

1810
01:19:47,120 --> 01:19:50,880
and they respond i'm node b what should

1811
01:19:50,400 --> 01:19:53,679
the

1812
01:19:50,880 --> 01:19:54,239
behavior of the convergence layer be and

1813
01:19:53,679 --> 01:19:59,360
that is

1814
01:19:54,239 --> 01:20:03,919
continue on uh with a warning basically

1815
01:19:59,360 --> 01:20:04,239
the bundles must continue to flow and uh

1816
01:20:03,920 --> 01:20:07,760
uh

1817
01:20:04,239 --> 01:20:11,199
martin duke's feedback did lead to one

1818
01:20:07,760 --> 01:20:13,120
change and that's the addition of uh

1819
01:20:11,199 --> 01:20:16,719
transfer refuse reason

1820
01:20:13,120 --> 01:20:18,159
and this is something that really was an

1821
01:20:16,719 --> 01:20:21,280
oversight from earlier

1822
01:20:18,159 --> 01:20:24,638
that when it comes to shutting down

1823
01:20:21,280 --> 01:20:27,280
cleanly shutting down a tcpcl session

1824
01:20:24,639 --> 01:20:28,719
there's a period of time when you can't

1825
01:20:27,280 --> 01:20:30,080
accept new transfers because you're

1826
01:20:28,719 --> 01:20:31,440
shutting down that's the whole point of

1827
01:20:30,080 --> 01:20:33,280
having that clean

1828
01:20:31,440 --> 01:20:34,719
termination procedure so one of these

1829
01:20:33,280 --> 01:20:37,440
refusal reasons is

1830
01:20:34,719 --> 01:20:39,040
i am terminating uh your bundle is

1831
01:20:37,440 --> 01:20:41,120
perfectly fine but don't send it to me

1832
01:20:39,040 --> 01:20:44,000
right now in this session because

1833
01:20:41,120 --> 01:20:45,599
uh i'm terminating so that distinguishes

1834
01:20:44,000 --> 01:20:46,080
it from the other refusal reasons which

1835
01:20:45,600 --> 01:20:49,840
is more

1836
01:20:46,080 --> 01:20:51,360
to do with your bundles malformed or

1837
01:20:49,840 --> 01:20:53,760
i've run out of disk space something

1838
01:20:51,360 --> 01:20:53,759
like that

1839
01:20:55,760 --> 01:21:02,239
so if you can go to the next slide

1840
01:21:00,000 --> 01:21:03,280
so that covers what's in 22 and some of

1841
01:21:02,239 --> 01:21:06,320
this is also

1842
01:21:03,280 --> 01:21:10,400
uh changes in 23 focused on the pki

1843
01:21:06,320 --> 01:21:13,440
aspects of things um i i am planning on

1844
01:21:10,400 --> 01:21:15,280
doing uh so this first topic of

1845
01:21:13,440 --> 01:21:17,440
how to define the use of can tls contact

1846
01:21:15,280 --> 01:21:20,960
header flag um

1847
01:21:17,440 --> 01:21:23,120
uh after looking at what ran and

1848
01:21:20,960 --> 01:21:25,679
ben have been have been discussing on

1849
01:21:23,120 --> 01:21:28,639
the mailing list

1850
01:21:25,679 --> 01:21:29,600
i i want to take that terminal that

1851
01:21:28,639 --> 01:21:32,639
verbiage

1852
01:21:29,600 --> 01:21:32,960
uh that they had narrowed it on i think

1853
01:21:32,639 --> 01:21:35,520
this

1854
01:21:32,960 --> 01:21:36,400
is an appropriate thing to do in the

1855
01:21:35,520 --> 01:21:39,120
sense that

1856
01:21:36,400 --> 01:21:40,799
it changes the language from you can

1857
01:21:39,120 --> 01:21:44,800
speak tls to

1858
01:21:40,800 --> 01:21:48,159
your entity is configured to to use tls

1859
01:21:44,800 --> 01:21:50,400
uh it's a minor uh from the spec it's a

1860
01:21:48,159 --> 01:21:51,280
minor change but it brings it more in

1861
01:21:50,400 --> 01:21:53,199
line with

1862
01:21:51,280 --> 01:21:55,360
and i've also added to the security

1863
01:21:53,199 --> 01:21:56,239
considerations as an explicit piece of

1864
01:21:55,360 --> 01:21:58,719
text

1865
01:21:56,239 --> 01:22:00,080
uh in that's going to be in the upcoming

1866
01:21:58,719 --> 01:22:02,800
revision

1867
01:22:00,080 --> 01:22:04,880
and this is something that maybe scott

1868
01:22:02,800 --> 01:22:08,080
might want to look at eventually also

1869
01:22:04,880 --> 01:22:09,600
in the sense of it says explicitly man

1870
01:22:08,080 --> 01:22:11,920
it says the phrase mandatory to

1871
01:22:09,600 --> 01:22:13,679
implement but optional to use

1872
01:22:11,920 --> 01:22:14,960
with a little bit of explanation of what

1873
01:22:13,679 --> 01:22:18,159
does that mean

1874
01:22:14,960 --> 01:22:19,120
um so you could steal that for something

1875
01:22:18,159 --> 01:22:23,519
like bpsec

1876
01:22:19,120 --> 01:22:25,920
or or those extension blocks

1877
01:22:23,520 --> 01:22:27,120
but that's like i said it's in an uh

1878
01:22:25,920 --> 01:22:31,199
upcoming

1879
01:22:27,120 --> 01:22:34,400
um draft so i think that can tls

1880
01:22:31,199 --> 01:22:38,080
should at that point be put to rest

1881
01:22:34,400 --> 01:22:40,719
um the uh one comment

1882
01:22:38,080 --> 01:22:41,840
that came in uh from i believe it was

1883
01:22:40,719 --> 01:22:44,080
from martin about

1884
01:22:41,840 --> 01:22:45,679
a supported version set this is

1885
01:22:44,080 --> 01:22:48,559
something that hadn't been discussed

1886
01:22:45,679 --> 01:22:50,960
prior um it's not something that had

1887
01:22:48,560 --> 01:22:54,320
been present in the previous tcpcl

1888
01:22:50,960 --> 01:22:56,320
uh the concept is

1889
01:22:54,320 --> 01:22:57,360
in some protocols you can say i don't

1890
01:22:56,320 --> 01:23:01,199
support

1891
01:22:57,360 --> 01:23:05,040
version three but i do support version

1892
01:23:01,199 --> 01:23:06,559
four and two the next contact please use

1893
01:23:05,040 --> 01:23:09,280
one of those versions

1894
01:23:06,560 --> 01:23:09,920
the current spec the way it operates is

1895
01:23:09,280 --> 01:23:12,480
you start

1896
01:23:09,920 --> 01:23:13,600
the top of your list latest revision and

1897
01:23:12,480 --> 01:23:16,400
you work down

1898
01:23:13,600 --> 01:23:16,960
so there's a risk that if you're talking

1899
01:23:16,400 --> 01:23:20,080
about just

1900
01:23:16,960 --> 01:23:20,960
pure open network anybody talking to

1901
01:23:20,080 --> 01:23:25,040
anybody

1902
01:23:20,960 --> 01:23:27,600
the risk is it takes you two or three

1903
01:23:25,040 --> 01:23:28,320
failed connection attempts to negotiate

1904
01:23:27,600 --> 01:23:31,840
a

1905
01:23:28,320 --> 01:23:32,320
shared version uh i don't necessarily

1906
01:23:31,840 --> 01:23:34,560
see a

1907
01:23:32,320 --> 01:23:35,840
problem with that it's a question to

1908
01:23:34,560 --> 01:23:38,639
working group

1909
01:23:35,840 --> 01:23:40,400
if if it seems like it's worth adding

1910
01:23:38,639 --> 01:23:42,080
complexity to the contact header right

1911
01:23:40,400 --> 01:23:45,040
now the contact letter is short

1912
01:23:42,080 --> 01:23:46,719
and fixed length um and this would just

1913
01:23:45,040 --> 01:23:50,480
add a little bit of complexity to the

1914
01:23:46,719 --> 01:23:52,960
contact header so it's i'm not sure that

1915
01:23:50,480 --> 01:23:55,040
there's much value in this for the use

1916
01:23:52,960 --> 01:23:58,719
cases that

1917
01:23:55,040 --> 01:23:58,719
are known on this

1918
01:24:01,040 --> 01:24:04,320
there was a suggestion to add two

1919
01:24:02,719 --> 01:24:07,360
different um

1920
01:24:04,320 --> 01:24:08,400
contact failure reason codes which is

1921
01:24:07,360 --> 01:24:10,719
version two high

1922
01:24:08,400 --> 01:24:12,400
and version two low instead of simply

1923
01:24:10,719 --> 01:24:14,840
version mismatch

1924
01:24:12,400 --> 01:24:16,159
that seems to be a little bit more

1925
01:24:14,840 --> 01:24:19,199
reasonable

1926
01:24:16,159 --> 01:24:22,080
so brian rick here i'm i'm

1927
01:24:19,199 --> 01:24:22,799
displaying my lack of knowledge on tls

1928
01:24:22,080 --> 01:24:27,440
here

1929
01:24:22,800 --> 01:24:30,960
but if does the tls handshake itself

1930
01:24:27,440 --> 01:24:33,678
not have a failed completely because

1931
01:24:30,960 --> 01:24:36,159
you're trying tls version 1.1 and i only

1932
01:24:33,679 --> 01:24:39,520
support version 1.3 i mean can we

1933
01:24:36,159 --> 01:24:42,960
can we even more

1934
01:24:39,520 --> 01:24:45,679
this is a tcpcl version

1935
01:24:42,960 --> 01:24:46,800
oh okay sorry this is i'm speaking

1936
01:24:45,679 --> 01:24:49,920
version four

1937
01:24:46,800 --> 01:24:52,639
you're speaking version three we need to

1938
01:24:49,920 --> 01:24:54,080
negotiate a common version so it's it's

1939
01:24:52,639 --> 01:24:57,120
the top level

1940
01:24:54,080 --> 01:24:59,840
what is being what is being communicated

1941
01:24:57,120 --> 01:24:59,840
on this port

1942
01:25:01,120 --> 01:25:07,840
um okay

1943
01:25:06,159 --> 01:25:10,400
i may have some ideas i won't i won't

1944
01:25:07,840 --> 01:25:12,159
interrupt now but i'm just thinking

1945
01:25:10,400 --> 01:25:15,199
yeah i need to think them through but

1946
01:25:12,159 --> 01:25:15,199
okay let me okay

1947
01:25:15,679 --> 01:25:19,760
for the near term my uh plan is to not

1948
01:25:18,480 --> 01:25:23,519
touch the contact header

1949
01:25:19,760 --> 01:25:27,199
leave this as a an open item

1950
01:25:23,520 --> 01:25:30,480
just rather than being cryptic um my

1951
01:25:27,199 --> 01:25:31,599
preference would be a a an error

1952
01:25:30,480 --> 01:25:33,759
response which

1953
01:25:31,600 --> 01:25:34,960
says something like upgrade i understand

1954
01:25:33,760 --> 01:25:38,320
you're trying to talk

1955
01:25:34,960 --> 01:25:40,000
uh tcpcl version three i am a v4

1956
01:25:38,320 --> 01:25:42,320
implementation go away

1957
01:25:40,000 --> 01:25:43,920
but please upgrade i i've implemented

1958
01:25:42,320 --> 01:25:47,599
just enough tcpcl

1959
01:25:43,920 --> 01:25:50,239
version 3 to give you that return code

1960
01:25:47,600 --> 01:25:51,360
so that was the one alternative uh that

1961
01:25:50,239 --> 01:25:54,480
was proposed

1962
01:25:51,360 --> 01:25:56,799
in the comment was to have two different

1963
01:25:54,480 --> 01:25:58,480
failure responses which is version two

1964
01:25:56,800 --> 01:26:00,000
high and version two low so you'd know

1965
01:25:58,480 --> 01:26:04,559
which way

1966
01:26:00,000 --> 01:26:07,199
which way to try your next attempt

1967
01:26:04,560 --> 01:26:08,560
i wouldn't bother with version two high

1968
01:26:07,199 --> 01:26:11,199
well

1969
01:26:08,560 --> 01:26:12,320
right now right now yeah right now the

1970
01:26:11,199 --> 01:26:14,559
workflow is very simple

1971
01:26:12,320 --> 01:26:16,159
in that you start at the the latest

1972
01:26:14,560 --> 01:26:20,400
version that you are capable of

1973
01:26:16,159 --> 01:26:23,040
and work down from there yeah

1974
01:26:20,400 --> 01:26:25,839
so it's it's deterministic at least but

1975
01:26:23,040 --> 01:26:25,840
it might be wasteful

1976
01:26:26,639 --> 01:26:30,080
yeah i'm i assume we're we're optimizing

1977
01:26:29,199 --> 01:26:31,759
for the case where

1978
01:26:30,080 --> 01:26:33,840
where both ends actually know the

1979
01:26:31,760 --> 01:26:36,239
versions and have made contacts

1980
01:26:33,840 --> 01:26:37,440
previously and have some idea that that

1981
01:26:36,239 --> 01:26:39,120
you know so we don't the version

1982
01:26:37,440 --> 01:26:40,799
mismatch i don't think is on the

1983
01:26:39,120 --> 01:26:43,040
is on the critical path for these things

1984
01:26:40,800 --> 01:26:45,920
but it does need to be specified okay

1985
01:26:43,040 --> 01:26:48,159
yes and it's also i mean this it could

1986
01:26:45,920 --> 01:26:51,440
be kicked down to say well this is a

1987
01:26:48,159 --> 01:26:52,960
uh this is the mechanism the discovery

1988
01:26:51,440 --> 01:26:55,839
mechanism kind of a

1989
01:26:52,960 --> 01:26:58,080
thing to take care of the hell to tell

1990
01:26:55,840 --> 01:27:01,600
the world what version i'm running

1991
01:26:58,080 --> 01:27:03,120
so my my problem with version two high

1992
01:27:01,600 --> 01:27:05,280
and i don't want to take too much time

1993
01:27:03,120 --> 01:27:10,400
is how do i know

1994
01:27:05,280 --> 01:27:10,400
what header tcpl version 6 has

1995
01:27:10,880 --> 01:27:14,560
how do i know it's version 6 when i'm

1996
01:27:12,639 --> 01:27:16,719
version 4 and version 6 doesn't exist

1997
01:27:14,560 --> 01:27:16,719
yet

1998
01:27:17,120 --> 01:27:22,400
well okay yeah

1999
01:27:20,560 --> 01:27:24,000
so i understand that they sort of i i

2000
01:27:22,400 --> 01:27:26,320
have no idea what you're talking about

2001
01:27:24,000 --> 01:27:27,760
seems to be a fairly valid reason code

2002
01:27:26,320 --> 01:27:28,559
or possibly just killing the tcp

2003
01:27:27,760 --> 01:27:31,120
connection

2004
01:27:28,560 --> 01:27:32,800
um i you sent me something which looks

2005
01:27:31,120 --> 01:27:35,679
like garbage to me

2006
01:27:32,800 --> 01:27:36,239
which is different from you've sent me i

2007
01:27:35,679 --> 01:27:40,560
something i

2008
01:27:36,239 --> 01:27:43,759
understand as a tcpl version 3 header

2009
01:27:40,560 --> 01:27:45,199
so so version 2 low i can i can i can

2010
01:27:43,760 --> 01:27:47,440
implement that

2011
01:27:45,199 --> 01:27:48,480
version two high i'm predicting the

2012
01:27:47,440 --> 01:27:51,120
future but

2013
01:27:48,480 --> 01:27:51,919
let's take this offline um okay so the

2014
01:27:51,120 --> 01:27:54,639
current behavior

2015
01:27:51,920 --> 01:27:54,639
has has

2016
01:27:56,320 --> 01:27:59,599
it's not gonna be changed at least in

2017
01:27:57,600 --> 01:28:03,040
the near term here's the

2018
01:27:59,600 --> 01:28:05,040
takeaway here um uh the last topic

2019
01:28:03,040 --> 01:28:06,400
uh has been augmented a little bit from

2020
01:28:05,040 --> 01:28:09,600
some feedback from ben

2021
01:28:06,400 --> 01:28:11,199
um the question was is there a need or

2022
01:28:09,600 --> 01:28:15,760
value to having

2023
01:28:11,199 --> 01:28:19,440
a pki extended key usage allocated for

2024
01:28:15,760 --> 01:28:22,560
in somewhere another dtn um

2025
01:28:19,440 --> 01:28:23,440
and the reason for this is currently i

2026
01:28:22,560 --> 01:28:26,000
can

2027
01:28:23,440 --> 01:28:26,960
take a certificate that somebody gave me

2028
01:28:26,000 --> 01:28:29,440
issued to me

2029
01:28:26,960 --> 01:28:30,400
for my http server for my ldap server

2030
01:28:29,440 --> 01:28:33,280
whatever

2031
01:28:30,400 --> 01:28:35,440
and i can repurpose that and use it for

2032
01:28:33,280 --> 01:28:37,920
tcpcl

2033
01:28:35,440 --> 01:28:38,799
no problem i keep my host name it's the

2034
01:28:37,920 --> 01:28:40,800
same

2035
01:28:38,800 --> 01:28:42,880
and now i'm talking tcpl using the same

2036
01:28:40,800 --> 01:28:46,480
circ so it's a question of

2037
01:28:42,880 --> 01:28:48,080
is this a desirable behavior um

2038
01:28:46,480 --> 01:28:49,839
and the the following question that's

2039
01:28:48,080 --> 01:28:53,199
not on this slide is

2040
01:28:49,840 --> 01:28:56,639
uh and i'm i'm going to be doing some

2041
01:28:53,199 --> 01:29:00,080
communicating with the um

2042
01:28:56,639 --> 01:29:03,520
expert on the uh oid

2043
01:29:00,080 --> 01:29:06,880
uh for the iana

2044
01:29:03,520 --> 01:29:10,159
which is does it make sense to have

2045
01:29:06,880 --> 01:29:13,920
uh two different levels of

2046
01:29:10,159 --> 01:29:15,120
this is a dtn transport purpose versus a

2047
01:29:13,920 --> 01:29:18,400
dtn

2048
01:29:15,120 --> 01:29:22,159
uh bundle security purpose

2049
01:29:18,400 --> 01:29:25,920
or is there simply one level of

2050
01:29:22,159 --> 01:29:30,239
this is a a valid user of

2051
01:29:25,920 --> 01:29:33,679
dtn security at some level

2052
01:29:30,239 --> 01:29:33,678
uh trust them

2053
01:29:35,040 --> 01:29:39,199
so is the question here about actually

2054
01:29:37,199 --> 01:29:41,360
is about enforcement

2055
01:29:39,199 --> 01:29:41,360
so

2056
01:29:42,320 --> 01:29:47,920
as one side of a tls connection

2057
01:29:45,600 --> 01:29:49,840
when i get to the i want to verify my

2058
01:29:47,920 --> 01:29:52,960
peers certificate or my peers

2059
01:29:49,840 --> 01:29:56,400
yeah my peers cert

2060
01:29:52,960 --> 01:29:57,120
check i can look at the extended key

2061
01:29:56,400 --> 01:29:59,440
usage

2062
01:29:57,120 --> 01:30:01,040
oid on the certificate that was used to

2063
01:29:59,440 --> 01:30:02,879
establish this connection

2064
01:30:01,040 --> 01:30:05,040
and at that point i can make a local

2065
01:30:02,880 --> 01:30:08,480
decision over whether i

2066
01:30:05,040 --> 01:30:11,519
want it or not so your question is

2067
01:30:08,480 --> 01:30:14,638
should the spec say you

2068
01:30:11,520 --> 01:30:18,159
must check the eku

2069
01:30:14,639 --> 01:30:20,239
and if it is not this special reserved

2070
01:30:18,159 --> 01:30:23,440
for use by tcpcl

2071
01:30:20,239 --> 01:30:26,400
auth you must

2072
01:30:23,440 --> 01:30:27,040
terminate that's your question i'm i'm

2073
01:30:26,400 --> 01:30:30,239
i'm

2074
01:30:27,040 --> 01:30:33,280
being sort of was it um

2075
01:30:30,239 --> 01:30:36,400
principle of except but

2076
01:30:33,280 --> 01:30:38,880
with control so if i so the way

2077
01:30:36,400 --> 01:30:40,559
the protocols make use of this kind of

2078
01:30:38,880 --> 01:30:43,520
thing other modern protocols

2079
01:30:40,560 --> 01:30:45,360
is to say if the certificate does have

2080
01:30:43,520 --> 01:30:48,960
an eku

2081
01:30:45,360 --> 01:30:52,000
it must be it must contain this value

2082
01:30:48,960 --> 01:30:53,199
so if a if a ca just says you are a

2083
01:30:52,000 --> 01:30:55,520
valid holder of this name

2084
01:30:53,199 --> 01:30:57,519
do what you will then that will be

2085
01:30:55,520 --> 01:31:00,480
accepted but if a ca says

2086
01:30:57,520 --> 01:31:02,239
you're a valid holder this name and it's

2087
01:31:00,480 --> 01:31:05,599
intended to be used for

2088
01:31:02,239 --> 01:31:08,400
ocsp if it's intended to use for

2089
01:31:05,600 --> 01:31:10,480
uh ntp if it's intended to use for

2090
01:31:08,400 --> 01:31:13,839
something that's not etn

2091
01:31:10,480 --> 01:31:16,480
then don't accept it for dtm

2092
01:31:13,840 --> 01:31:17,600
because the ca the idea is the ca issued

2093
01:31:16,480 --> 01:31:20,799
it for something else

2094
01:31:17,600 --> 01:31:23,280
should you be trusting it for dtn i

2095
01:31:20,800 --> 01:31:24,960
i would be happy with should terminology

2096
01:31:23,280 --> 01:31:27,679
for this

2097
01:31:24,960 --> 01:31:29,760
yeah because i i i can see particularly

2098
01:31:27,679 --> 01:31:31,920
in constrained devices having 101

2099
01:31:29,760 --> 01:31:33,040
certificates just differing over eku

2100
01:31:31,920 --> 01:31:34,880
values

2101
01:31:33,040 --> 01:31:36,159
for effectively the same device it's

2102
01:31:34,880 --> 01:31:38,159
just a pain

2103
01:31:36,159 --> 01:31:41,360
the way that it's specified or the way

2104
01:31:38,159 --> 01:31:43,679
that it is or will be specified is

2105
01:31:41,360 --> 01:31:45,120
as a recommended security policy so

2106
01:31:43,679 --> 01:31:47,840
there's the requirements are

2107
01:31:45,120 --> 01:31:49,199
if the security policies are so and so

2108
01:31:47,840 --> 01:31:50,880
here's how you act

2109
01:31:49,199 --> 01:31:53,599
and then there's a separate statement is

2110
01:31:50,880 --> 01:31:56,719
the recommended security policy is

2111
01:31:53,600 --> 01:31:59,199
x y and z so okay yeah yeah

2112
01:31:56,719 --> 01:32:00,159
again yeah i'd be i'd be happy with that

2113
01:31:59,199 --> 01:32:03,599
i need to re-read

2114
01:32:00,159 --> 01:32:05,280
tcpcl personal mode yeah

2115
01:32:03,600 --> 01:32:06,800
so the the good news is it's it's

2116
01:32:05,280 --> 01:32:10,480
converging and ben

2117
01:32:06,800 --> 01:32:10,480
if he wants to chime in

2118
01:32:11,120 --> 01:32:15,440
yeah yeah i just wanted to say a little

2119
01:32:13,199 --> 01:32:16,799
bit about uh extended key usage

2120
01:32:15,440 --> 01:32:19,440
values in general i mean you're quite

2121
01:32:16,800 --> 01:32:20,320
correct that uh the cas will sometimes

2122
01:32:19,440 --> 01:32:23,678
just not have

2123
01:32:20,320 --> 01:32:25,120
any eku at all but then other times they

2124
01:32:23,679 --> 01:32:28,400
will have some

2125
01:32:25,120 --> 01:32:32,800
and the sort of idea there is that

2126
01:32:28,400 --> 01:32:34,719
the ca is bothering to specify

2127
01:32:32,800 --> 01:32:36,800
in detail what the certificate is

2128
01:32:34,719 --> 01:32:38,159
intended to be used for

2129
01:32:36,800 --> 01:32:40,400
and you can tell that because there is

2130
01:32:38,159 --> 01:32:42,960
any extended key usage present

2131
01:32:40,400 --> 01:32:45,040
in the certificate at all and so now

2132
01:32:42,960 --> 01:32:47,360
that you know that the ca

2133
01:32:45,040 --> 01:32:48,800
has some intent or some information

2134
01:32:47,360 --> 01:32:50,080
about what the certificate should be

2135
01:32:48,800 --> 01:32:52,719
used for

2136
01:32:50,080 --> 01:32:53,199
then you are sort of constrained by the

2137
01:32:52,719 --> 01:32:56,239
list

2138
01:32:53,199 --> 01:32:57,839
of key usage values and there could be

2139
01:32:56,239 --> 01:33:00,000
more than one you could have a single

2140
01:32:57,840 --> 01:33:04,560
certificate that is valid for

2141
01:33:00,000 --> 01:33:06,880
both esp and http and gtn

2142
01:33:04,560 --> 01:33:08,000
it would be somewhat unusual to do that

2143
01:33:06,880 --> 01:33:11,360
but it's certainly

2144
01:33:08,000 --> 01:33:14,080
valid within the protocol

2145
01:33:11,360 --> 01:33:15,280
so i think my suggestion here would be

2146
01:33:14,080 --> 01:33:18,239
to

2147
01:33:15,280 --> 01:33:19,440
yes define the external key usage value

2148
01:33:18,239 --> 01:33:23,519
and

2149
01:33:19,440 --> 01:33:26,719
say that if you receive a certificate

2150
01:33:23,520 --> 01:33:26,719
that has eku

2151
01:33:27,840 --> 01:33:32,400
then you should check for this one but

2152
01:33:30,080 --> 01:33:35,040
we don't need to have a very strong

2153
01:33:32,400 --> 01:33:36,320
requirement that if you have a

2154
01:33:35,040 --> 01:33:38,800
certificate you should have a

2155
01:33:36,320 --> 01:33:40,559
certificate that has this eka value

2156
01:33:38,800 --> 01:33:42,480
i think the way that the current

2157
01:33:40,560 --> 01:33:45,600
ecosystem is set up

2158
01:33:42,480 --> 01:33:46,239
um it's not guaranteed that or it's not

2159
01:33:45,600 --> 01:33:47,920
necessarily

2160
01:33:46,239 --> 01:33:50,320
going to be very easy to get a

2161
01:33:47,920 --> 01:33:51,840
certificate that has this particular eku

2162
01:33:50,320 --> 01:33:54,480
value

2163
01:33:51,840 --> 01:33:56,320
so i think if we tried to insist that

2164
01:33:54,480 --> 01:33:58,480
everybody had it that would

2165
01:33:56,320 --> 01:33:59,360
basically result in everybody violating

2166
01:33:58,480 --> 01:34:01,839
the threat

2167
01:33:59,360 --> 01:34:03,280
and so there's not much reason for us to

2168
01:34:01,840 --> 01:34:05,840
write something that we know will be

2169
01:34:03,280 --> 01:34:05,840
ignored

2170
01:34:05,920 --> 01:34:09,199
must but we know you won't

2171
01:34:09,679 --> 01:34:14,480
i'm watching the clock here guys so um

2172
01:34:13,040 --> 01:34:15,519
yeah sorry to keep going this is

2173
01:34:14,480 --> 01:34:17,360
important i'm just gonna say in that

2174
01:34:15,520 --> 01:34:18,880
sense the recommended security policy is

2175
01:34:17,360 --> 01:34:21,920
a little bit aspirational

2176
01:34:18,880 --> 01:34:24,400
but it's realizable

2177
01:34:21,920 --> 01:34:27,520
yeah that sounds good i don't think i

2178
01:34:24,400 --> 01:34:27,519
had anything else to say

2179
01:34:28,080 --> 01:34:36,320
that's the last slide as well

2180
01:34:33,440 --> 01:34:36,960
any questions my intent is to publish

2181
01:34:36,320 --> 01:34:40,320
another

2182
01:34:36,960 --> 01:34:43,119
uh revision and maybe this will wrap

2183
01:34:40,320 --> 01:34:44,000
things up i hope so and thank you again

2184
01:34:43,119 --> 01:34:46,159
to the chairs

2185
01:34:44,000 --> 01:34:48,800
uh for changing the schedule around so

2186
01:34:46,159 --> 01:34:50,799
that could be fine

2187
01:34:48,800 --> 01:34:51,840
so uh i'm conscious we've got half an

2188
01:34:50,800 --> 01:34:53,760
hour left

2189
01:34:51,840 --> 01:34:55,199
uh and we have three ten minute

2190
01:34:53,760 --> 01:34:57,360
presentations so

2191
01:34:55,199 --> 01:34:58,400
um for the sake of people following you

2192
01:34:57,360 --> 01:35:01,679
can i ask

2193
01:34:58,400 --> 01:35:03,440
people to be timely let me find

2194
01:35:01,679 --> 01:35:05,679
the other slide called bp set cozy

2195
01:35:03,440 --> 01:35:08,320
contexts which is not

2196
01:35:05,679 --> 01:35:10,719
not these slides because it's still

2197
01:35:08,320 --> 01:35:10,719
brian

2198
01:35:12,960 --> 01:35:17,440
is that right ed i can't see the agenda

2199
01:35:14,960 --> 01:35:17,440
in front of me

2200
01:35:18,239 --> 01:35:21,839
i'm sorry yeah the the next one is the

2201
01:35:20,000 --> 01:35:24,960
cozy context with brian

2202
01:35:21,840 --> 01:35:28,320
okay brian you have uh

2203
01:35:24,960 --> 01:35:31,520
say seven minutes okay yep uh

2204
01:35:28,320 --> 01:35:32,960
so the short take away here uh if you

2205
01:35:31,520 --> 01:35:34,800
skip to the next slide uh

2206
01:35:32,960 --> 01:35:36,239
you can skip the the first two they're

2207
01:35:34,800 --> 01:35:39,280
just background on

2208
01:35:36,239 --> 01:35:40,718
what the intent here is um but really

2209
01:35:39,280 --> 01:35:45,119
the goal here is

2210
01:35:40,719 --> 01:35:49,040
uh pki and pki with existing mechanisms

2211
01:35:45,119 --> 01:35:49,040
so if you flip to the third slide

2212
01:35:50,320 --> 01:35:57,360
the last draft now introduces

2213
01:35:53,760 --> 01:36:01,760
one single security context

2214
01:35:57,360 --> 01:36:03,920
with one context id and the intent here

2215
01:36:01,760 --> 01:36:06,320
there can be some feedback on this for

2216
01:36:03,920 --> 01:36:08,880
if this makes sense but the idea is that

2217
01:36:06,320 --> 01:36:10,960
the structure of whether it's used in

2218
01:36:08,880 --> 01:36:13,360
integrity or confidentiality

2219
01:36:10,960 --> 01:36:14,239
is exactly the same what's different is

2220
01:36:13,360 --> 01:36:17,119
what types of

2221
01:36:14,239 --> 01:36:17,839
messages will be embedded in the results

2222
01:36:17,119 --> 01:36:19,360
so

2223
01:36:17,840 --> 01:36:21,840
having one context or having two

2224
01:36:19,360 --> 01:36:24,239
contexts it really doesn't structurally

2225
01:36:21,840 --> 01:36:25,840
change what is being represented here

2226
01:36:24,239 --> 01:36:29,119
but the idea is that

2227
01:36:25,840 --> 01:36:31,199
the context is parameters are some key

2228
01:36:29,119 --> 01:36:34,239
materials public key materials

2229
01:36:31,199 --> 01:36:36,239
results are cosi messages

2230
01:36:34,239 --> 01:36:39,199
an integrity result either has a mac or

2231
01:36:36,239 --> 01:36:42,400
a signature or

2232
01:36:39,199 --> 01:36:43,919
some future cosy message that's going to

2233
01:36:42,400 --> 01:36:46,320
do that job

2234
01:36:43,920 --> 01:36:47,760
and the confidentiality result has an

2235
01:36:46,320 --> 01:36:52,000
encrypt

2236
01:36:47,760 --> 01:36:54,560
message in it and the reason for

2237
01:36:52,000 --> 01:36:56,080
cosi itself can transport public keys uh

2238
01:36:54,560 --> 01:36:57,280
with the individual results

2239
01:36:56,080 --> 01:36:59,440
uh the reason for having them in

2240
01:36:57,280 --> 01:37:02,320
security parameters is that

2241
01:36:59,440 --> 01:37:03,360
if i choose to sign every single block

2242
01:37:02,320 --> 01:37:05,679
in my bundle

2243
01:37:03,360 --> 01:37:07,199
and i have 15 different results i don't

2244
01:37:05,679 --> 01:37:09,920
want to have 15 different copies of my

2245
01:37:07,199 --> 01:37:11,280
public key so the parameters have the

2246
01:37:09,920 --> 01:37:12,800
public key and then the results have the

2247
01:37:11,280 --> 01:37:15,280
key identifiers that reference the

2248
01:37:12,800 --> 01:37:17,199
public key

2249
01:37:15,280 --> 01:37:18,800
so it's relatively clean in that

2250
01:37:17,199 --> 01:37:22,000
structure and then

2251
01:37:18,800 --> 01:37:25,520
each result is a cosy message and this

2252
01:37:22,000 --> 01:37:27,920
is dipping toes into

2253
01:37:25,520 --> 01:37:29,840
that realm uh that ed had mentioned of

2254
01:37:27,920 --> 01:37:30,239
of getting into a little bit of madness

2255
01:37:29,840 --> 01:37:33,520
of

2256
01:37:30,239 --> 01:37:36,638
of structure uh cosi is

2257
01:37:33,520 --> 01:37:38,480
quite vast and can get complex

2258
01:37:36,639 --> 01:37:41,199
uh there is in this document if you flip

2259
01:37:38,480 --> 01:37:41,199
to the next slide

2260
01:37:43,119 --> 01:37:48,719
uh there is a cos cosi profile

2261
01:37:46,960 --> 01:37:51,360
that narrows down exactly what is

2262
01:37:48,719 --> 01:37:54,719
reasonable to have in these kind of

2263
01:37:51,360 --> 01:37:56,880
security results and that is

2264
01:37:54,719 --> 01:37:57,920
there are required symmetric key

2265
01:37:56,880 --> 01:38:01,040
algorithms

2266
01:37:57,920 --> 01:38:04,639
for mac for encryption and for keywrap

2267
01:38:01,040 --> 01:38:08,000
and there's recommended the asymmetric

2268
01:38:04,639 --> 01:38:11,040
public key stuff so this

2269
01:38:08,000 --> 01:38:12,400
nails it down at least to a realizable

2270
01:38:11,040 --> 01:38:14,719
and implementable

2271
01:38:12,400 --> 01:38:16,239
set of things that you can do and also

2272
01:38:14,719 --> 01:38:19,679
restricts that you can't have

2273
01:38:16,239 --> 01:38:22,718
arbitrary depth nested messages um

2274
01:38:19,679 --> 01:38:24,639
all kinds of complicated stuff and the

2275
01:38:22,719 --> 01:38:27,280
last draft also

2276
01:38:24,639 --> 01:38:28,239
uh has examples of using this kind of

2277
01:38:27,280 --> 01:38:32,000
stuff

2278
01:38:28,239 --> 01:38:34,080
so it is realizable if you wanted to

2279
01:38:32,000 --> 01:38:35,920
start implementing something like this

2280
01:38:34,080 --> 01:38:39,119
the good news is that the cosi

2281
01:38:35,920 --> 01:38:42,800
um ecosystem

2282
01:38:39,119 --> 01:38:45,920
uh is is present there are cosy

2283
01:38:42,800 --> 01:38:47,199
encoders and decoders right now that

2284
01:38:45,920 --> 01:38:47,760
doesn't necessarily mean they're all

2285
01:38:47,199 --> 01:38:51,440
going to be

2286
01:38:47,760 --> 01:38:55,600
interoperable but it's

2287
01:38:51,440 --> 01:38:59,839
it's something that's already in motion

2288
01:38:55,600 --> 01:38:59,840
so if you flip to the next slide

2289
01:39:02,400 --> 01:39:06,239
then this is similar to what was

2290
01:39:04,639 --> 01:39:08,960
presented for those interrelated

2291
01:39:06,239 --> 01:39:12,080
contexts for bp sec

2292
01:39:08,960 --> 01:39:14,800
that cosi this profile

2293
01:39:12,080 --> 01:39:15,840
requires uh authenticated encryption

2294
01:39:14,800 --> 01:39:18,480
with additional data

2295
01:39:15,840 --> 01:39:19,119
it requires certain structure that that

2296
01:39:18,480 --> 01:39:21,040
um

2297
01:39:19,119 --> 01:39:22,159
cosi doesn't mandate about all this

2298
01:39:21,040 --> 01:39:23,679
context data

2299
01:39:22,159 --> 01:39:25,040
that's coming out of the bundle that's

2300
01:39:23,679 --> 01:39:26,560
coming out of the primary block or the

2301
01:39:25,040 --> 01:39:29,760
the block header

2302
01:39:26,560 --> 01:39:32,639
of the target block so that's what this

2303
01:39:29,760 --> 01:39:33,040
profile nails down is how cosy fits into

2304
01:39:32,639 --> 01:39:37,840
the

2305
01:39:33,040 --> 01:39:37,840
bpsec environment and um

2306
01:39:39,199 --> 01:39:44,400
the one last statement is just that kosi

2307
01:39:42,719 --> 01:39:46,159
natively has this concept of a protected

2308
01:39:44,400 --> 01:39:49,119
header versus unprotected header

2309
01:39:46,159 --> 01:39:51,119
what gets what gets secured what gets uh

2310
01:39:49,119 --> 01:39:54,719
nailed down and what's

2311
01:39:51,119 --> 01:39:56,320
not what's potentially allowed to change

2312
01:39:54,719 --> 01:39:59,119
and this carries through with that same

2313
01:39:56,320 --> 01:40:01,280
concept so the security parameters

2314
01:39:59,119 --> 01:40:02,799
for this context are not part of the

2315
01:40:01,280 --> 01:40:05,920
protected data

2316
01:40:02,800 --> 01:40:07,119
if you flip bits in the parameters what

2317
01:40:05,920 --> 01:40:09,520
you'll end up with is

2318
01:40:07,119 --> 01:40:11,360
a signature that you can't verify or a

2319
01:40:09,520 --> 01:40:14,000
key that you can't

2320
01:40:11,360 --> 01:40:15,360
identify so it just causes things to

2321
01:40:14,000 --> 01:40:16,239
break but it's the exact same as if you

2322
01:40:15,360 --> 01:40:17,839
flip bits

2323
01:40:16,239 --> 01:40:19,280
in the cipher text or if you flip bits

2324
01:40:17,840 --> 01:40:23,760
in a signature

2325
01:40:19,280 --> 01:40:26,559
it'll just fail to operate properly

2326
01:40:23,760 --> 01:40:28,000
so so brian this is ed a couple of of

2327
01:40:26,560 --> 01:40:29,920
quick things number one

2328
01:40:28,000 --> 01:40:31,360
thank you so much for writing this up i

2329
01:40:29,920 --> 01:40:33,600
i think that having

2330
01:40:31,360 --> 01:40:36,000
more than one security context and

2331
01:40:33,600 --> 01:40:37,520
showing how you can accomplish uh you

2332
01:40:36,000 --> 01:40:39,920
know a variety of things

2333
01:40:37,520 --> 01:40:40,800
with the security context concept is

2334
01:40:39,920 --> 01:40:43,679
important

2335
01:40:40,800 --> 01:40:44,400
um it also if we get implementations of

2336
01:40:43,679 --> 01:40:46,000
this

2337
01:40:44,400 --> 01:40:47,519
and the default we can start doing

2338
01:40:46,000 --> 01:40:48,960
things like sizing comparisons

2339
01:40:47,520 --> 01:40:51,920
processing comparisons

2340
01:40:48,960 --> 01:40:53,360
how easy it is to push through code in

2341
01:40:51,920 --> 01:40:56,719
the bpas

2342
01:40:53,360 --> 01:40:59,759
the last is there is a draft out

2343
01:40:56,719 --> 01:41:00,320
for a security context template and it

2344
01:40:59,760 --> 01:41:02,639
might be

2345
01:41:00,320 --> 01:41:03,440
a good to look at how you formatted this

2346
01:41:02,639 --> 01:41:05,199
document

2347
01:41:03,440 --> 01:41:06,559
how the default security context

2348
01:41:05,199 --> 01:41:08,799
document was formed

2349
01:41:06,560 --> 01:41:11,280
to see if if we can then work together

2350
01:41:08,800 --> 01:41:13,840
on what would be a good template

2351
01:41:11,280 --> 01:41:15,199
to to give to other authors of other

2352
01:41:13,840 --> 01:41:16,800
security contexts

2353
01:41:15,199 --> 01:41:18,638
to make sure that the information is

2354
01:41:16,800 --> 01:41:21,760
presented in a in a

2355
01:41:18,639 --> 01:41:24,560
standard digestible way

2356
01:41:21,760 --> 01:41:25,119
yeah i have browsed that context

2357
01:41:24,560 --> 01:41:28,320
template

2358
01:41:25,119 --> 01:41:29,040
uh and i agree that it's good to try to

2359
01:41:28,320 --> 01:41:32,639
pull things

2360
01:41:29,040 --> 01:41:34,880
in line with that the only the only

2361
01:41:32,639 --> 01:41:36,560
bit of a nuance in this case is that

2362
01:41:34,880 --> 01:41:39,760
it's one context used

2363
01:41:36,560 --> 01:41:41,440
in two different security blocks

2364
01:41:39,760 --> 01:41:43,840
which is probably not something that was

2365
01:41:41,440 --> 01:41:45,360
originally looked at

2366
01:41:43,840 --> 01:41:47,199
like agreed and and the template

2367
01:41:45,360 --> 01:41:48,799
probably needs to be updated but we did

2368
01:41:47,199 --> 01:41:51,040
actually change bp sec

2369
01:41:48,800 --> 01:41:52,400
itself to note that you could have one

2370
01:41:51,040 --> 01:41:56,000
security context

2371
01:41:52,400 --> 01:41:58,799
that covers both bibs and bcb's okay

2372
01:41:56,000 --> 01:41:58,800
for that reason

2373
01:41:59,679 --> 01:42:04,560
okay thank you brian um any other any

2374
01:42:02,480 --> 01:42:06,320
further questions from the floor

2375
01:42:04,560 --> 01:42:09,440
i'm watching the clock and conscious

2376
01:42:06,320 --> 01:42:12,159
that uh other people

2377
01:42:09,440 --> 01:42:12,879
still have to speak thanks brian uh

2378
01:42:12,159 --> 01:42:15,679
right so

2379
01:42:12,880 --> 01:42:17,119
next up we have uh i believe fred

2380
01:42:15,679 --> 01:42:18,960
templin he says jumping between the

2381
01:42:17,119 --> 01:42:22,000
agenda very quickly no we don't

2382
01:42:18,960 --> 01:42:29,679
we have uh sarah heiner won bp sex

2383
01:42:22,000 --> 01:42:35,119
security templates perfect timing

2384
01:42:29,679 --> 01:42:42,320
security templates and policy the slides

2385
01:42:35,119 --> 01:42:46,559
are named subtly differently um

2386
01:42:42,320 --> 01:42:48,799
oh there we go sarah are you there

2387
01:42:46,560 --> 01:42:50,960
is your microphone working yeah you're a

2388
01:42:48,800 --> 01:42:53,520
little bit quiet

2389
01:42:50,960 --> 01:42:55,280
um i will i will try to speak up um but

2390
01:42:53,520 --> 01:42:56,480
let me know if anything is not coming

2391
01:42:55,280 --> 01:42:59,840
across clearly

2392
01:42:56,480 --> 01:43:01,678
so um i'll be conscious of time so

2393
01:42:59,840 --> 01:43:03,679
i'm sarah heiner i'm going to present a

2394
01:43:01,679 --> 01:43:06,320
little bit on security policy

2395
01:43:03,679 --> 01:43:07,679
and also the security operation life

2396
01:43:06,320 --> 01:43:11,840
cycle

2397
01:43:07,679 --> 01:43:11,840
so if we can move to the next slide

2398
01:43:15,119 --> 01:43:18,480
so we'll start with the discussion of

2399
01:43:17,040 --> 01:43:21,679
security policy for

2400
01:43:18,480 --> 01:43:23,599
bpsac we know that bpsec enables

2401
01:43:21,679 --> 01:43:25,119
the representation of a security

2402
01:43:23,600 --> 01:43:27,679
operation in a bundle

2403
01:43:25,119 --> 01:43:30,000
as an extension block and there's been

2404
01:43:27,679 --> 01:43:32,159
some work done to determine what the

2405
01:43:30,000 --> 01:43:34,719
life cycle of an extension block looks

2406
01:43:32,159 --> 01:43:38,799
like so you may have seen this in

2407
01:43:34,719 --> 01:43:41,600
the security context template draft

2408
01:43:38,800 --> 01:43:43,520
we are representing the life cycle of

2409
01:43:41,600 --> 01:43:44,880
that extension block as a series of

2410
01:43:43,520 --> 01:43:47,840
events that's both

2411
01:43:44,880 --> 01:43:48,400
finite and unchanging and that life

2412
01:43:47,840 --> 01:43:50,560
cycle

2413
01:43:48,400 --> 01:43:52,080
captures events that are associated with

2414
01:43:50,560 --> 01:43:55,360
both successful and

2415
01:43:52,080 --> 01:43:56,159
unsuccessful block processing so i want

2416
01:43:55,360 --> 01:43:57,759
to share

2417
01:43:56,159 --> 01:44:00,000
a little bit of a detailed look at that

2418
01:43:57,760 --> 01:44:01,920
life cycle

2419
01:44:00,000 --> 01:44:03,600
because it's security policy that

2420
01:44:01,920 --> 01:44:05,920
determines the reaction

2421
01:44:03,600 --> 01:44:07,199
to the occurrence of those events in the

2422
01:44:05,920 --> 01:44:09,760
life cycle

2423
01:44:07,199 --> 01:44:10,719
and we need consistent reactions to

2424
01:44:09,760 --> 01:44:14,400
those events

2425
01:44:10,719 --> 01:44:15,840
to enable end-to-end security so i feel

2426
01:44:14,400 --> 01:44:18,480
that there is value in

2427
01:44:15,840 --> 01:44:19,600
documenting the events in the block life

2428
01:44:18,480 --> 01:44:22,879
cycle as the

2429
01:44:19,600 --> 01:44:23,600
processing points for policy and that

2430
01:44:22,880 --> 01:44:26,400
would give us

2431
01:44:23,600 --> 01:44:28,159
a common language to use when discussing

2432
01:44:26,400 --> 01:44:32,559
policy

2433
01:44:28,159 --> 01:44:32,559
so if we can move to the next slide

2434
01:44:33,280 --> 01:44:36,639
so i'm sure that we can agree that the

2435
01:44:36,159 --> 01:44:39,839
use

2436
01:44:36,639 --> 01:44:41,840
of a security protocol like bpsec alone

2437
01:44:39,840 --> 01:44:44,080
doesn't provide end-to-end security we

2438
01:44:41,840 --> 01:44:46,719
also need that consistent security

2439
01:44:44,080 --> 01:44:49,600
policy in place

2440
01:44:46,719 --> 01:44:52,320
recall that bpsac requires the

2441
01:44:49,600 --> 01:44:54,320
establishment of a security context for

2442
01:44:52,320 --> 01:44:56,159
each security operation

2443
01:44:54,320 --> 01:44:59,840
since we aren't negotiating or

2444
01:44:56,159 --> 01:45:03,759
maintaining session information in a dtn

2445
01:44:59,840 --> 01:45:06,320
using that security context we

2446
01:45:03,760 --> 01:45:07,600
get syntactic interoperability for the

2447
01:45:06,320 --> 01:45:10,880
network

2448
01:45:07,600 --> 01:45:12,960
so we can parse and decode bundles

2449
01:45:10,880 --> 01:45:14,000
and we can generate cryptographic

2450
01:45:12,960 --> 01:45:17,440
material

2451
01:45:14,000 --> 01:45:17,840
using that security context but in order

2452
01:45:17,440 --> 01:45:20,719
to

2453
01:45:17,840 --> 01:45:23,080
derive meaning from that information we

2454
01:45:20,719 --> 01:45:24,800
need policy to provide semantic

2455
01:45:23,080 --> 01:45:27,840
interoperability

2456
01:45:24,800 --> 01:45:30,159
so it's not enough to come across the

2457
01:45:27,840 --> 01:45:31,840
correct cipher suite implementation for

2458
01:45:30,159 --> 01:45:34,559
a security service

2459
01:45:31,840 --> 01:45:35,520
we also need the policy settings to be

2460
01:45:34,560 --> 01:45:38,639
correct

2461
01:45:35,520 --> 01:45:40,400
in order to process a block and verify

2462
01:45:38,639 --> 01:45:41,760
the security service that it's

2463
01:45:40,400 --> 01:45:44,239
representing

2464
01:45:41,760 --> 01:45:44,960
so we need both security contacts and

2465
01:45:44,239 --> 01:45:47,599
policy

2466
01:45:44,960 --> 01:45:50,239
in order to derive meaning from security

2467
01:45:47,600 --> 01:45:50,239
services

2468
01:45:50,560 --> 01:45:53,440
next slide please

2469
01:45:57,440 --> 01:46:01,280
so we've defined security policy as the

2470
01:46:00,639 --> 01:46:04,400
set of

2471
01:46:01,280 --> 01:46:06,320
configurable reactions for a security

2472
01:46:04,400 --> 01:46:08,559
operation event

2473
01:46:06,320 --> 01:46:11,040
it's those configurable actions that

2474
01:46:08,560 --> 01:46:12,239
provide the consistent behavior that we

2475
01:46:11,040 --> 01:46:15,199
need in response

2476
01:46:12,239 --> 01:46:16,559
to both security successes and failures

2477
01:46:15,199 --> 01:46:19,919
which we're capturing as

2478
01:46:16,560 --> 01:46:21,920
events in this life cycle and as i

2479
01:46:19,920 --> 01:46:24,080
mentioned in the previous slide

2480
01:46:21,920 --> 01:46:25,360
policy is what's establishing that

2481
01:46:24,080 --> 01:46:28,400
critical context

2482
01:46:25,360 --> 01:46:28,880
for security processing and provides

2483
01:46:28,400 --> 01:46:31,679
meaning

2484
01:46:28,880 --> 01:46:34,719
for the presence or the absence of

2485
01:46:31,679 --> 01:46:40,320
security services

2486
01:46:34,719 --> 01:46:43,440
next slide please

2487
01:46:40,320 --> 01:46:44,480
so here we're moving into the life cycle

2488
01:46:43,440 --> 01:46:47,678
itself

2489
01:46:44,480 --> 01:46:50,400
um recall that bpsec allows both a

2490
01:46:47,679 --> 01:46:53,119
security operation and its associated

2491
01:46:50,400 --> 01:46:55,040
security context to be represented as a

2492
01:46:53,119 --> 01:46:57,119
block in the bundle

2493
01:46:55,040 --> 01:46:59,840
so that means that we can establish

2494
01:46:57,119 --> 01:47:01,360
universal policy points by tracking that

2495
01:46:59,840 --> 01:47:04,159
block life cycle

2496
01:47:01,360 --> 01:47:04,880
which is what's shown here the life

2497
01:47:04,159 --> 01:47:08,159
cycle

2498
01:47:04,880 --> 01:47:09,040
is a series of 13 events and they're

2499
01:47:08,159 --> 01:47:12,799
capturing

2500
01:47:09,040 --> 01:47:15,519
successful and unsuccessful processing

2501
01:47:12,800 --> 01:47:17,360
of the representation of a security

2502
01:47:15,520 --> 01:47:20,000
operation

2503
01:47:17,360 --> 01:47:22,880
you'll see that it's divided into three

2504
01:47:20,000 --> 01:47:24,080
distinct sections and that captures the

2505
01:47:22,880 --> 01:47:26,639
fact that the

2506
01:47:24,080 --> 01:47:28,880
life cycle of a security operation is

2507
01:47:26,639 --> 01:47:29,760
driven by the role of the processing

2508
01:47:28,880 --> 01:47:32,000
node

2509
01:47:29,760 --> 01:47:33,440
with those roles being the security

2510
01:47:32,000 --> 01:47:37,280
source verifier

2511
01:47:33,440 --> 01:47:39,360
and acceptor in the most basic case

2512
01:47:37,280 --> 01:47:41,119
a security operation would encounter

2513
01:47:39,360 --> 01:47:43,599
four events

2514
01:47:41,119 --> 01:47:45,759
a node would have to be identified as

2515
01:47:43,600 --> 01:47:47,920
the security source

2516
01:47:45,760 --> 01:47:50,000
for that operation it's required to be

2517
01:47:47,920 --> 01:47:52,320
represented in the bundle

2518
01:47:50,000 --> 01:47:54,239
it would then move to being successfully

2519
01:47:52,320 --> 01:47:57,840
represented in the bundle

2520
01:47:54,239 --> 01:48:00,559
arrive at its acceptor and then be

2521
01:47:57,840 --> 01:48:02,480
subsequently processed and removed from

2522
01:48:00,560 --> 01:48:04,000
the bundle

2523
01:48:02,480 --> 01:48:05,678
there are of course more than four

2524
01:48:04,000 --> 01:48:08,560
events shown here

2525
01:48:05,679 --> 01:48:09,440
and they're capturing the failures that

2526
01:48:08,560 --> 01:48:12,320
could occur

2527
01:48:09,440 --> 01:48:14,400
along the way for the processing of that

2528
01:48:12,320 --> 01:48:17,599
security operation

2529
01:48:14,400 --> 01:48:20,960
specifically a security operation can be

2530
01:48:17,600 --> 01:48:24,400
identified as missing misconfigured

2531
01:48:20,960 --> 01:48:27,520
or corrupted and identifying the

2532
01:48:24,400 --> 01:48:30,320
different security failures allows us to

2533
01:48:27,520 --> 01:48:31,600
configure security policy and take into

2534
01:48:30,320 --> 01:48:33,679
account the

2535
01:48:31,600 --> 01:48:35,520
severity of the event as well as the

2536
01:48:33,679 --> 01:48:38,159
implications that it might have for

2537
01:48:35,520 --> 01:48:38,159
security

2538
01:48:38,560 --> 01:48:42,800
jumping into the last slide please

2539
01:48:45,600 --> 01:48:50,560
so as a quick summary i think that the

2540
01:48:48,560 --> 01:48:53,440
work that's been done here to define

2541
01:48:50,560 --> 01:48:55,040
the series of events in the security

2542
01:48:53,440 --> 01:48:57,360
operation life cycle

2543
01:48:55,040 --> 01:48:58,800
would be valuable to standardize for

2544
01:48:57,360 --> 01:49:01,199
bpsac

2545
01:48:58,800 --> 01:49:02,159
it would give us a common language to

2546
01:49:01,199 --> 01:49:05,440
use when

2547
01:49:02,159 --> 01:49:06,080
discussing and defining policy and while

2548
01:49:05,440 --> 01:49:09,040
we can't

2549
01:49:06,080 --> 01:49:11,600
standardize the reaction to these events

2550
01:49:09,040 --> 01:49:14,480
as that's a matter of policy itself

2551
01:49:11,600 --> 01:49:15,440
it's beneficial to define the events

2552
01:49:14,480 --> 01:49:18,080
themselves

2553
01:49:15,440 --> 01:49:19,678
as they are the processing points for

2554
01:49:18,080 --> 01:49:23,040
policy

2555
01:49:19,679 --> 01:49:24,719
so with that brief rapid fire

2556
01:49:23,040 --> 01:49:26,320
presentation

2557
01:49:24,719 --> 01:49:28,239
if there are any questions or comments

2558
01:49:26,320 --> 01:49:29,440
i'd appreciate them and if you'd rather

2559
01:49:28,239 --> 01:49:32,718
take it to the

2560
01:49:29,440 --> 01:49:34,480
mailing list as a matter of time sounds

2561
01:49:32,719 --> 01:49:37,280
good to me

2562
01:49:34,480 --> 01:49:37,678
thanks sarah um yeah really interesting

2563
01:49:37,280 --> 01:49:39,759
stuff

2564
01:49:37,679 --> 01:49:41,440
uh i uh informational draft be

2565
01:49:39,760 --> 01:49:43,599
absolutely brilliant about this

2566
01:49:41,440 --> 01:49:45,040
sort of thing that would be great um i'm

2567
01:49:43,599 --> 01:49:48,480
going to close the line

2568
01:49:45,040 --> 01:49:51,920
comments on the list everybody please

2569
01:49:48,480 --> 01:49:55,280
thank you very much next we

2570
01:49:51,920 --> 01:49:57,840
have uh fred templin fred if you're

2571
01:49:55,280 --> 01:49:57,840
there

2572
01:49:58,080 --> 01:50:02,000
let me just find some slides for you

2573
01:50:06,800 --> 01:50:10,719
good news fred so a little point of

2574
01:50:10,159 --> 01:50:14,638
order

2575
01:50:10,719 --> 01:50:17,760
um the last item we have

2576
01:50:14,639 --> 01:50:21,679
is uh after this slide is a

2577
01:50:17,760 --> 01:50:22,639
demonstration by uh dave from apl who

2578
01:50:21,679 --> 01:50:26,159
has got some

2579
01:50:22,639 --> 01:50:28,560
quite fun tools for playing with uh

2580
01:50:26,159 --> 01:50:29,199
amp which is the asynchronous messaging

2581
01:50:28,560 --> 01:50:31,760
we're gonna

2582
01:50:29,199 --> 01:50:32,719
run along on this session so we'll fix

2583
01:50:31,760 --> 01:50:34,800
we'll get dave

2584
01:50:32,719 --> 01:50:35,760
in after we have officially finished the

2585
01:50:34,800 --> 01:50:39,520
session

2586
01:50:35,760 --> 01:50:41,040
um so just our intention is to run long

2587
01:50:39,520 --> 01:50:42,960
i understand some people have to leave

2588
01:50:41,040 --> 01:50:44,159
but that does give fred uh his ten

2589
01:50:42,960 --> 01:50:47,360
minutes because this is

2590
01:50:44,159 --> 01:50:47,759
another convergence layer and looks like

2591
01:50:47,360 --> 01:50:49,440
it's

2592
01:50:47,760 --> 01:50:51,599
it's really interesting stuff so go

2593
01:50:49,440 --> 01:50:54,239
ahead fred

2594
01:50:51,599 --> 01:50:56,239
okay thanks rick so um the title of this

2595
01:50:54,239 --> 01:50:58,000
is ltp fragmentation but it really

2596
01:50:56,239 --> 01:51:00,799
concerns anything that uses

2597
01:50:58,000 --> 01:51:03,520
the udp convergence layer so let's go on

2598
01:51:00,800 --> 01:51:03,520
to the next chart

2599
01:51:04,960 --> 01:51:10,880
so ltp provides a reliable datagram

2600
01:51:08,320 --> 01:51:12,480
convergence layer for dtn bundle

2601
01:51:10,880 --> 01:51:14,800
protocol

2602
01:51:12,480 --> 01:51:16,080
it's often configured over the udp

2603
01:51:14,800 --> 01:51:18,719
transport layer

2604
01:51:16,080 --> 01:51:20,000
and it inherits its maximum segment size

2605
01:51:18,719 --> 01:51:23,119
from the maximum size

2606
01:51:20,000 --> 01:51:24,000
udp datagram that can be sent the

2607
01:51:23,119 --> 01:51:25,759
document

2608
01:51:24,000 --> 01:51:27,199
discusses interactions with ip

2609
01:51:25,760 --> 01:51:29,280
fragmentation

2610
01:51:27,199 --> 01:51:32,000
and mitigations for managing the amount

2611
01:51:29,280 --> 01:51:34,239
of ipv fragmentation employed

2612
01:51:32,000 --> 01:51:36,080
and it applies to any udp transport

2613
01:51:34,239 --> 01:51:38,239
layer user and not just ltp

2614
01:51:36,080 --> 01:51:39,280
anything that might use the bundle

2615
01:51:38,239 --> 01:51:44,320
protocol over

2616
01:51:39,280 --> 01:51:44,320
over the udp transport layer next chart

2617
01:51:46,840 --> 01:51:51,280
please

2618
01:51:48,400 --> 01:51:53,440
so the bp convergence layers c uh such

2619
01:51:51,280 --> 01:51:55,679
as ltp often use the edp transport layer

2620
01:51:53,440 --> 01:51:58,960
to break bundles into segments

2621
01:51:55,679 --> 01:52:01,760
as the largest atomic block of data uh

2622
01:51:58,960 --> 01:52:03,599
the underlying data datalink layers must

2623
01:52:01,760 --> 01:52:05,280
deliver it as a single unit

2624
01:52:03,599 --> 01:52:07,040
and it's also known as the the

2625
01:52:05,280 --> 01:52:09,360
re-transmission unit

2626
01:52:07,040 --> 01:52:11,119
each loss segment must be retransmitted

2627
01:52:09,360 --> 01:52:13,199
in its entirety

2628
01:52:11,119 --> 01:52:14,320
so when udp transport layer uses

2629
01:52:13,199 --> 01:52:17,598
transmit

2630
01:52:14,320 --> 01:52:19,599
a segment via send message the sms

2631
01:52:17,599 --> 01:52:21,679
message system called the udp layer

2632
01:52:19,599 --> 01:52:24,320
presents the resulting udp datagram to

2633
01:52:21,679 --> 01:52:26,480
the ip layer for transmission

2634
01:52:24,320 --> 01:52:28,080
the path maximum transmission unit or

2635
01:52:26,480 --> 01:52:30,559
the path mtu

2636
01:52:28,080 --> 01:52:33,440
reflects the smallest link mtu in the

2637
01:52:30,560 --> 01:52:35,760
path from the sender to the receiver

2638
01:52:33,440 --> 01:52:37,839
udp datagrams larger than the path mtr

2639
01:52:35,760 --> 01:52:39,760
are broken into fragments using ip

2640
01:52:37,840 --> 01:52:41,840
fragmentation

2641
01:52:39,760 --> 01:52:43,760
so for example if the segment size is

2642
01:52:41,840 --> 01:52:47,119
64k bytes

2643
01:52:43,760 --> 01:52:48,560
and the path mtu is only 1280 bytes ip

2644
01:52:47,119 --> 01:52:51,040
fragmentation results in

2645
01:52:48,560 --> 01:52:52,800
50 50 plus fragments that are all

2646
01:52:51,040 --> 01:52:55,760
transmitted as individual ipv

2647
01:52:52,800 --> 01:52:58,239
packets and the ip fragment sizes then

2648
01:52:55,760 --> 01:53:00,480
becomes known as the loss unit

2649
01:52:58,239 --> 01:53:01,519
so performance can suffer when the loss

2650
01:53:00,480 --> 01:53:03,119
unit

2651
01:53:01,520 --> 01:53:04,880
is significantly smaller than the

2652
01:53:03,119 --> 01:53:06,639
re-transmission unit

2653
01:53:04,880 --> 01:53:08,000
in other words if even a single ip

2654
01:53:06,639 --> 01:53:10,840
fragment is lost

2655
01:53:08,000 --> 01:53:12,560
then the entire segment must be

2656
01:53:10,840 --> 01:53:15,360
retransmitted

2657
01:53:12,560 --> 01:53:15,360
next chart place

2658
01:53:21,119 --> 01:53:26,000
so when we use a udp datagram size for

2659
01:53:24,159 --> 01:53:28,239
example 64k bytes

2660
01:53:26,000 --> 01:53:29,840
that's larger than the path mtu it has

2661
01:53:28,239 --> 01:53:31,598
some advantages

2662
01:53:29,840 --> 01:53:33,440
first the operating system can move

2663
01:53:31,599 --> 01:53:35,119
larger quantities of data from user

2664
01:53:33,440 --> 01:53:38,000
space to kernel space

2665
01:53:35,119 --> 01:53:39,440
in a single send message system call but

2666
01:53:38,000 --> 01:53:42,560
once inside the kernel

2667
01:53:39,440 --> 01:53:44,559
ip fragmentation results in a burst of

2668
01:53:42,560 --> 01:53:45,760
multiple fragment packets transmitted

2669
01:53:44,560 --> 01:53:48,719
back to back

2670
01:53:45,760 --> 01:53:50,320
as a result of a single system call

2671
01:53:48,719 --> 01:53:52,239
during these burst periods the network

2672
01:53:50,320 --> 01:53:54,480
utilization is high

2673
01:53:52,239 --> 01:53:57,119
so an ip fragment bursting can be good

2674
01:53:54,480 --> 01:53:58,879
as long as there's minimal loss

2675
01:53:57,119 --> 01:54:00,960
but when the loss is significant

2676
01:53:58,880 --> 01:54:03,679
re-transmission is required

2677
01:54:00,960 --> 01:54:05,280
uh and with also with ipv version 4

2678
01:54:03,679 --> 01:54:07,760
undetected reassembly

2679
01:54:05,280 --> 01:54:09,599
errors are also possible due to ip wrap

2680
01:54:07,760 --> 01:54:11,599
around possibilities

2681
01:54:09,599 --> 01:54:13,360
so each successive send message system

2682
01:54:11,599 --> 01:54:14,159
call results in an independent burst

2683
01:54:13,360 --> 01:54:16,320
event

2684
01:54:14,159 --> 01:54:20,159
so the delay between successive system

2685
01:54:16,320 --> 01:54:20,159
calls determines the network utilization

2686
01:54:20,400 --> 01:54:23,839
next chart

2687
01:54:26,800 --> 01:54:31,440
in real world networks ip fragmentation

2688
01:54:29,679 --> 01:54:33,199
may not be compatible with the lost

2689
01:54:31,440 --> 01:54:35,119
properties of the path

2690
01:54:33,199 --> 01:54:37,040
so how do we achieve the benefits of

2691
01:54:35,119 --> 01:54:38,480
bursting without making this

2692
01:54:37,040 --> 01:54:40,320
the lost unit smaller than the

2693
01:54:38,480 --> 01:54:42,080
re-transmission unit

2694
01:54:40,320 --> 01:54:44,400
so the answer is that some operating

2695
01:54:42,080 --> 01:54:47,599
systems support what's known as the send

2696
01:54:44,400 --> 01:54:48,960
multiple message system call or send mm

2697
01:54:47,599 --> 01:54:50,560
message

2698
01:54:48,960 --> 01:54:52,560
and that allows an application to

2699
01:54:50,560 --> 01:54:54,400
present multiple segments to the kernel

2700
01:54:52,560 --> 01:54:57,599
in a single system call

2701
01:54:54,400 --> 01:54:58,799
so for example you might present 16 4k

2702
01:54:57,599 --> 01:55:02,000
byte segments

2703
01:54:58,800 --> 01:55:03,760
instead of just one 64 gigabyte segment

2704
01:55:02,000 --> 01:55:05,280
and that enables the use of smaller

2705
01:55:03,760 --> 01:55:06,639
segments without increasing the number

2706
01:55:05,280 --> 01:55:09,119
of system calls

2707
01:55:06,639 --> 01:55:11,599
it provides the benefits of bursting

2708
01:55:09,119 --> 01:55:13,440
while using smaller segment size

2709
01:55:11,599 --> 01:55:16,000
so that means that the loss unit can be

2710
01:55:13,440 --> 01:55:18,239
made closer to the re-transmission unit

2711
01:55:16,000 --> 01:55:19,119
so that loss of a single ip packet or

2712
01:55:18,239 --> 01:55:20,959
fragment

2713
01:55:19,119 --> 01:55:22,400
results in the retransmission of far

2714
01:55:20,960 --> 01:55:24,239
less data

2715
01:55:22,400 --> 01:55:26,159
and we can even tune the amount of ip

2716
01:55:24,239 --> 01:55:28,799
fragmentation allowed we can have

2717
01:55:26,159 --> 01:55:30,559
none some moral ip fragmentation or lots

2718
01:55:28,800 --> 01:55:32,239
of ip fragmentation

2719
01:55:30,560 --> 01:55:33,599
while presenting multiple segments in a

2720
01:55:32,239 --> 01:55:37,678
single system called

2721
01:55:33,599 --> 01:55:40,239
produce a burst of bursts

2722
01:55:37,679 --> 01:55:40,239
next chart

2723
01:55:44,800 --> 01:55:49,040
so we've implemented this in the uh the

2724
01:55:47,199 --> 01:55:49,919
ion implementation and demonstrated its

2725
01:55:49,040 --> 01:55:51,599
use

2726
01:55:49,920 --> 01:55:53,679
uh it allows for setting both the

2727
01:55:51,599 --> 01:55:54,320
segment size which is the edp datagram

2728
01:55:53,679 --> 01:55:56,639
size

2729
01:55:54,320 --> 01:55:58,159
and a burst limit and preliminary

2730
01:55:56,639 --> 01:55:59,679
performance results showed an increase

2731
01:55:58,159 --> 01:56:02,480
in network utilization

2732
01:55:59,679 --> 01:56:03,280
without causing receiver congestion it

2733
01:56:02,480 --> 01:56:05,519
can be made

2734
01:56:03,280 --> 01:56:07,440
adaptive to control both the amount of

2735
01:56:05,520 --> 01:56:08,960
ipv fragmentation permitted

2736
01:56:07,440 --> 01:56:11,440
and the number of segments presented the

2737
01:56:08,960 --> 01:56:14,239
kernel in a single system call

2738
01:56:11,440 --> 01:56:16,960
and further performance characterization

2739
01:56:14,239 --> 01:56:20,638
efforts are underway

2740
01:56:16,960 --> 01:56:20,639
and i think that's last my charts wreck

2741
01:56:23,199 --> 01:56:27,440
thanks fred i was on mute sorry that's

2742
01:56:26,480 --> 01:56:31,360
really interesting i

2743
01:56:27,440 --> 01:56:34,000
i have one quick question um and

2744
01:56:31,360 --> 01:56:35,040
which is no i'll take it to the list

2745
01:56:34,000 --> 01:56:36,560
i'll take because there's purely an

2746
01:56:35,040 --> 01:56:37,920
implementation detail to do with linux

2747
01:56:36,560 --> 01:56:40,159
kernel optimization but

2748
01:56:37,920 --> 01:56:41,520
so that's fine but really interesting to

2749
01:56:40,159 --> 01:56:44,000
talk about the

2750
01:56:41,520 --> 01:56:45,920
um re-transmission and packet

2751
01:56:44,000 --> 01:56:49,040
subdivision that that hadn't

2752
01:56:45,920 --> 01:56:49,440
really worked i hadn't hit that one

2753
01:56:49,040 --> 01:56:51,199
that's

2754
01:56:49,440 --> 01:56:53,678
that's really interesting i'm thank you

2755
01:56:51,199 --> 01:56:55,040
for that one point i'll say rick is that

2756
01:56:53,679 --> 01:56:56,719
yeah after it's currently

2757
01:56:55,040 --> 01:56:58,400
expired but i'm going to be reposting

2758
01:56:56,719 --> 01:57:00,639
the draft uh uh

2759
01:56:58,400 --> 01:57:01,839
in the next couple of days that would be

2760
01:57:00,639 --> 01:57:04,400
great um

2761
01:57:01,840 --> 01:57:05,280
yeah so so that's that's should be of

2762
01:57:04,400 --> 01:57:08,799
real interest to

2763
01:57:05,280 --> 01:57:11,840
the working group so have a look um

2764
01:57:08,800 --> 01:57:11,840
any other questions

2765
01:57:13,599 --> 01:57:18,080
nope okay so uh as i said earlier we're

2766
01:57:16,239 --> 01:57:21,519
going to slightly overrun because

2767
01:57:18,080 --> 01:57:22,960
um we've had a very busy schedule i'm

2768
01:57:21,520 --> 01:57:25,040
really pleased we've had a very busy

2769
01:57:22,960 --> 01:57:28,480
schedule but while i

2770
01:57:25,040 --> 01:57:32,639
line up uh david adele's uh

2771
01:57:28,480 --> 01:57:34,718
slides um i don't mind i will try to

2772
01:57:32,639 --> 01:57:35,920
share my screen and just give a live

2773
01:57:34,719 --> 01:57:39,520
demo

2774
01:57:35,920 --> 01:57:41,360
yeah yeah yeah go for it go for it

2775
01:57:39,520 --> 01:57:42,639
so we're going to run long i understand

2776
01:57:41,360 --> 01:57:46,000
if people have to

2777
01:57:42,639 --> 01:57:48,320
um quit out but we'll try and

2778
01:57:46,000 --> 01:57:49,920
uh run a little bit longer david you've

2779
01:57:48,320 --> 01:57:52,080
probably got about 10 minutes before me

2780
01:57:49,920 --> 01:57:56,080
techo take the entire service down

2781
01:57:52,080 --> 01:57:59,360
but i mean

2782
01:57:56,080 --> 01:58:00,719
you should have permission to share yep

2783
01:57:59,360 --> 01:58:04,000
all right there we go

2784
01:58:00,719 --> 01:58:07,040
got it so i've talked about the amp me

2785
01:58:04,000 --> 01:58:07,760
tool which is a prototype experimental

2786
01:58:07,040 --> 01:58:11,679
tool

2787
01:58:07,760 --> 01:58:14,800
that does a variety of things to

2788
01:58:11,679 --> 01:58:16,159
help management and interfacing with

2789
01:58:14,800 --> 01:58:17,440
network manager

2790
01:58:16,159 --> 01:58:20,480
so i'm going to show off a couple of

2791
01:58:17,440 --> 01:58:22,879
things that i can do it also is

2792
01:58:20,480 --> 01:58:24,879
a prototype of showing off a lot of

2793
01:58:22,880 --> 01:58:26,880
things that we could do

2794
01:58:24,880 --> 01:58:28,800
with the ui in the future with many

2795
01:58:26,880 --> 01:58:32,080
stubbed out features

2796
01:58:28,800 --> 01:58:34,400
so the main functionality of it is

2797
01:58:32,080 --> 01:58:36,719
taking amp messages and converting them

2798
01:58:34,400 --> 01:58:39,119
between various formats

2799
01:58:36,719 --> 01:58:41,520
so over here i've already pasted in a

2800
01:58:39,119 --> 01:58:45,280
sample uri format

2801
01:58:41,520 --> 01:58:47,760
if i parse it you see in the summary it

2802
01:58:45,280 --> 01:58:49,119
shows the input it outputs it in cyborg

2803
01:58:47,760 --> 01:58:52,719
format

2804
01:58:49,119 --> 01:58:55,598
back to the uri and a variety of json

2805
01:58:52,719 --> 01:58:57,199
and also shows how it can re-encode into

2806
01:58:55,599 --> 01:58:59,840
c-bor

2807
01:58:57,199 --> 01:59:01,280
alternatively i can pass it in seabor

2808
01:58:59,840 --> 01:59:05,119
encoded

2809
01:59:01,280 --> 01:59:08,159
string and it'll decode

2810
01:59:05,119 --> 01:59:09,519
over here you see it's has each of the

2811
01:59:08,159 --> 01:59:12,159
hex values

2812
01:59:09,520 --> 01:59:13,760
what the type is and how it decodes so

2813
01:59:12,159 --> 01:59:17,839
this is very useful when

2814
01:59:13,760 --> 01:59:17,840
doing implementations and debugging

2815
01:59:17,920 --> 01:59:21,760
in addition there's a uml view

2816
01:59:22,080 --> 01:59:29,199
which breaks down the message into a

2817
01:59:25,840 --> 01:59:31,599
very nice diagram which

2818
01:59:29,199 --> 01:59:34,480
is very helpful when trying to debug why

2819
01:59:31,599 --> 01:59:36,560
an implementation isn't working

2820
01:59:34,480 --> 01:59:37,678
uh you'll notice in the uri format here

2821
01:59:36,560 --> 01:59:40,719
for the hex

2822
01:59:37,679 --> 01:59:44,400
it is prefixed with a

2823
01:59:40,719 --> 01:59:45,440
term here ari means this is an ari

2824
01:59:44,400 --> 01:59:47,679
message

2825
01:59:45,440 --> 01:59:49,759
you could also use message for an

2826
01:59:47,679 --> 01:59:53,360
individual message report

2827
01:59:49,760 --> 01:59:55,840
or messages for a message group

2828
01:59:53,360 --> 01:59:58,239
uh currently the ion and a manager will

2829
01:59:55,840 --> 02:00:01,840
actually output in the debug

2830
01:59:58,239 --> 02:00:04,239
uh that's prefix when it's receiving

2831
02:00:01,840 --> 02:00:04,239
traffic

2832
02:00:05,520 --> 02:00:12,800
so well so this entire interface

2833
02:00:10,000 --> 02:00:13,679
is written actually in javascript right

2834
02:00:12,800 --> 02:00:15,360
now

2835
02:00:13,679 --> 02:00:17,119
functionality i just shown was running

2836
02:00:15,360 --> 02:00:19,199
entirely in the browser

2837
02:00:17,119 --> 02:00:22,000
but it's also designed so it can run in

2838
02:00:19,199 --> 02:00:25,678
node.js via the command line

2839
02:00:22,000 --> 02:00:28,560
so if i switch over here and scroll up

2840
02:00:25,679 --> 02:00:29,840
and i can run the same decommutation in

2841
02:00:28,560 --> 02:00:34,800
the browser

2842
02:00:29,840 --> 02:00:34,800
in the command line and

2843
02:00:35,599 --> 02:00:44,719
three this is for the seaboard version

2844
02:00:41,520 --> 02:00:45,920
so other capabilities that someone say

2845
02:00:44,719 --> 02:00:48,719
something

2846
02:00:45,920 --> 02:00:50,880
no no sorry that was me i should have

2847
02:00:48,719 --> 02:00:54,159
muted my microphone

2848
02:00:50,880 --> 02:00:54,880
no problem so other capabilities you see

2849
02:00:54,159 --> 02:00:57,920
here

2850
02:00:54,880 --> 02:00:59,119
it's showing a list of agents right now

2851
02:00:57,920 --> 02:01:02,560
it is querying this

2852
02:00:59,119 --> 02:01:03,199
both from the running uh network manager

2853
02:01:02,560 --> 02:01:06,800
instance

2854
02:01:03,199 --> 02:01:09,598
using the rest api that was uh

2855
02:01:06,800 --> 02:01:12,159
included in the last release and it is

2856
02:01:09,599 --> 02:01:15,199
also querying the mysql database

2857
02:01:12,159 --> 02:01:17,920
and showing records in there so

2858
02:01:15,199 --> 02:01:19,839
this entry is only on the manager it

2859
02:01:17,920 --> 02:01:21,599
wasn't inserted in the database

2860
02:01:19,840 --> 02:01:23,360
primarily because database was all

2861
02:01:21,599 --> 02:01:25,679
flying mystar of the manager

2862
02:01:23,360 --> 02:01:26,639
so it's just showing the name here it's

2863
02:01:25,679 --> 02:01:30,960
showing the name

2864
02:01:26,639 --> 02:01:32,400
and database id this page is primarily a

2865
02:01:30,960 --> 02:01:34,239
placeholder

2866
02:01:32,400 --> 02:01:36,799
as you can see there are future tabs

2867
02:01:34,239 --> 02:01:39,598
here for actually displaying reports

2868
02:01:36,800 --> 02:01:43,119
and sending controls all things that i

2869
02:01:39,599 --> 02:01:43,119
hope we will add to it in the future

2870
02:01:43,360 --> 02:01:47,040
uh last time i gave this demo somebody

2871
02:01:45,280 --> 02:01:48,880
commented that would be useful

2872
02:01:47,040 --> 02:01:50,080
to actually view some of the atms and

2873
02:01:48,880 --> 02:01:52,800
controls

2874
02:01:50,080 --> 02:01:54,880
so there is an adm listing view here

2875
02:01:52,800 --> 02:01:56,159
this shows all of the adms that are

2876
02:01:54,880 --> 02:01:57,920
available

2877
02:01:56,159 --> 02:02:00,239
you can double click here to go to the

2878
02:01:57,920 --> 02:02:03,199
ietf page

2879
02:02:00,239 --> 02:02:04,879
with a raw definition which of course

2880
02:02:03,199 --> 02:02:06,799
maintenance low

2881
02:02:04,880 --> 02:02:08,000
or you can double click anywhere else

2882
02:02:06,800 --> 02:02:11,760
and it'll show you the raw

2883
02:02:08,000 --> 02:02:13,199
json file which the uh node.js script

2884
02:02:11,760 --> 02:02:16,400
here is actually using

2885
02:02:13,199 --> 02:02:17,199
to control a lot of the parsing and it's

2886
02:02:16,400 --> 02:02:20,000
how it's

2887
02:02:17,199 --> 02:02:20,879
able to decommute decommutate some of

2888
02:02:20,000 --> 02:02:24,400
the

2889
02:02:20,880 --> 02:02:27,760
uris uh

2890
02:02:24,400 --> 02:02:31,598
let's see so

2891
02:02:27,760 --> 02:02:33,679
one other thing i can show off this

2892
02:02:31,599 --> 02:02:35,199
so as i said this is has command line

2893
02:02:33,679 --> 02:02:37,199
tools as well

2894
02:02:35,199 --> 02:02:38,719
while the sql support is not in the web

2895
02:02:37,199 --> 02:02:40,480
ui now

2896
02:02:38,719 --> 02:02:41,920
that's primarily just a matter of

2897
02:02:40,480 --> 02:02:44,879
hooking up the logic

2898
02:02:41,920 --> 02:02:46,320
but there are scripts such as an insert

2899
02:02:44,880 --> 02:02:49,040
message here

2900
02:02:46,320 --> 02:02:49,040
where i gave it

2901
02:02:51,199 --> 02:02:57,280
i gave it here a

2902
02:02:54,480 --> 02:02:58,959
uri format of a control and it's

2903
02:02:57,280 --> 02:03:02,400
inserted into the database

2904
02:02:58,960 --> 02:03:04,480
and told me the id if my

2905
02:03:02,400 --> 02:03:05,679
manager was actually running properly

2906
02:03:04,480 --> 02:03:09,040
right now

2907
02:03:05,679 --> 02:03:11,440
it would parse it and the send it out

2908
02:03:09,040 --> 02:03:13,199
and the response report would come back

2909
02:03:11,440 --> 02:03:15,360
into the database

2910
02:03:13,199 --> 02:03:17,519
right now my connectivity isn't running

2911
02:03:15,360 --> 02:03:20,559
so we can't see the report

2912
02:03:17,520 --> 02:03:23,440
but if we did there is also a

2913
02:03:20,560 --> 02:03:25,440
show script here this case i'm just

2914
02:03:23,440 --> 02:03:28,320
showing the control that was sent

2915
02:03:25,440 --> 02:03:31,839
but the same command works for ids of

2916
02:03:28,320 --> 02:03:31,840
reports that were received as well

2917
02:03:31,920 --> 02:03:36,880
all of this is planned to be included in

2918
02:03:35,040 --> 02:03:38,320
the next ion release

2919
02:03:36,880 --> 02:03:40,320
though as i noted this is still

2920
02:03:38,320 --> 02:03:43,040
experimental and

2921
02:03:40,320 --> 02:03:45,040
not all data types will be working in

2922
02:03:43,040 --> 02:03:47,360
the sql database yet

2923
02:03:45,040 --> 02:03:49,119
and on the amp me side while it should

2924
02:03:47,360 --> 02:03:52,480
be able to decode everything

2925
02:03:49,119 --> 02:03:53,440
from the hex cbor format i believe some

2926
02:03:52,480 --> 02:03:57,839
uri

2927
02:03:53,440 --> 02:03:57,839
uh syntax may not be complete

2928
02:03:58,079 --> 02:04:05,280
so david as i understand it this is

2929
02:04:01,840 --> 02:04:07,920
effectively a a uh a

2930
02:04:05,280 --> 02:04:09,599
prototype of functionality that that one

2931
02:04:07,920 --> 02:04:14,480
would have in a

2932
02:04:09,599 --> 02:04:17,840
networks operations center for um

2933
02:04:14,480 --> 02:04:22,959
managing in in the loosest sense um a

2934
02:04:17,840 --> 02:04:22,960
series of devices using amp for um

2935
02:04:23,040 --> 02:04:28,400
for management so this is handling and

2936
02:04:26,239 --> 02:04:30,320
decoding the messages from their

2937
02:04:28,400 --> 02:04:32,480
heavily encoded form down to something

2938
02:04:30,320 --> 02:04:35,360
manageable understanding the reports

2939
02:04:32,480 --> 02:04:36,718
uh allowing humans to understand what on

2940
02:04:35,360 --> 02:04:39,280
earth is going on

2941
02:04:36,719 --> 02:04:41,920
and and see the traffic flow as well as

2942
02:04:39,280 --> 02:04:44,960
the the data itself is that right

2943
02:04:41,920 --> 02:04:47,920
correct it is providing both a tool for

2944
02:04:44,960 --> 02:04:50,320
developers in this amp me mode

2945
02:04:47,920 --> 02:04:51,280
where you put in more of the raw seabor

2946
02:04:50,320 --> 02:04:54,000
to help debug

2947
02:04:51,280 --> 02:04:56,079
issues and the intent is to also as you

2948
02:04:54,000 --> 02:04:56,719
say in an operational point you would

2949
02:04:56,079 --> 02:04:58,480
have

2950
02:04:56,719 --> 02:05:06,079
the database view to view more

2951
02:04:58,480 --> 02:05:08,079
user-friendly forms

2952
02:05:06,079 --> 02:05:10,400
is really uh it's really interesting

2953
02:05:08,079 --> 02:05:11,040
work and and when we start talking about

2954
02:05:10,400 --> 02:05:12,559
the

2955
02:05:11,040 --> 02:05:15,119
concept what does it mean to do

2956
02:05:12,560 --> 02:05:18,719
asynchronous network management

2957
02:05:15,119 --> 02:05:20,400
uh you know the the ion distribution as

2958
02:05:18,719 --> 02:05:21,360
a reference implementation of bundle

2959
02:05:20,400 --> 02:05:24,719
protocol

2960
02:05:21,360 --> 02:05:25,440
and dtn protocols in general you can use

2961
02:05:24,719 --> 02:05:28,320
amp

2962
02:05:25,440 --> 02:05:31,440
to configure and run ion to configure

2963
02:05:28,320 --> 02:05:34,880
security to configure ltp to configure

2964
02:05:31,440 --> 02:05:36,079
uh ipn and naming and so on and and

2965
02:05:34,880 --> 02:05:38,639
these kinds of uh

2966
02:05:36,079 --> 02:05:40,320
utilities on the front side uh allow you

2967
02:05:38,639 --> 02:05:42,639
to then start putting that into

2968
02:05:40,320 --> 02:05:44,159
you know the the text-based scripts

2969
02:05:42,639 --> 02:05:45,280
compiling them into the seabor

2970
02:05:44,159 --> 02:05:46,799
representation

2971
02:05:45,280 --> 02:05:48,719
and then sending them the agents that

2972
02:05:46,800 --> 02:05:51,599
will that will implement them

2973
02:05:48,719 --> 02:05:53,360
and so it's as as you do all of that

2974
02:05:51,599 --> 02:05:54,960
these kind of tools will become

2975
02:05:53,360 --> 02:05:57,199
more and there are a couple of projects

2976
02:05:54,960 --> 02:05:57,920
and other organizations that are also

2977
02:05:57,199 --> 02:06:00,799
starting to

2978
02:05:57,920 --> 02:06:02,880
to bring these tools uh together and and

2979
02:06:00,800 --> 02:06:04,400
release them open sword

2980
02:06:02,880 --> 02:06:06,719
yeah and the hope is that eventually a

2981
02:06:04,400 --> 02:06:07,519
lot of these tools can work together to

2982
02:06:06,719 --> 02:06:10,639
give a

2983
02:06:07,520 --> 02:06:10,639
complete uh picture

2984
02:06:12,560 --> 02:06:16,639
that's really interesting and dave thank

2985
02:06:14,719 --> 02:06:18,159
you for offering a live demo on short

2986
02:06:16,639 --> 02:06:20,639
notice i think that's a lot more

2987
02:06:18,159 --> 02:06:23,519
interesting than slides

2988
02:06:20,639 --> 02:06:24,800
always i know that was a rapid fire

2989
02:06:23,520 --> 02:06:27,199
demonstration but

2990
02:06:24,800 --> 02:06:28,159
hopefully that was worth the extra 10

2991
02:06:27,199 --> 02:06:31,280
minutes into

2992
02:06:28,159 --> 02:06:33,360
our overage okay

2993
02:06:31,280 --> 02:06:34,639
so on that note uh i think we've

2994
02:06:33,360 --> 02:06:35,839
probably got to call it then because we

2995
02:06:34,639 --> 02:06:37,679
have overrun

2996
02:06:35,840 --> 02:06:39,360
um thank you very much all the

2997
02:06:37,679 --> 02:06:40,320
presenters thank you very much all the

2998
02:06:39,360 --> 02:06:43,119
attendees

2999
02:06:40,320 --> 02:06:43,840
uh whatever your time zone i appreciate

3000
02:06:43,119 --> 02:06:46,880
you making the

3001
02:06:43,840 --> 02:06:46,880
effort um

3002
02:06:47,440 --> 02:06:50,559
yeah so we're meeting again it's a

3003
02:06:48,880 --> 02:06:52,560
virtual interim in march

3004
02:06:50,560 --> 02:06:54,079
early march i think eighth ninth

3005
02:06:52,560 --> 02:06:55,920
something like that we haven't got dates

3006
02:06:54,079 --> 02:06:58,639
for the actual dtn session but

3007
02:06:55,920 --> 02:07:00,239
uh early march put in your diary this

3008
02:06:58,639 --> 02:07:02,880
will be happening again

3009
02:07:00,239 --> 02:07:04,879
please look at the drafts that are in

3010
02:07:02,880 --> 02:07:06,560
iesg review

3011
02:07:04,880 --> 02:07:08,079
please keep an eye on the discuss

3012
02:07:06,560 --> 02:07:10,079
resolutions that are happening

3013
02:07:08,079 --> 02:07:12,400
please get feedback please provide

3014
02:07:10,079 --> 02:07:15,040
feedback to the authors because

3015
02:07:12,400 --> 02:07:16,159
um without confirmation from the working

3016
02:07:15,040 --> 02:07:19,519
group the authors

3017
02:07:16,159 --> 02:07:21,280
aren't 100 sure that they are

3018
02:07:19,520 --> 02:07:22,960
reflecting the opinions of the working

3019
02:07:21,280 --> 02:07:24,239
group and and these are working group

3020
02:07:22,960 --> 02:07:26,560
documents

3021
02:07:24,239 --> 02:07:28,079
otherwise ed do you want to add any

3022
02:07:26,560 --> 02:07:29,599
final words

3023
02:07:28,079 --> 02:07:32,000
thank you to everyone that took

3024
02:07:29,599 --> 02:07:35,360
excellent notes uh through all of this

3025
02:07:32,000 --> 02:07:37,920
i've been looking uh at the cody md site

3026
02:07:35,360 --> 02:07:39,920
and and it is a terrific capture

3027
02:07:37,920 --> 02:07:41,520
and i noted that somewhere someone wrote

3028
02:07:39,920 --> 02:07:42,800
avoid madness and i think that's

3029
02:07:41,520 --> 02:07:45,920
probably the best

3030
02:07:42,800 --> 02:07:47,520
uh that i've seen that's all i have

3031
02:07:45,920 --> 02:07:50,480
we'll put that on the charter when we

3032
02:07:47,520 --> 02:07:54,239
recharter dtn avoid madness

3033
02:07:50,480 --> 02:07:56,239
otherwise um i think that

3034
02:07:54,239 --> 02:07:58,159
oh yes one last thing uh obviously we

3035
02:07:56,239 --> 02:07:59,839
now have a secretary slot open

3036
02:07:58,159 --> 02:08:01,598
um i will put a message on the mailing

3037
02:07:59,840 --> 02:08:03,040
list about this as well but if you'd

3038
02:08:01,599 --> 02:08:05,040
like to put your name forwards

3039
02:08:03,040 --> 02:08:07,440
for working group secretary we would be

3040
02:08:05,040 --> 02:08:11,119
very interested to hear from you

3041
02:08:07,440 --> 02:08:14,320
otherwise uh enjoy the rest of your day

3042
02:08:11,119 --> 02:08:17,360
night uh whatever it is wherever you are

3043
02:08:14,320 --> 02:08:19,759
and uh thank you very much i think

3044
02:08:17,360 --> 02:08:19,759
that's it

3045
02:08:21,199 --> 02:08:23,839
by all

3046
02:08:24,800 --> 02:08:37,840
i'm going to close my window

3047
02:08:38,639 --> 02:08:40,719
you

