1
00:00:08,000 --> 00:00:11,440
all right it's uh

2
00:00:09,120 --> 00:00:13,518
7 am in the morning my time good morning

3
00:00:11,440 --> 00:00:14,879
from finland i'm one of the lucky ones

4
00:00:13,519 --> 00:00:16,079
this time in the sense that the time

5
00:00:14,880 --> 00:00:19,600
zones are

6
00:00:16,079 --> 00:00:21,278
not terrible lucas is in london he's a

7
00:00:19,600 --> 00:00:24,320
little bit less lucky

8
00:00:21,279 --> 00:00:26,400
with three hours time difference

9
00:00:24,320 --> 00:00:27,760
we have a pretty full agenda and i think

10
00:00:26,400 --> 00:00:30,320
we want to have some

11
00:00:27,760 --> 00:00:30,880
discussion on a bunch of topics so i'm

12
00:00:30,320 --> 00:00:35,120
going to

13
00:00:30,880 --> 00:00:36,719
get started with the usual overview

14
00:00:35,120 --> 00:00:39,680
this is the quick working group at itf

15
00:00:36,719 --> 00:00:42,719
109 if you participate here

16
00:00:39,680 --> 00:00:44,559
there's a note well the highlights here

17
00:00:42,719 --> 00:00:45,840
are mine the text is the standard

18
00:00:44,559 --> 00:00:48,000
boilerplate

19
00:00:45,840 --> 00:00:50,640
so there's a patent policy and the

20
00:00:48,000 --> 00:00:52,800
contributors

21
00:00:50,640 --> 00:00:54,640
agreement that you are you know obliged

22
00:00:52,800 --> 00:00:55,760
to comply to when you participate in the

23
00:00:54,640 --> 00:00:58,079
itf and

24
00:00:55,760 --> 00:01:00,079
please read the pcp79 for what it means

25
00:00:58,079 --> 00:01:01,920
to participate specifically sending

26
00:01:00,079 --> 00:01:02,960
email to a list or speaking during one

27
00:01:01,920 --> 00:01:05,920
of these meetings

28
00:01:02,960 --> 00:01:07,520
is counted as participation and then

29
00:01:05,920 --> 00:01:10,640
you're obliged to fulfill certain

30
00:01:07,520 --> 00:01:13,759
requirements with regards to

31
00:01:10,640 --> 00:01:16,720
disclosing ipr and so forth

32
00:01:13,760 --> 00:01:18,320
um you also agree to work respectfully

33
00:01:16,720 --> 00:01:20,720
uh with other participants

34
00:01:18,320 --> 00:01:22,639
um i hope i don't have to remind you of

35
00:01:20,720 --> 00:01:24,798
that we haven't had issues

36
00:01:22,640 --> 00:01:27,840
within in quick and i hope we continue

37
00:01:24,799 --> 00:01:30,240
to not have any issues in this regard

38
00:01:27,840 --> 00:01:32,240
um we have scribes lucas mentioned that

39
00:01:30,240 --> 00:01:34,640
i think dmitry and robin volunteered

40
00:01:32,240 --> 00:01:37,919
we're using the kodi md

41
00:01:34,640 --> 00:01:39,439
tool for that um as i said before if you

42
00:01:37,920 --> 00:01:41,119
want to help them out

43
00:01:39,439 --> 00:01:43,119
by keeping an eye on the minutes and

44
00:01:41,119 --> 00:01:44,240
correcting things as you see them please

45
00:01:43,119 --> 00:01:46,560
do so

46
00:01:44,240 --> 00:01:48,479
um blue sheets i guess mitecho does this

47
00:01:46,560 --> 00:01:51,040
for us lucas

48
00:01:48,479 --> 00:01:52,720
not having done the training session i

49
00:01:51,040 --> 00:01:54,240
don't know

50
00:01:52,720 --> 00:01:55,920
i may have done a training session or

51
00:01:54,240 --> 00:01:59,119
may have not um but

52
00:01:55,920 --> 00:02:00,880
i believe due to the requirements here

53
00:01:59,119 --> 00:02:02,880
yes the ad says yes okay that's all i

54
00:02:00,880 --> 00:02:04,719
want to know um and and chat we have the

55
00:02:02,880 --> 00:02:06,560
meet echo chat which is i think also the

56
00:02:04,719 --> 00:02:10,079
jabber chat room and it's also

57
00:02:06,560 --> 00:02:11,200
now relayed with m-nut's funky proxy to

58
00:02:10,080 --> 00:02:13,440
our

59
00:02:11,200 --> 00:02:16,879
slack channel called jabber so you can

60
00:02:13,440 --> 00:02:19,120
follow in in many different ways

61
00:02:16,879 --> 00:02:21,599
so we're using that we're specifically

62
00:02:19,120 --> 00:02:23,760
also using that to

63
00:02:21,599 --> 00:02:24,879
monitor the microphone queue so lucas

64
00:02:23,760 --> 00:02:28,239
how do you want to do this with the q

65
00:02:24,879 --> 00:02:30,640
plus q minus um no

66
00:02:28,239 --> 00:02:32,400
i would prefer people will use the me

67
00:02:30,640 --> 00:02:34,958
echo tool to

68
00:02:32,400 --> 00:02:36,480
put themselves in the queue so there's a

69
00:02:34,959 --> 00:02:38,480
symbol that looks like a hand

70
00:02:36,480 --> 00:02:40,319
so they can join the queue and from the

71
00:02:38,480 --> 00:02:41,119
participant list we can see people in

72
00:02:40,319 --> 00:02:44,079
the order

73
00:02:41,120 --> 00:02:45,040
um there's no uh there's no except

74
00:02:44,080 --> 00:02:48,080
participant

75
00:02:45,040 --> 00:02:49,120
um like last time it's like different so

76
00:02:48,080 --> 00:02:51,920
if you're in the queue

77
00:02:49,120 --> 00:02:53,920
and we we signal you to to speak then

78
00:02:51,920 --> 00:02:57,440
you can just use the

79
00:02:53,920 --> 00:02:58,159
the send video and or send audio buttons

80
00:02:57,440 --> 00:03:01,599
along the top

81
00:02:58,159 --> 00:03:02,799
to to begin speaking thank you yeah

82
00:03:01,599 --> 00:03:04,000
that's why i'm confused because the

83
00:03:02,800 --> 00:03:06,080
queue stuff we do with webex

84
00:03:04,000 --> 00:03:07,680
or zoom or whatever but here we have

85
00:03:06,080 --> 00:03:10,800
custom tooling

86
00:03:07,680 --> 00:03:13,840
um right um the agenda

87
00:03:10,800 --> 00:03:15,599
is here i'm gonna um

88
00:03:13,840 --> 00:03:17,360
i didn't manage to make a slide out of

89
00:03:15,599 --> 00:03:19,280
it but i'm gonna try and share

90
00:03:17,360 --> 00:03:20,720
my other browser view let's see if that

91
00:03:19,280 --> 00:03:24,319
works

92
00:03:20,720 --> 00:03:24,319
um and then you guys can follow along

93
00:03:27,519 --> 00:03:30,720
application window

94
00:03:31,040 --> 00:03:36,560
that works i should probably make it a

95
00:03:32,480 --> 00:03:36,560
bit bigger does that work for people

96
00:03:39,040 --> 00:03:41,840
too small too big

97
00:03:42,720 --> 00:03:49,280
looks great okay um right so

98
00:03:46,080 --> 00:03:51,120
um this is our agenda i i saw that there

99
00:03:49,280 --> 00:03:52,959
was a desire to bash the agenda by

100
00:03:51,120 --> 00:03:53,360
moving the quick multipath discussion

101
00:03:52,959 --> 00:03:55,680
down

102
00:03:53,360 --> 00:03:57,439
i did that um since a bunch of people

103
00:03:55,680 --> 00:03:58,640
spoke up in favor and nobody was really

104
00:03:57,439 --> 00:04:00,959
arguing against

105
00:03:58,640 --> 00:04:01,679
if people want to re-bash that we can do

106
00:04:00,959 --> 00:04:05,519
that i

107
00:04:01,680 --> 00:04:06,799
hope we don't have to um i think we can

108
00:04:05,519 --> 00:04:08,560
actually get through all of the

109
00:04:06,799 --> 00:04:12,000
presentations um

110
00:04:08,560 --> 00:04:13,120
the we have two hours and uh you know

111
00:04:12,000 --> 00:04:15,280
i'm hopeful that we'll get to a

112
00:04:13,120 --> 00:04:16,478
multipath and have time for it at the

113
00:04:15,280 --> 00:04:19,839
end too

114
00:04:16,478 --> 00:04:21,758
um in in the interest of saving time um

115
00:04:19,839 --> 00:04:22,960
hackathon interop report oh i should say

116
00:04:21,759 --> 00:04:25,280
is there anything else that people want

117
00:04:22,960 --> 00:04:25,280
to bash

118
00:04:26,720 --> 00:04:30,800
going once going twice doesn't seem to

119
00:04:30,000 --> 00:04:33,280
be like it

120
00:04:30,800 --> 00:04:34,880
um due to work day job and personal

121
00:04:33,280 --> 00:04:36,479
stuff last week i wasn't actually able

122
00:04:34,880 --> 00:04:37,520
to join the virtual intro

123
00:04:36,479 --> 00:04:39,840
interrupt that we had during the

124
00:04:37,520 --> 00:04:40,560
hackathon i've seen what's happening on

125
00:04:39,840 --> 00:04:43,198
the slack and

126
00:04:40,560 --> 00:04:44,240
and the google sheet is being filled out

127
00:04:43,199 --> 00:04:45,919
so i don't think there's anything

128
00:04:44,240 --> 00:04:47,360
special to report other than the the

129
00:04:45,919 --> 00:04:49,520
interrupt is continuing

130
00:04:47,360 --> 00:04:50,960
also the interrupt runner um that martin

131
00:04:49,520 --> 00:04:53,198
seaman and janna have set up is

132
00:04:50,960 --> 00:04:54,840
obviously continuously testing

133
00:04:53,199 --> 00:04:57,360
the implementation against each other so

134
00:04:54,840 --> 00:04:59,599
that's ongoing and will keep on going

135
00:04:57,360 --> 00:05:02,960
for the foreseeable future

136
00:04:59,600 --> 00:05:04,639
so i would um move on to a discussion of

137
00:05:02,960 --> 00:05:06,799
the base drafts

138
00:05:04,639 --> 00:05:08,000
and i think janna sent me slides for

139
00:05:06,800 --> 00:05:11,199
this

140
00:05:08,000 --> 00:05:12,960
so i'll pull them up

141
00:05:11,199 --> 00:05:15,120
um i should say oh yeah congratulations

142
00:05:12,960 --> 00:05:17,520
we are a past working group uh no we

143
00:05:15,120 --> 00:05:18,560
passed itf last call as of yesterday i

144
00:05:17,520 --> 00:05:21,280
think

145
00:05:18,560 --> 00:05:22,880
um we got a whole bunch of um

146
00:05:21,280 --> 00:05:25,440
directorate reviews i'm not

147
00:05:22,880 --> 00:05:27,039
i can't remember if there were any um

148
00:05:25,440 --> 00:05:28,160
individual issues that were raised that

149
00:05:27,039 --> 00:05:29,599
didn't come from working group

150
00:05:28,160 --> 00:05:30,800
participants but there were certainly a

151
00:05:29,600 --> 00:05:33,360
bunch of those

152
00:05:30,800 --> 00:05:34,639
so the the project board at the moment

153
00:05:33,360 --> 00:05:37,680
uh with our issues

154
00:05:34,639 --> 00:05:39,680
looks rather full almost all of these um

155
00:05:37,680 --> 00:05:41,840
i think are editorial and are being

156
00:05:39,680 --> 00:05:43,520
um worked on by the editors but there's

157
00:05:41,840 --> 00:05:46,080
a few that i think

158
00:05:43,520 --> 00:05:47,440
we're gonna discuss today um for the

159
00:05:46,080 --> 00:05:53,840
different drafts

160
00:05:47,440 --> 00:05:53,840
um whoops wrong button

161
00:05:55,039 --> 00:06:08,639
um i pull this up

162
00:06:06,319 --> 00:06:08,639
right

163
00:06:09,600 --> 00:06:12,639
whoever sent me these slides um it's

164
00:06:12,000 --> 00:06:15,520
your

165
00:06:12,639 --> 00:06:15,520
turn to speak now

166
00:06:25,680 --> 00:06:30,880
when you're ready yeah do you want to go

167
00:06:28,080 --> 00:06:32,880
full screen on this thing

168
00:06:30,880 --> 00:06:34,479
are you leaving it as that is not really

169
00:06:32,880 --> 00:06:37,360
because i can't see anything

170
00:06:34,479 --> 00:06:38,318
make it bigger it doesn't matter it

171
00:06:37,360 --> 00:06:41,600
really doesn't matter that

172
00:06:38,319 --> 00:06:42,960
how's this so it's fine

173
00:06:41,600 --> 00:06:45,520
i mean i know i know what's on the

174
00:06:42,960 --> 00:06:48,560
slides so um

175
00:06:45,520 --> 00:06:50,080
so very quickly next slide

176
00:06:48,560 --> 00:06:53,039
this shouldn't take very long to go

177
00:06:50,080 --> 00:06:56,080
through um

178
00:06:53,039 --> 00:06:56,880
can you hear me ted i don't know it

179
00:06:56,080 --> 00:06:58,318
seems like my

180
00:06:56,880 --> 00:07:00,000
voice isn't coming through very clearly

181
00:06:58,319 --> 00:07:01,199
i hope it is if not please say something

182
00:07:00,000 --> 00:07:04,479
on the java chat

183
00:07:01,199 --> 00:07:08,400
i'll speak even louder um

184
00:07:04,479 --> 00:07:11,758
see so so uh we had 129 issues filed

185
00:07:08,400 --> 00:07:13,679
during last call um

186
00:07:11,759 --> 00:07:16,319
and most of them were from area reviews

187
00:07:13,680 --> 00:07:18,000
there were just a few from from working

188
00:07:16,319 --> 00:07:21,360
group participants

189
00:07:18,000 --> 00:07:23,919
we closed 74 of them as they were

190
00:07:21,360 --> 00:07:24,479
minor editorial or very clearly no

191
00:07:23,919 --> 00:07:27,758
action

192
00:07:24,479 --> 00:07:30,318
issues we have left

193
00:07:27,759 --> 00:07:31,759
55 issues open now that seems like a

194
00:07:30,319 --> 00:07:35,039
daunting number but

195
00:07:31,759 --> 00:07:38,400
um a lot of them are very very trivial

196
00:07:35,039 --> 00:07:40,479
issues uh 26 of them

197
00:07:38,400 --> 00:07:41,440
are proposed already now these are ones

198
00:07:40,479 --> 00:07:43,758
that have had

199
00:07:41,440 --> 00:07:44,639
a lot of discussion on the on the issue

200
00:07:43,759 --> 00:07:48,000
itself

201
00:07:44,639 --> 00:07:50,240
and have uh proposals either

202
00:07:48,000 --> 00:07:52,080
of closing with no action or actually

203
00:07:50,240 --> 00:07:53,599
have prs attached to them

204
00:07:52,080 --> 00:07:56,240
and they've been marked as proposal

205
00:07:53,599 --> 00:07:59,120
ready for a little while now

206
00:07:56,240 --> 00:08:00,240
um so those are the issues that we have

207
00:07:59,120 --> 00:08:03,280
dealt with

208
00:08:00,240 --> 00:08:06,800
now uh in the past two days we've had a

209
00:08:03,280 --> 00:08:09,280
bunch of issues filed um specifically

210
00:08:06,800 --> 00:08:10,400
25 issues these are not proposed ready

211
00:08:09,280 --> 00:08:12,799
because they've

212
00:08:10,400 --> 00:08:13,599
not all they've not they've been they're

213
00:08:12,800 --> 00:08:15,919
still going through

214
00:08:13,599 --> 00:08:16,960
uh discussion we'll get through them uh

215
00:08:15,919 --> 00:08:19,919
over the next few days

216
00:08:16,960 --> 00:08:20,878
i i expect um and there are four that

217
00:08:19,919 --> 00:08:22,878
are not yet

218
00:08:20,879 --> 00:08:27,840
proposal ready that are older than two

219
00:08:22,879 --> 00:08:27,840
days next slide

220
00:08:28,080 --> 00:08:34,159
so uh of the open issues

221
00:08:31,120 --> 00:08:36,240
um there are two uh there are exactly

222
00:08:34,159 --> 00:08:37,919
two issues that were marked as design

223
00:08:36,240 --> 00:08:39,360
and these are both proposal ready

224
00:08:37,919 --> 00:08:41,519
meaning that they have a proposal that's

225
00:08:39,360 --> 00:08:43,279
attached to them and we believe that

226
00:08:41,519 --> 00:08:45,040
everybody's agreed that this is a

227
00:08:43,279 --> 00:08:47,120
reasonable way forward

228
00:08:45,040 --> 00:08:48,640
um i'm not going to go into the details

229
00:08:47,120 --> 00:08:49,760
of these issues the numbers are there

230
00:08:48,640 --> 00:08:51,760
you can go look them up

231
00:08:49,760 --> 00:08:53,120
but we've had discussion on both of

232
00:08:51,760 --> 00:08:57,040
these and

233
00:08:53,120 --> 00:09:00,399
uh those are ready to go

234
00:08:57,040 --> 00:09:02,640
um and as i said there are 25 issues

235
00:09:00,399 --> 00:09:04,800
that were filed over the past two days

236
00:09:02,640 --> 00:09:06,880
these are mostly area reviews and iona

237
00:09:04,800 --> 00:09:08,880
review filed a bunch of issues

238
00:09:06,880 --> 00:09:10,240
the mostly straightforward there are

239
00:09:08,880 --> 00:09:11,519
probably some discussion that will

240
00:09:10,240 --> 00:09:13,200
happen but

241
00:09:11,519 --> 00:09:15,760
uh i suspect this is something that we

242
00:09:13,200 --> 00:09:19,600
can get through

243
00:09:15,760 --> 00:09:19,600
soon as well next

244
00:09:21,040 --> 00:09:24,240
uh finally there are these four issues

245
00:09:22,959 --> 00:09:27,359
which is actually

246
00:09:24,240 --> 00:09:30,399
three issues now because 43 47

247
00:09:27,360 --> 00:09:32,480
uh got closed these were uh so there are

248
00:09:30,399 --> 00:09:33,279
exactly three issues left that are older

249
00:09:32,480 --> 00:09:37,040
than three days

250
00:09:33,279 --> 00:09:40,160
and not yet marked uh i don't have a

251
00:09:37,040 --> 00:09:43,680
a proposal that's

252
00:09:40,160 --> 00:09:44,719
completely done yet um and that's that's

253
00:09:43,680 --> 00:09:48,160
where we are

254
00:09:44,720 --> 00:09:50,480
i don't know that we need to

255
00:09:48,160 --> 00:09:51,760
discuss these issues here there is

256
00:09:50,480 --> 00:09:55,200
active discussion

257
00:09:51,760 --> 00:09:57,680
on github so

258
00:09:55,200 --> 00:09:59,839
i think that we will get towards closure

259
00:09:57,680 --> 00:10:04,880
on these unless somebody wants to

260
00:09:59,839 --> 00:10:06,880
say something here

261
00:10:04,880 --> 00:10:09,200
but that's all i've got that that makes

262
00:10:06,880 --> 00:10:11,040
sense to me so if if um participants

263
00:10:09,200 --> 00:10:12,959
would like to discuss any of these

264
00:10:11,040 --> 00:10:16,240
in more detail please get in the queue

265
00:10:12,959 --> 00:10:16,239
there's magnus and there's martin in the

266
00:10:16,839 --> 00:10:21,680
queue

267
00:10:18,079 --> 00:10:23,199
this do you want to go ahead yes

268
00:10:21,680 --> 00:10:24,880
so i mean first of all thank you

269
00:10:23,200 --> 00:10:25,519
everyone who's been working hard on this

270
00:10:24,880 --> 00:10:28,880
and and

271
00:10:25,519 --> 00:10:29,440
and resolving issues etc and and i think

272
00:10:28,880 --> 00:10:31,519
we've made

273
00:10:29,440 --> 00:10:32,880
great progress during this deaf loss

274
00:10:31,519 --> 00:10:37,200
call uh

275
00:10:32,880 --> 00:10:40,800
i think there's a few more but it's uh

276
00:10:37,200 --> 00:10:40,800
i was wondering about the

277
00:10:42,560 --> 00:10:48,160
uh could we spend a little bit more time

278
00:10:45,440 --> 00:10:50,320
to check some of these which is uh

279
00:10:48,160 --> 00:10:52,800
i think have impact especially related

280
00:10:50,320 --> 00:10:55,360
to example diana version registry

281
00:10:52,800 --> 00:10:56,160
things just to brief up where we are on

282
00:10:55,360 --> 00:10:58,160
those

283
00:10:56,160 --> 00:11:00,959
i would appreciate it if it's possible i

284
00:10:58,160 --> 00:11:04,719
know some of them are very late but

285
00:11:00,959 --> 00:11:07,839
um yeah i think we can

286
00:11:04,720 --> 00:11:09,360
so i mean um the summary of the issue is

287
00:11:07,839 --> 00:11:10,720
that it was raised by stuart in his

288
00:11:09,360 --> 00:11:13,200
general review that there's

289
00:11:10,720 --> 00:11:14,959
for for the version numbers uh there's

290
00:11:13,200 --> 00:11:16,079
actually no there wasn't any registry

291
00:11:14,959 --> 00:11:19,760
defined

292
00:11:16,079 --> 00:11:22,000
and it's certainly easy to define one um

293
00:11:19,760 --> 00:11:24,079
the question is or one question is which

294
00:11:22,000 --> 00:11:27,440
document should they be defined then

295
00:11:24,079 --> 00:11:28,640
um logically you would expect them to be

296
00:11:27,440 --> 00:11:31,920
in the invariance

297
00:11:28,640 --> 00:11:33,760
document because version numbers are

298
00:11:31,920 --> 00:11:35,519
you know in very invariant and have

299
00:11:33,760 --> 00:11:37,360
meaning across versions

300
00:11:35,519 --> 00:11:40,160
however there's a whole bunch of text

301
00:11:37,360 --> 00:11:42,880
around how

302
00:11:40,160 --> 00:11:44,560
what policies we define for our um

303
00:11:42,880 --> 00:11:46,079
registries and that text at the moment

304
00:11:44,560 --> 00:11:46,719
is in the transport draft so there's

305
00:11:46,079 --> 00:11:48,800
some

306
00:11:46,720 --> 00:11:50,079
discussion on whether we should move

307
00:11:48,800 --> 00:11:52,319
that or replicate it

308
00:11:50,079 --> 00:11:53,519
and i think that was what i remember the

309
00:11:52,320 --> 00:11:57,040
discussion being but it's probably

310
00:11:53,519 --> 00:11:58,880
progressed since

311
00:11:57,040 --> 00:12:03,040
i don't think the discussion has moved

312
00:11:58,880 --> 00:12:05,519
too far past that point i'd say that

313
00:12:03,040 --> 00:12:06,959
i didn't necessarily want to bring this

314
00:12:05,519 --> 00:12:09,600
up here because i feel like this is a

315
00:12:06,959 --> 00:12:13,119
discussion between the 80s and the

316
00:12:09,600 --> 00:12:15,120
chairs with some maybe input i don't uh

317
00:12:13,120 --> 00:12:16,959
and enlarge you can tell me if i'm off

318
00:12:15,120 --> 00:12:18,320
on this but it seems to me that that's

319
00:12:16,959 --> 00:12:21,839
not a discussion we need to have with

320
00:12:18,320 --> 00:12:21,839
the entire working group is it

321
00:12:22,839 --> 00:12:27,519
uh

322
00:12:24,959 --> 00:12:29,119
so the reason why i mean this is the

323
00:12:27,519 --> 00:12:32,399
registration rules you

324
00:12:29,120 --> 00:12:34,000
as people specifying future extension

325
00:12:32,399 --> 00:12:35,920
etc is gonna live with

326
00:12:34,000 --> 00:12:38,160
and i think it's actually is relevant

327
00:12:35,920 --> 00:12:40,000
it's not just for the 80s it's it's very

328
00:12:38,160 --> 00:12:41,680
much up to you it's going to affect your

329
00:12:40,000 --> 00:12:43,440
working in the future

330
00:12:41,680 --> 00:12:44,719
and and and what you and what you can't

331
00:12:43,440 --> 00:12:46,399
do so i think you should pay

332
00:12:44,720 --> 00:12:48,000
i mean i think you should pay attention

333
00:12:46,399 --> 00:12:50,079
to this quite a lot and

334
00:12:48,000 --> 00:12:51,040
not just say no this is not something i

335
00:12:50,079 --> 00:12:54,160
care about

336
00:12:51,040 --> 00:12:55,599
i mean so but maybe we'll let martin uh

337
00:12:54,160 --> 00:12:57,760
i think he has something to say on this

338
00:12:55,600 --> 00:13:00,560
yeah like you go ahead martin

339
00:12:57,760 --> 00:13:01,360
yep yeah so i've written a pull request

340
00:13:00,560 --> 00:13:03,920
for this one

341
00:13:01,360 --> 00:13:05,200
and it's in the transport dock uh and

342
00:13:03,920 --> 00:13:08,160
that's because that's

343
00:13:05,200 --> 00:13:10,240
a hell of a lot easier to do and i i

344
00:13:08,160 --> 00:13:13,519
don't think there's

345
00:13:10,240 --> 00:13:15,760
much additional value in um

346
00:13:13,519 --> 00:13:17,920
in going to the invariant stock if you

347
00:13:15,760 --> 00:13:19,120
think of the transport dock as defining

348
00:13:17,920 --> 00:13:20,479
version one

349
00:13:19,120 --> 00:13:22,320
and the invariant stock as being a

350
00:13:20,480 --> 00:13:24,320
special bonus uh

351
00:13:22,320 --> 00:13:25,519
that doesn't have any real bearing on

352
00:13:24,320 --> 00:13:29,120
what people implement

353
00:13:25,519 --> 00:13:30,320
right now um then moving something to

354
00:13:29,120 --> 00:13:33,360
invariance with

355
00:13:30,320 --> 00:13:34,959
you know let's say adding an extra two

356
00:13:33,360 --> 00:13:35,839
or three pages to that document isn't

357
00:13:34,959 --> 00:13:37,439
going to

358
00:13:35,839 --> 00:13:39,680
to help those people have to implement

359
00:13:37,440 --> 00:13:41,440
the transport they have to go

360
00:13:39,680 --> 00:13:43,519
into two docs then to find everything

361
00:13:41,440 --> 00:13:46,079
that they need they already have three

362
00:13:43,519 --> 00:13:48,399
so i guess it's not not that much that

363
00:13:46,079 --> 00:13:50,399
that specs i'm fine with uh

364
00:13:48,399 --> 00:13:51,760
very much but that's it i think it's

365
00:13:50,399 --> 00:13:53,440
actually the other things about that's

366
00:13:51,760 --> 00:13:55,040
happening within a registered

367
00:13:53,440 --> 00:13:58,639
which it might be more relevant

368
00:13:55,040 --> 00:14:01,920
especially based on i am interviewing

369
00:13:58,639 --> 00:14:05,279
so i saw a number of comments there

370
00:14:01,920 --> 00:14:07,760
none of them were particularly um

371
00:14:05,279 --> 00:14:09,199
troubling from my perspective there was

372
00:14:07,760 --> 00:14:10,639
a question of what notes to put in

373
00:14:09,199 --> 00:14:14,839
things

374
00:14:10,639 --> 00:14:17,519
my preference would be to do nothing um

375
00:14:14,839 --> 00:14:20,480
and what were the other ones i

376
00:14:17,519 --> 00:14:22,160
i did have a small change that i that

377
00:14:20,480 --> 00:14:26,079
relates to

378
00:14:22,160 --> 00:14:28,959
the rules around the first value i think

379
00:14:26,079 --> 00:14:30,239
i proposed that we go along the lines of

380
00:14:28,959 --> 00:14:32,800
what you did there

381
00:14:30,240 --> 00:14:34,000
um can someone bring up that issue i

382
00:14:32,800 --> 00:14:39,120
think that one

383
00:14:34,000 --> 00:14:42,880
is 43.78

384
00:14:39,120 --> 00:14:59,839
from memory i'll try thanks

385
00:14:42,880 --> 00:14:59,839
i mean i can share my screen if you need

386
00:15:03,839 --> 00:15:13,839
what's the number button 43.78

387
00:15:15,680 --> 00:15:18,959
so i know it asked well what are the

388
00:15:18,000 --> 00:15:20,480
rules here

389
00:15:18,959 --> 00:15:22,959
and i think we're a little bit unclear

390
00:15:20,480 --> 00:15:25,120
on this one and magnus suggested that

391
00:15:22,959 --> 00:15:26,319
um the way to think about this is the

392
00:15:25,120 --> 00:15:29,040
two ways you can approach

393
00:15:26,320 --> 00:15:31,120
adding a new value you could either go

394
00:15:29,040 --> 00:15:36,319
for provisional assignment

395
00:15:31,120 --> 00:15:36,320
or you could request early allocation

396
00:15:36,560 --> 00:15:39,680
and i think early allocation applies

397
00:15:38,160 --> 00:15:42,240
only to those documents that i

398
00:15:39,680 --> 00:15:43,040
have standards action or one of the the

399
00:15:42,240 --> 00:15:47,199
heavier

400
00:15:43,040 --> 00:15:48,560
rule sets and 7120 would apply in that

401
00:15:47,199 --> 00:15:51,199
case

402
00:15:48,560 --> 00:15:52,880
um so i've got a pull request there that

403
00:15:51,199 --> 00:15:54,240
that basically says the first value in

404
00:15:52,880 --> 00:15:56,880
any space

405
00:15:54,240 --> 00:15:57,839
follows the standards action rule if you

406
00:15:56,880 --> 00:16:00,720
want it

407
00:15:57,839 --> 00:16:03,199
but you can then go and follow the rules

408
00:16:00,720 --> 00:16:05,600
in rfc 7120 if you want it

409
00:16:03,199 --> 00:16:07,279
before you publish your document and

410
00:16:05,600 --> 00:16:10,079
that's all that really says

411
00:16:07,279 --> 00:16:11,120
i think that should address that but i

412
00:16:10,079 --> 00:16:12,000
suspect people are going to have to

413
00:16:11,120 --> 00:16:13,680
review the text

414
00:16:12,000 --> 00:16:16,000
to satisfy themselves that that's the

415
00:16:13,680 --> 00:16:16,000
case

416
00:16:18,959 --> 00:16:22,160
yeah to be clear this is this is an

417
00:16:20,560 --> 00:16:22,479
issue that was filed less than a day ago

418
00:16:22,160 --> 00:16:24,560
and

419
00:16:22,480 --> 00:16:25,600
uh martin's pr is from a few hours ago

420
00:16:24,560 --> 00:16:27,680
so

421
00:16:25,600 --> 00:16:29,040
i do think i have not i've not even had

422
00:16:27,680 --> 00:16:32,000
a chance to look at this

423
00:16:29,040 --> 00:16:33,360
so yeah so i think i want to sort of

424
00:16:32,000 --> 00:16:35,040
encourage people that have an interest

425
00:16:33,360 --> 00:16:36,160
in this to take a look at the issue and

426
00:16:35,040 --> 00:16:39,199
and

427
00:16:36,160 --> 00:16:41,120
state opinions there um

428
00:16:39,199 --> 00:16:42,719
it's not it's not a technically hard

429
00:16:41,120 --> 00:16:45,040
issue it's just a sort of what what do

430
00:16:42,720 --> 00:16:48,240
we do in terms of that make sense issue

431
00:16:45,040 --> 00:16:50,160
and um

432
00:16:48,240 --> 00:16:51,360
you know we're going to settle it one

433
00:16:50,160 --> 00:16:52,480
way or the other and i think we can

434
00:16:51,360 --> 00:16:54,560
basically

435
00:16:52,480 --> 00:16:57,600
do do a bunch of different things and

436
00:16:54,560 --> 00:16:57,599
none of them would be terrible

437
00:16:58,160 --> 00:17:04,319
yeah so there were on the other issue

438
00:17:01,279 --> 00:17:05,439
sorry john no i was just going to say

439
00:17:04,319 --> 00:17:07,438
martin that i wanted to

440
00:17:05,439 --> 00:17:08,959
support what you said on the other issue

441
00:17:07,439 --> 00:17:11,439
of having um

442
00:17:08,959 --> 00:17:12,079
the version number registry descriptions

443
00:17:11,439 --> 00:17:15,520
in the in

444
00:17:12,079 --> 00:17:17,438
in version one i think in the transfer

445
00:17:15,520 --> 00:17:18,559
document rather than in variance and

446
00:17:17,439 --> 00:17:20,880
and the other reason that you didn't

447
00:17:18,559 --> 00:17:21,599
mention is that invariance is largely

448
00:17:20,880 --> 00:17:25,039
focused on

449
00:17:21,599 --> 00:17:27,280
on on protocol uh specific

450
00:17:25,039 --> 00:17:28,240
things um to the extent that we're

451
00:17:27,280 --> 00:17:30,320
talking about

452
00:17:28,240 --> 00:17:31,440
the process of assigning versions i

453
00:17:30,320 --> 00:17:34,159
think that doesn't belong in the

454
00:17:31,440 --> 00:17:38,400
invariance document

455
00:17:34,160 --> 00:17:40,960
um but go on yes i was going to say

456
00:17:38,400 --> 00:17:42,960
i as part of the thing i've done a

457
00:17:40,960 --> 00:17:45,679
review of all of the open issues

458
00:17:42,960 --> 00:17:46,799
and aside from those that are on http or

459
00:17:45,679 --> 00:17:48,720
qpac

460
00:17:46,799 --> 00:17:49,918
i'm satisfied now that we have

461
00:17:48,720 --> 00:17:52,799
reasonable

462
00:17:49,919 --> 00:17:54,400
coverage in terms of answers most of the

463
00:17:52,799 --> 00:17:57,440
questions that we got

464
00:17:54,400 --> 00:17:59,039
i think can be answered via email um

465
00:17:57,440 --> 00:18:02,000
but i've got pull requests i'm up

466
00:17:59,039 --> 00:18:05,039
against a bunch of them magnus open one

467
00:18:02,000 --> 00:18:05,840
uh there was that one and the issues

468
00:18:05,039 --> 00:18:08,960
that

469
00:18:05,840 --> 00:18:12,159
china had in his presentation all have

470
00:18:08,960 --> 00:18:15,840
pull requests aside from one

471
00:18:12,160 --> 00:18:15,840
which is also http

472
00:18:22,240 --> 00:18:25,760
okay um

473
00:18:27,520 --> 00:18:30,080
so that's i think what we had in terms

474
00:18:28,799 --> 00:18:32,000
of issues discussion unless somebody

475
00:18:30,080 --> 00:18:34,159
wants to bring up something else

476
00:18:32,000 --> 00:18:35,840
um jenna and lucas are in the queue

477
00:18:34,160 --> 00:18:39,039
still

478
00:18:35,840 --> 00:18:40,240
um i i don't see mike in the in the

479
00:18:39,039 --> 00:18:43,280
participants queue

480
00:18:40,240 --> 00:18:45,440
um so it's mike bishop um i just uh

481
00:18:43,280 --> 00:18:47,600
with respect to the http issue that i

482
00:18:45,440 --> 00:18:50,640
raised i think

483
00:18:47,600 --> 00:18:52,240
that that probably is gonna like

484
00:18:50,640 --> 00:18:54,400
nothing will happen there i think i'd be

485
00:18:52,240 --> 00:18:56,000
happy but there's maybe a small

486
00:18:54,400 --> 00:18:59,120
editorial tweak that we

487
00:18:56,000 --> 00:19:00,799
might want to make so i i think

488
00:18:59,120 --> 00:19:02,959
there's not really much more to say

489
00:19:00,799 --> 00:19:04,879
there i was hoping my

490
00:19:02,960 --> 00:19:06,559
mike would have had an opportunity to

491
00:19:04,880 --> 00:19:10,000
respond on the ticket

492
00:19:06,559 --> 00:19:12,480
but it might be busy so i got

493
00:19:10,000 --> 00:19:13,840
little worry for that issue personally

494
00:19:12,480 --> 00:19:17,840
given that i raised it

495
00:19:13,840 --> 00:19:21,360
i think we can close it very quickly

496
00:19:17,840 --> 00:19:24,080
great so i think the the intent is

497
00:19:21,360 --> 00:19:26,000
of going forward so itf last call is

498
00:19:24,080 --> 00:19:27,760
closed we have a bunch of issues we just

499
00:19:26,000 --> 00:19:31,600
had a discussion on it

500
00:19:27,760 --> 00:19:33,360
um we're gonna um do another revision of

501
00:19:31,600 --> 00:19:36,240
the draft set

502
00:19:33,360 --> 00:19:37,760
um that rolls in all of the changes and

503
00:19:36,240 --> 00:19:38,640
hopefully that leaves us with a clean

504
00:19:37,760 --> 00:19:41,200
slate

505
00:19:38,640 --> 00:19:43,039
um i think magnus has talked to the isg

506
00:19:41,200 --> 00:19:47,520
about taking the documents

507
00:19:43,039 --> 00:19:51,039
uh to isg review sometime in december

508
00:19:47,520 --> 00:19:55,280
and i think we're gonna do it in two

509
00:19:51,039 --> 00:19:56,640
steps um taking invariance transfer tls

510
00:19:55,280 --> 00:19:59,840
and recovery

511
00:19:56,640 --> 00:20:02,000
on one telechat and taking the hdp

512
00:19:59,840 --> 00:20:03,678
related ones hp and qpac

513
00:20:02,000 --> 00:20:06,480
on the second telejet just to make it a

514
00:20:03,679 --> 00:20:10,080
little bit easier for the isg to review

515
00:20:06,480 --> 00:20:13,520
um so we'll take the the revised

516
00:20:10,080 --> 00:20:15,039
draft after last call to the isg um

517
00:20:13,520 --> 00:20:17,360
question is what would happen then right

518
00:20:15,039 --> 00:20:18,320
um in an ideal future the isg would

519
00:20:17,360 --> 00:20:21,120
approve them as

520
00:20:18,320 --> 00:20:21,918
is and we would um you know then go

521
00:20:21,120 --> 00:20:24,559
forward

522
00:20:21,919 --> 00:20:25,760
into the rfc editor queue but we might

523
00:20:24,559 --> 00:20:28,080
also need to do another

524
00:20:25,760 --> 00:20:30,158
uh round of revisions we'll know when

525
00:20:28,080 --> 00:20:33,678
we'll know in december

526
00:20:30,159 --> 00:20:36,159
um so but but hopefully

527
00:20:33,679 --> 00:20:36,720
you know in the new year very soon we

528
00:20:36,159 --> 00:20:40,000
can then

529
00:20:36,720 --> 00:20:40,960
um basically have the draft in the rfc

530
00:20:40,000 --> 00:20:43,520
editor queue and then

531
00:20:40,960 --> 00:20:44,480
they're being edited uh by somebody else

532
00:20:43,520 --> 00:20:46,879
for once uh

533
00:20:44,480 --> 00:20:48,080
towards uh production later later in the

534
00:20:46,880 --> 00:20:50,559
spring i hope or later

535
00:20:48,080 --> 00:20:51,918
in quarter one since uh i don't want to

536
00:20:50,559 --> 00:20:55,678
be hemispherists

537
00:20:51,919 --> 00:20:57,520
here i got asked

538
00:20:55,679 --> 00:20:58,960
by implementations that would like to

539
00:20:57,520 --> 00:21:01,520
ship a version

540
00:20:58,960 --> 00:21:03,919
that's called quick version one what

541
00:21:01,520 --> 00:21:05,520
they should do and

542
00:21:03,919 --> 00:21:06,799
this is obviously what each

543
00:21:05,520 --> 00:21:08,960
implementation has to decide for

544
00:21:06,799 --> 00:21:12,559
themselves my

545
00:21:08,960 --> 00:21:15,679
take is that once the drafts are in the

546
00:21:12,559 --> 00:21:17,760
rfc editor queue meaning after

547
00:21:15,679 --> 00:21:19,200
isg approval has happened then after we

548
00:21:17,760 --> 00:21:20,879
you know have the version that got

549
00:21:19,200 --> 00:21:22,080
approved by the isg and they're with the

550
00:21:20,880 --> 00:21:25,600
rfc editor

551
00:21:22,080 --> 00:21:26,879
i would consider it safe to um

552
00:21:25,600 --> 00:21:28,719
and you're implementing that version i

553
00:21:26,880 --> 00:21:30,000
would consider it safe to call yourself

554
00:21:28,720 --> 00:21:32,880
v1 because

555
00:21:30,000 --> 00:21:34,559
by definition only editorial changes are

556
00:21:32,880 --> 00:21:37,760
supposed to happen

557
00:21:34,559 --> 00:21:38,240
as the rfc editor edits and and it would

558
00:21:37,760 --> 00:21:39,760
something

559
00:21:38,240 --> 00:21:41,280
you know really unusual would need to

560
00:21:39,760 --> 00:21:41,840
happen for there to be any design

561
00:21:41,280 --> 00:21:45,280
changes

562
00:21:41,840 --> 00:21:46,879
between isg approval and rfc so

563
00:21:45,280 --> 00:21:48,399
that i think would be a safe thing to do

564
00:21:46,880 --> 00:21:50,480
for an implementation but it's

565
00:21:48,400 --> 00:21:51,679
it's your call as an implementation what

566
00:21:50,480 --> 00:21:53,760
you want to do if you want to wait until

567
00:21:51,679 --> 00:21:55,919
the rfc is out for example

568
00:21:53,760 --> 00:21:56,799
and there's three people in the queue um

569
00:21:55,919 --> 00:21:59,840
yeah david

570
00:21:56,799 --> 00:21:59,840
say david

571
00:22:01,280 --> 00:22:07,600
can you hear me yes cool

572
00:22:04,640 --> 00:22:08,559
um so i strongly disagree what you just

573
00:22:07,600 --> 00:22:12,320
said lars

574
00:22:08,559 --> 00:22:15,840
um yeah no just a fundamentally

575
00:22:12,320 --> 00:22:18,080
i think um we need bacon time here

576
00:22:15,840 --> 00:22:19,280
we need to deploy this and we need to

577
00:22:18,080 --> 00:22:22,559
know that it works

578
00:22:19,280 --> 00:22:23,840
uh when we did this for tls 1.3 we found

579
00:22:22,559 --> 00:22:27,840
out that the standard was

580
00:22:23,840 --> 00:22:29,840
broken so luckily work was done it was

581
00:22:27,840 --> 00:22:31,039
diagnosed and the standard was fixed

582
00:22:29,840 --> 00:22:33,039
before it shipped

583
00:22:31,039 --> 00:22:34,480
and we really don't want to ship

584
00:22:33,039 --> 00:22:36,240
something that

585
00:22:34,480 --> 00:22:37,919
doesn't work that doesn't work on

586
00:22:36,240 --> 00:22:41,360
today's internet and all that

587
00:22:37,919 --> 00:22:43,360
and similarly um i think like

588
00:22:41,360 --> 00:22:45,280
that you know the while that we this can

589
00:22:43,360 --> 00:22:46,799
happen while the document is in the rfc

590
00:22:45,280 --> 00:22:48,879
editor few to some extent

591
00:22:46,799 --> 00:22:50,960
because if we do find something wrong it

592
00:22:48,880 --> 00:22:53,039
won't probably be a big change

593
00:22:50,960 --> 00:22:54,720
but it might still be a change so i

594
00:22:53,039 --> 00:22:57,520
would strongly

595
00:22:54,720 --> 00:22:59,280
advise against anyone deploying the v1

596
00:22:57,520 --> 00:23:02,000
identifier until we have it

597
00:22:59,280 --> 00:23:03,520
actually published because that would

598
00:23:02,000 --> 00:23:05,600
cause a lot of these uh

599
00:23:03,520 --> 00:23:07,200
interrupt problems so i would really

600
00:23:05,600 --> 00:23:10,320
prefer that we don't like

601
00:23:07,200 --> 00:23:10,880
rush here our goal is to make a good

602
00:23:10,320 --> 00:23:13,360
standard

603
00:23:10,880 --> 00:23:14,880
our goal is not to be have it published

604
00:23:13,360 --> 00:23:16,559
as soon as possible

605
00:23:14,880 --> 00:23:18,240
um the fact that it takes some time in

606
00:23:16,559 --> 00:23:19,440
the rfc editor queue and we have

607
00:23:18,240 --> 00:23:21,120
deployments

608
00:23:19,440 --> 00:23:22,640
no one's waiting on this there's no

609
00:23:21,120 --> 00:23:25,039
emergency here right

610
00:23:22,640 --> 00:23:25,679
um so i would just or just to be

611
00:23:25,039 --> 00:23:28,400
cautious

612
00:23:25,679 --> 00:23:30,400
and really get good deployment and goods

613
00:23:28,400 --> 00:23:33,200
knowledge of the success of the protocol

614
00:23:30,400 --> 00:23:34,159
before we actually completely ship it

615
00:23:33,200 --> 00:23:36,400
fair point

616
00:23:34,159 --> 00:23:37,440
so i don't remember the timeline for tls

617
00:23:36,400 --> 00:23:38,559
i don't know if that issue was

618
00:23:37,440 --> 00:23:41,360
identified during

619
00:23:38,559 --> 00:23:42,480
um rfc editor processing or or earlier

620
00:23:41,360 --> 00:23:44,080
or later

621
00:23:42,480 --> 00:23:45,679
um i think um we have people in the

622
00:23:44,080 --> 00:23:47,279
queue that can speak to that um

623
00:23:45,679 --> 00:23:48,799
one thing i want to point out so this is

624
00:23:47,279 --> 00:23:50,000
this came from an implementation that

625
00:23:48,799 --> 00:23:53,120
has certain

626
00:23:50,000 --> 00:23:55,440
windows um for making it into releases

627
00:23:53,120 --> 00:23:59,120
right and and one of those windows is

628
00:23:55,440 --> 00:24:00,640
apparently um first quarter next year

629
00:23:59,120 --> 00:24:02,158
and and the question for them is you

630
00:24:00,640 --> 00:24:05,279
know can they make that window

631
00:24:02,159 --> 00:24:07,360
with version one or do they have to

632
00:24:05,279 --> 00:24:08,880
you know wait for another window to come

633
00:24:07,360 --> 00:24:10,479
around if if

634
00:24:08,880 --> 00:24:12,000
you have an implementation that has sort

635
00:24:10,480 --> 00:24:13,600
of these timing constraints the question

636
00:24:12,000 --> 00:24:14,720
is what do you do and i gave that

637
00:24:13,600 --> 00:24:16,399
opinion but

638
00:24:14,720 --> 00:24:18,960
if you don't have that um you know

639
00:24:16,400 --> 00:24:20,799
limitation if you can roll out whenever

640
00:24:18,960 --> 00:24:23,360
i think what you said makes perfect

641
00:24:20,799 --> 00:24:24,960
sense martin thompson

642
00:24:23,360 --> 00:24:26,479
so i was going to say something else but

643
00:24:24,960 --> 00:24:26,880
now i have two things to say first thing

644
00:24:26,480 --> 00:24:30,400
is

645
00:24:26,880 --> 00:24:32,400
i think david's being a little bit too

646
00:24:30,400 --> 00:24:33,600
cautious here if it turns out that we

647
00:24:32,400 --> 00:24:36,400
have to burn

648
00:24:33,600 --> 00:24:38,320
the version the code point one then we

649
00:24:36,400 --> 00:24:39,840
can use another code point to identify

650
00:24:38,320 --> 00:24:41,279
the version that we publish in an rfc

651
00:24:39,840 --> 00:24:43,199
that's that's totally fine

652
00:24:41,279 --> 00:24:44,799
i know some people have even raised that

653
00:24:43,200 --> 00:24:46,960
as a possibility um

654
00:24:44,799 --> 00:24:48,000
for version one anyways picking a number

655
00:24:46,960 --> 00:24:49,679
like some

656
00:24:48,000 --> 00:24:52,080
some random number out of the 32-bit

657
00:24:49,679 --> 00:24:54,720
space uh so

658
00:24:52,080 --> 00:24:56,000
assuming that there is an emergency we

659
00:24:54,720 --> 00:24:56,720
we can pick another version number and

660
00:24:56,000 --> 00:24:58,320
that's not going to

661
00:24:56,720 --> 00:25:00,000
be the end of the world the the one

662
00:24:58,320 --> 00:25:03,760
caution i wanted to add to your

663
00:25:00,000 --> 00:25:06,000
spiel was um the salts will have to

664
00:25:03,760 --> 00:25:09,279
change between the last draft version

665
00:25:06,000 --> 00:25:11,120
and the final release version uh

666
00:25:09,279 --> 00:25:14,720
i had hoped to do that pretty late in

667
00:25:11,120 --> 00:25:17,039
the process i

668
00:25:14,720 --> 00:25:18,720
i will do that if the isg has changes to

669
00:25:17,039 --> 00:25:21,919
make so that the version

670
00:25:18,720 --> 00:25:24,960
that goes into the queue has um

671
00:25:21,919 --> 00:25:26,559
up final sucks but uh if

672
00:25:24,960 --> 00:25:28,720
that doesn't happen then the isg thinks

673
00:25:26,559 --> 00:25:31,760
this is fantastic and

674
00:25:28,720 --> 00:25:33,600
approves it without any changes involved

675
00:25:31,760 --> 00:25:35,600
that might have to happen in all 48 but

676
00:25:33,600 --> 00:25:37,279
we can probably just

677
00:25:35,600 --> 00:25:39,120
rev another version before it goes into

678
00:25:37,279 --> 00:25:41,200
the queue anyway

679
00:25:39,120 --> 00:25:42,959
just to make sure that the final numbers

680
00:25:41,200 --> 00:25:44,240
are in place for those people who care

681
00:25:42,960 --> 00:25:46,159
about that

682
00:25:44,240 --> 00:25:47,679
we could do it with an rfc editor note

683
00:25:46,159 --> 00:25:48,240
also on the thing that goes into the

684
00:25:47,679 --> 00:25:51,039
queue but

685
00:25:48,240 --> 00:25:53,520
we'll figure it out right yeah we'll

686
00:25:51,039 --> 00:25:53,520
figure it out

687
00:25:55,440 --> 00:26:00,640
yeah so oh hang on so yeah

688
00:25:58,799 --> 00:26:01,918
so first um i think you're asking the

689
00:26:00,640 --> 00:26:03,200
question one that deep when the

690
00:26:01,919 --> 00:26:04,720
one three interrupt problems were found

691
00:26:03,200 --> 00:26:05,120
they're probably they're found prior to

692
00:26:04,720 --> 00:26:08,559
um

693
00:26:05,120 --> 00:26:10,559
to issue review but um but i think so

694
00:26:08,559 --> 00:26:11,760
i i think i i i got a position somewhere

695
00:26:10,559 --> 00:26:15,120
in between martin

696
00:26:11,760 --> 00:26:16,400
and um uh and david um it's true

697
00:26:15,120 --> 00:26:18,399
that there's nothing special about the

698
00:26:16,400 --> 00:26:22,159
but the the code point one

699
00:26:18,400 --> 00:26:24,799
um however the problem is that if

700
00:26:22,159 --> 00:26:27,039
um if we that we do not have perfect

701
00:26:24,799 --> 00:26:28,639
knowledge of when people are deploying

702
00:26:27,039 --> 00:26:30,799
um when people are playing with code

703
00:26:28,640 --> 00:26:32,799
point one and so what happens is

704
00:26:30,799 --> 00:26:34,320
is that some substantial fraction of

705
00:26:32,799 --> 00:26:35,840
people deploy with code point one but

706
00:26:34,320 --> 00:26:38,799
it's cryptic so we don't know

707
00:26:35,840 --> 00:26:40,080
and then we have to make a change in um

708
00:26:38,799 --> 00:26:41,918
in the last call

709
00:26:40,080 --> 00:26:43,120
sorry in our in the 38 that we think is

710
00:26:41,919 --> 00:26:44,400
nominal and

711
00:26:43,120 --> 00:26:46,239
we and then so we make the change we

712
00:26:44,400 --> 00:26:47,360
continue we could point one because we

713
00:26:46,240 --> 00:26:49,840
don't know those people with the point

714
00:26:47,360 --> 00:26:51,199
point one now we have a a cryptic

715
00:26:49,840 --> 00:26:52,879
interrupt problem that we find later

716
00:26:51,200 --> 00:26:55,120
and so people i think people should be

717
00:26:52,880 --> 00:26:59,279
just only discouraged using 2.1

718
00:26:55,120 --> 00:27:00,559
until um until the rc's actually shipped

719
00:26:59,279 --> 00:27:02,000
um there's like there's no particular

720
00:27:00,559 --> 00:27:02,399
reason why they can't you continue to

721
00:27:02,000 --> 00:27:05,679
use

722
00:27:02,400 --> 00:27:07,120
the 29 go point um and i imagine people

723
00:27:05,679 --> 00:27:08,720
will have support for that for a second

724
00:27:07,120 --> 00:27:10,399
century time it's like it's a big change

725
00:27:08,720 --> 00:27:11,760
like change that code point later um

726
00:27:10,400 --> 00:27:13,520
it's also like it's a big change

727
00:27:11,760 --> 00:27:14,879
like like you know to remotely change it

728
00:27:13,520 --> 00:27:17,440
in many implementations so i

729
00:27:14,880 --> 00:27:18,559
i i don't i think yes if we had perfect

730
00:27:17,440 --> 00:27:19,919
knowledge where people were deploying i

731
00:27:18,559 --> 00:27:20,559
think it would be fine for people to

732
00:27:19,919 --> 00:27:23,039
play

733
00:27:20,559 --> 00:27:35,039
2.1 prior to rc but we do not so they

734
00:27:23,039 --> 00:27:38,720
should not

735
00:27:35,039 --> 00:27:38,720
matt would you like to go next

736
00:27:38,960 --> 00:27:43,440
also at least one horror story of a

737
00:27:41,360 --> 00:27:46,840
document in auth48

738
00:27:43,440 --> 00:27:48,480
discovering that there was um a language

739
00:27:46,840 --> 00:27:51,199
ambiguity

740
00:27:48,480 --> 00:27:52,559
that then caused authors to realize that

741
00:27:51,200 --> 00:27:54,720
they in fact didn't understand each

742
00:27:52,559 --> 00:27:57,200
other

743
00:27:54,720 --> 00:27:58,399
and the document hadn't converged when

744
00:27:57,200 --> 00:28:01,120
they thought it had

745
00:27:58,399 --> 00:28:02,799
i think it's unlikely here but they're

746
00:28:01,120 --> 00:28:03,520
allowing code out the door before the

747
00:28:02,799 --> 00:28:06,158
ink is dry

748
00:28:03,520 --> 00:28:06,158
it's dangerous

749
00:28:08,720 --> 00:28:16,320
come on hey martin

750
00:28:12,080 --> 00:28:17,520
i think yes so i think ecker interpreted

751
00:28:16,320 --> 00:28:20,720
my suggestion

752
00:28:17,520 --> 00:28:23,120
here as um

753
00:28:20,720 --> 00:28:23,919
suggesting that we can revit revise matt

754
00:28:23,120 --> 00:28:25,199
you're um

755
00:28:23,919 --> 00:28:28,080
creating a little bit of noise there

756
00:28:25,200 --> 00:28:28,080
sorry thanks

757
00:28:28,840 --> 00:28:32,240
um

758
00:28:30,399 --> 00:28:34,320
so echo interpreter that is saying we

759
00:28:32,240 --> 00:28:35,440
can just revise the the document to fix

760
00:28:34,320 --> 00:28:37,439
the problem

761
00:28:35,440 --> 00:28:39,039
um my suggestion was yes we can revise

762
00:28:37,440 --> 00:28:40,320
the document we would also give it a new

763
00:28:39,039 --> 00:28:41,919
version number

764
00:28:40,320 --> 00:28:44,240
so i was a little confused about what

765
00:28:41,919 --> 00:28:47,919
becca said oh yeah um

766
00:28:44,240 --> 00:28:51,279
so i think what i was saying was that

767
00:28:47,919 --> 00:28:52,240
so right now so if people if people

768
00:28:51,279 --> 00:28:54,159
deploy

769
00:28:52,240 --> 00:28:55,760
so so yes if we're prepared to commit

770
00:28:54,159 --> 00:28:57,279
right now that

771
00:28:55,760 --> 00:28:59,039
any any assumption of change will not

772
00:28:57,279 --> 00:29:00,240
use version number one anything change

773
00:28:59,039 --> 00:29:01,679
meaning after the test time the light is

774
00:29:00,240 --> 00:29:04,559
verse number one and this works

775
00:29:01,679 --> 00:29:05,840
but if um okay but that's not that

776
00:29:04,559 --> 00:29:06,879
that's not a commitment we ever made and

777
00:29:05,840 --> 00:29:10,879
it's on normal commitment

778
00:29:06,880 --> 00:29:13,120
so um uh so like uh

779
00:29:10,880 --> 00:29:14,399
yeah i i so so i i suppose one could do

780
00:29:13,120 --> 00:29:15,360
that but i again i think there's just a

781
00:29:14,399 --> 00:29:16,719
little advice like

782
00:29:15,360 --> 00:29:18,240
people should wait this is like what

783
00:29:16,720 --> 00:29:20,720
this is the reason we have like things

784
00:29:18,240 --> 00:29:20,720
going on

785
00:29:24,960 --> 00:29:29,440
okay jonah oh sean

786
00:29:36,080 --> 00:29:39,120
you're on meet jonah

787
00:29:39,360 --> 00:29:46,799
oops sorry there i am um

788
00:29:43,840 --> 00:29:47,760
i want to remind i we are already

789
00:29:46,799 --> 00:29:49,120
deploying

790
00:29:47,760 --> 00:29:52,240
quick just a different version of it

791
00:29:49,120 --> 00:29:55,360
right now i mean we are deploying h329

792
00:29:52,240 --> 00:29:57,840
so v1 should just be another revision

793
00:29:55,360 --> 00:29:59,120
of quick i don't uh think i agree with

794
00:29:57,840 --> 00:30:02,559
martin i don't think that

795
00:29:59,120 --> 00:30:04,158
v1 is any special uh not just because we

796
00:30:02,559 --> 00:30:05,678
can bend another version but also

797
00:30:04,159 --> 00:30:07,520
because

798
00:30:05,679 --> 00:30:08,960
we have deployed quick people are

799
00:30:07,520 --> 00:30:11,200
already doing it right now

800
00:30:08,960 --> 00:30:13,279
like i said they're calling it h329 and

801
00:30:11,200 --> 00:30:15,919
when when we ship v1 it's going to be

802
00:30:13,279 --> 00:30:17,279
it's going to change to v1 from h329

803
00:30:15,919 --> 00:30:21,039
it's not

804
00:30:17,279 --> 00:30:22,240
um unless we believe that the network is

805
00:30:21,039 --> 00:30:25,200
going to treat v1

806
00:30:22,240 --> 00:30:26,640
special as against what we have deployed

807
00:30:25,200 --> 00:30:29,840
right now

808
00:30:26,640 --> 00:30:30,320
i don't understand why version 1 needs

809
00:30:29,840 --> 00:30:32,080
to be

810
00:30:30,320 --> 00:30:34,639
treated any more specially than anything

811
00:30:32,080 --> 00:30:34,639
else we've done

812
00:30:34,880 --> 00:30:38,080
we're going to have a change in salt

813
00:30:36,320 --> 00:30:39,039
we're going to have uh something go on

814
00:30:38,080 --> 00:30:40,720
here i agree with

815
00:30:39,039 --> 00:30:42,320
i still agree with what lars said early

816
00:30:40,720 --> 00:30:43,279
on there are people who are shipping

817
00:30:42,320 --> 00:30:44,960
version one now

818
00:30:43,279 --> 00:30:46,880
uh and nick i don't know if nick banks

819
00:30:44,960 --> 00:30:49,840
is here but he was talking earlier about

820
00:30:46,880 --> 00:30:51,360
uh windows might has they have deadlines

821
00:30:49,840 --> 00:30:52,720
and the deadlines are not rolling

822
00:30:51,360 --> 00:30:54,799
so they're trying to ship something

823
00:30:52,720 --> 00:30:55,840
early next year and they are going to do

824
00:30:54,799 --> 00:30:57,918
that

825
00:30:55,840 --> 00:30:59,279
uh there are there's also signaling

826
00:30:57,919 --> 00:31:00,880
where we are when i'm talking to

827
00:30:59,279 --> 00:31:03,200
customers for example and

828
00:31:00,880 --> 00:31:04,159
they're asking if version one is ready

829
00:31:03,200 --> 00:31:06,799
uh

830
00:31:04,159 --> 00:31:08,159
i it doesn't make sense to wait for

831
00:31:06,799 --> 00:31:11,200
three months of

832
00:31:08,159 --> 00:31:14,720
rfc editor uh fixing

833
00:31:11,200 --> 00:31:15,840
the the the columns and the semicolons

834
00:31:14,720 --> 00:31:17,760
in in the text

835
00:31:15,840 --> 00:31:19,279
before we call version one down but

836
00:31:17,760 --> 00:31:22,158
there's just is no reason

837
00:31:19,279 --> 00:31:22,159
to wait for that

838
00:31:26,640 --> 00:31:31,200
uh ekka if you've got a response to that

839
00:31:31,360 --> 00:31:34,959
just calls the semicolons like we made a

840
00:31:33,200 --> 00:31:36,159
lot of a lot of non-trivial changes to

841
00:31:34,960 --> 00:31:37,279
one three and all 48

842
00:31:36,159 --> 00:31:39,519
because we actually read the document

843
00:31:37,279 --> 00:31:41,200
again with fresh eyes and and the rsa

844
00:31:39,519 --> 00:31:42,880
had questions and none of those actually

845
00:31:41,200 --> 00:31:45,679
required i don't think

846
00:31:42,880 --> 00:31:46,799
like code changes but it's not like like

847
00:31:45,679 --> 00:31:47,760
i'm sorry but if you go through you have

848
00:31:46,799 --> 00:31:49,200
a 300 page

849
00:31:47,760 --> 00:31:49,919
document set you're not going to you're

850
00:31:49,200 --> 00:31:50,799
going to have you're going to have

851
00:31:49,919 --> 00:31:54,559
non-trivial changes

852
00:31:50,799 --> 00:31:54,559
in all 48 you just are okay

853
00:31:57,600 --> 00:32:01,840
okay cool uh ian

854
00:32:05,840 --> 00:32:12,959
yeah you that yes sorry uh

855
00:32:09,600 --> 00:32:14,399
need to mute myself um i just want to

856
00:32:12,960 --> 00:32:17,200
say that like we've deployed

857
00:32:14,399 --> 00:32:18,879
like draft29 quite widely uh both in

858
00:32:17,200 --> 00:32:21,760
chrome as well as in

859
00:32:18,880 --> 00:32:24,159
google services and uh performance seems

860
00:32:21,760 --> 00:32:26,879
quite good so

861
00:32:24,159 --> 00:32:28,159
i don't have any overly large concerns

862
00:32:26,880 --> 00:32:32,799
about the

863
00:32:28,159 --> 00:32:32,799
uh technical aspects of the draft

864
00:32:35,279 --> 00:32:40,399
thank you uh

865
00:32:38,320 --> 00:32:42,080
as the spencer in the queue yeah and i

866
00:32:40,399 --> 00:32:45,199
would like to close the queues

867
00:32:42,080 --> 00:32:46,799
um very soon so so after

868
00:32:45,200 --> 00:32:48,880
after spencer has spoken and we were

869
00:32:46,799 --> 00:32:50,559
gonna sort of close

870
00:32:48,880 --> 00:32:53,519
so if getting q now if you have

871
00:32:50,559 --> 00:32:53,519
something to say on this

872
00:32:54,840 --> 00:32:57,840
thanks

873
00:32:58,640 --> 00:33:01,519
go ahead spencer

874
00:33:05,279 --> 00:33:09,120
ray i thought uh there were people in

875
00:33:07,039 --> 00:33:09,600
line they had to be in front of me in

876
00:33:09,120 --> 00:33:13,360
the cube

877
00:33:09,600 --> 00:33:14,240
um we we've actually had the

878
00:33:13,360 --> 00:33:17,840
conversation

879
00:33:14,240 --> 00:33:22,000
about um not having

880
00:33:17,840 --> 00:33:25,439
a quick v2 anytime

881
00:33:22,000 --> 00:33:27,760
in the foreseeable future but basically

882
00:33:25,440 --> 00:33:30,799
just using the extension mechanism

883
00:33:27,760 --> 00:33:33,279
um a lot and not

884
00:33:30,799 --> 00:33:35,039
and not rolling new version numbers so

885
00:33:33,279 --> 00:33:36,399
it seems like

886
00:33:35,039 --> 00:33:38,158
it seems like that's going to be an

887
00:33:36,399 --> 00:33:41,279
important uh

888
00:33:38,159 --> 00:33:42,799
part of this answer also i agree that

889
00:33:41,279 --> 00:33:44,640
we've always talked about

890
00:33:42,799 --> 00:33:46,480
you know the version number shouldn't be

891
00:33:44,640 --> 00:33:50,480
special uh

892
00:33:46,480 --> 00:33:52,559
you just need to support them but uh

893
00:33:50,480 --> 00:33:54,000
that if that's if that's a helpful

894
00:33:52,559 --> 00:33:55,918
observation

895
00:33:54,000 --> 00:33:58,240
we've talked about that a lot in the

896
00:33:55,919 --> 00:33:58,240
past

897
00:34:01,760 --> 00:34:04,240
thanks beth

898
00:34:04,880 --> 00:34:09,359
i don't see anybody on the queue on this

899
00:34:06,640 --> 00:34:12,320
um so let's move on

900
00:34:09,359 --> 00:34:14,159
uh we're pretty much right on time um

901
00:34:12,320 --> 00:34:16,320
you open issues on quick lb

902
00:34:14,159 --> 00:34:17,200
which is another one of our um adopted

903
00:34:16,320 --> 00:34:18,879
working group item

904
00:34:17,199 --> 00:34:20,799
right hook right at um opera we're going

905
00:34:18,879 --> 00:34:22,639
to try looks like i'm going to try and

906
00:34:20,800 --> 00:34:24,800
focus at least part of the

907
00:34:22,639 --> 00:34:26,159
group mindset now a little bit on our

908
00:34:24,800 --> 00:34:28,720
other um

909
00:34:26,159 --> 00:34:29,919
work item like this one and like ops

910
00:34:28,719 --> 00:34:32,480
drafts that we're also

911
00:34:29,918 --> 00:34:33,520
um supposed to finish at some point soon

912
00:34:32,480 --> 00:34:35,599
um so so

913
00:34:33,520 --> 00:34:37,199
uh expect to see some nudges on making

914
00:34:35,599 --> 00:34:38,879
progress on those drafts and we're gonna

915
00:34:37,199 --> 00:34:40,000
probably have a chat with the editors of

916
00:34:38,879 --> 00:34:43,279
those drafts

917
00:34:40,000 --> 00:34:44,800
on how we're gonna use it we had this

918
00:34:43,280 --> 00:34:46,720
late stage process

919
00:34:44,800 --> 00:34:48,240
for the base draft and and it's a

920
00:34:46,719 --> 00:34:49,279
question mark whether that makes sense

921
00:34:48,239 --> 00:34:51,918
to replicate for

922
00:34:49,280 --> 00:34:53,119
for these drafts or not um so that'll be

923
00:34:51,918 --> 00:34:54,560
a chat that we're going to have with the

924
00:34:53,119 --> 00:34:55,520
editors at some point in the next few

925
00:34:54,560 --> 00:34:58,799
weeks

926
00:34:55,520 --> 00:35:03,839
martin good day everyone

927
00:34:58,800 --> 00:35:03,839
uh next slide

928
00:35:03,920 --> 00:35:08,560
so there's um i i presented

929
00:35:07,119 --> 00:35:11,359
actually a very similar slide deck at

930
00:35:08,560 --> 00:35:13,040
108 um i got some feedback on some

931
00:35:11,359 --> 00:35:14,839
useful things there so we did get rid of

932
00:35:13,040 --> 00:35:17,279
one of the four algorithms which was

933
00:35:14,839 --> 00:35:20,320
actually quite gratifying to delete

934
00:35:17,280 --> 00:35:23,119
um and there's been some other rework

935
00:35:20,320 --> 00:35:24,400
um in terms of contribution so there's

936
00:35:23,119 --> 00:35:26,240
five open issues right now

937
00:35:24,400 --> 00:35:27,520
martin thompson and christian thank you

938
00:35:26,240 --> 00:35:29,118
you've actually provided a lot of great

939
00:35:27,520 --> 00:35:31,040
feedback on the draft and and

940
00:35:29,119 --> 00:35:32,960
we fixed up a lot of things also i've

941
00:35:31,040 --> 00:35:35,279
gotten some some uh

942
00:35:32,960 --> 00:35:36,800
comments on github from from some people

943
00:35:35,280 --> 00:35:38,640
ant financial and they've they've had

944
00:35:36,800 --> 00:35:41,200
some interesting discussions and we've

945
00:35:38,640 --> 00:35:42,879
cleaned up some editorial issues um the

946
00:35:41,200 --> 00:35:43,680
other thing that has happened is i was

947
00:35:42,880 --> 00:35:45,680
able to

948
00:35:43,680 --> 00:35:47,598
open source implementations there's a

949
00:35:45,680 --> 00:35:49,680
library that

950
00:35:47,599 --> 00:35:51,200
will encode and decode cids for you

951
00:35:49,680 --> 00:35:54,000
that's the first item there

952
00:35:51,200 --> 00:35:55,200
and then i've hacked nginx to be a load

953
00:35:54,000 --> 00:35:58,079
balancer in the quick ob

954
00:35:55,200 --> 00:35:59,118
sense and that's the other github yes i

955
00:35:58,079 --> 00:36:00,480
know it's weird there's two different

956
00:35:59,119 --> 00:36:03,520
projects it's

957
00:36:00,480 --> 00:36:06,000
legal stuff my company um

958
00:36:03,520 --> 00:36:07,440
so uh that's available i'm i'm actually

959
00:36:06,000 --> 00:36:09,040
waiting on a server implementation

960
00:36:07,440 --> 00:36:11,119
exists out there and then uh

961
00:36:09,040 --> 00:36:12,240
when when someone has one we can we can

962
00:36:11,119 --> 00:36:14,640
interrupt so

963
00:36:12,240 --> 00:36:17,200
uh please let me know on slack when when

964
00:36:14,640 --> 00:36:17,200
you have that

965
00:36:17,280 --> 00:36:20,480
uh next slide

966
00:36:25,680 --> 00:36:29,359
okay so some some other things that have

967
00:36:27,520 --> 00:36:31,520
happened since 108 i i did

968
00:36:29,359 --> 00:36:33,040
as as i mentioned um ant financial some

969
00:36:31,520 --> 00:36:35,040
discussion of retry service and

970
00:36:33,040 --> 00:36:37,279
we've addressed those critiques uh they

971
00:36:35,040 --> 00:36:38,480
also requested a udp proxy protocol i

972
00:36:37,280 --> 00:36:40,880
think probably many of you familiar with

973
00:36:38,480 --> 00:36:42,720
the tcp version of proxy protocol

974
00:36:40,880 --> 00:36:44,480
uh i thought that was out of scope for

975
00:36:42,720 --> 00:36:45,200
for this particular draft it's more of a

976
00:36:44,480 --> 00:36:47,920
nat thing

977
00:36:45,200 --> 00:36:49,359
in my view um and and in fact it's in

978
00:36:47,920 --> 00:36:52,160
that direct draft later in the

979
00:36:49,359 --> 00:36:53,920
in the agenda but uh if if people really

980
00:36:52,160 --> 00:36:54,799
want to see that then then please say

981
00:36:53,920 --> 00:36:56,720
something

982
00:36:54,800 --> 00:36:58,240
um i went to the ops area to try to get

983
00:36:56,720 --> 00:36:59,439
some views and they didn't really claim

984
00:36:58,240 --> 00:37:01,200
to have the right people

985
00:36:59,440 --> 00:37:02,960
to provide feedback on this so we're

986
00:37:01,200 --> 00:37:05,118
still actually not doing

987
00:37:02,960 --> 00:37:06,800
particularly well on getting feedback

988
00:37:05,119 --> 00:37:08,880
from

989
00:37:06,800 --> 00:37:10,960
layer for load balancer operators

990
00:37:08,880 --> 00:37:14,240
particularly the big cloud providers

991
00:37:10,960 --> 00:37:16,079
azure's may be an exception um

992
00:37:14,240 --> 00:37:17,520
but even then they've been really

993
00:37:16,079 --> 00:37:19,119
reluctant to engage in anything beyond

994
00:37:17,520 --> 00:37:21,119
the plain text algorithm

995
00:37:19,119 --> 00:37:22,960
and today there's still five open issues

996
00:37:21,119 --> 00:37:25,920
several of them have pr's

997
00:37:22,960 --> 00:37:27,680
um and there hasn't been a lot of

998
00:37:25,920 --> 00:37:29,920
feedback on some of them

999
00:37:27,680 --> 00:37:31,200
um and i'm kind of getting to the point

1000
00:37:29,920 --> 00:37:32,880
where i'm just gonna make a decision but

1001
00:37:31,200 --> 00:37:37,839
i'm gonna make one last appeal for for

1002
00:37:32,880 --> 00:37:37,839
some guidance here next slide

1003
00:37:39,119 --> 00:37:44,400
okay um so

1004
00:37:42,320 --> 00:37:45,599
the first two bits of every connection

1005
00:37:44,400 --> 00:37:47,599
id are

1006
00:37:45,599 --> 00:37:49,680
what we call config rotation so one of

1007
00:37:47,599 --> 00:37:50,800
them is left for for tuple routing which

1008
00:37:49,680 --> 00:37:52,960
is a different thing

1009
00:37:50,800 --> 00:37:53,839
but essentially uh if you're rolling out

1010
00:37:52,960 --> 00:37:55,280
a new say

1011
00:37:53,839 --> 00:37:56,799
you're you're rotating your keys then

1012
00:37:55,280 --> 00:37:58,000
it'll take a while for all your servers

1013
00:37:56,800 --> 00:37:59,680
to get those keys and

1014
00:37:58,000 --> 00:38:01,599
and switch from one form cid to the

1015
00:37:59,680 --> 00:38:04,078
other so for a while you can switch

1016
00:38:01,599 --> 00:38:05,680
based off these configuration bits to

1017
00:38:04,079 --> 00:38:07,280
be operating to algorithms or

1018
00:38:05,680 --> 00:38:10,160
configurations at once

1019
00:38:07,280 --> 00:38:11,119
um there is a proposal to make it three

1020
00:38:10,160 --> 00:38:13,680
um

1021
00:38:11,119 --> 00:38:18,720
and the reason for that is actually if

1022
00:38:13,680 --> 00:38:20,560
you have s and i switching next slide

1023
00:38:18,720 --> 00:38:21,839
and this maybe explains the problem a

1024
00:38:20,560 --> 00:38:23,040
little better so i presented this slide

1025
00:38:21,839 --> 00:38:24,799
last time too

1026
00:38:23,040 --> 00:38:26,160
but like a really dumb thing to do if

1027
00:38:24,800 --> 00:38:27,599
you were mega cloud corp who was

1028
00:38:26,160 --> 00:38:28,879
operating these

1029
00:38:27,599 --> 00:38:30,640
these load balancers have a single

1030
00:38:28,880 --> 00:38:32,160
global config where everybody had you

1031
00:38:30,640 --> 00:38:33,759
know just there's one giant server

1032
00:38:32,160 --> 00:38:35,598
mapping for everybody

1033
00:38:33,760 --> 00:38:37,040
um because then all the customers create

1034
00:38:35,599 --> 00:38:37,760
each other server mappings and all you

1035
00:38:37,040 --> 00:38:39,440
need to do

1036
00:38:37,760 --> 00:38:41,440
as an attacker is become a customer of

1037
00:38:39,440 --> 00:38:42,880
mega cloud corp and you have to config

1038
00:38:41,440 --> 00:38:45,920
and you can you can

1039
00:38:42,880 --> 00:38:48,720
decode cids everywhere so that would be

1040
00:38:45,920 --> 00:38:48,720
bad next slide

1041
00:38:50,480 --> 00:38:53,520
so um you know in in practice you're

1042
00:38:53,040 --> 00:38:56,160
going to

1043
00:38:53,520 --> 00:38:57,520
want to run different configs for uh

1044
00:38:56,160 --> 00:38:59,279
different customers that are mutually

1045
00:38:57,520 --> 00:39:00,320
mistrustful of each other and you know

1046
00:38:59,280 --> 00:39:00,960
you can have different load balance for

1047
00:39:00,320 --> 00:39:03,040
instance

1048
00:39:00,960 --> 00:39:04,000
instances different you know virtual ips

1049
00:39:03,040 --> 00:39:06,160
and ports

1050
00:39:04,000 --> 00:39:07,040
or you could do something like the sni

1051
00:39:06,160 --> 00:39:09,520
um

1052
00:39:07,040 --> 00:39:11,200
now if you have low balance instances

1053
00:39:09,520 --> 00:39:12,400
ips and ports then there's no problem

1054
00:39:11,200 --> 00:39:14,000
here you can have different configs

1055
00:39:12,400 --> 00:39:14,880
running on those different uh

1056
00:39:14,000 --> 00:39:15,920
discriminators

1057
00:39:14,880 --> 00:39:18,800
but if it's something that's in the

1058
00:39:15,920 --> 00:39:21,040
client hello and you're operating

1059
00:39:18,800 --> 00:39:22,160
um and and you're trying not to route

1060
00:39:21,040 --> 00:39:23,440
off the fourth couple because the whole

1061
00:39:22,160 --> 00:39:25,839
point of this is to be

1062
00:39:23,440 --> 00:39:27,040
robust to migration then you're you're

1063
00:39:25,839 --> 00:39:30,400
gonna need something

1064
00:39:27,040 --> 00:39:32,000
that is that's in every packet and um

1065
00:39:30,400 --> 00:39:33,520
they're basically just two options one

1066
00:39:32,000 --> 00:39:35,280
is to have

1067
00:39:33,520 --> 00:39:38,400
multiple configs separated by these

1068
00:39:35,280 --> 00:39:38,400
configuration bits

1069
00:39:38,640 --> 00:39:44,000
which is which does solve the problem of

1070
00:39:41,520 --> 00:39:46,079
of having the the mutually

1071
00:39:44,000 --> 00:39:48,000
mutually mistrustful customers being

1072
00:39:46,079 --> 00:39:50,160
able to reach other servers mappings

1073
00:39:48,000 --> 00:39:51,280
however it also means that that sni is

1074
00:39:50,160 --> 00:39:53,359
essentially globally

1075
00:39:51,280 --> 00:39:54,880
visible right you can connect to the you

1076
00:39:53,359 --> 00:39:56,960
can get to the service

1077
00:39:54,880 --> 00:39:58,320
you you could connect with certain sni

1078
00:39:56,960 --> 00:40:00,400
see what the config rotation bits and

1079
00:39:58,320 --> 00:40:03,599
then understand those correspond

1080
00:40:00,400 --> 00:40:05,359
uh which circumvents things like uh echo

1081
00:40:03,599 --> 00:40:06,640
uh the alternatives just make them share

1082
00:40:05,359 --> 00:40:09,040
a config and then

1083
00:40:06,640 --> 00:40:10,640
if you happen to be cohabited with with

1084
00:40:09,040 --> 00:40:12,000
this other customer then

1085
00:40:10,640 --> 00:40:13,759
then there's some limited exposure there

1086
00:40:12,000 --> 00:40:15,040
where they can read your server mapping

1087
00:40:13,760 --> 00:40:16,400
but it'd probably be hard for an

1088
00:40:15,040 --> 00:40:17,520
attacker to deliberately position

1089
00:40:16,400 --> 00:40:20,000
themselves

1090
00:40:17,520 --> 00:40:21,920
it there so there's a trade-off there

1091
00:40:20,000 --> 00:40:24,960
i'm kind of leaning towards

1092
00:40:21,920 --> 00:40:26,160
the second one uh actually i'll say i'll

1093
00:40:24,960 --> 00:40:27,839
strongly lean towards the second one for

1094
00:40:26,160 --> 00:40:29,118
some of the reasons i just described

1095
00:40:27,839 --> 00:40:30,720
if people have a real problem with that

1096
00:40:29,119 --> 00:40:32,160
then this is a good time to bring that

1097
00:40:30,720 --> 00:40:34,720
up

1098
00:40:32,160 --> 00:40:34,720
next slide

1099
00:40:36,560 --> 00:40:39,839
next slide

1100
00:40:41,440 --> 00:40:45,280
so the other item is uh we are

1101
00:40:43,599 --> 00:40:47,280
technically in violation of quick

1102
00:40:45,280 --> 00:40:49,920
transport because we're supposed to have

1103
00:40:47,280 --> 00:40:51,520
really zero open correlation between

1104
00:40:49,920 --> 00:40:52,000
connection ids and that's not strictly

1105
00:40:51,520 --> 00:40:54,160
true

1106
00:40:52,000 --> 00:40:55,680
the plain text collection id by

1107
00:40:54,160 --> 00:40:59,040
definition has the

1108
00:40:55,680 --> 00:41:01,118
server id and the clear um and so uh

1109
00:40:59,040 --> 00:41:02,880
i'm sensing a lot of momentum to keep

1110
00:41:01,119 --> 00:41:07,200
this in the draft

1111
00:41:02,880 --> 00:41:08,240
and so um one possibility here to solve

1112
00:41:07,200 --> 00:41:09,759
this problem

1113
00:41:08,240 --> 00:41:11,040
is or not solve this problem but

1114
00:41:09,760 --> 00:41:12,319
mitigate this problem is to introduce

1115
00:41:11,040 --> 00:41:13,759
the transport parameter

1116
00:41:12,319 --> 00:41:15,599
that base where a server will basically

1117
00:41:13,760 --> 00:41:17,040
tell the client since it's the client so

1118
00:41:15,599 --> 00:41:19,040
the server is making a decision for its

1119
00:41:17,040 --> 00:41:20,880
own convenience that actually has

1120
00:41:19,040 --> 00:41:22,720
the privacy impact on the client just

1121
00:41:20,880 --> 00:41:24,560
having a transport parameter saying

1122
00:41:22,720 --> 00:41:26,078
hey i'm doing this and if you're super

1123
00:41:24,560 --> 00:41:27,359
duper concerned about linkability maybe

1124
00:41:26,079 --> 00:41:29,920
don't migrate

1125
00:41:27,359 --> 00:41:31,839
uh maybe solves the at least addresses

1126
00:41:29,920 --> 00:41:34,800
the problem sufficiently to move forward

1127
00:41:31,839 --> 00:41:37,599
next slide you've eaten in the queue

1128
00:41:34,800 --> 00:41:37,599
yeah ian go ahead

1129
00:41:39,119 --> 00:41:43,359
i just had a really quick comment which

1130
00:41:40,640 --> 00:41:47,520
is that you know anytime you have like

1131
00:41:43,359 --> 00:41:51,920
one uh domain name mapped to one like ip

1132
00:41:47,520 --> 00:41:51,920
you have immediate linkability so

1133
00:41:52,000 --> 00:41:55,200
like there's an extreme in which you're

1134
00:41:54,560 --> 00:41:57,279
just not gonna

1135
00:41:55,200 --> 00:41:58,319
obtain like the the characters we would

1136
00:41:57,280 --> 00:42:01,680
actually like

1137
00:41:58,319 --> 00:42:02,400
so i don't know what to do about that

1138
00:42:01,680 --> 00:42:03,919
but

1139
00:42:02,400 --> 00:42:06,960
i just want to call that out and say

1140
00:42:03,920 --> 00:42:10,160
like the world is not perfect

1141
00:42:06,960 --> 00:42:10,160
this is kind of best effort

1142
00:42:10,560 --> 00:42:14,319
yeah absolutely i mean i think uh one

1143
00:42:12,880 --> 00:42:15,839
lesson from thinking about this quick

1144
00:42:14,319 --> 00:42:17,279
obese stuff for a long time is that

1145
00:42:15,839 --> 00:42:17,920
there's there's no guarantees in this

1146
00:42:17,280 --> 00:42:19,760
space

1147
00:42:17,920 --> 00:42:21,040
but on the other hand like echo exists

1148
00:42:19,760 --> 00:42:22,880
for a reason and largely it's

1149
00:42:21,040 --> 00:42:23,920
consistency of the sni so clearly there

1150
00:42:22,880 --> 00:42:25,520
are use cases

1151
00:42:23,920 --> 00:42:28,839
and it would be a shame to kind of break

1152
00:42:25,520 --> 00:42:31,200
those with something like this

1153
00:42:28,839 --> 00:42:32,720
martin yeah so there's there's two

1154
00:42:31,200 --> 00:42:34,480
things here there's there's the

1155
00:42:32,720 --> 00:42:35,839
this is the same server that we're

1156
00:42:34,480 --> 00:42:38,960
talking to which

1157
00:42:35,839 --> 00:42:39,920
i think to to ian's point if the server

1158
00:42:38,960 --> 00:42:41,280
only has one

1159
00:42:39,920 --> 00:42:43,040
if there's only one server at this ip

1160
00:42:41,280 --> 00:42:46,000
address then you know it's this server

1161
00:42:43,040 --> 00:42:47,200
but the text here is specific to

1162
00:42:46,000 --> 00:42:48,960
connections

1163
00:42:47,200 --> 00:42:50,720
and i don't think you're violating that

1164
00:42:48,960 --> 00:42:53,280
requirement so directly

1165
00:42:50,720 --> 00:42:55,118
it's just that you're you're creating

1166
00:42:53,280 --> 00:42:57,920
smaller anonymity sets

1167
00:42:55,119 --> 00:42:59,200
for those um those customers so if you

1168
00:42:57,920 --> 00:43:02,000
if you think about

1169
00:42:59,200 --> 00:43:03,359
using the plaintext server id that is

1170
00:43:02,000 --> 00:43:05,040
analogous to having

1171
00:43:03,359 --> 00:43:06,400
a single ip for each one of those

1172
00:43:05,040 --> 00:43:07,440
servers that's that's sitting in the

1173
00:43:06,400 --> 00:43:10,240
back end

1174
00:43:07,440 --> 00:43:11,440
and at that point yeah you're back to as

1175
00:43:10,240 --> 00:43:14,399
bad as what in

1176
00:43:11,440 --> 00:43:15,920
ian described which is you know depends

1177
00:43:14,400 --> 00:43:17,520
on how many people are using that server

1178
00:43:15,920 --> 00:43:20,400
as to whether or not you have any real

1179
00:43:17,520 --> 00:43:22,800
anonymity but uh in most cases you'll

1180
00:43:20,400 --> 00:43:24,560
get some

1181
00:43:22,800 --> 00:43:26,400
okay well i'm glad to hear that you're

1182
00:43:24,560 --> 00:43:29,759
comfortable with that um

1183
00:43:26,400 --> 00:43:32,400
uh because i i am uh uh

1184
00:43:29,760 --> 00:43:35,440
do do you think that the um the

1185
00:43:32,400 --> 00:43:37,440
transport parameters worth having

1186
00:43:35,440 --> 00:43:38,560
uh no i think it's probably not worth

1187
00:43:37,440 --> 00:43:41,359
doing something like that

1188
00:43:38,560 --> 00:43:42,078
i suspect that what's well i guess we'll

1189
00:43:41,359 --> 00:43:43,440
find out

1190
00:43:42,079 --> 00:43:44,560
in time but i wouldn't start with

1191
00:43:43,440 --> 00:43:46,000
something like that it doesn't sound

1192
00:43:44,560 --> 00:43:47,200
like it's

1193
00:43:46,000 --> 00:43:49,680
i don't know what i would do with that

1194
00:43:47,200 --> 00:43:49,680
information

1195
00:43:49,760 --> 00:43:53,280
okay um there's a pr there's a pr on on

1196
00:43:52,560 --> 00:43:54,799
the github

1197
00:43:53,280 --> 00:43:56,720
if you want to put in comments on that

1198
00:43:54,800 --> 00:43:59,760
pr that has a tp in it then

1199
00:43:56,720 --> 00:43:59,759
please do ian

1200
00:44:03,760 --> 00:44:07,920
i'm just agreeing with empty saying that

1201
00:44:06,560 --> 00:44:09,359
i don't think it's worth having a

1202
00:44:07,920 --> 00:44:12,319
transfer program

1203
00:44:09,359 --> 00:44:14,240
um we commonly have like 10 000 or more

1204
00:44:12,319 --> 00:44:15,440
connections going to a single machine so

1205
00:44:14,240 --> 00:44:18,479
like

1206
00:44:15,440 --> 00:44:19,280
i mean that's sufficiently an honest i

1207
00:44:18,480 --> 00:44:22,880
think for

1208
00:44:19,280 --> 00:44:26,880
the purposes of our conversation

1209
00:44:22,880 --> 00:44:26,880
okay next slide

1210
00:44:28,800 --> 00:44:34,640
next slide just click through all this

1211
00:44:32,400 --> 00:44:34,640
stuff

1212
00:44:35,599 --> 00:44:40,000
uh next slide we already talked about

1213
00:44:37,760 --> 00:44:43,280
this

1214
00:44:40,000 --> 00:44:45,680
okay that's it any other questions

1215
00:44:43,280 --> 00:44:45,680
comments

1216
00:44:47,680 --> 00:44:51,200
oh i'm sorry there's another issue there

1217
00:44:49,680 --> 00:44:53,680
but bear go ahead

1218
00:44:51,200 --> 00:44:54,960
there's there's two more slides yes yes

1219
00:44:53,680 --> 00:44:58,399
i forgot but yes

1220
00:44:54,960 --> 00:44:58,400
but uh go ahead eric

1221
00:45:00,560 --> 00:45:06,078
it's it's a more general comment keep

1222
00:45:01,920 --> 00:45:07,839
going okay so this um

1223
00:45:06,079 --> 00:45:09,839
uh this has actually been resolved

1224
00:45:07,839 --> 00:45:11,440
recently uh christian gave me a pr that

1225
00:45:09,839 --> 00:45:15,119
we're talking through

1226
00:45:11,440 --> 00:45:17,359
so um next slide i think we're done but

1227
00:45:15,119 --> 00:45:18,720
let's see what the next one is no that's

1228
00:45:17,359 --> 00:45:20,400
it okay

1229
00:45:18,720 --> 00:45:23,439
oh yeah actually there was more point

1230
00:45:20,400 --> 00:45:23,440
here so like um

1231
00:45:24,880 --> 00:45:28,720
there's nothing um there's like a

1232
00:45:27,359 --> 00:45:30,480
there's a list of the things that you

1233
00:45:28,720 --> 00:45:32,000
need to configure to make this work

1234
00:45:30,480 --> 00:45:34,079
uh but there's no configuration

1235
00:45:32,000 --> 00:45:35,920
mechanism and i've really not been able

1236
00:45:34,079 --> 00:45:37,920
to get any feedback from anyone on like

1237
00:45:35,920 --> 00:45:40,160
what would be a useful thing to do

1238
00:45:37,920 --> 00:45:41,200
um if anyone has any ideas here like i

1239
00:45:40,160 --> 00:45:43,598
would very much

1240
00:45:41,200 --> 00:45:44,799
appreciate a pr i think we can we can

1241
00:45:43,599 --> 00:45:46,640
move forward without it

1242
00:45:44,800 --> 00:45:48,880
but it would make the draft better that

1243
00:45:46,640 --> 00:45:50,720
was my last request

1244
00:45:48,880 --> 00:45:54,400
and that's it i think i really am done

1245
00:45:50,720 --> 00:45:54,399
now uh eric

1246
00:45:58,079 --> 00:46:02,240
we uh we we were chatting with some of

1247
00:46:00,319 --> 00:46:04,079
our cdn folks and some of the other

1248
00:46:02,240 --> 00:46:05,439
people who do some of our core network

1249
00:46:04,079 --> 00:46:07,200
operations and stuff

1250
00:46:05,440 --> 00:46:08,640
about you know hey there's this quick

1251
00:46:07,200 --> 00:46:09,680
thing and could we maybe like make that

1252
00:46:08,640 --> 00:46:13,200
work please

1253
00:46:09,680 --> 00:46:14,799
um and we

1254
00:46:13,200 --> 00:46:18,000
they'd been involved in some of the very

1255
00:46:14,800 --> 00:46:19,839
early renditions of some of the lb stuff

1256
00:46:18,000 --> 00:46:21,440
and we said hey can you can you take

1257
00:46:19,839 --> 00:46:24,000
another look and and see

1258
00:46:21,440 --> 00:46:25,200
and they were very much happier with

1259
00:46:24,000 --> 00:46:28,079
with some of the later things

1260
00:46:25,200 --> 00:46:29,279
so i wanted to say thank you for for

1261
00:46:28,079 --> 00:46:30,400
putting so much time and effort into

1262
00:46:29,280 --> 00:46:32,079
this i know it hasn't had as much

1263
00:46:30,400 --> 00:46:33,680
discussion as a lot of the other things

1264
00:46:32,079 --> 00:46:36,160
uh but we've at least got a bunch of

1265
00:46:33,680 --> 00:46:42,160
folks who are uh reading it closely and

1266
00:46:36,160 --> 00:46:45,200
and care a lot about what's going on

1267
00:46:42,160 --> 00:46:46,319
cool i um expect to wrap up the

1268
00:46:45,200 --> 00:46:49,439
remaining issues

1269
00:46:46,319 --> 00:46:52,319
shortly after this meeting and so um

1270
00:46:49,440 --> 00:46:52,880
you know hopefully uh i mean i don't

1271
00:46:52,319 --> 00:46:54,400
really see any

1272
00:46:52,880 --> 00:46:55,839
obstacles to working group last call

1273
00:46:54,400 --> 00:46:58,880
unless people start reading it and

1274
00:46:55,839 --> 00:46:58,880
coming up more issues

1275
00:47:02,480 --> 00:47:07,920
thanks thanks martin

1276
00:47:08,319 --> 00:47:13,040
next up we have the uh ups drafts and

1277
00:47:11,599 --> 00:47:16,160
there's no slides

1278
00:47:13,040 --> 00:47:19,759
but i was told to pull up this page

1279
00:47:16,160 --> 00:47:19,759
uh brian maria go ahead

1280
00:47:20,160 --> 00:47:26,960
good morning afternoon evening

1281
00:47:25,200 --> 00:47:28,799
so uh yeah actually if you just go to

1282
00:47:26,960 --> 00:47:30,640
the issues tab um that's mainly what i

1283
00:47:28,800 --> 00:47:33,680
want to show here is we have

1284
00:47:30,640 --> 00:47:36,640
um three issues uh

1285
00:47:33,680 --> 00:47:37,440
one of which i was able to do a pr for

1286
00:47:36,640 --> 00:47:39,520
during the

1287
00:47:37,440 --> 00:47:40,800
um where we use version one is version

1288
00:47:39,520 --> 00:47:43,680
one discussion

1289
00:47:40,800 --> 00:47:45,440
um one of which i think does require a

1290
00:47:43,680 --> 00:47:47,598
little bit of discussion so whether we

1291
00:47:45,440 --> 00:47:50,800
want to have normative language or not

1292
00:47:47,599 --> 00:47:53,839
uh and one of which uh has

1293
00:47:50,800 --> 00:47:55,520
a little bit of text to add um

1294
00:47:53,839 --> 00:47:57,119
we've had some discussion on this

1295
00:47:55,520 --> 00:47:58,480
document sort of in hallways we've had

1296
00:47:57,119 --> 00:47:58,960
some discussion on the mailing list

1297
00:47:58,480 --> 00:48:02,000
we've had

1298
00:47:58,960 --> 00:48:03,440
somewhat more discussion in the uh the

1299
00:48:02,000 --> 00:48:04,720
issues we are getting um

1300
00:48:03,440 --> 00:48:06,079
more participation from people who were

1301
00:48:04,720 --> 00:48:07,919
in the working group this time last year

1302
00:48:06,079 --> 00:48:11,119
thank you very much that's good

1303
00:48:07,920 --> 00:48:14,240
um basically uh i'm here to say

1304
00:48:11,119 --> 00:48:16,400
uh the train is leaving the station um

1305
00:48:14,240 --> 00:48:17,919
we would intend uh once these three are

1306
00:48:16,400 --> 00:48:21,280
fixed and have prs

1307
00:48:17,920 --> 00:48:24,800
um uh merged for them to submit

1308
00:48:21,280 --> 00:48:26,240
uh another uh rev of the dock and uh

1309
00:48:24,800 --> 00:48:27,359
have that go to working group last call

1310
00:48:26,240 --> 00:48:30,799
then

1311
00:48:27,359 --> 00:48:32,240
um so if you have anything that you um

1312
00:48:30,800 --> 00:48:33,760
definitely want to say or ask about

1313
00:48:32,240 --> 00:48:34,720
these documents right now now is your

1314
00:48:33,760 --> 00:48:37,599
five minute chance

1315
00:48:34,720 --> 00:48:38,399
to do so in this meeting uh otherwise we

1316
00:48:37,599 --> 00:48:41,839
would intend

1317
00:48:38,400 --> 00:48:43,200
to um send revisions these documents

1318
00:48:41,839 --> 00:48:44,240
that are ready for working group last

1319
00:48:43,200 --> 00:48:49,839
call before

1320
00:48:44,240 --> 00:48:49,839
the next ietf

1321
00:48:51,760 --> 00:48:55,599
yeah and i actually think we we actually

1322
00:48:53,520 --> 00:48:56,720
did address uh 115 we probably just

1323
00:48:55,599 --> 00:49:00,880
didn't close it but

1324
00:48:56,720 --> 00:49:03,919
like it would be fine as well

1325
00:49:00,880 --> 00:49:05,359
yeah so we'll uh we'll you know i'm

1326
00:49:03,920 --> 00:49:07,520
in the background here sort of clearing

1327
00:49:05,359 --> 00:49:09,520
these issues up uh so it could even be

1328
00:49:07,520 --> 00:49:11,200
by the end of this week we have

1329
00:49:09,520 --> 00:49:12,720
documents that we think are ready to rev

1330
00:49:11,200 --> 00:49:13,279
we'll just submit new versions and then

1331
00:49:12,720 --> 00:49:14,959
we can

1332
00:49:13,280 --> 00:49:18,160
um discuss on the list whether we want

1333
00:49:14,960 --> 00:49:18,160
to go to work last call on them

1334
00:49:18,400 --> 00:49:22,480
yeah i think that makes sense so um we

1335
00:49:21,119 --> 00:49:24,079
we certainly want to like

1336
00:49:22,480 --> 00:49:25,520
have people take a broader look at these

1337
00:49:24,079 --> 00:49:27,119
and i think going to work group last

1338
00:49:25,520 --> 00:49:29,520
call is an excellent way to

1339
00:49:27,119 --> 00:49:31,040
make that happen and they've been

1340
00:49:29,520 --> 00:49:32,640
hanging around for a long time and not

1341
00:49:31,040 --> 00:49:33,520
given that the bass drafts are now

1342
00:49:32,640 --> 00:49:36,480
stable

1343
00:49:33,520 --> 00:49:36,880
these ones can certainly stabilize too

1344
00:49:36,480 --> 00:49:40,079
and then

1345
00:49:36,880 --> 00:49:42,559
we can hopefully ship them uh soon

1346
00:49:40,079 --> 00:49:43,760
um so i would agree with that right so

1347
00:49:42,559 --> 00:49:45,440
if you look at like if you look at like

1348
00:49:43,760 --> 00:49:46,800
issue 100 one of the reasons you've been

1349
00:49:45,440 --> 00:49:48,079
have been sitting around for a long time

1350
00:49:46,800 --> 00:49:49,280
is we're waiting for the bass drafts to

1351
00:49:48,079 --> 00:49:50,640
stabilize because we're actually sort of

1352
00:49:49,280 --> 00:49:53,440
like doing editorial things

1353
00:49:50,640 --> 00:49:54,480
into those uh into those drafts right

1354
00:49:53,440 --> 00:49:55,920
like just like

1355
00:49:54,480 --> 00:49:57,760
making sure the section numbers line up

1356
00:49:55,920 --> 00:50:00,160
and stuff like that was one that we were

1357
00:49:57,760 --> 00:50:00,800
that we were holding on to um but yeah

1358
00:50:00,160 --> 00:50:04,078
so

1359
00:50:00,800 --> 00:50:05,680
um i think we're ready to go uh and

1360
00:50:04,079 --> 00:50:07,359
thank you very much to everyone who has

1361
00:50:05,680 --> 00:50:10,960
since the last time

1362
00:50:07,359 --> 00:50:12,160
oh just lost lights that's neat um

1363
00:50:10,960 --> 00:50:13,680
since the last because i started

1364
00:50:12,160 --> 00:50:14,440
apparently i started a poll that's why

1365
00:50:13,680 --> 00:50:17,200
you lost the lights

1366
00:50:14,440 --> 00:50:19,520
[Laughter]

1367
00:50:17,200 --> 00:50:20,399
since the last time uh we came up here

1368
00:50:19,520 --> 00:50:21,680
and did the

1369
00:50:20,400 --> 00:50:22,800
you know please please look at these

1370
00:50:21,680 --> 00:50:23,839
documents we have had more people

1371
00:50:22,800 --> 00:50:25,200
looking at the document so thank you

1372
00:50:23,839 --> 00:50:27,359
very much to everyone who's graduated in

1373
00:50:25,200 --> 00:50:30,960
the meantime

1374
00:50:27,359 --> 00:50:32,880
yeah so i i um did a show of hands

1375
00:50:30,960 --> 00:50:34,000
uh thingy so if you switch to that tab

1376
00:50:32,880 --> 00:50:35,599
because i would like to know

1377
00:50:34,000 --> 00:50:38,160
sort of who read a version of these

1378
00:50:35,599 --> 00:50:40,000
drafts like during this year

1379
00:50:38,160 --> 00:50:41,680
um so so if you could sort of raise your

1380
00:50:40,000 --> 00:50:43,520
hand or not raise your hand actively

1381
00:50:41,680 --> 00:50:45,359
that would at least give a sort of

1382
00:50:43,520 --> 00:50:47,280
an initial feeling of you know how much

1383
00:50:45,359 --> 00:50:49,359
review have these recently gotten in

1384
00:50:47,280 --> 00:50:50,400
in the working group um and that might

1385
00:50:49,359 --> 00:50:52,078
inform you know

1386
00:50:50,400 --> 00:50:54,240
how how long the work and grab group

1387
00:50:52,079 --> 00:50:56,559
last call should be and so on plus

1388
00:50:54,240 --> 00:50:58,479
um i want to use this tool for something

1389
00:50:56,559 --> 00:51:00,960
and i noticed that a auto capitalization

1390
00:50:58,480 --> 00:51:04,480
because i did not shout that question

1391
00:51:00,960 --> 00:51:05,520
uh when i typed it but uh well usually

1392
00:51:04,480 --> 00:51:07,599
we're in a room with

1393
00:51:05,520 --> 00:51:09,119
really crappy acoustics so i think it's

1394
00:51:07,599 --> 00:51:10,559
it's you know shouting this is actually

1395
00:51:09,119 --> 00:51:13,200
appropriate

1396
00:51:10,559 --> 00:51:14,480
yeah it also i mean the font size also

1397
00:51:13,200 --> 00:51:15,759
means that you have a certain limit of

1398
00:51:14,480 --> 00:51:18,480
how long the question can be which i

1399
00:51:15,760 --> 00:51:18,480
guess is a feature

1400
00:51:19,760 --> 00:51:23,040
right so um i'm going to end the session

1401
00:51:21,920 --> 00:51:26,559
in about three seconds

1402
00:51:23,040 --> 00:51:30,000
and then we'll see um where we are

1403
00:51:26,559 --> 00:51:32,160
going once and we're done

1404
00:51:30,000 --> 00:51:33,440
so we have 16 people who said they read

1405
00:51:32,160 --> 00:51:36,000
a version

1406
00:51:33,440 --> 00:51:38,000
out of 128 participants which is not

1407
00:51:36,000 --> 00:51:38,640
great and and 28 actively said they

1408
00:51:38,000 --> 00:51:41,040
didn't

1409
00:51:38,640 --> 00:51:41,680
um so i i guess that that argues for a

1410
00:51:41,040 --> 00:51:43,359
longer

1411
00:51:41,680 --> 00:51:44,879
working group last call maybe do two or

1412
00:51:43,359 --> 00:51:45,759
three weeks or something like that to

1413
00:51:44,880 --> 00:51:48,480
really

1414
00:51:45,760 --> 00:51:50,000
get people to take take another look um

1415
00:51:48,480 --> 00:51:51,440
a pro tip you don't have to wait

1416
00:51:50,000 --> 00:51:53,920
for that working group last call to read

1417
00:51:51,440 --> 00:51:55,760
these documents you can read them now

1418
00:51:53,920 --> 00:51:58,079
and send feedback already right there's

1419
00:51:55,760 --> 00:52:00,800
there's no uh need to to hold back if

1420
00:51:58,079 --> 00:52:00,800
you have some time

1421
00:52:00,880 --> 00:52:05,839
anything more on um

1422
00:52:08,400 --> 00:52:12,559
um so i think like we've been reading

1423
00:52:10,640 --> 00:52:13,200
the other um documents and we're trying

1424
00:52:12,559 --> 00:52:14,960
to uh

1425
00:52:13,200 --> 00:52:16,960
flag anything that needs to be mentioned

1426
00:52:14,960 --> 00:52:18,160
in those drafts but like if people have

1427
00:52:16,960 --> 00:52:19,440
more stuff

1428
00:52:18,160 --> 00:52:20,720
that's something to look for it's not

1429
00:52:19,440 --> 00:52:22,160
only like reading the drafts and

1430
00:52:20,720 --> 00:52:23,520
figuring out if you agree or disagree

1431
00:52:22,160 --> 00:52:24,720
with anything that's in there but also

1432
00:52:23,520 --> 00:52:27,440
figuring out if there's anything that

1433
00:52:24,720 --> 00:52:27,439
need to be added

1434
00:52:28,240 --> 00:52:31,040
and i would say there might also be

1435
00:52:29,520 --> 00:52:32,720
things that that might need to be taken

1436
00:52:31,040 --> 00:52:36,000
away we've tried to take

1437
00:52:32,720 --> 00:52:38,078
like so things that were initially uh

1438
00:52:36,000 --> 00:52:39,680
mentioned us i think especially in the

1439
00:52:38,079 --> 00:52:40,480
applicability draft that have now made

1440
00:52:39,680 --> 00:52:42,720
it into

1441
00:52:40,480 --> 00:52:43,920
the uh the bass drafts right like so

1442
00:52:42,720 --> 00:52:44,240
things that we originally didn't think

1443
00:52:43,920 --> 00:52:45,359
were

1444
00:52:44,240 --> 00:52:47,439
going to make it into the bass drops

1445
00:52:45,359 --> 00:52:48,960
we've cut a few of those over the

1446
00:52:47,440 --> 00:52:50,240
um over the time that we've been editing

1447
00:52:48,960 --> 00:52:51,200
these documents but if there are any

1448
00:52:50,240 --> 00:52:52,640
more that

1449
00:52:51,200 --> 00:52:56,078
in other people's opinion that we were

1450
00:52:52,640 --> 00:52:56,078
missing that would also be good input

1451
00:52:58,400 --> 00:53:04,400
okay cool thank you um

1452
00:53:02,160 --> 00:53:05,279
and that brings us in the in the uh

1453
00:53:04,400 --> 00:53:08,960
bashed agenda

1454
00:53:05,280 --> 00:53:10,480
brings us to the um other issues aka if

1455
00:53:08,960 --> 00:53:13,920
time permits section where we have

1456
00:53:10,480 --> 00:53:15,520
um four drafts uh uh four drafts for

1457
00:53:13,920 --> 00:53:17,680
four presentations that are going to be

1458
00:53:15,520 --> 00:53:19,440
quite quick with a quite quick uh

1459
00:53:17,680 --> 00:53:20,879
discussion uh at the end neither of

1460
00:53:19,440 --> 00:53:21,920
these are at the moment working group

1461
00:53:20,880 --> 00:53:24,800
items

1462
00:53:21,920 --> 00:53:25,920
um and uh we're gonna then hopefully be

1463
00:53:24,800 --> 00:53:27,599
able to do this in

1464
00:53:25,920 --> 00:53:29,520
let's say half an hour or so or maybe 40

1465
00:53:27,599 --> 00:53:30,240
minutes and then have a chunk of time at

1466
00:53:29,520 --> 00:53:32,160
the end for

1467
00:53:30,240 --> 00:53:33,520
multi-part first one of these is version

1468
00:53:32,160 --> 00:53:36,160
ls aliasing

1469
00:53:33,520 --> 00:53:38,160
go ahead martin yeah hello again

1470
00:53:36,160 --> 00:53:39,118
everyone so the um the purpose of this

1471
00:53:38,160 --> 00:53:40,399
draft is to

1472
00:53:39,119 --> 00:53:42,480
improve both the greasing and the

1473
00:53:40,400 --> 00:53:44,400
privacy properties of quick and this is

1474
00:53:42,480 --> 00:53:45,520
basically taking a quite old martin

1475
00:53:44,400 --> 00:53:50,079
seaman

1476
00:53:45,520 --> 00:53:51,839
vr and dialing it up to 11 next slide

1477
00:53:50,079 --> 00:53:53,280
so the basic idea is this so you connect

1478
00:53:51,839 --> 00:53:55,119
with version one and

1479
00:53:53,280 --> 00:53:56,319
in that handshake you deliver a the

1480
00:53:55,119 --> 00:53:57,440
server developer is a transport

1481
00:53:56,319 --> 00:54:00,558
parameter that has

1482
00:53:57,440 --> 00:54:01,359
um uh a bunch of essentially random

1483
00:54:00,559 --> 00:54:04,079
numbers

1484
00:54:01,359 --> 00:54:05,598
there's a a version number an initial

1485
00:54:04,079 --> 00:54:07,119
token extension which is which is

1486
00:54:05,599 --> 00:54:08,319
something that's just tacked on to the

1487
00:54:07,119 --> 00:54:10,559
to the token

1488
00:54:08,319 --> 00:54:12,319
uh and then there's a salt and there's a

1489
00:54:10,559 --> 00:54:13,040
packet length offset which is an integer

1490
00:54:12,319 --> 00:54:16,000
that's applied

1491
00:54:13,040 --> 00:54:16,960
to packet links later on and so the the

1492
00:54:16,000 --> 00:54:19,119
salt and the

1493
00:54:16,960 --> 00:54:20,319
the offset are actually computed via

1494
00:54:19,119 --> 00:54:22,720
some

1495
00:54:20,319 --> 00:54:25,359
some secure hash from the version number

1496
00:54:22,720 --> 00:54:27,680
and ite and so the idea is that next

1497
00:54:25,359 --> 00:54:27,680
slide

1498
00:54:28,079 --> 00:54:34,240
the client takes all that data uh uses

1499
00:54:31,200 --> 00:54:35,680
in its subsequent connection it uses the

1500
00:54:34,240 --> 00:54:37,919
random version number

1501
00:54:35,680 --> 00:54:39,520
it it appends that token extension to

1502
00:54:37,920 --> 00:54:40,160
whatever other token it might have

1503
00:54:39,520 --> 00:54:41,759
initial

1504
00:54:40,160 --> 00:54:43,040
or or it could just have that if it

1505
00:54:41,760 --> 00:54:44,319
doesn't have a token just put that in

1506
00:54:43,040 --> 00:54:46,799
the in the token field

1507
00:54:44,319 --> 00:54:48,480
and then it adds the length offset to

1508
00:54:46,799 --> 00:54:50,960
the packet length

1509
00:54:48,480 --> 00:54:51,680
um and now the server gets that and from

1510
00:54:50,960 --> 00:54:53,599
the token

1511
00:54:51,680 --> 00:54:54,960
extension and the version it is able to

1512
00:54:53,599 --> 00:54:58,079
compute the salt

1513
00:54:54,960 --> 00:54:58,559
again as well as the offset and then so

1514
00:54:58,079 --> 00:55:00,960
it

1515
00:54:58,559 --> 00:55:02,240
and and that salt is what's used to

1516
00:55:00,960 --> 00:55:04,799
encrypt the initial packet

1517
00:55:02,240 --> 00:55:05,439
in fact all the initial packets so now

1518
00:55:04,799 --> 00:55:07,920
so for

1519
00:55:05,440 --> 00:55:10,240
for connections after the first the

1520
00:55:07,920 --> 00:55:12,319
initial packets are encrypted with a

1521
00:55:10,240 --> 00:55:14,078
with it with keys that are not

1522
00:55:12,319 --> 00:55:16,319
accessible to anyone who happens to be

1523
00:55:14,079 --> 00:55:19,520
observing

1524
00:55:16,319 --> 00:55:21,279
next slide so

1525
00:55:19,520 --> 00:55:22,960
this obviously greases a bunch of stuff

1526
00:55:21,280 --> 00:55:24,720
so so currently um

1527
00:55:22,960 --> 00:55:26,319
we variable values for most of the

1528
00:55:24,720 --> 00:55:27,680
fields the initial but a lot of them are

1529
00:55:26,319 --> 00:55:30,799
not unreadable

1530
00:55:27,680 --> 00:55:33,200
um uh

1531
00:55:30,799 --> 00:55:34,319
and we've covered if we covered a lot of

1532
00:55:33,200 --> 00:55:37,598
things that um

1533
00:55:34,319 --> 00:55:39,200
aren't uh so so this draft uh basically

1534
00:55:37,599 --> 00:55:40,400
makes almost everything else unreadable

1535
00:55:39,200 --> 00:55:42,000
that is supposed to be

1536
00:55:40,400 --> 00:55:43,599
increases most of what's left of course

1537
00:55:42,000 --> 00:55:45,760
there's a different draft to handle the

1538
00:55:43,599 --> 00:55:47,839
the quick bit which i didn't touch that

1539
00:55:45,760 --> 00:55:48,240
packet type is possible but that has

1540
00:55:47,839 --> 00:55:51,440
some

1541
00:55:48,240 --> 00:55:54,799
um that has some issues and i didn't

1542
00:55:51,440 --> 00:55:54,799
include it in the draft next slide

1543
00:55:57,040 --> 00:56:00,839
so i'm going to make a lot of claims

1544
00:55:58,720 --> 00:56:03,598
about this design

1545
00:56:00,839 --> 00:56:04,480
um i'm not gonna read them all but sort

1546
00:56:03,599 --> 00:56:07,440
of the highlights

1547
00:56:04,480 --> 00:56:08,799
uh so among good things uh i i'll

1548
00:56:07,440 --> 00:56:10,559
contend that the initial pack is

1549
00:56:08,799 --> 00:56:14,000
entirely private immune from

1550
00:56:10,559 --> 00:56:14,319
ossification uh you can't ossify tls

1551
00:56:14,000 --> 00:56:16,240
stuff

1552
00:56:14,319 --> 00:56:18,079
if it's running over quick um so we

1553
00:56:16,240 --> 00:56:19,200
could even use the version field again

1554
00:56:18,079 --> 00:56:21,359
it greases things that haven't been

1555
00:56:19,200 --> 00:56:23,279
greased before it you know deals with

1556
00:56:21,359 --> 00:56:25,119
a lot of initial gesture injection

1557
00:56:23,280 --> 00:56:27,520
attacks etc

1558
00:56:25,119 --> 00:56:29,280
um however it does not cover the first

1559
00:56:27,520 --> 00:56:30,799
connection which is a serious problem it

1560
00:56:29,280 --> 00:56:32,240
does depend on the version negotiation

1561
00:56:30,799 --> 00:56:33,280
draft which i think is going to move

1562
00:56:32,240 --> 00:56:34,959
forward

1563
00:56:33,280 --> 00:56:36,480
um and most of all like this is

1564
00:56:34,960 --> 00:56:37,839
something that i think a lot of people

1565
00:56:36,480 --> 00:56:40,400
incentive to drop

1566
00:56:37,839 --> 00:56:42,078
and if if no like economically important

1567
00:56:40,400 --> 00:56:44,079
browsers and websites are interested in

1568
00:56:42,079 --> 00:56:45,040
this then it's really not worth moving

1569
00:56:44,079 --> 00:56:47,760
forward on

1570
00:56:45,040 --> 00:56:48,960
um in terms of moving forward i think

1571
00:56:47,760 --> 00:56:51,200
it's certainly

1572
00:56:48,960 --> 00:56:52,480
possible to maybe steal some stuff from

1573
00:56:51,200 --> 00:56:53,520
echo to do something about the first

1574
00:56:52,480 --> 00:56:55,760
connection

1575
00:56:53,520 --> 00:56:57,920
before i really invest time in that or

1576
00:56:55,760 --> 00:56:59,119
just running echo itself i suppose but

1577
00:56:57,920 --> 00:57:00,480
uh before investing a lot of time in

1578
00:56:59,119 --> 00:57:03,040
that i just wanted to find out if there

1579
00:57:00,480 --> 00:57:05,680
was any real

1580
00:57:03,040 --> 00:57:07,359
interest in continuing to develop this

1581
00:57:05,680 --> 00:57:09,919
idea

1582
00:57:07,359 --> 00:57:09,920
next slide

1583
00:57:10,960 --> 00:57:14,720
so there's on the github christian

1584
00:57:22,000 --> 00:57:27,839
you are muted

1585
00:57:28,240 --> 00:57:34,399
still muted still muted question

1586
00:57:31,440 --> 00:57:35,760
am i good now yeah very yeah i mean i i

1587
00:57:34,400 --> 00:57:38,240
did not realize that i had to click

1588
00:57:35,760 --> 00:57:41,599
audio and video i'm just dumb

1589
00:57:38,240 --> 00:57:44,160
and old and busy but

1590
00:57:41,599 --> 00:57:45,839
yeah it's very interesting to find

1591
00:57:44,160 --> 00:57:47,118
something that makes the connection more

1592
00:57:45,839 --> 00:57:49,440
robust

1593
00:57:47,119 --> 00:57:51,839
i wonder that if we do want to make the

1594
00:57:49,440 --> 00:57:54,880
connection more robust whether we should

1595
00:57:51,839 --> 00:57:57,119
actually change the encryption or

1596
00:57:54,880 --> 00:57:58,160
add an additional checksum to verify

1597
00:57:57,119 --> 00:58:01,280
that the things are not

1598
00:57:58,160 --> 00:58:04,078
missed in transit i mean

1599
00:58:01,280 --> 00:58:05,920
there is a there is a big step in

1600
00:58:04,079 --> 00:58:08,400
robustness between

1601
00:58:05,920 --> 00:58:10,000
preventing third party to mess with the

1602
00:58:08,400 --> 00:58:13,040
packets

1603
00:58:10,000 --> 00:58:13,760
and making the packet not observable by

1604
00:58:13,040 --> 00:58:16,558
anybody

1605
00:58:13,760 --> 00:58:23,839
because make not observed by anybody may

1606
00:58:16,559 --> 00:58:23,839
well be a bridge too far

1607
00:58:28,559 --> 00:58:32,160
so to summarize i'd be interested to

1608
00:58:30,799 --> 00:58:34,240
look at

1609
00:58:32,160 --> 00:58:37,839
something along those lines but

1610
00:58:34,240 --> 00:58:37,839
something that goes for

1611
00:58:38,319 --> 00:58:44,160
authentication of the packet rather than

1612
00:58:41,599 --> 00:58:44,160
encryption

1613
00:58:47,359 --> 00:58:50,640
yes i i know you have something in this

1614
00:58:49,119 --> 00:58:52,000
space christian um

1615
00:58:50,640 --> 00:58:54,558
uh there's a separate draft that you and

1616
00:58:52,000 --> 00:58:55,839
kazuo did um which was an influence so

1617
00:58:54,559 --> 00:58:58,000
thanks for that

1618
00:58:55,839 --> 00:59:01,119
uh all right yeah so i think i'm i'm

1619
00:58:58,000 --> 00:59:03,040
trying to dial this up to really

1620
00:59:01,119 --> 00:59:04,799
this sort of a maximum result i think

1621
00:59:03,040 --> 00:59:06,160
some people in the in the

1622
00:59:04,799 --> 00:59:07,520
in the chat are saying well this is

1623
00:59:06,160 --> 00:59:09,118
really about the greasing not about the

1624
00:59:07,520 --> 00:59:11,200
security and the privacy

1625
00:59:09,119 --> 00:59:12,799
and um if that's the attitude i think

1626
00:59:11,200 --> 00:59:14,399
you know we can go something closer to

1627
00:59:12,799 --> 00:59:15,280
martin seaman's original proposal which

1628
00:59:14,400 --> 00:59:18,400
is just that

1629
00:59:15,280 --> 00:59:19,680
for a for a server to to have two or

1630
00:59:18,400 --> 00:59:21,119
three versions that

1631
00:59:19,680 --> 00:59:23,279
and different salts that it just gives

1632
00:59:21,119 --> 00:59:25,280
to everybody um

1633
00:59:23,280 --> 00:59:27,119
uh that's a direction we could take this

1634
00:59:25,280 --> 00:59:33,839
if people are interested in implementing

1635
00:59:27,119 --> 00:59:33,839
that grease

1636
00:59:37,280 --> 00:59:40,799
it would be interesting to hear some

1637
00:59:38,799 --> 00:59:41,440
comments on on what direction people

1638
00:59:40,799 --> 00:59:44,880
think

1639
00:59:41,440 --> 00:59:45,839
um work in this um space should take if

1640
00:59:44,880 --> 00:59:48,400
any right should it

1641
00:59:45,839 --> 00:59:49,920
go towards greasing should it go towards

1642
00:59:48,400 --> 00:59:51,520
what christian outlined

1643
00:59:49,920 --> 00:59:53,200
should it you know should we not do

1644
00:59:51,520 --> 00:59:55,359
anything in this space

1645
00:59:53,200 --> 00:59:56,799
so maybe some quick feedback would be

1646
00:59:55,359 --> 00:59:58,240
useful i guess for martin to to

1647
00:59:56,799 --> 00:59:58,839
determine if he wants to spend more time

1648
00:59:58,240 --> 01:00:01,839
on this

1649
00:59:58,839 --> 01:00:01,839
david

1650
01:00:03,440 --> 01:00:09,520
go ahead david cool um

1651
01:00:06,480 --> 01:00:12,240
i i think this is great um i think this

1652
01:00:09,520 --> 01:00:13,440
is useful and it's gonna help you know

1653
01:00:12,240 --> 01:00:16,799
make a slight dent

1654
01:00:13,440 --> 01:00:19,520
in uh optification risk and also has

1655
01:00:16,799 --> 01:00:20,000
slight privacy improvements i think

1656
01:00:19,520 --> 01:00:23,200
you're

1657
01:00:20,000 --> 01:00:24,480
maybe overselling the properties we get

1658
01:00:23,200 --> 01:00:24,879
but that doesn't mean we shouldn't do

1659
01:00:24,480 --> 01:00:26,559
this

1660
01:00:24,880 --> 01:00:28,400
that just means that we need to actually

1661
01:00:26,559 --> 01:00:31,359
do the security analysis

1662
01:00:28,400 --> 01:00:32,960
so i'm supportive of the working group

1663
01:00:31,359 --> 01:00:35,440
spending time on this maybe you know

1664
01:00:32,960 --> 01:00:35,440
after we

1665
01:00:36,000 --> 01:00:39,119
you know time permitting given the you

1666
01:00:37,920 --> 01:00:40,559
know lane drafts and the three

1667
01:00:39,119 --> 01:00:42,880
currently adopted extensions but i think

1668
01:00:40,559 --> 01:00:46,079
this is good and i would like

1669
01:00:42,880 --> 01:00:47,520
to for for like google to implement this

1670
01:00:46,079 --> 01:00:49,680
i think this is useful

1671
01:00:47,520 --> 01:00:50,559
so david for clarification so you you

1672
01:00:49,680 --> 01:00:52,160
think um

1673
01:00:50,559 --> 01:00:54,079
increased greasing is what you are

1674
01:00:52,160 --> 01:00:57,200
interested in seeing

1675
01:00:54,079 --> 01:01:00,559
so i may increase uh i'm interested

1676
01:00:57,200 --> 01:01:03,839
in so the objectives that i see

1677
01:01:00,559 --> 01:01:05,599
this accomplishing is

1678
01:01:03,839 --> 01:01:07,359
making authentication harder as the

1679
01:01:05,599 --> 01:01:10,000
first one as a second one is

1680
01:01:07,359 --> 01:01:12,799
improving privacy uh because it makes

1681
01:01:10,000 --> 01:01:16,799
observability slightly more limited

1682
01:01:12,799 --> 01:01:16,799
thank you ecker

1683
01:01:19,520 --> 01:01:25,839
echo go ahead trying to find the buttons

1684
01:01:22,960 --> 01:01:27,599
um so i mean i think i think the

1685
01:01:25,839 --> 01:01:30,240
question to ask

1686
01:01:27,599 --> 01:01:31,599
here i'm sorry i as usual i would sort

1687
01:01:30,240 --> 01:01:32,078
of start with like the threat model and

1688
01:01:31,599 --> 01:01:34,240
like what

1689
01:01:32,079 --> 01:01:35,760
like what exactly we're trying to do um

1690
01:01:34,240 --> 01:01:36,399
for me is that before it sounds like a

1691
01:01:35,760 --> 01:01:40,480
surprise

1692
01:01:36,400 --> 01:01:42,319
um i think the question is like is this

1693
01:01:40,480 --> 01:01:44,000
like by the time you borrow to do this

1694
01:01:42,319 --> 01:01:44,480
might you might as well make money but i

1695
01:01:44,000 --> 01:01:46,640
mean this is

1696
01:01:44,480 --> 01:01:48,000
like this is sort of like half these

1697
01:01:46,640 --> 01:01:49,598
half vch

1698
01:01:48,000 --> 01:01:53,280
and so the question is you just accept

1699
01:01:49,599 --> 01:01:55,920
into ech you know quick uchs i think

1700
01:01:53,280 --> 01:01:56,880
kazuho and and christian proposed right

1701
01:01:55,920 --> 01:02:00,319
um

1702
01:01:56,880 --> 01:02:02,000
so uh um so i think that would be i mean

1703
01:02:00,319 --> 01:02:04,240
the the the difference the difference as

1704
01:02:02,000 --> 01:02:05,520
far as i can tell is that this is um

1705
01:02:04,240 --> 01:02:07,038
the prior difference of this in ech is

1706
01:02:05,520 --> 01:02:07,759
that it only works it only works in the

1707
01:02:07,039 --> 01:02:10,559
second connection

1708
01:02:07,760 --> 01:02:11,920
i mean and so i mean so i guess take a

1709
01:02:10,559 --> 01:02:13,599
step back we looked at basically this

1710
01:02:11,920 --> 01:02:15,440
design for ech

1711
01:02:13,599 --> 01:02:16,640
for subsequent connections we're using

1712
01:02:15,440 --> 01:02:20,160
the um

1713
01:02:16,640 --> 01:02:23,759
uh um using the

1714
01:02:20,160 --> 01:02:26,078
uh what i want to say um uh the the the

1715
01:02:23,760 --> 01:02:27,280
psk mechanism as basically the seed and

1716
01:02:26,079 --> 01:02:28,960
then the idea would be if

1717
01:02:27,280 --> 01:02:30,319
you've got a psk and then then you come

1718
01:02:28,960 --> 01:02:31,760
back and then and then you would never

1719
01:02:30,319 --> 01:02:33,119
um and then you wouldn't have to have

1720
01:02:31,760 --> 01:02:34,240
the sni and the problem with that

1721
01:02:33,119 --> 01:02:35,119
obviously is the same problem you have

1722
01:02:34,240 --> 01:02:36,640
here which is that

1723
01:02:35,119 --> 01:02:38,480
if you like lose state then you gotta

1724
01:02:36,640 --> 01:02:40,319
have a way to recover and so

1725
01:02:38,480 --> 01:02:42,319
um the way you recover is basically by

1726
01:02:40,319 --> 01:02:44,720
being like oh i detected

1727
01:02:42,319 --> 01:02:46,240
that like if you i mean if you're in the

1728
01:02:44,720 --> 01:02:47,598
state you recover with like a vn

1729
01:02:46,240 --> 01:02:49,759
and then you start and then you leave in

1730
01:02:47,599 --> 01:02:51,839
the elite the state um and the wire

1731
01:02:49,760 --> 01:02:53,200
and an ech on the union mechanism we

1732
01:02:51,839 --> 01:02:53,920
don't need to save the wire so i guess

1733
01:02:53,200 --> 01:02:54,960
the question is

1734
01:02:53,920 --> 01:02:56,480
could we have a public key based

1735
01:02:54,960 --> 01:02:57,760
mechanism which would not involve we can

1736
01:02:56,480 --> 01:03:01,039
even stay on the wire

1737
01:02:57,760 --> 01:03:02,400
and um and then also allow a lot of

1738
01:03:01,039 --> 01:03:04,160
priming in the dns would that be

1739
01:03:02,400 --> 01:03:05,760
dramatically more complicated than this

1740
01:03:04,160 --> 01:03:06,160
um so i think that's the thing i'm

1741
01:03:05,760 --> 01:03:08,319
trying to

1742
01:03:06,160 --> 01:03:10,480
take a look at yeah uh thanks a lot

1743
01:03:08,319 --> 01:03:11,920
acura so yeah i'm i'm start as you know

1744
01:03:10,480 --> 01:03:13,760
i'm starting to noodle a little bit on

1745
01:03:11,920 --> 01:03:14,160
how to bring in some uch concepts to

1746
01:03:13,760 --> 01:03:16,400
this

1747
01:03:14,160 --> 01:03:17,839
um those aren't ready for prime time

1748
01:03:16,400 --> 01:03:20,240
right now by any means

1749
01:03:17,839 --> 01:03:21,279
uh i i i i will say it does do some

1750
01:03:20,240 --> 01:03:23,200
things differently

1751
01:03:21,280 --> 01:03:24,880
than ech uh it does have a different

1752
01:03:23,200 --> 01:03:26,879
properties like the cert the

1753
01:03:24,880 --> 01:03:28,640
the server-generated initial packet is

1754
01:03:26,880 --> 01:03:32,240
entirely protected as well

1755
01:03:28,640 --> 01:03:34,400
um for instance now like whether or not

1756
01:03:32,240 --> 01:03:36,319
you care about that is another question

1757
01:03:34,400 --> 01:03:37,520
well no i i i i i think the po i think

1758
01:03:36,319 --> 01:03:39,279
the point would be i think the idea

1759
01:03:37,520 --> 01:03:41,038
would be you would hoist

1760
01:03:39,280 --> 01:03:42,400
that you would um i think so if i

1761
01:03:41,039 --> 01:03:43,520
remember call correctly kazuho and

1762
01:03:42,400 --> 01:03:45,839
grisham's proposal

1763
01:03:43,520 --> 01:03:47,038
basically had the ech but also hoisted

1764
01:03:45,839 --> 01:03:47,599
some of that information into quick so

1765
01:03:47,039 --> 01:03:49,039
you could encrypt

1766
01:03:47,599 --> 01:03:50,960
you can send for the initial as well as

1767
01:03:49,039 --> 01:03:52,240
just suffering as well as decide for the

1768
01:03:50,960 --> 01:03:53,760
tls payloads

1769
01:03:52,240 --> 01:03:56,160
um so the question be can you do that

1770
01:03:53,760 --> 01:03:57,280
right um i don't know i i mean

1771
01:03:56,160 --> 01:03:59,200
i read the proposal but it's been a

1772
01:03:57,280 --> 01:04:01,200
while so i'm like don't have like like

1773
01:03:59,200 --> 01:04:02,799
that load back into cash but i guess all

1774
01:04:01,200 --> 01:04:04,000
i'm saying is like this is like this is

1775
01:04:02,799 --> 01:04:04,640
like a reasonably so complicated

1776
01:04:04,000 --> 01:04:07,440
proposal

1777
01:04:04,640 --> 01:04:08,640
already and um so the more we can like

1778
01:04:07,440 --> 01:04:09,680
not like think there's all these

1779
01:04:08,640 --> 01:04:10,960
problems twice the better

1780
01:04:09,680 --> 01:04:12,879
and also i think one of the things when

1781
01:04:10,960 --> 01:04:14,400
it realizes the pch is that difficult

1782
01:04:12,880 --> 01:04:16,799
to characterize the security and privacy

1783
01:04:14,400 --> 01:04:18,799
properties of the system and

1784
01:04:16,799 --> 01:04:20,559
and the more and and these are very

1785
01:04:18,799 --> 01:04:23,839
intermediate properties or even harder

1786
01:04:20,559 --> 01:04:26,960
maybe even you heard a characterize but

1787
01:04:23,839 --> 01:04:28,078
again i don't know i so i guess

1788
01:04:26,960 --> 01:04:29,520
so if the question is are we interested

1789
01:04:28,079 --> 01:04:30,720
in looking at this yeah i think i i'm

1790
01:04:29,520 --> 01:04:31,520
with david like let's take a look but

1791
01:04:30,720 --> 01:04:32,640
like let me

1792
01:04:31,520 --> 01:04:35,200
open average her a little bit and see

1793
01:04:32,640 --> 01:04:38,720
what the options are

1794
01:04:35,200 --> 01:04:41,839
okay thank you eric ganeer

1795
01:04:38,720 --> 01:04:43,759
yeah i would i would second uh

1796
01:04:41,839 --> 01:04:45,520
david's comment in the sense that i

1797
01:04:43,760 --> 01:04:46,880
would be very interested in greasing a

1798
01:04:45,520 --> 01:04:48,640
bunch of this stuff and

1799
01:04:46,880 --> 01:04:50,480
i think it's worth spending some time to

1800
01:04:48,640 --> 01:04:52,319
see if we can get some meaningful

1801
01:04:50,480 --> 01:04:55,039
security and privacy wins

1802
01:04:52,319 --> 01:04:56,079
uh but at the very least let's let's

1803
01:04:55,039 --> 01:04:58,720
grease it so that

1804
01:04:56,079 --> 01:04:59,520
if we even if it takes us uh a whole

1805
01:04:58,720 --> 01:05:00,959
nother version

1806
01:04:59,520 --> 01:05:02,400
to deliver some security and privacy

1807
01:05:00,960 --> 01:05:03,039
wins it'd be real cool if we could

1808
01:05:02,400 --> 01:05:06,079
actually

1809
01:05:03,039 --> 01:05:06,079
you know use that version

1810
01:05:06,960 --> 01:05:10,559
i got crystal in casual and the queue

1811
01:05:08,799 --> 01:05:12,160
and i want to cut the queue uh after

1812
01:05:10,559 --> 01:05:15,200
kazuo and and please be

1813
01:05:12,160 --> 01:05:18,879
quick just a comment on what eric

1814
01:05:15,200 --> 01:05:20,240
said about reusing ech and generally

1815
01:05:18,880 --> 01:05:24,000
we're using

1816
01:05:20,240 --> 01:05:26,720
anything from tls i am very worried that

1817
01:05:24,000 --> 01:05:27,760
if for some reason the trs message grow

1818
01:05:26,720 --> 01:05:30,240
in size

1819
01:05:27,760 --> 01:05:31,280
to be larger than one packet then the

1820
01:05:30,240 --> 01:05:37,038
tls

1821
01:05:31,280 --> 01:05:38,880
solution will not be adequate

1822
01:05:37,039 --> 01:05:40,960
so that's i think we have to take that

1823
01:05:38,880 --> 01:05:42,720
into consideration is it robust

1824
01:05:40,960 --> 01:05:45,119
to an increase in size of the tls

1825
01:05:42,720 --> 01:05:45,118
package

1826
01:05:49,760 --> 01:05:53,280
let's take that to the list as a

1827
01:05:52,079 --> 01:05:55,039
discussion kazoo

1828
01:05:53,280 --> 01:05:56,319
what because we just dropped from the

1829
01:05:55,039 --> 01:05:57,920
queue

1830
01:05:56,319 --> 01:06:00,640
okay well thanks for everyone so i'm

1831
01:05:57,920 --> 01:06:02,799
getting um the cautious uh

1832
01:06:00,640 --> 01:06:04,720
enthusiasm i was hoping for so i will

1833
01:06:02,799 --> 01:06:06,240
continue to progress this draft as best

1834
01:06:04,720 --> 01:06:06,799
i can please read it comment on the

1835
01:06:06,240 --> 01:06:09,839
github

1836
01:06:06,799 --> 01:06:11,680
etc uh okay so the other draft i have is

1837
01:06:09,839 --> 01:06:13,599
is somewhat less exciting this came out

1838
01:06:11,680 --> 01:06:17,038
of a conversation in tsvwg

1839
01:06:13,599 --> 01:06:20,400
about nats and quick next slide

1840
01:06:17,039 --> 01:06:24,079
um yeah and this is what it's saying

1841
01:06:20,400 --> 01:06:28,240
like a nat designer might look at the

1842
01:06:24,079 --> 01:06:29,520
um the uh the connection say oh i could

1843
01:06:28,240 --> 01:06:30,558
do neat things with this but in fact

1844
01:06:29,520 --> 01:06:34,319
that's just gonna like

1845
01:06:30,559 --> 01:06:34,319
break protocol mechanisms the next slide

1846
01:06:34,400 --> 01:06:37,839
so this is one example like you could

1847
01:06:36,240 --> 01:06:41,359
try to multiplex

1848
01:06:37,839 --> 01:06:43,119
on on a port by distinguishing from from

1849
01:06:41,359 --> 01:06:44,558
the cids but of course at the mobility

1850
01:06:43,119 --> 01:06:45,440
event that's that's going to create a

1851
01:06:44,559 --> 01:06:47,039
black hole

1852
01:06:45,440 --> 01:06:49,359
which is worse than rejecting the the

1853
01:06:47,039 --> 01:06:52,480
connection in the first place

1854
01:06:49,359 --> 01:06:53,520
next slide and then on the upper side on

1855
01:06:52,480 --> 01:06:56,160
the other side

1856
01:06:53,520 --> 01:06:58,079
on a server net you can attempt to

1857
01:06:56,160 --> 01:06:59,440
conceal address changes to allow a

1858
01:06:58,079 --> 01:07:00,799
routing infrastructure to

1859
01:06:59,440 --> 01:07:02,960
afford temple-based routing structure

1860
01:07:00,799 --> 01:07:04,640
infrastructure to to work without

1861
01:07:02,960 --> 01:07:06,160
modification but then you essentially

1862
01:07:04,640 --> 01:07:09,598
erase the signal

1863
01:07:06,160 --> 01:07:10,160
uh that of the of the mobility event

1864
01:07:09,599 --> 01:07:12,000
that is

1865
01:07:10,160 --> 01:07:13,839
that triggers all the path verification

1866
01:07:12,000 --> 01:07:14,720
stuff so you've basically broken the

1867
01:07:13,839 --> 01:07:17,200
security model

1868
01:07:14,720 --> 01:07:18,480
quick so basically just it's just a very

1869
01:07:17,200 --> 01:07:19,038
short draft that says don't do that

1870
01:07:18,480 --> 01:07:22,240
stuff

1871
01:07:19,039 --> 01:07:24,240
next slide um

1872
01:07:22,240 --> 01:07:25,839
and as i mentioned in my other talk like

1873
01:07:24,240 --> 01:07:28,799
somebody asked about

1874
01:07:25,839 --> 01:07:30,400
um proxy protocol i know that i saw that

1875
01:07:28,799 --> 01:07:31,759
cloudflare done something in this area

1876
01:07:30,400 --> 01:07:33,920
and written something down

1877
01:07:31,760 --> 01:07:35,520
uh it would seem to fit in in that type

1878
01:07:33,920 --> 01:07:38,799
draft if people wanted it i'm not

1879
01:07:35,520 --> 01:07:39,520
super energized to see this text added

1880
01:07:38,799 --> 01:07:41,280
but um

1881
01:07:39,520 --> 01:07:43,759
if people are we can look at it next

1882
01:07:41,280 --> 01:07:48,079
slide

1883
01:07:43,760 --> 01:07:50,160
so i honestly don't care how we

1884
01:07:48,079 --> 01:07:52,480
triage this information um it's

1885
01:07:50,160 --> 01:07:55,520
currently individual draft obviously

1886
01:07:52,480 --> 01:07:56,960
we could toss it into the ops draft um

1887
01:07:55,520 --> 01:07:58,720
we could just have a reference to this

1888
01:07:56,960 --> 01:08:01,680
expired draft in the ops draft and

1889
01:07:58,720 --> 01:08:02,879
not have all this verbage polluted we'd

1890
01:08:01,680 --> 01:08:03,919
want to pollute the off strap with all

1891
01:08:02,880 --> 01:08:05,520
this verbage

1892
01:08:03,920 --> 01:08:07,039
it could be an info rfc i could do it

1893
01:08:05,520 --> 01:08:08,240
here i could do it in his uwg or we

1894
01:08:07,039 --> 01:08:10,160
could just drop it all together people

1895
01:08:08,240 --> 01:08:13,359
think this is stupid and pointless

1896
01:08:10,160 --> 01:08:15,759
so i'm welcome to have you hear your uh

1897
01:08:13,359 --> 01:08:17,359
input on that thanks uh please get in

1898
01:08:15,760 --> 01:08:17,920
the queue i would say that um if we

1899
01:08:17,359 --> 01:08:20,400
decide

1900
01:08:17,920 --> 01:08:21,120
that uh text along the lines these lines

1901
01:08:20,399 --> 01:08:22,960
is needed i

1902
01:08:21,120 --> 01:08:24,719
i would have a preference for seeing it

1903
01:08:22,960 --> 01:08:26,719
in the op graph simply because this

1904
01:08:24,719 --> 01:08:28,000
seems like something that that is a good

1905
01:08:26,719 --> 01:08:29,359
target for but

1906
01:08:28,000 --> 01:08:31,120
it's a question of how much are we

1907
01:08:29,359 --> 01:08:32,480
talking about and you know that's a

1908
01:08:31,120 --> 01:08:39,839
different

1909
01:08:32,479 --> 01:08:39,839
comment from the group please

1910
01:08:40,319 --> 01:08:45,279
or perhaps your everyone's indifference

1911
01:08:42,000 --> 01:08:45,279
is as great as mine

1912
01:08:46,719 --> 01:08:49,600
gory go ahead

1913
01:08:51,198 --> 01:08:56,799
um when we talked about it in tsvwg

1914
01:08:54,640 --> 01:08:58,880
uh one of the good things about having a

1915
01:08:56,799 --> 01:09:01,120
separate draft might be that somebody

1916
01:08:58,880 --> 01:09:03,359
who's looking to implement a nat

1917
01:09:01,120 --> 01:09:04,479
found it with the other rfcs about how

1918
01:09:03,359 --> 01:09:05,759
to do nat

1919
01:09:04,479 --> 01:09:08,479
and then they read ready and then they

1920
01:09:05,759 --> 01:09:11,040
thought ah let's not do this

1921
01:09:08,479 --> 01:09:13,759
so that was the only thing that was

1922
01:09:11,040 --> 01:09:15,198
discussed in tsvwg which said this might

1923
01:09:13,759 --> 01:09:17,520
be worth publishing

1924
01:09:15,198 --> 01:09:19,198
um something to think about yeah i don't

1925
01:09:17,520 --> 01:09:21,040
have a strong preference myself

1926
01:09:19,198 --> 01:09:22,559
fair point i i would point out that

1927
01:09:21,040 --> 01:09:25,759
people who build nuts don't

1928
01:09:22,560 --> 01:09:27,279
really seem to look at rfcs very much so

1929
01:09:25,759 --> 01:09:29,439
from that perspective it doesn't quite

1930
01:09:27,279 --> 01:09:32,640
matter where we stick it but

1931
01:09:29,439 --> 01:09:35,839
yeah maybe a minor point thanks

1932
01:09:32,640 --> 01:09:35,839
anybody else

1933
01:09:38,238 --> 01:09:41,278
all right then i will try and pull up

1934
01:09:40,479 --> 01:09:43,599
here

1935
01:09:41,279 --> 01:09:46,400
near you oh there's more okay let's cut

1936
01:09:43,600 --> 01:09:48,880
the queue after spencer and go ahead

1937
01:09:46,399 --> 01:09:50,719
uh yeah i wouldn't i wouldn't want to uh

1938
01:09:48,880 --> 01:09:51,359
reference an expired graph from up so

1939
01:09:50,719 --> 01:09:53,198
i'd rather

1940
01:09:51,359 --> 01:09:56,080
budget or have a second separate

1941
01:09:53,198 --> 01:09:57,678
document publishers obviously

1942
01:09:56,080 --> 01:10:01,360
do you not want to bring the four or

1943
01:09:57,679 --> 01:10:01,360
five pages of verbiage into ops

1944
01:10:01,600 --> 01:10:05,199
i mean i think we can uh easily have a

1945
01:10:04,320 --> 01:10:07,360
shorter word

1946
01:10:05,199 --> 01:10:08,639
in the body and then add some more text

1947
01:10:07,360 --> 01:10:10,159
in the panic so whatever i didn't look

1948
01:10:08,640 --> 01:10:11,920
at in detail but i think we can also

1949
01:10:10,159 --> 01:10:12,799
merge the whole thing into ops because

1950
01:10:11,920 --> 01:10:14,719
if that's

1951
01:10:12,800 --> 01:10:16,080
you know where people look for it then

1952
01:10:14,719 --> 01:10:18,080
that's fine like

1953
01:10:16,080 --> 01:10:19,679
yeah or separate rc is also for me i

1954
01:10:18,080 --> 01:10:23,519
don't know

1955
01:10:19,679 --> 01:10:23,520
okay spencer

1956
01:10:23,920 --> 01:10:30,080
so uh back to large thing about people

1957
01:10:26,960 --> 01:10:32,080
who build nets don't read rfcs

1958
01:10:30,080 --> 01:10:34,800
uh i think one of the hosts that we had

1959
01:10:32,080 --> 01:10:37,600
was the people who buy nets might

1960
01:10:34,800 --> 01:10:39,040
and so putting that you know if you're

1961
01:10:37,600 --> 01:10:40,400
gonna have a chance at that putting it

1962
01:10:39,040 --> 01:10:42,840
in the op strap my

1963
01:10:40,400 --> 01:10:45,839
draft might be the best chance of that

1964
01:10:42,840 --> 01:10:45,840
happening

1965
01:10:48,960 --> 01:10:54,320
okay from feedback um

1966
01:10:52,000 --> 01:10:55,520
yeah i i think the predominance of the

1967
01:10:54,320 --> 01:10:56,960
uh

1968
01:10:55,520 --> 01:10:58,960
i think what people would like the first

1969
01:10:56,960 --> 01:11:02,080
step to be for me to send a pr

1970
01:10:58,960 --> 01:11:03,440
so i'll send a pr all right thanks

1971
01:11:02,080 --> 01:11:05,600
does gory and spencer are still in the

1972
01:11:03,440 --> 01:11:06,000
queue who i assume are left over so i'm

1973
01:11:05,600 --> 01:11:09,040
gonna

1974
01:11:06,000 --> 01:11:10,560
drop you guys um next up

1975
01:11:09,040 --> 01:11:13,840
i think it's nicolas but i don't know

1976
01:11:10,560 --> 01:11:13,840
who's talk giving this talk

1977
01:11:15,600 --> 01:11:19,360
nicholas is at least getting ready to

1978
01:11:17,440 --> 01:11:22,480
speak

1979
01:11:19,360 --> 01:11:26,159
i'm ready let's go read here so you can

1980
01:11:22,480 --> 01:11:28,718
give the talk as well

1981
01:11:26,159 --> 01:11:30,719
i don't know the audio is quite bad for

1982
01:11:28,719 --> 01:11:33,520
you can you hear me

1983
01:11:30,719 --> 01:11:34,560
poorly can you go closer to the mic yes

1984
01:11:33,520 --> 01:11:41,360
i can

1985
01:11:34,560 --> 01:11:43,280
is he better now he does better

1986
01:11:41,360 --> 01:11:44,880
and don't show the video because i have

1987
01:11:43,280 --> 01:11:47,360
a very poor upload

1988
01:11:44,880 --> 01:11:50,719
so but that's fine go ahead and tell me

1989
01:11:47,360 --> 01:11:50,719
when to progress the slides

1990
01:11:53,040 --> 01:11:56,719
okay are you sharing them now or i don't

1991
01:11:56,400 --> 01:11:59,519
see

1992
01:11:56,719 --> 01:12:00,960
yes okay i don't see that on the screen

1993
01:11:59,520 --> 01:12:04,239
on my takeoff screen so

1994
01:12:00,960 --> 01:12:07,120
okay so uh second slide please um

1995
01:12:04,239 --> 01:12:09,120
so this is conjunct work with emil from

1996
01:12:07,120 --> 01:12:12,480
gory and tom jones from

1997
01:12:09,120 --> 01:12:15,120
aberdeen and the idea in a nutshell

1998
01:12:12,480 --> 01:12:16,159
is to basically remembering and

1999
01:12:15,120 --> 01:12:18,640
exchanging

2000
01:12:16,159 --> 01:12:20,400
additional parameters when connecting

2001
01:12:18,640 --> 01:12:22,080
with the ortit

2002
01:12:20,400 --> 01:12:24,960
the parameters could be bandwidth

2003
01:12:22,080 --> 01:12:25,519
estimations uh based on using in-flight

2004
01:12:24,960 --> 01:12:29,280
data

2005
01:12:25,520 --> 01:12:32,320
or the rtt estimations um why we want

2006
01:12:29,280 --> 01:12:34,080
or think this id would be useful uh

2007
01:12:32,320 --> 01:12:36,719
it would be for example sharing favor

2008
01:12:34,080 --> 01:12:39,519
the estimation of the past parameters

2009
01:12:36,719 --> 01:12:40,080
so that client could adapt their request

2010
01:12:39,520 --> 01:12:42,719
or

2011
01:12:40,080 --> 01:12:43,760
also this could be useful to improve the

2012
01:12:42,719 --> 01:12:47,600
ramp up with

2013
01:12:43,760 --> 01:12:49,199
zero rtt servers there are

2014
01:12:47,600 --> 01:12:51,280
different implementations as far as we

2015
01:12:49,199 --> 01:12:51,759
know there's our words in pico quick

2016
01:12:51,280 --> 01:12:55,120
using

2017
01:12:51,760 --> 01:12:56,880
tls 1.3 and they've met jorah's wands

2018
01:12:55,120 --> 01:13:00,000
using btp token as he

2019
01:12:56,880 --> 01:13:01,520
mentioned in the emails

2020
01:13:00,000 --> 01:13:04,000
we think that the short term objective

2021
01:13:01,520 --> 01:13:06,000
should be to merge ids and have

2022
01:13:04,000 --> 01:13:07,679
views on what the group think of this

2023
01:13:06,000 --> 01:13:11,040
proposal

2024
01:13:07,679 --> 01:13:11,920
next slide please so as i cannot see the

2025
01:13:11,040 --> 01:13:15,120
screens i guess

2026
01:13:11,920 --> 01:13:18,000
we are now on the expected benefits

2027
01:13:15,120 --> 01:13:19,280
so we have implemented this version

2028
01:13:18,000 --> 01:13:22,400
seven of the draft on

2029
01:13:19,280 --> 01:13:25,920
pico quick they have a pull request and

2030
01:13:22,400 --> 01:13:25,920
here you can find the link to it

2031
01:13:26,400 --> 01:13:30,480
we have evaluated it over the different

2032
01:13:29,360 --> 01:13:32,880
quick for that

2033
01:13:30,480 --> 01:13:34,639
scenarios here i showed just quickly

2034
01:13:32,880 --> 01:13:39,360
some results on

2035
01:13:34,640 --> 01:13:42,480
um the case where we have 50 megabits

2036
01:13:39,360 --> 01:13:44,320
download 10 megabits upload and rtt of

2037
01:13:42,480 --> 01:13:47,280
more than 600 milliseconds

2038
01:13:44,320 --> 01:13:48,320
we use cubic as a condition control and

2039
01:13:47,280 --> 01:13:50,719
how

2040
01:13:48,320 --> 01:13:51,920
the conjunction control reacts to the

2041
01:13:50,719 --> 01:13:54,960
zero rtt pdp

2042
01:13:51,920 --> 01:13:56,480
information uh it just jumped to the

2043
01:13:54,960 --> 01:14:00,560
previously measured capacity

2044
01:13:56,480 --> 01:14:03,519
this is really not what we comment

2045
01:14:00,560 --> 01:14:05,120
it is just that it was an easy way to

2046
01:14:03,520 --> 01:14:07,400
implement as a first step

2047
01:14:05,120 --> 01:14:09,280
and also um uh

2048
01:14:07,400 --> 01:14:12,480
[Music]

2049
01:14:09,280 --> 01:14:14,400
this could let us see from how what is

2050
01:14:12,480 --> 01:14:18,080
the best we could achieve

2051
01:14:14,400 --> 01:14:21,120
this is just a 2 megabyte transfer

2052
01:14:18,080 --> 01:14:22,000
and i show here the results of the

2053
01:14:21,120 --> 01:14:25,280
medium

2054
01:14:22,000 --> 01:14:28,880
median value for this 2 megabytes

2055
01:14:25,280 --> 01:14:29,440
transfer so without any vibrating

2056
01:14:28,880 --> 01:14:31,199
connection

2057
01:14:29,440 --> 01:14:32,639
so it takes more than four seconds to

2058
01:14:31,199 --> 01:14:36,159
download the file

2059
01:14:32,640 --> 01:14:39,440
uh it takes almost three

2060
01:14:36,159 --> 01:14:40,159
and five three or five seconds with the

2061
01:14:39,440 --> 01:14:42,879
rtt

2062
01:14:40,159 --> 01:14:43,199
enabled and when you enabled zero entity

2063
01:14:42,880 --> 01:14:46,719
and

2064
01:14:43,199 --> 01:14:48,879
the bdb extension you save some 500

2065
01:14:46,719 --> 01:14:52,080
milliseconds more

2066
01:14:48,880 --> 01:14:53,040
these 500 milliseconds may not look much

2067
01:14:52,080 --> 01:14:56,320
for you but for

2068
01:14:53,040 --> 01:14:58,800
satellite guys it's very important um

2069
01:14:56,320 --> 01:15:00,320
so i guess next slide is more for uh

2070
01:14:58,800 --> 01:15:03,760
discussions on

2071
01:15:00,320 --> 01:15:05,280
how do we implement that do

2072
01:15:03,760 --> 01:15:07,120
than anyone there have been some

2073
01:15:05,280 --> 01:15:09,519
discussions on the list on whether using

2074
01:15:07,120 --> 01:15:14,000
specific bdp tokens or

2075
01:15:09,520 --> 01:15:14,000
new token do you have any

2076
01:15:15,120 --> 01:15:18,719
views on that you have matt and

2077
01:15:17,280 --> 01:15:24,800
christian in the queue so

2078
01:15:18,719 --> 01:15:27,760
let's uh go to them now

2079
01:15:24,800 --> 01:15:28,560
yeah so um just some context we're

2080
01:15:27,760 --> 01:15:30,960
developing

2081
01:15:28,560 --> 01:15:30,960
something

2082
01:15:36,719 --> 01:15:41,600
that the server informs a client you

2083
01:15:40,480 --> 01:15:43,199
know about its current

2084
01:15:41,600 --> 01:15:44,880
bandwidth estimate and like other

2085
01:15:43,199 --> 01:15:46,239
network characteristics

2086
01:15:44,880 --> 01:15:47,920
um and the way that we're doing this is

2087
01:15:46,239 --> 01:15:51,599
with with a quick frame

2088
01:15:47,920 --> 01:15:53,040
um and there's a lot of similarities um

2089
01:15:51,600 --> 01:15:54,800
for our infrastructure it makes more

2090
01:15:53,040 --> 01:15:55,920
sense for the server to kind of actively

2091
01:15:54,800 --> 01:15:59,120
keep track of this stuff

2092
01:15:55,920 --> 01:16:01,280
and remember it but so it would be

2093
01:15:59,120 --> 01:16:03,280
nice if like we could do something like

2094
01:16:01,280 --> 01:16:04,480
this with the same sort of frame so like

2095
01:16:03,280 --> 01:16:06,400
the i

2096
01:16:04,480 --> 01:16:08,239
i think it's compatible um you know if

2097
01:16:06,400 --> 01:16:10,879
we have a frame that can convey

2098
01:16:08,239 --> 01:16:13,360
this sort of commonly useful information

2099
01:16:10,880 --> 01:16:15,520
and you send that as part of zero rtt

2100
01:16:13,360 --> 01:16:16,960
um then it can go in the other direction

2101
01:16:15,520 --> 01:16:17,840
too so you could have a client that

2102
01:16:16,960 --> 01:16:20,719
remembers

2103
01:16:17,840 --> 01:16:22,400
you know this sort of thing and sends it

2104
01:16:20,719 --> 01:16:23,920
and then the server consumes it rather

2105
01:16:22,400 --> 01:16:26,639
than the other way around

2106
01:16:23,920 --> 01:16:26,960
um but i i've i've just been a proponent

2107
01:16:26,640 --> 01:16:29,679
of

2108
01:16:26,960 --> 01:16:30,480
frames for this sort of thing um because

2109
01:16:29,679 --> 01:16:32,480
it's

2110
01:16:30,480 --> 01:16:33,519
i think frames are really easy to add

2111
01:16:32,480 --> 01:16:35,759
and they're

2112
01:16:33,520 --> 01:16:38,320
really easy to extend and we can add

2113
01:16:35,760 --> 01:16:42,159
make them more useful

2114
01:16:38,320 --> 01:16:42,159
than just having like a single number

2115
01:16:46,840 --> 01:16:50,719
christian

2116
01:16:49,280 --> 01:16:53,759
yeah there's been a lot of discussion

2117
01:16:50,719 --> 01:16:55,199
already about this proposal

2118
01:16:53,760 --> 01:16:57,120
and there are two trends that have

2119
01:16:55,199 --> 01:17:00,400
emerged one is what matt

2120
01:16:57,120 --> 01:17:01,679
said is that there is a bunch of things

2121
01:17:00,400 --> 01:17:04,799
that come from the idea of

2122
01:17:01,679 --> 01:17:05,520
informing the peer about the status of

2123
01:17:04,800 --> 01:17:08,239
the connection

2124
01:17:05,520 --> 01:17:09,920
that can be done with a quick frame and

2125
01:17:08,239 --> 01:17:13,919
there's another part which is about

2126
01:17:09,920 --> 01:17:16,880
remembering what a peer did before

2127
01:17:13,920 --> 01:17:18,719
and i think the rheumatoid part i mean

2128
01:17:16,880 --> 01:17:21,040
the consensus that we have is that

2129
01:17:18,719 --> 01:17:22,719
it probably did not be standardized

2130
01:17:21,040 --> 01:17:24,400
because it's very specific to an

2131
01:17:22,719 --> 01:17:27,600
implementation

2132
01:17:24,400 --> 01:17:29,839
and implementation can if they they can

2133
01:17:27,600 --> 01:17:32,480
remember that locally by having

2134
01:17:29,840 --> 01:17:34,400
some kind of cache obviously they can

2135
01:17:32,480 --> 01:17:36,480
also use the same kind of stuff we do

2136
01:17:34,400 --> 01:17:38,480
with tokens to remember that

2137
01:17:36,480 --> 01:17:40,000
and if they do that with token they

2138
01:17:38,480 --> 01:17:43,759
probably want to do that

2139
01:17:40,000 --> 01:17:44,880
not with the tls token but rather with

2140
01:17:43,760 --> 01:17:48,640
the

2141
01:17:44,880 --> 01:17:52,960
new token because the new token is much

2142
01:17:48,640 --> 01:17:55,440
a better fit in the sense that it

2143
01:17:52,960 --> 01:17:56,400
can be sent at any time in the

2144
01:17:55,440 --> 01:17:58,080
connection

2145
01:17:56,400 --> 01:17:59,679
without messing with the theoristic

2146
01:17:58,080 --> 01:18:02,960
machine

2147
01:17:59,679 --> 01:18:03,600
that's uh because who was agreeing with

2148
01:18:02,960 --> 01:18:05,600
christian

2149
01:18:03,600 --> 01:18:09,040
in the uh chat he dropped out of the

2150
01:18:05,600 --> 01:18:09,040
queue so ian is next

2151
01:18:11,040 --> 01:18:13,840
you can go ahead

2152
01:18:15,120 --> 01:18:20,640
yeah um but

2153
01:18:18,400 --> 01:18:23,199
specifically i would say that um could

2154
01:18:20,640 --> 01:18:26,080
you speak up a bit in you're pretty soft

2155
01:18:23,199 --> 01:18:27,360
yeah sorry my mic setup is not amazing

2156
01:18:26,080 --> 01:18:32,239
can you hear me now

2157
01:18:27,360 --> 01:18:32,239
yes yes okay um so

2158
01:18:32,480 --> 01:18:36,080
yeah i actually think this is

2159
01:18:34,400 --> 01:18:39,360
potentially fairly

2160
01:18:36,080 --> 01:18:42,159
dangerous um because

2161
01:18:39,360 --> 01:18:44,000
like you're sending something the client

2162
01:18:42,159 --> 01:18:46,480
the client is going to send back

2163
01:18:44,000 --> 01:18:47,440
uh without any authentication and

2164
01:18:46,480 --> 01:18:49,360
potentially open

2165
01:18:47,440 --> 01:18:50,799
a much larger quotation window or other

2166
01:18:49,360 --> 01:18:53,839
information

2167
01:18:50,800 --> 01:18:55,280
um i think doing it in the new token

2168
01:18:53,840 --> 01:18:58,000
frame is

2169
01:18:55,280 --> 01:18:59,440
relatively safe i mean relatively

2170
01:18:58,000 --> 01:19:02,960
there's some guide buns

2171
01:18:59,440 --> 01:19:04,639
uh i think that's a tsv area sort of

2172
01:19:02,960 --> 01:19:06,719
like gig to figure out what the

2173
01:19:04,640 --> 01:19:08,320
guidelines are

2174
01:19:06,719 --> 01:19:10,000
but i don't see why we need to do

2175
01:19:08,320 --> 01:19:13,040
anything in quick

2176
01:19:10,000 --> 01:19:13,920
for this um i think it's my big

2177
01:19:13,040 --> 01:19:16,000
objection

2178
01:19:13,920 --> 01:19:18,800
like if you want to do this we actually

2179
01:19:16,000 --> 01:19:21,840
provide pretty good mechanisms in quick

2180
01:19:18,800 --> 01:19:24,080
to accomplish this mechanism um i think

2181
01:19:21,840 --> 01:19:26,640
new token is a great example

2182
01:19:24,080 --> 01:19:28,480
um i think providing something

2183
01:19:26,640 --> 01:19:30,239
explicitly and quick is probably more

2184
01:19:28,480 --> 01:19:34,159
dangerous than it's worth

2185
01:19:30,239 --> 01:19:36,718
it's basically a token um so i would

2186
01:19:34,159 --> 01:19:38,000
really want to understand why this needs

2187
01:19:36,719 --> 01:19:41,520
to be

2188
01:19:38,000 --> 01:19:41,520
like work in the quick working group

2189
01:19:42,560 --> 01:19:45,840
there's a whole bunch of agreement um in

2190
01:19:44,719 --> 01:19:47,360
the chat

2191
01:19:45,840 --> 01:19:49,040
i mean janna's in the queue and i'm

2192
01:19:47,360 --> 01:19:52,480
going to cut the queue

2193
01:19:49,040 --> 01:19:52,480
after you janna go ahead

2194
01:19:54,239 --> 01:19:58,559
i wanna i i wanna echo what ian said but

2195
01:19:56,800 --> 01:19:59,199
also ask the question of why does this

2196
01:19:58,560 --> 01:20:01,840
need to be

2197
01:19:59,199 --> 01:20:02,799
explicit if this is ultimately going to

2198
01:20:01,840 --> 01:20:04,960
get echoed back

2199
01:20:02,800 --> 01:20:06,880
to the server neurocon gives us the

2200
01:20:04,960 --> 01:20:08,700
mechanism to make this completely awake

2201
01:20:06,880 --> 01:20:09,920
to the client

2202
01:20:08,700 --> 01:20:11,920
[Music]

2203
01:20:09,920 --> 01:20:18,239
is there a reason to make this visible

2204
01:20:11,920 --> 01:20:19,600
and available to the client

2205
01:20:18,239 --> 01:20:21,678
because i think that's the question for

2206
01:20:19,600 --> 01:20:24,480
you can you can you understand

2207
01:20:21,679 --> 01:20:24,480
the sponsoring question

2208
01:20:25,440 --> 01:20:28,638
um my question my question is is there a

2209
01:20:27,679 --> 01:20:30,400
reason to make this

2210
01:20:28,639 --> 01:20:32,159
visible to the client in the sense that

2211
01:20:30,400 --> 01:20:34,239
the server is the one that's

2212
01:20:32,159 --> 01:20:35,440
exporting this value and then is going

2213
01:20:34,239 --> 01:20:37,839
to receive it back

2214
01:20:35,440 --> 01:20:39,040
you could keep this completely opaque

2215
01:20:37,840 --> 01:20:40,880
that's what you get for

2216
01:20:39,040 --> 01:20:44,159
putting it in the in the new token the

2217
01:20:40,880 --> 01:20:46,400
new token a server can do that already

2218
01:20:44,159 --> 01:20:48,480
why do we need another mechanism for

2219
01:20:46,400 --> 01:20:50,638
doing exactly that

2220
01:20:48,480 --> 01:20:51,678
um there were some discussions on the

2221
01:20:50,639 --> 01:20:54,320
list on

2222
01:20:51,679 --> 01:20:54,800
um the fact that clients could adapt

2223
01:20:54,320 --> 01:20:57,840
what

2224
01:20:54,800 --> 01:21:00,560
whatever they request depending on the

2225
01:20:57,840 --> 01:21:01,199
estimation they received from the server

2226
01:21:00,560 --> 01:21:04,719
and

2227
01:21:01,199 --> 01:21:08,719
they could be also some limited clients

2228
01:21:04,719 --> 01:21:15,840
that would adapt their sizing buffers

2229
01:21:08,719 --> 01:21:15,840
depending on what they have

2230
01:21:16,719 --> 01:21:20,480
all right we're running low on time for

2231
01:21:18,719 --> 01:21:20,880
for this presentation nicolas is there a

2232
01:21:20,480 --> 01:21:22,480
point

2233
01:21:20,880 --> 01:21:24,560
uh is there anything in your next two

2234
01:21:22,480 --> 01:21:27,519
slides that you still want to show

2235
01:21:24,560 --> 01:21:29,520
or did you get the feedback i guess i

2236
01:21:27,520 --> 01:21:32,400
just wanted to go to the last one

2237
01:21:29,520 --> 01:21:34,320
saying that um i understand that the

2238
01:21:32,400 --> 01:21:35,920
next steps may not be the ones

2239
01:21:34,320 --> 01:21:37,920
we envisioned before having this

2240
01:21:35,920 --> 01:21:40,320
discussion so i guess that with the

2241
01:21:37,920 --> 01:21:42,320
others we have

2242
01:21:40,320 --> 01:21:44,480
a discussion based on what we received

2243
01:21:42,320 --> 01:21:44,480
from

2244
01:21:46,400 --> 01:21:49,519
nicolas i at least just lost audio i

2245
01:21:48,639 --> 01:21:53,120
don't know but

2246
01:21:49,520 --> 01:21:56,159
others i lost audit

2247
01:21:53,120 --> 01:21:58,719
i think he just got disconnected

2248
01:21:56,159 --> 01:21:58,719
mic drop

2249
01:22:01,920 --> 01:22:09,440
all right um moving on to the last one

2250
01:22:06,080 --> 01:22:13,760
uh we have in this section of the agenda

2251
01:22:09,440 --> 01:22:15,599
it's the q log drafts and robin should

2252
01:22:13,760 --> 01:22:18,159
get ready to speak once i find the right

2253
01:22:15,600 --> 01:22:18,159
button here

2254
01:22:22,639 --> 01:22:26,159
i assume audible there you go you're

2255
01:22:25,040 --> 01:22:28,400
audible go ahead

2256
01:22:26,159 --> 01:22:31,679
yeah that's good all right so uh what to

2257
01:22:28,400 --> 01:22:31,679
do with q log next slide please

2258
01:22:32,159 --> 01:22:35,199
uh for those who don't know q log it's

2259
01:22:34,000 --> 01:22:37,600
it's a way for

2260
01:22:35,199 --> 01:22:39,120
endpoints themselves to structured

2261
01:22:37,600 --> 01:22:42,000
standardized way to lock

2262
01:22:39,120 --> 01:22:43,360
whatever protocol events are happening

2263
01:22:42,000 --> 01:22:44,239
this is useful for debugging and

2264
01:22:43,360 --> 01:22:46,639
analysis

2265
01:22:44,239 --> 01:22:48,400
um you might want to use things like

2266
01:22:46,639 --> 01:22:50,800
packet captures for that but this

2267
01:22:48,400 --> 01:22:52,719
approach has some benefits over that

2268
01:22:50,800 --> 01:22:54,639
firstly you can log things that are not

2269
01:22:52,719 --> 01:22:55,920
reflected on the wire like congestion

2270
01:22:54,639 --> 01:22:57,520
windows

2271
01:22:55,920 --> 01:22:58,960
it's also more interesting for privacy

2272
01:22:57,520 --> 01:22:59,600
because you don't need to decrypt the

2273
01:22:58,960 --> 01:23:01,040
entire

2274
01:22:59,600 --> 01:23:03,840
packet capture you can only log the

2275
01:23:01,040 --> 01:23:06,560
things that you actually care about

2276
01:23:03,840 --> 01:23:08,239
excluding user data and finally having

2277
01:23:06,560 --> 01:23:10,080
this in a structured format rather than

2278
01:23:08,239 --> 01:23:12,638
like a free form

2279
01:23:10,080 --> 01:23:14,320
logging what most people did is that

2280
01:23:12,639 --> 01:23:17,520
it's very easy to build tooling on this

2281
01:23:14,320 --> 01:23:20,639
and also to do automated analysis

2282
01:23:17,520 --> 01:23:23,440
next slide

2283
01:23:20,639 --> 01:23:24,080
so qlog has luckily been adopted by a

2284
01:23:23,440 --> 01:23:26,480
lot of you

2285
01:23:24,080 --> 01:23:29,360
uh over the past two years uh most

2286
01:23:26,480 --> 01:23:31,759
notably facebook has been deploying this

2287
01:23:29,360 --> 01:23:32,400
into production proving that it can

2288
01:23:31,760 --> 01:23:34,719
scale and

2289
01:23:32,400 --> 01:23:35,679
can work in practice i also find it

2290
01:23:34,719 --> 01:23:38,080
interesting that

2291
01:23:35,679 --> 01:23:40,080
the implementations that don't use qlok

2292
01:23:38,080 --> 01:23:41,679
use for something very very similar in

2293
01:23:40,080 --> 01:23:44,320
concept

2294
01:23:41,679 --> 01:23:45,760
so the general general concept is solid

2295
01:23:44,320 --> 01:23:48,000
i think

2296
01:23:45,760 --> 01:23:49,280
over time we've had a lot of feedback on

2297
01:23:48,000 --> 01:23:50,800
this

2298
01:23:49,280 --> 01:23:52,400
from the from the working group so thank

2299
01:23:50,800 --> 01:23:55,520
you all for that

2300
01:23:52,400 --> 01:23:55,519
but still next slide

2301
01:23:56,560 --> 01:24:00,000
this is still just a personal draft for

2302
01:23:58,960 --> 01:24:01,600
me and we have

2303
01:24:00,000 --> 01:24:03,360
relatively few people dealing with the

2304
01:24:01,600 --> 01:24:05,600
day-to-day work

2305
01:24:03,360 --> 01:24:08,159
on these things and we've just released

2306
01:24:05,600 --> 01:24:09,679
a draft o2 of this

2307
01:24:08,159 --> 01:24:11,280
with most of the things we could reach

2308
01:24:09,679 --> 01:24:12,960
consensus on our own

2309
01:24:11,280 --> 01:24:14,880
but we think it's time for some

2310
01:24:12,960 --> 01:24:16,320
additional discussion to see how to how

2311
01:24:14,880 --> 01:24:18,719
to progress keylog

2312
01:24:16,320 --> 01:24:20,400
in the future the main question is who

2313
01:24:18,719 --> 01:24:22,080
is going to do that discussion of where

2314
01:24:20,400 --> 01:24:25,679
is it going to be done

2315
01:24:22,080 --> 01:24:26,559
next slide so you can see a few options

2316
01:24:25,679 --> 01:24:29,679
for that

2317
01:24:26,560 --> 01:24:31,760
first one is of course the worst case

2318
01:24:29,679 --> 01:24:33,280
just let us continue and do whatever we

2319
01:24:31,760 --> 01:24:34,639
think is best

2320
01:24:33,280 --> 01:24:36,639
the second one could be something i

2321
01:24:34,639 --> 01:24:38,480
think more informal within this working

2322
01:24:36,639 --> 01:24:41,600
group just people that are interested

2323
01:24:38,480 --> 01:24:44,799
doing some interims or

2324
01:24:41,600 --> 01:24:47,280
a loki design team just go out

2325
01:24:44,800 --> 01:24:49,520
to figure out the main things uh we

2326
01:24:47,280 --> 01:24:53,440
could also move to actually adopt this

2327
01:24:49,520 --> 01:24:56,320
um for some post v1 work

2328
01:24:53,440 --> 01:24:58,080
or the final option is to move this to a

2329
01:24:56,320 --> 01:24:59,920
different working group or even to maybe

2330
01:24:58,080 --> 01:25:02,639
do a buff and try to see if we can make

2331
01:24:59,920 --> 01:25:05,440
a separate word loop of this

2332
01:25:02,639 --> 01:25:06,960
um i think in the future we would go to

2333
01:25:05,440 --> 01:25:10,000
option four

2334
01:25:06,960 --> 01:25:12,400
anyway since this general concept is

2335
01:25:10,000 --> 01:25:14,639
useful for more than just quick and h3

2336
01:25:12,400 --> 01:25:15,599
um it's something i believe and

2337
01:25:14,639 --> 01:25:17,440
something that

2338
01:25:15,600 --> 01:25:19,199
many others also believe and also are

2339
01:25:17,440 --> 01:25:20,960
working already

2340
01:25:19,199 --> 01:25:22,559
we knew this from the beginning when we

2341
01:25:20,960 --> 01:25:24,080
started presenting this type of stuff in

2342
01:25:22,560 --> 01:25:25,679
dsv area

2343
01:25:24,080 --> 01:25:27,840
but back then it was it was just that it

2344
01:25:25,679 --> 01:25:29,920
would take too long to do something

2345
01:25:27,840 --> 01:25:31,040
generic from the start which i think was

2346
01:25:29,920 --> 01:25:33,040
a great move

2347
01:25:31,040 --> 01:25:35,519
so we decided to do something in quicken

2348
01:25:33,040 --> 01:25:38,320
h3 first to get some experience

2349
01:25:35,520 --> 01:25:40,000
i think we have that experience now and

2350
01:25:38,320 --> 01:25:41,920
so it might make sense to move this

2351
01:25:40,000 --> 01:25:43,040
along uh try to do something similar

2352
01:25:41,920 --> 01:25:44,320
with it

2353
01:25:43,040 --> 01:25:46,159
but i wanted to bring it to the quick

2354
01:25:44,320 --> 01:25:47,519
working group first because

2355
01:25:46,159 --> 01:25:49,519
this is of course where a lot of the

2356
01:25:47,520 --> 01:25:51,280
investment has happened and uh

2357
01:25:49,520 --> 01:25:53,600
some people might still want to use this

2358
01:25:51,280 --> 01:25:54,880
after the initial debugging phase

2359
01:25:53,600 --> 01:25:57,760
that's mainly the question who is

2360
01:25:54,880 --> 01:26:00,400
interested in continuing work on this

2361
01:25:57,760 --> 01:26:01,199
and where should it be done thanks

2362
01:26:00,400 --> 01:26:03,759
thanks robin

2363
01:26:01,199 --> 01:26:04,638
um so while people get in the queue to

2364
01:26:03,760 --> 01:26:07,199
give you feedback

2365
01:26:04,639 --> 01:26:08,000
i would say that um while it's true that

2366
01:26:07,199 --> 01:26:09,599
you you you

2367
01:26:08,000 --> 01:26:12,000
try to make you like a general thing i

2368
01:26:09,600 --> 01:26:13,040
think the the use case at the moment or

2369
01:26:12,000 --> 01:26:14,639
the main use because it's still very

2370
01:26:13,040 --> 01:26:16,560
much focused on quick

2371
01:26:14,639 --> 01:26:18,880
and and specifically for like tcp based

2372
01:26:16,560 --> 01:26:20,320
workloads right existing tools exist and

2373
01:26:18,880 --> 01:26:22,159
people have instrumentation for that

2374
01:26:20,320 --> 01:26:24,639
that seems to work well enough

2375
01:26:22,159 --> 01:26:26,559
um but for quick it certainly fills the

2376
01:26:24,639 --> 01:26:27,440
need as as can be seen by the adoption

2377
01:26:26,560 --> 01:26:28,880
and by

2378
01:26:27,440 --> 01:26:30,559
partially by the deployment that it's

2379
01:26:28,880 --> 01:26:34,400
seen right so i think

2380
01:26:30,560 --> 01:26:36,719
uh for um personally i i think it's

2381
01:26:34,400 --> 01:26:37,440
shooting too far i i would think three

2382
01:26:36,719 --> 01:26:39,920
is is

2383
01:26:37,440 --> 01:26:41,440
reasonable if we see enough interest

2384
01:26:39,920 --> 01:26:43,199
from within the quick group

2385
01:26:41,440 --> 01:26:44,638
and it doesn't preclude doing four at

2386
01:26:43,199 --> 01:26:46,480
some future point but i think at the

2387
01:26:44,639 --> 01:26:49,840
moment the sweet spot seems to be

2388
01:26:46,480 --> 01:26:51,199
what what qlik does for quick um and so

2389
01:26:49,840 --> 01:26:51,840
i think that is what what i would like

2390
01:26:51,199 --> 01:26:54,799
to discuss

2391
01:26:51,840 --> 01:26:56,080
here um mostly but the queue is filled

2392
01:26:54,800 --> 01:26:58,880
so i'll shut up and that

2393
01:26:56,080 --> 01:26:58,880
martin duke speak

2394
01:27:00,800 --> 01:27:06,000
this um i i i think well of course you

2395
01:27:04,080 --> 01:27:09,360
have two drafts i i definitely

2396
01:27:06,000 --> 01:27:12,159
i would definitely like to see the quick

2397
01:27:09,360 --> 01:27:12,719
q log draft adopted in this working

2398
01:27:12,159 --> 01:27:14,320
group

2399
01:27:12,719 --> 01:27:16,320
i would i would strongly support that

2400
01:27:14,320 --> 01:27:18,400
because i think it's

2401
01:27:16,320 --> 01:27:19,679
it's it's ubiquitous enough in these

2402
01:27:18,400 --> 01:27:22,239
implementations that

2403
01:27:19,679 --> 01:27:22,880
and you know it's like it is the default

2404
01:27:22,239 --> 01:27:25,280
you know

2405
01:27:22,880 --> 01:27:26,239
the general tool set for this so i think

2406
01:27:25,280 --> 01:27:29,759
that would be good

2407
01:27:26,239 --> 01:27:31,360
as for where the um

2408
01:27:29,760 --> 01:27:32,880
where like kind of the core q log

2409
01:27:31,360 --> 01:27:37,040
architecture draft should go

2410
01:27:32,880 --> 01:27:39,040
um where conceptually is probably not

2411
01:27:37,040 --> 01:27:41,519
the right place for but in practice all

2412
01:27:39,040 --> 01:27:42,560
as as lara said all the all the key log

2413
01:27:41,520 --> 01:27:45,600
people are here

2414
01:27:42,560 --> 01:27:46,960
so like why not do i mean i would just

2415
01:27:45,600 --> 01:27:51,840
assume do it here

2416
01:27:46,960 --> 01:27:51,840
um yeah that's it thanks

2417
01:27:56,400 --> 01:28:03,519
direct so i would i

2418
01:28:00,159 --> 01:28:06,320
i think qlog is is great

2419
01:28:03,520 --> 01:28:08,239
we've we've adopted it um i think

2420
01:28:06,320 --> 01:28:10,080
there's a really nice privacy win to not

2421
01:28:08,239 --> 01:28:11,440
having to export the keys for all of the

2422
01:28:10,080 --> 01:28:13,600
content that you're sending

2423
01:28:11,440 --> 01:28:15,678
uh in a way that for a connection going

2424
01:28:13,600 --> 01:28:16,560
over tls we can just drop the headers in

2425
01:28:15,679 --> 01:28:20,080
a pcap

2426
01:28:16,560 --> 01:28:20,639
and be done um i think being able to

2427
01:28:20,080 --> 01:28:22,239
visualize

2428
01:28:20,639 --> 01:28:24,800
more than what you just get from a bunch

2429
01:28:22,239 --> 01:28:27,678
of tcp headers is actually really nice

2430
01:28:24,800 --> 01:28:28,960
uh especially as we can expand that into

2431
01:28:27,679 --> 01:28:30,400
h3 and looking at some of the

2432
01:28:28,960 --> 01:28:32,320
prioritization

2433
01:28:30,400 --> 01:28:34,000
uh schemes and that sort of thing i

2434
01:28:32,320 --> 01:28:36,719
think that's been

2435
01:28:34,000 --> 01:28:38,400
both useful in debugging problems but

2436
01:28:36,719 --> 01:28:40,159
also useful in helping people

2437
01:28:38,400 --> 01:28:41,440
conceptualize the impacts of the changes

2438
01:28:40,159 --> 01:28:43,360
we're making in the specs

2439
01:28:41,440 --> 01:28:45,199
so i think it's both useful for the

2440
01:28:43,360 --> 01:28:48,799
working group doing the working group

2441
01:28:45,199 --> 01:28:51,519
and for the implementations actually

2442
01:28:48,800 --> 01:28:52,960
deploying things so i'd love to see more

2443
01:28:51,520 --> 01:28:54,080
of those i think i'd actually slightly

2444
01:28:52,960 --> 01:28:56,719
disagree with lars

2445
01:28:54,080 --> 01:28:58,400
in that i would be interested in

2446
01:28:56,719 --> 01:29:01,600
bringing some of this to tcp

2447
01:28:58,400 --> 01:29:03,440
i think yes there are tools

2448
01:29:01,600 --> 01:29:06,080
i think what we've got right now in

2449
01:29:03,440 --> 01:29:06,960
q-log is almost as good as most of those

2450
01:29:06,080 --> 01:29:09,519
tools

2451
01:29:06,960 --> 01:29:10,400
and so if we can put all those in one

2452
01:29:09,520 --> 01:29:13,360
place

2453
01:29:10,400 --> 01:29:14,719
uh we currently you know have the

2454
01:29:13,360 --> 01:29:15,839
ability to dump a bunch of packets for

2455
01:29:14,719 --> 01:29:17,679
tcp stuff

2456
01:29:15,840 --> 01:29:19,440
being able to dump a bunch of q log for

2457
01:29:17,679 --> 01:29:23,679
quick uh

2458
01:29:19,440 --> 01:29:25,599
it's very quickly becoming apparent that

2459
01:29:23,679 --> 01:29:27,040
you you look at the quick stuff and

2460
01:29:25,600 --> 01:29:28,239
you're like wow this is cool and i can

2461
01:29:27,040 --> 01:29:30,239
see exactly what's going on

2462
01:29:28,239 --> 01:29:31,519
and you look at the gcp stuff and you

2463
01:29:30,239 --> 01:29:33,199
look at it with this one view and you

2464
01:29:31,520 --> 01:29:34,639
see one piece of what's going on

2465
01:29:33,199 --> 01:29:36,159
and then you go off to some totally

2466
01:29:34,639 --> 01:29:37,440
different tool and you run it through

2467
01:29:36,159 --> 01:29:38,879
there and you get a slightly different

2468
01:29:37,440 --> 01:29:40,320
view of what's going on so i think there

2469
01:29:38,880 --> 01:29:41,040
is value in having all of that in one

2470
01:29:40,320 --> 01:29:43,599
place

2471
01:29:41,040 --> 01:29:45,440
uh and and being able to put our

2472
01:29:43,600 --> 01:29:47,920
energies into

2473
01:29:45,440 --> 01:29:52,719
making that really robust rather than

2474
01:29:47,920 --> 01:29:55,040
each tool having to reinvent all of that

2475
01:29:52,719 --> 01:29:56,000
yeah if i can just uh interject a little

2476
01:29:55,040 --> 01:29:59,280
bit it's it's not

2477
01:29:56,000 --> 01:30:00,480
um it's not so much expanding into tcp

2478
01:29:59,280 --> 01:30:02,559
although that's definitely something

2479
01:30:00,480 --> 01:30:04,239
we've been doing but it's more also new

2480
01:30:02,560 --> 01:30:06,000
application layer protocols right like

2481
01:30:04,239 --> 01:30:08,320
dns over tls with dns

2482
01:30:06,000 --> 01:30:09,120
real quick that kind of stuff um i think

2483
01:30:08,320 --> 01:30:11,599
there's

2484
01:30:09,120 --> 01:30:13,440
there's a lot of potential there i know

2485
01:30:11,600 --> 01:30:18,480
that for example some others have been

2486
01:30:13,440 --> 01:30:18,480
trying to use this for pgp and that kind

2487
01:30:18,840 --> 01:30:22,719
of ian go ahead

2488
01:30:22,880 --> 01:30:26,159
thanks uh i really support this work i

2489
01:30:24,800 --> 01:30:29,360
think it's awesome uh

2490
01:30:26,159 --> 01:30:32,080
i think uh having it for hq

2491
01:30:29,360 --> 01:30:33,519
would actually be really amazing uh

2492
01:30:32,080 --> 01:30:36,239
unless we're just gonna deprecate

2493
01:30:33,520 --> 01:30:37,360
hq and which is i guess that's not a

2494
01:30:36,239 --> 01:30:39,120
problem

2495
01:30:37,360 --> 01:30:40,559
but i don't think we've decided to do

2496
01:30:39,120 --> 01:30:44,000
that so

2497
01:30:40,560 --> 01:30:46,400
anyway um yeah i i really

2498
01:30:44,000 --> 01:30:48,480
support key log and i i think extending

2499
01:30:46,400 --> 01:30:49,040
it to more transports uh whether it's

2500
01:30:48,480 --> 01:30:51,120
like

2501
01:30:49,040 --> 01:30:52,480
dns or h2 or whatever would be like

2502
01:30:51,120 --> 01:30:54,080
hugely helpful

2503
01:30:52,480 --> 01:30:55,919
um and i would actually like to see a

2504
01:30:54,080 --> 01:30:58,400
lot more congestion control

2505
01:30:55,920 --> 01:30:58,960
like transport information in there and

2506
01:30:58,400 --> 01:31:01,360
uh

2507
01:30:58,960 --> 01:31:02,320
i can hopefully in the future work with

2508
01:31:01,360 --> 01:31:04,400
you on that

2509
01:31:02,320 --> 01:31:06,639
and now that we have like bbr2 almost

2510
01:31:04,400 --> 01:31:06,638
done

2511
01:31:07,760 --> 01:31:10,159
shout out

2512
01:31:11,920 --> 01:31:15,520
um yeah thank you for this thank you for

2513
01:31:14,800 --> 01:31:17,040
this work

2514
01:31:15,520 --> 01:31:18,719
uh robin that you've been doing on this

2515
01:31:17,040 --> 01:31:21,440
for all this while uh

2516
01:31:18,719 --> 01:31:22,159
i q log is quickly becoming a d factor

2517
01:31:21,440 --> 01:31:25,199
standard

2518
01:31:22,159 --> 01:31:26,400
um and i think that it's given the

2519
01:31:25,199 --> 01:31:27,919
number of implementations that are

2520
01:31:26,400 --> 01:31:29,280
supporting it and plan to continue

2521
01:31:27,920 --> 01:31:31,679
supporting it

2522
01:31:29,280 --> 01:31:33,599
it's it it makes a lot of sense for us

2523
01:31:31,679 --> 01:31:36,320
to to include it in

2524
01:31:33,600 --> 01:31:37,360
um a part of the working group of the

2525
01:31:36,320 --> 01:31:41,280
quick working group

2526
01:31:37,360 --> 01:31:43,679
we've uh we need to have tooling

2527
01:31:41,280 --> 01:31:44,719
and this is one of the one of the ways

2528
01:31:43,679 --> 01:31:46,239
that we've

2529
01:31:44,719 --> 01:31:47,760
managed to get some seriously good

2530
01:31:46,239 --> 01:31:49,839
tooling and and

2531
01:31:47,760 --> 01:31:51,360
uh that's important now that said i want

2532
01:31:49,840 --> 01:31:54,400
to draw a line between

2533
01:31:51,360 --> 01:31:56,080
the q like format and the tooling uh

2534
01:31:54,400 --> 01:31:58,320
that goes with it like cube is

2535
01:31:56,080 --> 01:31:59,600
is the thing that people love q log is a

2536
01:31:58,320 --> 01:32:02,000
thing that people

2537
01:31:59,600 --> 01:32:03,040
manage to somehow rule and somehow

2538
01:32:02,000 --> 01:32:05,280
follow

2539
01:32:03,040 --> 01:32:06,800
um so those are two different things

2540
01:32:05,280 --> 01:32:09,280
right so so

2541
01:32:06,800 --> 01:32:10,480
so i think that when you're talking

2542
01:32:09,280 --> 01:32:12,159
about adopting something here we are

2543
01:32:10,480 --> 01:32:15,280
going to be adopting q log

2544
01:32:12,159 --> 01:32:16,638
the format not q is the tool

2545
01:32:15,280 --> 01:32:18,239
and to the extent that we are talking

2546
01:32:16,639 --> 01:32:19,040
about q log i would like to make sure

2547
01:32:18,239 --> 01:32:21,360
that we don't

2548
01:32:19,040 --> 01:32:23,600
try to expand the scope of that within

2549
01:32:21,360 --> 01:32:25,759
this working group to include tcp

2550
01:32:23,600 --> 01:32:27,360
i would love for tcp to have all of this

2551
01:32:25,760 --> 01:32:30,080
i would love for tcp to have the same

2552
01:32:27,360 --> 01:32:31,120
sort of you know multi-dimensional uh

2553
01:32:30,080 --> 01:32:34,639
capabilities that

2554
01:32:31,120 --> 01:32:36,960
cubist provides for quick and http 3

2555
01:32:34,639 --> 01:32:38,840
but in trying to solve both of those

2556
01:32:36,960 --> 01:32:42,000
problems we might end up

2557
01:32:38,840 --> 01:32:44,000
uh casting to widen it i would rather

2558
01:32:42,000 --> 01:32:46,239
see qlot be specific to quick

2559
01:32:44,000 --> 01:32:48,159
and something similar or parallel to it

2560
01:32:46,239 --> 01:32:49,759
can evolve for tcp if there's adequate

2561
01:32:48,159 --> 01:32:52,799
interest in tcpm

2562
01:32:49,760 --> 01:32:55,600
um i would love to see qrak be here and

2563
01:32:52,800 --> 01:32:55,920
and and limited to quick so i vote for

2564
01:32:55,600 --> 01:32:59,040
for

2565
01:32:55,920 --> 01:33:01,520
three even though we are not voting yeah

2566
01:32:59,040 --> 01:33:02,960
quickly in the check and so i've heard

2567
01:33:01,520 --> 01:33:04,719
from people who are not on the call

2568
01:33:02,960 --> 01:33:06,480
also that there's this distinction that

2569
01:33:04,719 --> 01:33:08,719
i mentioned between q log and q

2570
01:33:06,480 --> 01:33:10,480
which is interesting and and one

2571
01:33:08,719 --> 01:33:11,840
discussion that isn't really

2572
01:33:10,480 --> 01:33:13,599
in scope for the working group but it's

2573
01:33:11,840 --> 01:33:14,480
very important to have is sort of what's

2574
01:33:13,600 --> 01:33:17,760
the

2575
01:33:14,480 --> 01:33:20,400
um you know model forward for um jointly

2576
01:33:17,760 --> 01:33:21,920
developing qvis or similar tools

2577
01:33:20,400 --> 01:33:23,920
um because there's obviously pretty

2578
01:33:21,920 --> 01:33:25,280
strong dependency between the log format

2579
01:33:23,920 --> 01:33:27,040
and the tools and

2580
01:33:25,280 --> 01:33:28,960
can't really you know evolve one forward

2581
01:33:27,040 --> 01:33:31,760
without thinking about the other so

2582
01:33:28,960 --> 01:33:32,400
um that is the discussion that that goes

2583
01:33:31,760 --> 01:33:38,239
with that

2584
01:33:32,400 --> 01:33:38,239
um i think matt is next in cube

2585
01:33:41,600 --> 01:33:46,400
yeah so also thank you

2586
01:33:48,840 --> 01:33:51,840
um

2587
01:34:16,840 --> 01:34:19,840
okay

2588
01:34:25,280 --> 01:34:27,599
um

2589
01:34:31,440 --> 01:34:33,839
lucas

2590
01:34:36,159 --> 01:34:40,879
sorry yeah i just wanted to um inject

2591
01:34:38,159 --> 01:34:42,159
myself at the end to say because

2592
01:34:40,880 --> 01:34:44,080
one of the points i was hoping would

2593
01:34:42,159 --> 01:34:46,159
come up on the slides didn't

2594
01:34:44,080 --> 01:34:47,280
um and this isn't a criticism but just

2595
01:34:46,159 --> 01:34:49,040
to highlight that

2596
01:34:47,280 --> 01:34:51,280
it's taken us about a year to to get

2597
01:34:49,040 --> 01:34:53,600
from between q largo one

2598
01:34:51,280 --> 01:34:54,400
and o two and i i see that partly

2599
01:34:53,600 --> 01:34:56,239
because

2600
01:34:54,400 --> 01:34:58,559
a large burden has been placed on and

2601
01:34:56,239 --> 01:35:00,559
kind of robin is the main driver here to

2602
01:34:58,560 --> 01:35:02,159
to take factor in all the feedback that

2603
01:35:00,560 --> 01:35:03,199
he's getting back on cue log and to try

2604
01:35:02,159 --> 01:35:05,839
and design

2605
01:35:03,199 --> 01:35:06,559
improvements or um you know changes to

2606
01:35:05,840 --> 01:35:10,480
the spec

2607
01:35:06,560 --> 01:35:12,080
of q log to um adapt to how people are

2608
01:35:10,480 --> 01:35:13,839
actually deploying and using this and

2609
01:35:12,080 --> 01:35:15,920
finding out what pieces of information

2610
01:35:13,840 --> 01:35:19,119
they want to find useful

2611
01:35:15,920 --> 01:35:22,000
and so by having more kind of

2612
01:35:19,119 --> 01:35:23,119
time time for this thing hopefully

2613
01:35:22,000 --> 01:35:25,199
people can contribute

2614
01:35:23,119 --> 01:35:26,799
we can get a bit more governance over

2615
01:35:25,199 --> 01:35:30,000
over the spec

2616
01:35:26,800 --> 01:35:30,800
in order to help it um thrive rather

2617
01:35:30,000 --> 01:35:33,840
than

2618
01:35:30,800 --> 01:35:36,960
kind of um get a bit stuck um

2619
01:35:33,840 --> 01:35:39,679
looking for answers from people who are

2620
01:35:36,960 --> 01:35:41,040
i don't know maybe not so focused on

2621
01:35:39,679 --> 01:35:43,199
delivering something

2622
01:35:41,040 --> 01:35:44,080
so um there's probably a roundabout way

2623
01:35:43,199 --> 01:35:45,519
of saying

2624
01:35:44,080 --> 01:35:47,119
as an individual i would support

2625
01:35:45,520 --> 01:35:49,920
adopting this somewhere

2626
01:35:47,119 --> 01:35:52,080
rather than requiring it to remain an

2627
01:35:49,920 --> 01:35:54,400
individual draft

2628
01:35:52,080 --> 01:35:56,480
yeah i agree with you and i think it's

2629
01:35:54,400 --> 01:35:57,920
important to realize that at the moment

2630
01:35:56,480 --> 01:35:59,599
robin has basically been doing this by

2631
01:35:57,920 --> 01:36:01,119
himself as part of his thesis and

2632
01:35:59,600 --> 01:36:03,760
because he's otherwise bored

2633
01:36:01,119 --> 01:36:04,880
just doing a thesis is not really enough

2634
01:36:03,760 --> 01:36:07,199
um you know

2635
01:36:04,880 --> 01:36:08,400
um but go if we're adopting this right

2636
01:36:07,199 --> 01:36:10,159
we would we would really

2637
01:36:08,400 --> 01:36:12,159
i think i don't want to say require but

2638
01:36:10,159 --> 01:36:13,759
really encourage people especially

2639
01:36:12,159 --> 01:36:15,599
people that are running qlok

2640
01:36:13,760 --> 01:36:16,800
in production in some way to like chip

2641
01:36:15,600 --> 01:36:19,520
in and and

2642
01:36:16,800 --> 01:36:20,960
throw some effort at helping out here to

2643
01:36:19,520 --> 01:36:23,600
develop this forward

2644
01:36:20,960 --> 01:36:24,400
uh both on writing the specification and

2645
01:36:23,600 --> 01:36:26,400
developing it

2646
01:36:24,400 --> 01:36:28,799
but also possibly on on the the

2647
01:36:26,400 --> 01:36:30,480
visualization tools right which are

2648
01:36:28,800 --> 01:36:32,560
this this other thing that everybody

2649
01:36:30,480 --> 01:36:32,799
benefits if th those tools get better

2650
01:36:32,560 --> 01:36:35,119
and

2651
01:36:32,800 --> 01:36:36,480
and um that there should be a joint

2652
01:36:35,119 --> 01:36:39,759
interest in making

2653
01:36:36,480 --> 01:36:41,280
making those better um i think we're

2654
01:36:39,760 --> 01:36:41,760
going to continue this discussion on the

2655
01:36:41,280 --> 01:36:43,759
list i

2656
01:36:41,760 --> 01:36:45,199
sort of what i heard was mostly leaning

2657
01:36:43,760 --> 01:36:47,199
towards three and four

2658
01:36:45,199 --> 01:36:49,040
on your list that i cunningly took away

2659
01:36:47,199 --> 01:36:51,119
already on your last slide

2660
01:36:49,040 --> 01:36:52,639
um so i think we're gonna we're gonna

2661
01:36:51,119 --> 01:36:53,119
have a discussion about whether we take

2662
01:36:52,639 --> 01:36:54,960
this on

2663
01:36:53,119 --> 01:36:56,559
and where it's also a discussion we need

2664
01:36:54,960 --> 01:36:59,280
to have with the ads in case

2665
01:36:56,560 --> 01:37:01,119
we gravitate towards four rather than

2666
01:36:59,280 --> 01:37:03,519
three and even three um

2667
01:37:01,119 --> 01:37:04,880
um going quickly into the planning and

2668
01:37:03,520 --> 01:37:06,159
wrap up so i talked we already talked

2669
01:37:04,880 --> 01:37:07,840
about what we're planning for

2670
01:37:06,159 --> 01:37:09,280
the base drafts and we talked a little

2671
01:37:07,840 --> 01:37:11,040
bit that we're gonna

2672
01:37:09,280 --> 01:37:12,320
see that we can progress the already

2673
01:37:11,040 --> 01:37:14,400
adopted um

2674
01:37:12,320 --> 01:37:16,000
other work items like ops and various

2675
01:37:14,400 --> 01:37:18,400
extensions forward

2676
01:37:16,000 --> 01:37:20,400
um and we're gonna see what what else we

2677
01:37:18,400 --> 01:37:21,759
can adopt um

2678
01:37:20,400 --> 01:37:23,599
multipath is another thing that we're

2679
01:37:21,760 --> 01:37:25,280
going to talk the rest of the 20 minutes

2680
01:37:23,600 --> 01:37:29,440
i guess we have still left

2681
01:37:25,280 --> 01:37:30,480
um but but otherwise i think that that's

2682
01:37:29,440 --> 01:37:33,199
what we're going to do

2683
01:37:30,480 --> 01:37:34,239
is um we're going to try and do a

2684
01:37:33,199 --> 01:37:35,519
recharter

2685
01:37:34,239 --> 01:37:37,678
of the quick working group now that the

2686
01:37:35,520 --> 01:37:39,679
base drafts are basically done

2687
01:37:37,679 --> 01:37:40,960
and we're currently talking to the ads

2688
01:37:39,679 --> 01:37:43,600
about what

2689
01:37:40,960 --> 01:37:44,239
text we want to put into the charter

2690
01:37:43,600 --> 01:37:46,320
there's a

2691
01:37:44,239 --> 01:37:48,959
question mark how much the charter

2692
01:37:46,320 --> 01:37:50,559
should restrict us in terms of topical

2693
01:37:48,960 --> 01:37:51,119
scope for extensions for example that

2694
01:37:50,560 --> 01:37:53,920
we're going to

2695
01:37:51,119 --> 01:37:55,280
take on um so that that will happen and

2696
01:37:53,920 --> 01:37:56,960
you'll see draft versions of the

2697
01:37:55,280 --> 01:37:59,519
chartered and you can comment on them

2698
01:37:56,960 --> 01:38:00,560
i guess over the next few weeks sometime

2699
01:37:59,520 --> 01:38:01,679
um

2700
01:38:00,560 --> 01:38:04,800
future meetings i don't think we're

2701
01:38:01,679 --> 01:38:08,320
planning anything um before the next itf

2702
01:38:04,800 --> 01:38:09,840
unless um the multipath discussion seems

2703
01:38:08,320 --> 01:38:11,840
to develop in a two direction where

2704
01:38:09,840 --> 01:38:13,679
another interim might be useful

2705
01:38:11,840 --> 01:38:15,199
at the moment i don't see any other

2706
01:38:13,679 --> 01:38:18,400
topic sort of requiring

2707
01:38:15,199 --> 01:38:20,719
an interim of some sort

2708
01:38:18,400 --> 01:38:22,400
and with that i think um i want to open

2709
01:38:20,719 --> 01:38:25,520
the floor we have 20 minutes

2710
01:38:22,400 --> 01:38:26,879
um for the multipath

2711
01:38:25,520 --> 01:38:29,040
this continuing of the multipath

2712
01:38:26,880 --> 01:38:30,320
discussion and maybe i want to first

2713
01:38:29,040 --> 01:38:31,760
sort of

2714
01:38:30,320 --> 01:38:33,519
so so there's a there's it's been

2715
01:38:31,760 --> 01:38:35,760
free-flowing uh quite a bit on the

2716
01:38:33,520 --> 01:38:39,119
working group but there's been some um

2717
01:38:35,760 --> 01:38:39,119
sort of um

2718
01:38:39,520 --> 01:38:42,719
directions that have become a little bit

2719
01:38:41,199 --> 01:38:45,678
clearer right so there's this

2720
01:38:42,719 --> 01:38:47,040
some people seem to believe that the

2721
01:38:45,679 --> 01:38:50,480
what we currently have

2722
01:38:47,040 --> 01:38:53,280
in the base drafts is effectively um

2723
01:38:50,480 --> 01:38:54,799
support of some parts of what a full uh

2724
01:38:53,280 --> 01:38:56,080
quote-unquote multi-part solution would

2725
01:38:54,800 --> 01:38:58,400
offer and therefore

2726
01:38:56,080 --> 01:38:59,519
we already have um if you want to look

2727
01:38:58,400 --> 01:39:02,320
at it that way

2728
01:38:59,520 --> 01:39:04,320
delivered on our charter promise to ship

2729
01:39:02,320 --> 01:39:04,799
multipath we haven't shipped multipath

2730
01:39:04,320 --> 01:39:06,639
that's

2731
01:39:04,800 --> 01:39:09,040
compatible and features with multipath

2732
01:39:06,639 --> 01:39:11,440
tcp for example but we have

2733
01:39:09,040 --> 01:39:13,199
some support for multiple paths and some

2734
01:39:11,440 --> 01:39:15,280
people have said that that's enough to

2735
01:39:13,199 --> 01:39:17,119
address the charter item we had

2736
01:39:15,280 --> 01:39:18,480
um there's other people that say you

2737
01:39:17,119 --> 01:39:19,759
know the charter item was written

2738
01:39:18,480 --> 01:39:22,559
specifically

2739
01:39:19,760 --> 01:39:23,679
to enable use of multiple paths

2740
01:39:22,560 --> 01:39:26,400
concurrently and

2741
01:39:23,679 --> 01:39:28,320
and that is not something that is maybe

2742
01:39:26,400 --> 01:39:30,559
easily enabled by what we have and i

2743
01:39:28,320 --> 01:39:33,920
would like to sort of

2744
01:39:30,560 --> 01:39:36,159
try and see if we can

2745
01:39:33,920 --> 01:39:37,520
come to an agreement on whether some of

2746
01:39:36,159 --> 01:39:39,119
those use cases that we've seen

2747
01:39:37,520 --> 01:39:42,000
presented during the interim are

2748
01:39:39,119 --> 01:39:42,799
supported by what we currently have and

2749
01:39:42,000 --> 01:39:44,800
if there's enough

2750
01:39:42,800 --> 01:39:46,960
support for doing something else that

2751
01:39:44,800 --> 01:39:50,560
would support maybe some more

2752
01:39:46,960 --> 01:39:50,560
use cases that we've seen presented

2753
01:39:50,880 --> 01:39:54,000
and i've talked enough i think so so

2754
01:39:52,639 --> 01:39:56,639
please get into the cube please be

2755
01:39:54,000 --> 01:39:57,440
brief if you can we want to try and have

2756
01:39:56,639 --> 01:39:59,920
this uh

2757
01:39:57,440 --> 01:40:09,839
be a discussion as much as possible in

2758
01:39:59,920 --> 01:40:09,840
this forum

2759
01:40:10,080 --> 01:40:13,360
ted hardy you're first

2760
01:40:16,639 --> 01:40:21,040
uh ted hardy uh thanks very much for uh

2761
01:40:19,199 --> 01:40:22,480
opening the floor for the discussion

2762
01:40:21,040 --> 01:40:24,080
uh first i don't think that tartar

2763
01:40:22,480 --> 01:40:25,919
exegesis is really important

2764
01:40:24,080 --> 01:40:27,440
i know what we meant at the time and

2765
01:40:25,920 --> 01:40:30,480
what we meant at the time

2766
01:40:27,440 --> 01:40:31,440
was uh to look at how to do concurrent

2767
01:40:30,480 --> 01:40:33,440
path usage

2768
01:40:31,440 --> 01:40:34,719
but i don't think that that really has

2769
01:40:33,440 --> 01:40:36,480
to constrain where we end up

2770
01:40:34,719 --> 01:40:38,320
now things have changed a lot since the

2771
01:40:36,480 --> 01:40:40,320
trigger was originally written

2772
01:40:38,320 --> 01:40:41,440
and i think uh the design of quick has

2773
01:40:40,320 --> 01:40:43,199
changed enough

2774
01:40:41,440 --> 01:40:45,040
to move some mechanics that were inside

2775
01:40:43,199 --> 01:40:46,000
quick up into the applications that a

2776
01:40:45,040 --> 01:40:48,560
reconsideration

2777
01:40:46,000 --> 01:40:49,440
is probably reasonable at this point uh

2778
01:40:48,560 --> 01:40:52,000
that said

2779
01:40:49,440 --> 01:40:53,678
my personal take is what people have

2780
01:40:52,000 --> 01:40:55,119
described as use cases and the ones i

2781
01:40:53,679 --> 01:40:57,199
personally care about

2782
01:40:55,119 --> 01:40:58,480
don't work in quick now without multiple

2783
01:40:57,199 --> 01:40:59,759
connections

2784
01:40:58,480 --> 01:41:01,440
and you can always have multiple

2785
01:40:59,760 --> 01:41:03,360
connections so you can get multi-path at

2786
01:41:01,440 --> 01:41:04,559
the application layer by using multiple

2787
01:41:03,360 --> 01:41:05,679
connections and the failover

2788
01:41:04,560 --> 01:41:08,080
characteristics

2789
01:41:05,679 --> 01:41:08,800
that are there now but i think that if

2790
01:41:08,080 --> 01:41:10,960
you

2791
01:41:08,800 --> 01:41:12,320
wanted to have something where you got

2792
01:41:10,960 --> 01:41:13,760
the advantages of having it within a

2793
01:41:12,320 --> 01:41:15,519
single transport

2794
01:41:13,760 --> 01:41:17,199
and i'm not going to rehearse them

2795
01:41:15,520 --> 01:41:18,719
because i see people in in line behind

2796
01:41:17,199 --> 01:41:19,839
me like jonah who can rehearse them much

2797
01:41:18,719 --> 01:41:22,800
better than me

2798
01:41:19,840 --> 01:41:23,600
um you you would go ahead and make them

2799
01:41:22,800 --> 01:41:25,920
first class

2800
01:41:23,600 --> 01:41:28,560
uh versions of first class elements of

2801
01:41:25,920 --> 01:41:30,159
some version of quick

2802
01:41:28,560 --> 01:41:31,840
and i think one of the things that we

2803
01:41:30,159 --> 01:41:35,280
really have to decide here

2804
01:41:31,840 --> 01:41:36,639
isn't so much um

2805
01:41:35,280 --> 01:41:39,040
whether we want to do multi-path but

2806
01:41:36,639 --> 01:41:40,320
whether we want the applications to do

2807
01:41:39,040 --> 01:41:43,119
multi-path using

2808
01:41:40,320 --> 01:41:44,639
multiple connections or using quick and

2809
01:41:43,119 --> 01:41:47,119
if we are going to do

2810
01:41:44,639 --> 01:41:49,119
multi-path uh with quick whether it's

2811
01:41:47,119 --> 01:41:49,920
going to be a baseline version of quick

2812
01:41:49,119 --> 01:41:53,679
or

2813
01:41:49,920 --> 01:41:56,880
um an extension or a version that runs

2814
01:41:53,679 --> 01:41:58,639
uh parallel to the

2815
01:41:56,880 --> 01:42:00,320
kind of current failover version that we

2816
01:41:58,639 --> 01:42:02,719
have now so i

2817
01:42:00,320 --> 01:42:04,239
i think my personal take is that all of

2818
01:42:02,719 --> 01:42:06,000
those are

2819
01:42:04,239 --> 01:42:08,320
kind of still on the table given what

2820
01:42:06,000 --> 01:42:11,679
we've seen but i would prefer to see

2821
01:42:08,320 --> 01:42:13,679
a concurrent multi-path as a version of

2822
01:42:11,679 --> 01:42:16,960
quick possibly

2823
01:42:13,679 --> 01:42:17,920
not the same version as the failover

2824
01:42:16,960 --> 01:42:19,520
version of multipath

2825
01:42:17,920 --> 01:42:21,760
and i've talked too long thanks very

2826
01:42:19,520 --> 01:42:21,760
much

2827
01:42:22,800 --> 01:42:26,159
thanks ted ian

2828
01:42:26,239 --> 01:42:31,280
yes um wrestler one said that i would

2829
01:42:29,360 --> 01:42:33,280
very much like to see some deployment

2830
01:42:31,280 --> 01:42:34,800
experience um

2831
01:42:33,280 --> 01:42:36,159
i've asked for this on the list a few

2832
01:42:34,800 --> 01:42:37,679
times but i think that's the most

2833
01:42:36,159 --> 01:42:40,480
important thing at this point

2834
01:42:37,679 --> 01:42:41,600
um i also think a new version real quick

2835
01:42:40,480 --> 01:42:43,919
is sensible because

2836
01:42:41,600 --> 01:42:45,760
we have tons of versions and it's not

2837
01:42:43,920 --> 01:42:49,280
really a very large post

2838
01:42:45,760 --> 01:42:49,600
um not sure really sure what else to say

2839
01:42:49,280 --> 01:42:51,280
but

2840
01:42:49,600 --> 01:42:53,600
except to say that like we're at the

2841
01:42:51,280 --> 01:42:55,199
factory like we've been deploying quick

2842
01:42:53,600 --> 01:42:58,800
for

2843
01:42:55,199 --> 01:43:01,919
six years or something g quick um

2844
01:42:58,800 --> 01:43:03,280
put that in iedf standard and uh

2845
01:43:01,920 --> 01:43:05,280
that's clear indication that you can

2846
01:43:03,280 --> 01:43:06,880
wipe to deploy something without an idea

2847
01:43:05,280 --> 01:43:10,159
of scenarios and then

2848
01:43:06,880 --> 01:43:11,360
come back with information to inform the

2849
01:43:10,159 --> 01:43:14,480
working group

2850
01:43:11,360 --> 01:43:17,119
do you create a good term so i

2851
01:43:14,480 --> 01:43:18,080
i do not think that like the lack of an

2852
01:43:17,119 --> 01:43:21,119
idf standard

2853
01:43:18,080 --> 01:43:22,239
blocks uh any other anyone else from

2854
01:43:21,119 --> 01:43:24,000
like

2855
01:43:22,239 --> 01:43:26,480
writing month about them their own

2856
01:43:24,000 --> 01:43:26,480
networks

2857
01:43:27,199 --> 01:43:30,879
thank you ian spencer

2858
01:43:31,520 --> 01:43:34,639
um i want to just mention a couple of

2859
01:43:33,920 --> 01:43:39,280
things

2860
01:43:34,639 --> 01:43:43,600
uh one is that uh

2861
01:43:39,280 --> 01:43:45,920
i think that one of the one of the uh

2862
01:43:43,600 --> 01:43:48,400
questions i wanted to ask was uh you

2863
01:43:45,920 --> 01:43:52,239
know we're talking about like

2864
01:43:48,400 --> 01:43:55,280
um having quick quick

2865
01:43:52,239 --> 01:43:58,718
do all the scheduling for

2866
01:43:55,280 --> 01:44:00,000
multiple paths or having applications do

2867
01:43:58,719 --> 01:44:01,760
that

2868
01:44:00,000 --> 01:44:04,560
there's been at least a couple of people

2869
01:44:01,760 --> 01:44:06,800
that have mentioned on the

2870
01:44:04,560 --> 01:44:08,639
mailing list the possibility of coming

2871
01:44:06,800 --> 01:44:10,719
up with some kind of common

2872
01:44:08,639 --> 01:44:12,880
uh layer on top of quick that would

2873
01:44:10,719 --> 01:44:16,639
handle multiple con

2874
01:44:12,880 --> 01:44:18,239
connections uh i'm curious

2875
01:44:16,639 --> 01:44:20,480
how many people have thought of that

2876
01:44:18,239 --> 01:44:22,159
besides the three people who said it

2877
01:44:20,480 --> 01:44:24,400
on the mailing list none of which were

2878
01:44:22,159 --> 01:44:27,040
me um

2879
01:44:24,400 --> 01:44:28,080
second uh i really want to i really want

2880
01:44:27,040 --> 01:44:32,880
to agree with the

2881
01:44:28,080 --> 01:44:36,880
uh point about uh doing experiments and

2882
01:44:32,880 --> 01:44:38,880
uh and i really want to thank the

2883
01:44:36,880 --> 01:44:40,239
working group for being willing to talk

2884
01:44:38,880 --> 01:44:43,199
about multi-path

2885
01:44:40,239 --> 01:44:44,320
uh on this mailing list and to consider

2886
01:44:43,199 --> 01:44:46,400
uh

2887
01:44:44,320 --> 01:44:49,440
multiple experi you know multiple

2888
01:44:46,400 --> 01:44:53,040
experiments to see what we really need

2889
01:44:49,440 --> 01:44:55,440
and i i am trying to do some

2890
01:44:53,040 --> 01:44:58,320
analysis in the draft i said to the

2891
01:44:55,440 --> 01:44:58,320
quick mailing list

2892
01:44:58,480 --> 01:45:06,159
zero one version uh today

2893
01:45:02,080 --> 01:45:06,480
um to try and understand basically you

2894
01:45:06,159 --> 01:45:09,280
know

2895
01:45:06,480 --> 01:45:11,599
what different people mean when they say

2896
01:45:09,280 --> 01:45:13,759
uh multipath and what they're hoping to

2897
01:45:11,600 --> 01:45:17,520
use multiple paths to do

2898
01:45:13,760 --> 01:45:22,880
uh that was everything for me thank you

2899
01:45:17,520 --> 01:45:22,880
thanks spencer uh eric kania please

2900
01:45:23,040 --> 01:45:29,679
yeah i would be somewhat interested in

2901
01:45:26,639 --> 01:45:30,800
seeing folks maybe write up or use one

2902
01:45:29,679 --> 01:45:33,920
of the existing

2903
01:45:30,800 --> 01:45:35,360
multi-path extensions um slash

2904
01:45:33,920 --> 01:45:37,440
call it a new version whatever you want

2905
01:45:35,360 --> 01:45:40,559
to do and actually deploy it

2906
01:45:37,440 --> 01:45:42,400
and get some experience to echo some of

2907
01:45:40,560 --> 01:45:45,280
ian's comments and others

2908
01:45:42,400 --> 01:45:46,638
um i think that's something that we do

2909
01:45:45,280 --> 01:45:48,559
for a lot of other protocols i don't

2910
01:45:46,639 --> 01:45:51,360
think you need to

2911
01:45:48,560 --> 01:45:51,840
have the rfc to get that experience so i

2912
01:45:51,360 --> 01:45:53,839
like if

2913
01:45:51,840 --> 01:45:55,119
if we said wow look and here's an actual

2914
01:45:53,840 --> 01:45:56,320
real world end user benefit where it

2915
01:45:55,119 --> 01:45:59,679
does this awesome stuff

2916
01:45:56,320 --> 01:46:00,960
like cool i like that um but i think

2917
01:45:59,679 --> 01:46:02,639
we're seeing a lot of people who are

2918
01:46:00,960 --> 01:46:04,719
very hesitant to

2919
01:46:02,639 --> 01:46:06,639
put time and energy in and i think

2920
01:46:04,719 --> 01:46:07,440
that's also a completely reasonable

2921
01:46:06,639 --> 01:46:08,639
response

2922
01:46:07,440 --> 01:46:13,678
until we've actually been able to

2923
01:46:08,639 --> 01:46:17,440
demonstrate some actual benefit

2924
01:46:13,679 --> 01:46:17,440
thanks eric achara please

2925
01:46:19,280 --> 01:46:26,159
thank you um so

2926
01:46:22,960 --> 01:46:29,760
just a few quick points at a high level

2927
01:46:26,159 --> 01:46:32,400
i i i tend to think that multipath

2928
01:46:29,760 --> 01:46:33,679
should be in the transport um this is

2929
01:46:32,400 --> 01:46:35,839
something that's going to be

2930
01:46:33,679 --> 01:46:37,360
useful in the long term however i want

2931
01:46:35,840 --> 01:46:38,239
to be clear that i'm talking about what

2932
01:46:37,360 --> 01:46:40,159
i believe

2933
01:46:38,239 --> 01:46:41,919
where i believe multipath ought to be in

2934
01:46:40,159 --> 01:46:44,960
the long term um

2935
01:46:41,920 --> 01:46:48,239
as far as now is concerned i

2936
01:46:44,960 --> 01:46:50,320
i we've spent a lot of time building up

2937
01:46:48,239 --> 01:46:51,519
uh connection migration and all the

2938
01:46:50,320 --> 01:46:54,400
things that we needed

2939
01:46:51,520 --> 01:46:55,360
to make that work well in fact if you if

2940
01:46:54,400 --> 01:46:56,559
you paid attention

2941
01:46:55,360 --> 01:46:58,719
one of the things that you might have

2942
01:46:56,560 --> 01:46:59,440
seen is that one of the two design

2943
01:46:58,719 --> 01:47:02,239
issues

2944
01:46:59,440 --> 01:47:03,440
that we that we caught and we fixed

2945
01:47:02,239 --> 01:47:05,759
during last call

2946
01:47:03,440 --> 01:47:07,919
was around connection migration so this

2947
01:47:05,760 --> 01:47:09,520
has been a gift that has been giving

2948
01:47:07,920 --> 01:47:11,600
repeatedly and i have

2949
01:47:09,520 --> 01:47:12,800
i i completely expect that we will find

2950
01:47:11,600 --> 01:47:15,840
more things as we

2951
01:47:12,800 --> 01:47:18,000
go further along so i i expect that

2952
01:47:15,840 --> 01:47:19,280
there are more dragons here than people

2953
01:47:18,000 --> 01:47:23,679
uh anticipate

2954
01:47:19,280 --> 01:47:25,920
but um um this is all to say that we

2955
01:47:23,679 --> 01:47:28,000
we need uh more experience with the

2956
01:47:25,920 --> 01:47:31,119
mechanisms that we already have

2957
01:47:28,000 --> 01:47:32,239
in place in the protocol um if people

2958
01:47:31,119 --> 01:47:34,880
want to experiment

2959
01:47:32,239 --> 01:47:37,119
i would recommend one strong thing and a

2960
01:47:34,880 --> 01:47:39,119
strong encourage

2961
01:47:37,119 --> 01:47:40,639
people experimenting uh i don't need to

2962
01:47:39,119 --> 01:47:42,239
but as ian is pointing out people are

2963
01:47:40,639 --> 01:47:45,440
free to go experiment

2964
01:47:42,239 --> 01:47:47,360
uh um on their own but i would i would

2965
01:47:45,440 --> 01:47:48,638
i would ask that people consider the

2966
01:47:47,360 --> 01:47:50,400
mechanisms that are already

2967
01:47:48,639 --> 01:47:51,840
in place we spent a fair amount of time

2968
01:47:50,400 --> 01:47:52,679
trying to figure that out

2969
01:47:51,840 --> 01:47:55,759
simply

2970
01:47:52,680 --> 01:47:55,759
[Music]

2971
01:47:55,760 --> 01:47:59,119
even if those mechanisms were to be

2972
01:47:57,440 --> 01:47:59,839
replaced i think it's important to

2973
01:47:59,119 --> 01:48:01,280
consider

2974
01:47:59,840 --> 01:48:04,320
the connection migration mechanisms that

2975
01:48:01,280 --> 01:48:04,719
we have in place and then uh replace

2976
01:48:04,320 --> 01:48:08,320
them

2977
01:48:04,719 --> 01:48:11,600
meaningfully finally i'll note that

2978
01:48:08,320 --> 01:48:12,320
there is a distinction between what i

2979
01:48:11,600 --> 01:48:15,440
think of as

2980
01:48:12,320 --> 01:48:19,360
the use of multipath and the design of

2981
01:48:15,440 --> 01:48:22,080
the protocol that accomplishes this um

2982
01:48:19,360 --> 01:48:22,080
the the

2983
01:48:23,040 --> 01:48:26,960
the fact that multipath can be used with

2984
01:48:25,280 --> 01:48:29,920
quick is something

2985
01:48:26,960 --> 01:48:31,360
that uh that that needs experimentation

2986
01:48:29,920 --> 01:48:33,199
and folks who can do this

2987
01:48:31,360 --> 01:48:35,119
can do this and bring the bring results

2988
01:48:33,199 --> 01:48:37,839
to the table or bring the experiences

2989
01:48:35,119 --> 01:48:39,199
to the working group but the design of

2990
01:48:37,840 --> 01:48:41,119
the protocol itself

2991
01:48:39,199 --> 01:48:43,199
can be something that whatever you

2992
01:48:41,119 --> 01:48:44,639
choose to use is perfectly fine

2993
01:48:43,199 --> 01:48:46,400
we can design protocols as a working

2994
01:48:44,639 --> 01:48:48,800
group later and make it better

2995
01:48:46,400 --> 01:48:49,599
what i would want to see is how it gets

2996
01:48:48,800 --> 01:48:52,320
used

2997
01:48:49,600 --> 01:48:54,960
and what the value of it is in actual

2998
01:48:52,320 --> 01:48:54,960
deployments

2999
01:48:57,360 --> 01:49:02,239
thanks china christian next please

3000
01:49:05,360 --> 01:49:09,119
answer a question that

3001
01:49:12,880 --> 01:49:18,000
okay it's about whether multipath shall

3002
01:49:16,239 --> 01:49:19,919
be a new version of quick or whether we

3003
01:49:18,000 --> 01:49:22,960
can use an extension

3004
01:49:19,920 --> 01:49:25,599
and i think that in practice we can do a

3005
01:49:22,960 --> 01:49:27,360
lot with extensions we have proven that

3006
01:49:25,599 --> 01:49:29,280
in the quick development so far we have

3007
01:49:27,360 --> 01:49:32,639
done things like datagrams

3008
01:49:29,280 --> 01:49:35,280
we have done things like delayed acts

3009
01:49:32,639 --> 01:49:38,080
which are pretty much in the same kind

3010
01:49:35,280 --> 01:49:41,119
of complexity as multipaths

3011
01:49:38,080 --> 01:49:43,360
and so i i think

3012
01:49:41,119 --> 01:49:44,799
that we can definitely experiment with

3013
01:49:43,360 --> 01:49:47,280
multipass

3014
01:49:44,800 --> 01:49:48,880
use building on the extensibility of the

3015
01:49:47,280 --> 01:49:51,040
quick protocol

3016
01:49:48,880 --> 01:49:52,639
and so i'm pretty much in line with what

3017
01:49:51,040 --> 01:49:56,880
jenna and other have said

3018
01:49:52,639 --> 01:49:57,280
there that we we don't we can definitely

3019
01:49:56,880 --> 01:49:59,679
have

3020
01:49:57,280 --> 01:50:01,280
experiments going on today and clarify

3021
01:49:59,679 --> 01:50:03,520
stuff like

3022
01:50:01,280 --> 01:50:04,400
the discussion we had with casual and

3023
01:50:03,520 --> 01:50:08,080
others about

3024
01:50:04,400 --> 01:50:09,040
how to fit aed and connection ids and

3025
01:50:08,080 --> 01:50:11,199
stuff like that and do

3026
01:50:09,040 --> 01:50:12,960
actually the bare minimal changes too

3027
01:50:11,199 --> 01:50:16,000
quick to enable multipaths because we

3028
01:50:12,960 --> 01:50:17,520
are already almost there

3029
01:50:16,000 --> 01:50:19,599
so that's my point let's let's

3030
01:50:17,520 --> 01:50:20,639
experiment and let experiments using the

3031
01:50:19,599 --> 01:50:25,840
extensibility of

3032
01:50:20,639 --> 01:50:25,840
quick because it's already there

3033
01:50:25,920 --> 01:50:30,639
thank you christian to beat tree

3034
01:50:33,360 --> 01:50:37,759
hello guys i just want to point out that

3035
01:50:35,760 --> 01:50:40,000
we just had a presentation about

3036
01:50:37,760 --> 01:50:43,679
multipath use of quick

3037
01:50:40,000 --> 01:50:43,679
so why is that not about it i mean

3038
01:50:43,840 --> 01:50:47,599
did you guys like it i liked it

3039
01:50:49,679 --> 01:50:54,320
okay thanks dmitry um i put myself in

3040
01:50:53,520 --> 01:50:57,760
the queue

3041
01:50:54,320 --> 01:51:01,199
um so i'll take my chair hat off uh

3042
01:50:57,760 --> 01:51:03,040
literally um basically uh

3043
01:51:01,199 --> 01:51:04,480
something kind of that riffs on what

3044
01:51:03,040 --> 01:51:07,840
joanna and christine said

3045
01:51:04,480 --> 01:51:08,799
um is that and the point i've made on

3046
01:51:07,840 --> 01:51:12,080
the mailing list

3047
01:51:08,800 --> 01:51:14,880
is that we're still trying to

3048
01:51:12,080 --> 01:51:15,360
to to take this transport layer and map

3049
01:51:14,880 --> 01:51:18,639
hp

3050
01:51:15,360 --> 01:51:20,080
3 on the top as a fully formed complex

3051
01:51:18,639 --> 01:51:21,360
application protocol that's

3052
01:51:20,080 --> 01:51:24,400
multi-streaming

3053
01:51:21,360 --> 01:51:26,559
and will be used in ways that

3054
01:51:24,400 --> 01:51:28,320
exercise quick for its intended goal in

3055
01:51:26,560 --> 01:51:29,119
the first place to mitigate head of line

3056
01:51:28,320 --> 01:51:30,719
blocking

3057
01:51:29,119 --> 01:51:32,159
and some other things yes quick can be

3058
01:51:30,719 --> 01:51:35,040
used for lots of stuff

3059
01:51:32,159 --> 01:51:36,480
but this is going to be a good test of

3060
01:51:35,040 --> 01:51:39,199
implementations

3061
01:51:36,480 --> 01:51:41,040
and how they do things like tuning of

3062
01:51:39,199 --> 01:51:42,400
congestion control and flow control of

3063
01:51:41,040 --> 01:51:46,080
streaming data

3064
01:51:42,400 --> 01:51:48,559
so i think too much focus on

3065
01:51:46,080 --> 01:51:49,840
using multipath to solve perceived

3066
01:51:48,560 --> 01:51:52,719
performance problems

3067
01:51:49,840 --> 01:51:55,199
of quick implementations right now risks

3068
01:51:52,719 --> 01:51:57,599
uh kind of throwing bandwidth a problem

3069
01:51:55,199 --> 01:51:58,879
that could be solved through continued

3070
01:51:57,599 --> 01:52:02,080
deployment experience

3071
01:51:58,880 --> 01:52:05,119
just with quick version one and or

3072
01:52:02,080 --> 01:52:08,320
extensions that can be more easily

3073
01:52:05,119 --> 01:52:09,519
designed deployed and tested such as

3074
01:52:08,320 --> 01:52:12,639
delayed ack

3075
01:52:09,520 --> 01:52:14,719
or other things that people have on the

3076
01:52:12,639 --> 01:52:17,760
table that they might like to try

3077
01:52:14,719 --> 01:52:20,639
so that's that's all i wanted to say is

3078
01:52:17,760 --> 01:52:22,320
um let's be careful with applying

3079
01:52:20,639 --> 01:52:25,840
solutions to problems

3080
01:52:22,320 --> 01:52:28,400
that are unique um and not

3081
01:52:25,840 --> 01:52:30,560
uh unique and unsolvable by some kind of

3082
01:52:28,400 --> 01:52:35,598
multi-path solution

3083
01:52:30,560 --> 01:52:35,599
and then i'll get out of the queue eric

3084
01:52:36,159 --> 01:52:39,920
i would actually agree with that a lot i

3085
01:52:37,840 --> 01:52:41,840
like the idea of of

3086
01:52:39,920 --> 01:52:43,119
not just throwing multipath at the

3087
01:52:41,840 --> 01:52:44,880
problem i think

3088
01:52:43,119 --> 01:52:46,239
we've deployed a bunch of multi-path

3089
01:52:44,880 --> 01:52:49,679
stuff and even

3090
01:52:46,239 --> 01:52:52,159
there the problem is not

3091
01:52:49,679 --> 01:52:53,520
technical the problem is policy and the

3092
01:52:52,159 --> 01:52:57,519
problem is cost

3093
01:52:53,520 --> 01:52:59,199
and so i think if we were to see a

3094
01:52:57,520 --> 01:53:00,960
industry change and i know some people

3095
01:52:59,199 --> 01:53:01,919
have have promised that that might be a

3096
01:53:00,960 --> 01:53:04,000
thing but

3097
01:53:01,920 --> 01:53:05,119
i i don't know if we've seen that yet if

3098
01:53:04,000 --> 01:53:08,800
we were to see

3099
01:53:05,119 --> 01:53:11,360
a difference in uh cost structure or

3100
01:53:08,800 --> 01:53:12,800
non-standards incentive structure i

3101
01:53:11,360 --> 01:53:13,360
think we might see a lot more people

3102
01:53:12,800 --> 01:53:14,560
being

3103
01:53:13,360 --> 01:53:16,719
way more interested in deploying

3104
01:53:14,560 --> 01:53:19,840
multi-path things um

3105
01:53:16,719 --> 01:53:21,040
so that that's

3106
01:53:19,840 --> 01:53:22,080
i a lot of people have been talking

3107
01:53:21,040 --> 01:53:23,519
about a lot of use cases that are like

3108
01:53:22,080 --> 01:53:24,960
well this would be super cool if

3109
01:53:23,520 --> 01:53:27,599
something else happened

3110
01:53:24,960 --> 01:53:29,280
um i'm not saying we shouldn't solve the

3111
01:53:27,599 --> 01:53:30,639
problems that we will need to solve when

3112
01:53:29,280 --> 01:53:32,639
that day arrives

3113
01:53:30,639 --> 01:53:34,239
but if we're advocating that we think

3114
01:53:32,639 --> 01:53:36,560
that's that's not going to be a

3115
01:53:34,239 --> 01:53:37,598
big policy problem um i think that may

3116
01:53:36,560 --> 01:53:41,679
be the source of some of the

3117
01:53:37,599 --> 01:53:45,679
skiddishness to dive down that path

3118
01:53:41,679 --> 01:53:45,679
thanks eric jonah please

3119
01:53:48,239 --> 01:53:51,919
i i completely agree with what eric just

3120
01:53:51,040 --> 01:53:54,960
said

3121
01:53:51,920 --> 01:53:58,480
um i wanted to re-emphasize

3122
01:53:54,960 --> 01:54:00,960
something that lucas pointed out um

3123
01:53:58,480 --> 01:54:02,799
one of the things that made mpdcb

3124
01:54:00,960 --> 01:54:05,920
slightly easier

3125
01:54:02,800 --> 01:54:09,360
grant that mpdcp had its own troubles

3126
01:54:05,920 --> 01:54:12,239
was that it was operating under a single

3127
01:54:09,360 --> 01:54:12,960
byte stream so the constraints on it

3128
01:54:12,239 --> 01:54:15,280
were

3129
01:54:12,960 --> 01:54:17,080
pretty clear in terms of what the

3130
01:54:15,280 --> 01:54:18,480
receiver needed to do it needed to

3131
01:54:17,080 --> 01:54:20,320
re-realign

3132
01:54:18,480 --> 01:54:22,000
the byte stream and reorder the byte

3133
01:54:20,320 --> 01:54:24,559
stream and and deliver data

3134
01:54:22,000 --> 01:54:25,440
back up back up in order quick

3135
01:54:24,560 --> 01:54:26,800
introduces

3136
01:54:25,440 --> 01:54:28,719
several degrees of freedom in this

3137
01:54:26,800 --> 01:54:30,239
particular one it introduces a degree of

3138
01:54:28,719 --> 01:54:32,480
freedom of having multiple streams and

3139
01:54:30,239 --> 01:54:35,919
then there's priorities potentially

3140
01:54:32,480 --> 01:54:38,718
and that is a significant difference

3141
01:54:35,920 --> 01:54:40,880
in that in that it it it takes your

3142
01:54:38,719 --> 01:54:42,320
scheduling problem of multiple paths

3143
01:54:40,880 --> 01:54:44,320
multiplies it with the scheduling

3144
01:54:42,320 --> 01:54:44,960
problem of multiple streams on multiple

3145
01:54:44,320 --> 01:54:46,960
paths

3146
01:54:44,960 --> 01:54:49,360
and now you have a much harder problem

3147
01:54:46,960 --> 01:54:52,080
this is not just a priority problem

3148
01:54:49,360 --> 01:54:53,199
this is actually a performance issue uh

3149
01:54:52,080 --> 01:54:56,320
mark hanley

3150
01:54:53,199 --> 01:54:58,159
uh did some early work on this and i i

3151
01:54:56,320 --> 01:54:59,360
i wish i could get my hands on this on

3152
01:54:58,159 --> 01:55:02,879
this work to

3153
01:54:59,360 --> 01:55:05,199
to actually look at multi-streaming

3154
01:55:02,880 --> 01:55:06,080
and multipath and he found that it was

3155
01:55:05,199 --> 01:55:07,919
critical

3156
01:55:06,080 --> 01:55:09,280
to pin certain kinds of streams on

3157
01:55:07,920 --> 01:55:11,840
certain kinds of paths to get

3158
01:55:09,280 --> 01:55:13,679
performance benefits for http

3159
01:55:11,840 --> 01:55:15,119
now the use case is not http the use

3160
01:55:13,679 --> 01:55:16,639
case is something entirely different

3161
01:55:15,119 --> 01:55:18,159
and it's much more like a byte stream

3162
01:55:16,639 --> 01:55:19,440
then that's a different matter but if

3163
01:55:18,159 --> 01:55:20,638
you want to do something that's more

3164
01:55:19,440 --> 01:55:24,000
general for quick

3165
01:55:20,639 --> 01:55:26,159
one has to consider the most basic unit

3166
01:55:24,000 --> 01:55:28,639
of api that we talk about here which is

3167
01:55:26,159 --> 01:55:28,638
streams

3168
01:55:30,080 --> 01:55:34,880
thank you uh spencer next

3169
01:55:35,199 --> 01:55:40,239
i think at least one separate ietf

3170
01:55:38,719 --> 01:55:41,760
meeting i'd say that there's a

3171
01:55:40,239 --> 01:55:43,598
fascinating conversation happening in

3172
01:55:41,760 --> 01:55:46,480
the jabra room

3173
01:55:43,599 --> 01:55:48,239
that would be good to take note of at

3174
01:55:46,480 --> 01:55:51,440
some point

3175
01:55:48,239 --> 01:55:54,559
but beyond that

3176
01:55:51,440 --> 01:55:56,960
the one important point that

3177
01:55:54,560 --> 01:55:58,639
came up in slack when it was not being

3178
01:55:56,960 --> 01:56:00,400
relayed to

3179
01:55:58,639 --> 01:56:02,400
the jabber room during the virtual

3180
01:56:00,400 --> 01:56:04,638
interim was uh

3181
01:56:02,400 --> 01:56:07,519
recognizing i think this was matt

3182
01:56:04,639 --> 01:56:08,880
recognizing that

3183
01:56:07,520 --> 01:56:11,040
one of the differences we were getting

3184
01:56:08,880 --> 01:56:11,360
in the use cases was between people who

3185
01:56:11,040 --> 01:56:14,960
were

3186
01:56:11,360 --> 01:56:17,759
going to be using h3 versus not

3187
01:56:14,960 --> 01:56:18,719
so i think that's a thing for us to keep

3188
01:56:17,760 --> 01:56:21,199
in mind

3189
01:56:18,719 --> 01:56:22,000
and that is somewhat relevant to what's

3190
01:56:21,199 --> 01:56:26,159
going on in the

3191
01:56:22,000 --> 01:56:29,119
jabber room right now i think we're also

3192
01:56:26,159 --> 01:56:31,519
hearing people say you know remove the

3193
01:56:29,119 --> 01:56:35,519
single path restriction for

3194
01:56:31,520 --> 01:56:35,520
uh connection migration and

3195
01:56:36,159 --> 01:56:39,280
myriad just to mention one name was

3196
01:56:38,159 --> 01:56:41,280
asking and i

3197
01:56:39,280 --> 01:56:42,880
was too trying to understand the

3198
01:56:41,280 --> 01:56:44,639
difference between that and what at

3199
01:56:42,880 --> 01:56:47,840
least some people are talking about

3200
01:56:44,639 --> 01:56:49,520
with multi-pass support i suspect that

3201
01:56:47,840 --> 01:56:52,639
part of that

3202
01:56:49,520 --> 01:56:54,080
difference is between people who would

3203
01:56:52,639 --> 01:56:56,320
be using

3204
01:56:54,080 --> 01:56:57,440
multi-path over h3 versus people who

3205
01:56:56,320 --> 01:57:01,599
wouldn't be

3206
01:56:57,440 --> 01:57:03,199
so um i'll i'll stop talking there but

3207
01:57:01,599 --> 01:57:05,040
uh

3208
01:57:03,199 --> 01:57:07,598
again thank you all for uh this

3209
01:57:05,040 --> 01:57:07,599
discussion

3210
01:57:07,840 --> 01:57:11,360
thanks spencer uh we're getting close to

3211
01:57:09,920 --> 01:57:12,960
the top of the hour so

3212
01:57:11,360 --> 01:57:14,880
if people want to speak like they should

3213
01:57:12,960 --> 01:57:18,320
definitely jump in the queue right now

3214
01:57:14,880 --> 01:57:20,080
but miriam take it away

3215
01:57:18,320 --> 01:57:22,480
yeah i just want to kind of slightly

3216
01:57:20,080 --> 01:57:25,040
disagree with jenna um i mean i just i

3217
01:57:22,480 --> 01:57:26,638
agree that like scheduling is complex

3218
01:57:25,040 --> 01:57:28,000
it's already complex and slightly more

3219
01:57:26,639 --> 01:57:30,880
complex if you add um

3220
01:57:28,000 --> 01:57:32,719
streams but it's also not a problem that

3221
01:57:30,880 --> 01:57:34,159
we need to solve completely right now

3222
01:57:32,719 --> 01:57:36,400
it's like congestion control like

3223
01:57:34,159 --> 01:57:37,759
optimizing it for like the best case or

3224
01:57:36,400 --> 01:57:39,759
whatever it's really complex because

3225
01:57:37,760 --> 01:57:41,199
there are a lot of factors

3226
01:57:39,760 --> 01:57:43,199
and that's not what we're looking for

3227
01:57:41,199 --> 01:57:45,360
we're looking for is like some simple

3228
01:57:43,199 --> 01:57:47,519
scheduling basic schemes that support a

3229
01:57:45,360 --> 01:57:49,679
lot of the base use cases

3230
01:57:47,520 --> 01:57:50,960
um to start with and then what we're

3231
01:57:49,679 --> 01:57:51,679
also looking for especially in a quick

3232
01:57:50,960 --> 01:57:53,840
working group

3233
01:57:51,679 --> 01:57:55,840
is to get the signaling into the

3234
01:57:53,840 --> 01:57:57,679
protocol and get that specified so

3235
01:57:55,840 --> 01:57:59,040
people can actually start experimenting

3236
01:57:57,679 --> 01:58:01,040
with scheduling but

3237
01:57:59,040 --> 01:58:02,320
like we don't need to experiment with

3238
01:58:01,040 --> 01:58:04,159
the fingerling the signaling

3239
01:58:02,320 --> 01:58:06,000
i think is like kind of straightforward

3240
01:58:04,159 --> 01:58:08,719
we can like discuss if we want one

3241
01:58:06,000 --> 01:58:09,679
or multiple packet number spaces but

3242
01:58:08,719 --> 01:58:11,440
other than that it's

3243
01:58:09,679 --> 01:58:13,280
it's really straightforward and having

3244
01:58:11,440 --> 01:58:14,879
something and that is agreed on in this

3245
01:58:13,280 --> 01:58:15,759
working group would be really helpful to

3246
01:58:14,880 --> 01:58:21,520
move

3247
01:58:15,760 --> 01:58:24,639
experimentation forward

3248
01:58:21,520 --> 01:58:26,960
thanks maria uh i don't see anyone else

3249
01:58:24,639 --> 01:58:29,119
in the queue

3250
01:58:26,960 --> 01:58:30,480
no i think that's that was somewhat

3251
01:58:29,119 --> 01:58:32,719
useful i thought so so

3252
01:58:30,480 --> 01:58:34,718
i think i actually saw enough people

3253
01:58:32,719 --> 01:58:36,880
talking about the desire to see more

3254
01:58:34,719 --> 01:58:38,639
experimentation for multipath which is

3255
01:58:36,880 --> 01:58:39,679
something that i think so nobody's

3256
01:58:38,639 --> 01:58:41,520
spoken against that

3257
01:58:39,679 --> 01:58:43,360
right i think there's still a question

3258
01:58:41,520 --> 01:58:46,000
mark in my mind as to

3259
01:58:43,360 --> 01:58:47,440
what if the working group needs to do

3260
01:58:46,000 --> 01:58:49,040
anything here to enable that

3261
01:58:47,440 --> 01:58:51,519
experimentation

3262
01:58:49,040 --> 01:58:53,040
because it you know you can do a private

3263
01:58:51,520 --> 01:58:55,520
version there's several of them

3264
01:58:53,040 --> 01:58:57,119
and you can you know experiment with

3265
01:58:55,520 --> 01:58:58,159
multipath that has happened and we've

3266
01:58:57,119 --> 01:59:00,400
seen some reports

3267
01:58:58,159 --> 01:59:01,280
from alibaba and others that have done

3268
01:59:00,400 --> 01:59:04,638
that

3269
01:59:01,280 --> 01:59:06,320
but it so so that at least in my mind i

3270
01:59:04,639 --> 01:59:07,360
don't see a need for the working group

3271
01:59:06,320 --> 01:59:09,599
to

3272
01:59:07,360 --> 01:59:12,480
do work on something that is multipath

3273
01:59:09,599 --> 01:59:13,760
related to further enable anything here

3274
01:59:12,480 --> 01:59:15,759
it so it's very clear that we're not

3275
01:59:13,760 --> 01:59:18,880
going to change v1 uh

3276
01:59:15,760 --> 01:59:19,760
to to do anything here right it will

3277
01:59:18,880 --> 01:59:21,679
certainly need to

3278
01:59:19,760 --> 01:59:23,119
anything multi-path real anything that

3279
01:59:21,679 --> 01:59:24,239
goes beyond what we have in v1 will

3280
01:59:23,119 --> 01:59:26,239
certainly need to be

3281
01:59:24,239 --> 01:59:29,040
in another version or in a future

3282
01:59:26,239 --> 01:59:31,598
extension too quick

3283
01:59:29,040 --> 01:59:32,960
so if if um people either in the in the

3284
01:59:31,599 --> 01:59:33,679
minute we have intended in the queue

3285
01:59:32,960 --> 01:59:36,080
could could

3286
01:59:33,679 --> 01:59:36,960
say what what the working group if what

3287
01:59:36,080 --> 01:59:38,800
they see in

3288
01:59:36,960 --> 01:59:40,159
the working group to do what what need

3289
01:59:38,800 --> 01:59:41,599
they see i think that might be helpful

3290
01:59:40,159 --> 01:59:44,159
for lucas and me to figure out

3291
01:59:41,599 --> 01:59:45,280
as we go into the rechartering what text

3292
01:59:44,159 --> 01:59:47,040
we should write

3293
01:59:45,280 --> 01:59:48,880
there's two people in the queue be very

3294
01:59:47,040 --> 01:59:52,000
quick thank you three people

3295
01:59:48,880 --> 01:59:53,760
uh so i think the the um

3296
01:59:52,000 --> 01:59:55,280
the example that martin dude said for

3297
01:59:53,760 --> 01:59:56,159
starting the load balancing work that he

3298
01:59:55,280 --> 01:59:57,440
was interested in

3299
01:59:56,159 --> 01:59:59,199
in the working group is kind of what i'm

3300
01:59:57,440 --> 02:00:00,719
looking for here but you can bring the

3301
01:59:59,199 --> 02:00:03,199
work to the working group have people

3302
02:00:00,719 --> 02:00:04,400
comment on it share their experiences

3303
02:00:03,199 --> 02:00:06,239
and compare

3304
02:00:04,400 --> 02:00:07,920
the implementations among those people

3305
02:00:06,239 --> 02:00:09,839
who are heading down

3306
02:00:07,920 --> 02:00:10,960
uh one or more of these multi-paths

3307
02:00:09,840 --> 02:00:13,280
sorry um

3308
02:00:10,960 --> 02:00:14,880
and i don't think that the support

3309
02:00:13,280 --> 02:00:16,159
necessarily needs to be more than that

3310
02:00:14,880 --> 02:00:18,400
at the beginning

3311
02:00:16,159 --> 02:00:19,519
but i'll point out that in his case he

3312
02:00:18,400 --> 02:00:20,320
came to the point where he said look

3313
02:00:19,520 --> 02:00:21,760
there's this thing

3314
02:00:20,320 --> 02:00:23,759
in the transport draft that i'm going to

3315
02:00:21,760 --> 02:00:25,199
have to relax for one of my things to

3316
02:00:23,760 --> 02:00:26,000
work is that going to be okay and the

3317
02:00:25,199 --> 02:00:28,000
discussion then

3318
02:00:26,000 --> 02:00:29,599
has to happen in this working group so i

3319
02:00:28,000 --> 02:00:30,639
think having that context in the working

3320
02:00:29,599 --> 02:00:32,320
group and the

3321
02:00:30,639 --> 02:00:35,440
experimental discussion in the working

3322
02:00:32,320 --> 02:00:37,360
group uh along the lines that he sort of

3323
02:00:35,440 --> 02:00:39,040
blazed as a trail there is is what i'm

3324
02:00:37,360 --> 02:00:40,559
looking for thanks

3325
02:00:39,040 --> 02:00:42,800
thank you that was helpful so basically

3326
02:00:40,560 --> 02:00:45,119
um be a forum for a discussion

3327
02:00:42,800 --> 02:00:47,119
and a discussion of potential

3328
02:00:45,119 --> 02:00:48,559
relaxations compared to the spec

3329
02:00:47,119 --> 02:00:51,839
that was that is what what you would

3330
02:00:48,560 --> 02:00:51,840
think is useful thank

3331
02:00:53,599 --> 02:00:58,400
and we're you after china so um i think

3332
02:00:56,719 --> 02:00:59,520
what i was trying to say earlier is that

3333
02:00:58,400 --> 02:01:00,960
i think like we don't need

3334
02:00:59,520 --> 02:01:02,480
experimentation on the question if we

3335
02:01:00,960 --> 02:01:03,760
want to have like one or multiple packet

3336
02:01:02,480 --> 02:01:05,360
number spaces or whatever

3337
02:01:03,760 --> 02:01:07,520
that's a design question that we can

3338
02:01:05,360 --> 02:01:09,360
actually decide um the thing that we

3339
02:01:07,520 --> 02:01:13,199
need experimentation on is like

3340
02:01:09,360 --> 02:01:15,920
if and how people would use that um but

3341
02:01:13,199 --> 02:01:16,400
that is that only happens if people have

3342
02:01:15,920 --> 02:01:18,400
a

3343
02:01:16,400 --> 02:01:20,000
reference protocol that they can refer

3344
02:01:18,400 --> 02:01:21,040
to and

3345
02:01:20,000 --> 02:01:22,639
probably also some of the

3346
02:01:21,040 --> 02:01:23,760
experimentation also happened only

3347
02:01:22,639 --> 02:01:25,360
happens if

3348
02:01:23,760 --> 02:01:26,880
um people provide implementation because

3349
02:01:25,360 --> 02:01:27,920
not everybody who would be interested

3350
02:01:26,880 --> 02:01:29,280
every little application would be

3351
02:01:27,920 --> 02:01:30,560
interested in using that will implement

3352
02:01:29,280 --> 02:01:32,159
their own thing

3353
02:01:30,560 --> 02:01:33,520
and as long as we don't pick up the work

3354
02:01:32,159 --> 02:01:34,719
in the working group that might just not

3355
02:01:33,520 --> 02:01:37,119
happen

3356
02:01:34,719 --> 02:01:38,719
so i want we've seen experimentation

3357
02:01:37,119 --> 02:01:39,360
already and they are implementations

3358
02:01:38,719 --> 02:01:41,440
that do

3359
02:01:39,360 --> 02:01:42,799
one flavor of multi-path so if people

3360
02:01:41,440 --> 02:01:44,239
want to play with multi-path but don't

3361
02:01:42,800 --> 02:01:46,000
want to implement from scratch they can

3362
02:01:44,239 --> 02:01:48,559
pick one of those right

3363
02:01:46,000 --> 02:01:50,080
um i'm just i just don't see the value

3364
02:01:48,560 --> 02:01:51,760
in having like multiple flavors of

3365
02:01:50,080 --> 02:01:53,199
multiples because the questions which

3366
02:01:51,760 --> 02:01:53,840
are like the design of the singing or

3367
02:01:53,199 --> 02:01:55,678
whatever

3368
02:01:53,840 --> 02:01:57,199
are not depending on the experimentation

3369
02:01:55,679 --> 02:01:59,520
part i think i think they are

3370
02:01:57,199 --> 02:02:01,119
to some degree um and maybe we disagree

3371
02:01:59,520 --> 02:02:04,400
on this but so so

3372
02:02:01,119 --> 02:02:05,679
i i don't i don't see the reason why we

3373
02:02:04,400 --> 02:02:08,559
would need to

3374
02:02:05,679 --> 02:02:09,679
do any spec work now to enable further

3375
02:02:08,560 --> 02:02:12,080
experimentation

3376
02:02:09,679 --> 02:02:14,000
that that really i don't understand so

3377
02:02:12,080 --> 02:02:15,519
maybe that's something that we needed

3378
02:02:14,000 --> 02:02:16,639
picking picking packet number space

3379
02:02:15,520 --> 02:02:18,000
question oh that's really design

3380
02:02:16,639 --> 02:02:19,199
question that depends on a lot of other

3381
02:02:18,000 --> 02:02:22,639
things in the base protocol

3382
02:02:19,199 --> 02:02:22,638
it's not an experimentation question

3383
02:02:23,040 --> 02:02:30,159
i disagree china

3384
02:02:26,080 --> 02:02:32,000
uh yeah i'm with lars on this one i i

3385
02:02:30,159 --> 02:02:33,280
uh just two very quick points because

3386
02:02:32,000 --> 02:02:36,480
your past time anyways

3387
02:02:33,280 --> 02:02:39,199
um first

3388
02:02:36,480 --> 02:02:40,000
i think that this is a 100 a question of

3389
02:02:39,199 --> 02:02:41,919
experimentation

3390
02:02:40,000 --> 02:02:43,760
single in in multiple design packet

3391
02:02:41,920 --> 02:02:45,119
number spaces having built this with

3392
02:02:43,760 --> 02:02:45,520
single packet number space i can say

3393
02:02:45,119 --> 02:02:47,440
that

3394
02:02:45,520 --> 02:02:48,880
it is all about performance if it's not

3395
02:02:47,440 --> 02:02:49,598
about performance then that design

3396
02:02:48,880 --> 02:02:52,800
question

3397
02:02:49,599 --> 02:02:54,800
basically doesn't matter at all um so in

3398
02:02:52,800 --> 02:02:57,280
this particular case i would say that

3399
02:02:54,800 --> 02:02:58,080
people can experiment and if people and

3400
02:02:57,280 --> 02:03:01,360
we can't

3401
02:02:58,080 --> 02:03:03,119
specify and expect i don't think that

3402
02:03:01,360 --> 02:03:04,639
just because we specify people will show

3403
02:03:03,119 --> 02:03:06,559
up and start experimenting

3404
02:03:04,639 --> 02:03:08,080
it has to be the other way if people are

3405
02:03:06,560 --> 02:03:09,920
experimenting then there's a point in

3406
02:03:08,080 --> 02:03:12,719
trying to specify something

3407
02:03:09,920 --> 02:03:14,719
so if if uh we want to encourage

3408
02:03:12,719 --> 02:03:15,360
experimentation then we can encourage

3409
02:03:14,719 --> 02:03:17,440
that by

3410
02:03:15,360 --> 02:03:19,040
allowing what ted said basically allow

3411
02:03:17,440 --> 02:03:21,919
people to present their results

3412
02:03:19,040 --> 02:03:22,719
uh i'll i'll echo what david sinaji said

3413
02:03:21,920 --> 02:03:24,800
on chat

3414
02:03:22,719 --> 02:03:26,400
if it's results and experiences then yes

3415
02:03:24,800 --> 02:03:29,520
if it's a protocol proposal

3416
02:03:26,400 --> 02:03:32,719
then no all right thank you

3417
02:03:29,520 --> 02:03:33,920
i'd cut the line after after janna so um

3418
02:03:32,719 --> 02:03:35,520
we're going to keep it cut since we're

3419
02:03:33,920 --> 02:03:36,239
over time thank you all um this was

3420
02:03:35,520 --> 02:03:38,560
helpful and

3421
02:03:36,239 --> 02:03:40,000
useful i hope um see you on the mailing

3422
02:03:38,560 --> 02:03:43,840
list and on the slack

3423
02:03:40,000 --> 02:03:43,840
bye thank you everybody

3424
02:04:51,520 --> 02:04:53,599
you

