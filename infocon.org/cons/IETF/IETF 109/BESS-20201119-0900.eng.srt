1
00:00:22,960 --> 00:00:31,840
it is different

2
00:00:34,480 --> 00:00:40,519
hey my commander i think stefan's still

3
00:00:37,390 --> 00:00:40,520
[Music]

4
00:00:42,840 --> 00:00:45,840
muted

5
00:03:44,840 --> 00:03:47,840
laughter

6
00:04:05,120 --> 00:04:10,959
matthew i think you have to start a

7
00:04:07,200 --> 00:04:10,958
stephen has some issue with his mic

8
00:04:12,560 --> 00:04:17,600
okay um right well you have to he's he's

9
00:04:16,000 --> 00:04:18,000
displaying us at the moment so stefan if

10
00:04:17,600 --> 00:04:21,120
you can

11
00:04:18,000 --> 00:04:22,639
if you can move to the next slide

12
00:04:21,120 --> 00:04:24,720
when i need to so welcome to the best

13
00:04:22,639 --> 00:04:28,479
working group um

14
00:04:24,720 --> 00:04:30,240
here is the note well um if you just uh

15
00:04:28,479 --> 00:04:32,960
look at that for a second this is

16
00:04:30,240 --> 00:04:36,160
basically says anything that you

17
00:04:32,960 --> 00:04:38,400
say uh here is contribution to the itf

18
00:04:36,160 --> 00:04:38,400
um

19
00:04:40,080 --> 00:04:43,840
next slide

20
00:04:45,120 --> 00:04:49,040
okay so you're in miniteco which is a

21
00:04:48,080 --> 00:04:52,320
great start

22
00:04:49,040 --> 00:04:56,080
um if you would like

23
00:04:52,320 --> 00:04:59,199
to speak please join the queue

24
00:04:56,080 --> 00:05:00,800
and the chairs will manage the queue but

25
00:04:59,199 --> 00:05:03,759
wait for your name to be called and then

26
00:05:00,800 --> 00:05:03,759
i'll meet yourself please

27
00:05:07,039 --> 00:05:14,000
okay so um rfc

28
00:05:10,680 --> 00:05:16,560
7432 bis so this is

29
00:05:14,000 --> 00:05:18,000
an open action um that we've had for

30
00:05:16,560 --> 00:05:20,560
about a year now

31
00:05:18,000 --> 00:05:21,360
um there's a presentation on it on the

32
00:05:20,560 --> 00:05:24,960
agenda

33
00:05:21,360 --> 00:05:27,280
at this ietf chairs have discussed this

34
00:05:24,960 --> 00:05:28,638
and we intend to publish just directly

35
00:05:27,280 --> 00:05:31,280
as a working group document

36
00:05:28,639 --> 00:05:32,080
if the working group has no objection to

37
00:05:31,280 --> 00:05:35,119
that

38
00:05:32,080 --> 00:05:39,039
um seeing as this is on our

39
00:05:35,120 --> 00:05:42,080
uh our work to-do list um

40
00:05:39,039 --> 00:05:43,520
to do this update to an existing rfc

41
00:05:42,080 --> 00:05:45,520
i'll just give a second if anybody has

42
00:05:43,520 --> 00:05:48,400
any any concerns of that please

43
00:05:45,520 --> 00:05:48,400
jump in the queue now

44
00:05:51,440 --> 00:05:57,520
see anyone in the queue so thank you

45
00:05:54,479 --> 00:06:00,880
stefan next slide please

46
00:05:57,520 --> 00:06:02,639
status update so um rfc's

47
00:06:00,880 --> 00:06:04,800
published since the last itf haven't

48
00:06:02,639 --> 00:06:07,919
published any um

49
00:06:04,800 --> 00:06:11,280
we have four documents in the rfc

50
00:06:07,919 --> 00:06:11,919
editor's queue evpn overlay dci vpn

51
00:06:11,280 --> 00:06:15,679
overlay

52
00:06:11,919 --> 00:06:18,880
um epm prefix advertisement uh

53
00:06:15,680 --> 00:06:19,880
an shbgp control plane and the revision

54
00:06:18,880 --> 00:06:22,880
of rsc

55
00:06:19,880 --> 00:06:22,880
5549

56
00:06:23,440 --> 00:06:26,479
there are quite a few drafts currently

57
00:06:25,199 --> 00:06:30,560
with martin or

58
00:06:26,479 --> 00:06:30,560
in iesg review

59
00:06:31,120 --> 00:06:35,039
so the cno flags draft in subnet

60
00:06:33,919 --> 00:06:38,479
forwarding

61
00:06:35,039 --> 00:06:41,280
optimized ir proxy arp

62
00:06:38,479 --> 00:06:42,719
and open discovery um there are one

63
00:06:41,280 --> 00:06:46,840
procedure updates

64
00:06:42,720 --> 00:06:48,319
um the oem requirements framework for

65
00:06:46,840 --> 00:06:52,239
evpn

66
00:06:48,319 --> 00:06:52,240
and then the dc gateway draft as well

67
00:06:53,120 --> 00:06:58,080
next slide please um

68
00:06:56,240 --> 00:07:00,319
a number of documents are currently in

69
00:06:58,080 --> 00:07:02,479
our queue for

70
00:07:00,319 --> 00:07:04,240
being reviewed by the the shepherds so

71
00:07:02,479 --> 00:07:06,080
my commander's reviewing the irb

72
00:07:04,240 --> 00:07:09,520
multicast draft

73
00:07:06,080 --> 00:07:12,800
um awaiting comments um

74
00:07:09,520 --> 00:07:12,799
do you want to say anything about that

75
00:07:14,840 --> 00:07:18,719
mankind

76
00:07:16,880 --> 00:07:20,639
yeah so i have i have finished reading

77
00:07:18,720 --> 00:07:22,800
about uh

78
00:07:20,639 --> 00:07:24,960
most of this document and i'll be

79
00:07:22,800 --> 00:07:26,720
sending comments to authors soon

80
00:07:24,960 --> 00:07:31,198
and i'll come up with the write-up as

81
00:07:26,720 --> 00:07:34,960
well okay um

82
00:07:31,199 --> 00:07:38,000
the uh the unequal low balancing draft

83
00:07:34,960 --> 00:07:41,198
um we need another short working group

84
00:07:38,000 --> 00:07:43,759
call for that um the

85
00:07:41,199 --> 00:07:44,479
the evpn virtual ethernet segment

86
00:07:43,759 --> 00:07:46,639
document

87
00:07:44,479 --> 00:07:48,159
the write-up is done i mean there's some

88
00:07:46,639 --> 00:07:49,440
follow-up going on with between luke and

89
00:07:48,160 --> 00:07:53,039
the authors

90
00:07:49,440 --> 00:07:55,680
um the vpn preference df

91
00:07:53,039 --> 00:07:59,120
stefan is following up on that and the

92
00:07:55,680 --> 00:08:01,520
igmpm ldp proxy

93
00:07:59,120 --> 00:08:03,919
oh stefan sooner yes we can hear you hi

94
00:08:01,520 --> 00:08:03,919
stefan

95
00:08:06,800 --> 00:08:11,120
okay no did you want to say something

96
00:08:11,599 --> 00:08:17,440
okay um the igmpm ldp proxy um

97
00:08:15,919 --> 00:08:19,440
we're expecting a new version of that to

98
00:08:17,440 --> 00:08:21,680
be submitted as soon as the gates are

99
00:08:19,440 --> 00:08:27,520
open

100
00:08:21,680 --> 00:08:30,720
stefan do you want to take over

101
00:08:27,520 --> 00:08:34,478
it's gone again ongoing polls um there

102
00:08:30,720 --> 00:08:38,320
was a um a poll for

103
00:08:34,479 --> 00:08:40,399
evpn lspp um we had some comments from

104
00:08:38,320 --> 00:08:41,360
laura i think it was regarding the iron

105
00:08:40,399 --> 00:08:43,599
section on that

106
00:08:41,360 --> 00:08:45,200
um so this needs to we think this needs

107
00:08:43,599 --> 00:08:49,760
to be updated

108
00:08:45,200 --> 00:08:54,399
um before we can close close the poll

109
00:08:49,760 --> 00:08:57,600
um and check with uh with lara as well

110
00:08:54,399 --> 00:09:00,480
for the the updated section

111
00:08:57,600 --> 00:09:01,440
we also need to need a poll on that to

112
00:09:00,480 --> 00:09:04,160
address the issue

113
00:09:01,440 --> 00:09:06,080
of implementation so i don't think we

114
00:09:04,160 --> 00:09:07,680
had any replies about whether anybody

115
00:09:06,080 --> 00:09:08,959
had actually implemented this so we're

116
00:09:07,680 --> 00:09:10,399
going to need to do an explicit

117
00:09:08,959 --> 00:09:12,079
implementation poll

118
00:09:10,399 --> 00:09:13,920
or an explicit poll to check if the

119
00:09:12,080 --> 00:09:15,360
working group is okay given our policy

120
00:09:13,920 --> 00:09:16,640
for only publishing standards track

121
00:09:15,360 --> 00:09:19,839
documents with

122
00:09:16,640 --> 00:09:23,199
implementation um

123
00:09:19,839 --> 00:09:24,800
at least one implementation um

124
00:09:23,200 --> 00:09:27,760
so we will we will check the working

125
00:09:24,800 --> 00:09:29,439
group is is okay with that

126
00:09:27,760 --> 00:09:30,959
um we have an ongoing working group last

127
00:09:29,440 --> 00:09:34,080
call on the ipvpn

128
00:09:30,959 --> 00:09:34,079
interworking draft

129
00:09:34,640 --> 00:09:38,080
stefan next slide please okay ready for

130
00:09:37,519 --> 00:09:40,240
last call

131
00:09:38,080 --> 00:09:41,279
srv6 services uh so these are in our

132
00:09:40,240 --> 00:09:44,240
queue we'll

133
00:09:41,279 --> 00:09:45,439
we we we will likely start a working

134
00:09:44,240 --> 00:09:49,279
group last call for these

135
00:09:45,440 --> 00:09:52,800
shortly um so it's v6 services the e3n

136
00:09:49,279 --> 00:09:52,800
evpn aggregation label

137
00:09:52,959 --> 00:09:57,680
the irb extended mobility draft which

138
00:09:55,519 --> 00:10:01,279
has a couple of dependencies on other

139
00:09:57,680 --> 00:10:04,959
other documents that might hold it up

140
00:10:01,279 --> 00:10:08,399
next slide our working group documents

141
00:10:04,959 --> 00:10:10,800
so the um df election draft

142
00:10:08,399 --> 00:10:12,240
uh multicast uh deaf election draft um

143
00:10:10,800 --> 00:10:16,240
so we've got a new update

144
00:10:12,240 --> 00:10:17,920
that is likely to be posted um

145
00:10:16,240 --> 00:10:20,320
we expect this to be ready for working

146
00:10:17,920 --> 00:10:23,839
group last call um

147
00:10:20,320 --> 00:10:26,240
for the next ietf um

148
00:10:23,839 --> 00:10:27,279
and this is planned to be presented at

149
00:10:26,240 --> 00:10:29,279
this ietf

150
00:10:27,279 --> 00:10:32,480
um to get more comments on the draft so

151
00:10:29,279 --> 00:10:34,320
you should should see that on the agenda

152
00:10:32,480 --> 00:10:35,519
um the first df recovery draft there's

153
00:10:34,320 --> 00:10:37,680
no update to that

154
00:10:35,519 --> 00:10:40,079
um and we're following up with the

155
00:10:37,680 --> 00:10:40,079
authors

156
00:10:44,839 --> 00:10:49,519
luke

157
00:10:46,399 --> 00:10:51,120
hi uh just for the fast df recovery we

158
00:10:49,519 --> 00:10:54,959
did do an update sometime

159
00:10:51,120 --> 00:10:57,279
last spring and um i actually went and

160
00:10:54,959 --> 00:10:58,959
got some ina code points allocated so

161
00:10:57,279 --> 00:11:00,480
uh maybe i can present that one at the

162
00:10:58,959 --> 00:11:03,119
next idea

163
00:11:00,480 --> 00:11:05,440
or or even at least if there's a lost

164
00:11:03,120 --> 00:11:05,440
column

165
00:11:05,600 --> 00:11:09,839
great okay thank you

166
00:11:11,120 --> 00:11:17,360
next slide stefan

167
00:11:15,360 --> 00:11:20,399
um so we haven't had any updates for

168
00:11:17,360 --> 00:11:20,399
this list of drafts

169
00:11:20,959 --> 00:11:23,599
on the slide

170
00:11:24,560 --> 00:11:27,760
inside and we have some new working

171
00:11:26,240 --> 00:11:29,360
group documents that we've recently

172
00:11:27,760 --> 00:11:32,720
adopted so the

173
00:11:29,360 --> 00:11:35,920
um the vpn martial and split horizon

174
00:11:32,720 --> 00:11:40,320
was adopted in october

175
00:11:35,920 --> 00:11:46,479
the bgps2n usage draft adopted in july

176
00:11:40,320 --> 00:11:49,040
and evpn srp 2mp was adopted in november

177
00:11:46,480 --> 00:11:49,040
next slide

178
00:11:50,560 --> 00:11:54,959
um a couple of other documents that are

179
00:11:53,519 --> 00:11:56,480
probably ready for working group

180
00:11:54,959 --> 00:11:59,920
adoption

181
00:11:56,480 --> 00:12:04,560
um draft preset uh best evpn l2

182
00:11:59,920 --> 00:12:08,240
gateway protocol and draft mohan tvs

183
00:12:04,560 --> 00:12:08,239
weighted hrw

184
00:12:09,200 --> 00:12:15,040
okay so here is the agenda

185
00:12:13,279 --> 00:12:16,800
i just realized we didn't do an agenda

186
00:12:15,040 --> 00:12:21,599
bash um at the start

187
00:12:16,800 --> 00:12:21,599
so any comments on the agenda

188
00:12:22,399 --> 00:12:25,839
while we're waiting for the first light

189
00:12:23,920 --> 00:12:28,399
to come up

190
00:12:25,839 --> 00:12:30,720
so i think the first one up is luke

191
00:12:28,399 --> 00:12:30,720
andre

192
00:12:32,560 --> 00:12:41,839
it will be the gun here

193
00:12:38,000 --> 00:12:45,120
can you hear me yep okay

194
00:12:41,839 --> 00:12:48,240
all right so this draft

195
00:12:45,120 --> 00:12:51,360
um ipv4 nlri over

196
00:12:48,240 --> 00:12:54,399
an ipv6 next top so this disk draft

197
00:12:51,360 --> 00:12:58,000
utilizes the rxc 5549

198
00:12:54,399 --> 00:13:00,800
um ipv6 next stop encoding scheme

199
00:12:58,000 --> 00:13:02,639
um so we have the authors myself manik

200
00:13:00,800 --> 00:13:06,079
mon mishra with cisco

201
00:13:02,639 --> 00:13:09,120
jeff tensura with abstra and we have a

202
00:13:06,079 --> 00:13:12,160
new new member to the draft from

203
00:13:09,120 --> 00:13:15,279
juniper that has recently joined

204
00:13:12,160 --> 00:13:18,240
lilly wang so um

205
00:13:15,279 --> 00:13:19,920
with this draft uh overall we've made

206
00:13:18,240 --> 00:13:23,360
some good progress um

207
00:13:19,920 --> 00:13:25,920
as far as um some internal

208
00:13:23,360 --> 00:13:26,720
in intermediate like interoperability uh

209
00:13:25,920 --> 00:13:30,319
just uh

210
00:13:26,720 --> 00:13:31,839
support of the rfc 5549 next top

211
00:13:30,320 --> 00:13:34,959
encoding

212
00:13:31,839 --> 00:13:38,720
related to ebgp pairing sessions and

213
00:13:34,959 --> 00:13:41,359
really the goal of this draft is to

214
00:13:38,720 --> 00:13:42,000
test the interoperability as well as

215
00:13:41,360 --> 00:13:44,160
first

216
00:13:42,000 --> 00:13:45,519
determine whether it's supported the

217
00:13:44,160 --> 00:13:48,000
feature and functionality that

218
00:13:45,519 --> 00:13:50,240
everything's fully functional um

219
00:13:48,000 --> 00:13:51,279
and you know with with some of the

220
00:13:50,240 --> 00:13:53,600
bigger vendors like

221
00:13:51,279 --> 00:13:55,680
like so so far in in the group of

222
00:13:53,600 --> 00:13:59,279
vendors that we have so far

223
00:13:55,680 --> 00:14:03,519
uh we have cisco uh juniper

224
00:13:59,279 --> 00:14:06,399
we have arista as well as uh

225
00:14:03,519 --> 00:14:07,680
nokia and we're also trying to get away

226
00:14:06,399 --> 00:14:09,279
on board as well so

227
00:14:07,680 --> 00:14:11,439
that would be like really the top five

228
00:14:09,279 --> 00:14:16,079
vendors that we're looking at doing the

229
00:14:11,440 --> 00:14:18,320
interoperability testing of this um next

230
00:14:16,079 --> 00:14:18,319
slide

231
00:14:19,920 --> 00:14:25,839
thanks so um just an overview of this

232
00:14:23,279 --> 00:14:28,560
draft so what what this draft does

233
00:14:25,839 --> 00:14:29,920
is it utilizes the um ipv4 next top

234
00:14:28,560 --> 00:14:33,439
topic

235
00:14:29,920 --> 00:14:36,800
next type encoding ipv4 uh

236
00:14:33,440 --> 00:14:40,880
nlri uh over and over an ipv6

237
00:14:36,800 --> 00:14:43,439
next top here um that's been used um

238
00:14:40,880 --> 00:14:44,800
very similar to what's been around for

239
00:14:43,440 --> 00:14:48,000
you know decades

240
00:14:44,800 --> 00:14:49,359
where you have a v4 edge or v6 edge over

241
00:14:48,000 --> 00:14:53,120
a v4 core

242
00:14:49,360 --> 00:14:57,519
and your pedo are appearing in ibgb puri

243
00:14:53,120 --> 00:15:00,560
is uh where you're encoding your v4

244
00:14:57,519 --> 00:15:03,760
v6 andori over over a v4 next hop

245
00:15:00,560 --> 00:15:05,680
so similarly to that uh with with rfc

246
00:15:03,760 --> 00:15:08,720
5549 we're kind of doing the

247
00:15:05,680 --> 00:15:11,760
doing the reverse we're taking a

248
00:15:08,720 --> 00:15:15,040
v4 edge and we're encoding over

249
00:15:11,760 --> 00:15:17,439
over a v6 next top so with that

250
00:15:15,040 --> 00:15:18,560
uh what this does is it's utilizing that

251
00:15:17,440 --> 00:15:20,160
same peering that we've

252
00:15:18,560 --> 00:15:22,239
that's been done you know for a long

253
00:15:20,160 --> 00:15:25,040
time you know with it with a uh

254
00:15:22,240 --> 00:15:26,639
four edge a six sorry a six edge over

255
00:15:25,040 --> 00:15:27,839
four chord now we're doing a four edge

256
00:15:26,639 --> 00:15:30,160
over a six core

257
00:15:27,839 --> 00:15:30,959
but utilizing that same concept for your

258
00:15:30,160 --> 00:15:33,759
pc

259
00:15:30,959 --> 00:15:36,319
peering so you're edge peering and and

260
00:15:33,759 --> 00:15:39,920
the reason behind that is it really

261
00:15:36,320 --> 00:15:41,440
allows us to eliminate all of our dual

262
00:15:39,920 --> 00:15:42,880
stacking that we have at the edge and

263
00:15:41,440 --> 00:15:44,079
that's that's like the really the

264
00:15:42,880 --> 00:15:46,000
massive gain

265
00:15:44,079 --> 00:15:47,199
with this that we're able to treat the

266
00:15:46,000 --> 00:15:49,360
uh just as we

267
00:15:47,199 --> 00:15:51,758
you know stack sapphies on our p to r

268
00:15:49,360 --> 00:15:55,360
appearing where you where you have um

269
00:15:51,759 --> 00:15:58,079
your your uh vpn v4

270
00:15:55,360 --> 00:16:00,320
vpn v6 and and many other safety's that

271
00:15:58,079 --> 00:16:01,758
are stacked in your p2r appearing

272
00:16:00,320 --> 00:16:03,920
similarly what we're doing is we're

273
00:16:01,759 --> 00:16:05,360
actually using that v6p or that single

274
00:16:03,920 --> 00:16:07,439
pier to transport

275
00:16:05,360 --> 00:16:08,639
so now we're able to transport the v4

276
00:16:07,440 --> 00:16:11,839
enter nlri

277
00:16:08,639 --> 00:16:14,320
over and over the v6 next hop um

278
00:16:11,839 --> 00:16:14,959
thereby eliminating that fury um as far

279
00:16:14,320 --> 00:16:18,000
as this

280
00:16:14,959 --> 00:16:20,399
the savings it goes you really from

281
00:16:18,000 --> 00:16:22,800
an ipv4 address depletion perspective

282
00:16:20,399 --> 00:16:25,440
you really uh that that's really

283
00:16:22,800 --> 00:16:25,920
a really huge major gain and as far as

284
00:16:25,440 --> 00:16:29,040
address

285
00:16:25,920 --> 00:16:31,360
address planning as well for ipv4 um

286
00:16:29,040 --> 00:16:33,199
the other big gain is opex savings in

287
00:16:31,360 --> 00:16:35,120
terms of monitoring appears

288
00:16:33,199 --> 00:16:36,959
from an nms perspective and that kind of

289
00:16:35,120 --> 00:16:38,560
yang perspective that now you have

290
00:16:36,959 --> 00:16:41,119
basically you cut down your peers in

291
00:16:38,560 --> 00:16:44,000
half so you don't have all the

292
00:16:41,120 --> 00:16:45,199
dual stacking and edge peering we're not

293
00:16:44,000 --> 00:16:46,639
now you really are able to

294
00:16:45,199 --> 00:16:48,639
there's really across the board that

295
00:16:46,639 --> 00:16:50,880
just would apply to really anywhere

296
00:16:48,639 --> 00:16:52,560
whether it's a core data center any type

297
00:16:50,880 --> 00:16:55,040
of infrastructure that you have

298
00:16:52,560 --> 00:16:56,719
wherever you have dual stack peering you

299
00:16:55,040 --> 00:16:57,839
can keep the concentration of dual

300
00:16:56,720 --> 00:17:00,560
stacking if word

301
00:16:57,839 --> 00:17:01,920
exists keep it you know consolidated

302
00:17:00,560 --> 00:17:04,240
toward the edge at the customer

303
00:17:01,920 --> 00:17:06,079
edge but on the peering points from the

304
00:17:04,240 --> 00:17:08,559
customer to the core

305
00:17:06,079 --> 00:17:09,918
that that can be purely v6 only so

306
00:17:08,559 --> 00:17:14,240
that's that's really the

307
00:17:09,919 --> 00:17:14,240
big major game next slide

308
00:17:16,640 --> 00:17:19,839
next slide

309
00:17:22,799 --> 00:17:26,079
yeah there you go that's good that's

310
00:17:24,240 --> 00:17:28,640
good right there so this is

311
00:17:26,079 --> 00:17:29,760
current so this is a a depiction of a

312
00:17:28,640 --> 00:17:32,480
typical like ixp

313
00:17:29,760 --> 00:17:33,280
peering nap where where you could have

314
00:17:32,480 --> 00:17:34,960
you know really

315
00:17:33,280 --> 00:17:37,360
you know gain your really tremendous

316
00:17:34,960 --> 00:17:39,120
games where you have let's say a massive

317
00:17:37,360 --> 00:17:40,399
ixp nap where you have thousands of

318
00:17:39,120 --> 00:17:42,239
peering points where you

319
00:17:40,400 --> 00:17:44,720
wear gold stacked and so you have

320
00:17:42,240 --> 00:17:47,120
separate v4 and v6 piers

321
00:17:44,720 --> 00:17:48,640
so here you can see you have you have uh

322
00:17:47,120 --> 00:17:51,280
you have separate peers

323
00:17:48,640 --> 00:17:52,480
um and you're carrying your v4 pure is

324
00:17:51,280 --> 00:17:54,799
carrying your v4

325
00:17:52,480 --> 00:17:55,679
and lri and your v6 pure is carrying

326
00:17:54,799 --> 00:18:01,840
your v6

327
00:17:55,679 --> 00:18:01,840
and lri next slide

328
00:18:02,160 --> 00:18:06,880
so what with this with this encoding

329
00:18:04,480 --> 00:18:09,520
scheme what ends up happening is now

330
00:18:06,880 --> 00:18:11,600
instead of having two separate piers you

331
00:18:09,520 --> 00:18:12,400
have a single pier so it's a single v6

332
00:18:11,600 --> 00:18:14,799
pier

333
00:18:12,400 --> 00:18:16,160
and you can see like at the top in red

334
00:18:14,799 --> 00:18:18,799
the uh next hop

335
00:18:16,160 --> 00:18:21,679
so you're carrying the um nlri let's say

336
00:18:18,799 --> 00:18:24,080
192.1 i want to do that slash 24.

337
00:18:21,679 --> 00:18:25,280
the next top is a v6 next top so you

338
00:18:24,080 --> 00:18:28,480
have that single

339
00:18:25,280 --> 00:18:31,840
v6 pier and it's carrying both

340
00:18:28,480 --> 00:18:34,559
the v4 and lri as well as the v6 and lri

341
00:18:31,840 --> 00:18:36,799
um as far as um operational

342
00:18:34,559 --> 00:18:40,000
considerations when that happens

343
00:18:36,799 --> 00:18:41,120
um they should be should be minimal the

344
00:18:40,000 --> 00:18:42,720
one thing that

345
00:18:41,120 --> 00:18:44,479
you know that does exist you do have

346
00:18:42,720 --> 00:18:47,120
it's a single this is

347
00:18:44,480 --> 00:18:48,160
you have a single physical interface um

348
00:18:47,120 --> 00:18:49,918
so you would have

349
00:18:48,160 --> 00:18:52,400
because it said it's not dual stacked

350
00:18:49,919 --> 00:18:55,120
anymore you would not have two separate

351
00:18:52,400 --> 00:18:57,520
bgp session a b sorry bfd sessions

352
00:18:55,120 --> 00:18:59,120
so you would have a single bfd session

353
00:18:57,520 --> 00:19:02,559
that should not be an issue

354
00:18:59,120 --> 00:19:04,719
i mean as as it is a single physical

355
00:19:02,559 --> 00:19:06,480
you know let's say a fiber so if a fiber

356
00:19:04,720 --> 00:19:08,080
cut happened or a link went down you'd

357
00:19:06,480 --> 00:19:10,320
lose both peers anyways

358
00:19:08,080 --> 00:19:12,159
but it's it's so i think from that's

359
00:19:10,320 --> 00:19:13,360
perspective from the layer one there to

360
00:19:12,160 --> 00:19:15,760
perspective

361
00:19:13,360 --> 00:19:16,639
uh whether you have two peers or one

362
00:19:15,760 --> 00:19:18,320
peers it does

363
00:19:16,640 --> 00:19:20,160
it doesn't really matter from from that

364
00:19:18,320 --> 00:19:22,320
perspective um

365
00:19:20,160 --> 00:19:23,440
from a uh i guess a learning curve or

366
00:19:22,320 --> 00:19:26,240
operations

367
00:19:23,440 --> 00:19:26,640
support perspective what does change is

368
00:19:26,240 --> 00:19:29,600
that

369
00:19:26,640 --> 00:19:31,520
now instead of having two physical peers

370
00:19:29,600 --> 00:19:33,918
now you do have one peer

371
00:19:31,520 --> 00:19:35,120
so with that peer the configuration from

372
00:19:33,919 --> 00:19:37,200
a routing perspective

373
00:19:35,120 --> 00:19:38,959
there's really there's really no change

374
00:19:37,200 --> 00:19:39,840
the policy is applied at the address

375
00:19:38,960 --> 00:19:43,200
family

376
00:19:39,840 --> 00:19:44,159
layer so your your your routing policy

377
00:19:43,200 --> 00:19:46,559
that exists

378
00:19:44,160 --> 00:19:49,039
separately let's say uh on a separate

379
00:19:46,559 --> 00:19:51,280
v4p or v6 pier now

380
00:19:49,039 --> 00:19:53,200
it's on it's on a v6 pier but you still

381
00:19:51,280 --> 00:19:55,120
have your same separate v4 routing

382
00:19:53,200 --> 00:19:58,320
policy

383
00:19:55,120 --> 00:19:58,320
so next slide

384
00:20:00,559 --> 00:20:04,799
so this this depicts uh the typical core

385
00:20:03,760 --> 00:20:06,559
that that exists

386
00:20:04,799 --> 00:20:08,320
you know from you know from you know for

387
00:20:06,559 --> 00:20:11,200
many years i guess and this is like go

388
00:20:08,320 --> 00:20:13,600
showing a v4 edge sorry these a dual

389
00:20:11,200 --> 00:20:16,240
stacked edge going over v4 core

390
00:20:13,600 --> 00:20:18,080
uh peed are appearing so what i was

391
00:20:16,240 --> 00:20:21,440
describing earlier where you have a

392
00:20:18,080 --> 00:20:24,720
uh these you have a v6 edge

393
00:20:21,440 --> 00:20:26,400
so you're doing v6 nlri over a v4 next

394
00:20:24,720 --> 00:20:28,559
top so you're doing a v4 next top

395
00:20:26,400 --> 00:20:29,679
encoding and in this case you're you're

396
00:20:28,559 --> 00:20:32,559
carrying um

397
00:20:29,679 --> 00:20:34,559
you said you're carrying a v6 over v4

398
00:20:32,559 --> 00:20:36,480
nlri orion this is global table routing

399
00:20:34,559 --> 00:20:41,760
you're doing six pe so bgp

400
00:20:36,480 --> 00:20:41,760
uh labeled unicast 6pe next next slide

401
00:20:45,600 --> 00:20:48,719
so in this and this um sorry there you

402
00:20:47,919 --> 00:20:50,080
go so

403
00:20:48,720 --> 00:20:51,919
in this scenario so this is a service

404
00:20:50,080 --> 00:20:55,120
provider core where you're

405
00:20:51,919 --> 00:20:57,120
where you have um you have your dual

406
00:20:55,120 --> 00:20:58,959
stacked at the core at the edge

407
00:20:57,120 --> 00:21:00,158
but now you're you're doing this similar

408
00:20:58,960 --> 00:21:02,480
thing this has existed

409
00:21:00,159 --> 00:21:04,080
you know for decades as well that you're

410
00:21:02,480 --> 00:21:05,679
you're also doing like what i show in

411
00:21:04,080 --> 00:21:08,480
red there that you're doing

412
00:21:05,679 --> 00:21:09,039
uh you have v6 over a b4 next hop so

413
00:21:08,480 --> 00:21:11,679
your p

414
00:21:09,039 --> 00:21:12,640
to r appearing that's a v4 peter so this

415
00:21:11,679 --> 00:21:14,720
has existed for

416
00:21:12,640 --> 00:21:16,240
for years you know and it's it's really

417
00:21:14,720 --> 00:21:18,159
common practice that you have you have a

418
00:21:16,240 --> 00:21:22,320
v4 pier and you're carrying your

419
00:21:18,159 --> 00:21:24,880
your v6 and lri over v4 next hop

420
00:21:22,320 --> 00:21:24,879
next slide

421
00:21:28,400 --> 00:21:32,880
so this this scenario is showing a

422
00:21:30,400 --> 00:21:33,360
global a global table routing scenario

423
00:21:32,880 --> 00:21:34,799
so here

424
00:21:33,360 --> 00:21:37,199
you have you could have in the core it

425
00:21:34,799 --> 00:21:38,960
could be it's a six core so it could be

426
00:21:37,200 --> 00:21:42,000
either ldp v6

427
00:21:38,960 --> 00:21:44,480
srm pls v6 or srv6

428
00:21:42,000 --> 00:21:45,200
and you know so with the software mesh

429
00:21:44,480 --> 00:21:48,320
framework

430
00:21:45,200 --> 00:21:48,720
from that perspective our c-2565 you

431
00:21:48,320 --> 00:21:52,080
have a

432
00:21:48,720 --> 00:21:53,760
you have a um a a four and four edge

433
00:21:52,080 --> 00:21:57,280
over a six core

434
00:21:53,760 --> 00:22:00,559
and here your your p e two rr appearing

435
00:21:57,280 --> 00:22:03,280
you have um you're running like four pe

436
00:22:00,559 --> 00:22:05,280
so you have the ipv4 nlr and lri over an

437
00:22:03,280 --> 00:22:07,520
ipv6 next top

438
00:22:05,280 --> 00:22:08,720
um so you're doing labeled bgp label to

439
00:22:07,520 --> 00:22:11,200
unicast 4p

440
00:22:08,720 --> 00:22:13,440
similar to 6pe but you're carrying your

441
00:22:11,200 --> 00:22:16,559
um you're carrying your v4

442
00:22:13,440 --> 00:22:17,360
late labeled unicast over a v6 next up

443
00:22:16,559 --> 00:22:19,440
here

444
00:22:17,360 --> 00:22:21,600
um and then as you can see on the on in

445
00:22:19,440 --> 00:22:22,640
the pc connection here it's a single

446
00:22:21,600 --> 00:22:25,840
pier

447
00:22:22,640 --> 00:22:28,240
so here you have your uh your your

448
00:22:25,840 --> 00:22:31,039
your uh a fee two slash one is carrying

449
00:22:28,240 --> 00:22:33,679
your green one slash one so your v4

450
00:22:31,039 --> 00:22:35,280
pure um affi is basically stacked on top

451
00:22:33,679 --> 00:22:37,919
of your v6 transport

452
00:22:35,280 --> 00:22:41,840
carrying both uh both address formats

453
00:22:37,919 --> 00:22:41,840
next slide

454
00:22:42,080 --> 00:22:45,199
so this is a service provider core

455
00:22:44,400 --> 00:22:47,440
perspective

456
00:22:45,200 --> 00:22:48,320
where you have the vpn overlay so

457
00:22:47,440 --> 00:22:52,320
similar six

458
00:22:48,320 --> 00:22:53,678
six core so mpls like ldp v6 srv6 or srm

459
00:22:52,320 --> 00:22:57,280
pls v6

460
00:22:53,679 --> 00:22:59,679
and then you have um on on your pdr

461
00:22:57,280 --> 00:23:02,480
appearing you have vpn v4

462
00:22:59,679 --> 00:23:03,039
carried over v6 next top ipv6 next up

463
00:23:02,480 --> 00:23:05,360
when your p

464
00:23:03,039 --> 00:23:06,720
to r appearing and then you hear your p

465
00:23:05,360 --> 00:23:08,799
e c e p airing

466
00:23:06,720 --> 00:23:10,480
and this is where the where the major

467
00:23:08,799 --> 00:23:13,760
gain is that now we can

468
00:23:10,480 --> 00:23:14,559
eliminate all of our v6 or dual stack

469
00:23:13,760 --> 00:23:17,200
peering

470
00:23:14,559 --> 00:23:18,399
save all that v6 their v4 address under

471
00:23:17,200 --> 00:23:20,080
space at the edge

472
00:23:18,400 --> 00:23:21,600
and completely eliminate that and just

473
00:23:20,080 --> 00:23:24,799
make the entire edge

474
00:23:21,600 --> 00:23:26,959
completely e6 only so carrying

475
00:23:24,799 --> 00:23:29,200
both the uh the v4 address family over

476
00:23:26,960 --> 00:23:33,360
the um v6 next stop

477
00:23:29,200 --> 00:23:37,280
go and you have one minute please okay

478
00:23:33,360 --> 00:23:40,000
next slide

479
00:23:37,280 --> 00:23:41,520
so as i mentioned at the very very

480
00:23:40,000 --> 00:23:42,159
beginning we have made some good

481
00:23:41,520 --> 00:23:45,360
progress

482
00:23:42,159 --> 00:23:47,840
um the four vendors so far that we

483
00:23:45,360 --> 00:23:50,559
that have contacted uh been as we have

484
00:23:47,840 --> 00:23:54,000
cis we have monica mitchell with cisco

485
00:23:50,559 --> 00:23:57,279
uh and then uh with juniper we have

486
00:23:54,000 --> 00:23:58,080
um lily wang and then with nokia and

487
00:23:57,279 --> 00:24:00,240
aristo

488
00:23:58,080 --> 00:24:01,918
we're i've contacted them we're working

489
00:24:00,240 --> 00:24:02,880
on getting some getting some contact

490
00:24:01,919 --> 00:24:05,360
information for the

491
00:24:02,880 --> 00:24:07,039
interoperability testing but we have

492
00:24:05,360 --> 00:24:10,158
made some really good headway

493
00:24:07,039 --> 00:24:11,679
so far um the three of the five vendors

494
00:24:10,159 --> 00:24:15,039
in total that we're looking at

495
00:24:11,679 --> 00:24:16,240
um they do support the ebgp pdc pairing

496
00:24:15,039 --> 00:24:17,760
with a single pier

497
00:24:16,240 --> 00:24:19,440
and they do see the you know the major

498
00:24:17,760 --> 00:24:21,840
advantage in doing this

499
00:24:19,440 --> 00:24:23,679
so um i think we're probably getting

500
00:24:21,840 --> 00:24:26,000
close to um

501
00:24:23,679 --> 00:24:27,600
um workgroup adoption i think but i want

502
00:24:26,000 --> 00:24:27,840
to get some feedback i guess from folks

503
00:24:27,600 --> 00:24:30,000
on

504
00:24:27,840 --> 00:24:32,158
on bez uh to see what everyone's

505
00:24:30,000 --> 00:24:34,159
thoughts are on this

506
00:24:32,159 --> 00:24:35,279
so i'd like to open up for anyone has

507
00:24:34,159 --> 00:24:37,919
any questions

508
00:24:35,279 --> 00:24:38,720
or comments or anything related to this

509
00:24:37,919 --> 00:24:42,320
draft

510
00:24:38,720 --> 00:24:44,159
thank you thanks god i i

511
00:24:42,320 --> 00:24:46,000
i don't see anyone in the queue we're

512
00:24:44,159 --> 00:24:48,880
very tight on time all right one i

513
00:24:46,000 --> 00:24:48,880
see go ahead

514
00:24:49,120 --> 00:24:56,000
ac ac lindem cisco can you hear me

515
00:24:52,480 --> 00:24:59,520
yes yes okay uh it'd be good

516
00:24:56,000 --> 00:25:03,679
now that we've got the 55 49 bits to

517
00:24:59,520 --> 00:25:08,158
indicate uh compliance

518
00:25:03,679 --> 00:25:09,919
with that as well in your testing

519
00:25:08,159 --> 00:25:11,600
yes definitely definitely so will as

520
00:25:09,919 --> 00:25:13,600
part of the testing will definitely be

521
00:25:11,600 --> 00:25:14,158
testing that that the updated this you

522
00:25:13,600 --> 00:25:16,719
know

523
00:25:14,159 --> 00:25:17,919
with the next hop encoding yes yep we

524
00:25:16,720 --> 00:25:20,720
will incorporate that

525
00:25:17,919 --> 00:25:20,720
into the testing

526
00:25:21,039 --> 00:25:24,400
okay thank you hd any any comments or

527
00:25:24,080 --> 00:25:26,840
like

528
00:25:24,400 --> 00:25:28,159
you know like with with overall with the

529
00:25:26,840 --> 00:25:31,760
games

530
00:25:28,159 --> 00:25:31,760
or any any comments yes

531
00:25:33,760 --> 00:25:39,039
okay no thanks uh thank you very much

532
00:25:36,799 --> 00:25:40,400
thank you uh if you can uh folks can

533
00:25:39,039 --> 00:25:42,158
review the draft and send some comments

534
00:25:40,400 --> 00:25:47,760
to this that'll be good thank you

535
00:25:42,159 --> 00:25:47,760
thank you okay so next is luke andre

536
00:25:53,200 --> 00:25:58,240
uh yeah hi um so i'll be presenting a

537
00:25:56,640 --> 00:26:01,760
brief overview of the updates

538
00:25:58,240 --> 00:26:04,000
since uh version one

539
00:26:01,760 --> 00:26:05,600
um so the div tool between o1 and o2

540
00:26:04,000 --> 00:26:07,840
shows uh quite a few

541
00:26:05,600 --> 00:26:10,719
uh fixes for consistency and uh just

542
00:26:07,840 --> 00:26:14,320
changes of an editorial nature

543
00:26:10,720 --> 00:26:16,640
changes across references etc um

544
00:26:14,320 --> 00:26:17,520
one of the major updates between o1 and

545
00:26:16,640 --> 00:26:21,440
o2 is

546
00:26:17,520 --> 00:26:24,240
a new section that was added to clarify

547
00:26:21,440 --> 00:26:25,360
the terminology between what a

548
00:26:24,240 --> 00:26:28,880
normalized vid is

549
00:26:25,360 --> 00:26:30,799
and service identifiers so bpws service

550
00:26:28,880 --> 00:26:33,200
identifiers

551
00:26:30,799 --> 00:26:36,240
and and sort of serves to disambiguate

552
00:26:33,200 --> 00:26:36,240
between the two terms

553
00:26:36,840 --> 00:26:39,840
um

554
00:26:40,880 --> 00:26:44,799
after that yeah so there was um this

555
00:26:43,200 --> 00:26:47,039
draft also proposes

556
00:26:44,799 --> 00:26:48,960
uh to extend the evpn layer to attribute

557
00:26:47,039 --> 00:26:52,000
extended community

558
00:26:48,960 --> 00:26:55,600
uh by two new fields the the

559
00:26:52,000 --> 00:26:57,600
version two of this draft addresses um

560
00:26:55,600 --> 00:26:59,360
field alignment issues in the definition

561
00:26:57,600 --> 00:27:01,199
of the extension to that extended

562
00:26:59,360 --> 00:27:04,320
community

563
00:27:01,200 --> 00:27:07,440
and uh also we updated the ina section

564
00:27:04,320 --> 00:27:09,678
to uh to actually

565
00:27:07,440 --> 00:27:12,080
request allocation of the two new uh

566
00:27:09,679 --> 00:27:12,080
fields

567
00:27:12,799 --> 00:27:24,158
on the next slide

568
00:27:21,760 --> 00:27:26,000
so in a second step there's there's also

569
00:27:24,159 --> 00:27:29,840
a clarification that's added

570
00:27:26,000 --> 00:27:33,200
in um in zero two for the two fields the

571
00:27:29,840 --> 00:27:34,639
mode uh bits and the vid normalization

572
00:27:33,200 --> 00:27:36,960
bits

573
00:27:34,640 --> 00:27:39,520
and on how the the two proposed fields

574
00:27:36,960 --> 00:27:41,840
uh operate

575
00:27:39,520 --> 00:27:42,879
um so a new uh a whole new section is

576
00:27:41,840 --> 00:27:45,360
added

577
00:27:42,880 --> 00:27:47,520
with uh so with more precise language

578
00:27:45,360 --> 00:27:50,719
for air conditions and usage of the

579
00:27:47,520 --> 00:27:53,918
the v flag especially so while the

580
00:27:50,720 --> 00:27:54,240
the v flag for uh for vid normalization

581
00:27:53,919 --> 00:27:58,320
is

582
00:27:54,240 --> 00:28:02,000
optional uh if this field is signaled

583
00:27:58,320 --> 00:28:04,080
uh the new section details how

584
00:28:02,000 --> 00:28:06,320
if and when this field is signaled and

585
00:28:04,080 --> 00:28:09,279
the mismatch is detected

586
00:28:06,320 --> 00:28:10,639
uh that represents a serious error error

587
00:28:09,279 --> 00:28:12,720
in the data plane

588
00:28:10,640 --> 00:28:14,840
uh in divide encapsulations on the

589
00:28:12,720 --> 00:28:17,360
sending and receiving key

590
00:28:14,840 --> 00:28:19,120
so uh the section addresses how that

591
00:28:17,360 --> 00:28:21,840
mismatch needs to operate

592
00:28:19,120 --> 00:28:23,918
uh to prevent tunnel instantiation not

593
00:28:21,840 --> 00:28:27,199
just raise an alarm

594
00:28:23,919 --> 00:28:30,480
the um the operational mode so the m uh

595
00:28:27,200 --> 00:28:31,279
flags or fields sorry uh is maintained

596
00:28:30,480 --> 00:28:34,399
as optional

597
00:28:31,279 --> 00:28:37,760
and error notification only uh

598
00:28:34,399 --> 00:28:40,239
rationale for that field uh so other

599
00:28:37,760 --> 00:28:42,000
next steps for this draft uh it's it is

600
00:28:40,240 --> 00:28:42,720
an implemented draft it does show good

601
00:28:42,000 --> 00:28:45,039
adoption

602
00:28:42,720 --> 00:28:47,360
uh so we would like to see some more

603
00:28:45,039 --> 00:28:49,440
review and comments on it

604
00:28:47,360 --> 00:28:52,080
i've received one already on the v02

605
00:28:49,440 --> 00:28:55,120
version so there will be a small update

606
00:28:52,080 --> 00:28:55,520
but eventually this draft is ready to

607
00:28:55,120 --> 00:28:57,760
move

608
00:28:55,520 --> 00:29:00,320
through the working group and his last

609
00:28:57,760 --> 00:29:00,320
call already

610
00:29:01,360 --> 00:29:04,479
and that is the short update

611
00:29:08,159 --> 00:29:13,440
okay thank you let's see anyone in the

612
00:29:12,799 --> 00:29:17,120
queue

613
00:29:13,440 --> 00:29:17,120
uh so next uh thank you so much

614
00:29:18,480 --> 00:29:24,640
so hey guys we'll give a brief update

615
00:29:22,240 --> 00:29:27,840
about the power flow dflx and drop so we

616
00:29:24,640 --> 00:29:27,840
can go to the next slide

617
00:29:30,240 --> 00:29:35,120
so this is just a problem statement

618
00:29:33,200 --> 00:29:38,240
recap because it has been quite long

619
00:29:35,120 --> 00:29:38,879
we spoke about this particular draft so

620
00:29:38,240 --> 00:29:42,320
this

621
00:29:38,880 --> 00:29:45,520
graph defines a new df election

622
00:29:42,320 --> 00:29:45,918
mechanism and why exactly it is needed

623
00:29:45,520 --> 00:29:48,480
so

624
00:29:45,919 --> 00:29:49,120
right now we have a couple of deflection

625
00:29:48,480 --> 00:29:51,360
procedures

626
00:29:49,120 --> 00:29:54,239
one is default df election procedure

627
00:29:51,360 --> 00:29:58,320
which is defined in 7432

628
00:29:54,240 --> 00:29:59,600
which is nothing but evi esi and df

629
00:29:58,320 --> 00:30:04,639
election

630
00:29:59,600 --> 00:30:08,000
and the other df election mechanisms are

631
00:30:04,640 --> 00:30:10,960
when we use hrw algorithm

632
00:30:08,000 --> 00:30:12,559
to distribute df among multiple ps in

633
00:30:10,960 --> 00:30:15,200
the multiple scenario

634
00:30:12,559 --> 00:30:16,000
but we had there are a couple of

635
00:30:15,200 --> 00:30:19,679
customers

636
00:30:16,000 --> 00:30:22,000
who wants to use evpn multi homing and

637
00:30:19,679 --> 00:30:22,880
the whole multicast services on a single

638
00:30:22,000 --> 00:30:25,679
vlan

639
00:30:22,880 --> 00:30:27,279
so if we have such scenario in that case

640
00:30:25,679 --> 00:30:29,760
always there is only one p

641
00:30:27,279 --> 00:30:31,440
who is going to be a dm it means that

642
00:30:29,760 --> 00:30:32,240
the whole multicast traffic is going to

643
00:30:31,440 --> 00:30:35,440
get

644
00:30:32,240 --> 00:30:38,559
carried or get powered by your

645
00:30:35,440 --> 00:30:40,399
one of the pe so it

646
00:30:38,559 --> 00:30:42,158
even though we do say that it is

647
00:30:40,399 --> 00:30:43,439
operating in all active multi moving but

648
00:30:42,159 --> 00:30:46,480
we are not utilizing

649
00:30:43,440 --> 00:30:48,840
the other link at all so that is where

650
00:30:46,480 --> 00:30:50,000
this new mechanism comes and the picture

651
00:30:48,840 --> 00:30:52,720
where

652
00:30:50,000 --> 00:30:53,279
we are going to have proper flow df

653
00:30:52,720 --> 00:30:58,080
election

654
00:30:53,279 --> 00:30:58,080
so stephen we can go to the next slide

655
00:31:01,360 --> 00:31:04,399
so in this scheme what is going to

656
00:31:02,960 --> 00:31:08,799
happen so by default

657
00:31:04,399 --> 00:31:11,120
when we when evpn service is configured

658
00:31:08,799 --> 00:31:12,879
we are going to have a default df

659
00:31:11,120 --> 00:31:15,518
election which will set up

660
00:31:12,880 --> 00:31:16,559
their state that one of them will be the

661
00:31:15,519 --> 00:31:20,240
df and other

662
00:31:16,559 --> 00:31:23,039
guy is non-df for example in this p1

663
00:31:20,240 --> 00:31:23,600
is in the df state and pe 2 is non df

664
00:31:23,039 --> 00:31:26,720
state

665
00:31:23,600 --> 00:31:28,158
so reason why we have a default df

666
00:31:26,720 --> 00:31:30,480
election being done

667
00:31:28,159 --> 00:31:31,279
is for your broadcast and unknown

668
00:31:30,480 --> 00:31:34,159
unicast

669
00:31:31,279 --> 00:31:34,480
traffic and what happens that when we

670
00:31:34,159 --> 00:31:37,120
get

671
00:31:34,480 --> 00:31:37,600
a first join so let's consider the red

672
00:31:37,120 --> 00:31:40,719
join

673
00:31:37,600 --> 00:31:43,519
when which is for sg1

674
00:31:40,720 --> 00:31:45,039
so when join reaches to pe 2 we have

675
00:31:43,519 --> 00:31:47,519
ignp proxy

676
00:31:45,039 --> 00:31:48,879
procedures to synchronize this joint to

677
00:31:47,519 --> 00:31:50,880
p2

678
00:31:48,880 --> 00:31:53,279
and at this point of time for this

679
00:31:50,880 --> 00:31:56,320
particular flow we are going to have

680
00:31:53,279 --> 00:31:59,360
a df election performed

681
00:31:56,320 --> 00:32:01,918
and this df will be providing a state

682
00:31:59,360 --> 00:32:06,080
for this particular flow so in this case

683
00:32:01,919 --> 00:32:09,519
p1 becomes non df and pe 2 becomes df

684
00:32:06,080 --> 00:32:12,399
when the next join comes next join again

685
00:32:09,519 --> 00:32:13,039
will go over exact same df election

686
00:32:12,399 --> 00:32:15,370
procedure

687
00:32:13,039 --> 00:32:17,360
and appropriate df

688
00:32:15,370 --> 00:32:20,158
[Music]

689
00:32:17,360 --> 00:32:21,600
appropriate pe will take over as a df so

690
00:32:20,159 --> 00:32:26,399
in this example

691
00:32:21,600 --> 00:32:28,959
we have sg2 where p1 comes at df and p2

692
00:32:26,399 --> 00:32:29,918
becomes non non-df the procedure which

693
00:32:28,960 --> 00:32:34,240
is being used

694
00:32:29,919 --> 00:32:37,200
is extension of hrw so earlier hrw was

695
00:32:34,240 --> 00:32:39,120
considering input as only evi and esi

696
00:32:37,200 --> 00:32:42,159
and now we are we have extended

697
00:32:39,120 --> 00:32:43,360
it to consider even source and grow and

698
00:32:42,159 --> 00:32:45,679
that gives us

699
00:32:43,360 --> 00:32:46,479
a flexibility where each flow will be

700
00:32:45,679 --> 00:32:50,159
distributed

701
00:32:46,480 --> 00:32:50,159
among multi-home peer

702
00:32:54,840 --> 00:32:58,639
next

703
00:32:56,080 --> 00:33:00,000
slide okay so this draft has been

704
00:32:58,640 --> 00:33:03,279
already implemented and

705
00:33:00,000 --> 00:33:06,640
it is deployed and uh we would like to

706
00:33:03,279 --> 00:33:09,760
get more comment from working group and

707
00:33:06,640 --> 00:33:14,799
we plan to have uh last call before next

708
00:33:09,760 --> 00:33:14,799
ietf there is any question

709
00:33:21,519 --> 00:33:27,279
i think we can go to the next here

710
00:33:24,880 --> 00:33:29,919
so ac aware bundling service interface

711
00:33:27,279 --> 00:33:33,679
it was a new interface

712
00:33:29,919 --> 00:33:36,320
defined for evpn services

713
00:33:33,679 --> 00:33:36,880
and we did present this two years back

714
00:33:36,320 --> 00:33:40,240
in

715
00:33:36,880 --> 00:33:43,120
iitf bangkok and the reason for

716
00:33:40,240 --> 00:33:45,039
presenting it back is we are going to

717
00:33:43,120 --> 00:33:48,080
basically spend time and uh

718
00:33:45,039 --> 00:33:50,240
move forward with this drop in

719
00:33:48,080 --> 00:33:51,600
before next ietf so i just wanted to

720
00:33:50,240 --> 00:33:54,720
kind of go over

721
00:33:51,600 --> 00:33:55,678
it and there have been some comments uh

722
00:33:54,720 --> 00:33:59,360
received from

723
00:33:55,679 --> 00:34:02,559
harvey and luke andre which will be

724
00:33:59,360 --> 00:34:04,799
addressed in the next revision so it is

725
00:34:02,559 --> 00:34:06,879
for this idea it is just we are going

726
00:34:04,799 --> 00:34:08,879
over the same

727
00:34:06,880 --> 00:34:10,480
slide deck to make sure that the whole

728
00:34:08,879 --> 00:34:11,279
working group is aware and if there are

729
00:34:10,480 --> 00:34:15,119
any comments

730
00:34:11,280 --> 00:34:18,159
we can take them so the requirement is

731
00:34:15,119 --> 00:34:20,480
very simple that there are

732
00:34:18,159 --> 00:34:22,320
certain deployments where we want to

733
00:34:20,480 --> 00:34:26,000
have multiple subnets within a

734
00:34:22,320 --> 00:34:28,480
single bridge domain and each

735
00:34:26,000 --> 00:34:29,520
subnet will be distinguished by the vlan

736
00:34:28,480 --> 00:34:32,719
in the bridge domain

737
00:34:29,520 --> 00:34:36,159
so 7432 defines three types of

738
00:34:32,719 --> 00:34:38,480
service interfaces and each

739
00:34:36,159 --> 00:34:39,679
each of those service interfaces are

740
00:34:38,480 --> 00:34:42,960
addressing different

741
00:34:39,679 --> 00:34:46,159
requirement but none of them actually

742
00:34:42,960 --> 00:34:48,240
are going to provide a mechanism where

743
00:34:46,159 --> 00:34:49,760
we can have multiple subnet in single

744
00:34:48,239 --> 00:34:53,759
bridge domain

745
00:34:49,760 --> 00:34:54,320
so in vlan based service interfaces we

746
00:34:53,760 --> 00:34:56,399
have

747
00:34:54,320 --> 00:34:57,599
one to one mapping between bridge domain

748
00:34:56,399 --> 00:35:01,200
and

749
00:34:57,599 --> 00:35:03,520
a subnet our our evas

750
00:35:01,200 --> 00:35:04,480
in the vlan bundle service interfaces we

751
00:35:03,520 --> 00:35:07,680
have each

752
00:35:04,480 --> 00:35:09,040
evpn instance do correspond to multiple

753
00:35:07,680 --> 00:35:10,640
vlans but

754
00:35:09,040 --> 00:35:13,119
the bridge table is going to be single

755
00:35:10,640 --> 00:35:14,240
bridge table and when we do mac address

756
00:35:13,119 --> 00:35:18,480
lookup

757
00:35:14,240 --> 00:35:20,319
we will we might address lookup

758
00:35:18,480 --> 00:35:21,680
mac address is the key for the lookup

759
00:35:20,320 --> 00:35:24,960
and

760
00:35:21,680 --> 00:35:28,960
encapsulate packet will be remain

761
00:35:24,960 --> 00:35:32,000
encapsulated in the originating vlan id

762
00:35:28,960 --> 00:35:32,640
and vlan aware bundle service interface

763
00:35:32,000 --> 00:35:36,160
it does

764
00:35:32,640 --> 00:35:39,359
provide a mechanism where multiple vlans

765
00:35:36,160 --> 00:35:41,040
can be con will be part of multiple

766
00:35:39,359 --> 00:35:45,520
bridge to a multiple bridge

767
00:35:41,040 --> 00:35:49,119
table so basically when we map any

768
00:35:45,520 --> 00:35:49,520
when we look for any mac plus we land or

769
00:35:49,119 --> 00:35:53,280
learn

770
00:35:49,520 --> 00:35:56,800
lookup will be based on mac plus vlan id

771
00:35:53,280 --> 00:35:58,079
and either these service interfaces are

772
00:35:56,800 --> 00:36:01,280
not going to provide

773
00:35:58,079 --> 00:36:05,040
a mechanism where your you have

774
00:36:01,280 --> 00:36:08,400
multiple subnets in same bridge table

775
00:36:05,040 --> 00:36:10,720
and they are pointing to a single irb

776
00:36:08,400 --> 00:36:13,839
or single dish image table here we can

777
00:36:10,720 --> 00:36:13,839
go to the next slide

778
00:36:17,599 --> 00:36:21,440
so in this example we are talking about

779
00:36:19,680 --> 00:36:24,160
a bridge domain which is being

780
00:36:21,440 --> 00:36:25,760
shown by yellow color here and there are

781
00:36:24,160 --> 00:36:28,720
three different subnets

782
00:36:25,760 --> 00:36:30,320
and they're they're part of a single uh

783
00:36:28,720 --> 00:36:34,240
irb

784
00:36:30,320 --> 00:36:36,240
interface so in this case e1 and p2 they

785
00:36:34,240 --> 00:36:40,799
are multi-home

786
00:36:36,240 --> 00:36:43,118
appear and p3 is the remote pair so

787
00:36:40,800 --> 00:36:45,200
right right now what is going to happen

788
00:36:43,119 --> 00:36:48,640
that when p1 originates

789
00:36:45,200 --> 00:36:51,359
a macro p3 needs to create

790
00:36:48,640 --> 00:36:55,839
an entry where the next hop could be

791
00:36:51,359 --> 00:36:55,839
either p1 or e2

792
00:36:56,960 --> 00:37:02,720
we need a way to identify that which

793
00:37:00,079 --> 00:37:03,520
which subnet this mac belongs to so

794
00:37:02,720 --> 00:37:06,959
today

795
00:37:03,520 --> 00:37:08,079
when if we use any of the service

796
00:37:06,960 --> 00:37:11,599
interfaces which is

797
00:37:08,079 --> 00:37:12,960
defined in 7432 it is not going to carry

798
00:37:11,599 --> 00:37:16,160
any information which

799
00:37:12,960 --> 00:37:19,520
can provide information to p2

800
00:37:16,160 --> 00:37:23,440
about which exactly subnet

801
00:37:19,520 --> 00:37:26,880
are vlan this host h1 belongs to

802
00:37:23,440 --> 00:37:30,240
so when packet has to be sent out of

803
00:37:26,880 --> 00:37:33,680
p2 for host h1 well

804
00:37:30,240 --> 00:37:36,959
pu has no clue which vlan should be

805
00:37:33,680 --> 00:37:40,000
put on this particular

806
00:37:36,960 --> 00:37:43,599
data belongs to the mac h1

807
00:37:40,000 --> 00:37:43,599
mega h1 next slide

808
00:37:49,200 --> 00:37:53,200
so ac where bundling service interface

809
00:37:52,160 --> 00:37:57,359
is going to

810
00:37:53,200 --> 00:37:59,040
address this particular requirement and

811
00:37:57,359 --> 00:38:00,799
to address this requirement what is

812
00:37:59,040 --> 00:38:02,079
going to happen that we are going to

813
00:38:00,800 --> 00:38:06,000
carry a circuit id

814
00:38:02,079 --> 00:38:09,200
our attachment circuit id along with the

815
00:38:06,000 --> 00:38:09,920
routes whether it is macro or multicast

816
00:38:09,200 --> 00:38:11,839
routes

817
00:38:09,920 --> 00:38:14,320
and the reason why this is applicable

818
00:38:11,839 --> 00:38:16,078
even for a multicast route because when

819
00:38:14,320 --> 00:38:19,599
we are

820
00:38:16,079 --> 00:38:20,720
we are syncing igmk joins we need to

821
00:38:19,599 --> 00:38:23,680
make sure that

822
00:38:20,720 --> 00:38:24,000
we do carry which ac this join has come

823
00:38:23,680 --> 00:38:27,200
from

824
00:38:24,000 --> 00:38:28,800
so that when you are creating a

825
00:38:27,200 --> 00:38:29,839
following state for multicast in the

826
00:38:28,800 --> 00:38:33,680
smoking

827
00:38:29,839 --> 00:38:36,160
appropriate ac can be picked

828
00:38:33,680 --> 00:38:37,440
and this attachment circuit is going to

829
00:38:36,160 --> 00:38:39,920
be

830
00:38:37,440 --> 00:38:41,200
attachment circuit will be useful only

831
00:38:39,920 --> 00:38:44,640
for the multi-home tier

832
00:38:41,200 --> 00:38:48,319
and it must be ignored by the

833
00:38:44,640 --> 00:38:50,799
non-multi-home pair or any remote side

834
00:38:48,320 --> 00:38:50,800
next slide

835
00:38:58,640 --> 00:39:02,160
so with respect to control plane

836
00:39:00,960 --> 00:39:04,640
operations when

837
00:39:02,160 --> 00:39:06,799
pe learns mac address it it is going to

838
00:39:04,640 --> 00:39:09,680
it must attach a attachment circuit

839
00:39:06,800 --> 00:39:12,320
extended community to the mac route and

840
00:39:09,680 --> 00:39:14,960
when it receives a igp join

841
00:39:12,320 --> 00:39:16,240
it must attach attachment circuit to a

842
00:39:14,960 --> 00:39:18,640
multicast route which is

843
00:39:16,240 --> 00:39:19,680
which is route type seven and eight on

844
00:39:18,640 --> 00:39:22,240
the remote side

845
00:39:19,680 --> 00:39:23,040
handling when this mac route is being

846
00:39:22,240 --> 00:39:25,759
received by

847
00:39:23,040 --> 00:39:26,400
non-multi-homing peer it must process

848
00:39:25,760 --> 00:39:29,839
macro

849
00:39:26,400 --> 00:39:31,200
as it does today defined in 7432 but it

850
00:39:29,839 --> 00:39:33,759
is going to

851
00:39:31,200 --> 00:39:34,960
uh ignore the attachment circuit

852
00:39:33,760 --> 00:39:37,440
extended community

853
00:39:34,960 --> 00:39:38,079
and if it is a multi-home tier then it

854
00:39:37,440 --> 00:39:42,079
must get

855
00:39:38,079 --> 00:39:43,119
which ac which we land this this

856
00:39:42,079 --> 00:39:46,240
particular background

857
00:39:43,119 --> 00:39:47,280
belongs to and even with respect to

858
00:39:46,240 --> 00:39:49,759
multicast

859
00:39:47,280 --> 00:39:51,119
throughout again it is only for the

860
00:39:49,760 --> 00:39:53,440
multiple pf

861
00:39:51,119 --> 00:39:55,599
and anywhere route 7 is supposed to be

862
00:39:53,440 --> 00:39:58,720
processed by multi-home beer itself and

863
00:39:55,599 --> 00:40:02,800
it is going to get appropriate in crs

864
00:39:58,720 --> 00:40:04,959
subnet based on that circuit

865
00:40:02,800 --> 00:40:08,000
manager can you can you wrap up please i

866
00:40:04,960 --> 00:40:08,000
think you're kind of out of time

867
00:40:08,839 --> 00:40:11,839
next

868
00:40:13,760 --> 00:40:17,760
so there is no data plane uh change for

869
00:40:16,560 --> 00:40:19,759
non-multi-home peer

870
00:40:17,760 --> 00:40:25,839
it it is going to be exactly same as

871
00:40:19,760 --> 00:40:25,839
7432 yeah we can go to the next slide

872
00:40:27,040 --> 00:40:31,359
so so right now uh when data is received

873
00:40:29,520 --> 00:40:33,920
it does follow

874
00:40:31,359 --> 00:40:35,640
from the ce point of view it does follow

875
00:40:33,920 --> 00:40:39,359
the same procedure as

876
00:40:35,640 --> 00:40:40,000
7432 so only a new change with this will

877
00:40:39,359 --> 00:40:42,000
be when

878
00:40:40,000 --> 00:40:44,560
you are we are receiving the data and we

879
00:40:42,000 --> 00:40:46,400
are going to forward now the mac address

880
00:40:44,560 --> 00:40:47,680
mac address lookup is going to provide

881
00:40:46,400 --> 00:40:50,000
you the port

882
00:40:47,680 --> 00:40:51,919
plus which vlan it has to go out on so

883
00:40:50,000 --> 00:40:52,800
that appropriate wheel and tag can be

884
00:40:51,920 --> 00:40:54,800
pushed

885
00:40:52,800 --> 00:40:56,880
and multicast packets will be forwarded

886
00:40:54,800 --> 00:40:59,839
based on whatever multicast state

887
00:40:56,880 --> 00:41:02,079
overflow state has been built in next

888
00:40:59,839 --> 00:41:02,078
slide

889
00:41:03,599 --> 00:41:06,640
so there is already implementation with

890
00:41:06,079 --> 00:41:08,800
cisco

891
00:41:06,640 --> 00:41:09,920
and we are working across other vendors

892
00:41:08,800 --> 00:41:13,119
also and

893
00:41:09,920 --> 00:41:13,760
we have from the last presentation we

894
00:41:13,119 --> 00:41:17,040
have added

895
00:41:13,760 --> 00:41:19,359
nokia and juniper as well in this draft

896
00:41:17,040 --> 00:41:21,680
and we will look for any other comments

897
00:41:19,359 --> 00:41:22,480
which working group may potentially have

898
00:41:21,680 --> 00:41:24,240
and

899
00:41:22,480 --> 00:41:27,200
there will be a request for adoption

900
00:41:24,240 --> 00:41:29,598
call before next ietu

901
00:41:27,200 --> 00:41:29,598
that's all

902
00:41:32,160 --> 00:41:39,920
okay there's one one comment from uh

903
00:41:35,920 --> 00:41:42,960
could you uh make a comment please

904
00:41:39,920 --> 00:41:47,119
hello can you hear me yeah yeah

905
00:41:42,960 --> 00:41:49,680
i went from juniper so i have a

906
00:41:47,119 --> 00:41:50,960
two question about the ac bundle aware

907
00:41:49,680 --> 00:41:54,480
service

908
00:41:50,960 --> 00:41:56,160
so one thing is how we deal with a

909
00:41:54,480 --> 00:41:59,800
broadcast traffic

910
00:41:56,160 --> 00:42:03,118
if a ps3 sender broadcast traffic does a

911
00:41:59,800 --> 00:42:06,319
p1p2 which is a multi-home has a

912
00:42:03,119 --> 00:42:09,440
ac bundle interface are they

913
00:42:06,319 --> 00:42:14,160
gonna do the yeah

914
00:42:09,440 --> 00:42:18,079
just uh maybe clarify in the draft

915
00:42:14,160 --> 00:42:21,118
however yes so it's still going to

916
00:42:18,079 --> 00:42:22,240
flood to the only medium based on the

917
00:42:21,119 --> 00:42:27,200
vegan right not

918
00:42:22,240 --> 00:42:29,200
all the ac right okay

919
00:42:27,200 --> 00:42:31,279
is that true i would think that would be

920
00:42:29,200 --> 00:42:34,480
the case it would be good to clarify

921
00:42:31,280 --> 00:42:37,599
in the draft secondary uh

922
00:42:34,480 --> 00:42:40,400
it mentioned on the remote p doesn't

923
00:42:37,599 --> 00:42:41,040
it does not need to pay attention to the

924
00:42:40,400 --> 00:42:44,079
new

925
00:42:41,040 --> 00:42:47,359
extended community but if

926
00:42:44,079 --> 00:42:48,160
you have uh inter-subnet traffic in the

927
00:42:47,359 --> 00:42:51,359
asymmetric

928
00:42:48,160 --> 00:42:52,879
irb case what will be dividend it's

929
00:42:51,359 --> 00:42:56,160
gonna put on

930
00:42:52,880 --> 00:42:59,040
so i think this uh

931
00:42:56,160 --> 00:43:00,240
scheme the new service type introduced

932
00:42:59,040 --> 00:43:03,680
required

933
00:43:00,240 --> 00:43:05,839
you have uh put vdn in the data packet

934
00:43:03,680 --> 00:43:09,040
once you have intercepted routing

935
00:43:05,839 --> 00:43:09,040
asymmetric irb

936
00:43:09,520 --> 00:43:13,839
it seems it does not know which video to

937
00:43:12,240 --> 00:43:18,078
put it on

938
00:43:13,839 --> 00:43:20,240
so please so maybe i'll respond that i

939
00:43:18,079 --> 00:43:23,040
have noted down the question and respond

940
00:43:20,240 --> 00:43:26,720
in the list because we are running out

941
00:43:23,040 --> 00:43:30,880
of time so

942
00:43:26,720 --> 00:43:30,879
sure okay thank you

943
00:43:32,800 --> 00:43:41,839
so next up is ally

944
00:43:45,280 --> 00:43:48,079
alrighty go ahead

945
00:43:48,640 --> 00:43:51,920
hello hello

946
00:43:53,119 --> 00:44:01,680
hello hello yeah we can hear you

947
00:43:56,480 --> 00:44:01,680
okay all right so

948
00:44:02,000 --> 00:44:09,440
this is a short presentation

949
00:44:05,359 --> 00:44:13,000
on the areas uh that we are

950
00:44:09,440 --> 00:44:16,160
uh addressing for uh rfc

951
00:44:13,000 --> 00:44:18,960
7432 uh

952
00:44:16,160 --> 00:44:20,319
the uh area of improvements it's been

953
00:44:18,960 --> 00:44:24,400
this rfc

954
00:44:20,319 --> 00:44:27,359
has been around for almost 10 years

955
00:44:24,400 --> 00:44:27,359
as a result

956
00:44:28,480 --> 00:44:31,839
we've gained a lot of

957
00:44:32,000 --> 00:44:38,480
insight and experience into

958
00:44:35,359 --> 00:44:40,799
what are what are the areas that

959
00:44:38,480 --> 00:44:41,920
needs additional clarification and there

960
00:44:40,800 --> 00:44:46,480
has been

961
00:44:41,920 --> 00:44:46,480
some errata on this draft and

962
00:44:47,920 --> 00:44:53,520
almost all of them

963
00:44:51,760 --> 00:44:56,160
in the form of the clarification and

964
00:44:53,520 --> 00:44:58,079
there have been also some other

965
00:44:56,160 --> 00:44:59,759
comments with respect to the

966
00:44:58,079 --> 00:45:02,560
clarification and

967
00:44:59,760 --> 00:45:04,480
additional uh explanation that we are

968
00:45:02,560 --> 00:45:07,520
trying to incorporate into this

969
00:45:04,480 --> 00:45:10,480
uh draft into this bits an

970
00:45:07,520 --> 00:45:10,480
extra slide please

971
00:45:11,359 --> 00:45:15,200
so the area of uh clarification

972
00:45:14,240 --> 00:45:18,240
improvements

973
00:45:15,200 --> 00:45:22,480
you know uh i've listed the

974
00:45:18,240 --> 00:45:26,000
uh main uh

975
00:45:22,480 --> 00:45:30,480
main areas in here uh uh

976
00:45:26,000 --> 00:45:34,400
first errata that have been logged

977
00:45:30,480 --> 00:45:34,400
for these rfc and

978
00:45:35,040 --> 00:45:38,560
some of these uh some of the errata it

979
00:45:38,240 --> 00:45:41,598
uh

980
00:45:38,560 --> 00:45:43,359
basically revolves around the roth label

981
00:45:41,599 --> 00:45:47,200
field description

982
00:45:43,359 --> 00:45:50,799
across multiple evpn rounds and

983
00:45:47,200 --> 00:45:53,839
to basically clarify that the encoding

984
00:45:50,800 --> 00:45:57,200
is in the high order bit and

985
00:45:53,839 --> 00:46:00,880
some editorial fixes for the

986
00:45:57,200 --> 00:46:03,598
for that errata then another

987
00:46:00,880 --> 00:46:03,599
area that

988
00:46:03,920 --> 00:46:08,960
needed clarification is the relationship

989
00:46:07,680 --> 00:46:12,319
between the

990
00:46:08,960 --> 00:46:16,480
mac vrf bridge table evi

991
00:46:12,319 --> 00:46:20,079
bridge domain vlan and vlan id

992
00:46:16,480 --> 00:46:24,720
what are the relationship among them

993
00:46:20,079 --> 00:46:29,839
so we added a section

994
00:46:24,720 --> 00:46:29,839
along with the pe model diagram to

995
00:46:30,000 --> 00:46:35,680
to take care of this

996
00:46:33,440 --> 00:46:35,680
then

997
00:46:36,960 --> 00:46:43,760
another area

998
00:46:40,839 --> 00:46:47,040
is for the

999
00:46:43,760 --> 00:46:49,200
applicability of the layer to attribute

1000
00:46:47,040 --> 00:46:53,759
extended community

1001
00:46:49,200 --> 00:46:57,439
uh to the uh evpn

1002
00:46:53,760 --> 00:47:02,880
service and

1003
00:46:57,440 --> 00:47:07,119
to explicitly signal the control board

1004
00:47:02,880 --> 00:47:11,599
mtu size primary and backup

1005
00:47:07,119 --> 00:47:14,640
bits for a given ethernet segment

1006
00:47:11,599 --> 00:47:19,040
which we added a section

1007
00:47:14,640 --> 00:47:22,160
to clarify this then

1008
00:47:19,040 --> 00:47:25,200
another section is

1009
00:47:22,160 --> 00:47:28,640
on the uh priority

1010
00:47:25,200 --> 00:47:32,799
handling of evpn robs and

1011
00:47:28,640 --> 00:47:35,279
we have uh uh

1012
00:47:32,800 --> 00:47:38,000
we have three basically we've

1013
00:47:35,280 --> 00:47:39,760
categorized it into the three groups of

1014
00:47:38,000 --> 00:47:43,920
the priority handling which i'll

1015
00:47:39,760 --> 00:47:47,040
explain uh in the uh in

1016
00:47:43,920 --> 00:47:48,960
uh later in these slides and

1017
00:47:47,040 --> 00:47:50,480
also clarification on the best path

1018
00:47:48,960 --> 00:47:54,000
selection when we

1019
00:47:50,480 --> 00:47:56,559
uh advertise a mac ip route with a

1020
00:47:54,000 --> 00:48:00,640
default gateway extended community

1021
00:47:56,559 --> 00:48:03,040
community and

1022
00:48:00,640 --> 00:48:03,040
also

1023
00:48:04,960 --> 00:48:07,839
some

1024
00:48:08,079 --> 00:48:14,319
addition of the hobbies supporting the

1025
00:48:11,280 --> 00:48:18,240
dcb allocated label for the

1026
00:48:14,319 --> 00:48:18,240
esi and how we

1027
00:48:18,480 --> 00:48:22,640
as a result of that how we handle

1028
00:48:20,800 --> 00:48:23,760
multi-point to multi-point tunnel in

1029
00:48:22,640 --> 00:48:27,040
evpn

1030
00:48:23,760 --> 00:48:27,040
uh next slide please

1031
00:48:28,800 --> 00:48:34,079
next way okay so

1032
00:48:32,240 --> 00:48:37,118
uh with respect to the relationship

1033
00:48:34,079 --> 00:48:39,680
between mac verve bridge table

1034
00:48:37,119 --> 00:48:40,960
evpn instance british domain vlan and

1035
00:48:39,680 --> 00:48:44,640
vids you know

1036
00:48:40,960 --> 00:48:48,720
this uh pe model uh should help

1037
00:48:44,640 --> 00:48:52,160
uh it describes that the evpn

1038
00:48:48,720 --> 00:48:56,399
instance gets instantiated

1039
00:48:52,160 --> 00:49:01,200
uh with the corresponding mac verb

1040
00:48:56,400 --> 00:49:05,680
on a pe and the mac verb consists of

1041
00:49:01,200 --> 00:49:09,680
one or more bridge tables and

1042
00:49:05,680 --> 00:49:12,799
depend on the uh

1043
00:49:09,680 --> 00:49:17,839
depending uh on the

1044
00:49:12,800 --> 00:49:17,839
ethernet uh

1045
00:49:18,000 --> 00:49:25,119
ethernet interface mode

1046
00:49:21,680 --> 00:49:27,359
whether it is vlan based vlan bundle or

1047
00:49:25,119 --> 00:49:30,000
vlan aver bundle

1048
00:49:27,359 --> 00:49:32,078
you get either one bridge table or you

1049
00:49:30,000 --> 00:49:36,400
get multiple bridge tables

1050
00:49:32,079 --> 00:49:40,000
then a vlan which is a bridge domain

1051
00:49:36,400 --> 00:49:43,119
uh and expands you know across multiple

1052
00:49:40,000 --> 00:49:46,559
uh pes that for that

1053
00:49:43,119 --> 00:49:50,400
given pe maps to a uh

1054
00:49:46,559 --> 00:49:54,079
one of these uh to a one bridge table

1055
00:49:50,400 --> 00:49:55,119
and uh that vlan can be associated with

1056
00:49:54,079 --> 00:49:58,640
one or multiple

1057
00:49:55,119 --> 00:50:01,839
vehicles uh so

1058
00:49:58,640 --> 00:50:03,040
uh this table this uh figure and

1059
00:50:01,839 --> 00:50:06,480
associated text

1060
00:50:03,040 --> 00:50:07,119
tries to uh capture the relationship

1061
00:50:06,480 --> 00:50:11,200
among them

1062
00:50:07,119 --> 00:50:13,839
and hopefully uh uh you know

1063
00:50:11,200 --> 00:50:16,558
makes the relationship among these clear

1064
00:50:13,839 --> 00:50:16,558
nexus why

1065
00:50:17,760 --> 00:50:26,400
so the next slide is the text that goes

1066
00:50:21,920 --> 00:50:29,839
with that pe model and

1067
00:50:26,400 --> 00:50:32,559
uh uh i'm uh

1068
00:50:29,839 --> 00:50:32,880
i'm not gonna get into the detail of it

1069
00:50:32,559 --> 00:50:35,680
but

1070
00:50:32,880 --> 00:50:37,280
uh it basically talks about if it is a

1071
00:50:35,680 --> 00:50:40,319
vlan based mode

1072
00:50:37,280 --> 00:50:43,440
uh what would be the you know

1073
00:50:40,319 --> 00:50:46,640
the association between the evi

1074
00:50:43,440 --> 00:50:49,920
and vlan uh and the british table and

1075
00:50:46,640 --> 00:50:50,558
uh british domain uh what it should be

1076
00:50:49,920 --> 00:50:53,280
and

1077
00:50:50,559 --> 00:50:54,079
uh for vlan bundle and villeneuve bundle

1078
00:50:53,280 --> 00:50:57,440
and so forth

1079
00:50:54,079 --> 00:50:58,640
so it make sure that with respect to

1080
00:50:57,440 --> 00:51:01,760
these

1081
00:50:58,640 --> 00:51:05,598
different interface modes it is

1082
00:51:01,760 --> 00:51:11,200
uh these association and relationships

1083
00:51:05,599 --> 00:51:11,200
are clear all right next slide

1084
00:51:15,520 --> 00:51:22,480
then we added a section on the

1085
00:51:19,520 --> 00:51:22,880
l2 attribute x in the community which

1086
00:51:22,480 --> 00:51:27,520
this

1087
00:51:22,880 --> 00:51:31,760
attribute is his extended community

1088
00:51:27,520 --> 00:51:35,440
is already defined in our

1089
00:51:31,760 --> 00:51:37,920
evp and vpws rfc and

1090
00:51:35,440 --> 00:51:39,599
it is being used there for uh and it

1091
00:51:37,920 --> 00:51:42,640
explains what the

1092
00:51:39,599 --> 00:51:46,480
uh how the uh primary and

1093
00:51:42,640 --> 00:51:50,558
uh backup bids uh with respect to

1094
00:51:46,480 --> 00:51:55,280
a single home uh

1095
00:51:50,559 --> 00:51:59,280
single uh uh

1096
00:51:55,280 --> 00:52:03,200
uh uh uh

1097
00:51:59,280 --> 00:52:05,520
single active uh multi-homing uh how the

1098
00:52:03,200 --> 00:52:07,279
how these bits works and all that and we

1099
00:52:05,520 --> 00:52:10,400
extended

1100
00:52:07,280 --> 00:52:14,559
that to here uh for the

1101
00:52:10,400 --> 00:52:14,559
evpn service and uh

1102
00:52:14,880 --> 00:52:18,559
we've also described how the

1103
00:52:18,880 --> 00:52:26,640
flow label and control world

1104
00:52:22,559 --> 00:52:30,720
can be signaled along with the mtu so

1105
00:52:26,640 --> 00:52:33,759
we advertise this external community

1106
00:52:30,720 --> 00:52:36,959
with uh along with chura swan is

1107
00:52:33,760 --> 00:52:38,559
imetra and then the other one is ether

1108
00:52:36,960 --> 00:52:41,760
ad perivi route

1109
00:52:38,559 --> 00:52:45,200
and uh in case of the imat route

1110
00:52:41,760 --> 00:52:48,079
uh we advertise

1111
00:52:45,200 --> 00:52:49,040
it with the mtu control board and flow

1112
00:52:48,079 --> 00:52:52,960
label fields

1113
00:52:49,040 --> 00:52:56,079
and for the ether adipo api

1114
00:52:52,960 --> 00:52:59,359
we advertise it with the

1115
00:52:56,079 --> 00:53:03,040
p and p bits so we partition

1116
00:52:59,359 --> 00:53:06,078
basically different uh

1117
00:53:03,040 --> 00:53:09,200
uh bits of this attribute

1118
00:53:06,079 --> 00:53:12,319
uh is convey uh

1119
00:53:09,200 --> 00:53:15,439
with um with

1120
00:53:12,319 --> 00:53:18,160
these two routes

1121
00:53:15,440 --> 00:53:18,160
next slide

1122
00:53:21,520 --> 00:53:30,240
with respect to the control board

1123
00:53:25,520 --> 00:53:33,359
signaling 7432 basically

1124
00:53:30,240 --> 00:53:37,598
doesn't you know it assumes

1125
00:53:33,359 --> 00:53:40,640
that uh control ward uh

1126
00:53:37,599 --> 00:53:41,359
it is there if it is we are doing uh

1127
00:53:40,640 --> 00:53:43,920
deep packet

1128
00:53:41,359 --> 00:53:46,799
inspection and if it is entropy label

1129
00:53:43,920 --> 00:53:49,359
then you don't use control board

1130
00:53:46,800 --> 00:53:49,359
however

1131
00:53:50,000 --> 00:53:53,520
we've extended in here and we say okay

1132
00:53:52,480 --> 00:53:57,440
it can be signaled

1133
00:53:53,520 --> 00:54:00,960
and this table shows that what happens

1134
00:53:57,440 --> 00:54:03,440
if there is a mismatch

1135
00:54:00,960 --> 00:54:04,240
in the signaling of the control board

1136
00:54:03,440 --> 00:54:08,160
and

1137
00:54:04,240 --> 00:54:08,799
what happens when one pe signals it and

1138
00:54:08,160 --> 00:54:12,480
the other

1139
00:54:08,800 --> 00:54:14,720
pe doesn't acknowledge we make sure that

1140
00:54:12,480 --> 00:54:16,440
we keep the backward compatibility with

1141
00:54:14,720 --> 00:54:20,879
respect to the rfc

1142
00:54:16,440 --> 00:54:24,319
7432 so this table is there to

1143
00:54:20,880 --> 00:54:27,680
make sure that is clear

1144
00:54:24,319 --> 00:54:30,880
uh nexus right okay alec you

1145
00:54:27,680 --> 00:54:34,640
uh copy faster places

1146
00:54:30,880 --> 00:54:38,240
sure uh evpn drought priority handling

1147
00:54:34,640 --> 00:54:40,799
uh we divided the evpn drops into three

1148
00:54:38,240 --> 00:54:44,240
groups for the priority handling

1149
00:54:40,799 --> 00:54:47,359
uh the uh first group

1150
00:54:44,240 --> 00:54:50,078
is you know uh of the

1151
00:54:47,359 --> 00:54:50,960
lowest scale with the highly convergence

1152
00:54:50,079 --> 00:54:54,960
affecting

1153
00:54:50,960 --> 00:54:56,240
uh routes and those are first priority

1154
00:54:54,960 --> 00:54:58,240
and then

1155
00:54:56,240 --> 00:55:00,399
we have uh two other routes for the

1156
00:54:58,240 --> 00:55:02,399
second priority uh three rounds on the

1157
00:55:00,400 --> 00:55:03,599
second priority and two other routes for

1158
00:55:02,400 --> 00:55:07,359
the third priority

1159
00:55:03,599 --> 00:55:10,000
so uh this uh this is

1160
00:55:07,359 --> 00:55:11,920
basically we prioritize the handling for

1161
00:55:10,000 --> 00:55:20,079
better conversions

1162
00:55:11,920 --> 00:55:22,880
uh nexus right

1163
00:55:20,079 --> 00:55:23,920
um best path uh selection for default

1164
00:55:22,880 --> 00:55:27,440
gateway is

1165
00:55:23,920 --> 00:55:31,200
another clarification that is uh

1166
00:55:27,440 --> 00:55:33,040
default gate for irb interface you

1167
00:55:31,200 --> 00:55:35,439
advertise the mac and

1168
00:55:33,040 --> 00:55:37,119
mac and ip address for an irb interface

1169
00:55:35,440 --> 00:55:40,720
with the default gateway

1170
00:55:37,119 --> 00:55:44,799
external community and there can be

1171
00:55:40,720 --> 00:55:47,040
you know mishaps and misconfiguration

1172
00:55:44,799 --> 00:55:48,160
where you configure the same thing on a

1173
00:55:47,040 --> 00:55:51,040
host

1174
00:55:48,160 --> 00:55:51,680
and we added the takes that if these

1175
00:55:51,040 --> 00:55:54,880
species

1176
00:55:51,680 --> 00:55:56,640
arises how do we handle it and how do we

1177
00:55:54,880 --> 00:55:59,839
take care of it and

1178
00:55:56,640 --> 00:56:00,839
if there is such uh duplication we need

1179
00:55:59,839 --> 00:56:04,078
to

1180
00:56:00,839 --> 00:56:06,960
basically uh give priority to the

1181
00:56:04,079 --> 00:56:09,440
uh mac and ipa address on an irb

1182
00:56:06,960 --> 00:56:12,559
interface as opposed to a host

1183
00:56:09,440 --> 00:56:15,599
so that section and you have to

1184
00:56:12,559 --> 00:56:17,920
you have to conclude now i think i i'm

1185
00:56:15,599 --> 00:56:20,480
up to the last slide next slide is the

1186
00:56:17,920 --> 00:56:20,480
last one

1187
00:56:20,559 --> 00:56:25,599
uh so uh a few a few other

1188
00:56:23,920 --> 00:56:26,960
additional things we're gonna do it for

1189
00:56:25,599 --> 00:56:30,240
the rev

1190
00:56:26,960 --> 00:56:33,280
zero one and then finally slide let's go

1191
00:56:30,240 --> 00:56:33,279
to the next one

1192
00:56:34,720 --> 00:56:38,959
uh next step we're going to publish this

1193
00:56:37,040 --> 00:56:42,480
after this itf meeting

1194
00:56:38,960 --> 00:56:46,400
we want to uh solicit input and

1195
00:56:42,480 --> 00:56:48,400
basically there is no uh rush for the

1196
00:56:46,400 --> 00:56:50,400
working group last call in here we want

1197
00:56:48,400 --> 00:56:52,240
to make sure that

1198
00:56:50,400 --> 00:56:54,000
all the stuff that we added here are

1199
00:56:52,240 --> 00:56:56,479
fully baked and give

1200
00:56:54,000 --> 00:56:59,599
everybody a lot of chance to read it so

1201
00:56:56,480 --> 00:57:03,839
we expect several itfs

1202
00:56:59,599 --> 00:57:03,839
for doing this that's it

1203
00:57:08,799 --> 00:57:15,759
any questions

1204
00:57:12,720 --> 00:57:19,439
gee thanks thanks

1205
00:57:15,760 --> 00:57:19,440
okay donald's up next please

1206
00:57:20,400 --> 00:57:24,240
and there i'll uh see if i can feel

1207
00:57:22,960 --> 00:57:27,760
under my time

1208
00:57:24,240 --> 00:57:29,759
uh donald east lake with uh future way

1209
00:57:27,760 --> 00:57:31,920
and uh this is an update on the status

1210
00:57:29,760 --> 00:57:36,480
of the uh

1211
00:57:31,920 --> 00:57:36,480
vpn vip draft next slide

1212
00:57:37,920 --> 00:57:43,520
so uh basically provide never go am

1213
00:57:41,520 --> 00:57:45,119
layer as described in the framework

1214
00:57:43,520 --> 00:57:47,680
draft

1215
00:57:45,119 --> 00:57:47,680
next slide

1216
00:57:49,599 --> 00:57:53,280
so this is a diagram out of the

1217
00:57:51,359 --> 00:57:56,720
framework graph so you can see the

1218
00:57:53,280 --> 00:58:00,640
different levels of oam uh service

1219
00:57:56,720 --> 00:58:01,919
network which is between pes

1220
00:58:00,640 --> 00:58:05,440
which is what this draft is mostly

1221
00:58:01,920 --> 00:58:08,000
concerned with and the transport

1222
00:58:05,440 --> 00:58:10,160
and the link away on the various links

1223
00:58:08,000 --> 00:58:14,160
that connect the boxes

1224
00:58:10,160 --> 00:58:15,920
next slide just talking briefly about

1225
00:58:14,160 --> 00:58:17,920
the other layers the link oam quest that

1226
00:58:15,920 --> 00:58:20,240
whatever the link technology is

1227
00:58:17,920 --> 00:58:21,280
for example ethernet a popular link

1228
00:58:20,240 --> 00:58:25,759
technology

1229
00:58:21,280 --> 00:58:27,520
you can use 802.3.57 whose name is

1230
00:58:25,760 --> 00:58:29,599
operations administration maintenance

1231
00:58:27,520 --> 00:58:31,359
oem

1232
00:58:29,599 --> 00:58:32,640
transport depends on transport you can

1233
00:58:31,359 --> 00:58:37,279
use uh

1234
00:58:32,640 --> 00:58:37,279
bfd and our icmp facebook panels

1235
00:58:38,000 --> 00:58:40,559
next slide

1236
00:58:41,280 --> 00:58:44,640
and the service is essentially mostly

1237
00:58:43,839 --> 00:58:48,240
end-to-end

1238
00:58:44,640 --> 00:58:50,879
uh the uh pes uh are i

1239
00:58:48,240 --> 00:58:53,359
need to be aware of it and use the

1240
00:58:50,880 --> 00:58:57,280
connectivity fault management

1241
00:58:53,359 --> 00:58:59,598
which is defined in ieee typically

1242
00:58:57,280 --> 00:59:00,559
so the peas must support the maintenance

1243
00:58:59,599 --> 00:59:03,359
intermediate

1244
00:59:00,559 --> 00:59:04,079
point functions and they should support

1245
00:59:03,359 --> 00:59:06,799
the endpoint

1246
00:59:04,079 --> 00:59:09,119
functions you can do between cds or from

1247
00:59:06,799 --> 00:59:11,680
the ce to pe

1248
00:59:09,119 --> 00:59:11,680
next slide

1249
00:59:12,400 --> 00:59:17,359
as i say this draft of talking about is

1250
00:59:14,640 --> 00:59:20,078
primarily on the network level oam

1251
00:59:17,359 --> 00:59:20,078
the next slide

1252
00:59:21,599 --> 00:59:26,240
so it uses bfd as you can just mode

1253
00:59:23,920 --> 00:59:29,839
proactive fault detection

1254
00:59:26,240 --> 00:59:32,160
um the current draft covers mpls and

1255
00:59:29,839 --> 00:59:34,400
vxlan for unicast

1256
00:59:32,160 --> 00:59:35,520
bomb traffic using multi-point to point

1257
00:59:34,400 --> 00:59:37,040
and pump graphic using

1258
00:59:35,520 --> 00:59:39,040
point-to-multipoint

1259
00:59:37,040 --> 00:59:41,200
so it does not consider packet loss or

1260
00:59:39,040 --> 00:59:44,558
delay measurement and does not curve

1261
00:59:41,200 --> 00:59:47,839
cover multi-point to multi-point

1262
00:59:44,559 --> 00:59:47,839
next slide

1263
00:59:48,480 --> 00:59:51,920
so the bfd discriminators are

1264
00:59:50,079 --> 00:59:53,760
distributed using the bfd discriminator

1265
00:59:51,920 --> 00:59:56,240
attribute which is defined in the

1266
00:59:53,760 --> 00:59:57,680
mvpn fast failover draft and those are

1267
00:59:56,240 --> 00:59:59,680
attributed with the appropriate routes

1268
00:59:57,680 --> 01:00:01,200
depending on which

1269
00:59:59,680 --> 01:00:03,598
type of traffic and so forth you're

1270
01:00:01,200 --> 01:00:06,160
looking at that's a fairly simple

1271
01:00:03,599 --> 01:00:08,240
attribute uh which basically provides

1272
01:00:06,160 --> 01:00:09,359
the vfd discriminator and has some flags

1273
01:00:08,240 --> 01:00:11,279
which are currently

1274
01:00:09,359 --> 01:00:13,200
not no files are currently defined for

1275
01:00:11,280 --> 01:00:15,839
that attribute

1276
01:00:13,200 --> 01:00:15,839
next slide

1277
01:00:18,559 --> 01:00:23,760
so a lot of the text in the current raft

1278
01:00:22,160 --> 01:00:27,118
and the diagrams related to

1279
01:00:23,760 --> 01:00:28,720
specifying encapsulations as used in

1280
01:00:27,119 --> 01:00:32,720
these different cases

1281
01:00:28,720 --> 01:00:34,640
as listed here um

1282
01:00:32,720 --> 01:00:36,319
and it's but there's like some

1283
01:00:34,640 --> 01:00:37,920
additional information may need to be

1284
01:00:36,319 --> 01:00:40,880
provided there

1285
01:00:37,920 --> 01:00:43,280
concerning the kind of granularity you

1286
01:00:40,880 --> 01:00:44,880
want to do the oam at since it's defined

1287
01:00:43,280 --> 01:00:48,079
to be operable at

1288
01:00:44,880 --> 01:00:50,480
different levels of granularity

1289
01:00:48,079 --> 01:00:52,079
next slide and in the framework graph

1290
01:00:50,480 --> 01:00:54,480
the framework graph it talks about the

1291
01:00:52,079 --> 01:00:56,480
regularity so specifically changes from

1292
01:00:54,480 --> 01:00:58,240
the previous version

1293
01:00:56,480 --> 01:01:00,720
has a various initial specification of

1294
01:00:58,240 --> 01:01:03,439
the routes in which you want to use this

1295
01:01:00,720 --> 01:01:05,759
vfd discriminator attribute and how to

1296
01:01:03,440 --> 01:01:07,440
handle withdrawals of those routes as

1297
01:01:05,760 --> 01:01:08,799
you know as far as the bfd sessions go

1298
01:01:07,440 --> 01:01:11,599
and the like

1299
01:01:08,799 --> 01:01:12,240
i added a reference to the draft mursky

1300
01:01:11,599 --> 01:01:16,240
mpls

1301
01:01:12,240 --> 01:01:18,479
p2mp bfd which provides information on

1302
01:01:16,240 --> 01:01:20,879
cases where the using the head

1303
01:01:18,480 --> 01:01:24,079
notification without polling

1304
01:01:20,880 --> 01:01:25,359
mode for the point of multi-point

1305
01:01:24,079 --> 01:01:27,599
there are several different modes for

1306
01:01:25,359 --> 01:01:30,960
point to multi-point uh

1307
01:01:27,599 --> 01:01:34,160
and defined in the multiple tail uh

1308
01:01:30,960 --> 01:01:38,160
documents and uh vfd multiple tail

1309
01:01:34,160 --> 01:01:39,279
and uh we it's current draft yeah that

1310
01:01:38,160 --> 01:01:41,598
i'm talking about

1311
01:01:39,280 --> 01:01:44,160
specifies that you would use uh some

1312
01:01:41,599 --> 01:01:46,559
version which includes head notification

1313
01:01:44,160 --> 01:01:47,680
uh so there's only one mode that doesn't

1314
01:01:46,559 --> 01:01:49,760
in the three other modes that

1315
01:01:47,680 --> 01:01:51,279
do include head notification and this

1316
01:01:49,760 --> 01:01:52,880
draft is now referenced

1317
01:01:51,280 --> 01:01:54,559
provides additional information on one

1318
01:01:52,880 --> 01:01:56,079
of those modes

1319
01:01:54,559 --> 01:01:57,599
there were various ip addresses

1320
01:01:56,079 --> 01:01:59,280
specified for the encapsulation those

1321
01:01:57,599 --> 01:02:01,520
have been adjusted

1322
01:01:59,280 --> 01:02:03,039
based on iesg feedback on other drafts

1323
01:02:01,520 --> 01:02:06,160
in the hopes to avoid

1324
01:02:03,039 --> 01:02:08,240
future iesg problems

1325
01:02:06,160 --> 01:02:10,720
and there are miscellaneous editorial

1326
01:02:08,240 --> 01:02:13,359
improvements

1327
01:02:10,720 --> 01:02:13,359
next slide

1328
01:02:14,079 --> 01:02:19,359
so uh feature edition is possible uh

1329
01:02:17,039 --> 01:02:23,200
information covering

1330
01:02:19,359 --> 01:02:25,759
ppv vpn uh irb

1331
01:02:23,200 --> 01:02:27,118
uh i think it may be useful to have an

1332
01:02:25,760 --> 01:02:28,720
appendix

1333
01:02:27,119 --> 01:02:29,920
that actually shows traceability from

1334
01:02:28,720 --> 01:02:31,200
the requirements that are in the

1335
01:02:29,920 --> 01:02:33,760
framework draft

1336
01:02:31,200 --> 01:02:35,759
to the provisions that are in this draft

1337
01:02:33,760 --> 01:02:38,240
to show that those requirements are

1338
01:02:35,760 --> 01:02:40,160
are covered and one could conceivably

1339
01:02:38,240 --> 01:02:45,759
add some information on other

1340
01:02:40,160 --> 01:02:45,759
encapsulations next slide

1341
01:02:46,799 --> 01:02:53,359
so i'm basically looking for requests uh

1342
01:02:50,799 --> 01:02:54,000
requesting uh comments and suggestions

1343
01:02:53,359 --> 01:02:57,359
and

1344
01:02:54,000 --> 01:03:00,160
i hope to uh progress this uh

1345
01:02:57,359 --> 01:03:02,400
draft uh to a point where it could be uh

1346
01:03:00,160 --> 01:03:05,440
working with last call then not

1347
01:03:02,400 --> 01:03:06,400
too far into the future that's the

1348
01:03:05,440 --> 01:03:11,039
presentation

1349
01:03:06,400 --> 01:03:11,039
uh okay you're

1350
01:03:14,839 --> 01:03:19,920
ready

1351
01:03:16,880 --> 01:03:19,920
so i do not hear you

1352
01:03:24,079 --> 01:03:30,480
there seem to be two people in the queue

1353
01:03:26,240 --> 01:03:32,879
yes he just needs to unreach himself

1354
01:03:30,480 --> 01:03:33,920
okay uh there's jeffrey from juniper one

1355
01:03:32,880 --> 01:03:37,200
need comment

1356
01:03:33,920 --> 01:03:37,520
instead of seeing him maybe just go

1357
01:03:37,200 --> 01:03:42,000
ahead

1358
01:03:37,520 --> 01:03:44,640
yes uh i need comments uh

1359
01:03:42,000 --> 01:03:45,920
juniper from uh jeffrey prince juniper

1360
01:03:44,640 --> 01:03:49,200
so instead of saying

1361
01:03:45,920 --> 01:03:51,039
mp2p um just uh just say ingress

1362
01:03:49,200 --> 01:03:53,439
replication because

1363
01:03:51,039 --> 01:03:55,119
okay you certainly have p2p for ingress

1364
01:03:53,440 --> 01:03:58,000
replication

1365
01:03:55,119 --> 01:03:59,119
uh okay well it uses the phrase ingress

1366
01:03:58,000 --> 01:04:02,160
replication uh

1367
01:03:59,119 --> 01:04:12,640
also in the draft but mp2p is slightly

1368
01:04:02,160 --> 01:04:16,480
shorter for slides maybe i don't know

1369
01:04:12,640 --> 01:04:20,799
okay any other comments okay you hear me

1370
01:04:16,480 --> 01:04:20,799
yes yeah um

1371
01:04:21,280 --> 01:04:29,039
yeah um about the fallback team for

1372
01:04:25,680 --> 01:04:31,680
uh is it the intent to advertise the

1373
01:04:29,039 --> 01:04:33,520
vfd discriminator with every single uh

1374
01:04:31,680 --> 01:04:36,720
mac ip route in the

1375
01:04:33,520 --> 01:04:40,880
broadcast main or only one

1376
01:04:36,720 --> 01:04:42,000
one as i say i believe this draft does

1377
01:04:40,880 --> 01:04:44,559
need some more work

1378
01:04:42,000 --> 01:04:46,240
concerning the granularity of oam

1379
01:04:44,559 --> 01:04:48,799
testing you're going to do

1380
01:04:46,240 --> 01:04:50,240
so this is the network layer which is

1381
01:04:48,799 --> 01:04:53,119
between pes

1382
01:04:50,240 --> 01:04:54,959
and you could just want to i don't think

1383
01:04:53,119 --> 01:04:56,640
you want to test between pes if there's

1384
01:04:54,960 --> 01:04:58,559
no routes between them

1385
01:04:56,640 --> 01:05:00,640
uh but as long as there's one you might

1386
01:04:58,559 --> 01:05:03,119
want to just test one path

1387
01:05:00,640 --> 01:05:04,558
that would be the worst granularity if

1388
01:05:03,119 --> 01:05:05,760
you want to

1389
01:05:04,559 --> 01:05:09,440
i believe according to the framework

1390
01:05:05,760 --> 01:05:11,119
draft you you should be able to test

1391
01:05:09,440 --> 01:05:12,480
several stages of granularity including

1392
01:05:11,119 --> 01:05:15,440
one which is much finer

1393
01:05:12,480 --> 01:05:16,880
but if you're doing more uh fine-grained

1394
01:05:15,440 --> 01:05:18,960
testing then you need

1395
01:05:16,880 --> 01:05:20,640
uh to be able to distinguish the vfds

1396
01:05:18,960 --> 01:05:23,280
for those different sessions that are

1397
01:05:20,640 --> 01:05:24,879
testing those uh different fine-grained

1398
01:05:23,280 --> 01:05:29,200
uh paths

1399
01:05:24,880 --> 01:05:30,799
so if you have any suggestions on um

1400
01:05:29,200 --> 01:05:32,640
improvements for the draft along those

1401
01:05:30,799 --> 01:05:36,400
lines uh

1402
01:05:32,640 --> 01:05:37,279
they'll be welcome yeah i'll send some

1403
01:05:36,400 --> 01:05:40,400
comments uh

1404
01:05:37,280 --> 01:05:41,359
the other request uh is to also include

1405
01:05:40,400 --> 01:05:44,480
um

1406
01:05:41,359 --> 01:05:46,640
ip multicast and the uh you know the

1407
01:05:44,480 --> 01:05:48,480
advertisement of the discriminator also

1408
01:05:46,640 --> 01:05:51,680
with spmc ad routes

1409
01:05:48,480 --> 01:05:54,640
for evpn uh

1410
01:05:51,680 --> 01:05:56,240
okay i think perhaps you post some

1411
01:05:54,640 --> 01:05:57,440
comments like that to the list would be

1412
01:05:56,240 --> 01:06:00,879
ideal so there

1413
01:05:57,440 --> 01:06:04,160
everybody could see them and get on them

1414
01:06:00,880 --> 01:06:08,079
thank you thank you

1415
01:06:04,160 --> 01:06:08,078
thanks uh next stop is linda

1416
01:06:09,760 --> 01:06:14,799
hey okay go ahead

1417
01:06:16,839 --> 01:06:23,119
oh can people hear me okay

1418
01:06:20,000 --> 01:06:26,559
um so um this is um

1419
01:06:23,119 --> 01:06:29,920
um we want to show that how the bgp

1420
01:06:26,559 --> 01:06:33,359
is used to control the sd-wan um

1421
01:06:29,920 --> 01:06:36,079
the the purpose of this draft is to um

1422
01:06:33,359 --> 01:06:37,119
demonstrate to other organizations for

1423
01:06:36,079 --> 01:06:41,839
example

1424
01:06:37,119 --> 01:06:45,920
mef has two sd1 related projects

1425
01:06:41,839 --> 01:06:49,520
and they do have bgp how to use bgp to

1426
01:06:45,920 --> 01:06:52,559
control sd1 um but i think that bgp

1427
01:06:49,520 --> 01:06:54,319
um is better for ietf to have the draft

1428
01:06:52,559 --> 01:06:58,160
showing how we use them

1429
01:06:54,319 --> 01:07:00,400
and so just give them a guideline so the

1430
01:06:58,160 --> 01:07:01,520
the draft itself is pretty simple

1431
01:07:00,400 --> 01:07:05,680
straightforward

1432
01:07:01,520 --> 01:07:06,960
um we have described the services and

1433
01:07:05,680 --> 01:07:10,000
requirements

1434
01:07:06,960 --> 01:07:13,520
and we listed several

1435
01:07:10,000 --> 01:07:16,640
scenarios those scenarios are from

1436
01:07:13,520 --> 01:07:19,839
sd1 project in math and

1437
01:07:16,640 --> 01:07:22,480
then we show how bgp are used

1438
01:07:19,839 --> 01:07:23,839
to for each of those scenarios and then

1439
01:07:22,480 --> 01:07:27,039
we show the

1440
01:07:23,839 --> 01:07:29,759
traffic walkthrough so this was

1441
01:07:27,039 --> 01:07:30,640
adopted in july to the working group

1442
01:07:29,760 --> 01:07:33,200
draft

1443
01:07:30,640 --> 01:07:36,160
we still would like to hear more

1444
01:07:33,200 --> 01:07:39,038
feedbacks and comments

1445
01:07:36,160 --> 01:07:39,038
next slide please

1446
01:07:40,799 --> 01:07:47,038
so the the major changes um

1447
01:07:43,839 --> 01:07:50,240
um basically we reflect the

1448
01:07:47,039 --> 01:07:53,520
um uh the latest um

1449
01:07:50,240 --> 01:07:55,118
change in the tunnel in cap um 20

1450
01:07:53,520 --> 01:07:58,400
version 20

1451
01:07:55,119 --> 01:07:58,880
and we addressed the suggestion from the

1452
01:07:58,400 --> 01:08:03,039
best

1453
01:07:58,880 --> 01:08:06,799
amount list to use recursive lookup

1454
01:08:03,039 --> 01:08:10,880
the recursive lookup is described

1455
01:08:06,799 --> 01:08:13,759
in the section 8 of the tunnel in cap um

1456
01:08:10,880 --> 01:08:15,200
and so here i'll just show some example

1457
01:08:13,760 --> 01:08:18,080
how do we use that

1458
01:08:15,200 --> 01:08:18,080
next slide please

1459
01:08:18,238 --> 01:08:23,759
so this is from the old version the zero

1460
01:08:20,799 --> 01:08:27,198
zero version showing that

1461
01:08:23,759 --> 01:08:29,359
for the pgp update to reflect the

1462
01:08:27,198 --> 01:08:30,399
attributes especially for the ipsec

1463
01:08:29,359 --> 01:08:33,279
attributes

1464
01:08:30,399 --> 01:08:34,158
um you have client routes and you have

1465
01:08:33,279 --> 01:08:37,279
detailed

1466
01:08:34,158 --> 01:08:39,120
attributes that episec related subjects

1467
01:08:37,279 --> 01:08:43,199
which is described in a secure

1468
01:08:39,120 --> 01:08:43,198
evpn next slide please

1469
01:08:43,839 --> 01:08:48,960
so this just to show um if we use a

1470
01:08:46,799 --> 01:08:51,439
recursive lookup

1471
01:08:48,960 --> 01:08:53,600
there will be two updates the first

1472
01:08:51,439 --> 01:08:56,000
update will have the client routes

1473
01:08:53,600 --> 01:08:57,359
and with the next next hop to the

1474
01:08:56,000 --> 01:09:00,238
loopback address

1475
01:08:57,359 --> 01:09:00,960
and we use we tag the client route with

1476
01:09:00,238 --> 01:09:03,599
the

1477
01:09:00,960 --> 01:09:04,880
encapsulation extended community with

1478
01:09:03,600 --> 01:09:07,199
the tunnel type

1479
01:09:04,880 --> 01:09:08,000
which can be episode or can be some

1480
01:09:07,198 --> 01:09:10,960
existing

1481
01:09:08,000 --> 01:09:12,719
tunnel supported and we use the color

1482
01:09:10,960 --> 01:09:15,920
extended community

1483
01:09:12,719 --> 01:09:16,560
and then the second update is to

1484
01:09:15,920 --> 01:09:19,679
describe

1485
01:09:16,560 --> 01:09:20,000
detailed attributes so an advantage of

1486
01:09:19,679 --> 01:09:23,120
this

1487
01:09:20,000 --> 01:09:24,158
kind of recursive lookup is to separate

1488
01:09:23,120 --> 01:09:26,318
the ipsec

1489
01:09:24,158 --> 01:09:27,519
property distribution from the client

1490
01:09:26,319 --> 01:09:30,560
routes because

1491
01:09:27,520 --> 01:09:31,440
ipsec assay attributes have rekind

1492
01:09:30,560 --> 01:09:34,960
process

1493
01:09:31,439 --> 01:09:38,000
which need to be updated periodically

1494
01:09:34,960 --> 01:09:39,920
so when separating them you can reduce

1495
01:09:38,000 --> 01:09:44,000
the package size of the bgp

1496
01:09:39,920 --> 01:09:44,000
update next slide please

1497
01:09:45,198 --> 01:09:51,678
this is also from the previous version

1498
01:09:48,319 --> 01:09:53,279
in the st1 project in math they talk

1499
01:09:51,679 --> 01:09:56,880
about different

1500
01:09:53,279 --> 01:09:59,520
topologies some traffic can go through

1501
01:09:56,880 --> 01:10:00,480
like blue topology some traffic can only

1502
01:09:59,520 --> 01:10:03,920
go through the red

1503
01:10:00,480 --> 01:10:07,120
topology and with this update

1504
01:10:03,920 --> 01:10:09,520
you can reflect that

1505
01:10:07,120 --> 01:10:12,159
route different topologies they call it

1506
01:10:09,520 --> 01:10:16,239
segmentation sd1 segmentations

1507
01:10:12,159 --> 01:10:19,040
next one please

1508
01:10:16,239 --> 01:10:20,480
um this is just another illustration of

1509
01:10:19,040 --> 01:10:23,600
using recursive look

1510
01:10:20,480 --> 01:10:27,599
um recursive lookup so

1511
01:10:23,600 --> 01:10:29,920
for the blue topology we have two

1512
01:10:27,600 --> 01:10:31,600
updates the first update is the client

1513
01:10:29,920 --> 01:10:34,640
routes with the

1514
01:10:31,600 --> 01:10:38,000
extended community specified as a

1515
01:10:34,640 --> 01:10:41,520
tunnel type and then there's a color

1516
01:10:38,000 --> 01:10:44,320
to specify the the attributes

1517
01:10:41,520 --> 01:10:46,159
and then which is associated by the

1518
01:10:44,320 --> 01:10:48,719
second update

1519
01:10:46,159 --> 01:10:51,199
similarly for the red topology we'll

1520
01:10:48,719 --> 01:10:54,640
also have two updates

1521
01:10:51,199 --> 01:10:54,639
next slide please

1522
01:10:55,520 --> 01:11:01,840
so um here is the for the hybrid sd1

1523
01:10:58,960 --> 01:11:02,159
uh meaning that the underlay network can

1524
01:11:01,840 --> 01:11:05,280
be

1525
01:11:02,159 --> 01:11:06,480
mixed of different um um different

1526
01:11:05,280 --> 01:11:08,719
underlay networks

1527
01:11:06,480 --> 01:11:10,239
uh you could have underlay being the

1528
01:11:08,719 --> 01:11:13,679
internet provided by

1529
01:11:10,239 --> 01:11:17,599
different isps and you could have

1530
01:11:13,679 --> 01:11:21,280
underlay being the l3vpn so

1531
01:11:17,600 --> 01:11:24,239
similarly using a recursive loop

1532
01:11:21,280 --> 01:11:24,719
lookup the first update is very simple

1533
01:11:24,239 --> 01:11:28,000
um

1534
01:11:24,719 --> 01:11:31,040
we have the client routes we um actually

1535
01:11:28,000 --> 01:11:34,960
we need a new um tunnel type

1536
01:11:31,040 --> 01:11:37,840
we call it sd1 hybrid and then

1537
01:11:34,960 --> 01:11:40,159
associate with the color and in the

1538
01:11:37,840 --> 01:11:43,360
second update

1539
01:11:40,159 --> 01:11:46,159
um we'll have a very detailed uh

1540
01:11:43,360 --> 01:11:47,199
description attributes for these hybrid

1541
01:11:46,159 --> 01:11:50,320
tunnels

1542
01:11:47,199 --> 01:11:54,320
so very importantly that for the

1543
01:11:50,320 --> 01:11:58,080
like for sd1 for the ipsec for example

1544
01:11:54,320 --> 01:12:02,239
ipsec is i say security association

1545
01:11:58,080 --> 01:12:06,239
is always pairwise that means from cpu1

1546
01:12:02,239 --> 01:12:11,440
to cp2 that same port

1547
01:12:06,239 --> 01:12:14,400
provided by isb2 like 170.0.0.1

1548
01:12:11,440 --> 01:12:15,199
um two different ipsecs are two

1549
01:12:14,400 --> 01:12:18,239
different

1550
01:12:15,199 --> 01:12:20,480
destinations so um because of the

1551
01:12:18,239 --> 01:12:24,879
attributes can be

1552
01:12:20,480 --> 01:12:27,919
a large amount of data some of the ipsec

1553
01:12:24,880 --> 01:12:29,360
security sas associations could be

1554
01:12:27,920 --> 01:12:32,320
pre-configured

1555
01:12:29,360 --> 01:12:34,480
so in this hybrid tunnel we could

1556
01:12:32,320 --> 01:12:37,840
include a pre-configured

1557
01:12:34,480 --> 01:12:39,040
ipsec assay identifiers so you don't

1558
01:12:37,840 --> 01:12:42,080
have to attach

1559
01:12:39,040 --> 01:12:46,400
those attributes and you can also

1560
01:12:42,080 --> 01:12:49,719
include um hybrid underlay tunnels

1561
01:12:46,400 --> 01:12:51,920
for like for example if the client route

1562
01:12:49,719 --> 01:12:54,560
10.1.1x can be

1563
01:12:51,920 --> 01:12:55,920
contributed or can be carried by both

1564
01:12:54,560 --> 01:12:59,280
elsewhere vpn

1565
01:12:55,920 --> 01:13:02,400
and the internet

1566
01:12:59,280 --> 01:13:03,759
and just a side note there's a draft in

1567
01:13:02,400 --> 01:13:06,960
idr

1568
01:13:03,760 --> 01:13:10,320
to describe a more um like optimized

1569
01:13:06,960 --> 01:13:14,000
encoding for sd1 um

1570
01:13:10,320 --> 01:13:16,799
hybrid we call it sd1 nri

1571
01:13:14,000 --> 01:13:19,840
and which will be discussed tomorrow at

1572
01:13:16,800 --> 01:13:19,840
idr session

1573
01:13:20,159 --> 01:13:23,040
next slide please

1574
01:13:24,960 --> 01:13:28,080
you have less than two minutes to

1575
01:13:26,480 --> 01:13:29,519
conclude okay

1576
01:13:28,080 --> 01:13:31,519
now i just skipped this one this was

1577
01:13:29,520 --> 01:13:32,320
discussed last time this is about the

1578
01:13:31,520 --> 01:13:35,760
scoping of

1579
01:13:32,320 --> 01:13:39,599
propagation um okay

1580
01:13:35,760 --> 01:13:41,440
so maybe i'll just stop here um

1581
01:13:39,600 --> 01:13:43,600
next one is like encoding right it's

1582
01:13:41,440 --> 01:13:44,320
like very detailed i hope people can

1583
01:13:43,600 --> 01:13:46,560
read

1584
01:13:44,320 --> 01:13:48,080
the document instead of me talking

1585
01:13:46,560 --> 01:14:01,120
through this

1586
01:13:48,080 --> 01:14:04,640
any questions any suggestions

1587
01:14:01,120 --> 01:14:07,199
no no questions no end here because

1588
01:14:04,640 --> 01:14:08,560
the the follow-up slides are two details

1589
01:14:07,199 --> 01:14:10,159
to be discussed here i don't think i

1590
01:14:08,560 --> 01:14:13,440
have time for that

1591
01:14:10,159 --> 01:14:14,960
okay yeah thank you linda so if and if

1592
01:14:13,440 --> 01:14:18,639
folks can review the draft and post

1593
01:14:14,960 --> 01:14:22,320
comments to the list thank you

1594
01:14:18,640 --> 01:14:22,320
so next is okay

1595
01:14:25,440 --> 01:14:32,960
all right this draft it's about a

1596
01:14:29,440 --> 01:14:36,639
pbb edp and i said based cmac flash

1597
01:14:32,960 --> 01:14:38,719
uh this is the list of my authors

1598
01:14:36,640 --> 01:14:39,920
um this is working group uh draft

1599
01:14:38,719 --> 01:14:43,199
documentary and

1600
01:14:39,920 --> 01:14:46,239
the idea is that it's um you know

1601
01:14:43,199 --> 01:14:49,120
it's ready for uh last call and uh

1602
01:14:46,239 --> 01:14:50,000
we should uh we should make sure that we

1603
01:14:49,120 --> 01:14:53,360
we get there

1604
01:14:50,000 --> 01:14:55,760
the you know the word time

1605
01:14:53,360 --> 01:14:57,360
uh agenda short refreshed some history

1606
01:14:55,760 --> 01:15:00,560
and some conclusions at the end

1607
01:14:57,360 --> 01:15:03,120
uh next slide please so

1608
01:15:00,560 --> 01:15:04,159
what this is about is uh isaac based

1609
01:15:03,120 --> 01:15:07,920
sigma flash for

1610
01:15:04,159 --> 01:15:11,360
pbv evpn um so in pvpn

1611
01:15:07,920 --> 01:15:13,120
uh we still learn a c-max in the uh

1612
01:15:11,360 --> 01:15:14,400
in the data plane right and they are

1613
01:15:13,120 --> 01:15:17,760
subject to

1614
01:15:14,400 --> 01:15:20,480
aging timers so whenever you have uh

1615
01:15:17,760 --> 01:15:21,600
multi-homing uh and you have physical or

1616
01:15:20,480 --> 01:15:24,559
logical failures

1617
01:15:21,600 --> 01:15:25,760
you need to uh to send some cmac flash

1618
01:15:24,560 --> 01:15:28,800
notifications

1619
01:15:25,760 --> 01:15:32,880
so that the remote uh ps can actually

1620
01:15:28,800 --> 01:15:36,640
flash the max and relearn again so

1621
01:15:32,880 --> 01:15:40,239
rfc 7623 the pv vpn defines some

1622
01:15:36,640 --> 01:15:43,199
cmac flash mechanisms but um

1623
01:15:40,239 --> 01:15:44,639
only for a single active multi-home

1624
01:15:43,199 --> 01:15:47,280
ethernet segments

1625
01:15:44,640 --> 01:15:48,880
but not for other use cases like virtual

1626
01:15:47,280 --> 01:15:51,840
ethernet segments

1627
01:15:48,880 --> 01:15:52,400
or uh when you know the multi-homing is

1628
01:15:51,840 --> 01:15:55,600
uh

1629
01:15:52,400 --> 01:15:57,360
managed by the uh the ces like in in the

1630
01:15:55,600 --> 01:16:00,640
case in the dragon where you have a

1631
01:15:57,360 --> 01:16:01,280
g80 32-axis networks or an active

1632
01:16:00,640 --> 01:16:03,920
standby

1633
01:16:01,280 --> 01:16:05,519
to the wires uh you know uh manageable

1634
01:16:03,920 --> 01:16:08,159
from the ce

1635
01:16:05,520 --> 01:16:09,600
so what this draft introduces is a a

1636
01:16:08,159 --> 01:16:13,040
generic ic based

1637
01:16:09,600 --> 01:16:14,560
sigma flash that works with uh

1638
01:16:13,040 --> 01:16:16,719
virtual ethernet segments regular

1639
01:16:14,560 --> 01:16:20,000
ethernet segments and

1640
01:16:16,719 --> 01:16:21,760
it uses what we call bmac ic

1641
01:16:20,000 --> 01:16:24,000
updates with incremental sequence

1642
01:16:21,760 --> 01:16:27,120
numbers this is nothing else but

1643
01:16:24,000 --> 01:16:28,320
um a round type two with a b mac and d

1644
01:16:27,120 --> 01:16:31,679
is it

1645
01:16:28,320 --> 01:16:34,880
uh for which we want to flash the max

1646
01:16:31,679 --> 01:16:37,560
encoded in the ethernet tag id field and

1647
01:16:34,880 --> 01:16:41,199
this is a backwards compatible with rfc

1648
01:16:37,560 --> 01:16:45,199
7623 i should have say

1649
01:16:41,199 --> 01:16:49,519
six seven six two three and not 742

1650
01:16:45,199 --> 01:16:52,879
next slide please

1651
01:16:49,520 --> 01:16:56,400
so uh we started with this draft in

1652
01:16:52,880 --> 01:16:58,480
2016 uh it was developed over the uh

1653
01:16:56,400 --> 01:17:00,480
the next few years we had multiple

1654
01:16:58,480 --> 01:17:02,000
revisions and in the meantime it was

1655
01:17:00,480 --> 01:17:06,159
implemented and deployed

1656
01:17:02,000 --> 01:17:09,360
in large pvp vpn networks

1657
01:17:06,159 --> 01:17:10,879
back in 2019 uh we had a discussion in

1658
01:17:09,360 --> 01:17:13,599
the working group

1659
01:17:10,880 --> 01:17:14,159
because there was an alternate icid

1660
01:17:13,600 --> 01:17:16,480
based

1661
01:17:14,159 --> 01:17:18,480
uh c-mac flash procedure in the virtual

1662
01:17:16,480 --> 01:17:20,480
ethernet segment draft

1663
01:17:18,480 --> 01:17:22,320
but uh the the outcome of the

1664
01:17:20,480 --> 01:17:25,199
discussions um

1665
01:17:22,320 --> 01:17:27,840
was that we would uh standardize the

1666
01:17:25,199 --> 01:17:30,320
cmak flash procedure in this document

1667
01:17:27,840 --> 01:17:32,320
and remove the the procedure in the

1668
01:17:30,320 --> 01:17:35,040
virtual ethernet segment draft

1669
01:17:32,320 --> 01:17:35,679
and as a result of that we adopted this

1670
01:17:35,040 --> 01:17:44,880
document

1671
01:17:35,679 --> 01:17:47,679
in october 2019 next slide please

1672
01:17:44,880 --> 01:17:48,560
so what is new in this revision so some

1673
01:17:47,679 --> 01:17:51,679
terminology

1674
01:17:48,560 --> 01:17:54,239
uh uh added a new section for

1675
01:17:51,679 --> 01:17:55,280
just for terminology uh some type of

1676
01:17:54,239 --> 01:17:57,678
fixing

1677
01:17:55,280 --> 01:17:59,040
and a general review uh with minor

1678
01:17:57,679 --> 01:18:02,320
clarifications uh

1679
01:17:59,040 --> 01:18:05,600
just to make it ready for last call

1680
01:18:02,320 --> 01:18:05,599
next slide please

1681
01:18:06,320 --> 01:18:11,360
so we believe it's ready for working

1682
01:18:09,120 --> 01:18:14,239
group let's call and it should progress

1683
01:18:11,360 --> 01:18:14,239
as soon as possible

1684
01:18:14,800 --> 01:18:19,679
so if you have any comments welcome

1685
01:18:23,120 --> 01:18:27,840
all right if not

1686
01:18:32,239 --> 01:18:37,199
all right so the next one is about uh

1687
01:18:34,719 --> 01:18:38,400
multicast source redundancy in evpn

1688
01:18:37,199 --> 01:18:41,280
networks

1689
01:18:38,400 --> 01:18:42,080
so this is the uh i think it's the uh

1690
01:18:41,280 --> 01:18:44,960
second

1691
01:18:42,080 --> 01:18:46,640
or third time that we present this draft

1692
01:18:44,960 --> 01:18:50,719
uh this is the list of uh

1693
01:18:46,640 --> 01:18:50,719
mike authors uh next slide

1694
01:18:53,280 --> 01:18:56,559
so we'll we'll do a very short refresh

1695
01:18:55,840 --> 01:18:58,640
since we

1696
01:18:56,560 --> 01:19:00,400
presented this drop already in the past

1697
01:18:58,640 --> 01:19:02,080
uh uh i'll

1698
01:19:00,400 --> 01:19:03,519
focus on what we are adding in

1699
01:19:02,080 --> 01:19:06,480
revision02 and

1700
01:19:03,520 --> 01:19:09,199
we'll end up with some conclusions next

1701
01:19:06,480 --> 01:19:11,120
slide please

1702
01:19:09,199 --> 01:19:13,120
so the role of this document is to

1703
01:19:11,120 --> 01:19:16,719
define a solution for

1704
01:19:13,120 --> 01:19:19,679
multicast redundancy in evpn networks uh

1705
01:19:16,719 --> 01:19:20,320
and avoid any uh packet duplication that

1706
01:19:19,679 --> 01:19:23,840
may happen

1707
01:19:20,320 --> 01:19:23,840
as a result of that redundancy

1708
01:19:24,239 --> 01:19:28,718
so it addresses the redundancy for

1709
01:19:26,960 --> 01:19:31,520
multi-home sources

1710
01:19:28,719 --> 01:19:32,159
redundant single home sources and also

1711
01:19:31,520 --> 01:19:36,080
redundant

1712
01:19:32,159 --> 01:19:38,000
multi-home sources and it works for uh

1713
01:19:36,080 --> 01:19:40,480
sources within the same broadcast domain

1714
01:19:38,000 --> 01:19:43,199
or a different broadcast domain

1715
01:19:40,480 --> 01:19:43,678
or a mix of both so we want to to cover

1716
01:19:43,199 --> 01:19:46,719
all the

1717
01:19:43,679 --> 01:19:48,960
all the potential cases

1718
01:19:46,719 --> 01:19:51,040
and uh so the packet duplication may

1719
01:19:48,960 --> 01:19:51,600
happen because the assumption here is

1720
01:19:51,040 --> 01:19:55,920
that

1721
01:19:51,600 --> 01:19:58,159
redundant sources are sourcing traffic

1722
01:19:55,920 --> 01:19:59,040
for the same flow for the same multicast

1723
01:19:58,159 --> 01:20:01,440
flow

1724
01:19:59,040 --> 01:20:02,880
and we define here a new concept which

1725
01:20:01,440 --> 01:20:06,719
is the single flow

1726
01:20:02,880 --> 01:20:07,199
group and this refers to a multicast

1727
01:20:06,719 --> 01:20:09,199
group

1728
01:20:07,199 --> 01:20:10,480
which represents traffic that contains

1729
01:20:09,199 --> 01:20:12,480
only a single flow

1730
01:20:10,480 --> 01:20:14,159
right and the multiple multiple sources

1731
01:20:12,480 --> 01:20:17,519
may be transmitting the same

1732
01:20:14,159 --> 01:20:19,679
sft and as a result when when you have

1733
01:20:17,520 --> 01:20:21,679
like in this diagram you have a receiver

1734
01:20:19,679 --> 01:20:25,040
21 that is requesting

1735
01:20:21,679 --> 01:20:28,159
to join uh you know star comma g1

1736
01:20:25,040 --> 01:20:31,199
group we don't want to have duplicate uh

1737
01:20:28,159 --> 01:20:34,719
packets on on this receiver so

1738
01:20:31,199 --> 01:20:37,040
we need a way to avoid that next slide

1739
01:20:34,719 --> 01:20:37,040
please

1740
01:20:38,400 --> 01:20:44,559
so the draft defines uh two

1741
01:20:41,679 --> 01:20:45,280
redundant solutions uh the warm standby

1742
01:20:44,560 --> 01:20:48,400
solution

1743
01:20:45,280 --> 01:20:52,159
ws or the hot standby solution

1744
01:20:48,400 --> 01:20:52,879
hs so the first one uh is interesting

1745
01:20:52,159 --> 01:20:55,519
because

1746
01:20:52,880 --> 01:20:55,920
uh it only requires the uh the um that

1747
01:20:55,520 --> 01:20:58,639
you

1748
01:20:55,920 --> 01:20:59,440
upgrade the upstream keys that are

1749
01:20:58,639 --> 01:21:01,920
connected to the

1750
01:20:59,440 --> 01:21:03,919
redundant sources but not the rest is

1751
01:21:01,920 --> 01:21:06,159
completely transparent to the downstream

1752
01:21:03,920 --> 01:21:09,040
keys

1753
01:21:06,159 --> 01:21:09,839
uh what this requires is is pretty much

1754
01:21:09,040 --> 01:21:11,360
the uh

1755
01:21:09,840 --> 01:21:13,920
upgrade and configuration of the

1756
01:21:11,360 --> 01:21:16,880
upstream keys so in this example uh

1757
01:21:13,920 --> 01:21:18,960
that would be p1 and p2 you need to to

1758
01:21:16,880 --> 01:21:22,800
configure uh the um

1759
01:21:18,960 --> 01:21:25,280
you know what the sfg is

1760
01:21:22,800 --> 01:21:27,520
and uh and where those uh you know

1761
01:21:25,280 --> 01:21:30,800
redundant sources for the sfg

1762
01:21:27,520 --> 01:21:32,800
accessed then once you do that

1763
01:21:30,800 --> 01:21:34,800
we signal the location of the the

1764
01:21:32,800 --> 01:21:40,080
sources the redundant sources

1765
01:21:34,800 --> 01:21:42,560
we use spmc80 routes any vpn for that

1766
01:21:40,080 --> 01:21:43,440
and we include the eflection extended

1767
01:21:42,560 --> 01:21:46,639
community

1768
01:21:43,440 --> 01:21:49,678
and the special flag in the multicast uh

1769
01:21:46,639 --> 01:21:51,760
flags so with

1770
01:21:49,679 --> 01:21:53,040
with this deflection excellent community

1771
01:21:51,760 --> 01:21:56,639
uh we

1772
01:21:53,040 --> 01:21:59,360
we run a what we call an sf election

1773
01:21:56,639 --> 01:22:00,880
or a single forwarded election between

1774
01:21:59,360 --> 01:22:03,920
the uh the upstream pes

1775
01:22:00,880 --> 01:22:04,719
connected to the same sources and uh so

1776
01:22:03,920 --> 01:22:07,679
between them

1777
01:22:04,719 --> 01:22:09,280
they will select uh only one single

1778
01:22:07,679 --> 01:22:11,679
forwarder

1779
01:22:09,280 --> 01:22:12,639
so with that as a result of this

1780
01:22:11,679 --> 01:22:15,760
election the

1781
01:22:12,639 --> 01:22:20,080
upstream piece they will uh program some

1782
01:22:15,760 --> 01:22:22,639
rpf checks right for the um the sfg

1783
01:22:20,080 --> 01:22:24,400
so that the non-sf keys they will

1784
01:22:22,639 --> 01:22:27,840
discard any receipt

1785
01:22:24,400 --> 01:22:31,360
packets on on the local ac for the sfg

1786
01:22:27,840 --> 01:22:32,320
and the sf uh pes will accept those but

1787
01:22:31,360 --> 01:22:35,679
only from

1788
01:22:32,320 --> 01:22:38,799
one local ac so

1789
01:22:35,679 --> 01:22:41,920
after that basically um we receive

1790
01:22:38,800 --> 01:22:44,560
you know the sfg flow on the

1791
01:22:41,920 --> 01:22:46,639
single forwarder pe and i will forward

1792
01:22:44,560 --> 01:22:47,679
that and the receivers will get a single

1793
01:22:46,639 --> 01:22:53,840
copy of the

1794
01:22:47,679 --> 01:22:53,840
sfg so next slide please

1795
01:22:54,560 --> 01:22:58,800
there was a need also for uh another

1796
01:22:57,280 --> 01:23:02,239
solution that is hot

1797
01:22:58,800 --> 01:23:03,920
standby and um the reason why we needed

1798
01:23:02,239 --> 01:23:05,759
this is

1799
01:23:03,920 --> 01:23:07,040
because we want to have a faster

1800
01:23:05,760 --> 01:23:09,280
convergence

1801
01:23:07,040 --> 01:23:10,639
the drawback of this solution though is

1802
01:23:09,280 --> 01:23:13,360
it requires all the

1803
01:23:10,639 --> 01:23:15,280
the ps to be upgraded so not only the

1804
01:23:13,360 --> 01:23:17,120
the upstream ps but also the downstream

1805
01:23:15,280 --> 01:23:20,080
pes

1806
01:23:17,120 --> 01:23:21,280
but um other than that uh basically the

1807
01:23:20,080 --> 01:23:23,519
procedure is uh

1808
01:23:21,280 --> 01:23:25,120
it's described here so we need to

1809
01:23:23,520 --> 01:23:28,320
configure the sfg

1810
01:23:25,120 --> 01:23:29,760
and uh and the bds uh the you know the

1811
01:23:28,320 --> 01:23:30,320
redundant sources are going to be

1812
01:23:29,760 --> 01:23:33,600
attached

1813
01:23:30,320 --> 01:23:36,239
to we we introduced some uh

1814
01:23:33,600 --> 01:23:38,960
control plane extensions so because on

1815
01:23:36,239 --> 01:23:41,839
the downstream piece we need to detect

1816
01:23:38,960 --> 01:23:42,080
uh or um determine uh whether an you

1817
01:23:41,840 --> 01:23:44,400
know

1818
01:23:42,080 --> 01:23:46,000
a multicast flow is coming from a given

1819
01:23:44,400 --> 01:23:49,120
source or another

1820
01:23:46,000 --> 01:23:52,159
we are we are including esi labels to

1821
01:23:49,120 --> 01:23:53,440
to make that uh this tension so those

1822
01:23:52,159 --> 01:23:57,360
csi labels are

1823
01:23:53,440 --> 01:24:01,599
um signaled in spmcad routes

1824
01:23:57,360 --> 01:24:05,440
and uh and the other extension is that

1825
01:24:01,600 --> 01:24:09,440
the a es esi routes they must be uh

1826
01:24:05,440 --> 01:24:12,719
domain wide block

1827
01:24:09,440 --> 01:24:16,000
labels because we need to make sure that

1828
01:24:12,719 --> 01:24:18,400
the same esi label is used

1829
01:24:16,000 --> 01:24:20,080
from the the two piece here for the same

1830
01:24:18,400 --> 01:24:22,320
source right

1831
01:24:20,080 --> 01:24:24,080
and uh and those esa labels are

1832
01:24:22,320 --> 01:24:27,040
different on a per

1833
01:24:24,080 --> 01:24:28,559
redundant source basis as well so that's

1834
01:24:27,040 --> 01:24:31,840
that's why they must be

1835
01:24:28,560 --> 01:24:34,400
pcb allocated labels

1836
01:24:31,840 --> 01:24:36,880
so uh based on that we advertise those

1837
01:24:34,400 --> 01:24:39,280
labels also on the aed per es routes

1838
01:24:36,880 --> 01:24:40,639
and we program rpf checks on the

1839
01:24:39,280 --> 01:24:43,759
downstream keys

1840
01:24:40,639 --> 01:24:45,760
so that we up on receiving uh you know

1841
01:24:43,760 --> 01:24:48,400
the duplicate uh

1842
01:24:45,760 --> 01:24:49,199
flows from the two sources the tunnels

1843
01:24:48,400 --> 01:24:51,920
three keys

1844
01:24:49,199 --> 01:24:53,120
they they actually discard the packets

1845
01:24:51,920 --> 01:24:55,520
coming from one source

1846
01:24:53,120 --> 01:24:58,159
and they forward only the ones for the

1847
01:24:55,520 --> 01:25:01,120
primary source

1848
01:24:58,159 --> 01:25:02,879
for fall detection and the change in the

1849
01:25:01,120 --> 01:25:05,599
programming of the rpf check

1850
01:25:02,880 --> 01:25:06,560
uh we rely on the uh advertisement and

1851
01:25:05,600 --> 01:25:09,679
withdrawal the

1852
01:25:06,560 --> 01:25:10,400
of the 80 routes but uh bfd is possible

1853
01:25:09,679 --> 01:25:13,840
too

1854
01:25:10,400 --> 01:25:13,839
so next slide please

1855
01:25:15,440 --> 01:25:22,000
so what did we do in revision02

1856
01:25:18,639 --> 01:25:22,800
some general uh cleanup uh with a type

1857
01:25:22,000 --> 01:25:24,840
of fixing

1858
01:25:22,800 --> 01:25:26,159
uh we also improved the terminology

1859
01:25:24,840 --> 01:25:29,520
section

1860
01:25:26,159 --> 01:25:30,559
we added an optional use of bfd with the

1861
01:25:29,520 --> 01:25:33,440
reference to the

1862
01:25:30,560 --> 01:25:34,800
evp and bfd draft that was presented

1863
01:25:33,440 --> 01:25:38,159
earlier

1864
01:25:34,800 --> 01:25:39,600
so uh that's why i request it to the

1865
01:25:38,159 --> 01:25:41,679
authors or i will

1866
01:25:39,600 --> 01:25:42,719
actually formally request to the authors

1867
01:25:41,679 --> 01:25:45,199
of the vst

1868
01:25:42,719 --> 01:25:45,760
draft to to include the uh the signaling

1869
01:25:45,199 --> 01:25:48,559
of the

1870
01:25:45,760 --> 01:25:50,320
vfd discriminator along with the spmc

1871
01:25:48,560 --> 01:25:53,679
aed

1872
01:25:50,320 --> 01:25:55,759
routes which is needed in this draft

1873
01:25:53,679 --> 01:25:56,880
and we also added some security

1874
01:25:55,760 --> 01:26:02,159
considerations

1875
01:25:56,880 --> 01:26:02,159
to the document next slide please

1876
01:26:04,080 --> 01:26:09,040
so what we are requesting is working

1877
01:26:06,960 --> 01:26:11,120
group adoption we believe

1878
01:26:09,040 --> 01:26:13,760
you know with uh we've worked quite a

1879
01:26:11,120 --> 01:26:16,719
bit on this draft we've presented it

1880
01:26:13,760 --> 01:26:18,239
a couple of times and it's uh it's you

1881
01:26:16,719 --> 01:26:22,239
know it's ready for working

1882
01:26:18,239 --> 01:26:24,080
group adoption

1883
01:26:22,239 --> 01:26:25,759
thank you okay okay so i have a couple

1884
01:26:24,080 --> 01:26:29,120
of minutes for

1885
01:26:25,760 --> 01:26:29,120
for any comments or questions

1886
01:26:34,400 --> 01:26:38,559
i don't see anyone you know in the queue

1887
01:26:37,199 --> 01:26:40,960
thank you

1888
01:26:38,560 --> 01:26:40,960
thank you

1889
01:26:42,320 --> 01:26:45,840
all right next is sammy

1890
01:26:46,080 --> 01:26:50,239
hi can you hear me yes loud and clear

1891
01:26:48,719 --> 01:26:53,280
thank you

1892
01:26:50,239 --> 01:26:56,638
okay good good yeah this draft

1893
01:26:53,280 --> 01:26:58,719
uh is uh

1894
01:26:56,639 --> 01:27:00,719
as the name is showing here is about

1895
01:26:58,719 --> 01:27:04,719
elan services

1896
01:27:00,719 --> 01:27:07,760
uh so it's the old elan technology

1897
01:27:04,719 --> 01:27:11,280
that we are all aware of but

1898
01:27:07,760 --> 01:27:12,000
uh i think here it's uh talking about

1899
01:27:11,280 --> 01:27:15,599
how can we

1900
01:27:12,000 --> 01:27:19,679
can we provide uh the elan

1901
01:27:15,600 --> 01:27:22,960
service uh in an optimized way

1902
01:27:19,679 --> 01:27:25,840
benefiting from the new

1903
01:27:22,960 --> 01:27:28,159
segment routing transport so whatever

1904
01:27:25,840 --> 01:27:31,679
segment routing transport is offering

1905
01:27:28,159 --> 01:27:35,519
how can we benefit from that to

1906
01:27:31,679 --> 01:27:39,920
provide the overlay elan service uh

1907
01:27:35,520 --> 01:27:43,840
uh in light of the new capability

1908
01:27:39,920 --> 01:27:47,360
uh offered by segment routing

1909
01:27:43,840 --> 01:27:50,560
so those are the list of answers uh

1910
01:27:47,360 --> 01:27:51,280
that have contributed and co-authored

1911
01:27:50,560 --> 01:27:54,880
the draft

1912
01:27:51,280 --> 01:27:56,880
so as you see here uh so let's move to

1913
01:27:54,880 --> 01:28:00,320
the next slide

1914
01:27:56,880 --> 01:28:02,719
please so uh

1915
01:28:00,320 --> 01:28:05,280
so the motivation here is how can we

1916
01:28:02,719 --> 01:28:07,920
provide the service the elan service

1917
01:28:05,280 --> 01:28:08,880
uh that uh historically of course

1918
01:28:07,920 --> 01:28:13,040
started with

1919
01:28:08,880 --> 01:28:16,639
uh uh sudhuar's if we are talking about

1920
01:28:13,040 --> 01:28:21,040
zakur of the service provider network

1921
01:28:16,639 --> 01:28:26,080
and we have started with vpls

1922
01:28:21,040 --> 01:28:29,360
and zan later on i came on evpn as well

1923
01:28:26,080 --> 01:28:32,400
and has the history developed

1924
01:28:29,360 --> 01:28:33,280
uh along to uh for the elan service and

1925
01:28:32,400 --> 01:28:36,559
now

1926
01:28:33,280 --> 01:28:38,960
uh with benefit of sr how can we

1927
01:28:36,560 --> 01:28:40,239
achieve some optimization for the

1928
01:28:38,960 --> 01:28:43,440
offering so

1929
01:28:40,239 --> 01:28:47,360
in general the motivation here is more

1930
01:28:43,440 --> 01:28:50,559
uh how can we simplify uh control plane

1931
01:28:47,360 --> 01:28:51,679
and data plane and address as well maybe

1932
01:28:50,560 --> 01:28:54,719
some of the issues

1933
01:28:51,679 --> 01:28:57,920
that historically was uh present

1934
01:28:54,719 --> 01:28:59,120
uh with the sudoa technology or the vpls

1935
01:28:57,920 --> 01:29:02,480
technology

1936
01:28:59,120 --> 01:29:05,679
that's widely deployed uh even today uh

1937
01:29:02,480 --> 01:29:07,599
in service provider network so uh if we

1938
01:29:05,679 --> 01:29:11,840
if we go back to the history of the sudo

1939
01:29:07,600 --> 01:29:14,560
war uh sudo sudowar historically

1940
01:29:11,840 --> 01:29:17,840
provided a context that identified both

1941
01:29:14,560 --> 01:29:21,840
the service and the endpoint

1942
01:29:17,840 --> 01:29:22,239
and because the sudower had that context

1943
01:29:21,840 --> 01:29:26,080
that

1944
01:29:22,239 --> 01:29:29,120
identifiable endpoint and service

1945
01:29:26,080 --> 01:29:29,840
it did suffer from scam scale issues so

1946
01:29:29,120 --> 01:29:33,280
here is

1947
01:29:29,840 --> 01:29:37,440
an example if we are talking about

1948
01:29:33,280 --> 01:29:39,920
10k service deployed on 100

1949
01:29:37,440 --> 01:29:40,960
node we are talking even with partial

1950
01:29:39,920 --> 01:29:43,280
meshes

1951
01:29:40,960 --> 01:29:44,800
uh between those service not on all

1952
01:29:43,280 --> 01:29:47,840
hundred node i mean

1953
01:29:44,800 --> 01:29:48,480
um we are talking about uh needing to

1954
01:29:47,840 --> 01:29:51,199
signal

1955
01:29:48,480 --> 01:29:52,799
more than hundred thousand sudower in

1956
01:29:51,199 --> 01:29:56,559
control plane

1957
01:29:52,800 --> 01:29:59,760
for those different services uh

1958
01:29:56,560 --> 01:30:03,120
so of course the skill was a concern

1959
01:29:59,760 --> 01:30:07,199
uh that that that was

1960
01:30:03,120 --> 01:30:09,519
that dpls was suffering from and as well

1961
01:30:07,199 --> 01:30:11,040
sudwar in general followed the layer 2

1962
01:30:09,520 --> 01:30:13,440
semantic

1963
01:30:11,040 --> 01:30:15,440
which didn't have active active

1964
01:30:13,440 --> 01:30:18,480
redundancy

1965
01:30:15,440 --> 01:30:20,400
and zeus semantic of not having active

1966
01:30:18,480 --> 01:30:23,360
active redundancy

1967
01:30:20,400 --> 01:30:24,320
was primary motivation for evpn for

1968
01:30:23,360 --> 01:30:26,400
example

1969
01:30:24,320 --> 01:30:28,960
to come and offer the active active

1970
01:30:26,400 --> 01:30:32,559
redundancy

1971
01:30:28,960 --> 01:30:36,000
and as well solves the skill problem

1972
01:30:32,560 --> 01:30:40,000
by providing as a multi-point to point

1973
01:30:36,000 --> 01:30:43,199
lsp for the evpn service

1974
01:30:40,000 --> 01:30:45,760
of course when evpn provided that uh

1975
01:30:43,199 --> 01:30:46,559
multi-point to point service uh it

1976
01:30:45,760 --> 01:30:51,280
removed

1977
01:30:46,560 --> 01:30:54,800
the source information from the context

1978
01:30:51,280 --> 01:30:57,440
for the evpn instance and that mandated

1979
01:30:54,800 --> 01:31:01,040
that evpn has to advertise

1980
01:30:57,440 --> 01:31:04,559
the mac address in control plane

1981
01:31:01,040 --> 01:31:08,719
so what here we are proposing

1982
01:31:04,560 --> 01:31:12,159
with that new idea of sr optimized elan

1983
01:31:08,719 --> 01:31:13,120
is benefiting again from the segment

1984
01:31:12,159 --> 01:31:16,879
routing

1985
01:31:13,120 --> 01:31:20,400
is that we can really improve the scale

1986
01:31:16,880 --> 01:31:22,080
by simply splitting the pseudo-art

1987
01:31:20,400 --> 01:31:26,320
context

1988
01:31:22,080 --> 01:31:29,440
uh instead of having it only presented

1989
01:31:26,320 --> 01:31:32,080
by one context or one label as we

1990
01:31:29,440 --> 01:31:33,839
as we have for the sudower is splits

1991
01:31:32,080 --> 01:31:37,280
that

1992
01:31:33,840 --> 01:31:41,520
and have uh the sudowar

1993
01:31:37,280 --> 01:31:45,120
presented by the service

1994
01:31:41,520 --> 01:31:46,000
label and another context to identify

1995
01:31:45,120 --> 01:31:49,519
the source

1996
01:31:46,000 --> 01:31:52,560
so now uh sudhuar can be sought

1997
01:31:49,520 --> 01:31:56,080
as you know

1998
01:31:52,560 --> 01:31:57,520
one said using the segment routing

1999
01:31:56,080 --> 01:32:00,719
terminology here

2000
01:31:57,520 --> 01:32:03,760
to identify the service and another sid

2001
01:32:00,719 --> 01:32:06,880
to identify the node

2002
01:32:03,760 --> 01:32:08,000
uh that's gonna be sending uh the

2003
01:32:06,880 --> 01:32:10,840
traffic

2004
01:32:08,000 --> 01:32:12,239
uh associated with that layer two

2005
01:32:10,840 --> 01:32:15,520
service

2006
01:32:12,239 --> 01:32:16,559
so so that split can allow us to scale

2007
01:32:15,520 --> 01:32:20,159
and now

2008
01:32:16,560 --> 01:32:23,840
instead of needing hundreds of thousands

2009
01:32:20,159 --> 01:32:25,120
of sudower context the service can be

2010
01:32:23,840 --> 01:32:29,040
presented

2011
01:32:25,120 --> 01:32:32,159
by only ten thousand uh service instance

2012
01:32:29,040 --> 01:32:35,360
context tray uh

2013
01:32:32,159 --> 01:32:35,839
we we still uh with uh with sr optimized

2014
01:32:35,360 --> 01:32:38,320
here

2015
01:32:35,840 --> 01:32:40,080
maintains the pseudo-r semantic or the

2016
01:32:38,320 --> 01:32:43,519
point-to-point semantic

2017
01:32:40,080 --> 01:32:46,800
between two endpoint uh by presenting

2018
01:32:43,520 --> 01:32:49,920
as as mentioned here uh the

2019
01:32:46,800 --> 01:32:53,280
the sudo context with two sets in

2020
01:32:49,920 --> 01:32:54,480
uh in the sit stack which is the service

2021
01:32:53,280 --> 01:32:57,599
sid and

2022
01:32:54,480 --> 01:32:59,199
the sources and as well what we are

2023
01:32:57,600 --> 01:33:02,080
saying is that we can offer

2024
01:32:59,199 --> 01:33:03,519
still the active active redundancy by

2025
01:33:02,080 --> 01:33:06,880
simply benefiting

2026
01:33:03,520 --> 01:33:09,920
from the anycast

2027
01:33:06,880 --> 01:33:12,080
set capability offered by segment

2028
01:33:09,920 --> 01:33:14,239
routing today

2029
01:33:12,080 --> 01:33:16,480
so how is that going to be achieved we

2030
01:33:14,239 --> 01:33:19,519
are going to see that in the next slides

2031
01:33:16,480 --> 01:33:19,519
so next slide please

2032
01:33:21,440 --> 01:33:26,719
so here you know as

2033
01:33:24,480 --> 01:33:28,559
if we go back to the motivation and the

2034
01:33:26,719 --> 01:33:32,159
goal here we are saying

2035
01:33:28,560 --> 01:33:34,480
uh we wanna uh of course benefit from sr

2036
01:33:32,159 --> 01:33:37,519
or segment routing but at the same time

2037
01:33:34,480 --> 01:33:38,799
uh we want to as well uh optimize the

2038
01:33:37,520 --> 01:33:42,000
control plane

2039
01:33:38,800 --> 01:33:43,280
uh or simplify the control plane so what

2040
01:33:42,000 --> 01:33:46,960
we are saying is that uh

2041
01:33:43,280 --> 01:33:50,400
if you see here a a network with uh

2042
01:33:46,960 --> 01:33:52,800
six nodes as shown and uh and

2043
01:33:50,400 --> 01:33:54,960
you know ces attached wizard zoos are

2044
01:33:52,800 --> 01:33:57,760
multi-homed or single home

2045
01:33:54,960 --> 01:33:58,960
uh to as a different peas on that

2046
01:33:57,760 --> 01:34:02,000
network

2047
01:33:58,960 --> 01:34:04,320
we are saying you know the discovery can

2048
01:34:02,000 --> 01:34:05,679
be greatly simplified by simply having

2049
01:34:04,320 --> 01:34:09,920
each node

2050
01:34:05,679 --> 01:34:13,199
advertise the services

2051
01:34:09,920 --> 01:34:16,159
as a bit mask of all the services

2052
01:34:13,199 --> 01:34:17,360
that are provisioned on a given node so

2053
01:34:16,159 --> 01:34:21,519
if you imagine

2054
01:34:17,360 --> 01:34:24,799
uh you know some some nodes here are

2055
01:34:21,520 --> 01:34:27,920
for example configured with uh

2056
01:34:24,800 --> 01:34:31,280
uh thousand even of services

2057
01:34:27,920 --> 01:34:35,120
uh each node can advertise um

2058
01:34:31,280 --> 01:34:37,040
a bit mask of all the service said ids

2059
01:34:35,120 --> 01:34:39,760
starting with the start services

2060
01:34:37,040 --> 01:34:40,880
i think here yeah the assumption is that

2061
01:34:39,760 --> 01:34:43,920
we are going to have

2062
01:34:40,880 --> 01:34:46,960
a global uh

2063
01:34:43,920 --> 01:34:48,800
service said block right so so we are

2064
01:34:46,960 --> 01:34:52,000
going to have an srgb

2065
01:34:48,800 --> 01:34:54,080
uh for the services uh but

2066
01:34:52,000 --> 01:34:56,800
how are we advertising the service sed

2067
01:34:54,080 --> 01:35:00,320
will will simply be

2068
01:34:56,800 --> 01:35:03,679
you know a start service uh said plus

2069
01:35:00,320 --> 01:35:07,119
a bit match uh where each bit

2070
01:35:03,679 --> 01:35:09,199
where each service in that block is set

2071
01:35:07,119 --> 01:35:10,719
uh if the service is configured on that

2072
01:35:09,199 --> 01:35:13,360
node and this is how

2073
01:35:10,719 --> 01:35:14,480
all nodes in the network can quickly

2074
01:35:13,360 --> 01:35:17,599
discover

2075
01:35:14,480 --> 01:35:21,040
uh what services are configured

2076
01:35:17,600 --> 01:35:22,320
on its spear nodes right uh and that can

2077
01:35:21,040 --> 01:35:26,719
help of course to

2078
01:35:22,320 --> 01:35:29,040
uh you know discover the membership

2079
01:35:26,719 --> 01:35:30,639
for ingress replication for example if

2080
01:35:29,040 --> 01:35:34,560
you are going to be flooding

2081
01:35:30,639 --> 01:35:36,880
uh layer 2 packet or to build

2082
01:35:34,560 --> 01:35:39,520
you know point to multiply trees for

2083
01:35:36,880 --> 01:35:43,280
example if that's needed as well

2084
01:35:39,520 --> 01:35:44,480
so the discovery uh of many many servers

2085
01:35:43,280 --> 01:35:47,519
can happen

2086
01:35:44,480 --> 01:35:50,638
using a single control plane route right

2087
01:35:47,520 --> 01:35:51,920
that can be of course flooded using a

2088
01:35:50,639 --> 01:35:55,360
bgp control plane

2089
01:35:51,920 --> 01:35:58,320
to the rest of the network and

2090
01:35:55,360 --> 01:35:59,839
along with that bit mask we i can

2091
01:35:58,320 --> 01:36:02,719
advertise per note

2092
01:35:59,840 --> 01:36:03,119
uh especially for english replication a

2093
01:36:02,719 --> 01:36:06,239
pair

2094
01:36:03,119 --> 01:36:09,759
node uh uh uh broadcast sid

2095
01:36:06,239 --> 01:36:13,360
so that said is is a note set still

2096
01:36:09,760 --> 01:36:17,040
but that allow the node

2097
01:36:13,360 --> 01:36:20,080
to receive broadcast traffic so if

2098
01:36:17,040 --> 01:36:23,119
the top said is that broadcast not said

2099
01:36:20,080 --> 01:36:25,360
then the node know that this

2100
01:36:23,119 --> 01:36:27,040
traffic is meant to be broadcasted or

2101
01:36:25,360 --> 01:36:30,159
meant to be flooded

2102
01:36:27,040 --> 01:36:32,639
uh to the subs okay so

2103
01:36:30,159 --> 01:36:35,280
uh having said that let's go to the next

2104
01:36:32,639 --> 01:36:35,280
slide please

2105
01:36:36,560 --> 01:36:41,440
so in here uh yeah we are describing how

2106
01:36:40,080 --> 01:36:44,639
can you achieve

2107
01:36:41,440 --> 01:36:48,159
active active redundancy uh with

2108
01:36:44,639 --> 01:36:51,199
uh this new uh is this new idea

2109
01:36:48,159 --> 01:36:52,559
uh here as shown so uh so we are talking

2110
01:36:51,199 --> 01:36:55,678
about

2111
01:36:52,560 --> 01:36:59,199
as mentioned again uh

2112
01:36:55,679 --> 01:37:02,239
the stack here in the stack uh

2113
01:36:59,199 --> 01:37:05,919
we are going to have uh

2114
01:37:02,239 --> 01:37:09,280
the service set and the source node

2115
01:37:05,920 --> 01:37:10,480
said uh presenting the suduar context

2116
01:37:09,280 --> 01:37:12,239
right

2117
01:37:10,480 --> 01:37:14,559
so what we are proposing here is that

2118
01:37:12,239 --> 01:37:17,678
for each ethernet segment

2119
01:37:14,560 --> 01:37:18,080
uh that's multi-home we are going to

2120
01:37:17,679 --> 01:37:21,040
have

2121
01:37:18,080 --> 01:37:21,360
an anycast set associated with it so

2122
01:37:21,040 --> 01:37:26,400
that

2123
01:37:21,360 --> 01:37:29,519
anycast said uh you know is going to be

2124
01:37:26,400 --> 01:37:32,879
advertised or flooded into as a network

2125
01:37:29,520 --> 01:37:35,440
uh by igp but it's presenting

2126
01:37:32,880 --> 01:37:37,119
our bgp for that matter but it's

2127
01:37:35,440 --> 01:37:39,199
presenting an ethernet segment so what

2128
01:37:37,119 --> 01:37:40,639
that anycast said is going to be flooded

2129
01:37:39,199 --> 01:37:42,879
to the network

2130
01:37:40,639 --> 01:37:44,880
then the nodes attached to the

2131
01:37:42,880 --> 01:37:48,560
multi-home site can discover

2132
01:37:44,880 --> 01:37:50,080
that they are configured with the same

2133
01:37:48,560 --> 01:37:51,600
anycast sets that are

2134
01:37:50,080 --> 01:37:53,600
that's associated with the easterner

2135
01:37:51,600 --> 01:37:54,560
segment that can help them do their df

2136
01:37:53,600 --> 01:37:57,520
election

2137
01:37:54,560 --> 01:37:59,520
uh and at the same time uh when we do

2138
01:37:57,520 --> 01:38:02,560
data plane mac learning here

2139
01:37:59,520 --> 01:38:03,520
uh we are going to be learning uh the

2140
01:38:02,560 --> 01:38:07,040
mac

2141
01:38:03,520 --> 01:38:08,960
uh uh uh that's sourced from uh a packet

2142
01:38:07,040 --> 01:38:10,320
coming from a multi-home site against

2143
01:38:08,960 --> 01:38:13,600
any customer

2144
01:38:10,320 --> 01:38:14,400
uh uh so so the mac learning yeah maybe

2145
01:38:13,600 --> 01:38:16,400
i should touch

2146
01:38:14,400 --> 01:38:17,920
on that a little bit is that the mac

2147
01:38:16,400 --> 01:38:20,440
learning here

2148
01:38:17,920 --> 01:38:21,760
for a given service is going to be

2149
01:38:20,440 --> 01:38:23,919
associated

2150
01:38:21,760 --> 01:38:25,920
with the source node set and that source

2151
01:38:23,920 --> 01:38:29,119
node set could be

2152
01:38:25,920 --> 01:38:30,480
you know unicast if it's it's uh that

2153
01:38:29,119 --> 01:38:31,280
traffic is coming from a single home

2154
01:38:30,480 --> 01:38:34,559
site

2155
01:38:31,280 --> 01:38:36,159
or could be uh uh

2156
01:38:34,560 --> 01:38:38,320
sorry it could be associated with a

2157
01:38:36,159 --> 01:38:39,280
unicast note said or could be an anycast

2158
01:38:38,320 --> 01:38:42,639
note said

2159
01:38:39,280 --> 01:38:44,320
if as a packet was coming from a

2160
01:38:42,639 --> 01:38:47,679
multi-home site so

2161
01:38:44,320 --> 01:38:49,599
the learning still can happen against

2162
01:38:47,679 --> 01:38:51,840
the source not said whether it's any

2163
01:38:49,600 --> 01:38:55,600
cast or regular note said

2164
01:38:51,840 --> 01:38:56,239
uh that you know is associated with the

2165
01:38:55,600 --> 01:38:59,840
node

2166
01:38:56,239 --> 01:38:59,839
that receives the traffic from a single

2167
01:39:00,080 --> 01:39:06,639
so yeah having said that let's go

2168
01:39:03,600 --> 01:39:06,639
to the next slide

2169
01:39:11,440 --> 01:39:14,320
can you speed it up a bit please because

2170
01:39:13,199 --> 01:39:14,638
we've got quite a few people in the

2171
01:39:14,320 --> 01:39:17,280
queue

2172
01:39:14,639 --> 01:39:20,080
as well so yeah i i think you still have

2173
01:39:17,280 --> 01:39:20,080
five minutes right

2174
01:39:20,800 --> 01:39:27,119
yeah i know okay so

2175
01:39:24,000 --> 01:39:28,800
for uh

2176
01:39:27,119 --> 01:39:30,400
against the optimized services data

2177
01:39:28,800 --> 01:39:33,520
plane mclearning here

2178
01:39:30,400 --> 01:39:34,400
uh as as mentioned uh you know again

2179
01:39:33,520 --> 01:39:38,080
repetition

2180
01:39:34,400 --> 01:39:39,839
on on the flooding uh we are

2181
01:39:38,080 --> 01:39:42,000
gonna of course the data plate

2182
01:39:39,840 --> 01:39:45,199
mclearning everybody is aware that

2183
01:39:42,000 --> 01:39:48,560
uh we do flood and learn here

2184
01:39:45,199 --> 01:39:48,960
and we are learning again uh the source

2185
01:39:48,560 --> 01:39:52,000
mac

2186
01:39:48,960 --> 01:39:54,480
against the source sit right uh and

2187
01:39:52,000 --> 01:39:56,080
everybody would learn that and that

2188
01:39:54,480 --> 01:39:58,718
source that could be

2189
01:39:56,080 --> 01:39:59,679
a note set if the traffic coming from

2190
01:39:58,719 --> 01:40:01,679
single home

2191
01:39:59,679 --> 01:40:03,520
or in any cash said if the traffic is

2192
01:40:01,679 --> 01:40:09,840
coming from multi-home

2193
01:40:03,520 --> 01:40:09,840
uh so we can move to the next slide

2194
01:40:11,679 --> 01:40:17,679
okay yeah one one key feature as well

2195
01:40:14,880 --> 01:40:19,520
uh uh talk about art suppression and how

2196
01:40:17,679 --> 01:40:20,480
we can achieve our suppression with that

2197
01:40:19,520 --> 01:40:24,080
idea right

2198
01:40:20,480 --> 01:40:26,480
so one uh approach here uh

2199
01:40:24,080 --> 01:40:28,559
that can be deployed of course uh you we

2200
01:40:26,480 --> 01:40:29,759
can learn about the ipad binding by

2201
01:40:28,560 --> 01:40:33,520
gleaning arc

2202
01:40:29,760 --> 01:40:36,800
uh however uh you know

2203
01:40:33,520 --> 01:40:40,719
the arp replies are typically unicast

2204
01:40:36,800 --> 01:40:43,360
and ipmaq binding may not be learned

2205
01:40:40,719 --> 01:40:46,159
except only by the nodes that are

2206
01:40:43,360 --> 01:40:49,759
involved with that unicast packet

2207
01:40:46,159 --> 01:40:50,719
and here a proposal of flooding arc

2208
01:40:49,760 --> 01:40:53,280
replies

2209
01:40:50,719 --> 01:40:54,480
to allow the ipmc binding to be learned

2210
01:40:53,280 --> 01:40:57,519
via

2211
01:40:54,480 --> 01:41:01,360
all nodes as well uh to meant

2212
01:40:57,520 --> 01:41:05,840
to to be able to provide arc suppression

2213
01:41:01,360 --> 01:41:05,839
uh yeah let's move to the next slide

2214
01:41:07,920 --> 01:41:10,960
uh yeah actually in here we are saying

2215
01:41:10,239 --> 01:41:14,159
you know

2216
01:41:10,960 --> 01:41:19,040
mechanism that are required

2217
01:41:14,159 --> 01:41:21,920
to provide overlay to provide overlay

2218
01:41:19,040 --> 01:41:23,760
conversions are not needed here and

2219
01:41:21,920 --> 01:41:26,880
that's honestly a very key

2220
01:41:23,760 --> 01:41:27,840
uh to this approach so as we said we are

2221
01:41:26,880 --> 01:41:31,360
simplifying

2222
01:41:27,840 --> 01:41:34,560
a control plane mechanism by advertising

2223
01:41:31,360 --> 01:41:37,759
very very limited number of routes uh to

2224
01:41:34,560 --> 01:41:40,800
discover the services and and build uh

2225
01:41:37,760 --> 01:41:43,040
uh to discover services are

2226
01:41:40,800 --> 01:41:44,239
configured and learn about them in

2227
01:41:43,040 --> 01:41:47,040
control plane

2228
01:41:44,239 --> 01:41:47,839
uh with a much simplified control plane

2229
01:41:47,040 --> 01:41:50,800
uh

2230
01:41:47,840 --> 01:41:51,600
offering here but as well uh in terms of

2231
01:41:50,800 --> 01:41:54,639
convergence

2232
01:41:51,600 --> 01:41:57,199
given that the ethernet segment is

2233
01:41:54,639 --> 01:41:58,639
uh presented by an anycast said in the

2234
01:41:57,199 --> 01:42:02,159
underlay network

2235
01:41:58,639 --> 01:42:04,400
we can use overlay uh sorry the underlay

2236
01:42:02,159 --> 01:42:06,480
conversions to converge

2237
01:42:04,400 --> 01:42:09,679
as overlay as well right so there is no

2238
01:42:06,480 --> 01:42:13,119
need really for any overlay conversions

2239
01:42:09,679 --> 01:42:15,199
uh in here because simply a anode can

2240
01:42:13,119 --> 01:42:16,960
withdraw it's any cass said

2241
01:42:15,199 --> 01:42:18,320
from the underlying network then it will

2242
01:42:16,960 --> 01:42:20,800
stop receiving

2243
01:42:18,320 --> 01:42:23,199
uh multi-home traffic uh or traffic

2244
01:42:20,800 --> 01:42:24,960
that's destined to its multi-room site

2245
01:42:23,199 --> 01:42:27,040
uh and we are saying here even for

2246
01:42:24,960 --> 01:42:30,000
faster conversions

2247
01:42:27,040 --> 01:42:32,960
note can direct traffic uh to another

2248
01:42:30,000 --> 01:42:37,280
node associated with the multi-home site

2249
01:42:32,960 --> 01:42:39,440
uh if it's on site for example field

2250
01:42:37,280 --> 01:42:42,719
until uh the withdrawal has been

2251
01:42:39,440 --> 01:42:46,638
propagated to the rest of the network

2252
01:42:42,719 --> 01:42:46,639
uh so let's move to the next slide

2253
01:42:47,199 --> 01:42:51,440
please uh yeah we are saying of course

2254
01:42:49,760 --> 01:42:52,560
because we are using anycast said we can

2255
01:42:51,440 --> 01:42:54,960
do ecmp

2256
01:42:52,560 --> 01:42:57,679
uh multi-passing this could be ecmp or

2257
01:42:54,960 --> 01:43:00,719
even ucmp right because any cassette

2258
01:42:57,679 --> 01:43:04,239
can be advertised with different weight

2259
01:43:00,719 --> 01:43:06,320
uh and if that happens uh uh you know we

2260
01:43:04,239 --> 01:43:08,799
can

2261
01:43:06,320 --> 01:43:10,159
send traffic uh with different weight

2262
01:43:08,800 --> 01:43:12,639
and as well uh

2263
01:43:10,159 --> 01:43:15,119
to of course to the nodes attached to

2264
01:43:12,639 --> 01:43:18,159
the multi-site or as well

2265
01:43:15,119 --> 01:43:21,119
we could uh have

2266
01:43:18,159 --> 01:43:22,638
active standby by having one node

2267
01:43:21,119 --> 01:43:26,719
advertising then he has said it was a

2268
01:43:22,639 --> 01:43:26,719
hard metric next slide please

2269
01:43:28,400 --> 01:43:32,159
i think yes this is the last slide so so

2270
01:43:30,239 --> 01:43:36,480
just to recap quickly here

2271
01:43:32,159 --> 01:43:39,040
we are now yeah yeah yeah i'm concluding

2272
01:43:36,480 --> 01:43:40,559
so uh uh just to recap quickly here we

2273
01:43:39,040 --> 01:43:42,080
are saying okay hey we are maintaining

2274
01:43:40,560 --> 01:43:43,520
data plane mac learning with all the

2275
01:43:42,080 --> 01:43:44,559
benefit of data plane back learning with

2276
01:43:43,520 --> 01:43:47,440
this approach

2277
01:43:44,560 --> 01:43:48,239
uh to achieve of course uh uh fast

2278
01:43:47,440 --> 01:43:51,119
convergence

2279
01:43:48,239 --> 01:43:53,280
and no you know data plane mclearning uh

2280
01:43:51,119 --> 01:43:54,320
has been optimized greatly on hardware

2281
01:43:53,280 --> 01:43:56,080
today and

2282
01:43:54,320 --> 01:43:57,920
many hardware can do mac learning at

2283
01:43:56,080 --> 01:44:00,559
line speed uh

2284
01:43:57,920 --> 01:44:02,000
mac move uh you know maintain

2285
01:44:00,560 --> 01:44:04,560
conversational learning

2286
01:44:02,000 --> 01:44:06,159
uh skill very well uh we bring the

2287
01:44:04,560 --> 01:44:07,119
benefit of active active and multi

2288
01:44:06,159 --> 01:44:10,320
passing through

2289
01:44:07,119 --> 01:44:11,920
uh benefiting of srne cache and

2290
01:44:10,320 --> 01:44:13,440
you mentioned as well arch suppression

2291
01:44:11,920 --> 01:44:15,119
much simpler control plane you know

2292
01:44:13,440 --> 01:44:17,119
imagine one route

2293
01:44:15,119 --> 01:44:18,639
that can teach you about all the

2294
01:44:17,119 --> 01:44:21,040
services seated with uh

2295
01:44:18,639 --> 01:44:22,480
or configured on your box right or on

2296
01:44:21,040 --> 01:44:24,239
your router

2297
01:44:22,480 --> 01:44:26,559
the leveraging of the segment routing

2298
01:44:24,239 --> 01:44:27,599
and eliminating any need of overlay

2299
01:44:26,560 --> 01:44:29,280
conversions

2300
01:44:27,600 --> 01:44:30,880
so all the underlay convergence is

2301
01:44:29,280 --> 01:44:32,400
needed eliminating the need of any

2302
01:44:30,880 --> 01:44:37,840
overlay conversions

2303
01:44:32,400 --> 01:44:37,839
with that yes i i am on time 15 minutes

2304
01:44:38,960 --> 01:44:42,719
i concluded so any question

2305
01:44:43,280 --> 01:44:46,880
okay i think ali was first in the in the

2306
01:44:45,360 --> 01:44:49,839
queue

2307
01:44:46,880 --> 01:44:49,840
yeah sure

2308
01:44:52,400 --> 01:44:55,599
earlier do you have a question

2309
01:44:56,560 --> 01:45:04,000
hello hello can you hear me

2310
01:45:00,560 --> 01:45:07,360
yes yes we can now all right

2311
01:45:04,000 --> 01:45:10,719
so uh there are quite a few

2312
01:45:07,360 --> 01:45:15,199
uh claims that are inaccurate and uh

2313
01:45:10,719 --> 01:45:17,840
the idea of these data plane

2314
01:45:15,199 --> 01:45:19,119
learning uh mac learning in data plane

2315
01:45:17,840 --> 01:45:22,880
and

2316
01:45:19,119 --> 01:45:26,159
breaking the pseudo-wire context into

2317
01:45:22,880 --> 01:45:28,320
a source field uh service id field

2318
01:45:26,159 --> 01:45:29,199
and the destination which is a multicast

2319
01:45:28,320 --> 01:45:32,239
field

2320
01:45:29,199 --> 01:45:36,320
has been done for over 17 years

2321
01:45:32,239 --> 01:45:38,480
first in 2003 2004 there was a i wrote a

2322
01:45:36,320 --> 01:45:41,199
draft vpls multicast

2323
01:45:38,480 --> 01:45:42,000
that describes how to do that and then

2324
01:45:41,199 --> 01:45:45,040
seven years

2325
01:45:42,000 --> 01:45:48,320
later uh in

2326
01:45:45,040 --> 01:45:49,280
2010 there was a vx and the native vx

2327
01:45:48,320 --> 01:45:52,480
land draft

2328
01:45:49,280 --> 01:45:56,480
talks about data plane learning and uh

2329
01:45:52,480 --> 01:45:59,280
between the two we had pvb vpls

2330
01:45:56,480 --> 01:46:00,959
which does the same thing sorry what is

2331
01:45:59,280 --> 01:46:01,360
the point sorry sorry what is the point

2332
01:46:00,960 --> 01:46:03,920
you know

2333
01:46:01,360 --> 01:46:05,599
are we getting a history lesson i am

2334
01:46:03,920 --> 01:46:07,679
getting to the point i am getting to the

2335
01:46:05,600 --> 01:46:09,679
point that there is nothing new here

2336
01:46:07,679 --> 01:46:11,840
claims are being made in here which are

2337
01:46:09,679 --> 01:46:14,639
inaccurate and there are

2338
01:46:11,840 --> 01:46:16,320
issues all the issues that we have with

2339
01:46:14,639 --> 01:46:19,360
the data plane learning

2340
01:46:16,320 --> 01:46:20,159
it is ex still exists except that you're

2341
01:46:19,360 --> 01:46:22,719
not

2342
01:46:20,159 --> 01:46:24,400
either you don't know about them or you

2343
01:46:22,719 --> 01:46:28,239
you're not mentioning them

2344
01:46:24,400 --> 01:46:30,159
okay so what are they no

2345
01:46:28,239 --> 01:46:31,919
yeah you know i let's not make

2346
01:46:30,159 --> 01:46:32,960
statements let's not make statements

2347
01:46:31,920 --> 01:46:34,639
what are the issues

2348
01:46:32,960 --> 01:46:36,800
sammy and i'm going to send the email on

2349
01:46:34,639 --> 01:46:38,880
the working group

2350
01:46:36,800 --> 01:46:41,440
sure yeah yeah you are welcome you know

2351
01:46:38,880 --> 01:46:43,600
i i don't like subjective comment here

2352
01:46:41,440 --> 01:46:45,839
and just it's not a subjective comment

2353
01:46:43,600 --> 01:46:46,639
it has been around for 17 years for

2354
01:46:45,840 --> 01:46:49,440
god's sake

2355
01:46:46,639 --> 01:46:50,080
actually you know what that idea you

2356
01:46:49,440 --> 01:46:52,719
know i

2357
01:46:50,080 --> 01:46:54,000
even with other vendors i worked for i

2358
01:46:52,719 --> 01:46:56,159
had i have been

2359
01:46:54,000 --> 01:46:58,400
even talking about it 20 years ago so

2360
01:46:56,159 --> 01:47:00,799
what is the point i'm not getting it

2361
01:46:58,400 --> 01:47:02,719
the point is the same issue that we had

2362
01:47:00,800 --> 01:47:03,280
with the data plane how come you're not

2363
01:47:02,719 --> 01:47:05,679
the

2364
01:47:03,280 --> 01:47:07,119
overlooking why you are thinking that

2365
01:47:05,679 --> 01:47:10,239
data plane is evil

2366
01:47:07,119 --> 01:47:10,239
and we shouldn't do that

2367
01:47:11,360 --> 01:47:15,440
listen let me go just over the issues

2368
01:47:14,320 --> 01:47:18,159
flooding issues

2369
01:47:15,440 --> 01:47:18,879
okay when you talk about the all active

2370
01:47:18,159 --> 01:47:20,480
okay

2371
01:47:18,880 --> 01:47:22,080
let's let's talk about flooding issue

2372
01:47:20,480 --> 01:47:23,919
why are you saying flooding in data

2373
01:47:22,080 --> 01:47:26,960
plane is bad but flooding in control

2374
01:47:23,920 --> 01:47:27,360
no no i'm not even talking about it you

2375
01:47:26,960 --> 01:47:30,159
know

2376
01:47:27,360 --> 01:47:32,400
why why are you saying that is bad and

2377
01:47:30,159 --> 01:47:34,839
flooding

2378
01:47:32,400 --> 01:47:37,839
and then respond once you understand my

2379
01:47:34,840 --> 01:47:37,840
question

2380
01:47:37,920 --> 01:47:40,239
okay

2381
01:47:41,360 --> 01:47:44,400
yeah planning issues yeah could you do

2382
01:47:43,840 --> 01:47:46,159
it

2383
01:47:44,400 --> 01:47:48,239
really quickly and continue on the list

2384
01:47:46,159 --> 01:47:49,679
because we have then three people

2385
01:47:48,239 --> 01:47:51,280
that are still in the queue and still

2386
01:47:49,679 --> 01:47:53,360
one slot today i'm just gonna

2387
01:47:51,280 --> 01:47:54,559
sure i'm gonna actually elaborate on

2388
01:47:53,360 --> 01:47:56,559
that in the mailing

2389
01:47:54,560 --> 01:47:58,880
list but i'm just gonna mention there is

2390
01:47:56,560 --> 01:48:02,080
a flooding issue as a result of the

2391
01:47:58,880 --> 01:48:06,320
all active multi-homing uh where

2392
01:48:02,080 --> 01:48:06,639
uh uh ce uh does the hatching to one pe

2393
01:48:06,320 --> 01:48:08,960
and

2394
01:48:06,639 --> 01:48:10,239
uh uh let's say to pe one and pe two

2395
01:48:08,960 --> 01:48:12,800
doesn't receive

2396
01:48:10,239 --> 01:48:14,799
and then when the remote sends a traffic

2397
01:48:12,800 --> 01:48:15,280
to pe two that hasn't learned the mac

2398
01:48:14,800 --> 01:48:17,600
address

2399
01:48:15,280 --> 01:48:18,880
the pe two that multi-home t is gonna

2400
01:48:17,600 --> 01:48:20,639
flood one

2401
01:48:18,880 --> 01:48:22,159
second i know actually that's not

2402
01:48:20,639 --> 01:48:24,560
correct no that's not correct

2403
01:48:22,159 --> 01:48:26,400
that's not correct why are you saying

2404
01:48:24,560 --> 01:48:27,360
why are you assuming this is the case

2405
01:48:26,400 --> 01:48:29,199
you know you are

2406
01:48:27,360 --> 01:48:31,599
you i don't think you read the draft or

2407
01:48:29,199 --> 01:48:34,559
even uh looked at the slide

2408
01:48:31,600 --> 01:48:36,080
yeah i i i i'm really sorry guys i'm

2409
01:48:34,560 --> 01:48:39,040
really sorry we are really

2410
01:48:36,080 --> 01:48:39,440
out of time so could you try to discuss

2411
01:48:39,040 --> 01:48:42,560
uh

2412
01:48:39,440 --> 01:48:45,199
on the list and uh stay calm

2413
01:48:42,560 --> 01:48:47,360
okay so so don't just want two other

2414
01:48:45,199 --> 01:48:49,919
things no no

2415
01:48:47,360 --> 01:48:49,920
we are free

2416
01:48:51,840 --> 01:48:55,199
so all right

2417
01:48:58,840 --> 01:49:03,199
hello

2418
01:49:00,320 --> 01:49:03,840
i yeah i think tom has a tom was next

2419
01:49:03,199 --> 01:49:07,040
very quick

2420
01:49:03,840 --> 01:49:08,560
please hi sammy um i i have a

2421
01:49:07,040 --> 01:49:11,920
one one particular question in the in

2422
01:49:08,560 --> 01:49:15,119
the draft section 4.1 it mentions that

2423
01:49:11,920 --> 01:49:15,760
extension another draft it seems to me

2424
01:49:15,119 --> 01:49:19,040
that

2425
01:49:15,760 --> 01:49:19,760
this is either you know something

2426
01:49:19,040 --> 01:49:23,040
invested

2427
01:49:19,760 --> 01:49:26,560
that's reinventing evpn

2428
01:49:23,040 --> 01:49:29,440
or is better just

2429
01:49:26,560 --> 01:49:30,800
the draft has nothing to do with evpn

2430
01:49:29,440 --> 01:49:34,239
well that's even more concerning

2431
01:49:30,800 --> 01:49:35,440
um but but also i mean this is the bgp

2432
01:49:34,239 --> 01:49:38,400
enabled services

2433
01:49:35,440 --> 01:49:40,080
working group would this draft not be

2434
01:49:38,400 --> 01:49:43,839
better discussed in spring

2435
01:49:40,080 --> 01:49:43,840
at this point

2436
01:49:44,480 --> 01:49:48,239
we can discuss the drafting spring but

2437
01:49:46,480 --> 01:49:51,598
the idea here is that this is

2438
01:49:48,239 --> 01:49:53,678
an elan service uh and uh we didn't

2439
01:49:51,599 --> 01:49:56,320
define yet the extension for bgp to

2440
01:49:53,679 --> 01:49:58,639
support this so this is uh why

2441
01:49:56,320 --> 01:50:01,360
we are presenting here uh presenting the

2442
01:49:58,639 --> 01:50:04,639
draft hearing best right so

2443
01:50:01,360 --> 01:50:08,239
but there's no bgp discussion

2444
01:50:04,639 --> 01:50:10,320
there is bgp uh angle of it that are

2445
01:50:08,239 --> 01:50:11,759
going to be added to the draft shortly

2446
01:50:10,320 --> 01:50:13,519
right you know the part about

2447
01:50:11,760 --> 01:50:15,520
distributing in control plane

2448
01:50:13,520 --> 01:50:16,800
the set of land services associated with

2449
01:50:15,520 --> 01:50:18,960
a given node

2450
01:50:16,800 --> 01:50:22,400
okay and very quickly why why do

2451
01:50:18,960 --> 01:50:22,400
something different to evpn

2452
01:50:22,560 --> 01:50:26,880
why we are okay the main motivation here

2453
01:50:25,520 --> 01:50:27,440
that we mentioned at the beginning of

2454
01:50:26,880 --> 01:50:30,880
the

2455
01:50:27,440 --> 01:50:33,759
of the uh presentation

2456
01:50:30,880 --> 01:50:35,679
is that we are saying uh uh we want to

2457
01:50:33,760 --> 01:50:36,239
have a much simpler control plane to set

2458
01:50:35,679 --> 01:50:38,719
up

2459
01:50:36,239 --> 01:50:40,400
uh scale better in terms of control

2460
01:50:38,719 --> 01:50:42,719
plane in distributing the servers

2461
01:50:40,400 --> 01:50:43,598
actually if you are talking about uh

2462
01:50:42,719 --> 01:50:46,800
evpn

2463
01:50:43,599 --> 01:50:48,000
uh uh if we are gonna go evpn route and

2464
01:50:46,800 --> 01:50:50,320
signal for example

2465
01:50:48,000 --> 01:50:51,840
uh on a hundred no ten thousand servers

2466
01:50:50,320 --> 01:50:53,280
whose mac entries you are talking about

2467
01:50:51,840 --> 01:50:56,000
millions and millions of routes that you

2468
01:50:53,280 --> 01:50:56,000
have to distribute

2469
01:50:56,159 --> 01:50:59,440
so we are saying you know instead of

2470
01:50:58,080 --> 01:51:02,239
that approach

2471
01:50:59,440 --> 01:51:04,320
why can't we uh you know if you talk

2472
01:51:02,239 --> 01:51:05,280
about evpn and you have 10 000 servers

2473
01:51:04,320 --> 01:51:08,880
you are talking about

2474
01:51:05,280 --> 01:51:12,960
distributing ten thousand ethernet

2475
01:51:08,880 --> 01:51:12,960
right we are talking about contributing

2476
01:51:17,760 --> 01:51:21,440
to the next slot we have to move to the

2477
01:51:19,440 --> 01:51:25,199
next slot unfortunately

2478
01:51:21,440 --> 01:51:26,559
okay over time next is uh so please take

2479
01:51:25,199 --> 01:51:35,839
any of your questions on this draft to

2480
01:51:26,560 --> 01:51:35,840
the list please

2481
01:51:38,960 --> 01:51:44,140
um okay so i just want to see that

2482
01:51:42,320 --> 01:51:45,360
this transcript

2483
01:51:44,140 --> 01:51:49,440
[Music]

2484
01:51:45,360 --> 01:51:49,440
is actually independent of are

2485
01:51:49,599 --> 01:51:56,239
okay um all right so

2486
01:51:52,719 --> 01:51:58,000
oh i my comment was about the semi strap

2487
01:51:56,239 --> 01:52:01,839
but now let me get down to my

2488
01:51:58,000 --> 01:52:03,840
presentation um this independent uh

2489
01:52:01,840 --> 01:52:06,960
generic fragmentation

2490
01:52:03,840 --> 01:52:06,960
um it's a

2491
01:52:07,119 --> 01:52:10,559
it's a use case that uh that started

2492
01:52:09,360 --> 01:52:16,960
with evpn

2493
01:52:10,560 --> 01:52:21,280
mpos next slide please

2494
01:52:16,960 --> 01:52:24,320
so observations that uh with even pm

2495
01:52:21,280 --> 01:52:27,360
at evp mtos we have this fragmentation

2496
01:52:24,320 --> 01:52:28,159
issue in that if you receive a packet

2497
01:52:27,360 --> 01:52:31,199
from ce

2498
01:52:28,159 --> 01:52:31,679
that's too large today the only way to

2499
01:52:31,199 --> 01:52:34,799
get it

2500
01:52:31,679 --> 01:52:38,639
through the underlay is to use

2501
01:52:34,800 --> 01:52:41,119
ip encapsulation you put a

2502
01:52:38,639 --> 01:52:41,840
you impose your service label first and

2503
01:52:41,119 --> 01:52:44,960
then you

2504
01:52:41,840 --> 01:52:48,159
put the packet into ipv6 or ipv4

2505
01:52:44,960 --> 01:52:51,360
fragment it send it across reassemble

2506
01:52:48,159 --> 01:52:52,559
de-capsulate ip and then go on with

2507
01:52:51,360 --> 01:52:56,000
mpos-based

2508
01:52:52,560 --> 01:52:58,960
forwarding this works but

2509
01:52:56,000 --> 01:53:00,080
new mpos is not used for transport and

2510
01:52:58,960 --> 01:53:02,560
there are cases

2511
01:53:00,080 --> 01:53:03,679
where an operator may want to use npr's

2512
01:53:02,560 --> 01:53:06,800
transport

2513
01:53:03,679 --> 01:53:08,159
and it also could incur large ipv6

2514
01:53:06,800 --> 01:53:12,159
overheads

2515
01:53:08,159 --> 01:53:15,920
um so this fragmentation issue

2516
01:53:12,159 --> 01:53:16,320
uh for when it comes to sudowr or vpos

2517
01:53:15,920 --> 01:53:20,639
the

2518
01:53:16,320 --> 01:53:24,000
uh there it was a solution uh rfc 4623

2519
01:53:20,639 --> 01:53:27,599
using the control world um but that is

2520
01:53:24,000 --> 01:53:31,119
not applicable to evpn

2521
01:53:27,599 --> 01:53:33,280
because evpn

2522
01:53:31,119 --> 01:53:34,639
the two reasons why is evpn either does

2523
01:53:33,280 --> 01:53:37,679
not use control word

2524
01:53:34,639 --> 01:53:40,639
or when it does use control word it's

2525
01:53:37,679 --> 01:53:42,960
r0 it does not have the sequence number

2526
01:53:40,639 --> 01:53:48,080
in it

2527
01:53:42,960 --> 01:53:48,080
the also the application we are

2528
01:53:52,840 --> 01:53:55,840
simply

2529
01:53:56,560 --> 01:54:02,239
this is unrelated um so the second

2530
01:53:59,360 --> 01:54:04,799
opportunity is that some

2531
01:54:02,239 --> 01:54:07,598
ip fragmentation can actually be viewed

2532
01:54:04,800 --> 01:54:11,040
as independent of ip

2533
01:54:07,599 --> 01:54:14,880
so as long as the

2534
01:54:11,040 --> 01:54:17,360
context for that of identification

2535
01:54:14,880 --> 01:54:23,840
in the fragmentation header is available

2536
01:54:17,360 --> 01:54:26,880
next slide please

2537
01:54:23,840 --> 01:54:30,000
so the proposal here is to

2538
01:54:26,880 --> 01:54:33,920
provide independent fragmentation

2539
01:54:30,000 --> 01:54:37,360
and other functions in a shim layer

2540
01:54:33,920 --> 01:54:37,920
without requiring ip so in this evpn

2541
01:54:37,360 --> 01:54:41,199
mpos

2542
01:54:37,920 --> 01:54:42,239
example the after ingress p imposes the

2543
01:54:41,199 --> 01:54:44,719
service labels

2544
01:54:42,239 --> 01:54:46,400
then it will fragment the packet without

2545
01:54:44,719 --> 01:54:49,199
ip encapsulation

2546
01:54:46,400 --> 01:54:51,759
to do that we use a generic

2547
01:54:49,199 --> 01:54:54,320
programmation header

2548
01:54:51,760 --> 01:54:55,280
and in that header there is a next

2549
01:54:54,320 --> 01:54:57,679
header

2550
01:54:55,280 --> 01:54:58,400
field and that will be set to mpos to

2551
01:54:57,679 --> 01:55:04,560
indicate that

2552
01:54:58,400 --> 01:55:07,440
after the gfh there is the mpls payload

2553
01:55:04,560 --> 01:55:08,080
now compared to ipv6 fragmentation

2554
01:55:07,440 --> 01:55:10,080
header

2555
01:55:08,080 --> 01:55:11,519
this gfh will have additional

2556
01:55:10,080 --> 01:55:14,800
information about the

2557
01:55:11,520 --> 01:55:18,480
the source now

2558
01:55:14,800 --> 01:55:21,119
the ingress pe prison gfh

2559
01:55:18,480 --> 01:55:22,799
label basically saying that next header

2560
01:55:21,119 --> 01:55:25,119
is a gfs header

2561
01:55:22,800 --> 01:55:26,880
so then it will impose the transport

2562
01:55:25,119 --> 01:55:30,000
label

2563
01:55:26,880 --> 01:55:30,000
and then send the traffic

2564
01:55:31,119 --> 01:55:35,280
now the egress pe sees that label and

2565
01:55:33,679 --> 01:55:37,599
knows that the gfh

2566
01:55:35,280 --> 01:55:39,920
follows so it reassemble the packet and

2567
01:55:37,599 --> 01:55:41,199
then hand enhance the package to mpos

2568
01:55:39,920 --> 01:55:46,719
for further

2569
01:55:41,199 --> 01:55:49,839
processing next slide please

2570
01:55:46,719 --> 01:55:50,320
so um the fragmentation header the first

2571
01:55:49,840 --> 01:55:53,599
one

2572
01:55:50,320 --> 01:55:55,280
is the ipv6 fragmentation header and the

2573
01:55:53,599 --> 01:55:56,880
next one is that this is generic

2574
01:55:55,280 --> 01:56:00,080
fragmentation header

2575
01:55:56,880 --> 01:56:02,320
the red uh fields are uh

2576
01:56:00,080 --> 01:56:03,920
change the differences from the ipv6

2577
01:56:02,320 --> 01:56:06,960
ones the first one

2578
01:56:03,920 --> 01:56:07,599
uh uh is that four or zero base at the

2579
01:56:06,960 --> 01:56:10,639
very

2580
01:56:07,599 --> 01:56:14,080
first at the very beginning um

2581
01:56:10,639 --> 01:56:16,400
that is for ecmp issue um so there have

2582
01:56:14,080 --> 01:56:19,440
been some discussions on the npos

2583
01:56:16,400 --> 01:56:21,280
powers and best millionaires and this

2584
01:56:19,440 --> 01:56:24,638
ecmp issue was brought up by

2585
01:56:21,280 --> 01:56:28,480
uh stuart and so

2586
01:56:24,639 --> 01:56:31,520
this is a solution for that ecmp issue

2587
01:56:28,480 --> 01:56:35,280
um this is past uh just

2588
01:56:31,520 --> 01:56:35,760
same uh as the first four zero base in

2589
01:56:35,280 --> 01:56:37,960
the uh

2590
01:56:35,760 --> 01:56:39,679
sudower control world um

2591
01:56:37,960 --> 01:56:41,520
[Music]

2592
01:56:39,679 --> 01:56:44,000
i want to say that it's not in the draft

2593
01:56:41,520 --> 01:56:47,040
yet but i'm here presented here

2594
01:56:44,000 --> 01:56:47,040
because of discussion

2595
01:56:47,119 --> 01:56:53,519
the identification field is variable

2596
01:56:50,159 --> 01:56:56,960
um because there are cases

2597
01:56:53,520 --> 01:56:58,159
uh we need to uh to embed the source

2598
01:56:56,960 --> 01:57:01,280
information

2599
01:56:58,159 --> 01:57:03,440
uh in this identification field and

2600
01:57:01,280 --> 01:57:04,480
when when that is the case then there is

2601
01:57:03,440 --> 01:57:07,759
the

2602
01:57:04,480 --> 01:57:10,400
flag bit s as a bit uh set

2603
01:57:07,760 --> 01:57:11,040
to indicate that the identification

2604
01:57:10,400 --> 01:57:13,119
fields

2605
01:57:11,040 --> 01:57:14,800
itself includes the handx information so

2606
01:57:13,119 --> 01:57:15,759
the context from the outer head will not

2607
01:57:14,800 --> 01:57:16,960
be used

2608
01:57:15,760 --> 01:57:18,880
and because of that variable

2609
01:57:16,960 --> 01:57:22,400
identification field we need a

2610
01:57:18,880 --> 01:57:26,159
header lens in the in this

2611
01:57:22,400 --> 01:57:26,159
gfh next slide please

2612
01:57:29,679 --> 01:57:32,719
this slide i already talked about it so

2613
01:57:32,080 --> 01:57:35,679
we can

2614
01:57:32,719 --> 01:57:35,679
get to the next one

2615
01:57:36,560 --> 01:57:43,599
next slide please so coming back to the

2616
01:57:40,560 --> 01:57:46,239
motivations um first it

2617
01:57:43,599 --> 01:57:46,880
solves the evp fragmentation issue

2618
01:57:46,239 --> 01:57:50,080
without

2619
01:57:46,880 --> 01:57:53,280
uh requiring ip transportation

2620
01:57:50,080 --> 01:57:55,280
or incurring ip overheads

2621
01:57:53,280 --> 01:57:58,320
in addition to fragmentation the other

2622
01:57:55,280 --> 01:58:02,559
functions uh provided by ip that can be

2623
01:57:58,320 --> 01:58:03,519
uh supported at this uh independent

2624
01:58:02,560 --> 01:58:07,199
frame level uh

2625
01:58:03,520 --> 01:58:10,719
shimla uh layer as well esp

2626
01:58:07,199 --> 01:58:14,480
is one example and in fact

2627
01:58:10,719 --> 01:58:17,920
this fragmentation or esp functions

2628
01:58:14,480 --> 01:58:21,759
they can be applied to

2629
01:58:17,920 --> 01:58:24,960
many layers including npos beer

2630
01:58:21,760 --> 01:58:27,840
or even ethernet if i triple e so

2631
01:58:24,960 --> 01:58:29,360
so desires so it's truly layer

2632
01:58:27,840 --> 01:58:32,480
independent

2633
01:58:29,360 --> 01:58:34,080
and when it comes to beer the beer

2634
01:58:32,480 --> 01:58:36,799
encapsulation header has a

2635
01:58:34,080 --> 01:58:40,480
protocol field that can specify that the

2636
01:58:36,800 --> 01:58:40,480
next header is the gfh

2637
01:58:41,679 --> 01:58:44,400
next side please

2638
01:58:45,040 --> 01:58:49,360
um okay so we are basically uh seeking

2639
01:58:48,719 --> 01:58:52,560
comments

2640
01:58:49,360 --> 01:58:54,960
uh there have been uh uh presentations

2641
01:58:52,560 --> 01:58:58,560
and discussion in various working groups

2642
01:58:54,960 --> 01:59:01,119
and uh about use case and uh

2643
01:58:58,560 --> 01:59:03,040
if this is a solution that we do want to

2644
01:59:01,119 --> 01:59:05,199
work on then

2645
01:59:03,040 --> 01:59:06,880
then we we need to find the home right

2646
01:59:05,199 --> 01:59:09,440
now is the or draft is

2647
01:59:06,880 --> 01:59:11,440
for tsv working group but it can be any

2648
01:59:09,440 --> 01:59:14,638
group that we deem

2649
01:59:11,440 --> 01:59:17,919
appropriate next slide please

2650
01:59:14,639 --> 01:59:20,560
oh actually no more so i'm done with the

2651
01:59:17,920 --> 01:59:20,560
presentation

2652
01:59:23,199 --> 01:59:30,239
okay we may got cut off but first in

2653
01:59:25,920 --> 01:59:32,320
here stuart

2654
01:59:30,239 --> 01:59:34,638
okay so um you know thank you for

2655
01:59:32,320 --> 01:59:37,759
improving the the draft a little bit

2656
01:59:34,639 --> 01:59:39,440
um i'm still worried about

2657
01:59:37,760 --> 01:59:40,960
how you're going to present prevent

2658
01:59:39,440 --> 01:59:44,559
reassembly lock up

2659
01:59:40,960 --> 01:59:48,000
because um basically

2660
01:59:44,560 --> 01:59:50,719
um you've got nothing to clear the

2661
01:59:48,000 --> 01:59:52,639
uh to clear the resources if um

2662
01:59:50,719 --> 01:59:54,480
subsequent packets fail to arrive to

2663
01:59:52,639 --> 01:59:58,480
complete the packet

2664
01:59:54,480 --> 02:00:00,799
um and i do wonder whether you should

2665
01:59:58,480 --> 02:00:04,239
have looked also at using the

2666
02:00:00,800 --> 02:00:08,400
um pseudo wire header design with just

2667
02:00:04,239 --> 02:00:10,718
adding an identifier to it but i'm still

2668
02:00:08,400 --> 02:00:12,080
also worried about this design in i'm

2669
02:00:10,719 --> 02:00:13,199
not quite sure what problem you're

2670
02:00:12,080 --> 02:00:16,320
fixing because

2671
02:00:13,199 --> 02:00:17,280
if it's ipv6 you're running then pmtu

2672
02:00:16,320 --> 02:00:18,480
discovery will

2673
02:00:17,280 --> 02:00:21,920
will fix the problem it will

2674
02:00:18,480 --> 02:00:21,919
automatically back down for you

2675
02:00:22,159 --> 02:00:26,159
um so let me answer the third question

2676
02:00:25,119 --> 02:00:29,519
first uh

2677
02:00:26,159 --> 02:00:32,559
there are cases you uh you cannot uh

2678
02:00:29,520 --> 02:00:35,599
uh uh ask the uh

2679
02:00:32,560 --> 02:00:39,520
uh the traffic source uh uh

2680
02:00:35,599 --> 02:00:42,800
to uh to do fragmentation uh for example

2681
02:00:39,520 --> 02:00:46,239
you are a evp provider and your

2682
02:00:42,800 --> 02:00:48,320
m2 is limited and yet you are suppose

2683
02:00:46,239 --> 02:00:50,638
supposed to provide for transparent

2684
02:00:48,320 --> 02:00:52,480
services and you cannot ask your

2685
02:00:50,639 --> 02:00:54,960
customer to say that hey you need to

2686
02:00:52,480 --> 02:00:58,320
tone down your or your mtu

2687
02:00:54,960 --> 02:01:01,040
um so that that's the use case

2688
02:00:58,320 --> 02:01:02,480
um the the i think the and then that

2689
02:01:01,040 --> 02:01:05,679
your first question is

2690
02:01:02,480 --> 02:01:06,638
uh uh uh what what what was the first

2691
02:01:05,679 --> 02:01:09,840
question again

2692
02:01:06,639 --> 02:01:11,760
uh reassembly lock up okay um

2693
02:01:09,840 --> 02:01:12,880
you you've got all these sort of you've

2694
02:01:11,760 --> 02:01:16,320
got

2695
02:01:12,880 --> 02:01:20,080
stray fragments lying around in the uh

2696
02:01:16,320 --> 02:01:20,480
egress pe um that's a generic problem

2697
02:01:20,080 --> 02:01:23,280
that's

2698
02:01:20,480 --> 02:01:25,440
uh even if you are not using this one

2699
02:01:23,280 --> 02:01:28,320
let's say you are using ipv6

2700
02:01:25,440 --> 02:01:29,360
encapsulation and you fragment uh using

2701
02:01:28,320 --> 02:01:32,960
ipv6

2702
02:01:29,360 --> 02:01:35,280
or even in the pseudowire case we

2703
02:01:32,960 --> 02:01:36,000
when you do have a fragmentation

2704
02:01:35,280 --> 02:01:38,880
reassembly

2705
02:01:36,000 --> 02:01:41,679
based on the sequence numbers um a

2706
02:01:38,880 --> 02:01:45,119
egress pe could have many of those uh

2707
02:01:41,679 --> 02:01:46,000
ones uh it's the same problem not in a

2708
02:01:45,119 --> 02:01:47,679
pseudo-eye

2709
02:01:46,000 --> 02:01:49,679
because a sudower is a point-to-point

2710
02:01:47,679 --> 02:01:50,639
solution so the next packet must be for

2711
02:01:49,679 --> 02:01:53,599
the pseudo wire

2712
02:01:50,639 --> 02:01:54,159
and will release the lock up so you will

2713
02:01:53,599 --> 02:01:55,360
never have

2714
02:01:54,159 --> 02:01:57,839
any more traffic going across your

2715
02:01:55,360 --> 02:01:57,839
pseudo wire

2716
02:01:58,639 --> 02:02:02,639
again or it gets released well actually

2717
02:02:01,920 --> 02:02:04,800
here

2718
02:02:02,639 --> 02:02:06,719
it's somewhat related to what sammy was

2719
02:02:04,800 --> 02:02:09,360
saying um

2720
02:02:06,719 --> 02:02:10,159
sammy was basically using the uh source

2721
02:02:09,360 --> 02:02:12,880
sources

2722
02:02:10,159 --> 02:02:14,799
to to introduce this uh pseudo-wire

2723
02:02:12,880 --> 02:02:18,159
context into this evmp

2724
02:02:14,800 --> 02:02:21,280
concept so here is the same thing

2725
02:02:18,159 --> 02:02:24,159
um uh the uh

2726
02:02:21,280 --> 02:02:25,920
the the the the context either embedded

2727
02:02:24,159 --> 02:02:27,040
in the identification field or in the

2728
02:02:25,920 --> 02:02:29,199
outer header

2729
02:02:27,040 --> 02:02:30,560
will give you that that pseudo-wildlife

2730
02:02:29,199 --> 02:02:32,960
context so

2731
02:02:30,560 --> 02:02:34,960
we can discuss that more but i think

2732
02:02:32,960 --> 02:02:36,960
it's it's the same thing

2733
02:02:34,960 --> 02:02:41,119
um and then your second question or

2734
02:02:36,960 --> 02:02:41,119
comment uh okay what was that again

2735
02:02:43,440 --> 02:02:48,239
i can't remember what it was now um the

2736
02:02:46,480 --> 02:02:50,559
key ones were pmtud

2737
02:02:48,239 --> 02:02:52,080
and which will happen naturally right

2738
02:02:50,560 --> 02:02:53,760
it's just you don't have to do anything

2739
02:02:52,080 --> 02:02:57,519
that automatically happens

2740
02:02:53,760 --> 02:02:59,920
um and the lock-up problem

2741
02:02:57,520 --> 02:03:02,159
okay yeah we can continue our offline

2742
02:02:59,920 --> 02:03:02,159
yeah

2743
02:03:07,280 --> 02:03:13,599
basically yeah

2744
02:03:11,280 --> 02:03:14,719
i have to admit i only read this during

2745
02:03:13,599 --> 02:03:19,119
the spirited

2746
02:03:14,719 --> 02:03:19,119
discussion of the previous draft uh

2747
02:03:19,280 --> 02:03:23,280
from a procedural standpoint you might

2748
02:03:21,440 --> 02:03:26,559
have to split up the

2749
02:03:23,280 --> 02:03:27,840
the signaling from the transport aspects

2750
02:03:26,560 --> 02:03:30,159
it might be better since there are

2751
02:03:27,840 --> 02:03:32,639
different areas that's just procedural

2752
02:03:30,159 --> 02:03:34,879
and uh there's also some details in

2753
02:03:32,639 --> 02:03:37,360
those bfb3 that need to be

2754
02:03:34,880 --> 02:03:39,360
changed but that's that can be done i

2755
02:03:37,360 --> 02:03:42,000
have one question

2756
02:03:39,360 --> 02:03:42,559
like i said i didn't really i only just

2757
02:03:42,000 --> 02:03:45,920
scan

2758
02:03:42,560 --> 02:03:48,440
read through this draft quickly

2759
02:03:45,920 --> 02:03:50,000
i don't really understand where the

2760
02:03:48,440 --> 02:03:51,759
fragmentation

2761
02:03:50,000 --> 02:03:53,040
the fragmentation is being done in the

2762
02:03:51,760 --> 02:03:56,560
ingress p e

2763
02:03:53,040 --> 02:03:58,480
right yes

2764
02:03:56,560 --> 02:04:00,400
okay wouldn't it have the state already

2765
02:03:58,480 --> 02:04:02,638
of those labels

2766
02:04:00,400 --> 02:04:04,400
rather than having to signal them across

2767
02:04:02,639 --> 02:04:08,079
the uh

2768
02:04:04,400 --> 02:04:10,079
say the vpn domain i don't know i i

2769
02:04:08,079 --> 02:04:11,920
i maybe a picture or something would be

2770
02:04:10,079 --> 02:04:13,840
good in the draft

2771
02:04:11,920 --> 02:04:15,520
because it you know it seemed like there

2772
02:04:13,840 --> 02:04:17,520
was a lot of knowledge

2773
02:04:15,520 --> 02:04:20,480
i couldn't visualize the problem in the

2774
02:04:17,520 --> 02:04:22,320
in the quick looking at it quickly

2775
02:04:20,480 --> 02:04:24,480
okay i'll add a picture but a quick

2776
02:04:22,320 --> 02:04:25,920
answer is that the labels i assume

2777
02:04:24,480 --> 02:04:29,199
you're referring to the gf

2778
02:04:25,920 --> 02:04:31,520
gfh labels um absolutely yes

2779
02:04:29,199 --> 02:04:32,559
okay the reason why they are needed is

2780
02:04:31,520 --> 02:04:36,159
that

2781
02:04:32,560 --> 02:04:39,679
uh mpos does not have a

2782
02:04:36,159 --> 02:04:42,960
mean to a way to indicate what is the

2783
02:04:39,679 --> 02:04:46,079
next header what what follows after the

2784
02:04:42,960 --> 02:04:49,040
bottom of the label stack um

2785
02:04:46,079 --> 02:04:50,960
so that the label uh gfh label will

2786
02:04:49,040 --> 02:04:54,480
serve the purple saying that okay

2787
02:04:50,960 --> 02:04:57,760
the next header is a gfh header

2788
02:04:54,480 --> 02:05:01,839
and then additionally the label can

2789
02:04:57,760 --> 02:05:05,119
optionally identify say a which

2790
02:05:01,840 --> 02:05:08,079
source which node sends in this package

2791
02:05:05,119 --> 02:05:09,839
uh in addition to the the gfh semantics

2792
02:05:08,079 --> 02:05:12,559
and that is i would be like

2793
02:05:09,840 --> 02:05:12,880
i'll be like the ce right the ce right

2794
02:05:12,560 --> 02:05:16,159
no

2795
02:05:12,880 --> 02:05:20,000
the pe i mean or the pe okay yeah

2796
02:05:16,159 --> 02:05:23,360
and that is actually very similar to uh

2797
02:05:20,000 --> 02:05:25,920
to uh uh to the uh sources

2798
02:05:23,360 --> 02:05:26,639
in sami's presentation it has happened

2799
02:05:25,920 --> 02:05:30,079
that

2800
02:05:26,639 --> 02:05:33,280
the two presentations are somewhat uh

2801
02:05:30,079 --> 02:05:35,920
related even though

2802
02:05:33,280 --> 02:05:38,159
i just realized that that that that

2803
02:05:35,920 --> 02:05:38,159
point

2804
02:05:40,719 --> 02:05:43,360
okay thanks

2805
02:05:47,040 --> 02:05:50,239
okay stuart did you want to make another

2806
02:05:48,480 --> 02:05:52,559
comment you know

2807
02:05:50,239 --> 02:05:54,400
um so that i remember where the question

2808
02:05:52,560 --> 02:05:55,599
was you kind of alluded to it but you

2809
02:05:54,400 --> 02:05:57,839
haven't really answered it

2810
02:05:55,599 --> 02:05:58,960
which is i'm not sure why you need type

2811
02:05:57,840 --> 02:06:02,159
information here

2812
02:05:58,960 --> 02:06:06,079
the way mpls works is that the payload

2813
02:06:02,159 --> 02:06:09,440
type is implicit in the label itself

2814
02:06:06,079 --> 02:06:13,040
so i'm struggling to understand

2815
02:06:09,440 --> 02:06:13,040
why what the point of the

2816
02:06:13,280 --> 02:06:19,519
next the next header is

2817
02:06:16,320 --> 02:06:23,440
other than to sneak in a uh

2818
02:06:19,520 --> 02:06:26,159
an mpls type without further discussion

2819
02:06:23,440 --> 02:06:26,638
uh you mean the next header value uh

2820
02:06:26,159 --> 02:06:29,679
field

2821
02:06:26,639 --> 02:06:31,599
in the achievement header itself yeah i

2822
02:06:29,679 --> 02:06:32,800
mean everything else we've done we've

2823
02:06:31,599 --> 02:06:35,360
done on label typing

2824
02:06:32,800 --> 02:06:36,960
so this is a a change to the mpls

2825
02:06:35,360 --> 02:06:42,159
architecture

2826
02:06:36,960 --> 02:06:45,599
um no the the so the the the gfh label

2827
02:06:42,159 --> 02:06:48,159
indicates that the gfh follows

2828
02:06:45,599 --> 02:06:49,520
but how do we know what follows after

2829
02:06:48,159 --> 02:06:51,360
gfh

2830
02:06:49,520 --> 02:06:53,280
so that's why we need the next header in

2831
02:06:51,360 --> 02:06:56,400
the gfh itself

2832
02:06:53,280 --> 02:06:59,040
because it could be that uh uh

2833
02:06:56,400 --> 02:07:01,280
after the gfh header it's it's no longer

2834
02:06:59,040 --> 02:07:03,920
in pos it could be ip or it could be

2835
02:07:01,280 --> 02:07:06,079
whatever anything else

2836
02:07:03,920 --> 02:07:08,000
well how did you know that to start with

2837
02:07:06,079 --> 02:07:11,199
i mean we've built everything else

2838
02:07:08,000 --> 02:07:13,360
without needing that information

2839
02:07:11,199 --> 02:07:14,638
so presumably you were expecting this to

2840
02:07:13,360 --> 02:07:17,119
be an ethernet frame or

2841
02:07:14,639 --> 02:07:18,719
something else frame when you set the uh

2842
02:07:17,119 --> 02:07:21,598
set the pseudo wire up

2843
02:07:18,719 --> 02:07:23,040
and all you've done is to all you need

2844
02:07:21,599 --> 02:07:26,719
to do is to provision

2845
02:07:23,040 --> 02:07:29,840
this particular um pseudo wire such that

2846
02:07:26,719 --> 02:07:31,119
you expect to find a the fragmentation

2847
02:07:29,840 --> 02:07:32,639
header there

2848
02:07:31,119 --> 02:07:34,639
and it's probably simpler to always send

2849
02:07:32,639 --> 02:07:38,400
the fragmentation header

2850
02:07:34,639 --> 02:07:40,079
um no no not necessarily

2851
02:07:38,400 --> 02:07:41,839
when there when there is no need to do

2852
02:07:40,079 --> 02:07:42,480
the fragmentation then you don't need

2853
02:07:41,840 --> 02:07:45,520
that

2854
02:07:42,480 --> 02:07:49,199
uh gfh and in the

2855
02:07:45,520 --> 02:07:52,560
evpn mpos case uh uh definitely after

2856
02:07:49,199 --> 02:07:54,799
the gfh it's a it's a mpls

2857
02:07:52,560 --> 02:07:56,480
another npr's label stack base basically

2858
02:07:54,800 --> 02:07:59,920
is the service label

2859
02:07:56,480 --> 02:08:00,638
but there could be other uh use cases

2860
02:07:59,920 --> 02:08:03,360
where

2861
02:08:00,639 --> 02:08:04,639
after gfh is no longer in pure uh

2862
02:08:03,360 --> 02:08:06,719
payload

2863
02:08:04,639 --> 02:08:08,800
so i think this needs an a discussion in

2864
02:08:06,719 --> 02:08:11,760
the mpls working group

2865
02:08:08,800 --> 02:08:13,679
definitely we uh we uh i also have a

2866
02:08:11,760 --> 02:08:14,239
presentation schedule for npr's working

2867
02:08:13,679 --> 02:08:16,480
group

2868
02:08:14,239 --> 02:08:17,839
and we uh we we do want to have more

2869
02:08:16,480 --> 02:08:21,040
discussions in uh

2870
02:08:17,840 --> 02:08:22,079
in the meaningless as well we still have

2871
02:08:21,040 --> 02:08:24,480
thank you

2872
02:08:22,079 --> 02:08:24,480
thank you

2873
02:08:27,679 --> 02:08:33,119
okay uh i think we probably should wrap

2874
02:08:30,639 --> 02:08:36,000
it up now with 10 minutes over

2875
02:08:33,119 --> 02:08:36,639
unless you have a 10 second comment ac

2876
02:08:36,000 --> 02:08:39,840
are you gone

2877
02:08:36,639 --> 02:08:43,199
okay so thanks very much everybody

2878
02:08:39,840 --> 02:08:43,199
and uh see you next time

2879
02:08:46,639 --> 02:08:51,840
bye thank you bye

