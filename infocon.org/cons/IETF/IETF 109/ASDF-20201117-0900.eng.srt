1
00:00:05,040 --> 00:00:10,240
um

2
00:00:06,640 --> 00:00:14,160
we're gonna so welcome to the asdf uh

3
00:00:10,240 --> 00:00:17,759
uh working group um and uh

4
00:00:14,160 --> 00:00:20,720
we'll just go through things here

5
00:00:17,760 --> 00:00:22,400
there we go so note well um you've

6
00:00:20,720 --> 00:00:23,919
probably seen this already but if you

7
00:00:22,400 --> 00:00:27,439
haven't then

8
00:00:23,920 --> 00:00:30,400
please take a look at um

9
00:00:27,439 --> 00:00:31,920
at the note well ask some questions um

10
00:00:30,400 --> 00:00:32,479
and there's quite a number of people

11
00:00:31,920 --> 00:00:34,399
that

12
00:00:32,479 --> 00:00:35,599
you can come to friendly ads working

13
00:00:34,399 --> 00:00:39,760
group chairs

14
00:00:35,600 --> 00:00:42,800
um please be uh nice and professional

15
00:00:39,760 --> 00:00:44,000
um we're a pretty small group so if you

16
00:00:42,800 --> 00:00:46,718
have something to interject

17
00:00:44,000 --> 00:00:48,320
then um to the extent of politeness

18
00:00:46,719 --> 00:00:50,719
please just do that

19
00:00:48,320 --> 00:00:52,399
um you can just turn on the mic or you

20
00:00:50,719 --> 00:00:53,920
can go go in the queue if you

21
00:00:52,399 --> 00:00:55,520
aren't ready if you aren't trying to

22
00:00:53,920 --> 00:00:58,559
speak to the point uh

23
00:00:55,520 --> 00:01:00,480
but you have another point then um

24
00:00:58,559 --> 00:01:02,559
put yourself in the queue and we'll get

25
00:01:00,480 --> 00:01:03,199
to you but if you would just want to

26
00:01:02,559 --> 00:01:05,119
interact on

27
00:01:03,199 --> 00:01:07,280
one on a particular point then i would

28
00:01:05,119 --> 00:01:08,560
say don't stand on the queue at this

29
00:01:07,280 --> 00:01:10,240
point

30
00:01:08,560 --> 00:01:12,880
uh so there's some more details of the

31
00:01:10,240 --> 00:01:15,439
note well um you wanna

32
00:01:12,880 --> 00:01:16,158
said know what's going on be read bcp

33
00:01:15,439 --> 00:01:18,880
nine

34
00:01:16,159 --> 00:01:20,320
and uh the other ones there i'm sure

35
00:01:18,880 --> 00:01:22,880
you've all seen it

36
00:01:20,320 --> 00:01:23,600
so uh today we're gonna go through a

37
00:01:22,880 --> 00:01:27,679
bunch of

38
00:01:23,600 --> 00:01:30,158
things specifically um status update

39
00:01:27,680 --> 00:01:32,479
on the group and then we're going to get

40
00:01:30,159 --> 00:01:34,000
right into the sdf 1.1 features and the

41
00:01:32,479 --> 00:01:35,679
results from the hackathon

42
00:01:34,000 --> 00:01:37,280
is there any other items that someone

43
00:01:35,680 --> 00:01:39,520
thinks needs to go into the agenda at

44
00:01:37,280 --> 00:01:42,640
this point

45
00:01:39,520 --> 00:01:42,640
now's the time to ask

46
00:01:45,680 --> 00:01:52,560
hearing none we're gonna move on

47
00:01:49,439 --> 00:01:55,520
so uh there is a kodi imd for which is

48
00:01:52,560 --> 00:01:58,880
an ether pad for notes ahri is

49
00:01:55,520 --> 00:02:02,079
uh ca is adding things please

50
00:01:58,880 --> 00:02:05,199
feel free to add correct and uh

51
00:02:02,079 --> 00:02:08,878
copy and paste as you wish into it um

52
00:02:05,200 --> 00:02:10,959
to things um we are using meet echo

53
00:02:08,878 --> 00:02:12,399
if you aren't on it uh then you probably

54
00:02:10,959 --> 00:02:13,680
can't hear me but you may be on the

55
00:02:12,400 --> 00:02:15,120
audio queue

56
00:02:13,680 --> 00:02:16,959
there is a jabber room that you can

57
00:02:15,120 --> 00:02:19,440
connect directly to or

58
00:02:16,959 --> 00:02:20,239
you can also click on the tab with the

59
00:02:19,440 --> 00:02:22,000
two

60
00:02:20,239 --> 00:02:23,599
red well they're red on my screen

61
00:02:22,000 --> 00:02:26,480
balloons um

62
00:02:23,599 --> 00:02:28,160
to there um and the blue sheet is

63
00:02:26,480 --> 00:02:29,040
managed by meat echo so you don't need

64
00:02:28,160 --> 00:02:32,319
to do anything

65
00:02:29,040 --> 00:02:34,160
and we have a note taker already so

66
00:02:32,319 --> 00:02:35,760
uh our working group was in fact

67
00:02:34,160 --> 00:02:38,720
chartered um finally in

68
00:02:35,760 --> 00:02:40,879
october um my name is michael richardson

69
00:02:38,720 --> 00:02:42,319
and my colleague is nicholas whiddell

70
00:02:40,879 --> 00:02:45,120
we are the co-chairs of this working

71
00:02:42,319 --> 00:02:48,319
group so hello and thank you for coming

72
00:02:45,120 --> 00:02:50,640
um we had a bit of a hallway meeting uh

73
00:02:48,319 --> 00:02:51,679
as the working group was uh installing

74
00:02:50,640 --> 00:02:54,640
the pro pro

75
00:02:51,680 --> 00:02:55,040
uh forming process and we did a bit of a

76
00:02:54,640 --> 00:02:58,159
uh

77
00:02:55,040 --> 00:03:00,239
youtube sdf 1.0 tutorial

78
00:02:58,159 --> 00:03:01,760
um so basically the results of that are

79
00:03:00,239 --> 00:03:02,159
on youtube if you want to know a lot

80
00:03:01,760 --> 00:03:05,359
about

81
00:03:02,159 --> 00:03:07,200
sdf then and how it came to be then

82
00:03:05,360 --> 00:03:07,680
please go there um and we'll be doing a

83
00:03:07,200 --> 00:03:10,480
little bit

84
00:03:07,680 --> 00:03:12,239
a few minutes of that here uh we did

85
00:03:10,480 --> 00:03:15,599
have one virtual interim

86
00:03:12,239 --> 00:03:19,120
um november two as i recall um and

87
00:03:15,599 --> 00:03:19,920
we adopted uh the initial draft ietf

88
00:03:19,120 --> 00:03:23,599
asdf

89
00:03:19,920 --> 00:03:26,798
sdf that's a bit of alliteration there

90
00:03:23,599 --> 00:03:30,159
um and so that is our

91
00:03:26,799 --> 00:03:33,120
1.0 at this point and we are working

92
00:03:30,159 --> 00:03:34,480
now on 1.1 there was a hackathon which

93
00:03:33,120 --> 00:03:37,280
we're going to hear about uh

94
00:03:34,480 --> 00:03:38,159
last week where a number of issues with

95
00:03:37,280 --> 00:03:41,760
uh our

96
00:03:38,159 --> 00:03:45,359
limitations with what we called 1.0 um

97
00:03:41,760 --> 00:03:48,720
were discussed and some solutions found

98
00:03:45,360 --> 00:03:50,080
and today our plans are basically to uh

99
00:03:48,720 --> 00:03:51,920
to have this meeting and then we're

100
00:03:50,080 --> 00:03:54,480
going to plan essentially a virtual

101
00:03:51,920 --> 00:03:56,319
interim on approximately a monthly basis

102
00:03:54,480 --> 00:03:58,079
um and so we're looking to schedule one

103
00:03:56,319 --> 00:04:02,238
in december

104
00:03:58,080 --> 00:04:03,920
um middle way um and hopefully that time

105
00:04:02,239 --> 00:04:07,040
period that we pick for december will

106
00:04:03,920 --> 00:04:09,359
will repeat every month um for a number

107
00:04:07,040 --> 00:04:11,519
of months

108
00:04:09,360 --> 00:04:13,360
uh so we have a mailing list if you're

109
00:04:11,519 --> 00:04:13,840
not on it you can get on it by going to

110
00:04:13,360 --> 00:04:16,400
this

111
00:04:13,840 --> 00:04:17,280
this link um standard mailman type

112
00:04:16,399 --> 00:04:19,440
process

113
00:04:17,279 --> 00:04:21,839
uh we are working in github with the

114
00:04:19,440 --> 00:04:25,600
rfcs typically so you will see

115
00:04:21,839 --> 00:04:28,000
issues um being discussed in github

116
00:04:25,600 --> 00:04:28,800
uh nicholas and i i believe we have not

117
00:04:28,000 --> 00:04:32,560
yet hooked up

118
00:04:28,800 --> 00:04:35,919
the uh github summary to mailing list

119
00:04:32,560 --> 00:04:37,680
um web hook um

120
00:04:35,919 --> 00:04:39,440
and but we will be doing that so there

121
00:04:37,680 --> 00:04:41,199
will be at least a weekly summary coming

122
00:04:39,440 --> 00:04:44,560
to the mailing list of things that have

123
00:04:41,199 --> 00:04:47,120
have occurred on github and

124
00:04:44,560 --> 00:04:49,199
we will of course uh expect that the

125
00:04:47,120 --> 00:04:49,520
authors will bring any large contentious

126
00:04:49,199 --> 00:04:52,160
type

127
00:04:49,520 --> 00:04:53,680
issues to the mailing list for a summary

128
00:04:52,160 --> 00:04:56,320
of what's going on

129
00:04:53,680 --> 00:04:58,400
there um and the goal of the working

130
00:04:56,320 --> 00:05:00,240
group is we are going to be running in a

131
00:04:58,400 --> 00:05:02,880
kind of implementation

132
00:05:00,240 --> 00:05:03,680
uh uh draft where we will say that

133
00:05:02,880 --> 00:05:06,479
certain things are

134
00:05:03,680 --> 00:05:08,240
relatively stable and could be go into

135
00:05:06,479 --> 00:05:10,320
code and other things may be less stable

136
00:05:08,240 --> 00:05:12,880
but we'll basically identify

137
00:05:10,320 --> 00:05:15,120
which documents are considered stable

138
00:05:12,880 --> 00:05:17,759
enough to be implemented

139
00:05:15,120 --> 00:05:18,160
by the various filtering converters that

140
00:05:17,759 --> 00:05:21,440
are

141
00:05:18,160 --> 00:05:23,039
are already out there the tool chains

142
00:05:21,440 --> 00:05:24,880
and it's a goal after a couple of

143
00:05:23,039 --> 00:05:26,000
iterations of this that

144
00:05:24,880 --> 00:05:29,120
we will get to the point where we're

145
00:05:26,000 --> 00:05:30,960
ready to publish a rfc

146
00:05:29,120 --> 00:05:34,560
so i'm turning this over to you nicholas

147
00:05:30,960 --> 00:05:37,680
to to give us this short tutorial

148
00:05:34,560 --> 00:05:38,800
the five minute version yes or even a

149
00:05:37,680 --> 00:05:41,520
two minute version

150
00:05:38,800 --> 00:05:41,919
um we have uh as michael said we have

151
00:05:41,520 --> 00:05:44,719
done

152
00:05:41,919 --> 00:05:45,758
tutorials previously but this is just to

153
00:05:44,720 --> 00:05:48,960
give you a brief

154
00:05:45,759 --> 00:05:51,759
uh overview of what this is all about

155
00:05:48,960 --> 00:05:52,000
or where this came from the sdf work and

156
00:05:51,759 --> 00:05:54,960
so

157
00:05:52,000 --> 00:05:55,840
on uh the problem we started out with

158
00:05:54,960 --> 00:05:58,239
two years ago

159
00:05:55,840 --> 00:05:59,599
was basically that there were several

160
00:05:58,240 --> 00:06:04,240
standardized

161
00:05:59,600 --> 00:06:04,240
iot data models and and the

162
00:06:04,319 --> 00:06:09,600
i mean ocf oma sigb and so on

163
00:06:07,440 --> 00:06:11,680
and uh so while they were standardized

164
00:06:09,600 --> 00:06:13,360
they were not really compatible

165
00:06:11,680 --> 00:06:15,280
and while they could be work made to

166
00:06:13,360 --> 00:06:16,400
work together uh there was a high

167
00:06:15,280 --> 00:06:19,039
integration cost

168
00:06:16,400 --> 00:06:19,599
um because there is basically no sort of

169
00:06:19,039 --> 00:06:22,159
standardized

170
00:06:19,600 --> 00:06:23,520
and probability between these models and

171
00:06:22,160 --> 00:06:24,639
so there was a group form called one

172
00:06:23,520 --> 00:06:27,440
data model

173
00:06:24,639 --> 00:06:28,160
and an election group between these

174
00:06:27,440 --> 00:06:31,759
couple of different

175
00:06:28,160 --> 00:06:34,880
seos first we tried to

176
00:06:31,759 --> 00:06:37,360
address this by selecting one

177
00:06:34,880 --> 00:06:39,520
solution but that did not work and then

178
00:06:37,360 --> 00:06:42,800
we came up with the solution to actually

179
00:06:39,520 --> 00:06:43,280
instead of trying to select one we

180
00:06:42,800 --> 00:06:45,840
actually

181
00:06:43,280 --> 00:06:47,520
introduced a new layer that facilitates

182
00:06:45,840 --> 00:06:48,880
translation between the different data

183
00:06:47,520 --> 00:06:52,080
models

184
00:06:48,880 --> 00:06:53,759
via a neutral format that was

185
00:06:52,080 --> 00:06:56,159
that could help with this translation

186
00:06:53,759 --> 00:06:59,680
and this proved very successful

187
00:06:56,160 --> 00:07:02,639
so we have a translation established

188
00:06:59,680 --> 00:07:03,599
between a couple of these different

189
00:07:02,639 --> 00:07:06,479
ecosystems

190
00:07:03,599 --> 00:07:08,400
um via this neutral format and this

191
00:07:06,479 --> 00:07:09,039
neutral format is what's the topic about

192
00:07:08,400 --> 00:07:11,440
today

193
00:07:09,039 --> 00:07:13,039
the semantic definition format and which

194
00:07:11,440 --> 00:07:15,039
is now an itf

195
00:07:13,039 --> 00:07:16,159
so this slide was used a bit old but

196
00:07:15,039 --> 00:07:19,440
it's now an itf

197
00:07:16,160 --> 00:07:21,440
as this working group and uh so

198
00:07:19,440 --> 00:07:22,880
in addition to the work in the asdf

199
00:07:21,440 --> 00:07:24,639
group there's also the work in the one

200
00:07:22,880 --> 00:07:26,319
data model alliation group there's a

201
00:07:24,639 --> 00:07:27,440
link to it at the bottom here

202
00:07:26,319 --> 00:07:29,599
please go there if you want more

203
00:07:27,440 --> 00:07:31,840
information because they are doing

204
00:07:29,599 --> 00:07:33,840
a couple of complementary things to the

205
00:07:31,840 --> 00:07:37,280
stuff in acf so while the format is

206
00:07:33,840 --> 00:07:39,919
defined specified and developed in iatf

207
00:07:37,280 --> 00:07:40,799
uh there is uh work on tool chains i

208
00:07:39,919 --> 00:07:43,758
work on

209
00:07:40,800 --> 00:07:45,360
sort of enabling this interoperability

210
00:07:43,759 --> 00:07:48,400
between the ecosystems

211
00:07:45,360 --> 00:07:50,000
and also there is work to to define a

212
00:07:48,400 --> 00:07:52,000
set of harmonized

213
00:07:50,000 --> 00:07:53,759
thing models or device models that can

214
00:07:52,000 --> 00:07:54,960
be used widely across these different

215
00:07:53,759 --> 00:07:56,800
ecosystems

216
00:07:54,960 --> 00:07:58,878
so this was just a super quick recap to

217
00:07:56,800 --> 00:07:59,919
give you some frame of of what this is

218
00:07:58,879 --> 00:08:01,599
all about

219
00:07:59,919 --> 00:08:03,440
and so the rest of this meeting of

220
00:08:01,599 --> 00:08:06,240
course will be around sdf

221
00:08:03,440 --> 00:08:08,000
and the work in the asdf group but this

222
00:08:06,240 --> 00:08:10,400
provides some frame about what this is

223
00:08:08,000 --> 00:08:10,400
all about

224
00:08:10,479 --> 00:08:13,840
yes next slide

225
00:08:14,319 --> 00:08:20,160
um uh so just a few words around

226
00:08:18,240 --> 00:08:21,520
the asdf work as michael said we just

227
00:08:20,160 --> 00:08:24,080
kicked off

228
00:08:21,520 --> 00:08:25,599
this means that we were we are would

229
00:08:24,080 --> 00:08:26,318
like to reach out to additional

230
00:08:25,599 --> 00:08:28,000
organizations

231
00:08:26,319 --> 00:08:29,520
we start out with the with the

232
00:08:28,000 --> 00:08:31,919
organizations that are in

233
00:08:29,520 --> 00:08:33,838
in one dm of course but we are super

234
00:08:31,919 --> 00:08:36,000
happy to bring in others

235
00:08:33,839 --> 00:08:36,880
and obviously the value of asdf

236
00:08:36,000 --> 00:08:39,599
increases

237
00:08:36,880 --> 00:08:40,958
um what the more that other

238
00:08:39,599 --> 00:08:42,399
organizations join

239
00:08:40,958 --> 00:08:44,079
and we can create the interoperability

240
00:08:42,399 --> 00:08:45,360
between all the larger set of

241
00:08:44,080 --> 00:08:47,200
organizations

242
00:08:45,360 --> 00:08:50,000
so far in the short period since we

243
00:08:47,200 --> 00:08:53,200
launched we have been doing two things

244
00:08:50,000 --> 00:08:55,680
uh one is

245
00:08:53,200 --> 00:08:56,480
we presented the asdf work to omas

246
00:08:55,680 --> 00:08:59,519
backworks

247
00:08:56,480 --> 00:09:00,320
dmsc group working online with m2m and

248
00:08:59,519 --> 00:09:03,760
another thing

249
00:09:00,320 --> 00:09:04,320
is that sdf uh as as the previous

250
00:09:03,760 --> 00:09:07,680
version

251
00:09:04,320 --> 00:09:11,279
uh is now part of a proposal to

252
00:09:07,680 --> 00:09:13,040
iso iec jtc1 sc41

253
00:09:11,279 --> 00:09:15,519
for iot thing modeling in their

254
00:09:13,040 --> 00:09:18,240
architectural work

255
00:09:15,519 --> 00:09:20,160
and this will of course eventually refer

256
00:09:18,240 --> 00:09:21,440
to the final rfc coming out of this

257
00:09:20,160 --> 00:09:24,560
group

258
00:09:21,440 --> 00:09:26,240
so this is a bit of a call to action

259
00:09:24,560 --> 00:09:28,079
if your organization works with iot data

260
00:09:26,240 --> 00:09:31,040
models and you're not already involved

261
00:09:28,080 --> 00:09:32,560
please let us know and talk to us and we

262
00:09:31,040 --> 00:09:36,480
can try to

263
00:09:32,560 --> 00:09:39,359
loop you in and bring onboard this

264
00:09:36,480 --> 00:09:39,360
yes that was all

265
00:09:40,959 --> 00:09:44,160
remember a boat from eve about what kind

266
00:09:42,959 --> 00:09:50,719
of responses were

267
00:09:44,160 --> 00:09:53,040
received in l2 lw m2m and the jtc one

268
00:09:50,720 --> 00:09:54,320
is it is it are you in a position to

269
00:09:53,040 --> 00:09:56,880
tell to relate what

270
00:09:54,320 --> 00:09:57,360
happened there oh yeah oh sorry yeah so

271
00:09:56,880 --> 00:10:00,320
in

272
00:09:57,360 --> 00:10:02,399
light with m2m uh or in dmsc the

273
00:10:00,320 --> 00:10:04,560
response was this looks interesting

274
00:10:02,399 --> 00:10:05,839
and we want to look at it and discuss it

275
00:10:04,560 --> 00:10:07,760
more

276
00:10:05,839 --> 00:10:09,360
of course it fits since one of the

277
00:10:07,760 --> 00:10:12,399
groups going into this work

278
00:10:09,360 --> 00:10:14,720
was the ipso group in ms backworks and

279
00:10:12,399 --> 00:10:15,680
obviously the models are very much

280
00:10:14,720 --> 00:10:18,079
related

281
00:10:15,680 --> 00:10:20,079
so it is it's a pretty good fit but then

282
00:10:18,079 --> 00:10:23,439
of course it's it is also a kind of

283
00:10:20,079 --> 00:10:27,040
you need to do some translation um

284
00:10:23,440 --> 00:10:30,240
and uh and on the iso jtc one

285
00:10:27,040 --> 00:10:30,719
uh sc-41 uh it's actually will be on

286
00:10:30,240 --> 00:10:34,000
discuss

287
00:10:30,720 --> 00:10:34,480
tomorrow uh so i don't have a it's a new

288
00:10:34,000 --> 00:10:36,480
york

289
00:10:34,480 --> 00:10:38,240
it's a new work item proposal being

290
00:10:36,480 --> 00:10:39,040
submitted from the swedish standards

291
00:10:38,240 --> 00:10:42,959
unit

292
00:10:39,040 --> 00:10:44,079
but it's not yet um decided on how to

293
00:10:42,959 --> 00:10:46,319
bring it forward

294
00:10:44,079 --> 00:10:47,439
but it's part of it so the awareness has

295
00:10:46,320 --> 00:10:49,440
been has been

296
00:10:47,440 --> 00:10:51,200
raised in this community as well about

297
00:10:49,440 --> 00:11:01,839
this work

298
00:10:51,200 --> 00:11:01,839
good point thank you

299
00:11:05,200 --> 00:11:13,600
okay so i think i'm supposed to

300
00:11:08,959 --> 00:11:17,760
to speak to these the next few slides

301
00:11:13,600 --> 00:11:20,959
i'm kristen berman i got dragged into

302
00:11:17,760 --> 00:11:24,319
the 1dm work about a year ago

303
00:11:20,959 --> 00:11:25,760
and i have not invented anything that's

304
00:11:24,320 --> 00:11:27,920
in there

305
00:11:25,760 --> 00:11:30,720
i've just tried to make it a document

306
00:11:27,920 --> 00:11:33,519
that people can use

307
00:11:30,720 --> 00:11:35,360
that ultimately will be able to get

308
00:11:33,519 --> 00:11:38,480
standardized

309
00:11:35,360 --> 00:11:42,079
so let's talk about this this weird

310
00:11:38,480 --> 00:11:44,720
numbering scheme here sdf 1.1 um

311
00:11:42,079 --> 00:11:47,040
usually in the idf we we number things

312
00:11:44,720 --> 00:11:49,760
dash 0 0.01

313
00:11:47,040 --> 00:11:50,240
and so on and what we are trying to do

314
00:11:49,760 --> 00:11:53,439
here

315
00:11:50,240 --> 00:11:56,480
is have a few of these dash

316
00:11:53,440 --> 00:11:58,000
something versions be qualified as

317
00:11:56,480 --> 00:12:00,560
implementation drafts

318
00:11:58,000 --> 00:12:02,000
so they they kind of represent that's

319
00:12:00,560 --> 00:12:04,160
the the objective

320
00:12:02,000 --> 00:12:05,519
they represent working group consensus

321
00:12:04,160 --> 00:12:08,160
at the time

322
00:12:05,519 --> 00:12:09,600
with a full knowledge that we will learn

323
00:12:08,160 --> 00:12:13,199
new things

324
00:12:09,600 --> 00:12:15,680
when using it and therefore we will need

325
00:12:13,200 --> 00:12:19,040
to make further iterations

326
00:12:15,680 --> 00:12:22,239
so fda sdf 1.1 will be a

327
00:12:19,040 --> 00:12:25,439
03 or 02 or whatever

328
00:12:22,240 --> 00:12:28,480
happens um that that we actually have

329
00:12:25,440 --> 00:12:31,200
had something like like a a small

330
00:12:28,480 --> 00:12:33,040
working group last call for and we agree

331
00:12:31,200 --> 00:12:35,839
we want to publish this

332
00:12:33,040 --> 00:12:37,519
well not really publish we want to label

333
00:12:35,839 --> 00:12:40,320
the internet draft

334
00:12:37,519 --> 00:12:41,040
as sdf 1.1 and we probably will have a

335
00:12:40,320 --> 00:12:45,040
1.2

336
00:12:41,040 --> 00:12:47,279
and the 1.3 and maybe even the 1.4

337
00:12:45,040 --> 00:12:48,240
before we actually submit this to the

338
00:12:47,279 --> 00:12:52,160
isg

339
00:12:48,240 --> 00:12:55,200
as a standards track

340
00:12:52,160 --> 00:12:58,560
for submission as a standard strike rfc

341
00:12:55,200 --> 00:13:02,639
so that's when when i talk about sdf 1.1

342
00:12:58,560 --> 00:13:04,479
where we are according to my reckoning

343
00:13:02,639 --> 00:13:06,800
about halfway

344
00:13:04,480 --> 00:13:07,600
on the way between 1.0 which was the

345
00:13:06,800 --> 00:13:10,800
initial

346
00:13:07,600 --> 00:13:14,240
submission to the itf and 1.1

347
00:13:10,800 --> 00:13:17,120
and next slide

348
00:13:14,240 --> 00:13:19,040
so we have collected a number of open

349
00:13:17,120 --> 00:13:22,720
issues in the github

350
00:13:19,040 --> 00:13:25,839
that doesn't mean we will not look at

351
00:13:22,720 --> 00:13:28,880
any other open issues

352
00:13:25,839 --> 00:13:29,920
anymore after we have closed these but

353
00:13:28,880 --> 00:13:33,040
these are the ones

354
00:13:29,920 --> 00:13:34,800
that apparently receive the the largest

355
00:13:33,040 --> 00:13:38,319
amount of interest

356
00:13:34,800 --> 00:13:42,160
from people who wanted to convert

357
00:13:38,320 --> 00:13:45,279
their ecosystem specific data models

358
00:13:42,160 --> 00:13:46,399
into something that can be expressed in

359
00:13:45,279 --> 00:13:48,720
in sdf

360
00:13:46,399 --> 00:13:50,399
i i'm going to go through these issues

361
00:13:48,720 --> 00:13:54,000
in in more detail

362
00:13:50,399 --> 00:13:55,839
uh later uh issue number three really is

363
00:13:54,000 --> 00:13:58,240
about something that already is in sdf

364
00:13:55,839 --> 00:14:00,079
1.0 but we hadn't really tested

365
00:13:58,240 --> 00:14:02,800
enough yet so we had to do the the

366
00:14:00,079 --> 00:14:06,000
validation and one tiny

367
00:14:02,800 --> 00:14:09,120
thing came up that we number

368
00:14:06,000 --> 00:14:11,040
that we term number seven so how do you

369
00:14:09,120 --> 00:14:13,279
use these references can you override

370
00:14:11,040 --> 00:14:15,839
can you augment them

371
00:14:13,279 --> 00:14:17,760
issue number four is we punted on

372
00:14:15,839 --> 00:14:21,120
supporting compound

373
00:14:17,760 --> 00:14:24,399
data composition for 1.0

374
00:14:21,120 --> 00:14:24,800
and i think we now understand what we

375
00:14:24,399 --> 00:14:26,639
can

376
00:14:24,800 --> 00:14:27,920
do there so that was one of the results

377
00:14:26,639 --> 00:14:31,040
of the hackathon

378
00:14:27,920 --> 00:14:34,160
and then the third big uh

379
00:14:31,040 --> 00:14:37,839
area is one of uh

380
00:14:34,160 --> 00:14:40,079
uh expressing not not a conjunction

381
00:14:37,839 --> 00:14:41,600
like here but disjunction so you have a

382
00:14:40,079 --> 00:14:44,880
choice between

383
00:14:41,600 --> 00:14:48,800
different alternatives and we had

384
00:14:44,880 --> 00:14:50,560
two uh proposals one based on enums one

385
00:14:48,800 --> 00:14:54,000
based on

386
00:14:50,560 --> 00:14:57,359
json schema orgs anyoff and

387
00:14:54,000 --> 00:14:57,760
i come to a proposal how to work with

388
00:14:57,360 --> 00:15:02,720
that

389
00:14:57,760 --> 00:15:05,760
later next slide

390
00:15:02,720 --> 00:15:06,560
so at the hackathon we we mostly tested

391
00:15:05,760 --> 00:15:10,639
out

392
00:15:06,560 --> 00:15:13,199
the the view we have of issue three

393
00:15:10,639 --> 00:15:14,800
we came up with a convention on using

394
00:15:13,199 --> 00:15:15,920
the queries that is a little bit

395
00:15:14,800 --> 00:15:19,279
surprising

396
00:15:15,920 --> 00:15:21,680
come to that in a minute and

397
00:15:19,279 --> 00:15:23,519
we discussed how we can manage these

398
00:15:21,680 --> 00:15:26,239
namespaces

399
00:15:23,519 --> 00:15:28,480
in a way that supports the progress of a

400
00:15:26,240 --> 00:15:31,920
model from an ecosystem

401
00:15:28,480 --> 00:15:34,399
model to a converged model and

402
00:15:31,920 --> 00:15:35,040
well the various transitions while in

403
00:15:34,399 --> 00:15:38,639
those

404
00:15:35,040 --> 00:15:40,959
stages and on issue four

405
00:15:38,639 --> 00:15:43,040
well we use the the discussion about

406
00:15:40,959 --> 00:15:44,399
compound types or aggregation to also

407
00:15:43,040 --> 00:15:48,399
fix a few

408
00:15:44,399 --> 00:15:51,519
words in in 1.0

409
00:15:48,399 --> 00:15:53,279
so with that let's next slide jump into

410
00:15:51,519 --> 00:15:56,240
issue number three and a little bit

411
00:15:53,279 --> 00:15:59,360
issue number seven next slide

412
00:15:56,240 --> 00:16:01,600
um so we we can

413
00:15:59,360 --> 00:16:03,600
instead of writing something into the

414
00:16:01,600 --> 00:16:05,279
model we can write a reference into the

415
00:16:03,600 --> 00:16:07,519
model and that reference

416
00:16:05,279 --> 00:16:09,519
points either to a different place

417
00:16:07,519 --> 00:16:10,399
within the same model or to a different

418
00:16:09,519 --> 00:16:14,480
model

419
00:16:10,399 --> 00:16:17,759
and import some some spec

420
00:16:14,480 --> 00:16:20,399
this is based on json pointers

421
00:16:17,759 --> 00:16:22,079
right now and we generally know that

422
00:16:20,399 --> 00:16:25,199
json pointers work so so

423
00:16:22,079 --> 00:16:26,719
that was not an issue but we weren't so

424
00:16:25,199 --> 00:16:29,519
sure that the way the

425
00:16:26,720 --> 00:16:30,399
the space is being managed uh was a good

426
00:16:29,519 --> 00:16:34,480
way

427
00:16:30,399 --> 00:16:38,240
and we also never really tested out what

428
00:16:34,480 --> 00:16:42,480
what we can reference there

429
00:16:38,240 --> 00:16:46,000
so initially this focused on data types

430
00:16:42,480 --> 00:16:48,839
via sdf data and i think we are not

431
00:16:46,000 --> 00:16:50,160
completely done with thinking about

432
00:16:48,839 --> 00:16:53,199
referencing

433
00:16:50,160 --> 00:16:57,199
other things next type

434
00:16:53,199 --> 00:17:00,319
so here's an example let's say we

435
00:16:57,199 --> 00:17:02,959
have defined a data type

436
00:17:00,320 --> 00:17:04,160
that we call length and that is

437
00:17:02,959 --> 00:17:07,280
obviously a number

438
00:17:04,160 --> 00:17:10,160
the length cannot be less than zero uh

439
00:17:07,280 --> 00:17:10,959
the si unit is meter oh this is using

440
00:17:10,160 --> 00:17:13,919
the old name

441
00:17:10,959 --> 00:17:14,880
sorry um and uh there's also a

442
00:17:13,919 --> 00:17:16,720
description

443
00:17:14,880 --> 00:17:19,120
well that probably needs to be longer

444
00:17:16,720 --> 00:17:22,079
than here in this example

445
00:17:19,119 --> 00:17:23,039
and then later on if we have the the

446
00:17:22,079 --> 00:17:25,678
cable length

447
00:17:23,039 --> 00:17:27,199
measurement from the tdr to the r unit

448
00:17:25,679 --> 00:17:30,640
in a

449
00:17:27,199 --> 00:17:33,280
router then this can give us

450
00:17:30,640 --> 00:17:34,000
something that is like a length uh but

451
00:17:33,280 --> 00:17:37,280
the tdr

452
00:17:34,000 --> 00:17:38,960
unit really cannot uh show anything

453
00:17:37,280 --> 00:17:40,160
about cables of at least five

454
00:17:38,960 --> 00:17:42,960
centimeters so

455
00:17:40,160 --> 00:17:44,559
uh we actually modify this description

456
00:17:42,960 --> 00:17:47,520
uh a little bit

457
00:17:44,559 --> 00:17:48,480
so this is one example where we had to

458
00:17:47,520 --> 00:17:50,720
decide

459
00:17:48,480 --> 00:17:52,240
whether we we want to allow this kind of

460
00:17:50,720 --> 00:17:56,559
overriding

461
00:17:52,240 --> 00:17:59,200
um so this is actually

462
00:17:56,559 --> 00:18:00,080
following the lisk of principle here uh

463
00:17:59,200 --> 00:18:01,919
because the

464
00:18:00,080 --> 00:18:03,120
the second one is the subset of the

465
00:18:01,919 --> 00:18:04,880
first one but

466
00:18:03,120 --> 00:18:06,959
of course when you can override anything

467
00:18:04,880 --> 00:18:07,919
you you you're not forced to follow the

468
00:18:06,960 --> 00:18:11,840
disk of principle

469
00:18:07,919 --> 00:18:13,039
next slide um so in in practice this

470
00:18:11,840 --> 00:18:16,559
would occur in an

471
00:18:13,039 --> 00:18:19,440
sdf property declaration

472
00:18:16,559 --> 00:18:20,399
and so sdf data is just a place where

473
00:18:19,440 --> 00:18:23,360
you can

474
00:18:20,400 --> 00:18:25,840
define things that can be referenced or

475
00:18:23,360 --> 00:18:28,000
data types that can be referenced and

476
00:18:25,840 --> 00:18:30,080
this is not by itself declaring

477
00:18:28,000 --> 00:18:30,880
affordance the affordance is declared in

478
00:18:30,080 --> 00:18:32,639
the

479
00:18:30,880 --> 00:18:34,799
sdf property so there is something

480
00:18:32,640 --> 00:18:36,160
called cable length that you can read

481
00:18:34,799 --> 00:18:39,918
out

482
00:18:36,160 --> 00:18:39,919
from from the device next slide

483
00:18:40,160 --> 00:18:47,200
so when we do this between different

484
00:18:43,840 --> 00:18:49,439
specifications then of course we have to

485
00:18:47,200 --> 00:18:49,840
manage a namespace that is much larger

486
00:18:49,440 --> 00:18:51,679
and

487
00:18:49,840 --> 00:18:53,520
we decided to have a global namespace

488
00:18:51,679 --> 00:18:56,000
that is based on uis

489
00:18:53,520 --> 00:18:57,360
these uis are not necessarily meant to

490
00:18:56,000 --> 00:19:00,960
be

491
00:18:57,360 --> 00:19:03,840
resolvable but they are names

492
00:19:00,960 --> 00:19:05,760
and using a namespace table and the

493
00:19:03,840 --> 00:19:09,280
default namespace

494
00:19:05,760 --> 00:19:12,640
we can say the the length that is being

495
00:19:09,280 --> 00:19:15,360
declared up here in the yellow

496
00:19:12,640 --> 00:19:17,120
part the defined actually not declared

497
00:19:15,360 --> 00:19:21,199
that can be referenced

498
00:19:17,120 --> 00:19:23,918
in the white part using an sdf ref

499
00:19:21,200 --> 00:19:25,919
that points to that namespace and

500
00:19:23,919 --> 00:19:27,760
interestingly the namespace names

501
00:19:25,919 --> 00:19:29,520
can differ the interesting part about

502
00:19:27,760 --> 00:19:30,879
the namespace is not its namespace name

503
00:19:29,520 --> 00:19:34,160
which is a local meta

504
00:19:30,880 --> 00:19:36,960
in the specification but the the url

505
00:19:34,160 --> 00:19:38,720
so the the white part says namespace foo

506
00:19:36,960 --> 00:19:42,160
is example.com

507
00:19:38,720 --> 00:19:44,960
and so we can reference it from there

508
00:19:42,160 --> 00:19:45,440
so that's how the slide looked a month

509
00:19:44,960 --> 00:19:48,400
ago

510
00:19:45,440 --> 00:19:49,679
and now next slide we have changed this

511
00:19:48,400 --> 00:19:51,520
a little bit

512
00:19:49,679 --> 00:19:53,200
and you probably had to watch closely to

513
00:19:51,520 --> 00:19:56,879
see the difference

514
00:19:53,200 --> 00:20:00,559
um so we we actually moved the the

515
00:19:56,880 --> 00:20:04,159
hashmark down to the reference

516
00:20:00,559 --> 00:20:07,678
and why does that make sense um

517
00:20:04,159 --> 00:20:10,240
you know another slide forward um that

518
00:20:07,679 --> 00:20:11,440
leads to uniform reference because the

519
00:20:10,240 --> 00:20:14,640
the

520
00:20:11,440 --> 00:20:17,679
reference to a local item

521
00:20:14,640 --> 00:20:18,880
looks the the same way now as a

522
00:20:17,679 --> 00:20:20,720
reference to

523
00:20:18,880 --> 00:20:22,159
to an item that is in the default

524
00:20:20,720 --> 00:20:25,360
namespace

525
00:20:22,159 --> 00:20:28,400
uh so you can actually take out parts of

526
00:20:25,360 --> 00:20:31,600
a spec put it somewhere else

527
00:20:28,400 --> 00:20:34,080
without having to edit the whole uh spec

528
00:20:31,600 --> 00:20:35,678
and that's a win although it's a little

529
00:20:34,080 --> 00:20:37,600
bit more conventional in the rdf

530
00:20:35,679 --> 00:20:38,480
community to have the hash mark in in

531
00:20:37,600 --> 00:20:40,320
the

532
00:20:38,480 --> 00:20:41,760
namespace definition and not in the

533
00:20:40,320 --> 00:20:43,840
reference

534
00:20:41,760 --> 00:20:46,840
so that's one of the things that that

535
00:20:43,840 --> 00:20:49,678
came out of the

536
00:20:46,840 --> 00:20:52,158
hackathon so that that's

537
00:20:49,679 --> 00:20:53,520
i think pretty much resolved we we think

538
00:20:52,159 --> 00:20:55,919
we understand

539
00:20:53,520 --> 00:20:58,158
how this is being used and in the

540
00:20:55,919 --> 00:21:02,960
exploratory part of the

541
00:20:58,159 --> 00:21:05,440
uh 1dm repository we have a couple dozen

542
00:21:02,960 --> 00:21:06,720
examples that make use of this in one or

543
00:21:05,440 --> 00:21:09,039
the other

544
00:21:06,720 --> 00:21:10,960
way but of course so we should use all

545
00:21:09,039 --> 00:21:11,679
time we have to experiment further with

546
00:21:10,960 --> 00:21:15,520
this

547
00:21:11,679 --> 00:21:19,919
and find out whether we

548
00:21:15,520 --> 00:21:22,080
maybe also want to

549
00:21:19,919 --> 00:21:24,159
use this in different contexts than just

550
00:21:22,080 --> 00:21:26,960
referencing data types

551
00:21:24,159 --> 00:21:30,240
and michael says in the chat please step

552
00:21:26,960 --> 00:21:33,360
up if you have questions about this

553
00:21:30,240 --> 00:21:35,919
and christian asked

554
00:21:33,360 --> 00:21:36,959
the semantics of curries are still plain

555
00:21:35,919 --> 00:21:40,480
concatenation

556
00:21:36,960 --> 00:21:43,200
and the answer is yes so

557
00:21:40,480 --> 00:21:44,720
what really happens here is that the the

558
00:21:43,200 --> 00:21:48,880
hash

559
00:21:44,720 --> 00:21:48,880
slash sdf data slash length is

560
00:21:49,120 --> 00:21:55,600
appended to https example.com

561
00:21:52,240 --> 00:21:58,720
um so the path part

562
00:21:55,600 --> 00:22:02,240
is what gives you the the uniqueness and

563
00:21:58,720 --> 00:22:04,559
the part behind hash is a fragment

564
00:22:02,240 --> 00:22:06,640
identifier a json fragment identifier

565
00:22:04,559 --> 00:22:10,320
that takes the form of a

566
00:22:06,640 --> 00:22:13,840
of an rfc 6901 pointer json pointer

567
00:22:10,320 --> 00:22:16,960
that says up there in in that uh

568
00:22:13,840 --> 00:22:19,439
document uh uh

569
00:22:16,960 --> 00:22:20,320
look under sdf data length and you you

570
00:22:19,440 --> 00:22:23,200
find it there

571
00:22:20,320 --> 00:22:24,720
i find myself i'm i'm so used to big

572
00:22:23,200 --> 00:22:26,960
blue button as a conferencing system

573
00:22:24,720 --> 00:22:30,799
that are pointing to places and

574
00:22:26,960 --> 00:22:32,960
echo doesn't support that sorry

575
00:22:30,799 --> 00:22:35,760
that you cannot see my pointer yeah

576
00:22:32,960 --> 00:22:35,760
exactly yeah

577
00:22:36,640 --> 00:22:42,320
so any more questions about issue number

578
00:22:40,000 --> 00:22:42,320
three

579
00:22:49,679 --> 00:22:54,080
so of course you all should read the new

580
00:22:51,760 --> 00:22:56,240
text that is in dash one uh

581
00:22:54,080 --> 00:22:57,840
about this and check whether it fully

582
00:22:56,240 --> 00:23:01,280
represents this

583
00:22:57,840 --> 00:23:02,639
uh but i think this is also pretty much

584
00:23:01,280 --> 00:23:05,678
non-controversial

585
00:23:02,640 --> 00:23:08,799
or should be next slide so this means

586
00:23:05,679 --> 00:23:11,919
that issue three can be closed right or

587
00:23:08,799 --> 00:23:15,200
not quite uh so there's this um

588
00:23:11,919 --> 00:23:18,960
if you go to slide 14 um

589
00:23:15,200 --> 00:23:22,320
there is this little uh question of

590
00:23:18,960 --> 00:23:25,600
can we import entire affordances

591
00:23:22,320 --> 00:23:27,439
or even more could we import a whole sdf

592
00:23:25,600 --> 00:23:29,600
data

593
00:23:27,440 --> 00:23:33,360
section so i think that that needs to be

594
00:23:29,600 --> 00:23:33,360
understood what that actually means and

595
00:23:34,880 --> 00:23:38,480
whether we are limited to essentially

596
00:23:37,039 --> 00:23:41,760
pointing to

597
00:23:38,480 --> 00:23:43,279
something that is below sdf data so that

598
00:23:41,760 --> 00:23:45,200
that small part maybe we should make a

599
00:23:43,279 --> 00:23:51,840
new issue out of that so we can close

600
00:23:45,200 --> 00:23:54,080
number three

601
00:23:51,840 --> 00:23:55,039
okay so let's move on to slide number

602
00:23:54,080 --> 00:23:56,879
20.

603
00:23:55,039 --> 00:23:58,720
karsten i just want to clarify so what

604
00:23:56,880 --> 00:24:01,520
you're saying is that we can't

605
00:23:58,720 --> 00:24:03,120
point at for instance type we can only

606
00:24:01,520 --> 00:24:06,320
point at length

607
00:24:03,120 --> 00:24:10,639
is that what i understood you to say

608
00:24:06,320 --> 00:24:12,480
um that's what i'm proposing

609
00:24:10,640 --> 00:24:14,799
okay just wanted to make sure i

610
00:24:12,480 --> 00:24:17,600
understood the statement

611
00:24:14,799 --> 00:24:18,000
yeah so you can you can write down a

612
00:24:17,600 --> 00:24:20,080
json

613
00:24:18,000 --> 00:24:21,120
pointer for anything the question really

614
00:24:20,080 --> 00:24:23,918
is what what

615
00:24:21,120 --> 00:24:26,399
what are the json pointers that are

616
00:24:23,919 --> 00:24:28,720
valid in an sdf ref

617
00:24:26,400 --> 00:24:30,320
there's also sdf required which probably

618
00:24:28,720 --> 00:24:34,000
has different set

619
00:24:30,320 --> 00:24:34,879
from the sdf ref set so for both cases

620
00:24:34,000 --> 00:24:38,000
we should

621
00:24:34,880 --> 00:24:38,799
decide which are the sets of things that

622
00:24:38,000 --> 00:24:47,440
these pointers

623
00:24:38,799 --> 00:24:50,879
should be pointing to

624
00:24:47,440 --> 00:24:54,480
okay thank you for the questions

625
00:24:50,880 --> 00:24:57,039
uh issue number four um

626
00:24:54,480 --> 00:24:59,440
so this is about composition or

627
00:24:57,039 --> 00:25:02,640
aggregation as i have been calling that

628
00:24:59,440 --> 00:25:03,360
compound types we have many many terms

629
00:25:02,640 --> 00:25:04,960
for this

630
00:25:03,360 --> 00:25:07,120
it essentially means that we are

631
00:25:04,960 --> 00:25:10,240
constructing something

632
00:25:07,120 --> 00:25:14,239
out of multiple parts

633
00:25:10,240 --> 00:25:17,440
and we punted on that for for sdf 1

634
00:25:14,240 --> 00:25:20,480
0 but we couldn't completely punt it

635
00:25:17,440 --> 00:25:23,520
so we had something awkward for

636
00:25:20,480 --> 00:25:27,120
composing parameter lists

637
00:25:23,520 --> 00:25:31,120
and this is on on the way out

638
00:25:27,120 --> 00:25:34,559
now that we have real uh composition

639
00:25:31,120 --> 00:25:36,799
uh and um yeah so um

640
00:25:34,559 --> 00:25:38,399
one the the thing that is on the second

641
00:25:36,799 --> 00:25:41,360
to last bullet here

642
00:25:38,400 --> 00:25:42,880
um is really what exactly does the

643
00:25:41,360 --> 00:25:46,080
reference

644
00:25:42,880 --> 00:25:47,919
mean and

645
00:25:46,080 --> 00:25:49,199
what what actually should should be

646
00:25:47,919 --> 00:25:52,080
overrideable

647
00:25:49,200 --> 00:25:53,120
uh there and can we compose affordances

648
00:25:52,080 --> 00:25:56,480
as well

649
00:25:53,120 --> 00:25:59,360
as just types

650
00:25:56,480 --> 00:25:59,360
so next slide

651
00:26:00,640 --> 00:26:06,720
so this is an example in in the new

652
00:26:03,760 --> 00:26:08,158
syntax where we have two properties uh

653
00:26:06,720 --> 00:26:11,840
one is called simple

654
00:26:08,159 --> 00:26:11,840
one this could be the

655
00:26:12,080 --> 00:26:18,639
name of the device and

656
00:26:15,520 --> 00:26:21,440
compound one which might be

657
00:26:18,640 --> 00:26:23,600
the the location of the device and

658
00:26:21,440 --> 00:26:26,320
element one is the gps coordinates and

659
00:26:23,600 --> 00:26:30,719
element 2 is the street address so

660
00:26:26,320 --> 00:26:34,399
whatever so we have a component property

661
00:26:30,720 --> 00:26:36,880
and the this of course could also be

662
00:26:34,400 --> 00:26:38,640
modeled as separate properties element 1

663
00:26:36,880 --> 00:26:41,360
and element two

664
00:26:38,640 --> 00:26:43,360
but in writing such a specification that

665
00:26:41,360 --> 00:26:46,639
there is a certain

666
00:26:43,360 --> 00:26:49,600
tendency to to group things

667
00:26:46,640 --> 00:26:51,279
um so it's useful to have the compound

668
00:26:49,600 --> 00:26:54,959
stuff

669
00:26:51,279 --> 00:26:57,840
um we decided to use the same

670
00:26:54,960 --> 00:26:58,960
syntax json schema alt uses for json

671
00:26:57,840 --> 00:27:01,439
objects

672
00:26:58,960 --> 00:27:03,200
and that's maybe a little bit confusing

673
00:27:01,440 --> 00:27:06,320
because we are not

674
00:27:03,200 --> 00:27:09,919
saying that this property

675
00:27:06,320 --> 00:27:11,678
then is represented as a json object

676
00:27:09,919 --> 00:27:13,440
because we are at the information model

677
00:27:11,679 --> 00:27:13,840
level we are not at the level where we

678
00:27:13,440 --> 00:27:17,679
would

679
00:27:13,840 --> 00:27:20,320
make representation decisions like that

680
00:27:17,679 --> 00:27:22,720
but because we are using a data modeling

681
00:27:20,320 --> 00:27:25,520
language to represent information models

682
00:27:22,720 --> 00:27:27,600
it's pretty normal that we we use one

683
00:27:25,520 --> 00:27:31,039
way of representing things

684
00:27:27,600 --> 00:27:32,080
as as a stand in for the information

685
00:27:31,039 --> 00:27:34,320
model

686
00:27:32,080 --> 00:27:35,360
property that are trying to represent

687
00:27:34,320 --> 00:27:37,600
here

688
00:27:35,360 --> 00:27:40,158
and well adjacent object is a good way

689
00:27:37,600 --> 00:27:43,520
to group things

690
00:27:40,159 --> 00:27:47,120
together into a bigger thing

691
00:27:43,520 --> 00:27:49,840
json schema org also has a required

692
00:27:47,120 --> 00:27:50,799
and that thing is called property sorry

693
00:27:49,840 --> 00:27:53,840
um

694
00:27:50,799 --> 00:27:55,840
in in the compound the word property

695
00:27:53,840 --> 00:27:59,678
means at least three things here

696
00:27:55,840 --> 00:28:03,199
um so this can be used to say that

697
00:27:59,679 --> 00:28:06,399
certain of the the map keys

698
00:28:03,200 --> 00:28:08,000
key value pairs are required and others

699
00:28:06,399 --> 00:28:10,959
are optional

700
00:28:08,000 --> 00:28:12,320
this is a bit clumsy but uh i think

701
00:28:10,960 --> 00:28:14,720
generally the

702
00:28:12,320 --> 00:28:17,200
feeling was that everyone we want to

703
00:28:14,720 --> 00:28:21,120
stick with what jason schema org

704
00:28:17,200 --> 00:28:21,120
is using there to

705
00:28:21,520 --> 00:28:25,360
follow the principle of least surprise

706
00:28:25,520 --> 00:28:35,120
so that's where we came out next slide

707
00:28:32,640 --> 00:28:37,760
and now that we have it we can also use

708
00:28:35,120 --> 00:28:40,639
this to build the parameter lists

709
00:28:37,760 --> 00:28:42,960
for actions and events so actions have

710
00:28:40,640 --> 00:28:46,640
input data and output data

711
00:28:42,960 --> 00:28:49,039
and in 1.0 we essentially built the

712
00:28:46,640 --> 00:28:50,559
input data and the output data as arrays

713
00:28:49,039 --> 00:28:54,158
of references

714
00:28:50,559 --> 00:28:56,080
to sdf data which means we could point

715
00:28:54,159 --> 00:28:59,120
to data but we couldn't

716
00:28:56,080 --> 00:29:02,240
say what these data actually meant so we

717
00:28:59,120 --> 00:29:04,959
can't say whether the the

718
00:29:02,240 --> 00:29:07,200
intensity value that we are pointing to

719
00:29:04,960 --> 00:29:10,480
is a red green or a blue

720
00:29:07,200 --> 00:29:12,240
intensity value and with a new way of

721
00:29:10,480 --> 00:29:14,880
structuring things we have to

722
00:29:12,240 --> 00:29:16,320
write a little bit more json uh but now

723
00:29:14,880 --> 00:29:20,000
we can actually

724
00:29:16,320 --> 00:29:21,360
put in uh names here so for instance the

725
00:29:20,000 --> 00:29:24,080
input data is the

726
00:29:21,360 --> 00:29:25,600
amount of squeezing you get from the hug

727
00:29:24,080 --> 00:29:26,000
and the output data is the amount of

728
00:29:25,600 --> 00:29:29,918
comfort

729
00:29:26,000 --> 00:29:30,559
you get now if you look at this you may

730
00:29:29,919 --> 00:29:33,840
think

731
00:29:30,559 --> 00:29:36,399
oh there was a data type up there in 1.0

732
00:29:33,840 --> 00:29:40,399
and that already had the information

733
00:29:36,399 --> 00:29:43,120
um and that works as long as all your

734
00:29:40,399 --> 00:29:44,879
your input data elements have

735
00:29:43,120 --> 00:29:47,439
sufficiently different

736
00:29:44,880 --> 00:29:49,120
data types but we ran into examples like

737
00:29:47,440 --> 00:29:50,799
the red green blue

738
00:29:49,120 --> 00:29:53,760
light where the data types are actually

739
00:29:50,799 --> 00:29:55,918
the same so the data type reference in

740
00:29:53,760 --> 00:29:57,039
1.0 didn't tell you what it was and then

741
00:29:55,919 --> 00:30:00,320
now we

742
00:29:57,039 --> 00:30:04,559
get this in in the name like

743
00:30:00,320 --> 00:30:04,559
squeeze or comfort here

744
00:30:05,200 --> 00:30:11,440
so this is once we made the decision to

745
00:30:09,440 --> 00:30:12,640
to live with the fact that people might

746
00:30:11,440 --> 00:30:16,799
mistake with

747
00:30:12,640 --> 00:30:20,080
this with just plain json objects

748
00:30:16,799 --> 00:30:22,799
i think this was a no-brainer

749
00:30:20,080 --> 00:30:24,799
so um yeah this is the solution for

750
00:30:22,799 --> 00:30:25,679
aggregation and the little tricks we

751
00:30:24,799 --> 00:30:28,879
could

752
00:30:25,679 --> 00:30:31,600
uh make based on this

753
00:30:28,880 --> 00:30:32,000
so again we before we close number four

754
00:30:31,600 --> 00:30:35,199
we

755
00:30:32,000 --> 00:30:38,559
should think whether there are other

756
00:30:35,200 --> 00:30:41,360
kinds of aggregation that we need but

757
00:30:38,559 --> 00:30:41,678
this kind of aggregation data types and

758
00:30:41,360 --> 00:30:45,279
and

759
00:30:41,679 --> 00:30:47,520
parameter lists this is now taking care

760
00:30:45,279 --> 00:30:47,520
of

761
00:30:48,840 --> 00:30:51,840
questions

762
00:30:54,240 --> 00:31:00,720
so let's go to the net to the next slide

763
00:30:58,000 --> 00:31:01,279
um we have two issues issue number two

764
00:31:00,720 --> 00:31:05,840
and

765
00:31:01,279 --> 00:31:08,720
number five next slide that actually

766
00:31:05,840 --> 00:31:09,760
when you examine them closely are the

767
00:31:08,720 --> 00:31:13,440
same

768
00:31:09,760 --> 00:31:17,279
issue number two was about using

769
00:31:13,440 --> 00:31:20,159
the the something like the json schema

770
00:31:17,279 --> 00:31:21,039
facilities which allows you to define a

771
00:31:20,159 --> 00:31:24,799
type

772
00:31:21,039 --> 00:31:28,320
as a choice between a number of values

773
00:31:24,799 --> 00:31:32,080
so you you put in an array with

774
00:31:28,320 --> 00:31:35,439
values and

775
00:31:32,080 --> 00:31:37,360
yeah so um this uh

776
00:31:35,440 --> 00:31:39,360
gives you values but it doesn't really

777
00:31:37,360 --> 00:31:40,719
help you in actually defining what these

778
00:31:39,360 --> 00:31:43,360
values mean

779
00:31:40,720 --> 00:31:44,799
so that there is no place in ingesting

780
00:31:43,360 --> 00:31:48,000
schema org

781
00:31:44,799 --> 00:31:51,200
in to actually annotate them with

782
00:31:48,000 --> 00:31:54,559
with any semantic uh

783
00:31:51,200 --> 00:31:55,279
tags uh so this this was not something

784
00:31:54,559 --> 00:31:57,519
that that

785
00:31:55,279 --> 00:31:59,039
we could use directly and for a while we

786
00:31:57,519 --> 00:32:02,080
had various proposals called

787
00:31:59,039 --> 00:32:04,879
sdf enums which would to be

788
00:32:02,080 --> 00:32:07,360
almost but not entirely unlike enums in

789
00:32:04,880 --> 00:32:10,480
that you had a way to put

790
00:32:07,360 --> 00:32:11,760
the semantic tag there and the other

791
00:32:10,480 --> 00:32:15,600
thing was that the

792
00:32:11,760 --> 00:32:18,960
json schema also has an any off

793
00:32:15,600 --> 00:32:19,360
operator that can be used to build a

794
00:32:18,960 --> 00:32:22,799
type

795
00:32:19,360 --> 00:32:26,879
union of of multiple

796
00:32:22,799 --> 00:32:28,320
schema descriptions in 1.0 we didn't

797
00:32:26,880 --> 00:32:31,440
include

798
00:32:28,320 --> 00:32:33,918
that we

799
00:32:31,440 --> 00:32:34,880
were hesitant to do this because we

800
00:32:33,919 --> 00:32:38,960
hadn't

801
00:32:34,880 --> 00:32:42,640
examined alternatives or choices

802
00:32:38,960 --> 00:32:46,480
yet so we could actually put this in

803
00:32:42,640 --> 00:32:46,480
or yeah

804
00:32:46,559 --> 00:32:49,600
there isn't much of a difference between

805
00:32:49,120 --> 00:32:52,399
the two

806
00:32:49,600 --> 00:32:54,240
because they both lack a way to put

807
00:32:52,399 --> 00:32:57,279
descriptive information

808
00:32:54,240 --> 00:33:00,399
on the alternatives um so

809
00:32:57,279 --> 00:33:02,000
um yeah that's what we looked at we

810
00:33:00,399 --> 00:33:05,279
looked at a number of

811
00:33:02,000 --> 00:33:08,320
uh examples and uh

812
00:33:05,279 --> 00:33:12,159
of course the the convenience value of

813
00:33:08,320 --> 00:33:14,559
the json schema enums is that

814
00:33:12,159 --> 00:33:15,519
as it's usual when you just give text

815
00:33:14,559 --> 00:33:17,360
strings

816
00:33:15,519 --> 00:33:18,720
uh then then you think you know what

817
00:33:17,360 --> 00:33:21,760
these things mean

818
00:33:18,720 --> 00:33:25,039
um but it actually turns out

819
00:33:21,760 --> 00:33:27,840
that that's not always very clear and

820
00:33:25,039 --> 00:33:29,120
uh just from a single text string that

821
00:33:27,840 --> 00:33:30,639
looks like an identifier in a

822
00:33:29,120 --> 00:33:33,199
programming language

823
00:33:30,640 --> 00:33:35,039
um and there are also funny little

824
00:33:33,200 --> 00:33:37,840
things like like typos

825
00:33:35,039 --> 00:33:40,960
and and those text strings which cause

826
00:33:37,840 --> 00:33:43,918
immense pain when you repair them

827
00:33:40,960 --> 00:33:44,880
and so on so it's not necessarily

828
00:33:43,919 --> 00:33:49,840
exactly the

829
00:33:44,880 --> 00:33:53,279
the way you want to do things next slide

830
00:33:49,840 --> 00:33:56,959
so as usual let's look at an example so

831
00:33:53,279 --> 00:33:59,440
this was an example that that had been

832
00:33:56,960 --> 00:34:01,440
handed around for a while we have a

833
00:33:59,440 --> 00:34:04,720
property called state

834
00:34:01,440 --> 00:34:04,720
and that has two

835
00:34:04,799 --> 00:34:10,000
possible values on and off and

836
00:34:08,000 --> 00:34:12,800
uh of course we could model this as a

837
00:34:10,000 --> 00:34:14,800
boolean but that's not the point here

838
00:34:12,800 --> 00:34:16,000
let's say you want to give them explicit

839
00:34:14,800 --> 00:34:19,440
names

840
00:34:16,000 --> 00:34:22,719
um then we would build an sdf enum

841
00:34:19,440 --> 00:34:25,200
with two alternatives on and off

842
00:34:22,719 --> 00:34:26,319
and we can put descriptions there and we

843
00:34:25,199 --> 00:34:29,359
can give the things

844
00:34:26,320 --> 00:34:32,320
labels um and so on so

845
00:34:29,359 --> 00:34:34,830
the labels are a bit redundant uh we we

846
00:34:32,320 --> 00:34:36,399
don't really have a

847
00:34:34,830 --> 00:34:38,239
[Music]

848
00:34:36,399 --> 00:34:40,799
semantic foundation here of course you

849
00:34:38,239 --> 00:34:42,879
can read the description

850
00:34:40,800 --> 00:34:44,159
but somehow it would be nicer if we

851
00:34:42,879 --> 00:34:48,319
could

852
00:34:44,159 --> 00:34:50,800
put a pointer to some rdf in here um

853
00:34:48,320 --> 00:34:53,200
yeah and then we can write comments and

854
00:34:50,800 --> 00:34:56,800
and we might even put other things

855
00:34:53,199 --> 00:35:03,839
there like ecosystem translations or

856
00:34:56,800 --> 00:35:03,839
whatever so this is extensive next slide

857
00:35:04,400 --> 00:35:08,640
um so i hope you can read this

858
00:35:14,839 --> 00:35:22,480
um

859
00:35:17,119 --> 00:35:22,480
very nice yeah that may be a bit much

860
00:35:26,000 --> 00:35:32,880
125 is probably the next you can do

861
00:35:29,280 --> 00:35:36,160
okay so um the another example

862
00:35:32,880 --> 00:35:36,960
is right from i think was it zigbee or

863
00:35:36,160 --> 00:35:39,920
bluetooth i

864
00:35:36,960 --> 00:35:40,960
don't remember uh so they have a one

865
00:35:39,920 --> 00:35:43,440
byte

866
00:35:40,960 --> 00:35:45,920
uh number that that can go from zero to

867
00:35:43,440 --> 00:35:50,480
255

868
00:35:45,920 --> 00:35:53,920
and a number of these numbers 1 to a 254

869
00:35:50,480 --> 00:35:56,880
are reserved to actually give

870
00:35:53,920 --> 00:36:00,000
a startup level so when you switch on

871
00:35:56,880 --> 00:36:02,000
the device the lamp goes to intensity 1

872
00:36:00,000 --> 00:36:05,280
to 254

873
00:36:02,000 --> 00:36:09,440
and there there is also an sdf enum

874
00:36:05,280 --> 00:36:11,760
in the any of alternative here that

875
00:36:09,440 --> 00:36:13,359
has two additional values minimum device

876
00:36:11,760 --> 00:36:16,160
value permitted

877
00:36:13,359 --> 00:36:16,880
which is zero which is represented by

878
00:36:16,160 --> 00:36:19,279
zero

879
00:36:16,880 --> 00:36:21,839
and set to previous value which is

880
00:36:19,280 --> 00:36:24,000
represented by 255.

881
00:36:21,839 --> 00:36:27,520
so i'm not going to explain the the

882
00:36:24,000 --> 00:36:32,079
logic of of this device

883
00:36:27,520 --> 00:36:35,920
but the basic idea is that we we have

884
00:36:32,079 --> 00:36:39,200
various alternatives here and the the

885
00:36:35,920 --> 00:36:42,240
difference between any of an sdf enum

886
00:36:39,200 --> 00:36:45,520
makes us doing an

887
00:36:42,240 --> 00:36:47,520
interesting nesting here

888
00:36:45,520 --> 00:36:49,050
which maybe is not not something we

889
00:36:47,520 --> 00:36:50,480
always want to do

890
00:36:49,050 --> 00:36:52,640
[Music]

891
00:36:50,480 --> 00:36:54,560
there's also the question whether the

892
00:36:52,640 --> 00:36:57,680
the numbers that are

893
00:36:54,560 --> 00:37:01,599
given there really are information

894
00:36:57,680 --> 00:37:04,480
model level content or are not

895
00:37:01,599 --> 00:37:07,520
so there are some industry standards

896
00:37:04,480 --> 00:37:11,839
where where it's not hard to say

897
00:37:07,520 --> 00:37:14,960
well most rgb

898
00:37:11,839 --> 00:37:16,240
devices have something that's going from

899
00:37:14,960 --> 00:37:19,599
zero to 255

900
00:37:16,240 --> 00:37:20,399
so so let's go with that but there are

901
00:37:19,599 --> 00:37:22,720
other

902
00:37:20,400 --> 00:37:24,560
things where really different ecosystems

903
00:37:22,720 --> 00:37:25,279
have different numbers and we have to

904
00:37:24,560 --> 00:37:28,799
work about

905
00:37:25,280 --> 00:37:30,480
mapping uh files to handle those and if

906
00:37:28,800 --> 00:37:32,480
you look over into the issue

907
00:37:30,480 --> 00:37:34,720
behind this then you see one example

908
00:37:32,480 --> 00:37:35,119
from the microcluster how such a mapping

909
00:37:34,720 --> 00:37:40,399
file

910
00:37:35,119 --> 00:37:40,400
could look like next slide

911
00:37:41,280 --> 00:37:48,880
so um this this was just an intermediate

912
00:37:46,560 --> 00:37:51,119
example this is not even json syntax but

913
00:37:48,880 --> 00:37:52,560
but i think you can see what's going on

914
00:37:51,119 --> 00:37:55,280
here

915
00:37:52,560 --> 00:37:56,320
which was an example of having three

916
00:37:55,280 --> 00:38:00,079
number ranges

917
00:37:56,320 --> 00:38:03,680
0 to 86 87 to 166

918
00:38:00,079 --> 00:38:07,040
and 167 to 255 and these have

919
00:38:03,680 --> 00:38:10,720
different semantics which are

920
00:38:07,040 --> 00:38:14,480
encoded in the label there

921
00:38:10,720 --> 00:38:17,439
so the this choice mechanism might

922
00:38:14,480 --> 00:38:19,200
be used for actually giving different

923
00:38:17,440 --> 00:38:21,440
semantics to different

924
00:38:19,200 --> 00:38:23,200
uh number ranges which is going one step

925
00:38:21,440 --> 00:38:25,680
further than the previous example

926
00:38:23,200 --> 00:38:25,680
next slide

927
00:38:28,000 --> 00:38:33,839
yeah this is the same thing in json

928
00:38:30,160 --> 00:38:33,839
syntax next slide

929
00:38:34,800 --> 00:38:39,280
so the the decision we really had to

930
00:38:37,920 --> 00:38:42,400
make is

931
00:38:39,280 --> 00:38:46,320
is a choice just a type union

932
00:38:42,400 --> 00:38:50,800
so the the various types that we

933
00:38:46,320 --> 00:38:54,079
unify are essentially opened up

934
00:38:50,800 --> 00:38:56,079
and all the values are put into a big

935
00:38:54,079 --> 00:39:00,560
basket which is the

936
00:38:56,079 --> 00:39:02,960
type union so if if values

937
00:39:00,560 --> 00:39:04,640
actually occur in in several of the

938
00:39:02,960 --> 00:39:07,359
branches

939
00:39:04,640 --> 00:39:08,640
the assumption is that the same value

940
00:39:07,359 --> 00:39:11,598
means the same thing

941
00:39:08,640 --> 00:39:13,598
in each of the branch so that's a type

942
00:39:11,599 --> 00:39:16,960
union

943
00:39:13,599 --> 00:39:19,760
and when we did the zebra encoding of

944
00:39:16,960 --> 00:39:21,359
yang this was probably the the most

945
00:39:19,760 --> 00:39:25,359
expensive feature to have

946
00:39:21,359 --> 00:39:28,480
type unions uh like this

947
00:39:25,359 --> 00:39:30,560
the the alternative to that is to

948
00:39:28,480 --> 00:39:32,480
say a choice is a set of named

949
00:39:30,560 --> 00:39:34,880
alternatives

950
00:39:32,480 --> 00:39:37,119
so we we actually want to attach

951
00:39:34,880 --> 00:39:39,520
semantic information to each

952
00:39:37,119 --> 00:39:41,200
branch we want to label the graph that

953
00:39:39,520 --> 00:39:43,680
we set up here

954
00:39:41,200 --> 00:39:44,640
and by putting in names we can also put

955
00:39:43,680 --> 00:39:48,480
in other

956
00:39:44,640 --> 00:39:51,680
descriptive information like like rdf

957
00:39:48,480 --> 00:39:54,240
references and so on and my proposal for

958
00:39:51,680 --> 00:39:57,279
today is to always go for

959
00:39:54,240 --> 00:40:01,040
named alternatives

960
00:39:57,280 --> 00:40:01,040
so next slide

961
00:40:04,960 --> 00:40:09,839
yeah this is just recapping how jason

962
00:40:07,839 --> 00:40:13,279
schema arg does this

963
00:40:09,839 --> 00:40:17,440
maybe next slide so

964
00:40:13,280 --> 00:40:20,400
the the state example

965
00:40:17,440 --> 00:40:21,119
essentially just replaces sdf enum with

966
00:40:20,400 --> 00:40:24,720
choice

967
00:40:21,119 --> 00:40:26,880
it's otherwise the same thing

968
00:40:24,720 --> 00:40:29,439
and maybe we don't need the labels we

969
00:40:26,880 --> 00:40:32,720
can probably use the

970
00:40:29,440 --> 00:40:34,160
branch names as default labels but you

971
00:40:32,720 --> 00:40:37,759
can add labels

972
00:40:34,160 --> 00:40:40,879
in any data type in sdf

973
00:40:37,760 --> 00:40:41,839
and we could also add semantic tags uh

974
00:40:40,880 --> 00:40:45,200
that that

975
00:40:41,839 --> 00:40:47,839
ground this in in some terminology

976
00:40:45,200 --> 00:40:47,839
next slide

977
00:40:48,240 --> 00:40:52,078
and this is the the example that that

978
00:40:51,040 --> 00:40:55,279
mixed any of

979
00:40:52,079 --> 00:40:58,640
and sdf enum

980
00:40:55,280 --> 00:41:02,880
and we now have a single choice that has

981
00:40:58,640 --> 00:41:04,480
both kinds of alternatives

982
00:41:02,880 --> 00:41:06,880
integrated so we don't need the

983
00:41:04,480 --> 00:41:09,040
unnecessary nesting

984
00:41:06,880 --> 00:41:11,119
all the alternatives are named so the

985
00:41:09,040 --> 00:41:14,560
third the top-level alternative

986
00:41:11,119 --> 00:41:15,839
is now named actual setting and it can

987
00:41:14,560 --> 00:41:20,799
have a description

988
00:41:15,839 --> 00:41:24,000
and so on

989
00:41:20,800 --> 00:41:25,200
so that's pretty much the resolution

990
00:41:24,000 --> 00:41:27,280
that

991
00:41:25,200 --> 00:41:29,520
uh i'm proposing for number two and

992
00:41:27,280 --> 00:41:33,760
number five so if you can go back

993
00:41:29,520 --> 00:41:48,160
one slide again um any

994
00:41:33,760 --> 00:41:50,400
discussion of this resolution

995
00:41:48,160 --> 00:41:51,279
should go back to the example that it

996
00:41:50,400 --> 00:41:54,240
was before

997
00:41:51,280 --> 00:41:54,240
the one that we blew up

998
00:41:56,160 --> 00:42:02,640
slide 27 yeah yeah

999
00:41:59,760 --> 00:42:03,920
okay i have to click on the thing within

1000
00:42:02,640 --> 00:42:06,400
the

1001
00:42:03,920 --> 00:42:07,680
window so this had an any out and then

1002
00:42:06,400 --> 00:42:12,319
it had a bunch of

1003
00:42:07,680 --> 00:42:12,319
things down buried into it right

1004
00:42:14,839 --> 00:42:19,839
and

1005
00:42:16,560 --> 00:42:19,839
this one has this choice

1006
00:42:23,520 --> 00:42:27,599
yeah so it's different from any of

1007
00:42:26,079 --> 00:42:32,160
because it's not an array

1008
00:42:27,599 --> 00:42:34,960
it's actually a map a json object

1009
00:42:32,160 --> 00:42:37,359
and it's different from sdf enum because

1010
00:42:34,960 --> 00:42:39,839
we are not giving values here

1011
00:42:37,359 --> 00:42:40,480
single values but we are giving types

1012
00:42:39,839 --> 00:42:42,160
which of course

1013
00:42:40,480 --> 00:42:44,240
internal can be singleton values if we

1014
00:42:42,160 --> 00:42:47,598
use something like const

1015
00:42:44,240 --> 00:42:47,598
in in the type definition

1016
00:42:56,079 --> 00:42:59,839
we have re in the queue

1017
00:43:01,280 --> 00:43:05,040
all right go ahead yeah i actually saw a

1018
00:43:03,760 --> 00:43:07,359
market cluster

1019
00:43:05,040 --> 00:43:09,599
also wrote a comment in the notes maybe

1020
00:43:07,359 --> 00:43:13,839
michael wants to go first

1021
00:43:09,599 --> 00:43:13,839
okay michael

1022
00:43:14,240 --> 00:43:18,319
my comment um well my first comment was

1023
00:43:17,119 --> 00:43:20,240
that this also

1024
00:43:18,319 --> 00:43:22,599
kind of resolves the dilemma we had

1025
00:43:20,240 --> 00:43:25,040
between one of and any of in

1026
00:43:22,599 --> 00:43:27,119
jsonhema.org where there's really an

1027
00:43:25,040 --> 00:43:28,640
ambiguity about they both really kind of

1028
00:43:27,119 --> 00:43:31,920
mean the same thing

1029
00:43:28,640 --> 00:43:33,839
so this sort of takes that choice away

1030
00:43:31,920 --> 00:43:36,160
and and just presents an alternative

1031
00:43:33,839 --> 00:43:39,279
that that has one way of expressing

1032
00:43:36,160 --> 00:43:40,078
uh things and not two so that's pretty

1033
00:43:39,280 --> 00:43:43,440
good and also

1034
00:43:40,079 --> 00:43:46,319
i'd like to just comment that um

1035
00:43:43,440 --> 00:43:47,599
in in looking at trying to express the

1036
00:43:46,319 --> 00:43:50,000
things from different

1037
00:43:47,599 --> 00:43:50,800
ecosystems like bluetooth and zigbee

1038
00:43:50,000 --> 00:43:53,680
where they've

1039
00:43:50,800 --> 00:43:54,400
done uh bit fields and things like that

1040
00:43:53,680 --> 00:43:59,440
that

1041
00:43:54,400 --> 00:44:01,839
that are combined um or

1042
00:43:59,440 --> 00:44:02,560
rather value ranges that are combined

1043
00:44:01,839 --> 00:44:05,920
this is

1044
00:44:02,560 --> 00:44:08,640
uh and really for the enum and for

1045
00:44:05,920 --> 00:44:10,800
the other choices this is really a

1046
00:44:08,640 --> 00:44:12,560
natural pattern i guess really what i

1047
00:44:10,800 --> 00:44:12,960
mean to say this is this is something

1048
00:44:12,560 --> 00:44:16,078
that

1049
00:44:12,960 --> 00:44:17,760
i would be able to go to and not worry

1050
00:44:16,079 --> 00:44:19,680
about whether there was some other way

1051
00:44:17,760 --> 00:44:21,119
or whether i was doing it right

1052
00:44:19,680 --> 00:44:23,279
and that's really one of the bigger

1053
00:44:21,119 --> 00:44:25,599
issues with building a language like

1054
00:44:23,280 --> 00:44:29,040
this is that developers aren't experts

1055
00:44:25,599 --> 00:44:30,880
in in languages and config file formats

1056
00:44:29,040 --> 00:44:32,960
they just want to have you know express

1057
00:44:30,880 --> 00:44:35,839
a model and so this provides a way

1058
00:44:32,960 --> 00:44:37,280
in my opinion that a pretty good way to

1059
00:44:35,839 --> 00:44:38,960
do that

1060
00:44:37,280 --> 00:44:40,960
not that there might be better ones but

1061
00:44:38,960 --> 00:44:41,520
for now this is a really good a really

1062
00:44:40,960 --> 00:44:42,720
good way

1063
00:44:41,520 --> 00:44:47,520
that i think in all the different

1064
00:44:42,720 --> 00:44:47,520
ecosystems could could use and benefit

1065
00:44:48,839 --> 00:44:51,839
from

1066
00:44:54,720 --> 00:45:01,598
okay thank you

1067
00:44:57,839 --> 00:45:01,599
ari well you left the queue

1068
00:45:02,960 --> 00:45:06,640
yeah well again comment now i i noticed

1069
00:45:05,280 --> 00:45:08,079
i had a bit hard time

1070
00:45:06,640 --> 00:45:10,240
following the discussion and taking

1071
00:45:08,079 --> 00:45:13,839
notes at the same time

1072
00:45:10,240 --> 00:45:16,319
um maybe a bit of

1073
00:45:13,839 --> 00:45:18,078
background like um so we're now

1074
00:45:16,319 --> 00:45:21,119
combining the enum

1075
00:45:18,079 --> 00:45:22,560
and and the choice part of me i don't

1076
00:45:21,119 --> 00:45:24,640
quite remember our discussions we had

1077
00:45:22,560 --> 00:45:27,279
before i went for my leave so

1078
00:45:24,640 --> 00:45:28,640
my brain has lost a few months of uh

1079
00:45:27,280 --> 00:45:31,760
discussion

1080
00:45:28,640 --> 00:45:32,960
um but can you go back to what we had

1081
00:45:31,760 --> 00:45:35,520
earlier

1082
00:45:32,960 --> 00:45:35,520
in slides

1083
00:45:41,359 --> 00:45:48,160
yes and here it was we could have either

1084
00:45:45,200 --> 00:45:49,040
the property would have a either a

1085
00:45:48,160 --> 00:45:52,078
static type

1086
00:45:49,040 --> 00:45:56,240
or it could be an enum here's what

1087
00:45:52,079 --> 00:45:58,839
this tries to express is that correct

1088
00:45:56,240 --> 00:46:01,919
i don't know what aesthetic type is but

1089
00:45:58,839 --> 00:46:06,560
uh among the types we have available

1090
00:46:01,920 --> 00:46:06,560
are any kind of type and enums

1091
00:46:10,800 --> 00:46:15,920
okay because i'm

1092
00:46:14,000 --> 00:46:17,920
yeah maybe this this example is perhaps

1093
00:46:15,920 --> 00:46:20,000
a slightly confusing without knowing the

1094
00:46:17,920 --> 00:46:21,280
background of the what the data model is

1095
00:46:20,000 --> 00:46:23,680
actually trying to

1096
00:46:21,280 --> 00:46:23,680
express

1097
00:46:26,000 --> 00:46:30,319
the background is that they had a bite

1098
00:46:28,079 --> 00:46:34,000
and and had to find

1099
00:46:30,319 --> 00:46:34,480
a way to encode the various things they

1100
00:46:34,000 --> 00:46:37,119
wanted

1101
00:46:34,480 --> 00:46:38,960
into that byte and it's funny that they

1102
00:46:37,119 --> 00:46:40,560
don't have a maximum device where you're

1103
00:46:38,960 --> 00:46:43,359
permitted because

1104
00:46:40,560 --> 00:46:44,720
uh byte value can only have two extremes

1105
00:46:43,359 --> 00:46:48,880
and not three

1106
00:46:44,720 --> 00:46:52,959
um and um so we we're trying to

1107
00:46:48,880 --> 00:46:56,400
to represent this um

1108
00:46:52,960 --> 00:46:58,319
choice between the the

1109
00:46:56,400 --> 00:47:00,800
actual setting which which doesn't have

1110
00:46:58,319 --> 00:47:02,740
a name here in the any of

1111
00:47:00,800 --> 00:47:05,680
and the the

1112
00:47:02,740 --> 00:47:09,598
[Music]

1113
00:47:05,680 --> 00:47:11,919
instructions for deriving a setting

1114
00:47:09,599 --> 00:47:13,520
where we have a minimum device and the

1115
00:47:11,920 --> 00:47:15,200
previous value

1116
00:47:13,520 --> 00:47:17,839
and we are all trying to encode this

1117
00:47:15,200 --> 00:47:21,118
into a single byte

1118
00:47:17,839 --> 00:47:21,759
okay i see so it just so it's the same

1119
00:47:21,119 --> 00:47:24,960
value

1120
00:47:21,760 --> 00:47:27,440
uh interpreting two different ways

1121
00:47:24,960 --> 00:47:29,760
in a sense like i mean same value on the

1122
00:47:27,440 --> 00:47:29,760
wire

1123
00:47:30,079 --> 00:47:37,200
the value is 0 1 254 or 255

1124
00:47:34,079 --> 00:47:39,200
or something in between yeah and if the

1125
00:47:37,200 --> 00:47:40,879
value is zero you interpret us as an

1126
00:47:39,200 --> 00:47:42,319
enum if your value is one to two fifty

1127
00:47:40,880 --> 00:47:46,000
four you interpret it as a

1128
00:47:42,319 --> 00:47:48,160
yes hello that's i see

1129
00:47:46,000 --> 00:47:50,839
good that's really a representation

1130
00:47:48,160 --> 00:47:53,279
thing and then not uh

1131
00:47:50,839 --> 00:47:57,119
information

1132
00:47:53,280 --> 00:47:57,119
if you can go back to the proposal

1133
00:47:59,920 --> 00:48:03,839
and so if i was standing at the mic in a

1134
00:48:02,000 --> 00:48:06,079
room you probably would have seen me but

1135
00:48:03,839 --> 00:48:09,279
what i wanted to say was that

1136
00:48:06,079 --> 00:48:12,720
the actual modeled intention of this

1137
00:48:09,280 --> 00:48:15,040
pattern if you had out of band

1138
00:48:12,720 --> 00:48:18,000
things you would you would have probably

1139
00:48:15,040 --> 00:48:20,160
left the setting at zero to 255

1140
00:48:18,000 --> 00:48:21,280
and would have created two exclusive

1141
00:48:20,160 --> 00:48:23,680
out-of-band

1142
00:48:21,280 --> 00:48:25,200
states and so if i was rebuilding this

1143
00:48:23,680 --> 00:48:27,598
from scratch

1144
00:48:25,200 --> 00:48:28,799
i would create probably two resources

1145
00:48:27,599 --> 00:48:30,720
one that had the

1146
00:48:28,800 --> 00:48:32,559
the settings and maybe three settings

1147
00:48:30,720 --> 00:48:34,240
one which would be value the other would

1148
00:48:32,559 --> 00:48:35,440
be minimum and the other would be set to

1149
00:48:34,240 --> 00:48:37,040
previous

1150
00:48:35,440 --> 00:48:39,520
and when they set it at value it would

1151
00:48:37,040 --> 00:48:40,720
use the scalar that was the value that

1152
00:48:39,520 --> 00:48:43,200
would have the full

1153
00:48:40,720 --> 00:48:44,160
range but since they wanted to pack

1154
00:48:43,200 --> 00:48:46,399
things

1155
00:48:44,160 --> 00:48:48,000
they they took this other alternative

1156
00:48:46,400 --> 00:48:50,400
but you see that this pattern

1157
00:48:48,000 --> 00:48:52,480
would be useful in modeling the intended

1158
00:48:50,400 --> 00:48:55,599
pattern with the range

1159
00:48:52,480 --> 00:48:57,119
that you wanted it could be 0 to 255 and

1160
00:48:55,599 --> 00:48:58,720
there could be two other

1161
00:48:57,119 --> 00:49:00,880
two other things and you would be free

1162
00:48:58,720 --> 00:49:03,759
to map these in a mapping file

1163
00:49:00,880 --> 00:49:04,640
differently if you wanted to and

1164
00:49:03,760 --> 00:49:07,119
implement them

1165
00:49:04,640 --> 00:49:08,640
in any way you wanted as long as you had

1166
00:49:07,119 --> 00:49:10,640
the property of

1167
00:49:08,640 --> 00:49:12,799
these being exclusive and the fact that

1168
00:49:10,640 --> 00:49:14,640
you expressed it as a choice

1169
00:49:12,800 --> 00:49:16,240
does basically say that you want it

1170
00:49:14,640 --> 00:49:17,920
exclusive and this is what i mean by

1171
00:49:16,240 --> 00:49:19,520
saying it's a natural pattern for

1172
00:49:17,920 --> 00:49:22,480
implementing what the higher

1173
00:49:19,520 --> 00:49:31,520
level intention the semantic intention

1174
00:49:22,480 --> 00:49:33,440
behind the weirdness in the model

1175
00:49:31,520 --> 00:49:35,119
okay thanks now now i understand i think

1176
00:49:33,440 --> 00:49:36,720
yeah this seems like a useful pattern

1177
00:49:35,119 --> 00:49:39,839
especially when you're trying to

1178
00:49:36,720 --> 00:49:43,200
represent ecosystem specific things uh

1179
00:49:39,839 --> 00:49:44,078
as accurately as as possible um probably

1180
00:49:43,200 --> 00:49:46,000
for the

1181
00:49:44,079 --> 00:49:47,440
consolidated models we would through

1182
00:49:46,000 --> 00:49:49,520
that quite a different way and then have

1183
00:49:47,440 --> 00:49:52,319
it easier mapping to other systems but

1184
00:49:49,520 --> 00:49:54,400
ecosystem specific models now now i i

1185
00:49:52,319 --> 00:49:57,520
understand the use case here

1186
00:49:54,400 --> 00:49:58,000
that's right the values would go into a

1187
00:49:57,520 --> 00:50:00,480
mapping

1188
00:49:58,000 --> 00:50:02,319
file but they're shown here just as a

1189
00:50:00,480 --> 00:50:04,720
convenience so we can visualize the

1190
00:50:02,319 --> 00:50:04,720
pattern

1191
00:50:08,240 --> 00:50:13,439
okay so eric you have one goodness

1192
00:50:11,920 --> 00:50:15,040
you're allowed to put these constraints

1193
00:50:13,440 --> 00:50:17,839
in if you want um

1194
00:50:15,040 --> 00:50:18,720
but but normally you would want to do it

1195
00:50:17,839 --> 00:50:20,960
in a way that's

1196
00:50:18,720 --> 00:50:26,799
flexible in the definition and doesn't

1197
00:50:20,960 --> 00:50:30,640
put the constraints in until you map it

1198
00:50:26,800 --> 00:50:33,760
oh you had one comment in in the issues

1199
00:50:30,640 --> 00:50:34,799
uh somewhere uh that i think is is

1200
00:50:33,760 --> 00:50:38,800
interesting

1201
00:50:34,800 --> 00:50:43,200
uh so you said if we arrange

1202
00:50:38,800 --> 00:50:47,440
the the branches in an array

1203
00:50:43,200 --> 00:50:51,200
we can use the indexing of that array

1204
00:50:47,440 --> 00:50:55,359
as an implicit label

1205
00:50:51,200 --> 00:50:58,720
so i i didn't quite pick this up

1206
00:50:55,359 --> 00:51:01,359
but we we could pull a javascript here

1207
00:50:58,720 --> 00:51:04,160
and say that that choice actually

1208
00:51:01,359 --> 00:51:05,119
can be either a map like we see on the

1209
00:51:04,160 --> 00:51:08,399
screen here

1210
00:51:05,119 --> 00:51:11,920
or it can be an array where the the

1211
00:51:08,400 --> 00:51:15,520
index actually takes the the meaning of

1212
00:51:11,920 --> 00:51:18,160
the map key of of the label actually

1213
00:51:15,520 --> 00:51:21,280
setting minimum device and so on

1214
00:51:18,160 --> 00:51:23,040
um i just don't have an example where i

1215
00:51:21,280 --> 00:51:26,319
actually would like to

1216
00:51:23,040 --> 00:51:27,040
to use this so i i didn't set up such an

1217
00:51:26,319 --> 00:51:29,920
example

1218
00:51:27,040 --> 00:51:32,558
but if we really want to to benefit from

1219
00:51:29,920 --> 00:51:34,880
this implicit ordering in the array

1220
00:51:32,559 --> 00:51:36,400
then we could do that but we also need

1221
00:51:34,880 --> 00:51:39,520
to warn

1222
00:51:36,400 --> 00:51:41,440
people that having this implicit

1223
00:51:39,520 --> 00:51:42,319
numbering of course is very brittle so

1224
00:51:41,440 --> 00:51:45,680
when they change

1225
00:51:42,319 --> 00:51:46,480
the the set of uh entries the numbers

1226
00:51:45,680 --> 00:51:49,598
change and

1227
00:51:46,480 --> 00:51:49,599
all hell breaks loose

1228
00:51:49,680 --> 00:51:54,078
yeah yeah i mean that uh using the array

1229
00:51:52,319 --> 00:51:56,319
index comment was kind of a

1230
00:51:54,079 --> 00:51:58,319
potential way to get around of that like

1231
00:51:56,319 --> 00:52:00,240
we don't want to assign ids but yeah you

1232
00:51:58,319 --> 00:52:01,200
have very good point on the brittleness

1233
00:52:00,240 --> 00:52:04,240
of that

1234
00:52:01,200 --> 00:52:07,200
um my point was mainly

1235
00:52:04,240 --> 00:52:07,680
um yes we did discuss earlier things

1236
00:52:07,200 --> 00:52:10,799
like

1237
00:52:07,680 --> 00:52:14,799
object id and resource ids

1238
00:52:10,800 --> 00:52:16,480
maybe don't belong uh in the um

1239
00:52:14,800 --> 00:52:17,680
information model level because they

1240
00:52:16,480 --> 00:52:18,800
will be very different in different

1241
00:52:17,680 --> 00:52:20,480
ecosystems

1242
00:52:18,800 --> 00:52:22,480
but i would argue that when it comes to

1243
00:52:20,480 --> 00:52:26,160
enums they are

1244
00:52:22,480 --> 00:52:26,160
rather tightly scoped

1245
00:52:26,480 --> 00:52:33,280
there's a good chance that like

1246
00:52:29,680 --> 00:52:33,839
those same index or same values would be

1247
00:52:33,280 --> 00:52:38,160
used

1248
00:52:33,839 --> 00:52:40,078
across multiple ecosystems and then

1249
00:52:38,160 --> 00:52:41,279
like making less effort for the mapping

1250
00:52:40,079 --> 00:52:43,760
file we just say

1251
00:52:41,280 --> 00:52:44,559
use the values from the information

1252
00:52:43,760 --> 00:52:48,160
model

1253
00:52:44,559 --> 00:52:49,599
as the values in the uh on the wire

1254
00:52:48,160 --> 00:52:51,839
would be very convenient that you don't

1255
00:52:49,599 --> 00:52:53,760
actually have to or otherwise all the

1256
00:52:51,839 --> 00:52:56,160
ecosystems would have the same mapping

1257
00:52:53,760 --> 00:52:57,280
you know have to do the same mapping to

1258
00:52:56,160 --> 00:53:00,319
the ids

1259
00:52:57,280 --> 00:53:02,720
uh all over again and the

1260
00:53:00,319 --> 00:53:04,640
using the array would be one way to

1261
00:53:02,720 --> 00:53:06,799
implicitly get such indexes but you do

1262
00:53:04,640 --> 00:53:09,920
have a point that it is

1263
00:53:06,800 --> 00:53:12,839
brittle um but i would still argue that

1264
00:53:09,920 --> 00:53:14,480
having some way of

1265
00:53:12,839 --> 00:53:16,880
indicating this

1266
00:53:14,480 --> 00:53:18,880
somehow either ordering or or some way

1267
00:53:16,880 --> 00:53:22,160
where you can easily derive

1268
00:53:18,880 --> 00:53:23,920
the on the wire um value would be very

1269
00:53:22,160 --> 00:53:25,598
useful for enums

1270
00:53:23,920 --> 00:53:27,520
even if we don't want to do it for

1271
00:53:25,599 --> 00:53:30,800
object ids and resource ids yeah so

1272
00:53:27,520 --> 00:53:34,079
let me reply to that before

1273
00:53:30,800 --> 00:53:36,240
michael gets next um basically

1274
00:53:34,079 --> 00:53:38,240
there are two cases where what what

1275
00:53:36,240 --> 00:53:41,200
you're saying makes sense

1276
00:53:38,240 --> 00:53:42,879
one is an ecosystem actually decides to

1277
00:53:41,200 --> 00:53:46,078
do all their development

1278
00:53:42,880 --> 00:53:48,640
in sdf they no longer use their own

1279
00:53:46,079 --> 00:53:50,400
weird way to write models they write all

1280
00:53:48,640 --> 00:53:52,558
their models in sdf

1281
00:53:50,400 --> 00:53:54,079
and for that ecosystem it becomes very

1282
00:53:52,559 --> 00:53:57,119
honorous to

1283
00:53:54,079 --> 00:54:00,400
actually do their numbering

1284
00:53:57,119 --> 00:54:02,559
in a separate file and set up

1285
00:54:00,400 --> 00:54:05,280
all the back and forth pointers and so

1286
00:54:02,559 --> 00:54:07,839
on so for those ecosystems we want to be

1287
00:54:05,280 --> 00:54:09,440
able to put something like an id

1288
00:54:07,839 --> 00:54:11,920
in there but it probably would be a good

1289
00:54:09,440 --> 00:54:12,880
idea to label that id with actually the

1290
00:54:11,920 --> 00:54:17,280
name of the

1291
00:54:12,880 --> 00:54:19,760
ecosystem and in a converged situation

1292
00:54:17,280 --> 00:54:20,880
uh you may have this situation where

1293
00:54:19,760 --> 00:54:24,880
there's just an

1294
00:54:20,880 --> 00:54:25,920
industry standard way of giving hours

1295
00:54:24,880 --> 00:54:28,800
the number zero

1296
00:54:25,920 --> 00:54:30,640
and g the number one and b the number

1297
00:54:28,800 --> 00:54:33,680
two or something like that

1298
00:54:30,640 --> 00:54:37,279
and there is no point in

1299
00:54:33,680 --> 00:54:39,279
doing all the same ecosystem specific

1300
00:54:37,280 --> 00:54:41,200
mapping for all ecosystems because all

1301
00:54:39,280 --> 00:54:44,880
ecosystems use the same mapping

1302
00:54:41,200 --> 00:54:46,399
and that would also be a place where we

1303
00:54:44,880 --> 00:54:50,000
would want to

1304
00:54:46,400 --> 00:54:52,000
put ids into the

1305
00:54:50,000 --> 00:54:53,119
conv into the model in this case the

1306
00:54:52,000 --> 00:54:56,799
converged

1307
00:54:53,119 --> 00:54:57,599
uh model and then we wouldn't have a

1308
00:54:56,799 --> 00:55:01,520
need to

1309
00:54:57,599 --> 00:55:03,680
to generate tons of mapping files

1310
00:55:01,520 --> 00:55:05,040
so i think there is a good reason to

1311
00:55:03,680 --> 00:55:07,680
have that

1312
00:55:05,040 --> 00:55:09,040
but i also think that there needs to be

1313
00:55:07,680 --> 00:55:14,319
a naming scheme

1314
00:55:09,040 --> 00:55:14,319
that avoids collisions

1315
00:55:15,280 --> 00:55:18,400
yeah absolutely absolutely we cannot

1316
00:55:17,680 --> 00:55:20,399
dictate

1317
00:55:18,400 --> 00:55:21,920
what is what is used so i think it's it

1318
00:55:20,400 --> 00:55:23,760
would be a natural way would be that the

1319
00:55:21,920 --> 00:55:24,640
mapping file can always overwrite the

1320
00:55:23,760 --> 00:55:26,160
default or

1321
00:55:24,640 --> 00:55:27,920
it's simply if you don't say anything

1322
00:55:26,160 --> 00:55:30,558
the default is used

1323
00:55:27,920 --> 00:55:31,119
but um but yeah i i can imagine there

1324
00:55:30,559 --> 00:55:33,359
would be

1325
00:55:31,119 --> 00:55:35,599
a lot of cases like when an ecosystem

1326
00:55:33,359 --> 00:55:37,440
adopts a model from the converse set

1327
00:55:35,599 --> 00:55:38,799
but they i mean there is no conflict

1328
00:55:37,440 --> 00:55:42,000
because they don't have that kind of

1329
00:55:38,799 --> 00:55:44,079
thing yet simply being able to use it uh

1330
00:55:42,000 --> 00:55:45,839
as such would be convenient instead of

1331
00:55:44,079 --> 00:55:49,040
needing to every time come up with that

1332
00:55:45,839 --> 00:55:52,160
with a mapping just one small step less

1333
00:55:49,040 --> 00:55:53,599
less to do and for those translators

1334
00:55:52,160 --> 00:55:55,040
that they could have okay this is the

1335
00:55:53,599 --> 00:55:56,559
default case i don't need any extra

1336
00:55:55,040 --> 00:55:58,640
piece of code of doing mapping

1337
00:55:56,559 --> 00:56:00,400
let's do one one on one can push the

1338
00:55:58,640 --> 00:56:03,440
same values across

1339
00:56:00,400 --> 00:56:05,119
i i think that would be a valuable thing

1340
00:56:03,440 --> 00:56:07,440
to enable

1341
00:56:05,119 --> 00:56:09,839
but again probably we'll we'll see with

1342
00:56:07,440 --> 00:56:11,359
a few examples of mapping files

1343
00:56:09,839 --> 00:56:13,119
having those or not having those if it

1344
00:56:11,359 --> 00:56:15,440
makes a big difference but

1345
00:56:13,119 --> 00:56:16,799
my hunch would be that that would be a

1346
00:56:15,440 --> 00:56:20,000
useful thing to have

1347
00:56:16,799 --> 00:56:23,280
um kind of default value

1348
00:56:20,000 --> 00:56:23,280
for the uh enum

1349
00:56:25,599 --> 00:56:29,040
so what i wanted to say was that i think

1350
00:56:28,400 --> 00:56:33,440
first

1351
00:56:29,040 --> 00:56:35,759
um we we kind of probably resolved that

1352
00:56:33,440 --> 00:56:38,000
just relying on an array index which is

1353
00:56:35,760 --> 00:56:39,760
an artifact of the chosen

1354
00:56:38,000 --> 00:56:41,760
representation which is already an

1355
00:56:39,760 --> 00:56:43,040
approximation is probably not a good

1356
00:56:41,760 --> 00:56:46,160
idea but

1357
00:56:43,040 --> 00:56:48,558
fortunately we have a facility called

1358
00:56:46,160 --> 00:56:50,799
default that already exists in json

1359
00:56:48,559 --> 00:56:53,520
schema that we can use to specify these

1360
00:56:50,799 --> 00:56:55,599
that really has a well-defined way of

1361
00:56:53,520 --> 00:56:56,799
behaving that probably suits our

1362
00:56:55,599 --> 00:56:58,799
requirements

1363
00:56:56,799 --> 00:57:00,960
as well as another one called constant

1364
00:56:58,799 --> 00:57:03,520
so i think what we need to do is look at

1365
00:57:00,960 --> 00:57:04,400
default and constant of json schema

1366
00:57:03,520 --> 00:57:06,319
which i put in

1367
00:57:04,400 --> 00:57:07,680
both of these in some different examples

1368
00:57:06,319 --> 00:57:09,920
in different places

1369
00:57:07,680 --> 00:57:11,520
and see if that meets the needs of

1370
00:57:09,920 --> 00:57:13,760
explicitly defining

1371
00:57:11,520 --> 00:57:16,160
a something that we might use for a

1372
00:57:13,760 --> 00:57:17,520
converged model or forest carson said if

1373
00:57:16,160 --> 00:57:19,520
there was some industry standard

1374
00:57:17,520 --> 00:57:22,160
numbering that we could build in

1375
00:57:19,520 --> 00:57:24,240
see if default or constant or some

1376
00:57:22,160 --> 00:57:26,160
combination of that

1377
00:57:24,240 --> 00:57:29,598
when an overrides actually meets the

1378
00:57:26,160 --> 00:57:32,078
needs that you that you want

1379
00:57:29,599 --> 00:57:32,880
i think default is actually the totally

1380
00:57:32,079 --> 00:57:35,599
the wrong

1381
00:57:32,880 --> 00:57:36,480
way to express this because default

1382
00:57:35,599 --> 00:57:40,160
means

1383
00:57:36,480 --> 00:57:43,200
the the entire range is available

1384
00:57:40,160 --> 00:57:45,759
and there's if the

1385
00:57:43,200 --> 00:57:47,919
value is not present then this is

1386
00:57:45,760 --> 00:57:50,559
equivalent to the value being present

1387
00:57:47,920 --> 00:57:52,160
and having the default value so if you

1388
00:57:50,559 --> 00:57:53,280
think about minimum device video

1389
00:57:52,160 --> 00:57:56,640
permitted here if

1390
00:57:53,280 --> 00:57:58,480
that's at default zero uh this

1391
00:57:56,640 --> 00:58:00,960
would mean uh whenever the minimum

1392
00:57:58,480 --> 00:58:03,440
device value permitted is not there

1393
00:58:00,960 --> 00:58:05,520
um it's a zero and if it's there it can

1394
00:58:03,440 --> 00:58:07,119
be forty five

1395
00:58:05,520 --> 00:58:22,000
and and that's certainly not what is

1396
00:58:07,119 --> 00:58:23,520
intended in this example

1397
00:58:22,000 --> 00:58:25,119
we could invent something new but we

1398
00:58:23,520 --> 00:58:25,680
wouldn't call it default because default

1399
00:58:25,119 --> 00:58:30,880
has this

1400
00:58:25,680 --> 00:58:30,879
very very different meaning

1401
00:58:30,960 --> 00:58:37,839
for more

1402
00:58:41,040 --> 00:58:44,799
i think michael put up an example in in

1403
00:58:43,599 --> 00:58:50,720
one of the issues

1404
00:58:44,799 --> 00:58:52,720
um trying to remember which one this was

1405
00:58:50,720 --> 00:58:55,598
because we have we want an example with

1406
00:58:52,720 --> 00:58:56,720
actually id numbers i think if we want

1407
00:58:55,599 --> 00:59:05,680
to resolve

1408
00:58:56,720 --> 00:59:08,879
but um i think that

1409
00:59:05,680 --> 00:59:09,279
yeah i can't point to one either right

1410
00:59:08,880 --> 00:59:12,000
off

1411
00:59:09,280 --> 00:59:14,079
hand that that i did that actually uses

1412
00:59:12,000 --> 00:59:15,280
id numbers maybe you want the ipso

1413
00:59:14,079 --> 00:59:18,319
example

1414
00:59:15,280 --> 00:59:20,319
i just put it in like label or or

1415
00:59:18,319 --> 00:59:21,920
description or something for the time

1416
00:59:20,319 --> 00:59:23,279
being because i wanted to put it in a

1417
00:59:21,920 --> 00:59:25,440
mapping file

1418
00:59:23,280 --> 00:59:27,760
but we also have constant if we make

1419
00:59:25,440 --> 00:59:29,839
constant to be overrideable that might

1420
00:59:27,760 --> 00:59:32,960
be a better way of saying it but but

1421
00:59:29,839 --> 00:59:35,119
also carson as you say may be different

1422
00:59:32,960 --> 00:59:36,880
a different system of accounting for

1423
00:59:35,119 --> 00:59:38,640
maybe multiple numbering sets

1424
00:59:36,880 --> 00:59:40,079
in line or something like that might be

1425
00:59:38,640 --> 00:59:42,319
something if we have more

1426
00:59:40,079 --> 00:59:43,520
more use cases we might find that's a

1427
00:59:42,319 --> 00:59:46,558
better solution

1428
00:59:43,520 --> 00:59:47,920
but um yeah i i guess i get your point

1429
00:59:46,559 --> 00:59:49,760
on default it's

1430
00:59:47,920 --> 00:59:52,240
something i just used in the examples

1431
00:59:49,760 --> 00:59:54,640
but uh yeah we don't want it to be

1432
00:59:52,240 --> 01:00:01,839
put in if you don't specify anything

1433
00:59:54,640 --> 01:00:01,839
that's not the desired behavior

1434
01:00:07,599 --> 01:00:10,799
maybe good good way forward like if we

1435
01:00:10,160 --> 01:00:13,279
could

1436
01:00:10,799 --> 01:00:14,640
um like gonna do a three-way i mean

1437
01:00:13,280 --> 01:00:17,760
three different ecosystems

1438
01:00:14,640 --> 01:00:19,920
um example of of some existing

1439
01:00:17,760 --> 01:00:22,160
minimum and see how how would it look

1440
01:00:19,920 --> 01:00:24,640
like i think that the choice pattern

1441
01:00:22,160 --> 01:00:25,279
what we see here i i don't see any

1442
01:00:24,640 --> 01:00:27,440
obvious

1443
01:00:25,280 --> 01:00:29,040
problems with that i mean one potential

1444
01:00:27,440 --> 01:00:30,559
thing to think about would be this array

1445
01:00:29,040 --> 01:00:32,720
approach but

1446
01:00:30,559 --> 01:00:33,599
good point on the brittleness so maybe

1447
01:00:32,720 --> 01:00:37,598
this

1448
01:00:33,599 --> 01:00:40,720
approach is is better uh for it

1449
01:00:37,599 --> 01:00:42,480
and then see how how it looks like

1450
01:00:40,720 --> 01:00:44,959
but i think this is going to good

1451
01:00:42,480 --> 01:00:47,119
direction

1452
01:00:44,960 --> 01:00:49,040
so if you have a tool that generates

1453
01:00:47,119 --> 01:00:50,880
this that tool of course can do the

1454
01:00:49,040 --> 01:00:53,599
numbering and

1455
01:00:50,880 --> 01:00:54,240
insert zero one two three four five as

1456
01:00:53,599 --> 01:00:57,280
labels

1457
01:00:54,240 --> 01:01:00,399
and and two the choice

1458
01:00:57,280 --> 01:01:02,319
it's only when you do this manually that

1459
01:01:00,400 --> 01:01:04,240
it becomes a little tedious but it's not

1460
01:01:02,319 --> 01:01:07,680
that tedious and it also

1461
01:01:04,240 --> 01:01:07,680
saves you from the brittleness

1462
01:01:08,880 --> 01:01:12,400
yeah it's not a good idea to use the

1463
01:01:11,359 --> 01:01:14,960
array position

1464
01:01:12,400 --> 01:01:18,400
to assign some ecosystem id number that

1465
01:01:14,960 --> 01:01:18,400
you're going to then depend on

1466
01:01:18,640 --> 01:01:23,920
so most languages that have this iota

1467
01:01:22,319 --> 01:01:26,400
kind of thing where where you have

1468
01:01:23,920 --> 01:01:29,599
automatic numbers numberings

1469
01:01:26,400 --> 01:01:31,839
uh have a way to

1470
01:01:29,599 --> 01:01:35,920
switch to a position in the numbering

1471
01:01:31,839 --> 01:01:38,720
scheme in the middle of the sequence

1472
01:01:35,920 --> 01:01:40,319
which is easy to do if you can invent

1473
01:01:38,720 --> 01:01:43,279
your own syntax it just becomes very

1474
01:01:40,319 --> 01:01:45,359
ugly if you have to express it in json

1475
01:01:43,280 --> 01:01:46,480
by the way there is also an email that

1476
01:01:45,359 --> 01:01:49,440
water

1477
01:01:46,480 --> 01:01:49,440
no not an email

1478
01:01:50,319 --> 01:01:57,839
like can you go to the um

1479
01:01:54,240 --> 01:01:57,839
issue list issue number two

1480
01:01:59,359 --> 01:02:06,078
that maybe um we should do that

1481
01:02:02,640 --> 01:02:09,038
and i do that by stopping

1482
01:02:06,079 --> 01:02:11,359
my screen sharing starting livestream

1483
01:02:09,039 --> 01:02:11,359
yes

1484
01:02:13,760 --> 01:02:23,280
that one is not too big

1485
01:02:18,720 --> 01:02:23,279
you want to go to number two yes

1486
01:02:24,319 --> 01:02:35,839
so right at the end there is a comment

1487
01:02:26,079 --> 01:02:35,839
from water

1488
01:02:46,240 --> 01:02:50,720
yeah that's um pretty much a prototype

1489
01:02:49,760 --> 01:02:53,280
for

1490
01:02:50,720 --> 01:02:54,640
the things that happen if if you only

1491
01:02:53,280 --> 01:02:57,680
have a hammer

1492
01:02:54,640 --> 01:03:00,799
um so uh starting to

1493
01:02:57,680 --> 01:03:04,319
encode information in the labels

1494
01:03:00,799 --> 01:03:17,839
and having to pass the label to actually

1495
01:03:04,319 --> 01:03:17,839
extract the structure

1496
01:03:18,799 --> 01:03:22,559
i mean towards that that extract uh

1497
01:03:21,440 --> 01:03:26,160
jason schema all

1498
01:03:22,559 --> 01:03:26,720
stuff and populate this from jason

1499
01:03:26,160 --> 01:03:30,000
schema

1500
01:03:26,720 --> 01:03:32,399
won't have a big problem um actually

1501
01:03:30,000 --> 01:03:33,760
doing the the renaming from whatever

1502
01:03:32,400 --> 01:03:37,920
adjacent schema argues

1503
01:03:33,760 --> 01:03:38,480
to what we use so they would rename both

1504
01:03:37,920 --> 01:03:41,599
any of

1505
01:03:38,480 --> 01:03:43,039
and and sdf into choice and they would

1506
01:03:41,599 --> 01:03:47,359
have to invent

1507
01:03:43,039 --> 01:03:47,359
some labeling for the any of case

1508
01:03:48,000 --> 01:03:59,839
i don't think that's a big problem

1509
01:04:01,920 --> 01:04:06,340
are you still in the queue

1510
01:04:03,200 --> 01:04:06,339
[Music]

1511
01:04:07,839 --> 01:04:15,680
oh yeah i forgot to leave the queue

1512
01:04:11,440 --> 01:04:17,599
but since now i'm i'm here um

1513
01:04:15,680 --> 01:04:19,279
you had a good point about this turning

1514
01:04:17,599 --> 01:04:22,319
the the sdf

1515
01:04:19,280 --> 01:04:23,839
and description in json schema and does

1516
01:04:22,319 --> 01:04:26,400
this using choice for both

1517
01:04:23,839 --> 01:04:28,078
bring us challenges there that whether

1518
01:04:26,400 --> 01:04:29,520
it turns to the enum or whether it turns

1519
01:04:28,079 --> 01:04:32,160
into

1520
01:04:29,520 --> 01:04:32,160
sdf any

1521
01:04:32,640 --> 01:04:36,400
well if i were writing the code i would

1522
01:04:35,520 --> 01:04:39,038
look into

1523
01:04:36,400 --> 01:04:41,039
the choice and see if any of the

1524
01:04:39,039 --> 01:04:43,680
branches are

1525
01:04:41,039 --> 01:04:44,960
singletons certain types with just a

1526
01:04:43,680 --> 01:04:47,440
string in them

1527
01:04:44,960 --> 01:04:49,599
and then i would put all these things

1528
01:04:47,440 --> 01:04:51,839
into a

1529
01:04:49,599 --> 01:04:55,839
json schema or enum and put everything

1530
01:04:51,839 --> 01:04:55,839
else into an anio

1531
01:04:55,920 --> 01:05:00,640
okay so it's pretty straightforward i

1532
01:04:58,559 --> 01:05:02,880
think so

1533
01:05:00,640 --> 01:05:02,879
good

1534
01:05:04,400 --> 01:05:08,799
yeah maybe actually developing a bit of

1535
01:05:06,880 --> 01:05:12,160
that tooling would reduce some of

1536
01:05:08,799 --> 01:05:15,200
outer's concerns um on that i wonder if

1537
01:05:12,160 --> 01:05:18,640
we do have do we have walter

1538
01:05:15,200 --> 01:05:23,839
today you said he had a conflict

1539
01:05:18,640 --> 01:05:23,839
okay too bad um

1540
01:05:24,640 --> 01:05:30,000
but yeah that could maybe be a useful

1541
01:05:27,839 --> 01:05:32,160
thing to look at next in in our hacking

1542
01:05:30,000 --> 01:05:34,400
exercises on this actually turning

1543
01:05:32,160 --> 01:05:36,078
these constructs into standard json

1544
01:05:34,400 --> 01:05:39,839
schema work

1545
01:05:36,079 --> 01:05:39,839
for those who rely on those

1546
01:05:44,079 --> 01:05:47,839
next week is a great week to to do a

1547
01:05:46,240 --> 01:05:49,598
little hackathon i mean all the

1548
01:05:47,839 --> 01:05:52,960
americans are

1549
01:05:49,599 --> 01:05:57,039
doing their virtual thanksgiving but

1550
01:05:52,960 --> 01:05:59,599
we europeans can can work together and

1551
01:05:57,039 --> 01:05:59,599
fix this

1552
01:06:01,440 --> 01:06:08,480
sounds good

1553
01:06:04,559 --> 01:06:10,960
uh yeah because i think like for me

1554
01:06:08,480 --> 01:06:12,720
the main reason why the plane enum

1555
01:06:10,960 --> 01:06:13,280
doesn't work is that it it's missing

1556
01:06:12,720 --> 01:06:15,439
even

1557
01:06:13,280 --> 01:06:16,559
a way to add description like if that's

1558
01:06:15,440 --> 01:06:18,160
something what

1559
01:06:16,559 --> 01:06:20,480
we we really need and i don't want to

1560
01:06:18,160 --> 01:06:22,000
have an awkward way to add description

1561
01:06:20,480 --> 01:06:25,359
because i think that should be

1562
01:06:22,000 --> 01:06:25,359
part of it almost every time

1563
01:06:27,440 --> 01:06:30,559
so we anyway need something more

1564
01:06:29,760 --> 01:06:34,480
powerful

1565
01:06:30,559 --> 01:06:34,480
than the plane jso enum

1566
01:06:41,520 --> 01:06:44,880
so michael is also in the queue

1567
01:06:45,680 --> 01:06:51,440
please say that um having a stable uri

1568
01:06:49,039 --> 01:06:52,400
in the json pointer is pretty important

1569
01:06:51,440 --> 01:06:55,200
also and the

1570
01:06:52,400 --> 01:06:55,839
as as we've shown that that trying to

1571
01:06:55,200 --> 01:06:59,200
maintain

1572
01:06:55,839 --> 01:07:04,558
array ordering to create that stable uri

1573
01:06:59,200 --> 01:07:04,558
is is error-prone

1574
01:07:12,839 --> 01:07:15,839
brittle

1575
01:07:21,440 --> 01:07:29,839
so should we go back to the slides

1576
01:07:37,599 --> 01:07:44,319
yeah next slide so this

1577
01:07:41,200 --> 01:07:46,960
finish carson sorry sorry

1578
01:07:44,319 --> 01:07:48,960
just on the previous one did we really

1579
01:07:46,960 --> 01:07:50,960
decide on what to do next because it

1580
01:07:48,960 --> 01:07:52,640
felt like we are

1581
01:07:50,960 --> 01:07:54,240
still in a bit of discussion should we

1582
01:07:52,640 --> 01:07:57,279
implement the choice as

1583
01:07:54,240 --> 01:07:59,680
and test it out as ari said or

1584
01:07:57,280 --> 01:08:01,440
okay we we build more examples and

1585
01:07:59,680 --> 01:08:03,359
convince ourselves that

1586
01:08:01,440 --> 01:08:05,039
the way forward we have discussed

1587
01:08:03,359 --> 01:08:08,400
actually makes sense

1588
01:08:05,039 --> 01:08:11,680
okay good points was that an example

1589
01:08:08,400 --> 01:08:12,559
and that a mapping to three different

1590
01:08:11,680 --> 01:08:15,839
ecosystems

1591
01:08:12,559 --> 01:08:19,199
was key um and i guess because they

1592
01:08:15,839 --> 01:08:22,080
would each wind up with

1593
01:08:19,198 --> 01:08:24,080
some conflict that would have to be

1594
01:08:22,080 --> 01:08:27,679
resolved or some

1595
01:08:24,080 --> 01:08:30,960
uh inconsistency that wouldn't just be

1596
01:08:27,679 --> 01:08:33,600
pick one of the two right i guess that's

1597
01:08:30,960 --> 01:08:36,480
what i understood about the three point

1598
01:08:33,600 --> 01:08:36,480
maybe i was wrong

1599
01:08:37,759 --> 01:08:42,560
yeah that's really one question that

1600
01:08:41,040 --> 01:08:43,519
that was kind of on the next slide but

1601
01:08:42,560 --> 01:08:47,279
not very

1602
01:08:43,520 --> 01:08:50,480
visible um the the question really we

1603
01:08:47,279 --> 01:08:51,199
we need to find out is can we make any

1604
01:08:50,479 --> 01:08:54,639
progress

1605
01:08:51,198 --> 01:08:58,000
on the actual mappings

1606
01:08:54,640 --> 01:09:02,159
so right now everybody has some form

1607
01:08:58,000 --> 01:09:02,479
of mapping file in their various tools

1608
01:09:02,158 --> 01:09:04,559
and

1609
01:09:02,479 --> 01:09:08,318
that's probably a good thing because it

1610
01:09:04,560 --> 01:09:09,759
allows us to get these tools working

1611
01:09:08,319 --> 01:09:12,719
but the question would be can we

1612
01:09:09,759 --> 01:09:14,640
actually achieve some some commonality

1613
01:09:12,719 --> 01:09:16,399
in the mappings so we actually can

1614
01:09:14,640 --> 01:09:18,000
standardize at least an overall

1615
01:09:16,399 --> 01:09:20,879
structure

1616
01:09:18,000 --> 01:09:22,640
for those mappings into which then of

1617
01:09:20,880 --> 01:09:24,480
course ecosystems have to put in the

1618
01:09:22,640 --> 01:09:28,000
ecosystem specific

1619
01:09:24,479 --> 01:09:29,839
uh material and if yes

1620
01:09:28,000 --> 01:09:32,560
is this something we are going to aim

1621
01:09:29,839 --> 01:09:33,278
for for sdf 1.1 or is that going to be

1622
01:09:32,560 --> 01:09:35,520
the

1623
01:09:33,279 --> 01:09:38,159
first thing we want to work on for sdf

1624
01:09:35,520 --> 01:09:38,159
1.2

1625
01:09:41,120 --> 01:09:49,839
ari you're on the queue

1626
01:09:52,319 --> 01:09:55,840
ari you're on the queue and you're muted

1627
01:09:54,719 --> 01:10:00,480
if you're

1628
01:09:55,840 --> 01:10:00,480
we can't hear you about that

1629
01:10:00,800 --> 01:10:02,960
go

1630
01:10:14,840 --> 01:10:17,840
structure

1631
01:10:24,800 --> 01:10:28,080
things we have come up with and what are

1632
01:10:26,239 --> 01:10:31,678
the commonalities there

1633
01:10:28,080 --> 01:10:34,320
um for the

1634
01:10:31,679 --> 01:10:34,880
for these uh different ecosystems uh

1635
01:10:34,320 --> 01:10:37,280
yeah

1636
01:10:34,880 --> 01:10:38,800
as margaret richardson was asking like i

1637
01:10:37,280 --> 01:10:41,199
think it's a key that we

1638
01:10:38,800 --> 01:10:42,000
become multiple and then we see how we

1639
01:10:41,199 --> 01:10:45,120
how well

1640
01:10:42,000 --> 01:10:46,320
this system maps to each and if we see

1641
01:10:45,120 --> 01:10:47,920
something that will work with an

1642
01:10:46,320 --> 01:10:51,040
ecosystem okay then we have to

1643
01:10:47,920 --> 01:10:52,000
come back to the drawing board and to

1644
01:10:51,040 --> 01:10:54,560
that extent

1645
01:10:52,000 --> 01:10:55,600
i was actually interested of asking like

1646
01:10:54,560 --> 01:10:58,719
everyone here

1647
01:10:55,600 --> 01:10:59,120
in the session today like um i mean many

1648
01:10:58,719 --> 01:11:01,440
of you

1649
01:10:59,120 --> 01:11:03,360
have must have worked on different enums

1650
01:11:01,440 --> 01:11:06,799
in different ecosystems

1651
01:11:03,360 --> 01:11:07,199
like in any reflections you have right

1652
01:11:06,800 --> 01:11:13,840
now

1653
01:11:07,199 --> 01:11:13,839
or if something

1654
01:11:17,040 --> 01:11:20,719
few ecosystems that we are ourselves

1655
01:11:19,280 --> 01:11:22,159
actively working on

1656
01:11:20,719 --> 01:11:24,560
but if you have worked on some

1657
01:11:22,159 --> 01:11:26,719
ecosystems with these kind of structures

1658
01:11:24,560 --> 01:11:29,040
would be very good to get your feedback

1659
01:11:26,719 --> 01:11:30,480
uh on i mean also all the issues but

1660
01:11:29,040 --> 01:11:31,760
this one in particular

1661
01:11:30,480 --> 01:11:34,159
is perhaps something that you may have

1662
01:11:31,760 --> 01:11:36,480
use on so either right now or

1663
01:11:34,159 --> 01:11:38,000
you know later on on the list or in one

1664
01:11:36,480 --> 01:11:40,559
of the rooms

1665
01:11:38,000 --> 01:11:41,199
just wanted to get that kind of um if

1666
01:11:40,560 --> 01:11:44,320
anyone has

1667
01:11:41,199 --> 01:11:44,320
right now in the comment zone

1668
01:11:51,120 --> 01:11:55,760
okay so with respect to the the item

1669
01:11:53,920 --> 01:11:58,080
number three and on this slide

1670
01:11:55,760 --> 01:11:59,120
um i think it indeed would be good to

1671
01:11:58,080 --> 01:12:02,719
have an example

1672
01:11:59,120 --> 01:12:04,000
that maps to multiple ecosystems even if

1673
01:12:02,719 --> 01:12:06,640
we don't

1674
01:12:04,000 --> 01:12:09,199
standardize the mapping file exactly at

1675
01:12:06,640 --> 01:12:11,440
this point in time i think we can all

1676
01:12:09,199 --> 01:12:12,719
understand the various syntaxes that we

1677
01:12:11,440 --> 01:12:16,080
have been using for

1678
01:12:12,719 --> 01:12:16,880
for mapping uh files so i still think we

1679
01:12:16,080 --> 01:12:20,080
can

1680
01:12:16,880 --> 01:12:21,600
examine this as part of examining this

1681
01:12:20,080 --> 01:12:24,000
example

1682
01:12:21,600 --> 01:12:24,960
and see if we really can close number

1683
01:12:24,000 --> 01:12:27,760
two number five

1684
01:12:24,960 --> 01:12:27,760
in this way

1685
01:12:29,120 --> 01:12:32,320
okay this doesn't mean that the the set

1686
01:12:31,199 --> 01:12:35,519
of issues

1687
01:12:32,320 --> 01:12:37,199
uh is is closed or something people can

1688
01:12:35,520 --> 01:12:40,320
still propose

1689
01:12:37,199 --> 01:12:42,239
new issues and

1690
01:12:40,320 --> 01:12:44,880
in particular number seven probably

1691
01:12:42,239 --> 01:12:45,280
needs another set of examples to look at

1692
01:12:44,880 --> 01:12:49,440
so

1693
01:12:45,280 --> 01:12:52,800
that would be another thing to discuss

1694
01:12:49,440 --> 01:12:56,799
and my point of view is that we

1695
01:12:52,800 --> 01:13:00,320
really should go to a

1696
01:12:56,800 --> 01:13:04,000
somewhat time-boxed release

1697
01:13:00,320 --> 01:13:07,040
process i i don't have a detailed

1698
01:13:04,000 --> 01:13:11,760
idea of what a good rhythm would be

1699
01:13:07,040 --> 01:13:14,480
but i think given that we have various

1700
01:13:11,760 --> 01:13:15,360
holidays in the way it may be a good

1701
01:13:14,480 --> 01:13:19,040
idea to

1702
01:13:15,360 --> 01:13:23,360
use december 8th as the date for

1703
01:13:19,040 --> 01:13:26,320
final draft for uh 1.1 which most likely

1704
01:13:23,360 --> 01:13:26,320
will be a dash or two

1705
01:13:26,560 --> 01:13:31,440
and then do something like like a

1706
01:13:29,360 --> 01:13:33,280
comment period on that or working with

1707
01:13:31,440 --> 01:13:36,320
last call or however you want to

1708
01:13:33,280 --> 01:13:41,519
call that and

1709
01:13:36,320 --> 01:13:45,599
then we use the the comments on that

1710
01:13:41,520 --> 01:13:49,040
to have a dash 03 that is sdf 1.1

1711
01:13:45,600 --> 01:13:49,040
under the christmas tree

1712
01:13:53,920 --> 01:14:00,800
so that would be my my suggestion for

1713
01:13:56,640 --> 01:14:03,120
this year

1714
01:14:00,800 --> 01:14:04,480
yeah and and then we will time a virtual

1715
01:14:03,120 --> 01:14:07,440
interim

1716
01:14:04,480 --> 01:14:08,480
uh around this december time frame to

1717
01:14:07,440 --> 01:14:10,239
sort of yes

1718
01:14:08,480 --> 01:14:11,839
if there are final things just if you

1719
01:14:10,239 --> 01:14:13,839
figure out absolutely

1720
01:14:11,840 --> 01:14:15,199
yeah it needs to be in the week before

1721
01:14:13,840 --> 01:14:18,080
the 22nd because we

1722
01:14:15,199 --> 01:14:18,639
may need some editing to actually get

1723
01:14:18,080 --> 01:14:21,840
yes

1724
01:14:18,640 --> 01:14:23,920
this draft yeah around mid-december so

1725
01:14:21,840 --> 01:14:26,840
before people head off for vacations or

1726
01:14:23,920 --> 01:14:30,560
yeah whatever happened this year but but

1727
01:14:26,840 --> 01:14:34,480
yes any objections to that plan

1728
01:14:30,560 --> 01:14:34,480
or concerns or so

1729
01:14:40,840 --> 01:14:47,040
great and i think we have a plan

1730
01:14:43,520 --> 01:14:47,040
at least for the rest of the year

1731
01:14:47,280 --> 01:14:52,480
uh so

1732
01:14:50,480 --> 01:14:55,120
and then there's i think we're yeah the

1733
01:14:52,480 --> 01:14:58,159
final one carson

1734
01:14:55,120 --> 01:15:01,599
yeah so for 1.2 i think

1735
01:14:58,159 --> 01:15:02,239
we should uh really revisit our success

1736
01:15:01,600 --> 01:15:04,400
factors

1737
01:15:02,239 --> 01:15:05,440
and and think about what we need to do

1738
01:15:04,400 --> 01:15:08,480
to make this

1739
01:15:05,440 --> 01:15:10,719
really work well and of course

1740
01:15:08,480 --> 01:15:13,040
one success factor was enabling

1741
01:15:10,719 --> 01:15:13,520
conversion of existing ecosystem models

1742
01:15:13,040 --> 01:15:16,560
to

1743
01:15:13,520 --> 01:15:18,800
sdf so i think we we have

1744
01:15:16,560 --> 01:15:19,679
done that to a certain extent and we are

1745
01:15:18,800 --> 01:15:22,719
now

1746
01:15:19,679 --> 01:15:25,360
opening up the domain the the subset of

1747
01:15:22,719 --> 01:15:28,800
the ecosystem models that that can be

1748
01:15:25,360 --> 01:15:30,320
uh translated but of course we also have

1749
01:15:28,800 --> 01:15:32,159
to keep uh

1750
01:15:30,320 --> 01:15:34,639
keep track of the ones that cannot yet

1751
01:15:32,159 --> 01:15:35,360
be translated into sdf-11 and see if

1752
01:15:34,640 --> 01:15:38,560
there is an

1753
01:15:35,360 --> 01:15:40,799
1.2 feature that would help with that so

1754
01:15:38,560 --> 01:15:42,080
that's one part but i think the other

1755
01:15:40,800 --> 01:15:44,640
part is

1756
01:15:42,080 --> 01:15:46,800
to actually make sdf attractive as a

1757
01:15:44,640 --> 01:15:48,000
development language for new ecosystem

1758
01:15:46,800 --> 01:15:52,000
models

1759
01:15:48,000 --> 01:15:55,920
so uh imagining that say

1760
01:15:52,000 --> 01:15:59,199
ipso or ocf

1761
01:15:55,920 --> 01:16:02,480
might go ahead and actually write sdf

1762
01:15:59,199 --> 01:16:04,400
on the way to the ecosystem models and

1763
01:16:02,480 --> 01:16:07,280
and either

1764
01:16:04,400 --> 01:16:09,759
translate it into the the legacy format

1765
01:16:07,280 --> 01:16:12,639
or give up their legacy format or

1766
01:16:09,760 --> 01:16:14,000
maybe manually derive their legacy

1767
01:16:12,640 --> 01:16:17,199
format

1768
01:16:14,000 --> 01:16:20,560
but uh the main point about sdf should

1769
01:16:17,199 --> 01:16:23,759
be that it's attractive as a development

1770
01:16:20,560 --> 01:16:26,880
language and that's something we haven't

1771
01:16:23,760 --> 01:16:28,719
done very much yet and where the the

1772
01:16:26,880 --> 01:16:30,560
actual stress testing

1773
01:16:28,719 --> 01:16:32,800
uh what happened in the ecosystem that

1774
01:16:30,560 --> 01:16:35,360
wouldn't happen here or over

1775
01:16:32,800 --> 01:16:37,679
at one data model it would be the the

1776
01:16:35,360 --> 01:16:40,480
bluetooth people or the zigbee people

1777
01:16:37,679 --> 01:16:42,400
or the ipso people actually trying this

1778
01:16:40,480 --> 01:16:46,320
out and see whether it's useful

1779
01:16:42,400 --> 01:16:48,799
for them so what we need

1780
01:16:46,320 --> 01:16:49,360
is more ecosystems of course that

1781
01:16:48,800 --> 01:16:52,640
actually

1782
01:16:49,360 --> 01:16:55,360
try this and a good feedback links from

1783
01:16:52,640 --> 01:16:57,199
those ecosystems so we actually find out

1784
01:16:55,360 --> 01:17:01,120
what they are struggling

1785
01:16:57,199 --> 01:17:02,239
uh with and that's something that we

1786
01:17:01,120 --> 01:17:06,480
probably should

1787
01:17:02,239 --> 01:17:09,599
focus on for for early 2021

1788
01:17:06,480 --> 01:17:13,440
and from a time boxing perspective

1789
01:17:09,600 --> 01:17:15,040
i think we should aim for sdf 1.2 draft

1790
01:17:13,440 --> 01:17:18,719
completed

1791
01:17:15,040 --> 01:17:21,840
before ietf 110 so we have

1792
01:17:18,719 --> 01:17:25,040
a little more than two months uh

1793
01:17:21,840 --> 01:17:27,040
to in the new year uh to do this

1794
01:17:25,040 --> 01:17:28,719
so that that would be my personal goal

1795
01:17:27,040 --> 01:17:32,640
but of course we don't know whether that

1796
01:17:28,719 --> 01:17:32,640
goal is a realistic

1797
01:17:40,800 --> 01:17:46,159
okay i mean i think it's uh

1798
01:17:44,239 --> 01:17:49,120
well it's it's two months it's not very

1799
01:17:46,159 --> 01:17:51,199
long time but um

1800
01:17:49,120 --> 01:17:52,559
i think we have to revisit that early

1801
01:17:51,199 --> 01:17:55,599
next year when we see if

1802
01:17:52,560 --> 01:17:58,960
other ecosystems join up or not but um

1803
01:17:55,600 --> 01:18:02,239
or i mean as we get experience but

1804
01:17:58,960 --> 01:18:04,800
as as a proposed i mean i think we can

1805
01:18:02,239 --> 01:18:04,799
head for this

1806
01:18:07,440 --> 01:18:16,960
okay so that was my last slide

1807
01:18:12,080 --> 01:18:20,719
so thank you kirsten

1808
01:18:16,960 --> 01:18:22,960
um so uh we are now

1809
01:18:20,719 --> 01:18:24,400
at the end of the schedule content for

1810
01:18:22,960 --> 01:18:28,320
this meeting

1811
01:18:24,400 --> 01:18:28,320
uh is there any other business

1812
01:18:33,760 --> 01:18:37,920
oh oh i just thought i would put the

1813
01:18:36,400 --> 01:18:41,280
calendar

1814
01:18:37,920 --> 01:18:45,280
here so there was a mention of this date

1815
01:18:41,280 --> 01:18:47,120
and there's a mention of this date and

1816
01:18:45,280 --> 01:18:50,800
what i heard was that we needed to have

1817
01:18:47,120 --> 01:18:50,800
the virtual interim in here

1818
01:18:52,840 --> 01:19:00,480
yep now we need to

1819
01:18:56,719 --> 01:19:00,480
decide it two weeks in advance right

1820
01:19:02,239 --> 01:19:08,879
so this on this date we need to decide

1821
01:19:05,920 --> 01:19:11,120
which day we're going to pick in here

1822
01:19:08,880 --> 01:19:11,120
yeah

1823
01:19:12,320 --> 01:19:16,719
so i would say the 14th or the 15th of

1824
01:19:14,800 --> 01:19:20,080
december

1825
01:19:16,719 --> 01:19:20,960
now so there was some interest in using

1826
01:19:20,080 --> 01:19:24,960
this slot

1827
01:19:20,960 --> 01:19:28,320
on monday that one dm has sometimes used

1828
01:19:24,960 --> 01:19:29,040
or regularly used yeah we i mean wait

1829
01:19:28,320 --> 01:19:31,759
yes

1830
01:19:29,040 --> 01:19:32,239
simplest ways to just just go for that

1831
01:19:31,760 --> 01:19:36,800
and

1832
01:19:32,239 --> 01:19:40,080
if that's wrong then we could fix it

1833
01:19:36,800 --> 01:19:43,360
okay i mean that it works

1834
01:19:40,080 --> 01:19:44,880
works for the 1dm folks i guess uh

1835
01:19:43,360 --> 01:19:46,480
the problem is it's not a very

1836
01:19:44,880 --> 01:19:50,000
convenient time for

1837
01:19:46,480 --> 01:19:53,599
folks on the pacific time zone it's uh

1838
01:19:50,000 --> 01:19:57,600
right 1400 utc so it's it's

1839
01:19:53,600 --> 01:20:01,120
um uh seven is a bit early

1840
01:19:57,600 --> 01:20:03,600
fourteen uh minus nine

1841
01:20:01,120 --> 01:20:05,040
three three am no i can't do math right

1842
01:20:03,600 --> 01:20:07,679
now

1843
01:20:05,040 --> 01:20:09,600
so it's it's early so so uh but um we

1844
01:20:07,679 --> 01:20:11,760
can at least um have is that tentative i

1845
01:20:09,600 --> 01:20:14,480
think we could do a doodle anyway

1846
01:20:11,760 --> 01:20:16,719
but maybe not so many dates just the

1847
01:20:14,480 --> 01:20:18,799
dates on the uh

1848
01:20:16,719 --> 01:20:21,440
so maybe we'll do a doodle for 14th and

1849
01:20:18,800 --> 01:20:24,400
15th at a number of different times

1850
01:20:21,440 --> 01:20:24,400
yes that makes sense

1851
01:20:24,800 --> 01:20:30,320
um if if you want i'm curious to know

1852
01:20:28,159 --> 01:20:32,159
because we have 50 some people

1853
01:20:30,320 --> 01:20:34,639
how many would come to the virtual

1854
01:20:32,159 --> 01:20:34,638
interim

1855
01:20:35,040 --> 01:20:40,880
like put the use the raised hand

1856
01:20:38,320 --> 01:20:40,880
to uh

1857
01:20:41,760 --> 01:20:45,440
give us an idea of how many we should

1858
01:20:43,760 --> 01:20:49,280
expect to consider

1859
01:20:45,440 --> 01:20:52,480
as terms of the uh that we have a

1860
01:20:49,280 --> 01:20:55,679
range of opinions about time periods

1861
01:20:52,480 --> 01:20:57,120
so that's it only six seven people i

1862
01:20:55,679 --> 01:21:02,800
hope we can get voter

1863
01:20:57,120 --> 01:21:02,800
next time yeah so a few other people

1864
01:21:03,600 --> 01:21:07,920
any comments from those who are not

1865
01:21:05,679 --> 01:21:09,520
involved is this did you understand this

1866
01:21:07,920 --> 01:21:12,239
work you understand where it's going and

1867
01:21:09,520 --> 01:21:12,239
what we're doing

1868
01:21:12,840 --> 01:21:15,840
um

1869
01:21:17,520 --> 01:21:23,120
yeah i specifically want someone to walk

1870
01:21:19,440 --> 01:21:23,120
up and say i haven't read the document

1871
01:21:26,840 --> 01:21:30,080
but

1872
01:21:28,560 --> 01:21:32,320
so it's nigel davis i haven't read the

1873
01:21:30,080 --> 01:21:33,120
document but it seemed to make some

1874
01:21:32,320 --> 01:21:36,080
sense

1875
01:21:33,120 --> 01:21:36,080
to me very much so

1876
01:21:40,840 --> 01:21:44,880
okay

1877
01:21:42,320 --> 01:21:46,000
else we can we have we're not all we're

1878
01:21:44,880 --> 01:21:47,760
it's not forbidden to

1879
01:21:46,000 --> 01:21:49,280
end early but on the other hand i don't

1880
01:21:47,760 --> 01:21:50,960
want to give up the time

1881
01:21:49,280 --> 01:21:54,000
if there's something useful that we can

1882
01:21:50,960 --> 01:21:54,000
uh do

1883
01:21:55,280 --> 01:21:58,400
if you don't mind me just asking a

1884
01:21:56,800 --> 01:22:00,239
couple of questions actually i'm

1885
01:21:58,400 --> 01:22:02,480
involved in work at onf and we're using

1886
01:22:00,239 --> 01:22:02,959
uml as a modeling language and we found

1887
01:22:02,480 --> 01:22:06,959
that

1888
01:22:02,960 --> 01:22:08,400
um useful as a for a representation it's

1889
01:22:06,960 --> 01:22:11,120
graphical obviously not just

1890
01:22:08,400 --> 01:22:12,879
um textual we we actually have a set of

1891
01:22:11,120 --> 01:22:14,960
tooling we

1892
01:22:12,880 --> 01:22:16,159
have developed that we use to generate

1893
01:22:14,960 --> 01:22:19,440
yang from uml

1894
01:22:16,159 --> 01:22:23,120
um be interested in

1895
01:22:19,440 --> 01:22:25,839
maybe just understanding how

1896
01:22:23,120 --> 01:22:26,320
you would see uml and also you talked

1897
01:22:25,840 --> 01:22:28,560
about

1898
01:22:26,320 --> 01:22:29,440
um obviously different bodies generating

1899
01:22:28,560 --> 01:22:31,360
their

1900
01:22:29,440 --> 01:22:32,879
their languages or maybe abandoning

1901
01:22:31,360 --> 01:22:33,679
their languages but if not generating

1902
01:22:32,880 --> 01:22:37,120
languages

1903
01:22:33,679 --> 01:22:39,360
from your um more general language more

1904
01:22:37,120 --> 01:22:40,719
broadly applicable language and i wonder

1905
01:22:39,360 --> 01:22:43,120
what you'd be thinking of generating

1906
01:22:40,719 --> 01:22:44,639
tooling or whether you'd expect them to

1907
01:22:43,120 --> 01:22:46,719
generate tooling or whatever else in

1908
01:22:44,639 --> 01:22:48,480
that area so both

1909
01:22:46,719 --> 01:22:50,000
use of uml and what your opinions are of

1910
01:22:48,480 --> 01:22:52,559
that and also

1911
01:22:50,000 --> 01:22:55,920
tooling for language translation which

1912
01:22:52,560 --> 01:22:55,920
we found quite challenging actually

1913
01:22:58,560 --> 01:23:04,560
so you're generating yang from uml i'm

1914
01:23:00,880 --> 01:23:08,159
curious to then serialize it to what

1915
01:23:04,560 --> 01:23:11,760
jason seabor xml jason rexman

1916
01:23:08,159 --> 01:23:11,759
jason yes

1917
01:23:14,480 --> 01:23:18,000
uh so um i mean the tooling i mean

1918
01:23:17,520 --> 01:23:19,760
obviously

1919
01:23:18,000 --> 01:23:21,600
a large part of this work is around

1920
01:23:19,760 --> 01:23:25,920
tooling

1921
01:23:21,600 --> 01:23:28,639
enabling sort of machine translation

1922
01:23:25,920 --> 01:23:30,320
however the the focus of i mean the

1923
01:23:28,639 --> 01:23:32,080
initial i mean the initial motivation

1924
01:23:30,320 --> 01:23:34,719
behind it was to translate between the

1925
01:23:32,080 --> 01:23:38,880
data models of different ecosystems

1926
01:23:34,719 --> 01:23:41,679
and so i think there's

1927
01:23:38,880 --> 01:23:42,880
i don't think i mean with sufficient

1928
01:23:41,679 --> 01:23:45,040
amount of

1929
01:23:42,880 --> 01:23:46,719
digital glute sort of duct tape you can

1930
01:23:45,040 --> 01:23:48,880
translate from any system to any system

1931
01:23:46,719 --> 01:23:48,880
but

1932
01:23:51,520 --> 01:23:55,760
it's absolutely interesting all kinds of

1933
01:23:54,080 --> 01:23:57,440
translations interesting so we had and

1934
01:23:55,760 --> 01:23:58,880
during the hackathon there was

1935
01:23:57,440 --> 01:24:02,960
one participant who looked at

1936
01:23:58,880 --> 01:24:05,199
translating sdf back into to and from uh

1937
01:24:02,960 --> 01:24:08,080
zhang for instance so there there is a

1938
01:24:05,199 --> 01:24:09,678
lot of different but it it also

1939
01:24:08,080 --> 01:24:12,080
given that this is a bit of a domain

1940
01:24:09,679 --> 01:24:12,639
specific it's oriented around modeling

1941
01:24:12,080 --> 01:24:16,000
these

1942
01:24:12,639 --> 01:24:18,800
things or the iot devices

1943
01:24:16,000 --> 01:24:19,360
so it has some kind of limitation on the

1944
01:24:18,800 --> 01:24:22,560
general

1945
01:24:19,360 --> 01:24:26,400
general um applicability

1946
01:24:22,560 --> 01:24:27,040
uh but uh it's definitely so that it's

1947
01:24:26,400 --> 01:24:28,719
it's

1948
01:24:27,040 --> 01:24:30,560
it's relevant and i think we will as we

1949
01:24:28,719 --> 01:24:31,600
reach out at looking at additional

1950
01:24:30,560 --> 01:24:32,960
ecosystems

1951
01:24:31,600 --> 01:24:35,760
that already do their modeling

1952
01:24:32,960 --> 01:24:36,719
information modeling in uml like opc ua

1953
01:24:35,760 --> 01:24:40,000
for instance

1954
01:24:36,719 --> 01:24:41,600
uh we will encounter this so so um uh

1955
01:24:40,000 --> 01:24:43,600
interested but not quite sure how to

1956
01:24:41,600 --> 01:24:44,639
sort of map things together that

1957
01:24:43,600 --> 01:24:46,320
it's just i was just just generally

1958
01:24:44,639 --> 01:24:48,960
interested in what your views works what

1959
01:24:46,320 --> 01:24:51,599
we we found

1960
01:24:48,960 --> 01:24:52,400
you all know a richer language than yang

1961
01:24:51,600 --> 01:24:54,639
in some

1962
01:24:52,400 --> 01:24:55,839
dimensions and hence it was lossy as a

1963
01:24:54,639 --> 01:24:58,480
mapping so we

1964
01:24:55,840 --> 01:24:59,280
um we lose some aspects of the model we

1965
01:24:58,480 --> 01:25:00,879
have to also

1966
01:24:59,280 --> 01:25:02,559
orient the model in a particular way we

1967
01:25:00,880 --> 01:25:04,800
have to make it hierarchical

1968
01:25:02,560 --> 01:25:06,239
more so than we would traditionally do

1969
01:25:04,800 --> 01:25:07,280
with a networking model we tend to see

1970
01:25:06,239 --> 01:25:09,839
it as meshy and

1971
01:25:07,280 --> 01:25:12,400
you know you sort of get get forced into

1972
01:25:09,840 --> 01:25:15,199
bending a meshy model into a hierarchy

1973
01:25:12,400 --> 01:25:15,599
so um we we may have overdone that as

1974
01:25:15,199 --> 01:25:17,839
well

1975
01:25:15,600 --> 01:25:19,600
um and we may have been able to go for a

1976
01:25:17,840 --> 01:25:20,960
forest of trees rather than the tree but

1977
01:25:19,600 --> 01:25:23,360
we seem to have gone for a single tree

1978
01:25:20,960 --> 01:25:26,480
and hence we've distorted our modeling

1979
01:25:23,360 --> 01:25:27,360
somewhat anyway so i was just interested

1980
01:25:26,480 --> 01:25:28,799
in uh

1981
01:25:27,360 --> 01:25:30,559
because that we found some challenges

1982
01:25:28,800 --> 01:25:32,239
doing the mappings um

1983
01:25:30,560 --> 01:25:33,920
we've got a tool that runs but it's not

1984
01:25:32,239 --> 01:25:36,080
perfect we also found challenges getting

1985
01:25:33,920 --> 01:25:38,880
people the right tooling

1986
01:25:36,080 --> 01:25:40,320
so i mean what we have yeah yeah so what

1987
01:25:38,880 --> 01:25:42,080
we have today is

1988
01:25:40,320 --> 01:25:44,159
is basically the the tooling that can

1989
01:25:42,080 --> 01:25:47,360
translate i mean sdf

1990
01:25:44,159 --> 01:25:49,920
from uh sdf to ocf and to ipso

1991
01:25:47,360 --> 01:25:50,559
and back and forth and we've looked at

1992
01:25:49,920 --> 01:25:52,080
the others

1993
01:25:50,560 --> 01:25:54,080
bluetooth and so on that can do that

1994
01:25:52,080 --> 01:25:56,639
that's a bit more challenging but

1995
01:25:54,080 --> 01:25:57,920
but uh yes even even with this kind of

1996
01:25:56,639 --> 01:26:01,120
limited ecosystem

1997
01:25:57,920 --> 01:26:03,120
limited uh application it's it still

1998
01:26:01,120 --> 01:26:04,719
generates uh there's a bunch of

1999
01:26:03,120 --> 01:26:06,400
headaches and as you say i mean there's

2000
01:26:04,719 --> 01:26:08,320
also this kind of abstraction level

2001
01:26:06,400 --> 01:26:09,759
headaches that you yeah in particular

2002
01:26:08,320 --> 01:26:12,880
when you need to address multiple

2003
01:26:09,760 --> 01:26:15,760
um receivers so to speak

2004
01:26:12,880 --> 01:26:16,800
yeah yeah so very interesting way thank

2005
01:26:15,760 --> 01:26:20,239
you thank you very much

2006
01:26:16,800 --> 01:26:20,239
thank you kirsten

2007
01:26:20,560 --> 01:26:24,800
can you maybe send a pointer to the asdf

2008
01:26:23,600 --> 01:26:27,440
waiting list

2009
01:26:24,800 --> 01:26:30,320
pointing to a few of your uml models and

2010
01:26:27,440 --> 01:26:32,559
the yang you generated from that

2011
01:26:30,320 --> 01:26:34,159
so that would allow us to yeah i can i

2012
01:26:32,560 --> 01:26:37,520
can try and do that

2013
01:26:34,159 --> 01:26:39,839
i can try it i've been to

2014
01:26:37,520 --> 01:26:41,600
a couple of itf meetings some about 10

2015
01:26:39,840 --> 01:26:43,120
years ago so

2016
01:26:41,600 --> 01:26:44,159
get myself reintroduced into how to do

2017
01:26:43,120 --> 01:26:45,040
that yes i can do that you know

2018
01:26:44,159 --> 01:26:46,799
certainly

2019
01:26:45,040 --> 01:26:48,080
yeah a very simple informal message to

2020
01:26:46,800 --> 01:26:49,679
the main list

2021
01:26:48,080 --> 01:26:51,360
yeah that's fine it's great yeah i've

2022
01:26:49,679 --> 01:26:54,960
got some um we've got

2023
01:26:51,360 --> 01:26:57,280
um a we're working get github so

2024
01:26:54,960 --> 01:26:58,000
i can send you links to that and uh

2025
01:26:57,280 --> 01:27:00,480
there's some

2026
01:26:58,000 --> 01:27:03,120
documentation on the um modeling

2027
01:27:00,480 --> 01:27:05,839
mechanisms and approaches and so on and

2028
01:27:03,120 --> 01:27:07,519
in a very in both of our repositories

2029
01:27:05,840 --> 01:27:08,560
repositories are very open so we know

2030
01:27:07,520 --> 01:27:10,000
and if we um

2031
01:27:08,560 --> 01:27:12,880
you don't even need a password to get

2032
01:27:10,000 --> 01:27:15,280
the documents through rnf and um

2033
01:27:12,880 --> 01:27:16,960
uh we get obviously you can you can see

2034
01:27:15,280 --> 01:27:19,440
so

2035
01:27:16,960 --> 01:27:20,800
we are not just not just interested in

2036
01:27:19,440 --> 01:27:22,080
documentation we are in particular

2037
01:27:20,800 --> 01:27:23,360
interesting oh no that's we've got them

2038
01:27:22,080 --> 01:27:24,400
we've got them i've got the tooling and

2039
01:27:23,360 --> 01:27:26,639
the models in git

2040
01:27:24,400 --> 01:27:27,440
so yeah it's more the documentation

2041
01:27:26,639 --> 01:27:29,280
explains the

2042
01:27:27,440 --> 01:27:30,879
um mapping rationale and then the

2043
01:27:29,280 --> 01:27:33,360
tooling in theory

2044
01:27:30,880 --> 01:27:35,360
supports the actual mapping um mapping

2045
01:27:33,360 --> 01:27:36,639
definitions it's not perfect but so we

2046
01:27:35,360 --> 01:27:38,159
have to do a bit of hand crafting at the

2047
01:27:36,639 --> 01:27:40,560
end of it

2048
01:27:38,159 --> 01:27:42,000
so examples that you think are good

2049
01:27:40,560 --> 01:27:42,960
representation of what you're trying to

2050
01:27:42,000 --> 01:27:46,800
do that that's

2051
01:27:42,960 --> 01:27:48,080
probably the most useful part

2052
01:27:46,800 --> 01:27:49,360
i'll try and get a bit more involved in

2053
01:27:48,080 --> 01:27:50,320
this because it does seem very related

2054
01:27:49,360 --> 01:27:51,839
to what we've been trying to do

2055
01:27:50,320 --> 01:27:53,679
ourselves we're looking for a

2056
01:27:51,840 --> 01:27:55,520
consistent common modeling approach

2057
01:27:53,679 --> 01:27:57,760
across multiple

2058
01:27:55,520 --> 01:28:00,000
bodies we actually work with meth itt

2059
01:27:57,760 --> 01:28:02,000
and um

2060
01:28:00,000 --> 01:28:03,679
i think for others you know mfi ttl and

2061
01:28:02,000 --> 01:28:07,679
f certainly at the center of the

2062
01:28:03,679 --> 01:28:07,679
sort of relationship around uml so

2063
01:28:08,159 --> 01:28:15,839
so okay i'll learn to do that yeah

2064
01:28:18,320 --> 01:28:24,480
so any other

2065
01:28:21,600 --> 01:28:25,520
final comments we still have well half

2066
01:28:24,480 --> 01:28:27,519
an hour

2067
01:28:25,520 --> 01:28:30,080
but we still have some time left other

2068
01:28:27,520 --> 01:28:33,920
comments or questions or

2069
01:28:30,080 --> 01:28:33,920
viewpoints or etc

2070
01:28:35,360 --> 01:28:43,280
if all if all aids fails you can play

2071
01:28:38,000 --> 01:28:46,719
the tutorial

2072
01:28:43,280 --> 01:28:46,719
yeah that would be brainwashing

2073
01:28:46,800 --> 01:28:50,400
yeah if you haven't please see the

2074
01:28:48,159 --> 01:28:51,280
tutorial it's good and it explains the

2075
01:28:50,400 --> 01:28:53,519
basics of this

2076
01:28:51,280 --> 01:28:53,519
work

2077
01:28:55,520 --> 01:29:00,560
and as i said at the start here if you

2078
01:28:59,520 --> 01:29:02,320
are

2079
01:29:00,560 --> 01:29:04,080
part of an organization where you think

2080
01:29:02,320 --> 01:29:05,440
this could be useful please reach out to

2081
01:29:04,080 --> 01:29:08,800
us and we'll

2082
01:29:05,440 --> 01:29:10,239
we can figure out how to work together

2083
01:29:08,800 --> 01:29:10,719
or at least describe the work we're

2084
01:29:10,239 --> 01:29:13,040
doing

2085
01:29:10,719 --> 01:29:13,040
to you

2086
01:29:19,679 --> 01:29:26,719
so i think we have

2087
01:29:24,080 --> 01:29:26,719
oh here we go

2088
01:29:27,199 --> 01:29:30,400
michael is quick so this is the times

2089
01:29:30,000 --> 01:29:32,880
here

2090
01:29:30,400 --> 01:29:32,879
are in

2091
01:29:33,600 --> 01:29:37,280
it's in the time zone is mine is eastern

2092
01:29:35,760 --> 01:29:41,760
so that would be

2093
01:29:37,280 --> 01:29:41,759
4 a.m pacific and

2094
01:29:42,719 --> 01:29:45,360
that would be

2095
01:29:46,960 --> 01:29:53,120
10 a.m pacific or

2096
01:29:50,000 --> 01:29:55,360
plus 6 to europe is seven pm so that's a

2097
01:29:53,120 --> 01:29:57,599
bit late

2098
01:29:55,360 --> 01:29:57,599
okay

2099
01:29:59,360 --> 01:30:06,960
apparently i'm available on all those

2100
01:30:01,120 --> 01:30:10,080
times so

2101
01:30:06,960 --> 01:30:12,800
okay yep okay so

2102
01:30:10,080 --> 01:30:15,360
um good i mean you will send out the

2103
01:30:12,800 --> 01:30:21,199
link to that on the list i guess

2104
01:30:15,360 --> 01:30:24,480
we will have a

2105
01:30:21,199 --> 01:30:27,120
uh further work on this to wrap it up

2106
01:30:24,480 --> 01:30:28,959
uh i don't know if carson if we should

2107
01:30:27,120 --> 01:30:29,679
try to organize something next week for

2108
01:30:28,960 --> 01:30:33,199
this

2109
01:30:29,679 --> 01:30:36,159
like a hackathon or a something like

2110
01:30:33,199 --> 01:30:36,159
that um

2111
01:30:37,199 --> 01:30:41,280
yeah please let me know if you want to

2112
01:30:39,440 --> 01:30:44,559
we need to set something up

2113
01:30:41,280 --> 01:30:48,400
um last week was essentially the

2114
01:30:44,560 --> 01:30:50,719
daily one-hour think uh and

2115
01:30:48,400 --> 01:30:52,239
that would be the same organization that

2116
01:30:50,719 --> 01:30:53,920
that i would propose for

2117
01:30:52,239 --> 01:30:56,000
for next week so that there's going to

2118
01:30:53,920 --> 01:30:58,800
be a one day meeting on monday

2119
01:30:56,000 --> 01:31:01,040
so you probably don't need a sink there

2120
01:30:58,800 --> 01:31:02,480
but having something like like a one

2121
01:31:01,040 --> 01:31:05,519
hour sink on

2122
01:31:02,480 --> 01:31:08,638
tuesday to well i hope not friday

2123
01:31:05,520 --> 01:31:11,520
tuesday to thursday uh might be the best

2124
01:31:08,639 --> 01:31:11,520
way to get this

2125
01:31:13,199 --> 01:31:17,360
yeah let's think about that so we can

2126
01:31:15,600 --> 01:31:18,320
make make it work out with people's

2127
01:31:17,360 --> 01:31:22,880
schedules

2128
01:31:18,320 --> 01:31:25,519
um i guess people are busy now closing

2129
01:31:22,880 --> 01:31:26,000
up to the vacations but okay let's try

2130
01:31:25,520 --> 01:31:27,600
with that

2131
01:31:26,000 --> 01:31:29,600
that would be really good to even have

2132
01:31:27,600 --> 01:31:32,800
this finished

2133
01:31:29,600 --> 01:31:35,520
good anything

2134
01:31:32,800 --> 01:31:35,520
anything else

2135
01:31:36,400 --> 01:31:39,679
calling once calling twice

2136
01:31:39,760 --> 01:31:46,000
then i think we are

2137
01:31:43,440 --> 01:31:48,000
unless michael starts waving here and i

2138
01:31:46,000 --> 01:31:50,800
think we are done for the day

2139
01:31:48,000 --> 01:31:51,199
so uh thank you everybody for your time

2140
01:31:50,800 --> 01:31:53,679
and

2141
01:31:51,199 --> 01:31:55,120
uh great having you here i hope this was

2142
01:31:53,679 --> 01:31:58,320
interesting

2143
01:31:55,120 --> 01:31:59,519
and uh if you uh now feel that you will

2144
01:31:58,320 --> 01:32:01,360
be want to hack this

2145
01:31:59,520 --> 01:32:02,800
please let us know so we can include you

2146
01:32:01,360 --> 01:32:04,719
in the hackathon they will send out the

2147
01:32:02,800 --> 01:32:05,280
link on the isdf list for the hackathon

2148
01:32:04,719 --> 01:32:07,679
as well

2149
01:32:05,280 --> 01:32:09,759
for the upcoming hackathons around this

2150
01:32:07,679 --> 01:32:11,920
and uh as said we have a plan to work

2151
01:32:09,760 --> 01:32:13,760
towards we have plans for the various

2152
01:32:11,920 --> 01:32:15,199
open issues and i think we can make

2153
01:32:13,760 --> 01:32:18,800
progress in with this

2154
01:32:15,199 --> 01:32:20,638
in the in the near future okay

2155
01:32:18,800 --> 01:32:21,920
with that i think we are done for the

2156
01:32:20,639 --> 01:32:26,000
day so uh

2157
01:32:21,920 --> 01:32:29,040
off to sleep follow you in the us and uh

2158
01:32:26,000 --> 01:32:31,360
for us it's in europe as it's lunchtime

2159
01:32:29,040 --> 01:32:33,840
okay thank you very much take care

2160
01:32:31,360 --> 01:32:33,839
cheers

2161
01:32:34,400 --> 01:32:41,839
thank you bye-bye

2162
01:32:46,080 --> 01:32:48,159
you

