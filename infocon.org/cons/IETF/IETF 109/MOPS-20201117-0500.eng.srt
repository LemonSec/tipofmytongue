1
00:00:05,440 --> 00:00:09,360
i'm still

2
00:00:06,240 --> 00:00:11,920
uh you know at precisely

3
00:00:09,360 --> 00:00:12,959
uh you know precisely the start time i'm

4
00:00:11,920 --> 00:00:15,920
still uh

5
00:00:12,960 --> 00:00:18,640
figuring things out a little bit so oh

6
00:00:15,920 --> 00:00:18,640
thank you mike

7
00:00:20,640 --> 00:00:31,840
mike english has uh graciously

8
00:00:23,439 --> 00:00:31,840
volunteered to help with the notes

9
00:00:34,399 --> 00:00:38,000
all right we are at time

10
00:00:38,320 --> 00:00:40,879
all right

11
00:00:41,440 --> 00:00:44,879
um so

12
00:00:50,160 --> 00:00:53,360
as long as it was in the state you

13
00:00:51,680 --> 00:00:59,840
expected it to be in

14
00:00:53,360 --> 00:00:59,840
yeah it's uh you know it being uh

15
00:01:00,559 --> 00:01:04,078
being midnight local time

16
00:01:05,840 --> 00:01:10,159
do things look okay i mean we've got the

17
00:01:08,720 --> 00:01:13,200
towel bar up here

18
00:01:10,159 --> 00:01:14,320
apologies but uh i'm not sure i can get

19
00:01:13,200 --> 00:01:16,560
rid of all of that

20
00:01:14,320 --> 00:01:18,880
in the mode that i'm working in i was

21
00:01:16,560 --> 00:01:21,280
planning on using a separate machine to

22
00:01:18,880 --> 00:01:23,360
project the slides but it seems like

23
00:01:21,280 --> 00:01:24,880
meat echo only allows me to be logged in

24
00:01:23,360 --> 00:01:29,039
once

25
00:01:24,880 --> 00:01:29,039
so we're going to do it this way

26
00:01:29,840 --> 00:01:33,520
cool so

27
00:01:37,200 --> 00:01:41,759
um i'm sure everyone knows that they are

28
00:01:39,520 --> 00:01:43,439
at the ietf and this is an ietf meeting

29
00:01:41,759 --> 00:01:44,880
um and these are the policies of

30
00:01:43,439 --> 00:01:47,919
participating in this meeting

31
00:01:44,880 --> 00:01:49,920
um give everyone a minute to read

32
00:01:47,920 --> 00:01:50,960
the details of the note well and then

33
00:01:49,920 --> 00:01:55,840
take them as

34
00:01:50,960 --> 00:01:55,839
as understood

35
00:01:59,040 --> 00:02:02,560
i mean you all know the uh know the gist

36
00:02:01,280 --> 00:02:04,560
here right

37
00:02:02,560 --> 00:02:06,000
things are a uh things that happened at

38
00:02:04,560 --> 00:02:10,239
an ietf meeting are

39
00:02:06,000 --> 00:02:10,239
ihf contributions so

40
00:02:10,800 --> 00:02:14,640
and i guess we'll move on

41
00:02:15,040 --> 00:02:21,120
right so uh we have done the note well

42
00:02:18,400 --> 00:02:22,080
um before we get to bash on the agenda

43
00:02:21,120 --> 00:02:24,080
do we have

44
00:02:22,080 --> 00:02:25,680
and or need a jabber scribe i'm so

45
00:02:24,080 --> 00:02:27,840
jabber challenged these days i don't

46
00:02:25,680 --> 00:02:29,680
even know where we're at with that

47
00:02:27,840 --> 00:02:32,080
and we have a volunteer to be jabber

48
00:02:29,680 --> 00:02:32,080
scribe

49
00:02:32,400 --> 00:02:39,760
so does the uh does the the chat echo

50
00:02:35,760 --> 00:02:43,519
still connect to the jabber room

51
00:02:39,760 --> 00:02:46,799
is that still a thing fabulous

52
00:02:43,519 --> 00:02:50,319
all right so oh

53
00:02:46,800 --> 00:02:53,680
chris lemmons has uh has graciously

54
00:02:50,319 --> 00:02:56,720
volunteered to be our jabber scribe

55
00:02:53,680 --> 00:02:59,920
so just remember to you know prefix your

56
00:02:56,720 --> 00:03:04,080
your uh comments with mike if you uh

57
00:02:59,920 --> 00:03:09,200
would like him to repeat the comment uh

58
00:03:04,080 --> 00:03:09,200
in audio yep

59
00:03:09,920 --> 00:03:13,760
awesome okay and we have a menace taker

60
00:03:13,200 --> 00:03:16,238
lead

61
00:03:13,760 --> 00:03:18,560
in the forum like english thanks again

62
00:03:16,239 --> 00:03:20,560
um so this is the agenda as it was

63
00:03:18,560 --> 00:03:22,000
published on the website and as it was

64
00:03:20,560 --> 00:03:32,000
shared on the mailing list

65
00:03:22,000 --> 00:03:33,840
uh any final bashes to the agenda

66
00:03:32,000 --> 00:03:36,000
not seeing any activity i think we will

67
00:03:33,840 --> 00:03:39,599
take that as approved

68
00:03:36,000 --> 00:03:42,000
for this meeting and move right along um

69
00:03:39,599 --> 00:03:43,359
okay so first thing uh in the category

70
00:03:42,000 --> 00:03:46,560
of experiences with

71
00:03:43,360 --> 00:03:50,159
um yeah and the category of yeah

72
00:03:46,560 --> 00:03:52,959
experiences so many experiences

73
00:03:50,159 --> 00:03:54,560
with video uh we actually have medico

74
00:03:52,959 --> 00:03:54,959
here to talk about their experiences

75
00:03:54,560 --> 00:03:58,560
from

76
00:03:54,959 --> 00:04:00,560
ietf 108 uh and since 108.

77
00:03:58,560 --> 00:04:02,239
um so i think you can pull up learn

78
00:04:00,560 --> 00:04:04,799
those slides and lorenzo if you would

79
00:04:02,239 --> 00:04:04,799
take the floor

80
00:04:08,799 --> 00:04:12,720
i can also share the slides myself if

81
00:04:10,480 --> 00:04:14,000
you prefer so it's easier for me to

82
00:04:12,720 --> 00:04:16,160
trigger lives unless you prefer

83
00:04:14,000 --> 00:04:18,079
to share them themselves uh why don't we

84
00:04:16,160 --> 00:04:19,919
uh why don't we give you the uh

85
00:04:18,079 --> 00:04:21,600
give you the floor if that works let me

86
00:04:19,918 --> 00:04:29,599
i will stop sharing

87
00:04:21,600 --> 00:04:30,960
okay um and we'll see if that works

88
00:04:29,600 --> 00:04:32,960
yeah you should see it now so i have a

89
00:04:30,960 --> 00:04:34,638
separate sli a separate screen for these

90
00:04:32,960 --> 00:04:36,159
slides so i should be able to also

91
00:04:34,639 --> 00:04:37,520
monitor the java room at the same time

92
00:04:36,160 --> 00:04:39,280
in case there are any questions or

93
00:04:37,520 --> 00:04:45,120
feedback

94
00:04:39,280 --> 00:04:45,119
outstanding uh can i can i start oh

95
00:04:45,280 --> 00:04:51,039
okay yeah okay

96
00:04:48,639 --> 00:04:53,440
thanks for the introduction so i'll give

97
00:04:51,040 --> 00:04:54,320
a quick overview of how basically we we

98
00:04:53,440 --> 00:04:56,080
changed

99
00:04:54,320 --> 00:04:57,919
we changed the way that we stream itf

100
00:04:56,080 --> 00:05:00,320
meetings from how we did it before so

101
00:04:57,919 --> 00:05:04,639
when it was mostly an in-person meeting

102
00:05:00,320 --> 00:05:07,520
and the uh remote participation was

103
00:05:04,639 --> 00:05:08,800
of course uh less prevalent than it is

104
00:05:07,520 --> 00:05:10,880
now and so

105
00:05:08,800 --> 00:05:11,919
if we think about how we how we did

106
00:05:10,880 --> 00:05:14,960
things before

107
00:05:11,919 --> 00:05:16,880
so it was basically harder from an

108
00:05:14,960 --> 00:05:19,039
from a setup perspective but easier in

109
00:05:16,880 --> 00:05:20,960
terms of participation and in terms of

110
00:05:19,039 --> 00:05:22,560
setup it meant hooking up to the mixer

111
00:05:20,960 --> 00:05:24,638
board in order to allow

112
00:05:22,560 --> 00:05:26,160
remote participants to speak to the room

113
00:05:24,639 --> 00:05:28,240
and in order to allow our

114
00:05:26,160 --> 00:05:29,680
participants to listen to what happened

115
00:05:28,240 --> 00:05:30,880
in the room and we had a dedicated

116
00:05:29,680 --> 00:05:32,800
laptop that would

117
00:05:30,880 --> 00:05:33,919
basically act as a as an intermediate

118
00:05:32,800 --> 00:05:36,560
participant for that

119
00:05:33,919 --> 00:05:37,520
an audio was mixed and stevie's as i'll

120
00:05:36,560 --> 00:05:40,240
show later

121
00:05:37,520 --> 00:05:41,919
for video we would have a a camera in

122
00:05:40,240 --> 00:05:43,039
the room a controllable camera that we

123
00:05:41,919 --> 00:05:44,960
could use to

124
00:05:43,039 --> 00:05:46,960
uh to monitor what was happening at any

125
00:05:44,960 --> 00:05:49,599
time focus on the mclean and this kind

126
00:05:46,960 --> 00:05:51,919
of things and the splitter

127
00:05:49,600 --> 00:05:54,000
that would capture the the feed from the

128
00:05:51,919 --> 00:05:54,320
projector and and both would be captured

129
00:05:54,000 --> 00:05:56,000
by

130
00:05:54,320 --> 00:05:57,440
by a raspberry pi in the room and

131
00:05:56,000 --> 00:06:00,240
streamed to our

132
00:05:57,440 --> 00:06:01,360
rtc server via plain rtp so it was a

133
00:06:00,240 --> 00:06:03,120
quite easy

134
00:06:01,360 --> 00:06:04,880
uh quite easy thing to do because

135
00:06:03,120 --> 00:06:06,080
basically a plain otp stream would

136
00:06:04,880 --> 00:06:08,800
become a webrtc

137
00:06:06,080 --> 00:06:10,000
broadcast as part of these and at the

138
00:06:08,800 --> 00:06:11,360
same time of course when we had the

139
00:06:10,000 --> 00:06:13,199
remote participation

140
00:06:11,360 --> 00:06:14,880
this happened through an sfu approach

141
00:06:13,199 --> 00:06:15,280
and i'll spend a few more words about

142
00:06:14,880 --> 00:06:17,520
this

143
00:06:15,280 --> 00:06:18,960
in a few seconds but in principle it

144
00:06:17,520 --> 00:06:20,880
meant that we could have a separate

145
00:06:18,960 --> 00:06:22,479
laptop in the room hooked to a second

146
00:06:20,880 --> 00:06:23,680
screen so that anytime that we had the

147
00:06:22,479 --> 00:06:26,080
second speaker

148
00:06:23,680 --> 00:06:28,080
a remote speaker presenting we could

149
00:06:26,080 --> 00:06:30,318
basically subscribe to them as

150
00:06:28,080 --> 00:06:31,520
all remote attendees were doing and show

151
00:06:30,319 --> 00:06:34,560
them in this

152
00:06:31,520 --> 00:06:35,280
additional monitor of course this has

153
00:06:34,560 --> 00:06:37,600
gone away

154
00:06:35,280 --> 00:06:38,880
since uh the moment we started to meet

155
00:06:37,600 --> 00:06:41,280
just virtually and so

156
00:06:38,880 --> 00:06:43,199
this meant that we had to do we had to

157
00:06:41,280 --> 00:06:45,119
considerably change the way that the

158
00:06:43,199 --> 00:06:46,240
architecture was working first of all we

159
00:06:45,120 --> 00:06:48,560
needed to work

160
00:06:46,240 --> 00:06:50,479
at scale because we didn't have just

161
00:06:48,560 --> 00:06:52,319
let's say a hundred remote participants

162
00:06:50,479 --> 00:06:54,400
and a thousand local attendees that

163
00:06:52,319 --> 00:06:56,720
impacted the infrastructure much less

164
00:06:54,400 --> 00:06:58,000
but everybody was remote instead which

165
00:06:56,720 --> 00:06:59,599
which is something that i tried to

166
00:06:58,000 --> 00:07:00,560
capture in a presentation that i did a

167
00:06:59,599 --> 00:07:03,280
few months ago

168
00:07:00,560 --> 00:07:04,240
at a conference in the uk where i

169
00:07:03,280 --> 00:07:06,318
explained how we

170
00:07:04,240 --> 00:07:08,080
changed the way that it worked for live

171
00:07:06,319 --> 00:07:09,680
events in general you can find the

172
00:07:08,080 --> 00:07:10,800
slides there if you're interested in

173
00:07:09,680 --> 00:07:12,880
some more details

174
00:07:10,800 --> 00:07:15,599
but everything at the foundation is

175
00:07:12,880 --> 00:07:17,199
based on our own open source webrtc

176
00:07:15,599 --> 00:07:18,719
server that is called javas

177
00:07:17,199 --> 00:07:20,240
and it's completely open source you can

178
00:07:18,720 --> 00:07:20,960
find some links there if you want to

179
00:07:20,240 --> 00:07:23,280
play with it

180
00:07:20,960 --> 00:07:24,000
and we conceived it as general purpose

181
00:07:23,280 --> 00:07:26,400
because we

182
00:07:24,000 --> 00:07:27,039
it's let's say very modular in terms of

183
00:07:26,400 --> 00:07:28,799
how

184
00:07:27,039 --> 00:07:30,080
how things are conceived in terms of

185
00:07:28,800 --> 00:07:31,919
functionality they provide

186
00:07:30,080 --> 00:07:34,560
and i'll show that we actually use three

187
00:07:31,919 --> 00:07:35,599
different plugins in javascript meeting

188
00:07:34,560 --> 00:07:37,520
itself

189
00:07:35,599 --> 00:07:39,599
and since we wanted things to happen at

190
00:07:37,520 --> 00:07:41,440
scale we also started from

191
00:07:39,599 --> 00:07:42,800
from some considerations that were part

192
00:07:41,440 --> 00:07:44,960
of of my phd

193
00:07:42,800 --> 00:07:46,800
this is a few a few years ago which was

194
00:07:44,960 --> 00:07:47,758
basically how to achieve large-scale

195
00:07:46,800 --> 00:07:49,680
broadcasting

196
00:07:47,759 --> 00:07:51,520
via webrtc in the first place in an

197
00:07:49,680 --> 00:07:53,120
architecture that we call solate

198
00:07:51,520 --> 00:07:55,440
and the approach was basically taking

199
00:07:53,120 --> 00:07:58,080
advantage of some sort of a tree based

200
00:07:55,440 --> 00:07:59,759
architecture where you can have a

201
00:07:58,080 --> 00:08:00,639
participant injecting something via

202
00:07:59,759 --> 00:08:02,240
webrtc

203
00:08:00,639 --> 00:08:04,400
everything in the middle doesn't need to

204
00:08:02,240 --> 00:08:06,800
be necessarily webrtc it can be plain

205
00:08:04,400 --> 00:08:08,719
rtp for instance as it is in our case

206
00:08:06,800 --> 00:08:11,440
as long as at the end when you trickle

207
00:08:08,720 --> 00:08:13,520
down the streams at the end you feed

208
00:08:11,440 --> 00:08:16,080
servers that are able to turn this feed

209
00:08:13,520 --> 00:08:16,719
into a broadcast webrtc broadcast again

210
00:08:16,080 --> 00:08:18,400
which is

211
00:08:16,720 --> 00:08:20,080
in a nutshell what i'll try to to

212
00:08:18,400 --> 00:08:22,960
explain explain today

213
00:08:20,080 --> 00:08:23,758
and so first of all in terms of audio

214
00:08:22,960 --> 00:08:25,440
there are

215
00:08:23,759 --> 00:08:28,080
challenges for both audio and video

216
00:08:25,440 --> 00:08:30,240
because the itf is not just a plain

217
00:08:28,080 --> 00:08:32,240
broadcast it is very much conversational

218
00:08:30,240 --> 00:08:34,640
it is very much interactive so

219
00:08:32,240 --> 00:08:35,760
just following the architecture that i

220
00:08:34,640 --> 00:08:37,120
that i showed before

221
00:08:35,760 --> 00:08:39,439
wasn't enough because otherwise it

222
00:08:37,120 --> 00:08:40,719
wouldn't be able to to make questions to

223
00:08:39,440 --> 00:08:43,200
have uh

224
00:08:40,719 --> 00:08:44,399
interactions uh and so on and so forth

225
00:08:43,200 --> 00:08:46,080
and so we basically

226
00:08:44,399 --> 00:08:48,160
took a couple of different approaches

227
00:08:46,080 --> 00:08:49,279
for for audio and video and for road in

228
00:08:48,160 --> 00:08:51,279
particular we chose

229
00:08:49,279 --> 00:08:52,720
a mixed approach instead following

230
00:08:51,279 --> 00:08:53,279
pretty much the same thing that we were

231
00:08:52,720 --> 00:08:55,360
doing

232
00:08:53,279 --> 00:08:57,360
uh before we changed the event because

233
00:08:55,360 --> 00:08:59,360
at the time it was

234
00:08:57,360 --> 00:09:00,800
uh it was mixed as well but in this case

235
00:08:59,360 --> 00:09:02,480
which shows a slightly different

236
00:09:00,800 --> 00:09:03,599
approach and we learned a bit from how

237
00:09:02,480 --> 00:09:06,240
podcasts were

238
00:09:03,600 --> 00:09:07,200
worked during the uh the pandemic

239
00:09:06,240 --> 00:09:10,800
because

240
00:09:07,200 --> 00:09:12,480
they became even more uh popular during

241
00:09:10,800 --> 00:09:14,479
during these past months and of course

242
00:09:12,480 --> 00:09:15,760
everybody was remoting in that case the

243
00:09:14,480 --> 00:09:17,360
podcaster was remote

244
00:09:15,760 --> 00:09:18,800
guess where we wrote and the audience

245
00:09:17,360 --> 00:09:20,480
was remote as well

246
00:09:18,800 --> 00:09:22,240
and of course webrtc is definitely a

247
00:09:20,480 --> 00:09:23,680
good fit for the conversation part

248
00:09:22,240 --> 00:09:24,080
because it's easy to have a chat using

249
00:09:23,680 --> 00:09:27,279
our

250
00:09:24,080 --> 00:09:28,880
browser it's what we are doing right now

251
00:09:27,279 --> 00:09:30,800
but in principle broadcasting can be

252
00:09:28,880 --> 00:09:32,560
done via webrtc as well and there are a

253
00:09:30,800 --> 00:09:33,359
few advantages of having everything

254
00:09:32,560 --> 00:09:35,439
mixed

255
00:09:33,360 --> 00:09:37,040
so first of all it's easier to broadcast

256
00:09:35,440 --> 00:09:38,959
and distribute it's easier

257
00:09:37,040 --> 00:09:40,800
if there you have some participants that

258
00:09:38,959 --> 00:09:42,079
are struggling with the network and so

259
00:09:40,800 --> 00:09:44,319
can always rely

260
00:09:42,080 --> 00:09:46,000
on a single at least on the very least

261
00:09:44,320 --> 00:09:48,800
on a single audio mixed stream that

262
00:09:46,000 --> 00:09:51,040
would consume very little bandwidth

263
00:09:48,800 --> 00:09:52,800
and and besides if you are broadcasting

264
00:09:51,040 --> 00:09:53,920
you you probably still need to to have

265
00:09:52,800 --> 00:09:56,880
some transcoding

266
00:09:53,920 --> 00:09:58,000
anyway which is why it makes easier to

267
00:09:56,880 --> 00:09:59,360
to have it mixed and

268
00:09:58,000 --> 00:10:01,040
it also makes it easier to inject

269
00:09:59,360 --> 00:10:01,600
something recorded content and i'll get

270
00:10:01,040 --> 00:10:03,680
back

271
00:10:01,600 --> 00:10:06,079
to this later and so what we wanted to

272
00:10:03,680 --> 00:10:08,239
do was try to figure out a way to

273
00:10:06,079 --> 00:10:10,000
basically put these two things together

274
00:10:08,240 --> 00:10:11,200
on one side broadcasting to a lot of

275
00:10:10,000 --> 00:10:12,640
people at the same time

276
00:10:11,200 --> 00:10:14,399
allowing some of those people to

277
00:10:12,640 --> 00:10:16,399
interact with each other and the way

278
00:10:14,399 --> 00:10:18,000
that we do this with janus is using the

279
00:10:16,399 --> 00:10:20,560
audio bridge plugin which is basically

280
00:10:18,000 --> 00:10:21,839
an audio mcu so if you imagine these

281
00:10:20,560 --> 00:10:23,680
three participants

282
00:10:21,839 --> 00:10:24,880
are all active and talking to each other

283
00:10:23,680 --> 00:10:26,640
as mikhail

284
00:10:24,880 --> 00:10:28,640
and leslie were doing up until a few

285
00:10:26,640 --> 00:10:29,920
minutes ago there's actually something

286
00:10:28,640 --> 00:10:30,480
in the other bridge plugin that is

287
00:10:29,920 --> 00:10:33,680
always

288
00:10:30,480 --> 00:10:34,959
relaying a mix of this conversation to a

289
00:10:33,680 --> 00:10:37,120
separate component

290
00:10:34,959 --> 00:10:38,239
and we call this feature rtp forwarding

291
00:10:37,120 --> 00:10:40,320
that we use for

292
00:10:38,240 --> 00:10:42,160
a plethora of different use cases in

293
00:10:40,320 --> 00:10:43,920
this specific use case we use it to

294
00:10:42,160 --> 00:10:45,040
facilitate the broadcasting of the

295
00:10:43,920 --> 00:10:46,560
stream so

296
00:10:45,040 --> 00:10:48,160
imagine that you have the audio bridge

297
00:10:46,560 --> 00:10:49,839
that is only mixing the active

298
00:10:48,160 --> 00:10:51,920
participants at any time

299
00:10:49,839 --> 00:10:53,279
and so basically it weighs very little

300
00:10:51,920 --> 00:10:55,040
on the cpu because you only have a

301
00:10:53,279 --> 00:10:55,680
limited number of participants being

302
00:10:55,040 --> 00:10:58,000
mixed

303
00:10:55,680 --> 00:10:59,920
this mix is always sent in real time to

304
00:10:58,000 --> 00:11:01,600
another component that can just worry

305
00:10:59,920 --> 00:11:03,439
about the broadcasting part

306
00:11:01,600 --> 00:11:05,360
and so all the passive attendees are

307
00:11:03,440 --> 00:11:07,440
actually subscribed to this additional

308
00:11:05,360 --> 00:11:09,200
component that is the streaming plugin

309
00:11:07,440 --> 00:11:10,800
which of course is not doing any mixing

310
00:11:09,200 --> 00:11:12,399
it's not doing any transcoding it's just

311
00:11:10,800 --> 00:11:14,640
doing broadcasting so it's very

312
00:11:12,399 --> 00:11:16,079
effective and lightweight on the cpu

313
00:11:14,640 --> 00:11:17,839
and we chose this approach because of

314
00:11:16,079 --> 00:11:20,000
course if you have a room with 200

315
00:11:17,839 --> 00:11:21,680
participants it makes little sense to

316
00:11:20,000 --> 00:11:23,040
have them all join the audio bridge

317
00:11:21,680 --> 00:11:24,560
because it would mean

318
00:11:23,040 --> 00:11:26,240
each of them would have a separate

319
00:11:24,560 --> 00:11:27,040
encoder which would basically kill the

320
00:11:26,240 --> 00:11:28,640
cpu

321
00:11:27,040 --> 00:11:31,439
at the very end this is a much more

322
00:11:28,640 --> 00:11:33,600
optimized way of doing things

323
00:11:31,440 --> 00:11:34,480
but again as i said we want people to be

324
00:11:33,600 --> 00:11:35,839
able to

325
00:11:34,480 --> 00:11:37,680
to actually participate in the

326
00:11:35,839 --> 00:11:38,000
conversation which means that anytime

327
00:11:37,680 --> 00:11:39,760
that

328
00:11:38,000 --> 00:11:42,399
one of the attendees the passive

329
00:11:39,760 --> 00:11:44,000
attendees must be a an active

330
00:11:42,399 --> 00:11:46,000
participant instead for instance to make

331
00:11:44,000 --> 00:11:46,880
a question or becoming the presenter

332
00:11:46,000 --> 00:11:49,200
themselves

333
00:11:46,880 --> 00:11:51,839
what happens is that we escalate them to

334
00:11:49,200 --> 00:11:53,839
an active role so anytime you press the

335
00:11:51,839 --> 00:11:55,600
mic button basically what happens is we

336
00:11:53,839 --> 00:11:57,360
mute the local stream

337
00:11:55,600 --> 00:11:59,519
the the passive stream that you were

338
00:11:57,360 --> 00:12:01,360
receiving and we have you join

339
00:11:59,519 --> 00:12:02,720
the audio bridge directly instead which

340
00:12:01,360 --> 00:12:04,639
means that you start receiving

341
00:12:02,720 --> 00:12:05,760
audio from the audio bridge so from the

342
00:12:04,639 --> 00:12:07,440
mixer itself

343
00:12:05,760 --> 00:12:09,680
and you are able to inject audio

344
00:12:07,440 --> 00:12:11,680
yourself and of course whatever you say

345
00:12:09,680 --> 00:12:13,279
is then injected back in the streaming

346
00:12:11,680 --> 00:12:14,959
plug-in and then forward it to all the

347
00:12:13,279 --> 00:12:17,279
attendees which is why you

348
00:12:14,959 --> 00:12:18,959
we basically mute your own passive

349
00:12:17,279 --> 00:12:20,000
stream instead otherwise you would hear

350
00:12:18,959 --> 00:12:22,239
yourself back

351
00:12:20,000 --> 00:12:24,160
so this is basically in a nutshell how

352
00:12:22,240 --> 00:12:27,600
it works for rodeo and of course this

353
00:12:24,160 --> 00:12:29,920
rtb forwarding mechanism allows us to

354
00:12:27,600 --> 00:12:31,040
actually broadcast this to more than one

355
00:12:29,920 --> 00:12:32,880
instance so

356
00:12:31,040 --> 00:12:35,279
at the moment that we need more servers

357
00:12:32,880 --> 00:12:36,560
to serve a wider audience all we need to

358
00:12:35,279 --> 00:12:38,959
do is to make sure that

359
00:12:36,560 --> 00:12:40,638
this mix is available on other instances

360
00:12:38,959 --> 00:12:43,040
as well so that multiple

361
00:12:40,639 --> 00:12:45,040
streaming instances can serve a subset

362
00:12:43,040 --> 00:12:46,639
of the attendees instead

363
00:12:45,040 --> 00:12:49,040
and this kind of approach is also quite

364
00:12:46,639 --> 00:12:51,040
useful for for another use case which is

365
00:12:49,040 --> 00:12:52,959
not needed for the itf but was actually

366
00:12:51,040 --> 00:12:54,319
needed for for a couple of other events

367
00:12:52,959 --> 00:12:54,880
that we've served in these past few

368
00:12:54,320 --> 00:12:57,200
months

369
00:12:54,880 --> 00:12:59,040
which is making it very easy to have

370
00:12:57,200 --> 00:13:01,200
channels with different languages i mean

371
00:12:59,040 --> 00:13:03,439
just last week we had the enog meeting

372
00:13:01,200 --> 00:13:04,320
by ripe and they actually needed two

373
00:13:03,440 --> 00:13:06,480
separate

374
00:13:04,320 --> 00:13:08,480
channels for two different languages and

375
00:13:06,480 --> 00:13:09,519
so using two different mixes for the two

376
00:13:08,480 --> 00:13:11,440
languages and

377
00:13:09,519 --> 00:13:12,720
an interpreter that can listen on one

378
00:13:11,440 --> 00:13:14,480
and speak on the other

379
00:13:12,720 --> 00:13:16,079
makes it very easy to do something like

380
00:13:14,480 --> 00:13:17,920
this and broadcast this

381
00:13:16,079 --> 00:13:19,120
seamlessly and so that you can have the

382
00:13:17,920 --> 00:13:20,880
audience

383
00:13:19,120 --> 00:13:22,560
very easily switch from one language to

384
00:13:20,880 --> 00:13:23,839
another anytime they need to

385
00:13:22,560 --> 00:13:25,599
which would be of course much more

386
00:13:23,839 --> 00:13:27,519
complex if all the streams the audio

387
00:13:25,600 --> 00:13:29,040
streams were separated from from each

388
00:13:27,519 --> 00:13:30,399
other

389
00:13:29,040 --> 00:13:31,920
for video the approach is a bit

390
00:13:30,399 --> 00:13:33,920
different because we of course don't do

391
00:13:31,920 --> 00:13:34,959
any video mixing here as you can see

392
00:13:33,920 --> 00:13:36,959
from the ui

393
00:13:34,959 --> 00:13:38,000
we are doing we are using an sfu

394
00:13:36,959 --> 00:13:40,000
approach so each

395
00:13:38,000 --> 00:13:42,160
each video stream is separated from the

396
00:13:40,000 --> 00:13:43,680
other and for this we basically took

397
00:13:42,160 --> 00:13:46,719
some lessons from the so-called

398
00:13:43,680 --> 00:13:48,638
webinar approach where we typically have

399
00:13:46,720 --> 00:13:50,079
some sort of a one-to-many scenario

400
00:13:48,639 --> 00:13:51,920
where you have a single presenter

401
00:13:50,079 --> 00:13:54,000
injecting media and then distributing

402
00:13:51,920 --> 00:13:56,000
this to a lot of passive viewers

403
00:13:54,000 --> 00:13:57,760
and of course i mean again the itf is

404
00:13:56,000 --> 00:13:58,560
mostly conversational we can have

405
00:13:57,760 --> 00:14:00,880
multiple

406
00:13:58,560 --> 00:14:01,760
active strings at the same time and it's

407
00:14:00,880 --> 00:14:03,680
not only

408
00:14:01,760 --> 00:14:05,760
different people speaking in this case

409
00:14:03,680 --> 00:14:07,439
i'm sending two different strings myself

410
00:14:05,760 --> 00:14:08,880
because i'm sharing my webcam and these

411
00:14:07,440 --> 00:14:10,639
lights at the same time

412
00:14:08,880 --> 00:14:12,399
and so of course you need to take this

413
00:14:10,639 --> 00:14:14,560
into account but if you look it from an

414
00:14:12,399 --> 00:14:17,040
architectural perspective you can see

415
00:14:14,560 --> 00:14:19,040
each video stream as it says is its

416
00:14:17,040 --> 00:14:20,639
separate broadcast so each video stream

417
00:14:19,040 --> 00:14:22,880
is a one-to-many

418
00:14:20,639 --> 00:14:24,399
broadcast if you want that is then tied

419
00:14:22,880 --> 00:14:25,360
together from an application level

420
00:14:24,399 --> 00:14:27,199
perspective

421
00:14:25,360 --> 00:14:28,560
from the application itself so it's the

422
00:14:27,199 --> 00:14:32,160
application that knows that

423
00:14:28,560 --> 00:14:34,160
my my webcam and the and the

424
00:14:32,160 --> 00:14:36,480
screen from the web from the screen

425
00:14:34,160 --> 00:14:38,160
sharing need to be part of the same

426
00:14:36,480 --> 00:14:40,160
application but in terms of

427
00:14:38,160 --> 00:14:41,839
how they flow into the architecture they

428
00:14:40,160 --> 00:14:44,000
are actually separate broadcasts that

429
00:14:41,839 --> 00:14:47,120
can be then scaled separately as

430
00:14:44,000 --> 00:14:49,519
well and of course again webrtc was

431
00:14:47,120 --> 00:14:51,199
the best the best fit for that a lot of

432
00:14:49,519 --> 00:14:51,920
conferencing applications use it every

433
00:14:51,199 --> 00:14:53,760
day

434
00:14:51,920 --> 00:14:56,160
and again as i was saying we are not

435
00:14:53,760 --> 00:14:58,000
mixing video for the webrtc use case but

436
00:14:56,160 --> 00:14:59,199
we do perform some video mixing for

437
00:14:58,000 --> 00:15:01,199
another use case that i

438
00:14:59,199 --> 00:15:02,959
that i will get back to into a few

439
00:15:01,199 --> 00:15:05,040
minutes

440
00:15:02,959 --> 00:15:06,719
uh and so for video we are using a

441
00:15:05,040 --> 00:15:08,480
different plugin so we are not using the

442
00:15:06,720 --> 00:15:10,240
audiobridge plugin that only those

443
00:15:08,480 --> 00:15:11,760
does audio mixing but we are using the

444
00:15:10,240 --> 00:15:13,839
video room plugin which is

445
00:15:11,760 --> 00:15:15,199
an sfu instead so it basically just

446
00:15:13,839 --> 00:15:16,320
relays packets

447
00:15:15,199 --> 00:15:18,560
which means that if we have a

448
00:15:16,320 --> 00:15:21,360
participant publishing media

449
00:15:18,560 --> 00:15:23,518
in a video room uh in a video room then

450
00:15:21,360 --> 00:15:24,959
other participants can subscribe to this

451
00:15:23,519 --> 00:15:26,639
stream if you want which is basically

452
00:15:24,959 --> 00:15:29,199
how all these

453
00:15:26,639 --> 00:15:30,880
sfus work and the interesting part is of

454
00:15:29,199 --> 00:15:32,959
course that this plugin just as the

455
00:15:30,880 --> 00:15:35,040
audiobridge plugin does support

456
00:15:32,959 --> 00:15:37,518
the so-called rtp forwarding so we are

457
00:15:35,040 --> 00:15:41,279
able to take the stream from

458
00:15:37,519 --> 00:15:43,600
uh from this publisher and relay it as a

459
00:15:41,279 --> 00:15:44,480
plain otp stream to a separate component

460
00:15:43,600 --> 00:15:46,240
to do

461
00:15:44,480 --> 00:15:47,519
whatever we want with it so some people

462
00:15:46,240 --> 00:15:49,360
are doing it for identity

463
00:15:47,519 --> 00:15:50,880
using it for identity verifications

464
00:15:49,360 --> 00:15:52,959
otherwise using it for

465
00:15:50,880 --> 00:15:54,800
for post processing or live recording

466
00:15:52,959 --> 00:15:55,599
and in this in this specific case we are

467
00:15:54,800 --> 00:15:56,959
using it

468
00:15:55,600 --> 00:15:59,120
again just to facilitate the

469
00:15:56,959 --> 00:16:00,079
broadcasting part because the video room

470
00:15:59,120 --> 00:16:02,800
plugin itself

471
00:16:00,079 --> 00:16:03,120
is perfectly capable of serving a number

472
00:16:02,800 --> 00:16:05,199
of

473
00:16:03,120 --> 00:16:07,360
passive attendees itself but the problem

474
00:16:05,199 --> 00:16:09,040
is that we can't anticipate how many

475
00:16:07,360 --> 00:16:09,920
attendees we will have in any room and

476
00:16:09,040 --> 00:16:11,839
we want to

477
00:16:09,920 --> 00:16:13,120
scale as much as possible so for

478
00:16:11,839 --> 00:16:14,880
instance you have the plenary where you

479
00:16:13,120 --> 00:16:16,720
have hundreds of participants instead

480
00:16:14,880 --> 00:16:18,240
and of course the video room itself on a

481
00:16:16,720 --> 00:16:20,399
single janus instance

482
00:16:18,240 --> 00:16:22,800
may not be able to sustain that load by

483
00:16:20,399 --> 00:16:24,480
itself so it's much easier to instead

484
00:16:22,800 --> 00:16:26,800
use the video room plugin just for

485
00:16:24,480 --> 00:16:28,800
inject ingest and then you pass the rtp

486
00:16:26,800 --> 00:16:30,079
stream as it is to a streaming plugin

487
00:16:28,800 --> 00:16:31,599
for distribution

488
00:16:30,079 --> 00:16:33,920
and then it's up to the streaming plugin

489
00:16:31,600 --> 00:16:36,000
which is more optimized for broadcasting

490
00:16:33,920 --> 00:16:37,120
functionality to then distribute this to

491
00:16:36,000 --> 00:16:39,920
a wider audience

492
00:16:37,120 --> 00:16:41,759
and again we can take advantage of using

493
00:16:39,920 --> 00:16:43,519
multiple streaming plug-in instances for

494
00:16:41,759 --> 00:16:44,800
distribution instead which again brings

495
00:16:43,519 --> 00:16:46,800
us back to that

496
00:16:44,800 --> 00:16:48,719
a previous slide that i had on three

497
00:16:46,800 --> 00:16:51,120
three base distribution so

498
00:16:48,720 --> 00:16:51,759
the wider the tree is the the more the

499
00:16:51,120 --> 00:16:53,680
more

500
00:16:51,759 --> 00:16:55,519
attendees you can serve of course and

501
00:16:53,680 --> 00:16:57,920
because you can serve multiple

502
00:16:55,519 --> 00:16:58,959
nodes for the distribution part and of

503
00:16:57,920 --> 00:17:00,719
course uh

504
00:16:58,959 --> 00:17:02,719
it's up since we are just working with

505
00:17:00,720 --> 00:17:04,799
plain rtp it's also very easy to

506
00:17:02,720 --> 00:17:06,880
distribute without actually using other

507
00:17:04,799 --> 00:17:09,439
webrtc components in the middle

508
00:17:06,880 --> 00:17:10,640
as long as you have webrtc functionality

509
00:17:09,439 --> 00:17:13,679
on the edge which is

510
00:17:10,640 --> 00:17:15,199
what we do and so from from a

511
00:17:13,679 --> 00:17:16,240
functionality perspective as i was

512
00:17:15,199 --> 00:17:18,160
saying

513
00:17:16,240 --> 00:17:20,319
video can be treated as multiple

514
00:17:18,160 --> 00:17:22,480
one-to-many broadcasts which is uh

515
00:17:20,319 --> 00:17:23,839
exemplified in this very ugly picture

516
00:17:22,480 --> 00:17:25,599
that you see over here

517
00:17:23,839 --> 00:17:27,438
so in this case we have two different

518
00:17:25,599 --> 00:17:29,280
participants injecting video and they

519
00:17:27,439 --> 00:17:30,080
are also talking to different video room

520
00:17:29,280 --> 00:17:32,559
instances

521
00:17:30,080 --> 00:17:34,240
which isn't happening in uh in in this

522
00:17:32,559 --> 00:17:34,720
setup of the itf but will probably

523
00:17:34,240 --> 00:17:38,160
happen

524
00:17:34,720 --> 00:17:40,000
soon in this case you have then each uh

525
00:17:38,160 --> 00:17:41,760
both participants injecting their own

526
00:17:40,000 --> 00:17:43,520
stream which is then

527
00:17:41,760 --> 00:17:45,120
distributed to all of those four

528
00:17:43,520 --> 00:17:46,799
distribution nodes that you see and the

529
00:17:45,120 --> 00:17:49,120
same happens for the both of them which

530
00:17:46,799 --> 00:17:51,120
means that from an audience perspective

531
00:17:49,120 --> 00:17:52,799
it really doesn't matter that the it's

532
00:17:51,120 --> 00:17:54,399
different participants that

533
00:17:52,799 --> 00:17:56,879
they are being fed to different

534
00:17:54,400 --> 00:17:58,640
instances they are both seen as two

535
00:17:56,880 --> 00:18:00,080
separate streams that they are receiving

536
00:17:58,640 --> 00:18:01,440
from the certain same server they are

537
00:18:00,080 --> 00:18:02,879
connected to so

538
00:18:01,440 --> 00:18:04,799
it's quite an effective way of

539
00:18:02,880 --> 00:18:07,120
distributing streams without

540
00:18:04,799 --> 00:18:09,039
uh worrying too much about tying the two

541
00:18:07,120 --> 00:18:10,559
strings together so it's a game

542
00:18:09,039 --> 00:18:12,160
very different broadcast that we can

543
00:18:10,559 --> 00:18:13,840
distribute their own way

544
00:18:12,160 --> 00:18:15,520
and so bringing it back in an even

545
00:18:13,840 --> 00:18:17,280
uglier picture than before

546
00:18:15,520 --> 00:18:20,080
this is how it looks in a nutshell so

547
00:18:17,280 --> 00:18:21,840
you have active participants connected

548
00:18:20,080 --> 00:18:23,760
to the audio bridge for speaking and to

549
00:18:21,840 --> 00:18:25,678
the video room plugin for sending their

550
00:18:23,760 --> 00:18:27,679
own video streams

551
00:18:25,679 --> 00:18:28,799
and all of those streams are then

552
00:18:27,679 --> 00:18:30,559
forwarded

553
00:18:28,799 --> 00:18:32,400
to the to the to a plate or our

554
00:18:30,559 --> 00:18:33,678
streaming plugins for the distribution

555
00:18:32,400 --> 00:18:35,360
part which means that

556
00:18:33,679 --> 00:18:37,280
no matter where you are ingesting

557
00:18:35,360 --> 00:18:38,479
streams the moment you hit the streaming

558
00:18:37,280 --> 00:18:40,320
plugin instance

559
00:18:38,480 --> 00:18:41,760
you are able to receive those streams

560
00:18:40,320 --> 00:18:43,200
nevertheless which means that we are

561
00:18:41,760 --> 00:18:45,520
then able to scale

562
00:18:43,200 --> 00:18:47,440
to any number of participants in theory

563
00:18:45,520 --> 00:18:50,160
because it means that we just need to

564
00:18:47,440 --> 00:18:51,840
to increase the number of uh streaming

565
00:18:50,160 --> 00:18:53,679
instances devoted to the broadcasting

566
00:18:51,840 --> 00:18:54,959
part we just need to update the

567
00:18:53,679 --> 00:18:57,360
distribution tree

568
00:18:54,960 --> 00:18:58,400
behind according uh behind the curtains

569
00:18:57,360 --> 00:19:00,320
accordingly

570
00:18:58,400 --> 00:19:01,440
and i mean all of this effort eventually

571
00:19:00,320 --> 00:19:04,240
led to uh

572
00:19:01,440 --> 00:19:05,039
to what you saw in at itf 108 in madrid

573
00:19:04,240 --> 00:19:07,440
so that

574
00:19:05,039 --> 00:19:10,080
the interface maybe didn't change as

575
00:19:07,440 --> 00:19:11,520
much from the one that you were used to

576
00:19:10,080 --> 00:19:13,199
when the meetings were actually in

577
00:19:11,520 --> 00:19:14,879
person and you were attending remotely

578
00:19:13,200 --> 00:19:17,200
but there were a lot of changes actually

579
00:19:14,880 --> 00:19:19,440
especially in terms of how the streams

580
00:19:17,200 --> 00:19:20,320
were managed but there were actually a

581
00:19:19,440 --> 00:19:22,720
few changes

582
00:19:20,320 --> 00:19:24,399
since then so and i'll try to spend a

583
00:19:22,720 --> 00:19:26,240
few words on those as well just in case

584
00:19:24,400 --> 00:19:28,559
you're interested then first of all

585
00:19:26,240 --> 00:19:29,760
i mentioned the distribution tree and

586
00:19:28,559 --> 00:19:31,918
during itf

587
00:19:29,760 --> 00:19:32,879
108 that was indeed the case so we had

588
00:19:31,919 --> 00:19:34,799
indeed

589
00:19:32,880 --> 00:19:36,160
this scenario that you see the tissue

590
00:19:34,799 --> 00:19:38,400
over here so each

591
00:19:36,160 --> 00:19:40,000
each ingestion node was actually

592
00:19:38,400 --> 00:19:42,400
distributing the stream

593
00:19:40,000 --> 00:19:44,080
proactively to all of these streaming

594
00:19:42,400 --> 00:19:45,440
instances that you see over there so it

595
00:19:44,080 --> 00:19:47,678
needed to be aware that

596
00:19:45,440 --> 00:19:49,760
there was a streaming instance available

597
00:19:47,679 --> 00:19:50,960
and so the moment a new one appeared we

598
00:19:49,760 --> 00:19:52,960
had to basically

599
00:19:50,960 --> 00:19:54,799
tell all of these components to start

600
00:19:52,960 --> 00:19:56,240
relaying the traffic to this additional

601
00:19:54,799 --> 00:19:58,480
node instead

602
00:19:56,240 --> 00:20:00,640
which works but it is indeed a bit of an

603
00:19:58,480 --> 00:20:02,320
orchestration burden which is why we

604
00:20:00,640 --> 00:20:04,480
we were very happy that this time

605
00:20:02,320 --> 00:20:06,158
instead we could take advantage of

606
00:20:04,480 --> 00:20:08,799
multicast support instead which the

607
00:20:06,159 --> 00:20:11,280
cloud provider that we used in 108

608
00:20:08,799 --> 00:20:12,080
didn't so we had this multicast support

609
00:20:11,280 --> 00:20:13,360
available for the

610
00:20:12,080 --> 00:20:15,600
for a long time but we just couldn't

611
00:20:13,360 --> 00:20:17,360
take advantage of it which which we now

612
00:20:15,600 --> 00:20:21,039
can and this means that

613
00:20:17,360 --> 00:20:24,000
these instances that you see over here

614
00:20:21,039 --> 00:20:25,520
are basically uh you still have one

615
00:20:24,000 --> 00:20:27,360
audio bridge you still have one video

616
00:20:25,520 --> 00:20:29,918
room but they are just sending a single

617
00:20:27,360 --> 00:20:31,840
stream via rtp forwarding to

618
00:20:29,919 --> 00:20:33,919
a multicast group instead which means

619
00:20:31,840 --> 00:20:35,600
that any streaming instance any

620
00:20:33,919 --> 00:20:36,240
distribution instance that you see over

621
00:20:35,600 --> 00:20:38,080
here

622
00:20:36,240 --> 00:20:40,000
just needs to subscribe to the right

623
00:20:38,080 --> 00:20:41,520
multicast group in order to receive the

624
00:20:40,000 --> 00:20:43,840
stream they are interested in

625
00:20:41,520 --> 00:20:46,320
which means that if in this case we have

626
00:20:43,840 --> 00:20:47,760
yet another streaming instance over here

627
00:20:46,320 --> 00:20:49,678
they just need to be aware of the

628
00:20:47,760 --> 00:20:51,280
multicast group that already exists to

629
00:20:49,679 --> 00:20:53,200
be able to receive the media

630
00:20:51,280 --> 00:20:54,158
automatically so these components don't

631
00:20:53,200 --> 00:20:56,320
need to do

632
00:20:54,159 --> 00:20:57,440
any additional effort so they don't need

633
00:20:56,320 --> 00:21:01,520
to add any

634
00:20:57,440 --> 00:21:03,600
uh any forwarding rule themselves

635
00:21:01,520 --> 00:21:05,600
and another interesting thing that we

636
00:21:03,600 --> 00:21:07,280
did already supporting 108 and we tried

637
00:21:05,600 --> 00:21:09,280
to improve in in the meanwhile was

638
00:21:07,280 --> 00:21:11,360
support for pre-recorded talks

639
00:21:09,280 --> 00:21:12,960
because in the applied networking

640
00:21:11,360 --> 00:21:16,158
research working group

641
00:21:12,960 --> 00:21:16,799
there was actually uh the requirements

642
00:21:16,159 --> 00:21:19,760
to have

643
00:21:16,799 --> 00:21:21,039
some uh pre-recorded talks as well

644
00:21:19,760 --> 00:21:23,200
rather than just

645
00:21:21,039 --> 00:21:24,799
live presentations which of course was

646
00:21:23,200 --> 00:21:26,640
could be seen as a bit of a challenge

647
00:21:24,799 --> 00:21:28,320
because right now we are all talking

648
00:21:26,640 --> 00:21:30,559
actively we are all capturing our own

649
00:21:28,320 --> 00:21:32,799
webcams our own screens and so on

650
00:21:30,559 --> 00:21:34,639
and instead in that case we had several

651
00:21:32,799 --> 00:21:36,320
pre-recorded presentations that we want

652
00:21:34,640 --> 00:21:38,640
to we wanted to play live

653
00:21:36,320 --> 00:21:39,840
through the same metacore interface as

654
00:21:38,640 --> 00:21:41,280
if they were live but they were

655
00:21:39,840 --> 00:21:42,639
pre-recorded instead

656
00:21:41,280 --> 00:21:44,799
and this was actually pretty

657
00:21:42,640 --> 00:21:45,919
straightforward to do in terms of how

658
00:21:44,799 --> 00:21:47,520
the architecture worked

659
00:21:45,919 --> 00:21:49,600
uh in the first place because the

660
00:21:47,520 --> 00:21:51,200
streaming plugin that i was mentioning

661
00:21:49,600 --> 00:21:52,639
that basically allows you to do the

662
00:21:51,200 --> 00:21:55,440
broadcasting part

663
00:21:52,640 --> 00:21:56,159
actually works by taking plain rtp

664
00:21:55,440 --> 00:21:58,240
inputs

665
00:21:56,159 --> 00:21:59,919
as a source which is why it works so

666
00:21:58,240 --> 00:22:00,559
nicely with yoda bridge and video room

667
00:21:59,919 --> 00:22:03,039
plugins

668
00:22:00,559 --> 00:22:04,480
as a source themselves so all we needed

669
00:22:03,039 --> 00:22:06,960
to do was basically take those

670
00:22:04,480 --> 00:22:10,000
prerecorded files and stream them via

671
00:22:06,960 --> 00:22:12,159
rtp using a tool like ffmpeg or gstream

672
00:22:10,000 --> 00:22:12,960
or any other open source tool that that

673
00:22:12,159 --> 00:22:16,000
is available

674
00:22:12,960 --> 00:22:17,120
and then stream those uh to to the

675
00:22:16,000 --> 00:22:18,960
streaming plugin

676
00:22:17,120 --> 00:22:21,120
instances that were associated to the

677
00:22:18,960 --> 00:22:22,559
room and that basically would become a

678
00:22:21,120 --> 00:22:24,879
new broadcast that

679
00:22:22,559 --> 00:22:27,039
people in the room could subscribe to

680
00:22:24,880 --> 00:22:28,720
there was a bit of a

681
00:22:27,039 --> 00:22:30,158
an issue here though then and

682
00:22:28,720 --> 00:22:32,240
specifically the fact that for

683
00:22:30,159 --> 00:22:33,919
pre-recorded presentations in this case

684
00:22:32,240 --> 00:22:35,840
audio was going through the streaming

685
00:22:33,919 --> 00:22:37,919
plugin instead which is why

686
00:22:35,840 --> 00:22:39,600
people rightly complained about the fact

687
00:22:37,919 --> 00:22:41,600
that the volume controller in the

688
00:22:39,600 --> 00:22:43,439
imitation interface was not working for

689
00:22:41,600 --> 00:22:44,799
them in that case and that was indeed

690
00:22:43,440 --> 00:22:46,400
expected because the

691
00:22:44,799 --> 00:22:48,639
the volume slider that you see in the

692
00:22:46,400 --> 00:22:50,480
room only acts on the

693
00:22:48,640 --> 00:22:52,320
the audio that you are receiving from

694
00:22:50,480 --> 00:22:52,799
the from the mixer so from the audio

695
00:22:52,320 --> 00:22:54,720
bridge

696
00:22:52,799 --> 00:22:56,799
and in this case we were bypassing that

697
00:22:54,720 --> 00:22:58,159
component which made for a slightly

698
00:22:56,799 --> 00:23:00,400
awkward experience

699
00:22:58,159 --> 00:23:02,320
and so we actually changed that in 109

700
00:23:00,400 --> 00:23:06,240
so right now we are actually

701
00:23:02,320 --> 00:23:08,960
injecting pre-recording presentations

702
00:23:06,240 --> 00:23:10,320
as a regular webrtc participants and

703
00:23:08,960 --> 00:23:12,000
that which means that they go

704
00:23:10,320 --> 00:23:14,000
directly both in the audio bridge and

705
00:23:12,000 --> 00:23:15,840
the video room and they are distributed

706
00:23:14,000 --> 00:23:17,840
exactly as a regular participant would

707
00:23:15,840 --> 00:23:19,600
which makes it much more

708
00:23:17,840 --> 00:23:22,480
transparent to the infrastructure in

709
00:23:19,600 --> 00:23:23,120
place we plan to get back to play in rtp

710
00:23:22,480 --> 00:23:25,600
because we

711
00:23:23,120 --> 00:23:27,439
we we can inject play in rtp video in

712
00:23:25,600 --> 00:23:28,879
the streaming plugin we did that just

713
00:23:27,440 --> 00:23:30,960
last the last meeting and we can

714
00:23:28,880 --> 00:23:32,960
actually also play

715
00:23:30,960 --> 00:23:34,559
a pre-recorded audio file in the audio

716
00:23:32,960 --> 00:23:35,360
bridge itself but it is something that

717
00:23:34,559 --> 00:23:37,120
we plan to

718
00:23:35,360 --> 00:23:39,678
to do for the next meeting also because

719
00:23:37,120 --> 00:23:41,360
we had some some weird network behavior

720
00:23:39,679 --> 00:23:42,240
that we can discuss later if we had

721
00:23:41,360 --> 00:23:44,080
questions so

722
00:23:42,240 --> 00:23:47,440
that basically prevented this from from

723
00:23:44,080 --> 00:23:50,000
happening so this made for an easier

724
00:23:47,440 --> 00:23:51,440
for an easier process instead and

725
00:23:50,000 --> 00:23:53,600
finally to conclude i mean

726
00:23:51,440 --> 00:23:55,679
i was mentioning that we that we don't

727
00:23:53,600 --> 00:23:57,600
do any video mixing for the

728
00:23:55,679 --> 00:23:58,720
plain webrtc participation that you see

729
00:23:57,600 --> 00:24:00,559
over here but we

730
00:23:58,720 --> 00:24:02,240
do have to do that sometimes especially

731
00:24:00,559 --> 00:24:04,399
when we need to broadcast some of the

732
00:24:02,240 --> 00:24:07,200
working groups to do youtube live

733
00:24:04,400 --> 00:24:08,320
so for instance the technology deep dive

734
00:24:07,200 --> 00:24:10,320
or the plenary

735
00:24:08,320 --> 00:24:12,559
some sessions always need to broadcast

736
00:24:10,320 --> 00:24:14,080
it to be broadcasted to youtube as well

737
00:24:12,559 --> 00:24:15,678
which means that in that case some

738
00:24:14,080 --> 00:24:16,559
mixing needs to take place because of

739
00:24:15,679 --> 00:24:19,279
course

740
00:24:16,559 --> 00:24:21,600
any cdm provider like youtube needs to

741
00:24:19,279 --> 00:24:24,080
have a single audio and single video

742
00:24:21,600 --> 00:24:25,760
stream to be able to broadcast them

743
00:24:24,080 --> 00:24:27,760
to to their audience and the way this

744
00:24:25,760 --> 00:24:29,679
works is we take advantage of the same

745
00:24:27,760 --> 00:24:30,879
rtp forwarding functionality that i was

746
00:24:29,679 --> 00:24:33,679
mentioning before

747
00:24:30,880 --> 00:24:35,279
so in this case we have an ncu component

748
00:24:33,679 --> 00:24:37,039
that just says the stream impact

749
00:24:35,279 --> 00:24:39,440
instances is subscribing to the same

750
00:24:37,039 --> 00:24:41,200
multicast groups that i described before

751
00:24:39,440 --> 00:24:42,720
it's receiving those streams so it's

752
00:24:41,200 --> 00:24:45,200
receiving the streams from the active

753
00:24:42,720 --> 00:24:46,960
participants the audio and video streams

754
00:24:45,200 --> 00:24:48,880
mixes them all together and then

755
00:24:46,960 --> 00:24:51,679
generates in real time

756
00:24:48,880 --> 00:24:54,000
an audio video mix that it can send via

757
00:24:51,679 --> 00:24:54,559
rtmp in this case to the cdn which was

758
00:24:54,000 --> 00:24:56,799
youtube

759
00:24:54,559 --> 00:24:58,799
and which can then be distributed via

760
00:24:56,799 --> 00:25:01,200
the cd enter its own means

761
00:24:58,799 --> 00:25:02,158
and you can see an interesting example

762
00:25:01,200 --> 00:25:04,080
in the technology

763
00:25:02,159 --> 00:25:05,760
dive session from last time because in

764
00:25:04,080 --> 00:25:07,760
that case we also had a very active

765
00:25:05,760 --> 00:25:09,919
participation from the

766
00:25:07,760 --> 00:25:11,600
from the participants there so at a

767
00:25:09,919 --> 00:25:13,360
specific point in time you had four

768
00:25:11,600 --> 00:25:14,158
different participants interacting with

769
00:25:13,360 --> 00:25:16,879
each other

770
00:25:14,159 --> 00:25:17,840
which again is treated as an sfu

771
00:25:16,880 --> 00:25:20,240
approach in the

772
00:25:17,840 --> 00:25:22,240
by webrtc participants but it was

773
00:25:20,240 --> 00:25:24,400
actually mixed in a single stream when

774
00:25:22,240 --> 00:25:26,320
when sent via

775
00:25:24,400 --> 00:25:28,080
youtube instead so at any time we could

776
00:25:26,320 --> 00:25:28,799
dynamically change layouts so for

777
00:25:28,080 --> 00:25:30,879
instance

778
00:25:28,799 --> 00:25:33,120
focus on the zla on the slides and on

779
00:25:30,880 --> 00:25:35,279
the speaker when

780
00:25:33,120 --> 00:25:36,879
when needed or possibly change the

781
00:25:35,279 --> 00:25:38,640
layout that it would accommodate

782
00:25:36,880 --> 00:25:39,440
multiple people discussing the current

783
00:25:38,640 --> 00:25:40,880
slides

784
00:25:39,440 --> 00:25:43,039
or maybe focusing more on the

785
00:25:40,880 --> 00:25:45,760
presentations and less on those lives or

786
00:25:43,039 --> 00:25:47,279
focus exclusively on the on the on the

787
00:25:45,760 --> 00:25:49,360
conversation instead

788
00:25:47,279 --> 00:25:50,640
at any rate this is something that was

789
00:25:49,360 --> 00:25:54,320
working for 108

790
00:25:50,640 --> 00:25:55,760
and uh basically the uh it still works

791
00:25:54,320 --> 00:25:58,158
it will still work pretty much the same

792
00:25:55,760 --> 00:26:00,000
way for for 109 as well

793
00:25:58,159 --> 00:26:01,919
and this basically covers my

794
00:26:00,000 --> 00:26:03,440
presentation i hope i didn't go too fast

795
00:26:01,919 --> 00:26:05,200
especially because i had a lot of slides

796
00:26:03,440 --> 00:26:07,520
and i wanted to make sure that i have i

797
00:26:05,200 --> 00:26:09,200
had enough time to present them all so

798
00:26:07,520 --> 00:26:11,120
i'm happy to answer any question if you

799
00:26:09,200 --> 00:26:13,120
want and by the way i already see

800
00:26:11,120 --> 00:26:15,039
uh callan asking something he's asked

801
00:26:13,120 --> 00:26:17,199
how many participants are reasonable to

802
00:26:15,039 --> 00:26:18,960
reasonable combined in this way in

803
00:26:17,200 --> 00:26:21,760
principle there is

804
00:26:18,960 --> 00:26:24,240
let's say i don't know the maximum

805
00:26:21,760 --> 00:26:26,960
layout we accommodate programmatically

806
00:26:24,240 --> 00:26:29,279
what it is but we have we had some mcu

807
00:26:26,960 --> 00:26:30,159
sessions that accommodated even 20 or 30

808
00:26:29,279 --> 00:26:32,559
people

809
00:26:30,159 --> 00:26:34,320
in the same mcu stream i don't think it

810
00:26:32,559 --> 00:26:39,840
ever happened for itf meetings but it

811
00:26:34,320 --> 00:26:39,840
happened in some other contexts

812
00:26:41,840 --> 00:26:45,039
all right any uh any questions anybody

813
00:26:44,480 --> 00:26:47,840
uh

814
00:26:45,039 --> 00:26:48,480
want to get to the queue i say jake

815
00:26:47,840 --> 00:26:50,799
asking what's

816
00:26:48,480 --> 00:26:52,960
what happens if we all turn on our mix i

817
00:26:50,799 --> 00:26:55,520
mean in theory uh

818
00:26:52,960 --> 00:26:57,039
it's just about 40 people in here so it

819
00:26:55,520 --> 00:26:58,559
should it should just work but of course

820
00:26:57,039 --> 00:26:59,919
the more people you have active in the

821
00:26:58,559 --> 00:27:01,600
same

822
00:26:59,919 --> 00:27:03,200
in the same audio bridge instance is of

823
00:27:01,600 --> 00:27:06,240
course going to weigh a bit harder on

824
00:27:03,200 --> 00:27:08,240
the cpu itself which is why we tried to

825
00:27:06,240 --> 00:27:10,240
to optimize things as much as possible

826
00:27:08,240 --> 00:27:11,360
and broadcast as much as possible rather

827
00:27:10,240 --> 00:27:13,120
than

828
00:27:11,360 --> 00:27:15,279
than everybody turning on their mix

829
00:27:13,120 --> 00:27:17,360
which of course also makes

830
00:27:15,279 --> 00:27:18,960
little sense because 40 people talking

831
00:27:17,360 --> 00:27:21,840
at the same time is going to be chaos

832
00:27:18,960 --> 00:27:21,840
anyway so

833
00:27:23,279 --> 00:27:26,720
about the about azure i'm not exactly

834
00:27:25,520 --> 00:27:28,080
sure about that because i'm not

835
00:27:26,720 --> 00:27:31,600
responsible for the

836
00:27:28,080 --> 00:27:33,520
uh for the devops side of things uh you

837
00:27:31,600 --> 00:27:34,959
but you if you can send us an email and

838
00:27:33,520 --> 00:27:36,720
alessandra will get back to you with

839
00:27:34,960 --> 00:27:40,559
more information i think it's a single

840
00:27:36,720 --> 00:27:40,559
data center but i may be wrong with that

841
00:27:43,200 --> 00:27:47,679
so a question for me uh i'm curious how

842
00:27:47,039 --> 00:27:50,480
much

843
00:27:47,679 --> 00:27:51,279
of this gets architected and fixed for a

844
00:27:50,480 --> 00:27:54,399
given

845
00:27:51,279 --> 00:27:58,080
um event or how much of it is

846
00:27:54,399 --> 00:28:00,239
dynamically configurable on the fly

847
00:27:58,080 --> 00:28:02,559
yeah we actually uh we actually had a

848
00:28:00,240 --> 00:28:04,159
few meetings that shared very much the

849
00:28:02,559 --> 00:28:05,840
same architecture in the past so for

850
00:28:04,159 --> 00:28:07,760
instance we had the meeting for the

851
00:28:05,840 --> 00:28:09,439
for the afrinic here in session we had a

852
00:28:07,760 --> 00:28:12,000
couple of ripe meetings

853
00:28:09,440 --> 00:28:13,200
uh this past couple of weeks and you

854
00:28:12,000 --> 00:28:16,399
could say that

855
00:28:13,200 --> 00:28:17,200
95 of the code was exactly the same and

856
00:28:16,399 --> 00:28:19,600
we had to just

857
00:28:17,200 --> 00:28:21,919
tailor some specific functionalities to

858
00:28:19,600 --> 00:28:26,080
some use cases so for instance for this

859
00:28:21,919 --> 00:28:29,200
enog meeting we had to support these uh

860
00:28:26,080 --> 00:28:30,960
bilingual streams which was uh which was

861
00:28:29,200 --> 00:28:31,840
just a minor change because the

862
00:28:30,960 --> 00:28:33,919
architectural

863
00:28:31,840 --> 00:28:34,879
already allowed for it and most of the

864
00:28:33,919 --> 00:28:37,120
times it's just

865
00:28:34,880 --> 00:28:38,080
uh visual changes so it's a matter of

866
00:28:37,120 --> 00:28:40,559
adapting the

867
00:28:38,080 --> 00:28:42,480
user interface for some specific things

868
00:28:40,559 --> 00:28:43,760
or some functionality that are very much

869
00:28:42,480 --> 00:28:45,520
specific to

870
00:28:43,760 --> 00:28:47,520
to some use cases because for instance

871
00:28:45,520 --> 00:28:49,600
uh the virtual hum functionality that we

872
00:28:47,520 --> 00:28:51,840
had in 108 was very much

873
00:28:49,600 --> 00:28:53,678
an itf requirement and was never needed

874
00:28:51,840 --> 00:28:55,520
for any other use case

875
00:28:53,679 --> 00:28:57,600
the functionality that we have here for

876
00:28:55,520 --> 00:29:00,080
raising your hand may be more generic

877
00:28:57,600 --> 00:29:02,320
and so may be reusable in our context

878
00:29:00,080 --> 00:29:04,960
but is again something that we started

879
00:29:02,320 --> 00:29:06,879
working specifically for the itf instead

880
00:29:04,960 --> 00:29:08,559
so as far as the audio video

881
00:29:06,880 --> 00:29:11,120
distribution is concerned

882
00:29:08,559 --> 00:29:12,320
it's very much the same in in our

883
00:29:11,120 --> 00:29:14,719
context and so

884
00:29:12,320 --> 00:29:18,000
that that part is basically reusable in

885
00:29:14,720 --> 00:29:18,000
several different contexts

886
00:29:19,279 --> 00:29:24,159
cool and i see there's a question from

887
00:29:21,919 --> 00:29:24,159
jake

888
00:29:24,960 --> 00:29:28,640
is there right up uh oh uh jake is

889
00:29:27,200 --> 00:29:30,320
asking if there is a write up on the

890
00:29:28,640 --> 00:29:33,679
multicast setup in the cloud and

891
00:29:30,320 --> 00:29:36,559
this was in azure uh yeah basically uh

892
00:29:33,679 --> 00:29:38,960
the the setup that we had in 108 was i

893
00:29:36,559 --> 00:29:40,799
think using google cloud servers and

894
00:29:38,960 --> 00:29:42,480
and we do know that that setup didn't

895
00:29:40,799 --> 00:29:44,399
have multicast support at least at the

896
00:29:42,480 --> 00:29:45,200
time which while instead asia does

897
00:29:44,399 --> 00:29:47,039
support it

898
00:29:45,200 --> 00:29:49,440
and again alessandro can provide more

899
00:29:47,039 --> 00:29:52,158
insights about

900
00:29:49,440 --> 00:29:53,760
specifically why azure supports it now

901
00:29:52,159 --> 00:29:54,480
and how we could take advantage of it

902
00:29:53,760 --> 00:29:56,158
but

903
00:29:54,480 --> 00:29:58,799
this was definitely the first standard

904
00:29:56,159 --> 00:29:58,799
that we could

905
00:30:03,120 --> 00:30:10,559
great all right any any other questions

906
00:30:08,640 --> 00:30:13,440
yeah as eric is pointing out yeah the

907
00:30:10,559 --> 00:30:14,240
streams uh work over ipv6 and this is

908
00:30:13,440 --> 00:30:15,919
thanks to

909
00:30:14,240 --> 00:30:17,919
to janus in the first place so as i

910
00:30:15,919 --> 00:30:19,679
anticipated all that you are seeing is

911
00:30:17,919 --> 00:30:21,200
actually based on a completely open

912
00:30:19,679 --> 00:30:23,039
source component so

913
00:30:21,200 --> 00:30:24,720
all the the stream that is responsible

914
00:30:23,039 --> 00:30:26,158
for the audio and video streaming is

915
00:30:24,720 --> 00:30:28,320
completely open source and you're

916
00:30:26,159 --> 00:30:30,080
completely free to use it on your own

917
00:30:28,320 --> 00:30:32,480
terms and that component

918
00:30:30,080 --> 00:30:34,559
does support ipv6 out of the box so as

919
00:30:32,480 --> 00:30:36,000
long as the infrastructure supports it

920
00:30:34,559 --> 00:30:38,799
and

921
00:30:36,000 --> 00:30:41,360
we've been lucky that both uh in both

922
00:30:38,799 --> 00:30:43,200
meetings we could have that opportunity

923
00:30:41,360 --> 00:30:45,439
then this comes out for free basically

924
00:30:43,200 --> 00:30:48,480
so it just works

925
00:30:45,440 --> 00:30:49,840
cool all right

926
00:30:48,480 --> 00:30:52,080
well thank you very much for sharing

927
00:30:49,840 --> 00:30:54,399
that that was very interesting

928
00:30:52,080 --> 00:30:56,480
thank you for having me here it was a

929
00:30:54,399 --> 00:30:58,639
nice opportunity thank you

930
00:30:56,480 --> 00:30:58,640
good

931
00:31:00,159 --> 00:31:03,440
all right not seeing any other questions

932
00:31:02,960 --> 00:31:05,440
uh

933
00:31:03,440 --> 00:31:07,279
moving along in our agenda which i know

934
00:31:05,440 --> 00:31:11,039
i have here somewhere

935
00:31:07,279 --> 00:31:14,640
uh or maybe kyle's about to pull it up

936
00:31:11,039 --> 00:31:17,039
there we go um yep so next one

937
00:31:14,640 --> 00:31:17,039
is

938
00:31:17,760 --> 00:31:22,240
media operations use case for augmented

939
00:31:20,960 --> 00:31:33,519
reality

940
00:31:22,240 --> 00:31:37,440
let me pull that up

941
00:31:33,519 --> 00:31:37,440
i saw irene in here earlier

942
00:31:39,840 --> 00:31:43,120
i'm getting there i'm still uh i'm still

943
00:31:41,840 --> 00:31:48,320
working through the uh

944
00:31:43,120 --> 00:31:48,320
you know working the turkey through so

945
00:31:55,840 --> 00:32:00,320
all right okay so we have your slides up

946
00:31:58,840 --> 00:32:03,279
um

947
00:32:00,320 --> 00:32:06,000
if you want to go ahead jake and drive

948
00:32:03,279 --> 00:32:09,120
sorry kyle can drive

949
00:32:06,000 --> 00:32:11,760
uh can you hear me yes yes

950
00:32:09,120 --> 00:32:11,760
okay perfect

951
00:32:12,640 --> 00:32:16,720
hi everyone my name is raynan krishna

952
00:32:15,200 --> 00:32:18,559
and i will be presenting a media

953
00:32:16,720 --> 00:32:20,720
operation use case for an augmented

954
00:32:18,559 --> 00:32:21,760
reality application on edge computing

955
00:32:20,720 --> 00:32:25,360
infrastructure

956
00:32:21,760 --> 00:32:29,200
which is a joint work with upper rama

957
00:32:25,360 --> 00:32:31,439
next slide please

958
00:32:29,200 --> 00:32:33,200
so let's start with a brief introduction

959
00:32:31,440 --> 00:32:35,120
of our interest

960
00:32:33,200 --> 00:32:36,480
in the work being done by the mobs

961
00:32:35,120 --> 00:32:38,799
working group

962
00:32:36,480 --> 00:32:40,320
i work for interdigital europe limited

963
00:32:38,799 --> 00:32:41,440
and we are through an acquisition of

964
00:32:40,320 --> 00:32:43,678
technicolor

965
00:32:41,440 --> 00:32:46,480
active in various arvr related

966
00:32:43,679 --> 00:32:50,080
technology development

967
00:32:46,480 --> 00:32:51,200
for example at mwc 2019 we demonstrated

968
00:32:50,080 --> 00:32:54,000
our technology for

969
00:32:51,200 --> 00:32:55,600
360 degree video experience with

970
00:32:54,000 --> 00:32:58,080
adaptive streaming

971
00:32:55,600 --> 00:33:01,760
volumetric technology for video and

972
00:32:58,080 --> 00:33:01,760
virtual reality video streaming

973
00:33:01,919 --> 00:33:07,679
we are also participating in other seos

974
00:33:04,720 --> 00:33:07,679
listed in the slide

975
00:33:07,760 --> 00:33:11,120
the internet draft title operational

976
00:33:09,600 --> 00:33:12,879
considerations for media

977
00:33:11,120 --> 00:33:14,479
streaming media by jake holland and

978
00:33:12,880 --> 00:33:16,720
others provides

979
00:33:14,480 --> 00:33:17,519
an overview of operational networking

980
00:33:16,720 --> 00:33:20,640
issues

981
00:33:17,519 --> 00:33:22,840
that pertain to qoe in delivery of video

982
00:33:20,640 --> 00:33:24,320
and other high bitrate media over the

983
00:33:22,840 --> 00:33:26,320
internet

984
00:33:24,320 --> 00:33:28,799
our draft intends to be complementary to

985
00:33:26,320 --> 00:33:30,879
that draft by covering the increasingly

986
00:33:28,799 --> 00:33:33,279
large number of applications with

987
00:33:30,880 --> 00:33:36,559
augmented reality characteristics

988
00:33:33,279 --> 00:33:39,200
and the requirements on abr algorithms

989
00:33:36,559 --> 00:33:41,120
we propose a use case to highlight the

990
00:33:39,200 --> 00:33:46,080
unanticipated requirements

991
00:33:41,120 --> 00:33:48,799
on abr algorithms in ar applications

992
00:33:46,080 --> 00:33:48,799
next slide please

993
00:33:50,720 --> 00:33:55,440
so the use case is as follows

994
00:33:53,760 --> 00:33:57,039
consider a group of tourists who are

995
00:33:55,440 --> 00:33:58,799
being conducted in a tour

996
00:33:57,039 --> 00:34:01,279
around the historical site of the tower

997
00:33:58,799 --> 00:34:03,360
of london as they move around the site

998
00:34:01,279 --> 00:34:05,360
and within the historical buildings

999
00:34:03,360 --> 00:34:06,639
they can watch and listen to historical

1000
00:34:05,360 --> 00:34:09,118
scenes in 3d

1001
00:34:06,640 --> 00:34:11,119
that are generated by the ar application

1002
00:34:09,119 --> 00:34:14,639
and then overlaid by the ar

1003
00:34:11,119 --> 00:34:16,560
headsets onto their real worldview

1004
00:34:14,639 --> 00:34:18,800
the headset then continuously updates

1005
00:34:16,560 --> 00:34:20,879
their view as they move around

1006
00:34:18,800 --> 00:34:22,800
now let's take a look at what the ar

1007
00:34:20,879 --> 00:34:25,118
application is doing

1008
00:34:22,800 --> 00:34:26,240
and how edge computing infrastructure

1009
00:34:25,119 --> 00:34:28,960
can help

1010
00:34:26,239 --> 00:34:28,959
next slide please

1011
00:34:30,879 --> 00:34:34,879
the air application processes the scene

1012
00:34:33,040 --> 00:34:37,679
that the walking tourist

1013
00:34:34,879 --> 00:34:39,199
is watching in real time and identifies

1014
00:34:37,679 --> 00:34:42,639
objects that will be targeted for

1015
00:34:39,199 --> 00:34:44,638
overlay of high resolution videos

1016
00:34:42,639 --> 00:34:47,040
it then generates high resolution 3d

1017
00:34:44,639 --> 00:34:49,040
images of historical scenes

1018
00:34:47,040 --> 00:34:51,279
related to the perspective of the

1019
00:34:49,040 --> 00:34:52,960
tourist in real time

1020
00:34:51,280 --> 00:34:54,399
these generated video images are then

1021
00:34:52,960 --> 00:34:56,399
overlaid on the view

1022
00:34:54,399 --> 00:34:58,160
of the real world as seen by the

1023
00:34:56,399 --> 00:34:59,920
tourists

1024
00:34:58,160 --> 00:35:02,078
in order to achieve hard timing

1025
00:34:59,920 --> 00:35:04,880
constraints of a few milli

1026
00:35:02,079 --> 00:35:08,800
seconds computationally intensive tasks

1027
00:35:04,880 --> 00:35:08,800
can be offloaded to edge devices

1028
00:35:09,599 --> 00:35:12,640
the edge device providing the

1029
00:35:10,960 --> 00:35:15,839
computation and storage

1030
00:35:12,640 --> 00:35:17,520
is itself limited in such resources

1031
00:35:15,839 --> 00:35:19,839
compared to the cloud

1032
00:35:17,520 --> 00:35:21,200
and can be overwhelmed by a sudden surge

1033
00:35:19,839 --> 00:35:23,520
in demand

1034
00:35:21,200 --> 00:35:26,000
additionally the throughput to the user

1035
00:35:23,520 --> 00:35:29,040
over the wireless link will suffer

1036
00:35:26,000 --> 00:35:31,359
the user will perceive a fall in qoe

1037
00:35:29,040 --> 00:35:32,640
of the video being rendered on her ar

1038
00:35:31,359 --> 00:35:35,040
device

1039
00:35:32,640 --> 00:35:36,799
in such a scenario the client ar

1040
00:35:35,040 --> 00:35:39,680
applications will need to use

1041
00:35:36,800 --> 00:35:40,400
adaptive bitrate algorithms that choose

1042
00:35:39,680 --> 00:35:43,440
bit rate

1043
00:35:40,400 --> 00:35:44,000
policies tailored in a fine-grained

1044
00:35:43,440 --> 00:35:46,640
manner

1045
00:35:44,000 --> 00:35:48,079
to the resource demands and playback the

1046
00:35:46,640 --> 00:35:52,799
videos with appropriate

1047
00:35:48,079 --> 00:35:52,800
qoe metrics as the user moves around

1048
00:35:56,839 --> 00:35:59,839
with

1049
00:36:11,040 --> 00:36:13,839
run on

1050
00:36:18,320 --> 00:36:22,560
yeah i can't i can't hear his audio

1051
00:36:24,960 --> 00:36:32,079
try reconnecting your audio the uh

1052
00:36:28,720 --> 00:36:34,399
the little recycle icon in the lower

1053
00:36:32,079 --> 00:36:34,400
right

1054
00:36:36,320 --> 00:36:41,200
can you hear me now yes you're a little

1055
00:36:39,280 --> 00:36:44,400
quiet

1056
00:36:41,200 --> 00:36:47,839
um okay i'll try and speak up

1057
00:36:44,400 --> 00:36:50,320
yeah no it sounds fine now okay okay uh

1058
00:36:47,839 --> 00:36:50,320
so should i

1059
00:36:51,040 --> 00:36:54,560
we we got right to the end of the slide

1060
00:36:53,040 --> 00:36:55,279
and then your audio cut out i thought

1061
00:36:54,560 --> 00:36:57,599
you were

1062
00:36:55,280 --> 00:36:58,960
doing some sort of like pregnant pause

1063
00:36:57,599 --> 00:37:02,560
kind of thing

1064
00:36:58,960 --> 00:37:06,240
uh sorry about that okay

1065
00:37:02,560 --> 00:37:08,400
yeah so um let me go through the last

1066
00:37:06,240 --> 00:37:12,319
part of the slide

1067
00:37:08,400 --> 00:37:14,640
so in a scenario as uh

1068
00:37:12,320 --> 00:37:16,800
shown in the previous slides the client

1069
00:37:14,640 --> 00:37:19,680
ar application will need to use

1070
00:37:16,800 --> 00:37:21,280
adaptive bitrate algorithms that choose

1071
00:37:19,680 --> 00:37:22,960
bit rate policies

1072
00:37:21,280 --> 00:37:24,320
tailored in a fine-grained manner to the

1073
00:37:22,960 --> 00:37:26,880
resource demands

1074
00:37:24,320 --> 00:37:28,400
and playback the videos with appropriate

1075
00:37:26,880 --> 00:37:30,240
qoe metrics

1076
00:37:28,400 --> 00:37:31,680
as the user moves around with a group of

1077
00:37:30,240 --> 00:37:34,078
tourists

1078
00:37:31,680 --> 00:37:36,240
so let's take a look at the requirements

1079
00:37:34,079 --> 00:37:40,160
imposed on abr algorithms

1080
00:37:36,240 --> 00:37:40,160
by the use case next slide please

1081
00:37:42,880 --> 00:37:46,880
so the first requirement is offloading

1082
00:37:44,640 --> 00:37:49,759
computationally intensive tasks

1083
00:37:46,880 --> 00:37:51,839
to the edge offloading to the remote

1084
00:37:49,760 --> 00:37:53,760
cloud is not feasible for applications

1085
00:37:51,839 --> 00:37:55,920
where they are characteristics

1086
00:37:53,760 --> 00:37:58,560
as the end-to-end delays must be within

1087
00:37:55,920 --> 00:38:00,480
the order of a few milliseconds

1088
00:37:58,560 --> 00:38:01,759
in order to achieve such hard timing

1089
00:38:00,480 --> 00:38:04,560
constraints

1090
00:38:01,760 --> 00:38:06,640
computationally intensive tasks can be

1091
00:38:04,560 --> 00:38:08,400
offloaded to edge devices so this is

1092
00:38:06,640 --> 00:38:11,440
essentially making best of the

1093
00:38:08,400 --> 00:38:12,000
best effort service of the internet the

1094
00:38:11,440 --> 00:38:15,200
second

1095
00:38:12,000 --> 00:38:16,800
requirement is uh using aiml based

1096
00:38:15,200 --> 00:38:20,160
mitigation techniques

1097
00:38:16,800 --> 00:38:20,720
to select appropriate bit rates learning

1098
00:38:20,160 --> 00:38:24,399
models

1099
00:38:20,720 --> 00:38:26,560
developed in c2 rather than simulations

1100
00:38:24,400 --> 00:38:29,119
are more accurate in their adaptation

1101
00:38:26,560 --> 00:38:29,119
decisions

1102
00:38:29,440 --> 00:38:32,960
next is dynamically changing abr

1103
00:38:31,440 --> 00:38:34,800
parameters

1104
00:38:32,960 --> 00:38:36,880
the ebr algorithm must be able to

1105
00:38:34,800 --> 00:38:38,800
dynamically change parameters

1106
00:38:36,880 --> 00:38:40,480
given the heavy tail nature of network

1107
00:38:38,800 --> 00:38:43,040
throughput

1108
00:38:40,480 --> 00:38:45,200
in such distributions law of large

1109
00:38:43,040 --> 00:38:47,040
numbers works too slowly

1110
00:38:45,200 --> 00:38:48,399
the mean of sample does not equal the

1111
00:38:47,040 --> 00:38:50,560
mean distribution

1112
00:38:48,400 --> 00:38:51,760
and as a result standard deviation and

1113
00:38:50,560 --> 00:38:54,320
variance

1114
00:38:51,760 --> 00:38:57,440
are unsuitable as metrics for such

1115
00:38:54,320 --> 00:38:57,440
operational parameters

1116
00:38:57,520 --> 00:39:00,720
fourthly handling conflicting qa

1117
00:38:59,280 --> 00:39:03,440
requirements

1118
00:39:00,720 --> 00:39:05,919
qoe goals often require high bit rates

1119
00:39:03,440 --> 00:39:08,320
and low frequency of buffer refills

1120
00:39:05,920 --> 00:39:09,119
however in practice this can lead to a

1121
00:39:08,320 --> 00:39:11,839
conflict

1122
00:39:09,119 --> 00:39:13,680
between those goals for example

1123
00:39:11,839 --> 00:39:15,200
increasing the bit rate might result in

1124
00:39:13,680 --> 00:39:16,078
the need to fill up the buffer more

1125
00:39:15,200 --> 00:39:18,319
frequently

1126
00:39:16,079 --> 00:39:20,720
as the buffer capacity might be limited

1127
00:39:18,320 --> 00:39:22,880
on the ar device

1128
00:39:20,720 --> 00:39:24,319
algorithm must be able to handle the

1129
00:39:22,880 --> 00:39:26,000
situation

1130
00:39:24,320 --> 00:39:27,599
finally handling the side effects of

1131
00:39:26,000 --> 00:39:30,320
deciding a specific

1132
00:39:27,599 --> 00:39:32,160
bit rate for example selecting a bit

1133
00:39:30,320 --> 00:39:34,800
rate of a particular

1134
00:39:32,160 --> 00:39:35,680
value might result in the avr algorithm

1135
00:39:34,800 --> 00:39:37,839
not

1136
00:39:35,680 --> 00:39:40,078
changing to a different rate so as to

1137
00:39:37,839 --> 00:39:42,400
ensure a non-fluctuating bit rate

1138
00:39:40,079 --> 00:39:43,359
and the resultant smoothness of video

1139
00:39:42,400 --> 00:39:45,359
quality

1140
00:39:43,359 --> 00:39:46,560
the ibr algorithm must be able to handle

1141
00:39:45,359 --> 00:39:49,359
the situation

1142
00:39:46,560 --> 00:39:49,359
next slide please

1143
00:39:50,800 --> 00:39:55,119
so as a conclusion i would like to point

1144
00:39:53,200 --> 00:39:57,200
out these two references

1145
00:39:55,119 --> 00:39:58,400
the first reference is an outcome of a

1146
00:39:57,200 --> 00:40:02,240
project that streamed

1147
00:39:58,400 --> 00:40:04,880
over 38 years of data with over 63

1148
00:40:02,240 --> 00:40:06,160
000 distinct users and compare the

1149
00:40:04,880 --> 00:40:08,839
performance of

1150
00:40:06,160 --> 00:40:10,000
several abr algorithms listed in the

1151
00:40:08,839 --> 00:40:11,680
slide

1152
00:40:10,000 --> 00:40:14,960
the second reference documents the

1153
00:40:11,680 --> 00:40:17,359
problems with current abr algorithms

1154
00:40:14,960 --> 00:40:18,400
thank you for your time and questions

1155
00:40:17,359 --> 00:40:21,440
suggestions

1156
00:40:18,400 --> 00:40:21,440
feedback are welcome

1157
00:40:23,440 --> 00:40:29,200
all right any uh oh we've uh got two

1158
00:40:26,880 --> 00:40:33,200
people in the queue

1159
00:40:29,200 --> 00:40:36,480
well we've got one in the queue

1160
00:40:33,200 --> 00:40:36,480
uh colin go ahead

1161
00:40:37,520 --> 00:40:40,800
i'm not sure that i have any uh any any

1162
00:40:40,000 --> 00:40:44,160
tool to

1163
00:40:40,800 --> 00:40:47,839
recognize you other than just announcing

1164
00:40:44,160 --> 00:40:47,839
uh you have to turn your audio on you're

1165
00:40:50,839 --> 00:40:53,839
muted

1166
00:40:58,400 --> 00:41:02,400
still needed yeah colin you're you're

1167
00:41:00,960 --> 00:41:03,280
still muted i think you need i think

1168
00:41:02,400 --> 00:41:04,880
with the new

1169
00:41:03,280 --> 00:41:07,839
uh meat echo interface you need to

1170
00:41:04,880 --> 00:41:07,839
unmute yourself

1171
00:41:09,680 --> 00:41:14,000
it's the right most icon right

1172
00:41:11,119 --> 00:41:14,000
underneath your name

1173
00:41:19,440 --> 00:41:22,400
still can't hear you

1174
00:41:23,200 --> 00:41:31,279
try reconnecting your audio the

1175
00:41:27,040 --> 00:41:31,279
recycle icon in the lower right of the

1176
00:41:32,839 --> 00:41:35,839
window

1177
00:41:47,359 --> 00:41:50,960
okay let's see if this is working now we

1178
00:41:49,440 --> 00:41:54,000
can hear you now we can hear you

1179
00:41:50,960 --> 00:41:55,119
okay um

1180
00:41:54,000 --> 00:41:57,520
so i i had a question about the

1181
00:41:55,119 --> 00:41:59,359
requirements um i've i've

1182
00:41:57,520 --> 00:42:01,119
heard in i mean this this few

1183
00:41:59,359 --> 00:42:02,799
millisecond requirements i see it it

1184
00:42:01,119 --> 00:42:05,839
quoted regularly

1185
00:42:02,800 --> 00:42:07,680
but i do work a lot with these devices

1186
00:42:05,839 --> 00:42:09,440
and i'm i don't understand where that

1187
00:42:07,680 --> 00:42:10,640
comes from could you could you walk me

1188
00:42:09,440 --> 00:42:12,880
through that a little bit more

1189
00:42:10,640 --> 00:42:14,319
i mean i understand why when you rotate

1190
00:42:12,880 --> 00:42:17,200
your head you need to update your

1191
00:42:14,319 --> 00:42:20,800
display at probably over 150 hertz

1192
00:42:17,200 --> 00:42:22,078
but i don't understand why that means

1193
00:42:20,800 --> 00:42:25,839
the video flow

1194
00:42:22,079 --> 00:42:27,520
needs to be that rapid um

1195
00:42:25,839 --> 00:42:29,200
can you walk me through that requirement

1196
00:42:27,520 --> 00:42:32,800
yeah no that's a very good

1197
00:42:29,200 --> 00:42:36,078
question and uh i actually agree with

1198
00:42:32,800 --> 00:42:38,000
your observation that the devices

1199
00:42:36,079 --> 00:42:41,599
themselves

1200
00:42:38,000 --> 00:42:44,319
are quite fast these days the problem is

1201
00:42:41,599 --> 00:42:44,640
actually the the fact that you have to

1202
00:42:44,319 --> 00:42:48,560
do

1203
00:42:44,640 --> 00:42:51,279
a lot of uh processing in these devices

1204
00:42:48,560 --> 00:42:52,319
to overlay uh the scene that the viewer

1205
00:42:51,280 --> 00:42:55,760
is viewing

1206
00:42:52,319 --> 00:42:56,560
with uh something like we are envisaging

1207
00:42:55,760 --> 00:42:59,760
a

1208
00:42:56,560 --> 00:43:00,960
historical figure for example and to

1209
00:42:59,760 --> 00:43:04,400
synchronize that

1210
00:43:00,960 --> 00:43:08,000
with the view of the observer

1211
00:43:04,400 --> 00:43:08,640
is uh quite challenging and at the same

1212
00:43:08,000 --> 00:43:11,200
time

1213
00:43:08,640 --> 00:43:12,640
doing the slam computation like i when

1214
00:43:11,200 --> 00:43:13,919
you i don't understand like that's i

1215
00:43:12,640 --> 00:43:15,520
want to dig a little bit more detail

1216
00:43:13,920 --> 00:43:17,359
into that but what is computationally

1217
00:43:15,520 --> 00:43:19,280
intensive these devices are doing is

1218
00:43:17,359 --> 00:43:21,119
mapping their location in the real world

1219
00:43:19,280 --> 00:43:23,839
or rendering the video

1220
00:43:21,119 --> 00:43:25,119
yes so both so they're uh mapping the

1221
00:43:23,839 --> 00:43:28,560
location of

1222
00:43:25,119 --> 00:43:30,160
uh the objects and identifying the

1223
00:43:28,560 --> 00:43:33,200
objects in the real world

1224
00:43:30,160 --> 00:43:36,720
and at the same time they are trying to

1225
00:43:33,200 --> 00:43:38,000
overlay uh an object onto that image in

1226
00:43:36,720 --> 00:43:41,040
the real world

1227
00:43:38,000 --> 00:43:42,480
uh in a manner that looks natural to the

1228
00:43:41,040 --> 00:43:45,920
user

1229
00:43:42,480 --> 00:43:47,680
sure so even devices

1230
00:43:45,920 --> 00:43:49,440
every single device on market does that

1231
00:43:47,680 --> 00:43:51,279
quite well not necessarily the

1232
00:43:49,440 --> 00:43:52,960
recognizing all the objects but the

1233
00:43:51,280 --> 00:43:54,800
recognizing the object certainly doesn't

1234
00:43:52,960 --> 00:43:58,160
need to be done in low mil

1235
00:43:54,800 --> 00:44:00,000
in a few milliseconds only the the

1236
00:43:58,160 --> 00:44:01,118
computation of the slam algorithm to

1237
00:44:00,000 --> 00:44:02,560
figure out the orientation of the

1238
00:44:01,119 --> 00:44:05,599
headset which every headset on the

1239
00:44:02,560 --> 00:44:05,599
market today already does

1240
00:44:07,520 --> 00:44:14,400
yeah so no absolutely uh i think

1241
00:44:10,960 --> 00:44:15,280
uh the the problem that we in visage is

1242
00:44:14,400 --> 00:44:18,160
that

1243
00:44:15,280 --> 00:44:20,640
uh when you have a lot of users all

1244
00:44:18,160 --> 00:44:21,598
simultaneously looking at a particular

1245
00:44:20,640 --> 00:44:23,839
scene

1246
00:44:21,599 --> 00:44:24,880
and you have to do that sort of uh

1247
00:44:23,839 --> 00:44:28,480
processing

1248
00:44:24,880 --> 00:44:29,680
uh in real time uh there is a problem

1249
00:44:28,480 --> 00:44:33,359
there because

1250
00:44:29,680 --> 00:44:34,799
uh there is sometimes a a requirement

1251
00:44:33,359 --> 00:44:38,480
for a huge

1252
00:44:34,800 --> 00:44:40,960
computational resource near the arvr uh

1253
00:44:38,480 --> 00:44:42,240
headset to be able to process that kind

1254
00:44:40,960 --> 00:44:44,160
of thing

1255
00:44:42,240 --> 00:44:45,598
whereas what we are moving and basically

1256
00:44:44,160 --> 00:44:46,799
i mean that's that's why i keep

1257
00:44:45,599 --> 00:44:48,160
i keep hearing about this i'm not sure

1258
00:44:46,800 --> 00:44:49,680
i'm not sure what it's computing that's

1259
00:44:48,160 --> 00:44:52,640
the thing i'm never sure what that

1260
00:44:49,680 --> 00:44:53,440
that edge resource is actually computing

1261
00:44:52,640 --> 00:44:56,480
yeah

1262
00:44:53,440 --> 00:44:58,400
um so uh

1263
00:44:56,480 --> 00:44:59,920
the first thing that they are computing

1264
00:44:58,400 --> 00:45:04,160
is essentially the

1265
00:44:59,920 --> 00:45:06,880
uh the perspective of the user

1266
00:45:04,160 --> 00:45:08,160
and uh what are the objects that the

1267
00:45:06,880 --> 00:45:09,520
user are seeing so there is a

1268
00:45:08,160 --> 00:45:12,560
computation that

1269
00:45:09,520 --> 00:45:14,800
needs to be done to recognize the

1270
00:45:12,560 --> 00:45:17,599
objects once you have recognized the

1271
00:45:14,800 --> 00:45:20,560
objects you need to be able to

1272
00:45:17,599 --> 00:45:21,280
render a particular object that you need

1273
00:45:20,560 --> 00:45:23,520
to

1274
00:45:21,280 --> 00:45:26,240
you need a view or to see overlaid on

1275
00:45:23,520 --> 00:45:28,319
the scene so that's a lot of computation

1276
00:45:26,240 --> 00:45:29,839
and often as a result of just this these

1277
00:45:28,319 --> 00:45:35,279
two bits of computation

1278
00:45:29,839 --> 00:45:37,599
the headset tends to start getting hot

1279
00:45:35,280 --> 00:45:38,400
it might be draining on the energy

1280
00:45:37,599 --> 00:45:41,200
resources

1281
00:45:38,400 --> 00:45:41,200
etc

1282
00:45:44,839 --> 00:45:47,839
okay

1283
00:45:48,720 --> 00:45:52,399
thanks thanks for helping me understand

1284
00:45:51,520 --> 00:45:55,599
all right thanks

1285
00:45:52,400 --> 00:45:55,599
and uh jake

1286
00:45:56,000 --> 00:46:01,119
hi ryan thanks thanks for this um it was

1287
00:45:59,280 --> 00:46:04,880
an interesting document i'm curious

1288
00:46:01,119 --> 00:46:08,400
is uh are the sort of requirements

1289
00:46:04,880 --> 00:46:11,520
uh described these are based on a

1290
00:46:08,400 --> 00:46:14,560
uh a particular set of systems like

1291
00:46:11,520 --> 00:46:16,640
is it defined whether you're using a

1292
00:46:14,560 --> 00:46:18,640
point cloud for the overlay of the ar

1293
00:46:16,640 --> 00:46:19,440
objects or whether you're trying to

1294
00:46:18,640 --> 00:46:22,720
render

1295
00:46:19,440 --> 00:46:26,319
a video from a point of view

1296
00:46:22,720 --> 00:46:28,720
that's part of this or are these like

1297
00:46:26,319 --> 00:46:30,000
two possible implementations of the same

1298
00:46:28,720 --> 00:46:32,319
uh

1299
00:46:30,000 --> 00:46:33,359
of the same you know kind of user

1300
00:46:32,319 --> 00:46:36,000
visible feature

1301
00:46:33,359 --> 00:46:38,000
or and and are the requirements

1302
00:46:36,000 --> 00:46:40,720
different between them or

1303
00:46:38,000 --> 00:46:40,720
what exactly

1304
00:46:41,119 --> 00:46:45,040
yeah thanks jake for that question um at

1305
00:46:43,680 --> 00:46:48,078
the moment we are looking

1306
00:46:45,040 --> 00:46:50,240
um at uh at the

1307
00:46:48,079 --> 00:46:51,920
general set of problems so both of those

1308
00:46:50,240 --> 00:46:55,359
implementations

1309
00:46:51,920 --> 00:46:58,960
uh are included in

1310
00:46:55,359 --> 00:47:00,240
our set of requirements but as we go

1311
00:46:58,960 --> 00:47:03,520
down deeper down

1312
00:47:00,240 --> 00:47:05,439
let's say picking one technique over the

1313
00:47:03,520 --> 00:47:08,240
other

1314
00:47:05,440 --> 00:47:09,520
we we will have more specific

1315
00:47:08,240 --> 00:47:10,000
requirements but this document was

1316
00:47:09,520 --> 00:47:11,839
essentially

1317
00:47:10,000 --> 00:47:13,280
looking at the big picture where you

1318
00:47:11,839 --> 00:47:16,640
didn't really

1319
00:47:13,280 --> 00:47:18,880
uh go into very deep specifics of

1320
00:47:16,640 --> 00:47:19,839
of what particular algorithm or what

1321
00:47:18,880 --> 00:47:21,359
particular

1322
00:47:19,839 --> 00:47:23,279
technique we are using but definitely

1323
00:47:21,359 --> 00:47:26,720
point cloud

1324
00:47:23,280 --> 00:47:30,240
viewport adaptation all those things are

1325
00:47:26,720 --> 00:47:32,799
are at least at the moment part of the

1326
00:47:30,240 --> 00:47:34,799
requirement but as you go down that

1327
00:47:32,800 --> 00:47:37,280
particular branch of

1328
00:47:34,800 --> 00:47:38,720
technique you will need some specific

1329
00:47:37,280 --> 00:47:41,920
requirements for those as well

1330
00:47:38,720 --> 00:47:44,558
yeah okay thanks and then i guess uh

1331
00:47:41,920 --> 00:47:45,920
i'm not clear on whether you're aiming

1332
00:47:44,559 --> 00:47:49,599
for adoption

1333
00:47:45,920 --> 00:47:52,720
on this doc or uh

1334
00:47:49,599 --> 00:47:53,359
and if so like is it you're looking for

1335
00:47:52,720 --> 00:47:56,959
that now

1336
00:47:53,359 --> 00:47:59,040
or like maybe next time or

1337
00:47:56,960 --> 00:48:01,440
i don't know like that's the ask here

1338
00:47:59,040 --> 00:48:04,640
yeah so

1339
00:48:01,440 --> 00:48:07,599
yeah so we and and without your draft

1340
00:48:04,640 --> 00:48:09,440
uh as being a route to a taxonomical

1341
00:48:07,599 --> 00:48:11,359
tree of media operations

1342
00:48:09,440 --> 00:48:13,040
and one of the branches out of that

1343
00:48:11,359 --> 00:48:15,680
route is

1344
00:48:13,040 --> 00:48:16,960
abr algorithms whose sub branches are

1345
00:48:15,680 --> 00:48:20,078
use case

1346
00:48:16,960 --> 00:48:22,079
so uh definitely we'd like uh to have

1347
00:48:20,079 --> 00:48:24,319
feedback from the working group

1348
00:48:22,079 --> 00:48:25,440
uh and i think this is a very good

1349
00:48:24,319 --> 00:48:27,279
opportunity to

1350
00:48:25,440 --> 00:48:28,960
to this question answer session is very

1351
00:48:27,280 --> 00:48:32,480
good opportunity to look at

1352
00:48:28,960 --> 00:48:35,680
various directions that staff could

1353
00:48:32,480 --> 00:48:39,040
go to and uh definitely

1354
00:48:35,680 --> 00:48:42,000
look for an adaptation at some point

1355
00:48:39,040 --> 00:48:42,000
all right great thank you

1356
00:48:44,160 --> 00:48:49,839
and uh spencer

1357
00:48:53,599 --> 00:49:03,839
if you're speaking we cannot hear you

1358
00:49:04,400 --> 00:49:06,720
um

1359
00:49:07,440 --> 00:49:13,760
okay uh interesting sorry

1360
00:49:10,720 --> 00:49:15,598
um yeah so uh from

1361
00:49:13,760 --> 00:49:16,800
from operations recommendations

1362
00:49:15,599 --> 00:49:20,079
perspective

1363
00:49:16,800 --> 00:49:21,839
are you uh seeing the recommendations

1364
00:49:20,079 --> 00:49:24,240
that you're

1365
00:49:21,839 --> 00:49:25,040
going to be headed towards to be more

1366
00:49:24,240 --> 00:49:27,439
about

1367
00:49:25,040 --> 00:49:28,880
the communications aspects of this or

1368
00:49:27,440 --> 00:49:32,319
more about

1369
00:49:28,880 --> 00:49:32,800
uh more about the uh like provisioning

1370
00:49:32,319 --> 00:49:37,279
and

1371
00:49:32,800 --> 00:49:40,960
of uh edge computing and computation

1372
00:49:37,280 --> 00:49:44,400
uh fantastic question spencer uh so

1373
00:49:40,960 --> 00:49:49,040
this particular document is looking at

1374
00:49:44,400 --> 00:49:52,640
specifically uh the adaptation aspects

1375
00:49:49,040 --> 00:49:55,680
of abr algorithms and

1376
00:49:52,640 --> 00:49:57,279
of course the one of the inputs to such

1377
00:49:55,680 --> 00:50:00,160
algorithms is things like

1378
00:49:57,280 --> 00:50:01,520
uh network throughput and uh buffer

1379
00:50:00,160 --> 00:50:04,319
latency

1380
00:50:01,520 --> 00:50:05,759
um so this this document is very narrow

1381
00:50:04,319 --> 00:50:09,359
in that respect in the sense that

1382
00:50:05,760 --> 00:50:12,400
it merely looks at those uh

1383
00:50:09,359 --> 00:50:15,920
inputs to adaptation decisions

1384
00:50:12,400 --> 00:50:18,640
but if the working group

1385
00:50:15,920 --> 00:50:20,480
decides that we also need to look into

1386
00:50:18,640 --> 00:50:21,279
some communication aspects i know and i

1387
00:50:20,480 --> 00:50:23,520
know that

1388
00:50:21,280 --> 00:50:25,119
there is this issue of not stepping on

1389
00:50:23,520 --> 00:50:27,759
the toes of other groups

1390
00:50:25,119 --> 00:50:30,000
then definitely we could have uh at the

1391
00:50:27,760 --> 00:50:30,720
very least certain pointers to what kind

1392
00:50:30,000 --> 00:50:34,000
of

1393
00:50:30,720 --> 00:50:37,598
uh communication protocols uh

1394
00:50:34,000 --> 00:50:38,640
need to be adapted for this uh rtp or

1395
00:50:37,599 --> 00:50:42,640
udp

1396
00:50:38,640 --> 00:50:42,640
maybe srt i don't know

1397
00:50:43,520 --> 00:50:50,480
great thank you and uh i am uh

1398
00:50:47,040 --> 00:50:54,079
admiring very much the cats that

1399
00:50:50,480 --> 00:50:57,520
leslie and kyle have and i apologize

1400
00:50:54,079 --> 00:51:01,520
because my cats are asleep in bed

1401
00:50:57,520 --> 00:51:03,759
because they're lazy i have a great itf

1402
00:51:01,520 --> 00:51:08,079
this one would prefer to be asleep right

1403
00:51:03,760 --> 00:51:10,079
now i'm pretty sure

1404
00:51:08,079 --> 00:51:12,079
and and mine just discovered me and

1405
00:51:10,079 --> 00:51:13,760
would have started howling so this is

1406
00:51:12,079 --> 00:51:15,520
the this is the fastest way to make sure

1407
00:51:13,760 --> 00:51:19,040
he doesn't howl

1408
00:51:15,520 --> 00:51:22,800
anyway uh so uh

1409
00:51:19,040 --> 00:51:26,079
next in the queue is shui i'm sorry if i

1410
00:51:22,800 --> 00:51:26,640
butchered your name correct this is

1411
00:51:26,079 --> 00:51:30,559
straight

1412
00:51:26,640 --> 00:51:33,279
can you hear me please thanks for the

1413
00:51:30,559 --> 00:51:33,280
documentation

1414
00:51:34,240 --> 00:51:37,839
sorry it's my cleaner uh i'm just

1415
00:51:36,079 --> 00:51:41,040
looking at the the the

1416
00:51:37,839 --> 00:51:41,920
ebr parameters the algorithm would that

1417
00:51:41,040 --> 00:51:44,400
be specific

1418
00:51:41,920 --> 00:51:45,200
to ar i'm trying to understand the

1419
00:51:44,400 --> 00:51:48,880
algorithm

1420
00:51:45,200 --> 00:51:51,759
difference for a or vr or 360 videos

1421
00:51:48,880 --> 00:51:52,640
can you be more specific on that uh

1422
00:51:51,760 --> 00:51:56,800
excellent question

1423
00:51:52,640 --> 00:51:57,520
so um with with applications such as ar

1424
00:51:56,800 --> 00:52:01,040
and vr

1425
00:51:57,520 --> 00:52:04,400
the problem is uh that

1426
00:52:01,040 --> 00:52:05,680
the the various parameters that such

1427
00:52:04,400 --> 00:52:07,760
algorithms take

1428
00:52:05,680 --> 00:52:09,520
uh most importantly network throughput

1429
00:52:07,760 --> 00:52:12,640
and uh

1430
00:52:09,520 --> 00:52:13,680
the size of the buffer they change very

1431
00:52:12,640 --> 00:52:16,960
rapidly

1432
00:52:13,680 --> 00:52:19,839
in uh such use cases as the user is uh

1433
00:52:16,960 --> 00:52:20,640
moving around and often this is uh

1434
00:52:19,839 --> 00:52:24,160
referred to as

1435
00:52:20,640 --> 00:52:26,319
volatility of uh the conditions so

1436
00:52:24,160 --> 00:52:27,598
associations between various logical

1437
00:52:26,319 --> 00:52:28,960
associations between the software

1438
00:52:27,599 --> 00:52:32,160
components

1439
00:52:28,960 --> 00:52:35,359
break up and then form again

1440
00:52:32,160 --> 00:52:38,879
so uh so the the problem is

1441
00:52:35,359 --> 00:52:42,240
specific to ar and vr use case in that

1442
00:52:38,880 --> 00:52:45,359
there is a very uh rapid change in

1443
00:52:42,240 --> 00:52:48,799
these parameters and so

1444
00:52:45,359 --> 00:52:51,598
uh the input to the abr algorithm is

1445
00:52:48,800 --> 00:52:52,880
uh it is changing very rapidly because

1446
00:52:51,599 --> 00:52:53,760
these parameters are changing very

1447
00:52:52,880 --> 00:52:56,880
rapidly

1448
00:52:53,760 --> 00:52:59,520
and the ebr algorithm needs to adapt

1449
00:52:56,880 --> 00:53:01,760
according so as opposed to the

1450
00:52:59,520 --> 00:53:04,240
traditional scenarios where the

1451
00:53:01,760 --> 00:53:04,800
the the parameters are changing but not

1452
00:53:04,240 --> 00:53:15,839
as

1453
00:53:04,800 --> 00:53:15,839
fast as uh in an ar vr scenario

1454
00:53:20,960 --> 00:53:27,760
all right any uh any further

1455
00:53:24,480 --> 00:53:31,599
questions anyone else going once

1456
00:53:27,760 --> 00:53:33,920
going twice looks like the queue is

1457
00:53:31,599 --> 00:53:33,920
empty

1458
00:53:35,200 --> 00:53:38,640
um i think there is some question here

1459
00:53:37,520 --> 00:53:40,319
about uh

1460
00:53:38,640 --> 00:53:42,000
where from here either with this

1461
00:53:40,319 --> 00:53:43,359
document or how can we help this

1462
00:53:42,000 --> 00:53:45,599
document

1463
00:53:43,359 --> 00:53:47,119
work progress suggestions for other

1464
00:53:45,599 --> 00:53:48,800
parts of the ietf that

1465
00:53:47,119 --> 00:53:51,920
should take it on or whether there's a

1466
00:53:48,800 --> 00:53:51,920
future discussion here

1467
00:53:52,800 --> 00:53:56,960
so renan would would you like to share

1468
00:53:55,440 --> 00:53:58,640
your thoughts on what you were

1469
00:53:56,960 --> 00:54:02,079
particularly looking for other than

1470
00:53:58,640 --> 00:54:06,799
immediately getting some feedback

1471
00:54:02,079 --> 00:54:09,760
um yeah so we definitely look for

1472
00:54:06,800 --> 00:54:10,880
an adaptation by the working group if

1473
00:54:09,760 --> 00:54:14,000
everyone agrees

1474
00:54:10,880 --> 00:54:16,400
at some point um and

1475
00:54:14,000 --> 00:54:17,359
uh and towards that goal we are we are

1476
00:54:16,400 --> 00:54:19,520
looking for

1477
00:54:17,359 --> 00:54:21,279
the kind of discussion we've just had

1478
00:54:19,520 --> 00:54:23,839
and uh adding

1479
00:54:21,280 --> 00:54:25,040
that stuff and those things to this

1480
00:54:23,839 --> 00:54:27,200
document

1481
00:54:25,040 --> 00:54:29,279
uh but again this is a question back to

1482
00:54:27,200 --> 00:54:32,720
you as well is this

1483
00:54:29,280 --> 00:54:32,720
is this an appropriate approach

1484
00:54:34,960 --> 00:54:41,440
so i think that um i think that

1485
00:54:38,559 --> 00:54:42,240
that with 40 people here we're probably

1486
00:54:41,440 --> 00:54:45,280
not

1487
00:54:42,240 --> 00:54:46,399
well we aren't quorum so um i think it

1488
00:54:45,280 --> 00:54:48,000
sounds like you've had some good

1489
00:54:46,400 --> 00:54:48,720
feedback and maybe the next step is to

1490
00:54:48,000 --> 00:54:52,079
do a turn

1491
00:54:48,720 --> 00:54:53,040
of the of the draft a new version of the

1492
00:54:52,079 --> 00:54:55,760
draft with

1493
00:54:53,040 --> 00:54:56,558
uh with those updates um and then we can

1494
00:54:55,760 --> 00:54:58,160
take it to the

1495
00:54:56,559 --> 00:54:59,680
to the mailing list and see if people

1496
00:54:58,160 --> 00:55:00,799
want to adopt this as

1497
00:54:59,680 --> 00:55:02,399
something to move forward within the

1498
00:55:00,799 --> 00:55:04,000
working group or have other thoughts

1499
00:55:02,400 --> 00:55:07,760
does that make sense

1500
00:55:04,000 --> 00:55:08,160
yeah absolutely and and i i will ask the

1501
00:55:07,760 --> 00:55:09,760
same

1502
00:55:08,160 --> 00:55:11,520
question sort of more generally to other

1503
00:55:09,760 --> 00:55:12,640
people if people think that that sounds

1504
00:55:11,520 --> 00:55:21,839
like a good

1505
00:55:12,640 --> 00:55:21,839
path forward here any objections i guess

1506
00:55:22,000 --> 00:55:25,920
and i am not hearing any objections so

1507
00:55:24,000 --> 00:55:30,559
let's do that

1508
00:55:25,920 --> 00:55:30,559
great oh oh spencer you're in cue

1509
00:55:33,280 --> 00:55:38,640
i was just asking if uh if it looked

1510
00:55:35,839 --> 00:55:41,759
like that you were going to

1511
00:55:38,640 --> 00:55:42,720
be identifying any changes to internet

1512
00:55:41,760 --> 00:55:46,880
protocols

1513
00:55:42,720 --> 00:55:49,520
that are used here um or

1514
00:55:46,880 --> 00:55:50,559
is this is what you're expecting to be

1515
00:55:49,520 --> 00:55:52,720
doing

1516
00:55:50,559 --> 00:55:53,839
mostly in the operations uh

1517
00:55:52,720 --> 00:55:57,118
recommendations

1518
00:55:53,839 --> 00:56:00,319
uh space uh uh

1519
00:55:57,119 --> 00:56:03,760
again a fantastic question so from

1520
00:56:00,319 --> 00:56:07,200
our perspective we would like to do both

1521
00:56:03,760 --> 00:56:08,880
uh the question is that is is mopp's

1522
00:56:07,200 --> 00:56:12,640
working group the appropriate

1523
00:56:08,880 --> 00:56:14,799
working group to do the protocol that

1524
00:56:12,640 --> 00:56:16,240
or is it just that we identify the

1525
00:56:14,799 --> 00:56:19,440
operational issues

1526
00:56:16,240 --> 00:56:22,399
that lead to certain questions that can

1527
00:56:19,440 --> 00:56:26,960
then be taken to other working groups

1528
00:56:22,400 --> 00:56:29,680
so my answer is okay so the latter so

1529
00:56:26,960 --> 00:56:30,000
so i suppose we uh we would have we'd be

1530
00:56:29,680 --> 00:56:32,399
happy

1531
00:56:30,000 --> 00:56:33,839
to to identify operational issues that

1532
00:56:32,400 --> 00:56:37,760
then lead to

1533
00:56:33,839 --> 00:56:41,119
uh certain uh requirements for

1534
00:56:37,760 --> 00:56:42,480
uh communication protocols and and as as

1535
00:56:41,119 --> 00:56:44,160
our internal project definitely we are

1536
00:56:42,480 --> 00:56:47,359
interested in

1537
00:56:44,160 --> 00:56:50,640
the protocol bit as well cool

1538
00:56:47,359 --> 00:56:53,040
thank you so much thank you

1539
00:56:50,640 --> 00:56:54,000
i think i think that that it will work

1540
00:56:53,040 --> 00:56:56,558
well for

1541
00:56:54,000 --> 00:56:58,000
this collection people to help um work

1542
00:56:56,559 --> 00:57:02,480
through the operational aspects

1543
00:56:58,000 --> 00:57:02,480
and also thereby uh

1544
00:57:02,720 --> 00:57:06,240
bring clarity to the op to the protocol

1545
00:57:04,960 --> 00:57:07,200
questions to take to other working

1546
00:57:06,240 --> 00:57:11,359
groups so

1547
00:57:07,200 --> 00:57:13,118
um it's it the protocol work doesn't get

1548
00:57:11,359 --> 00:57:14,799
done here but we can probably be helpful

1549
00:57:13,119 --> 00:57:16,960
in terms of making sure that the

1550
00:57:14,799 --> 00:57:19,280
questions get get asked in a useful way

1551
00:57:16,960 --> 00:57:20,480
in other groups

1552
00:57:19,280 --> 00:57:22,960
if that makes any kind of sense

1553
00:57:20,480 --> 00:57:26,079
whatsoever

1554
00:57:22,960 --> 00:57:29,440
absolutely absolutely

1555
00:57:26,079 --> 00:57:30,720
great all right looks like the queue is

1556
00:57:29,440 --> 00:57:34,160
empty and

1557
00:57:30,720 --> 00:57:37,598
thank you very much thank you

1558
00:57:34,160 --> 00:57:40,879
thank you so next up is uh

1559
00:57:37,599 --> 00:57:44,559
is victor with the web transport

1560
00:57:40,880 --> 00:57:44,559
slides let me grab those

1561
00:57:50,160 --> 00:57:54,000
see if i were smart i would have had

1562
00:57:51,520 --> 00:57:56,240
them all loaded up

1563
00:57:54,000 --> 00:57:56,240
but

1564
00:58:02,720 --> 00:58:06,319
i'm just presuming that you want me to

1565
00:58:04,480 --> 00:58:09,599
run the slides if you want to share

1566
00:58:06,319 --> 00:58:12,319
victor that's fine with me

1567
00:58:09,599 --> 00:58:12,960
i don't think i have them ready so it's

1568
00:58:12,319 --> 00:58:16,319
probably

1569
00:58:12,960 --> 00:58:18,960
therapy around them okay just give me

1570
00:58:16,319 --> 00:58:18,960
one second

1571
00:58:20,839 --> 00:58:24,480
and

1572
00:58:22,160 --> 00:58:24,480
all right

1573
00:58:25,599 --> 00:58:28,640
uh hello everyone my name is victor

1574
00:58:27,680 --> 00:58:32,240
vasilev

1575
00:58:28,640 --> 00:58:34,319
i work for google and i want to present

1576
00:58:32,240 --> 00:58:36,720
to the moffs working group some

1577
00:58:34,319 --> 00:58:40,400
information about web transport

1578
00:58:36,720 --> 00:58:44,240
uh web transport is a new

1579
00:58:40,400 --> 00:58:45,920
combination of a protocol and an api

1580
00:58:44,240 --> 00:58:49,279
that is currently being jointly

1581
00:58:45,920 --> 00:58:52,720
developed by ietf and w3c

1582
00:58:49,280 --> 00:58:53,359
uh that is uh i'll explain what it is

1583
00:58:52,720 --> 00:58:56,799
but

1584
00:58:53,359 --> 00:59:00,240
next slide so uh

1585
00:58:56,799 --> 00:59:01,040
it the goal of web transport has fills a

1586
00:59:00,240 --> 00:59:04,319
gap where

1587
00:59:01,040 --> 00:59:08,000
web sockets exclusively provide

1588
00:59:04,319 --> 00:59:12,720
reliable order delivery over tcp

1589
00:59:08,000 --> 00:59:15,040
and there is a unreliable or unordered

1590
00:59:12,720 --> 00:59:16,959
way to deliver data called rtc data

1591
00:59:15,040 --> 00:59:19,279
channel but it's designed around

1592
00:59:16,960 --> 00:59:20,400
a peer-to-peer use case and it has a lot

1593
00:59:19,280 --> 00:59:24,400
of rough edges

1594
00:59:20,400 --> 00:59:26,799
next slide so as a solution to that we

1595
00:59:24,400 --> 00:59:29,359
propose a new thing called web transport

1596
00:59:26,799 --> 00:59:31,920
which is essentially

1597
00:59:29,359 --> 00:59:34,480
trying to expose semantics of quick

1598
00:59:31,920 --> 00:59:38,240
connection

1599
00:59:34,480 --> 00:59:40,160
to the web api it is does not let you

1600
00:59:38,240 --> 00:59:44,000
create direct quick connections but

1601
00:59:40,160 --> 00:59:47,040
it gives you similar semantics and

1602
00:59:44,000 --> 00:59:48,000
it is different from websockets in sense

1603
00:59:47,040 --> 00:59:50,319
that websocket

1604
00:59:48,000 --> 00:59:51,440
is message oriented and web transport is

1605
00:59:50,319 --> 00:59:53,920
stream oriented

1606
00:59:51,440 --> 00:59:53,920
next slide

1607
00:59:56,319 --> 01:00:01,279
so we are the target applications

1608
00:59:59,359 --> 01:00:02,799
is anyone who wants something like

1609
01:00:01,280 --> 01:00:05,920
websockets

1610
01:00:02,799 --> 01:00:07,200
but they want something like websockets

1611
01:00:05,920 --> 01:00:09,760
but for udp

1612
01:00:07,200 --> 01:00:11,839
or they want to have multiple streams of

1613
01:00:09,760 --> 01:00:13,280
independent data that they send and they

1614
01:00:11,839 --> 01:00:14,640
want to send it without head-of-line

1615
01:00:13,280 --> 01:00:18,960
blocking

1616
01:00:14,640 --> 01:00:20,160
there are a lot of various use cases we

1617
01:00:18,960 --> 01:00:22,240
have in mind

1618
01:00:20,160 --> 01:00:24,078
the very original one were web

1619
01:00:22,240 --> 01:00:26,078
developers who were working on video

1620
01:00:24,079 --> 01:00:28,079
games on the web and they

1621
01:00:26,079 --> 01:00:29,760
would benefit from sending things like

1622
01:00:28,079 --> 01:00:32,880
user input and game state

1623
01:00:29,760 --> 01:00:35,280
uh updates uh uh over some things that

1624
01:00:32,880 --> 01:00:36,880
would normally be udp like but

1625
01:00:35,280 --> 01:00:38,880
on the web they were stuck with

1626
01:00:36,880 --> 01:00:42,559
websocket because webrtc

1627
01:00:38,880 --> 01:00:45,839
is uh too hard to handle for

1628
01:00:42,559 --> 01:00:48,799
smaller web developers who don't have a

1629
01:00:45,839 --> 01:00:50,799
backing a framework uh there are lots of

1630
01:00:48,799 --> 01:00:53,599
other use cases

1631
01:00:50,799 --> 01:00:55,440
uh we there are people interested in

1632
01:00:53,599 --> 01:00:57,520
using this in live streaming cloud

1633
01:00:55,440 --> 01:00:59,200
gaming chrome desktop anything that

1634
01:00:57,520 --> 01:01:02,319
needs low latency

1635
01:00:59,200 --> 01:01:05,040
uh even even things that do not need

1636
01:01:02,319 --> 01:01:08,480
unreliable cases like web chat to still

1637
01:01:05,040 --> 01:01:11,040
benefit from those next slide

1638
01:01:08,480 --> 01:01:12,960
so web transport and i said it provides

1639
01:01:11,040 --> 01:01:16,480
quick semantics it provides

1640
01:01:12,960 --> 01:01:18,880
streams and datagrams uh streams

1641
01:01:16,480 --> 01:01:19,520
are quick streams they are essentially

1642
01:01:18,880 --> 01:01:22,559
just like

1643
01:01:19,520 --> 01:01:24,400
tcp connections except uh it is very

1644
01:01:22,559 --> 01:01:26,079
cheap to create them and it's very cheap

1645
01:01:24,400 --> 01:01:28,000
to cancel them

1646
01:01:26,079 --> 01:01:30,480
because of the multiplexing and they all

1647
01:01:28,000 --> 01:01:34,240
share congestion control context

1648
01:01:30,480 --> 01:01:35,119
uh and by cancel i mean when you reset a

1649
01:01:34,240 --> 01:01:38,240
quick stream

1650
01:01:35,119 --> 01:01:40,079
uh it is a form of unreliability because

1651
01:01:38,240 --> 01:01:42,479
all of the underlying data is not

1652
01:01:40,079 --> 01:01:44,880
retransmitted even if it gets lost

1653
01:01:42,480 --> 01:01:45,839
uh datagrams are effectively a

1654
01:01:44,880 --> 01:01:49,839
simulation

1655
01:01:45,839 --> 01:01:52,880
of uh udp semantics on top of quick

1656
01:01:49,839 --> 01:01:55,839
they are in our opinion a better

1657
01:01:52,880 --> 01:01:57,280
version of what dtls currently is for

1658
01:01:55,839 --> 01:01:58,880
because you can multiplex it with

1659
01:01:57,280 --> 01:02:01,839
reliable data

1660
01:01:58,880 --> 01:02:01,839
uh next slide

1661
01:02:03,119 --> 01:02:09,200
uh so web transport uh

1662
01:02:06,559 --> 01:02:10,400
we have a lot of design requirements but

1663
01:02:09,200 --> 01:02:13,919
what we require

1664
01:02:10,400 --> 01:02:16,880
of our protocol are we require

1665
01:02:13,920 --> 01:02:18,400
it to use dls we require it to use

1666
01:02:16,880 --> 01:02:20,720
congestion control

1667
01:02:18,400 --> 01:02:22,319
which is important because regular udp

1668
01:02:20,720 --> 01:02:23,038
does not have any form of congestion

1669
01:02:22,319 --> 01:02:24,960
control

1670
01:02:23,039 --> 01:02:26,799
but since we're in the browser we have

1671
01:02:24,960 --> 01:02:29,119
to ensure that

1672
01:02:26,799 --> 01:02:30,559
uh the resulting connection will not

1673
01:02:29,119 --> 01:02:33,119
overload the network

1674
01:02:30,559 --> 01:02:34,000
we require server to be able to know the

1675
01:02:33,119 --> 01:02:36,319
origin of the web

1676
01:02:34,000 --> 01:02:38,799
page which originated the request in

1677
01:02:36,319 --> 01:02:42,400
order to enforce the ors

1678
01:02:38,799 --> 01:02:45,200
we require to have a mechanism to prove

1679
01:02:42,400 --> 01:02:46,319
to prevent cross-protocol attacks i.e

1680
01:02:45,200 --> 01:02:49,520
attacks of

1681
01:02:46,319 --> 01:02:50,799
where your one protocol and then you get

1682
01:02:49,520 --> 01:02:52,720
confused for another

1683
01:02:50,799 --> 01:02:53,839
and this allows you to break security

1684
01:02:52,720 --> 01:02:56,558
boundaries

1685
01:02:53,839 --> 01:02:59,038
uh we require the thing called consent

1686
01:02:56,559 --> 01:03:01,440
to send data which is effectively

1687
01:02:59,039 --> 01:03:02,160
uh the server has to continuously

1688
01:03:01,440 --> 01:03:04,720
indicate

1689
01:03:02,160 --> 01:03:06,240
to the browser that it still wants to

1690
01:03:04,720 --> 01:03:07,439
talk to the client and that's as

1691
01:03:06,240 --> 01:03:10,720
important

1692
01:03:07,440 --> 01:03:12,960
because if you do not uh have that

1693
01:03:10,720 --> 01:03:14,240
it is very easy to use your api for a

1694
01:03:12,960 --> 01:03:17,760
ddos attack

1695
01:03:14,240 --> 01:03:19,839
and we require we provide every web

1696
01:03:17,760 --> 01:03:21,680
transport endpoint has a url and that

1697
01:03:19,839 --> 01:03:24,400
allows it to integrate with a lot of

1698
01:03:21,680 --> 01:03:25,919
web features like content security

1699
01:03:24,400 --> 01:03:29,119
policy etc

1700
01:03:25,920 --> 01:03:29,119
uh next slide

1701
01:03:29,359 --> 01:03:32,558
so why would you use web transport for

1702
01:03:31,599 --> 01:03:35,039
media

1703
01:03:32,559 --> 01:03:36,400
well compared to webrtc there are

1704
01:03:35,039 --> 01:03:40,240
multiple advantages

1705
01:03:36,400 --> 01:03:42,400
one of them is that web transport is

1706
01:03:40,240 --> 01:03:45,439
oriented to client server which is

1707
01:03:42,400 --> 01:03:47,119
a lot of media especially that's not

1708
01:03:45,440 --> 01:03:49,680
video conferencing is

1709
01:03:47,119 --> 01:03:50,240
a client server like any form of live

1710
01:03:49,680 --> 01:03:52,960
streaming

1711
01:03:50,240 --> 01:03:54,160
is essentially uh does not need to use

1712
01:03:52,960 --> 01:03:56,480
ice ever

1713
01:03:54,160 --> 01:03:58,160
and the second is that you can build on

1714
01:03:56,480 --> 01:04:01,520
top of existing infrastructure

1715
01:03:58,160 --> 01:04:04,799
build for quick for instance uh

1716
01:04:01,520 --> 01:04:06,880
google and a lot of others build quick

1717
01:04:04,799 --> 01:04:08,160
libraries because they want to do http

1718
01:04:06,880 --> 01:04:11,119
free

1719
01:04:08,160 --> 01:04:13,920
and that means any improvements that we

1720
01:04:11,119 --> 01:04:17,039
make to our http stack

1721
01:04:13,920 --> 01:04:19,359
uh to our quick stack that for sake of

1722
01:04:17,039 --> 01:04:22,480
improving http can also be used for

1723
01:04:19,359 --> 01:04:25,520
improving any media delivery uh

1724
01:04:22,480 --> 01:04:27,280
this is in contrast to things like rtc

1725
01:04:25,520 --> 01:04:30,720
data channels where

1726
01:04:27,280 --> 01:04:33,200
uh they use http in user space which is

1727
01:04:30,720 --> 01:04:34,319
effectively limited to rtc data channels

1728
01:04:33,200 --> 01:04:36,480
so you do not get

1729
01:04:34,319 --> 01:04:39,279
a lot of code reuse from that the

1730
01:04:36,480 --> 01:04:40,000
advantages over http based approach is

1731
01:04:39,280 --> 01:04:41,680
one of them

1732
01:04:40,000 --> 01:04:44,319
is that protocol is inherently

1733
01:04:41,680 --> 01:04:46,399
bi-directional uh that means

1734
01:04:44,319 --> 01:04:47,440
whenever you want to push a media check

1735
01:04:46,400 --> 01:04:49,280
you do not need to

1736
01:04:47,440 --> 01:04:51,680
send a request and then get that media

1737
01:04:49,280 --> 01:04:55,680
check you can just push it

1738
01:04:51,680 --> 01:04:58,319
and uh simplify things

1739
01:04:55,680 --> 01:04:59,839
and this also means that you can do it

1740
01:04:58,319 --> 01:05:02,319
uh

1741
01:04:59,839 --> 01:05:03,520
the same protocol in both directions so

1742
01:05:02,319 --> 01:05:06,240
for instance

1743
01:05:03,520 --> 01:05:07,200
something like dash or hls can be used

1744
01:05:06,240 --> 01:05:10,240
uh

1745
01:05:07,200 --> 01:05:11,200
to stream video from an http server but

1746
01:05:10,240 --> 01:05:14,160
if you

1747
01:05:11,200 --> 01:05:15,520
try to use it for contributing video you

1748
01:05:14,160 --> 01:05:18,558
have to configure your

1749
01:05:15,520 --> 01:05:22,319
server to which you send video to pull

1750
01:05:18,559 --> 01:05:24,160
uh from your some i don't know

1751
01:05:22,319 --> 01:05:26,000
uh from your professional video

1752
01:05:24,160 --> 01:05:27,118
equipment or from an intermediary

1753
01:05:26,000 --> 01:05:30,640
service and that's

1754
01:05:27,119 --> 01:05:31,359
uh suboptimal uh user experience and of

1755
01:05:30,640 --> 01:05:34,400
course

1756
01:05:31,359 --> 01:05:37,119
it is more extensible because uh

1757
01:05:34,400 --> 01:05:38,720
uh once you remove the strict http

1758
01:05:37,119 --> 01:05:40,720
semantics you can experiment to

1759
01:05:38,720 --> 01:05:43,038
do whatever you want with it uh next

1760
01:05:40,720 --> 01:05:43,038
slide

1761
01:05:43,200 --> 01:05:47,359
so what's the current status of web

1762
01:05:45,200 --> 01:05:49,200
transport is we have a working group

1763
01:05:47,359 --> 01:05:53,200
that's in both

1764
01:05:49,200 --> 01:05:56,399
iatf and w3c uh kyle i think the slides

1765
01:05:53,200 --> 01:05:56,399
went away at less for me

1766
01:06:02,839 --> 01:06:05,839
see

1767
01:06:06,960 --> 01:06:21,280
kyle's back

1768
01:06:19,280 --> 01:06:23,920
yeah so there is a working group and

1769
01:06:21,280 --> 01:06:27,119
both atf and wfc and both are

1770
01:06:23,920 --> 01:06:28,720
actively working uh and we're discussing

1771
01:06:27,119 --> 01:06:29,599
issues and discussing which draft to

1772
01:06:28,720 --> 01:06:31,759
adopt

1773
01:06:29,599 --> 01:06:34,240
there is an implementation of part of

1774
01:06:31,760 --> 01:06:36,079
web transport called quick transport

1775
01:06:34,240 --> 01:06:37,598
it's currently available in chrome as

1776
01:06:36,079 --> 01:06:40,000
origin trial if you

1777
01:06:37,599 --> 01:06:42,160
sign up for origin trial or if you go to

1778
01:06:40,000 --> 01:06:44,240
chrome flags and enable experimental web

1779
01:06:42,160 --> 01:06:46,078
features you could use that

1780
01:06:44,240 --> 01:06:47,759
and we appreciate all feedback and there

1781
01:06:46,079 --> 01:06:50,799
are some links on

1782
01:06:47,760 --> 01:06:52,480
the github repo for api spec and there

1783
01:06:50,799 --> 01:06:55,200
is a

1784
01:06:52,480 --> 01:06:57,680
web.dev article on how to use this api

1785
01:06:55,200 --> 01:06:57,680
next slide

1786
01:06:58,839 --> 01:07:03,520
uh

1787
01:07:00,960 --> 01:07:03,520
next slide

1788
01:07:10,079 --> 01:07:12,880
not hearing you

1789
01:07:13,200 --> 01:07:18,319
and i think kyle needs to recycle his

1790
01:07:18,640 --> 01:07:21,440
i'm not sure if he's

1791
01:07:22,720 --> 01:07:29,839
um even seeing the chat window

1792
01:07:30,000 --> 01:07:33,599
i'm gonna start making hand waving

1793
01:07:31,440 --> 01:07:43,440
motions shortly

1794
01:07:33,599 --> 01:07:47,680
this will be fun

1795
01:07:43,440 --> 01:07:51,359
can fox hear me i can hear you

1796
01:07:47,680 --> 01:07:53,520
okay oh yeah i can i can hear you now i

1797
01:07:51,359 --> 01:07:57,440
had to unmute for some reason

1798
01:07:53,520 --> 01:08:00,640
to get audio started that's weird

1799
01:07:57,440 --> 01:08:02,559
okay anyway yeah the uh in in

1800
01:08:00,640 --> 01:08:04,480
in the middle of your last slide

1801
01:08:02,559 --> 01:08:08,559
basically my

1802
01:08:04,480 --> 01:08:12,510
entire uh uh well

1803
01:08:08,559 --> 01:08:14,480
my entire things happen just blew up

1804
01:08:12,510 --> 01:08:16,880
[Laughter]

1805
01:08:14,480 --> 01:08:16,880
okay

1806
01:08:18,000 --> 01:08:21,359
do i need to go backslide or do i need

1807
01:08:20,000 --> 01:08:23,679
to just repeat the slide

1808
01:08:21,359 --> 01:08:25,759
no i i think starting from the web

1809
01:08:23,679 --> 01:08:29,120
transport status slide again

1810
01:08:25,759 --> 01:08:31,279
um okay would be fine okay

1811
01:08:29,120 --> 01:08:32,158
so web transport status there is a

1812
01:08:31,279 --> 01:08:36,000
working group

1813
01:08:32,158 --> 01:08:39,679
uh it's uh formed in both

1814
01:08:36,000 --> 01:08:40,719
atf and w3c both are actively working on

1815
01:08:39,679 --> 01:08:44,239
things if you file

1816
01:08:40,719 --> 01:08:44,799
issues you will get reply uh there is a

1817
01:08:44,238 --> 01:08:47,278
par

1818
01:08:44,799 --> 01:08:50,080
a partial implementation of proposed web

1819
01:08:47,279 --> 01:08:52,960
transport api in chromium

1820
01:08:50,080 --> 01:08:53,278
if you sign up for origin trial or if

1821
01:08:52,960 --> 01:08:56,319
you

1822
01:08:53,279 --> 01:08:59,520
enable it in chrome flags

1823
01:08:56,319 --> 01:09:02,080
uh you can

1824
01:08:59,520 --> 01:09:02,880
experiment with it we appreciate all

1825
01:09:02,080 --> 01:09:06,000
feedback on

1826
01:09:02,880 --> 01:09:08,480
both on implementation and on the design

1827
01:09:06,000 --> 01:09:11,359
and on the protocol etc there are some

1828
01:09:08,479 --> 01:09:13,919
links below of where you can read more

1829
01:09:11,359 --> 01:09:13,920
next slide

1830
01:09:15,679 --> 01:09:22,480
uh so regarding specific

1831
01:09:19,759 --> 01:09:22,880
standardizing media over web transport

1832
01:09:22,479 --> 01:09:26,000
there

1833
01:09:22,880 --> 01:09:27,759
is no actual current effort to

1834
01:09:26,000 --> 01:09:30,080
standardize this

1835
01:09:27,759 --> 01:09:31,279
uh and the reason for that is that web

1836
01:09:30,080 --> 01:09:33,759
transport is just

1837
01:09:31,279 --> 01:09:34,480
being developed so if i don't think

1838
01:09:33,759 --> 01:09:36,238
people

1839
01:09:34,479 --> 01:09:37,919
while people are building things on top

1840
01:09:36,238 --> 01:09:38,639
of them none of the sayings are building

1841
01:09:37,920 --> 01:09:40,560
on top of it

1842
01:09:38,640 --> 01:09:41,759
are it's a stage where they're ready for

1843
01:09:40,560 --> 01:09:44,960
this

1844
01:09:41,759 --> 01:09:46,000
i am aware of efforts to do both video

1845
01:09:44,960 --> 01:09:50,319
live streaming and

1846
01:09:46,000 --> 01:09:52,960
real-time applications yesterday uh

1847
01:09:50,319 --> 01:09:54,000
fox from twitch presented there uh on

1848
01:09:52,960 --> 01:09:57,199
their efforts of

1849
01:09:54,000 --> 01:09:59,600
to do live streaming over web transport

1850
01:09:57,199 --> 01:10:00,639
at the web transport working group

1851
01:09:59,600 --> 01:10:03,760
meeting

1852
01:10:00,640 --> 01:10:08,320
and i am aware of

1853
01:10:03,760 --> 01:10:10,000
multiple attempts uh i don't remember

1854
01:10:08,320 --> 01:10:12,080
specifically but there are definitely

1855
01:10:10,000 --> 01:10:15,679
multiple attempts to build

1856
01:10:12,080 --> 01:10:17,199
uh game streaming systems on top of this

1857
01:10:15,679 --> 01:10:20,320
uh

1858
01:10:17,199 --> 01:10:20,960
and so there it is unclear what would be

1859
01:10:20,320 --> 01:10:23,519
the first

1860
01:10:20,960 --> 01:10:25,199
uh what would be the way forward to

1861
01:10:23,520 --> 01:10:28,320
standardize something

1862
01:10:25,199 --> 01:10:31,678
i know that uh ripped working ripped

1863
01:10:28,320 --> 01:10:34,400
at ripped buff there was an

1864
01:10:31,679 --> 01:10:37,280
interest in building standard for

1865
01:10:34,400 --> 01:10:41,040
sending media over web transport

1866
01:10:37,280 --> 01:10:43,519
uh i do not know if that

1867
01:10:41,040 --> 01:10:45,600
has made any progress but that sounds

1868
01:10:43,520 --> 01:10:48,080
like one possible avenue

1869
01:10:45,600 --> 01:10:49,840
but i expect at some point somebody will

1870
01:10:48,080 --> 01:10:52,640
build something on top of this

1871
01:10:49,840 --> 01:10:53,199
and hopefully they will bring something

1872
01:10:52,640 --> 01:10:55,600
here

1873
01:10:53,199 --> 01:10:58,320
and if they if they believe that's

1874
01:10:55,600 --> 01:11:00,560
useful for them

1875
01:10:58,320 --> 01:11:02,400
so that's the current status of

1876
01:11:00,560 --> 01:11:05,440
standardized media that said

1877
01:11:02,400 --> 01:11:08,719
they're definitely

1878
01:11:05,440 --> 01:11:10,839
people who are at least trying to do

1879
01:11:08,719 --> 01:11:15,360
this in practice

1880
01:11:10,840 --> 01:11:27,840
uh so that's it next slide

1881
01:11:15,360 --> 01:11:27,839
uh do people have any questions

1882
01:11:28,719 --> 01:11:31,920
all right luke go ahead

1883
01:11:34,239 --> 01:11:38,839
hey so i'm the guy at twitch that gave

1884
01:11:37,040 --> 01:11:42,400
the presentation yesterday

1885
01:11:38,840 --> 01:11:43,600
um we're mostly exploring it as an hls

1886
01:11:42,400 --> 01:11:45,759
or contribution

1887
01:11:43,600 --> 01:11:46,960
alternative um just as a way to reduce

1888
01:11:45,760 --> 01:11:49,360
headline blocking

1889
01:11:46,960 --> 01:11:50,320
um and it might be something that twitch

1890
01:11:49,360 --> 01:11:53,440
would be interested in

1891
01:11:50,320 --> 01:11:55,840
trying to standardize as well um

1892
01:11:53,440 --> 01:11:58,080
but we're still prototype stays a stage

1893
01:11:55,840 --> 01:12:00,000
we haven't released it or anything yet

1894
01:11:58,080 --> 01:12:01,760
but yeah i'd love to talk more about web

1895
01:12:00,000 --> 01:12:03,520
transport as well if anybody has any

1896
01:12:01,760 --> 01:12:05,199
questions i've been involved in the

1897
01:12:03,520 --> 01:12:09,840
staff alpha and the working group

1898
01:12:05,199 --> 01:12:09,839
uh pretty heavily now

1899
01:12:10,960 --> 01:12:15,280
sorry that wasn't a question

1900
01:12:12,290 --> 01:12:18,480
[Laughter]

1901
01:12:15,280 --> 01:12:18,480
interventions are allowed

1902
01:12:19,120 --> 01:12:23,599
cool all right you go along then to the

1903
01:12:21,920 --> 01:12:25,840
next thank you

1904
01:12:23,600 --> 01:12:25,840
mike

1905
01:12:31,040 --> 01:12:35,440
can't hear you if you're speaking all

1906
01:12:33,520 --> 01:12:38,719
right is that my audio on though

1907
01:12:35,440 --> 01:12:39,839
yep can hear you now great um so i just

1908
01:12:38,719 --> 01:12:42,159
wanted to ask

1909
01:12:39,840 --> 01:12:43,199
if there were open source

1910
01:12:42,159 --> 01:12:45,759
implementations

1911
01:12:43,199 --> 01:12:47,120
of media delivery i know you know luke

1912
01:12:45,760 --> 01:12:48,320
just mentioned that twitch has been

1913
01:12:47,120 --> 01:12:49,840
experimenting

1914
01:12:48,320 --> 01:12:52,239
i've heard of a few others at the

1915
01:12:49,840 --> 01:12:53,440
working group but uh does anybody have

1916
01:12:52,239 --> 01:12:58,080
you know sample code

1917
01:12:53,440 --> 01:13:00,879
out there for media specifically

1918
01:12:58,080 --> 01:13:02,239
i do not believe i've seen any sample

1919
01:13:00,880 --> 01:13:05,760
code

1920
01:13:02,239 --> 01:13:09,519
uh that said uh

1921
01:13:05,760 --> 01:13:10,800
i i i'm thinking of everyone who i've

1922
01:13:09,520 --> 01:13:13,920
experimented that

1923
01:13:10,800 --> 01:13:16,640
who i've talked to and i do not believe

1924
01:13:13,920 --> 01:13:18,480
any specific projects i've talked to are

1925
01:13:16,640 --> 01:13:20,480
currently open source

1926
01:13:18,480 --> 01:13:22,320
some of them might get eventually

1927
01:13:20,480 --> 01:13:24,320
released as open source but they do not

1928
01:13:22,320 --> 01:13:27,440
believe there is a specific

1929
01:13:24,320 --> 01:13:28,880
example but even if you read the web

1930
01:13:27,440 --> 01:13:32,400
transport explainer

1931
01:13:28,880 --> 01:13:33,280
it has some examples of just how you

1932
01:13:32,400 --> 01:13:36,639
could

1933
01:13:33,280 --> 01:13:39,920
take a chunk of video and connect it to

1934
01:13:36,640 --> 01:13:43,600
a media source extension

1935
01:13:39,920 --> 01:13:48,320
so that is like to build something

1936
01:13:43,600 --> 01:13:48,320
really simple is not particularly hard

1937
01:13:49,040 --> 01:13:52,159
but i i do not believe there are any

1938
01:13:51,440 --> 01:13:55,519
specific

1939
01:13:52,159 --> 01:14:01,839
examples of sending media over

1940
01:13:55,520 --> 01:14:01,840
web transports that currently work

1941
01:14:06,480 --> 01:14:18,959
any uh any more questions anyone else

1942
01:14:15,440 --> 01:14:21,040
going once going twice all right

1943
01:14:18,960 --> 01:14:23,360
thank you victor that was really helpful

1944
01:14:21,040 --> 01:14:23,360
thanks

1945
01:14:26,159 --> 01:14:31,920
i i assume there are no more questions

1946
01:14:28,719 --> 01:14:31,920
or remarks so

1947
01:14:33,679 --> 01:14:38,320
yep i think we're good thank you thank

1948
01:14:40,840 --> 01:14:44,560
you

1949
01:14:42,080 --> 01:14:44,559
all right

1950
01:14:45,679 --> 01:14:49,920
now we are back to

1951
01:14:50,880 --> 01:14:54,560
the agenda if i can find it

1952
01:14:54,880 --> 01:15:01,600
yeah we saved the uh the the most

1953
01:14:57,679 --> 01:15:01,600
compute intensive part for the last

1954
01:15:01,760 --> 01:15:08,800
great it's now 1 15

1955
01:15:06,000 --> 01:15:08,800
a.m where i

1956
01:15:09,120 --> 01:15:17,760
you am all right so

1957
01:15:12,800 --> 01:15:21,120
go to the uh the milestones slide

1958
01:15:17,760 --> 01:15:23,760
so um i propose this agenda item

1959
01:15:21,120 --> 01:15:25,120
when during the interim uh the virtual

1960
01:15:23,760 --> 01:15:28,159
interim we had

1961
01:15:25,120 --> 01:15:30,080
a couple weeks ago um and jake holland

1962
01:15:28,159 --> 01:15:33,199
and co-authors wanted to have

1963
01:15:30,080 --> 01:15:35,280
uh suggested pushing back a milestone

1964
01:15:33,199 --> 01:15:36,480
deadline for the final version of the

1965
01:15:35,280 --> 01:15:39,040
ops con

1966
01:15:36,480 --> 01:15:40,480
draft um it caused me actually look at

1967
01:15:39,040 --> 01:15:43,920
our milestone this is like

1968
01:15:40,480 --> 01:15:45,440
well that's that's interesting

1969
01:15:43,920 --> 01:15:47,679
which is not really a good reaction but

1970
01:15:45,440 --> 01:15:49,440
there you are um

1971
01:15:47,679 --> 01:15:51,600
and so i don't think we're going to

1972
01:15:49,440 --> 01:15:53,280
conclude a discussion here but it seemed

1973
01:15:51,600 --> 01:15:54,880
like this was an appropriate time to at

1974
01:15:53,280 --> 01:15:56,320
least launch a discussion

1975
01:15:54,880 --> 01:15:58,320
of whether or not we have the right

1976
01:15:56,320 --> 01:16:00,400
milestones for this working group

1977
01:15:58,320 --> 01:16:02,320
um and for the items that we haven't

1978
01:16:00,400 --> 01:16:05,440
particularly embarked on

1979
01:16:02,320 --> 01:16:07,920
do we have volunteers or other thoughts

1980
01:16:05,440 --> 01:16:09,759
and why yes in case you're scrambling to

1981
01:16:07,920 --> 01:16:14,159
find our charter and what are the darned

1982
01:16:09,760 --> 01:16:18,480
milestones anyway next slide please

1983
01:16:14,159 --> 01:16:21,519
thank you so we have some done

1984
01:16:18,480 --> 01:16:22,879
um which which i wish i should really

1985
01:16:21,520 --> 01:16:26,239
just say thank you jake and

1986
01:16:22,880 --> 01:16:28,960
co-authors um

1987
01:16:26,239 --> 01:16:30,080
and uh the proposed new date for the

1988
01:16:28,960 --> 01:16:32,800
final version

1989
01:16:30,080 --> 01:16:33,600
of the um operational considerations

1990
01:16:32,800 --> 01:16:37,679
document is

1991
01:16:33,600 --> 01:16:39,920
is for june next year um

1992
01:16:37,679 --> 01:16:41,520
but there are at least two other

1993
01:16:39,920 --> 01:16:43,120
documents that we had

1994
01:16:41,520 --> 01:16:45,120
thought when we were chartering might be

1995
01:16:43,120 --> 01:16:47,519
rational to pursue in this working group

1996
01:16:45,120 --> 01:16:49,120
and uh which we haven't pursued now

1997
01:16:47,520 --> 01:16:51,199
naturally some of that is because it's

1998
01:16:49,120 --> 01:16:53,199
2020 and what was the question

1999
01:16:51,199 --> 01:16:54,320
um but some of it is also just because

2000
01:16:53,199 --> 01:16:57,120
we haven't pursued it

2001
01:16:54,320 --> 01:16:57,840
so these are our there are two key

2002
01:16:57,120 --> 01:17:00,159
documents

2003
01:16:57,840 --> 01:17:00,880
um the there was a theory that we were

2004
01:17:00,159 --> 01:17:02,799
gonna

2005
01:17:00,880 --> 01:17:05,040
talk about the relationship of the work

2006
01:17:02,800 --> 01:17:07,600
that the sympathy folk are doing

2007
01:17:05,040 --> 01:17:09,360
and what what the ietf does and also the

2008
01:17:07,600 --> 01:17:11,600
streaming video alliance

2009
01:17:09,360 --> 01:17:12,480
um we have had some cross chatter

2010
01:17:11,600 --> 01:17:14,320
between this

2011
01:17:12,480 --> 01:17:17,040
sva work and this working group but

2012
01:17:14,320 --> 01:17:19,199
nothing so formal as a document

2013
01:17:17,040 --> 01:17:20,400
um so i guess my questions are do we

2014
01:17:19,199 --> 01:17:22,400
want to

2015
01:17:20,400 --> 01:17:23,440
um and then the final bullet point i

2016
01:17:22,400 --> 01:17:26,159
have no idea

2017
01:17:23,440 --> 01:17:27,919
what that's a bogon i that is as it is

2018
01:17:26,159 --> 01:17:31,040
on our charter but i don't know

2019
01:17:27,920 --> 01:17:32,800
whether they edge network considerations

2020
01:17:31,040 --> 01:17:34,239
document is the same as the operational

2021
01:17:32,800 --> 01:17:37,679
considerations document

2022
01:17:34,239 --> 01:17:40,879
anyway it's bogon so with that by way of

2023
01:17:37,679 --> 01:17:45,840
rousing intro um i throw open the floor

2024
01:17:40,880 --> 01:17:45,840
for comment

2025
01:17:54,640 --> 01:17:59,840
jake you're up

2026
01:18:03,360 --> 01:18:06,880
can't hear you if you're talking

2027
01:18:10,880 --> 01:18:19,199
does that work yes excellent

2028
01:18:15,520 --> 01:18:22,480
or um yeah uh

2029
01:18:19,199 --> 01:18:26,080
i guess my first question is

2030
01:18:22,480 --> 01:18:30,959
do we have any insight into like

2031
01:18:26,080 --> 01:18:34,559
how our milestones and the achievement

2032
01:18:30,960 --> 01:18:38,159
of them will feed into the evaluation

2033
01:18:34,560 --> 01:18:40,800
which i think is a year from now

2034
01:18:38,159 --> 01:18:42,639
if i remember it is a year from now as

2035
01:18:40,800 --> 01:18:46,000
to whether the working group will

2036
01:18:42,640 --> 01:18:47,840
remain active or what exactly

2037
01:18:46,000 --> 01:18:49,199
and it looks like eric is on thank you

2038
01:18:47,840 --> 01:18:51,840
guys

2039
01:18:49,199 --> 01:18:51,839
go ahead eric

2040
01:18:52,960 --> 01:18:57,760
this will be okay regarding the audio

2041
01:18:56,080 --> 01:19:00,880
and the video

2042
01:18:57,760 --> 01:19:02,560
so this sounds good but

2043
01:19:00,880 --> 01:19:04,640
on the other end there will be an

2044
01:19:02,560 --> 01:19:05,679
evaluation indeed in about a year from

2045
01:19:04,640 --> 01:19:09,280
now

2046
01:19:05,679 --> 01:19:12,159
even documents was not the main goal of

2047
01:19:09,280 --> 01:19:13,199
mobs it was the documents here are more

2048
01:19:12,159 --> 01:19:15,679
to document

2049
01:19:13,199 --> 01:19:16,879
what we have doing and to basically have

2050
01:19:15,679 --> 01:19:18,480
an archive

2051
01:19:16,880 --> 01:19:20,080
and not to lose the time you spend

2052
01:19:18,480 --> 01:19:23,519
specifically as an auto check

2053
01:19:20,080 --> 01:19:26,320
on this document so there is no link

2054
01:19:23,520 --> 01:19:28,000
reeling between achieving document

2055
01:19:26,320 --> 01:19:32,559
publication

2056
01:19:28,000 --> 01:19:32,560
and the survival of this written group

2057
01:19:33,280 --> 01:19:37,120
now having a document like those

2058
01:19:35,679 --> 01:19:40,320
lingering for years

2059
01:19:37,120 --> 01:19:40,320
it's not a good point either

2060
01:19:42,159 --> 01:19:46,159
it's not lingering for years right but

2061
01:19:43,679 --> 01:19:47,520
if it ever stands

2062
01:19:46,159 --> 01:19:49,199
before going to the working group last

2063
01:19:47,520 --> 01:19:51,840
call for years and years and years that

2064
01:19:49,199 --> 01:19:51,839
it's not a good sign

2065
01:19:53,199 --> 01:19:57,120
yeah and basically i'm confident it will

2066
01:19:55,600 --> 01:19:58,400
be working group last call before the

2067
01:19:57,120 --> 01:20:00,880
end of the year or

2068
01:19:58,400 --> 01:20:05,839
or early next year right so don't take

2069
01:20:00,880 --> 01:20:05,840
it as a criticism there

2070
01:20:06,159 --> 01:20:10,480
uh spencer did you want to throw

2071
01:20:07,920 --> 01:20:10,480
something in there

2072
01:20:12,000 --> 01:20:15,199
mine was actually on a a different a

2073
01:20:14,560 --> 01:20:17,040
different

2074
01:20:15,199 --> 01:20:19,120
point i can get out of the way you could

2075
01:20:17,040 --> 01:20:19,920
let anybody who wants to follow up with

2076
01:20:19,120 --> 01:20:22,159
eric

2077
01:20:19,920 --> 01:20:22,159
talk

2078
01:20:26,639 --> 01:20:32,400
so i think part of my takeaway is um

2079
01:20:30,560 --> 01:20:33,840
that so what i understood eric to say

2080
01:20:32,400 --> 01:20:34,159
basically is that no we're not going to

2081
01:20:33,840 --> 01:20:37,360
be

2082
01:20:34,159 --> 01:20:39,519
measured graded uniquely on uh the

2083
01:20:37,360 --> 01:20:42,480
completion of these milestones

2084
01:20:39,520 --> 01:20:44,159
um but we should be focused on being

2085
01:20:42,480 --> 01:20:45,360
clear about what work we're doing and if

2086
01:20:44,159 --> 01:20:46,799
there are other documents that we should

2087
01:20:45,360 --> 01:20:47,599
be working on we should be identifying

2088
01:20:46,800 --> 01:20:49,600
them

2089
01:20:47,600 --> 01:20:51,440
and and i apologize if i seem a little

2090
01:20:49,600 --> 01:20:53,360
distracted i think my cat might be

2091
01:20:51,440 --> 01:20:56,400
chasing a mouse in my office so

2092
01:20:53,360 --> 01:20:56,400
shrieks may ensue

2093
01:20:59,520 --> 01:21:03,520
so if you don't mind i confirm what you

2094
01:21:02,000 --> 01:21:05,760
just said lastly

2095
01:21:03,520 --> 01:21:07,199
having the right milestone now having

2096
01:21:05,760 --> 01:21:08,880
fuzzy milestone like there is

2097
01:21:07,199 --> 01:21:11,280
on this charter if you don't intend to

2098
01:21:08,880 --> 01:21:13,920
work on smt and sva

2099
01:21:11,280 --> 01:21:14,880
simply remove them right it's nothing as

2100
01:21:13,920 --> 01:21:17,360
bad as having a

2101
01:21:14,880 --> 01:21:19,360
wrong milestone we can delay we can

2102
01:21:17,360 --> 01:21:21,440
change them but even

2103
01:21:19,360 --> 01:21:23,120
milestone where nothing is moving there

2104
01:21:21,440 --> 01:21:23,440
just remove that that's easy and you

2105
01:21:23,120 --> 01:21:25,519
have

2106
01:21:23,440 --> 01:21:27,280
the power to do it this chairs as you

2107
01:21:25,520 --> 01:21:31,120
know

2108
01:21:27,280 --> 01:21:32,559
um and i guess on the sva sorry

2109
01:21:31,120 --> 01:21:34,159
oh no i was just going to say i mean it

2110
01:21:32,560 --> 01:21:36,080
just the the we

2111
01:21:34,159 --> 01:21:37,360
we put these milestones in place for a

2112
01:21:36,080 --> 01:21:39,679
reason right so i'm

2113
01:21:37,360 --> 01:21:40,960
i'm just sort of wondering if the if the

2114
01:21:39,679 --> 01:21:43,120
reasons

2115
01:21:40,960 --> 01:21:44,560
have changed i don't i don't think

2116
01:21:43,120 --> 01:21:47,920
that's the case

2117
01:21:44,560 --> 01:21:50,320
um and if it's just a matter of of

2118
01:21:47,920 --> 01:21:51,600
you know getting you know the energy of

2119
01:21:50,320 --> 01:21:54,159
activation to get them

2120
01:21:51,600 --> 01:21:55,199
started right you know having the right

2121
01:21:54,159 --> 01:21:57,280
having the right people

2122
01:21:55,199 --> 01:21:58,320
in the working group to to help advance

2123
01:21:57,280 --> 01:22:01,920
the

2124
01:21:58,320 --> 01:22:05,519
help advance them yeah so i think

2125
01:22:01,920 --> 01:22:07,120
um i think that that's part of it and

2126
01:22:05,520 --> 01:22:08,719
i think part of it is in the case of

2127
01:22:07,120 --> 01:22:10,719
simpty um

2128
01:22:08,719 --> 01:22:12,400
there were folks that were maybe more

2129
01:22:10,719 --> 01:22:14,719
involved a year ago or

2130
01:22:12,400 --> 01:22:16,799
going to be involved a year ago and then

2131
01:22:14,719 --> 01:22:18,320
and then 2020 happened so

2132
01:22:16,800 --> 01:22:20,159
that's one that we might want to sort of

2133
01:22:18,320 --> 01:22:21,679
put in the parking lot and and should

2134
01:22:20,159 --> 01:22:23,360
the right people become involved again

2135
01:22:21,679 --> 01:22:25,600
we could pursue it

2136
01:22:23,360 --> 01:22:26,880
um streaming video lines we've had

2137
01:22:25,600 --> 01:22:29,040
people present work

2138
01:22:26,880 --> 01:22:30,719
from there you know both sanjay mishra

2139
01:22:29,040 --> 01:22:33,040
talking about the work of the

2140
01:22:30,719 --> 01:22:34,320
um the open caching stuff that's being

2141
01:22:33,040 --> 01:22:37,840
done there and also

2142
01:22:34,320 --> 01:22:39,920
last at our last virtual meeting

2143
01:22:37,840 --> 01:22:41,920
virtual 108 we had the presentation

2144
01:22:39,920 --> 01:22:44,639
about the

2145
01:22:41,920 --> 01:22:45,280
the the measurements the metrics for

2146
01:22:44,639 --> 01:22:47,920
video

2147
01:22:45,280 --> 01:22:49,440
quality of experience uh presented here

2148
01:22:47,920 --> 01:22:50,880
so i think it's a question of whether or

2149
01:22:49,440 --> 01:22:53,919
not there is

2150
01:22:50,880 --> 01:22:56,320
interest and volunteer uh to actually do

2151
01:22:53,920 --> 01:22:58,639
some work on on documenting

2152
01:22:56,320 --> 01:22:59,840
what where there is clearly uh

2153
01:22:58,639 --> 01:23:02,639
overlapping work

2154
01:22:59,840 --> 01:23:04,159
and uh glenn why i see a technical

2155
01:23:02,639 --> 01:23:07,840
advisor

2156
01:23:04,159 --> 01:23:07,839
perhaps you'd like to say something

2157
01:23:10,560 --> 01:23:13,679
yeah there you are there yet i'll see

2158
01:23:13,120 --> 01:23:17,280
you

2159
01:23:13,679 --> 01:23:20,719
in here so i um you know

2160
01:23:17,280 --> 01:23:24,080
why this is because 2020.

2161
01:23:20,719 --> 01:23:27,440
so i do think that both of them

2162
01:23:24,080 --> 01:23:30,400
are um reasonable things to

2163
01:23:27,440 --> 01:23:31,440
to continue within the milestones uh

2164
01:23:30,400 --> 01:23:33,040
maybe with some different dates

2165
01:23:31,440 --> 01:23:34,080
obviously since i think we missed july

2166
01:23:33,040 --> 01:23:37,519
2020

2167
01:23:34,080 --> 01:23:40,159
um but both of these topics to me

2168
01:23:37,520 --> 01:23:40,719
seem still relevant right simtes still

2169
01:23:40,159 --> 01:23:44,320
got their

2170
01:23:40,719 --> 01:23:45,120
their uh their their 2110 specification

2171
01:23:44,320 --> 01:23:49,199
which is

2172
01:23:45,120 --> 01:23:52,880
you know using ip networks for

2173
01:23:49,199 --> 01:23:55,678
uh their work sks as leslie said has

2174
01:23:52,880 --> 01:23:57,280
uh the cdn work going on over there as

2175
01:23:55,679 --> 01:24:00,840
well as some other stuff

2176
01:23:57,280 --> 01:24:04,080
that is um ongoing

2177
01:24:00,840 --> 01:24:04,400
so i i think we should keep both of

2178
01:24:04,080 --> 01:24:07,840
these

2179
01:24:04,400 --> 01:24:09,199
but maybe um be more conscious

2180
01:24:07,840 --> 01:24:11,679
and putting some energy into working out

2181
01:24:09,199 --> 01:24:12,638
both of them uh and if one of them turns

2182
01:24:11,679 --> 01:24:14,159
out you know that

2183
01:24:12,639 --> 01:24:16,480
one or the other isn't really getting a

2184
01:24:14,159 --> 01:24:18,000
lot of energy back uh from the other

2185
01:24:16,480 --> 01:24:19,678
side of that relationship

2186
01:24:18,000 --> 01:24:21,360
uh that then we can talk again about

2187
01:24:19,679 --> 01:24:22,159
killing it off i think i i think it's

2188
01:24:21,360 --> 01:24:25,839
premature to come

2189
01:24:22,159 --> 01:24:27,920
off right now so

2190
01:24:25,840 --> 01:24:30,639
um before we go to spencer on a slightly

2191
01:24:27,920 --> 01:24:33,120
different point um

2192
01:24:30,639 --> 01:24:34,560
uh do you because i know you're deeply

2193
01:24:33,120 --> 01:24:36,400
involved with the sva do you have

2194
01:24:34,560 --> 01:24:39,520
suggestions who might actually be

2195
01:24:36,400 --> 01:24:41,599
a good person to uh

2196
01:24:39,520 --> 01:24:42,960
for us to hunt down to actually take the

2197
01:24:41,600 --> 01:24:46,320
pen on the sva

2198
01:24:42,960 --> 01:24:47,840
document um

2199
01:24:46,320 --> 01:24:49,519
i think sanjay and i should have a

2200
01:24:47,840 --> 01:24:51,120
conversation i'm not volunteering him

2201
01:24:49,520 --> 01:24:52,800
i'm not volunteering me

2202
01:24:51,120 --> 01:24:54,960
but i think the two of us together can

2203
01:24:52,800 --> 01:24:56,639
have that conversation about who

2204
01:24:54,960 --> 01:24:58,560
uh either both of us or somebody else

2205
01:24:56,639 --> 01:24:59,679
might be the right person um because

2206
01:24:58,560 --> 01:25:01,840
both of us are clearly

2207
01:24:59,679 --> 01:25:02,719
active in the itf and we're both active

2208
01:25:01,840 --> 01:25:04,080
here so

2209
01:25:02,719 --> 01:25:07,520
although i don't see sanji on the call

2210
01:25:04,080 --> 01:25:07,519
tonight he may be asleep

2211
01:25:07,840 --> 01:25:12,000
imagine that okay uh so i think that

2212
01:25:11,280 --> 01:25:16,000
it's take take

2213
01:25:12,000 --> 01:25:17,760
those as suggestions thanks um

2214
01:25:16,000 --> 01:25:20,800
and and maybe we should let spencer get

2215
01:25:17,760 --> 01:25:20,800
his word in edgewise

2216
01:25:24,840 --> 01:25:27,840
spencer

2217
01:25:28,080 --> 01:25:34,320
ah okay so i'm talking sorry um so

2218
01:25:31,440 --> 01:25:34,960
i had a couple of things um that popped

2219
01:25:34,320 --> 01:25:39,040
up while

2220
01:25:34,960 --> 01:25:41,760
after i stopped talking a minute ago um

2221
01:25:39,040 --> 01:25:44,000
but it it seemed like to me that what we

2222
01:25:41,760 --> 01:25:47,120
were talking about was two things in

2223
01:25:44,000 --> 01:25:48,880
the uh in in mops and

2224
01:25:47,120 --> 01:25:50,320
one was about operational

2225
01:25:48,880 --> 01:25:52,840
recommendations

2226
01:25:50,320 --> 01:25:54,480
uh and one was about outreach to other

2227
01:25:52,840 --> 01:25:58,159
forums

2228
01:25:54,480 --> 01:25:59,280
and i think the both of those are really

2229
01:25:58,159 --> 01:26:02,799
valuable

2230
01:25:59,280 --> 01:26:05,519
and i think that uh maybe maybe we're

2231
01:26:02,800 --> 01:26:06,639
proving that this is actually true but

2232
01:26:05,520 --> 01:26:08,560
that

2233
01:26:06,639 --> 01:26:10,080
the outreach is probably going to take

2234
01:26:08,560 --> 01:26:12,880
longer to develop so

2235
01:26:10,080 --> 01:26:14,960
that's a good thing for us to start for

2236
01:26:12,880 --> 01:26:18,320
a while before we decide how

2237
01:26:14,960 --> 01:26:22,239
uh successful that's going to be

2238
01:26:18,320 --> 01:26:23,519
um on the on the question about the edge

2239
01:26:22,239 --> 01:26:24,879
networks

2240
01:26:23,520 --> 01:26:29,280
which is actually what i was thinking

2241
01:26:24,880 --> 01:26:29,280
about before i push my button

2242
01:26:29,440 --> 01:26:34,239
i think that the operational

2243
01:26:32,400 --> 01:26:37,280
considerations for streaming

2244
01:26:34,239 --> 01:26:40,559
document hasn't really talked about

2245
01:26:37,280 --> 01:26:41,920
edge networks very much in the parts

2246
01:26:40,560 --> 01:26:46,320
that i've worked on

2247
01:26:41,920 --> 01:26:50,239
at least and um

2248
01:26:46,320 --> 01:26:53,360
i think that's a place where

2249
01:26:50,239 --> 01:26:53,360
the edge computing

2250
01:26:54,000 --> 01:26:57,120
topic that we were discussing a minute

2251
01:26:55,440 --> 01:26:59,199
ago might might

2252
01:26:57,120 --> 01:27:01,199
reasonably fit and it was why i was

2253
01:26:59,199 --> 01:27:04,480
asking about

2254
01:27:01,199 --> 01:27:07,599
is this also about configuration for

2255
01:27:04,480 --> 01:27:12,080
edge computing in support of uh

2256
01:27:07,600 --> 01:27:14,400
video uh so um

2257
01:27:12,080 --> 01:27:15,519
that may be that may so that may be a

2258
01:27:14,400 --> 01:27:17,519
that may be a

2259
01:27:15,520 --> 01:27:19,360
uh the kind of thing that would end up

2260
01:27:17,520 --> 01:27:21,040
in that document that would not end up

2261
01:27:19,360 --> 01:27:22,639
in the uh in the streaming

2262
01:27:21,040 --> 01:27:25,760
considerations

2263
01:27:22,639 --> 01:27:28,159
um document

2264
01:27:25,760 --> 01:27:30,239
so that's that's a fair a fair point

2265
01:27:28,159 --> 01:27:32,080
i'll simply observe that i flagged it as

2266
01:27:30,239 --> 01:27:33,199
a bogon because it was a document that

2267
01:27:32,080 --> 01:27:34,800
was being last called

2268
01:27:33,199 --> 01:27:36,480
in our milestones without ever having

2269
01:27:34,800 --> 01:27:39,520
had an initial draft or

2270
01:27:36,480 --> 01:27:43,440
or or anything else yeah

2271
01:27:39,520 --> 01:27:43,440
but that's that's not a good sign no

2272
01:27:43,520 --> 01:27:50,000
even the cats won't go for that no

2273
01:27:46,639 --> 01:27:51,840
no no they'd rather hunt mice so um

2274
01:27:50,000 --> 01:27:54,639
so i do think that there's there is a

2275
01:27:51,840 --> 01:27:56,639
question then whether we want to have

2276
01:27:54,639 --> 01:28:00,480
have such a document as distinct from

2277
01:27:56,639 --> 01:28:03,679
the operational considerations

2278
01:28:00,480 --> 01:28:07,040
so i think sorry go ahead i'm sorry

2279
01:28:03,679 --> 01:28:08,639
no i i so

2280
01:28:07,040 --> 01:28:10,719
i guess one of the questions i was

2281
01:28:08,639 --> 01:28:14,159
wondering about on that is is anybody

2282
01:28:10,719 --> 01:28:15,920
is anybody else uh thinking about

2283
01:28:14,159 --> 01:28:17,440
operational considerations for

2284
01:28:15,920 --> 01:28:20,239
configuring edge

2285
01:28:17,440 --> 01:28:20,239
edge computing

2286
01:28:22,639 --> 01:28:31,440
opening up to the floor

2287
01:28:29,120 --> 01:28:31,440
okay

2288
01:28:32,159 --> 01:28:38,400
go ahead hey uh this is trey

2289
01:28:36,400 --> 01:28:39,839
just kind of reply to spencer i think

2290
01:28:38,400 --> 01:28:42,239
spencer also knows

2291
01:28:39,840 --> 01:28:45,120
i think if you're gpp there are multiple

2292
01:28:42,239 --> 01:28:48,239
works work on edge computing

2293
01:28:45,120 --> 01:28:51,440
aspect right mostly sa2 and

2294
01:28:48,239 --> 01:28:54,638
s86 but i think in in this

2295
01:28:51,440 --> 01:28:56,799
work pretty much close to s6 work

2296
01:28:54,639 --> 01:28:58,480
application level edge computing

2297
01:28:56,800 --> 01:29:01,199
considerations

2298
01:28:58,480 --> 01:29:04,159
and i totally agree with the spencer the

2299
01:29:01,199 --> 01:29:07,759
current documentation missing lots of

2300
01:29:04,159 --> 01:29:11,360
existing edge networking architectures

2301
01:29:07,760 --> 01:29:15,040
right talked about the media streaming

2302
01:29:11,360 --> 01:29:16,880
and compute computation and edit server

2303
01:29:15,040 --> 01:29:19,600
location and resources

2304
01:29:16,880 --> 01:29:21,280
and those still need to be considered a

2305
01:29:19,600 --> 01:29:22,719
document somewhere either in the same

2306
01:29:21,280 --> 01:29:24,800
documentation or in separate

2307
01:29:22,719 --> 01:29:27,120
documentations talk about that

2308
01:29:24,800 --> 01:29:29,679
and i mean they think the current draft

2309
01:29:27,120 --> 01:29:32,719
is too broad

2310
01:29:29,679 --> 01:29:36,840
and to to you know to comprehend it

2311
01:29:32,719 --> 01:29:38,159
in my perspective is that okay spencer i

2312
01:29:36,840 --> 01:29:42,159
think

2313
01:29:38,159 --> 01:29:42,879
yeah i yeah i i may be guessing a little

2314
01:29:42,159 --> 01:29:45,280
bit of this

2315
01:29:42,880 --> 01:29:45,920
this is actually a good conversation for

2316
01:29:45,280 --> 01:29:50,000
us to

2317
01:29:45,920 --> 01:29:53,440
involve 3gpp liaison types

2318
01:29:50,000 --> 01:29:56,800
both are both our person to the 3gpp and

2319
01:29:53,440 --> 01:29:57,839
3gpps person to us uh to talk about this

2320
01:29:56,800 --> 01:30:02,000
a little bit maybe

2321
01:29:57,840 --> 01:30:05,280
but my impression is that um

2322
01:30:02,000 --> 01:30:08,800
3tvp does a lot more with how to

2323
01:30:05,280 --> 01:30:10,080
with with with mechanisms to do things

2324
01:30:08,800 --> 01:30:11,840
then maybe how

2325
01:30:10,080 --> 01:30:13,519
you know operational considerations for

2326
01:30:11,840 --> 01:30:16,320
them and things like that

2327
01:30:13,520 --> 01:30:16,719
so uh if they're using if they're using

2328
01:30:16,320 --> 01:30:20,880
uh

2329
01:30:16,719 --> 01:30:24,000
ietf protocols especially for uh

2330
01:30:20,880 --> 01:30:25,920
for any of this that it might be that

2331
01:30:24,000 --> 01:30:28,239
might be a really valuable

2332
01:30:25,920 --> 01:30:32,000
thing for the operations area to do

2333
01:30:28,239 --> 01:30:35,120
whether it's in mops or someplace else

2334
01:30:32,000 --> 01:30:37,520
thank you

2335
01:30:35,120 --> 01:30:39,840
okay so i think my takeaways at any rate

2336
01:30:37,520 --> 01:30:41,280
are uh that we should definitely update

2337
01:30:39,840 --> 01:30:44,320
the milestones with the

2338
01:30:41,280 --> 01:30:45,599
uh with the updates for the operational

2339
01:30:44,320 --> 01:30:49,519
considerations document

2340
01:30:45,600 --> 01:30:51,360
it sounds like um

2341
01:30:49,520 --> 01:30:53,040
i will propose something along the lines

2342
01:30:51,360 --> 01:30:56,639
of pushing out the the

2343
01:30:53,040 --> 01:30:59,840
milestones for the um sva document

2344
01:30:56,639 --> 01:31:00,880
and the sympty documents and we can

2345
01:30:59,840 --> 01:31:03,440
revisit

2346
01:31:00,880 --> 01:31:05,120
at 110 whether or not there really is

2347
01:31:03,440 --> 01:31:07,120
movement on this empty documents or if

2348
01:31:05,120 --> 01:31:10,000
it's a if it's a dead option

2349
01:31:07,120 --> 01:31:11,679
and also to pull up some earlier

2350
01:31:10,000 --> 01:31:13,440
milestones on the edge network

2351
01:31:11,679 --> 01:31:14,320
considerations document to see if we can

2352
01:31:13,440 --> 01:31:17,839
get

2353
01:31:14,320 --> 01:31:19,519
uh some work going there

2354
01:31:17,840 --> 01:31:21,920
for an actual document separate from the

2355
01:31:19,520 --> 01:31:23,040
operational considerations document

2356
01:31:21,920 --> 01:31:25,120
that's what i'm hearing from this

2357
01:31:23,040 --> 01:31:26,800
discussion i would propose that that's

2358
01:31:25,120 --> 01:31:28,239
material to be proposed to the mailing

2359
01:31:26,800 --> 01:31:32,000
list for further discussion

2360
01:31:28,239 --> 01:31:35,280
does that sound right to you kyle

2361
01:31:32,000 --> 01:31:38,080
sounds right to me um

2362
01:31:35,280 --> 01:31:40,080
and throwing it open to the floor again

2363
01:31:38,080 --> 01:31:43,760
does that sound right to people

2364
01:31:40,080 --> 01:31:46,719
uh any objections

2365
01:31:43,760 --> 01:31:46,719
hearing sounding right

2366
01:31:47,280 --> 01:31:52,719
okay uh go ahead spencer

2367
01:31:54,480 --> 01:31:58,638
i was just gonna say i i think i'd be

2368
01:31:56,159 --> 01:32:01,519
happy to to work on

2369
01:31:58,639 --> 01:32:02,400
the edge network considerations document

2370
01:32:01,520 --> 01:32:04,159
uh

2371
01:32:02,400 --> 01:32:06,559
with you know with other people as well

2372
01:32:04,159 --> 01:32:06,559
of course

2373
01:32:06,639 --> 01:32:13,440
awesome even better

2374
01:32:10,159 --> 01:32:15,679
great thanks

2375
01:32:13,440 --> 01:32:15,678
okay

2376
01:32:16,960 --> 01:32:22,960
all right have we uh gotten to the

2377
01:32:20,320 --> 01:32:24,840
all other business section of the

2378
01:32:22,960 --> 01:32:27,760
meeting

2379
01:32:24,840 --> 01:32:29,600
yes uh and

2380
01:32:27,760 --> 01:32:30,400
and i agree with chris lemon's comment

2381
01:32:29,600 --> 01:32:32,080
that given the amount of

2382
01:32:30,400 --> 01:32:35,040
cross-pollination between the sva and

2383
01:32:32,080 --> 01:32:37,440
iatf the esp82 is particularly useful

2384
01:32:35,040 --> 01:32:40,400
it's we just need to provoke it at this

2385
01:32:37,440 --> 01:32:43,280
point i think

2386
01:32:40,400 --> 01:32:44,960
uh yeah so i think we've we are

2387
01:32:43,280 --> 01:32:48,239
exhausted we have exhausted

2388
01:32:44,960 --> 01:32:52,320
we have exhausted our list of things um

2389
01:32:48,239 --> 01:32:52,320
so yes any other other business

2390
01:32:53,600 --> 01:32:56,960
we're in danger of calling this meeting

2391
01:32:55,040 --> 01:33:02,719
done so if anybody else has

2392
01:32:56,960 --> 01:33:02,719
uh anything else to say now is the time

2393
01:33:02,880 --> 01:33:12,080
so yeah coffee not right now

2394
01:33:08,239 --> 01:33:12,080
maybe if i wanted to stay up until six

2395
01:33:12,880 --> 01:33:16,000
all right going once

2396
01:33:18,320 --> 01:33:24,159
beer is a different discussion yes any

2397
01:33:21,199 --> 01:33:24,159
other beer yeah

2398
01:33:24,400 --> 01:33:31,280
uh yeah i think that might make a good

2399
01:33:27,600 --> 01:33:34,960
uh good april 2021

2400
01:33:31,280 --> 01:33:34,960
rfc april first rfc

2401
01:33:35,280 --> 01:33:40,559
we can but hope yeah

2402
01:33:38,880 --> 01:33:43,280
great well thank you very much everybody

2403
01:33:40,560 --> 01:33:46,960
for yeah everybody for coming out and

2404
01:33:43,280 --> 01:33:49,280
and playing uh it was a good um

2405
01:33:46,960 --> 01:33:50,000
good discussion um i'm hoping that my

2406
01:33:49,280 --> 01:33:51,679
cat is asleep

2407
01:33:50,000 --> 01:33:53,280
under my desk and hasn't actually found

2408
01:33:51,679 --> 01:33:57,040
a mouse

2409
01:33:53,280 --> 01:33:57,759
um well it's better than the time they

2410
01:33:57,040 --> 01:33:59,920
found a bat

2411
01:33:57,760 --> 01:34:01,920
that was really bad but anyway thanks

2412
01:33:59,920 --> 01:34:05,840
thanks everybody

2413
01:34:01,920 --> 01:34:05,840
thank you all thank you

2414
01:34:18,960 --> 01:34:33,840
and thanks to mike english for taking

2415
01:34:20,960 --> 01:34:33,840
the notes

2416
01:34:34,400 --> 01:34:36,480
you

