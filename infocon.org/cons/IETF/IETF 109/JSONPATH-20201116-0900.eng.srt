1
00:00:08,800 --> 00:00:12,559
okay well

2
00:00:10,559 --> 00:00:13,840
it looks to me like it's time for us to

3
00:00:12,559 --> 00:00:16,320
start

4
00:00:13,840 --> 00:00:18,080
first order of business uh can you hear

5
00:00:16,320 --> 00:00:18,880
me somebody speak up or wave or

6
00:00:18,080 --> 00:00:21,680
something

7
00:00:18,880 --> 00:00:22,480
yes you're very much audible excellent

8
00:00:21,680 --> 00:00:26,160
is that james

9
00:00:22,480 --> 00:00:27,920
yes yes okay well uh on behalf of james

10
00:00:26,160 --> 00:00:30,480
and myself welcome to everybody

11
00:00:27,920 --> 00:00:31,199
uh good morning good evening good

12
00:00:30,480 --> 00:00:33,280
afternoon

13
00:00:31,199 --> 00:00:35,040
depending of which uh depending where

14
00:00:33,280 --> 00:00:37,520
that applies wherever you are

15
00:00:35,040 --> 00:00:38,239
um i'm actually uh kind of surprised and

16
00:00:37,520 --> 00:00:41,600
delighted

17
00:00:38,239 --> 00:00:44,239
at the number of people here um

18
00:00:41,600 --> 00:00:44,960
so so let's get straight to it oh and

19
00:00:44,239 --> 00:00:46,800
more coming in

20
00:00:44,960 --> 00:00:48,559
all the time can we move along there

21
00:00:46,800 --> 00:00:50,959
james next slide yep

22
00:00:48,559 --> 00:00:51,680
right so whether or not you have been

23
00:00:50,960 --> 00:00:54,960
involved

24
00:00:51,680 --> 00:00:58,160
in the ietf before um

25
00:00:54,960 --> 00:01:00,239
read this it it matters there are

26
00:00:58,160 --> 00:01:01,519
certain rules that apply as regards

27
00:01:00,239 --> 00:01:03,839
intellectual property

28
00:01:01,520 --> 00:01:04,960
and conduct and so on and and they're

29
00:01:03,840 --> 00:01:07,840
not optional

30
00:01:04,959 --> 00:01:09,520
so um please do read this and take it

31
00:01:07,840 --> 00:01:12,640
seriously

32
00:01:09,520 --> 00:01:15,679
um moving on

33
00:01:12,640 --> 00:01:20,560
right please we need a volunteer for

34
00:01:15,680 --> 00:01:20,560
note taking who's going to put up their

35
00:01:24,840 --> 00:01:27,840
hand

36
00:01:33,920 --> 00:01:37,280
well there are lots of people who wrote

37
00:01:35,119 --> 00:01:37,840
excellent drafts and have obvious you

38
00:01:37,280 --> 00:01:40,240
know

39
00:01:37,840 --> 00:01:42,000
writing skills at least one of them

40
00:01:40,240 --> 00:01:45,520
ought to be able to

41
00:01:42,000 --> 00:01:45,520
to to take notes for us

42
00:01:51,520 --> 00:01:55,280
i will take notes for you tim i just got

43
00:01:54,479 --> 00:01:58,880
to pull up the

44
00:01:55,280 --> 00:02:02,000
eat the ether pad excellent uh

45
00:01:58,880 --> 00:02:02,000
who is that speaking sorry

46
00:02:02,479 --> 00:02:09,758
was michael richardson

47
00:02:08,160 --> 00:02:12,400
michael richardson thank you very much

48
00:02:09,758 --> 00:02:15,679
michael um

49
00:02:12,400 --> 00:02:15,680
let me know when you've got that running

50
00:02:20,800 --> 00:02:25,840
it's asking very jabber scribe uh i'll

51
00:02:23,760 --> 00:02:27,840
i'll just keep an eye out on jabba if

52
00:02:25,840 --> 00:02:29,280
if anybody is unable to use their might

53
00:02:27,840 --> 00:02:31,200
you can just prepend

54
00:02:29,280 --> 00:02:32,400
send a message in the chat with mike at

55
00:02:31,200 --> 00:02:35,518
the start of it and

56
00:02:32,400 --> 00:02:37,599
i'll do the talking for you

57
00:02:35,519 --> 00:02:38,800
excellent thank you for that um for

58
00:02:37,599 --> 00:02:40,160
those of you who haven't used the

59
00:02:38,800 --> 00:02:42,480
interface before you can

60
00:02:40,160 --> 00:02:43,840
detach the chat so you can see both the

61
00:02:42,480 --> 00:02:46,720
user list and the chat that that's

62
00:02:43,840 --> 00:02:50,400
that's quite useful

63
00:02:46,720 --> 00:02:51,599
okay um thank you uh both for for

64
00:02:50,400 --> 00:02:54,640
pitching in

65
00:02:51,599 --> 00:02:56,640
um now uh if the agenda that's

66
00:02:54,640 --> 00:02:58,958
posted as the agenda was very minimal

67
00:02:56,640 --> 00:03:02,399
but then there's a larger agenda

68
00:02:58,959 --> 00:03:02,400
uh maybe james we could look at that

69
00:03:03,040 --> 00:03:07,280
and before we do anything else just a

70
00:03:05,840 --> 00:03:08,959
couple of words

71
00:03:07,280 --> 00:03:10,480
my notion was to see if there were a few

72
00:03:08,959 --> 00:03:12,000
sort of big and

73
00:03:10,480 --> 00:03:14,560
unsubtle issues that we might have a

74
00:03:12,000 --> 00:03:16,080
good hope of uh making progress on here

75
00:03:14,560 --> 00:03:17,760
in real time

76
00:03:16,080 --> 00:03:19,599
but i'm not religious and i don't think

77
00:03:17,760 --> 00:03:22,399
james is about this either

78
00:03:19,599 --> 00:03:23,760
um anybody would like to uh object to

79
00:03:22,400 --> 00:03:27,200
one of these or

80
00:03:23,760 --> 00:03:28,000
um or add something they think would be

81
00:03:27,200 --> 00:03:33,440
a good candidate

82
00:03:28,000 --> 00:03:35,760
now would be a good time to speak up

83
00:03:33,440 --> 00:03:37,120
um along with the compliance test suite

84
00:03:35,760 --> 00:03:40,399
do we want to talk about

85
00:03:37,120 --> 00:03:40,400
a reference implementation

86
00:03:44,840 --> 00:03:49,840
um what do people think

87
00:03:48,319 --> 00:03:51,760
i mean there are lots of implementations

88
00:03:49,840 --> 00:03:54,000
out there

89
00:03:51,760 --> 00:03:55,280
yeah i was thinking of one uh i've been

90
00:03:54,000 --> 00:03:57,439
developing one

91
00:03:55,280 --> 00:03:58,879
in line with one of the drafts to kind

92
00:03:57,439 --> 00:04:01,599
of exercise the draft

93
00:03:58,879 --> 00:04:03,518
and push out any corners along with it

94
00:04:01,599 --> 00:04:07,119
just a way just to help to as

95
00:04:03,519 --> 00:04:07,120
a way of developing the draft

96
00:04:09,519 --> 00:04:17,440
so as a working group

97
00:04:13,920 --> 00:04:20,159
i think we should work on our document

98
00:04:17,440 --> 00:04:20,478
and not on a reference implementation

99
00:04:20,160 --> 00:04:22,240
but

100
00:04:20,478 --> 00:04:23,840
on the other hand i think we would be

101
00:04:22,240 --> 00:04:26,560
better off if we had one

102
00:04:23,840 --> 00:04:28,080
or two reference implementations that we

103
00:04:26,560 --> 00:04:31,280
can throw examples against

104
00:04:28,080 --> 00:04:33,039
and decide whether

105
00:04:31,280 --> 00:04:34,638
what the people who wrote the reference

106
00:04:33,040 --> 00:04:35,759
implementation understood of the

107
00:04:34,639 --> 00:04:37,520
document

108
00:04:35,759 --> 00:04:39,280
actually matches what we want out of the

109
00:04:37,520 --> 00:04:41,120
document

110
00:04:39,280 --> 00:04:42,880
may i suggest that what we do is when we

111
00:04:41,120 --> 00:04:44,080
get to compliance test suite in the

112
00:04:42,880 --> 00:04:46,719
agenda we

113
00:04:44,080 --> 00:04:48,479
we cover that together with um a

114
00:04:46,720 --> 00:04:50,639
reference implementation since the two

115
00:04:48,479 --> 00:04:56,320
are closely linked

116
00:04:50,639 --> 00:04:58,960
yeah thank you okay fair enough

117
00:04:56,320 --> 00:04:58,960
anything else

118
00:05:03,759 --> 00:05:07,120
okay without further ado then let's get

119
00:05:06,000 --> 00:05:10,479
into this

120
00:05:07,120 --> 00:05:11,840
um now the general

121
00:05:10,479 --> 00:05:14,240
issue here is the writing and review

122
00:05:11,840 --> 00:05:16,000
process uh there are

123
00:05:14,240 --> 00:05:17,520
you know the vast majority of working

124
00:05:16,000 --> 00:05:18,400
groups these days i believe are using

125
00:05:17,520 --> 00:05:20,320
github

126
00:05:18,400 --> 00:05:21,599
and a sort of a hybrid approach with

127
00:05:20,320 --> 00:05:23,599
github issues and

128
00:05:21,600 --> 00:05:24,880
on working group mailing list

129
00:05:23,600 --> 00:05:26,800
conversations

130
00:05:24,880 --> 00:05:28,400
there's a couple of decent rfcs that

131
00:05:26,800 --> 00:05:31,919
describe the process 80

132
00:05:28,400 --> 00:05:34,400
88 74 and 75

133
00:05:31,919 --> 00:05:36,240
and i i just wanted to to to avoid

134
00:05:34,400 --> 00:05:38,400
future surprises by

135
00:05:36,240 --> 00:05:40,160
by putting this on the agenda and giving

136
00:05:38,400 --> 00:05:41,198
anybody a chance who has strong opinions

137
00:05:40,160 --> 00:05:44,800
about the way we should

138
00:05:41,199 --> 00:05:47,360
do things to speak up now i think that

139
00:05:44,800 --> 00:05:49,120
the process is working pretty well

140
00:05:47,360 --> 00:05:49,919
across quite a few working groups but if

141
00:05:49,120 --> 00:05:51,600
there's

142
00:05:49,919 --> 00:05:52,960
somebody who has deep objections to

143
00:05:51,600 --> 00:05:54,720
github or to doing anything on the

144
00:05:52,960 --> 00:05:57,919
mailing list or

145
00:05:54,720 --> 00:06:01,520
wants to approach this in a non-typical

146
00:05:57,919 --> 00:06:01,520
way now would be a good time to speak up

147
00:06:05,680 --> 00:06:10,080
and at a metal level um uh

148
00:06:08,960 --> 00:06:12,400
if you're going to speak up let's let's

149
00:06:10,080 --> 00:06:15,039
use the the list you push the little uh

150
00:06:12,400 --> 00:06:16,638
up raise hands button and and we'll call

151
00:06:15,039 --> 00:06:18,400
on you things work better that well

152
00:06:16,639 --> 00:06:20,080
so i if i'm going to shut up and if i

153
00:06:18,400 --> 00:06:21,120
hear silence for a little while i'm

154
00:06:20,080 --> 00:06:23,199
going to assume

155
00:06:21,120 --> 00:06:24,240
that means everybody's fine with the

156
00:06:23,199 --> 00:06:28,720
typical

157
00:06:24,240 --> 00:06:28,720
hybrid github and mailing list approach

158
00:06:33,600 --> 00:06:39,360
okay so found excellent

159
00:06:36,800 --> 00:06:41,120
um now uh there's one meta issue uh

160
00:06:39,360 --> 00:06:42,639
james and i have been discussing a bit

161
00:06:41,120 --> 00:06:46,000
about so we're going to have to

162
00:06:42,639 --> 00:06:47,919
name and edit an editor or co-editors um

163
00:06:46,000 --> 00:06:49,520
and uh several of you have have

164
00:06:47,919 --> 00:06:50,560
expressed willingness to put cycles into

165
00:06:49,520 --> 00:06:52,799
that so thank you

166
00:06:50,560 --> 00:06:54,800
so much for that it's it's so great to

167
00:06:52,800 --> 00:06:58,560
have people who have energy to do that

168
00:06:54,800 --> 00:07:01,199
um uh speaking you know personally

169
00:06:58,560 --> 00:07:02,000
my instinct and i've talked about this

170
00:07:01,199 --> 00:07:05,280
to some you know really

171
00:07:02,000 --> 00:07:07,120
seasoned iatf hands is to have you know

172
00:07:05,280 --> 00:07:08,960
fewer rather than more editors

173
00:07:07,120 --> 00:07:10,639
so so i think most most likely will

174
00:07:08,960 --> 00:07:13,680
probably want to

175
00:07:10,639 --> 00:07:15,440
um ask one of you to step forward um and

176
00:07:13,680 --> 00:07:16,160
the idea is that if you're not netter

177
00:07:15,440 --> 00:07:18,400
that on

178
00:07:16,160 --> 00:07:20,000
enables uh unleashes more energy you can

179
00:07:18,400 --> 00:07:22,400
put into the discussions

180
00:07:20,000 --> 00:07:23,360
and and uh we would like to have lots of

181
00:07:22,400 --> 00:07:26,318
people putting

182
00:07:23,360 --> 00:07:26,800
energy into the discussions um so thank

183
00:07:26,319 --> 00:07:30,240
you for

184
00:07:26,800 --> 00:07:31,599
ever for that and and james and i will

185
00:07:30,240 --> 00:07:32,400
think about it and probably have further

186
00:07:31,599 --> 00:07:35,280
conversations

187
00:07:32,400 --> 00:07:35,280
with with you folks

188
00:07:36,880 --> 00:07:42,560
okay we have two existing input drafts

189
00:07:40,960 --> 00:07:43,919
um we're going to have to get to the

190
00:07:42,560 --> 00:07:44,960
point where we have a succession of

191
00:07:43,919 --> 00:07:48,080
working

192
00:07:44,960 --> 00:07:51,039
of working group drafts um i think

193
00:07:48,080 --> 00:07:53,120
people on the call probably understand

194
00:07:51,039 --> 00:07:54,639
the uh the normal process that works you

195
00:07:53,120 --> 00:07:56,240
have working group drafts and we have

196
00:07:54,639 --> 00:07:58,000
consensus calls and update the drafts

197
00:07:56,240 --> 00:08:00,479
and eventually we're all happy and

198
00:07:58,000 --> 00:08:03,840
take it and convince our ads that things

199
00:08:00,479 --> 00:08:03,840
are fine and take it forward

200
00:08:04,720 --> 00:08:09,840
does anybody have strong opinions on how

201
00:08:07,280 --> 00:08:14,960
we should move from our existing

202
00:08:09,840 --> 00:08:14,960
two drafts to a consensus working group

203
00:08:24,840 --> 00:08:29,919
draft

204
00:08:26,800 --> 00:08:33,039
i think you're not seeing my raised hand

205
00:08:29,919 --> 00:08:35,199
um i'm not oh sorry i was

206
00:08:33,039 --> 00:08:35,199
wrong

207
00:08:36,559 --> 00:08:42,880
yeah so we have two drafts one was

208
00:08:40,000 --> 00:08:44,800
essentially generated from the original

209
00:08:42,880 --> 00:08:47,760
2007

210
00:08:44,800 --> 00:08:49,519
article and essentially just updated a

211
00:08:47,760 --> 00:08:53,200
little bit but not completely

212
00:08:49,519 --> 00:08:56,080
for 2020 and one is

213
00:08:53,200 --> 00:08:57,519
charging ahead and and defining some

214
00:08:56,080 --> 00:09:01,120
details

215
00:08:57,519 --> 00:09:03,200
um and i think that's actually a very

216
00:09:01,120 --> 00:09:05,920
good situation because we have

217
00:09:03,200 --> 00:09:08,080
input for both the introductory part and

218
00:09:05,920 --> 00:09:10,399
and the detail part

219
00:09:08,080 --> 00:09:13,120
of the document so the next step i think

220
00:09:10,399 --> 00:09:15,519
we should do is just merge the two

221
00:09:13,120 --> 00:09:16,959
drafts uh which is probably easier when

222
00:09:15,519 --> 00:09:19,519
we have had the discussions

223
00:09:16,959 --> 00:09:20,719
we have to have today so we have answers

224
00:09:19,519 --> 00:09:23,040
and and

225
00:09:20,720 --> 00:09:24,480
can select between text where we have

226
00:09:23,040 --> 00:09:27,040
different

227
00:09:24,480 --> 00:09:28,800
pieces of text but that might give us a

228
00:09:27,040 --> 00:09:37,360
good basis for

229
00:09:28,800 --> 00:09:39,199
going ahead

230
00:09:37,360 --> 00:09:40,640
uh i guess the question i would have to

231
00:09:39,200 --> 00:09:42,560
the to the working group is

232
00:09:40,640 --> 00:09:43,680
do we have we've got glenn here so we've

233
00:09:42,560 --> 00:09:46,800
got the editor

234
00:09:43,680 --> 00:09:48,079
for one of the documents uh without me

235
00:09:46,800 --> 00:09:51,279
having to scroll through

236
00:09:48,080 --> 00:09:53,519
would would would uh

237
00:09:51,279 --> 00:09:54,880
both of the editor would both of the

238
00:09:53,519 --> 00:09:57,760
editors to that

239
00:09:54,880 --> 00:09:58,160
uh be willing to put in the time to help

240
00:09:57,760 --> 00:10:01,360
uh

241
00:09:58,160 --> 00:10:02,480
editorialize what would then become the

242
00:10:01,360 --> 00:10:04,399
the starting

243
00:10:02,480 --> 00:10:06,959
uh working group a doctor adopted

244
00:10:04,399 --> 00:10:06,959
document

245
00:10:09,120 --> 00:10:13,360
do you mean both of the editors of that

246
00:10:11,279 --> 00:10:17,439
or return of both

247
00:10:13,360 --> 00:10:22,399
those uh the former not the latter

248
00:10:17,440 --> 00:10:22,399
i think go ahead glenn

249
00:10:24,640 --> 00:10:35,680
glenn you have no audio

250
00:10:32,720 --> 00:10:35,680
no you're still muted

251
00:10:36,880 --> 00:10:40,480
okay i have to join the queue thank you

252
00:10:39,360 --> 00:10:42,720
um

253
00:10:40,480 --> 00:10:43,680
so edward shiroff and i were nominally

254
00:10:42,720 --> 00:10:46,959
editors

255
00:10:43,680 --> 00:10:47,760
of the the other draft marco has been

256
00:10:46,959 --> 00:10:50,239
joining in the

257
00:10:47,760 --> 00:10:51,200
writing process so i don't have a strong

258
00:10:50,240 --> 00:10:53,600
feeling about

259
00:10:51,200 --> 00:10:54,320
um you know continue i'm happy to offer

260
00:10:53,600 --> 00:10:57,360
that

261
00:10:54,320 --> 00:11:00,079
uh if anybody else wants to kind of

262
00:10:57,360 --> 00:11:01,040
take the lead on that i'm very happy um

263
00:11:00,079 --> 00:11:02,800
i think edward has

264
00:11:01,040 --> 00:11:04,560
has got some time available i don't know

265
00:11:02,800 --> 00:11:06,399
if he's on the call

266
00:11:04,560 --> 00:11:08,239
he seems to have had less time available

267
00:11:06,399 --> 00:11:10,000
more recently so i suspect he's not in a

268
00:11:08,240 --> 00:11:14,079
position to offer that

269
00:11:10,000 --> 00:11:18,079
but i'm guessing there

270
00:11:14,079 --> 00:11:21,199
okay so i i think i'm hearing

271
00:11:18,079 --> 00:11:23,359
consensus that um nobody

272
00:11:21,200 --> 00:11:25,920
is really attached to the notion that it

273
00:11:23,360 --> 00:11:28,800
must start from document a or document b

274
00:11:25,920 --> 00:11:29,599
and nobody is objecting to the notion of

275
00:11:28,800 --> 00:11:32,079
creating

276
00:11:29,600 --> 00:11:33,360
you know a working draft uh taking input

277
00:11:32,079 --> 00:11:36,160
from both of them so

278
00:11:33,360 --> 00:11:43,440
um would i be correct in saying that's

279
00:11:36,160 --> 00:11:45,760
that's the feeling that i'm hearing

280
00:11:43,440 --> 00:11:46,560
okay hearing no objection that's fine i

281
00:11:45,760 --> 00:11:50,639
i thought they were

282
00:11:46,560 --> 00:11:52,959
oh uh uh oh glenn go ahead

283
00:11:50,639 --> 00:11:53,760
yeah i'll just voice one concern which

284
00:11:52,959 --> 00:11:55,599
is that

285
00:11:53,760 --> 00:11:58,240
um there are a number of things in the

286
00:11:55,600 --> 00:12:02,160
original gerstner article

287
00:11:58,240 --> 00:12:04,079
which um were kind of uh dangling links

288
00:12:02,160 --> 00:12:05,519
uh you know things that weren't

289
00:12:04,079 --> 00:12:08,319
dereferencable

290
00:12:05,519 --> 00:12:09,200
uh promises that weren't uh delivered

291
00:12:08,320 --> 00:12:10,800
and such like

292
00:12:09,200 --> 00:12:12,720
and there's a little bit concerned that

293
00:12:10,800 --> 00:12:14,319
if we took that as a starting point

294
00:12:12,720 --> 00:12:15,760
the camel would have got its nose under

295
00:12:14,320 --> 00:12:17,200
our tent as it were

296
00:12:15,760 --> 00:12:19,040
and we could soon end up with the whole

297
00:12:17,200 --> 00:12:22,399
camel there uh if you

298
00:12:19,040 --> 00:12:23,599
use that analogy and um so i'd be happy

299
00:12:22,399 --> 00:12:25,680
to take that as input

300
00:12:23,600 --> 00:12:28,000
and cut and paste sections of it to

301
00:12:25,680 --> 00:12:30,239
provide introductory material

302
00:12:28,000 --> 00:12:31,680
uh so i prefer to start with a blank

303
00:12:30,240 --> 00:12:34,000
slate sheet

304
00:12:31,680 --> 00:12:35,279
or um possibly start with the draft that

305
00:12:34,000 --> 00:12:37,600
i've been working on because

306
00:12:35,279 --> 00:12:38,880
the approach there was to go for a

307
00:12:37,600 --> 00:12:40,480
minimal subset that should be

308
00:12:38,880 --> 00:12:42,800
non-contentious

309
00:12:40,480 --> 00:12:44,320
and that should satisfy the um the

310
00:12:42,800 --> 00:12:46,479
consensus amongst the current

311
00:12:44,320 --> 00:12:47,760
implementations so i was trying to be

312
00:12:46,480 --> 00:12:50,480
conservative there

313
00:12:47,760 --> 00:12:52,079
so it'd be easy to adopt but i don't

314
00:12:50,480 --> 00:12:53,600
mind if we start from a blank sheet and

315
00:12:52,079 --> 00:12:55,359
cut and paste from both of them

316
00:12:53,600 --> 00:12:56,720
but just be a little bit nervous about

317
00:12:55,360 --> 00:12:59,040
taking the whole of

318
00:12:56,720 --> 00:13:00,880
the ghost document to start with because

319
00:12:59,040 --> 00:13:03,199
it's very difficult to remove text

320
00:13:00,880 --> 00:13:04,839
it's easier to add text incrementally

321
00:13:03,200 --> 00:13:07,839
that's my personal

322
00:13:04,839 --> 00:13:07,839
position

323
00:13:08,079 --> 00:13:11,519
does anybody know if hans gustner is

324
00:13:10,000 --> 00:13:14,639
actually interested in

325
00:13:11,519 --> 00:13:17,000
participating in this work well

326
00:13:14,639 --> 00:13:18,240
you know stefan told me that

327
00:13:17,000 --> 00:13:21,600
[Music]

328
00:13:18,240 --> 00:13:24,639
his interest in this work his uh

329
00:13:21,600 --> 00:13:26,639
focus has shifted back from from

330
00:13:24,639 --> 00:13:27,760
computer related stuff to mechanical

331
00:13:26,639 --> 00:13:30,800
engineering

332
00:13:27,760 --> 00:13:32,880
related stuff in in the last decade or

333
00:13:30,800 --> 00:13:34,959
so so he's not going to

334
00:13:32,880 --> 00:13:36,000
put in major cycles but he's certainly

335
00:13:34,959 --> 00:13:38,000
interested

336
00:13:36,000 --> 00:13:39,360
and he has already asked me about the

337
00:13:38,000 --> 00:13:41,920
progress of

338
00:13:39,360 --> 00:13:42,399
this activity because things take some

339
00:13:41,920 --> 00:13:45,360
time

340
00:13:42,399 --> 00:13:46,240
starting up in the ietf so i think he

341
00:13:45,360 --> 00:13:49,360
will be around

342
00:13:46,240 --> 00:13:52,720
i think he won't have strong opinions

343
00:13:49,360 --> 00:13:54,959
on detail issues

344
00:13:52,720 --> 00:13:55,920
but i think he's he's generally happy

345
00:13:54,959 --> 00:14:00,800
with with the

346
00:13:55,920 --> 00:14:00,800
approach of finally having a document

347
00:14:00,839 --> 00:14:03,839
here

348
00:14:04,399 --> 00:14:08,880
kristin you're at the front of the queue

349
00:14:05,680 --> 00:14:08,880
is there anything else you wanted to say

350
00:14:08,959 --> 00:14:16,000
i just just wanted to say to glenn that

351
00:14:12,720 --> 00:14:17,839
i'm a part of the people who

352
00:14:16,000 --> 00:14:20,320
find it easier to delete text than to

353
00:14:17,839 --> 00:14:22,399
add text

354
00:14:20,320 --> 00:14:23,920
so maybe we have different sets of

355
00:14:22,399 --> 00:14:26,079
experiences

356
00:14:23,920 --> 00:14:28,800
here of course not not all of the the

357
00:14:26,079 --> 00:14:30,160
original 2007 article has has become

358
00:14:28,800 --> 00:14:33,279
true so

359
00:14:30,160 --> 00:14:35,920
we will have to to look at that and

360
00:14:33,279 --> 00:14:36,959
that's maybe a welcome opportunity to to

361
00:14:35,920 --> 00:14:40,479
actually

362
00:14:36,959 --> 00:14:42,800
uh check uh whether there are maybe some

363
00:14:40,480 --> 00:14:44,800
some nooks and crannies of the jason

364
00:14:42,800 --> 00:14:46,079
parker universe where some of this has

365
00:14:44,800 --> 00:14:49,519
actually happened

366
00:14:46,079 --> 00:14:52,239
and that we may have to to look at but

367
00:14:49,519 --> 00:14:53,839
yes so um there is an appendix that

368
00:14:52,240 --> 00:14:56,639
describes the current implementation of

369
00:14:53,839 --> 00:15:00,320
2007 and that that's probably not useful

370
00:14:56,639 --> 00:15:00,320
anymore at this point in time and so on

371
00:15:00,399 --> 00:15:03,760
excellent i mean i like what i'm hearing

372
00:15:02,079 --> 00:15:04,880
it sounds like nobody is particularly

373
00:15:03,760 --> 00:15:06,399
religious

374
00:15:04,880 --> 00:15:08,000
about how we're going to use this and

375
00:15:06,399 --> 00:15:11,120
we'll use the material from

376
00:15:08,000 --> 00:15:14,480
from both of them to work towards a

377
00:15:11,120 --> 00:15:16,399
an actual working group draft um

378
00:15:14,480 --> 00:15:17,680
great okay so i think i think we all

379
00:15:16,399 --> 00:15:19,040
understand where we stand on that one

380
00:15:17,680 --> 00:15:19,920
does anybody want to say anything else

381
00:15:19,040 --> 00:15:21,599
about

382
00:15:19,920 --> 00:15:27,839
about the existing drafts and how we're

383
00:15:21,600 --> 00:15:27,839
going to move forward

384
00:15:28,639 --> 00:15:33,040
excellent okay so um moving on the

385
00:15:32,000 --> 00:15:35,120
agenda there's the

386
00:15:33,040 --> 00:15:37,279
compliance test suite and the related

387
00:15:35,120 --> 00:15:40,800
you know reference implementation

388
00:15:37,279 --> 00:15:42,320
um you know i i i'm i'm perhaps being a

389
00:15:40,800 --> 00:15:42,719
little bit self-indulgent and putting on

390
00:15:42,320 --> 00:15:45,040
this

391
00:15:42,720 --> 00:15:46,240
having had a lot of experience in this

392
00:15:45,040 --> 00:15:49,199
stuff i i think that

393
00:15:46,240 --> 00:15:51,279
compliance tests are insanely valuable

394
00:15:49,199 --> 00:15:52,719
um and i understand they are never the

395
00:15:51,279 --> 00:15:55,439
part of the official output of a working

396
00:15:52,720 --> 00:15:57,519
group but um

397
00:15:55,440 --> 00:15:59,040
i i just wanted to put on the record

398
00:15:57,519 --> 00:16:01,600
that i i'd like

399
00:15:59,040 --> 00:16:03,360
i'd like it i'd really like it a lot if

400
00:16:01,600 --> 00:16:05,600
we produced a compliance test suite that

401
00:16:03,360 --> 00:16:08,160
was conformant with the actual document

402
00:16:05,600 --> 00:16:11,120
we produced so glenn is that entirely

403
00:16:08,160 --> 00:16:11,120
your work up till now

404
00:16:11,519 --> 00:16:17,680
uh yeah the um cts as part of the um

405
00:16:15,120 --> 00:16:18,880
reference implementation repos is my day

406
00:16:17,680 --> 00:16:20,800
yeah

407
00:16:18,880 --> 00:16:23,199
yeah one or two people may have chipped

408
00:16:20,800 --> 00:16:25,519
away at it but it's mainly my day

409
00:16:23,199 --> 00:16:26,319
okay and you're okay with posting that

410
00:16:25,519 --> 00:16:28,720
uh and

411
00:16:26,320 --> 00:16:30,320
i haven't looked i it's on a repo and

412
00:16:28,720 --> 00:16:31,360
and you'll be open to taking pr's and

413
00:16:30,320 --> 00:16:37,839
things like that

414
00:16:31,360 --> 00:16:37,839
sure yeah

415
00:16:38,560 --> 00:16:43,518
any other opinions on on

416
00:16:42,000 --> 00:16:45,120
test suites and reference

417
00:16:43,519 --> 00:16:51,600
implementations and anything we should

418
00:16:45,120 --> 00:16:55,120
be careful to do or avoid doing

419
00:16:51,600 --> 00:16:55,759
glenn go ahead yes um an approach i took

420
00:16:55,120 --> 00:16:57,759
with this

421
00:16:55,759 --> 00:16:59,360
test suite was to make it lag strictly

422
00:16:57,759 --> 00:17:00,880
behind the draft

423
00:16:59,360 --> 00:17:03,199
because it's easy to get ahead of the

424
00:17:00,880 --> 00:17:06,079
draft and then you end up with

425
00:17:03,199 --> 00:17:07,438
essentially uh tested behavior that's

426
00:17:06,079 --> 00:17:10,240
not specified

427
00:17:07,439 --> 00:17:11,520
which i think is anathema to this this

428
00:17:10,240 --> 00:17:13,919
group so i

429
00:17:11,520 --> 00:17:15,439
kind of recommend that approach really

430
00:17:13,919 --> 00:17:16,640
to try and let you know if there's a

431
00:17:15,439 --> 00:17:18,000
reference implementation

432
00:17:16,640 --> 00:17:20,000
certainly if there's a compliance test

433
00:17:18,000 --> 00:17:21,119
suite to have it lag behind the the

434
00:17:20,000 --> 00:17:22,559
words in the text

435
00:17:21,119 --> 00:17:25,119
rather get ahead of the words in the

436
00:17:22,559 --> 00:17:27,918
text of course we can do branches

437
00:17:25,119 --> 00:17:27,918
to experiment

438
00:17:29,200 --> 00:17:36,000
cool thank you kirsten

439
00:17:32,960 --> 00:17:38,720
yeah what glenn said so um

440
00:17:36,000 --> 00:17:39,360
it's really easy to have a document that

441
00:17:38,720 --> 00:17:40,960
that

442
00:17:39,360 --> 00:17:42,879
doesn't really describe things and the

443
00:17:40,960 --> 00:17:46,320
compliant test suite that that does

444
00:17:42,880 --> 00:17:47,520
and then you you run into ambiguities

445
00:17:46,320 --> 00:17:50,320
and so on so

446
00:17:47,520 --> 00:17:52,320
it's probably a good idea to to have a

447
00:17:50,320 --> 00:17:55,200
good way to reference

448
00:17:52,320 --> 00:17:56,799
uh back from the test suite to the

449
00:17:55,200 --> 00:17:58,000
document to make sure that things that

450
00:17:56,799 --> 00:18:01,520
are in there

451
00:17:58,000 --> 00:18:04,880
are either rooted in the document

452
00:18:01,520 --> 00:18:06,639
or are actually proposals for something

453
00:18:04,880 --> 00:18:07,919
that needs to be put in the document but

454
00:18:06,640 --> 00:18:10,320
isn't there yet

455
00:18:07,919 --> 00:18:12,480
so i think it's useful to have that as

456
00:18:10,320 --> 00:18:16,720
part of a test suite as long as it's

457
00:18:12,480 --> 00:18:17,360
clearly separated but i would like to

458
00:18:16,720 --> 00:18:19,520
repeat

459
00:18:17,360 --> 00:18:21,918
my my observation that it's not really

460
00:18:19,520 --> 00:18:25,520
the job of the working group

461
00:18:21,919 --> 00:18:28,640
to do compliance test suites and and

462
00:18:25,520 --> 00:18:30,799
reference implementations um actually

463
00:18:28,640 --> 00:18:32,640
some itfa groups have done that so for

464
00:18:30,799 --> 00:18:33,600
instance the opus people have actually

465
00:18:32,640 --> 00:18:36,400
generated a

466
00:18:33,600 --> 00:18:40,010
reference implementation so we could do

467
00:18:36,400 --> 00:18:41,520
that but it would be a somewhat unusual

468
00:18:40,010 --> 00:18:43,919
[Music]

469
00:18:41,520 --> 00:18:46,400
way of of going forward for for a group

470
00:18:43,919 --> 00:18:46,400
like this

471
00:18:47,039 --> 00:18:52,720
okay i understood alexander

472
00:18:50,160 --> 00:18:55,120
yes uh thanks everyone um i want this

473
00:18:52,720 --> 00:18:56,799
account what what carson has said i i

474
00:18:55,120 --> 00:18:58,239
think we should be careful so that

475
00:18:56,799 --> 00:18:59,760
not the reference implementation

476
00:18:58,240 --> 00:19:01,440
actually drives the standardization

477
00:18:59,760 --> 00:19:03,679
effort because what could happen is that

478
00:19:01,440 --> 00:19:06,320
people actually look us sideways on the

479
00:19:03,679 --> 00:19:07,679
implementation and say oh we actually

480
00:19:06,320 --> 00:19:10,720
found out

481
00:19:07,679 --> 00:19:12,480
that it would be not much nicer if we

482
00:19:10,720 --> 00:19:15,280
tweaked here and there

483
00:19:12,480 --> 00:19:16,320
so that the implementation suddenly

484
00:19:15,280 --> 00:19:17,760
becomes the driving force in

485
00:19:16,320 --> 00:19:18,399
standardization i think that shouldn't

486
00:19:17,760 --> 00:19:22,240
happen

487
00:19:18,400 --> 00:19:24,160
yeah so so um the the

488
00:19:22,240 --> 00:19:26,880
the reference implementation however you

489
00:19:24,160 --> 00:19:29,039
want to call compliance you

490
00:19:26,880 --> 00:19:31,360
shouldn't be an official work item of

491
00:19:29,039 --> 00:19:34,640
the working group in the first place

492
00:19:31,360 --> 00:19:36,559
yeah yeah

493
00:19:34,640 --> 00:19:38,640
good point i hadn't actually considered

494
00:19:36,559 --> 00:19:40,000
the issue of the official status

495
00:19:38,640 --> 00:19:41,679
but but that's a good one we should look

496
00:19:40,000 --> 00:19:42,400
at i i had seen it as unofficial you

497
00:19:41,679 --> 00:19:45,440
know just in

498
00:19:42,400 --> 00:19:47,360
i'm reflecting the personal bias um i've

499
00:19:45,440 --> 00:19:48,640
found that having a

500
00:19:47,360 --> 00:19:50,399
test suite actually more than a

501
00:19:48,640 --> 00:19:52,480
reference implementation to be

502
00:19:50,400 --> 00:19:53,919
tremendously useful and

503
00:19:52,480 --> 00:19:55,840
what you cautioned against actually

504
00:19:53,919 --> 00:19:57,280
something that i found useful is if if

505
00:19:55,840 --> 00:19:58,879
if a change comes in and it turns out to

506
00:19:57,280 --> 00:20:00,720
be really hard to implement in the

507
00:19:58,880 --> 00:20:02,400
in the test suite or really hard to test

508
00:20:00,720 --> 00:20:03,280
that it's maybe a pretty good signal

509
00:20:02,400 --> 00:20:05,120
that you know

510
00:20:03,280 --> 00:20:06,799
maybe there's a you want to look

511
00:20:05,120 --> 00:20:09,120
carefully at that uh rick taylor please

512
00:20:06,799 --> 00:20:09,120
go ahead

513
00:20:10,000 --> 00:20:13,280
i'll try again unmuted um actually tim

514
00:20:12,400 --> 00:20:16,640
you just covered

515
00:20:13,280 --> 00:20:19,120
pretty much my point which was um

516
00:20:16,640 --> 00:20:20,559
test suite as a working group item seems

517
00:20:19,120 --> 00:20:23,760
a bit of a stretch

518
00:20:20,559 --> 00:20:27,440
but uh a a

519
00:20:23,760 --> 00:20:30,640
a a set of uh

520
00:20:27,440 --> 00:20:32,960
worked examples with canonical

521
00:20:30,640 --> 00:20:34,080
results so rather than the test suite

522
00:20:32,960 --> 00:20:36,320
implementation the

523
00:20:34,080 --> 00:20:37,840
the the the body of data sorry it's

524
00:20:36,320 --> 00:20:38,399
early and my brain's not running at full

525
00:20:37,840 --> 00:20:41,840
speed

526
00:20:38,400 --> 00:20:44,320
a body of data to use as a uh

527
00:20:41,840 --> 00:20:45,600
as a sweet check for your own

528
00:20:44,320 --> 00:20:48,240
implementation would be

529
00:20:45,600 --> 00:20:49,039
incredibly useful and possibly a valid

530
00:20:48,240 --> 00:20:54,320
working group

531
00:20:49,039 --> 00:20:56,000
working group item okay

532
00:20:54,320 --> 00:20:57,760
fair enough i i will take an action item

533
00:20:56,000 --> 00:20:59,679
to find out you know

534
00:20:57,760 --> 00:21:01,200
what is the conventional wisdom about

535
00:20:59,679 --> 00:21:02,559
potentially actually adopting such a

536
00:21:01,200 --> 00:21:04,880
thing as a

537
00:21:02,559 --> 00:21:06,158
as a working group item i would i would

538
00:21:04,880 --> 00:21:08,640
be uh

539
00:21:06,159 --> 00:21:09,600
in favor of having that done i i either

540
00:21:08,640 --> 00:21:14,080
way but anyhow

541
00:21:09,600 --> 00:21:14,080
yeah uh uh carsten again

542
00:21:14,720 --> 00:21:20,880
yeah so let me contribute myself um

543
00:21:17,840 --> 00:21:22,240
we like to have good examples in

544
00:21:20,880 --> 00:21:24,799
specifications

545
00:21:22,240 --> 00:21:26,320
and that may be somewhat of an anathema

546
00:21:24,799 --> 00:21:28,080
to to people who think that

547
00:21:26,320 --> 00:21:31,280
specifications should be

548
00:21:28,080 --> 00:21:33,199
overly formal documents that you need a

549
00:21:31,280 --> 00:21:35,200
phd to understand

550
00:21:33,200 --> 00:21:37,120
and so that's not usually the way we

551
00:21:35,200 --> 00:21:40,720
look things in the itf

552
00:21:37,120 --> 00:21:41,199
um so good examples are kind of a test

553
00:21:40,720 --> 00:21:45,120
suite

554
00:21:41,200 --> 00:21:48,400
a little bit and we actually have

555
00:21:45,120 --> 00:21:51,520
built test suites out of the examples

556
00:21:48,400 --> 00:21:55,039
uh in an rfc but there is

557
00:21:51,520 --> 00:21:58,400
essentially never a way to be complete

558
00:21:55,039 --> 00:22:00,480
in that but implementers tend to read

559
00:21:58,400 --> 00:22:02,480
the examples first and then the text and

560
00:22:00,480 --> 00:22:05,360
not the other way around

561
00:22:02,480 --> 00:22:06,480
and julian has agreement well julian do

562
00:22:05,360 --> 00:22:09,678
you want me to

563
00:22:06,480 --> 00:22:13,120
say that sorry

564
00:22:09,679 --> 00:22:15,120
sega julian has a comment in the chat

565
00:22:13,120 --> 00:22:16,239
so julina said that's what we did for

566
00:22:15,120 --> 00:22:19,600
the http

567
00:22:16,240 --> 00:22:23,120
structured headers specification

568
00:22:19,600 --> 00:22:26,959
except that i don't know what that is uh

569
00:22:23,120 --> 00:22:29,439
yes julian any more detail on that would

570
00:22:26,960 --> 00:22:29,440
be welcome

571
00:22:31,840 --> 00:22:34,959
in the in the meantime oh julian's on

572
00:22:33,760 --> 00:22:37,120
the queue excellent we'll get to him

573
00:22:34,960 --> 00:22:40,240
glenn

574
00:22:37,120 --> 00:22:43,600
yeah um i understand

575
00:22:40,240 --> 00:22:45,679
that the um a piece of software

576
00:22:43,600 --> 00:22:47,120
is going to rot over time and so it

577
00:22:45,679 --> 00:22:48,559
can't be a deliverable

578
00:22:47,120 --> 00:22:50,239
of a working group because it will just

579
00:22:48,559 --> 00:22:51,918
become irrelevant

580
00:22:50,240 --> 00:22:53,520
but given that the compliance test suite

581
00:22:51,919 --> 00:22:54,880
is probably going to be a piece of json

582
00:22:53,520 --> 00:22:56,799
text

583
00:22:54,880 --> 00:22:58,880
we could even make that an appendix of

584
00:22:56,799 --> 00:23:01,120
the internet draft

585
00:22:58,880 --> 00:23:02,880
and that's probably a really bad idea

586
00:23:01,120 --> 00:23:04,559
but i'd like to understand why

587
00:23:02,880 --> 00:23:08,880
and it could then someone explain why we

588
00:23:04,559 --> 00:23:10,720
shouldn't do this something like that

589
00:23:08,880 --> 00:23:12,720
that's definitely an interesting idea

590
00:23:10,720 --> 00:23:16,640
and something we should explore

591
00:23:12,720 --> 00:23:18,480
alexander thank you um

592
00:23:16,640 --> 00:23:20,640
i actually it just came to my mind i see

593
00:23:18,480 --> 00:23:21,360
one opportunity and one risking that in

594
00:23:20,640 --> 00:23:24,000
that

595
00:23:21,360 --> 00:23:24,559
compliance test street um the risk is

596
00:23:24,000 --> 00:23:27,039
that

597
00:23:24,559 --> 00:23:28,399
any implement of any any chest path

598
00:23:27,039 --> 00:23:30,960
implementation would like

599
00:23:28,400 --> 00:23:32,320
run their code against that compliance

600
00:23:30,960 --> 00:23:35,919
suit and consider it

601
00:23:32,320 --> 00:23:37,439
100 compliant even if that compliance it

602
00:23:35,919 --> 00:23:38,640
probably doesn't cover 100 percent of

603
00:23:37,440 --> 00:23:40,240
the specification

604
00:23:38,640 --> 00:23:41,840
that's the risk that i see so we need to

605
00:23:40,240 --> 00:23:43,520
be very clear on what that compliance

606
00:23:41,840 --> 00:23:45,840
you does actually cover

607
00:23:43,520 --> 00:23:48,080
um and and now to the better thing to

608
00:23:45,840 --> 00:23:50,399
the opportunity i think as soon as we we

609
00:23:48,080 --> 00:23:52,799
have final residue in jsonpass

610
00:23:50,400 --> 00:23:55,120
the idf will want to have a validation

611
00:23:52,799 --> 00:23:57,360
tool that whenever jsonpass appears in

612
00:23:55,120 --> 00:23:58,399
their documents in future drafts they

613
00:23:57,360 --> 00:24:00,320
want to validate it

614
00:23:58,400 --> 00:24:01,440
so you might want to talk to the idf

615
00:24:00,320 --> 00:24:04,559
tools people

616
00:24:01,440 --> 00:24:08,159
to see if they have experience with

617
00:24:04,559 --> 00:24:08,879
other languages that they integrated

618
00:24:08,159 --> 00:24:11,679
into the

619
00:24:08,880 --> 00:24:11,679
authoring tools

620
00:24:12,720 --> 00:24:19,679
interesting point julian

621
00:24:16,559 --> 00:24:22,799
hello can you hear me yes

622
00:24:19,679 --> 00:24:26,000
i had to grab a headset sorry um so the

623
00:24:22,799 --> 00:24:28,720
http structured header spec is something

624
00:24:26,000 --> 00:24:32,880
that defines a new microsyntax for

625
00:24:28,720 --> 00:24:37,679
header fields in http um

626
00:24:32,880 --> 00:24:37,679
so because of the whites

627
00:24:38,640 --> 00:24:42,720
because of the many differences that we

628
00:24:40,480 --> 00:24:46,480
have in header syntax

629
00:24:42,720 --> 00:24:49,679
so this is essentially uh

630
00:24:46,480 --> 00:24:51,200
a micro a language to to describe header

631
00:24:49,679 --> 00:24:53,919
fields and tags

632
00:24:51,200 --> 00:24:54,640
and um so that spec is currently an auth

633
00:24:53,919 --> 00:24:57,760
for the edge

634
00:24:54,640 --> 00:24:59,919
um so to be published and the the

635
00:24:57,760 --> 00:25:01,679
working group are actually the editor of

636
00:24:59,919 --> 00:25:04,960
the spec mark nottingham

637
00:25:01,679 --> 00:25:08,320
came up with a set of test inputs and

638
00:25:04,960 --> 00:25:10,480
um expected test output so that's not

639
00:25:08,320 --> 00:25:11,360
part of the spec but but that happened

640
00:25:10,480 --> 00:25:15,520
in parallel

641
00:25:11,360 --> 00:25:17,600
to writing the spec and

642
00:25:15,520 --> 00:25:19,760
following up to what was just asked

643
00:25:17,600 --> 00:25:23,360
before um

644
00:25:19,760 --> 00:25:26,559
in in the new v3

645
00:25:23,360 --> 00:25:28,080
rfc format world we can tag source code

646
00:25:26,559 --> 00:25:30,799
and artwork with

647
00:25:28,080 --> 00:25:32,480
types and based on the type we can run

648
00:25:30,799 --> 00:25:35,440
validation tools on that

649
00:25:32,480 --> 00:25:36,640
that's not yet part by part of the rfc

650
00:25:35,440 --> 00:25:39,600
publication pro

651
00:25:36,640 --> 00:25:41,760
process but for instance it's part of

652
00:25:39,600 --> 00:25:43,918
the tool chains that many working groups

653
00:25:41,760 --> 00:25:47,440
or some working groups use to

654
00:25:43,919 --> 00:25:49,760
build their specs from markdown

655
00:25:47,440 --> 00:25:52,320
so in particular mark nottingham just

656
00:25:49,760 --> 00:25:54,640
wrote a validator for http messages that

657
00:25:52,320 --> 00:25:57,760
you might have in examples

658
00:25:54,640 --> 00:25:59,520
so um this is relatively new but um we

659
00:25:57,760 --> 00:26:03,120
should look into that and that's

660
00:25:59,520 --> 00:26:06,400
clearly possible cool

661
00:26:03,120 --> 00:26:06,399
glenn you might want to have a look at

662
00:26:08,840 --> 00:26:13,678
that

663
00:26:10,000 --> 00:26:15,840
rick again hi guys

664
00:26:13,679 --> 00:26:17,120
i just had a quick look at the jason

665
00:26:15,840 --> 00:26:19,840
pointer rfc

666
00:26:17,120 --> 00:26:20,479
just as a sort of cross-reference and

667
00:26:19,840 --> 00:26:23,600
that has

668
00:26:20,480 --> 00:26:25,360
some uh examples which

669
00:26:23,600 --> 00:26:27,199
you know personally i found extremely

670
00:26:25,360 --> 00:26:28,879
useful to start building a test

671
00:26:27,200 --> 00:26:31,679
validation suite from

672
00:26:28,880 --> 00:26:33,440
so perhaps as a pragmatic approach at

673
00:26:31,679 --> 00:26:36,080
least having some examples

674
00:26:33,440 --> 00:26:37,600
that are fairly canonical and cover most

675
00:26:36,080 --> 00:26:40,480
of the corner cases

676
00:26:37,600 --> 00:26:41,520
within the actual specification goes a

677
00:26:40,480 --> 00:26:43,760
long way

678
00:26:41,520 --> 00:26:44,639
and then the working group can can worry

679
00:26:43,760 --> 00:26:47,120
about

680
00:26:44,640 --> 00:26:48,799
producing a test suite as a further

681
00:26:47,120 --> 00:26:53,520
charter item

682
00:26:48,799 --> 00:26:57,120
that would just be my approach

683
00:26:53,520 --> 00:26:57,840
yep cool i i mean my experience is i've

684
00:26:57,120 --> 00:26:59,439
you know

685
00:26:57,840 --> 00:27:01,678
been engaged in the development of

686
00:26:59,440 --> 00:27:03,919
various dsls of one

687
00:27:01,679 --> 00:27:05,440
kind or another and i notice the ones

688
00:27:03,919 --> 00:27:07,279
that when they launch have a command

689
00:27:05,440 --> 00:27:10,240
line validator that anybody can

690
00:27:07,279 --> 00:27:10,640
just download and run people find that

691
00:27:10,240 --> 00:27:12,480
just

692
00:27:10,640 --> 00:27:14,000
just insanely helpful and i recognize

693
00:27:12,480 --> 00:27:15,600
the risk that you know somebody might

694
00:27:14,000 --> 00:27:17,679
over rely on that and assume that if it

695
00:27:15,600 --> 00:27:19,918
passes the validator everything's fine

696
00:27:17,679 --> 00:27:21,360
but but still it's a useful tool okay i

697
00:27:19,919 --> 00:27:24,799
think i'm hearing

698
00:27:21,360 --> 00:27:24,799
um julian go ahead

699
00:27:29,600 --> 00:27:32,559
you're muted julian

700
00:27:32,799 --> 00:27:38,399
can clearly sorry yeah yeah um

701
00:27:36,320 --> 00:27:40,080
one more thought about test cases so if

702
00:27:38,399 --> 00:27:41,039
we have test cases it's extremely

703
00:27:40,080 --> 00:27:44,080
helpful to have

704
00:27:41,039 --> 00:27:46,799
also test cases for invalid syntax

705
00:27:44,080 --> 00:27:48,000
and potentially also for example

706
00:27:46,799 --> 00:27:50,240
diagnostics that you

707
00:27:48,000 --> 00:27:51,600
might want to produce because that's a

708
00:27:50,240 --> 00:27:54,159
good way to

709
00:27:51,600 --> 00:27:56,719
avoid having implementations except

710
00:27:54,159 --> 00:27:58,960
things that they shouldn't accept

711
00:27:56,720 --> 00:28:00,720
so we want to that's actually a good

712
00:27:58,960 --> 00:28:02,240
point do we want to be draconic and

713
00:28:00,720 --> 00:28:06,559
error handling

714
00:28:02,240 --> 00:28:06,559
just a question i think we should

715
00:28:06,720 --> 00:28:09,360
yep that's clearly an issue for the

716
00:28:08,000 --> 00:28:10,159
working group to take up we're going to

717
00:28:09,360 --> 00:28:11,360
have to

718
00:28:10,159 --> 00:28:14,000
have something to say about air

719
00:28:11,360 --> 00:28:15,520
semantics

720
00:28:14,000 --> 00:28:17,200
okay i think i could summarize our

721
00:28:15,520 --> 00:28:18,799
consensus as everybody seems to be

722
00:28:17,200 --> 00:28:20,799
friendly to the idea

723
00:28:18,799 --> 00:28:22,559
of you know something ranging from one

724
00:28:20,799 --> 00:28:24,080
extreme to having good examples

725
00:28:22,559 --> 00:28:25,840
to on the other extreme having a fairly

726
00:28:24,080 --> 00:28:26,480
complex to you know another option

727
00:28:25,840 --> 00:28:29,199
having

728
00:28:26,480 --> 00:28:31,279
you know uh test inputs and outputs to

729
00:28:29,200 --> 00:28:33,039
actually having runnable code and and

730
00:28:31,279 --> 00:28:34,960
you know i think we can all agree that

731
00:28:33,039 --> 00:28:37,200
work done in any of these areas is

732
00:28:34,960 --> 00:28:38,799
helpful we'll have to see if any of it

733
00:28:37,200 --> 00:28:41,520
has official standing

734
00:28:38,799 --> 00:28:42,879
um but you know i certainly think we

735
00:28:41,520 --> 00:28:44,080
we're all friendly to such work and

736
00:28:42,880 --> 00:28:47,440
would appreciate it

737
00:28:44,080 --> 00:28:50,559
anybody who does it anything more on the

738
00:28:47,440 --> 00:28:50,559
subject before i move along

739
00:28:55,039 --> 00:29:01,279
okay that was useful thank you okay

740
00:28:58,320 --> 00:29:02,879
an actual material technical issue and

741
00:29:01,279 --> 00:29:04,640
and maybe we can we can settle this so

742
00:29:02,880 --> 00:29:05,440
as everybody knows the original gessner

743
00:29:04,640 --> 00:29:08,320
spec

744
00:29:05,440 --> 00:29:09,039
um uh specifies syntax for how you could

745
00:29:08,320 --> 00:29:11,039
how you could

746
00:29:09,039 --> 00:29:12,480
jsonpath could reach out and you know

747
00:29:11,039 --> 00:29:14,879
invoke functions

748
00:29:12,480 --> 00:29:16,080
um but didn't actually specify anything

749
00:29:14,880 --> 00:29:17,200
about what the functions would be or

750
00:29:16,080 --> 00:29:18,879
what language it would be

751
00:29:17,200 --> 00:29:20,559
and you know various implementations

752
00:29:18,880 --> 00:29:22,799
have done various things

753
00:29:20,559 --> 00:29:24,559
and um i would be very interested to

754
00:29:22,799 --> 00:29:27,279
hear the sense of the working group

755
00:29:24,559 --> 00:29:28,639
as to well what should we do i'm not

756
00:29:27,279 --> 00:29:30,000
going to constrain it at all

757
00:29:28,640 --> 00:29:33,360
what should we do about this who would

758
00:29:30,000 --> 00:29:33,360
like to have an opinion about that

759
00:29:38,960 --> 00:29:42,880
kirsten go ahead yeah i don't understand

760
00:29:41,760 --> 00:29:46,960
the question

761
00:29:42,880 --> 00:29:47,919
um so um what does specified scripting

762
00:29:46,960 --> 00:29:51,200
language mean

763
00:29:47,919 --> 00:29:53,919
the the original uh

764
00:29:51,200 --> 00:29:55,760
article says use whatever scripting

765
00:29:53,919 --> 00:29:59,039
language you have

766
00:29:55,760 --> 00:29:59,440
and that's certainly not a model that

767
00:29:59,039 --> 00:30:03,520
that

768
00:29:59,440 --> 00:30:05,200
is very useful and specifying a

769
00:30:03,520 --> 00:30:08,559
scripting language

770
00:30:05,200 --> 00:30:10,559
might mean we come up with an

771
00:30:08,559 --> 00:30:11,918
expression language that can be used in

772
00:30:10,559 --> 00:30:14,799
jsonpath

773
00:30:11,919 --> 00:30:15,600
or it might mean oh let's all do python

774
00:30:14,799 --> 00:30:17,600
and and

775
00:30:15,600 --> 00:30:19,199
you can do python in in these

776
00:30:17,600 --> 00:30:21,840
parenthesis and

777
00:30:19,200 --> 00:30:23,200
problem solved and i think the the

778
00:30:21,840 --> 00:30:25,918
answer to the second

779
00:30:23,200 --> 00:30:27,120
approach is no and the answer to the

780
00:30:25,919 --> 00:30:30,559
first approach is

781
00:30:27,120 --> 00:30:31,439
um yes so let's specify that expression

782
00:30:30,559 --> 00:30:33,760
language

783
00:30:31,440 --> 00:30:35,200
and find out what is actually needed in

784
00:30:33,760 --> 00:30:37,919
that expression

785
00:30:35,200 --> 00:30:38,240
language so the the original code from

786
00:30:37,919 --> 00:30:41,360
from

787
00:30:38,240 --> 00:30:43,360
stefan had essentially a regex

788
00:30:41,360 --> 00:30:45,279
parser for this expression language so

789
00:30:43,360 --> 00:30:47,439
it was very limited

790
00:30:45,279 --> 00:30:48,399
in the level of complexity you you could

791
00:30:47,440 --> 00:30:51,200
express

792
00:30:48,399 --> 00:30:53,120
with it but it actually already turned

793
00:30:51,200 --> 00:30:55,760
out to be useful for people

794
00:30:53,120 --> 00:30:58,559
um so i think yes we should specify that

795
00:30:55,760 --> 00:30:58,559
expression language

796
00:31:00,480 --> 00:31:06,080
rick carsten

797
00:31:03,519 --> 00:31:07,360
beat me to it um i'm i'm in full

798
00:31:06,080 --> 00:31:10,799
agreement with carsten

799
00:31:07,360 --> 00:31:14,879
uh so specifying the

800
00:31:10,799 --> 00:31:18,399
uh syntax for the expressions

801
00:31:14,880 --> 00:31:21,840
uh used for for searching

802
00:31:18,399 --> 00:31:22,399
absolutely uh specifying external

803
00:31:21,840 --> 00:31:26,080
function

804
00:31:22,399 --> 00:31:29,199
access um is is a step too far

805
00:31:26,080 --> 00:31:31,199
um and i think is out of scope um having

806
00:31:29,200 --> 00:31:34,880
implemented jsonpath parsers

807
00:31:31,200 --> 00:31:38,000
in non-scripting languages

808
00:31:34,880 --> 00:31:40,480
the ability to have a constrained but

809
00:31:38,000 --> 00:31:43,600
reasonably flexible expression language

810
00:31:40,480 --> 00:31:46,640
is incredibly powerful and and

811
00:31:43,600 --> 00:31:48,639
i really support that effort but

812
00:31:46,640 --> 00:31:51,039
um expecting that your entire

813
00:31:48,640 --> 00:31:52,640
implementation is javascript or python

814
00:31:51,039 --> 00:31:54,879
or or whatever

815
00:31:52,640 --> 00:31:57,200
that's that's a non-starter for me

816
00:31:54,880 --> 00:31:57,200
anyway

817
00:31:58,840 --> 00:32:03,439
glenn yeah i think i

818
00:32:01,039 --> 00:32:04,879
agree with what's been said so far um

819
00:32:03,440 --> 00:32:07,919
there is a bit of a distinction

820
00:32:04,880 --> 00:32:09,919
in my mind between filters uh the

821
00:32:07,919 --> 00:32:11,840
square brackets question mark round

822
00:32:09,919 --> 00:32:13,840
brackets stuff

823
00:32:11,840 --> 00:32:15,600
and the um the camera scripting

824
00:32:13,840 --> 00:32:17,439
expression um

825
00:32:15,600 --> 00:32:19,039
side of things which seems more

826
00:32:17,440 --> 00:32:20,399
open-ended

827
00:32:19,039 --> 00:32:22,960
and certainly when i've implemented this

828
00:32:20,399 --> 00:32:25,120
in the past the filters came out fairly

829
00:32:22,960 --> 00:32:27,120
cleanly and didn't seem to you know the

830
00:32:25,120 --> 00:32:28,799
there's quite a lot of consensus amongst

831
00:32:27,120 --> 00:32:29,840
the implementations about what filters

832
00:32:28,799 --> 00:32:32,240
are

833
00:32:29,840 --> 00:32:33,279
valid uh but on the other side there was

834
00:32:32,240 --> 00:32:35,200
complete

835
00:32:33,279 --> 00:32:36,720
lack of consensus and my concern there

836
00:32:35,200 --> 00:32:39,760
is just how would we

837
00:32:36,720 --> 00:32:42,799
as a group come to any kind of consensus

838
00:32:39,760 --> 00:32:45,120
because i could imagine people uh

839
00:32:42,799 --> 00:32:46,720
just arriving at a late stage and saying

840
00:32:45,120 --> 00:32:47,600
oh what about this function what about

841
00:32:46,720 --> 00:32:50,240
that function

842
00:32:47,600 --> 00:32:51,199
and you know how how does that work in

843
00:32:50,240 --> 00:32:53,600
the ietf

844
00:32:51,200 --> 00:32:55,120
because there's no kind of defined

845
00:32:53,600 --> 00:32:55,439
membership of the group you know and

846
00:32:55,120 --> 00:32:58,479
it's

847
00:32:55,440 --> 00:33:02,000
there's no bound to when the the

848
00:32:58,480 --> 00:33:02,000
discussion is over as far as i can tell

849
00:33:03,360 --> 00:33:06,799
well on the ladder yes there is when you

850
00:33:05,120 --> 00:33:07,760
publish your rfc you've published your

851
00:33:06,799 --> 00:33:11,039
rfc

852
00:33:07,760 --> 00:33:12,960
and it's immutable now you know they can

853
00:33:11,039 --> 00:33:13,679
be replaced or superseded by by

854
00:33:12,960 --> 00:33:16,960
subsequent

855
00:33:13,679 --> 00:33:19,679
rfcs but um you know i i

856
00:33:16,960 --> 00:33:21,200
i think we probably don't want to become

857
00:33:19,679 --> 00:33:23,039
like another ekma

858
00:33:21,200 --> 00:33:25,360
owning a language for the foreseeable

859
00:33:23,039 --> 00:33:28,559
future uh

860
00:33:25,360 --> 00:33:31,840
please no um but you know what

861
00:33:28,559 --> 00:33:34,879
i i hear what you're saying

862
00:33:31,840 --> 00:33:37,519
rick i'm

863
00:33:34,880 --> 00:33:40,559
i'm agreeing again roughly with everyone

864
00:33:37,519 --> 00:33:43,360
i think the tipping point with filters

865
00:33:40,559 --> 00:33:43,840
from my implementation experience is

866
00:33:43,360 --> 00:33:46,719
when

867
00:33:43,840 --> 00:33:47,760
language features such as the name of

868
00:33:46,720 --> 00:33:51,120
the type

869
00:33:47,760 --> 00:33:54,480
of the property attribute

870
00:33:51,120 --> 00:33:56,559
is string then you've sort of crept into

871
00:33:54,480 --> 00:33:59,519
language implementation detail

872
00:33:56,559 --> 00:34:00,960
when it's you know is is the length of

873
00:33:59,519 --> 00:34:04,000
the string less than 10

874
00:34:00,960 --> 00:34:06,320
fine is the value of the property 1.1

875
00:34:04,000 --> 00:34:07,679
that's all great but when you start to

876
00:34:06,320 --> 00:34:10,000
implement what looks an

877
00:34:07,679 --> 00:34:11,119
awful lot like language implementation

878
00:34:10,000 --> 00:34:14,000
features i think

879
00:34:11,119 --> 00:34:15,839
that's the line in the sand which we

880
00:34:14,000 --> 00:34:20,480
shouldn't cross as a working group

881
00:34:15,839 --> 00:34:24,639
then we invent another language

882
00:34:20,480 --> 00:34:28,000
you there as the topic of

883
00:34:24,639 --> 00:34:30,320
extending this thing later

884
00:34:28,000 --> 00:34:32,960
like in a subsequent rfc came up we

885
00:34:30,320 --> 00:34:36,399
absolutely need to be sure that

886
00:34:32,960 --> 00:34:38,079
we define what is an extension point for

887
00:34:36,399 --> 00:34:40,799
the future and what is not

888
00:34:38,079 --> 00:34:40,800
so um

889
00:34:46,000 --> 00:34:51,918
for instance in the http 2 um

890
00:34:49,040 --> 00:34:54,159
work we found that things that were

891
00:34:51,918 --> 00:34:57,200
supposed to be extension points

892
00:34:54,159 --> 00:34:58,560
and be useful for future modifications

893
00:34:57,200 --> 00:35:01,680
of the protocol

894
00:34:58,560 --> 00:35:04,078
were not implemented properly so once

895
00:35:01,680 --> 00:35:05,440
those things get exercised these

896
00:35:04,079 --> 00:35:08,880
implementations break

897
00:35:05,440 --> 00:35:12,079
so we need to have um a plan

898
00:35:08,880 --> 00:35:13,200
for what is must ignore and what what is

899
00:35:12,079 --> 00:35:15,680
must understand

900
00:35:13,200 --> 00:35:16,799
if if you see something that you don't

901
00:35:15,680 --> 00:35:19,440
expect

902
00:35:16,800 --> 00:35:19,440
just a thought

903
00:35:21,760 --> 00:35:26,720
kirsten again yeah i

904
00:35:24,960 --> 00:35:28,880
would have thought of extension points

905
00:35:26,720 --> 00:35:30,879
with julia and hadn't beat me to it

906
00:35:28,880 --> 00:35:32,880
so i think that that's really important

907
00:35:30,880 --> 00:35:34,400
to to understand

908
00:35:32,880 --> 00:35:36,640
and i think it's also really important

909
00:35:34,400 --> 00:35:37,359
as you said to exercise extension points

910
00:35:36,640 --> 00:35:39,839
so

911
00:35:37,359 --> 00:35:41,680
the the draft if the first specification

912
00:35:39,839 --> 00:35:43,680
the first rfc

913
00:35:41,680 --> 00:35:45,040
should already use its own extension

914
00:35:43,680 --> 00:35:47,598
point

915
00:35:45,040 --> 00:35:49,839
mechanism and in the itf we have a

916
00:35:47,599 --> 00:35:52,320
pretty good way to organize

917
00:35:49,839 --> 00:35:54,880
these extension points by running ayana

918
00:35:52,320 --> 00:35:57,520
registries with designated experts

919
00:35:54,880 --> 00:35:58,480
that serve as a gating function to uh

920
00:35:57,520 --> 00:36:00,480
what

921
00:35:58,480 --> 00:36:01,599
what gets into the extension point and

922
00:36:00,480 --> 00:36:04,880
and what

923
00:36:01,599 --> 00:36:06,640
doesn't um so one one of the interesting

924
00:36:04,880 --> 00:36:10,839
questions here will be to

925
00:36:06,640 --> 00:36:12,000
to decide how liberal or how

926
00:36:10,839 --> 00:36:14,960
conservative uh

927
00:36:12,000 --> 00:36:15,920
that that gating function needs to be um

928
00:36:14,960 --> 00:36:18,079
so i don't want to

929
00:36:15,920 --> 00:36:19,359
to anticipate the discussion here but

930
00:36:18,079 --> 00:36:21,280
extension points are

931
00:36:19,359 --> 00:36:23,279
really important and one of the nice

932
00:36:21,280 --> 00:36:26,480
things of having a good extension point

933
00:36:23,280 --> 00:36:29,359
mechanism is that the base mechanism

934
00:36:26,480 --> 00:36:30,160
of the language can actually get uh

935
00:36:29,359 --> 00:36:32,480
pretty

936
00:36:30,160 --> 00:36:34,319
small because you can put lots of stuff

937
00:36:32,480 --> 00:36:37,839
into extension parts we

938
00:36:34,320 --> 00:36:39,520
notice that that in cddl where

939
00:36:37,839 --> 00:36:42,160
all of the new stuff we have been doing

940
00:36:39,520 --> 00:36:44,240
in the last one or two years

941
00:36:42,160 --> 00:36:46,720
went into the one extension point we

942
00:36:44,240 --> 00:36:47,759
provided and for for some reason it just

943
00:36:46,720 --> 00:36:52,160
worked

944
00:36:47,760 --> 00:36:52,160
and we consider ourselves very lucky

945
00:36:52,839 --> 00:36:58,880
there

946
00:36:55,680 --> 00:36:59,839
uh a comment back on the adjacent on on

947
00:36:58,880 --> 00:37:03,520
the

948
00:36:59,839 --> 00:37:05,920
on whether we can use the type uh

949
00:37:03,520 --> 00:37:07,200
freely or if there's that a

950
00:37:05,920 --> 00:37:10,400
implementation detail

951
00:37:07,200 --> 00:37:13,118
i think we should reason whether uh

952
00:37:10,400 --> 00:37:14,640
the well-known types defined in the json

953
00:37:13,119 --> 00:37:17,680
standard itself

954
00:37:14,640 --> 00:37:19,040
are still whether they do belong here

955
00:37:17,680 --> 00:37:22,000
and i think they should

956
00:37:19,040 --> 00:37:22,960
so we can freely talk about what types

957
00:37:22,000 --> 00:37:26,000
of the node have

958
00:37:22,960 --> 00:37:26,000
in the filter language

959
00:37:28,079 --> 00:37:31,839
cool okay i put myself on the cube

960
00:37:30,880 --> 00:37:33,200
because i actually wanted to say

961
00:37:31,839 --> 00:37:36,720
something technical here

962
00:37:33,200 --> 00:37:38,160
um so when you start talking about

963
00:37:36,720 --> 00:37:41,439
extension points

964
00:37:38,160 --> 00:37:43,440
i start to get a little bit nervous the

965
00:37:41,440 --> 00:37:45,119
um you know the classic example of a

966
00:37:43,440 --> 00:37:46,160
standard with a lot of extension points

967
00:37:45,119 --> 00:37:48,320
is sql

968
00:37:46,160 --> 00:37:49,520
which has an infinite number of

969
00:37:48,320 --> 00:37:51,200
extension points and has zero

970
00:37:49,520 --> 00:37:52,880
interoperability so

971
00:37:51,200 --> 00:37:55,040
you have to be careful that an extension

972
00:37:52,880 --> 00:37:58,079
point isn't an excuse

973
00:37:55,040 --> 00:37:59,920
for vendors to stake out land grabs and

974
00:37:58,079 --> 00:38:01,520
so on so so you know when we get to

975
00:37:59,920 --> 00:38:03,599
technical discussions i'm probably going

976
00:38:01,520 --> 00:38:07,119
to be quite conservative about

977
00:38:03,599 --> 00:38:07,119
what we say about extension points

978
00:38:09,839 --> 00:38:14,720
so i'll take myself back off how do i do

979
00:38:11,839 --> 00:38:14,720
that oh yes here

980
00:38:17,040 --> 00:38:22,960
so i think what i'm hearing is that

981
00:38:20,480 --> 00:38:23,760
the sense of the group uh for the people

982
00:38:22,960 --> 00:38:26,960
at least who are

983
00:38:23,760 --> 00:38:28,320
speaking up is that uh the filtering

984
00:38:26,960 --> 00:38:32,160
capability

985
00:38:28,320 --> 00:38:34,480
is uh seems to have fairly broad support

986
00:38:32,160 --> 00:38:36,160
nobody seems to want to either adopt an

987
00:38:34,480 --> 00:38:39,440
existing language

988
00:38:36,160 --> 00:38:42,078
or invent a new one

989
00:38:39,440 --> 00:38:43,599
but but as i said filtering has a strong

990
00:38:42,079 --> 00:38:44,320
support and we've heard a couple of

991
00:38:43,599 --> 00:38:46,079
voices

992
00:38:44,320 --> 00:38:48,160
talk about the importance of having uh

993
00:38:46,079 --> 00:38:51,760
good clean extension points

994
00:38:48,160 --> 00:38:52,560
um and uh i really admit i don't know

995
00:38:51,760 --> 00:38:55,359
what that means

996
00:38:52,560 --> 00:38:57,040
but we should record that concern um and

997
00:38:55,359 --> 00:39:01,839
and make sure we address it

998
00:38:57,040 --> 00:39:01,839
uh as we go forward

999
00:39:03,280 --> 00:39:08,240
okay this is an important issue so i

1000
00:39:06,320 --> 00:39:10,079
don't want to move off it

1001
00:39:08,240 --> 00:39:12,879
let me see we're doing just fine for

1002
00:39:10,079 --> 00:39:14,480
time um

1003
00:39:12,880 --> 00:39:16,079
wow we're doing excellent for time we

1004
00:39:14,480 --> 00:39:19,680
have a full two hours here

1005
00:39:16,079 --> 00:39:22,640
um no further comments on

1006
00:39:19,680 --> 00:39:22,640
scripting and filters

1007
00:39:25,680 --> 00:39:30,879
fine okay um next one what can we say

1008
00:39:28,960 --> 00:39:31,680
about the result of evaluating a json

1009
00:39:30,880 --> 00:39:35,680
path now

1010
00:39:31,680 --> 00:39:37,279
the reason this came up was um

1011
00:39:35,680 --> 00:39:38,640
in the discussion the early discussion

1012
00:39:37,280 --> 00:39:39,680
we had somebody said well of course

1013
00:39:38,640 --> 00:39:41,200
everything that comes back is by

1014
00:39:39,680 --> 00:39:44,640
definition an array

1015
00:39:41,200 --> 00:39:48,000
and i went oh really

1016
00:39:44,640 --> 00:39:49,839
and uh so uh clearly

1017
00:39:48,000 --> 00:39:51,920
the document you reproduce has to be

1018
00:39:49,839 --> 00:39:54,400
very clear about the syntax

1019
00:39:51,920 --> 00:39:55,200
of you know what can what's legal in a

1020
00:39:54,400 --> 00:39:57,760
json path

1021
00:39:55,200 --> 00:39:59,439
and what it means but given this is

1022
00:39:57,760 --> 00:40:00,400
going to be embedded in many programming

1023
00:39:59,440 --> 00:40:03,119
languages

1024
00:40:00,400 --> 00:40:05,040
i'm wondering what in fact we can say

1025
00:40:03,119 --> 00:40:06,960
about what the result of evaluating a

1026
00:40:05,040 --> 00:40:09,119
json path is

1027
00:40:06,960 --> 00:40:12,079
um does anybody have have strong

1028
00:40:09,119 --> 00:40:12,079
opinions on that

1029
00:40:13,200 --> 00:40:15,520
rick

1030
00:40:16,640 --> 00:40:20,078
okay so so there's a there's a

1031
00:40:18,319 --> 00:40:22,000
mutability issue

1032
00:40:20,079 --> 00:40:23,280
which has always slightly worried me

1033
00:40:22,000 --> 00:40:25,920
with jason poynter

1034
00:40:23,280 --> 00:40:26,960
and i think might creep into jason path

1035
00:40:25,920 --> 00:40:30,400
as well

1036
00:40:26,960 --> 00:40:32,000
which is i'm not sure

1037
00:40:30,400 --> 00:40:33,680
how this is going to work with jason

1038
00:40:32,000 --> 00:40:36,839
park but i know at least with jason

1039
00:40:33,680 --> 00:40:39,919
poynter you can say

1040
00:40:36,839 --> 00:40:41,119
um sorry let me rephrase that ignore the

1041
00:40:39,920 --> 00:40:43,520
json pointer comment

1042
00:40:41,119 --> 00:40:44,720
the um if you're returning an array of

1043
00:40:43,520 --> 00:40:47,759
results

1044
00:40:44,720 --> 00:40:50,240
then that array is effectively uh you're

1045
00:40:47,760 --> 00:40:54,000
creating an array and returning it

1046
00:40:50,240 --> 00:40:57,118
so find me uh uh all the items

1047
00:40:54,000 --> 00:40:58,960
with a a property of red within this

1048
00:40:57,119 --> 00:41:00,800
large data set and that that will return

1049
00:40:58,960 --> 00:41:03,599
you an array of the five items

1050
00:41:00,800 --> 00:41:05,200
that that match your filter that is a

1051
00:41:03,599 --> 00:41:07,440
that is a new array that's required a

1052
00:41:05,200 --> 00:41:08,640
memory allocation and requires some sort

1053
00:41:07,440 --> 00:41:10,160
of maintenance using your

1054
00:41:08,640 --> 00:41:11,598
your if you've got a garbage collected

1055
00:41:10,160 --> 00:41:13,359
scripted in the scripting language

1056
00:41:11,599 --> 00:41:16,000
that's absolutely fine

1057
00:41:13,359 --> 00:41:16,720
compare and contrast that with a filter

1058
00:41:16,000 --> 00:41:18,480
which

1059
00:41:16,720 --> 00:41:20,160
will only return you the one result

1060
00:41:18,480 --> 00:41:22,240
you're looking for and can effectively

1061
00:41:20,160 --> 00:41:24,560
return you a pointer to an existing item

1062
00:41:22,240 --> 00:41:26,879
and requires no memory allocation

1063
00:41:24,560 --> 00:41:28,560
as a little better background i i work

1064
00:41:26,880 --> 00:41:29,599
for airbus i work in the aeronautical

1065
00:41:28,560 --> 00:41:31,680
industry

1066
00:41:29,599 --> 00:41:34,000
and bizarrely we actually use a lot of

1067
00:41:31,680 --> 00:41:36,000
these so-called scripting

1068
00:41:34,000 --> 00:41:37,599
style languages but we use them in very

1069
00:41:36,000 --> 00:41:39,520
formal environments where

1070
00:41:37,599 --> 00:41:40,880
we care a lot about memory allocation

1071
00:41:39,520 --> 00:41:42,640
and a lot about performance

1072
00:41:40,880 --> 00:41:44,640
and this applies to iot and embedded as

1073
00:41:42,640 --> 00:41:48,720
well so

1074
00:41:44,640 --> 00:41:51,118
having the the the standard result set

1075
00:41:48,720 --> 00:41:53,118
from a json path expression be something

1076
00:41:51,119 --> 00:41:55,920
that has to be

1077
00:41:53,119 --> 00:41:56,960
immutable it has to be allocated and and

1078
00:41:55,920 --> 00:41:58,240
returned is

1079
00:41:56,960 --> 00:42:00,400
is something that needs some

1080
00:41:58,240 --> 00:42:02,479
consideration so in

1081
00:42:00,400 --> 00:42:04,400
for example in my implementation i

1082
00:42:02,480 --> 00:42:05,920
effectively have two code parts one

1083
00:42:04,400 --> 00:42:07,920
which will return you

1084
00:42:05,920 --> 00:42:09,839
pointers to something which won't touch

1085
00:42:07,920 --> 00:42:11,200
the structure just reference into that

1086
00:42:09,839 --> 00:42:13,520
existing structure

1087
00:42:11,200 --> 00:42:14,960
as compared to a completely different

1088
00:42:13,520 --> 00:42:17,680
json path function

1089
00:42:14,960 --> 00:42:19,599
that will return you a new collection of

1090
00:42:17,680 --> 00:42:22,319
results that you then have to go and

1091
00:42:19,599 --> 00:42:24,400
handle and own you know you it's handing

1092
00:42:22,319 --> 00:42:25,920
you out the pointers you have to

1093
00:42:24,400 --> 00:42:27,839
and and that is the consideration that

1094
00:42:25,920 --> 00:42:29,680
sometimes gets missed when you're coming

1095
00:42:27,839 --> 00:42:33,040
from a from a garbage collected

1096
00:42:29,680 --> 00:42:33,040
scripting language perspective

1097
00:42:35,359 --> 00:42:43,119
interesting um julia

1098
00:42:39,119 --> 00:42:45,440
so um thinking about what could

1099
00:42:43,119 --> 00:42:46,480
what program could do with the result of

1100
00:42:45,440 --> 00:42:49,839
a json path

1101
00:42:46,480 --> 00:42:52,960
query isn't one obvious use case

1102
00:42:49,839 --> 00:42:55,839
something like find these things

1103
00:42:52,960 --> 00:42:56,960
in my json and once i found them i want

1104
00:42:55,839 --> 00:42:59,759
to delete them

1105
00:42:56,960 --> 00:43:00,480
so that would mean that um returning an

1106
00:42:59,760 --> 00:43:03,280
array

1107
00:43:00,480 --> 00:43:06,640
containing copies of these items will

1108
00:43:03,280 --> 00:43:06,640
not really be helpful right

1109
00:43:08,720 --> 00:43:13,118
because then you would need to go back

1110
00:43:11,520 --> 00:43:15,520
to the original json

1111
00:43:13,119 --> 00:43:17,119
and find these nodes at the point of

1112
00:43:15,520 --> 00:43:20,640
running the json path query

1113
00:43:17,119 --> 00:43:20,640
was to find these notes right

1114
00:43:22,960 --> 00:43:26,480
that's the thought and the takeaway from

1115
00:43:26,079 --> 00:43:29,920
that

1116
00:43:26,480 --> 00:43:31,599
is that um there are

1117
00:43:29,920 --> 00:43:33,680
different ways to use the result of a

1118
00:43:31,599 --> 00:43:35,520
json path that are wildly different in

1119
00:43:33,680 --> 00:43:36,399
the requirements they would impose on

1120
00:43:35,520 --> 00:43:39,359
the

1121
00:43:36,400 --> 00:43:40,720
on whatever comes back um i don't know

1122
00:43:39,359 --> 00:43:42,640
what i take from that but it's an

1123
00:43:40,720 --> 00:43:46,640
observation that sounds true to me

1124
00:43:42,640 --> 00:43:48,879
uh glenn yeah i'm

1125
00:43:46,640 --> 00:43:49,920
sympathetic to that uh issue of memory

1126
00:43:48,880 --> 00:43:53,119
allocation

1127
00:43:49,920 --> 00:43:54,880
uh and one of the implementations i

1128
00:43:53,119 --> 00:43:58,800
worked on um

1129
00:43:54,880 --> 00:44:01,040
had a uh essentially a dom of the json

1130
00:43:58,800 --> 00:44:02,720
file as input and a collection of

1131
00:44:01,040 --> 00:44:04,400
pointers as output

1132
00:44:02,720 --> 00:44:06,480
into the dom and the the reason for that

1133
00:44:04,400 --> 00:44:08,800
was so we could mutate the contents and

1134
00:44:06,480 --> 00:44:11,280
then produce a new document

1135
00:44:08,800 --> 00:44:12,800
by picking out particular points and

1136
00:44:11,280 --> 00:44:14,720
mutating the nodes

1137
00:44:12,800 --> 00:44:17,119
but i think the crucial thing for me is

1138
00:44:14,720 --> 00:44:18,640
that in the spec we need to be very

1139
00:44:17,119 --> 00:44:21,440
clear

1140
00:44:18,640 --> 00:44:22,240
what the difference is between a single

1141
00:44:21,440 --> 00:44:25,280
node

1142
00:44:22,240 --> 00:44:27,520
uh result and an array

1143
00:44:25,280 --> 00:44:28,319
of length one and think in the past

1144
00:44:27,520 --> 00:44:31,200
there have been some

1145
00:44:28,319 --> 00:44:33,680
ambiguities there and confusions so you

1146
00:44:31,200 --> 00:44:36,640
know we might want to

1147
00:44:33,680 --> 00:44:38,720
give options to return a single item but

1148
00:44:36,640 --> 00:44:40,319
we need to be really clear in the spec

1149
00:44:38,720 --> 00:44:43,279
when it is a single item when it's an

1150
00:44:40,319 --> 00:44:43,279
array of length one

1151
00:44:45,839 --> 00:44:52,240
okay um kirsten

1152
00:44:50,400 --> 00:44:53,680
yeah so basically i think the the

1153
00:44:52,240 --> 00:44:57,598
abstract model should be

1154
00:44:53,680 --> 00:45:01,118
that we get a json tree as as input

1155
00:44:57,599 --> 00:45:04,079
and this json tree has positions

1156
00:45:01,119 --> 00:45:05,680
in it which which are the various places

1157
00:45:04,079 --> 00:45:07,040
in the other branches and the leaves and

1158
00:45:05,680 --> 00:45:11,680
so on

1159
00:45:07,040 --> 00:45:15,440
and then what what a json path spec

1160
00:45:11,680 --> 00:45:18,480
gives you is a set of those positions

1161
00:45:15,440 --> 00:45:20,480
subset or essentially a mapping of these

1162
00:45:18,480 --> 00:45:22,240
positions to a boolean or however you

1163
00:45:20,480 --> 00:45:25,920
want to think about it

1164
00:45:22,240 --> 00:45:29,118
but it just selects part of that tree

1165
00:45:25,920 --> 00:45:30,400
and i think what part of the confusion

1166
00:45:29,119 --> 00:45:33,680
is that

1167
00:45:30,400 --> 00:45:36,000
the discussion then always turned into

1168
00:45:33,680 --> 00:45:37,118
how do we represent this in environment

1169
00:45:36,000 --> 00:45:39,200
x

1170
00:45:37,119 --> 00:45:42,319
and of course there is no natural

1171
00:45:39,200 --> 00:45:45,520
representation for the set of positions

1172
00:45:42,319 --> 00:45:48,240
for instance in json so

1173
00:45:45,520 --> 00:45:51,040
stefan's original document talks about

1174
00:45:48,240 --> 00:45:53,919
returning the values at those positions

1175
00:45:51,040 --> 00:45:55,359
or returning output parts that are

1176
00:45:53,920 --> 00:45:58,400
essentially json pointers

1177
00:45:55,359 --> 00:46:00,560
in into the structure

1178
00:45:58,400 --> 00:46:01,440
and both are representations but i think

1179
00:46:00,560 --> 00:46:03,119
we should not

1180
00:46:01,440 --> 00:46:04,880
think in terms of those representations

1181
00:46:03,119 --> 00:46:08,319
we should think in terms of the

1182
00:46:04,880 --> 00:46:10,240
concept of marking the json tree with

1183
00:46:08,319 --> 00:46:12,079
part of the result and not part of the

1184
00:46:10,240 --> 00:46:15,680
result and that's essentially what the

1185
00:46:12,079 --> 00:46:15,680
json path expression reach ups

1186
00:46:18,880 --> 00:46:22,160
i put myself on the cue so i'm going to

1187
00:46:20,480 --> 00:46:24,160
speak here listening to this

1188
00:46:22,160 --> 00:46:26,160
makes me a little bit pessimistic about

1189
00:46:24,160 --> 00:46:28,960
our ability to specify

1190
00:46:26,160 --> 00:46:29,359
uh the output because i i can think of

1191
00:46:28,960 --> 00:46:31,200
you know

1192
00:46:29,359 --> 00:46:32,880
so many different needs you know we use

1193
00:46:31,200 --> 00:46:33,919
this very very heavily in a couple of

1194
00:46:32,880 --> 00:46:36,480
products

1195
00:46:33,920 --> 00:46:37,839
at aws you know that we're running a

1196
00:46:36,480 --> 00:46:40,480
million events a second

1197
00:46:37,839 --> 00:46:41,839
through something and you know you if

1198
00:46:40,480 --> 00:46:43,920
you match an event then you would you

1199
00:46:41,839 --> 00:46:46,240
could apply a json path to the event

1200
00:46:43,920 --> 00:46:47,760
to say what would what the customer what

1201
00:46:46,240 --> 00:46:48,560
the what the receiver of the event would

1202
00:46:47,760 --> 00:46:50,160
see

1203
00:46:48,560 --> 00:46:51,599
and if you said something like dollar

1204
00:46:50,160 --> 00:46:54,078
dot a dot b

1205
00:46:51,599 --> 00:46:55,200
and that was just the number four then

1206
00:46:54,079 --> 00:46:56,720
that meant that the

1207
00:46:55,200 --> 00:46:58,640
customer expected to get a four and

1208
00:46:56,720 --> 00:47:00,000
that's all i expected to get and i think

1209
00:46:58,640 --> 00:47:02,720
that's also a perfectly used

1210
00:47:00,000 --> 00:47:03,280
reasonable use case um which would be

1211
00:47:02,720 --> 00:47:06,240
you know

1212
00:47:03,280 --> 00:47:07,040
it would be unfortunate if our spec uh

1213
00:47:06,240 --> 00:47:09,359
ruled out

1214
00:47:07,040 --> 00:47:11,440
any of these perfectly reasonable use

1215
00:47:09,359 --> 00:47:13,598
cases i i've just heard about

1216
00:47:11,440 --> 00:47:14,720
which bothers me a little bit because i

1217
00:47:13,599 --> 00:47:16,319
it would also be nice to

1218
00:47:14,720 --> 00:47:17,759
have you know a level of precision about

1219
00:47:16,319 --> 00:47:20,079
what you can

1220
00:47:17,760 --> 00:47:21,599
expect to get and to the expected people

1221
00:47:20,079 --> 00:47:23,599
who map it into a new programming

1222
00:47:21,599 --> 00:47:24,640
language wouldn't be surprised by the

1223
00:47:23,599 --> 00:47:25,599
mapping you get

1224
00:47:24,640 --> 00:47:28,720
and yeah i know i don't know what i

1225
00:47:25,599 --> 00:47:31,040
think about this yet anyhow marco

1226
00:47:28,720 --> 00:47:33,439
just to complicate things no further if

1227
00:47:31,040 --> 00:47:35,680
you have like an array of arrays

1228
00:47:33,440 --> 00:47:37,680
at the top level and you have one array

1229
00:47:35,680 --> 00:47:40,000
that contains only one

1230
00:47:37,680 --> 00:47:41,759
one such element one array when you then

1231
00:47:40,000 --> 00:47:44,400
select all the

1232
00:47:41,760 --> 00:47:45,119
all the elements of the top level array

1233
00:47:44,400 --> 00:47:48,559
you will get

1234
00:47:45,119 --> 00:47:51,200
as a result one array so is the result

1235
00:47:48,559 --> 00:47:52,000
like under one array or a singleton

1236
00:47:51,200 --> 00:47:54,480
array that contains

1237
00:47:52,000 --> 00:47:55,440
an array or is it the array is that the

1238
00:47:54,480 --> 00:47:59,920
top level array

1239
00:47:55,440 --> 00:47:59,920
you know it's it's confusing

1240
00:48:02,640 --> 00:48:08,240
glenn back to you

1241
00:48:06,240 --> 00:48:11,040
that was essentially a similar point

1242
00:48:08,240 --> 00:48:14,959
really um the

1243
00:48:11,040 --> 00:48:18,079
my mom went blank come back to me

1244
00:48:14,960 --> 00:48:21,280
okay back to rick

1245
00:48:18,079 --> 00:48:23,520
this is a discussion around return by

1246
00:48:21,280 --> 00:48:25,680
value or return by reference

1247
00:48:23,520 --> 00:48:26,880
and there are pros and cons to both of

1248
00:48:25,680 --> 00:48:28,960
course uh

1249
00:48:26,880 --> 00:48:31,040
i think carsten touched on the fact that

1250
00:48:28,960 --> 00:48:31,440
we we have the mechanisms for reference

1251
00:48:31,040 --> 00:48:33,680
it's

1252
00:48:31,440 --> 00:48:35,359
it's jsonpointer it exists it will give

1253
00:48:33,680 --> 00:48:38,480
us a reference back into

1254
00:48:35,359 --> 00:48:40,640
to the original tree um

1255
00:48:38,480 --> 00:48:43,280
i think this is solvable i think it just

1256
00:48:40,640 --> 00:48:46,240
needs to be covered and not ignored

1257
00:48:43,280 --> 00:48:49,839
so i'm not too worried but it's and i'm

1258
00:48:46,240 --> 00:48:49,839
glad we're having this discussion

1259
00:48:53,440 --> 00:48:57,680
okay uh karsten yeah again i think it's

1260
00:48:57,280 --> 00:48:59,599
really

1261
00:48:57,680 --> 00:49:02,879
useful to be able to separate the

1262
00:48:59,599 --> 00:49:04,960
abstract concept of the result of a

1263
00:49:02,880 --> 00:49:06,640
json path expression and the various

1264
00:49:04,960 --> 00:49:10,240
forms in which they

1265
00:49:06,640 --> 00:49:12,000
they can be returned and i said tim i

1266
00:49:10,240 --> 00:49:14,879
think the the example you gave

1267
00:49:12,000 --> 00:49:17,839
where you expect the json path

1268
00:49:14,880 --> 00:49:19,280
expression to return exactly one

1269
00:49:17,839 --> 00:49:21,440
position and they are actually

1270
00:49:19,280 --> 00:49:23,200
interested in the value from that

1271
00:49:21,440 --> 00:49:24,960
that is indeed a very common use case

1272
00:49:23,200 --> 00:49:28,160
and and we definitely should

1273
00:49:24,960 --> 00:49:30,640
make sure that gets some attention

1274
00:49:28,160 --> 00:49:31,759
for a json path processor it's currently

1275
00:49:30,640 --> 00:49:34,879
not easy to find

1276
00:49:31,760 --> 00:49:36,800
out whether that is what you actually

1277
00:49:34,880 --> 00:49:39,839
want

1278
00:49:36,800 --> 00:49:41,760
um so do you do you want to get a set of

1279
00:49:39,839 --> 00:49:42,880
nodes back or do you want to get a

1280
00:49:41,760 --> 00:49:44,559
single node

1281
00:49:42,880 --> 00:49:46,160
back so it essentially becomes an

1282
00:49:44,559 --> 00:49:49,359
exception if if

1283
00:49:46,160 --> 00:49:50,720
there is more than one node or even an

1284
00:49:49,359 --> 00:49:53,839
exception if there is only

1285
00:49:50,720 --> 00:49:54,959
only zero nodes being returned so that

1286
00:49:53,839 --> 00:49:57,279
that's one of the

1287
00:49:54,960 --> 00:49:58,160
the little problems that i have with

1288
00:49:57,280 --> 00:50:00,400
jsonpath

1289
00:49:58,160 --> 00:50:02,319
where i don't know whether we are going

1290
00:50:00,400 --> 00:50:05,440
to to solve that

1291
00:50:02,319 --> 00:50:07,279
um but i think the the

1292
00:50:05,440 --> 00:50:09,280
model the high level model should be

1293
00:50:07,280 --> 00:50:10,960
flexible enough to

1294
00:50:09,280 --> 00:50:13,839
actually address these different use

1295
00:50:10,960 --> 00:50:13,839
cases

1296
00:50:14,160 --> 00:50:18,319
interesting remember what i was going to

1297
00:50:18,000 --> 00:50:21,520
say

1298
00:50:18,319 --> 00:50:22,640
um the um i'm sympathetic to the idea of

1299
00:50:21,520 --> 00:50:26,319
an abstract model

1300
00:50:22,640 --> 00:50:28,720
and you know the idea of just coloring a

1301
00:50:26,319 --> 00:50:32,000
tree to say which nodes were selected

1302
00:50:28,720 --> 00:50:32,319
is great but uh looking at the consensus

1303
00:50:32,000 --> 00:50:34,000
of

1304
00:50:32,319 --> 00:50:35,520
current implementations you know that

1305
00:50:34,000 --> 00:50:37,040
excellent project that was done by

1306
00:50:35,520 --> 00:50:40,000
someone else

1307
00:50:37,040 --> 00:50:41,759
which covers 30 odd implementations that

1308
00:50:40,000 --> 00:50:42,640
uh there is often duplication in the

1309
00:50:41,760 --> 00:50:45,680
outputs

1310
00:50:42,640 --> 00:50:47,440
and um and questions about the ordering

1311
00:50:45,680 --> 00:50:49,200
and if we settle on an abstract model

1312
00:50:47,440 --> 00:50:49,680
that rules out that then we're going to

1313
00:50:49,200 --> 00:50:51,759
cause

1314
00:50:49,680 --> 00:50:53,680
pain for all the implementers migrating

1315
00:50:51,760 --> 00:50:56,079
to the the standard

1316
00:50:53,680 --> 00:50:59,040
so just concerned about about being

1317
00:50:56,079 --> 00:50:59,040
overly prescriptive

1318
00:51:02,880 --> 00:51:05,359
michael

1319
00:51:05,920 --> 00:51:08,960
yeah i must mostly wanted to double down

1320
00:51:08,079 --> 00:51:11,839
on the fact that

1321
00:51:08,960 --> 00:51:12,559
i i don't think it's the biggest problem

1322
00:51:11,839 --> 00:51:14,319
here is

1323
00:51:12,559 --> 00:51:16,480
the distinction between reference

1324
00:51:14,319 --> 00:51:19,839
between and and copies and

1325
00:51:16,480 --> 00:51:22,000
the the the the allocation comes from

1326
00:51:19,839 --> 00:51:23,359
from the the allocation problems comes

1327
00:51:22,000 --> 00:51:26,960
from uh

1328
00:51:23,359 --> 00:51:30,799
the the selection uh problem so uh

1329
00:51:26,960 --> 00:51:34,000
the the the arity of the results uh is

1330
00:51:30,800 --> 00:51:36,720
is what i think uh is

1331
00:51:34,000 --> 00:51:37,599
one thing matters most here is do we

1332
00:51:36,720 --> 00:51:41,040
want

1333
00:51:37,599 --> 00:51:41,599
to uh force multiple iot or do we want

1334
00:51:41,040 --> 00:51:45,040
to uh

1335
00:51:41,599 --> 00:51:47,280
to somehow automatically detect the

1336
00:51:45,040 --> 00:51:48,800
one versus the multipolarity or do we

1337
00:51:47,280 --> 00:51:49,680
want to let the user select in the

1338
00:51:48,800 --> 00:51:52,720
syntax

1339
00:51:49,680 --> 00:51:55,118
whether you expect one result or

1340
00:51:52,720 --> 00:51:55,118
multiple

1341
00:51:58,079 --> 00:52:04,319
rick it occurs to me i've posted this in

1342
00:52:02,240 --> 00:52:06,240
the java but the java's got such long

1343
00:52:04,319 --> 00:52:07,440
lag on it i decided just to step to the

1344
00:52:06,240 --> 00:52:10,558
mic there's

1345
00:52:07,440 --> 00:52:13,599
there's without affecting the the

1346
00:52:10,559 --> 00:52:17,119
the syntax or the uh search

1347
00:52:13,599 --> 00:52:19,280
mechanisms etc of json path

1348
00:52:17,119 --> 00:52:20,400
surely you can specify a find first

1349
00:52:19,280 --> 00:52:23,359
operation and

1350
00:52:20,400 --> 00:52:24,160
compare it to a find all operation and

1351
00:52:23,359 --> 00:52:26,480
therefore

1352
00:52:24,160 --> 00:52:28,078
specify find first will perform the

1353
00:52:26,480 --> 00:52:31,680
following jsonpath

1354
00:52:28,079 --> 00:52:34,800
evaluation as detailed in section x

1355
00:52:31,680 --> 00:52:36,879
and we'll return the first result

1356
00:52:34,800 --> 00:52:39,040
and a find all will do this but we'll

1357
00:52:36,880 --> 00:52:42,240
return all results found

1358
00:52:39,040 --> 00:52:44,640
as an array and you can also add a sort

1359
00:52:42,240 --> 00:52:47,359
of a second dimension to this to say

1360
00:52:44,640 --> 00:52:48,720
find by ref return by reference or

1361
00:52:47,359 --> 00:52:51,440
return by value

1362
00:52:48,720 --> 00:52:53,759
so as an implementer i can say i don't

1363
00:52:51,440 --> 00:52:55,760
care about these by values because in my

1364
00:52:53,760 --> 00:52:58,720
environment it's not important

1365
00:52:55,760 --> 00:53:00,720
i will return via ref and we can specify

1366
00:52:58,720 --> 00:53:01,680
by reference means return adjacent

1367
00:53:00,720 --> 00:53:03,919
pointer as in

1368
00:53:01,680 --> 00:53:05,520
rfc i can't remember the number but it's

1369
00:53:03,920 --> 00:53:08,160
specified

1370
00:53:05,520 --> 00:53:08,960
so i think that gives us the flexibility

1371
00:53:08,160 --> 00:53:11,759
without

1372
00:53:08,960 --> 00:53:13,520
having to have different expression

1373
00:53:11,760 --> 00:53:16,079
forms or different search

1374
00:53:13,520 --> 00:53:17,680
path criteria etc we can still have that

1375
00:53:16,079 --> 00:53:20,079
standardization of how you find

1376
00:53:17,680 --> 00:53:21,200
these things but depending on how you

1377
00:53:20,079 --> 00:53:24,319
call them

1378
00:53:21,200 --> 00:53:26,000
answers do i end first and return a copy

1379
00:53:24,319 --> 00:53:28,558
because i'm doing something deeply

1380
00:53:26,000 --> 00:53:31,040
asynchronous and only care about one

1381
00:53:28,559 --> 00:53:32,640
or do i actually am i just doing a

1382
00:53:31,040 --> 00:53:33,040
search over a dom tree where i want to

1383
00:53:32,640 --> 00:53:34,879
find

1384
00:53:33,040 --> 00:53:36,720
some of them but i don't want to get the

1385
00:53:34,880 --> 00:53:39,440
cost of the copy

1386
00:53:36,720 --> 00:53:40,959
but still the the syntax of doing the

1387
00:53:39,440 --> 00:53:43,680
search itself

1388
00:53:40,960 --> 00:53:45,119
is is the same that would be my

1389
00:53:43,680 --> 00:53:46,799
compromise

1390
00:53:45,119 --> 00:53:48,160
so i put myself on the queue to ask you

1391
00:53:46,800 --> 00:53:50,079
a question rick which is are you

1392
00:53:48,160 --> 00:53:50,960
proposing that we actually specify an

1393
00:53:50,079 --> 00:53:52,400
api

1394
00:53:50,960 --> 00:53:54,160
saying you know i want pointers or i

1395
00:53:52,400 --> 00:53:55,520
want values

1396
00:53:54,160 --> 00:53:57,279
sorry can you say again you broke up in

1397
00:53:55,520 --> 00:53:58,720
the middle of that for me sorry are you

1398
00:53:57,280 --> 00:54:01,280
are you suggesting that we actually

1399
00:53:58,720 --> 00:54:03,598
specify an apis where whereby the user

1400
00:54:01,280 --> 00:54:07,280
of a jsonpath can say whether they want

1401
00:54:03,599 --> 00:54:09,520
references back or values i i'm not sure

1402
00:54:07,280 --> 00:54:10,079
i go as far as an api because we we step

1403
00:54:09,520 --> 00:54:11,920
into

1404
00:54:10,079 --> 00:54:13,119
well what's the binding for my favorite

1405
00:54:11,920 --> 00:54:16,960
language

1406
00:54:13,119 --> 00:54:21,119
but i think some elegant

1407
00:54:16,960 --> 00:54:24,720
way of saying uh an implementation

1408
00:54:21,119 --> 00:54:26,880
may provide a mechanism to return

1409
00:54:24,720 --> 00:54:28,640
by value and here are the considerations

1410
00:54:26,880 --> 00:54:31,280
that need to be applied

1411
00:54:28,640 --> 00:54:32,160
or a mechanism that should return by

1412
00:54:31,280 --> 00:54:35,280
reference

1413
00:54:32,160 --> 00:54:37,118
and when we say reference we mean json

1414
00:54:35,280 --> 00:54:40,240
pointer which would be my proposal

1415
00:54:37,119 --> 00:54:41,280
um and the following things apply and

1416
00:54:40,240 --> 00:54:42,879
you could have

1417
00:54:41,280 --> 00:54:45,280
another section which differentiates

1418
00:54:42,880 --> 00:54:47,599
between find me the first and find me

1419
00:54:45,280 --> 00:54:49,520
all with relevant considerations but

1420
00:54:47,599 --> 00:54:50,240
don't say and here's how you do it in

1421
00:54:49,520 --> 00:54:52,400
rust

1422
00:54:50,240 --> 00:54:54,160
and here's how you do it in insert

1423
00:54:52,400 --> 00:54:57,200
favorite language here

1424
00:54:54,160 --> 00:54:59,279
that's that's not gonna work so really

1425
00:54:57,200 --> 00:55:01,680
this sounds like you're suggesting

1426
00:54:59,280 --> 00:55:02,480
some non-normative implementation

1427
00:55:01,680 --> 00:55:05,759
guidelines

1428
00:55:02,480 --> 00:55:08,880
as part of the document is that right

1429
00:55:05,760 --> 00:55:09,760
i would go for normative to say look the

1430
00:55:08,880 --> 00:55:11,599
working group has

1431
00:55:09,760 --> 00:55:12,960
has realized that there are use cases

1432
00:55:11,599 --> 00:55:15,200
where you want one

1433
00:55:12,960 --> 00:55:16,799
item and you can stop the search as soon

1434
00:55:15,200 --> 00:55:19,118
as you hit one item

1435
00:55:16,799 --> 00:55:20,160
um but there are also use cases where

1436
00:55:19,119 --> 00:55:24,160
you want all

1437
00:55:20,160 --> 00:55:25,680
and there are uh an implementation may

1438
00:55:24,160 --> 00:55:28,879
realize that there are

1439
00:55:25,680 --> 00:55:30,799
performance implications etc associated

1440
00:55:28,880 --> 00:55:35,040
with finding first and finding all

1441
00:55:30,799 --> 00:55:36,960
so this is or should it be normative i i

1442
00:55:35,040 --> 00:55:40,160
don't know but it should definitely be

1443
00:55:36,960 --> 00:55:42,000
strong guidance for implementers to say

1444
00:55:40,160 --> 00:55:43,440
really you should implement this twice

1445
00:55:42,000 --> 00:55:45,359
and if and if this

1446
00:55:43,440 --> 00:55:46,559
uh if the output of the working group is

1447
00:55:45,359 --> 00:55:49,200
picked up by ecma

1448
00:55:46,559 --> 00:55:50,400
or or the java standardization guys or

1449
00:55:49,200 --> 00:55:52,078
whatever and they say

1450
00:55:50,400 --> 00:55:54,559
well yeah we're going to have this in

1451
00:55:52,079 --> 00:55:56,480
our next version of our language

1452
00:55:54,559 --> 00:55:58,880
then this guidance can apply to them to

1453
00:55:56,480 --> 00:56:01,520
say you need to consider

1454
00:55:58,880 --> 00:56:03,280
this conversation go go go i've heard

1455
00:56:01,520 --> 00:56:05,440
that we're just about to get a reboot

1456
00:56:03,280 --> 00:56:06,880
of the entire infrastructure for this

1457
00:56:05,440 --> 00:56:07,839
and we'll be offline for about five

1458
00:56:06,880 --> 00:56:10,079
minutes

1459
00:56:07,839 --> 00:56:11,839
um there's a problem with the chat which

1460
00:56:10,079 --> 00:56:13,920
has broken everything and so they

1461
00:56:11,839 --> 00:56:15,599
are rebooting the entire medical

1462
00:56:13,920 --> 00:56:17,839
infrastructure so just so you know when

1463
00:56:15,599 --> 00:56:19,680
you disappear

1464
00:56:17,839 --> 00:56:22,799
okay let's keep going let's let's keep

1465
00:56:19,680 --> 00:56:22,799
going until we disappear

1466
00:56:25,119 --> 00:56:30,960
i'll give way to casting yeah i just

1467
00:56:28,960 --> 00:56:32,240
wanted to point out you you said fine

1468
00:56:30,960 --> 00:56:35,280
first

1469
00:56:32,240 --> 00:56:39,040
and of course another interesting

1470
00:56:35,280 --> 00:56:41,200
uh case is to find any

1471
00:56:39,040 --> 00:56:42,799
uh which is different from trying first

1472
00:56:41,200 --> 00:56:44,879
that you don't get to guarantee that

1473
00:56:42,799 --> 00:56:48,079
it's actually the first

1474
00:56:44,880 --> 00:56:50,559
um so um yeah

1475
00:56:48,079 --> 00:56:52,160
i think right in clarification when i

1476
00:56:50,559 --> 00:56:54,240
said find first i meant

1477
00:56:52,160 --> 00:56:55,200
return me the first one you find

1478
00:56:54,240 --> 00:56:57,279
depending on

1479
00:56:55,200 --> 00:56:58,799
whatever the express the expression may

1480
00:56:57,280 --> 00:57:00,960
say i want you to search from the back

1481
00:56:58,799 --> 00:57:01,759
going forwards or or depth first or

1482
00:57:00,960 --> 00:57:04,240
whatever

1483
00:57:01,760 --> 00:57:05,599
i mean the difference between fine fight

1484
00:57:04,240 --> 00:57:08,558
i meant to find any

1485
00:57:05,599 --> 00:57:09,040
as compared to find all but i can't find

1486
00:57:08,559 --> 00:57:12,640
first

1487
00:57:09,040 --> 00:57:13,599
um yeah so i think the if the mental

1488
00:57:12,640 --> 00:57:16,078
model is this

1489
00:57:13,599 --> 00:57:17,440
this model that we didn't call marking

1490
00:57:16,079 --> 00:57:21,040
the tree

1491
00:57:17,440 --> 00:57:24,480
um then we can derive

1492
00:57:21,040 --> 00:57:27,759
those various api variants

1493
00:57:24,480 --> 00:57:30,720
from that model easily yes

1494
00:57:27,760 --> 00:57:32,799
absolutely we get a really nice

1495
00:57:30,720 --> 00:57:34,558
separation of concern we have one mental

1496
00:57:32,799 --> 00:57:38,240
model that that governs

1497
00:57:34,559 --> 00:57:41,359
uh jsonpath and we we have

1498
00:57:38,240 --> 00:57:44,799
the ability to specify a few apis

1499
00:57:41,359 --> 00:57:47,520
or abstract apis that we might uh

1500
00:57:44,799 --> 00:57:48,240
want to see but of course that not

1501
00:57:47,520 --> 00:57:52,240
everybody

1502
00:57:48,240 --> 00:57:52,240
has to implement all of them

1503
00:57:52,839 --> 00:57:55,839
yes

1504
00:58:06,839 --> 00:58:09,839
oops

1505
00:58:17,040 --> 00:58:23,839
um my my

1506
00:58:20,079 --> 00:58:23,839
my meeting is back

1507
00:58:25,760 --> 00:58:29,839
same here it was a very quick reboot

1508
00:58:28,640 --> 00:58:33,200
that was really fast

1509
00:58:29,839 --> 00:58:36,240
for me as well it may bounce again

1510
00:58:33,200 --> 00:58:38,640
who knows whoever did that i'm super

1511
00:58:36,240 --> 00:58:38,640
impressed

1512
00:58:43,760 --> 00:58:51,839
um james is restarting his screen share

1513
00:58:53,839 --> 00:58:59,359
there we go that should be back

1514
00:58:57,040 --> 00:58:59,359
here's

1515
00:59:03,760 --> 00:59:09,119
i'm michael sure what happened to the

1516
00:59:04,960 --> 00:59:09,119
chat oh the chat

1517
00:59:11,599 --> 00:59:18,400
wait a second there is there seems to be

1518
00:59:13,520 --> 00:59:19,839
no chat anymore

1519
00:59:18,400 --> 00:59:21,520
they said they had chat problems which

1520
00:59:19,839 --> 00:59:25,359
was the cause of the reboot so

1521
00:59:21,520 --> 00:59:26,640
uh the chat might be running behind

1522
00:59:25,359 --> 00:59:29,200
well here it is it seems to have

1523
00:59:26,640 --> 00:59:29,200
returned

1524
00:59:31,119 --> 00:59:34,160
but there's nothing in it

1525
00:59:44,559 --> 00:59:48,000
james your screen share isn't working

1526
00:59:46,640 --> 00:59:49,920
it's not vital

1527
00:59:48,000 --> 01:00:01,839
but you might need to hard refresh your

1528
00:59:49,920 --> 01:00:01,839
browser or something oops

1529
01:00:12,720 --> 01:00:15,839
okay it sounds like we're mostly here

1530
01:00:14,799 --> 01:00:17,520
again

1531
01:00:15,839 --> 01:00:19,759
james's screen share is having trouble

1532
01:00:17,520 --> 01:00:22,559
but i don't think it's that essential

1533
01:00:19,760 --> 01:00:24,079
we had we were on the last delineated

1534
01:00:22,559 --> 01:00:25,520
item i think on the agenda which

1535
01:00:24,079 --> 01:00:28,640
produced some i thought some

1536
01:00:25,520 --> 01:00:29,839
really interesting discussion um let me

1537
01:00:28,640 --> 01:00:32,799
see if i can try

1538
01:00:29,839 --> 01:00:33,839
and and and and summarize where we've

1539
01:00:32,799 --> 01:00:37,759
got to

1540
01:00:33,839 --> 01:00:40,799
is that i think we agree that the

1541
01:00:37,760 --> 01:00:43,680
variety of uses

1542
01:00:40,799 --> 01:00:44,720
to which a the evaluation of a json path

1543
01:00:43,680 --> 01:00:48,078
expression

1544
01:00:44,720 --> 01:00:51,118
can be put um makes it

1545
01:00:48,079 --> 01:00:52,079
difficult to be very prescriptive well

1546
01:00:51,119 --> 01:00:53,280
and also the different number of

1547
01:00:52,079 --> 01:00:54,400
programming languages is going to be

1548
01:00:53,280 --> 01:00:57,200
embedded in

1549
01:00:54,400 --> 01:00:58,799
are going to make it hard to be terribly

1550
01:00:57,200 --> 01:01:00,480
prescriptive about exactly what form

1551
01:00:58,799 --> 01:01:03,280
that return takes

1552
01:01:00,480 --> 01:01:05,119
but uh there is certainly scope for us

1553
01:01:03,280 --> 01:01:08,319
to write strong guidance

1554
01:01:05,119 --> 01:01:10,720
into the uh document for

1555
01:01:08,319 --> 01:01:12,319
implementers about the kinds of

1556
01:01:10,720 --> 01:01:16,399
requirements they should be

1557
01:01:12,319 --> 01:01:16,400
uh prepared to to to solve

1558
01:01:17,280 --> 01:01:20,720
any other key points from this

1559
01:01:19,119 --> 01:01:22,799
discussion we want to capture

1560
01:01:20,720 --> 01:01:25,200
or does anybody want to add anything

1561
01:01:22,799 --> 01:01:27,599
further yeah rick go ahead

1562
01:01:25,200 --> 01:01:28,319
so one last thought on this subject i

1563
01:01:27,599 --> 01:01:31,200
think it

1564
01:01:28,319 --> 01:01:33,240
may be worth in the actual json path

1565
01:01:31,200 --> 01:01:37,040
specification

1566
01:01:33,240 --> 01:01:40,319
enumerating these different methods of

1567
01:01:37,040 --> 01:01:42,880
of of of acquiring a result

1568
01:01:40,319 --> 01:01:44,160
the reason being um i'm doing a fair

1569
01:01:42,880 --> 01:01:45,359
amount of heavy lifting with jason

1570
01:01:44,160 --> 01:01:48,960
schemer at the moment

1571
01:01:45,359 --> 01:01:52,160
and jason schemer uses jason pointer

1572
01:01:48,960 --> 01:01:55,359
as part of its structure so

1573
01:01:52,160 --> 01:01:58,399
a certain part of a schema is defined as

1574
01:01:55,359 --> 01:02:01,839
this is a json pointer to somewhere else

1575
01:01:58,400 --> 01:02:05,280
now if that was to be extended to say

1576
01:02:01,839 --> 01:02:08,400
or changed to say this is a json path

1577
01:02:05,280 --> 01:02:10,400
to somewhere else but the

1578
01:02:08,400 --> 01:02:13,599
the consumer of that json path is

1579
01:02:10,400 --> 01:02:17,200
expecting only a single result

1580
01:02:13,599 --> 01:02:19,599
then whoever is specifying that

1581
01:02:17,200 --> 01:02:21,680
mechanism needs to be able to say

1582
01:02:19,599 --> 01:02:24,000
this is a json path returning only a

1583
01:02:21,680 --> 01:02:25,598
single result as defined in rfc blah

1584
01:02:24,000 --> 01:02:28,559
blah blah

1585
01:02:25,599 --> 01:02:30,160
type section three which defines a json

1586
01:02:28,559 --> 01:02:32,000
path returning a single result as

1587
01:02:30,160 --> 01:02:34,879
compared to a json path returning

1588
01:02:32,000 --> 01:02:36,880
multiple results so

1589
01:02:34,880 --> 01:02:39,680
rather than just advice to implementers

1590
01:02:36,880 --> 01:02:42,160
i think it's worth having these things

1591
01:02:39,680 --> 01:02:43,279
normatively named so that they can be

1592
01:02:42,160 --> 01:02:46,720
referred to by

1593
01:02:43,280 --> 01:02:48,160
other other specifications

1594
01:02:46,720 --> 01:02:49,839
i like that point a lot of having

1595
01:02:48,160 --> 01:02:50,879
normative names to specify these

1596
01:02:49,839 --> 01:02:54,880
behaviors

1597
01:02:50,880 --> 01:02:56,000
um glenn and there was discussion about

1598
01:02:54,880 --> 01:02:59,599
whether to call

1599
01:02:56,000 --> 01:03:00,880
one of the apis find first or find any

1600
01:02:59,599 --> 01:03:02,880
uh i think that raises a really

1601
01:03:00,880 --> 01:03:05,039
important point which is

1602
01:03:02,880 --> 01:03:06,079
what's our attitude to non-determinism

1603
01:03:05,039 --> 01:03:08,880
in the spec

1604
01:03:06,079 --> 01:03:09,920
um i see non-determinism has been a a

1605
01:03:08,880 --> 01:03:12,799
strength

1606
01:03:09,920 --> 01:03:13,599
because it gives you freedom to

1607
01:03:12,799 --> 01:03:15,520
implement

1608
01:03:13,599 --> 01:03:17,599
uh in a more efficient way or a

1609
01:03:15,520 --> 01:03:19,440
different way some people think

1610
01:03:17,599 --> 01:03:20,720
uh non-determinism in a spec is a

1611
01:03:19,440 --> 01:03:22,319
weakness and it's something to be

1612
01:03:20,720 --> 01:03:23,759
avoided at all across

1613
01:03:22,319 --> 01:03:25,440
so i just want to raise that in case

1614
01:03:23,760 --> 01:03:31,839
anybody has strong feelings about that

1615
01:03:25,440 --> 01:03:31,839
apart from me

1616
01:03:32,079 --> 01:03:39,280
it's that is definitely a tricky point

1617
01:03:35,839 --> 01:03:42,480
um and i don't know what i think marco

1618
01:03:39,280 --> 01:03:45,599
i i have some strong feelings um against

1619
01:03:42,480 --> 01:03:49,359
uh using json path as a way

1620
01:03:45,599 --> 01:03:53,119
to point to things just because other

1621
01:03:49,359 --> 01:03:53,440
uh some some other standards of pointers

1622
01:03:53,119 --> 01:03:55,680
are

1623
01:03:53,440 --> 01:03:57,599
too weak to actually find their ways

1624
01:03:55,680 --> 01:04:00,720
through a document that has

1625
01:03:57,599 --> 01:04:03,039
a a complex schema in in particular json

1626
01:04:00,720 --> 01:04:06,078
pointer doesn't have the ability to

1627
01:04:03,039 --> 01:04:09,599
to find things through arrays um

1628
01:04:06,079 --> 01:04:13,039
i mean other than using using positions

1629
01:04:09,599 --> 01:04:15,200
and so i seen people drawn to

1630
01:04:13,039 --> 01:04:17,680
jason path precisely for that reason for

1631
01:04:15,200 --> 01:04:19,038
the the expressiveness of json path but

1632
01:04:17,680 --> 01:04:21,598
i don't think you can

1633
01:04:19,039 --> 01:04:22,079
uh you can ensure with jason pat that

1634
01:04:21,599 --> 01:04:24,160
you are

1635
01:04:22,079 --> 01:04:27,839
actually you know pointing to one thing

1636
01:04:24,160 --> 01:04:27,839
you know rather to than

1637
01:04:28,000 --> 01:04:31,520
getting you know

1638
01:04:31,920 --> 01:04:40,000
just you know too much things

1639
01:04:35,119 --> 01:04:41,920
unexpectedly so

1640
01:04:40,000 --> 01:04:43,520
i guess all that i can say on this is

1641
01:04:41,920 --> 01:04:46,079
that um

1642
01:04:43,520 --> 01:04:48,319
our discussion on this is going to be

1643
01:04:46,079 --> 01:04:49,280
aided by the introduction of lots of use

1644
01:04:48,319 --> 01:04:50,920
cases

1645
01:04:49,280 --> 01:04:52,960
um so

1646
01:04:50,920 --> 01:04:55,200
[Music]

1647
01:04:52,960 --> 01:04:57,440
fortunately jsonpath is in the field has

1648
01:04:55,200 --> 01:04:59,359
been there for a while it's heavily used

1649
01:04:57,440 --> 01:05:01,599
um i speaking only for myself i'm going

1650
01:04:59,359 --> 01:05:03,038
to have a much easier time understanding

1651
01:05:01,599 --> 01:05:04,880
these kinds of propositions saying well

1652
01:05:03,039 --> 01:05:06,240
suppose i have this data and this json

1653
01:05:04,880 --> 01:05:08,640
path in this scenario

1654
01:05:06,240 --> 01:05:10,240
here's what i want to happen how do we

1655
01:05:08,640 --> 01:05:11,038
you know how should i not want to not

1656
01:05:10,240 --> 01:05:13,439
happen

1657
01:05:11,039 --> 01:05:14,640
um i think that's going to get us to to

1658
01:05:13,440 --> 01:05:19,359
consensus

1659
01:05:14,640 --> 01:05:20,720
um faster um

1660
01:05:19,359 --> 01:05:24,078
marco you're still at the head of the

1661
01:05:20,720 --> 01:05:24,078
queue are you we want to say some more

1662
01:05:25,440 --> 01:05:27,599
no

1663
01:05:30,000 --> 01:05:33,520
well this is interesting and and we're

1664
01:05:31,520 --> 01:05:35,759
certainly not tight on time

1665
01:05:33,520 --> 01:05:37,359
i think we've increased our

1666
01:05:35,760 --> 01:05:38,960
understanding of the problem

1667
01:05:37,359 --> 01:05:41,680
if not of the solution to it and that

1668
01:05:38,960 --> 01:05:41,680
that's a good thing

1669
01:05:43,760 --> 01:05:51,839
anything further on the result of

1670
01:05:45,680 --> 01:05:51,839
evaluating a json path

1671
01:05:54,319 --> 01:05:57,759
okay at this point we have run through

1672
01:05:56,160 --> 01:06:00,240
our agenda

1673
01:05:57,760 --> 01:06:02,880
and any other business things that we

1674
01:06:00,240 --> 01:06:05,520
forgot to discuss

1675
01:06:02,880 --> 01:06:06,720
things that i foolishly uh suppressed

1676
01:06:05,520 --> 01:06:07,920
because i thought we'd be short on time

1677
01:06:06,720 --> 01:06:11,279
but we're not

1678
01:06:07,920 --> 01:06:11,280
um karsten

1679
01:06:11,599 --> 01:06:14,880
yeah i think it may be a bit early to

1680
01:06:13,680 --> 01:06:18,078
ask this question

1681
01:06:14,880 --> 01:06:20,319
uh but uh early is the the

1682
01:06:18,079 --> 01:06:21,920
operative word here we probably need to

1683
01:06:20,319 --> 01:06:24,000
develop an understanding of the

1684
01:06:21,920 --> 01:06:27,280
timelines we are

1685
01:06:24,000 --> 01:06:30,720
operating on uh here um it's

1686
01:06:27,280 --> 01:06:32,319
really hard to estimate the amount of

1687
01:06:30,720 --> 01:06:35,520
work that goes into

1688
01:06:32,319 --> 01:06:36,240
such a specification effort but on the

1689
01:06:35,520 --> 01:06:38,640
other hand

1690
01:06:36,240 --> 01:06:39,919
uh yeah if we don't do any planning at

1691
01:06:38,640 --> 01:06:43,038
all then it's going

1692
01:06:39,920 --> 01:06:46,240
to be even more chaotic um

1693
01:06:43,039 --> 01:06:49,440
so i think we should try to understand

1694
01:06:46,240 --> 01:06:51,759
what are our next milestones and i don't

1695
01:06:49,440 --> 01:06:54,319
mean formal milestones in the charter

1696
01:06:51,760 --> 01:06:58,000
sense but just things we want to achieve

1697
01:06:54,319 --> 01:07:02,640
and when are we going to to

1698
01:06:58,000 --> 01:07:05,280
have them um have it with them

1699
01:07:02,640 --> 01:07:05,759
and i think the the the next milestone

1700
01:07:05,280 --> 01:07:08,480
for

1701
01:07:05,760 --> 01:07:10,400
me is actually spending time on on

1702
01:07:08,480 --> 01:07:14,079
getting these merged drafts

1703
01:07:10,400 --> 01:07:17,280
or this merge draft um out there

1704
01:07:14,079 --> 01:07:18,400
uh and i probably also could write some

1705
01:07:17,280 --> 01:07:22,480
text on this

1706
01:07:18,400 --> 01:07:25,359
abstract model that we uh talked about

1707
01:07:22,480 --> 01:07:27,119
um so that that might be going on

1708
01:07:25,359 --> 01:07:29,038
independently or might go into the

1709
01:07:27,119 --> 01:07:32,799
smudge draft depending on on

1710
01:07:29,039 --> 01:07:35,920
what the timelines on of either thing um

1711
01:07:32,799 --> 01:07:38,960
is and the other thing of course is

1712
01:07:35,920 --> 01:07:40,160
to get people's favorite examples there

1713
01:07:38,960 --> 01:07:43,839
are lots of examples

1714
01:07:40,160 --> 01:07:46,640
in the that other project that has been

1715
01:07:43,839 --> 01:07:49,359
uh mentioned but maybe people still have

1716
01:07:46,640 --> 01:07:51,359
examples from their practical work

1717
01:07:49,359 --> 01:07:54,000
uh that they are very interested in

1718
01:07:51,359 --> 01:07:54,000
getting right

1719
01:07:55,599 --> 01:08:01,520
um in terms of dates i i just

1720
01:07:58,720 --> 01:08:02,720
looked at our charter and it has no

1721
01:08:01,520 --> 01:08:04,400
dates in it

1722
01:08:02,720 --> 01:08:06,558
i thought it did i'm surprised i could

1723
01:08:04,400 --> 01:08:09,119
have sworn i said tim tim it was my

1724
01:08:06,559 --> 01:08:12,079
understanding that that there was a

1725
01:08:09,119 --> 01:08:12,799
placeholder milestone for iesg

1726
01:08:12,079 --> 01:08:16,239
submission

1727
01:08:12,799 --> 01:08:19,198
for mid next year um

1728
01:08:16,238 --> 01:08:19,678
i i would i would like to propose if if

1729
01:08:19,198 --> 01:08:21,439
if

1730
01:08:19,679 --> 01:08:23,199
the the various people who are

1731
01:08:21,439 --> 01:08:25,759
interested in editing this have

1732
01:08:23,198 --> 01:08:26,799
have the time and the brainpower to do

1733
01:08:25,759 --> 01:08:30,238
it

1734
01:08:26,799 --> 01:08:33,600
if we could aim between sort of now and

1735
01:08:30,238 --> 01:08:36,959
the next ietf meeting in late march to

1736
01:08:33,600 --> 01:08:39,520
to have uh sort of a you know

1737
01:08:36,960 --> 01:08:40,239
the the merged document as as it were of

1738
01:08:39,520 --> 01:08:42,560
of the

1739
01:08:40,238 --> 01:08:43,358
existing uh personal drafts that are out

1740
01:08:42,560 --> 01:08:48,239
there

1741
01:08:43,359 --> 01:08:51,600
and to have an os um uh an oo draft

1742
01:08:48,238 --> 01:08:53,040
out there uh and so that when we come

1743
01:08:51,600 --> 01:08:53,679
around to the next meeting in the end of

1744
01:08:53,040 --> 01:08:56,560
march

1745
01:08:53,679 --> 01:08:58,880
you know we should be uh fully into the

1746
01:08:56,560 --> 01:09:00,080
into the motions of of working through

1747
01:08:58,880 --> 01:09:02,480
a lot of the issues that we have

1748
01:09:00,080 --> 01:09:03,519
discussed today i think that that would

1749
01:09:02,479 --> 01:09:05,439
be a fairly

1750
01:09:03,520 --> 01:09:07,199
fairly achievable goal i'd be interested

1751
01:09:05,439 --> 01:09:09,839
to know what the

1752
01:09:07,198 --> 01:09:12,000
uh what what the rest of the working

1753
01:09:09,839 --> 01:09:13,759
group thinks

1754
01:09:12,000 --> 01:09:16,000
yeah um i see glenn's at the top of the

1755
01:09:13,759 --> 01:09:18,000
roof but i also see murray our a.d

1756
01:09:16,000 --> 01:09:20,319
there and i think his opinion is highly

1757
01:09:18,000 --> 01:09:22,399
relevant to this yes

1758
01:09:20,319 --> 01:09:23,359
murray would you like to go ahead please

1759
01:09:22,399 --> 01:09:25,839
yeah i i

1760
01:09:23,359 --> 01:09:27,279
you just have the one milestone for june

1761
01:09:25,839 --> 01:09:29,278
next year which is the standards track

1762
01:09:27,279 --> 01:09:31,440
document defining json path but that's

1763
01:09:29,279 --> 01:09:32,799
that can be renegotiated so there is one

1764
01:09:31,439 --> 01:09:34,799
there but it's um

1765
01:09:32,799 --> 01:09:37,920
not set in stone so tell me what else

1766
01:09:34,799 --> 01:09:39,759
you're thinking of i'm listening

1767
01:09:37,920 --> 01:09:40,960
so let me just glenn i haven't forgotten

1768
01:09:39,759 --> 01:09:43,920
about you but i

1769
01:09:40,960 --> 01:09:45,279
i believe i heard uh if i understood

1770
01:09:43,920 --> 01:09:46,239
what james was proposing was he's

1771
01:09:45,279 --> 01:09:49,600
proposing

1772
01:09:46,238 --> 01:09:53,759
that we have a working group draft

1773
01:09:49,600 --> 01:09:55,600
um uh with consensus

1774
01:09:53,759 --> 01:09:57,840
with consensus backing of the working

1775
01:09:55,600 --> 01:09:58,800
group which nonetheless is is not

1776
01:09:57,840 --> 01:10:01,840
complete

1777
01:09:58,800 --> 01:10:02,560
um by the next ietf which is march you

1778
01:10:01,840 --> 01:10:07,120
said

1779
01:10:02,560 --> 01:10:09,280
yeah and and

1780
01:10:07,120 --> 01:10:10,800
my opinion is that the smart way to do

1781
01:10:09,280 --> 01:10:12,719
this is going to

1782
01:10:10,800 --> 01:10:13,760
start with a very very small draft and

1783
01:10:12,719 --> 01:10:15,280
build it out because i mean there are

1784
01:10:13,760 --> 01:10:16,679
certain aspects of jsonpath that are not

1785
01:10:15,280 --> 01:10:18,960
controversial at all i mean

1786
01:10:16,679 --> 01:10:20,159
dollar.a.b you know and dollar square

1787
01:10:18,960 --> 01:10:22,640
brackets three

1788
01:10:20,159 --> 01:10:24,000
you know kind of thing are are not

1789
01:10:22,640 --> 01:10:26,400
controversial and if we had something

1790
01:10:24,000 --> 01:10:28,560
with a really good job of capturing that

1791
01:10:26,400 --> 01:10:30,000
um and even in that there's a few corner

1792
01:10:28,560 --> 01:10:33,280
cases and so on

1793
01:10:30,000 --> 01:10:35,600
um if we could get to that by march

1794
01:10:33,280 --> 01:10:37,120
i think that would be pretty good other

1795
01:10:35,600 --> 01:10:38,400
opinions glenn back to you sorry for

1796
01:10:37,120 --> 01:10:40,159
interrupting

1797
01:10:38,400 --> 01:10:42,639
um well before i make my point i was

1798
01:10:40,159 --> 01:10:44,400
going to make i would say that

1799
01:10:42,640 --> 01:10:45,840
the draft i've been working on is is

1800
01:10:44,400 --> 01:10:48,960
that form

1801
01:10:45,840 --> 01:10:50,719
it's the non-controversial subset and it

1802
01:10:48,960 --> 01:10:53,360
tries to cover the corner cases

1803
01:10:50,719 --> 01:10:54,400
so um you know let's have a look at that

1804
01:10:53,360 --> 01:10:56,880
as a working group

1805
01:10:54,400 --> 01:10:58,080
what i was going to mention was the json

1806
01:10:56,880 --> 01:11:01,280
jsonpath comparison

1807
01:10:58,080 --> 01:11:04,320
project that's been done uh i mentioned

1808
01:11:01,280 --> 01:11:06,159
30 odd implementations that are covered

1809
01:11:04,320 --> 01:11:08,000
um just wondered about you know since

1810
01:11:06,159 --> 01:11:09,360
we're talking in real time it might be

1811
01:11:08,000 --> 01:11:12,320
good to discuss

1812
01:11:09,360 --> 01:11:13,519
people's attitudes to existing

1813
01:11:12,320 --> 01:11:16,639
implementations

1814
01:11:13,520 --> 01:11:17,600
and how we see migration to the eventual

1815
01:11:16,640 --> 01:11:20,000
standard

1816
01:11:17,600 --> 01:11:21,040
going you know how disruptive do we want

1817
01:11:20,000 --> 01:11:24,000
to be how

1818
01:11:21,040 --> 01:11:25,040
accommodating do we want to be you know

1819
01:11:24,000 --> 01:11:28,400
i would like

1820
01:11:25,040 --> 01:11:30,320
to accommodate the consensus in general

1821
01:11:28,400 --> 01:11:32,400
you know maybe not always maybe not when

1822
01:11:30,320 --> 01:11:35,440
it makes doesn't make sense but

1823
01:11:32,400 --> 01:11:37,199
you know rather go towards the current

1824
01:11:35,440 --> 01:11:38,960
consensus rather than away from it

1825
01:11:37,199 --> 01:11:42,159
personally i'd be interested in other

1826
01:11:38,960 --> 01:11:42,159
people's positions

1827
01:11:42,719 --> 01:11:46,400
yeah i put myself on the list um because

1828
01:11:44,719 --> 01:11:49,840
i i uh on this one

1829
01:11:46,400 --> 01:11:50,799
um so you know at aws we built a a a

1830
01:11:49,840 --> 01:11:53,280
couple of

1831
01:11:50,800 --> 01:11:55,600
large complex you know vast numbers of

1832
01:11:53,280 --> 01:11:58,719
users vast number amounts of data

1833
01:11:55,600 --> 01:12:00,080
uh services and we didn't even realize

1834
01:11:58,719 --> 01:12:01,040
what we were doing we just built them

1835
01:12:00,080 --> 01:12:02,719
with j-way

1836
01:12:01,040 --> 01:12:04,400
and so the semantics you know the

1837
01:12:02,719 --> 01:12:06,080
language we we actually

1838
01:12:04,400 --> 01:12:08,159
de facto supported with whatever j-way

1839
01:12:06,080 --> 01:12:10,080
did

1840
01:12:08,159 --> 01:12:11,839
and that was a little unfortunate and

1841
01:12:10,080 --> 01:12:15,679
realistically the chance

1842
01:12:11,840 --> 01:12:17,440
that um uh that we would

1843
01:12:15,679 --> 01:12:19,120
you know that that product will ever

1844
01:12:17,440 --> 01:12:21,120
adopt a

1845
01:12:19,120 --> 01:12:22,480
new json path syntax it's inconsistent

1846
01:12:21,120 --> 01:12:23,519
with something that joey does today is

1847
01:12:22,480 --> 01:12:24,559
effectively zero because there's

1848
01:12:23,520 --> 01:12:25,360
literally hundreds of thousands of

1849
01:12:24,560 --> 01:12:27,679
people

1850
01:12:25,360 --> 01:12:28,960
just using it so my take away from that

1851
01:12:27,679 --> 01:12:32,000
is we should you know

1852
01:12:28,960 --> 01:12:32,480
try to minimize that but let's let's

1853
01:12:32,000 --> 01:12:35,520
face

1854
01:12:32,480 --> 01:12:35,519
facts and

1855
01:12:35,679 --> 01:12:39,280
realize that what we're building is

1856
01:12:37,040 --> 01:12:41,519
probably for you know

1857
01:12:39,280 --> 01:12:43,280
uh future implementers and future

1858
01:12:41,520 --> 01:12:44,239
adopters of jsonpath because existing

1859
01:12:43,280 --> 01:12:48,480
adopters

1860
01:12:44,239 --> 01:12:48,480
mostly just aren't going to change um

1861
01:12:48,840 --> 01:12:51,840
karsten

1862
01:12:52,000 --> 01:12:55,600
yeah i think in in the end there are

1863
01:12:54,800 --> 01:12:58,320
costs

1864
01:12:55,600 --> 01:12:58,960
uh to to any decision and there are

1865
01:12:58,320 --> 01:13:02,239
costs

1866
01:12:58,960 --> 01:13:04,480
in making the wrong decision as well so

1867
01:13:02,239 --> 01:13:06,080
when we do something that is not

1868
01:13:04,480 --> 01:13:08,080
supported by the majority

1869
01:13:06,080 --> 01:13:09,440
of the implementations then we have the

1870
01:13:08,080 --> 01:13:12,400
cost of

1871
01:13:09,440 --> 01:13:13,199
uh causing them pain or losing them and

1872
01:13:12,400 --> 01:13:15,599
so on

1873
01:13:13,199 --> 01:13:17,440
uh when we make a decision that actually

1874
01:13:15,600 --> 01:13:20,480
is

1875
01:13:17,440 --> 01:13:23,839
well bad uh we cause

1876
01:13:20,480 --> 01:13:26,959
cost for for future users

1877
01:13:23,840 --> 01:13:28,719
um of uh the specification and we have

1878
01:13:26,960 --> 01:13:32,080
to balance these two

1879
01:13:28,719 --> 01:13:35,360
costs so the the default answer

1880
01:13:32,080 --> 01:13:37,440
probably is make sure to work with

1881
01:13:35,360 --> 01:13:39,199
existing specifications

1882
01:13:37,440 --> 01:13:41,440
with existing implementations but if

1883
01:13:39,199 --> 01:13:42,480
there is some decision that we make that

1884
01:13:41,440 --> 01:13:45,040
makes it

1885
01:13:42,480 --> 01:13:46,799
really much more complicated for people

1886
01:13:45,040 --> 01:13:50,000
to actually

1887
01:13:46,800 --> 01:13:51,040
implement or use jsonpath just we want

1888
01:13:50,000 --> 01:13:53,840
to

1889
01:13:51,040 --> 01:13:56,239
drag a specific implementation along

1890
01:13:53,840 --> 01:13:57,679
that's also wrong so i don't think this

1891
01:13:56,239 --> 01:14:00,080
can be

1892
01:13:57,679 --> 01:14:02,480
discussed in the absolutes it will

1893
01:14:00,080 --> 01:14:05,679
depend on every single case

1894
01:14:02,480 --> 01:14:06,799
whether we go for documenting existing

1895
01:14:05,679 --> 01:14:10,400
practice

1896
01:14:06,800 --> 01:14:14,000
or maybe cleaning up things a little bit

1897
01:14:10,400 --> 01:14:16,960
and so far i think i've heard from most

1898
01:14:14,000 --> 01:14:19,920
people that there probably needs to be a

1899
01:14:16,960 --> 01:14:21,840
really good reason to go for cleaning up

1900
01:14:19,920 --> 01:14:24,400
things but i would be unhappy if we

1901
01:14:21,840 --> 01:14:28,880
cannot do that at all

1902
01:14:24,400 --> 01:14:30,719
fair enough marie

1903
01:14:28,880 --> 01:14:31,760
just wanted to mention that the charter

1904
01:14:30,719 --> 01:14:33,600
actually talked about this we

1905
01:14:31,760 --> 01:14:36,080
anticipated this coming up and it talks

1906
01:14:33,600 --> 01:14:38,880
about how you might break ties or

1907
01:14:36,080 --> 01:14:39,760
um try to accommodate the consensus of

1908
01:14:38,880 --> 01:14:41,520
the common

1909
01:14:39,760 --> 01:14:42,719
implementations and that sort so just

1910
01:14:41,520 --> 01:14:44,640
you might want to review that we can

1911
01:14:42,719 --> 01:14:46,560
always tweak this too if it needs

1912
01:14:44,640 --> 01:14:47,600
additional guidance but it seems like we

1913
01:14:46,560 --> 01:14:48,800
did think about this a little bit

1914
01:14:47,600 --> 01:14:50,239
already

1915
01:14:48,800 --> 01:14:52,560
yeah i'm just going to read from the

1916
01:14:50,239 --> 01:14:54,239
charter it says uh the working group

1917
01:14:52,560 --> 01:14:56,080
will discover will develop a standards

1918
01:14:54,239 --> 01:14:57,759
tracks jsonpath specification that is

1919
01:14:56,080 --> 01:15:00,080
technically sound and complete

1920
01:14:57,760 --> 01:15:00,960
based on the common semantics and other

1921
01:15:00,080 --> 01:15:02,880
aspects

1922
01:15:00,960 --> 01:15:04,400
of existing implementations where there

1923
01:15:02,880 --> 01:15:05,520
are differences

1924
01:15:04,400 --> 01:15:06,960
the working group will analyze those

1925
01:15:05,520 --> 01:15:08,880
differences and make choices that rough

1926
01:15:06,960 --> 01:15:10,239
consensus considers technically best

1927
01:15:08,880 --> 01:15:13,040
with an aim towards minimizing

1928
01:15:10,239 --> 01:15:14,639
disruption so yeah

1929
01:15:13,040 --> 01:15:17,760
and and i agree this is going to be a

1930
01:15:14,640 --> 01:15:17,760
pain point for this group

1931
01:15:21,360 --> 01:15:25,199
so to get back to where glenn launched

1932
01:15:24,400 --> 01:15:28,400
us

1933
01:15:25,199 --> 01:15:31,280
about you know target dates um

1934
01:15:28,400 --> 01:15:32,400
i've heard the proposal of of the next

1935
01:15:31,280 --> 01:15:35,599
ietf

1936
01:15:32,400 --> 01:15:37,839
for a working group draft uh with with

1937
01:15:35,600 --> 01:15:39,840
consensus backing

1938
01:15:37,840 --> 01:15:41,920
that will probably not be complete but

1939
01:15:39,840 --> 01:15:44,239
will be correct for this episode it

1940
01:15:41,920 --> 01:15:44,239
covers

1941
01:15:45,280 --> 01:15:50,400
i like the sound of that does anybody

1942
01:15:46,880 --> 01:15:50,400
object or disagree or think that's

1943
01:15:50,840 --> 01:15:53,840
unreasonable

1944
01:15:58,640 --> 01:16:01,120
excellent

1945
01:16:02,000 --> 01:16:08,159
good okay do we have any other business

1946
01:16:08,480 --> 01:16:11,678
um just as a just as a housekeeping

1947
01:16:10,560 --> 01:16:13,280
thing what we can do is

1948
01:16:11,679 --> 01:16:15,280
now that we have our uh github

1949
01:16:13,280 --> 01:16:17,920
organization uh

1950
01:16:15,280 --> 01:16:18,639
created thank you very much carsten uh

1951
01:16:17,920 --> 01:16:22,400
we can

1952
01:16:18,640 --> 01:16:24,560
uh create the repositories and

1953
01:16:22,400 --> 01:16:26,159
and and the necessary boilerplate so the

1954
01:16:24,560 --> 01:16:30,719
editors can just

1955
01:16:26,159 --> 01:16:33,280
uh get on with with the editing part um

1956
01:16:30,719 --> 01:16:35,840
and i can disseminate information about

1957
01:16:33,280 --> 01:16:35,840
that later today

1958
01:16:36,080 --> 01:16:38,880
excellent thank you

1959
01:16:42,560 --> 01:16:49,520
glenn yeah

1960
01:16:45,840 --> 01:16:51,760
before all this started i picked on a

1961
01:16:49,520 --> 01:16:53,280
github org name which is probably

1962
01:16:51,760 --> 01:16:57,120
unfortunate now jason path

1963
01:16:53,280 --> 01:17:00,559
standard just as a place in the sand

1964
01:16:57,120 --> 01:17:01,840
so i'll probably ditch that and

1965
01:17:00,560 --> 01:17:04,320
move somewhere else for the reference

1966
01:17:01,840 --> 01:17:06,000
implementation and cts

1967
01:17:04,320 --> 01:17:07,759
uh because that's you know may end up

1968
01:17:06,000 --> 01:17:09,520
being entirely informal

1969
01:17:07,760 --> 01:17:11,040
uh but there's also a slack instance

1970
01:17:09,520 --> 01:17:12,000
i'll probably kill that as well because

1971
01:17:11,040 --> 01:17:15,199
it's not going to be

1972
01:17:12,000 --> 01:17:18,159
archived it's not uh appropriate so

1973
01:17:15,199 --> 01:17:19,839
just wanted to mention that i'll be kind

1974
01:17:18,159 --> 01:17:22,719
of killing off those things

1975
01:17:19,840 --> 01:17:23,520
so that we centralize on the official uh

1976
01:17:22,719 --> 01:17:26,640
organization

1977
01:17:23,520 --> 01:17:26,640
and uh mailing list

1978
01:17:26,880 --> 01:17:30,400
right there's actually a procedural

1979
01:17:28,719 --> 01:17:34,000
thing

1980
01:17:30,400 --> 01:17:36,400
is it appropriate to do the compliance

1981
01:17:34,000 --> 01:17:38,320
test if in fact we decide it's not an

1982
01:17:36,400 --> 01:17:40,320
official output

1983
01:17:38,320 --> 01:17:41,440
in that organization i don't know i'm

1984
01:17:40,320 --> 01:17:44,239
gonna i'm gonna

1985
01:17:41,440 --> 01:17:46,000
ask around uh you know julian will have

1986
01:17:44,239 --> 01:17:49,839
experience what they did

1987
01:17:46,000 --> 01:17:52,159
on the structured headers um

1988
01:17:49,840 --> 01:17:53,120
so you're probably correct glenn that

1989
01:17:52,159 --> 01:17:54,320
that that

1990
01:17:53,120 --> 01:17:56,239
that's probably not the right place to

1991
01:17:54,320 --> 01:17:58,719
do it with the under that name but

1992
01:17:56,239 --> 01:18:00,718
but let's not uh there's no hurry let's

1993
01:17:58,719 --> 01:18:03,199
make sure we get this right

1994
01:18:00,719 --> 01:18:05,920
yeah i mean i would destroy the repo

1995
01:18:03,199 --> 01:18:12,080
just move it into a personal repo

1996
01:18:05,920 --> 01:18:15,199
sure yeah sure julian

1997
01:18:12,080 --> 01:18:15,199
julian audio

1998
01:18:19,520 --> 01:18:24,960
hmm we can't hear you julian

1999
01:18:23,360 --> 01:18:27,360
and we don't have any chat that i can

2000
01:18:24,960 --> 01:18:30,640
see does it work now

2001
01:18:27,360 --> 01:18:31,360
oh there you are okay complicated

2002
01:18:30,640 --> 01:18:34,159
interface

2003
01:18:31,360 --> 01:18:34,880
sorry um for structured headers it

2004
01:18:34,159 --> 01:18:37,360
actually is

2005
01:18:34,880 --> 01:18:38,640
a mark nottingham's private repository

2006
01:18:37,360 --> 01:18:40,480
so um

2007
01:18:38,640 --> 01:18:42,239
we i think on the working group

2008
01:18:40,480 --> 01:18:45,280
materials page

2009
01:18:42,239 --> 01:18:46,639
we have a link to that test suite or

2010
01:18:45,280 --> 01:18:49,199
test cases

2011
01:18:46,640 --> 01:18:50,159
pointing out that is not a working group

2012
01:18:49,199 --> 01:18:53,360
work item but

2013
01:18:50,159 --> 01:18:55,360
it's relevant anyway so but i wouldn't

2014
01:18:53,360 --> 01:18:55,759
rule out that the itf allows that even

2015
01:18:55,360 --> 01:18:57,759
if we

2016
01:18:55,760 --> 01:19:00,800
had don't have the goal of publishing it

2017
01:18:57,760 --> 01:19:02,400
so it's worth asking i guess the area

2018
01:19:00,800 --> 01:19:04,159
director

2019
01:19:02,400 --> 01:19:06,400
sure murray i'll talk we'll talk to

2020
01:19:04,159 --> 01:19:07,759
murray about this and see

2021
01:19:06,400 --> 01:19:09,599
you know what the what the feeling is

2022
01:19:07,760 --> 01:19:11,520
about this kind of thing i'm

2023
01:19:09,600 --> 01:19:13,440
you know i'm a cheerleader i i think

2024
01:19:11,520 --> 01:19:16,719
that that that specs that have

2025
01:19:13,440 --> 01:19:18,639
supporting software are are winners but

2026
01:19:16,719 --> 01:19:20,400
uh let's see what the community feel

2027
01:19:18,640 --> 01:19:22,239
feels about this kind of there may also

2028
01:19:20,400 --> 01:19:26,000
be some devil in the

2029
01:19:22,239 --> 01:19:28,400
some details in 8875 which we

2030
01:19:26,000 --> 01:19:29,600
might that might give us the answer to

2031
01:19:28,400 --> 01:19:32,239
this

2032
01:19:29,600 --> 01:19:33,840
correct correct i don't yeah i didn't i

2033
01:19:32,239 --> 01:19:37,839
didn't read it deeply

2034
01:19:33,840 --> 01:19:37,840
so perfectly possible

2035
01:19:39,600 --> 01:19:44,719
fair enough okay any further business

2036
01:19:48,400 --> 01:19:50,960
okay well i've learned something about

2037
01:19:49,520 --> 01:19:52,719
this working group we get through stuff

2038
01:19:50,960 --> 01:19:53,840
next time we do this i'll put more stuff

2039
01:19:52,719 --> 01:19:56,080
on the agenda

2040
01:19:53,840 --> 01:19:56,080
um

2041
01:20:00,719 --> 01:20:04,080
it was a pretty good reasonable size of

2042
01:20:02,880 --> 01:20:06,719
group i mean if you have

2043
01:20:04,080 --> 01:20:08,559
200 it's hard if you have three people

2044
01:20:06,719 --> 01:20:10,080
it's hard but this group

2045
01:20:08,560 --> 01:20:12,320
seems to have about the right size to

2046
01:20:10,080 --> 01:20:15,920
make progress

2047
01:20:12,320 --> 01:20:15,920
i sincerely hope that you're right

2048
01:20:17,040 --> 01:20:21,199
oh i see some names i know as we've

2049
01:20:18,480 --> 01:20:21,678
joined you'd like to ask a question

2050
01:20:21,199 --> 01:20:24,080
actually

2051
01:20:21,679 --> 01:20:25,520
um sorry i'm not on the queue none of

2052
01:20:24,080 --> 01:20:27,840
that

2053
01:20:25,520 --> 01:20:29,280
glenn we talked about consensus meetings

2054
01:20:27,840 --> 01:20:31,520
but i don't really have a feel for the

2055
01:20:29,280 --> 01:20:34,719
frequency of those other formats

2056
01:20:31,520 --> 01:20:37,440
they occur only i etf conferences or

2057
01:20:34,719 --> 01:20:38,159
are they more frequent well working

2058
01:20:37,440 --> 01:20:40,080
groups are

2059
01:20:38,159 --> 01:20:41,759
different there are some working groups

2060
01:20:40,080 --> 01:20:43,360
that have lots and lots and lots of

2061
01:20:41,760 --> 01:20:44,239
interim meetings and address these

2062
01:20:43,360 --> 01:20:47,679
things

2063
01:20:44,239 --> 01:20:49,440
uh others um uh firstly

2064
01:20:47,679 --> 01:20:51,280
you know the only time they meet at all

2065
01:20:49,440 --> 01:20:53,759
is at itf meetings and there

2066
01:20:51,280 --> 01:20:55,120
are you know chair calls consensus

2067
01:20:53,760 --> 01:20:59,600
periodically

2068
01:20:55,120 --> 01:21:03,120
and uh drafts are produced uh karsten

2069
01:20:59,600 --> 01:21:04,639
yeah so um i think it's a good idea to

2070
01:21:03,120 --> 01:21:07,280
be very adaptive

2071
01:21:04,639 --> 01:21:08,239
um in that so that there is no one right

2072
01:21:07,280 --> 01:21:11,519
answer

2073
01:21:08,239 --> 01:21:14,718
um in several work moves that i'm

2074
01:21:11,520 --> 01:21:18,800
involved in we do

2075
01:21:14,719 --> 01:21:22,719
have periods of quick progress where we

2076
01:21:18,800 --> 01:21:25,360
have about bi-weekly uh meetings and we

2077
01:21:22,719 --> 01:21:28,880
try to time-box them into one hour

2078
01:21:25,360 --> 01:21:31,599
so it's not uh it's not

2079
01:21:28,880 --> 01:21:32,480
becoming epic but we can actually use

2080
01:21:31,600 --> 01:21:35,840
face to face

2081
01:21:32,480 --> 01:21:40,559
uh time but your face to facetime

2082
01:21:35,840 --> 01:21:43,199
to to get progress and we also have

2083
01:21:40,560 --> 01:21:44,480
which is very important uh milestones to

2084
01:21:43,199 --> 01:21:45,280
which people have to have their

2085
01:21:44,480 --> 01:21:48,559
preparations

2086
01:21:45,280 --> 01:21:49,599
uh in place but uh even those groups who

2087
01:21:48,560 --> 01:21:52,400
have these bi-weekly

2088
01:21:49,600 --> 01:21:53,679
periods also have silent periods so for

2089
01:21:52,400 --> 01:21:56,480
instance the

2090
01:21:53,679 --> 01:21:57,280
call working group probably won't do

2091
01:21:56,480 --> 01:22:00,638
another

2092
01:21:57,280 --> 01:22:02,239
of these virtual interims for the rest

2093
01:22:00,639 --> 01:22:05,120
of the year because there's

2094
01:22:02,239 --> 01:22:07,120
thanksgiving and christmas and other

2095
01:22:05,120 --> 01:22:10,639
holidays

2096
01:22:07,120 --> 01:22:10,880
so it all depends on what phase we are

2097
01:22:10,639 --> 01:22:12,400
in

2098
01:22:10,880 --> 01:22:14,639
and whether we actually have something

2099
01:22:12,400 --> 01:22:16,879
to uh discuss but

2100
01:22:14,639 --> 01:22:19,199
by weekly one our format has worked very

2101
01:22:16,880 --> 01:22:20,719
well for us

2102
01:22:19,199 --> 01:22:22,638
and on the other extreme i've been a

2103
01:22:20,719 --> 01:22:25,920
member of one working group where

2104
01:22:22,639 --> 01:22:27,199
it was all done between between a couple

2105
01:22:25,920 --> 01:22:28,719
of iatfs and i don't think there was

2106
01:22:27,199 --> 01:22:30,159
ever a face-to-face everything was just

2107
01:22:28,719 --> 01:22:31,520
done on the mailing list and with

2108
01:22:30,159 --> 01:22:34,159
consensus calls

2109
01:22:31,520 --> 01:22:34,960
so so we'll we'll be flexible i i don't

2110
01:22:34,159 --> 01:22:38,080
think

2111
01:22:34,960 --> 01:22:41,280
any of us are religious about uh

2112
01:22:38,080 --> 01:22:42,960
how to do it we'll we'll talk about it

2113
01:22:41,280 --> 01:22:45,360
and you know i obviously i think james

2114
01:22:42,960 --> 01:22:48,000
and i would agree that if people

2115
01:22:45,360 --> 01:22:53,839
feel the need for such a thing feel free

2116
01:22:48,000 --> 01:22:53,840
to say so um

2117
01:22:54,239 --> 01:22:57,919
then of course we might have something

2118
01:22:56,320 --> 01:23:01,040
like design team

2119
01:22:57,920 --> 01:23:03,360
uh meetings or editors meetings uh

2120
01:23:01,040 --> 01:23:04,800
things like that so when we are trying

2121
01:23:03,360 --> 01:23:06,480
to make progress

2122
01:23:04,800 --> 01:23:08,239
on things where we already have

2123
01:23:06,480 --> 01:23:10,480
direction from the

2124
01:23:08,239 --> 01:23:12,718
working group but simply have to do

2125
01:23:10,480 --> 01:23:15,360
medial work to

2126
01:23:12,719 --> 01:23:17,120
get that reflected in in the document so

2127
01:23:15,360 --> 01:23:17,759
i think that that will also happen

2128
01:23:17,120 --> 01:23:20,239
because

2129
01:23:17,760 --> 01:23:20,880
in the end we will need to have a

2130
01:23:20,239 --> 01:23:23,519
document

2131
01:23:20,880 --> 01:23:23,520
that is good

2132
01:23:29,040 --> 01:23:33,679
glenn sorry it's me again but

2133
01:23:32,320 --> 01:23:35,519
taking the opportunity while we're face

2134
01:23:33,679 --> 01:23:38,880
to face um

2135
01:23:35,520 --> 01:23:42,560
what's the process for um uh kind of

2136
01:23:38,880 --> 01:23:45,600
drafting and and reflecting consensus

2137
01:23:42,560 --> 01:23:46,960
into a draft because the approach i've

2138
01:23:45,600 --> 01:23:49,600
taken so far

2139
01:23:46,960 --> 01:23:52,080
has been to for the draft to kind of

2140
01:23:49,600 --> 01:23:54,080
lead the process and put up a pr

2141
01:23:52,080 --> 01:23:56,639
and then invite people involved to

2142
01:23:54,080 --> 01:23:59,040
comment on the pr and then merge that

2143
01:23:56,639 --> 01:24:00,159
um is this some other approach that we

2144
01:23:59,040 --> 01:24:03,679
anticipate where we

2145
01:24:00,159 --> 01:24:04,879
kind of discuss an area on the mailing

2146
01:24:03,679 --> 01:24:08,000
list and elsewhere

2147
01:24:04,880 --> 01:24:10,639
and then edit it into shame well the

2148
01:24:08,000 --> 01:24:13,760
traditional ietf approach is

2149
01:24:10,639 --> 01:24:15,440
issues come up and are discussed

2150
01:24:13,760 --> 01:24:17,040
at an appropriate length and then

2151
01:24:15,440 --> 01:24:20,239
eventually the the

2152
01:24:17,040 --> 01:24:22,639
co-chairs make a consensus call and the

2153
01:24:20,239 --> 01:24:24,959
editors

2154
01:24:22,639 --> 01:24:26,159
have the amusing fun of taking the

2155
01:24:24,960 --> 01:24:30,560
consensus call

2156
01:24:26,159 --> 01:24:32,080
and turning it into spec language um

2157
01:24:30,560 --> 01:24:34,880
that's sort of the traditional approach

2158
01:24:32,080 --> 01:24:38,320
obviously um

2159
01:24:34,880 --> 01:24:40,320
you know prs are

2160
01:24:38,320 --> 01:24:45,280
are a really good way to to make

2161
01:24:40,320 --> 01:24:48,880
arguments in some cases um

2162
01:24:45,280 --> 01:24:51,440
kirsten yeah we

2163
01:24:48,880 --> 01:24:52,719
have recently had the discussion on that

2164
01:24:51,440 --> 01:24:53,678
if you have a really large working

2165
01:24:52,719 --> 01:24:56,560
replay like with

2166
01:24:53,679 --> 01:24:58,400
quicker or http and you want to have a

2167
01:24:56,560 --> 01:25:02,960
very formal model with

2168
01:24:58,400 --> 01:25:05,839
pull requests and working glass calls on

2169
01:25:02,960 --> 01:25:08,480
full request and then finally they they

2170
01:25:05,840 --> 01:25:11,840
go into the document

2171
01:25:08,480 --> 01:25:14,159
that means essentially the document is

2172
01:25:11,840 --> 01:25:16,000
really just recording consensus that has

2173
01:25:14,159 --> 01:25:19,120
been generated in

2174
01:25:16,000 --> 01:25:22,320
in another way and that works well

2175
01:25:19,120 --> 01:25:24,400
uh before you you dive into other

2176
01:25:22,320 --> 01:25:26,799
bureaucracies and so on

2177
01:25:24,400 --> 01:25:27,839
in a smaller group it's sometimes also a

2178
01:25:26,800 --> 01:25:31,840
good idea to

2179
01:25:27,840 --> 01:25:33,760
have leading documents so

2180
01:25:31,840 --> 01:25:35,120
you are not waiting for consensus to

2181
01:25:33,760 --> 01:25:39,280
form

2182
01:25:35,120 --> 01:25:43,120
but people are actually

2183
01:25:39,280 --> 01:25:43,759
writing up things that can be in a pull

2184
01:25:43,120 --> 01:25:45,679
request

2185
01:25:43,760 --> 01:25:48,080
or it can be in the main document that

2186
01:25:45,679 --> 01:25:50,159
depends on the style of editing

2187
01:25:48,080 --> 01:25:51,440
uh things it depends a bit on how many

2188
01:25:50,159 --> 01:25:54,638
of these things are going on

2189
01:25:51,440 --> 01:25:56,960
in parallel which one works better

2190
01:25:54,639 --> 01:25:59,440
but it's much easier to get consensus on

2191
01:25:56,960 --> 01:26:02,400
something that already is

2192
01:25:59,440 --> 01:26:04,320
in the document because you are not not

2193
01:26:02,400 --> 01:26:05,360
discussing it on a theoretical level you

2194
01:26:04,320 --> 01:26:07,599
have actually text to

2195
01:26:05,360 --> 01:26:08,880
to look at and you can make pull

2196
01:26:07,600 --> 01:26:12,239
requests to

2197
01:26:08,880 --> 01:26:15,600
the the changes and uh improve it before

2198
01:26:12,239 --> 01:26:18,799
uh there is actually a consensus

2199
01:26:15,600 --> 01:26:20,560
so yeah good

2200
01:26:18,800 --> 01:26:22,719
so i agree with what carson said you

2201
01:26:20,560 --> 01:26:24,159
know that's what i was saying as well

2202
01:26:22,719 --> 01:26:26,000
sometimes the best way to

2203
01:26:24,159 --> 01:26:27,920
argue for a particular change is to make

2204
01:26:26,000 --> 01:26:30,239
the change you know put in a pr saying

2205
01:26:27,920 --> 01:26:32,159
yes i want it also depends on whether

2206
01:26:30,239 --> 01:26:33,839
we're arguing about the best way to

2207
01:26:32,159 --> 01:26:35,759
express a shared understanding

2208
01:26:33,840 --> 01:26:37,120
or the situation which you know

2209
01:26:35,760 --> 01:26:38,560
regularly arises there's actually a

2210
01:26:37,120 --> 01:26:41,280
disagreement in principle

2211
01:26:38,560 --> 01:26:42,719
about what needs to be done and then

2212
01:26:41,280 --> 01:26:44,639
there's usually a lot more work that has

2213
01:26:42,719 --> 01:26:45,280
to go into discussing and then making an

2214
01:26:44,639 --> 01:26:48,400
official

2215
01:26:45,280 --> 01:26:50,400
consensus call glenn glenn go ahead

2216
01:26:48,400 --> 01:26:51,759
yeah just to to sharpen my question a

2217
01:26:50,400 --> 01:26:53,440
bit who

2218
01:26:51,760 --> 01:26:55,360
in particular would would we expect to

2219
01:26:53,440 --> 01:26:57,919
drive the work

2220
01:26:55,360 --> 01:26:59,120
uh do we expect the editors our editor

2221
01:26:57,920 --> 01:27:01,040
to

2222
01:26:59,120 --> 01:27:03,360
drive it do we expect the chair to drive

2223
01:27:01,040 --> 01:27:04,000
it do you expect random individuals on

2224
01:27:03,360 --> 01:27:07,519
the mailing list

2225
01:27:04,000 --> 01:27:07,520
to drive particular issues

2226
01:27:08,639 --> 01:27:12,719
well de facto the people who have more

2227
01:27:10,560 --> 01:27:15,840
time and resources to put in

2228
01:27:12,719 --> 01:27:16,639
tend to uh you know do a lot of driving

2229
01:27:15,840 --> 01:27:20,239
but the

2230
01:27:16,639 --> 01:27:23,440
uh but the mechanism uh in in

2231
01:27:20,239 --> 01:27:25,839
is is that the chairs um

2232
01:27:23,440 --> 01:27:32,000
are supposed to steer the discussions

2233
01:27:25,840 --> 01:27:34,880
and and make the consensus calls

2234
01:27:32,000 --> 01:27:36,960
passive to me uh it's like there is a

2235
01:27:34,880 --> 01:27:40,239
discussion going on and the chair

2236
01:27:36,960 --> 01:27:43,600
derives consensus and oversees it

2237
01:27:40,239 --> 01:27:45,839
uh just wondering you know uh

2238
01:27:43,600 --> 01:27:47,600
you know for those of us in the frame to

2239
01:27:45,840 --> 01:27:49,120
potentially be an editor

2240
01:27:47,600 --> 01:27:52,719
i'm just wondering how much we're taking

2241
01:27:49,120 --> 01:27:52,719
on by agreeing to do that

2242
01:27:53,280 --> 01:27:56,960
well but you know when you become the

2243
01:27:55,120 --> 01:28:00,239
editor um

2244
01:27:56,960 --> 01:28:02,480
the the change control is

2245
01:28:00,239 --> 01:28:03,360
belongs to the working group and the

2246
01:28:02,480 --> 01:28:06,638
working group

2247
01:28:03,360 --> 01:28:08,960
uh you know expresses it by debating and

2248
01:28:06,639 --> 01:28:11,600
then by eventually by consensus calls

2249
01:28:08,960 --> 01:28:13,199
in the happy case where you know there's

2250
01:28:11,600 --> 01:28:14,560
a shared vision of exactly what we're

2251
01:28:13,199 --> 01:28:17,919
trying to build

2252
01:28:14,560 --> 01:28:20,000
um uh you know then everybody pitches in

2253
01:28:17,920 --> 01:28:22,480
to get to the best language

2254
01:28:20,000 --> 01:28:24,080
um the real in my experience the real

2255
01:28:22,480 --> 01:28:26,400
difficulties arise when there's

2256
01:28:24,080 --> 01:28:28,080
genuine disagreement on what the shape

2257
01:28:26,400 --> 01:28:30,799
we're trying to build is

2258
01:28:28,080 --> 01:28:31,280
but uh uh aside from that i have not had

2259
01:28:30,800 --> 01:28:33,520
ex

2260
01:28:31,280 --> 01:28:34,719
you know had a lot of difficulty with

2261
01:28:33,520 --> 01:28:36,639
the experience it seems to work

2262
01:28:34,719 --> 01:28:39,760
reasonably well

2263
01:28:36,639 --> 01:28:41,280
okay and it's probably uh worth

2264
01:28:39,760 --> 01:28:43,199
clarifying that it

2265
01:28:41,280 --> 01:28:44,639
based on how we're how we've been

2266
01:28:43,199 --> 01:28:46,400
discussing things in this

2267
01:28:44,639 --> 01:28:48,400
in our first meeting i think that we'll

2268
01:28:46,400 --> 01:28:50,638
be able to come to consensus on a lot of

2269
01:28:48,400 --> 01:28:52,400
the topics quite easily

2270
01:28:50,639 --> 01:28:54,400
uh and where we don't have that

2271
01:28:52,400 --> 01:28:57,040
consensus i think that's that's the job

2272
01:28:54,400 --> 01:28:58,239
for tim and myself to try and work

2273
01:28:57,040 --> 01:29:00,159
through the subject

2274
01:28:58,239 --> 01:29:01,919
with the working group to try and figure

2275
01:29:00,159 --> 01:29:10,559
out some sort of

2276
01:29:01,920 --> 01:29:12,480
outcome to that

2277
01:29:10,560 --> 01:29:14,239
yeah what what timber said it's of

2278
01:29:12,480 --> 01:29:17,519
course right but it's only true

2279
01:29:14,239 --> 01:29:19,519
once the working draft has been adopted

2280
01:29:17,520 --> 01:29:20,639
so right now there are two individual

2281
01:29:19,520 --> 01:29:22,400
drafts and

2282
01:29:20,639 --> 01:29:24,880
of course we can just go ahead and

2283
01:29:22,400 --> 01:29:28,000
change them as much as you want

2284
01:29:24,880 --> 01:29:30,080
which will in turn influence the

2285
01:29:28,000 --> 01:29:33,840
probability that part of the text

2286
01:29:30,080 --> 01:29:36,320
turns up in a working group draft

2287
01:29:33,840 --> 01:29:39,040
so in larger working groups that have

2288
01:29:36,320 --> 01:29:41,599
more than one draft to look at

2289
01:29:39,040 --> 01:29:43,920
it's sometimes better not to do the work

2290
01:29:41,600 --> 01:29:47,280
adoption too early because

2291
01:29:43,920 --> 01:29:50,400
as long as drafts are individual draft

2292
01:29:47,280 --> 01:29:52,800
the owners of those drafts can charge

2293
01:29:50,400 --> 01:29:55,040
ahead and fix things without

2294
01:29:52,800 --> 01:29:56,560
waiting for for a lot of cycles through

2295
01:29:55,040 --> 01:29:59,280
the working

2296
01:29:56,560 --> 01:30:00,880
group so i'm not sure we are in this

2297
01:29:59,280 --> 01:30:02,960
situation here but

2298
01:30:00,880 --> 01:30:03,920
as a general statement i wanted to point

2299
01:30:02,960 --> 01:30:06,480
out that

2300
01:30:03,920 --> 01:30:08,560
adoption actually completely changes the

2301
01:30:06,480 --> 01:30:12,718
dynamics of

2302
01:30:08,560 --> 01:30:12,719
how a document is being processed

2303
01:30:14,239 --> 01:30:18,400
yes glenn just to that point i was

2304
01:30:17,679 --> 01:30:20,719
intending

2305
01:30:18,400 --> 01:30:22,320
on the draft i've been working on to

2306
01:30:20,719 --> 01:30:24,719
kind of halt work on that

2307
01:30:22,320 --> 01:30:26,480
and focus on the document being

2308
01:30:24,719 --> 01:30:28,719
developed by the working group

2309
01:30:26,480 --> 01:30:32,239
and not to run it in parallel so i'm

2310
01:30:28,719 --> 01:30:32,239
very nervous about getting ahead of

2311
01:30:32,840 --> 01:30:35,600
consensus

2312
01:30:34,159 --> 01:30:37,440
uh you know based on the discussion

2313
01:30:35,600 --> 01:30:39,520
we've had today i'm i i agree

2314
01:30:37,440 --> 01:30:40,879
whoever was said i'm i'm not too worried

2315
01:30:39,520 --> 01:30:43,600
i think we'll probably

2316
01:30:40,880 --> 01:30:44,719
be relatively straightforward for us to

2317
01:30:43,600 --> 01:30:46,159
build consensus

2318
01:30:44,719 --> 01:30:47,840
and that's helped by the fact that we're

2319
01:30:46,159 --> 01:30:49,599
not inventing anything right i mean

2320
01:30:47,840 --> 01:30:52,480
jason path exists

2321
01:30:49,600 --> 01:30:52,960
large parts of it have you know

2322
01:30:52,480 --> 01:30:56,239
everybody

2323
01:30:52,960 --> 01:30:58,159
agrees what it means and and

2324
01:30:56,239 --> 01:30:59,519
getting that just written down the

2325
01:30:58,159 --> 01:31:03,199
shared understanding

2326
01:30:59,520 --> 01:31:06,320
in a clean comprehensible way um

2327
01:31:03,199 --> 01:31:08,638
is is is is non-trivial uh

2328
01:31:06,320 --> 01:31:10,000
i think it's worth working on and i

2329
01:31:08,639 --> 01:31:14,320
wouldn't expect

2330
01:31:10,000 --> 01:31:16,320
a lot of disagreements along the way um

2331
01:31:14,320 --> 01:31:17,920
but i also agree with what carson said

2332
01:31:16,320 --> 01:31:19,280
you know there's there's a lot of value

2333
01:31:17,920 --> 01:31:21,120
in individual drafts

2334
01:31:19,280 --> 01:31:22,960
but once again i i i really am

2335
01:31:21,120 --> 01:31:26,800
optimistic that we can get

2336
01:31:22,960 --> 01:31:31,840
to uh shared consensus uh incomplete

2337
01:31:26,800 --> 01:31:31,840
uh draft by by march

2338
01:31:32,400 --> 01:31:36,719
is it then worth us uh just just to be

2339
01:31:35,040 --> 01:31:40,480
explicit and clear

2340
01:31:36,719 --> 01:31:44,080
is it worth us uh just saying that

2341
01:31:40,480 --> 01:31:47,120
what we what we could do is is adopt uh

2342
01:31:44,080 --> 01:31:49,760
lindstraft as it stands

2343
01:31:47,120 --> 01:31:51,920
uh with the full anticipation that we

2344
01:31:49,760 --> 01:31:55,360
would be merging in

2345
01:31:51,920 --> 01:31:56,560
um the uh works from other other

2346
01:31:55,360 --> 01:31:58,480
documents

2347
01:31:56,560 --> 01:32:00,000
the the other draft as well as any any

2348
01:31:58,480 --> 01:32:02,718
other contributions

2349
01:32:00,000 --> 01:32:03,760
as the starting point for the working

2350
01:32:02,719 --> 01:32:06,480
group document

2351
01:32:03,760 --> 01:32:13,679
is uh anybody have any particular

2352
01:32:06,480 --> 01:32:16,879
thoughts about that

2353
01:32:13,679 --> 01:32:16,880
a thumbs up from marker

2354
01:32:19,600 --> 01:32:24,000
okay i i put myself up but i'm going to

2355
01:32:21,440 --> 01:32:27,599
defer julian

2356
01:32:24,000 --> 01:32:30,320
can you hear me yes yes hey

2357
01:32:27,600 --> 01:32:32,480
um i i just wanted to know that's uh

2358
01:32:30,320 --> 01:32:33,840
typically something that you will call

2359
01:32:32,480 --> 01:32:36,480
for consensus on

2360
01:32:33,840 --> 01:32:37,679
either on the mailing list or i think

2361
01:32:36,480 --> 01:32:40,320
this

2362
01:32:37,679 --> 01:32:41,440
meet echo thing has a show of hands tool

2363
01:32:40,320 --> 01:32:44,000
that we could use

2364
01:32:41,440 --> 01:32:44,719
which would replace the hum that we are

2365
01:32:44,000 --> 01:32:47,920
doing in

2366
01:32:44,719 --> 01:32:50,800
actual itf meetings so the

2367
01:32:47,920 --> 01:32:51,600
the the decision to adopt an individual

2368
01:32:50,800 --> 01:32:53,199
draft

2369
01:32:51,600 --> 01:32:55,120
as working group draft would be

2370
01:32:53,199 --> 01:32:58,480
something you would do a formal call of

2371
01:32:55,120 --> 01:33:01,280
coil for consensus for okay i

2372
01:32:58,480 --> 01:33:03,199
i'm i'm happy to do that as uh in the

2373
01:33:01,280 --> 01:33:06,080
medical now if if

2374
01:33:03,199 --> 01:33:08,239
if that's the uh easiest way to get to a

2375
01:33:06,080 --> 01:33:11,920
conclusion on this

2376
01:33:08,239 --> 01:33:12,480
and that said the um show of hands or

2377
01:33:11,920 --> 01:33:16,639
the hum

2378
01:33:12,480 --> 01:33:19,040
in a working group meeting is taken as

2379
01:33:16,639 --> 01:33:20,560
input for the consensus finding but it

2380
01:33:19,040 --> 01:33:22,400
would still need to be confirmed on the

2381
01:33:20,560 --> 01:33:24,719
mailing list so for those

2382
01:33:22,400 --> 01:33:26,879
for those who are unable to show up at

2383
01:33:24,719 --> 01:33:27,920
the virtual meeting or the actual

2384
01:33:26,880 --> 01:33:31,360
meeting

2385
01:33:27,920 --> 01:33:31,360
okay we can do both

2386
01:33:32,159 --> 01:33:36,559
yeah i'm a little bit nervous you know

2387
01:33:34,480 --> 01:33:36,959
simply because of the distributed nature

2388
01:33:36,560 --> 01:33:38,639
of this

2389
01:33:36,960 --> 01:33:39,679
of this meeting and i'm really pleased

2390
01:33:38,639 --> 01:33:40,880
by the number of people who showed up

2391
01:33:39,679 --> 01:33:42,000
here which is much greater than i

2392
01:33:40,880 --> 01:33:45,199
expected but

2393
01:33:42,000 --> 01:33:46,880
um you know it is after all a an odd

2394
01:33:45,199 --> 01:33:50,000
time for a lot of people

2395
01:33:46,880 --> 01:33:53,600
and i'd be maybe a little nervous about

2396
01:33:50,000 --> 01:33:54,480
adopting based on on on at the basis of

2397
01:33:53,600 --> 01:33:57,120
a

2398
01:33:54,480 --> 01:33:59,280
virtual show of hands here uh without at

2399
01:33:57,120 --> 01:34:02,880
least taking it to the mailing list

2400
01:33:59,280 --> 01:34:06,639
um sure let's take it to the list

2401
01:34:02,880 --> 01:34:07,360
rick go ahead as a chair of a couple of

2402
01:34:06,639 --> 01:34:10,960
other groups

2403
01:34:07,360 --> 01:34:13,120
uh it's really best practice to uh

2404
01:34:10,960 --> 01:34:14,000
to handle adoptions on the mailing list

2405
01:34:13,120 --> 01:34:17,280
by all means

2406
01:34:14,000 --> 01:34:18,639
ask during a session that's great

2407
01:34:17,280 --> 01:34:20,320
but the decision should be on the

2408
01:34:18,639 --> 01:34:23,679
mailing list really for for

2409
01:34:20,320 --> 01:34:26,799
completeness sure yeah i i agree 100

2410
01:34:23,679 --> 01:34:28,320
glenn i guess the question is are there

2411
01:34:26,800 --> 01:34:33,840
any objections here because the

2412
01:34:28,320 --> 01:34:33,840
objections here we could discuss them

2413
01:34:35,760 --> 01:34:38,239
fair enough glenn's uh raised the point

2414
01:34:37,199 --> 01:34:38,960
does anybody have any specific

2415
01:34:38,239 --> 01:34:41,440
objections

2416
01:34:38,960 --> 01:34:41,440
kirsten

2417
01:34:42,080 --> 01:34:47,600
um in larger groups it's often a good

2418
01:34:45,199 --> 01:34:49,119
idea to do adoption with questions

2419
01:34:47,600 --> 01:34:51,600
in the working group meeting because we

2420
01:34:49,119 --> 01:34:53,440
need to find out who's actually

2421
01:34:51,600 --> 01:34:54,800
going to work on the document who's

2422
01:34:53,440 --> 01:34:56,799
going to write code who's going to

2423
01:34:54,800 --> 01:34:59,920
review the document and so on

2424
01:34:56,800 --> 01:35:00,800
so um all of that doesn't occur here we

2425
01:34:59,920 --> 01:35:03,040
we are all

2426
01:35:00,800 --> 01:35:04,800
here in this virtual room right now

2427
01:35:03,040 --> 01:35:08,320
because we care about

2428
01:35:04,800 --> 01:35:11,760
uh this effort um so that's the

2429
01:35:08,320 --> 01:35:12,400
part we just don't need to do um and the

2430
01:35:11,760 --> 01:35:15,119
other part

2431
01:35:12,400 --> 01:35:16,239
actually works better on the meetings

2432
01:35:15,119 --> 01:35:20,080
the question really is

2433
01:35:16,239 --> 01:35:20,080
what what document is being adopted

2434
01:35:20,320 --> 01:35:27,519
and i have indicated my preference

2435
01:35:24,000 --> 01:35:30,719
for that and that's different

2436
01:35:27,520 --> 01:35:31,920
from what you just said so i i would not

2437
01:35:30,719 --> 01:35:35,199
agree

2438
01:35:31,920 --> 01:35:37,840
with the procedure but of course i may

2439
01:35:35,199 --> 01:35:37,839
be just one

2440
01:35:39,920 --> 01:35:43,280
well i don't see any reason not to do a

2441
01:35:41,600 --> 01:35:44,239
show of hands um so the specific

2442
01:35:43,280 --> 01:35:47,199
proposal

2443
01:35:44,239 --> 01:35:47,919
if i understand it is that the working

2444
01:35:47,199 --> 01:35:50,960
group

2445
01:35:47,920 --> 01:35:52,960
adopts the current state of the uh

2446
01:35:50,960 --> 01:35:54,480
glenn marco and somebody else i forget

2447
01:35:52,960 --> 01:35:57,600
the name um

2448
01:35:54,480 --> 01:35:59,199
draft um

2449
01:35:57,600 --> 01:36:02,320
and let me see let me use the show of

2450
01:35:59,199 --> 01:36:05,040
hands meeting so i'm going to try and

2451
01:36:02,320 --> 01:36:05,040
do this so

2452
01:36:07,280 --> 01:36:15,920
let the working group adopt the current

2453
01:36:11,040 --> 01:36:19,360
state of the gwen at i'll

2454
01:36:15,920 --> 01:36:22,880
draft as a draft

2455
01:36:19,360 --> 01:36:26,960
okay so um i've started that

2456
01:36:22,880 --> 01:36:26,960
um and um

2457
01:36:28,480 --> 01:36:32,239
uh if you do people know how to do this

2458
01:36:31,119 --> 01:36:35,679
there's a little uh

2459
01:36:32,239 --> 01:36:39,839
graph bar graph thing uh just under your

2460
01:36:35,679 --> 01:36:39,840
your name you click on that

2461
01:36:43,119 --> 01:36:53,839
and while we have 22 in people here

2462
01:36:46,239 --> 01:36:55,360
that's really excellent

2463
01:36:53,840 --> 01:36:57,119
let's give people a minute we only have

2464
01:36:55,360 --> 01:37:07,839
seven

2465
01:36:57,119 --> 01:37:07,839
hands raised or not

2466
01:37:13,440 --> 01:37:20,239
now the tool allows you to not

2467
01:37:16,480 --> 01:37:22,000
make a decision so it seems true

2468
01:37:20,239 --> 01:37:23,519
quite a few people are sitting here who

2469
01:37:22,000 --> 01:37:26,320
don't know what decision they should

2470
01:37:23,520 --> 01:37:27,520
take and that's just fine there's a lot

2471
01:37:26,320 --> 01:37:28,239
of people who don't have an opinion

2472
01:37:27,520 --> 01:37:31,600
that's also

2473
01:37:28,239 --> 01:37:31,599
perfectly okay input

2474
01:37:32,400 --> 01:37:36,080
so just to repeat what uh in the spirit

2475
01:37:35,760 --> 01:37:39,280
of

2476
01:37:36,080 --> 01:37:39,760
what cast and said i did not raise my

2477
01:37:39,280 --> 01:37:41,679
hands

2478
01:37:39,760 --> 01:37:43,040
but that's for the only reason because i

2479
01:37:41,679 --> 01:37:46,159
haven't looked at the draft

2480
01:37:43,040 --> 01:37:49,600
so i need more time would be the answer

2481
01:37:46,159 --> 01:37:52,159
so ask on the name of this and give a

2482
01:37:49,600 --> 01:37:52,159
few days

2483
01:37:53,040 --> 01:37:57,280
uh to be honest i have the same

2484
01:37:54,639 --> 01:38:00,000
situation i did read the draft but

2485
01:37:57,280 --> 01:38:00,480
that was a while ago and frankly i don't

2486
01:38:00,000 --> 01:38:03,119
have

2487
01:38:00,480 --> 01:38:06,080
a strong opinion so i'm just not my hand

2488
01:38:03,119 --> 01:38:06,080
is not raised at the moment

2489
01:38:06,239 --> 01:38:15,678
uh rudiger is next in the queue

2490
01:38:11,520 --> 01:38:19,679
yeah clicking on do not raise your hand

2491
01:38:15,679 --> 01:38:19,679
does not mean objection

2492
01:38:23,119 --> 01:38:26,320
sorry i see please ask that again i

2493
01:38:25,199 --> 01:38:28,638
didn't understand

2494
01:38:26,320 --> 01:38:28,639
okay

2495
01:38:29,360 --> 01:38:33,119
clicking on do not raise your hand does

2496
01:38:32,159 --> 01:38:36,480
not mean

2497
01:38:33,119 --> 01:38:39,599
objection it just

2498
01:38:36,480 --> 01:38:42,638
it just means it just means you were

2499
01:38:39,600 --> 01:38:42,639
using the tool

2500
01:38:43,280 --> 01:38:48,320
asking for objections would be a

2501
01:38:45,280 --> 01:38:48,320
separate question

2502
01:38:49,280 --> 01:38:54,159
okay fair enough but um de facto there

2503
01:38:52,719 --> 01:38:55,360
is a real difference between clinton do

2504
01:38:54,159 --> 01:38:59,839
not raise your hand

2505
01:38:55,360 --> 01:38:59,839
and not clicking anything at all

2506
01:38:59,920 --> 01:39:05,280
um okay so at this point

2507
01:39:03,280 --> 01:39:08,080
i'm seeing three hands raised six

2508
01:39:05,280 --> 01:39:10,840
explicitly not raised out of 22s that's

2509
01:39:08,080 --> 01:39:13,840
probably less than half the people

2510
01:39:10,840 --> 01:39:13,840
um

2511
01:39:15,840 --> 01:39:19,280
uh murray

2512
01:39:19,920 --> 01:39:23,040
normally when we take homes you would

2513
01:39:21,440 --> 01:39:25,440
ask both questions

2514
01:39:23,040 --> 01:39:26,800
so you would say does anybody want this

2515
01:39:25,440 --> 01:39:27,919
hum now and then you would say does

2516
01:39:26,800 --> 01:39:29,920
anybody object to this

2517
01:39:27,920 --> 01:39:31,520
hum now sort of thing so you might ask

2518
01:39:29,920 --> 01:39:32,159
the question twice just to eliminate

2519
01:39:31,520 --> 01:39:34,480
that

2520
01:39:32,159 --> 01:39:35,679
but this is um that's not a major point

2521
01:39:34,480 --> 01:39:37,839
i don't think since you're planning to

2522
01:39:35,679 --> 01:39:40,880
take this to the list anyway

2523
01:39:37,840 --> 01:39:42,400
yeah no this is useful input

2524
01:39:40,880 --> 01:39:43,920
so it shows us that a lot of people

2525
01:39:42,400 --> 01:39:45,679
haven't made up their minds

2526
01:39:43,920 --> 01:39:47,280
that um there are people who are nervous

2527
01:39:45,679 --> 01:39:49,440
about doing it um

2528
01:39:47,280 --> 01:39:50,480
and let's let's take this idea to the

2529
01:39:49,440 --> 01:39:52,879
list and

2530
01:39:50,480 --> 01:39:54,159
it also may help for uh james and i to

2531
01:39:52,880 --> 01:39:55,920
do our jobs and and

2532
01:39:54,159 --> 01:39:57,599
and make decisions about editorial roles

2533
01:39:55,920 --> 01:40:00,560
and things like that too to help

2534
01:39:57,600 --> 01:40:00,560
yeah that move along

2535
01:40:06,320 --> 01:40:09,679
okay that's enough votes i'll end the

2536
01:40:07,920 --> 01:40:12,320
session it was three six

2537
01:40:09,679 --> 01:40:12,320
three and six

2538
01:40:16,080 --> 01:40:22,800
oops my m my meat echo is

2539
01:40:20,080 --> 01:40:23,199
well there it is it came back okay folks

2540
01:40:22,800 --> 01:40:25,679
this has

2541
01:40:23,199 --> 01:40:27,199
all been very useful any any further

2542
01:40:25,679 --> 01:40:30,000
input

2543
01:40:27,199 --> 01:40:30,000
any further business

2544
01:40:34,800 --> 01:40:38,639
well with that i'm going to say thank

2545
01:40:36,480 --> 01:40:40,080
you uh one once again good morning good

2546
01:40:38,639 --> 01:40:41,119
afternoon and good evening thank you for

2547
01:40:40,080 --> 01:40:44,400
coming out i'm

2548
01:40:41,119 --> 01:40:46,320
i'm i'm really pleased with the uh

2549
01:40:44,400 --> 01:40:47,839
it seems like we have uh broadly

2550
01:40:46,320 --> 01:40:50,159
speaking a shared understanding of what

2551
01:40:47,840 --> 01:40:52,880
it is we're trying to do here

2552
01:40:50,159 --> 01:40:55,440
and a good understanding of the problem

2553
01:40:52,880 --> 01:40:57,760
so i'm super optimistic that we are

2554
01:40:55,440 --> 01:41:00,239
going to get a good result so thank you

2555
01:40:57,760 --> 01:41:02,320
everybody james any closing remarks

2556
01:41:00,239 --> 01:41:03,280
um no i think you've done a good job

2557
01:41:02,320 --> 01:41:05,199
covering it

2558
01:41:03,280 --> 01:41:08,000
thank you everyone for for your time and

2559
01:41:05,199 --> 01:41:08,000
uh participation

2560
01:41:08,639 --> 01:41:19,840
cool okay thanks everybody

2561
01:41:11,920 --> 01:41:19,840
thanks you later

2562
01:41:30,840 --> 01:41:33,840
uh

2563
01:42:26,840 --> 01:42:29,840
yes

2564
01:42:40,840 --> 01:42:43,840
um

2565
01:42:57,800 --> 01:43:00,890
[Music]

2566
01:43:08,840 --> 01:43:11,840
uh

2567
01:43:19,560 --> 01:43:22,560
oh

