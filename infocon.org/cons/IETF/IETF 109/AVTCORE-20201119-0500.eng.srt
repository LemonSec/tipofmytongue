1
00:00:06,080 --> 00:00:10,800
it's fixed

2
00:00:07,839 --> 00:00:10,800
for me it's not working

3
00:00:14,719 --> 00:00:18,160
reload the page and it will be fixed

4
00:00:29,519 --> 00:00:33,119
did you need a jabber scrub

5
00:00:36,160 --> 00:00:41,360
yes we do i'll do that

6
00:00:39,280 --> 00:00:45,840
brian so brian brian rosen movie drivers

7
00:00:41,360 --> 00:00:45,840
great good thank you

8
00:00:51,600 --> 00:00:55,520
does anybody want to volunteer to be a

9
00:00:53,600 --> 00:00:58,160
note taker

10
00:00:55,520 --> 00:01:00,079
i see somebody typing ryan robin will be

11
00:00:58,160 --> 00:01:02,718
traverscribed into the notes

12
00:01:00,079 --> 00:01:05,680
so is that brian or is that somebody

13
00:01:02,719 --> 00:01:05,680
else it's somebody else

14
00:01:06,159 --> 00:01:09,520
no that's just me saying i'm going to be

15
00:01:08,479 --> 00:01:13,840
the jabber scribe

16
00:01:09,520 --> 00:01:13,840
well thank you

17
00:01:33,600 --> 00:01:41,839
have a volunteer to take notes

18
00:01:51,439 --> 00:01:55,600
well i can take some uh and promise i'm

19
00:01:54,560 --> 00:01:58,479
gonna go oh it's

20
00:01:55,600 --> 00:02:01,119
i have to put them into some weird tool

21
00:01:58,479 --> 00:02:04,560
what is that weird tool again

22
00:02:01,119 --> 00:02:04,560
it's the kodi md

23
00:02:04,880 --> 00:02:10,239
uh this it's working

24
00:02:08,080 --> 00:02:11,680
you have to put it in the tool it's just

25
00:02:10,239 --> 00:02:12,000
something we're trying to get people to

26
00:02:11,680 --> 00:02:13,680
use

27
00:02:12,000 --> 00:02:15,920
you want to use any tool you want if

28
00:02:13,680 --> 00:02:19,440
you're willing to take minutes

29
00:02:15,920 --> 00:02:19,440
chairs won't object i'm sure

30
00:02:30,720 --> 00:02:35,920
you know i will take two i will use

31
00:02:33,760 --> 00:02:38,079
word which i always use and then send it

32
00:02:35,920 --> 00:02:43,440
to you by email as i always do

33
00:02:38,080 --> 00:02:43,440
so stefan takes notes okay thank you

34
00:02:49,360 --> 00:02:52,000
no i don't

35
00:03:02,319 --> 00:03:05,760
i believe we are now at our starting

36
00:03:03,840 --> 00:03:09,680
time so

37
00:03:05,760 --> 00:03:14,079
we're not possibly let

38
00:03:09,680 --> 00:03:16,319
people begin to um

39
00:03:14,080 --> 00:03:18,239
come in but i think we're probably ready

40
00:03:16,319 --> 00:03:21,599
to start

41
00:03:18,239 --> 00:03:24,080
um so uh

42
00:03:21,599 --> 00:03:24,079
let's see

43
00:03:24,879 --> 00:03:30,239
welcome to avt car welcome to virtual

44
00:03:27,760 --> 00:03:30,239
bank

45
00:03:30,840 --> 00:03:35,600
and let's see

46
00:03:35,120 --> 00:03:38,860
uh

47
00:03:35,600 --> 00:03:38,859
[Music]

48
00:03:39,440 --> 00:03:43,840
okay yes it's the uh here we are the

49
00:03:44,799 --> 00:03:47,840
meeting tips

50
00:03:48,159 --> 00:03:54,640
if you're in the medical room again no

51
00:03:52,480 --> 00:03:57,200
i'm hearing it feedback from somebody is

52
00:03:54,640 --> 00:03:57,200
that you

53
00:03:59,519 --> 00:04:05,120
i bernard let's see okay

54
00:04:02,959 --> 00:04:08,159
yes good so um if you're in the medical

55
00:04:05,120 --> 00:04:08,159
room you can uh

56
00:04:08,239 --> 00:04:12,319
you don't um you should be seeing the

57
00:04:10,560 --> 00:04:14,000
chat if you joined early and it's not

58
00:04:12,319 --> 00:04:16,320
working reload the page

59
00:04:14,000 --> 00:04:17,199
there was a medico is having a brief

60
00:04:16,320 --> 00:04:21,759
issue

61
00:04:17,199 --> 00:04:21,759
which they have fixed um

62
00:04:22,000 --> 00:04:27,960
so um other than that yes see the notes

63
00:04:26,840 --> 00:04:29,840
here

64
00:04:27,960 --> 00:04:32,799
[Music]

65
00:04:29,840 --> 00:04:34,560
uh yeah here are the instructions on how

66
00:04:32,800 --> 00:04:37,840
to use

67
00:04:34,560 --> 00:04:38,880
mitika if you've been in the room

68
00:04:37,840 --> 00:04:40,000
uh if you've been in one of these

69
00:04:38,880 --> 00:04:41,040
meetings previously you probably

70
00:04:40,000 --> 00:04:45,280
hopefully know this but

71
00:04:41,040 --> 00:04:45,280
if not here are some tips um

72
00:04:45,360 --> 00:04:49,280
important to note when you're at the

73
00:04:47,040 --> 00:04:49,280
queue

74
00:04:49,360 --> 00:04:51,520
when when you come to the front of the

75
00:04:50,560 --> 00:04:53,199
queue and we call on you you have to

76
00:04:51,520 --> 00:04:54,000
unmute yourself rather than submitting

77
00:04:53,199 --> 00:04:55,520
you

78
00:04:54,000 --> 00:04:57,440
uh and if you want to send video that's

79
00:04:55,520 --> 00:04:58,880
great but you have to send audio also

80
00:04:57,440 --> 00:05:01,199
separately video

81
00:04:58,880 --> 00:05:03,199
is just images not actually that does

82
00:05:01,199 --> 00:05:06,479
not include audio

83
00:05:03,199 --> 00:05:09,600
they're two separate toggles

84
00:05:06,479 --> 00:05:11,199
i'm not well this is an ietf

85
00:05:09,600 --> 00:05:13,039
meeting so the note well applies these

86
00:05:11,199 --> 00:05:16,720
are our standards on

87
00:05:13,039 --> 00:05:19,360
uh actual property and code of conduct

88
00:05:16,720 --> 00:05:21,280
please be familiar with these and if you

89
00:05:19,360 --> 00:05:26,400
want more questions

90
00:05:21,280 --> 00:05:26,400
ask somebody offline or

91
00:05:26,720 --> 00:05:30,160
follow the follow the links on the page

92
00:05:30,479 --> 00:05:35,280
uh about this meeting we have the agenda

93
00:05:33,360 --> 00:05:39,919
we have the notes

94
00:05:35,280 --> 00:05:42,000
though um uh and uh

95
00:05:39,919 --> 00:05:43,840
we have the dabber room uh bernard

96
00:05:42,000 --> 00:05:47,759
admire the chairs

97
00:05:43,840 --> 00:05:49,679
uh we have

98
00:05:47,759 --> 00:05:50,880
uh brian rosen will be jabber scribe if

99
00:05:49,680 --> 00:05:53,520
you

100
00:05:50,880 --> 00:05:54,000
aren't able to or don't want to speak

101
00:05:53,520 --> 00:05:55,280
you could

102
00:05:54,000 --> 00:05:57,840
type something into the chat he can

103
00:05:55,280 --> 00:06:01,039
relay it for you he fix it with mike

104
00:05:57,840 --> 00:06:02,638
um and we have uh

105
00:06:01,039 --> 00:06:04,000
stefan wenger taking notes on his own

106
00:06:02,639 --> 00:06:05,120
but if somebody else also wants to take

107
00:06:04,000 --> 00:06:07,039
notes

108
00:06:05,120 --> 00:06:08,479
on the kodi md are also on their own

109
00:06:07,039 --> 00:06:09,919
that's also always appreciated

110
00:06:08,479 --> 00:06:12,800
please send them to us or let us know

111
00:06:09,919 --> 00:06:16,639
where they are after the fact

112
00:06:12,800 --> 00:06:16,639
uh now we're gonna do the slides tab

113
00:06:16,800 --> 00:06:23,840
our agenda um

114
00:06:20,639 --> 00:06:25,680
our one agenda batch we had is that

115
00:06:23,840 --> 00:06:27,520
colin perkins who was supposed to be the

116
00:06:25,680 --> 00:06:31,360
first item

117
00:06:27,520 --> 00:06:34,799
um has to be in the uh

118
00:06:31,360 --> 00:06:37,840
uh i think coin rg or some

119
00:06:34,800 --> 00:06:39,199
some higher i hear g

120
00:06:37,840 --> 00:06:41,280
group because he's the chair of that so

121
00:06:39,199 --> 00:06:44,880
we're go he's we're going to

122
00:06:41,280 --> 00:06:46,400
bump him later until uh

123
00:06:44,880 --> 00:06:47,840
he's able to come here he's in the

124
00:06:46,400 --> 00:06:48,880
jabber so we'll be able to let him know

125
00:06:47,840 --> 00:06:52,080
when it's

126
00:06:48,880 --> 00:06:53,840
time but uh he's not yet here in the

127
00:06:52,080 --> 00:06:55,680
midico so hopefully he'll be able to

128
00:06:53,840 --> 00:06:57,599
join here and so we'll move

129
00:06:55,680 --> 00:07:00,639
uh gunner first and then we'll see if

130
00:06:57,599 --> 00:07:02,159
colin has joined and then

131
00:07:00,639 --> 00:07:03,919
if not we'll go on to justin and so

132
00:07:02,160 --> 00:07:07,919
forth

133
00:07:03,919 --> 00:07:10,719
um and just as do we have other than

134
00:07:07,919 --> 00:07:13,440
that we have all our

135
00:07:10,720 --> 00:07:13,440
let's see

136
00:07:14,639 --> 00:07:18,240
don't think we have all the participants

137
00:07:16,319 --> 00:07:21,280
yet so we'll

138
00:07:18,240 --> 00:07:25,599
have to see if uh everybody is here but

139
00:07:21,280 --> 00:07:25,599
we'll get to things as we can get them

140
00:07:26,400 --> 00:07:32,080
like over is it anything you want

141
00:07:29,520 --> 00:07:32,639
yes attempt to do something to say yes

142
00:07:32,080 --> 00:07:35,840
uh

143
00:07:32,639 --> 00:07:37,199
just uh one one thing the number seven

144
00:07:35,840 --> 00:07:40,560
the rtp payload

145
00:07:37,199 --> 00:07:41,280
it says uh s lugan but it will be me who

146
00:07:40,560 --> 00:07:44,400
isn't

147
00:07:41,280 --> 00:07:45,520
this part okay that's fine but if that

148
00:07:44,400 --> 00:07:48,239
first name only

149
00:07:45,520 --> 00:07:50,159
i did fill in this incorrectly when i

150
00:07:48,240 --> 00:07:50,560
registered my account i already modified

151
00:07:50,160 --> 00:07:53,039
it but

152
00:07:50,560 --> 00:07:54,879
i think i need to log out and log in

153
00:07:53,039 --> 00:07:55,599
again and i i'm not going to do that now

154
00:07:54,879 --> 00:07:58,240
so sorry

155
00:07:55,599 --> 00:07:58,639
okay yeah just just let us know your

156
00:07:58,240 --> 00:08:00,319
just

157
00:07:58,639 --> 00:08:02,080
you know type your full name into the

158
00:08:00,319 --> 00:08:02,479
chat or something then we can update you

159
00:08:02,080 --> 00:08:05,599
on yes

160
00:08:02,479 --> 00:08:08,240
okay and

161
00:08:05,599 --> 00:08:08,240
uh stefan

162
00:08:10,319 --> 00:08:15,520
so for ubc we didn't have a presentation

163
00:08:13,840 --> 00:08:17,520
on that or the evc payload we didn't

164
00:08:15,520 --> 00:08:19,840
have a presentation for that but

165
00:08:17,520 --> 00:08:21,359
we we need to we need guidance as this

166
00:08:19,840 --> 00:08:22,799
is i think

167
00:08:21,360 --> 00:08:24,800
well being declared as a working group

168
00:08:22,800 --> 00:08:27,199
craft we need guidance how to proceed

169
00:08:24,800 --> 00:08:29,680
with it regarding the stp parameters

170
00:08:27,199 --> 00:08:30,800
thank you okay yeah we should be able to

171
00:08:29,680 --> 00:08:33,599
um probably well

172
00:08:30,800 --> 00:08:34,959
i've got a the next slide is uh working

173
00:08:33,599 --> 00:08:37,680
group items that are not

174
00:08:34,958 --> 00:08:41,838
on the uh on the agenda so we'll talk we

175
00:08:37,679 --> 00:08:41,838
can talk about that briefly

176
00:08:42,958 --> 00:08:47,518
um and then speaking of which here are

177
00:08:45,920 --> 00:08:49,120
the draft statuses since the last

178
00:08:47,519 --> 00:08:52,839
meeting

179
00:08:49,120 --> 00:08:55,519
we have published one rfc which was the

180
00:08:52,839 --> 00:08:58,320
tsvcis payload so

181
00:08:55,519 --> 00:09:00,160
good work there we've got four documents

182
00:08:58,320 --> 00:09:01,839
that are in auth 48 done

183
00:09:00,160 --> 00:09:03,360
which basically means they're waiting on

184
00:09:01,839 --> 00:09:05,680
other documents in their cluster to

185
00:09:03,360 --> 00:09:08,320
finish off 48 as i understand it

186
00:09:05,680 --> 00:09:08,800
so we're done as far as we're concerned

187
00:09:08,320 --> 00:09:12,160
unless

188
00:09:08,800 --> 00:09:15,599
something exciting blows up but

189
00:09:12,160 --> 00:09:18,240
um hopefully that should

190
00:09:15,600 --> 00:09:20,640
be published once those clusters clear

191
00:09:18,240 --> 00:09:23,040
um

192
00:09:20,640 --> 00:09:23,839
other than that uh we've got two things

193
00:09:23,040 --> 00:09:27,040
that are

194
00:09:23,839 --> 00:09:28,560
i think both of these are well

195
00:09:27,040 --> 00:09:31,040
probably me falling down a little bit

196
00:09:28,560 --> 00:09:32,560
one is vp9 we said last time was

197
00:09:31,040 --> 00:09:34,880
ready for working class called and we

198
00:09:32,560 --> 00:09:35,279
didn't so we'll try to do that now i

199
00:09:34,880 --> 00:09:36,480
think

200
00:09:35,279 --> 00:09:39,200
bernard you should probably be the one

201
00:09:36,480 --> 00:09:40,640
to take that since i'm an author on that

202
00:09:39,200 --> 00:09:42,800
so we should probably do that after the

203
00:09:40,640 --> 00:09:47,199
meeting and then frame marking

204
00:09:42,800 --> 00:09:50,240
um mo made some changes after the last

205
00:09:47,200 --> 00:09:50,800
ietf and said this is there's this is

206
00:09:50,240 --> 00:09:52,560
some

207
00:09:50,800 --> 00:09:53,599
um changes which you know substantial

208
00:09:52,560 --> 00:09:54,640
lefty thought that's been the working

209
00:09:53,600 --> 00:09:56,560
class call

210
00:09:54,640 --> 00:09:59,279
which i then completely failed to

211
00:09:56,560 --> 00:10:02,079
respond to and i apologize it's my fault

212
00:09:59,279 --> 00:10:03,920
um actually if we could mark action

213
00:10:02,079 --> 00:10:07,519
items for both those working group last

214
00:10:03,920 --> 00:10:10,800
calls in the notes that would be helpful

215
00:10:07,519 --> 00:10:14,640
yeah they'll help us follow up

216
00:10:10,800 --> 00:10:15,599
yes um so the tetrad payload draft is

217
00:10:14,640 --> 00:10:18,319
expired

218
00:10:15,600 --> 00:10:19,680
expired i think beginning of this year

219
00:10:18,320 --> 00:10:22,160
um

220
00:10:19,680 --> 00:10:24,399
it's not clear to me that that anybody

221
00:10:22,160 --> 00:10:27,680
is still interested in pursuing that

222
00:10:24,399 --> 00:10:29,360
um so we might want to drop that from

223
00:10:27,680 --> 00:10:31,359
the milestones

224
00:10:29,360 --> 00:10:32,880
um if but probably we should ping the

225
00:10:31,360 --> 00:10:33,839
authors first so

226
00:10:32,880 --> 00:10:37,200
let's see if you could put something in

227
00:10:33,839 --> 00:10:37,200
the minutes that the chairs should

228
00:10:38,079 --> 00:10:43,519
uh should ping

229
00:10:41,279 --> 00:10:45,200
should uh follow up on that and if not

230
00:10:43,519 --> 00:10:46,160
remove the milestone unless anybody else

231
00:10:45,200 --> 00:10:47,200
thinks that

232
00:10:46,160 --> 00:10:49,199
you know they want to take it over

233
00:10:47,200 --> 00:10:50,800
anything and then we had finally we had

234
00:10:49,200 --> 00:10:54,079
a call for adoption on evc

235
00:10:50,800 --> 00:10:57,680
which seemed to be favorable uh

236
00:10:54,079 --> 00:11:00,719
so um i think

237
00:10:57,680 --> 00:11:03,920
the authors um

238
00:11:00,720 --> 00:11:06,079
should uh resubmit that as a

239
00:11:03,920 --> 00:11:07,360
working group item since the and there

240
00:11:06,079 --> 00:11:09,120
were some people's you know

241
00:11:07,360 --> 00:11:10,640
people saying yes and nobody's saying no

242
00:11:09,120 --> 00:11:11,920
i'll say you can resubmit that at the

243
00:11:10,640 --> 00:11:14,720
draft idfa decor

244
00:11:11,920 --> 00:11:15,760
and stephanie said you have your

245
00:11:14,720 --> 00:11:16,959
questions you want to ask the list i

246
00:11:15,760 --> 00:11:18,720
think the thing to do would be to

247
00:11:16,959 --> 00:11:20,880
email the mailing list with your

248
00:11:18,720 --> 00:11:23,360
questions and hopefully we can get some

249
00:11:20,880 --> 00:11:26,160
good feedback on that so that's

250
00:11:23,360 --> 00:11:28,000
everything that's on the agenda

251
00:11:26,160 --> 00:11:29,360
uh everything else everything else all

252
00:11:28,000 --> 00:11:30,959
the other working group items are on the

253
00:11:29,360 --> 00:11:32,399
agenda as far as i know

254
00:11:30,959 --> 00:11:35,518
unless i've missed something when i was

255
00:11:32,399 --> 00:11:35,519
going over the data tracker

256
00:11:35,760 --> 00:11:41,120
hey oh it's right here did you see we

257
00:11:39,120 --> 00:11:42,399
should uh upload a working group chat

258
00:11:41,120 --> 00:11:44,880
for the evc

259
00:11:42,399 --> 00:11:47,519
yeah for evc upload a working group job

260
00:11:44,880 --> 00:11:47,519
okay thank you

261
00:11:48,480 --> 00:11:57,040
and then finally thank you to everybody

262
00:11:52,880 --> 00:11:57,600
from the current evc individual draft

263
00:11:57,040 --> 00:11:58,959
right

264
00:11:57,600 --> 00:12:01,040
yeah yeah take that yeah start start

265
00:11:58,959 --> 00:12:03,599
from the current individual draft

266
00:12:01,040 --> 00:12:05,120
um as your baseline yeah so in that case

267
00:12:03,600 --> 00:12:08,639
again i want to request

268
00:12:05,120 --> 00:12:10,720
one minute regarding in that case

269
00:12:08,639 --> 00:12:12,639
again i want to request one minute after

270
00:12:10,720 --> 00:12:15,200
the vbc pedo draft to

271
00:12:12,639 --> 00:12:16,000
quickly have some suggestions for

272
00:12:15,200 --> 00:12:18,880
additional

273
00:12:16,000 --> 00:12:19,200
uh work there okay that's fine that's

274
00:12:18,880 --> 00:12:22,480
fine

275
00:12:19,200 --> 00:12:22,480
thank you yeah yeah

276
00:12:22,800 --> 00:12:27,519
all right and finally as i said thanks

277
00:12:25,920 --> 00:12:30,719
to

278
00:12:27,519 --> 00:12:33,839
uh the secretariat and i guess also

279
00:12:30,720 --> 00:12:34,880
midako everybody here and the ads for

280
00:12:33,839 --> 00:12:37,200
everything they've done to make the help

281
00:12:34,880 --> 00:12:40,399
big as possible and

282
00:12:37,200 --> 00:12:44,399
uh now i guess let's get started

283
00:12:40,399 --> 00:12:44,399
uh so i think we're going to start with

284
00:12:45,440 --> 00:12:52,540
uh gunnar yes

285
00:12:49,519 --> 00:12:55,610
so let's see

286
00:12:52,540 --> 00:12:55,610
[Music]

287
00:13:05,279 --> 00:13:08,880
okay just let me know when you want me

288
00:13:06,480 --> 00:13:10,240
to advance the slides

289
00:13:08,880 --> 00:13:12,399
uh actually i don't think make sure

290
00:13:10,240 --> 00:13:15,600
you're sending audio gun are right we

291
00:13:12,399 --> 00:13:15,600
only see your video not your audio

292
00:13:16,560 --> 00:13:23,920
how about that you're here now we hear

293
00:13:20,480 --> 00:13:24,800
okay so this is a presentation of the

294
00:13:23,920 --> 00:13:28,240
multi-part

295
00:13:24,800 --> 00:13:31,279
the real-time text items

296
00:13:28,240 --> 00:13:34,720
we have two drafts one is still

297
00:13:31,279 --> 00:13:38,880
personal but the important one

298
00:13:34,720 --> 00:13:42,000
is draft atf abt core multi-party

299
00:13:38,880 --> 00:13:46,320
rtt mix and

300
00:13:42,000 --> 00:13:49,120
i just made version 10 yesterday

301
00:13:46,320 --> 00:13:50,720
the other one is more background

302
00:13:49,120 --> 00:13:53,920
specification of these

303
00:13:50,720 --> 00:13:56,320
solutions discuss discussing of

304
00:13:53,920 --> 00:13:57,599
different solutions it's called

305
00:13:56,320 --> 00:14:01,360
multiparty rtt

306
00:13:57,600 --> 00:14:06,160
solutions and it's on

307
00:14:01,360 --> 00:14:06,160
level 04 right now so please next

308
00:14:09,360 --> 00:14:17,120
um i'll start this time with the

309
00:14:13,600 --> 00:14:20,880
show of possible presentations of

310
00:14:17,120 --> 00:14:24,399
real-time text in a multi-party setting

311
00:14:20,880 --> 00:14:27,600
the idea is that we shall not prescribe

312
00:14:24,399 --> 00:14:30,720
presentation but we have

313
00:14:27,600 --> 00:14:31,839
some background requirements from the

314
00:14:30,720 --> 00:14:35,279
itu-t

315
00:14:31,839 --> 00:14:39,360
presentation level standard

316
00:14:35,279 --> 00:14:41,439
t140 and it says that you shall

317
00:14:39,360 --> 00:14:42,399
present even if you have multiple

318
00:14:41,440 --> 00:14:44,720
parties

319
00:14:42,399 --> 00:14:45,600
sending simultaneously you need to

320
00:14:44,720 --> 00:14:48,880
present it

321
00:14:45,600 --> 00:14:52,160
readable in at least phrases or

322
00:14:48,880 --> 00:14:55,360
sentences with

323
00:14:52,160 --> 00:14:57,120
the source indicated and

324
00:14:55,360 --> 00:14:59,600
you should have multiple insertion

325
00:14:57,120 --> 00:15:03,360
points so that the text can flow

326
00:14:59,600 --> 00:15:07,760
from multiple parties at the same time

327
00:15:03,360 --> 00:15:10,480
and the approximate timing of the

328
00:15:07,760 --> 00:15:11,360
entries shall be visible so this is one

329
00:15:10,480 --> 00:15:14,639
way you can

330
00:15:11,360 --> 00:15:16,880
present real-time multi-party real-time

331
00:15:14,639 --> 00:15:20,079
text with three participants

332
00:15:16,880 --> 00:15:26,720
and next slide please

333
00:15:20,079 --> 00:15:29,439
and next slide there is another view

334
00:15:26,720 --> 00:15:30,240
in a kind of chat style where you have

335
00:15:29,440 --> 00:15:34,000
oops

336
00:15:30,240 --> 00:15:35,279
that would to wrap it but you saw it it

337
00:15:34,000 --> 00:15:38,560
looks like a

338
00:15:35,279 --> 00:15:41,519
traditional chat style but the text is

339
00:15:38,560 --> 00:15:43,279
flowing in multiple insertion points so

340
00:15:41,519 --> 00:15:47,360
that you can

341
00:15:43,279 --> 00:15:52,480
follow more than one participants

342
00:15:47,360 --> 00:15:55,839
entries in real time and

343
00:15:52,480 --> 00:15:55,839
next slide please

344
00:15:58,480 --> 00:16:06,480
the solutions draft

345
00:16:03,199 --> 00:16:08,160
is just informational and it's used as

346
00:16:06,480 --> 00:16:11,199
background for specification

347
00:16:08,160 --> 00:16:14,240
of the standards track draft

348
00:16:11,199 --> 00:16:17,920
it contains the requirements and the

349
00:16:14,240 --> 00:16:20,800
different transport and negotiation

350
00:16:17,920 --> 00:16:21,599
solutions with pros and cons for

351
00:16:20,800 --> 00:16:25,199
different

352
00:16:21,600 --> 00:16:28,399
alternatives it can be used

353
00:16:25,199 --> 00:16:32,079
by developers and it can be used for

354
00:16:28,399 --> 00:16:32,079
inspiration in future work

355
00:16:32,160 --> 00:16:37,519
the latest changes were to align it with

356
00:16:35,279 --> 00:16:42,079
version 09 of the main

357
00:16:37,519 --> 00:16:44,320
the avt core draft but now it's

358
00:16:42,079 --> 00:16:46,959
it's backlogging and since i made

359
00:16:44,320 --> 00:16:46,959
version 10

360
00:16:47,920 --> 00:16:51,279
i had an ambition from the beginning to

361
00:16:50,079 --> 00:16:54,399
make this an

362
00:16:51,279 --> 00:16:56,639
rfc but i'm not sure anymore

363
00:16:54,399 --> 00:16:58,079
if we continue that i think it's

364
00:16:56,639 --> 00:17:04,559
valuable as

365
00:16:58,079 --> 00:17:08,159
background at least next slide please

366
00:17:04,559 --> 00:17:11,439
so the important one is

367
00:17:08,160 --> 00:17:14,799
the rtt mix

368
00:17:11,439 --> 00:17:18,319
which is now 10 it is a standard track

369
00:17:14,799 --> 00:17:22,319
draft the main focus is on

370
00:17:18,319 --> 00:17:25,438
the rtp based solution for a centrally

371
00:17:22,319 --> 00:17:27,918
controlled ship conference with multiple

372
00:17:25,439 --> 00:17:27,919
parties

373
00:17:28,400 --> 00:17:38,320
there is brief information on webrtc

374
00:17:32,240 --> 00:17:38,320
which is now an rfc to be 8865

375
00:17:38,640 --> 00:17:46,240
there are also brief information of

376
00:17:40,960 --> 00:17:49,360
gateways and security

377
00:17:46,240 --> 00:17:53,039
good presentation of uh

378
00:17:49,360 --> 00:17:56,399
text requires that multi-party

379
00:17:53,039 --> 00:17:58,320
aware actions by the receiver so the

380
00:17:56,400 --> 00:18:03,120
receiver must be

381
00:17:58,320 --> 00:18:06,480
able to handle the this rtp flow

382
00:18:03,120 --> 00:18:09,039
and distribute the received text

383
00:18:06,480 --> 00:18:09,600
from multiple simultaneously sending

384
00:18:09,039 --> 00:18:12,080
sources

385
00:18:09,600 --> 00:18:12,959
so that it can be presented in a

386
00:18:12,080 --> 00:18:16,799
readable

387
00:18:12,960 --> 00:18:21,120
way even if it comes simultaneously

388
00:18:16,799 --> 00:18:26,000
so the presentation need to be in

389
00:18:21,120 --> 00:18:26,000
readable chunks like phrases or so

390
00:18:26,840 --> 00:18:29,840
um

391
00:18:30,000 --> 00:18:34,640
it contains the draft contains two rtp

392
00:18:33,200 --> 00:18:37,679
mixing solution

393
00:18:34,640 --> 00:18:41,200
one is for multi-party aware

394
00:18:37,679 --> 00:18:45,679
endpoints and with

395
00:18:41,200 --> 00:18:48,799
rfc 4103 format

396
00:18:45,679 --> 00:18:51,919
with one source per packet in

397
00:18:48,799 --> 00:18:56,080
the csrc so each packet

398
00:18:51,919 --> 00:18:56,080
must not have more than one source

399
00:18:56,559 --> 00:19:03,918
and the the source is indicated in csrc

400
00:19:00,880 --> 00:19:06,960
and the other one is

401
00:19:03,919 --> 00:19:09,600
fallback for

402
00:19:06,960 --> 00:19:10,880
endpoints who do not understand this

403
00:19:09,600 --> 00:19:15,120
multi

404
00:19:10,880 --> 00:19:18,559
party format so there the mixer needs to

405
00:19:15,120 --> 00:19:21,918
make the mixing and that is

406
00:19:18,559 --> 00:19:24,720
not at all as functional as the

407
00:19:21,919 --> 00:19:26,880
main solution but it's needed because

408
00:19:24,720 --> 00:19:29,760
there are

409
00:19:26,880 --> 00:19:29,760
real-time text

410
00:19:32,320 --> 00:19:35,520
implementations out there who do not

411
00:19:34,400 --> 00:19:40,160
understand

412
00:19:35,520 --> 00:19:43,440
this new way of doing multi-party

413
00:19:40,160 --> 00:19:48,559
so that's the main thing main

414
00:19:43,440 --> 00:19:48,559
content so this draft and next slide

415
00:19:50,840 --> 00:19:53,840
please

416
00:19:54,160 --> 00:19:56,559
i got

417
00:19:57,840 --> 00:20:04,240
a series of good comments from brian

418
00:20:01,200 --> 00:20:07,600
just beginning of november and uh

419
00:20:04,240 --> 00:20:11,440
one important question was why

420
00:20:07,600 --> 00:20:11,439
do we need to

421
00:20:12,159 --> 00:20:20,159
change between two sources in

422
00:20:15,360 --> 00:20:20,479
a slow and clumsy way why don't we if we

423
00:20:20,159 --> 00:20:23,600
have

424
00:20:20,480 --> 00:20:27,280
more than one source in the mixer

425
00:20:23,600 --> 00:20:30,320
why don't we just interleave them

426
00:20:27,280 --> 00:20:33,840
and that made me

427
00:20:30,320 --> 00:20:34,720
rethink and introduce and much more

428
00:20:33,840 --> 00:20:38,000
efficient

429
00:20:34,720 --> 00:20:41,039
interleaving method and that was

430
00:20:38,000 --> 00:20:44,159
included in the version i

431
00:20:41,039 --> 00:20:44,158
submitted yesterday

432
00:20:45,600 --> 00:20:52,559
so that enables different sources for

433
00:20:49,520 --> 00:20:55,039
each packet instead of change at

434
00:20:52,559 --> 00:20:57,840
every fourth packet which we had in

435
00:20:55,039 --> 00:21:01,679
earlier versions

436
00:20:57,840 --> 00:21:05,678
so this makes it possible to have

437
00:21:01,679 --> 00:21:08,880
four or five simultaneous participants

438
00:21:05,679 --> 00:21:12,080
sending texts at the same time

439
00:21:08,880 --> 00:21:16,960
without performance

440
00:21:12,080 --> 00:21:19,389
loss and

441
00:21:16,960 --> 00:21:22,429
next slide please

442
00:21:19,390 --> 00:21:22,429
[Music]

443
00:21:25,520 --> 00:21:29,760
so

444
00:21:26,770 --> 00:21:32,799
[Music]

445
00:21:29,760 --> 00:21:35,840
the new way is

446
00:21:32,799 --> 00:21:38,480
that when there is text from

447
00:21:35,840 --> 00:21:42,000
more than one source available for

448
00:21:38,480 --> 00:21:42,000
transmission in the mixer

449
00:21:42,480 --> 00:21:47,200
then send next packet with all available

450
00:21:45,840 --> 00:21:50,320
text from the source

451
00:21:47,200 --> 00:21:53,600
with the oldest the

452
00:21:50,320 --> 00:21:57,360
remaining unsend text and send this

453
00:21:53,600 --> 00:22:00,240
100 milliseconds after the latest packet

454
00:21:57,360 --> 00:22:01,760
i have this timing so that we don't

455
00:22:00,240 --> 00:22:05,280
overload

456
00:22:01,760 --> 00:22:10,158
any thing in the path the network

457
00:22:05,280 --> 00:22:10,158
the receiver or the mixer

458
00:22:10,559 --> 00:22:15,840
and when text is available only from one

459
00:22:14,400 --> 00:22:18,960
source which is

460
00:22:15,840 --> 00:22:22,240
usually the during most of the time in a

461
00:22:18,960 --> 00:22:25,520
session then

462
00:22:22,240 --> 00:22:28,559
send next packet to 330 milliseconds

463
00:22:25,520 --> 00:22:30,960
after latest packet but

464
00:22:28,559 --> 00:22:32,639
then this will synchronize with the

465
00:22:30,960 --> 00:22:35,520
packets coming from the

466
00:22:32,640 --> 00:22:37,360
sender which is usually sent at the 300

467
00:22:35,520 --> 00:22:41,840
milliseconds

468
00:22:37,360 --> 00:22:41,840
interval so this will

469
00:22:42,320 --> 00:22:52,000
be aligned with a more efficient

470
00:22:46,960 --> 00:22:52,000
transmission of packets and next slide

471
00:22:52,840 --> 00:22:58,000
please

472
00:22:55,679 --> 00:22:58,000
um

473
00:23:00,000 --> 00:23:07,440
this new interleaving method requires a

474
00:23:03,840 --> 00:23:10,799
totally changed

475
00:23:07,440 --> 00:23:14,000
detection of loss and

476
00:23:10,799 --> 00:23:17,679
recovery of redundancy

477
00:23:14,000 --> 00:23:19,840
when needed so

478
00:23:17,679 --> 00:23:21,280
the receiver now needs to look at the

479
00:23:19,840 --> 00:23:23,678
timestamp of

480
00:23:21,280 --> 00:23:26,080
the latest received text from each

481
00:23:23,679 --> 00:23:29,120
source and

482
00:23:26,080 --> 00:23:31,918
when it receives anything more it

483
00:23:29,120 --> 00:23:32,479
evaluates the original timestamp stamp

484
00:23:31,919 --> 00:23:35,520
of

485
00:23:32,480 --> 00:23:38,640
redundant text and check

486
00:23:35,520 --> 00:23:39,679
if the text was received from that

487
00:23:38,640 --> 00:23:42,720
source

488
00:23:39,679 --> 00:23:43,440
with these timestamps and recover the

489
00:23:42,720 --> 00:23:47,039
text

490
00:23:43,440 --> 00:23:51,840
if this

491
00:23:47,039 --> 00:23:51,840
text was not received as original before

492
00:23:52,080 --> 00:23:56,639
the marking of possible loss is

493
00:23:58,720 --> 00:24:04,480
more tricky now it's harder to detect

494
00:24:01,760 --> 00:24:05,279
if there was a complete loss instead of

495
00:24:04,480 --> 00:24:08,240
a

496
00:24:05,279 --> 00:24:09,440
possibility to recover from the

497
00:24:08,240 --> 00:24:12,960
redundancy

498
00:24:09,440 --> 00:24:15,200
so this lost

499
00:24:12,960 --> 00:24:16,159
sentence seems in fact wrong you can

500
00:24:15,200 --> 00:24:20,880
have

501
00:24:16,159 --> 00:24:24,720
oh yeah if you have lost three

502
00:24:20,880 --> 00:24:25,520
packets anywhere the last second then

503
00:24:24,720 --> 00:24:28,640
there it

504
00:24:25,520 --> 00:24:32,639
might be a loss and this is the

505
00:24:28,640 --> 00:24:36,000
bad side of the new method that

506
00:24:32,640 --> 00:24:38,400
we cannot exactly detect if we lost

507
00:24:36,000 --> 00:24:38,400
anything

508
00:24:38,880 --> 00:24:50,240
next slide please

509
00:24:46,880 --> 00:24:50,480
so now here it says that the new version

510
00:24:50,240 --> 00:24:53,039
is

511
00:24:50,480 --> 00:24:55,840
planned when but it was submitted

512
00:24:53,039 --> 00:24:59,360
yesterday so that you can all

513
00:24:55,840 --> 00:25:03,439
check the changes

514
00:24:59,360 --> 00:25:03,439
and it is these

515
00:25:04,159 --> 00:25:10,559
the new interleaving method that is the

516
00:25:07,440 --> 00:25:11,279
new big new thing the other parts are

517
00:25:10,559 --> 00:25:14,799
not

518
00:25:11,279 --> 00:25:18,000
drastically and i

519
00:25:14,799 --> 00:25:22,000
hope that we can now go for

520
00:25:18,000 --> 00:25:26,840
last call in this for this draft

521
00:25:22,000 --> 00:25:28,960
and i think this was the end next slide

522
00:25:26,840 --> 00:25:31,760
please

523
00:25:28,960 --> 00:25:33,760
yep and comments are very welcome we

524
00:25:31,760 --> 00:25:37,200
have

525
00:25:33,760 --> 00:25:37,520
not had very much comments on this draft

526
00:25:37,200 --> 00:25:40,840
and

527
00:25:37,520 --> 00:25:43,840
it is needed to get it processed

528
00:25:40,840 --> 00:25:43,840
thanks

529
00:25:46,000 --> 00:25:51,840
gunner there's a question in the um

530
00:25:49,679 --> 00:25:52,960
in the in the chat room that says how

531
00:25:51,840 --> 00:25:55,360
will this uh

532
00:25:52,960 --> 00:25:56,880
lose 3 mechanism work with new packet

533
00:25:55,360 --> 00:25:59,439
recovery mechanisms

534
00:25:56,880 --> 00:25:59,440
like rack

535
00:26:00,799 --> 00:26:11,440
rack i haven't read about track

536
00:26:04,799 --> 00:26:11,440
so can you tell me a little about rack

537
00:26:13,840 --> 00:26:17,520
is that something on the lower packet

538
00:26:17,039 --> 00:26:21,600
level

539
00:26:17,520 --> 00:26:21,600
or is it included in

540
00:26:22,840 --> 00:26:27,600
rtp

541
00:26:25,520 --> 00:26:30,080
it's coming from the jabber room so i

542
00:26:27,600 --> 00:26:33,760
don't i don't i don't okay

543
00:26:30,080 --> 00:26:39,840
okay interesting note i can

544
00:26:33,760 --> 00:26:39,840
check it offline

545
00:26:45,679 --> 00:26:49,600
uh yeah i i'm daniel have you asked the

546
00:26:47,919 --> 00:26:50,080
question i actually joined the queue but

547
00:26:49,600 --> 00:26:53,199
nobody

548
00:26:50,080 --> 00:26:56,720
nobody uh called on me so a

549
00:26:53,200 --> 00:26:58,080
rack is a is a new packet uh recovery

550
00:26:56,720 --> 00:27:00,320
mechanism

551
00:26:58,080 --> 00:27:02,399
uh instead of fast recovery and having

552
00:27:00,320 --> 00:27:05,439
three lost packets what we do is we use

553
00:27:02,400 --> 00:27:07,679
time and and so we'll

554
00:27:05,440 --> 00:27:09,360
we'll resend packets based on time and

555
00:27:07,679 --> 00:27:10,720
i'm just wondering how this is going to

556
00:27:09,360 --> 00:27:15,439
interact with the

557
00:27:10,720 --> 00:27:15,440
the mechanism of looking at three loss

558
00:27:18,840 --> 00:27:21,840
packets

559
00:27:30,640 --> 00:27:38,559
iraq is new to me i cannot

560
00:27:34,720 --> 00:27:42,240
see exactly how how it will interfere

561
00:27:38,559 --> 00:27:45,600
with this remember that

562
00:27:42,240 --> 00:27:46,799
rtt doesn't have a packet a continuous

563
00:27:45,600 --> 00:27:48,959
packet sequence

564
00:27:46,799 --> 00:27:50,000
right it's intermittent it's how fast

565
00:27:48,960 --> 00:27:52,480
you type

566
00:27:50,000 --> 00:27:53,919
so you can't use time as an indication

567
00:27:52,480 --> 00:27:57,039
of

568
00:27:53,919 --> 00:28:00,320
of in the of this data

569
00:27:57,039 --> 00:28:03,440
am i not working well yeah

570
00:28:00,320 --> 00:28:07,200
but we collect

571
00:28:03,440 --> 00:28:07,200
text in small chunks

572
00:28:07,760 --> 00:28:15,760
three which is irregular you can

573
00:28:12,240 --> 00:28:19,760
but in order to not overload the

574
00:28:15,760 --> 00:28:22,879
paths we say that we don't send

575
00:28:19,760 --> 00:28:27,760
more than now 100 uh

576
00:28:22,880 --> 00:28:27,760
100 millisecond chunks of text

577
00:28:28,840 --> 00:28:31,840
okay

578
00:28:32,799 --> 00:28:39,200
and then if if you

579
00:28:36,720 --> 00:28:42,799
stop typing then it will not send

580
00:28:39,200 --> 00:28:42,799
anything until next time you

581
00:28:43,679 --> 00:28:46,880
so type are you telling me that you're

582
00:28:45,120 --> 00:28:48,639
collecting like chunks of data like

583
00:28:46,880 --> 00:28:52,480
three chunks of data are missing and you

584
00:28:48,640 --> 00:28:52,480
say oh okay that must be packet loss

585
00:28:53,120 --> 00:29:00,000
we have the sequence number in rtp

586
00:28:56,840 --> 00:29:02,720
to detect

587
00:29:00,000 --> 00:29:02,720
packet loss

588
00:29:03,679 --> 00:29:10,960
but now we change

589
00:29:08,399 --> 00:29:12,080
so that when we have received we have a

590
00:29:10,960 --> 00:29:15,279
redundancy scheme

591
00:29:12,080 --> 00:29:18,320
to be able to recover from packet loss

592
00:29:15,279 --> 00:29:21,200
and now we look

593
00:29:18,320 --> 00:29:21,840
first look at the timing of the time

594
00:29:21,200 --> 00:29:25,120
stamp

595
00:29:21,840 --> 00:29:28,320
of the rtp packets and

596
00:29:25,120 --> 00:29:33,360
look back if we have

597
00:29:28,320 --> 00:29:36,399
received the redundant part before

598
00:29:33,360 --> 00:29:41,840
comparing its original timestamp

599
00:29:36,399 --> 00:29:41,840
and timestamp in the redundancy header

600
00:29:42,320 --> 00:29:45,600
[Music]

601
00:29:43,520 --> 00:29:48,000
okay i think i think actually this

602
00:29:45,600 --> 00:29:50,240
probably doesn't affect you because

603
00:29:48,000 --> 00:29:51,039
rack is not not prominent in udp

604
00:29:50,240 --> 00:29:54,240
protocols

605
00:29:51,039 --> 00:29:57,919
it's prominent in tcp you know

606
00:29:54,240 --> 00:30:00,240
we introduced it in windows okay

607
00:29:57,919 --> 00:30:01,760
but probably maybe something you should

608
00:30:00,240 --> 00:30:04,000
think about for the future

609
00:30:01,760 --> 00:30:05,360
because it seems to be a much better

610
00:30:04,000 --> 00:30:08,559
mechanism than the

611
00:30:05,360 --> 00:30:10,158
fast recovery with three packets but i

612
00:30:08,559 --> 00:30:12,000
don't i don't think it actually affects

613
00:30:10,159 --> 00:30:16,480
this protocol now

614
00:30:12,000 --> 00:30:21,039
no right uh we're using rtp and

615
00:30:16,480 --> 00:30:24,799
the redundancy of rfc 2198

616
00:30:21,039 --> 00:30:28,320
which transmits

617
00:30:24,799 --> 00:30:32,639
every every chunk three times um

618
00:30:28,320 --> 00:30:34,320
so you're right and it is udp and it is

619
00:30:32,640 --> 00:30:38,000
rtp and with

620
00:30:34,320 --> 00:30:40,960
this draft is just a small addition to

621
00:30:38,000 --> 00:30:41,760
the original real-time text transmission

622
00:30:40,960 --> 00:30:45,600
rfc

623
00:30:41,760 --> 00:30:49,919
4103 so we didn't want to

624
00:30:45,600 --> 00:30:51,199
change any major transport mechanism

625
00:30:49,919 --> 00:30:55,200
that is

626
00:30:51,200 --> 00:30:58,960
we have already a an rfc for

627
00:30:55,200 --> 00:31:00,159
webrtc transport where you use the data

628
00:30:58,960 --> 00:31:02,880
channel of

629
00:31:00,159 --> 00:31:04,399
webrtc i think i think that will be the

630
00:31:02,880 --> 00:31:08,000
future way to

631
00:31:04,399 --> 00:31:11,279
transport real-time text in fact

632
00:31:08,000 --> 00:31:13,919
but okay rtp is still needed

633
00:31:11,279 --> 00:31:15,600
so thanks my question is andrew thank

634
00:31:13,919 --> 00:31:18,640
you

635
00:31:15,600 --> 00:31:22,158
brian yeah um

636
00:31:18,640 --> 00:31:24,880
so uh i'll i will check 10 to see

637
00:31:22,159 --> 00:31:25,600
how you've resolved the other uh of my

638
00:31:24,880 --> 00:31:28,399
comments

639
00:31:25,600 --> 00:31:29,039
and look at this new mechanism for if i

640
00:31:28,399 --> 00:31:32,080
i think the

641
00:31:29,039 --> 00:31:34,000
text is okay i do think the doc at that

642
00:31:32,080 --> 00:31:35,279
point should be ready for working group

643
00:31:34,000 --> 00:31:38,159
last call

644
00:31:35,279 --> 00:31:40,640
and i want to remind participants that

645
00:31:38,159 --> 00:31:43,039
this is high priority work there is

646
00:31:40,640 --> 00:31:44,640
implementations that are waiting for

647
00:31:43,039 --> 00:31:47,120
this to

648
00:31:44,640 --> 00:31:49,039
solidify so that they can do it there

649
00:31:47,120 --> 00:31:53,439
are planned deployments

650
00:31:49,039 --> 00:31:56,000
in canada uh related to emergency calls

651
00:31:53,440 --> 00:31:56,960
we really don't want to have multi-party

652
00:31:56,000 --> 00:32:00,159
unaware

653
00:31:56,960 --> 00:32:02,240
uh endpoints if we can can

654
00:32:00,159 --> 00:32:03,279
can can deal with it but but at any rate

655
00:32:02,240 --> 00:32:05,200
this is

656
00:32:03,279 --> 00:32:07,519
very high priority work for some people

657
00:32:05,200 --> 00:32:08,399
and and will get deployed very quickly

658
00:32:07,519 --> 00:32:12,840
so

659
00:32:08,399 --> 00:32:15,840
please let's finish thank you thank you

660
00:32:12,840 --> 00:32:15,840
thanks

661
00:32:16,720 --> 00:32:20,000
i guess as an individual to have one

662
00:32:18,159 --> 00:32:21,760
question with this loss

663
00:32:20,000 --> 00:32:23,519
list you can always tell you've lost

664
00:32:21,760 --> 00:32:24,480
something you can't necessarily always

665
00:32:23,519 --> 00:32:26,080
tell

666
00:32:24,480 --> 00:32:29,840
who's where did which participants text

667
00:32:26,080 --> 00:32:29,840
was lost is that correct

668
00:32:30,000 --> 00:32:34,399
no the problem now is that it's harder

669
00:32:33,519 --> 00:32:36,880
to

670
00:32:34,399 --> 00:32:36,879
detect

671
00:32:38,080 --> 00:32:45,439
what loss there was

672
00:32:41,120 --> 00:32:49,918
okay all right yeah so i think

673
00:32:45,440 --> 00:32:52,720
um and of course in theory it's also

674
00:32:49,919 --> 00:32:56,720
always hard to

675
00:32:52,720 --> 00:32:59,519
detect which packets you never got

676
00:32:56,720 --> 00:33:00,880
right yeah so i think yeah i think yeah

677
00:32:59,519 --> 00:33:02,320
let's try to get that to working group

678
00:33:00,880 --> 00:33:03,440
last call if you think all open issues

679
00:33:02,320 --> 00:33:05,200
are resolved

680
00:33:03,440 --> 00:33:06,799
so whoever's taking notes please take

681
00:33:05,200 --> 00:33:08,559
also the note there that will send that

682
00:33:06,799 --> 00:33:11,120
to working group class call

683
00:33:08,559 --> 00:33:12,799
shortly um so i think on the other

684
00:33:11,120 --> 00:33:15,360
document

685
00:33:12,799 --> 00:33:16,799
um my suggestion would be if we do want

686
00:33:15,360 --> 00:33:18,000
to publish that as information let's try

687
00:33:16,799 --> 00:33:20,480
to get the

688
00:33:18,000 --> 00:33:22,880
main rqt text document done first and

689
00:33:20,480 --> 00:33:24,240
then if we want to publish the

690
00:33:22,880 --> 00:33:25,840
other document as an informational

691
00:33:24,240 --> 00:33:27,519
afterwards because that's obviously much

692
00:33:25,840 --> 00:33:30,639
less time critical

693
00:33:27,519 --> 00:33:34,399
um right

694
00:33:30,640 --> 00:33:36,240
were you planning i mean

695
00:33:34,399 --> 00:33:37,840
uh i originally said no and then i

696
00:33:36,240 --> 00:33:38,799
thought other people said yes so i said

697
00:33:37,840 --> 00:33:40,320
okay that's fine

698
00:33:38,799 --> 00:33:43,840
but if other people are saying no now

699
00:33:40,320 --> 00:33:43,840
i'm happy to say no i'm not do so

700
00:33:45,200 --> 00:33:48,880
i i i'm happy to do with whatever the

701
00:33:47,200 --> 00:33:50,880
group wants but last time people said

702
00:33:48,880 --> 00:33:53,840
they thought it might be useful

703
00:33:50,880 --> 00:33:53,840
um

704
00:33:59,840 --> 00:34:03,840
just wanted to clarify yeah so it sounds

705
00:34:02,399 --> 00:34:04,719
like we're ready to work last call on

706
00:34:03,840 --> 00:34:08,239
the main

707
00:34:04,720 --> 00:34:08,240
main document that's the

708
00:34:08,480 --> 00:34:12,240
give me an opportunity to review 10 to

709
00:34:10,480 --> 00:34:14,800
make sure that my comments were

710
00:34:12,239 --> 00:34:15,918
resolved okay yeah let us yeah so email

711
00:34:14,800 --> 00:34:17,280
email the list when you've done that

712
00:34:15,918 --> 00:34:18,560
brian and then we'll do it

713
00:34:17,280 --> 00:34:20,399
if you're if you're happy we'll do a

714
00:34:18,560 --> 00:34:21,599
working box though yeah i'll be on the

715
00:34:20,399 --> 00:34:23,839
list shortly

716
00:34:21,599 --> 00:34:25,839
uh i mean i will review 10 shortly and

717
00:34:23,839 --> 00:34:29,199
send any comments i have

718
00:34:25,839 --> 00:34:29,199
sounds great thanks

719
00:34:30,800 --> 00:34:34,079
all right and then we'll figure out what

720
00:34:32,320 --> 00:34:34,560
to do with the other document if if

721
00:34:34,079 --> 00:34:36,879
anything

722
00:34:34,560 --> 00:34:37,918
later yeah we can wait with that

723
00:34:36,879 --> 00:34:39,540
question

724
00:34:37,918 --> 00:34:41,118
yeah all right um

725
00:34:39,540 --> 00:34:42,879
[Music]

726
00:34:41,119 --> 00:34:46,320
so i think is that everything for this i

727
00:34:42,879 --> 00:34:48,239
think so so let's move on

728
00:34:46,320 --> 00:34:49,440
yeah justin's next uh we still don't

729
00:34:48,239 --> 00:34:53,040
have colin

730
00:34:49,440 --> 00:34:56,320
so let's see let me share

731
00:34:53,040 --> 00:34:56,320
justin slides

732
00:35:00,400 --> 00:35:03,839
there we are

733
00:35:06,079 --> 00:35:09,119
uh you you can just uh you can just

734
00:35:07,920 --> 00:35:11,760
unmake yourself justin you don't have to

735
00:35:09,119 --> 00:35:11,760
be on the cube

736
00:35:12,400 --> 00:35:20,240
perfect there we go how this thing works

737
00:35:17,119 --> 00:35:22,079
uh okay so uh this is a continuation of

738
00:35:20,240 --> 00:35:24,479
uh the topic that we sort of discussed

739
00:35:22,079 --> 00:35:26,160
at 108 um and sort of managed to make a

740
00:35:24,480 --> 00:35:29,760
good on a good progress there

741
00:35:26,160 --> 00:35:33,279
it's not a modified presentation and

742
00:35:29,760 --> 00:35:35,760
reference document uh so

743
00:35:33,280 --> 00:35:35,760
next slide

744
00:35:36,560 --> 00:35:39,839
uh you know the overall problem

745
00:35:38,320 --> 00:35:42,240
statement is that

746
00:35:39,839 --> 00:35:43,520
uh you know basically srtb only encrypts

747
00:35:42,240 --> 00:35:47,118
the actual payload

748
00:35:43,520 --> 00:35:47,680
of rtp packets and you know historically

749
00:35:47,119 --> 00:35:50,480
that was

750
00:35:47,680 --> 00:35:52,000
uh not really a big deal um you know

751
00:35:50,480 --> 00:35:54,320
most the information that was covered

752
00:35:52,000 --> 00:35:56,320
in you know header extensions was

753
00:35:54,320 --> 00:36:00,079
considered to be non-sensitive

754
00:35:56,320 --> 00:36:00,079
uh next slide

755
00:36:03,760 --> 00:36:06,880
um but now we are actually sending a

756
00:36:05,760 --> 00:36:09,440
fair amount of stuff

757
00:36:06,880 --> 00:36:10,320
in header extensions and some of these

758
00:36:09,440 --> 00:36:12,800
uh have

759
00:36:10,320 --> 00:36:13,760
even been noted in their defining rfcs

760
00:36:12,800 --> 00:36:15,520
is something that

761
00:36:13,760 --> 00:36:17,119
where they're carrying information

762
00:36:15,520 --> 00:36:20,160
that's somewhat sensitive

763
00:36:17,119 --> 00:36:22,079
uh in particular ssrc audio level

764
00:36:20,160 --> 00:36:24,000
uh which actually carries like the

765
00:36:22,079 --> 00:36:26,079
volume of you know not just who is

766
00:36:24,000 --> 00:36:28,960
speaking but the exact sort of

767
00:36:26,079 --> 00:36:30,800
uh you know or a quantized energy level

768
00:36:28,960 --> 00:36:32,400
and video content type also kind of

769
00:36:30,800 --> 00:36:32,960
indicates whether someone is sending

770
00:36:32,400 --> 00:36:36,160
video

771
00:36:32,960 --> 00:36:38,000
or a screen share which can be used to

772
00:36:36,160 --> 00:36:40,240
indicate oa who is speaking in a meeting

773
00:36:38,000 --> 00:36:41,920
and maybe who's presenting uh

774
00:36:40,240 --> 00:36:43,200
so there's definitely some information

775
00:36:41,920 --> 00:36:44,000
that you know you could then you know

776
00:36:43,200 --> 00:36:46,960
mine out

777
00:36:44,000 --> 00:36:47,520
of this uh you know header information

778
00:36:46,960 --> 00:36:48,800
um

779
00:36:47,520 --> 00:36:50,560
and even if like you're not you're

780
00:36:48,800 --> 00:36:51,839
covering like you know all the actual

781
00:36:50,560 --> 00:36:53,920
details of what's being discussed you

782
00:36:51,839 --> 00:36:55,520
can still learn things about the clients

783
00:36:53,920 --> 00:36:56,480
uh do they have hardware codecs do they

784
00:36:55,520 --> 00:36:59,759
support hdr

785
00:36:56,480 --> 00:37:01,200
what type of application is it um where

786
00:36:59,760 --> 00:37:02,800
like you know of course our trend is to

787
00:37:01,200 --> 00:37:04,319
try to move away from like letting any

788
00:37:02,800 --> 00:37:05,280
of this information be carried in clear

789
00:37:04,320 --> 00:37:08,320
text

790
00:37:05,280 --> 00:37:10,160
um rfc 6904 uh

791
00:37:08,320 --> 00:37:12,320
you know did try to address this but

792
00:37:10,160 --> 00:37:13,920
only sort of encrypting the actual

793
00:37:12,320 --> 00:37:15,599
payloads of these extensions

794
00:37:13,920 --> 00:37:17,119
rather than the extensions and their ids

795
00:37:15,599 --> 00:37:18,320
themselves so even if you were to

796
00:37:17,119 --> 00:37:19,760
encrypt the bodies

797
00:37:18,320 --> 00:37:22,000
you'd still be able to tell what

798
00:37:19,760 --> 00:37:24,079
extensions uh you know we're being sent

799
00:37:22,000 --> 00:37:26,720
around by virtue of the ids

800
00:37:24,079 --> 00:37:27,680
uh because you know most of the sdps

801
00:37:26,720 --> 00:37:30,000
exist right now

802
00:37:27,680 --> 00:37:30,720
and uh webrtc implementations are fairly

803
00:37:30,000 --> 00:37:31,920
static

804
00:37:30,720 --> 00:37:33,118
and so you can probably figure out

805
00:37:31,920 --> 00:37:33,760
what's being sent around just been

806
00:37:33,119 --> 00:37:37,119
looking at the

807
00:37:33,760 --> 00:37:39,680
the numeric ids so

808
00:37:37,119 --> 00:37:39,680
next slide

809
00:37:40,240 --> 00:37:44,479
what we're going to do is encrypt the

810
00:37:42,640 --> 00:37:46,720
entire extension block

811
00:37:44,480 --> 00:37:47,520
uh including the ids and and their

812
00:37:46,720 --> 00:37:50,078
lengths

813
00:37:47,520 --> 00:37:50,640
and while we're doing that we'll also

814
00:37:50,079 --> 00:37:51,760
encrypt

815
00:37:50,640 --> 00:37:54,400
you know some of the other things that

816
00:37:51,760 --> 00:37:57,760
are kind of easy to encrypt in the

817
00:37:54,400 --> 00:37:59,280
srtp packet uh most notably the csrc

818
00:37:57,760 --> 00:38:01,920
identifiers

819
00:37:59,280 --> 00:38:03,839
and uh you know we discussed this at itf

820
00:38:01,920 --> 00:38:05,200
108 as whether there were more things

821
00:38:03,839 --> 00:38:07,040
that could be encrypted

822
00:38:05,200 --> 00:38:08,319
but it turns out that the timestamp and

823
00:38:07,040 --> 00:38:10,079
the ssrc

824
00:38:08,320 --> 00:38:11,599
sorry the sequence number and the ssrc

825
00:38:10,079 --> 00:38:12,640
are used for the key schedule for

826
00:38:11,599 --> 00:38:13,920
encryption

827
00:38:12,640 --> 00:38:16,078
and then like there's some other things

828
00:38:13,920 --> 00:38:17,040
needed for demuxing like the payload

829
00:38:16,079 --> 00:38:18,960
type

830
00:38:17,040 --> 00:38:20,160
and you know some of the other bits that

831
00:38:18,960 --> 00:38:21,200
we decided that you know it's more

832
00:38:20,160 --> 00:38:22,240
trouble than it would be worth to

833
00:38:21,200 --> 00:38:23,680
actually try to

834
00:38:22,240 --> 00:38:25,279
go and encrypt those pieces if you

835
00:38:23,680 --> 00:38:27,200
really wanted to do something

836
00:38:25,280 --> 00:38:29,040
and basically secure all that

837
00:38:27,200 --> 00:38:30,240
information you'd be better off with an

838
00:38:29,040 --> 00:38:34,560
encapsulating protocol

839
00:38:30,240 --> 00:38:34,560
like dtls so um

840
00:38:34,720 --> 00:38:38,560
overall like uh this seems like a pretty

841
00:38:36,640 --> 00:38:40,319
uh simple thing we can do we can use the

842
00:38:38,560 --> 00:38:40,960
existing srtp encryption mechanism to

843
00:38:40,320 --> 00:38:42,560
basically

844
00:38:40,960 --> 00:38:44,160
use the offset of where you start

845
00:38:42,560 --> 00:38:46,078
encrypting rather than starting at the

846
00:38:44,160 --> 00:38:49,359
payload we just started earlier

847
00:38:46,079 --> 00:38:52,400
and cover the csrc and extension block

848
00:38:49,359 --> 00:38:54,160
uh and it's uh we don't change any

849
00:38:52,400 --> 00:38:56,079
of the actual where the lights are in

850
00:38:54,160 --> 00:38:58,000
the packet so it's uh compatible with

851
00:38:56,079 --> 00:39:01,839
all existing rtp parsing code

852
00:38:58,000 --> 00:39:01,839
which is which is nice

853
00:39:03,760 --> 00:39:06,240
next slide

854
00:39:07,119 --> 00:39:12,160
uh so here this kind of defines uh

855
00:39:10,640 --> 00:39:14,240
you know you need to know whether or not

856
00:39:12,160 --> 00:39:15,200
your uh counterparty is actually using

857
00:39:14,240 --> 00:39:17,919
this technique

858
00:39:15,200 --> 00:39:19,279
and the way this is done is by uh each

859
00:39:17,920 --> 00:39:22,640
uh

860
00:39:19,280 --> 00:39:26,480
you know rc 5285 defines a mechanism

861
00:39:22,640 --> 00:39:28,078
for identifying that 525 is in use which

862
00:39:26,480 --> 00:39:30,240
is the thing that we use to figure out

863
00:39:28,079 --> 00:39:32,160
how to encode the header extensions

864
00:39:30,240 --> 00:39:33,759
and they put a uh they call defined by

865
00:39:32,160 --> 00:39:36,480
profile block in there

866
00:39:33,760 --> 00:39:38,000
which is a 16-bit integer uh of a

867
00:39:36,480 --> 00:39:39,839
certain form that tells us that the

868
00:39:38,000 --> 00:39:41,839
things are laid out in a certain way

869
00:39:39,839 --> 00:39:44,320
here we've basically introduced a new

870
00:39:41,839 --> 00:39:47,200
16-bit integer which basically says that

871
00:39:44,320 --> 00:39:49,280
we're doing 52-85 header extensions but

872
00:39:47,200 --> 00:39:51,598
this time they're all fully encrypted

873
00:39:49,280 --> 00:39:53,599
um you know if you want to get into the

874
00:39:51,599 --> 00:39:54,720
details there's actually two things to

875
00:39:53,599 --> 00:39:58,400
find in 5285

876
00:39:54,720 --> 00:40:00,078
one for uh where the id and the length

877
00:39:58,400 --> 00:40:02,160
are contained in a single byte

878
00:40:00,079 --> 00:40:04,079
uh and then there's another one fourth

879
00:40:02,160 --> 00:40:04,879
the iodine length are each individual

880
00:40:04,079 --> 00:40:06,560
bytes

881
00:40:04,880 --> 00:40:08,960
is known as like two byte headers spread

882
00:40:06,560 --> 00:40:10,960
the extensions and here we have two new

883
00:40:08,960 --> 00:40:12,160
16-bit defined by profile identifiers

884
00:40:10,960 --> 00:40:16,480
for the one byte

885
00:40:12,160 --> 00:40:16,480
and two byte id length combos

886
00:40:16,720 --> 00:40:22,720
martin did you have a question or i see

887
00:40:19,760 --> 00:40:25,520
you're showing up as green on my screen

888
00:40:22,720 --> 00:40:26,720
sorry it's the only way i get audio no

889
00:40:25,520 --> 00:40:29,920
worries

890
00:40:26,720 --> 00:40:29,919
all right next slide

891
00:40:31,200 --> 00:40:37,520
so uh that's the basic mechanism

892
00:40:34,240 --> 00:40:39,919
uh there are some you know special cases

893
00:40:37,520 --> 00:40:41,520
one of them is that uh you know if you

894
00:40:39,920 --> 00:40:42,880
want to send a packet that doesn't have

895
00:40:41,520 --> 00:40:45,119
header extensions

896
00:40:42,880 --> 00:40:45,920
but does have csrcs that you want to

897
00:40:45,119 --> 00:40:48,000
encrypt

898
00:40:45,920 --> 00:40:49,680
uh the only way that you can tell their

899
00:40:48,000 --> 00:40:51,119
counterparty that the header extensions

900
00:40:49,680 --> 00:40:55,200
are actually being encrypted

901
00:40:51,119 --> 00:40:56,960
is by adding a uh you know the 32 bits

902
00:40:55,200 --> 00:40:59,680
uh basically for an empty extension

903
00:40:56,960 --> 00:41:02,240
block where you'd have the 16 bits for

904
00:40:59,680 --> 00:41:04,160
the uh you know defined by profile thing

905
00:41:02,240 --> 00:41:05,680
saying that the sections are encrypted

906
00:41:04,160 --> 00:41:07,359
uh and then their other 16 bits can

907
00:41:05,680 --> 00:41:08,319
basically say it's just a you know a

908
00:41:07,359 --> 00:41:10,240
zero length

909
00:41:08,319 --> 00:41:12,400
uh extension block uh and that was

910
00:41:10,240 --> 00:41:13,680
pointed out by sergio and i think that's

911
00:41:12,400 --> 00:41:15,680
a pretty clean solution to

912
00:41:13,680 --> 00:41:17,118
that particular problem uh may not

913
00:41:15,680 --> 00:41:17,839
actually be a real world case most of

914
00:41:17,119 --> 00:41:19,200
the time

915
00:41:17,839 --> 00:41:21,119
you know extensions are almost always

916
00:41:19,200 --> 00:41:22,720
being sent but only these covers that

917
00:41:21,119 --> 00:41:26,000
let along this end

918
00:41:22,720 --> 00:41:29,439
um the actual capability is uh

919
00:41:26,000 --> 00:41:31,440
signaled via sdp um

920
00:41:29,440 --> 00:41:33,599
in the draft it talks about a new thing

921
00:41:31,440 --> 00:41:36,640
called xmap

922
00:41:33,599 --> 00:41:37,359
encrypted um jonathan pointed out that

923
00:41:36,640 --> 00:41:39,040
xmap

924
00:41:37,359 --> 00:41:40,400
you know that that sort of string has

925
00:41:39,040 --> 00:41:42,560
its own connotation about the

926
00:41:40,400 --> 00:41:43,599
extension map between the actual

927
00:41:42,560 --> 00:41:46,400
extension string

928
00:41:43,599 --> 00:41:47,599
and ids and since we're not really

929
00:41:46,400 --> 00:41:50,800
encrypting like the

930
00:41:47,599 --> 00:41:52,000
the map so to speak uh you know maybe we

931
00:41:50,800 --> 00:41:53,680
ought to have a different

932
00:41:52,000 --> 00:41:55,440
you know attribute that indicates uh

933
00:41:53,680 --> 00:41:57,520
this particular mechanism

934
00:41:55,440 --> 00:41:58,880
so um we haven't really come up with the

935
00:41:57,520 --> 00:42:02,720
exact you know

936
00:41:58,880 --> 00:42:05,280
string naming is hard uh but you know

937
00:42:02,720 --> 00:42:08,399
for one of a better attribute i'm now

938
00:42:05,280 --> 00:42:10,640
suggesting a equals cryptex

939
00:42:08,400 --> 00:42:11,599
and then finally uh the way this would

940
00:42:10,640 --> 00:42:12,400
actually be configured by the

941
00:42:11,599 --> 00:42:15,680
application

942
00:42:12,400 --> 00:42:17,520
uh we have some precedent here uh with

943
00:42:15,680 --> 00:42:18,960
webrtc and how it set things like the

944
00:42:17,520 --> 00:42:21,119
bundle policy

945
00:42:18,960 --> 00:42:22,000
um here you have a policy that can be

946
00:42:21,119 --> 00:42:24,720
set on

947
00:42:22,000 --> 00:42:26,800
for cryptex and you either say negotiate

948
00:42:24,720 --> 00:42:28,240
in which you'd offer cryptex but still

949
00:42:26,800 --> 00:42:29,119
be okay if you didn't get it from the

950
00:42:28,240 --> 00:42:31,439
other side

951
00:42:29,119 --> 00:42:34,319
or require where you'd offer cryptex and

952
00:42:31,440 --> 00:42:36,720
fail if the remote description did not

953
00:42:34,319 --> 00:42:39,119
include the cryptex you know sdp

954
00:42:36,720 --> 00:42:39,118
attribute

955
00:42:39,680 --> 00:42:42,160
next slide

956
00:42:43,599 --> 00:42:46,960
so uh overall though not a lot of open

957
00:42:45,520 --> 00:42:48,079
issues uh implementations are

958
00:42:46,960 --> 00:42:51,440
progressing

959
00:42:48,079 --> 00:42:54,079
uh sergio is working on uh getting this

960
00:42:51,440 --> 00:42:55,440
into uh srtp so we should be able to

961
00:42:54,079 --> 00:42:56,480
actually implement it and test it out

962
00:42:55,440 --> 00:42:58,480
pretty soon

963
00:42:56,480 --> 00:43:00,160
uh i know jonathan's also been helping

964
00:42:58,480 --> 00:43:00,960
with socio and getting actual test

965
00:43:00,160 --> 00:43:03,040
vectors

966
00:43:00,960 --> 00:43:04,880
so we can make sure that everything is

967
00:43:03,040 --> 00:43:05,759
uh producing the encryption output that

968
00:43:04,880 --> 00:43:07,119
we expect

969
00:43:05,760 --> 00:43:08,400
uh and i'm hoping that you know we can

970
00:43:07,119 --> 00:43:12,400
have a working implementation in the

971
00:43:08,400 --> 00:43:14,480
next couple months

972
00:43:12,400 --> 00:43:15,920
i've implemented in the bitsy srdp

973
00:43:14,480 --> 00:43:17,680
library and

974
00:43:15,920 --> 00:43:19,040
uh sergio and i are getting you know

975
00:43:17,680 --> 00:43:20,399
agree on the test vector so that's a

976
00:43:19,040 --> 00:43:23,520
good sign

977
00:43:20,400 --> 00:43:26,000
good good um

978
00:43:23,520 --> 00:43:28,319
so what is is there an action item here

979
00:43:26,000 --> 00:43:28,319
such as

980
00:43:30,000 --> 00:43:33,599
yeah that would be there that's the

981
00:43:31,440 --> 00:43:40,240
that's gonna say next i mean

982
00:43:33,599 --> 00:43:43,119
yeah um and i think

983
00:43:40,240 --> 00:43:43,118
i guess uh

984
00:43:44,000 --> 00:43:48,560
yeah so does anybody have any opinions i

985
00:43:45,839 --> 00:43:50,078
mean i i i would think it sounds like

986
00:43:48,560 --> 00:43:52,480
you know my my first attempt at

987
00:43:50,079 --> 00:43:54,640
encrypting her extensions was

988
00:43:52,480 --> 00:43:55,839
over complicated failure so i'm happy to

989
00:43:54,640 --> 00:43:58,319
do something that's easy

990
00:43:55,839 --> 00:43:59,520
and i implemented this in a day so on so

991
00:43:58,319 --> 00:44:03,520
it's definitely easy

992
00:43:59,520 --> 00:44:05,440
so um uh does anybody else have any

993
00:44:03,520 --> 00:44:07,839
opinions on whether this is

994
00:44:05,440 --> 00:44:10,240
a good idea and just whether he should

995
00:44:07,839 --> 00:44:10,240
adopt it

996
00:44:11,920 --> 00:44:15,280
and i also saw some comments on the

997
00:44:13,200 --> 00:44:16,640
jabber room so if you wanted to raise

998
00:44:15,280 --> 00:44:23,839
those also then

999
00:44:16,640 --> 00:44:23,839
i saw mo had a comment there and harold

1000
00:44:27,839 --> 00:44:32,640
so harold asks can we lose one bite

1001
00:44:30,400 --> 00:44:36,319
header extensions while we're at it

1002
00:44:32,640 --> 00:44:38,240
um you know

1003
00:44:36,319 --> 00:44:39,359
this is the kind of thing where uh we're

1004
00:44:38,240 --> 00:44:43,439
actually at like

1005
00:44:39,359 --> 00:44:46,560
uh 16 header extensions i think in in

1006
00:44:43,440 --> 00:44:48,319
what you see right now so um i can

1007
00:44:46,560 --> 00:44:50,240
ask i understand why harold might be

1008
00:44:48,319 --> 00:44:51,520
proposing that uh the one bite is

1009
00:44:50,240 --> 00:44:52,879
actually a nice optimization

1010
00:44:51,520 --> 00:44:55,119
you know you're basically saving you

1011
00:44:52,880 --> 00:44:57,200
know one byte for each header extension

1012
00:44:55,119 --> 00:44:59,119
uh which you know while not a lot you

1013
00:44:57,200 --> 00:45:00,240
know i always think of like codec

1014
00:44:59,119 --> 00:45:02,000
engineers go to

1015
00:45:00,240 --> 00:45:04,078
quite some lengths to save even like one

1016
00:45:02,000 --> 00:45:06,079
byte so uh i

1017
00:45:04,079 --> 00:45:07,200
i don't really see any real value at

1018
00:45:06,079 --> 00:45:09,920
trying to you know

1019
00:45:07,200 --> 00:45:10,960
remove it at this point in time um it

1020
00:45:09,920 --> 00:45:12,240
would also sort of i think you know the

1021
00:45:10,960 --> 00:45:14,240
separation of concerns here is that

1022
00:45:12,240 --> 00:45:15,200
we're not really changing 5285 any other

1023
00:45:14,240 --> 00:45:17,839
way than just kind of

1024
00:45:15,200 --> 00:45:20,799
encrypting uh you know i i think he

1025
00:45:17,839 --> 00:45:23,920
keeps things nice and simple

1026
00:45:20,800 --> 00:45:26,000
hello ass great

1027
00:45:23,920 --> 00:45:27,839
yeah the reason why i ask this is

1028
00:45:26,000 --> 00:45:30,960
because we've seen

1029
00:45:27,839 --> 00:45:34,400
a number of people saying oh

1030
00:45:30,960 --> 00:45:37,440
i get to this uh one by two bite cliff

1031
00:45:34,400 --> 00:45:39,520
and uh and i'm afraid of what will

1032
00:45:37,440 --> 00:45:42,720
happen if i cross it so

1033
00:45:39,520 --> 00:45:46,480
uh i'd like to get this

1034
00:45:42,720 --> 00:45:49,118
i'd like to not have people were

1035
00:45:46,480 --> 00:45:49,760
the turn off extensions at random just

1036
00:45:49,119 --> 00:45:54,560
just to get

1037
00:45:49,760 --> 00:45:57,680
get under 14. yeah

1038
00:45:54,560 --> 00:45:59,040
well um yeah i have a lot of thoughts on

1039
00:45:57,680 --> 00:46:00,799
this i think we ought to audit some of

1040
00:45:59,040 --> 00:46:04,800
the extensions that we have and

1041
00:46:00,800 --> 00:46:04,800
get rid of some of the cruft um

1042
00:46:06,800 --> 00:46:10,079
probably maybe eventually long term

1043
00:46:08,319 --> 00:46:12,800
that's not maybe that's being overly

1044
00:46:10,079 --> 00:46:12,800
optimistic but

1045
00:46:12,880 --> 00:46:21,119
okay i'll let i erase this you will uh

1046
00:46:17,760 --> 00:46:23,520
well yeah it's it's okay to leave it the

1047
00:46:21,119 --> 00:46:25,359
way it is

1048
00:46:23,520 --> 00:46:26,880
okay well thanks for the it's a good

1049
00:46:25,359 --> 00:46:29,839
point though you know we can discuss

1050
00:46:26,880 --> 00:46:29,839
more in the list

1051
00:46:30,880 --> 00:46:34,560
mo asks will encrypted csr scenes

1052
00:46:33,440 --> 00:46:35,760
actually in the queue so you can

1053
00:46:34,560 --> 00:46:38,560
probably ask okay

1054
00:46:35,760 --> 00:46:40,000
and so but i think bernard is an

1055
00:46:38,560 --> 00:46:43,040
individual

1056
00:46:40,000 --> 00:46:44,640
uh yeah um just

1057
00:46:43,040 --> 00:46:46,720
wanted to say just from my personal

1058
00:46:44,640 --> 00:46:51,279
opinion i think we should uh

1059
00:46:46,720 --> 00:46:51,279
call for adoption i think it's ready

1060
00:46:54,839 --> 00:47:00,480
hello um yeah so just to clarify that

1061
00:46:57,599 --> 00:47:02,880
this is uh expecting all all middle

1062
00:47:00,480 --> 00:47:02,880
boxes

1063
00:47:04,720 --> 00:47:09,200
right to be flowing through to be aware

1064
00:47:06,400 --> 00:47:09,200
of this right

1065
00:47:09,760 --> 00:47:13,119
it's not intended to be transparent to

1066
00:47:11,920 --> 00:47:15,040
some things

1067
00:47:13,119 --> 00:47:16,400
it's intended to everything that's on

1068
00:47:15,040 --> 00:47:17,119
the path that's looking at the rtp

1069
00:47:16,400 --> 00:47:20,240
should

1070
00:47:17,119 --> 00:47:20,240
should know about this right

1071
00:47:20,480 --> 00:47:24,400
uh well it depends on everything you

1072
00:47:23,119 --> 00:47:25,280
know if there's like you know sort of

1073
00:47:24,400 --> 00:47:27,520
packet

1074
00:47:25,280 --> 00:47:29,040
you know capture tools like they can

1075
00:47:27,520 --> 00:47:30,640
continue to work on this

1076
00:47:29,040 --> 00:47:33,599
um you know if they're trying to just

1077
00:47:30,640 --> 00:47:34,960
look at you know basically

1078
00:47:33,599 --> 00:47:36,160
what packets and what lengths are being

1079
00:47:34,960 --> 00:47:36,880
said but you're trying to understand the

1080
00:47:36,160 --> 00:47:40,078
packet then

1081
00:47:36,880 --> 00:47:42,720
then yes uh you would need to be able to

1082
00:47:40,079 --> 00:47:44,720
to decrypt this and like uh sfu or

1083
00:47:42,720 --> 00:47:46,720
something would certainly be expected to

1084
00:47:44,720 --> 00:47:48,160
to be decrypting this and processing in

1085
00:47:46,720 --> 00:47:51,919
clear text

1086
00:47:48,160 --> 00:47:52,720
okay so so if fsc if sfus are expected

1087
00:47:51,920 --> 00:47:54,319
to

1088
00:47:52,720 --> 00:47:56,558
uh be processing this then i think the

1089
00:47:54,319 --> 00:47:57,359
csrc concerns aren't that big of a deal

1090
00:47:56,559 --> 00:48:00,480
because

1091
00:47:57,359 --> 00:48:02,160
it would have to take uh someone that's

1092
00:48:00,480 --> 00:48:06,079
actually participating in the rtp

1093
00:48:02,160 --> 00:48:09,279
uh session uh to get confused

1094
00:48:06,079 --> 00:48:10,720
by those uh scrambled csrcs

1095
00:48:09,280 --> 00:48:12,880
so i think that's probably not a big

1096
00:48:10,720 --> 00:48:14,399
deal i think the way

1097
00:48:12,880 --> 00:48:17,040
you look at this is like this basically

1098
00:48:14,400 --> 00:48:18,800
upgraded the dtls srtp

1099
00:48:17,040 --> 00:48:20,160
that this is a point-to-point encryption

1100
00:48:18,800 --> 00:48:23,839
system and so like

1101
00:48:20,160 --> 00:48:26,240
for uh you know talking to the sfu

1102
00:48:23,839 --> 00:48:27,279
uh you know you it would basically you

1103
00:48:26,240 --> 00:48:28,959
know need to

1104
00:48:27,280 --> 00:48:30,880
uh it would implement the actual

1105
00:48:28,960 --> 00:48:32,640
decryption thing for srtp for getting at

1106
00:48:30,880 --> 00:48:34,960
the payload as well as getting at the

1107
00:48:32,640 --> 00:48:37,598
actual uh you know encrypted csrcs and

1108
00:48:34,960 --> 00:48:37,599
header extensions

1109
00:48:37,920 --> 00:48:41,599
okay so if you were to do s frame or

1110
00:48:39,280 --> 00:48:43,839
anything like that or any other kind of

1111
00:48:41,599 --> 00:48:45,440
perk or any other kind of end to end uh

1112
00:48:43,839 --> 00:48:47,040
crypto then

1113
00:48:45,440 --> 00:48:49,119
uh this wouldn't be part of the

1114
00:48:47,040 --> 00:48:50,240
end-to-end context

1115
00:48:49,119 --> 00:48:52,640
correct correct it would be on the

1116
00:48:50,240 --> 00:48:56,000
hopahop context got it

1117
00:48:52,640 --> 00:48:58,400
all right thanks

1118
00:48:56,000 --> 00:48:58,400
colin

1119
00:49:00,640 --> 00:49:06,078
can people hear me yes

1120
00:49:03,760 --> 00:49:08,400
okay so i i was just going to comment

1121
00:49:06,079 --> 00:49:09,760
back towards um harold harold's comment

1122
00:49:08,400 --> 00:49:12,079
about one bite or something which i

1123
00:49:09,760 --> 00:49:13,119
i i see the value of i get it but i

1124
00:49:12,079 --> 00:49:14,240
don't think it really has anything to do

1125
00:49:13,119 --> 00:49:15,760
with this draft i think we

1126
00:49:14,240 --> 00:49:17,680
that's a very separable thing and we

1127
00:49:15,760 --> 00:49:19,119
should do that separately um

1128
00:49:17,680 --> 00:49:20,640
if we want to do a one bite thing and of

1129
00:49:19,119 --> 00:49:21,280
course it could work with this mechanism

1130
00:49:20,640 --> 00:49:23,040
too

1131
00:49:21,280 --> 00:49:24,240
um so i'd rather not try and put it in

1132
00:49:23,040 --> 00:49:25,119
this draft i think we should do that

1133
00:49:24,240 --> 00:49:27,040
separately

1134
00:49:25,119 --> 00:49:28,240
and you know this draft just tries to

1135
00:49:27,040 --> 00:49:31,200
clean

1136
00:49:28,240 --> 00:49:32,879
um a difficult part of our encryption

1137
00:49:31,200 --> 00:49:36,240
that no one really ever implemented

1138
00:49:32,880 --> 00:49:39,359
and it just makes it with

1139
00:49:36,240 --> 00:49:40,479
the hop by hop encryption of some stuff

1140
00:49:39,359 --> 00:49:41,839
that's really hard to do with our

1141
00:49:40,480 --> 00:49:45,010
existing rfcs

1142
00:49:41,839 --> 00:49:48,119
so that's it

1143
00:49:45,010 --> 00:49:48,119
[Music]

1144
00:49:48,559 --> 00:49:55,200
okay so i it sounds like people are um

1145
00:49:52,160 --> 00:49:57,279
in favor of uh adopting this so we'll

1146
00:49:55,200 --> 00:49:59,359
put out a call on the list

1147
00:49:57,280 --> 00:50:00,480
for any other opinions um so note takers

1148
00:49:59,359 --> 00:50:01,920
make sure we have that slowed it down

1149
00:50:00,480 --> 00:50:04,079
that we're going to do that

1150
00:50:01,920 --> 00:50:05,760
but it sounds like at least from people

1151
00:50:04,079 --> 00:50:09,119
who are here

1152
00:50:05,760 --> 00:50:11,680
people are in favor okay

1153
00:50:09,119 --> 00:50:13,359
and i think we now have colin so we can

1154
00:50:11,680 --> 00:50:16,399
go to

1155
00:50:13,359 --> 00:50:19,680
uh rtb conjunction control feedback

1156
00:50:16,400 --> 00:50:19,680
are you saying you're ready colin

1157
00:50:21,200 --> 00:50:27,040
yeah i'm i'm here that was a massively

1158
00:50:25,440 --> 00:50:30,960
lucky timing that i just happened to

1159
00:50:27,040 --> 00:50:30,960
drop in as the thing was finishing there

1160
00:50:31,119 --> 00:50:34,559
let's see where all right sorry for

1161
00:50:32,720 --> 00:50:37,680
being late i had to uh

1162
00:50:34,559 --> 00:50:41,839
it's okay let's see which

1163
00:50:37,680 --> 00:50:41,839
tab is this one

1164
00:50:44,640 --> 00:50:49,520
okay go ahead okay so yeah hi

1165
00:50:48,000 --> 00:50:51,839
i'm colin perkins i just want to talk

1166
00:50:49,520 --> 00:50:52,960
briefly about the rtp congestion control

1167
00:50:51,839 --> 00:50:54,960
feedback draft

1168
00:50:52,960 --> 00:50:58,640
which i'm hoping we're very very nearly

1169
00:50:54,960 --> 00:50:58,640
done on next slide please

1170
00:51:00,160 --> 00:51:07,359
okay so um the 08 version of this draft

1171
00:51:03,359 --> 00:51:10,960
went to a iesg review a little while ago

1172
00:51:07,359 --> 00:51:14,000
um it got a bunch of comments um

1173
00:51:10,960 --> 00:51:16,400
from the the tsv review team from

1174
00:51:14,000 --> 00:51:17,440
the gen arts um ayanna had a couple of

1175
00:51:16,400 --> 00:51:20,480
clarifications

1176
00:51:17,440 --> 00:51:23,520
and a bunch of ad review comments

1177
00:51:20,480 --> 00:51:25,040
um most of these were editorial nets um

1178
00:51:23,520 --> 00:51:27,280
and i'll just briefly go through those

1179
00:51:25,040 --> 00:51:29,279
to summarize them but there are also a

1180
00:51:27,280 --> 00:51:30,960
small number of technical changes uh to

1181
00:51:29,280 --> 00:51:34,839
review uh which is why i'm

1182
00:51:30,960 --> 00:51:37,599
presenting it in in this meeting next

1183
00:51:34,839 --> 00:51:39,759
slide

1184
00:51:37,599 --> 00:51:40,960
okay so starting with the the editorial

1185
00:51:39,760 --> 00:51:43,359
stuff um i

1186
00:51:40,960 --> 00:51:44,400
i hope absolutely none of this is is at

1187
00:51:43,359 --> 00:51:47,279
all controversial

1188
00:51:44,400 --> 00:51:49,200
um we um added some clarifications to

1189
00:51:47,280 --> 00:51:51,040
the abstract to explain

1190
00:51:49,200 --> 00:51:52,399
what the scope was and why we needed

1191
00:51:51,040 --> 00:51:54,400
this

1192
00:51:52,400 --> 00:51:56,559
we removed some references to the

1193
00:51:54,400 --> 00:51:59,760
terminology defined in some rfcs which

1194
00:51:56,559 --> 00:52:03,040
didn't define any terminology

1195
00:51:59,760 --> 00:52:04,880
we clarified that since our tcp packets

1196
00:52:03,040 --> 00:52:05,520
don't contain a sequence number you have

1197
00:52:04,880 --> 00:52:07,520
to

1198
00:52:05,520 --> 00:52:10,160
infer uh based on the time since you

1199
00:52:07,520 --> 00:52:12,400
last last got an rtcp packet uh

1200
00:52:10,160 --> 00:52:14,399
as to whether there's any any feedback

1201
00:52:12,400 --> 00:52:18,000
packets been lost

1202
00:52:14,400 --> 00:52:19,760
um we made a clarification that uh

1203
00:52:18,000 --> 00:52:21,359
if if multiple feedback packets are lost

1204
00:52:19,760 --> 00:52:23,359
it's the media sender that should reduce

1205
00:52:21,359 --> 00:52:25,598
its transmitting rates rather than the

1206
00:52:23,359 --> 00:52:26,558
rtcp that should reduce its transmission

1207
00:52:25,599 --> 00:52:29,680
rate

1208
00:52:26,559 --> 00:52:32,960
um and since the the ramb draft

1209
00:52:29,680 --> 00:52:33,680
had expired many years ago we we put a

1210
00:52:32,960 --> 00:52:35,599
reference to

1211
00:52:33,680 --> 00:52:37,520
the generic concepts rather than to that

1212
00:52:35,599 --> 00:52:40,079
draft

1213
00:52:37,520 --> 00:52:40,079
next slide

1214
00:52:43,200 --> 00:52:47,359
okay so there are also i hope this is

1215
00:52:45,920 --> 00:52:48,000
more readable for everyone else than it

1216
00:52:47,359 --> 00:52:50,480
is for me

1217
00:52:48,000 --> 00:52:51,119
uh there are also some uh technical

1218
00:52:50,480 --> 00:52:54,319
changes

1219
00:52:51,119 --> 00:52:56,480
uh in in the draft um this one i think

1220
00:52:54,319 --> 00:52:59,680
is sort of borderline between technical

1221
00:52:56,480 --> 00:53:01,760
and um uh

1222
00:52:59,680 --> 00:53:03,919
bottling between technical and editorial

1223
00:53:01,760 --> 00:53:06,559
in the there was a field which was a

1224
00:53:03,920 --> 00:53:07,760
label called the l field um which

1225
00:53:06,559 --> 00:53:09,680
indicates whether the packets were

1226
00:53:07,760 --> 00:53:11,119
received and we

1227
00:53:09,680 --> 00:53:13,040
we we just flipped the name of the field

1228
00:53:11,119 --> 00:53:14,880
around so it's now the r field uh which

1229
00:53:13,040 --> 00:53:18,079
indicates over the packets were received

1230
00:53:14,880 --> 00:53:20,960
to uh avoid confusing everybody um

1231
00:53:18,079 --> 00:53:21,440
and we clarified that if a packet is

1232
00:53:20,960 --> 00:53:24,720
lost

1233
00:53:21,440 --> 00:53:26,960
then the bits in in the the the

1234
00:53:24,720 --> 00:53:29,839
the field indicating its arrival time

1235
00:53:26,960 --> 00:53:32,559
offset and its ecm mark must be

1236
00:53:29,839 --> 00:53:33,599
set to zero and must be ignored and the

1237
00:53:32,559 --> 00:53:36,000
must be ignored

1238
00:53:33,599 --> 00:53:38,319
is a new normative requirement next

1239
00:53:36,000 --> 00:53:38,319
slide

1240
00:53:40,000 --> 00:53:45,440
um we also um i think this was in

1241
00:53:43,440 --> 00:53:47,359
response to magnus that there are an

1242
00:53:45,440 --> 00:53:50,480
announces that the main change the

1243
00:53:47,359 --> 00:53:53,119
the previous version of the draft um

1244
00:53:50,480 --> 00:53:53,680
said that um when you were negotiating

1245
00:53:53,119 --> 00:53:56,960
this you

1246
00:53:53,680 --> 00:53:59,118
you either put in the the sdp attribute

1247
00:53:56,960 --> 00:54:00,640
to indicate this format or the sdp

1248
00:53:59,119 --> 00:54:05,359
attributes to

1249
00:54:00,640 --> 00:54:07,680
indicate the the rfc 6679 ecn

1250
00:54:05,359 --> 00:54:09,359
um feedback format but but you didn't

1251
00:54:07,680 --> 00:54:10,960
put in both so if you put this one in

1252
00:54:09,359 --> 00:54:12,880
you it said you must not put the other

1253
00:54:10,960 --> 00:54:15,920
the other formatting

1254
00:54:12,880 --> 00:54:16,240
um what the the new version says is that

1255
00:54:15,920 --> 00:54:18,400
you

1256
00:54:16,240 --> 00:54:19,279
you can you can put both of them in and

1257
00:54:18,400 --> 00:54:22,400
the receiver

1258
00:54:19,280 --> 00:54:24,240
um picks which one it wants uh and

1259
00:54:22,400 --> 00:54:25,920
you know in the in the answer chooses

1260
00:54:24,240 --> 00:54:27,598
which of the the two formats it wishes

1261
00:54:25,920 --> 00:54:29,680
to use for ecm

1262
00:54:27,599 --> 00:54:30,800
um so so essentially that enables the

1263
00:54:29,680 --> 00:54:33,359
negotiation there

1264
00:54:30,800 --> 00:54:35,839
and and that that's a a change to the

1265
00:54:33,359 --> 00:54:38,720
way the signaling works

1266
00:54:35,839 --> 00:54:39,119
uh and the other addition was that um

1267
00:54:38,720 --> 00:54:41,598
the

1268
00:54:39,119 --> 00:54:43,040
the second paragraph here we add um some

1269
00:54:41,599 --> 00:54:43,839
suggestions saying follow all the

1270
00:54:43,040 --> 00:54:47,759
guidelines

1271
00:54:43,839 --> 00:54:48,640
in uh uh section seven of rfc6679 which

1272
00:54:47,760 --> 00:54:51,920
is the um

1273
00:54:48,640 --> 00:54:54,160
ecn for rtp draft and these are the

1274
00:54:51,920 --> 00:54:56,559
guidelines that talk about how you

1275
00:54:54,160 --> 00:54:57,200
probe to to make sure the ecm is still

1276
00:54:56,559 --> 00:55:07,359
working

1277
00:54:57,200 --> 00:55:09,839
and that sort of thing in the next slide

1278
00:55:07,359 --> 00:55:10,720
okay and uh the the final thing we did

1279
00:55:09,839 --> 00:55:13,920
was just clarify

1280
00:55:10,720 --> 00:55:16,799
the security considerations um

1281
00:55:13,920 --> 00:55:17,920
mostly pointing out that um

1282
00:55:16,799 --> 00:55:21,440
authentication can

1283
00:55:17,920 --> 00:55:24,640
uh solve some of the um the the uh

1284
00:55:21,440 --> 00:55:26,240
didn't have service attacks uh

1285
00:55:24,640 --> 00:55:29,040
and i think that's everything uh is

1286
00:55:26,240 --> 00:55:29,040
there another slot

1287
00:55:31,359 --> 00:55:36,000
yes so yeah so the questions are are the

1288
00:55:34,240 --> 00:55:38,000
working group okay with these changes

1289
00:55:36,000 --> 00:55:39,920
uh and if the answer is yes then i think

1290
00:55:38,000 --> 00:55:41,599
the isg click the approve button and

1291
00:55:39,920 --> 00:55:43,200
this goes to the rfc editor

1292
00:55:41,599 --> 00:55:45,920
and if not well we'll need to do an

1293
00:55:43,200 --> 00:55:49,759
update in a new review cycle

1294
00:55:45,920 --> 00:55:53,520
so that's that's all i have thank you

1295
00:55:49,760 --> 00:55:55,760
i see magnus in the future yes

1296
00:55:53,520 --> 00:55:57,759
so about the ecm thing i think the most

1297
00:55:55,760 --> 00:55:59,680
important recommendation which was kind

1298
00:55:57,760 --> 00:56:01,760
of missing there for you around this yen

1299
00:55:59,680 --> 00:56:03,359
was to send

1300
00:56:01,760 --> 00:56:05,040
if you get see more extend those

1301
00:56:03,359 --> 00:56:06,960
immediately aspect of it

1302
00:56:05,040 --> 00:56:08,640
that was that wasn't i picked up because

1303
00:56:06,960 --> 00:56:10,559
that recommendation is quite important

1304
00:56:08,640 --> 00:56:13,118
for the performance and reactions to

1305
00:56:10,559 --> 00:56:15,040
uh ecnc marks that's maybe the most

1306
00:56:13,119 --> 00:56:18,559
important takeaway from that

1307
00:56:15,040 --> 00:56:21,599
recommendation rather than anything else

1308
00:56:18,559 --> 00:56:23,680
so so do you think the text that

1309
00:56:21,599 --> 00:56:25,359
colin has is clear enough or does that

1310
00:56:23,680 --> 00:56:28,319
need to be

1311
00:56:25,359 --> 00:56:28,799
yes i i mean in general it was more

1312
00:56:28,319 --> 00:56:30,558
about

1313
00:56:28,799 --> 00:56:31,839
what he said in his presentation so if

1314
00:56:30,559 --> 00:56:32,480
you actually go follow and read those

1315
00:56:31,839 --> 00:56:35,520
guidelines

1316
00:56:32,480 --> 00:56:37,920
that will be apparent so uh and i i have

1317
00:56:35,520 --> 00:56:39,359
cleared my disgust of this so that's

1318
00:56:37,920 --> 00:56:40,799
so i thought it was clear enough it's

1319
00:56:39,359 --> 00:56:41,680
just that you need to follow and read

1320
00:56:40,799 --> 00:56:43,440
the section to

1321
00:56:41,680 --> 00:56:45,680
realize that that that didn't came

1322
00:56:43,440 --> 00:56:47,520
through in his presentation

1323
00:56:45,680 --> 00:56:48,960
okay i mean if you think it's useful we

1324
00:56:47,520 --> 00:56:51,280
can add a sentence to

1325
00:56:48,960 --> 00:56:51,280
um

1326
00:56:54,000 --> 00:56:59,839
send me text and i'll spin a new

1327
00:56:55,760 --> 00:56:59,839
revision very quickly if that's

1328
00:57:01,839 --> 00:57:07,359
no i don't know i mean i do expect

1329
00:57:05,920 --> 00:57:08,799
people to actually be able to follow

1330
00:57:07,359 --> 00:57:10,078
references before the guy doesn't

1331
00:57:08,799 --> 00:57:11,599
actually look through them because then

1332
00:57:10,079 --> 00:57:12,640
if they do i think it's fine it says

1333
00:57:11,599 --> 00:57:14,319
that

1334
00:57:12,640 --> 00:57:15,839
in this context of the presentation in

1335
00:57:14,319 --> 00:57:17,119
the session it wasn't clear that that's

1336
00:57:15,839 --> 00:57:22,160
what maybe

1337
00:57:17,119 --> 00:57:22,160
the aspect which maybe realizes

1338
00:57:24,839 --> 00:57:30,720
sure

1339
00:57:26,319 --> 00:57:32,160
all right so i mean it sounds like

1340
00:57:30,720 --> 00:57:33,919
um the working group is okay with these

1341
00:57:32,160 --> 00:57:35,118
changes we probably should have we

1342
00:57:33,920 --> 00:57:37,119
mentioned this on the mailing list or

1343
00:57:35,119 --> 00:57:40,640
not i don't

1344
00:57:37,119 --> 00:57:42,640
um i did send a point to when the um

1345
00:57:40,640 --> 00:57:44,640
the draft was announced but uh i'm not

1346
00:57:42,640 --> 00:57:45,839
sure that people necessarily read it

1347
00:57:44,640 --> 00:57:49,118
carefully

1348
00:57:45,839 --> 00:57:51,599
well i mean i would

1349
00:57:49,119 --> 00:57:53,200
my i mean sounds like i mean as an

1350
00:57:51,599 --> 00:57:57,200
individual i think all these are fine

1351
00:57:53,200 --> 00:58:00,078
um i don't and i think if

1352
00:57:57,200 --> 00:58:01,439
uh if anybody has i'd say if anybody

1353
00:58:00,079 --> 00:58:04,000
here has any issues with this

1354
00:58:01,440 --> 00:58:04,799
calls out now otherwise personally i

1355
00:58:04,000 --> 00:58:07,599
think that this

1356
00:58:04,799 --> 00:58:08,000
is i would say the working group is

1357
00:58:07,599 --> 00:58:10,160
probably

1358
00:58:08,000 --> 00:58:11,440
fine with this because you know it's a

1359
00:58:10,160 --> 00:58:14,879
discussion between

1360
00:58:11,440 --> 00:58:17,440
you and uh and uh

1361
00:58:14,880 --> 00:58:18,319
and magnus anyway and that's the people

1362
00:58:17,440 --> 00:58:19,520
we'd go to to

1363
00:58:18,319 --> 00:58:21,759
see whether the working group agrees

1364
00:58:19,520 --> 00:58:23,759
with this so

1365
00:58:21,760 --> 00:58:25,760
yeah i mean i mean but the main

1366
00:58:23,760 --> 00:58:29,920
technical change here is the signaling

1367
00:58:25,760 --> 00:58:33,119
um so if people are okay with that uh

1368
00:58:29,920 --> 00:58:34,960
yeah i mean do we i mean i guess that's

1369
00:58:33,119 --> 00:58:36,240
basically just you know just changing

1370
00:58:34,960 --> 00:58:37,119
how the offer answer works that you

1371
00:58:36,240 --> 00:58:39,359
would

1372
00:58:37,119 --> 00:58:40,880
send the offers that can may send both

1373
00:58:39,359 --> 00:58:43,520
and the answer will

1374
00:58:40,880 --> 00:58:46,160
respond to one or the other that's i

1375
00:58:43,520 --> 00:58:48,839
have no problem with that person

1376
00:58:46,160 --> 00:58:51,839
that's how most things work enough for

1377
00:58:48,839 --> 00:58:51,839
answers

1378
00:58:52,000 --> 00:58:55,599
all right um i think like you know since

1379
00:58:54,000 --> 00:58:56,640
we're not getting any complaints here

1380
00:58:55,599 --> 00:58:58,400
and we didn't get any complaints on the

1381
00:58:56,640 --> 00:58:59,520
on the list i would say

1382
00:58:58,400 --> 00:59:01,520
the working group is okay with these

1383
00:58:59,520 --> 00:59:03,440
changes anybody

1384
00:59:01,520 --> 00:59:06,240
if anybody disagrees let me know but

1385
00:59:03,440 --> 00:59:06,240
otherwise i'd say

1386
00:59:06,400 --> 00:59:12,559
it is very good okay

1387
00:59:09,920 --> 00:59:14,480
um yeah i'm good with that is there a

1388
00:59:12,559 --> 00:59:17,680
reason not to just post

1389
00:59:14,480 --> 00:59:18,240
a link to the diffs on the mailing list

1390
00:59:17,680 --> 00:59:20,240
and

1391
00:59:18,240 --> 00:59:21,359
yeah i guess let's just do an explicit

1392
00:59:20,240 --> 00:59:24,240
call on it

1393
00:59:21,359 --> 00:59:24,240
yeah i can just say

1394
00:59:25,200 --> 00:59:30,720
my evaluation okay

1395
00:59:28,480 --> 00:59:32,160
i think he did previously so i think

1396
00:59:30,720 --> 00:59:33,359
okay nobody responded to it so i think

1397
00:59:32,160 --> 00:59:34,399
in that case that's why i'm saying it's

1398
00:59:33,359 --> 00:59:37,359
probably

1399
00:59:34,400 --> 00:59:38,799
probably fun perfect then i will go

1400
00:59:37,359 --> 00:59:41,598
ahead and

1401
00:59:38,799 --> 00:59:42,720
give it a final look and and approve it

1402
00:59:41,599 --> 00:59:47,920
sounds good

1403
00:59:42,720 --> 00:59:51,598
okay thank you all right

1404
00:59:47,920 --> 00:59:51,599
and what's next on the agenda

1405
00:59:51,740 --> 00:59:55,020
[Music]

1406
00:59:55,599 --> 01:00:01,839
sorry ice cream all right

1407
01:00:07,760 --> 01:00:15,839
this one right

1408
01:00:18,640 --> 01:00:25,200
yeah okay yes so this is

1409
01:00:21,760 --> 01:00:28,079
uh yes and these slides are meant to be

1410
01:00:25,200 --> 01:00:30,160
an extraordinary of the topic and most

1411
01:00:28,079 --> 01:00:32,000
of you most probably have already

1412
01:00:30,160 --> 01:00:33,680
followed the discussion that we are

1413
01:00:32,000 --> 01:00:37,440
having in this frame

1414
01:00:33,680 --> 01:00:39,118
working group but i mean just to to make

1415
01:00:37,440 --> 01:00:41,599
it properly yeah say what i wouldn't

1416
01:00:39,119 --> 01:00:43,680
going to do is just to make a great

1417
01:00:41,599 --> 01:00:44,079
introduction now at what is frame and

1418
01:00:43,680 --> 01:00:46,720
what

1419
01:00:44,079 --> 01:00:48,160
the problems that we have with the rtp

1420
01:00:46,720 --> 01:00:50,399
encapsulation of the

1421
01:00:48,160 --> 01:00:51,680
of the included payload so we are all

1422
01:00:50,400 --> 01:00:53,440
aware of it and we can

1423
01:00:51,680 --> 01:00:55,200
trigger the discussion in this working

1424
01:00:53,440 --> 01:00:57,839
group properly so next

1425
01:00:55,200 --> 01:00:57,839
slide please

1426
01:00:59,119 --> 01:01:06,720
so as you know i'm going to talk

1427
01:01:02,160 --> 01:01:09,359
especially about webrtc this and then

1428
01:01:06,720 --> 01:01:10,160
it has a peer-to-peer encryption model

1429
01:01:09,359 --> 01:01:13,279
means that

1430
01:01:10,160 --> 01:01:14,240
a all the content between both ends of

1431
01:01:13,280 --> 01:01:17,839
the dlt

1432
01:01:14,240 --> 01:01:19,759
the dtls connection is encrypted but

1433
01:01:17,839 --> 01:01:21,759
if you are using a media server the

1434
01:01:19,760 --> 01:01:23,599
media server will have to actually

1435
01:01:21,760 --> 01:01:26,319
degrade the content that are

1436
01:01:23,599 --> 01:01:27,359
sent between in srtp in order to to

1437
01:01:26,319 --> 01:01:29,359
perform

1438
01:01:27,359 --> 01:01:30,480
the the for one between between the

1439
01:01:29,359 --> 01:01:34,720
peers so

1440
01:01:30,480 --> 01:01:34,960
in in this case the all the data that

1441
01:01:34,720 --> 01:01:38,399
this

1442
01:01:34,960 --> 01:01:40,319
is coming in the or that it is inside

1443
01:01:38,400 --> 01:01:44,480
the media server is soon encrypted

1444
01:01:40,319 --> 01:01:46,880
and it is obviously a

1445
01:01:44,480 --> 01:01:48,640
first and this view has attached to it

1446
01:01:46,880 --> 01:01:51,200
so it is something that

1447
01:01:48,640 --> 01:01:52,640
in many cases it is something that it is

1448
01:01:51,200 --> 01:01:54,720
not required

1449
01:01:52,640 --> 01:01:56,640
and it is also subject to attacks that

1450
01:01:54,720 --> 01:02:00,319
may happen in the media survey itself

1451
01:01:56,640 --> 01:02:00,319
so next slide

1452
01:02:01,200 --> 01:02:06,640
the idea of of s frame and

1453
01:02:04,960 --> 01:02:08,559
is to be able to do an end-to-end

1454
01:02:06,640 --> 01:02:11,839
encryption that will just

1455
01:02:08,559 --> 01:02:14,240
um include the inner encryption

1456
01:02:11,839 --> 01:02:15,599
on top of the hub i hope ingredient so

1457
01:02:14,240 --> 01:02:17,279
when these contents

1458
01:02:15,599 --> 01:02:18,880
go through the media server or any

1459
01:02:17,280 --> 01:02:21,119
intermediary

1460
01:02:18,880 --> 01:02:22,880
server in the past they are still

1461
01:02:21,119 --> 01:02:24,880
encrypted so they cannot be accessed by

1462
01:02:22,880 --> 01:02:28,880
any intermediate peer

1463
01:02:24,880 --> 01:02:31,520
the also just saying

1464
01:02:28,880 --> 01:02:32,799
again this is just a quick introduction

1465
01:02:31,520 --> 01:02:34,799
about this frame

1466
01:02:32,799 --> 01:02:36,400
yes if anyone just has not been

1467
01:02:34,799 --> 01:02:39,599
following the

1468
01:02:36,400 --> 01:02:41,760
the the s frame working group the the

1469
01:02:39,599 --> 01:02:44,319
main idea and

1470
01:02:41,760 --> 01:02:45,200
the difference with other approaches as

1471
01:02:44,319 --> 01:02:48,640
for example

1472
01:02:45,200 --> 01:02:50,960
perk is that in

1473
01:02:48,640 --> 01:02:52,240
they have a different approach about the

1474
01:02:50,960 --> 01:02:54,559
key management system

1475
01:02:52,240 --> 01:02:55,839
the the goal also is to minimize

1476
01:02:54,559 --> 01:02:59,280
overhead

1477
01:02:55,839 --> 01:03:01,920
when adding the in the we're not in the

1478
01:02:59,280 --> 01:03:02,799
end-to-end encryption in a layer and

1479
01:03:01,920 --> 01:03:05,680
also we

1480
01:03:02,799 --> 01:03:07,839
trying to be a independent of the

1481
01:03:05,680 --> 01:03:10,319
underlying transpose so we can be all

1482
01:03:07,839 --> 01:03:12,880
applied to rtp but also it work with

1483
01:03:10,319 --> 01:03:16,640
other transport like for example quick

1484
01:03:12,880 --> 01:03:17,440
and when use without rtp we are required

1485
01:03:16,640 --> 01:03:20,400
that no

1486
01:03:17,440 --> 01:03:21,839
special hundred for rdx or or effect is

1487
01:03:20,400 --> 01:03:23,680
required

1488
01:03:21,839 --> 01:03:25,038
in order to minimize the changes that it

1489
01:03:23,680 --> 01:03:27,680
is

1490
01:03:25,039 --> 01:03:28,480
required to implement it in both svu's

1491
01:03:27,680 --> 01:03:31,440
and

1492
01:03:28,480 --> 01:03:33,599
endpoints also actually one requirement

1493
01:03:31,440 --> 01:03:35,280
is that it must work with most popular

1494
01:03:33,599 --> 01:03:36,880
audio and video codecs that

1495
01:03:35,280 --> 01:03:39,680
we already are using in the video

1496
01:03:36,880 --> 01:03:44,000
conference scenarios

1497
01:03:39,680 --> 01:03:45,680
so let's slide please

1498
01:03:44,000 --> 01:03:47,920
one of the main difference with this

1499
01:03:45,680 --> 01:03:48,879
plane is that it does not work on upper

1500
01:03:47,920 --> 01:03:51,520
packet

1501
01:03:48,880 --> 01:03:52,640
but it's doing a full frame encryption

1502
01:03:51,520 --> 01:03:56,319
so

1503
01:03:52,640 --> 01:03:59,759
it happens in a different states of

1504
01:03:56,319 --> 01:04:00,799
what for example perk is is doing the

1505
01:03:59,760 --> 01:04:04,079
ingredient it

1506
01:04:00,799 --> 01:04:06,400
is happening actually before the

1507
01:04:04,079 --> 01:04:07,440
just before the or between the encoder

1508
01:04:06,400 --> 01:04:10,640
and the rtp

1509
01:04:07,440 --> 01:04:14,400
layer so it encrypts the frame as

1510
01:04:10,640 --> 01:04:16,558
it gets out of the of the encrypter

1511
01:04:14,400 --> 01:04:17,599
of sorry of the encoder and before the

1512
01:04:16,559 --> 01:04:19,200
rtp package

1513
01:04:17,599 --> 01:04:20,880
decision is happening and also in the

1514
01:04:19,200 --> 01:04:23,680
receiver is happening

1515
01:04:20,880 --> 01:04:26,000
after the packet decision but before

1516
01:04:23,680 --> 01:04:28,720
passing it to the decoder so

1517
01:04:26,000 --> 01:04:30,720
this casts problems with rtp

1518
01:04:28,720 --> 01:04:34,799
packetization

1519
01:04:30,720 --> 01:04:37,520
and it requires some some new mechanism

1520
01:04:34,799 --> 01:04:38,720
or at least to check how this interacts

1521
01:04:37,520 --> 01:04:41,520
with the current rtp

1522
01:04:38,720 --> 01:04:42,959
payloads of the especially the video

1523
01:04:41,520 --> 01:04:43,920
codecs because the audio code is

1524
01:04:42,960 --> 01:04:47,119
absolutely

1525
01:04:43,920 --> 01:04:49,359
at the end you have a one packet per

1526
01:04:47,119 --> 01:04:53,280
frame so it is not so critical as

1527
01:04:49,359 --> 01:04:57,279
in video and in in

1528
01:04:53,280 --> 01:04:59,920
in web browser the w3c aspect is the

1529
01:04:57,280 --> 01:05:01,839
we have it is available by the

1530
01:04:59,920 --> 01:05:05,119
insertable streams api that

1531
01:05:01,839 --> 01:05:06,319
allows the javascript to to modify the

1532
01:05:05,119 --> 01:05:09,680
contents

1533
01:05:06,319 --> 01:05:12,000
just in this state before the frame is

1534
01:05:09,680 --> 01:05:12,720
that it is produced by the encoder

1535
01:05:12,000 --> 01:05:15,680
before the

1536
01:05:12,720 --> 01:05:16,480
tp packet decision so it can be by into

1537
01:05:15,680 --> 01:05:19,200
it can be

1538
01:05:16,480 --> 01:05:20,400
used by end-to-end encryption but also

1539
01:05:19,200 --> 01:05:24,799
can be used to

1540
01:05:20,400 --> 01:05:28,079
modify the the the frame in any way and

1541
01:05:24,799 --> 01:05:30,799
more use cases are happening

1542
01:05:28,079 --> 01:05:31,200
already for example to be able to add a

1543
01:05:30,799 --> 01:05:34,880
doc

1544
01:05:31,200 --> 01:05:36,640
media frame metadata

1545
01:05:34,880 --> 01:05:39,599
defined by the application to the to the

1546
01:05:36,640 --> 01:05:40,960
media frame i did a quick demo of how to

1547
01:05:39,599 --> 01:05:44,240
for example

1548
01:05:40,960 --> 01:05:47,280
introduce the the face

1549
01:05:44,240 --> 01:05:49,279
detection data into the media frame so

1550
01:05:47,280 --> 01:05:50,960
it is transported alongside with with

1551
01:05:49,280 --> 01:05:54,240
the with the

1552
01:05:50,960 --> 01:05:55,039
with the with the video frames from end

1553
01:05:54,240 --> 01:05:58,399
to end

1554
01:05:55,039 --> 01:06:01,359
so this obviously is what it is

1555
01:05:58,400 --> 01:06:02,559
coming into the in the the rtp packet

1556
01:06:01,359 --> 01:06:04,720
decision is not

1557
01:06:02,559 --> 01:06:05,680
a media frame anymore it is something

1558
01:06:04,720 --> 01:06:09,038
different and

1559
01:06:05,680 --> 01:06:12,078
it can must be

1560
01:06:09,039 --> 01:06:13,599
or it interacts with how the rtp packet

1561
01:06:12,079 --> 01:06:18,400
decision is is done

1562
01:06:13,599 --> 01:06:20,720
so necessary please

1563
01:06:18,400 --> 01:06:21,839
okay we have magnus in the queue magnus

1564
01:06:20,720 --> 01:06:24,879
yep

1565
01:06:21,839 --> 01:06:27,920
yeah clarification question here around

1566
01:06:24,880 --> 01:06:29,839
one aspect i think you're isn't your

1567
01:06:27,920 --> 01:06:32,319
two core screen here when you talk about

1568
01:06:29,839 --> 01:06:34,319
video frame i mean this is

1569
01:06:32,319 --> 01:06:35,680
the s frame in caps encrypted

1570
01:06:34,319 --> 01:06:39,359
encapsulation is going to be

1571
01:06:35,680 --> 01:06:41,839
on the codex uh smallest

1572
01:06:39,359 --> 01:06:43,038
independently usable unit whatever

1573
01:06:41,839 --> 01:06:45,038
that's called and i mean

1574
01:06:43,039 --> 01:06:48,240
i think you need to be clear about that

1575
01:06:45,039 --> 01:06:51,920
before when you have scalability etc

1576
01:06:48,240 --> 01:06:52,319
its relation to rtp and rtp streams etc

1577
01:06:51,920 --> 01:06:54,480
is

1578
01:06:52,319 --> 01:06:56,400
dependent on if you have one or multiple

1579
01:06:54,480 --> 01:06:58,160
scalability layers in one multiple

1580
01:06:56,400 --> 01:07:01,039
stream etc so i think we need to be

1581
01:06:58,160 --> 01:07:02,240
very careful here in terminology and and

1582
01:07:01,039 --> 01:07:04,480
clarify

1583
01:07:02,240 --> 01:07:05,919
these aspects so that the payload format

1584
01:07:04,480 --> 01:07:08,000
etc is actually

1585
01:07:05,920 --> 01:07:11,039
recommending you do the right thing and

1586
01:07:08,000 --> 01:07:11,039
and so

1587
01:07:13,599 --> 01:07:17,920
um yeah but for example the spatial

1588
01:07:16,240 --> 01:07:22,160
scalability and

1589
01:07:17,920 --> 01:07:24,400
and and the independent decodable units

1590
01:07:22,160 --> 01:07:24,399
or

1591
01:07:24,559 --> 01:07:28,640
how it can be a slices in excuses for or

1592
01:07:27,200 --> 01:07:32,558
ties in ab1 is not

1593
01:07:28,640 --> 01:07:35,598
specific to rtp so no they're not

1594
01:07:32,559 --> 01:07:36,319
but it's to design a payload format that

1595
01:07:35,599 --> 01:07:39,520
works

1596
01:07:36,319 --> 01:07:42,000
as possible good for generic use

1597
01:07:39,520 --> 01:07:43,680
for spending codex as possible i think

1598
01:07:42,000 --> 01:07:45,280
it's very important that working with

1599
01:07:43,680 --> 01:07:46,960
this payload format you establish the

1600
01:07:45,280 --> 01:07:49,280
terminology

1601
01:07:46,960 --> 01:07:51,200
clearly maps out that you can have these

1602
01:07:49,280 --> 01:07:53,760
different cases

1603
01:07:51,200 --> 01:07:55,839
so that we ensure that we get a payload

1604
01:07:53,760 --> 01:07:57,920
format that actually is

1605
01:07:55,839 --> 01:07:59,680
useful and flexible enough to cover the

1606
01:07:57,920 --> 01:08:00,480
different use cases depending on the

1607
01:07:59,680 --> 01:08:02,558
codec

1608
01:08:00,480 --> 01:08:04,799
and the encoding implementation i want

1609
01:08:02,559 --> 01:08:07,920
to try to achieve

1610
01:08:04,799 --> 01:08:09,119
yeah sure i mean yes not yes propose

1611
01:08:07,920 --> 01:08:11,200
anything

1612
01:08:09,119 --> 01:08:13,680
i just say making a description about

1613
01:08:11,200 --> 01:08:17,439
what is the current state of the

1614
01:08:13,680 --> 01:08:20,238
yeah so so it's

1615
01:08:17,439 --> 01:08:22,479
by not describing that level you're not

1616
01:08:20,238 --> 01:08:24,000
making the problem correctly represented

1617
01:08:22,479 --> 01:08:26,238
and therefore will design a wrong

1618
01:08:24,000 --> 01:08:27,839
payload format for it that's my problem

1619
01:08:26,238 --> 01:08:31,519
yeah but i i i have not yet

1620
01:08:27,839 --> 01:08:32,158
get to that dislike yet so okay yeah

1621
01:08:31,520 --> 01:08:39,839
we'll

1622
01:08:32,158 --> 01:08:39,839
set up for now but justin

1623
01:08:43,520 --> 01:08:46,960
hmm justin if you want to help you

1624
01:08:45,040 --> 01:08:49,839
should have oh yeah there you go in

1625
01:08:46,960 --> 01:08:51,439
an s frame and uh you know this is

1626
01:08:49,839 --> 01:08:52,880
definitely something we thought about

1627
01:08:51,439 --> 01:08:54,879
in fact that you know the the

1628
01:08:52,880 --> 01:08:55,520
implementation of our stream this exists

1629
01:08:54,880 --> 01:08:57,040
right now

1630
01:08:55,520 --> 01:08:58,719
you know has to deal with this of

1631
01:08:57,040 --> 01:08:59,120
multi-layers multiple encodings right

1632
01:08:58,719 --> 01:09:02,000
now

1633
01:08:59,120 --> 01:09:03,519
already um and we we talked about this

1634
01:09:02,000 --> 01:09:05,198
notion of an idu

1635
01:09:03,520 --> 01:09:07,520
independent decodable unit which could

1636
01:09:05,198 --> 01:09:09,839
be uh you know

1637
01:09:07,520 --> 01:09:11,120
you separate individual sort of spatial

1638
01:09:09,839 --> 01:09:12,880
layers but then also sub

1639
01:09:11,120 --> 01:09:15,439
you know you know deal with individual

1640
01:09:12,880 --> 01:09:17,359
tiles or slices within a particular

1641
01:09:15,439 --> 01:09:18,879
layer so anyway i think sergio's going

1642
01:09:17,359 --> 01:09:21,839
to get to this but it is something that

1643
01:09:18,880 --> 01:09:21,839
hasn't thought about from the beginning

1644
01:09:29,600 --> 01:09:36,000
yeah so this same this world

1645
01:09:33,040 --> 01:09:37,359
kind of the conclusions that or or the

1646
01:09:36,000 --> 01:09:39,520
ideas that we

1647
01:09:37,359 --> 01:09:40,400
gathered yesterday we're presenting a

1648
01:09:39,520 --> 01:09:42,799
much more

1649
01:09:40,399 --> 01:09:44,399
detailed information about how the the

1650
01:09:42,799 --> 01:09:46,960
video code the gram

1651
01:09:44,399 --> 01:09:48,799
payloads interact with this frame this

1652
01:09:46,960 --> 01:09:51,359
is a in the

1653
01:09:48,799 --> 01:09:52,640
in the slides for for that were

1654
01:09:51,359 --> 01:09:54,239
presented

1655
01:09:52,640 --> 01:09:56,800
two days ago in the next frame so you

1656
01:09:54,238 --> 01:09:58,879
want more details about the specific

1657
01:09:56,800 --> 01:10:00,560
interaction between the codecs and and

1658
01:09:58,880 --> 01:10:02,800
this frame is there but

1659
01:10:00,560 --> 01:10:03,679
the conclusion is that not all the video

1660
01:10:02,800 --> 01:10:06,800
codex supports

1661
01:10:03,679 --> 01:10:09,440
s frame easily i mean um it's a

1662
01:10:06,800 --> 01:10:11,040
video codex or rtp packetization of the

1663
01:10:09,440 --> 01:10:12,960
video codes requires a different

1664
01:10:11,040 --> 01:10:16,640
processing in order to be

1665
01:10:12,960 --> 01:10:20,400
able to to adapt to query encrypted

1666
01:10:16,640 --> 01:10:21,679
and payload and this obviously cause

1667
01:10:20,400 --> 01:10:24,080
problems both in

1668
01:10:21,679 --> 01:10:24,960
in in a specification and because you

1669
01:10:24,080 --> 01:10:28,000
have to to

1670
01:10:24,960 --> 01:10:31,679
start checking in the to a very

1671
01:10:28,000 --> 01:10:33,199
detailed way how this

1672
01:10:31,679 --> 01:10:35,679
has to be made for each code and

1673
01:10:33,199 --> 01:10:39,040
checking the security properties of each

1674
01:10:35,679 --> 01:10:41,679
of the of the transformation because in

1675
01:10:39,040 --> 01:10:43,120
some cases you have to send an encrypted

1676
01:10:41,679 --> 01:10:45,840
parts of the

1677
01:10:43,120 --> 01:10:47,040
of the video frame in order to to svu

1678
01:10:45,840 --> 01:10:48,560
for working

1679
01:10:47,040 --> 01:10:50,400
and also will create problems in

1680
01:10:48,560 --> 01:10:52,800
enterability because you will have

1681
01:10:50,400 --> 01:10:53,519
the integrity matrix will will will be

1682
01:10:52,800 --> 01:10:57,040
increase

1683
01:10:53,520 --> 01:11:00,560
as the number of codex increases and

1684
01:10:57,040 --> 01:11:03,280
also this was seen that for svu

1685
01:11:00,560 --> 01:11:05,040
to work it is something that the the it

1686
01:11:03,280 --> 01:11:07,360
requires on some metadata

1687
01:11:05,040 --> 01:11:08,960
for for the frame that must be carried

1688
01:11:07,360 --> 01:11:12,080
and encrypted so

1689
01:11:08,960 --> 01:11:13,040
it seems that it is better to to have it

1690
01:11:12,080 --> 01:11:16,159
into a

1691
01:11:13,040 --> 01:11:18,480
header extension that inside the the rtp

1692
01:11:16,159 --> 01:11:19,040
payload that's for example bp8 or bp9

1693
01:11:18,480 --> 01:11:23,759
this

1694
01:11:19,040 --> 01:11:23,760
is doing it right now and

1695
01:11:24,480 --> 01:11:29,120
if possible it would be good to have

1696
01:11:27,360 --> 01:11:32,480
some kind of solution that

1697
01:11:29,120 --> 01:11:35,519
um could be reused for other and

1698
01:11:32,480 --> 01:11:36,799
protocols that are not rtp based as s

1699
01:11:35,520 --> 01:11:40,480
frame is also

1700
01:11:36,800 --> 01:11:43,920
a agnostic of the of the

1701
01:11:40,480 --> 01:11:45,678
of the transport so and according to the

1702
01:11:43,920 --> 01:11:47,760
to the chapter that it is i have just

1703
01:11:45,679 --> 01:11:50,239
make a small grease up

1704
01:11:47,760 --> 01:11:51,840
strain is not going to work in the in

1705
01:11:50,239 --> 01:11:53,280
the packet decision or

1706
01:11:51,840 --> 01:11:55,120
it's not meant to create any kind of

1707
01:11:53,280 --> 01:11:57,040
packet decision but it will

1708
01:11:55,120 --> 01:12:00,080
just relay the world to to the proper

1709
01:11:57,040 --> 01:12:03,199
work groups that it is abt core for

1710
01:12:00,080 --> 01:12:05,440
this today discussing the this if it is

1711
01:12:03,199 --> 01:12:07,919
needed a new packet decision format and

1712
01:12:05,440 --> 01:12:09,120
if we need any header extension to for

1713
01:12:07,920 --> 01:12:11,920
this metadata and

1714
01:12:09,120 --> 01:12:13,120
a music for if there is any kind of

1715
01:12:11,920 --> 01:12:16,320
signaling to be done

1716
01:12:13,120 --> 01:12:16,800
in the sap so this is the the main idea

1717
01:12:16,320 --> 01:12:18,480
of

1718
01:12:16,800 --> 01:12:20,159
of this slice is to introducing the

1719
01:12:18,480 --> 01:12:22,159
topic here so we can

1720
01:12:20,159 --> 01:12:24,080
decide what needs to be done in in the

1721
01:12:22,159 --> 01:12:27,679
proper group

1722
01:12:24,080 --> 01:12:27,679
so let's slide this

1723
01:12:28,159 --> 01:12:33,199
so in terms of net steps yes again this

1724
01:12:31,199 --> 01:12:36,159
is just to trigger the discussion

1725
01:12:33,199 --> 01:12:37,519
uh three main items i think that it

1726
01:12:36,159 --> 01:12:40,320
should be done that it is

1727
01:12:37,520 --> 01:12:41,760
one is to this to define a new video

1728
01:12:40,320 --> 01:12:44,880
packet definition

1729
01:12:41,760 --> 01:12:47,280
format that it is a codec agnostic and

1730
01:12:44,880 --> 01:12:48,480
allows to transport the arrow in our

1731
01:12:47,280 --> 01:12:52,239
blob

1732
01:12:48,480 --> 01:12:54,879
it can be encrypted or we can be um

1733
01:12:52,239 --> 01:12:55,919
then the output of the insertable media

1734
01:12:54,880 --> 01:12:57,920
frames that it

1735
01:12:55,920 --> 01:12:59,360
can be whatever that the application

1736
01:12:57,920 --> 01:13:02,719
decides to to

1737
01:12:59,360 --> 01:13:04,799
to happen as as

1738
01:13:02,719 --> 01:13:06,800
i think it was madness they said that

1739
01:13:04,800 --> 01:13:07,760
we'll have to decide if we need to

1740
01:13:06,800 --> 01:13:10,960
support

1741
01:13:07,760 --> 01:13:15,040
a partially capability and how do we

1742
01:13:10,960 --> 01:13:19,120
support it and we the the other topic is

1743
01:13:15,040 --> 01:13:20,960
how to if we need to define a new

1744
01:13:19,120 --> 01:13:23,360
header extension to carry the metadata

1745
01:13:20,960 --> 01:13:24,400
that it is required for svu operation

1746
01:13:23,360 --> 01:13:27,599
and do the

1747
01:13:24,400 --> 01:13:29,360
specifically the the the layer switching

1748
01:13:27,600 --> 01:13:32,480
where you are using spatial or

1749
01:13:29,360 --> 01:13:34,960
temporal scalability we have

1750
01:13:32,480 --> 01:13:35,839
different options here just to name a

1751
01:13:34,960 --> 01:13:38,800
few yes

1752
01:13:35,840 --> 01:13:39,360
i don't want to to point to to say what

1753
01:13:38,800 --> 01:13:41,840
is my

1754
01:13:39,360 --> 01:13:44,000
favorite or where my i don't want to

1755
01:13:41,840 --> 01:13:47,120
propose any solution just to list

1756
01:13:44,000 --> 01:13:49,920
and what the space week will use is

1757
01:13:47,120 --> 01:13:50,559
one is the the frame marking that it is

1758
01:13:49,920 --> 01:13:53,679
already

1759
01:13:50,560 --> 01:13:55,520
defined the been designed here

1760
01:13:53,679 --> 01:13:56,880
and also it is possible it is also

1761
01:13:55,520 --> 01:13:58,880
available the ab1

1762
01:13:56,880 --> 01:14:00,080
one dependency descriptor that it has

1763
01:13:58,880 --> 01:14:03,280
been

1764
01:14:00,080 --> 01:14:04,880
working on in in our media is also meant

1765
01:14:03,280 --> 01:14:08,080
to be codec agnostic so we

1766
01:14:04,880 --> 01:14:09,600
we can also use it to check how to

1767
01:14:08,080 --> 01:14:13,360
implement things for

1768
01:14:09,600 --> 01:14:14,239
this operation metadata required for the

1769
01:14:13,360 --> 01:14:17,920
svus

1770
01:14:14,239 --> 01:14:20,159
and also we need to check about a

1771
01:14:17,920 --> 01:14:23,040
how the sp sdp negotiation is going to

1772
01:14:20,159 --> 01:14:23,040
be and

1773
01:14:23,120 --> 01:14:28,640
check if we are going to link the

1774
01:14:26,320 --> 01:14:29,679
the the negotiation well this must

1775
01:14:28,640 --> 01:14:32,159
probably happen in

1776
01:14:29,679 --> 01:14:33,120
music but i don't know so exactly the

1777
01:14:32,159 --> 01:14:34,719
overlap between

1778
01:14:33,120 --> 01:14:36,239
the both groups when doing the package

1779
01:14:34,719 --> 01:14:39,679
essential so

1780
01:14:36,239 --> 01:14:42,480
we will have to check if

1781
01:14:39,679 --> 01:14:43,120
how we are we're going to link the this

1782
01:14:42,480 --> 01:14:45,280
new

1783
01:14:43,120 --> 01:14:46,880
packet decision format to the current do

1784
01:14:45,280 --> 01:14:50,559
the negotiation of the

1785
01:14:46,880 --> 01:14:51,760
of the uh of the standard one so i mean

1786
01:14:50,560 --> 01:14:52,239
if you are going to have for example

1787
01:14:51,760 --> 01:14:55,440
let's use

1788
01:14:52,239 --> 01:14:58,000
four and with a good with a

1789
01:14:55,440 --> 01:14:59,519
normal rtp package session and this new

1790
01:14:58,000 --> 01:15:02,000
video packetization

1791
01:14:59,520 --> 01:15:03,360
that it is called agnostic you have to

1792
01:15:02,000 --> 01:15:06,960
negotiate both way

1793
01:15:03,360 --> 01:15:10,239
to do or or they are the patent

1794
01:15:06,960 --> 01:15:14,000
and also in here i think that

1795
01:15:10,239 --> 01:15:16,799
it could be a very interesting to

1796
01:15:14,000 --> 01:15:18,640
to check the the uh the pilot former

1797
01:15:16,800 --> 01:15:21,040
restriction for

1798
01:15:18,640 --> 01:15:22,239
negotiation registration of the video

1799
01:15:21,040 --> 01:15:24,480
called the formers

1800
01:15:22,239 --> 01:15:26,400
in a category way that it is something

1801
01:15:24,480 --> 01:15:26,639
that has already been working on and it

1802
01:15:26,400 --> 01:15:31,120
is

1803
01:15:26,640 --> 01:15:33,679
a available thing in other words so

1804
01:15:31,120 --> 01:15:34,640
this is again this is just to to trigger

1805
01:15:33,679 --> 01:15:37,679
the discussion and

1806
01:15:34,640 --> 01:15:39,040
see what should be done and if we want

1807
01:15:37,679 --> 01:15:42,880
to do it or

1808
01:15:39,040 --> 01:15:42,880
or what is the feeling of the people

1809
01:15:43,679 --> 01:15:48,480
so in terms of action items sergio do

1810
01:15:46,719 --> 01:15:51,280
you have an action item to

1811
01:15:48,480 --> 01:15:54,480
prepare a draft on the generic rdp

1812
01:15:51,280 --> 01:15:54,480
packetization for a stream

1813
01:15:54,640 --> 01:15:57,679
i don't i don't think i have it but i

1814
01:15:56,800 --> 01:16:00,480
can prepare it i

1815
01:15:57,679 --> 01:16:01,360
have already been working on it so i

1816
01:16:00,480 --> 01:16:07,839
would happy to

1817
01:16:01,360 --> 01:16:07,839
to to to do the work

1818
01:16:08,960 --> 01:16:12,400
i mean my i mean yeah we're happy to

1819
01:16:11,440 --> 01:16:14,000
have you bring a draft and then the

1820
01:16:12,400 --> 01:16:16,080
working group consider

1821
01:16:14,000 --> 01:16:18,000
that they want to adopt it i mean

1822
01:16:16,080 --> 01:16:20,320
presumably since s frame is a

1823
01:16:18,000 --> 01:16:21,679
iatf working group i mean the

1824
01:16:20,320 --> 01:16:22,960
inclination would be to say yes though

1825
01:16:21,679 --> 01:16:25,040
obviously we'll have to

1826
01:16:22,960 --> 01:16:26,320
the details matter uh the other all the

1827
01:16:25,040 --> 01:16:28,719
other process content

1828
01:16:26,320 --> 01:16:30,400
is in terms of sdp negotiation if it's

1829
01:16:28,719 --> 01:16:32,320
just negotiating

1830
01:16:30,400 --> 01:16:34,159
of the properties of this meta payload

1831
01:16:32,320 --> 01:16:35,679
type that's generally a thing that can

1832
01:16:34,159 --> 01:16:36,799
be done in a payload format right now if

1833
01:16:35,679 --> 01:16:40,000
it's something that's more

1834
01:16:36,800 --> 01:16:40,000
complicated than you would

1835
01:16:43,679 --> 01:16:50,640
and colin yeah hi

1836
01:16:47,199 --> 01:16:53,678
um so one of the um things about

1837
01:16:50,640 --> 01:16:54,400
the way rtp has been designed um right

1838
01:16:53,679 --> 01:16:57,040
from the very

1839
01:16:54,400 --> 01:16:58,000
beginning uh was that it was in

1840
01:16:57,040 --> 01:17:00,880
explicitly

1841
01:16:58,000 --> 01:17:03,120
and intentionally designed not to be

1842
01:17:00,880 --> 01:17:04,560
codec codecagnostic

1843
01:17:03,120 --> 01:17:06,719
you know that the reason we have

1844
01:17:04,560 --> 01:17:09,360
particular payload formats was that

1845
01:17:06,719 --> 01:17:10,239
the group believed that there was value

1846
01:17:09,360 --> 01:17:13,360
in that

1847
01:17:10,239 --> 01:17:16,559
in terms of increasing robustness and

1848
01:17:13,360 --> 01:17:20,000
allowing um partial decodability

1849
01:17:16,560 --> 01:17:21,840
and so on um and over the

1850
01:17:20,000 --> 01:17:23,520
the the many years that this working

1851
01:17:21,840 --> 01:17:26,320
group has existed it has

1852
01:17:23,520 --> 01:17:29,440
declined to standardize could agnostic

1853
01:17:26,320 --> 01:17:32,080
payload formats on a number of occasions

1854
01:17:29,440 --> 01:17:32,639
now maybe the constraints have changed

1855
01:17:32,080 --> 01:17:34,239
um

1856
01:17:32,640 --> 01:17:36,000
i mean that the type of applications

1857
01:17:34,239 --> 01:17:37,919
people are building um

1858
01:17:36,000 --> 01:17:39,600
nowadays are perhaps different to the

1859
01:17:37,920 --> 01:17:41,040
ones they were building five years ago

1860
01:17:39,600 --> 01:17:44,320
or 10 years ago or

1861
01:17:41,040 --> 01:17:46,080
20 years ago whatever it was um

1862
01:17:44,320 --> 01:17:48,559
but if if we're going to change that

1863
01:17:46,080 --> 01:17:50,400
that um sort of fundamental underlying

1864
01:17:48,560 --> 01:17:52,080
assumption of how we do the processing

1865
01:17:50,400 --> 01:17:59,839
we should do it deliberately rather than

1866
01:17:52,080 --> 01:17:59,840
just sleepwalking into it

1867
01:18:02,800 --> 01:18:13,840
okay uh mo you're up next

1868
01:18:14,000 --> 01:18:16,880
we can't hear you mo

1869
01:18:17,120 --> 01:18:19,599
i couldn't hear when he gave me the

1870
01:18:18,159 --> 01:18:20,799
floor because uh the peer connection

1871
01:18:19,600 --> 01:18:24,640
thing

1872
01:18:20,800 --> 01:18:26,239
um when you hit a mute too fast you uh

1873
01:18:24,640 --> 01:18:28,159
you lose the indication that you

1874
01:18:26,239 --> 01:18:29,599
actually have the floor um

1875
01:18:28,159 --> 01:18:31,839
the i think there may be a little bit of

1876
01:18:29,600 --> 01:18:32,159
tension between um you know what justin

1877
01:18:31,840 --> 01:18:35,520
was

1878
01:18:32,159 --> 01:18:39,280
uh presenting and and s frame because

1879
01:18:35,520 --> 01:18:41,199
the um if the the premise of

1880
01:18:39,280 --> 01:18:42,719
of end to end is that we don't want to

1881
01:18:41,199 --> 01:18:44,000
we think that the middle boxes could be

1882
01:18:42,719 --> 01:18:46,880
adversaries

1883
01:18:44,000 --> 01:18:48,159
um and in that sense if you want to

1884
01:18:46,880 --> 01:18:49,520
encrypt as much as possible from your

1885
01:18:48,159 --> 01:18:51,759
adversaries

1886
01:18:49,520 --> 01:18:53,600
then i wonder if you know the things

1887
01:18:51,760 --> 01:18:55,840
that you know that we're thinking need

1888
01:18:53,600 --> 01:18:58,880
to be done even for the atp headers

1889
01:18:55,840 --> 01:19:00,320
uh and csrcs and whatnot um you know if

1890
01:18:58,880 --> 01:19:03,440
they're not being done

1891
01:19:00,320 --> 01:19:06,719
uh for for uh for s

1892
01:19:03,440 --> 01:19:08,080
frame um assuming anyone ever does s

1893
01:19:06,719 --> 01:19:10,960
frame over rtp instead of

1894
01:19:08,080 --> 01:19:11,360
over some other transport so i don't

1895
01:19:10,960 --> 01:19:13,760
think that

1896
01:19:11,360 --> 01:19:14,880
you know impacts uh sergio's problem

1897
01:19:13,760 --> 01:19:16,159
here too much

1898
01:19:14,880 --> 01:19:18,239
but it just makes me wonder about the

1899
01:19:16,159 --> 01:19:19,440
overall um

1900
01:19:18,239 --> 01:19:22,559
you know threat models that we're trying

1901
01:19:19,440 --> 01:19:36,879
to do for end-to-end versus you know

1902
01:19:22,560 --> 01:19:39,360
just encrypt wherever possible

1903
01:19:36,880 --> 01:19:39,360
magnus

1904
01:19:41,679 --> 01:19:46,719
yes so um i mean in its party response

1905
01:19:45,360 --> 01:19:48,400
to collins here about

1906
01:19:46,719 --> 01:19:49,920
rtp and i think i agree with the

1907
01:19:48,400 --> 01:19:52,559
deliberate thing and that's why i think

1908
01:19:49,920 --> 01:19:55,040
it's very important that

1909
01:19:52,560 --> 01:19:56,719
we do describe this very well about and

1910
01:19:55,040 --> 01:19:58,400
that's why i think it's so important to

1911
01:19:56,719 --> 01:20:00,400
say okay we are actually boiling down

1912
01:19:58,400 --> 01:20:03,920
this problem to saying that for

1913
01:20:00,400 --> 01:20:05,599
a codec that's gonna be encoded in or

1914
01:20:03,920 --> 01:20:08,000
practiced in 20p

1915
01:20:05,600 --> 01:20:10,400
you still need to say structured into

1916
01:20:08,000 --> 01:20:13,440
what you consider the

1917
01:20:10,400 --> 01:20:16,480
smallest independent decodable units and

1918
01:20:13,440 --> 01:20:18,159
and uh and let r2p handle that and i

1919
01:20:16,480 --> 01:20:18,559
think we're getting down to that level

1920
01:20:18,159 --> 01:20:22,559
where

1921
01:20:18,560 --> 01:20:25,280
rtp's alf principle was intended to be

1922
01:20:22,560 --> 01:20:26,000
but we're generalizing that just

1923
01:20:25,280 --> 01:20:27,759
slightly

1924
01:20:26,000 --> 01:20:29,760
i think you still for codec actually

1925
01:20:27,760 --> 01:20:31,840
gonna need a bit of a description

1926
01:20:29,760 --> 01:20:33,760
in the future even if you are never

1927
01:20:31,840 --> 01:20:36,639
intending to send it other than over s

1928
01:20:33,760 --> 01:20:38,080
frames over rtp you would still need to

1929
01:20:36,639 --> 01:20:41,120
sit down and actually define

1930
01:20:38,080 --> 01:20:43,040
okay what do i actually put in each in

1931
01:20:41,120 --> 01:20:44,880
what do i consider as the independent

1932
01:20:43,040 --> 01:20:47,840
decodable units

1933
01:20:44,880 --> 01:20:49,120
uh how does that relate to some degree

1934
01:20:47,840 --> 01:20:52,880
with the timing

1935
01:20:49,120 --> 01:20:55,360
timings etc of these things uh decodable

1936
01:20:52,880 --> 01:20:57,600
decoding you order and things like that

1937
01:20:55,360 --> 01:20:59,679
that actually is relevant because

1938
01:20:57,600 --> 01:21:01,600
uh there are aspects of this which

1939
01:20:59,679 --> 01:21:03,040
actually means quite careful design and

1940
01:21:01,600 --> 01:21:03,920
that's why i think it's very important

1941
01:21:03,040 --> 01:21:06,719
to start to

1942
01:21:03,920 --> 01:21:07,920
start staying on the high level in this

1943
01:21:06,719 --> 01:21:09,840
preparation for this

1944
01:21:07,920 --> 01:21:11,280
document is to really say okay what do

1945
01:21:09,840 --> 01:21:13,360
we have

1946
01:21:11,280 --> 01:21:14,480
how do we deal with decoding order how

1947
01:21:13,360 --> 01:21:16,000
do we deal with time

1948
01:21:14,480 --> 01:21:18,000
how do we deal with different

1949
01:21:16,000 --> 01:21:19,120
scalability layers and actually go

1950
01:21:18,000 --> 01:21:21,920
through that

1951
01:21:19,120 --> 01:21:23,360
so that we know what metadata i need we

1952
01:21:21,920 --> 01:21:26,480
know what's

1953
01:21:23,360 --> 01:21:28,000
from robustness layer principles etc it

1954
01:21:26,480 --> 01:21:30,559
needs to happen so that you can

1955
01:21:28,000 --> 01:21:32,960
do repairs in a reasonable way on ibus

1956
01:21:30,560 --> 01:21:36,159
and things like that so

1957
01:21:32,960 --> 01:21:37,360
thank you yeah yeah i i absolutely agree

1958
01:21:36,159 --> 01:21:39,199
with that i mean we

1959
01:21:37,360 --> 01:21:40,960
obviously we have to do their new

1960
01:21:39,199 --> 01:21:41,440
packetization form and it will have to

1961
01:21:40,960 --> 01:21:43,600
be

1962
01:21:41,440 --> 01:21:46,000
done thoroughly i mean i don't want to

1963
01:21:43,600 --> 01:21:46,480
to to prevent any kind of discussions i

1964
01:21:46,000 --> 01:21:50,560
mean

1965
01:21:46,480 --> 01:21:53,678
but for example regarding the

1966
01:21:50,560 --> 01:21:54,880
the party like availability well it is

1967
01:21:53,679 --> 01:21:57,840
something that

1968
01:21:54,880 --> 01:21:57,840
the

1969
01:21:58,080 --> 01:22:02,159
there has been a lot of effort to define

1970
01:21:59,840 --> 01:22:05,280
it i have not

1971
01:22:02,159 --> 01:22:07,280
seen much use of it in the real life so

1972
01:22:05,280 --> 01:22:08,639
i would love to to get more information

1973
01:22:07,280 --> 01:22:11,360
about it for example

1974
01:22:08,639 --> 01:22:11,920
in in av1 even if it is supported in the

1975
01:22:11,360 --> 01:22:14,960
in the

1976
01:22:11,920 --> 01:22:16,400
the codec for tiles the rtp packet

1977
01:22:14,960 --> 01:22:19,040
decision format

1978
01:22:16,400 --> 01:22:22,239
and the descriptor does not allows the

1979
01:22:19,040 --> 01:22:24,080
svu to do to handle it so

1980
01:22:22,239 --> 01:22:26,400
even if it is supported in the codec it

1981
01:22:24,080 --> 01:22:28,320
is not actually being used at all

1982
01:22:26,400 --> 01:22:29,599
and i will also to do to get more

1983
01:22:28,320 --> 01:22:31,759
information about

1984
01:22:29,600 --> 01:22:32,960
about how it is actually being used

1985
01:22:31,760 --> 01:22:36,159
because say

1986
01:22:32,960 --> 01:22:37,040
in my years experience i have not worked

1987
01:22:36,159 --> 01:22:39,360
with a

1988
01:22:37,040 --> 01:22:41,440
system that has supported it so even if

1989
01:22:39,360 --> 01:22:42,559
i implemented it i have never seen it in

1990
01:22:41,440 --> 01:22:44,000
action but

1991
01:22:42,560 --> 01:22:45,760
i agree that this is something important

1992
01:22:44,000 --> 01:22:48,159
that we need to take care and define

1993
01:22:45,760 --> 01:22:48,800
specifically what are the smallest units

1994
01:22:48,159 --> 01:22:50,799
and how

1995
01:22:48,800 --> 01:22:52,480
these interact with each video code

1996
01:22:50,800 --> 01:22:54,960
video codec

1997
01:22:52,480 --> 01:22:55,759
yeah you i mean this is pushing the i

1998
01:22:54,960 --> 01:22:58,800
mean as it's

1999
01:22:55,760 --> 01:23:00,080
authentic the encryption these frames

2000
01:22:58,800 --> 01:23:01,760
i mean you are gonna end up in a

2001
01:23:00,080 --> 01:23:03,519
situation where you either get the whole

2002
01:23:01,760 --> 01:23:05,600
idea or not and that's

2003
01:23:03,520 --> 01:23:07,199
i think and i think that's actually

2004
01:23:05,600 --> 01:23:08,239
helps you clarify this question too a

2005
01:23:07,199 --> 01:23:10,638
lot is that

2006
01:23:08,239 --> 01:23:11,759
we're not going to see at least partial

2007
01:23:10,639 --> 01:23:14,639
if you get the first

2008
01:23:11,760 --> 01:23:16,320
n bytes of the slice you could decode it

2009
01:23:14,639 --> 01:23:18,480
attempt the coding of it but

2010
01:23:16,320 --> 01:23:20,239
in this case you're not going to be able

2011
01:23:18,480 --> 01:23:22,239
to decrypt it and verify it's there for

2012
01:23:20,239 --> 01:23:23,280
you you have to throw it away and then i

2013
01:23:22,239 --> 01:23:25,360
think it's

2014
01:23:23,280 --> 01:23:26,880
just accept that fact and deal with that

2015
01:23:25,360 --> 01:23:29,920
and

2016
01:23:26,880 --> 01:23:30,960
put that to say okay this is an aspect

2017
01:23:29,920 --> 01:23:32,159
of why

2018
01:23:30,960 --> 01:23:34,480
you need to think through what your

2019
01:23:32,159 --> 01:23:37,440
ideas are yeah

2020
01:23:34,480 --> 01:23:37,440
completely yep

2021
01:23:44,560 --> 01:23:48,719
um i just wanted to comment most point

2022
01:23:46,880 --> 01:23:52,080
about you know how this stacks up

2023
01:23:48,719 --> 01:23:53,040
uh with cryptex i hadn't really thought

2024
01:23:52,080 --> 01:23:56,000
about it

2025
01:23:53,040 --> 01:23:56,639
too much um sort of figuring that most

2026
01:23:56,000 --> 01:23:58,560
of

2027
01:23:56,639 --> 01:24:00,239
the data that's in header extensions is

2028
01:23:58,560 --> 01:24:03,520
actually something that

2029
01:24:00,239 --> 01:24:04,879
sfu usually wants to to peek at uh you

2030
01:24:03,520 --> 01:24:08,560
know audio level being one

2031
01:24:04,880 --> 01:24:09,920
one obvious example and also the um uh

2032
01:24:08,560 --> 01:24:11,760
you know transport control feedback

2033
01:24:09,920 --> 01:24:12,159
message that colin just talked about

2034
01:24:11,760 --> 01:24:15,600
being

2035
01:24:12,159 --> 01:24:17,519
being um yeah some of the data that goes

2036
01:24:15,600 --> 01:24:21,360
on that and perhaps being another

2037
01:24:17,520 --> 01:24:23,040
um you know we might want to audit that

2038
01:24:21,360 --> 01:24:24,159
and see if there are things that you

2039
01:24:23,040 --> 01:24:24,960
know we wouldn't want to ask if you

2040
01:24:24,159 --> 01:24:27,759
didn't look at

2041
01:24:24,960 --> 01:24:29,199
my guess is though that that stuff is

2042
01:24:27,760 --> 01:24:31,040
probably uh you know for the overall

2043
01:24:29,199 --> 01:24:32,960
threat model probably a much less

2044
01:24:31,040 --> 01:24:34,400
concern than the actual media which

2045
01:24:32,960 --> 01:24:36,480
which in most implementations right now

2046
01:24:34,400 --> 01:24:38,960
is currently being exposed

2047
01:24:36,480 --> 01:24:40,239
so um i wouldn't want to get too caught

2048
01:24:38,960 --> 01:24:41,360
up in those details but it's probably

2049
01:24:40,239 --> 01:24:45,839
worth looking at a little bit

2050
01:24:41,360 --> 01:24:45,839
as part of the cryptex effort

2051
01:24:46,320 --> 01:24:50,239
yeah also this is i think that this is

2052
01:24:48,480 --> 01:24:51,440
one of the use cases of the insertable

2053
01:24:50,239 --> 01:24:54,959
media stream

2054
01:24:51,440 --> 01:24:55,440
because it allows you to put a metadata

2055
01:24:54,960 --> 01:24:57,679
in the

2056
01:24:55,440 --> 01:25:00,400
in the actual payload that it is

2057
01:24:57,679 --> 01:25:03,679
increased end-to-end so

2058
01:25:00,400 --> 01:25:06,239
even if it is not kind of it

2059
01:25:03,679 --> 01:25:07,360
started kind of of hacky way of not

2060
01:25:06,239 --> 01:25:09,040
adding

2061
01:25:07,360 --> 01:25:10,400
information to the video frame i think

2062
01:25:09,040 --> 01:25:13,199
that it will help

2063
01:25:10,400 --> 01:25:14,960
just to to be able to to not send the

2064
01:25:13,199 --> 01:25:15,839
information or metadata that it is

2065
01:25:14,960 --> 01:25:19,199
segmented by

2066
01:25:15,840 --> 01:25:21,199
or available in clear tests in the svu

2067
01:25:19,199 --> 01:25:22,480
but that it will be transmitted

2068
01:25:21,199 --> 01:25:26,400
end-to-end and created

2069
01:25:22,480 --> 01:25:31,519
from from inside the

2070
01:25:26,400 --> 01:25:31,519
actual payload of the of s frame

2071
01:25:38,840 --> 01:25:41,840
stephen

2072
01:25:46,480 --> 01:25:55,839
stefan i'm not hearing you yeah you're

2073
01:25:49,520 --> 01:25:55,840
immuted stefan

2074
01:25:55,920 --> 01:26:02,719
face this using the face just sucks um

2075
01:25:59,600 --> 01:26:05,840
so traditionally the the mapping

2076
01:26:02,719 --> 01:26:10,480
between uh um

2077
01:26:05,840 --> 01:26:10,480
aquatic design and the uh

2078
01:26:11,840 --> 01:26:15,199
well and rtp lives in the rtp payload

2079
01:26:14,159 --> 01:26:19,120
format

2080
01:26:15,199 --> 01:26:21,199
uh we here we are talking now about the

2081
01:26:19,120 --> 01:26:24,320
generic rtp payload forward

2082
01:26:21,199 --> 01:26:27,599
um where that so it is the plan

2083
01:26:24,320 --> 01:26:29,679
to add all the mappings for the for the

2084
01:26:27,600 --> 01:26:33,280
codec that

2085
01:26:29,679 --> 01:26:34,840
someone or you or anyone interested or

2086
01:26:33,280 --> 01:26:38,320
so

2087
01:26:34,840 --> 01:26:42,320
uh is is a plan to put that

2088
01:26:38,320 --> 01:26:45,280
into your document or is the plan to

2089
01:26:42,320 --> 01:26:47,280
ref uh the the traditional documents

2090
01:26:45,280 --> 01:26:49,040
which would be the rtp payload forwards

2091
01:26:47,280 --> 01:26:51,920
of the codex themselves

2092
01:26:49,040 --> 01:26:52,719
to put an additional section on on how

2093
01:26:51,920 --> 01:26:56,719
to do

2094
01:26:52,719 --> 01:26:59,600
s-frame mapping or what's applying that

2095
01:26:56,719 --> 01:26:59,600
how would you do that

2096
01:27:00,639 --> 01:27:08,239
i ideally will not have to reference

2097
01:27:04,320 --> 01:27:11,679
the codex uh when we specify the the

2098
01:27:08,239 --> 01:27:12,239
the packetization i mean we assume that

2099
01:27:11,679 --> 01:27:14,880
you have

2100
01:27:12,239 --> 01:27:16,320
some format that is defined by the video

2101
01:27:14,880 --> 01:27:19,520
codec

2102
01:27:16,320 --> 01:27:22,719
that is what came in and

2103
01:27:19,520 --> 01:27:26,159
you don't actually need to to

2104
01:27:22,719 --> 01:27:27,920
to know what are the the the format or

2105
01:27:26,159 --> 01:27:30,320
what are the contents of the

2106
01:27:27,920 --> 01:27:32,639
what is coming to the packetizer in

2107
01:27:30,320 --> 01:27:34,559
order to be able to package it

2108
01:27:32,639 --> 01:27:36,480
i'm almost certain that's not going to

2109
01:27:34,560 --> 01:27:39,280
work i'm and the reason

2110
01:27:36,480 --> 01:27:40,879
is uh i mean over in ezra in your

2111
01:27:39,280 --> 01:27:43,679
presentation there

2112
01:27:40,880 --> 01:27:45,280
uh showed very clearly that you had to

2113
01:27:43,679 --> 01:27:46,159
follow somewhat different trains of

2114
01:27:45,280 --> 01:27:48,320
thoughts

2115
01:27:46,159 --> 01:27:50,159
for the three codex you you were worried

2116
01:27:48,320 --> 01:27:53,199
about right for vp9 for

2117
01:27:50,159 --> 01:27:56,320
ab1 and for h264

2118
01:27:53,199 --> 01:27:58,719
and yeah but you know you have to

2119
01:27:56,320 --> 01:28:00,559
think about all of those right yeah but

2120
01:27:58,719 --> 01:28:03,840
it is only because we are using the

2121
01:28:00,560 --> 01:28:05,440
the the the packet decision uh defined

2122
01:28:03,840 --> 01:28:08,880
for each of the formats so you will

2123
01:28:05,440 --> 01:28:10,400
you need to define how uh which part

2124
01:28:08,880 --> 01:28:11,679
needs to be encrypted which far that

2125
01:28:10,400 --> 01:28:15,120
does not

2126
01:28:11,679 --> 01:28:18,719
i mean need to be encrypted so this is

2127
01:28:15,120 --> 01:28:19,679
as the input is not the what the packet

2128
01:28:18,719 --> 01:28:22,480
is respect

2129
01:28:19,679 --> 01:28:23,040
you have to adapt it to to adapt it

2130
01:28:22,480 --> 01:28:25,919
before

2131
01:28:23,040 --> 01:28:27,600
you can use the the packetization but if

2132
01:28:25,920 --> 01:28:29,840
you are defining a new packet decision

2133
01:28:27,600 --> 01:28:33,040
format

2134
01:28:29,840 --> 01:28:35,280
you don't really need to to have those

2135
01:28:33,040 --> 01:28:37,600
constraints

2136
01:28:35,280 --> 01:28:39,040
um we do need to get them to move on

2137
01:28:37,600 --> 01:28:40,239
because we're getting a little tight on

2138
01:28:39,040 --> 01:28:43,760
time so

2139
01:28:40,239 --> 01:28:45,919
um let's uh

2140
01:28:43,760 --> 01:28:47,280
so i think i saw yon and mo sorry i did

2141
01:28:45,920 --> 01:28:50,400
close the queue

2142
01:28:47,280 --> 01:28:52,480
um so but i mean i think

2143
01:28:50,400 --> 01:28:54,320
just to briefly introduce myself i think

2144
01:28:52,480 --> 01:28:56,879
most of these are issues that would be

2145
01:28:54,320 --> 01:28:58,320
i'd probably addressed in the s frame

2146
01:28:56,880 --> 01:29:01,520
group not in the

2147
01:28:58,320 --> 01:29:02,880
in this group i suspect but as it will

2148
01:29:01,520 --> 01:29:04,719
be draw

2149
01:29:02,880 --> 01:29:10,080
discussed there first i suspect so

2150
01:29:04,719 --> 01:29:12,639
harold and then

2151
01:29:10,080 --> 01:29:14,320
yeah so the part of the other stuff

2152
01:29:12,639 --> 01:29:17,360
google

2153
01:29:14,320 --> 01:29:19,440
so the thing that's happening if you

2154
01:29:17,360 --> 01:29:22,880
don't have a specific

2155
01:29:19,440 --> 01:29:26,638
rtp format for s-frame

2156
01:29:22,880 --> 01:29:30,480
is that we get

2157
01:29:26,639 --> 01:29:34,320
uh get uh

2158
01:29:30,480 --> 01:29:38,638
rtp decoders trying to peek inside

2159
01:29:34,320 --> 01:29:42,639
the packets and failing

2160
01:29:38,639 --> 01:29:45,920
so i think it was uh

2161
01:29:42,639 --> 01:29:48,719
johnson's point that uh we we have not

2162
01:29:45,920 --> 01:29:48,719
designed the

2163
01:29:49,840 --> 01:29:57,440
rtp formats before

2164
01:29:53,120 --> 01:29:59,440
and well this is a case where the only

2165
01:29:57,440 --> 01:30:00,799
thing the payload format needs to tell

2166
01:29:59,440 --> 01:30:03,440
the rtp is

2167
01:30:00,800 --> 01:30:04,400
now there is no user serviceable parts

2168
01:30:03,440 --> 01:30:08,480
inside

2169
01:30:04,400 --> 01:30:12,559
stay out and

2170
01:30:08,480 --> 01:30:14,718
this is the question of how

2171
01:30:12,560 --> 01:30:16,719
this interacts with stp negotiation of

2172
01:30:14,719 --> 01:30:18,880
codex is very interesting

2173
01:30:16,719 --> 01:30:20,000
the fact that we didn't do a proper job

2174
01:30:18,880 --> 01:30:23,040
of that for insertable

2175
01:30:20,000 --> 01:30:28,080
streams it's a bit of sadness

2176
01:30:23,040 --> 01:30:31,280
but uh we'll have to fix that

2177
01:30:28,080 --> 01:30:34,080
yes this is about uh how you how you

2178
01:30:31,280 --> 01:30:35,599
tell the rtp packet answer and deep

2179
01:30:34,080 --> 01:30:38,719
packetizer especially

2180
01:30:35,600 --> 01:30:41,679
there are no user serviceable parts

2181
01:30:38,719 --> 01:30:41,679
inside this packet

2182
01:30:44,480 --> 01:30:48,799
all right so i think the answer is

2183
01:30:47,199 --> 01:30:50,480
anybody interested should

2184
01:30:48,800 --> 01:30:51,840
join and participate in the s framework

2185
01:30:50,480 --> 01:30:55,040
group and

2186
01:30:51,840 --> 01:30:56,320
sergio will bring something to here soon

2187
01:30:55,040 --> 01:30:59,920
but we do need to get a move on

2188
01:30:56,320 --> 01:31:02,080
so i think the next is vvc

2189
01:30:59,920 --> 01:31:05,360
let's try to do this relatively

2190
01:31:02,080 --> 01:31:05,360
expeditiously if we can

2191
01:31:06,239 --> 01:31:09,919
comment on the chair comment you may not

2192
01:31:08,400 --> 01:31:12,480
on the s frame draft

2193
01:31:09,920 --> 01:31:13,920
do we have 30 seconds on that or sure go

2194
01:31:12,480 --> 01:31:17,199
ahead sorry go ahead yeah

2195
01:31:13,920 --> 01:31:17,840
i mean um yeah i think the comment is

2196
01:31:17,199 --> 01:31:18,960
just like

2197
01:31:17,840 --> 01:31:20,800
i think we need to be very careful about

2198
01:31:18,960 --> 01:31:22,239
this the s frame group is not chartered

2199
01:31:20,800 --> 01:31:24,560
to change the way that the

2200
01:31:22,239 --> 01:31:26,400
every future rtp codec is done in this

2201
01:31:24,560 --> 01:31:28,719
working group that is way out of scope

2202
01:31:26,400 --> 01:31:29,599
that needs to happen absolutely

2203
01:31:28,719 --> 01:31:31,600
absolutely

2204
01:31:29,600 --> 01:31:33,199
and i think that that is really at the

2205
01:31:31,600 --> 01:31:34,320
fundamental of i'm not saying we

2206
01:31:33,199 --> 01:31:35,199
shouldn't do that that may be a very

2207
01:31:34,320 --> 01:31:36,880
good thing to do

2208
01:31:35,199 --> 01:31:38,559
but i think that that is i mean that's

2209
01:31:36,880 --> 01:31:39,600
basically what colin said earlier right

2210
01:31:38,560 --> 01:31:40,880
we're talking about changing the

2211
01:31:39,600 --> 01:31:43,520
architecture here

2212
01:31:40,880 --> 01:31:47,040
um so i think that it will involve this

2213
01:31:43,520 --> 01:31:47,040
working group to sort out this problem

2214
01:31:47,120 --> 01:31:50,480
but uh cullen is it fair to say that s

2215
01:31:49,679 --> 01:31:54,000
frame will

2216
01:31:50,480 --> 01:31:57,360
will uh produce some material on uh

2217
01:31:54,000 --> 01:31:59,840
what is what exactly is being uh

2218
01:31:57,360 --> 01:32:01,280
the unit let's say the units uh that are

2219
01:31:59,840 --> 01:32:03,040
to be encrypted like the

2220
01:32:01,280 --> 01:32:05,360
whether it's the decodable units and

2221
01:32:03,040 --> 01:32:07,199
stuff like that

2222
01:32:05,360 --> 01:32:08,559
i i think it's fair to say that the s

2223
01:32:07,199 --> 01:32:10,000
frame group and this working group don't

2224
01:32:08,560 --> 01:32:11,040
come to the same solution it's going to

2225
01:32:10,000 --> 01:32:13,679
be a show

2226
01:32:11,040 --> 01:32:14,960
but um you know i mean like we gotta be

2227
01:32:13,679 --> 01:32:16,239
coordinated and it's the same people

2228
01:32:14,960 --> 01:32:17,199
both places so i'm not worried about

2229
01:32:16,239 --> 01:32:19,360
that but i'd

2230
01:32:17,199 --> 01:32:21,040
i do think this is not i do think this

2231
01:32:19,360 --> 01:32:22,639
is gonna involve some hard discussions

2232
01:32:21,040 --> 01:32:24,159
in this working group not just punt at

2233
01:32:22,639 --> 01:32:27,199
all to the other

2234
01:32:24,159 --> 01:32:28,080
okay fine but yeah but

2235
01:32:27,199 --> 01:32:29,360
that's definitely anybody who's

2236
01:32:28,080 --> 01:32:30,559
interested to be participating please

2237
01:32:29,360 --> 01:32:31,759
participate in both working groups so

2238
01:32:30,560 --> 01:32:34,639
that we get this right

2239
01:32:31,760 --> 01:32:36,880
because as you said different agreements

2240
01:32:34,639 --> 01:32:36,880
yeah

2241
01:32:38,239 --> 01:32:41,440
all right uh so uh should i or whoever's

2242
01:32:40,560 --> 01:32:44,480
planning

2243
01:32:41,440 --> 01:32:45,519
yes all right i'm just telling my audio

2244
01:32:44,480 --> 01:32:48,718
and the videos

2245
01:32:45,520 --> 01:32:48,719
hope that everything comes through

2246
01:32:49,760 --> 01:32:55,840
you guys hear me all right

2247
01:32:54,320 --> 01:32:57,599
yes we hear you let's see look at this

2248
01:32:55,840 --> 01:32:58,480
screen all right so all right so this is

2249
01:32:57,600 --> 01:33:03,600
updated for the

2250
01:32:58,480 --> 01:33:03,599
uh bbc rgb format uh next slide please

2251
01:33:03,840 --> 01:33:06,960
next slide please okay so this is a

2252
01:33:05,679 --> 01:33:09,040
recap what happened

2253
01:33:06,960 --> 01:33:10,880
from previous meetings as you know this

2254
01:33:09,040 --> 01:33:12,800
is fdis already

2255
01:33:10,880 --> 01:33:15,679
um so it's under iso approval and

2256
01:33:12,800 --> 01:33:17,679
publication so the specs stable

2257
01:33:15,679 --> 01:33:19,440
uh i was kind of recap the design

2258
01:33:17,679 --> 01:33:21,920
principle for the bbc pillar format is

2259
01:33:19,440 --> 01:33:23,599
kind of different from ubc and utvc

2260
01:33:21,920 --> 01:33:26,480
we said we're going to support only a

2261
01:33:23,600 --> 01:33:30,000
single stream of single transport

2262
01:33:26,480 --> 01:33:31,360
and also we removed and also we

2263
01:33:30,000 --> 01:33:32,719
removed the boundary package for a

2264
01:33:31,360 --> 01:33:36,000
cleaning

2265
01:33:32,719 --> 01:33:36,400
rp environment and then we also agreed

2266
01:33:36,000 --> 01:33:38,719
to

2267
01:33:36,400 --> 01:33:40,320
include the free marking as an optional

2268
01:33:38,719 --> 01:33:41,679
feature for obvious performance

2269
01:33:40,320 --> 01:33:43,679
however this is something we probably

2270
01:33:41,679 --> 01:33:45,040
need to reconsider

2271
01:33:43,679 --> 01:33:47,280
uh based on the current discussion in

2272
01:33:45,040 --> 01:33:49,440
the mailing list i have a specific

2273
01:33:47,280 --> 01:33:50,559
slide for that so we can we could

2274
01:33:49,440 --> 01:33:54,638
discuss that in the

2275
01:33:50,560 --> 01:33:54,639
slide uh next slide please

2276
01:33:56,400 --> 01:34:02,559
next slide is quick update

2277
01:33:59,920 --> 01:34:04,320
in the zero five version um first we

2278
01:34:02,560 --> 01:34:06,000
want to welcome your queen board um your

2279
01:34:04,320 --> 01:34:07,840
creator has been providing

2280
01:34:06,000 --> 01:34:09,440
very details and valuable comments and

2281
01:34:07,840 --> 01:34:10,320
including proposed lots of great text

2282
01:34:09,440 --> 01:34:12,559
for the draft

2283
01:34:10,320 --> 01:34:13,840
so very happy to have you and and we

2284
01:34:12,560 --> 01:34:15,280
know you're going to be a great asset

2285
01:34:13,840 --> 01:34:17,120
for this work

2286
01:34:15,280 --> 01:34:18,639
uh we did lots of tune up for the bbc

2287
01:34:17,120 --> 01:34:21,679
coding section

2288
01:34:18,639 --> 01:34:23,679
and author also puts together a list of

2289
01:34:21,679 --> 01:34:25,120
stp optional parameters and thanks to

2290
01:34:23,679 --> 01:34:28,159
yago

2291
01:34:25,120 --> 01:34:31,040
um so all of them new to reviews um

2292
01:34:28,159 --> 01:34:31,839
we do have a slide to reminder what are

2293
01:34:31,040 --> 01:34:34,719
we going to

2294
01:34:31,840 --> 01:34:35,679
move forward with those sections and

2295
01:34:34,719 --> 01:34:37,600
another thing we want to

2296
01:34:35,679 --> 01:34:38,719
discuss recently is a discussion in the

2297
01:34:37,600 --> 01:34:41,440
meeting list regarding

2298
01:34:38,719 --> 01:34:42,480
um whether or not we're going to support

2299
01:34:41,440 --> 01:34:45,919
uh uh

2300
01:34:42,480 --> 01:34:47,839
graduate degree refresh and uh cre in

2301
01:34:45,920 --> 01:34:48,960
the uh forum troll response or whether

2302
01:34:47,840 --> 01:34:51,280
or not we should

2303
01:34:48,960 --> 01:34:52,719
have support in gdr in the free

2304
01:34:51,280 --> 01:34:54,559
marketing sections

2305
01:34:52,719 --> 01:34:56,159
so that those discussions really come

2306
01:34:54,560 --> 01:34:59,119
from the mini list and

2307
01:34:56,159 --> 01:35:01,759
thanks for watching for bringing this up

2308
01:34:59,119 --> 01:35:03,440
we believe it's a it's have a

2309
01:35:01,760 --> 01:35:05,040
good amount of impact for both vbc

2310
01:35:03,440 --> 01:35:10,480
graphic and free marketing

2311
01:35:05,040 --> 01:35:10,480
draft next slide please

2312
01:35:12,320 --> 01:35:17,280
next slide all right just

2313
01:35:15,760 --> 01:35:20,159
quick overview what happened in section

2314
01:35:17,280 --> 01:35:21,599
one and mostly according to overview so

2315
01:35:20,159 --> 01:35:24,080
and what i'm mentioning in the section

2316
01:35:21,600 --> 01:35:26,159
1.13 uh yeah we summarized high level

2317
01:35:24,080 --> 01:35:28,320
picture partitioner for bbc

2318
01:35:26,159 --> 01:35:30,159
also um shows the difference compared to

2319
01:35:28,320 --> 01:35:31,040
the gvc introduce the new sub picture

2320
01:35:30,159 --> 01:35:34,320
feature of

2321
01:35:31,040 --> 01:35:36,000
bbc so please do review them and provide

2322
01:35:34,320 --> 01:35:39,119
a comment

2323
01:35:36,000 --> 01:35:39,119
uh next slide please

2324
01:35:39,920 --> 01:35:43,119
so here's the reviews mostly needed as i

2325
01:35:42,239 --> 01:35:45,119
mentioned um

2326
01:35:43,119 --> 01:35:46,480
uh authors and we started to put out a

2327
01:35:45,119 --> 01:35:50,000
list of sd stp

2328
01:35:46,480 --> 01:35:54,320
optional parameters uh focus on section

2329
01:35:50,000 --> 01:35:55,679
i think 7.2 uh it's totally 15 pages

2330
01:35:54,320 --> 01:35:57,759
i think a perfect field for a good

2331
01:35:55,679 --> 01:35:59,679
night's reading before sleep

2332
01:35:57,760 --> 01:36:01,920
but most of them is really copy piece

2333
01:35:59,679 --> 01:36:04,480
from hgvc draft um

2334
01:36:01,920 --> 01:36:07,119
we did understanding bbc of course

2335
01:36:04,480 --> 01:36:09,199
please review them

2336
01:36:07,119 --> 01:36:10,639
we have a lot of editor notes on that

2337
01:36:09,199 --> 01:36:12,400
pay attention to that

2338
01:36:10,639 --> 01:36:13,760
we do have a suggestion to request

2339
01:36:12,400 --> 01:36:17,119
reviews

2340
01:36:13,760 --> 01:36:17,920
uh we do plan to push ourselves and you

2341
01:36:17,119 --> 01:36:21,040
guys to

2342
01:36:17,920 --> 01:36:22,000
move this forward we'll be starting main

2343
01:36:21,040 --> 01:36:23,760
list discussion

2344
01:36:22,000 --> 01:36:25,840
for each of the proposed parameters in

2345
01:36:23,760 --> 01:36:28,960
the draft um

2346
01:36:25,840 --> 01:36:30,800
we anticipate two weeks real period

2347
01:36:28,960 --> 01:36:32,639
for each of the topics parameters or

2348
01:36:30,800 --> 01:36:35,360
group of parameters

2349
01:36:32,639 --> 01:36:36,159
uh produced per comment received and

2350
01:36:35,360 --> 01:36:39,360
then

2351
01:36:36,159 --> 01:36:40,559
new revision will be uploaded and then

2352
01:36:39,360 --> 01:36:42,719
discussion for the next set of

2353
01:36:40,560 --> 01:36:46,719
parameters um

2354
01:36:42,719 --> 01:36:48,159
so to response to the main list of that

2355
01:36:46,719 --> 01:36:49,600
that's our site right now we're going to

2356
01:36:48,159 --> 01:36:50,960
initiate the discussion in the middle

2357
01:36:49,600 --> 01:36:52,719
east and hopefully the end of the year

2358
01:36:50,960 --> 01:36:55,040
we can we should be able to go through

2359
01:36:52,719 --> 01:36:56,719
the whole list but that being said

2360
01:36:55,040 --> 01:36:58,480
that's only one of the reason we try to

2361
01:36:56,719 --> 01:37:01,199
move this forward um

2362
01:36:58,480 --> 01:37:01,519
comments are welcome at any time it's

2363
01:37:01,199 --> 01:37:03,519
just

2364
01:37:01,520 --> 01:37:05,679
much easier if you guys can just comment

2365
01:37:03,520 --> 01:37:09,199
in the uh

2366
01:37:05,679 --> 01:37:13,600
proposed review period

2367
01:37:09,199 --> 01:37:13,599
uh next slide uh next slide please

2368
01:37:14,239 --> 01:37:18,559
so same same goes to the stp offer and

2369
01:37:16,560 --> 01:37:20,480
uh an answer section

2370
01:37:18,560 --> 01:37:21,920
so we'll be also starting the same

2371
01:37:20,480 --> 01:37:24,559
process um

2372
01:37:21,920 --> 01:37:25,840
for for the relevant sections um current

2373
01:37:24,560 --> 01:37:28,880
set currently we just put

2374
01:37:25,840 --> 01:37:29,920
placeholder in the section also same two

2375
01:37:28,880 --> 01:37:31,119
weeks review period

2376
01:37:29,920 --> 01:37:32,960
we're going to initiate from the medium

2377
01:37:31,119 --> 01:37:35,920
list

2378
01:37:32,960 --> 01:37:37,760
we do hope the proposed two weeks review

2379
01:37:35,920 --> 01:37:39,119
period will be okay for everyone

2380
01:37:37,760 --> 01:37:40,880
but do make comments if you think any

2381
01:37:39,119 --> 01:37:43,119
more time uh

2382
01:37:40,880 --> 01:37:43,920
but i think two weeks focus on while the

2383
01:37:43,119 --> 01:37:47,360
two

2384
01:37:43,920 --> 01:37:47,360
parameters should be sufficient

2385
01:37:47,679 --> 01:37:50,560
next slide please

2386
01:37:53,840 --> 01:37:57,440
so here's the i what's it called fun

2387
01:37:55,920 --> 01:37:59,679
stuff i expect we should

2388
01:37:57,440 --> 01:38:00,559
spend some time on um not sure how many

2389
01:37:59,679 --> 01:38:03,199
people following

2390
01:38:00,560 --> 01:38:04,480
the current discussion in the mailing

2391
01:38:03,199 --> 01:38:06,799
list

2392
01:38:04,480 --> 01:38:08,559
this is regarding the gradual decoding

2393
01:38:06,800 --> 01:38:11,440
refresh ddr support

2394
01:38:08,560 --> 01:38:12,239
for the bbc so i kind of summarize the

2395
01:38:11,440 --> 01:38:14,960
key point

2396
01:38:12,239 --> 01:38:17,360
it all comes down to whether or not we

2397
01:38:14,960 --> 01:38:20,320
should support ddr and bbc

2398
01:38:17,360 --> 01:38:22,159
um or if there's any interest in this

2399
01:38:20,320 --> 01:38:24,960
working group to support that

2400
01:38:22,159 --> 01:38:26,719
because this is not only for abvc itself

2401
01:38:24,960 --> 01:38:27,320
it probably has a potential impact on

2402
01:38:26,719 --> 01:38:30,239
the

2403
01:38:27,320 --> 01:38:32,400
avcohevc so there are

2404
01:38:30,239 --> 01:38:34,320
two specific discussion points going on

2405
01:38:32,400 --> 01:38:37,440
in the meeting list regarding the gdr

2406
01:38:34,320 --> 01:38:40,400
one is regarding um free entry request

2407
01:38:37,440 --> 01:38:41,599
mode and another one is regarding uh if

2408
01:38:40,400 --> 01:38:43,839
you visual support gdr

2409
01:38:41,600 --> 01:38:46,639
in free marketing since we are we have

2410
01:38:43,840 --> 01:38:50,639
supportive framework in the bbc

2411
01:38:46,639 --> 01:38:52,800
um so the the first one

2412
01:38:50,639 --> 01:38:53,920
bring up by martin uh regarding if we

2413
01:38:52,800 --> 01:38:56,000
should allow gdr

2414
01:38:53,920 --> 01:38:58,080
additional probiotic requests to

2415
01:38:56,000 --> 01:38:59,280
response

2416
01:38:58,080 --> 01:39:00,719
there are some good discussion in the

2417
01:38:59,280 --> 01:39:02,480
minutes if you want to look at it the

2418
01:39:00,719 --> 01:39:02,880
current discussion comes down to whether

2419
01:39:02,480 --> 01:39:07,839
or not

2420
01:39:02,880 --> 01:39:11,119
we should add gdrn for request response

2421
01:39:07,840 --> 01:39:14,480
if it's not in

2422
01:39:11,119 --> 01:39:17,759
uh fr or where should go

2423
01:39:14,480 --> 01:39:19,040
and my current understanding um based on

2424
01:39:17,760 --> 01:39:20,239
the marketing proposal regarding

2425
01:39:19,040 --> 01:39:22,000
cleaning random access

2426
01:39:20,239 --> 01:39:23,280
should not be allowed in the full

2427
01:39:22,000 --> 01:39:25,679
request

2428
01:39:23,280 --> 01:39:26,639
before you enter request mode i'm not

2429
01:39:25,679 --> 01:39:30,239
sure we have

2430
01:39:26,639 --> 01:39:33,360
come to a agreement in the main list

2431
01:39:30,239 --> 01:39:34,320
so if we if not so please we'll just

2432
01:39:33,360 --> 01:39:37,759
hand during the

2433
01:39:34,320 --> 01:39:39,519
discussion phase

2434
01:39:37,760 --> 01:39:41,360
the second as i mentioned it's a regular

2435
01:39:39,520 --> 01:39:44,639
discussion regarding we should support

2436
01:39:41,360 --> 01:39:47,280
gdr in the framework um

2437
01:39:44,639 --> 01:39:48,159
the discussion is around the confusion

2438
01:39:47,280 --> 01:39:50,480
orbit

2439
01:39:48,159 --> 01:39:51,839
in the short and long version of the

2440
01:39:50,480 --> 01:39:54,000
framework draft

2441
01:39:51,840 --> 01:39:55,760
i think it's needed to be clarified uh

2442
01:39:54,000 --> 01:39:58,400
whether the arbit

2443
01:39:55,760 --> 01:40:00,400
includes both rep or not rep intro

2444
01:39:58,400 --> 01:40:03,839
pictures or it just only supports the

2445
01:40:00,400 --> 01:40:05,839
random access point in general um

2446
01:40:03,840 --> 01:40:07,679
so i think we should ask yourself a

2447
01:40:05,840 --> 01:40:10,960
million dollar question here um

2448
01:40:07,679 --> 01:40:12,400
we know we already agreed uh um i think

2449
01:40:10,960 --> 01:40:14,800
back two millions back we support

2450
01:40:12,400 --> 01:40:15,920
uh free marking but do we really want

2451
01:40:14,800 --> 01:40:18,159
free marketing um

2452
01:40:15,920 --> 01:40:20,000
maybe security format and does anybody

2453
01:40:18,159 --> 01:40:22,239
see implementation or

2454
01:40:20,000 --> 01:40:24,560
existing implementation or for the large

2455
01:40:22,239 --> 01:40:27,280
deployment in the future

2456
01:40:24,560 --> 01:40:28,320
uh i can't propose couple options here

2457
01:40:27,280 --> 01:40:30,320
um

2458
01:40:28,320 --> 01:40:32,559
i think the first option if we do really

2459
01:40:30,320 --> 01:40:34,080
want a free marking

2460
01:40:32,560 --> 01:40:36,159
let's assume that we first see the

2461
01:40:34,080 --> 01:40:38,800
deployment of framework um

2462
01:40:36,159 --> 01:40:40,239
so there's a couple solutions we can do

2463
01:40:38,800 --> 01:40:42,480
right one is

2464
01:40:40,239 --> 01:40:43,360
you know this is regarding the gdr so

2465
01:40:42,480 --> 01:40:47,199
regarding if

2466
01:40:43,360 --> 01:40:49,119
we so the first option is requires new

2467
01:40:47,199 --> 01:40:51,599
modification or coefficient from a

2468
01:40:49,119 --> 01:40:53,040
framework in draft right so if we

2469
01:40:51,600 --> 01:40:54,800
what we can do you know obviously draft

2470
01:40:53,040 --> 01:40:58,239
if we specify saying that the r

2471
01:40:54,800 --> 01:40:58,560
bit in the bbc draft say equal to zero

2472
01:40:58,239 --> 01:41:00,718
when

2473
01:40:58,560 --> 01:41:02,000
when this is a gdr picture that's

2474
01:41:00,719 --> 01:41:04,880
basically saying there's a free market

2475
01:41:02,000 --> 01:41:06,400
on a separate gdr right so again

2476
01:41:04,880 --> 01:41:07,840
you can see this is not a complete

2477
01:41:06,400 --> 01:41:08,400
solution right for this whole problem

2478
01:41:07,840 --> 01:41:11,520
but

2479
01:41:08,400 --> 01:41:14,719
it actually worked i think it will work

2480
01:41:11,520 --> 01:41:17,440
and the second option uh which always go

2481
01:41:14,719 --> 01:41:19,440
which also goes two ways um this is from

2482
01:41:17,440 --> 01:41:22,000
most gestures from the main list

2483
01:41:19,440 --> 01:41:24,080
the first one is anything whatever being

2484
01:41:22,000 --> 01:41:27,760
needed to support gdr signaling

2485
01:41:24,080 --> 01:41:29,840
um with specific like uh

2486
01:41:27,760 --> 01:41:31,760
the the picture uh the picture recovery

2487
01:41:29,840 --> 01:41:34,560
can't equal to zero in mind

2488
01:41:31,760 --> 01:41:36,000
or do a totally generic approach to

2489
01:41:34,560 --> 01:41:39,679
signal another general gdr

2490
01:41:36,000 --> 01:41:42,000
and not just freebbc and also

2491
01:41:39,679 --> 01:41:43,119
said this problem for that approach is

2492
01:41:42,000 --> 01:41:43,520
we're going to put we're going to put a

2493
01:41:43,119 --> 01:41:45,519
lot of

2494
01:41:43,520 --> 01:41:47,199
consideration um for the redesign of the

2495
01:41:45,520 --> 01:41:50,800
free market

2496
01:41:47,199 --> 01:41:52,799
um one last option for us um

2497
01:41:50,800 --> 01:41:54,639
maybe the best one i think it's we just

2498
01:41:52,800 --> 01:41:57,679
don't support frameworking

2499
01:41:54,639 --> 01:42:00,080
right um then

2500
01:41:57,679 --> 01:42:01,119
we only need to address if the gtr needs

2501
01:42:00,080 --> 01:42:05,920
to support in the

2502
01:42:01,119 --> 01:42:08,400
um response mode uh message mode

2503
01:42:05,920 --> 01:42:10,080
um i believe i have one more slide i

2504
01:42:08,400 --> 01:42:11,920
think we can go back to this slide for

2505
01:42:10,080 --> 01:42:13,360
some discussion once we're finished

2506
01:42:11,920 --> 01:42:16,080
and we are you want a decision at the

2507
01:42:13,360 --> 01:42:17,360
end okay yeah i mean it's last slide is

2508
01:42:16,080 --> 01:42:18,480
simple then we can go back i need to

2509
01:42:17,360 --> 01:42:20,559
realize this

2510
01:42:18,480 --> 01:42:21,519
all right this is this is nothing new so

2511
01:42:20,560 --> 01:42:23,920
this is just

2512
01:42:21,520 --> 01:42:25,360
as we request from our last meeting uh

2513
01:42:23,920 --> 01:42:28,719
if you should support uh

2514
01:42:25,360 --> 01:42:31,599
um yeah okay if you

2515
01:42:28,719 --> 01:42:32,239
support uh slice indication or reference

2516
01:42:31,600 --> 01:42:34,800
picture

2517
01:42:32,239 --> 01:42:36,480
slice indication feedback mode as far as

2518
01:42:34,800 --> 01:42:38,880
we can we know that there's not

2519
01:42:36,480 --> 01:42:39,919
much of an implementation there but um

2520
01:42:38,880 --> 01:42:41,760
we want to hear

2521
01:42:39,920 --> 01:42:43,040
things we don't know so please do let us

2522
01:42:41,760 --> 01:42:44,639
know

2523
01:42:43,040 --> 01:42:46,400
if there's any implementation we're

2524
01:42:44,639 --> 01:42:48,400
going to send out the meeting list

2525
01:42:46,400 --> 01:42:49,839
inquiry for this question as well so

2526
01:42:48,400 --> 01:42:51,599
please do reply

2527
01:42:49,840 --> 01:42:54,000
otherwise we i think we're just going to

2528
01:42:51,600 --> 01:42:57,840
remove that if there's a there's no

2529
01:42:54,000 --> 01:42:59,600
implementation no one last thing is uh

2530
01:42:57,840 --> 01:43:02,159
we currently call this the reserve

2531
01:42:59,600 --> 01:43:03,760
building the uh fu header

2532
01:43:02,159 --> 01:43:05,199
uh we're still trying to figure out a

2533
01:43:03,760 --> 01:43:06,960
good user age all right it's called

2534
01:43:05,199 --> 01:43:08,638
reserve just uh

2535
01:43:06,960 --> 01:43:10,480
i think we probably can stress something

2536
01:43:08,639 --> 01:43:12,719
in the mailing list and or if somebody

2537
01:43:10,480 --> 01:43:14,000
else knows a good suggestion so please

2538
01:43:12,719 --> 01:43:15,679
do share your thoughts in the middle

2539
01:43:14,000 --> 01:43:18,800
list

2540
01:43:15,679 --> 01:43:20,560
um open them on time um yeah that's

2541
01:43:18,800 --> 01:43:24,719
that's all i want to

2542
01:43:20,560 --> 01:43:25,440
summarize i think people have questions

2543
01:43:24,719 --> 01:43:30,400
regarding

2544
01:43:25,440 --> 01:43:30,400
um the gdr okay well

2545
01:43:35,840 --> 01:43:39,840
um yeah i think it's uh beyond the gdr i

2546
01:43:38,800 --> 01:43:42,320
think it's it's

2547
01:43:39,840 --> 01:43:43,679
always been talking about you know last

2548
01:43:42,320 --> 01:43:47,199
20 or 30 minutes

2549
01:43:43,679 --> 01:43:50,880
is basically high-level syntax design

2550
01:43:47,199 --> 01:43:53,040
uh you know and whether or not um

2551
01:43:50,880 --> 01:43:54,320
it you know it can be optimized for each

2552
01:43:53,040 --> 01:43:55,360
codec or whether we need to pick

2553
01:43:54,320 --> 01:43:58,799
something that

2554
01:43:55,360 --> 01:44:00,880
works for all codex um so in

2555
01:43:58,800 --> 01:44:02,400
in this case of gdr you know that's a

2556
01:44:00,880 --> 01:44:05,920
good example of

2557
01:44:02,400 --> 01:44:07,280
um things that don't currently work in

2558
01:44:05,920 --> 01:44:09,199
any of the frame markings

2559
01:44:07,280 --> 01:44:10,400
even in the new av1 uh dependency

2560
01:44:09,199 --> 01:44:14,000
descriptor

2561
01:44:10,400 --> 01:44:17,599
uh gdr signaling wouldn't uh wouldn't

2562
01:44:14,000 --> 01:44:19,119
um so i think this this underscores

2563
01:44:17,600 --> 01:44:21,199
the question of whether or not we're

2564
01:44:19,119 --> 01:44:24,320
trying to design something

2565
01:44:21,199 --> 01:44:25,519
that uh basically a a uniform high level

2566
01:44:24,320 --> 01:44:28,480
syntax

2567
01:44:25,520 --> 01:44:28,960
uh for all payload formats uh that could

2568
01:44:28,480 --> 01:44:31,919
be

2569
01:44:28,960 --> 01:44:34,080
like justin said hoisted up into a

2570
01:44:31,920 --> 01:44:36,880
header instead of um

2571
01:44:34,080 --> 01:44:38,719
into the payloads i i think that's

2572
01:44:36,880 --> 01:44:40,000
really where where we are because

2573
01:44:38,719 --> 01:44:42,000
it's not that nobody wants free

2574
01:44:40,000 --> 01:44:43,679
marketing every single every single

2575
01:44:42,000 --> 01:44:45,920
person is using framework

2576
01:44:43,679 --> 01:44:46,960
the specific draft but everybody does

2577
01:44:45,920 --> 01:44:51,119
some form of framework

2578
01:44:46,960 --> 01:44:53,280
whether proprietary whether it's um svc

2579
01:44:51,119 --> 01:44:54,320
whether it's 81 dd whether it's the

2580
01:44:53,280 --> 01:44:55,360
framework draft

2581
01:44:54,320 --> 01:44:57,280
everyone is doing some sort of

2582
01:44:55,360 --> 01:44:58,719
frameworking uh you know for real

2583
01:44:57,280 --> 01:45:00,080
conferencing systems

2584
01:44:58,719 --> 01:45:03,360
i mean the question is do we do we

2585
01:45:00,080 --> 01:45:04,880
really try to

2586
01:45:03,360 --> 01:45:06,559
harmonize all of that and make it

2587
01:45:04,880 --> 01:45:08,800
interoperable and bring it up into

2588
01:45:06,560 --> 01:45:11,360
something common

2589
01:45:08,800 --> 01:45:13,119
or do we you know just admit that it's

2590
01:45:11,360 --> 01:45:15,119
too hard of a problem and

2591
01:45:13,119 --> 01:45:16,320
and let individual payload formats and

2592
01:45:15,119 --> 01:45:18,719
individual implementations

2593
01:45:16,320 --> 01:45:20,799
go off and and uh and signal things in

2594
01:45:18,719 --> 01:45:22,400
the way that they want

2595
01:45:20,800 --> 01:45:24,560
that's really what what i think it boils

2596
01:45:22,400 --> 01:45:26,719
down to so i think it's not just gdr

2597
01:45:24,560 --> 01:45:28,159
it's it's really all of all of the

2598
01:45:26,719 --> 01:45:30,560
metadata that

2599
01:45:28,159 --> 01:45:32,960
that's needed for middle boxes to

2600
01:45:30,560 --> 01:45:32,960
operate

2601
01:45:36,320 --> 01:45:41,040
the gdr is a relatively simple fix if we

2602
01:45:39,040 --> 01:45:42,639
wanted to

2603
01:45:41,040 --> 01:45:44,480
there's a much bigger broader question

2604
01:45:42,639 --> 01:45:46,960
that that the group needs to decide a

2605
01:45:44,480 --> 01:45:46,959
decision on

2606
01:45:49,199 --> 01:45:53,440
i think we should uh i mean start from

2607
01:45:51,119 --> 01:45:55,599
the first question i mean

2608
01:45:53,440 --> 01:45:58,000
we do kind of want some answers right um

2609
01:45:55,600 --> 01:46:01,760
do we need to support gdr in the

2610
01:45:58,000 --> 01:46:04,159
uh in the volunteer uh

2611
01:46:01,760 --> 01:46:05,440
response message that's brilliant by

2612
01:46:04,159 --> 01:46:07,599
martin

2613
01:46:05,440 --> 01:46:13,839
is there any interest in there in in the

2614
01:46:07,600 --> 01:46:13,840
working group to support that

2615
01:46:15,600 --> 01:46:27,840
i guess that's not

2616
01:46:29,760 --> 01:46:32,880
oh okay but people are responsible for

2617
01:46:31,920 --> 01:46:37,600
that

2618
01:46:32,880 --> 01:46:37,600
yeah i mean i guess that's no yeah okay

2619
01:46:38,840 --> 01:46:43,640
um

2620
01:46:40,580 --> 01:46:43,640
[Music]

2621
01:46:50,040 --> 01:46:53,100
[Music]

2622
01:46:53,199 --> 01:46:58,799
yes uh tomorrow i really want

2623
01:46:56,880 --> 01:47:00,800
get your opinion on what is the

2624
01:46:58,800 --> 01:47:04,080
intention of the ibis

2625
01:47:00,800 --> 01:47:06,880
in your frame marking box is it

2626
01:47:04,080 --> 01:47:08,800
for just for narrowing up introduced

2627
01:47:06,880 --> 01:47:12,320
picture or is it for

2628
01:47:08,800 --> 01:47:14,960
labeling indicating random text points

2629
01:47:12,320 --> 01:47:16,159
because currently the text in the frame

2630
01:47:14,960 --> 01:47:19,920
marking

2631
01:47:16,159 --> 01:47:22,559
says it's just intro picture while

2632
01:47:19,920 --> 01:47:23,920
the text in the pillow from the previous

2633
01:47:22,560 --> 01:47:27,199
pair format

2634
01:47:23,920 --> 01:47:30,400
it's interpreted as a indicate random

2635
01:47:27,199 --> 01:47:30,879
point so they're not consistent so we

2636
01:47:30,400 --> 01:47:32,320
need

2637
01:47:30,880 --> 01:47:37,840
to get to know your opinion what is

2638
01:47:32,320 --> 01:47:37,840
intention in the marketing draft first

2639
01:47:41,360 --> 01:47:44,480
well if you want to respond to that

2640
01:47:44,880 --> 01:47:48,719
yes the the intention is to be a random

2641
01:47:47,600 --> 01:47:52,000
access point

2642
01:47:48,719 --> 01:47:53,920
it's just that other drafts don't use uh

2643
01:47:52,000 --> 01:47:56,080
that same terminology that you know

2644
01:47:53,920 --> 01:47:58,080
there's the there's i2 terminology and

2645
01:47:56,080 --> 01:48:00,719
the you know the you know vpx

2646
01:47:58,080 --> 01:48:03,040
and 81 terminology and they all differ

2647
01:48:00,719 --> 01:48:06,480
so maybe we should clarify in the draft

2648
01:48:03,040 --> 01:48:09,040
um you know what exactly

2649
01:48:06,480 --> 01:48:09,759
uh uh that's referring to but yeah it's

2650
01:48:09,040 --> 01:48:11,760
intended to be

2651
01:48:09,760 --> 01:48:14,560
the random access points it's intended

2652
01:48:11,760 --> 01:48:14,560
to be okay

2653
01:48:14,639 --> 01:48:19,440
you can see what the text i put post in

2654
01:48:17,920 --> 01:48:20,880
the mailing list and try to change

2655
01:48:19,440 --> 01:48:22,320
something like that then we'll be clear

2656
01:48:20,880 --> 01:48:25,600
apparently the text thing

2657
01:48:22,320 --> 01:48:28,559
is not reflecting that intention yeah

2658
01:48:25,600 --> 01:48:32,239
yeah i can make an update for for making

2659
01:48:28,560 --> 01:48:35,199
that text clear

2660
01:48:32,239 --> 01:48:37,519
stefan i'm going to close the queue

2661
01:48:35,199 --> 01:48:37,519
after this

2662
01:48:38,880 --> 01:48:43,760
it i have two things

2663
01:48:42,320 --> 01:48:45,360
and i don't want the second to be

2664
01:48:43,760 --> 01:48:46,560
forgotten so on this particular

2665
01:48:45,360 --> 01:48:49,199
discussion

2666
01:48:46,560 --> 01:48:50,320
uh we're discussing your tiny little

2667
01:48:49,199 --> 01:48:53,440
details that are

2668
01:48:50,320 --> 01:48:55,199
probably um uh

2669
01:48:53,440 --> 01:48:56,480
somewhat use case driven my personal

2670
01:48:55,199 --> 01:49:00,000
opinion is

2671
01:48:56,480 --> 01:49:03,199
for gdr gdr means that you have

2672
01:49:00,000 --> 01:49:06,719
multiple pictures that create the

2673
01:49:03,199 --> 01:49:09,280
uh the basically the random access point

2674
01:49:06,719 --> 01:49:11,760
that's something which would break uh a

2675
01:49:09,280 --> 01:49:14,800
whole bunch of deployed

2676
01:49:11,760 --> 01:49:18,000
conferencing system designs uh

2677
01:49:14,800 --> 01:49:19,760
it would be hard to implement i want to

2678
01:49:18,000 --> 01:49:22,880
see a real use case for that before

2679
01:49:19,760 --> 01:49:26,239
before i would support that um

2680
01:49:22,880 --> 01:49:29,119
that's on this gdr thing yeah but the

2681
01:49:26,239 --> 01:49:29,759
my other thing was we had a little bit

2682
01:49:29,119 --> 01:49:32,639
earlier

2683
01:49:29,760 --> 01:49:33,360
in the slides this idea of a like staged

2684
01:49:32,639 --> 01:49:37,679
review

2685
01:49:33,360 --> 01:49:41,598
of these uh 15 pages worth of hevc

2686
01:49:37,679 --> 01:49:45,119
um uh sourced uh

2687
01:49:41,599 --> 01:49:46,880
stuff i would really like a resolution

2688
01:49:45,119 --> 01:49:47,679
there can we move forward in this

2689
01:49:46,880 --> 01:49:50,800
direction

2690
01:49:47,679 --> 01:49:51,280
because otherwise we'll go with a giant

2691
01:49:50,800 --> 01:49:54,480
blob

2692
01:49:51,280 --> 01:49:56,559
of of uh data and

2693
01:49:54,480 --> 01:49:58,400
text into the working group last call

2694
01:49:56,560 --> 01:50:01,119
and you know that

2695
01:49:58,400 --> 01:50:03,598
that is way too detailed to review yeah

2696
01:50:01,119 --> 01:50:05,280
i i i think i agree that

2697
01:50:03,599 --> 01:50:07,360
asking individual questions individual

2698
01:50:05,280 --> 01:50:08,800
focus questions on the mailing list and

2699
01:50:07,360 --> 01:50:10,080
you know saying this is what we propose

2700
01:50:08,800 --> 01:50:11,280
to do let us know if you think

2701
01:50:10,080 --> 01:50:12,800
differently that's that's probably a

2702
01:50:11,280 --> 01:50:14,719
better approach than giving

2703
01:50:12,800 --> 01:50:16,400
a huge blob of text for people to try to

2704
01:50:14,719 --> 01:50:18,400
digest so yeah i think that's

2705
01:50:16,400 --> 01:50:20,080
that stage review sounds like a good

2706
01:50:18,400 --> 01:50:22,960
approach to me

2707
01:50:20,080 --> 01:50:24,000
okay thank you for that so now back to

2708
01:50:22,960 --> 01:50:25,520
the gdr discussion

2709
01:50:24,000 --> 01:50:26,800
and discuss that as much as you want

2710
01:50:25,520 --> 01:50:28,080
it's still a high level yeah and i mean

2711
01:50:26,800 --> 01:50:29,440
i think we actually probably need to cut

2712
01:50:28,080 --> 01:50:29,840
because i do want to get to video up

2713
01:50:29,440 --> 01:50:31,360
some more

2714
01:50:29,840 --> 01:50:32,880
things topics and we're almost out of

2715
01:50:31,360 --> 01:50:36,000
time so

2716
01:50:32,880 --> 01:50:37,840
uh okay and do you have any other

2717
01:50:36,000 --> 01:50:40,639
answers

2718
01:50:37,840 --> 01:50:41,199
a quick comment and i haven't reviewed

2719
01:50:40,639 --> 01:50:44,239
the

2720
01:50:41,199 --> 01:50:45,839
http section yet but i since you have

2721
01:50:44,239 --> 01:50:49,598
decided

2722
01:50:45,840 --> 01:50:52,719
to support only single rtb stream

2723
01:50:49,599 --> 01:50:53,599
scene i guess a lot of those would not

2724
01:50:52,719 --> 01:50:56,719
be needed but

2725
01:50:53,599 --> 01:51:00,159
yeah i will make comments later

2726
01:50:56,719 --> 01:51:02,320
okay thank you very cleaned up you agree

2727
01:51:00,159 --> 01:51:03,519
i think i at least that was our

2728
01:51:02,320 --> 01:51:05,440
intention

2729
01:51:03,520 --> 01:51:09,520
so that there's a lot of junk in there

2730
01:51:05,440 --> 01:51:09,519
but it's not that junk it's otherwise

2731
01:51:11,040 --> 01:51:15,119
okay so we're gonna stay here and i'm

2732
01:51:13,440 --> 01:51:16,320
gonna turn off my uh

2733
01:51:15,119 --> 01:51:18,839
video audio instead i want to say

2734
01:51:16,320 --> 01:51:21,840
something regarding the uv city on

2735
01:51:18,840 --> 01:51:21,840
okay

2736
01:51:24,000 --> 01:51:28,800
exactly the same we suggest to use

2737
01:51:27,920 --> 01:51:32,560
exactly

2738
01:51:28,800 --> 01:51:32,880
the same review mechanism for ebc and

2739
01:51:32,560 --> 01:51:36,400
that

2740
01:51:32,880 --> 01:51:39,599
is that we copy paste uh the

2741
01:51:36,400 --> 01:51:42,559
hevc payload format uh

2742
01:51:39,599 --> 01:51:44,080
stp code points minus those that don't

2743
01:51:42,560 --> 01:51:48,480
make sense for the current

2744
01:51:44,080 --> 01:51:50,480
um evc draft into the new

2745
01:51:48,480 --> 01:51:52,400
working group evc draft before

2746
01:51:50,480 --> 01:51:55,759
publishing that

2747
01:51:52,400 --> 01:51:57,759
and then we beat them up one by one

2748
01:51:55,760 --> 01:51:59,520
i mean i think i think that i mean

2749
01:51:57,760 --> 01:52:00,320
hopefully the vvc beat ups will be

2750
01:51:59,520 --> 01:52:02,560
applicable at

2751
01:52:00,320 --> 01:52:03,759
some degree to the edc beat up so maybe

2752
01:52:02,560 --> 01:52:06,400
start with nice

2753
01:52:03,760 --> 01:52:07,280
most likely most likely that that will

2754
01:52:06,400 --> 01:52:09,920
be the same

2755
01:52:07,280 --> 01:52:10,639
the key point is more that uh that at

2756
01:52:09,920 --> 01:52:12,800
the moment

2757
01:52:10,639 --> 01:52:14,560
uh the complete stp section become the

2758
01:52:12,800 --> 01:52:16,880
upper answer section all that stuff

2759
01:52:14,560 --> 01:52:17,920
and the evc drive is empty we want to

2760
01:52:16,880 --> 01:52:21,440
populate that

2761
01:52:17,920 --> 01:52:24,560
before uh before we submit

2762
01:52:21,440 --> 01:52:26,239
the ebc draft and then you know that

2763
01:52:24,560 --> 01:52:29,599
will just make changes

2764
01:52:26,239 --> 01:52:32,159
of uh where possible on both drafts

2765
01:52:29,599 --> 01:52:34,400
simultaneously based on discussions

2766
01:52:32,159 --> 01:52:35,920
it sounds reasonable to me so insofar as

2767
01:52:34,400 --> 01:52:38,638
the codecs are the same hopefully we'll

2768
01:52:35,920 --> 01:52:42,400
make the same decisions on both

2769
01:52:38,639 --> 01:52:45,599
thanks all right so i'm i'm going to say

2770
01:52:42,400 --> 01:52:47,199
we should probably get to the 7983 bis

2771
01:52:45,599 --> 01:52:50,560
i think that's i don't think there's too

2772
01:52:47,199 --> 01:52:50,559
much to talk about on the jpeg xs

2773
01:52:51,040 --> 01:52:59,840
so let's

2774
01:53:08,239 --> 01:53:13,839
okay on next slide

2775
01:53:18,080 --> 01:53:22,719
just a recap this is a draft is an

2776
01:53:21,360 --> 01:53:26,000
update to rfc

2777
01:53:22,719 --> 01:53:28,880
1793 section 7 which documents

2778
01:53:26,000 --> 01:53:31,360
quick multiplexing uh describes the

2779
01:53:28,880 --> 01:53:33,040
multiplexing solution provides

2780
01:53:31,360 --> 01:53:35,119
some guidance on handling overlap

2781
01:53:33,040 --> 01:53:38,239
between concerned channels

2782
01:53:35,119 --> 01:53:40,880
which is not an issue in webrtc um

2783
01:53:38,239 --> 01:53:41,598
and then it updates potentially the dtls

2784
01:53:40,880 --> 01:53:44,480
content type

2785
01:53:41,599 --> 01:53:47,360
field on the iana page to represent new

2786
01:53:44,480 --> 01:53:49,598
rfc but no other change is needed

2787
01:53:47,360 --> 01:53:51,440
um and there is a caveat which is that

2788
01:53:49,599 --> 01:53:52,239
it applies to quick version one but not

2789
01:53:51,440 --> 01:53:57,759
necessarily

2790
01:53:52,239 --> 01:54:00,239
to subsequent versions so at itf 108

2791
01:53:57,760 --> 01:54:01,360
there was a request to it have a call

2792
01:54:00,239 --> 01:54:05,199
for adoption

2793
01:54:01,360 --> 01:54:05,199
as an avt core work item next

2794
01:54:07,040 --> 01:54:10,719
slide so the call for adoption was uh

2795
01:54:09,599 --> 01:54:13,920
issued

2796
01:54:10,719 --> 01:54:16,960
on july 30th it ended on august

2797
01:54:13,920 --> 01:54:18,880
14th but there was no

2798
01:54:16,960 --> 01:54:21,040
nine responses were sent to the list

2799
01:54:18,880 --> 01:54:22,800
from six working group participants

2800
01:54:21,040 --> 01:54:25,760
and so the question is was there a

2801
01:54:22,800 --> 01:54:25,760
conclusion reached

2802
01:54:27,679 --> 01:54:32,080
so i think most people yes but there was

2803
01:54:30,400 --> 01:54:32,960
a comment from martin which i thought

2804
01:54:32,080 --> 01:54:36,000
was

2805
01:54:32,960 --> 01:54:39,679
the most important because you know

2806
01:54:36,000 --> 01:54:42,719
i wanted to get his input here martin

2807
01:54:39,679 --> 01:54:43,280
um if you could just talk to your

2808
01:54:42,719 --> 01:54:46,719
comment

2809
01:54:43,280 --> 01:54:49,519
and um see what you had to say and

2810
01:54:46,719 --> 01:54:50,000
give your you know and now i have to

2811
01:54:49,520 --> 01:54:51,679
remember what

2812
01:54:50,000 --> 01:54:53,679
i said because you think it was

2813
01:54:51,679 --> 01:54:56,080
important and i can't remember it at all

2814
01:54:53,679 --> 01:54:57,679
yeah basically it's i think it has to do

2815
01:54:56,080 --> 01:54:58,400
with how you know whether we're going to

2816
01:54:57,679 --> 01:55:01,360
be

2817
01:54:58,400 --> 01:55:03,119
you know whether your desire a the quick

2818
01:55:01,360 --> 01:55:06,000
version one and b you're greasing of the

2819
01:55:03,119 --> 01:55:06,400
quick bit is going to be you know how

2820
01:55:06,000 --> 01:55:08,239
that

2821
01:55:06,400 --> 01:55:09,839
interacts with this because obviously

2822
01:55:08,239 --> 01:55:11,759
this depends on not greasing the quick

2823
01:55:09,840 --> 01:55:14,159
bit

2824
01:55:11,760 --> 01:55:15,199
it very much does but obviously in the

2825
01:55:14,159 --> 01:55:17,199
in the settings where

2826
01:55:15,199 --> 01:55:18,480
this is used that's something that's

2827
01:55:17,199 --> 01:55:20,000
under the control of the endpoints that

2828
01:55:18,480 --> 01:55:22,879
are opting into this

2829
01:55:20,000 --> 01:55:23,920
uh i did have a read of the draft and i

2830
01:55:22,880 --> 01:55:27,440
thought it could be a little

2831
01:55:23,920 --> 01:55:29,040
clearer about when it was talking about

2832
01:55:27,440 --> 01:55:30,320
quick that it was talking specifically

2833
01:55:29,040 --> 01:55:32,400
about quick version one

2834
01:55:30,320 --> 01:55:34,080
throughout but do you have any

2835
01:55:32,400 --> 01:55:37,280
objections to us

2836
01:55:34,080 --> 01:55:37,760
doing this as a general thing no i think

2837
01:55:37,280 --> 01:55:39,040
this is

2838
01:55:37,760 --> 01:55:40,960
this is probably the right thing to be

2839
01:55:39,040 --> 01:55:43,440
doing i think there's people who will be

2840
01:55:40,960 --> 01:55:46,960
wanting to use quick in this context and

2841
01:55:43,440 --> 01:55:48,559
it will work as long as you keep in mind

2842
01:55:46,960 --> 01:55:50,000
these two things

2843
01:55:48,560 --> 01:55:51,119
all right in that case i'd say yes you

2844
01:55:50,000 --> 01:55:52,639
have to control the version the other

2845
01:55:51,119 --> 01:55:54,880
one you have to avoid things like the

2846
01:55:52,639 --> 01:55:56,960
the greasing thing

2847
01:55:54,880 --> 01:55:58,080
okay um in that case i would say that

2848
01:55:56,960 --> 01:55:59,440
yes the conclusion was reached and we

2849
01:55:58,080 --> 01:56:02,239
will want to adopt this

2850
01:55:59,440 --> 01:56:02,879
so i just i was unclear what the outcome

2851
01:56:02,239 --> 01:56:04,320
was of that

2852
01:56:02,880 --> 01:56:06,000
conversation with you because everybody

2853
01:56:04,320 --> 01:56:08,719
else said yes absolutely with no

2854
01:56:06,000 --> 01:56:10,960
caveats so i just wanted to make sure

2855
01:56:08,719 --> 01:56:13,920
you didn't think this was going to do us

2856
01:56:10,960 --> 01:56:15,679
going to have a bad uh ecosystem

2857
01:56:13,920 --> 01:56:17,679
consequences

2858
01:56:15,679 --> 01:56:20,480
so what is the textbook what is the

2859
01:56:17,679 --> 01:56:22,480
action item to be recorded

2860
01:56:20,480 --> 01:56:24,080
um well a you know say yes we're

2861
01:56:22,480 --> 01:56:26,718
adopting this to working group item

2862
01:56:24,080 --> 01:56:28,000
um but b uh martin has some comments i

2863
01:56:26,719 --> 01:56:29,440
think that needs to clarify that

2864
01:56:28,000 --> 01:56:31,760
you know the things you said in the

2865
01:56:29,440 --> 01:56:33,360
previous slide might need to be

2866
01:56:31,760 --> 01:56:35,119
uh the caveat you need might need to be

2867
01:56:33,360 --> 01:56:38,559
further clarified and also

2868
01:56:35,119 --> 01:56:39,440
perhaps citing the the um martin's

2869
01:56:38,560 --> 01:56:41,599
grease draft

2870
01:56:39,440 --> 01:56:42,559
depending on its status saying don't do

2871
01:56:41,599 --> 01:56:44,960
that if you're doing this

2872
01:56:42,560 --> 01:56:44,960
basically

2873
01:56:48,960 --> 01:56:54,159
um okay well that was easier than i

2874
01:56:54,840 --> 01:57:00,000
feared

2875
01:56:56,880 --> 01:57:01,280
um all right so yeah so that's so we'll

2876
01:57:00,000 --> 01:57:02,880
i'll uh

2877
01:57:01,280 --> 01:57:04,559
we'll figure out a milestone for that

2878
01:57:02,880 --> 01:57:06,719
and uh

2879
01:57:04,560 --> 01:57:08,159
and then uh probably take your existing

2880
01:57:06,719 --> 01:57:10,960
draft as the working group item and then

2881
01:57:08,159 --> 01:57:13,920
we can incorporate martin's comments for

2882
01:57:10,960 --> 01:57:13,920
for such good drafts

2883
01:57:14,480 --> 01:57:17,839
okay so finally and i have to figure out

2884
01:57:16,639 --> 01:57:21,119
um

2885
01:57:17,840 --> 01:57:22,320
my setup isn't great for the jpeg access

2886
01:57:21,119 --> 01:57:22,960
is a powerpoint which one they have to

2887
01:57:22,320 --> 01:57:25,119
figure out how to

2888
01:57:22,960 --> 01:57:39,840
share that because i don't have fully

2889
01:57:25,119 --> 01:57:39,839
only keynote

2890
01:57:40,719 --> 01:57:44,080
yes i'm sorry i was not aware how to

2891
01:57:43,040 --> 01:57:47,280
upload uh

2892
01:57:44,080 --> 01:57:47,760
slides to the data tracker that's that's

2893
01:57:47,280 --> 01:57:50,080
fine

2894
01:57:47,760 --> 01:57:51,840
the powerpoint is fine it's just a

2895
01:57:50,080 --> 01:57:52,719
limitation of my end i have to figure

2896
01:57:51,840 --> 01:57:55,199
out how to uh

2897
01:57:52,719 --> 01:57:56,880
time i will try to do uh in the proper

2898
01:57:55,199 --> 01:57:59,919
way like everybody else did

2899
01:57:56,880 --> 01:58:01,290
yeah now it's fine i just applied

2900
01:57:59,920 --> 01:58:04,390
to find it here

2901
01:58:01,290 --> 01:58:04,390
[Music]

2902
01:58:04,560 --> 01:58:08,719
so let me already uh start a little bit

2903
01:58:06,639 --> 01:58:10,560
to save some of the time because i only

2904
01:58:08,719 --> 01:58:14,000
have two slides which is uh

2905
01:58:10,560 --> 01:58:15,840
pretty short i realized i i should have

2906
01:58:14,000 --> 01:58:18,960
put some more emphasis on the

2907
01:58:15,840 --> 01:58:20,800
actual rtp draft that we that we created

2908
01:58:18,960 --> 01:58:23,840
for the payload of jpxs but

2909
01:58:20,800 --> 01:58:26,880
okay it's my first uh ietf meeting uh

2910
01:58:23,840 --> 01:58:29,520
i i need to learn so my name is

2911
01:58:26,880 --> 01:58:31,360
tim brelands i'm actually working for a

2912
01:58:29,520 --> 01:58:34,320
company called into pix and

2913
01:58:31,360 --> 01:58:35,280
i'm an active member for uh for almost

2914
01:58:34,320 --> 01:58:39,199
15 years

2915
01:58:35,280 --> 01:58:41,440
in iso sc29 in the wg1

2916
01:58:39,199 --> 01:58:42,400
working group more particularly which is

2917
01:58:41,440 --> 01:58:44,960
the jpeg

2918
01:58:42,400 --> 01:58:47,119
committee and i've been working on jpg

2919
01:58:44,960 --> 01:58:50,159
xs

2920
01:58:47,119 --> 01:58:50,559
for for some years now and uh this is a

2921
01:58:50,159 --> 01:58:53,360
um

2922
01:58:50,560 --> 01:58:55,119
already iso uh officially published uh

2923
01:58:53,360 --> 01:58:58,880
standard for doing uh

2924
01:58:55,119 --> 01:59:02,559
uh image-based uh compression uh

2925
01:58:58,880 --> 01:59:04,960
with uh with very uh

2926
01:59:02,560 --> 01:59:05,920
good properties for what we what we use

2927
01:59:04,960 --> 01:59:09,360
so many

2928
01:59:05,920 --> 01:59:13,440
organizations are already using uh

2929
01:59:09,360 --> 01:59:15,920
jpeg excess but more in particular

2930
01:59:13,440 --> 01:59:16,480
there's the the the smt standards with

2931
01:59:15,920 --> 01:59:19,040
the move

2932
01:59:16,480 --> 01:59:19,598
uh that that were designed uh for uh

2933
01:59:19,040 --> 01:59:22,719
putting

2934
01:59:19,599 --> 01:59:23,920
audio and video over ip networks and uh

2935
01:59:22,719 --> 01:59:27,199
this is backed by the

2936
01:59:23,920 --> 01:59:27,920
ames uh alliance so uh there's a lot of

2937
01:59:27,199 --> 01:59:30,719
uh

2938
01:59:27,920 --> 01:59:31,199
track going on a lot of changes going on

2939
01:59:30,719 --> 01:59:33,760
in the

2940
01:59:31,199 --> 01:59:35,598
pro rv markets to move more and more to

2941
01:59:33,760 --> 01:59:38,800
ip based

2942
01:59:35,599 --> 01:59:43,599
audio video networks and so

2943
01:59:38,800 --> 01:59:44,000
in this respect there is 70 2110-22 to

2944
01:59:43,599 --> 01:59:46,080
send

2945
01:59:44,000 --> 01:59:47,360
compressed video in a in a constant

2946
01:59:46,080 --> 01:59:51,040
bitrate fashion

2947
01:59:47,360 --> 01:59:54,000
over ip networks and

2948
01:59:51,040 --> 01:59:54,239
on this topic we actually think we need

2949
01:59:54,000 --> 01:59:57,440
an

2950
01:59:54,239 --> 02:00:00,959
rtp payload for jpxs

2951
01:59:57,440 --> 02:00:05,280
rfc in order to be able to support

2952
02:00:00,960 --> 02:00:10,320
the sending of jpxs encoded video over

2953
02:00:05,280 --> 02:00:14,239
rtp as part of smtp22-22 standard

2954
02:00:10,320 --> 02:00:16,960
and we're also uh we also are

2955
02:00:14,239 --> 02:00:18,879
uh collaboratively working with vsf the

2956
02:00:16,960 --> 02:00:21,280
video services uh

2957
02:00:18,880 --> 02:00:22,560
foundation uh on technical

2958
02:00:21,280 --> 02:00:24,800
recommendation or aids

2959
02:00:22,560 --> 02:00:27,440
where they are actually uh standardizing

2960
02:00:24,800 --> 02:00:31,840
the transport of gpxs video in 70

2961
02:00:27,440 --> 02:00:35,440
21 10-22 next slide please

2962
02:00:31,840 --> 02:00:37,360
and so yeah jpeg s itself it's a it's a

2963
02:00:35,440 --> 02:00:38,799
cost efficient and interoperable blah

2964
02:00:37,360 --> 02:00:41,119
blah blah

2965
02:00:38,800 --> 02:00:42,800
image codec but it's actually very low

2966
02:00:41,119 --> 02:00:44,799
complexity to implement and

2967
02:00:42,800 --> 02:00:46,880
it is designed in particular to be very

2968
02:00:44,800 --> 02:00:50,000
easy implementable on fpga

2969
02:00:46,880 --> 02:00:52,719
or asic but also in software so it

2970
02:00:50,000 --> 02:00:52,719
allows

2971
02:00:52,840 --> 02:00:56,800
parallel so we've been working on this

2972
02:00:55,440 --> 02:01:00,239
rtb payload spec

2973
02:00:56,800 --> 02:01:04,400
and currently we are in draft version

2974
02:01:00,239 --> 02:01:07,678
seven uh but for me it's unclear as

2975
02:01:04,400 --> 02:01:08,000
how to proceed or if the if if uh the

2976
02:01:07,679 --> 02:01:11,360
people

2977
02:01:08,000 --> 02:01:12,639
here uh working group is uh is willing

2978
02:01:11,360 --> 02:01:14,080
to adopt this uh

2979
02:01:12,639 --> 02:01:15,760
asset well now we've we've already

2980
02:01:14,080 --> 02:01:16,480
adopted this this is all yes okay so

2981
02:01:15,760 --> 02:01:18,159
okay sorry

2982
02:01:16,480 --> 02:01:20,239
yeah yeah so the question is the

2983
02:01:18,159 --> 02:01:20,638
question is is it done do you think you

2984
02:01:20,239 --> 02:01:22,400
and

2985
02:01:20,639 --> 02:01:23,599
your you as far as you know there are no

2986
02:01:22,400 --> 02:01:25,040
remaining open issues and it's

2987
02:01:23,599 --> 02:01:28,159
technically completely well there is one

2988
02:01:25,040 --> 02:01:29,679
open issue uh which we we have some uh

2989
02:01:28,159 --> 02:01:31,759
customers that we are working with and

2990
02:01:29,679 --> 02:01:34,400
they are already implementing uh

2991
02:01:31,760 --> 02:01:35,119
this kind of uh uh payloads uh packet

2992
02:01:34,400 --> 02:01:38,000
education

2993
02:01:35,119 --> 02:01:39,519
and they they have an issue with uh with

2994
02:01:38,000 --> 02:01:42,719
something we wrote in the

2995
02:01:39,520 --> 02:01:46,320
in the current draft about the the

2996
02:01:42,719 --> 02:01:48,159
the interlaced uh if if the video is

2997
02:01:46,320 --> 02:01:49,519
encoded in interlaced mode with respect

2998
02:01:48,159 --> 02:01:52,799
to the time codes

2999
02:01:49,520 --> 02:01:55,280
so this is an open comment that we will

3000
02:01:52,800 --> 02:01:56,159
address i was actually waiting for this

3001
02:01:55,280 --> 02:01:58,159
meeting to

3002
02:01:56,159 --> 02:02:00,320
to do it just right after the meeting to

3003
02:01:58,159 --> 02:02:03,360
address this in the in the

3004
02:02:00,320 --> 02:02:07,840
draft so we will issue a new version

3005
02:02:03,360 --> 02:02:09,360
uh at last at least at latest next week

3006
02:02:07,840 --> 02:02:10,960
all right so yeah so if you want so i

3007
02:02:09,360 --> 02:02:12,159
think if that's the only remaining open

3008
02:02:10,960 --> 02:02:14,159
issue and you have a yes

3009
02:02:12,159 --> 02:02:16,719
i think yes so so yes i think the right

3010
02:02:14,159 --> 02:02:18,159
thing to do is to submit a um

3011
02:02:16,719 --> 02:02:20,800
you know that a new version of the draft

3012
02:02:18,159 --> 02:02:22,799
with that resolved and then we will

3013
02:02:20,800 --> 02:02:24,560
uh the chairs will issue a working last

3014
02:02:22,800 --> 02:02:27,440
call for people to

3015
02:02:24,560 --> 02:02:28,400
uh review the document make sure they

3016
02:02:27,440 --> 02:02:29,919
you know

3017
02:02:28,400 --> 02:02:31,519
we have working group consensus that

3018
02:02:29,920 --> 02:02:33,760
everything is good um

3019
02:02:31,520 --> 02:02:35,440
and uh once we've done that we'll see if

3020
02:02:33,760 --> 02:02:37,440
there's any remaining comments

3021
02:02:35,440 --> 02:02:38,719
um we can re address any of those

3022
02:02:37,440 --> 02:02:39,598
comments and then we can submit it for

3023
02:02:38,719 --> 02:02:42,320
publication

3024
02:02:39,599 --> 02:02:44,159
so that's that would be the plan so so

3025
02:02:42,320 --> 02:02:47,599
how do i contact

3026
02:02:44,159 --> 02:02:49,679
you the chairs uh to to tell you that

3027
02:02:47,599 --> 02:02:50,800
we are ready and that we uploaded to the

3028
02:02:49,679 --> 02:02:51,280
so whenever when you upload the new

3029
02:02:50,800 --> 02:02:53,280
draft

3030
02:02:51,280 --> 02:02:55,119
just you know you'll send an email to

3031
02:02:53,280 --> 02:02:56,719
the avt mailing list

3032
02:02:55,119 --> 02:03:00,239
saying okay saying yes we submitted it

3033
02:02:56,719 --> 02:03:01,760
and this is what we did um

3034
02:03:00,239 --> 02:03:04,400
okay all right thanks thank you very

3035
02:03:01,760 --> 02:03:06,320
much for your time yes absolutely

3036
02:03:04,400 --> 02:03:07,839
okay and that i think that is all the

3037
02:03:06,320 --> 02:03:10,880
presentations we had

3038
02:03:07,840 --> 02:03:14,159
one more thing on the agenda but uh

3039
02:03:10,880 --> 02:03:15,520
the i don't think the presenter is here

3040
02:03:14,159 --> 02:03:16,960
and we didn't get his slides and we're

3041
02:03:15,520 --> 02:03:20,239
out of time anyway

3042
02:03:16,960 --> 02:03:21,760
so um that's worked out

3043
02:03:20,239 --> 02:03:23,598
um i'm sorry we didn't get to that

3044
02:03:21,760 --> 02:03:25,040
hopefully we can figure out where the

3045
02:03:23,599 --> 02:03:28,000
disconnect was and

3046
02:03:25,040 --> 02:03:29,679
haven't just talk at the next meeting so

3047
02:03:28,000 --> 02:03:31,280
i will see you all on the next meeting

3048
02:03:29,679 --> 02:03:33,360
and the mailing list and if anybody has

3049
02:03:31,280 --> 02:03:34,320
any any other last comments before we

3050
02:03:33,360 --> 02:03:36,559
close

3051
02:03:34,320 --> 02:03:38,639
i think we're thankfully in the break

3052
02:03:36,560 --> 02:03:40,960
but

3053
02:03:38,639 --> 02:03:42,480
mitako doesn't cut us off for another

3054
02:03:40,960 --> 02:03:44,000
seven minutes if anybody else has any

3055
02:03:42,480 --> 02:03:47,440
last-minute things to say

3056
02:03:44,000 --> 02:03:49,199
otherwise no all right

3057
02:03:47,440 --> 02:03:50,559
okay well thank you all for attending uh

3058
02:03:49,199 --> 02:03:57,839
it's a great evening

3059
02:03:50,560 --> 02:03:57,840
okay thank you bye-bye

3060
02:04:22,840 --> 02:04:25,840
oh

3061
02:04:26,880 --> 02:04:39,840
should be

3062
02:04:50,840 --> 02:04:53,840
hmm

3063
02:04:56,199 --> 02:04:59,199
um

