1
00:00:10,960 --> 00:00:14,400
okay it's nine shall we start

2
00:00:15,280 --> 00:00:17,919
sounds good

3
00:00:18,560 --> 00:00:22,400
hey routine working group welcome

4
00:00:20,080 --> 00:00:28,080
everyone to itf 109

5
00:00:22,400 --> 00:00:28,080
virtual unfortunately uh please

6
00:00:28,160 --> 00:00:36,320
um yeah so jeff and chris here an engine

7
00:00:33,040 --> 00:00:36,320
our great secretary

8
00:00:36,559 --> 00:00:42,718
next slide please so please read not

9
00:00:40,239 --> 00:00:44,800
well it's a reminder of itf policies

10
00:00:42,719 --> 00:00:46,800
and by participating in atf you agree to

11
00:00:44,800 --> 00:00:48,399
follow its process and policies

12
00:00:46,800 --> 00:00:50,160
there's number of documents you could

13
00:00:48,399 --> 00:00:55,440
read to learn better about

14
00:00:50,160 --> 00:00:55,440
idf processing policies next slide

15
00:00:56,840 --> 00:01:00,879
please

16
00:00:58,960 --> 00:01:02,399
itf policy with regards to apr

17
00:01:00,879 --> 00:01:06,158
disclosure is

18
00:01:02,399 --> 00:01:07,840
in rfc 8179 routine working with

19
00:01:06,159 --> 00:01:10,799
specific process

20
00:01:07,840 --> 00:01:14,159
we have two main gates one at working

21
00:01:10,799 --> 00:01:17,360
group adoption one at last call

22
00:01:14,159 --> 00:01:20,240
and unless everybody responds to

23
00:01:17,360 --> 00:01:22,080
ipr call document is not progressing so

24
00:01:20,240 --> 00:01:23,679
there's a document that has been waiting

25
00:01:22,080 --> 00:01:26,080
for 11 months

26
00:01:23,680 --> 00:01:26,960
for responses from everybody and really

27
00:01:26,080 --> 00:01:30,158
bad example

28
00:01:26,960 --> 00:01:32,720
of how it should not be done

29
00:01:30,159 --> 00:01:35,119
please do respond to take apr calls

30
00:01:32,720 --> 00:01:38,960
seriously

31
00:01:35,119 --> 00:01:38,960
next please

32
00:01:39,439 --> 00:01:45,439
uh a gender review so very busy agenda

33
00:01:42,640 --> 00:01:47,119
exciting one so you see there are many

34
00:01:45,439 --> 00:01:50,158
drafts

35
00:01:47,119 --> 00:01:51,280
uh that are related to segment routing

36
00:01:50,159 --> 00:01:54,640
protection

37
00:01:51,280 --> 00:01:56,399
uh spring chair email today asking for

38
00:01:54,640 --> 00:01:57,920
clarification there about five or six

39
00:01:56,399 --> 00:01:59,840
different drafts

40
00:01:57,920 --> 00:02:01,280
been presented partially in routing

41
00:01:59,840 --> 00:02:04,399
partially in spring

42
00:02:01,280 --> 00:02:06,799
so we are going to meet and discuss uh

43
00:02:04,399 --> 00:02:08,800
where they belong and where it makes

44
00:02:06,799 --> 00:02:11,520
sense to follow because some of them are

45
00:02:08,800 --> 00:02:12,800
very related to ti in the face obviously

46
00:02:11,520 --> 00:02:14,800
should be in routing

47
00:02:12,800 --> 00:02:16,480
some of them are closer to according to

48
00:02:14,800 --> 00:02:18,959
regards to spring so

49
00:02:16,480 --> 00:02:20,399
the question is open we'll discuss it

50
00:02:18,959 --> 00:02:23,120
and potentially urbanize

51
00:02:20,400 --> 00:02:23,920
interim with both spring and routing

52
00:02:23,120 --> 00:02:26,000
chairs

53
00:02:23,920 --> 00:02:28,319
and all of you to decide what we do

54
00:02:26,000 --> 00:02:28,640
because and ac thank you for bringing it

55
00:02:28,319 --> 00:02:33,920
up

56
00:02:28,640 --> 00:02:33,920
by the way next slide please

57
00:02:35,760 --> 00:02:40,079
so we've got one document that passed

58
00:02:38,160 --> 00:02:43,280
working plus called

59
00:02:40,080 --> 00:02:46,879
the policy model waiting

60
00:02:43,280 --> 00:02:52,160
for right up

61
00:02:46,879 --> 00:02:55,120
so greece i believe it's waiting on you

62
00:02:52,160 --> 00:02:55,120
uh yes yes

63
00:02:56,400 --> 00:03:01,280
next please so no rex is published since

64
00:02:58,800 --> 00:03:04,720
last atf

65
00:03:01,280 --> 00:03:08,480
next slide so we've got uh

66
00:03:04,720 --> 00:03:11,519
two drafts that are expected so bgp

67
00:03:08,480 --> 00:03:12,480
peak is the draft i mentioned before is

68
00:03:11,519 --> 00:03:15,920
still waiting

69
00:03:12,480 --> 00:03:16,840
for ipl ipr responses so i clearly

70
00:03:15,920 --> 00:03:20,720
remember

71
00:03:16,840 --> 00:03:23,519
cisco patented it 10 years ago or so

72
00:03:20,720 --> 00:03:24,720
i also mailed clarence and us for

73
00:03:23,519 --> 00:03:26,879
clarification so

74
00:03:24,720 --> 00:03:27,920
hopefully we should be able to solve

75
00:03:26,879 --> 00:03:31,120
this soon and

76
00:03:27,920 --> 00:03:34,399
actually go through working group called

77
00:03:31,120 --> 00:03:36,959
another document is young crib extended

78
00:03:34,400 --> 00:03:38,799
from my point of view very ready for

79
00:03:36,959 --> 00:03:41,599
let's also expect let's go

80
00:03:38,799 --> 00:03:43,920
walking group last coulson next slide

81
00:03:41,599 --> 00:03:43,920
please

82
00:03:45,599 --> 00:03:49,920
so that document that our working group

83
00:03:48,080 --> 00:03:51,840
documents i believe we still

84
00:03:49,920 --> 00:03:54,319
have not achieved consensus and progress

85
00:03:51,840 --> 00:03:56,879
so it's still being discussed

86
00:03:54,319 --> 00:03:58,238
that will update you when we have

87
00:03:56,879 --> 00:04:01,840
reached consensus

88
00:03:58,239 --> 00:04:01,840
to do it one or another way

89
00:04:02,720 --> 00:04:05,519
next slide please

90
00:04:05,760 --> 00:04:10,640
uh the thyroid six egress protection has

91
00:04:08,080 --> 00:04:11,200
been recently adopted actually atf 107 i

92
00:04:10,640 --> 00:04:13,920
believe

93
00:04:11,200 --> 00:04:15,359
so this is one of the documents that

94
00:04:13,920 --> 00:04:17,918
going to be discussed as well with

95
00:04:15,360 --> 00:04:23,040
regards to all of protection schemes

96
00:04:17,918 --> 00:04:23,039
for certain charging next one please

97
00:04:23,919 --> 00:04:28,639
so there are a number of ongoing

98
00:04:26,840 --> 00:04:31,198
documents the

99
00:04:28,639 --> 00:04:32,720
kfa has been updated day before

100
00:04:31,199 --> 00:04:34,240
yesterday so thanks for updating it

101
00:04:32,720 --> 00:04:36,880
looks really good

102
00:04:34,240 --> 00:04:38,400
uh atnbgp has a bunch of very

103
00:04:36,880 --> 00:04:42,000
interesting discussions

104
00:04:38,400 --> 00:04:45,280
i'm going uh rpm

105
00:04:42,000 --> 00:04:46,080
model and qs models are getting very

106
00:04:45,280 --> 00:04:47,919
close to

107
00:04:46,080 --> 00:04:51,039
being ready for working with plus calls

108
00:04:47,919 --> 00:04:51,039
from a perspective as well

109
00:04:51,199 --> 00:04:54,000
next slide is

110
00:04:55,120 --> 00:05:03,520
yeah i think that that's it okay

111
00:04:58,400 --> 00:05:03,520
yeah okay we are moving to

112
00:05:03,840 --> 00:05:06,239
stephan

113
00:05:08,160 --> 00:05:12,160
hey jeff hey chris uh quick question

114
00:05:11,280 --> 00:05:15,440
regarding the

115
00:05:12,160 --> 00:05:17,280
ti lfa draft uh i think we are good

116
00:05:15,440 --> 00:05:18,400
regarding the updates and we have

117
00:05:17,280 --> 00:05:21,198
reduced

118
00:05:18,400 --> 00:05:24,080
uh the number of offers to be uh to be

119
00:05:21,199 --> 00:05:26,960
compliant with the ietf rules

120
00:05:24,080 --> 00:05:30,240
could we put this document into the

121
00:05:26,960 --> 00:05:30,239
working group classical queue

122
00:05:30,400 --> 00:05:33,919
we will do so so we will handle your

123
00:05:32,960 --> 00:05:37,359
request as

124
00:05:33,919 --> 00:05:40,080
formal request and we will uh

125
00:05:37,360 --> 00:05:40,639
look at updated document i didn't yet uh

126
00:05:40,080 --> 00:05:43,440
i saw

127
00:05:40,639 --> 00:05:45,840
the email yeah just let me know there

128
00:05:43,440 --> 00:05:48,719
are additional updates to do okay sure

129
00:05:45,840 --> 00:05:48,719
and thank you thank you

130
00:05:48,880 --> 00:05:53,840
dean bogdanovich

131
00:06:04,880 --> 00:06:08,159
hello can you hear me yes we can hear

132
00:06:07,199 --> 00:06:12,000
you

133
00:06:08,160 --> 00:06:15,039
okay great uh thank you uh

134
00:06:12,000 --> 00:06:15,039
next slide please the

135
00:06:15,280 --> 00:06:20,080
yeah i'm going to full screen mode to

136
00:06:17,440 --> 00:06:24,080
get the full effect here

137
00:06:20,080 --> 00:06:27,680
go and then next time yep

138
00:06:24,080 --> 00:06:30,800
so uh just a clarification

139
00:06:27,680 --> 00:06:34,560
for presentation in this group we are

140
00:06:30,800 --> 00:06:36,240
we are asking here for actually we look

141
00:06:34,560 --> 00:06:38,160
here to

142
00:06:36,240 --> 00:06:40,000
raise some awareness for the problem

143
00:06:38,160 --> 00:06:43,120
that we are seeing

144
00:06:40,000 --> 00:06:48,000
and there is a question

145
00:06:43,120 --> 00:06:49,759
of how to do the most effective

146
00:06:48,000 --> 00:06:51,039
garbage collection routine in the

147
00:06:49,759 --> 00:06:53,280
configurations

148
00:06:51,039 --> 00:06:54,318
but some of the proposals that we could

149
00:06:53,280 --> 00:06:57,679
do

150
00:06:54,319 --> 00:07:00,880
have some dependencies across multiple

151
00:06:57,680 --> 00:07:02,960
systems this work is currently

152
00:07:00,880 --> 00:07:04,000
being started in the irtf but the

153
00:07:02,960 --> 00:07:07,198
natural home

154
00:07:04,000 --> 00:07:10,240
is the is the ops area

155
00:07:07,199 --> 00:07:14,000
but there are certain uh

156
00:07:10,240 --> 00:07:18,319
dynamics that are touching routing

157
00:07:14,000 --> 00:07:20,880
and having some understanding of uh

158
00:07:18,319 --> 00:07:21,919
how changes in the routing can be done

159
00:07:20,880 --> 00:07:24,479
that

160
00:07:21,919 --> 00:07:26,560
if what will come to that if we change

161
00:07:24,479 --> 00:07:28,719
one part of a routing at one of the

162
00:07:26,560 --> 00:07:30,560
config levels that it will not have a

163
00:07:28,720 --> 00:07:33,680
global impact on

164
00:07:30,560 --> 00:07:37,759
all the uh across

165
00:07:33,680 --> 00:07:40,960
all the levels of the configuration and

166
00:07:37,759 --> 00:07:43,039
that is something that we hope

167
00:07:40,960 --> 00:07:44,000
people within the routing group will be

168
00:07:43,039 --> 00:07:46,560
able

169
00:07:44,000 --> 00:07:48,560
to help us so please view this as an

170
00:07:46,560 --> 00:07:51,360
introductory

171
00:07:48,560 --> 00:07:52,560
and informational only for people and

172
00:07:51,360 --> 00:07:55,039
maybe

173
00:07:52,560 --> 00:07:56,319
some of you will be interested to join

174
00:07:55,039 --> 00:08:00,080
our work

175
00:07:56,319 --> 00:08:04,800
and for us um

176
00:08:00,080 --> 00:08:07,039
the main motivation is that um

177
00:08:04,800 --> 00:08:08,240
you know that as the configurations are

178
00:08:07,039 --> 00:08:11,280
growing

179
00:08:08,240 --> 00:08:16,240
uh and the network operators

180
00:08:11,280 --> 00:08:19,679
especially in the bgp policy and qos

181
00:08:16,240 --> 00:08:21,520
areas are starting to be of

182
00:08:19,680 --> 00:08:23,360
afraid should they touch something or

183
00:08:21,520 --> 00:08:26,560
not as

184
00:08:23,360 --> 00:08:27,120
it's been in there forever and they

185
00:08:26,560 --> 00:08:29,520
don't know

186
00:08:27,120 --> 00:08:30,639
if they change some of those entries

187
00:08:29,520 --> 00:08:34,240
what will be

188
00:08:30,639 --> 00:08:37,440
uh the outcome and that is

189
00:08:34,240 --> 00:08:38,719
a major problem because it it grows but

190
00:08:37,440 --> 00:08:42,159
as

191
00:08:38,719 --> 00:08:44,159
somebody said it also kills unnecessary

192
00:08:42,159 --> 00:08:45,519
kills uh human brain cells wasting their

193
00:08:44,159 --> 00:08:47,120
time over something

194
00:08:45,519 --> 00:08:49,760
trying to figure out if it should be

195
00:08:47,120 --> 00:08:52,880
there uh or not

196
00:08:49,760 --> 00:08:54,480
in uh for a variety of reasons the

197
00:08:52,880 --> 00:08:58,320
configs are growing

198
00:08:54,480 --> 00:09:01,360
and they're not getting

199
00:08:58,320 --> 00:09:02,160
optimized so having all this information

200
00:09:01,360 --> 00:09:04,959
multiplex

201
00:09:02,160 --> 00:09:05,519
in a single file is growing to files of

202
00:09:04,959 --> 00:09:08,560
about

203
00:09:05,519 --> 00:09:09,360
50 megabytes and larger and there is a

204
00:09:08,560 --> 00:09:12,560
good question

205
00:09:09,360 --> 00:09:16,640
should those files uh be that big

206
00:09:12,560 --> 00:09:19,599
some of the network operators

207
00:09:16,640 --> 00:09:20,800
have centralized all the config in a

208
00:09:19,600 --> 00:09:25,040
database

209
00:09:20,800 --> 00:09:28,640
and they are always trying to sync

210
00:09:25,040 --> 00:09:31,439
the actual device configuration

211
00:09:28,640 --> 00:09:33,120
with the database but still those things

212
00:09:31,440 --> 00:09:35,839
get out of sync during

213
00:09:33,120 --> 00:09:38,560
manual interventions in one of my

214
00:09:35,839 --> 00:09:41,920
previous experiences

215
00:09:38,560 --> 00:09:41,920
we were trying to add

216
00:09:42,880 --> 00:09:46,240
we were trying to add programmatic

217
00:09:45,600 --> 00:09:49,360
control

218
00:09:46,240 --> 00:09:51,839
for certain

219
00:09:49,360 --> 00:09:52,720
network services but the question was

220
00:09:51,839 --> 00:09:56,320
how to

221
00:09:52,720 --> 00:09:59,760
act when there is a manual change uh

222
00:09:56,320 --> 00:10:00,800
done by the operator and how to uh treat

223
00:09:59,760 --> 00:10:03,360
that

224
00:10:00,800 --> 00:10:05,199
because it it doesn't matter how good

225
00:10:03,360 --> 00:10:08,720
your protocol and

226
00:10:05,200 --> 00:10:11,760
network operation process is when a

227
00:10:08,720 --> 00:10:13,680
operator gets on a physical device and

228
00:10:11,760 --> 00:10:16,640
logs into the device

229
00:10:13,680 --> 00:10:17,120
changes are being done and the question

230
00:10:16,640 --> 00:10:20,399
is

231
00:10:17,120 --> 00:10:23,040
should they stay there or was the the

232
00:10:20,399 --> 00:10:32,720
whole process correctly followed next

233
00:10:23,040 --> 00:10:35,760
slice please

234
00:10:32,720 --> 00:10:39,760
uh so where do we see that the

235
00:10:35,760 --> 00:10:43,279
multi-level configs uh could help

236
00:10:39,760 --> 00:10:45,360
uh one of them is service assurance

237
00:10:43,279 --> 00:10:47,519
and network slicing we will talk a

238
00:10:45,360 --> 00:10:50,000
little bit more about those two

239
00:10:47,519 --> 00:10:50,720
examples a little bit in in the next

240
00:10:50,000 --> 00:10:54,000
slides

241
00:10:50,720 --> 00:10:58,480
but also in network migrations

242
00:10:54,000 --> 00:11:01,200
and the merging of uh

243
00:10:58,480 --> 00:11:01,920
of the configurations and server levels

244
00:11:01,200 --> 00:11:04,959
as well

245
00:11:01,920 --> 00:11:09,839
in uh zero uh touch uh

246
00:11:04,959 --> 00:11:13,599
provisioning so with the if

247
00:11:09,839 --> 00:11:17,120
if we have a large

248
00:11:13,600 --> 00:11:17,760
service instances that we are looking to

249
00:11:17,120 --> 00:11:20,320
add

250
00:11:17,760 --> 00:11:21,279
to the network if we are trying to do

251
00:11:20,320 --> 00:11:24,720
that

252
00:11:21,279 --> 00:11:26,720
in one large uh file it's a question

253
00:11:24,720 --> 00:11:28,000
where all those things have to be added

254
00:11:26,720 --> 00:11:31,200
correctly by being able

255
00:11:28,000 --> 00:11:33,279
to split it up in multiple levels

256
00:11:31,200 --> 00:11:35,040
we believe that this can be simplified

257
00:11:33,279 --> 00:11:39,200
and it can be done

258
00:11:35,040 --> 00:11:42,079
in several smaller steps making sure

259
00:11:39,200 --> 00:11:44,720
that the correct configuration is being

260
00:11:42,079 --> 00:11:48,319
done but in case also something is wrong

261
00:11:44,720 --> 00:11:51,680
it should be easy to remove uh one of

262
00:11:48,320 --> 00:11:52,079
those levels and pretty much the same

263
00:11:51,680 --> 00:11:54,638
thing

264
00:11:52,079 --> 00:11:56,079
is with the zero touch provisioning

265
00:11:54,639 --> 00:11:58,560
where incremental

266
00:11:56,079 --> 00:11:59,760
additions uh can be done after

267
00:11:58,560 --> 00:12:02,319
verification

268
00:11:59,760 --> 00:12:03,680
that the network device and the network

269
00:12:02,320 --> 00:12:06,880
service have been

270
00:12:03,680 --> 00:12:12,399
uh correctly added according uh

271
00:12:06,880 --> 00:12:12,399
to the original intent next slide please

272
00:12:13,600 --> 00:12:18,560
so the um the service assurance

273
00:12:18,639 --> 00:12:26,639
is a is a very interesting example

274
00:12:22,839 --> 00:12:30,240
the draft benos draft

275
00:12:26,639 --> 00:12:33,440
for the service assurance architecture

276
00:12:30,240 --> 00:12:34,480
is essentially a closed control loop

277
00:12:33,440 --> 00:12:37,360
system

278
00:12:34,480 --> 00:12:38,560
that modifies the running configuration

279
00:12:37,360 --> 00:12:42,320
and verifies

280
00:12:38,560 --> 00:12:45,760
that the intent and the configurational

281
00:12:42,320 --> 00:12:48,959
uh and the network operational state are

282
00:12:45,760 --> 00:12:52,399
in thing and there

283
00:12:48,959 --> 00:12:55,760
the idea there is that you can verify

284
00:12:52,399 --> 00:13:00,079
also the slas and this requires

285
00:12:55,760 --> 00:13:03,120
a lot of active and

286
00:13:00,079 --> 00:13:06,319
active changing of the network

287
00:13:03,120 --> 00:13:09,920
configuration now

288
00:13:06,320 --> 00:13:14,000
as if this would be done in the older

289
00:13:09,920 --> 00:13:17,360
ways trying to manage

290
00:13:14,000 --> 00:13:22,000
all those config changes is

291
00:13:17,360 --> 00:13:24,800
a complex task some of the operators

292
00:13:22,000 --> 00:13:25,600
have solved that problem to a certain

293
00:13:24,800 --> 00:13:28,719
extent but

294
00:13:25,600 --> 00:13:32,399
it has been done with

295
00:13:28,720 --> 00:13:33,200
large teams and it requires a lot of

296
00:13:32,399 --> 00:13:36,320
energy

297
00:13:33,200 --> 00:13:40,560
to be added we we believe the

298
00:13:36,320 --> 00:13:40,560
draft authors believe that by

299
00:13:40,720 --> 00:13:48,160
creating multi-level uh configuration

300
00:13:44,800 --> 00:13:50,399
and being able to

301
00:13:48,160 --> 00:13:51,360
design the correlation between the

302
00:13:50,399 --> 00:13:54,240
services

303
00:13:51,360 --> 00:13:54,639
and the basic functions of the network

304
00:13:54,240 --> 00:13:57,360
the

305
00:13:54,639 --> 00:13:59,279
service assurance architecture would be

306
00:13:57,360 --> 00:14:03,279
easier to implement

307
00:13:59,279 --> 00:14:05,600
um in uh today's networks uh next slide

308
00:14:03,279 --> 00:14:05,600
please

309
00:14:06,480 --> 00:14:13,920
the other area is uh with the

310
00:14:10,000 --> 00:14:18,639
network uh slice again as

311
00:14:13,920 --> 00:14:20,880
besides in network slicing we have to

312
00:14:18,639 --> 00:14:22,000
we can view it from two perspective we

313
00:14:20,880 --> 00:14:25,519
can view

314
00:14:22,000 --> 00:14:28,800
slices as

315
00:14:25,519 --> 00:14:32,399
address slices but we also

316
00:14:28,800 --> 00:14:36,079
can view it as separate management

317
00:14:32,399 --> 00:14:38,720
slices where the management slice

318
00:14:36,079 --> 00:14:41,040
could be sorry that the the network

319
00:14:38,720 --> 00:14:46,160
slice with management isolation

320
00:14:41,040 --> 00:14:50,560
could be created by using

321
00:14:46,160 --> 00:14:53,600
logical elements on a network device

322
00:14:50,560 --> 00:14:57,518
and the

323
00:14:53,600 --> 00:15:01,920
issue there as well is how make sure

324
00:14:57,519 --> 00:15:05,040
that the in case there is no

325
00:15:01,920 --> 00:15:06,319
phone management separation on the

326
00:15:05,040 --> 00:15:10,399
device

327
00:15:06,320 --> 00:15:13,519
how can be created a separation

328
00:15:10,399 --> 00:15:17,120
of the component each slice

329
00:15:13,519 --> 00:15:20,399
configuration that those will not be

330
00:15:17,120 --> 00:15:25,040
conflicting uh which other

331
00:15:20,399 --> 00:15:25,040
the slicing brings

332
00:15:25,199 --> 00:15:31,680
two dimensions

333
00:15:28,320 --> 00:15:35,199
one of them is the um

334
00:15:31,680 --> 00:15:38,319
now this actually let me finish and then

335
00:15:35,199 --> 00:15:42,000
go to the next slide so

336
00:15:38,320 --> 00:15:45,920
the uh as the slicing configuration

337
00:15:42,000 --> 00:15:49,040
can be hierarchical and recursive

338
00:15:45,920 --> 00:15:52,959
we are here uh creating a

339
00:15:49,040 --> 00:15:54,240
multi-level uh sorry a multi-dimensional

340
00:15:52,959 --> 00:15:56,560
problem can you please go to the next

341
00:15:54,240 --> 00:15:56,560
slide

342
00:15:57,839 --> 00:16:05,120
so the we we can have let's say the

343
00:16:01,680 --> 00:16:05,120
provider network

344
00:16:05,199 --> 00:16:13,120
is across multiple sizes but

345
00:16:08,560 --> 00:16:15,599
they are particle in the vertical sense

346
00:16:13,120 --> 00:16:17,120
and now when we want to add multiple

347
00:16:15,600 --> 00:16:21,440
customer slides

348
00:16:17,120 --> 00:16:25,440
we are adding another horizontal layer

349
00:16:21,440 --> 00:16:28,000
where the customer slice of the custom

350
00:16:25,440 --> 00:16:29,360
let's say this the red slice is in

351
00:16:28,000 --> 00:16:33,040
parallel

352
00:16:29,360 --> 00:16:36,079
with the customer blue but

353
00:16:33,040 --> 00:16:40,079
hierarchically they are going both

354
00:16:36,079 --> 00:16:43,279
on top of the uh provider network

355
00:16:40,079 --> 00:16:45,920
and the question is also now how we can

356
00:16:43,279 --> 00:16:48,320
most efficiently manage those

357
00:16:45,920 --> 00:16:51,199
configurations without multiplexing them

358
00:16:48,320 --> 00:16:54,800
all in one

359
00:16:51,199 --> 00:16:58,479
in in in one file how we can enable

360
00:16:54,800 --> 00:16:59,199
the red slice customer to create their

361
00:16:58,480 --> 00:17:02,480
own

362
00:16:59,199 --> 00:17:05,599
changes that will not be impacting

363
00:17:02,480 --> 00:17:08,079
in any way the blue

364
00:17:05,599 --> 00:17:08,719
customer slice and making sure that

365
00:17:08,079 --> 00:17:12,000
those

366
00:17:08,720 --> 00:17:13,760
are also isolated from the management

367
00:17:12,000 --> 00:17:19,839
perspective not just for

368
00:17:13,760 --> 00:17:22,240
from the addressing next slides please

369
00:17:19,839 --> 00:17:23,359
so one of the proposals for actually one

370
00:17:22,240 --> 00:17:26,959
of the ideas

371
00:17:23,359 --> 00:17:31,439
uh that we have

372
00:17:26,959 --> 00:17:36,000
is something that was discussed

373
00:17:31,440 --> 00:17:40,640
seven eight years ago uh within the

374
00:17:36,000 --> 00:17:44,840
rest conf proposals and creating

375
00:17:40,640 --> 00:17:47,840
multiple panes of glass that

376
00:17:44,840 --> 00:17:50,879
are being where each

377
00:17:47,840 --> 00:17:54,080
configuration increment is viewed as a

378
00:17:50,880 --> 00:17:58,080
pane of glass that is being overlaid uh

379
00:17:54,080 --> 00:18:01,280
on the top of the previous ones

380
00:17:58,080 --> 00:18:05,199
and uh with that we can create uh

381
00:18:01,280 --> 00:18:08,559
multiple levels as well making sure that

382
00:18:05,200 --> 00:18:10,000
the syntax and the semantics as you are

383
00:18:08,559 --> 00:18:13,520
growing are being

384
00:18:10,000 --> 00:18:17,120
uh correctly uh create

385
00:18:13,520 --> 00:18:21,440
are being correctly done

386
00:18:17,120 --> 00:18:24,879
so with this it's also important to

387
00:18:21,440 --> 00:18:27,840
say that each level

388
00:18:24,880 --> 00:18:28,160
can be handled in an independent manner

389
00:18:27,840 --> 00:18:31,360
and

390
00:18:28,160 --> 00:18:31,760
it should it's some of their there's

391
00:18:31,360 --> 00:18:34,559
still

392
00:18:31,760 --> 00:18:36,320
one area of research it should be should

393
00:18:34,559 --> 00:18:39,918
it be an atomic function

394
00:18:36,320 --> 00:18:43,520
or can we change some metrics

395
00:18:39,919 --> 00:18:46,640
on atomic function that will

396
00:18:43,520 --> 00:18:50,879
then have impact across

397
00:18:46,640 --> 00:18:52,640
the whole routing protocol or it can be

398
00:18:50,880 --> 00:18:56,960
that isolated

399
00:18:52,640 --> 00:19:00,160
in a certain

400
00:18:56,960 --> 00:19:03,600
uh it or it can be isolated just for

401
00:19:00,160 --> 00:19:03,600
a certain

402
00:19:04,080 --> 00:19:13,439
instance uh next slide please so

403
00:19:10,880 --> 00:19:15,360
i said we are presenting this to the

404
00:19:13,440 --> 00:19:16,799
here in the routing working group but

405
00:19:15,360 --> 00:19:20,320
also in the nmrg

406
00:19:16,799 --> 00:19:22,799
this is just a start and

407
00:19:20,320 --> 00:19:24,559
we are looking uh to collect feedback

408
00:19:22,799 --> 00:19:28,240
and problems that

409
00:19:24,559 --> 00:19:31,039
the community might see with

410
00:19:28,240 --> 00:19:32,080
with our proposal summit if you have

411
00:19:31,039 --> 00:19:35,280
some additions

412
00:19:32,080 --> 00:19:39,840
as well with the idea that we have

413
00:19:35,280 --> 00:19:39,840
for a potential solution

414
00:19:50,840 --> 00:19:53,840
funny

415
00:19:54,480 --> 00:20:00,559
moving to uh netcomp and openconfig

416
00:19:58,000 --> 00:20:01,200
uh how do you see levels playing out

417
00:20:00,559 --> 00:20:02,960
within

418
00:20:01,200 --> 00:20:06,240
the hierarchical structure that they've

419
00:20:02,960 --> 00:20:09,600
already created

420
00:20:06,240 --> 00:20:12,320
um so

421
00:20:09,600 --> 00:20:12,320
that is

422
00:20:12,720 --> 00:20:16,080
that is one of the problems that we are

423
00:20:14,960 --> 00:20:18,720
looking into it

424
00:20:16,080 --> 00:20:20,000
said we are starting to look into it

425
00:20:18,720 --> 00:20:23,840
because it's a growing problem

426
00:20:20,000 --> 00:20:24,240
but i don't have a good answer for that

427
00:20:23,840 --> 00:20:27,199
now

428
00:20:24,240 --> 00:20:27,840
it's a good one to write down and uh i

429
00:20:27,200 --> 00:20:32,000
know

430
00:20:27,840 --> 00:20:35,039
zhu fang uh did a little bit of

431
00:20:32,000 --> 00:20:37,039
look looking into that but this is the

432
00:20:35,039 --> 00:20:49,840
area that requires much more work

433
00:20:37,039 --> 00:20:49,840
it's it said it's the beginning of it

434
00:20:50,720 --> 00:20:54,240
okay no more questions thanks dean and

435
00:20:52,960 --> 00:20:56,400
indeed it's a

436
00:20:54,240 --> 00:20:58,000
it's a large topic and it's going to

437
00:20:56,400 --> 00:21:00,000
affect potentially what

438
00:20:58,000 --> 00:21:02,080
what we have done last five six years

439
00:21:00,000 --> 00:21:03,440
with data modeling so i'm really looking

440
00:21:02,080 --> 00:21:06,720
forward to

441
00:21:03,440 --> 00:21:09,039
future work here okay thank you

442
00:21:06,720 --> 00:21:09,039
thanks

443
00:21:14,840 --> 00:21:17,840
shashank

444
00:21:20,960 --> 00:21:27,840
okay uh thank you jeff

445
00:21:24,559 --> 00:21:31,440
uh i will introduce our work about

446
00:21:27,840 --> 00:21:32,559
srv6 midpoint protection or presenting

447
00:21:31,440 --> 00:21:35,600
other others

448
00:21:32,559 --> 00:21:35,600
next slide please

449
00:21:42,000 --> 00:21:48,000
okay thank you uh this page shows the

450
00:21:45,520 --> 00:21:50,400
overview of uh midpoint protection

451
00:21:48,000 --> 00:21:52,080
mechanisms actually our proposal is

452
00:21:50,400 --> 00:21:55,280
quite straightforward

453
00:21:52,080 --> 00:21:58,559
if an endpoint indicated by the second

454
00:21:55,280 --> 00:22:00,240
link the year loose sr-60 pass

455
00:21:58,559 --> 00:22:02,559
there are three steps during the

456
00:22:00,240 --> 00:22:05,039
convergence as the slide shows

457
00:22:02,559 --> 00:22:06,240
in the first step the igp is not

458
00:22:05,039 --> 00:22:09,280
converged yet

459
00:22:06,240 --> 00:22:10,799
larger the adjacency of the field

460
00:22:09,280 --> 00:22:13,840
endpoint will perform

461
00:22:10,799 --> 00:22:15,520
as a repair node in this picture is the

462
00:22:13,840 --> 00:22:17,760
node b

463
00:22:15,520 --> 00:22:19,120
and send the packet to the next endpoint

464
00:22:17,760 --> 00:22:21,679
in the segment

465
00:22:19,120 --> 00:22:22,399
uh in the second step igp has already

466
00:22:21,679 --> 00:22:25,679
converged

467
00:22:22,400 --> 00:22:28,320
in some upstream nodes of the field

468
00:22:25,679 --> 00:22:29,840
endpoint maybe b or maybe a in the

469
00:22:28,320 --> 00:22:33,039
picture there is no

470
00:22:29,840 --> 00:22:34,959
a routine to e in the fib of these nodes

471
00:22:33,039 --> 00:22:36,879
so these upstream nodes will be the

472
00:22:34,960 --> 00:22:39,360
repair node and perform the

473
00:22:36,880 --> 00:22:40,480
proxy forwarding action again send the

474
00:22:39,360 --> 00:22:43,600
packet to the next

475
00:22:40,480 --> 00:22:46,320
endpoint in the segment uh

476
00:22:43,600 --> 00:22:48,480
in the third part in the third step srv6

477
00:22:46,320 --> 00:22:52,080
policy has already converged

478
00:22:48,480 --> 00:22:54,159
and the node e has already been removed

479
00:22:52,080 --> 00:22:56,158
in the thumbnail list so the nodes will

480
00:22:54,159 --> 00:22:56,559
forward the packet along the converged

481
00:22:56,159 --> 00:23:00,799
path

482
00:22:56,559 --> 00:23:00,799
directly next slide please

483
00:23:02,799 --> 00:23:06,480
this is a brief history of this document

484
00:23:05,440 --> 00:23:09,600
in version

485
00:23:06,480 --> 00:23:13,600
0 and version one we mainly focus on

486
00:23:09,600 --> 00:23:16,559
the mechanisms definition and

487
00:23:13,600 --> 00:23:18,240
inversion two actually based on the

488
00:23:16,559 --> 00:23:21,600
discussion about security

489
00:23:18,240 --> 00:23:23,440
in the itf community we also end the

490
00:23:21,600 --> 00:23:25,120
section to provide security

491
00:23:23,440 --> 00:23:28,480
consideration section

492
00:23:25,120 --> 00:23:31,918
six uh basically we limit the

493
00:23:28,480 --> 00:23:33,360
the proxy forwarding behavior in uh srv6

494
00:23:31,919 --> 00:23:37,280
domain

495
00:23:33,360 --> 00:23:38,240
and the inversion 3 which is the latest

496
00:23:37,280 --> 00:23:40,240
version

497
00:23:38,240 --> 00:23:41,279
based on the discussion is three minute

498
00:23:40,240 --> 00:23:44,720
list

499
00:23:41,279 --> 00:23:47,600
we discussed the case that some endpoint

500
00:23:44,720 --> 00:23:47,919
that cannot be passed here in a slide we

501
00:23:47,600 --> 00:23:50,320
just

502
00:23:47,919 --> 00:23:52,240
read the example of this maybe the end

503
00:23:50,320 --> 00:23:55,120
point is a fair wall and

504
00:23:52,240 --> 00:23:56,159
it should not be passed at all so in

505
00:23:55,120 --> 00:23:59,520
this case

506
00:23:56,159 --> 00:24:01,279
we will refer to some other work we give

507
00:23:59,520 --> 00:24:03,440
an example of the document

508
00:24:01,279 --> 00:24:05,360
which will provide some mechanisms to

509
00:24:03,440 --> 00:24:08,559
solve this problem

510
00:24:05,360 --> 00:24:08,559
and next slide please

511
00:24:10,640 --> 00:24:13,760
we believe the document is virtual and

512
00:24:13,120 --> 00:24:16,320
the

513
00:24:13,760 --> 00:24:17,120
solution is straightforward so we think

514
00:24:16,320 --> 00:24:20,240
this is

515
00:24:17,120 --> 00:24:21,678
ready for working group adoption uh of

516
00:24:20,240 --> 00:24:24,000
course more

517
00:24:21,679 --> 00:24:25,200
contributions or comments from the

518
00:24:24,000 --> 00:24:33,840
community is also

519
00:24:25,200 --> 00:24:33,840
very welcome thank you

520
00:24:47,919 --> 00:24:51,440
i think you are new baroque

521
00:24:51,919 --> 00:24:58,480
yeah can you hear me now yes

522
00:24:55,200 --> 00:25:00,480
please talk louder as yeah so

523
00:24:58,480 --> 00:25:02,400
i i want to just ask like how do you

524
00:25:00,480 --> 00:25:04,559
differentiate the condition when the

525
00:25:02,400 --> 00:25:08,240
route being not present

526
00:25:04,559 --> 00:25:08,240
versus the link down right

527
00:25:09,600 --> 00:25:15,360
uh sorry can repeat your question i i

528
00:25:12,799 --> 00:25:17,520
so in that service expected when we look

529
00:25:15,360 --> 00:25:19,678
for the destination lookup how do you

530
00:25:17,520 --> 00:25:22,960
differentiate let's say that

531
00:25:19,679 --> 00:25:24,320
the locator route not present being the

532
00:25:22,960 --> 00:25:26,320
link

533
00:25:24,320 --> 00:25:28,158
you know the what you described right

534
00:25:26,320 --> 00:25:30,559
you will jump to the next segment list

535
00:25:28,159 --> 00:25:33,840
and forward based on that

536
00:25:30,559 --> 00:25:35,760
yes that is the the proxy forwarding

537
00:25:33,840 --> 00:25:38,240
defined in this document you mean

538
00:25:35,760 --> 00:25:39,279
how the packet or the node decide

539
00:25:38,240 --> 00:25:42,720
whether to

540
00:25:39,279 --> 00:25:44,720
excuse this behavior yes so there are

541
00:25:42,720 --> 00:25:48,159
two conditions right whether the

542
00:25:44,720 --> 00:25:51,360
the ip prefix or ipv6 prefix not

543
00:25:48,159 --> 00:25:53,360
been advertised itself or

544
00:25:51,360 --> 00:25:56,879
it is just withdrawn because of the link

545
00:25:53,360 --> 00:25:59,918
flip or rather event oh yes

546
00:25:56,880 --> 00:26:02,159
actually this is described in the

547
00:25:59,919 --> 00:26:03,279
the three stage maybe we can go back to

548
00:26:02,159 --> 00:26:06,480
the slide two

549
00:26:03,279 --> 00:26:06,799
i think there are three stage uh when

550
00:26:06,480 --> 00:26:11,279
the

551
00:26:06,799 --> 00:26:14,000
igp is converged and the when the

552
00:26:11,279 --> 00:26:15,279
when the igp has already converged we

553
00:26:14,000 --> 00:26:18,480
cannot find the

554
00:26:15,279 --> 00:26:21,760
routine to e anymore so we just

555
00:26:18,480 --> 00:26:25,120
uh some upstream nodes will

556
00:26:21,760 --> 00:26:28,879
do the proxy forwarding and if

557
00:26:25,120 --> 00:26:32,559
the there is no igp convergence yet

558
00:26:28,880 --> 00:26:34,559
the the node b the adjacency of the

559
00:26:32,559 --> 00:26:37,918
failed node will know that something

560
00:26:34,559 --> 00:26:42,720
wrong has happened so he will do the

561
00:26:37,919 --> 00:26:42,720
proxy forwarding that is two case

562
00:26:43,360 --> 00:26:49,279
so what will happen to the function

563
00:26:45,200 --> 00:26:49,279
which supposed to be executed at the

564
00:26:50,840 --> 00:26:54,879
node

565
00:26:52,400 --> 00:26:57,279
you mean the function should be limited

566
00:26:54,880 --> 00:26:59,840
to some nodes

567
00:26:57,279 --> 00:27:01,760
no the the packet i mean in the ideal

568
00:26:59,840 --> 00:27:02,879
condition packet should go to e right

569
00:27:01,760 --> 00:27:05,279
from b

570
00:27:02,880 --> 00:27:06,000
and the srv6 some function need to be

571
00:27:05,279 --> 00:27:08,240
executed

572
00:27:06,000 --> 00:27:08,240
right

573
00:27:09,039 --> 00:27:12,240
yes because there is something wrong in

574
00:27:11,520 --> 00:27:15,360
e right

575
00:27:12,240 --> 00:27:21,840
you know the e so the node b just do the

576
00:27:15,360 --> 00:27:21,840
proxy forwarding

577
00:27:22,559 --> 00:27:27,520
uh maybe some accounting yeah so maybe

578
00:27:25,440 --> 00:27:31,039
some accounting related functions

579
00:27:27,520 --> 00:27:33,039
supposed to be executed or maybe some

580
00:27:31,039 --> 00:27:34,960
rewrite which is based on that seed

581
00:27:33,039 --> 00:27:38,158
right so

582
00:27:34,960 --> 00:27:40,399
ah actually there is no extra

583
00:27:38,159 --> 00:27:41,760
uh if i understand your question right

584
00:27:40,399 --> 00:27:44,479
you mean whether

585
00:27:41,760 --> 00:27:45,919
something new functions should be ended

586
00:27:44,480 --> 00:27:48,960
in some segment

587
00:27:45,919 --> 00:27:52,399
in the seed for yi

588
00:27:48,960 --> 00:27:56,000
is that your question uh

589
00:27:52,399 --> 00:27:59,840
multiple conditions right uh yes

590
00:27:56,000 --> 00:28:00,480
actually uh the the e note it can be for

591
00:27:59,840 --> 00:28:03,840
example

592
00:28:00,480 --> 00:28:07,440
um just an endpoint maybe n

593
00:28:03,840 --> 00:28:10,720
dot x or maybe it's just can

594
00:28:07,440 --> 00:28:13,919
just uh some other functions but

595
00:28:10,720 --> 00:28:16,480
if the node b do the proxy for wording

596
00:28:13,919 --> 00:28:18,399
it just can do the function about

597
00:28:16,480 --> 00:28:20,000
forwarding the packet directly to the

598
00:28:18,399 --> 00:28:23,279
destination if there is

599
00:28:20,000 --> 00:28:26,880
other functions should be

600
00:28:23,279 --> 00:28:29,760
maybe some other function

601
00:28:26,880 --> 00:28:30,399
should be executed in node e it cannot

602
00:28:29,760 --> 00:28:33,600
be

603
00:28:30,399 --> 00:28:37,678
proxied by node b just

604
00:28:33,600 --> 00:28:41,279
forwarding the packet directly

605
00:28:37,679 --> 00:28:41,760
i mean can can we use ti lfa here at

606
00:28:41,279 --> 00:28:45,840
node b

607
00:28:41,760 --> 00:28:45,840
right then we can avoid this situation

608
00:28:46,799 --> 00:28:51,679
not be leaned down and we will converge

609
00:28:49,600 --> 00:28:54,399
because we already programmed the

610
00:28:51,679 --> 00:28:54,399
breakup path

611
00:28:55,200 --> 00:28:59,120
actually there are some better

612
00:28:59,760 --> 00:29:03,840
there are some cases have been this uh

613
00:29:02,000 --> 00:29:07,120
discussed in the document

614
00:29:03,840 --> 00:29:09,199
uh different types of b uh maybe it is

615
00:29:07,120 --> 00:29:10,080
just a transient node or maybe it is

616
00:29:09,200 --> 00:29:14,480
another

617
00:29:10,080 --> 00:29:18,639
uh endpoint in the second list so we we

618
00:29:14,480 --> 00:29:20,720
in the different classes of node b

619
00:29:18,640 --> 00:29:22,640
we have some different cases and

620
00:29:20,720 --> 00:29:23,520
discussed in different sections in

621
00:29:22,640 --> 00:29:26,960
document

622
00:29:23,520 --> 00:29:30,799
but for different types of node e

623
00:29:26,960 --> 00:29:31,840
for node b if it will do the proxy for

624
00:29:30,799 --> 00:29:35,679
wording it just

625
00:29:31,840 --> 00:29:38,240
can't do something like and

626
00:29:35,679 --> 00:29:39,760
maybe just find the next segment and

627
00:29:38,240 --> 00:29:44,000
forward packman

628
00:29:39,760 --> 00:29:44,000
packet to node d in this case

629
00:29:44,960 --> 00:29:50,720
there are some different scenarios

630
00:29:48,480 --> 00:29:52,159
yeah so the ideal would be to use the

631
00:29:50,720 --> 00:29:55,039
backup path to reach

632
00:29:52,159 --> 00:29:55,039
via some other

633
00:29:55,919 --> 00:29:59,600
yes a backup pass to next segment in the

634
00:29:58,799 --> 00:30:02,879
second list

635
00:29:59,600 --> 00:30:05,918
you know the d actually

636
00:30:02,880 --> 00:30:06,840
skip the failed node e and adjust go to

637
00:30:05,919 --> 00:30:11,760
the node d

638
00:30:06,840 --> 00:30:11,760
directly that is the basic idea here

639
00:30:14,399 --> 00:30:17,600
i think we are you're not converging on

640
00:30:16,480 --> 00:30:21,120
questions and answers

641
00:30:17,600 --> 00:30:23,039
yeah apparently yeah but he described

642
00:30:21,120 --> 00:30:25,120
you could use clfa to get

643
00:30:23,039 --> 00:30:26,480
to not d which is speaking out in this

644
00:30:25,120 --> 00:30:28,719
case right

645
00:30:26,480 --> 00:30:30,320
i i would like you to take it to the

646
00:30:28,720 --> 00:30:36,880
list because we are going around

647
00:30:30,320 --> 00:30:38,559
here and continue with stewart

648
00:30:36,880 --> 00:30:40,720
so i'm afraid my question was very

649
00:30:38,559 --> 00:30:42,799
similar when you set up

650
00:30:40,720 --> 00:30:44,080
segment routing path you set that path

651
00:30:42,799 --> 00:30:45,840
up for a reason

652
00:30:44,080 --> 00:30:47,918
and that reason may be that you want

653
00:30:45,840 --> 00:30:49,120
traffic to go to a particular node for a

654
00:30:47,919 --> 00:30:52,320
particular reason

655
00:30:49,120 --> 00:30:54,719
or you want to protect

656
00:30:52,320 --> 00:30:55,918
other paths from being overloaded by

657
00:30:54,720 --> 00:30:59,039
that traffic

658
00:30:55,919 --> 00:30:59,919
so with all repairs and alternates i get

659
00:30:59,039 --> 00:31:02,080
really worried

660
00:30:59,919 --> 00:31:04,080
that you're going to bust all the

661
00:31:02,080 --> 00:31:08,399
original reasons for creating

662
00:31:04,080 --> 00:31:11,439
the sr path and i would imagine the only

663
00:31:08,399 --> 00:31:13,678
node that could actually

664
00:31:11,440 --> 00:31:15,600
re-route a path is the head end node

665
00:31:13,679 --> 00:31:18,880
which has the whole network

666
00:31:15,600 --> 00:31:22,158
at which it can to choose from

667
00:31:18,880 --> 00:31:26,159
as opposed to a node in the middle which

668
00:31:22,159 --> 00:31:26,159
could be busting someone else's sla

669
00:31:27,760 --> 00:31:32,320
actually i think that is a very good

670
00:31:30,240 --> 00:31:36,159
question i can respond the question

671
00:31:32,320 --> 00:31:36,639
in two aspects the first one is that if

672
00:31:36,159 --> 00:31:39,760
some

673
00:31:36,640 --> 00:31:42,080
node cannot be bypassed

674
00:31:39,760 --> 00:31:42,960
we have some mechanisms that already

675
00:31:42,080 --> 00:31:46,960
been

676
00:31:42,960 --> 00:31:49,840
referred in the document

677
00:31:46,960 --> 00:31:51,039
maybe some node maybe in this node e it

678
00:31:49,840 --> 00:31:54,080
cannot be bypassed

679
00:31:51,039 --> 00:31:57,679
it is um it performs the

680
00:31:54,080 --> 00:32:00,720
firewall to the whole path so it can

681
00:31:57,679 --> 00:32:03,760
for example extend the igp and

682
00:32:00,720 --> 00:32:06,240
to to advertise that i cannot be

683
00:32:03,760 --> 00:32:09,760
bypassed so do not bypass me

684
00:32:06,240 --> 00:32:10,559
that's the first uh first solution for

685
00:32:09,760 --> 00:32:13,760
that

686
00:32:10,559 --> 00:32:14,000
and the second one is the the motivation

687
00:32:13,760 --> 00:32:17,679
for

688
00:32:14,000 --> 00:32:21,120
this solution is just to give up

689
00:32:17,679 --> 00:32:24,799
give a method to to supplement the

690
00:32:21,120 --> 00:32:26,959
tifa mechanisms if the

691
00:32:24,799 --> 00:32:28,000
maybe something wrong happens in the end

692
00:32:26,960 --> 00:32:31,039
point and we

693
00:32:28,000 --> 00:32:32,480
can have some methods to bypass the

694
00:32:31,039 --> 00:32:35,200
failed node and to go

695
00:32:32,480 --> 00:32:36,559
to the next endpoint at least the packet

696
00:32:35,200 --> 00:32:39,120
will not be lost

697
00:32:36,559 --> 00:32:40,158
right and the the flow will not be

698
00:32:39,120 --> 00:32:43,518
interrupted

699
00:32:40,159 --> 00:32:46,880
so that is the motivation here um

700
00:32:43,519 --> 00:32:49,440
okay that is my response so i think the

701
00:32:46,880 --> 00:32:53,600
the mechanism itself is reasonable and

702
00:32:49,440 --> 00:32:53,600
it can solve some problems here

703
00:32:55,519 --> 00:32:58,640
you can be sure you're not going to bust

704
00:32:56,799 --> 00:32:59,200
something else then then fine but it's

705
00:32:58,640 --> 00:33:00,880
it

706
00:32:59,200 --> 00:33:02,000
it it's quite a complicated problem i

707
00:33:00,880 --> 00:33:03,519
would imagine making sure you aren't

708
00:33:02,000 --> 00:33:06,880
going to bust some carefully

709
00:33:03,519 --> 00:33:06,880
uh engineered traffic plan

710
00:33:08,640 --> 00:33:11,840
that's in a crop

711
00:33:14,480 --> 00:33:25,840
yarn mute

712
00:33:28,960 --> 00:33:42,240
death we cannot hear you

713
00:33:38,960 --> 00:33:42,240
okay uh robin

714
00:33:45,039 --> 00:33:50,000
uh hello please be quick we've got one

715
00:33:48,480 --> 00:33:54,080
minute left

716
00:33:50,000 --> 00:33:57,039
i just saw you that regarding the

717
00:33:54,080 --> 00:33:57,918
comments i mean the first one the the

718
00:33:57,039 --> 00:34:01,279
other function

719
00:33:57,919 --> 00:34:02,799
on the knee to be exactly executed

720
00:34:01,279 --> 00:34:04,399
from up on the wheel that's the

721
00:34:02,799 --> 00:34:07,679
different function

722
00:34:04,399 --> 00:34:10,960
adjuster for the uh for the projection

723
00:34:07,679 --> 00:34:11,359
and the other x i mean that's a

724
00:34:10,960 --> 00:34:14,480
different

725
00:34:11,359 --> 00:34:18,159
scenario uh the second one i mean

726
00:34:14,480 --> 00:34:21,359
the the confused the confusion always

727
00:34:18,159 --> 00:34:21,760
happens between the uh between the uh

728
00:34:21,359 --> 00:34:25,119
this

729
00:34:21,760 --> 00:34:27,200
me the protection and the under the trfa

730
00:34:25,119 --> 00:34:28,240
from my point of view i mean that's

731
00:34:27,199 --> 00:34:30,719
because

732
00:34:28,239 --> 00:34:31,678
uh the this is the sr traffic

733
00:34:30,719 --> 00:34:34,000
engineering

734
00:34:31,679 --> 00:34:36,399
uh scenario because that's the segment

735
00:34:34,000 --> 00:34:38,800
list that will go through the e node

736
00:34:36,399 --> 00:34:39,520
so that's when the e-node is a field so

737
00:34:38,800 --> 00:34:42,240
you need

738
00:34:39,520 --> 00:34:42,960
some this is the special process in the

739
00:34:42,239 --> 00:34:44,879
b node

740
00:34:42,960 --> 00:34:47,040
that's the proxy file for wording

741
00:34:44,879 --> 00:34:50,239
because they need to reduce

742
00:34:47,040 --> 00:34:52,560
some of this the sl or and also the uh

743
00:34:50,239 --> 00:34:53,279
move the pointer back this way so that's

744
00:34:52,560 --> 00:34:56,159
the different

745
00:34:53,280 --> 00:34:56,879
scenario uh if possible this can be

746
00:34:56,159 --> 00:35:00,560
explained

747
00:34:56,879 --> 00:35:03,598
in the mean list for details okay

748
00:35:00,560 --> 00:35:05,119
yeah so i reading the draft motivation

749
00:35:03,599 --> 00:35:06,480
is unclear i mean i i can kind of

750
00:35:05,119 --> 00:35:06,800
understand what you're trying to achieve

751
00:35:06,480 --> 00:35:09,040
but

752
00:35:06,800 --> 00:35:10,079
it's not clear really without proper

753
00:35:09,040 --> 00:35:11,680
understanding so

754
00:35:10,079 --> 00:35:13,520
draft definitely not ready for working

755
00:35:11,680 --> 00:35:16,560
group adoption and

756
00:35:13,520 --> 00:35:17,920
please please maybe ask someone else to

757
00:35:16,560 --> 00:35:19,759
read it and tell you

758
00:35:17,920 --> 00:35:20,800
what's unclear because yeah it's very

759
00:35:19,760 --> 00:35:22,079
difficult to understand what you're

760
00:35:20,800 --> 00:35:24,400
trying to achieve

761
00:35:22,079 --> 00:35:25,839
and i have a question about experimental

762
00:35:24,400 --> 00:35:27,599
track on it

763
00:35:25,839 --> 00:35:28,960
i mean you don't define any new

764
00:35:27,599 --> 00:35:33,280
extensions you're

765
00:35:28,960 --> 00:35:35,920
kind of defying possible behavior so

766
00:35:33,280 --> 00:35:39,359
probably informational would be better

767
00:35:35,920 --> 00:35:39,359
trackers than experimental

768
00:35:39,680 --> 00:35:43,200
actually there are some new uh behavior

769
00:35:42,320 --> 00:35:46,480
defined for

770
00:35:43,200 --> 00:35:50,000
repair node for example to do the

771
00:35:46,480 --> 00:35:53,119
prox uh pro proxy forwarding for node b

772
00:35:50,000 --> 00:35:56,320
we define some srv6 functions so

773
00:35:53,119 --> 00:35:59,359
there will be some new

774
00:35:56,320 --> 00:36:01,359
new functions defined in this document

775
00:35:59,359 --> 00:36:03,759
okay maybe okay then i'm looking forward

776
00:36:01,359 --> 00:36:04,319
to reading new updated version of the

777
00:36:03,760 --> 00:36:07,040
draft

778
00:36:04,320 --> 00:36:09,520
and i think we are going bro now please

779
00:36:07,040 --> 00:36:09,520
be quick

780
00:36:10,240 --> 00:36:15,598
yes sorry so it's not about fast free

781
00:36:12,880 --> 00:36:18,400
work it's about terminating a segment

782
00:36:15,599 --> 00:36:20,240
on trying to process the next segment or

783
00:36:18,400 --> 00:36:23,599
whatever you you find

784
00:36:20,240 --> 00:36:24,319
behind the first second so i think it

785
00:36:23,599 --> 00:36:26,160
would uh

786
00:36:24,320 --> 00:36:27,359
deserve some discussion in the spring

787
00:36:26,160 --> 00:36:30,640
working group

788
00:36:27,359 --> 00:36:33,680
as we can see uh which wrote srte

789
00:36:30,640 --> 00:36:38,000
as our policies and also

790
00:36:33,680 --> 00:36:40,960
as we've discussed with jeff

791
00:36:38,000 --> 00:36:42,800
there are multiple documents related to

792
00:36:40,960 --> 00:36:46,960
terminated uh

793
00:36:42,800 --> 00:36:50,400
an srt bus or a tunnel

794
00:36:46,960 --> 00:36:50,400
on the wing coordination

795
00:36:50,480 --> 00:36:54,960
because they are related to the reddit

796
00:36:51,839 --> 00:36:56,560
subject the mentorship is a

797
00:36:54,960 --> 00:36:58,880
so it's not about fast reward you're

798
00:36:56,560 --> 00:37:01,440
terminating a tunnel so what do you do

799
00:36:58,880 --> 00:37:01,920
whether it's a vpn whether it's a srt

800
00:37:01,440 --> 00:37:05,200
asked

801
00:37:01,920 --> 00:37:08,240
mother except service function

802
00:37:05,200 --> 00:37:11,839
it's a bigger subject i think

803
00:37:08,240 --> 00:37:11,839
is there a larger discussion

804
00:37:12,720 --> 00:37:20,240
thanks ron and uh yeah i agree with you

805
00:37:16,320 --> 00:37:23,680
so we are moving on and uh please

806
00:37:20,240 --> 00:37:26,959
post your questions to to the list

807
00:37:23,680 --> 00:37:28,399
it should help uh authors to

808
00:37:26,960 --> 00:37:30,960
to publish new versions that's going to

809
00:37:28,400 --> 00:37:34,000
be better

810
00:37:30,960 --> 00:37:37,200
and more clear thank you

811
00:37:34,000 --> 00:37:41,520
thank you

812
00:37:37,200 --> 00:37:41,520
hello can you hear me yeah

813
00:37:41,920 --> 00:37:45,440
okay i'll talk about any cast egress

814
00:37:44,560 --> 00:37:48,880
protection for

815
00:37:45,440 --> 00:37:51,599
segment routing networks um

816
00:37:48,880 --> 00:37:53,599
next slide please so we have on the

817
00:37:51,599 --> 00:37:54,160
agenda introduction what we are trying

818
00:37:53,599 --> 00:37:56,800
to do

819
00:37:54,160 --> 00:37:57,839
and what is the proposed solution for

820
00:37:56,800 --> 00:38:01,040
different kind of

821
00:37:57,839 --> 00:38:06,160
uh underlay tunnels like srm pls

822
00:38:01,040 --> 00:38:06,160
srm 6 and srv6 a next slide

823
00:38:08,000 --> 00:38:13,040
so what news case so

824
00:38:11,200 --> 00:38:15,680
when you have a network with multi-home

825
00:38:13,040 --> 00:38:18,880
services on the pe node

826
00:38:15,680 --> 00:38:21,200
if when the pe node fails

827
00:38:18,880 --> 00:38:22,320
you can protect the traffic by sending

828
00:38:21,200 --> 00:38:25,359
it to the

829
00:38:22,320 --> 00:38:29,040
multi-home pe node so that the traffic

830
00:38:25,359 --> 00:38:30,400
reaches the ce and traffic is not

831
00:38:29,040 --> 00:38:34,079
dropped

832
00:38:30,400 --> 00:38:36,640
so another alternate for this could be

833
00:38:34,079 --> 00:38:37,599
do this from ingress which is the bgp

834
00:38:36,640 --> 00:38:39,359
pickage

835
00:38:37,599 --> 00:38:40,640
but this is an alternate solution to

836
00:38:39,359 --> 00:38:43,359
that where

837
00:38:40,640 --> 00:38:44,000
you protect the traffic on the egress

838
00:38:43,359 --> 00:38:46,480
itself

839
00:38:44,000 --> 00:38:47,119
so and you can provide faster protection

840
00:38:46,480 --> 00:38:49,040
with the

841
00:38:47,119 --> 00:38:51,520
egress protection mechanisms like you

842
00:38:49,040 --> 00:38:53,440
can do a 50 millisecond conversions in

843
00:38:51,520 --> 00:38:57,200
this case

844
00:38:53,440 --> 00:38:58,560
so um there is an rfc 8679 for egress

845
00:38:57,200 --> 00:39:02,399
protection framework and

846
00:38:58,560 --> 00:39:06,240
the solution that we are proposing is uh

847
00:39:02,400 --> 00:39:09,280
based on this uh uh protection framework

848
00:39:06,240 --> 00:39:10,399
and we we see some uh possibilities of

849
00:39:09,280 --> 00:39:13,520
simplifying this

850
00:39:10,400 --> 00:39:18,079
uh in sr networks and and that's what

851
00:39:13,520 --> 00:39:18,079
we're proposing next slide please

852
00:39:22,560 --> 00:39:25,839
so let's see how this solution works for

853
00:39:24,800 --> 00:39:30,240
sr mpls

854
00:39:25,839 --> 00:39:33,920
networks so ce1 is multi-home to

855
00:39:30,240 --> 00:39:37,279
two pe nodes which is e and p

856
00:39:33,920 --> 00:39:38,480
and there is an ingress node and r1 plr

857
00:39:37,280 --> 00:39:42,880
and r2 are the p

858
00:39:38,480 --> 00:39:45,119
nodes so an anycast loopback address is

859
00:39:42,880 --> 00:39:47,280
assigned to enp

860
00:39:45,119 --> 00:39:49,359
and this anycast ip address corresponds

861
00:39:47,280 --> 00:39:52,800
to the context id

862
00:39:49,359 --> 00:39:53,359
as specified in the egress protection

863
00:39:52,800 --> 00:39:56,000
framework

864
00:39:53,359 --> 00:39:56,799
draft and there is a seed associated

865
00:39:56,000 --> 00:40:00,079
with this

866
00:39:56,800 --> 00:40:02,720
um anycast ip address

867
00:40:00,079 --> 00:40:04,240
for example c10 is associated with this

868
00:40:02,720 --> 00:40:05,919
anycast address here

869
00:40:04,240 --> 00:40:08,560
so once the anycast addresses are

870
00:40:05,920 --> 00:40:10,880
defined and any seats are defined

871
00:40:08,560 --> 00:40:12,799
the protection for that that ip address

872
00:40:10,880 --> 00:40:14,800
as well as that sid will be

873
00:40:12,800 --> 00:40:16,240
uh can be programmed by the protection

874
00:40:14,800 --> 00:40:19,280
mechanisms available

875
00:40:16,240 --> 00:40:22,479
uh in igp for example ti lfa

876
00:40:19,280 --> 00:40:25,680
so if this plr to e this link goes down

877
00:40:22,480 --> 00:40:26,000
there will be a ti lfa path which will

878
00:40:25,680 --> 00:40:28,078
be

879
00:40:26,000 --> 00:40:30,000
which will point to the other p

880
00:40:28,079 --> 00:40:33,280
similarly when the node goes down

881
00:40:30,000 --> 00:40:35,119
egress node goes down uh ti lfa will

882
00:40:33,280 --> 00:40:39,359
also program a backup path

883
00:40:35,119 --> 00:40:42,480
on the plr which points towards the

884
00:40:39,359 --> 00:40:42,480
node p

885
00:40:42,720 --> 00:40:47,919
so so when the

886
00:40:45,839 --> 00:40:49,359
service prefixes are advertised from e

887
00:40:47,920 --> 00:40:52,800
and p

888
00:40:49,359 --> 00:40:54,319
they will use the the context ip address

889
00:40:52,800 --> 00:40:55,680
or the anycast ip address in the

890
00:40:54,319 --> 00:40:57,520
protocol next stop

891
00:40:55,680 --> 00:41:00,598
for example if you see on the right

892
00:40:57,520 --> 00:41:02,880
right hand side there is this

893
00:41:00,599 --> 00:41:06,160
192.1.1.1 prefix

894
00:41:02,880 --> 00:41:09,960
this has a protocol next top of 1.1.1.1

895
00:41:06,160 --> 00:41:12,240
similarly p is also advertising the same

896
00:41:09,960 --> 00:41:14,880
192.1.1.1 and it is

897
00:41:12,240 --> 00:41:16,479
sending the same protocol next top which

898
00:41:14,880 --> 00:41:19,920
is this context

899
00:41:16,480 --> 00:41:22,800
ip address and if you see uh

900
00:41:19,920 --> 00:41:23,440
the the label um associated with the

901
00:41:22,800 --> 00:41:26,560
service

902
00:41:23,440 --> 00:41:29,119
uh the vpn prefix it's the same label

903
00:41:26,560 --> 00:41:29,759
like it's statically configured uh on

904
00:41:29,119 --> 00:41:31,760
enp

905
00:41:29,760 --> 00:41:34,640
the same label for that service prefix

906
00:41:31,760 --> 00:41:37,680
for example lv1 here and

907
00:41:34,640 --> 00:41:39,759
on p also lv1 this is kind of

908
00:41:37,680 --> 00:41:40,720
provisioned when the vpns are

909
00:41:39,760 --> 00:41:44,640
provisioned on e

910
00:41:40,720 --> 00:41:47,680
and p the static label is also

911
00:41:44,640 --> 00:41:52,160
provisioned on those devices

912
00:41:47,680 --> 00:41:52,160
and the static label comes from the srlb

913
00:41:52,720 --> 00:41:56,000
label space which is the sr local label

914
00:41:55,280 --> 00:41:57,520
space

915
00:41:56,000 --> 00:41:59,839
and that label space should be

916
00:41:57,520 --> 00:42:02,480
synchronized between enp for example

917
00:41:59,839 --> 00:42:05,279
let's say we are saying 1000 to 5000 is

918
00:42:02,480 --> 00:42:08,480
the sr local block on e

919
00:42:05,280 --> 00:42:08,480
uh there should be a

920
00:42:08,560 --> 00:42:13,680
an overlapping or the same covering the

921
00:42:11,440 --> 00:42:15,839
same label space available on p

922
00:42:13,680 --> 00:42:18,560
as well so that the same label can be

923
00:42:15,839 --> 00:42:22,078
picked up and uh

924
00:42:18,560 --> 00:42:24,160
assigned to the vpns

925
00:42:22,079 --> 00:42:25,359
and on the ingress if you see the tunnel

926
00:42:24,160 --> 00:42:29,200
is created for this

927
00:42:25,359 --> 00:42:31,119
1.1.1 which is the any card type address

928
00:42:29,200 --> 00:42:33,439
and then the label stack let's say we

929
00:42:31,119 --> 00:42:36,079
have uh one zero two zero one zero

930
00:42:33,440 --> 00:42:37,920
zero and the last label uh will be the

931
00:42:36,079 --> 00:42:39,680
any cast label

932
00:42:37,920 --> 00:42:42,079
which is one zero one zero in this case

933
00:42:39,680 --> 00:42:45,118
we have taken a srgb of

934
00:42:42,079 --> 00:42:46,960
uh one thousand the the suit is 10 and

935
00:42:45,119 --> 00:42:47,839
we have this one zero one zero label as

936
00:42:46,960 --> 00:42:51,040
the last label

937
00:42:47,839 --> 00:42:54,319
in the panel so now um

938
00:42:51,040 --> 00:42:57,279
now um if if the node e goes down

939
00:42:54,319 --> 00:42:57,680
then the plr will forward the traffic to

940
00:42:57,280 --> 00:43:00,720
uh

941
00:42:57,680 --> 00:43:03,359
towards p and then we don't need a

942
00:43:00,720 --> 00:43:04,720
context label or mirror label or any of

943
00:43:03,359 --> 00:43:06,560
those mechanisms because we are

944
00:43:04,720 --> 00:43:09,359
provisioning the same label

945
00:43:06,560 --> 00:43:10,799
on both the enp and and when the when

946
00:43:09,359 --> 00:43:13,119
the

947
00:43:10,800 --> 00:43:15,440
traffic arrives on p it understands the

948
00:43:13,119 --> 00:43:16,640
meaning of this label lv1 and it'll look

949
00:43:15,440 --> 00:43:20,720
up

950
00:43:16,640 --> 00:43:20,720
the vpn table and forward accordingly

951
00:43:21,839 --> 00:43:30,480
next slide please

952
00:43:26,880 --> 00:43:34,800
so this is a case when um

953
00:43:30,480 --> 00:43:37,280
when there is another ce for example ce2

954
00:43:34,800 --> 00:43:40,480
which is multi-homing onto p and another

955
00:43:37,280 --> 00:43:44,000
p node which is a p1

956
00:43:40,480 --> 00:43:47,520
so in this case we will need

957
00:43:44,000 --> 00:43:50,720
another anycast ip address

958
00:43:47,520 --> 00:43:54,560
so that the backup path is the

959
00:43:50,720 --> 00:43:56,720
traffic is correctly forwarded to p1

960
00:43:54,560 --> 00:43:58,799
ce2's traffic is correctly forwarded to

961
00:43:56,720 --> 00:44:01,759
p1 for example we have this

962
00:43:58,800 --> 00:44:03,760
another anycast ip address 2.2.2 and

963
00:44:01,760 --> 00:44:06,000
this anycast ip address is configured on

964
00:44:03,760 --> 00:44:08,000
p and p1

965
00:44:06,000 --> 00:44:09,040
and the protocol next stop is set for

966
00:44:08,000 --> 00:44:12,800
ce2s

967
00:44:09,040 --> 00:44:15,520
uh the the the prefixes that advertised

968
00:44:12,800 --> 00:44:18,079
by ce2 will have a protocol next stop

969
00:44:15,520 --> 00:44:20,880
set to 2.2.2.2

970
00:44:18,079 --> 00:44:20,880
and um

971
00:44:21,760 --> 00:44:25,200
and the other procedures like the uh the

972
00:44:23,920 --> 00:44:28,800
traffic which which is

973
00:44:25,200 --> 00:44:31,520
uh ingress is sending towards uh

974
00:44:28,800 --> 00:44:32,640
ce2 uh we'll have we'll use a tunnel

975
00:44:31,520 --> 00:44:36,000
which has the

976
00:44:32,640 --> 00:44:38,078
bottom most uh label as one zero two

977
00:44:36,000 --> 00:44:39,800
zero which is the any cassette for us

978
00:44:38,079 --> 00:44:43,680
allocated for this one

979
00:44:39,800 --> 00:44:47,040
2.2.2.2 so for every pair of

980
00:44:43,680 --> 00:44:51,200
multi-homed uh every multi-home

981
00:44:47,040 --> 00:44:55,680
pair of pe's there should be one anycast

982
00:44:51,200 --> 00:44:55,680
ip address next slide please

983
00:44:58,960 --> 00:45:05,040
so so that was the procedure for

984
00:45:02,000 --> 00:45:08,800
sr mpls so we'll see how

985
00:45:05,040 --> 00:45:11,759
how this can be done for srv6 networks

986
00:45:08,800 --> 00:45:14,400
so instead of any cast ip address we

987
00:45:11,760 --> 00:45:18,000
will need an anycast locator

988
00:45:14,400 --> 00:45:21,359
for this solution in srv6 and the same

989
00:45:18,000 --> 00:45:24,800
n dot dt forces to be allocated on

990
00:45:21,359 --> 00:45:28,000
e and t so

991
00:45:24,800 --> 00:45:28,000
so imagine there is a

992
00:45:28,480 --> 00:45:32,720
tunnel from ingress there's a source

993
00:45:31,119 --> 00:45:34,079
address which corresponds to the

994
00:45:32,720 --> 00:45:35,919
ingress node and then there's the

995
00:45:34,079 --> 00:45:37,920
destination address

996
00:45:35,920 --> 00:45:40,319
which directly corresponds to this n dot

997
00:45:37,920 --> 00:45:43,839
dt4 set one column colon 16

998
00:45:40,319 --> 00:45:46,880
128. so um

999
00:45:43,839 --> 00:45:50,160
so because this one colon colon is is a

1000
00:45:46,880 --> 00:45:52,960
locator um advertised by both e and p

1001
00:45:50,160 --> 00:45:55,118
so there would be uh tlfa backup parts

1002
00:45:52,960 --> 00:45:58,079
properly programmed on the plr

1003
00:45:55,119 --> 00:45:59,359
which um and with with tlfa node

1004
00:45:58,079 --> 00:46:02,480
protection enabled

1005
00:45:59,359 --> 00:46:04,960
if this if there's a failure on e

1006
00:46:02,480 --> 00:46:06,240
the ti lfa backup path will take the

1007
00:46:04,960 --> 00:46:08,720
traffic to p

1008
00:46:06,240 --> 00:46:09,279
and then because one column colon 16 is

1009
00:46:08,720 --> 00:46:12,399
the same

1010
00:46:09,280 --> 00:46:14,319
dt4 set that is allocated on p

1011
00:46:12,400 --> 00:46:15,520
it will do the lookup and forward the

1012
00:46:14,319 --> 00:46:20,960
traffic

1013
00:46:15,520 --> 00:46:20,960
appropriately next slide please

1014
00:46:26,880 --> 00:46:32,079
so um same solution so the so the

1015
00:46:30,000 --> 00:46:35,680
principles of allocating

1016
00:46:32,079 --> 00:46:39,280
uh uh static um

1017
00:46:35,680 --> 00:46:42,000
the anycast address for the

1018
00:46:39,280 --> 00:46:44,319
pe nodes and the static labels for the

1019
00:46:42,000 --> 00:46:48,319
vpns that remains same for srm6

1020
00:46:44,319 --> 00:46:50,319
as well so the solution is very similar

1021
00:46:48,319 --> 00:46:53,119
to srm pls

1022
00:46:50,319 --> 00:46:53,119
the difference is

1023
00:46:53,440 --> 00:46:58,319
the forwarding uses ipv6 data plane

1024
00:46:56,640 --> 00:47:01,359
instead of mpls data

1025
00:46:58,319 --> 00:47:03,599
so if you see on the the

1026
00:47:01,359 --> 00:47:05,759
the tpf tunnel payload forwarding

1027
00:47:03,599 --> 00:47:09,200
information that

1028
00:47:05,760 --> 00:47:13,200
lv1 is allocated same on e and

1029
00:47:09,200 --> 00:47:17,040
p for the for that vpn

1030
00:47:13,200 --> 00:47:20,430
and similarly on the ingress the tpf

1031
00:47:17,040 --> 00:47:21,520
information will be sent

1032
00:47:20,430 --> 00:47:24,078
[Music]

1033
00:47:21,520 --> 00:47:24,960
from the ingress in the destination

1034
00:47:24,079 --> 00:47:27,119
options and

1035
00:47:24,960 --> 00:47:29,839
this uh the destination address that

1036
00:47:27,119 --> 00:47:32,079
ingress will use for sending the traffic

1037
00:47:29,839 --> 00:47:33,040
uh is one one column one which is an

1038
00:47:32,079 --> 00:47:36,160
anycast

1039
00:47:33,040 --> 00:47:37,920
loopback address on enp the difference

1040
00:47:36,160 --> 00:47:38,720
here is it's just a loopback address

1041
00:47:37,920 --> 00:47:42,240
there's no

1042
00:47:38,720 --> 00:47:46,160
uh need to allocate a slash 64 or slash

1043
00:47:42,240 --> 00:47:47,279
120 or whatever just just a common loop

1044
00:47:46,160 --> 00:47:50,399
back between

1045
00:47:47,280 --> 00:47:53,200
a pair of multi-home nodes

1046
00:47:50,400 --> 00:47:55,520
is good enough for srm6 next slide

1047
00:47:53,200 --> 00:47:55,520
please

1048
00:47:58,240 --> 00:48:02,799
yeah so we request the working group to

1049
00:48:01,680 --> 00:48:08,879
review and

1050
00:48:02,800 --> 00:48:08,880
provide inputs on this document

1051
00:48:18,839 --> 00:48:21,839
bruno

1052
00:48:20,400 --> 00:48:23,680
bruno you are in vicky are you going to

1053
00:48:21,839 --> 00:48:25,279
talk no no sorry

1054
00:48:23,680 --> 00:48:28,799
i thought you would uh remove me from

1055
00:48:25,280 --> 00:48:28,800
zucchini okay done

1056
00:48:32,839 --> 00:48:35,839
grab

1057
00:48:36,240 --> 00:48:39,118
greg cannot hear you

1058
00:48:46,960 --> 00:48:49,839
stefan go ahead

1059
00:48:58,559 --> 00:49:05,119
i cannot hear you either because you

1060
00:49:01,920 --> 00:49:05,119
need to unmute yourself

1061
00:49:13,359 --> 00:49:19,520
is it working yeah it is working now ah

1062
00:49:16,480 --> 00:49:21,440
okay cool hey a quick question

1063
00:49:19,520 --> 00:49:24,000
could you elaborate more on how you are

1064
00:49:21,440 --> 00:49:25,119
allocating the label the service labels

1065
00:49:24,000 --> 00:49:29,440
from the

1066
00:49:25,119 --> 00:49:33,680
srlb is it uh are you expecting to do

1067
00:49:29,440 --> 00:49:36,880
only pervert label allocation

1068
00:49:33,680 --> 00:49:39,359
in this particular case uh yes different

1069
00:49:36,880 --> 00:49:41,680
that's right it's support

1070
00:49:39,359 --> 00:49:44,400
okay so you cannot make it working with

1071
00:49:41,680 --> 00:49:46,319
a prefix label allocation

1072
00:49:44,400 --> 00:49:48,800
yeah that that will just be just too

1073
00:49:46,319 --> 00:49:50,079
much uh too much operational overhead i

1074
00:49:48,800 --> 00:49:52,640
think

1075
00:49:50,079 --> 00:49:53,680
okay but this is something that you may

1076
00:49:52,640 --> 00:49:56,640
have to clarify

1077
00:49:53,680 --> 00:49:58,399
uh in the draft because yeah this part

1078
00:49:56,640 --> 00:50:01,520
is not well detailed

1079
00:49:58,400 --> 00:50:13,200
yeah sure i will do

1080
00:50:01,520 --> 00:50:17,680
thanks peter

1081
00:50:13,200 --> 00:50:20,000
peter and look yourself trying

1082
00:50:17,680 --> 00:50:21,440
yeah yeah i can hear you now all right

1083
00:50:20,000 --> 00:50:24,720
you try it well

1084
00:50:21,440 --> 00:50:26,800
okay hi so i have two comments here so

1085
00:50:24,720 --> 00:50:29,040
first was similar to what stefan was

1086
00:50:26,800 --> 00:50:31,040
asking is basically this this i can see

1087
00:50:29,040 --> 00:50:33,279
it is working in a paragraph a location

1088
00:50:31,040 --> 00:50:34,960
if we go to a perry next hop

1089
00:50:33,280 --> 00:50:37,040
it becomes way more complex to

1090
00:50:34,960 --> 00:50:38,880
synchronize the the seats or the labels

1091
00:50:37,040 --> 00:50:40,000
between p's especially if you have

1092
00:50:38,880 --> 00:50:43,280
multiple pes like

1093
00:50:40,000 --> 00:50:46,559
not just two but even more

1094
00:50:43,280 --> 00:50:48,880
and the second question is well

1095
00:50:46,559 --> 00:50:50,880
this looks like more like a deployment

1096
00:50:48,880 --> 00:50:53,359
right it's not really

1097
00:50:50,880 --> 00:50:55,040
standardizing any protocol extension on

1098
00:50:53,359 --> 00:50:58,078
racing i i don't know

1099
00:50:55,040 --> 00:51:00,960
i always ask people whether these

1100
00:50:58,079 --> 00:51:03,520
things should really be published as a

1101
00:51:00,960 --> 00:51:06,640
as a draft

1102
00:51:03,520 --> 00:51:06,640
so that's my comment

1103
00:51:07,920 --> 00:51:12,880
yeah because um there are uh there are

1104
00:51:11,040 --> 00:51:17,440
other solutions floating around

1105
00:51:12,880 --> 00:51:19,920
i i um i think that you know um

1106
00:51:17,440 --> 00:51:23,280
that this is uh deploying this way is

1107
00:51:19,920 --> 00:51:23,280
one of the possibility is

1108
00:51:23,680 --> 00:51:26,319
as a kind of

1109
00:51:26,800 --> 00:51:34,240
good informational document and

1110
00:51:30,800 --> 00:51:37,839
we got some feedback from the

1111
00:51:34,240 --> 00:51:41,598
on the draft that you know allocating um

1112
00:51:37,839 --> 00:51:43,680
the labels uh statically uh

1113
00:51:41,599 --> 00:51:45,119
uh is a little complicated so we are

1114
00:51:43,680 --> 00:51:49,118
also working

1115
00:51:45,119 --> 00:51:52,240
uh to get uh to see how we can

1116
00:51:49,119 --> 00:51:54,480
automate that and that would most likely

1117
00:51:52,240 --> 00:51:56,640
require protocol extensions

1118
00:51:54,480 --> 00:51:58,000
absolutely yeah that's definitely

1119
00:51:56,640 --> 00:52:00,558
something to

1120
00:51:58,000 --> 00:52:01,520
to look at because a as i said it can

1121
00:52:00,559 --> 00:52:03,440
become

1122
00:52:01,520 --> 00:52:05,599
it sounds easy if you have two p's and

1123
00:52:03,440 --> 00:52:08,319
you use the same labeler as it

1124
00:52:05,599 --> 00:52:09,119
but if you do an allocation other than

1125
00:52:08,319 --> 00:52:12,240
perigorf

1126
00:52:09,119 --> 00:52:16,000
it can really get more complicated so

1127
00:52:12,240 --> 00:52:18,240
sure thanks

1128
00:52:16,000 --> 00:52:20,480
greg unless you are really quick we will

1129
00:52:18,240 --> 00:52:23,598
move on you've got a few seconds

1130
00:52:20,480 --> 00:52:25,920
so be quick you go to the previous slide

1131
00:52:23,599 --> 00:52:25,920
please

1132
00:52:28,880 --> 00:52:35,520
yes thank you um so the plr

1133
00:52:32,319 --> 00:52:39,279
uh uses uh ti lfa uh

1134
00:52:35,520 --> 00:52:42,880
based on uh

1135
00:52:39,280 --> 00:52:46,079
availability of r2

1136
00:52:42,880 --> 00:52:48,720
so uh i would imagine that you're using

1137
00:52:46,079 --> 00:52:49,839
some uh network failure detection

1138
00:52:48,720 --> 00:52:52,558
mechanism

1139
00:52:49,839 --> 00:52:53,839
uh have you considered uh the scenario

1140
00:52:52,559 --> 00:52:56,880
of double failure

1141
00:52:53,839 --> 00:52:57,920
when uh almost simultaneously with the

1142
00:52:56,880 --> 00:53:01,040
failure of

1143
00:52:57,920 --> 00:53:05,599
plr e link the link

1144
00:53:01,040 --> 00:53:07,200
r2 to p fails and when por starts

1145
00:53:05,599 --> 00:53:12,160
sending tlfa

1146
00:53:07,200 --> 00:53:12,160
tunneled payload what happens on

1147
00:53:12,839 --> 00:53:17,599
r2

1148
00:53:14,559 --> 00:53:18,960
yeah so the multiple failures um you

1149
00:53:17,599 --> 00:53:22,480
know there's always

1150
00:53:18,960 --> 00:53:25,920
um possibility that traffic can

1151
00:53:22,480 --> 00:53:28,000
ah can get dropped or

1152
00:53:25,920 --> 00:53:30,000
can undergo micro loops when there are

1153
00:53:28,000 --> 00:53:33,520
multiple failures

1154
00:53:30,000 --> 00:53:34,960
um that that's applicable to tlfa in

1155
00:53:33,520 --> 00:53:36,640
general as well

1156
00:53:34,960 --> 00:53:39,200
and nothing special about egress

1157
00:53:36,640 --> 00:53:39,200
protection

1158
00:53:39,440 --> 00:53:44,559
nothing very different for egress

1159
00:53:41,200 --> 00:53:44,558
protection yeah

1160
00:53:44,960 --> 00:53:50,000
i think none of ipfr technologies

1161
00:53:47,920 --> 00:53:52,720
provides protection against double or

1162
00:53:50,000 --> 00:53:54,640
triple failures it's a formal statement

1163
00:53:52,720 --> 00:53:56,078
we never claimed anything else but

1164
00:53:54,640 --> 00:53:59,359
please do send

1165
00:53:56,079 --> 00:54:01,680
your question to the list thank you sure

1166
00:53:59,359 --> 00:54:01,680
thank you

1167
00:54:02,640 --> 00:54:04,879
uh

1168
00:54:09,040 --> 00:54:12,480
and it's similar as previous i'm

1169
00:54:10,800 --> 00:54:13,520
concerned about the deployment

1170
00:54:12,480 --> 00:54:17,599
complexity

1171
00:54:13,520 --> 00:54:21,359
because it requires static assignment of

1172
00:54:17,599 --> 00:54:25,119
a label and the second one is srm

1173
00:54:21,359 --> 00:54:29,040
srm6 is still under discussion so maybe

1174
00:54:25,119 --> 00:54:30,160
not proper to have a reference here

1175
00:54:29,040 --> 00:54:32,240
i would really like us to finish

1176
00:54:30,160 --> 00:54:35,520
discussion on this draft

1177
00:54:32,240 --> 00:54:35,520
but the points will take

1178
00:54:36,880 --> 00:54:40,559
thanks next presenter

1179
00:54:50,839 --> 00:54:53,839
usually

1180
00:55:03,520 --> 00:55:09,520
hello uh thank you uh this is

1181
00:55:07,440 --> 00:55:12,319
israel speaking i'm going to present

1182
00:55:09,520 --> 00:55:15,759
this um die cast in cfn

1183
00:55:12,319 --> 00:55:17,839
and dyncan stands for dynamic anycast

1184
00:55:15,760 --> 00:55:20,079
uh so this is the first time we present

1185
00:55:17,839 --> 00:55:23,359
this work in rtgwg we kind of

1186
00:55:20,079 --> 00:55:26,400
think uh this is highly relevant to the

1187
00:55:23,359 --> 00:55:29,119
routing protocols so i'd like

1188
00:55:26,400 --> 00:55:30,480
to to give a brief introduction on what

1189
00:55:29,119 --> 00:55:33,920
this work about

1190
00:55:30,480 --> 00:55:35,440
and we have a an activity which is a

1191
00:55:33,920 --> 00:55:39,440
site meeting

1192
00:55:35,440 --> 00:55:42,559
at wednesday so i'm going to uh

1193
00:55:39,440 --> 00:55:45,200
also bring this to your attention next

1194
00:55:42,559 --> 00:55:45,200
page please

1195
00:55:46,720 --> 00:55:50,399
so here is about a little bit about the

1196
00:55:49,280 --> 00:55:53,200
background

1197
00:55:50,400 --> 00:55:54,480
so this is a typical edge computing

1198
00:55:53,200 --> 00:55:57,598
scenario

1199
00:55:54,480 --> 00:55:58,400
so with the increasing deployment from

1200
00:55:57,599 --> 00:56:00,799
the service

1201
00:55:58,400 --> 00:56:02,160
provider for the edge computing for the

1202
00:56:00,799 --> 00:56:04,799
scenarios like the

1203
00:56:02,160 --> 00:56:06,879
augmented reality or virtual reality or

1204
00:56:04,799 --> 00:56:09,200
even the connected cars

1205
00:56:06,880 --> 00:56:10,079
they have we find out they're more and

1206
00:56:09,200 --> 00:56:11,839
more

1207
00:56:10,079 --> 00:56:13,440
there there could be a huge number of

1208
00:56:11,839 --> 00:56:16,480
edgers so

1209
00:56:13,440 --> 00:56:17,119
uh it's well known that uh the reason

1210
00:56:16,480 --> 00:56:19,359
why the

1211
00:56:17,119 --> 00:56:21,520
why we wanted to adopt edge computing is

1212
00:56:19,359 --> 00:56:24,160
compared to the cloud-based computing

1213
00:56:21,520 --> 00:56:26,079
the edge is normally more closer to the

1214
00:56:24,160 --> 00:56:28,960
uh to the clients so it's shorter and

1215
00:56:26,079 --> 00:56:30,559
faster so compare with the pure whole

1216
00:56:28,960 --> 00:56:33,920
side computing

1217
00:56:30,559 --> 00:56:37,119
we can somehow save the make the

1218
00:56:33,920 --> 00:56:39,200
battery savings and also there

1219
00:56:37,119 --> 00:56:40,559
sometimes there are data set size

1220
00:56:39,200 --> 00:56:43,598
concern

1221
00:56:40,559 --> 00:56:46,640
at the host at the end host so

1222
00:56:43,599 --> 00:56:50,240
these are a wider edge computing

1223
00:56:46,640 --> 00:56:53,040
i draw more and more attention so for

1224
00:56:50,240 --> 00:56:54,479
uh for this edge computer we we figure

1225
00:56:53,040 --> 00:56:57,440
there are two features

1226
00:56:54,480 --> 00:56:59,040
emerging the first one is there there

1227
00:56:57,440 --> 00:57:01,359
there are a large number

1228
00:56:59,040 --> 00:57:02,720
of edger sites in a city for example

1229
00:57:01,359 --> 00:57:06,000
there could be a couple of

1230
00:57:02,720 --> 00:57:09,439
edges for each district of a single city

1231
00:57:06,000 --> 00:57:11,760
the other one is for each of the edge

1232
00:57:09,440 --> 00:57:14,319
it could be a very small one so that

1233
00:57:11,760 --> 00:57:17,359
means it only has very limited

1234
00:57:14,319 --> 00:57:20,160
and varying computing resources

1235
00:57:17,359 --> 00:57:20,160
next slide please

1236
00:57:21,839 --> 00:57:27,920
so what's the problem uh here we've

1237
00:57:24,960 --> 00:57:28,799
we we're trying to uh depict a typical

1238
00:57:27,920 --> 00:57:30,559
problem

1239
00:57:28,799 --> 00:57:31,839
so we are trying to focus on the

1240
00:57:30,559 --> 00:57:34,400
computing

1241
00:57:31,839 --> 00:57:36,160
uh computing services so there are a

1242
00:57:34,400 --> 00:57:37,680
bunch of computing services with

1243
00:57:36,160 --> 00:57:38,879
different level of computational

1244
00:57:37,680 --> 00:57:41,919
complexity

1245
00:57:38,880 --> 00:57:43,280
uh give a very specific example for like

1246
00:57:41,920 --> 00:57:46,559
for the

1247
00:57:43,280 --> 00:57:55,839
social networking when you some of the

1248
00:57:46,559 --> 00:57:55,839
computing uh

1249
00:58:00,080 --> 00:58:06,450
[Laughter]

1250
00:58:07,119 --> 00:58:10,960
i think audio just died or just me

1251
00:58:11,440 --> 00:58:14,960
please can you hear me yeah i lost i

1252
00:58:13,040 --> 00:58:23,839
lost the audio as well

1253
00:58:14,960 --> 00:58:23,839
from zhao

1254
00:58:26,319 --> 00:58:37,839
she came back for two seconds

1255
00:58:38,400 --> 00:58:42,559
so let's give it another minute if she

1256
00:58:40,240 --> 00:58:46,399
doesn't come back we'll try to move

1257
00:58:42,559 --> 00:59:05,839
to the next presenter and restart

1258
00:58:46,400 --> 00:59:05,839
later yeah it sounds like a good plan

1259
00:59:13,760 --> 00:59:19,119
daniel please get ready i think we're

1260
00:59:16,559 --> 00:59:22,079
going to move in few seconds

1261
00:59:19,119 --> 00:59:22,079
it doesn't seem to work

1262
00:59:29,920 --> 00:59:47,839
okay daniel daniel honk

1263
01:00:07,839 --> 01:00:11,920
so he shall might still be able to hear

1264
01:00:10,720 --> 01:00:15,439
us though

1265
01:00:11,920 --> 01:00:19,200
so at least perhaps we can

1266
01:00:15,440 --> 01:00:22,400
tell her that we can't hear her

1267
01:00:19,200 --> 01:00:22,960
yijao we we're gonna move ahead with a

1268
01:00:22,400 --> 01:00:28,160
separate

1269
01:00:22,960 --> 01:00:31,359
okay here we go

1270
01:00:28,160 --> 01:00:31,359
is daniel here

1271
01:00:32,559 --> 01:00:35,920
uh he's saying on the chat that audi is

1272
01:00:35,200 --> 01:00:38,319
not working

1273
01:00:35,920 --> 01:00:38,319
either

1274
01:00:40,559 --> 01:00:43,839
let's see

1275
01:00:48,550 --> 01:00:54,160
[Music]

1276
01:00:50,640 --> 01:00:57,440
it is working now though hello hi

1277
01:00:54,160 --> 01:01:00,720
hey yeah i think we we can hear you now

1278
01:00:57,440 --> 01:01:03,920
okay okay so

1279
01:01:00,720 --> 01:01:06,160
so we'll go back to your presentation uh

1280
01:01:03,920 --> 01:01:07,680
and hopefully your audio will continue

1281
01:01:06,160 --> 01:01:11,598
to work

1282
01:01:07,680 --> 01:01:14,720
sorry about this no no no problem

1283
01:01:11,599 --> 01:01:14,720
can't uh control

1284
01:01:16,400 --> 01:01:23,599
let's see okay so which slide uh

1285
01:01:20,799 --> 01:01:26,240
well so your audi your audio dropped out

1286
01:01:23,599 --> 01:01:30,000
on this slide

1287
01:01:26,240 --> 01:01:32,799
i believe okay so uh okay so

1288
01:01:30,000 --> 01:01:33,839
i i didn't i didn't know exactly where

1289
01:01:32,799 --> 01:01:36,000
the audio stops but

1290
01:01:33,839 --> 01:01:38,160
anyway so the problem is how how shall

1291
01:01:36,000 --> 01:01:38,960
we optimally route the service demands

1292
01:01:38,160 --> 01:01:41,040
based on

1293
01:01:38,960 --> 01:01:42,160
both the computing resource metrics and

1294
01:01:41,040 --> 01:01:44,640
also

1295
01:01:42,160 --> 01:01:45,920
taking the network conditions and status

1296
01:01:44,640 --> 01:01:48,000
into account

1297
01:01:45,920 --> 01:01:49,040
so which one is the best one that is the

1298
01:01:48,000 --> 01:01:52,319
basic

1299
01:01:49,040 --> 01:01:54,960
problem we're trying to answer so next

1300
01:01:52,319 --> 01:01:54,960
slide please

1301
01:01:56,799 --> 01:02:00,640
so there are some uh some current

1302
01:01:59,440 --> 01:02:03,760
practices

1303
01:02:00,640 --> 01:02:05,359
uh about actually quite a few of them so

1304
01:02:03,760 --> 01:02:07,200
the left hand the left hand side the

1305
01:02:05,359 --> 01:02:10,480
picture trying to

1306
01:02:07,200 --> 01:02:12,720
depict uh the current practice in

1307
01:02:10,480 --> 01:02:13,520
an abstract way normally the client

1308
01:02:12,720 --> 01:02:16,879
would ask

1309
01:02:13,520 --> 01:02:20,240
for some resolver probably the jslb

1310
01:02:16,880 --> 01:02:22,400
and ask for what's the url then the

1311
01:02:20,240 --> 01:02:23,919
a resolver would check for example for

1312
01:02:22,400 --> 01:02:24,880
different cities like beijing and

1313
01:02:23,920 --> 01:02:28,240
shanghai and

1314
01:02:24,880 --> 01:02:29,680
then return uh an ip address that client

1315
01:02:28,240 --> 01:02:32,640
will use that ib drives

1316
01:02:29,680 --> 01:02:34,319
ip address to connect to a particular

1317
01:02:32,640 --> 01:02:36,400
data center or slb

1318
01:02:34,319 --> 01:02:37,839
then optionally it could talk to

1319
01:02:36,400 --> 01:02:41,440
different edges

1320
01:02:37,839 --> 01:02:42,319
and optionally uh it can ask the client

1321
01:02:41,440 --> 01:02:45,760
to read our

1322
01:02:42,319 --> 01:02:48,880
um to try to redirect to some of the a b

1323
01:02:45,760 --> 01:02:51,920
one of the abcd's edges

1324
01:02:48,880 --> 01:02:52,960
so there there are some some issues we

1325
01:02:51,920 --> 01:02:56,000
find out

1326
01:02:52,960 --> 01:02:58,160
i list some of there um for the

1327
01:02:56,000 --> 01:02:59,280
because the time constraints i i don't

1328
01:02:58,160 --> 01:03:02,558
think i will go through

1329
01:02:59,280 --> 01:03:04,960
them all one by one but

1330
01:03:02,559 --> 01:03:06,480
in summary and to consider efficiency

1331
01:03:04,960 --> 01:03:08,480
and the latency

1332
01:03:06,480 --> 01:03:09,680
we figure we found out they'll probably

1333
01:03:08,480 --> 01:03:12,319
have better

1334
01:03:09,680 --> 01:03:17,359
practice at the network layer so next

1335
01:03:12,319 --> 01:03:20,240
slide please

1336
01:03:17,359 --> 01:03:22,480
so here is uh this slide tries to

1337
01:03:20,240 --> 01:03:23,759
introduce the concept of the cfn

1338
01:03:22,480 --> 01:03:26,960
downcast

1339
01:03:23,760 --> 01:03:29,760
basically the the client wants to use a

1340
01:03:26,960 --> 01:03:32,240
green service here if you look at

1341
01:03:29,760 --> 01:03:33,680
there are two sites site one and site

1342
01:03:32,240 --> 01:03:36,879
two if you look at this

1343
01:03:33,680 --> 01:03:39,359
very small green circles there

1344
01:03:36,880 --> 01:03:41,200
uh basically they are indicating uh two

1345
01:03:39,359 --> 01:03:44,558
service instances

1346
01:03:41,200 --> 01:03:46,640
uh instantiated at site one and site two

1347
01:03:44,559 --> 01:03:49,200
so the client can actually can

1348
01:03:46,640 --> 01:03:50,000
uh send a service request to each to any

1349
01:03:49,200 --> 01:03:52,399
of them

1350
01:03:50,000 --> 01:03:53,200
so the client will use in any cast

1351
01:03:52,400 --> 01:03:55,760
address to

1352
01:03:53,200 --> 01:03:56,480
access this screen service then it goes

1353
01:03:55,760 --> 01:04:00,079
to

1354
01:03:56,480 --> 01:04:01,359
uh cfn note 1 then the cfn01 will

1355
01:04:00,079 --> 01:04:05,039
determine how to run

1356
01:04:01,359 --> 01:04:06,880
this packet well it will jointly

1357
01:04:05,039 --> 01:04:09,520
consider the computing

1358
01:04:06,880 --> 01:04:10,400
in the network and network load and

1359
01:04:09,520 --> 01:04:13,759
route this

1360
01:04:10,400 --> 01:04:16,319
packet to uh msc site two in this

1361
01:04:13,760 --> 01:04:18,480
in this picture so this would

1362
01:04:16,319 --> 01:04:20,480
transparent to the client so what kind

1363
01:04:18,480 --> 01:04:21,520
knows is only the anycast address to

1364
01:04:20,480 --> 01:04:23,839
represent the

1365
01:04:21,520 --> 01:04:26,000
service itself but it doesn't know what

1366
01:04:23,839 --> 01:04:29,680
exactly the service instance

1367
01:04:26,000 --> 01:04:30,400
this packet goes to so the green lines

1368
01:04:29,680 --> 01:04:33,520
here

1369
01:04:30,400 --> 01:04:34,480
shows where the the data plane the data

1370
01:04:33,520 --> 01:04:36,799
flow goes

1371
01:04:34,480 --> 01:04:38,079
and there are some control plane

1372
01:04:36,799 --> 01:04:41,280
requirements as well

1373
01:04:38,079 --> 01:04:43,280
so for the brown arrows there

1374
01:04:41,280 --> 01:04:45,680
there should be some service computing

1375
01:04:43,280 --> 01:04:49,440
service information notification

1376
01:04:45,680 --> 01:04:52,558
from the server side to the cfa nodes

1377
01:04:49,440 --> 01:04:55,760
and also the purple one indicates

1378
01:04:52,559 --> 01:04:57,359
that among the cfn nodes there should be

1379
01:04:55,760 --> 01:04:59,839
some information sharing

1380
01:04:57,359 --> 01:05:01,440
both for the computing resource

1381
01:04:59,839 --> 01:05:02,319
information and possibly for the

1382
01:05:01,440 --> 01:05:08,640
networking

1383
01:05:02,319 --> 01:05:12,400
status information next slide

1384
01:05:08,640 --> 01:05:15,598
uh this um this is to get a

1385
01:05:12,400 --> 01:05:16,720
closer look at uh the dining undercf and

1386
01:05:15,599 --> 01:05:18,960
dinecast

1387
01:05:16,720 --> 01:05:19,759
uh first we want to clarify what's the

1388
01:05:18,960 --> 01:05:22,799
service and

1389
01:05:19,760 --> 01:05:25,119
service instance here so

1390
01:05:22,799 --> 01:05:26,319
here the service we are talk we are

1391
01:05:25,119 --> 01:05:28,799
trying to target on

1392
01:05:26,319 --> 01:05:29,920
is are the only computing related

1393
01:05:28,799 --> 01:05:33,359
services

1394
01:05:29,920 --> 01:05:33,839
so if you like look at this small box at

1395
01:05:33,359 --> 01:05:36,799
the

1396
01:05:33,839 --> 01:05:38,000
left-hand side we have three services

1397
01:05:36,799 --> 01:05:40,960
green

1398
01:05:38,000 --> 01:05:43,280
sorry blue red and green so each of the

1399
01:05:40,960 --> 01:05:45,119
services offer one specific function no

1400
01:05:43,280 --> 01:05:50,160
matter where it is deployed

1401
01:05:45,119 --> 01:05:50,160
so indeed if you look at right hand side

1402
01:05:50,240 --> 01:05:54,319
there could be multiple service

1403
01:05:51,760 --> 01:05:57,520
instances uh service instances

1404
01:05:54,319 --> 01:05:58,319
instantiated at different places so for

1405
01:05:57,520 --> 01:06:00,960
site one

1406
01:05:58,319 --> 01:06:01,359
uh there are blue and green and for site

1407
01:06:00,960 --> 01:06:03,920
three

1408
01:06:01,359 --> 01:06:04,558
we have blue red and green so these are

1409
01:06:03,920 --> 01:06:09,520
called

1410
01:06:04,559 --> 01:06:09,520
service instances next page please

1411
01:06:13,440 --> 01:06:18,079
we figure out that the potential is

1412
01:06:15,839 --> 01:06:21,599
three features to be supported

1413
01:06:18,079 --> 01:06:22,240
uh in a dimecast framework so the first

1414
01:06:21,599 --> 01:06:23,760
one is

1415
01:06:22,240 --> 01:06:25,520
is the ending cost based service

1416
01:06:23,760 --> 01:06:26,480
addressing methodology then the second

1417
01:06:25,520 --> 01:06:28,559
one is the

1418
01:06:26,480 --> 01:06:29,520
flow affinity third one is a computing

1419
01:06:28,559 --> 01:06:31,760
aware routing

1420
01:06:29,520 --> 01:06:33,440
so for the next three pages i will

1421
01:06:31,760 --> 01:06:36,160
quickly go through each of them

1422
01:06:33,440 --> 01:06:36,160
next slide please

1423
01:06:36,880 --> 01:06:40,319
so the ending cast based service

1424
01:06:38,640 --> 01:06:40,799
addressing methodology if you look at

1425
01:06:40,319 --> 01:06:43,359
the

1426
01:06:40,799 --> 01:06:44,480
look at the blue circles here actually

1427
01:06:43,359 --> 01:06:47,119
they are

1428
01:06:44,480 --> 01:06:48,720
they are the same service however the uh

1429
01:06:47,119 --> 01:06:52,160
they are the two different

1430
01:06:48,720 --> 01:06:54,959
uh instances uh instantiated on

1431
01:06:52,160 --> 01:06:58,000
at different places which means um the

1432
01:06:54,960 --> 01:07:00,160
service instances too attached to cfno2

1433
01:06:58,000 --> 01:07:01,520
and service instance three attached to

1434
01:07:00,160 --> 01:07:04,799
cfno3

1435
01:07:01,520 --> 01:07:05,759
so we pop we would require some of the

1436
01:07:04,799 --> 01:07:08,079
anycast based

1437
01:07:05,760 --> 01:07:08,799
service addressing and kind of mapped to

1438
01:07:08,079 --> 01:07:12,480
the

1439
01:07:08,799 --> 01:07:13,599
uh map2n unicast ip address base the

1440
01:07:12,480 --> 01:07:17,359
binding id

1441
01:07:13,599 --> 01:07:18,400
in order to reach the specific service

1442
01:07:17,359 --> 01:07:21,279
instances

1443
01:07:18,400 --> 01:07:21,280
next page please

1444
01:07:21,760 --> 01:07:25,839
so this page try to talk about what the

1445
01:07:24,160 --> 01:07:28,799
flow affinity

1446
01:07:25,839 --> 01:07:30,000
is it simply means select the best edge

1447
01:07:28,799 --> 01:07:32,799
and stick to it

1448
01:07:30,000 --> 01:07:34,240
so look at the picture here uh we have

1449
01:07:32,799 --> 01:07:37,119
two clients and flow one

1450
01:07:34,240 --> 01:07:38,319
flow to the possibly trying to use the

1451
01:07:37,119 --> 01:07:40,960
same service

1452
01:07:38,319 --> 01:07:43,279
so once the uh once the service

1453
01:07:40,960 --> 01:07:45,599
instances to handle each of them has

1454
01:07:43,280 --> 01:07:49,039
been determined it has to stick to it

1455
01:07:45,599 --> 01:07:51,760
so flow one always goes to the uh the

1456
01:07:49,039 --> 01:07:53,359
upper blue circle and the flow to always

1457
01:07:51,760 --> 01:07:56,400
go to the

1458
01:07:53,359 --> 01:07:58,799
the the lower one uh so possibly we

1459
01:07:56,400 --> 01:08:01,599
would require some of the binding tables

1460
01:07:58,799 --> 01:08:02,799
in order to ensure the flow affinity and

1461
01:08:01,599 --> 01:08:05,039
also we

1462
01:08:02,799 --> 01:08:06,160
would require some of the procedures at

1463
01:08:05,039 --> 01:08:09,200
the data plane

1464
01:08:06,160 --> 01:08:10,240
uh to make sure the flow to ensure the

1465
01:08:09,200 --> 01:08:13,038
flow affinity

1466
01:08:10,240 --> 01:08:13,038
next slide please

1467
01:08:14,400 --> 01:08:17,520
uh this slide talks about the computing

1468
01:08:16,560 --> 01:08:20,319
aware routing

1469
01:08:17,520 --> 01:08:21,359
basically there are two parts of it and

1470
01:08:20,319 --> 01:08:24,719
the green

1471
01:08:21,359 --> 01:08:25,839
the green circle talks about there would

1472
01:08:24,719 --> 01:08:28,480
be some

1473
01:08:25,839 --> 01:08:31,120
service information notification from

1474
01:08:28,479 --> 01:08:34,238
the service side to the cfn node

1475
01:08:31,120 --> 01:08:36,479
uh the here the service information

1476
01:08:34,238 --> 01:08:38,158
normally refers to the computing

1477
01:08:36,479 --> 01:08:39,919
resource related information

1478
01:08:38,158 --> 01:08:41,278
always sometimes we call the computing

1479
01:08:39,920 --> 01:08:43,199
matrix this

1480
01:08:41,279 --> 01:08:45,279
is the first part the second part is the

1481
01:08:43,198 --> 01:08:48,399
blue arrows here

1482
01:08:45,279 --> 01:08:49,359
these are all the information sharing or

1483
01:08:48,399 --> 01:08:52,960
distribution

1484
01:08:49,359 --> 01:08:54,960
among the cfl nodes so that could be the

1485
01:08:52,960 --> 01:08:56,640
computing metrics and the network and

1486
01:08:54,960 --> 01:08:59,839
networking metrics

1487
01:08:56,640 --> 01:08:59,839
next slide please

1488
01:09:01,120 --> 01:09:07,839
so to recap we have three features two

1489
01:09:04,799 --> 01:09:09,519
to be supported any cost-based service

1490
01:09:07,839 --> 01:09:11,278
addressing methodology flow of vanity

1491
01:09:09,520 --> 01:09:14,719
and computing aware routing

1492
01:09:11,279 --> 01:09:17,759
uh we we figure there could be some

1493
01:09:14,719 --> 01:09:20,640
work required like how to represent a

1494
01:09:17,759 --> 01:09:22,479
computing matrix in in the defined

1495
01:09:20,640 --> 01:09:25,520
service and the service instance

1496
01:09:22,479 --> 01:09:27,599
context and also how to distribute this

1497
01:09:25,520 --> 01:09:29,040
metrics what are the formats should be

1498
01:09:27,600 --> 01:09:32,159
and how frequent

1499
01:09:29,040 --> 01:09:34,560
the updates should be and also

1500
01:09:32,158 --> 01:09:35,839
um how to use this metrics in the route

1501
01:09:34,560 --> 01:09:38,560
determination

1502
01:09:35,839 --> 01:09:39,439
and for the data blink um the definition

1503
01:09:38,560 --> 01:09:41,520
of the requirements

1504
01:09:39,439 --> 01:09:42,639
for possible data plane extensions and

1505
01:09:41,520 --> 01:09:45,679
procedures

1506
01:09:42,640 --> 01:09:49,839
these are also one of the possible work

1507
01:09:45,679 --> 01:09:49,839
next slide please

1508
01:09:52,158 --> 01:09:56,320
we are trying well we will have a

1509
01:09:54,000 --> 01:09:58,480
virtual side meeting on this

1510
01:09:56,320 --> 01:10:00,000
uh with the purpose to first to

1511
01:09:58,480 --> 01:10:01,199
understand the problems to make the

1512
01:10:00,000 --> 01:10:04,239
problem space

1513
01:10:01,199 --> 01:10:06,719
and try to review the framework and also

1514
01:10:04,239 --> 01:10:10,480
to discuss the potential work

1515
01:10:06,719 --> 01:10:12,239
and where to fit them in itf the time

1516
01:10:10,480 --> 01:10:15,120
will be the wednesday five minutes

1517
01:10:12,239 --> 01:10:17,280
after the plenary ends so we also have

1518
01:10:15,120 --> 01:10:19,199
the webex information here

1519
01:10:17,280 --> 01:10:20,719
so your help or your comments or

1520
01:10:19,199 --> 01:10:24,559
suggestions are

1521
01:10:20,719 --> 01:10:26,239
welcome thanks for the presentation so

1522
01:10:24,560 --> 01:10:27,120
we're not going to take any questions

1523
01:10:26,239 --> 01:10:29,678
here

1524
01:10:27,120 --> 01:10:30,960
uh if you are interested in routing

1525
01:10:29,679 --> 01:10:32,640
working group

1526
01:10:30,960 --> 01:10:34,400
opinions and questions i would really

1527
01:10:32,640 --> 01:10:37,360
advise you to send emails

1528
01:10:34,400 --> 01:10:39,040
and explain what you're trying to do and

1529
01:10:37,360 --> 01:10:42,320
ask for comments

1530
01:10:39,040 --> 01:10:42,320
and thank you for the presentation

1531
01:10:43,520 --> 01:10:46,320
okay daniel

1532
01:10:49,440 --> 01:10:55,599
um can you hear me yeah

1533
01:10:52,480 --> 01:10:56,480
yeah okay uh good morning good afternoon

1534
01:10:55,600 --> 01:10:59,600
everyone

1535
01:10:56,480 --> 01:11:01,519
um thanks jeff and and chris this is

1536
01:10:59,600 --> 01:11:03,199
daniel juan from cte speaking and

1537
01:11:01,520 --> 01:11:05,199
uh first i'd like to make a

1538
01:11:03,199 --> 01:11:07,199
clarification about these slides

1539
01:11:05,199 --> 01:11:08,559
uh actually this slice has been pre

1540
01:11:07,199 --> 01:11:13,040
presented in itf

1541
01:11:08,560 --> 01:11:13,040
108 the by my pam iconic

1542
01:11:14,239 --> 01:11:20,400
but during the past three months we made

1543
01:11:17,360 --> 01:11:23,440
a couple of minor changes and

1544
01:11:20,400 --> 01:11:25,679
actually this slide is about

1545
01:11:23,440 --> 01:11:26,559
a summarized presentation about the two

1546
01:11:25,679 --> 01:11:29,360
drafts

1547
01:11:26,560 --> 01:11:30,960
which is a problem statement of the

1548
01:11:29,360 --> 01:11:34,960
precise transport network

1549
01:11:30,960 --> 01:11:34,960
and the requirements respectively

1550
01:11:35,120 --> 01:11:42,159
next next slide please okay

1551
01:11:43,440 --> 01:11:50,400
uh in addition to the

1552
01:11:46,960 --> 01:11:52,560
um enhanced mobile broadband

1553
01:11:50,400 --> 01:11:54,159
service and the master machine type

1554
01:11:52,560 --> 01:11:57,600
communication services

1555
01:11:54,159 --> 01:11:58,799
an important outstanding communication

1556
01:11:57,600 --> 01:12:01,120
service feature

1557
01:11:58,800 --> 01:12:01,920
offered by 5g network cases ultra

1558
01:12:01,120 --> 01:12:03,360
reliable

1559
01:12:01,920 --> 01:12:06,159
no latency communications which

1560
01:12:03,360 --> 01:12:08,880
addressed the vertical industries

1561
01:12:06,159 --> 01:12:10,080
such as the internet of electricity and

1562
01:12:08,880 --> 01:12:13,440
that the vehicles

1563
01:12:10,080 --> 01:12:14,719
and the remote medical and augmented

1564
01:12:13,440 --> 01:12:17,839
reality or

1565
01:12:14,719 --> 01:12:20,960
virtual reality uh just

1566
01:12:17,840 --> 01:12:23,040
name a few um

1567
01:12:20,960 --> 01:12:24,159
when it comes to deterministic

1568
01:12:23,040 --> 01:12:26,000
networking services

1569
01:12:24,159 --> 01:12:27,440
and time sensitive networking services

1570
01:12:26,000 --> 01:12:30,560
as uh as this

1571
01:12:27,440 --> 01:12:33,678
discussed and um um designed

1572
01:12:30,560 --> 01:12:36,960
in tstanda.net um

1573
01:12:33,679 --> 01:12:37,840
the the technical network service

1574
01:12:36,960 --> 01:12:41,280
requirements

1575
01:12:37,840 --> 01:12:44,320
from this kind of uh vertical industries

1576
01:12:41,280 --> 01:12:48,800
uh usually goes to far beyond the

1577
01:12:44,320 --> 01:12:52,080
deterministic and time bonding latency

1578
01:12:48,800 --> 01:12:52,640
for example um the uh when it comes to

1579
01:12:52,080 --> 01:12:56,080
the

1580
01:12:52,640 --> 01:12:59,520
uh internet of electricity and we

1581
01:12:56,080 --> 01:13:02,000
will work with sometimes we need a hard

1582
01:12:59,520 --> 01:13:04,080
isolation or service isolation for a

1583
01:13:02,000 --> 01:13:07,440
specific service

1584
01:13:04,080 --> 01:13:08,400
and transport service and when it comes

1585
01:13:07,440 --> 01:13:12,080
to the

1586
01:13:08,400 --> 01:13:14,080
internet of the ecos it worries to get

1587
01:13:12,080 --> 01:13:17,679
involved with the

1588
01:13:14,080 --> 01:13:18,640
operating network networkers and

1589
01:13:17,679 --> 01:13:21,040
administrative

1590
01:13:18,640 --> 01:13:22,880
network domains so they're also going to

1591
01:13:21,040 --> 01:13:26,640
be cooperation coordination

1592
01:13:22,880 --> 01:13:29,840
among uh multiple network operations and

1593
01:13:26,640 --> 01:13:33,440
administer administrative domains um

1594
01:13:29,840 --> 01:13:34,800
this is the generous summarization of

1595
01:13:33,440 --> 01:13:37,839
the use consist of

1596
01:13:34,800 --> 01:13:40,640
precise transport network and that

1597
01:13:37,840 --> 01:13:40,640
exercise please

1598
01:13:41,679 --> 01:13:43,920
okay

1599
01:13:44,800 --> 01:13:48,880
this that's nice actually i i'd like to

1600
01:13:46,960 --> 01:13:52,159
um

1601
01:13:48,880 --> 01:13:54,239
make um a detailed uh statement about

1602
01:13:52,159 --> 01:13:56,000
why we called the precise transport

1603
01:13:54,239 --> 01:13:59,519
network other than determining

1604
01:13:56,000 --> 01:14:02,320
determines networking as in that net

1605
01:13:59,520 --> 01:14:03,760
or time time sensitive networking and

1606
01:14:02,320 --> 01:14:07,360
tsm

1607
01:14:03,760 --> 01:14:10,400
um simply because there's the the

1608
01:14:07,360 --> 01:14:14,000
networking service requirements

1609
01:14:10,400 --> 01:14:17,199
goes beyond the latency

1610
01:14:14,000 --> 01:14:20,880
development latency and uh

1611
01:14:17,199 --> 01:14:22,000
j-turn effective loss uh in in in tsn

1612
01:14:20,880 --> 01:14:25,760
and that net

1613
01:14:22,000 --> 01:14:29,520
there's um more precise latency

1614
01:14:25,760 --> 01:14:32,800
and precise uh pacquiao laws

1615
01:14:29,520 --> 01:14:36,719
uh and as well as jeter um

1616
01:14:32,800 --> 01:14:40,159
actually it's about um um

1617
01:14:36,719 --> 01:14:42,880
fine-grained uh technical

1618
01:14:40,159 --> 01:14:44,639
requirements in in terms of the latency

1619
01:14:42,880 --> 01:14:46,560
packet lost in jeter

1620
01:14:44,640 --> 01:14:48,080
and uh when it comes to resource

1621
01:14:46,560 --> 01:14:51,360
reservation as it

1622
01:14:48,080 --> 01:14:53,199
designed in tsn and um and that net is

1623
01:14:51,360 --> 01:14:57,120
uh i'd like to coordinate the core

1624
01:14:53,199 --> 01:14:59,280
screen uh uh resource reservation but

1625
01:14:57,120 --> 01:15:01,599
when it comes to the uh precise

1626
01:14:59,280 --> 01:15:04,880
transport network and we

1627
01:15:01,600 --> 01:15:08,719
uh we we need to design that much more

1628
01:15:04,880 --> 01:15:12,239
fine-grained resource education

1629
01:15:08,719 --> 01:15:16,719
mechanisms such as service isolation and

1630
01:15:12,239 --> 01:15:21,519
more flat size resource isolation

1631
01:15:16,719 --> 01:15:23,520
and also in tsn um

1632
01:15:21,520 --> 01:15:25,360
we we designed a cycle and cool

1633
01:15:23,520 --> 01:15:28,239
processing mechanism to

1634
01:15:25,360 --> 01:15:29,040
guarantee the bond latency and the

1635
01:15:28,239 --> 01:15:32,480
abundant

1636
01:15:29,040 --> 01:15:35,519
packet lost and jater uh but

1637
01:15:32,480 --> 01:15:38,718
in in the use cases i as i mentioned

1638
01:15:35,520 --> 01:15:41,760
in previous slides we this this

1639
01:15:38,719 --> 01:15:43,600
kind of mechanisms are not enough

1640
01:15:41,760 --> 01:15:44,800
to address those requirements so we need

1641
01:15:43,600 --> 01:15:48,239
uh some kind of

1642
01:15:44,800 --> 01:15:51,760
other um mechanics such as the flexible

1643
01:15:48,239 --> 01:15:56,000
slicing and follows and uh

1644
01:15:51,760 --> 01:15:56,400
in um in determining networking actually

1645
01:15:56,000 --> 01:15:58,560
we

1646
01:15:56,400 --> 01:15:59,599
uh we we designed the mechanics industry

1647
01:15:58,560 --> 01:16:01,440
in uh quite

1648
01:15:59,600 --> 01:16:03,280
close to group of administrative

1649
01:16:01,440 --> 01:16:05,678
controlled controlled main

1650
01:16:03,280 --> 01:16:06,800
but uh when we're talking about the use

1651
01:16:05,679 --> 01:16:10,080
case of

1652
01:16:06,800 --> 01:16:15,199
um an internet of vehicles and

1653
01:16:10,080 --> 01:16:15,199
augmented reality or virtue uh reality

1654
01:16:15,360 --> 01:16:22,239
um there's um this service

1655
01:16:18,960 --> 01:16:26,239
will get involved multiple networks

1656
01:16:22,239 --> 01:16:28,879
administrative administrative domains so

1657
01:16:26,239 --> 01:16:30,400
we need we we need disaster cooperation

1658
01:16:28,880 --> 01:16:34,400
and coordination mechanisms

1659
01:16:30,400 --> 01:16:37,120
among a multiple administrative domains

1660
01:16:34,400 --> 01:16:37,599
and multiple operating networks that's

1661
01:16:37,120 --> 01:16:39,040
um

1662
01:16:37,600 --> 01:16:40,960
the major difference between the

1663
01:16:39,040 --> 01:16:44,400
determining networking and testing

1664
01:16:40,960 --> 01:16:48,159
and precise transport network which

1665
01:16:44,400 --> 01:16:51,839
stated in these slides and in the

1666
01:16:48,159 --> 01:16:51,839
and exercise please

1667
01:16:55,040 --> 01:17:01,600
okay um when it comes to the problem of

1668
01:17:00,080 --> 01:17:04,000
the existing mechanics in the

1669
01:17:01,600 --> 01:17:06,800
technologist um

1670
01:17:04,000 --> 01:17:06,800
to a time

1671
01:17:07,199 --> 01:17:12,080
working um when we're talking about

1672
01:17:09,920 --> 01:17:16,000
traffic scheduling mechanisms such as

1673
01:17:12,080 --> 01:17:18,960
shaping uh cleaning and scheduling um

1674
01:17:16,000 --> 01:17:20,880
which is designed to guarantee the

1675
01:17:18,960 --> 01:17:24,320
bonding latency

1676
01:17:20,880 --> 01:17:27,760
in pakistan and

1677
01:17:24,320 --> 01:17:30,880
impact packet loss and jeter um

1678
01:17:27,760 --> 01:17:34,159
we we we depended on

1679
01:17:30,880 --> 01:17:37,840
the dedicated um time

1680
01:17:34,159 --> 01:17:40,719
centralization mechanisms but when we

1681
01:17:37,840 --> 01:17:42,400
deploy these kind of mechanisms in near

1682
01:17:40,719 --> 01:17:45,040
three networks

1683
01:17:42,400 --> 01:17:46,400
the network will be overwhelmed with

1684
01:17:45,040 --> 01:17:49,440
unnecessary

1685
01:17:46,400 --> 01:17:52,159
burden with with the costly uh

1686
01:17:49,440 --> 01:17:53,360
time synchronous time standardization uh

1687
01:17:52,159 --> 01:17:55,519
mechanism so

1688
01:17:53,360 --> 01:17:56,799
uh this is the problem so we need

1689
01:17:55,520 --> 01:17:59,840
another we need

1690
01:17:56,800 --> 01:18:00,880
new candidates to address the same

1691
01:17:59,840 --> 01:18:04,719
requirements

1692
01:18:00,880 --> 01:18:08,800
in the nursery network scenarios

1693
01:18:04,719 --> 01:18:11,199
and when it comes to the link delay

1694
01:18:08,800 --> 01:18:12,000
when we're talking about nokia aero

1695
01:18:11,199 --> 01:18:14,239
networked

1696
01:18:12,000 --> 01:18:15,600
cellarius they linked the reaction it

1697
01:18:14,239 --> 01:18:19,040
could be declared

1698
01:18:15,600 --> 01:18:20,480
in most cases in most scenarios but

1699
01:18:19,040 --> 01:18:22,560
when it comes to long distance

1700
01:18:20,480 --> 01:18:25,440
transmission the delay

1701
01:18:22,560 --> 01:18:26,000
and the data incurred from the from the

1702
01:18:25,440 --> 01:18:28,480
long distance

1703
01:18:26,000 --> 01:18:30,080
transmission could not be glowed and

1704
01:18:28,480 --> 01:18:33,280
they have to be addressed

1705
01:18:30,080 --> 01:18:36,400
carefully with with

1706
01:18:33,280 --> 01:18:41,360
sophisticated mechanisms

1707
01:18:36,400 --> 01:18:44,879
and in both tsn.net

1708
01:18:41,360 --> 01:18:45,599
we used the flow aggregation mechanism

1709
01:18:44,880 --> 01:18:48,960
to

1710
01:18:45,600 --> 01:18:52,000
address address to the

1711
01:18:48,960 --> 01:18:54,000
trafficking flow treatment but

1712
01:18:52,000 --> 01:18:55,679
when it comes to the use case system as

1713
01:18:54,000 --> 01:19:00,080
i mentioned in the first

1714
01:18:55,679 --> 01:19:02,719
slide um there's there are uh

1715
01:19:00,080 --> 01:19:03,360
there's dynamic flows from multiple

1716
01:19:02,719 --> 01:19:06,560
users

1717
01:19:03,360 --> 01:19:09,839
in most in a lot of

1718
01:19:06,560 --> 01:19:12,080
vertical industries so uh the our

1719
01:19:09,840 --> 01:19:16,080
customers they don't want

1720
01:19:12,080 --> 01:19:18,800
uh simply don't want their flows to

1721
01:19:16,080 --> 01:19:20,159
be aggregated in uh coarse grained

1722
01:19:18,800 --> 01:19:23,360
treatment mechanisms

1723
01:19:20,159 --> 01:19:24,159
uh in testing that net mechanism they

1724
01:19:23,360 --> 01:19:27,360
need

1725
01:19:24,159 --> 01:19:29,199
a special and more precise uh

1726
01:19:27,360 --> 01:19:30,960
traffic flow treatment mechanisms

1727
01:19:29,199 --> 01:19:35,440
services

1728
01:19:30,960 --> 01:19:38,640
and um also in the

1729
01:19:35,440 --> 01:19:40,480
time both time and and security critical

1730
01:19:38,640 --> 01:19:44,480
uh service to solaris

1731
01:19:40,480 --> 01:19:48,480
uh they need uh service isolation um

1732
01:19:44,480 --> 01:19:51,280
for for the bursts for the uh burst

1733
01:19:48,480 --> 01:19:51,919
traffic or something like that and also

1734
01:19:51,280 --> 01:19:55,120
they need

1735
01:19:51,920 --> 01:19:58,480
a more fine-grained resource allocation

1736
01:19:55,120 --> 01:20:04,719
for for the for the service

1737
01:19:58,480 --> 01:20:08,400
next slide please

1738
01:20:04,719 --> 01:20:10,480
and this is uh uh simply um

1739
01:20:08,400 --> 01:20:12,159
i generally are a summarization of

1740
01:20:10,480 --> 01:20:12,799
requirements to a precise transport

1741
01:20:12,159 --> 01:20:14,879
network

1742
01:20:12,800 --> 01:20:16,239
uh i i don't want to recount it one by

1743
01:20:14,880 --> 01:20:18,800
one because i i

1744
01:20:16,239 --> 01:20:19,519
already did it in the previous slides

1745
01:20:18,800 --> 01:20:22,320
actually i

1746
01:20:19,520 --> 01:20:23,440
i do think this is this is the an

1747
01:20:22,320 --> 01:20:26,719
exhaustive list

1748
01:20:23,440 --> 01:20:29,839
and more requirements could be

1749
01:20:26,719 --> 01:20:33,040
updated upon more discussion and

1750
01:20:29,840 --> 01:20:35,840
more input

1751
01:20:33,040 --> 01:20:35,840
let's slide please

1752
01:20:38,560 --> 01:20:43,840
so as i mentioned in the previous slides

1753
01:20:41,760 --> 01:20:44,960
in the precise transport networking

1754
01:20:43,840 --> 01:20:48,000
especially

1755
01:20:44,960 --> 01:20:50,960
when um from a point of one uh

1756
01:20:48,000 --> 01:20:53,040
one two one um and the end to the

1757
01:20:50,960 --> 01:20:55,360
precise transport network service

1758
01:20:53,040 --> 01:20:56,080
and we get involved the multiple network

1759
01:20:55,360 --> 01:21:01,280
operators

1760
01:20:56,080 --> 01:21:05,519
and we need a precise more fine-grained

1761
01:21:01,280 --> 01:21:08,559
customers traffic flow treatment and um

1762
01:21:05,520 --> 01:21:10,560
we need uh quite precise uh

1763
01:21:08,560 --> 01:21:11,760
network resource allocation and the

1764
01:21:10,560 --> 01:21:15,600
service is

1765
01:21:11,760 --> 01:21:18,800
isolation so um we would

1766
01:21:15,600 --> 01:21:22,639
we will suggest and propose some

1767
01:21:18,800 --> 01:21:25,920
new uh technical mechanisms or extend

1768
01:21:22,639 --> 01:21:28,960
the existing mechanisms and technologies

1769
01:21:25,920 --> 01:21:31,520
such as that net and segment routing

1770
01:21:28,960 --> 01:21:32,719
to address the problems and the meet

1771
01:21:31,520 --> 01:21:36,239
requirements

1772
01:21:32,719 --> 01:21:36,639
um as it's stated in in in this draft as

1773
01:21:36,239 --> 01:21:39,678
well as

1774
01:21:36,639 --> 01:21:43,440
as best as they sliced i

1775
01:21:39,679 --> 01:21:46,560
i presented it in the previous slides

1776
01:21:43,440 --> 01:21:46,559
uh next slide please

1777
01:21:46,880 --> 01:21:50,800
uh next because this is simply the

1778
01:21:49,199 --> 01:21:55,040
second time we presented the

1779
01:21:50,800 --> 01:21:56,719
the slides um uh we personally

1780
01:21:55,040 --> 01:21:58,080
your performance the suggestion the

1781
01:21:56,719 --> 01:22:00,800
questions are very

1782
01:21:58,080 --> 01:22:01,120
really very uh welcome and appreciation

1783
01:22:00,800 --> 01:22:03,840
and

1784
01:22:01,120 --> 01:22:04,480
we will uh propose firstly we will

1785
01:22:03,840 --> 01:22:06,960
propose

1786
01:22:04,480 --> 01:22:08,480
framework the solutions for uh precise

1787
01:22:06,960 --> 01:22:12,239
transport networking.com

1788
01:22:08,480 --> 01:22:16,159
your import or comments and suggestions

1789
01:22:12,239 --> 01:22:16,159
thank you thank you daniel

1790
01:22:17,840 --> 01:22:21,520
i see there's no one in the queue so

1791
01:22:20,080 --> 01:22:25,840
greg is next

1792
01:22:21,520 --> 01:22:25,840
i believe

1793
01:22:38,719 --> 01:22:43,440
ready when you are go ahead

1794
01:22:50,960 --> 01:23:00,000
great you can go uh

1795
01:22:54,719 --> 01:23:00,000
i don't see slides i see old swords

1796
01:23:03,199 --> 01:23:08,000
i do see a slight weird

1797
01:23:09,199 --> 01:23:17,199
yeah so what are you seeing greg

1798
01:23:12,960 --> 01:23:17,199
i see the slides from daniel

1799
01:23:18,000 --> 01:23:25,040
okay okay let me okay i'll

1800
01:23:22,239 --> 01:23:25,040
try to refresh

1801
01:23:28,159 --> 01:23:32,400
i assume you're seeing jeff the

1802
01:23:30,320 --> 01:23:33,040
multi-point yeah i i see the right side

1803
01:23:32,400 --> 01:23:35,839
yep

1804
01:23:33,040 --> 01:23:35,840
okay

1805
01:23:47,280 --> 01:23:50,400
okay um so

1806
01:23:50,480 --> 01:23:58,320
this is a on um multi-point

1807
01:23:54,320 --> 01:24:01,679
vfd in uh erp use case

1808
01:23:58,320 --> 01:24:06,880
uh we discussed this uh

1809
01:24:01,679 --> 01:24:06,880
some meetings ago uh next slide please

1810
01:24:10,080 --> 01:24:17,280
so uh of um the motivation

1811
01:24:14,840 --> 01:24:20,960
um therapy 3

1812
01:24:17,280 --> 01:24:24,880
allows for fast

1813
01:24:20,960 --> 01:24:28,239
detection of the master down

1814
01:24:24,880 --> 01:24:31,760
at 3.3 milliseconds

1815
01:24:28,239 --> 01:24:34,559
um and backup router uses the

1816
01:24:31,760 --> 01:24:36,719
master advertisements uh to monitor uh

1817
01:24:34,560 --> 01:24:40,239
the master

1818
01:24:36,719 --> 01:24:41,120
um at the same time uh it could be

1819
01:24:40,239 --> 01:24:44,320
achieved

1820
01:24:41,120 --> 01:24:48,080
using uh bfd

1821
01:24:44,320 --> 01:24:50,960
uh rfc 5880

1822
01:24:48,080 --> 01:24:51,280
defines point-to-point but now we have

1823
01:24:50,960 --> 01:24:54,960
uh

1824
01:24:51,280 --> 01:24:58,159
rfc 8562

1825
01:24:54,960 --> 01:25:01,120
which defines uh

1826
01:24:58,159 --> 01:25:01,440
bfd for multi-point networks the problem

1827
01:25:01,120 --> 01:25:04,800
uh

1828
01:25:01,440 --> 01:25:08,159
with their um point-to-point

1829
01:25:04,800 --> 01:25:11,910
is that uh it creates

1830
01:25:08,159 --> 01:25:13,199
in a synchronous mode a bi-directional

1831
01:25:11,910 --> 01:25:16,800
[Music]

1832
01:25:13,199 --> 01:25:18,559
bfd session and the master is doesn't

1833
01:25:16,800 --> 01:25:22,159
really need to know

1834
01:25:18,560 --> 01:25:24,840
um the status of a backup nor

1835
01:25:22,159 --> 01:25:26,719
it needs to know the identity of the

1836
01:25:24,840 --> 01:25:29,679
backup

1837
01:25:26,719 --> 01:25:29,679
next slide please

1838
01:25:35,679 --> 01:25:41,199
so the advantage of

1839
01:25:38,800 --> 01:25:42,760
bfd for multi-point networks which is

1840
01:25:41,199 --> 01:25:46,559
published as um

1841
01:25:42,760 --> 01:25:50,560
8562 it allows to use

1842
01:25:46,560 --> 01:25:55,840
um bfd uh with the silent

1843
01:25:50,560 --> 01:25:55,840
uh tails and uh it uses

1844
01:25:58,480 --> 01:26:05,519
demand mode in bfd uh it modifies

1845
01:26:01,679 --> 01:26:09,440
it updates the rst 5880 so that

1846
01:26:05,520 --> 01:26:13,360
um the session can start in upstate

1847
01:26:09,440 --> 01:26:16,719
uh when other

1848
01:26:13,360 --> 01:26:20,239
root or multi-point

1849
01:26:16,719 --> 01:26:23,280
uh head start transmitting bfd

1850
01:26:20,239 --> 01:26:26,638
packets but it and

1851
01:26:23,280 --> 01:26:29,679
well some can see it as a disadvantage

1852
01:26:26,639 --> 01:26:33,120
uh there is no three-way handshake so

1853
01:26:29,679 --> 01:26:36,239
uh the tail cannot use uh

1854
01:26:33,120 --> 01:26:39,199
value in a your discriminator filled

1855
01:26:36,239 --> 01:26:41,919
uh to the multiplex pfd session so thus

1856
01:26:39,199 --> 01:26:45,519
it needs to use a combination of

1857
01:26:41,920 --> 01:26:51,040
my discriminator uh value um

1858
01:26:45,520 --> 01:26:54,320
source ip address and their um

1859
01:26:51,040 --> 01:26:57,600
link on which it received um

1860
01:26:54,320 --> 01:26:59,519
so which requires uh their bootstrapping

1861
01:26:57,600 --> 01:27:02,239
uh mechanism for

1862
01:26:59,520 --> 01:27:02,880
uh pulling to multi-point bd sessions so

1863
01:27:02,239 --> 01:27:06,718
that

1864
01:27:02,880 --> 01:27:10,159
uh value of my discriminator

1865
01:27:06,719 --> 01:27:13,679
used by the root uh or

1866
01:27:10,159 --> 01:27:17,599
master in this case vrp is known

1867
01:27:13,679 --> 01:27:21,360
to the backup routers

1868
01:27:17,600 --> 01:27:21,360
so next slide

1869
01:27:25,840 --> 01:27:32,560
so what we'll propose is a very small

1870
01:27:29,199 --> 01:27:36,480
extension to vrp control packet

1871
01:27:32,560 --> 01:27:36,480
that would include their

1872
01:27:38,760 --> 01:27:44,800
discriminator information used by the

1873
01:27:42,320 --> 01:27:44,799
master

1874
01:27:45,360 --> 01:27:47,839
next slide

1875
01:27:51,840 --> 01:27:56,080
um so how it works the master router

1876
01:27:54,239 --> 01:27:59,759
creates a bfd session is

1877
01:27:56,080 --> 01:28:03,840
a type of multi-point head and

1878
01:27:59,760 --> 01:28:04,960
starts advertising uh the value it

1879
01:28:03,840 --> 01:28:08,159
allocated

1880
01:28:04,960 --> 01:28:12,239
uh in its vrp

1881
01:28:08,159 --> 01:28:14,480
control message and backup router

1882
01:28:12,239 --> 01:28:15,759
uh receives at some point receives the

1883
01:28:14,480 --> 01:28:19,280
control packet

1884
01:28:15,760 --> 01:28:22,719
and if it supports uh this uh extension

1885
01:28:19,280 --> 01:28:23,519
uh creates a bfd session as multi-point

1886
01:28:22,719 --> 01:28:27,040
tail

1887
01:28:23,520 --> 01:28:27,040
uh there are certain um

1888
01:28:27,440 --> 01:28:31,678
dependency as i mentioned earlier that

1889
01:28:30,400 --> 01:28:34,879
uh

1890
01:28:31,679 --> 01:28:38,400
the tail needs to use ip address

1891
01:28:34,880 --> 01:28:42,239
in a bfd packet uh to the multiplex bv

1892
01:28:38,400 --> 01:28:45,839
session so that uh their

1893
01:28:42,239 --> 01:28:49,280
address of master used in a

1894
01:28:45,840 --> 01:28:52,880
vrp message must be the same as

1895
01:28:49,280 --> 01:28:57,840
a source ip address used in a bfd

1896
01:28:52,880 --> 01:28:57,840
control packet

1897
01:28:58,080 --> 01:29:00,960
uh next slide

1898
01:29:04,880 --> 01:29:16,080
and uh once uh backup router notices

1899
01:29:10,960 --> 01:29:16,080
missing there or determines that um

1900
01:29:17,280 --> 01:29:21,360
this is a number of consecutive video

1901
01:29:20,000 --> 01:29:24,719
control packets it can

1902
01:29:21,360 --> 01:29:28,159
uh start it may start um

1903
01:29:24,719 --> 01:29:31,440
re-election um project so

1904
01:29:28,159 --> 01:29:33,920
um there is some thought that we are uh

1905
01:29:31,440 --> 01:29:34,480
starting uh with the offers and actually

1906
01:29:33,920 --> 01:29:38,239
i

1907
01:29:34,480 --> 01:29:40,400
sorry i i

1908
01:29:38,239 --> 01:29:41,599
mentioned that we have a new call for

1909
01:29:40,400 --> 01:29:44,000
gaian

1910
01:29:41,600 --> 01:29:46,560
and we welcome him and we started

1911
01:29:44,000 --> 01:29:49,920
discussion that possibly using

1912
01:29:46,560 --> 01:29:53,840
uh not only a silent

1913
01:29:49,920 --> 01:29:58,239
mode of bfd for multi-point networks but

1914
01:29:53,840 --> 01:29:59,080
using some um active that are defined in

1915
01:29:58,239 --> 01:30:02,400
rfc

1916
01:29:59,080 --> 01:30:05,440
8563 and um

1917
01:30:02,400 --> 01:30:08,799
mpls for point-to-point uh dfd

1918
01:30:05,440 --> 01:30:10,960
um so

1919
01:30:08,800 --> 01:30:12,159
they work somewhat differently but

1920
01:30:10,960 --> 01:30:16,480
effectively what

1921
01:30:12,159 --> 01:30:16,480
it does it allows

1922
01:30:17,360 --> 01:30:24,880
the head to know the status of

1923
01:30:21,840 --> 01:30:28,080
their tail and

1924
01:30:24,880 --> 01:30:31,600
uh whether the tail receives uh

1925
01:30:28,080 --> 01:30:34,000
the control messages from the head

1926
01:30:31,600 --> 01:30:35,280
so it's just something that we're

1927
01:30:34,000 --> 01:30:39,040
exploring and

1928
01:30:35,280 --> 01:30:42,400
uh appreciate uh your suggestions

1929
01:30:39,040 --> 01:30:46,639
on whether it's uh interesting for vrp

1930
01:30:42,400 --> 01:30:49,839
to let the master know uh the status of

1931
01:30:46,639 --> 01:30:53,280
uh the backup node and

1932
01:30:49,840 --> 01:30:56,159
effectively identity as well

1933
01:30:53,280 --> 01:30:56,159
next slide please

1934
01:30:57,840 --> 01:31:05,120
so comments are always welcome

1935
01:31:01,840 --> 01:31:08,880
discussion and we think that the base

1936
01:31:05,120 --> 01:31:10,480
uh functionality is quite simple and

1937
01:31:08,880 --> 01:31:17,840
straightforward

1938
01:31:10,480 --> 01:31:17,839
and we ask for working group adoption

1939
01:31:28,840 --> 01:31:33,360
okay

1940
01:31:30,719 --> 01:31:33,360
any questions

1941
01:31:41,600 --> 01:31:47,760
uh okay go ahead and unmute yourself

1942
01:31:45,280 --> 01:31:47,759
cowsic

1943
01:31:55,040 --> 01:31:58,400
i was just getting ready for my next

1944
01:31:57,360 --> 01:32:02,559
presentations

1945
01:31:58,400 --> 01:32:02,559
i don't have questions about this one

1946
01:32:10,840 --> 01:32:13,840
okay

1947
01:32:19,040 --> 01:32:23,920
okay so

1948
01:32:22,400 --> 01:32:26,320
should we go to the next presentation

1949
01:32:23,920 --> 01:32:29,600
because i believe that it still will be

1950
01:32:26,320 --> 01:32:32,400
i standing in a virtual

1951
01:32:29,600 --> 01:32:32,400
red square

1952
01:32:33,679 --> 01:32:35,920
yes

1953
01:32:37,120 --> 01:32:44,159
okay uh so um this

1954
01:32:40,719 --> 01:32:48,159
um has also some history

1955
01:32:44,159 --> 01:32:51,519
uh we discussed it and uh we decided

1956
01:32:48,159 --> 01:32:54,879
to uh simplify some purple uh

1957
01:32:51,520 --> 01:32:58,159
solution and uh merge

1958
01:32:54,880 --> 01:33:02,080
uh two drafts uh into one so

1959
01:32:58,159 --> 01:33:05,519
uh this is a bfd over mc lag interfaces

1960
01:33:02,080 --> 01:33:09,280
and again um so

1961
01:33:05,520 --> 01:33:12,880
uh guyan got interested and

1962
01:33:09,280 --> 01:33:15,599
we welcome him as a coffer

1963
01:33:12,880 --> 01:33:17,920
so now we have three offers next slide

1964
01:33:15,600 --> 01:33:17,920
please

1965
01:33:19,840 --> 01:33:23,920
so what's the problem or what we

1966
01:33:22,239 --> 01:33:28,400
consider to be a problem

1967
01:33:23,920 --> 01:33:31,600
uh rfc 7130 which is a micro bfd

1968
01:33:28,400 --> 01:33:34,879
uh addresses uh the

1969
01:33:31,600 --> 01:33:38,320
bfd over member links of the

1970
01:33:34,880 --> 01:33:41,760
link aggregation group and

1971
01:33:38,320 --> 01:33:45,440
so it allows to monitor uh

1972
01:33:41,760 --> 01:33:48,800
each member link with a distinctive

1973
01:33:45,440 --> 01:33:53,280
bfd point to point session

1974
01:33:48,800 --> 01:33:57,040
based on single hub the rc5881

1975
01:33:53,280 --> 01:33:58,159
uh but that would not work for the mc

1976
01:33:57,040 --> 01:34:01,280
lag

1977
01:33:58,159 --> 01:34:04,159
uh which is again quite attractive uh

1978
01:34:01,280 --> 01:34:06,480
deployment scenario for uh

1979
01:34:04,159 --> 01:34:06,480
lag

1980
01:34:07,440 --> 01:34:11,519
and one of the reasons is that because

1981
01:34:10,280 --> 01:34:15,120
[Music]

1982
01:34:11,520 --> 01:34:18,480
source and destination id addresses

1983
01:34:15,120 --> 01:34:22,080
they must be the same

1984
01:34:18,480 --> 01:34:24,959
on all member links even though

1985
01:34:22,080 --> 01:34:26,080
their redundancy group are represented

1986
01:34:24,960 --> 01:34:30,239
by

1987
01:34:26,080 --> 01:34:30,239
more than one node

1988
01:34:31,520 --> 01:34:34,400
next slide please

1989
01:34:40,960 --> 01:34:47,600
so um what we can do uh

1990
01:34:44,080 --> 01:34:51,199
if it's uh ipr network

1991
01:34:47,600 --> 01:34:54,719
so we propose uh to use um

1992
01:34:51,199 --> 01:34:58,080
link local multicast address uh for

1993
01:34:54,719 --> 01:35:01,679
uh ipv4 address family and

1994
01:34:58,080 --> 01:35:04,800
um if it's ipv6 then

1995
01:35:01,679 --> 01:35:09,679
it's a link local multicast address

1996
01:35:04,800 --> 01:35:09,679
uh used at destination ip address

1997
01:35:11,840 --> 01:35:17,600
so it's a pretty straightforward

1998
01:35:13,520 --> 01:35:17,600
everything else remains the same

1999
01:35:19,119 --> 01:35:29,839
as defined in rfc 7130

2000
01:35:23,760 --> 01:35:29,840
next slide please

2001
01:35:30,159 --> 01:35:34,480
so um that's where we

2002
01:35:34,719 --> 01:35:39,119
uh changed from what we discussed some

2003
01:35:37,600 --> 01:35:42,880
meetings ago

2004
01:35:39,119 --> 01:35:44,080
and i can probably spend some more time

2005
01:35:42,880 --> 01:35:48,000
on explaining uh

2006
01:35:44,080 --> 01:35:50,239
why we uh propose only uh ip

2007
01:35:48,000 --> 01:35:54,080
encapsulation

2008
01:35:50,239 --> 01:35:57,919
and uh why we uh propose to use

2009
01:35:54,080 --> 01:36:03,519
uh specific um destination ip

2010
01:35:57,920 --> 01:36:06,719
address for ip mpos encapsulation

2011
01:36:03,520 --> 01:36:10,000
so historically

2012
01:36:06,719 --> 01:36:13,280
we were using um

2013
01:36:10,000 --> 01:36:16,560
any address from um ipv4

2014
01:36:13,280 --> 01:36:20,320
uh loopback address range and

2015
01:36:16,560 --> 01:36:25,840
uh it's um dating back from

2016
01:36:20,320 --> 01:36:29,119
um ipm encapsulation for lspping

2017
01:36:25,840 --> 01:36:32,639
but apparently it was used

2018
01:36:29,119 --> 01:36:34,400
for creating uh entropy now with the

2019
01:36:32,639 --> 01:36:37,280
mpls label

2020
01:36:34,400 --> 01:36:38,559
at our disposal uh there is doesn't seem

2021
01:36:37,280 --> 01:36:41,280
to be apparent reason

2022
01:36:38,560 --> 01:36:43,440
uh to have entropy and in particular

2023
01:36:41,280 --> 01:36:46,719
since we are just one hub

2024
01:36:43,440 --> 01:36:50,879
uh being more uh

2025
01:36:46,719 --> 01:36:53,920
deterministic it simplifies so for ipv4

2026
01:36:50,880 --> 01:36:57,840
address family we propose to use

2027
01:36:53,920 --> 01:37:02,239
uh 127001

2028
01:36:57,840 --> 01:37:05,280
slash 32 address for ipv6

2029
01:37:02,239 --> 01:37:05,280
address family

2030
01:37:05,520 --> 01:37:12,400
all their uh ip encapsulation

2031
01:37:08,960 --> 01:37:12,400
in mpls um

2032
01:37:13,440 --> 01:37:23,519
we used um ipv4 mapped ipv6 addresses

2033
01:37:19,600 --> 01:37:26,960
but um with some discussions

2034
01:37:23,520 --> 01:37:29,840
uh with ipv6 experts

2035
01:37:26,960 --> 01:37:30,639
we learned that these addresses they

2036
01:37:29,840 --> 01:37:34,719
don't have

2037
01:37:30,639 --> 01:37:36,800
any special meaning in ipv6

2038
01:37:34,719 --> 01:37:38,400
they are not seen as a loopback

2039
01:37:36,800 --> 01:37:41,280
addresses

2040
01:37:38,400 --> 01:37:42,638
effectively you can ping them from the

2041
01:37:41,280 --> 01:37:45,759
host

2042
01:37:42,639 --> 01:37:50,159
and the only loopback address defined

2043
01:37:45,760 --> 01:37:53,440
for ipv6 and rfc 4291

2044
01:37:50,159 --> 01:37:56,719
is one

2045
01:37:53,440 --> 01:37:59,759
slash 128 and that's what we are

2046
01:37:56,719 --> 01:38:04,560
proposing to use for ipv6 family as

2047
01:37:59,760 --> 01:38:07,920
destination ip address in ipmos

2048
01:38:04,560 --> 01:38:10,480
network encapsulation

2049
01:38:07,920 --> 01:38:10,480
next slide

2050
01:38:11,679 --> 01:38:18,639
again uh where welcome comments

2051
01:38:15,440 --> 01:38:31,839
and we are asking for our working group

2052
01:38:18,639 --> 01:38:31,840
to consider adoption of this work

2053
01:38:32,400 --> 01:38:37,280
i see no questions

2054
01:38:35,440 --> 01:38:39,280
no on the queue great time for a

2055
01:38:37,280 --> 01:38:45,840
presentation call

2056
01:38:39,280 --> 01:38:45,840
your text okay thank you

2057
01:38:54,719 --> 01:39:01,840
can you hear me okay yes

2058
01:38:58,000 --> 01:39:04,239
okay hello everyone um i'm presenting

2059
01:39:01,840 --> 01:39:05,600
uh extension of transport network our

2060
01:39:04,239 --> 01:39:07,519
mobility draft

2061
01:39:05,600 --> 01:39:13,119
on behalf of the other authors omar and

2062
01:39:07,520 --> 01:39:15,119
linda next slide please

2063
01:39:13,119 --> 01:39:17,440
uh as a background the existing

2064
01:39:15,119 --> 01:39:19,839
transport network hour mobility

2065
01:39:17,440 --> 01:39:20,559
draft defines a framework for mapping

2066
01:39:19,840 --> 01:39:23,600
the 5g

2067
01:39:20,560 --> 01:39:25,600
mobility slide service types

2068
01:39:23,600 --> 01:39:27,119
to the corresponding underlying network

2069
01:39:25,600 --> 01:39:29,280
paths but the focus

2070
01:39:27,119 --> 01:39:30,159
of that work was limited to the mobility

2071
01:39:29,280 --> 01:39:33,119
domain

2072
01:39:30,159 --> 01:39:34,719
uh to extend that end-to-end transport

2073
01:39:33,119 --> 01:39:37,199
network characteristics

2074
01:39:34,719 --> 01:39:38,800
the framework needs to be expanded

2075
01:39:37,199 --> 01:39:41,440
beyond upf

2076
01:39:38,800 --> 01:39:43,600
so the in the current draft it describes

2077
01:39:41,440 --> 01:39:45,678
the framework for extending the mobility

2078
01:39:43,600 --> 01:39:47,920
our transport characteristics

2079
01:39:45,679 --> 01:39:49,520
uh how to maintain that from the upf

2080
01:39:47,920 --> 01:39:55,199
through the data network

2081
01:39:49,520 --> 01:39:58,639
next slide please

2082
01:39:55,199 --> 01:40:01,759
as an architecture this uh solutions

2083
01:39:58,639 --> 01:40:03,199
uh focuses in the following areas the

2084
01:40:01,760 --> 01:40:05,600
first

2085
01:40:03,199 --> 01:40:07,599
piece is that how the mobility transfer

2086
01:40:05,600 --> 01:40:11,360
packet transitions happen

2087
01:40:07,600 --> 01:40:12,960
in and out from the upf to the cpe node

2088
01:40:11,360 --> 01:40:14,880
maintaining that transport path

2089
01:40:12,960 --> 01:40:17,360
characteristics

2090
01:40:14,880 --> 01:40:18,880
the second part on the pe node based on

2091
01:40:17,360 --> 01:40:22,639
the transport characteristics

2092
01:40:18,880 --> 01:40:25,760
again use that different srt mechanism

2093
01:40:22,639 --> 01:40:27,760
to fetch the path segments and map that

2094
01:40:25,760 --> 01:40:30,480
to a srt segments with them

2095
01:40:27,760 --> 01:40:31,840
for the mobility hour transport packets

2096
01:40:30,480 --> 01:40:34,879
and the last part

2097
01:40:31,840 --> 01:40:35,360
on the sd-nc node again based on that

2098
01:40:34,880 --> 01:40:37,920
character

2099
01:40:35,360 --> 01:40:38,559
transport characteristics the mapping

2100
01:40:37,920 --> 01:40:41,679
could be

2101
01:40:38,560 --> 01:40:44,239
done on a secured versus unsecured

2102
01:40:41,679 --> 01:40:50,320
tunnel paths

2103
01:40:44,239 --> 01:40:52,879
next next slide please

2104
01:40:50,320 --> 01:40:55,360
yeah so this diagram uh kind of

2105
01:40:52,880 --> 01:40:58,400
represents the packet transitions

2106
01:40:55,360 --> 01:41:01,119
from the upf to the data network uh the

2107
01:40:58,400 --> 01:41:03,440
left side the picture is from the

2108
01:41:01,119 --> 01:41:04,480
mobility network and this is captured

2109
01:41:03,440 --> 01:41:07,599
exactly from that

2110
01:41:04,480 --> 01:41:08,000
uh the tn hour mobility draft the right

2111
01:41:07,600 --> 01:41:10,719
side

2112
01:41:08,000 --> 01:41:11,440
is the data network so this uh picture

2113
01:41:10,719 --> 01:41:14,719
represents

2114
01:41:11,440 --> 01:41:17,839
like how the management plane from the

2115
01:41:14,719 --> 01:41:19,520
mobility sites can give the traffic

2116
01:41:17,840 --> 01:41:21,840
classifications criteria

2117
01:41:19,520 --> 01:41:22,960
to that control ip network controller in

2118
01:41:21,840 --> 01:41:24,960
the data network

2119
01:41:22,960 --> 01:41:26,719
and that's rule could be propagated to

2120
01:41:24,960 --> 01:41:31,280
the cpe node

2121
01:41:26,719 --> 01:41:34,400
so when the packets comes from the upf

2122
01:41:31,280 --> 01:41:36,880
that would be that udp header

2123
01:41:34,400 --> 01:41:39,040
and the gdp header is already stripped

2124
01:41:36,880 --> 01:41:39,840
but when the packet arrives in the cpe

2125
01:41:39,040 --> 01:41:42,800
node

2126
01:41:39,840 --> 01:41:44,480
using that same rule the way that

2127
01:41:42,800 --> 01:41:45,520
management plane provisions in the

2128
01:41:44,480 --> 01:41:48,638
mobility side

2129
01:41:45,520 --> 01:41:50,719
same way it could uh put that

2130
01:41:48,639 --> 01:41:52,400
udp source put in permissions which is

2131
01:41:50,719 --> 01:41:54,239
specif basically the transport

2132
01:41:52,400 --> 01:41:57,280
characteristics

2133
01:41:54,239 --> 01:42:00,080
and based on that we could apply

2134
01:41:57,280 --> 01:42:00,639
that outer header and to maintain that

2135
01:42:00,080 --> 01:42:04,000
sla

2136
01:42:00,639 --> 01:42:05,920
in that data network now though

2137
01:42:04,000 --> 01:42:07,280
i just would like to mention one point

2138
01:42:05,920 --> 01:42:10,560
here uh

2139
01:42:07,280 --> 01:42:13,679
in case uh the upf and cp

2140
01:42:10,560 --> 01:42:14,159
are co-located in one device in that

2141
01:42:13,679 --> 01:42:17,920
case

2142
01:42:14,159 --> 01:42:20,159
uh probably we could use local policy

2143
01:42:17,920 --> 01:42:22,400
and that we don't need a control plane

2144
01:42:20,159 --> 01:42:25,920
mechanism the packet could be stripped

2145
01:42:22,400 --> 01:42:27,519
and the cp can get that uh the udp

2146
01:42:25,920 --> 01:42:29,119
header informations the source port

2147
01:42:27,520 --> 01:42:32,800
informations and then they could

2148
01:42:29,119 --> 01:42:34,799
use cpu could use that srt rule

2149
01:42:32,800 --> 01:42:36,080
so that we will see in the following

2150
01:42:34,800 --> 01:42:38,960
slides

2151
01:42:36,080 --> 01:42:38,960
next slide please

2152
01:42:41,360 --> 01:42:46,000
so that's the second part is that

2153
01:42:44,400 --> 01:42:48,559
how we can map the transport

2154
01:42:46,000 --> 01:42:51,600
characteristics to the srt paths

2155
01:42:48,560 --> 01:42:52,400
again here um the new pfp is terminating

2156
01:42:51,600 --> 01:42:55,199
that

2157
01:42:52,400 --> 01:42:57,040
mob 5g mobility connectivity from the ue

2158
01:42:55,199 --> 01:42:58,799
and there are two scenarios that pe

2159
01:42:57,040 --> 01:43:00,320
could be in a sitting on a same device

2160
01:42:58,800 --> 01:43:02,080
or could be co-located

2161
01:43:00,320 --> 01:43:04,719
uh it could be same device or could be

2162
01:43:02,080 --> 01:43:08,000
connected over a ip network

2163
01:43:04,719 --> 01:43:09,679
now p node uh based on the

2164
01:43:08,000 --> 01:43:11,920
transport characteristics again this

2165
01:43:09,679 --> 01:43:14,639
draft proposes a

2166
01:43:11,920 --> 01:43:15,600
different mechanism to get to map to srt

2167
01:43:14,639 --> 01:43:18,000
segments

2168
01:43:15,600 --> 01:43:19,840
one is that the p is connecting a bgp

2169
01:43:18,000 --> 01:43:22,400
srt controller over the

2170
01:43:19,840 --> 01:43:24,080
sr policy sufficients or e may be

2171
01:43:22,400 --> 01:43:27,280
connected to a uh

2172
01:43:24,080 --> 01:43:30,639
srpc controller over the pc sessions

2173
01:43:27,280 --> 01:43:33,519
or we could have a uh rest con

2174
01:43:30,639 --> 01:43:35,040
uh netcon for grpc sessions with a srt

2175
01:43:33,520 --> 01:43:37,600
controller and we'll see like each

2176
01:43:35,040 --> 01:43:40,400
scenario how we can up map

2177
01:43:37,600 --> 01:43:43,040
the transport characteristics yeah next

2178
01:43:40,400 --> 01:43:43,040
slide please

2179
01:43:46,960 --> 01:43:50,239
yeah so this is the scenario the plus

2180
01:43:49,520 --> 01:43:54,480
scenario

2181
01:43:50,239 --> 01:43:56,799
where that control uh the pe has that uh

2182
01:43:54,480 --> 01:43:58,320
sr policies happy sessions with a bgb

2183
01:43:56,800 --> 01:44:01,520
srt controller

2184
01:43:58,320 --> 01:44:03,679
in this case uh there is a new subtle 5g

2185
01:44:01,520 --> 01:44:04,560
metadata sub tlp is proposed that needs

2186
01:44:03,679 --> 01:44:07,280
to be supported

2187
01:44:04,560 --> 01:44:09,920
there is no changes in the existing

2188
01:44:07,280 --> 01:44:12,800
encoding which is defined by the idea

2189
01:44:09,920 --> 01:44:13,199
segment routing t policy draft so this

2190
01:44:12,800 --> 01:44:16,960
uh

2191
01:44:13,199 --> 01:44:20,719
sub tlp uh captures the udp source port

2192
01:44:16,960 --> 01:44:24,480
start value and in value and that's

2193
01:44:20,719 --> 01:44:26,080
values are defined by the tnr mobility

2194
01:44:24,480 --> 01:44:29,040
draft

2195
01:44:26,080 --> 01:44:30,400
so this is the format of that uh new uh

2196
01:44:29,040 --> 01:44:32,960
sub tlb

2197
01:44:30,400 --> 01:44:34,960
and i will see that next slide how it's

2198
01:44:32,960 --> 01:44:38,400
uh we kind of apply

2199
01:44:34,960 --> 01:44:38,400
so next slide please

2200
01:44:38,960 --> 01:44:45,199
yeah so in the bgp srt controller the

2201
01:44:42,159 --> 01:44:45,759
in this case like a p one has a sr

2202
01:44:45,199 --> 01:44:48,559
policies

2203
01:44:45,760 --> 01:44:50,480
appreciations with a srt controller and

2204
01:44:48,560 --> 01:44:51,360
that controller is provisioned uh

2205
01:44:50,480 --> 01:44:54,400
somehow that

2206
01:44:51,360 --> 01:44:56,400
uh udp source port range

2207
01:44:54,400 --> 01:44:59,119
which is again uh defined there are

2208
01:44:56,400 --> 01:45:02,719
different source port range for miot

2209
01:44:59,119 --> 01:45:04,480
embb and urlc traffic and for that we

2210
01:45:02,719 --> 01:45:05,760
have a corresponding srt policy

2211
01:45:04,480 --> 01:45:08,400
configured

2212
01:45:05,760 --> 01:45:09,520
so when the srt controller download the

2213
01:45:08,400 --> 01:45:12,559
sr policy

2214
01:45:09,520 --> 01:45:14,800
um policy policies so

2215
01:45:12,560 --> 01:45:15,840
that 5g metadata sub dlp could be

2216
01:45:14,800 --> 01:45:18,560
downloaded

2217
01:45:15,840 --> 01:45:19,760
and when the packet comes um again here

2218
01:45:18,560 --> 01:45:22,080
we are kind of seeing the

2219
01:45:19,760 --> 01:45:23,600
upf can be in the same node when the

2220
01:45:22,080 --> 01:45:26,559
packets comes here

2221
01:45:23,600 --> 01:45:28,880
the from based on that source port um

2222
01:45:26,560 --> 01:45:29,600
udp source port if it falls within that

2223
01:45:28,880 --> 01:45:32,639
uh

2224
01:45:29,600 --> 01:45:36,000
that's uh range of that uh

2225
01:45:32,639 --> 01:45:38,480
5g metadata sub tlp uh bringing in

2226
01:45:36,000 --> 01:45:39,600
so then the sr policy uh would be

2227
01:45:38,480 --> 01:45:42,559
applied

2228
01:45:39,600 --> 01:45:45,119
and based on that like a the packet will

2229
01:45:42,560 --> 01:45:48,239
be uh followed

2230
01:45:45,119 --> 01:45:50,239
that's in the data network it could be

2231
01:45:48,239 --> 01:45:52,799
any type of srt header

2232
01:45:50,239 --> 01:45:53,599
so the corresponding policy would be

2233
01:45:52,800 --> 01:45:56,159
mapped

2234
01:45:53,600 --> 01:45:58,560
and the packet flows in the data network

2235
01:45:56,159 --> 01:46:01,119
to maintain the sla

2236
01:45:58,560 --> 01:46:03,199
so this is the scenario one the next

2237
01:46:01,119 --> 01:46:05,519
slide

2238
01:46:03,199 --> 01:46:05,519
please

2239
01:46:07,199 --> 01:46:10,879
yeah so this case uh kind of displays

2240
01:46:10,480 --> 01:46:13,280
how

2241
01:46:10,880 --> 01:46:14,960
the mobility integration scan or

2242
01:46:13,280 --> 01:46:16,159
mobility integrations happen with the

2243
01:46:14,960 --> 01:46:18,639
srpc

2244
01:46:16,159 --> 01:46:19,199
so defines that class maps for the

2245
01:46:18,639 --> 01:46:22,400
different

2246
01:46:19,199 --> 01:46:25,360
uh traffic type which is uh again the tn

2247
01:46:22,400 --> 01:46:26,320
award mobility defines the miot urlc and

2248
01:46:25,360 --> 01:46:29,440
embb

2249
01:46:26,320 --> 01:46:32,320
that has different uh source port ranges

2250
01:46:29,440 --> 01:46:33,199
so based on that we could have a a

2251
01:46:32,320 --> 01:46:35,599
policy map

2252
01:46:33,199 --> 01:46:36,879
which can upset the colors or different

2253
01:46:35,600 --> 01:46:38,639
traffic type

2254
01:46:36,880 --> 01:46:40,159
and based on the traffic type there

2255
01:46:38,639 --> 01:46:42,719
could be we could

2256
01:46:40,159 --> 01:46:45,599
we could have a different metric type

2257
01:46:42,719 --> 01:46:46,639
and those types would be miot urlc and

2258
01:46:45,600 --> 01:46:54,719
embb

2259
01:46:46,639 --> 01:46:57,040
once we have that then next slide please

2260
01:46:54,719 --> 01:46:59,520
yeah once we have that uh different

2261
01:46:57,040 --> 01:47:03,040
mechanism a different metric type

2262
01:46:59,520 --> 01:47:04,320
uh for that um the packets coming from

2263
01:47:03,040 --> 01:47:07,760
the usa to the

2264
01:47:04,320 --> 01:47:10,480
uh pe uh based on that

2265
01:47:07,760 --> 01:47:12,159
once we classify applied the metric type

2266
01:47:10,480 --> 01:47:14,718
then is uh

2267
01:47:12,159 --> 01:47:16,480
this uh pc request uh message will go

2268
01:47:14,719 --> 01:47:17,119
with the metric type and the segments

2269
01:47:16,480 --> 01:47:20,239
could be

2270
01:47:17,119 --> 01:47:21,679
downloaded but segments once it is

2271
01:47:20,239 --> 01:47:24,799
downloaded then

2272
01:47:21,679 --> 01:47:26,719
based on that srt

2273
01:47:24,800 --> 01:47:28,639
path segments will be applied we would

2274
01:47:26,719 --> 01:47:32,320
impose the srt header

2275
01:47:28,639 --> 01:47:35,360
again it's a any um srm plss or v6

2276
01:47:32,320 --> 01:47:36,880
anything uh it could work either one ah

2277
01:47:35,360 --> 01:47:39,839
so that way we would

2278
01:47:36,880 --> 01:47:41,199
maintain that uh characteristics to that

2279
01:47:39,840 --> 01:47:44,800
data network

2280
01:47:41,199 --> 01:47:44,799
and next slide please

2281
01:47:47,520 --> 01:47:54,480
so next slide is the scenario three um

2282
01:47:51,440 --> 01:47:56,799
it doesn't have to be um any uh it can

2283
01:47:54,480 --> 01:47:58,959
work with any so basically it's

2284
01:47:56,800 --> 01:48:00,000
the captures is it can work within any

2285
01:47:58,960 --> 01:48:02,880
mechanism

2286
01:48:00,000 --> 01:48:04,560
either sr policy sufficients or we could

2287
01:48:02,880 --> 01:48:07,679
have a uh

2288
01:48:04,560 --> 01:48:10,080
uh recep session

2289
01:48:07,679 --> 01:48:12,159
or we could have a restaurant grpc

2290
01:48:10,080 --> 01:48:14,000
sessions with the srt controller in this

2291
01:48:12,159 --> 01:48:17,199
picture kind of it's assumed that it's

2292
01:48:14,000 --> 01:48:20,000
bgb srt controller uh so same way

2293
01:48:17,199 --> 01:48:21,199
uh the 5g metadata sub tlp with other

2294
01:48:20,000 --> 01:48:23,920
policies

2295
01:48:21,199 --> 01:48:25,599
uh could be downloaded over restaurant

2296
01:48:23,920 --> 01:48:28,159
for grpcs

2297
01:48:25,600 --> 01:48:28,960
and the it's pretty much the scenario

2298
01:48:28,159 --> 01:48:32,320
one

2299
01:48:28,960 --> 01:48:36,239
once that udp source port information is

2300
01:48:32,320 --> 01:48:39,040
uh uh in um been stripped out

2301
01:48:36,239 --> 01:48:39,919
that's uh based on that like once you

2302
01:48:39,040 --> 01:48:43,600
will see like

2303
01:48:39,920 --> 01:48:45,280
which if it is uh which range it belongs

2304
01:48:43,600 --> 01:48:48,000
and based on that corresponding sr

2305
01:48:45,280 --> 01:48:51,199
policy would be applied

2306
01:48:48,000 --> 01:48:52,800
to carry over the packet over the data

2307
01:48:51,199 --> 01:48:56,080
network

2308
01:48:52,800 --> 01:48:59,679
so that's some kind of uh there are

2309
01:48:56,080 --> 01:49:00,480
multiple ways uh this mechanism will

2310
01:48:59,679 --> 01:49:03,840
work

2311
01:49:00,480 --> 01:49:05,199
to map that um the

2312
01:49:03,840 --> 01:49:07,280
transport characteristics which is

2313
01:49:05,199 --> 01:49:08,080
coming from that mobility sites will

2314
01:49:07,280 --> 01:49:11,280
carry to the

2315
01:49:08,080 --> 01:49:15,840
uh over the data network

2316
01:49:11,280 --> 01:49:15,840
yeah so next slide please

2317
01:49:17,280 --> 01:49:23,519
so next uh this slides its captures it's

2318
01:49:20,480 --> 01:49:27,199
a how we can integrate with a

2319
01:49:23,520 --> 01:49:29,280
sd-wan case uh the

2320
01:49:27,199 --> 01:49:30,320
earlier we saw kind of how we are

2321
01:49:29,280 --> 01:49:33,360
integrating uh

2322
01:49:30,320 --> 01:49:36,159
the what the uh with the p

2323
01:49:33,360 --> 01:49:37,679
ingress p and where it has a uh srt

2324
01:49:36,159 --> 01:49:41,839
connections with the controller

2325
01:49:37,679 --> 01:49:42,560
so here it's a uh in that more of a sdn

2326
01:49:41,840 --> 01:49:46,880
use case

2327
01:49:42,560 --> 01:49:50,159
and there is a bgp sdn usage

2328
01:49:46,880 --> 01:49:52,960
uh draft where it defines that sdn use

2329
01:49:50,159 --> 01:49:57,199
cases so now in the hybrid use case

2330
01:49:52,960 --> 01:50:00,400
uh we will have secure tunnels

2331
01:49:57,199 --> 01:50:02,159
and or unsecured paths like mpls or

2332
01:50:00,400 --> 01:50:05,280
vxlan tunnels between the

2333
01:50:02,159 --> 01:50:09,598
different edge nodes or cloud gateway

2334
01:50:05,280 --> 01:50:11,840
and in that case again upf uh could be

2335
01:50:09,599 --> 01:50:13,840
part of the tsd and edge node or could

2336
01:50:11,840 --> 01:50:15,440
be connected over ip network and this is

2337
01:50:13,840 --> 01:50:18,960
the scenario more of a scenario of

2338
01:50:15,440 --> 01:50:20,960
enterprise 5g now existing uh

2339
01:50:18,960 --> 01:50:22,000
tnr mobility dropped in the latest

2340
01:50:20,960 --> 01:50:26,159
revision

2341
01:50:22,000 --> 01:50:26,159
it is expect uh to

2342
01:50:27,679 --> 01:50:31,679
uh which is pretty important for the

2343
01:50:30,159 --> 01:50:34,239
mobile traffic

2344
01:50:31,679 --> 01:50:36,000
now based on that uh udp source port

2345
01:50:34,239 --> 01:50:37,519
characteristics are coming from the

2346
01:50:36,000 --> 01:50:40,320
mobile traffic

2347
01:50:37,520 --> 01:50:41,199
the sd and edge node would be able to

2348
01:50:40,320 --> 01:50:44,960
map

2349
01:50:41,199 --> 01:50:48,159
either secure tunnel or unsecure tunnel

2350
01:50:44,960 --> 01:50:48,159
so next slide please

2351
01:50:50,639 --> 01:50:56,960
yeah this figure uh captures uh

2352
01:50:54,239 --> 01:50:58,159
between the two uh sd and edge node

2353
01:50:56,960 --> 01:51:00,560
connectivity here

2354
01:50:58,159 --> 01:51:02,559
one side is the cpe node which is kind

2355
01:51:00,560 --> 01:51:05,119
of co-located with the upf

2356
01:51:02,560 --> 01:51:06,480
the other one is representing its cloud

2357
01:51:05,119 --> 01:51:09,759
gateway

2358
01:51:06,480 --> 01:51:11,440
where we have a secure paths uh

2359
01:51:09,760 --> 01:51:13,440
secure tunnels established between the

2360
01:51:11,440 --> 01:51:17,119
two endpoints and we also have a

2361
01:51:13,440 --> 01:51:19,519
uh mpls path uh between the two

2362
01:51:17,119 --> 01:51:20,960
endpoints so when the traffic comes

2363
01:51:19,520 --> 01:51:23,119
again um

2364
01:51:20,960 --> 01:51:24,239
based on that uh udp source port

2365
01:51:23,119 --> 01:51:27,280
information

2366
01:51:24,239 --> 01:51:28,959
like if it is uh if it is carrying that

2367
01:51:27,280 --> 01:51:30,559
security characteristics then the

2368
01:51:28,960 --> 01:51:32,480
security would be given a higher

2369
01:51:30,560 --> 01:51:35,760
priority and then um

2370
01:51:32,480 --> 01:51:36,879
it would be applied um it would be

2371
01:51:35,760 --> 01:51:39,760
applied to one of the

2372
01:51:36,880 --> 01:51:41,040
underlay of secure tunnel ipsec this

2373
01:51:39,760 --> 01:51:43,040
secure tunnel

2374
01:51:41,040 --> 01:51:44,400
and the packet will go to the other side

2375
01:51:43,040 --> 01:51:47,360
and uh in case

2376
01:51:44,400 --> 01:51:49,679
if it is coming without security

2377
01:51:47,360 --> 01:51:51,839
characteristics then

2378
01:51:49,679 --> 01:51:54,000
based on the characteristics mpls or

2379
01:51:51,840 --> 01:51:57,520
vxlan tunnel could be used

2380
01:51:54,000 --> 01:52:03,040
to take the packet to the other sides

2381
01:51:57,520 --> 01:52:06,400
next slide please

2382
01:52:03,040 --> 01:52:08,880
yeah as a next step we need to get a um

2383
01:52:06,400 --> 01:52:10,159
anal code allocations for 5g metadata

2384
01:52:08,880 --> 01:52:13,920
subtly

2385
01:52:10,159 --> 01:52:16,320
ah the sd-wan use case also would be

2386
01:52:13,920 --> 01:52:17,520
extended to integrate with a certificate

2387
01:52:16,320 --> 01:52:19,759
mapping so that's like

2388
01:52:17,520 --> 01:52:20,719
not only just the security is kind of a

2389
01:52:19,760 --> 01:52:23,199
taken care

2390
01:52:20,719 --> 01:52:24,239
but with the security sla also would be

2391
01:52:23,199 --> 01:52:27,519
maintained

2392
01:52:24,239 --> 01:52:30,879
when we have the srt integrations

2393
01:52:27,520 --> 01:52:33,119
so comments are welcome so i'll stop

2394
01:52:30,880 --> 01:52:33,119
here

2395
01:52:37,920 --> 01:52:42,000
yeah drew yeah hi uh kaushik uh even

2396
01:52:41,040 --> 01:52:43,679
stefan

2397
01:52:42,000 --> 01:52:45,280
pointed this out and we were discussing

2398
01:52:43,679 --> 01:52:47,599
this on the chat that

2399
01:52:45,280 --> 01:52:49,599
flow spec would be a much better choice

2400
01:52:47,599 --> 01:52:51,679
it will provide you much more

2401
01:52:49,599 --> 01:52:53,840
uh granularity for steering and we

2402
01:52:51,679 --> 01:52:56,400
already have a mechanism both in bgp

2403
01:52:53,840 --> 01:52:58,480
and psep to do generic flow

2404
01:52:56,400 --> 01:52:59,040
specifications so why did you not use

2405
01:52:58,480 --> 01:53:01,598
that

2406
01:52:59,040 --> 01:53:04,000
and instead defined a new 5g metadata

2407
01:53:01,599 --> 01:53:07,360
sub tlv

2408
01:53:04,000 --> 01:53:09,840
um show it to me like

2409
01:53:07,360 --> 01:53:12,320
you mean in the uh the sr policy

2410
01:53:09,840 --> 01:53:15,040
suppressation case

2411
01:53:12,320 --> 01:53:16,239
both in bgp and pcep we have a flow

2412
01:53:15,040 --> 01:53:18,400
specification

2413
01:53:16,239 --> 01:53:19,678
where you can have much more granule

2414
01:53:18,400 --> 01:53:22,879
granule control of

2415
01:53:19,679 --> 01:53:26,000
defining which flows needs to flow in

2416
01:53:22,880 --> 01:53:26,639
sr policy or even in any psep uh base

2417
01:53:26,000 --> 01:53:29,280
tunnel

2418
01:53:26,639 --> 01:53:30,800
so we have much better techniques uh in

2419
01:53:29,280 --> 01:53:34,239
my opinion so maybe

2420
01:53:30,800 --> 01:53:35,360
did you were aware of uh uh no no i am

2421
01:53:34,239 --> 01:53:38,638
aware of that i i'm

2422
01:53:35,360 --> 01:53:40,960
a juvenile of that but um

2423
01:53:38,639 --> 01:53:43,119
means uh not always the flow spec uh

2424
01:53:40,960 --> 01:53:46,480
would be integrated in a network like

2425
01:53:43,119 --> 01:53:48,559
this is uh means this kind of um

2426
01:53:46,480 --> 01:53:50,638
this is a generic approach like already

2427
01:53:48,560 --> 01:53:53,440
it has a p already has a

2428
01:53:50,639 --> 01:53:54,239
sufficience or a precept sessions like

2429
01:53:53,440 --> 01:53:57,040
we we

2430
01:53:54,239 --> 01:53:57,919
anyway we need that uh kind of this

2431
01:53:57,040 --> 01:54:00,719
metadata

2432
01:53:57,920 --> 01:54:01,760
the 5g this this only captures the udp

2433
01:54:00,719 --> 01:54:03,920
source port

2434
01:54:01,760 --> 01:54:05,440
uh start value and value that's either

2435
01:54:03,920 --> 01:54:08,239
you do it with the close pack

2436
01:54:05,440 --> 01:54:08,879
or kind of do it with the sap sessions

2437
01:54:08,239 --> 01:54:11,598
not

2438
01:54:08,880 --> 01:54:11,599
introducing it

2439
01:54:17,840 --> 01:54:22,080
sub dlp ah for the sufficients for pc

2440
01:54:20,960 --> 01:54:24,880
case anyway we need

2441
01:54:22,080 --> 01:54:25,519
some metric type and restaurant it's the

2442
01:54:24,880 --> 01:54:30,159
same thing

2443
01:54:25,520 --> 01:54:30,159
so i don't see huge advantage

2444
01:54:30,400 --> 01:54:37,199
but we can discuss more i'm

2445
01:54:33,599 --> 01:54:40,239
open for you if you have kind of

2446
01:54:37,199 --> 01:54:43,280
other thoughts we couldn't we can talk

2447
01:54:40,239 --> 01:54:51,839
more sure let's take this plane

2448
01:54:43,280 --> 01:54:51,840
yeah sure

2449
01:54:56,000 --> 01:55:07,520
uh uma do you want to unview yourself

2450
01:55:04,320 --> 01:55:10,880
uh hi can you hear me yeah

2451
01:55:07,520 --> 01:55:12,639
ah okay i just want to answer drew uh so

2452
01:55:10,880 --> 01:55:14,239
this is yes flowstar can be used

2453
01:55:12,639 --> 01:55:15,360
definitely that will give much more

2454
01:55:14,239 --> 01:55:18,718
granular flow

2455
01:55:15,360 --> 01:55:21,440
specification at the upfront scenario

2456
01:55:18,719 --> 01:55:22,639
but here the case is like the grand lot

2457
01:55:21,440 --> 01:55:24,080
is not required

2458
01:55:22,639 --> 01:55:27,440
rather than he wants to maintain

2459
01:55:24,080 --> 01:55:29,040
end-to-end uh rtslis like if you are

2460
01:55:27,440 --> 01:55:30,400
end-to-end sla both in the mobility

2461
01:55:29,040 --> 01:55:31,040
domain and the internet domain if you

2462
01:55:30,400 --> 01:55:32,719
want

2463
01:55:31,040 --> 01:55:34,320
security or one of their 30

2464
01:55:32,719 --> 01:55:34,960
characteristics he wants to maintain

2465
01:55:34,320 --> 01:55:36,239
that

2466
01:55:34,960 --> 01:55:37,920
and you want to maintain the same

2467
01:55:36,239 --> 01:55:39,598
character that's used in the mobility

2468
01:55:37,920 --> 01:55:40,880
domain which is the udp source based

2469
01:55:39,599 --> 01:55:43,440
port

2470
01:55:40,880 --> 01:55:47,840
so yeah you can use both ways actually

2471
01:55:43,440 --> 01:55:51,040
to me

2472
01:55:47,840 --> 01:55:53,760
thanks so much i have a question

2473
01:55:51,040 --> 01:55:55,040
as a working participant so you're

2474
01:55:53,760 --> 01:55:58,880
limited by

2475
01:55:55,040 --> 01:56:01,760
udp 16-bit space

2476
01:55:58,880 --> 01:56:04,480
why don't we looking up key ideas well

2477
01:56:01,760 --> 01:56:08,159
to make it t80 plus

2478
01:56:04,480 --> 01:56:08,159
udp port source range

2479
01:56:11,440 --> 01:56:15,360
oh my gosh either of you sorry can you

2480
01:56:14,719 --> 01:56:18,000
repeat

2481
01:56:15,360 --> 01:56:18,480
what is that sorry jeff uh now you are

2482
01:56:18,000 --> 01:56:21,040
only

2483
01:56:18,480 --> 01:56:22,480
looking up at the udp source port range

2484
01:56:21,040 --> 01:56:25,119
so you're limited by

2485
01:56:22,480 --> 01:56:26,320
sixty five thousand ports right correct

2486
01:56:25,119 --> 01:56:29,920
if you would look up

2487
01:56:26,320 --> 01:56:32,080
tid so gtp header next

2488
01:56:29,920 --> 01:56:32,960
okay okay it will give you much better

2489
01:56:32,080 --> 01:56:34,880
context

2490
01:56:32,960 --> 01:56:36,800
yeah yeah i think this is discussed in

2491
01:56:34,880 --> 01:56:38,800
the dmm draft jeff i think the problem

2492
01:56:36,800 --> 01:56:40,800
is ti id is a scalar

2493
01:56:38,800 --> 01:56:42,480
uh it doesn't represent the properties

2494
01:56:40,800 --> 01:56:45,040
we are seeking and the ta

2495
01:56:42,480 --> 01:56:46,559
id is overloaded with uh 5g control

2496
01:56:45,040 --> 01:56:48,960
plane characteristics so we don't want

2497
01:56:46,560 --> 01:56:51,840
to touch that right so that's the reason

2498
01:56:48,960 --> 01:56:52,880
um we had a small calculation one of the

2499
01:56:51,840 --> 01:56:54,480
uh texas guess

2500
01:56:52,880 --> 01:56:56,080
which we fire wireless guys they did the

2501
01:56:54,480 --> 01:56:58,879
calculation how many

2502
01:56:56,080 --> 01:57:00,800
uh slices and how many uh characters it

2503
01:56:58,880 --> 01:57:03,440
can be done in a typical network

2504
01:57:00,800 --> 01:57:05,040
so that that calculation is uh there in

2505
01:57:03,440 --> 01:57:07,519
the dmm draft so

2506
01:57:05,040 --> 01:57:10,320
now we found out that for most practical

2507
01:57:07,520 --> 01:57:10,320
deployments the

2508
01:57:11,119 --> 01:57:15,119
ranges are good enough actually we uh

2509
01:57:13,199 --> 01:57:17,919
the problem is we are limited by

2510
01:57:15,119 --> 01:57:20,080
uh what you call what you can put in the

2511
01:57:17,920 --> 01:57:21,280
packet right so we don't want to enhance

2512
01:57:20,080 --> 01:57:23,840
too many things in the

2513
01:57:21,280 --> 01:57:26,080
all the data planes so that's why we

2514
01:57:23,840 --> 01:57:27,679
limited with that udp so sport yeah

2515
01:57:26,080 --> 01:57:31,599
it's kind of middle ground approach we

2516
01:57:27,679 --> 01:57:31,599
took okay thank you

2517
01:57:36,400 --> 01:57:39,839
any other questions

2518
01:57:42,239 --> 01:57:46,159
so thanks everyone uh we are giving you

2519
01:57:44,800 --> 01:57:50,239
three minutes back

2520
01:57:46,159 --> 01:57:50,239
and uh we hope to see you tomorrow

2521
01:57:50,320 --> 01:57:55,519
have a good evening morning everyone

2522
01:57:54,080 --> 01:57:58,320
yeah thanks a lot but i'm feeling

2523
01:57:55,520 --> 01:57:58,320
isolated again

2524
01:57:58,800 --> 01:58:07,840
tony don't we are with you

2525
01:58:41,199 --> 01:58:43,280
you

