1
00:00:05,040 --> 00:00:09,440
i'll leave my video up but put myself on

2
00:00:07,120 --> 00:00:11,280
me when other people are talking

3
00:00:09,440 --> 00:00:13,840
and it is time so let's get started

4
00:00:11,280 --> 00:00:14,959
welcome to the jam up session at iatf

5
00:00:13,840 --> 00:00:16,800
109

6
00:00:14,960 --> 00:00:18,160
sadly not in bangkok which i'm very

7
00:00:16,800 --> 00:00:19,600
disappointed about because i was sick

8
00:00:18,160 --> 00:00:21,600
last time we were in bangkok

9
00:00:19,600 --> 00:00:23,359
and did not get to enjoy the city as

10
00:00:21,600 --> 00:00:26,960
much so i would have liked to

11
00:00:23,359 --> 00:00:29,279
anyway as always um

12
00:00:26,960 --> 00:00:30,000
all of the work we do here is under the

13
00:00:29,279 --> 00:00:32,719
note well this

14
00:00:30,000 --> 00:00:34,480
is the same slide i used a year ago so

15
00:00:32,719 --> 00:00:36,640
hopefully it is still accurate i don't

16
00:00:34,480 --> 00:00:38,718
think anything's changed in that time

17
00:00:36,640 --> 00:00:40,640
um all the work you do here contributes

18
00:00:38,719 --> 00:00:42,559
to the itf and is under

19
00:00:40,640 --> 00:00:44,239
all of the policies the ietf which i'm

20
00:00:42,559 --> 00:00:47,120
sure you have already in great detail

21
00:00:44,239 --> 00:00:49,280
and will obey thank you very much

22
00:00:47,120 --> 00:00:51,599
moving along to our agenda we have one

23
00:00:49,280 --> 00:00:53,520
hour to get everything done here

24
00:00:51,600 --> 00:00:56,079
so we're going to be discussing first

25
00:00:53,520 --> 00:00:58,239
status of gem at mdn which

26
00:00:56,079 --> 00:00:59,680
is a little bit tricky because our area

27
00:00:58,239 --> 00:01:02,000
director is not here

28
00:00:59,680 --> 00:01:02,719
and that's waiting on him um then

29
00:01:02,000 --> 00:01:04,319
discuss

30
00:01:02,719 --> 00:01:07,760
the three current work items that we

31
00:01:04,319 --> 00:01:10,240
have talk about my gem at blob spec

32
00:01:07,760 --> 00:01:12,159
and then a discussion about jam up for

33
00:01:10,240 --> 00:01:15,199
data portability this came up

34
00:01:12,159 --> 00:01:15,200
in the calconet core

35
00:01:15,360 --> 00:01:18,720
europe is working on data portability

36
00:01:17,360 --> 00:01:21,360
requirements for

37
00:01:18,720 --> 00:01:21,920
a whole stack of services and a lot of

38
00:01:21,360 --> 00:01:23,920
the

39
00:01:21,920 --> 00:01:25,360
data about people and personal

40
00:01:23,920 --> 00:01:28,080
information management

41
00:01:25,360 --> 00:01:30,159
is things that jmap or jmf adjacent work

42
00:01:28,080 --> 00:01:31,520
is building data formats for so talking

43
00:01:30,159 --> 00:01:32,880
about whether some of the other formats

44
00:01:31,520 --> 00:01:35,280
for personal data

45
00:01:32,880 --> 00:01:37,039
should also have i guess something like

46
00:01:35,280 --> 00:01:39,520
a js contact

47
00:01:37,040 --> 00:01:40,880
defined and then a jmap way to access

48
00:01:39,520 --> 00:01:42,560
that data which

49
00:01:40,880 --> 00:01:43,920
can hopefully become the standard

50
00:01:42,560 --> 00:01:46,240
interchange format

51
00:01:43,920 --> 00:01:47,840
for different services that provide that

52
00:01:46,240 --> 00:01:50,240
kind of data

53
00:01:47,840 --> 00:01:50,240
all right

54
00:01:51,200 --> 00:01:55,520
moving on i will i guess i'll talk to

55
00:01:53,439 --> 00:01:58,398
barry at some later stage about the

56
00:01:55,520 --> 00:02:00,399
area director follow-up for mdn i

57
00:01:58,399 --> 00:02:02,399
haven't seen any feedback that requires

58
00:02:00,399 --> 00:02:05,439
anything at this point so

59
00:02:02,399 --> 00:02:09,840
i'll push straight ahead for now to jam

60
00:02:05,439 --> 00:02:09,840
up calendars and to neil slides

61
00:02:13,280 --> 00:02:23,840
this one

62
00:02:30,879 --> 00:02:38,160
no you can just speak oh cool okay

63
00:02:34,720 --> 00:02:41,359
uh right so this is just um an update on

64
00:02:38,160 --> 00:02:42,879
gmat for calendars um they're kind of

65
00:02:41,360 --> 00:02:43,360
jamming according to calder for those

66
00:02:42,879 --> 00:02:47,280
that

67
00:02:43,360 --> 00:02:48,400
um are new here uh their current status

68
00:02:47,280 --> 00:02:50,080
is basically

69
00:02:48,400 --> 00:02:51,599
getting implementation experience now

70
00:02:50,080 --> 00:02:55,280
and then making further

71
00:02:51,599 --> 00:02:57,679
uh refinements based on that uh

72
00:02:55,280 --> 00:02:59,280
so some of the things i've got a few

73
00:02:57,680 --> 00:03:00,720
questions uh i'd like to discuss on the

74
00:02:59,280 --> 00:03:02,720
next uh two slides

75
00:03:00,720 --> 00:03:05,280
uh about some things run into whilst

76
00:03:02,720 --> 00:03:08,560
implementing their current draft

77
00:03:05,280 --> 00:03:10,080
so the first uh point is about adding

78
00:03:08,560 --> 00:03:10,800
invitations to a calendar so if you

79
00:03:10,080 --> 00:03:13,920
receive an

80
00:03:10,800 --> 00:03:16,000
i message via email

81
00:03:13,920 --> 00:03:16,958
and you want to add that into your

82
00:03:16,000 --> 00:03:19,519
calendar

83
00:03:16,959 --> 00:03:21,360
it's fine if the calendar server itself

84
00:03:19,519 --> 00:03:21,760
is processing the imit message because

85
00:03:21,360 --> 00:03:23,200
it

86
00:03:21,760 --> 00:03:25,120
doesn't have to follow your normal

87
00:03:23,200 --> 00:03:27,359
permissions but if

88
00:03:25,120 --> 00:03:28,560
uh some client that's completely

89
00:03:27,360 --> 00:03:30,159
external to calendar is trying to do

90
00:03:28,560 --> 00:03:32,159
this via jmap

91
00:03:30,159 --> 00:03:33,519
normally the permissions would not

92
00:03:32,159 --> 00:03:35,359
necessarily let you

93
00:03:33,519 --> 00:03:36,640
add an event where you're not the owner

94
00:03:35,360 --> 00:03:38,080
and you may not have

95
00:03:36,640 --> 00:03:40,000
the permission to update it either if

96
00:03:38,080 --> 00:03:42,319
you receive an update from the

97
00:03:40,000 --> 00:03:43,280
um from the organizer because it doesn't

98
00:03:42,319 --> 00:03:44,798
know

99
00:03:43,280 --> 00:03:46,799
that it's not really you that's updating

100
00:03:44,799 --> 00:03:48,080
it it's you've received this and you're

101
00:03:46,799 --> 00:03:48,959
kind of passing it on to the calendar

102
00:03:48,080 --> 00:03:51,360
server

103
00:03:48,959 --> 00:03:52,640
so i was just um want to bring that up

104
00:03:51,360 --> 00:03:54,080
as is this something

105
00:03:52,640 --> 00:03:55,040
we want to handle or should it just be

106
00:03:54,080 --> 00:03:56,239
that you know you have to have the

107
00:03:55,040 --> 00:03:57,280
calendar server should integrate

108
00:03:56,239 --> 00:03:58,799
properly with your

109
00:03:57,280 --> 00:04:01,599
email and have some back channel for

110
00:03:58,799 --> 00:04:04,159
updating it and if we do want to

111
00:04:01,599 --> 00:04:05,439
handle this how should that happen like

112
00:04:04,159 --> 00:04:06,720
without that really kind of

113
00:04:05,439 --> 00:04:09,120
making the whole permissions model

114
00:04:06,720 --> 00:04:09,120
pointless

115
00:04:11,360 --> 00:04:28,880
does anyone have any ideas or any

116
00:04:13,680 --> 00:04:32,160
comments i guess

117
00:04:28,880 --> 00:04:34,240
what the caldap servers currently do

118
00:04:32,160 --> 00:04:35,840
that is a very good question i'm not

119
00:04:34,240 --> 00:04:36,400
actually 100 sure i need to check that

120
00:04:35,840 --> 00:04:39,679
again

121
00:04:36,400 --> 00:04:39,679
i think they

122
00:04:40,240 --> 00:04:43,280
i think they don't really enforce the

123
00:04:41,759 --> 00:04:44,160
permissions i think commission's always

124
00:04:43,280 --> 00:04:47,359
just

125
00:04:44,160 --> 00:04:49,040
kind of done in the clients to stop

126
00:04:47,360 --> 00:04:51,120
users from

127
00:04:49,040 --> 00:04:52,240
making changes that kind of are

128
00:04:51,120 --> 00:04:53,520
considered

129
00:04:52,240 --> 00:04:55,199
frowned upon perhaps would be the way of

130
00:04:53,520 --> 00:04:56,320
putting it but it's more gentleman's

131
00:04:55,199 --> 00:04:59,759
agreement than actual

132
00:04:56,320 --> 00:05:02,159
enforcement um yeah but

133
00:04:59,759 --> 00:05:03,280
yeah um yes we should definitely double

134
00:05:02,160 --> 00:05:04,240
check that and this is probably

135
00:05:03,280 --> 00:05:05,840
something you know

136
00:05:04,240 --> 00:05:08,000
like all the german calendar stuff to

137
00:05:05,840 --> 00:05:10,719
discuss it um calculated to

138
00:05:08,000 --> 00:05:11,440
the next time we meet there but i

139
00:05:10,720 --> 00:05:13,039
thought i'd

140
00:05:11,440 --> 00:05:14,639
bring that up as this yeah this is one

141
00:05:13,039 --> 00:05:16,800
of the issues i

142
00:05:14,639 --> 00:05:18,960
think needs to be resolved now for this

143
00:05:16,800 --> 00:05:18,960
um

144
00:05:19,680 --> 00:05:23,039
if it's your personal copy of the event

145
00:05:21,759 --> 00:05:24,960
you should be able to do pretty much

146
00:05:23,039 --> 00:05:26,880
what you want that the permissions are

147
00:05:24,960 --> 00:05:28,159
there to stop you making mistakes rather

148
00:05:26,880 --> 00:05:30,960
than to

149
00:05:28,160 --> 00:05:34,400
to stop you presenting the data to

150
00:05:30,960 --> 00:05:37,440
yourself in the way that you would like

151
00:05:34,400 --> 00:05:41,840
i guess that yes that's fine

152
00:05:37,440 --> 00:05:41,840
so long as then

153
00:05:42,160 --> 00:05:46,479
you need some way of adding the event

154
00:05:44,720 --> 00:05:47,120
while saying i do not claim ownership of

155
00:05:46,479 --> 00:05:49,120
it so

156
00:05:47,120 --> 00:05:51,680
don't send out invitations and stuff for

157
00:05:49,120 --> 00:05:55,520
this um

158
00:05:51,680 --> 00:05:57,039
potentially uh

159
00:05:55,520 --> 00:05:59,198
which you could know just by looking at

160
00:05:57,039 --> 00:05:59,199
the

161
00:06:00,720 --> 00:06:09,120
reply to address actually okay oh

162
00:06:06,720 --> 00:06:10,319
having to say i want to send invitations

163
00:06:09,120 --> 00:06:13,759
for this rather than

164
00:06:10,319 --> 00:06:18,800
um having them be automatic

165
00:06:13,759 --> 00:06:20,560
sure um but

166
00:06:18,800 --> 00:06:22,720
i think there's still a a permissions

167
00:06:20,560 --> 00:06:24,479
thing of you know

168
00:06:22,720 --> 00:06:26,319
generally we're moving away from letting

169
00:06:24,479 --> 00:06:28,080
the server just arbitrarily send

170
00:06:26,319 --> 00:06:29,680
invitations from any address without

171
00:06:28,080 --> 00:06:33,120
checking that the user owns

172
00:06:29,680 --> 00:06:36,319
that address yeah yeah

173
00:06:33,120 --> 00:06:37,680
um cool yeah okay i'll

174
00:06:36,319 --> 00:06:39,759
think about that and we'll discuss it

175
00:06:37,680 --> 00:06:43,120
next calculate perhaps uh

176
00:06:39,759 --> 00:06:46,960
and so go on to the next slide

177
00:06:43,120 --> 00:06:49,840
uh this has got a bunch of

178
00:06:46,960 --> 00:06:50,960
questions all related to um scheduling

179
00:06:49,840 --> 00:06:53,198
again of course uh

180
00:06:50,960 --> 00:06:54,880
and this point uh in this case the

181
00:06:53,199 --> 00:06:59,280
participant identities so

182
00:06:54,880 --> 00:07:01,199
this is um about who

183
00:06:59,280 --> 00:07:03,280
who you are in the calendar essentially

184
00:07:01,199 --> 00:07:05,120
like which which email addresses

185
00:07:03,280 --> 00:07:06,880
or it's not actually necessarily email

186
00:07:05,120 --> 00:07:08,639
addresses because

187
00:07:06,880 --> 00:07:10,800
um it could be different scheduling

188
00:07:08,639 --> 00:07:11,440
protocols but which participants in an

189
00:07:10,800 --> 00:07:13,919
event

190
00:07:11,440 --> 00:07:16,479
um should be considered as the user

191
00:07:13,919 --> 00:07:20,000
that's currently using the calendar

192
00:07:16,479 --> 00:07:23,520
so at the moment uh they

193
00:07:20,000 --> 00:07:25,520
are uh on the calendar as i just

194
00:07:23,520 --> 00:07:27,520
property on the calendar objects um

195
00:07:25,520 --> 00:07:29,120
but as we discussed the last meeting i

196
00:07:27,520 --> 00:07:30,799
think we're gonna move those

197
00:07:29,120 --> 00:07:32,160
to be per account from the calendar

198
00:07:30,800 --> 00:07:33,360
because we're going to allow an event to

199
00:07:32,160 --> 00:07:34,720
be in multiple calendars and so it

200
00:07:33,360 --> 00:07:35,919
doesn't make sense that

201
00:07:34,720 --> 00:07:38,560
those calendars would have different

202
00:07:35,919 --> 00:07:40,318
sets of identities and i think generally

203
00:07:38,560 --> 00:07:41,919
um it's you're going to have different

204
00:07:40,319 --> 00:07:43,199
accounts where you have different

205
00:07:41,919 --> 00:07:45,440
sets of identities so that should be

206
00:07:43,199 --> 00:07:48,000
fine uh

207
00:07:45,440 --> 00:07:49,759
once we do that uh my first thing should

208
00:07:48,000 --> 00:07:51,120
this be a data type rather than just a

209
00:07:49,759 --> 00:07:54,560
property on the account subject

210
00:07:51,120 --> 00:07:56,160
um which i think it probably should um

211
00:07:54,560 --> 00:07:57,680
so it's just you can do a standard get

212
00:07:56,160 --> 00:07:59,039
and

213
00:07:57,680 --> 00:08:00,800
fetch them and that makes a lot easier

214
00:07:59,039 --> 00:08:01,840
if there's changes on the server you use

215
00:08:00,800 --> 00:08:03,199
the standard push method

216
00:08:01,840 --> 00:08:06,000
and everything else to get the latest

217
00:08:03,199 --> 00:08:08,319
the updates rather than being

218
00:08:06,000 --> 00:08:09,599
stuck on the uh account uh capabilities

219
00:08:08,319 --> 00:08:12,720
object

220
00:08:09,599 --> 00:08:14,240
the more interesting question if we

221
00:08:12,720 --> 00:08:16,080
make it a day's type is then should that

222
00:08:14,240 --> 00:08:16,639
be merged with the mail identity data

223
00:08:16,080 --> 00:08:18,240
type

224
00:08:16,639 --> 00:08:19,840
which is a very related concept of the

225
00:08:18,240 --> 00:08:22,000
addresses i can send as

226
00:08:19,840 --> 00:08:24,080
if over mail or is it should it remain

227
00:08:22,000 --> 00:08:27,039
separate says anyone have any

228
00:08:24,080 --> 00:08:27,039
thoughts on on

229
00:08:39,519 --> 00:08:45,920
i mean are they you know like thing

230
00:08:44,000 --> 00:08:47,120
are there any other properties in it is

231
00:08:45,920 --> 00:08:50,880
it like this

232
00:08:47,120 --> 00:08:54,000
or remind me um so they have quite a few

233
00:08:50,880 --> 00:08:55,920
different properties uh so

234
00:08:54,000 --> 00:08:57,519
the mail one for example is things like

235
00:08:55,920 --> 00:09:01,279
um

236
00:08:57,519 --> 00:09:05,440
signature uh the

237
00:09:01,279 --> 00:09:07,360
the um the main things like the name

238
00:09:05,440 --> 00:09:09,120
the friendly name and the email address

239
00:09:07,360 --> 00:09:10,560
but then you have other things that are

240
00:09:09,120 --> 00:09:11,839
only going to be relevant for mail like

241
00:09:10,560 --> 00:09:15,119
signatures and stuff

242
00:09:11,839 --> 00:09:17,600
um whereas with uh calendars

243
00:09:15,120 --> 00:09:18,560
uh the name and email being useful but

244
00:09:17,600 --> 00:09:20,320
you also have

245
00:09:18,560 --> 00:09:22,079
i said it's not necessarily an email

246
00:09:20,320 --> 00:09:23,680
address we're associating it could be

247
00:09:22,080 --> 00:09:25,120
a different protocol that's being used

248
00:09:23,680 --> 00:09:28,160
for scheduling and so

249
00:09:25,120 --> 00:09:29,680
it's more uri that's this uri is

250
00:09:28,160 --> 00:09:31,279
representing this this user so that's

251
00:09:29,680 --> 00:09:33,599
kind of a separate property so there's

252
00:09:31,279 --> 00:09:36,560
some overlap but

253
00:09:33,600 --> 00:09:36,560
not complete overlap

254
00:09:38,270 --> 00:09:41,299
[Music]

255
00:09:45,279 --> 00:09:49,279
so why wouldn't we want participated

256
00:09:47,360 --> 00:09:52,320
entities on both the calendar

257
00:09:49,279 --> 00:09:52,880
and the um principal or account or

258
00:09:52,320 --> 00:09:55,279
whatever

259
00:09:52,880 --> 00:09:56,240
no no no no we wouldn't we we'd take

260
00:09:55,279 --> 00:09:59,120
them off the calendar

261
00:09:56,240 --> 00:10:00,399
and uh it would be its own data type

262
00:09:59,120 --> 00:10:02,079
that belonged to the account

263
00:10:00,399 --> 00:10:04,000
and there's one set of data type a set

264
00:10:02,079 --> 00:10:05,439
of participant identities for the

265
00:10:04,000 --> 00:10:06,160
account that applies to all calendars in

266
00:10:05,440 --> 00:10:09,360
that account

267
00:10:06,160 --> 00:10:09,839
does that make sense yeah so how would

268
00:10:09,360 --> 00:10:12,320
we

269
00:10:09,839 --> 00:10:13,440
then implement something like the

270
00:10:12,320 --> 00:10:16,000
secretary mold

271
00:10:13,440 --> 00:10:17,600
or however you might call it where you

272
00:10:16,000 --> 00:10:18,959
you find that somebody's acting on

273
00:10:17,600 --> 00:10:22,240
someone's behalf

274
00:10:18,959 --> 00:10:22,239
only for that calendar

275
00:10:22,640 --> 00:10:26,640
well so that that calendar would come

276
00:10:25,200 --> 00:10:29,360
from a different account

277
00:10:26,640 --> 00:10:30,160
this would only get problematic if that

278
00:10:29,360 --> 00:10:32,560
user

279
00:10:30,160 --> 00:10:34,240
wanted to share two different calendars

280
00:10:32,560 --> 00:10:36,319
in a single account

281
00:10:34,240 --> 00:10:38,000
one in secondary mode and one with not

282
00:10:36,320 --> 00:10:41,839
in sector mode that wouldn't be possible

283
00:10:38,000 --> 00:10:41,839
under this system um

284
00:10:42,079 --> 00:10:46,000
so i i don't think that's too bad a

285
00:10:45,519 --> 00:10:48,079
restriction

286
00:10:46,000 --> 00:10:50,640
like generally you might have team

287
00:10:48,079 --> 00:10:52,959
calendars like that that you're

288
00:10:50,640 --> 00:10:54,240
in um yeah personal mode not secondary

289
00:10:52,959 --> 00:10:56,479
mode i don't know what we call it

290
00:10:54,240 --> 00:10:57,360
um and those would be in an account that

291
00:10:56,480 --> 00:10:59,600
belonged to

292
00:10:57,360 --> 00:11:00,560
the group and then my individual

293
00:10:59,600 --> 00:11:02,560
calendars

294
00:11:00,560 --> 00:11:04,880
i might share with specific people and

295
00:11:02,560 --> 00:11:06,719
those would be in secondary mode

296
00:11:04,880 --> 00:11:08,079
um but i wouldn't share one of my

297
00:11:06,720 --> 00:11:10,000
individual calendars and allow

298
00:11:08,079 --> 00:11:15,519
you to act as yourself on it because

299
00:11:10,000 --> 00:11:18,880
that doesn't really make a lot of sense

300
00:11:15,519 --> 00:11:19,839
so this would mean if we have a couple

301
00:11:18,880 --> 00:11:23,040
of calendars

302
00:11:19,839 --> 00:11:28,560
and somebody sets the identities

303
00:11:23,040 --> 00:11:30,160
over cal dev so to say then we would

304
00:11:28,560 --> 00:11:31,760
we would need to look at the particular

305
00:11:30,160 --> 00:11:34,719
set of participant ids

306
00:11:31,760 --> 00:11:36,800
on a calendar and then split them up for

307
00:11:34,720 --> 00:11:40,959
chama in

308
00:11:36,800 --> 00:11:43,279
different accounts right well so

309
00:11:40,959 --> 00:11:44,560
i mean that this goes back to the

310
00:11:43,279 --> 00:11:45,920
question of whether an event should be

311
00:11:44,560 --> 00:11:49,439
allowed in multiple

312
00:11:45,920 --> 00:11:51,599
calendars um which has some nice

313
00:11:49,440 --> 00:11:53,440
properties and it's more consistent

314
00:11:51,600 --> 00:11:54,639
and that's what we're going to try doing

315
00:11:53,440 --> 00:11:56,639
but if we

316
00:11:54,639 --> 00:11:58,240
do that does that make compatibility

317
00:11:56,639 --> 00:11:58,480
with calder harder because obviously

318
00:11:58,240 --> 00:12:01,040
it's

319
00:11:58,480 --> 00:12:01,839
a different different model and so

320
00:12:01,040 --> 00:12:04,079
calendars within

321
00:12:01,839 --> 00:12:05,360
a single account have to have consultant

322
00:12:04,079 --> 00:12:08,079
identities and

323
00:12:05,360 --> 00:12:10,160
stuff the caldav model that we're trying

324
00:12:08,079 --> 00:12:13,199
to use at the moment is one that's a

325
00:12:10,160 --> 00:12:14,560
a draft spec that is not the same way

326
00:12:13,200 --> 00:12:16,000
that apple's doing it

327
00:12:14,560 --> 00:12:17,760
it was something that they proposed a

328
00:12:16,000 --> 00:12:20,160
while back and then cal connect

329
00:12:17,760 --> 00:12:22,000
went and rewrote so i don't think

330
00:12:20,160 --> 00:12:23,439
there's anything in caldav that's widely

331
00:12:22,000 --> 00:12:25,200
supported that

332
00:12:23,440 --> 00:12:26,959
allows for a set of participants per

333
00:12:25,200 --> 00:12:29,600
calendar at the moment it's all per

334
00:12:26,959 --> 00:12:30,160
per principle and then the principal is

335
00:12:29,600 --> 00:12:31,760
the same

336
00:12:30,160 --> 00:12:34,160
for all the calendars in an account

337
00:12:31,760 --> 00:12:35,279
already so yeah so in that case there's

338
00:12:34,160 --> 00:12:38,719
probably not so much

339
00:12:35,279 --> 00:12:40,160
yeah so so i think we're actually making

340
00:12:38,720 --> 00:12:42,079
it more like caldev

341
00:12:40,160 --> 00:12:43,519
sorry okay so that's what apple is doing

342
00:12:42,079 --> 00:12:46,319
then um

343
00:12:43,519 --> 00:12:46,959
it's splitting it up for principal right

344
00:12:46,320 --> 00:12:49,360
yep

345
00:12:46,959 --> 00:12:49,359
okay cool

346
00:12:50,000 --> 00:12:56,079
okay thank you

347
00:12:53,760 --> 00:12:57,519
uh okay so i think could it be its own

348
00:12:56,079 --> 00:12:59,519
separate object or not i think

349
00:12:57,519 --> 00:13:02,000
one identity regardless of the protocol

350
00:12:59,519 --> 00:13:02,000
makes sense

351
00:13:03,120 --> 00:13:07,040
so it was like anything should be a data

352
00:13:04,839 --> 00:13:08,399
type yeah i think it should be data type

353
00:13:07,040 --> 00:13:10,480
and just just use the

354
00:13:08,399 --> 00:13:11,600
uh just you know repurpose the existing

355
00:13:10,480 --> 00:13:14,959
mail identity

356
00:13:11,600 --> 00:13:14,959
for for participants

357
00:13:15,920 --> 00:13:22,479
okay you should be the same same object

358
00:13:19,360 --> 00:13:22,480
um yeah i don't know absolutely

359
00:13:22,720 --> 00:13:28,639
yep okay i'll try that and

360
00:13:26,320 --> 00:13:30,320
see how that's how it goes uh so so the

361
00:13:28,639 --> 00:13:33,760
other question i've posed on here

362
00:13:30,320 --> 00:13:35,360
which i came to is uh so when you're

363
00:13:33,760 --> 00:13:38,319
looking at an event and trying to decide

364
00:13:35,360 --> 00:13:39,440
if this is which participant you know um

365
00:13:38,320 --> 00:13:40,480
looking looking at the participants in

366
00:13:39,440 --> 00:13:42,560
the event and trying to decide if

367
00:13:40,480 --> 00:13:44,000
anything correspond to the identity

368
00:13:42,560 --> 00:13:46,399
that you have uh you're basically

369
00:13:44,000 --> 00:13:49,040
comparing two uris

370
00:13:46,399 --> 00:13:50,320
and i came into the issue of what case

371
00:13:49,040 --> 00:13:51,199
sensitivity should i be using for

372
00:13:50,320 --> 00:13:54,800
comparison

373
00:13:51,199 --> 00:13:56,399
um if one if i have a participant that's

374
00:13:54,800 --> 00:13:57,760
got a mail to ui for example which is

375
00:13:56,399 --> 00:13:58,320
you know mail two column and an email

376
00:13:57,760 --> 00:13:59,839
address

377
00:13:58,320 --> 00:14:01,760
and i have an identity with mail two

378
00:13:59,839 --> 00:14:03,920
column email address

379
00:14:01,760 --> 00:14:06,160
do i compare those case sensitively but

380
00:14:03,920 --> 00:14:08,000
the scheme bid is not case sensitive i

381
00:14:06,160 --> 00:14:08,560
don't think and neither is necessarily

382
00:14:08,000 --> 00:14:12,000
the

383
00:14:08,560 --> 00:14:15,680
uh another's domain part of an email

384
00:14:12,000 --> 00:14:16,959
uh so yes any thoughts on what we should

385
00:14:15,680 --> 00:14:19,359
do there

386
00:14:16,959 --> 00:14:22,239
shall we define it anyway the main part

387
00:14:19,360 --> 00:14:23,360
is case insensitive right

388
00:14:22,240 --> 00:14:25,760
now the main part is casing sensitive

389
00:14:23,360 --> 00:14:27,360
sorry yes whereas the mailbox part is

390
00:14:25,760 --> 00:14:31,839
potentially case sensitive although in

391
00:14:27,360 --> 00:14:31,839
practice almost no one does

392
00:14:34,560 --> 00:14:38,079
i think like 99 of the time probably

393
00:14:36,639 --> 00:14:40,000
case insensitive

394
00:14:38,079 --> 00:14:42,160
you know ascii case insensitive is the

395
00:14:40,000 --> 00:14:44,560
right thing to do and will

396
00:14:42,160 --> 00:14:46,480
work um but i wonder if we want to

397
00:14:44,560 --> 00:14:49,199
mandate that because that

398
00:14:46,480 --> 00:14:49,680
in theory could hit a problem if you had

399
00:14:49,199 --> 00:14:50,959
people

400
00:14:49,680 --> 00:14:53,920
using email addresses with

401
00:14:50,959 --> 00:14:57,760
case-sensitive mailbox parts um

402
00:14:53,920 --> 00:15:01,519
and conflicting ones of that i it seems

403
00:14:57,760 --> 00:15:01,519
unlikely but i don't know any thoughts

404
00:15:02,720 --> 00:15:07,199
it's almost uh like a question for email

405
00:15:05,440 --> 00:15:08,000
court to maybe clarify and make a

406
00:15:07,199 --> 00:15:13,839
stronger

407
00:15:08,000 --> 00:15:13,839
argument saying that if you ever do

408
00:15:15,120 --> 00:15:18,320
have a system where localhost you know

409
00:15:17,360 --> 00:15:21,519
local parts

410
00:15:18,320 --> 00:15:23,519
are case sensitive then you're in big

411
00:15:21,519 --> 00:15:24,800
troubles to begin with

412
00:15:23,519 --> 00:15:26,240
yeah i think you will be in big trouble

413
00:15:24,800 --> 00:15:26,719
these days so much the internet presumes

414
00:15:26,240 --> 00:15:29,600
that is

415
00:15:26,720 --> 00:15:30,720
case insensitive um well a lot of web

416
00:15:29,600 --> 00:15:33,440
services just like

417
00:15:30,720 --> 00:15:34,240
uppercase my email address right yeah

418
00:15:33,440 --> 00:15:36,240
yeah

419
00:15:34,240 --> 00:15:37,839
like air canada and it's like you know

420
00:15:36,240 --> 00:15:41,759
well

421
00:15:37,839 --> 00:15:43,120
okay yeah yeah that that isn't

422
00:15:41,759 --> 00:15:44,959
not a bad idea maybe we should just put

423
00:15:43,120 --> 00:15:46,720
out some kind of i don't know

424
00:15:44,959 --> 00:15:48,800
best practice or some document say look

425
00:15:46,720 --> 00:15:50,399
if you don't make this intensive you're

426
00:15:48,800 --> 00:15:54,560
in for a world of hurt so just

427
00:15:50,399 --> 00:15:57,839
don't do that um and then

428
00:15:54,560 --> 00:16:00,880
you cannot really compare your eyes case

429
00:15:57,839 --> 00:16:01,920
insensitively i think it has to be more

430
00:16:00,880 --> 00:16:03,600
nuanced than that

431
00:16:01,920 --> 00:16:05,680
unless you know you're comparing the

432
00:16:03,600 --> 00:16:09,839
same schema and then you know that the

433
00:16:05,680 --> 00:16:09,839
schema is case and sensitive

434
00:16:10,800 --> 00:16:15,439
being tricky yeah

435
00:16:13,839 --> 00:16:16,880
i mean most of the time it's going male

436
00:16:15,440 --> 00:16:19,759
2 schema at the moment but

437
00:16:16,880 --> 00:16:22,320
um i can definitely potentially in the

438
00:16:19,759 --> 00:16:25,360
future different

439
00:16:22,320 --> 00:16:25,360
schemas um

440
00:16:26,160 --> 00:16:31,680
well you cannot compare http your rice

441
00:16:28,399 --> 00:16:31,680
case and sensitively right

442
00:16:35,279 --> 00:16:38,480
you so you're saying you can or you

443
00:16:36,639 --> 00:16:42,399
can't you can't

444
00:16:38,480 --> 00:16:44,240
because the uh path hostname is casey

445
00:16:42,399 --> 00:16:48,839
sensitive but path path is yeah

446
00:16:44,240 --> 00:16:51,839
so yes yes

447
00:16:48,839 --> 00:16:51,839
um

448
00:16:56,880 --> 00:17:02,399
yeah i'm not sure what the best thing to

449
00:16:59,680 --> 00:17:02,399
do here is

450
00:17:02,839 --> 00:17:06,880
um

451
00:17:04,959 --> 00:17:09,360
that would probably require quite a bit

452
00:17:06,880 --> 00:17:12,880
of text explaining this or you know say

453
00:17:09,359 --> 00:17:15,918
uh you need to parse the scheme

454
00:17:12,880 --> 00:17:17,199
and then if you know the scheme then

455
00:17:15,919 --> 00:17:19,280
maybe you can compare against

456
00:17:17,199 --> 00:17:19,919
insensitive if you know it isn't

457
00:17:19,280 --> 00:17:23,918
sensitive

458
00:17:19,919 --> 00:17:24,640
but and then give examples of both ways

459
00:17:23,919 --> 00:17:27,120
maybe

460
00:17:24,640 --> 00:17:27,120
i don't know

461
00:17:28,160 --> 00:17:32,480
yeah the scheme is always case and

462
00:17:29,600 --> 00:17:37,439
sensitive right this um

463
00:17:32,480 --> 00:17:37,440
i believe so yeah

464
00:17:38,559 --> 00:17:44,840
okay i think yeah just need to

465
00:17:41,600 --> 00:17:47,840
put a bunch more text around that than

466
00:17:44,840 --> 00:17:47,840
probably

467
00:17:51,280 --> 00:17:55,200
uh okay uh those are the main things i

468
00:17:54,000 --> 00:17:56,640
wanted to

469
00:17:55,200 --> 00:17:58,880
bring up with issues that i've

470
00:17:56,640 --> 00:18:01,840
encountered so far with implementation

471
00:17:58,880 --> 00:18:01,840
um so

472
00:18:02,000 --> 00:18:05,679
i think we've got some paths forward on

473
00:18:04,480 --> 00:18:08,880
at least some of those and

474
00:18:05,679 --> 00:18:11,200
um i'll try and

475
00:18:08,880 --> 00:18:12,000
update the spec for the next itf and

476
00:18:11,200 --> 00:18:14,640
bring it up at

477
00:18:12,000 --> 00:18:16,000
cal connect uh anywhere else guys

478
00:18:14,640 --> 00:18:17,600
comments questions or anything on

479
00:18:16,000 --> 00:18:20,559
german calendars while we're looking at

480
00:18:17,600 --> 00:18:20,559
this or should we move on

481
00:18:25,440 --> 00:18:30,880
i think probably let's move on that's uh

482
00:18:28,320 --> 00:18:30,879
our time

483
00:18:32,160 --> 00:18:36,240
next up is js contact

484
00:18:41,120 --> 00:18:47,678
hello um yeah so i'm just

485
00:18:45,360 --> 00:18:48,719
going to give a short update on cheers

486
00:18:47,679 --> 00:18:51,120
contact um

487
00:18:48,720 --> 00:18:52,240
that i'm working on together with mario

488
00:18:51,120 --> 00:18:55,678
who is also

489
00:18:52,240 --> 00:18:58,559
in the meeting today hi mario um

490
00:18:55,679 --> 00:18:58,559
next slide please

491
00:18:58,960 --> 00:19:05,200
so with uh js contact um

492
00:19:02,080 --> 00:19:06,399
we are doing basically for for uh

493
00:19:05,200 --> 00:19:08,960
context and

494
00:19:06,400 --> 00:19:10,000
contacts what we are trying to do for

495
00:19:08,960 --> 00:19:13,760
calendar events

496
00:19:10,000 --> 00:19:16,160
with gs calendar um

497
00:19:13,760 --> 00:19:17,120
there are two documents the one is the

498
00:19:16,160 --> 00:19:20,320
the the

499
00:19:17,120 --> 00:19:22,320
specification of the of the data type

500
00:19:20,320 --> 00:19:23,360
that's gs contact in its version in

501
00:19:22,320 --> 00:19:26,639
version o2

502
00:19:23,360 --> 00:19:27,280
and um totally on me there have been no

503
00:19:26,640 --> 00:19:30,320
changes

504
00:19:27,280 --> 00:19:33,918
since last last itf i'm

505
00:19:30,320 --> 00:19:35,039
sorry about that um and there is another

506
00:19:33,919 --> 00:19:38,160
document which is

507
00:19:35,039 --> 00:19:41,200
which describes the conversion

508
00:19:38,160 --> 00:19:43,760
between js contact and vcard

509
00:19:41,200 --> 00:19:44,559
which did get an update since last itf

510
00:19:43,760 --> 00:19:47,840
thankfully

511
00:19:44,559 --> 00:19:51,120
due to mario and it's uh mainly around

512
00:19:47,840 --> 00:19:54,559
the implementation status where

513
00:19:51,120 --> 00:19:57,600
uh mario has implemented the uh

514
00:19:54,559 --> 00:20:01,039
uh more to support for

515
00:19:57,600 --> 00:20:04,000
for mapping between these data types um

516
00:20:01,039 --> 00:20:05,039
mario i don't know if you want to um if

517
00:20:04,000 --> 00:20:08,960
you want to

518
00:20:05,039 --> 00:20:10,879
describe more here if so please just

519
00:20:08,960 --> 00:20:13,840
jump in

520
00:20:10,880 --> 00:20:14,320
um but basically what this helps us with

521
00:20:13,840 --> 00:20:19,360
this

522
00:20:14,320 --> 00:20:23,039
ah yeah mario it's just a

523
00:20:19,360 --> 00:20:25,760
java library which

524
00:20:23,039 --> 00:20:26,879
is that implements not only the

525
00:20:25,760 --> 00:20:29,629
conversion between

526
00:20:26,880 --> 00:20:30,880
the various

527
00:20:29,630 --> 00:20:35,120
[Laughter]

528
00:20:30,880 --> 00:20:35,120
card formats to js content but

529
00:20:35,679 --> 00:20:40,480
it also implements validation of js

530
00:20:39,200 --> 00:20:44,799
contact object

531
00:20:40,480 --> 00:20:48,640
and the creation

532
00:20:44,799 --> 00:20:52,158
of js contact object based on the

533
00:20:48,640 --> 00:20:52,159
baseball builders so

534
00:20:52,480 --> 00:20:56,080
it is the library that according to my

535
00:20:55,200 --> 00:20:59,280
opinion

536
00:20:56,080 --> 00:21:03,439
covers all the aspects

537
00:20:59,280 --> 00:21:06,639
about creation maintenance of

538
00:21:03,440 --> 00:21:06,640
just contact objects

539
00:21:08,000 --> 00:21:13,280
coolant if i remember correctly um

540
00:21:11,520 --> 00:21:16,879
during the mapping it has turned out

541
00:21:13,280 --> 00:21:19,200
that we are covering i think almost

542
00:21:16,880 --> 00:21:22,480
everything or even everything of the

543
00:21:19,200 --> 00:21:25,120
uh available uh vcard uh

544
00:21:22,480 --> 00:21:25,760
properties uh in chess contact is that

545
00:21:25,120 --> 00:21:28,158
right or

546
00:21:25,760 --> 00:21:29,039
um i'm not up to date on this if we

547
00:21:28,159 --> 00:21:31,039
missed any

548
00:21:29,039 --> 00:21:32,080
if we if we if there are only if there

549
00:21:31,039 --> 00:21:35,360
are known

550
00:21:32,080 --> 00:21:36,559
missing points so to say i i i tested

551
00:21:35,360 --> 00:21:41,120
the

552
00:21:36,559 --> 00:21:45,840
the library against all the

553
00:21:41,120 --> 00:21:49,199
card book alex card or

554
00:21:45,840 --> 00:21:53,280
j-card objects i

555
00:21:49,200 --> 00:21:55,440
i found on the web

556
00:21:53,280 --> 00:21:56,320
especially for j-card i tested the

557
00:21:55,440 --> 00:22:01,520
library against

558
00:21:56,320 --> 00:22:04,158
the response responses coming from the

559
00:22:01,520 --> 00:22:06,480
art of servers listed in the ayana

560
00:22:04,159 --> 00:22:09,700
bootstrap registry for rdap

561
00:22:06,480 --> 00:22:11,840
so i tested more than

562
00:22:09,700 --> 00:22:15,520
[Music]

563
00:22:11,840 --> 00:22:18,720
responses including

564
00:22:15,520 --> 00:22:19,590
jaccard but obviously if

565
00:22:18,720 --> 00:22:22,080
anyone

566
00:22:19,590 --> 00:22:26,480
[Music]

567
00:22:22,080 --> 00:22:27,760
can provide a a counter example that is

568
00:22:26,480 --> 00:22:31,039
not covered by the

569
00:22:27,760 --> 00:22:34,720
current implementation is uh

570
00:22:31,039 --> 00:22:37,360
is welcome so it can be

571
00:22:34,720 --> 00:22:37,360
improved

572
00:22:38,240 --> 00:22:41,840
i don't know if there are other examples

573
00:22:41,200 --> 00:22:44,960
existing

574
00:22:41,840 --> 00:22:48,240
on the web but

575
00:22:44,960 --> 00:22:49,240
if anyone has a particular example that

576
00:22:48,240 --> 00:22:50,720
is not covered

577
00:22:49,240 --> 00:22:53,760
[Music]

578
00:22:50,720 --> 00:22:54,480
i would be happy to to test the library

579
00:22:53,760 --> 00:22:57,360
against

580
00:22:54,480 --> 00:22:57,360
those examples

581
00:23:03,039 --> 00:23:08,080
okay cool um yeah i'm also going to look

582
00:23:05,919 --> 00:23:11,360
into if i find a couple of more

583
00:23:08,080 --> 00:23:13,360
uh files to test this with um in either

584
00:23:11,360 --> 00:23:17,678
case i think it will provide a strong

585
00:23:13,360 --> 00:23:18,479
um it will provide a strong foundation

586
00:23:17,679 --> 00:23:21,679
or

587
00:23:18,480 --> 00:23:24,000
however we uh might and i guess

588
00:23:21,679 --> 00:23:25,039
we'll change the core format still uh

589
00:23:24,000 --> 00:23:27,679
this would be good

590
00:23:25,039 --> 00:23:29,120
will be a good uh way to make sure that

591
00:23:27,679 --> 00:23:32,720
we are that nothing gets

592
00:23:29,120 --> 00:23:35,120
dropped while doing so um

593
00:23:32,720 --> 00:23:36,000
uh having said that i guess then what

594
00:23:35,120 --> 00:23:39,039
remains is that

595
00:23:36,000 --> 00:23:42,400
the probably weak points of wii

596
00:23:39,039 --> 00:23:44,000
card are still i guess some of them are

597
00:23:42,400 --> 00:23:46,960
direct with into the

598
00:23:44,000 --> 00:23:48,240
into js contact currently namely that's

599
00:23:46,960 --> 00:23:52,080
the

600
00:23:48,240 --> 00:23:52,880
address parts which um in record were

601
00:23:52,080 --> 00:23:56,320
very

602
00:23:52,880 --> 00:23:58,240
driven by a western by addresses that

603
00:23:56,320 --> 00:24:01,439
are

604
00:23:58,240 --> 00:24:03,919
used in the in the western world and

605
00:24:01,440 --> 00:24:05,600
also there i guess more in the in the

606
00:24:03,919 --> 00:24:08,799
large um

607
00:24:05,600 --> 00:24:10,559
countries so i guess the address part

608
00:24:08,799 --> 00:24:13,840
will be the biggest

609
00:24:10,559 --> 00:24:16,080
um will be the biggest thing to get

610
00:24:13,840 --> 00:24:17,600
right in js contact if we if we really

611
00:24:16,080 --> 00:24:21,760
want to

612
00:24:17,600 --> 00:24:21,760
add something on top of e-card

613
00:24:22,159 --> 00:24:25,760
yeah so um that probably brings us to

614
00:24:24,720 --> 00:24:27,440
the next slide

615
00:24:25,760 --> 00:24:29,120
the next and the last slide which is

616
00:24:27,440 --> 00:24:32,000
basically that

617
00:24:29,120 --> 00:24:33,840
i will uh i will now work on updating

618
00:24:32,000 --> 00:24:36,400
the course back it expires

619
00:24:33,840 --> 00:24:38,158
uh next month anyway so i guess i really

620
00:24:36,400 --> 00:24:40,410
should do that now

621
00:24:38,159 --> 00:24:41,679
um and along with that um

622
00:24:40,410 --> 00:24:44,400
[Music]

623
00:24:41,679 --> 00:24:44,799
we will need more implementations um i

624
00:24:44,400 --> 00:24:48,000
will

625
00:24:44,799 --> 00:24:52,000
i will um i will work on

626
00:24:48,000 --> 00:24:52,320
um on looking um if and when we support

627
00:24:52,000 --> 00:24:55,840
that

628
00:24:52,320 --> 00:24:59,439
in the cyrus imap server uh for example

629
00:24:55,840 --> 00:25:00,399
but i guess um i can't give an estimate

630
00:24:59,440 --> 00:25:02,080
on that one yet

631
00:25:00,400 --> 00:25:03,679
probably i'll i work on it on a feature

632
00:25:02,080 --> 00:25:07,439
branch just to make sure

633
00:25:03,679 --> 00:25:11,120
we are i get implementation feedback

634
00:25:07,440 --> 00:25:13,760
early on yeah that's that's it from

635
00:25:11,120 --> 00:25:15,039
my side i'm not sure if there are any if

636
00:25:13,760 --> 00:25:18,640
there are any questions or

637
00:25:15,039 --> 00:25:18,640
or or input at this point

638
00:25:23,039 --> 00:25:28,080
i guess otherwise we're yeah i guess

639
00:25:26,159 --> 00:25:31,279
otherwise we are done with the

640
00:25:28,080 --> 00:25:33,120
presentation yeah my memory of the

641
00:25:31,279 --> 00:25:34,159
biggest challenge with vcard was dealing

642
00:25:33,120 --> 00:25:36,479
with groups

643
00:25:34,159 --> 00:25:38,559
the idea that you could group related

644
00:25:36,480 --> 00:25:43,440
fields together with a prefix dot

645
00:25:38,559 --> 00:25:47,279
in vcard um

646
00:25:43,440 --> 00:25:47,279
yes i wonder i mean yes

647
00:25:48,000 --> 00:25:52,720
i i'm not sure if we even have groups at

648
00:25:50,559 --> 00:25:54,080
the moment in scope and cheers contact

649
00:25:52,720 --> 00:25:57,679
um

650
00:25:54,080 --> 00:25:59,760
but let me check that

651
00:25:57,679 --> 00:26:01,039
oh yeah we have already chase card group

652
00:25:59,760 --> 00:26:04,640
but it's really

653
00:26:01,039 --> 00:26:08,158
uh it's really just a very thin wrapper

654
00:26:04,640 --> 00:26:11,039
yes okay yeah so we'll definitely also

655
00:26:08,159 --> 00:26:11,039
need to look into that

656
00:26:12,880 --> 00:26:18,640
cool thank you anyone else have anything

657
00:26:17,279 --> 00:26:25,840
to say about this or should we move on

658
00:26:18,640 --> 00:26:25,840
to the next document

659
00:26:30,080 --> 00:26:36,799
all right so next one was sieve

660
00:26:33,760 --> 00:26:36,799
which is here

661
00:26:37,679 --> 00:26:40,799
all can hello everybody uh hopefully the

662
00:26:39,679 --> 00:26:44,880
slides are more

663
00:26:40,799 --> 00:26:47,360
more coherent than i feel at the 3am but

664
00:26:44,880 --> 00:26:49,279
we'll grind through here so um there's

665
00:26:47,360 --> 00:26:53,279
been a couple iterations of the draft

666
00:26:49,279 --> 00:26:55,440
since we adopted it in uh ietf 108

667
00:26:53,279 --> 00:26:57,200
a lot of that churn has been based on

668
00:26:55,440 --> 00:26:59,520
implementation experience

669
00:26:57,200 --> 00:27:01,840
in cyrus and how we intend to use this

670
00:26:59,520 --> 00:27:04,559
at fast mail so

671
00:27:01,840 --> 00:27:05,360
covering the main changes in the account

672
00:27:04,559 --> 00:27:09,120
capabilities

673
00:27:05,360 --> 00:27:12,639
object uh we've uh specified that the

674
00:27:09,120 --> 00:27:15,918
capability strings are case insensitive

675
00:27:12,640 --> 00:27:17,679
uh also added a max i script capability

676
00:27:15,919 --> 00:27:20,960
and one other thing that i forgot to put

677
00:27:17,679 --> 00:27:23,279
in the slide was there's also a boolean

678
00:27:20,960 --> 00:27:25,440
property which specifies whether the

679
00:27:23,279 --> 00:27:29,279
implementation supports the test method

680
00:27:25,440 --> 00:27:31,919
which i'll get to a further slide

681
00:27:29,279 --> 00:27:32,880
as far as i said the subscript object

682
00:27:31,919 --> 00:27:34,799
goes

683
00:27:32,880 --> 00:27:37,279
we've made the name property optional

684
00:27:34,799 --> 00:27:40,080
when using the set method

685
00:27:37,279 --> 00:27:40,960
if if it's not set by the client then

686
00:27:40,080 --> 00:27:44,240
the server will

687
00:27:40,960 --> 00:27:44,880
assign its own unique name this allows

688
00:27:44,240 --> 00:27:47,760
for

689
00:27:44,880 --> 00:27:48,080
blind creations where the the client may

690
00:27:47,760 --> 00:27:50,320
not

691
00:27:48,080 --> 00:27:52,000
want to do an extra round trip to see

692
00:27:50,320 --> 00:27:52,960
what's available before it goes and

693
00:27:52,000 --> 00:27:56,080
creates a

694
00:27:52,960 --> 00:27:59,279
new script additionally

695
00:27:56,080 --> 00:28:02,158
uh the is active property is now set

696
00:27:59,279 --> 00:28:04,320
on the server via a new argument in the

697
00:28:02,159 --> 00:28:07,919
set method which i'll get to in a second

698
00:28:04,320 --> 00:28:11,360
um this uh prevents the

699
00:28:07,919 --> 00:28:13,919
possible problem of a client trying to

700
00:28:11,360 --> 00:28:15,678
set it set two scripts active at the

701
00:28:13,919 --> 00:28:17,760
same time so that

702
00:28:15,679 --> 00:28:18,880
this new argument allows this to be an

703
00:28:17,760 --> 00:28:22,799
atomic

704
00:28:18,880 --> 00:28:25,120
action um question here is there any

705
00:28:22,799 --> 00:28:27,918
other additional properties we see of

706
00:28:25,120 --> 00:28:29,760
value that might go in this object

707
00:28:27,919 --> 00:28:32,080
one idea that came to mind as i was

708
00:28:29,760 --> 00:28:34,000
implementing this was do we need to know

709
00:28:32,080 --> 00:28:35,760
if a particular script is included by

710
00:28:34,000 --> 00:28:38,159
another one

711
00:28:35,760 --> 00:28:45,840
i don't know if anybody has any thoughts

712
00:28:38,159 --> 00:28:47,200
on that or not

713
00:28:45,840 --> 00:28:49,600
hearing none i guess we'll go to the

714
00:28:47,200 --> 00:28:49,600
next slide

715
00:28:54,399 --> 00:28:58,959
okay uh changes to the set method so as

716
00:28:56,960 --> 00:29:00,960
i mentioned uh just a second ago

717
00:28:58,960 --> 00:29:02,320
we've added a new on success activate

718
00:29:00,960 --> 00:29:05,840
script argument

719
00:29:02,320 --> 00:29:07,200
uh which is used to set change or unset

720
00:29:05,840 --> 00:29:10,480
the active script

721
00:29:07,200 --> 00:29:10,799
this uh only gets acted upon if all of

722
00:29:10,480 --> 00:29:14,080
the

723
00:29:10,799 --> 00:29:17,679
crates updates and destroys uh

724
00:29:14,080 --> 00:29:20,240
succeed uh additionally

725
00:29:17,679 --> 00:29:20,960
any changes made to any of the objects

726
00:29:20,240 --> 00:29:23,679
by this

727
00:29:20,960 --> 00:29:24,640
this action must be reported in the set

728
00:29:23,679 --> 00:29:27,279
response so

729
00:29:24,640 --> 00:29:28,720
if you created a script and activate at

730
00:29:27,279 --> 00:29:30,399
the same time obviously it's going to be

731
00:29:28,720 --> 00:29:33,840
reported as created

732
00:29:30,399 --> 00:29:35,840
but if you are doing something which uh

733
00:29:33,840 --> 00:29:37,918
activates a new script but at the same

734
00:29:35,840 --> 00:29:40,240
time deactivates another one

735
00:29:37,919 --> 00:29:41,200
the deactivated script would also appear

736
00:29:40,240 --> 00:29:45,039
as being updated

737
00:29:41,200 --> 00:29:46,640
in the response um additionally this

738
00:29:45,039 --> 00:29:48,320
argument can be used even if you're not

739
00:29:46,640 --> 00:29:50,159
creating updating or describing anything

740
00:29:48,320 --> 00:29:53,600
so if you just want to

741
00:29:50,159 --> 00:29:56,799
flip a particular script on or off

742
00:29:53,600 --> 00:30:00,240
this argument can be used with

743
00:29:56,799 --> 00:30:02,960
create update destroy being null

744
00:30:00,240 --> 00:30:02,960
next slide please

745
00:30:04,480 --> 00:30:08,480
i've also added a new query method

746
00:30:07,200 --> 00:30:10,240
pretty straightforward

747
00:30:08,480 --> 00:30:12,399
you can filter and sort based on the

748
00:30:10,240 --> 00:30:15,600
name uh or the

749
00:30:12,399 --> 00:30:16,719
active properties um again question here

750
00:30:15,600 --> 00:30:18,959
for the group

751
00:30:16,720 --> 00:30:23,840
do we see uh the need for any other

752
00:30:18,960 --> 00:30:23,840
additional filter or sort criteria

753
00:30:26,240 --> 00:30:29,919
that seems pretty comprehensive

754
00:30:28,320 --> 00:30:31,760
everything else would be

755
00:30:29,919 --> 00:30:33,760
unlikely to be used in pretty much all

756
00:30:31,760 --> 00:30:36,080
cases

757
00:30:33,760 --> 00:30:39,279
yeah the only issue that i thought might

758
00:30:36,080 --> 00:30:39,279
pop up is if you're

759
00:30:40,159 --> 00:30:43,760
if you want to clear out any inactive

760
00:30:42,720 --> 00:30:45,440
scripts

761
00:30:43,760 --> 00:30:46,799
do you want to know if any of those are

762
00:30:45,440 --> 00:30:49,520
being included by the one that

763
00:30:46,799 --> 00:30:50,559
actually is active it's still a property

764
00:30:49,520 --> 00:30:54,559
you can fetch

765
00:30:50,559 --> 00:30:54,559
on all these scripts presumably so

766
00:30:55,520 --> 00:30:58,559
it's more valuable to be able to fetch a

767
00:30:57,600 --> 00:31:02,840
property and then

768
00:30:58,559 --> 00:31:04,879
have a change since rather than a query

769
00:31:02,840 --> 00:31:06,639
possibly right so

770
00:31:04,880 --> 00:31:08,480
you're making an argument to have a

771
00:31:06,640 --> 00:31:11,360
property on the object itself it says

772
00:31:08,480 --> 00:31:15,200
that you're being included by somebody

773
00:31:11,360 --> 00:31:17,360
um even that's kind of tricky in it

774
00:31:15,200 --> 00:31:19,600
do you just resolve what client said i

775
00:31:17,360 --> 00:31:22,320
i'd say it's probably better to

776
00:31:19,600 --> 00:31:24,799
not over complicate this too much yeah

777
00:31:22,320 --> 00:31:24,799
that's fair

778
00:31:25,519 --> 00:31:29,440
i mean like now that you mentioned is

779
00:31:27,600 --> 00:31:33,039
included i want it to the client

780
00:31:29,440 --> 00:31:34,000
all right i'm sorry lexi can you repeat

781
00:31:33,039 --> 00:31:36,640
that

782
00:31:34,000 --> 00:31:37,360
um now that you mentioned is included i

783
00:31:36,640 --> 00:31:41,200
want it

784
00:31:37,360 --> 00:31:44,639
i want to use it now okay

785
00:31:41,200 --> 00:31:47,440
so i mean i can or certain type of

786
00:31:44,640 --> 00:31:50,960
client has support

787
00:31:47,440 --> 00:31:51,519
yeah happy to do it much later or in a

788
00:31:50,960 --> 00:31:54,559
separate

789
00:31:51,519 --> 00:31:56,480
pack or whatever but yeah don't don't

790
00:31:54,559 --> 00:31:57,120
ask open-ended questions because dance

791
00:31:56,480 --> 00:32:01,840
is obviously

792
00:31:57,120 --> 00:32:01,840
going to be yes

793
00:32:04,720 --> 00:32:08,080
okay uh next slide please

794
00:32:09,120 --> 00:32:13,678
so here this is the biggest addition uh

795
00:32:11,679 --> 00:32:16,880
since ietf108

796
00:32:13,679 --> 00:32:17,679
we've added a new test method uh the

797
00:32:16,880 --> 00:32:20,720
request

798
00:32:17,679 --> 00:32:22,320
uh looks as you see there obviously

799
00:32:20,720 --> 00:32:24,799
there's an account id

800
00:32:22,320 --> 00:32:25,760
the client specifies the script either

801
00:32:24,799 --> 00:32:27,360
uh

802
00:32:25,760 --> 00:32:30,000
with script content which is just the

803
00:32:27,360 --> 00:32:33,039
raw octets for an id an existing script

804
00:32:30,000 --> 00:32:36,399
that's already on on the server

805
00:32:33,039 --> 00:32:38,640
also gives a an array of email blob ids

806
00:32:36,399 --> 00:32:40,320
of messages that it wants to test

807
00:32:38,640 --> 00:32:43,679
against

808
00:32:40,320 --> 00:32:47,120
we've reused the envelope object from

809
00:32:43,679 --> 00:32:49,440
the mail spec um to pass the interpreter

810
00:32:47,120 --> 00:32:51,279
information that uh

811
00:32:49,440 --> 00:32:53,120
it should assume it was present asmtp

812
00:32:51,279 --> 00:32:55,120
transaction that delivered a message

813
00:32:53,120 --> 00:32:56,320
this can be used for obviously envelope

814
00:32:55,120 --> 00:33:00,239
tests or

815
00:32:56,320 --> 00:33:04,240
vacation actions there's also a

816
00:33:00,240 --> 00:33:06,640
utc date which specifies if and when

817
00:33:04,240 --> 00:33:07,840
the interpreter may have sent a vacation

818
00:33:06,640 --> 00:33:11,840
response

819
00:33:07,840 --> 00:33:11,840
to a particular user

820
00:33:13,039 --> 00:33:16,559
again another open-ended question for

821
00:33:14,720 --> 00:33:18,159
alexi i guess

822
00:33:16,559 --> 00:33:20,399
do we need additional arguments for this

823
00:33:18,159 --> 00:33:20,399
thing

824
00:33:20,720 --> 00:33:27,440
i don't know how well adapted the

825
00:33:24,320 --> 00:33:30,158
environment spec is or the uh

826
00:33:27,440 --> 00:33:30,159
duplicate spec

827
00:33:30,960 --> 00:33:34,559
in in the environment i'm sorry let's

828
00:33:33,919 --> 00:33:36,840
see

829
00:33:34,559 --> 00:33:38,879
can you remind me what's in the

830
00:33:36,840 --> 00:33:42,320
environment um

831
00:33:38,880 --> 00:33:43,919
it yeah i'm trying to remember now

832
00:33:42,320 --> 00:33:45,678
one of them is is where is the

833
00:33:43,919 --> 00:33:49,519
interpreter actually running is it

834
00:33:45,679 --> 00:33:50,480
uh um is it on delivery imap although

835
00:33:49,519 --> 00:33:52,559
this

836
00:33:50,480 --> 00:33:53,760
yeah i i don't recall what the other

837
00:33:52,559 --> 00:33:55,519
ones are

838
00:33:53,760 --> 00:33:56,879
again i don't know how widespread that

839
00:33:55,519 --> 00:34:00,240
that spec is

840
00:33:56,880 --> 00:34:00,799
um obviously uh we could always extend

841
00:34:00,240 --> 00:34:03,279
this

842
00:34:00,799 --> 00:34:04,080
spec if uh there was a need for this

843
00:34:03,279 --> 00:34:07,039
kind of things

844
00:34:04,080 --> 00:34:08,639
you know the duplicate um you know

845
00:34:07,039 --> 00:34:10,320
basically just checks to see if

846
00:34:08,639 --> 00:34:11,679
the existing if the message already

847
00:34:10,320 --> 00:34:13,760
exists

848
00:34:11,679 --> 00:34:16,159
this could be a fairly simple you know

849
00:34:13,760 --> 00:34:18,399
boolean type argument

850
00:34:16,159 --> 00:34:19,520
uh for testing you know just say yes or

851
00:34:18,399 --> 00:34:22,480
no whether that

852
00:34:19,520 --> 00:34:23,280
this you're supposed to act as if this

853
00:34:22,480 --> 00:34:26,240
has been

854
00:34:23,280 --> 00:34:26,240
already delivered or not

855
00:34:27,440 --> 00:34:30,960
but not hearing any strong opinions i

856
00:34:29,199 --> 00:34:32,799
might just leave leave this as

857
00:34:30,960 --> 00:34:35,520
is and this could always be extended

858
00:34:32,800 --> 00:34:41,040
down the road if we feel the need

859
00:34:35,520 --> 00:34:41,040
sounds good okay next slide please

860
00:34:41,839 --> 00:34:49,520
so reply to this thing um oh

861
00:34:46,960 --> 00:34:50,480
you need to go forward one bro so reply

862
00:34:49,520 --> 00:34:53,119
to this

863
00:34:50,480 --> 00:34:54,240
uh in addition the account id basically

864
00:34:53,119 --> 00:34:56,800
has two other arguments

865
00:34:54,239 --> 00:34:57,919
uh completed or not completed both of

866
00:34:56,800 --> 00:35:00,400
which are arrays

867
00:34:57,920 --> 00:35:01,359
if it's completed it's a map of the blob

868
00:35:00,400 --> 00:35:04,640
id to

869
00:35:01,359 --> 00:35:07,920
a set of action types the action type

870
00:35:04,640 --> 00:35:11,520
kind of uh mimics what we see with

871
00:35:07,920 --> 00:35:15,200
um the array of method requests so

872
00:35:11,520 --> 00:35:18,160
it's a an array it's a tuplets an array

873
00:35:15,200 --> 00:35:18,560
that has the name of the script the

874
00:35:18,160 --> 00:35:21,040
sieve

875
00:35:18,560 --> 00:35:24,320
action and then an object containing all

876
00:35:21,040 --> 00:35:24,320
those all the arguments

877
00:35:24,400 --> 00:35:30,240
if the test fails

878
00:35:27,440 --> 00:35:31,599
you'll you'll get a map of the blob id

879
00:35:30,240 --> 00:35:34,319
of the message

880
00:35:31,599 --> 00:35:36,320
and any set error that identifies what

881
00:35:34,320 --> 00:35:39,040
the problem was

882
00:35:36,320 --> 00:35:40,640
on the next slide i've got an example of

883
00:35:39,040 --> 00:35:42,240
what one of these action objects looks

884
00:35:40,640 --> 00:35:43,920
like

885
00:35:42,240 --> 00:35:45,598
pretty straightforward so this would be

886
00:35:43,920 --> 00:35:47,839
a vacation action

887
00:35:45,599 --> 00:35:49,200
um and the various arguments that you

888
00:35:47,839 --> 00:35:52,320
might see

889
00:35:49,200 --> 00:35:55,118
this the current draft

890
00:35:52,320 --> 00:35:55,760
has a bunch of text which describes how

891
00:35:55,119 --> 00:35:58,960
the

892
00:35:55,760 --> 00:36:01,839
uh arguments uh should get named

893
00:35:58,960 --> 00:36:03,119
mainly it usually either uses the uh

894
00:36:01,839 --> 00:36:05,279
tagged argument name

895
00:36:03,119 --> 00:36:06,720
for those that are tagged arguments for

896
00:36:05,280 --> 00:36:10,079
those that are positional

897
00:36:06,720 --> 00:36:13,040
it uses the uh the

898
00:36:10,079 --> 00:36:15,839
name that is in in the actual usage part

899
00:36:13,040 --> 00:36:15,839
of the spec

900
00:36:17,920 --> 00:36:20,480
next slide

901
00:36:22,160 --> 00:36:26,000
one question on the format of the reply

902
00:36:25,040 --> 00:36:30,160
as i was implementing

903
00:36:26,000 --> 00:36:32,480
this fcc itself has

904
00:36:30,160 --> 00:36:34,160
its own obviously argument value but

905
00:36:32,480 --> 00:36:35,280
then a bunch of other arguments that can

906
00:36:34,160 --> 00:36:37,359
go along with it so

907
00:36:35,280 --> 00:36:38,800
mission fcc you could have create

908
00:36:37,359 --> 00:36:41,359
special use

909
00:36:38,800 --> 00:36:42,880
and mailbox id and a bunch of other ones

910
00:36:41,359 --> 00:36:46,560
that could possibly

911
00:36:42,880 --> 00:36:48,640
go along with it so my question uh was

912
00:36:46,560 --> 00:36:49,920
should fcc basically be its own

913
00:36:48,640 --> 00:36:53,598
sub-object

914
00:36:49,920 --> 00:36:55,920
with any appropriate

915
00:36:53,599 --> 00:36:57,440
arguments along alongside of it or just

916
00:36:55,920 --> 00:37:00,560
leave them in line

917
00:36:57,440 --> 00:37:03,599
um as individual arguments

918
00:37:00,560 --> 00:37:06,799
the question was do we need we don't do

919
00:37:03,599 --> 00:37:09,119
sorry i wouldn't do fcc as a

920
00:37:06,800 --> 00:37:10,079
special object just for generality of

921
00:37:09,119 --> 00:37:12,240
things

922
00:37:10,079 --> 00:37:14,079
okay that's fine and besides i don't

923
00:37:12,240 --> 00:37:17,200
think

924
00:37:14,079 --> 00:37:18,720
um i don't think sieve really allows

925
00:37:17,200 --> 00:37:20,720
parameters to parameters so

926
00:37:18,720 --> 00:37:22,799
realistically just well

927
00:37:20,720 --> 00:37:24,879
they're sort of related but they have to

928
00:37:22,800 --> 00:37:25,760
be interpretable even if they're not

929
00:37:24,880 --> 00:37:28,320
with fcc

930
00:37:25,760 --> 00:37:30,320
so you still have to handle this yes

931
00:37:28,320 --> 00:37:33,599
you're you're correct that's that civ

932
00:37:30,320 --> 00:37:35,440
prohibits arguments to arguments

933
00:37:33,599 --> 00:37:37,680
so yeah i'm finally made the way it is

934
00:37:35,440 --> 00:37:39,599
it's less implementation work and less

935
00:37:37,680 --> 00:37:42,000
text for me anyways

936
00:37:39,599 --> 00:37:42,640
the other question is for this test

937
00:37:42,000 --> 00:37:45,040
method which

938
00:37:42,640 --> 00:37:45,839
actually is optional um do we need any

939
00:37:45,040 --> 00:37:47,520
kind of

940
00:37:45,839 --> 00:37:49,279
uh limits whether it be rate limits or

941
00:37:47,520 --> 00:37:50,960
other other types of limits

942
00:37:49,280 --> 00:37:52,240
ron i think you were the original one

943
00:37:50,960 --> 00:37:52,880
that proposed the idea of a rate limit

944
00:37:52,240 --> 00:37:57,040
for this

945
00:37:52,880 --> 00:38:00,720
there's already a rate limited um

946
00:37:57,040 --> 00:38:02,640
error message for cetera so i would just

947
00:38:00,720 --> 00:38:05,040
say that we can use that you can say

948
00:38:02,640 --> 00:38:06,560
rate limit and reject a request

949
00:38:05,040 --> 00:38:09,040
if it's given and it hits your rate

950
00:38:06,560 --> 00:38:12,000
limit or you can do an http level

951
00:38:09,040 --> 00:38:14,160
rate limiting response as well i don't

952
00:38:12,000 --> 00:38:16,560
know probably the server needs to say

953
00:38:14,160 --> 00:38:18,879
what its limit is yeah i was just going

954
00:38:16,560 --> 00:38:21,119
to ask do you think we need text

955
00:38:18,880 --> 00:38:22,720
stating that there may or may not be

956
00:38:21,119 --> 00:38:25,119
rate limit or just

957
00:38:22,720 --> 00:38:26,319
leave it as is and just implementation

958
00:38:25,119 --> 00:38:27,599
doesn't specify that

959
00:38:26,320 --> 00:38:29,200
rate limit can be one of the error

960
00:38:27,599 --> 00:38:32,560
messages that can be returned which i

961
00:38:29,200 --> 00:38:34,720
think is a general thing anyway

962
00:38:32,560 --> 00:38:35,920
so is the concern that people will just

963
00:38:34,720 --> 00:38:38,240
continuously use

964
00:38:35,920 --> 00:38:38,240
test

965
00:38:39,680 --> 00:38:43,759
just to yeah do something ridiculous

966
00:38:42,000 --> 00:38:46,560
like run a test for every single message

967
00:38:43,760 --> 00:38:50,640
in their mailbox one after the other

968
00:38:46,560 --> 00:38:50,640
and hammer the server i see

969
00:38:55,119 --> 00:38:59,040
any other questions or comments on this

970
00:38:57,359 --> 00:39:00,960
i had a question a few slides back and

971
00:38:59,040 --> 00:39:02,320
since i have the remote control and i

972
00:39:00,960 --> 00:39:06,079
can just do it

973
00:39:02,320 --> 00:39:08,000
um email blob ids allows you to specify

974
00:39:06,079 --> 00:39:10,079
multiple blobs but the envelope

975
00:39:08,000 --> 00:39:11,599
is presumed to be the same for every

976
00:39:10,079 --> 00:39:15,839
single one of those email blobs

977
00:39:11,599 --> 00:39:15,839
with this

978
00:39:16,560 --> 00:39:20,400
i think that's fine because you can

979
00:39:18,079 --> 00:39:22,160
always if that's not true you can always

980
00:39:20,400 --> 00:39:24,720
do multiple

981
00:39:22,160 --> 00:39:26,720
requests test requests even within a

982
00:39:24,720 --> 00:39:28,799
single set of method calls so it's very

983
00:39:26,720 --> 00:39:31,839
easy to

984
00:39:28,800 --> 00:39:33,920
to structure around that cool yeah

985
00:39:31,839 --> 00:39:35,920
i did not uh put an example of that in

986
00:39:33,920 --> 00:39:39,680
the draft but there are

987
00:39:35,920 --> 00:39:40,400
um there's a set of examples specific

988
00:39:39,680 --> 00:39:42,879
showing how

989
00:39:40,400 --> 00:39:44,400
the on success activate script works in

990
00:39:42,880 --> 00:39:46,800
various scenarios so

991
00:39:44,400 --> 00:39:48,079
um please check the draft and see if

992
00:39:46,800 --> 00:39:48,960
there's anything there that any use

993
00:39:48,079 --> 00:39:50,640
cases that

994
00:39:48,960 --> 00:39:52,240
people could imagine that wouldn't be

995
00:39:50,640 --> 00:39:57,118
covered by the

996
00:39:52,240 --> 00:40:00,959
the uh the current object

997
00:39:57,119 --> 00:40:05,359
cool any other comments

998
00:40:00,960 --> 00:40:05,359
questions suggestions before we move on

999
00:40:09,040 --> 00:40:12,079
for what it's worth this what what's

1000
00:40:11,119 --> 00:40:14,800
documented in

1001
00:40:12,079 --> 00:40:16,240
in the o2 draft is currently implemented

1002
00:40:14,800 --> 00:40:19,920
in cyrus imap and

1003
00:40:16,240 --> 00:40:21,439
we're working towards the client side of

1004
00:40:19,920 --> 00:40:25,839
of this which looks like it should be

1005
00:40:21,440 --> 00:40:25,839
fairly straightforward

1006
00:40:26,720 --> 00:40:31,759
all right i guess we're done bro thanks

1007
00:40:28,000 --> 00:40:31,760
everyone cool thank you

1008
00:40:35,359 --> 00:40:39,598
all right i guess i need to talk about

1009
00:40:36,800 --> 00:40:43,200
my blob draft

1010
00:40:39,599 --> 00:40:43,200
has anyone had a chance to read it yet

1011
00:40:44,720 --> 00:40:50,799
i hope yeah cool

1012
00:40:48,319 --> 00:40:53,279
any comments about the direction it's

1013
00:40:50,800 --> 00:40:55,680
it's going is that a

1014
00:40:53,280 --> 00:40:57,200
a sensible thing um i guess i'm gonna

1015
00:40:55,680 --> 00:40:58,960
have to call for adoption as well

1016
00:40:57,200 --> 00:41:00,960
or ask jim to do a call for adoption

1017
00:40:58,960 --> 00:41:03,520
since it's it's my

1018
00:41:00,960 --> 00:41:03,520
document

1019
00:41:05,200 --> 00:41:09,598
i uploaded a new version of it i think

1020
00:41:07,760 --> 00:41:11,520
it's pretty sensible so i

1021
00:41:09,599 --> 00:41:13,359
i was just looking at the diff just

1022
00:41:11,520 --> 00:41:16,000
before the session

1023
00:41:13,359 --> 00:41:18,799
and you added example of creation in

1024
00:41:16,000 --> 00:41:22,319
this section about deletions

1025
00:41:18,800 --> 00:41:23,119
did i yeah yeah great i'll probably put

1026
00:41:22,319 --> 00:41:26,079
it

1027
00:41:23,119 --> 00:41:27,200
i wasn't destroyed because yeah update

1028
00:41:26,079 --> 00:41:30,480
destroyer i need to do

1029
00:41:27,200 --> 00:41:32,960
probably do another subtitle for example

1030
00:41:30,480 --> 00:41:34,640
yep that makes sense fine i was just

1031
00:41:32,960 --> 00:41:35,680
like you know i mean it's not the wrong

1032
00:41:34,640 --> 00:41:38,799
example it's just

1033
00:41:35,680 --> 00:41:41,839
the section is wrong sort of things

1034
00:41:38,800 --> 00:41:43,680
yeah cool

1035
00:41:41,839 --> 00:41:45,599
um i probably should do an example of it

1036
00:41:43,680 --> 00:41:48,560
being used immediately afterwards as

1037
00:41:45,599 --> 00:41:51,359
well so show it being used in line

1038
00:41:48,560 --> 00:41:52,078
um i guess the only question i had was

1039
00:41:51,359 --> 00:41:54,160
whether i should

1040
00:41:52,079 --> 00:41:56,079
create add some kind of bully in here to

1041
00:41:54,160 --> 00:41:59,759
say ephemeral

1042
00:41:56,079 --> 00:42:02,720
yes no so say don't save this beyond

1043
00:41:59,760 --> 00:42:04,640
this current set of method calls i don't

1044
00:42:02,720 --> 00:42:06,000
know if that's necessary or not

1045
00:42:04,640 --> 00:42:07,920
to tell the server to put it in

1046
00:42:06,000 --> 00:42:11,200
temporary storage because the server can

1047
00:42:07,920 --> 00:42:11,200
probably choose to do that anyway

1048
00:42:13,599 --> 00:42:17,200
you would generally use these for fairly

1049
00:42:15,359 --> 00:42:18,799
small things so

1050
00:42:17,200 --> 00:42:20,960
it's not going to use much space either

1051
00:42:18,800 --> 00:42:20,960
way

1052
00:42:25,680 --> 00:42:31,440
all right one question one question i

1053
00:42:27,200 --> 00:42:33,359
had run on the on the get method is

1054
00:42:31,440 --> 00:42:34,960
are are we just going to have to return

1055
00:42:33,359 --> 00:42:37,040
the

1056
00:42:34,960 --> 00:42:38,960
the raw octets or we're going to have it

1057
00:42:37,040 --> 00:42:42,640
return something that resembles

1058
00:42:38,960 --> 00:42:45,280
an object of its particular type

1059
00:42:42,640 --> 00:42:46,879
so there's no there's no ability to say

1060
00:42:45,280 --> 00:42:50,640
get

1061
00:42:46,880 --> 00:42:50,960
s raw octets you your choices are data

1062
00:42:50,640 --> 00:42:54,240
as

1063
00:42:50,960 --> 00:42:58,000
text space 64 or as hex

1064
00:42:54,240 --> 00:43:00,560
um so as text will only work if it's

1065
00:42:58,000 --> 00:43:03,119
text data otherwise you need to do space

1066
00:43:00,560 --> 00:43:06,319
64 s hex and you'll get the bytes in

1067
00:43:03,119 --> 00:43:09,599
that format okay fair enough

1068
00:43:06,319 --> 00:43:11,119
so yeah because you can't guaranteed

1069
00:43:09,599 --> 00:43:13,200
round trip

1070
00:43:11,119 --> 00:43:14,160
and presumably you'll you'll get an

1071
00:43:13,200 --> 00:43:18,078
error object

1072
00:43:14,160 --> 00:43:20,160
if you try and fetch a blob that is not

1073
00:43:18,079 --> 00:43:22,880
fetchable as text and you ask for the as

1074
00:43:20,160 --> 00:43:22,879
text value

1075
00:43:24,960 --> 00:43:30,079
just certainly need to do some more

1076
00:43:27,920 --> 00:43:31,440
words around that

1077
00:43:30,079 --> 00:43:34,160
around the ways in which this could

1078
00:43:31,440 --> 00:43:36,560
fetch incorrectly

1079
00:43:34,160 --> 00:43:38,319
all right i will keep working on that um

1080
00:43:36,560 --> 00:43:39,680
and i'll ask jim to do a call for

1081
00:43:38,319 --> 00:43:42,480
adoption since

1082
00:43:39,680 --> 00:43:42,480
i'm the author

1083
00:43:43,040 --> 00:43:45,599
thanks jim

1084
00:43:49,280 --> 00:43:52,480
looking at your examples i was just

1085
00:43:51,760 --> 00:43:54,480
finally

1086
00:43:52,480 --> 00:43:56,160
wondering if there is a need for as

1087
00:43:54,480 --> 00:43:58,640
quarter printable but that's called

1088
00:43:56,160 --> 00:43:58,640
overkill

1089
00:43:58,960 --> 00:44:02,400
i don't yeah i think it's unlikely that

1090
00:44:01,359 --> 00:44:04,480
you'd get something where

1091
00:44:02,400 --> 00:44:05,599
quoted printful makes sense rather than

1092
00:44:04,480 --> 00:44:09,040
just getting the

1093
00:44:05,599 --> 00:44:10,880
the plain text

1094
00:44:09,040 --> 00:44:12,400
it is unlikely to be a format that a

1095
00:44:10,880 --> 00:44:14,160
blob is going to be in that you would

1096
00:44:12,400 --> 00:44:16,800
want to get

1097
00:44:14,160 --> 00:44:18,160
i guess if it's or if it was sourced as

1098
00:44:16,800 --> 00:44:20,079
quoted printable you wanted to save

1099
00:44:18,160 --> 00:44:23,839
re-encoding it but

1100
00:44:20,079 --> 00:44:23,839
it's kind of odd

1101
00:44:24,160 --> 00:44:30,240
um so i had the open question about

1102
00:44:26,960 --> 00:44:31,599
range operators i think that's

1103
00:44:30,240 --> 00:44:33,439
useful because it's something that can

1104
00:44:31,599 --> 00:44:36,160
be used one of the thing

1105
00:44:33,440 --> 00:44:37,599
things in here that maybe wasn't

1106
00:44:36,160 --> 00:44:38,879
particularly clear in how i talked about

1107
00:44:37,599 --> 00:44:40,880
it was i thought it would be worth doing

1108
00:44:38,880 --> 00:44:43,040
a catenate

1109
00:44:40,880 --> 00:44:44,400
operator basically in this you could

1110
00:44:43,040 --> 00:44:47,520
create a blob

1111
00:44:44,400 --> 00:44:49,440
as a catenation of the following ranges

1112
00:44:47,520 --> 00:44:51,119
out of the following blob ids

1113
00:44:49,440 --> 00:44:52,400
and and you could use it to implement

1114
00:44:51,119 --> 00:44:53,839
the same thing that the catenate

1115
00:44:52,400 --> 00:44:57,040
operator does

1116
00:44:53,839 --> 00:45:01,279
as a server-side blob creation

1117
00:44:57,040 --> 00:45:03,599
um yeah it did make sense cool

1118
00:45:01,280 --> 00:45:05,040
the next thing i want to look at and

1119
00:45:03,599 --> 00:45:06,640
either include in this document or

1120
00:45:05,040 --> 00:45:09,200
possibly another document i'm thinking

1121
00:45:06,640 --> 00:45:12,720
ahead to jam up files here

1122
00:45:09,200 --> 00:45:16,000
is look at the rdif protocol

1123
00:45:12,720 --> 00:45:18,799
and see whether you would be able to

1124
00:45:16,000 --> 00:45:20,000
request some rdif data about a blob and

1125
00:45:18,800 --> 00:45:23,200
then

1126
00:45:20,000 --> 00:45:24,800
provide an operator that said from this

1127
00:45:23,200 --> 00:45:26,799
blob id and this blob id

1128
00:45:24,800 --> 00:45:28,079
and this set of rdif information and

1129
00:45:26,800 --> 00:45:32,079
these bits of data

1130
00:45:28,079 --> 00:45:33,440
generate a new blob please

1131
00:45:32,079 --> 00:45:35,359
that you could you could implement a

1132
00:45:33,440 --> 00:45:36,400
file synchronization protocol on top of

1133
00:45:35,359 --> 00:45:37,920
this

1134
00:45:36,400 --> 00:45:40,400
but that's probably too advanced for

1135
00:45:37,920 --> 00:45:40,400
this spec

1136
00:45:44,560 --> 00:45:51,119
for regarding block get so it looks like

1137
00:45:48,000 --> 00:45:53,599
the properties argument

1138
00:45:51,119 --> 00:45:55,599
is mandatory then for block get right so

1139
00:45:53,599 --> 00:45:58,720
you wouldn't want

1140
00:45:55,599 --> 00:46:02,079
by default return the data in order

1141
00:45:58,720 --> 00:46:06,399
available representations yeah

1142
00:46:02,079 --> 00:46:08,560
you'd probably default to a returning

1143
00:46:06,400 --> 00:46:10,960
data as text if it's plain text and data

1144
00:46:08,560 --> 00:46:12,400
space 64 if it's not but that does seem

1145
00:46:10,960 --> 00:46:14,400
a little

1146
00:46:12,400 --> 00:46:15,839
it's easier just to make it mandatory

1147
00:46:14,400 --> 00:46:17,040
hey

1148
00:46:15,839 --> 00:46:19,040
yeah i think it makes sense if the

1149
00:46:17,040 --> 00:46:29,839
client specifies

1150
00:46:19,040 --> 00:46:29,839
what they can handle yeah

1151
00:46:33,119 --> 00:46:38,240
all right um and the final topic for

1152
00:46:36,000 --> 00:46:41,119
discussion in this meeting was

1153
00:46:38,240 --> 00:46:43,279
jamet for data transfer we had a request

1154
00:46:41,119 --> 00:46:46,880
during the calconnect

1155
00:46:43,280 --> 00:46:48,000
meeting um from the rodriguez people who

1156
00:46:46,880 --> 00:46:51,040
are

1157
00:46:48,000 --> 00:46:53,040
working on a export format for

1158
00:46:51,040 --> 00:46:55,520
personal information from from many

1159
00:46:53,040 --> 00:46:58,560
different things

1160
00:46:55,520 --> 00:46:59,920
so we have js calendar and js contact

1161
00:46:58,560 --> 00:47:01,279
underway already for calendars and

1162
00:46:59,920 --> 00:47:04,319
contacts

1163
00:47:01,280 --> 00:47:07,520
first now has a basic spec for notes and

1164
00:47:04,319 --> 00:47:09,920
storage node which is for files so

1165
00:47:07,520 --> 00:47:12,400
just exporting as a zip file some kind

1166
00:47:09,920 --> 00:47:14,960
of directory containing files is

1167
00:47:12,400 --> 00:47:15,680
is probably going to be more useful

1168
00:47:14,960 --> 00:47:17,920
there

1169
00:47:15,680 --> 00:47:19,359
are there are other data types that that

1170
00:47:17,920 --> 00:47:20,559
people think we should be working on in

1171
00:47:19,359 --> 00:47:22,960
this group

1172
00:47:20,559 --> 00:47:24,079
or that there's a i guess request for

1173
00:47:22,960 --> 00:47:27,280
respect for or

1174
00:47:24,079 --> 00:47:27,280
proposed specs for

1175
00:47:27,920 --> 00:47:35,200
hi hello um yeah so

1176
00:47:31,760 --> 00:47:38,240
we're interested in tasks as well

1177
00:47:35,200 --> 00:47:41,680
but i already saw that in js calendar

1178
00:47:38,240 --> 00:47:44,399
there is some kind of task included

1179
00:47:41,680 --> 00:47:45,200
but it's it's not there's no gmap for

1180
00:47:44,400 --> 00:47:48,960
tasks

1181
00:47:45,200 --> 00:47:51,279
yet so that's something we we are

1182
00:47:48,960 --> 00:47:54,319
currently looking into

1183
00:47:51,280 --> 00:47:56,880
yeah so basically we look if if

1184
00:47:54,319 --> 00:47:58,480
where we could contribute to jmap which

1185
00:47:56,880 --> 00:48:00,960
is a bit unclear to us

1186
00:47:58,480 --> 00:48:01,599
until now but i guess we can talk about

1187
00:48:00,960 --> 00:48:04,160
this

1188
00:48:01,599 --> 00:48:04,160
later on

1189
00:48:04,640 --> 00:48:08,240
presuming you're just looking for the

1190
00:48:06,400 --> 00:48:11,119
data format um

1191
00:48:08,240 --> 00:48:12,240
for export purposes it's js calendar

1192
00:48:11,119 --> 00:48:13,359
that you want there anyway rather than

1193
00:48:12,240 --> 00:48:18,160
jmap really

1194
00:48:13,359 --> 00:48:18,160
um so i think that has tasks

1195
00:48:18,480 --> 00:48:21,839
does that make sense good because the

1196
00:48:20,079 --> 00:48:24,800
jmf is the synchronization

1197
00:48:21,839 --> 00:48:26,240
um layer and for mail that on some other

1198
00:48:24,800 --> 00:48:27,680
things that does define data types too

1199
00:48:26,240 --> 00:48:28,879
but the contacts and calendars the data

1200
00:48:27,680 --> 00:48:30,799
types actually defined in the js

1201
00:48:28,880 --> 00:48:34,319
calendar js contact spec

1202
00:48:30,800 --> 00:48:34,800
yeah yeah we are in the end we want to

1203
00:48:34,319 --> 00:48:37,440
have

1204
00:48:34,800 --> 00:48:39,040
something what would be best would be to

1205
00:48:37,440 --> 00:48:42,079
have something like a protocol

1206
00:48:39,040 --> 00:48:42,558
not only the data type but the protocol

1207
00:48:42,079 --> 00:48:44,720
as well

1208
00:48:42,559 --> 00:48:46,240
so yeah it's still we're still figuring

1209
00:48:44,720 --> 00:48:48,959
out if

1210
00:48:46,240 --> 00:48:50,319
very good place for us would be to i

1211
00:48:48,960 --> 00:48:52,960
know fill in some gaps

1212
00:48:50,319 --> 00:48:54,240
also yeah this is definitely the right

1213
00:48:52,960 --> 00:48:56,319
working group for it

1214
00:48:54,240 --> 00:48:58,319
um so i guess the question is whether we

1215
00:48:56,319 --> 00:48:59,200
need a different format than jmap

1216
00:48:58,319 --> 00:49:02,558
calendars

1217
00:48:59,200 --> 00:49:05,598
for gmap tasks specifically that ships

1218
00:49:02,559 --> 00:49:08,160
still just calendar objects but as a

1219
00:49:05,599 --> 00:49:11,200
tasks rather than calendars

1220
00:49:08,160 --> 00:49:14,879
thing okay

1221
00:49:11,200 --> 00:49:18,160
yeah um so you didn't get settle

1222
00:49:14,880 --> 00:49:21,760
on using js calendar

1223
00:49:18,160 --> 00:49:24,319
for a future jmap for tasks protocol

1224
00:49:21,760 --> 00:49:26,079
no it would be i think yes it's just it

1225
00:49:24,319 --> 00:49:27,279
would be the jmap

1226
00:49:26,079 --> 00:49:30,079
protocol will be separate it would be a

1227
00:49:27,280 --> 00:49:31,760
separate gmail separate um

1228
00:49:30,079 --> 00:49:33,280
using that data format so the jmap bit

1229
00:49:31,760 --> 00:49:34,960
will actually be fairly straightforward

1230
00:49:33,280 --> 00:49:36,319
um it's mainly just referencing the data

1231
00:49:34,960 --> 00:49:39,520
type

1232
00:49:36,319 --> 00:49:42,839
okay cool yeah

1233
00:49:39,520 --> 00:49:45,200
so i guess we'll do that fairly soon

1234
00:49:42,839 --> 00:49:49,359
then

1235
00:49:45,200 --> 00:49:49,359
we probably could yeah yeah

1236
00:49:50,800 --> 00:49:53,440
robert yeah

1237
00:49:54,079 --> 00:49:57,520
for for tests i think for on the chamber

1238
00:49:56,960 --> 00:50:00,640
part

1239
00:49:57,520 --> 00:50:03,680
the interesting part will be defining

1240
00:50:00,640 --> 00:50:04,078
an address book type like like what we

1241
00:50:03,680 --> 00:50:06,399
have

1242
00:50:04,079 --> 00:50:07,599
for chamber calendars as a calendar type

1243
00:50:06,400 --> 00:50:10,720
uh this is what

1244
00:50:07,599 --> 00:50:12,559
might most likely be different for tasks

1245
00:50:10,720 --> 00:50:15,118
oh sorry i i i was thinking about

1246
00:50:12,559 --> 00:50:17,440
context now but for tests also what

1247
00:50:15,119 --> 00:50:18,160
what is the bucket where a task should

1248
00:50:17,440 --> 00:50:20,000
be

1249
00:50:18,160 --> 00:50:23,520
part of and that might differ from the

1250
00:50:20,000 --> 00:50:25,040
calendar yeah okay sorry i was yeah

1251
00:50:23,520 --> 00:50:27,440
that's that would be in the in the gmap

1252
00:50:25,040 --> 00:50:28,800
task spec a task list or something like

1253
00:50:27,440 --> 00:50:31,839
that i suspect

1254
00:50:28,800 --> 00:50:33,200
yes but that's actually that's like some

1255
00:50:31,839 --> 00:50:35,839
question i had uh

1256
00:50:33,200 --> 00:50:37,439
so you have this js group object as well

1257
00:50:35,839 --> 00:50:39,359
in js calendar

1258
00:50:37,440 --> 00:50:41,359
why don't you use it in jm app for

1259
00:50:39,359 --> 00:50:44,960
calendar

1260
00:50:41,359 --> 00:50:45,520
because it's um it wouldn't be very

1261
00:50:44,960 --> 00:50:47,599
efficient

1262
00:50:45,520 --> 00:50:48,880
it's it's just one big collection of

1263
00:50:47,599 --> 00:50:51,119
items whereas

1264
00:50:48,880 --> 00:50:52,640
um jmap gives you a way much more

1265
00:50:51,119 --> 00:50:54,480
efficiently querying

1266
00:50:52,640 --> 00:50:56,480
so you just get just the days you need

1267
00:50:54,480 --> 00:50:58,720
and getting updates to that

1268
00:50:56,480 --> 00:51:00,319
aren't in an efficient way so the js

1269
00:50:58,720 --> 00:51:02,558
group is more for publication

1270
00:51:00,319 --> 00:51:04,079
um when you're just pushing out a file

1271
00:51:02,559 --> 00:51:07,520
and that's it it'll be gone

1272
00:51:04,079 --> 00:51:09,920
um we'll just take it up uh yeah whereas

1273
00:51:07,520 --> 00:51:11,440
when you're using jmap we have something

1274
00:51:09,920 --> 00:51:23,839
more sophisticated

1275
00:51:11,440 --> 00:51:23,839
okay okay thanks

1276
00:51:27,920 --> 00:51:31,200
all right we have about 10 minutes left

1277
00:51:29,520 --> 00:51:33,119
the final thing on my agenda

1278
00:51:31,200 --> 00:51:34,480
is the milestones does anyone have

1279
00:51:33,119 --> 00:51:37,839
anything else we want to talk about

1280
00:51:34,480 --> 00:51:37,839
before we get to those

1281
00:51:43,760 --> 00:51:46,240
guess not

1282
00:51:46,960 --> 00:51:51,839
all right so

1283
00:51:52,960 --> 00:51:55,680
make one more

1284
00:52:00,079 --> 00:52:07,280
the milestones we have at the moment are

1285
00:52:04,319 --> 00:52:08,558
lots of stuff uh submit jam up quotas to

1286
00:52:07,280 --> 00:52:11,280
isg that

1287
00:52:08,559 --> 00:52:12,079
still pending and jmf s mime is still

1288
00:52:11,280 --> 00:52:13,680
pending as well

1289
00:52:12,079 --> 00:52:15,599
alex is going to get back to that at

1290
00:52:13,680 --> 00:52:19,279
some point but has been busy with

1291
00:52:15,599 --> 00:52:21,200
i'm at 4 of 2.

1292
00:52:19,280 --> 00:52:23,920
blobs we'll do the call for adoption

1293
00:52:21,200 --> 00:52:27,279
soon gem up sieve we've adopted

1294
00:52:23,920 --> 00:52:29,920
um s1 key management will push

1295
00:52:27,280 --> 00:52:31,040
further back alexi when do you think

1296
00:52:29,920 --> 00:52:34,720
we'll get to

1297
00:52:31,040 --> 00:52:34,720
the rest of the s mime stuff

1298
00:52:39,440 --> 00:52:46,800
um spring

1299
00:52:43,599 --> 00:52:48,960
spring cool all right that's um that's

1300
00:52:46,800 --> 00:52:52,079
november here in australia

1301
00:52:48,960 --> 00:52:54,000
spring so next year no okay

1302
00:52:52,079 --> 00:52:56,000
six months or so four months something

1303
00:52:54,000 --> 00:52:59,280
like that cool

1304
00:52:56,000 --> 00:53:01,440
i will do that more than well especially

1305
00:52:59,280 --> 00:53:03,280
if i'm up 4f2 is done

1306
00:53:01,440 --> 00:53:05,599
which i really hope that we can get our

1307
00:53:03,280 --> 00:53:08,800
ladies to actually do something about so

1308
00:53:05,599 --> 00:53:10,720
i'll i'll say hello next year yeah that

1309
00:53:08,800 --> 00:53:12,640
sounds about right

1310
00:53:10,720 --> 00:53:14,480
cool the blobs work will be pushed back

1311
00:53:12,640 --> 00:53:16,558
a little bit because i've i've been slow

1312
00:53:14,480 --> 00:53:18,319
on getting it to here

1313
00:53:16,559 --> 00:53:20,720
submit a document with guidance

1314
00:53:18,319 --> 00:53:21,680
implementers imap servers and proxies

1315
00:53:20,720 --> 00:53:24,399
informational

1316
00:53:21,680 --> 00:53:27,359
we've punched this out to december 2020

1317
00:53:24,400 --> 00:53:31,119
we've punched it a couple of times

1318
00:53:27,359 --> 00:53:33,359
um we still do need to do that

1319
00:53:31,119 --> 00:53:35,280
i guess you and i will sit down do that

1320
00:53:33,359 --> 00:53:38,400
at some stage neil

1321
00:53:35,280 --> 00:53:38,400
one of these happy days

1322
00:53:38,640 --> 00:53:45,279
um js contact

1323
00:53:43,760 --> 00:53:48,000
when do we think that will be ready to

1324
00:53:45,280 --> 00:53:48,000
go robert

1325
00:53:49,119 --> 00:53:54,400
um i can't hear you anymore braun but um

1326
00:53:52,400 --> 00:53:56,319
yeah i guess four to six months is also

1327
00:53:54,400 --> 00:54:00,240
a good um

1328
00:53:56,319 --> 00:54:03,759
good time frame cool

1329
00:54:00,240 --> 00:54:03,759
and finally jam up sieve

1330
00:54:07,680 --> 00:54:11,598
as far as i'm concerned it's fairly

1331
00:54:09,680 --> 00:54:14,000
close um

1332
00:54:11,599 --> 00:54:15,680
you know pending reviews i don't i think

1333
00:54:14,000 --> 00:54:16,800
other than other than you brown and

1334
00:54:15,680 --> 00:54:19,359
alexis i'm not sure who else has

1335
00:54:16,800 --> 00:54:21,760
actually read it at this point

1336
00:54:19,359 --> 00:54:23,200
i guess let's do a last call once we've

1337
00:54:21,760 --> 00:54:25,920
switched it on at fast

1338
00:54:23,200 --> 00:54:26,879
and and had some implementation

1339
00:54:25,920 --> 00:54:28,960
experience with

1340
00:54:26,880 --> 00:54:28,960
it

1341
00:54:31,200 --> 00:54:34,558
cool so that that timeline of december

1342
00:54:33,359 --> 00:54:37,759
still looks

1343
00:54:34,559 --> 00:54:40,720
reasonable in that case would do a last

1344
00:54:37,760 --> 00:54:40,720
call in a couple of weeks

1345
00:54:41,119 --> 00:54:48,640
awesome all right thanks everybody

1346
00:54:44,400 --> 00:54:53,839
do we have anything else to do before we

1347
00:54:48,640 --> 00:54:53,839
pack it in

1348
00:54:55,599 --> 00:54:59,119
all right i appreciate all your time see

1349
00:54:58,319 --> 00:55:03,839
you all in

1350
00:54:59,119 --> 00:55:06,240
in four months in virtual prague

1351
00:55:03,839 --> 00:55:07,279
or possibly at an interim cal connect in

1352
00:55:06,240 --> 00:55:11,040
between since we

1353
00:55:07,280 --> 00:55:11,040
tend to do a session for gmap as well

1354
00:55:15,040 --> 00:55:21,200
anything else no all right thanks jim

1355
00:55:18,319 --> 00:55:35,839
thanks for taking notes take care see

1356
00:55:21,200 --> 00:55:35,839
you next time everybody

1357
00:55:48,880 --> 00:56:03,839
murray it looks like you just appeared

1358
00:55:52,319 --> 00:56:03,839
we just we just adjourned

1359
00:56:17,680 --> 00:56:19,759
you

