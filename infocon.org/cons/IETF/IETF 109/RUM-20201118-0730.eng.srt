1
00:00:11,200 --> 00:00:17,840
i'm hearing different background noise

2
00:00:14,559 --> 00:00:21,198
no brian i'm not sure if you are you

3
00:00:17,840 --> 00:00:21,198
hearing any background noise

4
00:00:24,400 --> 00:00:29,198
i heard this noise that i had heard

5
00:00:27,439 --> 00:00:30,240
before where we thought it was just

6
00:00:29,199 --> 00:00:32,880
brian spann

7
00:00:30,240 --> 00:00:34,640
but your your audio actually sounded

8
00:00:32,880 --> 00:00:36,880
broken up there when you was speaking

9
00:00:34,640 --> 00:00:36,880
paul

10
00:00:40,879 --> 00:00:46,640
not noise just broken audio your audio

11
00:00:44,239 --> 00:00:50,320
is breaking up

12
00:00:46,640 --> 00:00:52,320
oh i've had trouble i've had trouble

13
00:00:50,320 --> 00:00:53,680
with some conferencing systems in these

14
00:00:52,320 --> 00:00:55,760
headphones so

15
00:00:53,680 --> 00:00:58,239
i may try to turn the headphones off and

16
00:00:55,760 --> 00:01:13,840
see yeah

17
00:00:58,239 --> 00:01:13,840
yeah that's worse but i can try it

18
00:01:24,840 --> 00:01:27,840
uh

19
00:01:43,200 --> 00:01:55,840
it's a minute past our start time so

20
00:01:47,840 --> 00:01:55,840
we can try

21
00:01:57,439 --> 00:02:00,880
paul i see your headphones are off or

22
00:01:59,040 --> 00:02:03,520
your no your audio isn't coming through

23
00:02:00,880 --> 00:02:03,520
i can't hear you

24
00:02:06,960 --> 00:02:14,319
nope can you hear me now

25
00:02:10,639 --> 00:02:18,640
yep there you go is that better

26
00:02:14,319 --> 00:02:22,079
yes okay i don't know what it is

27
00:02:18,640 --> 00:02:26,958
okay we can get started

28
00:02:22,080 --> 00:02:37,840
yeah um just a second i gotta share

29
00:02:26,959 --> 00:02:37,840
here are your chair slides yeah

30
00:02:50,640 --> 00:02:55,518
okay can you see the slides yep

31
00:02:57,200 --> 00:02:59,599
okay

32
00:03:01,040 --> 00:03:06,640
um i think most everybody here

33
00:03:04,080 --> 00:03:08,159
has been been to a meeting an ietf

34
00:03:06,640 --> 00:03:10,079
meeting before

35
00:03:08,159 --> 00:03:12,000
if you haven't ever read the note well

36
00:03:10,080 --> 00:03:13,440
you better read it it has to do with how

37
00:03:12,000 --> 00:03:18,239
you participate

38
00:03:13,440 --> 00:03:21,760
in all kind of legal crap uh

39
00:03:18,239 --> 00:03:21,760
we won't go into any more than that

40
00:03:23,920 --> 00:03:28,000
yeah welcome to where where are we brian

41
00:03:26,640 --> 00:03:31,518
singapore

42
00:03:28,000 --> 00:03:33,840
yeah now we're in bangkok oh bangkok

43
00:03:31,519 --> 00:03:33,840
okay

44
00:03:35,440 --> 00:03:38,959
hope you're enjoying the weather here

45
00:03:44,640 --> 00:03:50,159
that's why we're at this uh ungodly hour

46
00:03:47,760 --> 00:03:50,159
um

47
00:03:51,200 --> 00:03:54,958
and at least for the people who live in

48
00:03:53,760 --> 00:03:58,560
that area

49
00:03:54,959 --> 00:03:58,560
it's it's a good time for them

50
00:03:59,040 --> 00:04:02,640
i don't think we have any of them but

51
00:04:03,840 --> 00:04:10,239
so uh welcome to rum

52
00:04:07,760 --> 00:04:12,000
we haven't done much for quite a while

53
00:04:10,239 --> 00:04:16,879
um

54
00:04:12,000 --> 00:04:16,879
a little bit of mail discussion um

55
00:04:17,358 --> 00:04:25,599
we're hoping to get things going and

56
00:04:20,639 --> 00:04:25,600
hopefully finished before too long uh

57
00:04:26,000 --> 00:04:29,600
we've only got one thing on the agenda

58
00:04:27,919 --> 00:04:34,799
really and just to

59
00:04:29,600 --> 00:04:34,800
talk about the open issues on uh

60
00:04:34,960 --> 00:04:40,320
you know draft ietf from roof um

61
00:04:41,199 --> 00:04:47,840
and uh other than that we'll

62
00:04:45,199 --> 00:04:49,680
you know that's all we got to do today

63
00:04:47,840 --> 00:04:51,758
uh if anybody else has something else

64
00:04:49,680 --> 00:04:54,400
they want to add to the agenda and it's

65
00:04:51,759 --> 00:04:57,840
a good time to speak up and

66
00:04:54,400 --> 00:04:57,840
say what it is

67
00:05:02,560 --> 00:05:05,440
go ahead eugene

68
00:05:07,199 --> 00:05:11,120
one of the things that's the open issue

69
00:05:09,199 --> 00:05:11,520
is obviously what we've been talking

70
00:05:11,120 --> 00:05:14,800
about

71
00:05:11,520 --> 00:05:15,919
in the email thread right the securing

72
00:05:14,800 --> 00:05:19,759
of

73
00:05:15,919 --> 00:05:19,758
files okay thank you

74
00:05:22,840 --> 00:05:25,840
um

75
00:05:28,240 --> 00:05:32,560
okay i think there's nothing else we can

76
00:05:31,520 --> 00:05:34,960
turn it over to

77
00:05:32,560 --> 00:05:36,960
uh brian you gotta push your own slides

78
00:05:34,960 --> 00:05:39,198
you want me to push your slides

79
00:05:36,960 --> 00:05:41,359
i know i can push the slides uh note

80
00:05:39,199 --> 00:05:44,639
well

81
00:05:41,360 --> 00:05:44,639
yeah i mentioned it already

82
00:05:45,600 --> 00:05:51,680
i i didn't hear that but that's okay um

83
00:05:48,720 --> 00:05:52,479
it's a itf meeting and subject to the

84
00:05:51,680 --> 00:05:55,840
notewell

85
00:05:52,479 --> 00:06:00,080
rules all right

86
00:05:55,840 --> 00:06:05,280
i i didn't see that okay okay

87
00:06:00,080 --> 00:06:10,159
all right so uh so i'm going to

88
00:06:05,280 --> 00:06:10,159
publish the screen yes

89
00:06:10,960 --> 00:06:18,400
uh application chrome tab

90
00:06:14,600 --> 00:06:18,400
documentation share

91
00:06:18,960 --> 00:06:25,758
um let's see

92
00:06:22,720 --> 00:06:29,120
there okay

93
00:06:25,759 --> 00:06:30,960
so uh these are the two open issues that

94
00:06:29,120 --> 00:06:33,840
i believe we have

95
00:06:30,960 --> 00:06:35,280
um one is the provider control of the

96
00:06:33,840 --> 00:06:39,280
authorized apps

97
00:06:35,280 --> 00:06:42,159
and the other is the cr uh the um

98
00:06:39,280 --> 00:06:43,919
configuration file or how cred

99
00:06:42,160 --> 00:06:45,440
credentials for registration are

100
00:06:43,919 --> 00:06:47,359
kept especially when there's a white one

101
00:06:45,440 --> 00:06:48,000
i'm not seeing i'm not seeing what

102
00:06:47,360 --> 00:06:51,039
you're talking

103
00:06:48,000 --> 00:06:51,039
about on the screen

104
00:06:51,520 --> 00:06:54,639
you don't have a slide that says two

105
00:06:52,880 --> 00:06:55,120
known open issues let me look at what's

106
00:06:54,639 --> 00:06:58,319
going on

107
00:06:55,120 --> 00:07:01,440
i see a slide that says latest results

108
00:06:58,319 --> 00:07:04,160
okay uh

109
00:07:01,440 --> 00:07:06,719
weird invitation you've shared the

110
00:07:04,160 --> 00:07:09,840
medico documentation

111
00:07:06,720 --> 00:07:13,520
yeah this this should be

112
00:07:09,840 --> 00:07:14,840
well all right let's try it it should be

113
00:07:13,520 --> 00:07:18,159
[Music]

114
00:07:14,840 --> 00:07:22,880
here all right let's try

115
00:07:18,160 --> 00:07:26,880
hang on one second um

116
00:07:22,880 --> 00:07:32,319
go back to this

117
00:07:26,880 --> 00:07:32,319
stop sharing publish screen yes

118
00:07:32,880 --> 00:07:35,759
chrome tab

119
00:07:39,680 --> 00:07:47,840
um there

120
00:07:44,080 --> 00:07:53,120
share how's that

121
00:07:47,840 --> 00:07:53,119
that's better okay wrong button

122
00:07:53,520 --> 00:07:59,039
okay um so

123
00:07:56,720 --> 00:08:01,039
the two issues the first one is the

124
00:07:59,039 --> 00:08:02,400
provider controller over unauthorized

125
00:08:01,039 --> 00:08:04,318
applications

126
00:08:02,400 --> 00:08:05,520
and the other is the configuration file

127
00:08:04,319 --> 00:08:06,800
which is how credentials for

128
00:08:05,520 --> 00:08:08,400
registration are kept

129
00:08:06,800 --> 00:08:10,319
especially when the provider when the

130
00:08:08,400 --> 00:08:10,960
user has more than one provider that he

131
00:08:10,319 --> 00:08:12,639
sees

132
00:08:10,960 --> 00:08:14,239
he has two telephone numbers from two

133
00:08:12,639 --> 00:08:17,280
different providers or

134
00:08:14,240 --> 00:08:20,240
more than one so

135
00:08:17,280 --> 00:08:21,919
um starting with the first one um

136
00:08:20,240 --> 00:08:23,919
providers wanted to control over what

137
00:08:21,919 --> 00:08:27,520
apps get access to their infrastructure

138
00:08:23,919 --> 00:08:28,159
reasonable requests request in in closed

139
00:08:27,520 --> 00:08:30,479
systems

140
00:08:28,160 --> 00:08:31,919
the example is the easy example is ios

141
00:08:30,479 --> 00:08:34,958
the way they do that is they sign

142
00:08:31,919 --> 00:08:35,519
code and the system that loads programs

143
00:08:34,958 --> 00:08:38,880
only

144
00:08:35,519 --> 00:08:40,719
allows sign code to load so you

145
00:08:38,880 --> 00:08:43,200
they have very tight control over what

146
00:08:40,719 --> 00:08:44,480
apps can run you you can only run apps

147
00:08:43,200 --> 00:08:47,839
that come from the

148
00:08:44,480 --> 00:08:50,640
ios store um

149
00:08:47,839 --> 00:08:52,160
we don't have a closed system um you

150
00:08:50,640 --> 00:08:54,160
could have one on ios

151
00:08:52,160 --> 00:08:55,279
if you had an ios app but that that's

152
00:08:54,160 --> 00:08:57,760
roughly it

153
00:08:55,279 --> 00:08:59,760
other than that it's pretty pretty open

154
00:08:57,760 --> 00:09:01,040
and there's very little control that we

155
00:08:59,760 --> 00:09:03,200
have over

156
00:09:01,040 --> 00:09:04,480
what code can be loaded so we can't use

157
00:09:03,200 --> 00:09:06,000
that mechanism that's all

158
00:09:04,480 --> 00:09:08,160
my only point is that that mechanism

159
00:09:06,000 --> 00:09:11,279
won't work

160
00:09:08,160 --> 00:09:14,160
the the alternative that most people use

161
00:09:11,279 --> 00:09:16,720
for this kind of thing is what we've

162
00:09:14,160 --> 00:09:20,160
been calling an api key

163
00:09:16,720 --> 00:09:24,880
um and an api key is a is a

164
00:09:20,160 --> 00:09:27,600
as a string it's it's a secret

165
00:09:24,880 --> 00:09:30,080
and it's given to the app provider after

166
00:09:27,600 --> 00:09:32,800
the code is tested

167
00:09:30,080 --> 00:09:34,959
and the string is sent encrypted as part

168
00:09:32,800 --> 00:09:37,120
of initializing the app

169
00:09:34,959 --> 00:09:39,599
and only that apps that haven't that

170
00:09:37,120 --> 00:09:43,120
have been approved will have a valid key

171
00:09:39,600 --> 00:09:46,399
um because it's sent encrypted

172
00:09:43,120 --> 00:09:47,600
you can't steal a key from another

173
00:09:46,399 --> 00:09:50,800
program

174
00:09:47,600 --> 00:09:52,959
um and uh it it

175
00:09:50,800 --> 00:09:54,640
it can be provided per provider right so

176
00:09:52,959 --> 00:09:55,439
each provider could have their own key

177
00:09:54,640 --> 00:09:59,199
and the

178
00:09:55,440 --> 00:10:01,440
app could put the right key in um

179
00:09:59,200 --> 00:10:02,880
typically you send this as a header or a

180
00:10:01,440 --> 00:10:05,279
json object

181
00:10:02,880 --> 00:10:06,480
in an https transaction that's typically

182
00:10:05,279 --> 00:10:09,200
how it's used

183
00:10:06,480 --> 00:10:10,160
we could do that um or we could send it

184
00:10:09,200 --> 00:10:12,720
in a sip header

185
00:10:10,160 --> 00:10:13,439
maybe a call info header in the register

186
00:10:12,720 --> 00:10:16,240
operation

187
00:10:13,440 --> 00:10:17,279
so both of those are possible and the

188
00:10:16,240 --> 00:10:19,519
the the

189
00:10:17,279 --> 00:10:20,959
the question on the floor is is this is

190
00:10:19,519 --> 00:10:23,040
an acceptable mechanism

191
00:10:20,959 --> 00:10:24,640
if it is i'm happy to write the text for

192
00:10:23,040 --> 00:10:27,120
it um and we can

193
00:10:24,640 --> 00:10:28,560
you know can make sure that that that

194
00:10:27,120 --> 00:10:30,880
that says what we want and all that

195
00:10:28,560 --> 00:10:34,079
other stuff but i'm i'm very happy to

196
00:10:30,880 --> 00:10:37,200
um create the text that that defines how

197
00:10:34,079 --> 00:10:38,880
an api key is used um i

198
00:10:37,200 --> 00:10:40,800
will i would like to have a discussion

199
00:10:38,880 --> 00:10:43,519
on do you want it on the register or

200
00:10:40,800 --> 00:10:47,120
just do it with an https transaction

201
00:10:43,519 --> 00:10:49,920
um and and um we can

202
00:10:47,120 --> 00:10:50,640
we can work out how all the details work

203
00:10:49,920 --> 00:10:53,279
so

204
00:10:50,640 --> 00:10:53,680
i'd i'd like to have some discussion now

205
00:10:53,279 --> 00:10:57,519
um

206
00:10:53,680 --> 00:11:00,560
about that um and you know

207
00:10:57,519 --> 00:11:03,760
is this what what what providers want is

208
00:11:00,560 --> 00:11:05,119
is is doing it in https enough or do you

209
00:11:03,760 --> 00:11:07,360
want it to be done in

210
00:11:05,120 --> 00:11:09,440
in the sip register happy to do it

211
00:11:07,360 --> 00:11:12,480
either way whatever whatever works

212
00:11:09,440 --> 00:11:14,560
um is fine um and and

213
00:11:12,480 --> 00:11:15,920
are there any other questions or

214
00:11:14,560 --> 00:11:19,040
suggestions or

215
00:11:15,920 --> 00:11:23,040
or whatever so the the floor is open

216
00:11:19,040 --> 00:11:24,480
um for people um we have a small number

217
00:11:23,040 --> 00:11:26,319
of people who are here if you want to

218
00:11:24,480 --> 00:11:28,480
use the cue by all means do that that's

219
00:11:26,320 --> 00:11:29,519
our normal process is put yourself in

220
00:11:28,480 --> 00:11:33,040
the queue and

221
00:11:29,519 --> 00:11:35,440
and we'll recognize you um or

222
00:11:33,040 --> 00:11:36,719
um you can just unmute and talk and

223
00:11:35,440 --> 00:11:39,279
it'll be all right there's a small

224
00:11:36,720 --> 00:11:39,279
number of us

225
00:11:40,000 --> 00:11:43,839
once you go first eugene

226
00:11:47,120 --> 00:11:53,600
i personally feel that

227
00:11:50,320 --> 00:11:57,040
using it outside of sip

228
00:11:53,600 --> 00:12:00,720
would be a good option

229
00:11:57,040 --> 00:12:03,519
um as an https transaction

230
00:12:00,720 --> 00:12:04,320
um you know when when we actually do the

231
00:12:03,519 --> 00:12:06,160
register

232
00:12:04,320 --> 00:12:08,160
and those types of things of course

233
00:12:06,160 --> 00:12:12,639
we're in sip but

234
00:12:08,160 --> 00:12:17,199
um if it's pre-sip

235
00:12:12,639 --> 00:12:19,600
connection maybe just using the https

236
00:12:17,200 --> 00:12:22,240
transaction would be

237
00:12:19,600 --> 00:12:23,200
a good option i'm certainly not expert

238
00:12:22,240 --> 00:12:26,639
in the

239
00:12:23,200 --> 00:12:28,320
security of of things so maybe i don't

240
00:12:26,639 --> 00:12:30,160
understand

241
00:12:28,320 --> 00:12:33,279
why putting it in the sip header would

242
00:12:30,160 --> 00:12:36,000
be a better way to go i'm not sure

243
00:12:33,279 --> 00:12:37,600
it just avoids having to do that https

244
00:12:36,000 --> 00:12:40,560
transaction that's that's really

245
00:12:37,600 --> 00:12:43,920
the only thing i i actually like i

246
00:12:40,560 --> 00:12:47,920
prefer to do it with https only because

247
00:12:43,920 --> 00:12:49,120
um uh it it's kind of the normal way

248
00:12:47,920 --> 00:12:50,959
you know you're kind of you're you're

249
00:12:49,120 --> 00:12:51,519
you're you're falling down a hole that's

250
00:12:50,959 --> 00:12:54,638
been

251
00:12:51,519 --> 00:12:58,000
been well smoothed out

252
00:12:54,639 --> 00:12:59,519
um and and and so if if you ask me what

253
00:12:58,000 --> 00:13:01,279
i think we want to do i think

254
00:12:59,519 --> 00:13:02,720
let's just do it with an https

255
00:13:01,279 --> 00:13:03,519
transaction that happens before the

256
00:13:02,720 --> 00:13:06,639
register

257
00:13:03,519 --> 00:13:07,200
it's an authorization step that you have

258
00:13:06,639 --> 00:13:09,040
to do

259
00:13:07,200 --> 00:13:10,800
your register will be rejected if you

260
00:13:09,040 --> 00:13:13,920
don't do it um

261
00:13:10,800 --> 00:13:16,479
uh and and and um

262
00:13:13,920 --> 00:13:18,000
uh i i think that's a perfectly

263
00:13:16,480 --> 00:13:20,240
reasonable thing to do

264
00:13:18,000 --> 00:13:21,920
that would be my preference i'd rather

265
00:13:20,240 --> 00:13:25,120
not go mess with sip

266
00:13:21,920 --> 00:13:25,599
but i'm happy to do that if if if if

267
00:13:25,120 --> 00:13:30,880
that's

268
00:13:25,600 --> 00:13:30,880
what what we want i mean

269
00:13:33,200 --> 00:13:39,279
yeah yeah that that

270
00:13:36,800 --> 00:13:40,240
is another place to put it i mean if we

271
00:13:39,279 --> 00:13:44,079
might i mean

272
00:13:40,240 --> 00:13:47,600
otherwise go ahead

273
00:13:44,079 --> 00:13:49,279
yes the second open issue is the

274
00:13:47,600 --> 00:13:51,199
configuration file and then there's at

275
00:13:49,279 --> 00:13:51,600
least some versions of doing that that

276
00:13:51,199 --> 00:13:54,319
it

277
00:13:51,600 --> 00:13:55,360
involves downloading things from from a

278
00:13:54,320 --> 00:13:57,199
provider and

279
00:13:55,360 --> 00:13:58,800
if that happens then that's the

280
00:13:57,199 --> 00:14:02,079
transaction we'll use

281
00:13:58,800 --> 00:14:04,959
to authorize yeah that that kind of

282
00:14:02,079 --> 00:14:04,959
makes sense to me

283
00:14:05,279 --> 00:14:08,560
one thing i was wondering about about

284
00:14:07,120 --> 00:14:12,560
this is

285
00:14:08,560 --> 00:14:15,680
has to do with the uh the mechanism

286
00:14:12,560 --> 00:14:18,160
by which these things get

287
00:14:15,680 --> 00:14:20,079
author you'll get certified or you know

288
00:14:18,160 --> 00:14:23,319
verified or whatever you know

289
00:14:20,079 --> 00:14:24,479
is there a separate i mean does every

290
00:14:23,320 --> 00:14:27,199
implementation

291
00:14:24,480 --> 00:14:28,000
need to test separately with every

292
00:14:27,199 --> 00:14:30,319
provider

293
00:14:28,000 --> 00:14:32,800
and get a separate key from each

294
00:14:30,320 --> 00:14:35,680
provider

295
00:14:32,800 --> 00:14:38,160
or i i think that that's that we can

296
00:14:35,680 --> 00:14:39,839
make that out of scope for our spec

297
00:14:38,160 --> 00:14:41,839
and the providers can decide among

298
00:14:39,839 --> 00:14:45,040
themselves how they want to do it

299
00:14:41,839 --> 00:14:49,120
we can make the mechanism work both ways

300
00:14:45,040 --> 00:14:50,160
and and you you can have the same key

301
00:14:49,120 --> 00:14:53,199
for all providers

302
00:14:50,160 --> 00:14:57,279
you can have independent keys um i

303
00:14:53,199 --> 00:14:58,079
i i given that the itef is international

304
00:14:57,279 --> 00:15:01,040
i don't want to

305
00:14:58,079 --> 00:15:01,519
bias this towards you know the the the

306
00:15:01,040 --> 00:15:04,319
u.s

307
00:15:01,519 --> 00:15:05,680
providers and let them decide um and

308
00:15:04,320 --> 00:15:08,880
make that stick

309
00:15:05,680 --> 00:15:12,160
um for everybody um

310
00:15:08,880 --> 00:15:14,560
so i i unless

311
00:15:12,160 --> 00:15:16,399
they all think that the right thing to

312
00:15:14,560 --> 00:15:18,000
do is once

313
00:15:16,399 --> 00:15:20,079
somebody tests and then everybody

314
00:15:18,000 --> 00:15:24,240
accepts that is acceptable

315
00:15:20,079 --> 00:15:26,319
um i i think allowing it to be provider

316
00:15:24,240 --> 00:15:29,519
is probably the way to to

317
00:15:26,320 --> 00:15:29,519
to to write this back

318
00:15:29,680 --> 00:15:34,079
it seems to me at least we need we need

319
00:15:32,160 --> 00:15:35,680
to know the cardinality if the if the

320
00:15:34,079 --> 00:15:38,560
roo has to keep one

321
00:15:35,680 --> 00:15:39,519
per provider right you know if it's part

322
00:15:38,560 --> 00:15:40,800
of the part

323
00:15:39,519 --> 00:15:44,399
effectively if it's part of the

324
00:15:40,800 --> 00:15:44,399
configuration information

325
00:15:44,480 --> 00:15:50,800
um i think it's simpler than that

326
00:15:47,680 --> 00:15:52,880
the there's already the remember there

327
00:15:50,800 --> 00:15:55,120
there's already the configuration file

328
00:15:52,880 --> 00:15:56,800
which is common which is the list of

329
00:15:55,120 --> 00:15:59,680
available providers

330
00:15:56,800 --> 00:16:01,920
right so if you have the list of

331
00:15:59,680 --> 00:16:02,800
available providers then you can have a

332
00:16:01,920 --> 00:16:05,759
list of

333
00:16:02,800 --> 00:16:08,000
keys associated with each provider and

334
00:16:05,759 --> 00:16:08,639
substitute the right one when you when

335
00:16:08,000 --> 00:16:11,600
you go in

336
00:16:08,639 --> 00:16:14,160
so it's pretty easy to make it work per

337
00:16:11,600 --> 00:16:14,160
provider

338
00:16:14,800 --> 00:16:21,839
but i it it's also

339
00:16:18,079 --> 00:16:24,079
complex if if indeed

340
00:16:21,839 --> 00:16:27,199
app vendor has to get approved by every

341
00:16:24,079 --> 00:16:27,199
provider separately

342
00:16:30,399 --> 00:16:33,759
i think it's just a matter of

343
00:16:34,800 --> 00:16:39,599
what what the you know somebody who's

344
00:16:37,519 --> 00:16:42,880
building a route

345
00:16:39,600 --> 00:16:44,720
uh what what what

346
00:16:42,880 --> 00:16:46,720
do they have to build in you know do

347
00:16:44,720 --> 00:16:49,360
they have to build a separate mechanism

348
00:16:46,720 --> 00:16:50,079
for u.s providers a different mechanism

349
00:16:49,360 --> 00:16:53,040
for

350
00:16:50,079 --> 00:16:54,160
if they go somewhere else no i think

351
00:16:53,040 --> 00:16:57,199
again i think that

352
00:16:54,160 --> 00:17:00,880
the way the spec could be written is

353
00:16:57,199 --> 00:17:01,439
that that it can be per provider or it

354
00:17:00,880 --> 00:17:04,559
can be

355
00:17:01,440 --> 00:17:07,919
one um and and and

356
00:17:04,559 --> 00:17:09,760
it basically if it's

357
00:17:07,919 --> 00:17:11,439
if it if you're in an environment where

358
00:17:09,760 --> 00:17:12,879
there's only one then there'll only be

359
00:17:11,439 --> 00:17:13,760
one and if you're an environment where

360
00:17:12,880 --> 00:17:15,280
there's more than

361
00:17:13,760 --> 00:17:17,280
one you know there's one per provider

362
00:17:15,280 --> 00:17:18,079
then you'll have you'll have to have a

363
00:17:17,280 --> 00:17:20,559
configuration

364
00:17:18,079 --> 00:17:22,079
of one one per provider but i think

365
00:17:20,559 --> 00:17:23,760
that's

366
00:17:22,079 --> 00:17:26,079
it even could be mixed right you know

367
00:17:23,760 --> 00:17:27,119
provider a and b can use a common one

368
00:17:26,079 --> 00:17:30,240
and provider c

369
00:17:27,119 --> 00:17:32,000
can have have its own i mean that as

370
00:17:30,240 --> 00:17:34,880
long as you allow per provider

371
00:17:32,000 --> 00:17:35,520
and and have have the notion of common

372
00:17:34,880 --> 00:17:38,960
then

373
00:17:35,520 --> 00:17:40,720
it's just how it's how it's set up

374
00:17:38,960 --> 00:17:42,799
in fact it's built into the code right

375
00:17:40,720 --> 00:17:45,440
or it could be built into code for a

376
00:17:42,799 --> 00:17:47,039
particular region anyways

377
00:17:45,440 --> 00:17:49,600
can can we hear from other people what

378
00:17:47,039 --> 00:17:51,520
they prefer to see is

379
00:17:49,600 --> 00:17:53,199
what do you think this ought to be one

380
00:17:51,520 --> 00:17:54,000
one per provider or you know a keeper

381
00:17:53,200 --> 00:17:55,919
provider

382
00:17:54,000 --> 00:17:57,679
or or do you think that it actually

383
00:17:55,919 --> 00:18:01,840
might work out to be

384
00:17:57,679 --> 00:18:01,840
one for a region

385
00:18:03,200 --> 00:18:07,360
anybody wanna offer an opinion

386
00:18:13,600 --> 00:18:19,280
i am eugene here yeah

387
00:18:17,120 --> 00:18:20,799
so jim here uh so everybody else is

388
00:18:19,280 --> 00:18:23,520
being quiet today

389
00:18:20,799 --> 00:18:25,918
um having listened to the providers for

390
00:18:23,520 --> 00:18:28,240
for a number of years on this topic

391
00:18:25,919 --> 00:18:29,039
um it's not at all clear to me that uh

392
00:18:28,240 --> 00:18:31,280
provider a

393
00:18:29,039 --> 00:18:32,400
is going to be satisfied with provider b

394
00:18:31,280 --> 00:18:36,000
is testing that this

395
00:18:32,400 --> 00:18:38,720
is uh not impactful to their service so

396
00:18:36,000 --> 00:18:39,760
you again it's a regulatory issue right

397
00:18:38,720 --> 00:18:41,760
do we have a

398
00:18:39,760 --> 00:18:43,600
an individual certifying entity that

399
00:18:41,760 --> 00:18:44,799
does the testing and says this works for

400
00:18:43,600 --> 00:18:47,280
all providers

401
00:18:44,799 --> 00:18:49,039
or does each provider have to do that

402
00:18:47,280 --> 00:18:50,160
brian your earlier point i think that

403
00:18:49,039 --> 00:18:52,320
that could be

404
00:18:50,160 --> 00:18:54,640
locale specific right just because the

405
00:18:52,320 --> 00:18:56,240
us decides to do it one particular way

406
00:18:54,640 --> 00:18:58,320
doesn't mean that another country would

407
00:18:56,240 --> 00:19:00,960
do the same thing

408
00:18:58,320 --> 00:19:02,720
so suspect in the us we would be looking

409
00:19:00,960 --> 00:19:05,600
at a per-provider

410
00:19:02,720 --> 00:19:06,480
certification it doesn't seem like the

411
00:19:05,600 --> 00:19:09,678
spec ought to

412
00:19:06,480 --> 00:19:13,200
lock you into that particular

413
00:19:09,679 --> 00:19:13,200
thought process right

414
00:19:13,280 --> 00:19:18,000
yeah i i i i think i have some ideas i

415
00:19:16,640 --> 00:19:20,080
want to noodle them in my head and i'll

416
00:19:18,000 --> 00:19:22,240
write some text down to

417
00:19:20,080 --> 00:19:24,559
make it possible to be you know region

418
00:19:22,240 --> 00:19:26,400
specific where

419
00:19:24,559 --> 00:19:28,320
where it could be in one region it's one

420
00:19:26,400 --> 00:19:31,360
way in another region it's another way

421
00:19:28,320 --> 00:19:32,399
that that's fine and do recall that if

422
00:19:31,360 --> 00:19:34,320
we

423
00:19:32,400 --> 00:19:36,480
realize maybe not recall but realize

424
00:19:34,320 --> 00:19:38,639
that if it's implemented per provider

425
00:19:36,480 --> 00:19:39,200
and two providers decide oh look we'll

426
00:19:38,640 --> 00:19:42,320
we'll

427
00:19:39,200 --> 00:19:44,559
trust each other's keys then

428
00:19:42,320 --> 00:19:46,080
then that that's what happens right you

429
00:19:44,559 --> 00:19:49,440
you you you just

430
00:19:46,080 --> 00:19:53,840
use providers a key with provider b

431
00:19:49,440 --> 00:19:53,840
and it'll work

432
00:19:57,120 --> 00:20:02,320
uh any other comments i i thought i

433
00:20:00,160 --> 00:20:07,760
heard someone else try and get in when

434
00:20:02,320 --> 00:20:11,439
jim started is there someone else

435
00:20:07,760 --> 00:20:11,840
now have we looked at the possibility to

436
00:20:11,440 --> 00:20:14,960
use

437
00:20:11,840 --> 00:20:16,399
existing methods like oauth or saml or

438
00:20:14,960 --> 00:20:19,679
anything else

439
00:20:16,400 --> 00:20:23,280
for this it seems like we're reinventing

440
00:20:19,679 --> 00:20:25,840
different problems created

441
00:20:23,280 --> 00:20:26,399
this is not a this is not a authorize a

442
00:20:25,840 --> 00:20:29,120
user

443
00:20:26,400 --> 00:20:31,760
issue this is a authorize a piece of

444
00:20:29,120 --> 00:20:31,760
code issue

445
00:20:32,559 --> 00:20:39,760
yeah but the piece of code gets a key

446
00:20:35,840 --> 00:20:41,280
as well in those but yeah we can to the

447
00:20:39,760 --> 00:20:44,080
extent that an api

448
00:20:41,280 --> 00:20:45,678
an api key is a key yeah i mean that's

449
00:20:44,080 --> 00:20:49,840
true but i don't i've never heard of

450
00:20:45,679 --> 00:20:49,840
someone trying to use oauth to do that

451
00:20:50,880 --> 00:20:54,960
you're they would that would involve

452
00:20:53,280 --> 00:20:56,639
infrastructure that would be hard to

453
00:20:54,960 --> 00:20:58,640
come up with in some regions right

454
00:20:56,640 --> 00:21:01,520
you're talking about

455
00:20:58,640 --> 00:21:01,520
putting up could be

456
00:21:01,760 --> 00:21:04,960
you know um

457
00:21:05,200 --> 00:21:08,799
i mean identity provider also gets gets

458
00:21:08,240 --> 00:21:12,240
keys

459
00:21:08,799 --> 00:21:14,799
in order i mean you you you

460
00:21:12,240 --> 00:21:16,640
right apply for a key with facebook to

461
00:21:14,799 --> 00:21:18,879
use facebook

462
00:21:16,640 --> 00:21:19,840
right yeah yeah yeah yeah yeah yeah i

463
00:21:18,880 --> 00:21:22,480
mean so

464
00:21:19,840 --> 00:21:23,600
so patients actually get some sort of

465
00:21:22,480 --> 00:21:26,559
key there

466
00:21:23,600 --> 00:21:27,918
right right so so for those of you who

467
00:21:26,559 --> 00:21:29,760
are not following this there's the

468
00:21:27,919 --> 00:21:30,000
notion of using something like oauth

469
00:21:29,760 --> 00:21:33,679
which

470
00:21:30,000 --> 00:21:37,200
is a single sign-on mechanism right so

471
00:21:33,679 --> 00:21:38,799
the there's there would be some sort of

472
00:21:37,200 --> 00:21:40,400
identity provider and again you could

473
00:21:38,799 --> 00:21:41,840
have one per region or you could have

474
00:21:40,400 --> 00:21:45,679
one per

475
00:21:41,840 --> 00:21:48,399
per provider and and and then

476
00:21:45,679 --> 00:21:50,000
um well i guess it'd have to be one per

477
00:21:48,400 --> 00:21:51,039
region in order for that to work right

478
00:21:50,000 --> 00:21:54,320
so then

479
00:21:51,039 --> 00:21:58,158
you get a key um

480
00:21:54,320 --> 00:22:00,320
uh that that you can use

481
00:21:58,159 --> 00:22:02,799
with the identity provider to prove to

482
00:22:00,320 --> 00:22:06,000
another provider that you're good

483
00:22:02,799 --> 00:22:07,280
um i'm not sure how would you

484
00:22:06,000 --> 00:22:09,520
how would you make that work for this

485
00:22:07,280 --> 00:22:10,960
app who who would who who do you think

486
00:22:09,520 --> 00:22:13,280
would run the

487
00:22:10,960 --> 00:22:15,120
identity provider and when how would how

488
00:22:13,280 --> 00:22:17,600
would anybody get a key from that

489
00:22:15,120 --> 00:22:20,959
identity provider

490
00:22:17,600 --> 00:22:22,480
well i mean what one thing is identity

491
00:22:20,960 --> 00:22:25,440
to provide the other is

492
00:22:22,480 --> 00:22:26,640
how you register the services but i

493
00:22:25,440 --> 00:22:29,840
guess it depends

494
00:22:26,640 --> 00:22:31,440
uh i mean sweden you get kind of public

495
00:22:29,840 --> 00:22:34,000
funding you get authorized to use a

496
00:22:31,440 --> 00:22:37,600
service then you go pick a service

497
00:22:34,000 --> 00:22:39,120
on the market obviously there's not many

498
00:22:37,600 --> 00:22:41,760
market players here

499
00:22:39,120 --> 00:22:43,039
and right public provided players as

500
00:22:41,760 --> 00:22:46,720
well right

501
00:22:43,039 --> 00:22:48,720
right so i mean

502
00:22:46,720 --> 00:22:50,880
maybe you could use your facebook

503
00:22:48,720 --> 00:22:53,200
account to log in

504
00:22:50,880 --> 00:22:54,159
but the providers has to get in i don't

505
00:22:53,200 --> 00:22:56,480
know uh

506
00:22:54,159 --> 00:22:58,320
you can also look at something like saml

507
00:22:56,480 --> 00:23:00,400
or eduroam

508
00:22:58,320 --> 00:23:02,720
where you have a account in one

509
00:23:00,400 --> 00:23:05,760
university can log into all universities

510
00:23:02,720 --> 00:23:05,760
that provide services

511
00:23:05,919 --> 00:23:10,240
well so yeah it could be another way but

512
00:23:09,039 --> 00:23:13,520
i

513
00:23:10,240 --> 00:23:16,159
i get that but i i i

514
00:23:13,520 --> 00:23:17,120
i'm still not exactly clear how it would

515
00:23:16,159 --> 00:23:19,840
work if you could

516
00:23:17,120 --> 00:23:21,520
sort of maybe send an email to the list

517
00:23:19,840 --> 00:23:22,080
describing how you think it would

518
00:23:21,520 --> 00:23:24,639
actually

519
00:23:22,080 --> 00:23:26,960
work i'm i'm having trouble i mean i

520
00:23:24,640 --> 00:23:28,799
kind of understand the concept but i'm

521
00:23:26,960 --> 00:23:31,679
i'm having trouble understanding the

522
00:23:28,799 --> 00:23:34,080
mechanics and maybe i'm being biased by

523
00:23:31,679 --> 00:23:34,720
what jim said which is in in north

524
00:23:34,080 --> 00:23:36,559
america

525
00:23:34,720 --> 00:23:38,640
it would be hard to have a single

526
00:23:36,559 --> 00:23:41,760
anything

527
00:23:38,640 --> 00:23:42,799
it's likely to be you know the per

528
00:23:41,760 --> 00:23:46,559
provider kind of

529
00:23:42,799 --> 00:23:48,480
world and

530
00:23:46,559 --> 00:23:50,720
providers don't necessarily trust each

531
00:23:48,480 --> 00:23:52,640
other in some circumstances anyways

532
00:23:50,720 --> 00:23:54,480
sometimes they do sometimes they don't

533
00:23:52,640 --> 00:23:56,080
regulations require that they trust them

534
00:23:54,480 --> 00:23:58,240
in certain circumstances and

535
00:23:56,080 --> 00:24:00,320
in other circumstances they they do

536
00:23:58,240 --> 00:24:04,080
voluntarily and others they don't

537
00:24:00,320 --> 00:24:06,399
um so i'm not sure

538
00:24:04,080 --> 00:24:08,639
exactly how it would work i kind of see

539
00:24:06,400 --> 00:24:10,559
the idea but i don't see the

540
00:24:08,640 --> 00:24:12,159
it's not clear to me how that how how it

541
00:24:10,559 --> 00:24:13,840
would actually

542
00:24:12,159 --> 00:24:17,600
work so if you could kind of send an

543
00:24:13,840 --> 00:24:17,600
email describing how it would work

544
00:24:21,840 --> 00:24:25,039
all right all right it's an interesting

545
00:24:24,080 --> 00:24:26,480
alternative

546
00:24:25,039 --> 00:24:27,919
it's an interesting alternative and

547
00:24:26,480 --> 00:24:30,080
there's not a whole lot of difference

548
00:24:27,919 --> 00:24:32,159
between using saml and using

549
00:24:30,080 --> 00:24:33,678
oauth right i mean it would still

550
00:24:32,159 --> 00:24:35,279
fundamentally they would work the same

551
00:24:33,679 --> 00:24:36,799
way it's just the mechanics that would

552
00:24:35,279 --> 00:24:39,919
be different

553
00:24:36,799 --> 00:24:42,320
saml has a federated trust that i find

554
00:24:39,919 --> 00:24:44,080
very very interesting yeah but where you

555
00:24:42,320 --> 00:24:48,399
have a set of authorized

556
00:24:44,080 --> 00:24:51,039
identity providers yeah so

557
00:24:48,400 --> 00:24:53,520
okay that could be the state or a couple

558
00:24:51,039 --> 00:24:56,720
of states or something

559
00:24:53,520 --> 00:24:57,760
so send send and send a message to the

560
00:24:56,720 --> 00:25:00,640
list

561
00:24:57,760 --> 00:25:01,360
so we can think about it but right at

562
00:25:00,640 --> 00:25:03,520
the moment

563
00:25:01,360 --> 00:25:04,959
let's we'll pursue the api key as being

564
00:25:03,520 --> 00:25:08,080
something that's acceptable

565
00:25:04,960 --> 00:25:08,799
and maybe we can have a better idea uh

566
00:25:08,080 --> 00:25:11,120
another

567
00:25:08,799 --> 00:25:12,240
question about the api key is whether or

568
00:25:11,120 --> 00:25:14,799
not it's

569
00:25:12,240 --> 00:25:17,520
just a random string or if it's actually

570
00:25:14,799 --> 00:25:20,400
a token that contains some data

571
00:25:17,520 --> 00:25:21,600
like we use in open id connect or

572
00:25:20,400 --> 00:25:24,159
something

573
00:25:21,600 --> 00:25:26,158
is this assigned something by something

574
00:25:24,159 --> 00:25:27,200
that we can use to transport some sort

575
00:25:26,159 --> 00:25:30,640
of data

576
00:25:27,200 --> 00:25:34,159
just an open question in many cases

577
00:25:30,640 --> 00:25:35,200
uh the keys in used in authentication

578
00:25:34,159 --> 00:25:38,880
systems

579
00:25:35,200 --> 00:25:38,880
actually contain some data

580
00:25:39,360 --> 00:25:43,439
so yeah i mean typically an api key

581
00:25:42,320 --> 00:25:47,678
doesn't

582
00:25:43,440 --> 00:25:50,880
um although they're

583
00:25:47,679 --> 00:25:53,919
actually what i'm no

584
00:25:50,880 --> 00:25:54,640
in some environments it it it it does

585
00:25:53,919 --> 00:25:56,720
but it's in

586
00:25:54,640 --> 00:25:58,640
totally invisible nobody actually knows

587
00:25:56,720 --> 00:26:00,960
that there's data in there but the

588
00:25:58,640 --> 00:26:01,919
provider the the the the guy who

589
00:26:00,960 --> 00:26:05,600
generates the key

590
00:26:01,919 --> 00:26:08,240
actually is keeping data in it

591
00:26:05,600 --> 00:26:10,000
i i yeah i don't think the spec would

592
00:26:08,240 --> 00:26:13,360
say that

593
00:26:10,000 --> 00:26:16,240
no but we can keep an open mind

594
00:26:13,360 --> 00:26:17,600
see if that's useful in any in any way

595
00:26:16,240 --> 00:26:21,200
shape or form

596
00:26:17,600 --> 00:26:25,279
sure sure i mean i i've

597
00:26:21,200 --> 00:26:28,720
built a system that effectively

598
00:26:25,279 --> 00:26:31,520
put the identity of the of the

599
00:26:28,720 --> 00:26:33,279
of the provider in the key just because

600
00:26:31,520 --> 00:26:38,480
it was easier to do it there than keep a

601
00:26:33,279 --> 00:26:41,039
separate database

602
00:26:38,480 --> 00:26:43,360
it worked i mean i mean you can have

603
00:26:41,039 --> 00:26:47,039
time limits in the api keys

604
00:26:43,360 --> 00:26:48,799
yeah yeah yeah sure sure yep yeah

605
00:26:47,039 --> 00:26:50,240
yeah sure you put the time you issued

606
00:26:48,799 --> 00:26:52,720
the key and all kinds of other great

607
00:26:50,240 --> 00:26:54,960
stuff in it it's just the string so

608
00:26:52,720 --> 00:26:56,720
you know put some data in it digest it

609
00:26:54,960 --> 00:26:59,919
and you're done

610
00:26:56,720 --> 00:27:03,360
yep um

611
00:26:59,919 --> 00:27:06,960
okay anyone else with um

612
00:27:03,360 --> 00:27:11,039
with thoughts on that i mean

613
00:27:06,960 --> 00:27:13,600
it seems like the api key is acceptable

614
00:27:11,039 --> 00:27:14,559
um ali is talking about a possible

615
00:27:13,600 --> 00:27:16,879
alternative

616
00:27:14,559 --> 00:27:19,039
so we'll let them see if you can write

617
00:27:16,880 --> 00:27:19,600
down how it would work and look at it as

618
00:27:19,039 --> 00:27:23,520
an

619
00:27:19,600 --> 00:27:26,639
alternative but

620
00:27:23,520 --> 00:27:28,320
i i'm hearing that api key will be okay

621
00:27:26,640 --> 00:27:30,159
is that is that true is there

622
00:27:28,320 --> 00:27:31,439
anyone who who doesn't think that it

623
00:27:30,159 --> 00:27:33,520
would be acceptable

624
00:27:31,440 --> 00:27:35,840
to use an api key is the solution to

625
00:27:33,520 --> 00:27:35,840
this problem

626
00:27:36,720 --> 00:27:41,120
jim wants to talk go ahead jim

627
00:27:41,679 --> 00:27:46,399
jim here very quickly ali you mentioned

628
00:27:43,919 --> 00:27:49,520
uh perhaps using your facebook id

629
00:27:46,399 --> 00:27:51,120
as as a uh as a common uh

630
00:27:49,520 --> 00:27:52,080
mechanism for this because then you

631
00:27:51,120 --> 00:27:53,199
already have the centralized

632
00:27:52,080 --> 00:27:55,279
infrastructure

633
00:27:53,200 --> 00:27:57,440
but the facebook id is attached to the

634
00:27:55,279 --> 00:28:00,080
user not to the device

635
00:27:57,440 --> 00:28:01,600
um something to keep in mind as you as

636
00:28:00,080 --> 00:28:02,879
you write something up here is that it

637
00:28:01,600 --> 00:28:04,559
really does need to be tied to the

638
00:28:02,880 --> 00:28:07,120
device

639
00:28:04,559 --> 00:28:09,039
so i just wanted to point that out i um

640
00:28:07,120 --> 00:28:12,399
either i'm missing something or

641
00:28:09,039 --> 00:28:16,000
or that doesn't okay quite work

642
00:28:12,399 --> 00:28:17,760
yeah no i i i guess i i i miss that but

643
00:28:16,000 --> 00:28:19,600
the device

644
00:28:17,760 --> 00:28:21,039
you you want to authenticate the

645
00:28:19,600 --> 00:28:24,080
implementation of that

646
00:28:21,039 --> 00:28:25,600
actual hardware correct well software

647
00:28:24,080 --> 00:28:28,080
but yes

648
00:28:25,600 --> 00:28:28,959
it may be a device or it may just be a

649
00:28:28,080 --> 00:28:32,320
software

650
00:28:28,960 --> 00:28:33,760
app on a standard device correct yeah

651
00:28:32,320 --> 00:28:35,200
but we're not looking for the mac

652
00:28:33,760 --> 00:28:38,879
address we're looking for

653
00:28:35,200 --> 00:28:42,000
a certain release of a certain software

654
00:28:38,880 --> 00:28:43,520
correct that's exactly it it's a

655
00:28:42,000 --> 00:28:45,840
it's a certain release of a certain

656
00:28:43,520 --> 00:28:45,840
software

657
00:28:46,480 --> 00:28:55,120
that's that's correct yep

658
00:28:50,559 --> 00:28:59,840
all right uh anyone else's

659
00:28:55,120 --> 00:28:59,840
go ahead james

660
00:29:00,240 --> 00:29:06,320
hi sorry can you hear me yeah

661
00:29:03,279 --> 00:29:09,520
um i just had a um an rfc

662
00:29:06,320 --> 00:29:13,039
that sprung to mind i i don't

663
00:29:09,520 --> 00:29:16,000
know the oauth is um

664
00:29:13,039 --> 00:29:17,200
the way we would want to go i just uh i

665
00:29:16,000 --> 00:29:21,360
noticed there's a

666
00:29:17,200 --> 00:29:23,279
best practice roc8252 on oauth for

667
00:29:21,360 --> 00:29:26,559
native apps

668
00:29:23,279 --> 00:29:28,320
um i just hadn't seen those mentioned

669
00:29:26,559 --> 00:29:30,320
and i just wonder it might help us

670
00:29:28,320 --> 00:29:31,760
clear up the nomenclature around

671
00:29:30,320 --> 00:29:35,600
different types of keys and

672
00:29:31,760 --> 00:29:39,039
and that kind of thing sure sure

673
00:29:35,600 --> 00:29:42,080
i think go ahead is it

674
00:29:39,039 --> 00:29:45,120
is a potential candidate for

675
00:29:42,080 --> 00:29:45,760
the the the basic authentication for the

676
00:29:45,120 --> 00:29:49,039
user

677
00:29:45,760 --> 00:29:50,720
i don't know so much for the device

678
00:29:49,039 --> 00:29:52,399
well i mean that ollie wants to propose

679
00:29:50,720 --> 00:29:53,200
it for the device so we'll we'll figure

680
00:29:52,399 --> 00:29:56,959
out if you can

681
00:29:53,200 --> 00:29:56,960
come up with a mechanism that'll work

682
00:29:57,200 --> 00:30:00,399
any any other thoughts

683
00:30:00,880 --> 00:30:04,880
okay so we're going to summary

684
00:30:03,200 --> 00:30:08,559
summarizing here

685
00:30:04,880 --> 00:30:10,720
i just just a reminder of itf

686
00:30:08,559 --> 00:30:12,639
process right we don't make decisions at

687
00:30:10,720 --> 00:30:14,559
meetings we make tentative decisions and

688
00:30:12,640 --> 00:30:18,159
we confirm them on the list

689
00:30:14,559 --> 00:30:20,399
so um even if we decided

690
00:30:18,159 --> 00:30:22,000
full start that we're gonna do the api

691
00:30:20,399 --> 00:30:23,039
key we would still have to go back to

692
00:30:22,000 --> 00:30:25,600
the list and

693
00:30:23,039 --> 00:30:27,360
ask people their thoughts on it so that

694
00:30:25,600 --> 00:30:30,639
that's just our process

695
00:30:27,360 --> 00:30:30,639
um but

696
00:30:30,960 --> 00:30:35,679
i'm what i'm hearing at the moment is an

697
00:30:33,919 --> 00:30:39,039
api key is acceptable

698
00:30:35,679 --> 00:30:42,399
as is an acceptable answer

699
00:30:39,039 --> 00:30:45,279
and we might have an alternative answer

700
00:30:42,399 --> 00:30:46,879
using something like oh after saml ollie

701
00:30:45,279 --> 00:30:48,159
is going to go and write up how he

702
00:30:46,880 --> 00:30:49,440
thinks that might work and we'll

703
00:30:48,159 --> 00:30:52,399
consider it

704
00:30:49,440 --> 00:30:53,360
we'll do that on the list i'll start

705
00:30:52,399 --> 00:30:57,678
writing

706
00:30:53,360 --> 00:31:00,799
uh text for api key once we make the

707
00:30:57,679 --> 00:31:01,120
decision on the list on if ellie's idea

708
00:31:00,799 --> 00:31:04,240
has

709
00:31:01,120 --> 00:31:07,439
merit i'll i'll uh

710
00:31:04,240 --> 00:31:09,919
you know if we decide that then then

711
00:31:07,440 --> 00:31:12,080
he may probably i will cooperate on

712
00:31:09,919 --> 00:31:14,799
creating some text for that idea

713
00:31:12,080 --> 00:31:17,600
um and otherwise they'll be uh the next

714
00:31:14,799 --> 00:31:20,879
version will have either the api key or

715
00:31:17,600 --> 00:31:21,279
or or if this oauth saml id works out

716
00:31:20,880 --> 00:31:23,200
we'll

717
00:31:21,279 --> 00:31:25,120
we'll have that so that's what i'm

718
00:31:23,200 --> 00:31:28,559
hearing i'm going to do

719
00:31:25,120 --> 00:31:30,959
as author um and and so

720
00:31:28,559 --> 00:31:33,120
that and it's good from my point of view

721
00:31:30,960 --> 00:31:35,919
this is good we have at least a solution

722
00:31:33,120 --> 00:31:35,918
and we might have two

723
00:31:37,440 --> 00:31:42,000
okay so i'm i'm going to go on to the

724
00:31:39,279 --> 00:31:42,000
next item

725
00:31:43,760 --> 00:31:51,120
so this is the configuration file issue

726
00:31:47,679 --> 00:31:53,600
the the the way the current text works

727
00:31:51,120 --> 00:31:55,039
it's a local file with sections for each

728
00:31:53,600 --> 00:31:58,000
provider single file

729
00:31:55,039 --> 00:31:59,360
sections for each provider it currently

730
00:31:58,000 --> 00:32:01,279
is described as

731
00:31:59,360 --> 00:32:02,959
having account user id and password and

732
00:32:01,279 --> 00:32:06,240
clear text in that file

733
00:32:02,960 --> 00:32:09,200
and that was deemed unacceptable um

734
00:32:06,240 --> 00:32:09,519
i i note that almost every voip device

735
00:32:09,200 --> 00:32:12,799
you

736
00:32:09,519 --> 00:32:13,679
you have has such a file and it does in

737
00:32:12,799 --> 00:32:16,158
most of the

738
00:32:13,679 --> 00:32:17,760
way are in clear text which is not a

739
00:32:16,159 --> 00:32:19,840
good idea but it's there

740
00:32:17,760 --> 00:32:20,960
it has a local storage of username and

741
00:32:19,840 --> 00:32:24,158
password

742
00:32:20,960 --> 00:32:27,200
and and most um store

743
00:32:24,159 --> 00:32:28,799
the the um

744
00:32:27,200 --> 00:32:30,640
more than one provider you know a

745
00:32:28,799 --> 00:32:32,480
multi-line phone right so you can have

746
00:32:30,640 --> 00:32:34,960
all the configuration information

747
00:32:32,480 --> 00:32:36,080
for each of your lines on your on your

748
00:32:34,960 --> 00:32:39,440
voip phone

749
00:32:36,080 --> 00:32:41,360
um in that local storage and that's

750
00:32:39,440 --> 00:32:43,039
what we're replicating that that you

751
00:32:41,360 --> 00:32:45,519
know what a voip phone does

752
00:32:43,039 --> 00:32:46,240
you you can configure each line with you

753
00:32:45,519 --> 00:32:49,279
know

754
00:32:46,240 --> 00:32:51,519
where the proxy server is and what your

755
00:32:49,279 --> 00:32:53,039
username and password is and what your

756
00:32:51,519 --> 00:32:54,480
telephone number is and all the other

757
00:32:53,039 --> 00:32:56,320
good things that are provisionable in

758
00:32:54,480 --> 00:32:59,039
that configuration file

759
00:32:56,320 --> 00:32:59,760
um your turn servers all of those are in

760
00:32:59,039 --> 00:33:01,679
that

761
00:32:59,760 --> 00:33:04,320
that piece of configuration it might be

762
00:33:01,679 --> 00:33:06,799
a little piece of flash as opposed to a

763
00:33:04,320 --> 00:33:08,000
a disk drive but it's it that that's

764
00:33:06,799 --> 00:33:11,039
that is what i'm

765
00:33:08,000 --> 00:33:15,600
what this mechanism is supposed to

766
00:33:11,039 --> 00:33:19,840
replicate um so we've had lots of ideas

767
00:33:15,600 --> 00:33:23,360
that have been tossed around on the list

768
00:33:19,840 --> 00:33:27,039
including using open id or saml

769
00:33:23,360 --> 00:33:29,120
as a way of authenticating users

770
00:33:27,039 --> 00:33:30,879
and then getting configuration out of

771
00:33:29,120 --> 00:33:32,959
that

772
00:33:30,880 --> 00:33:34,240
or we've talked about having a local

773
00:33:32,960 --> 00:33:36,799
login so the

774
00:33:34,240 --> 00:33:38,320
app would have a username and password

775
00:33:36,799 --> 00:33:40,799
that the user would put in that would

776
00:33:38,320 --> 00:33:42,799
unlock the configuration file

777
00:33:40,799 --> 00:33:44,000
and so a lot of these ideas have been

778
00:33:42,799 --> 00:33:46,320
thrown around

779
00:33:44,000 --> 00:33:47,519
um and i'm hoping that we can have a

780
00:33:46,320 --> 00:33:50,559
good discussion now

781
00:33:47,519 --> 00:33:52,240
on what we want to do and

782
00:33:50,559 --> 00:33:53,840
and hopefully we'll come up with at

783
00:33:52,240 --> 00:33:54,720
least a tentative answer or more than

784
00:33:53,840 --> 00:33:57,120
you know one

785
00:33:54,720 --> 00:33:58,559
at least one answer that we can start

786
00:33:57,120 --> 00:34:01,439
writing text on

787
00:33:58,559 --> 00:34:01,840
so again the floor is open on on ideas

788
00:34:01,440 --> 00:34:06,960
for

789
00:34:01,840 --> 00:34:09,759
how we handle this configuration file

790
00:34:06,960 --> 00:34:12,800
can we start with agreeing that the

791
00:34:09,760 --> 00:34:15,280
implementations that we have in sip

792
00:34:12,800 --> 00:34:18,079
when had for over 10 years is

793
00:34:15,280 --> 00:34:20,240
embarrassing in the year of 2020

794
00:34:18,079 --> 00:34:21,520
and we shouldn't use them as a starting

795
00:34:20,239 --> 00:34:24,719
point

796
00:34:21,520 --> 00:34:27,040
at all the user id passwords

797
00:34:24,719 --> 00:34:28,078
in clear text md5 authentication and

798
00:34:27,040 --> 00:34:31,440
stuff we

799
00:34:28,079 --> 00:34:31,440
have to leave behind

800
00:34:32,079 --> 00:34:38,079
i think using a setup where we have some

801
00:34:35,760 --> 00:34:40,800
sort of certificate enrollment

802
00:34:38,079 --> 00:34:42,560
where the run device create a key parry

803
00:34:40,800 --> 00:34:46,159
gets a certificate

804
00:34:42,560 --> 00:34:48,480
somehow and then use that

805
00:34:46,159 --> 00:34:50,800
then we can bootstrap configurations by

806
00:34:48,480 --> 00:34:52,560
having encrypted configurations that

807
00:34:50,800 --> 00:34:55,280
encrypted with the public key of the

808
00:34:52,560 --> 00:34:57,279
device and we can use the certificate

809
00:34:55,280 --> 00:35:00,079
for authentication and sip which is a

810
00:34:57,280 --> 00:35:00,079
really good thing

811
00:35:00,160 --> 00:35:04,960
i think we just have to escape the

812
00:35:03,280 --> 00:35:07,040
the stuff you have in the middle of your

813
00:35:04,960 --> 00:35:09,440
slide is

814
00:35:07,040 --> 00:35:11,119
that how we have done it is embarrassing

815
00:35:09,440 --> 00:35:14,240
and shouldn't be the base on how we

816
00:35:11,119 --> 00:35:17,520
create new citizens

817
00:35:14,240 --> 00:35:19,359
well i personally am with you ali

818
00:35:17,520 --> 00:35:20,560
a lot of people have a lot of code that

819
00:35:19,359 --> 00:35:23,759
uses all that stuff

820
00:35:20,560 --> 00:35:26,000
and they're sometimes reluctant to uh to

821
00:35:23,760 --> 00:35:26,880
to replace it with something more modern

822
00:35:26,000 --> 00:35:30,320
but

823
00:35:26,880 --> 00:35:34,079
if it were up to me i would do that

824
00:35:30,320 --> 00:35:36,160
um do does everybody understand what

825
00:35:34,079 --> 00:35:39,200
what ollie is talking about here we

826
00:35:36,160 --> 00:35:42,839
we added the ability to use

827
00:35:39,200 --> 00:35:47,200
um uh open id

828
00:35:42,839 --> 00:35:51,359
um you know with with real certificates

829
00:35:47,200 --> 00:35:52,000
um uh instead of username password

830
00:35:51,359 --> 00:35:55,359
instead of

831
00:35:52,000 --> 00:35:59,839
you know digest um

832
00:35:55,359 --> 00:35:59,839
and and he's advocating using that

833
00:35:59,920 --> 00:36:03,839
well open id is one part of the puzzle

834
00:36:02,960 --> 00:36:07,359
but

835
00:36:03,839 --> 00:36:10,640
somehow setting up a device

836
00:36:07,359 --> 00:36:13,920
certificate and the renewal of that

837
00:36:10,640 --> 00:36:15,839
regular renewal of that certificate

838
00:36:13,920 --> 00:36:17,040
i think is an important part of the

839
00:36:15,839 --> 00:36:20,160
puzzle

840
00:36:17,040 --> 00:36:21,839
uh how you get that certificate is

841
00:36:20,160 --> 00:36:24,160
an interesting prospect but since we

842
00:36:21,839 --> 00:36:26,640
have an https transaction in the

843
00:36:24,160 --> 00:36:26,640
beginning

844
00:36:26,960 --> 00:36:30,800
we can do a lot of things assuming we

845
00:36:30,000 --> 00:36:34,160
have a

846
00:36:30,800 --> 00:36:36,160
user interface that well

847
00:36:34,160 --> 00:36:37,279
okay but in a standards-based

848
00:36:36,160 --> 00:36:39,279
environment

849
00:36:37,280 --> 00:36:41,040
let's say that we did that that we we

850
00:36:39,280 --> 00:36:44,000
had an http transaction

851
00:36:41,040 --> 00:36:45,440
so we've got a certificate we've done

852
00:36:44,000 --> 00:36:47,520
some

853
00:36:45,440 --> 00:36:49,359
local authentication using that

854
00:36:47,520 --> 00:36:51,599
certificate to create the https

855
00:36:49,359 --> 00:36:53,598
transaction we've created a tls session

856
00:36:51,599 --> 00:36:54,800
using that certificate you know mutual

857
00:36:53,599 --> 00:36:58,000
off

858
00:36:54,800 --> 00:37:00,400
so now what now what

859
00:36:58,000 --> 00:37:03,440
it's a shaking and egg problem because

860
00:37:00,400 --> 00:37:05,839
the certificate needs to be trusted by

861
00:37:03,440 --> 00:37:06,800
a set of providers and how do we

862
00:37:05,839 --> 00:37:08,880
establish

863
00:37:06,800 --> 00:37:10,240
a trust in a third party by all these

864
00:37:08,880 --> 00:37:13,760
providers for

865
00:37:10,240 --> 00:37:16,799
the client search right

866
00:37:13,760 --> 00:37:17,839
yeah but again i'm i'm looking for

867
00:37:16,800 --> 00:37:19,359
standards right

868
00:37:17,839 --> 00:37:21,680
i know how to do that with open id

869
00:37:19,359 --> 00:37:24,720
because there's an rfc that does that

870
00:37:21,680 --> 00:37:27,279
if i were trying to use a certificate

871
00:37:24,720 --> 00:37:27,839
and i wasn't trying to use open id what

872
00:37:27,280 --> 00:37:30,960
would i

873
00:37:27,839 --> 00:37:32,000
what rfc would i be referencing the

874
00:37:30,960 --> 00:37:33,920
thing is

875
00:37:32,000 --> 00:37:35,760
there's a lot of ways to set up server

876
00:37:33,920 --> 00:37:37,440
certificates you have acme

877
00:37:35,760 --> 00:37:40,880
you have a lot of protocols for doing

878
00:37:37,440 --> 00:37:44,000
that for the client certificates

879
00:37:40,880 --> 00:37:47,760
we have an old c party that is

880
00:37:44,000 --> 00:37:50,000
well it's beautiful uh

881
00:37:47,760 --> 00:37:52,160
con considering those times but it

882
00:37:50,000 --> 00:37:56,160
doesn't work anymore

883
00:37:52,160 --> 00:37:56,399
um you need to have first an agreement

884
00:37:56,160 --> 00:38:00,160
on

885
00:37:56,400 --> 00:38:00,160
a device id right

886
00:38:00,640 --> 00:38:06,640
and is that the same the the login on

887
00:38:04,480 --> 00:38:08,880
the device is that the same as the user

888
00:38:06,640 --> 00:38:09,920
login it's the user login we want here

889
00:38:08,880 --> 00:38:13,839
right

890
00:38:09,920 --> 00:38:15,280
right well it's registered right right

891
00:38:13,839 --> 00:38:18,240
what are we using to protect the

892
00:38:15,280 --> 00:38:20,000
register and there are a lot of i mean

893
00:38:18,240 --> 00:38:23,279
you you can take oauth and

894
00:38:20,000 --> 00:38:26,160
start with an oauth or sample

895
00:38:23,280 --> 00:38:27,040
login that ends up in a certificate i

896
00:38:26,160 --> 00:38:29,279
did that

897
00:38:27,040 --> 00:38:30,880
15 years ago in the university

898
00:38:29,280 --> 00:38:34,160
environment

899
00:38:30,880 --> 00:38:36,240
so we had a saml login where you say oh

900
00:38:34,160 --> 00:38:39,520
i'm from this university

901
00:38:36,240 --> 00:38:42,879
and i got my

902
00:38:39,520 --> 00:38:42,880
certificate after that

903
00:38:43,280 --> 00:38:46,880
and used the client certificate to get

904
00:38:45,839 --> 00:38:50,880
the provisioning

905
00:38:46,880 --> 00:38:52,800
for my special version of bria software

906
00:38:50,880 --> 00:38:56,240
and then use the client search to

907
00:38:52,800 --> 00:38:56,240
bootstrap the tool

908
00:38:58,720 --> 00:39:04,160
i understand what you're proposing i i

909
00:39:01,839 --> 00:39:05,440
think that that's a lot of mechanism

910
00:39:04,160 --> 00:39:08,560
that would be

911
00:39:05,440 --> 00:39:12,880
unique to this environment

912
00:39:08,560 --> 00:39:15,040
and i'm wrong i can use a microsoft

913
00:39:12,880 --> 00:39:17,680
active directory to

914
00:39:15,040 --> 00:39:19,200
use an oauth to login to get a client

915
00:39:17,680 --> 00:39:21,680
search

916
00:39:19,200 --> 00:39:23,118
no i i if we do it with oauth i

917
00:39:21,680 --> 00:39:23,680
understand what i'm doing i'm not

918
00:39:23,119 --> 00:39:26,400
arguing

919
00:39:23,680 --> 00:39:29,839
off i'm arguing some other mechanism

920
00:39:26,400 --> 00:39:29,839
using assert

921
00:39:30,800 --> 00:39:34,800
we need them we need an authentication

922
00:39:33,359 --> 00:39:37,759
mechanism

923
00:39:34,800 --> 00:39:39,440
and maybe um we're not at the

924
00:39:37,760 --> 00:39:41,599
authorization level and we need an

925
00:39:39,440 --> 00:39:42,160
authentication mechanism that ends up in

926
00:39:41,599 --> 00:39:46,320
a client

927
00:39:42,160 --> 00:39:49,759
search and the client cert we want to be

928
00:39:46,320 --> 00:39:49,760
using in the zip layer

929
00:39:51,119 --> 00:39:55,440
and you would propose to use it for what

930
00:39:55,920 --> 00:39:59,359
client authentication and zip instead of

931
00:39:58,800 --> 00:40:02,720
having

932
00:39:59,359 --> 00:40:03,200
passwords and you can also use the key

933
00:40:02,720 --> 00:40:07,520
pair

934
00:40:03,200 --> 00:40:10,960
and the on the search the public key

935
00:40:07,520 --> 00:40:12,640
for encrypting the configuration file

936
00:40:10,960 --> 00:40:14,160
so you can transport that yeah yeah yeah

937
00:40:12,640 --> 00:40:17,839
yeah yeah yeah

938
00:40:14,160 --> 00:40:18,399
through proxies all right can let let's

939
00:40:17,839 --> 00:40:20,160
stop

940
00:40:18,400 --> 00:40:22,000
between you and me and get other people

941
00:40:20,160 --> 00:40:23,920
to opine about

942
00:40:22,000 --> 00:40:26,800
whether or not they think this is a

943
00:40:23,920 --> 00:40:30,560
fruitful direction

944
00:40:26,800 --> 00:40:33,839
i i think that uh we're

945
00:40:30,560 --> 00:40:35,359
we're missing some context here it seems

946
00:40:33,839 --> 00:40:37,119
to me we need

947
00:40:35,359 --> 00:40:38,799
i don't know if it's use cases or

948
00:40:37,119 --> 00:40:43,599
something we need

949
00:40:38,800 --> 00:40:46,960
some discussion of the life cycle here

950
00:40:43,599 --> 00:40:49,680
starting from we have

951
00:40:46,960 --> 00:40:51,040
we have a user he has a relationship

952
00:40:49,680 --> 00:40:54,240
with a provider

953
00:40:51,040 --> 00:40:57,520
he's got a virgin device or app

954
00:40:54,240 --> 00:41:00,000
you know what

955
00:40:57,520 --> 00:41:01,599
he and maybe he has a relationship to

956
00:41:00,000 --> 00:41:04,880
multiple providers he

957
00:41:01,599 --> 00:41:07,839
yeah how do you bootstrap up to

958
00:41:04,880 --> 00:41:07,839
having that device

959
00:41:07,920 --> 00:41:15,599
know how to use you know

960
00:41:11,760 --> 00:41:16,480
yeah bootstrap up until it's registered

961
00:41:15,599 --> 00:41:18,960
to

962
00:41:16,480 --> 00:41:20,640
you to all the providers that that he

963
00:41:18,960 --> 00:41:23,520
wants it to and then

964
00:41:20,640 --> 00:41:23,920
how does it stay that way over the long

965
00:41:23,520 --> 00:41:26,640
term

966
00:41:23,920 --> 00:41:28,319
including cases where the provider where

967
00:41:26,640 --> 00:41:31,680
there's some sort of

968
00:41:28,319 --> 00:41:34,960
compromise of keys and things need

969
00:41:31,680 --> 00:41:36,000
need to be revoked and reset and there's

970
00:41:34,960 --> 00:41:37,760
an issue there

971
00:41:36,000 --> 00:41:39,440
because if somebody's using this as a

972
00:41:37,760 --> 00:41:42,560
lifeline

973
00:41:39,440 --> 00:41:44,480
and you know the key is revoked in the

974
00:41:42,560 --> 00:41:45,520
middle of the night you don't want it so

975
00:41:44,480 --> 00:41:50,319
that

976
00:41:45,520 --> 00:41:50,319
incoming calls can't happen right

977
00:41:50,800 --> 00:41:54,240
i i we would have to work all of that

978
00:41:53,280 --> 00:41:56,160
out in order

979
00:41:54,240 --> 00:41:58,078
to to do this i think that there are

980
00:41:56,160 --> 00:42:00,480
reasonable solutions for all of that

981
00:41:58,079 --> 00:42:02,400
but i i agree that we would have to

982
00:42:00,480 --> 00:42:05,760
there be a bunch of text

983
00:42:02,400 --> 00:42:06,720
to deal with this and yeah and and ollie

984
00:42:05,760 --> 00:42:09,200
has

985
00:42:06,720 --> 00:42:10,078
made this problem bigger right we that

986
00:42:09,200 --> 00:42:12,960
this this

987
00:42:10,079 --> 00:42:14,160
slide talks about the configuration file

988
00:42:12,960 --> 00:42:16,000
and he's talking about

989
00:42:14,160 --> 00:42:17,839
more than just the configuration file

990
00:42:16,000 --> 00:42:22,240
he's talking about

991
00:42:17,839 --> 00:42:25,839
basic authentication for sip

992
00:42:22,240 --> 00:42:27,598
right i should not use the word basic

993
00:42:25,839 --> 00:42:29,040
i started with what's in the middle of

994
00:42:27,599 --> 00:42:32,079
the slide with the username

995
00:42:29,040 --> 00:42:34,720
password in clear text and i said

996
00:42:32,079 --> 00:42:36,480
let's remove that and suggested

997
00:42:34,720 --> 00:42:38,399
alternatives to that

998
00:42:36,480 --> 00:42:40,079
right that's the content of the file and

999
00:42:38,400 --> 00:42:41,839
you you went saying let's not have a

1000
00:42:40,079 --> 00:42:43,920
username and password in the file

1001
00:42:41,839 --> 00:42:46,078
let's use search instead of username and

1002
00:42:43,920 --> 00:42:48,319
password for registration

1003
00:42:46,079 --> 00:42:49,440
but we still need a configuration file

1004
00:42:48,319 --> 00:42:52,480
right i i

1005
00:42:49,440 --> 00:42:56,560
i indeed and and and

1006
00:42:52,480 --> 00:42:58,560
we can we can if we've got a cert

1007
00:42:56,560 --> 00:42:59,839
then we can maintain assert and do the

1008
00:42:58,560 --> 00:43:02,960
startup that

1009
00:42:59,839 --> 00:43:04,560
that um paul is talking about and handle

1010
00:43:02,960 --> 00:43:06,400
revocation and all the other things that

1011
00:43:04,560 --> 00:43:08,720
go along with certs

1012
00:43:06,400 --> 00:43:09,599
then the cert can be used for mutual off

1013
00:43:08,720 --> 00:43:12,399
with tls

1014
00:43:09,599 --> 00:43:13,040
the cert can be used for mutual off with

1015
00:43:12,400 --> 00:43:16,160
sip

1016
00:43:13,040 --> 00:43:17,359
i mean you could do that uh yeah but you

1017
00:43:16,160 --> 00:43:19,920
you have to consider

1018
00:43:17,359 --> 00:43:20,880
short term search not long term where

1019
00:43:19,920 --> 00:43:24,560
you have a lot

1020
00:43:20,880 --> 00:43:27,359
yeah yeah acme is here to save you um

1021
00:43:24,560 --> 00:43:28,560
so you know yeah three months not not

1022
00:43:27,359 --> 00:43:31,440
year

1023
00:43:28,560 --> 00:43:33,200
or maybe one month you know or session

1024
00:43:31,440 --> 00:43:36,160
length could be a few days but

1025
00:43:33,200 --> 00:43:37,680
still or session days oh wow you really

1026
00:43:36,160 --> 00:43:38,720
want to make them short sounds good to

1027
00:43:37,680 --> 00:43:42,000
me

1028
00:43:38,720 --> 00:43:44,078
um sure um

1029
00:43:42,000 --> 00:43:45,440
that's what we're discussing in iot for

1030
00:43:44,079 --> 00:43:47,280
device

1031
00:43:45,440 --> 00:43:49,520
because we can't handle revocation we

1032
00:43:47,280 --> 00:43:53,119
have jonathan waving

1033
00:43:49,520 --> 00:43:53,520
right sorry oh hi so i mean so when you

1034
00:43:53,119 --> 00:43:56,560
say

1035
00:43:53,520 --> 00:43:57,680
i mean i'm not sure what certs gain you

1036
00:43:56,560 --> 00:43:59,040
over open id

1037
00:43:57,680 --> 00:44:01,598
with open id has the advantage that the

1038
00:43:59,040 --> 00:44:04,480
spec is done right

1039
00:44:01,599 --> 00:44:04,960
88.99 that's what i keep that's what i

1040
00:44:04,480 --> 00:44:08,640
was

1041
00:44:04,960 --> 00:44:11,200
saying no no i want to to use the cert

1042
00:44:08,640 --> 00:44:12,799
in in the sip layer i want the result of

1043
00:44:11,200 --> 00:44:16,640
the authentication

1044
00:44:12,800 --> 00:44:19,599
to result in something i can use in sip

1045
00:44:16,640 --> 00:44:21,118
well that's what 8898 does 88 has open

1046
00:44:19,599 --> 00:44:22,400
id and sip

1047
00:44:21,119 --> 00:44:24,720
and so i'm not sure what the advantage

1048
00:44:22,400 --> 00:44:28,079
of assert is over night over

1049
00:44:24,720 --> 00:44:32,319
an open id token yeah we

1050
00:44:28,079 --> 00:44:35,520
we we have that document but it's well

1051
00:44:32,319 --> 00:44:37,520
needs to be discussed uh because that

1052
00:44:35,520 --> 00:44:39,119
i put in a requirement of an encrypted

1053
00:44:37,520 --> 00:44:40,800
token and there's not many

1054
00:44:39,119 --> 00:44:43,280
implementations of that

1055
00:44:40,800 --> 00:44:45,760
and that's why i'm hesitant to yeah i

1056
00:44:43,280 --> 00:44:48,960
mean i feel like you know the

1057
00:44:45,760 --> 00:44:50,000
you know the advantage in this context

1058
00:44:48,960 --> 00:44:53,680
of

1059
00:44:50,000 --> 00:44:54,800
you know specs that are done and

1060
00:44:53,680 --> 00:44:56,799
might actually be implemented by

1061
00:44:54,800 --> 00:44:57,359
somebody in a context that in a non-rom

1062
00:44:56,800 --> 00:45:00,720
context

1063
00:44:57,359 --> 00:45:03,040
is a great advantage

1064
00:45:00,720 --> 00:45:04,399
yeah my client search gets insip is

1065
00:45:03,040 --> 00:45:06,079
something

1066
00:45:04,400 --> 00:45:10,160
we had for a long time at least in

1067
00:45:06,079 --> 00:45:13,599
camellia that i'm using quite a lot

1068
00:45:10,160 --> 00:45:14,960
the open id stuff is still waiting for a

1069
00:45:13,599 --> 00:45:18,480
lot of

1070
00:45:14,960 --> 00:45:21,839
implementation okay

1071
00:45:18,480 --> 00:45:23,599
so the there's there's this proposal to

1072
00:45:21,839 --> 00:45:26,799
widen this whole thing out

1073
00:45:23,599 --> 00:45:28,400
and use search for everything that's a

1074
00:45:26,800 --> 00:45:32,560
change to how

1075
00:45:28,400 --> 00:45:35,680
registration would work it's a change to

1076
00:45:32,560 --> 00:45:38,160
um how i mean

1077
00:45:35,680 --> 00:45:39,279
the whole sip authentication process

1078
00:45:38,160 --> 00:45:42,160
works

1079
00:45:39,280 --> 00:45:43,760
is that something that that that we can

1080
00:45:42,160 --> 00:45:46,799
consider

1081
00:45:43,760 --> 00:45:50,400
is that is is that is that reasonable

1082
00:45:46,800 --> 00:45:50,400
to think about putting into this spec

1083
00:45:51,920 --> 00:45:58,079
this is like eugene and james and

1084
00:45:55,119 --> 00:45:59,280
jim and and and those kind of guys that

1085
00:45:58,079 --> 00:46:02,480
are in this world

1086
00:45:59,280 --> 00:46:04,880
is you do it are are you

1087
00:46:02,480 --> 00:46:08,000
are you saying hell no or or are you

1088
00:46:04,880 --> 00:46:08,000
saying impossible

1089
00:46:10,319 --> 00:46:15,599
um well they're thinking about it um the

1090
00:46:14,079 --> 00:46:18,880
one thing about

1091
00:46:15,599 --> 00:46:22,560
like using the client cert is that

1092
00:46:18,880 --> 00:46:26,319
i think it only makes it as far as the

1093
00:46:22,560 --> 00:46:28,000
the the the front-end proxy for the for

1094
00:46:26,319 --> 00:46:31,759
the server it doesn't necessarily

1095
00:46:28,000 --> 00:46:31,760
make it all the way to the registrar

1096
00:46:32,800 --> 00:46:36,400
well this is kind of what jonathan was

1097
00:46:34,720 --> 00:46:37,919
getting to and and

1098
00:46:36,400 --> 00:46:39,680
and not only is saying yeah but we've

1099
00:46:37,920 --> 00:46:43,359
been doing this for years

1100
00:46:39,680 --> 00:46:46,879
um so i mean i i i

1101
00:46:43,359 --> 00:46:51,040
i it's doable but as jonathan says

1102
00:46:46,880 --> 00:46:51,040
there's not a lot of rfc coverage for it

1103
00:46:55,200 --> 00:46:58,560
so i'm i'm still trying to figure out

1104
00:46:56,880 --> 00:47:01,440
whether i should

1105
00:46:58,560 --> 00:47:04,240
say that's great ollie but nobody else

1106
00:47:01,440 --> 00:47:08,000
wants to do it or not

1107
00:47:04,240 --> 00:47:11,200
i think we can start with agreeing that

1108
00:47:08,000 --> 00:47:12,960
the the traditional username password

1109
00:47:11,200 --> 00:47:15,839
digest authentication is safe is

1110
00:47:12,960 --> 00:47:18,160
something we don't want

1111
00:47:15,839 --> 00:47:20,319
and now we have two alternatives we have

1112
00:47:18,160 --> 00:47:23,200
the token based

1113
00:47:20,319 --> 00:47:25,279
sip authentication which is very new and

1114
00:47:23,200 --> 00:47:27,919
lacks implementations

1115
00:47:25,280 --> 00:47:29,359
and i kind of agree with eugene that if

1116
00:47:27,920 --> 00:47:34,160
you have an

1117
00:47:29,359 --> 00:47:37,279
ingress proxy you have to transport

1118
00:47:34,160 --> 00:47:38,720
the client search somewhere else in http

1119
00:47:37,280 --> 00:47:40,880
you do that

1120
00:47:38,720 --> 00:47:43,200
frequently in a header you take the

1121
00:47:40,880 --> 00:47:45,839
client search from the first

1122
00:47:43,200 --> 00:47:48,160
level and you transport it in the header

1123
00:47:45,839 --> 00:47:50,880
we have no such documents in sip

1124
00:47:48,160 --> 00:47:51,520
and i acknowledge that that is a problem

1125
00:47:50,880 --> 00:47:55,040
if you have

1126
00:47:51,520 --> 00:47:55,040
multiple proxies in the path

1127
00:48:00,720 --> 00:48:05,200
still looking for more feedback of the

1128
00:48:02,720 --> 00:48:08,480
is this is this

1129
00:48:05,200 --> 00:48:11,520
yes you agree or no you don't agree with

1130
00:48:08,480 --> 00:48:13,520
with what ollie is proposing

1131
00:48:11,520 --> 00:48:14,960
i think we we have to take this in step

1132
00:48:13,520 --> 00:48:17,920
brian can we first

1133
00:48:14,960 --> 00:48:19,280
discuss whether or not username password

1134
00:48:17,920 --> 00:48:22,079
and the yes to authentication is

1135
00:48:19,280 --> 00:48:23,839
something we want to have in 2020

1136
00:48:22,079 --> 00:48:25,359
and then look at the smoker's board of

1137
00:48:23,839 --> 00:48:27,359
options if we don't

1138
00:48:25,359 --> 00:48:28,558
okay to have digestive authentication

1139
00:48:27,359 --> 00:48:32,160
all right we

1140
00:48:28,559 --> 00:48:36,559
we can do that um heck we can use

1141
00:48:32,160 --> 00:48:39,118
our little raised hand tool how's that

1142
00:48:36,559 --> 00:48:40,000
um i i would actually like to see some

1143
00:48:39,119 --> 00:48:43,119
doc some

1144
00:48:40,000 --> 00:48:47,599
discussion before we go there um

1145
00:48:43,119 --> 00:48:49,040
this is ollie is asking if sort of a

1146
00:48:47,599 --> 00:48:52,960
fundamental question right

1147
00:48:49,040 --> 00:48:56,720
the traditional way you handle

1148
00:48:52,960 --> 00:48:59,760
authentication for sip is

1149
00:48:56,720 --> 00:49:02,480
basic or digest right and

1150
00:48:59,760 --> 00:49:03,200
use a username or password and he's

1151
00:49:02,480 --> 00:49:04,880
saying

1152
00:49:03,200 --> 00:49:06,720
this they don't allow basically i just

1153
00:49:04,880 --> 00:49:07,359
sorry don't lie sorry sorry i said the

1154
00:49:06,720 --> 00:49:10,799
wrong thing

1155
00:49:07,359 --> 00:49:14,078
digest so he's saying don't do that

1156
00:49:10,800 --> 00:49:17,520
do something involving certs or or

1157
00:49:14,079 --> 00:49:19,280
oauth tokens so that's the he wants to

1158
00:49:17,520 --> 00:49:22,960
make that the first question

1159
00:49:19,280 --> 00:49:25,440
is that a reasonable thing to do

1160
00:49:22,960 --> 00:49:26,640
as he says in 2020 we're writing a spec

1161
00:49:25,440 --> 00:49:28,720
in 2020

1162
00:49:26,640 --> 00:49:31,520
is it reasonable to say no no no we're

1163
00:49:28,720 --> 00:49:33,439
not going to use

1164
00:49:31,520 --> 00:49:35,280
digest we're going to use something

1165
00:49:33,440 --> 00:49:38,720
based on certs or

1166
00:49:35,280 --> 00:49:38,720
or or oauth tokens

1167
00:49:39,280 --> 00:49:42,839
for sip this is a sip question not a

1168
00:49:41,599 --> 00:49:45,839
configuration file

1169
00:49:42,839 --> 00:49:45,839
question

1170
00:49:48,079 --> 00:49:51,119
well let me understand the implication

1171
00:49:50,240 --> 00:49:54,598
then would be

1172
00:49:51,119 --> 00:49:57,119
that when you got your in your

1173
00:49:54,599 --> 00:49:58,480
configuration brian you keep asking that

1174
00:49:57,119 --> 00:50:00,559
question i'm trying to keep my mouth

1175
00:49:58,480 --> 00:50:02,960
shut and let the uh the providers

1176
00:50:00,559 --> 00:50:04,319
uh weigh in here because they're the

1177
00:50:02,960 --> 00:50:06,720
ones who are in the most

1178
00:50:04,319 --> 00:50:08,558
most impact i i will shut up as soon as

1179
00:50:06,720 --> 00:50:11,520
the provider

1180
00:50:08,559 --> 00:50:12,160
so um when you phrase it the way you

1181
00:50:11,520 --> 00:50:15,280
just phrased

1182
00:50:12,160 --> 00:50:16,879
it it seems like the uh the change

1183
00:50:15,280 --> 00:50:20,079
you're looking for would require

1184
00:50:16,880 --> 00:50:22,000
some significant logic changes to

1185
00:50:20,079 --> 00:50:23,760
the the platforms that the providers

1186
00:50:22,000 --> 00:50:25,760
already have that would impact

1187
00:50:23,760 --> 00:50:27,280
their existing clients that are not

1188
00:50:25,760 --> 00:50:30,319
required to be

1189
00:50:27,280 --> 00:50:32,160
uh compliant or or a parallel

1190
00:50:30,319 --> 00:50:33,759
development so they could handle

1191
00:50:32,160 --> 00:50:35,359
both what they do today and what we're

1192
00:50:33,760 --> 00:50:38,960
proposing here

1193
00:50:35,359 --> 00:50:40,160
um well i understand ali what you're

1194
00:50:38,960 --> 00:50:42,559
saying and where

1195
00:50:40,160 --> 00:50:44,240
um this is indeed the right direction to

1196
00:50:42,559 --> 00:50:45,520
be going i'm wondering if we should be

1197
00:50:44,240 --> 00:50:47,359
leading that or if we should be

1198
00:50:45,520 --> 00:50:50,160
following sip in general

1199
00:50:47,359 --> 00:50:50,160
when it gets there

1200
00:50:50,720 --> 00:50:55,839
well sip is going there that's what the

1201
00:50:52,480 --> 00:50:55,839
oauth thing did

1202
00:51:04,880 --> 00:51:12,079
we watched your audio brian

1203
00:51:08,160 --> 00:51:14,160
i mean we we tr we are trying to leave

1204
00:51:12,079 --> 00:51:18,160
md5 behind by implementing

1205
00:51:14,160 --> 00:51:18,720
sha 256 and 512 authentication it's

1206
00:51:18,160 --> 00:51:20,720
still

1207
00:51:18,720 --> 00:51:22,000
not a good solution to have username and

1208
00:51:20,720 --> 00:51:24,480
secrets in clear text

1209
00:51:22,000 --> 00:51:27,280
and configuration files clear text has

1210
00:51:24,480 --> 00:51:29,839
never been a good option

1211
00:51:27,280 --> 00:51:32,160
and we have severe security problems

1212
00:51:29,839 --> 00:51:34,720
with those solutions because

1213
00:51:32,160 --> 00:51:36,078
of the possibility of downgrade attacks

1214
00:51:34,720 --> 00:51:39,279
we have no document yet

1215
00:51:36,079 --> 00:51:41,359
on how to migrate from md5 in existing

1216
00:51:39,280 --> 00:51:43,359
installations to a stronger one

1217
00:51:41,359 --> 00:51:44,640
and if you still have to do a migration

1218
00:51:43,359 --> 00:51:47,759
it's better to

1219
00:51:44,640 --> 00:51:52,640
take the leap into 2020

1220
00:51:47,760 --> 00:51:54,319
and do another kind of authentication

1221
00:51:52,640 --> 00:51:56,078
and there's a lot of things happen in

1222
00:51:54,319 --> 00:51:57,759
this token based

1223
00:51:56,079 --> 00:52:00,160
authentication area there's a new

1224
00:51:57,760 --> 00:52:02,839
working group in itf

1225
00:52:00,160 --> 00:52:04,640
that kind of works with i think it's

1226
00:52:02,839 --> 00:52:07,680
gnapp

1227
00:52:04,640 --> 00:52:12,000
um that works on the successor or

1228
00:52:07,680 --> 00:52:14,558
an alternative to oauth 2.

1229
00:52:12,000 --> 00:52:15,440
so token-based authentication i think is

1230
00:52:14,559 --> 00:52:18,800
the way to go

1231
00:52:15,440 --> 00:52:22,559
or client search

1232
00:52:18,800 --> 00:52:22,559
if we want to look at something existed

1233
00:52:22,880 --> 00:52:26,960
we have eight minutes left in this

1234
00:52:24,720 --> 00:52:28,879
meeting um

1235
00:52:26,960 --> 00:52:33,839
i i would really like to hear from

1236
00:52:28,880 --> 00:52:33,839
providers what they think about this

1237
00:52:40,160 --> 00:52:43,598
no one's willing to say anything

1238
00:52:47,680 --> 00:52:51,520
we got eugene we got james

1239
00:52:55,760 --> 00:52:59,760
we can take it to the list um we're

1240
00:52:58,079 --> 00:53:01,040
running out of time to do anything else

1241
00:52:59,760 --> 00:53:05,280
anyways

1242
00:53:01,040 --> 00:53:06,319
um so what if what if the configuration

1243
00:53:05,280 --> 00:53:09,760
file supported

1244
00:53:06,319 --> 00:53:12,880
both user id password and

1245
00:53:09,760 --> 00:53:15,839
you know oauth tokens

1246
00:53:12,880 --> 00:53:15,839
we could do that

1247
00:53:16,640 --> 00:53:20,078
that's all that's all possible

1248
00:53:20,480 --> 00:53:26,079
a slightly different topic i was still

1249
00:53:23,680 --> 00:53:28,480
confused here i mean you described this

1250
00:53:26,079 --> 00:53:30,319
as a single configuration files you're

1251
00:53:28,480 --> 00:53:33,680
imagining this is something that the end

1252
00:53:30,319 --> 00:53:33,680
user populates

1253
00:53:35,440 --> 00:53:41,680
um that's traditionally how it's

1254
00:53:39,119 --> 00:53:43,280
done it would be cool if it wasn't that

1255
00:53:41,680 --> 00:53:45,440
hard

1256
00:53:43,280 --> 00:53:47,680
and right when you when you configure a

1257
00:53:45,440 --> 00:53:50,800
boy phone

1258
00:53:47,680 --> 00:53:54,078
but my impression is that we can't

1259
00:53:50,800 --> 00:53:57,280
ex expect these users

1260
00:53:54,079 --> 00:53:58,240
to populate a configuration file my

1261
00:53:57,280 --> 00:54:00,400
impression

1262
00:53:58,240 --> 00:54:01,919
from way back when was the assumption

1263
00:54:00,400 --> 00:54:04,400
here was that

1264
00:54:01,920 --> 00:54:05,440
when you do that initial configuration

1265
00:54:04,400 --> 00:54:08,480
step

1266
00:54:05,440 --> 00:54:10,960
you know you go to your provider

1267
00:54:08,480 --> 00:54:12,880
and download the configuration file from

1268
00:54:10,960 --> 00:54:16,559
the provider

1269
00:54:12,880 --> 00:54:20,720
and it was presumably set up by them

1270
00:54:16,559 --> 00:54:22,880
by the user having set up his account

1271
00:54:20,720 --> 00:54:24,319
online with the provider from a web

1272
00:54:22,880 --> 00:54:26,640
interface

1273
00:54:24,319 --> 00:54:28,160
that that that could be how it the the

1274
00:54:26,640 --> 00:54:32,480
the file is

1275
00:54:28,160 --> 00:54:32,879
populated that and that's fine but that

1276
00:54:32,480 --> 00:54:36,000
means

1277
00:54:32,880 --> 00:54:38,720
that you can't expect that to have

1278
00:54:36,000 --> 00:54:39,920
information for more than one provider

1279
00:54:38,720 --> 00:54:42,319
you're going to have to get it

1280
00:54:39,920 --> 00:54:44,559
separately from each provider

1281
00:54:42,319 --> 00:54:45,520
so suppose you had a local file that had

1282
00:54:44,559 --> 00:54:46,960
everything you want

1283
00:54:45,520 --> 00:54:48,720
pretty much along the lines of what the

1284
00:54:46,960 --> 00:54:50,400
current text says

1285
00:54:48,720 --> 00:54:52,319
and there was a mechanism that

1286
00:54:50,400 --> 00:54:55,920
downloaded the content

1287
00:54:52,319 --> 00:54:59,520
of each of the provider sections

1288
00:54:55,920 --> 00:54:59,920
from the provider at that point it's

1289
00:54:59,520 --> 00:55:02,960
just

1290
00:54:59,920 --> 00:55:04,559
it's it's it's just uh encoding whether

1291
00:55:02,960 --> 00:55:07,760
you talk about that as one

1292
00:55:04,559 --> 00:55:09,200
file or multiple files it's well it's

1293
00:55:07,760 --> 00:55:11,599
the difference between whatever you're

1294
00:55:09,200 --> 00:55:12,720
there well it's do you download it every

1295
00:55:11,599 --> 00:55:14,400
time you

1296
00:55:12,720 --> 00:55:16,959
turn your machine on or do you download

1297
00:55:14,400 --> 00:55:16,960
it once

1298
00:55:17,599 --> 00:55:20,799
i think you download it every time you

1299
00:55:19,280 --> 00:55:24,319
turn your machine on

1300
00:55:20,799 --> 00:55:27,520
the provider may want to change it

1301
00:55:24,319 --> 00:55:30,720
you know like change some of the urls or

1302
00:55:27,520 --> 00:55:31,920
or password or the authentication okay i

1303
00:55:30,720 --> 00:55:35,040
mean i think that i mean

1304
00:55:31,920 --> 00:55:37,119
i think either idea is viable

1305
00:55:35,040 --> 00:55:39,520
it could be easy to you know push the

1306
00:55:37,119 --> 00:55:42,720
button that says download it again

1307
00:55:39,520 --> 00:55:45,759
um but uh

1308
00:55:42,720 --> 00:55:48,078
yeah all of that

1309
00:55:45,760 --> 00:55:50,400
as i've been reading through it i kind

1310
00:55:48,079 --> 00:55:53,599
of have envisioned

1311
00:55:50,400 --> 00:55:56,559
that this would be downloaded once

1312
00:55:53,599 --> 00:55:58,720
but because it's it because it's

1313
00:55:56,559 --> 00:56:02,079
downloading data that's

1314
00:55:58,720 --> 00:56:04,558
relevant to the specific provider

1315
00:56:02,079 --> 00:56:06,799
it's only going to contain the data for

1316
00:56:04,559 --> 00:56:09,200
that provider and therefore he gets it

1317
00:56:06,799 --> 00:56:12,400
from that provider's website

1318
00:56:09,200 --> 00:56:14,960
yeah i i was thinking

1319
00:56:12,400 --> 00:56:17,839
okay and and why not let the device

1320
00:56:14,960 --> 00:56:17,839
store that data

1321
00:56:19,200 --> 00:56:22,720
if it needs to be updated you know there

1322
00:56:22,240 --> 00:56:25,759
would

1323
00:56:22,720 --> 00:56:28,399
it would need to have a a

1324
00:56:25,760 --> 00:56:30,319
another mechanism for updating that kind

1325
00:56:28,400 --> 00:56:31,680
of data but perhaps that's through

1326
00:56:30,319 --> 00:56:35,040
talking with the

1327
00:56:31,680 --> 00:56:38,399
provider thereafter right well it could

1328
00:56:35,040 --> 00:56:39,279
no i mean you're you're the the thing

1329
00:56:38,400 --> 00:56:42,839
that says

1330
00:56:39,280 --> 00:56:44,000
once could get triggered by some manual

1331
00:56:42,839 --> 00:56:47,759
action

1332
00:56:44,000 --> 00:56:49,359
right so the user interface that says do

1333
00:56:47,760 --> 00:56:52,400
it again

1334
00:56:49,359 --> 00:56:54,480
yeah reset yeah

1335
00:56:52,400 --> 00:56:56,000
yeah i mean i think we we need some

1336
00:56:54,480 --> 00:56:58,480
automation here

1337
00:56:56,000 --> 00:57:00,559
we could possibly just define a

1338
00:56:58,480 --> 00:57:04,160
well-known url like

1339
00:57:00,559 --> 00:57:05,200
dot well-known slash roo where you get

1340
00:57:04,160 --> 00:57:07,200
the basic

1341
00:57:05,200 --> 00:57:08,960
information from each provider based on

1342
00:57:07,200 --> 00:57:10,640
their domain name so we have a list of

1343
00:57:08,960 --> 00:57:13,520
domain names

1344
00:57:10,640 --> 00:57:15,200
that we update regularly uh which means

1345
00:57:13,520 --> 00:57:18,240
we have that automatically

1346
00:57:15,200 --> 00:57:19,839
and then we discover through the

1347
00:57:18,240 --> 00:57:22,799
well-known url the specific

1348
00:57:19,839 --> 00:57:24,880
configuration data for that provider

1349
00:57:22,799 --> 00:57:26,000
having the user press a button to

1350
00:57:24,880 --> 00:57:29,839
download configuration

1351
00:57:26,000 --> 00:57:32,480
files seems very old-fashioned

1352
00:57:29,839 --> 00:57:33,200
yeah i mean we can we we can automate

1353
00:57:32,480 --> 00:57:37,359
that

1354
00:57:33,200 --> 00:57:41,040
more i i i think the

1355
00:57:37,359 --> 00:57:46,240
once there there there is something of

1356
00:57:41,040 --> 00:57:48,880
of uh you know once a day

1357
00:57:46,240 --> 00:57:49,919
one once once once a month once a day

1358
00:57:48,880 --> 00:57:53,680
and once

1359
00:57:49,920 --> 00:57:53,680
every time you log in

1360
00:57:53,760 --> 00:57:56,960
it seems to me that that the simple way

1361
00:57:56,079 --> 00:58:00,480
is

1362
00:57:56,960 --> 00:58:03,599
that a revocation and

1363
00:58:00,480 --> 00:58:05,920
and reconfig is triggered by

1364
00:58:03,599 --> 00:58:07,119
the attempt to register with the

1365
00:58:05,920 --> 00:58:10,160
registrar

1366
00:58:07,119 --> 00:58:12,400
failing with a bad password

1367
00:58:10,160 --> 00:58:13,920
or something uh i mean i we're we're in

1368
00:58:12,400 --> 00:58:15,520
the weeds we we can

1369
00:58:13,920 --> 00:58:16,799
work out how this works but it's

1370
00:58:15,520 --> 00:58:19,359
automated then you fetch a new

1371
00:58:16,799 --> 00:58:22,400
configuration and try again

1372
00:58:19,359 --> 00:58:23,200
yeah okay i i think we can get there i

1373
00:58:22,400 --> 00:58:24,720
think that won't

1374
00:58:23,200 --> 00:58:26,240
i think that's not there there are many

1375
00:58:24,720 --> 00:58:30,000
ways to solve that problem

1376
00:58:26,240 --> 00:58:32,879
i i i think that people who are saying

1377
00:58:30,000 --> 00:58:34,640
look this should not take manual action

1378
00:58:32,880 --> 00:58:37,839
computers can figure this out i think

1379
00:58:34,640 --> 00:58:37,839
you're probably right

1380
00:58:40,480 --> 00:58:49,440
well what we can figure it out i'm i i

1381
00:58:44,720 --> 00:58:51,598
is the the only question that remains

1382
00:58:49,440 --> 00:58:53,680
depending on on where we go with ollie's

1383
00:58:51,599 --> 00:58:56,880
idea of using samls or

1384
00:58:53,680 --> 00:58:59,919
tokens or or certs is

1385
00:58:56,880 --> 00:59:02,799
what you do with credentials um

1386
00:58:59,920 --> 00:59:03,440
and and how those are unlocked right you

1387
00:59:02,799 --> 00:59:06,799
know

1388
00:59:03,440 --> 00:59:10,000
how is it securely stored

1389
00:59:06,799 --> 00:59:12,079
so that you don't have to re-enter per

1390
00:59:10,000 --> 00:59:15,359
provider credentials every time you

1391
00:59:12,079 --> 00:59:17,760
log in that

1392
00:59:15,359 --> 00:59:18,558
that that's the part that i want to make

1393
00:59:17,760 --> 00:59:21,280
sure that we do

1394
00:59:18,559 --> 00:59:21,680
right clear text won't work right that's

1395
00:59:21,280 --> 00:59:23,520
the

1396
00:59:21,680 --> 00:59:24,960
clear text problem right we can't do it

1397
00:59:23,520 --> 00:59:28,000
that way we have to do

1398
00:59:24,960 --> 00:59:30,640
we have to either use tokens or

1399
00:59:28,000 --> 00:59:33,119
something like that or we have to have a

1400
00:59:30,640 --> 00:59:33,920
a local id and you unlock it with that

1401
00:59:33,119 --> 00:59:37,040
local id

1402
00:59:33,920 --> 00:59:39,599
or something like that

1403
00:59:37,040 --> 00:59:40,640
and what does it even mean to log in i

1404
00:59:39,599 --> 00:59:42,480
mean the device

1405
00:59:40,640 --> 00:59:43,759
wants to stay connected when there's no

1406
00:59:42,480 --> 00:59:47,119
person around

1407
00:59:43,760 --> 00:59:49,520
off you know often it does

1408
00:59:47,119 --> 00:59:52,960
yeah but that's that i want to stay up

1409
00:59:49,520 --> 00:59:55,440
after a power cycle too

1410
00:59:52,960 --> 00:59:56,640
so it's not we're not talking about i

1411
00:59:55,440 --> 00:59:58,799
mean

1412
00:59:56,640 --> 01:00:02,640
it may have it has to be able to bring

1413
00:59:58,799 --> 01:00:02,640
itself up without a human there

1414
01:00:06,000 --> 01:00:13,040
there's i i i understand and you know

1415
01:00:09,440 --> 01:00:14,640
just what's the limit there

1416
01:00:13,040 --> 01:00:17,440
i mean there are there are mechanisms

1417
01:00:14,640 --> 01:00:20,799
that we can use to do that

1418
01:00:17,440 --> 01:00:22,400
it's uh i think that that's a solvable

1419
01:00:20,799 --> 01:00:22,960
problem i understand but i understand

1420
01:00:22,400 --> 01:00:26,799
your point

1421
01:00:22,960 --> 01:00:29,599
it's it you can't think of it as being

1422
01:00:26,799 --> 01:00:30,160
a kind of regular app where if you as

1423
01:00:29,599 --> 01:00:33,599
you say

1424
01:00:30,160 --> 01:00:35,440
power boot if it you know power failed

1425
01:00:33,599 --> 01:00:38,480
and it came back up again

1426
01:00:35,440 --> 01:00:40,000
incoming calls have to work you can't

1427
01:00:38,480 --> 01:00:43,119
wait for the user to show up

1428
01:00:40,000 --> 01:00:45,359
log in for incoming calls to work

1429
01:00:43,119 --> 01:00:47,839
you're correct that that that would not

1430
01:00:45,359 --> 01:00:52,000
be acceptable

1431
01:00:47,839 --> 01:00:54,558
brian so much of the so much of the

1432
01:00:52,000 --> 01:00:55,200
current implementations of the existing

1433
01:00:54,559 --> 01:00:58,880
vrs

1434
01:00:55,200 --> 01:01:02,960
providers is very much tied to

1435
01:00:58,880 --> 01:01:02,960
and based on a login

1436
01:01:03,280 --> 01:01:10,960
features call lists

1437
01:01:07,680 --> 01:01:12,319
contact lists so many of those things

1438
01:01:10,960 --> 01:01:15,760
are based on

1439
01:01:12,319 --> 01:01:19,200
the notion of somebody having logged in

1440
01:01:15,760 --> 01:01:20,400
sure but but we're we're all agreeing

1441
01:01:19,200 --> 01:01:21,279
that that's going to happen it's a

1442
01:01:20,400 --> 01:01:23,440
question whether

1443
01:01:21,280 --> 01:01:25,119
you do it with username and password or

1444
01:01:23,440 --> 01:01:27,040
you do it with a saml token

1445
01:01:25,119 --> 01:01:28,480
or you do it with an oauth token or you

1446
01:01:27,040 --> 01:01:32,000
do it with a cert

1447
01:01:28,480 --> 01:01:34,880
all of those would unlock all of that

1448
01:01:32,000 --> 01:01:36,960
or are we discussing multiple states at

1449
01:01:34,880 --> 01:01:39,760
the same time we have a

1450
01:01:36,960 --> 01:01:41,119
configuration provisioning state where

1451
01:01:39,760 --> 01:01:43,520
we set up a device we

1452
01:01:41,119 --> 01:01:44,640
authorize ourselves to use an account

1453
01:01:43,520 --> 01:01:46,000
and all that

1454
01:01:44,640 --> 01:01:48,960
and that's one thing and then we

1455
01:01:46,000 --> 01:01:50,799
bootstrap kind of a running state

1456
01:01:48,960 --> 01:01:52,240
where we have to answer incoming calls

1457
01:01:50,799 --> 01:01:53,359
and that's another thing i think we have

1458
01:01:52,240 --> 01:01:55,680
to separate these

1459
01:01:53,359 --> 01:01:56,960
in order to clear the running state

1460
01:01:55,680 --> 01:01:59,680
involves sip

1461
01:01:56,960 --> 01:02:02,160
and answering calls and we have java

1462
01:01:59,680 --> 01:02:05,440
persistent authentication

1463
01:02:02,160 --> 01:02:09,440
for that okay and we have to have

1464
01:02:05,440 --> 01:02:12,319
considered situations where we

1465
01:02:09,440 --> 01:02:12,960
have to accept expired certificates or

1466
01:02:12,319 --> 01:02:15,680
stuff

1467
01:02:12,960 --> 01:02:17,359
for handling emergency calls and other

1468
01:02:15,680 --> 01:02:19,440
things

1469
01:02:17,359 --> 01:02:20,400
but let's discuss two different things

1470
01:02:19,440 --> 01:02:22,720
because we

1471
01:02:20,400 --> 01:02:24,000
we have definitely have a login state

1472
01:02:22,720 --> 01:02:26,480
where

1473
01:02:24,000 --> 01:02:28,480
we provision accounts and so and we can

1474
01:02:26,480 --> 01:02:31,520
discuss how often you do that

1475
01:02:28,480 --> 01:02:31,920
or reasons to go back and do it when you

1476
01:02:31,520 --> 01:02:35,038
add

1477
01:02:31,920 --> 01:02:37,920
new additional services and stuff okay

1478
01:02:35,039 --> 01:02:39,760
we're we're over time now um so we're

1479
01:02:37,920 --> 01:02:44,480
going to have to close it out and

1480
01:02:39,760 --> 01:02:46,559
go back to the list um i i wish

1481
01:02:44,480 --> 01:02:48,400
yes i i very much appreciate everybody's

1482
01:02:46,559 --> 01:02:51,520
participation in the session

1483
01:02:48,400 --> 01:02:53,359
um it was it was very helpful um

1484
01:02:51,520 --> 01:02:55,119
let's see how far we can get on the list

1485
01:02:53,359 --> 01:02:56,799
on these issues if we need an interim

1486
01:02:55,119 --> 01:02:58,880
meeting or something else to

1487
01:02:56,799 --> 01:03:00,799
work out one or more of these things we

1488
01:02:58,880 --> 01:03:02,480
can we can schedule that

1489
01:03:00,799 --> 01:03:04,559
which could be scheduled at a different

1490
01:03:02,480 --> 01:03:07,760
time scale um

1491
01:03:04,559 --> 01:03:11,280
uh but thank you all very very much for

1492
01:03:07,760 --> 01:03:14,240
for uh showing up to you uh and

1493
01:03:11,280 --> 01:03:16,160
um so look look for a list traffic and

1494
01:03:14,240 --> 01:03:20,078
and and please respond

1495
01:03:16,160 --> 01:03:23,118
thanks now you can all go back to bed

1496
01:03:20,079 --> 01:03:24,160
yeah for those of you in those time

1497
01:03:23,119 --> 01:03:27,280
zones

1498
01:03:24,160 --> 01:03:30,799
yes yes

1499
01:03:27,280 --> 01:03:39,359
bye stay safe bye now

1500
01:03:30,799 --> 01:03:39,359
thanks bye bye

