1
00:00:05,359 --> 00:00:09,840
i was gonna taste that then if we see

2
00:00:07,200 --> 00:00:15,989
notes with a bunch of z's in them

3
00:00:09,840 --> 00:00:17,680
we'll know

4
00:00:15,990 --> 00:00:21,680
[Music]

5
00:00:17,680 --> 00:00:22,560
all right it's uh 11 30 i think we have

6
00:00:21,680 --> 00:00:25,599
a pretty

7
00:00:22,560 --> 00:00:27,038
good quarter i'm yeah well 11 30 where i

8
00:00:25,599 --> 00:00:29,199
am i don't know what time it is where

9
00:00:27,039 --> 00:00:30,640
you are but uh it looks like we have a

10
00:00:29,199 --> 00:00:33,680
good quorum of folks

11
00:00:30,640 --> 00:00:36,480
so this is tls working group meeting

12
00:00:33,680 --> 00:00:37,519
um this session is of course being

13
00:00:36,480 --> 00:00:39,839
recorded

14
00:00:37,520 --> 00:00:41,360
since you're on this call you probably

15
00:00:39,840 --> 00:00:43,840
have already figured out all of the

16
00:00:41,360 --> 00:00:44,399
things you need to do but it's good to

17
00:00:43,840 --> 00:00:47,760
uh

18
00:00:44,399 --> 00:00:51,360
mute when you're not talking

19
00:00:47,760 --> 00:00:53,519
um let's see

20
00:00:51,360 --> 00:00:57,120
uh note well you should all be familiar

21
00:00:53,520 --> 00:01:00,800
with notewell especially if you've

22
00:00:57,120 --> 00:01:05,920
into an ietf meeting before

23
00:01:00,800 --> 00:01:05,920
um whoops i left presenter mode um

24
00:01:07,439 --> 00:01:13,759
okay we're getting there so here we are

25
00:01:11,840 --> 00:01:17,040
uh

26
00:01:13,760 --> 00:01:20,720
joe and chris and sean are also

27
00:01:17,040 --> 00:01:22,479
cheering and uh we have a

28
00:01:20,720 --> 00:01:23,759
not a whole lot of things to talk about

29
00:01:22,479 --> 00:01:27,200
today but

30
00:01:23,759 --> 00:01:28,479
um we do have a note taker i think we

31
00:01:27,200 --> 00:01:31,439
can probably handle

32
00:01:28,479 --> 00:01:34,320
jabber uh but if somebody wants to relay

33
00:01:31,439 --> 00:01:38,240
uh messages from jabra that would be

34
00:01:34,320 --> 00:01:41,439
appreciated as well um we have a couple

35
00:01:38,240 --> 00:01:42,079
topics aside from just kind of status uh

36
00:01:41,439 --> 00:01:44,798
one is

37
00:01:42,079 --> 00:01:46,399
some issues that were related to dtls

38
00:01:44,799 --> 00:01:48,479
connection id and then of course our

39
00:01:46,399 --> 00:01:50,880
favorite topic is encrypted

40
00:01:48,479 --> 00:01:54,000
client hello and then we'll talk about

41
00:01:50,880 --> 00:01:57,039
uh interrupt targets as a

42
00:01:54,000 --> 00:02:02,079
means to get

43
00:01:57,040 --> 00:02:08,560
more implementation of our drafts

44
00:02:02,079 --> 00:02:11,680
sean did you want to talk about status

45
00:02:08,560 --> 00:02:13,440
yes so

46
00:02:11,680 --> 00:02:15,120
well that's interesting that's the old

47
00:02:13,440 --> 00:02:18,400
version

48
00:02:15,120 --> 00:02:20,080
um any event um we have a bunch of

49
00:02:18,400 --> 00:02:23,840
drafts that are in let me see if i can

50
00:02:20,080 --> 00:02:23,840
share my slide publish screen

51
00:02:24,000 --> 00:02:31,680
blink are you guys seeing this slide

52
00:02:28,560 --> 00:02:35,519
dee joe's you see joe's

53
00:02:31,680 --> 00:02:37,599
ah well those are the old ones

54
00:02:35,519 --> 00:02:39,720
anyway we have a bunch of drafts that

55
00:02:37,599 --> 00:02:41,119
have progressed forward we published rc

56
00:02:39,720 --> 00:02:42,879
8744

57
00:02:41,120 --> 00:02:44,480
which is the requirements for sni

58
00:02:42,879 --> 00:02:46,799
encryption and tls

59
00:02:44,480 --> 00:02:48,160
we have a document with the rc editor

60
00:02:46,800 --> 00:02:48,959
that's been there for quite some time

61
00:02:48,160 --> 00:02:51,680
called tl

62
00:02:48,959 --> 00:02:53,200
certificate compression um there's a

63
00:02:51,680 --> 00:02:54,720
problem with it yeah there we go there's

64
00:02:53,200 --> 00:02:58,238
a problem is that um

65
00:02:54,720 --> 00:03:01,440
there's a reference to the z standard

66
00:02:58,239 --> 00:03:02,640
uh draft or compression algorithm that

67
00:03:01,440 --> 00:03:04,720
facebook uses

68
00:03:02,640 --> 00:03:06,159
there was an old rfc and they're

69
00:03:04,720 --> 00:03:07,120
updating it they have abyss

70
00:03:06,159 --> 00:03:08,480
and it got all the way through the

71
00:03:07,120 --> 00:03:09,440
process and it was sitting in the rc

72
00:03:08,480 --> 00:03:10,959
editor's queue

73
00:03:09,440 --> 00:03:12,959
and then i just recently found out that

74
00:03:10,959 --> 00:03:14,720
it's getting pulled back to the isg

75
00:03:12,959 --> 00:03:16,720
so the question is should we just refer

76
00:03:14,720 --> 00:03:18,560
to the old version and let the update

77
00:03:16,720 --> 00:03:21,120
slash obsoletes mechanism

78
00:03:18,560 --> 00:03:22,000
that the rfc editor has um kind of do

79
00:03:21,120 --> 00:03:25,360
its thing

80
00:03:22,000 --> 00:03:28,959
um ben you got any any feeling on this

81
00:03:25,360 --> 00:03:29,680
yeah ben cadec the ad for tls i think we

82
00:03:28,959 --> 00:03:32,799
should

83
00:03:29,680 --> 00:03:35,040
just uh stop referencing the biz the

84
00:03:32,799 --> 00:03:35,840
particular change with the z standard

85
00:03:35,040 --> 00:03:38,400
draft

86
00:03:35,840 --> 00:03:39,680
that they have to deal with is a kind of

87
00:03:38,400 --> 00:03:42,319
gnarly one

88
00:03:39,680 --> 00:03:45,360
and so i don't expect to have a final

89
00:03:42,319 --> 00:03:46,798
resolution to that particularly soon

90
00:03:45,360 --> 00:03:48,400
and i don't think anybody's going to

91
00:03:46,799 --> 00:03:49,680
have any particular heartburn since this

92
00:03:48,400 --> 00:03:51,519
was actually

93
00:03:49,680 --> 00:03:54,239
uh this this reference was introduced by

94
00:03:51,519 --> 00:03:56,080
me um so i'm hoping that uh we can just

95
00:03:54,239 --> 00:03:57,519
allow the like let the publication

96
00:03:56,080 --> 00:03:59,120
process just do its thing and we can get

97
00:03:57,519 --> 00:04:01,120
to the end and update it so

98
00:03:59,120 --> 00:04:02,879
unless we hear anybody screaming very

99
00:04:01,120 --> 00:04:03,200
shortly we're going to go ahead and tell

100
00:04:02,879 --> 00:04:05,439
the

101
00:04:03,200 --> 00:04:06,560
um rc editor that they can point the

102
00:04:05,439 --> 00:04:10,239
reference to the old

103
00:04:06,560 --> 00:04:13,519
the old document sounds good

104
00:04:10,239 --> 00:04:15,680
all right great um

105
00:04:13,519 --> 00:04:16,798
we got two we have three other documents

106
00:04:15,680 --> 00:04:20,560
that um

107
00:04:16,798 --> 00:04:21,198
have uh been through iatf last call that

108
00:04:20,560 --> 00:04:24,080
have some

109
00:04:21,199 --> 00:04:25,600
uh uh updates that need to be done um

110
00:04:24,080 --> 00:04:27,680
the authors are working on them

111
00:04:25,600 --> 00:04:29,440
um i've been providing some inputs and

112
00:04:27,680 --> 00:04:31,840
as well as some of the other shepherds

113
00:04:29,440 --> 00:04:34,800
um right now we have uh deprecating tls

114
00:04:31,840 --> 00:04:36,400
1.0 and 1.1 in ietf last call

115
00:04:34,800 --> 00:04:39,040
um and then we have uh three other

116
00:04:36,400 --> 00:04:42,400
documents that were in ad eval

117
00:04:39,040 --> 00:04:44,000
um and we got to provide some con revise

118
00:04:42,400 --> 00:04:46,239
them based on the comments

119
00:04:44,000 --> 00:04:47,680
i know that ecker is jumping on the dtls

120
00:04:46,240 --> 00:04:50,320
uh protocol

121
00:04:47,680 --> 00:04:52,160
um edits and we're gonna talk about the

122
00:04:50,320 --> 00:04:53,040
connection identifiers and chris has

123
00:04:52,160 --> 00:04:54,800
ticket requests

124
00:04:53,040 --> 00:04:56,080
in hand um but we're not gonna talk

125
00:04:54,800 --> 00:04:57,440
about today and then we have a bunch of

126
00:04:56,080 --> 00:05:00,000
other drafts that are

127
00:04:57,440 --> 00:05:01,280
obviously active um so we only have a

128
00:05:00,000 --> 00:05:01,759
one-hour slot we're not going to talk

129
00:05:01,280 --> 00:05:05,198
about

130
00:05:01,759 --> 00:05:08,479
much uh the other one's really only

131
00:05:05,199 --> 00:05:10,160
um encrypted uh client hello and i think

132
00:05:08,479 --> 00:05:12,000
that's really it i think now we're going

133
00:05:10,160 --> 00:05:14,400
to pass it over to

134
00:05:12,000 --> 00:05:14,400
ecker

135
00:05:16,960 --> 00:05:20,719
hey um yeah so actually i want to say

136
00:05:20,160 --> 00:05:23,440
something about

137
00:05:20,720 --> 00:05:25,280
really at the dtls um uh it comments as

138
00:05:23,440 --> 00:05:26,639
well um i started going through them

139
00:05:25,280 --> 00:05:28,000
um i've had i've read i've read all of

140
00:05:26,639 --> 00:05:29,039
them and i've sort of like writing

141
00:05:28,000 --> 00:05:30,720
responses and thinking

142
00:05:29,039 --> 00:05:32,400
what to do um i think there's only a

143
00:05:30,720 --> 00:05:35,360
couple points that should be um

144
00:05:32,400 --> 00:05:36,479
at all at all contentious um and i think

145
00:05:35,360 --> 00:05:38,080
that the outcomes are pretty

146
00:05:36,479 --> 00:05:38,719
straightforward they're um so thanks ben

147
00:05:38,080 --> 00:05:41,520
for these like

148
00:05:38,720 --> 00:05:43,039
these reviews um i'm hoping to have um

149
00:05:41,520 --> 00:05:45,680
responses and so answer is

150
00:05:43,039 --> 00:05:48,800
npr's and stuff last week um so i'll

151
00:05:45,680 --> 00:05:50,720
hopefully we can get that out quickly

152
00:05:48,800 --> 00:05:52,320
um i think been identified like one

153
00:05:50,720 --> 00:05:55,919
actual defect

154
00:05:52,320 --> 00:05:55,919
that i think it affects but um

155
00:05:57,280 --> 00:06:00,638
um okay um

156
00:06:01,120 --> 00:06:04,479
so yes uh so i guess the these little

157
00:06:03,840 --> 00:06:06,400
cache id

158
00:06:04,479 --> 00:06:07,758
so dirt on in ben's ad review he

159
00:06:06,400 --> 00:06:10,080
identified an issue

160
00:06:07,759 --> 00:06:11,440
with the um that the way that then

161
00:06:10,080 --> 00:06:16,159
before the max for um

162
00:06:11,440 --> 00:06:16,160
gtl's connection ids um next slide

163
00:06:17,440 --> 00:06:25,039
um about no dude two too far ahead

164
00:06:22,160 --> 00:06:26,160
go back there we go so um so basically

165
00:06:25,039 --> 00:06:28,400
the issue is so this is the mac

166
00:06:26,160 --> 00:06:31,199
construction for on mac then encrypt

167
00:06:28,400 --> 00:06:31,599
um so you get the mac with a mac right

168
00:06:31,199 --> 00:06:34,080
key

169
00:06:31,600 --> 00:06:35,520
um and some crap and then the connection

170
00:06:34,080 --> 00:06:37,599
id plus cash sheet length

171
00:06:35,520 --> 00:06:39,120
uh plus the length of the remaining

172
00:06:37,600 --> 00:06:42,880
stuff plus some other stuff

173
00:06:39,120 --> 00:06:46,160
um so um it literally matter what the

174
00:06:42,880 --> 00:06:48,240
things the dot dots are um um but um the

175
00:06:46,160 --> 00:06:49,440
key point here is that the cid length is

176
00:06:48,240 --> 00:06:52,319
known internally

177
00:06:49,440 --> 00:06:53,840
um uh sorry not externally from the from

178
00:06:52,319 --> 00:06:56,479
the handshake negotiation

179
00:06:53,840 --> 00:06:57,039
but um it's encoded after the cid not

180
00:06:56,479 --> 00:06:58,800
before

181
00:06:57,039 --> 00:06:59,919
and the reason we did it that way um

182
00:06:58,800 --> 00:07:00,479
well it doesn't really matter we did it

183
00:06:59,919 --> 00:07:02,960
that way

184
00:07:00,479 --> 00:07:03,758
um and the the point here is

185
00:07:02,960 --> 00:07:07,280
non-injective

186
00:07:03,759 --> 00:07:07,840
um mapping and so um basically there are

187
00:07:07,280 --> 00:07:09,758
two

188
00:07:07,840 --> 00:07:10,960
um depending on the depending on what

189
00:07:09,759 --> 00:07:14,000
the rest of the fields are like

190
00:07:10,960 --> 00:07:15,039
um you can have like two cids of

191
00:07:14,000 --> 00:07:16,880
different lengths

192
00:07:15,039 --> 00:07:18,400
that both encode like moving code

193
00:07:16,880 --> 00:07:20,719
validly in the structure so these

194
00:07:18,400 --> 00:07:21,758
so in the example um that i i was pretty

195
00:07:20,720 --> 00:07:24,360
late when i did this um

196
00:07:21,759 --> 00:07:25,520
but the but the um uh but but the

197
00:07:24,360 --> 00:07:29,120
bytes0101

198
00:07:25,520 --> 00:07:30,000
um 0203 um if you if the receiver thinks

199
00:07:29,120 --> 00:07:32,400
the cid

200
00:07:30,000 --> 00:07:34,080
um is is one byte long then this looks

201
00:07:32,400 --> 00:07:36,239
like a one byte cid

202
00:07:34,080 --> 00:07:38,000
um with a one byte length with a length

203
00:07:36,240 --> 00:07:41,199
of one um and then

204
00:07:38,000 --> 00:07:45,039
um uh um and and then

205
00:07:41,199 --> 00:07:47,440
a uh uh and then a packet length of

206
00:07:45,039 --> 00:07:49,360
of ox 200 and then a payload starts at a

207
00:07:47,440 --> 00:07:50,240
three um but if you think there's a uh

208
00:07:49,360 --> 00:07:52,800
two by cid

209
00:07:50,240 --> 00:07:54,160
and this also looks valid um and you end

210
00:07:52,800 --> 00:07:57,120
up with a different thing

211
00:07:54,160 --> 00:07:58,080
and so basically this lets you um and so

212
00:07:57,120 --> 00:07:59,599
basically um

213
00:07:58,080 --> 00:08:02,000
there's competition for confusion about

214
00:07:59,599 --> 00:08:05,440
the boundary between the cid and the um

215
00:08:02,000 --> 00:08:08,000
and and the uh and the um text

216
00:08:05,440 --> 00:08:08,800
um and this is because basically um the

217
00:08:08,000 --> 00:08:10,479
combination of this

218
00:08:08,800 --> 00:08:11,759
particular encoding and the fact that

219
00:08:10,479 --> 00:08:13,359
the mac just continues everything

220
00:08:11,759 --> 00:08:16,400
together instead of having separated

221
00:08:13,360 --> 00:08:18,720
in some in some way um uh

222
00:08:16,400 --> 00:08:21,039
so um they then pointed this out under

223
00:08:18,720 --> 00:08:23,520
the review next slide

224
00:08:21,039 --> 00:08:24,080
sorry i'm getting distracted by watching

225
00:08:23,520 --> 00:08:26,318
the chat

226
00:08:24,080 --> 00:08:27,680
um okay so it's not really clear what

227
00:08:26,319 --> 00:08:28,960
the impact of this is um

228
00:08:27,680 --> 00:08:30,879
no one can figure anything particularly

229
00:08:28,960 --> 00:08:33,039
great with it um um

230
00:08:30,879 --> 00:08:34,719
the finished messages do cover the cid

231
00:08:33,039 --> 00:08:37,919
exchange so an onpath attacker

232
00:08:34,719 --> 00:08:39,680
um can't just like screw the cids um

233
00:08:37,919 --> 00:08:41,679
and cause this to affect um the

234
00:08:39,679 --> 00:08:43,279
application data but you can affect

235
00:08:41,679 --> 00:08:44,800
um the cid that's using the recording

236
00:08:43,279 --> 00:08:46,000
that finished which again it's not hard

237
00:08:44,800 --> 00:08:48,240
not clear you can do with that

238
00:08:46,000 --> 00:08:49,279
um but it doesn't seem awesome and

239
00:08:48,240 --> 00:08:50,399
there's a whole thing just generally

240
00:08:49,279 --> 00:08:52,399
seems kind of gross

241
00:08:50,399 --> 00:08:55,120
um and makes it makes it hard to reason

242
00:08:52,399 --> 00:08:56,399
about so we should probably fix it um

243
00:08:55,120 --> 00:08:58,320
and doesn't really cost us anything to

244
00:08:56,399 --> 00:09:00,000
fix it um

245
00:08:58,320 --> 00:09:01,360
so um note that this isn't really it

246
00:09:00,000 --> 00:09:02,800
shouldn't be as i understand an issue

247
00:09:01,360 --> 00:09:04,880
for tls 1.3

248
00:09:02,800 --> 00:09:06,319
um because there's only one variable

249
00:09:04,880 --> 00:09:08,720
length field which is the cid

250
00:09:06,320 --> 00:09:10,160
and that basically goes to the end and

251
00:09:08,720 --> 00:09:10,560
um and everything else is fixed length

252
00:09:10,160 --> 00:09:12,079
and

253
00:09:10,560 --> 00:09:13,760
and there's and there's and the aed this

254
00:09:12,080 --> 00:09:14,160
is the aed so it's not concatenated to

255
00:09:13,760 --> 00:09:17,839
the mac

256
00:09:14,160 --> 00:09:22,160
there's the data from the mac um so

257
00:09:17,839 --> 00:09:24,640
basically um next slide

258
00:09:22,160 --> 00:09:26,000
so roughly speaking the the natural fix

259
00:09:24,640 --> 00:09:28,800
is is to put

260
00:09:26,000 --> 00:09:29,600
the length of the cid before the cid in

261
00:09:28,800 --> 00:09:31,760
the packet

262
00:09:29,600 --> 00:09:32,800
um but unfortunately if you just do we

263
00:09:31,760 --> 00:09:34,160
were trying we

264
00:09:32,800 --> 00:09:35,760
when we designed a bunch of structures

265
00:09:34,160 --> 00:09:36,000
we're trying to balance a bunch of

266
00:09:35,760 --> 00:09:38,240
things

267
00:09:36,000 --> 00:09:39,440
and what is he trying to balance was to

268
00:09:38,240 --> 00:09:40,640
integrity check the thing that actually

269
00:09:39,440 --> 00:09:42,000
appears in the wire the grace is not

270
00:09:40,640 --> 00:09:43,279
possible rather than having antiterror

271
00:09:42,000 --> 00:09:43,920
checks and reconstruction they appear in

272
00:09:43,279 --> 00:09:46,399
the wire

273
00:09:43,920 --> 00:09:48,240
and so if you just put the cid length

274
00:09:46,399 --> 00:09:50,240
like somewhere earlier then you have

275
00:09:48,240 --> 00:09:52,160
other points of confusion and so we

276
00:09:50,240 --> 00:09:52,959
can't we cooked up this kind of bogus um

277
00:09:52,160 --> 00:09:55,920
structure

278
00:09:52,959 --> 00:09:58,399
where um the first byte is this marker

279
00:09:55,920 --> 00:10:00,640
byte that's on the tls 1.2 cid

280
00:09:58,399 --> 00:10:01,920
and that me and and since says that only

281
00:10:00,640 --> 00:10:03,519
can because that's

282
00:10:01,920 --> 00:10:04,880
ordinarily be the content type and so

283
00:10:03,519 --> 00:10:06,000
that content can only appear in this

284
00:10:04,880 --> 00:10:07,120
structure and therefore there's no

285
00:10:06,000 --> 00:10:09,279
confusion between this

286
00:10:07,120 --> 00:10:10,480
and like other and other content types

287
00:10:09,279 --> 00:10:12,480
um and

288
00:10:10,480 --> 00:10:14,079
so when you have the chills for two cid

289
00:10:12,480 --> 00:10:16,160
on content type then the next thing you

290
00:10:14,079 --> 00:10:18,560
have is the cid length and then you have

291
00:10:16,160 --> 00:10:19,839
a the actual content type which is

292
00:10:18,560 --> 00:10:21,199
because because that allows you to have

293
00:10:19,839 --> 00:10:22,480
the headers appear from the wire

294
00:10:21,200 --> 00:10:23,279
candidate together as you can see in

295
00:10:22,480 --> 00:10:25,040
this diagram

296
00:10:23,279 --> 00:10:26,720
um and then you have like the plain text

297
00:10:25,040 --> 00:10:28,480
and they have the plaintiffs itself so

298
00:10:26,720 --> 00:10:30,560
this kind of basically preserves the

299
00:10:28,480 --> 00:10:33,600
invariance of a it's injective we think

300
00:10:30,560 --> 00:10:34,079
and b um it has the headers appears in

301
00:10:33,600 --> 00:10:37,920
the wire

302
00:10:34,079 --> 00:10:40,479
glued onto the um uh uh glued into the

303
00:10:37,920 --> 00:10:41,439
into the mac um we can do similar things

304
00:10:40,480 --> 00:10:42,560
for aed

305
00:10:41,440 --> 00:10:44,399
and the mac and encrypt mode and the

306
00:10:42,560 --> 00:10:44,880
math and equipment that's pretty ugly uh

307
00:10:44,399 --> 00:10:46,240
sorry

308
00:10:44,880 --> 00:10:47,760
um i don't know okay i shouldn't have

309
00:10:46,240 --> 00:10:49,120
said that thing i think kristen mack i

310
00:10:47,760 --> 00:10:50,480
think rather than crypt um as i said i

311
00:10:49,120 --> 00:10:53,600
did these slides about an hour ago

312
00:10:50,480 --> 00:10:54,800
um um but um but you can so you can do a

313
00:10:53,600 --> 00:10:55,519
similar structure with it for them as

314
00:10:54,800 --> 00:10:59,279
well though the

315
00:10:55,519 --> 00:11:02,720
the mac looks kind of gross um

316
00:10:59,279 --> 00:11:02,720
so uh next slide

317
00:11:04,000 --> 00:11:08,160
so um i i appreciate that this is not

318
00:11:06,480 --> 00:11:08,959
like the world's greatest attack um but

319
00:11:08,160 --> 00:11:10,240
i think that

320
00:11:08,959 --> 00:11:11,839
um you know given that we don't have

321
00:11:10,240 --> 00:11:13,440
like a lot of installed base here i

322
00:11:11,839 --> 00:11:14,720
think we better to actually be playing

323
00:11:13,440 --> 00:11:15,680
which is easier to reason about

324
00:11:14,720 --> 00:11:17,120
than to have to make a bunch of

325
00:11:15,680 --> 00:11:18,160
reasoning about well this only seems to

326
00:11:17,120 --> 00:11:20,079
apply before finished

327
00:11:18,160 --> 00:11:20,959
and so and so like i'm not until we're

328
00:11:20,079 --> 00:11:22,719
not worried about it we're just sort of

329
00:11:20,959 --> 00:11:25,279
the place we are now so like if we were

330
00:11:22,720 --> 00:11:27,040
like or 38 or like later you might like

331
00:11:25,279 --> 00:11:28,320
you might not patch this but given that

332
00:11:27,040 --> 00:11:30,160
given that like it's just a matter of

333
00:11:28,320 --> 00:11:30,880
changing small pieces of code is worth

334
00:11:30,160 --> 00:11:33,360
doing

335
00:11:30,880 --> 00:11:34,959
so i guess um you know there's stuff in

336
00:11:33,360 --> 00:11:38,079
the list basically describes the

337
00:11:34,959 --> 00:11:39,760
all three variants um so really the

338
00:11:38,079 --> 00:11:42,800
question is anybody object to this

339
00:11:39,760 --> 00:11:44,319
uh and if so um let's hear about it i

340
00:11:42,800 --> 00:11:46,160
know akeem krause is not excited about

341
00:11:44,320 --> 00:11:48,640
it i don't see him on the chat

342
00:11:46,160 --> 00:11:49,920
so i guess um um after we're done with

343
00:11:48,640 --> 00:11:51,519
this discussion i'm gonna ask the chairs

344
00:11:49,920 --> 00:11:53,040
to do a hum because like

345
00:11:51,519 --> 00:11:54,480
i'd like to get this nailed down rather

346
00:11:53,040 --> 00:11:57,839
than have it be sort of like in some

347
00:11:54,480 --> 00:11:57,839
limbo state

348
00:11:58,959 --> 00:12:05,920
uh yeah just to pop in again this is ben

349
00:12:03,040 --> 00:12:07,439
not an objection but a question would be

350
00:12:05,920 --> 00:12:11,839
if we think that we need to

351
00:12:07,440 --> 00:12:11,839
get a new code point for the extension

352
00:12:12,399 --> 00:12:15,440
i i don't know if i i'm not aware of

353
00:12:14,240 --> 00:12:17,440
anybody deploying this

354
00:12:15,440 --> 00:12:19,519
in the wild though maybe hannus knows

355
00:12:17,440 --> 00:12:22,800
better um

356
00:12:19,519 --> 00:12:25,760
uh so i guess i would i

357
00:12:22,800 --> 00:12:27,120
i would ask i think i think it's honest

358
00:12:25,760 --> 00:12:30,240
on this call

359
00:12:27,120 --> 00:12:31,519
um yeah maybe somebody knows i don't

360
00:12:30,240 --> 00:12:34,079
know we we certainly have nothing

361
00:12:31,519 --> 00:12:35,200
somewhat he just jumped in the queue

362
00:12:34,079 --> 00:12:36,479
fantastic

363
00:12:35,200 --> 00:12:39,839
so i think all you have to do is unmute

364
00:12:36,480 --> 00:12:39,839
yourself honestly

365
00:12:57,279 --> 00:13:04,480
can you hear me yep oh okay

366
00:13:00,480 --> 00:13:08,240
yeah um uh the this is deployed but

367
00:13:04,480 --> 00:13:09,920
uh i i don't think he will cause uh

368
00:13:08,240 --> 00:13:11,760
any problems because in in those

369
00:13:09,920 --> 00:13:15,680
deployments it's very

370
00:13:11,760 --> 00:13:17,920
isolated so i i i think it's a

371
00:13:15,680 --> 00:13:19,279
not an issue in general what i'm a

372
00:13:17,920 --> 00:13:22,399
little bit unhappy is

373
00:13:19,279 --> 00:13:25,439
with these type of type of changes

374
00:13:22,399 --> 00:13:27,839
is that um at some

375
00:13:25,440 --> 00:13:29,120
we have these discussions on the way how

376
00:13:27,839 --> 00:13:31,920
we construct the

377
00:13:29,120 --> 00:13:33,279
addition uh additional data in in

378
00:13:31,920 --> 00:13:35,279
general the whole

379
00:13:33,279 --> 00:13:36,399
mac construction in the past several

380
00:13:35,279 --> 00:13:39,519
times and changed

381
00:13:36,399 --> 00:13:41,600
the document numerous times and that was

382
00:13:39,519 --> 00:13:43,920
mostly because

383
00:13:41,600 --> 00:13:45,440
there was always some some perceived

384
00:13:43,920 --> 00:13:48,800
issue which

385
00:13:45,440 --> 00:13:50,560
wasn't really precisely an attack

386
00:13:48,800 --> 00:13:52,399
but we couldn't actually have someone to

387
00:13:50,560 --> 00:13:54,719
do a formant analysis either

388
00:13:52,399 --> 00:13:56,560
because for whatever reason uh several

389
00:13:54,720 --> 00:13:59,199
people said that they would do so

390
00:13:56,560 --> 00:14:00,719
but i've never seen any outcome of it

391
00:13:59,199 --> 00:14:02,639
and

392
00:14:00,720 --> 00:14:04,320
in the long run i think it would be

393
00:14:02,639 --> 00:14:06,639
interesting to know

394
00:14:04,320 --> 00:14:08,160
what type of constructions are more

395
00:14:06,639 --> 00:14:10,560
secure than others but

396
00:14:08,160 --> 00:14:12,160
so it currently it appears that it's

397
00:14:10,560 --> 00:14:15,359
more a

398
00:14:12,160 --> 00:14:16,000
preference rather than a style rather

399
00:14:15,360 --> 00:14:18,000
than anything

400
00:14:16,000 --> 00:14:30,079
else but i'm i have no objection to make

401
00:14:18,000 --> 00:14:31,600
that change

402
00:14:30,079 --> 00:14:33,120
so i guess if we're going to do a pull

403
00:14:31,600 --> 00:14:35,199
this is going to be a simple one this is

404
00:14:33,120 --> 00:14:37,920
going to be object raise your hand

405
00:14:35,199 --> 00:14:44,399
or don't object leave your hand down is

406
00:14:37,920 --> 00:14:47,519
that what you're going for eric

407
00:14:44,399 --> 00:14:50,320
that would be fine um you're muted i i i

408
00:14:47,519 --> 00:14:51,120
muted not anymore okay because i like

409
00:14:50,320 --> 00:14:54,320
level meters

410
00:14:51,120 --> 00:14:54,880
um that would be a fine home um i i i

411
00:14:54,320 --> 00:14:56,560
either

412
00:14:54,880 --> 00:14:58,480
i i guess i guess you have to decide but

413
00:14:56,560 --> 00:15:00,000
um it which way which way

414
00:14:58,480 --> 00:15:01,600
with her hand up is good or head up is

415
00:15:00,000 --> 00:15:02,639
down i'm just looking for like enough of

416
00:15:01,600 --> 00:15:03,839
a consensus

417
00:15:02,639 --> 00:15:05,760
that we should do this i can go ahead

418
00:15:03,839 --> 00:15:08,240
and do a pr and get it done

419
00:15:05,760 --> 00:15:08,880
all right i've not used this pull but

420
00:15:08,240 --> 00:15:12,399
let's see

421
00:15:08,880 --> 00:15:16,000
title um um

422
00:15:12,399 --> 00:15:16,000
detail cid change

423
00:15:16,160 --> 00:15:21,760
uh so what we're going to have is

424
00:15:19,519 --> 00:15:22,880
start so raise your hand if you would

425
00:15:21,760 --> 00:15:24,399
like to

426
00:15:22,880 --> 00:15:26,480
if there are raise the hand if you have

427
00:15:24,399 --> 00:15:29,519
any objections don't raise your hand if

428
00:15:26,480 --> 00:15:29,519
you don't have any objections

429
00:15:37,440 --> 00:15:41,839
i'll let it go for another little while

430
00:15:42,480 --> 00:15:46,399
can i just remind folks that there is a

431
00:15:44,560 --> 00:15:47,518
deliberate option that is do not raise

432
00:15:46,399 --> 00:15:50,639
your hand

433
00:15:47,519 --> 00:15:52,320
so if you are participating

434
00:15:50,639 --> 00:15:53,759
you can go and you can click do not

435
00:15:52,320 --> 00:15:55,759
raise your hand and that makes it

436
00:15:53,759 --> 00:15:58,880
explicit rather than just

437
00:15:55,759 --> 00:16:01,519
absolutely yeah you can't see this but

438
00:15:58,880 --> 00:16:03,439
that's basically what everybody's doing

439
00:16:01,519 --> 00:16:05,360
so at the end you'll see the end of the

440
00:16:03,440 --> 00:16:07,920
poll results

441
00:16:05,360 --> 00:16:09,279
so i'll give it another 30 seconds i see

442
00:16:07,920 --> 00:16:09,920
you're still finding more ballots there

443
00:16:09,279 --> 00:16:12,399
sean

444
00:16:09,920 --> 00:16:15,120
yeah we can see it trump well you can

445
00:16:12,399 --> 00:16:15,120
see it okay good

446
00:16:16,240 --> 00:16:22,800
i'll have to make sure these are legal

447
00:16:19,519 --> 00:16:25,839
all right in 10 seconds

448
00:16:22,800 --> 00:16:29,199
one two three four five

449
00:16:25,839 --> 00:16:31,759
six seven eight nine

450
00:16:29,199 --> 00:16:33,359
ten all right so it looks like it's uh

451
00:16:31,759 --> 00:16:34,480
pretty clear here what we're gonna do so

452
00:16:33,360 --> 00:16:35,600
i guess we're gonna go ahead and make

453
00:16:34,480 --> 00:16:40,399
the change

454
00:16:35,600 --> 00:16:40,399
all effects are like that excellent sir

455
00:16:40,800 --> 00:16:51,839
now we are going on to the ec-8 show

456
00:16:59,759 --> 00:17:04,000
right uh so we'll start with uh there's

457
00:17:02,639 --> 00:17:06,240
a couple open pr's

458
00:17:04,000 --> 00:17:07,199
as well as some open issues uh what i'd

459
00:17:06,240 --> 00:17:08,640
like to do now is

460
00:17:07,199 --> 00:17:10,720
uh quickly go through some of the pr's

461
00:17:08,640 --> 00:17:11,600
that i think have reached some sort of

462
00:17:10,720 --> 00:17:14,400
consensus

463
00:17:11,599 --> 00:17:14,879
uh at least on the discussion uh see if

464
00:17:14,400 --> 00:17:18,000
we can

465
00:17:14,880 --> 00:17:21,280
uh get agreement on them land them and

466
00:17:18,000 --> 00:17:22,880
then have a discussion about hr and

467
00:17:21,280 --> 00:17:23,439
potentially what we want to do for draft

468
00:17:22,880 --> 00:17:26,559
nine

469
00:17:23,439 --> 00:17:29,039
uh and the interrupt target um

470
00:17:26,559 --> 00:17:30,320
so i don't know if shawn or joe which

471
00:17:29,039 --> 00:17:34,000
one of you is driving but if you could

472
00:17:30,320 --> 00:17:34,000
go to pr pr353

473
00:17:41,520 --> 00:17:49,600
um right so this is

474
00:17:46,480 --> 00:17:52,559
uh a change basically to bind

475
00:17:49,600 --> 00:17:53,678
more of the handshake to the except

476
00:17:52,559 --> 00:17:56,799
confirmation signal

477
00:17:53,679 --> 00:17:58,720
uh previously it was just um uh

478
00:17:56,799 --> 00:18:00,400
something that was exported from the hpe

479
00:17:58,720 --> 00:18:01,760
context i believe i actually don't

480
00:18:00,400 --> 00:18:03,600
remember the details before

481
00:18:01,760 --> 00:18:05,039
um and shoved in the last couple bytes

482
00:18:03,600 --> 00:18:07,039
of the server hello random

483
00:18:05,039 --> 00:18:08,320
uh whereas now uh with this proposed

484
00:18:07,039 --> 00:18:09,760
change it basically

485
00:18:08,320 --> 00:18:11,600
outputs something from the handshake

486
00:18:09,760 --> 00:18:13,600
secret and shoves that into the

487
00:18:11,600 --> 00:18:15,439
handshake or into the last eight bytes

488
00:18:13,600 --> 00:18:18,399
of the server hello random

489
00:18:15,440 --> 00:18:19,360
uh basically uh binding as much as we

490
00:18:18,400 --> 00:18:23,840
possibly can

491
00:18:19,360 --> 00:18:26,240
um and this is uh you know

492
00:18:23,840 --> 00:18:26,879
something that christian pointed out uh

493
00:18:26,240 --> 00:18:28,640
with a

494
00:18:26,880 --> 00:18:31,120
pretty simple remedy it turns out that

495
00:18:28,640 --> 00:18:34,160
it's fairly straightforward to implement

496
00:18:31,120 --> 00:18:36,000
um and it seems like this is a

497
00:18:34,160 --> 00:18:38,000
pretty low hanging fruit and we should

498
00:18:36,000 --> 00:18:38,880
just do it though i'd like to hear from

499
00:18:38,000 --> 00:18:40,840
people

500
00:18:38,880 --> 00:18:43,840
uh whether or not they disagree with the

501
00:18:40,840 --> 00:18:43,840
change

502
00:19:03,440 --> 00:19:07,520
um all right ecker you're up yeah i

503
00:19:06,640 --> 00:19:09,360
don't think we need to

504
00:19:07,520 --> 00:19:10,639
oh sorry someone in the cube did you

505
00:19:09,360 --> 00:19:11,600
want me to go hot mike there i thought

506
00:19:10,640 --> 00:19:12,640
yeah i thought i thought i'd wait in the

507
00:19:11,600 --> 00:19:15,760
cube lately

508
00:19:12,640 --> 00:19:16,160
all right so so i i i do agree with this

509
00:19:15,760 --> 00:19:20,160
change

510
00:19:16,160 --> 00:19:21,919
um um i i think uh you know

511
00:19:20,160 --> 00:19:23,919
you know the tale of philosophy appears

512
00:19:21,919 --> 00:19:24,799
to be like belt suspenders and also like

513
00:19:23,919 --> 00:19:26,799
some duct tape

514
00:19:24,799 --> 00:19:28,000
um and so like doing that um you know

515
00:19:26,799 --> 00:19:30,320
here i think is advisable

516
00:19:28,000 --> 00:19:31,520
um that said i think we're gonna like um

517
00:19:30,320 --> 00:19:34,000
you know

518
00:19:31,520 --> 00:19:35,120
uh as you're talking the next i guess i

519
00:19:34,000 --> 00:19:37,440
guess

520
00:19:35,120 --> 00:19:38,959
that you know there's agreeing with the

521
00:19:37,440 --> 00:19:40,880
change and then there's um

522
00:19:38,960 --> 00:19:42,000
and then there's agreeing and then

523
00:19:40,880 --> 00:19:43,120
there's having a queer threat model that

524
00:19:42,000 --> 00:19:44,320
motivates the change

525
00:19:43,120 --> 00:19:46,000
and i think we're going to find as we're

526
00:19:44,320 --> 00:19:47,360
talking the next two couple prs that our

527
00:19:46,000 --> 00:19:47,919
front model is not exactly as clear as

528
00:19:47,360 --> 00:19:51,520
you would

529
00:19:47,919 --> 00:19:54,880
hope for especially we include hr so um

530
00:19:51,520 --> 00:19:55,280
like uh you know i i have to ask the

531
00:19:54,880 --> 00:19:56,320
question

532
00:19:55,280 --> 00:19:58,559
is the attack that this is intended to

533
00:19:56,320 --> 00:20:00,320
prevent actually like in scope uh even

534
00:19:58,559 --> 00:20:02,399
if we make the change

535
00:20:00,320 --> 00:20:03,760
yeah i mean i agree this is uh it's not

536
00:20:02,400 --> 00:20:04,880
clear to me and they do not stick out

537
00:20:03,760 --> 00:20:06,320
goals whether or not this is actually

538
00:20:04,880 --> 00:20:08,240
something useful um

539
00:20:06,320 --> 00:20:10,158
or this actually plugs something that

540
00:20:08,240 --> 00:20:11,520
and the sort of attacker we we we seem

541
00:20:10,159 --> 00:20:14,320
to have cared about uh

542
00:20:11,520 --> 00:20:15,600
could do otherwise uh though uh this

543
00:20:14,320 --> 00:20:17,760
does seem to follow the pattern

544
00:20:15,600 --> 00:20:19,039
of ech where like we thought previously

545
00:20:17,760 --> 00:20:21,520
we've bound enough but

546
00:20:19,039 --> 00:20:23,280
we found out that we didn't do so um so

547
00:20:21,520 --> 00:20:25,520
i think that's the motivation here so i

548
00:20:23,280 --> 00:20:27,039
basically agree with what you said um

549
00:20:25,520 --> 00:20:30,240
there is an issue that chris

550
00:20:27,039 --> 00:20:31,919
patton filed um raising sort of the

551
00:20:30,240 --> 00:20:33,840
larger threat model discussion

552
00:20:31,919 --> 00:20:35,120
uh on you know what is our definition of

553
00:20:33,840 --> 00:20:37,280
do not stick out

554
00:20:35,120 --> 00:20:38,479
um and i think that's going to require

555
00:20:37,280 --> 00:20:40,559
uh some more discussion

556
00:20:38,480 --> 00:20:41,679
well beyond what we have time for today

557
00:20:40,559 --> 00:20:44,399
uh

558
00:20:41,679 --> 00:20:44,960
so probably table that for an interim or

559
00:20:44,400 --> 00:20:48,720
something

560
00:20:44,960 --> 00:20:48,720
uh after this meeting is adjourned

561
00:20:52,080 --> 00:20:56,240
so i guess if there's no objections that

562
00:20:54,080 --> 00:20:58,000
i'd like to propose we just plan this

563
00:20:56,240 --> 00:21:00,240
and move forward and then address the

564
00:20:58,000 --> 00:21:02,799
larger threat model of this question

565
00:21:00,240 --> 00:21:05,120
again uh in the context of the separate

566
00:21:02,799 --> 00:21:05,120
issue

567
00:21:11,679 --> 00:21:15,280
cool i think that's to make that's a

568
00:21:13,039 --> 00:21:19,280
make it so all right

569
00:21:15,280 --> 00:21:19,280
um can you move to 352.

570
00:21:27,120 --> 00:21:32,719
um uh so this change

571
00:21:30,320 --> 00:21:33,918
uh affixes somewhat of an annoying part

572
00:21:32,720 --> 00:21:36,559
of the the spec

573
00:21:33,919 --> 00:21:37,440
uh wherein in the event of hr uh we

574
00:21:36,559 --> 00:21:39,200
found due to

575
00:21:37,440 --> 00:21:41,200
uh various reaction attacks that we

576
00:21:39,200 --> 00:21:42,640
needed to bind client hello one to

577
00:21:41,200 --> 00:21:45,039
client hello to

578
00:21:42,640 --> 00:21:47,760
um how we chose to do that previously

579
00:21:45,039 --> 00:21:49,760
was to basically thread a psk exported

580
00:21:47,760 --> 00:21:52,559
from client hello one's encryption

581
00:21:49,760 --> 00:21:53,360
into the encryption of client below 2.

582
00:21:52,559 --> 00:21:55,280
um

583
00:21:53,360 --> 00:21:57,280
this has a couple of knock-on effects in

584
00:21:55,280 --> 00:22:00,080
that it requires two

585
00:21:57,280 --> 00:22:00,879
hp effectively end cap and dcap

586
00:22:00,080 --> 00:22:04,158
operations

587
00:22:00,880 --> 00:22:05,919
um uh thus like

588
00:22:04,159 --> 00:22:07,919
raising a potential edge case on uh

589
00:22:05,919 --> 00:22:12,640
server side q rotation which is kind of

590
00:22:07,919 --> 00:22:14,159
somewhat of a pain um it's also you know

591
00:22:12,640 --> 00:22:17,760
more expensive obviously

592
00:22:14,159 --> 00:22:20,000
um uh and uh

593
00:22:17,760 --> 00:22:21,600
hp though has this uh a nice property

594
00:22:20,000 --> 00:22:22,640
wherein you can reuse contacts for more

595
00:22:21,600 --> 00:22:24,719
than one encryption

596
00:22:22,640 --> 00:22:26,880
uh if you encrypt the plaintext once

597
00:22:24,720 --> 00:22:28,559
internally the hpke context just bumps

598
00:22:26,880 --> 00:22:30,640
in a sequence number or nonce

599
00:22:28,559 --> 00:22:32,399
um and then uses a completely different

600
00:22:30,640 --> 00:22:35,280
nodes for the next encryption

601
00:22:32,400 --> 00:22:36,320
um so what this change proposes is to

602
00:22:35,280 --> 00:22:39,520
basically replace

603
00:22:36,320 --> 00:22:42,559
uh you know psk based binding uh

604
00:22:39,520 --> 00:22:44,080
with you know context reuse um

605
00:22:42,559 --> 00:22:46,399
where they're bound together by the same

606
00:22:44,080 --> 00:22:48,639
hbp context you only do one

607
00:22:46,400 --> 00:22:49,760
in a diffie helmet like chem one divi

608
00:22:48,640 --> 00:22:52,559
helmet operation

609
00:22:49,760 --> 00:22:55,840
uh even in the event of hr for

610
00:22:52,559 --> 00:22:55,840
determining ech

611
00:22:56,960 --> 00:23:00,320
and uh removes a lot of complexity which

612
00:22:58,799 --> 00:23:02,000
is quite nice removes the server-side

613
00:23:00,320 --> 00:23:04,799
edge case which is also quite nice

614
00:23:02,000 --> 00:23:05,360
um i don't know chris if there's or

615
00:23:04,799 --> 00:23:06,480
david

616
00:23:05,360 --> 00:23:08,479
if there's anything else you'd like to

617
00:23:06,480 --> 00:23:11,280
say

618
00:23:08,480 --> 00:23:23,840
in support of this change i think that

619
00:23:11,280 --> 00:23:23,840
pretty much sums it up

620
00:23:24,880 --> 00:23:28,640
i saw chris join and then pop out

621
00:23:30,080 --> 00:23:37,840
eric you can uh go if you have something

622
00:23:38,799 --> 00:23:41,760
you guys should throw me out

623
00:23:41,840 --> 00:23:46,158
i i think i'm the cue from last time all

624
00:23:44,559 --> 00:23:48,639
right

625
00:23:46,159 --> 00:23:49,600
um but since i'm here um this tool is

626
00:23:48,640 --> 00:23:51,200
great

627
00:23:49,600 --> 00:23:53,360
since i'm here i guess i'm okay with

628
00:23:51,200 --> 00:23:55,679
this

629
00:23:53,360 --> 00:23:55,678
okay

630
00:23:56,799 --> 00:24:04,320
um chris or david would you like to say

631
00:23:58,960 --> 00:24:07,039
anything more

632
00:24:04,320 --> 00:24:08,320
i think you summed it up nicely um it

633
00:24:07,039 --> 00:24:10,799
simplifies the thing

634
00:24:08,320 --> 00:24:11,520
the picture it's not clear that you know

635
00:24:10,799 --> 00:24:15,039
it

636
00:24:11,520 --> 00:24:19,840
it's not it doesn't impact security

637
00:24:15,039 --> 00:24:19,840
so i i think it's a clear win

638
00:24:20,320 --> 00:24:23,520
you have any doubt either

639
00:24:25,360 --> 00:24:28,000
okay um

640
00:24:28,559 --> 00:24:32,559
i guess hearing none um i guess we'll go

641
00:24:30,799 --> 00:24:35,760
ahead um

642
00:24:32,559 --> 00:24:38,720
and push this one forward as well um

643
00:24:35,760 --> 00:24:39,600
before we move on to sort of uh well

644
00:24:38,720 --> 00:24:40,559
actually let's go to the next

645
00:24:39,600 --> 00:24:44,840
contentious pr

646
00:24:40,559 --> 00:24:47,840
um sean can you go to

647
00:24:44,840 --> 00:24:47,840
316.

648
00:24:47,919 --> 00:24:50,960
apparently running the show and he's

649
00:24:49,520 --> 00:24:54,720
showing us some deep

650
00:24:50,960 --> 00:24:54,720
stuff yeah that's all right

651
00:24:58,159 --> 00:25:04,880
right um so while this one loads

652
00:25:01,440 --> 00:25:08,080
um uh this was sort of a a

653
00:25:04,880 --> 00:25:12,159
a quick patch to um work around a a

654
00:25:08,080 --> 00:25:15,279
sort of uh massive cliff in the spec

655
00:25:12,159 --> 00:25:16,159
wherein um if client hello one or inner

656
00:25:15,279 --> 00:25:17,919
and outer

657
00:25:16,159 --> 00:25:20,000
had different key shares and the server

658
00:25:17,919 --> 00:25:22,559
sent an hr response

659
00:25:20,000 --> 00:25:23,760
uh clients are sort of uh potentially in

660
00:25:22,559 --> 00:25:25,440
a an awkward position

661
00:25:23,760 --> 00:25:26,840
in determining you know how they should

662
00:25:25,440 --> 00:25:29,279
actually generate their second client

663
00:25:26,840 --> 00:25:32,000
hello um

664
00:25:29,279 --> 00:25:33,200
uh the the remedy here uh or the the

665
00:25:32,000 --> 00:25:35,679
quick fix here

666
00:25:33,200 --> 00:25:36,559
was to simply just require that um any

667
00:25:35,679 --> 00:25:39,760
sort of uh

668
00:25:36,559 --> 00:25:42,559
what we call hr sensitive uh parameter

669
00:25:39,760 --> 00:25:43,120
in uh client hello inner or outer

670
00:25:42,559 --> 00:25:45,600
matches

671
00:25:43,120 --> 00:25:46,719
so things like key shares and whatnot

672
00:25:45,600 --> 00:25:48,799
such that the client doesn't have to

673
00:25:46,720 --> 00:25:50,799
make this determination upon hr

674
00:25:48,799 --> 00:25:52,960
um or have to do any sort of figuring

675
00:25:50,799 --> 00:25:56,480
out what the server actually intended

676
00:25:52,960 --> 00:25:58,080
um in the event of hr now on the thread

677
00:25:56,480 --> 00:26:00,000
there's been discussion about

678
00:25:58,080 --> 00:26:01,840
potentially other ways for servers to

679
00:26:00,000 --> 00:26:05,200
signal this for example

680
00:26:01,840 --> 00:26:05,600
like what if we did the um hr except

681
00:26:05,200 --> 00:26:08,159
like

682
00:26:05,600 --> 00:26:09,279
prf trick where we shoved some bytes

683
00:26:08,159 --> 00:26:10,320
into the server holobrand and to

684
00:26:09,279 --> 00:26:14,080
determine whether or not

685
00:26:10,320 --> 00:26:16,399
hr uh was sent and ech was accepted or

686
00:26:14,080 --> 00:26:16,399
not

687
00:26:16,960 --> 00:26:21,120
i think in the absence of seeing you

688
00:26:19,039 --> 00:26:22,720
know something more flushed out

689
00:26:21,120 --> 00:26:24,239
and the interest of getting something

690
00:26:22,720 --> 00:26:26,400
that at least avoids this

691
00:26:24,240 --> 00:26:28,240
implementation issue for an

692
00:26:26,400 --> 00:26:31,039
interoperable draft

693
00:26:28,240 --> 00:26:32,320
um i'd like to propose that we uh you

694
00:26:31,039 --> 00:26:35,760
know

695
00:26:32,320 --> 00:26:36,720
take this pr sort of as is uh flag an

696
00:26:35,760 --> 00:26:39,200
open issue

697
00:26:36,720 --> 00:26:40,880
and that this might not be the final way

698
00:26:39,200 --> 00:26:43,600
we deal with this particular

699
00:26:40,880 --> 00:26:45,039
uh point uh we may choose to do the

700
00:26:43,600 --> 00:26:45,918
prf-like thing or something else

701
00:26:45,039 --> 00:26:50,000
whatever

702
00:26:45,919 --> 00:26:52,000
um and just uh merge this so

703
00:26:50,000 --> 00:26:53,039
we can implement something that is uh

704
00:26:52,000 --> 00:26:57,360
you know

705
00:26:53,039 --> 00:26:57,360
deployable sort of at a larger scale

706
00:26:59,200 --> 00:27:02,960
this is a discussion about this

707
00:27:02,080 --> 00:27:05,678
particular

708
00:27:02,960 --> 00:27:07,200
issue as ecker pointed out earlier sort

709
00:27:05,679 --> 00:27:10,159
of calls into question

710
00:27:07,200 --> 00:27:11,919
um again the do not stick out threat

711
00:27:10,159 --> 00:27:14,960
model and what we're actually trying to

712
00:27:11,919 --> 00:27:17,760
hide or not in the event of hrr

713
00:27:14,960 --> 00:27:18,880
we don't really have sort of a clearly

714
00:27:17,760 --> 00:27:21,679
written down

715
00:27:18,880 --> 00:27:22,559
uh end goal or success criteria there

716
00:27:21,679 --> 00:27:24,000
although i think

717
00:27:22,559 --> 00:27:26,240
in discussions with various people it

718
00:27:24,000 --> 00:27:28,559
seems that hiding anything

719
00:27:26,240 --> 00:27:30,640
uh or do not making sure we do not stick

720
00:27:28,559 --> 00:27:33,039
out in the event of hr is sort of uh

721
00:27:30,640 --> 00:27:34,000
futile so perhaps we don't need to do

722
00:27:33,039 --> 00:27:36,240
anything special here

723
00:27:34,000 --> 00:27:36,240
um

724
00:27:37,200 --> 00:27:41,520
but i think that's

725
00:27:40,240 --> 00:27:44,240
all there is to say about this

726
00:27:41,520 --> 00:27:46,158
particular one um

727
00:27:44,240 --> 00:27:48,880
so just to recap i think the proposal is

728
00:27:46,159 --> 00:27:52,000
make sure they match flag and open issue

729
00:27:48,880 --> 00:27:54,880
for further discussion and address after

730
00:27:52,000 --> 00:27:54,880
09 ships

731
00:27:55,279 --> 00:28:03,840
i'd like to hear what other people think

732
00:28:13,120 --> 00:28:19,520
so there is some discussion in the chat

733
00:28:16,640 --> 00:28:21,760
um so ecker you managed to get in the

734
00:28:19,520 --> 00:28:25,360
queue first

735
00:28:21,760 --> 00:28:27,840
oh go for it you'll like

736
00:28:25,360 --> 00:28:29,279
not be in the queue first because i want

737
00:28:27,840 --> 00:28:33,120
to hear other people thought

738
00:28:29,279 --> 00:28:34,559
um so um but since i'm here um

739
00:28:33,120 --> 00:28:36,239
i guess i'm actually quite quite

740
00:28:34,559 --> 00:28:36,960
skeptical that this is the right design

741
00:28:36,240 --> 00:28:39,120
but i

742
00:28:36,960 --> 00:28:40,640
understand i think that chris's point

743
00:28:39,120 --> 00:28:41,918
which i agree with is we could get some

744
00:28:40,640 --> 00:28:42,799
we've enough changes it'd be good to get

745
00:28:41,919 --> 00:28:44,880
some some interrupt

746
00:28:42,799 --> 00:28:46,000
in our testing done and this and that

747
00:28:44,880 --> 00:28:47,440
this question does not affect like

748
00:28:46,000 --> 00:28:49,440
whether or not like we can

749
00:28:47,440 --> 00:28:50,480
test the thing um as far as i can tell

750
00:28:49,440 --> 00:28:53,600
it doesn't affect whether

751
00:28:50,480 --> 00:28:55,200
like we can make sure it actually works

752
00:28:53,600 --> 00:28:56,879
and scale so i think it's worth trying

753
00:28:55,200 --> 00:28:59,440
to get this done now

754
00:28:56,880 --> 00:29:01,279
um and but leaving the open issue marker

755
00:28:59,440 --> 00:29:04,399
in um those who say i'm not sure this is

756
00:29:01,279 --> 00:29:04,399
the right outcome outcome

757
00:29:06,640 --> 00:29:10,159
thanks jonathan

758
00:29:11,440 --> 00:29:16,000
um just to uh really ask a question

759
00:29:15,200 --> 00:29:18,960
asked in chat

760
00:29:16,000 --> 00:29:19,919
which just i well i want to know the

761
00:29:18,960 --> 00:29:22,240
answer to

762
00:29:19,919 --> 00:29:23,039
um does this make it easier to

763
00:29:22,240 --> 00:29:24,559
fingerprint

764
00:29:23,039 --> 00:29:26,320
the client because they have to send

765
00:29:24,559 --> 00:29:28,720
some parameters in clear text

766
00:29:26,320 --> 00:29:28,720
effects

767
00:29:31,520 --> 00:29:35,360
um i think you're pointing to the the do

768
00:29:33,440 --> 00:29:38,799
not stack out issue can you get your

769
00:29:35,360 --> 00:29:42,080
speakers also oh sorry

770
00:29:38,799 --> 00:29:45,200
that's all right roger's revoked audio

771
00:29:42,080 --> 00:29:46,480
um yeah this points to the larger uh do

772
00:29:45,200 --> 00:29:50,960
not stick out threat model

773
00:29:46,480 --> 00:29:54,000
um uh and there's lots of ways that hr

774
00:29:50,960 --> 00:29:57,520
already kind of sticks out um in

775
00:29:54,000 --> 00:30:01,279
ech acceptance so i i'm not really sure

776
00:29:57,520 --> 00:30:04,399
um that it's an issue

777
00:30:01,279 --> 00:30:06,000
um but i could be misunderstanding

778
00:30:04,399 --> 00:30:07,199
the problem and you're i also took away

779
00:30:06,000 --> 00:30:09,360
your audio so you'd have to reshare if

780
00:30:07,200 --> 00:30:10,720
you want to say something else

781
00:30:09,360 --> 00:30:13,039
sorry yeah i was i was just thinking i

782
00:30:10,720 --> 00:30:16,480
was actually thinking more about like

783
00:30:13,039 --> 00:30:19,600
could i derive what

784
00:30:16,480 --> 00:30:21,200
what tls stack somebody was using based

785
00:30:19,600 --> 00:30:24,320
on

786
00:30:21,200 --> 00:30:26,080
uh the outer parameter choices

787
00:30:24,320 --> 00:30:27,600
and which are now clear text parameter

788
00:30:26,080 --> 00:30:31,039
choices

789
00:30:27,600 --> 00:30:34,240
oh oh i'm revoking again

790
00:30:31,039 --> 00:30:35,200
um i mean that's already an issue today

791
00:30:34,240 --> 00:30:37,679
i think in practice

792
00:30:35,200 --> 00:30:38,880
um i don't know if uh tlstack

793
00:30:37,679 --> 00:30:39,440
fingerprinting is something we're trying

794
00:30:38,880 --> 00:30:42,559
to address

795
00:30:39,440 --> 00:30:45,840
uh in in my view it's it's sort of

796
00:30:42,559 --> 00:30:48,320
strictly out of scope um uh

797
00:30:45,840 --> 00:30:50,399
although i mean i don't think the

798
00:30:48,320 --> 00:30:52,399
question has ever been really

799
00:30:50,399 --> 00:30:54,320
raised in this particular context for

800
00:30:52,399 --> 00:30:57,760
eth so

801
00:30:54,320 --> 00:31:01,279
um yeah i mean if someone else has an

802
00:30:57,760 --> 00:31:01,279
opinion i'd be curious to hear it

803
00:31:03,039 --> 00:31:05,840
yep

804
00:31:19,360 --> 00:31:23,199
um so i guess just following

805
00:31:23,519 --> 00:31:28,080
uh the chat yeah i mean um you can

806
00:31:26,559 --> 00:31:31,440
already think about the stack so

807
00:31:28,080 --> 00:31:33,039
um i mean

808
00:31:31,440 --> 00:31:34,640
we could potentially note it in the

809
00:31:33,039 --> 00:31:37,120
security considerations or something but

810
00:31:34,640 --> 00:31:38,559
i again i'm not sure it's new um

811
00:31:37,120 --> 00:31:40,320
so i mean jonathan if you want to draw

812
00:31:38,559 --> 00:31:43,120
some text to that effect that might that

813
00:31:40,320 --> 00:31:43,120
would be useful i think

814
00:31:44,960 --> 00:31:48,559
um all right so i guess hearing no

815
00:31:47,120 --> 00:31:51,199
objections um

816
00:31:48,559 --> 00:31:52,240
proceed with the open issue uh move this

817
00:31:51,200 --> 00:31:54,000
forward just to get something that's

818
00:31:52,240 --> 00:31:57,760
implementable and interoperable

819
00:31:54,000 --> 00:31:58,720
uh for o nine um which is good now we

820
00:31:57,760 --> 00:32:00,720
can kind of go over

821
00:31:58,720 --> 00:32:03,120
to the easy ones uh so if you pop over

822
00:32:00,720 --> 00:32:05,279
to the issues um

823
00:32:03,120 --> 00:32:06,719
uh these are some uh changes don't

824
00:32:05,279 --> 00:32:08,000
actually have text behind them yet but i

825
00:32:06,720 --> 00:32:09,440
think it would be useful to at least get

826
00:32:08,000 --> 00:32:11,039
content on whether or not

827
00:32:09,440 --> 00:32:12,080
or get a rough idea as to whether or not

828
00:32:11,039 --> 00:32:13,840
we want to include them in the next

829
00:32:12,080 --> 00:32:17,279
version of the draft so

830
00:32:13,840 --> 00:32:17,279
348 first please

831
00:32:26,240 --> 00:32:32,720
david filed this issue going through um

832
00:32:29,919 --> 00:32:34,559
the draft uh due to lack of clarity and

833
00:32:32,720 --> 00:32:37,840
how servers actually deal with uh ec

834
00:32:34,559 --> 00:32:38,960
extension or not um and after various

835
00:32:37,840 --> 00:32:41,199
editorial changes

836
00:32:38,960 --> 00:32:43,360
uh we finally got down to the sort of

837
00:32:41,200 --> 00:32:45,279
crux of the clarification which was that

838
00:32:43,360 --> 00:32:46,959
uh there's a single um heavyweight

839
00:32:45,279 --> 00:32:47,679
extension that does two things in two

840
00:32:46,960 --> 00:32:50,159
different

841
00:32:47,679 --> 00:32:51,600
use like contacts um that is the ech

842
00:32:50,159 --> 00:32:52,320
extension if it's in the outer client

843
00:32:51,600 --> 00:32:53,840
hello

844
00:32:52,320 --> 00:32:55,519
it does one thing if it's at the inner

845
00:32:53,840 --> 00:32:57,678
client below it does a different thing

846
00:32:55,519 --> 00:32:58,720
um so the proposal from david was to

847
00:32:57,679 --> 00:33:01,760
simply

848
00:32:58,720 --> 00:33:03,360
um uh you know use two different

849
00:33:01,760 --> 00:33:04,960
extensions for these internet auto

850
00:33:03,360 --> 00:33:07,519
client hellos um

851
00:33:04,960 --> 00:33:08,720
so carrick uh thankfully put together

852
00:33:07,519 --> 00:33:10,960
this one actually does have text i'm

853
00:33:08,720 --> 00:33:13,840
sorry carrick this she put together text

854
00:33:10,960 --> 00:33:14,799
uh for this particular change um it

855
00:33:13,840 --> 00:33:16,480
effectively

856
00:33:14,799 --> 00:33:17,840
uh allocates a new code point for the

857
00:33:16,480 --> 00:33:19,919
inner client hello

858
00:33:17,840 --> 00:33:21,279
um that has exactly the same functional

859
00:33:19,919 --> 00:33:23,919
semantics uh

860
00:33:21,279 --> 00:33:25,519
more or less as the um the the current

861
00:33:23,919 --> 00:33:28,720
text

862
00:33:25,519 --> 00:33:29,919
so uh i think this is a pretty low

863
00:33:28,720 --> 00:33:30,880
hanging fruit would be good to include

864
00:33:29,919 --> 00:33:34,240
in the next version

865
00:33:30,880 --> 00:33:36,159
um and i'd

866
00:33:34,240 --> 00:33:39,840
just like to pause here to see if people

867
00:33:36,159 --> 00:33:39,840
agree or disagree

868
00:33:55,600 --> 00:34:00,559
um okay um i mean this is sort of

869
00:33:58,720 --> 00:34:04,480
borderline editorial in a way so

870
00:34:00,559 --> 00:34:07,840
um uh but

871
00:34:04,480 --> 00:34:07,840
there's no pushback so

872
00:34:08,320 --> 00:34:14,240
um all right if we could go now to

873
00:34:18,839 --> 00:34:21,839
326

874
00:34:22,560 --> 00:34:29,918
um right uh so for a while historically

875
00:34:26,639 --> 00:34:30,560
uh the encryption of the uh client hello

876
00:34:29,918 --> 00:34:32,799
inner

877
00:34:30,560 --> 00:34:34,000
uh it didn't actually have any

878
00:34:32,800 --> 00:34:36,720
additional authenticated data

879
00:34:34,000 --> 00:34:38,960
passed to hpke which was sort of an

880
00:34:36,719 --> 00:34:42,000
interesting design decision

881
00:34:38,960 --> 00:34:45,119
but that has since been fixed it now

882
00:34:42,000 --> 00:34:46,800
passes in basically the entirety

883
00:34:45,119 --> 00:34:49,359
with a small caveat of the outer client

884
00:34:46,800 --> 00:34:51,280
hello uh thereby preventing malleability

885
00:34:49,359 --> 00:34:52,799
uh like someone bit flipping you know or

886
00:34:51,280 --> 00:34:54,720
changing cypher suites dropping separate

887
00:34:52,800 --> 00:34:57,839
suites whatever and seeing what changes

888
00:34:54,719 --> 00:35:00,160
um uh what it does not include

889
00:34:57,839 --> 00:35:01,200
in the additional authenticated data is

890
00:35:00,160 --> 00:35:03,598
uh what's called

891
00:35:01,200 --> 00:35:04,960
the what we refer to as the ech context

892
00:35:03,599 --> 00:35:06,079
which is effectively the things that are

893
00:35:04,960 --> 00:35:07,760
identifying

894
00:35:06,079 --> 00:35:10,000
uh or that the client facing server

895
00:35:07,760 --> 00:35:12,800
needs to decrypt

896
00:35:10,000 --> 00:35:14,320
uh an ech extension uh so the

897
00:35:12,800 --> 00:35:15,760
encapsulated key that's output from hpe

898
00:35:14,320 --> 00:35:18,640
hbakee

899
00:35:15,760 --> 00:35:20,000
the config id that corresponds to the

900
00:35:18,640 --> 00:35:23,040
config

901
00:35:20,000 --> 00:35:25,280
and the cipher suite as well

902
00:35:23,040 --> 00:35:28,960
now this is like kind of similar to the

903
00:35:25,280 --> 00:35:32,240
dtlscid issue that we just talked about

904
00:35:28,960 --> 00:35:34,240
uh we don't none of us really see like

905
00:35:32,240 --> 00:35:37,598
an actual problem that comes from

906
00:35:34,240 --> 00:35:40,560
you know this not being included um uh

907
00:35:37,599 --> 00:35:40,960
in sort of the encryption context um but

908
00:35:40,560 --> 00:35:43,920
it's

909
00:35:40,960 --> 00:35:44,480
uh it just seems kind of gross that we

910
00:35:43,920 --> 00:35:47,359
have

911
00:35:44,480 --> 00:35:47,680
uh this one little special carve out for

912
00:35:47,359 --> 00:35:50,960
this

913
00:35:47,680 --> 00:35:52,480
this this particular data um

914
00:35:50,960 --> 00:35:54,560
so the proposal for this change here is

915
00:35:52,480 --> 00:35:57,040
to just uh pass everything that's

916
00:35:54,560 --> 00:35:59,119
uh you know everything you possibly can

917
00:35:57,040 --> 00:36:02,720
into additional authenticated data

918
00:35:59,119 --> 00:36:04,800
rather than doing it piecemeal um

919
00:36:02,720 --> 00:36:06,720
uh this does come with some

920
00:36:04,800 --> 00:36:09,119
implementation complexity

921
00:36:06,720 --> 00:36:10,560
so we have to weigh that against

922
00:36:09,119 --> 00:36:12,079
potentially

923
00:36:10,560 --> 00:36:14,240
what are the benefits that we're getting

924
00:36:12,079 --> 00:36:14,880
and as to reiterate we're not actually

925
00:36:14,240 --> 00:36:17,759
sure

926
00:36:14,880 --> 00:36:20,079
of any attacking prevents so um and this

927
00:36:17,760 --> 00:36:22,400
is sort of greenfield as well so

928
00:36:20,079 --> 00:36:22,400
um

929
00:36:23,920 --> 00:36:29,359
yeah uh penny for your thoughts

930
00:36:37,119 --> 00:36:40,320
dkgs does this require fancy

931
00:36:38,960 --> 00:36:43,200
interconnection between the fronting

932
00:36:40,320 --> 00:36:45,040
server and the back end in split mode

933
00:36:43,200 --> 00:36:47,520
no i do not think it does as hacker

934
00:36:45,040 --> 00:36:47,520
points out

935
00:36:53,520 --> 00:36:56,880
primarily because the client-facing

936
00:36:54,880 --> 00:37:00,320
server um

937
00:36:56,880 --> 00:37:01,119
uh in decrypting uh the you know inner

938
00:37:00,320 --> 00:37:02,960
client hello

939
00:37:01,119 --> 00:37:04,320
um would just be changing what it passes

940
00:37:02,960 --> 00:37:05,440
in as additional authenticated data it

941
00:37:04,320 --> 00:37:09,839
wouldn't actually change anything that

942
00:37:05,440 --> 00:37:09,839
passes to the backend server

943
00:37:20,880 --> 00:37:23,839
all right um

944
00:37:25,599 --> 00:37:29,200
yeah as david points out this is kind of

945
00:37:27,520 --> 00:37:31,839
reminiscent of the psk binder

946
00:37:29,200 --> 00:37:32,240
um stuff that we had to go through um so

947
00:37:31,839 --> 00:37:34,880
i think

948
00:37:32,240 --> 00:37:36,078
uh perhaps a good path forward for this

949
00:37:34,880 --> 00:37:37,839
is to someone uh

950
00:37:36,079 --> 00:37:40,000
for someone to propose texts if it's not

951
00:37:37,839 --> 00:37:43,119
too terrible and cumbersome

952
00:37:40,000 --> 00:37:45,920
um uh just land the change otherwise

953
00:37:43,119 --> 00:37:46,320
uh perhaps reassess whether that's worth

954
00:37:45,920 --> 00:37:48,560
it

955
00:37:46,320 --> 00:37:50,240
um but in general it seems like people

956
00:37:48,560 --> 00:37:52,799
are in favor of binding more rather than

957
00:37:50,240 --> 00:37:52,799
binding less

958
00:37:53,920 --> 00:38:05,839
cool um

959
00:37:58,320 --> 00:38:05,839
okay uh can we go back to 358 now

960
00:38:12,480 --> 00:38:16,960
um so david uh since you are here and

961
00:38:15,440 --> 00:38:19,839
you love hr

962
00:38:16,960 --> 00:38:22,079
um i i do you mind if i turn this over

963
00:38:19,839 --> 00:38:25,520
to you

964
00:38:22,079 --> 00:38:27,200
sure um well i guess you asked to find

965
00:38:25,520 --> 00:38:28,320
mine so which the answer is also sure

966
00:38:27,200 --> 00:38:32,560
but i i will

967
00:38:28,320 --> 00:38:34,880
but oh my god hr uh yeah so

968
00:38:32,560 --> 00:38:35,759
hrr involves sending a second client

969
00:38:34,880 --> 00:38:37,119
hello and

970
00:38:35,760 --> 00:38:39,359
what you are allowed to change in that

971
00:38:37,119 --> 00:38:41,040
client hello is uh

972
00:38:39,359 --> 00:38:42,880
very what you are allowed to change in

973
00:38:41,040 --> 00:38:43,599
what servers check ends up being kind of

974
00:38:42,880 --> 00:38:47,440
a mess

975
00:38:43,599 --> 00:38:49,359
rfc 8446 says that if the server

976
00:38:47,440 --> 00:38:51,200
says a bunch of rules and said

977
00:38:49,359 --> 00:38:52,960
approximately that if the server did not

978
00:38:51,200 --> 00:38:54,640
mention an extension in hr

979
00:38:52,960 --> 00:38:56,079
the client is not allowed to change it

980
00:38:54,640 --> 00:38:59,279
in the second client hello

981
00:38:56,079 --> 00:38:59,760
um and at least right now ech does not

982
00:38:59,280 --> 00:39:02,960
utter

983
00:38:59,760 --> 00:39:04,480
the ech extension in hr uh which means

984
00:39:02,960 --> 00:39:06,720
we are not actually allowed to change

985
00:39:04,480 --> 00:39:08,400
the second client hello's uh encrypted

986
00:39:06,720 --> 00:39:09,520
client hello payload which doesn't

987
00:39:08,400 --> 00:39:12,960
really work

988
00:39:09,520 --> 00:39:14,880
um uh i think this rule was probably a

989
00:39:12,960 --> 00:39:16,640
mistake um because if you imagine a

990
00:39:14,880 --> 00:39:17,839
padding like we this this rule basically

991
00:39:16,640 --> 00:39:18,960
means we can't add new padding

992
00:39:17,839 --> 00:39:20,560
extensions either

993
00:39:18,960 --> 00:39:21,920
uh because a padding extension might

994
00:39:20,560 --> 00:39:22,400
want to change the size in between the

995
00:39:21,920 --> 00:39:24,400
two

996
00:39:22,400 --> 00:39:26,000
uh but there's no sense in the server

997
00:39:24,400 --> 00:39:27,599
echoing the padding extension

998
00:39:26,000 --> 00:39:29,520
uh we gotta carve out for our existing

999
00:39:27,599 --> 00:39:32,560
padding extension uh but there's

1000
00:39:29,520 --> 00:39:34,000
uh i guess 313 might end up adding a new

1001
00:39:32,560 --> 00:39:37,920
padding extension

1002
00:39:34,000 --> 00:39:40,480
um i started a probe of some servers and

1003
00:39:37,920 --> 00:39:41,920
as of 30 minutes ago i finally found one

1004
00:39:40,480 --> 00:39:42,960
that breaks if you change an extension

1005
00:39:41,920 --> 00:39:45,280
it doesn't recognize

1006
00:39:42,960 --> 00:39:48,079
so i'm not sure what we want to do but

1007
00:39:45,280 --> 00:39:48,079
this is a headache

1008
00:39:53,280 --> 00:39:56,400
i mean i don't really agree with david

1009
00:39:55,280 --> 00:39:59,200
that this

1010
00:39:56,400 --> 00:40:00,000
particular test 8446 isn't quite right

1011
00:39:59,200 --> 00:40:01,520
um

1012
00:40:00,000 --> 00:40:03,520
i don't think the fix is just to remove

1013
00:40:01,520 --> 00:40:07,119
that line however um

1014
00:40:03,520 --> 00:40:10,319
that um the difficulty here

1015
00:40:07,119 --> 00:40:11,760
is um that

1016
00:40:10,319 --> 00:40:13,359
the intent of this rule was supposed to

1017
00:40:11,760 --> 00:40:14,720
be that you can't change things you're

1018
00:40:13,359 --> 00:40:16,560
not told to change

1019
00:40:14,720 --> 00:40:18,720
and so like for instance you can't

1020
00:40:16,560 --> 00:40:19,680
change key shares if if the hr didn't

1021
00:40:18,720 --> 00:40:22,160
include key shares

1022
00:40:19,680 --> 00:40:23,839
so that's the intent of the rule and so

1023
00:40:22,160 --> 00:40:24,799
um moving to nuance what that actually

1024
00:40:23,839 --> 00:40:27,680
means

1025
00:40:24,800 --> 00:40:28,640
but um uh but i think but and so i'm not

1026
00:40:27,680 --> 00:40:29,680
i'm not saying that there's technique

1027
00:40:28,640 --> 00:40:30,879
forms this is correct but i'm saying

1028
00:40:29,680 --> 00:40:31,680
that we can't just like strike that line

1029
00:40:30,880 --> 00:40:34,160
either so

1030
00:40:31,680 --> 00:40:35,598
um we'll probably fix that um and

1031
00:40:34,160 --> 00:40:37,040
someone's always a little more careful

1032
00:40:35,599 --> 00:40:40,400
but i think that like the

1033
00:40:37,040 --> 00:40:43,119
um you know it's a lot as they left the

1034
00:40:40,400 --> 00:40:43,119
nuance of something

1035
00:40:44,000 --> 00:40:47,200
but i generally agree that like

1036
00:40:45,119 --> 00:40:49,760
obviously we have to like relax the role

1037
00:40:47,200 --> 00:40:50,640
oh sorry chris it was asked me to repeat

1038
00:40:49,760 --> 00:40:52,480
the intent of the rule

1039
00:40:50,640 --> 00:40:54,000
the intent of the rule is that you're

1040
00:40:52,480 --> 00:40:55,200
not supposed to change things that

1041
00:40:54,000 --> 00:40:57,440
the server didn't tell you to change an

1042
00:40:55,200 --> 00:41:01,200
hr and so

1043
00:40:57,440 --> 00:41:04,000
um the uh um

1044
00:41:01,200 --> 00:41:05,118
and so for instance say the server on

1045
00:41:04,000 --> 00:41:08,560
say the server um

1046
00:41:05,119 --> 00:41:09,520
you know uh sends you uh hr

1047
00:41:08,560 --> 00:41:10,960
and asks for a cookie because you're

1048
00:41:09,520 --> 00:41:11,920
doing dtls but doesn't say key share

1049
00:41:10,960 --> 00:41:12,880
it's not supposed to change the key

1050
00:41:11,920 --> 00:41:16,160
shares

1051
00:41:12,880 --> 00:41:17,680
um so um

1052
00:41:16,160 --> 00:41:21,118
uh you're not supposed to do that

1053
00:41:17,680 --> 00:41:22,078
obviously um so uh

1054
00:41:21,119 --> 00:41:23,839
so i think we're gonna have to find some

1055
00:41:22,079 --> 00:41:25,040
way to to get that we got that text and

1056
00:41:23,839 --> 00:41:26,560
martin points out in the chat the other

1057
00:41:25,040 --> 00:41:28,880
possibility would be to have the

1058
00:41:26,560 --> 00:41:29,599
that the server send an ech message in

1059
00:41:28,880 --> 00:41:31,359
hr

1060
00:41:29,599 --> 00:41:32,960
um which by the way would also solve our

1061
00:41:31,359 --> 00:41:35,520
problem how to indicate what hr

1062
00:41:32,960 --> 00:41:37,200
which hr you were talking about so um so

1063
00:41:35,520 --> 00:41:38,400
that's not a possibility um so

1064
00:41:37,200 --> 00:41:39,520
we have to relax the rule but i think

1065
00:41:38,400 --> 00:41:40,560
we're not quite ready to just write down

1066
00:41:39,520 --> 00:41:42,240
that text

1067
00:41:40,560 --> 00:41:43,759
ecker before you go though are you

1068
00:41:42,240 --> 00:41:47,118
suggesting that we would make this

1069
00:41:43,760 --> 00:41:49,599
fix an 84 46 this

1070
00:41:47,119 --> 00:41:51,280
i'm gonna have this document point to 84

1071
00:41:49,599 --> 00:41:51,920
46 bits is that what you're talking

1072
00:41:51,280 --> 00:41:54,560
about

1073
00:41:51,920 --> 00:41:55,520
yeah you know how excited i am by that

1074
00:41:54,560 --> 00:41:58,000
kind of process stuff

1075
00:41:55,520 --> 00:41:59,119
so um uh right um no i think i think

1076
00:41:58,000 --> 00:42:00,880
what i think we determine

1077
00:41:59,119 --> 00:42:02,160
i think we should determine what it says

1078
00:42:00,880 --> 00:42:04,560
and then make

1079
00:42:02,160 --> 00:42:05,440
and then and then yeah and then

1080
00:42:04,560 --> 00:42:07,759
fahrenheit put it

1081
00:42:05,440 --> 00:42:08,880
but like as a practical matter um you

1082
00:42:07,760 --> 00:42:10,880
know first of all i think it's actually

1083
00:42:08,880 --> 00:42:11,599
a pretty real chance that foreign will

1084
00:42:10,880 --> 00:42:14,319
be out before

1085
00:42:11,599 --> 00:42:15,200
for ech um because like as far as i know

1086
00:42:14,319 --> 00:42:16,800
we're getting pretty close to like

1087
00:42:15,200 --> 00:42:18,640
they're not getting real big changes

1088
00:42:16,800 --> 00:42:19,920
um but even if that weren't true i think

1089
00:42:18,640 --> 00:42:20,879
we could just override whatever role we

1090
00:42:19,920 --> 00:42:24,240
need to do and then

1091
00:42:20,880 --> 00:42:24,240
go into e46 best

1092
00:42:28,839 --> 00:42:34,240
okay

1093
00:42:30,960 --> 00:42:36,160
um all right so

1094
00:42:34,240 --> 00:42:37,279
uh it's it was not clear to me right now

1095
00:42:36,160 --> 00:42:38,000
is whether or not we actually want to

1096
00:42:37,280 --> 00:42:40,720
address this

1097
00:42:38,000 --> 00:42:41,359
um fur draft version nine um because we

1098
00:42:40,720 --> 00:42:42,560
i mean

1099
00:42:41,359 --> 00:42:46,720
i guess we could have gotten away with

1100
00:42:42,560 --> 00:42:48,830
this for an implementation interrupt

1101
00:42:46,720 --> 00:42:51,680
probably not for the final ifc version

1102
00:42:48,830 --> 00:42:53,920
[Music]

1103
00:42:51,680 --> 00:42:53,919
uh

1104
00:42:56,839 --> 00:43:02,880
david

1105
00:42:59,440 --> 00:43:04,400
there's one okay there is unfortunately

1106
00:43:02,880 --> 00:43:06,480
one like compatibility

1107
00:43:04,400 --> 00:43:08,640
impact which is that uh because it looks

1108
00:43:06,480 --> 00:43:12,079
like libre ssl will break if you

1109
00:43:08,640 --> 00:43:15,759
change them on hr uh if you send

1110
00:43:12,079 --> 00:43:17,520
grease extensions um right now the spec

1111
00:43:15,760 --> 00:43:18,640
says oh you just compute a new one

1112
00:43:17,520 --> 00:43:21,440
because that's

1113
00:43:18,640 --> 00:43:23,440
matches what you would normally do um

1114
00:43:21,440 --> 00:43:24,560
and if a client does that in

1115
00:43:23,440 --> 00:43:26,480
experimentation

1116
00:43:24,560 --> 00:43:28,000
they will break all libraries as well

1117
00:43:26,480 --> 00:43:29,839
they will break all libre as the cell

1118
00:43:28,000 --> 00:43:33,280
tls-13 servers

1119
00:43:29,839 --> 00:43:34,560
that happen to trigger hr um so if you

1120
00:43:33,280 --> 00:43:36,880
predicted the wrong key show or

1121
00:43:34,560 --> 00:43:36,880
something

1122
00:43:37,839 --> 00:43:42,880
there may be a minimum okay

1123
00:43:41,280 --> 00:43:44,480
um so minimally it seems like we should

1124
00:43:42,880 --> 00:43:47,839
do whatever we can to not break

1125
00:43:44,480 --> 00:43:47,839
creeper ssl um

1126
00:43:48,240 --> 00:43:51,759
yeah and if we decide it also means that

1127
00:43:50,000 --> 00:43:52,800
if we decide to override this rule which

1128
00:43:51,760 --> 00:43:54,480
i think would probably like

1129
00:43:52,800 --> 00:43:55,520
the rule i think is wrong but if we

1130
00:43:54,480 --> 00:43:56,560
decide to override the rule we'll

1131
00:43:55,520 --> 00:43:58,319
probably need to think about the

1132
00:43:56,560 --> 00:44:00,480
compatibility impacts of this

1133
00:43:58,319 --> 00:44:01,759
um i think it's probably mostly fine

1134
00:44:00,480 --> 00:44:02,160
because it's just the recovery flow and

1135
00:44:01,760 --> 00:44:05,680
such

1136
00:44:02,160 --> 00:44:09,440
but uh yeah

1137
00:44:05,680 --> 00:44:11,598
okay in either case i guess this one uh

1138
00:44:09,440 --> 00:44:13,359
needs a little bit more thought um uh

1139
00:44:11,599 --> 00:44:16,319
but we can hash out on the issue

1140
00:44:13,359 --> 00:44:17,119
um in general it seems like what is

1141
00:44:16,319 --> 00:44:19,279
currently there

1142
00:44:17,119 --> 00:44:20,160
is not quite correct so admittedly we

1143
00:44:19,280 --> 00:44:22,160
need to do something

1144
00:44:20,160 --> 00:44:24,319
um let's just figure out what that is

1145
00:44:22,160 --> 00:44:27,680
something it is we need to do

1146
00:44:24,319 --> 00:44:29,920
um all right

1147
00:44:27,680 --> 00:44:29,919
uh

1148
00:44:30,720 --> 00:44:37,839
so can we go back to the issues please

1149
00:44:40,079 --> 00:44:44,079
um all right uh

1150
00:44:42,910 --> 00:44:46,720
[Music]

1151
00:44:44,079 --> 00:44:48,079
so there's a couple other uh sort of big

1152
00:44:46,720 --> 00:44:51,919
outstanding issues

1153
00:44:48,079 --> 00:44:53,599
um we probably only have time for

1154
00:44:51,920 --> 00:44:55,200
two of them so i'd like to quickly just

1155
00:44:53,599 --> 00:45:05,520
go to

1156
00:44:55,200 --> 00:45:08,879
popover 313.

1157
00:45:05,520 --> 00:45:11,680
uh yeah sorry that's a pr not an issue

1158
00:45:08,880 --> 00:45:11,680
i apologize

1159
00:45:17,760 --> 00:45:24,160
right um so this is a pr

1160
00:45:21,839 --> 00:45:25,359
uh that's been out for a while now um

1161
00:45:24,160 --> 00:45:27,440
basically proposes

1162
00:45:25,359 --> 00:45:29,359
uh replaces the proposed record layer

1163
00:45:27,440 --> 00:45:31,200
padding with handshake level padding as

1164
00:45:29,359 --> 00:45:32,880
uh we talked about i believe at one of

1165
00:45:31,200 --> 00:45:35,919
the earlier interims um

1166
00:45:32,880 --> 00:45:38,560
we have not yet landed this yet uh

1167
00:45:35,920 --> 00:45:40,079
because there were some uh uh we had we

1168
00:45:38,560 --> 00:45:41,200
hadn't yet reached consensus on whether

1169
00:45:40,079 --> 00:45:43,839
or not this would be something

1170
00:45:41,200 --> 00:45:46,399
best to do either in like encrypted

1171
00:45:43,839 --> 00:45:48,720
extensions or do a handshake message or

1172
00:45:46,400 --> 00:45:49,760
um whatever so the status of the pr is

1173
00:45:48,720 --> 00:45:51,279
not yet final

1174
00:45:49,760 --> 00:45:53,359
however what i think is important for us

1175
00:45:51,280 --> 00:45:55,040
to sort of decide right now especially

1176
00:45:53,359 --> 00:45:56,078
as we're thinking about the next version

1177
00:45:55,040 --> 00:45:57,599
of the draft

1178
00:45:56,079 --> 00:45:59,839
is whether or not this is something we'd

1179
00:45:57,599 --> 00:46:03,200
like to address uh

1180
00:45:59,839 --> 00:46:03,200
larger interhop experiments

1181
00:46:03,280 --> 00:46:10,319
i'll note that um for the the

1182
00:46:07,119 --> 00:46:12,960
the final end goal project um ideally

1183
00:46:10,319 --> 00:46:14,560
yes we do have padding uh implemented

1184
00:46:12,960 --> 00:46:16,100
both on client and server to hide

1185
00:46:14,560 --> 00:46:17,759
relevant metadata

1186
00:46:16,100 --> 00:46:20,720
[Music]

1187
00:46:17,760 --> 00:46:22,240
but right now it seems sufficient for

1188
00:46:20,720 --> 00:46:25,279
clients to implement padding for

1189
00:46:22,240 --> 00:46:27,919
o9 interoperability and to

1190
00:46:25,280 --> 00:46:29,200
ignore sort of the more complicated

1191
00:46:27,920 --> 00:46:33,440
server side

1192
00:46:29,200 --> 00:46:36,480
padding story so my proposal would be

1193
00:46:33,440 --> 00:46:38,079
to continue uh to keep this on ice until

1194
00:46:36,480 --> 00:46:39,760
o nine ships

1195
00:46:38,079 --> 00:46:42,560
and then come back to this until we have

1196
00:46:39,760 --> 00:46:44,720
more uh more time really to

1197
00:46:42,560 --> 00:46:47,040
talk about what is the right path

1198
00:46:44,720 --> 00:46:50,000
forward

1199
00:46:47,040 --> 00:46:57,839
and i'd like to hear what people think

1200
00:46:50,000 --> 00:46:57,839
about that particular plan

1201
00:47:08,839 --> 00:47:11,839
chris

1202
00:47:12,079 --> 00:47:16,079
um it seems uh somewhat orthogonal to

1203
00:47:15,520 --> 00:47:17,920
getting

1204
00:47:16,079 --> 00:47:19,359
the thing actually like deployed and

1205
00:47:17,920 --> 00:47:20,720
running um

1206
00:47:19,359 --> 00:47:22,839
this is something that we're gonna have

1207
00:47:20,720 --> 00:47:26,000
to think about really carefully

1208
00:47:22,839 --> 00:47:27,279
because there's a potentially a lot of

1209
00:47:26,000 --> 00:47:29,680
different things

1210
00:47:27,280 --> 00:47:31,119
that impact the length of messages

1211
00:47:29,680 --> 00:47:32,399
things that we want to hide that are

1212
00:47:31,119 --> 00:47:33,920
privacy sensitive

1213
00:47:32,400 --> 00:47:35,599
so we want to be really careful with

1214
00:47:33,920 --> 00:47:39,359
this bit

1215
00:47:35,599 --> 00:47:41,280
yeah admittedly this is um uh

1216
00:47:39,359 --> 00:47:43,040
we've been hyper focused on the client

1217
00:47:41,280 --> 00:47:44,079
side uh padding story for a very long

1218
00:47:43,040 --> 00:47:47,200
time

1219
00:47:44,079 --> 00:47:49,040
um uh sort of just

1220
00:47:47,200 --> 00:47:50,960
kind of uh punting on the the

1221
00:47:49,040 --> 00:47:54,000
server-side certificate fight and

1222
00:47:50,960 --> 00:47:55,440
you know everything else sorry um so i

1223
00:47:54,000 --> 00:47:57,119
definitely agree that uh

1224
00:47:55,440 --> 00:47:59,119
this is going to if it's going to be

1225
00:47:57,119 --> 00:48:01,040
correct and complete um it's going to

1226
00:47:59,119 --> 00:48:04,839
require a more careful thought so

1227
00:48:01,040 --> 00:48:08,640
yeah um i think we should just hold off

1228
00:48:04,839 --> 00:48:09,839
um yeah i just i i mean i i would have

1229
00:48:08,640 --> 00:48:11,279
thought if people really wanted to do

1230
00:48:09,839 --> 00:48:13,040
they would have been burning the door

1231
00:48:11,280 --> 00:48:14,079
down here and nobody is so i think your

1232
00:48:13,040 --> 00:48:15,680
assessment is right

1233
00:48:14,079 --> 00:48:17,440
you put it on ice and try to figure it

1234
00:48:15,680 --> 00:48:19,520
out later okay

1235
00:48:17,440 --> 00:48:21,359
um then i'd like to pop over to the last

1236
00:48:19,520 --> 00:48:26,079
final issue and this one is an issue joe

1237
00:48:21,359 --> 00:48:28,880
um uh it's 354

1238
00:48:26,079 --> 00:48:28,880
i believe yeah

1239
00:48:32,839 --> 00:48:36,558
um uh so actually i'm going to turn this

1240
00:48:35,359 --> 00:48:38,400
over to chris who

1241
00:48:36,559 --> 00:48:39,920
has been thinking a tremendous amount

1242
00:48:38,400 --> 00:48:43,839
about this particular problem

1243
00:48:39,920 --> 00:48:44,640
um and uh i'll let him summarize the

1244
00:48:43,839 --> 00:48:49,599
issue and

1245
00:48:44,640 --> 00:48:52,319
uh you know plug it for people

1246
00:48:49,599 --> 00:48:52,960
yeah uh let me just let me just open it

1247
00:48:52,319 --> 00:48:55,680
up here

1248
00:48:52,960 --> 00:48:55,680
one second

1249
00:48:56,079 --> 00:49:01,440
yeah so um

1250
00:48:59,119 --> 00:49:02,319
so you know we've been kind of

1251
00:49:01,440 --> 00:49:05,440
collecting

1252
00:49:02,319 --> 00:49:07,920
this long list of possible ways

1253
00:49:05,440 --> 00:49:08,559
well okay so just for some background

1254
00:49:07,920 --> 00:49:11,280
the

1255
00:49:08,559 --> 00:49:14,079
the x specification kind of defines two

1256
00:49:11,280 --> 00:49:17,680
protocol variants which we'll call

1257
00:49:14,079 --> 00:49:19,839
real ech and grease dch so really chs

1258
00:49:17,680 --> 00:49:20,558
you know the client offers ech and the

1259
00:49:19,839 --> 00:49:22,960
server

1260
00:49:20,559 --> 00:49:23,839
either accepts or rejects it and in

1261
00:49:22,960 --> 00:49:26,240
greece dch

1262
00:49:23,839 --> 00:49:27,119
the client sends a dummy extension

1263
00:49:26,240 --> 00:49:30,078
that's made to

1264
00:49:27,119 --> 00:49:31,520
look like the real ech extension and the

1265
00:49:30,079 --> 00:49:33,520
hope here is that

1266
00:49:31,520 --> 00:49:37,119
if networks treat these two different

1267
00:49:33,520 --> 00:49:37,119
protocol variants the same

1268
00:49:37,200 --> 00:49:40,960
and greased ech is deployable for some

1269
00:49:40,000 --> 00:49:43,760
definition of

1270
00:49:40,960 --> 00:49:45,839
deployable then real ech will be

1271
00:49:43,760 --> 00:49:48,000
deployable too because ultimately what

1272
00:49:45,839 --> 00:49:48,880
our don't stick out considerations are

1273
00:49:48,000 --> 00:49:52,079
about

1274
00:49:48,880 --> 00:49:54,000
are um at the very least deployability

1275
00:49:52,079 --> 00:49:56,839
so i've been kind of trying to figure

1276
00:49:54,000 --> 00:50:00,880
out well what does it mean

1277
00:49:56,839 --> 00:50:04,319
um for for you know real ech

1278
00:50:00,880 --> 00:50:06,079
to look like greased ech um

1279
00:50:04,319 --> 00:50:08,319
we've been kind of thinking this of this

1280
00:50:06,079 --> 00:50:12,319
as like an indistinguishability property

1281
00:50:08,319 --> 00:50:14,880
like the goal being if if really ch

1282
00:50:12,319 --> 00:50:17,279
is absolute is is is computationally

1283
00:50:14,880 --> 00:50:19,839
indistinguishable from grease ech

1284
00:50:17,280 --> 00:50:20,800
that is no adversary can in a reasonable

1285
00:50:19,839 --> 00:50:23,920
amount of time

1286
00:50:20,800 --> 00:50:26,079
tell which one is running then of course

1287
00:50:23,920 --> 00:50:27,040
it's not going to treat them differently

1288
00:50:26,079 --> 00:50:29,040
but

1289
00:50:27,040 --> 00:50:31,279
uh indistinguishability is just too

1290
00:50:29,040 --> 00:50:33,920
strong we don't we don't achieve it with

1291
00:50:31,280 --> 00:50:35,040
with with these pairs of proto these two

1292
00:50:33,920 --> 00:50:36,319
pairs of protocols

1293
00:50:35,040 --> 00:50:38,480
and if you look at the issue there's

1294
00:50:36,319 --> 00:50:41,200
this long list of of attacks

1295
00:50:38,480 --> 00:50:42,480
um one was the you know christian's

1296
00:50:41,200 --> 00:50:45,040
attack that we

1297
00:50:42,480 --> 00:50:46,880
hoped to dispense with with uh the the

1298
00:50:45,040 --> 00:50:49,520
first pr we talked about

1299
00:50:46,880 --> 00:50:51,280
um but there's a whole list of of other

1300
00:50:49,520 --> 00:50:53,200
things

1301
00:50:51,280 --> 00:50:54,800
so the question i think we need to

1302
00:50:53,200 --> 00:50:58,319
answer is

1303
00:50:54,800 --> 00:51:00,720
so what do we mean when we say what what

1304
00:50:58,319 --> 00:51:01,759
what does this act what is this property

1305
00:51:00,720 --> 00:51:04,959
like that we act

1306
00:51:01,760 --> 00:51:08,319
that we're actually after um

1307
00:51:04,960 --> 00:51:09,760
and it's something like we what we have

1308
00:51:08,319 --> 00:51:12,960
to kind of figure out is okay

1309
00:51:09,760 --> 00:51:13,760
what do what are what are the what are

1310
00:51:12,960 --> 00:51:16,720
the kind of

1311
00:51:13,760 --> 00:51:18,000
what are the possible ways what are the

1312
00:51:16,720 --> 00:51:21,200
possible features

1313
00:51:18,000 --> 00:51:23,760
of the the bits on the wire

1314
00:51:21,200 --> 00:51:24,399
that might trigger middle boxes to treat

1315
00:51:23,760 --> 00:51:27,280
one

1316
00:51:24,400 --> 00:51:28,079
one one type of traffic differently from

1317
00:51:27,280 --> 00:51:29,680
the other

1318
00:51:28,079 --> 00:51:31,920
and so we thought of various things

1319
00:51:29,680 --> 00:51:33,598
there might be um

1320
00:51:31,920 --> 00:51:36,400
the sets of extensions that they appear

1321
00:51:33,599 --> 00:51:38,960
to negotiate

1322
00:51:36,400 --> 00:51:39,440
the number of round trips that that are

1323
00:51:38,960 --> 00:51:42,000
made

1324
00:51:39,440 --> 00:51:42,480
over once the connection is established

1325
00:51:42,000 --> 00:51:44,400
um

1326
00:51:42,480 --> 00:51:46,160
things like packet size or the number of

1327
00:51:44,400 --> 00:51:49,599
packets

1328
00:51:46,160 --> 00:51:53,440
etc etc etc

1329
00:51:49,599 --> 00:51:55,680
um yeah i mean i think

1330
00:51:53,440 --> 00:51:56,480
i don't know what the answer is here i

1331
00:51:55,680 --> 00:51:58,480
think we also

1332
00:51:56,480 --> 00:52:00,559
like you know we're we're talking about

1333
00:51:58,480 --> 00:52:01,680
a problem that we don't know is a real

1334
00:52:00,559 --> 00:52:05,839
problem

1335
00:52:01,680 --> 00:52:08,558
um so i kind of you know i

1336
00:52:05,839 --> 00:52:10,400
i i kind of wanted to you know the the

1337
00:52:08,559 --> 00:52:11,359
point of this issue is to start a

1338
00:52:10,400 --> 00:52:15,040
discussion about

1339
00:52:11,359 --> 00:52:16,319
what what we mean what like what do we

1340
00:52:15,040 --> 00:52:18,800
mean

1341
00:52:16,319 --> 00:52:19,839
when we say don't the words don't stick

1342
00:52:18,800 --> 00:52:23,119
out

1343
00:52:19,839 --> 00:52:26,720
um and how you know

1344
00:52:23,119 --> 00:52:30,240
and um how do we know if we've succeeded

1345
00:52:26,720 --> 00:52:30,240
if that makes sense so that's that's my

1346
00:52:30,839 --> 00:52:34,078
spiel

1347
00:52:32,400 --> 00:52:36,559
chris um and there's certainly a lot to

1348
00:52:34,079 --> 00:52:38,000
unpack here i think um

1349
00:52:36,559 --> 00:52:39,839
and it touches on many of the things

1350
00:52:38,000 --> 00:52:43,119
that we've talked about today

1351
00:52:39,839 --> 00:52:44,480
um so i do think um a sort of a larger

1352
00:52:43,119 --> 00:52:46,160
longer discussion

1353
00:52:44,480 --> 00:52:47,280
longer than eight minutes or less

1354
00:52:46,160 --> 00:52:48,160
actually because we're kind of already

1355
00:52:47,280 --> 00:52:51,839
over

1356
00:52:48,160 --> 00:52:55,279
as needed for this particular topic

1357
00:52:51,839 --> 00:52:58,480
so what i would propose we do um is uh

1358
00:52:55,280 --> 00:53:01,280
perhaps make this one of the uh

1359
00:52:58,480 --> 00:53:03,599
if not the the main issue to discuss

1360
00:53:01,280 --> 00:53:06,720
during the the next interim

1361
00:53:03,599 --> 00:53:10,960
um and give people some time to uh

1362
00:53:06,720 --> 00:53:12,558
chew on um this sort of relaxed

1363
00:53:10,960 --> 00:53:14,160
uh threat model that you're proposing

1364
00:53:12,559 --> 00:53:15,760
here um something not

1365
00:53:14,160 --> 00:53:18,240
quite as strict as indistinguishability

1366
00:53:15,760 --> 00:53:21,760
but perhaps in differentiability between

1367
00:53:18,240 --> 00:53:23,839
greece and real uh vch so

1368
00:53:21,760 --> 00:53:26,160
um of course if people have thoughts on

1369
00:53:23,839 --> 00:53:27,119
the this topic in the meantime maybe

1370
00:53:26,160 --> 00:53:28,480
encourage you to

1371
00:53:27,119 --> 00:53:31,599
you know raise them on the issue or

1372
00:53:28,480 --> 00:53:34,800
break them to the list um

1373
00:53:31,599 --> 00:53:36,400
uh because right now um a lot of the

1374
00:53:34,800 --> 00:53:39,839
designs decisions we're making

1375
00:53:36,400 --> 00:53:40,079
sort of uh it turns out that we're not

1376
00:53:39,839 --> 00:53:41,839
all

1377
00:53:40,079 --> 00:53:43,119
we don't all share the same enzo model

1378
00:53:41,839 --> 00:53:43,920
in terms of what don't stick out

1379
00:53:43,119 --> 00:53:45,920
actually means

1380
00:53:43,920 --> 00:53:47,839
as evidenced by christian's attack that

1381
00:53:45,920 --> 00:53:48,960
he pointed out as evidenced by other

1382
00:53:47,839 --> 00:53:52,400
things that have happened

1383
00:53:48,960 --> 00:53:55,119
um uh and on the draft as of late so

1384
00:53:52,400 --> 00:53:56,000
um this uh this initial work that chris

1385
00:53:55,119 --> 00:53:58,880
laid out here is

1386
00:53:56,000 --> 00:53:58,880
um you know

1387
00:53:59,280 --> 00:54:02,319
a path towards getting towards that

1388
00:54:00,960 --> 00:54:04,880
shared mental model

1389
00:54:02,319 --> 00:54:11,520
um and so chris thank you for putting

1390
00:54:04,880 --> 00:54:14,079
this all together this is really good

1391
00:54:11,520 --> 00:54:15,759
um if there's no i mean we don't really

1392
00:54:14,079 --> 00:54:18,720
have time for discussion unfortunately

1393
00:54:15,760 --> 00:54:19,440
um but i what i would propose we do is

1394
00:54:18,720 --> 00:54:20,879
um

1395
00:54:19,440 --> 00:54:22,559
probably have another interim sometime

1396
00:54:20,880 --> 00:54:24,000
soon talk about these things talk about

1397
00:54:22,559 --> 00:54:25,760
other things

1398
00:54:24,000 --> 00:54:27,040
and as for the issues and pr's that we

1399
00:54:25,760 --> 00:54:29,200
just went through

1400
00:54:27,040 --> 00:54:31,599
land the prs that are ready for landing

1401
00:54:29,200 --> 00:54:35,040
with the amendments that we've discussed

1402
00:54:31,599 --> 00:54:35,920
propose prs for the issues that we've

1403
00:54:35,040 --> 00:54:37,920
agreed upon

1404
00:54:35,920 --> 00:54:39,599
and those as well then cut 09 as soon as

1405
00:54:37,920 --> 00:54:42,079
we can um

1406
00:54:39,599 --> 00:54:44,559
and that sort of leads us into the next

1407
00:54:42,079 --> 00:54:48,799
topic which i'm going to

1408
00:54:44,559 --> 00:54:50,480
hand back to uh sean to drive

1409
00:54:48,799 --> 00:54:51,920
all right so one of the issues that came

1410
00:54:50,480 --> 00:54:53,440
up in our github discussion on the

1411
00:54:51,920 --> 00:54:56,079
mailing list

1412
00:54:53,440 --> 00:54:57,280
was how implementers can figure out what

1413
00:54:56,079 --> 00:55:00,720
they need to implement

1414
00:54:57,280 --> 00:55:02,000
and so we're going to try to steal

1415
00:55:00,720 --> 00:55:04,520
what quick did with their

1416
00:55:02,000 --> 00:55:07,440
implementations and try to develop

1417
00:55:04,520 --> 00:55:09,040
a methodology for defining what an

1418
00:55:07,440 --> 00:55:11,359
implementation target is

1419
00:55:09,040 --> 00:55:13,839
um and i stole this definition directly

1420
00:55:11,359 --> 00:55:15,359
from a message that mark nottingham sent

1421
00:55:13,839 --> 00:55:17,119
so you know what's an implementation

1422
00:55:15,359 --> 00:55:18,640
target it's an internet draft the

1423
00:55:17,119 --> 00:55:20,079
working group feels is suitable for

1424
00:55:18,640 --> 00:55:21,920
implementers to write codetune for the

1425
00:55:20,079 --> 00:55:25,040
purposes of interoperability testing

1426
00:55:21,920 --> 00:55:27,200
and gathering feedback so basically we'd

1427
00:55:25,040 --> 00:55:28,000
like declare 09 as the implementation

1428
00:55:27,200 --> 00:55:30,879
version

1429
00:55:28,000 --> 00:55:32,880
um now what we could do you know that's

1430
00:55:30,880 --> 00:55:34,000
the goal is always that we we try to get

1431
00:55:32,880 --> 00:55:36,640
a draft

1432
00:55:34,000 --> 00:55:37,280
and like go towards implementing that

1433
00:55:36,640 --> 00:55:39,839
but

1434
00:55:37,280 --> 00:55:41,920
if we ever got on the special case where

1435
00:55:39,839 --> 00:55:43,520
we wanted to like add some functionality

1436
00:55:41,920 --> 00:55:45,119
or take some away we could do that with

1437
00:55:43,520 --> 00:55:50,240
the pr mechanisms that we have

1438
00:55:45,119 --> 00:55:50,240
in um github next slide

1439
00:55:52,079 --> 00:55:55,760
right so when do we need one well

1440
00:55:54,400 --> 00:55:57,280
obviously this is going to apply to all

1441
00:55:55,760 --> 00:55:59,040
drafts because not all drafts have

1442
00:55:57,280 --> 00:56:00,480
active implementations going on

1443
00:55:59,040 --> 00:56:01,680
but for ones where we do and there are

1444
00:56:00,480 --> 00:56:02,960
people that are trying to make sure that

1445
00:56:01,680 --> 00:56:05,200
they can follow along

1446
00:56:02,960 --> 00:56:07,119
um basically we're gonna have multiple

1447
00:56:05,200 --> 00:56:08,879
multiple active implementations

1448
00:56:07,119 --> 00:56:10,480
and you know when would we do this well

1449
00:56:08,880 --> 00:56:11,599
obviously before a hackathon or an

1450
00:56:10,480 --> 00:56:14,559
interop event

1451
00:56:11,599 --> 00:56:17,839
um would be a great time to do that so

1452
00:56:14,559 --> 00:56:17,839
next slide

1453
00:56:18,880 --> 00:56:22,799
um one of the things i guess i want to

1454
00:56:21,359 --> 00:56:24,160
make clear is that in declaring an

1455
00:56:22,799 --> 00:56:25,920
implementation version

1456
00:56:24,160 --> 00:56:27,680
that doesn't mean that the draft is

1457
00:56:25,920 --> 00:56:29,200
going to get frozen and no other work is

1458
00:56:27,680 --> 00:56:30,558
going to get done

1459
00:56:29,200 --> 00:56:32,558
the implementers are going to kind of go

1460
00:56:30,559 --> 00:56:34,079
off and then i think that the the

1461
00:56:32,559 --> 00:56:35,760
the working group can kind of keep keep

1462
00:56:34,079 --> 00:56:36,880
doing its thing and working on the draft

1463
00:56:35,760 --> 00:56:38,799
and adding things

1464
00:56:36,880 --> 00:56:40,160
um we'll have to decide whether we land

1465
00:56:38,799 --> 00:56:40,720
those or not and how we do all that

1466
00:56:40,160 --> 00:56:42,319
stuff

1467
00:56:40,720 --> 00:56:44,160
but like you can have an implementation

1468
00:56:42,319 --> 00:56:46,720
version that's like say 09

1469
00:56:44,160 --> 00:56:48,319
and then we iterate to 14 and then the

1470
00:56:46,720 --> 00:56:50,799
next implementation version is

1471
00:56:48,319 --> 00:56:53,119
13 or 15 or something like that we can

1472
00:56:50,799 --> 00:56:54,480
decide what we want to do

1473
00:56:53,119 --> 00:56:56,240
what we want to do though is make it

1474
00:56:54,480 --> 00:56:57,839
very clear to the implementers exactly

1475
00:56:56,240 --> 00:56:59,279
what's going on and what they need to do

1476
00:56:57,839 --> 00:57:02,319
so we'd set up

1477
00:56:59,280 --> 00:57:04,160
a wiki kind of like quick quick wiki

1478
00:57:02,319 --> 00:57:05,759
to make sure we we indicate you know

1479
00:57:04,160 --> 00:57:07,359
what the implementations are people that

1480
00:57:05,760 --> 00:57:08,480
are playing along both on the server and

1481
00:57:07,359 --> 00:57:10,480
the client side

1482
00:57:08,480 --> 00:57:12,319
um as well as what is what is planned to

1483
00:57:10,480 --> 00:57:14,640
be implemented for that particular

1484
00:57:12,319 --> 00:57:14,640
version

1485
00:57:14,960 --> 00:57:17,440
next slide

1486
00:57:18,079 --> 00:57:21,119
discussion does this sound like

1487
00:57:19,440 --> 00:57:23,359
something we would like to do this was

1488
00:57:21,119 --> 00:57:24,880
this was done in quick and it was very

1489
00:57:23,359 --> 00:57:28,960
successful

1490
00:57:24,880 --> 00:57:28,960
i think it moved things along um

1491
00:57:29,440 --> 00:57:31,839
ecker

1492
00:57:33,040 --> 00:57:37,680
appropriate but i i i implore the chairs

1493
00:57:35,599 --> 00:57:41,599
not to have the implementation target be

1494
00:57:37,680 --> 00:57:43,759
draft 09 plus 17 32 and 19.

1495
00:57:41,599 --> 00:57:44,799
um you know that draft numbers are cheap

1496
00:57:43,760 --> 00:57:46,720
i think we could afford to like just

1497
00:57:44,799 --> 00:57:48,400
generate new drafts when we need them

1498
00:57:46,720 --> 00:57:49,759
um you know if we're really desperate

1499
00:57:48,400 --> 00:57:52,240
fine but like we're not

1500
00:57:49,760 --> 00:57:53,200
so that that's a point taken i mean the

1501
00:57:52,240 --> 00:57:55,520
idea is that we can

1502
00:57:53,200 --> 00:57:57,040
we can easily pump out new versions um

1503
00:57:55,520 --> 00:57:58,880
it does make it easier

1504
00:57:57,040 --> 00:58:00,558
um and it's it's much clearer to follow

1505
00:57:58,880 --> 00:58:02,880
along so definitely we can we can try to

1506
00:58:00,559 --> 00:58:05,280
do that

1507
00:58:02,880 --> 00:58:05,280
stephen

1508
00:58:06,079 --> 00:58:10,000
yeah i i really support this idea i

1509
00:58:08,400 --> 00:58:12,559
think we could do it doing it

1510
00:58:10,000 --> 00:58:13,440
uh in the near future for some draft i

1511
00:58:12,559 --> 00:58:15,760
don't care what the

1512
00:58:13,440 --> 00:58:17,599
revision number is uh because it's kind

1513
00:58:15,760 --> 00:58:19,440
of been quite a while with this

1514
00:58:17,599 --> 00:58:23,839
since we've had a drop like that i think

1515
00:58:19,440 --> 00:58:23,839
so well we're doing do it soon please

1516
00:58:23,920 --> 00:58:26,880
i mean this is this is really the the

1517
00:58:25,440 --> 00:58:28,079
crux of the matters it basically will

1518
00:58:26,880 --> 00:58:28,799
set up a wiki and then people could

1519
00:58:28,079 --> 00:58:30,720
submit

1520
00:58:28,799 --> 00:58:32,240
prs to add the server side

1521
00:58:30,720 --> 00:58:33,040
implementation with links to whatever

1522
00:58:32,240 --> 00:58:35,680
they want

1523
00:58:33,040 --> 00:58:37,040
and client side and go from there and i

1524
00:58:35,680 --> 00:58:39,359
personally think that what we should go

1525
00:58:37,040 --> 00:58:40,160
be going for is the next version the 09

1526
00:58:39,359 --> 00:58:43,279
version

1527
00:58:40,160 --> 00:58:45,440
um and um

1528
00:58:43,280 --> 00:58:48,319
i guess chris is the is that was kind of

1529
00:58:45,440 --> 00:58:48,319
your thinking as well

1530
00:58:48,640 --> 00:58:52,240
right i took a stab at the wiki based on

1531
00:58:51,119 --> 00:58:55,280
what quick is done

1532
00:58:52,240 --> 00:58:56,479
um uh and

1533
00:58:55,280 --> 00:58:58,160
there's a list of initial

1534
00:58:56,480 --> 00:59:00,400
implementations a pointer to a feature

1535
00:58:58,160 --> 00:59:01,118
matrix uh interrupt matrix similar to

1536
00:59:00,400 --> 00:59:03,839
quick

1537
00:59:01,119 --> 00:59:04,880
um so assuming that works for folks i

1538
00:59:03,839 --> 00:59:06,799
would encourage you to

1539
00:59:04,880 --> 00:59:08,240
you know please submit prs to update

1540
00:59:06,799 --> 00:59:11,599
that update the spreadsheet

1541
00:59:08,240 --> 00:59:11,598
um let's get the ball rolling

1542
00:59:16,559 --> 00:59:20,960
all right does anybody not think this is

1543
00:59:18,400 --> 00:59:20,960
a good idea

1544
00:59:23,760 --> 00:59:27,520
i really don't think so so um this

1545
00:59:26,400 --> 00:59:31,280
brings us to the bottom

1546
00:59:27,520 --> 00:59:33,040
of the hour uh and that's it for our

1547
00:59:31,280 --> 00:59:36,160
session we only had one hour scheduled

1548
00:59:33,040 --> 00:59:36,160
so thank you very much

1549
00:59:37,760 --> 00:59:40,480
see you next time

1550
00:59:43,119 --> 00:59:47,839
and uh thanks chris for taking notes

1551
01:00:12,839 --> 01:00:15,839
one

1552
01:00:24,559 --> 01:00:26,640
you

