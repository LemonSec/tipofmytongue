1
00:01:13,220 --> 00:01:16,610
[Music]

2
00:01:17,200 --> 00:01:22,640
hi everyone

3
00:01:18,240 --> 00:01:22,640
so welcome to inked area

4
00:01:23,360 --> 00:01:27,840
we're going to do a quick check here

5
00:01:41,040 --> 00:01:45,280
great so hello good morning good evening

6
00:01:44,479 --> 00:01:47,920
good

7
00:01:45,280 --> 00:01:54,079
afternoon wherever you are and this is

8
00:01:47,920 --> 00:01:57,680
juan carlos

9
00:01:54,079 --> 00:01:59,919
so we're going to start with with a few

10
00:01:57,680 --> 00:02:01,520
virtual meeting tips and etiquette so

11
00:01:59,920 --> 00:02:04,079
please join the queue

12
00:02:01,520 --> 00:02:05,679
before participating uh we'll recognize

13
00:02:04,079 --> 00:02:07,759
you and give you the word so that we

14
00:02:05,680 --> 00:02:09,679
don't overstep each other

15
00:02:07,759 --> 00:02:12,160
mute your microphone unless you are

16
00:02:09,679 --> 00:02:13,920
speaking and preferably turn off your

17
00:02:12,160 --> 00:02:14,959
video if you are presenting you can turn

18
00:02:13,920 --> 00:02:16,879
it on

19
00:02:14,959 --> 00:02:19,599
but otherwise please turn it off so that

20
00:02:16,879 --> 00:02:19,599
we can save

21
00:02:20,840 --> 00:02:26,480
bandwidth

22
00:02:22,800 --> 00:02:29,840
next slide please so not well this is uh

23
00:02:26,480 --> 00:02:33,119
the usual not well we are uh holding an

24
00:02:29,840 --> 00:02:35,200
official itf uh meeting so you agreed to

25
00:02:33,120 --> 00:02:38,319
follow the ietf

26
00:02:35,200 --> 00:02:40,319
processes and policies if you are aware

27
00:02:38,319 --> 00:02:42,000
of any contribution covered by patents

28
00:02:40,319 --> 00:02:42,799
of patent applications please let us

29
00:02:42,000 --> 00:02:46,000
know

30
00:02:42,800 --> 00:02:49,040
you can send us a message or

31
00:02:46,000 --> 00:02:50,800
please disclose it appropriately any

32
00:02:49,040 --> 00:02:53,519
participant uh

33
00:02:50,800 --> 00:02:55,680
you agree and acknowledge that it will

34
00:02:53,519 --> 00:02:55,680
be

35
00:02:56,720 --> 00:03:05,280
we just lost your screen uh awesome

36
00:03:01,599 --> 00:03:08,560
so you are acknowledged that you are

37
00:03:05,280 --> 00:03:12,159
abiding by the ietf processes

38
00:03:08,560 --> 00:03:14,159
bcps and that

39
00:03:12,159 --> 00:03:18,239
and you are aware that your

40
00:03:14,159 --> 00:03:21,440
contributions are going to be recorded

41
00:03:18,239 --> 00:03:25,519
that minutes are going to be taken

42
00:03:21,440 --> 00:03:25,519
your presence is going to be locked

43
00:03:30,319 --> 00:03:34,958
well sim can you share the screen again

44
00:03:32,640 --> 00:03:34,958
please

45
00:03:40,959 --> 00:03:47,840
it's prolonged connectivity completely

46
00:03:44,400 --> 00:03:51,440
yeah it looks like you lost connectivity

47
00:03:47,840 --> 00:03:51,440
all right so let me

48
00:03:54,560 --> 00:04:01,840
try something here

49
00:04:18,478 --> 00:04:22,719
all right can you guys see my screen

50
00:04:24,880 --> 00:04:30,960
yes okay thank you so

51
00:04:28,320 --> 00:04:32,080
uh coming back uh scribes please

52
00:04:30,960 --> 00:04:35,198
contribute online

53
00:04:32,080 --> 00:04:35,680
to the minutes at the code dmd uh and uh

54
00:04:35,199 --> 00:04:38,479
joel

55
00:04:35,680 --> 00:04:38,960
uh i just to confirm uh can you help us

56
00:04:38,479 --> 00:04:42,240
with the

57
00:04:38,960 --> 00:04:44,239
minute or uh was it only described

58
00:04:42,240 --> 00:04:45,440
for the other i'm dealing with scribing

59
00:04:44,240 --> 00:04:47,360
because i got other things i gotta

60
00:04:45,440 --> 00:04:51,360
record

61
00:04:47,360 --> 00:04:54,800
sorry okay so uh we will need

62
00:04:51,360 --> 00:04:58,400
uh someone to help us with the minute uh

63
00:04:54,800 --> 00:05:11,840
it could be many people

64
00:04:58,400 --> 00:05:11,840
can someone help us taking minutes

65
00:05:13,360 --> 00:05:19,840
please we need that note-taker to

66
00:05:16,639 --> 00:05:19,840
to be able to hold a meeting

67
00:05:21,440 --> 00:05:25,440
that's on callous not all the time but

68
00:05:23,120 --> 00:05:29,199
i'll be taking some

69
00:05:25,440 --> 00:05:34,000
thank you help some

70
00:05:29,199 --> 00:05:34,000
great thanks was that pascal

71
00:05:37,360 --> 00:05:42,560
i lost the mythical screen so okay

72
00:05:43,120 --> 00:05:47,360
all right so what's in this back so let

73
00:05:45,840 --> 00:05:50,479
me stop sharing and let him

74
00:05:47,360 --> 00:05:53,840
share so that i can manage the queue and

75
00:05:50,479 --> 00:05:53,840
go back to normal

76
00:06:02,560 --> 00:06:07,360
okay so note well we can go to the next

77
00:06:05,199 --> 00:06:09,680
life

78
00:06:07,360 --> 00:06:11,520
we have note takers great and your

79
00:06:09,680 --> 00:06:12,960
presence is being locked so if we can

80
00:06:11,520 --> 00:06:16,080
move to the next slide

81
00:06:12,960 --> 00:06:18,638
this is agenda for today um

82
00:06:16,080 --> 00:06:20,800
we're going to have vlad presenting a

83
00:06:18,639 --> 00:06:23,039
small update to the socks up

84
00:06:20,800 --> 00:06:25,199
version six uh protocol then we're going

85
00:06:23,039 --> 00:06:27,680
to have uh maxine presenting uh

86
00:06:25,199 --> 00:06:29,120
three slides pascal which she covered

87
00:06:27,680 --> 00:06:32,800
ppp

88
00:06:29,120 --> 00:06:35,600
uh ehausia with the two

89
00:06:32,800 --> 00:06:36,720
flexible ip drafts and if we have time

90
00:06:35,600 --> 00:06:39,520
we will

91
00:06:36,720 --> 00:06:42,000
have lorenzo presenting the per

92
00:06:39,520 --> 00:06:45,758
application networking considerations

93
00:06:42,000 --> 00:06:49,840
any bashing to the agenda i see david on

94
00:06:45,759 --> 00:06:49,840
the queue

95
00:06:51,840 --> 00:06:59,198
hi can can you hear me yes

96
00:06:55,520 --> 00:07:03,758
so i was genuinely surprised to see

97
00:06:59,199 --> 00:07:06,800
items uh 3 4 and five on the agenda

98
00:07:03,759 --> 00:07:08,560
um those um so

99
00:07:06,800 --> 00:07:11,039
as someone who follows kind of both the

100
00:07:08,560 --> 00:07:13,039
transport and interiors

101
00:07:11,039 --> 00:07:14,719
these really feel like transport

102
00:07:13,039 --> 00:07:15,360
documents and i feel like both of them

103
00:07:14,720 --> 00:07:17,280
were just

104
00:07:15,360 --> 00:07:19,840
renamed or sorry two out of the three of

105
00:07:17,280 --> 00:07:22,799
them were just renamed from like

106
00:07:19,840 --> 00:07:23,679
documents aimed at quick so i would like

107
00:07:22,800 --> 00:07:26,560
to ask like

108
00:07:23,680 --> 00:07:27,039
why are these in interior like they're

109
00:07:26,560 --> 00:07:28,800
about

110
00:07:27,039 --> 00:07:32,240
like more transport properties than

111
00:07:28,800 --> 00:07:32,240
anything else in my understanding

112
00:07:37,039 --> 00:07:42,000
i guess this is a question for shares

113
00:07:38,880 --> 00:07:42,000
more than anyone else

114
00:07:42,880 --> 00:07:46,639
well uh i see my team on the cues a

115
00:07:45,039 --> 00:07:47,120
little while he was joining so if you

116
00:07:46,639 --> 00:07:49,919
can

117
00:07:47,120 --> 00:07:49,919
take that max

118
00:07:50,960 --> 00:07:58,080
yeah of course can you hear me yes yes

119
00:07:54,319 --> 00:08:00,800
okay so um um those three documents

120
00:07:58,080 --> 00:08:04,159
define an application protocol for quick

121
00:08:00,800 --> 00:08:06,400
so as such uh i felt the

122
00:08:04,160 --> 00:08:08,000
they were appropriate for interior and i

123
00:08:06,400 --> 00:08:11,359
contacted the chairs

124
00:08:08,000 --> 00:08:12,800
uh giving given this of course those

125
00:08:11,360 --> 00:08:16,319
documents existed before

126
00:08:12,800 --> 00:08:18,479
so they were uh as targeted

127
00:08:16,319 --> 00:08:19,919
we could say to the quick working group

128
00:08:18,479 --> 00:08:23,360
but they they are not

129
00:08:19,919 --> 00:08:25,758
um touching on transport properties

130
00:08:23,360 --> 00:08:27,199
um they are just an application protocol

131
00:08:25,759 --> 00:08:29,039
on top of so

132
00:08:27,199 --> 00:08:30,560
so if it's just an application protocol

133
00:08:29,039 --> 00:08:34,880
that suggests the

134
00:08:30,560 --> 00:08:34,880
application area not the interior

135
00:08:36,479 --> 00:08:42,719
oh i i see uh our ad

136
00:08:39,519 --> 00:08:45,040
is coming in uh so it's also touching an

137
00:08:42,719 --> 00:08:47,200
on internet area as it's it's a tunnel

138
00:08:45,040 --> 00:08:49,360
so that that's my understanding

139
00:08:47,200 --> 00:08:51,600
yeah this was about to say david and

140
00:08:49,360 --> 00:08:54,959
maxim everything which is to know

141
00:08:51,600 --> 00:08:55,519
by default is in interior now there is

142
00:08:54,959 --> 00:08:57,680
mask

143
00:08:55,519 --> 00:09:00,080
as well right so which is kind of that's

144
00:08:57,680 --> 00:09:02,079
kind of what i'm asking yeah

145
00:09:00,080 --> 00:09:03,200
so but it's not yet a working group

146
00:09:02,080 --> 00:09:06,320
document

147
00:09:03,200 --> 00:09:08,160
and we need to see what's inside

148
00:09:06,320 --> 00:09:09,519
one potentiality outcome of this

149
00:09:08,160 --> 00:09:11,279
presentation today

150
00:09:09,519 --> 00:09:12,880
and thinking over the mailing list is

151
00:09:11,279 --> 00:09:14,320
basically to move this to another

152
00:09:12,880 --> 00:09:16,560
working group right

153
00:09:14,320 --> 00:09:17,839
it's not adopted this is the first time

154
00:09:16,560 --> 00:09:20,640
so

155
00:09:17,839 --> 00:09:22,000
let's see what's inside okay thanks i

156
00:09:20,640 --> 00:09:23,760
was just genuinely curious

157
00:09:22,000 --> 00:09:25,600
and i'm excited to see the presentations

158
00:09:23,760 --> 00:09:28,000
because i i i mean

159
00:09:25,600 --> 00:09:29,920
as you know i am a mask enthusiast so

160
00:09:28,000 --> 00:09:31,600
i'm very much excited about this topic

161
00:09:29,920 --> 00:09:33,120
i was just very surprised to see it here

162
00:09:31,600 --> 00:09:35,120
i i almost personally missed it

163
00:09:33,120 --> 00:09:36,240
i wasn't expecting to see it here at all

164
00:09:35,120 --> 00:09:38,320
so yeah

165
00:09:36,240 --> 00:09:39,360
let's maybe continue the discussion in

166
00:09:38,320 --> 00:09:41,680
that slot then

167
00:09:39,360 --> 00:09:41,680
thank you

168
00:09:46,240 --> 00:09:52,240
great so with that if there's no

169
00:09:50,080 --> 00:09:54,800
more agenda bashing maybe we can move to

170
00:09:52,240 --> 00:09:54,800
the next slide

171
00:09:55,519 --> 00:10:01,680
so quick status update uh we had the

172
00:09:59,040 --> 00:10:03,920
two rfcs uh that had been published the

173
00:10:01,680 --> 00:10:06,319
discovery provisioning domains and data

174
00:10:03,920 --> 00:10:09,479
rfc 88.01

175
00:10:06,320 --> 00:10:10,959
and ip fragmentation considered fragile

176
00:10:09,480 --> 00:10:13,600
8900

177
00:10:10,959 --> 00:10:14,959
we also have the generic udp

178
00:10:13,600 --> 00:10:18,320
encapsulation

179
00:10:14,959 --> 00:10:22,079
which is at on at the isg

180
00:10:18,320 --> 00:10:25,120
uh in ada evaluation status

181
00:10:22,079 --> 00:10:29,199
all right so since we're a few

182
00:10:25,120 --> 00:10:29,200
uh eric yes you want to say something

183
00:10:29,440 --> 00:10:34,000
yeah just one thing about this generic

184
00:10:32,240 --> 00:10:36,720
vpn encapsulation

185
00:10:34,000 --> 00:10:38,560
so i sent some comments to tom erbert

186
00:10:36,720 --> 00:10:42,000
and other authors

187
00:10:38,560 --> 00:10:44,160
so they need to revise id to continue

188
00:10:42,000 --> 00:10:46,560
the process but i don't see tom here

189
00:10:44,160 --> 00:10:49,199
but yeah either way that he needs to do

190
00:10:46,560 --> 00:10:49,199
so few things

191
00:10:50,480 --> 00:10:54,000
yes fair enough thank you very much yes

192
00:10:52,240 --> 00:10:56,320
we saw your review and uh

193
00:10:54,000 --> 00:10:58,320
so we're waiting for feedback from from

194
00:10:56,320 --> 00:11:01,600
the authors

195
00:10:58,320 --> 00:11:02,240
so now uh moving on um a small update on

196
00:11:01,600 --> 00:11:07,279
on the stocks

197
00:11:02,240 --> 00:11:07,279
v6 vlad are you

198
00:11:12,839 --> 00:11:15,839
online

199
00:11:23,279 --> 00:11:29,839
i don't see him online

200
00:11:30,079 --> 00:11:35,439
okay so

201
00:11:33,060 --> 00:11:39,359
[Music]

202
00:11:35,440 --> 00:11:42,079
we did get well if he's not online

203
00:11:39,360 --> 00:11:43,440
i'm not going to go through the details

204
00:11:42,079 --> 00:11:47,040
of

205
00:11:43,440 --> 00:11:57,839
this update but wasim can you move

206
00:11:47,040 --> 00:11:57,839
to the next slide

207
00:11:58,720 --> 00:12:02,880
mason can you move to the next light

208
00:12:08,839 --> 00:12:11,839
please

209
00:12:19,040 --> 00:12:25,839
what's him

210
00:12:27,920 --> 00:12:33,599
can you go to the last slide of blood

211
00:12:31,200 --> 00:12:33,600
please

212
00:12:36,720 --> 00:12:41,200
here we can see your your screen now

213
00:12:38,639 --> 00:12:44,560
okay um

214
00:12:41,200 --> 00:12:53,040
can you hear me now yes we can hear you

215
00:12:44,560 --> 00:12:56,239
right here you go moving 11.

216
00:12:53,040 --> 00:13:00,079
right so uh vlad has

217
00:12:56,240 --> 00:13:02,399
made a great yeah small update

218
00:13:00,079 --> 00:13:04,399
and the adoption uh is still called the

219
00:13:02,399 --> 00:13:06,639
adoption call is still open

220
00:13:04,399 --> 00:13:08,480
we did see some some mild support for

221
00:13:06,639 --> 00:13:11,440
this but we would like to see

222
00:13:08,480 --> 00:13:13,440
a little more uh support as you recall

223
00:13:11,440 --> 00:13:16,160
this uh this slide this uh

224
00:13:13,440 --> 00:13:17,040
draft has been uh going on for quite a

225
00:13:16,160 --> 00:13:20,160
bit

226
00:13:17,040 --> 00:13:22,639
and uh vlad has already presented a few

227
00:13:20,160 --> 00:13:26,079
times he's had a positive feedback

228
00:13:22,639 --> 00:13:26,959
and also he's had um an implementation

229
00:13:26,079 --> 00:13:30,560
that he has

230
00:13:26,959 --> 00:13:32,000
he has already published so uh please uh

231
00:13:30,560 --> 00:13:35,119
if you can

232
00:13:32,000 --> 00:13:38,160
and if you agree uh send a message

233
00:13:35,120 --> 00:13:39,519
to the list to adopt this draft we would

234
00:13:38,160 --> 00:13:42,240
like to see that

235
00:13:39,519 --> 00:13:42,959
we are also planning to send it to sag

236
00:13:42,240 --> 00:13:46,079
uh

237
00:13:42,959 --> 00:13:48,479
sec dispatch and mask to

238
00:13:46,079 --> 00:13:49,519
let them know that the the draft is

239
00:13:48,480 --> 00:13:51,279
around

240
00:13:49,519 --> 00:13:55,040
and and get some more support so that we

241
00:13:51,279 --> 00:13:55,040
can adopt it and move it forward

242
00:13:58,240 --> 00:14:01,440
okay so since vlad is not here let's

243
00:14:00,800 --> 00:14:04,399
move

244
00:14:01,440 --> 00:14:05,120
any discussion on this to the list and

245
00:14:04,399 --> 00:14:07,839
we can

246
00:14:05,120 --> 00:14:10,079
move to the next presentation i guess

247
00:14:07,839 --> 00:14:10,079
yeah

248
00:14:11,600 --> 00:14:17,839
thanks so

249
00:14:15,360 --> 00:14:17,839
maxine

250
00:14:28,720 --> 00:14:36,160
maxim can you unmute yes

251
00:14:32,800 --> 00:14:36,479
okay can you hear me yes yeah okay thank

252
00:14:36,160 --> 00:14:39,519
you

253
00:14:36,480 --> 00:14:42,480
so um so yeah thank you for uh

254
00:14:39,519 --> 00:14:43,519
giving us the opportunity to present um

255
00:14:42,480 --> 00:14:45,040
our proposal for

256
00:14:43,519 --> 00:14:46,639
tunneling internet protocols inside

257
00:14:45,040 --> 00:14:48,639
quick um

258
00:14:46,639 --> 00:14:50,880
so this is joint work with olivier

259
00:14:48,639 --> 00:14:52,639
bellavonture and adi massputra so the

260
00:14:50,880 --> 00:14:55,760
google notice from ucluva

261
00:14:52,639 --> 00:14:59,440
and eddie must be traced from apple um

262
00:14:55,760 --> 00:15:02,959
next slide so

263
00:14:59,440 --> 00:15:08,079
our proposal is split in three documents

264
00:15:02,959 --> 00:15:08,079
which we will describe separately so

265
00:15:08,639 --> 00:15:13,199
first we will give an introduction to

266
00:15:11,040 --> 00:15:14,800
quick so that all participants are

267
00:15:13,199 --> 00:15:16,719
kind of on the same page a short

268
00:15:14,800 --> 00:15:18,800
introduction um

269
00:15:16,720 --> 00:15:20,399
too quick and then we will move on to

270
00:15:18,800 --> 00:15:22,560
describing the the main

271
00:15:20,399 --> 00:15:25,760
document which is quick tunnel and then

272
00:15:22,560 --> 00:15:29,040
two optimizations to our proposal

273
00:15:25,760 --> 00:15:33,040
next slide so

274
00:15:29,040 --> 00:15:34,800
um uh for for this um

275
00:15:33,040 --> 00:15:36,319
for this introduction too quick i have

276
00:15:34,800 --> 00:15:39,199
not taken all the

277
00:15:36,320 --> 00:15:40,240
the details uh of quick i've just picked

278
00:15:39,199 --> 00:15:43,758
a few

279
00:15:40,240 --> 00:15:47,279
relevant items that i think

280
00:15:43,759 --> 00:15:50,959
are interesting in the context of

281
00:15:47,279 --> 00:15:53,120
creating a tunnel so

282
00:15:50,959 --> 00:15:54,319
quick provides services that are

283
00:15:53,120 --> 00:15:58,000
equivalent to tcp

284
00:15:54,320 --> 00:16:01,519
and tls but is built on top udp

285
00:15:58,000 --> 00:16:04,560
it has a one rtt authenticate handshake

286
00:16:01,519 --> 00:16:06,000
mode by default but it can also do zero

287
00:16:04,560 --> 00:16:09,199
tt session resumption

288
00:16:06,000 --> 00:16:12,320
with some weakened security properties

289
00:16:09,199 --> 00:16:13,680
um and one key aspect of quick is that

290
00:16:12,320 --> 00:16:15,920
all application data is

291
00:16:13,680 --> 00:16:17,359
uh is encrypted and most of the control

292
00:16:15,920 --> 00:16:20,399
data is encrypted

293
00:16:17,360 --> 00:16:22,560
and those two things give

294
00:16:20,399 --> 00:16:24,399
some kind of immunity to most of the

295
00:16:22,560 --> 00:16:25,920
metabolic interference

296
00:16:24,399 --> 00:16:27,440
which is a very nice property for

297
00:16:25,920 --> 00:16:30,000
transport protocol

298
00:16:27,440 --> 00:16:30,720
it's also likely to pass through many

299
00:16:30,000 --> 00:16:33,920
networks

300
00:16:30,720 --> 00:16:37,839
as it's giving as it's

301
00:16:33,920 --> 00:16:40,240
being adapted for the web there are two

302
00:16:37,839 --> 00:16:41,759
ways of conveying application data in

303
00:16:40,240 --> 00:16:44,720
quick so

304
00:16:41,759 --> 00:16:47,199
there is one which is which are streams

305
00:16:44,720 --> 00:16:49,360
which are reliable in order

306
00:16:47,199 --> 00:16:50,880
either unidirectional bi-directional

307
00:16:49,360 --> 00:16:52,639
byte streams

308
00:16:50,880 --> 00:16:55,519
but there is also more there is

309
00:16:52,639 --> 00:16:58,000
datagrams which are unreliable message

310
00:16:55,519 --> 00:17:00,639
so it provides services equivalent to

311
00:16:58,000 --> 00:17:04,880
tcp and tls but also adds

312
00:17:00,639 --> 00:17:05,599
this datagram mode so given those

313
00:17:04,880 --> 00:17:08,880
properties

314
00:17:05,599 --> 00:17:13,119
quick seems like a good fit for

315
00:17:08,880 --> 00:17:14,079
an alternative to ipsec tls or even dtls

316
00:17:13,119 --> 00:17:17,678
tunnels

317
00:17:14,079 --> 00:17:20,559
next slide so let's go

318
00:17:17,679 --> 00:17:22,880
over our first mode of operation next

319
00:17:20,559 --> 00:17:24,319
slide

320
00:17:22,880 --> 00:17:26,640
so let's look at the reference

321
00:17:24,319 --> 00:17:29,520
environment of our proposal so

322
00:17:26,640 --> 00:17:31,679
we have a client that would like to

323
00:17:29,520 --> 00:17:34,240
reach a destination server

324
00:17:31,679 --> 00:17:35,840
and it's connected to one access network

325
00:17:34,240 --> 00:17:38,799
and it will use

326
00:17:35,840 --> 00:17:40,000
a concentrator to convey all its traffic

327
00:17:38,799 --> 00:17:43,120
over the access network

328
00:17:40,000 --> 00:17:44,080
next slide so to do so the client

329
00:17:43,120 --> 00:17:46,320
establishes

330
00:17:44,080 --> 00:17:48,000
a quick connection to the concentrator

331
00:17:46,320 --> 00:17:48,799
and forwards all its packet to the

332
00:17:48,000 --> 00:17:51,679
concentrator

333
00:17:48,799 --> 00:17:52,559
next slide then the concentrator

334
00:17:51,679 --> 00:17:54,000
forwards

335
00:17:52,559 --> 00:17:56,320
the client packets to the final

336
00:17:54,000 --> 00:17:56,799
destination and it also it also makes

337
00:17:56,320 --> 00:17:58,960
sure

338
00:17:56,799 --> 00:18:00,320
that the returning packets reaches the

339
00:17:58,960 --> 00:18:05,600
client

340
00:18:00,320 --> 00:18:09,200
next slide so let's look now at

341
00:18:05,600 --> 00:18:11,280
under let's look at a packet sequence

342
00:18:09,200 --> 00:18:13,520
diagram to to see what's going on to

343
00:18:11,280 --> 00:18:16,720
convey those packets

344
00:18:13,520 --> 00:18:19,480
at the quick level so first we have

345
00:18:16,720 --> 00:18:23,200
a quick handshake and we defined the

346
00:18:19,480 --> 00:18:26,320
qtlpn to identify our proposal

347
00:18:23,200 --> 00:18:27,280
and so as indicated by the the quick

348
00:18:26,320 --> 00:18:29,760
specification we

349
00:18:27,280 --> 00:18:33,280
the client put this alpn token to

350
00:18:29,760 --> 00:18:35,600
negotiate the application in its first

351
00:18:33,280 --> 00:18:36,799
packet to the to the concentrator and

352
00:18:35,600 --> 00:18:39,600
the concentrator

353
00:18:36,799 --> 00:18:41,200
eventually echoes this token to complete

354
00:18:39,600 --> 00:18:44,719
the negotiation so

355
00:18:41,200 --> 00:18:46,720
um we have still a quick handshake

356
00:18:44,720 --> 00:18:48,320
and then once the quick handshake is

357
00:18:46,720 --> 00:18:50,799
done the packets

358
00:18:48,320 --> 00:18:53,039
that the client would like to send to

359
00:18:50,799 --> 00:18:53,760
the concentrator are put inside diagram

360
00:18:53,039 --> 00:18:55,679
frames

361
00:18:53,760 --> 00:18:57,039
so you can see that packet a is put

362
00:18:55,679 --> 00:18:59,520
inside the datagram frame

363
00:18:57,039 --> 00:19:01,360
and this packet will be forwarded to the

364
00:18:59,520 --> 00:19:04,799
concentrator that will be forwarded by

365
00:19:01,360 --> 00:19:04,799
the concentrator to the server

366
00:19:05,039 --> 00:19:10,080
when returning packets arrive to the

367
00:19:07,840 --> 00:19:11,439
concentrator they are put back inside

368
00:19:10,080 --> 00:19:13,918
that everyone frame and sent to the

369
00:19:11,440 --> 00:19:16,240
client in this

370
00:19:13,919 --> 00:19:18,240
mode of operation we don't provide means

371
00:19:16,240 --> 00:19:20,640
of distinguishing

372
00:19:18,240 --> 00:19:23,600
the type of packet that is conveyed so

373
00:19:20,640 --> 00:19:26,720
we will we rely on out-of-band signaling

374
00:19:23,600 --> 00:19:30,320
which makes the proposal very simple

375
00:19:26,720 --> 00:19:32,400
next slide there is also

376
00:19:30,320 --> 00:19:34,159
another feature of the tunnel mode which

377
00:19:32,400 --> 00:19:37,600
is the ability to report

378
00:19:34,160 --> 00:19:40,640
access network availability so if we

379
00:19:37,600 --> 00:19:43,199
take our example our previous example uh

380
00:19:40,640 --> 00:19:45,919
in which we we send packet a

381
00:19:43,200 --> 00:19:47,280
after a quick handshake um no let's say

382
00:19:45,919 --> 00:19:50,160
that the client net

383
00:19:47,280 --> 00:19:52,480
the client notice that the network is

384
00:19:50,160 --> 00:19:54,640
unstable so

385
00:19:52,480 --> 00:19:58,240
when the network is becoming unstable

386
00:19:54,640 --> 00:19:58,240
the client has the ability to

387
00:19:58,480 --> 00:20:02,880
signal this to the concentrator using

388
00:20:00,640 --> 00:20:03,919
access report tlv which is a tlv we

389
00:20:02,880 --> 00:20:06,720
defined

390
00:20:03,919 --> 00:20:07,440
and so here in our example the client

391
00:20:06,720 --> 00:20:10,480
sends this

392
00:20:07,440 --> 00:20:12,559
access report tlv over a quick stream

393
00:20:10,480 --> 00:20:14,960
a uni-directional quick stream uh to

394
00:20:12,559 --> 00:20:17,520
indicate to indicate that the network

395
00:20:14,960 --> 00:20:19,440
is currently unstable and so the

396
00:20:17,520 --> 00:20:21,200
concentrator given that it has this

397
00:20:19,440 --> 00:20:23,760
signal is free to decide

398
00:20:21,200 --> 00:20:26,320
uh what to do when incoming packets

399
00:20:23,760 --> 00:20:30,240
arrive so we have incoming packet b

400
00:20:26,320 --> 00:20:32,559
um at this point it knows that the

401
00:20:30,240 --> 00:20:34,640
network is unstable it can either buffer

402
00:20:32,559 --> 00:20:36,720
the packet or drop back the packet

403
00:20:34,640 --> 00:20:38,559
but it knows that it has little value to

404
00:20:36,720 --> 00:20:39,520
send the packet over this quick tunnel

405
00:20:38,559 --> 00:20:42,639
connection

406
00:20:39,520 --> 00:20:44,879
when the network is back again the clan

407
00:20:42,640 --> 00:20:48,559
can signal this

408
00:20:44,880 --> 00:20:49,360
also and so it sends this access report

409
00:20:48,559 --> 00:20:52,559
tlv

410
00:20:49,360 --> 00:20:54,799
with the signal indicating that the um

411
00:20:52,559 --> 00:20:56,720
the network is back and here in our

412
00:20:54,799 --> 00:20:58,240
example the concentrator has buffered

413
00:20:56,720 --> 00:21:02,080
the packet and it can

414
00:20:58,240 --> 00:21:05,200
transmit the packets um

415
00:21:02,080 --> 00:21:08,559
next slide so so that's

416
00:21:05,200 --> 00:21:10,159
basically it for the the first mode um

417
00:21:08,559 --> 00:21:12,240
should we either stop here for

418
00:21:10,159 --> 00:21:17,840
clarification question or should we move

419
00:21:12,240 --> 00:21:17,840
on to the other mode

420
00:21:20,240 --> 00:21:24,400
uh if that's okay maybe maybe move to

421
00:21:22,400 --> 00:21:25,440
the other modes and then we can take all

422
00:21:24,400 --> 00:21:28,159
questions at the end

423
00:21:25,440 --> 00:21:28,159
please okay

424
00:21:29,120 --> 00:21:32,719
okay then uh now we are going to

425
00:21:31,120 --> 00:21:36,000
describe the tunnel session mode

426
00:21:32,720 --> 00:21:39,360
next slide so um

427
00:21:36,000 --> 00:21:41,200
the tunnel session mode um operates in

428
00:21:39,360 --> 00:21:44,479
a similar reference environment but this

429
00:21:41,200 --> 00:21:47,440
time we consider multi-ohm clients

430
00:21:44,480 --> 00:21:48,320
so a client that is attached to several

431
00:21:47,440 --> 00:21:50,720
access network

432
00:21:48,320 --> 00:21:52,240
so it could be a client with wi-fi and

433
00:21:50,720 --> 00:21:54,480
5g interfaces

434
00:21:52,240 --> 00:21:57,520
but it also it could also be a client

435
00:21:54,480 --> 00:22:00,400
with an ipv4 and an ipv6 stack

436
00:21:57,520 --> 00:22:00,879
so in this context the client has access

437
00:22:00,400 --> 00:22:03,360
to

438
00:22:00,880 --> 00:22:04,799
several networks as i said and you would

439
00:22:03,360 --> 00:22:08,080
like to leverage

440
00:22:04,799 --> 00:22:10,480
those access those those access networks

441
00:22:08,080 --> 00:22:13,760
for load sharing or failover for example

442
00:22:10,480 --> 00:22:16,320
next slide

443
00:22:13,760 --> 00:22:18,158
so to do so the client establish a

444
00:22:16,320 --> 00:22:21,120
separate quick tunnel connection

445
00:22:18,159 --> 00:22:21,760
over each of the access network and use

446
00:22:21,120 --> 00:22:24,239
them to

447
00:22:21,760 --> 00:22:26,799
send packets to the concentrator that's

448
00:22:24,240 --> 00:22:28,799
in the same way as before we forward

449
00:22:26,799 --> 00:22:31,840
them to the final destination

450
00:22:28,799 --> 00:22:33,440
so this is our proposal for

451
00:22:31,840 --> 00:22:35,039
the tunnel session is to use two

452
00:22:33,440 --> 00:22:38,640
separate connections

453
00:22:35,039 --> 00:22:40,320
um next slide but there is also

454
00:22:38,640 --> 00:22:42,640
something else that we could do which is

455
00:22:40,320 --> 00:22:45,678
establish an mp quick tunnel connection

456
00:22:42,640 --> 00:22:46,720
and use the two different sub subflows

457
00:22:45,679 --> 00:22:48,880
if you like or

458
00:22:46,720 --> 00:22:50,320
path to forward packets to the

459
00:22:48,880 --> 00:22:53,840
concentrator

460
00:22:50,320 --> 00:22:55,678
um but we prefer to describe the the

461
00:22:53,840 --> 00:22:58,158
previous solution which is the two

462
00:22:55,679 --> 00:22:59,280
uh separate quick connection uh because

463
00:22:58,159 --> 00:23:02,240
it's it's simpler

464
00:22:59,280 --> 00:23:02,879
and uh there is still a lot of work to

465
00:23:02,240 --> 00:23:05,440
do on mp

466
00:23:02,880 --> 00:23:07,280
quick for it to become a reality so next

467
00:23:05,440 --> 00:23:10,559
slide

468
00:23:07,280 --> 00:23:11,600
so let's look at those um two separate

469
00:23:10,559 --> 00:23:14,240
connections

470
00:23:11,600 --> 00:23:15,120
um solutions so the session the tunnel

471
00:23:14,240 --> 00:23:17,120
session mode

472
00:23:15,120 --> 00:23:18,559
allows to group them in a not in a

473
00:23:17,120 --> 00:23:22,719
logical session

474
00:23:18,559 --> 00:23:23,440
so um in our example we can see a green

475
00:23:22,720 --> 00:23:27,840
connection

476
00:23:23,440 --> 00:23:29,600
a and a b and um blue connection b

477
00:23:27,840 --> 00:23:31,600
so let's say that the client has

478
00:23:29,600 --> 00:23:32,240
established the the green connection

479
00:23:31,600 --> 00:23:35,520
first

480
00:23:32,240 --> 00:23:36,000
and it it has access to another access

481
00:23:35,520 --> 00:23:38,080
network

482
00:23:36,000 --> 00:23:39,120
and establish the connection the blue

483
00:23:38,080 --> 00:23:42,799
connection

484
00:23:39,120 --> 00:23:45,918
later it can use messages that we define

485
00:23:42,799 --> 00:23:48,000
in the draft to request

486
00:23:45,919 --> 00:23:50,080
a new session from the concentrator and

487
00:23:48,000 --> 00:23:51,440
associate the blue connection to this

488
00:23:50,080 --> 00:23:54,879
very same session

489
00:23:51,440 --> 00:23:57,440
and what this allows is to um

490
00:23:54,880 --> 00:23:58,240
it allows the concentrator to do packet

491
00:23:57,440 --> 00:23:59,919
reordering

492
00:23:58,240 --> 00:24:01,840
across the connections because it knows

493
00:23:59,919 --> 00:24:05,840
that those two quick tunnel connections

494
00:24:01,840 --> 00:24:05,840
are belonging to the same session

495
00:24:06,000 --> 00:24:12,880
next slide so to

496
00:24:09,440 --> 00:24:16,799
perform on or allow rather the packet

497
00:24:12,880 --> 00:24:16,799
reordering we define a slightly

498
00:24:17,120 --> 00:24:21,918
a slightly more complex encoding of the

499
00:24:19,360 --> 00:24:25,120
packet inside the quick diagram frame

500
00:24:21,919 --> 00:24:26,640
which also allows to identify um

501
00:24:25,120 --> 00:24:29,039
the type of packet that is being

502
00:24:26,640 --> 00:24:32,559
conveyed so here we can

503
00:24:29,039 --> 00:24:33,679
identify uh layer 3 packets or even

504
00:24:32,559 --> 00:24:38,399
layer two packets

505
00:24:33,679 --> 00:24:41,520
as um the the first the first 16 bits

506
00:24:38,400 --> 00:24:44,000
of uh this encoding is the protocol type

507
00:24:41,520 --> 00:24:45,039
uh as defined in the other type minor

508
00:24:44,000 --> 00:24:49,679
registry so

509
00:24:45,039 --> 00:24:51,600
we can identify any network level

510
00:24:49,679 --> 00:24:53,600
packets but we can also identify an

511
00:24:51,600 --> 00:24:55,279
ethernet frame itself by using

512
00:24:53,600 --> 00:24:57,199
a transparent ethernet bridging for

513
00:24:55,279 --> 00:24:59,279
example um

514
00:24:57,200 --> 00:25:00,880
so this is the first field of the of

515
00:24:59,279 --> 00:25:03,279
this encoding and then the

516
00:25:00,880 --> 00:25:04,480
the second 16-bit field is an opaque

517
00:25:03,279 --> 00:25:07,200
value

518
00:25:04,480 --> 00:25:09,120
which can be used for reordering which

519
00:25:07,200 --> 00:25:11,279
we call the packet tag

520
00:25:09,120 --> 00:25:14,000
we will see an example with this on the

521
00:25:11,279 --> 00:25:17,039
next slide next slide please

522
00:25:14,000 --> 00:25:19,200
um so using those

523
00:25:17,039 --> 00:25:20,960
sessions and using this packet tag the

524
00:25:19,200 --> 00:25:23,200
client can for example if

525
00:25:20,960 --> 00:25:24,480
the client want to send multiple packet

526
00:25:23,200 --> 00:25:28,480
to the constraint reader

527
00:25:24,480 --> 00:25:31,360
it can leverage this packet tag to

528
00:25:28,480 --> 00:25:32,559
encode the transmission sequence or for

529
00:25:31,360 --> 00:25:35,360
example a timestamp

530
00:25:32,559 --> 00:25:36,480
which allows the concentrator to do

531
00:25:35,360 --> 00:25:38,719
reordering across

532
00:25:36,480 --> 00:25:39,919
the tunnel connection so here it sends

533
00:25:38,720 --> 00:25:43,039
packet a with

534
00:25:39,919 --> 00:25:44,400
tag one and then packet b with tag 2 on

535
00:25:43,039 --> 00:25:46,320
the

536
00:25:44,400 --> 00:25:48,559
on the blue connection and then package

537
00:25:46,320 --> 00:25:52,879
c with tag 3.

538
00:25:48,559 --> 00:25:52,879
then the concentrator is free to decide

539
00:25:53,120 --> 00:25:57,760
the size of the reordering window how

540
00:25:55,840 --> 00:25:59,760
much time is willing to spend before

541
00:25:57,760 --> 00:26:01,200
waiting for a packet to arrive but it

542
00:25:59,760 --> 00:26:03,679
has the tools

543
00:26:01,200 --> 00:26:05,200
to perform this rotary and so it can put

544
00:26:03,679 --> 00:26:07,440
back the package in sync with in

545
00:26:05,200 --> 00:26:11,520
sequence as we can see

546
00:26:07,440 --> 00:26:12,640
next slide uh so so this is it for the

547
00:26:11,520 --> 00:26:14,960
tunnel session mode

548
00:26:12,640 --> 00:26:16,960
um now we will look at the last mode of

549
00:26:14,960 --> 00:26:20,720
operation which is the stream mode

550
00:26:16,960 --> 00:26:22,799
next slide um

551
00:26:20,720 --> 00:26:24,400
and i know something that's probably

552
00:26:22,799 --> 00:26:26,559
come to your mind is that

553
00:26:24,400 --> 00:26:27,440
those two approaches that we've seen

554
00:26:26,559 --> 00:26:30,158
have

555
00:26:27,440 --> 00:26:31,360
one key advantage which is to be able to

556
00:26:30,159 --> 00:26:34,240
convey many types

557
00:26:31,360 --> 00:26:35,600
of protocols but one drawback which is

558
00:26:34,240 --> 00:26:38,880
the bite over it in

559
00:26:35,600 --> 00:26:40,480
it introduce and in the cases of tcp

560
00:26:38,880 --> 00:26:43,760
byte streams this can be

561
00:26:40,480 --> 00:26:45,039
quite high next slide so here we have

562
00:26:43,760 --> 00:26:48,080
this

563
00:26:45,039 --> 00:26:49,919
tcp packet actually an ip packet

564
00:26:48,080 --> 00:26:51,199
containing a tcp packet that we would

565
00:26:49,919 --> 00:26:53,679
like to

566
00:26:51,200 --> 00:26:55,279
to convey over the the tunnel if we are

567
00:26:53,679 --> 00:26:57,440
using the tunnel session mode we have to

568
00:26:55,279 --> 00:27:00,880
add those two fields before the packet

569
00:26:57,440 --> 00:27:01,919
next slide then put it inside the

570
00:27:00,880 --> 00:27:05,200
datagram frame

571
00:27:01,919 --> 00:27:06,000
next slide and then put this diagram

572
00:27:05,200 --> 00:27:09,360
frame inside a quick

573
00:27:06,000 --> 00:27:11,679
packet and so um if we're

574
00:27:09,360 --> 00:27:12,719
um dealing with a lot of traffic this

575
00:27:11,679 --> 00:27:16,240
over it can be

576
00:27:12,720 --> 00:27:18,000
significant next slide so what we

577
00:27:16,240 --> 00:27:19,200
propose with this with the stream mode

578
00:27:18,000 --> 00:27:21,919
is to change a bit

579
00:27:19,200 --> 00:27:23,679
the the paradigm on which we operate and

580
00:27:21,919 --> 00:27:26,080
to work at the byte stream level

581
00:27:23,679 --> 00:27:28,240
and provide a tcp connection to stream

582
00:27:26,080 --> 00:27:29,918
to quick stream mapping

583
00:27:28,240 --> 00:27:31,840
so let's look at how it works with an

584
00:27:29,919 --> 00:27:35,120
example

585
00:27:31,840 --> 00:27:38,639
so here we have the client um

586
00:27:35,120 --> 00:27:41,600
that sends so so the client

587
00:27:38,640 --> 00:27:42,320
that would like to establish uh tcp

588
00:27:41,600 --> 00:27:44,799
connection

589
00:27:42,320 --> 00:27:46,559
to the final destination will use

590
00:27:44,799 --> 00:27:49,279
messages we've defined in the draft

591
00:27:46,559 --> 00:27:50,639
to open a new tcp connection from the

592
00:27:49,279 --> 00:27:54,159
concentrator so

593
00:27:50,640 --> 00:27:56,799
it sends this tcp connect tlv on

594
00:27:54,159 --> 00:27:57,200
a new stream to the concentrator and

595
00:27:56,799 --> 00:27:59,200
this

596
00:27:57,200 --> 00:28:02,399
will get translated by the concentrator

597
00:27:59,200 --> 00:28:04,960
to a syn packet next slide

598
00:28:02,399 --> 00:28:06,959
when the synap comes back the

599
00:28:04,960 --> 00:28:07,679
concentrator also does the translation

600
00:28:06,960 --> 00:28:11,039
in reverse

601
00:28:07,679 --> 00:28:13,600
and sends a message tcp connect ok

602
00:28:11,039 --> 00:28:15,039
to the client to indicate that the

603
00:28:13,600 --> 00:28:16,080
connection has been successfully

604
00:28:15,039 --> 00:28:19,279
established we also

605
00:28:16,080 --> 00:28:22,960
provide tlvs for uh all other means

606
00:28:19,279 --> 00:28:24,399
of uh so if the the connection doesn't

607
00:28:22,960 --> 00:28:26,320
succeed if the connection solution

608
00:28:24,399 --> 00:28:29,600
doesn't succeed we also provide

609
00:28:26,320 --> 00:28:31,439
um a tlvs for that uh so after

610
00:28:29,600 --> 00:28:33,360
the connection has been established the

611
00:28:31,440 --> 00:28:34,720
byte stream the tcp by stream is simply

612
00:28:33,360 --> 00:28:38,158
copied over

613
00:28:34,720 --> 00:28:39,919
um the the quick stream so

614
00:28:38,159 --> 00:28:41,679
we can see the client would like to send

615
00:28:39,919 --> 00:28:42,320
some some data over the byte stream and

616
00:28:41,679 --> 00:28:44,880
sends it

617
00:28:42,320 --> 00:28:45,760
in the stream it gets copied to the tcp

618
00:28:44,880 --> 00:28:48,559
connection

619
00:28:45,760 --> 00:28:49,039
and in the same way returning data from

620
00:28:48,559 --> 00:28:51,039
the

621
00:28:49,039 --> 00:28:52,960
final destination to the concentrator

622
00:28:51,039 --> 00:28:57,520
over this tcp connection gets

623
00:28:52,960 --> 00:28:57,520
copied to the quick stream next slide

624
00:28:58,640 --> 00:29:04,880
in the same way we also provide

625
00:29:02,080 --> 00:29:06,799
translation for closure events so when

626
00:29:04,880 --> 00:29:09,919
the tcp connection

627
00:29:06,799 --> 00:29:13,039
closes with a fin packet we close

628
00:29:09,919 --> 00:29:14,720
one way of the stream and then when the

629
00:29:13,039 --> 00:29:16,240
when the client would like to close the

630
00:29:14,720 --> 00:29:19,520
the connection it closes

631
00:29:16,240 --> 00:29:22,640
its own um way of the of the stream and

632
00:29:19,520 --> 00:29:26,080
this gets translated to a thin packet

633
00:29:22,640 --> 00:29:29,760
next slide so so this was basically

634
00:29:26,080 --> 00:29:32,480
it for the the stream mode um and

635
00:29:29,760 --> 00:29:33,360
this leads us to the conclusion so we've

636
00:29:32,480 --> 00:29:34,880
seen that

637
00:29:33,360 --> 00:29:36,479
quick can be used to convey many

638
00:29:34,880 --> 00:29:38,960
networks protocol

639
00:29:36,480 --> 00:29:40,000
um we think that there is an interest in

640
00:29:38,960 --> 00:29:43,600
considering multi-ohm

641
00:29:40,000 --> 00:29:45,600
clients from the start of uh the

642
00:29:43,600 --> 00:29:47,120
from the start of the work of on a

643
00:29:45,600 --> 00:29:50,399
tunneling protocol

644
00:29:47,120 --> 00:29:52,239
and to do um and so to to

645
00:29:50,399 --> 00:29:53,760
solve this problem we defined an

646
00:29:52,240 --> 00:29:55,840
application protocol

647
00:29:53,760 --> 00:29:57,360
to convey internet protocols inside

648
00:29:55,840 --> 00:30:00,240
quick and it splits in those

649
00:29:57,360 --> 00:30:03,199
three documents and there exists already

650
00:30:00,240 --> 00:30:05,120
a prototype as part of the pique paper

651
00:30:03,200 --> 00:30:06,720
but we're working on a more fully

652
00:30:05,120 --> 00:30:09,760
fledged prototype that we

653
00:30:06,720 --> 00:30:13,120
hope to be experimenting with

654
00:30:09,760 --> 00:30:15,520
soon and probably show you some results

655
00:30:13,120 --> 00:30:16,959
at some point um of course contributions

656
00:30:15,520 --> 00:30:17,760
and correlations are welcome on the

657
00:30:16,960 --> 00:30:20,000
github

658
00:30:17,760 --> 00:30:22,240
but maybe let's take a question from the

659
00:30:20,000 --> 00:30:24,960
participants first

660
00:30:22,240 --> 00:30:26,399
yes thank you very much max uh so we

661
00:30:24,960 --> 00:30:28,399
have a couple of questions we have five

662
00:30:26,399 --> 00:30:31,760
minutes for questions so

663
00:30:28,399 --> 00:30:33,120
david actually may be thinking to wait

664
00:30:31,760 --> 00:30:34,840
until the end of the slides for the

665
00:30:33,120 --> 00:30:37,039
questions i just wanted to get in the

666
00:30:34,840 --> 00:30:40,158
queue

667
00:30:37,039 --> 00:30:41,200
or was this last slide oh this is the

668
00:30:40,159 --> 00:30:44,240
last slide

669
00:30:41,200 --> 00:30:45,120
this is the last one oh okay great sorry

670
00:30:44,240 --> 00:30:47,120
i was uh

671
00:30:45,120 --> 00:30:48,879
looking ahead on the thing and like the

672
00:30:47,120 --> 00:30:51,199
you have a next slide in your

673
00:30:48,880 --> 00:30:52,880
deck that i find somewhat amusing but

674
00:30:51,200 --> 00:30:56,320
that's what i was going to ask about

675
00:30:52,880 --> 00:30:59,760
um so uh this is david kanazi

676
00:30:56,320 --> 00:31:02,960
uh mask enthusiast this

677
00:30:59,760 --> 00:31:05,919
sounds a lot like mask

678
00:31:02,960 --> 00:31:06,399
to the point where it pretty much is

679
00:31:05,919 --> 00:31:09,600
mask

680
00:31:06,399 --> 00:31:11,360
so take like the entire um like

681
00:31:09,600 --> 00:31:14,559
especially your stream mode

682
00:31:11,360 --> 00:31:16,158
where you present it as something new

683
00:31:14,559 --> 00:31:18,240
uh if you look at it from the

684
00:31:16,159 --> 00:31:20,559
perspective of an ipsec tunnel

685
00:31:18,240 --> 00:31:21,919
yes this is new and useful absolutely uh

686
00:31:20,559 --> 00:31:23,440
it is useful to

687
00:31:21,919 --> 00:31:24,720
have a stream level abstraction instead

688
00:31:23,440 --> 00:31:26,399
of a packet level abstraction i'm

689
00:31:24,720 --> 00:31:28,880
totally with you there

690
00:31:26,399 --> 00:31:31,360
except we already have this it's called

691
00:31:28,880 --> 00:31:33,120
the http 3 connect method it's already

692
00:31:31,360 --> 00:31:36,479
completely done

693
00:31:33,120 --> 00:31:37,360
um and so i don't understand why there's

694
00:31:36,480 --> 00:31:39,840
a new draft

695
00:31:37,360 --> 00:31:42,479
that like does a bunch of work to do the

696
00:31:39,840 --> 00:31:45,439
same thing so can you clarify

697
00:31:42,480 --> 00:31:47,120
what's the benefit of this over systems

698
00:31:45,440 --> 00:31:50,480
so so i have two things to bring

699
00:31:47,120 --> 00:31:53,600
uh so first um um

700
00:31:50,480 --> 00:31:55,919
i i'm not sure if you were offended by

701
00:31:53,600 --> 00:31:57,439
the i didn't say new but that was not my

702
00:31:55,919 --> 00:31:59,360
intention oh no no sorry i'm not

703
00:31:57,440 --> 00:32:01,519
offended the draft okay

704
00:31:59,360 --> 00:32:02,559
the draft quick tunnel exists for a long

705
00:32:01,519 --> 00:32:06,320
time um

706
00:32:02,559 --> 00:32:08,720
it's kind of uh it it arrived nearly

707
00:32:06,320 --> 00:32:09,678
uh when when the first mass proposal uh

708
00:32:08,720 --> 00:32:13,679
arrived uh

709
00:32:09,679 --> 00:32:16,000
also but yeah let's look now at the

710
00:32:13,679 --> 00:32:17,600
real technical things so yeah the the

711
00:32:16,000 --> 00:32:20,559
key difference i see is that

712
00:32:17,600 --> 00:32:21,279
the mask is defined at a h3 uh you know

713
00:32:20,559 --> 00:32:24,240
that of course

714
00:32:21,279 --> 00:32:25,440
and uh in our case we define a simple

715
00:32:24,240 --> 00:32:27,840
binary protocol

716
00:32:25,440 --> 00:32:30,080
on top of quick and i think the two have

717
00:32:27,840 --> 00:32:32,559
advantages

718
00:32:30,080 --> 00:32:33,360
so what are the advantages of the simple

719
00:32:32,559 --> 00:32:35,200
or of the

720
00:32:33,360 --> 00:32:37,918
simple binary protocol because i'm not

721
00:32:35,200 --> 00:32:40,880
convinced that this is simpler than h3

722
00:32:37,919 --> 00:32:42,000
yeah so it's simple in the sense that

723
00:32:40,880 --> 00:32:43,760
you don't need an h3

724
00:32:42,000 --> 00:32:46,240
stack but of course you will have to

725
00:32:43,760 --> 00:32:47,919
implement the protocol

726
00:32:46,240 --> 00:32:49,679
currently in the document i find it

727
00:32:47,919 --> 00:32:54,080
simple but of course

728
00:32:49,679 --> 00:32:54,080
this is to the appreciation of each one

729
00:32:54,240 --> 00:32:59,600
um but it's like it's not an order of

730
00:32:57,200 --> 00:33:01,279
magnitude simpler than h3 so yeah it is

731
00:32:59,600 --> 00:33:04,480
simple i'm not denying that it is

732
00:33:01,279 --> 00:33:06,480
isn't but um i so so i

733
00:33:04,480 --> 00:33:07,519
like i totally agree you like you have a

734
00:33:06,480 --> 00:33:09,200
different thing and you

735
00:33:07,519 --> 00:33:10,880
if it were just your proposal it would

736
00:33:09,200 --> 00:33:12,799
make sense but why

737
00:33:10,880 --> 00:33:15,679
this proposal when we already have

738
00:33:12,799 --> 00:33:18,399
something that works

739
00:33:15,679 --> 00:33:21,039
so the other thing that i see is is the

740
00:33:18,399 --> 00:33:23,360
second item on the slide is that

741
00:33:21,039 --> 00:33:25,360
we think that there is an interest in

742
00:33:23,360 --> 00:33:27,519
considering multiple clients and

743
00:33:25,360 --> 00:33:29,360
from what i i got from the charter this

744
00:33:27,519 --> 00:33:30,159
is currently ruled out from the charter

745
00:33:29,360 --> 00:33:33,519
of the off mask

746
00:33:30,159 --> 00:33:36,799
right so from the uh and uh

747
00:33:33,519 --> 00:33:39,120
the mask chairs can uh well eric is in

748
00:33:36,799 --> 00:33:40,158
the queue so i'll all defer to him on

749
00:33:39,120 --> 00:33:42,479
that point but the

750
00:33:40,159 --> 00:33:43,760
when we wrote the charter for mask the

751
00:33:42,480 --> 00:33:46,880
idea was

752
00:33:43,760 --> 00:33:48,559
start simple and build up so you know

753
00:33:46,880 --> 00:33:50,240
with in protocol design in general you

754
00:33:48,559 --> 00:33:51,760
don't want to tackle 17 different

755
00:33:50,240 --> 00:33:53,440
problems at the same time because that

756
00:33:51,760 --> 00:33:55,519
makes it almost impossible

757
00:33:53,440 --> 00:33:57,200
so what we decided with mask is we

758
00:33:55,519 --> 00:33:59,919
started with connect udp

759
00:33:57,200 --> 00:34:01,760
so it allows you to forward udp packets

760
00:33:59,919 --> 00:34:03,360
just like connect does for tcp it does

761
00:34:01,760 --> 00:34:04,640
udp so it's simple and that's what we're

762
00:34:03,360 --> 00:34:06,080
working on right now

763
00:34:04,640 --> 00:34:08,079
the next thing we're going to do is

764
00:34:06,080 --> 00:34:09,359
going to be connect network or connect

765
00:34:08,079 --> 00:34:12,800
ip however you want to call it

766
00:34:09,359 --> 00:34:16,480
a similar thing at the ip layer and

767
00:34:12,800 --> 00:34:18,560
i totally think that once those are done

768
00:34:16,480 --> 00:34:20,560
we could totally bring in multi-path to

769
00:34:18,560 --> 00:34:22,239
mask if like we have clear you know use

770
00:34:20,560 --> 00:34:24,799
cases and benefits and i think

771
00:34:22,239 --> 00:34:26,239
that's like a natural progression uh

772
00:34:24,800 --> 00:34:27,520
instead of trying to do all the things

773
00:34:26,239 --> 00:34:29,359
at the same time because there's kind of

774
00:34:27,520 --> 00:34:30,639
the dependencies where you know when you

775
00:34:29,359 --> 00:34:31,440
change one you have to redesign the

776
00:34:30,639 --> 00:34:33,919
other

777
00:34:31,440 --> 00:34:35,040
and uh and i think you know the in these

778
00:34:33,918 --> 00:34:36,638
ideas of like

779
00:34:35,040 --> 00:34:39,199
having those multiple paths and maybe

780
00:34:36,639 --> 00:34:40,960
making mask uh path aware or even you

781
00:34:39,199 --> 00:34:42,078
know quick pathway which is

782
00:34:40,960 --> 00:34:44,960
discussions that we're having in the

783
00:34:42,079 --> 00:34:48,320
quick working group is useful

784
00:34:44,960 --> 00:34:51,359
um i'm not sure that's a good reason

785
00:34:48,320 --> 00:34:52,639
to like kind of reinvent the entire

786
00:34:51,359 --> 00:34:54,319
application layer

787
00:34:52,639 --> 00:34:55,919
just because mass doesn't have

788
00:34:54,320 --> 00:34:57,599
everything we need today

789
00:34:55,918 --> 00:34:59,359
i think it might be worth it to bring

790
00:34:57,599 --> 00:35:02,480
this energy to mask

791
00:34:59,359 --> 00:35:04,319
and see how we could fit um every all of

792
00:35:02,480 --> 00:35:06,800
your use cases and needs

793
00:35:04,320 --> 00:35:07,599
into mask and i do realize i'm really

794
00:35:06,800 --> 00:35:09,200
sounding like

795
00:35:07,599 --> 00:35:11,760
i'm trying to sell masks here but it's

796
00:35:09,200 --> 00:35:13,279
just it's just weird to try to reinvent

797
00:35:11,760 --> 00:35:15,119
something when we have something there

798
00:35:13,280 --> 00:35:16,000
so i guess that's my only point so maybe

799
00:35:15,119 --> 00:35:19,599
i hope you can come to

800
00:35:16,000 --> 00:35:21,200
mask tomorrow okay no i got your points

801
00:35:19,599 --> 00:35:24,480
uh you were not selling mask

802
00:35:21,200 --> 00:35:31,839
you you made reasonable points of course

803
00:35:24,480 --> 00:35:31,839
awesome thank you

804
00:35:38,960 --> 00:35:45,119
all right can i go no

805
00:35:42,480 --> 00:35:46,480
all right yeah um so i'm very much

806
00:35:45,119 --> 00:35:49,599
accurate what david was saying

807
00:35:46,480 --> 00:35:50,800
um i think you know just for this group

808
00:35:49,599 --> 00:35:52,160
as we are considering it i think this

809
00:35:50,800 --> 00:35:56,160
should absolutely not be done

810
00:35:52,160 --> 00:35:57,440
in interior um because it's duplicating

811
00:35:56,160 --> 00:35:59,118
what is already in the charter of

812
00:35:57,440 --> 00:36:00,880
another working group and we don't want

813
00:35:59,119 --> 00:36:03,440
those separate efforts

814
00:36:00,880 --> 00:36:04,720
um mask is already building proxying and

815
00:36:03,440 --> 00:36:07,200
tunneling over quick

816
00:36:04,720 --> 00:36:08,160
and so we should go there have the

817
00:36:07,200 --> 00:36:10,000
conversation there

818
00:36:08,160 --> 00:36:12,160
and if there are things that we don't

819
00:36:10,000 --> 00:36:13,839
think are correctly in the charter

820
00:36:12,160 --> 00:36:15,759
you can have a rechartering discussion

821
00:36:13,839 --> 00:36:17,680
and have the discussion

822
00:36:15,760 --> 00:36:19,040
that goes up to the isg and you know

823
00:36:17,680 --> 00:36:20,560
goes through all of that

824
00:36:19,040 --> 00:36:23,359
but don't just duplicate the work

825
00:36:20,560 --> 00:36:26,160
because it doesn't fit into the

826
00:36:23,359 --> 00:36:28,078
charter as it is today um as people have

827
00:36:26,160 --> 00:36:29,598
mentioned already

828
00:36:28,079 --> 00:36:31,760
you know the stream mode it's identical

829
00:36:29,599 --> 00:36:33,040
to connect when you looked at the draft

830
00:36:31,760 --> 00:36:34,320
it essentially does connect but it

831
00:36:33,040 --> 00:36:35,599
doesn't do things like being able to

832
00:36:34,320 --> 00:36:37,599
connect with a name

833
00:36:35,599 --> 00:36:39,359
so it's like a just kind of a lesser

834
00:36:37,599 --> 00:36:42,160
version of connect

835
00:36:39,359 --> 00:36:44,799
um and i think these points here about

836
00:36:42,160 --> 00:36:48,000
saying that h3 is not

837
00:36:44,800 --> 00:36:49,200
uh too much overhead or it won't support

838
00:36:48,000 --> 00:36:50,880
some of these other features i don't

839
00:36:49,200 --> 00:36:54,560
think that's true

840
00:36:50,880 --> 00:36:55,359
um and particularly like recently i've

841
00:36:54,560 --> 00:36:58,240
been working

842
00:36:55,359 --> 00:36:59,440
on for doing mask interop a very very

843
00:36:58,240 --> 00:37:01,359
minimal version

844
00:36:59,440 --> 00:37:02,800
of h3 that you can run that doesn't have

845
00:37:01,359 --> 00:37:04,720
to do other things if you only want to

846
00:37:02,800 --> 00:37:07,760
use it for proxying and tunneling

847
00:37:04,720 --> 00:37:09,040
it can be extremely simple and maybe it

848
00:37:07,760 --> 00:37:11,520
would be worth

849
00:37:09,040 --> 00:37:12,800
kind of going through the exercise of

850
00:37:11,520 --> 00:37:14,480
writing down a

851
00:37:12,800 --> 00:37:16,640
minimal guide for how to do that maybe

852
00:37:14,480 --> 00:37:18,320
that's a draft that's informational

853
00:37:16,640 --> 00:37:19,839
but you know if you want help kind of

854
00:37:18,320 --> 00:37:22,720
figure out how to make this

855
00:37:19,839 --> 00:37:25,520
very thin and lightweight it is possible

856
00:37:22,720 --> 00:37:25,520
we've already done it

857
00:37:27,680 --> 00:37:32,720
okay thank you okay thanks

858
00:37:34,839 --> 00:37:39,119
eric

859
00:37:36,240 --> 00:37:39,118
yeah thank you

860
00:37:39,599 --> 00:37:44,480
so to make a long story short it looks

861
00:37:42,560 --> 00:37:46,160
to me that this proposal that are smart

862
00:37:44,480 --> 00:37:49,440
and everything don't take me wrong

863
00:37:46,160 --> 00:37:52,078
are not really the usual kind of tunnels

864
00:37:49,440 --> 00:37:52,560
so and it looks like pretty much like a

865
00:37:52,079 --> 00:37:56,000
mask

866
00:37:52,560 --> 00:37:59,599
thing so my current thinking

867
00:37:56,000 --> 00:38:00,560
is to get a meeting with the interior

868
00:37:59,599 --> 00:38:04,160
chairs

869
00:38:00,560 --> 00:38:05,520
and the mask chairs maybe not next week

870
00:38:04,160 --> 00:38:07,359
because it's thanksgiving

871
00:38:05,520 --> 00:38:10,240
and the responsibility for those two

872
00:38:07,359 --> 00:38:12,078
groups and see what we do but honestly

873
00:38:10,240 --> 00:38:13,839
right now it looks like it's really a

874
00:38:12,079 --> 00:38:15,760
mask document and could be used by the

875
00:38:13,839 --> 00:38:17,759
mass cooking group as an input

876
00:38:15,760 --> 00:38:18,800
again nice piece of work but i don't

877
00:38:17,760 --> 00:38:22,240
think now

878
00:38:18,800 --> 00:38:25,920
that it's the right place to be interior

879
00:38:22,240 --> 00:38:28,959
and washing and gc

880
00:38:25,920 --> 00:38:31,119
and if the people in the queue don't

881
00:38:28,960 --> 00:38:32,000
disagree we may want to stop the queue

882
00:38:31,119 --> 00:38:33,920
here

883
00:38:32,000 --> 00:38:35,680
just to give times to other drafts but

884
00:38:33,920 --> 00:38:38,160
again it's up to you and to the people

885
00:38:35,680 --> 00:38:38,160
in the queue

886
00:38:39,839 --> 00:38:44,880
yes indeed i'm looking at the time and

887
00:38:43,359 --> 00:38:46,640
we have we still have a few

888
00:38:44,880 --> 00:38:48,560
presentations so

889
00:38:46,640 --> 00:38:50,319
if you have a point that you want to

890
00:38:48,560 --> 00:38:52,720
make very quickly

891
00:38:50,320 --> 00:38:54,880
please go ahead we're stopping the queue

892
00:38:52,720 --> 00:38:58,000
but if it's a long discussion

893
00:38:54,880 --> 00:39:00,240
we are going to take it to the list so

894
00:38:58,000 --> 00:39:02,560
christine do you have something you want

895
00:39:00,240 --> 00:39:02,560
to add

896
00:39:06,640 --> 00:39:11,040
i pretty much agree with eric said and i

897
00:39:09,680 --> 00:39:13,839
don't have much to add

898
00:39:11,040 --> 00:39:14,560
just to say that several of the points

899
00:39:13,839 --> 00:39:17,200
not just

900
00:39:14,560 --> 00:39:18,160
the the multi-pass part but the

901
00:39:17,200 --> 00:39:19,680
connecting

902
00:39:18,160 --> 00:39:22,319
several quick connection to the same

903
00:39:19,680 --> 00:39:23,919
server it's a much harder problem than

904
00:39:22,320 --> 00:39:27,119
what is presented here

905
00:39:23,920 --> 00:39:29,200
if you consider server pools so it's

906
00:39:27,119 --> 00:39:30,400
much better to tweet that inside mask or

907
00:39:29,200 --> 00:39:32,879
inside quick

908
00:39:30,400 --> 00:39:34,000
than to try to do it on the side and

909
00:39:32,880 --> 00:39:35,760
it's

910
00:39:34,000 --> 00:39:37,839
it's really i mean i agree with eric

911
00:39:35,760 --> 00:39:43,839
bonds this belonging mask doesn't matter

912
00:39:37,839 --> 00:39:43,839
guys thanks uh eric

913
00:39:45,680 --> 00:39:49,040
i don't wanna reiterate everything that

914
00:39:47,920 --> 00:39:52,160
was said although i

915
00:39:49,040 --> 00:39:53,599
generally agree with it um i think

916
00:39:52,160 --> 00:39:56,319
there was some discussion about this

917
00:39:53,599 --> 00:39:58,160
last march on the mask mailing list um

918
00:39:56,320 --> 00:40:00,240
and and i think the the reception was

919
00:39:58,160 --> 00:40:01,920
generally that that yeah this kind of

920
00:40:00,240 --> 00:40:02,959
thing is something that that mask is

921
00:40:01,920 --> 00:40:04,800
looking at so

922
00:40:02,960 --> 00:40:06,480
i would encourage you to come there and

923
00:40:04,800 --> 00:40:09,119
and let's talk

924
00:40:06,480 --> 00:40:10,079
specifically to the multipath stuff when

925
00:40:09,119 --> 00:40:13,119
we were charting

926
00:40:10,079 --> 00:40:15,119
chartering mask uh we basically said

927
00:40:13,119 --> 00:40:16,480
mask and the ability to connect and do

928
00:40:15,119 --> 00:40:18,880
datagrams and

929
00:40:16,480 --> 00:40:20,319
ip and all of that is somewhat

930
00:40:18,880 --> 00:40:21,520
orthogonal to

931
00:40:20,319 --> 00:40:23,279
whether you're doing that with

932
00:40:21,520 --> 00:40:25,119
multi-path quick or multiple quick

933
00:40:23,280 --> 00:40:29,040
connections over multiple paths

934
00:40:25,119 --> 00:40:31,520
so i don't think uh i i think

935
00:40:29,040 --> 00:40:33,359
we were not trying to get in front of

936
00:40:31,520 --> 00:40:35,119
the discussion happening in the quick

937
00:40:33,359 --> 00:40:35,920
working group about multipath and all of

938
00:40:35,119 --> 00:40:39,200
that so

939
00:40:35,920 --> 00:40:41,520
i don't think we wanna to turn mask

940
00:40:39,200 --> 00:40:42,720
into a another place to to have that

941
00:40:41,520 --> 00:40:44,640
discussion let's have the discussion

942
00:40:42,720 --> 00:40:47,439
with everybody who needs to be involved

943
00:40:44,640 --> 00:40:48,118
uh but there's nothing in mask that is

944
00:40:47,440 --> 00:40:53,520
that is

945
00:40:48,119 --> 00:40:57,440
anti-multi-path if that makes sense

946
00:40:53,520 --> 00:40:57,440
okay thank you uh vidi

947
00:41:00,880 --> 00:41:05,920
can you hear me yes yes i just have a

948
00:41:04,240 --> 00:41:07,680
very quick question about the scheduling

949
00:41:05,920 --> 00:41:09,280
on the different paths so i remember

950
00:41:07,680 --> 00:41:12,160
seeing the slide where

951
00:41:09,280 --> 00:41:12,880
we were sending uh packets on from you

952
00:41:12,160 --> 00:41:16,240
know different

953
00:41:12,880 --> 00:41:18,240
network interfaces to the concentrator

954
00:41:16,240 --> 00:41:19,919
but i didn't see the response part so

955
00:41:18,240 --> 00:41:21,439
how is the scheduling described in the

956
00:41:19,920 --> 00:41:24,640
draft like how does it decide

957
00:41:21,440 --> 00:41:26,640
on which path to send yeah so no

958
00:41:24,640 --> 00:41:27,759
we don't take positions on the

959
00:41:26,640 --> 00:41:31,118
scheduling so it's free

960
00:41:27,760 --> 00:41:31,119
it's free to the console

961
00:41:31,359 --> 00:41:35,040
um the console is

962
00:41:43,040 --> 00:41:51,359
thanks thanks

963
00:41:48,079 --> 00:41:54,640
this is um this is a question

964
00:41:51,359 --> 00:41:56,880
i i asked this on on on jabba

965
00:41:54,640 --> 00:41:57,680
were the previously area directors or

966
00:41:56,880 --> 00:41:59,200
the

967
00:41:57,680 --> 00:42:01,279
mask chairs or the quick chairs

968
00:41:59,200 --> 00:42:02,960
consulted on these documents

969
00:42:01,280 --> 00:42:04,480
i didn't see an advertisement of this on

970
00:42:02,960 --> 00:42:05,760
any of those mailing lists

971
00:42:04,480 --> 00:42:17,839
and so i was a bit surprised to see

972
00:42:05,760 --> 00:42:17,839
these pop up here

973
00:42:18,160 --> 00:42:21,200
anybody want to respond

974
00:42:27,359 --> 00:42:30,720
max you want to respond to that yeah

975
00:42:28,960 --> 00:42:31,920
sorry i didn't get if the question was

976
00:42:30,720 --> 00:42:33,919
directed at me uh

977
00:42:31,920 --> 00:42:35,040
i'm sorry could you reiterate the

978
00:42:33,920 --> 00:42:36,640
question maxime

979
00:42:35,040 --> 00:42:38,400
it wasn't directly maxim it was directed

980
00:42:36,640 --> 00:42:41,359
at the chairs i'm asking

981
00:42:38,400 --> 00:42:42,079
if the transport area directors or the

982
00:42:41,359 --> 00:42:44,160
mask

983
00:42:42,079 --> 00:42:45,359
chairs or the quick chairs where any of

984
00:42:44,160 --> 00:42:48,240
those consulted

985
00:42:45,359 --> 00:42:49,759
on these documents being presented here

986
00:42:48,240 --> 00:42:52,720
of course you don't need to consult

987
00:42:49,760 --> 00:42:53,119
but it might help if you did consult

988
00:42:52,720 --> 00:42:55,839
them

989
00:42:53,119 --> 00:42:56,319
toward having these sorts of conflicts

990
00:42:55,839 --> 00:42:59,759
um

991
00:42:56,319 --> 00:43:00,560
in the future well okay thanks uh we

992
00:42:59,760 --> 00:43:02,400
take that uh

993
00:43:00,560 --> 00:43:05,040
as an advice and to answer the question

994
00:43:02,400 --> 00:43:05,839
no we we did not uh consult and we we

995
00:43:05,040 --> 00:43:08,000
look at the

996
00:43:05,839 --> 00:43:09,040
protocol and basically the decision as

997
00:43:08,000 --> 00:43:10,560
eric said

998
00:43:09,040 --> 00:43:12,240
uh because it was talking about tunnels

999
00:43:10,560 --> 00:43:15,200
we said okay we can hear it

1000
00:43:12,240 --> 00:43:16,319
but the decision on adopting or anything

1001
00:43:15,200 --> 00:43:18,399
uh would have to be

1002
00:43:16,319 --> 00:43:20,720
taken afterwards and then right now

1003
00:43:18,400 --> 00:43:24,000
you've already got the the feedback

1004
00:43:20,720 --> 00:43:24,000
so so no

1005
00:43:24,880 --> 00:43:29,280
but thanks for the feedback okay

1006
00:43:29,839 --> 00:43:33,759
there there was some conversation about

1007
00:43:32,160 --> 00:43:36,000
this kind of use case and stuff

1008
00:43:33,760 --> 00:43:37,680
i think last march uh but i haven't seen

1009
00:43:36,000 --> 00:43:40,880
anything since then although

1010
00:43:37,680 --> 00:43:44,078
i'm happy to be wrong

1011
00:43:40,880 --> 00:43:46,240
okay thank you so we need to move on uh

1012
00:43:44,079 --> 00:43:47,599
to the next presentation so if

1013
00:43:46,240 --> 00:43:50,560
you have any more comments please send

1014
00:43:47,599 --> 00:43:50,560
them to the list

1015
00:43:52,839 --> 00:43:59,359
pascal

1016
00:43:55,839 --> 00:44:03,040
yes and i try to okay can you

1017
00:43:59,359 --> 00:44:06,720
can you see me can you hear me yeah

1018
00:44:03,040 --> 00:44:10,160
cool okay so um sheik is

1019
00:44:06,720 --> 00:44:13,118
a new rfc 8724

1020
00:44:10,160 --> 00:44:14,160
that was designed at the lp1 working

1021
00:44:13,119 --> 00:44:16,720
group

1022
00:44:14,160 --> 00:44:17,359
and juan carlos is an active member of

1023
00:44:16,720 --> 00:44:20,640
that group

1024
00:44:17,359 --> 00:44:23,520
and i'm sharing it so the

1025
00:44:20,640 --> 00:44:25,200
the lt1 working group considers the

1026
00:44:23,520 --> 00:44:29,119
applicability of check

1027
00:44:25,200 --> 00:44:32,640
over a number of low power wide area

1028
00:44:29,119 --> 00:44:35,839
radios and

1029
00:44:32,640 --> 00:44:37,759
we consider the the capability to extend

1030
00:44:35,839 --> 00:44:39,759
the applicability of shake

1031
00:44:37,760 --> 00:44:40,800
beyond those low power radios and in

1032
00:44:39,760 --> 00:44:43,920
particular

1033
00:44:40,800 --> 00:44:47,440
using ppp as the language franca

1034
00:44:43,920 --> 00:44:50,319
to to never shake over any kind of link

1035
00:44:47,440 --> 00:44:50,800
and so we talk with with eric we we kind

1036
00:44:50,319 --> 00:44:53,279
of

1037
00:44:50,800 --> 00:44:54,079
went through the possibilities and we

1038
00:44:53,280 --> 00:44:57,920
found that

1039
00:44:54,079 --> 00:45:01,119
um lp1 was actually not chartered for

1040
00:44:57,920 --> 00:45:04,240
looking at chic over ppp

1041
00:45:01,119 --> 00:45:05,920
so we we kind of decided to to move into

1042
00:45:04,240 --> 00:45:06,959
interior and propose the work at

1043
00:45:05,920 --> 00:45:10,400
interior

1044
00:45:06,960 --> 00:45:13,920
so certainly this this work takes uh

1045
00:45:10,400 --> 00:45:17,200
needs two kind of of uh specialties

1046
00:45:13,920 --> 00:45:17,760
we need like ppp experts and we also

1047
00:45:17,200 --> 00:45:20,480
need chic

1048
00:45:17,760 --> 00:45:21,280
experts so certainly it cannot be done

1049
00:45:20,480 --> 00:45:22,960
fully in

1050
00:45:21,280 --> 00:45:24,880
our working group and we really expect

1051
00:45:22,960 --> 00:45:27,359
collaboration between rp1 and

1052
00:45:24,880 --> 00:45:29,599
interior but in terms of charter the

1053
00:45:27,359 --> 00:45:32,640
work uh belongs here so that that's why

1054
00:45:29,599 --> 00:45:34,800
it's been proposed here

1055
00:45:32,640 --> 00:45:36,799
why do we want shakeover ppp because if

1056
00:45:34,800 --> 00:45:38,400
we have ppp obviously we have several

1057
00:45:36,800 --> 00:45:42,480
links so we can

1058
00:45:38,400 --> 00:45:43,440
get the traditional rvx links and we can

1059
00:45:42,480 --> 00:45:46,640
get

1060
00:45:43,440 --> 00:45:49,680
3gpp etc we

1061
00:45:46,640 --> 00:45:50,879
also can benefit from ppp over ethernet

1062
00:45:49,680 --> 00:45:53,919
wi-fi

1063
00:45:50,880 --> 00:45:55,839
um so with basically we can

1064
00:45:53,920 --> 00:45:58,160
through p through check of our ppp we

1065
00:45:55,839 --> 00:45:59,599
can basically deploy shake over anything

1066
00:45:58,160 --> 00:46:01,920
so that's why we're so interested in

1067
00:45:59,599 --> 00:46:06,000
doing it

1068
00:46:01,920 --> 00:46:06,960
um to enable it it doesn't take a lot

1069
00:46:06,000 --> 00:46:10,160
but we need

1070
00:46:06,960 --> 00:46:12,839
to to signal a new compression mechanism

1071
00:46:10,160 --> 00:46:16,480
for ppp already has two compression

1072
00:46:12,839 --> 00:46:20,160
mechanisms defined so it's just like a

1073
00:46:16,480 --> 00:46:23,599
third one that that we look at and

1074
00:46:20,160 --> 00:46:25,680
uh we propose to signal check as

1075
00:46:23,599 --> 00:46:26,960
basically so a new value for this

1076
00:46:25,680 --> 00:46:31,118
compression type

1077
00:46:26,960 --> 00:46:33,200
and um chic requires a data model

1078
00:46:31,119 --> 00:46:34,720
where you you provide the compression

1079
00:46:33,200 --> 00:46:37,759
rules it's completely stateful

1080
00:46:34,720 --> 00:46:40,319
protocol where every byte kind of

1081
00:46:37,760 --> 00:46:42,560
maps something in a rule so we need to

1082
00:46:40,319 --> 00:46:46,480
provide the rule and the idea is

1083
00:46:42,560 --> 00:46:49,839
in this compression header that ppp has

1084
00:46:46,480 --> 00:46:52,319
we can actually provide the url of of

1085
00:46:49,839 --> 00:46:53,680
the where the data model is located

1086
00:46:52,319 --> 00:46:55,359
because it's very important that both

1087
00:46:53,680 --> 00:46:56,000
the ends of the compression at the exact

1088
00:46:55,359 --> 00:46:58,880
same

1089
00:46:56,000 --> 00:47:01,119
vision of this data model next slide

1090
00:46:58,880 --> 00:47:01,119
please

1091
00:47:01,680 --> 00:47:05,359
okay so what's new in the draft first

1092
00:47:03,920 --> 00:47:08,560
thing is we kind of

1093
00:47:05,359 --> 00:47:11,839
uh to keep things simple

1094
00:47:08,560 --> 00:47:14,319
and that's just an attempt we kind of

1095
00:47:11,839 --> 00:47:15,200
propose to force the size of what we

1096
00:47:14,319 --> 00:47:17,839
call the rule id

1097
00:47:15,200 --> 00:47:19,919
which is basically this uh the index of

1098
00:47:17,839 --> 00:47:22,799
of the mapping table which says exactly

1099
00:47:19,920 --> 00:47:25,119
how you compress this particular packet

1100
00:47:22,800 --> 00:47:26,160
we proposed to fix it as two bytes so so

1101
00:47:25,119 --> 00:47:29,680
we get everything

1102
00:47:26,160 --> 00:47:32,240
by the line and it looked like having 14

1103
00:47:29,680 --> 00:47:34,240
bits to index uh the rules for a given

1104
00:47:32,240 --> 00:47:36,479
flow that that looked like enough

1105
00:47:34,240 --> 00:47:38,078
if you want to start another flow then

1106
00:47:36,480 --> 00:47:40,880
you can always start another ppp

1107
00:47:38,079 --> 00:47:41,520
session now we'll see later in the

1108
00:47:40,880 --> 00:47:43,359
slides but

1109
00:47:41,520 --> 00:47:45,759
the big question we have is if we force

1110
00:47:43,359 --> 00:47:48,000
the rule id size to be aligned

1111
00:47:45,760 --> 00:47:49,599
and now we've got all these compression

1112
00:47:48,000 --> 00:47:51,040
residues so the result of the sheet

1113
00:47:49,599 --> 00:47:53,440
compression

1114
00:47:51,040 --> 00:47:54,240
what's not compressed basically which

1115
00:47:53,440 --> 00:47:56,720
could not be

1116
00:47:54,240 --> 00:47:59,520
a bit aligned then we have a prime with

1117
00:47:56,720 --> 00:48:01,759
uh what to do with the with the padding

1118
00:47:59,520 --> 00:48:04,079
so we watch that next slide next slide

1119
00:48:01,760 --> 00:48:04,079
please

1120
00:48:04,240 --> 00:48:08,959
so what we did with this new version is

1121
00:48:06,720 --> 00:48:10,799
uh add fragmentation initially there was

1122
00:48:08,960 --> 00:48:12,880
no fragmentation

1123
00:48:10,800 --> 00:48:15,040
in uh shakeover ppp because we are

1124
00:48:12,880 --> 00:48:15,599
saying hey ppp applies to two links

1125
00:48:15,040 --> 00:48:17,359
where

1126
00:48:15,599 --> 00:48:19,200
normally you don't have a frame size

1127
00:48:17,359 --> 00:48:20,640
limitation but then

1128
00:48:19,200 --> 00:48:22,558
then we looked at it from a different

1129
00:48:20,640 --> 00:48:24,160
angle and took requirements from from

1130
00:48:22,559 --> 00:48:25,760
industrial control loops and things like

1131
00:48:24,160 --> 00:48:26,480
that where you would like to schedule

1132
00:48:25,760 --> 00:48:28,480
frames

1133
00:48:26,480 --> 00:48:30,400
and if you want to schedule frames you

1134
00:48:28,480 --> 00:48:33,839
may want to align them

1135
00:48:30,400 --> 00:48:35,359
to a very specific size so it's much

1136
00:48:33,839 --> 00:48:38,210
easier to schedule

1137
00:48:35,359 --> 00:48:39,359
and if you want to do that then the um

1138
00:48:38,210 --> 00:48:41,520
[Music]

1139
00:48:39,359 --> 00:48:43,839
there might be cases for some industrial

1140
00:48:41,520 --> 00:48:46,559
protocols where whatever size you decide

1141
00:48:43,839 --> 00:48:50,160
like 120 bytes or something

1142
00:48:46,559 --> 00:48:53,280
does not fit everything

1143
00:48:50,160 --> 00:48:55,680
and in that case you might need to

1144
00:48:53,280 --> 00:48:57,280
divide you know the frequency of your

1145
00:48:55,680 --> 00:48:59,680
updates by two but

1146
00:48:57,280 --> 00:49:01,760
allow two fragments or even three

1147
00:48:59,680 --> 00:49:03,759
fragments if you really wanted to

1148
00:49:01,760 --> 00:49:04,960
so to be able to maintain this very

1149
00:49:03,760 --> 00:49:09,119
small

1150
00:49:04,960 --> 00:49:11,680
frame size um we basically said oh then

1151
00:49:09,119 --> 00:49:12,559
let's let's use the fragmentation that

1152
00:49:11,680 --> 00:49:16,558
chick has

1153
00:49:12,559 --> 00:49:19,440
next slide

1154
00:49:16,559 --> 00:49:20,000
so so the biggest problem we have left

1155
00:49:19,440 --> 00:49:22,960
is

1156
00:49:20,000 --> 00:49:24,880
is this padding thing normally the way

1157
00:49:22,960 --> 00:49:27,680
shake would work

1158
00:49:24,880 --> 00:49:29,359
is that uh when you're not fully beat

1159
00:49:27,680 --> 00:49:31,279
allied

1160
00:49:29,359 --> 00:49:32,480
line i'm sorry then you put some padding

1161
00:49:31,280 --> 00:49:35,040
at the end

1162
00:49:32,480 --> 00:49:36,160
of everything but here what we'd like to

1163
00:49:35,040 --> 00:49:38,160
do is compress

1164
00:49:36,160 --> 00:49:39,359
maybe most of the beginning of the

1165
00:49:38,160 --> 00:49:40,960
packet but then

1166
00:49:39,359 --> 00:49:42,960
if in this control loop there is kind of

1167
00:49:40,960 --> 00:49:43,760
a measurement you would like to leave

1168
00:49:42,960 --> 00:49:45,520
the measurement

1169
00:49:43,760 --> 00:49:47,680
uncompressed at the end of the packet so

1170
00:49:45,520 --> 00:49:50,960
we would like to be able to signal

1171
00:49:47,680 --> 00:49:52,240
that up to this point you're compressed

1172
00:49:50,960 --> 00:49:53,280
and then after that you're not

1173
00:49:52,240 --> 00:49:55,919
compressed

1174
00:49:53,280 --> 00:49:57,280
and if we look at this then the that

1175
00:49:55,920 --> 00:49:59,119
means that the the

1176
00:49:57,280 --> 00:50:00,559
padding has to be between the compressed

1177
00:49:59,119 --> 00:50:03,040
piece and the uncompressed piece next

1178
00:50:00,559 --> 00:50:03,040
side please

1179
00:50:03,440 --> 00:50:07,040
so that's pretty much where we are and

1180
00:50:05,520 --> 00:50:09,599
the discussion we want to add do we want

1181
00:50:07,040 --> 00:50:10,240
to to maintain the rule uh of a fixed

1182
00:50:09,599 --> 00:50:11,839
size

1183
00:50:10,240 --> 00:50:14,399
and then have to introduce padding

1184
00:50:11,839 --> 00:50:17,839
between the compressor and compressed

1185
00:50:14,400 --> 00:50:19,520
or um change slightly the way she

1186
00:50:17,839 --> 00:50:21,599
copyright

1187
00:50:19,520 --> 00:50:23,759
or maybe find a trick that makes it fit

1188
00:50:21,599 --> 00:50:26,800
in a generic format

1189
00:50:23,760 --> 00:50:27,599
so here i'm giving you how the the flow

1190
00:50:26,800 --> 00:50:30,400
would work

1191
00:50:27,599 --> 00:50:31,920
so basically uh there are two switches

1192
00:50:30,400 --> 00:50:34,160
or two endpoints which

1193
00:50:31,920 --> 00:50:35,520
which operate shake the compression

1194
00:50:34,160 --> 00:50:36,558
compression and decompression on the

1195
00:50:35,520 --> 00:50:38,000
other side

1196
00:50:36,559 --> 00:50:40,640
and basically the first thing that needs

1197
00:50:38,000 --> 00:50:42,640
to happen is is to agree on the rule set

1198
00:50:40,640 --> 00:50:45,759
that's why we need this this url

1199
00:50:42,640 --> 00:50:49,200
in the ppp negotiation um

1200
00:50:45,760 --> 00:50:52,480
and then the url will be negotiated

1201
00:50:49,200 --> 00:50:52,480
through through the discovery

1202
00:50:52,880 --> 00:50:56,000
next slide please so you see this option

1203
00:50:54,800 --> 00:50:58,079
two basically i'm sorry

1204
00:50:56,000 --> 00:50:59,200
uh back one slide i did not mention one

1205
00:50:58,079 --> 00:51:02,079
thing

1206
00:50:59,200 --> 00:51:02,078
backward slide please

1207
00:51:02,800 --> 00:51:06,559
yeah so so basically the first thing is

1208
00:51:04,960 --> 00:51:08,079
the endpoints must look at one another

1209
00:51:06,559 --> 00:51:10,240
so there must be a discovery

1210
00:51:08,079 --> 00:51:12,079
and then um what i mentioned earlier is

1211
00:51:10,240 --> 00:51:15,359
illustrated here is

1212
00:51:12,079 --> 00:51:16,319
uh the ipv6 cp uh configuration request

1213
00:51:15,359 --> 00:51:19,520
would have this uh

1214
00:51:16,319 --> 00:51:22,000
option to which size this new

1215
00:51:19,520 --> 00:51:22,720
compression protocol check and do url

1216
00:51:22,000 --> 00:51:24,880
that's that's

1217
00:51:22,720 --> 00:51:26,399
basically what i was saying earlier next

1218
00:51:24,880 --> 00:51:28,079
slide

1219
00:51:26,400 --> 00:51:29,920
uh pascal would you mind skipping this

1220
00:51:28,079 --> 00:51:31,200
one and going to the questions yeah this

1221
00:51:29,920 --> 00:51:31,599
is just for illustration let's go to the

1222
00:51:31,200 --> 00:51:34,839
next

1223
00:51:31,599 --> 00:51:37,839
yeah so there we go

1224
00:51:34,839 --> 00:51:40,480
um basically

1225
00:51:37,839 --> 00:51:41,520
calling for adoption i guess i mean the

1226
00:51:40,480 --> 00:51:43,040
the

1227
00:51:41,520 --> 00:51:45,759
like i said this work has to be done in

1228
00:51:43,040 --> 00:51:48,000
collaboration with rp1 and for the tiny

1229
00:51:45,760 --> 00:51:49,520
details of how we do the rules and stuff

1230
00:51:48,000 --> 00:51:50,480
that would be done with help you and

1231
00:51:49,520 --> 00:51:53,520
support

1232
00:51:50,480 --> 00:51:55,200
but uh from here we really need to

1233
00:51:53,520 --> 00:51:57,359
to agree on on the value of doing

1234
00:51:55,200 --> 00:51:59,598
shakeover ppp and um

1235
00:51:57,359 --> 00:52:00,640
if so then getting this this document

1236
00:51:59,599 --> 00:52:03,280
adopted

1237
00:52:00,640 --> 00:52:04,400
and then i would like feedback on is it

1238
00:52:03,280 --> 00:52:08,079
incorrectly

1239
00:52:04,400 --> 00:52:09,119
uh do we need more justification for why

1240
00:52:08,079 --> 00:52:11,040
we are doing this work like

1241
00:52:09,119 --> 00:52:12,640
applicability statement is there

1242
00:52:11,040 --> 00:52:13,759
anything else you would like to mention

1243
00:52:12,640 --> 00:52:17,279
this document

1244
00:52:13,760 --> 00:52:20,000
so that's basically the open questions

1245
00:52:17,280 --> 00:52:21,520
okay thank you very much so uh as pascal

1246
00:52:20,000 --> 00:52:24,640
mentioned in the beginning this uh

1247
00:52:21,520 --> 00:52:26,240
actually applies a lot to the technology

1248
00:52:24,640 --> 00:52:28,879
in the work that is being done in the

1249
00:52:26,240 --> 00:52:32,479
lp1 group but the applicability

1250
00:52:28,880 --> 00:52:34,559
brings it to to interior so

1251
00:52:32,480 --> 00:52:36,079
even though the expertise is mainly

1252
00:52:34,559 --> 00:52:38,880
there we wonder

1253
00:52:36,079 --> 00:52:40,400
if ever this moves forward one adopted

1254
00:52:38,880 --> 00:52:44,240
here in interior

1255
00:52:40,400 --> 00:52:47,280
so uh if you click on the show of hands

1256
00:52:44,240 --> 00:52:48,640
bar we are asking a question we would

1257
00:52:47,280 --> 00:52:50,000
like to know how many people have read

1258
00:52:48,640 --> 00:52:53,118
the draft

1259
00:52:50,000 --> 00:52:55,520
so if you can click on the on the bar

1260
00:52:53,119 --> 00:52:56,640
chart of the mythical and please raise

1261
00:52:55,520 --> 00:53:00,000
your hand if you have

1262
00:52:56,640 --> 00:53:02,078
read the draft or do not

1263
00:53:00,000 --> 00:53:04,400
raise your hand if you have not read the

1264
00:53:02,079 --> 00:53:04,400
draft

1265
00:53:09,839 --> 00:53:15,839
okay so it's still moving

1266
00:53:24,319 --> 00:53:31,279
okay so we're gonna stop it

1267
00:53:28,000 --> 00:53:34,720
there we have 4 19 and

1268
00:53:31,280 --> 00:53:36,800
1 18. so we still

1269
00:53:34,720 --> 00:53:38,160
don't have that many people reading the

1270
00:53:36,800 --> 00:53:40,160
draft

1271
00:53:38,160 --> 00:53:43,839
again this is this is a draft and a

1272
00:53:40,160 --> 00:53:46,799
technology that even though it's been

1273
00:53:43,839 --> 00:53:48,240
discussed uh at length in lp one it'll

1274
00:53:46,800 --> 00:53:50,480
be nice if you guys

1275
00:53:48,240 --> 00:53:52,000
can take a look uh since this is

1276
00:53:50,480 --> 00:53:55,119
something we would like to

1277
00:53:52,000 --> 00:53:57,920
eventually adopt in interior so please

1278
00:53:55,119 --> 00:53:59,280
take a look send your comments uh and

1279
00:53:57,920 --> 00:54:01,599
possible

1280
00:53:59,280 --> 00:54:05,119
answer the questions that pascal is

1281
00:54:01,599 --> 00:54:05,119
asking on the mailing list

1282
00:54:06,000 --> 00:54:11,920
okay so

1283
00:54:10,319 --> 00:54:14,400
if no more questions we can move to the

1284
00:54:11,920 --> 00:54:14,400
next one

1285
00:54:19,040 --> 00:54:26,800
yes i'm here can you hear me yes

1286
00:54:23,760 --> 00:54:30,000
okay thanks for the time to present this

1287
00:54:26,800 --> 00:54:32,640
proposal is for the flexible app address

1288
00:54:30,000 --> 00:54:34,480
uh uh address structure for the new

1289
00:54:32,640 --> 00:54:37,598
scenarios

1290
00:54:34,480 --> 00:54:40,160
uh i'm ihoja from huawei

1291
00:54:37,599 --> 00:54:40,160
next please

1292
00:54:42,559 --> 00:54:47,760
the first slice is for the gap and then

1293
00:54:44,240 --> 00:54:49,598
i analysis the ipv6 has become the core

1294
00:54:47,760 --> 00:54:50,559
protocol of the entire communication

1295
00:54:49,599 --> 00:54:53,040
system and

1296
00:54:50,559 --> 00:54:53,680
increasing network scenarios long phone

1297
00:54:53,040 --> 00:54:57,359
tcp

1298
00:54:53,680 --> 00:54:59,839
ip for global range abilities and

1299
00:54:57,359 --> 00:55:01,119
we know ip address is designed as to

1300
00:54:59,839 --> 00:55:04,480
hold the only

1301
00:55:01,119 --> 00:55:07,520
topology semantics only and

1302
00:55:04,480 --> 00:55:10,799
here we do see a lot of new scenarios

1303
00:55:07,520 --> 00:55:13,759
which prefers a flexible ip address and

1304
00:55:10,799 --> 00:55:14,799
this is for a new routing capabilities

1305
00:55:13,760 --> 00:55:17,280
so

1306
00:55:14,799 --> 00:55:18,799
we are looking for the new scenarios

1307
00:55:17,280 --> 00:55:22,319
which could be

1308
00:55:18,799 --> 00:55:23,359
better to use a flexible ip address

1309
00:55:22,319 --> 00:55:26,160
structure and

1310
00:55:23,359 --> 00:55:27,920
this is for new requirements and can

1311
00:55:26,160 --> 00:55:32,240
unslash new

1312
00:55:27,920 --> 00:55:32,240
more possibilities next please

1313
00:55:32,480 --> 00:55:38,640
so we should define the flexibility

1314
00:55:35,520 --> 00:55:40,960
here and uh we do post a

1315
00:55:38,640 --> 00:55:42,000
potential orientation here we we see

1316
00:55:40,960 --> 00:55:44,440
that the

1317
00:55:42,000 --> 00:55:45,920
feasibility could include

1318
00:55:44,440 --> 00:55:49,520
multi-semantics

1319
00:55:45,920 --> 00:55:52,720
and it could be lens variable and

1320
00:55:49,520 --> 00:55:55,920
the location for this new scenarios

1321
00:55:52,720 --> 00:55:56,480
we see is it's called the age networks

1322
00:55:55,920 --> 00:55:59,760
we

1323
00:55:56,480 --> 00:56:01,040
we do use that new address structure at

1324
00:55:59,760 --> 00:56:04,240
the limited domain

1325
00:56:01,040 --> 00:56:06,640
is like in the graph in the right side

1326
00:56:04,240 --> 00:56:08,160
uh the backbone should be the internet

1327
00:56:06,640 --> 00:56:11,759
ipva sex and

1328
00:56:08,160 --> 00:56:13,118
the flexible ip should be located at the

1329
00:56:11,760 --> 00:56:15,280
edge of the network

1330
00:56:13,119 --> 00:56:17,599
and the logic position of the flex

1331
00:56:15,280 --> 00:56:19,119
flexible ip should be the supplementary

1332
00:56:17,599 --> 00:56:23,680
of the ipv6 and

1333
00:56:19,119 --> 00:56:23,680
not replacement next please

1334
00:56:24,000 --> 00:56:27,280
the first scenario is the internet of

1335
00:56:26,559 --> 00:56:31,040
things

1336
00:56:27,280 --> 00:56:31,680
and as we see the ipv6 is mentioned for

1337
00:56:31,040 --> 00:56:33,759
the

1338
00:56:31,680 --> 00:56:35,040
internet of things for the end-to-end

1339
00:56:33,760 --> 00:56:38,319
reachabilities

1340
00:56:35,040 --> 00:56:40,960
and because of its huge address space

1341
00:56:38,319 --> 00:56:41,920
and but there is a question here the

1342
00:56:40,960 --> 00:56:44,640
energy

1343
00:56:41,920 --> 00:56:46,640
consumption for ipv6 may be unfoldable

1344
00:56:44,640 --> 00:56:48,400
for constrained devices for example the

1345
00:56:46,640 --> 00:56:49,598
power requirements computational

1346
00:56:48,400 --> 00:56:51,359
requirements

1347
00:56:49,599 --> 00:56:53,040
and we do have a solution here it's

1348
00:56:51,359 --> 00:56:54,960
called the 6lowpan

1349
00:56:53,040 --> 00:56:56,480
it's facebook but it's not perfect

1350
00:56:54,960 --> 00:56:58,319
because they have a lot of

1351
00:56:56,480 --> 00:57:00,559
action likes compression and

1352
00:56:58,319 --> 00:57:02,319
decompression so that could introduce

1353
00:57:00,559 --> 00:57:05,520
extra energy consumption or

1354
00:57:02,319 --> 00:57:08,558
resource consumptions and such

1355
00:57:05,520 --> 00:57:10,480
compression actions may lead to the

1356
00:57:08,559 --> 00:57:13,280
network delays so

1357
00:57:10,480 --> 00:57:14,240
for such scenarios if we use a flexible

1358
00:57:13,280 --> 00:57:16,240
address

1359
00:57:14,240 --> 00:57:18,160
address structure we can use a shorter

1360
00:57:16,240 --> 00:57:20,319
address maybe a shorter

1361
00:57:18,160 --> 00:57:22,000
packet heater that could contribute to

1362
00:57:20,319 --> 00:57:26,079
energy consumption

1363
00:57:22,000 --> 00:57:27,440
energy saving and we can use appropriate

1364
00:57:26,079 --> 00:57:30,400
gateway to

1365
00:57:27,440 --> 00:57:32,559
translate from the ipv6 and the flexible

1366
00:57:30,400 --> 00:57:37,680
iphone structure

1367
00:57:32,559 --> 00:57:37,680
next please and

1368
00:57:37,920 --> 00:57:41,760
so sorry we have a few more minutes uh

1369
00:57:40,160 --> 00:57:42,160
you want to take questions here you want

1370
00:57:41,760 --> 00:57:43,839
to

1371
00:57:42,160 --> 00:57:45,440
go through a couple of more slides

1372
00:57:43,839 --> 00:57:47,920
before

1373
00:57:45,440 --> 00:57:49,040
uh i'd like to talk question i will go

1374
00:57:47,920 --> 00:57:51,599
through all the

1375
00:57:49,040 --> 00:57:53,119
the name of the scenarios the the second

1376
00:57:51,599 --> 00:57:56,160
scenario is for

1377
00:57:53,119 --> 00:58:00,079
c line networks we can use geolocation

1378
00:57:56,160 --> 00:58:03,118
and for for low energy consumptions

1379
00:58:00,079 --> 00:58:07,200
this is a new scenarios and the

1380
00:58:03,119 --> 00:58:09,440
next scenarios uh next please next

1381
00:58:07,200 --> 00:58:11,759
it's for the dynamic resources we can

1382
00:58:09,440 --> 00:58:14,960
use flexible structure to

1383
00:58:11,760 --> 00:58:18,319
uh encoding uh identifier

1384
00:58:14,960 --> 00:58:21,359
and it's good for us to

1385
00:58:18,319 --> 00:58:24,400
uh to provide quality of service

1386
00:58:21,359 --> 00:58:24,400
and next please

1387
00:58:24,720 --> 00:58:29,359
and we can use a flexible structure to

1388
00:58:28,400 --> 00:58:32,480
encode the

1389
00:58:29,359 --> 00:58:33,359
new identifier and to identify users or

1390
00:58:32,480 --> 00:58:36,000
devices

1391
00:58:33,359 --> 00:58:37,279
and it's good for the network to allowed

1392
00:58:36,000 --> 00:58:40,400
to directly allow

1393
00:58:37,280 --> 00:58:41,280
or deny traffic based on the based on

1394
00:58:40,400 --> 00:58:44,000
the privilege

1395
00:58:41,280 --> 00:58:44,000
and next please

1396
00:58:44,960 --> 00:58:48,880
and we can also use a new flexible

1397
00:58:48,160 --> 00:58:52,480
address

1398
00:58:48,880 --> 00:58:54,960
structure to embed like the keys

1399
00:58:52,480 --> 00:58:56,319
and it's good for authentication just

1400
00:58:54,960 --> 00:58:59,280
for like the ipsec

1401
00:58:56,319 --> 00:59:00,079
so if we have a flexible ip address and

1402
00:58:59,280 --> 00:59:03,359
it could have

1403
00:59:00,079 --> 00:59:06,720
the integer keys integrally keys

1404
00:59:03,359 --> 00:59:10,799
and it's good for authentication without

1405
00:59:06,720 --> 00:59:10,799
key distribution next please

1406
00:59:11,359 --> 00:59:15,520
so the main purpose is to propose a

1407
00:59:14,079 --> 00:59:19,359
flexible ip address

1408
00:59:15,520 --> 00:59:22,000
and it's we propose it to be

1409
00:59:19,359 --> 00:59:23,598
good enough to accommodate new scenario

1410
00:59:22,000 --> 00:59:25,520
requirements and it's just a

1411
00:59:23,599 --> 00:59:28,880
supplementary of ipa 6.

1412
00:59:25,520 --> 00:59:31,759
next please so

1413
00:59:28,880 --> 00:59:32,960
that's the last slide here and it's we

1414
00:59:31,760 --> 00:59:36,000
want to discuss if

1415
00:59:32,960 --> 00:59:38,160
it is reasonable for new scenarios use a

1416
00:59:36,000 --> 00:59:40,000
flexible ip address structure

1417
00:59:38,160 --> 00:59:41,680
thanks thank you so we're going to stop

1418
00:59:40,000 --> 00:59:44,799
the queue at 10

1419
00:59:41,680 --> 00:59:44,799
pascal please go ahead

1420
00:59:45,040 --> 00:59:49,359
i just want to mention that there was

1421
00:59:46,640 --> 00:59:50,640
some inextitude on what was said about

1422
00:59:49,359 --> 00:59:54,078
six low payments

1423
00:59:50,640 --> 00:59:55,920
so um six japan enables to forward

1424
00:59:54,079 --> 00:59:58,880
compressed packets you can do that in

1425
00:59:55,920 --> 01:00:00,480
the with the mesh forms and with rfc813h

1426
00:59:58,880 --> 01:00:02,960
you can also do that

1427
01:00:00,480 --> 01:00:04,240
in in the right over mode so you can

1428
01:00:02,960 --> 01:00:05,839
always forward

1429
01:00:04,240 --> 01:00:08,879
six loop and packets even if they are

1430
01:00:05,839 --> 01:00:12,720
fragmented because now you have rfc89

1431
01:00:08,880 --> 01:00:14,000
30 and 8931 which enable to forward

1432
01:00:12,720 --> 01:00:17,439
fragments as well so

1433
01:00:14,000 --> 01:00:18,160
so the um the point that you you should

1434
01:00:17,440 --> 01:00:19,839
you could not

1435
01:00:18,160 --> 01:00:21,598
forward six clockwise compressed packet

1436
01:00:19,839 --> 01:00:24,799
is not exact

1437
01:00:21,599 --> 01:00:27,359
um yeah so that's the major thing now

1438
01:00:24,799 --> 01:00:29,119
6lowpan is not a flexible address

1439
01:00:27,359 --> 01:00:31,598
structure it is a compression

1440
01:00:29,119 --> 01:00:32,160
right so you can always come back to

1441
01:00:31,599 --> 01:00:34,960
normal

1442
01:00:32,160 --> 01:00:36,399
uh ipv6 so so it does not really compare

1443
01:00:34,960 --> 01:00:40,000
but the argument against

1444
01:00:36,400 --> 01:00:43,119
six floor plans here is not exact okay

1445
01:00:40,000 --> 01:00:43,680
thank you thank you i did see this see

1446
01:00:43,119 --> 01:00:45,680
there's

1447
01:00:43,680 --> 01:00:46,799
flexible structure as a parallel

1448
01:00:45,680 --> 01:00:49,200
solutions and

1449
01:00:46,799 --> 01:00:51,200
6 lowpan works and maybe a flexible

1450
01:00:49,200 --> 01:00:54,160
address structure may still work for the

1451
01:00:51,200 --> 01:00:54,160
iot scenarios

1452
01:00:55,119 --> 01:00:58,400
thanks uh ron

1453
01:01:00,240 --> 01:01:03,680
i realize that you have some use cases

1454
01:01:02,880 --> 01:01:07,920
that require

1455
01:01:03,680 --> 01:01:11,359
additional information in ipv6 headers

1456
01:01:07,920 --> 01:01:12,240
you've proposed encoding it in an ipv6

1457
01:01:11,359 --> 01:01:15,359
address

1458
01:01:12,240 --> 01:01:16,720
and even making variable length ipv6

1459
01:01:15,359 --> 01:01:19,520
addresses

1460
01:01:16,720 --> 01:01:21,118
the problem is once you make an ipv6

1461
01:01:19,520 --> 01:01:24,400
address variable length

1462
01:01:21,119 --> 01:01:27,119
it's no longer ipv6 it's something else

1463
01:01:24,400 --> 01:01:29,280
so i'd recommend that you think about

1464
01:01:27,119 --> 01:01:31,359
encoding this extra information

1465
01:01:29,280 --> 01:01:34,319
someplace other than the uh destination

1466
01:01:31,359 --> 01:01:37,119
address maybe use extension headers

1467
01:01:34,319 --> 01:01:38,799
um if that doesn't work well maybe what

1468
01:01:37,119 --> 01:01:39,119
you're working on is something that is

1469
01:01:38,799 --> 01:01:41,920
not

1470
01:01:39,119 --> 01:01:43,440
ipv6 as much as i hate to say it you

1471
01:01:41,920 --> 01:01:45,830
might be talking about

1472
01:01:43,440 --> 01:01:48,640
ipv10 or something like that

1473
01:01:45,830 --> 01:01:52,319
[Music]

1474
01:01:48,640 --> 01:01:52,960
a minute minute ipv6 address variable

1475
01:01:52,319 --> 01:01:56,558
length

1476
01:01:52,960 --> 01:01:56,559
it's no longer ipv6

1477
01:01:57,440 --> 01:02:04,880
yes yes uh it's not exactly ipvsx or

1478
01:02:01,280 --> 01:02:07,119
it's it's not similar we just used the

1479
01:02:04,880 --> 01:02:07,760
address the definition of the address

1480
01:02:07,119 --> 01:02:10,079
but

1481
01:02:07,760 --> 01:02:10,880
we hope that the structure could not be

1482
01:02:10,079 --> 01:02:15,119
fixed like

1483
01:02:10,880 --> 01:02:18,000
1 168 bytes and it could be flexible and

1484
01:02:15,119 --> 01:02:19,920
it could contain more schematics and

1485
01:02:18,000 --> 01:02:20,319
lens variables so it's different from

1486
01:02:19,920 --> 01:02:23,599
the

1487
01:02:20,319 --> 01:02:26,720
ipv6 but it still could be compatible

1488
01:02:23,599 --> 01:02:26,720
with the ipv6

1489
01:02:27,440 --> 01:02:32,640
okay thanks so

1490
01:02:31,119 --> 01:02:34,319
if ever there's more feedback let's

1491
01:02:32,640 --> 01:02:37,520
stick it to the list uh

1492
01:02:34,319 --> 01:02:39,119
ted uh thanks very much for your

1493
01:02:37,520 --> 01:02:40,559
presentation and for ending with such a

1494
01:02:39,119 --> 01:02:41,839
clear question are these scenarios

1495
01:02:40,559 --> 01:02:43,280
reasonable for flexible address

1496
01:02:41,839 --> 01:02:43,839
structure and i think the answer is

1497
01:02:43,280 --> 01:02:47,039
basically

1498
01:02:43,839 --> 01:02:50,000
no um and i think that it's known for

1499
01:02:47,039 --> 01:02:51,200
three kind of reasons one um

1500
01:02:50,000 --> 01:02:53,680
programmatic one

1501
01:02:51,200 --> 01:02:54,640
architectural and and one sort of from a

1502
01:02:53,680 --> 01:02:56,160
policy basis

1503
01:02:54,640 --> 01:02:57,520
the programmatic one is you're trying to

1504
01:02:56,160 --> 01:02:59,440
do a whole bunch of different things and

1505
01:02:57,520 --> 01:03:01,038
you've picked one particular tool

1506
01:02:59,440 --> 01:03:02,720
and said i'm going to use this tool to

1507
01:03:01,039 --> 01:03:03,520
do all of these different things and the

1508
01:03:02,720 --> 01:03:06,879
result of that

1509
01:03:03,520 --> 01:03:07,359
is you're going to end up one making the

1510
01:03:06,880 --> 01:03:10,559
tool

1511
01:03:07,359 --> 01:03:11,680
less optimal for its original usage too

1512
01:03:10,559 --> 01:03:13,119
all of the different things you're

1513
01:03:11,680 --> 01:03:14,720
trying to do are going to be across

1514
01:03:13,119 --> 01:03:16,240
purposes as you're trying to fit them

1515
01:03:14,720 --> 01:03:17,439
into the new structures within the

1516
01:03:16,240 --> 01:03:19,359
existing tool

1517
01:03:17,440 --> 01:03:20,480
and the result of it is exactly the

1518
01:03:19,359 --> 01:03:22,720
architectural problem

1519
01:03:20,480 --> 01:03:23,520
that that that occurs and that you note

1520
01:03:22,720 --> 01:03:25,520
in your slide

1521
01:03:23,520 --> 01:03:27,759
that you're going to have to gateway and

1522
01:03:25,520 --> 01:03:29,839
that those gateways will not actually be

1523
01:03:27,760 --> 01:03:30,640
part of the internet those will be

1524
01:03:29,839 --> 01:03:32,480
networks which

1525
01:03:30,640 --> 01:03:34,960
connect to the internet through a

1526
01:03:32,480 --> 01:03:35,440
gateway because you will not be able to

1527
01:03:34,960 --> 01:03:38,240
pass

1528
01:03:35,440 --> 01:03:39,440
from the gateway portion through the

1529
01:03:38,240 --> 01:03:41,439
rest of the internet

1530
01:03:39,440 --> 01:03:42,640
uh if there is no gateway on path that's

1531
01:03:41,440 --> 01:03:43,839
capable of understanding the

1532
01:03:42,640 --> 01:03:44,799
distinctions you're trying to make

1533
01:03:43,839 --> 01:03:48,160
within it

1534
01:03:44,799 --> 01:03:49,759
so i i think that this is not only not a

1535
01:03:48,160 --> 01:03:51,279
great idea from the point of view of an

1536
01:03:49,760 --> 01:03:52,799
addressing architecture it's actually a

1537
01:03:51,280 --> 01:03:55,520
terrible idea from the point of view of

1538
01:03:52,799 --> 01:03:58,160
keeping the internet a single unitary

1539
01:03:55,520 --> 01:04:00,000
um internet working layer so i think

1540
01:03:58,160 --> 01:04:01,759
it's it's kind of problematic from that

1541
01:04:00,000 --> 01:04:03,680
architectural perspective

1542
01:04:01,760 --> 01:04:06,000
lastly some of what you want to do is

1543
01:04:03,680 --> 01:04:08,799
actually contrary to the policy

1544
01:04:06,000 --> 01:04:10,559
that the itf has set out for encouraging

1545
01:04:08,799 --> 01:04:14,640
further privacy in the network

1546
01:04:10,559 --> 01:04:16,799
particularly encoding user identifiers

1547
01:04:14,640 --> 01:04:18,799
into an address space so that they must

1548
01:04:16,799 --> 01:04:21,359
be carried through the network

1549
01:04:18,799 --> 01:04:23,200
is is sort of initial to the work that's

1550
01:04:21,359 --> 01:04:24,480
been done in the security area and by

1551
01:04:23,200 --> 01:04:27,118
the iad

1552
01:04:24,480 --> 01:04:27,760
to foster more security in the network

1553
01:04:27,119 --> 01:04:30,480
so i

1554
01:04:27,760 --> 01:04:31,520
i think the best thing to do here is

1555
01:04:30,480 --> 01:04:33,599
really to

1556
01:04:31,520 --> 01:04:35,280
pick one of these use cases you've got

1557
01:04:33,599 --> 01:04:36,480
the satellite use case see if there are

1558
01:04:35,280 --> 01:04:38,240
use cases or

1559
01:04:36,480 --> 01:04:40,880
that you can take one and figure out the

1560
01:04:38,240 --> 01:04:43,439
best tool for that because there may be

1561
01:04:40,880 --> 01:04:46,799
some of these that if you pull them into

1562
01:04:43,440 --> 01:04:48,319
the lego bricks you can you can generate

1563
01:04:46,799 --> 01:04:51,119
something useful from them

1564
01:04:48,319 --> 01:04:52,400
but trying to build all of this with a

1565
01:04:51,119 --> 01:04:55,920
single tool

1566
01:04:52,400 --> 01:04:58,640
uh is is i think both going to be

1567
01:04:55,920 --> 01:04:59,680
uh very difficult and the wrong idea

1568
01:04:58,640 --> 01:05:02,879
thank you very much for

1569
01:04:59,680 --> 01:05:04,799
for your time again thank you

1570
01:05:02,880 --> 01:05:06,720
thank you for comments i guess that

1571
01:05:04,799 --> 01:05:08,880
scenario is just

1572
01:05:06,720 --> 01:05:10,359
located as a limited domain and the age

1573
01:05:08,880 --> 01:05:11,520
of the network so it could be

1574
01:05:10,359 --> 01:05:14,720
experimental

1575
01:05:11,520 --> 01:05:17,839
so uh we try to

1576
01:05:14,720 --> 01:05:18,640
just develop the prototype for the h

1577
01:05:17,839 --> 01:05:21,599
network and

1578
01:05:18,640 --> 01:05:23,598
for the just force more scenarios more

1579
01:05:21,599 --> 01:05:26,720
networks to make it

1580
01:05:23,599 --> 01:05:30,400
to see if it works or not uh we hope it

1581
01:05:26,720 --> 01:05:30,399
could be start from the experiment

1582
01:05:30,640 --> 01:05:34,319
okay so thank you very much uh we'll

1583
01:05:32,880 --> 01:05:36,480
have to stop the meeting here

1584
01:05:34,319 --> 01:05:37,359
unfortunately we didn't have time to to

1585
01:05:36,480 --> 01:05:41,280
go through the

1586
01:05:37,359 --> 01:05:44,078
last uh presentations but uh please

1587
01:05:41,280 --> 01:05:45,359
continue the discussion on the list

1588
01:05:44,079 --> 01:05:47,200
thanks everyone for your

1589
01:05:45,359 --> 01:05:48,720
patience and cooperation with these

1590
01:05:47,200 --> 01:05:52,960
meetings

1591
01:05:48,720 --> 01:06:05,839
thank you thanks so good bye everyone

1592
01:05:52,960 --> 01:06:05,839
thank you

