1
00:00:34,000 --> 00:00:38,399
good morning good evening good afternoon

2
00:00:39,200 --> 00:00:46,640
this is the netconf working group

3
00:00:43,440 --> 00:00:49,039
and um let me

4
00:00:46,640 --> 00:00:49,039
pull up

5
00:00:50,160 --> 00:00:59,839
the slides

6
00:01:00,000 --> 00:01:03,280
hi my house this is captain can you hear

7
00:01:01,600 --> 00:01:05,360
me

8
00:01:03,280 --> 00:01:06,640
i can hear you can you hear me i can

9
00:01:05,360 --> 00:01:09,200
hear you

10
00:01:06,640 --> 00:01:09,200
all right

11
00:01:09,920 --> 00:01:13,840
all right so i am

12
00:01:19,439 --> 00:01:24,479
see your flight do you see this light

13
00:01:24,560 --> 00:01:31,600
looking good

14
00:01:27,759 --> 00:01:33,280
all right um good morning good afternoon

15
00:01:31,600 --> 00:01:36,240
good evening our

16
00:01:33,280 --> 00:01:37,360
very late night for some folks in north

17
00:01:36,240 --> 00:01:40,880
america

18
00:01:37,360 --> 00:01:46,000
uh this is the netcom working group

19
00:01:40,880 --> 00:01:46,000
meeting for 109. um

20
00:01:47,840 --> 00:01:53,200
i it's this is a note well

21
00:01:50,880 --> 00:01:55,119
by participating in this you agree to

22
00:01:53,200 --> 00:01:56,719
follow all the itf procedures and

23
00:01:55,119 --> 00:01:59,040
policies

24
00:01:56,719 --> 00:02:00,240
um if you are aware of any idea of

25
00:01:59,040 --> 00:02:03,200
contributions

26
00:02:00,240 --> 00:02:04,798
that are covered by patents or patent

27
00:02:03,200 --> 00:02:06,960
applications

28
00:02:04,799 --> 00:02:08,800
that are under control you must disclose

29
00:02:06,960 --> 00:02:12,239
that fact

30
00:02:08,800 --> 00:02:15,840
um of course you agree to

31
00:02:12,239 --> 00:02:18,879
um to abide by any itf

32
00:02:15,840 --> 00:02:22,400
rules regulations as that

33
00:02:18,879 --> 00:02:25,280
pertain to an attendee

34
00:02:22,400 --> 00:02:27,360
more information can be found in any of

35
00:02:25,280 --> 00:02:30,959
these links

36
00:02:27,360 --> 00:02:30,959
that you find on this page

37
00:02:32,000 --> 00:02:36,959
just a quick recap on the administrative

38
00:02:35,440 --> 00:02:39,519
trivia

39
00:02:36,959 --> 00:02:40,239
uh kent and i will be trying to monitor

40
00:02:39,519 --> 00:02:44,319
the meet

41
00:02:40,239 --> 00:02:48,400
echo uh chat window or comments

42
00:02:44,319 --> 00:02:50,238
but if you want uh um to present or

43
00:02:48,400 --> 00:02:52,640
have one of us speak into the mic for

44
00:02:50,239 --> 00:02:54,000
you make sure you preface the comment

45
00:02:52,640 --> 00:02:56,079
with mike

46
00:02:54,000 --> 00:02:58,720
in the front so we know that it one of

47
00:02:56,080 --> 00:03:01,920
us needs to take it to the mic

48
00:02:58,720 --> 00:03:03,760
uh the hum window

49
00:03:01,920 --> 00:03:06,000
which is the one we you'll use for

50
00:03:03,760 --> 00:03:08,399
polling will be

51
00:03:06,000 --> 00:03:10,640
is right next to the chat tab on the

52
00:03:08,400 --> 00:03:13,280
left side

53
00:03:10,640 --> 00:03:15,040
uh no need to do any virtual blue sheet

54
00:03:13,280 --> 00:03:16,840
signing meet echo will record your

55
00:03:15,040 --> 00:03:20,319
presence

56
00:03:16,840 --> 00:03:21,120
um when you need to queue up to ask any

57
00:03:20,319 --> 00:03:24,560
questions

58
00:03:21,120 --> 00:03:27,920
uh make sure you raise uh click on the

59
00:03:24,560 --> 00:03:32,159
raise hand icon and

60
00:03:27,920 --> 00:03:34,720
um we will then

61
00:03:32,159 --> 00:03:35,280
call you and put you on the cue to speak

62
00:03:34,720 --> 00:03:37,519
make sure

63
00:03:35,280 --> 00:03:39,440
you unmute yourself by clicking on the

64
00:03:37,519 --> 00:03:44,400
microphone icon

65
00:03:39,440 --> 00:03:44,400
with the play symbol right

66
00:03:45,040 --> 00:03:49,120
jabber uh we'll talk about it on the

67
00:03:47,440 --> 00:03:52,959
next slide

68
00:03:49,120 --> 00:03:56,879
we do encourage minute takers

69
00:03:52,959 --> 00:04:00,640
as many as we can to take the minutes

70
00:03:56,879 --> 00:04:03,840
uh you will find the link for the

71
00:04:00,640 --> 00:04:06,399
kodi minute taker tab on the top side of

72
00:04:03,840 --> 00:04:06,400
your screen

73
00:04:07,680 --> 00:04:15,439
right and for jabber i have this link

74
00:04:12,080 --> 00:04:19,280
to use if you want to set up jabber

75
00:04:15,439 --> 00:04:21,839
and don't ask me too many details

76
00:04:19,279 --> 00:04:24,080
uh the whatever information is there

77
00:04:21,839 --> 00:04:27,280
probably is what does

78
00:04:24,080 --> 00:04:30,080
i use to set up jabber but

79
00:04:27,280 --> 00:04:30,799
also note that meet echo chat window

80
00:04:30,080 --> 00:04:34,400
will cross

81
00:04:30,800 --> 00:04:35,600
post or um they will cross post to each

82
00:04:34,400 --> 00:04:37,520
other so

83
00:04:35,600 --> 00:04:40,400
if you are on jabber we will see it on

84
00:04:37,520 --> 00:04:42,080
the meet echo chat window

85
00:04:40,400 --> 00:04:45,440
logs of course for the meeting will be

86
00:04:42,080 --> 00:04:45,440
available after the meeting

87
00:04:47,040 --> 00:04:53,919
all right status of

88
00:04:50,160 --> 00:04:57,360
the chartered workgroup items

89
00:04:53,919 --> 00:05:00,799
young push notifications um

90
00:04:57,360 --> 00:05:02,720
when passed second uh

91
00:05:00,800 --> 00:05:04,400
last call this has been called the

92
00:05:02,720 --> 00:05:06,400
second time

93
00:05:04,400 --> 00:05:08,000
uh we are still waiting for a pending

94
00:05:06,400 --> 00:05:10,638
author's update

95
00:05:08,000 --> 00:05:12,000
we hope uh we can get the authors to

96
00:05:10,639 --> 00:05:15,520
come back

97
00:05:12,000 --> 00:05:17,840
and finish the document

98
00:05:15,520 --> 00:05:18,799
the crypto types trust anchor and key

99
00:05:17,840 --> 00:05:21,280
store

100
00:05:18,800 --> 00:05:22,320
uh documents are in working group last

101
00:05:21,280 --> 00:05:25,440
call

102
00:05:22,320 --> 00:05:28,320
um i guess ken will give an update

103
00:05:25,440 --> 00:05:30,400
um something about sector review and

104
00:05:28,320 --> 00:05:33,840
author responses

105
00:05:30,400 --> 00:05:35,919
and let him speak to it when he gets the

106
00:05:33,840 --> 00:05:38,400
status update

107
00:05:35,919 --> 00:05:39,280
the client server suite of drafts uh

108
00:05:38,400 --> 00:05:42,400
will go

109
00:05:39,280 --> 00:05:46,000
into working class called once the

110
00:05:42,400 --> 00:05:48,239
um security drafts listed above

111
00:05:46,000 --> 00:05:49,199
clear last call we don't want to

112
00:05:48,240 --> 00:05:52,479
inundate

113
00:05:49,199 --> 00:05:55,600
the working group with more documents

114
00:05:52,479 --> 00:05:59,360
till we have cleared what's on the deck

115
00:05:55,600 --> 00:06:01,680
uh https notification is nearing working

116
00:05:59,360 --> 00:06:06,080
group last call we'll talk about it

117
00:06:01,680 --> 00:06:08,240
when i present that draft

118
00:06:06,080 --> 00:06:11,280
young push notification messages again

119
00:06:08,240 --> 00:06:14,080
uh is waiting on https draft

120
00:06:11,280 --> 00:06:14,479
will resurrect it once we are ready to

121
00:06:14,080 --> 00:06:18,479
send

122
00:06:14,479 --> 00:06:22,318
https notification to last call

123
00:06:18,479 --> 00:06:26,159
um the remaining documents are

124
00:06:22,319 --> 00:06:29,199
all um work in progress

125
00:06:26,160 --> 00:06:31,520
so and we'll hear about them in this

126
00:06:29,199 --> 00:06:31,520
meeting

127
00:06:32,639 --> 00:06:38,080
so here's the agenda i'm sorry

128
00:06:36,000 --> 00:06:39,919
before moving on i'd see our id is in

129
00:06:38,080 --> 00:06:42,800
the queue so

130
00:06:39,919 --> 00:06:43,280
all right i'm sorry i just removed i'm

131
00:06:42,800 --> 00:06:44,720
sorry

132
00:06:43,280 --> 00:06:46,638
robert can i just remove you from the

133
00:06:44,720 --> 00:06:48,160
queue can you go back in that's fine

134
00:06:46,639 --> 00:06:51,039
it's my audio coming through

135
00:06:48,160 --> 00:06:53,120
yes uh so just a quick question on the

136
00:06:51,039 --> 00:06:53,919
meeting notes i went to cody md but it

137
00:06:53,120 --> 00:06:55,840
gives me a

138
00:06:53,919 --> 00:06:57,440
blank new page it looks like the fact

139
00:06:55,840 --> 00:06:59,599
that i've created it

140
00:06:57,440 --> 00:07:01,039
um so i can add some meeting notes to

141
00:06:59,599 --> 00:07:02,159
that but doesn't have the normal

142
00:07:01,039 --> 00:07:04,800
structure

143
00:07:02,160 --> 00:07:05,199
that you would expect maybe that'll need

144
00:07:04,800 --> 00:07:08,560
some

145
00:07:05,199 --> 00:07:08,560
sorting out afterwards unless you know

146
00:07:08,800 --> 00:07:13,440
so that actually may be the case i did

147
00:07:11,120 --> 00:07:16,880
not initialize it with any content

148
00:07:13,440 --> 00:07:20,319
did you mash no i don't maybe rob

149
00:07:16,880 --> 00:07:24,400
i can after i when can start speaking

150
00:07:20,319 --> 00:07:26,560
i can cut and paste the agenda into the

151
00:07:24,400 --> 00:07:27,919
okay then i'll i'll wait for my keynotes

152
00:07:26,560 --> 00:07:31,280
until you do that

153
00:07:27,919 --> 00:07:33,520
well okay okay i just pasted this a bit

154
00:07:31,280 --> 00:07:35,758
okay okay that sounds that's great

155
00:07:33,520 --> 00:07:35,758
thanks

156
00:07:36,160 --> 00:07:39,120
right um

157
00:07:39,280 --> 00:07:44,159
so here's the agenda for the meeting uh

158
00:07:42,479 --> 00:07:46,318
kent will walk through

159
00:07:44,160 --> 00:07:49,759
the status and issues with all the

160
00:07:46,319 --> 00:07:49,759
client server suite of drafts

161
00:07:50,080 --> 00:07:54,479
including also the security set of

162
00:07:52,000 --> 00:07:54,479
drafts

163
00:07:56,000 --> 00:08:00,960
and in order to minimize uh exchanging

164
00:07:59,440 --> 00:08:02,960
too many

165
00:08:00,960 --> 00:08:05,359
screens again we'll continue with the

166
00:08:02,960 --> 00:08:08,638
csr bootstrapping

167
00:08:05,360 --> 00:08:11,360
sctp draft and then um

168
00:08:08,639 --> 00:08:13,759
i'll take over followed by pair and

169
00:08:11,360 --> 00:08:16,639
thomas

170
00:08:13,759 --> 00:08:17,360
the non-chartered items uh we have

171
00:08:16,639 --> 00:08:19,919
penguin

172
00:08:17,360 --> 00:08:22,560
penglio and chen coming back with the

173
00:08:19,919 --> 00:08:26,240
drafts they had presented before

174
00:08:22,560 --> 00:08:29,120
and then we have one new draft from yan

175
00:08:26,240 --> 00:08:30,000
lindman followed by kent and chin

176
00:08:29,120 --> 00:08:33,200
talking about

177
00:08:30,000 --> 00:08:35,039
a list pagination mechanism there is no

178
00:08:33,200 --> 00:08:36,719
draft currently posted

179
00:08:35,039 --> 00:08:38,319
i guess they will give us an update on

180
00:08:36,719 --> 00:08:41,440
that

181
00:08:38,320 --> 00:08:43,120
right any questions uh any agenda

182
00:08:41,440 --> 00:08:46,320
bashing

183
00:08:43,120 --> 00:08:46,320
anything else we want to see

184
00:08:51,040 --> 00:08:59,519
all right with that i'll stop sharing

185
00:08:55,600 --> 00:08:59,519
and bring up

186
00:09:00,080 --> 00:09:09,839
the next swedish

187
00:09:20,839 --> 00:09:23,839
sure

188
00:09:28,640 --> 00:09:31,040
uh yeah

189
00:09:32,720 --> 00:09:39,120
okay thank you

190
00:09:36,160 --> 00:09:42,000
okay so this is the update i don't know

191
00:09:39,120 --> 00:09:42,000
i'm getting echo

192
00:09:43,040 --> 00:09:46,640
this is the update to the client server

193
00:09:45,200 --> 00:09:50,800
suite of drafts

194
00:09:46,640 --> 00:09:53,920
um since itf 108 uh just a

195
00:09:50,800 --> 00:09:55,359
few small high-level updates and crypto

196
00:09:53,920 --> 00:09:58,160
types we added the

197
00:09:55,360 --> 00:09:59,680
password grouping to define a union

198
00:09:58,160 --> 00:10:04,000
between a clear text password

199
00:09:59,680 --> 00:10:05,120
and an encrypted password and um and

200
00:10:04,000 --> 00:10:08,480
then you'll see

201
00:10:05,120 --> 00:10:11,519
uh that grouping is now being used in i

202
00:10:08,480 --> 00:10:14,240
think three of the other drafts

203
00:10:11,519 --> 00:10:14,560
and we also added feature statements for

204
00:10:14,240 --> 00:10:18,000
the

205
00:10:14,560 --> 00:10:20,000
encrypted formats specifically

206
00:10:18,000 --> 00:10:21,760
um password encryption symmetric key

207
00:10:20,000 --> 00:10:24,320
encryption and private

208
00:10:21,760 --> 00:10:26,720
key encryption those are all now um

209
00:10:24,320 --> 00:10:28,079
those are the names of the features

210
00:10:26,720 --> 00:10:29,760
i'm sorry my house she just dropped out

211
00:10:28,079 --> 00:10:30,959
of full screen i'm not sure if you

212
00:10:29,760 --> 00:10:33,839
didn't have this

213
00:10:30,959 --> 00:10:33,839
it's okay

214
00:10:34,079 --> 00:10:37,839
um those are the names of the features

215
00:10:36,240 --> 00:10:42,320
and of course they're controlling

216
00:10:37,839 --> 00:10:44,000
whether or not the server supports

217
00:10:42,320 --> 00:10:45,760
the encrypting of passwords symmetric

218
00:10:44,000 --> 00:10:48,880
keys and private keys

219
00:10:45,760 --> 00:10:52,160
respectively and also

220
00:10:48,880 --> 00:10:56,000
a a certificate expiration

221
00:10:52,160 --> 00:10:57,519
notification we added a feature for that

222
00:10:56,000 --> 00:10:59,040
for for controlling whether or not the

223
00:10:57,519 --> 00:11:00,880
server supports

224
00:10:59,040 --> 00:11:03,519
sending notifications when certificates

225
00:11:00,880 --> 00:11:03,519
are expiring

226
00:11:03,680 --> 00:11:06,880
in trust anchors um and actually really

227
00:11:06,480 --> 00:11:10,000
for

228
00:11:06,880 --> 00:11:11,600
the remaining uh the well

229
00:11:10,000 --> 00:11:13,600
you'll see what the primary thing was is

230
00:11:11,600 --> 00:11:16,720
that there was a sector review

231
00:11:13,600 --> 00:11:21,120
by sandy murphy

232
00:11:16,720 --> 00:11:24,160
on the key store draft but that review

233
00:11:21,120 --> 00:11:25,839
had comments that were applicable to all

234
00:11:24,160 --> 00:11:27,279
the drafts

235
00:11:25,839 --> 00:11:28,880
i guess you might even say to some

236
00:11:27,279 --> 00:11:31,920
degree they were editorial

237
00:11:28,880 --> 00:11:33,839
and so you know the changing and

238
00:11:31,920 --> 00:11:36,079
improving the way the content was being

239
00:11:33,839 --> 00:11:36,959
presented uh was reflected in all the

240
00:11:36,079 --> 00:11:38,560
drafts

241
00:11:36,959 --> 00:11:40,479
so that's essentially the change that

242
00:11:38,560 --> 00:11:43,279
was made in trust anchors

243
00:11:40,480 --> 00:11:44,800
and in all the others as well um also in

244
00:11:43,279 --> 00:11:47,839
the keystore draft

245
00:11:44,800 --> 00:11:50,000
um their section four which is

246
00:11:47,839 --> 00:11:51,360
entitled encrypting keys for

247
00:11:50,000 --> 00:11:54,560
configuration

248
00:11:51,360 --> 00:11:57,839
was pretty much entirely rewritten

249
00:11:54,560 --> 00:11:57,839
uh to

250
00:11:58,720 --> 00:12:02,000
present things in a more in a manner

251
00:12:00,880 --> 00:12:10,800
that was more acceptable

252
00:12:02,000 --> 00:12:13,920
to sector okay next slide please

253
00:12:10,800 --> 00:12:17,279
um moving on we have

254
00:12:13,920 --> 00:12:18,639
a tcp client server uh so here was the

255
00:12:17,279 --> 00:12:22,160
case in the socks

256
00:12:18,639 --> 00:12:23,360
gsa api we modified it uh there was a

257
00:12:22,160 --> 00:12:25,279
field for a password

258
00:12:23,360 --> 00:12:26,720
so we modified it to use the password

259
00:12:25,279 --> 00:12:28,639
grouping and

260
00:12:26,720 --> 00:12:30,000
now it's the case that the password may

261
00:12:28,639 --> 00:12:32,639
be in clear text or

262
00:12:30,000 --> 00:12:34,639
encrypted there in that in that

263
00:12:32,639 --> 00:12:36,560
configuration data model

264
00:12:34,639 --> 00:12:38,399
we also added there was missing

265
00:12:36,560 --> 00:12:41,199
mandatory true uh

266
00:12:38,399 --> 00:12:42,480
in that particular node when you

267
00:12:41,200 --> 00:12:42,800
selected whether or not it was going to

268
00:12:42,480 --> 00:12:45,200
be

269
00:12:42,800 --> 00:12:45,839
us a kind of socks a password-based

270
00:12:45,200 --> 00:12:48,160
socks

271
00:12:45,839 --> 00:12:49,920
it didn't have it that the username and

272
00:12:48,160 --> 00:12:53,680
password were actually mandatory

273
00:12:49,920 --> 00:12:56,880
leaves so that got um added

274
00:12:53,680 --> 00:12:58,479
i forget now who mentioned it but there

275
00:12:56,880 --> 00:13:01,600
was a missing registration

276
00:12:58,480 --> 00:13:04,160
for the tcp common

277
00:13:01,600 --> 00:13:07,360
module so we added that in the iana

278
00:13:04,160 --> 00:13:10,240
consideration section

279
00:13:07,360 --> 00:13:12,000
similarly in the ssh client server draft

280
00:13:10,240 --> 00:13:14,240
there's the modification to

281
00:13:12,000 --> 00:13:15,920
the in the any client the ssh client

282
00:13:14,240 --> 00:13:19,279
when you're configuring for

283
00:13:15,920 --> 00:13:22,000
password-based authentication that

284
00:13:19,279 --> 00:13:23,519
password was previously only it could

285
00:13:22,000 --> 00:13:24,880
previously only be

286
00:13:23,519 --> 00:13:27,120
clear text and now it's using the

287
00:13:24,880 --> 00:13:27,439
password grouping so either clear text

288
00:13:27,120 --> 00:13:31,120
or

289
00:13:27,440 --> 00:13:34,480
encrypted password can be configured

290
00:13:31,120 --> 00:13:36,480
in uh tls client server uh

291
00:13:34,480 --> 00:13:39,279
the in the both the client

292
00:13:36,480 --> 00:13:42,480
authentication and server authentication

293
00:13:39,279 --> 00:13:45,439
for psks um

294
00:13:42,480 --> 00:13:46,399
it's got converted from being a presence

295
00:13:45,440 --> 00:13:50,240
container

296
00:13:46,399 --> 00:13:51,680
to a leaf of type empty

297
00:13:50,240 --> 00:13:53,920
there was a number of fixed needs that

298
00:13:51,680 --> 00:13:58,079
got cleaned up

299
00:13:53,920 --> 00:14:00,000
and that was the main update okay in the

300
00:13:58,079 --> 00:14:02,719
http client server

301
00:14:00,000 --> 00:14:03,920
draft there was also a uh some fixed

302
00:14:02,720 --> 00:14:06,560
means that got removed

303
00:14:03,920 --> 00:14:08,240
in the http client you know when you're

304
00:14:06,560 --> 00:14:10,000
using basic authentication there's a

305
00:14:08,240 --> 00:14:11,360
password it was previously just

306
00:14:10,000 --> 00:14:14,560
clear text now it's using the password

307
00:14:11,360 --> 00:14:14,560
grouping so it can be encrypted

308
00:14:14,800 --> 00:14:22,959
and strangely oh okay i see it now

309
00:14:17,839 --> 00:14:24,800
um hovering over the screen it it

310
00:14:22,959 --> 00:14:26,638
blocks the text of what's being

311
00:14:24,800 --> 00:14:29,359
presented

312
00:14:26,639 --> 00:14:30,399
in the uh both the net conf incline and

313
00:14:29,360 --> 00:14:33,360
client server drafts

314
00:14:30,399 --> 00:14:34,079
the the same sector review comments were

315
00:14:33,360 --> 00:14:36,720
reflected there

316
00:14:34,079 --> 00:14:36,719
next slide please

317
00:14:39,120 --> 00:14:44,000
um so i don't normally spend a lot of

318
00:14:41,199 --> 00:14:45,680
time on

319
00:14:44,000 --> 00:14:47,760
the changes that were made since the

320
00:14:45,680 --> 00:14:49,120
last ietf meeting

321
00:14:47,760 --> 00:14:51,040
because there's usually a lot more to

322
00:14:49,120 --> 00:14:54,240
talk about but in this

323
00:14:51,040 --> 00:14:57,760
case there isn't there was

324
00:14:54,240 --> 00:15:00,959
just the sector review from sandy

325
00:14:57,760 --> 00:15:04,399
and then um jav

326
00:15:00,959 --> 00:15:07,119
near uh submitted a sector review for

327
00:15:04,399 --> 00:15:08,399
the trust tour draft which i've yet to

328
00:15:07,120 --> 00:15:12,320
work through

329
00:15:08,399 --> 00:15:13,680
um though the changes um the comments

330
00:15:12,320 --> 00:15:14,079
that were made there were fairly high

331
00:15:13,680 --> 00:15:16,399
level

332
00:15:14,079 --> 00:15:17,279
and didn't appear that they would have

333
00:15:16,399 --> 00:15:20,720
any

334
00:15:17,279 --> 00:15:24,720
uh significant impact to the drafts

335
00:15:20,720 --> 00:15:26,560
uh in general um we've been waiting

336
00:15:24,720 --> 00:15:28,000
and we i just putting on my chair hat

337
00:15:26,560 --> 00:15:31,119
for a soaked moment adam

338
00:15:28,000 --> 00:15:34,160
and i have been waiting for these

339
00:15:31,120 --> 00:15:35,040
first three drafts to stabilize from a

340
00:15:34,160 --> 00:15:38,399
sector

341
00:15:35,040 --> 00:15:40,639
perspective and also from a yang doctor

342
00:15:38,399 --> 00:15:43,519
perspective i think there's

343
00:15:40,639 --> 00:15:44,240
a rein doctor review outstanding for

344
00:15:43,519 --> 00:15:47,519
these drafts

345
00:15:44,240 --> 00:15:49,920
so we're hoping to get that

346
00:15:47,519 --> 00:15:50,639
those updates sort of completed for

347
00:15:49,920 --> 00:15:54,000
these first

348
00:15:50,639 --> 00:15:56,639
three core drafts and then

349
00:15:54,000 --> 00:15:59,120
whatever cascading changes would occur

350
00:15:56,639 --> 00:16:01,680
such as the ones you saw already the

351
00:15:59,120 --> 00:16:02,959
sandy sector review had cascading impact

352
00:16:01,680 --> 00:16:04,719
to all the other drafts

353
00:16:02,959 --> 00:16:07,199
so any other cascading impacts would be

354
00:16:04,720 --> 00:16:09,759
completed at which time

355
00:16:07,199 --> 00:16:11,120
all the remaining drafts would be ready

356
00:16:09,759 --> 00:16:12,959
for last call actually in my view

357
00:16:11,120 --> 00:16:16,399
they're already ready for last call

358
00:16:12,959 --> 00:16:18,000
sam's any potential

359
00:16:16,399 --> 00:16:19,680
cascading changes that would need to be

360
00:16:18,000 --> 00:16:22,480
made to them

361
00:16:19,680 --> 00:16:24,880
as per the outstanding sector and yang

362
00:16:22,480 --> 00:16:27,680
doctor reviews

363
00:16:24,880 --> 00:16:29,279
and that might be it next slide i think

364
00:16:27,680 --> 00:16:37,839
this is it

365
00:16:29,279 --> 00:16:37,839
yeah that is it are there any questions

366
00:16:48,839 --> 00:16:51,839
so

367
00:16:53,440 --> 00:16:58,480
right if they're none can we move to the

368
00:16:55,920 --> 00:16:58,479
next one

369
00:17:02,839 --> 00:17:06,720
absolutely

370
00:17:04,799 --> 00:17:08,879
all right so kent up what i'm finding is

371
00:17:06,720 --> 00:17:09,919
that my windows gets taken over

372
00:17:08,880 --> 00:17:13,600
completely

373
00:17:09,919 --> 00:17:15,919
if i go into full screen

374
00:17:13,599 --> 00:17:15,918
um

375
00:17:17,119 --> 00:17:21,760
i don't think you need to go to full

376
00:17:18,640 --> 00:17:21,760
screen um

377
00:17:22,559 --> 00:17:27,119
okay let me try to see if i can share it

378
00:17:24,720 --> 00:17:33,520
without going full screen

379
00:17:27,119 --> 00:17:36,559
and see if it

380
00:17:33,520 --> 00:17:39,120
so that's what it looks like

381
00:17:36,559 --> 00:17:41,280
right and that doesn't not look good it

382
00:17:39,120 --> 00:17:44,000
was better before windows

383
00:17:41,280 --> 00:17:46,399
okay see do you have an ability to do

384
00:17:44,000 --> 00:17:48,640
play in window

385
00:17:46,400 --> 00:17:51,520
as opposed to full screen play in full

386
00:17:48,640 --> 00:17:55,039
screen versus playing window

387
00:17:51,520 --> 00:17:58,840
play no i don't

388
00:17:55,039 --> 00:18:01,840
okay i think the full screen then is

389
00:17:58,840 --> 00:18:01,840
better

390
00:18:05,919 --> 00:18:09,679
can you do you want to go full screen

391
00:18:10,960 --> 00:18:18,480
yeah i see it it looks good thank you

392
00:18:15,120 --> 00:18:21,520
this presentation regards an update um

393
00:18:18,480 --> 00:18:24,400
of course we just adopted this draft in

394
00:18:21,520 --> 00:18:25,760
uh well actually it was one of the

395
00:18:24,400 --> 00:18:28,559
remember we did

396
00:18:25,760 --> 00:18:29,360
uh the chairs the metconf chairs did a

397
00:18:28,559 --> 00:18:33,120
uh

398
00:18:29,360 --> 00:18:36,000
adoption suitability um a number of

399
00:18:33,120 --> 00:18:37,439
uh email threads one you know i think

400
00:18:36,000 --> 00:18:39,600
for

401
00:18:37,440 --> 00:18:40,880
nine drafts that were potentially queued

402
00:18:39,600 --> 00:18:42,320
up for adoption

403
00:18:40,880 --> 00:18:44,000
and this was one of the one of the

404
00:18:42,320 --> 00:18:47,120
drafts that went through that

405
00:18:44,000 --> 00:18:50,320
and uh it was adopted and

406
00:18:47,120 --> 00:18:53,520
so immediately i posted the zero zero

407
00:18:50,320 --> 00:18:54,320
which was identical to the zero one um

408
00:18:53,520 --> 00:18:57,520
from before

409
00:18:54,320 --> 00:19:00,559
the the k watts watson the id um

410
00:18:57,520 --> 00:19:03,360
and that's really up until

411
00:19:00,559 --> 00:19:05,440
monday just a couple days ago that was

412
00:19:03,360 --> 00:19:08,959
the officially published version

413
00:19:05,440 --> 00:19:11,679
um but then i was i did a

414
00:19:08,960 --> 00:19:13,039
i did a grep for the word fix me and dvd

415
00:19:11,679 --> 00:19:14,400
and i noticed that i had actually left

416
00:19:13,039 --> 00:19:17,679
an editorial note

417
00:19:14,400 --> 00:19:18,960
sorry next slide please um i noticed an

418
00:19:17,679 --> 00:19:22,080
editorial note

419
00:19:18,960 --> 00:19:24,400
and uh found myself needing to

420
00:19:22,080 --> 00:19:25,439
make a quick fix to that and that's why

421
00:19:24,400 --> 00:19:29,280
i posted a zero

422
00:19:25,440 --> 00:19:30,720
one um in that there's in the security

423
00:19:29,280 --> 00:19:35,280
considerations section

424
00:19:30,720 --> 00:19:38,559
so you the update that you saw posted on

425
00:19:35,280 --> 00:19:40,799
monday was just to for that zero one

426
00:19:38,559 --> 00:19:43,360
update

427
00:19:40,799 --> 00:19:45,200
uh sorry for that for that edit to fix

428
00:19:43,360 --> 00:19:46,320
that mall that editorial comment that i

429
00:19:45,200 --> 00:19:47,919
left in the

430
00:19:46,320 --> 00:19:52,480
securities considerations section next

431
00:19:47,919 --> 00:19:57,280
slide please

432
00:19:52,480 --> 00:19:57,280
um okay so

433
00:19:57,840 --> 00:20:02,480
when when this draft was presented last

434
00:20:01,120 --> 00:20:04,559
time

435
00:20:02,480 --> 00:20:06,159
we had said that the authors had made

436
00:20:04,559 --> 00:20:09,440
every effort to

437
00:20:06,159 --> 00:20:11,200
for the zero uh for the draft to

438
00:20:09,440 --> 00:20:12,640
basically be ready for last call it was

439
00:20:11,200 --> 00:20:15,280
already ready for last call we

440
00:20:12,640 --> 00:20:16,400
had taken the time and effort to to do

441
00:20:15,280 --> 00:20:18,960
everything

442
00:20:16,400 --> 00:20:21,039
including security considerations and

443
00:20:18,960 --> 00:20:23,679
considerations and everything

444
00:20:21,039 --> 00:20:24,400
we thought we were done and ready but

445
00:20:23,679 --> 00:20:27,280
then

446
00:20:24,400 --> 00:20:28,320
um one of the authors had an exchange

447
00:20:27,280 --> 00:20:31,960
with

448
00:20:28,320 --> 00:20:34,960
another itf contributor from

449
00:20:31,960 --> 00:20:35,520
a different company and not not someone

450
00:20:34,960 --> 00:20:38,720
who's

451
00:20:35,520 --> 00:20:42,240
commonly in the netcomfort group

452
00:20:38,720 --> 00:20:46,240
regarding crmf

453
00:20:42,240 --> 00:20:48,480
which is a a microsoft format

454
00:20:46,240 --> 00:20:49,760
stands for certificate request message

455
00:20:48,480 --> 00:20:50,559
format it's not actually it's not

456
00:20:49,760 --> 00:20:52,320
technically

457
00:20:50,559 --> 00:20:55,600
a microsoft format anymore it's an itf

458
00:20:52,320 --> 00:20:59,360
format but it was originally

459
00:20:55,600 --> 00:21:00,559
supported by microsoft and they wanted

460
00:20:59,360 --> 00:21:04,479
to ensure

461
00:21:00,559 --> 00:21:07,039
that crmf was being supported

462
00:21:04,480 --> 00:21:08,640
and so we thought that we were going to

463
00:21:07,039 --> 00:21:11,200
need to do an update for that

464
00:21:08,640 --> 00:21:13,600
but to the second bullet point it turns

465
00:21:11,200 --> 00:21:17,120
out that the draft already supports

466
00:21:13,600 --> 00:21:20,080
supporting csrs um with the

467
00:21:17,120 --> 00:21:20,719
crmfs and in particular this the draft

468
00:21:20,080 --> 00:21:23,918
supports

469
00:21:20,720 --> 00:21:26,960
csrs in three formats uh the first being

470
00:21:23,919 --> 00:21:30,480
your standard uh p10 format

471
00:21:26,960 --> 00:21:35,039
uh pkcs number 10 format

472
00:21:30,480 --> 00:21:38,799
and then also cmp and cmc

473
00:21:35,039 --> 00:21:42,000
and both cmp and cmc

474
00:21:38,799 --> 00:21:45,440
themselves support

475
00:21:42,000 --> 00:21:48,080
both p10 and crmf

476
00:21:45,440 --> 00:21:49,120
and hence already the draft supports

477
00:21:48,080 --> 00:21:53,840
crms

478
00:21:49,120 --> 00:21:57,280
vis-a-vis its support for cnp and cmc

479
00:21:53,840 --> 00:22:00,158
so with that resolved

480
00:21:57,280 --> 00:22:00,879
um in in in essence there was no update

481
00:22:00,159 --> 00:22:03,200
to the draft

482
00:22:00,880 --> 00:22:04,880
it it turns out uh other than that

483
00:22:03,200 --> 00:22:06,080
editorial emit that i mentioned in the

484
00:22:04,880 --> 00:22:09,120
previous slide

485
00:22:06,080 --> 00:22:11,600
um the draft was in fact

486
00:22:09,120 --> 00:22:12,399
complete and done and ready for last

487
00:22:11,600 --> 00:22:15,439
call

488
00:22:12,400 --> 00:22:16,880
previously however to bullet point

489
00:22:15,440 --> 00:22:20,720
number three

490
00:22:16,880 --> 00:22:23,919
the same comment from that offer author

491
00:22:20,720 --> 00:22:26,159
sorry itf contributor in a different

492
00:22:23,919 --> 00:22:28,080
working group spun off a number of some

493
00:22:26,159 --> 00:22:30,400
other drafts so you'll notice

494
00:22:28,080 --> 00:22:32,720
in the lamps working group a couple

495
00:22:30,400 --> 00:22:35,919
drafts by russ housley

496
00:22:32,720 --> 00:22:38,720
on updating crmf

497
00:22:35,919 --> 00:22:39,840
algorithms and yet another one for

498
00:22:38,720 --> 00:22:43,679
updating

499
00:22:39,840 --> 00:22:47,039
aes gmac algorithm so these

500
00:22:43,679 --> 00:22:50,559
uh other drafts that are not

501
00:22:47,039 --> 00:22:54,240
netcomp specific um sort of complete

502
00:22:50,559 --> 00:22:57,280
the the response that was being

503
00:22:54,240 --> 00:22:58,960
made by the other itf contributor

504
00:22:57,280 --> 00:23:01,120
and uh so it's out of scope to this

505
00:22:58,960 --> 00:23:03,840
draft

506
00:23:01,120 --> 00:23:03,840
next slide please

507
00:23:04,640 --> 00:23:12,400
and so beyond that there is in fact no

508
00:23:09,039 --> 00:23:14,000
um remaining update to be made if uh

509
00:23:12,400 --> 00:23:16,240
if there's any comments or questions or

510
00:23:14,000 --> 00:23:19,840
concerns regarding this work

511
00:23:16,240 --> 00:23:22,559
um please mention now

512
00:23:19,840 --> 00:23:23,678
uh if not then i believe this this draft

513
00:23:22,559 --> 00:23:25,520
is ready although i should say the

514
00:23:23,679 --> 00:23:36,320
authors believe the straps is ready for

515
00:23:25,520 --> 00:23:38,639
working group classical

516
00:23:36,320 --> 00:23:40,559
i see a comment in the chat window from

517
00:23:38,640 --> 00:23:44,159
rich congratulating for

518
00:23:40,559 --> 00:23:44,158
the update thank you

519
00:23:44,960 --> 00:23:51,279
i think we're done then and so

520
00:23:48,320 --> 00:23:52,639
i think here mahesh is where i'm going

521
00:23:51,279 --> 00:24:05,840
to take over being

522
00:23:52,640 --> 00:24:05,840
slide presenter

523
00:24:16,840 --> 00:24:19,840
this

524
00:24:30,840 --> 00:24:33,840
that's

525
00:24:34,559 --> 00:24:36,799
okay

526
00:24:39,760 --> 00:24:45,120
all right so i will talk about updates

527
00:24:43,200 --> 00:24:48,000
to the https

528
00:24:45,120 --> 00:24:50,000
based transport for subscribe

529
00:24:48,000 --> 00:24:53,679
notifications draft

530
00:24:50,000 --> 00:24:56,880
um there were two updates uh one

531
00:24:53,679 --> 00:24:58,400
just a quick um editorial not an extra

532
00:24:56,880 --> 00:25:01,600
but a quick update

533
00:24:58,400 --> 00:25:03,360
which i'll talk about um in

534
00:25:01,600 --> 00:25:07,199
oh six that i'll talk about on the

535
00:25:03,360 --> 00:25:07,199
slides next slide please

536
00:25:12,080 --> 00:25:18,080
all right so um updates since o4

537
00:25:15,600 --> 00:25:18,879
really there are only two main changes

538
00:25:18,080 --> 00:25:22,240
um

539
00:25:18,880 --> 00:25:23,919
the last update uh to zero six

540
00:25:22,240 --> 00:25:26,240
uh really updated the security

541
00:25:23,919 --> 00:25:30,039
considerations section

542
00:25:26,240 --> 00:25:33,279
to uh bring it into compliance with

543
00:25:30,039 --> 00:25:35,600
rx8407 and the second

544
00:25:33,279 --> 00:25:36,400
change is regarding examples for

545
00:25:35,600 --> 00:25:42,639
receiving of

546
00:25:36,400 --> 00:25:44,960
event notifications um next slide please

547
00:25:42,640 --> 00:25:46,240
so i think there were comments received

548
00:25:44,960 --> 00:25:48,960
in the last itf

549
00:25:46,240 --> 00:25:50,400
meaning that maybe the draft could do

550
00:25:48,960 --> 00:25:53,440
well with

551
00:25:50,400 --> 00:25:54,880
an example of for receiving of event

552
00:25:53,440 --> 00:25:58,640
notifications

553
00:25:54,880 --> 00:26:01,760
it was an example for json

554
00:25:58,640 --> 00:26:04,880
um we did uh add

555
00:26:01,760 --> 00:26:08,000
another example for xml the

556
00:26:04,880 --> 00:26:11,279
corresponding example actually for xml

557
00:26:08,000 --> 00:26:12,400
um in the drum so uh with those two

558
00:26:11,279 --> 00:26:15,440
examples

559
00:26:12,400 --> 00:26:17,600
and the fact that we have uh

560
00:26:15,440 --> 00:26:18,960
completed the security considerations

561
00:26:17,600 --> 00:26:21,039
section

562
00:26:18,960 --> 00:26:25,279
uh let's go to actually i don't have

563
00:26:21,039 --> 00:26:28,000
this end of the slide

564
00:26:25,279 --> 00:26:28,640
yeah uh so with those two changes we

565
00:26:28,000 --> 00:26:31,440
believe

566
00:26:28,640 --> 00:26:32,400
uh that this document is also ready for

567
00:26:31,440 --> 00:26:36,720
working group

568
00:26:32,400 --> 00:26:38,640
last call but rather than us

569
00:26:36,720 --> 00:26:40,480
teacher is calling for it we'll both

570
00:26:38,640 --> 00:26:44,080
step down and

571
00:26:40,480 --> 00:26:47,039
um see if

572
00:26:44,080 --> 00:26:47,600
rob might take over at this point and

573
00:26:47,039 --> 00:26:53,840
see if

574
00:26:47,600 --> 00:26:53,840
he wants to do a pull or not

575
00:26:53,919 --> 00:26:57,120
uh yes hopefully my audio is coming

576
00:26:55,760 --> 00:27:00,480
through so i think the first question

577
00:26:57,120 --> 00:27:01,678
is is anyone um

578
00:27:00,480 --> 00:27:03,520
do they don't have any comments or

579
00:27:01,679 --> 00:27:06,159
questions on this before i do a poll to

580
00:27:03,520 --> 00:27:09,360
see if people are happy for me to

581
00:27:06,159 --> 00:27:09,360
check for work in glasgow

582
00:27:14,559 --> 00:27:17,918
so otherwise then i don't see any

583
00:27:16,400 --> 00:27:21,120
comments in the queue

584
00:27:17,919 --> 00:27:23,120
can one of you do kentucky do a poll

585
00:27:21,120 --> 00:27:25,199
run a poll just to check so the question

586
00:27:23,120 --> 00:27:28,239
is do other people happy for this to go

587
00:27:25,200 --> 00:27:28,240
to working group last call

588
00:27:29,120 --> 00:27:35,840
all right so please

589
00:27:48,000 --> 00:27:52,240
so so just so people where they know

590
00:27:50,640 --> 00:27:54,960
there's tabs on the left

591
00:27:52,240 --> 00:27:56,640
um it's just under the hand icon looks

592
00:27:54,960 --> 00:27:58,880
like three little

593
00:27:56,640 --> 00:28:00,840
bars and you can either click to raise

594
00:27:58,880 --> 00:28:06,080
your hand or do not raise your hand

595
00:28:00,840 --> 00:28:06,080
or or choose to do nothing

596
00:28:06,159 --> 00:28:09,760
i think i started the poll but i have a

597
00:28:08,399 --> 00:28:13,120
typo so

598
00:28:09,760 --> 00:28:17,440
is it started yes yep okay

599
00:28:13,120 --> 00:28:20,559
it says wtls instead of wg

600
00:28:17,440 --> 00:28:23,279
lsc sorry but

601
00:28:20,559 --> 00:28:24,480
anyway so we've got 10 people that say

602
00:28:23,279 --> 00:28:26,159
they're happy if this goes to working

603
00:28:24,480 --> 00:28:28,960
with last call there's no one who's

604
00:28:26,159 --> 00:28:31,279
chosen not to raise their hand out of 34

605
00:28:28,960 --> 00:28:33,919
participants so it's 11. i think

606
00:28:31,279 --> 00:28:35,120
i think that's fine so i think we can

607
00:28:33,919 --> 00:28:36,640
yeah it's going up slightly so i think

608
00:28:35,120 --> 00:28:38,639
we can take this to

609
00:28:36,640 --> 00:28:40,000
first to do to kick off the working last

610
00:28:38,640 --> 00:28:42,320
call i will

611
00:28:40,000 --> 00:28:43,120
um work with kent mahesh to work out

612
00:28:42,320 --> 00:28:44,240
exactly how

613
00:28:43,120 --> 00:28:46,879
what the process should be in this

614
00:28:44,240 --> 00:28:46,880
particular case

615
00:28:49,679 --> 00:28:59,840
thank you thanks

616
00:28:52,880 --> 00:28:59,840
uh rob

617
00:29:10,840 --> 00:29:13,840
go

618
00:29:17,120 --> 00:29:22,158
so kent are you going with the next deck

619
00:29:19,760 --> 00:29:22,158
how did

620
00:29:24,880 --> 00:29:31,919
yes i was just saying if pierre could

621
00:29:28,080 --> 00:29:33,279
um come to the queue to

622
00:29:31,919 --> 00:29:35,840
bring up i'll bring up their

623
00:29:33,279 --> 00:29:37,760
presentation right now

624
00:29:35,840 --> 00:29:39,600
it does take a little bit of effort to

625
00:29:37,760 --> 00:29:40,879
switch presentations so that's why

626
00:29:39,600 --> 00:29:45,360
there's

627
00:29:40,880 --> 00:29:48,720
a delay you have to load it and then

628
00:29:45,360 --> 00:29:51,760
ask to share the application window so

629
00:29:48,720 --> 00:29:53,360
here um yeah i guess you don't

630
00:29:51,760 --> 00:29:54,879
need to share your screen so i'm going

631
00:29:53,360 --> 00:29:57,120
to cancel but

632
00:29:54,880 --> 00:29:57,120
um

633
00:30:03,919 --> 00:30:08,799
okay and now

634
00:30:07,120 --> 00:30:11,649
i have it loaded i'm just about to share

635
00:30:08,799 --> 00:30:15,309
the application window

636
00:30:11,650 --> 00:30:15,309
[Music]

637
00:30:15,840 --> 00:30:18,879
okay should look good

638
00:30:16,720 --> 00:30:22,559
[Music]

639
00:30:18,880 --> 00:30:24,720
yep thanks so i'm pierre from

640
00:30:22,559 --> 00:30:27,360
insalium and i'm going to present an

641
00:30:24,720 --> 00:30:29,440
update on the udp native draft

642
00:30:27,360 --> 00:30:30,559
joint work with guanine and tian ran

643
00:30:29,440 --> 00:30:33,039
from huawei

644
00:30:30,559 --> 00:30:35,039
thomas from swisscom and parlo from ntt

645
00:30:33,039 --> 00:30:35,600
and a bunch of developers who worked on

646
00:30:35,039 --> 00:30:38,559
this

647
00:30:35,600 --> 00:30:40,959
notably last week during the cartoon so

648
00:30:38,559 --> 00:30:43,918
next slide please smash

649
00:30:40,960 --> 00:30:45,039
so i'll make a quick reminder of the

650
00:30:43,919 --> 00:30:48,080
goal of the draft

651
00:30:45,039 --> 00:30:51,279
then i'll show the main difference

652
00:30:48,080 --> 00:30:53,600
with the 0-0

653
00:30:51,279 --> 00:30:55,360
trying to cover the most important

654
00:30:53,600 --> 00:30:57,120
comments that we received on the mailing

655
00:30:55,360 --> 00:30:59,840
list since then

656
00:30:57,120 --> 00:31:01,678
then the main point is to shut the my

657
00:30:59,840 --> 00:31:04,000
mic and let you guys discuss

658
00:31:01,679 --> 00:31:06,320
and take notes on this so next slide

659
00:31:04,000 --> 00:31:06,320
please

660
00:31:06,720 --> 00:31:13,039
so the

661
00:31:09,919 --> 00:31:14,480
main use case presented on this draft is

662
00:31:13,039 --> 00:31:16,320
to allow for

663
00:31:14,480 --> 00:31:17,600
routers with distributed architectures

664
00:31:16,320 --> 00:31:21,519
to publish

665
00:31:17,600 --> 00:31:25,199
massive amounts of networking data

666
00:31:21,519 --> 00:31:28,399
mostly traffic volume information

667
00:31:25,200 --> 00:31:30,880
the point is to have line cars directly

668
00:31:28,399 --> 00:31:34,158
send out the data towards the collector

669
00:31:30,880 --> 00:31:34,799
and for this we had a requirement to

670
00:31:34,159 --> 00:31:38,880
have a

671
00:31:34,799 --> 00:31:42,559
low performance impact hence the use of

672
00:31:38,880 --> 00:31:45,039
of a lightweight udp based protocol

673
00:31:42,559 --> 00:31:46,799
this draft is to be used with thomas

674
00:31:45,039 --> 00:31:49,600
with the draft that thomas is going to

675
00:31:46,799 --> 00:31:51,120
give an update on later which is the

676
00:31:49,600 --> 00:31:52,639
subscription to distributed

677
00:31:51,120 --> 00:31:55,918
notifications

678
00:31:52,640 --> 00:31:58,640
uh next slide please manage so

679
00:31:55,919 --> 00:32:00,320
our first set of changes based on the

680
00:31:58,640 --> 00:32:03,600
comments we received

681
00:32:00,320 --> 00:32:05,519
in the last month we renamed

682
00:32:03,600 --> 00:32:07,439
for obvious reason the fragmentation

683
00:32:05,519 --> 00:32:10,159
option into segmentation option because

684
00:32:07,440 --> 00:32:13,279
that's basically what we do

685
00:32:10,159 --> 00:32:16,480
in order to be consistent with

686
00:32:13,279 --> 00:32:20,080
the netconf distributed notif draft

687
00:32:16,480 --> 00:32:22,480
i changed the generator id term into

688
00:32:20,080 --> 00:32:25,120
observation domain id

689
00:32:22,480 --> 00:32:27,519
then we reworked the applicability

690
00:32:25,120 --> 00:32:28,279
section part of the draft to align with

691
00:32:27,519 --> 00:32:31,600
the

692
00:32:28,279 --> 00:32:35,200
rfc85 on udp usage guidelines

693
00:32:31,600 --> 00:32:37,439
mostly what we covered is congestion

694
00:32:35,200 --> 00:32:40,960
control or lag thereof

695
00:32:37,440 --> 00:32:43,679
dealing with mtu and lack of reliability

696
00:32:40,960 --> 00:32:44,240
of the draft basically what we did is to

697
00:32:43,679 --> 00:32:48,640
show

698
00:32:44,240 --> 00:32:51,679
that the context in which this protocol

699
00:32:48,640 --> 00:32:51,679
would be deployed

700
00:32:52,559 --> 00:32:56,000
is aligned with the recommendations that

701
00:32:54,640 --> 00:32:59,440
are proposed that are

702
00:32:56,000 --> 00:33:01,760
defined in the rfc uh so

703
00:32:59,440 --> 00:33:03,519
i did not list all the strict

704
00:33:01,760 --> 00:33:04,879
recommendations and guidelines of the

705
00:33:03,519 --> 00:33:07,519
rfc but i

706
00:33:04,880 --> 00:33:09,360
i've been sticking to the actual

707
00:33:07,519 --> 00:33:12,480
guidelines for the context

708
00:33:09,360 --> 00:33:15,039
of application of this protocol next

709
00:33:12,480 --> 00:33:18,399
slide please

710
00:33:15,039 --> 00:33:20,960
then we proposed some changes to

711
00:33:18,399 --> 00:33:23,199
the notification message header so what

712
00:33:20,960 --> 00:33:24,000
you can see first is that we stole a bit

713
00:33:23,200 --> 00:33:27,440
from the

714
00:33:24,000 --> 00:33:29,840
version field to

715
00:33:27,440 --> 00:33:30,880
introduce what we called an encoding

716
00:33:29,840 --> 00:33:34,320
space

717
00:33:30,880 --> 00:33:37,440
flag when it is unset

718
00:33:34,320 --> 00:33:40,000
it means that the encoding type field

719
00:33:37,440 --> 00:33:42,000
is standard meaning that what you the

720
00:33:40,000 --> 00:33:45,440
value that is in there

721
00:33:42,000 --> 00:33:47,679
is defining an encoding that is standard

722
00:33:45,440 --> 00:33:49,360
and when this flag is set it means that

723
00:33:47,679 --> 00:33:51,919
we are falling into

724
00:33:49,360 --> 00:33:54,080
private encoding tab space what we mean

725
00:33:51,919 --> 00:33:56,559
by private is for example gpb

726
00:33:54,080 --> 00:33:59,039
that is not a standard and what would go

727
00:33:56,559 --> 00:34:00,158
there is any encoding type that a vendor

728
00:33:59,039 --> 00:34:04,080
would support

729
00:34:00,159 --> 00:34:06,480
that that is not a standard and that is

730
00:34:04,080 --> 00:34:07,678
the vendor would designed on its own

731
00:34:06,480 --> 00:34:10,879
which encoding type

732
00:34:07,679 --> 00:34:14,480
it would decide to use uh i agree that

733
00:34:10,879 --> 00:34:16,879
relying on the vendor documentation to

734
00:34:14,480 --> 00:34:19,040
figure out what your favorite vendor is

735
00:34:16,879 --> 00:34:21,118
sending to you would

736
00:34:19,040 --> 00:34:22,800
feel a bit archaic so we have been

737
00:34:21,119 --> 00:34:23,359
having discussion on whether we would

738
00:34:22,800 --> 00:34:25,440
need uh

739
00:34:23,359 --> 00:34:26,799
netconf to be able to retrieve a

740
00:34:25,440 --> 00:34:29,040
description on what

741
00:34:26,800 --> 00:34:31,440
uh the vendor is using as an encoding

742
00:34:29,040 --> 00:34:34,399
type this is open for discussion

743
00:34:31,440 --> 00:34:37,040
me personally i don't care too much

744
00:34:34,399 --> 00:34:38,879
about non-standard encoding types so

745
00:34:37,040 --> 00:34:41,040
i'm really really open to that

746
00:34:38,879 --> 00:34:42,960
discussion

747
00:34:41,040 --> 00:34:45,040
another comment that i received on the

748
00:34:42,960 --> 00:34:46,800
header was

749
00:34:45,040 --> 00:34:48,719
some people were challenging the need to

750
00:34:46,800 --> 00:34:50,320
put the observation domain id and the

751
00:34:48,719 --> 00:34:53,839
message id

752
00:34:50,320 --> 00:34:56,560
in the header itself by making the

753
00:34:53,839 --> 00:34:57,040
actually correct command that those

754
00:34:56,560 --> 00:35:00,400
fields

755
00:34:57,040 --> 00:35:01,520
could be found in the payload the main

756
00:35:00,400 --> 00:35:03,920
one

757
00:35:01,520 --> 00:35:04,880
critical reason to do that is that i

758
00:35:03,920 --> 00:35:07,839
would like to

759
00:35:04,880 --> 00:35:09,119
not have the big data people that are

760
00:35:07,839 --> 00:35:12,000
further downstream

761
00:35:09,119 --> 00:35:13,680
uh the communication channel to have to

762
00:35:12,000 --> 00:35:16,800
deal with segmentation

763
00:35:13,680 --> 00:35:19,440
so i would like to be able to

764
00:35:16,800 --> 00:35:20,480
reassemble messages that have been

765
00:35:19,440 --> 00:35:22,560
segmented

766
00:35:20,480 --> 00:35:24,320
before passing them further down the

767
00:35:22,560 --> 00:35:26,560
line towards big data

768
00:35:24,320 --> 00:35:27,440
and so in order to do that as the

769
00:35:26,560 --> 00:35:30,480
segmentation

770
00:35:27,440 --> 00:35:31,599
option is defined within the scope of a

771
00:35:30,480 --> 00:35:34,560
given message

772
00:35:31,599 --> 00:35:36,400
received by a given generator i need

773
00:35:34,560 --> 00:35:38,240
those two fields in order to

774
00:35:36,400 --> 00:35:39,599
do a consistent job there so that's the

775
00:35:38,240 --> 00:35:41,680
main reason

776
00:35:39,599 --> 00:35:42,960
other reason another reason is quality

777
00:35:41,680 --> 00:35:46,078
of life when i

778
00:35:42,960 --> 00:35:49,200
have those fields up there i can

779
00:35:46,079 --> 00:35:53,040
easily do load balancing based on by

780
00:35:49,200 --> 00:35:55,040
preserving consistency on the generator

781
00:35:53,040 --> 00:35:57,759
that is being done so i can do load

782
00:35:55,040 --> 00:36:01,680
balancing based on the on the generator

783
00:35:57,760 --> 00:36:05,200
and that easiest distributed uses of the

784
00:36:01,680 --> 00:36:08,560
of the collector i received

785
00:36:05,200 --> 00:36:11,680
another comment on the fact that

786
00:36:08,560 --> 00:36:13,680
we currently use version 0

787
00:36:11,680 --> 00:36:15,520
and that we should use version one so

788
00:36:13,680 --> 00:36:17,680
that we make sure that the vendor is

789
00:36:15,520 --> 00:36:20,240
actually the producer of those messages

790
00:36:17,680 --> 00:36:20,720
is actually setting that field i'm fine

791
00:36:20,240 --> 00:36:22,959
with that

792
00:36:20,720 --> 00:36:23,839
i thought it does not change much to be

793
00:36:22,960 --> 00:36:26,160
honest

794
00:36:23,839 --> 00:36:27,599
uh if you don't mind i would like to

795
00:36:26,160 --> 00:36:31,440
keep it to zero

796
00:36:27,599 --> 00:36:33,760
until uh the header is uh

797
00:36:31,440 --> 00:36:35,200
has converged to a stable state so i

798
00:36:33,760 --> 00:36:37,040
would suggest that we do that

799
00:36:35,200 --> 00:36:38,480
on the version of the draft just before

800
00:36:37,040 --> 00:36:40,320
working group last call

801
00:36:38,480 --> 00:36:41,599
if you have strong opinion on that i'm

802
00:36:40,320 --> 00:36:44,880
okay to change it

803
00:36:41,599 --> 00:36:45,599
no problem uh there was quite a bit of

804
00:36:44,880 --> 00:36:47,760
discussion

805
00:36:45,599 --> 00:36:48,640
on how to deal with this private space

806
00:36:47,760 --> 00:36:51,839
so i already

807
00:36:48,640 --> 00:36:53,118
said that we can either rely on vendor

808
00:36:51,839 --> 00:36:56,320
documentation

809
00:36:53,119 --> 00:37:00,079
or write a netconf draft to

810
00:36:56,320 --> 00:37:02,400
retrieve that information uh i i would

811
00:37:00,079 --> 00:37:03,200
like you to discuss this and and

812
00:37:02,400 --> 00:37:05,119
honestly

813
00:37:03,200 --> 00:37:06,799
we'll follow we'll follow the decision

814
00:37:05,119 --> 00:37:08,960
on the working group i will not fight

815
00:37:06,800 --> 00:37:10,400
against any decision that you guys would

816
00:37:08,960 --> 00:37:14,000
make on this

817
00:37:10,400 --> 00:37:17,200
um sure can't

818
00:37:14,000 --> 00:37:20,000
if you want to go ahead

819
00:37:17,200 --> 00:37:20,640
discount as a contributor regarding the

820
00:37:20,000 --> 00:37:24,480
version

821
00:37:20,640 --> 00:37:26,240
being zero um i do recommend it

822
00:37:24,480 --> 00:37:27,520
i'd recommend that in fact there is a

823
00:37:26,240 --> 00:37:30,640
separate rfc

824
00:37:27,520 --> 00:37:33,680
i don't know the number of hand but

825
00:37:30,640 --> 00:37:35,598
there is a ietf recommendation that any

826
00:37:33,680 --> 00:37:38,960
enumerated field

827
00:37:35,599 --> 00:37:42,800
both the zero and the max bit

828
00:37:38,960 --> 00:37:46,240
values are reserved values um

829
00:37:42,800 --> 00:37:49,359
and so yes both zero as well as

830
00:37:46,240 --> 00:37:50,479
uh i guess seven the value seven should

831
00:37:49,359 --> 00:37:55,040
be reserved fields

832
00:37:50,480 --> 00:37:57,839
uh values for us if possible okay so

833
00:37:55,040 --> 00:38:01,040
okay so what i will do i will put it to

834
00:37:57,839 --> 00:38:04,640
one right away or if i'm not complying

835
00:38:01,040 --> 00:38:06,560
and so and uh for testing repurposes etc

836
00:38:04,640 --> 00:38:09,279
i will use zero internally but

837
00:38:06,560 --> 00:38:09,920
i will put it to one uh in the draft

838
00:38:09,280 --> 00:38:13,520
okay

839
00:38:09,920 --> 00:38:13,520
that's does that work for you

840
00:38:13,760 --> 00:38:17,040
and let's see my hash is in the queue go

841
00:38:15,839 --> 00:38:20,160
ahead

842
00:38:17,040 --> 00:38:22,079
right so um thank actually came to ask

843
00:38:20,160 --> 00:38:23,040
one of the questions i was going to ask

844
00:38:22,079 --> 00:38:26,320
uh

845
00:38:23,040 --> 00:38:30,800
just what he suggested um

846
00:38:26,320 --> 00:38:34,320
the question on the private space is um

847
00:38:30,800 --> 00:38:37,280
obviously with the discussion around how

848
00:38:34,320 --> 00:38:38,720
you're going to learn of the encoding

849
00:38:37,280 --> 00:38:41,599
that is being

850
00:38:38,720 --> 00:38:42,480
is there a negotiation mechanism that

851
00:38:41,599 --> 00:38:45,520
you would have

852
00:38:42,480 --> 00:38:46,720
then to find out what encoding is being

853
00:38:45,520 --> 00:38:49,759
supported

854
00:38:46,720 --> 00:38:53,279
even if it is a vendor specific no

855
00:38:49,760 --> 00:38:56,000
what i was trying to to say is that

856
00:38:53,280 --> 00:38:56,640
if you want we can define one okay i'm

857
00:38:56,000 --> 00:39:00,640
okay to

858
00:38:56,640 --> 00:39:01,520
to provide a draft a companion draft to

859
00:39:00,640 --> 00:39:04,640
do that

860
00:39:01,520 --> 00:39:06,960
okay personally i i don't

861
00:39:04,640 --> 00:39:07,680
care really about non-standard encoding

862
00:39:06,960 --> 00:39:10,960
but

863
00:39:07,680 --> 00:39:12,879
if if that's needed if we consider here

864
00:39:10,960 --> 00:39:16,160
as a working group that

865
00:39:12,880 --> 00:39:18,480
uh basic

866
00:39:16,160 --> 00:39:20,480
archaic vendor documentation would not

867
00:39:18,480 --> 00:39:21,839
work then we'll do the work of providing

868
00:39:20,480 --> 00:39:24,960
this mechanism

869
00:39:21,839 --> 00:39:27,119
okay so

870
00:39:24,960 --> 00:39:28,960
if you want to pull the working group on

871
00:39:27,119 --> 00:39:30,079
how they want to deal with that i'm fine

872
00:39:28,960 --> 00:39:33,599
with that

873
00:39:30,079 --> 00:39:34,000
currently the uh people i'm interacting

874
00:39:33,599 --> 00:39:36,079
with

875
00:39:34,000 --> 00:39:37,040
care about the standard ones mostly

876
00:39:36,079 --> 00:39:39,680
right and so

877
00:39:37,040 --> 00:39:41,680
this was the reason why we made this

878
00:39:39,680 --> 00:39:43,359
change was to deal with the fact that

879
00:39:41,680 --> 00:39:45,919
gpb is not uh

880
00:39:43,359 --> 00:39:46,720
will be supported by vendors and is not

881
00:39:45,920 --> 00:39:48,880
standard

882
00:39:46,720 --> 00:39:50,640
and so it was feeling weird to have it

883
00:39:48,880 --> 00:39:53,119
be listed in the draft

884
00:39:50,640 --> 00:39:54,160
and given a code point in the standard

885
00:39:53,119 --> 00:39:56,320
encoding field

886
00:39:54,160 --> 00:39:58,319
and so that was our way of dealing with

887
00:39:56,320 --> 00:40:00,160
that if you want to change this i'm

888
00:39:58,320 --> 00:40:02,400
also open to this we had also for

889
00:40:00,160 --> 00:40:06,319
example a suggestion to uh

890
00:40:02,400 --> 00:40:09,040
to have to not use a space flag but to

891
00:40:06,319 --> 00:40:10,160
reserve the last values of the encoding

892
00:40:09,040 --> 00:40:12,160
type field

893
00:40:10,160 --> 00:40:14,960
and and let vendors use the research

894
00:40:12,160 --> 00:40:17,598
space i wanted to make things more

895
00:40:14,960 --> 00:40:20,240
clear you know you see and so and not

896
00:40:17,599 --> 00:40:23,440
have to use reserved non-documented

897
00:40:20,240 --> 00:40:26,479
bits and so i i it was i did that for

898
00:40:23,440 --> 00:40:28,560
clarity reasons if you want me to

899
00:40:26,480 --> 00:40:30,319
roll this back i'm fine with this i just

900
00:40:28,560 --> 00:40:34,480
would like to know

901
00:40:30,319 --> 00:40:38,000
yeah all right

902
00:40:34,480 --> 00:40:41,760
promise you next

903
00:40:38,000 --> 00:40:43,680
can you hear me yes okay perfect

904
00:40:41,760 --> 00:40:44,960
i just want to raise that this is a

905
00:40:43,680 --> 00:40:48,000
general problem

906
00:40:44,960 --> 00:40:51,839
uh do we need to care about uh

907
00:40:48,000 --> 00:40:55,280
private space or not if yes then uh

908
00:40:51,839 --> 00:40:57,040
both transport protocols http s notif

909
00:40:55,280 --> 00:40:59,920
and udp know this

910
00:40:57,040 --> 00:41:01,599
should support it otherwise if the

911
00:40:59,920 --> 00:41:04,319
working group thinks that

912
00:41:01,599 --> 00:41:08,640
this needs not to be supported then i

913
00:41:04,319 --> 00:41:08,640
think it can be removed on this draft

914
00:41:10,640 --> 00:41:15,680
all right um andy

915
00:41:17,359 --> 00:41:23,920
uh hi i would prefer to

916
00:41:20,480 --> 00:41:26,960
take that s bit out and and put

917
00:41:23,920 --> 00:41:31,040
a gp b back back

918
00:41:26,960 --> 00:41:32,720
in the standard enumeration

919
00:41:31,040 --> 00:41:34,720
i don't i don't know i think that's the

920
00:41:32,720 --> 00:41:37,839
easier problem to solve

921
00:41:34,720 --> 00:41:38,720
than than all the complexity being added

922
00:41:37,839 --> 00:41:41,119
to descrip

923
00:41:38,720 --> 00:41:42,399
discover proprietary encodings and

924
00:41:41,119 --> 00:41:46,000
everything

925
00:41:42,400 --> 00:41:48,960
i agree with you completely if

926
00:41:46,000 --> 00:41:50,800
in three months no one tells me that gpb

927
00:41:48,960 --> 00:41:51,200
is not standard and so it should not be

928
00:41:50,800 --> 00:41:53,280
there

929
00:41:51,200 --> 00:41:55,040
you see my point because the auras were

930
00:41:53,280 --> 00:41:57,200
going to start working in circle

931
00:41:55,040 --> 00:41:59,040
you see where i am there but i agree

932
00:41:57,200 --> 00:41:59,598
with you on d i completely agree with

933
00:41:59,040 --> 00:42:01,279
you

934
00:41:59,599 --> 00:42:03,760
i'm just scared about what's gonna

935
00:42:01,280 --> 00:42:06,960
happen in three months

936
00:42:03,760 --> 00:42:08,240
well i don't know uh what you know ad

937
00:42:06,960 --> 00:42:11,359
reviews and other

938
00:42:08,240 --> 00:42:15,439
later reviews are gonna produce

939
00:42:11,359 --> 00:42:17,598
as as objections but um

940
00:42:15,440 --> 00:42:18,800
i don't know if there's a problem with

941
00:42:17,599 --> 00:42:21,200
with how it's be

942
00:42:18,800 --> 00:42:23,520
uh referenced or or something like that

943
00:42:21,200 --> 00:42:27,680
if it's a documentation

944
00:42:23,520 --> 00:42:30,720
or not so

945
00:42:27,680 --> 00:42:32,720
and then hopefully uh you just put the

946
00:42:30,720 --> 00:42:35,919
enumeration back

947
00:42:32,720 --> 00:42:38,560
and it'll be important for

948
00:42:35,920 --> 00:42:39,680
people to work with it my original

949
00:42:38,560 --> 00:42:42,880
action was just the

950
00:42:39,680 --> 00:42:46,078
the the there was no really reference

951
00:42:42,880 --> 00:42:48,400
uh given document

952
00:42:46,079 --> 00:42:50,640
not that it shouldn't be there yeah but

953
00:42:48,400 --> 00:42:51,920
if i give a reference it will have to be

954
00:42:50,640 --> 00:42:54,640
an informative one

955
00:42:51,920 --> 00:42:55,599
and so the prop i will give one if we

956
00:42:54,640 --> 00:42:57,680
put it back there

957
00:42:55,599 --> 00:42:59,119
but it's gonna be informative and so

958
00:42:57,680 --> 00:43:00,160
it's going to be the same comments

959
00:42:59,119 --> 00:43:03,440
further than the

960
00:43:00,160 --> 00:43:05,279
standardization line i'm afraid okay

961
00:43:03,440 --> 00:43:07,839
well i still think the aspect should be

962
00:43:05,280 --> 00:43:07,839
taken out

963
00:43:08,240 --> 00:43:15,200
i don't mind i really don't mind

964
00:43:11,599 --> 00:43:16,240
actually you might be right that if we

965
00:43:15,200 --> 00:43:18,399
take it out and

966
00:43:16,240 --> 00:43:20,319
and and use the approach where we

967
00:43:18,400 --> 00:43:22,800
reserve some values

968
00:43:20,319 --> 00:43:24,400
uh that would be used for private use

969
00:43:22,800 --> 00:43:26,240
there would not be any reference to

970
00:43:24,400 --> 00:43:27,839
non-standard encoding

971
00:43:26,240 --> 00:43:29,680
but then i'm afraid that the question

972
00:43:27,839 --> 00:43:32,078
the question will once again be raised

973
00:43:29,680 --> 00:43:34,720
how how does an operator realize in a

974
00:43:32,079 --> 00:43:38,560
multi-vendor context and multi-uh

975
00:43:34,720 --> 00:43:39,839
release context uh which box is sending

976
00:43:38,560 --> 00:43:42,720
what i mean right this is the main

977
00:43:39,839 --> 00:43:46,000
problem with non-standard stuff so right

978
00:43:42,720 --> 00:43:47,439
and and also following the lines of

979
00:43:46,000 --> 00:43:50,720
thomas commands

980
00:43:47,440 --> 00:43:52,480
i i hope we will be consistent with

981
00:43:50,720 --> 00:43:53,759
other transport mechanisms that are

982
00:43:52,480 --> 00:43:55,520
being used for

983
00:43:53,760 --> 00:43:57,760
and that which face the same problem as

984
00:43:55,520 --> 00:43:57,759
well

985
00:43:58,960 --> 00:44:03,920
okay i would really have to

986
00:44:02,000 --> 00:44:09,119
like to have robert's opinion on this

987
00:44:03,920 --> 00:44:11,359
actually as a needy

988
00:44:09,119 --> 00:44:12,400
um i i wasn't necessarily going to give

989
00:44:11,359 --> 00:44:14,960
an opinion as an

990
00:44:12,400 --> 00:44:15,920
ad on this um i think potentially some

991
00:44:14,960 --> 00:44:17,520
further discussion

992
00:44:15,920 --> 00:44:19,280
i i had a question really as an

993
00:44:17,520 --> 00:44:22,720
individual that is

994
00:44:19,280 --> 00:44:23,520
is he's just saying could be sufficient

995
00:44:22,720 --> 00:44:25,520
enough

996
00:44:23,520 --> 00:44:27,119
in terms of knowing what that encoding

997
00:44:25,520 --> 00:44:29,200
actually would be because

998
00:44:27,119 --> 00:44:30,560
i assumed that with yang there's there's

999
00:44:29,200 --> 00:44:32,160
a couple of different ways that you can

1000
00:44:30,560 --> 00:44:34,799
code this data in

1001
00:44:32,160 --> 00:44:36,799
yang you can either have a generic gpb

1002
00:44:34,800 --> 00:44:38,880
encoding of gang data

1003
00:44:36,800 --> 00:44:40,319
or in some cases i thought some people

1004
00:44:38,880 --> 00:44:44,160
use specific

1005
00:44:40,319 --> 00:44:47,040
generated gpp

1006
00:44:44,160 --> 00:44:48,319
models generated from the gang data so

1007
00:44:47,040 --> 00:44:52,079
is there

1008
00:44:48,319 --> 00:44:53,680
an issue there that gpp is is not the

1009
00:44:52,079 --> 00:44:55,440
issue about whether the encoding is

1010
00:44:53,680 --> 00:44:56,879
known or not but actually what will that

1011
00:44:55,440 --> 00:44:59,920
data look like

1012
00:44:56,880 --> 00:45:01,520
um and maybe that could be solved by

1013
00:44:59,920 --> 00:45:03,520
being more specific about exactly what

1014
00:45:01,520 --> 00:45:05,040
the encoding is but i

1015
00:45:03,520 --> 00:45:06,960
i do worry about having something that

1016
00:45:05,040 --> 00:45:08,560
says it's done in this way but it's

1017
00:45:06,960 --> 00:45:12,640
unspecified

1018
00:45:08,560 --> 00:45:13,680
yeah the i completely agree with you the

1019
00:45:12,640 --> 00:45:15,440
good thing is that

1020
00:45:13,680 --> 00:45:17,200
for this draft it does not matter

1021
00:45:15,440 --> 00:45:20,560
because i would like to answer

1022
00:45:17,200 --> 00:45:22,480
with not my problem answer because to me

1023
00:45:20,560 --> 00:45:24,240
i'm packing messages that i i'm

1024
00:45:22,480 --> 00:45:24,720
reassembling messages when they are

1025
00:45:24,240 --> 00:45:26,799
split

1026
00:45:24,720 --> 00:45:28,799
at the transport layer with this draft

1027
00:45:26,800 --> 00:45:30,079
and then i'm passing it down towards the

1028
00:45:28,800 --> 00:45:32,319
big data people

1029
00:45:30,079 --> 00:45:33,760
which know when they register when they

1030
00:45:32,319 --> 00:45:37,279
use a distributed

1031
00:45:33,760 --> 00:45:37,920
uh subscription uh to go to connect to

1032
00:45:37,280 --> 00:45:41,599
the

1033
00:45:37,920 --> 00:45:43,200
box which deal at that on that side on

1034
00:45:41,599 --> 00:45:46,720
how they are going to do that

1035
00:45:43,200 --> 00:45:51,118
so thomas you may want to

1036
00:45:46,720 --> 00:45:51,118
to agree with me or not on this point

1037
00:45:55,280 --> 00:46:00,400
yeah what i just wanted to

1038
00:45:58,400 --> 00:46:01,839
to mention here and of course i agree

1039
00:46:00,400 --> 00:46:04,319
here uh is

1040
00:46:01,839 --> 00:46:05,839
maybe another option could be to have in

1041
00:46:04,319 --> 00:46:07,839
the standard space

1042
00:46:05,839 --> 00:46:10,160
uh have a fourth option where we just

1043
00:46:07,839 --> 00:46:13,200
say otter

1044
00:46:10,160 --> 00:46:14,078
that might solve the problem as well or

1045
00:46:13,200 --> 00:46:17,118
then

1046
00:46:14,079 --> 00:46:18,240
yeah the question is and we need i think

1047
00:46:17,119 --> 00:46:21,680
feedback from ad

1048
00:46:18,240 --> 00:46:24,720
here is if you can have like uh

1049
00:46:21,680 --> 00:46:27,759
in this area like where we just do gpb

1050
00:46:24,720 --> 00:46:30,640
or any we can list any

1051
00:46:27,760 --> 00:46:31,359
non-standard encoding there and in the

1052
00:46:30,640 --> 00:46:35,279
end it's

1053
00:46:31,359 --> 00:46:43,839
up to the network operator to figure out

1054
00:46:35,280 --> 00:46:43,839
how to to decode those messages

1055
00:46:44,720 --> 00:46:50,879
all right okay as a contributor

1056
00:46:48,079 --> 00:46:52,480
as uh there was a comment made about the

1057
00:46:50,880 --> 00:46:55,200
uh https notif

1058
00:46:52,480 --> 00:46:56,240
draft uh it it would also need to

1059
00:46:55,200 --> 00:46:59,759
support

1060
00:46:56,240 --> 00:47:03,040
private um encoding if this were

1061
00:46:59,760 --> 00:47:05,520
necessary and i just wanted to state

1062
00:47:03,040 --> 00:47:08,800
that i believe that's already the case

1063
00:47:05,520 --> 00:47:08,800
speak in two ways

1064
00:47:08,839 --> 00:47:15,839
first if uh if if uh

1065
00:47:12,640 --> 00:47:18,960
there's using http media types

1066
00:47:15,839 --> 00:47:21,599
and it does you know define

1067
00:47:18,960 --> 00:47:24,400
us or i should say use the standard

1068
00:47:21,599 --> 00:47:26,480
media types for

1069
00:47:24,400 --> 00:47:27,920
json coded young data and xml encoded

1070
00:47:26,480 --> 00:47:30,079
yang data

1071
00:47:27,920 --> 00:47:31,760
and but of course they could you know

1072
00:47:30,079 --> 00:47:34,400
private media types could be

1073
00:47:31,760 --> 00:47:35,280
generated and created and used and then

1074
00:47:34,400 --> 00:47:38,480
secondly

1075
00:47:35,280 --> 00:47:40,960
for those for when subscribe

1076
00:47:38,480 --> 00:47:42,079
notifications are being used and they're

1077
00:47:40,960 --> 00:47:45,040
being configured

1078
00:47:42,079 --> 00:47:46,160
for configured subscribe notifications

1079
00:47:45,040 --> 00:47:49,520
there's a yang

1080
00:47:46,160 --> 00:47:52,640
identity called uh encoding

1081
00:47:49,520 --> 00:47:55,200
i think and uh currently there's

1082
00:47:52,640 --> 00:47:56,558
sub identities for json and xml but of

1083
00:47:55,200 --> 00:47:59,680
course um

1084
00:47:56,559 --> 00:48:01,119
private or other standard identities sub

1085
00:47:59,680 --> 00:48:02,319
identities could be defined as well

1086
00:48:01,119 --> 00:48:05,200
so i think i think it's already

1087
00:48:02,319 --> 00:48:08,400
supported there uh if uh

1088
00:48:05,200 --> 00:48:08,399
to encode private

1089
00:48:08,559 --> 00:48:13,440
encodings for http for notifications for

1090
00:48:10,720 --> 00:48:13,439
https native

1091
00:48:15,920 --> 00:48:20,960
all right i think it

1092
00:48:19,040 --> 00:48:22,800
we may want to have a not me probably

1093
00:48:20,960 --> 00:48:23,280
offline another random discussion on

1094
00:48:22,800 --> 00:48:26,720
this

1095
00:48:23,280 --> 00:48:28,240
yeah if you don't mind so here why don't

1096
00:48:26,720 --> 00:48:31,919
you finish your presentation

1097
00:48:28,240 --> 00:48:35,839
you have two minutes sure go ahead

1098
00:48:31,920 --> 00:48:35,839
next slide please

1099
00:48:36,559 --> 00:48:40,079
okay i thought so i saw robin keep for a

1100
00:48:38,640 --> 00:48:41,598
second and my hush we do

1101
00:48:40,079 --> 00:48:43,520
we're running ahead of schedule i think

1102
00:48:41,599 --> 00:48:48,480
so yeah

1103
00:48:43,520 --> 00:48:51,680
okay last last update uh

1104
00:48:48,480 --> 00:48:54,400
we shrunk the segment number space to 16

1105
00:48:51,680 --> 00:48:56,720
bits because we were not needing 32

1106
00:48:54,400 --> 00:48:58,240
and then uh i tried to bring more

1107
00:48:56,720 --> 00:48:59,839
clarity on

1108
00:48:58,240 --> 00:49:01,439
boxes that would rely on ip

1109
00:48:59,839 --> 00:49:04,400
fragmentation instead of

1110
00:49:01,440 --> 00:49:06,079
supporting the segmentation option uh i

1111
00:49:04,400 --> 00:49:09,920
would like to i will further

1112
00:49:06,079 --> 00:49:11,200
i will uh simplify this even more and

1113
00:49:09,920 --> 00:49:13,440
basically do

1114
00:49:11,200 --> 00:49:15,040
like eip fix and say we should not do

1115
00:49:13,440 --> 00:49:17,839
fragmentation

1116
00:49:15,040 --> 00:49:18,640
i was just wanting to try and not allow

1117
00:49:17,839 --> 00:49:20,480
this

1118
00:49:18,640 --> 00:49:21,759
so say you can do this but not by

1119
00:49:20,480 --> 00:49:24,079
default uh

1120
00:49:21,760 --> 00:49:25,920
based on what we discovered last week

1121
00:49:24,079 --> 00:49:27,839
during the hackathon etc

1122
00:49:25,920 --> 00:49:30,240
i would like to change this and simply

1123
00:49:27,839 --> 00:49:32,400
say you should not do fragmentation

1124
00:49:30,240 --> 00:49:34,319
then i received a bunch of comments on

1125
00:49:32,400 --> 00:49:37,359
the relationship between the

1126
00:49:34,319 --> 00:49:39,279
last bit flag of this option and the

1127
00:49:37,359 --> 00:49:42,000
sequence number

1128
00:49:39,280 --> 00:49:43,839
mostly by andy i agree with all of them

1129
00:49:42,000 --> 00:49:46,079
and the request for clarification will

1130
00:49:43,839 --> 00:49:49,680
be done so

1131
00:49:46,079 --> 00:49:52,160
you had you were asking for details and

1132
00:49:49,680 --> 00:49:53,040
i agree with you it it wasn't clear on

1133
00:49:52,160 --> 00:49:55,440
some parts

1134
00:49:53,040 --> 00:49:56,640
and and the changes you were asking i

1135
00:49:55,440 --> 00:49:58,559
agree with all of them so

1136
00:49:56,640 --> 00:50:02,078
it will you will find them in the show

1137
00:49:58,559 --> 00:50:02,079
too next slide please

1138
00:50:10,839 --> 00:50:16,319
next

1139
00:50:13,280 --> 00:50:16,319
you can go to next slide

1140
00:50:18,800 --> 00:50:22,079
okay so the current uh implementation

1141
00:50:21,040 --> 00:50:24,000
status is

1142
00:50:22,079 --> 00:50:25,119
so during the academy we were working in

1143
00:50:24,000 --> 00:50:27,200
an environment where

1144
00:50:25,119 --> 00:50:30,400
within swisscom lab we had a huawei

1145
00:50:27,200 --> 00:50:33,680
implementation of this version

1146
00:50:30,400 --> 00:50:35,280
so we were following dash01 based on the

1147
00:50:33,680 --> 00:50:36,720
feedback that i will receive i will

1148
00:50:35,280 --> 00:50:39,920
update to the comment and

1149
00:50:36,720 --> 00:50:41,200
on the collector slide aside

1150
00:50:39,920 --> 00:50:43,280
we have a go long version of the

1151
00:50:41,200 --> 00:50:44,319
connector and a c version of the

1152
00:50:43,280 --> 00:50:47,760
collector

1153
00:50:44,319 --> 00:50:51,040
uh the c version is being validated and

1154
00:50:47,760 --> 00:50:54,000
integrated within a pmh gt right now

1155
00:50:51,040 --> 00:50:56,558
for our next steps we will probably

1156
00:50:54,000 --> 00:50:58,480
provide a ddls support for this

1157
00:50:56,559 --> 00:51:00,079
it's not our top priority because in all

1158
00:50:58,480 --> 00:51:04,240
the deployment scenarios we

1159
00:51:00,079 --> 00:51:05,920
we won't need it and then i will

1160
00:51:04,240 --> 00:51:07,359
apply the changes that you guys

1161
00:51:05,920 --> 00:51:08,880
recommend based on the

1162
00:51:07,359 --> 00:51:10,960
on the discussions on the mailing list

1163
00:51:08,880 --> 00:51:13,280
that we will have based on this meeting

1164
00:51:10,960 --> 00:51:13,280
thanks

1165
00:51:18,640 --> 00:51:26,160
all right any questions

1166
00:51:23,119 --> 00:51:29,119
i don't see anyone in the queue

1167
00:51:26,160 --> 00:51:29,118
and anyway

1168
00:51:29,200 --> 00:51:33,040
rob was in the queue before and while

1169
00:51:31,200 --> 00:51:34,960
i'm doing slide transitions maybe

1170
00:51:33,040 --> 00:51:36,480
he can come back and if he still has

1171
00:51:34,960 --> 00:51:39,440
something to say

1172
00:51:36,480 --> 00:51:40,800
okay go ahead joe uh yes uh it's

1173
00:51:39,440 --> 00:51:42,800
actually on the previous issue

1174
00:51:40,800 --> 00:51:44,079
if we still have time i'm i'm not sure

1175
00:51:42,800 --> 00:51:44,960
whether we need to discuss it further

1176
00:51:44,079 --> 00:51:48,240
now i think it needs

1177
00:51:44,960 --> 00:51:49,920
further discussion on the list and

1178
00:51:48,240 --> 00:51:52,240
potential get resolved during working

1179
00:51:49,920 --> 00:51:53,440
with last call i think the question was

1180
00:51:52,240 --> 00:51:56,000
really about

1181
00:51:53,440 --> 00:51:57,520
whether the icg would accept a protocol

1182
00:51:56,000 --> 00:51:58,800
where this is unspecified and the answer

1183
00:51:57,520 --> 00:52:01,759
is i don't know i think it will just

1184
00:51:58,800 --> 00:52:04,800
depend on the ad reviews at the time

1185
00:52:01,760 --> 00:52:06,720
um or the icg reviews when that happens

1186
00:52:04,800 --> 00:52:08,160
from my point of view i don't think it

1187
00:52:06,720 --> 00:52:10,160
makes sense to make this overly

1188
00:52:08,160 --> 00:52:11,759
complicated that as long as we can

1189
00:52:10,160 --> 00:52:13,920
communicate the intent

1190
00:52:11,760 --> 00:52:15,760
sufficiently enough that's that's

1191
00:52:13,920 --> 00:52:18,079
probably good enough but i need to look

1192
00:52:15,760 --> 00:52:19,680
at these a bit more closely again to

1193
00:52:18,079 --> 00:52:22,480
actually give a definitive answer

1194
00:52:19,680 --> 00:52:24,640
does that so yes that helps a lot so

1195
00:52:22,480 --> 00:52:25,280
what i would suggest is i remove those

1196
00:52:24,640 --> 00:52:28,319
bit

1197
00:52:25,280 --> 00:52:29,680
and i reserve the last few values of on

1198
00:52:28,319 --> 00:52:32,640
them so that i don't need

1199
00:52:29,680 --> 00:52:33,839
any reference to anything and i and i

1200
00:52:32,640 --> 00:52:36,480
and we proceed this way

1201
00:52:33,839 --> 00:52:37,359
and so that i don't and i follow in this

1202
00:52:36,480 --> 00:52:39,200
comment that

1203
00:52:37,359 --> 00:52:43,359
this stuff is too complicated for no

1204
00:52:39,200 --> 00:52:43,359
reason do i do that in the show too

1205
00:52:44,319 --> 00:52:48,240
so just to understand are you saying

1206
00:52:46,160 --> 00:52:52,000
that you wouldn't then have a gpb

1207
00:52:48,240 --> 00:52:53,279
encoding that you would i would not but

1208
00:52:52,000 --> 00:52:55,440
i would reserve

1209
00:52:53,280 --> 00:52:57,520
values and i would not create a private

1210
00:52:55,440 --> 00:53:00,160
space but i would just reserve values

1211
00:52:57,520 --> 00:53:01,759
and if we and so that the the header

1212
00:53:00,160 --> 00:53:04,399
will no longer change

1213
00:53:01,760 --> 00:53:06,880
and if based on the review we can leave

1214
00:53:04,400 --> 00:53:08,559
a reference to a value being gpb then we

1215
00:53:06,880 --> 00:53:11,920
just leave it there and that will

1216
00:53:08,559 --> 00:53:15,440
just be a value being uh fixed okay

1217
00:53:11,920 --> 00:53:16,559
and if there's a gpb won't work because

1218
00:53:15,440 --> 00:53:18,480
it's not standard

1219
00:53:16,559 --> 00:53:20,960
then i leave it in the reserved space

1220
00:53:18,480 --> 00:53:22,800
that is the usual blur response that

1221
00:53:20,960 --> 00:53:25,040
that we define at the atf for this

1222
00:53:22,800 --> 00:53:28,160
reason so i don't over complicate

1223
00:53:25,040 --> 00:53:31,200
stuff with this s bit i leave

1224
00:53:28,160 --> 00:53:32,640
room for gpb in the standard space if we

1225
00:53:31,200 --> 00:53:36,558
get review

1226
00:53:32,640 --> 00:53:38,640
further down the iesg review

1227
00:53:36,559 --> 00:53:40,400
that says but gpb is not a standard you

1228
00:53:38,640 --> 00:53:42,799
can put you cannot put it there

1229
00:53:40,400 --> 00:53:44,800
then i will leave gpb being used in the

1230
00:53:42,800 --> 00:53:46,720
reserved space that i will uh that i

1231
00:53:44,800 --> 00:53:48,800
would define

1232
00:53:46,720 --> 00:53:50,558
so i don't think it matters whether gpb

1233
00:53:48,800 --> 00:53:51,760
is a standard i don't think that unless

1234
00:53:50,559 --> 00:53:53,680
it'll be a problem

1235
00:53:51,760 --> 00:53:55,599
um from that perspective i think it's

1236
00:53:53,680 --> 00:53:58,399
just a matter of whether

1237
00:53:55,599 --> 00:53:59,599
it the the specification is clear or not

1238
00:53:58,400 --> 00:54:01,520
into what's used

1239
00:53:59,599 --> 00:54:02,800
and it it may be that effectively if

1240
00:54:01,520 --> 00:54:05,200
these are reserved you can have some

1241
00:54:02,800 --> 00:54:07,440
area in a space that actually defines

1242
00:54:05,200 --> 00:54:09,598
what these fields are for the ones that

1243
00:54:07,440 --> 00:54:11,119
aren't done in the document and hence

1244
00:54:09,599 --> 00:54:13,119
that can be extended with future

1245
00:54:11,119 --> 00:54:14,400
documents that specify this behavior if

1246
00:54:13,119 --> 00:54:17,359
required

1247
00:54:14,400 --> 00:54:19,359
excellent okay cool so we will we will

1248
00:54:17,359 --> 00:54:21,920
do that i like this

1249
00:54:19,359 --> 00:54:24,000
okay so the next presentation is

1250
00:54:21,920 --> 00:54:26,800
actually draft ietf.com

1251
00:54:24,000 --> 00:54:28,800
distributed note of not unite it's a

1252
00:54:26,800 --> 00:54:31,680
adopted draft

1253
00:54:28,800 --> 00:54:34,559
exactly exactly i'm sorry for that so

1254
00:54:31,680 --> 00:54:34,558
next slide please

1255
00:54:34,800 --> 00:54:41,200
so in uh compared to uh

1256
00:54:38,319 --> 00:54:42,240
zero zero uh these are the changes we

1257
00:54:41,200 --> 00:54:44,240
made in

1258
00:54:42,240 --> 00:54:45,759
the draft mainly in two areas in the

1259
00:54:44,240 --> 00:54:48,799
terminologies and uh

1260
00:54:45,760 --> 00:54:51,280
motivation part in the

1261
00:54:48,799 --> 00:54:52,000
terminologies uh we are basically

1262
00:54:51,280 --> 00:54:55,359
borrowing

1263
00:54:52,000 --> 00:54:58,400
uh the terms from rfc 7011 so

1264
00:54:55,359 --> 00:55:02,799
ipfix export in section

1265
00:54:58,400 --> 00:55:04,799
2 and 3.1 uh basically using the terms

1266
00:55:02,799 --> 00:55:06,480
observation domain and observation

1267
00:55:04,799 --> 00:55:09,520
domain id

1268
00:55:06,480 --> 00:55:11,440
and consequently replacing the term

1269
00:55:09,520 --> 00:55:15,440
generator id

1270
00:55:11,440 --> 00:55:18,559
with observation domain id in the drafts

1271
00:55:15,440 --> 00:55:21,760
distributed notif udp notif and

1272
00:55:18,559 --> 00:55:25,599
notification messages

1273
00:55:21,760 --> 00:55:28,000
in um in the motive motivation section

1274
00:55:25,599 --> 00:55:29,200
as requested from the the working group

1275
00:55:28,000 --> 00:55:32,960
mailing list

1276
00:55:29,200 --> 00:55:36,000
we were specifying uh the reasoning

1277
00:55:32,960 --> 00:55:39,119
for observation domain id

1278
00:55:36,000 --> 00:55:41,920
mainly on on the

1279
00:55:39,119 --> 00:55:42,319
on the data integrate decide to preserve

1280
00:55:41,920 --> 00:55:45,520
it

1281
00:55:42,319 --> 00:55:49,040
across multiple publisher

1282
00:55:45,520 --> 00:55:52,240
export processes the same also for

1283
00:55:49,040 --> 00:55:54,319
being able to recognize

1284
00:55:52,240 --> 00:55:55,839
lost and corrupt young notification

1285
00:55:54,319 --> 00:56:01,520
messages across

1286
00:55:55,839 --> 00:56:04,400
multiple export publisher processes

1287
00:56:01,520 --> 00:56:04,400
next slide please

1288
00:56:06,160 --> 00:56:11,279
so uh the questions from the

1289
00:56:09,359 --> 00:56:13,680
mailing list which has not been resolved

1290
00:56:11,280 --> 00:56:16,960
yet are listed here mainly from

1291
00:56:13,680 --> 00:56:20,078
andy and thank you very much so

1292
00:56:16,960 --> 00:56:22,799
one uh question uh was in

1293
00:56:20,079 --> 00:56:25,200
regards whether we should map

1294
00:56:22,799 --> 00:56:28,880
observation domain id

1295
00:56:25,200 --> 00:56:31,040
uh exactly down to

1296
00:56:28,880 --> 00:56:33,359
do to the position the processor

1297
00:56:31,040 --> 00:56:37,279
publisher export process

1298
00:56:33,359 --> 00:56:40,558
uh by mapping to uh itf hardware

1299
00:56:37,280 --> 00:56:43,680
yana hardware uh yang models

1300
00:56:40,559 --> 00:56:48,240
by looking up iona hardware young models

1301
00:56:43,680 --> 00:56:51,598
the closest match i saw was cpu

1302
00:56:48,240 --> 00:56:51,839
but it's unclear what cpu actually means

1303
00:56:51,599 --> 00:56:55,119
if

1304
00:56:51,839 --> 00:56:59,200
it's actually also matching the term

1305
00:56:55,119 --> 00:57:01,520
network processors as well and here

1306
00:56:59,200 --> 00:57:03,839
i like to get more feedback from the

1307
00:57:01,520 --> 00:57:05,359
working group and also from the authors

1308
00:57:03,839 --> 00:57:08,319
of itf hardware

1309
00:57:05,359 --> 00:57:08,880
yana hardware whatever this is really

1310
00:57:08,319 --> 00:57:12,558
the right

1311
00:57:08,880 --> 00:57:15,920
place to to augment to tool

1312
00:57:12,559 --> 00:57:19,760
because uh if we want to

1313
00:57:15,920 --> 00:57:22,799
map to the export process or just to the

1314
00:57:19,760 --> 00:57:25,200
to the to the the network processor to

1315
00:57:22,799 --> 00:57:28,160
the cpu

1316
00:57:25,200 --> 00:57:28,799
only so that's one question the the

1317
00:57:28,160 --> 00:57:32,078
second one

1318
00:57:28,799 --> 00:57:33,040
is in regards to the observation domain

1319
00:57:32,079 --> 00:57:36,079
id

1320
00:57:33,040 --> 00:57:38,960
uh if it's needed in the

1321
00:57:36,079 --> 00:57:40,000
the udp notif header and i think pierre

1322
00:57:38,960 --> 00:57:42,559
already

1323
00:57:40,000 --> 00:57:43,280
uh answered that question in his

1324
00:57:42,559 --> 00:57:46,000
previous

1325
00:57:43,280 --> 00:57:46,960
presentation and i just want to

1326
00:57:46,000 --> 00:57:48,960
emphasize

1327
00:57:46,960 --> 00:57:50,480
here that basically on the data

1328
00:57:48,960 --> 00:57:53,599
collection side

1329
00:57:50,480 --> 00:57:56,720
if the observation domain id would not

1330
00:57:53,599 --> 00:58:00,880
be within the udp notifier

1331
00:57:56,720 --> 00:58:04,240
uh basically we in order to

1332
00:58:00,880 --> 00:58:04,720
to enable data integrity we would need

1333
00:58:04,240 --> 00:58:07,598
to

1334
00:58:04,720 --> 00:58:08,319
look into the notification message

1335
00:58:07,599 --> 00:58:10,720
itself

1336
00:58:08,319 --> 00:58:11,920
and i think that would be a cross-layer

1337
00:58:10,720 --> 00:58:15,200
violation

1338
00:58:11,920 --> 00:58:18,000
which we would like to avoid

1339
00:58:15,200 --> 00:58:18,960
uh yeah looking forward for feedback

1340
00:58:18,000 --> 00:58:23,040
from

1341
00:58:18,960 --> 00:58:26,400
the group that's all

1342
00:58:23,040 --> 00:58:26,400
any questions

1343
00:58:34,720 --> 00:58:38,959
so this is a comment as an individual

1344
00:58:36,799 --> 00:58:42,000
and i have to say i've not read

1345
00:58:38,960 --> 00:58:44,799
the specifics here um but i would

1346
00:58:42,000 --> 00:58:47,760
i would i think i would probably regard

1347
00:58:44,799 --> 00:58:51,119
cpu and npu's generally being

1348
00:58:47,760 --> 00:58:53,040
different um in most cases often

1349
00:58:51,119 --> 00:58:56,640
sometimes they could be the same but it

1350
00:58:53,040 --> 00:59:01,359
might be useful to have a

1351
00:58:56,640 --> 00:59:03,279
separate turn to differentiate them

1352
00:59:01,359 --> 00:59:04,880
the only other question i have and again

1353
00:59:03,280 --> 00:59:07,599
i might be completely off

1354
00:59:04,880 --> 00:59:10,160
mark here is if it's the observation

1355
00:59:07,599 --> 00:59:11,920
domain ids are tied to what that is

1356
00:59:10,160 --> 00:59:13,839
obviously some line cards may have

1357
00:59:11,920 --> 00:59:15,359
multiple separate npus

1358
00:59:13,839 --> 00:59:16,880
so i don't know if that's something that

1359
00:59:15,359 --> 00:59:20,240
needs to be considered or not

1360
00:59:16,880 --> 00:59:23,040
or whether that is not an issue

1361
00:59:20,240 --> 00:59:24,078
exactly so as you nicely pointed out

1362
00:59:23,040 --> 00:59:26,720
it's not only about

1363
00:59:24,079 --> 00:59:27,280
the naming it's then also about being

1364
00:59:26,720 --> 00:59:30,720
able to

1365
00:59:27,280 --> 00:59:34,000
to model it down to uh chassis

1366
00:59:30,720 --> 00:59:35,598
line cards and pews and down that hold

1367
00:59:34,000 --> 00:59:38,160
yeah

1368
00:59:35,599 --> 00:59:38,160
absolutely

1369
00:59:41,280 --> 00:59:45,359
all right i'll put myself in the wrong

1370
00:59:43,839 --> 00:59:48,400
mask

1371
00:59:45,359 --> 00:59:51,920
if i understand i think andy's question

1372
00:59:48,400 --> 00:59:53,200
was how would you identify

1373
00:59:51,920 --> 00:59:55,040
and i don't want to speak for him he can

1374
00:59:53,200 --> 00:59:58,160
certainly speak uh also

1375
00:59:55,040 --> 00:59:59,359
but how do you identify a line card that

1376
00:59:58,160 --> 01:00:02,720
has either

1377
00:59:59,359 --> 01:00:05,839
been unplugged and put back in

1378
01:00:02,720 --> 01:00:09,040
however it's been replaced by

1379
01:00:05,839 --> 01:00:10,078
another line card with exactly the same

1380
01:00:09,040 --> 01:00:12,240
type

1381
01:00:10,079 --> 01:00:13,119
how would you be able to distinguish

1382
01:00:12,240 --> 01:00:16,240
between

1383
01:00:13,119 --> 01:00:16,240
those two line cards

1384
01:00:16,880 --> 01:00:22,960
right that's only possible if you

1385
01:00:19,920 --> 01:00:24,160
start to to to model observation domain

1386
01:00:22,960 --> 01:00:27,440
id

1387
01:00:24,160 --> 01:00:30,640
in a in a yang model

1388
01:00:27,440 --> 01:00:33,680
and for and currently i am

1389
01:00:30,640 --> 01:00:36,558
neither itf hardware nor ariana hardware

1390
01:00:33,680 --> 01:00:36,558
is supporting this

1391
01:00:36,799 --> 01:00:40,559
that's why i'm asking for uh feedback

1392
01:00:39,040 --> 01:00:43,920
from the working group and

1393
01:00:40,559 --> 01:00:46,160
the authors how you intend or what you

1394
01:00:43,920 --> 01:00:49,599
think is the best way to model this

1395
01:00:46,160 --> 01:00:53,520
because once uh we we have a feedback on

1396
01:00:49,599 --> 01:00:57,520
on this we can help here to to

1397
01:00:53,520 --> 01:00:59,920
extend augment the yang model and then

1398
01:00:57,520 --> 01:01:01,920
basically merge the observation domain

1399
01:00:59,920 --> 01:01:05,440
id there

1400
01:01:01,920 --> 01:01:05,440
the moment it's not existing

1401
01:01:06,960 --> 01:01:10,559
so would you say then that you have a

1402
01:01:09,680 --> 01:01:13,040
problem today

1403
01:01:10,559 --> 01:01:14,720
irrespective of whether atf hardware is

1404
01:01:13,040 --> 01:01:16,799
the right young model that

1405
01:01:14,720 --> 01:01:19,118
you need a way to uniquely identify a

1406
01:01:16,799 --> 01:01:21,599
line card

1407
01:01:19,119 --> 01:01:22,559
exactly if if that is the intent if that

1408
01:01:21,599 --> 01:01:25,920
is what we are

1409
01:01:22,559 --> 01:01:29,920
uh aiming for then absolutely

1410
01:01:25,920 --> 01:01:32,960
uh for instance uh in in ipfix

1411
01:01:29,920 --> 01:01:36,400
they did not resolve that problem

1412
01:01:32,960 --> 01:01:38,720
uh so there the the ids were

1413
01:01:36,400 --> 01:01:40,319
generated and you could not map it down

1414
01:01:38,720 --> 01:01:43,040
to the

1415
01:01:40,319 --> 01:01:44,480
to the line card to the the network

1416
01:01:43,040 --> 01:01:47,839
processors

1417
01:01:44,480 --> 01:01:50,839
and it was already sufficient uh to

1418
01:01:47,839 --> 01:01:52,319
to ensure data integrity so for the data

1419
01:01:50,839 --> 01:01:55,599
collection

1420
01:01:52,319 --> 01:01:59,599
it's not needed to to map down to

1421
01:01:55,599 --> 01:02:02,559
the specific network processor

1422
01:01:59,599 --> 01:02:03,440
but it uh in order to troubleshoot

1423
01:02:02,559 --> 01:02:06,319
further

1424
01:02:03,440 --> 01:02:10,319
it certainly helps and i'm not against

1425
01:02:06,319 --> 01:02:12,640
it i'm fully supporting that idea

1426
01:02:10,319 --> 01:02:12,640
okay

1427
01:02:16,079 --> 01:02:23,280
any other questions

1428
01:02:20,559 --> 01:02:24,000
if not we can ready we are ready to move

1429
01:02:23,280 --> 01:02:35,839
to

1430
01:02:24,000 --> 01:02:35,839
i guess the non-chartered items

1431
01:02:50,799 --> 01:02:57,520
and ping are you there can you queue up

1432
01:02:55,039 --> 01:02:57,520
all right

1433
01:03:00,000 --> 01:03:05,599
you're good to go you okay okay

1434
01:03:03,520 --> 01:03:07,200
and hello this is paulie from china

1435
01:03:05,599 --> 01:03:10,240
mobile and it's about

1436
01:03:07,200 --> 01:03:13,359
the telemetry data export capability

1437
01:03:10,240 --> 01:03:13,359
so next slides please

1438
01:03:14,400 --> 01:03:20,000
okay let's have a recap first and the

1439
01:03:17,599 --> 01:03:22,799
motivation is that the notification

1440
01:03:20,000 --> 01:03:23,599
mode divide in that curve notification

1441
01:03:22,799 --> 01:03:26,240
capabilities

1442
01:03:23,599 --> 01:03:27,520
allows a client to discover a set of

1443
01:03:26,240 --> 01:03:29,759
capabilities

1444
01:03:27,520 --> 01:03:31,599
and such as transport independent

1445
01:03:29,760 --> 01:03:34,960
session level

1446
01:03:31,599 --> 01:03:38,319
and support by the server and but some

1447
01:03:34,960 --> 01:03:40,559
transport specific parameters are lacked

1448
01:03:38,319 --> 01:03:41,599
and just like the transport protocol

1449
01:03:40,559 --> 01:03:45,599
encoding format

1450
01:03:41,599 --> 01:03:47,920
and encryption so the goals

1451
01:03:45,599 --> 01:03:49,359
of the work is to augment system

1452
01:03:47,920 --> 01:03:51,599
capabilities

1453
01:03:49,359 --> 01:03:52,720
model and provides additional data

1454
01:03:51,599 --> 01:03:57,119
export

1455
01:03:52,720 --> 01:04:00,558
attributes for transport in independent

1456
01:03:57,119 --> 01:04:03,119
capability negotiation yeah so next

1457
01:04:00,559 --> 01:04:03,119
stars please

1458
01:04:04,160 --> 01:04:10,960
um okay this draft was first

1459
01:04:07,280 --> 01:04:10,960
presented in the

1460
01:04:11,200 --> 01:04:17,759
the last item meeting and it was just to

1461
01:04:14,240 --> 01:04:20,479
set up design team to process this work

1462
01:04:17,760 --> 01:04:21,520
and the latest update of the draft is

1463
01:04:20,480 --> 01:04:24,880
version two

1464
01:04:21,520 --> 01:04:27,920
and the change um three

1465
01:04:24,880 --> 01:04:31,200
points first is we removes the uh

1466
01:04:27,920 --> 01:04:31,599
max node per sensor group and max sensor

1467
01:04:31,200 --> 01:04:35,839
group

1468
01:04:31,599 --> 01:04:39,359
per update in uh yam model because um

1469
01:04:35,839 --> 01:04:41,119
um there are maybe some vendors don't

1470
01:04:39,359 --> 01:04:44,078
have donate to have

1471
01:04:41,119 --> 01:04:45,440
these characters and we also remove the

1472
01:04:44,079 --> 01:04:48,720
subscription

1473
01:04:45,440 --> 01:04:52,240
mode um and because because we

1474
01:04:48,720 --> 01:04:55,439
think that we can add some specific

1475
01:04:52,240 --> 01:04:56,240
and functions of parameters and we don't

1476
01:04:55,440 --> 01:05:00,000
use this

1477
01:04:56,240 --> 01:05:03,919
um subscription mode and it can be

1478
01:05:00,000 --> 01:05:07,839
more simplified and and simple yeah

1479
01:05:03,920 --> 01:05:10,559
and the third one is we can add

1480
01:05:07,839 --> 01:05:12,160
adaptive interval support and remove

1481
01:05:10,559 --> 01:05:15,760
sampling interval

1482
01:05:12,160 --> 01:05:16,480
list definition and to support the

1483
01:05:15,760 --> 01:05:19,680
adaptive

1484
01:05:16,480 --> 01:05:21,119
interval collection which will be

1485
01:05:19,680 --> 01:05:24,960
introduced

1486
01:05:21,119 --> 01:05:26,480
later yes okay next slice please

1487
01:05:24,960 --> 01:05:29,440
appearing you're a little bit quiet on

1488
01:05:26,480 --> 01:05:32,319
the microphone if you're able to

1489
01:05:29,440 --> 01:05:32,319
improve that to be good

1490
01:05:34,839 --> 01:05:37,839
okay

1491
01:05:38,799 --> 01:05:46,240
um okay this is overview of

1492
01:05:43,200 --> 01:05:48,879
the data export capability model and

1493
01:05:46,240 --> 01:05:51,439
the server it shows that server notifies

1494
01:05:48,880 --> 01:05:53,839
the telemetry data export capability

1495
01:05:51,440 --> 01:05:56,400
to the data collector and which could be

1496
01:05:53,839 --> 01:05:59,200
the network management system

1497
01:05:56,400 --> 01:05:59,920
it notifies transport protocol encoding

1498
01:05:59,200 --> 01:06:03,200
format

1499
01:05:59,920 --> 01:06:06,079
and secure

1500
01:06:03,200 --> 01:06:07,839
security and protocol yeah and then the

1501
01:06:06,079 --> 01:06:10,240
ms can

1502
01:06:07,839 --> 01:06:12,160
subscript the young notification

1503
01:06:10,240 --> 01:06:15,439
according to its demand

1504
01:06:12,160 --> 01:06:16,160
and for example it needs the odp

1505
01:06:15,440 --> 01:06:19,760
protocol

1506
01:06:16,160 --> 01:06:22,078
binary encoding format and js

1507
01:06:19,760 --> 01:06:24,000
security protocol then the server will

1508
01:06:22,079 --> 01:06:27,839
send the notification over

1509
01:06:24,000 --> 01:06:31,440
udp and also satisfied others

1510
01:06:27,839 --> 01:06:33,440
parameters or functions it just

1511
01:06:31,440 --> 01:06:35,680
shows the products are needed in fact

1512
01:06:33,440 --> 01:06:39,359
the server will notify all the

1513
01:06:35,680 --> 01:06:40,399
capability to the um network management

1514
01:06:39,359 --> 01:06:42,720
system

1515
01:06:40,400 --> 01:06:43,920
yeah and here are two pictures shows uh

1516
01:06:42,720 --> 01:06:46,959
um

1517
01:06:43,920 --> 01:06:50,079
version okay maybe i guess it's

1518
01:06:46,960 --> 01:06:54,480
not so it is very uh no problem yeah

1519
01:06:50,079 --> 01:06:54,480
um next page please

1520
01:06:58,319 --> 01:07:02,000
okay here are some issues uh which are

1521
01:07:00,960 --> 01:07:06,079
discussed

1522
01:07:02,000 --> 01:07:08,400
in the mailing list i think and

1523
01:07:06,079 --> 01:07:10,240
both of the three questions are solved

1524
01:07:08,400 --> 01:07:13,200
and the first question is the

1525
01:07:10,240 --> 01:07:14,319
server can provide hints based on the

1526
01:07:13,200 --> 01:07:18,160
exact request

1527
01:07:14,319 --> 01:07:20,480
from the client so we just to reply that

1528
01:07:18,160 --> 01:07:21,920
the answer is one of the principles set

1529
01:07:20,480 --> 01:07:25,200
by rfc

1530
01:07:21,920 --> 01:07:28,079
um young push is to

1531
01:07:25,200 --> 01:07:30,000
minimize the number of subscription

1532
01:07:28,079 --> 01:07:32,079
iterations between

1533
01:07:30,000 --> 01:07:34,799
subscriber and the publisher and

1534
01:07:32,079 --> 01:07:35,839
discourage random guessing of different

1535
01:07:34,799 --> 01:07:39,359
parameters by

1536
01:07:35,839 --> 01:07:42,640
a subscriber and our

1537
01:07:39,359 --> 01:07:43,520
idea is to try to prevent the problem at

1538
01:07:42,640 --> 01:07:46,400
the stage of

1539
01:07:43,520 --> 01:07:47,359
the negotiation of subsequent

1540
01:07:46,400 --> 01:07:50,880
subscription

1541
01:07:47,359 --> 01:07:54,400
in order to minimize the number of

1542
01:07:50,880 --> 01:07:58,559
um integrations yeah so we want to just

1543
01:07:54,400 --> 01:08:01,599
maybe it can improve the efficiency and

1544
01:07:58,559 --> 01:08:04,319
increase the loss rate yeah

1545
01:08:01,599 --> 01:08:06,000
and the second question is about the

1546
01:08:04,319 --> 01:08:09,599
static pronoun

1547
01:08:06,000 --> 01:08:11,920
monitoring data can be quite large

1548
01:08:09,599 --> 01:08:13,280
so we just discussed about it and we

1549
01:08:11,920 --> 01:08:16,960
think the subscriber

1550
01:08:13,280 --> 01:08:19,279
applications need a way to identify

1551
01:08:16,960 --> 01:08:20,399
capabilities for some datastore node

1552
01:08:19,279 --> 01:08:23,920
object

1553
01:08:20,399 --> 01:08:25,439
and in fact we can't assume that all

1554
01:08:23,920 --> 01:08:28,158
data objects defined in the

1555
01:08:25,439 --> 01:08:29,120
model support threshold handling and

1556
01:08:28,158 --> 01:08:33,040
maybe just some

1557
01:08:29,120 --> 01:08:38,000
of them support this functions and

1558
01:08:33,040 --> 01:08:41,759
so it won't generate so many um

1559
01:08:38,000 --> 01:08:45,600
date yeah and the um

1560
01:08:41,759 --> 01:08:49,600
third question is sensor group um

1561
01:08:45,600 --> 01:08:53,199
seems a very vendor specificability so

1562
01:08:49,600 --> 01:08:56,880
we remove the two parameters

1563
01:08:53,198 --> 01:09:00,318
and one is max node per sensor group and

1564
01:08:56,880 --> 01:09:03,679
max sensor group uh per object

1565
01:09:00,319 --> 01:09:06,480
and and we

1566
01:09:03,679 --> 01:09:07,759
have taken them out in the latest

1567
01:09:06,479 --> 01:09:11,519
version

1568
01:09:07,759 --> 01:09:13,679
yeah and these three questions are

1569
01:09:11,520 --> 01:09:14,799
three main questions discussed in the

1570
01:09:13,679 --> 01:09:17,920
mailing list

1571
01:09:14,799 --> 01:09:19,278
so i think um all of them are solved now

1572
01:09:17,920 --> 01:09:22,480
yeah

1573
01:09:19,279 --> 01:09:22,480
okay next slide please

1574
01:09:23,198 --> 01:09:29,678
so it's about the

1575
01:09:26,479 --> 01:09:33,358
data export capability and can we call

1576
01:09:29,679 --> 01:09:36,399
adoption of it as a work item

1577
01:09:33,359 --> 01:09:36,400
and any comments

1578
01:09:45,198 --> 01:09:50,000
it says this is ken that's co-chair um

1579
01:09:48,158 --> 01:09:52,399
this is one of the documents that

1580
01:09:50,000 --> 01:09:53,520
was we did the adoption suitability poll

1581
01:09:52,399 --> 01:09:57,679
for

1582
01:09:53,520 --> 01:09:59,920
before yeah and um

1583
01:09:57,679 --> 01:10:03,040
and there was an objection that was

1584
01:09:59,920 --> 01:10:06,000
raised i think by andy i just want to be

1585
01:10:03,040 --> 01:10:08,960
uh was that covered how did that

1586
01:10:06,000 --> 01:10:08,960
objection get resolved

1587
01:10:10,880 --> 01:10:17,840
okay so sorry i just missed some of the

1588
01:10:14,840 --> 01:10:17,840
voice

1589
01:10:18,400 --> 01:10:22,719
sorry i didn't understand the response

1590
01:10:19,840 --> 01:10:22,719
can you say that again

1591
01:10:26,159 --> 01:10:31,199
okay and i asked the question on kent's

1592
01:10:28,840 --> 01:10:34,719
behalf what he's asking is

1593
01:10:31,199 --> 01:10:35,599
did we resolve the objection that was

1594
01:10:34,719 --> 01:10:39,679
raised

1595
01:10:35,600 --> 01:10:39,679
during the adoption poll of the draft

1596
01:10:39,840 --> 01:10:43,040
um okay i

1597
01:10:41,930 --> 01:10:46,640
[Music]

1598
01:10:43,040 --> 01:10:46,640
you think answer this question

1599
01:10:47,440 --> 01:10:51,199
chen why don't you go next

1600
01:10:53,920 --> 01:10:59,840
shin do you want to step up to the mic

1601
01:10:55,520 --> 01:10:59,840
to answer the question

1602
01:11:00,400 --> 01:11:05,679
[Music]

1603
01:11:03,360 --> 01:11:05,679
okay

1604
01:11:09,440 --> 01:11:15,678
hello yeah jim oh

1605
01:11:12,560 --> 01:11:18,560
okay this is ching actually yeah as uh

1606
01:11:15,679 --> 01:11:18,880
pangu actually clarified we discussed

1607
01:11:18,560 --> 01:11:22,560
the

1608
01:11:18,880 --> 01:11:24,800
issue we listed in a lot of slides

1609
01:11:22,560 --> 01:11:29,679
actually all the issue has already

1610
01:11:24,800 --> 01:11:32,560
resolved in the latest version yeah

1611
01:11:29,679 --> 01:11:33,440
so we so all the changes we made

1612
01:11:32,560 --> 01:11:36,640
actually

1613
01:11:33,440 --> 01:11:41,839
has has already incorporated in the

1614
01:11:36,640 --> 01:11:41,840
version zero two

1615
01:11:43,120 --> 01:11:55,840
okay so quiet

1616
01:12:19,280 --> 01:12:22,880
my comments from something else i'll let

1617
01:12:20,800 --> 01:12:24,320
andy go first on this actually

1618
01:12:22,880 --> 01:12:25,920
i've got a comment about the structure

1619
01:12:24,320 --> 01:12:27,440
the draft

1620
01:12:25,920 --> 01:12:29,920
what content the draft all right go

1621
01:12:27,440 --> 01:12:29,919
ahead andy

1622
01:12:31,440 --> 01:12:39,360
well i just don't think this all this

1623
01:12:35,679 --> 01:12:43,280
extra complexity is needed and

1624
01:12:39,360 --> 01:12:46,320
that the rpcs already have

1625
01:12:43,280 --> 01:12:47,679
extensive mechanisms to provide these

1626
01:12:46,320 --> 01:12:51,120
hints

1627
01:12:47,679 --> 01:12:52,320
and ignoring that and doing something

1628
01:12:51,120 --> 01:12:56,559
else

1629
01:12:52,320 --> 01:12:56,559
isn't isn't that high priority

1630
01:12:56,800 --> 01:13:02,880
yeah andy actually will clarify

1631
01:13:00,000 --> 01:13:04,000
your issue actually in the first bullet

1632
01:13:02,880 --> 01:13:07,120
actually i i think

1633
01:13:04,000 --> 01:13:09,520
um uh we we did a center updated slides

1634
01:13:07,120 --> 01:13:10,800
actually you know you we did could use

1635
01:13:09,520 --> 01:13:13,920
our pc and

1636
01:13:10,800 --> 01:13:14,880
use the error option to show uh what was

1637
01:13:13,920 --> 01:13:17,920
what's uh what's

1638
01:13:14,880 --> 01:13:18,640
wrong actually but the if we define this

1639
01:13:17,920 --> 01:13:21,040
capability

1640
01:13:18,640 --> 01:13:21,840
advertisement actually we can avoid the

1641
01:13:21,040 --> 01:13:26,080
you know

1642
01:13:21,840 --> 01:13:28,800
uh unnecessary uh negotiation you know

1643
01:13:26,080 --> 01:13:29,679
so so that's the way you know we we

1644
01:13:28,800 --> 01:13:32,400
reference

1645
01:13:29,679 --> 01:13:33,520
some of the texts in uh young push

1646
01:13:32,400 --> 01:13:36,320
actually you know

1647
01:13:33,520 --> 01:13:37,120
it also you know uh highlight that you

1648
01:13:36,320 --> 01:13:40,320
know

1649
01:13:37,120 --> 01:13:43,440
we should avoid you know uh unnecessary

1650
01:13:40,320 --> 01:13:45,360
subscription exchange iteration

1651
01:13:43,440 --> 01:13:46,469
yeah this is how we how we address your

1652
01:13:45,360 --> 01:13:47,519
comments

1653
01:13:46,470 --> 01:13:48,880
[Music]

1654
01:13:47,520 --> 01:13:52,239
i don't see where that's happening

1655
01:13:48,880 --> 01:13:54,159
because either i send one request and i

1656
01:13:52,239 --> 01:13:57,199
get back the hints

1657
01:13:54,159 --> 01:13:59,679
or i send the request your way

1658
01:13:57,199 --> 01:14:00,559
and i get back the capabilities either

1659
01:13:59,679 --> 01:14:03,360
way

1660
01:14:00,560 --> 01:14:04,400
it's one request one response i don't

1661
01:14:03,360 --> 01:14:06,000
see all the extra

1662
01:14:04,400 --> 01:14:08,159
work iterations that you're talking

1663
01:14:06,000 --> 01:14:08,159
about

1664
01:14:08,400 --> 01:14:11,679
yeah well our idea is in the first step

1665
01:14:10,960 --> 01:14:15,360
we

1666
01:14:11,679 --> 01:14:17,600
you know to just advertise

1667
01:14:15,360 --> 01:14:18,799
the capability to to the server so

1668
01:14:17,600 --> 01:14:20,800
server can

1669
01:14:18,800 --> 01:14:22,000
to choose for example choose what

1670
01:14:20,800 --> 01:14:24,560
transport protocol

1671
01:14:22,000 --> 01:14:26,640
it will use in in a young push

1672
01:14:24,560 --> 01:14:29,679
substitution message

1673
01:14:26,640 --> 01:14:32,719
so you don't need to you know uh to

1674
01:14:29,679 --> 01:14:35,520
to uh have research

1675
01:14:32,719 --> 01:14:37,360
there too yeah yeah get me suggest that

1676
01:14:35,520 --> 01:14:39,520
you take this discussion we're

1677
01:14:37,360 --> 01:14:41,199
running a little behind and we still

1678
01:14:39,520 --> 01:14:43,520
have rob in the queue

1679
01:14:41,199 --> 01:14:44,639
so can you take the discussion of

1680
01:14:43,520 --> 01:14:47,679
iterations and

1681
01:14:44,640 --> 01:14:49,360
rpcs to the queue please let me

1682
01:14:47,679 --> 01:14:51,360
know okay we can take it to the list

1683
01:14:49,360 --> 01:14:54,559
yeah sure

1684
01:14:51,360 --> 01:14:56,559
bro uh so just one one quick comment on

1685
01:14:54,560 --> 01:14:58,560
that is i think what this draft is

1686
01:14:56,560 --> 01:14:59,679
providing is to allow the capabilities

1687
01:14:58,560 --> 01:15:01,360
to be expressed

1688
01:14:59,679 --> 01:15:03,199
up front as it may be in an instance

1689
01:15:01,360 --> 01:15:06,880
data document so

1690
01:15:03,199 --> 01:15:07,360
um a client could be coded to design

1691
01:15:06,880 --> 01:15:08,800
time

1692
01:15:07,360 --> 01:15:10,799
to know what the capabilities of the

1693
01:15:08,800 --> 01:15:11,360
servers like to be so that's one comment

1694
01:15:10,800 --> 01:15:12,719
to that

1695
01:15:11,360 --> 01:15:14,799
but the other question i had was in

1696
01:15:12,719 --> 01:15:17,920
terms of the structure of the yang

1697
01:15:14,800 --> 01:15:20,640
it looked like you could just define for

1698
01:15:17,920 --> 01:15:23,760
example one transport that supported or

1699
01:15:20,640 --> 01:15:24,320
one encoding whereas i'd have thought

1700
01:15:23,760 --> 01:15:26,480
that

1701
01:15:24,320 --> 01:15:27,759
servers have different capabilities that

1702
01:15:26,480 --> 01:15:30,559
they support

1703
01:15:27,760 --> 01:15:31,760
and hence um it may be that the

1704
01:15:30,560 --> 01:15:33,280
structure the model needs to be more

1705
01:15:31,760 --> 01:15:35,600
flexible or otherwise

1706
01:15:33,280 --> 01:15:38,000
i don't i don't understand in the yang

1707
01:15:35,600 --> 01:15:40,480
why it's only expressing one of those

1708
01:15:38,000 --> 01:15:41,840
rather than this is the set of different

1709
01:15:40,480 --> 01:15:44,400
transports or encodings that are

1710
01:15:41,840 --> 01:15:44,400
supported

1711
01:15:45,199 --> 01:15:48,400
yeah i think that we can allow the

1712
01:15:47,199 --> 01:15:50,559
server to

1713
01:15:48,400 --> 01:15:52,239
advertise the capability for example

1714
01:15:50,560 --> 01:15:52,960
support different transport protocols

1715
01:15:52,239 --> 01:15:54,959
better

1716
01:15:52,960 --> 01:15:56,960
we can make a client to make a choice

1717
01:15:54,960 --> 01:15:59,679
which transport program are encoding

1718
01:15:56,960 --> 01:15:59,679
they can support

1719
01:16:01,520 --> 01:16:07,840
okay we really need to move on to the

1720
01:16:04,080 --> 01:16:07,840
next presentation

1721
01:16:12,560 --> 01:16:18,960
i think chin you're up next

1722
01:16:15,840 --> 01:16:22,640
yeah can you open slides

1723
01:16:18,960 --> 01:16:22,640
yeah we're coming up

1724
01:16:25,679 --> 01:16:35,840
a few seconds

1725
01:16:38,400 --> 01:16:41,679
there's like five confirmation windows

1726
01:16:40,560 --> 01:16:42,960
you have to click through in order to

1727
01:16:41,679 --> 01:16:46,560
get to them

1728
01:16:42,960 --> 01:16:49,360
so go ahead okay uh so this is the chain

1729
01:16:46,560 --> 01:16:51,440
i'm here to discuss adaptive

1730
01:16:49,360 --> 01:16:55,839
subscription to young notification drop

1731
01:16:51,440 --> 01:16:55,839
update and next

1732
01:16:57,280 --> 01:17:00,559
so uh kernel status this job has been

1733
01:16:59,920 --> 01:17:03,840
presented

1734
01:17:00,560 --> 01:17:07,600
in previously 2itm meeting and

1735
01:17:03,840 --> 01:17:09,280
actually we tried in a previous item and

1736
01:17:07,600 --> 01:17:10,239
it was suggested to align with essay

1737
01:17:09,280 --> 01:17:13,280
model

1738
01:17:10,239 --> 01:17:16,959
and also we actually introduced a new uh

1739
01:17:13,280 --> 01:17:18,159
subsequent mode besides the periodic

1740
01:17:16,960 --> 01:17:21,199
subscription and

1741
01:17:18,159 --> 01:17:22,320
uh unchanged substitution and so we need

1742
01:17:21,199 --> 01:17:24,159
to better

1743
01:17:22,320 --> 01:17:25,519
characterize this separation

1744
01:17:24,159 --> 01:17:28,719
subscription

1745
01:17:25,520 --> 01:17:29,199
uh so in uh last night meeting we also

1746
01:17:28,719 --> 01:17:32,560
you know

1747
01:17:29,199 --> 01:17:35,759
discusses and uh uh we got

1748
01:17:32,560 --> 01:17:38,880
actually a lot of support and uh so in

1749
01:17:35,760 --> 01:17:41,520
latest version actually uh we

1750
01:17:38,880 --> 01:17:43,920
uh tried to you know uh remove the

1751
01:17:41,520 --> 01:17:47,040
dependency to the esa model we will

1752
01:17:43,920 --> 01:17:50,719
remove the past target definition

1753
01:17:47,040 --> 01:17:51,679
and we also you know clarify the xpath

1754
01:17:50,719 --> 01:17:55,120
external

1755
01:17:51,679 --> 01:17:57,760
evaluation node in the young model and

1756
01:17:55,120 --> 01:17:59,120
and rewrite the usage example to align

1757
01:17:57,760 --> 01:18:03,040
with these young model

1758
01:17:59,120 --> 01:18:03,040
parameter changes next

1759
01:18:05,120 --> 01:18:08,800
so for people who don't know what the

1760
01:18:06,880 --> 01:18:11,280
adaptive subscription is actually

1761
01:18:08,800 --> 01:18:12,719
it is the extension to the subscript

1762
01:18:11,280 --> 01:18:14,559
notification

1763
01:18:12,719 --> 01:18:16,560
for young push subscription they support

1764
01:18:14,560 --> 01:18:19,040
two uh different mode one is

1765
01:18:16,560 --> 01:18:19,920
period subscription which allow you to

1766
01:18:19,040 --> 01:18:22,719
publish

1767
01:18:19,920 --> 01:18:23,920
the data periodically and another is

1768
01:18:22,719 --> 01:18:26,560
unchanging substitution

1769
01:18:23,920 --> 01:18:28,640
which allow you to publish data when

1770
01:18:26,560 --> 01:18:30,320
data gets changed or protocol operation

1771
01:18:28,640 --> 01:18:33,840
on data get changed

1772
01:18:30,320 --> 01:18:36,400
but in some cases uh uh maybe uh for

1773
01:18:33,840 --> 01:18:37,600
server and client over they may support

1774
01:18:36,400 --> 01:18:40,799
multiple you know

1775
01:18:37,600 --> 01:18:43,600
uh period intervals so the server may

1776
01:18:40,800 --> 01:18:45,440
need to switch a different interval

1777
01:18:43,600 --> 01:18:48,320
according to the network condition

1778
01:18:45,440 --> 01:18:50,159
or research usage the typical example is

1779
01:18:48,320 --> 01:18:52,480
what is performance monitoring

1780
01:18:50,159 --> 01:18:53,759
the wireless signal stress can be weak

1781
01:18:52,480 --> 01:18:57,040
can be strong

1782
01:18:53,760 --> 01:19:00,080
so because of the air interface

1783
01:18:57,040 --> 01:19:03,280
resources is very is very expensive so

1784
01:19:00,080 --> 01:19:06,320
we can when the wireless signal strength

1785
01:19:03,280 --> 01:19:07,120
is very strong we actually can collect

1786
01:19:06,320 --> 01:19:10,480
the data at a

1787
01:19:07,120 --> 01:19:13,360
lower rate but when the signal strength

1788
01:19:10,480 --> 01:19:14,718
is very uh weak actually we can collect

1789
01:19:13,360 --> 01:19:18,639
more data since

1790
01:19:14,719 --> 01:19:23,040
we need to have sufficient enough data

1791
01:19:18,640 --> 01:19:25,600
to do the job shooting so this can uh

1792
01:19:23,040 --> 01:19:26,719
greatly reduce the data to export to the

1793
01:19:25,600 --> 01:19:28,719
client

1794
01:19:26,719 --> 01:19:30,000
so he uh so we introduce this

1795
01:19:28,719 --> 01:19:33,360
subscription

1796
01:19:30,000 --> 01:19:36,000
uh adaptive subscription and uh enable

1797
01:19:33,360 --> 01:19:39,040
this uh subscription to

1798
01:19:36,000 --> 01:19:42,080
the publishing event and so they can

1799
01:19:39,040 --> 01:19:44,400
adjust the wrong the telemetry traffic

1800
01:19:42,080 --> 01:19:44,400
next

1801
01:19:47,199 --> 01:19:51,199
so this is a what the model structure

1802
01:19:49,520 --> 01:19:53,120
look like actually we augment the

1803
01:19:51,199 --> 01:19:55,440
subscribe notification

1804
01:19:53,120 --> 01:19:57,199
uh we propose a set of parameters for

1805
01:19:55,440 --> 01:20:00,559
example periodic

1806
01:19:57,199 --> 01:20:03,919
angle time and this will specify

1807
01:20:00,560 --> 01:20:05,760
new duration for push-up data and this

1808
01:20:03,920 --> 01:20:07,920
period will be triggered when

1809
01:20:05,760 --> 01:20:09,600
conditions get changed and the anchor

1810
01:20:07,920 --> 01:20:14,159
time will specify

1811
01:20:09,600 --> 01:20:16,639
the starting point for each uh updated

1812
01:20:14,159 --> 01:20:17,280
interval at the same time updated

1813
01:20:16,639 --> 01:20:20,719
interval

1814
01:20:17,280 --> 01:20:23,920
and also we introduced uh

1815
01:20:20,719 --> 01:20:26,639
what water marker and uh

1816
01:20:23,920 --> 01:20:27,199
and expanse external evaluation this

1817
01:20:26,639 --> 01:20:30,840
actually

1818
01:20:27,199 --> 01:20:34,159
can provide the evaluation uh creation

1819
01:20:30,840 --> 01:20:37,360
and the water market uh actually is

1820
01:20:34,159 --> 01:20:38,480
part of this uh evaluation expression

1821
01:20:37,360 --> 01:20:42,320
and that can

1822
01:20:38,480 --> 01:20:42,959
uh use to uh to ex to to express the

1823
01:20:42,320 --> 01:20:46,480
condition

1824
01:20:42,960 --> 01:20:49,679
uh to be satisfied and and trigger

1825
01:20:46,480 --> 01:20:50,000
the interval switching so here we we

1826
01:20:49,679 --> 01:20:53,679
just

1827
01:20:50,000 --> 01:20:56,320
give an example so when uh

1828
01:20:53,679 --> 01:20:57,120
such condition uh excess expressed by

1829
01:20:56,320 --> 01:21:01,040
the express

1830
01:20:57,120 --> 01:21:04,719
external evaluation uh

1831
01:21:01,040 --> 01:21:04,719
actually get changed actually

1832
01:21:05,120 --> 01:21:12,080
the condition i'll get actually

1833
01:21:08,960 --> 01:21:12,719
satisfied actually it will send the

1834
01:21:12,080 --> 01:21:14,400
adaptive

1835
01:21:12,719 --> 01:21:16,719
preridic updated notification

1836
01:21:14,400 --> 01:21:20,320
immediately and so the

1837
01:21:16,719 --> 01:21:23,760
client can adjust the uh

1838
01:21:20,320 --> 01:21:27,679
the the telemetry uh

1839
01:21:23,760 --> 01:21:29,840
connection rate accordingly

1840
01:21:27,679 --> 01:21:29,840
next

1841
01:21:31,760 --> 01:21:38,080
uh here is the issue we actually uh

1842
01:21:34,960 --> 01:21:39,840
uh respect the nd on the list and about

1843
01:21:38,080 --> 01:21:42,239
the filter it's

1844
01:21:39,840 --> 01:21:43,520
this filter and trigger maybe not a in

1845
01:21:42,239 --> 01:21:46,959
good design

1846
01:21:43,520 --> 01:21:48,880
so we make a

1847
01:21:46,960 --> 01:21:50,880
some change actually accordingly for

1848
01:21:48,880 --> 01:21:53,760
example we take out the data path

1849
01:21:50,880 --> 01:21:54,400
target and things that we we don't think

1850
01:21:53,760 --> 01:21:56,719
this is

1851
01:21:54,400 --> 01:21:58,080
something needed because this actually

1852
01:21:56,719 --> 01:22:01,920
will

1853
01:21:58,080 --> 01:22:05,040
impact or influence the event recorder

1854
01:22:01,920 --> 01:22:07,280
output actually so in this model

1855
01:22:05,040 --> 01:22:09,199
we also changed the naming for then we

1856
01:22:07,280 --> 01:22:12,239
changed the condition expression

1857
01:22:09,199 --> 01:22:14,960
to the x-path's external expression this

1858
01:22:12,239 --> 01:22:15,678
expanse x naught expression will keep

1859
01:22:14,960 --> 01:22:18,719
track of

1860
01:22:15,679 --> 01:22:23,120
data objects change but this

1861
01:22:18,719 --> 01:22:26,480
expression will not you know affect the

1862
01:22:23,120 --> 01:22:28,880
event record output and the only

1863
01:22:26,480 --> 01:22:29,759
uh can used to trigger the interval uh

1864
01:22:28,880 --> 01:22:32,400
switching

1865
01:22:29,760 --> 01:22:32,400
in the server

1866
01:22:33,120 --> 01:22:36,320
that that's the main change we made

1867
01:22:35,040 --> 01:22:39,440
actually try to simplify

1868
01:22:36,320 --> 01:22:41,840
this model and recover from the

1869
01:22:39,440 --> 01:22:43,280
easy model since we think these

1870
01:22:41,840 --> 01:22:46,080
different use cases

1871
01:22:43,280 --> 01:22:47,519
doesn't need to be tied with easy use

1872
01:22:46,080 --> 01:22:53,519
cases

1873
01:22:47,520 --> 01:22:56,400
and next

1874
01:22:53,520 --> 01:22:56,719
the main change and also it was the one

1875
01:22:56,400 --> 01:22:59,199
that

1876
01:22:56,719 --> 01:23:00,480
um the reason why the adoption poll did

1877
01:22:59,199 --> 01:23:02,400
not succeed

1878
01:23:00,480 --> 01:23:03,519
um i don't recall it being discussed in

1879
01:23:02,400 --> 01:23:06,159
the list but

1880
01:23:03,520 --> 01:23:07,600
maybe andy since it was your objection

1881
01:23:06,159 --> 01:23:09,599
if you've had a chance to take a look at

1882
01:23:07,600 --> 01:23:11,120
this can you can you speak to it as if

1883
01:23:09,600 --> 01:23:13,440
as to whether or not it resolves your

1884
01:23:11,120 --> 01:23:13,440
issue

1885
01:23:18,080 --> 01:23:21,840
go ahead andy

1886
01:23:22,159 --> 01:23:27,759
i haven't read the latest draft and uh

1887
01:23:25,760 --> 01:23:28,960
don't really have any objections uh you

1888
01:23:27,760 --> 01:23:33,199
know that's

1889
01:23:28,960 --> 01:23:36,320
uh not really our focus right now with

1890
01:23:33,199 --> 01:23:36,638
yang push we've actually spent a lot of

1891
01:23:36,320 --> 01:23:40,400
work

1892
01:23:36,639 --> 01:23:42,080
implementing gang push and and decided

1893
01:23:40,400 --> 01:23:45,199
that the periodic stuff isn't

1894
01:23:42,080 --> 01:23:46,159
isn't that great so on change is is what

1895
01:23:45,199 --> 01:23:49,678
you want to use

1896
01:23:46,159 --> 01:23:52,159
and and and it's just much more

1897
01:23:49,679 --> 01:23:52,159
efficient

1898
01:23:52,239 --> 01:24:00,879
than trying to uh you know

1899
01:23:55,360 --> 01:24:02,799
adjust the period on the fly

1900
01:24:00,880 --> 01:24:05,760
it's more work to do on change but it's

1901
01:24:02,800 --> 01:24:05,760
better so

1902
01:24:06,880 --> 01:24:12,000
yeah thanks to andy so as a contributor

1903
01:24:09,920 --> 01:24:13,600
um andy i'm kind of curious about that

1904
01:24:12,000 --> 01:24:14,320
comment that you just made because i

1905
01:24:13,600 --> 01:24:17,760
think the

1906
01:24:14,320 --> 01:24:19,360
the reason for the periodic was because

1907
01:24:17,760 --> 01:24:20,960
um there's some values that just don't

1908
01:24:19,360 --> 01:24:24,159
change very often at all

1909
01:24:20,960 --> 01:24:26,480
maybe once a day or even less often

1910
01:24:24,159 --> 01:24:27,759
but because they're periodically pushed

1911
01:24:26,480 --> 01:24:30,799
in case this

1912
01:24:27,760 --> 01:24:33,520
subscriber comes in later um

1913
01:24:30,800 --> 01:24:34,000
they get it um you know the value but i

1914
01:24:33,520 --> 01:24:35,760
guess

1915
01:24:34,000 --> 01:24:37,600
there's also a sync up that occurs right

1916
01:24:35,760 --> 01:24:39,520
so when they first subscriber first

1917
01:24:37,600 --> 01:24:40,880
there's a sync up so they get all the

1918
01:24:39,520 --> 01:24:42,719
values up front

1919
01:24:40,880 --> 01:24:44,400
and then um and then i guess it's just

1920
01:24:42,719 --> 01:24:45,840
changed from that point forward okay so

1921
01:24:44,400 --> 01:24:47,280
okay maybe i do understand answer my

1922
01:24:45,840 --> 01:24:49,120
only question

1923
01:24:47,280 --> 01:24:50,400
yeah and you can you can request to

1924
01:24:49,120 --> 01:24:53,280
resync on the fly

1925
01:24:50,400 --> 01:24:53,679
too but if you if you missed that you

1926
01:24:53,280 --> 01:24:58,159
know

1927
01:24:53,679 --> 01:25:00,719
or lost it okay thank you uh robert

1928
01:24:58,159 --> 01:25:00,719
you're in the queue

1929
01:25:01,760 --> 01:25:05,840
uh so just a confidence individual so i

1930
01:25:04,000 --> 01:25:07,520
just again wonder whether this is quite

1931
01:25:05,840 --> 01:25:09,920
a complex solution

1932
01:25:07,520 --> 01:25:11,040
and to the problem and whether a simpler

1933
01:25:09,920 --> 01:25:13,520
solution might just be

1934
01:25:11,040 --> 01:25:14,320
to mark some subscriptions as being

1935
01:25:13,520 --> 01:25:16,719
effectively

1936
01:25:14,320 --> 01:25:17,840
higher priority data and others as lower

1937
01:25:16,719 --> 01:25:21,280
priority

1938
01:25:17,840 --> 01:25:21,600
and then uh to to have one setting to

1939
01:25:21,280 --> 01:25:24,559
say

1940
01:25:21,600 --> 01:25:26,080
allow this to be adaptive in some way

1941
01:25:24,560 --> 01:25:26,800
and then just leave it to the device to

1942
01:25:26,080 --> 01:25:28,639
try and

1943
01:25:26,800 --> 01:25:30,480
reduce the rate that it's sending this

1944
01:25:28,639 --> 01:25:32,880
information out if necessary

1945
01:25:30,480 --> 01:25:34,559
without specifying specific periods or

1946
01:25:32,880 --> 01:25:38,159
paths or that sort of thing so

1947
01:25:34,560 --> 01:25:41,520
to have it as a more course level

1948
01:25:38,159 --> 01:25:44,320
type of qs rather than having to specify

1949
01:25:41,520 --> 01:25:45,840
specific conditions and things like that

1950
01:25:44,320 --> 01:25:46,639
so you put more intelligence into the

1951
01:25:45,840 --> 01:25:47,920
device

1952
01:25:46,639 --> 01:25:49,199
you're relying on it to do some things

1953
01:25:47,920 --> 01:25:50,400
rather give you very specific

1954
01:25:49,199 --> 01:25:53,599
instructions

1955
01:25:50,400 --> 01:25:56,719
as to how to manage this data

1956
01:25:53,600 --> 01:25:59,760
but this is an individual comment

1957
01:25:56,719 --> 01:26:03,280
uh robert i'm i'm not sure you know

1958
01:25:59,760 --> 01:26:03,280
for your purpose it seems you need to

1959
01:26:03,679 --> 01:26:07,040
satisfy actually to lose some of data

1960
01:26:06,400 --> 01:26:10,320
since your

1961
01:26:07,040 --> 01:26:11,360
priorities some of the data but for our

1962
01:26:10,320 --> 01:26:14,799
cases that we

1963
01:26:11,360 --> 01:26:16,000
whether you use the high data clinician

1964
01:26:14,800 --> 01:26:17,600
rate or lower than

1965
01:26:16,000 --> 01:26:23,840
data connection rate you will not lose

1966
01:26:17,600 --> 01:26:23,840
any data

1967
01:26:29,040 --> 01:26:32,080
i just wanted to follow up on robert's

1968
01:26:31,520 --> 01:26:35,520
comment

1969
01:26:32,080 --> 01:26:38,559
uh i was thinking the same so

1970
01:26:35,520 --> 01:26:39,840
i think ideally if uh for a periodical

1971
01:26:38,560 --> 01:26:43,120
subscription

1972
01:26:39,840 --> 01:26:43,840
we could have a range say from from one

1973
01:26:43,120 --> 01:26:47,040
to ten

1974
01:26:43,840 --> 01:26:49,840
and then basically the the

1975
01:26:47,040 --> 01:26:52,159
the publisher decides depending on on

1976
01:26:49,840 --> 01:26:54,400
the state

1977
01:26:52,159 --> 01:26:57,599
which which value it's choosing for the

1978
01:26:54,400 --> 01:26:57,599
the export interval

1979
01:26:59,840 --> 01:27:04,080
yeah the assumption we made is you can

1980
01:27:02,080 --> 01:27:06,719
support multiple

1981
01:27:04,080 --> 01:27:07,280
updated interval but a server they may

1982
01:27:06,719 --> 01:27:09,120
have

1983
01:27:07,280 --> 01:27:10,559
the capability to to switch this

1984
01:27:09,120 --> 01:27:13,679
interval to

1985
01:27:10,560 --> 01:27:17,040
you know reduce uh you know the

1986
01:27:13,679 --> 01:27:18,159
volume of the data to be exported to to

1987
01:27:17,040 --> 01:27:19,600
the client or too

1988
01:27:18,159 --> 01:27:22,638
so you can you know address this

1989
01:27:19,600 --> 01:27:28,080
performance uh bottlenecker

1990
01:27:22,639 --> 01:27:28,080
so uh yeah that's what we proposed there

1991
01:27:29,840 --> 01:27:33,920
okay i think we are running behind so

1992
01:27:32,960 --> 01:27:38,239
maybe

1993
01:27:33,920 --> 01:27:38,239
um take it to the mailing list again

1994
01:27:45,760 --> 01:27:47,840
right

1995
01:27:50,159 --> 01:27:56,719
so chin i would suggest that uh you know

1996
01:27:54,400 --> 01:27:59,759
take the discussion to the mailing list

1997
01:27:56,719 --> 01:28:02,080
including the question of adoption

1998
01:27:59,760 --> 01:28:03,520
let's try to resolve on the mailing list

1999
01:28:02,080 --> 01:28:06,320
please

2000
01:28:03,520 --> 01:28:06,320
okay thank you

2001
01:28:09,679 --> 01:28:15,840
right next we have yen

2002
01:28:20,400 --> 01:28:27,040
we can very good so

2003
01:28:23,840 --> 01:28:27,040
next slide please

2004
01:28:27,199 --> 01:28:29,839
and next

2005
01:28:30,639 --> 01:28:35,040
so uh now that we have net conf being

2006
01:28:33,920 --> 01:28:37,199
spread around

2007
01:28:35,040 --> 01:28:38,560
and managers are actually starting to

2008
01:28:37,199 --> 01:28:40,719
use this a lot

2009
01:28:38,560 --> 01:28:42,239
one of the use cases i see very often is

2010
01:28:40,719 --> 01:28:43,920
that the manager wants to

2011
01:28:42,239 --> 01:28:45,839
keep in sync with the configuration

2012
01:28:43,920 --> 01:28:48,800
changes on a

2013
01:28:45,840 --> 01:28:49,120
large set of devices so you often see

2014
01:28:48,800 --> 01:28:51,040
that

2015
01:28:49,120 --> 01:28:53,040
okay it's doing a git config initially

2016
01:28:51,040 --> 01:28:54,880
to see what the configuration on that

2017
01:28:53,040 --> 01:28:56,719
device is and get to reply

2018
01:28:54,880 --> 01:28:59,040
and then after some time longer or

2019
01:28:56,719 --> 01:29:00,320
shorter it's interested to make a change

2020
01:28:59,040 --> 01:29:02,639
and before it makes a change

2021
01:29:00,320 --> 01:29:03,759
it likes to see is this configuration

2022
01:29:02,639 --> 01:29:06,480
still the same

2023
01:29:03,760 --> 01:29:08,320
it's issues now they get config and

2024
01:29:06,480 --> 01:29:11,919
eventually gets reply and sees that

2025
01:29:08,320 --> 01:29:15,920
oh yeah it's the same but this mechanism

2026
01:29:11,920 --> 01:29:18,560
is is quite wasteful because it's

2027
01:29:15,920 --> 01:29:20,480
getting this get config reply which is

2028
01:29:18,560 --> 01:29:22,239
oftentimes exactly the same as the git

2029
01:29:20,480 --> 01:29:24,159
config reply earlier and it is pretty

2030
01:29:22,239 --> 01:29:27,280
large in many cases

2031
01:29:24,159 --> 01:29:29,519
so if there was a shorter

2032
01:29:27,280 --> 01:29:31,440
easier way to get to know if this

2033
01:29:29,520 --> 01:29:34,719
configuration is the same or not

2034
01:29:31,440 --> 01:29:34,719
that would be very convenient

2035
01:29:35,040 --> 01:29:38,800
i have seen actually several vendors

2036
01:29:37,280 --> 01:29:39,840
have implemented their own proprietary

2037
01:29:38,800 --> 01:29:42,320
mechanisms

2038
01:29:39,840 --> 01:29:43,120
for providing a shorter way to convey

2039
01:29:42,320 --> 01:29:46,320
this information

2040
01:29:43,120 --> 01:29:48,400
like a time stamp of last change or

2041
01:29:46,320 --> 01:29:49,440
some checksum of the config or something

2042
01:29:48,400 --> 01:29:51,360
that you can read

2043
01:29:49,440 --> 01:29:53,040
in order to see if anything has changed

2044
01:29:51,360 --> 01:29:55,839
at all in the device

2045
01:29:53,040 --> 01:29:56,320
but those mechanisms we are using them

2046
01:29:55,840 --> 01:29:57,600
and

2047
01:29:56,320 --> 01:29:59,679
they are kind of nice they are better

2048
01:29:57,600 --> 01:30:01,600
than nothing but

2049
01:29:59,679 --> 01:30:03,199
they are not quite good enough because

2050
01:30:01,600 --> 01:30:05,440
in many cases there have been

2051
01:30:03,199 --> 01:30:07,040
small changes somewhere but maybe not in

2052
01:30:05,440 --> 01:30:08,879
the area where

2053
01:30:07,040 --> 01:30:10,239
this particular client is interested to

2054
01:30:08,880 --> 01:30:12,320
see oh has changed

2055
01:30:10,239 --> 01:30:13,759
so it will be reported as changed but it

2056
01:30:12,320 --> 01:30:15,599
hasn't changed in anything

2057
01:30:13,760 --> 01:30:17,520
in any area that this client is caring

2058
01:30:15,600 --> 01:30:20,639
about so we are back to

2059
01:30:17,520 --> 01:30:23,600
r1 essentially

2060
01:30:20,639 --> 01:30:25,760
if you go to the next slide this

2061
01:30:23,600 --> 01:30:28,800
mechanism also has the problem that

2062
01:30:25,760 --> 01:30:30,159
uh it also often gives or sometimes

2063
01:30:28,800 --> 01:30:34,320
gives false

2064
01:30:30,159 --> 01:30:36,799
false alarms or you miss it false

2065
01:30:34,320 --> 01:30:37,759
you say that you notice that oh i issue

2066
01:30:36,800 --> 01:30:39,600
you get config

2067
01:30:37,760 --> 01:30:41,760
and you get to get a complete reply you

2068
01:30:39,600 --> 01:30:44,320
spend a lot of cpu time to

2069
01:30:41,760 --> 01:30:44,960
compute is this the same as last time

2070
01:30:44,320 --> 01:30:46,960
yeah and

2071
01:30:44,960 --> 01:30:48,000
it is but in the meantime there's a

2072
01:30:46,960 --> 01:30:49,840
window of opportunity

2073
01:30:48,000 --> 01:30:52,000
for another client to come in and make a

2074
01:30:49,840 --> 01:30:52,320
change so we think it is still the same

2075
01:30:52,000 --> 01:30:56,560
but

2076
01:30:52,320 --> 01:30:59,519
actually it has changed since

2077
01:30:56,560 --> 01:31:01,199
somebody got in in the middle so then we

2078
01:30:59,520 --> 01:31:03,440
get into the case where we are updating

2079
01:31:01,199 --> 01:31:06,719
the server in an unsynchronized manner

2080
01:31:03,440 --> 01:31:09,040
even though we will check so

2081
01:31:06,719 --> 01:31:10,880
i'm proposing a mechanism to get away

2082
01:31:09,040 --> 01:31:11,600
from both of these problems make it more

2083
01:31:10,880 --> 01:31:17,280
efficient

2084
01:31:11,600 --> 01:31:19,440
and make it more reliable next please

2085
01:31:17,280 --> 01:31:20,320
contributor i think with netcall it's

2086
01:31:19,440 --> 01:31:23,360
traditional for

2087
01:31:20,320 --> 01:31:23,840
uh lock followed by get config followed

2088
01:31:23,360 --> 01:31:26,159
by

2089
01:31:23,840 --> 01:31:28,320
uh edit config so you're ensured that

2090
01:31:26,159 --> 01:31:28,960
you're only editing the data that you

2091
01:31:28,320 --> 01:31:33,280
had gotten

2092
01:31:28,960 --> 01:31:33,280
inside the lock you speak to that

2093
01:31:39,199 --> 01:31:42,480
that would take a long time then because

2094
01:31:41,199 --> 01:31:45,599
getting the config

2095
01:31:42,480 --> 01:31:47,440
and computing if there's change uh can

2096
01:31:45,600 --> 01:31:49,440
take several minutes

2097
01:31:47,440 --> 01:31:50,960
so then you would have to lock for a

2098
01:31:49,440 --> 01:31:52,719
long time and i think

2099
01:31:50,960 --> 01:31:54,960
that's not what we see happening in real

2100
01:31:52,719 --> 01:31:59,840
networks

2101
01:31:54,960 --> 01:31:59,840
okay thanks

2102
01:32:01,040 --> 01:32:04,320
okay so i'm proposing a solution uh

2103
01:32:03,520 --> 01:32:08,080
where we say

2104
01:32:04,320 --> 01:32:09,519
that we have a concept of a transaction

2105
01:32:08,080 --> 01:32:12,559
id attribute

2106
01:32:09,520 --> 01:32:14,639
that you that the server may report

2107
01:32:12,560 --> 01:32:15,920
for every container and list elements we

2108
01:32:14,639 --> 01:32:16,880
don't want to have this on every leaf

2109
01:32:15,920 --> 01:32:20,560
and everywhere

2110
01:32:16,880 --> 01:32:23,280
but on containers and list elements

2111
01:32:20,560 --> 01:32:24,400
and we make sure that whenever there's

2112
01:32:23,280 --> 01:32:26,480
an edit config

2113
01:32:24,400 --> 01:32:27,599
the server will update the transaction

2114
01:32:26,480 --> 01:32:29,678
the id value

2115
01:32:27,600 --> 01:32:30,719
for every container and list element

2116
01:32:29,679 --> 01:32:31,840
that have been touched by this

2117
01:32:30,719 --> 01:32:34,000
transaction

2118
01:32:31,840 --> 01:32:34,880
so that the client can rely on this

2119
01:32:34,000 --> 01:32:38,320
transaction

2120
01:32:34,880 --> 01:32:41,600
id being something new if it has changed

2121
01:32:38,320 --> 01:32:44,559
if something inside it has changed

2122
01:32:41,600 --> 01:32:45,679
and the client may optionally specify a

2123
01:32:44,560 --> 01:32:47,679
transaction id

2124
01:32:45,679 --> 01:32:49,280
value that they would like the server to

2125
01:32:47,679 --> 01:32:50,880
use

2126
01:32:49,280 --> 01:32:53,519
so anything that is touched by this

2127
01:32:50,880 --> 01:32:56,000
client also it can

2128
01:32:53,520 --> 01:32:57,840
in an edit configure clients can specify

2129
01:32:56,000 --> 01:33:00,719
this transaction id

2130
01:32:57,840 --> 01:33:02,320
and then the server will apply that

2131
01:33:00,719 --> 01:33:03,040
transaction id value to everything that

2132
01:33:02,320 --> 01:33:05,199
has been touched

2133
01:33:03,040 --> 01:33:07,199
but also the client during a get config

2134
01:33:05,199 --> 01:33:08,159
can specify transaction ids or what it

2135
01:33:07,199 --> 01:33:10,799
expects

2136
01:33:08,159 --> 01:33:12,638
to say oh i believe the contents of this

2137
01:33:10,800 --> 01:33:15,600
container or this list element

2138
01:33:12,639 --> 01:33:16,880
has this transaction id and if it

2139
01:33:15,600 --> 01:33:18,960
matches

2140
01:33:16,880 --> 01:33:20,560
there's no need for the server to send

2141
01:33:18,960 --> 01:33:22,480
the content of that

2142
01:33:20,560 --> 01:33:25,760
and on the next slide please uh i have

2143
01:33:22,480 --> 01:33:27,599
an example of what that looks like

2144
01:33:25,760 --> 01:33:30,560
so here we have an initial sync where

2145
01:33:27,600 --> 01:33:33,600
the client is issuing a get config

2146
01:33:30,560 --> 01:33:34,800
and with a filter for interfaces in

2147
01:33:33,600 --> 01:33:38,080
nacom

2148
01:33:34,800 --> 01:33:38,560
and on the interfaces it says hey can i

2149
01:33:38,080 --> 01:33:41,120
have

2150
01:33:38,560 --> 01:33:42,159
the transaction ids for this please by

2151
01:33:41,120 --> 01:33:47,120
issuing this in tag

2152
01:33:42,159 --> 01:33:47,120
equals question mark next please

2153
01:33:47,600 --> 01:33:51,360
and this is what a reply might look like

2154
01:33:50,800 --> 01:33:54,880
so

2155
01:33:51,360 --> 01:33:58,000
here the server has uh decorated

2156
01:33:54,880 --> 01:34:00,880
the reply with these transaction and tag

2157
01:33:58,000 --> 01:34:02,639
values and you can see this def

2158
01:34:00,880 --> 01:34:04,239
something that's something on various

2159
01:34:02,639 --> 01:34:06,080
containers on the

2160
01:34:04,239 --> 01:34:08,400
well you have on the top level here data

2161
01:34:06,080 --> 01:34:10,719
which is for the entire data store

2162
01:34:08,400 --> 01:34:13,519
saying that the global transaction id

2163
01:34:10,719 --> 01:34:15,760
for the data store is stiff

2164
01:34:13,520 --> 01:34:18,080
whereas for interfaces the whole set of

2165
01:34:15,760 --> 01:34:19,600
interfaces container is

2166
01:34:18,080 --> 01:34:21,120
and for a particular interface here

2167
01:34:19,600 --> 01:34:23,360
gigabit decent zero zero

2168
01:34:21,120 --> 01:34:25,599
it's def eight eight but uh another

2169
01:34:23,360 --> 01:34:30,320
interface gigabit ethernet zero one

2170
01:34:25,600 --> 01:34:32,639
has an older end tag called abc123

2171
01:34:30,320 --> 01:34:34,000
so this is how the server would decorate

2172
01:34:32,639 --> 01:34:36,960
the replies with

2173
01:34:34,000 --> 01:34:38,560
these tags for the areas of the response

2174
01:34:36,960 --> 01:34:40,560
where it was requested by the client

2175
01:34:38,560 --> 01:34:44,719
earlier

2176
01:34:40,560 --> 01:34:44,719
in the filter next please

2177
01:34:45,280 --> 01:34:51,280
and then later uh the client can say

2178
01:34:48,639 --> 01:34:52,239
okay i do get convict here on the

2179
01:34:51,280 --> 01:34:54,719
interfaces

2180
01:34:52,239 --> 01:34:56,400
with this and tag value abc123 which is

2181
01:34:54,719 --> 01:34:59,840
what i expect to be here

2182
01:34:56,400 --> 01:35:01,679
and next please this is how a server

2183
01:34:59,840 --> 01:35:03,600
would replied and it would say

2184
01:35:01,679 --> 01:35:04,719
yeah it has actually been some changes

2185
01:35:03,600 --> 01:35:08,719
in interfaces

2186
01:35:04,719 --> 01:35:09,920
so the the global transaction id is now

2187
01:35:08,719 --> 01:35:13,040
dev88

2188
01:35:09,920 --> 01:35:14,800
interface is also the date this give it

2189
01:35:13,040 --> 01:35:15,519
ethernet zero zero has also changed it's

2190
01:35:14,800 --> 01:35:17,840
definitely

2191
01:35:15,520 --> 01:35:17,840
and here's

2192
01:35:20,159 --> 01:35:29,839
the one which had

2193
01:35:41,520 --> 01:35:46,159
i think that was all my slides basically

2194
01:35:43,600 --> 01:35:49,840
go let's take the next one

2195
01:35:46,159 --> 01:35:52,879
yeah okay right uh so in a edit config

2196
01:35:49,840 --> 01:35:54,719
we could uh the client could also say

2197
01:35:52,880 --> 01:35:57,760
hey i expect

2198
01:35:54,719 --> 01:36:01,040
the transaction id of this interface

2199
01:35:57,760 --> 01:36:04,159
to be ghi5555

2200
01:36:01,040 --> 01:36:07,119
uh so if it is

2201
01:36:04,159 --> 01:36:09,759
go ahead and run this transaction and

2202
01:36:07,119 --> 01:36:11,679
delete this interface in this case

2203
01:36:09,760 --> 01:36:13,119
but if it isn't if one of these

2204
01:36:11,679 --> 01:36:14,800
transaction ids

2205
01:36:13,119 --> 01:36:17,839
have a mismatch then abort the whole

2206
01:36:14,800 --> 01:36:19,520
transaction and report it

2207
01:36:17,840 --> 01:36:22,400
things are not the way that you expected

2208
01:36:19,520 --> 01:36:24,880
since things have moved since you last

2209
01:36:22,400 --> 01:36:27,040
synchronized so then the transaction is

2210
01:36:24,880 --> 01:36:29,520
supported so that's a safe way of

2211
01:36:27,040 --> 01:36:30,560
performing this edit i think there was

2212
01:36:29,520 --> 01:36:34,159
one more slide with

2213
01:36:30,560 --> 01:36:38,239
just some see thank you

2214
01:36:34,159 --> 01:36:40,638
do you have a question or comment

2215
01:36:38,239 --> 01:36:40,638
go ahead

2216
01:36:42,320 --> 01:36:48,719
i have a question um and it's really

2217
01:36:45,440 --> 01:36:52,159
maybe uh can you address the issue of

2218
01:36:48,719 --> 01:36:53,840
the the race condition where uh you know

2219
01:36:52,159 --> 01:36:56,719
you set a transaction id

2220
01:36:53,840 --> 01:36:58,320
of foo and uh by the time you come back

2221
01:36:56,719 --> 01:37:01,199
with the git config

2222
01:36:58,320 --> 01:37:02,639
uh elements that you have changed is

2223
01:37:01,199 --> 01:37:05,119
have been changed uh

2224
01:37:02,639 --> 01:37:06,000
either by the system or or or through

2225
01:37:05,119 --> 01:37:08,239
other some other

2226
01:37:06,000 --> 01:37:09,760
client is that is that the intention how

2227
01:37:08,239 --> 01:37:12,239
do you handle the fact that your

2228
01:37:09,760 --> 01:37:13,520
data set of what you thought you changed

2229
01:37:12,239 --> 01:37:15,199
got changed between

2230
01:37:13,520 --> 01:37:17,920
between the time you changed it and you

2231
01:37:15,199 --> 01:37:20,080
got and you issued the kit

2232
01:37:17,920 --> 01:37:20,960
yeah this is exactly the mechanism to

2233
01:37:20,080 --> 01:37:24,000
handle that

2234
01:37:20,960 --> 01:37:27,840
problem so by the client

2235
01:37:24,000 --> 01:37:29,440
uh proposing a transaction id when it's

2236
01:37:27,840 --> 01:37:31,760
making another config

2237
01:37:29,440 --> 01:37:32,960
or by this and certainly by the server

2238
01:37:31,760 --> 01:37:35,119
guaranteeing that whatever

2239
01:37:32,960 --> 01:37:37,440
something changes a new transaction id

2240
01:37:35,119 --> 01:37:40,480
has to come on to this to the touched

2241
01:37:37,440 --> 01:37:43,678
containers and list elements that's how

2242
01:37:40,480 --> 01:37:45,919
a client can be sure that only

2243
01:37:43,679 --> 01:37:48,239
it can read updates only by using

2244
01:37:45,920 --> 01:37:50,320
getconfig with these transaction ids

2245
01:37:48,239 --> 01:37:51,440
and it can edit config safely by adding

2246
01:37:50,320 --> 01:37:54,480
this transaction id

2247
01:37:51,440 --> 01:37:56,000
for what it expects and only if all the

2248
01:37:54,480 --> 01:37:56,638
tags that is mentioned in the edit

2249
01:37:56,000 --> 01:37:58,880
config

2250
01:37:56,639 --> 01:38:00,159
are matching only then will the

2251
01:37:58,880 --> 01:38:03,520
transaction go through

2252
01:38:00,159 --> 01:38:05,839
so that's a safety lock there yeah but i

2253
01:38:03,520 --> 01:38:08,960
as a client won't know

2254
01:38:05,840 --> 01:38:09,199
i don't have any assurance that what i

2255
01:38:08,960 --> 01:38:12,400
have

2256
01:38:09,199 --> 01:38:16,080
changed under this transaction id

2257
01:38:12,400 --> 01:38:19,119
is indeed what is still changed when i

2258
01:38:16,080 --> 01:38:20,559
do like to get config right after i i

2259
01:38:19,119 --> 01:38:23,839
make my changes

2260
01:38:20,560 --> 01:38:26,800
or or i wait three seconds or

2261
01:38:23,840 --> 01:38:27,600
three minutes right i mean is that is

2262
01:38:26,800 --> 01:38:30,880
that

2263
01:38:27,600 --> 01:38:34,480
expected or is that a a hole in the uh

2264
01:38:30,880 --> 01:38:34,480
the concept right um

2265
01:38:34,719 --> 01:38:38,320
because you don't have any uh um with

2266
01:38:36,880 --> 01:38:39,679
lock everything's atomic

2267
01:38:38,320 --> 01:38:41,679
right you know everything's there and

2268
01:38:39,679 --> 01:38:44,480
it's and it's atomic with this

2269
01:38:41,679 --> 01:38:44,880
this is kind of it's not it's not as

2270
01:38:44,480 --> 01:38:47,919
it's

2271
01:38:44,880 --> 01:38:50,560
it's not safe in terms of the uh

2272
01:38:47,920 --> 01:38:52,239
uh the the transactional set right you

2273
01:38:50,560 --> 01:38:53,440
know that you know that this is what's

2274
01:38:52,239 --> 01:38:55,919
changed

2275
01:38:53,440 --> 01:38:56,960
uh uh what has changed which which

2276
01:38:55,920 --> 01:38:59,440
elements which

2277
01:38:56,960 --> 01:39:01,199
leafs have changed right it is

2278
01:38:59,440 --> 01:39:03,919
absolutely atomic if any

2279
01:39:01,199 --> 01:39:06,879
tags do not match now the transaction is

2280
01:39:03,920 --> 01:39:06,880
aborted entirely

2281
01:39:07,119 --> 01:39:10,639
right not giving up on transactionality

2282
01:39:08,880 --> 01:39:12,639
oh you're saying like on the delete

2283
01:39:10,639 --> 01:39:14,239
in in the i was talking about just the

2284
01:39:12,639 --> 01:39:16,639
original change with the get

2285
01:39:14,239 --> 01:39:20,159
i'm sorry i was back on the previous

2286
01:39:16,639 --> 01:39:20,159
slide when i when i entered the q

2287
01:39:20,639 --> 01:39:24,800
so i come in i do an edit config right

2288
01:39:22,719 --> 01:39:26,400
i'm not doing a delete operation yet

2289
01:39:24,800 --> 01:39:27,119
right i'm just trying to figure out what

2290
01:39:26,400 --> 01:39:29,440
changed

2291
01:39:27,119 --> 01:39:30,960
right so i do an edit config i say tag

2292
01:39:29,440 --> 01:39:33,839
foo right

2293
01:39:30,960 --> 01:39:34,719
and then i say okay git config you know

2294
01:39:33,840 --> 01:39:36,159
and i want to get the

2295
01:39:34,719 --> 01:39:37,920
now i want to understand which nodes

2296
01:39:36,159 --> 01:39:40,799
were changed to foo right

2297
01:39:37,920 --> 01:39:42,080
based upon foo but in between then some

2298
01:39:40,800 --> 01:39:42,560
other client can come in and make a

2299
01:39:42,080 --> 01:39:45,760
change

2300
01:39:42,560 --> 01:39:48,320
right and so it loses that tag

2301
01:39:45,760 --> 01:39:50,080
and so i never really understand there's

2302
01:39:48,320 --> 01:39:51,280
there's opportunity or there's chances

2303
01:39:50,080 --> 01:39:52,639
there that i will never really

2304
01:39:51,280 --> 01:39:54,639
understand

2305
01:39:52,639 --> 01:39:56,320
uh what actually changed right

2306
01:39:54,639 --> 01:40:01,440
particularly if it's a

2307
01:39:56,320 --> 01:40:01,440
quick changing set of nodes

2308
01:40:02,320 --> 01:40:08,239
or frequently changing set of nodes

2309
01:40:05,520 --> 01:40:09,520
i i just is that accurate i'm just

2310
01:40:08,239 --> 01:40:12,080
trying to make sure i understand

2311
01:40:09,520 --> 01:40:12,719
if that's a problem right i may not

2312
01:40:12,080 --> 01:40:15,119
understand

2313
01:40:12,719 --> 01:40:16,239
your intent exactly here so i mean if

2314
01:40:15,119 --> 01:40:19,519
you're interested in

2315
01:40:16,239 --> 01:40:21,839
knowing uh the exact state of the device

2316
01:40:19,520 --> 01:40:23,520
you're welcome to either do a get config

2317
01:40:21,840 --> 01:40:26,639
of everything and

2318
01:40:23,520 --> 01:40:27,760
or to do a subscription of some sort you

2319
01:40:26,639 --> 01:40:30,400
can do that to info

2320
01:40:27,760 --> 01:40:31,760
in order to follow everything but what

2321
01:40:30,400 --> 01:40:34,080
this is about is

2322
01:40:31,760 --> 01:40:36,480
to ensure that when when a client has a

2323
01:40:34,080 --> 01:40:38,639
view of

2324
01:40:36,480 --> 01:40:39,759
the states of the server it should be

2325
01:40:38,639 --> 01:40:42,239
able to

2326
01:40:39,760 --> 01:40:43,679
verify that view quickly by saying okay

2327
01:40:42,239 --> 01:40:46,159
i know this about

2328
01:40:43,679 --> 01:40:47,360
the configuration and these are the tags

2329
01:40:46,159 --> 01:40:49,360
i'm aware

2330
01:40:47,360 --> 01:40:50,480
and just report the differences versus

2331
01:40:49,360 --> 01:40:52,239
what i know

2332
01:40:50,480 --> 01:40:54,000
so that's the mechanism i'm looking for

2333
01:40:52,239 --> 01:40:55,599
here okay that's

2334
01:40:54,000 --> 01:40:57,360
so now i kind of understand it you're

2335
01:40:55,600 --> 01:40:58,400
just saying hey look i i made this

2336
01:40:57,360 --> 01:41:00,719
modification

2337
01:40:58,400 --> 01:41:02,638
and then i want to go back and do some

2338
01:41:00,719 --> 01:41:04,080
editing but only if i'm the last one

2339
01:41:02,639 --> 01:41:07,199
that changed it right okay

2340
01:41:04,080 --> 01:41:08,880
all right now yes yes yes and the

2341
01:41:07,199 --> 01:41:10,638
also the case that okay there may be

2342
01:41:08,880 --> 01:41:12,159
changes and if there are let me know

2343
01:41:10,639 --> 01:41:12,800
what those changes are versus what i

2344
01:41:12,159 --> 01:41:15,519
know

2345
01:41:12,800 --> 01:41:17,440
so don't report everything everywhere if

2346
01:41:15,520 --> 01:41:20,800
if things are as i expect them to be

2347
01:41:17,440 --> 01:41:23,119
then don't report them okay

2348
01:41:20,800 --> 01:41:24,960
sorry guys uh i know i'm in the queue

2349
01:41:23,119 --> 01:41:27,759
and the last is after me but

2350
01:41:24,960 --> 01:41:29,920
uh we are really out of time on this so

2351
01:41:27,760 --> 01:41:33,520
sorry bilas can you take your question

2352
01:41:29,920 --> 01:41:34,560
to the mailing list um actually my hash

2353
01:41:33,520 --> 01:41:38,080
i i'll give

2354
01:41:34,560 --> 01:41:40,400
some time to below it's okay

2355
01:41:38,080 --> 01:41:41,600
maybe my presentation with that for this

2356
01:41:40,400 --> 01:41:42,000
one for for other people who are

2357
01:41:41,600 --> 01:41:44,400
wondering

2358
01:41:42,000 --> 01:41:46,080
where that's coming from go ahead what's

2359
01:41:44,400 --> 01:41:48,719
your question uh

2360
01:41:46,080 --> 01:41:49,360
my point is that we have something very

2361
01:41:48,719 --> 01:41:51,280
similar

2362
01:41:49,360 --> 01:41:52,480
in rest golf and it would be good to

2363
01:41:51,280 --> 01:41:55,040
understand that

2364
01:41:52,480 --> 01:41:56,239
is this the same mechanism actually or

2365
01:41:55,040 --> 01:42:00,080
are we

2366
01:41:56,239 --> 01:42:01,919
if we have a data store that is

2367
01:42:00,080 --> 01:42:03,600
visible both on rest conf and net

2368
01:42:01,920 --> 01:42:06,400
confidence do we have to supply

2369
01:42:03,600 --> 01:42:07,760
uh support to similar but not the same

2370
01:42:06,400 --> 01:42:11,280
manners

2371
01:42:07,760 --> 01:42:12,320
so describe somehow the relationship

2372
01:42:11,280 --> 01:42:16,239
with

2373
01:42:12,320 --> 01:42:18,480
rest config tags yes this was definitely

2374
01:42:16,239 --> 01:42:19,759
greatly inspired by the e-tags and my

2375
01:42:18,480 --> 01:42:21,519
intention is that

2376
01:42:19,760 --> 01:42:23,280
the server implementation should be able

2377
01:42:21,520 --> 01:42:25,920
to be joined here

2378
01:42:23,280 --> 01:42:26,639
but things are still early in this draft

2379
01:42:25,920 --> 01:42:28,480
and

2380
01:42:26,639 --> 01:42:30,000
we will see where it takes it i don't

2381
01:42:28,480 --> 01:42:31,919
want to

2382
01:42:30,000 --> 01:42:34,159
guarantee that it will be exactly the

2383
01:42:31,920 --> 01:42:37,280
same or very much compatible with

2384
01:42:34,159 --> 01:42:38,799
e-tags but yes it is the same mechanism

2385
01:42:37,280 --> 01:42:43,840
that we have in e-tax already that i'm

2386
01:42:38,800 --> 01:42:43,840
trying to describe here

2387
01:42:56,320 --> 01:43:03,920
all right i know i i'm on the cue so

2388
01:42:59,760 --> 01:43:03,920
if it's okay can i take one more minute

2389
01:43:07,520 --> 01:43:14,880
i'll take that as a yes uh so

2390
01:43:10,639 --> 01:43:16,560
um again i i understand the optimization

2391
01:43:14,880 --> 01:43:18,639
in terms of trying to tag

2392
01:43:16,560 --> 01:43:19,840
at least at the container and the list

2393
01:43:18,639 --> 01:43:21,679
known but

2394
01:43:19,840 --> 01:43:23,440
couldn't this be a little more cold

2395
01:43:21,679 --> 01:43:27,199
strained for

2396
01:43:23,440 --> 01:43:31,199
um you just say for a given config

2397
01:43:27,199 --> 01:43:33,759
or a transaction you have a tag

2398
01:43:31,199 --> 01:43:34,960
and if you're trying to edit it and if

2399
01:43:33,760 --> 01:43:37,440
the tag doesn't match

2400
01:43:34,960 --> 01:43:39,440
you request that you do it now you

2401
01:43:37,440 --> 01:43:42,480
request the client make another

2402
01:43:39,440 --> 01:43:46,159
get config request before moving to

2403
01:43:42,480 --> 01:43:48,320
to try to make any edit changes meaning

2404
01:43:46,159 --> 01:43:50,159
you don't have to necessarily carry tag

2405
01:43:48,320 --> 01:43:52,880
at every container and list level you

2406
01:43:50,159 --> 01:43:54,559
could carry it at the transaction level

2407
01:43:52,880 --> 01:43:57,280
yes it's up to the client to decide

2408
01:43:54,560 --> 01:43:59,119
where what parts of the transaction it

2409
01:43:57,280 --> 01:44:00,559
really cares about things being the same

2410
01:43:59,119 --> 01:44:02,639
it can say for this part of the tree

2411
01:44:00,560 --> 01:44:04,400
i'll just go ahead as

2412
01:44:02,639 --> 01:44:06,239
traditional config but for the

2413
01:44:04,400 --> 01:44:07,679
interfaces list i'm really interested to

2414
01:44:06,239 --> 01:44:08,080
make sure that all the interviews that i

2415
01:44:07,679 --> 01:44:09,760
touch

2416
01:44:08,080 --> 01:44:12,000
are untouched or that no interfaces have

2417
01:44:09,760 --> 01:44:13,679
been passed or a particular aspect of

2418
01:44:12,000 --> 01:44:14,400
the details of one interface are

2419
01:44:13,679 --> 01:44:16,320
important

2420
01:44:14,400 --> 01:44:20,080
it's up to the client to decide where

2421
01:44:16,320 --> 01:44:23,599
the tags have to match

2422
01:44:20,080 --> 01:44:25,920
so uh so as chair um

2423
01:44:23,600 --> 01:44:27,119
can you go ahead and bring up my my last

2424
01:44:25,920 --> 01:44:30,320
presentation

2425
01:44:27,119 --> 01:44:32,960
um but as a contributor to yan

2426
01:44:30,320 --> 01:44:35,920
um i would recommend trying to align

2427
01:44:32,960 --> 01:44:39,199
this work exactly with resconf

2428
01:44:35,920 --> 01:44:42,800
uh if possible because i know that

2429
01:44:39,199 --> 01:44:45,599
some you know servers that present both

2430
01:44:42,800 --> 01:44:47,520
restaurant and netconf actually build

2431
01:44:45,600 --> 01:44:48,400
one of those interfaces on top of the

2432
01:44:47,520 --> 01:44:51,360
other

2433
01:44:48,400 --> 01:44:53,280
um and i think typically rest conf is

2434
01:44:51,360 --> 01:44:56,400
built on top of netconf but

2435
01:44:53,280 --> 01:44:57,920
um anyway if it i guess the question is

2436
01:44:56,400 --> 01:44:59,519
why wouldn't why couldn't it be the line

2437
01:44:57,920 --> 01:45:01,840
or aligned why wouldn't it be

2438
01:44:59,520 --> 01:45:02,960
aligned it was the reasoning for not

2439
01:45:01,840 --> 01:45:05,600
being aligned i think

2440
01:45:02,960 --> 01:45:06,239
uh i'm taking it to the list but please

2441
01:45:05,600 --> 01:45:08,880
um

2442
01:45:06,239 --> 01:45:10,239
try to address that comment later

2443
01:45:08,880 --> 01:45:11,600
certainly

2444
01:45:10,239 --> 01:45:13,839
all right my hush can you go full screen

2445
01:45:11,600 --> 01:45:13,840
please

2446
01:45:15,280 --> 01:45:20,480
okay so this is the last presentation um

2447
01:45:18,560 --> 01:45:21,840
as everyone probably saw on the list

2448
01:45:20,480 --> 01:45:24,879
there was some interest

2449
01:45:21,840 --> 01:45:27,840
in introducing support for list

2450
01:45:24,880 --> 01:45:29,600
pagination in both the netconf and the

2451
01:45:27,840 --> 01:45:32,639
rest comp protocols

2452
01:45:29,600 --> 01:45:36,080
i sent out a

2453
01:45:32,639 --> 01:45:39,360
call for participation and

2454
01:45:36,080 --> 01:45:42,719
did get some respondents responses

2455
01:45:39,360 --> 01:45:44,719
thank you jin olaf and way

2456
01:45:42,719 --> 01:45:46,000
there are actually also other

2457
01:45:44,719 --> 01:45:49,679
respondents but

2458
01:45:46,000 --> 01:45:52,080
um they haven't yet contributed

2459
01:45:49,679 --> 01:45:53,199
and so they're not yet listed here but

2460
01:45:52,080 --> 01:45:55,360
hopefully that will

2461
01:45:53,199 --> 01:45:58,159
improve next next presentation next

2462
01:45:55,360 --> 01:46:00,799
slide please

2463
01:45:58,159 --> 01:46:03,280
the motivation for this work is to first

2464
01:46:00,800 --> 01:46:04,480
inform us to better support user-facing

2465
01:46:03,280 --> 01:46:06,960
client interfaces

2466
01:46:04,480 --> 01:46:07,919
interacting with data from potentially

2467
01:46:06,960 --> 01:46:11,199
large

2468
01:46:07,920 --> 01:46:12,000
lists examples of potentially large

2469
01:46:11,199 --> 01:46:15,759
lists

2470
01:46:12,000 --> 01:46:18,239
include traffic logs or really any time

2471
01:46:15,760 --> 01:46:19,600
series data which might include audit

2472
01:46:18,239 --> 01:46:22,400
log but in general

2473
01:46:19,600 --> 01:46:23,600
um those uh time is kind of like config

2474
01:46:22,400 --> 01:46:26,638
false

2475
01:46:23,600 --> 01:46:28,320
op state type data but also within

2476
01:46:26,639 --> 01:46:31,760
configuration there are some

2477
01:46:28,320 --> 01:46:35,280
very large lists sometimes interfaces

2478
01:46:31,760 --> 01:46:37,679
or firewall rule bases can grow to be in

2479
01:46:35,280 --> 01:46:39,440
the thousands

2480
01:46:37,679 --> 01:46:41,280
and of course it's all very manageable

2481
01:46:39,440 --> 01:46:44,719
today with existing

2482
01:46:41,280 --> 01:46:47,360
and you know netconf i mean already

2483
01:46:44,719 --> 01:46:48,639
the client gets the entirety of the

2484
01:46:47,360 --> 01:46:52,080
large configured

2485
01:46:48,639 --> 01:46:53,679
list and then handles it itself in its

2486
01:46:52,080 --> 01:46:56,159
own memory

2487
01:46:53,679 --> 01:46:57,520
but if we are already solving the

2488
01:46:56,159 --> 01:47:01,040
problem for

2489
01:46:57,520 --> 01:47:05,119
the extremely large potentially

2490
01:47:01,040 --> 01:47:07,040
upstate list also you know

2491
01:47:05,119 --> 01:47:10,000
transferring that to the config true

2492
01:47:07,040 --> 01:47:13,679
lists would be of some benefit

2493
01:47:10,000 --> 01:47:17,199
and then lastly server-side processing

2494
01:47:13,679 --> 01:47:21,199
in general reduces latency

2495
01:47:17,199 --> 01:47:23,759
and bandwidth and client resources

2496
01:47:21,199 --> 01:47:26,480
so that's motivation behind this work

2497
01:47:23,760 --> 01:47:26,480
next slide please

2498
01:47:27,920 --> 01:47:32,560
the solution okay the i'm just looking

2499
01:47:31,280 --> 01:47:34,239
the graphics uh

2500
01:47:32,560 --> 01:47:35,920
no it's not like the bottom line is all

2501
01:47:34,239 --> 01:47:38,480
crossed out it's supposed to be filter

2502
01:47:35,920 --> 01:47:39,920
goes to sword sword goes a direction etc

2503
01:47:38,480 --> 01:47:42,000
you can see the little arrows but it's

2504
01:47:39,920 --> 01:47:43,440
uh it's not looking quite right anyway

2505
01:47:42,000 --> 01:47:46,080
i'll let me go back up to the top

2506
01:47:43,440 --> 01:47:46,719
of the slide the solution proposal is to

2507
01:47:46,080 --> 01:47:50,080
introduce

2508
01:47:46,719 --> 01:47:53,760
uh to both netconf and russkoff an api

2509
01:47:50,080 --> 01:47:55,600
for list pagination there's five control

2510
01:47:53,760 --> 01:47:56,320
points that have been discussed and this

2511
01:47:55,600 --> 01:47:58,800
was

2512
01:47:56,320 --> 01:48:00,159
on the list so i'm a bit repeating but

2513
01:47:58,800 --> 01:48:02,239
since this is the first

2514
01:48:00,159 --> 01:48:03,679
presentation introducing the work i

2515
01:48:02,239 --> 01:48:06,959
wanted to make sure

2516
01:48:03,679 --> 01:48:10,400
there's a slide for it um there's the

2517
01:48:06,960 --> 01:48:13,040
ability to limit the number of results

2518
01:48:10,400 --> 01:48:15,759
that are returned in the response

2519
01:48:13,040 --> 01:48:18,880
there's the ability to control the point

2520
01:48:15,760 --> 01:48:20,239
at which the result set begins you know

2521
01:48:18,880 --> 01:48:21,679
maybe you don't want to start always

2522
01:48:20,239 --> 01:48:22,559
start at the very beginning of the list

2523
01:48:21,679 --> 01:48:25,520
you might want to

2524
01:48:22,560 --> 01:48:26,000
begin somewhere in the middle uh there's

2525
01:48:25,520 --> 01:48:28,639
the

2526
01:48:26,000 --> 01:48:30,320
direction that the results are returned

2527
01:48:28,639 --> 01:48:33,360
are they returned in the forward or

2528
01:48:30,320 --> 01:48:35,759
reverse direction and

2529
01:48:33,360 --> 01:48:36,799
potentially there's the ability to sort

2530
01:48:35,760 --> 01:48:40,800
the results

2531
01:48:36,800 --> 01:48:43,920
maybe um on a particular node or in

2532
01:48:40,800 --> 01:48:45,440
in sql terms on a column you know sort

2533
01:48:43,920 --> 01:48:48,000
on a particular column and then

2534
01:48:45,440 --> 01:48:49,360
and then the results would be in that

2535
01:48:48,000 --> 01:48:53,040
order

2536
01:48:49,360 --> 01:48:56,080
or if it's an order by user list

2537
01:48:53,040 --> 01:48:59,119
by default the order is the order

2538
01:48:56,080 --> 01:49:01,679
the configured order as it were by the

2539
01:48:59,119 --> 01:49:03,839
order by user list

2540
01:49:01,679 --> 01:49:05,119
and then lastly there's potentially the

2541
01:49:03,840 --> 01:49:07,760
ability to filter

2542
01:49:05,119 --> 01:49:09,119
the items maybe the client is only

2543
01:49:07,760 --> 01:49:11,360
interested in

2544
01:49:09,119 --> 01:49:13,280
zooming in to a particular subset of the

2545
01:49:11,360 --> 01:49:15,199
data

2546
01:49:13,280 --> 01:49:17,040
now these control points are actually

2547
01:49:15,199 --> 01:49:18,400
ordered in processing there's a

2548
01:49:17,040 --> 01:49:21,199
processing order

2549
01:49:18,400 --> 01:49:21,920
uh it is in fact the reverse order so

2550
01:49:21,199 --> 01:49:25,360
first

2551
01:49:21,920 --> 01:49:26,480
the results are filtered filters in

2552
01:49:25,360 --> 01:49:29,280
general are very

2553
01:49:26,480 --> 01:49:30,239
fast they're almost always well

2554
01:49:29,280 --> 01:49:33,360
hopefully the

2555
01:49:30,239 --> 01:49:34,159
node or the leaf that you're filtering

2556
01:49:33,360 --> 01:49:37,598
on has been

2557
01:49:34,159 --> 01:49:38,080
indexed by your backend database so it's

2558
01:49:37,599 --> 01:49:41,119
a

2559
01:49:38,080 --> 01:49:44,239
fairly it's a pretty fast operation

2560
01:49:41,119 --> 01:49:46,239
to do the filter uh and then if there is

2561
01:49:44,239 --> 01:49:47,280
a need to do source that would happen

2562
01:49:46,239 --> 01:49:49,839
after the filter

2563
01:49:47,280 --> 01:49:50,880
so you're only sorting the subset of the

2564
01:49:49,840 --> 01:49:53,599
data that has

2565
01:49:50,880 --> 01:49:53,920
uh gotten through the filter uh if there

2566
01:49:53,599 --> 01:49:57,040
were

2567
01:49:53,920 --> 01:50:00,159
was a filter then lastly the direction

2568
01:49:57,040 --> 01:50:01,760
and and then um and then you can

2569
01:50:00,159 --> 01:50:04,239
choose whether or not you're going to

2570
01:50:01,760 --> 01:50:06,560
skip or do an offset into that result

2571
01:50:04,239 --> 01:50:08,638
set and then and then lastly figure out

2572
01:50:06,560 --> 01:50:10,719
what subset of the data or

2573
01:50:08,639 --> 01:50:12,159
how many re number of the results that

2574
01:50:10,719 --> 01:50:16,000
you're going to return

2575
01:50:12,159 --> 01:50:17,679
so that is the processing order and um

2576
01:50:16,000 --> 01:50:20,159
for those that are familiar with sql

2577
01:50:17,679 --> 01:50:23,520
that is exactly what sql does

2578
01:50:20,159 --> 01:50:25,759
and i imagine it is the same for

2579
01:50:23,520 --> 01:50:26,639
most backend databases but that is in

2580
01:50:25,760 --> 01:50:29,840
fact uh

2581
01:50:26,639 --> 01:50:32,960
what this uh author list is

2582
01:50:29,840 --> 01:50:34,960
is doing so there's a number of

2583
01:50:32,960 --> 01:50:37,280
authors that are or you know some

2584
01:50:34,960 --> 01:50:39,679
authors are more implementation oriented

2585
01:50:37,280 --> 01:50:41,920
and so we have a representation of

2586
01:50:39,679 --> 01:50:45,280
different backend databases

2587
01:50:41,920 --> 01:50:48,560
and we're doing prototypes to of this

2588
01:50:45,280 --> 01:50:50,880
of all this to ensure that it's mappable

2589
01:50:48,560 --> 01:50:53,840
to the various backend databases next

2590
01:50:50,880 --> 01:50:53,840
slide please

2591
01:50:55,599 --> 01:50:59,599
okay so this is mostly discussion so i

2592
01:50:58,960 --> 01:51:02,560
have

2593
01:50:59,599 --> 01:51:03,199
questions to the group they're first

2594
01:51:02,560 --> 01:51:05,520
there's

2595
01:51:03,199 --> 01:51:07,280
some protocol independent questions and

2596
01:51:05,520 --> 01:51:08,159
the first three are actually related so

2597
01:51:07,280 --> 01:51:09,679
i'm going to

2598
01:51:08,159 --> 01:51:11,679
speak to i'm going to say them all but

2599
01:51:09,679 --> 01:51:14,560
then sort of go back and ask

2600
01:51:11,679 --> 01:51:15,679
for comments on each one at a time so

2601
01:51:14,560 --> 01:51:18,000
first

2602
01:51:15,679 --> 01:51:19,679
how important is it to iterate over

2603
01:51:18,000 --> 01:51:22,800
stable result sets

2604
01:51:19,679 --> 01:51:25,520
i think it was jan who had

2605
01:51:22,800 --> 01:51:27,280
posted a comment about this to the list

2606
01:51:25,520 --> 01:51:30,960
but essentially should something like

2607
01:51:27,280 --> 01:51:34,000
cursors or snapshots be supported

2608
01:51:30,960 --> 01:51:36,239
and just sort of thinking out loud i'm

2609
01:51:34,000 --> 01:51:37,040
i'm you know for configured for

2610
01:51:36,239 --> 01:51:40,480
configure

2611
01:51:37,040 --> 01:51:42,960
for configuration um

2612
01:51:40,480 --> 01:51:44,320
with rest conf at least and and in the

2613
01:51:42,960 --> 01:51:46,480
last presentation the

2614
01:51:44,320 --> 01:51:47,759
the uh the equivalent of an e-tag or

2615
01:51:46,480 --> 01:51:50,159
timestamps uh

2616
01:51:47,760 --> 01:51:51,440
you know that is that good enough uh in

2617
01:51:50,159 --> 01:51:54,799
the sense that

2618
01:51:51,440 --> 01:51:57,598
um you know if you're doing like a get

2619
01:51:54,800 --> 01:51:59,119
on you know data and and you're saying

2620
01:51:57,599 --> 01:52:00,400
okay i know the e tag is supposed to

2621
01:51:59,119 --> 01:52:01,280
this where i know the time is supposed

2622
01:52:00,400 --> 01:52:03,759
to be this

2623
01:52:01,280 --> 01:52:05,519
and um you know if and you're you're

2624
01:52:03,760 --> 01:52:07,520
indexing or you're paging into the

2625
01:52:05,520 --> 01:52:08,560
data set but now the data set's been

2626
01:52:07,520 --> 01:52:10,800
changed under

2627
01:52:08,560 --> 01:52:12,080
under under the hood um you know

2628
01:52:10,800 --> 01:52:13,760
wouldn't it be good enough to

2629
01:52:12,080 --> 01:52:15,519
just for the client to get back an error

2630
01:52:13,760 --> 01:52:16,080
uh saying hey the data set's changed you

2631
01:52:15,520 --> 01:52:19,599
need to

2632
01:52:16,080 --> 01:52:22,000
restart your pet your pagination um

2633
01:52:19,599 --> 01:52:23,119
or is that not good enough and you we

2634
01:52:22,000 --> 01:52:25,199
actually need to create

2635
01:52:23,119 --> 01:52:26,320
uh something like a cursor um or

2636
01:52:25,199 --> 01:52:28,799
snapchat

2637
01:52:26,320 --> 01:52:30,000
uh so that's for my thinking out loud

2638
01:52:28,800 --> 01:52:33,520
for configuration and then

2639
01:52:30,000 --> 01:52:34,239
thinking out for upstate for again i'm

2640
01:52:33,520 --> 01:52:35,920
assuming

2641
01:52:34,239 --> 01:52:37,598
we're talking about read only time

2642
01:52:35,920 --> 01:52:41,040
series data like

2643
01:52:37,599 --> 01:52:42,880
audit log or traffic logs and

2644
01:52:41,040 --> 01:52:44,480
i'm you know i'm guessing it's stable

2645
01:52:42,880 --> 01:52:47,599
enough it's it's read-only

2646
01:52:44,480 --> 01:52:51,678
i i mean sure logs can expire you know

2647
01:52:47,599 --> 01:52:54,239
given how much um resources memory or

2648
01:52:51,679 --> 01:52:55,119
you know storage the the server has on

2649
01:52:54,239 --> 01:52:56,718
board

2650
01:52:55,119 --> 01:52:58,400
but you know you can imagine logs

2651
01:52:56,719 --> 01:53:00,719
sticking around for you know at least a

2652
01:52:58,400 --> 01:53:03,040
few hours or days or whatever

2653
01:53:00,719 --> 01:53:03,760
and um i mean they made the client may

2654
01:53:03,040 --> 01:53:06,159
not get the

2655
01:53:03,760 --> 01:53:07,199
the most recent set of logs but you

2656
01:53:06,159 --> 01:53:10,320
could imagine the

2657
01:53:07,199 --> 01:53:12,879
pagination logic always having in it

2658
01:53:10,320 --> 01:53:14,960
a a filter criteria saying that the

2659
01:53:12,880 --> 01:53:16,960
timestamp has to be

2660
01:53:14,960 --> 01:53:18,400
or i'm sorry cannot be greater than

2661
01:53:16,960 --> 01:53:22,800
whenever the pagination

2662
01:53:18,400 --> 01:53:24,719
began so all the uh logs that came in

2663
01:53:22,800 --> 01:53:26,000
after the pagination began would be

2664
01:53:24,719 --> 01:53:29,280
excluded and

2665
01:53:26,000 --> 01:53:30,880
hence effectively the remaining logs are

2666
01:53:29,280 --> 01:53:35,199
it is a stable data set

2667
01:53:30,880 --> 01:53:36,960
um again uh not including purging

2668
01:53:35,199 --> 01:53:38,480
okay so for number two and three and

2669
01:53:36,960 --> 01:53:40,159
again i'm gonna

2670
01:53:38,480 --> 01:53:42,080
mention these quickly and then go back

2671
01:53:40,159 --> 01:53:45,199
to one uh for two

2672
01:53:42,080 --> 01:53:47,760
i'm wondering if offset or skip

2673
01:53:45,199 --> 01:53:48,719
um i mean those are we're trying to

2674
01:53:47,760 --> 01:53:50,560
figure out what what

2675
01:53:48,719 --> 01:53:51,840
what the term what the name should be is

2676
01:53:50,560 --> 01:53:53,840
it offset or skip

2677
01:53:51,840 --> 01:53:55,920
um then that's actually the comment for

2678
01:53:53,840 --> 01:53:59,199
number three but it is the offset

2679
01:53:55,920 --> 01:54:00,000
skip uh parameter should it be an

2680
01:53:59,199 --> 01:54:02,239
integral

2681
01:54:00,000 --> 01:54:03,599
amount like an integer value which would

2682
01:54:02,239 --> 01:54:07,519
be consistent with

2683
01:54:03,599 --> 01:54:10,400
um sql's limit sorry as equals offset

2684
01:54:07,520 --> 01:54:10,880
parameter or should it be a key based

2685
01:54:10,400 --> 01:54:14,320
lookup

2686
01:54:10,880 --> 01:54:17,520
so you you begin your pagination and

2687
01:54:14,320 --> 01:54:19,679
and then somehow the the last

2688
01:54:17,520 --> 01:54:21,440
uh entry of the results that you got

2689
01:54:19,679 --> 01:54:23,440
back you know it contains a

2690
01:54:21,440 --> 01:54:24,960
keyed value and then your your

2691
01:54:23,440 --> 01:54:27,519
subsequent request

2692
01:54:24,960 --> 01:54:29,280
for the next page of data is actually by

2693
01:54:27,520 --> 01:54:30,719
page or i'm sorry by key

2694
01:54:29,280 --> 01:54:32,159
you're asking for the next set of data

2695
01:54:30,719 --> 01:54:33,440
beginning with a key as opposed to the

2696
01:54:32,159 --> 01:54:36,239
next set of data

2697
01:54:33,440 --> 01:54:37,519
indexed by an integer and then for

2698
01:54:36,239 --> 01:54:40,239
number three uh

2699
01:54:37,520 --> 01:54:41,199
and then it's really the question as a

2700
01:54:40,239 --> 01:54:44,400
naming question

2701
01:54:41,199 --> 01:54:49,119
should it be um called uh

2702
01:54:44,400 --> 01:54:53,199
skip or or should be called uh count

2703
01:54:49,119 --> 01:54:55,119
um i think in least sequels count

2704
01:54:53,199 --> 01:54:57,519
and or in and then and likewise should

2705
01:54:55,119 --> 01:54:58,880
be called offset or or limit

2706
01:54:57,520 --> 01:55:00,960
i'm sorry i think i have this backwards

2707
01:54:58,880 --> 01:55:03,679
it's skipper offset counter limit

2708
01:55:00,960 --> 01:55:05,920
i'm sorry i i don't have a but anyway

2709
01:55:03,679 --> 01:55:09,040
the question is how aligned to sql

2710
01:55:05,920 --> 01:55:09,840
um names should we be of course if going

2711
01:55:09,040 --> 01:55:12,960
to number two

2712
01:55:09,840 --> 01:55:16,480
if we're doing the key lookup ie we're

2713
01:55:12,960 --> 01:55:18,080
not going towards sql or we're moving

2714
01:55:16,480 --> 01:55:19,519
away from that approach

2715
01:55:18,080 --> 01:55:22,239
then the whole notion of whether or not

2716
01:55:19,520 --> 01:55:24,560
we're aligned with sql doesn't matter

2717
01:55:22,239 --> 01:55:26,239
so that's why or how it's three is

2718
01:55:24,560 --> 01:55:29,280
related to two and of course two is

2719
01:55:26,239 --> 01:55:31,598
connected to one so going back to one

2720
01:55:29,280 --> 01:55:32,400
and to the group please if anyone has

2721
01:55:31,599 --> 01:55:34,080
any comments

2722
01:55:32,400 --> 01:55:35,598
uh how important is it to iterate over a

2723
01:55:34,080 --> 01:55:38,960
stable set of results

2724
01:55:35,599 --> 01:55:42,320
we only have five minutes so if there's

2725
01:55:38,960 --> 01:55:47,520
any urgent urge urgent comment please

2726
01:55:42,320 --> 01:55:49,469
raise your hand

2727
01:55:47,520 --> 01:55:50,800
okay i don't see anything coming

2728
01:55:49,470 --> 01:55:54,320
[Music]

2729
01:55:50,800 --> 01:55:55,360
i'll take that to the list um for number

2730
01:55:54,320 --> 01:55:58,320
four

2731
01:55:55,360 --> 01:55:59,199
um question is should sub sorts be

2732
01:55:58,320 --> 01:56:02,080
supported

2733
01:55:59,199 --> 01:56:02,559
and currently the design as just present

2734
01:56:02,080 --> 01:56:05,119
on the

2735
01:56:02,560 --> 01:56:07,199
screen was very much uh just a single

2736
01:56:05,119 --> 01:56:10,159
sort

2737
01:56:07,199 --> 01:56:11,199
which is you know by and large 95 of

2738
01:56:10,159 --> 01:56:13,598
what clients want

2739
01:56:11,199 --> 01:56:15,199
just a single sort you about your email

2740
01:56:13,599 --> 01:56:18,560
client right you can only use

2741
01:56:15,199 --> 01:56:22,159
or do a single filter um at a time it

2742
01:56:18,560 --> 01:56:25,920
it's that's very common but

2743
01:56:22,159 --> 01:56:27,839
it is noted that sql supports sub sorts

2744
01:56:25,920 --> 01:56:29,520
so for instance you can do an order by

2745
01:56:27,840 --> 01:56:33,440
foo ascending

2746
01:56:29,520 --> 01:56:35,360
and then by bar descending for instance

2747
01:56:33,440 --> 01:56:36,638
um so there's this question as to

2748
01:56:35,360 --> 01:56:40,159
whether or not sub sorts

2749
01:56:36,639 --> 01:56:40,840
should be supported i do see belage in

2750
01:56:40,159 --> 01:56:44,480
the

2751
01:56:40,840 --> 01:56:48,080
queue please blush go ahead

2752
01:56:44,480 --> 01:56:50,320
early in yank design we avoided

2753
01:56:48,080 --> 01:56:52,000
sorting because for some data types

2754
01:56:50,320 --> 01:56:55,440
that's quite complex

2755
01:56:52,000 --> 01:56:56,000
just as an idea that the o with the two

2756
01:56:55,440 --> 01:57:00,080
dots

2757
01:56:56,000 --> 01:57:00,480
that letter is in some alphabets behind

2758
01:57:00,080 --> 01:57:03,280
the

2759
01:57:00,480 --> 01:57:04,159
oh the simple o somehow alphabet is

2760
01:57:03,280 --> 01:57:08,480
behind the

2761
01:57:04,159 --> 01:57:11,598
zed character are you going to

2762
01:57:08,480 --> 01:57:14,879
address these complexities of sorting or

2763
01:57:11,599 --> 01:57:14,880
what do you want to do with them

2764
01:57:16,159 --> 01:57:23,199
uh that's an interesting comment um

2765
01:57:19,760 --> 01:57:26,320
i will take that to the list martin had

2766
01:57:23,199 --> 01:57:28,559
strong opinions of that on that i don't

2767
01:57:26,320 --> 01:57:32,159
know a few years ago

2768
01:57:28,560 --> 01:57:32,719
okay so i think martin has been involved

2769
01:57:32,159 --> 01:57:34,799
of some

2770
01:57:32,719 --> 01:57:36,960
with this comment uh with the the

2771
01:57:34,800 --> 01:57:40,480
discussion on the list previously

2772
01:57:36,960 --> 01:57:41,280
and i mean in general the thinking is

2773
01:57:40,480 --> 01:57:45,440
that

2774
01:57:41,280 --> 01:57:48,559
we should be using xpath query language

2775
01:57:45,440 --> 01:57:51,678
for this and so whatever um

2776
01:57:48,560 --> 01:57:54,159
that it supports would be by and large

2777
01:57:51,679 --> 01:57:56,719
what would be doing um but i'll take

2778
01:57:54,159 --> 01:57:56,719
this to the list

2779
01:57:57,119 --> 01:58:00,880
do you have another question or comment

2780
01:58:01,360 --> 01:58:05,360
um thanks that's yes okay yeah you're

2781
01:58:03,840 --> 01:58:06,880
still in the game don't expect a full

2782
01:58:05,360 --> 01:58:09,598
answer just now

2783
01:58:06,880 --> 01:58:12,400
okay good thank you all right so next

2784
01:58:09,599 --> 01:58:12,400
slide please

2785
01:58:13,360 --> 01:58:16,719
alright so uh again with the protocol

2786
01:58:15,119 --> 01:58:18,639
independent or continuing with that

2787
01:58:16,719 --> 01:58:19,920
how many drafts should there be so this

2788
01:58:18,639 --> 01:58:20,960
one i'm really hoping to get a response

2789
01:58:19,920 --> 01:58:23,920
from right now

2790
01:58:20,960 --> 01:58:24,880
should there be one draft um i.e that

2791
01:58:23,920 --> 01:58:28,080
contains

2792
01:58:24,880 --> 01:58:29,920
three parts uh the general definition

2793
01:58:28,080 --> 01:58:31,280
netconf specifics and then restaurant

2794
01:58:29,920 --> 01:58:33,440
specifics

2795
01:58:31,280 --> 01:58:35,440
so the pros of this is that it's a nice

2796
01:58:33,440 --> 01:58:37,678
package brings it all together

2797
01:58:35,440 --> 01:58:39,759
the cons is that it's not a great rfc

2798
01:58:37,679 --> 01:58:42,480
target for future work

2799
01:58:39,760 --> 01:58:42,960
or there could be two drafts uh ones for

2800
01:58:42,480 --> 01:58:46,400
each

2801
01:58:42,960 --> 01:58:48,719
uh netconfin and rescoff pros is that we

2802
01:58:46,400 --> 01:58:51,119
then decoupled and now that

2803
01:58:48,719 --> 01:58:52,000
they make better rfc targets for future

2804
01:58:51,119 --> 01:58:54,000
work

2805
01:58:52,000 --> 01:58:55,679
um of course you can imagine you know if

2806
01:58:54,000 --> 01:58:56,000
a third protocol were to come along it

2807
01:58:55,679 --> 01:58:57,920
could

2808
01:58:56,000 --> 01:59:00,400
then be a tone draft and so that's very

2809
01:58:57,920 --> 01:59:02,239
nice but the cons is that there's some

2810
01:59:00,400 --> 01:59:04,719
redundancies between the two

2811
01:59:02,239 --> 01:59:06,159
so for instance the uh those five

2812
01:59:04,719 --> 01:59:06,639
control points that we talked about

2813
01:59:06,159 --> 01:59:07,920
before

2814
01:59:06,639 --> 01:59:10,719
they would have to be defined

2815
01:59:07,920 --> 01:59:12,560
individually each in those drafts

2816
01:59:10,719 --> 01:59:14,960
and likewise the examples you can

2817
01:59:12,560 --> 01:59:15,599
imagine an example module an example

2818
01:59:14,960 --> 01:59:18,400
data set

2819
01:59:15,599 --> 01:59:19,520
an example data results that you would

2820
01:59:18,400 --> 01:59:21,280
expect

2821
01:59:19,520 --> 01:59:23,199
i mean of course we wanted we do want to

2822
01:59:21,280 --> 01:59:24,559
illustrate the query language

2823
01:59:23,199 --> 01:59:26,559
in you know each of the protocol

2824
01:59:24,560 --> 01:59:27,840
specific drafts but we don't necessarily

2825
01:59:26,560 --> 01:59:31,840
need to

2826
01:59:27,840 --> 01:59:35,199
redefine um the authoritative

2827
01:59:31,840 --> 01:59:39,199
you know results set examples uh in each

2828
01:59:35,199 --> 01:59:41,519
um and then um or or three

2829
01:59:39,199 --> 01:59:42,559
option three is to have three drafts

2830
01:59:41,520 --> 01:59:44,639
which you know again

2831
01:59:42,560 --> 01:59:46,000
would be uh a general one draft should

2832
01:59:44,639 --> 01:59:48,000
be general definition

2833
01:59:46,000 --> 01:59:49,840
and then another for a net comp and a

2834
01:59:48,000 --> 01:59:52,560
third for rescoff

2835
01:59:49,840 --> 01:59:54,480
the pros this is completely decoupled

2836
01:59:52,560 --> 01:59:56,320
much like the nmda work

2837
01:59:54,480 --> 01:59:58,400
in fact if we were to do this we might

2838
01:59:56,320 --> 02:00:00,960
consider moving that general definition

2839
01:59:58,400 --> 02:00:03,839
draft to the net mod working group

2840
02:00:00,960 --> 02:00:04,159
uh the cons there's there's more drafts

2841
02:00:03,840 --> 02:00:06,480
so

2842
02:00:04,159 --> 02:00:08,480
any comments on this in the very few

2843
02:00:06,480 --> 02:00:09,839
minutes that we have remaining

2844
02:00:08,480 --> 02:00:11,919
blood i see you're still in the queue do

2845
02:00:09,840 --> 02:00:14,239
you mean to be or did you just not exit

2846
02:00:11,920 --> 02:00:14,239
the queue

2847
02:00:16,960 --> 02:00:20,960
to exit it's the hand icon in the upper

2848
02:00:19,920 --> 02:00:22,639
left corner

2849
02:00:20,960 --> 02:00:24,320
okay i don't see any comments so my hash

2850
02:00:22,639 --> 02:00:25,760
there is just one more slide and now

2851
02:00:24,320 --> 02:00:27,840
i know we're out of time but i just

2852
02:00:25,760 --> 02:00:29,599
quickly can we do that next slide

2853
02:00:27,840 --> 02:00:31,119
um so i have uh so those are the

2854
02:00:29,599 --> 02:00:31,520
protocol independent questions i'll take

2855
02:00:31,119 --> 02:00:33,519
that

2856
02:00:31,520 --> 02:00:34,560
them all to the list uh for rest count

2857
02:00:33,520 --> 02:00:36,000
specific

2858
02:00:34,560 --> 02:00:37,840
i do and then there's another slide for

2859
02:00:36,000 --> 02:00:39,599
neck off but there are no i don't have

2860
02:00:37,840 --> 02:00:40,880
any netcon specific questions so there's

2861
02:00:39,599 --> 02:00:43,679
this is truly the last slide

2862
02:00:40,880 --> 02:00:44,960
if you will um the question is what

2863
02:00:43,679 --> 02:00:48,159
should the scope of the

2864
02:00:44,960 --> 02:00:51,199
leaf uh and the leaf lift list

2865
02:00:48,159 --> 02:00:53,679
targets be um and in particular

2866
02:00:51,199 --> 02:00:54,400
are we just doing the get method which

2867
02:00:53,679 --> 02:00:56,960
would be the

2868
02:00:54,400 --> 02:00:58,480
minimally invasive type thing because

2869
02:00:56,960 --> 02:00:59,840
after all we're talking about list

2870
02:00:58,480 --> 02:01:02,718
pagination so it's just

2871
02:00:59,840 --> 02:01:03,760
get that we're talking about or should

2872
02:01:02,719 --> 02:01:06,400
we

2873
02:01:03,760 --> 02:01:07,280
define leaf i'm sorry i said leaf i

2874
02:01:06,400 --> 02:01:10,559
meant list

2875
02:01:07,280 --> 02:01:14,080
list and leaf list those two

2876
02:01:10,560 --> 02:01:14,080
nodes as being

2877
02:01:14,560 --> 02:01:18,480
targets for all http methods so not just

2878
02:01:17,760 --> 02:01:21,599
get but

2879
02:01:18,480 --> 02:01:24,080
post put delete patch etc

2880
02:01:21,599 --> 02:01:25,360
all of them so you know the of course

2881
02:01:24,080 --> 02:01:27,280
the considerations

2882
02:01:25,360 --> 02:01:28,799
are you know for increasing the scope

2883
02:01:27,280 --> 02:01:31,759
would be it's it's more complete

2884
02:01:28,800 --> 02:01:33,520
slash pure but you know i question

2885
02:01:31,760 --> 02:01:35,679
there's actually little value i mean

2886
02:01:33,520 --> 02:01:36,719
putting or posting or patching to the

2887
02:01:35,679 --> 02:01:39,040
container is

2888
02:01:36,719 --> 02:01:39,920
equally good you never do you need to

2889
02:01:39,040 --> 02:01:43,599
actually target

2890
02:01:39,920 --> 02:01:46,480
the um the list itself of course that's

2891
02:01:43,599 --> 02:01:48,159
uh known or is shown but illustrated by

2892
02:01:46,480 --> 02:01:50,718
the fact that we don't do it today

2893
02:01:48,159 --> 02:01:52,960
um i think delete actually has a benefit

2894
02:01:50,719 --> 02:01:53,599
you could delete the entire list at one

2895
02:01:52,960 --> 02:01:56,239
go

2896
02:01:53,599 --> 02:01:57,920
as opposed to you know in case it hasn't

2897
02:01:56,239 --> 02:01:58,718
been wrapped inside of a dedicated

2898
02:01:57,920 --> 02:02:01,040
container

2899
02:01:58,719 --> 02:02:02,320
uh you know instead of having to delete

2900
02:02:01,040 --> 02:02:04,480
the entire container you could

2901
02:02:02,320 --> 02:02:06,080
delete the entire list that way so this

2902
02:02:04,480 --> 02:02:08,559
delete has some benefit

2903
02:02:06,080 --> 02:02:10,480
um but it is like i mentioned it's kind

2904
02:02:08,560 --> 02:02:12,560
of out of scope but the focus of this

2905
02:02:10,480 --> 02:02:14,718
work is to introduce list pagination

2906
02:02:12,560 --> 02:02:16,719
which would only be the get method

2907
02:02:14,719 --> 02:02:18,800
but you know while we're here should we

2908
02:02:16,719 --> 02:02:20,080
expand extend to support other methods

2909
02:02:18,800 --> 02:02:22,480
any comments on that or should i take it

2910
02:02:20,080 --> 02:02:22,480
to the list

2911
02:02:28,239 --> 02:02:32,718
i don't see any comments on that i will

2912
02:02:30,000 --> 02:02:34,560
take it to the list

2913
02:02:32,719 --> 02:02:36,639
and uh yeah like mentioned there there

2914
02:02:34,560 --> 02:02:37,760
are no there was another slide for rest

2915
02:02:36,639 --> 02:02:39,760
comp but there was nothing there i was

2916
02:02:37,760 --> 02:02:42,080
just asking if anyone had any comments

2917
02:02:39,760 --> 02:02:44,000
and then there was just a thank you

2918
02:02:42,080 --> 02:02:46,159
slide at the very end

2919
02:02:44,000 --> 02:02:47,360
that concludes everything for this

2920
02:02:46,159 --> 02:02:49,920
meeting um

2921
02:02:47,360 --> 02:02:51,920
so switching my house taking off my

2922
02:02:49,920 --> 02:02:54,480
contributor hat putting on my

2923
02:02:51,920 --> 02:02:55,760
chair hat um thank you everyone for

2924
02:02:54,480 --> 02:02:58,879
joining

2925
02:02:55,760 --> 02:03:00,639
and um do you have any comments closing

2926
02:02:58,880 --> 02:03:02,960
comments

2927
02:03:00,639 --> 02:03:05,360
i don't thank you i know it's late for

2928
02:03:02,960 --> 02:03:09,280
some folks

2929
02:03:05,360 --> 02:03:13,280
yes okay very good

2930
02:03:09,280 --> 02:03:15,599
thank you everyone and we'll uh

2931
02:03:13,280 --> 02:03:17,840
virtually see you next time or on the

2932
02:03:15,599 --> 02:03:29,840
list before then

2933
02:03:17,840 --> 02:03:29,840
okay bye

2934
02:03:50,239 --> 02:03:53,360
it's kind of funny i'm looking for a way

2935
02:03:51,599 --> 02:03:56,560
to end the meeting but i don't think

2936
02:03:53,360 --> 02:04:09,360
the options there it's just

2937
02:03:56,560 --> 02:04:09,360
we just exit we just leave the room

