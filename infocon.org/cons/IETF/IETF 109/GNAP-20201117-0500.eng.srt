1
00:00:08,160 --> 00:00:10,160
uh

2
00:00:08,559 --> 00:00:11,759
let's see if somebody said that i have a

3
00:00:10,160 --> 00:00:15,519
lot of noise in my

4
00:00:11,759 --> 00:00:17,520
mic setup does that do you have a lot of

5
00:00:15,519 --> 00:00:20,560
noise from me

6
00:00:17,520 --> 00:00:21,600
no it's good it's good now all right

7
00:00:20,560 --> 00:00:25,919
yeah

8
00:00:21,600 --> 00:00:26,640
but but then just as you said it's good

9
00:00:25,920 --> 00:00:30,480
that

10
00:00:26,640 --> 00:00:33,760
i heard that modern noise again

11
00:00:30,480 --> 00:00:36,719
ah all right um i

12
00:00:33,760 --> 00:00:36,719
may need to

13
00:00:37,040 --> 00:00:40,000
you need to switch

14
00:00:41,760 --> 00:00:46,559
switch computers so we'll see how that

15
00:00:44,800 --> 00:00:49,760
works

16
00:00:46,559 --> 00:00:49,760
from that while we start

17
00:00:54,000 --> 00:00:59,840
okay let's take one more minute people

18
00:00:56,320 --> 00:00:59,840
are still joining

19
00:01:16,190 --> 00:01:19,749
[Laughter]

20
00:01:16,670 --> 00:01:19,749
[Music]

21
00:01:38,840 --> 00:01:41,840
this

22
00:01:53,439 --> 00:01:58,158
so you're on how's this volume or how is

23
00:01:56,479 --> 00:02:00,479
this audio is that better

24
00:01:58,159 --> 00:02:00,479
for me

25
00:02:01,200 --> 00:02:03,520
yes

26
00:02:04,160 --> 00:02:09,840
[Music]

27
00:02:06,840 --> 00:02:09,840
now

28
00:02:18,959 --> 00:02:23,840
i think

29
00:03:41,599 --> 00:03:49,040
okay i guess we can get started as we're

30
00:03:45,280 --> 00:03:49,040
waiting for leaf to rejoin

31
00:03:49,360 --> 00:03:55,120
so welcome everyone it's 12

32
00:03:52,720 --> 00:03:56,720
noon in bangkok for those of you in

33
00:03:55,120 --> 00:03:59,760
bangkok

34
00:03:56,720 --> 00:04:03,760
i'm iran schiffer and

35
00:03:59,760 --> 00:04:06,798
life will be joining us in a minute

36
00:04:03,760 --> 00:04:10,480
i'm right here thank you

37
00:04:06,799 --> 00:04:14,400
i live this is the note 12

38
00:04:10,480 --> 00:04:16,159
it applies to virtual meetings just as

39
00:04:14,400 --> 00:04:19,918
much as it applies

40
00:04:16,160 --> 00:04:20,799
to face-to-face meetings if you have not

41
00:04:19,918 --> 00:04:24,880
read it yet

42
00:04:20,798 --> 00:04:29,039
please take a minute to read it in the

43
00:04:24,880 --> 00:04:32,400
um meeting materials

44
00:04:29,040 --> 00:04:35,600
and a few things that may be new if

45
00:04:32,400 --> 00:04:36,960
it's the first virtual idea if you're

46
00:04:35,600 --> 00:04:40,240
joining

47
00:04:36,960 --> 00:04:43,599
so we're now doing video at the itf

48
00:04:40,240 --> 00:04:45,280
unless are presenting or even if you are

49
00:04:43,600 --> 00:04:48,320
making a comment to the mic

50
00:04:45,280 --> 00:04:51,840
please turn on your video otherwise

51
00:04:48,320 --> 00:04:55,360
please have your video off um

52
00:04:51,840 --> 00:04:58,400
obviously mute your microphone and use

53
00:04:55,360 --> 00:04:59,040
reasonable audio equipment we're now

54
00:04:58,400 --> 00:05:01,880
doing

55
00:04:59,040 --> 00:05:04,880
blue sheets these are taken

56
00:05:01,880 --> 00:05:08,000
automatically

57
00:05:04,880 --> 00:05:11,759
and there's no special need to use

58
00:05:08,000 --> 00:05:14,800
jabra clients and those are the

59
00:05:11,759 --> 00:05:18,880
the same chat rooms uh as you see in

60
00:05:14,800 --> 00:05:22,840
mexico and here you can see

61
00:05:18,880 --> 00:05:25,520
um where to go to if there are technical

62
00:05:22,840 --> 00:05:29,359
issues

63
00:05:25,520 --> 00:05:33,599
um so now blue sheets there will be

64
00:05:29,360 --> 00:05:36,880
minutes on kodi md the

65
00:05:33,600 --> 00:05:40,880
collaborative markdown

66
00:05:36,880 --> 00:05:42,080
solution that itf is using we do need a

67
00:05:40,880 --> 00:05:45,199
minute take

68
00:05:42,080 --> 00:05:48,479
in fact we cannot continue the meeting

69
00:05:45,199 --> 00:05:51,759
unless we have a minute taker so

70
00:05:48,479 --> 00:05:52,479
if you can take it on please go on the

71
00:05:51,759 --> 00:05:57,600
mark

72
00:05:52,479 --> 00:05:57,599
and and tell us please

73
00:06:01,360 --> 00:06:07,840
any volunteers for many takers please

74
00:06:09,360 --> 00:06:14,319
feel free to um just mention it in chat

75
00:06:12,000 --> 00:06:14,319
if you're

76
00:06:16,720 --> 00:06:24,400
willing i understand that this is a bad

77
00:06:20,240 --> 00:06:24,400
time of the day to be asking favors but

78
00:06:27,919 --> 00:06:35,520
dave is it are you about to volunteer

79
00:06:32,880 --> 00:06:37,919
yeah i can volunteer thank you thank you

80
00:06:35,520 --> 00:06:37,919
very much

81
00:06:38,720 --> 00:06:45,039
okay um we we basically will not be

82
00:06:42,880 --> 00:06:48,080
looking at chat

83
00:06:45,039 --> 00:06:51,360
so if you want to jump into the meeting

84
00:06:48,080 --> 00:06:52,800
please raise the raise your hand in the

85
00:06:51,360 --> 00:06:56,479
application

86
00:06:52,800 --> 00:07:00,400
lift will be managing the queue

87
00:06:56,479 --> 00:07:02,159
and we will call you in

88
00:07:00,400 --> 00:07:04,638
into the audio stream as soon as

89
00:07:02,160 --> 00:07:08,639
possible

90
00:07:04,639 --> 00:07:10,960
so no chat please use the a raised hand

91
00:07:08,639 --> 00:07:10,960
tool

92
00:07:13,520 --> 00:07:18,799
the agenda for today um

93
00:07:16,639 --> 00:07:20,080
and please let us know if you have any

94
00:07:18,800 --> 00:07:21,840
comments

95
00:07:20,080 --> 00:07:23,758
and we will start with a process

96
00:07:21,840 --> 00:07:26,960
discussion which we're

97
00:07:23,759 --> 00:07:30,479
going to camp in by 20 minutes

98
00:07:26,960 --> 00:07:31,120
um then we will spend the bulk of the

99
00:07:30,479 --> 00:07:35,120
meeting

100
00:07:31,120 --> 00:07:38,479
on the core protocol the editors will

101
00:07:35,120 --> 00:07:39,199
present the progress so far and will

102
00:07:38,479 --> 00:07:42,318
present

103
00:07:39,199 --> 00:07:45,440
specific issues that

104
00:07:42,319 --> 00:07:49,039
either need more discussion and or

105
00:07:45,440 --> 00:07:49,039
can be closed today

106
00:07:49,440 --> 00:07:53,759
obviously with uh with follow-up on the

107
00:07:52,160 --> 00:07:57,599
mailing list

108
00:07:53,759 --> 00:08:00,160
and then we will say a few words about

109
00:07:57,599 --> 00:08:03,840
next steps

110
00:08:00,160 --> 00:08:13,840
all in the next two hours any comments

111
00:08:03,840 --> 00:08:13,840
or questions to the agenda

112
00:08:15,440 --> 00:08:27,840
all right so next

113
00:08:19,360 --> 00:08:27,840
into the process discussion

114
00:08:45,040 --> 00:08:55,839
so i need to reach my screen

115
00:09:02,720 --> 00:09:10,320
all right so

116
00:09:06,000 --> 00:09:13,440
where we're coming from um

117
00:09:10,320 --> 00:09:14,560
all decisions about the protocol and all

118
00:09:13,440 --> 00:09:17,279
decisions about

119
00:09:14,560 --> 00:09:18,239
process are the responsibility of the

120
00:09:17,279 --> 00:09:21,360
working group

121
00:09:18,240 --> 00:09:23,600
as a whole the chairs are only there to

122
00:09:21,360 --> 00:09:26,640
call consensus

123
00:09:23,600 --> 00:09:29,760
on on the working group

124
00:09:26,640 --> 00:09:30,240
um and the main tool that the working

125
00:09:29,760 --> 00:09:34,839
group

126
00:09:30,240 --> 00:09:37,760
uses to to make decisions and to come to

127
00:09:34,839 --> 00:09:42,160
consensus is the mailing list

128
00:09:37,760 --> 00:09:46,319
however many people prefer to use

129
00:09:42,160 --> 00:09:49,199
github it's a very efficient tool

130
00:09:46,320 --> 00:09:50,560
for threading issues for example and for

131
00:09:49,200 --> 00:09:53,920
for tracking

132
00:09:50,560 --> 00:09:56,880
progress on different things and

133
00:09:53,920 --> 00:09:58,000
obviously for managing the document

134
00:09:56,880 --> 00:10:01,360
itself

135
00:09:58,000 --> 00:10:05,519
uh so there are two rfcs uh

136
00:10:01,360 --> 00:10:08,720
about the use of of github

137
00:10:05,519 --> 00:10:12,079
in the itf and those will be

138
00:10:08,720 --> 00:10:15,760
guiding us with the goal being

139
00:10:12,079 --> 00:10:16,839
to have maximum transparency or in other

140
00:10:15,760 --> 00:10:20,880
words

141
00:10:16,839 --> 00:10:22,720
um more discussion that's available for

142
00:10:20,880 --> 00:10:25,360
everybody to look at

143
00:10:22,720 --> 00:10:27,680
and less discussion privately between

144
00:10:25,360 --> 00:10:28,959
the editors and the editors and the

145
00:10:27,680 --> 00:10:32,479
chills

146
00:10:28,959 --> 00:10:35,199
so as much transparency as we can

147
00:10:32,480 --> 00:10:35,200
as we can

148
00:10:37,760 --> 00:10:45,040
for for many years

149
00:10:40,880 --> 00:10:48,880
we have managed documents on github

150
00:10:45,040 --> 00:10:50,160
so i think most itf participants are

151
00:10:48,880 --> 00:10:54,160
used to it

152
00:10:50,160 --> 00:10:57,399
uh issue management is more interesting

153
00:10:54,160 --> 00:11:00,240
more recent and needs a bit more

154
00:10:57,399 --> 00:11:02,160
clarification and that's what we're

155
00:11:00,240 --> 00:11:04,880
going to do here

156
00:11:02,160 --> 00:11:05,680
so it was clear from the mailing list

157
00:11:04,880 --> 00:11:09,279
that people

158
00:11:05,680 --> 00:11:13,040
prefer to to manage issues

159
00:11:09,279 --> 00:11:16,720
for this working group on

160
00:11:13,040 --> 00:11:19,360
on github so here's

161
00:11:16,720 --> 00:11:22,320
the proposal and starting from the

162
00:11:19,360 --> 00:11:24,720
document itself

163
00:11:22,320 --> 00:11:26,399
today we we have only one document the

164
00:11:24,720 --> 00:11:30,240
core protocol

165
00:11:26,399 --> 00:11:33,440
over time we will have more um

166
00:11:30,240 --> 00:11:37,120
so if you have small editorial edits

167
00:11:33,440 --> 00:11:37,680
small comments uh that do not change the

168
00:11:37,120 --> 00:11:41,360
meaning

169
00:11:37,680 --> 00:11:44,640
of the document you're welcome to just

170
00:11:41,360 --> 00:11:45,440
open a pull request for that and the

171
00:11:44,640 --> 00:11:48,399
editors

172
00:11:45,440 --> 00:11:50,880
will pull it will merge it into the

173
00:11:48,399 --> 00:11:54,000
document

174
00:11:50,880 --> 00:11:56,880
um either editors

175
00:11:54,000 --> 00:11:59,360
or maybe other people over time but

176
00:11:56,880 --> 00:12:02,720
starting with editors now

177
00:11:59,360 --> 00:12:05,920
will be opening pull requests

178
00:12:02,720 --> 00:12:06,639
for all bigger changes and those pull

179
00:12:05,920 --> 00:12:09,760
requests

180
00:12:06,639 --> 00:12:14,320
should reference a github

181
00:12:09,760 --> 00:12:17,279
issue that the resolving

182
00:12:14,320 --> 00:12:19,120
and this means that we have a review

183
00:12:17,279 --> 00:12:21,920
process

184
00:12:19,120 --> 00:12:23,120
again it's the primary responsibility of

185
00:12:21,920 --> 00:12:26,319
the editors

186
00:12:23,120 --> 00:12:29,600
but the editors are welcome to publicize

187
00:12:26,320 --> 00:12:33,040
pull requests on the list and ask

188
00:12:29,600 --> 00:12:36,240
for additional reviewers for

189
00:12:33,040 --> 00:12:36,240
for pull requests

190
00:12:36,720 --> 00:12:40,560
we are asking the editors to publish at

191
00:12:39,519 --> 00:12:43,680
least once

192
00:12:40,560 --> 00:12:46,880
per uh idf period so

193
00:12:43,680 --> 00:12:50,319
per four months um

194
00:12:46,880 --> 00:12:51,040
but it's easy enough to publish a new

195
00:12:50,320 --> 00:12:54,720
revision

196
00:12:51,040 --> 00:13:00,399
of an internet draft so please also

197
00:12:54,720 --> 00:13:00,399
republish when you've gone through

198
00:13:00,480 --> 00:13:06,880
meaningful larger changes to the

199
00:13:04,839 --> 00:13:10,959
document um

200
00:13:06,880 --> 00:13:11,680
we have additional there's a wiki on

201
00:13:10,959 --> 00:13:13,160
github

202
00:13:11,680 --> 00:13:15,359
there's something called github

203
00:13:13,160 --> 00:13:18,959
discussions

204
00:13:15,360 --> 00:13:19,279
those are not permanent records as far

205
00:13:18,959 --> 00:13:23,119
as

206
00:13:19,279 --> 00:13:26,720
itf is concerned if for example

207
00:13:23,120 --> 00:13:29,920
you want a record

208
00:13:26,720 --> 00:13:31,680
of well use cases which we have not

209
00:13:29,920 --> 00:13:33,760
decided to publish

210
00:13:31,680 --> 00:13:34,959
but if you think it needs to be

211
00:13:33,760 --> 00:13:39,600
published

212
00:13:34,959 --> 00:13:42,638
uh the only um the only way

213
00:13:39,600 --> 00:13:46,480
things are published at the ietf is

214
00:13:42,639 --> 00:13:48,880
as internet drafts and eventually rfcs

215
00:13:46,480 --> 00:13:51,199
so if you think something needs to be

216
00:13:48,880 --> 00:13:54,639
preserved for posterity

217
00:13:51,199 --> 00:13:56,000
uh wiki is not the place and it needs to

218
00:13:54,639 --> 00:14:00,160
be published

219
00:13:56,000 --> 00:14:03,760
uh as an internet draft having said that

220
00:14:00,160 --> 00:14:06,719
if there are things like use cases

221
00:14:03,760 --> 00:14:08,880
that are only needed uh while the

222
00:14:06,720 --> 00:14:11,920
protocol is developed

223
00:14:08,880 --> 00:14:13,519
but over time will not be very

224
00:14:11,920 --> 00:14:16,959
interesting

225
00:14:13,519 --> 00:14:20,720
it's fine to have them on the wiki

226
00:14:16,959 --> 00:14:24,000
and the wiki actually enables tracking

227
00:14:20,720 --> 00:14:27,120
of revisions and so on so this

228
00:14:24,000 --> 00:14:30,240
is for documents for issues

229
00:14:27,120 --> 00:14:33,680
what we propose to do is to

230
00:14:30,240 --> 00:14:40,000
go all into the most

231
00:14:33,680 --> 00:14:44,479
extensive uh mode proposed by rfc 8874

232
00:14:40,000 --> 00:14:47,760
issue discussion mode were all uh

233
00:14:44,480 --> 00:14:52,720
issues are in fact managed

234
00:14:47,760 --> 00:14:52,720
and discussed on github

235
00:14:53,120 --> 00:14:59,440
for if if you sit down

236
00:14:56,240 --> 00:15:02,800
read the document and have a long review

237
00:14:59,440 --> 00:15:04,639
please publish it on the mailing list

238
00:15:02,800 --> 00:15:07,040
and then the there will be some

239
00:15:04,639 --> 00:15:11,600
discussion on the mailing list

240
00:15:07,040 --> 00:15:15,519
and it's the reviewer who's tasked

241
00:15:11,600 --> 00:15:18,639
with opening issues on github

242
00:15:15,519 --> 00:15:18,639
we will have

243
00:15:18,800 --> 00:15:23,839
a weekly report you've actually seen it

244
00:15:21,760 --> 00:15:27,120
already on the mailing list

245
00:15:23,839 --> 00:15:27,360
a week a weekly report that allows those

246
00:15:27,120 --> 00:15:31,040
of

247
00:15:27,360 --> 00:15:34,560
us who are not watchers on github

248
00:15:31,040 --> 00:15:38,959
to see what's going on what new issues

249
00:15:34,560 --> 00:15:43,279
have been opened and the expectation

250
00:15:38,959 --> 00:15:46,719
is that most per issue discussion

251
00:15:43,279 --> 00:15:49,920
will happen on github

252
00:15:46,720 --> 00:15:53,360
so if you so feel free

253
00:15:49,920 --> 00:15:55,680
of course to jump into the discussion

254
00:15:53,360 --> 00:15:57,839
if you want to follow the detailed

255
00:15:55,680 --> 00:16:01,439
discussion the way to do it

256
00:15:57,839 --> 00:16:05,759
is by being watchers

257
00:16:01,440 --> 00:16:09,120
on github the editors are responsible to

258
00:16:05,759 --> 00:16:13,279
label issues to tag issues

259
00:16:09,120 --> 00:16:14,720
as a design issues that are more

260
00:16:13,279 --> 00:16:17,759
substantial

261
00:16:14,720 --> 00:16:21,680
in the editorial issues that are less

262
00:16:17,759 --> 00:16:25,360
and we might have more

263
00:16:21,680 --> 00:16:26,160
detailed labeling later on we will start

264
00:16:25,360 --> 00:16:29,519
with design

265
00:16:26,160 --> 00:16:33,040
and editorial and and move

266
00:16:29,519 --> 00:16:36,160
forward from that um

267
00:16:33,040 --> 00:16:39,519
it's for the editorial team

268
00:16:36,160 --> 00:16:45,120
it's on the editorial team to close

269
00:16:39,519 --> 00:16:45,120
issues that are clearly resolved

270
00:16:46,560 --> 00:16:53,680
and this judgment

271
00:16:50,000 --> 00:16:56,880
call is actually according to

272
00:16:53,680 --> 00:17:00,638
how controversial an issue is

273
00:16:56,880 --> 00:17:04,160
um things that are more difficult

274
00:17:00,639 --> 00:17:04,959
should be taken to the least possibly

275
00:17:04,160 --> 00:17:08,000
into

276
00:17:04,959 --> 00:17:11,280
into meetings like this one uh

277
00:17:08,000 --> 00:17:13,919
things that are small and everybody

278
00:17:11,280 --> 00:17:15,199
discussing the issues have reached an

279
00:17:13,919 --> 00:17:18,640
agreement

280
00:17:15,199 --> 00:17:20,079
uh in that case it's it's okay for the

281
00:17:18,640 --> 00:17:23,199
editorial team

282
00:17:20,079 --> 00:17:24,240
to close the issue and it's better to

283
00:17:23,199 --> 00:17:28,160
inform the list

284
00:17:24,240 --> 00:17:32,080
that an issue has been closed

285
00:17:28,160 --> 00:17:34,960
and then again issue closed

286
00:17:32,080 --> 00:17:35,840
there should be a pr specific to that

287
00:17:34,960 --> 00:17:39,679
issue

288
00:17:35,840 --> 00:17:43,039
to implement it in the

289
00:17:39,679 --> 00:17:46,559
internet draft and

290
00:17:43,039 --> 00:17:48,960
allow people to review the the final

291
00:17:46,559 --> 00:17:48,960
text

292
00:17:49,600 --> 00:17:57,439
we ask that issues not be reopened

293
00:17:54,080 --> 00:18:00,799
unless there was a working group concern

294
00:17:57,440 --> 00:18:04,559
discussion and consensus to reopen the

295
00:18:00,799 --> 00:18:04,559
issue reopening issues

296
00:18:04,799 --> 00:18:11,039
can lead to

297
00:18:07,919 --> 00:18:11,679
too much process churn so please don't

298
00:18:11,039 --> 00:18:14,799
do it

299
00:18:11,679 --> 00:18:17,200
if something is important enough

300
00:18:14,799 --> 00:18:19,760
to you that you think it warrants

301
00:18:17,200 --> 00:18:22,160
reopening the issue

302
00:18:19,760 --> 00:18:23,679
please bring it to the mailing list

303
00:18:22,160 --> 00:18:27,520
let's discuss it

304
00:18:23,679 --> 00:18:31,039
and decide whether an issue needs to be

305
00:18:27,520 --> 00:18:34,960
reopened um at any time

306
00:18:31,039 --> 00:18:38,480
for any issue either the editors

307
00:18:34,960 --> 00:18:42,160
or the chose uh can call

308
00:18:38,480 --> 00:18:45,280
for consensus discussion and consensus

309
00:18:42,160 --> 00:18:45,280
on the mailing list

310
00:18:46,080 --> 00:18:50,720
if you have not seen the weekly report

311
00:18:49,120 --> 00:18:53,760
yet

312
00:18:50,720 --> 00:18:54,720
this is basically what it looks like so

313
00:18:53,760 --> 00:18:58,640
the issues

314
00:18:54,720 --> 00:19:01,760
created issues closed some

315
00:18:58,640 --> 00:19:05,280
information about comments that

316
00:19:01,760 --> 00:19:09,280
have been made to issues

317
00:19:05,280 --> 00:19:13,120
and pull requests editorial

318
00:19:09,280 --> 00:19:16,799
issues are exceptions you don't see them

319
00:19:13,120 --> 00:19:17,199
in the weekly report so it's not to spam

320
00:19:16,799 --> 00:19:22,240
us

321
00:19:17,200 --> 00:19:22,240
too much in with that

322
00:19:22,400 --> 00:19:25,600
we will open the mic if you have any

323
00:19:24,880 --> 00:19:28,640
questions

324
00:19:25,600 --> 00:19:29,199
or comments about process this is the

325
00:19:28,640 --> 00:19:33,600
time

326
00:19:29,200 --> 00:19:39,840
please and uh please raise your hands

327
00:19:33,600 --> 00:19:39,840
to get on thecube

328
00:19:41,919 --> 00:19:50,799
i'm not seeing anybody well fabiano is

329
00:19:46,240 --> 00:19:52,320
go ahead yes hello everyone

330
00:19:50,799 --> 00:19:54,400
we had a specific question for the

331
00:19:52,320 --> 00:19:57,760
timing of the part

332
00:19:54,400 --> 00:19:58,400
um so it's a bit specific because here

333
00:19:57,760 --> 00:20:01,679
there's a more

334
00:19:58,400 --> 00:20:02,080
long-term view of what we need to do and

335
00:20:01,679 --> 00:20:06,000
so

336
00:20:02,080 --> 00:20:09,039
there was there was a few options here

337
00:20:06,000 --> 00:20:11,919
the first one was a wiki then we had

338
00:20:09,039 --> 00:20:12,960
different issues for each individual

339
00:20:11,919 --> 00:20:14,559
item

340
00:20:12,960 --> 00:20:16,159
and so i'd like to get some feedback

341
00:20:14,559 --> 00:20:20,639
from people on what

342
00:20:16,159 --> 00:20:23,679
basically you prefer

343
00:20:20,640 --> 00:20:27,120
and for bien could you please speak up

344
00:20:23,679 --> 00:20:28,960
no yeah i didn't hopefully i'm really

345
00:20:27,120 --> 00:20:32,399
next to the mic but

346
00:20:28,960 --> 00:20:35,280
much better thank you okay so i was

347
00:20:32,400 --> 00:20:36,000
asking for some feedback from the

348
00:20:35,280 --> 00:20:38,399
mailing list

349
00:20:36,000 --> 00:20:39,679
on what you want to do for the

350
00:20:38,400 --> 00:20:43,200
terminology

351
00:20:39,679 --> 00:20:46,880
work do we use a wiki which was

352
00:20:43,200 --> 00:20:50,640
suggested by dick do we use

353
00:20:46,880 --> 00:20:53,280
issues as was suggested by francis

354
00:20:50,640 --> 00:20:55,120
um well the only thing is we need

355
00:20:53,280 --> 00:20:57,280
something where we list

356
00:20:55,120 --> 00:20:59,039
the terms and everything and it's a long

357
00:20:57,280 --> 00:21:00,720
term type of work

358
00:20:59,039 --> 00:21:04,000
so it's a bit different from the rest of

359
00:21:00,720 --> 00:21:06,000
the issues that's why i'm asking

360
00:21:04,000 --> 00:21:08,320
i'm seeing justin uh do you want to

361
00:21:06,000 --> 00:21:11,280
speak to that justin

362
00:21:08,320 --> 00:21:11,280
you have a suggestion

363
00:21:14,400 --> 00:21:17,840
uh yeah so i've actually all right

364
00:21:17,360 --> 00:21:20,639
thanks

365
00:21:17,840 --> 00:21:21,199
uh so i've actually got a little bit of

366
00:21:20,640 --> 00:21:23,679
space

367
00:21:21,200 --> 00:21:25,280
in the uh in the editor's issue

368
00:21:23,679 --> 00:21:27,360
discussion for exactly that

369
00:21:25,280 --> 00:21:28,720
uh the core of fabian's question though

370
00:21:27,360 --> 00:21:30,639
is really about

371
00:21:28,720 --> 00:21:32,320
what kinds of tools we use and what we

372
00:21:30,640 --> 00:21:34,159
use them for

373
00:21:32,320 --> 00:21:35,840
and there is this open issue of

374
00:21:34,159 --> 00:21:37,679
terminology where

375
00:21:35,840 --> 00:21:39,360
a specific set of tools has been brought

376
00:21:37,679 --> 00:21:42,840
up that we are

377
00:21:39,360 --> 00:21:44,240
looking for feedback on what kind of

378
00:21:42,840 --> 00:21:48,320
tools

379
00:21:44,240 --> 00:21:48,320
people are comfortable with using for

380
00:21:48,640 --> 00:21:54,159
for the specific issue of gathering

381
00:21:52,000 --> 00:21:57,600
terminology so i did see wikis in the

382
00:21:54,159 --> 00:21:59,760
list of available tools

383
00:21:57,600 --> 00:22:00,719
but i think if i'm understanding

384
00:21:59,760 --> 00:22:04,640
fabian's question

385
00:22:00,720 --> 00:22:09,760
is um you know does that make

386
00:22:04,640 --> 00:22:09,760
sense for gathering the uh

387
00:22:10,480 --> 00:22:14,080
the sort of discussion and feedback and

388
00:22:12,640 --> 00:22:17,520
options and things like that

389
00:22:14,080 --> 00:22:20,080
in the wiki for the terminology itself

390
00:22:17,520 --> 00:22:20,960
so we can talk about that a bit now i do

391
00:22:20,080 --> 00:22:25,280
have some

392
00:22:20,960 --> 00:22:27,440
uh some space in the editor's um

393
00:22:25,280 --> 00:22:29,760
presentation of the issues list for that

394
00:22:27,440 --> 00:22:29,760
as well

395
00:22:32,559 --> 00:22:38,720
so why don't we see if your presentation

396
00:22:35,840 --> 00:22:40,000
deals with it justin and we can get back

397
00:22:38,720 --> 00:22:42,159
to it

398
00:22:40,000 --> 00:22:46,000
in open mic if it wasn't resolved how

399
00:22:42,159 --> 00:22:46,000
does that does that make sense fabian

400
00:22:47,520 --> 00:22:56,400
yes it's great all right

401
00:22:51,679 --> 00:22:59,600
before we move on i'd like to call for

402
00:22:56,400 --> 00:23:00,080
like higher order comments if there are

403
00:22:59,600 --> 00:23:03,360
people

404
00:23:00,080 --> 00:23:07,439
who are unhappy with github

405
00:23:03,360 --> 00:23:11,120
at all have some

406
00:23:07,440 --> 00:23:14,640
some issues with with managing issues on

407
00:23:11,120 --> 00:23:23,840
on github or anything like that

408
00:23:14,640 --> 00:23:23,840
please speak up

409
00:23:27,360 --> 00:23:40,719
all right two people on the cube dave go

410
00:23:37,440 --> 00:23:44,559
dave you're up yeah can you hear me

411
00:23:40,720 --> 00:23:48,159
yes um yeah just a quick clarification

412
00:23:44,559 --> 00:23:51,760
um our issues only to be opened

413
00:23:48,159 --> 00:23:54,000
after um you know email on

414
00:23:51,760 --> 00:23:55,760
on the list um i saw the long form

415
00:23:54,000 --> 00:23:57,440
discussion you know long form review

416
00:23:55,760 --> 00:23:59,279
should be an email on the list and then

417
00:23:57,440 --> 00:24:01,039
after discussion issues opened

418
00:23:59,279 --> 00:24:02,799
is that the only time issues can be

419
00:24:01,039 --> 00:24:04,960
opened or um

420
00:24:02,799 --> 00:24:06,559
you know if you're just reviewing the

421
00:24:04,960 --> 00:24:07,279
draft piece milk and issues be open

422
00:24:06,559 --> 00:24:09,918
directly

423
00:24:07,279 --> 00:24:09,919
on github

424
00:24:11,120 --> 00:24:16,479
i would encourage a new issues

425
00:24:14,480 --> 00:24:18,159
obviously substantial issues not

426
00:24:16,480 --> 00:24:22,159
editorial issues

427
00:24:18,159 --> 00:24:25,279
uh to first uh be sent to the list

428
00:24:22,159 --> 00:24:26,159
and then you can immediately open an

429
00:24:25,279 --> 00:24:28,400
issue

430
00:24:26,159 --> 00:24:30,840
but it's important for for people to be

431
00:24:28,400 --> 00:24:33,840
aware of

432
00:24:30,840 --> 00:24:36,240
like uh important things going into

433
00:24:33,840 --> 00:24:36,240
github

434
00:24:38,320 --> 00:24:47,840
lucy europe

435
00:24:50,640 --> 00:24:53,679
you're still muted

436
00:24:55,600 --> 00:25:01,840
yeah you're not sending audio

437
00:25:02,000 --> 00:25:08,159
oh it's here oh

438
00:25:05,120 --> 00:25:10,959
yeah all right um there

439
00:25:08,159 --> 00:25:12,720
lucy seems to be having some issue with

440
00:25:10,960 --> 00:25:16,480
uh mute echo so

441
00:25:12,720 --> 00:25:20,480
lucy do you wanna you wanna come back um

442
00:25:16,480 --> 00:25:24,320
if you might have to reload uh meet echo

443
00:25:20,480 --> 00:25:25,840
and come back or else bring it on on the

444
00:25:24,320 --> 00:25:29,039
chat

445
00:25:25,840 --> 00:25:31,600
yeah i can channel yeah

446
00:25:29,039 --> 00:25:32,720
i can channel to chat if you want to be

447
00:25:31,600 --> 00:25:35,360
honest

448
00:25:32,720 --> 00:25:35,360
to do that

449
00:25:41,120 --> 00:25:47,918
i we have seen uh miteko act up

450
00:25:45,120 --> 00:25:48,559
um at the beginning of this itf meeting

451
00:25:47,919 --> 00:25:51,679
for uh

452
00:25:48,559 --> 00:25:57,279
for a number of people so you know

453
00:25:51,679 --> 00:25:59,600
you're not alone probably

454
00:25:57,279 --> 00:25:59,600
all right

455
00:26:04,320 --> 00:26:08,559
right i'm concerned about substantial

456
00:26:06,480 --> 00:26:11,039
work being stored on git alone

457
00:26:08,559 --> 00:26:12,639
um lucy says and you know that that is

458
00:26:11,039 --> 00:26:16,080
our concern as well

459
00:26:12,640 --> 00:26:19,039
it is um you know it's a

460
00:26:16,080 --> 00:26:20,879
it's a fine line we're walking when

461
00:26:19,039 --> 00:26:23,360
we're using like dual

462
00:26:20,880 --> 00:26:24,320
streams dual tools like this uh all

463
00:26:23,360 --> 00:26:27,520
working groups

464
00:26:24,320 --> 00:26:30,639
who try this to have some

465
00:26:27,520 --> 00:26:31,918
manner of issues but you know we hope

466
00:26:30,640 --> 00:26:34,400
that the benefits

467
00:26:31,919 --> 00:26:35,520
outweigh the the the problems here

468
00:26:34,400 --> 00:26:37,360
because we we do

469
00:26:35,520 --> 00:26:40,559
expect and we can already see that there

470
00:26:37,360 --> 00:26:42,080
is there are 113 issues right now open

471
00:26:40,559 --> 00:26:42,879
on github there's a lot of stuff to

472
00:26:42,080 --> 00:26:45,439
track

473
00:26:42,880 --> 00:26:46,000
uh without having the benefit of tooling

474
00:26:45,440 --> 00:26:48,400
but

475
00:26:46,000 --> 00:26:49,440
yeah that that's a concern of the chairs

476
00:26:48,400 --> 00:26:52,000
as well

477
00:26:49,440 --> 00:26:54,799
jaron would you um do you want to say

478
00:26:52,000 --> 00:26:54,799
anything about this

479
00:26:54,880 --> 00:27:02,799
yeah my own experience

480
00:26:58,240 --> 00:27:04,480
is that it is important to have a record

481
00:27:02,799 --> 00:27:07,600
and sometimes people

482
00:27:04,480 --> 00:27:11,120
refer back to the record of discussion

483
00:27:07,600 --> 00:27:14,639
on the mailing list that's true

484
00:27:11,120 --> 00:27:16,239
but we can we can be a lot more

485
00:27:14,640 --> 00:27:18,720
efficient

486
00:27:16,240 --> 00:27:20,480
by threading discussions on github and

487
00:27:18,720 --> 00:27:25,360
eventually i think we can be

488
00:27:20,480 --> 00:27:25,360
more inclusive because people can

489
00:27:25,440 --> 00:27:30,080
work on issues that they're interested

490
00:27:27,679 --> 00:27:33,200
in without being spent

491
00:27:30,080 --> 00:27:36,879
with the whole thing so

492
00:27:33,200 --> 00:27:40,720
so i agree with leaf that the benefits

493
00:27:36,880 --> 00:27:43,279
are twice the costs so lucy says

494
00:27:40,720 --> 00:27:44,000
on chat supporting work that involves

495
00:27:43,279 --> 00:27:45,760
the the

496
00:27:44,000 --> 00:27:48,000
the working group needs to be mirrored

497
00:27:45,760 --> 00:27:51,600
on the list get isn't under

498
00:27:48,000 --> 00:27:55,279
itf control long term that well that's i

499
00:27:51,600 --> 00:27:59,760
can't disagree with that um

500
00:27:55,279 --> 00:28:03,200
all right i pick on the q

501
00:27:59,760 --> 00:28:03,840
dick uh i was wondering how we're going

502
00:28:03,200 --> 00:28:06,960
to link

503
00:28:03,840 --> 00:28:08,240
discussions on the mail list with issues

504
00:28:06,960 --> 00:28:10,720
in github

505
00:28:08,240 --> 00:28:12,720
right if you've got a big review it

506
00:28:10,720 --> 00:28:14,399
might actually be better to

507
00:28:12,720 --> 00:28:16,159
open all the issues and then post

508
00:28:14,399 --> 00:28:18,080
something to the mail list

509
00:28:16,159 --> 00:28:19,679
where you have a link to each of the

510
00:28:18,080 --> 00:28:21,039
issues at each point you're making so

511
00:28:19,679 --> 00:28:22,720
people can

512
00:28:21,039 --> 00:28:24,799
sort of see holistically your whole

513
00:28:22,720 --> 00:28:28,159
review but they know

514
00:28:24,799 --> 00:28:29,440
which issue in the in github is related

515
00:28:28,159 --> 00:28:31,840
to the point you made in the mailing

516
00:28:29,440 --> 00:28:31,840
list

517
00:28:31,919 --> 00:28:37,279
so let me respond to that i did exactly

518
00:28:34,720 --> 00:28:41,120
that for my own review

519
00:28:37,279 --> 00:28:44,799
i responded to justin's email

520
00:28:41,120 --> 00:28:45,918
with a links into each of the issues

521
00:28:44,799 --> 00:28:50,320
that i opened

522
00:28:45,919 --> 00:28:50,320
for for the points i raised

523
00:28:51,919 --> 00:28:55,760
okay well that sort of sounds counter to

524
00:28:53,520 --> 00:28:57,120
what you was suggested which is you post

525
00:28:55,760 --> 00:28:59,840
to the mail list and then open the

526
00:28:57,120 --> 00:28:59,840
issues

527
00:29:00,000 --> 00:29:04,320
yeah but then i linked to them oh in a

528
00:29:03,279 --> 00:29:07,840
response

529
00:29:04,320 --> 00:29:10,879
so is that what we should be doing then

530
00:29:07,840 --> 00:29:14,240
i think it's at least polite

531
00:29:10,880 --> 00:29:15,679
to the rest of the list to let people

532
00:29:14,240 --> 00:29:20,480
know how things

533
00:29:15,679 --> 00:29:22,640
connect and it also goes to lucy's point

534
00:29:20,480 --> 00:29:25,600
here

535
00:29:22,640 --> 00:29:26,559
right i mean i think that the github is

536
00:29:25,600 --> 00:29:28,399
a great place for

537
00:29:26,559 --> 00:29:29,600
there be a focused discussion on one

538
00:29:28,399 --> 00:29:31,199
issue but

539
00:29:29,600 --> 00:29:32,879
if we're getting consensus on that it'd

540
00:29:31,200 --> 00:29:34,640
be nice if that got brought back to the

541
00:29:32,880 --> 00:29:38,880
mailing list that we know

542
00:29:34,640 --> 00:29:41,440
something's right looks like right

543
00:29:38,880 --> 00:29:42,240
exactly and when you uh as sierra said

544
00:29:41,440 --> 00:29:46,080
when we

545
00:29:42,240 --> 00:29:49,520
close issues we expect that to happen

546
00:29:46,080 --> 00:29:50,000
right in conjunction with like an update

547
00:29:49,520 --> 00:29:52,720
to the

548
00:29:50,000 --> 00:29:54,880
to the text so the review team could uh

549
00:29:52,720 --> 00:29:56,880
can mirror back right the conclusion of

550
00:29:54,880 --> 00:29:59,120
a discussion

551
00:29:56,880 --> 00:29:59,120
okay

552
00:30:02,240 --> 00:30:05,360
or i should say the editor team not the

553
00:30:04,320 --> 00:30:06,639
review team

554
00:30:05,360 --> 00:30:09,840
all right too early in the morning for

555
00:30:06,640 --> 00:30:12,960
me all right

556
00:30:09,840 --> 00:30:14,959
you're on should we um

557
00:30:12,960 --> 00:30:16,720
move ahead i'm not seeing anyone anyone

558
00:30:14,960 --> 00:30:20,159
else in the queue i do see

559
00:30:16,720 --> 00:30:20,159
uh braun

560
00:30:21,360 --> 00:30:24,879
on uh so roman pointing out that

561
00:30:23,600 --> 00:30:26,639
consensus must be

562
00:30:24,880 --> 00:30:28,799
on the main list which is absolutely

563
00:30:26,640 --> 00:30:32,159
true and uh

564
00:30:28,799 --> 00:30:33,039
bron uh i i don't know if you want to

565
00:30:32,159 --> 00:30:36,240
say

566
00:30:33,039 --> 00:30:38,080
um people who haven't had audio issues

567
00:30:36,240 --> 00:30:40,159
can you speak up at the list i'm not

568
00:30:38,080 --> 00:30:41,760
going to mirror everything too

569
00:30:40,159 --> 00:30:43,520
or speak up at the queue i'm not going

570
00:30:41,760 --> 00:30:46,960
to yeah yeah so so

571
00:30:43,520 --> 00:30:51,840
mirror you want to say

572
00:30:46,960 --> 00:30:51,840
everybody please come to the queue

573
00:30:55,200 --> 00:31:05,039
well well maybe not

574
00:30:58,399 --> 00:31:09,600
otherwise let's move on

575
00:31:05,039 --> 00:31:09,600
so um justin you're next

576
00:31:16,399 --> 00:31:33,840
right all right i'm gonna see if i can

577
00:31:19,919 --> 00:31:33,840
share my screen here

578
00:31:41,200 --> 00:31:45,200
if you can also go on video that'll be

579
00:31:43,760 --> 00:31:48,960
nice

580
00:31:45,200 --> 00:31:52,240
yeah i'm just um getting meat echo to

581
00:31:48,960 --> 00:31:56,080
play nice here i will also go on video

582
00:31:52,240 --> 00:31:56,080
sorry about the infinite windows

583
00:31:56,159 --> 00:32:01,840
there we go okay all right

584
00:32:02,720 --> 00:32:06,399
all right i think we're good can you

585
00:32:04,799 --> 00:32:08,639
guys see the slide back

586
00:32:06,399 --> 00:32:10,479
this is also uploaded to the uh meeting

587
00:32:08,640 --> 00:32:13,360
materials page

588
00:32:10,480 --> 00:32:15,200
all right so hello everybody good

589
00:32:13,360 --> 00:32:18,479
evening and good morning and

590
00:32:15,200 --> 00:32:22,080
good middle of the night in my case um

591
00:32:18,480 --> 00:32:25,840
this is the uh editor's update for gnapp

592
00:32:22,080 --> 00:32:28,960
for ietf 109 virtual

593
00:32:25,840 --> 00:32:30,000
so yeah welcome to gnapp let's uh let's

594
00:32:28,960 --> 00:32:32,720
get moving here

595
00:32:30,000 --> 00:32:34,159
um a little bit of background first i

596
00:32:32,720 --> 00:32:36,240
want to remind everybody

597
00:32:34,159 --> 00:32:37,279
that uh even though we're working in a

598
00:32:36,240 --> 00:32:39,039
similar space

599
00:32:37,279 --> 00:32:40,480
we are not working on extensions to

600
00:32:39,039 --> 00:32:42,879
oauth 2 so

601
00:32:40,480 --> 00:32:44,880
this is a philosophy that should be

602
00:32:42,880 --> 00:32:46,640
guiding our decisions just because we

603
00:32:44,880 --> 00:32:48,640
did something one way in oauth

604
00:32:46,640 --> 00:32:49,760
2 does not mean we need to do it the

605
00:32:48,640 --> 00:32:51,919
same way here

606
00:32:49,760 --> 00:32:53,760
we really need to be taking a step back

607
00:32:51,919 --> 00:32:56,799
from

608
00:32:53,760 --> 00:33:00,240
what oauth 2

609
00:32:56,799 --> 00:33:01,120
does and asking ourselves is this the

610
00:33:00,240 --> 00:33:03,440
same

611
00:33:01,120 --> 00:33:05,039
way that we want to do it now but that

612
00:33:03,440 --> 00:33:06,720
also doesn't mean that we're going to

613
00:33:05,039 --> 00:33:10,080
ignore everything that we've learned

614
00:33:06,720 --> 00:33:12,159
over the last decade of oauth 2. also

615
00:33:10,080 --> 00:33:13,760
because this has come up a bit recently

616
00:33:12,159 --> 00:33:15,200
uh people have been talking about this

617
00:33:13,760 --> 00:33:17,360
work as oauth 3.

618
00:33:15,200 --> 00:33:20,559
i want to remind everybody this is not

619
00:33:17,360 --> 00:33:22,320
oauth 3. oauth 3 is not real

620
00:33:20,559 --> 00:33:24,240
at least not yet if at some point the

621
00:33:22,320 --> 00:33:27,678
oauth working group decides to

622
00:33:24,240 --> 00:33:29,440
uh start oauth three it could start it

623
00:33:27,679 --> 00:33:31,120
based on app could start it based on

624
00:33:29,440 --> 00:33:34,159
something else and

625
00:33:31,120 --> 00:33:35,760
but right now this is gonna happen gap

626
00:33:34,159 --> 00:33:37,440
is gonna happen no office off and they

627
00:33:35,760 --> 00:33:41,279
are separate things

628
00:33:37,440 --> 00:33:42,320
um also keep in mind that everything

629
00:33:41,279 --> 00:33:45,279
that we do here

630
00:33:42,320 --> 00:33:45,600
um you know we are not supplanting oauth

631
00:33:45,279 --> 00:33:47,360
2.

632
00:33:45,600 --> 00:33:48,959
it's not really going anywhere it solves

633
00:33:47,360 --> 00:33:50,240
a lot of use cases and it's been around

634
00:33:48,960 --> 00:33:52,320
for a decade

635
00:33:50,240 --> 00:33:53,760
but it has its limits because it's been

636
00:33:52,320 --> 00:33:55,200
around for a decade and this is our

637
00:33:53,760 --> 00:33:58,960
opportunity to take a look

638
00:33:55,200 --> 00:34:02,080
at moving beyond what oauth2

639
00:33:58,960 --> 00:34:05,440
has really enabled us to do

640
00:34:02,080 --> 00:34:06,639
um there are some core design

641
00:34:05,440 --> 00:34:08,159
considerations

642
00:34:06,640 --> 00:34:09,919
about everything that we're working on

643
00:34:08,159 --> 00:34:11,520
in this protocol uh

644
00:34:09,918 --> 00:34:13,598
fundamentally this is a protocol for

645
00:34:11,520 --> 00:34:16,560
negotiating access between multiple

646
00:34:13,599 --> 00:34:19,760
parties in multiple roles

647
00:34:16,560 --> 00:34:20,879
we need we have decided and a lot of

648
00:34:19,760 --> 00:34:22,720
this comes from

649
00:34:20,879 --> 00:34:24,239
uh you can dig into the charter text

650
00:34:22,719 --> 00:34:28,638
that we uh

651
00:34:24,239 --> 00:34:30,560
we debated and uh came to consensus on

652
00:34:28,639 --> 00:34:31,760
uh a lot of our work is going to be

653
00:34:30,560 --> 00:34:35,199
around

654
00:34:31,760 --> 00:34:37,520
um making the interaction methods for

655
00:34:35,199 --> 00:34:38,319
you know getting humans in the security

656
00:34:37,520 --> 00:34:42,000
process

657
00:34:38,320 --> 00:34:43,359
um validating the client's software

658
00:34:42,000 --> 00:34:46,000
that's going to be talking

659
00:34:43,359 --> 00:34:48,719
um to all of these things and sort of uh

660
00:34:46,000 --> 00:34:51,359
transferring trust into them

661
00:34:48,719 --> 00:34:52,879
methods for tying keys into the various

662
00:34:51,359 --> 00:34:54,399
messages which can authenticate the

663
00:34:52,879 --> 00:34:57,598
client software but also

664
00:34:54,399 --> 00:34:59,359
um do general key presentation

665
00:34:57,599 --> 00:35:00,839
uh for a lot of different things i mean

666
00:34:59,359 --> 00:35:03,440
we really want to bring the cryptic

667
00:35:00,839 --> 00:35:03,839
um the cryptographic trust up to the

668
00:35:03,440 --> 00:35:07,839
four

669
00:35:03,839 --> 00:35:11,680
here and also uh we really need to look

670
00:35:07,839 --> 00:35:13,040
at the underlying data models uh

671
00:35:11,680 --> 00:35:15,680
particularly of the things that are

672
00:35:13,040 --> 00:35:18,000
being requested

673
00:35:15,680 --> 00:35:19,359
so as the working group knows between

674
00:35:18,000 --> 00:35:21,440
the last meeting and now

675
00:35:19,359 --> 00:35:22,880
um a design team was formed by the

676
00:35:21,440 --> 00:35:25,920
chairs um

677
00:35:22,880 --> 00:35:26,400
we met a number of times over a few

678
00:35:25,920 --> 00:35:30,000
months

679
00:35:26,400 --> 00:35:31,440
and created a draft

680
00:35:30,000 --> 00:35:33,440
that has been accepted as the working

681
00:35:31,440 --> 00:35:35,040
group starting point uh there are three

682
00:35:33,440 --> 00:35:36,000
editors i believe all three of us are on

683
00:35:35,040 --> 00:35:38,800
the call i saw

684
00:35:36,000 --> 00:35:40,000
uh aaron and fabian in the um in the

685
00:35:38,800 --> 00:35:41,280
list there and you guys heard robbie in

686
00:35:40,000 --> 00:35:44,320
a minute ago

687
00:35:41,280 --> 00:35:47,359
um and uh myself uh

688
00:35:44,320 --> 00:35:50,079
as well um will be serving as

689
00:35:47,359 --> 00:35:51,440
editors of the document um which means

690
00:35:50,079 --> 00:35:53,760
it is our job to

691
00:35:51,440 --> 00:35:54,720
express and codify the working group

692
00:35:53,760 --> 00:35:58,800
consensus

693
00:35:54,720 --> 00:36:01,919
and um and sort of help uh

694
00:35:58,800 --> 00:36:04,480
move that forward and uh

695
00:36:01,920 --> 00:36:06,480
in the current document there are lots

696
00:36:04,480 --> 00:36:07,599
of notes and sort of decision points

697
00:36:06,480 --> 00:36:09,280
because one of the things with the

698
00:36:07,599 --> 00:36:09,920
working group is we knew that it wasn't

699
00:36:09,280 --> 00:36:13,040
final

700
00:36:09,920 --> 00:36:14,240
now um those issues as yarn was just

701
00:36:13,040 --> 00:36:16,240
talking about

702
00:36:14,240 --> 00:36:17,279
um are going to be tracked in github

703
00:36:16,240 --> 00:36:19,919
going forward

704
00:36:17,280 --> 00:36:21,920
and i do think that that is the right

705
00:36:19,920 --> 00:36:24,720
tool it is a really good tool

706
00:36:21,920 --> 00:36:25,920
for managing this kind of stuff um

707
00:36:24,720 --> 00:36:27,680
there's also a couple of test

708
00:36:25,920 --> 00:36:31,520
implementations already in the work

709
00:36:27,680 --> 00:36:34,560
um for uh for the current draft um

710
00:36:31,520 --> 00:36:35,680
i have uh an implementation i know a

711
00:36:34,560 --> 00:36:38,320
number of other people

712
00:36:35,680 --> 00:36:40,160
who are um starting to implement various

713
00:36:38,320 --> 00:36:41,839
parts of this

714
00:36:40,160 --> 00:36:43,279
because remember this is the ietf we

715
00:36:41,839 --> 00:36:43,759
believe in rough consensus and running

716
00:36:43,280 --> 00:36:46,640
code

717
00:36:43,760 --> 00:36:48,160
and so the decisions that we make here

718
00:36:46,640 --> 00:36:49,920
in this working group really do need to

719
00:36:48,160 --> 00:36:52,078
be borne out

720
00:36:49,920 --> 00:36:53,119
in running code that should be part of

721
00:36:52,079 --> 00:36:56,880
our

722
00:36:53,119 --> 00:36:59,520
decision process so the design team

723
00:36:56,880 --> 00:37:02,480
output a single document which was the

724
00:36:59,520 --> 00:37:04,160
direction of the chairs and really to

725
00:37:02,480 --> 00:37:05,839
give us a starting point this is

726
00:37:04,160 --> 00:37:07,759
something that combines

727
00:37:05,839 --> 00:37:09,520
functional aspects of what was known as

728
00:37:07,760 --> 00:37:11,359
x y z and x off the

729
00:37:09,520 --> 00:37:12,720
two individual drafts that uh both

730
00:37:11,359 --> 00:37:15,440
myself and dick hart had

731
00:37:12,720 --> 00:37:16,319
authored as inputs into the working

732
00:37:15,440 --> 00:37:18,240
group

733
00:37:16,320 --> 00:37:19,839
and the goal of the design team was to

734
00:37:18,240 --> 00:37:22,640
create a

735
00:37:19,839 --> 00:37:24,799
single cohesive protocol but not

736
00:37:22,640 --> 00:37:27,040
something that was final output

737
00:37:24,800 --> 00:37:30,240
so there are lots of decisions yet to be

738
00:37:27,040 --> 00:37:34,560
made lots of work ahead of us

739
00:37:30,240 --> 00:37:35,919
and even though what was in draft zero

740
00:37:34,560 --> 00:37:37,440
kind of makes sense as it is that

741
00:37:35,920 --> 00:37:38,000
doesn't mean that that's the best that

742
00:37:37,440 --> 00:37:41,359
we can do

743
00:37:38,000 --> 00:37:42,960
well we don't think it is um which is

744
00:37:41,359 --> 00:37:44,799
what our job as a working group is going

745
00:37:42,960 --> 00:37:48,800
to be is to now take

746
00:37:44,800 --> 00:37:51,040
this single protocol um and

747
00:37:48,800 --> 00:37:51,920
you know move things forward and if you

748
00:37:51,040 --> 00:37:53,759
had uh

749
00:37:51,920 --> 00:37:54,960
implemented either xyz or x off

750
00:37:53,760 --> 00:37:57,280
previously

751
00:37:54,960 --> 00:37:58,079
um you'll notice that the nap core

752
00:37:57,280 --> 00:38:00,560
protocol

753
00:37:58,079 --> 00:38:03,280
isn't directly compatible with either of

754
00:38:00,560 --> 00:38:05,520
those it pulls things from both of those

755
00:38:03,280 --> 00:38:07,680
and there's still there's still a lot

756
00:38:05,520 --> 00:38:10,720
that we need to sort out

757
00:38:07,680 --> 00:38:11,759
in both draft zero and one so currently

758
00:38:10,720 --> 00:38:14,640
the draft is at

759
00:38:11,760 --> 00:38:16,839
uh version version one which is still

760
00:38:14,640 --> 00:38:18,000
very close to the design team's output

761
00:38:16,839 --> 00:38:20,640
um

762
00:38:18,000 --> 00:38:22,400
there are a number of editors notes

763
00:38:20,640 --> 00:38:25,440
peppered throughout the document 92 i

764
00:38:22,400 --> 00:38:28,160
believe it was at my last count

765
00:38:25,440 --> 00:38:29,920
and they are currently in line in the

766
00:38:28,160 --> 00:38:32,640
group document but

767
00:38:29,920 --> 00:38:34,480
as you probably saw on the list we've

768
00:38:32,640 --> 00:38:36,160
gone through and extracted all of these

769
00:38:34,480 --> 00:38:39,440
into github issues

770
00:38:36,160 --> 00:38:41,520
and we have already

771
00:38:39,440 --> 00:38:43,440
reviewed and merged a pull request that

772
00:38:41,520 --> 00:38:44,960
will remove the inline text

773
00:38:43,440 --> 00:38:47,599
and replace those with links to the

774
00:38:44,960 --> 00:38:50,079
github issues now these are only for the

775
00:38:47,599 --> 00:38:52,960
editors notes that were doing this

776
00:38:50,079 --> 00:38:54,480
because the idea of the editor's note

777
00:38:52,960 --> 00:38:58,400
was to provide

778
00:38:54,480 --> 00:39:00,640
um sort of a record of a decision point

779
00:38:58,400 --> 00:39:02,800
for the group to talk uh to talk about

780
00:39:00,640 --> 00:39:06,560
at least start the conversation about

781
00:39:02,800 --> 00:39:08,640
um we don't plan on um

782
00:39:06,560 --> 00:39:10,400
peppering the draft document with links

783
00:39:08,640 --> 00:39:12,560
into github going forward

784
00:39:10,400 --> 00:39:13,520
although we can definitely do that when

785
00:39:12,560 --> 00:39:15,359
there is

786
00:39:13,520 --> 00:39:16,880
a long-standing issue or a number of

787
00:39:15,359 --> 00:39:17,839
different options or something that the

788
00:39:16,880 --> 00:39:19,920
group

789
00:39:17,839 --> 00:39:21,200
is still in the process of discussing so

790
00:39:19,920 --> 00:39:23,680
that's something that the editors are

791
00:39:21,200 --> 00:39:23,680
going to

792
00:39:23,760 --> 00:39:30,720
be able to leverage going forward um

793
00:39:28,640 --> 00:39:31,839
but uh right now we wanted to pull all

794
00:39:30,720 --> 00:39:33,520
of the editor's notes out of the

795
00:39:31,839 --> 00:39:35,279
document because

796
00:39:33,520 --> 00:39:37,200
um having them in the document means

797
00:39:35,280 --> 00:39:40,400
that they're kind of static and

798
00:39:37,200 --> 00:39:43,680
uh we can't really have an ongoing uh

799
00:39:40,400 --> 00:39:46,560
reflected discussion on them um

800
00:39:43,680 --> 00:39:48,319
so those are all in github issues now uh

801
00:39:46,560 --> 00:39:49,839
the editor's process yarn was talking

802
00:39:48,320 --> 00:39:53,040
about so the editors

803
00:39:49,839 --> 00:39:55,520
have met now and

804
00:39:53,040 --> 00:39:56,079
um everything every single change to the

805
00:39:55,520 --> 00:39:57,359
document

806
00:39:56,079 --> 00:40:00,960
is going to be going through pull

807
00:39:57,359 --> 00:40:04,160
requests um so you'll be able to see

808
00:40:00,960 --> 00:40:06,560
individual change sets over time

809
00:40:04,160 --> 00:40:07,920
and the editors are doing a a

810
00:40:06,560 --> 00:40:10,640
self-imposed

811
00:40:07,920 --> 00:40:11,920
requirement of review from at least one

812
00:40:10,640 --> 00:40:14,720
other editor even for

813
00:40:11,920 --> 00:40:16,560
simple um editorial changes like typo

814
00:40:14,720 --> 00:40:18,720
fixes and things like that

815
00:40:16,560 --> 00:40:20,319
because it's better to have more eyes on

816
00:40:18,720 --> 00:40:22,078
it even for something simple like that

817
00:40:20,319 --> 00:40:23,839
to make sure that we're not

818
00:40:22,079 --> 00:40:26,560
you know doing something that we don't

819
00:40:23,839 --> 00:40:27,839
intend here all substantial changes

820
00:40:26,560 --> 00:40:30,560
which includes um

821
00:40:27,839 --> 00:40:31,119
any substantial um pull requests that

822
00:40:30,560 --> 00:40:34,078
change

823
00:40:31,119 --> 00:40:36,480
uh normative text and things like that

824
00:40:34,079 --> 00:40:38,319
need to be verified on the list

825
00:40:36,480 --> 00:40:40,000
and finally we're going to be tagging

826
00:40:38,319 --> 00:40:42,400
every single document release in the

827
00:40:40,000 --> 00:40:44,960
repository so that you'll be able to

828
00:40:42,400 --> 00:40:46,560
diff the source between multiple things

829
00:40:44,960 --> 00:40:48,400
now speaking of the source

830
00:40:46,560 --> 00:40:50,799
uh currently it is markdown using the

831
00:40:48,400 --> 00:40:53,839
cram down rfc 2629

832
00:40:50,800 --> 00:40:55,680
um project we are going to be checking

833
00:40:53,839 --> 00:40:56,160
in the markdown but we will not be

834
00:40:55,680 --> 00:41:01,200
checking

835
00:40:56,160 --> 00:41:01,200
in the xml html and text files into

836
00:41:01,359 --> 00:41:07,920
into github those will be

837
00:41:04,800 --> 00:41:08,480
part of the normal ietf draft release

838
00:41:07,920 --> 00:41:11,839
cycle

839
00:41:08,480 --> 00:41:13,280
so we will be generating the xml and

840
00:41:11,839 --> 00:41:15,599
data tracker will

841
00:41:13,280 --> 00:41:16,880
handle all of those archival and human

842
00:41:15,599 --> 00:41:19,920
readable versions

843
00:41:16,880 --> 00:41:21,760
of that the repository has a docker file

844
00:41:19,920 --> 00:41:24,000
and a build script for you guys to

845
00:41:21,760 --> 00:41:25,040
be able to build this on your own uh it

846
00:41:24,000 --> 00:41:28,400
currently

847
00:41:25,040 --> 00:41:30,079
will uh generate the html file and um

848
00:41:28,400 --> 00:41:32,079
you know if you are if you are running

849
00:41:30,079 --> 00:41:33,280
docker um you'll be able to do that

850
00:41:32,079 --> 00:41:35,520
without having to install

851
00:41:33,280 --> 00:41:37,760
all of the ruby and python libraries to

852
00:41:35,520 --> 00:41:40,800
actually make this run

853
00:41:37,760 --> 00:41:42,560
okay um also uh heads-up chairs

854
00:41:40,800 --> 00:41:44,560
with this with this up on my screen i

855
00:41:42,560 --> 00:41:46,160
can't actually see the cue or anything

856
00:41:44,560 --> 00:41:49,440
so feel free to

857
00:41:46,160 --> 00:41:51,520
chime in if i need to um

858
00:41:49,440 --> 00:41:54,640
uh if i need to shut up for a minute and

859
00:41:51,520 --> 00:41:58,160
uh we need more discussion

860
00:41:54,640 --> 00:41:58,160
all right awesome thank you life

861
00:41:58,240 --> 00:42:03,040
okay so the editors wanted to

862
00:42:01,359 --> 00:42:05,440
talk about a couple of different

863
00:42:03,040 --> 00:42:07,119
specific issues

864
00:42:05,440 --> 00:42:09,359
now as you guys will notice there are a

865
00:42:07,119 --> 00:42:11,119
lot of issues on github right now most

866
00:42:09,359 --> 00:42:14,880
of those are the editors notes

867
00:42:11,119 --> 00:42:18,000
a bunch of them aren't and we will be

868
00:42:14,880 --> 00:42:20,000
working on discussing and closing and

869
00:42:18,000 --> 00:42:21,839
resolving those

870
00:42:20,000 --> 00:42:23,280
as we go forward in time here so if

871
00:42:21,839 --> 00:42:26,640
there's something that

872
00:42:23,280 --> 00:42:27,680
needs to uh needs to change or

873
00:42:26,640 --> 00:42:30,319
there's something that needs to be

874
00:42:27,680 --> 00:42:34,000
discussed um

875
00:42:30,319 --> 00:42:37,279
you know please uh open an issue um

876
00:42:34,000 --> 00:42:40,160
and uh so but as as for what

877
00:42:37,280 --> 00:42:41,680
yarn said a few minutes ago if it is a

878
00:42:40,160 --> 00:42:45,200
substantive discussion

879
00:42:41,680 --> 00:42:46,240
of like hey this is this is a decision

880
00:42:45,200 --> 00:42:48,160
point we really

881
00:42:46,240 --> 00:42:49,759
need to make like that decision that

882
00:42:48,160 --> 00:42:53,040
discussion has to

883
00:42:49,760 --> 00:42:55,920
at least have an artifact on the list

884
00:42:53,040 --> 00:42:57,359
to make the list aware of it that there

885
00:42:55,920 --> 00:43:00,560
is a substantive

886
00:42:57,359 --> 00:43:03,119
issue the editors will also take

887
00:43:00,560 --> 00:43:04,400
all substantive pull requests that we

888
00:43:03,119 --> 00:43:07,599
create

889
00:43:04,400 --> 00:43:11,760
and send them into the list

890
00:43:07,599 --> 00:43:13,839
so anytime we will be making

891
00:43:11,760 --> 00:43:14,880
a change into the document we'll not

892
00:43:13,839 --> 00:43:17,599
only be doing

893
00:43:14,880 --> 00:43:18,400
our you know our internal review with

894
00:43:17,599 --> 00:43:21,440
the three of us

895
00:43:18,400 --> 00:43:22,560
but also sending it to the list for uh

896
00:43:21,440 --> 00:43:25,680
confirmation

897
00:43:22,560 --> 00:43:27,200
and and whatnot uh one thing to keep in

898
00:43:25,680 --> 00:43:27,919
mind for all of these issues and pull

899
00:43:27,200 --> 00:43:31,118
requests

900
00:43:27,920 --> 00:43:31,839
is that um the goal here for each of

901
00:43:31,119 --> 00:43:35,119
these

902
00:43:31,839 --> 00:43:35,920
is never necessarily to come up with the

903
00:43:35,119 --> 00:43:37,839
perfect

904
00:43:35,920 --> 00:43:40,480
answer and the perfect phrasing but it's

905
00:43:37,839 --> 00:43:41,680
always to make it better because at the

906
00:43:40,480 --> 00:43:44,000
end of the day

907
00:43:41,680 --> 00:43:46,078
issues and pull requests and changes are

908
00:43:44,000 --> 00:43:49,040
relatively cheap

909
00:43:46,079 --> 00:43:50,240
and they are all in the open so if

910
00:43:49,040 --> 00:43:51,920
something

911
00:43:50,240 --> 00:43:53,439
especially for a potentially

912
00:43:51,920 --> 00:43:55,680
controversial issue

913
00:43:53,440 --> 00:43:57,920
if something moves us forward if

914
00:43:55,680 --> 00:44:00,560
something actually

915
00:43:57,920 --> 00:44:02,800
you know helps drive the discussion

916
00:44:00,560 --> 00:44:06,400
forward

917
00:44:02,800 --> 00:44:09,280
you may see things that are accepted

918
00:44:06,400 --> 00:44:09,839
and um and merged and even potentially

919
00:44:09,280 --> 00:44:13,359
published

920
00:44:09,839 --> 00:44:14,160
that are not final yet like that there's

921
00:44:13,359 --> 00:44:16,799
this is still

922
00:44:14,160 --> 00:44:18,960
a work in progress in cases like that we

923
00:44:16,800 --> 00:44:22,000
may if it's an ongoing discussion

924
00:44:18,960 --> 00:44:24,240
um the editors may embed a new

925
00:44:22,000 --> 00:44:25,920
link to that discussion issue in the

926
00:44:24,240 --> 00:44:27,919
document itself to have that kind of

927
00:44:25,920 --> 00:44:31,839
cross-linking record

928
00:44:27,920 --> 00:44:34,880
but over time we expect those to

929
00:44:31,839 --> 00:44:37,680
be removed from the document

930
00:44:34,880 --> 00:44:38,079
all right with that um the editors have

931
00:44:37,680 --> 00:44:40,560
gone

932
00:44:38,079 --> 00:44:41,920
and uh hand-picked a couple of issues

933
00:44:40,560 --> 00:44:44,640
that we thought would be

934
00:44:41,920 --> 00:44:45,520
uh best for discussion here at this

935
00:44:44,640 --> 00:44:49,200
meeting

936
00:44:45,520 --> 00:44:54,240
and um we'll start off with

937
00:44:49,200 --> 00:44:57,359
a doozy uh the terminology um

938
00:44:54,240 --> 00:44:59,759
we are coming at this protocol

939
00:44:57,359 --> 00:45:03,440
from a world that already has things

940
00:44:59,760 --> 00:45:06,160
like oauth and open id connect

941
00:45:03,440 --> 00:45:07,520
but there's also a lot of other stuff

942
00:45:06,160 --> 00:45:09,200
out there that's working in similar

943
00:45:07,520 --> 00:45:10,319
spaces there's a lot of work in the ssi

944
00:45:09,200 --> 00:45:12,640
world there's

945
00:45:10,319 --> 00:45:13,839
um all of the work on you know siba and

946
00:45:12,640 --> 00:45:15,440
user managed access

947
00:45:13,839 --> 00:45:16,960
that are sort of you know around the

948
00:45:15,440 --> 00:45:20,160
oauth space

949
00:45:16,960 --> 00:45:22,720
um so we've got a chance to

950
00:45:20,160 --> 00:45:23,359
ask ourselves what we mean when we call

951
00:45:22,720 --> 00:45:27,118
things

952
00:45:23,359 --> 00:45:28,400
certain things and uh you know we get to

953
00:45:27,119 --> 00:45:30,160
decide

954
00:45:28,400 --> 00:45:32,880
what things are named and what things

955
00:45:30,160 --> 00:45:36,319
are defined as so

956
00:45:32,880 --> 00:45:37,200
uh per fabian's question earlier um how

957
00:45:36,319 --> 00:45:40,079
do we

958
00:45:37,200 --> 00:45:40,399
avoid endless months of bike shedding

959
00:45:40,079 --> 00:45:44,880
and

960
00:45:40,400 --> 00:45:46,720
arguing about uh what exactly we call

961
00:45:44,880 --> 00:45:48,240
something you know what is what is a

962
00:45:46,720 --> 00:45:52,078
specific term

963
00:45:48,240 --> 00:45:52,560
um and one of the ways that we can do

964
00:45:52,079 --> 00:45:55,680
that

965
00:45:52,560 --> 00:45:59,599
is to that's been proposed

966
00:45:55,680 --> 00:46:02,960
is to collect terms on github

967
00:45:59,599 --> 00:46:06,319
issues another proposal has been to

968
00:46:02,960 --> 00:46:08,960
use a wiki to describe

969
00:46:06,319 --> 00:46:10,560
everything and sort of refine things on

970
00:46:08,960 --> 00:46:14,079
the wiki

971
00:46:10,560 --> 00:46:15,200
another proposal has been to have either

972
00:46:14,079 --> 00:46:18,480
separate files or

973
00:46:15,200 --> 00:46:22,480
issues for each identified term

974
00:46:18,480 --> 00:46:24,720
and then sort of iterate within those

975
00:46:22,480 --> 00:46:26,839
the editors would like feedback on what

976
00:46:24,720 --> 00:46:30,078
the working group has

977
00:46:26,839 --> 00:46:30,640
for an appetite for doing all of these

978
00:46:30,079 --> 00:46:34,560
things

979
00:46:30,640 --> 00:46:35,279
um and uh you know i can i can provide

980
00:46:34,560 --> 00:46:38,400
my own

981
00:46:35,280 --> 00:46:40,079
uh take on what works

982
00:46:38,400 --> 00:46:42,319
uh what i've seen work and what i've

983
00:46:40,079 --> 00:46:46,000
seen uh not work

984
00:46:42,319 --> 00:46:47,839
but we would like input from the group

985
00:46:46,000 --> 00:46:49,839
so if there's anybody that wants to

986
00:46:47,839 --> 00:46:54,160
speak to this

987
00:46:49,839 --> 00:46:56,160
i see descartes on the queue so um

988
00:46:54,160 --> 00:46:58,160
yeah i made the suggestion of the wiki

989
00:46:56,160 --> 00:47:00,399
not to have the wiki be where we had a

990
00:46:58,160 --> 00:47:00,879
discussion but just as a wiki to be able

991
00:47:00,400 --> 00:47:03,839
to

992
00:47:00,880 --> 00:47:05,440
summarize what are all the terms what

993
00:47:03,839 --> 00:47:06,960
are the proposed definitions what are

994
00:47:05,440 --> 00:47:09,119
different names for the same kind of

995
00:47:06,960 --> 00:47:11,520
things so that we have one

996
00:47:09,119 --> 00:47:12,720
place to undersea at all where right now

997
00:47:11,520 --> 00:47:15,040
it's scattered through

998
00:47:12,720 --> 00:47:16,000
the rfc and having it scattered across a

999
00:47:15,040 --> 00:47:17,920
bunch of

1000
00:47:16,000 --> 00:47:19,520
issues seems a lot harder for people to

1001
00:47:17,920 --> 00:47:21,920
look at and understand how they all fit

1002
00:47:19,520 --> 00:47:21,920
together

1003
00:47:22,880 --> 00:47:26,720
all right thank you dick do uh yes

1004
00:47:25,760 --> 00:47:28,800
that's a

1005
00:47:26,720 --> 00:47:29,759
as a chairs commentator would would do

1006
00:47:28,800 --> 00:47:32,400
you

1007
00:47:29,760 --> 00:47:33,119
dick do you or or you know i guess this

1008
00:47:32,400 --> 00:47:35,359
is for

1009
00:47:33,119 --> 00:47:36,880
anyone in the group you guys see this as

1010
00:47:35,359 --> 00:47:39,598
a permanent thing

1011
00:47:36,880 --> 00:47:40,240
are we publishing this as an appendix or

1012
00:47:39,599 --> 00:47:43,200
as a

1013
00:47:40,240 --> 00:47:46,720
as a section in the in the core document

1014
00:47:43,200 --> 00:47:50,319
at some point or what do we do with this

1015
00:47:46,720 --> 00:47:52,720
so from um so from my perspective

1016
00:47:50,319 --> 00:47:53,920
uh we should have a terminology section

1017
00:47:52,720 --> 00:47:56,078
um

1018
00:47:53,920 --> 00:47:58,480
and something that actually collects all

1019
00:47:56,079 --> 00:48:02,000
of these uh there's the start of it

1020
00:47:58,480 --> 00:48:04,240
in the introduction it's it's um

1021
00:48:02,000 --> 00:48:06,000
it's not comprehensive and it's a lot

1022
00:48:04,240 --> 00:48:07,598
looser than it needs to be

1023
00:48:06,000 --> 00:48:10,880
in the current in the current draft

1024
00:48:07,599 --> 00:48:10,880
document but

1025
00:48:11,280 --> 00:48:17,040
in in my view we should be

1026
00:48:14,319 --> 00:48:18,640
moving towards a terminology section

1027
00:48:17,040 --> 00:48:20,558
whether or not that's the exact content

1028
00:48:18,640 --> 00:48:24,078
of the wiki

1029
00:48:20,559 --> 00:48:27,359
i i don't know but um

1030
00:48:24,079 --> 00:48:27,359
yeah i think there should be a section

1031
00:48:30,559 --> 00:48:38,240
you're on go in yeah no not as a chair

1032
00:48:34,480 --> 00:48:39,520
but and i don't like terminology

1033
00:48:38,240 --> 00:48:42,640
discussions all that

1034
00:48:39,520 --> 00:48:45,200
much but i think we should get it over

1035
00:48:42,640 --> 00:48:45,759
as soon as possible and maybe have a

1036
00:48:45,200 --> 00:48:49,118
goal

1037
00:48:45,760 --> 00:48:52,079
of concluding the discussion about

1038
00:48:49,119 --> 00:48:54,720
terminology by the next idf

1039
00:48:52,079 --> 00:48:55,520
because it's really really costly to go

1040
00:48:54,720 --> 00:48:58,399
through global

1041
00:48:55,520 --> 00:49:00,319
global changes afterwards and people

1042
00:48:58,400 --> 00:49:03,920
will just be confused

1043
00:49:00,319 --> 00:49:08,079
so whether it's wiki or not whatever

1044
00:49:03,920 --> 00:49:08,079
let's uh let's get it over with

1045
00:49:10,480 --> 00:49:17,839
all right sounds good europe

1046
00:49:21,119 --> 00:49:23,359
take

1047
00:49:27,599 --> 00:49:33,760
did you want to say something

1048
00:49:31,040 --> 00:49:33,759
you're in the queue

1049
00:49:34,559 --> 00:49:39,119
i'm going to drop you and you can come

1050
00:49:36,720 --> 00:49:41,439
back fabian

1051
00:49:39,119 --> 00:49:43,440
yes i would support yaron's comment on

1052
00:49:41,440 --> 00:49:44,000
that i think we need to stabilize in the

1053
00:49:43,440 --> 00:49:46,559
next few

1054
00:49:44,000 --> 00:49:48,960
weeks and have something ready for the

1055
00:49:46,559 --> 00:49:51,040
next etf meeting so that we don't

1056
00:49:48,960 --> 00:49:53,839
you know spend all our time on

1057
00:49:51,040 --> 00:49:56,240
terminology issues

1058
00:49:53,839 --> 00:49:58,640
of course we can change a definition or

1059
00:49:56,240 --> 00:50:00,640
something later on that's not a big deal

1060
00:49:58,640 --> 00:50:04,078
but at least have the least defined

1061
00:50:00,640 --> 00:50:04,078
would be would be important

1062
00:50:09,760 --> 00:50:17,520
all right um

1063
00:50:13,599 --> 00:50:20,480
i'm not hearing a lot of um

1064
00:50:17,520 --> 00:50:22,480
voices in support of of either solution

1065
00:50:20,480 --> 00:50:23,520
here but it doesn't sound like people

1066
00:50:22,480 --> 00:50:26,800
are opposed to

1067
00:50:23,520 --> 00:50:29,520
using a wiki for for this um

1068
00:50:26,800 --> 00:50:30,160
yeah maybe that's a good starting point

1069
00:50:29,520 --> 00:50:32,240
and

1070
00:50:30,160 --> 00:50:34,319
maybe you know if we were going to talk

1071
00:50:32,240 --> 00:50:36,319
about the interims at some point here

1072
00:50:34,319 --> 00:50:38,319
and it might be a good goal for maybe

1073
00:50:36,319 --> 00:50:38,880
the first interim to sort of spend a

1074
00:50:38,319 --> 00:50:41,920
little time

1075
00:50:38,880 --> 00:50:44,559
closing this so

1076
00:50:41,920 --> 00:50:45,520
you know have a user get up with the

1077
00:50:44,559 --> 00:50:48,559
github wiki

1078
00:50:45,520 --> 00:50:52,079
um gather all of the

1079
00:50:48,559 --> 00:50:55,040
um various terms and then

1080
00:50:52,079 --> 00:50:57,119
use some time on the first uh interim to

1081
00:50:55,040 --> 00:50:59,200
just sort of

1082
00:50:57,119 --> 00:51:02,400
well polish this off this you know does

1083
00:50:59,200 --> 00:51:02,399
that make sense to people

1084
00:51:06,839 --> 00:51:10,319
yeah says i think scoping is more

1085
00:51:09,200 --> 00:51:14,558
important on the

1086
00:51:10,319 --> 00:51:17,599
um um and i you know this is not

1087
00:51:14,559 --> 00:51:19,200
we're not talking about terminology as

1088
00:51:17,599 --> 00:51:21,440
opposed to other things right

1089
00:51:19,200 --> 00:51:23,200
we're you know we we want to get it out

1090
00:51:21,440 --> 00:51:26,000
of the way as quickly as possible

1091
00:51:23,200 --> 00:51:26,000
that's my sense

1092
00:51:28,800 --> 00:51:32,480
yeah and um you want to say something

1093
00:51:31,839 --> 00:51:34,400
about that

1094
00:51:32,480 --> 00:51:36,640
uh justin otherwise i'm gonna then i'm

1095
00:51:34,400 --> 00:51:39,359
gonna let aaron speak and

1096
00:51:36,640 --> 00:51:40,240
yeah i was i was just going to agree um

1097
00:51:39,359 --> 00:51:43,680
i think that

1098
00:51:40,240 --> 00:51:45,040
you know uh a wiki when used as um

1099
00:51:43,680 --> 00:51:47,118
this is something that i've commented on

1100
00:51:45,040 --> 00:51:48,640
the issue it's terrible for discussion

1101
00:51:47,119 --> 00:51:51,440
but it's good for

1102
00:51:48,640 --> 00:51:52,799
sort of collecting this sort of you know

1103
00:51:51,440 --> 00:51:56,000
current state

1104
00:51:52,800 --> 00:51:59,119
um so uh you know discussion

1105
00:51:56,000 --> 00:52:01,839
either on um on issue 29

1106
00:51:59,119 --> 00:52:02,960
or you know if you create a new issue

1107
00:52:01,839 --> 00:52:04,960
for a specific

1108
00:52:02,960 --> 00:52:06,640
term or something like that if you want

1109
00:52:04,960 --> 00:52:07,359
to make sure you link it back to this

1110
00:52:06,640 --> 00:52:09,680
one

1111
00:52:07,359 --> 00:52:11,279
and then let's pull all of that into the

1112
00:52:09,680 --> 00:52:12,000
wiki i i think that's something that the

1113
00:52:11,280 --> 00:52:15,119
editors can

1114
00:52:12,000 --> 00:52:19,839
uh can leave favan's already started a

1115
00:52:15,119 --> 00:52:19,839
page that we can start to use for that

1116
00:52:20,559 --> 00:52:22,960
arlen

1117
00:52:26,079 --> 00:52:29,599
yeah i was just gonna say um the wiki

1118
00:52:28,559 --> 00:52:31,680
idea

1119
00:52:29,599 --> 00:52:32,720
i'm in support of that as long as it's

1120
00:52:31,680 --> 00:52:35,680
within the

1121
00:52:32,720 --> 00:52:36,319
context of that's the sort of quick

1122
00:52:35,680 --> 00:52:38,160
place to

1123
00:52:36,319 --> 00:52:40,480
to capture the current state of the

1124
00:52:38,160 --> 00:52:40,879
discussions which eventually ends up

1125
00:52:40,480 --> 00:52:42,880
back

1126
00:52:40,880 --> 00:52:44,640
in the actual draft i don't think it's a

1127
00:52:42,880 --> 00:52:47,040
good long-term plan for

1128
00:52:44,640 --> 00:52:48,480
anything to live there but it is faster

1129
00:52:47,040 --> 00:52:50,079
to make edits to that than it is to

1130
00:52:48,480 --> 00:52:52,000
publish new drafts

1131
00:52:50,079 --> 00:52:53,839
so as far as capturing the current

1132
00:52:52,000 --> 00:52:55,440
discussions and a place to work

1133
00:52:53,839 --> 00:52:57,680
i think the wiki is a fine solution for

1134
00:52:55,440 --> 00:52:57,680
that

1135
00:52:58,240 --> 00:53:04,160
all right and uh lucy made a note in

1136
00:53:02,160 --> 00:53:05,359
in the chat about sort of make being

1137
00:53:04,160 --> 00:53:08,480
able to defend

1138
00:53:05,359 --> 00:53:11,040
uh terminology which you know is uh

1139
00:53:08,480 --> 00:53:11,599
great advice i i suggest we call time on

1140
00:53:11,040 --> 00:53:15,520
this

1141
00:53:11,599 --> 00:53:17,520
and uh all right um

1142
00:53:15,520 --> 00:53:19,359
thanks there's one specific thing that i

1143
00:53:17,520 --> 00:53:21,520
wanted to bring to people's attention

1144
00:53:19,359 --> 00:53:22,799
um because this was a discussion from

1145
00:53:21,520 --> 00:53:24,880
the design team

1146
00:53:22,800 --> 00:53:26,480
uh on a particular term that i don't

1147
00:53:24,880 --> 00:53:28,640
think necessarily came through

1148
00:53:26,480 --> 00:53:30,240
clearly in the draft because it was

1149
00:53:28,640 --> 00:53:31,279
relatively late in the design team

1150
00:53:30,240 --> 00:53:34,000
process

1151
00:53:31,280 --> 00:53:35,920
um the proposal here is that we

1152
00:53:34,000 --> 00:53:36,800
specifically replace what's now called

1153
00:53:35,920 --> 00:53:39,680
the resource

1154
00:53:36,800 --> 00:53:41,280
client or client within the document and

1155
00:53:39,680 --> 00:53:42,000
specifically talk about something called

1156
00:53:41,280 --> 00:53:44,079
a client

1157
00:53:42,000 --> 00:53:45,920
instance and whether we you know

1158
00:53:44,079 --> 00:53:49,280
workshop that name or whatever

1159
00:53:45,920 --> 00:53:51,520
the idea here being that um a distinct

1160
00:53:49,280 --> 00:53:52,400
instance is a cryptographic identity

1161
00:53:51,520 --> 00:53:54,559
which means that

1162
00:53:52,400 --> 00:53:56,160
it always means it has access to a

1163
00:53:54,559 --> 00:53:58,800
specific key

1164
00:53:56,160 --> 00:53:59,598
and i went through the document and

1165
00:53:58,800 --> 00:54:01,440
almost

1166
00:53:59,599 --> 00:54:03,520
every single place where we talk about

1167
00:54:01,440 --> 00:54:06,240
the rc or the client

1168
00:54:03,520 --> 00:54:08,079
almost every single place from the

1169
00:54:06,240 --> 00:54:08,879
protocols perspective we're really

1170
00:54:08,079 --> 00:54:11,200
talking about

1171
00:54:08,880 --> 00:54:13,280
a single client instance performing an

1172
00:54:11,200 --> 00:54:15,359
action or

1173
00:54:13,280 --> 00:54:16,960
you know waiting for a response or

1174
00:54:15,359 --> 00:54:20,000
whatnot

1175
00:54:16,960 --> 00:54:23,200
so you know that is

1176
00:54:20,000 --> 00:54:24,640
my first proposal into changing the

1177
00:54:23,200 --> 00:54:28,319
terminology

1178
00:54:24,640 --> 00:54:30,160
because this reflects where um

1179
00:54:28,319 --> 00:54:32,240
you know the discussion on the design

1180
00:54:30,160 --> 00:54:34,078
team uh had already been going and we've

1181
00:54:32,240 --> 00:54:35,680
already got a few places in the document

1182
00:54:34,079 --> 00:54:38,640
that use this term

1183
00:54:35,680 --> 00:54:41,118
um but i i think that we can we can

1184
00:54:38,640 --> 00:54:43,040
actually make this more universal

1185
00:54:41,119 --> 00:54:45,599
which leads us into the next set of

1186
00:54:43,040 --> 00:54:47,520
issues um so unless there's people on

1187
00:54:45,599 --> 00:54:50,240
the queue specifically for this

1188
00:54:47,520 --> 00:54:53,839
i was going to go on to the broader

1189
00:54:50,240 --> 00:54:53,839
discussion of client software

1190
00:54:55,119 --> 00:55:00,960
all right not hearing pitchforks

1191
00:54:58,559 --> 00:55:01,680
um one of the things that we really want

1192
00:55:00,960 --> 00:55:05,200
to do

1193
00:55:01,680 --> 00:55:08,078
with this work where we can move beyond

1194
00:55:05,200 --> 00:55:08,720
2 or sort of the assumptions that oauth2

1195
00:55:08,079 --> 00:55:11,599
made

1196
00:55:08,720 --> 00:55:13,359
uh all those years ago is separating

1197
00:55:11,599 --> 00:55:15,119
this notion of a client instance from

1198
00:55:13,359 --> 00:55:16,960
the software that is

1199
00:55:15,119 --> 00:55:18,400
running that instance this is something

1200
00:55:16,960 --> 00:55:20,720
that oauth2 is

1201
00:55:18,400 --> 00:55:21,920
really if you look at the oauth 2.1 work

1202
00:55:20,720 --> 00:55:24,078
that um

1203
00:55:21,920 --> 00:55:25,520
is going on in the oauth working group

1204
00:55:24,079 --> 00:55:27,200
this is something that oauth2 is

1205
00:55:25,520 --> 00:55:27,599
continuing to struggle with and trying

1206
00:55:27,200 --> 00:55:29,759
to make

1207
00:55:27,599 --> 00:55:31,680
new definitions uh for there's now a

1208
00:55:29,760 --> 00:55:32,160
thing called a credentialed client which

1209
00:55:31,680 --> 00:55:34,558
isn't

1210
00:55:32,160 --> 00:55:35,680
in the original oauth2 draft but it's

1211
00:55:34,559 --> 00:55:38,559
trying to capture

1212
00:55:35,680 --> 00:55:39,759
a notion that oauth2 didn't didn't quite

1213
00:55:38,559 --> 00:55:42,640
get right

1214
00:55:39,760 --> 00:55:44,240
um in the current protocol the client

1215
00:55:42,640 --> 00:55:46,400
instance can send either

1216
00:55:44,240 --> 00:55:48,000
an instance identifier so this is

1217
00:55:46,400 --> 00:55:50,799
basically a reference like a client

1218
00:55:48,000 --> 00:55:52,720
id that the as can use to figure out you

1219
00:55:50,799 --> 00:55:54,400
know all of the information about it

1220
00:55:52,720 --> 00:55:56,799
or it can send a client information

1221
00:55:54,400 --> 00:55:59,760
block much like dynamic registration but

1222
00:55:56,799 --> 00:56:00,160
inlined um and there's there's some

1223
00:55:59,760 --> 00:56:03,839
other

1224
00:56:00,160 --> 00:56:03,839
hooks and tools and stuff like that

1225
00:56:04,480 --> 00:56:08,000
so far this seems to be a a pretty

1226
00:56:07,280 --> 00:56:11,359
robust

1227
00:56:08,000 --> 00:56:14,480
system to allow us to do this

1228
00:56:11,359 --> 00:56:17,598
so the questions are sort of

1229
00:56:14,480 --> 00:56:20,000
how it allows us to address these

1230
00:56:17,599 --> 00:56:21,680
you know wide set of use cases so we've

1231
00:56:20,000 --> 00:56:22,960
got static clients we've got ephemeral

1232
00:56:21,680 --> 00:56:24,879
clients we've got

1233
00:56:22,960 --> 00:56:26,079
mobile clients which is you know static

1234
00:56:24,880 --> 00:56:27,760
software over

1235
00:56:26,079 --> 00:56:29,280
long-term instances on a bunch of

1236
00:56:27,760 --> 00:56:32,319
devices versus

1237
00:56:29,280 --> 00:56:33,920
spas which is software on a bunch of

1238
00:56:32,319 --> 00:56:36,319
short-lived instances on a bunch of

1239
00:56:33,920 --> 00:56:38,160
different devices um

1240
00:56:36,319 --> 00:56:40,079
so you know there's lots of different

1241
00:56:38,160 --> 00:56:40,720
notions of what a client instance could

1242
00:56:40,079 --> 00:56:44,160
be

1243
00:56:40,720 --> 00:56:46,480
and how it can be represented um

1244
00:56:44,160 --> 00:56:48,000
which brings us to the first question of

1245
00:56:46,480 --> 00:56:50,720
since we're talking about individual

1246
00:56:48,000 --> 00:56:51,920
instances especially from the as side

1247
00:56:50,720 --> 00:56:54,959
we're going to want to rope those

1248
00:56:51,920 --> 00:56:56,480
together somehow now in oauth 2 dynamic

1249
00:56:54,960 --> 00:56:58,240
registration we have this thing called a

1250
00:56:56,480 --> 00:57:01,119
software statement

1251
00:56:58,240 --> 00:57:03,040
and the use of that concept goes way way

1252
00:57:01,119 --> 00:57:06,240
back

1253
00:57:03,040 --> 00:57:10,720
long before oauth 2 even

1254
00:57:06,240 --> 00:57:10,720
had a dynamic registration step

1255
00:57:10,839 --> 00:57:15,920
but it's also been uh one of the things

1256
00:57:14,000 --> 00:57:17,839
we discussed on the design team was that

1257
00:57:15,920 --> 00:57:20,480
one of the way that oauth 2 uses client

1258
00:57:17,839 --> 00:57:22,400
id is as a class identifier if you look

1259
00:57:20,480 --> 00:57:24,319
at mobile applications and spas

1260
00:57:22,400 --> 00:57:26,559
that's what the client id kind of does

1261
00:57:24,319 --> 00:57:29,599
in that case

1262
00:57:26,559 --> 00:57:30,640
but here we want to in ganap you know we

1263
00:57:29,599 --> 00:57:33,359
know we want to

1264
00:57:30,640 --> 00:57:35,759
separate this notion of identifying an

1265
00:57:33,359 --> 00:57:39,119
instance versus identifying a class

1266
00:57:35,760 --> 00:57:41,119
but are there other things that we can

1267
00:57:39,119 --> 00:57:42,880
we can do other mechanisms that we can

1268
00:57:41,119 --> 00:57:44,640
provide and can have to tie a bunch of

1269
00:57:42,880 --> 00:57:45,760
instances together and how are those

1270
00:57:44,640 --> 00:57:48,400
expressed

1271
00:57:45,760 --> 00:57:50,960
and um you know how are those carried by

1272
00:57:48,400 --> 00:57:54,000
the client and presented to the afs

1273
00:57:50,960 --> 00:57:56,960
the reason for tying these together

1274
00:57:54,000 --> 00:57:59,440
is so that you can set a bunch of

1275
00:57:56,960 --> 00:58:01,440
policies to a set of instances and say

1276
00:57:59,440 --> 00:58:03,599
that i want to treat all these the same

1277
00:58:01,440 --> 00:58:05,200
so if the user says for example like i

1278
00:58:03,599 --> 00:58:09,040
want to you know stop

1279
00:58:05,200 --> 00:58:12,558
using this spa then any outstanding

1280
00:58:09,040 --> 00:58:15,680
tokens on any instances of that spa

1281
00:58:12,559 --> 00:58:17,760
is probably what the user meant to to

1282
00:58:15,680 --> 00:58:19,040
get rid of or for example you're

1283
00:58:17,760 --> 00:58:20,880
managing it based on

1284
00:58:19,040 --> 00:58:23,119
software version or platform or stuff

1285
00:58:20,880 --> 00:58:24,960
like that you can see here

1286
00:58:23,119 --> 00:58:26,960
you know since we're starting with the

1287
00:58:24,960 --> 00:58:28,799
instance as sort of the core unit

1288
00:58:26,960 --> 00:58:30,559
we have a lot more flexibility and a lot

1289
00:58:28,799 --> 00:58:32,160
more power in

1290
00:58:30,559 --> 00:58:34,559
describing how we tie these things

1291
00:58:32,160 --> 00:58:34,558
together

1292
00:58:35,520 --> 00:58:38,880
so we we need to come up uh we've got a

1293
00:58:37,760 --> 00:58:41,440
couple of ways to do

1294
00:58:38,880 --> 00:58:43,119
things like this in uh in the core draft

1295
00:58:41,440 --> 00:58:45,920
now this is something that

1296
00:58:43,119 --> 00:58:47,440
we need to move uh forward and sort of

1297
00:58:45,920 --> 00:58:51,520
solidify

1298
00:58:47,440 --> 00:58:53,839
um but there's also additional cases

1299
00:58:51,520 --> 00:58:56,799
around sending information about the

1300
00:58:53,839 --> 00:58:59,839
client software and the client instance

1301
00:58:56,799 --> 00:59:01,839
um as part of the protocol so one of the

1302
00:58:59,839 --> 00:59:04,960
problems with

1303
00:59:01,839 --> 00:59:07,040
oauth dynamic registration is uh that

1304
00:59:04,960 --> 00:59:08,720
i can just show up and my display name

1305
00:59:07,040 --> 00:59:10,960
is google and i can just say

1306
00:59:08,720 --> 00:59:12,879
this is google docs i mean we saw an

1307
00:59:10,960 --> 00:59:16,130
attack like this

1308
00:59:12,880 --> 00:59:17,359
in the real world a few years ago and

1309
00:59:16,130 --> 00:59:20,880
[Music]

1310
00:59:17,359 --> 00:59:24,640
so if i could send uh you know a way

1311
00:59:20,880 --> 00:59:26,640
for the as to verify that the presenter

1312
00:59:24,640 --> 00:59:28,319
of this display information is allowed

1313
00:59:26,640 --> 00:59:29,359
to present that specific display

1314
00:59:28,319 --> 00:59:33,759
information

1315
00:59:29,359 --> 00:59:35,440
we could move that that trust forward

1316
00:59:33,760 --> 00:59:37,119
in the oauth world we've seen this done

1317
00:59:35,440 --> 00:59:39,200
with software statements through

1318
00:59:37,119 --> 00:59:41,119
third party pre-registration services

1319
00:59:39,200 --> 00:59:44,480
open banking uk has that

1320
00:59:41,119 --> 00:59:47,599
for example um moderna has that in

1321
00:59:44,480 --> 00:59:48,559
the mobile connect space um but there

1322
00:59:47,599 --> 00:59:51,119
are probably a lot of

1323
00:59:48,559 --> 00:59:53,280
other things we can do as well one of

1324
00:59:51,119 --> 00:59:56,160
the most promising ones that

1325
00:59:53,280 --> 00:59:56,480
i think we can bring forward and people

1326
00:59:56,160 --> 00:59:59,520
have

1327
00:59:56,480 --> 01:00:02,720
proprietary versions of this

1328
00:59:59,520 --> 01:00:04,880
out there already is a way to convey

1329
01:00:02,720 --> 01:00:07,598
runtime posture and attestation

1330
01:00:04,880 --> 01:00:08,960
so be able to say like you know hey this

1331
01:00:07,599 --> 01:00:10,960
is the software that i'm running and i

1332
01:00:08,960 --> 01:00:14,480
can tell you about the platform that i'm

1333
01:00:10,960 --> 01:00:17,119
running on and all of this other stuff

1334
01:00:14,480 --> 01:00:18,880
this is one of the biggest questions and

1335
01:00:17,119 --> 01:00:22,799
this is one of the three issues that

1336
01:00:18,880 --> 01:00:25,119
uh that i've tagged here with this is

1337
01:00:22,799 --> 01:00:26,799
we need to understand the difference

1338
01:00:25,119 --> 01:00:29,920
between information that

1339
01:00:26,799 --> 01:00:31,599
might be sent every single request so in

1340
01:00:29,920 --> 01:00:34,160
that case you know it might vary

1341
01:00:31,599 --> 01:00:35,680
over a specific instance over time

1342
01:00:34,160 --> 01:00:38,160
versus stuff that you would only send in

1343
01:00:35,680 --> 01:00:41,279
a first request so a registration type

1344
01:00:38,160 --> 01:00:42,960
um you know posture information

1345
01:00:41,280 --> 01:00:45,359
is there a difference between those do

1346
01:00:42,960 --> 01:00:48,720
we need ways to tie those together

1347
01:00:45,359 --> 01:00:53,200
and how does the protocol syntax enable

1348
01:00:48,720 --> 01:00:53,200
us to do this in a way that isn't

1349
01:00:54,839 --> 01:00:57,839
convoluted

1350
01:01:05,040 --> 01:01:10,000
i'm going to join the queue as myself

1351
01:01:08,160 --> 01:01:12,799
because nobody else is there and say

1352
01:01:10,000 --> 01:01:14,880
that software statements or the kind of

1353
01:01:12,799 --> 01:01:16,960
things that software statements are

1354
01:01:14,880 --> 01:01:18,319
uh you know authorials use for uh

1355
01:01:16,960 --> 01:01:20,319
federation

1356
01:01:18,319 --> 01:01:21,680
and um you know collating things

1357
01:01:20,319 --> 01:01:23,200
together

1358
01:01:21,680 --> 01:01:24,879
can be based on other things than just

1359
01:01:23,200 --> 01:01:27,118
posture and

1360
01:01:24,880 --> 01:01:28,079
and software it could be you know

1361
01:01:27,119 --> 01:01:30,000
whether the

1362
01:01:28,079 --> 01:01:31,200
organization running it has some certain

1363
01:01:30,000 --> 01:01:33,200
property right so

1364
01:01:31,200 --> 01:01:34,799
that kind of i think that kind of stuff

1365
01:01:33,200 --> 01:01:37,439
is important to preserve

1366
01:01:34,799 --> 01:01:39,759
not sure whether it's software or poster

1367
01:01:37,440 --> 01:01:41,520
related though

1368
01:01:39,760 --> 01:01:43,280
yeah no i agree there's there's a lot of

1369
01:01:41,520 --> 01:01:45,520
other dimensions that we've seen

1370
01:01:43,280 --> 01:01:46,880
um people try to cram in in the real

1371
01:01:45,520 --> 01:01:49,520
world uh so

1372
01:01:46,880 --> 01:01:51,440
if you look at the um you know some of

1373
01:01:49,520 --> 01:01:52,240
the stuff in the financial industry it's

1374
01:01:51,440 --> 01:01:54,400
not

1375
01:01:52,240 --> 01:01:55,439
it's not talking about the nature of the

1376
01:01:54,400 --> 01:01:56,880
software itself

1377
01:01:55,440 --> 01:01:58,480
it's actually talking about the nature

1378
01:01:56,880 --> 01:01:59,520
of the organization that's publishing

1379
01:01:58,480 --> 01:02:02,160
the software

1380
01:01:59,520 --> 01:02:04,000
they um and sort of the assertion that

1381
01:02:02,160 --> 01:02:06,000
you're sending is that i have the right

1382
01:02:04,000 --> 01:02:08,000
to even start talking to you

1383
01:02:06,000 --> 01:02:09,599
so that would be kind of a first a first

1384
01:02:08,000 --> 01:02:12,400
request kind of thing

1385
01:02:09,599 --> 01:02:14,079
uh you know this first introduction um

1386
01:02:12,400 --> 01:02:16,079
but we have also seen like i said it's

1387
01:02:14,079 --> 01:02:18,559
largely been in proprietary systems

1388
01:02:16,079 --> 01:02:20,240
um in my experience but we've also seen

1389
01:02:18,559 --> 01:02:21,920
people saying like

1390
01:02:20,240 --> 01:02:23,839
you know hey this is the device

1391
01:02:21,920 --> 01:02:25,119
signature of this application which i

1392
01:02:23,839 --> 01:02:28,558
can tie back to

1393
01:02:25,119 --> 01:02:28,880
our you know internal key to show you

1394
01:02:28,559 --> 01:02:32,319
that

1395
01:02:28,880 --> 01:02:35,520
i'm running unmodified software

1396
01:02:32,319 --> 01:02:37,520
for example um so you know there's this

1397
01:02:35,520 --> 01:02:39,759
whole bag of things and there's

1398
01:02:37,520 --> 01:02:41,359
there's a lot of feeling that this is

1399
01:02:39,760 --> 01:02:42,480
the kind of stuff that we want i think

1400
01:02:41,359 --> 01:02:43,440
that we need to start making this

1401
01:02:42,480 --> 01:02:46,559
concrete

1402
01:02:43,440 --> 01:02:48,000
and um and finding places for this kind

1403
01:02:46,559 --> 01:02:50,480
of stuff

1404
01:02:48,000 --> 01:02:52,400
so that i can app even if it doesn't

1405
01:02:50,480 --> 01:02:55,520
define all of these different

1406
01:02:52,400 --> 01:02:58,079
bits and pieces at least gives us places

1407
01:02:55,520 --> 01:02:59,920
uh to put all of these pieces uh in the

1408
01:02:58,079 --> 01:03:03,119
protocol this is something that really

1409
01:02:59,920 --> 01:03:06,160
needs to be brought to the fore

1410
01:03:03,119 --> 01:03:07,359
right and lucy made the point on on chat

1411
01:03:06,160 --> 01:03:11,038
that

1412
01:03:07,359 --> 01:03:13,839
as soon as you bring um

1413
01:03:11,039 --> 01:03:14,640
granting things into into the play then

1414
01:03:13,839 --> 01:03:18,078
you have to

1415
01:03:14,640 --> 01:03:21,520
think about revocation as well yes yes

1416
01:03:18,079 --> 01:03:22,880
absolutely yeah and revocation of

1417
01:03:21,520 --> 01:03:26,559
multiple instances

1418
01:03:22,880 --> 01:03:30,160
really important here um yeah

1419
01:03:26,559 --> 01:03:34,400
okay cool nobody else is standing up so

1420
01:03:30,160 --> 01:03:38,240
you know all right let's move on then um

1421
01:03:34,400 --> 01:03:40,319
and um so continuation

1422
01:03:38,240 --> 01:03:41,520
um so this is something um and

1423
01:03:40,319 --> 01:03:44,319
continuation is

1424
01:03:41,520 --> 01:03:45,759
is one of the terms we need to uh

1425
01:03:44,319 --> 01:03:49,038
potentially workshop

1426
01:03:45,760 --> 01:03:53,119
um but currently in the protocol this

1427
01:03:49,039 --> 01:03:54,880
is uh you know you you start the request

1428
01:03:53,119 --> 01:03:56,880
and then you potentially interact and

1429
01:03:54,880 --> 01:04:00,880
then then you do something

1430
01:03:56,880 --> 01:04:02,720
to further that request this includes

1431
01:04:00,880 --> 01:04:05,359
managing the request over sort of a long

1432
01:04:02,720 --> 01:04:08,480
period so think like

1433
01:04:05,359 --> 01:04:09,759
you know certain flavors of step up or

1434
01:04:08,480 --> 01:04:12,160
things like that

1435
01:04:09,760 --> 01:04:13,440
but it's also like hey i just got

1436
01:04:12,160 --> 01:04:16,879
something back from

1437
01:04:13,440 --> 01:04:17,520
the um you know from the front channel

1438
01:04:16,880 --> 01:04:19,280
redirect

1439
01:04:17,520 --> 01:04:21,839
give me the access token so the auth

1440
01:04:19,280 --> 01:04:25,520
code step of oauth 2.

1441
01:04:21,839 --> 01:04:29,119
uh right now the continuation process

1442
01:04:25,520 --> 01:04:31,359
in the draft it contains a mandatory url

1443
01:04:29,119 --> 01:04:32,720
um that's sent back to the client for

1444
01:04:31,359 --> 01:04:34,880
you know where it goes

1445
01:04:32,720 --> 01:04:36,078
sort of the the base of the api for it

1446
01:04:34,880 --> 01:04:38,559
to make its next

1447
01:04:36,079 --> 01:04:40,720
uh request and it currently has an

1448
01:04:38,559 --> 01:04:42,880
optional access token

1449
01:04:40,720 --> 01:04:43,759
for continuing and managing that request

1450
01:04:42,880 --> 01:04:46,160
over time

1451
01:04:43,760 --> 01:04:48,319
that access token um it's important to

1452
01:04:46,160 --> 01:04:51,118
point out is not a bearer token

1453
01:04:48,319 --> 01:04:52,000
it is defined as being bound to the same

1454
01:04:51,119 --> 01:04:54,240
key

1455
01:04:52,000 --> 01:04:55,200
that the client used to make the initial

1456
01:04:54,240 --> 01:04:58,479
request or

1457
01:04:55,200 --> 01:05:00,078
its subsequent rotation um and

1458
01:04:58,480 --> 01:05:02,400
key rotation is a whole other issue

1459
01:05:00,079 --> 01:05:06,160
we're not going to dive into that

1460
01:05:02,400 --> 01:05:09,280
tonight but in any event

1461
01:05:06,160 --> 01:05:12,160
the the questions here are uh you know

1462
01:05:09,280 --> 01:05:13,599
what is the value of having those

1463
01:05:12,160 --> 01:05:16,879
different options

1464
01:05:13,599 --> 01:05:19,200
um we could keep it as it is with an

1465
01:05:16,880 --> 01:05:20,880
optional access token and semantics

1466
01:05:19,200 --> 01:05:22,000
about what uh the client is supposed to

1467
01:05:20,880 --> 01:05:25,359
do when it's present

1468
01:05:22,000 --> 01:05:26,160
and when it's not um we could require

1469
01:05:25,359 --> 01:05:29,279
the token

1470
01:05:26,160 --> 01:05:30,558
to be mandatory and sort of define this

1471
01:05:29,280 --> 01:05:33,440
continuation api

1472
01:05:30,559 --> 01:05:36,240
in terms of that access token um or we

1473
01:05:33,440 --> 01:05:37,839
could remove the access token entirely

1474
01:05:36,240 --> 01:05:39,439
in which case we also have to ask

1475
01:05:37,839 --> 01:05:42,720
ourselves does the

1476
01:05:39,440 --> 01:05:44,240
continuation uri need to have

1477
01:05:42,720 --> 01:05:46,720
constraints on it in terms of its

1478
01:05:44,240 --> 01:05:50,240
uniqueness and whatnot

1479
01:05:46,720 --> 01:05:53,038
so the current design uh

1480
01:05:50,240 --> 01:05:53,520
reflects a uh sort of compromise of

1481
01:05:53,039 --> 01:05:56,559
different

1482
01:05:53,520 --> 01:05:58,160
design patterns um that the design team

1483
01:05:56,559 --> 01:06:00,720
came up with

1484
01:05:58,160 --> 01:06:02,480
and this is what they look like so the

1485
01:06:00,720 --> 01:06:05,759
first continuation response

1486
01:06:02,480 --> 01:06:09,599
you get an internal access token um

1487
01:06:05,760 --> 01:06:11,440
as long as well as a uri to use it at

1488
01:06:09,599 --> 01:06:12,640
in addition to there there are some

1489
01:06:11,440 --> 01:06:15,039
other flags that

1490
01:06:12,640 --> 01:06:16,319
um you can get as part of that but this

1491
01:06:15,039 --> 01:06:17,839
is giving the client all of the

1492
01:06:16,319 --> 01:06:19,200
information it needs in order to make

1493
01:06:17,839 --> 01:06:22,000
the next step

1494
01:06:19,200 --> 01:06:22,960
now this is um i will say that in

1495
01:06:22,000 --> 01:06:27,359
general

1496
01:06:22,960 --> 01:06:30,480
this pattern is very key to gnapp

1497
01:06:27,359 --> 01:06:32,000
in terms of the client starts everything

1498
01:06:30,480 --> 01:06:35,039
with one message

1499
01:06:32,000 --> 01:06:37,200
and then is told where to go next

1500
01:06:35,039 --> 01:06:38,559
and this is this is a really important

1501
01:06:37,200 --> 01:06:40,879
aspect to the design

1502
01:06:38,559 --> 01:06:42,079
in terms of its security and simplicity

1503
01:06:40,880 --> 01:06:43,599
of the clients

1504
01:06:42,079 --> 01:06:45,440
because it makes things much more

1505
01:06:43,599 --> 01:06:48,160
deterministic

1506
01:06:45,440 --> 01:06:50,640
so anyway in this case the client is

1507
01:06:48,160 --> 01:06:54,000
given the access token in the uri

1508
01:06:50,640 --> 01:06:55,920
in this case the client is just given

1509
01:06:54,000 --> 01:06:57,440
the uri with no access token

1510
01:06:55,920 --> 01:07:00,400
so when the client goes and makes its

1511
01:06:57,440 --> 01:07:03,359
follow-up call to this uri

1512
01:07:00,400 --> 01:07:04,559
it actually still has to present proof

1513
01:07:03,359 --> 01:07:06,000
of its keys

1514
01:07:04,559 --> 01:07:08,880
the keys that started with it but it

1515
01:07:06,000 --> 01:07:11,200
does not have an access token

1516
01:07:08,880 --> 01:07:12,400
in this we're actually using the exact

1517
01:07:11,200 --> 01:07:14,160
same this is the first

1518
01:07:12,400 --> 01:07:16,000
example we're using the exact same

1519
01:07:14,160 --> 01:07:17,680
syntax for

1520
01:07:16,000 --> 01:07:19,119
uh that's currently defined for an

1521
01:07:17,680 --> 01:07:20,960
access token that comes back for

1522
01:07:19,119 --> 01:07:23,280
accessing a resource server

1523
01:07:20,960 --> 01:07:24,880
externally so the value the key all of

1524
01:07:23,280 --> 01:07:28,000
those fields are allowed to

1525
01:07:24,880 --> 01:07:30,079
show up inside there um

1526
01:07:28,000 --> 01:07:32,559
it's it's the same access token kind of

1527
01:07:30,079 --> 01:07:32,559
structure

1528
01:07:32,799 --> 01:07:38,160
this is actually uh also currently

1529
01:07:35,680 --> 01:07:39,598
allowed by the current spec

1530
01:07:38,160 --> 01:07:42,960
where what you're doing is you're

1531
01:07:39,599 --> 01:07:46,480
getting back a continuation uri

1532
01:07:42,960 --> 01:07:48,319
but without additional stuff um

1533
01:07:46,480 --> 01:07:50,559
you know this is non this is a

1534
01:07:48,319 --> 01:07:53,680
non-unique continuation uri

1535
01:07:50,559 --> 01:07:54,480
and the idea here being that the as

1536
01:07:53,680 --> 01:07:57,520
would limit

1537
01:07:54,480 --> 01:08:00,319
a client instance to one ongoing uh

1538
01:07:57,520 --> 01:08:01,038
request whether it whether that's okay

1539
01:08:00,319 --> 01:08:03,839
or not

1540
01:08:01,039 --> 01:08:05,280
um you know this is this is a design

1541
01:08:03,839 --> 01:08:08,839
pattern that

1542
01:08:05,280 --> 01:08:12,640
is currently enabled by the current text

1543
01:08:08,839 --> 01:08:14,799
so a bit of comparison to

1544
01:08:12,640 --> 01:08:15,759
um say something in the queue do you

1545
01:08:14,799 --> 01:08:18,000
wanna

1546
01:08:15,760 --> 01:08:19,279
okay yeah go ahead i was just gonna go

1547
01:08:18,000 --> 01:08:22,479
uh between

1548
01:08:19,279 --> 01:08:24,799
the two approaches yeah sorry

1549
01:08:22,479 --> 01:08:25,599
i i wanted to make a comment about the

1550
01:08:24,799 --> 01:08:28,880
previous

1551
01:08:25,600 --> 01:08:31,920
issue so so let's let's begin with this

1552
01:08:28,880 --> 01:08:34,640
one instead of interrupting all right go

1553
01:08:31,920 --> 01:08:35,440
okay go ahead then okay so let's let's

1554
01:08:34,640 --> 01:08:39,199
do this so

1555
01:08:35,439 --> 01:08:41,120
um so this is a design decision that the

1556
01:08:39,198 --> 01:08:44,080
working group needs to make

1557
01:08:41,120 --> 01:08:45,839
so the access token approach um really

1558
01:08:44,080 --> 01:08:49,198
treats authorization as

1559
01:08:45,839 --> 01:08:51,359
an api um and this was one of the

1560
01:08:49,198 --> 01:08:52,238
the core design patterns of the ex-off

1561
01:08:51,359 --> 01:08:55,520
draft

1562
01:08:52,238 --> 01:08:57,759
that's gone into can app now

1563
01:08:55,520 --> 01:08:58,640
the use of an access token here treats

1564
01:08:57,759 --> 01:09:00,960
that api

1565
01:08:58,640 --> 01:09:02,960
the same way that we would be treating a

1566
01:09:00,960 --> 01:09:04,560
resource server api

1567
01:09:02,960 --> 01:09:05,759
and we're assuming that the client

1568
01:09:04,560 --> 01:09:07,440
already knows how to do this the key

1569
01:09:05,759 --> 01:09:11,359
binding mechanics are the same

1570
01:09:07,439 --> 01:09:14,399
and getting this inlined access token

1571
01:09:11,359 --> 01:09:17,920
to access a specific api

1572
01:09:14,399 --> 01:09:19,599
is a pattern that the oauth 2 world uses

1573
01:09:17,920 --> 01:09:21,120
with dynamic client registration

1574
01:09:19,600 --> 01:09:24,080
management um

1575
01:09:21,120 --> 01:09:24,719
so you're handed the uri to manage your

1576
01:09:24,080 --> 01:09:27,439
client

1577
01:09:24,719 --> 01:09:29,279
and the access token to do that in a

1578
01:09:27,439 --> 01:09:29,678
response without the client having to go

1579
01:09:29,279 --> 01:09:32,400
and

1580
01:09:29,679 --> 01:09:32,960
you know fetch a separate access token

1581
01:09:32,399 --> 01:09:35,679
you're just

1582
01:09:32,960 --> 01:09:37,679
you're given that sort of as a bundle

1583
01:09:35,679 --> 01:09:39,600
but it's a separable bundle

1584
01:09:37,679 --> 01:09:42,080
um and the importance of that

1585
01:09:39,600 --> 01:09:43,839
separability in this design pattern

1586
01:09:42,080 --> 01:09:45,839
is that allows lots of different

1587
01:09:43,839 --> 01:09:48,880
deployment patterns for the as

1588
01:09:45,839 --> 01:09:49,920
um you could even have a fully stateless

1589
01:09:48,880 --> 01:09:52,239
as

1590
01:09:49,920 --> 01:09:53,920
by packing everything that you need to

1591
01:09:52,238 --> 01:09:55,199
about the ongoing request into the

1592
01:09:53,920 --> 01:09:57,280
access token

1593
01:09:55,199 --> 01:09:58,879
now i will say you could actually also

1594
01:09:57,280 --> 01:10:01,360
do that by packing that

1595
01:09:58,880 --> 01:10:02,640
into the uri in which case the uri

1596
01:10:01,360 --> 01:10:07,040
effectively becomes

1597
01:10:02,640 --> 01:10:08,719
a a capability uri

1598
01:10:07,040 --> 01:10:10,960
there are trade-offs of doing that of

1599
01:10:08,719 --> 01:10:14,320
course

1600
01:10:10,960 --> 01:10:16,560
and this

1601
01:10:14,320 --> 01:10:18,000
both approaches i will say also allow us

1602
01:10:16,560 --> 01:10:21,440
to separate

1603
01:10:18,000 --> 01:10:22,080
um the sort of the ongoing request from

1604
01:10:21,440 --> 01:10:24,480
the

1605
01:10:22,080 --> 01:10:25,120
start of the request which allows us uh

1606
01:10:24,480 --> 01:10:27,120
for some

1607
01:10:25,120 --> 01:10:29,440
really interesting distributed

1608
01:10:27,120 --> 01:10:31,599
authorization server models

1609
01:10:29,440 --> 01:10:33,280
that a lot of people that i've been

1610
01:10:31,600 --> 01:10:34,640
talking to over the last couple of years

1611
01:10:33,280 --> 01:10:36,480
are really interested in bringing

1612
01:10:34,640 --> 01:10:38,320
forward

1613
01:10:36,480 --> 01:10:41,440
so benefits of a token-free approach is

1614
01:10:38,320 --> 01:10:43,519
that there's there's fewer moving parts

1615
01:10:41,440 --> 01:10:45,519
so if we never get back an access token

1616
01:10:43,520 --> 01:10:47,679
here

1617
01:10:45,520 --> 01:10:48,800
you are just given a url and you're

1618
01:10:47,679 --> 01:10:52,239
making a request

1619
01:10:48,800 --> 01:10:54,480
to that url and um and

1620
01:10:52,239 --> 01:10:55,280
not having to worry about presenting

1621
01:10:54,480 --> 01:10:58,639
this

1622
01:10:55,280 --> 01:11:01,519
additional artifact um

1623
01:10:58,640 --> 01:11:02,480
and this means we are defining different

1624
01:11:01,520 --> 01:11:05,199
behaviors

1625
01:11:02,480 --> 01:11:06,159
for talking to the auth server versus a

1626
01:11:05,199 --> 01:11:07,678
resource server

1627
01:11:06,159 --> 01:11:09,199
uh which means that the auth server

1628
01:11:07,679 --> 01:11:11,920
doesn't have to manage

1629
01:11:09,199 --> 01:11:13,759
uh special tokens for for limiting

1630
01:11:11,920 --> 01:11:16,400
access to sort of its own internal

1631
01:11:13,760 --> 01:11:16,400
processes

1632
01:11:16,480 --> 01:11:19,839
personally i don't see that as a benefit

1633
01:11:18,880 --> 01:11:22,159
but there

1634
01:11:19,840 --> 01:11:24,640
but it has been brought up as one of the

1635
01:11:22,159 --> 01:11:26,080
benefits of this approach

1636
01:11:24,640 --> 01:11:27,440
that's all i have on this issue do we

1637
01:11:26,080 --> 01:11:30,719
have anybody on the queue for this uh

1638
01:11:27,440 --> 01:11:31,580
before we jump back to yarns

1639
01:11:30,719 --> 01:11:34,640
so dick

1640
01:11:31,580 --> 01:11:34,640
[Applause]

1641
01:11:37,600 --> 01:11:42,880
so like my understanding is the client

1642
01:11:41,360 --> 01:11:43,599
is still going to authenticate in every

1643
01:11:42,880 --> 01:11:47,280
call to the

1644
01:11:43,600 --> 01:11:49,280
uh right it's not just getting an

1645
01:11:47,280 --> 01:11:50,320
uh access token it's presenting as a

1646
01:11:49,280 --> 01:11:52,719
bearer token

1647
01:11:50,320 --> 01:11:54,000
correct yeah that's correct it's a bound

1648
01:11:52,719 --> 01:11:58,400
access token using the same

1649
01:11:54,000 --> 01:11:58,400
semantics that bound access tokens use

1650
01:11:58,560 --> 01:12:08,800
uh well assuming that the client uses

1651
01:12:00,880 --> 01:12:10,800
bound access tokens and calling the rs

1652
01:12:08,800 --> 01:12:12,719
i mean yeah it's it's the it's the same

1653
01:12:10,800 --> 01:12:15,360
syntax and mechanisms

1654
01:12:12,719 --> 01:12:17,280
whether the client uses whether the rs

1655
01:12:15,360 --> 01:12:18,159
uses bound access tokens is a separate

1656
01:12:17,280 --> 01:12:20,880
question but it

1657
01:12:18,159 --> 01:12:21,679
it would be represented the same way and

1658
01:12:20,880 --> 01:12:24,560
use the

1659
01:12:21,679 --> 01:12:24,560
the same mechanics

1660
01:12:26,400 --> 01:12:29,839
uh yeah but in a

1661
01:12:31,360 --> 01:12:36,239
well not all the mechanisms for binding

1662
01:12:33,679 --> 01:12:39,600
a token go and have the access token

1663
01:12:36,239 --> 01:12:42,718
in the you know

1664
01:12:39,600 --> 01:12:44,880
they're not going to say gnap as the

1665
01:12:42,719 --> 01:12:46,640
type of token in authorization right

1666
01:12:44,880 --> 01:12:49,040
they say other things

1667
01:12:46,640 --> 01:12:51,840
it's not this it's not the same

1668
01:12:49,040 --> 01:12:51,840
mechanism

1669
01:12:52,400 --> 01:12:57,839
all of the current key key presentation

1670
01:12:55,440 --> 01:13:01,199
mechanisms have methods for

1671
01:12:57,840 --> 01:13:02,880
covering the access token in the request

1672
01:13:01,199 --> 01:13:04,320
now what i'm saying is the method you

1673
01:13:02,880 --> 01:13:06,880
have authorization

1674
01:13:04,320 --> 01:13:08,480
gnap and then the access token when

1675
01:13:06,880 --> 01:13:11,840
you're called here

1676
01:13:08,480 --> 01:13:13,759
yeah versus other ones other ones like

1677
01:13:11,840 --> 01:13:15,600
depop and things like that have a

1678
01:13:13,760 --> 01:13:18,880
different

1679
01:13:15,600 --> 01:13:21,920
uh token style

1680
01:13:18,880 --> 01:13:21,920
like they say depop

1681
01:13:22,000 --> 01:13:25,360
right so it's not the same as how you

1682
01:13:24,880 --> 01:13:33,840
call

1683
01:13:25,360 --> 01:13:35,440
a resource server

1684
01:13:33,840 --> 01:13:37,520
right and if you're calling if you're

1685
01:13:35,440 --> 01:13:40,320
just calling up with bear tokens then

1686
01:13:37,520 --> 01:13:41,760
you know this is a different mechanism

1687
01:13:40,320 --> 01:13:44,880
yeah the narrow tokens

1688
01:13:41,760 --> 01:13:44,880
would not be allowed here

1689
01:13:45,520 --> 01:13:50,880
right so that the the client isn't doing

1690
01:13:49,040 --> 01:13:52,239
the same thing and how it calls the rs

1691
01:13:50,880 --> 01:13:53,600
as it calls an ass that's what i'm

1692
01:13:52,239 --> 01:13:56,559
trying to say

1693
01:13:53,600 --> 01:13:57,840
yes it would be so one of the things

1694
01:13:56,560 --> 01:14:01,360
about

1695
01:13:57,840 --> 01:14:03,600
it would be the same so um

1696
01:14:01,360 --> 01:14:05,440
an rs with the bear token it's not going

1697
01:14:03,600 --> 01:14:07,280
to call the a up with the bear token so

1698
01:14:05,440 --> 01:14:10,799
it's not the same thing

1699
01:14:07,280 --> 01:14:11,679
right yes okay fine but that's only if

1700
01:14:10,800 --> 01:14:13,199
you're

1701
01:14:11,679 --> 01:14:16,000
but that's a different thing from saying

1702
01:14:13,199 --> 01:14:17,440
that presenting a bounce token using a

1703
01:14:16,000 --> 01:14:19,840
single

1704
01:14:17,440 --> 01:14:20,960
okay i think i might see the disconnect

1705
01:14:19,840 --> 01:14:22,640
here

1706
01:14:20,960 --> 01:14:25,040
what i mean by we're reusing the same

1707
01:14:22,640 --> 01:14:28,000
mechanisms is that a client presenting

1708
01:14:25,040 --> 01:14:28,480
a bound access token in a particular

1709
01:14:28,000 --> 01:14:30,800
method

1710
01:14:28,480 --> 01:14:33,678
to the as would use the exact same

1711
01:14:30,800 --> 01:14:35,600
method when talking to the rs

1712
01:14:33,679 --> 01:14:37,840
that's the part i'm reusing we're not

1713
01:14:35,600 --> 01:14:38,239
saying that the access tokens that you

1714
01:14:37,840 --> 01:14:40,880
get

1715
01:14:38,239 --> 01:14:42,000
for calling the rs have to be bound

1716
01:14:40,880 --> 01:14:46,239
that's that is a separate

1717
01:14:42,000 --> 01:14:46,960
discussion um but uh the ones talking to

1718
01:14:46,239 --> 01:14:49,519
the as

1719
01:14:46,960 --> 01:14:51,520
would have to be bound that would be a

1720
01:14:49,520 --> 01:14:56,159
um

1721
01:14:51,520 --> 01:14:57,840
a limitation here

1722
01:14:56,159 --> 01:14:59,679
they're not really bound the client's

1723
01:14:57,840 --> 01:15:01,280
authenticating and it knows which client

1724
01:14:59,679 --> 01:15:02,719
is and it happens to go and get the

1725
01:15:01,280 --> 01:15:03,440
actual program right i mean you have the

1726
01:15:02,719 --> 01:15:06,880
same functional

1727
01:15:03,440 --> 01:15:09,678
equipment whether you think yesterday

1728
01:15:06,880 --> 01:15:10,159
just to clarify or yeah i want to

1729
01:15:09,679 --> 01:15:13,600
clarify

1730
01:15:10,159 --> 01:15:17,759
are you arguing for or against either

1731
01:15:13,600 --> 01:15:19,360
option here i'm i'm

1732
01:15:17,760 --> 01:15:22,000
i'm disagreeing with the number of

1733
01:15:19,360 --> 01:15:24,880
statements that justin has made

1734
01:15:22,000 --> 01:15:28,320
and and and so i i don't think that the

1735
01:15:24,880 --> 01:15:31,679
the points are accurately reflected here

1736
01:15:28,320 --> 01:15:33,920
right but they i think yeah better

1737
01:15:31,679 --> 01:15:34,880
i don't know the point of arguing for or

1738
01:15:33,920 --> 01:15:37,120
against either

1739
01:15:34,880 --> 01:15:38,320
proposal i think the access token

1740
01:15:37,120 --> 01:15:40,640
doesn't give us

1741
01:15:38,320 --> 01:15:42,320
it's a convenience for the server this

1742
01:15:40,640 --> 01:15:45,040
if the server wants to put state they

1743
01:15:42,320 --> 01:15:47,840
can put the state into a url

1744
01:15:45,040 --> 01:15:49,679
and it's a bunch of extra overhead for a

1745
01:15:47,840 --> 01:15:51,040
client to figure this out and so i was

1746
01:15:49,679 --> 01:15:52,719
going at that it isn't something that

1747
01:15:51,040 --> 01:15:53,280
the client already has it's going to be

1748
01:15:52,719 --> 01:15:55,440
some

1749
01:15:53,280 --> 01:15:57,360
potential new thing for the client

1750
01:15:55,440 --> 01:16:00,000
unless a client happens to be calling an

1751
01:15:57,360 --> 01:16:01,599
rs that works the same way but i don't

1752
01:16:00,000 --> 01:16:05,520
even think it's the same way between how

1753
01:16:01,600 --> 01:16:05,520
you call an rs and when you call an as

1754
01:16:05,679 --> 01:16:09,440
so the client would be using the same

1755
01:16:07,520 --> 01:16:11,040
key presentation mechanism when making

1756
01:16:09,440 --> 01:16:14,320
its initial call it would just be doing

1757
01:16:11,040 --> 01:16:16,239
so without an access token

1758
01:16:14,320 --> 01:16:17,360
so all of the key presentation

1759
01:16:16,239 --> 01:16:19,599
mechanisms

1760
01:16:17,360 --> 01:16:20,400
would are functionally the same but they

1761
01:16:19,600 --> 01:16:23,679
also have a

1762
01:16:20,400 --> 01:16:27,759
place to slot the access token so

1763
01:16:23,679 --> 01:16:27,760
aaron is up on the queue

1764
01:16:29,440 --> 01:16:34,159
yeah um i just want to turn in here and

1765
01:16:32,960 --> 01:16:36,560
say that

1766
01:16:34,159 --> 01:16:38,400
between these two options i'm hesitant

1767
01:16:36,560 --> 01:16:38,800
to recommend an option that puts more

1768
01:16:38,400 --> 01:16:42,639
things

1769
01:16:38,800 --> 01:16:45,360
into urls it's because we've seen

1770
01:16:42,640 --> 01:16:46,480
many reasons why putting things in urls

1771
01:16:45,360 --> 01:16:47,839
causes problems

1772
01:16:46,480 --> 01:16:49,759
some of those we are currently dealing

1773
01:16:47,840 --> 01:16:52,719
with in the oauth group

1774
01:16:49,760 --> 01:16:54,960
and trying to undo those um so i would

1775
01:16:52,719 --> 01:16:58,159
generally prefer

1776
01:16:54,960 --> 01:17:00,480
putting things that are effectively

1777
01:16:58,159 --> 01:17:02,000
bearer tokens or secrets or things they

1778
01:17:00,480 --> 01:17:04,159
may contain

1779
01:17:02,000 --> 01:17:05,360
encoded data that the client may not

1780
01:17:04,159 --> 01:17:07,920
even be aware of

1781
01:17:05,360 --> 01:17:09,360
keeping those out of the url yeah like

1782
01:17:07,920 --> 01:17:12,239
justin to put up this screen

1783
01:17:09,360 --> 01:17:14,000
if you imagine that thing on the end

1784
01:17:12,239 --> 01:17:16,718
might end up containing

1785
01:17:14,000 --> 01:17:17,679
some sort of encoded data the client's

1786
01:17:16,719 --> 01:17:19,679
not aware of

1787
01:17:17,679 --> 01:17:21,199
where it's a json web token for example

1788
01:17:19,679 --> 01:17:23,760
that contains data then that

1789
01:17:21,199 --> 01:17:25,199
is now being sent in a url which then

1790
01:17:23,760 --> 01:17:28,080
has all the possibilities of

1791
01:17:25,199 --> 01:17:29,199
of being exposed or logged in all the

1792
01:17:28,080 --> 01:17:30,400
reasons that we're trying to avoid

1793
01:17:29,199 --> 01:17:33,440
putting things in urls

1794
01:17:30,400 --> 01:17:35,280
now so that's that's my take on it i'd

1795
01:17:33,440 --> 01:17:45,280
rather avoid

1796
01:17:35,280 --> 01:17:48,320
cramming more things than urls

1797
01:17:45,280 --> 01:17:52,080
all right um

1798
01:17:48,320 --> 01:17:54,639
anyone else anyone else

1799
01:17:52,080 --> 01:17:56,000
on this issue uh jaron did you want to

1800
01:17:54,640 --> 01:17:58,560
walk back to the

1801
01:17:56,000 --> 01:18:00,159
previous issue and then we have to maybe

1802
01:17:58,560 --> 01:18:02,960
close yeah

1803
01:18:00,159 --> 01:18:05,440
which part i think this this also

1804
01:18:02,960 --> 01:18:07,280
applies to this one because this is a

1805
01:18:05,440 --> 01:18:10,320
process comment

1806
01:18:07,280 --> 01:18:13,840
so my request to justin is

1807
01:18:10,320 --> 01:18:17,920
to conclude each

1808
01:18:13,840 --> 01:18:20,080
issue with whatever it is so for the

1809
01:18:17,920 --> 01:18:23,520
case of client information

1810
01:18:20,080 --> 01:18:27,280
are you asking the working group to

1811
01:18:23,520 --> 01:18:30,239
for example and use cases

1812
01:18:27,280 --> 01:18:30,480
are you asking people to comment on on

1813
01:18:30,239 --> 01:18:35,199
an

1814
01:18:30,480 --> 01:18:38,080
issue and if so which issue it is

1815
01:18:35,199 --> 01:18:40,400
are you saying the editor team will come

1816
01:18:38,080 --> 01:18:41,600
up with a proposal and put it to the

1817
01:18:40,400 --> 01:18:45,199
list

1818
01:18:41,600 --> 01:18:48,960
whatever it is let us know

1819
01:18:45,199 --> 01:18:50,960
okay thank you that's that's great um

1820
01:18:48,960 --> 01:18:52,880
so for the for the client information i

1821
01:18:50,960 --> 01:18:56,239
think we've got a a reasonable

1822
01:18:52,880 --> 01:18:57,679
um a reasonable first step on the first

1823
01:18:56,239 --> 01:19:00,639
issue which was terminology

1824
01:18:57,679 --> 01:19:00,960
um for the client information we've got

1825
01:19:00,640 --> 01:19:03,600
uh

1826
01:19:00,960 --> 01:19:04,719
three issues here uh one of the issues i

1827
01:19:03,600 --> 01:19:08,000
believe it's 46

1828
01:19:04,719 --> 01:19:09,520
is more of you know just sort of

1829
01:19:08,000 --> 01:19:11,520
contextual information and there are a

1830
01:19:09,520 --> 01:19:12,719
lot of those uh that came from the

1831
01:19:11,520 --> 01:19:14,960
editorial notes

1832
01:19:12,719 --> 01:19:15,920
that uh i think the editorial team can

1833
01:19:14,960 --> 01:19:17,760
kind of

1834
01:19:15,920 --> 01:19:19,520
um we can just kind of scrape through

1835
01:19:17,760 --> 01:19:21,120
the issues list and say like yeah we

1836
01:19:19,520 --> 01:19:24,080
believe this is just commentary and we

1837
01:19:21,120 --> 01:19:27,920
can just close these and move on

1838
01:19:24,080 --> 01:19:33,199
for the other two there's the question

1839
01:19:27,920 --> 01:19:36,400
of device posture

1840
01:19:33,199 --> 01:19:37,759
which we would like to see i think we as

1841
01:19:36,400 --> 01:19:40,480
a group need to see

1842
01:19:37,760 --> 01:19:41,840
concrete examples of this is the

1843
01:19:40,480 --> 01:19:45,519
information that i'm sending

1844
01:19:41,840 --> 01:19:48,640
so far we've seen a lot of uh sort of

1845
01:19:45,520 --> 01:19:50,239
notional examples of oh i want to send

1846
01:19:48,640 --> 01:19:53,360
my mdm signature

1847
01:19:50,239 --> 01:19:54,799
but let's take a look on what that that

1848
01:19:53,360 --> 01:19:56,400
information actually looks like

1849
01:19:54,800 --> 01:19:59,520
and start answering this question of

1850
01:19:56,400 --> 01:20:03,440
whether or not you know this is a

1851
01:19:59,520 --> 01:20:05,920
like a registration request or a runtime

1852
01:20:03,440 --> 01:20:07,040
request type of attestation i think we

1853
01:20:05,920 --> 01:20:10,080
need to get concrete

1854
01:20:07,040 --> 01:20:14,639
here uh with this kind of stuff and

1855
01:20:10,080 --> 01:20:19,280
um so the the editors do not have

1856
01:20:14,639 --> 01:20:22,400
specific uh direction for this right now

1857
01:20:19,280 --> 01:20:24,880
but we would like feedback on

1858
01:20:22,400 --> 01:20:27,920
on these issues in particular to help

1859
01:20:24,880 --> 01:20:30,560
sort of hone this client model

1860
01:20:27,920 --> 01:20:33,520
and how this gets presented especially

1861
01:20:30,560 --> 01:20:36,400
in the initial request

1862
01:20:33,520 --> 01:20:37,840
this will have follow follow-on um

1863
01:20:36,400 --> 01:20:41,040
effects to

1864
01:20:37,840 --> 01:20:42,480
a number of other uh issues that have

1865
01:20:41,040 --> 01:20:45,199
been opened in the protocol

1866
01:20:42,480 --> 01:20:46,718
um but i think that once we really start

1867
01:20:45,199 --> 01:20:48,719
to

1868
01:20:46,719 --> 01:20:49,760
make this notion of what the client

1869
01:20:48,719 --> 01:20:53,600
instance is

1870
01:20:49,760 --> 01:20:56,400
really concrete and sort of what this

1871
01:20:53,600 --> 01:20:57,040
request structure uh can look like we

1872
01:20:56,400 --> 01:20:59,679
can

1873
01:20:57,040 --> 01:21:00,639
we can start to solidify our decisions

1874
01:20:59,679 --> 01:21:02,480
on these others so

1875
01:21:00,639 --> 01:21:04,560
yes please comment on the issues please

1876
01:21:02,480 --> 01:21:07,360
give us um

1877
01:21:04,560 --> 01:21:08,480
real examples really use cases of this

1878
01:21:07,360 --> 01:21:11,839
kind of stuff

1879
01:21:08,480 --> 01:21:14,638
if we don't get any maybe we just don't

1880
01:21:11,840 --> 01:21:15,520
leave a spot for it right now and we can

1881
01:21:14,639 --> 01:21:17,440
kind of

1882
01:21:15,520 --> 01:21:19,920
close that and move on until we get

1883
01:21:17,440 --> 01:21:23,040
something concrete

1884
01:21:19,920 --> 01:21:23,679
for continuation uh issue 67 i would

1885
01:21:23,040 --> 01:21:25,280
like

1886
01:21:23,679 --> 01:21:27,199
um you know the editors would like to

1887
01:21:25,280 --> 01:21:30,239
hear from the group what

1888
01:21:27,199 --> 01:21:32,080
uh what direction um

1889
01:21:30,239 --> 01:21:33,519
we should take like should we make the

1890
01:21:32,080 --> 01:21:36,960
token mandatory should

1891
01:21:33,520 --> 01:21:38,880
we remove the token um like and

1892
01:21:36,960 --> 01:21:40,080
whether that url needs to be required to

1893
01:21:38,880 --> 01:21:42,239
be unique

1894
01:21:40,080 --> 01:21:43,920
um you know i have a stance on it i

1895
01:21:42,239 --> 01:21:47,759
think the token should be mandatory

1896
01:21:43,920 --> 01:21:51,280
um uh you know uh aaron stated if i'm

1897
01:21:47,760 --> 01:21:53,440
uh summarizing um

1898
01:21:51,280 --> 01:21:55,040
uh correctly i believe uh he's in that

1899
01:21:53,440 --> 01:21:56,239
camp as well we would like to hear from

1900
01:21:55,040 --> 01:21:58,719
the rest of the working group

1901
01:21:56,239 --> 01:22:00,400
uh what direction this should take i

1902
01:21:58,719 --> 01:22:02,880
don't think anybody's particularly happy

1903
01:22:00,400 --> 01:22:06,799
with it being optional

1904
01:22:02,880 --> 01:22:11,120
i got uh dave about the queue

1905
01:22:06,800 --> 01:22:14,480
so yeah okay yeah hi can you hear me

1906
01:22:11,120 --> 01:22:16,239
yes yes yeah so um look i i

1907
01:22:14,480 --> 01:22:18,000
you know i know you don't want to always

1908
01:22:16,239 --> 01:22:19,360
compete or too but

1909
01:22:18,000 --> 01:22:21,920
you know with the various extensions

1910
01:22:19,360 --> 01:22:23,120
there are two essentially you know

1911
01:22:21,920 --> 01:22:25,280
there's been a bit of background

1912
01:22:23,120 --> 01:22:28,239
forwards some have required kind of

1913
01:22:25,280 --> 01:22:30,080
client authentication um at the at the

1914
01:22:28,239 --> 01:22:31,678
ais and just repeating the client the

1915
01:22:30,080 --> 01:22:33,440
same as a token endpoint and

1916
01:22:31,679 --> 01:22:35,199
others have gone the access token

1917
01:22:33,440 --> 01:22:37,360
approach i suppose

1918
01:22:35,199 --> 01:22:39,360
my my my input would be that i think we

1919
01:22:37,360 --> 01:22:42,000
should try and avoid the optionality

1920
01:22:39,360 --> 01:22:44,239
and it seems to me the benefit of

1921
01:22:42,000 --> 01:22:47,280
potentially having distributed

1922
01:22:44,239 --> 01:22:49,280
um as you know would lean very heavily

1923
01:22:47,280 --> 01:22:49,679
in favor of the access token approach

1924
01:22:49,280 --> 01:22:51,199
but

1925
01:22:49,679 --> 01:22:53,360
my request would be that whatever one we

1926
01:22:51,199 --> 01:22:54,638
agree on there is just one way

1927
01:22:53,360 --> 01:22:56,159
because and i think that's maybe a

1928
01:22:54,639 --> 01:22:57,760
general thing in the draft where

1929
01:22:56,159 --> 01:22:59,759
possible i really think we need to try

1930
01:22:57,760 --> 01:23:02,000
and cut down the optionality because

1931
01:22:59,760 --> 01:23:02,880
it is just going to make it a nightmare

1932
01:23:02,000 --> 01:23:07,040
um with

1933
01:23:02,880 --> 01:23:10,239
the current amount of optionality there

1934
01:23:07,040 --> 01:23:12,800
yep all right thank you and uh

1935
01:23:10,239 --> 01:23:13,519
to be clear what we're talking about and

1936
01:23:12,800 --> 01:23:15,199
this

1937
01:23:13,520 --> 01:23:16,800
this was in the previous thing is that

1938
01:23:15,199 --> 01:23:19,120
uh bearer tokens

1939
01:23:16,800 --> 01:23:20,000
would be forbidden as an option here

1940
01:23:19,120 --> 01:23:22,559
like the client

1941
01:23:20,000 --> 01:23:23,280
is always going to be presenting its key

1942
01:23:22,560 --> 01:23:26,400
which means

1943
01:23:23,280 --> 01:23:28,239
in this context it is um in

1944
01:23:26,400 --> 01:23:29,440
most cases going to be authenticating to

1945
01:23:28,239 --> 01:23:34,320
the as

1946
01:23:29,440 --> 01:23:38,000
um although we have to keep in mind the

1947
01:23:34,320 --> 01:23:41,280
dynamic um the dynamic and ephemeral

1948
01:23:38,000 --> 01:23:43,120
use cases we have where authentication

1949
01:23:41,280 --> 01:23:44,559
really just means it's the same key that

1950
01:23:43,120 --> 01:23:49,840
i saw the first time

1951
01:23:44,560 --> 01:23:49,840
you know as part of the first request

1952
01:23:52,080 --> 01:23:56,239
all right so uh please provide feedback

1953
01:23:55,679 --> 01:23:59,360
of that

1954
01:23:56,239 --> 01:24:00,159
on the issue and hopefully we can close

1955
01:23:59,360 --> 01:24:01,839
on

1956
01:24:00,159 --> 01:24:04,320
uh on a direction for that in the

1957
01:24:01,840 --> 01:24:05,840
editors we'll bring that to the list

1958
01:24:04,320 --> 01:24:07,360
for consensus i'm here right now i'm

1959
01:24:05,840 --> 01:24:10,719
hearing a a as

1960
01:24:07,360 --> 01:24:10,719
you know a slight um

1961
01:24:10,880 --> 01:24:17,840
tilt towards the current

1962
01:24:14,159 --> 01:24:21,519
uh text but we'll we'll see

1963
01:24:17,840 --> 01:24:24,400
where we are so should we

1964
01:24:21,520 --> 01:24:26,560
move on to the next issue sounds good to

1965
01:24:24,400 --> 01:24:26,559
me

1966
01:24:26,639 --> 01:24:34,800
all right interaction bundles and um

1967
01:24:31,520 --> 01:24:37,760
so the current document um it gives you

1968
01:24:34,800 --> 01:24:38,639
multiple interaction methods for

1969
01:24:37,760 --> 01:24:41,280
starting

1970
01:24:38,639 --> 01:24:43,360
interaction and one post interaction

1971
01:24:41,280 --> 01:24:46,400
method they're all kind of

1972
01:24:43,360 --> 01:24:47,839
lumped in there and i will note in case

1973
01:24:46,400 --> 01:24:51,519
people didn't get to see this

1974
01:24:47,840 --> 01:24:53,520
um so just before um

1975
01:24:51,520 --> 01:24:55,520
i logged onto this call i saw that aaron

1976
01:24:53,520 --> 01:24:57,199
actually made a really good comment to

1977
01:24:55,520 --> 01:24:58,480
that so aaron once i'm

1978
01:24:57,199 --> 01:25:00,400
done presenting kind of the current

1979
01:24:58,480 --> 01:25:01,839
state if you could

1980
01:25:00,400 --> 01:25:04,719
jump on the queue to talk about that

1981
01:25:01,840 --> 01:25:04,719
that would be wonderful

1982
01:25:04,800 --> 01:25:08,400
so the thing about these interaction

1983
01:25:06,800 --> 01:25:11,440
bundles is that it gives you

1984
01:25:08,400 --> 01:25:13,040
um well in the current document you've

1985
01:25:11,440 --> 01:25:14,080
got a few different ways to get the user

1986
01:25:13,040 --> 01:25:15,760
over there

1987
01:25:14,080 --> 01:25:17,679
that the client can choose from but only

1988
01:25:15,760 --> 01:25:20,960
one thing that they're allowed to do

1989
01:25:17,679 --> 01:25:23,440
post interaction and

1990
01:25:20,960 --> 01:25:25,199
there are some proposed use cases that

1991
01:25:23,440 --> 01:25:28,320
people would like to be able to do

1992
01:25:25,199 --> 01:25:31,120
that this doesn't allow expression of

1993
01:25:28,320 --> 01:25:32,719
so uh alternative one is would be to

1994
01:25:31,120 --> 01:25:36,639
couple the post interaction

1995
01:25:32,719 --> 01:25:39,360
with each uh single interaction method

1996
01:25:36,639 --> 01:25:40,159
an alternative two is to allow multiple

1997
01:25:39,360 --> 01:25:43,759
interaction

1998
01:25:40,159 --> 01:25:46,080
bundles so to get concrete

1999
01:25:43,760 --> 01:25:48,639
what this looks like right now is that

2000
01:25:46,080 --> 01:25:51,440
the redirect and user code portions

2001
01:25:48,639 --> 01:25:52,080
say how you get the user over there and

2002
01:25:51,440 --> 01:25:55,440
then

2003
01:25:52,080 --> 01:25:56,320
the uh the callback is uh the post

2004
01:25:55,440 --> 01:25:58,879
interaction

2005
01:25:56,320 --> 01:25:59,759
um you know again these might not all be

2006
01:25:58,880 --> 01:26:02,960
the best names

2007
01:25:59,760 --> 01:26:04,480
uh for each of these fields we'll bike

2008
01:26:02,960 --> 01:26:07,760
show that later

2009
01:26:04,480 --> 01:26:10,799
callback is the post interaction

2010
01:26:07,760 --> 01:26:11,600
action set so the first uh proposed

2011
01:26:10,800 --> 01:26:14,719
alternative

2012
01:26:11,600 --> 01:26:17,760
is to bundle the post interaction

2013
01:26:14,719 --> 01:26:20,480
with the method of getting over there so

2014
01:26:17,760 --> 01:26:22,239
this so what this is saying is that um

2015
01:26:20,480 --> 01:26:24,239
either i can uh

2016
01:26:22,239 --> 01:26:25,280
send you to an arbitrary url or give you

2017
01:26:24,239 --> 01:26:28,320
a user code but

2018
01:26:25,280 --> 01:26:30,400
in both cases however that works

2019
01:26:28,320 --> 01:26:31,440
send a call back to this url that i'm

2020
01:26:30,400 --> 01:26:35,040
going to be listening on

2021
01:26:31,440 --> 01:26:38,080
in a in a browser redirect um

2022
01:26:35,040 --> 01:26:41,679
alternative uh one is to say okay

2023
01:26:38,080 --> 01:26:44,639
for uh the arbitrary url

2024
01:26:41,679 --> 01:26:46,400
i want you to call back uh to this url

2025
01:26:44,639 --> 01:26:48,960
so this is closer to the

2026
01:26:46,400 --> 01:26:50,000
uh the oauth 2 grant type where

2027
01:26:48,960 --> 01:26:53,280
everything is kind of

2028
01:26:50,000 --> 01:26:54,000
um tied together um and i'll also point

2029
01:26:53,280 --> 01:26:57,920
out that this

2030
01:26:54,000 --> 01:26:58,320
is how early versions of the xyz project

2031
01:26:57,920 --> 01:27:01,600
uh

2032
01:26:58,320 --> 01:27:03,360
implemented this um before we move to

2033
01:27:01,600 --> 01:27:05,920
uh something that's more like what's in

2034
01:27:03,360 --> 01:27:09,280
the current draft

2035
01:27:05,920 --> 01:27:13,120
the second alternative um

2036
01:27:09,280 --> 01:27:18,639
is to optionally allow for

2037
01:27:13,120 --> 01:27:20,719
having uh bundles so um

2038
01:27:18,639 --> 01:27:22,800
you know just throwing uh so just

2039
01:27:20,719 --> 01:27:24,560
pulling some names out of the air

2040
01:27:22,800 --> 01:27:26,080
we could say that each of these

2041
01:27:24,560 --> 01:27:27,600
individual pieces would be an

2042
01:27:26,080 --> 01:27:29,760
interaction method

2043
01:27:27,600 --> 01:27:31,120
and then you combine those into an

2044
01:27:29,760 --> 01:27:34,080
interaction mode

2045
01:27:31,120 --> 01:27:36,000
which means that uh if you are doing a

2046
01:27:34,080 --> 01:27:40,000
single request

2047
01:27:36,000 --> 01:27:43,120
so just like a single host interaction

2048
01:27:40,000 --> 01:27:44,639
uh option you would bundle that into a

2049
01:27:43,120 --> 01:27:47,920
single mode and you would send

2050
01:27:44,639 --> 01:27:50,239
that as the interact value if you have

2051
01:27:47,920 --> 01:27:52,000
multiple bundles you would explicitly

2052
01:27:50,239 --> 01:27:55,440
separate them into different objects and

2053
01:27:52,000 --> 01:27:58,480
pass all of that as an array

2054
01:27:55,440 --> 01:27:59,199
and each of these individual pieces in

2055
01:27:58,480 --> 01:28:01,919
that array

2056
01:27:59,199 --> 01:28:02,559
is going to be the same syntax that the

2057
01:28:01,920 --> 01:28:04,639
uh

2058
01:28:02,560 --> 01:28:06,800
that a single object would be this

2059
01:28:04,639 --> 01:28:09,920
follows similar patterns that we've had

2060
01:28:06,800 --> 01:28:12,639
uh elsewhere in the protocol um

2061
01:28:09,920 --> 01:28:13,360
aaron uh did you want to talk about your

2062
01:28:12,639 --> 01:28:17,120
um

2063
01:28:13,360 --> 01:28:19,599
you know your your start finish uh idea

2064
01:28:17,120 --> 01:28:21,599
because i think that's got some legs all

2065
01:28:19,600 --> 01:28:22,719
right go ahead um

2066
01:28:21,600 --> 01:28:24,239
sure yeah it took me a second to

2067
01:28:22,719 --> 01:28:24,719
remember what you were talking about

2068
01:28:24,239 --> 01:28:29,040
because i

2069
01:28:24,719 --> 01:28:31,760
went and filed a whole bunch of issues

2070
01:28:29,040 --> 01:28:33,360
which now i'm going to uh go ahead and

2071
01:28:31,760 --> 01:28:35,360
summarize and post as a

2072
01:28:33,360 --> 01:28:37,759
threaded discussion as a discussion on

2073
01:28:35,360 --> 01:28:40,799
the mailing list linking to these issues

2074
01:28:37,760 --> 01:28:43,840
um but yes the

2075
01:28:40,800 --> 01:28:45,920
uh alternative three i guess

2076
01:28:43,840 --> 01:28:47,199
the way i was thinking about it was that

2077
01:28:45,920 --> 01:28:50,320
this interaction there

2078
01:28:47,199 --> 01:28:52,879
are there's a start and a finish

2079
01:28:50,320 --> 01:28:53,840
operation the the client's saying here's

2080
01:28:52,880 --> 01:28:56,000
different ways i can

2081
01:28:53,840 --> 01:28:58,080
start the flow and here's different ways

2082
01:28:56,000 --> 01:28:59,840
i can handle the end of the flow

2083
01:28:58,080 --> 01:29:01,199
and things that go in the start of the

2084
01:28:59,840 --> 01:29:04,000
flow are

2085
01:29:01,199 --> 01:29:04,960
whether the client can redirect the user

2086
01:29:04,000 --> 01:29:06,560
in a browser

2087
01:29:04,960 --> 01:29:08,480
whether it can redirect the user to an

2088
01:29:06,560 --> 01:29:10,159
app whether it can show a code to the

2089
01:29:08,480 --> 01:29:13,280
user or things like that

2090
01:29:10,159 --> 01:29:16,400
and then how it can complete the flow

2091
01:29:13,280 --> 01:29:20,559
is uh i think we only have

2092
01:29:16,400 --> 01:29:24,159
redra uh callback defined right now so

2093
01:29:20,560 --> 01:29:25,760
so yeah call back either as a as a in

2094
01:29:24,159 --> 01:29:27,360
browser redirect or as a post request

2095
01:29:25,760 --> 01:29:29,920
back to that callback

2096
01:29:27,360 --> 01:29:31,759
so and the third option which i don't

2097
01:29:29,920 --> 01:29:34,320
think is in your slide here but is the

2098
01:29:31,760 --> 01:29:35,360
ui locales hint to localize the

2099
01:29:34,320 --> 01:29:38,320
interface which is a

2100
01:29:35,360 --> 01:29:39,599
really good suggestion um and that's a

2101
01:29:38,320 --> 01:29:42,719
completely different class

2102
01:29:39,600 --> 01:29:44,000
of sort of thing it's thriving compared

2103
01:29:42,719 --> 01:29:45,520
to how it's going to start the flow and

2104
01:29:44,000 --> 01:29:48,560
how it's going to finish the flow

2105
01:29:45,520 --> 01:29:48,960
so um i guess you probably can't pull up

2106
01:29:48,560 --> 01:29:52,080
my

2107
01:29:48,960 --> 01:29:57,520
my little sample gaitheon

2108
01:29:52,080 --> 01:30:00,800
but um the essentially what i had done

2109
01:29:57,520 --> 01:30:03,440
uh suggested

2110
01:30:00,800 --> 01:30:04,480
adding top level properties for start

2111
01:30:03,440 --> 01:30:08,080
and finish

2112
01:30:04,480 --> 01:30:11,839
which are arrays of the

2113
01:30:08,080 --> 01:30:13,199
um the different ways

2114
01:30:11,840 --> 01:30:16,480
that that each of those things could

2115
01:30:13,199 --> 01:30:21,839
happen uh it's 122.

2116
01:30:16,480 --> 01:30:21,839
oh 122. thank you yeah

2117
01:30:22,719 --> 01:30:25,360
oh thank you

2118
01:30:26,159 --> 01:30:31,199
so the uh

2119
01:30:29,280 --> 01:30:32,480
yeah so the idea would be taking all the

2120
01:30:31,199 --> 01:30:34,159
existing values that are in there

2121
01:30:32,480 --> 01:30:36,559
that are currently described but then

2122
01:30:34,159 --> 01:30:38,239
grouping them so that

2123
01:30:36,560 --> 01:30:41,040
it's like a lot more clear about what

2124
01:30:38,239 --> 01:30:41,040
each thing is doing

2125
01:30:46,880 --> 01:30:50,400
and so i think uh going along the lines

2126
01:30:49,440 --> 01:30:52,638
of

2127
01:30:50,400 --> 01:30:54,480
this and the proposed second alternative

2128
01:30:52,639 --> 01:30:57,520
would be that if you had

2129
01:30:54,480 --> 01:30:57,919
um different ways you wanted to bundle

2130
01:30:57,520 --> 01:31:00,400
this

2131
01:30:57,920 --> 01:31:02,400
then you would uh allow the client to

2132
01:31:00,400 --> 01:31:04,000
send an array of these

2133
01:31:02,400 --> 01:31:05,759
and then of course we can figure out

2134
01:31:04,000 --> 01:31:07,280
what the response looks like and how to

2135
01:31:05,760 --> 01:31:08,639
tie them together and

2136
01:31:07,280 --> 01:31:10,960
you know stuff like that if we go down

2137
01:31:08,639 --> 01:31:14,560
that route um but

2138
01:31:10,960 --> 01:31:17,840
uh but yeah this th

2139
01:31:14,560 --> 01:31:17,840
this is all tied together

2140
01:31:26,080 --> 01:31:34,480
all right um so is anybody on the queue

2141
01:31:30,000 --> 01:31:38,960
i'm not no no okay okay then i'm gonna

2142
01:31:34,480 --> 01:31:43,759
um pull this back did i do ah

2143
01:31:38,960 --> 01:31:46,000
i hate that hang on gotta

2144
01:31:43,760 --> 01:31:47,520
fighting with powerpoint is always fun

2145
01:31:46,000 --> 01:31:50,800
okay so what we'd

2146
01:31:47,520 --> 01:31:52,000
uh what the editors would like um is

2147
01:31:50,800 --> 01:31:56,880
feedback on

2148
01:31:52,000 --> 01:31:56,880
uh issues 59 and 122

2149
01:31:56,960 --> 01:32:02,960
and uh you know let's let's

2150
01:32:00,880 --> 01:32:04,480
i think we can nail down what exactly we

2151
01:32:02,960 --> 01:32:08,880
want and it needs to be

2152
01:32:04,480 --> 01:32:12,480
uh use case driven um a lot of this

2153
01:32:08,880 --> 01:32:12,880
um discussion uh up into this point has

2154
01:32:12,480 --> 01:32:16,159
been

2155
01:32:12,880 --> 01:32:18,719
um it's really been driven by this

2156
01:32:16,159 --> 01:32:19,839
notion of how we deal with post

2157
01:32:18,719 --> 01:32:21,760
interaction

2158
01:32:19,840 --> 01:32:23,280
um there doesn't seem to be a lot of

2159
01:32:21,760 --> 01:32:25,280
controversy about having

2160
01:32:23,280 --> 01:32:26,639
multiple ways to start the interaction

2161
01:32:25,280 --> 01:32:27,519
giving the client lots of different

2162
01:32:26,639 --> 01:32:30,239
options

2163
01:32:27,520 --> 01:32:31,600
and um you know there have been uh

2164
01:32:30,239 --> 01:32:34,559
conversations that

2165
01:32:31,600 --> 01:32:35,360
i've had outside of sort of the itf

2166
01:32:34,560 --> 01:32:37,440
space

2167
01:32:35,360 --> 01:32:40,000
where people want to use uh new

2168
01:32:37,440 --> 01:32:40,960
protocols like the w3c has the chappie

2169
01:32:40,000 --> 01:32:43,840
protocol

2170
01:32:40,960 --> 01:32:44,239
uh diff has the did com protocol um

2171
01:32:43,840 --> 01:32:46,000
there's

2172
01:32:44,239 --> 01:32:47,919
there's a lot of you know there's also

2173
01:32:46,000 --> 01:32:49,600
the whole fido family of protocols

2174
01:32:47,920 --> 01:32:51,280
people want to use

2175
01:32:49,600 --> 01:32:53,360
different ways to kind of kick things

2176
01:32:51,280 --> 01:32:56,320
off um

2177
01:32:53,360 --> 01:32:57,440
but uh the sticking point seems to be

2178
01:32:56,320 --> 01:32:59,679
this notion of

2179
01:32:57,440 --> 01:33:00,879
what we do post interaction and how we

2180
01:32:59,679 --> 01:33:04,880
tie that in to

2181
01:33:00,880 --> 01:33:06,719
the rest so uh so that's what

2182
01:33:04,880 --> 01:33:08,480
the editors would like feedback on so

2183
01:33:06,719 --> 01:33:11,600
that we can hopefully

2184
01:33:08,480 --> 01:33:15,120
nail this down and move forward

2185
01:33:11,600 --> 01:33:19,120
so a question to you justin

2186
01:33:15,120 --> 01:33:22,400
we did some work on collecting use cases

2187
01:33:19,120 --> 01:33:24,000
is that useful for the editorial team to

2188
01:33:22,400 --> 01:33:26,480
resolve

2189
01:33:24,000 --> 01:33:27,280
this issue so can you go through the use

2190
01:33:26,480 --> 01:33:31,599
cases

2191
01:33:27,280 --> 01:33:33,679
and see how they apply to to your ideas

2192
01:33:31,600 --> 01:33:35,840
yeah and it's um and it's some of those

2193
01:33:33,679 --> 01:33:36,639
use cases that are driving this question

2194
01:33:35,840 --> 01:33:38,400
of

2195
01:33:36,639 --> 01:33:39,920
whether or not the current syntax is

2196
01:33:38,400 --> 01:33:43,519
expressive enough

2197
01:33:39,920 --> 01:33:47,040
um and so the so the question

2198
01:33:43,520 --> 01:33:50,239
is then um really does the

2199
01:33:47,040 --> 01:33:51,360
uh are are the changes warranted in

2200
01:33:50,239 --> 01:33:52,718
order to support

2201
01:33:51,360 --> 01:33:54,400
uh the use cases that need that

2202
01:33:52,719 --> 01:33:56,960
additional expression

2203
01:33:54,400 --> 01:33:58,799
so i mean this is this is uh security

2204
01:33:56,960 --> 01:33:59,920
it's gonna be complex but we always need

2205
01:33:58,800 --> 01:34:03,520
to balance

2206
01:33:59,920 --> 01:34:06,159
between um doing things that

2207
01:34:03,520 --> 01:34:07,679
are you know fully and beautifully

2208
01:34:06,159 --> 01:34:09,040
expressive versus

2209
01:34:07,679 --> 01:34:10,800
things that people will actually get

2210
01:34:09,040 --> 01:34:12,880
right um

2211
01:34:10,800 --> 01:34:14,960
and this is something though that i

2212
01:34:12,880 --> 01:34:18,239
think that we can

2213
01:34:14,960 --> 01:34:21,199
um i think we can give people

2214
01:34:18,239 --> 01:34:22,718
uh sort of core options that allow us to

2215
01:34:21,199 --> 01:34:25,599
uh

2216
01:34:22,719 --> 01:34:26,960
to keep the simple methods uh simple but

2217
01:34:25,600 --> 01:34:32,239
still allow for

2218
01:34:26,960 --> 01:34:35,280
really robust uh expression when needed

2219
01:34:32,239 --> 01:34:37,360
my current um my current

2220
01:34:35,280 --> 01:34:38,719
feeling seeing uh what's been proposed

2221
01:34:37,360 --> 01:34:42,639
would be a combination of

2222
01:34:38,719 --> 01:34:46,159
alternative two uh and aaron's syntax

2223
01:34:42,639 --> 01:34:47,600
so basically allow an array but each

2224
01:34:46,159 --> 01:34:51,280
member of the array

2225
01:34:47,600 --> 01:34:52,000
is um based on aaron's proposed syntax

2226
01:34:51,280 --> 01:34:55,599
or

2227
01:34:52,000 --> 01:34:57,040
you know an iteration thereon

2228
01:34:55,600 --> 01:34:59,119
that's my current thought i would love

2229
01:34:57,040 --> 01:35:00,239
to hear other people's uh takes on what

2230
01:34:59,119 --> 01:35:03,920
we can do there

2231
01:35:00,239 --> 01:35:03,919
so all right

2232
01:35:05,600 --> 01:35:12,480
okay all right let's move on

2233
01:35:09,520 --> 01:35:14,880
all right sounds good um so token

2234
01:35:12,480 --> 01:35:15,360
request syntax uh this is another thing

2235
01:35:14,880 --> 01:35:18,800
that

2236
01:35:15,360 --> 01:35:19,119
uh we kind of bounced around a little

2237
01:35:18,800 --> 01:35:22,480
bit

2238
01:35:19,119 --> 01:35:26,239
in the design team um and

2239
01:35:22,480 --> 01:35:29,360
uh i don't think we're quite there yet

2240
01:35:26,239 --> 01:35:30,320
um so the current method when you're

2241
01:35:29,360 --> 01:35:32,400
requesting

2242
01:35:30,320 --> 01:35:33,920
uh access tokens either single or

2243
01:35:32,400 --> 01:35:38,159
multiple access tokens

2244
01:35:33,920 --> 01:35:39,440
um it's uh it's pretty simple for

2245
01:35:38,159 --> 01:35:41,599
clients because

2246
01:35:39,440 --> 01:35:42,799
it's it's analogous to oauth scope

2247
01:35:41,600 --> 01:35:45,920
there's a list

2248
01:35:42,800 --> 01:35:46,639
of things which added together describe

2249
01:35:45,920 --> 01:35:50,320
the token

2250
01:35:46,639 --> 01:35:51,679
that you want right but that means just

2251
01:35:50,320 --> 01:35:53,840
like with oal scopes

2252
01:35:51,679 --> 01:35:55,520
it's really kind of awkward to send in

2253
01:35:53,840 --> 01:35:56,960
additional flags or fields or things

2254
01:35:55,520 --> 01:35:58,320
like that so

2255
01:35:56,960 --> 01:36:01,119
right now we've got this whole section

2256
01:35:58,320 --> 01:36:03,519
on token flags um

2257
01:36:01,119 --> 01:36:05,599
for sort of signaling token uh token

2258
01:36:03,520 --> 01:36:09,040
behavior or

2259
01:36:05,600 --> 01:36:11,440
requested token behavior so the proposal

2260
01:36:09,040 --> 01:36:12,639
in issue 40 which is going to spider out

2261
01:36:11,440 --> 01:36:16,400
to a number of

2262
01:36:12,639 --> 01:36:19,920
um sort of token syntax related issues

2263
01:36:16,400 --> 01:36:22,159
if we if we go in this direction

2264
01:36:19,920 --> 01:36:24,159
is to take what we have right now which

2265
01:36:22,159 --> 01:36:27,360
is just the resources array

2266
01:36:24,159 --> 01:36:28,239
and so it's the resources array that's

2267
01:36:27,360 --> 01:36:31,280
in the request

2268
01:36:28,239 --> 01:36:34,159
everything in here is what manages what

2269
01:36:31,280 --> 01:36:35,040
what happens with the access token the

2270
01:36:34,159 --> 01:36:36,559
proposal

2271
01:36:35,040 --> 01:36:38,639
is that instead of just sending this

2272
01:36:36,560 --> 01:36:42,000
array we actually have

2273
01:36:38,639 --> 01:36:42,800
an access token request portion of the

2274
01:36:42,000 --> 01:36:45,199
object which

2275
01:36:42,800 --> 01:36:46,880
includes the resources array which we

2276
01:36:45,199 --> 01:36:47,599
can still describe and still use all of

2277
01:36:46,880 --> 01:36:50,639
the same

2278
01:36:47,600 --> 01:36:54,000
you know rich semantics and flexible

2279
01:36:50,639 --> 01:36:57,199
syntax that we've got now

2280
01:36:54,000 --> 01:36:59,280
but put sort of hang other stuff

2281
01:36:57,199 --> 01:37:00,719
about the access token up at that higher

2282
01:36:59,280 --> 01:37:03,840
level um

2283
01:37:00,719 --> 01:37:06,080
so whether or not it's bound to a

2284
01:37:03,840 --> 01:37:07,600
uh sort of the client's key whether

2285
01:37:06,080 --> 01:37:08,960
we're allowed to split it that's a

2286
01:37:07,600 --> 01:37:10,239
separate issue if we're going to keep

2287
01:37:08,960 --> 01:37:13,840
that function so

2288
01:37:10,239 --> 01:37:15,839
you know table that idea for now but

2289
01:37:13,840 --> 01:37:17,920
if we were to allow that whether in the

2290
01:37:15,840 --> 01:37:20,800
core or even in an extension

2291
01:37:17,920 --> 01:37:21,119
this is how we would actually describe

2292
01:37:20,800 --> 01:37:22,800
it

2293
01:37:21,119 --> 01:37:25,599
you know we would put it inside the

2294
01:37:22,800 --> 01:37:30,159
access token right here

2295
01:37:25,600 --> 01:37:35,040
this also would necessarily change

2296
01:37:30,159 --> 01:37:38,239
how we request multiple access tokens

2297
01:37:35,040 --> 01:37:39,280
so the idea here being that the access

2298
01:37:38,239 --> 01:37:41,599
token if it's

2299
01:37:39,280 --> 01:37:43,519
an array it would contain each of these

2300
01:37:41,600 --> 01:37:46,560
individual objects

2301
01:37:43,520 --> 01:37:49,920
now this does get us away from

2302
01:37:46,560 --> 01:37:52,880
what i've always felt was a really uh

2303
01:37:49,920 --> 01:37:56,320
elegant solution to dealing with

2304
01:37:52,880 --> 01:37:58,880
multiple tokens and that's requiring

2305
01:37:56,320 --> 01:37:59,360
labels and the current multiple access

2306
01:37:58,880 --> 01:38:02,639
token

2307
01:37:59,360 --> 01:38:04,559
syntax forces you

2308
01:38:02,639 --> 01:38:05,840
to create a unique label because it's

2309
01:38:04,560 --> 01:38:08,159
that's enforced just

2310
01:38:05,840 --> 01:38:08,960
in the json without any json schema or

2311
01:38:08,159 --> 01:38:11,599
anything else

2312
01:38:08,960 --> 01:38:13,440
json syntax enforces that because we use

2313
01:38:11,600 --> 01:38:16,719
the left hand value for the label

2314
01:38:13,440 --> 01:38:20,239
i really like that however it's limiting

2315
01:38:16,719 --> 01:38:20,719
um because it allows um it doesn't allow

2316
01:38:20,239 --> 01:38:23,360
us to

2317
01:38:20,719 --> 01:38:24,560
sort of hang extra stuff on it in a way

2318
01:38:23,360 --> 01:38:27,280
that

2319
01:38:24,560 --> 01:38:28,560
is detectable at a type level right you

2320
01:38:27,280 --> 01:38:31,519
would have to do sort of

2321
01:38:28,560 --> 01:38:33,440
deep object inspection to figure out

2322
01:38:31,520 --> 01:38:35,520
what kind of thing is there

2323
01:38:33,440 --> 01:38:39,440
and we'll get more into why that's a bad

2324
01:38:35,520 --> 01:38:39,440
idea when we talk about the next issue

2325
01:38:39,520 --> 01:38:43,040
but we could pull this off using this

2326
01:38:42,639 --> 01:38:45,600
sort of

2327
01:38:43,040 --> 01:38:46,960
object syntax if we had an internal

2328
01:38:45,600 --> 01:38:50,480
label

2329
01:38:46,960 --> 01:38:53,760
for the access token and the response

2330
01:38:50,480 --> 01:38:56,638
uh would be very similar as well

2331
01:38:53,760 --> 01:38:58,080
so right now we have resources in the

2332
01:38:56,639 --> 01:38:59,600
request and then access

2333
01:38:58,080 --> 01:39:01,440
token in the response which has a whole

2334
01:38:59,600 --> 01:39:03,360
bunch of stuff tied to it would

2335
01:39:01,440 --> 01:39:05,040
we would be moving towards access token

2336
01:39:03,360 --> 01:39:06,000
in the request an access token in the

2337
01:39:05,040 --> 01:39:08,080
response

2338
01:39:06,000 --> 01:39:09,920
and with internal labeling we would we

2339
01:39:08,080 --> 01:39:12,239
would be able to mirror those two

2340
01:39:09,920 --> 01:39:13,840
that is nice in terms of simplicity it

2341
01:39:12,239 --> 01:39:16,718
makes it a little bit harder

2342
01:39:13,840 --> 01:39:18,639
in dealing with uh the potential error

2343
01:39:16,719 --> 01:39:22,000
cases because now

2344
01:39:18,639 --> 01:39:24,239
um nothing in the um

2345
01:39:22,000 --> 01:39:25,280
in the syntax enforces uniqueness of the

2346
01:39:24,239 --> 01:39:28,400
labels

2347
01:39:25,280 --> 01:39:29,440
um and so that's something that would

2348
01:39:28,400 --> 01:39:32,000
have to be checked

2349
01:39:29,440 --> 01:39:32,638
at the application layer on top of that

2350
01:39:32,000 --> 01:39:36,639
um

2351
01:39:32,639 --> 01:39:38,000
for example um so jaron wants to say

2352
01:39:36,639 --> 01:39:40,320
something do you want to

2353
01:39:38,000 --> 01:39:41,199
say you want to do this now you all know

2354
01:39:40,320 --> 01:39:44,080
what yeah

2355
01:39:41,199 --> 01:39:44,719
so a little bit of bike sharing but

2356
01:39:44,080 --> 01:39:47,280
still

2357
01:39:44,719 --> 01:39:48,080
i think the name access token for the

2358
01:39:47,280 --> 01:39:51,360
structure

2359
01:39:48,080 --> 01:39:54,880
is not very good maybe

2360
01:39:51,360 --> 01:39:58,159
access token properties attributes

2361
01:39:54,880 --> 01:39:59,760
or just access this is the access you're

2362
01:39:58,159 --> 01:40:02,879
looking to get

2363
01:39:59,760 --> 01:40:07,040
um access token is

2364
01:40:02,880 --> 01:40:10,320
well a token this is not it

2365
01:40:07,040 --> 01:40:13,679
yeah um yeah i get that and i i

2366
01:40:10,320 --> 01:40:14,320
i i like the idea of labeling this

2367
01:40:13,679 --> 01:40:16,320
access

2368
01:40:14,320 --> 01:40:17,679
uh what i was trying to do with this

2369
01:40:16,320 --> 01:40:20,559
straw man was to

2370
01:40:17,679 --> 01:40:22,560
parallelize the uh uh the request and

2371
01:40:20,560 --> 01:40:25,679
response i may have gone too far

2372
01:40:22,560 --> 01:40:30,239
in that direction um

2373
01:40:25,679 --> 01:40:33,280
but yeah that's a great comment um

2374
01:40:30,239 --> 01:40:36,480
but uh so yarn this does

2375
01:40:33,280 --> 01:40:37,040
um this is this is in response to some

2376
01:40:36,480 --> 01:40:39,199
of the

2377
01:40:37,040 --> 01:40:40,239
comments that um that you brought up in

2378
01:40:39,199 --> 01:40:43,280
addition to some of the

2379
01:40:40,239 --> 01:40:46,159
editors notes um

2380
01:40:43,280 --> 01:40:47,679
you know proposing this idea of having

2381
01:40:46,159 --> 01:40:50,879
other ways to

2382
01:40:47,679 --> 01:40:53,840
signal things oh

2383
01:40:50,880 --> 01:40:53,840
and one um

2384
01:40:54,000 --> 01:40:57,520
one other thing i want to point out uh

2385
01:40:56,000 --> 01:40:59,040
there was

2386
01:40:57,520 --> 01:41:00,800
something that got brought up a few

2387
01:40:59,040 --> 01:41:03,760
times um

2388
01:41:00,800 --> 01:41:04,320
about allowing a client to specify a

2389
01:41:03,760 --> 01:41:06,719
different

2390
01:41:04,320 --> 01:41:09,119
key to bind a token to or at least

2391
01:41:06,719 --> 01:41:12,000
allowing a client to signal like hey

2392
01:41:09,119 --> 01:41:12,400
um you know this access token i actually

2393
01:41:12,000 --> 01:41:14,719
want

2394
01:41:12,400 --> 01:41:15,839
bound to maybe it's this derived key or

2395
01:41:14,719 --> 01:41:17,440
whatever

2396
01:41:15,840 --> 01:41:19,679
which is separate from the key the

2397
01:41:17,440 --> 01:41:21,599
client is using to talk to the as

2398
01:41:19,679 --> 01:41:23,760
the syntax would actually give us a

2399
01:41:21,600 --> 01:41:24,400
relatively clean way to do that because

2400
01:41:23,760 --> 01:41:26,639
this

2401
01:41:24,400 --> 01:41:28,320
we could have you know in as in the

2402
01:41:26,639 --> 01:41:31,760
straw man a key field

2403
01:41:28,320 --> 01:41:34,639
and send a public key value

2404
01:41:31,760 --> 01:41:36,159
as just as part of the request there's a

2405
01:41:34,639 --> 01:41:40,719
really clean way

2406
01:41:36,159 --> 01:41:42,799
to uh to express that

2407
01:41:40,719 --> 01:41:44,639
and this this again is the key that

2408
01:41:42,800 --> 01:41:47,520
would be bound to

2409
01:41:44,639 --> 01:41:48,960
uh presentation of that access token so

2410
01:41:47,520 --> 01:41:52,159
it would allow us to

2411
01:41:48,960 --> 01:41:55,760
reuse a lot of that same structure

2412
01:41:52,159 --> 01:41:56,400
but anyway what uh what the editors

2413
01:41:55,760 --> 01:42:00,239
would like

2414
01:41:56,400 --> 01:42:03,360
uh is that since this is this would be

2415
01:42:00,239 --> 01:42:05,040
uh a larger bit of surgery uh to the

2416
01:42:03,360 --> 01:42:06,639
protocol that would have effects on both

2417
01:42:05,040 --> 01:42:07,920
the requests and the responses

2418
01:42:06,639 --> 01:42:10,239
throughout the protocol

2419
01:42:07,920 --> 01:42:11,119
uh we'd really like feedback if this is

2420
01:42:10,239 --> 01:42:12,799
uh moving in the

2421
01:42:11,119 --> 01:42:14,400
right in the right direction if we

2422
01:42:12,800 --> 01:42:17,199
should maybe just

2423
01:42:14,400 --> 01:42:17,920
try to uh put a stake in the ground and

2424
01:42:17,199 --> 01:42:20,080
and see

2425
01:42:17,920 --> 01:42:21,119
how this feels um in the course of the

2426
01:42:20,080 --> 01:42:23,360
spec or if

2427
01:42:21,119 --> 01:42:24,799
uh we're going way off into the woods

2428
01:42:23,360 --> 01:42:28,080
here

2429
01:42:24,800 --> 01:42:28,560
and again that is issue 40. tickets on

2430
01:42:28,080 --> 01:42:31,760
the

2431
01:42:28,560 --> 01:42:34,960
queue so okay do you want us

2432
01:42:31,760 --> 01:42:36,480
go ahead dick yep yep uh i think it's a

2433
01:42:34,960 --> 01:42:38,800
good idea to have a bunch of other

2434
01:42:36,480 --> 01:42:40,638
metadata besides the resources

2435
01:42:38,800 --> 01:42:43,360
right there's all kinds of examples you

2436
01:42:40,639 --> 01:42:46,480
can even think of you know here's how

2437
01:42:43,360 --> 01:42:49,759
here's the proof of possession mechanism

2438
01:42:46,480 --> 01:42:53,678
i understand right for

2439
01:42:49,760 --> 01:42:53,679
how it wants to talk to the resource

2440
01:42:54,159 --> 01:43:00,638
you know so i agree with that

2441
01:42:58,480 --> 01:43:02,239
i don't think you could still have the

2442
01:43:00,639 --> 01:43:05,360
label be the l value

2443
01:43:02,239 --> 01:43:07,360
and have it be an object that has

2444
01:43:05,360 --> 01:43:10,080
the metadata with resources in it so i

2445
01:43:07,360 --> 01:43:13,280
don't think that's an either or

2446
01:43:10,080 --> 01:43:15,199
and i'd second euron's comment about

2447
01:43:13,280 --> 01:43:16,880
access token because you could call it

2448
01:43:15,199 --> 01:43:18,559
access and the thing coming back can be

2449
01:43:16,880 --> 01:43:21,520
accessed that contains

2450
01:43:18,560 --> 01:43:21,520
the access tokens

2451
01:43:22,480 --> 01:43:26,638
so um a quick note about the l value uh

2452
01:43:25,440 --> 01:43:29,199
the reason for not

2453
01:43:26,639 --> 01:43:30,320
doing that is actually related to our uh

2454
01:43:29,199 --> 01:43:34,320
our next topic

2455
01:43:30,320 --> 01:43:38,320
and uh what that would effectively mean

2456
01:43:34,320 --> 01:43:41,119
is that uh the l value um

2457
01:43:38,320 --> 01:43:42,880
so if this is an object in both uh if

2458
01:43:41,119 --> 01:43:45,199
this is a json object

2459
01:43:42,880 --> 01:43:47,199
for both the single and multiple access

2460
01:43:45,199 --> 01:43:50,638
token cases

2461
01:43:47,199 --> 01:43:53,839
then um then we're running into

2462
01:43:50,639 --> 01:43:56,320
a very sort of

2463
01:43:53,840 --> 01:43:57,199
error-prone and potentially dangerous

2464
01:43:56,320 --> 01:44:00,159
mode of

2465
01:43:57,199 --> 01:44:02,159
using polymorphism in the protocol

2466
01:44:00,159 --> 01:44:04,559
because now we have two different

2467
01:44:02,159 --> 01:44:06,320
objects with very different structures

2468
01:44:04,560 --> 01:44:09,360
and very different semantics

2469
01:44:06,320 --> 01:44:11,119
which now need to be keyed on something

2470
01:44:09,360 --> 01:44:14,400
internal to the object

2471
01:44:11,119 --> 01:44:17,599
which also means that i can never

2472
01:44:14,400 --> 01:44:20,080
use resources or key or split or label

2473
01:44:17,600 --> 01:44:23,679
or a number of other fields

2474
01:44:20,080 --> 01:44:26,719
as as token

2475
01:44:23,679 --> 01:44:29,440
label values so

2476
01:44:26,719 --> 01:44:30,719
the moving the labels internally and

2477
01:44:29,440 --> 01:44:33,280
using an array

2478
01:44:30,719 --> 01:44:35,199
allows us to differentiate things at a

2479
01:44:33,280 --> 01:44:37,920
root level

2480
01:44:35,199 --> 01:44:41,360
so that's that's the motivation for

2481
01:44:37,920 --> 01:44:41,360
moving it in that direction

2482
01:44:41,760 --> 01:44:45,199
which is actually a good segue into into

2483
01:44:44,320 --> 01:44:48,639
the next issue

2484
01:44:45,199 --> 01:44:49,839
of polymorphism in the protocol in

2485
01:44:48,639 --> 01:44:52,320
general

2486
01:44:49,840 --> 01:44:54,560
and let me just call time especially if

2487
01:44:52,320 --> 01:44:57,360
we're moving into polymorphism

2488
01:44:54,560 --> 01:44:58,480
we we barely have some time to describe

2489
01:44:57,360 --> 01:45:01,679
the issue

2490
01:44:58,480 --> 01:45:04,638
probably not for full discussion

2491
01:45:01,679 --> 01:45:05,760
okay that's that's totally fine uh this

2492
01:45:04,639 --> 01:45:09,520
is this is a bigger

2493
01:45:05,760 --> 01:45:09,920
design issue um one of the things that

2494
01:45:09,520 --> 01:45:13,280
uh

2495
01:45:09,920 --> 01:45:16,719
the editors uh want to be clear here

2496
01:45:13,280 --> 01:45:18,400
is that we're using a very specific kind

2497
01:45:16,719 --> 01:45:21,520
of json polymorphism

2498
01:45:18,400 --> 01:45:24,320
um in the design of the current protocol

2499
01:45:21,520 --> 01:45:26,320
so json has no internet inherent type

2500
01:45:24,320 --> 01:45:28,480
restrictions which is why json schema

2501
01:45:26,320 --> 01:45:30,559
and json ld and cddl and all of these

2502
01:45:28,480 --> 01:45:32,400
other things exist it allows you to

2503
01:45:30,560 --> 01:45:34,400
define that because protocols and

2504
01:45:32,400 --> 01:45:36,960
especially security protocols

2505
01:45:34,400 --> 01:45:38,320
you want to have sort of strict

2506
01:45:36,960 --> 01:45:40,320
expectations of

2507
01:45:38,320 --> 01:45:43,759
what you're going to find within an

2508
01:45:40,320 --> 01:45:46,880
array or in a given field or whatever

2509
01:45:43,760 --> 01:45:48,320
polymorphism as we are using it allows

2510
01:45:46,880 --> 01:45:50,000
each field to have

2511
01:45:48,320 --> 01:45:51,679
expressions for different use cases so

2512
01:45:50,000 --> 01:45:54,800
like i was just talking about

2513
01:45:51,679 --> 01:45:57,280
if i see a json array here

2514
01:45:54,800 --> 01:45:58,400
that's one expression of the access that

2515
01:45:57,280 --> 01:46:01,360
i'm looking for

2516
01:45:58,400 --> 01:46:03,040
versus a json object here which is a

2517
01:46:01,360 --> 01:46:04,000
different expression but i'm still

2518
01:46:03,040 --> 01:46:06,400
talking about

2519
01:46:04,000 --> 01:46:07,920
the kind of access and the important

2520
01:46:06,400 --> 01:46:10,480
thing here is that those different

2521
01:46:07,920 --> 01:46:13,920
options are naturally mutually exclusive

2522
01:46:10,480 --> 01:46:15,440
because it's enforced in the json syntax

2523
01:46:13,920 --> 01:46:17,119
itself

2524
01:46:15,440 --> 01:46:19,280
right that's where this value really

2525
01:46:17,119 --> 01:46:22,320
comes in um

2526
01:46:19,280 --> 01:46:24,400
so this is one example

2527
01:46:22,320 --> 01:46:26,559
of sort of string versus object

2528
01:46:24,400 --> 01:46:29,040
polymorphism that we have

2529
01:46:26,560 --> 01:46:30,400
today where you can send this rich

2530
01:46:29,040 --> 01:46:33,280
multi-dimensional object

2531
01:46:30,400 --> 01:46:33,759
or you can send a string and the idea is

2532
01:46:33,280 --> 01:46:36,000
that

2533
01:46:33,760 --> 01:46:36,880
it references that now here's the

2534
01:46:36,000 --> 01:46:38,400
question

2535
01:46:36,880 --> 01:46:40,080
what do we do with it if we're going to

2536
01:46:38,400 --> 01:46:41,280
keep using it within the protocol

2537
01:46:40,080 --> 01:46:42,639
this has been brought up a number of

2538
01:46:41,280 --> 01:46:43,360
times use it only where it makes the

2539
01:46:42,639 --> 01:46:44,960
most sense

2540
01:46:43,360 --> 01:46:46,239
absolutely agree we shouldn't just be

2541
01:46:44,960 --> 01:46:47,119
peppering this everywhere just because

2542
01:46:46,239 --> 01:46:49,599
we can

2543
01:46:47,119 --> 01:46:52,799
um it needs to be very clearly and very

2544
01:46:49,600 --> 01:46:55,360
sort of strictly defined

2545
01:46:52,800 --> 01:46:56,560
and there's been some great discussion

2546
01:46:55,360 --> 01:47:00,000
on using

2547
01:46:56,560 --> 01:47:03,119
an informative um validation

2548
01:47:00,000 --> 01:47:04,400
language uh so json schema cdl there's

2549
01:47:03,119 --> 01:47:06,639
there's a bunch of others out there

2550
01:47:04,400 --> 01:47:08,000
and providing a test suite for people to

2551
01:47:06,639 --> 01:47:10,159
run their messages against

2552
01:47:08,000 --> 01:47:11,040
those schemas to figure out you know

2553
01:47:10,159 --> 01:47:13,839
whether or not

2554
01:47:11,040 --> 01:47:15,519
uh what they're doing actually complies

2555
01:47:13,840 --> 01:47:17,520
um

2556
01:47:15,520 --> 01:47:19,679
wherever possible we need to make sure

2557
01:47:17,520 --> 01:47:22,320
that we are optimizing complexity

2558
01:47:19,679 --> 01:47:24,239
away from the client software but if

2559
01:47:22,320 --> 01:47:26,000
that means that the as has to

2560
01:47:24,239 --> 01:47:29,839
has to bear more of the complexity

2561
01:47:26,000 --> 01:47:32,400
burden it's not necessarily a bad thing

2562
01:47:29,840 --> 01:47:34,639
and then of course if we decide that we

2563
01:47:32,400 --> 01:47:37,839
don't want to use json polymorphism

2564
01:47:34,639 --> 01:47:40,560
at all we need to answer the question of

2565
01:47:37,840 --> 01:47:41,679
how are we going to express this instead

2566
01:47:40,560 --> 01:47:44,080
there are of course

2567
01:47:41,679 --> 01:47:44,800
lots of ways that we could express all

2568
01:47:44,080 --> 01:47:47,679
of these different

2569
01:47:44,800 --> 01:47:49,760
bits of syntax generally though we're

2570
01:47:47,679 --> 01:47:52,320
going to end up doing things like

2571
01:47:49,760 --> 01:47:53,280
mutual exclusivity of fields that has to

2572
01:47:52,320 --> 01:47:56,159
get enforced

2573
01:47:53,280 --> 01:47:56,480
like you know at the application level

2574
01:47:56,159 --> 01:47:58,480
so

2575
01:47:56,480 --> 01:47:59,759
if i see these two fields together then

2576
01:47:58,480 --> 01:48:03,280
that's an error

2577
01:47:59,760 --> 01:48:05,600
um or we have a type field within the

2578
01:48:03,280 --> 01:48:09,840
object which ironically we have

2579
01:48:05,600 --> 01:48:11,520
in the resources array

2580
01:48:09,840 --> 01:48:13,840
so that is a different flavor of

2581
01:48:11,520 --> 01:48:14,639
polymorphism within those objects but

2582
01:48:13,840 --> 01:48:17,280
that is also

2583
01:48:14,639 --> 01:48:18,400
sort of tightly bound and defined just

2584
01:48:17,280 --> 01:48:20,639
for that space

2585
01:48:18,400 --> 01:48:22,080
and there's a trade-off for doing that

2586
01:48:20,639 --> 01:48:23,760
or we end up with things like

2587
01:48:22,080 --> 01:48:26,000
a container object that is only allowed

2588
01:48:23,760 --> 01:48:28,000
to have a mutually exclusive

2589
01:48:26,000 --> 01:48:30,000
value we've got that in at least one

2590
01:48:28,000 --> 01:48:31,840
place in the protocol right now

2591
01:48:30,000 --> 01:48:33,280
as an option and we need to ask

2592
01:48:31,840 --> 01:48:34,080
ourselves is that the direction we want

2593
01:48:33,280 --> 01:48:37,119
to go

2594
01:48:34,080 --> 01:48:38,960
um because each of these different

2595
01:48:37,119 --> 01:48:41,280
approaches has different kinds of

2596
01:48:38,960 --> 01:48:43,280
complexity and we have to be aware of

2597
01:48:41,280 --> 01:48:46,000
who pays for the complexity

2598
01:48:43,280 --> 01:48:48,080
so this is a core design issue i think

2599
01:48:46,000 --> 01:48:50,719
there's a lot more discussion

2600
01:48:48,080 --> 01:48:52,080
that we need to have and especially if

2601
01:48:50,719 --> 01:48:53,440
we're going to be moving away

2602
01:48:52,080 --> 01:48:55,760
if we decide to move away from

2603
01:48:53,440 --> 01:48:57,199
polymorphism we need to have something

2604
01:48:55,760 --> 01:48:58,560
to replace it with and it needs to be

2605
01:48:57,199 --> 01:49:01,199
something that

2606
01:48:58,560 --> 01:49:02,239
actually improves things um that you

2607
01:49:01,199 --> 01:49:03,919
know we need to

2608
01:49:02,239 --> 01:49:05,280
we need to know what the trade-offs are

2609
01:49:03,920 --> 01:49:08,880
that's all i have for slides

2610
01:49:05,280 --> 01:49:10,239
um so uh i think we're good please

2611
01:49:08,880 --> 01:49:12,560
comment on the issues

2612
01:49:10,239 --> 01:49:15,040
uh please bring things up on the list

2613
01:49:12,560 --> 01:49:17,679
and uh thanks everyone

2614
01:49:15,040 --> 01:49:20,320
and i will i'm not sure how to unshare

2615
01:49:17,679 --> 01:49:20,320
my screen

2616
01:49:20,719 --> 01:49:27,920
well i think there it is no i

2617
01:49:24,639 --> 01:49:28,880
yeah i found it thank you all right all

2618
01:49:27,920 --> 01:49:32,000
right

2619
01:49:28,880 --> 01:49:34,000
all right okay

2620
01:49:32,000 --> 01:49:38,480
all right i think that gets us back to

2621
01:49:34,000 --> 01:49:38,480
start you want to go back to chair stick

2622
01:49:39,280 --> 01:49:45,920
no we don't have any slides for for this

2623
01:49:42,560 --> 01:49:48,960
part of the discussion uh so

2624
01:49:45,920 --> 01:49:49,520
the next few minutes we're going to talk

2625
01:49:48,960 --> 01:49:53,280
about

2626
01:49:49,520 --> 01:49:56,800
next steps and

2627
01:49:53,280 --> 01:50:00,559
lief and i discussed it and

2628
01:49:56,800 --> 01:50:03,760
we would like to have a multiple

2629
01:50:00,560 --> 01:50:07,440
probably two interview meetings

2630
01:50:03,760 --> 01:50:10,639
between now and the next full ietf

2631
01:50:07,440 --> 01:50:13,598
but this is a question to the group

2632
01:50:10,639 --> 01:50:15,599
and especially a question to the

2633
01:50:13,599 --> 01:50:22,159
editorial team

2634
01:50:15,599 --> 01:50:26,239
interims will help us to close issues

2635
01:50:22,159 --> 01:50:29,360
and move work forward at a faster pace

2636
01:50:26,239 --> 01:50:33,040
but they have they impose

2637
01:50:29,360 --> 01:50:36,080
a load on the editorial team

2638
01:50:33,040 --> 01:50:39,679
so is the number two interims

2639
01:50:36,080 --> 01:50:42,159
too much too little what do people think

2640
01:50:39,679 --> 01:50:42,719
or are we good enough with not having

2641
01:50:42,159 --> 01:50:45,280
any

2642
01:50:42,719 --> 01:50:48,080
any interest and just doing the work on

2643
01:50:45,280 --> 01:50:48,080
the mailing list

2644
01:50:48,400 --> 01:50:53,759
eric justin

2645
01:50:52,080 --> 01:50:55,199
personally i'm a big fan of interim

2646
01:50:53,760 --> 01:50:55,920
meetings i feel like it helps make

2647
01:50:55,199 --> 01:50:58,000
progress

2648
01:50:55,920 --> 01:50:58,960
go faster and gives people more

2649
01:50:58,000 --> 01:51:02,639
checkpoints

2650
01:50:58,960 --> 01:51:05,119
it also is more affordable for people to

2651
01:51:02,639 --> 01:51:07,440
attend those since there is no

2652
01:51:05,119 --> 01:51:09,679
obligation to pay the registration fee

2653
01:51:07,440 --> 01:51:12,080
for ietf meetings

2654
01:51:09,679 --> 01:51:13,920
so i'm a big fan of that and i think i

2655
01:51:12,080 --> 01:51:20,320
would definitely be in support of

2656
01:51:13,920 --> 01:51:22,800
more often meetings interim meetings

2657
01:51:20,320 --> 01:51:22,799
justin

2658
01:51:26,159 --> 01:51:29,199
favor oh there we are i'm also in favor

2659
01:51:28,719 --> 01:51:30,560
of

2660
01:51:29,199 --> 01:51:33,040
in terms for the reasons that aaron is

2661
01:51:30,560 --> 01:51:36,400
talking about um

2662
01:51:33,040 --> 01:51:39,679
i think that they can be really good for

2663
01:51:36,400 --> 01:51:40,799
uh you know moving discussion forward

2664
01:51:39,679 --> 01:51:43,360
rapidly

2665
01:51:40,800 --> 01:51:44,000
with the caveat that any interim

2666
01:51:43,360 --> 01:51:48,559
meetings

2667
01:51:44,000 --> 01:51:51,679
needs to be very very clearly scoped

2668
01:51:48,560 --> 01:51:53,440
um by the chairs to say this is what

2669
01:51:51,679 --> 01:51:56,480
we're talking about today

2670
01:51:53,440 --> 01:51:59,678
and make sure people don't rat hole

2671
01:51:56,480 --> 01:52:01,280
on things i'm you know i i think we did

2672
01:51:59,679 --> 01:52:02,880
really well as a working group tonight

2673
01:52:01,280 --> 01:52:06,159
in in this format

2674
01:52:02,880 --> 01:52:07,040
um in not rat holding on things and time

2675
01:52:06,159 --> 01:52:10,400
boxing things

2676
01:52:07,040 --> 01:52:13,920
um so i that gives me some hope for us

2677
01:52:10,400 --> 01:52:16,000
being able to continue to move forward

2678
01:52:13,920 --> 01:52:18,400
in a positive way

2679
01:52:16,000 --> 01:52:19,920
so i'm in i'm in favor i think i think

2680
01:52:18,400 --> 01:52:22,000
at least two makes sense

2681
01:52:19,920 --> 01:52:23,599
maybe more and uh one thing that i've

2682
01:52:22,000 --> 01:52:25,280
seen the oauth working group do is have

2683
01:52:23,599 --> 01:52:27,280
it be topically driven

2684
01:52:25,280 --> 01:52:28,719
like if there are a lot of discrete

2685
01:52:27,280 --> 01:52:32,480
topics to talk about

2686
01:52:28,719 --> 01:52:32,480
schedule a bunch of different meetings

2687
01:52:33,440 --> 01:52:39,199
okay so so i suggest

2688
01:52:36,560 --> 01:52:40,719
we move forward and schedule the next

2689
01:52:39,199 --> 01:52:44,400
interim

2690
01:52:40,719 --> 01:52:45,040
in about a month from now and have the

2691
01:52:44,400 --> 01:52:47,519
chairs

2692
01:52:45,040 --> 01:52:48,639
editors and anybody else who wants to

2693
01:52:47,520 --> 01:52:52,159
chime in

2694
01:52:48,639 --> 01:52:59,840
discuss what topics we would like to

2695
01:52:52,159 --> 01:52:59,839
cover at the meeting

2696
01:53:00,560 --> 01:53:05,760
of course this is not licensed for doing

2697
01:53:02,560 --> 01:53:05,760
nothing between now and then

2698
01:53:09,040 --> 01:53:13,840
all right i guess that means that we're

2699
01:53:10,800 --> 01:53:13,840
at open mic

2700
01:53:27,679 --> 01:53:33,119
well not seeing anybody rush to the

2701
01:53:30,480 --> 01:53:35,519
microphone

2702
01:53:33,119 --> 01:53:39,040
that could be that we're tapped out for

2703
01:53:35,520 --> 01:53:39,040
for stuff to talk about right now

2704
01:53:39,599 --> 01:53:44,400
yeah so this is your time to comment

2705
01:53:41,920 --> 01:53:48,400
about process but also about

2706
01:53:44,400 --> 01:53:50,638
anything else we discussed today

2707
01:53:48,400 --> 01:53:55,839
or anything else the working group

2708
01:53:50,639 --> 01:53:55,840
should be aware of

2709
01:53:59,440 --> 01:54:01,919
justin

2710
01:54:06,560 --> 01:54:13,840
are we there yes okay sorry um

2711
01:54:10,639 --> 01:54:16,320
so the editors have made a uh

2712
01:54:13,840 --> 01:54:17,840
a handful of changes to the document

2713
01:54:16,320 --> 01:54:21,040
already mostly pulling out

2714
01:54:17,840 --> 01:54:22,239
the um uh the editor's notes and sort of

2715
01:54:21,040 --> 01:54:25,040
collapsing that

2716
01:54:22,239 --> 01:54:25,598
uh would it be beneficial um you know

2717
01:54:25,040 --> 01:54:26,560
especially

2718
01:54:25,599 --> 01:54:29,440
chairs do you think it would be

2719
01:54:26,560 --> 01:54:33,199
beneficial for us to publish a draft o2

2720
01:54:29,440 --> 01:54:35,519
with that change set um

2721
01:54:33,199 --> 01:54:37,280
going you know forward because we've got

2722
01:54:35,520 --> 01:54:39,599
that plus you know a couple of typos

2723
01:54:37,280 --> 01:54:41,840
fixed and dangling statements fixed

2724
01:54:39,599 --> 01:54:43,520
uh that's easy enough for me to publish

2725
01:54:41,840 --> 01:54:45,520
this week

2726
01:54:43,520 --> 01:54:48,480
uh and it doesn't really have normative

2727
01:54:45,520 --> 01:54:50,880
or substantive changes

2728
01:54:48,480 --> 01:54:52,400
i would say yes i think it would make it

2729
01:54:50,880 --> 01:54:55,440
easier for people to

2730
01:54:52,400 --> 01:54:57,839
to review and jump into the relevant

2731
01:54:55,440 --> 01:54:57,839
issues

2732
01:54:58,080 --> 01:55:03,840
okay i will uh i will take an action to

2733
01:55:00,880 --> 01:55:04,880
do that at some point this week thank

2734
01:55:03,840 --> 01:55:08,159
you

2735
01:55:04,880 --> 01:55:08,159
not right now because it's 2 a.m

2736
01:55:13,199 --> 01:55:15,598
all right

2737
01:55:16,880 --> 01:55:22,880
five minutes left to go we may um

2738
01:55:20,080 --> 01:55:24,320
maybe we'll just call this a little bit

2739
01:55:22,880 --> 01:55:27,440
early

2740
01:55:24,320 --> 01:55:31,519
uh one more thing uh

2741
01:55:27,440 --> 01:55:35,040
for those of us well it's not two a.m

2742
01:55:31,520 --> 01:55:37,520
does the gather thing i honestly don't

2743
01:55:35,040 --> 01:55:38,560
remember what room we were supposed to

2744
01:55:37,520 --> 01:55:41,679
be in

2745
01:55:38,560 --> 01:55:44,800
but if you want to meet the

2746
01:55:41,679 --> 01:55:48,719
for more informal discussion

2747
01:55:44,800 --> 01:55:48,719
that would be appreciated

2748
01:55:56,000 --> 01:56:01,840
it's room seven adam says

2749
01:56:02,719 --> 01:56:08,239
room seven fabian

2750
01:56:06,320 --> 01:56:09,360
well yeah thank you you just answered my

2751
01:56:08,239 --> 01:56:15,839
question because uh

2752
01:56:09,360 --> 01:56:15,839
the map is quite big actually

2753
01:56:23,920 --> 01:56:31,119
all right so with that we are done

2754
01:56:28,400 --> 01:56:31,759
thank you everyone and we will let you

2755
01:56:31,119 --> 01:56:34,880
know

2756
01:56:31,760 --> 01:56:36,080
once we have uh the interim meeting

2757
01:56:34,880 --> 01:56:38,880
scheduled

2758
01:56:36,080 --> 01:56:39,280
and in the meantime please make best use

2759
01:56:38,880 --> 01:56:42,320
of

2760
01:56:39,280 --> 01:56:44,880
github and we would like to know

2761
01:56:42,320 --> 01:56:46,559
what you think about the various issues

2762
01:56:44,880 --> 01:56:49,360
we discussed today

2763
01:56:46,560 --> 01:56:50,000
thank you everyone and have a good rest

2764
01:56:49,360 --> 01:56:57,839
of

2765
01:56:50,000 --> 01:56:57,840
its fabian was actually at the queue so

2766
01:56:58,719 --> 01:57:02,639
fabian did you want to say something

2767
01:57:00,159 --> 01:57:03,920
going out no no i had finished thank you

2768
01:57:02,639 --> 01:57:07,599
very much

2769
01:57:03,920 --> 01:57:09,040
okay and roman

2770
01:57:07,599 --> 01:57:11,840
it sounded like you wanted to say

2771
01:57:09,040 --> 01:57:11,840
something

2772
01:57:12,560 --> 01:57:17,920
you and your run for facilitating our

2773
01:57:14,159 --> 01:57:21,440
meeting thanks much

2774
01:57:17,920 --> 01:57:21,440
indeed thank you very much

2775
01:57:23,280 --> 01:57:39,840
all right all right that's it that's it

2776
01:57:28,080 --> 01:57:39,840
bye everyone bye-bye

2777
01:57:56,639 --> 01:57:58,719
you

