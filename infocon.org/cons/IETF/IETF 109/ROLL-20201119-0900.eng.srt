1
00:00:12,880 --> 00:00:17,920
wonderfully test

2
00:00:56,840 --> 00:00:59,840
hmm

3
00:01:10,840 --> 00:01:13,840
so

4
00:01:24,840 --> 00:01:27,840
hmm

5
00:01:29,600 --> 00:01:33,329
hello

6
00:01:30,200 --> 00:01:33,329
[Music]

7
00:01:33,439 --> 00:01:41,839
hi mike hi let me know

8
00:01:36,960 --> 00:01:41,839
what i

9
00:01:43,280 --> 00:01:46,399
yes coming in

10
00:01:49,200 --> 00:01:52,479
it really shouldn't be a problem for the

11
00:01:51,360 --> 00:01:56,479
low power

12
00:01:52,479 --> 00:01:56,479
working group have chairs with no power

13
00:01:57,040 --> 00:01:59,360
right

14
00:02:00,240 --> 00:02:05,839
it isn't indeed we have redundancy

15
00:02:03,680 --> 00:02:07,759
i was getting wondering because the room

16
00:02:05,840 --> 00:02:09,200
did not open in advance it happened just

17
00:02:07,759 --> 00:02:13,599
at 10

18
00:02:09,199 --> 00:02:13,599
yes same here i was getting nervous

19
00:02:14,640 --> 00:02:19,200
so okay i just assumed it was because

20
00:02:16,480 --> 00:02:22,000
the chair hadn't joined yet

21
00:02:19,200 --> 00:02:23,040
well the chair were trying to they were

22
00:02:22,000 --> 00:02:24,959
denied

23
00:02:23,040 --> 00:02:26,879
sorry to interject so this is lorenzo

24
00:02:24,959 --> 00:02:28,640
from mitego so just to clarify that the

25
00:02:26,879 --> 00:02:31,120
room was started late because the

26
00:02:28,640 --> 00:02:32,000
jabber server is not it's not working so

27
00:02:31,120 --> 00:02:34,080
we wanted to wait

28
00:02:32,000 --> 00:02:36,319
if it could if it would start so right

29
00:02:34,080 --> 00:02:37,920
now the jabber ring is not it's not set

30
00:02:36,319 --> 00:02:38,560
up but we wanted to start the sessions

31
00:02:37,920 --> 00:02:42,238
anyway

32
00:02:38,560 --> 00:02:51,840
so apologies for the day okay okay

33
00:02:42,239 --> 00:02:51,840
thank you

34
00:02:56,319 --> 00:03:04,000
so michael you'll be on double right

35
00:03:01,120 --> 00:03:04,400
uh yes i will sir i am in the jabber

36
00:03:04,000 --> 00:03:06,080
room

37
00:03:04,400 --> 00:03:08,879
directly although i think i have to

38
00:03:06,080 --> 00:03:08,879
reconnect now

39
00:03:14,319 --> 00:03:17,440
it'd be great if we're going to have one

40
00:03:16,640 --> 00:03:19,599
or two

41
00:03:17,440 --> 00:03:21,440
note-takers please anybody in the

42
00:03:19,599 --> 00:03:24,640
audience

43
00:03:21,440 --> 00:03:24,640
who's willing to do that

44
00:03:27,760 --> 00:03:31,599
thank you pascal and somebody else said

45
00:03:29,840 --> 00:03:34,159
yeah but i didn't recognize

46
00:03:31,599 --> 00:03:34,159
who it was

47
00:03:44,480 --> 00:03:50,238
okay just to say hi and then i'm going

48
00:03:47,200 --> 00:03:50,238
to turn off the video

49
00:03:58,959 --> 00:04:15,840
so you guys can

50
00:04:18,720 --> 00:04:21,120
okay

51
00:04:22,079 --> 00:04:26,400
it's four past ten so i think we're

52
00:04:24,400 --> 00:04:29,359
going to get started

53
00:04:26,400 --> 00:04:31,758
uh honest you want to talk to the chair

54
00:04:29,360 --> 00:04:35,440
slide

55
00:04:31,759 --> 00:04:35,440
or yep

56
00:04:35,759 --> 00:04:43,840
if you can give it a try

57
00:04:52,880 --> 00:04:57,840
did we just close enos i think so

58
00:05:04,479 --> 00:05:08,240
so let's get started anyway

59
00:05:09,199 --> 00:05:16,080
how is the sun can you all hear me

60
00:05:12,800 --> 00:05:16,080
you can write in the chat

61
00:05:19,039 --> 00:05:22,639
do the slides look okay do they show up

62
00:05:22,240 --> 00:05:26,560
okay

63
00:05:22,639 --> 00:05:26,560
oh right in the chat right now

64
00:05:30,560 --> 00:05:36,400
i'm sorry gusting with that you just

65
00:05:33,840 --> 00:05:37,119
said you can write in the chat and i

66
00:05:36,400 --> 00:05:39,359
replied

67
00:05:37,120 --> 00:05:41,840
you cannot write in the chat right now

68
00:05:39,360 --> 00:05:45,759
we don't have a chat

69
00:05:41,840 --> 00:05:46,159
oh really so it looks like uh that's

70
00:05:45,759 --> 00:05:48,560
what

71
00:05:46,160 --> 00:05:50,000
uh lorenzo was saying there was a

72
00:05:48,560 --> 00:05:52,880
problem with the jabber

73
00:05:50,000 --> 00:05:54,160
itf java server so it looks like the

74
00:05:52,880 --> 00:05:56,639
java room is up

75
00:05:54,160 --> 00:05:57,680
i'm there as well but there's no

76
00:05:56,639 --> 00:06:01,520
connection to

77
00:05:57,680 --> 00:06:05,680
meet echo i'm sure they'll let us know

78
00:06:01,520 --> 00:06:09,198
when that can be tied together

79
00:06:05,680 --> 00:06:09,840
but indeed if i'm trying to type in the

80
00:06:09,199 --> 00:06:12,800
chat

81
00:06:09,840 --> 00:06:12,799
nothing shows up

82
00:06:13,840 --> 00:06:18,638
so we don't have a chat there's no

83
00:06:17,120 --> 00:06:21,199
connection from the media echo to the

84
00:06:18,639 --> 00:06:23,120
jabber room and so you can't even go

85
00:06:21,199 --> 00:06:24,639
you can't use it it's not like it's not

86
00:06:23,120 --> 00:06:25,199
bridged it just doesn't work because

87
00:06:24,639 --> 00:06:29,280
it's the

88
00:06:25,199 --> 00:06:29,280
meat echo the jabber is the bridge

89
00:06:33,440 --> 00:06:35,840
okay

90
00:06:37,280 --> 00:06:40,799
that's becoming interesting

91
00:06:42,400 --> 00:06:45,919
if you have a jabber client you can

92
00:06:44,240 --> 00:06:49,840
connect to the room directly

93
00:06:45,919 --> 00:06:49,840
not through meat echo and it works fine

94
00:06:50,960 --> 00:06:56,799
uh yes i think that's time to admit that

95
00:06:55,039 --> 00:06:57,599
i've never used jabba and i don't want

96
00:06:56,800 --> 00:07:03,840
to try that

97
00:06:57,599 --> 00:07:03,840
right now

98
00:07:26,000 --> 00:07:30,160
well i guess we can just do without you

99
00:07:28,080 --> 00:07:32,159
we don't need a chat doing and those who

100
00:07:30,160 --> 00:07:34,000
are in the java room you can relay the

101
00:07:32,160 --> 00:07:36,720
questions at the mic

102
00:07:34,000 --> 00:07:37,919
well yes so um sorry just one

103
00:07:36,720 --> 00:07:40,639
interruption real quick

104
00:07:37,919 --> 00:07:42,000
um if you reload your window just reload

105
00:07:40,639 --> 00:07:46,319
the window i just did that

106
00:07:42,000 --> 00:07:49,840
on my mini echo window and now i can see

107
00:07:46,319 --> 00:07:52,960
the jabber posts i posted on my jabra

108
00:07:49,840 --> 00:07:52,960
and it showed up in the room

109
00:07:57,360 --> 00:08:00,479
and i see that michael also posted i

110
00:07:59,840 --> 00:08:02,719
think on

111
00:08:00,479 --> 00:08:05,520
on the java room and i see him on the

112
00:08:02,720 --> 00:08:05,520
mean echo screen

113
00:08:11,039 --> 00:08:27,840
all at once exactly let's count the

114
00:08:13,120 --> 00:08:27,840
three and we all go

115
00:08:29,039 --> 00:08:36,319
excellent thanks a lot that works

116
00:08:33,279 --> 00:08:39,599
um do we have innis on board no

117
00:08:36,320 --> 00:08:40,959
she's gone okay probably run out of

118
00:08:39,599 --> 00:08:44,320
batteries

119
00:08:40,958 --> 00:08:46,640
um good morning good afternoon

120
00:08:44,320 --> 00:08:47,760
good night ladies and gentlemen wherever

121
00:08:46,640 --> 00:08:50,640
you are

122
00:08:47,760 --> 00:08:52,480
um oh sharing the screen because i

123
00:08:50,640 --> 00:08:55,839
reloaded

124
00:08:52,480 --> 00:08:55,839
sorry about that

125
00:08:56,880 --> 00:09:02,560
okay so this is a role

126
00:09:00,080 --> 00:09:02,560
meeting

127
00:09:04,080 --> 00:09:06,560
we have

128
00:09:07,279 --> 00:09:15,760
we have pascal taking notes in cody md

129
00:09:12,560 --> 00:09:20,839
we have michael

130
00:09:15,760 --> 00:09:23,600
on jabber this is a noteworld

131
00:09:20,839 --> 00:09:25,920
um whatever you are

132
00:09:23,600 --> 00:09:28,080
saying in this meeting falls under the

133
00:09:25,920 --> 00:09:31,120
policy of itf

134
00:09:28,080 --> 00:09:32,080
uh you should i'm not going to read all

135
00:09:31,120 --> 00:09:34,160
of that but

136
00:09:32,080 --> 00:09:36,320
you should read and have understood all

137
00:09:34,160 --> 00:09:39,279
of that to participate in any kind of

138
00:09:36,320 --> 00:09:39,279
idf meeting

139
00:09:43,519 --> 00:09:48,800
okay cody md

140
00:09:47,040 --> 00:09:51,120
the link is here but you have a button

141
00:09:48,800 --> 00:09:54,160
in the mythical window

142
00:09:51,120 --> 00:09:56,800
slides can be downloaded from

143
00:09:54,160 --> 00:09:57,279
the link but as well from the material

144
00:09:56,800 --> 00:10:01,040
button

145
00:09:57,279 --> 00:10:05,120
in the mythical window and we do have

146
00:10:01,040 --> 00:10:08,079
minute takers in javascript

147
00:10:05,120 --> 00:10:10,560
something about a tv show in the dome or

148
00:10:08,079 --> 00:10:10,560
something

149
00:10:11,519 --> 00:10:19,200
i don't know who this is addressed to

150
00:10:15,680 --> 00:10:20,399
um this is our defender uh working group

151
00:10:19,200 --> 00:10:23,200
stairs

152
00:10:20,399 --> 00:10:24,720
from the chairs and we have uh pascal

153
00:10:23,200 --> 00:10:28,880
running the show for three

154
00:10:24,720 --> 00:10:32,399
successive presentations um

155
00:10:28,880 --> 00:10:34,959
and rahul for his root hack

156
00:10:32,399 --> 00:10:36,160
draft and then we have michael

157
00:10:34,959 --> 00:10:40,479
presenting

158
00:10:36,160 --> 00:10:43,600
the status of the ideas for

159
00:10:40,480 --> 00:10:47,120
65 50 bits

160
00:10:43,600 --> 00:10:50,079
to update ripple

161
00:10:47,120 --> 00:10:52,240
trim it from the features that have not

162
00:10:50,079 --> 00:10:54,880
been used so far

163
00:10:52,240 --> 00:10:55,839
and ideas for improvement that we want

164
00:10:54,880 --> 00:10:59,680
to

165
00:10:55,839 --> 00:11:02,800
put together as an update to 6550

166
00:10:59,680 --> 00:11:06,399
and a few minutes for open floor so that

167
00:11:02,800 --> 00:11:06,399
you can bring up any other discussion

168
00:11:07,360 --> 00:11:13,200
okay regarding the milestones those that

169
00:11:10,720 --> 00:11:16,320
we have achieved so far

170
00:11:13,200 --> 00:11:19,360
turn on rc 8548 has been

171
00:11:16,320 --> 00:11:22,640
uh submitted to asg

172
00:11:19,360 --> 00:11:25,680
uh unaware leaves been submitted uh aodv

173
00:11:22,640 --> 00:11:26,959
ripple has been submitted although it's

174
00:11:25,680 --> 00:11:30,319
not moving forward

175
00:11:26,959 --> 00:11:33,599
that much and the office

176
00:11:30,320 --> 00:11:34,240
are a bit distracted right now to react

177
00:11:33,600 --> 00:11:37,519
to the

178
00:11:34,240 --> 00:11:38,480
changes requested uh use of ripple info

179
00:11:37,519 --> 00:11:43,600
submitted

180
00:11:38,480 --> 00:11:43,600
efficiently in pdel submitted

181
00:11:44,640 --> 00:11:50,880
upcoming milestones um

182
00:11:48,480 --> 00:11:52,320
reading from the bottom to the top which

183
00:11:50,880 --> 00:11:56,079
is the order

184
00:11:52,320 --> 00:11:59,200
of time um the

185
00:11:56,079 --> 00:11:59,650
nsa extension draft and it's in my

186
00:11:59,200 --> 00:12:02,480
uh

187
00:11:59,650 --> 00:12:05,360
[Music]

188
00:12:02,480 --> 00:12:06,240
it's my turn to act on it i still have

189
00:12:05,360 --> 00:12:09,839
to complete the

190
00:12:06,240 --> 00:12:10,960
sheffield writer and submit it after the

191
00:12:09,839 --> 00:12:13,519
we have

192
00:12:10,960 --> 00:12:17,279
[Music]

193
00:12:13,519 --> 00:12:20,720
this modifications and that goes with

194
00:12:17,279 --> 00:12:23,279
two other drafts that are a bit late we

195
00:12:20,720 --> 00:12:24,410
are waiting to get more resources to

196
00:12:23,279 --> 00:12:25,760
work on that again

197
00:12:24,410 --> 00:12:31,120
[Music]

198
00:12:25,760 --> 00:12:33,360
enrollment priority to be worked on

199
00:12:31,120 --> 00:12:34,560
dow projection going to be discussed

200
00:12:33,360 --> 00:12:38,079
today and

201
00:12:34,560 --> 00:12:41,680
mopex and cap also

202
00:12:38,079 --> 00:12:44,719
um forward of us

203
00:12:41,680 --> 00:12:46,479
oops um so probably

204
00:12:44,720 --> 00:12:49,440
this shows the same thing again uh

205
00:12:46,480 --> 00:12:53,360
yellow is the hot ones the ones we are

206
00:12:49,440 --> 00:12:57,519
working on right right now and that are

207
00:12:53,360 --> 00:13:00,560
hot you know um

208
00:12:57,519 --> 00:13:02,000
and work to do the green are those who

209
00:13:00,560 --> 00:13:05,439
are steady progressing

210
00:13:02,000 --> 00:13:09,200
moving forward but kind of

211
00:13:05,440 --> 00:13:12,720
behind the yellow ones and blue is a

212
00:13:09,200 --> 00:13:12,720
frozen we don't know what's going on

213
00:13:12,959 --> 00:13:18,000
or it's standby consciously and

214
00:13:19,440 --> 00:13:23,920
uh ripple observation yes work in

215
00:13:22,160 --> 00:13:26,399
progress as well

216
00:13:23,920 --> 00:13:28,319
uh we have two drafts that have expired

217
00:13:26,399 --> 00:13:30,810
uh meepleyang beer

218
00:13:28,320 --> 00:13:32,320
seacast and

219
00:13:30,810 --> 00:13:36,000
[Music]

220
00:13:32,320 --> 00:13:37,360
this uh was actually mostly driven by

221
00:13:36,000 --> 00:13:40,720
peter van der stark so

222
00:13:37,360 --> 00:13:44,000
right now it's they're not moving

223
00:13:40,720 --> 00:13:46,639
um and we have two

224
00:13:44,000 --> 00:13:48,480
uh related drafts that are not working

225
00:13:46,639 --> 00:13:50,639
group paths yet won by

226
00:13:48,480 --> 00:13:52,480
rahul that's being discussed today and

227
00:13:50,639 --> 00:13:56,240
why by pascal

228
00:13:52,480 --> 00:13:58,720
that we will act on as we get more

229
00:13:56,240 --> 00:13:58,720
bandwidth

230
00:14:00,639 --> 00:14:03,680
these are the open tickets i don't want

231
00:14:02,480 --> 00:14:06,480
to spend

232
00:14:03,680 --> 00:14:09,680
time going through each of them but just

233
00:14:06,480 --> 00:14:13,040
to let you know that we're using the

234
00:14:09,680 --> 00:14:13,040
issues in github

235
00:14:13,279 --> 00:14:20,560
as tickets and

236
00:14:17,279 --> 00:14:23,279
yep here we go and

237
00:14:20,560 --> 00:14:23,920
these are the tickets that are open in

238
00:14:23,279 --> 00:14:26,000
tracker

239
00:14:23,920 --> 00:14:27,439
for the working world working group

240
00:14:26,000 --> 00:14:31,440
somewhat overlapping

241
00:14:27,440 --> 00:14:34,720
the other ones

242
00:14:31,440 --> 00:14:37,279
and with that i don't

243
00:14:34,720 --> 00:14:37,920
unless we have questions for the working

244
00:14:37,279 --> 00:14:41,680
group on

245
00:14:37,920 --> 00:14:41,680
that any questions

246
00:14:43,199 --> 00:14:46,880
jet or an audio

247
00:14:52,320 --> 00:14:56,560
okay i guess you're giving me the end

248
00:14:54,000 --> 00:14:59,519
that's what i understand dominique

249
00:14:56,560 --> 00:15:00,079
hearing nothing reading nothing in the

250
00:14:59,519 --> 00:15:03,519
chat

251
00:15:00,079 --> 00:15:06,959
i'm assuming uh it's your turn

252
00:15:03,519 --> 00:15:10,959
to present okay

253
00:15:06,959 --> 00:15:14,638
so uh as we said we uh i have three

254
00:15:10,959 --> 00:15:17,920
drafts to present but um two of them

255
00:15:14,639 --> 00:15:19,839
uh don't need so much time the the one

256
00:15:17,920 --> 00:15:22,319
that really really needs

257
00:15:19,839 --> 00:15:24,079
uh discussion is the dow projection so

258
00:15:22,320 --> 00:15:26,639
that that's kind of kind of cool that

259
00:15:24,079 --> 00:15:28,239
that we started this one and

260
00:15:26,639 --> 00:15:30,000
uh if we take too much time then we'll

261
00:15:28,240 --> 00:15:33,120
just tell from the other two

262
00:15:30,000 --> 00:15:35,600
because they don't need that much next

263
00:15:33,120 --> 00:15:35,600
slide please

264
00:15:38,320 --> 00:15:42,079
so this is this is about the the dow

265
00:15:40,720 --> 00:15:46,160
projection

266
00:15:42,079 --> 00:15:49,439
and as you know this is a new

267
00:15:46,160 --> 00:15:53,040
operation in ripple that makes it

268
00:15:49,440 --> 00:15:55,040
um capable of sdn

269
00:15:53,040 --> 00:15:57,199
type of operation with a controller that

270
00:15:55,040 --> 00:16:00,800
will will lay out

271
00:15:57,199 --> 00:16:03,920
what we call tracks which are possibly

272
00:16:00,800 --> 00:16:05,279
complex path between an ingress and an

273
00:16:03,920 --> 00:16:09,040
egress node

274
00:16:05,279 --> 00:16:11,279
you may see that as a tunnel but since

275
00:16:09,040 --> 00:16:14,480
it can be multi-path it's a bit more

276
00:16:11,279 --> 00:16:16,720
complex possibly than the tunnel

277
00:16:14,480 --> 00:16:18,560
and if the packets have to go between

278
00:16:16,720 --> 00:16:19,279
the ingress and the egress there is no

279
00:16:18,560 --> 00:16:22,000
need for

280
00:16:19,279 --> 00:16:24,480
tunneling really because it's you just

281
00:16:22,000 --> 00:16:28,079
insert the rpi as you normally do

282
00:16:24,480 --> 00:16:31,279
um within uh for the

283
00:16:28,079 --> 00:16:31,599
ripple aware nodes inside this truck but

284
00:16:31,279 --> 00:16:33,680
if

285
00:16:31,600 --> 00:16:35,519
the packet is injected coming from the

286
00:16:33,680 --> 00:16:36,239
outside or going to the outside of the

287
00:16:35,519 --> 00:16:39,680
truck then

288
00:16:36,240 --> 00:16:42,320
there's normally a need for

289
00:16:39,680 --> 00:16:43,839
encapsulation just like you would do in

290
00:16:42,320 --> 00:16:47,600
normal ripple for

291
00:16:43,839 --> 00:16:50,560
an external route

292
00:16:47,600 --> 00:16:51,600
so what changed a lot changed we've been

293
00:16:50,560 --> 00:16:55,199
working very hard

294
00:16:51,600 --> 00:16:57,040
um i'm aware of at least one a candidate

295
00:16:55,199 --> 00:16:58,240
implementation which is going through i

296
00:16:57,040 --> 00:17:00,160
hope there's more but

297
00:16:58,240 --> 00:17:02,240
we are not getting much feedback on on

298
00:17:00,160 --> 00:17:04,000
the mailing list and that's a bit sad

299
00:17:02,240 --> 00:17:06,000
but if people are trying to implement

300
00:17:04,000 --> 00:17:07,439
please give us feedback because

301
00:17:06,000 --> 00:17:09,119
yes we want to solve the problem we want

302
00:17:07,439 --> 00:17:10,799
to work on it but we need to understand

303
00:17:09,119 --> 00:17:13,678
what the problems are

304
00:17:10,799 --> 00:17:15,520
the first thing that that really came to

305
00:17:13,679 --> 00:17:17,199
mind is the fact that initially we

306
00:17:15,520 --> 00:17:19,679
decided to separate the topological

307
00:17:17,199 --> 00:17:21,839
information from

308
00:17:19,679 --> 00:17:23,199
the laying out of the truck and this

309
00:17:21,839 --> 00:17:26,720
draft was supposed to be

310
00:17:23,199 --> 00:17:28,799
only laying out the tracks as it goes

311
00:17:26,720 --> 00:17:31,840
there was never a draft which would

312
00:17:28,799 --> 00:17:36,320
give topology to the route or to the pc

313
00:17:31,840 --> 00:17:38,639
so we kind of decided to

314
00:17:36,320 --> 00:17:40,799
to keep that into this document so we

315
00:17:38,640 --> 00:17:44,240
created this sibling option

316
00:17:40,799 --> 00:17:46,559
and the recent changes enforce that

317
00:17:44,240 --> 00:17:48,400
the main geodag in which we are building

318
00:17:46,559 --> 00:17:51,840
this pidau route

319
00:17:48,400 --> 00:17:52,240
has to be uh operated in non-storing

320
00:17:51,840 --> 00:17:54,639
mode

321
00:17:52,240 --> 00:17:56,720
for one thing uh azkasten usually tells

322
00:17:54,640 --> 00:18:00,000
us it's the mode that is the most

323
00:17:56,720 --> 00:18:02,240
uh used and for the other thing that the

324
00:18:00,000 --> 00:18:04,320
non-storage is the mode where the route

325
00:18:02,240 --> 00:18:04,799
already has topological information

326
00:18:04,320 --> 00:18:07,520
about

327
00:18:04,799 --> 00:18:08,799
the geodag itself so the only thing that

328
00:18:07,520 --> 00:18:11,840
that needs to be added

329
00:18:08,799 --> 00:18:13,360
is the sibling so that's why we provide

330
00:18:11,840 --> 00:18:15,439
this new sibling information option and

331
00:18:13,360 --> 00:18:17,840
we say the deal dac has to be operated

332
00:18:15,440 --> 00:18:19,679
in non-story mode

333
00:18:17,840 --> 00:18:20,959
the other big change that happened

334
00:18:19,679 --> 00:18:25,919
recently

335
00:18:20,960 --> 00:18:30,320
is how to signal a truck that is not

336
00:18:25,919 --> 00:18:30,559
simply a serial list of nodes a to b to

337
00:18:30,320 --> 00:18:32,879
c

338
00:18:30,559 --> 00:18:33,600
to d right now we can do more complex

339
00:18:32,880 --> 00:18:35,600
stuff

340
00:18:33,600 --> 00:18:38,240
but installing something more complex

341
00:18:35,600 --> 00:18:41,280
with just one message was kind of hard

342
00:18:38,240 --> 00:18:46,559
so what we did is we say

343
00:18:41,280 --> 00:18:48,720
one pedal message installs one segment

344
00:18:46,559 --> 00:18:49,678
and then if you want to build a track

345
00:18:48,720 --> 00:18:51,440
then you you

346
00:18:49,679 --> 00:18:53,039
that's more complex then you install

347
00:18:51,440 --> 00:18:54,840
more than one segment

348
00:18:53,039 --> 00:18:57,280
and you correlate them all with a track

349
00:18:54,840 --> 00:18:59,520
id

350
00:18:57,280 --> 00:19:00,799
so that that kind of makes it easy for

351
00:18:59,520 --> 00:19:04,080
the controller to

352
00:19:00,799 --> 00:19:06,960
handle the segments separately

353
00:19:04,080 --> 00:19:09,600
uh or the controller holder the route to

354
00:19:06,960 --> 00:19:12,880
to under the segment separately

355
00:19:09,600 --> 00:19:15,039
and that can be decoupled from the

356
00:19:12,880 --> 00:19:17,120
activation or deactivation of the track

357
00:19:15,039 --> 00:19:18,720
like the controller may decide that this

358
00:19:17,120 --> 00:19:21,120
segment is not operating well

359
00:19:18,720 --> 00:19:23,919
it might enable alternate segments and

360
00:19:21,120 --> 00:19:26,879
disable that segment

361
00:19:23,919 --> 00:19:28,640
in runtime so so you can change the

362
00:19:26,880 --> 00:19:30,480
structure of the track in runtime by

363
00:19:28,640 --> 00:19:32,400
changing some of its segments

364
00:19:30,480 --> 00:19:34,720
without necessarily disabling the whole

365
00:19:32,400 --> 00:19:34,720
truck

366
00:19:34,880 --> 00:19:39,120
there's also a little change of

367
00:19:36,720 --> 00:19:42,320
structure that happens is

368
00:19:39,120 --> 00:19:43,520
to simplify again we say in one pdi

369
00:19:42,320 --> 00:19:46,399
message that's

370
00:19:43,520 --> 00:19:49,520
that can only be one list of hubs so

371
00:19:46,400 --> 00:19:52,799
whether it's a vio so it's it's

372
00:19:49,520 --> 00:19:55,440
storing mode or i o which is a

373
00:19:52,799 --> 00:19:57,039
non-storing mode source routing either

374
00:19:55,440 --> 00:19:58,559
way there is only one list

375
00:19:57,039 --> 00:20:02,080
that's what we call the the road

376
00:19:58,559 --> 00:20:05,280
projection option so vio honestly io

377
00:20:02,080 --> 00:20:08,080
and but still there can be multiple

378
00:20:05,280 --> 00:20:09,520
targets so if you think again as a

379
00:20:08,080 --> 00:20:13,520
segment or a track as a

380
00:20:09,520 --> 00:20:14,639
tunnel then the tunnel may lead just to

381
00:20:13,520 --> 00:20:16,879
the tunnel egress

382
00:20:14,640 --> 00:20:18,559
obviously it leads there but it could

383
00:20:16,880 --> 00:20:21,760
also lead to

384
00:20:18,559 --> 00:20:24,960
neighbors of the tunnel egress

385
00:20:21,760 --> 00:20:26,400
and those neighbors can be signaled as

386
00:20:24,960 --> 00:20:29,120
targets

387
00:20:26,400 --> 00:20:29,760
so basically the pidao tells you those

388
00:20:29,120 --> 00:20:33,520
targets

389
00:20:29,760 --> 00:20:36,720
are reachable over this tunnel

390
00:20:33,520 --> 00:20:40,158
now as signal today the tunnel

391
00:20:36,720 --> 00:20:43,280
is between the requester

392
00:20:40,159 --> 00:20:45,120
and uh the egress

393
00:20:43,280 --> 00:20:47,600
and we'll see in the question that uh

394
00:20:45,120 --> 00:20:50,000
maybe we we can do better than that

395
00:20:47,600 --> 00:20:50,639
that we can ask for a tunnel between nea

396
00:20:50,000 --> 00:20:52,240
and nab

397
00:20:50,640 --> 00:20:54,400
and we could also ask for autonomous to

398
00:20:52,240 --> 00:20:57,280
be bidirectional so that's part of the

399
00:20:54,400 --> 00:20:59,120
depending questions we'll see in the end

400
00:20:57,280 --> 00:21:00,559
so right now basically the main change

401
00:20:59,120 --> 00:21:03,918
that i'm talking about is

402
00:21:00,559 --> 00:21:06,480
we can signal a track the track

403
00:21:03,919 --> 00:21:09,600
can be made of multiple segments they're

404
00:21:06,480 --> 00:21:12,640
all correlated with a track id

405
00:21:09,600 --> 00:21:14,559
and we need to figure out exactly

406
00:21:12,640 --> 00:21:16,000
in more details how we do the

407
00:21:14,559 --> 00:21:18,000
encapsulation and how

408
00:21:16,000 --> 00:21:19,120
we when we do the encapsulation how we

409
00:21:18,000 --> 00:21:22,400
do it

410
00:21:19,120 --> 00:21:24,399
and uh what exactly gets signaled in the

411
00:21:22,400 --> 00:21:26,720
vr option for instance do we signal the

412
00:21:24,400 --> 00:21:29,440
ingress do we signal the egress

413
00:21:26,720 --> 00:21:30,559
or can we highlight them so that's part

414
00:21:29,440 --> 00:21:32,720
of the things which

415
00:21:30,559 --> 00:21:33,678
could be improved and tuned in this

416
00:21:32,720 --> 00:21:36,480
document

417
00:21:33,679 --> 00:21:36,480
next slide please

418
00:21:36,880 --> 00:21:43,280
so as i said um we we

419
00:21:40,159 --> 00:21:45,440
now include the topological awareness

420
00:21:43,280 --> 00:21:47,600
we signal the structures through

421
00:21:45,440 --> 00:21:50,000
non-storing dials normal

422
00:21:47,600 --> 00:21:50,719
of the main geodag we signal the

423
00:21:50,000 --> 00:21:53,200
siblings

424
00:21:50,720 --> 00:21:53,760
through the sibling information option

425
00:21:53,200 --> 00:21:57,280
what

426
00:21:53,760 --> 00:22:00,158
we do not do is

427
00:21:57,280 --> 00:22:01,440
select which siblings uh would be

428
00:22:00,159 --> 00:22:03,520
advertised

429
00:22:01,440 --> 00:22:05,600
i mean if you're in a very dense network

430
00:22:03,520 --> 00:22:06,158
you may not want to advertise every

431
00:22:05,600 --> 00:22:07,520
sibling

432
00:22:06,159 --> 00:22:09,840
every note that you can see maybe

433
00:22:07,520 --> 00:22:13,360
there's a hundred of them

434
00:22:09,840 --> 00:22:15,360
and so it

435
00:22:13,360 --> 00:22:17,120
the primer of selecting sibling may

436
00:22:15,360 --> 00:22:20,399
depend on the use case

437
00:22:17,120 --> 00:22:23,840
and it may be quite complex

438
00:22:20,400 --> 00:22:24,640
so it's out of scope but certainly for a

439
00:22:23,840 --> 00:22:26,480
given

440
00:22:24,640 --> 00:22:28,080
implementation that there will be a

441
00:22:26,480 --> 00:22:28,960
given deployment there will be a need

442
00:22:28,080 --> 00:22:32,000
for

443
00:22:28,960 --> 00:22:33,919
some logic some some intelligence to

444
00:22:32,000 --> 00:22:35,039
select the siblings that are advertised

445
00:22:33,919 --> 00:22:37,120
to the root

446
00:22:35,039 --> 00:22:38,320
knowing that what the root knows in

447
00:22:37,120 --> 00:22:40,879
terms of sibling

448
00:22:38,320 --> 00:22:42,559
is what it can use to build path and if

449
00:22:40,880 --> 00:22:44,240
you don't advertise the sibling to the

450
00:22:42,559 --> 00:22:45,039
root then the root will not know that it

451
00:22:44,240 --> 00:22:49,840
can use it

452
00:22:45,039 --> 00:22:49,840
in a path next slide

453
00:22:52,159 --> 00:22:58,640
so as i said the there can be

454
00:22:55,679 --> 00:22:59,679
zero or multiple ripple target options

455
00:22:58,640 --> 00:23:01,520
and they really mean

456
00:22:59,679 --> 00:23:04,000
the siblings which are reachable over

457
00:23:01,520 --> 00:23:04,000
this track

458
00:23:04,080 --> 00:23:10,559
there can only be one vio or srvio

459
00:23:08,720 --> 00:23:12,080
that's for simplification so there's

460
00:23:10,559 --> 00:23:15,200
only one act to be

461
00:23:12,080 --> 00:23:18,799
to be sent uh by the ingress

462
00:23:15,200 --> 00:23:21,679
of the track now the

463
00:23:18,799 --> 00:23:23,760
vio is sent to the egress that's was

464
00:23:21,679 --> 00:23:26,799
always the case the srvio is sent to

465
00:23:23,760 --> 00:23:28,080
the ingress in the case of a vio the

466
00:23:26,799 --> 00:23:30,158
message is propagating

467
00:23:28,080 --> 00:23:32,559
along the reverse path to the ingress

468
00:23:30,159 --> 00:23:34,480
and the ingress anyway sends that yak as

469
00:23:32,559 --> 00:23:37,918
i said

470
00:23:34,480 --> 00:23:40,080
the track id has to be a local instance

471
00:23:37,919 --> 00:23:43,919
id for now it's a local instance id

472
00:23:40,080 --> 00:23:46,080
of the egress so the track is really a

473
00:23:43,919 --> 00:23:49,520
form of dodge

474
00:23:46,080 --> 00:23:52,720
that's rooted at the egress so we take

475
00:23:49,520 --> 00:23:55,360
the um we identify the track

476
00:23:52,720 --> 00:23:56,799
by a local instance of that egress and

477
00:23:55,360 --> 00:23:58,799
the fully qualified

478
00:23:56,799 --> 00:24:01,520
instance id is the ip address of the

479
00:23:58,799 --> 00:24:04,000
egress plus the local distance id in the

480
00:24:01,520 --> 00:24:05,760
namespace of that egress

481
00:24:04,000 --> 00:24:07,039
now if you want to to consider

482
00:24:05,760 --> 00:24:08,480
bi-directional tracks and

483
00:24:07,039 --> 00:24:10,799
like i said it's a question that we have

484
00:24:08,480 --> 00:24:12,960
in the end then it could be

485
00:24:10,799 --> 00:24:14,559
of the ingress or of the egress

486
00:24:12,960 --> 00:24:16,400
depending on direction of the packets

487
00:24:14,559 --> 00:24:19,918
they might go along the geodag or they

488
00:24:16,400 --> 00:24:19,919
might go along the reverse deal deck

489
00:24:20,559 --> 00:24:23,120
next slide

490
00:24:25,279 --> 00:24:29,440
so there was a little bit of change in

491
00:24:28,240 --> 00:24:32,480
the structure of the

492
00:24:29,440 --> 00:24:35,919
pidao option

493
00:24:32,480 --> 00:24:37,520
so so this is um well the vio or the

494
00:24:35,919 --> 00:24:40,640
slvio actually

495
00:24:37,520 --> 00:24:42,039
so um the the big challenge is we we

496
00:24:40,640 --> 00:24:45,520
mandated

497
00:24:42,039 --> 00:24:47,279
8138 compression to make sure that it's

498
00:24:45,520 --> 00:24:48,879
always compressed initially we could say

499
00:24:47,279 --> 00:24:50,000
it's compressed or it's not compressed

500
00:24:48,880 --> 00:24:51,440
and with expressed whether it's

501
00:24:50,000 --> 00:24:55,120
compressed or not

502
00:24:51,440 --> 00:24:57,919
and since the srh6 layer edge is

503
00:24:55,120 --> 00:24:59,439
self-descriptive in its compression and

504
00:24:57,919 --> 00:25:00,960
one of the compression mode is actually

505
00:24:59,440 --> 00:25:03,440
non-compression

506
00:25:00,960 --> 00:25:05,039
uh it looked easier to just always use

507
00:25:03,440 --> 00:25:06,960
the slg6 lower edge

508
00:25:05,039 --> 00:25:08,158
uh header and then the list of the

509
00:25:06,960 --> 00:25:10,720
address compressed

510
00:25:08,159 --> 00:25:12,799
as the slh6 layer h would indicate so

511
00:25:10,720 --> 00:25:15,600
now there is an sr6 lower header

512
00:25:12,799 --> 00:25:15,600
in the pidao

513
00:25:16,240 --> 00:25:23,279
normally if you're using uh

514
00:25:20,000 --> 00:25:26,960
storing mode you need to have a

515
00:25:23,279 --> 00:25:28,080
strict sequence of address because each

516
00:25:26,960 --> 00:25:30,080
each

517
00:25:28,080 --> 00:25:32,240
next address must be a neighbor of this

518
00:25:30,080 --> 00:25:34,559
address so you can always forward

519
00:25:32,240 --> 00:25:36,159
and you'd have a risk of a loop loop

520
00:25:34,559 --> 00:25:38,559
avoidance was a

521
00:25:36,159 --> 00:25:39,360
delicate thing that also needs to be

522
00:25:38,559 --> 00:25:41,200
considered

523
00:25:39,360 --> 00:25:42,399
uh when you look at this draft and if

524
00:25:41,200 --> 00:25:45,760
you make a review

525
00:25:42,400 --> 00:25:48,480
think about loop avoidance um

526
00:25:45,760 --> 00:25:49,520
what we did to avoid loops is we we

527
00:25:48,480 --> 00:25:53,520
enforced that

528
00:25:49,520 --> 00:25:57,200
the story mode is always tracked

529
00:25:53,520 --> 00:26:00,000
for non-storing mode we are load

530
00:25:57,200 --> 00:26:02,159
non-straight but then there needs to be

531
00:26:00,000 --> 00:26:03,520
another kind of non-storing mode path

532
00:26:02,159 --> 00:26:06,559
between the loose halves

533
00:26:03,520 --> 00:26:08,240
so with this we can allow track within

534
00:26:06,559 --> 00:26:11,279
tracks if you like

535
00:26:08,240 --> 00:26:15,039
so the loose track would be within a

536
00:26:11,279 --> 00:26:16,799
non-lose track something like that

537
00:26:15,039 --> 00:26:18,879
and then you'll see why when we discuss

538
00:26:16,799 --> 00:26:21,600
encapsulation but it's

539
00:26:18,880 --> 00:26:23,039
um that again is not an easy discussion

540
00:26:21,600 --> 00:26:24,639
so that's why we

541
00:26:23,039 --> 00:26:26,799
that's why i wanted time in this working

542
00:26:24,640 --> 00:26:29,200
group to kind of explain the problems

543
00:26:26,799 --> 00:26:30,720
and uh you know on the mailing list i'll

544
00:26:29,200 --> 00:26:32,559
during the discussion get feedback on

545
00:26:30,720 --> 00:26:35,760
how to do things

546
00:26:32,559 --> 00:26:39,360
so this srh6 leverage provides you

547
00:26:35,760 --> 00:26:42,158
the compressed list of the via addresses

548
00:26:39,360 --> 00:26:43,199
that's a strict in storing mode that's

549
00:26:42,159 --> 00:26:46,720
loose if you like

550
00:26:43,200 --> 00:26:50,480
in non-storing mode in non-storing mode

551
00:26:46,720 --> 00:26:53,000
if rfc8138 is effectively

552
00:26:50,480 --> 00:26:54,240
deployed in the network then the

553
00:26:53,000 --> 00:26:58,320
specification

554
00:26:54,240 --> 00:27:02,159
adds that we want the optimized format

555
00:26:58,320 --> 00:27:04,480
to be used by the root which basically

556
00:27:02,159 --> 00:27:06,480
makes it so that what you find in this

557
00:27:04,480 --> 00:27:09,039
option is exactly what you would put in

558
00:27:06,480 --> 00:27:09,039
the packet

559
00:27:09,200 --> 00:27:14,080
so the the encapsulating node never has

560
00:27:12,720 --> 00:27:17,200
to compute

561
00:27:14,080 --> 00:27:17,918
the compressed form of the srh6 lower

562
00:27:17,200 --> 00:27:20,640
edge

563
00:27:17,919 --> 00:27:23,120
as you know in in normal ripple the only

564
00:27:20,640 --> 00:27:23,679
node which computes an srh6 layer h is

565
00:27:23,120 --> 00:27:25,600
the root

566
00:27:23,679 --> 00:27:27,200
let's see because the air h always goes

567
00:27:25,600 --> 00:27:28,959
from the root

568
00:27:27,200 --> 00:27:30,320
so the complexity of computing the

569
00:27:28,960 --> 00:27:33,679
compressed form of an

570
00:27:30,320 --> 00:27:36,158
srh6 range is only in the root

571
00:27:33,679 --> 00:27:38,080
and we want to conserve that feature

572
00:27:36,159 --> 00:27:40,240
because it's a complex code and we don't

573
00:27:38,080 --> 00:27:43,520
want it distributed in the nodes

574
00:27:40,240 --> 00:27:44,720
so the way there is we use the srh6

575
00:27:43,520 --> 00:27:47,840
large format here

576
00:27:44,720 --> 00:27:48,960
so that the root basically provides the

577
00:27:47,840 --> 00:27:50,879
pre-encoded

578
00:27:48,960 --> 00:27:54,399
header to be inserted in the packet when

579
00:27:50,880 --> 00:27:54,399
you do the encapsulation

580
00:27:55,440 --> 00:27:59,039
now think again when you when you hear

581
00:27:58,080 --> 00:28:02,320
this

582
00:27:59,039 --> 00:28:04,158
of should we signal the ingress in this

583
00:28:02,320 --> 00:28:05,520
list and should we signal the egress in

584
00:28:04,159 --> 00:28:08,480
this list

585
00:28:05,520 --> 00:28:10,240
because if we signal the ingress uh then

586
00:28:08,480 --> 00:28:12,720
all of a sudden you may say hey

587
00:28:10,240 --> 00:28:13,840
ah then the ingress must consume the

588
00:28:12,720 --> 00:28:15,440
first address when

589
00:28:13,840 --> 00:28:17,840
you actually follow the packet because

590
00:28:15,440 --> 00:28:17,840
that's him

591
00:28:18,080 --> 00:28:21,760
if you don't provide the ingress in this

592
00:28:20,640 --> 00:28:24,240
list

593
00:28:21,760 --> 00:28:27,360
then how does the ingress know which of

594
00:28:24,240 --> 00:28:27,360
its address it should use

595
00:28:27,600 --> 00:28:32,000
that that's an important question

596
00:28:29,279 --> 00:28:33,600
because the compression depends always

597
00:28:32,000 --> 00:28:36,240
on the previous address

598
00:28:33,600 --> 00:28:37,199
when you send a packet the first the

599
00:28:36,240 --> 00:28:40,000
sender

600
00:28:37,200 --> 00:28:41,760
is the compression reference so if a

601
00:28:40,000 --> 00:28:44,159
node encapsulates and adds

602
00:28:41,760 --> 00:28:45,520
a header like this the source address

603
00:28:44,159 --> 00:28:47,360
that is going to use

604
00:28:45,520 --> 00:28:49,360
is the reference for the compression so

605
00:28:47,360 --> 00:28:50,559
it must be very clear which address is

606
00:28:49,360 --> 00:28:53,439
used to ensure that we get the

607
00:28:50,559 --> 00:28:56,000
compression we expect

608
00:28:53,440 --> 00:28:57,840
so so this is kind of the primes we have

609
00:28:56,000 --> 00:28:59,520
and and we need to to think through as

610
00:28:57,840 --> 00:29:02,158
we progress this document

611
00:28:59,520 --> 00:29:03,760
do we signal the via the ingress address

612
00:29:02,159 --> 00:29:06,399
in which case the the

613
00:29:03,760 --> 00:29:07,840
ingress node needs to consume it or do

614
00:29:06,399 --> 00:29:11,918
we not signal it

615
00:29:07,840 --> 00:29:12,959
and then how do we select it exactly

616
00:29:11,919 --> 00:29:16,000
next slide

617
00:29:12,960 --> 00:29:19,760
oh another thing is as i said

618
00:29:16,000 --> 00:29:22,399
um we want the the srh6 language

619
00:29:19,760 --> 00:29:24,720
fully comprised by the root if rfc8138

620
00:29:22,399 --> 00:29:27,120
is in use in the network

621
00:29:24,720 --> 00:29:28,000
well if you want it fully compressed it

622
00:29:27,120 --> 00:29:30,080
might be that

623
00:29:28,000 --> 00:29:32,000
uh you have different compression like

624
00:29:30,080 --> 00:29:35,039
two bytes and then four bytes

625
00:29:32,000 --> 00:29:37,200
and with rfc813h you need to insert more

626
00:29:35,039 --> 00:29:39,200
than one sr6 lower edge in that case

627
00:29:37,200 --> 00:29:42,000
because each srh6 voltage

628
00:29:39,200 --> 00:29:43,520
is for a fixed size so if you go from

629
00:29:42,000 --> 00:29:44,960
two bytes to four bytes

630
00:29:43,520 --> 00:29:48,000
then you need to switch as a register

631
00:29:44,960 --> 00:29:49,919
excel average in that case the root will

632
00:29:48,000 --> 00:29:51,840
have to to place more than one in this

633
00:29:49,919 --> 00:29:54,000
option so basically if

634
00:29:51,840 --> 00:29:55,918
from the first sr6 ratchet held onto the

635
00:29:54,000 --> 00:29:58,240
patch here at the end of the option

636
00:29:55,919 --> 00:30:00,320
there would be a sequence of slx six

637
00:29:58,240 --> 00:30:03,840
layers actually not just one

638
00:30:00,320 --> 00:30:07,120
that's only when rc8-138

639
00:30:03,840 --> 00:30:09,320
is in operation in the network

640
00:30:07,120 --> 00:30:12,439
okay next slide this time please

641
00:30:09,320 --> 00:30:12,439
[Music]

642
00:30:12,880 --> 00:30:19,440
so for now there is text which says

643
00:30:15,919 --> 00:30:21,840
that you encapsulate

644
00:30:19,440 --> 00:30:23,600
if the uh if you are not in the case

645
00:30:21,840 --> 00:30:26,480
where the source is the ingress

646
00:30:23,600 --> 00:30:26,879
and the destination is the egress now

647
00:30:26,480 --> 00:30:30,480
it's

648
00:30:26,880 --> 00:30:33,679
it's what the text says um

649
00:30:30,480 --> 00:30:35,760
it's not fully exact

650
00:30:33,679 --> 00:30:37,200
and we need to to to reword that a

651
00:30:35,760 --> 00:30:39,279
little bit

652
00:30:37,200 --> 00:30:40,480
first there are two cases to keep in

653
00:30:39,279 --> 00:30:44,480
mind the first case

654
00:30:40,480 --> 00:30:47,760
is i want to

655
00:30:44,480 --> 00:30:52,559
complement a non-storing node

656
00:30:47,760 --> 00:30:52,559
a non-storing mode diode with

657
00:30:52,880 --> 00:30:59,440
storing mode p dials along the path

658
00:30:56,960 --> 00:31:00,799
with the goal to compress the source

659
00:30:59,440 --> 00:31:04,000
route header

660
00:31:00,799 --> 00:31:06,879
so in this case the mode of operation

661
00:31:04,000 --> 00:31:08,159
is non-storing well we say it has to be

662
00:31:06,880 --> 00:31:12,720
in the main geoduck

663
00:31:08,159 --> 00:31:16,880
the the pdo is storing

664
00:31:12,720 --> 00:31:17,840
and the rpi is always the one of the

665
00:31:16,880 --> 00:31:23,279
main

666
00:31:17,840 --> 00:31:26,080
deodag so if you look at it when you

667
00:31:23,279 --> 00:31:27,600
what the root builds is a loose source

668
00:31:26,080 --> 00:31:30,000
routing

669
00:31:27,600 --> 00:31:30,879
and between two hubs of the loose source

670
00:31:30,000 --> 00:31:34,399
routing

671
00:31:30,880 --> 00:31:36,480
we use the pdow storing mode

672
00:31:34,399 --> 00:31:39,279
to go between the loose hops in the

673
00:31:36,480 --> 00:31:42,320
source altimeter

674
00:31:39,279 --> 00:31:43,120
which means that the rpi is correct you

675
00:31:42,320 --> 00:31:46,000
don't need to

676
00:31:43,120 --> 00:31:47,840
encapsulate between the loose hops

677
00:31:46,000 --> 00:31:50,240
because the rpi is still

678
00:31:47,840 --> 00:31:52,158
indicating the instance id of the main

679
00:31:50,240 --> 00:31:57,360
diode

680
00:31:52,159 --> 00:31:57,360
so actually if the the path is

681
00:31:57,440 --> 00:32:04,159
non-star is is i'm sorry if the uh pdow

682
00:32:01,519 --> 00:32:05,760
is storing mode and the rpi that comes

683
00:32:04,159 --> 00:32:08,960
in is already correct

684
00:32:05,760 --> 00:32:10,799
actually you don't want to encapsulate

685
00:32:08,960 --> 00:32:12,159
you just want to forward along the

686
00:32:10,799 --> 00:32:15,360
storing

687
00:32:12,159 --> 00:32:17,840
mode pedal between the loose source

688
00:32:15,360 --> 00:32:20,479
route hops

689
00:32:17,840 --> 00:32:21,600
so this this shows you why actually this

690
00:32:20,480 --> 00:32:24,000
text which says

691
00:32:21,600 --> 00:32:26,158
you have to to encapsulate if the source

692
00:32:24,000 --> 00:32:26,960
is not ingress or the destination is not

693
00:32:26,159 --> 00:32:30,320
digressed

694
00:32:26,960 --> 00:32:33,200
is not fully correct same thing when

695
00:32:30,320 --> 00:32:34,320
um you you forward the long segments of

696
00:32:33,200 --> 00:32:37,039
a track

697
00:32:34,320 --> 00:32:38,720
actually the api uh contains normally

698
00:32:37,039 --> 00:32:42,399
the track id

699
00:32:38,720 --> 00:32:44,559
so um even for a given segment

700
00:32:42,399 --> 00:32:46,000
um you don't need to re-encapsulate you

701
00:32:44,559 --> 00:32:48,240
don't want to re-encapsulate you want

702
00:32:46,000 --> 00:32:50,240
the track id to be seen

703
00:32:48,240 --> 00:32:52,480
as you forward along the segments of the

704
00:32:50,240 --> 00:32:56,080
track

705
00:32:52,480 --> 00:32:57,919
so so we we probably need a more some

706
00:32:56,080 --> 00:32:58,399
clarification on exactly when you need

707
00:32:57,919 --> 00:32:59,840
to

708
00:32:58,399 --> 00:33:02,479
to encapsulate and why you need to

709
00:32:59,840 --> 00:33:02,480
encapsulate

710
00:33:03,760 --> 00:33:10,399
um the other thing that

711
00:33:07,279 --> 00:33:14,640
i will have slides next

712
00:33:10,399 --> 00:33:16,959
is when you use a source routing editor

713
00:33:14,640 --> 00:33:18,799
so it's non-storing pi dial

714
00:33:16,960 --> 00:33:21,120
normally to insert it you need to

715
00:33:18,799 --> 00:33:23,039
encapsulate

716
00:33:21,120 --> 00:33:24,799
so each time you forward the packet

717
00:33:23,039 --> 00:33:28,080
along the segment

718
00:33:24,799 --> 00:33:31,760
you would need to encapsulate

719
00:33:28,080 --> 00:33:33,360
to to place the routing either for that

720
00:33:31,760 --> 00:33:36,158
segment

721
00:33:33,360 --> 00:33:38,959
now if you do that then the destination

722
00:33:36,159 --> 00:33:42,559
becomes the end point of the segment

723
00:33:38,960 --> 00:33:43,840
not the track endpoint so when you look

724
00:33:42,559 --> 00:33:46,080
at the packet

725
00:33:43,840 --> 00:33:48,879
it does not signal the track anymore it

726
00:33:46,080 --> 00:33:51,120
signals the segment

727
00:33:48,880 --> 00:33:52,000
so this is completely acceptable the

728
00:33:51,120 --> 00:33:54,080
draft allows

729
00:33:52,000 --> 00:33:56,880
to put a track in another track so if

730
00:33:54,080 --> 00:33:59,039
one segment is considered as a track

731
00:33:56,880 --> 00:34:00,240
uh for instance with a strict source

732
00:33:59,039 --> 00:34:04,320
route

733
00:34:00,240 --> 00:34:06,880
and and the track itself the main track

734
00:34:04,320 --> 00:34:08,399
is a loose source route that goes across

735
00:34:06,880 --> 00:34:10,399
the segments

736
00:34:08,399 --> 00:34:12,239
then that fits the model that fits the

737
00:34:10,399 --> 00:34:13,839
architecture of this document

738
00:34:12,239 --> 00:34:15,359
but when you look at the package you

739
00:34:13,839 --> 00:34:17,119
don't see the track

740
00:34:15,359 --> 00:34:19,040
the main track you just see the segments

741
00:34:17,119 --> 00:34:21,679
on the authorizer

742
00:34:19,040 --> 00:34:22,639
which might not be what you want there

743
00:34:21,679 --> 00:34:25,280
is another mode

744
00:34:22,639 --> 00:34:26,240
whereby we kind of refill the routing

745
00:34:25,280 --> 00:34:28,480
editors

746
00:34:26,239 --> 00:34:30,399
segment by segment but if you refill the

747
00:34:28,480 --> 00:34:34,320
routing editor it looks a lot like

748
00:34:30,399 --> 00:34:35,759
a routing editor insertion it's not

749
00:34:34,320 --> 00:34:37,679
but it's something that we have to

750
00:34:35,760 --> 00:34:40,800
debate because it's it

751
00:34:37,679 --> 00:34:42,480
basically looks acceptable if you look

752
00:34:40,800 --> 00:34:43,679
at the opposition against the rotting

753
00:34:42,480 --> 00:34:46,719
adder insertion

754
00:34:43,679 --> 00:34:47,679
but it's still not fully clean uh

755
00:34:46,719 --> 00:34:48,959
because it's

756
00:34:47,679 --> 00:34:51,679
well i will show you in picture because

757
00:34:48,960 --> 00:34:54,399
it's kind of complex but basically

758
00:34:51,679 --> 00:34:56,480
the the thing i would like to achieve

759
00:34:54,399 --> 00:34:58,480
here is when you forward a packet along

760
00:34:56,480 --> 00:35:02,320
the segments of a truck

761
00:34:58,480 --> 00:35:04,240
even if um

762
00:35:02,320 --> 00:35:07,040
the segments themselves are source

763
00:35:04,240 --> 00:35:09,839
routed you don't effectively

764
00:35:07,040 --> 00:35:11,599
encapsulate you change the source you

765
00:35:09,839 --> 00:35:12,320
change the routing editor destination

766
00:35:11,599 --> 00:35:16,400
stays

767
00:35:12,320 --> 00:35:18,800
the tracking grass the api stays

768
00:35:16,400 --> 00:35:20,160
uh taken from the namespace of the

769
00:35:18,800 --> 00:35:22,480
tracking rest so the

770
00:35:20,160 --> 00:35:23,440
the external header always signals the

771
00:35:22,480 --> 00:35:25,680
main track

772
00:35:23,440 --> 00:35:26,480
not the segment i will show you that in

773
00:35:25,680 --> 00:35:31,359
drawings

774
00:35:26,480 --> 00:35:33,760
next slide

775
00:35:31,359 --> 00:35:35,200
okay so so this is basically the the

776
00:35:33,760 --> 00:35:36,800
discussion i wanted to have and those

777
00:35:35,200 --> 00:35:42,000
drawings that i promised

778
00:35:36,800 --> 00:35:43,680
so initially the the the simplest case

779
00:35:42,000 --> 00:35:46,320
and this works in storing mode and

780
00:35:43,680 --> 00:35:48,240
non-storing mode pedal

781
00:35:46,320 --> 00:35:52,079
is you have a tracking grass you have a

782
00:35:48,240 --> 00:35:54,640
number of hops you have the tracky grass

783
00:35:52,079 --> 00:35:56,320
and the pidao in this case is shown in

784
00:35:54,640 --> 00:35:58,240
non-storing mode in storing mode i'm

785
00:35:56,320 --> 00:36:00,240
sorry so the pedal is is sent

786
00:35:58,240 --> 00:36:02,160
by the route to the tracking rest and

787
00:36:00,240 --> 00:36:03,759
it's forwarded along the reverse path to

788
00:36:02,160 --> 00:36:04,720
the tracking grass and the tracking

789
00:36:03,760 --> 00:36:07,359
grass

790
00:36:04,720 --> 00:36:09,680
uh sends the uh attachment back to the

791
00:36:07,359 --> 00:36:12,560
route

792
00:36:09,680 --> 00:36:13,200
if a packet comes from the outside so

793
00:36:12,560 --> 00:36:16,078
outside

794
00:36:13,200 --> 00:36:17,200
source or outside destination the idea

795
00:36:16,079 --> 00:36:20,640
is normally

796
00:36:17,200 --> 00:36:24,240
you should encapsulate

797
00:36:20,640 --> 00:36:26,400
to place in the the packet into a header

798
00:36:24,240 --> 00:36:27,520
where the destination the final

799
00:36:26,400 --> 00:36:30,960
destination

800
00:36:27,520 --> 00:36:33,520
is the track egress and the rpi is this

801
00:36:30,960 --> 00:36:33,520
track id

802
00:36:33,760 --> 00:36:38,320
okay so so that's classical ripple when

803
00:36:37,280 --> 00:36:40,160
you have a local instance

804
00:36:38,320 --> 00:36:41,520
local instance and you you have a bit in

805
00:36:40,160 --> 00:36:44,000
the api which says

806
00:36:41,520 --> 00:36:44,800
uh the name space is taken from source

807
00:36:44,000 --> 00:36:47,200
or destination

808
00:36:44,800 --> 00:36:50,320
in this case would be set to destination

809
00:36:47,200 --> 00:36:53,520
and uh the track id is the

810
00:36:50,320 --> 00:36:54,480
local ripple instance id kind of simple

811
00:36:53,520 --> 00:36:56,880
right it's

812
00:36:54,480 --> 00:36:58,320
what we do for ripple and nowhere leaf a

813
00:36:56,880 --> 00:37:00,480
packet coming from the outside

814
00:36:58,320 --> 00:37:01,599
has to be encapsulated to place the rpi

815
00:37:00,480 --> 00:37:03,520
in the packet

816
00:37:01,599 --> 00:37:05,200
and it's not just the rpi but also to

817
00:37:03,520 --> 00:37:05,599
set the destination of the packet

818
00:37:05,200 --> 00:37:08,000
because

819
00:37:05,599 --> 00:37:09,760
the instance is local to the destination

820
00:37:08,000 --> 00:37:11,839
so it to be fully

821
00:37:09,760 --> 00:37:13,920
signaled you need both the destination

822
00:37:11,839 --> 00:37:17,759
to be the track address and the api to

823
00:37:13,920 --> 00:37:19,359
to be the track id so i hope you find

824
00:37:17,760 --> 00:37:21,359
this is the simple case because now the

825
00:37:19,359 --> 00:37:24,160
complex case comes coming

826
00:37:21,359 --> 00:37:24,160
next slide please

827
00:37:25,599 --> 00:37:32,560
okay now i want to do uh

828
00:37:28,960 --> 00:37:37,839
two consecutive segments

829
00:37:32,560 --> 00:37:37,839
and i'm in uh non-storing mode

830
00:37:38,320 --> 00:37:44,640
there are two ways of doing this

831
00:37:41,440 --> 00:37:48,640
um so

832
00:37:44,640 --> 00:37:52,640
basically the track itself

833
00:37:48,640 --> 00:37:55,920
the end-to-end track would have a loose

834
00:37:52,640 --> 00:37:57,839
hop one then lose hop two

835
00:37:55,920 --> 00:37:59,200
then lose hub three meaning that there

836
00:37:57,839 --> 00:38:02,480
are hops in the middle

837
00:37:59,200 --> 00:38:05,359
but the um the rotting editor that is

838
00:38:02,480 --> 00:38:06,800
shown for the track packet and the

839
00:38:05,359 --> 00:38:09,520
encapsulation that is done

840
00:38:06,800 --> 00:38:10,320
at the ingress of the track says rotting

841
00:38:09,520 --> 00:38:13,359
either

842
00:38:10,320 --> 00:38:17,359
lh1 and h2 h3

843
00:38:13,359 --> 00:38:19,680
so that's the quote-unquote inner track

844
00:38:17,359 --> 00:38:20,960
now because you have to go across the

845
00:38:19,680 --> 00:38:24,000
loose path between

846
00:38:20,960 --> 00:38:27,440
nh1 and h2 and that loose path

847
00:38:24,000 --> 00:38:30,320
is uh if that loose path

848
00:38:27,440 --> 00:38:31,839
is non-starring in which case my arrow

849
00:38:30,320 --> 00:38:32,800
with the pedal is kind of inexact

850
00:38:31,839 --> 00:38:36,320
because it's really

851
00:38:32,800 --> 00:38:36,320
populated in the lh1 but

852
00:38:36,480 --> 00:38:39,920
if you have to do that then basically

853
00:38:38,000 --> 00:38:45,280
you would need to re-encapsulate

854
00:38:39,920 --> 00:38:45,280
the packet at lh1

855
00:38:45,520 --> 00:38:49,119
with the source rotator that goes the

856
00:38:48,400 --> 00:38:53,280
hops between

857
00:38:49,119 --> 00:38:56,240
h1 and h2 and the destination being nh2

858
00:38:53,280 --> 00:38:58,079
and a track id which is taken from the

859
00:38:56,240 --> 00:39:01,040
namespace of lh2 so

860
00:38:58,079 --> 00:39:02,720
the main track is now placed into track

861
00:39:01,040 --> 00:39:04,960
one

862
00:39:02,720 --> 00:39:06,720
which is which goes which is the first

863
00:39:04,960 --> 00:39:10,640
segment

864
00:39:06,720 --> 00:39:12,879
and then lh2 decapsulates um

865
00:39:10,640 --> 00:39:14,640
or it could be degress which could be

866
00:39:12,880 --> 00:39:16,640
the note just before lh2 in this case

867
00:39:14,640 --> 00:39:16,960
what's illustrated is the egress is the

868
00:39:16,640 --> 00:39:20,000
the

869
00:39:16,960 --> 00:39:22,560
the node just before h2 so the the the

870
00:39:20,000 --> 00:39:24,960
node just before lh2 neighbor of h2

871
00:39:22,560 --> 00:39:26,480
dec decapsulates the packet it's the

872
00:39:24,960 --> 00:39:28,800
tracking grass

873
00:39:26,480 --> 00:39:30,000
finds that the next entry in the loose

874
00:39:28,800 --> 00:39:32,320
source routing either

875
00:39:30,000 --> 00:39:33,040
is lh2 it's one of my neighbors fine and

876
00:39:32,320 --> 00:39:34,560
i seem to

877
00:39:33,040 --> 00:39:36,400
pass him the packet so it's not

878
00:39:34,560 --> 00:39:38,240
compressed at this time it just contains

879
00:39:36,400 --> 00:39:41,359
the inner track

880
00:39:38,240 --> 00:39:44,399
loose hub 2 finds that

881
00:39:41,359 --> 00:39:47,040
it needs to go to lose hop three uh

882
00:39:44,400 --> 00:39:48,800
it has a non-stirring path to there so

883
00:39:47,040 --> 00:39:49,839
it really does an encapsulation to an

884
00:39:48,800 --> 00:39:52,560
egress which is

885
00:39:49,839 --> 00:39:54,000
loop up three or one of its neighbors

886
00:39:52,560 --> 00:39:55,759
and blah again

887
00:39:54,000 --> 00:39:58,079
but as the packet flies between the

888
00:39:55,760 --> 00:39:58,560
loose hops what you see in the outer

889
00:39:58,079 --> 00:40:01,200
header

890
00:39:58,560 --> 00:40:03,119
is an encapsulation that goes between

891
00:40:01,200 --> 00:40:04,960
the loose hops

892
00:40:03,119 --> 00:40:06,400
so you don't recognize the track which

893
00:40:04,960 --> 00:40:09,119
is actually hidden inside the

894
00:40:06,400 --> 00:40:09,119
encapsulation

895
00:40:09,200 --> 00:40:16,319
now what the draft allows to do

896
00:40:13,680 --> 00:40:17,759
and that's the big discussion is to say

897
00:40:16,319 --> 00:40:21,599
hey

898
00:40:17,760 --> 00:40:27,440
when i um

899
00:40:21,599 --> 00:40:27,440
i am the last half of a track

900
00:40:29,359 --> 00:40:34,240
and i have basically another segment

901
00:40:32,160 --> 00:40:37,440
which starts at me

902
00:40:34,240 --> 00:40:40,959
towards the destination

903
00:40:37,440 --> 00:40:43,200
then uh i can

904
00:40:40,960 --> 00:40:44,800
kind of remove the outer header and

905
00:40:43,200 --> 00:40:46,240
place a new one which has the same

906
00:40:44,800 --> 00:40:47,280
destination which is the final

907
00:40:46,240 --> 00:40:51,118
destination

908
00:40:47,280 --> 00:40:53,119
same rpi because it's the track but just

909
00:40:51,119 --> 00:40:54,720
change the source and the sequence of

910
00:40:53,119 --> 00:40:56,640
hubs so i become the source

911
00:40:54,720 --> 00:40:58,319
that's why it's not a header insertion i

912
00:40:56,640 --> 00:41:01,759
become the source

913
00:40:58,319 --> 00:41:04,960
i add the list of of hops

914
00:41:01,760 --> 00:41:07,680
between me as loose up to say and

915
00:41:04,960 --> 00:41:07,680
loose up 3

916
00:41:08,400 --> 00:41:11,680
and i keep the final destination as

917
00:41:10,079 --> 00:41:13,760
being the the end of the track

918
00:41:11,680 --> 00:41:14,960
if you do this quote unquote header

919
00:41:13,760 --> 00:41:18,319
insertion

920
00:41:14,960 --> 00:41:20,160
the last entry in in the outer header

921
00:41:18,319 --> 00:41:22,160
the final destination is always the same

922
00:41:20,160 --> 00:41:24,480
it's the final destination of the track

923
00:41:22,160 --> 00:41:26,399
the rpi is always the same it's the

924
00:41:24,480 --> 00:41:28,319
track id

925
00:41:26,400 --> 00:41:30,160
so if you do this this kind of weird

926
00:41:28,319 --> 00:41:32,000
quote-unquote editor insertion

927
00:41:30,160 --> 00:41:34,319
then you don't have to encapsulate the

928
00:41:32,000 --> 00:41:37,520
track within another track you just

929
00:41:34,319 --> 00:41:40,640
kind of reload the routing editor

930
00:41:37,520 --> 00:41:41,680
as you do uh from the source route

931
00:41:40,640 --> 00:41:43,200
between those hubs

932
00:41:41,680 --> 00:41:45,200
you just reload the routing editor to

933
00:41:43,200 --> 00:41:48,640
indicate the strict hops

934
00:41:45,200 --> 00:41:49,680
between the loose hubs that allows to

935
00:41:48,640 --> 00:41:52,640
keep signaling the

936
00:41:49,680 --> 00:41:55,759
the main track uh if you have to do

937
00:41:52,640 --> 00:41:58,799
cross or anything based on the track id

938
00:41:55,760 --> 00:42:00,560
so so whether we want to do that whether

939
00:41:58,800 --> 00:42:03,520
we can do that you know for

940
00:42:00,560 --> 00:42:05,279
you know the six-man perspective that's

941
00:42:03,520 --> 00:42:07,440
the discussion but the

942
00:42:05,280 --> 00:42:09,280
good thing if we we're doing this kind

943
00:42:07,440 --> 00:42:12,800
of rotting at our reload

944
00:42:09,280 --> 00:42:16,200
is that we could keep signaling the

945
00:42:12,800 --> 00:42:19,359
track id in the authorizer so and with

946
00:42:16,200 --> 00:42:22,160
rfc-8138 is very easy to do by the way

947
00:42:19,359 --> 00:42:22,160
okay next slide

948
00:42:25,600 --> 00:42:28,880
[Music]

949
00:42:27,440 --> 00:42:30,880
now we are looking at the same picture

950
00:42:28,880 --> 00:42:32,319
in storing motor this time the the pedal

951
00:42:30,880 --> 00:42:35,599
arrows are correct they're sent

952
00:42:32,319 --> 00:42:36,079
you know from the segment egress to the

953
00:42:35,599 --> 00:42:38,400
segment

954
00:42:36,079 --> 00:42:39,839
in grass and you see this node i call

955
00:42:38,400 --> 00:42:43,599
relay in the middle

956
00:42:39,839 --> 00:42:43,599
um so say the

957
00:42:43,760 --> 00:42:51,599
so the track is is uh indicated by the

958
00:42:48,160 --> 00:42:54,078
uh the final destination and and uh

959
00:42:51,599 --> 00:42:55,839
again uh local reaper instance id from

960
00:42:54,079 --> 00:42:59,920
the final destination

961
00:42:55,839 --> 00:43:03,599
uh as track id in the api

962
00:42:59,920 --> 00:43:06,880
um if you take the position of the relay

963
00:43:03,599 --> 00:43:09,200
the relay will receive a packet uh

964
00:43:06,880 --> 00:43:11,200
which final destination is is the

965
00:43:09,200 --> 00:43:13,759
defender destination and for which does

966
00:43:11,200 --> 00:43:17,520
a segment a track

967
00:43:13,760 --> 00:43:19,599
it already has the right api in it

968
00:43:17,520 --> 00:43:21,839
so it doesn't need to re-encapsulate we

969
00:43:19,599 --> 00:43:23,920
are pretty much in the same case as the

970
00:43:21,839 --> 00:43:25,359
one i made very at the very beginning of

971
00:43:23,920 --> 00:43:28,240
this discussion when

972
00:43:25,359 --> 00:43:28,960
we use a non-stirring main geoduck and

973
00:43:28,240 --> 00:43:32,879
we use

974
00:43:28,960 --> 00:43:35,760
projected uh dowels in storing mode

975
00:43:32,880 --> 00:43:38,960
to kind of shorten the rotting header we

976
00:43:35,760 --> 00:43:38,960
are in the same situation

977
00:43:39,480 --> 00:43:44,319
[Music]

978
00:43:42,079 --> 00:43:46,480
okay i'm sorry i i was not looking at

979
00:43:44,319 --> 00:43:49,440
the queue yes alvaro please

980
00:43:46,480 --> 00:43:49,760
sure hey no problem um so in in slightly

981
00:43:49,440 --> 00:43:52,800
uh

982
00:43:49,760 --> 00:43:57,599
if i understood you correctly you said

983
00:43:52,800 --> 00:44:00,960
that the intent is if you are the last

984
00:43:57,599 --> 00:44:04,480
segment or the last hop

985
00:44:00,960 --> 00:44:09,119
or something in the in the segment yeah

986
00:44:04,480 --> 00:44:12,240
then you're saying you can remove

987
00:44:09,119 --> 00:44:15,520
um the header

988
00:44:12,240 --> 00:44:17,520
so um i don't know if you have

989
00:44:15,520 --> 00:44:20,400
talked about this at six man and i know

990
00:44:17,520 --> 00:44:23,040
many of you follow six man

991
00:44:20,400 --> 00:44:23,760
i do follow six man i have followed all

992
00:44:23,040 --> 00:44:27,279
the uh

993
00:44:23,760 --> 00:44:29,599
srv6 discussions about header insertion

994
00:44:27,280 --> 00:44:31,920
uh and michael and i we are very very

995
00:44:29,599 --> 00:44:34,240
familiar with these discussions

996
00:44:31,920 --> 00:44:36,000
okay good good that's what i was going

997
00:44:34,240 --> 00:44:39,279
to mention that uh it would be

998
00:44:36,000 --> 00:44:40,640
very good if you look at everything that

999
00:44:39,280 --> 00:44:42,160
happened

1000
00:44:40,640 --> 00:44:43,680
repeat it again you want this thing

1001
00:44:42,160 --> 00:44:44,640
because if ross says we don't want this

1002
00:44:43,680 --> 00:44:46,560
thing we're happy with the

1003
00:44:44,640 --> 00:44:48,960
re-encapsulation for each segment

1004
00:44:46,560 --> 00:44:50,400
then they don't even bother with six men

1005
00:44:48,960 --> 00:44:53,880
now

1006
00:44:50,400 --> 00:44:55,599
if the group finds that avoiding the

1007
00:44:53,880 --> 00:44:58,720
re-encapsulation

1008
00:44:55,599 --> 00:45:00,079
and doing this form of header insertion

1009
00:44:58,720 --> 00:45:01,520
which is not the one that

1010
00:45:00,079 --> 00:45:04,079
six-man did not like it's kind of

1011
00:45:01,520 --> 00:45:06,160
different um

1012
00:45:04,079 --> 00:45:07,760
then we can go and fight at six men or

1013
00:45:06,160 --> 00:45:09,920
decide what we do

1014
00:45:07,760 --> 00:45:11,440
the the main difference with this and

1015
00:45:09,920 --> 00:45:13,599
six man is

1016
00:45:11,440 --> 00:45:14,480
okay i need to maybe i should have had

1017
00:45:13,599 --> 00:45:17,359
the picture but

1018
00:45:14,480 --> 00:45:19,359
figure that between lose hop one and

1019
00:45:17,359 --> 00:45:22,720
lose hop too

1020
00:45:19,359 --> 00:45:22,720
you have a sequence of nodes

1021
00:45:22,880 --> 00:45:27,040
but the the routing editor would

1022
00:45:24,800 --> 00:45:28,560
basically say this sequence of node and

1023
00:45:27,040 --> 00:45:31,279
the last entry in the routing editor

1024
00:45:28,560 --> 00:45:33,040
would be the destination

1025
00:45:31,280 --> 00:45:34,960
the final destination of the track

1026
00:45:33,040 --> 00:45:36,079
because we always want to signal the

1027
00:45:34,960 --> 00:45:38,800
track

1028
00:45:36,079 --> 00:45:39,839
by being the final destination as the

1029
00:45:38,800 --> 00:45:42,960
namespace

1030
00:45:39,839 --> 00:45:45,839
and the api being a local replace

1031
00:45:42,960 --> 00:45:48,000
ripple instance id in that space so we

1032
00:45:45,839 --> 00:45:49,920
need the final destination

1033
00:45:48,000 --> 00:45:51,920
that is the final destination the guy on

1034
00:45:49,920 --> 00:45:54,960
the right for the right on this picture

1035
00:45:51,920 --> 00:45:57,920
the best now when

1036
00:45:54,960 --> 00:46:00,160
lh2 and at this point for this drawing

1037
00:45:57,920 --> 00:46:00,880
lh2 would need to be the egress of truck

1038
00:46:00,160 --> 00:46:04,000
one

1039
00:46:00,880 --> 00:46:07,280
so not to neighbor strictly the egress

1040
00:46:04,000 --> 00:46:09,440
nh2 gets the packet and all the routing

1041
00:46:07,280 --> 00:46:11,599
either has been consumed

1042
00:46:09,440 --> 00:46:14,160
but him right i mean he gets the packet

1043
00:46:11,599 --> 00:46:17,200
so it's consuming it

1044
00:46:14,160 --> 00:46:19,359
and next there is the best final test so

1045
00:46:17,200 --> 00:46:23,279
now so now it's loose between me

1046
00:46:19,359 --> 00:46:23,839
being lh2 and dust and the operation

1047
00:46:23,280 --> 00:46:27,760
will be

1048
00:46:23,839 --> 00:46:29,920
okay i remove this

1049
00:46:27,760 --> 00:46:31,680
routing it this encapsulation all

1050
00:46:29,920 --> 00:46:33,280
together as if i was the final

1051
00:46:31,680 --> 00:46:33,598
destination but i'm not because there is

1052
00:46:33,280 --> 00:46:36,079
death

1053
00:46:33,599 --> 00:46:38,319
on my right but i remove this routing

1054
00:46:36,079 --> 00:46:40,319
this this encapsulation and i do a new

1055
00:46:38,319 --> 00:46:44,800
encapsulation

1056
00:46:40,319 --> 00:46:47,759
where i lh2 i'm source

1057
00:46:44,800 --> 00:46:49,119
and now there is this new list of right

1058
00:46:47,760 --> 00:46:53,200
writing and entries

1059
00:46:49,119 --> 00:46:56,079
and the last is again destination

1060
00:46:53,200 --> 00:46:57,279
so we we remove a writing a header and

1061
00:46:56,079 --> 00:47:01,200
we add a new one

1062
00:46:57,280 --> 00:47:03,680
instead it's just that we were not

1063
00:47:01,200 --> 00:47:05,439
the final destination of that of that

1064
00:47:03,680 --> 00:47:08,960
writing that we were the

1065
00:47:05,440 --> 00:47:10,079
opinion teammate hub but we still take

1066
00:47:08,960 --> 00:47:12,319
the liberty

1067
00:47:10,079 --> 00:47:15,680
of removing the outer encapsulation

1068
00:47:12,319 --> 00:47:19,599
placing a new outer encapsulation

1069
00:47:15,680 --> 00:47:22,720
with the same destination ultimate node

1070
00:47:19,599 --> 00:47:25,040
but now lh2 a source

1071
00:47:22,720 --> 00:47:26,799
and then this this uh number of writing

1072
00:47:25,040 --> 00:47:28,640
editors so that's why it's not

1073
00:47:26,800 --> 00:47:30,319
the header insertion because now the

1074
00:47:28,640 --> 00:47:32,160
source has changed

1075
00:47:30,319 --> 00:47:33,839
the source of the encapsulation becomes

1076
00:47:32,160 --> 00:47:35,759
lh2

1077
00:47:33,839 --> 00:47:37,680
so all those discussions at six man

1078
00:47:35,760 --> 00:47:40,319
saying hey um

1079
00:47:37,680 --> 00:47:41,680
you cannot track who did this right when

1080
00:47:40,319 --> 00:47:43,359
there is a hidden insertion

1081
00:47:41,680 --> 00:47:44,960
you it's anonymous you don't know who

1082
00:47:43,359 --> 00:47:46,000
did it you cannot send the packet back

1083
00:47:44,960 --> 00:47:47,920
to that

1084
00:47:46,000 --> 00:47:49,839
originator if there is a prime that's

1085
00:47:47,920 --> 00:47:52,800
not true we we

1086
00:47:49,839 --> 00:47:53,440
changed the source we know who did it

1087
00:47:52,800 --> 00:47:55,280
right so

1088
00:47:53,440 --> 00:47:57,760
um the discussion six man with spring

1089
00:47:55,280 --> 00:47:59,440
was more about removal of the header

1090
00:47:57,760 --> 00:48:00,960
that's why i was asking about the if you

1091
00:47:59,440 --> 00:48:02,880
were the next last hop or if you're

1092
00:48:00,960 --> 00:48:05,680
modifying the header somewhere else

1093
00:48:02,880 --> 00:48:06,319
in any case the important thing here is

1094
00:48:05,680 --> 00:48:08,640
go

1095
00:48:06,319 --> 00:48:10,240
check some of the discussion and some of

1096
00:48:08,640 --> 00:48:13,520
the resolution to that

1097
00:48:10,240 --> 00:48:16,879
which has a lot to do with how

1098
00:48:13,520 --> 00:48:18,400
you can or not interpret 8200

1099
00:48:16,880 --> 00:48:20,720
but any case you said the important

1100
00:48:18,400 --> 00:48:22,240
thing is let's first figure out if we

1101
00:48:20,720 --> 00:48:25,200
really want this or not

1102
00:48:22,240 --> 00:48:27,279
yeah exactly exactly right so the drive

1103
00:48:25,200 --> 00:48:28,558
still has the capability to do what's

1104
00:48:27,280 --> 00:48:30,640
written there which is kind of the

1105
00:48:28,559 --> 00:48:33,280
default if you like you you

1106
00:48:30,640 --> 00:48:34,480
the degrees of the intermediate segment

1107
00:48:33,280 --> 00:48:36,319
is the

1108
00:48:34,480 --> 00:48:37,520
next loose hub or the node just before

1109
00:48:36,319 --> 00:48:40,720
that

1110
00:48:37,520 --> 00:48:41,200
decapsulates re-encapsulates if you do

1111
00:48:40,720 --> 00:48:42,879
that

1112
00:48:41,200 --> 00:48:44,879
then the author header signals the

1113
00:48:42,880 --> 00:48:46,800
segment not the track so basically a

1114
00:48:44,880 --> 00:48:49,440
track within the track

1115
00:48:46,800 --> 00:48:50,640
if we want to to avoid that then we

1116
00:48:49,440 --> 00:48:54,880
would need to do this

1117
00:48:50,640 --> 00:48:57,440
pin uh previous uh

1118
00:48:54,880 --> 00:48:58,480
last routing in the hop re-encapsulation

1119
00:48:57,440 --> 00:49:02,640
game that i was

1120
00:48:58,480 --> 00:49:04,640
just discussing next slide please

1121
00:49:02,640 --> 00:49:06,000
because i don't have much more time so

1122
00:49:04,640 --> 00:49:08,960
so um

1123
00:49:06,000 --> 00:49:10,640
what i was saying here is the the main

1124
00:49:08,960 --> 00:49:12,960
thing is

1125
00:49:10,640 --> 00:49:14,240
the the the relay doesn't need to change

1126
00:49:12,960 --> 00:49:16,640
the api the api

1127
00:49:14,240 --> 00:49:18,319
is the one of the main track so it

1128
00:49:16,640 --> 00:49:19,440
doesn't need to encapsulate it's just

1129
00:49:18,319 --> 00:49:22,079
forwarding

1130
00:49:19,440 --> 00:49:23,119
you just have a routing table which was

1131
00:49:22,079 --> 00:49:26,880
populated by

1132
00:49:23,119 --> 00:49:29,760
p902 whereas along the segment one

1133
00:49:26,880 --> 00:49:30,480
it was populated by pdi1 but the routing

1134
00:49:29,760 --> 00:49:32,640
entries

1135
00:49:30,480 --> 00:49:34,000
from tracking grass to tracking grass

1136
00:49:32,640 --> 00:49:36,319
they look the same it's just not the

1137
00:49:34,000 --> 00:49:37,680
same pedal that has signaled them

1138
00:49:36,319 --> 00:49:40,240
so there is no decapsulation

1139
00:49:37,680 --> 00:49:40,879
re-encapsulation uh and that's still the

1140
00:49:40,240 --> 00:49:42,640
question of

1141
00:49:40,880 --> 00:49:44,240
could there be a loop somewhere it's

1142
00:49:42,640 --> 00:49:46,000
really the control of the

1143
00:49:44,240 --> 00:49:47,839
of the root make sure that the root did

1144
00:49:46,000 --> 00:49:50,079
not do crazy things but it could be

1145
00:49:47,839 --> 00:49:52,640
loops if you know it ties the segments

1146
00:49:50,079 --> 00:49:58,800
the wrong way

1147
00:49:52,640 --> 00:50:02,558
next slide yeah and that

1148
00:49:58,800 --> 00:50:03,920
was actually uh the slide where we

1149
00:50:02,559 --> 00:50:07,359
should have discussed this

1150
00:50:03,920 --> 00:50:10,000
um this thing with alvaro um

1151
00:50:07,359 --> 00:50:11,359
compared to two slides ago where we did

1152
00:50:10,000 --> 00:50:13,200
the non-story mode

1153
00:50:11,359 --> 00:50:14,558
with tracking track now that's where i

1154
00:50:13,200 --> 00:50:17,680
discussed this uh

1155
00:50:14,559 --> 00:50:21,040
srh reload operation where you you

1156
00:50:17,680 --> 00:50:22,799
re-bump a new source and uh which is the

1157
00:50:21,040 --> 00:50:24,800
relay and

1158
00:50:22,800 --> 00:50:26,559
a new sequence of writing editors with

1159
00:50:24,800 --> 00:50:28,079
the same final distinction which is the

1160
00:50:26,559 --> 00:50:30,559
track egress

1161
00:50:28,079 --> 00:50:30,559
next slide

1162
00:50:32,160 --> 00:50:36,240
now we had a number of discussion points

1163
00:50:34,640 --> 00:50:40,400
on the mainland list

1164
00:50:36,240 --> 00:50:42,640
the first one is the lifetime unit

1165
00:50:40,400 --> 00:50:43,839
to show so right now we are saying uh

1166
00:50:42,640 --> 00:50:46,160
ripple has a lifetime

1167
00:50:43,839 --> 00:50:47,119
and a lifetime unit in the configuration

1168
00:50:46,160 --> 00:50:49,759
option

1169
00:50:47,119 --> 00:50:51,839
and so everybody everything uh is kind

1170
00:50:49,760 --> 00:50:53,440
of timed with this lifetime unit so we

1171
00:50:51,839 --> 00:50:55,680
can express the lifetime

1172
00:50:53,440 --> 00:50:58,240
in a more concise way because you cannot

1173
00:50:55,680 --> 00:51:00,720
multiply it by the lifetime unit

1174
00:50:58,240 --> 00:51:01,520
and uh women as an implementer says you

1175
00:51:00,720 --> 00:51:03,759
know maybe

1176
00:51:01,520 --> 00:51:05,119
for for the projected path we want a

1177
00:51:03,760 --> 00:51:08,000
different kind of unit

1178
00:51:05,119 --> 00:51:09,520
could you signal it in the pdr request

1179
00:51:08,000 --> 00:51:11,920
and i guess that can be

1180
00:51:09,520 --> 00:51:14,160
done uh we probably would need to change

1181
00:51:11,920 --> 00:51:14,960
the pdow format as well because we

1182
00:51:14,160 --> 00:51:18,078
probably would

1183
00:51:14,960 --> 00:51:19,359
also want uh so the pdf right now is is

1184
00:51:18,079 --> 00:51:22,880
the same format as now

1185
00:51:19,359 --> 00:51:23,520
but do we want to to express a lifetime

1186
00:51:22,880 --> 00:51:26,319
in the in

1187
00:51:23,520 --> 00:51:27,040
in there that would be different form

1188
00:51:26,319 --> 00:51:28,720
that that's

1189
00:51:27,040 --> 00:51:29,920
first question i have nothing against it

1190
00:51:28,720 --> 00:51:32,640
i would like to see a discussion

1191
00:51:29,920 --> 00:51:32,640
remaining last

1192
00:51:33,200 --> 00:51:37,598
um second question is since the track id

1193
00:51:35,520 --> 00:51:39,200
is really a ripple instance id

1194
00:51:37,599 --> 00:51:41,119
how do we differentiate when we receive

1195
00:51:39,200 --> 00:51:43,520
a packet from

1196
00:51:41,119 --> 00:51:44,400
something which is a longer pdio versus

1197
00:51:43,520 --> 00:51:49,359
something which is

1198
00:51:44,400 --> 00:51:50,720
a longer local ripple instance and

1199
00:51:49,359 --> 00:51:53,119
i don't see that it should make a

1200
00:51:50,720 --> 00:51:54,000
difference but if there is a good

1201
00:51:53,119 --> 00:51:56,079
argument that

1202
00:51:54,000 --> 00:51:57,520
uh because it's the same thing enough

1203
00:51:56,079 --> 00:51:58,960
but if there is a good argument that it

1204
00:51:57,520 --> 00:52:02,240
should make a difference

1205
00:51:58,960 --> 00:52:05,839
then uh maybe we we would need um

1206
00:52:02,240 --> 00:52:08,558
something in the api to signal

1207
00:52:05,839 --> 00:52:10,799
that it's it's a projected path there is

1208
00:52:08,559 --> 00:52:11,680
one bit left in the api so we could if

1209
00:52:10,800 --> 00:52:12,880
we wanted to

1210
00:52:11,680 --> 00:52:15,359
but then again we'd like to see the

1211
00:52:12,880 --> 00:52:18,960
meaning this react to this

1212
00:52:15,359 --> 00:52:21,920
um main problem the main thing that

1213
00:52:18,960 --> 00:52:23,280
could lead to big changes in document is

1214
00:52:21,920 --> 00:52:25,760
uh women is asking us

1215
00:52:23,280 --> 00:52:26,480
if we could make this the track or

1216
00:52:25,760 --> 00:52:29,920
segment

1217
00:52:26,480 --> 00:52:32,880
bi-directional and

1218
00:52:29,920 --> 00:52:34,400
this impacts a lot of things in

1219
00:52:32,880 --> 00:52:38,319
particular

1220
00:52:34,400 --> 00:52:41,200
the fact that we signal the track id

1221
00:52:38,319 --> 00:52:43,119
with the destination of the packet if we

1222
00:52:41,200 --> 00:52:44,799
make it bidirectional it could be either

1223
00:52:43,119 --> 00:52:45,599
the source or the destination of the

1224
00:52:44,800 --> 00:52:48,240
packet

1225
00:52:45,599 --> 00:52:50,559
send your dag basically if you want but

1226
00:52:48,240 --> 00:52:50,558
um

1227
00:52:50,720 --> 00:52:54,480
you know recognized by either the source

1228
00:52:53,440 --> 00:52:56,800
of destination repo

1229
00:52:54,480 --> 00:52:57,920
lows that so for the packet forwarding

1230
00:52:56,800 --> 00:52:59,440
we would know

1231
00:52:57,920 --> 00:53:01,920
because there is this bit in the api

1232
00:52:59,440 --> 00:53:03,599
which says uh the namespace is taken

1233
00:53:01,920 --> 00:53:04,880
from the source or the destination of

1234
00:53:03,599 --> 00:53:08,480
the packet for local

1235
00:53:04,880 --> 00:53:11,200
reaper instance uh it's more

1236
00:53:08,480 --> 00:53:12,160
things like this this other change that

1237
00:53:11,200 --> 00:53:15,118
i said we

1238
00:53:12,160 --> 00:53:15,520
actually we just discussed with alvaro

1239
00:53:15,119 --> 00:53:17,119
um

1240
00:53:15,520 --> 00:53:18,960
if we do that kind of change you saw

1241
00:53:17,119 --> 00:53:20,960
that the source of the packet changes

1242
00:53:18,960 --> 00:53:22,720
now if the source of the packet is is

1243
00:53:20,960 --> 00:53:23,760
describing the track we cannot do that

1244
00:53:22,720 --> 00:53:25,359
change anymore

1245
00:53:23,760 --> 00:53:26,800
so that's why i said you know first

1246
00:53:25,359 --> 00:53:28,000
let's agree on what we want and then

1247
00:53:26,800 --> 00:53:30,960
we'll go to six man to get

1248
00:53:28,000 --> 00:53:32,800
it if we can but um if for instance if

1249
00:53:30,960 --> 00:53:36,240
you want to signal a packet

1250
00:53:32,800 --> 00:53:38,559
going forward or backward along a track

1251
00:53:36,240 --> 00:53:40,000
then the track could be signaled by the

1252
00:53:38,559 --> 00:53:43,200
source or the destination

1253
00:53:40,000 --> 00:53:44,319
if we are taking that path um that

1254
00:53:43,200 --> 00:53:46,319
change is

1255
00:53:44,319 --> 00:53:50,240
typically this aspect of being able to

1256
00:53:46,319 --> 00:53:50,240
stitch or to reload rotting headers

1257
00:53:50,880 --> 00:53:57,440
and then suggestion to add a flow uh

1258
00:53:54,240 --> 00:53:59,200
yeah we will we cannot flow certainly to

1259
00:53:57,440 --> 00:54:02,000
make things clearer

1260
00:53:59,200 --> 00:54:03,439
a clear thing is is the pida and pidawak

1261
00:54:02,000 --> 00:54:04,319
which are generated because there is a

1262
00:54:03,440 --> 00:54:07,680
pdr

1263
00:54:04,319 --> 00:54:10,000
pack uh pdr request message um

1264
00:54:07,680 --> 00:54:10,879
they don't live on the same time that

1265
00:54:10,000 --> 00:54:13,119
was uh

1266
00:54:10,880 --> 00:54:14,079
clearly expressed thanks to discussions

1267
00:54:13,119 --> 00:54:17,119
we had

1268
00:54:14,079 --> 00:54:20,160
um the route is is free

1269
00:54:17,119 --> 00:54:21,920
within for given pdr which is a contract

1270
00:54:20,160 --> 00:54:24,160
to build a track it's free to

1271
00:54:21,920 --> 00:54:25,920
change the segments use lifetimes for

1272
00:54:24,160 --> 00:54:28,480
the segments which are not the same as

1273
00:54:25,920 --> 00:54:29,839
the the lifetime that is granted for the

1274
00:54:28,480 --> 00:54:33,440
pdr

1275
00:54:29,839 --> 00:54:38,960
it's completely decoupled

1276
00:54:33,440 --> 00:54:42,640
next slide

1277
00:54:38,960 --> 00:54:44,240
so need help need help um loop avoidance

1278
00:54:42,640 --> 00:54:47,200
needs to be things through

1279
00:54:44,240 --> 00:54:48,160
there was also this request that um the

1280
00:54:47,200 --> 00:54:50,000
pdr

1281
00:54:48,160 --> 00:54:51,520
for now it's always the source of the

1282
00:54:50,000 --> 00:54:54,960
ingress of the track

1283
00:54:51,520 --> 00:54:56,000
could we send a pdr for which we are the

1284
00:54:54,960 --> 00:54:57,839
destination

1285
00:54:56,000 --> 00:54:58,960
or could we send the pdr for which we

1286
00:54:57,839 --> 00:55:00,160
are neither the source or the

1287
00:54:58,960 --> 00:55:01,680
destination

1288
00:55:00,160 --> 00:55:04,839
in which case we will need to be able to

1289
00:55:01,680 --> 00:55:07,279
signal both in the pdr which we can

1290
00:55:04,839 --> 00:55:09,200
today uh how do we maintain

1291
00:55:07,280 --> 00:55:10,720
the availability of the siblings so some

1292
00:55:09,200 --> 00:55:14,078
words about uh

1293
00:55:10,720 --> 00:55:16,558
using rfc855 or something or you know

1294
00:55:14,079 --> 00:55:18,000
ripple says you can use nd to monitor

1295
00:55:16,559 --> 00:55:20,319
your neighbors

1296
00:55:18,000 --> 00:55:21,040
uh kind of that's missing for for

1297
00:55:20,319 --> 00:55:23,920
neighbor for

1298
00:55:21,040 --> 00:55:23,920
for siblings

1299
00:55:24,240 --> 00:55:29,118
and as i said earlier um do we want the

1300
00:55:27,440 --> 00:55:30,160
ingress and egress to be listed in the

1301
00:55:29,119 --> 00:55:32,880
rpos

1302
00:55:30,160 --> 00:55:34,720
uh is the egress an implicit destination

1303
00:55:32,880 --> 00:55:36,559
of the track

1304
00:55:34,720 --> 00:55:38,558
there's no text about that but we we

1305
00:55:36,559 --> 00:55:40,240
need we want to be very very specific if

1306
00:55:38,559 --> 00:55:42,160
the ingress and the egress

1307
00:55:40,240 --> 00:55:43,279
are listed right now the text says they

1308
00:55:42,160 --> 00:55:46,160
are uh

1309
00:55:43,280 --> 00:55:47,119
like i said if you uh if you want to be

1310
00:55:46,160 --> 00:55:50,480
on the full

1311
00:55:47,119 --> 00:55:53,520
rpo um so that

1312
00:55:50,480 --> 00:55:55,040
the the encapsulator can use it as is

1313
00:55:53,520 --> 00:55:56,640
and the ingress is in there you would

1314
00:55:55,040 --> 00:55:58,558
have to consume it before it actually

1315
00:55:56,640 --> 00:56:01,520
sends the packet

1316
00:55:58,559 --> 00:56:02,000
and that's pretty much it i hope you see

1317
00:56:01,520 --> 00:56:04,240
that there's

1318
00:56:02,000 --> 00:56:05,200
still a lot of work to be done there's

1319
00:56:04,240 --> 00:56:09,118
there's still

1320
00:56:05,200 --> 00:56:11,520
some a number of complexities um

1321
00:56:09,119 --> 00:56:14,000
and i would like to ask the chairs to to

1322
00:56:11,520 --> 00:56:16,480
do something about you know um

1323
00:56:14,000 --> 00:56:18,400
maybe forming a team or something to

1324
00:56:16,480 --> 00:56:20,559
complete this document because

1325
00:56:18,400 --> 00:56:22,799
i'm reaching the limits of what you can

1326
00:56:20,559 --> 00:56:23,920
do by yourself or with very limited

1327
00:56:22,799 --> 00:56:26,799
feedback

1328
00:56:23,920 --> 00:56:27,839
so i would appreciate to uh to have a a

1329
00:56:26,799 --> 00:56:31,839
stronger team

1330
00:56:27,839 --> 00:56:31,839
to complete this document

1331
00:56:32,319 --> 00:56:36,079
and that's it for me any question

1332
00:56:40,960 --> 00:56:47,839
michael well

1333
00:56:44,240 --> 00:56:49,598
um i guess the the changes to p dao is

1334
00:56:47,839 --> 00:56:51,279
that i guess i don't quite didn't quite

1335
00:56:49,599 --> 00:56:53,119
realize they were happening

1336
00:56:51,280 --> 00:56:55,280
um so i think there's probably a lot of

1337
00:56:53,119 --> 00:56:59,839
quiet because i think that we're sort of

1338
00:56:55,280 --> 00:56:59,839
trying to approaches

1339
00:57:05,599 --> 00:57:08,960
i think we're going to need some another

1340
00:57:08,000 --> 00:57:11,599
another

1341
00:57:08,960 --> 00:57:13,040
session with the diagrams i'm kind of

1342
00:57:11,599 --> 00:57:14,720
happy this is on youtube i'm going to

1343
00:57:13,040 --> 00:57:18,400
have to review it again

1344
00:57:14,720 --> 00:57:18,879
in slower um to be able to do things i

1345
00:57:18,400 --> 00:57:23,280
suspect

1346
00:57:18,880 --> 00:57:25,280
other people have the same same issue um

1347
00:57:23,280 --> 00:57:26,720
yes i could improve the slides but i

1348
00:57:25,280 --> 00:57:27,599
need more time maybe we could have an

1349
00:57:26,720 --> 00:57:29,919
interim

1350
00:57:27,599 --> 00:57:31,599
uh that would be like uh where and i

1351
00:57:29,920 --> 00:57:33,440
would build more slides and explain

1352
00:57:31,599 --> 00:57:35,440
more what goes into the headers and

1353
00:57:33,440 --> 00:57:36,079
things while explaining like well

1354
00:57:35,440 --> 00:57:38,319
because

1355
00:57:36,079 --> 00:57:40,240
that worked for you i'm trying to say

1356
00:57:38,319 --> 00:57:42,480
that before we can catch up and ask you

1357
00:57:40,240 --> 00:57:43,598
intelligent questions i think

1358
00:57:42,480 --> 00:57:46,160
we're going to have to do some more

1359
00:57:43,599 --> 00:57:47,839
homework um i said i didn't quite

1360
00:57:46,160 --> 00:57:51,759
realize this was happening to the

1361
00:57:47,839 --> 00:57:53,359
document but i think your slides are

1362
00:57:51,760 --> 00:57:54,079
quite good i just need to absorb it

1363
00:57:53,359 --> 00:57:58,078
probably

1364
00:57:54,079 --> 00:58:00,400
abs i'll probably walk it through slowly

1365
00:57:58,079 --> 00:58:01,599
once i see it on youtube again and then

1366
00:58:00,400 --> 00:58:05,280
yeah we do need to have an

1367
00:58:01,599 --> 00:58:07,920
interim to discuss this i agree it's

1368
00:58:05,280 --> 00:58:09,200
you know it might look overly complex

1369
00:58:07,920 --> 00:58:11,599
but if you think at it

1370
00:58:09,200 --> 00:58:12,640
we're adding a new form of repo we have

1371
00:58:11,599 --> 00:58:14,960
aodv repo

1372
00:58:12,640 --> 00:58:17,118
which is like reactive we have

1373
00:58:14,960 --> 00:58:20,000
traditional ripple which is proactive

1374
00:58:17,119 --> 00:58:21,200
and now we are we have sdn ripple which

1375
00:58:20,000 --> 00:58:23,200
is controller

1376
00:58:21,200 --> 00:58:24,879
and and you can expect that there is

1377
00:58:23,200 --> 00:58:26,319
complexity in this document just like

1378
00:58:24,880 --> 00:58:28,240
there is complexity in repo

1379
00:58:26,319 --> 00:58:29,599
what we want to to simplify that to the

1380
00:58:28,240 --> 00:58:33,439
maximum but

1381
00:58:29,599 --> 00:58:36,480
it's kind of normal that

1382
00:58:33,440 --> 00:58:38,720
it's not easy the

1383
00:58:36,480 --> 00:58:39,760
the other thing is uh initially it was a

1384
00:58:38,720 --> 00:58:42,078
serial path

1385
00:58:39,760 --> 00:58:42,880
like we were compressing the source

1386
00:58:42,079 --> 00:58:45,280
rotator

1387
00:58:42,880 --> 00:58:45,920
of the main instance now we are pushing

1388
00:58:45,280 --> 00:58:49,119
tracks

1389
00:58:45,920 --> 00:58:51,280
in the network and as we do this

1390
00:58:49,119 --> 00:58:52,559
we we look at the 60s architecture we

1391
00:58:51,280 --> 00:58:54,400
look at row

1392
00:58:52,559 --> 00:58:56,160
and so we want to do something which is

1393
00:58:54,400 --> 00:58:57,839
a lot more than a serial path we want

1394
00:58:56,160 --> 00:59:01,118
this track to be able to do

1395
00:58:57,839 --> 00:59:03,040
replication elimination or all the games

1396
00:59:01,119 --> 00:59:04,400
and that's why you know you have all

1397
00:59:03,040 --> 00:59:06,799
this segment uh

1398
00:59:04,400 --> 00:59:08,640
i in my drawing you have two serial

1399
00:59:06,799 --> 00:59:10,160
segments but you could think of them as

1400
00:59:08,640 --> 00:59:13,920
forming a geodag

1401
00:59:10,160 --> 00:59:16,558
and so yeah there's more complexity that

1402
00:59:13,920 --> 00:59:18,160
meets the eye to get this sdn for ripple

1403
00:59:16,559 --> 00:59:20,799
but at the end of the path you've got

1404
00:59:18,160 --> 00:59:23,200
all the you know the benefits of raw

1405
00:59:20,799 --> 00:59:24,960
and in the 60s architecture that you can

1406
00:59:23,200 --> 00:59:33,040
get

1407
00:59:24,960 --> 00:59:35,839
like the multipath you know raw

1408
00:59:33,040 --> 00:59:36,480
um i guess that's it your chairs for

1409
00:59:35,839 --> 00:59:40,160
this

1410
00:59:36,480 --> 00:59:42,559
talk okay uh you've pretty much

1411
00:59:40,160 --> 00:59:43,839
eaten up all the time that was allocated

1412
00:59:42,559 --> 00:59:46,319
to you so

1413
00:59:43,839 --> 00:59:47,119
yes no surprise no pressure but if you

1414
00:59:46,319 --> 00:59:48,880
can

1415
00:59:47,119 --> 00:59:50,400
go for the other let's just keep through

1416
00:59:48,880 --> 00:59:54,160
this

1417
00:59:50,400 --> 00:59:57,200
yeah yeah let's let's just keep stroking

1418
00:59:54,160 --> 00:59:59,279
so on our leaves so

1419
00:59:57,200 --> 01:00:01,118
alvaro is with us i can only next

1420
00:59:59,280 --> 01:00:02,319
eyepiece i can only thank alvaro we've

1421
01:00:01,119 --> 01:00:05,680
been through

1422
01:00:02,319 --> 01:00:07,359
uh excruciating details in this document

1423
01:00:05,680 --> 01:00:10,319
to to clean it up

1424
01:00:07,359 --> 01:00:12,480
and alvaro has been has been doing like

1425
01:00:10,319 --> 01:00:16,000
not just one but two or three uh

1426
01:00:12,480 --> 01:00:19,280
reviews till we get things okay and then

1427
01:00:16,000 --> 01:00:19,920
um the main discussion that's still

1428
01:00:19,280 --> 01:00:22,400
there

1429
01:00:19,920 --> 01:00:23,440
is the one that we share with user free

1430
01:00:22,400 --> 01:00:27,520
info and with

1431
01:00:23,440 --> 01:00:30,000
uh uh turn on rfc8138 which is

1432
01:00:27,520 --> 01:00:32,640
how do we exactly word the fact that we

1433
01:00:30,000 --> 01:00:36,559
want to reuse the configuration bits

1434
01:00:32,640 --> 01:00:37,680
um for map seven which is for any map

1435
01:00:36,559 --> 01:00:39,359
extension

1436
01:00:37,680 --> 01:00:40,879
so we've been through that discussion as

1437
01:00:39,359 --> 01:00:42,880
part of this draft and then we we

1438
01:00:40,880 --> 01:00:44,960
actually decided that use of ripple info

1439
01:00:42,880 --> 01:00:47,680
would would be the normative place where

1440
01:00:44,960 --> 01:00:49,599
most of this takes place there was

1441
01:00:47,680 --> 01:00:52,240
restructuring there was a change of

1442
01:00:49,599 --> 01:00:52,720
uh what it updates so now we clarify it

1443
01:00:52,240 --> 01:00:57,200
updates

1444
01:00:52,720 --> 01:00:59,598
rsc 6775 and it does not update in pdow

1445
01:00:57,200 --> 01:01:01,759
np dao will be the place where the

1446
01:00:59,599 --> 01:01:03,520
status 1 will be defined but the change

1447
01:01:01,760 --> 01:01:04,559
of a ripple status which is used by

1448
01:01:03,520 --> 01:01:10,480
empidao

1449
01:01:04,559 --> 01:01:13,119
will be in here next slide

1450
01:01:10,480 --> 01:01:13,119
next slide please

1451
01:01:14,559 --> 01:01:19,119
um so oh by the way unawareness that you

1452
01:01:18,160 --> 01:01:22,480
mentioned it

1453
01:01:19,119 --> 01:01:24,799
is now uh pushed for itf

1454
01:01:22,480 --> 01:01:26,720
score or something and so it will go

1455
01:01:24,799 --> 01:01:29,920
through the asg

1456
01:01:26,720 --> 01:01:34,240
uh rfc8138 turn on

1457
01:01:29,920 --> 01:01:34,240
went through the isg next slide please

1458
01:01:34,880 --> 01:01:39,119
so through the shg circle we made like

1459
01:01:37,760 --> 01:01:42,000
nine updates

1460
01:01:39,119 --> 01:01:44,000
and the the only thing which is kind of

1461
01:01:42,000 --> 01:01:44,480
i think it's clarified now but i've not

1462
01:01:44,000 --> 01:01:47,760
seen

1463
01:01:44,480 --> 01:01:52,319
uh benjamin uh removing his discuss

1464
01:01:47,760 --> 01:01:54,240
is uh this mob 7 discussion so for each

1465
01:01:52,319 --> 01:01:54,558
of the three drafts so that's this one

1466
01:01:54,240 --> 01:01:56,720
that's

1467
01:01:54,559 --> 01:01:59,039
the alif and that user free info you

1468
01:01:56,720 --> 01:02:01,520
must say what the flag becomes

1469
01:01:59,039 --> 01:02:03,760
for map seven because we say if if the

1470
01:02:01,520 --> 01:02:05,759
map field is set to or once

1471
01:02:03,760 --> 01:02:07,599
then the definition of the flags does

1472
01:02:05,760 --> 01:02:09,760
not apply which means that you have to

1473
01:02:07,599 --> 01:02:11,760
tell the implementation today

1474
01:02:09,760 --> 01:02:13,359
what they do if they test map and mop

1475
01:02:11,760 --> 01:02:16,480
equals seven

1476
01:02:13,359 --> 01:02:20,000
for this particular

1477
01:02:16,480 --> 01:02:24,079
spec we said if sixlapan

1478
01:02:20,000 --> 01:02:26,400
hc is is active on the link then rfc8138

1479
01:02:24,079 --> 01:02:31,599
will also be active on those links

1480
01:02:26,400 --> 01:02:31,599
and only if next slide

1481
01:02:32,480 --> 01:02:37,119
oh you one is missing well there was

1482
01:02:35,119 --> 01:02:38,720
supposed to be a slide on

1483
01:02:37,119 --> 01:02:41,119
with the with the status i don't know

1484
01:02:38,720 --> 01:02:43,200
where it's called but basically it shows

1485
01:02:41,119 --> 01:02:43,839
that it's all green but for benjamin

1486
01:02:43,200 --> 01:02:47,200
cadeck's

1487
01:02:43,839 --> 01:02:48,799
uh review so maybe i forgot to push it i

1488
01:02:47,200 --> 01:02:50,160
don't know but

1489
01:02:48,799 --> 01:02:52,720
alvaro if you have any news from

1490
01:02:50,160 --> 01:02:52,720
benjamin

1491
01:02:57,760 --> 01:03:03,839
no i think he's just waiting to see the

1492
01:03:01,039 --> 01:03:05,200
actual document where we talk about mob

1493
01:03:03,839 --> 01:03:08,240
seven

1494
01:03:05,200 --> 01:03:10,319
which um yes

1495
01:03:08,240 --> 01:03:11,598
so when that comes in i think it's gonna

1496
01:03:10,319 --> 01:03:15,038
clear so

1497
01:03:11,599 --> 01:03:16,960
we should be okay okay and that's it for

1498
01:03:15,039 --> 01:03:19,280
me and i'm pretty much in time to

1499
01:03:16,960 --> 01:03:19,280
cheers

1500
01:03:21,760 --> 01:03:25,520
any question on any of those three

1501
01:03:24,559 --> 01:03:28,160
wonderful

1502
01:03:25,520 --> 01:03:28,160
they're so good

1503
01:03:29,280 --> 01:03:32,880
uh so so did you take the action point

1504
01:03:31,280 --> 01:03:35,200
maybe that on the next uh

1505
01:03:32,880 --> 01:03:35,920
in frame we could discuss this bell

1506
01:03:35,200 --> 01:03:38,558
projection

1507
01:03:35,920 --> 01:03:39,920
yes and it captures that in the in the

1508
01:03:38,559 --> 01:03:44,240
chat and i put it in

1509
01:03:39,920 --> 01:03:45,039
notes so we act on that definitely okay

1510
01:03:44,240 --> 01:03:48,720
many thanks

1511
01:03:45,039 --> 01:03:48,720
and then we'll give the ball back

1512
01:03:48,880 --> 01:03:53,280
i don't think i've seen raul among the

1513
01:03:51,920 --> 01:03:59,839
participant

1514
01:03:53,280 --> 01:03:59,839
is you know who's supposed to present

1515
01:04:02,990 --> 01:04:06,020
[Music]

1516
01:04:07,520 --> 01:04:15,599
raul are you there hidden in the

1517
01:04:12,480 --> 01:04:15,599
misgrading name

1518
01:04:21,039 --> 01:04:29,359
nope well

1519
01:04:24,839 --> 01:04:29,359
um then

1520
01:04:29,760 --> 01:04:33,280
i haven't seen him since the beginning

1521
01:04:31,599 --> 01:04:34,079
of the session so i don't think it'd

1522
01:04:33,280 --> 01:04:37,440
show up

1523
01:04:34,079 --> 01:04:38,480
i suggest we just uh go through the

1524
01:04:37,440 --> 01:04:40,720
slides quickly

1525
01:04:38,480 --> 01:04:43,039
just to refresh everybody and what the

1526
01:04:40,720 --> 01:04:43,799
topic is

1527
01:04:43,039 --> 01:04:46,879
and then

1528
01:04:43,800 --> 01:04:46,879
[Music]

1529
01:04:47,599 --> 01:04:54,240
okay and then we can move on to the

1530
01:04:51,200 --> 01:04:57,839
65 50 bits um

1531
01:04:54,240 --> 01:04:59,118
so the the topic for the this draft and

1532
01:04:57,839 --> 01:05:01,200
the motivation for this to have i

1533
01:04:59,119 --> 01:05:03,920
understand is

1534
01:05:01,200 --> 01:05:04,240
to get the confirmation from a leaf node

1535
01:05:03,920 --> 01:05:05,920
that

1536
01:05:04,240 --> 01:05:08,160
the path has been established to the

1537
01:05:05,920 --> 01:05:10,880
root even in storing mode

1538
01:05:08,160 --> 01:05:12,078
in non-storing mode the gao goes all the

1539
01:05:10,880 --> 01:05:15,119
way back to the route

1540
01:05:12,079 --> 01:05:16,480
and the dao arc originates at the route

1541
01:05:15,119 --> 01:05:19,839
so it's safe to assume

1542
01:05:16,480 --> 01:05:20,839
that the route has established a routing

1543
01:05:19,839 --> 01:05:25,038
state for

1544
01:05:20,839 --> 01:05:27,200
that lyft node when it sends a geoack

1545
01:05:25,039 --> 01:05:28,240
therefore when it receives the dioxin

1546
01:05:27,200 --> 01:05:31,118
node can

1547
01:05:28,240 --> 01:05:32,479
assume that communication is established

1548
01:05:31,119 --> 01:05:35,200
and can start sending

1549
01:05:32,480 --> 01:05:36,319
application traffic however in storing

1550
01:05:35,200 --> 01:05:39,118
mode the

1551
01:05:36,319 --> 01:05:40,640
gao goes hop by help across the the

1552
01:05:39,119 --> 01:05:45,280
chain to the root

1553
01:05:40,640 --> 01:05:47,038
and the rs rfc 6550 currently says that

1554
01:05:45,280 --> 01:05:50,160
the dork is

1555
01:05:47,039 --> 01:05:51,280
issued by the intermediate router back

1556
01:05:50,160 --> 01:05:53,598
to the node

1557
01:05:51,280 --> 01:05:56,000
and between intermediate routers and so

1558
01:05:53,599 --> 01:05:59,200
they happen in sequence as shown

1559
01:05:56,000 --> 01:06:00,319
at the bottom right of the slide and

1560
01:05:59,200 --> 01:06:04,240
therefore when the

1561
01:06:00,319 --> 01:06:04,240
lymph node receives a

1562
01:06:05,520 --> 01:06:09,759
there's no guarantee that the path has

1563
01:06:07,599 --> 01:06:12,640
been established all the way to a route

1564
01:06:09,760 --> 01:06:14,559
within any amount of time even following

1565
01:06:12,640 --> 01:06:16,799
that

1566
01:06:14,559 --> 01:06:18,000
there could be many reasons why the puff

1567
01:06:16,799 --> 01:06:21,280
establishment will

1568
01:06:18,000 --> 01:06:24,000
fail along the path up the route and so

1569
01:06:21,280 --> 01:06:24,400
raul's proposal is to add a message

1570
01:06:24,000 --> 01:06:26,720
going

1571
01:06:24,400 --> 01:06:27,920
flying back from the root to the lyft

1572
01:06:26,720 --> 01:06:30,959
node

1573
01:06:27,920 --> 01:06:33,920
when state has been established

1574
01:06:30,960 --> 01:06:35,599
at the root meaning that the path is now

1575
01:06:33,920 --> 01:06:38,960
fully established

1576
01:06:35,599 --> 01:06:41,599
and i think that's what it shows here

1577
01:06:38,960 --> 01:06:42,559
you can see dio's uh populating up the

1578
01:06:41,599 --> 01:06:46,000
structure and

1579
01:06:42,559 --> 01:06:49,440
this root hack message going back

1580
01:06:46,000 --> 01:06:50,240
uh unicast to the nymph node from the

1581
01:06:49,440 --> 01:06:52,880
route

1582
01:06:50,240 --> 01:06:53,919
and in order to request that final

1583
01:06:52,880 --> 01:06:57,039
acknowledgement

1584
01:06:53,920 --> 01:07:01,200
uh raul's proposal is to add a

1585
01:06:57,039 --> 01:07:02,799
flag in the transit information option

1586
01:07:01,200 --> 01:07:05,839
that goes with the dro

1587
01:07:02,799 --> 01:07:08,880
requesting for that flag

1588
01:07:05,839 --> 01:07:12,319
and the route seeing that flag would

1589
01:07:08,880 --> 01:07:14,960
uh there then generate the root act

1590
01:07:12,319 --> 01:07:15,520
now there's an aggregation that can take

1591
01:07:14,960 --> 01:07:18,799
place

1592
01:07:15,520 --> 01:07:19,599
uh on the way up to the root uh by

1593
01:07:18,799 --> 01:07:22,640
intermediate

1594
01:07:19,599 --> 01:07:23,200
routers so we have to make sure uh how

1595
01:07:22,640 --> 01:07:26,400
this is

1596
01:07:23,200 --> 01:07:30,000
uh handled and also we only

1597
01:07:26,400 --> 01:07:33,839
we request the uh device

1598
01:07:30,000 --> 01:07:33,839
only to send one key

1599
01:07:34,640 --> 01:07:40,879
why not hold it yeah okay um

1600
01:07:37,680 --> 01:07:43,440
well answer i think it

1601
01:07:40,880 --> 01:07:45,039
the slight sounds of that um yeah we

1602
01:07:43,440 --> 01:07:47,440
already discussed that

1603
01:07:45,039 --> 01:07:48,640
um sorry i'm trying to carry on through

1604
01:07:47,440 --> 01:07:51,680
the presentation

1605
01:07:48,640 --> 01:07:54,720
and then we'll have the discussion and

1606
01:07:51,680 --> 01:07:57,680
so there's an uh issue with this uh kbit

1607
01:07:54,720 --> 01:07:59,439
we said that the leaf will only will

1608
01:07:57,680 --> 01:08:03,598
only request once after

1609
01:07:59,440 --> 01:08:06,559
reboot for that root act and not

1610
01:08:03,599 --> 01:08:07,680
with the subsequent dros that it uses to

1611
01:08:06,559 --> 01:08:10,880
refresh

1612
01:08:07,680 --> 01:08:11,919
the route therefore that state that has

1613
01:08:10,880 --> 01:08:14,559
to be remembered

1614
01:08:11,920 --> 01:08:15,119
by the intermediate routers for each of

1615
01:08:14,559 --> 01:08:18,880
these

1616
01:08:15,119 --> 01:08:20,719
lymph nodes um

1617
01:08:18,880 --> 01:08:22,239
which i understand is pretty much the

1618
01:08:20,719 --> 01:08:25,679
way the e flag is

1619
01:08:22,238 --> 01:08:28,158
needs to be processed as well

1620
01:08:25,679 --> 01:08:31,040
but i may get i mean it helped exactly

1621
01:08:28,158 --> 01:08:33,278
on the details of that comparison

1622
01:08:31,040 --> 01:08:35,839
uh so that's a discussion about the k

1623
01:08:33,279 --> 01:08:40,159
flag and how it's handled

1624
01:08:35,839 --> 01:08:40,880
and and now the situation with uh ripple

1625
01:08:40,158 --> 01:08:44,719
unaware

1626
01:08:40,880 --> 01:08:48,960
uh leaves and so the

1627
01:08:44,719 --> 01:08:52,480
in this case the um gao with the

1628
01:08:48,960 --> 01:08:56,080
k flag will be sent by the 6 lr that

1629
01:08:52,479 --> 01:08:59,519
acts on behalf of the rule and this all

1630
01:08:56,080 --> 01:09:02,880
path establishment will be um

1631
01:08:59,520 --> 01:09:06,080
between the rule sending its ns and the

1632
01:09:02,880 --> 01:09:07,359
6lr sending dna so the na will only only

1633
01:09:06,080 --> 01:09:10,000
been sent

1634
01:09:07,359 --> 01:09:11,920
back to rule once the path has been

1635
01:09:10,000 --> 01:09:12,880
established and verify through the root

1636
01:09:11,920 --> 01:09:15,520
act

1637
01:09:12,880 --> 01:09:16,480
by the sixth law of because the rule not

1638
01:09:15,520 --> 01:09:18,960
knowing the

1639
01:09:16,479 --> 01:09:20,879
ripple control messages has no way of

1640
01:09:18,960 --> 01:09:24,960
receiving a root tag

1641
01:09:20,880 --> 01:09:24,960
that's the way we deal with rules

1642
01:09:26,510 --> 01:09:29,659
[Music]

1643
01:09:29,839 --> 01:09:33,679
okay in the last version okay i'm not

1644
01:09:32,640 --> 01:09:35,520
sure which

1645
01:09:33,679 --> 01:09:37,199
were the updates in the previous version

1646
01:09:35,520 --> 01:09:39,759
so pretty much

1647
01:09:37,198 --> 01:09:41,839
that's all i can tell about the the

1648
01:09:39,759 --> 01:09:44,399
content of the draft

1649
01:09:41,839 --> 01:09:45,920
and then we can have the discussion i

1650
01:09:44,399 --> 01:09:48,318
see uh

1651
01:09:45,920 --> 01:09:50,480
vera asking that why not hold the deal i

1652
01:09:48,319 --> 01:09:53,759
can there was a discussion

1653
01:09:50,479 --> 01:09:58,080
uh i guess pascal michael you

1654
01:09:53,759 --> 01:10:03,600
you could remind us of the reasons

1655
01:09:58,080 --> 01:10:06,239
my mind is blank at this time

1656
01:10:03,600 --> 01:10:08,800
michael pascal anybody wants to come

1657
01:10:06,239 --> 01:10:11,040
back to the rescue

1658
01:10:08,800 --> 01:10:12,880
where we clarified it i know that my

1659
01:10:11,040 --> 01:10:14,719
code implemented it the way alvaro

1660
01:10:12,880 --> 01:10:16,239
suggested and it was suggested that it

1661
01:10:14,719 --> 01:10:19,040
was wrong

1662
01:10:16,239 --> 01:10:21,440
uh and aggregation is part i think where

1663
01:10:19,040 --> 01:10:24,560
it becomes obvious that it's wrong

1664
01:10:21,440 --> 01:10:26,879
um i can't remember where we actually uh

1665
01:10:24,560 --> 01:10:28,480
clarified that because my brain's not

1666
01:10:26,880 --> 01:10:30,560
working very well either but we did at

1667
01:10:28,480 --> 01:10:33,678
some point so um

1668
01:10:30,560 --> 01:10:35,360
but that wasn't and

1669
01:10:33,679 --> 01:10:37,120
that was actually interoperable

1670
01:10:35,360 --> 01:10:41,040
interoperability issue

1671
01:10:37,120 --> 01:10:43,040
um there would be um anyway

1672
01:10:41,040 --> 01:10:45,120
yeah i'm sure it's in the slides of one

1673
01:10:43,040 --> 01:10:46,159
of the previous meetings so i'll go

1674
01:10:45,120 --> 01:10:48,719
through that and

1675
01:10:46,159 --> 01:10:48,719
provide that

1676
01:10:53,840 --> 01:11:00,239
and i don't know questions we have this

1677
01:10:57,360 --> 01:11:00,960
sorry dominique we have this this uh

1678
01:11:00,239 --> 01:11:03,120
question of

1679
01:11:00,960 --> 01:11:04,400
uh taking notes for ripple v2 i realized

1680
01:11:03,120 --> 01:11:06,719
i created a second

1681
01:11:04,400 --> 01:11:08,799
placeholder where there was already one

1682
01:11:06,719 --> 01:11:11,679
and i'm perfectly fine to merge them but

1683
01:11:08,800 --> 01:11:13,520
that's part of the things we could put

1684
01:11:11,679 --> 01:11:15,280
in that placeholder is to make sure we

1685
01:11:13,520 --> 01:11:17,120
clarify the way the acknowledgements are

1686
01:11:15,280 --> 01:11:18,159
said because it seems that

1687
01:11:17,120 --> 01:11:21,519
the original ripple could be

1688
01:11:18,159 --> 01:11:25,280
misunderstood the way it was written

1689
01:11:21,520 --> 01:11:29,440
okay yes but of the update we could

1690
01:11:25,280 --> 01:11:31,920
became much more clear about the arc

1691
01:11:29,440 --> 01:11:32,639
so where's the place you just mentioned

1692
01:11:31,920 --> 01:11:35,760
that you

1693
01:11:32,640 --> 01:11:41,840
captured requirements for 55

1694
01:11:35,760 --> 01:11:41,840
50 bits

1695
01:11:49,840 --> 01:11:53,199
placeholder but i don't know which

1696
01:11:51,199 --> 01:11:56,080
placeholder that was oh

1697
01:11:53,199 --> 01:11:57,599
i'm sorry i was muted again yeah yeah i

1698
01:11:56,080 --> 01:12:01,040
have my own github and and

1699
01:11:57,600 --> 01:12:02,719
um ines has a horn so

1700
01:12:01,040 --> 01:12:05,040
just realized there was a collision

1701
01:12:02,719 --> 01:12:08,880
there so we'll just merge them

1702
01:12:05,040 --> 01:12:09,679
it was all disgusting well maybe it was

1703
01:12:08,880 --> 01:12:12,800
private i

1704
01:12:09,679 --> 01:12:12,800
thought it was the main invest

1705
01:12:13,679 --> 01:12:20,320
okay so we'll just merge them uh

1706
01:12:17,440 --> 01:12:23,040
so michael i think you're up to discuss

1707
01:12:20,320 --> 01:12:28,559
55 50 minutes

1708
01:12:23,040 --> 01:12:28,560
sure next slide

1709
01:12:28,719 --> 01:12:33,679
um so uh so yeah so

1710
01:12:32,560 --> 01:12:35,760
i guess you guys created this

1711
01:12:33,679 --> 01:12:37,440
placeholder for this uh that's what

1712
01:12:35,760 --> 01:12:40,320
maybe you're talking about

1713
01:12:37,440 --> 01:12:41,919
and um we're supposed to dump content in

1714
01:12:40,320 --> 01:12:45,280
it this is a github

1715
01:12:41,920 --> 01:12:46,960
to either open issues or i guess pascal

1716
01:12:45,280 --> 01:12:50,400
we're maybe even putting

1717
01:12:46,960 --> 01:12:52,800
the beginnings of a draft in there

1718
01:12:50,400 --> 01:12:54,559
as we go forward and i guess that was

1719
01:12:52,800 --> 01:12:57,199
the point i didn't make this slide

1720
01:12:54,560 --> 01:12:57,199
next slide

1721
01:12:58,159 --> 01:13:01,280
well i can't read that

1722
01:13:02,840 --> 01:13:06,560
um

1723
01:13:04,960 --> 01:13:08,560
i can't right i had to write this slide

1724
01:13:06,560 --> 01:13:10,320
anyway that's the contents of it

1725
01:13:08,560 --> 01:13:12,239
of of what we're putting in here and the

1726
01:13:10,320 --> 01:13:13,920
idea is that

1727
01:13:12,239 --> 01:13:15,360
this is some of the points that are

1728
01:13:13,920 --> 01:13:20,080
going into it

1729
01:13:15,360 --> 01:13:20,080
um and so that's great um

1730
01:13:20,239 --> 01:13:25,839
so uh we have these seven points of the

1731
01:13:23,199 --> 01:13:27,919
different pieces that could be into this

1732
01:13:25,840 --> 01:13:30,480
uh part and if you go to the next slide

1733
01:13:27,920 --> 01:13:33,840
i have some diagrams that

1734
01:13:30,480 --> 01:13:33,839
i thought were

1735
01:13:34,480 --> 01:13:36,959
ashes

1736
01:13:40,480 --> 01:13:43,759
the whole internet would make more sense

1737
01:13:42,080 --> 01:13:47,280
in french

1738
01:13:43,760 --> 01:13:49,600
we should do it that way um so um

1739
01:13:47,280 --> 01:13:50,480
so this is what i i was asked to add

1740
01:13:49,600 --> 01:13:52,880
some stuff and i

1741
01:13:50,480 --> 01:13:54,718
this is what i added to it so um there's

1742
01:13:52,880 --> 01:13:55,920
a couple different concepts of what we

1743
01:13:54,719 --> 01:13:57,679
could be doing

1744
01:13:55,920 --> 01:14:00,080
so the first concept is we could take

1745
01:13:57,679 --> 01:14:02,000
rfc 6550

1746
01:14:00,080 --> 01:14:04,559
we can drop off that red stuff the stuff

1747
01:14:02,000 --> 01:14:08,640
we never used such as the

1748
01:14:04,560 --> 01:14:10,400
secure forms of the uh dao and dis

1749
01:14:08,640 --> 01:14:12,480
and all this stuff we didn't never use

1750
01:14:10,400 --> 01:14:14,320
secure forms yet because

1751
01:14:12,480 --> 01:14:16,000
they don't work unless you do asymmetric

1752
01:14:14,320 --> 01:14:18,559
crypto which certainly 10 years ago when

1753
01:14:16,000 --> 01:14:21,360
we wrote 6550 was considered

1754
01:14:18,560 --> 01:14:24,560
way too expensive to do uh on

1755
01:14:21,360 --> 01:14:24,559
constrained devices

1756
01:14:25,280 --> 01:14:29,920
in that time that's no longer as true as

1757
01:14:28,080 --> 01:14:33,840
it was

1758
01:14:29,920 --> 01:14:36,159
um and that's its consideration we would

1759
01:14:33,840 --> 01:14:38,400
add some clarifications

1760
01:14:36,159 --> 01:14:39,599
um so basically the discussion would be

1761
01:14:38,400 --> 01:14:42,480
which pieces we

1762
01:14:39,600 --> 01:14:43,360
have good interoperability experience

1763
01:14:42,480 --> 01:14:45,360
with

1764
01:14:43,360 --> 01:14:47,920
and what would we be doing is we'd be

1765
01:14:45,360 --> 01:14:48,320
trying to build a 6550 which would now

1766
01:14:47,920 --> 01:14:50,400
be an

1767
01:14:48,320 --> 01:14:51,599
internet standard so that would actually

1768
01:14:50,400 --> 01:14:52,639
require some evidence of

1769
01:14:51,600 --> 01:14:55,199
interoperability

1770
01:14:52,640 --> 01:14:56,080
and we don't actually haven't done a lot

1771
01:14:55,199 --> 01:14:58,400
of interoperability

1772
01:14:56,080 --> 01:15:00,320
i think as a working group maybe there

1773
01:14:58,400 --> 01:15:02,159
are some associations in

1774
01:15:00,320 --> 01:15:04,400
fora that would be able to provide us

1775
01:15:02,159 --> 01:15:05,759
some reports about what is actually

1776
01:15:04,400 --> 01:15:07,440
which parts of the document have

1777
01:15:05,760 --> 01:15:10,480
actually interoperated

1778
01:15:07,440 --> 01:15:12,320
and which parts have never interoperated

1779
01:15:10,480 --> 01:15:14,959
and that would be a good thing to do to

1780
01:15:12,320 --> 01:15:17,920
to do that kind of uh uh

1781
01:15:14,960 --> 01:15:18,960
work anyway um so that's one one thing

1782
01:15:17,920 --> 01:15:20,880
we could do that's

1783
01:15:18,960 --> 01:15:22,480
that's not necessarily what we should do

1784
01:15:20,880 --> 01:15:25,840
but that's one thing we could do

1785
01:15:22,480 --> 01:15:25,839
um next slide please

1786
01:15:27,120 --> 01:15:30,280
so the other thing we can do is we can

1787
01:15:28,960 --> 01:15:34,640
do an rfc

1788
01:15:30,280 --> 01:15:37,199
6550 bis we can open up the document

1789
01:15:34,640 --> 01:15:39,199
um that we have take the stuff that we

1790
01:15:37,199 --> 01:15:41,040
used throw it into this pot

1791
01:15:39,199 --> 01:15:42,960
um take all these other documents that

1792
01:15:41,040 --> 01:15:43,519
we're working on um and we'll have an

1793
01:15:42,960 --> 01:15:46,880
rfc

1794
01:15:43,520 --> 01:15:48,719
for soon um and we could massage

1795
01:15:46,880 --> 01:15:50,640
all that text together so that we wind

1796
01:15:48,719 --> 01:15:52,719
up with an uh a new document

1797
01:15:50,640 --> 01:15:53,920
that has everything that we've talked

1798
01:15:52,719 --> 01:15:57,280
about so far

1799
01:15:53,920 --> 01:16:00,880
um into it um and

1800
01:15:57,280 --> 01:16:04,320
we would essentially be we would be uh

1801
01:16:00,880 --> 01:16:06,800
cycling at a proposed standard

1802
01:16:04,320 --> 01:16:08,159
um and we'd have a document that well

1803
01:16:06,800 --> 01:16:08,640
it's probably going to be bigger but

1804
01:16:08,159 --> 01:16:10,159
hopefully

1805
01:16:08,640 --> 01:16:11,760
you know we might cut some stuff out

1806
01:16:10,159 --> 01:16:14,879
that's that's uh

1807
01:16:11,760 --> 01:16:18,400
not that uh

1808
01:16:14,880 --> 01:16:20,159
important anymore um and

1809
01:16:18,400 --> 01:16:21,280
uh we would have a new document and

1810
01:16:20,159 --> 01:16:22,799
implementers could read a single

1811
01:16:21,280 --> 01:16:25,440
document and would be

1812
01:16:22,800 --> 01:16:27,120
i hope elated to only have to to track

1813
01:16:25,440 --> 01:16:30,159
one piece down

1814
01:16:27,120 --> 01:16:34,239
my guesstimate is that it's probably a

1815
01:16:30,159 --> 01:16:36,960
two to three year uh effort to do that

1816
01:16:34,239 --> 01:16:37,839
um and it's probably uh in terms of the

1817
01:16:36,960 --> 01:16:40,880
working group

1818
01:16:37,840 --> 01:16:42,960
uh elapsed time to work on it and it

1819
01:16:40,880 --> 01:16:45,520
probably requires

1820
01:16:42,960 --> 01:16:46,800
something something approaching a

1821
01:16:45,520 --> 01:16:49,920
one-third fte

1822
01:16:46,800 --> 01:16:51,760
of somebody's time to uh

1823
01:16:49,920 --> 01:16:53,040
during a good part of that to actually

1824
01:16:51,760 --> 01:16:55,520
make it uh

1825
01:16:53,040 --> 01:16:56,239
reasonably do a lot of editing a lot of

1826
01:16:55,520 --> 01:16:58,719
wrangling

1827
01:16:56,239 --> 01:16:59,599
a lot of uh going back and forth with

1828
01:16:58,719 --> 01:17:02,640
different people

1829
01:16:59,600 --> 01:17:03,920
and getting a lot of reviews um

1830
01:17:02,640 --> 01:17:06,400
so i don't think it's something we

1831
01:17:03,920 --> 01:17:08,640
should jump into without some

1832
01:17:06,400 --> 01:17:09,599
some view and to knowing that we really

1833
01:17:08,640 --> 01:17:11,920
do have that

1834
01:17:09,600 --> 01:17:13,760
resource out there uh who's going to

1835
01:17:11,920 --> 01:17:17,040
take that that editorial ship

1836
01:17:13,760 --> 01:17:19,440
onwards um so something to

1837
01:17:17,040 --> 01:17:20,320
to consider i think it should be done at

1838
01:17:19,440 --> 01:17:23,120
some point

1839
01:17:20,320 --> 01:17:24,559
um whether we want to start this uh in

1840
01:17:23,120 --> 01:17:28,320
2021 or not

1841
01:17:24,560 --> 01:17:31,840
uh is an open question to there

1842
01:17:28,320 --> 01:17:34,559
so next slide

1843
01:17:31,840 --> 01:17:35,199
so we could do something else um which

1844
01:17:34,560 --> 01:17:37,440
is

1845
01:17:35,199 --> 01:17:38,400
uh we could write a document that

1846
01:17:37,440 --> 01:17:41,199
essentially

1847
01:17:38,400 --> 01:17:41,839
provides a bit more of an overview so

1848
01:17:41,199 --> 01:17:44,239
it's of

1849
01:17:41,840 --> 01:17:46,239
the documents that we are now producing

1850
01:17:44,239 --> 01:17:47,919
um and i'm sorry if i forgot a document

1851
01:17:46,239 --> 01:17:49,519
a box on the right other there may be

1852
01:17:47,920 --> 01:17:52,159
another document that i've i've

1853
01:17:49,520 --> 01:17:52,960
misplaced in my brain um and it would

1854
01:17:52,159 --> 01:17:54,719
simply say

1855
01:17:52,960 --> 01:17:56,400
you do that this is how you do this this

1856
01:17:54,719 --> 01:17:58,080
is how this part fits together this is

1857
01:17:56,400 --> 01:18:00,799
how this part fits together

1858
01:17:58,080 --> 01:18:03,440
it would point back to 6550 for things

1859
01:18:00,800 --> 01:18:04,640
it would clarify parts of 6550 so this

1860
01:18:03,440 --> 01:18:07,919
would essentially be

1861
01:18:04,640 --> 01:18:11,120
a uber update 6550

1862
01:18:07,920 --> 01:18:12,560
um and would pull in all the other other

1863
01:18:11,120 --> 01:18:14,719
pieces

1864
01:18:12,560 --> 01:18:16,080
that way and so we'd have a document

1865
01:18:14,719 --> 01:18:17,520
that um

1866
01:18:16,080 --> 01:18:19,440
would be basically the start here

1867
01:18:17,520 --> 01:18:21,760
document for for ripple

1868
01:18:19,440 --> 01:18:22,799
um and but it wouldn't necessarily have

1869
01:18:21,760 --> 01:18:26,159
to repeat

1870
01:18:22,800 --> 01:18:28,080
um much of 6550

1871
01:18:26,159 --> 01:18:30,639
it could repeat some of it if it wanted

1872
01:18:28,080 --> 01:18:32,159
to if it made sense editorially

1873
01:18:30,640 --> 01:18:33,840
um but it would explain how the

1874
01:18:32,159 --> 01:18:37,199
different pieces go together

1875
01:18:33,840 --> 01:18:38,960
um and what it means to have uh ripple

1876
01:18:37,199 --> 01:18:40,239
implementation that we would call code

1877
01:18:38,960 --> 01:18:44,000
v2

1878
01:18:40,239 --> 01:18:47,599
um and the the the uh

1879
01:18:44,000 --> 01:18:49,520
the uh part of of the whole doing this

1880
01:18:47,600 --> 01:18:50,719
is that i actually don't think that

1881
01:18:49,520 --> 01:18:53,120
we're actually going to have a

1882
01:18:50,719 --> 01:18:54,480
anything that we call v2 but rather

1883
01:18:53,120 --> 01:18:56,800
we're going to say if you do this

1884
01:18:54,480 --> 01:18:58,400
set of things and you have implement

1885
01:18:56,800 --> 01:19:00,080
this set of capabilities and you can

1886
01:18:58,400 --> 01:19:03,440
discover certain things

1887
01:19:00,080 --> 01:19:03,840
then um then you have an implementation

1888
01:19:03,440 --> 01:19:07,040
that

1889
01:19:03,840 --> 01:19:08,960
can reasonably expand and do new things

1890
01:19:07,040 --> 01:19:12,560
as we come along we won't have to

1891
01:19:08,960 --> 01:19:14,400
do the whole you know uh

1892
01:19:12,560 --> 01:19:16,239
obsoleting this or that or whatever and

1893
01:19:14,400 --> 01:19:20,159
this is something that would really be

1894
01:19:16,239 --> 01:19:21,678
um a mop equals seven kind of event

1895
01:19:20,159 --> 01:19:23,759
and carson says in the channel it's a

1896
01:19:21,679 --> 01:19:26,080
no-brainer this is what you want to do

1897
01:19:23,760 --> 01:19:27,920
and of course that's because engineers

1898
01:19:26,080 --> 01:19:28,400
always present the best option last

1899
01:19:27,920 --> 01:19:30,080
right

1900
01:19:28,400 --> 01:19:32,159
and marketing people put the best option

1901
01:19:30,080 --> 01:19:37,040
first uh that way

1902
01:19:32,159 --> 01:19:40,400
um so um discussion pascal go ahead

1903
01:19:37,040 --> 01:19:43,679
that's the last slide yes

1904
01:19:40,400 --> 01:19:46,080
uh obviously that's very tempting

1905
01:19:43,679 --> 01:19:47,280
now there's kind of a merge of those two

1906
01:19:46,080 --> 01:19:50,719
which is

1907
01:19:47,280 --> 01:19:52,000
um do the internet standard based on

1908
01:19:50,719 --> 01:19:56,000
6550

1909
01:19:52,000 --> 01:19:58,800
53 54 and the b8 138 which are the

1910
01:19:56,000 --> 01:19:59,520
which are the one for which we we have

1911
01:19:58,800 --> 01:20:02,800
lasting

1912
01:19:59,520 --> 01:20:06,400
uh existence and

1913
01:20:02,800 --> 01:20:09,600
then and call that ripple v1

1914
01:20:06,400 --> 01:20:11,120
uh internet standard and then build the

1915
01:20:09,600 --> 01:20:13,840
v2 profile

1916
01:20:11,120 --> 01:20:16,480
but not pointing on do these downloads

1917
01:20:13,840 --> 01:20:19,840
pointing on the internet

1918
01:20:16,480 --> 01:20:21,839
standard for 6550 and then all the new

1919
01:20:19,840 --> 01:20:24,080
stuff

1920
01:20:21,840 --> 01:20:25,600
so we would we would roll a few of the

1921
01:20:24,080 --> 01:20:28,639
documents

1922
01:20:25,600 --> 01:20:32,320
um over cutting out the

1923
01:20:28,639 --> 01:20:36,080
stuff we don't do um but not all of them

1924
01:20:32,320 --> 01:20:39,120
um and it would be a relatively

1925
01:20:36,080 --> 01:20:41,199
light editing editorial process of

1926
01:20:39,120 --> 01:20:44,480
mostly removing content

1927
01:20:41,199 --> 01:20:45,678
um and docum or documenting for

1928
01:20:44,480 --> 01:20:48,320
ourselves at least

1929
01:20:45,679 --> 01:20:49,920
we as to which parts have really

1930
01:20:48,320 --> 01:20:52,320
interoperated where

1931
01:20:49,920 --> 01:20:54,320
and clarifying when there was a problem

1932
01:20:52,320 --> 01:20:58,000
what happened that's what you're saying

1933
01:20:54,320 --> 01:21:00,719
yes that's obvious which doesn't add

1934
01:20:58,000 --> 01:21:02,719
yes a bit beast which doesn't have stuff

1935
01:21:00,719 --> 01:21:05,280
too much to but remove some

1936
01:21:02,719 --> 01:21:07,440
from the art of the drfc's which are

1937
01:21:05,280 --> 01:21:09,759
already rfcs in your picture

1938
01:21:07,440 --> 01:21:11,440
and would that would that refer to use

1939
01:21:09,760 --> 01:21:14,480
of rpl info

1940
01:21:11,440 --> 01:21:17,599
yeah i think user 3.4 would

1941
01:21:14,480 --> 01:21:20,638
be merged into it uh because it's really

1942
01:21:17,600 --> 01:21:24,320
about the the existing

1943
01:21:20,639 --> 01:21:26,080
um but unaware if would be out for

1944
01:21:24,320 --> 01:21:27,120
instance i guess now that would be the

1945
01:21:26,080 --> 01:21:31,120
discussion

1946
01:21:27,120 --> 01:21:32,960
but um basically

1947
01:21:31,120 --> 01:21:34,719
still provide the cleaned up version of

1948
01:21:32,960 --> 01:21:36,320
650.

1949
01:21:34,719 --> 01:21:38,080
well i think as soon as you start saying

1950
01:21:36,320 --> 01:21:39,679
that we're going to take some of those

1951
01:21:38,080 --> 01:21:41,280
pieces in then we get a little bit more

1952
01:21:39,679 --> 01:21:45,360
into that melting pot

1953
01:21:41,280 --> 01:21:46,080
kind of scenario okay so just 65.50

1954
01:21:45,360 --> 01:21:47,920
based on

1955
01:21:46,080 --> 01:21:50,880
a real world and then we do we talk

1956
01:21:47,920 --> 01:21:54,000
about v2 which is what you draw here

1957
01:21:50,880 --> 01:21:56,080
yeah i i

1958
01:21:54,000 --> 01:21:57,440
i would have to be convinced that there

1959
01:21:56,080 --> 01:22:02,159
was uh

1960
01:21:57,440 --> 01:22:05,120
a a strong interest from

1961
01:22:02,159 --> 01:22:05,839
a wide variety of industrial players

1962
01:22:05,120 --> 01:22:07,599
that

1963
01:22:05,840 --> 01:22:09,280
run ripple but don't seem to come to our

1964
01:22:07,600 --> 01:22:12,480
meetings that often

1965
01:22:09,280 --> 01:22:14,639
that this was a valuable thing to them

1966
01:22:12,480 --> 01:22:15,839
some people might feel well it should be

1967
01:22:14,639 --> 01:22:17,360
really hard to to do

1968
01:22:15,840 --> 01:22:19,840
implement ripples so that people will

1969
01:22:17,360 --> 01:22:22,320
buy my product instead

1970
01:22:19,840 --> 01:22:24,000
but i don't feel that way so i mean

1971
01:22:22,320 --> 01:22:25,759
given given all the resources i like

1972
01:22:24,000 --> 01:22:27,040
what your your plan i just not sure that

1973
01:22:25,760 --> 01:22:27,679
we would have anything left to do

1974
01:22:27,040 --> 01:22:31,280
anything else

1975
01:22:27,679 --> 01:22:31,280
at that point um

1976
01:22:31,600 --> 01:22:35,360
i don't know i i mean it's not much

1977
01:22:34,560 --> 01:22:38,560
harder

1978
01:22:35,360 --> 01:22:41,360
to fix i mean just say you just fix 50

1979
01:22:38,560 --> 01:22:42,960
65.50 removing the stuff you don't want

1980
01:22:41,360 --> 01:22:43,839
and clarifying the things which are not

1981
01:22:42,960 --> 01:22:48,159
clear

1982
01:22:43,840 --> 01:22:50,159
um yeah just that piece alone

1983
01:22:48,159 --> 01:22:51,920
is not humongous and it's pretty much

1984
01:22:50,159 --> 01:22:53,679
the same effort as writing the the

1985
01:22:51,920 --> 01:22:54,960
profile and saying do this and don't do

1986
01:22:53,679 --> 01:22:58,480
that just editing it

1987
01:22:54,960 --> 01:22:58,480
in in the original document

1988
01:22:58,639 --> 01:23:01,920
i agree with you that part that part of

1989
01:23:00,320 --> 01:23:02,719
it is very good and having done that

1990
01:23:01,920 --> 01:23:05,040
part

1991
01:23:02,719 --> 01:23:06,480
we we would we would reuse it anyway for

1992
01:23:05,040 --> 01:23:09,600
ripple v2 right

1993
01:23:06,480 --> 01:23:10,559
yep okay so we would now have a have a

1994
01:23:09,600 --> 01:23:13,840
document

1995
01:23:10,560 --> 01:23:15,440
that um would be much much cleaner to be

1996
01:23:13,840 --> 01:23:16,480
able to pull some of the other pieces

1997
01:23:15,440 --> 01:23:19,519
into it

1998
01:23:16,480 --> 01:23:20,159
now alvaro could you clarify for me if

1999
01:23:19,520 --> 01:23:23,199
if

2000
01:23:20,159 --> 01:23:25,360
could we could we write a document

2001
01:23:23,199 --> 01:23:27,678
that does something and say doesn't

2002
01:23:25,360 --> 01:23:29,839
change unaware leaves at all

2003
01:23:27,679 --> 01:23:33,360
but just changes its status because it's

2004
01:23:29,840 --> 01:23:35,600
now interoperable two years later

2005
01:23:33,360 --> 01:23:37,440
uh what do you mean changes the status

2006
01:23:35,600 --> 01:23:39,600
well let's so let's let's say we publish

2007
01:23:37,440 --> 01:23:41,519
unaware leaves and and use of rpl info

2008
01:23:39,600 --> 01:23:44,880
it's rfc blah blah blah right

2009
01:23:41,520 --> 01:23:48,080
um and uh two years later

2010
01:23:44,880 --> 01:23:50,960
there's no clarifications needed and the

2011
01:23:48,080 --> 01:23:50,960
ripple uh

2012
01:23:52,239 --> 01:23:58,159
v2 profile comes along and says

2013
01:23:55,760 --> 01:23:59,840
um and it depends upon these other other

2014
01:23:58,159 --> 01:24:03,280
documents which are currently at

2015
01:23:59,840 --> 01:24:05,120
internet at proposed standard but

2016
01:24:03,280 --> 01:24:06,400
now we've shown interoperability can we

2017
01:24:05,120 --> 01:24:09,040
do a status change

2018
01:24:06,400 --> 01:24:09,759
up to propose up to internet standard

2019
01:24:09,040 --> 01:24:14,000
without

2020
01:24:09,760 --> 01:24:17,440
revising the document um

2021
01:24:14,000 --> 01:24:19,040
we can try um

2022
01:24:17,440 --> 01:24:20,638
or i guess we're going to try all the

2023
01:24:19,040 --> 01:24:22,639
other i'm saying you have to suck all

2024
01:24:20,639 --> 01:24:25,679
those documents into one place

2025
01:24:22,639 --> 01:24:27,600
and no so i remember right so i've never

2026
01:24:25,679 --> 01:24:29,840
seen that done because usually

2027
01:24:27,600 --> 01:24:31,520
uh you know there are some changes when

2028
01:24:29,840 --> 01:24:32,880
we're going to entire standard and and

2029
01:24:31,520 --> 01:24:33,760
we need to take some stuff out and all

2030
01:24:32,880 --> 01:24:36,960
this stuff

2031
01:24:33,760 --> 01:24:40,480
i thought that happened for for

2032
01:24:36,960 --> 01:24:42,560
imap or smtp or not

2033
01:24:40,480 --> 01:24:44,320
because that has a different maybe some

2034
01:24:42,560 --> 01:24:47,440
other thing like that where they did a

2035
01:24:44,320 --> 01:24:49,040
status change on it so i've seen status

2036
01:24:47,440 --> 01:24:50,320
changes done i don't know if we can do a

2037
01:24:49,040 --> 01:24:52,960
status change to

2038
01:24:50,320 --> 01:24:54,000
internet draft internet standard but we

2039
01:24:52,960 --> 01:24:55,920
can try i mean you know

2040
01:24:54,000 --> 01:24:58,960
the worst that can happen is we just

2041
01:24:55,920 --> 01:25:00,719
recycle an erc number that's it right

2042
01:24:58,960 --> 01:25:02,080
yeah yeah that's true we just change the

2043
01:25:00,719 --> 01:25:04,159
if there's no changes it just

2044
01:25:02,080 --> 01:25:05,280
you're right yeah that would be that but

2045
01:25:04,159 --> 01:25:08,638
the the one thing that

2046
01:25:05,280 --> 01:25:10,639
that concerns me about this

2047
01:25:08,639 --> 01:25:13,360
is that you said that the stuff we never

2048
01:25:10,639 --> 01:25:17,520
used was the security stuff

2049
01:25:13,360 --> 01:25:20,799
yep so what about security

2050
01:25:17,520 --> 01:25:22,320
um well the reason you know everything

2051
01:25:20,800 --> 01:25:24,000
the reason we never used it is because

2052
01:25:22,320 --> 01:25:26,559
it wasn't well designed to begin with

2053
01:25:24,000 --> 01:25:28,560
it wasn't well explained and there's and

2054
01:25:26,560 --> 01:25:30,000
there's a bunch of pieces that

2055
01:25:28,560 --> 01:25:32,560
that there's a bunch of pieces that

2056
01:25:30,000 --> 01:25:35,760
could never work regardless of how fast

2057
01:25:32,560 --> 01:25:39,679
uh regardless of what magic uh

2058
01:25:35,760 --> 01:25:41,840
crypto fairy dust you insert right um

2059
01:25:39,679 --> 01:25:43,120
but there's some stuff that was that was

2060
01:25:41,840 --> 01:25:45,679
undesirable because

2061
01:25:43,120 --> 01:25:47,519
in 2010 it was just too slow you

2062
01:25:45,679 --> 01:25:50,880
couldn't do asynchronous

2063
01:25:47,520 --> 01:25:53,760
signing of of dios um

2064
01:25:50,880 --> 01:25:55,040
uh uh fast enough and and low powered

2065
01:25:53,760 --> 01:25:57,920
enough to be useful

2066
01:25:55,040 --> 01:25:58,800
that might not be true anymore today and

2067
01:25:57,920 --> 01:26:02,000
we certainly see

2068
01:25:58,800 --> 01:26:03,920
lots of cases uh where people ask about

2069
01:26:02,000 --> 01:26:05,760
security in the routing protocol

2070
01:26:03,920 --> 01:26:07,360
which is solvable using the pieces that

2071
01:26:05,760 --> 01:26:09,120
are there so

2072
01:26:07,360 --> 01:26:10,239
like i would rip out a bunch of stuff i

2073
01:26:09,120 --> 01:26:11,199
would absolutely rip out all the

2074
01:26:10,239 --> 01:26:13,599
symmetric

2075
01:26:11,199 --> 01:26:14,480
crypto authentication because it's

2076
01:26:13,600 --> 01:26:17,360
meaningless

2077
01:26:14,480 --> 01:26:18,879
right um anyone who can verify the

2078
01:26:17,360 --> 01:26:20,400
anyone who can verify your announcement

2079
01:26:18,880 --> 01:26:20,960
with a symmetric key can forge your

2080
01:26:20,400 --> 01:26:24,559
stuff

2081
01:26:20,960 --> 01:26:28,960
so what's the point right um

2082
01:26:24,560 --> 01:26:30,639
so um but the asymmetric stuff

2083
01:26:28,960 --> 01:26:32,000
you know this working group just never

2084
01:26:30,639 --> 01:26:33,280
really understood that it had to be

2085
01:26:32,000 --> 01:26:36,480
asymmetric

2086
01:26:33,280 --> 01:26:38,960
and we're kind of being sold uh bait and

2087
01:26:36,480 --> 01:26:42,799
switch i think and so i think we're

2088
01:26:38,960 --> 01:26:44,800
the isg at the time um

2089
01:26:42,800 --> 01:26:46,639
so what would we do no one's implemented

2090
01:26:44,800 --> 01:26:47,280
it so that stuff can't go to internet

2091
01:26:46,639 --> 01:26:48,560
standard

2092
01:26:47,280 --> 01:26:50,400
because no one's implemented it we don't

2093
01:26:48,560 --> 01:26:52,320
have interoperability

2094
01:26:50,400 --> 01:26:54,480
at all right right so my point is that

2095
01:26:52,320 --> 01:26:56,960
that at some point some security id

2096
01:26:54,480 --> 01:26:58,638
is going to ask well what about security

2097
01:26:56,960 --> 01:27:00,080
and for many of the writing protocols

2098
01:26:58,639 --> 01:27:02,000
we've sort of gotten away

2099
01:27:00,080 --> 01:27:03,519
with you know this is sort of a limited

2100
01:27:02,000 --> 01:27:05,679
domain it's inside

2101
01:27:03,520 --> 01:27:07,120
you know this thing if you can get into

2102
01:27:05,679 --> 01:27:11,760
my network and look at my

2103
01:27:07,120 --> 01:27:11,760
routing packets i got other problems

2104
01:27:11,920 --> 01:27:17,679
right i have other problems we have

2105
01:27:14,639 --> 01:27:20,880
largely gotten away with that

2106
01:27:17,679 --> 01:27:23,600
most and all our whole whole

2107
01:27:20,880 --> 01:27:24,960
role security uh threats document right

2108
01:27:23,600 --> 01:27:26,320
explained all the different places where

2109
01:27:24,960 --> 01:27:27,679
you can get in or where you need to be

2110
01:27:26,320 --> 01:27:30,559
in or out or this

2111
01:27:27,679 --> 01:27:32,639
or not and we went on the applicability

2112
01:27:30,560 --> 01:27:36,000
documents that you know

2113
01:27:32,639 --> 01:27:37,120
did when i was chair um were partly was

2114
01:27:36,000 --> 01:27:39,120
to deal with that

2115
01:27:37,120 --> 01:27:41,199
make everyone happy about that part but

2116
01:27:39,120 --> 01:27:44,559
you're absolutely right i mean

2117
01:27:41,199 --> 01:27:45,759
you know stephen farrell was never happy

2118
01:27:44,560 --> 01:27:49,440
with that result right

2119
01:27:45,760 --> 01:27:51,760
and neither was i okay um but

2120
01:27:49,440 --> 01:27:53,199
i mean people haven't implemented it so

2121
01:27:51,760 --> 01:27:54,080
honestly it can't go to internet

2122
01:27:53,199 --> 01:27:56,239
standard

2123
01:27:54,080 --> 01:27:57,440
um of course we don't have to we don't

2124
01:27:56,239 --> 01:28:01,040
have to obsolete the

2125
01:27:57,440 --> 01:28:03,360
the um code points right

2126
01:28:01,040 --> 01:28:04,560
uh we don't have to say that 6550 we

2127
01:28:03,360 --> 01:28:05,759
don't have to rip it up and never let

2128
01:28:04,560 --> 01:28:07,199
anyone read it again

2129
01:28:05,760 --> 01:28:09,199
someone could come along and implement

2130
01:28:07,199 --> 01:28:12,400
those things using the code points

2131
01:28:09,199 --> 01:28:14,400
find interoperability and then you know

2132
01:28:12,400 --> 01:28:16,480
we have to do something uh

2133
01:28:14,400 --> 01:28:18,320
uh in a document to advance that part to

2134
01:28:16,480 --> 01:28:21,519
internet standard but that would be uh

2135
01:28:18,320 --> 01:28:22,960
a new document right right so so the

2136
01:28:21,520 --> 01:28:25,600
whole point here is is we just need to

2137
01:28:22,960 --> 01:28:28,880
have a good security story

2138
01:28:25,600 --> 01:28:29,840
either you have a security solution that

2139
01:28:28,880 --> 01:28:32,639
works

2140
01:28:29,840 --> 01:28:33,280
or have a really good story that's going

2141
01:28:32,639 --> 01:28:37,520
to convince

2142
01:28:33,280 --> 01:28:39,519
everyone of why we're fine without it

2143
01:28:37,520 --> 01:28:41,600
it wasn't broken we didn't we didn't fix

2144
01:28:39,520 --> 01:28:41,600
it

2145
01:28:41,760 --> 01:28:47,199
can i yeah um we've been through

2146
01:28:45,040 --> 01:28:49,600
security sections of many documents

2147
01:28:47,199 --> 01:28:51,280
for raw since right and we have kind of

2148
01:28:49,600 --> 01:28:54,840
written the same words about

2149
01:28:51,280 --> 01:28:57,440
layer two security but uh it's not

2150
01:28:54,840 --> 01:28:59,040
really the one thing i have in mind is

2151
01:28:57,440 --> 01:29:01,280
that there is some a lot of work which

2152
01:28:59,040 --> 01:29:02,320
is actually be done to secure the router

2153
01:29:01,280 --> 01:29:04,480
to router

2154
01:29:02,320 --> 01:29:05,440
a posture evaluation and they're

2155
01:29:04,480 --> 01:29:08,879
thinking about

2156
01:29:05,440 --> 01:29:11,440
rats and i'm thinking about an email and

2157
01:29:08,880 --> 01:29:13,360
those things are not dependent on

2158
01:29:11,440 --> 01:29:13,919
exactly which routing protocol you're

2159
01:29:13,360 --> 01:29:16,799
using

2160
01:29:13,920 --> 01:29:17,679
it's they just prove that um you're

2161
01:29:16,800 --> 01:29:20,639
talking to

2162
01:29:17,679 --> 01:29:23,360
this guy with this identity and and that

2163
01:29:20,639 --> 01:29:26,639
this guy is not compromised and blah

2164
01:29:23,360 --> 01:29:27,199
and that establishes a degree of trust

2165
01:29:26,639 --> 01:29:28,960
that

2166
01:29:27,199 --> 01:29:30,799
uh you've got the right person with the

2167
01:29:28,960 --> 01:29:33,520
right software in it

2168
01:29:30,800 --> 01:29:35,360
and if if you want this kind of security

2169
01:29:33,520 --> 01:29:36,080
then you can deploy rats you can deploy

2170
01:29:35,360 --> 01:29:38,559
an email

2171
01:29:36,080 --> 01:29:39,519
and then run ripple over it uh it's just

2172
01:29:38,560 --> 01:29:43,280
that trying to

2173
01:29:39,520 --> 01:29:44,239
to put that degree of security into

2174
01:29:43,280 --> 01:29:47,840
ripple

2175
01:29:44,239 --> 01:29:49,759
um binds things together in a way that i

2176
01:29:47,840 --> 01:29:52,400
would not want because

2177
01:29:49,760 --> 01:29:54,480
really the degree of of for instance rat

2178
01:29:52,400 --> 01:29:56,320
that you want into this network may

2179
01:29:54,480 --> 01:29:58,718
depend on your use case

2180
01:29:56,320 --> 01:30:00,559
and tying it hard coded into the routing

2181
01:29:58,719 --> 01:30:04,840
protocol locks it to a certain

2182
01:30:00,560 --> 01:30:07,440
quality and locks it to a certain

2183
01:30:04,840 --> 01:30:08,159
capability i think it's external like

2184
01:30:07,440 --> 01:30:11,440
like rats

2185
01:30:08,159 --> 01:30:11,839
um so i i think you're absolutely right

2186
01:30:11,440 --> 01:30:14,719
that

2187
01:30:11,840 --> 01:30:16,159
that there's a space uh there's a space

2188
01:30:14,719 --> 01:30:19,120
of of security

2189
01:30:16,159 --> 01:30:20,960
of that as you just described with using

2190
01:30:19,120 --> 01:30:23,760
remote attestation with

2191
01:30:20,960 --> 01:30:25,760
doing uh good enrollment uh before you

2192
01:30:23,760 --> 01:30:28,239
hand out the layer two network key

2193
01:30:25,760 --> 01:30:29,040
um that all makes a lot of sense sense

2194
01:30:28,239 --> 01:30:31,280
to me and

2195
01:30:29,040 --> 01:30:32,800
and it should be done anyway but the

2196
01:30:31,280 --> 01:30:36,320
stuff we never used part

2197
01:30:32,800 --> 01:30:39,760
that box is about signing daos

2198
01:30:36,320 --> 01:30:42,000
such that in such a way that you know

2199
01:30:39,760 --> 01:30:43,920
that this particular node

2200
01:30:42,000 --> 01:30:45,679
can only announce address space that

2201
01:30:43,920 --> 01:30:49,440
actually

2202
01:30:45,679 --> 01:30:51,760
is below it or it's responsible for

2203
01:30:49,440 --> 01:30:51,759
right

2204
01:30:52,480 --> 01:30:58,000
that was never proven actually

2205
01:30:55,520 --> 01:30:59,600
uh you know in in six japan we have uh

2206
01:30:58,000 --> 01:31:03,600
just produced rfc

2207
01:30:59,600 --> 01:31:06,639
eight nine uh 28

2208
01:31:03,600 --> 01:31:08,639
which provides a proof of ownership for

2209
01:31:06,639 --> 01:31:12,000
the addresses that you expose

2210
01:31:08,639 --> 01:31:15,120
over 6 leopard nd and

2211
01:31:12,000 --> 01:31:17,840
with noah leaves we are actually

2212
01:31:15,120 --> 01:31:21,440
transporting that proof of ownership

2213
01:31:17,840 --> 01:31:23,679
inside the dios and now that can

2214
01:31:21,440 --> 01:31:25,759
effectively be used to provide fraud

2215
01:31:23,679 --> 01:31:28,239
ownership validation

2216
01:31:25,760 --> 01:31:30,080
but the existing dao would not do that

2217
01:31:28,239 --> 01:31:31,839
because you could always write anything

2218
01:31:30,080 --> 01:31:33,199
into your dao you prove that you're

2219
01:31:31,840 --> 01:31:34,960
sending it but you've never

2220
01:31:33,199 --> 01:31:38,320
proven that what you're sending is

2221
01:31:34,960 --> 01:31:40,639
correct it needs to go all the way back

2222
01:31:38,320 --> 01:31:41,360
yeah you need to secure down and and

2223
01:31:40,639 --> 01:31:44,480
most of the

2224
01:31:41,360 --> 01:31:48,559
most of the the secure the

2225
01:31:44,480 --> 01:31:50,879
uh hex eight something versions of those

2226
01:31:48,560 --> 01:31:51,679
things they weren't they didn't really

2227
01:31:50,880 --> 01:31:56,000
get it right

2228
01:31:51,679 --> 01:31:58,400
right and um that was part of the

2229
01:31:56,000 --> 01:31:59,199
debate back in 2012 or something like

2230
01:31:58,400 --> 01:32:03,360
this

2231
01:31:59,199 --> 01:32:05,040
um and so i'm not

2232
01:32:03,360 --> 01:32:06,960
all i'm saying is no and no one's

2233
01:32:05,040 --> 01:32:08,880
implemented it right so

2234
01:32:06,960 --> 01:32:10,840
um i think we could do a better job if

2235
01:32:08,880 --> 01:32:13,679
we started over

2236
01:32:10,840 --> 01:32:17,440
um uh the the question is

2237
01:32:13,679 --> 01:32:20,719
you know what what what level of

2238
01:32:17,440 --> 01:32:25,120
of security do we want right um

2239
01:32:20,719 --> 01:32:27,120
so yes tying to too much stuff which is

2240
01:32:25,120 --> 01:32:28,320
not related to ripple into this spec

2241
01:32:27,120 --> 01:32:30,080
makes no sense to me

2242
01:32:28,320 --> 01:32:32,480
better you know deploy this pack plus

2243
01:32:30,080 --> 01:32:34,800
this pack plus this pack like rats

2244
01:32:32,480 --> 01:32:35,839
if we if we need something special to

2245
01:32:34,800 --> 01:32:38,159
prove

2246
01:32:35,840 --> 01:32:39,760
um ownership of the addresses that we

2247
01:32:38,159 --> 01:32:40,000
expose so we are sure that those guys

2248
01:32:39,760 --> 01:32:42,639
are

2249
01:32:40,000 --> 01:32:43,600
really down there then that's when we

2250
01:32:42,639 --> 01:32:47,280
can effectively

2251
01:32:43,600 --> 01:32:48,400
modify ripple and and uh replace this

2252
01:32:47,280 --> 01:32:50,800
this

2253
01:32:48,400 --> 01:32:52,080
section that we are taking off by a new

2254
01:32:50,800 --> 01:32:54,719
rfc

2255
01:32:52,080 --> 01:32:56,159
uh i would not put it in six five five

2256
01:32:54,719 --> 01:32:57,600
zero base because it would not be

2257
01:32:56,159 --> 01:33:00,480
instant standard anymore

2258
01:32:57,600 --> 01:33:01,920
but i would probably try a new draft

2259
01:33:00,480 --> 01:33:05,040
which explains how the

2260
01:33:01,920 --> 01:33:07,600
uh rover can be challenged from

2261
01:33:05,040 --> 01:33:10,800
from a common parent up there so when

2262
01:33:07,600 --> 01:33:13,120
when you see it coming from a new child

2263
01:33:10,800 --> 01:33:15,360
which means the guy is moved probably uh

2264
01:33:13,120 --> 01:33:17,519
you want to be able to challenge that

2265
01:33:15,360 --> 01:33:18,960
um the dow was injected you know from

2266
01:33:17,520 --> 01:33:22,159
somebody who wants it

2267
01:33:18,960 --> 01:33:25,760
wants the address well the there was a

2268
01:33:22,159 --> 01:33:25,759
leaf down there which haunts the address

2269
01:33:26,239 --> 01:33:29,280
so but but that's that's new work that's

2270
01:33:28,159 --> 01:33:30,799
not what this

2271
01:33:29,280 --> 01:33:32,480
that's not the property that this thing

2272
01:33:30,800 --> 01:33:34,159
gives this thing gives a property which

2273
01:33:32,480 --> 01:33:36,879
is equivalent to the year to security

2274
01:33:34,159 --> 01:33:39,679
kind of

2275
01:33:36,880 --> 01:33:40,320
right so so right now we're just relying

2276
01:33:39,679 --> 01:33:42,800
on

2277
01:33:40,320 --> 01:33:44,080
layer two security to make sure that no

2278
01:33:42,800 --> 01:33:47,280
one injects

2279
01:33:44,080 --> 01:33:50,800
uh uh incorrect um

2280
01:33:47,280 --> 01:33:52,480
uh uh a bogus um

2281
01:33:50,800 --> 01:33:54,239
routing information into our network

2282
01:33:52,480 --> 01:33:57,919
right and

2283
01:33:54,239 --> 01:34:00,320
so so so the point of the stuff that was

2284
01:33:57,920 --> 01:34:04,800
there was to be able to validate

2285
01:34:00,320 --> 01:34:07,120
those announcements at a higher level um

2286
01:34:04,800 --> 01:34:08,800
irrespective of whether there's malware

2287
01:34:07,120 --> 01:34:09,920
or something that rats would deal with

2288
01:34:08,800 --> 01:34:12,800
on your network

2289
01:34:09,920 --> 01:34:14,159
right um so obviously if someone has the

2290
01:34:12,800 --> 01:34:16,880
layer two key and it

2291
01:34:14,159 --> 01:34:18,320
has broken code they can they're inside

2292
01:34:16,880 --> 01:34:19,199
your network and they can see whatever

2293
01:34:18,320 --> 01:34:21,920
they like

2294
01:34:19,199 --> 01:34:23,440
so that's an issue but people at one

2295
01:34:21,920 --> 01:34:26,000
point wanted to use ripple in

2296
01:34:23,440 --> 01:34:26,799
networks that where not all the nodes

2297
01:34:26,000 --> 01:34:29,679
were trusted

2298
01:34:26,800 --> 01:34:31,840
the same way or that the network was not

2299
01:34:29,679 --> 01:34:34,320
encrypted or the network was

2300
01:34:31,840 --> 01:34:35,600
open in the sense of uh open wi-fi kind

2301
01:34:34,320 --> 01:34:37,280
of thing

2302
01:34:35,600 --> 01:34:39,360
and new nodes could attach and announce

2303
01:34:37,280 --> 01:34:43,360
themselves right

2304
01:34:39,360 --> 01:34:47,839
and they that would work without them

2305
01:34:43,360 --> 01:34:47,839
attacking other things

2306
01:34:49,280 --> 01:34:52,400
so did we conclude about what we want to

2307
01:34:51,119 --> 01:34:54,799
do so like

2308
01:34:52,400 --> 01:34:56,400
do we want to build just this ripple v2

2309
01:34:54,800 --> 01:35:01,840
profile or do we want to fix

2310
01:34:56,400 --> 01:35:01,839
6550 and then do the republic profile

2311
01:35:04,880 --> 01:35:09,520
uh in essence to bring it to mailing

2312
01:35:08,000 --> 01:35:12,880
list

2313
01:35:09,520 --> 01:35:16,080
uh i would agree um i

2314
01:35:12,880 --> 01:35:17,520
i think that i i i think we need to

2315
01:35:16,080 --> 01:35:19,280
figure out essentially

2316
01:35:17,520 --> 01:35:20,800
in some sense we need to figure out what

2317
01:35:19,280 --> 01:35:22,320
our resources are

2318
01:35:20,800 --> 01:35:24,000
there are humans that are willing to do

2319
01:35:22,320 --> 01:35:26,159
this i think that

2320
01:35:24,000 --> 01:35:27,679
that well this is a this perhaps the

2321
01:35:26,159 --> 01:35:29,679
smallest document

2322
01:35:27,679 --> 01:35:31,760
and probably when we can't really start

2323
01:35:29,679 --> 01:35:33,440
until we we can't really

2324
01:35:31,760 --> 01:35:35,040
truly start until we've kind of gotten

2325
01:35:33,440 --> 01:35:37,519
some of these other things

2326
01:35:35,040 --> 01:35:38,400
at least you know to working group last

2327
01:35:37,520 --> 01:35:42,320
call

2328
01:35:38,400 --> 01:35:43,519
um maybe not all of them but

2329
01:35:42,320 --> 01:35:45,599
i mean at least some of them are in the

2330
01:35:43,520 --> 01:35:47,199
queue already but

2331
01:35:45,600 --> 01:35:49,679
um we need to figure out who's willing

2332
01:35:47,199 --> 01:35:51,678
to do that write that document

2333
01:35:49,679 --> 01:35:53,440
um even if it's much simpler than the

2334
01:35:51,679 --> 01:35:55,840
others others

2335
01:35:53,440 --> 01:35:56,559
or if the other two possibly larger

2336
01:35:55,840 --> 01:36:00,719
documents

2337
01:35:56,560 --> 01:36:00,719
um that may have to get written

2338
01:36:06,639 --> 01:36:10,080
so in this suggests to write and

2339
01:36:09,040 --> 01:36:12,239
describe the

2340
01:36:10,080 --> 01:36:14,719
various options and the pros and cons

2341
01:36:12,239 --> 01:36:18,400
and discuss that on a mailing list

2342
01:36:14,719 --> 01:36:18,400
is that something reasonable or can we

2343
01:36:18,480 --> 01:36:24,239
get rid of one of the options right now

2344
01:36:21,119 --> 01:36:27,440
based on the discussion so we have this

2345
01:36:24,239 --> 01:36:30,718
editorial work to investigate or

2346
01:36:27,440 --> 01:36:30,719
explain each of the options

2347
01:36:31,040 --> 01:36:38,480
did i hear the first one the the big

2348
01:36:33,360 --> 01:36:41,280
melting pot is that maybe

2349
01:36:38,480 --> 01:36:43,119
for to twist the discussion we could say

2350
01:36:41,280 --> 01:36:46,480
we could give names to things

2351
01:36:43,119 --> 01:36:49,759
for instance for me abyss is not

2352
01:36:46,480 --> 01:36:53,199
adding much stuff it's mostly correcting

2353
01:36:49,760 --> 01:36:55,280
to get from to get to internet standard

2354
01:36:53,199 --> 01:36:57,919
so the beast would not be the melting

2355
01:36:55,280 --> 01:37:00,559
pot that would be the v2

2356
01:36:57,920 --> 01:37:02,480
um the v2 can can really bring new

2357
01:37:00,560 --> 01:37:04,239
functionality the base is more like

2358
01:37:02,480 --> 01:37:06,080
fixing bugs

2359
01:37:04,239 --> 01:37:07,839
if we agree on the terminology like this

2360
01:37:06,080 --> 01:37:09,199
it's it's kind of easier

2361
01:37:07,840 --> 01:37:11,119
because we've seen many beasts in the

2362
01:37:09,199 --> 01:37:14,638
past and they were like that i mean uh

2363
01:37:11,119 --> 01:37:17,440
48 61 is the beast of 2461.

2364
01:37:14,639 --> 01:37:20,080
uh now we have 82 0 0 which was the

2365
01:37:17,440 --> 01:37:22,400
which is the base of ipv6 3460

2366
01:37:20,080 --> 01:37:25,119
and many like that they don't bring new

2367
01:37:22,400 --> 01:37:28,400
stuff they fix

2368
01:37:25,119 --> 01:37:32,239
on the other hand ospf v2

2369
01:37:28,400 --> 01:37:34,960
really brought new stuff versus ospf v1

2370
01:37:32,239 --> 01:37:36,480
so i don't think we're talking about the

2371
01:37:34,960 --> 01:37:39,840
same effort when we talk about the beast

2372
01:37:36,480 --> 01:37:39,839
and when we talk about the v2

2373
01:37:40,719 --> 01:37:47,840
okay so let's talk about the v2 the

2374
01:37:44,080 --> 01:37:50,960
the big melting pot the big one

2375
01:37:47,840 --> 01:37:53,119
i heard um michael uh

2376
01:37:50,960 --> 01:37:54,000
give an estimate for the resource that's

2377
01:37:53,119 --> 01:37:56,559
needed to

2378
01:37:54,000 --> 01:37:57,199
pull that kind of document do you think

2379
01:37:56,560 --> 01:38:00,320
we have that

2380
01:37:57,199 --> 01:38:01,119
do we have volunteers to do that or do

2381
01:38:00,320 --> 01:38:04,000
can we just

2382
01:38:01,119 --> 01:38:07,280
roll it out because nobody sees

2383
01:38:04,000 --> 01:38:07,280
availabilities to do that

2384
01:38:13,600 --> 01:38:17,840
at some point we're going to need to do

2385
01:38:15,600 --> 01:38:17,840
this

2386
01:38:18,239 --> 01:38:25,360
but you know it may be

2387
01:38:21,360 --> 01:38:30,239
a 6550 v2bis

2388
01:38:25,360 --> 01:38:35,119
but maybe not for a long time

2389
01:38:30,239 --> 01:38:38,239
and you know we may discover that

2390
01:38:35,119 --> 01:38:39,119
you know if somebody has a interest in a

2391
01:38:38,239 --> 01:38:41,360
resource and

2392
01:38:39,119 --> 01:38:42,480
and time that is not at this meeting

2393
01:38:41,360 --> 01:38:46,799
right now

2394
01:38:42,480 --> 01:38:49,199
um and you know some

2395
01:38:46,800 --> 01:38:50,719
strategic you know next generation

2396
01:38:49,199 --> 01:38:52,320
internet grant or something like that

2397
01:38:50,719 --> 01:38:54,320
could fund such a thing

2398
01:38:52,320 --> 01:38:55,759
and someone could do some interesting

2399
01:38:54,320 --> 01:38:57,599
work that way

2400
01:38:55,760 --> 01:38:59,840
um but i i would agree that it's

2401
01:38:57,600 --> 01:39:01,199
probably unlikely that we'll get we'll

2402
01:38:59,840 --> 01:39:03,360
manage to do this

2403
01:39:01,199 --> 01:39:03,360
so

2404
01:39:05,840 --> 01:39:11,040
okay and it turns out we have

2405
01:39:09,199 --> 01:39:12,799
people that are not in this meeting that

2406
01:39:11,040 --> 01:39:14,320
are very active in the group so

2407
01:39:12,800 --> 01:39:16,800
i think it's about time to volunteer

2408
01:39:14,320 --> 01:39:16,799
them right

2409
01:39:20,080 --> 01:39:23,760
okay just kidding oh too bad i would be

2410
01:39:22,560 --> 01:39:27,040
interested in

2411
01:39:23,760 --> 01:39:30,080
making a pass on the original rfc 6550

2412
01:39:27,040 --> 01:39:31,760
xml to do to help contribute cleanup

2413
01:39:30,080 --> 01:39:32,880
because i was editor on the original

2414
01:39:31,760 --> 01:39:36,239
specs so

2415
01:39:32,880 --> 01:39:36,239
if you're responsible for it

2416
01:39:37,520 --> 01:39:41,360
okay actually probably not a bad idea

2417
01:39:39,760 --> 01:39:44,639
for uh to obtain that

2418
01:39:41,360 --> 01:39:47,920
xml from the rfc editor

2419
01:39:44,639 --> 01:39:50,159
um it's available if you ask nicely um

2420
01:39:47,920 --> 01:39:51,440
and throw it in make sure that it

2421
01:39:50,159 --> 01:39:55,839
compiles

2422
01:39:51,440 --> 01:39:58,239
um and we if nothing else we may want to

2423
01:39:55,840 --> 01:40:00,400
copy and paste from it for other things

2424
01:39:58,239 --> 01:40:03,599
so might as well have the original text

2425
01:40:00,400 --> 01:40:03,599
in the original formatting

2426
01:40:06,400 --> 01:40:12,480
makes sense and we discuss

2427
01:40:10,400 --> 01:40:15,440
did you want to share your screen i saw

2428
01:40:12,480 --> 01:40:17,199
a request or was that a mistake

2429
01:40:15,440 --> 01:40:22,400
uh no i pressed the wrong button i

2430
01:40:17,199 --> 01:40:25,599
wanted to remove my camera

2431
01:40:22,400 --> 01:40:25,599
uh uis

2432
01:40:31,840 --> 01:40:39,600
okay um

2433
01:40:36,000 --> 01:40:43,040
so um we'll bring that to me

2434
01:40:39,600 --> 01:40:45,920
and just describe the options and

2435
01:40:43,040 --> 01:40:46,320
let's see who's willing and available

2436
01:40:45,920 --> 01:40:49,119
for

2437
01:40:46,320 --> 01:40:52,400
the various options i think that the

2438
01:40:49,119 --> 01:40:52,400
best we can do at this point

2439
01:40:55,280 --> 01:40:58,480
any more comments on this

2440
01:41:01,840 --> 01:41:05,679
if none then we've reached the last item

2441
01:41:04,960 --> 01:41:09,040
which is

2442
01:41:05,679 --> 01:41:12,000
open floor any anything else

2443
01:41:09,040 --> 01:41:12,000
you want to bring up

2444
01:41:12,560 --> 01:41:16,159
just just a quick question about the

2445
01:41:14,800 --> 01:41:19,119
these beasts again

2446
01:41:16,159 --> 01:41:20,559
as i mentioned um normally it should be

2447
01:41:19,119 --> 01:41:22,719
just 650 without

2448
01:41:20,560 --> 01:41:24,480
you know just fixing bugs but for me use

2449
01:41:22,719 --> 01:41:27,440
of ripple info is really

2450
01:41:24,480 --> 01:41:29,519
already a bug fix for 650 so that's the

2451
01:41:27,440 --> 01:41:33,040
one that i would like to see

2452
01:41:29,520 --> 01:41:36,239
wrapping in

2453
01:41:33,040 --> 01:41:36,639
does it make sense to people it's very

2454
01:41:36,239 --> 01:41:40,000
hard to

2455
01:41:36,639 --> 01:41:42,400
repo without the if we were to do that

2456
01:41:40,000 --> 01:41:46,400
you're talking about doing the

2457
01:41:42,400 --> 01:41:49,839
um the going to internet standard

2458
01:41:46,400 --> 01:41:53,440
theo yep

2459
01:41:49,840 --> 01:41:55,600
yeah so so i i i would like to discuss

2460
01:41:53,440 --> 01:41:57,280
how much like maybe we don't need the

2461
01:41:55,600 --> 01:41:58,400
whole document when we go to internet

2462
01:41:57,280 --> 01:42:00,400
standard

2463
01:41:58,400 --> 01:42:03,040
maybe we only need the part we don't

2464
01:42:00,400 --> 01:42:04,879
maybe we don't need all 24 examples

2465
01:42:03,040 --> 01:42:07,519
or any of them maybe maybe we only need

2466
01:42:04,880 --> 01:42:10,800
the the beginning parts that clarify

2467
01:42:07,520 --> 01:42:13,840
the the text um because

2468
01:42:10,800 --> 01:42:15,600
the document still exists as a people

2469
01:42:13,840 --> 01:42:18,639
can go back and look at it

2470
01:42:15,600 --> 01:42:21,440
um so i don't know

2471
01:42:18,639 --> 01:42:23,360
i mean i just don't want to start

2472
01:42:21,440 --> 01:42:25,599
reformatting that document again no no

2473
01:42:23,360 --> 01:42:27,119
no it's just they're just about stealing

2474
01:42:25,600 --> 01:42:29,920
some text to make sure to

2475
01:42:27,119 --> 01:42:30,960
because rfc five six five fifty is not

2476
01:42:29,920 --> 01:42:34,560
complete

2477
01:42:30,960 --> 01:42:35,520
no it is complete uh user free points

2478
01:42:34,560 --> 01:42:37,920
though

2479
01:42:35,520 --> 01:42:39,199
right we absolutely we absolutely i

2480
01:42:37,920 --> 01:42:40,719
agree with you we absolutely would

2481
01:42:39,199 --> 01:42:42,000
clarify those pieces

2482
01:42:40,719 --> 01:42:45,199
i'm just not sure that we have to

2483
01:42:42,000 --> 01:42:47,600
clarify it with you know

2484
01:42:45,199 --> 01:42:48,719
all all the pages that we had in that

2485
01:42:47,600 --> 01:42:51,199
right

2486
01:42:48,719 --> 01:42:53,040
because we've already published so we

2487
01:42:51,199 --> 01:42:54,879
can probably normatively reference

2488
01:42:53,040 --> 01:42:56,480
even if we are interested can we

2489
01:42:54,880 --> 01:42:56,800
normatively reference something which is

2490
01:42:56,480 --> 01:43:02,239
now

2491
01:42:56,800 --> 01:43:02,239
downref yeah alvaro and like that

2492
01:43:04,000 --> 01:43:08,400
i think so but we may need a blessing

2493
01:43:08,639 --> 01:43:11,840
otherwise we just steal this text we

2494
01:43:10,480 --> 01:43:13,440
want and and

2495
01:43:11,840 --> 01:43:14,880
put them well no we should we should

2496
01:43:13,440 --> 01:43:17,280
pull the text that that's

2497
01:43:14,880 --> 01:43:19,040
normative that says that gives you the

2498
01:43:17,280 --> 01:43:20,239
instructions of when and how to use it

2499
01:43:19,040 --> 01:43:23,119
but i'm just saying

2500
01:43:20,239 --> 01:43:25,360
that we don't need to necessarily uh

2501
01:43:23,119 --> 01:43:27,119
pull in all 24 examples

2502
01:43:25,360 --> 01:43:28,719
because we can certainly informatively

2503
01:43:27,119 --> 01:43:31,440
reference that

2504
01:43:28,719 --> 01:43:33,280
uh other document and say if you need

2505
01:43:31,440 --> 01:43:34,239
more detail more details are in this

2506
01:43:33,280 --> 01:43:38,559
document

2507
01:43:34,239 --> 01:43:42,000
yeah right okay

2508
01:43:38,560 --> 01:43:44,159
how to write the code is is you know

2509
01:43:42,000 --> 01:43:45,199
is clarified in the first you know five

2510
01:43:44,159 --> 01:43:47,040
pages or something

2511
01:43:45,199 --> 01:43:48,719
right and all the other pieces where it

2512
01:43:47,040 --> 01:43:49,600
says updates updates updates well you

2513
01:43:48,719 --> 01:43:52,159
just roll them in

2514
01:43:49,600 --> 01:43:54,159
right that would make sense yeah and

2515
01:43:52,159 --> 01:43:56,320
then we need to discuss if 23 is the

2516
01:43:54,159 --> 01:43:59,599
only value known by the

2517
01:43:56,320 --> 01:44:02,239
this or if we use the old value for

2518
01:43:59,600 --> 01:44:02,239
the api

2519
01:44:03,440 --> 01:44:07,839
although you wanted to say something

2520
01:44:10,480 --> 01:44:13,839
no i was just too too slow and trying to

2521
01:44:12,880 --> 01:44:15,600
admit to

2522
01:44:13,840 --> 01:44:19,520
to answer michael's question but he

2523
01:44:15,600 --> 01:44:19,520
already answered himself so i'm good

2524
01:44:23,679 --> 01:44:31,119
i worked on um rfc 8415

2525
01:44:27,679 --> 01:44:34,880
because the um roll up of dhcb

2526
01:44:31,119 --> 01:44:38,480
v6 um that obsoleted what seven

2527
01:44:34,880 --> 01:44:41,840
documents um over 10 years

2528
01:44:38,480 --> 01:44:44,879
i'll putting it into one document um

2529
01:44:41,840 --> 01:44:47,199
and couldn't remember it no it it didn't

2530
01:44:44,880 --> 01:44:50,480
result in an internet standard document

2531
01:44:47,199 --> 01:44:53,599
it's the code standard um but i think

2532
01:44:50,480 --> 01:44:57,199
there was discussion at some point that

2533
01:44:53,600 --> 01:44:59,679
that um two years later it could be

2534
01:44:57,199 --> 01:45:00,320
status changed up but i i don't remember

2535
01:44:59,679 --> 01:45:02,480
that

2536
01:45:00,320 --> 01:45:04,080
whether that was really the case or not

2537
01:45:02,480 --> 01:45:07,440
um

2538
01:45:04,080 --> 01:45:09,440
but um anyway the the the point is

2539
01:45:07,440 --> 01:45:11,678
that's an example of

2540
01:45:09,440 --> 01:45:12,719
uh i would say more of the melting pot

2541
01:45:11,679 --> 01:45:16,639
activity

2542
01:45:12,719 --> 01:45:19,679
um and that one certainly took uh

2543
01:45:16,639 --> 01:45:21,440
four years to do

2544
01:45:19,679 --> 01:45:25,440
uh probably could have been done in

2545
01:45:21,440 --> 01:45:25,440
three but it took four years to do

2546
01:45:26,159 --> 01:45:31,839
actually maybe maybe five

2547
01:45:42,639 --> 01:45:47,920
okay so i think we'll like carry on with

2548
01:45:46,080 --> 01:45:51,360
that discussion and mailing list

2549
01:45:47,920 --> 01:45:59,840
anything else any other points you want

2550
01:45:51,360 --> 01:45:59,839
to bring

2551
01:46:01,199 --> 01:46:08,320
hearing none nothing in the chat

2552
01:46:04,960 --> 01:46:10,840
last chance i

2553
01:46:08,320 --> 01:46:13,840
didn't show up i'm just looking at the

2554
01:46:10,840 --> 01:46:13,840
list

2555
01:46:15,600 --> 01:46:19,520
oh i'll just show that

2556
01:46:24,800 --> 01:46:28,159
rahul we have a few minutes if you if

2557
01:46:27,280 --> 01:46:31,360
you want we can

2558
01:46:28,159 --> 01:46:33,599
put your slides up uh i

2559
01:46:31,360 --> 01:46:36,480
went through them very quickly but you

2560
01:46:33,600 --> 01:46:39,679
can probably go through the

2561
01:46:36,480 --> 01:46:40,879
uh updates and stuff because uh i wasn't

2562
01:46:39,679 --> 01:46:44,400
too sure so

2563
01:46:40,880 --> 01:46:46,880
i just skipped that so why don't you

2564
01:46:44,400 --> 01:46:48,080
can you hear me yeah peter ah sorry uh

2565
01:46:46,880 --> 01:46:52,320
dominic

2566
01:46:48,080 --> 01:46:54,480
yes we do uh i got the timezone

2567
01:46:52,320 --> 01:46:55,519
incorrect i was we thought it was 1630

2568
01:46:54,480 --> 01:46:58,718
utc

2569
01:46:55,520 --> 01:47:02,320
so if we have how much time do we have

2570
01:46:58,719 --> 01:47:05,040
you can have uh 10 minutes 12 minutes

2571
01:47:02,320 --> 01:47:06,320
yeah okay all right and i went through

2572
01:47:05,040 --> 01:47:10,639
the basics you know

2573
01:47:06,320 --> 01:47:10,639
the first few slides i don't know if you

2574
01:47:10,719 --> 01:47:15,760
uh so these slides uh had been pre

2575
01:47:13,679 --> 01:47:18,800
presented previously uh

2576
01:47:15,760 --> 01:47:21,360
a couple of iitf sessions before

2577
01:47:18,800 --> 01:47:23,760
uh the primary the primary rationale is

2578
01:47:21,360 --> 01:47:26,880
to is to is to provide an end-to-end way

2579
01:47:23,760 --> 01:47:28,400
of making sure that the node

2580
01:47:26,880 --> 01:47:30,800
nodes connectivity has been established

2581
01:47:28,400 --> 01:47:32,559
to the root

2582
01:47:30,800 --> 01:47:34,239
now the mechanism that has been

2583
01:47:32,560 --> 01:47:37,040
described in the draft

2584
01:47:34,239 --> 01:47:37,839
is about setting a k flag in the

2585
01:47:37,040 --> 01:47:40,560
transmitted

2586
01:47:37,840 --> 01:47:41,600
transit information option on per target

2587
01:47:40,560 --> 01:47:43,920
basis

2588
01:47:41,600 --> 01:47:44,880
uh such that root would know whom to

2589
01:47:43,920 --> 01:47:47,840
send

2590
01:47:44,880 --> 01:47:49,040
the root ad back so this particular

2591
01:47:47,840 --> 01:47:52,159
slide talks about

2592
01:47:49,040 --> 01:47:55,600
uh you know how the k flag is set

2593
01:47:52,159 --> 01:47:56,159
and at what on at on war and on what

2594
01:47:55,600 --> 01:47:59,440
basis

2595
01:47:56,159 --> 01:48:01,920
uh the root can decide to send back

2596
01:47:59,440 --> 01:48:03,360
the root act earlier we were calling it

2597
01:48:01,920 --> 01:48:04,159
dow act but then there was a lot of

2598
01:48:03,360 --> 01:48:07,360
confusion

2599
01:48:04,159 --> 01:48:09,199
about the the term used there

2600
01:48:07,360 --> 01:48:11,679
so in the later version in the la in the

2601
01:48:09,199 --> 01:48:12,239
last version in in widget one i changed

2602
01:48:11,679 --> 01:48:16,159
it to

2603
01:48:12,239 --> 01:48:16,159
calling it calling it as root add

2604
01:48:16,960 --> 01:48:19,840
next slide please

2605
01:48:21,199 --> 01:48:26,159
uh so again this is this is the k flag

2606
01:48:24,400 --> 01:48:27,920
one one of the discussions that happened

2607
01:48:26,159 --> 01:48:29,679
in the previous call was

2608
01:48:27,920 --> 01:48:32,560
with regards to handling how would the

2609
01:48:29,679 --> 01:48:35,119
six lrs handle this k flag

2610
01:48:32,560 --> 01:48:37,360
in storing mode of operations 6lrs could

2611
01:48:35,119 --> 01:48:40,639
aggregate multiple taos together

2612
01:48:37,360 --> 01:48:43,360
and send an aggregated target to

2613
01:48:40,639 --> 01:48:43,920
to the upstream nodes if we have another

2614
01:48:43,360 --> 01:48:47,199
flag

2615
01:48:43,920 --> 01:48:49,679
how would this be handled the the

2616
01:48:47,199 --> 01:48:52,159
handling would be very similar to e flag

2617
01:48:49,679 --> 01:48:53,760
currently we have an e flag which

2618
01:48:52,159 --> 01:48:57,119
specifies

2619
01:48:53,760 --> 01:49:00,560
how to handle external targets

2620
01:48:57,119 --> 01:49:03,040
the draft has been updated to explain

2621
01:49:00,560 --> 01:49:03,760
the different scenarios in which the k

2622
01:49:03,040 --> 01:49:05,360
flag

2623
01:49:03,760 --> 01:49:07,360
can be handled by intermediate six and

2624
01:49:05,360 --> 01:49:09,119
six cells again and the handling is not

2625
01:49:07,360 --> 01:49:10,159
very complicated it's much very similar

2626
01:49:09,119 --> 01:49:14,080
to e flag

2627
01:49:10,159 --> 01:49:17,199
but then you know what happens

2628
01:49:14,080 --> 01:49:18,960
if somehow the k flag is still uh

2629
01:49:17,199 --> 01:49:21,919
the intermediate node ends up sending a

2630
01:49:18,960 --> 01:49:23,520
k flag because the path has changed

2631
01:49:21,920 --> 01:49:26,400
so all all those things have been

2632
01:49:23,520 --> 01:49:26,400
mentioned in the draft

2633
01:49:26,639 --> 01:49:30,000
in the worst case an additional root act

2634
01:49:28,480 --> 01:49:31,759
might be sent by the root

2635
01:49:30,000 --> 01:49:33,360
uh with the old with an old path

2636
01:49:31,760 --> 01:49:35,840
sequence uh but that's the worst case

2637
01:49:33,360 --> 01:49:35,839
scenario

2638
01:49:36,000 --> 01:49:43,199
uh there was one more thing so when

2639
01:49:40,880 --> 01:49:45,920
the this particular draft was supposed

2640
01:49:43,199 --> 01:49:49,360
to be used for two purposes one was

2641
01:49:45,920 --> 01:49:51,360
a root node or any other node could

2642
01:49:49,360 --> 01:49:53,759
basically send a root acknowledgement to

2643
01:49:51,360 --> 01:49:55,440
the end node to the target node

2644
01:49:53,760 --> 01:49:57,199
that would signal that the application

2645
01:49:55,440 --> 01:49:59,440
traffic can now begin

2646
01:49:57,199 --> 01:50:00,400
the other option the other use case was

2647
01:49:59,440 --> 01:50:03,040
to

2648
01:50:00,400 --> 01:50:04,719
query the capabilities of that node but

2649
01:50:03,040 --> 01:50:06,719
then in the latest draft in the latest

2650
01:50:04,719 --> 01:50:07,520
capability draft we have we we now have

2651
01:50:06,719 --> 01:50:10,080
its own

2652
01:50:07,520 --> 01:50:10,800
messaging so this this won't be needed

2653
01:50:10,080 --> 01:50:12,639
there

2654
01:50:10,800 --> 01:50:15,760
uh so that particular use case is no

2655
01:50:12,639 --> 01:50:15,760
more true for this graph now

2656
01:50:16,719 --> 01:50:23,199
uh okay uh an extra next slide please

2657
01:50:20,719 --> 01:50:24,639
so one yeah one more other clarification

2658
01:50:23,199 --> 01:50:26,638
that was added

2659
01:50:24,639 --> 01:50:29,040
pascal raises raised a point with

2660
01:50:26,639 --> 01:50:30,560
regards to how to handle rules uh

2661
01:50:29,040 --> 01:50:32,400
there was a discussion on mailing list

2662
01:50:30,560 --> 01:50:34,880
about how do you handle

2663
01:50:32,400 --> 01:50:36,080
uh rpl unaware leaves and this

2664
01:50:34,880 --> 01:50:38,159
acknowledgement

2665
01:50:36,080 --> 01:50:40,480
so this this is something that has been

2666
01:50:38,159 --> 01:50:44,080
clarified in the in the in the draft uh

2667
01:50:40,480 --> 01:50:46,320
uh basically uh

2668
01:50:44,080 --> 01:50:47,920
one thing that uh that that has been

2669
01:50:46,320 --> 01:50:51,119
mentioned in the draft is

2670
01:50:47,920 --> 01:50:54,639
if a ns is sent by the rule then

2671
01:50:51,119 --> 01:50:55,440
then the 6lr generates a dao on basis of

2672
01:50:54,639 --> 01:50:58,639
that

2673
01:50:55,440 --> 01:50:59,598
on the basis of the rule and immediately

2674
01:50:58,639 --> 01:51:01,840
sends an na

2675
01:50:59,599 --> 01:51:03,280
now that any can be sent in response to

2676
01:51:01,840 --> 01:51:06,480
this root acknowledgement

2677
01:51:03,280 --> 01:51:06,480
what it achieves is

2678
01:51:07,040 --> 01:51:11,280
what it achieves is that you know you

2679
01:51:10,320 --> 01:51:12,880
can

2680
01:51:11,280 --> 01:51:14,559
synchronously send only when the

2681
01:51:12,880 --> 01:51:18,320
end-to-end path is established

2682
01:51:14,560 --> 01:51:20,320
the na here can be synchronously sent

2683
01:51:18,320 --> 01:51:21,840
the c sends the n a only in response to

2684
01:51:20,320 --> 01:51:23,840
the root acknowledgement

2685
01:51:21,840 --> 01:51:25,119
so only when the full path is

2686
01:51:23,840 --> 01:51:28,719
established in the network

2687
01:51:25,119 --> 01:51:28,719
the na gets sent back to the row

2688
01:51:29,679 --> 01:51:35,840
uh yeah next slide please

2689
01:51:33,440 --> 01:51:37,519
uh so the the that that's all you know

2690
01:51:35,840 --> 01:51:40,000
those are the major updates uh there

2691
01:51:37,520 --> 01:51:43,520
have been major updates in version one

2692
01:51:40,000 --> 01:51:44,880
uh uh there has been implications for

2693
01:51:43,520 --> 01:51:48,719
delay that now

2694
01:51:44,880 --> 01:51:50,800
been added in the draft as well uh

2695
01:51:48,719 --> 01:51:52,159
it just mentioned that what are the

2696
01:51:50,800 --> 01:51:53,520
delayed house and how do how do you

2697
01:51:52,159 --> 01:51:55,920
handle delay now

2698
01:51:53,520 --> 01:51:55,920
timer

2699
01:51:56,560 --> 01:52:00,320
there has been no reviews on the on the

2700
01:51:58,320 --> 01:52:02,719
draft but i'm hoping

2701
01:52:00,320 --> 01:52:03,440
to get some from the working group and

2702
01:52:02,719 --> 01:52:04,800
you know

2703
01:52:03,440 --> 01:52:07,839
we're checking whether the working group

2704
01:52:04,800 --> 01:52:07,840
is interested in this world

2705
01:52:08,159 --> 01:52:11,440
and that's it that's it uh thank you

2706
01:52:09,440 --> 01:52:13,598
everyone sure

2707
01:52:11,440 --> 01:52:14,480
uh raul actually before you joined we

2708
01:52:13,599 --> 01:52:17,599
had a question

2709
01:52:14,480 --> 01:52:21,040
by alvaro i'm not and we're a bit short

2710
01:52:17,599 --> 01:52:22,080
answering it why don't we just cascade

2711
01:52:21,040 --> 01:52:25,119
the

2712
01:52:22,080 --> 01:52:26,960
dows up and the dialogues back all the

2713
01:52:25,119 --> 01:52:29,598
way to a root

2714
01:52:26,960 --> 01:52:32,320
this was discussed a few years ago and

2715
01:52:29,599 --> 01:52:34,320
it was found that this doesn't work but

2716
01:52:32,320 --> 01:52:35,440
since it's probably fresher in your mind

2717
01:52:34,320 --> 01:52:37,599
than it knows can you

2718
01:52:35,440 --> 01:52:39,119
go through that again yeah yeah so there

2719
01:52:37,599 --> 01:52:41,280
are several approaches to

2720
01:52:39,119 --> 01:52:42,880
you know you uh ensuring this end-to-end

2721
01:52:41,280 --> 01:52:46,239
dao act works so

2722
01:52:42,880 --> 01:52:48,320
in the rpl observations draft we had

2723
01:52:46,239 --> 01:52:49,598
we had talked about what are the

2724
01:52:48,320 --> 01:52:51,920
downsides of

2725
01:52:49,599 --> 01:52:53,920
doing this for example one one of the

2726
01:52:51,920 --> 01:52:57,040
point that usually gets raised is

2727
01:52:53,920 --> 01:53:00,080
if d sends a tao b sends a dow act back

2728
01:52:57,040 --> 01:53:01,840
only when it receives dawah back from a

2729
01:53:00,080 --> 01:53:03,199
this has certain state state

2730
01:53:01,840 --> 01:53:07,199
implications

2731
01:53:03,199 --> 01:53:08,400
uh again if a in the rpl observations

2732
01:53:07,199 --> 01:53:11,040
draft we have

2733
01:53:08,400 --> 01:53:12,000
given a detailed problem statement about

2734
01:53:11,040 --> 01:53:14,400
what are the problems

2735
01:53:12,000 --> 01:53:15,119
with this particular approach uh maybe i

2736
01:53:14,400 --> 01:53:17,679
should

2737
01:53:15,119 --> 01:53:19,598
replicate those observations even in

2738
01:53:17,679 --> 01:53:21,679
this particular draft as to what are the

2739
01:53:19,599 --> 01:53:24,880
implications on state handling

2740
01:53:21,679 --> 01:53:27,599
why it becomes complicated

2741
01:53:24,880 --> 01:53:30,080
all these things you know again those

2742
01:53:27,599 --> 01:53:33,280
those observations i had presented

2743
01:53:30,080 --> 01:53:36,080
in several sessions uh

2744
01:53:33,280 --> 01:53:38,559
in several idf sessions before uh in

2745
01:53:36,080 --> 01:53:41,840
context to rpl observations uh you know

2746
01:53:38,560 --> 01:53:42,880
uh draft so the primary one of the

2747
01:53:41,840 --> 01:53:44,960
primary reason is

2748
01:53:42,880 --> 01:53:48,239
uh the state handling that is required

2749
01:53:44,960 --> 01:53:48,239
on the intermediate 6 lr's

2750
01:53:48,880 --> 01:53:55,599
to to keep that dow act and

2751
01:53:52,560 --> 01:53:59,920
that that's one of the major problem

2752
01:53:55,599 --> 01:54:02,400
what happens if uh uh

2753
01:53:59,920 --> 01:54:03,440
yeah again uh you know that there are

2754
01:54:02,400 --> 01:54:05,119
two or three reasons

2755
01:54:03,440 --> 01:54:07,519
uh different reasons which are coated in

2756
01:54:05,119 --> 01:54:11,920
the actual observations

2757
01:54:07,520 --> 01:54:11,920
okay fair enough um

2758
01:54:12,000 --> 01:54:16,560
i i had an observation reading your

2759
01:54:14,719 --> 01:54:20,239
draft since we have a few minutes

2760
01:54:16,560 --> 01:54:23,360
you uh the requirements section says

2761
01:54:20,239 --> 01:54:23,839
you want to be able to handle um gios

2762
01:54:23,360 --> 01:54:26,559
with

2763
01:54:23,840 --> 01:54:27,040
prefixes target options with prefixes

2764
01:54:26,560 --> 01:54:29,360
which are

2765
01:54:27,040 --> 01:54:30,320
not full addresses but then that's

2766
01:54:29,360 --> 01:54:32,799
section three

2767
01:54:30,320 --> 01:54:33,599
and later down the document you say that

2768
01:54:32,800 --> 01:54:36,719
the

2769
01:54:33,599 --> 01:54:39,199
root act will be sent to

2770
01:54:36,719 --> 01:54:40,320
the address extracted from the target

2771
01:54:39,199 --> 01:54:43,360
option what about

2772
01:54:40,320 --> 01:54:46,559
if that was a prefix not a full address

2773
01:54:43,360 --> 01:54:50,239
yeah yeah so for the for the prefixes uh

2774
01:54:46,560 --> 01:54:52,320
what we are saying is that if if a node

2775
01:54:50,239 --> 01:54:53,598
we are taking an approach where even if

2776
01:54:52,320 --> 01:54:57,759
even if the

2777
01:54:53,599 --> 01:55:00,800
6lr is advertising a prefix

2778
01:54:57,760 --> 01:55:04,719
it should still send the full ip address

2779
01:55:00,800 --> 01:55:07,679
of its interface including the prefix

2780
01:55:04,719 --> 01:55:08,320
we take the same approach which is taken

2781
01:55:07,679 --> 01:55:11,679
uh

2782
01:55:08,320 --> 01:55:11,679
for sending uh

2783
01:55:12,560 --> 01:55:18,320
in the dio when we send the target

2784
01:55:15,840 --> 01:55:21,199
there was one one more so you can send a

2785
01:55:18,320 --> 01:55:21,199
prefix target

2786
01:55:22,800 --> 01:55:27,119
but but still send all the 128 bits uh

2787
01:55:25,840 --> 01:55:29,920
this i need to

2788
01:55:27,119 --> 01:55:31,440
clarify in the draft the there was one

2789
01:55:29,920 --> 01:55:32,560
option that was described to handle this

2790
01:55:31,440 --> 01:55:35,280
particular scenario

2791
01:55:32,560 --> 01:55:35,920
but i i guess i haven't still made make

2792
01:55:35,280 --> 01:55:39,040
changes

2793
01:55:35,920 --> 01:55:40,480
in the draft to i haven't made any

2794
01:55:39,040 --> 01:55:40,880
changes detailed changes in that i have

2795
01:55:40,480 --> 01:55:42,638
to

2796
01:55:40,880 --> 01:55:46,159
explain this scenario but there is a way

2797
01:55:42,639 --> 01:55:48,239
to handle the prefixes as well

2798
01:55:46,159 --> 01:55:48,969
i guess i'll have to add this uh this is

2799
01:55:48,239 --> 01:55:51,119
more detail

2800
01:55:48,970 --> 01:55:53,199
[Music]

2801
01:55:51,119 --> 01:55:54,559
okay i'll write it in the mailing list

2802
01:55:53,199 --> 01:55:57,119
anyway

2803
01:55:54,560 --> 01:55:58,159
at some point you asked to put the full

2804
01:55:57,119 --> 01:56:01,440
address

2805
01:55:58,159 --> 01:56:04,320
of the node uh in the

2806
01:56:01,440 --> 01:56:05,519
dio even here and that's done actually

2807
01:56:04,320 --> 01:56:09,360
we we've done that

2808
01:56:05,520 --> 01:56:11,119
i think it's the unaware leaf draft that

2809
01:56:09,360 --> 01:56:12,559
we made this change that's why we update

2810
01:56:11,119 --> 01:56:14,880
650.

2811
01:56:12,560 --> 01:56:16,639
um but the the changes we put the full

2812
01:56:14,880 --> 01:56:19,040
address and we have a flag

2813
01:56:16,639 --> 01:56:19,760
and so i guess that when you want to

2814
01:56:19,040 --> 01:56:21,440
send the

2815
01:56:19,760 --> 01:56:23,920
the root hack you send it to the full

2816
01:56:21,440 --> 01:56:26,320
address so so it's a prefix you have a

2817
01:56:23,920 --> 01:56:27,199
prefix length which is not 128 which is

2818
01:56:26,320 --> 01:56:29,679
shorter

2819
01:56:27,199 --> 01:56:31,598
but still you put 128 bits because you

2820
01:56:29,679 --> 01:56:33,360
have the full address of the of the node

2821
01:56:31,599 --> 01:56:34,800
um that's already done like that in

2822
01:56:33,360 --> 01:56:36,639
mobile ip so it's just

2823
01:56:34,800 --> 01:56:38,560
like using the same thing i just need to

2824
01:56:36,639 --> 01:56:39,360
put in that explanation in this draft as

2825
01:56:38,560 --> 01:56:41,440
well that's true

2826
01:56:39,360 --> 01:56:42,480
that that's that's precisely what needs

2827
01:56:41,440 --> 01:56:44,320
to be

2828
01:56:42,480 --> 01:56:45,839
that that's still not handled but in the

2829
01:56:44,320 --> 01:56:47,599
draft though

2830
01:56:45,840 --> 01:56:51,199
that that is something i need to change

2831
01:56:47,599 --> 01:56:51,199
that's true thank you thank you

2832
01:56:52,719 --> 01:56:57,840
okay do we have any more questions for

2833
01:56:55,360 --> 01:56:57,839
how

2834
01:57:03,760 --> 01:57:11,840
okay hearing none it's

2835
01:57:07,280 --> 01:57:11,840
57 so i think we're right on time

2836
01:57:12,639 --> 01:57:19,599
thank you for joining and

2837
01:57:16,560 --> 01:57:20,000
have a good day a good night and see you

2838
01:57:19,599 --> 01:57:25,840
soon

2839
01:57:20,000 --> 01:57:25,840
on the mailing list or at the next intro

2840
01:57:26,320 --> 01:57:32,559
monique thanks so much thank you alvaro

2841
01:57:28,880 --> 01:57:32,560
again and again for your reviews

2842
01:57:34,639 --> 01:57:39,840
okay guys bye

2843
02:01:26,639 --> 02:01:28,719
you

