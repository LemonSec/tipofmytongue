1
00:00:39,600 --> 00:00:43,070
yes yes

2
00:01:07,890 --> 00:01:13,420
we're going to start in a couple moments

3
00:01:10,930 --> 00:01:16,659
and I would love to have someone

4
00:01:13,420 --> 00:01:20,350
volunteer to scribe to take minutes and

5
00:01:16,659 --> 00:01:24,640
someone volunteer to be jabbar scribe do

6
00:01:20,350 --> 00:01:33,369
I have a an offer offer of scribing

7
00:01:24,640 --> 00:01:39,929
skills okay thank you I didn't even have

8
00:01:33,369 --> 00:01:39,929
to offer a bribe this time hello okay

9
00:02:44,550 --> 00:02:54,610
okay let's start Andre

10
00:02:50,140 --> 00:02:56,859
we're starting so good morning and

11
00:02:54,610 --> 00:03:03,520
welcome to IRT F open

12
00:02:56,860 --> 00:03:06,250
I'm the IRT F chair Ellison and I think

13
00:03:03,520 --> 00:03:09,760
it's Wednesday morning so we're already

14
00:03:06,250 --> 00:03:15,370
like really tired and jet-lagged and not

15
00:03:09,760 --> 00:03:20,940
getting up sleep so pay attention we

16
00:03:15,370 --> 00:03:27,010
have a a new note well in the IETF and

17
00:03:20,940 --> 00:03:28,600
the IRT F follows the ATF's note well so

18
00:03:27,010 --> 00:03:31,959
this is our version of it which isn't

19
00:03:28,600 --> 00:03:33,609
very different but just you should be

20
00:03:31,959 --> 00:03:35,980
aware but if you haven't read this new

21
00:03:33,610 --> 00:03:44,650
one because it's just getting rolled out

22
00:03:35,980 --> 00:03:48,839
to take a look at it and in addition as

23
00:03:44,650 --> 00:03:52,269
you know there's a photography pal

24
00:03:48,840 --> 00:03:54,489
Photography consent discussion and the

25
00:03:52,269 --> 00:03:57,489
ITF has the iesg has made a statement on

26
00:03:54,489 --> 00:04:00,370
this because we actually do have a lot

27
00:03:57,489 --> 00:04:03,850
of photography in here because of the

28
00:04:00,370 --> 00:04:05,110
NRP I want to make sure people know that

29
00:04:03,850 --> 00:04:08,320
that if you don't want to be

30
00:04:05,110 --> 00:04:10,390
photographed the there will be the video

31
00:04:08,320 --> 00:04:12,340
but you will you're you have the right

32
00:04:10,390 --> 00:04:13,750
to consent or not and you've got your

33
00:04:12,340 --> 00:04:17,079
lanyards but also let us know if you

34
00:04:13,750 --> 00:04:18,910
have any worries about that okay so I

35
00:04:17,079 --> 00:04:21,660
just have a couple of things to say

36
00:04:18,910 --> 00:04:26,650
about IR to have before we get started

37
00:04:21,660 --> 00:04:34,630
this is the the sort of longer-term part

38
00:04:26,650 --> 00:04:36,729
of the of the organization and we we we

39
00:04:34,630 --> 00:04:39,790
definitely have an interest in well

40
00:04:36,729 --> 00:04:44,349
focused research that results in things

41
00:04:39,790 --> 00:04:45,640
that innovate for the ietf of the idea

42
00:04:44,349 --> 00:04:47,979
here is to give people the opportunity

43
00:04:45,640 --> 00:04:51,630
to see their research get in

44
00:04:47,980 --> 00:04:55,060
action and it's a time to incubate that

45
00:04:51,630 --> 00:04:56,560
and I'm sure you know because you've

46
00:04:55,060 --> 00:04:58,120
been coming to research groups that we

47
00:04:56,560 --> 00:04:59,530
have research groups last time if you

48
00:04:58,120 --> 00:05:00,850
were here I talked about how they're

49
00:04:59,530 --> 00:05:05,710
different I'm not going to talk about

50
00:05:00,850 --> 00:05:10,120
that this time and that we have an IR s

51
00:05:05,710 --> 00:05:12,400
G and their names and all that

52
00:05:10,120 --> 00:05:14,320
information is on the IRT F dot org page

53
00:05:12,400 --> 00:05:16,450
and I've noticed that some people don't

54
00:05:14,320 --> 00:05:19,330
seem to know this so I want to I've

55
00:05:16,450 --> 00:05:23,770
added it that IR tip does not produce

56
00:05:19,330 --> 00:05:25,450
standards where priests standards so to

57
00:05:23,770 --> 00:05:27,940
the extent that our FCS come out of the

58
00:05:25,450 --> 00:05:30,880
IRT F they come out as experimental or

59
00:05:27,940 --> 00:05:34,480
informational and they're meant to say

60
00:05:30,880 --> 00:05:38,230
very clearly that this is research and

61
00:05:34,480 --> 00:05:42,280
then one reason to have them in the RFC

62
00:05:38,230 --> 00:05:45,130
form is that that later they may evolve

63
00:05:42,280 --> 00:05:47,650
and migrate into research into results

64
00:05:45,130 --> 00:05:50,469
that are used in standardization but not

65
00:05:47,650 --> 00:05:54,219
in these research groups suggests that's

66
00:05:50,470 --> 00:05:59,350
something and here's a list of all the

67
00:05:54,220 --> 00:06:03,220
research groups the we have this concept

68
00:05:59,350 --> 00:06:04,870
of proposed groups and the idea is that

69
00:06:03,220 --> 00:06:06,850
it should be quite easy to spend

70
00:06:04,870 --> 00:06:09,460
something up because it's not always

71
00:06:06,850 --> 00:06:12,640
easy to tell when what's new and what's

72
00:06:09,460 --> 00:06:14,560
what's a good thing to work on so we

73
00:06:12,640 --> 00:06:16,180
allow a group to form very readily

74
00:06:14,560 --> 00:06:19,030
unlike the working group chartering

75
00:06:16,180 --> 00:06:23,290
process but it gets three meetings and

76
00:06:19,030 --> 00:06:26,799
then the irst and I decide whether

77
00:06:23,290 --> 00:06:28,930
they'll continue or not so we've got a

78
00:06:26,800 --> 00:06:33,610
couple of proposed groups in process now

79
00:06:28,930 --> 00:06:35,650
the the din group the decentralized

80
00:06:33,610 --> 00:06:38,110
internet infrastructure which really

81
00:06:35,650 --> 00:06:41,830
should be called deep it subbed in and

82
00:06:38,110 --> 00:06:43,390
path aware networking and then we have

83
00:06:41,830 --> 00:06:48,159
twelve groups all together counting

84
00:06:43,390 --> 00:06:51,190
those two paths aware networking had

85
00:06:48,160 --> 00:06:53,680
their third meeting yesterday and we had

86
00:06:51,190 --> 00:06:57,969
a hum we do actually Humphrey can

87
00:06:53,680 --> 00:07:00,640
because who doesn't want to hum but the

88
00:06:57,970 --> 00:07:01,880
and the the agreement by the group by

89
00:07:00,640 --> 00:07:04,400
the room was that should go

90
00:07:01,880 --> 00:07:07,130
to our G and I believe it will so that's

91
00:07:04,400 --> 00:07:10,940
something another bit of news is that

92
00:07:07,130 --> 00:07:13,610
when our reach our group gaya which is

93
00:07:10,940 --> 00:07:18,050
the Internet access to the Internet for

94
00:07:13,610 --> 00:07:20,180
all globally is having they've organized

95
00:07:18,050 --> 00:07:22,310
helped to organize with the IAB the

96
00:07:20,180 --> 00:07:24,380
technical plenary tonight so there are

97
00:07:22,310 --> 00:07:26,120
three gaya themed talks and they're

98
00:07:24,380 --> 00:07:30,070
moderated by Jayne coffin who's one of

99
00:07:26,120 --> 00:07:32,360
the co-chairs of Gaia and then this week

100
00:07:30,070 --> 00:07:34,730
everybody's meeting except the network

101
00:07:32,360 --> 00:07:36,380
management group we we do feel that

102
00:07:34,730 --> 00:07:38,480
groups should meet with research

103
00:07:36,380 --> 00:07:40,580
conferences as well sometimes and they

104
00:07:38,480 --> 00:07:42,190
they regularly meet with the noms

105
00:07:40,580 --> 00:07:44,630
conference and that's what they're doing

106
00:07:42,190 --> 00:07:47,360
and then today you're getting the first

107
00:07:44,630 --> 00:07:49,870
look at a potential new group which is

108
00:07:47,360 --> 00:07:52,400
the quantum internet research group and

109
00:07:49,870 --> 00:07:53,900
the goal here is to have you eventually

110
00:07:52,400 --> 00:07:55,609
have to start calling yourself the

111
00:07:53,900 --> 00:07:57,799
classical internet people if you're not

112
00:07:55,610 --> 00:07:59,090
working on quantum so we'll see if

113
00:07:57,800 --> 00:08:03,890
you're convinced of that but we'll have

114
00:07:59,090 --> 00:08:05,739
a remote speaker on that shortly okay so

115
00:08:03,890 --> 00:08:12,440
the other thing is I want to advertise

116
00:08:05,740 --> 00:08:14,480
the the workshop we have a a workshop

117
00:08:12,440 --> 00:08:16,790
that tries to bring academic research

118
00:08:14,480 --> 00:08:20,530
and and our and our standards and the

119
00:08:16,790 --> 00:08:23,390
applied research we do here all together

120
00:08:20,530 --> 00:08:25,700
it's been happening for several years

121
00:08:23,390 --> 00:08:28,159
now it takes place during the summer

122
00:08:25,700 --> 00:08:30,039
meeting and we have an innovation this

123
00:08:28,160 --> 00:08:33,410
year which is that it will take place

124
00:08:30,040 --> 00:08:34,669
during one of the IETF days I'll talk a

125
00:08:33,409 --> 00:08:38,360
little bit more about that at the

126
00:08:34,669 --> 00:08:40,549
plenary tonight the idea is to try to

127
00:08:38,360 --> 00:08:42,349
bring more togetherness between the

128
00:08:40,549 --> 00:08:44,959
people who come to talk about applied

129
00:08:42,349 --> 00:08:47,990
research and the research groups and

130
00:08:44,960 --> 00:08:49,400
working groups themselves and you

131
00:08:47,990 --> 00:08:52,400
probably have something you'd like to

132
00:08:49,400 --> 00:08:55,100
submit and it's due by April 20th so

133
00:08:52,400 --> 00:08:58,180
please think about submitting its really

134
00:08:55,100 --> 00:09:00,950
easy to find if you look up an hour W

135
00:08:58,180 --> 00:09:06,979
2018 or look at the IRT F page you can

136
00:09:00,950 --> 00:09:08,900
find it and the good thing is that you

137
00:09:06,980 --> 00:09:11,330
can either submit a short paper like a

138
00:09:08,900 --> 00:09:13,699
couple pages of something that says hot

139
00:09:11,330 --> 00:09:15,000
and new or you can submit a previously

140
00:09:13,700 --> 00:09:17,280
published paper from the

141
00:09:15,000 --> 00:09:19,350
past year so you don't have to write a

142
00:09:17,280 --> 00:09:21,930
brand new deep 12 page research paper

143
00:09:19,350 --> 00:09:25,080
you can bring to something that you've

144
00:09:21,930 --> 00:09:26,550
done somewhere else to this workshop and

145
00:09:25,080 --> 00:09:28,050
it was that they've been very good and

146
00:09:26,550 --> 00:09:29,910
we're hoping they'll be it'll be even

147
00:09:28,050 --> 00:09:32,219
better and even more exciting because of

148
00:09:29,910 --> 00:09:37,170
the bringing it closer together to the

149
00:09:32,220 --> 00:09:38,730
rest of the meeting okay so these are

150
00:09:37,170 --> 00:09:40,199
some of the links if you want to get

151
00:09:38,730 --> 00:09:43,950
more involved you probably already know

152
00:09:40,200 --> 00:09:45,720
I RTF discussed and announced and we

153
00:09:43,950 --> 00:09:47,850
have wiki links for all the research

154
00:09:45,720 --> 00:09:54,540
groups that you can find that I RTF dot

155
00:09:47,850 --> 00:09:58,530
orgs a mail we tweet and the agenda for

156
00:09:54,540 --> 00:10:00,839
today is I'm almost done and then rod

157
00:09:58,530 --> 00:10:03,089
Venn meters going to speak Stephanie has

158
00:10:00,840 --> 00:10:05,730
a family issue so she will not be

159
00:10:03,090 --> 00:10:07,260
joining us but we are hoping these are

160
00:10:05,730 --> 00:10:09,420
the two proponents for that research

161
00:10:07,260 --> 00:10:10,890
group and they'll rod will tell you

162
00:10:09,420 --> 00:10:12,810
about how to get more involved in that

163
00:10:10,890 --> 00:10:14,819
and then we have our applied network

164
00:10:12,810 --> 00:10:15,959
research prize talks and I'm very

165
00:10:14,820 --> 00:10:18,030
excited about those they'll introduce

166
00:10:15,960 --> 00:10:21,570
those when we get there so I think we're

167
00:10:18,030 --> 00:10:24,569
going to try to bring no let me tell you

168
00:10:21,570 --> 00:10:27,210
about the NRP I'll use this slide when

169
00:10:24,570 --> 00:10:30,240
when we come back I think no let's do it

170
00:10:27,210 --> 00:10:34,280
now sorry so we have our two speakers

171
00:10:30,240 --> 00:10:39,180
coming we are are sponsored the the AARP

172
00:10:34,280 --> 00:10:41,310
provides a monetary award and travel

173
00:10:39,180 --> 00:10:44,310
funding and the sponsors that make that

174
00:10:41,310 --> 00:10:46,829
possible are Comcast NBC Universal in

175
00:10:44,310 --> 00:10:49,439
the Internet Society so thank you and if

176
00:10:46,830 --> 00:10:51,360
you think you'd like to sponsor please

177
00:10:49,440 --> 00:10:54,450
let me know get in touch with I saw for

178
00:10:51,360 --> 00:10:56,640
myself Matt for myself because if we get

179
00:10:54,450 --> 00:10:58,860
more sponsorships will bring more people

180
00:10:56,640 --> 00:11:02,100
back for additional meetings to allow

181
00:10:58,860 --> 00:11:03,980
increased engagement and I wanted to say

182
00:11:02,100 --> 00:11:07,860
also that we have a wonderful program

183
00:11:03,980 --> 00:11:09,630
through the year we have to each ITF we

184
00:11:07,860 --> 00:11:11,730
had the largest set of submissions that

185
00:11:09,630 --> 00:11:14,370
we've ever had and we could definitely

186
00:11:11,730 --> 00:11:16,530
have have made many more Awards because

187
00:11:14,370 --> 00:11:18,150
we had so many good submissions so I

188
00:11:16,530 --> 00:11:21,030
think you're gonna have a good time with

189
00:11:18,150 --> 00:11:23,490
our presentation so and that's it and

190
00:11:21,030 --> 00:11:25,709
that picture is to tell you don't be

191
00:11:23,490 --> 00:11:26,970
like that cat don't read your mail

192
00:11:25,709 --> 00:11:28,560
engaged

193
00:11:26,970 --> 00:11:30,240
our meeting and it's particularly

194
00:11:28,560 --> 00:11:32,250
actually for the research group chairs

195
00:11:30,240 --> 00:11:33,720
who who should look around then if you

196
00:11:32,250 --> 00:11:35,639
see people being like that cat you

197
00:11:33,720 --> 00:11:40,649
probably need to get more discussion

198
00:11:35,639 --> 00:11:44,629
going that's my cat but okay alright so

199
00:11:40,649 --> 00:11:44,629
let me see if I can get us to rod now

200
00:11:48,560 --> 00:12:01,349
okay let's see I have slides so rod can

201
00:11:56,790 --> 00:12:02,610
you speak yes hopefully yes and I think

202
00:12:01,350 --> 00:12:06,180
I'm gonna be showing your slides

203
00:12:02,610 --> 00:12:16,439
probably yeah I'm told you're the one

204
00:12:06,180 --> 00:12:16,888
who gets to run the plot okay okay go

205
00:12:16,439 --> 00:12:19,769
for it

206
00:12:16,889 --> 00:12:23,759
I've got your title page slide tell me

207
00:12:19,769 --> 00:12:26,100
when you want to change okay great so

208
00:12:23,759 --> 00:12:28,170
thank you all for having and I'm sorry

209
00:12:26,100 --> 00:12:30,810
I'm not actually there in person I would

210
00:12:28,170 --> 00:12:34,110
love to be in London with you all but in

211
00:12:30,810 --> 00:12:36,540
solidarity with the the wet having there

212
00:12:34,110 --> 00:12:38,220
we're actually having snow here in Japan

213
00:12:36,540 --> 00:12:43,370
actually in Tokyo too for the first day

214
00:12:38,220 --> 00:12:46,110
of the spring we planned this

215
00:12:43,370 --> 00:12:50,759
presentation Alison asked us to to give

216
00:12:46,110 --> 00:12:52,920
the presentation based on the email that

217
00:12:50,759 --> 00:12:55,740
she did Stephanie I had exchanged over

218
00:12:52,920 --> 00:13:00,180
the course of the last Oh what six or

219
00:12:55,740 --> 00:13:02,100
eight weeks I guess and I want to tell

220
00:13:00,180 --> 00:13:03,750
you a little bit about what a quantum

221
00:13:02,100 --> 00:13:09,029
Internet is and what we're thinking

222
00:13:03,750 --> 00:13:11,279
about and ultimately why I RTF should

223
00:13:09,029 --> 00:13:13,889
care and why RTI or TF should actually

224
00:13:11,279 --> 00:13:15,569
start our working group and tell you how

225
00:13:13,889 --> 00:13:18,509
you can get involved in what kinds of

226
00:13:15,569 --> 00:13:23,790
things that people in the room there

227
00:13:18,509 --> 00:13:26,189
could do so as Alison said I'm rod van

228
00:13:23,790 --> 00:13:28,559
Meter I'm from Kyoto University and the

229
00:13:26,189 --> 00:13:30,209
wide project so I actually probably know

230
00:13:28,559 --> 00:13:32,329
a significant number there in the room

231
00:13:30,209 --> 00:13:36,479
although I can't see you very well

232
00:13:32,329 --> 00:13:38,670
and Stephanie Vader is from the

233
00:13:36,480 --> 00:13:40,860
Technical University of dealt this was

234
00:13:38,670 --> 00:13:43,979
actually originally her idea

235
00:13:40,860 --> 00:13:46,260
and she used to work for one of the I

236
00:13:43,980 --> 00:13:48,420
believe for an ASP and the Netherlands

237
00:13:46,260 --> 00:13:50,660
before actually getting involved in

238
00:13:48,420 --> 00:13:54,750
quantum work so she and I both have a

239
00:13:50,660 --> 00:13:57,510
long history with it actual networking

240
00:13:54,750 --> 00:13:58,650
as was a quantum stuff so that's where

241
00:13:57,510 --> 00:14:00,090
we are

242
00:13:58,650 --> 00:14:08,000
Alison can you go to the next slide

243
00:14:00,090 --> 00:14:12,570
please I have okay so the one other

244
00:14:08,000 --> 00:14:14,790
person I probably introduced while we're

245
00:14:12,570 --> 00:14:17,160
looking at this slide here I think

246
00:14:14,790 --> 00:14:18,780
somewhere in the room is Shelton ahuyama

247
00:14:17,160 --> 00:14:22,439
shelduck can you wave your hand if

248
00:14:18,780 --> 00:14:26,540
you're there somewhere hello he may be

249
00:14:22,440 --> 00:14:29,430
heard he's doing that okay so Oda was a

250
00:14:26,540 --> 00:14:34,380
mine he is actually also a participant

251
00:14:29,430 --> 00:14:36,530
in IETF so he's one of the other people

252
00:14:34,380 --> 00:14:39,689
who actually sits right at the border of

253
00:14:36,530 --> 00:14:42,810
quantum and classical stuff so after I

254
00:14:39,690 --> 00:14:44,580
go off behind here in an hour so you can

255
00:14:42,810 --> 00:14:47,869
track down shota they're at the meeting

256
00:14:44,580 --> 00:14:52,920
in London and talk to him about it so

257
00:14:47,870 --> 00:14:56,460
first off I should say what is a quantum

258
00:14:52,920 --> 00:14:58,079
network and I know a lot of people in

259
00:14:56,460 --> 00:15:01,290
the room are already familiar with

260
00:14:58,080 --> 00:15:05,010
quantum key distribution quantum key

261
00:15:01,290 --> 00:15:11,490
distribution is a way to use quantum

262
00:15:05,010 --> 00:15:14,670
effects to create a shared sequence of

263
00:15:11,490 --> 00:15:17,270
random bits that the physics of the

264
00:15:14,670 --> 00:15:19,740
system is supposed to guarantee you are

265
00:15:17,270 --> 00:15:22,079
known only to the two parties at the

266
00:15:19,740 --> 00:15:26,400
endpoints and then you can use that set

267
00:15:22,080 --> 00:15:29,940
of random bits for a a key for IPSec or

268
00:15:26,400 --> 00:15:33,630
LS or what have you that's the easiest

269
00:15:29,940 --> 00:15:36,510
way to implement qkd is actually using

270
00:15:33,630 --> 00:15:39,600
what we call a an onion titled quantum

271
00:15:36,510 --> 00:15:41,510
network so it uses single photons but

272
00:15:39,600 --> 00:15:45,690
you don't actually have to have

273
00:15:41,510 --> 00:15:47,430
complicated memories and a complete

274
00:15:45,690 --> 00:15:53,850
quantum computer that serves as the

275
00:15:47,430 --> 00:15:55,920
equivalent of your router if it works it

276
00:15:53,850 --> 00:15:59,699
adds to the longevity of the secrecy of

277
00:15:55,920 --> 00:16:03,449
your encrypted information but it works

278
00:15:59,699 --> 00:16:05,779
on the prefer of it 100 kilometers or

279
00:16:03,449 --> 00:16:08,130
200 kilometers through fiber but

280
00:16:05,779 --> 00:16:08,910
interior also works over satellite and

281
00:16:08,130 --> 00:16:11,160
in fact there have been demonstrations

282
00:16:08,910 --> 00:16:14,610
of that done over the course of the last

283
00:16:11,160 --> 00:16:16,529
couple of years it's sort of weakened

284
00:16:14,610 --> 00:16:19,560
multi-hop settings but better for

285
00:16:16,529 --> 00:16:21,959
point-to-point it's a lot easier than a

286
00:16:19,560 --> 00:16:23,729
tank building entangled networks at the

287
00:16:21,959 --> 00:16:26,758
physical implementation level it's still

288
00:16:23,730 --> 00:16:29,399
not very easy so a lot of you are

289
00:16:26,759 --> 00:16:32,220
probably already familiar with the basic

290
00:16:29,399 --> 00:16:35,839
idea of qkd you've heard us or somebody

291
00:16:32,220 --> 00:16:39,209
else talking about it at some point

292
00:16:35,839 --> 00:16:41,880
that's only one of the applications that

293
00:16:39,209 --> 00:16:45,649
we actually envision for for networks in

294
00:16:41,880 --> 00:16:48,449
the long run but those other kinds of

295
00:16:45,649 --> 00:16:50,790
applications that I want to tell you

296
00:16:48,449 --> 00:16:52,589
about require what's called an entangled

297
00:16:50,790 --> 00:16:57,719
network I'm not going to go into the

298
00:16:52,589 --> 00:16:59,339
details of what's going on at the

299
00:16:57,720 --> 00:17:01,620
physical level but basically it means

300
00:16:59,339 --> 00:17:04,439
that you're creating a shared quantum

301
00:17:01,620 --> 00:17:05,880
state over a distance and so the work of

302
00:17:04,439 --> 00:17:09,230
the quantum network then is to actually

303
00:17:05,880 --> 00:17:12,140
create that shared quantum state

304
00:17:09,230 --> 00:17:13,919
entangled networks are good for a set of

305
00:17:12,140 --> 00:17:18,169
applications I'm going to show you those

306
00:17:13,919 --> 00:17:22,980
a little bit more in the next slide and

307
00:17:18,169 --> 00:17:25,169
in theory using quantum repeaters which

308
00:17:22,980 --> 00:17:27,059
are not like classical repeaters the

309
00:17:25,169 --> 00:17:28,140
quantum repeaters more like what what in

310
00:17:27,059 --> 00:17:32,220
the internet world we would call a

311
00:17:28,140 --> 00:17:34,770
router using quantum repeaters we can in

312
00:17:32,220 --> 00:17:38,400
theory coupled together systems that are

313
00:17:34,770 --> 00:17:40,168
as an arbitrary distance apart to within

314
00:17:38,400 --> 00:17:42,179
sort of the normal limitations of

315
00:17:40,169 --> 00:17:43,470
networking as opposed to the distance

316
00:17:42,179 --> 00:17:46,020
over which you lose the single photon

317
00:17:43,470 --> 00:17:50,450
which is the limitation in unentangled

318
00:17:46,020 --> 00:17:58,080
networks also next slide please

319
00:17:50,450 --> 00:18:01,440
okay so on this slide I've actually got

320
00:17:58,080 --> 00:18:03,330
a few of how I think about the

321
00:18:01,440 --> 00:18:06,630
applications for entangled quantum

322
00:18:03,330 --> 00:18:07,560
networks there are three large bubbles

323
00:18:06,630 --> 00:18:10,110
there

324
00:18:07,560 --> 00:18:12,510
the purple one is distributed

325
00:18:10,110 --> 00:18:15,629
cryptographic functions the blue is

326
00:18:12,510 --> 00:18:20,220
sensor networks and that the yellow one

327
00:18:15,630 --> 00:18:23,760
is distributed computation you can see

328
00:18:20,220 --> 00:18:25,530
sort of on there on the the pin diagram

329
00:18:23,760 --> 00:18:28,290
that there are a set of potential

330
00:18:25,530 --> 00:18:32,010
applications UK D is in the middle on

331
00:18:28,290 --> 00:18:35,370
the light it's sort of a it sort of sits

332
00:18:32,010 --> 00:18:36,750
at the border between sensor networks

333
00:18:35,370 --> 00:18:38,909
and distributed cryptographic functions

334
00:18:36,750 --> 00:18:42,960
because really what's actually happening

335
00:18:38,910 --> 00:18:45,300
with UK D is it's behaving as a type of

336
00:18:42,960 --> 00:18:47,490
sensor and detecting the presence or

337
00:18:45,300 --> 00:18:51,480
absence of an eavesdropper in your

338
00:18:47,490 --> 00:18:54,840
communication channel that's one

339
00:18:51,480 --> 00:18:56,430
potential to use another one over tuned

340
00:18:54,840 --> 00:18:59,280
in the distributed cryptographic

341
00:18:56,430 --> 00:19:02,640
functions up there you can see the top

342
00:18:59,280 --> 00:19:05,550
of the Senator are visiting agreement

343
00:19:02,640 --> 00:19:08,400
and leader election if you would get

344
00:19:05,550 --> 00:19:12,770
Byzantine agreement and secure leader

345
00:19:08,400 --> 00:19:16,290
election wanting to participate oceans

346
00:19:12,770 --> 00:19:19,320
reduce our dependency on public key

347
00:19:16,290 --> 00:19:28,920
one-way fund additional complexity as

348
00:19:19,320 --> 00:19:34,500
the basis that's one area of quantum

349
00:19:28,920 --> 00:19:35,600
networks in the lower-right sensor

350
00:19:34,500 --> 00:19:38,670
networks

351
00:19:35,600 --> 00:19:43,590
besides key itself there are two or

352
00:19:38,670 --> 00:19:49,320
three other good uses for your networks

353
00:19:43,590 --> 00:19:53,929
and Big B clocks is one of the

354
00:19:49,320 --> 00:19:57,240
importance of synchronization they're

355
00:19:53,930 --> 00:20:00,530
doing this using quantum effects that

356
00:19:57,240 --> 00:20:03,530
would be in theory named us

357
00:20:00,530 --> 00:20:03,530
synchronization

358
00:20:13,770 --> 00:20:20,040
so that clock actually is a form of

359
00:20:17,120 --> 00:20:24,989
reference frame it gives you it tells

360
00:20:20,040 --> 00:20:26,370
you what the time is in a couple of

361
00:20:24,990 --> 00:20:29,400
different places it allows them to

362
00:20:26,370 --> 00:20:32,159
essentially synchronize via the axis of

363
00:20:29,400 --> 00:20:37,230
time but distributive quantum states can

364
00:20:32,160 --> 00:20:40,170
also in theory be used as a reference

365
00:20:37,230 --> 00:20:41,400
frame in the physical sense as well and

366
00:20:40,170 --> 00:20:44,520
so people are investigating different

367
00:20:41,400 --> 00:20:47,130
kinds of sensors for that and also for

368
00:20:44,520 --> 00:20:51,360
what's called for interferometry which

369
00:20:47,130 --> 00:20:55,550
is a large scale astronomical

370
00:20:51,360 --> 00:20:57,929
installations collect from multiple

371
00:20:55,550 --> 00:21:00,870
telescopes or multiple radio antennas

372
00:20:57,930 --> 00:21:03,690
and combine them into a single signal so

373
00:21:00,870 --> 00:21:07,040
at that level it's very much a physical

374
00:21:03,690 --> 00:21:10,650
level operation that's going on there

375
00:21:07,040 --> 00:21:16,100
and then in the lower-left the third

376
00:21:10,650 --> 00:21:21,200
circle the yellow is distributed

377
00:21:16,100 --> 00:21:21,199
computation that this in this sense is

378
00:21:22,190 --> 00:21:30,690
largely like the ARPANET this is an a

379
00:21:27,740 --> 00:21:33,060
distributed system in which you actually

380
00:21:30,690 --> 00:21:35,310
connect to and use servers over a large

381
00:21:33,060 --> 00:21:37,500
Podesta over a long distance and the

382
00:21:35,310 --> 00:21:39,659
idea is that even if you have a computer

383
00:21:37,500 --> 00:21:43,230
that isn't very capable at your site

384
00:21:39,660 --> 00:21:44,820
that you can connect to a quantum

385
00:21:43,230 --> 00:21:45,990
mainframe somewhere else out there in

386
00:21:44,820 --> 00:21:51,899
the world and be able to use that

387
00:21:45,990 --> 00:21:54,030
quantum mainframe remotely over the over

388
00:21:51,900 --> 00:21:58,020
the quantum network now why is that

389
00:21:54,030 --> 00:22:01,200
different from just being able to do

390
00:21:58,020 --> 00:22:05,879
what you can do today which is log on to

391
00:22:01,200 --> 00:22:08,840
IBM's website and use a quantum computer

392
00:22:05,880 --> 00:22:12,360
that's sitting in Yorktown Heights

393
00:22:08,840 --> 00:22:16,020
remotely via the web well if you begin

394
00:22:12,360 --> 00:22:18,540
with quantum entanglement between your

395
00:22:16,020 --> 00:22:20,250
site and the mating Freddie

396
00:22:18,540 --> 00:22:23,310
then it's possible to do what's called

397
00:22:20,250 --> 00:22:24,970
blind computation and the blind

398
00:22:23,310 --> 00:22:31,658
computation is

399
00:22:24,970 --> 00:22:33,490
a mechanism or execute asking a server

400
00:22:31,659 --> 00:22:36,850
to execute a function for you without

401
00:22:33,490 --> 00:22:40,000
giving the server any information about

402
00:22:36,850 --> 00:22:42,639
the input data the algorithm that's

403
00:22:40,000 --> 00:22:46,750
being executed or the output data so

404
00:22:42,640 --> 00:22:49,179
it's like gendry's homomorphic

405
00:22:46,750 --> 00:22:50,549
encryption in in terms of its role in

406
00:22:49,179 --> 00:22:52,720
the ecosystem although the underlying

407
00:22:50,549 --> 00:22:54,580
technology is very different if you're

408
00:22:52,720 --> 00:22:55,780
familiar with homomorphic encryption you

409
00:22:54,580 --> 00:23:01,389
can think of it in kind of the same

410
00:22:55,780 --> 00:23:03,760
views so those are the three broad areas

411
00:23:01,390 --> 00:23:05,830
in which I can see uses for for a

412
00:23:03,760 --> 00:23:08,530
quantum network distributed

413
00:23:05,830 --> 00:23:11,439
cryptographic functions sensor networks

414
00:23:08,530 --> 00:23:12,658
and distributed computation okay Alison

415
00:23:11,440 --> 00:23:22,409
next slide please

416
00:23:12,659 --> 00:23:25,809
okay so I mentioned repeat a minute ago

417
00:23:22,409 --> 00:23:27,760
quantum repeaters quantum repeaters are

418
00:23:25,809 --> 00:23:30,190
the equivalent of routers in the

419
00:23:27,760 --> 00:23:32,610
internet and they have four basic tasks

420
00:23:30,190 --> 00:23:36,580
which are listed up there on the screen

421
00:23:32,610 --> 00:23:39,219
first is to the basic entanglement the

422
00:23:36,580 --> 00:23:42,510
basic quantum state over a single hop

423
00:23:39,220 --> 00:23:46,059
over a 5 or over over a free space link

424
00:23:42,510 --> 00:23:47,620
the second task is to manage the

425
00:23:46,059 --> 00:23:49,570
different kinds of errors that there are

426
00:23:47,620 --> 00:23:52,539
including the loss of photons and

427
00:23:49,570 --> 00:23:54,158
inaccuracies in in the operations on

428
00:23:52,539 --> 00:23:58,179
your quantum states and the problem the

429
00:23:54,159 --> 00:24:01,000
fact that memory has limited lifetim the

430
00:23:58,179 --> 00:24:03,159
third task is to extend entanglement

431
00:24:01,000 --> 00:24:07,000
across multiple hops so the behavior of

432
00:24:03,159 --> 00:24:09,630
a network and then the fourth task is to

433
00:24:07,000 --> 00:24:11,950
actually be part of that now including

434
00:24:09,630 --> 00:24:13,840
dealing with routing and managing

435
00:24:11,950 --> 00:24:16,240
resources and security in those sorts of

436
00:24:13,840 --> 00:24:19,949
things and if in particular those last

437
00:24:16,240 --> 00:24:22,240
couple of bullet points that I think

438
00:24:19,950 --> 00:24:23,830
folks that are there in the room are

439
00:24:22,240 --> 00:24:27,270
likely to be able to make a positive

440
00:24:23,830 --> 00:24:30,270
contribution Georgia's next slide please

441
00:24:27,270 --> 00:24:30,270
ok

442
00:24:31,940 --> 00:24:42,710
so that it gave you just three minutes

443
00:24:38,540 --> 00:24:44,930
on the the why what is it that we want

444
00:24:42,710 --> 00:24:46,490
to accomplish by doing doing this the

445
00:24:44,930 --> 00:24:49,280
next thing I want to do is to sort of

446
00:24:46,490 --> 00:24:51,110
give you an idea give you a sense of

447
00:24:49,280 --> 00:24:54,620
what's going on in the world and the

448
00:24:51,110 --> 00:24:56,270
fact that this is in fact happening the

449
00:24:54,620 --> 00:25:00,530
right inside of the slide there you

450
00:24:56,270 --> 00:25:02,840
could just logo to us from five startup

451
00:25:00,530 --> 00:25:06,320
companies that have been around most of

452
00:25:02,840 --> 00:25:08,270
them for a while now but overall in the

453
00:25:06,320 --> 00:25:11,540
quantum information industry there are

454
00:25:08,270 --> 00:25:13,250
now more than 50 startups many of them

455
00:25:11,540 --> 00:25:16,700
that have been created within the last

456
00:25:13,250 --> 00:25:19,010
year some of them are hardware companies

457
00:25:16,700 --> 00:25:20,660
trying to build quantum computers some

458
00:25:19,010 --> 00:25:22,010
of them are software companies trying to

459
00:25:20,660 --> 00:25:25,640
figure out how to use the existing

460
00:25:22,010 --> 00:25:27,560
quantum computers and the some of them

461
00:25:25,640 --> 00:25:30,140
are networking companies you know these

462
00:25:27,560 --> 00:25:33,379
that are here on the slide are all qkd

463
00:25:30,140 --> 00:25:34,790
companies as far as i'm aware of none of

464
00:25:33,380 --> 00:25:36,710
these companies are actively working on

465
00:25:34,790 --> 00:25:38,450
our computers yet but that may very well

466
00:25:36,710 --> 00:25:41,930
be internal efforts that they're not

467
00:25:38,450 --> 00:25:44,330
actually talking about in public so it's

468
00:25:41,930 --> 00:25:47,270
happening in the startup industry it's

469
00:25:44,330 --> 00:25:49,699
also happening in the big labs IBM

470
00:25:47,270 --> 00:25:51,980
Google Intel Microsoft and a lot of

471
00:25:49,700 --> 00:25:54,080
attention for their work and there's

472
00:25:51,980 --> 00:25:56,900
also event venture funding that's out

473
00:25:54,080 --> 00:25:59,179
there there's also of course a lot of

474
00:25:56,900 --> 00:26:02,210
support from governments and so there's

475
00:25:59,180 --> 00:26:05,300
entire complete ecosystem of people who

476
00:26:02,210 --> 00:26:07,730
are working to create a quantum

477
00:26:05,300 --> 00:26:09,260
information technology industry and I

478
00:26:07,730 --> 00:26:12,820
think you can argue that that the fact

479
00:26:09,260 --> 00:26:15,800
that industry already exists today so

480
00:26:12,820 --> 00:26:18,139
the technology the knowledge the

481
00:26:15,800 --> 00:26:20,540
ecosystem are all reaching this point

482
00:26:18,140 --> 00:26:25,550
where we are sitting right at the edge

483
00:26:20,540 --> 00:26:27,139
where it where this whole thing to

484
00:26:25,550 --> 00:26:31,010
blossom and over the next several years

485
00:26:27,140 --> 00:26:32,930
you're going to see actually used for

486
00:26:31,010 --> 00:26:36,470
quantum information technology find out

487
00:26:32,930 --> 00:26:38,750
now the quantum repeaters is arguably

488
00:26:36,470 --> 00:26:40,910
the hardest part of all of this and so

489
00:26:38,750 --> 00:26:43,400
it's been people but wow it's going to

490
00:26:40,910 --> 00:26:46,220
be a little while yet before onto

491
00:26:43,400 --> 00:26:48,110
repeaters of their in the wide world

492
00:26:46,220 --> 00:26:49,610
something you people can go and buy off

493
00:26:48,110 --> 00:26:54,309
of the shelf but that's what we're

494
00:26:49,610 --> 00:26:54,309
working toward next slide please

495
00:26:57,520 --> 00:27:03,580
so Stephanie's really the one gotta be

496
00:27:01,730 --> 00:27:06,730
about here to talk to you all about the

497
00:27:03,580 --> 00:27:09,789
this particular slide because she was

498
00:27:06,730 --> 00:27:13,960
the leaders of this particular project

499
00:27:09,789 --> 00:27:16,280
at the Technical University of Delft

500
00:27:13,960 --> 00:27:20,659
just to come a few hundred kilometres

501
00:27:16,280 --> 00:27:22,668
Wilbur you all right now a couple of

502
00:27:20,659 --> 00:27:25,789
years ago listen it was closed in

503
00:27:22,669 --> 00:27:27,880
October twenty fifty years ago since the

504
00:27:25,789 --> 00:27:32,960
experiments we're done

505
00:27:27,880 --> 00:27:35,720
the folks at Delft look tiny pieces of

506
00:27:32,960 --> 00:27:41,510
diamond that it were set about a

507
00:27:35,720 --> 00:27:45,429
kilometer apart and coerced them to hold

508
00:27:41,510 --> 00:27:47,780
qubits quantum bits worth of data and

509
00:27:45,429 --> 00:27:51,679
inside that tiny chip of diamond and

510
00:27:47,780 --> 00:27:53,600
also to emit photons and then they take

511
00:27:51,679 --> 00:27:55,850
those photons and they route them

512
00:27:53,600 --> 00:28:01,418
together as in the diagram at the bottom

513
00:27:55,850 --> 00:28:04,600
of the slide there and then they conduct

514
00:28:01,419 --> 00:28:07,580
an interference operation between the

515
00:28:04,600 --> 00:28:10,399
photons there in the middle and once

516
00:28:07,580 --> 00:28:14,510
that's done then this quantum

517
00:28:10,400 --> 00:28:18,230
entanglement over this distance of 1.3

518
00:28:14,510 --> 00:28:21,379
kilometers in the across the the Delft

519
00:28:18,230 --> 00:28:23,299
campus so this can't be done today the

520
00:28:21,380 --> 00:28:25,429
optical fiber over from her modest

521
00:28:23,299 --> 00:28:30,049
distances its experimentally up and

522
00:28:25,429 --> 00:28:31,970
running and the LAT the group at Delft

523
00:28:30,049 --> 00:28:33,230
it is arguably the world's best but

524
00:28:31,970 --> 00:28:36,919
there are a lot of people working on

525
00:28:33,230 --> 00:28:38,350
similar sorts of things next slide

526
00:28:36,919 --> 00:28:43,929
please

527
00:28:38,350 --> 00:28:46,908
okay so besides just doing this using

528
00:28:43,929 --> 00:28:50,630
fibers that are actually in the ground

529
00:28:46,909 --> 00:28:52,669
or Orion buildings in between there's

530
00:28:50,630 --> 00:28:55,429
all of them work on doing this using

531
00:28:52,669 --> 00:28:56,840
satellites and you may have heard about

532
00:28:55,429 --> 00:29:00,140
this too made a tremendous amount of

533
00:28:56,840 --> 00:29:06,080
news last summer when chatting dance

534
00:29:00,140 --> 00:29:07,490
they had succeeded in receiving quantum

535
00:29:06,080 --> 00:29:13,250
signals on the ground

536
00:29:07,490 --> 00:29:18,740
I'd like that they put into orbit very

537
00:29:13,250 --> 00:29:21,230
first we're done were essentially qkg

538
00:29:18,740 --> 00:29:23,510
in between two stations on the ground

539
00:29:21,230 --> 00:29:27,290
there they're separated by about a

540
00:29:23,510 --> 00:29:30,080
thousand kilometers or so but later they

541
00:29:27,290 --> 00:29:31,430
continue to conduct experiments they had

542
00:29:30,080 --> 00:29:33,560
already prepared for them there with the

543
00:29:31,430 --> 00:29:35,810
satellite and they continued to conduct

544
00:29:33,560 --> 00:29:37,909
them and they have actually generated

545
00:29:35,810 --> 00:29:40,909
entanglement across that across that

546
00:29:37,910 --> 00:29:45,410
kind of distance and that also more

547
00:29:40,910 --> 00:29:48,740
recently used a slightly different

548
00:29:45,410 --> 00:29:53,530
approach where the satellite is actually

549
00:29:48,740 --> 00:29:56,270
used as a relay station and it performs

550
00:29:53,530 --> 00:29:58,940
qkd in between the satellite and the

551
00:29:56,270 --> 00:30:01,730
ground when it flies over China and it

552
00:29:58,940 --> 00:30:04,460
stores the classical bits that have

553
00:30:01,730 --> 00:30:05,810
created in the process in the memory of

554
00:30:04,460 --> 00:30:09,110
the satellite and then when the

555
00:30:05,810 --> 00:30:11,810
satellites orbit carries it over Austria

556
00:30:09,110 --> 00:30:13,820
then they perform qkd

557
00:30:11,810 --> 00:30:17,169
again between the satellite and Austria

558
00:30:13,820 --> 00:30:21,790
and then they have created based secure

559
00:30:17,170 --> 00:30:21,790
key that's shared between Austria and

560
00:30:21,910 --> 00:30:28,580
China now this was actually in the news

561
00:30:26,360 --> 00:30:31,729
quite a bit left summer where or last

562
00:30:28,580 --> 00:30:34,399
fall when they talked about it and used

563
00:30:31,730 --> 00:30:36,980
the the heating that was so generated to

564
00:30:34,400 --> 00:30:41,900
encrypt a conversation between China and

565
00:30:36,980 --> 00:30:46,690
Vienna so it got a lot of press we can

566
00:30:41,900 --> 00:30:48,590
talk about the actual security

567
00:30:46,690 --> 00:30:49,940
implications for all of that and whether

568
00:30:48,590 --> 00:30:52,480
or not you have to trust the satellite

569
00:30:49,940 --> 00:30:55,520
platform and things like that for qkd

570
00:30:52,480 --> 00:31:00,260
but when you're actually using it excuse

571
00:30:55,520 --> 00:31:02,150
me for creating entanglement over this

572
00:31:00,260 --> 00:31:03,530
kind of distance then those kinds of

573
00:31:02,150 --> 00:31:08,600
security arguments are actually very

574
00:31:03,530 --> 00:31:11,270
different and so please or already of a

575
00:31:08,600 --> 00:31:13,399
particular mind with respect to a cue

576
00:31:11,270 --> 00:31:13,910
cookie in certain senses realize that

577
00:31:13,400 --> 00:31:15,590
the argument

578
00:31:13,910 --> 00:31:20,030
are going to be very different with what

579
00:31:15,590 --> 00:31:22,699
we're talking about wide area works that

580
00:31:20,030 --> 00:31:25,610
actually provides entanglement in the

581
00:31:22,700 --> 00:31:27,260
head and China's not alone in doing work

582
00:31:25,610 --> 00:31:29,840
on this that revolves the experiments

583
00:31:27,260 --> 00:31:31,730
from the Canada and Singapore and the

584
00:31:29,840 --> 00:31:34,820
other there on the on the right in the

585
00:31:31,730 --> 00:31:37,370
upper part is actually a satellite

586
00:31:34,820 --> 00:31:40,480
that's in orbit right now it was put up

587
00:31:37,370 --> 00:31:45,080
there by Japan last year as well so

588
00:31:40,480 --> 00:31:47,960
satellite work and also a ground-based

589
00:31:45,080 --> 00:31:58,149
work is going on in this next slide

590
00:31:47,960 --> 00:32:02,300
please okay and ultimately there's work

591
00:31:58,150 --> 00:32:04,100
my god all around the world but Europe

592
00:32:02,300 --> 00:32:05,210
right now is one of the places where

593
00:32:04,100 --> 00:32:08,689
that where there's a tremendous amount

594
00:32:05,210 --> 00:32:13,550
of not individual effort but very

595
00:32:08,690 --> 00:32:15,770
focused effort okay the EU has a quantum

596
00:32:13,550 --> 00:32:19,250
internet effort that's known as the one

597
00:32:15,770 --> 00:32:22,190
of the Internet Alliance there's a logo

598
00:32:19,250 --> 00:32:25,730
for it there on on the left and a a URL

599
00:32:22,190 --> 00:32:27,980
quantum def internet dot team and you

600
00:32:25,730 --> 00:32:31,040
can see going back by going to that that

601
00:32:27,980 --> 00:32:33,490
website you can be the the list of

602
00:32:31,040 --> 00:32:35,210
researchers were involved in this

603
00:32:33,490 --> 00:32:36,770
Stephanie again is the one of the

604
00:32:35,210 --> 00:32:38,300
prominent researchers that's involved I

605
00:32:36,770 --> 00:32:42,500
wish you were here to tell you more

606
00:32:38,300 --> 00:32:49,490
about it but it's part of the II used

607
00:32:42,500 --> 00:32:51,590
overall 1 billion euro effort to develop

608
00:32:49,490 --> 00:32:56,110
quantum technologies and bring them out

609
00:32:51,590 --> 00:33:01,689
of the laboratory and into the actual

610
00:32:56,110 --> 00:33:01,689
market the next slide okay

611
00:33:04,240 --> 00:33:09,250
so what does it take to actually build

612
00:33:06,460 --> 00:33:13,360
one of these networks this slide comes

613
00:33:09,250 --> 00:33:18,220
from a paper that I wrote fully a decade

614
00:33:13,360 --> 00:33:20,350
ago on protocols for quantum repeaters

615
00:33:18,220 --> 00:33:22,990
and you'll see that there's there's sort

616
00:33:20,350 --> 00:33:25,540
of a stack many of you in the room

617
00:33:22,990 --> 00:33:28,120
probably know Jo touch Jo touch and I or

618
00:33:25,540 --> 00:33:34,710
argued about this quite a bit over

619
00:33:28,120 --> 00:33:34,709
various meals and visits to each other

620
00:33:36,810 --> 00:33:44,320
the upper layers everything except the

621
00:33:41,410 --> 00:33:47,320
bottom is actually a classical control

622
00:33:44,320 --> 00:33:48,730
protocol so at the bottom in the purple

623
00:33:47,320 --> 00:33:51,010
box you see it says physical

624
00:33:48,730 --> 00:33:54,430
entanglement and letters they're the

625
00:33:51,010 --> 00:33:57,460
only quantum that's the only part of the

626
00:33:54,430 --> 00:33:59,920
entire system that's actually physically

627
00:33:57,460 --> 00:34:04,930
quantum so everything else that's above

628
00:33:59,920 --> 00:34:07,420
it is classical protocols or controlling

629
00:34:04,930 --> 00:34:10,900
the behavior of the quantum system in

630
00:34:07,420 --> 00:34:13,030
order to go from having entanglement

631
00:34:10,900 --> 00:34:14,440
that exists over a single link to

632
00:34:13,030 --> 00:34:18,250
entanglement that actually spans

633
00:34:14,440 --> 00:34:21,159
end-to-end for from your communication

634
00:34:18,250 --> 00:34:22,600
endpoints now the protocol stack that's

635
00:34:21,159 --> 00:34:24,480
above it it involves a series of

636
00:34:22,600 --> 00:34:29,429
functions which are going to depend on

637
00:34:24,480 --> 00:34:33,460
certain key design decisions from your

638
00:34:29,429 --> 00:34:35,529
your general architecture from your your

639
00:34:33,460 --> 00:34:38,110
quantum repeaters but this is a

640
00:34:35,530 --> 00:34:40,570
reasonable example some of it happens

641
00:34:38,110 --> 00:34:44,560
over a single hop somewhat what happens

642
00:34:40,570 --> 00:34:46,330
over two hops or four hops along the

643
00:34:44,560 --> 00:34:48,100
path chosen through the work and then

644
00:34:46,330 --> 00:34:50,170
some of it's done the end to end and

645
00:34:48,100 --> 00:34:52,420
that's where the the argument with Jo

646
00:34:50,170 --> 00:34:54,639
touch comes in is all right well maybe

647
00:34:52,420 --> 00:34:57,340
it's not really a layered protocol in

648
00:34:54,639 --> 00:34:58,960
the sense that the ITF is accustomed to

649
00:34:57,340 --> 00:35:01,360
things it's actually much more of a

650
00:34:58,960 --> 00:35:04,000
distributed computation because all of

651
00:35:01,360 --> 00:35:07,680
the individual nodes that are in the

652
00:35:04,000 --> 00:35:13,540
path actually participate actively in

653
00:35:07,680 --> 00:35:14,980
the entire process as you are conducting

654
00:35:13,540 --> 00:35:15,820
your communications over an extended

655
00:35:14,980 --> 00:35:18,260
period of time

656
00:35:15,820 --> 00:35:23,640
so it's it's a very

657
00:35:18,260 --> 00:35:26,910
approach and that's fun forward and

658
00:35:23,640 --> 00:35:31,920
forget approach to building a protocol

659
00:35:26,910 --> 00:35:34,558
but it is an area where classical

660
00:35:31,920 --> 00:35:37,079
protocol design people can make a very

661
00:35:34,559 --> 00:35:39,210
strong positive contribution because of

662
00:35:37,079 --> 00:35:43,770
the expertise in doing these kinds of

663
00:35:39,210 --> 00:35:45,000
things and the Pitts yes so Allison

664
00:35:43,770 --> 00:35:51,030
perfect timing to switch to the next

665
00:35:45,000 --> 00:35:54,720
slide there so we are getting to the the

666
00:35:51,030 --> 00:35:57,630
stage of wanting to take all of this and

667
00:35:54,720 --> 00:36:01,230
discuss these kind of important problems

668
00:35:57,630 --> 00:36:03,839
in any network how you deal with routing

669
00:36:01,230 --> 00:36:05,220
and how you deal with connection setup

670
00:36:03,839 --> 00:36:07,190
and how you deal with resource

671
00:36:05,220 --> 00:36:09,598
management and how you deal with

672
00:36:07,190 --> 00:36:11,720
Internet work interoperability and

673
00:36:09,599 --> 00:36:16,950
security and all these kinds of issues

674
00:36:11,720 --> 00:36:18,868
which are near and dear to the hearts of

675
00:36:16,950 --> 00:36:22,589
the people that are there in the room at

676
00:36:18,869 --> 00:36:24,869
high RTF and the experimental physicists

677
00:36:22,589 --> 00:36:27,660
are doing the work so far have no idea

678
00:36:24,869 --> 00:36:29,790
how any of this stuff is done they don't

679
00:36:27,660 --> 00:36:31,680
know how to go about setting up a

680
00:36:29,790 --> 00:36:33,540
connection which was between two note

681
00:36:31,680 --> 00:36:37,859
across the network they don't know

682
00:36:33,540 --> 00:36:40,890
anything how you do resource management

683
00:36:37,859 --> 00:36:42,660
in a wide area network you know you know

684
00:36:40,890 --> 00:36:44,910
what multiplexing meet is it a single

685
00:36:42,660 --> 00:36:47,009
candle but not so much across an entire

686
00:36:44,910 --> 00:36:48,598
network for example so we need the

687
00:36:47,010 --> 00:36:51,450
expertise of the people in the room and

688
00:36:48,599 --> 00:36:54,150
we need a way to connect classical

689
00:36:51,450 --> 00:36:56,069
networking people to the experimental

690
00:36:54,150 --> 00:36:59,180
community that's beginning to do to

691
00:36:56,069 --> 00:37:01,920
build these quantum repeated networks

692
00:36:59,180 --> 00:37:05,220
stefanini proposed two or three months

693
00:37:01,920 --> 00:37:09,000
ago that we should create a research

694
00:37:05,220 --> 00:37:12,270
group inside a bi RDF though I contacted

695
00:37:09,000 --> 00:37:14,130
Allison and we've been exchanging to

696
00:37:12,270 --> 00:37:19,799
meet bail about it and so far the

697
00:37:14,130 --> 00:37:22,829
proposed it is Qi RG the mailing list is

698
00:37:19,799 --> 00:37:24,839
open you are welcome to join the limited

699
00:37:22,829 --> 00:37:26,849
list there were a couple of dozen people

700
00:37:24,839 --> 00:37:29,099
on it already even though we're just

701
00:37:26,849 --> 00:37:29,870
beginning the process of advertising it

702
00:37:29,099 --> 00:37:32,800
so

703
00:37:29,870 --> 00:37:36,430
please get on the mailing list and

704
00:37:32,800 --> 00:37:36,430
Alison next slide please

705
00:37:39,760 --> 00:37:48,230
oops okay this is not that all right the

706
00:37:43,760 --> 00:37:50,390
will do it will do this I did want to

707
00:37:48,230 --> 00:37:53,360
mention briefly as well as we're

708
00:37:50,390 --> 00:37:55,640
finishing up that there are also queue

709
00:37:53,360 --> 00:38:00,110
can be oriented standardization efforts

710
00:37:55,640 --> 00:38:02,779
both inside of Etsy and I Triple E and

711
00:38:00,110 --> 00:38:04,640
of course inside of the odd ATF we have

712
00:38:02,780 --> 00:38:08,600
been talking off and on for eight or ten

713
00:38:04,640 --> 00:38:10,940
years about methods for incorporating UK

714
00:38:08,600 --> 00:38:12,770
degenerated keys at the IP sack and

715
00:38:10,940 --> 00:38:15,500
dealing with other out of bound out of

716
00:38:12,770 --> 00:38:17,720
me and he management mechanisms or key

717
00:38:15,500 --> 00:38:19,310
generation mechanisms so there's work

718
00:38:17,720 --> 00:38:29,990
that's going on on that as well

719
00:38:19,310 --> 00:38:34,060
next slide please and the the first task

720
00:38:29,990 --> 00:38:36,649
if you joined us in the in the queue IRG

721
00:38:34,060 --> 00:38:38,240
mailing list is that maybe perhaps

722
00:38:36,650 --> 00:38:40,580
somebody in the room could have suggest

723
00:38:38,240 --> 00:38:41,750
a prettier name the Dubai RG which we

724
00:38:40,580 --> 00:38:43,520
haven't even yet green on a

725
00:38:41,750 --> 00:38:48,080
pronunciation for we're not sure if it's

726
00:38:43,520 --> 00:38:49,670
a turd or quark or what it is we

727
00:38:48,080 --> 00:38:51,710
understand some of the elements that are

728
00:38:49,670 --> 00:38:52,760
going to be in the Charter there's some

729
00:38:51,710 --> 00:38:55,040
of the things that I mentioned on the

730
00:38:52,760 --> 00:38:57,170
previous slide in a minute ago but

731
00:38:55,040 --> 00:38:59,930
there's of course work to do to hammer

732
00:38:57,170 --> 00:39:03,500
out the actual content of that and the

733
00:38:59,930 --> 00:39:07,430
tentative plan is Qi RG to meet three

734
00:39:03,500 --> 00:39:10,310
times a year once at IETF once at some

735
00:39:07,430 --> 00:39:14,480
sort of quantum conference either Q

736
00:39:10,310 --> 00:39:16,250
crypt which is a focus be meeting or the

737
00:39:14,480 --> 00:39:19,520
workshop for twenty repeaters and

738
00:39:16,250 --> 00:39:22,010
networks which is a repeater oriented

739
00:39:19,520 --> 00:39:23,690
data workshop and then to have noted

740
00:39:22,010 --> 00:39:27,110
meeting booed virtually three times a

741
00:39:23,690 --> 00:39:30,040
year on that it's cable and that's it

742
00:39:27,110 --> 00:39:35,240
let's say the next slide please

743
00:39:30,040 --> 00:39:39,650
yeah so the we would be having the necks

744
00:39:35,240 --> 00:39:41,600
of the W URM workshops actually here in

745
00:39:39,650 --> 00:39:45,350
Japan and

746
00:39:41,600 --> 00:39:51,640
fall of 2019 and if you're on the list

747
00:39:45,350 --> 00:39:51,640
of course you know that you'll on that

748
00:39:55,180 --> 00:40:07,160
that you all I think there's time for a

749
00:40:04,550 --> 00:40:11,360
few questions if people have any and

750
00:40:07,160 --> 00:40:14,180
hopefully you'll hear them well and say

751
00:40:11,360 --> 00:40:17,390
your name when you come up um hirotaka

752
00:40:14,180 --> 00:40:19,990
Nakajima and thanks for a talk I have a

753
00:40:17,390 --> 00:40:23,560
one qualifying question anyone well

754
00:40:19,990 --> 00:40:25,819
question about I

755
00:40:23,560 --> 00:40:27,770
carrasco network and the Continental so

756
00:40:25,820 --> 00:40:30,350
the first name first question is so

757
00:40:27,770 --> 00:40:32,660
according to your size and page number

758
00:40:30,350 --> 00:40:35,779
of nine it's like there is no IP or TCP

759
00:40:32,660 --> 00:40:39,290
it's a cross called network stack but

760
00:40:35,780 --> 00:40:42,320
but yours your figures say it's like a

761
00:40:39,290 --> 00:40:44,630
that hold up only a bottom layer it's

762
00:40:42,320 --> 00:40:47,990
that quantum network so I think we can

763
00:40:44,630 --> 00:40:49,880
we can it seems like there is a new

764
00:40:47,990 --> 00:40:52,310
different network and we are trying to

765
00:40:49,880 --> 00:40:55,990
create the quantum network instead of

766
00:40:52,310 --> 00:40:58,009
that cross Co network so is that my

767
00:40:55,990 --> 00:41:01,279
understanding is that we will create a

768
00:40:58,010 --> 00:41:03,530
new network is that correct and that

769
00:41:01,280 --> 00:41:06,350
there are qualified question and also

770
00:41:03,530 --> 00:41:09,050
the second question is so if the quantum

771
00:41:06,350 --> 00:41:13,549
network cannot we cannot use IP or those

772
00:41:09,050 --> 00:41:15,380
kursk or network stack so in this case

773
00:41:13,550 --> 00:41:17,660
it's it's a little bit hard to connect

774
00:41:15,380 --> 00:41:19,880
the connector communicate between the

775
00:41:17,660 --> 00:41:23,750
classical network and quantum network so

776
00:41:19,880 --> 00:41:28,400
do you use is current scope and charter

777
00:41:23,750 --> 00:41:30,020
has some kind of work to achieve the

778
00:41:28,400 --> 00:41:38,140
communication between classical network

779
00:41:30,020 --> 00:41:41,780
and the content network how are you

780
00:41:38,140 --> 00:41:45,049
those are good questions so Alice if you

781
00:41:41,780 --> 00:41:46,760
can go back to that slide briefly the

782
00:41:45,050 --> 00:41:47,420
one with the it with the colored stacked

783
00:41:46,760 --> 00:41:52,520
boxes

784
00:41:47,420 --> 00:41:53,990
yeah the stack site tell it yeah we are

785
00:41:52,520 --> 00:41:55,250
going to have to have a new physical

786
00:41:53,990 --> 00:41:56,450
layer

787
00:41:55,250 --> 00:41:59,240
so there's there's no getting around

788
00:41:56,450 --> 00:42:01,730
that that's going to be deploying new

789
00:41:59,240 --> 00:42:05,029
devices with new transceivers or the

790
00:42:01,730 --> 00:42:09,710
equivalent thereof there is work going

791
00:42:05,030 --> 00:42:12,859
on to allow that to multiplex with

792
00:42:09,710 --> 00:42:14,450
standard tcp/ip traffic in the same

793
00:42:12,859 --> 00:42:18,740
fiber that's been demonstrated

794
00:42:14,450 --> 00:42:20,359
experimentally so you'll need new lo new

795
00:42:18,740 --> 00:42:22,759
nodes but you don't necessarily need to

796
00:42:20,359 --> 00:42:25,160
pull commit a completely new fiber in

797
00:42:22,760 --> 00:42:31,210
parallel all of those other functions

798
00:42:25,160 --> 00:42:36,250
that are on top of that are all new

799
00:42:31,210 --> 00:42:39,319
protocols but of course they also need a

800
00:42:36,250 --> 00:42:41,800
means to exchange their their classical

801
00:42:39,319 --> 00:42:45,440
messages reliably so so when I picture

802
00:42:41,800 --> 00:42:47,450
the the the protocols PC and ETS I

803
00:42:45,440 --> 00:42:50,510
picture those communications actually

804
00:42:47,450 --> 00:42:53,868
happening over top of TCP and then the

805
00:42:50,510 --> 00:43:01,310
application layer on top of that is the

806
00:42:53,869 --> 00:43:07,490
it's it's a what's what's the putting in

807
00:43:01,310 --> 00:43:12,040
to get I for quantum network what is a

808
00:43:07,490 --> 00:43:14,660
request from an application to the

809
00:43:12,040 --> 00:43:17,000
network itself what is it that it that

810
00:43:14,660 --> 00:43:18,649
you're a classical application that's

811
00:43:17,000 --> 00:43:21,410
running on a node that wants to take

812
00:43:18,650 --> 00:43:23,540
advantage of these services provided by

813
00:43:21,410 --> 00:43:25,910
the quantum Internet how does it make

814
00:43:23,540 --> 00:43:29,000
that request what does that contain how

815
00:43:25,910 --> 00:43:30,379
do you exchange that and do you agree on

816
00:43:29,000 --> 00:43:34,160
the semantics of all of that

817
00:43:30,380 --> 00:43:38,300
so those colored boxes that are on there

818
00:43:34,160 --> 00:43:40,578
I think largely will ride on top of TCP

819
00:43:38,300 --> 00:43:43,940
in terms of the actual communication

820
00:43:40,579 --> 00:43:45,740
getting that gets done but it's building

821
00:43:43,940 --> 00:43:51,260
a large distributed application on top

822
00:43:45,740 --> 00:43:57,049
of it does that help yep okay thanks

823
00:43:51,260 --> 00:44:00,950
great one more question was hurt occur

824
00:43:57,050 --> 00:44:02,450
USC is a you know originally I was

825
00:44:00,950 --> 00:44:04,189
thinking that that this was a little bit

826
00:44:02,450 --> 00:44:05,850
early in the in thinking but then I

827
00:44:04,190 --> 00:44:07,620
decided that I'm wrong there

828
00:44:05,850 --> 00:44:10,970
and and we want to get this sort of

829
00:44:07,620 --> 00:44:13,350
right from the get-go in terms of Minh

830
00:44:10,970 --> 00:44:15,240
the the research output of something

831
00:44:13,350 --> 00:44:17,069
like this could actually affect you know

832
00:44:15,240 --> 00:44:18,180
the development of the hardware and the

833
00:44:17,070 --> 00:44:21,120
technique so I think that's actually

834
00:44:18,180 --> 00:44:23,100
that the timings about perfect so I'm

835
00:44:21,120 --> 00:44:24,779
excited to see this go forward I do

836
00:44:23,100 --> 00:44:26,580
think that there's a few other topics

837
00:44:24,780 --> 00:44:30,600
you could consider adding to your list

838
00:44:26,580 --> 00:44:32,400
of things to explore such as the

839
00:44:30,600 --> 00:44:34,410
security requirements for what's going

840
00:44:32,400 --> 00:44:39,420
to be layered on top of it in particular

841
00:44:34,410 --> 00:44:41,250
with respect to privacy concerns as an

842
00:44:39,420 --> 00:44:43,530
example your satellite is sort of a

843
00:44:41,250 --> 00:44:45,270
classic case of a store and forward

844
00:44:43,530 --> 00:44:47,250
mechanism where you have to store data

845
00:44:45,270 --> 00:44:48,870
at rest well it you know while it

846
00:44:47,250 --> 00:44:50,430
travels or interplanetary networks have

847
00:44:48,870 --> 00:44:52,770
the same kind of thing and excuse my

848
00:44:50,430 --> 00:44:55,169
ignorance of quantum stuff I'm actually

849
00:44:52,770 --> 00:44:56,700
fairly ignorant and it may show but you

850
00:44:55,170 --> 00:44:58,770
know so the quantum routers have a

851
00:44:56,700 --> 00:45:00,210
similar property where since you're

852
00:44:58,770 --> 00:45:02,490
essentially breaking communication

853
00:45:00,210 --> 00:45:04,380
between in the middle between endpoints

854
00:45:02,490 --> 00:45:05,759
then you're disturbing the privacy that

855
00:45:04,380 --> 00:45:07,170
I believe is offered by quantum

856
00:45:05,760 --> 00:45:09,780
generally so you know what's the

857
00:45:07,170 --> 00:45:11,820
security implications of that so I think

858
00:45:09,780 --> 00:45:15,150
there's a number of things that need to

859
00:45:11,820 --> 00:45:18,150
be considered with respect to what sort

860
00:45:15,150 --> 00:45:20,070
of technologies you need above that and

861
00:45:18,150 --> 00:45:23,580
the requirements above that do you still

862
00:45:20,070 --> 00:45:25,050
need to do you know sent what what sort

863
00:45:23,580 --> 00:45:26,279
of encrypted traffic do you need to send

864
00:45:25,050 --> 00:45:27,660
above that and what are the properties

865
00:45:26,280 --> 00:45:30,630
are the protocols that you're earning is

866
00:45:27,660 --> 00:45:32,700
on top of this whole system that you can

867
00:45:30,630 --> 00:45:34,290
either relax because you have quantum or

868
00:45:32,700 --> 00:45:47,609
you still need because quantum doesn't

869
00:45:34,290 --> 00:45:48,720
solve them absolutely and I'd love to

870
00:45:47,610 --> 00:45:50,640
have you on board because they don't

871
00:45:48,720 --> 00:45:55,649
give me an excuse to go back science you

872
00:45:50,640 --> 00:45:59,040
get okay one more question

873
00:45:55,650 --> 00:46:00,750
shota yes yeah certainly I mean speaking

874
00:45:59,040 --> 00:46:05,009
actually this is not a question just

875
00:46:00,750 --> 00:46:06,690
comments so right now the researchers

876
00:46:05,010 --> 00:46:09,000
are canta networking requires

877
00:46:06,690 --> 00:46:13,110
organization of terminologies I believe

878
00:46:09,000 --> 00:46:15,450
oh yeah because some papers are started

879
00:46:13,110 --> 00:46:17,160
to propose some different terminologies

880
00:46:15,450 --> 00:46:19,109
for washing same concept

881
00:46:17,160 --> 00:46:24,960
so I needed a

882
00:46:19,110 --> 00:46:27,000
I need a place for open discussion for

883
00:46:24,960 --> 00:46:31,350
such things as otherwise so you know

884
00:46:27,000 --> 00:46:33,840
various papers which use these different

885
00:46:31,350 --> 00:46:37,410
terminology will lead to a kind of hell

886
00:46:33,840 --> 00:46:40,620
so to avoid that we need yeah we need an

887
00:46:37,410 --> 00:46:44,430
open discussion so Altea is a best price

888
00:46:40,620 --> 00:46:47,850
I believe so and and now we can refactor

889
00:46:44,430 --> 00:46:52,109
ask our network Tommy knows is property

890
00:46:47,850 --> 00:46:55,980
here and so another thing is so one

891
00:46:52,110 --> 00:46:58,860
thing we needed to discuss in RTF is the

892
00:46:55,980 --> 00:47:01,050
obstruction of the entanglement and you

893
00:46:58,860 --> 00:47:04,440
know so entanglement is a very quantum

894
00:47:01,050 --> 00:47:07,020
property and no cross-county talking it

895
00:47:04,440 --> 00:47:09,570
doesn't have the counterpart for that so

896
00:47:07,020 --> 00:47:14,540
we should carefully discuss the

897
00:47:09,570 --> 00:47:20,670
obstruction of entanglement and lost

898
00:47:14,540 --> 00:47:22,529
yeah so one thing so is one benefit to

899
00:47:20,670 --> 00:47:24,540
talk about continuity what you mean I

900
00:47:22,530 --> 00:47:27,090
RTF is that so

901
00:47:24,540 --> 00:47:31,590
who will administrate quantum network in

902
00:47:27,090 --> 00:47:36,510
the future so it will the network

903
00:47:31,590 --> 00:47:40,280
engineer so like guys here so yeah to

904
00:47:36,510 --> 00:47:44,750
involve such people for discussion of

905
00:47:40,280 --> 00:47:53,430
quantum networking is very important

906
00:47:44,750 --> 00:47:54,930
from this RT station those comments note

907
00:47:53,430 --> 00:47:59,569
that I've had quite a bit of heartburn

908
00:47:54,930 --> 00:48:02,879
with where the the physicists reuse a

909
00:47:59,570 --> 00:48:05,190
term they have or classical engineer and

910
00:48:02,880 --> 00:48:07,020
the way that using it not necessarily

911
00:48:05,190 --> 00:48:09,150
wrong it's just so different from the

912
00:48:07,020 --> 00:48:12,450
way we're used to seeing it that it's

913
00:48:09,150 --> 00:48:14,930
causing a problem multiplexing is one of

914
00:48:12,450 --> 00:48:17,399
them repeater would certainly be another

915
00:48:14,930 --> 00:48:20,580
and of course you're they are they also

916
00:48:17,400 --> 00:48:22,590
when they say the physics of this

917
00:48:20,580 --> 00:48:25,830
meeting guarantees that it's secure you

918
00:48:22,590 --> 00:48:27,720
know the the the the hand of every

919
00:48:25,830 --> 00:48:31,009
network administrator in the room hits

920
00:48:27,720 --> 00:48:31,009
the desk because they know that

921
00:48:32,109 --> 00:48:35,930
theoretical factors of implementations

922
00:48:34,670 --> 00:48:38,420
are very different from from the

923
00:48:35,930 --> 00:48:40,160
real-world implications and so doing all

924
00:48:38,420 --> 00:48:41,900
of this and discussing all of that with

925
00:48:40,160 --> 00:48:47,649
the people who understand real networks

926
00:48:41,900 --> 00:48:51,980
is the key to a long-lived healthy

927
00:48:47,650 --> 00:48:55,220
robust extensible quantum internet

928
00:48:51,980 --> 00:48:58,849
architecture and I think the IRT F has a

929
00:48:55,220 --> 00:49:00,348
lot of expertise is really required yeah

930
00:48:58,849 --> 00:49:01,880
we've got one more question and then

931
00:49:00,349 --> 00:49:06,589
we'll stop no more questions

932
00:49:01,880 --> 00:49:09,289
very cool hi I'm Eric oh um okay I'm not

933
00:49:06,589 --> 00:49:12,430
so familiar with this area and this is

934
00:49:09,289 --> 00:49:15,920
um comment ready to this community and

935
00:49:12,430 --> 00:49:18,558
I'm not like I am sure corner computer

936
00:49:15,920 --> 00:49:20,839
in computing is important for network

937
00:49:18,559 --> 00:49:23,240
engineering and also now on the future

938
00:49:20,839 --> 00:49:24,828
um but I think there is not so many

939
00:49:23,240 --> 00:49:29,000
people who are familiar with this area

940
00:49:24,829 --> 00:49:31,010
so um so if you will walk on this

941
00:49:29,000 --> 00:49:34,630
quantum computing discussion in this

942
00:49:31,010 --> 00:49:38,089
ayat if area um how they how they get

943
00:49:34,630 --> 00:49:40,990
ITIF network engineers involved in this

944
00:49:38,089 --> 00:49:43,819
discussion and also um how do you blink

945
00:49:40,990 --> 00:49:46,729
the corner computer guys from outside

946
00:49:43,819 --> 00:49:49,430
this community come into this IDT

947
00:49:46,730 --> 00:49:58,700
community um how how about your plan for

948
00:49:49,430 --> 00:50:04,069
that it's a social the plan that's

949
00:49:58,700 --> 00:50:05,899
that's the for for doing the other you

950
00:50:04,069 --> 00:50:08,839
know that I was pleased to hear the

951
00:50:05,900 --> 00:50:10,400
earlier comment that you the I didn't

952
00:50:08,839 --> 00:50:12,740
catch the name of the gap from I

953
00:50:10,400 --> 00:50:16,160
assigned I don't know who's who said

954
00:50:12,740 --> 00:50:19,459
that you now he sees that maybe now is

955
00:50:16,160 --> 00:50:20,808
the right time degree and and it's a

956
00:50:19,460 --> 00:50:23,480
good opportunity for people to be

957
00:50:20,809 --> 00:50:26,529
involved to prevent the physicists from

958
00:50:23,480 --> 00:50:26,529
going down the wrong path

959
00:50:26,539 --> 00:50:29,809
now convincing the physicists that they

960
00:50:28,520 --> 00:50:31,190
need to be bumped that's the other half

961
00:50:29,809 --> 00:50:32,900
of the equation and we're working on

962
00:50:31,190 --> 00:50:34,640
that one too but there are already

963
00:50:32,900 --> 00:50:37,460
hundreds of researchers around the world

964
00:50:34,640 --> 00:50:39,500
who are actually working on this and you

965
00:50:37,460 --> 00:50:41,900
know we have those two quantum

966
00:50:39,500 --> 00:50:43,309
conferences that I mentioned the

967
00:50:41,900 --> 00:50:44,630
workshop for quantum repeaters and

968
00:50:43,309 --> 00:50:46,760
networks

969
00:50:44,630 --> 00:50:48,920
we restrict attendance to that two to

970
00:50:46,760 --> 00:50:50,300
100 people so that we can have a small

971
00:50:48,920 --> 00:50:53,000
conversation but we could have twice

972
00:50:50,300 --> 00:50:55,490
that many people and the queue crypt

973
00:50:53,000 --> 00:50:57,350
conference is read 500 people depending

974
00:50:55,490 --> 00:51:00,100
on the location there so there are a lot

975
00:50:57,350 --> 00:51:02,779
of people around the world who are

976
00:51:00,100 --> 00:51:04,160
already working on the technologies and

977
00:51:02,780 --> 00:51:05,930
the goal is to bring them together with

978
00:51:04,160 --> 00:51:09,740
with the people who really understand

979
00:51:05,930 --> 00:51:13,970
the the way networks behave because I

980
00:51:09,740 --> 00:51:15,560
think you need more you need to enhance

981
00:51:13,970 --> 00:51:17,810
more people who are not so familiar

982
00:51:15,560 --> 00:51:23,570
decision area into these discussions so

983
00:51:17,810 --> 00:51:25,279
that's why I think so we should we

984
00:51:23,570 --> 00:51:30,460
should go move on to our next talk but

985
00:51:25,280 --> 00:51:33,080
thank you so much rod and audience yeah

986
00:51:30,460 --> 00:51:35,450
Matt yeah I just wanted to say I'm using

987
00:51:33,080 --> 00:51:38,029
the ether pad for taking notes so you

988
00:51:35,450 --> 00:51:39,200
might want to go in there if you asked a

989
00:51:38,030 --> 00:51:41,320
question and make sure I didn't butcher

990
00:51:39,200 --> 00:51:43,520
your name or a butcher what you said

991
00:51:41,320 --> 00:51:48,560
thank you thank you

992
00:51:43,520 --> 00:51:50,690
and yeah which I assume will get up look

993
00:51:48,560 --> 00:51:52,430
but there are some references in there

994
00:51:50,690 --> 00:51:53,870
that I didn't talk about but you can

995
00:51:52,430 --> 00:51:54,379
look up those references if you wanted

996
00:51:53,870 --> 00:51:56,450
it more

997
00:51:54,380 --> 00:51:58,730
or contact me and join the research or

998
00:51:56,450 --> 00:52:01,759
join the mailing list they are uploaded

999
00:51:58,730 --> 00:52:05,530
already so so that people can do that

1000
00:52:01,760 --> 00:52:05,530
okay so thank you that's great

1001
00:52:05,710 --> 00:52:12,820
good bye I'm gonna switch off and we're

1002
00:52:09,320 --> 00:52:16,640
going to introduce our next speaker now

1003
00:52:12,820 --> 00:52:20,630
so the that we have the first of our

1004
00:52:16,640 --> 00:52:28,279
AARP presentations you want to come up

1005
00:52:20,630 --> 00:52:34,330
to here and let me get your slides up

1006
00:52:28,280 --> 00:52:34,330
here as well okay

1007
00:52:34,710 --> 00:52:38,099
and I think

1008
00:52:48,720 --> 00:52:58,868
do you want to sorry yep this is the

1009
00:52:58,090 --> 00:53:02,349
ones you gave me

1010
00:52:58,869 --> 00:53:03,849
late in the night but they are I was

1011
00:53:02,349 --> 00:53:07,650
thinking about making them larger but I

1012
00:53:03,849 --> 00:53:11,790
don't think again probably those good oh

1013
00:53:07,650 --> 00:53:26,280
you hear yes

1014
00:53:11,790 --> 00:53:46,540
oh okay there you go that's I think

1015
00:53:26,280 --> 00:53:47,859
okay okay yeah yeah I think you should

1016
00:53:46,540 --> 00:54:03,960
be able to do that and see if it works

1017
00:53:47,859 --> 00:54:03,960
okay I think it's not working

1018
00:54:04,270 --> 00:54:10,800
I mean I have the right right attachment

1019
00:54:08,440 --> 00:54:10,800
yes

1020
00:54:24,680 --> 00:54:36,580
it's your work

1021
00:54:28,050 --> 00:54:37,930
okay all right hi everyone Muskaan I'm

1022
00:54:36,580 --> 00:54:39,369
gonna present to you our work on

1023
00:54:37,930 --> 00:54:41,830
performance characterization of a

1024
00:54:39,369 --> 00:54:43,960
commercial major streaming service my

1025
00:54:41,830 --> 00:54:47,560
current affiliation is with Akamai but I

1026
00:54:43,960 --> 00:54:49,570
did this work when I was PhD student at

1027
00:54:47,560 --> 00:54:53,740
Princeton and interning at Yahoo

1028
00:54:49,570 --> 00:54:58,780
research so we all have had that

1029
00:54:53,740 --> 00:55:00,669
experience that when we're watching a

1030
00:54:58,780 --> 00:55:03,430
favorite video and there's a buffering

1031
00:55:00,670 --> 00:55:05,859
and you end up wondering why and even as

1032
00:55:03,430 --> 00:55:08,549
the networking community we often wonder

1033
00:55:05,859 --> 00:55:12,150
what happened and what's the problem and

1034
00:55:08,550 --> 00:55:17,290
in this word we have an unprecedented

1035
00:55:12,150 --> 00:55:19,540
data set - for the first time instrument

1036
00:55:17,290 --> 00:55:24,250
and study the entire end-to-end video

1037
00:55:19,540 --> 00:55:25,720
delivery path and with video being the

1038
00:55:24,250 --> 00:55:27,820
dominant application of the internet

1039
00:55:25,720 --> 00:55:29,680
with making up more than 70% of the

1040
00:55:27,820 --> 00:55:33,040
traffic at least in North America during

1041
00:55:29,680 --> 00:55:35,410
peak hours it's particularly important

1042
00:55:33,040 --> 00:55:37,000
for us and we can uncover a wide range

1043
00:55:35,410 --> 00:55:39,250
of problems for the first time with this

1044
00:55:37,000 --> 00:55:44,830
data set because we have data from the

1045
00:55:39,250 --> 00:55:48,310
entire half so I'm gonna walk you

1046
00:55:44,830 --> 00:55:58,259
through a list of performance problems

1047
00:55:48,310 --> 00:55:58,259
that we have found it changed

1048
00:56:02,340 --> 00:56:09,280
it's ready to win three at the same

1049
00:56:05,080 --> 00:56:18,720
oh I see oops no that's not good I don't

1050
00:56:09,280 --> 00:56:18,720
know why maybe we should just

1051
00:56:23,559 --> 00:56:27,119
I guess we should have practiced this

1052
00:56:36,060 --> 00:56:44,460
sorry it's show you both slides it's

1053
00:56:41,020 --> 00:56:44,460
doing more than one side at a time

1054
00:56:53,019 --> 00:57:00,758
I guess I can just click like this but

1055
00:56:59,289 --> 00:57:19,829
it'll be large but you can just leave it

1056
00:57:00,759 --> 00:57:19,829
I think it's fine

1057
00:57:28,050 --> 00:57:53,530
or not sorry about that okay so here's

1058
00:57:52,180 --> 00:57:54,940
the list of problems that we have found

1059
00:57:53,530 --> 00:57:57,870
don't worry about reading this because

1060
00:57:54,940 --> 00:58:02,140
we're gonna be walking through this talk

1061
00:57:57,870 --> 00:58:06,359
so first let me start by showing you Sir

1062
00:58:02,140 --> 00:58:06,359
John on projection systems a

1063
00:58:21,579 --> 00:58:35,509
okay let's get her laptop yeah should we

1064
00:58:33,200 --> 00:58:42,379
have a research task force for the

1065
00:58:35,509 --> 00:58:46,690
projectors and displays yeah maybe maybe

1066
00:58:42,380 --> 00:58:46,690
by the time we have people do it right

1067
00:58:46,779 --> 00:59:04,039
quantum microphones you have I don't

1068
00:59:02,269 --> 00:59:08,508
think it's the same dongle as this

1069
00:59:04,039 --> 00:59:13,970
though is it USB I do oh you have HDMI

1070
00:59:08,509 --> 00:59:15,470
directly good okay yes okay yeah you get

1071
00:59:13,970 --> 00:59:21,890
to restart your time we're letting her

1072
00:59:15,470 --> 00:59:27,709
restart her time too okay they also get

1073
00:59:21,890 --> 00:59:30,558
this alright thank you for your patience

1074
00:59:27,710 --> 00:59:34,099
everybody all right we're back in

1075
00:59:30,559 --> 00:59:35,539
business so here's the list of

1076
00:59:34,099 --> 00:59:37,160
performance problems that we found but

1077
00:59:35,539 --> 00:59:39,259
don't worry about it I'm gonna walk you

1078
00:59:37,160 --> 00:59:40,730
through this list through talk but

1079
00:59:39,259 --> 00:59:42,619
before that let's look at the system

1080
00:59:40,730 --> 00:59:44,539
that we instrument it so you can get an

1081
00:59:42,619 --> 00:59:47,869
idea of what could go wrong before we

1082
00:59:44,539 --> 00:59:50,289
show you what did go wrong so the system

1083
00:59:47,869 --> 00:59:53,509
is Yahoo's video streaming system and

1084
00:59:50,289 --> 00:59:56,569
the way that streaming works very

1085
00:59:53,509 --> 00:59:58,910
high-level overview it starts by the

1086
00:59:56,569 --> 01:00:00,259
client which is your player requesting

1087
00:59:58,910 --> 01:00:01,759
and receiving the manifest and it

1088
01:00:00,259 --> 01:00:04,039
manifests the list of available bit

1089
01:00:01,759 --> 01:00:05,839
rates and then there's usually an

1090
01:00:04,039 --> 01:00:08,569
adaptive better algorithm on the player

1091
01:00:05,839 --> 01:00:11,990
that chooses which bitrate to request

1092
01:00:08,569 --> 01:00:13,970
for and then once it decides the mid

1093
01:00:11,990 --> 01:00:16,399
rate it sends an HTTP request to the CDN

1094
01:00:13,970 --> 01:00:18,470
to get that and in this system these

1095
01:00:16,400 --> 01:00:21,170
HTTP requests are sharing the same TCP

1096
01:00:18,470 --> 01:00:23,598
connection and it chunk in this system

1097
01:00:21,170 --> 01:00:25,670
is six seconds

1098
01:00:23,599 --> 01:00:27,890
once these requests arrive at the city

1099
01:00:25,670 --> 01:00:29,119
and the city and inspects its local

1100
01:00:27,890 --> 01:00:31,038
cache if it's there

1101
01:00:29,119 --> 01:00:33,859
to the player if it's not there it's

1102
01:00:31,039 --> 01:00:35,990
called a cache miss and you go to the

1103
01:00:33,859 --> 01:00:39,589
backend to fish check on it first our

1104
01:00:35,990 --> 01:00:41,390
city ends in this system the CBO servers

1105
01:00:39,589 --> 01:00:44,450
are using Apache traffic server which is

1106
01:00:41,390 --> 01:00:47,538
a popular HTTP proxy and the caching

1107
01:00:44,450 --> 01:00:48,710
eviction policies LRU and then finally

1108
01:00:47,539 --> 01:00:50,599
when these chunks are arrived at the

1109
01:00:48,710 --> 01:00:52,039
client-side they have to pass the

1110
01:00:50,599 --> 01:00:54,859
clients download and rendering stack

1111
01:00:52,039 --> 01:00:57,440
before they can be shown to a user and

1112
01:00:54,859 --> 01:00:59,210
we will go into more details of what

1113
01:00:57,440 --> 01:01:02,539
these mean later in the talk when we get

1114
01:00:59,210 --> 01:01:04,549
to the client section so our goal in

1115
01:01:02,539 --> 01:01:06,859
this study is to identify performance

1116
01:01:04,549 --> 01:01:09,259
problems that impact video QE and it

1117
01:01:06,859 --> 01:01:11,690
particularly make the users unhappy so

1118
01:01:09,259 --> 01:01:13,910
they will you know reduce your revenue

1119
01:01:11,690 --> 01:01:15,680
and if we have only data from the

1120
01:01:13,910 --> 01:01:18,440
players side for example if you have

1121
01:01:15,680 --> 01:01:21,319
here a data for example the caveat is

1122
01:01:18,440 --> 01:01:23,029
that you may be able to detect some of

1123
01:01:21,319 --> 01:01:25,249
these problems you may be able to say

1124
01:01:23,029 --> 01:01:28,730
there was a rebuffering but because of

1125
01:01:25,249 --> 01:01:30,319
the buffer itself you are some of the

1126
01:01:28,730 --> 01:01:32,859
problems get masked because of the

1127
01:01:30,319 --> 01:01:36,470
buffer so you may not see an immediate

1128
01:01:32,859 --> 01:01:38,749
impact on the QE and also if you only

1129
01:01:36,470 --> 01:01:40,488
have player site information you cannot

1130
01:01:38,749 --> 01:01:43,279
detect problems that happen in network

1131
01:01:40,489 --> 01:01:45,289
or the CDN and looking at it from the

1132
01:01:43,279 --> 01:01:47,269
other side from the perspective of if

1133
01:01:45,289 --> 01:01:49,430
you have only data from the CDN for

1134
01:01:47,269 --> 01:01:52,279
example server logs you may be able to

1135
01:01:49,430 --> 01:01:54,649
detect some of the problems but you will

1136
01:01:52,279 --> 01:01:58,249
not be able to isolate problems that are

1137
01:01:54,650 --> 01:02:00,650
within the clients machine so

1138
01:01:58,249 --> 01:02:02,058
unfortunately for us we are looking at

1139
01:02:00,650 --> 01:02:04,430
this from a contra providers point of

1140
01:02:02,059 --> 01:02:06,769
view for example Yahoo or Google could

1141
01:02:04,430 --> 01:02:08,419
do this and what's unique about them is

1142
01:02:06,769 --> 01:02:11,029
that they control both sites

1143
01:02:08,420 --> 01:02:14,509
so this is an in-house CDN and their own

1144
01:02:11,029 --> 01:02:17,989
player and once you have mu into the

1145
01:02:14,509 --> 01:02:19,819
entire path of the video delivery then

1146
01:02:17,989 --> 01:02:21,890
you can find problems everywhere and see

1147
01:02:19,819 --> 01:02:25,339
exactly what happened for each chunk

1148
01:02:21,890 --> 01:02:30,078
that you had buffering so our approach

1149
01:02:25,339 --> 01:02:31,788
relies on three principles one is and

1150
01:02:30,079 --> 01:02:33,529
two an instrumentation we instrument

1151
01:02:31,789 --> 01:02:35,180
both sides of this path including the

1152
01:02:33,529 --> 01:02:36,829
player and is CDN servers and this is

1153
01:02:35,180 --> 01:02:41,450
important for us to join this together

1154
01:02:36,829 --> 01:02:42,260
to be able to construct the life of a

1155
01:02:41,450 --> 01:02:45,230
chalk

1156
01:02:42,260 --> 01:02:47,900
happened where the instrumentation unit

1157
01:02:45,230 --> 01:02:50,390
is pair trunk because a chunk is a unit

1158
01:02:47,900 --> 01:02:51,770
of decision-making in this system for

1159
01:02:50,390 --> 01:02:54,470
example the bit rate that the

1160
01:02:51,770 --> 01:02:56,300
replication algorithm chooses may change

1161
01:02:54,470 --> 01:02:58,850
from chunk to chunk but not with thinner

1162
01:02:56,300 --> 01:03:01,280
chunk and whether the file was a cache

1163
01:02:58,850 --> 01:03:03,920
hit or miss at the CDN also may change

1164
01:03:01,280 --> 01:03:06,740
in the granule TR the chunk we did

1165
01:03:03,920 --> 01:03:08,360
consider subject measurements there are

1166
01:03:06,740 --> 01:03:10,879
two reasons that we did not go with it

1167
01:03:08,360 --> 01:03:13,250
one is that it is too expensive and this

1168
01:03:10,880 --> 01:03:14,560
is a production player CD and this is

1169
01:03:13,250 --> 01:03:18,530
not an experiment

1170
01:03:14,560 --> 01:03:20,360
experimental player or CDN and once you

1171
01:03:18,530 --> 01:03:23,090
start using too much CPU on the player

1172
01:03:20,360 --> 01:03:26,030
you can have a negative impact on the QE

1173
01:03:23,090 --> 01:03:27,410
and the users may start seeing the

1174
01:03:26,030 --> 01:03:27,770
frames may get dropped and things like

1175
01:03:27,410 --> 01:03:31,069
that

1176
01:03:27,770 --> 01:03:32,420
but also going sub chunk it and doing

1177
01:03:31,070 --> 01:03:33,980
subject measures can sometimes be

1178
01:03:32,420 --> 01:03:37,070
technology dependent because of the way

1179
01:03:33,980 --> 01:03:39,890
that HTML 5 handles data arrivals

1180
01:03:37,070 --> 01:03:43,190
different from flash and we wanted the

1181
01:03:39,890 --> 01:03:45,859
results to be applicable to all internet

1182
01:03:43,190 --> 01:03:48,470
video and finally collecting TCP

1183
01:03:45,860 --> 01:03:50,180
statistics the statistics that we are

1184
01:03:48,470 --> 01:03:52,459
collecting here there's sampled from the

1185
01:03:50,180 --> 01:03:54,020
CDN host kernel there are some

1186
01:03:52,460 --> 01:03:57,290
limitations here as well this is an

1187
01:03:54,020 --> 01:03:59,270
operational and large-scale setting so

1188
01:03:57,290 --> 01:04:03,820
there's the frequency that we can

1189
01:03:59,270 --> 01:04:03,820
collect these April this information is

1190
01:04:06,700 --> 01:04:12,319
not high so what do we mean by this

1191
01:04:10,190 --> 01:04:13,730
end-to-end / chunk measurement so the

1192
01:04:12,320 --> 01:04:16,790
boat lines here are where we are

1193
01:04:13,730 --> 01:04:18,620
measuring things directly and the dash

1194
01:04:16,790 --> 01:04:21,259
lines are where we cannot instrument

1195
01:04:18,620 --> 01:04:23,960
things directly so observations based on

1196
01:04:21,260 --> 01:04:27,980
interference and the life of the chunks

1197
01:04:23,960 --> 01:04:30,800
starts with the player sending an HTTP

1198
01:04:27,980 --> 01:04:32,600
GET request arrives at the CDN the CDN

1199
01:04:30,800 --> 01:04:34,760
has some processing time and we show

1200
01:04:32,600 --> 01:04:38,330
that with the CDN if this was a cache

1201
01:04:34,760 --> 01:04:40,100
miss and beckon needs to be involved to

1202
01:04:38,330 --> 01:04:42,920
get the first byte then there's a

1203
01:04:40,100 --> 01:04:46,160
back-end agency everything that is not

1204
01:04:42,920 --> 01:04:47,570
measured directly is shown with red and

1205
01:04:46,160 --> 01:04:48,859
everything that is measured directly in

1206
01:04:47,570 --> 01:04:51,230
this instrumentation is shown with blue

1207
01:04:48,860 --> 01:04:53,480
and then finally the first byte arrives

1208
01:04:51,230 --> 01:04:54,710
at the player the time difference

1209
01:04:53,480 --> 01:04:56,720
between when - you should be get

1210
01:04:54,710 --> 01:04:59,030
was was sent and when the first bite

1211
01:04:56,720 --> 01:05:02,118
arrived is shown with TFB first by today

1212
01:04:59,030 --> 01:05:04,550
and there is also the download second a

1213
01:05:02,119 --> 01:05:06,890
transition with red DDS and similarly

1214
01:05:04,550 --> 01:05:08,599
when you have the last point of the

1215
01:05:06,890 --> 01:05:09,890
chunk of writing that's the time

1216
01:05:08,599 --> 01:05:12,410
difference between the first and the

1217
01:05:09,890 --> 01:05:14,210
last is shown with the le last by today

1218
01:05:12,410 --> 01:05:16,598
and this is important because this is

1219
01:05:14,210 --> 01:05:21,020
going to come up for different kind of

1220
01:05:16,599 --> 01:05:23,390
studies that we do so before I show you

1221
01:05:21,020 --> 01:05:25,940
our results I want to point out that we

1222
01:05:23,390 --> 01:05:28,220
are studying QE factors individually in

1223
01:05:25,940 --> 01:05:30,950
this talk the factors that we choose

1224
01:05:28,220 --> 01:05:32,509
this there is this is a very rich area

1225
01:05:30,950 --> 01:05:34,580
of research and they have shown that

1226
01:05:32,510 --> 01:05:38,089
most important QE factors that impact

1227
01:05:34,580 --> 01:05:40,640
the users experience our video startup

1228
01:05:38,089 --> 01:05:42,259
time rebuffering rate with your

1229
01:05:40,640 --> 01:05:46,970
qualities such as betrayed and frame

1230
01:05:42,260 --> 01:05:49,790
rate and we look at these factors

1231
01:05:46,970 --> 01:05:54,169
individually instead of coming up with

1232
01:05:49,790 --> 01:05:56,779
the QE school because of two reasons one

1233
01:05:54,170 --> 01:05:58,580
is depending on the type of content that

1234
01:05:56,780 --> 01:06:00,700
you have some of these factors may

1235
01:05:58,580 --> 01:06:04,520
matter more than the others for example

1236
01:06:00,700 --> 01:06:06,470
for a breaking news video startup time

1237
01:06:04,520 --> 01:06:09,290
matters more because the user just wants

1238
01:06:06,470 --> 01:06:11,480
to see the news whereas when you're

1239
01:06:09,290 --> 01:06:13,070
sitting to watch a long movie the start

1240
01:06:11,480 --> 01:06:14,420
of time really not matter that much or

1241
01:06:13,070 --> 01:06:15,920
give you a quality matters more and

1242
01:06:14,420 --> 01:06:18,670
second is the length of the video

1243
01:06:15,920 --> 01:06:21,530
shorter videos users are usually less

1244
01:06:18,670 --> 01:06:22,910
patient you want to have the results you

1245
01:06:21,530 --> 01:06:24,230
want to have you want to start playing

1246
01:06:22,910 --> 01:06:26,540
right away where it's put the longer

1247
01:06:24,230 --> 01:06:27,680
video the user is already patient they

1248
01:06:26,540 --> 01:06:33,970
have it in their mind that they're gonna

1249
01:06:27,680 --> 01:06:33,970
sit and watch to our video so

1250
01:06:35,880 --> 01:06:38,730
this is the outline of the talk we've

1251
01:06:37,529 --> 01:06:40,319
already gone through the introduction

1252
01:06:38,730 --> 01:06:42,240
I'm gonna show you the measurement data

1253
01:06:40,319 --> 01:06:44,160
set that we have and then what are the

1254
01:06:42,240 --> 01:06:46,078
problems that we found in server-side

1255
01:06:44,160 --> 01:06:47,009
network or client-side and then we're

1256
01:06:46,079 --> 01:06:48,180
going to conclude the talk with

1257
01:06:47,009 --> 01:06:51,200
takeaways and what can be done about

1258
01:06:48,180 --> 01:06:51,200
these problems

1259
01:06:59,960 --> 01:07:04,320
push it down yeah

1260
01:07:02,520 --> 01:07:07,500
so today's that comes from Yahoo videos

1261
01:07:04,320 --> 01:07:11,220
they're played over a variety of sites

1262
01:07:07,500 --> 01:07:14,070
for example news sports finance and like

1263
01:07:11,220 --> 01:07:16,950
I said this is this is the real player

1264
01:07:14,070 --> 01:07:20,790
that was used in a variety of sites our

1265
01:07:16,950 --> 01:07:24,509
dataset comes from 18 days this is a

1266
01:07:20,790 --> 01:07:25,970
video-on-demand data of 85 CDN servers

1267
01:07:24,510 --> 01:07:29,490
across the u.s. were instrumented

1268
01:07:25,970 --> 01:07:31,410
selected randomly we studied 65 million

1269
01:07:29,490 --> 01:07:33,830
video sessions and more than a half a

1270
01:07:31,410 --> 01:07:36,960
billion video chunks the users are

1271
01:07:33,830 --> 01:07:40,350
predominantly in North America where 93%

1272
01:07:36,960 --> 01:07:42,420
and mostly non mobile users that are not

1273
01:07:40,350 --> 01:07:44,580
using proxy we're going to more details

1274
01:07:42,420 --> 01:07:46,110
in the paper and how we remove users

1275
01:07:44,580 --> 01:07:48,900
that we think are behind a proxy and the

1276
01:07:46,110 --> 01:07:50,670
main reason for that is we want the TCP

1277
01:07:48,900 --> 01:07:52,920
measurements to reflect the path between

1278
01:07:50,670 --> 01:07:54,630
the server and the client and usually

1279
01:07:52,920 --> 01:07:57,420
the proxies terminate the TCP

1280
01:07:54,630 --> 01:08:00,480
connections so it would make our results

1281
01:07:57,420 --> 01:08:03,420
not accurate in terms of the video

1282
01:08:00,480 --> 01:08:06,270
streams distribution this is a popular

1283
01:08:03,420 --> 01:08:09,230
heavy workload with 66% of the requester

1284
01:08:06,270 --> 01:08:12,259
I mean for the top 10% of the titles and

1285
01:08:09,230 --> 01:08:16,410
most of these videos are shorter than

1286
01:08:12,260 --> 01:08:18,810
100 seconds so let's dive into the first

1287
01:08:16,410 --> 01:08:21,450
category problems the server-side

1288
01:08:18,810 --> 01:08:23,069
problems so our measurement in the

1289
01:08:21,450 --> 01:08:25,740
server side comes from direct

1290
01:08:23,069 --> 01:08:28,200
measurement so at the player we have

1291
01:08:25,740 --> 01:08:30,599
such an ID chunk ID start up time to

1292
01:08:28,200 --> 01:08:33,630
buffering in video and at the CDN we

1293
01:08:30,600 --> 01:08:36,089
have such an idea chunk ID similarly we

1294
01:08:33,630 --> 01:08:38,549
are measuring cell relation see back in

1295
01:08:36,089 --> 01:08:40,470
latency and cache Pyramus so because we

1296
01:08:38,549 --> 01:08:43,080
have this data readily available we can

1297
01:08:40,470 --> 01:08:45,839
show for example the immediate impact of

1298
01:08:43,080 --> 01:08:49,049
several latency on startup time there is

1299
01:08:45,839 --> 01:08:52,200
no interference turner's just ground

1300
01:08:49,049 --> 01:08:53,700
truth so for example this is one graph

1301
01:08:52,200 --> 01:08:55,229
that we can do because we have data from

1302
01:08:53,700 --> 01:08:57,179
both sides and you can show the impact

1303
01:08:55,229 --> 01:08:58,919
of server latency instead of time the

1304
01:08:57,180 --> 01:09:01,109
x-axis on this graph is the several

1305
01:08:58,920 --> 01:09:03,480
agency milliseconds the y-axis is the

1306
01:09:01,109 --> 01:09:05,580
startup time of the video in seconds and

1307
01:09:03,479 --> 01:09:08,459
you can see how it significantly

1308
01:09:05,580 --> 01:09:11,220
increases with higher server latency so

1309
01:09:08,460 --> 01:09:13,560
next we are interested in knowing why do

1310
01:09:11,220 --> 01:09:15,100
I have these servers with these high

1311
01:09:13,560 --> 01:09:17,350
latency

1312
01:09:15,100 --> 01:09:18,760
the first issue that we found is the

1313
01:09:17,350 --> 01:09:21,880
Apache traffic sir we reach our timer

1314
01:09:18,760 --> 01:09:23,950
and cache misses so what happens when an

1315
01:09:21,880 --> 01:09:27,730
HTTP request arrives at the CDN is that

1316
01:09:23,950 --> 01:09:29,410
it first inspects the memory and if it's

1317
01:09:27,729 --> 01:09:30,580
not there you go to the disk and if it's

1318
01:09:29,410 --> 01:09:32,740
not there you go to back-end

1319
01:09:30,580 --> 01:09:34,600
however you don't want to overwhelm the

1320
01:09:32,740 --> 01:09:36,608
back end so when multiple requests come

1321
01:09:34,600 --> 01:09:40,810
for the same content there's usually a

1322
01:09:36,609 --> 01:09:43,330
timer there that stops you from going to

1323
01:09:40,810 --> 01:09:45,520
the next yearfor for a while to not

1324
01:09:43,330 --> 01:09:47,019
overwhelm the backend and be fine and we

1325
01:09:45,520 --> 01:09:48,940
found this miss configuration that was

1326
01:09:47,020 --> 01:09:51,040
that was still in true between the

1327
01:09:48,939 --> 01:09:53,370
memory and the disk and it was impacting

1328
01:09:51,040 --> 01:09:56,590
about 65 percent of the chunks in our

1329
01:09:53,370 --> 01:09:57,820
study but even more important than that

1330
01:09:56,590 --> 01:09:59,140
is cache misses

1331
01:09:57,820 --> 01:10:00,549
we found cache misses in this system

1332
01:09:59,140 --> 01:10:03,070
increases the cell relation ceased

1333
01:10:00,550 --> 01:10:05,260
significantly the median increases by 40

1334
01:10:03,070 --> 01:10:08,830
times an average by 10 times when your

1335
01:10:05,260 --> 01:10:10,930
server side has a cache miss and we also

1336
01:10:08,830 --> 01:10:15,220
found these extreme cases where server

1337
01:10:10,930 --> 01:10:17,350
latency was worse than Network and for

1338
01:10:15,220 --> 01:10:19,870
those sessions they were often caused by

1339
01:10:17,350 --> 01:10:23,200
cache misses the average cache miss

1340
01:10:19,870 --> 01:10:24,970
ratio in this data set is 2% for the

1341
01:10:23,200 --> 01:10:27,370
sessions that had worse server latency

1342
01:10:24,970 --> 01:10:31,570
than Network was 40 percent so it is

1343
01:10:27,370 --> 01:10:34,320
often caused by this significant impact

1344
01:10:31,570 --> 01:10:36,190
of cache misses on the server latency

1345
01:10:34,320 --> 01:10:38,230
another interesting thing that we found

1346
01:10:36,190 --> 01:10:39,190
is that server site problems are

1347
01:10:38,230 --> 01:10:41,320
persistent

1348
01:10:39,190 --> 01:10:43,269
it means that once the session starts

1349
01:10:41,320 --> 01:10:48,219
having server-side problems its

1350
01:10:43,270 --> 01:10:50,020
persistent it stays and for example like

1351
01:10:48,220 --> 01:10:52,360
I said the average cache miss ratio is

1352
01:10:50,020 --> 01:10:55,900
2% if you look at the conditional

1353
01:10:52,360 --> 01:10:57,910
probability of the sessions that had a 1

1354
01:10:55,900 --> 01:11:00,280
cache miss the cache miss ratio for

1355
01:10:57,910 --> 01:11:03,450
those sessions goes up 60 percent that

1356
01:11:00,280 --> 01:11:08,019
means that cache misses are coming in

1357
01:11:03,450 --> 01:11:10,330
groups and that's usually because of the

1358
01:11:08,020 --> 01:11:14,140
unpopularity of the title so once a

1359
01:11:10,330 --> 01:11:16,690
title is unpopular its chunks are more

1360
01:11:14,140 --> 01:11:19,600
likely to reside in disk or worse gate

1361
01:11:16,690 --> 01:11:21,280
48 in the backend and you start having

1362
01:11:19,600 --> 01:11:23,080
cache misses but every single one of

1363
01:11:21,280 --> 01:11:25,230
these chunks are going to go through

1364
01:11:23,080 --> 01:11:25,230
that

1365
01:11:25,929 --> 01:11:31,449
and in fact we found an interesting

1366
01:11:28,510 --> 01:11:34,030
paradox in this system that it seems

1367
01:11:31,449 --> 01:11:37,000
like more heavily loaded servers seem to

1368
01:11:34,030 --> 01:11:38,710
have lower latency but this is the

1369
01:11:37,000 --> 01:11:40,780
result of the cache focus mapping cache

1370
01:11:38,710 --> 01:11:43,630
focus mapping is you're trying to have

1371
01:11:40,780 --> 01:11:45,790
hot caches so server is sending the

1372
01:11:43,630 --> 01:11:48,370
request to where it was recently served

1373
01:11:45,790 --> 01:11:50,050
from which causes your popular content

1374
01:11:48,370 --> 01:11:52,239
to go to the same servers and your

1375
01:11:50,050 --> 01:11:54,130
popular contents have better performance

1376
01:11:52,239 --> 01:11:56,230
because of the reasons they just mission

1377
01:11:54,130 --> 01:11:58,390
but you also have more requests for your

1378
01:11:56,230 --> 01:12:01,509
popular content so there's this there

1379
01:11:58,390 --> 01:12:03,070
are these servers that are less have

1380
01:12:01,510 --> 01:12:04,659
less demand because they're serving

1381
01:12:03,070 --> 01:12:07,509
unpopular content but have worse

1382
01:12:04,659 --> 01:12:09,730
performance so the Connie popularity is

1383
01:12:07,510 --> 01:12:15,640
even dominating a server load in this

1384
01:12:09,730 --> 01:12:18,669
case so the next category of problems

1385
01:12:15,640 --> 01:12:20,650
are network performance problems so

1386
01:12:18,670 --> 01:12:22,750
we're all familiar with network problems

1387
01:12:20,650 --> 01:12:25,839
that can manifest themselves in the

1388
01:12:22,750 --> 01:12:28,390
shape of packet loss reordering high

1389
01:12:25,840 --> 01:12:31,679
latency variation of latency and so on

1390
01:12:28,390 --> 01:12:34,179
and they can be transient or persistent

1391
01:12:31,679 --> 01:12:36,250
it's important to notice and and

1392
01:12:34,179 --> 01:12:40,659
separate these two from each other from

1393
01:12:36,250 --> 01:12:42,520
the video QE perspective because video

1394
01:12:40,659 --> 01:12:44,320
does have the adapter picture algorithm

1395
01:12:42,520 --> 01:12:46,870
that you may be able to adapt to some

1396
01:12:44,320 --> 01:12:49,780
transient problems but you can't avoid

1397
01:12:46,870 --> 01:12:51,790
bad Keowee forever when their problems

1398
01:12:49,780 --> 01:12:54,400
are persistent and the way to fix those

1399
01:12:51,790 --> 01:12:57,269
is by C DNS or ISPs actually taking

1400
01:12:54,400 --> 01:13:02,409
corrective actions for example fixing

1401
01:12:57,270 --> 01:13:05,500
peering so our network measurements come

1402
01:13:02,409 --> 01:13:07,540
from us instrumenting or host care and

1403
01:13:05,500 --> 01:13:09,010
also basically the orange box here is

1404
01:13:07,540 --> 01:13:11,590
showing what the operating system is

1405
01:13:09,010 --> 01:13:16,390
doing which is there's TCP

1406
01:13:11,590 --> 01:13:18,670
infrastructure and OS is collecting we

1407
01:13:16,390 --> 01:13:20,230
have this information about all the TCP

1408
01:13:18,670 --> 01:13:21,010
connections including a weighted average

1409
01:13:20,230 --> 01:13:24,059
of our TTS

1410
01:13:21,010 --> 01:13:26,050
called smooth our GT or SR TTA

1411
01:13:24,060 --> 01:13:27,909
congestion window and packet

1412
01:13:26,050 --> 01:13:31,270
retransmissions and what we do is the

1413
01:13:27,909 --> 01:13:33,370
blue box that is we pull this every 500

1414
01:13:31,270 --> 01:13:35,560
milliseconds per trunk and store it and

1415
01:13:33,370 --> 01:13:37,150
then later we use it across chunks and

1416
01:13:35,560 --> 01:13:38,360
across sessions to see what happened in

1417
01:13:37,150 --> 01:13:40,620
an hour

1418
01:13:38,360 --> 01:13:42,809
of course there are some challenges in

1419
01:13:40,620 --> 01:13:45,540
collecting unit this way we're looking

1420
01:13:42,810 --> 01:13:48,240
at smooth averages of RTT or SRT T's

1421
01:13:45,540 --> 01:13:50,190
instead of individual artis and that's

1422
01:13:48,240 --> 01:13:51,780
not sometimes a good idea especially if

1423
01:13:50,190 --> 01:13:54,389
you're dealing with these long

1424
01:13:51,780 --> 01:13:57,450
connections for video streaming because

1425
01:13:54,390 --> 01:13:59,250
the SRC T is not reflecting your RTT

1426
01:13:57,450 --> 01:14:02,309
during this chunk exactly but what

1427
01:13:59,250 --> 01:14:04,020
happened in all the previous chunks this

1428
01:14:02,310 --> 01:14:05,700
network snapshot frequency is also a

1429
01:14:04,020 --> 01:14:07,800
three point five hundred millisecond in

1430
01:14:05,700 --> 01:14:11,370
many cases it's more than the RTT of the

1431
01:14:07,800 --> 01:14:14,520
connection but it comes from operational

1432
01:14:11,370 --> 01:14:17,250
limitations and how often we have you

1433
01:14:14,520 --> 01:14:18,720
were allowed to pull this and how much

1434
01:14:17,250 --> 01:14:22,020
data we were producing in terms of

1435
01:14:18,720 --> 01:14:24,450
storage overhead and finally because

1436
01:14:22,020 --> 01:14:27,810
this is it this is it operational at

1437
01:14:24,450 --> 01:14:29,730
scale we can't collect packet traces and

1438
01:14:27,810 --> 01:14:32,880
in the paper we go into more details and

1439
01:14:29,730 --> 01:14:34,500
how we grapple with these challenges but

1440
01:14:32,880 --> 01:14:36,630
I'm just going to show you the

1441
01:14:34,500 --> 01:14:38,100
interesting findings so here's another

1442
01:14:36,630 --> 01:14:41,880
similar graph that you can do because we

1443
01:14:38,100 --> 01:14:43,260
know that relation C and for example the

1444
01:14:41,880 --> 01:14:45,270
SRT T of the first chunk and we also

1445
01:14:43,260 --> 01:14:47,820
know the set-up time so if you look at

1446
01:14:45,270 --> 01:14:50,490
the SRT T of the first chunk that's the

1447
01:14:47,820 --> 01:14:52,740
x-axis here and the impact on the start

1448
01:14:50,490 --> 01:14:56,130
time of the video the impact is visibly

1449
01:14:52,740 --> 01:14:57,780
clear and how it impacted how there is a

1450
01:14:56,130 --> 01:14:59,910
significant impact on the video startup

1451
01:14:57,780 --> 01:15:02,910
time so let's dig in here and see what

1452
01:14:59,910 --> 01:15:07,470
causes this network latency to be so

1453
01:15:02,910 --> 01:15:10,139
high so to do this we are aggregated IP

1454
01:15:07,470 --> 01:15:12,630
prefixes the client IP prefixes in 2/24

1455
01:15:10,140 --> 01:15:14,430
and we looked at them ones that are

1456
01:15:12,630 --> 01:15:16,230
mostly carrying in the 90th percentile

1457
01:15:14,430 --> 01:15:20,340
every day so we're looking at the tail

1458
01:15:16,230 --> 01:15:22,500
of a tail and among those we found 75%

1459
01:15:20,340 --> 01:15:24,480
of them to be located far from our city

1460
01:15:22,500 --> 01:15:27,210
and so geographical distance or

1461
01:15:24,480 --> 01:15:29,339
propagation delays the main cause but

1462
01:15:27,210 --> 01:15:32,010
surprisingly about 25% of them are

1463
01:15:29,340 --> 01:15:36,620
located in the US and majority of them

1464
01:15:32,010 --> 01:15:39,060
are actually close to our city ends and

1465
01:15:36,620 --> 01:15:41,220
but it further investigation and we saw

1466
01:15:39,060 --> 01:15:43,620
that there there's also a high latency

1467
01:15:41,220 --> 01:15:45,120
variation which is a little bit

1468
01:15:43,620 --> 01:15:48,120
different from a high baseline it's just

1469
01:15:45,120 --> 01:15:50,820
the variation and in both cases we find

1470
01:15:48,120 --> 01:15:52,769
that majority of these prefixes

1471
01:15:50,820 --> 01:15:55,170
or in enterprise networks not

1472
01:15:52,770 --> 01:15:57,240
residential networks and what we

1473
01:15:55,170 --> 01:15:58,710
speculate is happening here is that

1474
01:15:57,240 --> 01:15:59,969
these enterprise networks are running

1475
01:15:58,710 --> 01:16:02,370
their middleboxes

1476
01:15:59,970 --> 01:16:04,770
which are causing high latency and high

1477
01:16:02,370 --> 01:16:06,540
latency variation despite the fact that

1478
01:16:04,770 --> 01:16:08,700
they're so close to the Syrians now of

1479
01:16:06,540 --> 01:16:10,890
course we don't and we do not have in

1480
01:16:08,700 --> 01:16:13,769
network data to confirm it's just a

1481
01:16:10,890 --> 01:16:15,870
speculation of why we see this high

1482
01:16:13,770 --> 01:16:21,590
latency in only in enterprise networks

1483
01:16:15,870 --> 01:16:23,790
and not residential ones the second

1484
01:16:21,590 --> 01:16:25,770
finding is the impact of packet losses

1485
01:16:23,790 --> 01:16:28,100
this is this graph is generally what we

1486
01:16:25,770 --> 01:16:30,780
expect to see in terms of how

1487
01:16:28,100 --> 01:16:32,420
retransmission rates or losses impact

1488
01:16:30,780 --> 01:16:34,950
video q in terms of your buffering rate

1489
01:16:32,420 --> 01:16:37,680
generally we see that higher loss rate

1490
01:16:34,950 --> 01:16:38,550
indicates higher rebuffering rate but

1491
01:16:37,680 --> 01:16:41,550
that's not all

1492
01:16:38,550 --> 01:16:43,380
and in fact we sell I'm sorry the timing

1493
01:16:41,550 --> 01:16:46,530
of the losses are more important than

1494
01:16:43,380 --> 01:16:48,090
the amount of your loss rate and this is

1495
01:16:46,530 --> 01:16:50,820
important for us as a measurement

1496
01:16:48,090 --> 01:16:52,560
community to be aware of the fact that a

1497
01:16:50,820 --> 01:16:55,259
loss rate measuring loss rate does not

1498
01:16:52,560 --> 01:16:57,630
necessarily always correlate with QE and

1499
01:16:55,260 --> 01:17:00,510
the location or the timing of the losses

1500
01:16:57,630 --> 01:17:02,970
matter sometimes more so in this graph

1501
01:17:00,510 --> 01:17:05,250
we're showing you the x-axis the chunk

1502
01:17:02,970 --> 01:17:07,440
yd0 being the first chunk and the y-axis

1503
01:17:05,250 --> 01:17:09,540
is showing the percentage chunks that

1504
01:17:07,440 --> 01:17:11,910
had rebuffering and the blue graphs are

1505
01:17:09,540 --> 01:17:13,110
showing that amount so what's the

1506
01:17:11,910 --> 01:17:16,019
percentage of the chunks that he'll be

1507
01:17:13,110 --> 01:17:18,110
buffering and it is higher for first

1508
01:17:16,020 --> 01:17:23,060
chunk and you think because of the loss

1509
01:17:18,110 --> 01:17:25,889
so to take that into consideration we

1510
01:17:23,060 --> 01:17:28,530
calculated the green bar the green plots

1511
01:17:25,890 --> 01:17:31,140
so those are the conditional probability

1512
01:17:28,530 --> 01:17:33,540
F percentage chunks that hadley

1513
01:17:31,140 --> 01:17:35,430
buffering given there was a loss at this

1514
01:17:33,540 --> 01:17:37,620
channel and you can see that if there is

1515
01:17:35,430 --> 01:17:39,450
loss the percentage of the repo Franco

1516
01:17:37,620 --> 01:17:41,400
is higher for everyone but it goes

1517
01:17:39,450 --> 01:17:44,519
significantly higher for the first

1518
01:17:41,400 --> 01:17:46,860
channel so this is because of the

1519
01:17:44,520 --> 01:17:51,960
existence of a buffer in a video

1520
01:17:46,860 --> 01:17:54,049
streaming section so when you have a

1521
01:17:51,960 --> 01:17:56,430
buffer in a video streaming session it

1522
01:17:54,050 --> 01:17:59,250
initially it's not full so it cannot

1523
01:17:56,430 --> 01:18:01,290
hide these impacts from the user but

1524
01:17:59,250 --> 01:18:02,460
later on in the video streaming session

1525
01:18:01,290 --> 01:18:05,070
when you're

1526
01:18:02,460 --> 01:18:06,570
higher trunk IDs then there is enough

1527
01:18:05,070 --> 01:18:12,719
buffer to hide some of these impacts

1528
01:18:06,570 --> 01:18:16,320
from the users so here's an example case

1529
01:18:12,719 --> 01:18:18,330
he's a very extreme case so here we're

1530
01:18:16,320 --> 01:18:20,790
looking at two sessions red had

1531
01:18:18,330 --> 01:18:24,059
rebuffering and green did not have any

1532
01:18:20,790 --> 01:18:25,469
buffering and you're also looking at the

1533
01:18:24,060 --> 01:18:27,960
distribution of the last race

1534
01:18:25,469 --> 01:18:30,239
this is retransmission rate in chunks

1535
01:18:27,960 --> 01:18:32,040
and you can see that the red session

1536
01:18:30,239 --> 01:18:35,218
that happy buffering has actually

1537
01:18:32,040 --> 01:18:37,410
generally loyal lower three and the

1538
01:18:35,219 --> 01:18:39,810
green had significantly higher

1539
01:18:37,410 --> 01:18:41,880
transmission rates but because they

1540
01:18:39,810 --> 01:18:44,969
happened after the first four chunks

1541
01:18:41,880 --> 01:18:46,739
which is already a buffering twenty four

1542
01:18:44,969 --> 01:18:49,380
seconds of video because each chunk is

1543
01:18:46,739 --> 01:18:52,080
six seconds the user actually never

1544
01:18:49,380 --> 01:18:54,180
finds out about it whereas the red

1545
01:18:52,080 --> 01:18:55,620
session is very unlucky it has losses in

1546
01:18:54,180 --> 01:18:56,219
the first chunk and right there it has a

1547
01:18:55,620 --> 01:18:59,489
rebuffering

1548
01:18:56,219 --> 01:19:00,270
so here's an example of how the location

1549
01:18:59,489 --> 01:19:02,669
of the losses

1550
01:19:00,270 --> 01:19:06,450
seem to be even better more than the

1551
01:19:02,670 --> 01:19:08,610
loss rate unfortunately we found earlier

1552
01:19:06,450 --> 01:19:10,440
packet losses are also more common so

1553
01:19:08,610 --> 01:19:12,089
you saw they are more harmful but they

1554
01:19:10,440 --> 01:19:14,639
are also more common this is because of

1555
01:19:12,090 --> 01:19:16,710
the bursty nature and packet loss a tcp

1556
01:19:14,640 --> 01:19:19,680
slow-start but we'll talk about how some

1557
01:19:16,710 --> 01:19:25,530
server-side pacing can help but this

1558
01:19:19,680 --> 01:19:26,850
graph is showing you this graph is

1559
01:19:25,530 --> 01:19:31,080
showing you the average transmission

1560
01:19:26,850 --> 01:19:33,890
rate per chunk ID you can see this huge

1561
01:19:31,080 --> 01:19:39,870
difference in chunk ID 0 versus others

1562
01:19:33,890 --> 01:19:44,239
and finally we found throughput to be a

1563
01:19:39,870 --> 01:19:48,330
bigger problem than latency for reading

1564
01:19:44,239 --> 01:19:51,480
so here we have defined a performance

1565
01:19:48,330 --> 01:19:53,790
score which is a derecho generation in

1566
01:19:51,480 --> 01:19:56,099
our case it's six seconds divided by a

1567
01:19:53,790 --> 01:19:57,840
first byte plus last byte and the first

1568
01:19:56,100 --> 01:19:59,250
byte is a measure of latency if you

1569
01:19:57,840 --> 01:20:01,050
remember from this graph first point was

1570
01:19:59,250 --> 01:20:02,790
the time difference between when the I

1571
01:20:01,050 --> 01:20:05,820
should get request was sent and when the

1572
01:20:02,790 --> 01:20:08,489
first boy Drive so it includes the

1573
01:20:05,820 --> 01:20:10,349
network latency and the Sirian latency

1574
01:20:08,489 --> 01:20:12,509
and if you have back-end

1575
01:20:10,350 --> 01:20:14,379
if you have a cache miss also back in

1576
01:20:12,510 --> 01:20:15,820
latency

1577
01:20:14,379 --> 01:20:17,019
the last white delay is basically a

1578
01:20:15,820 --> 01:20:18,340
measure of 3-wood because it's a

1579
01:20:17,019 --> 01:20:23,169
difference between the first and the

1580
01:20:18,340 --> 01:20:25,359
last bite of this video so we have

1581
01:20:23,169 --> 01:20:27,669
divided the chunks in our data set into

1582
01:20:25,359 --> 01:20:29,709
two sets based on if this performance

1583
01:20:27,669 --> 01:20:32,199
scores more than 1 or less than 1 when

1584
01:20:29,709 --> 01:20:34,209
the score is more than 1 that means more

1585
01:20:32,199 --> 01:20:38,709
than one second of video is delivered

1586
01:20:34,209 --> 01:20:42,369
per second to this player and from very

1587
01:20:38,709 --> 01:20:44,619
simple queuing algorithms if you have

1588
01:20:42,369 --> 01:20:46,929
more than one second video delivered to

1589
01:20:44,619 --> 01:20:48,848
your player but the user is watching one

1590
01:20:46,929 --> 01:20:51,369
second of video per second you're gonna

1591
01:20:48,849 --> 01:20:52,780
build up buffer and when the score is

1592
01:20:51,369 --> 01:20:54,398
less than 1 that means less than one

1593
01:20:52,780 --> 01:20:56,590
second of video is delivered to your

1594
01:20:54,399 --> 01:20:57,939
buffer your users still watching one

1595
01:20:56,590 --> 01:20:59,139
second of video per second and that

1596
01:20:57,939 --> 01:21:02,320
means you're depleting the buffer

1597
01:20:59,139 --> 01:21:06,609
expected to have a rebuffering at some

1598
01:21:02,320 --> 01:21:08,579
point so once we divided our chunks into

1599
01:21:06,609 --> 01:21:10,959
these two sets we found that the

1600
01:21:08,579 --> 01:21:13,869
contribution of the last byte delay in

1601
01:21:10,959 --> 01:21:16,629
the bath trunks was orders of magnitude

1602
01:21:13,869 --> 01:21:19,358
higher than latency and this shows to us

1603
01:21:16,629 --> 01:21:21,219
that throughput seems to be having a

1604
01:21:19,359 --> 01:21:26,649
bigger contribution in these chunks that

1605
01:21:21,219 --> 01:21:29,919
do not arrive in time third category our

1606
01:21:26,649 --> 01:21:32,829
problems are within the client so what

1607
01:21:29,919 --> 01:21:34,269
is the client download stack when the

1608
01:21:32,829 --> 01:21:36,219
chunks are arrived from the network and

1609
01:21:34,269 --> 01:21:38,169
before they are delivered to our player

1610
01:21:36,219 --> 01:21:40,389
they go through the download stack at

1611
01:21:38,169 --> 01:21:41,979
the client which is the NIC the OS and

1612
01:21:40,389 --> 01:21:44,550
the browser before they're finally

1613
01:21:41,979 --> 01:21:46,840
handed over to the player and

1614
01:21:44,550 --> 01:21:48,519
unfortunately for us at scale we cannot

1615
01:21:46,840 --> 01:21:55,570
observe the download stack now you can

1616
01:21:48,519 --> 01:21:58,209
see directly because we can't go and

1617
01:21:55,570 --> 01:22:00,579
instrument these coins and see what's

1618
01:21:58,209 --> 01:22:03,309
happening at their browser or network

1619
01:22:00,579 --> 01:22:06,308
card so here we're relying on detecting

1620
01:22:03,309 --> 01:22:08,379
outliers so here we're doing some

1621
01:22:06,309 --> 01:22:09,939
statistical work to see if there is a

1622
01:22:08,379 --> 01:22:13,119
chunk that seemed to have been buffered

1623
01:22:09,939 --> 01:22:14,769
at the download stack so if a chunk has

1624
01:22:13,119 --> 01:22:16,959
been buffered at download stack I expect

1625
01:22:14,769 --> 01:22:19,329
it to be delivered late to the player

1626
01:22:16,959 --> 01:22:22,209
and that means that I'm expecting the

1627
01:22:19,329 --> 01:22:24,188
first byte to be significantly higher

1628
01:22:22,209 --> 01:22:27,070
than others so let's say it's 2 Sigma

1629
01:22:24,189 --> 01:22:28,210
away from my mean but also because it

1630
01:22:27,070 --> 01:22:30,580
was buffered at the

1631
01:22:28,210 --> 01:22:31,300
stack and delivered so late to the

1632
01:22:30,580 --> 01:22:33,670
player

1633
01:22:31,300 --> 01:22:35,469
I expected to be arriving at the

1634
01:22:33,670 --> 01:22:37,210
machines throughput not at the

1635
01:22:35,469 --> 01:22:39,700
connections throughput so it's gonna

1636
01:22:37,210 --> 01:22:42,610
have very high standing yes throughput

1637
01:22:39,700 --> 01:22:44,349
from the perspective of the player so

1638
01:22:42,610 --> 01:22:46,750
let's say it's 2 Sigma away from the

1639
01:22:44,350 --> 01:22:49,030
mean again but it should not have been

1640
01:22:46,750 --> 01:22:51,219
caused by network and server so it

1641
01:22:49,030 --> 01:22:54,550
should have similar Network and server

1642
01:22:51,219 --> 01:22:58,330
performance so here's one example that

1643
01:22:54,550 --> 01:23:00,430
we found in our data set the graph on

1644
01:22:58,330 --> 01:23:03,190
the top shows you the latency matrix and

1645
01:23:00,430 --> 01:23:05,739
look at chung-kai d7 and you can see

1646
01:23:03,190 --> 01:23:08,230
that it has similar RTT and several

1647
01:23:05,739 --> 01:23:10,120
metrics several agency but it has a

1648
01:23:08,230 --> 01:23:12,218
significantly higher first byte delay

1649
01:23:10,120 --> 01:23:13,750
than the rest of the chunks so what we

1650
01:23:12,219 --> 01:23:15,130
expect this happening here is that this

1651
01:23:13,750 --> 01:23:16,989
chunk was buffered at the client

1652
01:23:15,130 --> 01:23:19,060
download stack and delivered late to the

1653
01:23:16,989 --> 01:23:20,860
player and then the throughput

1654
01:23:19,060 --> 01:23:22,300
measurements are at the bottom you can

1655
01:23:20,860 --> 01:23:23,710
see the blue line is connection

1656
01:23:22,300 --> 01:23:24,790
throughput and we know the connection

1657
01:23:23,710 --> 01:23:28,690
through quick because we know the

1658
01:23:24,790 --> 01:23:29,980
congestion window in R 2 T and the red

1659
01:23:28,690 --> 01:23:31,839
line is showing the download throughput

1660
01:23:29,980 --> 01:23:33,639
from the perspective of the player and

1661
01:23:31,840 --> 01:23:35,100
you can see that the same chunk seems to

1662
01:23:33,640 --> 01:23:37,030
have a significantly higher

1663
01:23:35,100 --> 01:23:40,540
instantaneous throughput in almost four

1664
01:23:37,030 --> 01:23:42,070
times more which disconnected is not

1665
01:23:40,540 --> 01:23:45,969
possible in this connection because we

1666
01:23:42,070 --> 01:23:49,150
are measuring this so it's important to

1667
01:23:45,969 --> 01:23:51,700
be aware of these problems that we can

1668
01:23:49,150 --> 01:23:53,950
only find with once we have data from

1669
01:23:51,700 --> 01:23:55,510
both sides because if we don't have this

1670
01:23:53,950 --> 01:23:59,290
each side is going to blame the network

1671
01:23:55,510 --> 01:24:01,870
or the other for these problems and this

1672
01:23:59,290 --> 01:24:04,469
can be very dangerous in the video

1673
01:24:01,870 --> 01:24:07,120
streaming world because if your player

1674
01:24:04,469 --> 01:24:08,620
makes incorrect assumptions about for

1675
01:24:07,120 --> 01:24:10,660
example agency from their first graph

1676
01:24:08,620 --> 01:24:12,489
and if the adaptability algorithm is

1677
01:24:10,660 --> 01:24:14,200
latency sensitive it can cause

1678
01:24:12,489 --> 01:24:16,299
undershooting because it made a freak

1679
01:24:14,200 --> 01:24:20,200
out and think the latency had a spike

1680
01:24:16,300 --> 01:24:23,650
where reality didn't or if your player

1681
01:24:20,200 --> 01:24:26,110
is sensitive to throughput and it's

1682
01:24:23,650 --> 01:24:27,429
using the lower graph then it may think

1683
01:24:26,110 --> 01:24:28,839
the world is so much better than it

1684
01:24:27,430 --> 01:24:30,640
actually is and it can cause

1685
01:24:28,840 --> 01:24:34,960
overshooting in there dr. Pillai

1686
01:24:30,640 --> 01:24:38,320
algorithm so it's important for the

1687
01:24:34,960 --> 01:24:40,450
player to have some view into the

1688
01:24:38,320 --> 01:24:41,679
network path that in our system the

1689
01:24:40,450 --> 01:24:45,269
player didn't because we only

1690
01:24:41,679 --> 01:24:45,269
had these TCP measurements at the server

1691
01:24:46,409 --> 01:24:51,249
so we found these that download slight

1692
01:24:49,059 --> 01:24:52,869
problems there transient problems that

1693
01:24:51,249 --> 01:24:54,400
are that I just described to you

1694
01:24:52,869 --> 01:24:57,848
you found them to be more common in

1695
01:24:54,400 --> 01:24:59,739
their first truck and in DeBary going to

1696
01:24:57,849 --> 01:25:03,400
more details of how this could be a

1697
01:24:59,739 --> 01:25:05,018
possible side effect of flash and we

1698
01:25:03,400 --> 01:25:07,209
also have persistent downloads tech

1699
01:25:05,019 --> 01:25:09,550
problems the persistent download side

1700
01:25:07,209 --> 01:25:11,499
problems are not very common but what's

1701
01:25:09,550 --> 01:25:15,309
important about them is once they happen

1702
01:25:11,499 --> 01:25:17,469
they they often are the most important

1703
01:25:15,309 --> 01:25:20,729
factor and they are higher than network

1704
01:25:17,469 --> 01:25:22,989
and server latency and there's more

1705
01:25:20,729 --> 01:25:26,709
in-depth conversation about them in the

1706
01:25:22,989 --> 01:25:29,049
paper if you're interested in that and

1707
01:25:26,709 --> 01:25:30,699
finally the last category of problems

1708
01:25:29,050 --> 01:25:34,030
are the rendering stack performance

1709
01:25:30,699 --> 01:25:35,860
problems so what is rendering stack so

1710
01:25:34,030 --> 01:25:37,869
the chunks have finally arrived at the

1711
01:25:35,860 --> 01:25:41,110
player but they're not ready to be shown

1712
01:25:37,869 --> 01:25:43,449
on the screen yet and here we have a

1713
01:25:41,110 --> 01:25:45,789
rendering stack these chunks need to be

1714
01:25:43,449 --> 01:25:47,768
D MUX meaning the audio should be

1715
01:25:45,789 --> 01:25:49,539
separated from the video and then they

1716
01:25:47,769 --> 01:25:51,909
have to be decoded and find another

1717
01:25:49,539 --> 01:25:54,130
render and this can be done by CPU or

1718
01:25:51,909 --> 01:25:56,110
GPU if it is done by GPU it's called

1719
01:25:54,130 --> 01:25:57,340
Hardware rendering if it's done by CV

1720
01:25:56,110 --> 01:25:59,499
it's called software engineering

1721
01:25:57,340 --> 01:26:02,229
now if the CPU is busy and you're using

1722
01:25:59,499 --> 01:26:05,860
software rendering the quality may drop

1723
01:26:02,229 --> 01:26:08,439
which causes high frame drops but also

1724
01:26:05,860 --> 01:26:10,329
if your video tab is not visible your

1725
01:26:08,439 --> 01:26:11,559
browser's do optimizations to reduce

1726
01:26:10,329 --> 01:26:14,650
your CPU consumption so they

1727
01:26:11,559 --> 01:26:16,570
intentionally drop frames so to detect

1728
01:26:14,650 --> 01:26:18,610
these problems but to separate them from

1729
01:26:16,570 --> 01:26:20,619
browser optimizations we have introduced

1730
01:26:18,610 --> 01:26:22,869
boolean variable which is this player

1731
01:26:20,619 --> 01:26:25,959
visible or not and also we're measuring

1732
01:26:22,869 --> 01:26:28,839
the drop frames and then for each

1733
01:26:25,959 --> 01:26:30,820
session we are also collecting what OS

1734
01:26:28,840 --> 01:26:33,670
and browser it has and there are some

1735
01:26:30,820 --> 01:26:37,058
interesting findings here first one is

1736
01:26:33,670 --> 01:26:40,420
that good rendering is actually time

1737
01:26:37,059 --> 01:26:42,070
consuming we found that the multiplexing

1738
01:26:40,420 --> 01:26:43,539
decoding and rendering takes time and

1739
01:26:42,070 --> 01:26:47,349
you have to provision for that if you

1740
01:26:43,539 --> 01:26:48,849
want to have a good frame rate and so in

1741
01:26:47,349 --> 01:26:50,380
this graph we're showing you the

1742
01:26:48,849 --> 01:26:52,239
download rate of the chunk the average

1743
01:26:50,380 --> 01:26:54,280
download rate of the chunk and x-axis

1744
01:26:52,239 --> 01:26:55,059
and what's the percentage of the drop

1745
01:26:54,280 --> 01:26:57,160
frames and you can

1746
01:26:55,060 --> 01:26:59,650
you drop up to about one and a half

1747
01:26:57,160 --> 01:27:01,300
second per second and that's what we

1748
01:26:59,650 --> 01:27:04,839
recommend to use as a rule of thumb

1749
01:27:01,300 --> 01:27:12,760
police in this system for avoiding have

1750
01:27:04,840 --> 01:27:14,290
a higher drop frames next we found kind

1751
01:27:12,760 --> 01:27:16,390
of a paradox again higher bit rates

1752
01:27:14,290 --> 01:27:18,580
showing better rendering so higher

1753
01:27:16,390 --> 01:27:20,770
betrays put more load on CPU and as I

1754
01:27:18,580 --> 01:27:22,809
explained to you software can be

1755
01:27:20,770 --> 01:27:24,850
expensive so we were expecting them to

1756
01:27:22,810 --> 01:27:26,860
have worse frame rate but we actually

1757
01:27:24,850 --> 01:27:28,750
see them having better rendering frame

1758
01:27:26,860 --> 01:27:30,700
rate and we need further investigation

1759
01:27:28,750 --> 01:27:33,160
you can see the numbers in the paper but

1760
01:27:30,700 --> 01:27:35,320
in summary we found these high higher

1761
01:27:33,160 --> 01:27:37,900
bit rates coming from connections that

1762
01:27:35,320 --> 01:27:39,940
had lower RTT variation and lower

1763
01:27:37,900 --> 01:27:42,700
returns machinery so they were often

1764
01:27:39,940 --> 01:27:45,429
requested in better conditions and as a

1765
01:27:42,700 --> 01:27:46,840
result they had they were able to

1766
01:27:45,430 --> 01:27:49,900
provide the one and a half second per

1767
01:27:46,840 --> 01:27:51,490
second rule more often and had a lot of

1768
01:27:49,900 --> 01:27:56,769
extra time to process this and the

1769
01:27:51,490 --> 01:27:59,110
impact was hidden from the user and

1770
01:27:56,770 --> 01:28:01,480
finally we found some very unpopular

1771
01:27:59,110 --> 01:28:03,730
browsers that had a really bad rendering

1772
01:28:01,480 --> 01:28:06,639
so here we're looking at chunks that had

1773
01:28:03,730 --> 01:28:08,469
already good performance so the rate the

1774
01:28:06,640 --> 01:28:10,510
arrival rate is more than 1/2 second per

1775
01:28:08,470 --> 01:28:13,150
second and we know the player is visible

1776
01:28:10,510 --> 01:28:15,940
because we're filtering on the only

1777
01:28:13,150 --> 01:28:18,700
these chunks that have visibility so the

1778
01:28:15,940 --> 01:28:20,559
user is actually watching and we divided

1779
01:28:18,700 --> 01:28:23,889
the chunks into two major platforms

1780
01:28:20,560 --> 01:28:25,120
Windows and Mac and this blue bars are

1781
01:28:23,890 --> 01:28:26,530
just showing you different centage of

1782
01:28:25,120 --> 01:28:28,750
the chunks in each platform for each

1783
01:28:26,530 --> 01:28:33,370
browser and they're sorted from more

1784
01:28:28,750 --> 01:28:34,810
popular so this popular and here you're

1785
01:28:33,370 --> 01:28:37,269
looking at the percentage of the drop

1786
01:28:34,810 --> 01:28:38,830
frames in each of these browsers are

1787
01:28:37,270 --> 01:28:44,320
always combinations you can see the

1788
01:28:38,830 --> 01:28:46,030
trend is the opposite and we found so in

1789
01:28:44,320 --> 01:28:47,799
the paper we further break down the

1790
01:28:46,030 --> 01:28:50,170
other category which are the least

1791
01:28:47,800 --> 01:28:52,270
popular each in each one of them and

1792
01:28:50,170 --> 01:28:55,150
there are some interesting cases there

1793
01:28:52,270 --> 01:28:56,620
that have really bad rendering despite

1794
01:28:55,150 --> 01:28:58,210
the fact that we have made sure the

1795
01:28:56,620 --> 01:29:03,099
arrival rate is good and everything else

1796
01:28:58,210 --> 01:29:05,170
is similar one of the interesting

1797
01:29:03,100 --> 01:29:06,730
examples our safari is actually really

1798
01:29:05,170 --> 01:29:08,550
good at mac but it's among one of the

1799
01:29:06,730 --> 01:29:11,750
worst on windows

1800
01:29:08,550 --> 01:29:14,700
windows other section ders there's some

1801
01:29:11,750 --> 01:29:17,610
less popular browsers like Yandex and

1802
01:29:14,700 --> 01:29:23,010
see monkey that we found that had huge

1803
01:29:17,610 --> 01:29:25,200
problems in terms of rendering so I walk

1804
01:29:23,010 --> 01:29:27,330
you through all these problems but let's

1805
01:29:25,200 --> 01:29:28,980
see what are the takeaways and what can

1806
01:29:27,330 --> 01:29:32,130
we do about all of these problems at

1807
01:29:28,980 --> 01:29:34,320
each one of these places so let's start

1808
01:29:32,130 --> 01:29:37,260
with the CDN I discussed three problems

1809
01:29:34,320 --> 01:29:38,420
with you about the CDN one is the impact

1810
01:29:37,260 --> 01:29:41,100
of cache misses

1811
01:29:38,420 --> 01:29:44,100
so in this workload we're looking at

1812
01:29:41,100 --> 01:29:45,720
popular heavy workloads and I told you

1813
01:29:44,100 --> 01:29:48,390
we are using the LRU cache eviction

1814
01:29:45,720 --> 01:29:50,220
policy because of the impact of cache

1815
01:29:48,390 --> 01:29:52,770
misses are so high and the workload is

1816
01:29:50,220 --> 01:29:56,610
popular have you proposed using other

1817
01:29:52,770 --> 01:29:59,010
policies that are more tuned for these

1818
01:29:56,610 --> 01:30:01,469
kind of workloads like GD size or

1819
01:29:59,010 --> 01:30:03,540
perfect all of you in terms of the cache

1820
01:30:01,470 --> 01:30:06,120
miss persistence we propose prefetching

1821
01:30:03,540 --> 01:30:08,310
subsequent trunks this is the problem

1822
01:30:06,120 --> 01:30:10,019
that I discussed with you that once the

1823
01:30:08,310 --> 01:30:11,970
session starts having cache misses it

1824
01:30:10,020 --> 01:30:14,190
every one of its chunks is gonna have

1825
01:30:11,970 --> 01:30:16,920
the cache misses because it was most

1826
01:30:14,190 --> 01:30:18,629
likely an unpopular title now it's not

1827
01:30:16,920 --> 01:30:20,520
very it's not that simple to just

1828
01:30:18,630 --> 01:30:23,400
prefetch the subsequent chunks because

1829
01:30:20,520 --> 01:30:25,860
in many cases the CDN does not know what

1830
01:30:23,400 --> 01:30:29,160
bit rate is going to be requested in the

1831
01:30:25,860 --> 01:30:32,580
next chunk but that's a whole other area

1832
01:30:29,160 --> 01:30:34,860
of research but you talk more about it

1833
01:30:32,580 --> 01:30:37,830
if we're interested for the low latency

1834
01:30:34,860 --> 01:30:39,719
paradox that I explained to you we

1835
01:30:37,830 --> 01:30:41,730
propose better load balancing by

1836
01:30:39,720 --> 01:30:44,610
partitioning the popular content if you

1837
01:30:41,730 --> 01:30:47,250
remember 66% of the load was for the top

1838
01:30:44,610 --> 01:30:48,960
10% so even if you balance that better

1839
01:30:47,250 --> 01:30:54,440
you can get better utilization of the

1840
01:30:48,960 --> 01:30:56,910
servers the network category of problems

1841
01:30:54,440 --> 01:30:58,379
disk I discussed for problems with you

1842
01:30:56,910 --> 01:30:59,580
there there are more takeaways and

1843
01:30:58,380 --> 01:31:02,790
problems in the paper if you were

1844
01:30:59,580 --> 01:31:04,380
interested but the first problem was we

1845
01:31:02,790 --> 01:31:07,410
found some nearby clients with high

1846
01:31:04,380 --> 01:31:10,380
latency it's important to know this even

1847
01:31:07,410 --> 01:31:12,330
as a CDN because sometimes you want to

1848
01:31:10,380 --> 01:31:14,580
do you want to know what you can do but

1849
01:31:12,330 --> 01:31:17,190
sometimes you should be aware of what

1850
01:31:14,580 --> 01:31:19,230
you shouldn't do so in this case you

1851
01:31:17,190 --> 01:31:21,059
should avoid over provisioning servers

1852
01:31:19,230 --> 01:31:22,039
for these near about clients because the

1853
01:31:21,060 --> 01:31:26,209
problem is now that

1854
01:31:22,039 --> 01:31:27,949
far from your points of presence and in

1855
01:31:26,209 --> 01:31:30,769
case of prefixes that have persistent

1856
01:31:27,949 --> 01:31:32,989
high latency or variation as a content

1857
01:31:30,769 --> 01:31:35,299
provider the options are limited of what

1858
01:31:32,989 --> 01:31:36,978
they can do about this problem but the

1859
01:31:35,299 --> 01:31:38,959
least that you can do is adjust adapt

1860
01:31:36,979 --> 01:31:40,280
leapreader algorithm accordingly for

1861
01:31:38,959 --> 01:31:42,019
example you can start with a more

1862
01:31:40,280 --> 01:31:43,969
conservative bit rate or increase the

1863
01:31:42,019 --> 01:31:47,269
buffer size to handle these like to see

1864
01:31:43,969 --> 01:31:48,649
variations better in terms of the

1865
01:31:47,269 --> 01:31:50,569
earlier packet losses that are more

1866
01:31:48,649 --> 01:31:54,639
harmful and unfortunately more common I

1867
01:31:50,569 --> 01:31:56,689
discussed using server-side pacing and

1868
01:31:54,639 --> 01:31:58,760
finally the throughput is a major

1869
01:31:56,689 --> 01:32:00,739
bottleneck we think that's actually good

1870
01:31:58,760 --> 01:32:02,329
news for ice B's because it's easier to

1871
01:32:00,739 --> 01:32:06,768
fix by establishing better peering

1872
01:32:02,329 --> 01:32:08,239
points the latency the takeaways on the

1873
01:32:06,769 --> 01:32:10,039
client I discussed the download cycle

1874
01:32:08,239 --> 01:32:11,749
agency problem with you and we think

1875
01:32:10,039 --> 01:32:13,280
that's an important problem that we

1876
01:32:11,749 --> 01:32:15,049
could only find it because we had data

1877
01:32:13,280 --> 01:32:16,639
from both sides and we could confirm

1878
01:32:15,049 --> 01:32:21,439
that this problem is not being caused by

1879
01:32:16,639 --> 01:32:23,209
the server or the network and I talked

1880
01:32:21,439 --> 01:32:24,619
about how that can be dangerous for that

1881
01:32:23,209 --> 01:32:28,068
Ephrata algorithm it can cause

1882
01:32:24,619 --> 01:32:29,719
overshooting or undershooting and what

1883
01:32:28,069 --> 01:32:31,729
we propose here is incorporating some

1884
01:32:29,719 --> 01:32:34,069
servers like TCP metrics or some

1885
01:32:31,729 --> 01:32:37,189
awareness of the network path to the

1886
01:32:34,069 --> 01:32:38,899
player and I have these discussions with

1887
01:32:37,189 --> 01:32:43,249
the path where networking folks

1888
01:32:38,899 --> 01:32:44,780
yesterday and the second problem is that

1889
01:32:43,249 --> 01:32:46,818
rendering is resource heavy so you

1890
01:32:44,780 --> 01:32:48,648
should provision for that we propose

1891
01:32:46,819 --> 01:32:50,019
using one and a half second per second

1892
01:32:48,649 --> 01:32:52,309
video rubber raid as a rule of thumb

1893
01:32:50,019 --> 01:32:55,309
this is particularly important if you

1894
01:32:52,309 --> 01:32:58,399
are streaming videos that people care

1895
01:32:55,309 --> 01:33:00,319
about frame rate for example sports that

1896
01:32:58,399 --> 01:33:05,089
there's usually that one frame that has

1897
01:33:00,319 --> 01:33:07,459
whether or not it was a foul and finally

1898
01:33:05,089 --> 01:33:09,919
rendering quality differs based on OS

1899
01:33:07,459 --> 01:33:12,589
and browser and I showed you some

1900
01:33:09,919 --> 01:33:15,108
example browsers that even in good

1901
01:33:12,589 --> 01:33:16,429
conditions and similar network and

1902
01:33:15,109 --> 01:33:19,219
server conditions they seem to have

1903
01:33:16,429 --> 01:33:21,619
worse rendering quality it's important

1904
01:33:19,219 --> 01:33:23,479
for a controverted to know this to avoid

1905
01:33:21,619 --> 01:33:25,728
premature optimizations for example

1906
01:33:23,479 --> 01:33:27,379
rerouting this client while the problem

1907
01:33:25,729 --> 01:33:31,789
was that the clients own down the stack

1908
01:33:27,379 --> 01:33:33,499
is not helpful so it helps students on

1909
01:33:31,789 --> 01:33:34,719
high speeds to know where when the

1910
01:33:33,499 --> 01:33:37,200
problem is the client

1911
01:33:34,720 --> 01:33:41,260
to avoid premature optimizations there

1912
01:33:37,200 --> 01:33:43,420
so in conclusion this in this work can

1913
01:33:41,260 --> 01:33:47,050
be instrumented both sides for the first

1914
01:33:43,420 --> 01:33:49,660
time the client and the CDN server and

1915
01:33:47,050 --> 01:33:53,200
it allowed us to uncover a wide range of

1916
01:33:49,660 --> 01:33:54,970
problems for the first time we have data

1917
01:33:53,200 --> 01:33:57,280
per trunk and per session which allows

1918
01:33:54,970 --> 01:33:59,770
us to uncover over their problems or

1919
01:33:57,280 --> 01:34:01,900
persistent or transient and whether they

1920
01:33:59,770 --> 01:34:03,610
lasted throughout the life of this video

1921
01:34:01,900 --> 01:34:04,839
streaming session or not and our

1922
01:34:03,610 --> 01:34:08,320
findings were used to enhance

1923
01:34:04,840 --> 01:34:11,070
performance in Yahoo and with that I am

1924
01:34:08,320 --> 01:34:11,070
happy to take questions

1925
01:34:22,219 --> 01:34:27,170
but we'll take about five minutes of

1926
01:34:24,260 --> 01:34:29,539
questions hi my name is Stuart Cheshire

1927
01:34:27,170 --> 01:34:32,239
from Apple thank you for a really

1928
01:34:29,539 --> 01:34:34,070
interesting presentation as you said

1929
01:34:32,239 --> 01:34:36,530
most of the traffic on the Internet

1930
01:34:34,070 --> 01:34:38,299
today is streaming video so clearly

1931
01:34:36,530 --> 01:34:39,739
something people care about and I think

1932
01:34:38,300 --> 01:34:41,929
we're all frustrated by seeing that

1933
01:34:39,739 --> 01:34:45,558
little spinny wheel waiting for a

1934
01:34:41,929 --> 01:34:50,420
buffering I had one comment you talked

1935
01:34:45,559 --> 01:34:53,869
about client download stack latencies

1936
01:34:50,420 --> 01:34:57,559
and working for Apple that's the area of

1937
01:34:53,869 --> 01:34:59,299
this that I'm more involved with I think

1938
01:34:57,559 --> 01:35:03,469
I may know what's going on here

1939
01:34:59,300 --> 01:35:05,360
so let me well know I was happy to see

1940
01:35:03,469 --> 01:35:10,880
Safari schools best so thank you for

1941
01:35:05,360 --> 01:35:12,799
that no you were talking about in the

1942
01:35:10,880 --> 01:35:14,539
pipeline the various delays in the CDN

1943
01:35:12,800 --> 01:35:16,280
the network and you when you're talking

1944
01:35:14,539 --> 01:35:20,599
about the client site download stack

1945
01:35:16,280 --> 01:35:23,389
right as far as I know there is no

1946
01:35:20,599 --> 01:35:26,150
networking API on Windows or Linux or

1947
01:35:23,389 --> 01:35:29,239
Mac that will just sit on data for no

1948
01:35:26,150 --> 01:35:33,888
reason and not deliver it I think this

1949
01:35:29,239 --> 01:35:39,259
is a consequence of the api's in order

1950
01:35:33,889 --> 01:35:41,300
delivery of data if you miss it in a

1951
01:35:39,260 --> 01:35:43,039
common Network setup now unfortunately

1952
01:35:41,300 --> 01:35:45,469
we have lots of buffer bloat so you

1953
01:35:43,039 --> 01:35:48,559
could easily have a two second queue on

1954
01:35:45,469 --> 01:35:51,349
your cable modem link and you lose one

1955
01:35:48,559 --> 01:35:53,809
packet and fast retransmit fills in that

1956
01:35:51,349 --> 01:35:57,320
one packet really fast but it's at the

1957
01:35:53,809 --> 01:36:00,409
back of a two-second queue so you've got

1958
01:35:57,320 --> 01:36:03,228
all this data arriving piling up in the

1959
01:36:00,409 --> 01:36:05,539
kernel the sockets API can't deliver it

1960
01:36:03,229 --> 01:36:07,789
yes and then the one missing packet

1961
01:36:05,539 --> 01:36:10,400
arrives and it says here you go here's

1962
01:36:07,789 --> 01:36:12,710
200k all at once and of course that

1963
01:36:10,400 --> 01:36:14,659
looks like this blip that you've had

1964
01:36:12,710 --> 01:36:18,769
zero throughput for a couple of seconds

1965
01:36:14,659 --> 01:36:21,789
and then suddenly 200k delivered in 0

1966
01:36:18,769 --> 01:36:25,849
nanoseconds is infinity throughput

1967
01:36:21,789 --> 01:36:27,768
instantaneously so we have definitely

1968
01:36:25,849 --> 01:36:30,739
seen that with things like the Apple TV

1969
01:36:27,769 --> 01:36:32,869
product that we get very we get plateaus

1970
01:36:30,739 --> 01:36:34,068
of no data at all and then suddenly a

1971
01:36:32,869 --> 01:36:35,839
spike where it apparent

1972
01:36:34,069 --> 01:36:38,809
all arrives because the one missing

1973
01:36:35,839 --> 01:36:41,949
packet got there yes I completely agree

1974
01:36:38,809 --> 01:36:45,649
with you actually we have more data in

1975
01:36:41,949 --> 01:36:49,009
paper that we confirm what you're saying

1976
01:36:45,649 --> 01:36:50,539
because we collected like time stamps at

1977
01:36:49,010 --> 01:36:52,639
the Nick and you collect the time stamps

1978
01:36:50,539 --> 01:36:54,619
at the browser and it's usually the API

1979
01:36:52,639 --> 01:36:56,269
the problem here is that our player

1980
01:36:54,619 --> 01:36:58,969
sitting on their black box right

1981
01:36:56,269 --> 01:37:00,379
and we can't it's probably the way that

1982
01:36:58,969 --> 01:37:02,329
they're handling like there's a buffer

1983
01:37:00,379 --> 01:37:05,239
there and how they're handling the data

1984
01:37:02,329 --> 01:37:07,129
delivery that causes these problems but

1985
01:37:05,239 --> 01:37:09,098
because it's a black box and it's like a

1986
01:37:07,129 --> 01:37:11,659
footnote in the paper that we can only

1987
01:37:09,099 --> 01:37:14,209
guess this is what's happening and we

1988
01:37:11,659 --> 01:37:16,938
confirm it is not at the OS for the

1989
01:37:14,209 --> 01:37:18,889
browser it seems to be there but we

1990
01:37:16,939 --> 01:37:21,199
can't really measure what's what they're

1991
01:37:18,889 --> 01:37:23,239
doing in that API I think you have a

1992
01:37:21,199 --> 01:37:26,148
good point there with the current api's

1993
01:37:23,239 --> 01:37:28,789
you can't tell if there was just no data

1994
01:37:26,149 --> 01:37:31,579
or if there's lots of data with one

1995
01:37:28,789 --> 01:37:38,169
missing packet right yeah it's good

1996
01:37:31,579 --> 01:37:40,489
point Wes heard occur USC is a excellent

1997
01:37:38,169 --> 01:37:42,229
presentation and work very thorough and

1998
01:37:40,489 --> 01:37:44,739
I really enjoyed it

1999
01:37:42,229 --> 01:37:48,229
having said that you killed my dream and

2000
01:37:44,739 --> 01:37:50,449
I've had this dream that that with the

2001
01:37:48,229 --> 01:37:52,309
advent of you know users can go out and

2002
01:37:50,449 --> 01:37:53,928
find the things that they want and and

2003
01:37:52,309 --> 01:37:54,879
it would they'd help us discover new

2004
01:37:53,929 --> 01:37:56,749
things

2005
01:37:54,879 --> 01:37:59,510
unfortunately sort of your caching

2006
01:37:56,749 --> 01:38:02,989
results kind of indicate that video

2007
01:37:59,510 --> 01:38:05,419
streaming services are it's in their

2008
01:38:02,989 --> 01:38:08,089
desire to bin everybody into popular

2009
01:38:05,419 --> 01:38:10,369
titles where you know they they won't

2010
01:38:08,089 --> 01:38:11,539
give you as many suggestions sideways of

2011
01:38:10,369 --> 01:38:12,589
other things that you're interested in

2012
01:38:11,539 --> 01:38:14,148
they're more likely to give you

2013
01:38:12,589 --> 01:38:16,519
suggestions that everybody else is gonna

2014
01:38:14,149 --> 01:38:18,799
watch too because it's cheaper for them

2015
01:38:16,519 --> 01:38:21,499
gives them better performance and thus

2016
01:38:18,799 --> 01:38:24,229
you know better ratings and that that's

2017
01:38:21,499 --> 01:38:27,709
sad but thank you that's exactly that's

2018
01:38:24,229 --> 01:38:30,679
true and I think everybody does that hi

2019
01:38:27,709 --> 01:38:33,648
this is Tom I just wondered whether the

2020
01:38:30,679 --> 01:38:36,769
system is intended for VOT or live

2021
01:38:33,649 --> 01:38:39,319
streaming or both thank you so the data

2022
01:38:36,769 --> 01:38:43,209
set that we use here are from the video

2023
01:38:39,319 --> 01:38:46,159
on demand the data set that I discussed

2024
01:38:43,209 --> 01:38:46,800
but the same systems are used like the

2025
01:38:46,159 --> 01:38:48,388
same seed

2026
01:38:46,800 --> 01:38:50,400
and the configurations that we found

2027
01:38:48,389 --> 01:38:54,949
they were applicable to the live

2028
01:38:50,400 --> 01:38:54,949
streaming events as well okay thank you

2029
01:38:57,260 --> 01:39:03,750
this is this is from the jabber room on

2030
01:39:00,139 --> 01:39:05,460
Simon Pietro mano asked if I be curious

2031
01:39:03,750 --> 01:39:06,630
to understand whether all of this has

2032
01:39:05,460 --> 01:39:09,300
been carried out with flash-based

2033
01:39:06,630 --> 01:39:13,290
clients in such a case is there any

2034
01:39:09,300 --> 01:39:30,570
updated study with MPEG - yes I think we

2035
01:39:13,290 --> 01:39:33,719
mentioned ok yeah ok

2036
01:39:30,570 --> 01:39:40,650
coming up do you want to try using your

2037
01:39:33,719 --> 01:39:50,780
own machine that's probably safer yeah

2038
01:39:40,650 --> 01:39:54,480
oh this is yours here we go all right

2039
01:39:50,780 --> 01:39:56,880
change of topic but not really change of

2040
01:39:54,480 --> 01:40:02,400
area so you want that in there's your

2041
01:39:56,880 --> 01:40:09,800
clicker all these nice new Macs ok oh

2042
01:40:02,400 --> 01:40:15,410
there's no signal looking better yes ok

2043
01:40:09,800 --> 01:40:18,910
yeah okay so introduce yourself this is

2044
01:40:15,410 --> 01:40:18,910
our second day in our P speaker

2045
01:40:23,209 --> 01:40:31,130
hello hello everyone good cool okay so

2046
01:40:28,699 --> 01:40:33,169
good morning everyone my name is Vasco

2047
01:40:31,130 --> 01:40:36,380
I'm a third year PhD student at the

2048
01:40:33,170 --> 01:40:39,409
University of Michigan Ann Arbor this

2049
01:40:36,380 --> 01:40:44,749
work is originally appeared in ACM

2050
01:40:39,409 --> 01:40:46,909
sitcom 2017 last August so today I will

2051
01:40:44,749 --> 01:40:49,610
be presenting room a new solution to

2052
01:40:46,909 --> 01:40:51,860
optimize web performance this work is a

2053
01:40:49,610 --> 01:40:55,688
collaboration with Ravi Muhammad and my

2054
01:40:51,860 --> 01:40:59,268
advisor Harsha so let's get started so

2055
01:40:55,689 --> 01:41:00,619
as you have experience using a mobile

2056
01:40:59,269 --> 01:41:03,979
phone connected to a cellular network

2057
01:41:00,619 --> 01:41:06,679
it's very very common nowadays right we

2058
01:41:03,979 --> 01:41:11,300
have all used phones to surf the web all

2059
01:41:06,679 --> 01:41:13,849
the time now I study have shown that

2060
01:41:11,300 --> 01:41:15,829
this is in fact the case mobile web

2061
01:41:13,849 --> 01:41:19,099
usage has been increasing over the past

2062
01:41:15,829 --> 01:41:20,719
few years the year 2016 was the tipping

2063
01:41:19,099 --> 01:41:23,929
point where mobile web usage has

2064
01:41:20,719 --> 01:41:27,289
surpassed desktop devices usage to

2065
01:41:23,929 --> 01:41:31,760
browse the web but despite all of this

2066
01:41:27,289 --> 01:41:34,070
increase in mobile web usage as you may

2067
01:41:31,760 --> 01:41:37,209
experience yourself loading many of

2068
01:41:34,070 --> 01:41:39,679
these pages are actually pretty slow

2069
01:41:37,209 --> 01:41:42,170
Hino systems found that it takes almost

2070
01:41:39,679 --> 01:41:44,869
10 seconds to load the median mobile

2071
01:41:42,170 --> 01:41:47,150
retail site and on the other hand double

2072
01:41:44,869 --> 01:41:49,188
clicked founded it takes 14 seconds on

2073
01:41:47,150 --> 01:41:53,959
average to load a page over a 4G

2074
01:41:49,189 --> 01:41:57,409
connection so we also confirmed this

2075
01:41:53,959 --> 01:42:01,639
ourselves using a nexus 6 phone a

2076
01:41:57,409 --> 01:42:04,400
reasonable high performance phone at the

2077
01:42:01,639 --> 01:42:06,800
time connected to a good LTE network in

2078
01:42:04,400 --> 01:42:10,459
the Ann Arbor area to load the mobile

2079
01:42:06,800 --> 01:42:11,840
optimized popular pages so one thing to

2080
01:42:10,459 --> 01:42:14,630
note about the results that we found

2081
01:42:11,840 --> 01:42:17,659
here is that these are heavily optimized

2082
01:42:14,630 --> 01:42:21,949
popular pages so the numbers that we get

2083
01:42:17,659 --> 01:42:23,449
here is on the better side of things so

2084
01:42:21,949 --> 01:42:25,728
this is a bar chart representing the

2085
01:42:23,449 --> 01:42:28,489
page load times measured in seconds of

2086
01:42:25,729 --> 01:42:31,449
the Alexa top 100 sites overall and

2087
01:42:28,489 --> 01:42:34,489
Alexis how 15 years and 50 sports sites

2088
01:42:31,449 --> 01:42:36,780
the top of the bar chart is the median

2089
01:42:34,489 --> 01:42:40,980
page load time and the whiskers are 75

2090
01:42:36,780 --> 01:42:45,449
and a 25% house at the median page load

2091
01:42:40,980 --> 01:42:48,329
times for the lexer top hundred sites

2092
01:42:45,449 --> 01:42:51,598
overall it takes five seconds to load

2093
01:42:48,329 --> 01:42:53,190
the median page this is actually pretty

2094
01:42:51,599 --> 01:42:57,659
slow considering the fact that some

2095
01:42:53,190 --> 01:43:01,320
studies have shown that a five second

2096
01:42:57,659 --> 01:43:03,299
page load times has 25% bounce rate

2097
01:43:01,320 --> 01:43:06,360
which means that these pages are

2098
01:43:03,300 --> 01:43:07,770
actually losing some money right and on

2099
01:43:06,360 --> 01:43:10,530
the other hand if we take a look at the

2100
01:43:07,770 --> 01:43:14,010
alexa top 50 news and 50 sports sites

2101
01:43:10,530 --> 01:43:15,809
things are far worse the median page

2102
01:43:14,010 --> 01:43:18,389
load time in this case is actually 10

2103
01:43:15,809 --> 01:43:20,400
seconds and the reason why things are

2104
01:43:18,389 --> 01:43:21,929
much worse in this case is because news

2105
01:43:20,400 --> 01:43:25,969
and sports sites tend to be more complex

2106
01:43:21,929 --> 01:43:30,630
than the alexa top hundred sites overall

2107
01:43:25,969 --> 01:43:33,570
so in this talk I will be first digging

2108
01:43:30,630 --> 01:43:36,090
into why webpages are slow to gain some

2109
01:43:33,570 --> 01:43:39,750
intuition as to why that's the case and

2110
01:43:36,090 --> 01:43:42,750
then we will use those intuition to

2111
01:43:39,750 --> 01:43:44,400
improve web performance then I will use

2112
01:43:42,750 --> 01:43:47,400
the intuition with that we get from the

2113
01:43:44,400 --> 01:43:49,799
first phase to explore room our solution

2114
01:43:47,400 --> 01:43:51,570
to make web page a little faster and the

2115
01:43:49,800 --> 01:43:56,639
last part would be the implication of

2116
01:43:51,570 --> 01:44:01,739
our work room now let me take you to

2117
01:43:56,639 --> 01:44:05,039
into why web pages slow now let's take a

2118
01:44:01,739 --> 01:44:07,589
very simple example let's say we load

2119
01:44:05,039 --> 01:44:10,769
one to load a page from a calm and this

2120
01:44:07,590 --> 01:44:13,619
a calm contains only one image so what

2121
01:44:10,770 --> 01:44:16,110
would happen when this page gets loaded

2122
01:44:13,619 --> 01:44:19,289
is the client will send a get request to

2123
01:44:16,110 --> 01:44:22,079
a dot-com era comes inspect a response

2124
01:44:19,289 --> 01:44:26,190
client parse it discover the image and

2125
01:44:22,079 --> 01:44:29,280
then they fetch the image if we take a

2126
01:44:26,190 --> 01:44:32,610
look at the network utilization and also

2127
01:44:29,280 --> 01:44:35,759
the CPU utilization at the client as you

2128
01:44:32,610 --> 01:44:39,420
can see here the bars with the solid

2129
01:44:35,760 --> 01:44:42,270
colors are times when these resources

2130
01:44:39,420 --> 01:44:48,750
are being actively used as you can see

2131
01:44:42,270 --> 01:44:50,220
here there are no periods that the CPU

2132
01:44:48,750 --> 01:44:53,040
and the network is being

2133
01:44:50,220 --> 01:44:55,620
fully utilized and the crux of the

2134
01:44:53,040 --> 01:44:58,050
problem here is that the client has to

2135
01:44:55,620 --> 01:45:03,030
parse or execute a resource to discover

2136
01:44:58,050 --> 01:45:05,790
additional resource to fetch so in some

2137
01:45:03,030 --> 01:45:08,370
instances CPU ik will get blocked by the

2138
01:45:05,790 --> 01:45:11,310
network waiting for a resource to arrive

2139
01:45:08,370 --> 01:45:12,840
so that it can start parsing and on the

2140
01:45:11,310 --> 01:45:17,790
other hand sometimes the network will be

2141
01:45:12,840 --> 01:45:22,100
idle because it needs to fetch because

2142
01:45:17,790 --> 01:45:26,280
it's waiting for the CPU to process some

2143
01:45:22,100 --> 01:45:30,780
resource so the idea that we want to

2144
01:45:26,280 --> 01:45:34,110
make page load faster is by making

2145
01:45:30,780 --> 01:45:38,519
either the CPU or the network to become

2146
01:45:34,110 --> 01:45:41,670
fully utilized but before we jumping

2147
01:45:38,520 --> 01:45:44,190
into how we can do that we first have to

2148
01:45:41,670 --> 01:45:47,610
understand whether the CPU or the

2149
01:45:44,190 --> 01:45:49,919
network is the main bottleneck here so

2150
01:45:47,610 --> 01:45:52,799
what we did was we conduct an experiment

2151
01:45:49,920 --> 01:45:54,690
to find the page load times when either

2152
01:45:52,800 --> 01:45:57,660
the CPU or the network is a main

2153
01:45:54,690 --> 01:45:58,980
bottleneck in order to find the page

2154
01:45:57,660 --> 01:46:01,980
load time when the CPU is the main

2155
01:45:58,980 --> 01:46:04,589
bottleneck we use the phone connected to

2156
01:46:01,980 --> 01:46:07,740
a wired network so that we have a near

2157
01:46:04,590 --> 01:46:12,240
zero latency and also almost like an

2158
01:46:07,740 --> 01:46:15,120
infinite bandwidth and on the other hand

2159
01:46:12,240 --> 01:46:16,559
if we want to find the page load times

2160
01:46:15,120 --> 01:46:19,890
for when the network is the main

2161
01:46:16,560 --> 01:46:22,980
bottleneck we remove any processing from

2162
01:46:19,890 --> 01:46:25,740
the page load process as you can see

2163
01:46:22,980 --> 01:46:27,780
here from the results the page load

2164
01:46:25,740 --> 01:46:31,290
times when the CPU is the main

2165
01:46:27,780 --> 01:46:33,300
bottleneck is actually much higher than

2166
01:46:31,290 --> 01:46:35,970
the page load time with Network is the

2167
01:46:33,300 --> 01:46:37,770
main bottleneck so in this case the

2168
01:46:35,970 --> 01:46:40,110
medium page load time is 5 seconds in

2169
01:46:37,770 --> 01:46:46,050
the case where the CPU is the main the

2170
01:46:40,110 --> 01:46:49,139
main bottleneck so that experiment

2171
01:46:46,050 --> 01:46:51,980
implies that CPU is the main bottleneck

2172
01:46:49,140 --> 01:46:57,420
in most of the cases but is this

2173
01:46:51,980 --> 01:47:00,839
actually the case everywhere sure then

2174
01:46:57,420 --> 01:47:03,630
there may be cases where network can be

2175
01:47:00,840 --> 01:47:06,330
the main bottleneck for example

2176
01:47:03,630 --> 01:47:08,990
developing country where they have 3G

2177
01:47:06,330 --> 01:47:12,420
connection a much slower connection than

2178
01:47:08,990 --> 01:47:14,429
4G sure network can be the main

2179
01:47:12,420 --> 01:47:16,290
bottleneck in that case or on the other

2180
01:47:14,430 --> 01:47:20,040
end of the spectrum if you're using a

2181
01:47:16,290 --> 01:47:22,710
flagship phone maybe your phone is much

2182
01:47:20,040 --> 01:47:25,680
faster than a network so the network is

2183
01:47:22,710 --> 01:47:29,700
the main bottleneck but if you consider

2184
01:47:25,680 --> 01:47:32,510
it a technology trend network is getting

2185
01:47:29,700 --> 01:47:35,660
faster and faster every year right

2186
01:47:32,510 --> 01:47:39,720
network will have higher bandwidth and

2187
01:47:35,660 --> 01:47:42,840
also lower latency but on the other hand

2188
01:47:39,720 --> 01:47:44,610
CPU is only increasing in a number of

2189
01:47:42,840 --> 01:47:48,630
course the clock speed itself is not

2190
01:47:44,610 --> 01:47:52,080
increasing but how is this trend

2191
01:47:48,630 --> 01:47:55,260
affecting page load times so what we did

2192
01:47:52,080 --> 01:47:58,680
was we also perform the same experiment

2193
01:47:55,260 --> 01:48:01,800
but instead of using all horse in the

2194
01:47:58,680 --> 01:48:04,110
page load time when the that CPU is the

2195
01:48:01,800 --> 01:48:08,240
main bottleneck we disable one of the

2196
01:48:04,110 --> 01:48:11,490
horse to see what is the effect of this

2197
01:48:08,240 --> 01:48:13,620
and what we found was that by disabling

2198
01:48:11,490 --> 01:48:16,200
one of the horse the distribution of the

2199
01:48:13,620 --> 01:48:18,930
page load times went and CPU is the main

2200
01:48:16,200 --> 01:48:22,910
bottleneck it's very similar to when

2201
01:48:18,930 --> 01:48:25,080
using all the horse and this actually

2202
01:48:22,910 --> 01:48:27,870
stems from the fact that browser

2203
01:48:25,080 --> 01:48:30,090
processing is largely serial there's one

2204
01:48:27,870 --> 01:48:33,360
main process that keeps doing everything

2205
01:48:30,090 --> 01:48:37,830
there's not much leverage in multi-core

2206
01:48:33,360 --> 01:48:41,190
for multiple horse so the implication

2207
01:48:37,830 --> 01:48:46,920
here is that the CPU will become the

2208
01:48:41,190 --> 01:48:49,950
main bottleneck in the long run so just

2209
01:48:46,920 --> 01:48:54,090
to recap what we found in this first

2210
01:48:49,950 --> 01:48:57,690
section of the talk so the reason why

2211
01:48:54,090 --> 01:49:00,240
web pages are slow right now is browsers

2212
01:48:57,690 --> 01:49:02,849
needs to discover resources from parsing

2213
01:49:00,240 --> 01:49:07,679
and execution and we know that browsers

2214
01:49:02,850 --> 01:49:10,170
are largely serial in discovering these

2215
01:49:07,680 --> 01:49:15,750
resources and performing the page load

2216
01:49:10,170 --> 01:49:17,070
and with the CPU becoming the main

2217
01:49:15,750 --> 01:49:19,800
bottleneck in the future

2218
01:49:17,070 --> 01:49:21,659
this process of discovering resources

2219
01:49:19,800 --> 01:49:25,920
from parsing etiquette and execution

2220
01:49:21,659 --> 01:49:29,699
will not become any faster so we have to

2221
01:49:25,920 --> 01:49:33,989
somehow think rethink the way page logic

2222
01:49:29,699 --> 01:49:37,379
work so our main idea in our project is

2223
01:49:33,989 --> 01:49:40,230
to somehow have the server to become

2224
01:49:37,380 --> 01:49:43,079
more proactive during the page load we

2225
01:49:40,230 --> 01:49:45,750
want servers to aid clients in

2226
01:49:43,079 --> 01:49:52,190
discovering resources during the page

2227
01:49:45,750 --> 01:49:55,889
load and that's the main theme of room

2228
01:49:52,190 --> 01:49:57,809
so now that we know why page web pages

2229
01:49:55,889 --> 01:50:00,690
are slow and gain some intuition I'll

2230
01:49:57,810 --> 01:50:03,119
ask you how we can make web pages faster

2231
01:50:00,690 --> 01:50:05,190
let me walk you through room our

2232
01:50:03,119 --> 01:50:09,150
solution that uses that intuition to

2233
01:50:05,190 --> 01:50:11,940
make web facial faster this is a very

2234
01:50:09,150 --> 01:50:14,519
high level architecture of room so we

2235
01:50:11,940 --> 01:50:17,460
have a client a mobile client a web

2236
01:50:14,520 --> 01:50:20,159
browser unmodified and how we also have

2237
01:50:17,460 --> 01:50:23,849
these web servers like what we usually

2238
01:50:20,159 --> 01:50:26,360
have like right now the client can start

2239
01:50:23,849 --> 01:50:30,079
by sending a get request to phu kham

2240
01:50:26,360 --> 01:50:32,820
Fleur I come since babba hg responds

2241
01:50:30,079 --> 01:50:38,400
none of these are modified everything is

2242
01:50:32,820 --> 01:50:40,860
the same as the status quo right now but

2243
01:50:38,400 --> 01:50:46,530
instead of only sending back HTTP

2244
01:50:40,860 --> 01:50:49,920
response room also use HTTP to push to

2245
01:50:46,530 --> 01:50:53,219
push resources down to the client so

2246
01:50:49,920 --> 01:50:56,130
that client can receive many resources

2247
01:50:53,219 --> 01:50:58,139
before it needs to actually fetches

2248
01:50:56,130 --> 01:51:01,889
discovered them from parsing our

2249
01:50:58,139 --> 01:51:06,719
execution but push itself it's not

2250
01:51:01,889 --> 01:51:09,780
really enough because SGP push only

2251
01:51:06,719 --> 01:51:14,040
allows you to push down resources that

2252
01:51:09,780 --> 01:51:16,170
the origin owns right so but we know

2253
01:51:14,040 --> 01:51:18,810
that a lot of these pages contain third

2254
01:51:16,170 --> 01:51:22,199
party resources so we are missing out on

2255
01:51:18,810 --> 01:51:26,010
a lot of resources to make web page load

2256
01:51:22,199 --> 01:51:29,839
faster so what we also include in

2257
01:51:26,010 --> 01:51:31,760
addition to HTTP to push is also use

2258
01:51:29,840 --> 01:51:36,050
some kind of dependency hints resource

2259
01:51:31,760 --> 01:51:40,670
hints one way to do this resources is to

2260
01:51:36,050 --> 01:51:43,460
use link rel preload HTTP primitive

2261
01:51:40,670 --> 01:51:46,280
where the client received this link rel

2262
01:51:43,460 --> 01:51:50,450
preload it can start the fetch of that

2263
01:51:46,280 --> 01:51:53,389
resource as soon as possible now in

2264
01:51:50,450 --> 01:51:55,370
order for the servers to push or send

2265
01:51:53,390 --> 01:51:57,890
these hints back to the client the

2266
01:51:55,370 --> 01:52:00,710
server has to have some kind of module

2267
01:51:57,890 --> 01:52:02,600
to discover these resources right so we

2268
01:52:00,710 --> 01:52:04,640
have these dependency resolution module

2269
01:52:02,600 --> 01:52:06,620
running at the web servers so these

2270
01:52:04,640 --> 01:52:10,010
dependency resolution modules are just

2271
01:52:06,620 --> 01:52:12,710
simply trying to find resources that the

2272
01:52:10,010 --> 01:52:15,740
client will need during the page load

2273
01:52:12,710 --> 01:52:18,200
and at the find we have some kind of

2274
01:52:15,740 --> 01:52:20,230
scheduling mechanism so that the client

2275
01:52:18,200 --> 01:52:26,300
can use all these resources as

2276
01:52:20,230 --> 01:52:28,910
effectively as possible now that we know

2277
01:52:26,300 --> 01:52:31,250
an end to end work for a low of room in

2278
01:52:28,910 --> 01:52:33,950
order to make room or reality we have to

2279
01:52:31,250 --> 01:52:37,130
answer these two main questions so first

2280
01:52:33,950 --> 01:52:40,130
how web servers can discover

2281
01:52:37,130 --> 01:52:42,740
dependencies in the first place and on

2282
01:52:40,130 --> 01:52:45,770
the other hand how clients can schedule

2283
01:52:42,740 --> 01:52:48,769
these fetches of resources or use these

2284
01:52:45,770 --> 01:52:51,770
hints from the server effectively so

2285
01:52:48,770 --> 01:52:53,350
that it maximize the benefit that it

2286
01:52:51,770 --> 01:52:55,970
should receive

2287
01:52:53,350 --> 01:53:00,260
so let's first turn our attention to the

2288
01:52:55,970 --> 01:53:02,990
web server let's consider this strawman

2289
01:53:00,260 --> 01:53:05,540
approach in discovering resources for

2290
01:53:02,990 --> 01:53:09,260
the client so the client can send a get

2291
01:53:05,540 --> 01:53:11,750
request to the origin write this web

2292
01:53:09,260 --> 01:53:14,450
server phu kham can start a page load of

2293
01:53:11,750 --> 01:53:18,860
fuga calm itself at a route at the web

2294
01:53:14,450 --> 01:53:22,160
server now because food comes web server

2295
01:53:18,860 --> 01:53:25,519
is a server it has a much more powerful

2296
01:53:22,160 --> 01:53:27,860
CPU and also a highly connected network

2297
01:53:25,520 --> 01:53:29,710
so it can perform this page load much

2298
01:53:27,860 --> 01:53:33,410
much faster than the client

2299
01:53:29,710 --> 01:53:36,020
so what foo.com can do is it sends back

2300
01:53:33,410 --> 01:53:38,510
the response as well as push everything

2301
01:53:36,020 --> 01:53:41,030
and also give hints everything on

2302
01:53:38,510 --> 01:53:42,560
everything that it discover during this

2303
01:53:41,030 --> 01:53:46,460
page load

2304
01:53:42,560 --> 01:53:51,060
all this sounds pretty intuitive and

2305
01:53:46,460 --> 01:53:54,900
hopefully it works unfortunately it

2306
01:53:51,060 --> 01:53:55,880
doesn't so there are two drawbacks with

2307
01:53:54,900 --> 01:54:02,519
this approach

2308
01:53:55,880 --> 01:54:03,989
first as we all know webpages by nature

2309
01:54:02,520 --> 01:54:06,600
is very dynamic

2310
01:54:03,989 --> 01:54:08,400
there are a lot of resources that is

2311
01:54:06,600 --> 01:54:11,700
dynamically generated with some

2312
01:54:08,400 --> 01:54:13,679
randomized token in the URL and so on so

2313
01:54:11,700 --> 01:54:15,720
by using everything from a one

2314
01:54:13,680 --> 01:54:18,150
particular load and hint them to the

2315
01:54:15,720 --> 01:54:20,130
client or push them to the client it

2316
01:54:18,150 --> 01:54:22,910
means that we are pushing or hinting

2317
01:54:20,130 --> 01:54:26,310
something that the user will not use and

2318
01:54:22,910 --> 01:54:30,840
by that we are first going to waste

2319
01:54:26,310 --> 01:54:35,930
clients bandwidth next even worse is

2320
01:54:30,840 --> 01:54:39,090
that by having the client sending

2321
01:54:35,930 --> 01:54:41,340
fetching these resources we might be

2322
01:54:39,090 --> 01:54:46,100
delaying some important resources which

2323
01:54:41,340 --> 01:54:48,390
make the page load slower in some cases

2324
01:54:46,100 --> 01:54:50,700
now on the other hand as we all know

2325
01:54:48,390 --> 01:54:53,420
many of these pages contain many

2326
01:54:50,700 --> 01:54:56,489
personalized resources so in order for

2327
01:54:53,420 --> 01:54:59,760
food calm in this case to account

2328
01:54:56,489 --> 01:55:02,129
correctly account for personalization it

2329
01:54:59,760 --> 01:55:05,390
needs to get a hold of the clients

2330
01:55:02,130 --> 01:55:09,300
cookie their party cookies but we don't

2331
01:55:05,390 --> 01:55:11,760
food calm doesn't have that so food calm

2332
01:55:09,300 --> 01:55:16,830
will never be able to correctly account

2333
01:55:11,760 --> 01:55:20,760
for third party personalization so how

2334
01:55:16,830 --> 01:55:24,960
can we overcome these two drawbacks so

2335
01:55:20,760 --> 01:55:27,570
what we did was we use an intersection

2336
01:55:24,960 --> 01:55:31,800
of offline loads to overcome the flux in

2337
01:55:27,570 --> 01:55:34,410
URLs so at the web server we load a page

2338
01:55:31,800 --> 01:55:36,780
periodically and then take the

2339
01:55:34,410 --> 01:55:38,460
intersection of these loads so it means

2340
01:55:36,780 --> 01:55:42,090
that anything that is randomly generated

2341
01:55:38,460 --> 01:55:46,950
per load will be filter out by the in

2342
01:55:42,090 --> 01:55:49,739
because of the intersection but this is

2343
01:55:46,950 --> 01:55:51,929
not enough what we found was that by

2344
01:55:49,739 --> 01:55:56,190
only doing this intersection of offline

2345
01:55:51,930 --> 01:56:00,540
loads we are only able to discover 70%

2346
01:55:56,190 --> 01:56:03,540
of resources that can be discovered so

2347
01:56:00,540 --> 01:56:06,000
what we did was we augment online

2348
01:56:03,540 --> 01:56:08,490
parsing of the HTML on top of

2349
01:56:06,000 --> 01:56:11,640
intersection of offline loads and what

2350
01:56:08,490 --> 01:56:13,980
we found was that using these two

2351
01:56:11,640 --> 01:56:18,060
combined online and offline resource

2352
01:56:13,980 --> 01:56:23,339
discovery we are able to discover most

2353
01:56:18,060 --> 01:56:26,460
of the resources so now that we have a

2354
01:56:23,340 --> 01:56:30,390
way to discover it resources at the web

2355
01:56:26,460 --> 01:56:32,580
servers let's turn our attention to the

2356
01:56:30,390 --> 01:56:35,490
client and see how the client can

2357
01:56:32,580 --> 01:56:40,160
effectively use these resources from the

2358
01:56:35,490 --> 01:56:42,450
server so let me walk you through the

2359
01:56:40,160 --> 01:56:45,180
very high-level architecture of room

2360
01:56:42,450 --> 01:56:48,030
again so room sends a get requests to

2361
01:56:45,180 --> 01:56:51,090
the web server web server uses sends

2362
01:56:48,030 --> 01:56:55,530
back a response with the HP to push and

2363
01:56:51,090 --> 01:56:58,670
also dependency hints uses the

2364
01:56:55,530 --> 01:57:02,900
dependency resolution module to push and

2365
01:56:58,670 --> 01:57:07,050
to get resources to push and also hints

2366
01:57:02,900 --> 01:57:11,009
so one approach for this scheduling

2367
01:57:07,050 --> 01:57:13,290
would be half the web server just push

2368
01:57:11,010 --> 01:57:16,470
everything that it could from the

2369
01:57:13,290 --> 01:57:19,440
dependency resolution module and then

2370
01:57:16,470 --> 01:57:23,880
for hints just use all link preload

2371
01:57:19,440 --> 01:57:27,089
lingual Whelpley preload to hint all of

2372
01:57:23,880 --> 01:57:29,070
them so what essentially this do does is

2373
01:57:27,090 --> 01:57:31,230
the server will push all the bytes that

2374
01:57:29,070 --> 01:57:33,660
it couldn't students to the client and

2375
01:57:31,230 --> 01:57:35,280
the client will fetch all hints

2376
01:57:33,660 --> 01:57:39,540
immediately at the beginning of page

2377
01:57:35,280 --> 01:57:41,099
load this sounds great

2378
01:57:39,540 --> 01:57:43,500
as well because we are discovering

2379
01:57:41,100 --> 01:57:47,060
resources much earlier in the page load

2380
01:57:43,500 --> 01:57:48,990
and things should work well

2381
01:57:47,060 --> 01:57:52,320
unfortunately it doesn't work well

2382
01:57:48,990 --> 01:57:55,980
either and this is a pretty serious

2383
01:57:52,320 --> 01:57:57,960
problem because by pushing and fetching

2384
01:57:55,980 --> 01:58:01,049
everything in the first place at the

2385
01:57:57,960 --> 01:58:05,580
beginning of the page load this leads to

2386
01:58:01,050 --> 01:58:08,520
contention in bandwidth and when there's

2387
01:58:05,580 --> 01:58:09,570
a contention in bandwidth sometimes the

2388
01:58:08,520 --> 01:58:11,610
important reason

2389
01:58:09,570 --> 01:58:14,549
horses are actually being delayed for

2390
01:58:11,610 --> 01:58:19,290
example a blocking script or some CSS

2391
01:58:14,550 --> 01:58:21,210
will get delayed and by and because of

2392
01:58:19,290 --> 01:58:23,340
those resources getting delayed it has a

2393
01:58:21,210 --> 01:58:25,770
cascading effect throughout the page

2394
01:58:23,340 --> 01:58:28,560
load and it can end up hurting the page

2395
01:58:25,770 --> 01:58:30,480
load process so what we found in our

2396
01:58:28,560 --> 01:58:33,810
experiment was that by using this

2397
01:58:30,480 --> 01:58:38,218
approach we don't see any page load time

2398
01:58:33,810 --> 01:58:42,570
improvements and even worse sometimes we

2399
01:58:38,219 --> 01:58:44,579
see degradation in page load times so

2400
01:58:42,570 --> 01:58:47,489
what we did instead is we prioritize

2401
01:58:44,579 --> 01:58:49,530
pushes and fetches of resources that can

2402
01:58:47,489 --> 01:58:54,480
potentially have children for example

2403
01:58:49,530 --> 01:58:57,360
HTML CSS or JavaScript and one very

2404
01:58:54,480 --> 01:59:01,440
important detail here is that we have to

2405
01:58:57,360 --> 01:59:03,929
prop schedule them or hint them based on

2406
01:59:01,440 --> 01:59:07,320
the schedule that they will be processed

2407
01:59:03,929 --> 01:59:10,409
we don't want to fetch any resources out

2408
01:59:07,320 --> 01:59:12,780
of order so that because if we fetch

2409
01:59:10,409 --> 01:59:15,629
things out of order some resource that

2410
01:59:12,780 --> 01:59:16,199
gets processed earlier might stop

2411
01:59:15,630 --> 01:59:19,349
waiting

2412
01:59:16,199 --> 01:59:23,730
after some resources that gets processed

2413
01:59:19,349 --> 01:59:26,969
later so now let's take a look at how

2414
01:59:23,730 --> 01:59:29,699
Froome scheduler works in action so at

2415
01:59:26,969 --> 01:59:33,960
the beginning of the page scheduler

2416
01:59:29,699 --> 01:59:37,519
fetches all HTML Javascript CSS this can

2417
01:59:33,960 --> 01:59:42,540
both be in the form of HTTP to push or

2418
01:59:37,520 --> 01:59:46,020
link preload after of this fetches is

2419
01:59:42,540 --> 01:59:50,190
done it will start fetching other hinted

2420
01:59:46,020 --> 01:59:53,520
dependencies such as images fonts on in

2421
01:59:50,190 --> 01:59:56,040
other words resources that will not have

2422
01:59:53,520 --> 01:59:59,429
any children and that doesn't require

2423
01:59:56,040 --> 02:00:03,210
any processing while these two fetches

2424
01:59:59,429 --> 02:00:07,170
are going on we also allow the browser

2425
02:00:03,210 --> 02:00:10,170
to parse HTML CSS and also execute a

2426
02:00:07,170 --> 02:00:15,150
JavaScript if you discover any resources

2427
02:00:10,170 --> 02:00:20,570
during by processing these resources we

2428
02:00:15,150 --> 02:00:23,070
also allowed them to go out now this red

2429
02:00:20,570 --> 02:00:26,820
line in the timeline is

2430
02:00:23,070 --> 02:00:30,210
a very important time in the page load

2431
02:00:26,820 --> 02:00:32,940
process this red line is the time when

2432
02:00:30,210 --> 02:00:36,150
all the bytes that needs to be processed

2433
02:00:32,940 --> 02:00:38,759
at the client is actually local at the

2434
02:00:36,150 --> 02:00:42,750
client already so what this means is

2435
02:00:38,760 --> 02:00:46,100
that from that point on when the client

2436
02:00:42,750 --> 02:00:48,840
wants to process any resource it can

2437
02:00:46,100 --> 02:00:52,170
start processing that resource without

2438
02:00:48,840 --> 02:00:55,080
having to wait on the network and from

2439
02:00:52,170 --> 02:00:59,970
that point on this implies that the CPU

2440
02:00:55,080 --> 02:01:04,110
can be fully utilized so now that we

2441
02:00:59,970 --> 02:01:08,040
have the two components of room let me

2442
02:01:04,110 --> 02:01:10,200
sum up room and then we can see how well

2443
02:01:08,040 --> 02:01:13,500
room works compared to the current state

2444
02:01:10,200 --> 02:01:15,960
of the page load so room starts by

2445
02:01:13,500 --> 02:01:19,370
Senate get request to the origin origin

2446
02:01:15,960 --> 02:01:22,560
sense map there she P response pushes

2447
02:01:19,370 --> 02:01:26,190
important resources and also provide

2448
02:01:22,560 --> 02:01:28,800
hints of other resources vrooom uses

2449
02:01:26,190 --> 02:01:32,400
room has these dependency resolution

2450
02:01:28,800 --> 02:01:35,820
module and also we use combine offline

2451
02:01:32,400 --> 02:01:38,400
online resource discovery on the client

2452
02:01:35,820 --> 02:01:42,750
side we have the scheduler which we

2453
02:01:38,400 --> 02:01:47,040
schedule them by prioritizing pushes and

2454
02:01:42,750 --> 02:01:49,250
fetches of HTML CSS and JavaScript so

2455
02:01:47,040 --> 02:01:52,050
now that we have an end-to-end working

2456
02:01:49,250 --> 02:01:55,290
components of room let's see how well

2457
02:01:52,050 --> 02:01:58,470
room works so what we found was that

2458
02:01:55,290 --> 02:02:02,550
brooms dependency resolution is actually

2459
02:01:58,470 --> 02:02:05,430
very accurate and because of this room

2460
02:02:02,550 --> 02:02:09,600
was able to speed up page load in many

2461
02:02:05,430 --> 02:02:13,170
of the cases we have a hub of results in

2462
02:02:09,600 --> 02:02:16,050
our paper but on today I'll only be

2463
02:02:13,170 --> 02:02:18,150
talking about how well room works over

2464
02:02:16,050 --> 02:02:20,220
the stay is quote if you're interested

2465
02:02:18,150 --> 02:02:25,080
in other results please refer to the

2466
02:02:20,220 --> 02:02:28,140
paper before jumping into any numbers

2467
02:02:25,080 --> 02:02:30,570
let me first tell you how we evaluate

2468
02:02:28,140 --> 02:02:34,020
room so we used a nexus 6 phone

2469
02:02:30,570 --> 02:02:36,929
connected to a 40 LTE network to a web

2470
02:02:34,020 --> 02:02:39,090
record and replay environment so

2471
02:02:36,929 --> 02:02:40,800
the reason why we need a web recording

2472
02:02:39,090 --> 02:02:45,810
replay environment is because room

2473
02:02:40,800 --> 02:02:48,380
requires server-side changes so ideally

2474
02:02:45,810 --> 02:02:50,640
we want to use a live experiment but

2475
02:02:48,380 --> 02:02:54,650
unfortunately getting adoption of

2476
02:02:50,640 --> 02:02:54,650
artists would be very very challenging

2477
02:02:54,710 --> 02:03:00,210
now that we know how we evaluate room

2478
02:02:58,530 --> 02:03:03,540
let's take a look at the numbers

2479
02:03:00,210 --> 02:03:05,940
so using that evaluation setup we

2480
02:03:03,540 --> 02:03:08,730
evaluate room on the Alexa 250 news and

2481
02:03:05,940 --> 02:03:10,379
50 sports sites and this is the bar

2482
02:03:08,730 --> 02:03:14,790
chart representing the page load times

2483
02:03:10,380 --> 02:03:17,670
measured in seconds as well the top of

2484
02:03:14,790 --> 02:03:20,010
the bars are the medians and also the

2485
02:03:17,670 --> 02:03:24,630
whiskers our 75th and 25th percentile

2486
02:03:20,010 --> 02:03:29,400
page load times the status quo load is

2487
02:03:24,630 --> 02:03:33,989
for this set of pages is 10 seconds like

2488
02:03:29,400 --> 02:03:38,339
we saw earlier so when we enable step2

2489
02:03:33,989 --> 02:03:40,500
on all domains we saw that by only doing

2490
02:03:38,340 --> 02:03:45,179
that we are able to take the median page

2491
02:03:40,500 --> 02:03:48,690
load time down to 7.5 seconds but if we

2492
02:03:45,179 --> 02:03:50,730
enable room at all domains we are

2493
02:03:48,690 --> 02:03:53,730
actually getting doubled of that

2494
02:03:50,730 --> 02:03:55,830
improvement in page load times and right

2495
02:03:53,730 --> 02:03:58,320
now the median page load times is

2496
02:03:55,830 --> 02:04:01,890
actually 5 seconds down from 10 seconds

2497
02:03:58,320 --> 02:04:04,049
and this is in fact very very close to

2498
02:04:01,890 --> 02:04:06,900
the lower bound where we defined a lower

2499
02:04:04,050 --> 02:04:11,390
bound page load times as when the page

2500
02:04:06,900 --> 02:04:15,299
is either network bounded or CPU bounded

2501
02:04:11,390 --> 02:04:19,940
now as we all know on load event is not

2502
02:04:15,300 --> 02:04:23,130
the ideal metric to use to get user

2503
02:04:19,940 --> 02:04:28,290
experience right so we also evaluate

2504
02:04:23,130 --> 02:04:30,600
room on visual metric so if we evaluate

2505
02:04:28,290 --> 02:04:33,179
room on the above the fold time which is

2506
02:04:30,600 --> 02:04:35,489
the time where all the objects appear on

2507
02:04:33,179 --> 02:04:37,380
the screen and this is the bar chart

2508
02:04:35,489 --> 02:04:40,739
representing the above the fall time

2509
02:04:37,380 --> 02:04:43,890
measured in seconds so the status quo

2510
02:04:40,739 --> 02:04:47,339
load takes 12 seconds to load at the

2511
02:04:43,890 --> 02:04:49,860
median site and when we use vrooom

2512
02:04:47,340 --> 02:04:53,460
vrooom was able to improve

2513
02:04:49,860 --> 02:04:56,490
the page that above the full time from

2514
02:04:53,460 --> 02:04:58,560
12 seconds to 8 seconds so that's a 4

2515
02:04:56,490 --> 02:05:03,960
second improvement in above the fall

2516
02:04:58,560 --> 02:05:07,040
time so now one assumption that we made

2517
02:05:03,960 --> 02:05:12,030
in all of our evaluation so far is that

2518
02:05:07,040 --> 02:05:14,660
we assume that everyone adopts room but

2519
02:05:12,030 --> 02:05:20,009
as we all know adoption is challenging

2520
02:05:14,660 --> 02:05:23,090
so what we did as well is we evaluate

2521
02:05:20,010 --> 02:05:26,730
room when room is incrementally deployed

2522
02:05:23,090 --> 02:05:29,580
so in this example here room is enabled

2523
02:05:26,730 --> 02:05:33,269
at all the domains right so what we did

2524
02:05:29,580 --> 02:05:35,790
was we consider first party domains so

2525
02:05:33,270 --> 02:05:39,750
when I say first party domains let's say

2526
02:05:35,790 --> 02:05:41,040
we are espn.com espn.com also owns ESPN

2527
02:05:39,750 --> 02:05:44,070
cbn.com right

2528
02:05:41,040 --> 02:05:46,710
so we also consider ESPN cbn.com also

2529
02:05:44,070 --> 02:05:50,099
part of the first party domains because

2530
02:05:46,710 --> 02:05:53,910
we assume that if they are going to if

2531
02:05:50,100 --> 02:05:57,180
say ESPN going to deploy a room they

2532
02:05:53,910 --> 02:06:00,360
might as well deploy room everywhere on

2533
02:05:57,180 --> 02:06:02,400
their domains so what we found in this

2534
02:06:00,360 --> 02:06:07,710
setting is that most of the benefits

2535
02:06:02,400 --> 02:06:09,750
that we saw in the in the case where we

2536
02:06:07,710 --> 02:06:12,240
enabled room everywhere is actually

2537
02:06:09,750 --> 02:06:15,870
still achievable from only enabling room

2538
02:06:12,240 --> 02:06:19,370
at the first party domains and that

2539
02:06:15,870 --> 02:06:26,040
means that we actually don't need full

2540
02:06:19,370 --> 02:06:28,320
adoption to make web page load faster so

2541
02:06:26,040 --> 02:06:30,300
now that we know how room works and how

2542
02:06:28,320 --> 02:06:36,210
well it works let's turn our attention

2543
02:06:30,300 --> 02:06:39,360
to the implication of room so room

2544
02:06:36,210 --> 02:06:41,460
leverages HTTP to push and also link rel

2545
02:06:39,360 --> 02:06:46,380
preload to enable server-side aided

2546
02:06:41,460 --> 02:06:48,930
resource discovery right currently if we

2547
02:06:46,380 --> 02:06:51,570
website wants to use any of these

2548
02:06:48,930 --> 02:06:55,020
it needs the knowledge of the developer

2549
02:06:51,570 --> 02:06:58,559
to manually add mesh to push or link

2550
02:06:55,020 --> 02:07:01,050
preload into the responses but room

2551
02:06:58,560 --> 02:07:03,400
shows that there's actually a systematic

2552
02:07:01,050 --> 02:07:06,280
way and automated way that you can

2553
02:07:03,400 --> 02:07:10,809
actually include these pushes and hints

2554
02:07:06,280 --> 02:07:15,030
into the response but that actually

2555
02:07:10,810 --> 02:07:17,440
comes at a cost as you if you recall

2556
02:07:15,030 --> 02:07:20,019
room requires outline dependency

2557
02:07:17,440 --> 02:07:24,099
discovery to construct a stable set of

2558
02:07:20,020 --> 02:07:26,320
resources this actually consumes a lot

2559
02:07:24,100 --> 02:07:28,929
of CPU cycles and network at the

2560
02:07:26,320 --> 02:07:31,630
server's imagine if you have thousands

2561
02:07:28,929 --> 02:07:34,870
of pages running serving at your

2562
02:07:31,630 --> 02:07:40,060
webserver by doing periodic loads of

2563
02:07:34,870 --> 02:07:43,000
these pages will be a huge pain so what

2564
02:07:40,060 --> 02:07:46,630
we think that we could do is maybe the

2565
02:07:43,000 --> 02:07:48,340
client can help the server discovering

2566
02:07:46,630 --> 02:07:51,659
this offline dependency resolution

2567
02:07:48,340 --> 02:07:54,850
so maybe we can crowdsource all these

2568
02:07:51,659 --> 02:07:56,710
URLs during the page load that client

2569
02:07:54,850 --> 02:08:02,230
sees and then send it back to the

2570
02:07:56,710 --> 02:08:04,390
browser you may thinking we you may be

2571
02:08:02,230 --> 02:08:08,799
thinking right now that maybe this is

2572
02:08:04,390 --> 02:08:11,830
violating some privacy issues so let's

2573
02:08:08,800 --> 02:08:16,390
take an example so this is a dependency

2574
02:08:11,830 --> 02:08:19,900
tree of a website in a very naive

2575
02:08:16,390 --> 02:08:24,880
implementation you can send all these

2576
02:08:19,900 --> 02:08:27,219
resources as a list back to a.com but

2577
02:08:24,880 --> 02:08:29,820
this is obviously not good because let's

2578
02:08:27,219 --> 02:08:32,770
take a look at si.com slash a dot HTML

2579
02:08:29,820 --> 02:08:35,440
so that is an ad so anything below that

2580
02:08:32,770 --> 02:08:39,370
can be personalized targeted to the user

2581
02:08:35,440 --> 02:08:42,280
so sending all this to a.com means that

2582
02:08:39,370 --> 02:08:47,110
we are giving out privacy to of the user

2583
02:08:42,280 --> 02:08:48,969
so what we could do instead is sending

2584
02:08:47,110 --> 02:08:52,870
everything in this screen encapsulation

2585
02:08:48,969 --> 02:08:55,929
and this is in fact enough for a dot-com

2586
02:08:52,870 --> 02:09:00,699
to discover offline dependency

2587
02:08:55,929 --> 02:09:03,760
resolution because a.com if you recall

2588
02:09:00,699 --> 02:09:07,019
from the offline from the strawman

2589
02:09:03,760 --> 02:09:09,940
dependency resolution a.com cannot

2590
02:09:07,020 --> 02:09:12,190
discover personalized resources

2591
02:09:09,940 --> 02:09:13,809
correctly anyway so by sending anything

2592
02:09:12,190 --> 02:09:17,299
everything in this green end caps

2593
02:09:13,810 --> 02:09:22,530
encapsulation is actually in

2594
02:09:17,300 --> 02:09:24,719
and then anything below c-calm can

2595
02:09:22,530 --> 02:09:26,728
actually be sent to just c.com and this

2596
02:09:24,719 --> 02:09:30,119
is not also not violating privacy

2597
02:09:26,729 --> 02:09:32,879
because see deham is the one serving the

2598
02:09:30,119 --> 02:09:39,329
ad so sending you back to see comm would

2599
02:09:32,879 --> 02:09:42,300
be fine another very important lesson

2600
02:09:39,329 --> 02:09:44,969
that we found in Froome is that when

2601
02:09:42,300 --> 02:09:48,719
doing these pushes and fetches of

2602
02:09:44,969 --> 02:09:50,729
dependencies using link rel preload we

2603
02:09:48,719 --> 02:09:53,399
shouldn't be fetching out these

2604
02:09:50,729 --> 02:09:55,559
resources at the same time as we saw

2605
02:09:53,399 --> 02:09:57,359
that if we do this we don't see

2606
02:09:55,559 --> 02:10:00,419
improvement in patient iams and worse we

2607
02:09:57,359 --> 02:10:02,579
are seeing degradation right so just to

2608
02:10:00,419 --> 02:10:05,099
recap what we did in room was we group

2609
02:10:02,579 --> 02:10:07,709
dependencies in different varieties so

2610
02:10:05,099 --> 02:10:11,159
higher priorities are resources that

2611
02:10:07,709 --> 02:10:14,249
require processing and then we perform

2612
02:10:11,159 --> 02:10:18,209
fetches of these resources based on

2613
02:10:14,249 --> 02:10:20,818
their priorities so maybe one thing one

2614
02:10:18,209 --> 02:10:23,219
branch that we could do regarding these

2615
02:10:20,819 --> 02:10:26,989
person prioritization of preloads is

2616
02:10:23,219 --> 02:10:30,780
that include some kind of priority to

2617
02:10:26,989 --> 02:10:33,358
the link rel preload so that the browser

2618
02:10:30,780 --> 02:10:35,550
knows that oh this preload is actually

2619
02:10:33,359 --> 02:10:38,760
higher priority than some other reload

2620
02:10:35,550 --> 02:10:42,749
so that the browser can schedule the

2621
02:10:38,760 --> 02:10:49,129
load of these resources better in fact

2622
02:10:42,749 --> 02:10:49,129
this is an on a draft already in the w3c

2623
02:10:50,030 --> 02:10:59,550
community so I hope to be discussing

2624
02:10:54,149 --> 02:11:02,219
this more with them but just to recap I

2625
02:10:59,550 --> 02:11:07,379
think that having a priority would be a

2626
02:11:02,219 --> 02:11:10,050
great addition so to conclude my talk I

2627
02:11:07,379 --> 02:11:12,719
present at room an end-to-end solution

2628
02:11:10,050 --> 02:11:15,149
that fully utilizes that either the CPU

2629
02:11:12,719 --> 02:11:17,309
or the network room was able to do this

2630
02:11:15,149 --> 02:11:20,010
by decoupling dependency discovery from

2631
02:11:17,309 --> 02:11:22,739
parsing and execution by leveraging the

2632
02:11:20,010 --> 02:11:25,189
server to aiding dependency discovery at

2633
02:11:22,739 --> 02:11:25,188
the client

2634
02:11:25,199 --> 02:11:29,910
because of this room was able to

2635
02:11:27,600 --> 02:11:34,440
decrease the median page load times by

2636
02:11:29,910 --> 02:11:36,030
five seconds for the popular pages and

2637
02:11:34,440 --> 02:11:38,120
with that I'm happy to answer any

2638
02:11:36,030 --> 02:11:38,120
questions

2639
02:11:44,719 --> 02:11:49,110
Alex may offer thanks for interesting

2640
02:11:47,190 --> 02:11:51,210
presentations really really nice to see

2641
02:11:49,110 --> 02:11:53,519
that someone actually tries that out in

2642
02:11:51,210 --> 02:11:56,750
practice rather than just looking at the

2643
02:11:53,520 --> 02:11:59,340
standardization of it I have a question

2644
02:11:56,750 --> 02:12:02,460
do we employ any mechanism that you

2645
02:11:59,340 --> 02:12:06,570
avoid pushing the same resource twice to

2646
02:12:02,460 --> 02:12:09,120
the same client I'm not talking about

2647
02:12:06,570 --> 02:12:10,259
link reload preload because the client

2648
02:12:09,120 --> 02:12:13,010
would decide whether he has that

2649
02:12:10,260 --> 02:12:16,020
resource already but if we like pushed

2650
02:12:13,010 --> 02:12:17,910
CSS on each and every page that sounds

2651
02:12:16,020 --> 02:12:23,040
wasteful or are there any technologies

2652
02:12:17,910 --> 02:12:25,620
employed you mean pushing having push

2653
02:12:23,040 --> 02:12:28,350
like size eight a CSS twice in the same

2654
02:12:25,620 --> 02:12:31,410
yes so that the user loads the home page

2655
02:12:28,350 --> 02:12:33,270
get the CSS pushed then he clicks on a

2656
02:12:31,410 --> 02:12:36,380
sub page he gets the CSS pushed again

2657
02:12:33,270 --> 02:12:39,690
aha are you doing anything against it or

2658
02:12:36,380 --> 02:12:41,699
in this work I am not doing anything to

2659
02:12:39,690 --> 02:12:43,860
prevent that because we have control of

2660
02:12:41,699 --> 02:12:47,309
all what we push so we ensure that we

2661
02:12:43,860 --> 02:12:50,759
are not pushing it twice does that

2662
02:12:47,310 --> 02:12:53,670
answer your question yeah okay can you

2663
02:12:50,760 --> 02:12:56,160
give us a little bit of an idea on these

2664
02:12:53,670 --> 02:12:56,550
sites which have been optimized for

2665
02:12:56,160 --> 02:13:00,090
mobile

2666
02:12:56,550 --> 02:13:03,360
how many URLs are in a page and how many

2667
02:13:00,090 --> 02:13:09,630
of those URLs actually changed the page

2668
02:13:03,360 --> 02:13:11,610
and are not just the spyware so I know

2669
02:13:09,630 --> 02:13:14,100
the figures for regular web pages and

2670
02:13:11,610 --> 02:13:16,530
it's tremendous numbers of URLs I just

2671
02:13:14,100 --> 02:13:19,320
don't know if people who are optimizing

2672
02:13:16,530 --> 02:13:22,949
for mobile are actually giving up some

2673
02:13:19,320 --> 02:13:24,660
of this overhead which was always

2674
02:13:22,949 --> 02:13:26,129
understood to be you know people

2675
02:13:24,660 --> 02:13:28,590
basically we're designing web pages

2676
02:13:26,130 --> 02:13:30,090
thinking that CPU and network is

2677
02:13:28,590 --> 02:13:35,550
unlimited and that's not the case for

2678
02:13:30,090 --> 02:13:38,760
mobile right so your question is for

2679
02:13:35,550 --> 02:13:41,190
these set of sites I am looking at

2680
02:13:38,760 --> 02:13:43,050
what are the like say the number of

2681
02:13:41,190 --> 02:13:45,929
resources on top Asian so we're talking

2682
02:13:43,050 --> 02:13:48,600
about hundreds of URLs or dozens or just

2683
02:13:45,930 --> 02:13:52,290
yeah so what I found in the Indies set

2684
02:13:48,600 --> 02:13:54,210
of sites at least the number of URLs

2685
02:13:52,290 --> 02:13:58,590
that I found so these set of sites are

2686
02:13:54,210 --> 02:14:02,300
at least 50 for sure for news and sports

2687
02:13:58,590 --> 02:14:05,370
sites it's in the order of hundreds so

2688
02:14:02,300 --> 02:14:08,070
yes right which means that actually if

2689
02:14:05,370 --> 02:14:10,349
the people serving these sites really

2690
02:14:08,070 --> 02:14:12,000
thought of their user and what the

2691
02:14:10,350 --> 02:14:13,739
experience would be they could cut down

2692
02:14:12,000 --> 02:14:15,330
on this and maybe you wouldn't need your

2693
02:14:13,739 --> 02:14:18,480
solution as much I'm not saying you're

2694
02:14:15,330 --> 02:14:20,250
so she's not a great idea but if people

2695
02:14:18,480 --> 02:14:23,209
instead was trying to force down our

2696
02:14:20,250 --> 02:14:25,680
throats lots of advertising and spyware

2697
02:14:23,210 --> 02:14:27,150
actually thought of the customer and his

2698
02:14:25,680 --> 02:14:28,470
quality of experience they could solve

2699
02:14:27,150 --> 02:14:32,750
this problem without needing more

2700
02:14:28,470 --> 02:14:32,750
technology right yes I agree

2701
02:14:35,600 --> 02:14:41,880
so since how from hallway and thank you

2702
02:14:40,230 --> 02:14:44,429
for your talk and worry interesting work

2703
02:14:41,880 --> 02:14:46,340
and in your test set my question is in

2704
02:14:44,430 --> 02:14:49,560
your test set we have any theater

2705
02:14:46,340 --> 02:14:53,310
reflecting how many website use the

2706
02:14:49,560 --> 02:14:56,239
domain sharding technologies using what

2707
02:14:53,310 --> 02:14:59,460
sorry I can domain domain sharding

2708
02:14:56,239 --> 02:15:01,830
obviously yeah don't make sure okay so

2709
02:14:59,460 --> 02:15:05,610
number of sites that are using domain

2710
02:15:01,830 --> 02:15:09,900
sharding most of them are using domain

2711
02:15:05,610 --> 02:15:13,889
sharding at the time that we used that

2712
02:15:09,900 --> 02:15:17,099
we perform these experiments hopefully

2713
02:15:13,890 --> 02:15:20,430
that is less common if we moved to ash

2714
02:15:17,100 --> 02:15:23,250
v2 but when I was doing this project

2715
02:15:20,430 --> 02:15:27,030
like a year two ago I could see that

2716
02:15:23,250 --> 02:15:29,640
this is common okay because you're

2717
02:15:27,030 --> 02:15:32,700
inside is that the CPU and either the

2718
02:15:29,640 --> 02:15:35,400
CPU or natto is underutilized but using

2719
02:15:32,700 --> 02:15:38,250
domain sharding it's kind of a

2720
02:15:35,400 --> 02:15:41,250
paralyzing parallelism and you can make

2721
02:15:38,250 --> 02:15:43,830
better use of a CPU either CP or network

2722
02:15:41,250 --> 02:15:46,830
right so I think that's a separate issue

2723
02:15:43,830 --> 02:15:49,920
right how browsers are actually designed

2724
02:15:46,830 --> 02:15:52,050
right now is that there's one c1 main

2725
02:15:49,920 --> 02:15:56,700
process that is doing

2726
02:15:52,050 --> 02:15:58,620
these tasks sure you can have another

2727
02:15:56,700 --> 02:16:01,019
process that can do a preload scanning

2728
02:15:58,620 --> 02:16:02,640
but that's separate but the main thing

2729
02:16:01,020 --> 02:16:06,270
that is happening is one in one process

2730
02:16:02,640 --> 02:16:09,930
so by having that only one process you

2731
02:16:06,270 --> 02:16:12,300
are able to only execute or deus cooing

2732
02:16:09,930 --> 02:16:16,760
something waiting on the network on only

2733
02:16:12,300 --> 02:16:22,530
one process so sometimes they see

2734
02:16:16,760 --> 02:16:25,080
sometimes the browser will have to wait

2735
02:16:22,530 --> 02:16:26,550
for some processing to happen in order

2736
02:16:25,080 --> 02:16:29,430
to utilize the network

2737
02:16:26,550 --> 02:16:32,190
later in the page load anyway so domain

2738
02:16:29,430 --> 02:16:39,240
sharding will not help in that okay

2739
02:16:32,190 --> 02:16:40,970
thank you hi advice I'm participating or

2740
02:16:39,240 --> 02:16:46,100
leading like participating in the

2741
02:16:40,969 --> 02:16:49,019
priority hence work that you mentioned I

2742
02:16:46,100 --> 02:16:53,460
think it would be extremely interesting

2743
02:16:49,020 --> 02:16:56,250
to integrate the concept of the

2744
02:16:53,459 --> 02:17:00,000
JavaScript scheduler into the browser's

2745
02:16:56,250 --> 02:17:02,840
resource scheduling process and in that

2746
02:17:00,000 --> 02:17:05,850
contacts the red line you showed where

2747
02:17:02,840 --> 02:17:09,719
you know it separated the critical

2748
02:17:05,850 --> 02:17:11,160
resources from the non-critical ones do

2749
02:17:09,719 --> 02:17:14,000
you think there's a way from the

2750
02:17:11,160 --> 02:17:16,530
browser's perspective to determine that

2751
02:17:14,000 --> 02:17:21,059
in a deterministic way that doesn't

2752
02:17:16,530 --> 02:17:23,660
introduce a gap so trigger those

2753
02:17:21,059 --> 02:17:27,119
non-critical loads in the ideal time

2754
02:17:23,660 --> 02:17:29,969
seems like a complex problem how did you

2755
02:17:27,120 --> 02:17:33,240
solve that I don't think I have a good

2756
02:17:29,969 --> 02:17:35,010
answer to that on top of my head and the

2757
02:17:33,240 --> 02:17:37,800
reason is because like you said it's

2758
02:17:35,010 --> 02:17:40,559
very tricky because even though we say

2759
02:17:37,800 --> 02:17:43,019
that rooms resource discovery is very

2760
02:17:40,559 --> 02:17:46,230
accurate we are not claiming that we can

2761
02:17:43,020 --> 02:17:48,840
detect all resources many of resources

2762
02:17:46,230 --> 02:17:53,000
that say a Java Script that has some

2763
02:17:48,840 --> 02:17:58,590
kind of randomized token we still can't

2764
02:17:53,000 --> 02:18:00,240
discover those so the CP so from a

2765
02:17:58,590 --> 02:18:02,490
browser's perspective I think it's gonna

2766
02:18:00,240 --> 02:18:05,129
be really tricky to say that oh these

2767
02:18:02,490 --> 02:18:09,718
are all the resources that it will need

2768
02:18:05,129 --> 02:18:12,320
to process and then it yeah I I'm sure

2769
02:18:09,718 --> 02:18:14,938
we'll still need processing but just the

2770
02:18:12,320 --> 02:18:17,728
the part that I'm interested in is in

2771
02:18:14,939 --> 02:18:19,290
determining in real time determining the

2772
02:18:17,728 --> 02:18:22,679
redline determining the fact that

2773
02:18:19,290 --> 02:18:24,269
everything critical or most critical

2774
02:18:22,679 --> 02:18:25,860
things finished loading and we can start

2775
02:18:24,269 --> 02:18:28,550
loading the non-critical ones like

2776
02:18:25,860 --> 02:18:32,750
defining that red line would be

2777
02:18:28,549 --> 02:18:39,478
extremely interesting yeah I agree

2778
02:18:32,750 --> 02:18:41,040
yep thanks hi Alma Chadwick I had a

2779
02:18:39,478 --> 02:18:42,808
couple of thoughts one of which is did

2780
02:18:41,040 --> 02:18:44,880
you do any research into seeing how many

2781
02:18:42,808 --> 02:18:46,228
unnecessary resources actually were

2782
02:18:44,879 --> 02:18:47,609
downloaded that you had pushed something

2783
02:18:46,228 --> 02:18:49,500
in advance and then it turned out that

2784
02:18:47,610 --> 02:18:51,080
the browser didn't need it I mean at one

2785
02:18:49,500 --> 02:18:53,760
obvious example would be high DPI

2786
02:18:51,080 --> 02:18:57,110
graphics where you know the browser's

2787
02:18:53,760 --> 02:19:00,030
deciding which resolution to download

2788
02:18:57,110 --> 02:19:02,250
unfortunately I didn't do any study on

2789
02:19:00,030 --> 02:19:06,240
that like what are the resources that

2790
02:19:02,250 --> 02:19:08,580
are push and not being used so one thing

2791
02:19:06,240 --> 02:19:10,830
to note here is that or all of our

2792
02:19:08,580 --> 02:19:12,840
experiments start from the assumption

2793
02:19:10,830 --> 02:19:16,709
that none of these sites are doing

2794
02:19:12,840 --> 02:19:21,870
actually doing any push or anything like

2795
02:19:16,709 --> 02:19:25,859
that so what we did in our work was that

2796
02:19:21,870 --> 02:19:28,349
say if in a best scenario if we try to

2797
02:19:25,860 --> 02:19:30,870
push everything that we know off and

2798
02:19:28,349 --> 02:19:32,939
then we'll be used in the page load and

2799
02:19:30,870 --> 02:19:36,630
also hint everything without having

2800
02:19:32,939 --> 02:19:39,540
out--they the worry of and using what

2801
02:19:36,629 --> 02:19:42,119
will be the best case that we could get

2802
02:19:39,540 --> 02:19:43,620
I mean I guess another way to ask the

2803
02:19:42,120 --> 02:19:46,290
question is how many additional bytes

2804
02:19:43,620 --> 02:19:47,849
were downloaded using broom then were

2805
02:19:46,290 --> 02:19:51,360
them would have been downloaded if the

2806
02:19:47,849 --> 02:19:56,250
page had just been loaded normally there

2807
02:19:51,360 --> 02:19:57,540
shouldn't be more bytes right so sure

2808
02:19:56,250 --> 02:20:00,570
well there's certainly some more bytes

2809
02:19:57,540 --> 02:20:02,970
in the signaling so there will be more

2810
02:20:00,570 --> 02:20:07,020
bison like saying the hints and those

2811
02:20:02,970 --> 02:20:10,140
stuff so I don't know the exact answer

2812
02:20:07,020 --> 02:20:12,420
to that but I would think that it should

2813
02:20:10,140 --> 02:20:16,859
be relatively low compared to the whole

2814
02:20:12,420 --> 02:20:18,330
size of the HTML or the page and another

2815
02:20:16,860 --> 02:20:21,450
thing that just comes to mind is

2816
02:20:18,330 --> 02:20:23,010
this seems like a way that if we had a

2817
02:20:21,450 --> 02:20:24,360
better way to organize our HTML and

2818
02:20:23,010 --> 02:20:26,040
JavaScript in the first place so that

2819
02:20:24,360 --> 02:20:28,350
the browser could identify that critical

2820
02:20:26,040 --> 02:20:30,960
resources earlier in the parsing then

2821
02:20:28,350 --> 02:20:32,760
perhaps this server-side trickery

2822
02:20:30,960 --> 02:20:37,800
wouldn't be necessary but now I'm

2823
02:20:32,760 --> 02:20:39,900
tilting at windmills so thanks Matt

2824
02:20:37,800 --> 02:20:42,689
Mathis I sort of had a continuation of

2825
02:20:39,900 --> 02:20:44,580
that thought it feels like this is very

2826
02:20:42,690 --> 02:20:45,811
good work very cool stuff but it feels

2827
02:20:44,580 --> 02:20:48,420
like you're optimizing at the wrong

2828
02:20:45,811 --> 02:20:50,940
layer in the sense that the content

2829
02:20:48,420 --> 02:20:53,640
providers should be optimizing better

2830
02:20:50,940 --> 02:20:55,830
ahead of time and they're not for some

2831
02:20:53,640 --> 02:20:57,210
reason and I was wondering if you had

2832
02:20:55,830 --> 02:20:58,470
any speculation about some of the

2833
02:20:57,210 --> 02:21:01,740
incentives for it things like domain

2834
02:20:58,470 --> 02:21:04,080
sharding for instance fills me to me is

2835
02:21:01,740 --> 02:21:06,570
an example of a of a technology that

2836
02:21:04,080 --> 02:21:08,190
works the same way that excessive choice

2837
02:21:06,570 --> 02:21:09,960
in the grocery store works it has the

2838
02:21:08,190 --> 02:21:12,510
effect of crowding out competitors

2839
02:21:09,960 --> 02:21:15,330
because you can provide 14 different

2840
02:21:12,510 --> 02:21:19,380
flavors of chips to use for ten times as

2841
02:21:15,330 --> 02:21:22,530
much shelf space and what this means is

2842
02:21:19,380 --> 02:21:25,109
it underlying somehow underlying some of

2843
02:21:22,530 --> 02:21:28,470
the people have inappropriate assent

2844
02:21:25,110 --> 02:21:30,271
incentives and you're optimizing away

2845
02:21:28,470 --> 02:21:32,039
some of their incentives but the real

2846
02:21:30,271 --> 02:21:34,620
problem is they're optimizing against

2847
02:21:32,040 --> 02:21:37,080
you did you look at any of the sort of

2848
02:21:34,620 --> 02:21:41,250
the causes of why this stuff was done in

2849
02:21:37,080 --> 02:21:48,510
ways that it was you could fix it in the

2850
02:21:41,250 --> 02:21:56,820
post-processing so to speak so just to

2851
02:21:48,510 --> 02:22:01,080
rephrase your question so basically so

2852
02:21:56,820 --> 02:22:03,570
basically did I so what I'm optimizing

2853
02:22:01,080 --> 02:22:05,521
is actually admin maybe we should be

2854
02:22:03,570 --> 02:22:09,990
optimizing at a different layer then

2855
02:22:05,521 --> 02:22:11,970
then it feels like you're optimizing

2856
02:22:09,990 --> 02:22:19,949
something that somebody else optimized

2857
02:22:11,970 --> 02:22:24,630
towards a different goal I see yeah I

2858
02:22:19,950 --> 02:22:26,311
guess maybe did when someone tries to

2859
02:22:24,630 --> 02:22:27,811
optimize something they have to keep in

2860
02:22:26,311 --> 02:22:31,289
mind that they might be hurting someone

2861
02:22:27,811 --> 02:22:31,800
else's performance and so we should be

2862
02:22:31,290 --> 02:22:35,010
more

2863
02:22:31,800 --> 02:22:38,960
inclusive in between the two I think

2864
02:22:35,010 --> 02:22:38,960
they were the ones being unincluded

2865
02:22:49,069 --> 02:22:57,420
why do you choose Nexus 6 why not some

2866
02:22:52,979 --> 02:23:01,710
newer phones so at the time it was a

2867
02:22:57,420 --> 02:23:04,939
year and a half ago or two years that

2868
02:23:01,710 --> 02:23:04,938
was the best phone that we could get

2869
02:23:04,979 --> 02:23:11,269
so you started experimenting really yeah

2870
02:23:07,470 --> 02:23:11,269
a while back okay thank you

2871
02:23:13,260 --> 02:23:22,260
[Applause]

2872
02:23:19,620 --> 02:23:23,640
I left a slot in case anyone had any

2873
02:23:22,260 --> 02:23:25,710
questions or willing to make any

2874
02:23:23,640 --> 02:23:29,130
observations but we could also wrap up

2875
02:23:25,710 --> 02:23:34,039
early we're gonna give certificates up

2876
02:23:29,130 --> 02:23:38,429
to motion and and basketball now in

2877
02:23:34,040 --> 02:23:40,200
honoring their their prizes and there's

2878
02:23:38,430 --> 02:23:44,280
no reason why everyone has to watch that

2879
02:23:40,200 --> 02:23:45,840
but but I I'm very grateful to you two

2880
02:23:44,280 --> 02:23:48,290
for giving these talks I think they were

2881
02:23:45,840 --> 02:23:52,859
really great and really thorough and

2882
02:23:48,290 --> 02:23:55,580
inspiring so thank you and thank you

2883
02:23:52,859 --> 02:23:58,920
oh I are TF open okay we have a

2884
02:23:55,580 --> 02:24:01,080
observation from Dave plonker oh I'm hi

2885
02:23:58,920 --> 02:24:03,030
Allison I wondered if we might spend a

2886
02:24:01,080 --> 02:24:04,950
few minutes talking about or catching

2887
02:24:03,030 --> 02:24:07,500
the I heard you have community up on

2888
02:24:04,950 --> 02:24:11,939
what's going on or how AR NW was formed

2889
02:24:07,500 --> 02:24:13,800
the the research workshop first I want

2890
02:24:11,939 --> 02:24:15,300
to say thank you and to the iStock

2891
02:24:13,800 --> 02:24:16,590
people and they see and people to put

2892
02:24:15,300 --> 02:24:17,580
putting that together the last time I

2893
02:24:16,590 --> 02:24:19,410
looked at it we know we didn't have a

2894
02:24:17,580 --> 02:24:20,819
committee there was no call and all that

2895
02:24:19,410 --> 02:24:22,560
stuff so a bunch of people did a bunch

2896
02:24:20,819 --> 02:24:25,350
of great stuff to get that in order and

2897
02:24:22,560 --> 02:24:26,789
um in I guess in the spirit of sort of

2898
02:24:25,350 --> 02:24:28,350
transparency I was wondering if you

2899
02:24:26,790 --> 02:24:30,420
could tell us or one of them could tell

2900
02:24:28,350 --> 02:24:33,420
us how the committee was selected what

2901
02:24:30,420 --> 02:24:36,270
was like the reach and diversity goal

2902
02:24:33,420 --> 02:24:37,500
and did you meet it I see there's an

2903
02:24:36,270 --> 02:24:40,109
invited talk that's one of the people

2904
02:24:37,500 --> 02:24:42,370
that's um that's on the program

2905
02:24:40,109 --> 02:24:45,070
committee that that's an unusual thing

2906
02:24:42,370 --> 02:24:47,680
but could you speak to that or who's

2907
02:24:45,070 --> 02:24:50,920
responsible forward so either I think

2908
02:24:47,680 --> 02:24:55,570
neither of the people the program chairs

2909
02:24:50,920 --> 02:25:01,780
are here so it's really a better

2910
02:24:55,570 --> 02:25:05,020
question for them but the and in fact I

2911
02:25:01,780 --> 02:25:06,370
so the invited talk question I think is

2912
02:25:05,021 --> 02:25:10,720
an interesting one because there's quite

2913
02:25:06,370 --> 02:25:12,370
a bit of variation between committees

2914
02:25:10,720 --> 02:25:16,300
and workshops as to whether that's a

2915
02:25:12,370 --> 02:25:17,950
reasonable thing to do or not and it's

2916
02:25:16,300 --> 02:25:20,170
of the conflict of interest whether it's

2917
02:25:17,950 --> 02:25:23,771
okay for people who are on the committee

2918
02:25:20,170 --> 02:25:26,260
to also be speakers I think the reason

2919
02:25:23,771 --> 02:25:30,790
they see that the invited talks so early

2920
02:25:26,260 --> 02:25:32,980
was to try to give a strong a strong

2921
02:25:30,790 --> 02:25:35,320
representation of some of the topics and

2922
02:25:32,980 --> 02:25:37,510
range with respect to the program

2923
02:25:35,320 --> 02:25:39,250
committee I think it's possible that

2924
02:25:37,510 --> 02:25:41,590
that committee could could grow some

2925
02:25:39,250 --> 02:25:48,690
more so if we if you were to raise a

2926
02:25:41,590 --> 02:25:52,450
question about its composition to to

2927
02:25:48,690 --> 02:25:54,370
Sharon and Dave it would be timely okay

2928
02:25:52,450 --> 02:25:56,140
I mean the overarching issue is I love

2929
02:25:54,370 --> 02:25:57,880
the way that an R W is different from

2930
02:25:56,140 --> 02:25:59,800
the from the academic conferences and I

2931
02:25:57,880 --> 02:26:02,589
love the idea of running it during IETF

2932
02:25:59,800 --> 02:26:04,480
because we're already multitrack yeah

2933
02:26:02,590 --> 02:26:06,311
IETF so that's gonna be a huge

2934
02:26:04,480 --> 02:26:07,960
improvement and the competing idea that

2935
02:26:06,311 --> 02:26:10,119
was floated last year was having an hour

2936
02:26:07,960 --> 02:26:11,619
W being a continuing workshop where

2937
02:26:10,120 --> 02:26:13,450
people can keep like solving the other

2938
02:26:11,620 --> 02:26:15,280
problem at academia that you keep it's

2939
02:26:13,450 --> 02:26:16,630
hurry up and then wait like you hurry up

2940
02:26:15,280 --> 02:26:19,240
to submit your thing you wait half a

2941
02:26:16,630 --> 02:26:21,699
year so I loved us having a different

2942
02:26:19,240 --> 02:26:24,521
venue like this but a couple of the

2943
02:26:21,700 --> 02:26:26,140
things just looking to improve is we're

2944
02:26:24,521 --> 02:26:27,490
still inviting now in a or W we're

2945
02:26:26,140 --> 02:26:30,039
inviting already published stuff there

2946
02:26:27,490 --> 02:26:33,280
we already do that for an RP so sure he

2947
02:26:30,040 --> 02:26:34,390
had a venue to do that and and I think

2948
02:26:33,280 --> 02:26:36,521
that we should like raise the bar for

2949
02:26:34,390 --> 02:26:39,730
ourselves to say how did we select the

2950
02:26:36,521 --> 02:26:41,590
committee and and things like you know

2951
02:26:39,730 --> 02:26:43,449
that kind of stuff but I'm really happy

2952
02:26:41,590 --> 02:26:45,280
that it's all in shape already and it's

2953
02:26:43,450 --> 02:26:47,530
looking really good the timeline to come

2954
02:26:45,280 --> 02:26:48,880
up to a workshop in July we've got a

2955
02:26:47,530 --> 02:26:50,290
month to submit and they've got two

2956
02:26:48,880 --> 02:26:51,009
months to form it so it looks good it

2957
02:26:50,290 --> 02:26:53,570
looks really good

2958
02:26:51,010 --> 02:26:55,040
mostly I'm happy with it if you care

2959
02:26:53,570 --> 02:26:56,601
I think there's also I mean there's a

2960
02:26:55,040 --> 02:26:58,730
hope that there will be a fair number of

2961
02:26:56,601 --> 02:27:01,280
these kind of lightning talks they're

2962
02:26:58,730 --> 02:27:03,891
short and I think it remains to be seen

2963
02:27:01,280 --> 02:27:06,110
and part of what everybody can do here

2964
02:27:03,891 --> 02:27:08,931
besides submitting yourself is to

2965
02:27:06,110 --> 02:27:11,301
encourage your researching friends to to

2966
02:27:08,931 --> 02:27:12,980
bring up papers I mean if everybody in

2967
02:27:11,301 --> 02:27:15,221
this room submits something and gets a

2968
02:27:12,980 --> 02:27:17,930
friend to submit what an amazing choice

2969
02:27:15,221 --> 02:27:20,570
but I have had in mind that perhaps the

2970
02:27:17,931 --> 02:27:22,670
committee should should expand with

2971
02:27:20,570 --> 02:27:26,289
respect to the kind of continuing versus

2972
02:27:22,670 --> 02:27:32,780
one-off once-a-year thing we're thinking

2973
02:27:26,290 --> 02:27:35,690
slowly about the idea of a of a about a

2974
02:27:32,780 --> 02:27:37,070
bunch of those types of ideas and I'd

2975
02:27:35,690 --> 02:27:38,840
like I'll get you involved in that

2976
02:27:37,070 --> 02:27:41,000
conversation but also people in this

2977
02:27:38,840 --> 02:27:44,030
room we're looking to try to increase

2978
02:27:41,000 --> 02:27:45,620
the amount of applied Network research

2979
02:27:44,030 --> 02:27:47,931
that there is I mean like you've heard

2980
02:27:45,620 --> 02:27:53,210
too beautiful applied network research

2981
02:27:47,931 --> 02:27:56,540
topics today and and also Rods topic but

2982
02:27:53,210 --> 02:27:58,520
many times there's a very big gap

2983
02:27:56,540 --> 02:28:00,380
between academic research and what we

2984
02:27:58,521 --> 02:28:02,181
could then do something and build in in

2985
02:28:00,380 --> 02:28:04,820
the real world Internet and and see

2986
02:28:02,181 --> 02:28:06,771
deployed so we're looking to just

2987
02:28:04,820 --> 02:28:07,460
enhance those relationships in every way

2988
02:28:06,771 --> 02:28:09,530
we can

2989
02:28:07,460 --> 02:28:10,820
okay and that you actually hit on

2990
02:28:09,530 --> 02:28:12,590
exactly the last thing I wanted to say

2991
02:28:10,820 --> 02:28:14,420
was to remind people to solicit for it

2992
02:28:12,590 --> 02:28:16,070
one carrot you can use for people one

2993
02:28:14,420 --> 02:28:18,320
thing that's nicer about Ian or W that

2994
02:28:16,070 --> 02:28:20,029
say IMC is the stalks are recorded and

2995
02:28:18,320 --> 02:28:22,190
we're having building this huge library

2996
02:28:20,030 --> 02:28:23,990
of awesome presentations by those people

2997
02:28:22,190 --> 02:28:26,870
so some of the students that I've

2998
02:28:23,990 --> 02:28:28,761
solicited to come to IETF form a party

2999
02:28:26,870 --> 02:28:30,290
or something to say they ended up having

3000
02:28:28,761 --> 02:28:31,700
this talk that's on their you know web

3001
02:28:30,290 --> 02:28:33,950
page afterwards where if somebody can

3002
02:28:31,700 --> 02:28:35,391
see them in action right and stuff I'm

3003
02:28:33,950 --> 02:28:38,240
also asking IMC to come up and talk

3004
02:28:35,391 --> 02:28:40,011
raise the bar for themselves to start

3005
02:28:38,240 --> 02:28:42,110
doing that you should actually mention

3006
02:28:40,011 --> 02:28:44,950
that you are one of the two chairs of

3007
02:28:42,110 --> 02:28:48,250
the map RG research group the

3008
02:28:44,950 --> 02:28:52,490
measurement and analysis for protocols

3009
02:28:48,250 --> 02:28:54,490
so this is a very parallel case to the

3010
02:28:52,490 --> 02:28:57,530
yet the rest of it's sort of like a

3011
02:28:54,490 --> 02:28:59,480
recursive the IRT F contains another IRT

3012
02:28:57,530 --> 02:29:00,740
this is the measurement subset of what

3013
02:28:59,480 --> 02:29:04,311
yeah it could be adding in our double

3014
02:29:00,740 --> 02:29:06,320
yeah and then oh the last thing is the

3015
02:29:04,311 --> 02:29:06,860
program committee it looks really good

3016
02:29:06,320 --> 02:29:08,300
it's like a

3017
02:29:06,860 --> 02:29:09,860
there's a third women on it maybe

3018
02:29:08,300 --> 02:29:12,320
there's it looks like about a third of

3019
02:29:09,860 --> 02:29:15,021
the people are ITF participating

3020
02:29:12,320 --> 02:29:16,100
academics already so it's looks like

3021
02:29:15,021 --> 02:29:17,450
somebody did a really good job but we

3022
02:29:16,100 --> 02:29:20,720
should tell people how we're doing it

3023
02:29:17,450 --> 02:29:22,580
okay sounds good okay anything else

3024
02:29:20,720 --> 02:29:27,050
anyone wants to bring up before we send

3025
02:29:22,580 --> 02:29:30,021
you off to lunch okay all right well

3026
02:29:27,050 --> 02:29:30,980
thank you for coming see you see you on

3027
02:29:30,021 --> 02:29:32,540
our mailing list

3028
02:29:30,980 --> 02:29:34,189
see you tonight I'm gonna give another

3029
02:29:32,540 --> 02:29:36,620
little bit of an overview tonight

3030
02:29:34,190 --> 02:29:40,400
hopefully more successfully in the

3031
02:29:36,620 --> 02:29:42,350
analog Department oh and there should be

3032
02:29:40,400 --> 02:29:43,820
another blue sheet if someone can

3033
02:29:42,350 --> 02:29:46,180
provide the other blue sheet that would

3034
02:29:43,820 --> 02:29:46,180
be helpful

