1
00:00:22,120 --> 00:00:25,120
sir

2
00:01:17,380 --> 00:01:20,479
[Music]

3
00:02:17,130 --> 00:02:24,790
can somebody please close the door at

4
00:02:19,510 --> 00:02:27,549
the back so let's start welcome you have

5
00:02:24,790 --> 00:02:29,410
all reached the lsv our working group

6
00:02:27,550 --> 00:02:32,680
session so for the next 90 minutes we're

7
00:02:29,410 --> 00:02:34,540
going to be discussing that topic so

8
00:02:32,680 --> 00:02:35,890
let's first start off with the at the

9
00:02:34,540 --> 00:02:39,700
beginnings here so a few things actually

10
00:02:35,890 --> 00:02:41,260
happened now before going into the

11
00:02:39,700 --> 00:02:43,179
content let's first do some

12
00:02:41,260 --> 00:02:46,030
administrator so we do have a jabber

13
00:02:43,180 --> 00:02:47,920
scrap we also have immunitech it parish

14
00:02:46,030 --> 00:02:50,560
thank you for that so the minutes we'll

15
00:02:47,920 --> 00:02:52,690
be taking in either part it'll note or

16
00:02:50,560 --> 00:02:54,069
whatever the thing is called if you

17
00:02:52,690 --> 00:02:55,959
would like to contribute which would be

18
00:02:54,069 --> 00:02:57,280
very appreciate and please you know add

19
00:02:55,959 --> 00:02:58,989
your comments particularly with names

20
00:02:57,280 --> 00:03:02,560
and so on words just to make sure

21
00:02:58,989 --> 00:03:04,750
everything is done correctly so you have

22
00:03:02,560 --> 00:03:06,610
seen a note well already a few times if

23
00:03:04,750 --> 00:03:08,830
going from the assumption that you

24
00:03:06,610 --> 00:03:11,709
attended at least one session already if

25
00:03:08,830 --> 00:03:13,720
not retesting be aware of that anything

26
00:03:11,709 --> 00:03:17,040
you say and do actually is part of the

27
00:03:13,720 --> 00:03:21,400
ITF you know community here

28
00:03:17,040 --> 00:03:23,798
so before we step into the today's

29
00:03:21,400 --> 00:03:26,799
agenda so this is what we have set up

30
00:03:23,799 --> 00:03:28,420
here so first we're gonna have like of

31
00:03:26,799 --> 00:03:30,250
you know like a few short notes on what

32
00:03:28,420 --> 00:03:32,260
happened in the last three months that's

33
00:03:30,250 --> 00:03:35,620
going to be followed up with an update

34
00:03:32,260 --> 00:03:37,840
of you know with the latest document of

35
00:03:35,620 --> 00:03:40,030
the bgp SPF you know in Alice we are

36
00:03:37,840 --> 00:03:42,459
then we're gonna have like three

37
00:03:40,030 --> 00:03:45,000
different updates to do with late

38
00:03:42,459 --> 00:03:48,130
release you know discovery protocol

39
00:03:45,000 --> 00:03:52,600
followed with the updates from I Triple

40
00:03:48,130 --> 00:03:55,180
E on the tlvs for LS VR and also with

41
00:03:52,600 --> 00:03:58,150
LTP v2 in the progress onward actually

42
00:03:55,180 --> 00:04:00,010
exactly yes so that is your gender for

43
00:03:58,150 --> 00:04:02,560
today any questions anything that we

44
00:04:00,010 --> 00:04:08,730
need to you know swap around or discuss

45
00:04:02,560 --> 00:04:12,609
additionally okay now let's go onwards

46
00:04:08,730 --> 00:04:14,858
so if you look into where we are you

47
00:04:12,609 --> 00:04:16,359
know at this point in time and you know

48
00:04:14,859 --> 00:04:18,100
from where we start I think we our

49
00:04:16,358 --> 00:04:20,469
deliverables based upon the shorter are

50
00:04:18,100 --> 00:04:21,280
like in a reasonably good progress we

51
00:04:20,470 --> 00:04:24,580
have

52
00:04:21,279 --> 00:04:28,479
a demo already available for the a lot

53
00:04:24,580 --> 00:04:31,120
of e we also have done a working group

54
00:04:28,480 --> 00:04:33,460
last call on the bgp SPF document that

55
00:04:31,120 --> 00:04:35,860
went to cast foley this document has

56
00:04:33,460 --> 00:04:38,609
very recently been updated so i was

57
00:04:35,860 --> 00:04:43,680
waiting for that for creating the

58
00:04:38,610 --> 00:04:43,680
shepherd right up and pushing it onwards

59
00:04:44,160 --> 00:04:48,490
the document already actually also had

60
00:04:46,690 --> 00:04:50,080
some directorate reviews there was a

61
00:04:48,490 --> 00:04:52,810
routing directorate reviewed which came

62
00:04:50,080 --> 00:04:55,409
back with some issues and those have

63
00:04:52,810 --> 00:04:57,790
been addressed in the latest version so

64
00:04:55,410 --> 00:04:59,740
maybe you can actually say a few more

65
00:04:57,790 --> 00:05:01,330
words later on in his update on where we

66
00:04:59,740 --> 00:05:03,220
are with you know with the comments from

67
00:05:01,330 --> 00:05:05,710
the routing Directorate now we addressed

68
00:05:03,220 --> 00:05:09,040
those and the obviou actually also gave

69
00:05:05,710 --> 00:05:10,510
us like I get ready to go pass here so

70
00:05:09,040 --> 00:05:12,160
everything is in good shape for the you

71
00:05:10,510 --> 00:05:14,860
know at this point in time for the for

72
00:05:12,160 --> 00:05:18,400
the Shepherd right up then also in the

73
00:05:14,860 --> 00:05:21,070
last couple of weeks we act we had an

74
00:05:18,400 --> 00:05:23,169
update on the applicability draft so we

75
00:05:21,070 --> 00:05:25,890
will be doing a working group last call

76
00:05:23,169 --> 00:05:29,830
on that one very soon after the IETF

77
00:05:25,890 --> 00:05:31,810
this meeting here and then close that

78
00:05:29,830 --> 00:05:36,010
thing down also and push it together

79
00:05:31,810 --> 00:05:41,440
with the BGP SPF document for further

80
00:05:36,010 --> 00:05:44,349
processing now also what we have seen in

81
00:05:41,440 --> 00:05:49,570
the last you know couple of weeks is we

82
00:05:44,350 --> 00:05:54,550
have seen some increased progress with

83
00:05:49,570 --> 00:05:56,590
the l3 DL documents and beyond the base

84
00:05:54,550 --> 00:06:00,010
specification we actually are doing some

85
00:05:56,590 --> 00:06:02,260
further in a work to do with security

86
00:06:00,010 --> 00:06:04,330
signing and so onwards with some

87
00:06:02,260 --> 00:06:07,930
automation and configuration elements of

88
00:06:04,330 --> 00:06:09,669
it and also to do with you know for the

89
00:06:07,930 --> 00:06:12,940
technology itself to help out on

90
00:06:09,669 --> 00:06:17,310
services running on top of bgp SPF

91
00:06:12,940 --> 00:06:19,330
hasn't an underlay for example and

92
00:06:17,310 --> 00:06:23,200
initially when we started with this work

93
00:06:19,330 --> 00:06:25,390
attack so from the ldbl perspective it

94
00:06:23,200 --> 00:06:30,250
actually had some properties which went

95
00:06:25,390 --> 00:06:32,590
beyond the lldp v2 v1 technology which

96
00:06:30,250 --> 00:06:34,870
required us to work on something like

97
00:06:32,590 --> 00:06:36,520
that which you know included

98
00:06:34,870 --> 00:06:39,280
for example things like you know a big

99
00:06:36,520 --> 00:06:41,070
ramp you size a better handling of

100
00:06:39,280 --> 00:06:43,479
fragmentation re assemblies it

101
00:06:41,070 --> 00:06:45,639
implemented like a push model instead of

102
00:06:43,479 --> 00:06:50,320
like a political kind of update and it

103
00:06:45,639 --> 00:06:52,810
also had some improved rapid recovery

104
00:06:50,320 --> 00:06:54,790
technology involved there now that

105
00:06:52,810 --> 00:06:56,710
actually triggered of also some programs

106
00:06:54,790 --> 00:06:58,120
in the work on LTP v2 and take these

107
00:06:56,710 --> 00:06:59,948
particular elements you know into

108
00:06:58,120 --> 00:07:02,830
account for further progress also and

109
00:06:59,949 --> 00:07:04,300
work upon the l-ltp v2 technology itself

110
00:07:02,830 --> 00:07:06,340
for which you're going to be hearing

111
00:07:04,300 --> 00:07:10,870
like further updates from Paul in this

112
00:07:06,340 --> 00:07:11,200
session here so this way we are right

113
00:07:10,870 --> 00:07:13,419
now

114
00:07:11,200 --> 00:07:16,979
so any questions any anything else

115
00:07:13,419 --> 00:07:19,979
before we start with the first session

116
00:07:16,979 --> 00:07:19,979
okay

117
00:07:46,870 --> 00:07:54,050
good afternoon guys I'm gonna give a

118
00:07:50,000 --> 00:07:58,819
quick update on bgp SPF the draft

119
00:07:54,050 --> 00:08:00,229
version six was submitted right around

120
00:07:58,819 --> 00:08:02,449
the end of September first week of

121
00:08:00,229 --> 00:08:05,659
October working group last call has been

122
00:08:02,449 --> 00:08:07,960
successfully done we did get reviews we

123
00:08:05,660 --> 00:08:11,630
have incorporated that in the draft

124
00:08:07,960 --> 00:08:16,729
implementations are now available so as

125
00:08:11,630 --> 00:08:20,479
part of the last call at least the

126
00:08:16,729 --> 00:08:23,150
working group last call there were

127
00:08:20,479 --> 00:08:26,270
comments where folks came in and said

128
00:08:23,150 --> 00:08:29,659
hey would be nice to sort of provide a

129
00:08:26,270 --> 00:08:31,609
mechanism to mark the node and at least

130
00:08:29,659 --> 00:08:34,099
say if the nodes not capable of acting

131
00:08:31,610 --> 00:08:39,050
as a transit or cannot participate in

132
00:08:34,099 --> 00:08:42,260
SPF and we we have incorporated this

133
00:08:39,049 --> 00:08:44,208
mechanism through the Status TLV that

134
00:08:42,260 --> 00:08:48,290
was already present so we do now mark

135
00:08:44,208 --> 00:08:51,020
the node and that would allow the node

136
00:08:48,290 --> 00:08:54,279
to appropriately participate within the

137
00:08:51,020 --> 00:08:59,000
SPF itself there are we did also receive

138
00:08:54,279 --> 00:09:01,959
lots of needs and I think will take care

139
00:08:59,000 --> 00:09:06,740
of that in version 7 that is going to be

140
00:09:01,959 --> 00:09:08,719
post posted post IETF from an

141
00:09:06,740 --> 00:09:11,839
implementation update standpoint we now

142
00:09:08,720 --> 00:09:14,720
have at least one BGP implementation

143
00:09:11,839 --> 00:09:17,060
that is fully conformant we do have

144
00:09:14,720 --> 00:09:20,140
another open source implementation

145
00:09:17,060 --> 00:09:22,939
that's in works specifically on FRR and

146
00:09:20,140 --> 00:09:26,180
we have at least three operators who are

147
00:09:22,940 --> 00:09:31,279
looking to sort of start playing around

148
00:09:26,180 --> 00:09:33,819
with the code base in the lab from the

149
00:09:31,279 --> 00:09:37,450
update standpoint the yang model for

150
00:09:33,820 --> 00:09:40,279
this Safi is also defined fairly

151
00:09:37,450 --> 00:09:41,899
straightforward mechanism from the

152
00:09:40,279 --> 00:09:46,250
modeling standpoint we want to start

153
00:09:41,899 --> 00:09:48,980
working on this models draft we think we

154
00:09:46,250 --> 00:09:51,890
should have a common model for LS and

155
00:09:48,980 --> 00:09:55,070
SPF and we'll take that work pretty soon

156
00:09:51,890 --> 00:09:58,100
we'll publish the draft out do we wanna

157
00:09:55,070 --> 00:10:00,500
as part of this new effort we also want

158
00:09:58,100 --> 00:10:02,660
to write in protocol implementation

159
00:10:00,500 --> 00:10:06,710
draft and an experience strap that comes

160
00:10:02,660 --> 00:10:08,810
along with the implementation from an

161
00:10:06,710 --> 00:10:11,540
implementation perspective we have now

162
00:10:08,810 --> 00:10:14,479
an implementation from arcus done by

163
00:10:11,540 --> 00:10:17,900
Pushpa sheesh pretty much covers all the

164
00:10:14,480 --> 00:10:20,210
sections of the draft there was from an

165
00:10:17,900 --> 00:10:22,370
implementation standpoint and I think we

166
00:10:20,210 --> 00:10:24,560
discussed this at the last IETF to a

167
00:10:22,370 --> 00:10:27,620
challenge in generating a remote router

168
00:10:24,560 --> 00:10:29,780
ID because we do not have a hello

169
00:10:27,620 --> 00:10:33,230
mechanism that it's establishes the

170
00:10:29,780 --> 00:10:36,500
edges in seas and as part of that as

171
00:10:33,230 --> 00:10:40,070
part of this draft we have sort of

172
00:10:36,500 --> 00:10:43,790
punted that either using lldp or l3 DL

173
00:10:40,070 --> 00:10:45,290
and or else you can statically configure

174
00:10:43,790 --> 00:10:47,980
that and sort of build up the

175
00:10:45,290 --> 00:10:52,339
efficiencies so that took care of it

176
00:10:47,980 --> 00:10:53,900
again from an intro up standpoint when

177
00:10:52,340 --> 00:10:57,500
you receive the routes and when you

178
00:10:53,900 --> 00:10:59,510
install this routes into rib as the

179
00:10:57,500 --> 00:11:02,300
drafts suggest we do give this Safi a

180
00:10:59,510 --> 00:11:04,460
preference over ipv4 unicast and ipv6

181
00:11:02,300 --> 00:11:06,920
unicast and that's all the problem

182
00:11:04,460 --> 00:11:10,570
pretty much from competing Safi

183
00:11:06,920 --> 00:11:10,569
standpoint from an implementation

184
00:11:11,710 --> 00:11:18,290
testing point of view we have made sure

185
00:11:15,020 --> 00:11:21,110
we have enabled it with both ipv4 ipv6

186
00:11:18,290 --> 00:11:25,610
as well as SPF Safi and seems to be

187
00:11:21,110 --> 00:11:28,460
working just fine a little bit of a test

188
00:11:25,610 --> 00:11:31,190
details on the test setup that we have

189
00:11:28,460 --> 00:11:34,700
tried this Safi we've used standard

190
00:11:31,190 --> 00:11:37,370
Claus each point apology 10k a v4 and v6

191
00:11:34,700 --> 00:11:41,360
routes with 32 a ecmp so you're looking

192
00:11:37,370 --> 00:11:45,410
at 320 K paths for v4 and v6 he will

193
00:11:41,360 --> 00:11:48,560
start tested peering was done in band

194
00:11:45,410 --> 00:11:50,060
between leaf and spine the early

195
00:11:48,560 --> 00:11:56,680
convergence numbers we have gotten

196
00:11:50,060 --> 00:11:59,329
suggest no particular convergence

197
00:11:56,680 --> 00:12:00,650
deviation from iGPS in fact this is

198
00:11:59,330 --> 00:12:02,870
turning out to be a little bit on a

199
00:12:00,650 --> 00:12:04,550
better side that pretty

200
00:12:02,870 --> 00:12:05,960
which means that from a convergence

201
00:12:04,550 --> 00:12:09,109
standpoint the southeast holding up

202
00:12:05,960 --> 00:12:11,410
pretty well by next ITF and in the

203
00:12:09,110 --> 00:12:15,200
implementation update Raph will be

204
00:12:11,410 --> 00:12:17,089
posting some numbers as of with respect

205
00:12:15,200 --> 00:12:22,839
to how many updates were generated and

206
00:12:17,089 --> 00:12:22,839
do we see any optimized behavior here a

207
00:12:23,350 --> 00:12:27,860
little bit of details on implementation

208
00:12:25,760 --> 00:12:30,400
to that's done on FRR again it's

209
00:12:27,860 --> 00:12:32,810
implemented by Santosh from VMware

210
00:12:30,400 --> 00:12:35,029
office a fee support for the BGP is

211
00:12:32,810 --> 00:12:37,839
pretty much done a packet and code

212
00:12:35,029 --> 00:12:42,230
decode support is also done he is

213
00:12:37,839 --> 00:12:44,300
actively trying out ten code D codes to

214
00:12:42,230 --> 00:12:47,450
make sure it's conformant with darkus

215
00:12:44,300 --> 00:12:49,969
implementation the SPF computation is

216
00:12:47,450 --> 00:12:51,410
work in progress and post SPF

217
00:12:49,970 --> 00:12:53,450
computations that are out downloads

218
00:12:51,410 --> 00:12:56,089
would be the other part of the work that

219
00:12:53,450 --> 00:12:58,010
remains on this implementation but we

220
00:12:56,089 --> 00:12:59,930
are actively working towards

221
00:12:58,010 --> 00:13:02,660
interoperability two implementations are

222
00:12:59,930 --> 00:13:04,040
going to be out there so that's all I

223
00:13:02,660 --> 00:13:06,579
have from the traffic update any

224
00:13:04,040 --> 00:13:06,579
questions

225
00:13:15,730 --> 00:13:23,120
rowella you said you have a young

226
00:13:19,850 --> 00:13:25,970
document we are working on a yang

227
00:13:23,120 --> 00:13:28,220
document okay so it's not ready no and

228
00:13:25,970 --> 00:13:30,140
in that same time I think your other

229
00:13:28,220 --> 00:13:32,390
drafts you said you wanted to write yes

230
00:13:30,140 --> 00:13:37,520
I want to write an implementation spec

231
00:13:32,390 --> 00:13:51,580
and our protocol experience back can you

232
00:13:37,520 --> 00:14:01,040
show the slide so I think one more oops

233
00:13:51,580 --> 00:14:04,520
where did it go yep Pro implementation

234
00:14:01,040 --> 00:14:07,750
draft what is that two different

235
00:14:04,520 --> 00:14:11,210
documents probably one would talk about

236
00:14:07,750 --> 00:14:14,210
specifically an implementation specific

237
00:14:11,210 --> 00:14:18,200
details on an interim Interop side and

238
00:14:14,210 --> 00:14:22,040
the second would probably talk about how

239
00:14:18,200 --> 00:14:23,720
you would what are the implications as

240
00:14:22,040 --> 00:14:25,750
you start to deploy this as a new

241
00:14:23,720 --> 00:14:28,010
technology within the cross networks and

242
00:14:25,750 --> 00:14:28,880
that one is different from the

243
00:14:28,010 --> 00:14:32,390
applicability

244
00:14:28,880 --> 00:14:39,560
yes unless you want us to write one

245
00:14:32,390 --> 00:14:40,880
draft and cover them I would have to see

246
00:14:39,560 --> 00:14:43,280
the concepts with that second one sounds

247
00:14:40,880 --> 00:14:47,240
near closer okay

248
00:14:43,280 --> 00:14:53,510
just watch me work with those are thank

249
00:14:47,240 --> 00:14:56,810
you AC Linda I just want to say that we

250
00:14:53,510 --> 00:15:03,860
tried for this base specification we

251
00:14:56,810 --> 00:15:05,989
tried to keep the amount of function low

252
00:15:03,860 --> 00:15:08,660
we didn't want to put all the bells and

253
00:15:05,990 --> 00:15:10,610
whistles that are in a GPS in this

254
00:15:08,660 --> 00:15:12,469
especially since you already have the

255
00:15:10,610 --> 00:15:16,970
richness of BGP policy that you could

256
00:15:12,470 --> 00:15:20,150
apply anyplace but if people see things

257
00:15:16,970 --> 00:15:23,780
that they think should be in this base

258
00:15:20,150 --> 00:15:25,280
spec it isn't yeah III as we were going

259
00:15:23,780 --> 00:15:28,490
through the implementation I had one

260
00:15:25,280 --> 00:15:31,670
thing in my mind and I'll discuss with

261
00:15:28,490 --> 00:15:33,830
the implementers you know let us know if

262
00:15:31,670 --> 00:15:35,780
there's something something we'd like

263
00:15:33,830 --> 00:15:38,300
for instance we decided we purposely

264
00:15:35,780 --> 00:15:39,470
didn't put areas in because we didn't

265
00:15:38,300 --> 00:15:41,599
think we needed them and we didn't think

266
00:15:39,470 --> 00:15:45,140
the use case the initial use case needed

267
00:15:41,600 --> 00:15:48,350
them so that would be saying that we are

268
00:15:45,140 --> 00:15:51,740
in our borrows comment about the

269
00:15:48,350 --> 00:15:53,330
protocol experience we had that was a

270
00:15:51,740 --> 00:15:55,010
requirement for new protocols now we

271
00:15:53,330 --> 00:15:57,800
haven't done a new protocol for a long

272
00:15:55,010 --> 00:15:59,900
time we got a couple of them coming so

273
00:15:57,800 --> 00:16:02,209
you know back in the old days I remember

274
00:15:59,900 --> 00:16:04,189
there was these you know in order in

275
00:16:02,210 --> 00:16:06,710
order for a new protocol to get the

276
00:16:04,190 --> 00:16:10,310
protocol specification published you

277
00:16:06,710 --> 00:16:14,240
needed the protocol experience or maybe

278
00:16:10,310 --> 00:16:16,489
that was just to go from standards maybe

279
00:16:14,240 --> 00:16:18,140
that was to just go from Pro yeah that's

280
00:16:16,490 --> 00:16:21,620
what it was it was to go from proposed

281
00:16:18,140 --> 00:16:23,480
standard so we're doing one better than

282
00:16:21,620 --> 00:16:31,900
that I guess we're doing that initially

283
00:16:23,480 --> 00:16:38,960
the protocol experienced thank you

284
00:16:31,900 --> 00:16:41,600
anybody else yeah and just as the last

285
00:16:38,960 --> 00:16:43,970
point we we could probably solace it a

286
00:16:41,600 --> 00:16:45,530
working your feedback to that point I

287
00:16:43,970 --> 00:16:48,740
mean there's so much confusion within

288
00:16:45,530 --> 00:16:52,130
clause that a protocol experienced draft

289
00:16:48,740 --> 00:16:54,710
would just help but I mean if you want

290
00:16:52,130 --> 00:17:01,480
to you want to bypass that happy to do

291
00:16:54,710 --> 00:17:01,480
that yeah thank you

292
00:17:08,980 --> 00:17:11,980
okay

293
00:17:29,060 --> 00:17:32,159
[Music]

294
00:17:36,020 --> 00:17:43,440
hi I'm Randy I'm from Marcus also that

295
00:17:40,289 --> 00:17:48,809
just email address is older than Cisco

296
00:17:43,440 --> 00:17:51,570
um and so and Rob also works for artists

297
00:17:48,809 --> 00:17:54,210
so this is conspiracy um

298
00:17:51,570 --> 00:17:59,700
this is actually a sympathy play I have

299
00:17:54,210 --> 00:18:02,640
to work with care every day okeydoke l3

300
00:17:59,700 --> 00:18:04,980
DL it's this this is the fourth version

301
00:18:02,640 --> 00:18:08,610
and it hasn't changed much so just a

302
00:18:04,980 --> 00:18:14,090
quick review remember the primary goal

303
00:18:08,610 --> 00:18:18,779
is topology discovery for layer three

304
00:18:14,090 --> 00:18:24,418
okay then the principle customer is RK

305
00:18:18,779 --> 00:18:29,270
or an AC etc etc SPF but I will reveal

306
00:18:24,419 --> 00:18:33,149
some other uses okay just a review is

307
00:18:29,270 --> 00:18:37,350
and you're not gonna let me move huh

308
00:18:33,149 --> 00:18:40,649
it's layer 2 protocol to get layer 3

309
00:18:37,350 --> 00:18:43,860
data across so here's what we're talking

310
00:18:40,649 --> 00:18:46,469
about down here and I will not get into

311
00:18:43,860 --> 00:18:49,379
this time how it pushes it up to SPF

312
00:18:46,470 --> 00:18:52,830
because it's boring so it's just a layer

313
00:18:49,380 --> 00:18:56,880
2 protocol single links at a time

314
00:18:52,830 --> 00:19:02,270
it's not a routing protocol it merely

315
00:18:56,880 --> 00:19:05,730
discovers the addresses on the layer to

316
00:19:02,270 --> 00:19:08,730
link the layer 3 addresses on the

317
00:19:05,730 --> 00:19:12,029
point-to-point link and announces him to

318
00:19:08,730 --> 00:19:17,779
each other what's new details

319
00:19:12,029 --> 00:19:22,710
ok so want to be clear about PDU

320
00:19:17,779 --> 00:19:27,179
retransmission the question is should

321
00:19:22,710 --> 00:19:30,330
apd you be retransmitted if so it must

322
00:19:27,179 --> 00:19:33,630
be sent as the identical set of data

323
00:19:30,330 --> 00:19:36,090
grams as the original transmission and

324
00:19:33,630 --> 00:19:39,570
the transmission sequence number informs

325
00:19:36,090 --> 00:19:41,449
the receiver that it is the same one the

326
00:19:39,570 --> 00:19:47,340
sequence numbers are knots

327
00:19:41,450 --> 00:19:51,900
okay so every PDU which is composed of

328
00:19:47,340 --> 00:19:57,060
lots of frames as this magic number it's

329
00:19:51,900 --> 00:20:00,720
sequential it's obvious okay and if a

330
00:19:57,060 --> 00:20:02,580
Datagram a Datagram not the PDU but a

331
00:20:00,720 --> 00:20:06,240
from one of the data grams in a PD you

332
00:20:02,580 --> 00:20:10,199
fails checksum verification drop it on

333
00:20:06,240 --> 00:20:15,140
the floor the sender will retransmit the

334
00:20:10,200 --> 00:20:19,170
PDU and the receiver can reassemble it

335
00:20:15,140 --> 00:20:23,280
right reassembly is if you remember TCP

336
00:20:19,170 --> 00:20:27,870
it's pretty dissimilar okay there was an

337
00:20:23,280 --> 00:20:30,780
Oracle there were two cases of

338
00:20:27,870 --> 00:20:35,040
authorization failure authorization in

339
00:20:30,780 --> 00:20:37,620
open and authorization in a non open PDU

340
00:20:35,040 --> 00:20:40,860
that formed an Oracle that you could

341
00:20:37,620 --> 00:20:44,639
tell what the PD you type was by the

342
00:20:40,860 --> 00:20:48,919
error so therefore now they're both one

343
00:20:44,640 --> 00:20:53,040
just failure just security nut stuff

344
00:20:48,920 --> 00:20:56,340
okay the transport layer can handle

345
00:20:53,040 --> 00:20:59,310
rather large PD use and it's really

346
00:20:56,340 --> 00:21:03,720
pretty clearly delineate delineated a

347
00:20:59,310 --> 00:21:05,970
Datagram can be 2 to the 24th of them 2

348
00:21:03,720 --> 00:21:07,980
to the 16 the octet syn a Datagram

349
00:21:05,970 --> 00:21:10,440
except it has to fit probably in the

350
00:21:07,980 --> 00:21:12,390
Neath ernet frame so if you see Ethernet

351
00:21:10,440 --> 00:21:14,030
frames that good you've got different

352
00:21:12,390 --> 00:21:17,430
glasses than I do

353
00:21:14,030 --> 00:21:21,120
ok so it kind of looks like this these

354
00:21:17,430 --> 00:21:24,270
are datagrams ok with that transmission

355
00:21:21,120 --> 00:21:27,270
sequence number Datagram length etc

356
00:21:24,270 --> 00:21:35,160
checksum reassemble them and into PD you

357
00:21:27,270 --> 00:21:39,420
just like we do with the TCP ok and why

358
00:21:35,160 --> 00:21:42,420
not use TCP I mean why reinvent TCP it's

359
00:21:39,420 --> 00:21:45,480
because we don't know the IP addresses

360
00:21:42,420 --> 00:21:47,910
of anybody we're discovering the IP

361
00:21:45,480 --> 00:21:52,500
addresses we'd love to use TCP we'd even

362
00:21:47,910 --> 00:21:55,170
put it over TLS so it's a cheap TCP like

363
00:21:52,500 --> 00:21:59,310
protocol

364
00:21:55,170 --> 00:22:02,580
with state and all that stuff over layer

365
00:21:59,310 --> 00:22:05,399
two okay reassembly transmission with

366
00:22:02,580 --> 00:22:10,770
back off BTUs or acknowledged long-lived

367
00:22:05,400 --> 00:22:16,850
sessions okay it's fully stateful

368
00:22:10,770 --> 00:22:19,080
session per peer so there's no chatter

369
00:22:16,850 --> 00:22:22,889
okay it's hard state

370
00:22:19,080 --> 00:22:28,260
it's got graceful restart state may be

371
00:22:22,890 --> 00:22:33,450
resumed on failure because in every PD

372
00:22:28,260 --> 00:22:41,400
you there's a serial number so if I lose

373
00:22:33,450 --> 00:22:43,380
the session I can reopen and say hey

374
00:22:41,400 --> 00:22:47,190
this is the last serial number I

375
00:22:43,380 --> 00:22:52,160
digested you want to take up where we

376
00:22:47,190 --> 00:22:52,160
left off okay

377
00:22:52,310 --> 00:23:00,510
duplicate Datagram and PD you detection

378
00:22:55,430 --> 00:23:02,730
retransmission on timeout etc one of the

379
00:23:00,510 --> 00:23:07,050
things that's been enhanced in this

380
00:23:02,730 --> 00:23:10,280
version is they need a peak in the PD

381
00:23:07,050 --> 00:23:13,430
you that's announcing and withdrawing

382
00:23:10,280 --> 00:23:17,450
addressing at endpoints the actual

383
00:23:13,430 --> 00:23:20,790
protein of this protocol the

384
00:23:17,450 --> 00:23:23,040
encapsulation flags are now you can

385
00:23:20,790 --> 00:23:26,370
announce and withdraw single

386
00:23:23,040 --> 00:23:29,159
encapsulations at a time you can say

387
00:23:26,370 --> 00:23:32,699
whether this is a primary address on an

388
00:23:29,160 --> 00:23:35,010
interface you can say whether it's an

389
00:23:32,700 --> 00:23:36,980
underlay an overlay address and this

390
00:23:35,010 --> 00:23:41,580
will get exciting in another 15 minutes

391
00:23:36,980 --> 00:23:47,330
you can say whether it's a loopback okay

392
00:23:41,580 --> 00:23:50,879
for each encapsulation for each address

393
00:23:47,330 --> 00:23:54,020
okay there's explicit acts with errors

394
00:23:50,880 --> 00:23:57,180
error type code zero is just an act

395
00:23:54,020 --> 00:24:01,260
everything else is in error vendor

396
00:23:57,180 --> 00:24:04,920
extension hasn't changed okay we now

397
00:24:01,260 --> 00:24:08,070
have as I think it was Gunther said one

398
00:24:04,920 --> 00:24:09,059
Python three open source one is in

399
00:24:08,070 --> 00:24:14,249
golang that we're

400
00:24:09,059 --> 00:24:18,749
hoping to open up it's going into our

401
00:24:14,249 --> 00:24:22,320
product a false within drop maybe in

402
00:24:18,749 --> 00:24:28,830
Vancouver we'd like to start thinking

403
00:24:22,320 --> 00:24:30,689
about moving to weg last call okay I can

404
00:24:28,830 --> 00:24:34,168
take question at this point otherwise

405
00:24:30,690 --> 00:24:40,499
I'm going to go into the security and

406
00:24:34,169 --> 00:24:42,629
signing stuff and so forth AC AC Linda I

407
00:24:40,499 --> 00:24:44,399
think we better working group last call

408
00:24:42,629 --> 00:24:48,779
this as it seems to get bigger every

409
00:24:44,399 --> 00:24:52,379
time we don't it seems to get more

410
00:24:48,779 --> 00:24:55,049
function or capability hasn't changed

411
00:24:52,379 --> 00:24:58,350
much in the last version well okay

412
00:24:55,049 --> 00:25:02,070
I just what happened really in this

413
00:24:58,350 --> 00:25:04,320
version is a bunch of advice about what

414
00:25:02,070 --> 00:25:08,820
to do like how to do the retransmit et

415
00:25:04,320 --> 00:25:12,960
cetera et cetera that got exposed by a

416
00:25:08,820 --> 00:25:17,460
new developer implementing the PD use

417
00:25:12,960 --> 00:25:23,399
have changed negligibly Tony 20p juniper

418
00:25:17,460 --> 00:25:25,649
so did you give any consideration to DCC

419
00:25:23,399 --> 00:25:29,129
P I mean the whole work has been done

420
00:25:25,649 --> 00:25:34,498
already to run TCP or UDP it's published

421
00:25:29,129 --> 00:25:37,619
RFC's everything we did do you mean the

422
00:25:34,499 --> 00:25:43,710
I Triple E trying to learn because it's

423
00:25:37,619 --> 00:25:45,570
in its ITF RSC GCC peak that has been

424
00:25:43,710 --> 00:25:47,700
done it's basically TCP or UDP fully

425
00:25:45,570 --> 00:25:49,590
published with all the corner cases so I

426
00:25:47,700 --> 00:25:51,269
wonder why you you were not looking at

427
00:25:49,590 --> 00:25:53,039
that stuff maybe you missed them maybe

428
00:25:51,269 --> 00:25:54,509
there was something missing just a

429
00:25:53,039 --> 00:25:56,730
question in the room because I see the

430
00:25:54,509 --> 00:25:59,789
same work pretty much yeah if it runs

431
00:25:56,730 --> 00:26:05,460
over UDP doesn't it run over IP do it

432
00:25:59,789 --> 00:26:07,379
you haven't got an IP address it's a

433
00:26:05,460 --> 00:26:12,330
layer 2 protocol because you don't know

434
00:26:07,379 --> 00:26:15,740
layer 3 yet if I knew the layer 3

435
00:26:12,330 --> 00:26:19,649
address I wouldn't use UDP I'd use TLS

436
00:26:15,740 --> 00:26:21,629
so this is yeah this is yours thank you

437
00:26:19,649 --> 00:26:23,399
I think you fixed several of the retrack

438
00:26:21,629 --> 00:26:25,799
you fixed several the returns

439
00:26:23,399 --> 00:26:29,189
mission concerns I had with this thank

440
00:26:25,799 --> 00:26:32,879
your developer thank you

441
00:26:29,190 --> 00:26:35,999
yep yep yep he was rather picky by the

442
00:26:32,879 --> 00:26:40,009
way his name's Harsha he's not here but

443
00:26:35,999 --> 00:26:44,609
he beat me up every couple of days

444
00:26:40,009 --> 00:26:46,979
okay so if you remember from this last

445
00:26:44,609 --> 00:26:51,658
time you can go to Bess and neeraja

446
00:26:46,979 --> 00:26:56,369
extended it to do evpn without ARP

447
00:26:51,659 --> 00:26:58,129
snooping without all the crazy stuff

448
00:26:56,369 --> 00:27:01,968
that makes you throw that equipment away

449
00:26:58,129 --> 00:27:05,279
okay so go to Bess and senior ahsha's

450
00:27:01,969 --> 00:27:07,159
presentation on using this with two new

451
00:27:05,279 --> 00:27:11,460
PD use for e VPNs

452
00:27:07,159 --> 00:27:15,690
so I'm way back when I raise the issue

453
00:27:11,460 --> 00:27:17,309
of security and operator said yeah we

454
00:27:15,690 --> 00:27:20,269
want security I said what's your threat

455
00:27:17,309 --> 00:27:25,979
model and the room was silent

456
00:27:20,269 --> 00:27:27,509
so I hypothesized a threat model and I

457
00:27:25,979 --> 00:27:31,169
said I'm worried about people plugging

458
00:27:27,509 --> 00:27:34,830
lot poisoned laptops in worried about

459
00:27:31,169 --> 00:27:40,159
people plugging strange devices in etc

460
00:27:34,830 --> 00:27:43,918
etc so if you'll notice the PDUs have

461
00:27:40,159 --> 00:27:47,339
signal PDUs are signed or can be signed

462
00:27:43,919 --> 00:27:52,379
or may be signed to be more proper the

463
00:27:47,339 --> 00:27:56,759
open PD you may have a type of the

464
00:27:52,379 --> 00:27:58,830
authorization that'll be used the key

465
00:27:56,759 --> 00:28:03,269
that will be used to sign with the

466
00:27:58,830 --> 00:28:10,799
appropriate length of course okay the

467
00:28:03,269 --> 00:28:15,210
PDU is signed by the sender the open pd

468
00:28:10,799 --> 00:28:18,509
you had the public key the sender signs

469
00:28:15,210 --> 00:28:21,690
with the private key of course and the

470
00:28:18,509 --> 00:28:23,639
device sending the open can use one key

471
00:28:21,690 --> 00:28:25,979
for all links different keys for the

472
00:28:23,639 --> 00:28:29,248
blue links different keys for the pink

473
00:28:25,979 --> 00:28:33,979
links whatever we don't care okay that's

474
00:28:29,249 --> 00:28:37,200
a matter of configuration okay click

475
00:28:33,979 --> 00:28:40,020
there we go the open

476
00:28:37,200 --> 00:28:42,360
is generated on the sending device the

477
00:28:40,020 --> 00:28:45,990
private key never leaves the sending

478
00:28:42,360 --> 00:28:51,379
device this is reasonable normal key

479
00:28:45,990 --> 00:28:54,270
practice with trust on first use

480
00:28:51,380 --> 00:28:58,350
it's believed without question by the

481
00:28:54,270 --> 00:29:00,780
receiver so here's my public key you

482
00:28:58,350 --> 00:29:03,740
believe it it's used to verify all

483
00:29:00,780 --> 00:29:07,680
subsequent videos from the same sender

484
00:29:03,740 --> 00:29:12,840
so the sender is the same attacker you

485
00:29:07,680 --> 00:29:14,310
had yesterday that's tofu sorry you

486
00:29:12,840 --> 00:29:19,050
don't have to use tofu

487
00:29:14,310 --> 00:29:21,330
you could have PKA I based so the key is

488
00:29:19,050 --> 00:29:26,070
generated on the device and then the

489
00:29:21,330 --> 00:29:28,879
public key is sent to keep your key

490
00:29:26,070 --> 00:29:34,620
management infrastructure it is signed

491
00:29:28,880 --> 00:29:36,810
by whatever private key is no known in

492
00:29:34,620 --> 00:29:41,459
the system what the where the matching

493
00:29:36,810 --> 00:29:44,820
public key is on all the devices okay

494
00:29:41,460 --> 00:29:45,720
it's normal PK i stuff but don't be

495
00:29:44,820 --> 00:29:50,159
afraid

496
00:29:45,720 --> 00:29:54,120
it is not x.509 okay

497
00:29:50,160 --> 00:29:57,110
it just is that the key the public key

498
00:29:54,120 --> 00:30:00,449
is signed by a private key and that's it

499
00:29:57,110 --> 00:30:02,129
none of the rest of the x509 glorp you

500
00:30:00,450 --> 00:30:04,920
don't need it if you are an organization

501
00:30:02,130 --> 00:30:09,980
that has an x.509 infrastructure of

502
00:30:04,920 --> 00:30:13,770
course you can use x.509 enjoy okay

503
00:30:09,980 --> 00:30:17,480
every device though to do this must have

504
00:30:13,770 --> 00:30:22,310
burned in or distributed to it somehow

505
00:30:17,480 --> 00:30:27,330
the public key of the trust anchor of

506
00:30:22,310 --> 00:30:33,020
the PKI so it can verify it but this

507
00:30:27,330 --> 00:30:36,870
gives you fairly reasonable sign PDUs

508
00:30:33,020 --> 00:30:39,629
okay verify the two methods are

509
00:30:36,870 --> 00:30:42,300
indistinguishable the key in the open

510
00:30:39,630 --> 00:30:45,210
pin used to verify the signatures if

511
00:30:42,300 --> 00:30:47,760
it's PKI based it's just when you got

512
00:30:45,210 --> 00:30:50,790
the open pd you you could check that the

513
00:30:47,760 --> 00:30:55,080
key was authentic

514
00:30:50,790 --> 00:30:57,210
from then on you're cruising okay

515
00:30:55,080 --> 00:30:59,760
the choice of which type of Kings left

516
00:30:57,210 --> 00:31:03,960
to the operator and in fact they could

517
00:30:59,760 --> 00:31:06,830
mix and match the pink peers get tofu

518
00:31:03,960 --> 00:31:14,190
the blue peers get it

519
00:31:06,830 --> 00:31:16,199
PKI okay and we'd like to request WG

520
00:31:14,190 --> 00:31:18,420
adoption would you like to do it here or

521
00:31:16,200 --> 00:31:25,260
an email email would be preferred I

522
00:31:18,420 --> 00:31:30,180
presume yeah okay so Oh question zon

523
00:31:25,260 --> 00:31:31,980
that one sorry some of us are security

524
00:31:30,180 --> 00:31:35,040
geeks so we wanted to have the darn

525
00:31:31,980 --> 00:31:36,660
thing reasonably securable you don't

526
00:31:35,040 --> 00:31:40,620
have to do it by the way you can have

527
00:31:36,660 --> 00:31:44,400
the key authorization type B zero and no

528
00:31:40,620 --> 00:31:49,040
security at all right sorry I didn't

529
00:31:44,400 --> 00:31:53,040
mention that um so the purpose here is

530
00:31:49,040 --> 00:31:54,620
4k or NAC to be able to talk to BGP to

531
00:31:53,040 --> 00:31:57,149
each other

532
00:31:54,620 --> 00:32:01,050
okay let's remember why we're doing this

533
00:31:57,150 --> 00:32:06,320
so wouldn't it be nice if we could give

534
00:32:01,050 --> 00:32:12,690
Kher NAC the information they need to

535
00:32:06,320 --> 00:32:19,260
build their BG peace SPF session okay so

536
00:32:12,690 --> 00:32:23,340
huh so we have a PD you for building

537
00:32:19,260 --> 00:32:26,700
upper layer protocols and in this

538
00:32:23,340 --> 00:32:28,830
instance so it's it's a simple TLV with

539
00:32:26,700 --> 00:32:31,110
a protocol type an attribute count an

540
00:32:28,830 --> 00:32:34,199
attribute list and the attributes are

541
00:32:31,110 --> 00:32:37,729
the protocols want to provide the

542
00:32:34,200 --> 00:32:40,710
minimal set of parameters for bgp

543
00:32:37,730 --> 00:32:43,920
because open is going to exchange all

544
00:32:40,710 --> 00:32:46,110
the rest and you don't want to be in

545
00:32:43,920 --> 00:32:49,230
conflict with the parameters exchange in

546
00:32:46,110 --> 00:32:51,629
open because then you have two sources

547
00:32:49,230 --> 00:32:54,090
of truth and my mother always told me

548
00:32:51,630 --> 00:32:57,180
that's bad news because then you have to

549
00:32:54,090 --> 00:33:01,889
resolve okay so what are the minimum

550
00:32:57,180 --> 00:33:04,880
parameters for bgp open okay they are

551
00:33:01,890 --> 00:33:09,750
what my is my ass

552
00:33:04,880 --> 00:33:14,970
what's my peering address and what's the

553
00:33:09,750 --> 00:33:18,750
bgp authentication data okay and yes of

554
00:33:14,970 --> 00:33:22,710
course there's one for ipv6 okay and

555
00:33:18,750 --> 00:33:25,740
that's it that's all it is really done

556
00:33:22,710 --> 00:33:29,930
really stupid really simple and you can

557
00:33:25,740 --> 00:33:29,930
automatically create your bgp sessions

558
00:33:31,580 --> 00:33:38,600
questions it's not even from sewerage on

559
00:33:40,640 --> 00:33:44,120
there we go

560
00:33:45,800 --> 00:33:49,710
John Scudder I'm only coming to the mic

561
00:33:48,090 --> 00:33:53,550
because you called my name it's you know

562
00:33:49,710 --> 00:33:55,920
like anyway um no actually I don't have

563
00:33:53,550 --> 00:33:57,149
any questions I have your document

564
00:33:55,920 --> 00:34:01,050
queued up to read when I have something

565
00:33:57,150 --> 00:34:03,330
intelligent to say I'll say Edna okay

566
00:34:01,050 --> 00:34:07,620
you know so we'll do the we'd like an

567
00:34:03,330 --> 00:34:11,190
adoption call on that too and then for

568
00:34:07,620 --> 00:34:14,509
dessert there is no internet draft on

569
00:34:11,190 --> 00:34:19,230
this but I want to show you an OP stack

570
00:34:14,510 --> 00:34:22,760
okay no protocol just an ops hack at

571
00:34:19,230 --> 00:34:27,560
layer 3 using l3 deal

572
00:34:22,760 --> 00:34:32,250
so the folks doing kubernetes etc etc

573
00:34:27,560 --> 00:34:34,860
have you know tours connected a rat full

574
00:34:32,250 --> 00:34:36,960
of servers and servers have you know

575
00:34:34,860 --> 00:34:40,650
they might have an ad or whatever and

576
00:34:36,960 --> 00:34:45,210
tons of micro services maybe a hundred

577
00:34:40,650 --> 00:34:49,860
of them on a server okay and we can use

578
00:34:45,210 --> 00:34:52,949
l3 DL to automatically build and

579
00:34:49,860 --> 00:34:55,860
discover this the simple thing would

580
00:34:52,949 --> 00:34:58,460
just be running a l3 DL on the server's

581
00:34:55,860 --> 00:35:01,320
external interfaces and on the tours and

582
00:34:58,460 --> 00:35:03,930
you'd have an L 3 DL configuration to

583
00:35:01,320 --> 00:35:05,910
say inject those well that's fine

584
00:35:03,930 --> 00:35:08,520
now the tour knows to add us find those

585
00:35:05,910 --> 00:35:10,339
interfaces big what we do that's not

586
00:35:08,520 --> 00:35:14,840
very exciting

587
00:35:10,340 --> 00:35:17,700
so remember active and passive

588
00:35:14,840 --> 00:35:23,730
interfaces in is is

589
00:35:17,700 --> 00:35:30,419
nos PF okay where you can say that an

590
00:35:23,730 --> 00:35:33,450
interface is active excuse the juniper I

591
00:35:30,420 --> 00:35:36,240
believe that this is an active interface

592
00:35:33,450 --> 00:35:38,759
it sends and receives the protocol

593
00:35:36,240 --> 00:35:41,549
that's what's meant by active and it

594
00:35:38,760 --> 00:35:46,200
injects its l3 addressing into the

595
00:35:41,550 --> 00:35:48,900
protocol a passive interface it does not

596
00:35:46,200 --> 00:35:54,328
send and receive the protocol it's

597
00:35:48,900 --> 00:36:00,230
silent but it injects the l3 information

598
00:35:54,329 --> 00:36:01,680
into the protocol database so that was

599
00:36:00,230 --> 00:36:04,770
thank you

600
00:36:01,680 --> 00:36:07,169
the encapsulation flag for under and

601
00:36:04,770 --> 00:36:11,790
over we're going to use that whereas the

602
00:36:07,170 --> 00:36:15,750
underlay is passive and the overlay is

603
00:36:11,790 --> 00:36:18,660
active actually I think that's reversed

604
00:36:15,750 --> 00:36:25,920
but the underlay overlay terminology

605
00:36:18,660 --> 00:36:30,589
always confuses me but the overlay we're

606
00:36:25,920 --> 00:36:35,119
going to take all these interfaces

607
00:36:30,589 --> 00:36:42,140
SW 0 through 7 and inject them passively

608
00:36:35,119 --> 00:36:46,500
into l3 DL these interfaces are active

609
00:36:42,140 --> 00:36:52,859
now these interfaces know how to find

610
00:36:46,500 --> 00:36:57,869
all of these interfaces and they can

611
00:36:52,859 --> 00:37:01,259
move around between servers between

612
00:36:57,869 --> 00:37:08,040
interfaces here they can be spawned they

613
00:37:01,260 --> 00:37:14,460
can die etc okay you can do

614
00:37:08,040 --> 00:37:17,910
multi-tenancy just do V ahrefs here do

615
00:37:14,460 --> 00:37:21,599
something like VX LAN here put the

616
00:37:17,910 --> 00:37:27,149
matching VRS up here and you have

617
00:37:21,599 --> 00:37:30,550
multi-tenancy okay so you can have a

618
00:37:27,150 --> 00:37:33,070
rack where

619
00:37:30,550 --> 00:37:36,420
her services are moving around etc and

620
00:37:33,070 --> 00:37:38,590
remember l3 DL is going to be very quiet

621
00:37:36,420 --> 00:37:43,000
it's only going to tell you when things

622
00:37:38,590 --> 00:37:45,640
change now you can turn up lair to live

623
00:37:43,000 --> 00:37:47,950
in this checking or not use it at all

624
00:37:45,640 --> 00:37:49,720
but if you want detection of failures in

625
00:37:47,950 --> 00:37:52,569
motion if you want to detect the server

626
00:37:49,720 --> 00:37:56,200
down within one second ten seconds or

627
00:37:52,570 --> 00:37:58,330
five minutes you can turn that on okay

628
00:37:56,200 --> 00:38:01,569
so you can have hundreds of micro

629
00:37:58,330 --> 00:38:02,259
services on a server 30 or 40 servers

630
00:38:01,570 --> 00:38:05,740
Iraq

631
00:38:02,260 --> 00:38:08,050
you can cross pods and racks can have

632
00:38:05,740 --> 00:38:11,399
service mobility and creation deletion

633
00:38:08,050 --> 00:38:14,740
micro service failure server failure etc

634
00:38:11,400 --> 00:38:21,660
it's dead quiet only changes are

635
00:38:14,740 --> 00:38:21,660
propagated and that's it

636
00:38:23,010 --> 00:38:29,770
hi Paul I so I think what you're saying

637
00:38:27,520 --> 00:38:32,740
is you really only need to one run one

638
00:38:29,770 --> 00:38:35,380
instance of vel 3dl then not for all of

639
00:38:32,740 --> 00:38:37,569
those ll or whatever that are the

640
00:38:35,380 --> 00:38:41,380
virtual ones in the overlay is that what

641
00:38:37,570 --> 00:38:43,690
you're saying yes and so if there's

642
00:38:41,380 --> 00:38:46,120
collisions with IP addresses or things

643
00:38:43,690 --> 00:38:48,850
how does that result or and you use the

644
00:38:46,120 --> 00:38:57,040
verse if it's multi-tenancy you will use

645
00:38:48,850 --> 00:38:58,540
verse l3 DL verbs etc okay so they can

646
00:38:57,040 --> 00:38:59,890
use the same address space that's what

647
00:38:58,540 --> 00:39:03,670
we mean by multi-tenancy

648
00:38:59,890 --> 00:39:07,210
right right that you and Sue are both

649
00:39:03,670 --> 00:39:12,100
using Network 10 right and so are those

650
00:39:07,210 --> 00:39:14,530
in different TLDs inside l3 DL or how do

651
00:39:12,100 --> 00:39:17,049
you combine them in l3 do I guess

652
00:39:14,530 --> 00:39:19,810
multiple free do instances oh so they

653
00:39:17,050 --> 00:39:21,970
are multi-tenancy you'll need another

654
00:39:19,810 --> 00:39:24,910
instance perverse there multiple ASIS

655
00:39:21,970 --> 00:39:26,740
but you only one run one lively instant

656
00:39:24,910 --> 00:39:28,390
liveness instance so they're not all

657
00:39:26,740 --> 00:39:30,040
doing hellos making sure they're alive

658
00:39:28,390 --> 00:39:34,270
or depends upon what you want to worry

659
00:39:30,040 --> 00:39:37,000
about being alive yeah no I'm just yeah

660
00:39:34,270 --> 00:39:38,890
it's your choice and tuning it you're

661
00:39:37,000 --> 00:39:40,960
mentioning it's quiet and so that was

662
00:39:38,890 --> 00:39:43,120
the part I was trying to employ ah the

663
00:39:40,960 --> 00:39:44,349
two aspects to quiet first of all you

664
00:39:43,120 --> 00:39:47,170
tuned liveness for what you

665
00:39:44,349 --> 00:39:50,289
just like you tuned BFD but the protocol

666
00:39:47,170 --> 00:39:52,660
only announces changes right and that's

667
00:39:50,289 --> 00:39:56,049
the big thing about quiet it's not going

668
00:39:52,660 --> 00:39:59,200
like is is and OSPF every 30 seconds

669
00:39:56,049 --> 00:40:01,630
hitting you on a hit with hammer right

670
00:39:59,200 --> 00:40:08,229
okay it's like bgp it's the only

671
00:40:01,630 --> 00:40:10,299
announcing changes and that's all I got

672
00:40:08,229 --> 00:40:13,259
so you better ask questions because I'm

673
00:40:10,299 --> 00:40:13,259
well under time right

674
00:40:44,900 --> 00:40:52,920
yeah

675
00:40:47,329 --> 00:40:56,009
okay so at the last ITF we promise to

676
00:40:52,920 --> 00:41:00,420
produce a draft that showed how to write

677
00:40:56,009 --> 00:41:02,670
the lldp tlvs for the information that

678
00:41:00,420 --> 00:41:07,529
is needed to be exchanged for LS VR so

679
00:41:02,670 --> 00:41:10,469
that's what this draft is about again so

680
00:41:07,529 --> 00:41:12,539
you know why I was motivated as Randy

681
00:41:10,469 --> 00:41:14,880
just mentioned L SVR needs to get this

682
00:41:12,539 --> 00:41:18,089
information to bootstrap itself l

683
00:41:14,880 --> 00:41:22,890
through Yale does that uses TLB formats

684
00:41:18,089 --> 00:41:24,509
to do that lldp also uses tlvs and so

685
00:41:22,890 --> 00:41:28,259
what we're trying to do is define the

686
00:41:24,509 --> 00:41:31,680
tlvs that could be used by lldp to give

687
00:41:28,259 --> 00:41:33,869
L SVR of what it needs and also we're

688
00:41:31,680 --> 00:41:36,058
also one of the judges I had was to

689
00:41:33,869 --> 00:41:39,779
demonstrate how a ETF can define their

690
00:41:36,059 --> 00:41:42,119
own tlvs AC pointed out that there is

691
00:41:39,779 --> 00:41:43,619
already a draft in IDR where where

692
00:41:42,119 --> 00:41:45,630
that's been done so I wasn't aware of

693
00:41:43,619 --> 00:41:48,239
that which is but that's great but it

694
00:41:45,630 --> 00:41:54,529
does point out the need for coordination

695
00:41:48,239 --> 00:41:58,979
in the ITF on defining tlvs for lldp so

696
00:41:54,529 --> 00:42:01,410
l DP has a mechanism for organizations

697
00:41:58,979 --> 00:42:04,618
to define their own this is the format

698
00:42:01,410 --> 00:42:06,269
of that organizations can be vendors or

699
00:42:04,619 --> 00:42:09,059
they can be other standards

700
00:42:06,269 --> 00:42:12,359
organizations and you simply you stick

701
00:42:09,059 --> 00:42:14,459
in your o UI into the TLV itself and you

702
00:42:12,359 --> 00:42:17,489
have a subtype field that must be there

703
00:42:14,459 --> 00:42:19,469
and that subtype you need to manage so

704
00:42:17,489 --> 00:42:21,239
that's what the ITF would need to make

705
00:42:19,469 --> 00:42:25,949
sure if they're gonna create their own

706
00:42:21,239 --> 00:42:28,410
that they manage that space so in this

707
00:42:25,949 --> 00:42:31,529
draft what I did was strictly was go

708
00:42:28,410 --> 00:42:33,149
through l3 DL and try to look at the

709
00:42:31,529 --> 00:42:36,150
information that was being exchanged

710
00:42:33,150 --> 00:42:38,130
there and just simply create lldp tlvs

711
00:42:36,150 --> 00:42:42,479
for that with with some caveats and some

712
00:42:38,130 --> 00:42:44,549
things I'll talk about that so as I

713
00:42:42,479 --> 00:42:48,299
mentioned I didn't wasn't aware of the

714
00:42:44,549 --> 00:42:49,979
ACS draft and IDR so I thought this was

715
00:42:48,299 --> 00:42:51,299
maybe the first time but nonetheless

716
00:42:49,979 --> 00:42:54,269
again pointing

717
00:42:51,299 --> 00:42:57,390
IETF does need to manage these and

718
00:42:54,269 --> 00:42:59,758
perhaps it's RFC 5342 is place to do

719
00:42:57,390 --> 00:43:02,009
that yeah yes this is Susan Harrison

720
00:42:59,759 --> 00:43:05,969
this hat ID our co-chair it's an

721
00:43:02,009 --> 00:43:08,249
individual draft but it is worth a read

722
00:43:05,969 --> 00:43:10,289
as you're on the same thing yeah yeah

723
00:43:08,249 --> 00:43:14,759
I'd already gave it a read and gave some

724
00:43:10,289 --> 00:43:16,079
comments back actually as well okay so

725
00:43:14,759 --> 00:43:19,140
let me talk a little bit about the

726
00:43:16,079 --> 00:43:21,059
design of these Tobs so till the TLV

727
00:43:19,140 --> 00:43:21,629
themselves have a bunch of fields in

728
00:43:21,059 --> 00:43:23,699
them

729
00:43:21,630 --> 00:43:26,609
I didn't define those fields just made a

730
00:43:23,699 --> 00:43:29,159
normative reference to l3 DL so things

731
00:43:26,609 --> 00:43:31,288
like the lle eye the attributes those in

732
00:43:29,159 --> 00:43:35,909
caps flags that we just looked at all

733
00:43:31,289 --> 00:43:39,919
those come from l3 DL as a normative and

734
00:43:35,909 --> 00:43:44,699
the I did not include the per TLV

735
00:43:39,919 --> 00:43:47,158
signatures that are in Elfie DL but

736
00:43:44,699 --> 00:43:49,769
that's kind of the the way elf and yell

737
00:43:47,159 --> 00:43:51,689
can define very large TLV so maybe a

738
00:43:49,769 --> 00:43:53,669
signature Portillo v makes sense here I

739
00:43:51,689 --> 00:43:55,678
think in lldp if we're gonna do

740
00:43:53,669 --> 00:43:57,899
signatures we need to do it across the

741
00:43:55,679 --> 00:44:00,119
entire set as opposed to inside each one

742
00:43:57,899 --> 00:44:01,919
we we have a limited space for TL v

743
00:44:00,119 --> 00:44:05,789
that's one of the that's one of the

744
00:44:01,919 --> 00:44:07,679
things we need to work with and so just

745
00:44:05,789 --> 00:44:10,469
some minor things I you know the the

746
00:44:07,679 --> 00:44:12,269
encapsulations for IP v4 and v6 I didn't

747
00:44:10,469 --> 00:44:14,069
include a count when you list multiple

748
00:44:12,269 --> 00:44:18,089
of them because the parser could figure

749
00:44:14,069 --> 00:44:20,399
that out and another thing that was

750
00:44:18,089 --> 00:44:22,828
important was we only want to try to run

751
00:44:20,399 --> 00:44:25,799
one instance of lldp here not an

752
00:44:22,829 --> 00:44:29,159
instance per interface or might be in an

753
00:44:25,799 --> 00:44:32,159
overlay underlay physical virtual and so

754
00:44:29,159 --> 00:44:34,979
the way to work around that was then to

755
00:44:32,159 --> 00:44:37,259
just add the lle I into each of the tlvs

756
00:44:34,979 --> 00:44:41,129
so we don't need to again run multiple

757
00:44:37,259 --> 00:44:42,839
instances of the protocol and so in

758
00:44:41,130 --> 00:44:45,809
order to get the full set of information

759
00:44:42,839 --> 00:44:48,359
that you need you probably have to send

760
00:44:45,809 --> 00:44:51,659
multiple of some of these tlbs and

761
00:44:48,359 --> 00:44:52,949
that's perfectly valid in in lldp you

762
00:44:51,659 --> 00:44:55,799
don't just have to have one of them you

763
00:44:52,949 --> 00:44:57,089
can send ten of the same type of l TLV

764
00:44:55,799 --> 00:45:01,349
just as long as they have different data

765
00:44:57,089 --> 00:45:03,149
and log it put together and so I guess

766
00:45:01,349 --> 00:45:05,260
the other important factor is to make

767
00:45:03,149 --> 00:45:09,490
this really work for LS VR

768
00:45:05,260 --> 00:45:11,590
probably need to use the lldp v2 which

769
00:45:09,490 --> 00:45:13,000
is going to allow you to send the amount

770
00:45:11,590 --> 00:45:16,000
of data that you might actually need

771
00:45:13,000 --> 00:45:17,950
here so that's expected and I'll be

772
00:45:16,000 --> 00:45:21,790
given another update on on the status of

773
00:45:17,950 --> 00:45:25,359
that protocol so again most of these are

774
00:45:21,790 --> 00:45:28,330
just strictly TLV formats now there was

775
00:45:25,360 --> 00:45:30,880
the attribute account and I noticed that

776
00:45:28,330 --> 00:45:33,759
got changed in Randy's latest draft so

777
00:45:30,880 --> 00:45:36,700
obviously I didn't track some of these

778
00:45:33,760 --> 00:45:38,680
changes but this would just be simply

779
00:45:36,700 --> 00:45:41,439
that attribute list the assumption would

780
00:45:38,680 --> 00:45:43,000
be we could fit that into a single TLV

781
00:45:41,440 --> 00:45:47,800
so we should really only have one of

782
00:45:43,000 --> 00:45:49,240
those not multiple of those my PV for or

783
00:45:47,800 --> 00:45:50,890
announcements would have the in caps

784
00:45:49,240 --> 00:45:52,479
flags and the address and then of course

785
00:45:50,890 --> 00:45:55,240
you could replicate that as many times

786
00:45:52,480 --> 00:45:59,980
as you can to fit in the size of an LLB

787
00:45:55,240 --> 00:46:04,120
pto V so you might send multiple so we

788
00:45:59,980 --> 00:46:06,160
have a v6 as well we have the MPLS v4

789
00:46:04,120 --> 00:46:09,130
the MPLS v6 I don't think we need to

790
00:46:06,160 --> 00:46:11,379
look at them in details but the way the

791
00:46:09,130 --> 00:46:13,570
the fields in there are structured again

792
00:46:11,380 --> 00:46:16,120
are either normatively referenced to l3

793
00:46:13,570 --> 00:46:20,200
DL or they were slightly modified to

794
00:46:16,120 --> 00:46:22,330
remove the count field or something okay

795
00:46:20,200 --> 00:46:23,799
so that's sort of the main thing in the

796
00:46:22,330 --> 00:46:25,900
draft it doesn't really tell you how to

797
00:46:23,800 --> 00:46:27,280
process them or pack them or anything

798
00:46:25,900 --> 00:46:30,310
like that it's just trying to define

799
00:46:27,280 --> 00:46:32,440
them and if we need to sign these things

800
00:46:30,310 --> 00:46:36,400
we need to probably figure out maybe we

801
00:46:32,440 --> 00:46:37,810
should create a whole new l2 or TLB just

802
00:46:36,400 --> 00:46:40,960
for the signature we talked a little bit

803
00:46:37,810 --> 00:46:42,670
about that and clearly if we want to

804
00:46:40,960 --> 00:46:45,550
pursue this there's interest in this we

805
00:46:42,670 --> 00:46:50,230
need to fix the clarifications and get

806
00:46:45,550 --> 00:46:58,230
it up to date with l3 DL so so any

807
00:46:50,230 --> 00:46:58,230
questions all right

808
00:47:05,309 --> 00:47:13,690
Randy Bush Garrett what's the rhythm in

809
00:47:10,539 --> 00:47:23,920
other words how often will I hear this

810
00:47:13,690 --> 00:47:28,839
stuff and um how much payload do I

811
00:47:23,920 --> 00:47:30,670
really get okay and that'll be covered

812
00:47:28,839 --> 00:47:34,660
in this presentation where we talk about

813
00:47:30,670 --> 00:47:36,640
lldp v2 so all that other with the

814
00:47:34,660 --> 00:47:39,489
drought is just defining the payloads

815
00:47:36,640 --> 00:47:40,719
that that you need so this presentation

816
00:47:39,489 --> 00:47:45,729
is going to tell you about the latest

817
00:47:40,719 --> 00:47:47,920
status of project 802 2.1 a b d h if

818
00:47:45,729 --> 00:47:50,950
anybody needs a secret decoder ring on

819
00:47:47,920 --> 00:47:52,660
the letters meet me in the hallway I can

820
00:47:50,950 --> 00:47:57,460
explain a Capitol upper and lowercase

821
00:47:52,660 --> 00:48:00,489
they are significant so that's what

822
00:47:57,460 --> 00:48:02,799
we're calling lldp v2 so first of all

823
00:48:00,489 --> 00:48:05,319
I'm giving an update on a standards

824
00:48:02,799 --> 00:48:07,210
project and the other SDO this is just

825
00:48:05,319 --> 00:48:09,369
my personal view kind of need to slow

826
00:48:07,210 --> 00:48:11,769
this slide it's not an official liaison

827
00:48:09,369 --> 00:48:13,210
okay if you want to do those the past

828
00:48:11,769 --> 00:48:14,848
letters back and forth this is much more

829
00:48:13,210 --> 00:48:18,640
efficient way to do it if you trust me

830
00:48:14,849 --> 00:48:20,559
so that's my discrepancy okay um so I've

831
00:48:18,640 --> 00:48:22,359
already given an update in the previous

832
00:48:20,559 --> 00:48:24,460
one so I there's some background

833
00:48:22,359 --> 00:48:26,078
material lots of links of things that

834
00:48:24,460 --> 00:48:29,440
you can get history on I didn't repeat

835
00:48:26,079 --> 00:48:31,779
him here and so that's the first link

836
00:48:29,440 --> 00:48:34,839
the second thing is the project has been

837
00:48:31,779 --> 00:48:37,719
approved this official project now it

838
00:48:34,839 --> 00:48:39,759
was proved in September the most recent

839
00:48:37,719 --> 00:48:42,509
technical presentation is at this link

840
00:48:39,759 --> 00:48:46,140
and I have incorporated a lot of it here

841
00:48:42,509 --> 00:48:48,369
and I we just talked about the draft and

842
00:48:46,140 --> 00:48:50,140
we're gonna be doing a press where the

843
00:48:48,369 --> 00:48:51,759
802 is gonna do a press release here

844
00:48:50,140 --> 00:48:55,058
about the project kind of a call for

845
00:48:51,759 --> 00:48:56,559
participation we proved that last week

846
00:48:55,059 --> 00:48:58,269
so I don't know when that'll go out

847
00:48:56,559 --> 00:49:01,180
probably in the next couple of weeks or

848
00:48:58,269 --> 00:49:04,109
so or who knows so one of the big

849
00:49:01,180 --> 00:49:06,009
changes since last IETF just we added

850
00:49:04,109 --> 00:49:07,719
terminology and definitions you know

851
00:49:06,009 --> 00:49:10,029
trying to get it ready for actually

852
00:49:07,719 --> 00:49:12,130
starting the documentation there's a

853
00:49:10,029 --> 00:49:14,529
thing called a manifest which is a new

854
00:49:12,130 --> 00:49:15,700
TLV which effectively describes all the

855
00:49:14,529 --> 00:49:17,470
other TL B's

856
00:49:15,700 --> 00:49:19,509
we tweaked it a little bit so that we

857
00:49:17,470 --> 00:49:21,250
could get the the set of data that

858
00:49:19,510 --> 00:49:23,500
you're going to exchange to be bigger

859
00:49:21,250 --> 00:49:25,809
basically and and that needs to be tuned

860
00:49:23,500 --> 00:49:28,809
that's there's nothing that's up in the

861
00:49:25,809 --> 00:49:30,940
air on how it's a trade-off between you

862
00:49:28,809 --> 00:49:33,670
know kind of collisions reliability and

863
00:49:30,940 --> 00:49:35,819
how much data you want to send and then

864
00:49:33,670 --> 00:49:39,880
there was sort of a worst case scenario

865
00:49:35,819 --> 00:49:41,529
shared me can't brain-dead thing where

866
00:49:39,880 --> 00:49:43,720
you might have multiple people in the

867
00:49:41,530 --> 00:49:45,730
same MAC address you know we I'm not

868
00:49:43,720 --> 00:49:47,680
gonna cover that it but needless to say

869
00:49:45,730 --> 00:49:50,380
that corner case has been evaluated and

870
00:49:47,680 --> 00:49:52,058
the protocol survives that no problem so

871
00:49:50,380 --> 00:49:53,079
that's the that's the worst case

872
00:49:52,059 --> 00:49:57,609
scenario you shouldn't have to worry

873
00:49:53,079 --> 00:49:59,349
about okay so a lot of words on here and

874
00:49:57,609 --> 00:50:00,970
the next couple slides that there's some

875
00:49:59,349 --> 00:50:04,960
good pictures that maybe make it a

876
00:50:00,970 --> 00:50:07,118
little more obvious so the goal here of

877
00:50:04,960 --> 00:50:09,400
course the main goal is to send more

878
00:50:07,119 --> 00:50:11,730
data than can sit and fit in a single

879
00:50:09,400 --> 00:50:14,440
Ethernet frame so the biggest

880
00:50:11,730 --> 00:50:16,480
restriction with lldp is that everything

881
00:50:14,440 --> 00:50:18,640
that you had to send was in one frame

882
00:50:16,480 --> 00:50:20,530
you couldn't actually send multiple

883
00:50:18,640 --> 00:50:21,730
frames of different stuff that that

884
00:50:20,530 --> 00:50:24,849
wasn't the way the protocol it was

885
00:50:21,730 --> 00:50:26,740
designed to be ultra simple and so

886
00:50:24,849 --> 00:50:28,599
obviously there's big restrictions in

887
00:50:26,740 --> 00:50:31,000
that so now we've tweaked that you can

888
00:50:28,599 --> 00:50:33,339
send more than one frame but we've tried

889
00:50:31,000 --> 00:50:35,170
to do it in an elegant way that is

890
00:50:33,339 --> 00:50:37,599
backward compatible and doesn't increase

891
00:50:35,170 --> 00:50:41,589
the quote chatter or amount of data that

892
00:50:37,599 --> 00:50:44,559
that needs to be sent so we want to

893
00:50:41,589 --> 00:50:47,020
support the the ability to limit you

894
00:50:44,559 --> 00:50:48,520
know that also we do the opposite so in

895
00:50:47,020 --> 00:50:50,530
in 802 there's a thing called

896
00:50:48,520 --> 00:50:53,290
time-sensitive networking which is debt

897
00:50:50,530 --> 00:50:55,329
net in here at layer 3 and there's a lot

898
00:50:53,290 --> 00:50:57,180
of like super time scheduled stuff and

899
00:50:55,329 --> 00:51:00,220
we don't want to we want to be able to

900
00:50:57,180 --> 00:51:02,740
actually shrink an lldp packet if we

901
00:51:00,220 --> 00:51:06,759
wanted to in order to get them to fit in

902
00:51:02,740 --> 00:51:08,439
the timing so this this LOD pv2 actually

903
00:51:06,760 --> 00:51:11,859
works for that as well so it's a

904
00:51:08,440 --> 00:51:14,790
separate sort of a separate what do you

905
00:51:11,859 --> 00:51:17,980
want to call it benefit or requirement

906
00:51:14,790 --> 00:51:20,950
ok so an important aspect of this in our

907
00:51:17,980 --> 00:51:22,990
approach is that an upgraded version to

908
00:51:20,950 --> 00:51:25,359
person can still talk to a version one

909
00:51:22,990 --> 00:51:27,970
person but obviously only sharing the

910
00:51:25,359 --> 00:51:28,950
the first PDU because the other stuff

911
00:51:27,970 --> 00:51:29,970
that the

912
00:51:28,950 --> 00:51:31,830
like he wouldn't know how to do it but

913
00:51:29,970 --> 00:51:33,770
so you have basic connectivity you have

914
00:51:31,830 --> 00:51:37,410
the same level of functionality and an

915
00:51:33,770 --> 00:51:38,910
existing lldp implementation but you

916
00:51:37,410 --> 00:51:40,890
have the ability to send more data now

917
00:51:38,910 --> 00:51:41,940
if you support an enhancement and so

918
00:51:40,890 --> 00:51:43,680
that's important because we don't have

919
00:51:41,940 --> 00:51:46,500
to just upgrade the world or deploy

920
00:51:43,680 --> 00:51:48,060
something shared media is supported and

921
00:51:46,500 --> 00:51:52,560
you know obviously we want to make sure

922
00:51:48,060 --> 00:51:53,730
everything we send we can account for so

923
00:51:52,560 --> 00:51:55,470
the other important thing another

924
00:51:53,730 --> 00:51:59,490
objective was we want to support what we

925
00:51:55,470 --> 00:52:01,560
call receiver pacing so a lot of you

926
00:51:59,490 --> 00:52:03,899
know really really small IOT type

927
00:52:01,560 --> 00:52:05,910
devices do things like lldp right so we

928
00:52:03,900 --> 00:52:08,490
don't want to have them have to swallow

929
00:52:05,910 --> 00:52:09,810
a big giant database every time you send

930
00:52:08,490 --> 00:52:12,270
it I know

931
00:52:09,810 --> 00:52:14,610
OSPF and is may have had some problems

932
00:52:12,270 --> 00:52:18,300
like that in the past so what we do is

933
00:52:14,610 --> 00:52:20,370
we allow the receiver of this chunk of a

934
00:52:18,300 --> 00:52:22,560
series of data to be able to request

935
00:52:20,370 --> 00:52:24,029
them at the pace that they can so that

936
00:52:22,560 --> 00:52:27,450
means I can stop very cheap

937
00:52:24,030 --> 00:52:29,030
implementation of lldp without a ton of

938
00:52:27,450 --> 00:52:32,399
buffering and things like that need it

939
00:52:29,030 --> 00:52:35,580
and we don't want to increase the

940
00:52:32,400 --> 00:52:38,060
chatter any more than lldp v1 so there

941
00:52:35,580 --> 00:52:40,620
is no increase its you simply

942
00:52:38,060 --> 00:52:43,980
periodically transmit exactly like you

943
00:52:40,620 --> 00:52:45,779
do in llv p1 if there's more changes in

944
00:52:43,980 --> 00:52:49,050
the extension data then the receiver

945
00:52:45,780 --> 00:52:51,570
will request that there are some other

946
00:52:49,050 --> 00:52:53,460
optimizations you know that we we looked

947
00:52:51,570 --> 00:52:55,800
at as well or looking at that could be

948
00:52:53,460 --> 00:52:58,350
considered the project scope was written

949
00:52:55,800 --> 00:53:00,210
in a way that we could do I think some

950
00:52:58,350 --> 00:53:02,880
extra things if we really needed to here

951
00:53:00,210 --> 00:53:05,040
without too much feature creep and then

952
00:53:02,880 --> 00:53:08,330
the whole authentication security like I

953
00:53:05,040 --> 00:53:10,170
said I had punted it in the previous

954
00:53:08,330 --> 00:53:12,960
presentation on tlvs

955
00:53:10,170 --> 00:53:15,660
but we can certainly address that year

956
00:53:12,960 --> 00:53:18,320
by defining some secure TL ease that

957
00:53:15,660 --> 00:53:22,170
that would you know provide some kind of

958
00:53:18,320 --> 00:53:24,390
integrity across the whole set okay just

959
00:53:22,170 --> 00:53:26,880
a quick reminder so so I'll repeat again

960
00:53:24,390 --> 00:53:28,379
super simple protocol think of it we

961
00:53:26,880 --> 00:53:31,050
like to think of it as you're exchanging

962
00:53:28,380 --> 00:53:33,060
a database I have a database which is

963
00:53:31,050 --> 00:53:36,360
just a set or maybe a data set is a

964
00:53:33,060 --> 00:53:37,650
better word of tlvs I have a set of TVs

965
00:53:36,360 --> 00:53:40,380
and I just want to tell my neighbor

966
00:53:37,650 --> 00:53:42,930
about them and if I change something I

967
00:53:40,380 --> 00:53:45,690
want to tell them there's a change

968
00:53:42,930 --> 00:53:47,759
and so what happens is periodically you

969
00:53:45,690 --> 00:53:50,460
just go out like an in period you can be

970
00:53:47,760 --> 00:53:52,380
like thirty seconds you would go out and

971
00:53:50,460 --> 00:53:55,260
you would just and here's my latest

972
00:53:52,380 --> 00:53:57,930
database now the receiver again very

973
00:53:55,260 --> 00:53:59,640
simple when he receives the packet from

974
00:53:57,930 --> 00:54:01,379
you and it checks sums out and

975
00:53:59,640 --> 00:54:03,089
everything's good he throws away the old

976
00:54:01,380 --> 00:54:05,700
database and replaces it with what he

977
00:54:03,090 --> 00:54:07,860
just got well he actually compares first

978
00:54:05,700 --> 00:54:09,960
to make sure something changed if

979
00:54:07,860 --> 00:54:12,720
something changed he replaces it and he

980
00:54:09,960 --> 00:54:14,820
tells us higher layer protocol something

981
00:54:12,720 --> 00:54:17,549
changed that's it and then when you

982
00:54:14,820 --> 00:54:19,350
change something you immediately go

983
00:54:17,550 --> 00:54:22,440
ahead and transmit your PDU you don't

984
00:54:19,350 --> 00:54:24,270
wait for the periodic you know

985
00:54:22,440 --> 00:54:26,970
transmission so you can get a rapid

986
00:54:24,270 --> 00:54:29,250
update if you will but you know things

987
00:54:26,970 --> 00:54:31,980
settle down and just basically you're

988
00:54:29,250 --> 00:54:34,470
just exchanging a database so the

989
00:54:31,980 --> 00:54:36,300
version two is doing the same thing it's

990
00:54:34,470 --> 00:54:38,250
just that the database now will consist

991
00:54:36,300 --> 00:54:39,840
of more than one packet and so now we

992
00:54:38,250 --> 00:54:42,710
have to deal with how do we know we got

993
00:54:39,840 --> 00:54:44,910
all the packets and blah blah blah so

994
00:54:42,710 --> 00:54:47,280
there's this is where you get a lot of

995
00:54:44,910 --> 00:54:52,529
words and they're basically think of the

996
00:54:47,280 --> 00:54:54,930
the original lldp packet as a foundation

997
00:54:52,530 --> 00:54:57,780
PDU we call it so the original version

998
00:54:54,930 --> 00:55:01,350
one is is the same as the version one

999
00:54:57,780 --> 00:55:03,540
today it just has one additional PT LV

1000
00:55:01,350 --> 00:55:06,380
and the additional TLB is what we call a

1001
00:55:03,540 --> 00:55:09,600
manifest TLV and so what that is is

1002
00:55:06,380 --> 00:55:13,290
effectively a description cryptographic

1003
00:55:09,600 --> 00:55:16,460
hash check sums whatever of all of the

1004
00:55:13,290 --> 00:55:19,680
other extension PDUs okay and so when a

1005
00:55:16,460 --> 00:55:21,450
version one guy receives this he's not

1006
00:55:19,680 --> 00:55:23,879
gonna know what that TOB is so he just

1007
00:55:21,450 --> 00:55:25,200
ignores it he actually stores it but he

1008
00:55:23,880 --> 00:55:27,060
doesn't process he doesn't know what it

1009
00:55:25,200 --> 00:55:29,460
is so it doesn't do any he doesn't act

1010
00:55:27,060 --> 00:55:31,770
on it when a version 2 guy gets it he's

1011
00:55:29,460 --> 00:55:34,290
gonna look at that that manifest he's

1012
00:55:31,770 --> 00:55:36,180
gonna go okay I've got let's say seven

1013
00:55:34,290 --> 00:55:38,610
more PDUs out there let me make sure the

1014
00:55:36,180 --> 00:55:40,680
ones I have matched the check sums in

1015
00:55:38,610 --> 00:55:41,880
this manifest and if they match then

1016
00:55:40,680 --> 00:55:43,980
you're done everything's good

1017
00:55:41,880 --> 00:55:46,140
so I just received that one packet if

1018
00:55:43,980 --> 00:55:48,570
they don't match then that receivers

1019
00:55:46,140 --> 00:55:52,650
gonna go out and request to receive the

1020
00:55:48,570 --> 00:55:56,460
missing PDUs so again the whole database

1021
00:55:52,650 --> 00:56:00,720
it's basically a foundation PDU

1022
00:55:56,460 --> 00:56:02,160
plus these extension PDUs and yet if you

1023
00:56:00,720 --> 00:56:04,910
don't have a manifest at the act just

1024
00:56:02,160 --> 00:56:08,910
like a regular PU now the number of

1025
00:56:04,910 --> 00:56:14,190
additional extensions PDUs that I can

1026
00:56:08,910 --> 00:56:17,069
add to LLB pd d b2 is is limited by the

1027
00:56:14,190 --> 00:56:19,650
size of a TLB so a TLB he currently is

1028
00:56:17,070 --> 00:56:21,960
limited to 512 bytes so that puts a

1029
00:56:19,650 --> 00:56:24,030
restriction on how big we can make the

1030
00:56:21,960 --> 00:56:26,310
whole thing and that's we're playing

1031
00:56:24,030 --> 00:56:30,210
with the size of the manifest gives us a

1032
00:56:26,310 --> 00:56:33,330
bigger set or smaller set and so anytime

1033
00:56:30,210 --> 00:56:36,270
a data changes in one of these extension

1034
00:56:33,330 --> 00:56:38,009
PDUs the manifest would get updated that

1035
00:56:36,270 --> 00:56:40,080
would get sent over the receiver would

1036
00:56:38,010 --> 00:56:44,070
notice that it's changed and then he

1037
00:56:40,080 --> 00:56:47,130
would ask for the changes basically so

1038
00:56:44,070 --> 00:56:50,130
now we have extension PDUs these would

1039
00:56:47,130 --> 00:56:51,840
be ignored by a version one so they

1040
00:56:50,130 --> 00:56:53,610
wouldn't even see them via different

1041
00:56:51,840 --> 00:56:56,850
ethertype or we've talked about various

1042
00:56:53,610 --> 00:57:00,570
ways to do that and then it would look

1043
00:56:56,850 --> 00:57:02,279
somewhat like a version one PDU but it

1044
00:57:00,570 --> 00:57:05,490
would have some identifier on which

1045
00:57:02,280 --> 00:57:06,360
extension it is and it's sent as a

1046
00:57:05,490 --> 00:57:10,049
unicast

1047
00:57:06,360 --> 00:57:12,300
so lldp is multicast but if you if

1048
00:57:10,050 --> 00:57:14,370
you're you know real familiar with 802

1049
00:57:12,300 --> 00:57:17,790
standards it uses one of the special

1050
00:57:14,370 --> 00:57:20,160
multicasts which is used to just talk to

1051
00:57:17,790 --> 00:57:22,140
other bridges so it doesn't flood

1052
00:57:20,160 --> 00:57:24,210
through the network it is stopped by

1053
00:57:22,140 --> 00:57:26,850
every bridge so it acts a little bit

1054
00:57:24,210 --> 00:57:29,010
like a unicast but if you had a true

1055
00:57:26,850 --> 00:57:30,750
shared media like a old repeater or

1056
00:57:29,010 --> 00:57:33,270
something in there it would go to every

1057
00:57:30,750 --> 00:57:34,950
every person the extension P to use the

1058
00:57:33,270 --> 00:57:37,350
new ones that we're sending our unicast

1059
00:57:34,950 --> 00:57:39,390
so those would not flood anywhere or not

1060
00:57:37,350 --> 00:57:44,460
get propagated any further than they

1061
00:57:39,390 --> 00:57:46,500
need to and then we have a time to live

1062
00:57:44,460 --> 00:57:48,720
so when you when you in lldp when you

1063
00:57:46,500 --> 00:57:51,390
tell your neighbor about your your your

1064
00:57:48,720 --> 00:57:52,680
latest state there's a TTL that's

1065
00:57:51,390 --> 00:57:54,390
associated with that that means that

1066
00:57:52,680 --> 00:57:56,069
data is good for a certain amount of

1067
00:57:54,390 --> 00:57:59,460
time after that time you throw

1068
00:57:56,070 --> 00:58:01,620
everything away but or it gets updated

1069
00:57:59,460 --> 00:58:03,450
refreshed so it's again really pretty

1070
00:58:01,620 --> 00:58:07,460
straightforward that TTL will apply to

1071
00:58:03,450 --> 00:58:10,410
all the data across all the extensions

1072
00:58:07,460 --> 00:58:12,900
ok and so now we have another another

1073
00:58:10,410 --> 00:58:17,339
packet which is the request for PU so

1074
00:58:12,900 --> 00:58:20,400
this is one two person asks for all the

1075
00:58:17,339 --> 00:58:21,808
extensions he asks for the updates you

1076
00:58:20,400 --> 00:58:23,910
know a lot of text here I don't know

1077
00:58:21,809 --> 00:58:25,829
that it's overly important to go through

1078
00:58:23,910 --> 00:58:27,180
the minutiae here but if you have

1079
00:58:25,829 --> 00:58:29,069
questions about it we can

1080
00:58:27,180 --> 00:58:31,740
I think what's probably best is to look

1081
00:58:29,069 --> 00:58:35,549
at the the actual protocol here so here

1082
00:58:31,740 --> 00:58:37,618
we have two lldp agents on a wire the

1083
00:58:35,549 --> 00:58:39,569
one on the left let's say he makes a

1084
00:58:37,619 --> 00:58:42,150
change he reconfigures for some reason

1085
00:58:39,569 --> 00:58:44,940
LS PR adds adds an interface that's

1086
00:58:42,150 --> 00:58:47,250
gonna change one of the tlvs in the in

1087
00:58:44,940 --> 00:58:50,490
the overall database which is gonna

1088
00:58:47,250 --> 00:58:51,660
cause the manifest to change and so

1089
00:58:50,490 --> 00:58:54,240
we're gonna have what we call something

1090
00:58:51,660 --> 00:58:57,359
to change local which triggers me to

1091
00:58:54,240 --> 00:58:57,720
send a PD you out and I'll tell my

1092
00:58:57,359 --> 00:58:59,520
neighbor

1093
00:58:57,720 --> 00:59:02,279
now all I'm gonna send is the the

1094
00:58:59,520 --> 00:59:04,410
old-fashioned foundation PD you but it's

1095
00:59:02,280 --> 00:59:05,970
gonna have a different manifest so that

1096
00:59:04,410 --> 00:59:08,098
receivers going to get the packet he's

1097
00:59:05,970 --> 00:59:10,379
gonna look at it's different than what

1098
00:59:08,099 --> 00:59:13,020
he currently had and so he's gonna go

1099
00:59:10,380 --> 00:59:14,700
okay something changed and he's oh it's

1100
00:59:13,020 --> 00:59:16,680
in the manifest something's different in

1101
00:59:14,700 --> 00:59:18,660
the manifest now he's gonna go about the

1102
00:59:16,680 --> 00:59:21,058
process deciding exactly what is he

1103
00:59:18,660 --> 00:59:22,980
what's missing which extension is

1104
00:59:21,059 --> 00:59:26,400
missing and then he'll send a request

1105
00:59:22,980 --> 00:59:29,089
for that extension and then you know as

1106
00:59:26,400 --> 00:59:32,549
he can consume them the sender will

1107
00:59:29,089 --> 00:59:34,589
unicast the the the information back and

1108
00:59:32,549 --> 00:59:36,960
then eventually you go back to

1109
00:59:34,589 --> 00:59:38,279
everything settles down the change the

1110
00:59:36,960 --> 00:59:42,260
configuration change has been propagated

1111
00:59:38,279 --> 00:59:45,660
and you go back to normal lldp operation

1112
00:59:42,260 --> 00:59:48,240
so that's that's effectively the version

1113
00:59:45,660 --> 00:59:52,009
two pretty pretty straightforward

1114
00:59:48,240 --> 00:59:56,970
so I guess Randy to answer your question

1115
00:59:52,010 --> 00:59:58,980
we have the same lldp transmission we in

1116
00:59:56,970 --> 01:00:01,890
the tio V's I proposed in the previous

1117
00:59:58,980 --> 01:00:03,900
draft we only run one instance we're not

1118
01:00:01,890 --> 01:00:06,029
running an instance of lldp for every

1119
01:00:03,900 --> 01:00:07,559
virtual thing above us so we're just

1120
01:00:06,029 --> 01:00:09,960
running one instance on the physical

1121
01:00:07,559 --> 01:00:13,589
wire because we can distinguish the

1122
01:00:09,960 --> 01:00:16,440
information and any things are only a

1123
01:00:13,589 --> 01:00:18,720
lot of things are only sent when you

1124
01:00:16,440 --> 01:00:21,809
make a big change like you're saying

1125
01:00:18,720 --> 01:00:23,879
whenever I make a change the specific

1126
01:00:21,809 --> 01:00:26,730
PDU that held that change

1127
01:00:23,880 --> 01:00:30,299
be requested but you have this the same

1128
01:00:26,730 --> 01:00:33,690
periodic like 30 second of the single

1129
01:00:30,299 --> 01:00:35,369
foundation PD you just like lldp one so

1130
01:00:33,690 --> 01:00:36,869
it shouldn't be when things aren't

1131
01:00:35,369 --> 01:00:38,039
really tweaking and changing all the

1132
01:00:36,869 --> 01:00:41,339
time you shouldn't really see any

1133
01:00:38,039 --> 01:00:42,509
additional overhead than you used to and

1134
01:00:41,339 --> 01:00:45,500
when there is a change then there'll be

1135
01:00:42,509 --> 01:00:49,259
a little flurry of things and that's it

1136
01:00:45,500 --> 01:00:52,049
so any other questions on how the

1137
01:00:49,259 --> 01:00:56,970
protocol works or what what we're trying

1138
01:00:52,049 --> 01:00:58,950
to do pretty simple next steps is to

1139
01:00:56,970 --> 01:01:01,279
continue to the technical contributions

1140
01:00:58,950 --> 01:01:03,029
I mean love to have an open-source

1141
01:01:01,279 --> 01:01:06,059
implementation there's somebody to work

1142
01:01:03,029 --> 01:01:09,299
with on you know taking the open-source

1143
01:01:06,059 --> 01:01:11,069
lldp and and prototyping this these

1144
01:01:09,299 --> 01:01:16,259
particular changes to it so we can

1145
01:01:11,069 --> 01:01:17,490
better evaluate that yeah I I don't

1146
01:01:16,259 --> 01:01:19,799
personally have the time but I'd love to

1147
01:01:17,490 --> 01:01:23,069
love to do it if I had the time yeah a

1148
01:01:19,799 --> 01:01:25,769
see a synonym Cisco so this is good this

1149
01:01:23,069 --> 01:01:27,690
is happening independent of LS VR and

1150
01:01:25,769 --> 01:01:29,879
and hit ends and since you've done it

1151
01:01:27,690 --> 01:01:32,789
have you gotten like other use cases

1152
01:01:29,880 --> 01:01:35,009
people saying they're happy that this is

1153
01:01:32,789 --> 01:01:36,089
being done yeah good good point yeah I

1154
01:01:35,009 --> 01:01:37,799
mean Alice VR sort of

1155
01:01:36,089 --> 01:01:39,089
stimulated it because you had the

1156
01:01:37,799 --> 01:01:40,980
immediate need but there have been other

1157
01:01:39,089 --> 01:01:43,619
people that have come up and and and

1158
01:01:40,980 --> 01:01:46,380
already asked for it so there's there's

1159
01:01:43,619 --> 01:01:50,250
another standard going on a tour 2.1 qcj

1160
01:01:46,380 --> 01:01:53,009
which it does a provider backbone

1161
01:01:50,250 --> 01:01:54,809
bridging you know I said to VLAN mapping

1162
01:01:53,009 --> 01:01:57,569
thing and it's a little protocol that

1163
01:01:54,809 --> 01:02:00,839
sits on top of lldp as well and they

1164
01:01:57,569 --> 01:02:03,359
have a need to send more data than you

1165
01:02:00,839 --> 01:02:04,890
can fit I didn't talk about some of the

1166
01:02:03,359 --> 01:02:06,420
other things I mean general there's a

1167
01:02:04,890 --> 01:02:07,769
lot of vendors that have made a lot of

1168
01:02:06,420 --> 01:02:09,450
their own tlvs

1169
01:02:07,769 --> 01:02:11,549
and every protocol that we keep

1170
01:02:09,450 --> 01:02:15,029
inventing in dot one we keep adding

1171
01:02:11,549 --> 01:02:17,880
another TLV to negotiate it so so the

1172
01:02:15,029 --> 01:02:19,589
it's it's definitely a need so yeah and

1173
01:02:17,880 --> 01:02:22,019
this is done in the general sense right

1174
01:02:19,589 --> 01:02:24,299
it wasn't just done for lol SBR but we

1175
01:02:22,019 --> 01:02:30,089
think that was one of the key people

1176
01:02:24,299 --> 01:02:31,559
that could use it we're yeah so again

1177
01:02:30,089 --> 01:02:33,150
we're in the process of saying okay

1178
01:02:31,559 --> 01:02:35,400
we're going to make changes to the

1179
01:02:33,150 --> 01:02:36,880
current standard to version two what are

1180
01:02:35,400 --> 01:02:38,980
those changes

1181
01:02:36,880 --> 01:02:40,329
the next step is to actually create what

1182
01:02:38,980 --> 01:02:42,339
we call an editors draft or an

1183
01:02:40,329 --> 01:02:43,269
individual contribution individual draft

1184
01:02:42,339 --> 01:02:46,150
because there hasn't been an editor

1185
01:02:43,269 --> 01:02:50,200
assigned yet but usually that's the

1186
01:02:46,150 --> 01:02:52,660
person who puts that together and and I

1187
01:02:50,200 --> 01:02:54,220
welcome a etf participation I what I

1188
01:02:52,660 --> 01:02:55,839
should have put on here was a list of

1189
01:02:54,220 --> 01:03:00,160
when our next meeting is and how you can

1190
01:02:55,839 --> 01:03:04,089
how you can participate care hey K

1191
01:03:00,160 --> 01:03:06,129
because I as I listen to this I think

1192
01:03:04,089 --> 01:03:09,339
it's an amazing thing and I think the

1193
01:03:06,130 --> 01:03:11,859
work should be carried out I didn't I I

1194
01:03:09,339 --> 01:03:15,700
get a feel as I look at it is it this is

1195
01:03:11,859 --> 01:03:17,970
two different transports at at a very

1196
01:03:15,700 --> 01:03:20,288
different level and I think we can

1197
01:03:17,970 --> 01:03:22,899
progress both of them in parallel as

1198
01:03:20,289 --> 01:03:27,819
long as we have a common TLB layers and

1199
01:03:22,900 --> 01:03:29,859
then just point it to the industry if

1200
01:03:27,819 --> 01:03:32,799
you will for lack of the better terms to

1201
01:03:29,859 --> 01:03:35,410
see who wants what kind of transport

1202
01:03:32,799 --> 01:03:37,450
they need depending on how the fabrics

1203
01:03:35,410 --> 01:03:40,210
are being built but I think that's the

1204
01:03:37,450 --> 01:03:42,368
way to code that's pretty super sure I

1205
01:03:40,210 --> 01:03:45,670
certainly wasn't proposing that this is

1206
01:03:42,369 --> 01:03:47,950
in all a exclusive alternative what's

1207
01:03:45,670 --> 01:03:50,950
going on with l3 DL now there's gonna be

1208
01:03:47,950 --> 01:03:52,839
other use cases for this as well what we

1209
01:03:50,950 --> 01:03:54,279
understand from talking to various

1210
01:03:52,839 --> 01:03:57,009
operators is they're already running

1211
01:03:54,279 --> 01:03:59,069
lldp anyway so why not

1212
01:03:57,009 --> 01:04:01,750
you know let's try to try to add to it

1213
01:03:59,069 --> 01:04:07,420
but there certainly was an intention to

1214
01:04:01,750 --> 01:04:10,269
be an exclusive method and then I guess

1215
01:04:07,420 --> 01:04:12,309
yeah as I mentioned IETF people can

1216
01:04:10,269 --> 01:04:14,200
participate we're in entering the early

1217
01:04:12,309 --> 01:04:16,390
stages of what we call a task group

1218
01:04:14,200 --> 01:04:18,368
ballot and it's up to the editor we can

1219
01:04:16,390 --> 01:04:20,170
accept comments from anybody it's not to

1220
01:04:18,369 --> 01:04:21,880
get to the later stages where it kind of

1221
01:04:20,170 --> 01:04:23,819
gets a little bit more closed and

1222
01:04:21,880 --> 01:04:26,529
membership required blah blah blah but

1223
01:04:23,819 --> 01:04:29,799
early on there's no restrictions for

1224
01:04:26,529 --> 01:04:36,039
participating so you know Philip II can

1225
01:04:29,799 --> 01:04:39,339
do that yeah thanks for the update and

1226
01:04:36,039 --> 01:04:45,430
both you and I think hear something like

1227
01:04:39,339 --> 01:04:47,609
you said the same thing that you know to

1228
01:04:45,430 --> 01:04:56,519
one maybe eh

1229
01:04:47,609 --> 01:04:59,519
so you can see all the work and and

1230
01:04:56,519 --> 01:05:01,609
through the L our two alternatives who

1231
01:04:59,519 --> 01:05:03,238
basically do the same thing right

1232
01:05:01,609 --> 01:05:03,890
something like you both said the same

1233
01:05:03,239 --> 01:05:08,789
thing

1234
01:05:03,890 --> 01:05:10,799
no well for carrying the information

1235
01:05:08,789 --> 01:05:13,410
that you want to exchange for LCR I

1236
01:05:10,799 --> 01:05:14,640
think there's two ways to you have two

1237
01:05:13,410 --> 01:05:17,430
protocols that could meet that objective

1238
01:05:14,640 --> 01:05:21,058
that Elfi DL does some other things as

1239
01:05:17,430 --> 01:05:22,440
well but yeah like the liveness alright

1240
01:05:21,059 --> 01:05:24,150
so the question that I want to ask just

1241
01:05:22,440 --> 01:05:30,150
because we need to do some coordination

1242
01:05:24,150 --> 01:05:33,049
going forward and all this stuff so you

1243
01:05:30,150 --> 01:05:35,969
just said that there's some extra this

1244
01:05:33,049 --> 01:05:38,969
some extra working so Metro features an

1245
01:05:35,969 --> 01:05:43,469
LP DL that are not covered here

1246
01:05:38,969 --> 01:05:45,959
so the the inverse question is does LD

1247
01:05:43,469 --> 01:05:48,690
PV to satisfy the requirements that we

1248
01:05:45,959 --> 01:05:51,479
need for LS we are are the things

1249
01:05:48,690 --> 01:05:56,119
missing that we get rid of through the

1250
01:05:51,479 --> 01:05:58,739
other we don't get with LD P b2 or not

1251
01:05:56,119 --> 01:06:00,959
what since you quote in mean cute

1252
01:05:58,739 --> 01:06:03,390
pretend like I'm just I don't know you

1253
01:06:00,959 --> 01:06:06,390
said you stood there just and this is

1254
01:06:03,390 --> 01:06:09,900
this question not necessarily for for

1255
01:06:06,390 --> 01:06:11,549
you Paul or for anyone else it's more

1256
01:06:09,900 --> 01:06:13,529
question to the you know to the working

1257
01:06:11,549 --> 01:06:17,430
groups want to understand where we think

1258
01:06:13,529 --> 01:06:21,479
we are so now he's not answering now

1259
01:06:17,430 --> 01:06:24,118
he's looking the other way look since he

1260
01:06:21,479 --> 01:06:25,968
quoted Mikael written arcus um I was

1261
01:06:24,119 --> 01:06:28,709
simply saying they're two different

1262
01:06:25,969 --> 01:06:32,569
transports and therefore two different

1263
01:06:28,709 --> 01:06:35,069
semantics as long as we have common TLB

1264
01:06:32,569 --> 01:06:37,979
definitions and set of TL ways that go

1265
01:06:35,069 --> 01:06:41,369
onto different transports depending on

1266
01:06:37,979 --> 01:06:43,410
which fabric wants what transport and

1267
01:06:41,369 --> 01:06:46,499
like all said some fabrics to deploy

1268
01:06:43,410 --> 01:06:49,649
lldp today some fabrics very deploy

1269
01:06:46,499 --> 01:06:52,738
already L so I think working do taking

1270
01:06:49,650 --> 01:06:54,690
both work in parallels yeah so what

1271
01:06:52,739 --> 01:06:58,469
you're saying is that LS we are could

1272
01:06:54,690 --> 01:07:00,319
use what are the other or both right I

1273
01:06:58,469 --> 01:07:05,069
think you missed

1274
01:07:00,319 --> 01:07:08,759
darkus and IJ um they are not the same

1275
01:07:05,069 --> 01:07:12,869
TVs but right that can be okay if

1276
01:07:08,759 --> 01:07:15,089
they're the same semantics it's not

1277
01:07:12,869 --> 01:07:17,959
clear that they're saying semantics

1278
01:07:15,089 --> 01:07:21,739
because we haven't really dug into this

1279
01:07:17,959 --> 01:07:26,098
okay and the semantics include not just

1280
01:07:21,739 --> 01:07:30,630
the content of the TL V's but what

1281
01:07:26,099 --> 01:07:32,999
happens in is their state and how the

1282
01:07:30,630 --> 01:07:39,029
two states are maintained at both end

1283
01:07:32,999 --> 01:07:42,660
and what's the story about failures etc

1284
01:07:39,029 --> 01:07:47,069
so I think and I'm not saying good or

1285
01:07:42,660 --> 01:07:49,890
bad I'm saying we haven't looked so to

1286
01:07:47,069 --> 01:07:52,920
answer your question I think we don't

1287
01:07:49,890 --> 01:08:01,348
know is it the only answer I could give

1288
01:07:52,920 --> 01:08:03,989
certainly I okay but right so we

1289
01:08:01,349 --> 01:08:06,920
creative at some point we knew something

1290
01:08:03,989 --> 01:08:08,789
more right since there's already

1291
01:08:06,920 --> 01:08:10,890
collaboration corporation you know it

1292
01:08:08,789 --> 01:08:13,349
would be nice I didn't notice that you

1293
01:08:10,890 --> 01:08:14,339
changed the tlvs I think you said at

1294
01:08:13,349 --> 01:08:16,980
some point that in the other

1295
01:08:14,339 --> 01:08:19,469
presentation that it was basically the

1296
01:08:16,979 --> 01:08:22,259
same thing you're actually normally

1297
01:08:19,469 --> 01:08:23,698
normatively referencing the 3d I'll

1298
01:08:22,259 --> 01:08:26,399
graph for the definition of all the all

1299
01:08:23,698 --> 01:08:30,540
the fields but you took things out like

1300
01:08:26,399 --> 01:08:33,960
counts or something like that does that

1301
01:08:30,540 --> 01:08:37,109
mean that we can't just define the TV's

1302
01:08:33,960 --> 01:08:39,118
once and use them in both protocols no I

1303
01:08:37,109 --> 01:08:43,259
think you could define the T Ovie's once

1304
01:08:39,118 --> 01:08:46,229
and use them in both places I just and I

1305
01:08:43,259 --> 01:08:48,238
could provide this calm feedback to the

1306
01:08:46,229 --> 01:08:50,638
l3 Li there I don't think there was a

1307
01:08:48,238 --> 01:08:52,888
need for some of the feeling that the

1308
01:08:50,639 --> 01:08:58,400
Ovie's but I certainly could have mapped

1309
01:08:52,889 --> 01:09:00,540
it better or more identical and that

1310
01:08:58,399 --> 01:09:02,969
there's definitely a different packing

1311
01:09:00,540 --> 01:09:06,328
problem when you look at the overall set

1312
01:09:02,969 --> 01:09:08,130
of if I have 50 IP interfaces that I

1313
01:09:06,328 --> 01:09:10,589
want to advertise here the way they get

1314
01:09:08,130 --> 01:09:13,859
packed in lldp is gonna look different

1315
01:09:10,589 --> 01:09:16,469
than the way they got packed in in a TLB

1316
01:09:13,859 --> 01:09:20,159
it might be one TLV in l3 DL but they

1317
01:09:16,469 --> 01:09:22,770
might be three or four tlvs in lldp that

1318
01:09:20,158 --> 01:09:24,868
have the same format so no I mean I

1319
01:09:22,770 --> 01:09:29,190
think it's possible to define

1320
01:09:24,868 --> 01:09:32,130
potentially defined identical tlvs the

1321
01:09:29,189 --> 01:09:34,318
security one I was like again I'm not

1322
01:09:32,130 --> 01:09:36,779
entirely sure we want to sign every TLV

1323
01:09:34,319 --> 01:09:41,190
that that's a discussion to have that's

1324
01:09:36,779 --> 01:09:43,679
probably an aspect of the way lldp packs

1325
01:09:41,189 --> 01:09:44,879
its tlvs because it has a restricted

1326
01:09:43,679 --> 01:09:47,190
side so I don't want to waste

1327
01:09:44,880 --> 01:09:49,500
however many bytes signing every single

1328
01:09:47,189 --> 01:09:52,979
one of them I'd rather sign the block of

1329
01:09:49,500 --> 01:09:55,710
them so that's the difference that's

1330
01:09:52,979 --> 01:09:58,019
probably the one main difference that I

1331
01:09:55,710 --> 01:10:00,330
see in the TLV formats otherwise I think

1332
01:09:58,020 --> 01:10:04,170
they could be identical okay

1333
01:10:00,330 --> 01:10:08,219
ready again excuse me Alvaro is he's got

1334
01:10:04,170 --> 01:10:09,420
a real estate problem yeah so first care

1335
01:10:08,219 --> 01:10:13,409
you don't have a real estate problem

1336
01:10:09,420 --> 01:10:15,449
because we can pick out so the

1337
01:10:13,409 --> 01:10:24,150
constraints on what happens to the TL

1338
01:10:15,449 --> 01:10:27,690
visa now you pack them yeah okay so all

1339
01:10:24,150 --> 01:10:30,750
um you know I'll do my best to make sure

1340
01:10:27,690 --> 01:10:32,879
I announced to lsv are when we're you

1341
01:10:30,750 --> 01:10:36,330
know making drafts available of our

1342
01:10:32,880 --> 01:10:38,369
protocol and again Oh inviting people to

1343
01:10:36,330 --> 01:10:40,320
participate in the process and of course

1344
01:10:38,369 --> 01:10:41,369
coming to our meetings is fine too

1345
01:10:40,320 --> 01:10:43,710
that's great

1346
01:10:41,369 --> 01:10:46,019
and I can announce that as well whatever

1347
01:10:43,710 --> 01:10:54,199
you guys want me to do there just let me

1348
01:10:46,020 --> 01:10:54,199
know okay any other questions okay

1349
01:10:59,760 --> 01:11:05,560
well I think we actually you know are

1350
01:11:01,930 --> 01:11:07,930
are at the end here and I also you know

1351
01:11:05,560 --> 01:11:09,070
between you know the common dlv kind of

1352
01:11:07,930 --> 01:11:11,530
structure I think it's an important

1353
01:11:09,070 --> 01:11:12,820
thing because so what we have seen for

1354
01:11:11,530 --> 01:11:16,090
example you know one of the complexities

1355
01:11:12,820 --> 01:11:18,580
I want to avoid is between some of the

1356
01:11:16,090 --> 01:11:20,800
you know IGP tlvs being constructed and

1357
01:11:18,580 --> 01:11:23,860
then the encoding with BG pls involve to

1358
01:11:20,800 --> 01:11:25,300
it it's image sometimes to have like a

1359
01:11:23,860 --> 01:11:27,009
magical decoder ring as was mentioned

1360
01:11:25,300 --> 01:11:29,170
before it would be very nice if we can

1361
01:11:27,010 --> 01:11:30,910
actually avoid that and for that you

1362
01:11:29,170 --> 01:11:32,860
know I would really you know appreciate

1363
01:11:30,910 --> 01:11:34,990
collaboration between the two different

1364
01:11:32,860 --> 01:11:36,880
transport mechanisms it would make life

1365
01:11:34,990 --> 01:11:38,260
a lot easier going forward and also I

1366
01:11:36,880 --> 01:11:38,800
think for vendors having something

1367
01:11:38,260 --> 01:11:43,240
common

1368
01:11:38,800 --> 01:11:45,580
it's very appreciated so if nobody else

1369
01:11:43,240 --> 01:11:49,719
has anything to say then I think we I'm

1370
01:11:45,580 --> 01:11:52,240
giving you back about 20 minutes yes

1371
01:11:49,720 --> 01:11:55,210
okay I one last comment I I I don't

1372
01:11:52,240 --> 01:11:57,969
think we got a chance to address it

1373
01:11:55,210 --> 01:12:00,280
while Randy was presenting l3 DL but we

1374
01:11:57,970 --> 01:12:05,200
have an implementation for l3 DL that is

1375
01:12:00,280 --> 01:12:07,000
fully compliant and I just wanted the

1376
01:12:05,200 --> 01:12:08,950
working group to know so happy to work

1377
01:12:07,000 --> 01:12:13,450
with if there's any other implementation

1378
01:12:08,950 --> 01:12:18,900
out there would be happy to do summit

1379
01:12:13,450 --> 01:12:18,900
drop testing okay thank you

1380
01:12:19,050 --> 01:12:27,700
who has the last blue sheet there should

1381
01:12:25,900 --> 01:12:30,160
be one more clipboard okay I'll come get

1382
01:12:27,700 --> 01:12:33,120
it it's good okay

1383
01:12:30,160 --> 01:12:33,120
that's it folks thank you

