1
00:00:04,630 --> 00:00:23,189
but if I need Aaron what do you see that

2
00:00:07,450 --> 00:00:23,189
there's a problem you know okay guys

3
00:00:23,609 --> 00:00:33,970
welcome back to the second session and

4
00:00:29,699 --> 00:00:36,100
I've done a slight agenda bashing here

5
00:00:33,970 --> 00:00:39,339
so we had one leftover item from

6
00:00:36,100 --> 00:00:43,390
yesterday which got pushed to today this

7
00:00:39,340 --> 00:00:45,550
is the TR TX us summary dick is going to

8
00:00:43,390 --> 00:00:49,359
do that and followed up by a short

9
00:00:45,550 --> 00:00:54,660
summary from Aaron about the site

10
00:00:49,359 --> 00:00:57,190
discussions on OS 2.1 brian's next bebop

11
00:00:54,660 --> 00:00:58,690
to austin has two presentations on

12
00:00:57,190 --> 00:01:01,000
pushed authorization and rich

13
00:00:58,690 --> 00:01:02,980
authorization and then aaron is going to

14
00:01:01,000 --> 00:01:05,199
come up again and talk about the

15
00:01:02,980 --> 00:01:08,080
intermediary metadata and then we have

16
00:01:05,199 --> 00:01:10,509
Travis with some flames discussions

17
00:01:08,080 --> 00:01:12,520
that's all I have are there any other

18
00:01:10,509 --> 00:01:15,270
things that you would like to meet to

19
00:01:12,520 --> 00:01:33,908
bash in your gender

20
00:01:15,270 --> 00:01:42,880
nothing could I might oh wait I'm Tony

21
00:01:33,909 --> 00:01:47,649
can you can you again scribe yeah an

22
00:01:42,880 --> 00:01:50,740
award-winning scribe do we do we have

23
00:01:47,649 --> 00:01:54,969
charm this was Ludwig was doing it last

24
00:01:50,740 --> 00:01:57,460
time Ludwig are you in the room okay

25
00:01:54,969 --> 00:01:59,408
awesome things there wasn't there wasn't

26
00:01:57,460 --> 00:02:01,600
I don't think there was anything

27
00:01:59,409 --> 00:02:09,190
yesterday right on Chava

28
00:02:01,600 --> 00:02:14,489
but but still it's good you know yep

29
00:02:09,190 --> 00:02:19,459
thanks umm very good we are good okay

30
00:02:14,489 --> 00:02:24,510
their card who is not at the PX off boss

31
00:02:19,459 --> 00:02:26,310
Coney you took notes so maybe you

32
00:02:24,510 --> 00:02:30,829
weren't there maybe that explains the

33
00:02:26,310 --> 00:02:33,330
notes okay so for the people out there

34
00:02:30,830 --> 00:02:37,190
quick summary we talked about a number

35
00:02:33,330 --> 00:02:39,569
of issues all right it's right here

36
00:02:37,190 --> 00:02:41,400
passing the request by a redirect has a

37
00:02:39,569 --> 00:02:43,649
bunch of limitations and security issues

38
00:02:41,400 --> 00:02:46,680
there's an awful lot of BCPs and

39
00:02:43,650 --> 00:02:49,440
extensions that it's complicated you

40
00:02:46,680 --> 00:02:51,150
know Justin put up this slide they just

41
00:02:49,440 --> 00:02:53,670
showed a whole bunch of the specs as

42
00:02:51,150 --> 00:02:57,690
being part of the issue a number of new

43
00:02:53,670 --> 00:02:59,518
use cases were described PSD to IOT user

44
00:02:57,690 --> 00:03:01,590
not present Annabelle had some

45
00:02:59,519 --> 00:03:03,200
interesting slides about some types of

46
00:03:01,590 --> 00:03:08,610
interactions that are not covered

47
00:03:03,200 --> 00:03:13,670
currently in o2 and then there were two

48
00:03:08,610 --> 00:03:17,850
proposals presented one of them TXI aka

49
00:03:13,670 --> 00:03:21,350
XYZ potentially ba three versus sort of

50
00:03:17,850 --> 00:03:24,780
rawr par that are really extending to

51
00:03:21,350 --> 00:03:27,769
the questions then are do we pursue both

52
00:03:24,780 --> 00:03:29,880
of these one of or the other of them

53
00:03:27,769 --> 00:03:31,470
that's kind of one of the first

54
00:03:29,880 --> 00:03:32,730
questions that came up out of that

55
00:03:31,470 --> 00:03:34,319
whether we want to talk about those

56
00:03:32,730 --> 00:03:37,459
questions I guess first of all as any

57
00:03:34,319 --> 00:03:47,190
questions are and sort of as a summary

58
00:03:37,459 --> 00:03:49,400
people might have know okay well there

59
00:03:47,190 --> 00:04:00,780
was three hands going up so I was

60
00:03:49,400 --> 00:04:02,900
wanting to be inclusive it's 2019 yeah

61
00:04:00,780 --> 00:04:08,480
do we want to have any discussion or

62
00:04:02,900 --> 00:04:10,940
talk about this these questions okay

63
00:04:08,480 --> 00:04:15,569
[Music]

64
00:04:10,940 --> 00:04:18,108
right no one's going to the mic or

65
00:04:15,569 --> 00:04:18,108
anything though

66
00:04:19,570 --> 00:04:24,219
so I think one of the other kind of key

67
00:04:22,060 --> 00:04:26,710
outcomes from that is that we committed

68
00:04:24,220 --> 00:04:29,710
to having discussion further discussion

69
00:04:26,710 --> 00:04:32,650
on T X auth around what would if we were

70
00:04:29,710 --> 00:04:36,849
to pursue the new option of a3 oh we

71
00:04:32,650 --> 00:04:38,409
were gonna do that on GX all right but I

72
00:04:36,850 --> 00:04:40,660
thought since we're here we could see if

73
00:04:38,410 --> 00:04:42,880
there's more thoughts around this

74
00:04:40,660 --> 00:04:48,070
working group or a new working group if

75
00:04:42,880 --> 00:04:52,270
anybody had any comments around that we

76
00:04:48,070 --> 00:04:58,630
had him Kicks slide meeting this morning

77
00:04:52,270 --> 00:05:00,250
if I could ask or if anyone has ideas or

78
00:04:58,630 --> 00:05:01,780
approaches that would help us to come up

79
00:05:00,250 --> 00:05:04,420
with the answer to that decision right

80
00:05:01,780 --> 00:05:07,000
so one of the conclusions we came up

81
00:05:04,420 --> 00:05:09,850
with in the site meeting this morning

82
00:05:07,000 --> 00:05:12,130
was we would want a different mailing

83
00:05:09,850 --> 00:05:14,200
list than the Olas list for discussing a

84
00:05:12,130 --> 00:05:16,180
ton of brand new work that wasn't an

85
00:05:14,200 --> 00:05:18,969
extension if we really do that

86
00:05:16,180 --> 00:05:22,450
and that otherwise it's hard to track

87
00:05:18,970 --> 00:05:25,900
for people and probably have dedicated

88
00:05:22,450 --> 00:05:28,840
meetings to a big chunk of work and then

89
00:05:25,900 --> 00:05:30,669
another question or potential would be

90
00:05:28,840 --> 00:05:34,659
to do a design team within the existing

91
00:05:30,670 --> 00:05:39,150
working group so um there were a few

92
00:05:34,660 --> 00:05:41,410
folks at the buff who raised a hand to

93
00:05:39,150 --> 00:05:45,130
who were willing to work on this topic

94
00:05:41,410 --> 00:05:47,410
I'm now it's some time passed um did you

95
00:05:45,130 --> 00:05:49,900
did you find some some more people who

96
00:05:47,410 --> 00:05:51,520
are the same type of people who are

97
00:05:49,900 --> 00:05:53,890
willing to work together like how do we

98
00:05:51,520 --> 00:05:56,530
how do we get this kick-started like who

99
00:05:53,890 --> 00:05:58,210
would lead the design team and and who

100
00:05:56,530 --> 00:05:59,650
would be willing to actually be on an

101
00:05:58,210 --> 00:06:01,330
assigned team to work on it besides

102
00:05:59,650 --> 00:06:07,060
obviously they're the authors of the

103
00:06:01,330 --> 00:06:08,830
proposals I hope well there is a Torsen

104
00:06:07,060 --> 00:06:11,110
who has had his proposals which are

105
00:06:08,830 --> 00:06:18,130
really an extension so that seems kind

106
00:06:11,110 --> 00:06:20,860
of clear-cut work and then there which

107
00:06:18,130 --> 00:06:25,480
of today we're not talking and I think

108
00:06:20,860 --> 00:06:28,810
that on the agenda today is X Y Z T X ah

109
00:06:25,480 --> 00:06:30,220
stuff right yeah so the question is

110
00:06:28,810 --> 00:06:32,110
would there be people that would work on

111
00:06:30,220 --> 00:06:35,680
that yeah

112
00:06:32,110 --> 00:06:37,150
so sorry I got confused along the way

113
00:06:35,680 --> 00:06:42,340
we're talking about a design team with

114
00:06:37,150 --> 00:06:46,750
what scope so the question it would be

115
00:06:42,340 --> 00:06:49,448
if we're doing TX off and if it was in

116
00:06:46,750 --> 00:06:52,629
the Roth working group versus being a

117
00:06:49,449 --> 00:06:55,000
separate working group would you do a do

118
00:06:52,629 --> 00:06:59,830
design team for the TX off work within

119
00:06:55,000 --> 00:07:01,439
the OAuth working group that was that

120
00:06:59,830 --> 00:07:08,530
clearer

121
00:07:01,439 --> 00:07:12,940
I think Justin Richards just to maybe

122
00:07:08,530 --> 00:07:14,619
clarify a little bit these there was we

123
00:07:12,940 --> 00:07:16,509
had a side meeting earlier today these

124
00:07:14,620 --> 00:07:18,219
were all brought up as potential avenues

125
00:07:16,509 --> 00:07:20,530
and options of where the work can be

126
00:07:18,219 --> 00:07:21,879
done and how the work can be done this

127
00:07:20,530 --> 00:07:23,258
isn't saying that there was a bunch of

128
00:07:21,879 --> 00:07:24,819
people that said we should do a design

129
00:07:23,259 --> 00:07:26,259
team or something like that but just

130
00:07:24,819 --> 00:07:28,509
that would be something that would be

131
00:07:26,259 --> 00:07:30,460
more directly applicable to the OAuth

132
00:07:28,509 --> 00:07:33,069
working group there was a general

133
00:07:30,460 --> 00:07:35,770
feeling in the room and the side meeting

134
00:07:33,069 --> 00:07:38,110
though as dick was saying that it at

135
00:07:35,770 --> 00:07:41,020
least would need its own space like its

136
00:07:38,110 --> 00:07:44,199
own mailing list to kind of keep the

137
00:07:41,020 --> 00:07:47,740
focus on that whether that's an offshoot

138
00:07:44,199 --> 00:07:49,960
of this list or if it's a sorry offering

139
00:07:47,740 --> 00:07:53,620
to this group working group or a new

140
00:07:49,960 --> 00:07:56,349
working group or something else there

141
00:07:53,620 --> 00:07:58,389
was a general feeling that it's would be

142
00:07:56,349 --> 00:08:00,628
a big enough piece of work that having

143
00:07:58,389 --> 00:08:02,379
its own discussion space is important

144
00:08:00,629 --> 00:08:04,779
okay I just want to make sure I'm

145
00:08:02,379 --> 00:08:07,270
tracking where you have an OAuth list we

146
00:08:04,779 --> 00:08:12,490
have a TX list and we're saying we need

147
00:08:07,270 --> 00:08:15,099
a third no no no we would use we would

148
00:08:12,490 --> 00:08:17,830
use TX auth like whatever because it's

149
00:08:15,099 --> 00:08:22,150
like whatever that gets associated with

150
00:08:17,830 --> 00:08:22,628
we would use TX I'm sorry no no sorry

151
00:08:22,150 --> 00:08:26,560
about that

152
00:08:22,629 --> 00:08:29,580
although summarize it again if the TX

153
00:08:26,560 --> 00:08:32,948
off work was in the OAuth working group

154
00:08:29,580 --> 00:08:36,478
discussion for the TX auth were to be on

155
00:08:32,948 --> 00:08:38,740
a separate list the TX off list versus

156
00:08:36,479 --> 00:08:41,199
rolling it all back to the OAuth list

157
00:08:38,740 --> 00:08:43,380
it's Thursday thank you okay okay no

158
00:08:41,198 --> 00:08:43,380
worries

159
00:08:44,779 --> 00:08:48,800
there's no other part of this was just

160
00:08:46,490 --> 00:08:49,939
to bring everybody up to speed and some

161
00:08:48,800 --> 00:09:07,279
of the summary around the side meeting

162
00:08:49,939 --> 00:09:12,199
this morning okay Mike Jones I was

163
00:09:07,279 --> 00:09:15,139
waiting my turn to your question of

164
00:09:12,199 --> 00:09:20,959
whether if we do this work which isn't I

165
00:09:15,139 --> 00:09:23,529
think a decided question I said it is

166
00:09:20,959 --> 00:09:27,349
not a decided question as far as I know

167
00:09:23,529 --> 00:09:30,350
I strongly believe that it should be in

168
00:09:27,350 --> 00:09:34,490
the Roth working group because that's

169
00:09:30,350 --> 00:09:37,100
where the collection of domain expertise

170
00:09:34,490 --> 00:09:40,189
is and in particular security expertise

171
00:09:37,100 --> 00:09:55,220
about what can go terribly wrong in

172
00:09:40,189 --> 00:09:56,809
protocols of this shape I'm confused I

173
00:09:55,220 --> 00:09:59,089
feel like we're really getting a lot of

174
00:09:56,809 --> 00:10:01,639
what we talked about TX also we want to

175
00:09:59,089 --> 00:10:03,139
get a sense of the room of where we

176
00:10:01,639 --> 00:10:04,519
think the work and it's going to get

177
00:10:03,139 --> 00:10:08,379
done and that's the different

178
00:10:04,519 --> 00:10:08,379
conversation than we had at the ball

179
00:10:10,389 --> 00:10:19,680
okay keep going there so lisanna I would

180
00:10:15,920 --> 00:10:21,610
argue that if we're if we're gonna do

181
00:10:19,680 --> 00:10:25,939
[Music]

182
00:10:21,610 --> 00:10:31,100
this in a war then it in practical terms

183
00:10:25,939 --> 00:10:35,800
probably means three slots per week and

184
00:10:31,100 --> 00:10:38,089
it you know it will be quite a strain on

185
00:10:35,800 --> 00:10:40,128
the current working group sort of the

186
00:10:38,089 --> 00:10:43,850
management resources or the working

187
00:10:40,129 --> 00:10:45,819
group and that may need we may need to

188
00:10:43,850 --> 00:10:49,100
assign extra resources to cover that

189
00:10:45,819 --> 00:10:56,479
both seems to have enough on its plate

190
00:10:49,100 --> 00:10:58,080
as it is comment on that it's it remains

191
00:10:56,480 --> 00:11:00,270
to be seen if

192
00:10:58,080 --> 00:11:02,760
new work starts whether than existing

193
00:11:00,270 --> 00:11:04,980
work then slows down because I could

194
00:11:02,760 --> 00:11:06,390
imagine that some of you since y'all

195
00:11:04,980 --> 00:11:11,310
since we're talking about the same

196
00:11:06,390 --> 00:11:14,520
people here that they may decide working

197
00:11:11,310 --> 00:11:16,859
on one sort of tea eggs also as sort of

198
00:11:14,520 --> 00:11:20,370
the the regular ORS at some point in

199
00:11:16,860 --> 00:11:23,370
time right I would assume I you guys you

200
00:11:20,370 --> 00:11:24,840
guys need to decide you you or do you

201
00:11:23,370 --> 00:11:26,250
want to Bush you come up with an

202
00:11:24,840 --> 00:11:28,710
extension Bush it here and push it there

203
00:11:26,250 --> 00:11:32,970
or what's the what's your thinking on

204
00:11:28,710 --> 00:11:35,700
that Annabel Backman Amazon I think it's

205
00:11:32,970 --> 00:11:40,620
pretty unlikely or unrealistic to think

206
00:11:35,700 --> 00:11:45,540
that work on Ross 2.0 and its extensions

207
00:11:40,620 --> 00:11:46,920
is going to halt the reason I i think

208
00:11:45,540 --> 00:11:48,959
it's unrealistic that is even going to

209
00:11:46,920 --> 00:11:51,810
significantly slow down because people

210
00:11:48,960 --> 00:11:53,730
are working on those extensions to solve

211
00:11:51,810 --> 00:11:56,790
immediate needs they have those needs

212
00:11:53,730 --> 00:11:58,920
are not going to go away just because we

213
00:11:56,790 --> 00:12:00,780
started to think about a bigger better

214
00:11:58,920 --> 00:12:03,569
way to solve these problems

215
00:12:00,780 --> 00:12:06,199
so the I expect that work to continue to

216
00:12:03,570 --> 00:12:09,930
you know for some time at a similar pace

217
00:12:06,200 --> 00:12:11,640
at least for the near future so I don't

218
00:12:09,930 --> 00:12:13,530
I don't really see this as three

219
00:12:11,640 --> 00:12:17,189
possibilities we do one we do the other

220
00:12:13,530 --> 00:12:19,770
or both I really see it as we do you

221
00:12:17,190 --> 00:12:29,160
know what we're doing now only or we do

222
00:12:19,770 --> 00:12:34,140
both make Jones to your question about

223
00:12:29,160 --> 00:12:37,170
well are we rehashing something from my

224
00:12:34,140 --> 00:12:39,150
point of view I was in the buff there

225
00:12:37,170 --> 00:12:42,540
was no conclusion out of the bath to do

226
00:12:39,150 --> 00:12:46,290
new work there's a question on the floor

227
00:12:42,540 --> 00:12:49,290
about if we do this work do we do it in

228
00:12:46,290 --> 00:12:51,839
the oauth working group and i think

229
00:12:49,290 --> 00:12:54,240
again because the security expertise is

230
00:12:51,840 --> 00:12:57,030
here it should definitely be in the

231
00:12:54,240 --> 00:12:58,920
oauth working group if we do new work

232
00:12:57,030 --> 00:13:01,709
there's a question to the 80's and the

233
00:12:58,920 --> 00:13:04,969
chairs whether that would involve a

234
00:13:01,710 --> 00:13:06,920
reach are turing i think it would it

235
00:13:04,970 --> 00:13:12,320
would

236
00:13:06,920 --> 00:13:14,389
I mean absolutely I can - I completely

237
00:13:12,320 --> 00:13:15,529
agree with your surgery we were

238
00:13:14,389 --> 00:13:17,899
inconclusive

239
00:13:15,529 --> 00:13:19,700
tossed knowledge tit first of all I

240
00:13:17,899 --> 00:13:22,160
would like to second Annabelle so I

241
00:13:19,700 --> 00:13:25,370
wouldn't expect the work on or to slow

242
00:13:22,160 --> 00:13:28,180
down um I'm for myself I'm accelerating

243
00:13:25,370 --> 00:13:31,910
right now because we have to solve

244
00:13:28,180 --> 00:13:33,979
problems at hand so 300 is Ananda and a

245
00:13:31,910 --> 00:13:36,439
different time timeline from my

246
00:13:33,980 --> 00:13:40,480
perspective so I would assume us to work

247
00:13:36,440 --> 00:13:42,889
on both and actually on three aspects

248
00:13:40,480 --> 00:13:50,230
because yesterday an aside meaning we

249
00:13:42,889 --> 00:13:52,790
discussed - that one - that one

250
00:13:50,230 --> 00:13:54,860
potentially 2.5 I don't know I don't

251
00:13:52,790 --> 00:13:57,469
know because the extension we're going

252
00:13:54,860 --> 00:14:00,649
to talk about later won't be powered of

253
00:13:57,470 --> 00:14:02,269
- that one right and there is the TX off

254
00:14:00,649 --> 00:14:04,550
+ 3 that's fine

255
00:14:02,269 --> 00:14:11,990
I mean in the end people will prioritize

256
00:14:04,550 --> 00:14:14,870
right and well Backman Amazon again - I

257
00:14:11,990 --> 00:14:18,339
wanted to respond to something Mike said

258
00:14:14,870 --> 00:14:22,160
as far as what is the open question

259
00:14:18,339 --> 00:14:24,740
asking if we're going to do this work do

260
00:14:22,160 --> 00:14:27,529
we do it in the working group doesn't

261
00:14:24,740 --> 00:14:32,120
make a lot of sense to me because you

262
00:14:27,529 --> 00:14:34,610
know the working group doesn't really

263
00:14:32,120 --> 00:14:37,760
have a conclusive say on whether or not

264
00:14:34,610 --> 00:14:40,279
IETF is going to do the work the working

265
00:14:37,760 --> 00:14:43,130
group might agree or disagree on whether

266
00:14:40,279 --> 00:14:45,079
or not it is work that that that we

267
00:14:43,130 --> 00:14:48,260
should expand the scope recharter ooofff

268
00:14:45,079 --> 00:14:50,989
to include that work but if you know

269
00:14:48,260 --> 00:14:52,370
members of the IETF you know demonstrate

270
00:14:50,990 --> 00:14:54,920
a need for the work and there is

271
00:14:52,370 --> 00:15:00,230
consensus that the work should be done

272
00:14:54,920 --> 00:15:02,149
somewhere then you know that that

273
00:15:00,230 --> 00:15:08,870
happens irrespective of the opinion of

274
00:15:02,149 --> 00:15:10,970
this working group just in Richard and I

275
00:15:08,870 --> 00:15:15,680
just wanted to address the point of

276
00:15:10,970 --> 00:15:18,470
getting the right expertise I mean I I

277
00:15:15,680 --> 00:15:20,420
think that's it's it's a little bit of a

278
00:15:18,470 --> 00:15:22,220
red herring to say that if we

279
00:15:20,420 --> 00:15:24,650
to start a new working group we wouldn't

280
00:15:22,220 --> 00:15:28,070
have the right expertise because all of

281
00:15:24,650 --> 00:15:30,199
us are in like dozens of working groups

282
00:15:28,070 --> 00:15:33,260
I'm in dozens of working groups with a

283
00:15:30,200 --> 00:15:37,310
bunch of you across different standards

284
00:15:33,260 --> 00:15:40,280
bodies and and within the IETF we have a

285
00:15:37,310 --> 00:15:43,729
way of reaching out to the right experts

286
00:15:40,280 --> 00:15:46,339
and bringing them in and I think that

287
00:15:43,730 --> 00:15:49,010
with something like this if we were to

288
00:15:46,340 --> 00:15:52,070
do a new working group or even to do a

289
00:15:49,010 --> 00:15:54,140
new mailing list which again I think is

290
00:15:52,070 --> 00:15:56,330
a good idea we would want to make sure

291
00:15:54,140 --> 00:15:58,010
that those people are involved that the

292
00:15:56,330 --> 00:16:00,140
right people are involved there are some

293
00:15:58,010 --> 00:16:02,630
really really brilliant people in this

294
00:16:00,140 --> 00:16:06,770
community that I think need to be part

295
00:16:02,630 --> 00:16:12,350
of this conversation additionally I do

296
00:16:06,770 --> 00:16:15,740
think personally that it's because OSU

297
00:16:12,350 --> 00:16:17,660
is going to keep keeping on for quite a

298
00:16:15,740 --> 00:16:19,940
while and we're gonna keep extending it

299
00:16:17,660 --> 00:16:22,160
and keep you know patching it and

300
00:16:19,940 --> 00:16:25,630
tweaking it and new security forward and

301
00:16:22,160 --> 00:16:30,110
things like that I think that there is a

302
00:16:25,630 --> 00:16:32,870
slightly different audience for T Axl

303
00:16:30,110 --> 00:16:35,930
style work versus ol2 style work with

304
00:16:32,870 --> 00:16:38,690
significant overlap but there are going

305
00:16:35,930 --> 00:16:40,849
to be a lot of people coming to the

306
00:16:38,690 --> 00:16:43,160
oauth2 world that just want to care

307
00:16:40,850 --> 00:16:47,930
about oauth2 and they should be able to

308
00:16:43,160 --> 00:16:50,360
do that and I think that's especially

309
00:16:47,930 --> 00:16:52,160
important because a lot of people raise

310
00:16:50,360 --> 00:16:54,530
the question of are we just going to

311
00:16:52,160 --> 00:16:57,469
confuse people by saying there's this

312
00:16:54,530 --> 00:16:59,870
new thing well one way to not confuse

313
00:16:57,470 --> 00:17:03,770
people is to say like there is a new

314
00:16:59,870 --> 00:17:06,560
thing and it's being worked on here to

315
00:17:03,770 --> 00:17:08,480
do something new so if you're interested

316
00:17:06,560 --> 00:17:11,089
in that new thing that's not done yet

317
00:17:08,480 --> 00:17:13,280
sure that's over there go alpha test go

318
00:17:11,089 --> 00:17:17,929
beta test right it's the spec is not

319
00:17:13,280 --> 00:17:20,660
written yet if you want to stay in the

320
00:17:17,930 --> 00:17:25,959
oauth2 space where things are more

321
00:17:20,660 --> 00:17:25,959
explored then there is a space for that

322
00:17:28,530 --> 00:17:35,460
I think it's too early to really decide

323
00:17:30,770 --> 00:17:38,220
because I only still don't know what our

324
00:17:35,460 --> 00:17:40,140
three is all about and we also came to

325
00:17:38,220 --> 00:17:42,900
that conclusion in the morning so we

326
00:17:40,140 --> 00:17:49,350
need a clear description of the scope of

327
00:17:42,900 --> 00:17:55,770
what Olaf will look like I'm waiting for

328
00:17:49,350 --> 00:17:57,389
you just to refocus now so from my

329
00:17:55,770 --> 00:17:59,760
perspective the next logical step would

330
00:17:57,390 --> 00:18:01,920
be to really write up a proposal for the

331
00:17:59,760 --> 00:18:03,300
scope of all three and then then we

332
00:18:01,920 --> 00:18:06,090
might decide as a community as

333
00:18:03,300 --> 00:18:07,470
individuals on how to proceed I think

334
00:18:06,090 --> 00:18:10,080
that's makes sense instead of spending

335
00:18:07,470 --> 00:18:12,990
more time now because I'm waiting to

336
00:18:10,080 --> 00:18:14,669
give my presentations so if I could

337
00:18:12,990 --> 00:18:16,560
summarize that feedback you're

338
00:18:14,670 --> 00:18:19,050
reiterating that there's two questions

339
00:18:16,560 --> 00:18:21,060
to consider there is what is it that we

340
00:18:19,050 --> 00:18:22,440
need to do and there's then the question

341
00:18:21,060 --> 00:18:24,179
of how is it that we're gonna go forward

342
00:18:22,440 --> 00:18:26,850
we're doing that and these are certainly

343
00:18:24,180 --> 00:18:30,090
interrelated questions but we need to be

344
00:18:26,850 --> 00:18:32,100
considering both dimensions before

345
00:18:30,090 --> 00:18:35,070
asking my comment I'm going to ask the

346
00:18:32,100 --> 00:18:38,429
chairs based on a chair excuse me based

347
00:18:35,070 --> 00:18:40,919
on that do we want to simply table this

348
00:18:38,430 --> 00:18:45,240
conversation for the time being pending

349
00:18:40,920 --> 00:18:48,390
more clarity on the Descamps the TX off

350
00:18:45,240 --> 00:18:50,580
work yeah it seems so that that's the

351
00:18:48,390 --> 00:18:55,860
right approach from the feedback we've

352
00:18:50,580 --> 00:18:58,169
just got I would endorse that approach

353
00:18:55,860 --> 00:18:59,939
and I think we need to be again quite

354
00:18:58,170 --> 00:19:02,280
clear on what is it that we want to do

355
00:18:59,940 --> 00:19:03,960
and I think by then in numerating and

356
00:19:02,280 --> 00:19:07,170
being kind of clear crystal clear

357
00:19:03,960 --> 00:19:08,580
whether it's again 200 to 1 or 3 oh

358
00:19:07,170 --> 00:19:09,660
there's gonna be a lot of things to do

359
00:19:08,580 --> 00:19:11,639
and then we're needing to have a

360
00:19:09,660 --> 00:19:14,010
conversation on what it is to do I mean

361
00:19:11,640 --> 00:19:16,470
the key question for me is if we were to

362
00:19:14,010 --> 00:19:19,080
talk about a hypothetical new working

363
00:19:16,470 --> 00:19:20,730
group or a hypothetical recharter one of

364
00:19:19,080 --> 00:19:23,340
the key things for me to be figured it'd

365
00:19:20,730 --> 00:19:25,620
be a bik's plane during that chartering

366
00:19:23,340 --> 00:19:27,480
process would be if I if someone came to

367
00:19:25,620 --> 00:19:29,639
us with a new body of work and I was

368
00:19:27,480 --> 00:19:32,240
holding that right now would it be clear

369
00:19:29,640 --> 00:19:34,410
how we would go about to do that work

370
00:19:32,240 --> 00:19:36,120
would it be clear if we had two working

371
00:19:34,410 --> 00:19:38,429
groups it would certainly be clear if we

372
00:19:36,120 --> 00:19:39,750
had kind of one kind of one working

373
00:19:38,429 --> 00:19:40,920
group which is not to say that's the

374
00:19:39,750 --> 00:19:42,720
right answer but the key

375
00:19:40,920 --> 00:19:45,810
kind of distinguishers do we know how we

376
00:19:42,720 --> 00:19:47,340
go kind of through that so I think we

377
00:19:45,810 --> 00:19:49,260
need to you know bottom line I think we

378
00:19:47,340 --> 00:19:50,370
need to write down first what it is we

379
00:19:49,260 --> 00:19:52,230
won't do and then we can engage in a

380
00:19:50,370 --> 00:19:56,250
conversation to how to split it apart or

381
00:19:52,230 --> 00:19:58,140
not at all um Aaron Preki from octa I

382
00:19:56,250 --> 00:20:01,950
just want to echo something I heard from

383
00:19:58,140 --> 00:20:03,240
the last meeting actually we had which I

384
00:20:01,950 --> 00:20:07,620
haven't heard come up again in this

385
00:20:03,240 --> 00:20:09,870
discussion which is that like yes there

386
00:20:07,620 --> 00:20:11,850
is absolutely going to be work on 202

387
00:20:09,870 --> 00:20:14,719
dialects continuing for a very long time

388
00:20:11,850 --> 00:20:16,560
and the primary reason for that is that

389
00:20:14,720 --> 00:20:18,930
realistically getting people to move to

390
00:20:16,560 --> 00:20:20,399
a 3.0 is not something that's going to

391
00:20:18,930 --> 00:20:24,780
happen overnight

392
00:20:20,400 --> 00:20:27,620
by any means so the work on 3.0 is more

393
00:20:24,780 --> 00:20:30,240
about like long aiming for the future

394
00:20:27,620 --> 00:20:32,550
you know trying to trying to get

395
00:20:30,240 --> 00:20:35,070
something you know in front of people

396
00:20:32,550 --> 00:20:37,919
but sort of long-term planning rather

397
00:20:35,070 --> 00:20:39,600
than we're telling people to halt

398
00:20:37,920 --> 00:20:42,690
everything everything using 2.0 and

399
00:20:39,600 --> 00:20:43,679
switch immediately right so I think we

400
00:20:42,690 --> 00:20:45,930
just need to make sure that message

401
00:20:43,680 --> 00:20:49,830
continues to be something we get across

402
00:20:45,930 --> 00:20:51,330
we're not saying stop using 2.0 3.0 is

403
00:20:49,830 --> 00:20:52,590
better but wait for us to finish it

404
00:20:51,330 --> 00:20:54,120
because that doesn't make any sense and

405
00:20:52,590 --> 00:20:57,030
that would never actually work in the

406
00:20:54,120 --> 00:20:58,709
real world anyway so fine if I can

407
00:20:57,030 --> 00:21:00,270
summarize what I think I heard there was

408
00:20:58,710 --> 00:21:01,650
we've talked about we need to describe

409
00:21:00,270 --> 00:21:02,910
what we're gonna do we're gonna then

410
00:21:01,650 --> 00:21:04,110
need to talk about how we're gonna do it

411
00:21:02,910 --> 00:21:06,780
and it sounds like perhaps there's a

412
00:21:04,110 --> 00:21:08,280
third third activity that's related to

413
00:21:06,780 --> 00:21:09,570
regardless of what we choose to want to

414
00:21:08,280 --> 00:21:11,100
do there's a communication we need to

415
00:21:09,570 --> 00:21:13,230
have because there are all sorts of

416
00:21:11,100 --> 00:21:14,879
stakeholders that are watching different

417
00:21:13,230 --> 00:21:16,650
parts of this kind of activity and we

418
00:21:14,880 --> 00:21:18,630
need to be crystal clear on the change

419
00:21:16,650 --> 00:21:20,640
we're talking about embarking on to make

420
00:21:18,630 --> 00:21:24,540
sure you know we continue to have their

421
00:21:20,640 --> 00:21:27,240
active support and participation this is

422
00:21:24,540 --> 00:21:29,940
Justin I'm all volunteer to take on the

423
00:21:27,240 --> 00:21:32,490
work item of taking a first shot at

424
00:21:29,940 --> 00:21:34,800
writing down what we want to do and I'll

425
00:21:32,490 --> 00:21:37,680
run it by Roman as a sanity check and

426
00:21:34,800 --> 00:21:41,899
then put that onto the TX off list for

427
00:21:37,680 --> 00:21:46,880
discussion sounds like a plan for me

428
00:21:41,900 --> 00:21:51,410
perfect Aaron can you quickly summarize

429
00:21:46,880 --> 00:21:51,410
the discussions are on to that one

430
00:21:52,700 --> 00:21:58,419
[Music]

431
00:21:55,470 --> 00:22:01,539
Aaron cracking again yes so yesterday we

432
00:21:58,419 --> 00:22:04,419
had a site meeting about OAuth 2.1 the

433
00:22:01,539 --> 00:22:08,350
discussion was very good discussion the

434
00:22:04,419 --> 00:22:10,450
sort of high level end result of that

435
00:22:08,350 --> 00:22:14,439
discussion was that seems like there is

436
00:22:10,450 --> 00:22:16,809
a pretty broad consensus on the idea

437
00:22:14,440 --> 00:22:19,029
that we need to do something to sort of

438
00:22:16,809 --> 00:22:21,730
clean things up there was definitely an

439
00:22:19,029 --> 00:22:26,380
agreement that it there is a lot of

440
00:22:21,730 --> 00:22:28,299
documentation to read the we didn't come

441
00:22:26,380 --> 00:22:29,320
to a conclusion on exactly how to

442
00:22:28,299 --> 00:22:31,710
proceed

443
00:22:29,320 --> 00:22:35,590
the main disagreement stemmed from

444
00:22:31,710 --> 00:22:39,730
basically whether or not any sort of new

445
00:22:35,590 --> 00:22:41,470
document should be should be saying

446
00:22:39,730 --> 00:22:45,100
things that are effectively breaking

447
00:22:41,470 --> 00:22:49,179
changes to the spec what I mean by that

448
00:22:45,100 --> 00:22:50,649
is not necessarily like nobody was

449
00:22:49,179 --> 00:22:53,110
saying we're gonna add new features in

450
00:22:50,649 --> 00:22:56,350
this but by doing something like

451
00:22:53,110 --> 00:22:59,320
requiring requiring the things that the

452
00:22:56,350 --> 00:23:00,850
Security BCP recommends that is

453
00:22:59,320 --> 00:23:01,990
effectively a breaking change to

454
00:23:00,850 --> 00:23:03,399
existing implementations which

455
00:23:01,990 --> 00:23:05,980
technically don't have to follow the

456
00:23:03,399 --> 00:23:09,699
Security BCP right now that was the main

457
00:23:05,980 --> 00:23:11,169
disagreement and I we kind of came to

458
00:23:09,700 --> 00:23:13,679
the conclusion that we need to discuss

459
00:23:11,169 --> 00:23:15,940
those more on a case-by-case basis I

460
00:23:13,679 --> 00:23:19,179
volunteered to take a first pass at

461
00:23:15,940 --> 00:23:21,850
writing up an outline for what a

462
00:23:19,179 --> 00:23:24,340
document could look like highlighting

463
00:23:21,850 --> 00:23:25,990
the particular aspects that fall on

464
00:23:24,340 --> 00:23:28,629
either side of that line so that we can

465
00:23:25,990 --> 00:23:31,570
talk about them individually because I

466
00:23:28,630 --> 00:23:36,370
think we agree that there was more to

467
00:23:31,570 --> 00:23:38,590
discuss there on the specifics so so in

468
00:23:36,370 --> 00:23:41,219
terms of the changes you were you

469
00:23:38,590 --> 00:23:45,070
discussing is sort of the best document

470
00:23:41,220 --> 00:23:47,169
or like because abyss document indeed

471
00:23:45,070 --> 00:23:48,939
it's not supposed to make breaking

472
00:23:47,169 --> 00:23:51,370
backwards but compatibility breaking

473
00:23:48,940 --> 00:23:53,590
changes but removing for example

474
00:23:51,370 --> 00:23:57,549
optional features is not such a feature

475
00:23:53,590 --> 00:24:01,990
or further detailing some yeah also not

476
00:23:57,549 --> 00:24:03,730
the the particular form of this document

477
00:24:01,990 --> 00:24:05,679
wasn't also was not something that we

478
00:24:03,730 --> 00:24:06,730
have you know landed on a concrete

479
00:24:05,679 --> 00:24:09,880
definition

480
00:24:06,730 --> 00:24:12,370
so I think that remains to be seen what

481
00:24:09,880 --> 00:24:14,290
the actual form of that will take based

482
00:24:12,370 --> 00:24:18,549
on discussions that we need to continue

483
00:24:14,290 --> 00:24:20,379
having so it sounds a little bit like we

484
00:24:18,549 --> 00:24:22,389
need some more discussion and find out

485
00:24:20,380 --> 00:24:24,370
what specifically will end up in a

486
00:24:22,390 --> 00:24:27,429
document didn't then we can say like is

487
00:24:24,370 --> 00:24:29,799
this a peace process like an abyss can

488
00:24:27,429 --> 00:24:33,190
actually be also advancing it to along

489
00:24:29,799 --> 00:24:37,889
the standards letter if you will which

490
00:24:33,190 --> 00:24:40,390
would be useful I think oh it could be

491
00:24:37,890 --> 00:24:43,030
like you said that 2.1 it's something

492
00:24:40,390 --> 00:24:46,210
that is really different slightly

493
00:24:43,030 --> 00:24:49,559
backwards compatibility breaking changes

494
00:24:46,210 --> 00:24:53,950
although that one typically indicates

495
00:24:49,559 --> 00:24:55,330
yeah and maybe a finer point in the

496
00:24:53,950 --> 00:24:57,850
discussion of what tutor one would look

497
00:24:55,330 --> 00:25:02,889
like is was there discussion about using

498
00:24:57,850 --> 00:25:08,168
updates and obsoletes yes yep there was

499
00:25:02,890 --> 00:25:09,790
definitely some discussion or is that

500
00:25:08,169 --> 00:25:11,830
more conversation that's perfectly fine

501
00:25:09,790 --> 00:25:13,960
for just a punt was there was there

502
00:25:11,830 --> 00:25:17,080
resolution on that gun there was a

503
00:25:13,960 --> 00:25:18,820
preference for updates in in order to

504
00:25:17,080 --> 00:25:21,340
say that if you still wanted you to know

505
00:25:18,820 --> 00:25:23,309
do 2.0 that's fine if you're doing 2.1

506
00:25:21,340 --> 00:25:25,840
you're bound by these particular

507
00:25:23,309 --> 00:25:27,910
restrictions there was a lot of as aaron

508
00:25:25,840 --> 00:25:31,000
was just saying there was a lot of

509
00:25:27,910 --> 00:25:33,190
contention about what it would mean to

510
00:25:31,000 --> 00:25:35,440
be compliant with 2.1 and how you would

511
00:25:33,190 --> 00:25:38,230
be able to support to oh and to one on

512
00:25:35,440 --> 00:25:41,230
the same endpoints or the same server or

513
00:25:38,230 --> 00:25:43,150
the same service or like there's a lot

514
00:25:41,230 --> 00:25:46,980
of deployment questions that would need

515
00:25:43,150 --> 00:25:49,809
to be better understood when we start

516
00:25:46,980 --> 00:25:51,820
changing you know shoulds into musts and

517
00:25:49,809 --> 00:25:54,940
adding new mosques that didn't exist ten

518
00:25:51,820 --> 00:25:56,770
years ago so to make sure i can reframe

519
00:25:54,940 --> 00:25:58,480
that so it sounds like what we're saying

520
00:25:56,770 --> 00:26:01,000
is we're preparing for an ecosystem

521
00:25:58,480 --> 00:26:03,190
based on this conversation that has 2.0

522
00:26:01,000 --> 00:26:04,900
and 2.1 and we're making gonna make no

523
00:26:03,190 --> 00:26:06,490
statements about what they do with you

524
00:26:04,900 --> 00:26:10,450
know we're just gonna say we also have

525
00:26:06,490 --> 00:26:13,120
two not one that yeah that that was my

526
00:26:10,450 --> 00:26:15,760
read of it and so if you want to still

527
00:26:13,120 --> 00:26:16,629
do - oh that's fine you should follow

528
00:26:15,760 --> 00:26:20,120
the BCP

529
00:26:16,630 --> 00:26:33,620
which will basically make you

530
00:26:20,120 --> 00:26:37,820
2.1 compliant yeah Annabelle back many

531
00:26:33,620 --> 00:26:42,350
Amazon just to add some more detail

532
00:26:37,820 --> 00:26:45,289
there the concern or questions around

533
00:26:42,350 --> 00:26:48,168
how big or how small a change 2.1 is

534
00:26:45,289 --> 00:26:49,908
from 2.0 and challenges around managing

535
00:26:48,169 --> 00:26:54,140
or living in a world where we have that

536
00:26:49,909 --> 00:26:57,799
2 protocol ecosystem as a lot of what is

537
00:26:54,140 --> 00:27:01,130
driving the remaining question of do we

538
00:26:57,799 --> 00:27:05,120
actually do a 2.1 or are we doing a this

539
00:27:01,130 --> 00:27:13,370
which is not a 2.1 so yeah those

540
00:27:05,120 --> 00:27:15,289
questions are very much inner woman yeah

541
00:27:13,370 --> 00:27:16,699
we just we're just reporting back from a

542
00:27:15,289 --> 00:27:18,529
discussion and and there were different

543
00:27:16,700 --> 00:27:20,510
different opinions in my opinion and i

544
00:27:18,529 --> 00:27:23,360
restate that now i would like to get rid

545
00:27:20,510 --> 00:27:26,120
of the security BCP I would like to roll

546
00:27:23,360 --> 00:27:28,340
that up in a new version after RC and if

547
00:27:26,120 --> 00:27:30,139
that operates on to Latour features fine

548
00:27:28,340 --> 00:27:32,809
with me because we actually have a

549
00:27:30,140 --> 00:27:34,880
discussion around that exactly but we

550
00:27:32,809 --> 00:27:36,799
need to support or we need to understand

551
00:27:34,880 --> 00:27:39,110
and to admit that there will be a world

552
00:27:36,799 --> 00:27:41,000
with two leto implementations running

553
00:27:39,110 --> 00:27:43,309
beside to that one implementations and

554
00:27:41,000 --> 00:27:45,610
even servers that support both so from

555
00:27:43,309 --> 00:27:48,980
my perspective we need to find ways to

556
00:27:45,610 --> 00:27:51,408
to make that happen right so and the to

557
00:27:48,980 --> 00:27:53,590
that o implementation can just RC 67 49

558
00:27:51,409 --> 00:27:56,210
compliant from my perspective right so

559
00:27:53,590 --> 00:27:58,129
what you need to be able in an ecosystem

560
00:27:56,210 --> 00:28:01,130
to especially on the server provider

561
00:27:58,130 --> 00:28:03,080
side to offer migration path which might

562
00:28:01,130 --> 00:28:05,690
mean that you have both versions in

563
00:28:03,080 --> 00:28:07,070
power running and then we discussed how

564
00:28:05,690 --> 00:28:10,250
could we determine what the client needs

565
00:28:07,070 --> 00:28:11,809
is a policy based or is it is it have

566
00:28:10,250 --> 00:28:13,789
you do different set of endpoints and so

567
00:28:11,809 --> 00:28:15,770
on so I think there's a lot of stuff you

568
00:28:13,789 --> 00:28:18,010
need to sort out before we move forward

569
00:28:15,770 --> 00:28:20,120
and we have right now I think different

570
00:28:18,010 --> 00:28:27,289
opinions on whether we should make

571
00:28:20,120 --> 00:28:30,739
breaking changes or not comment from the

572
00:28:27,289 --> 00:28:33,650
jabber from Phillip restating that I

573
00:28:30,740 --> 00:28:36,260
mentioned at ITF 104 the name

574
00:28:33,650 --> 00:28:45,020
major/minor off version is one that

575
00:28:36,260 --> 00:28:46,370
doesn't need a BCP um but in any case we

576
00:28:45,020 --> 00:28:49,460
are looking forward to see that

577
00:28:46,370 --> 00:28:51,439
discussion happening under OS list so if

578
00:28:49,460 --> 00:28:53,300
you could trigger that soon I guess it

579
00:28:51,440 --> 00:28:57,880
will take a little bit a little while

580
00:28:53,300 --> 00:29:01,250
till we arrive at some common point so

581
00:28:57,880 --> 00:29:03,680
happy that you volunteer to to trick it

582
00:29:01,250 --> 00:29:29,300
out and lead that discussion okay hmm

583
00:29:03,680 --> 00:29:33,710
Thanks this is a little awkward to try

584
00:29:29,300 --> 00:29:37,010
to continue from where I left off on the

585
00:29:33,710 --> 00:29:37,970
last meeting that yeah I was try to

586
00:29:37,010 --> 00:29:42,320
start from the beginning go a little

587
00:29:37,970 --> 00:29:44,000
faster get some slides up so I'm here to

588
00:29:42,320 --> 00:29:46,429
talk about some prospective new work

589
00:29:44,000 --> 00:30:01,610
it's an individual draft called deep hop

590
00:29:46,430 --> 00:30:05,980
that is loading the slides for it I put

591
00:30:01,610 --> 00:30:05,979
a lot of modules in - that's what I do

592
00:30:16,980 --> 00:30:33,750
yeah this this one start

593
00:30:19,210 --> 00:30:33,750
yeah and this one maybe the other one

594
00:30:52,520 --> 00:30:55,639
[Music]

595
00:30:56,100 --> 00:31:07,449
there's more so real quick it's a draft

596
00:31:04,629 --> 00:31:09,459
proposal for a new hopefully simple and

597
00:31:07,450 --> 00:31:12,429
concise approach of proof of possession

598
00:31:09,460 --> 00:31:14,350
for OAuth access and refresh tokens and

599
00:31:12,429 --> 00:31:17,019
the idea is to do it at the application

600
00:31:14,350 --> 00:31:18,939
layer using app application level

601
00:31:17,019 --> 00:31:20,649
constructs and being able to leverage

602
00:31:18,940 --> 00:31:22,330
existing library support specifically

603
00:31:20,649 --> 00:31:24,279
JWT or our support so this can actually

604
00:31:22,330 --> 00:31:26,529
be something that's implementable and

605
00:31:24,279 --> 00:31:28,570
deployable a little history of

606
00:31:26,529 --> 00:31:30,129
possession the main motivations are to

607
00:31:28,570 --> 00:31:31,960
do something be better than better we've

608
00:31:30,129 --> 00:31:34,178
had bear tokens for a long time we've

609
00:31:31,960 --> 00:31:35,889
had a lot of attempts to do better some

610
00:31:34,179 --> 00:31:37,360
work out better than others mostly

611
00:31:35,889 --> 00:31:39,580
though we don't have something that's

612
00:31:37,360 --> 00:31:41,620
widely applicable this is partly

613
00:31:39,580 --> 00:31:44,230
motivated by the security BCP which

614
00:31:41,620 --> 00:31:46,449
rather aspirationally says that you

615
00:31:44,230 --> 00:31:47,830
should use sender constrained tokens I

616
00:31:46,450 --> 00:31:50,139
say it's aspirational because really

617
00:31:47,830 --> 00:31:52,720
there's not a lot of good options to do

618
00:31:50,139 --> 00:31:55,120
that right now and I say that kid that

619
00:31:52,720 --> 00:31:56,769
we lack really a suitable or at least

620
00:31:55,120 --> 00:31:58,928
suitable and widely deployables a

621
00:31:56,769 --> 00:32:00,519
political pop mechanism this is

622
00:31:58,929 --> 00:32:03,639
especially true around single page

623
00:32:00,519 --> 00:32:05,289
applications because the one thing we do

624
00:32:03,639 --> 00:32:08,979
have that's almost an RFC is the mutual

625
00:32:05,289 --> 00:32:11,289
TLS stuff the the user agent interaction

626
00:32:08,980 --> 00:32:13,600
and usability experiences doing in TLS

627
00:32:11,289 --> 00:32:15,460
in the browser are pretty much a

628
00:32:13,600 --> 00:32:18,070
non-starter for most deployments it just

629
00:32:15,460 --> 00:32:19,450
doesn't work so combining I I know I got

630
00:32:18,070 --> 00:32:22,059
really excited about it maybe too

631
00:32:19,450 --> 00:32:23,769
excited but it's just not it's not

632
00:32:22,059 --> 00:32:27,158
panning out so here we are again trying

633
00:32:23,769 --> 00:32:27,870
to try again hopefully with some lessons

634
00:32:27,159 --> 00:32:30,660
learned

635
00:32:27,870 --> 00:32:32,580
and another thing that's come up in in

636
00:32:30,660 --> 00:32:33,840
spas as well as mobile applications is a

637
00:32:32,580 --> 00:32:35,820
desire to be able to do proof of

638
00:32:33,840 --> 00:32:37,530
possession around refresh tokens as well

639
00:32:35,820 --> 00:32:40,350
for public client Steve a little bit

640
00:32:37,530 --> 00:32:43,110
stronger possession there so the basic

641
00:32:40,350 --> 00:32:45,300
flow is we have this mechanism which

642
00:32:43,110 --> 00:32:47,490
we're calling a deep op proof and it's

643
00:32:45,300 --> 00:32:49,320
just a new HTTP header it's the same it

644
00:32:47,490 --> 00:32:51,270
looks the same on all requests both the

645
00:32:49,320 --> 00:32:53,820
authorization server and to all

646
00:32:51,270 --> 00:32:55,980
protected resources it flows with the

647
00:32:53,820 --> 00:32:57,090
actual token requests usually a code

648
00:32:55,980 --> 00:32:59,550
exchange or whatever to the

649
00:32:57,090 --> 00:33:02,129
authorization server and it provides the

650
00:32:59,550 --> 00:33:03,690
public key and some limited proof of

651
00:33:02,130 --> 00:33:05,880
possession the corresponding private key

652
00:33:03,690 --> 00:33:08,880
in turn the authorization server can

653
00:33:05,880 --> 00:33:11,280
bind the issued access token to that

654
00:33:08,880 --> 00:33:13,920
public key send it back and then when it

655
00:33:11,280 --> 00:33:16,649
uses it at resource access it provides

656
00:33:13,920 --> 00:33:19,320
the exact same style of proof on each

657
00:33:16,650 --> 00:33:20,820
resource call in conjunction with the

658
00:33:19,320 --> 00:33:22,470
access token that's bound to that public

659
00:33:20,820 --> 00:33:30,200
key and that's an extra check that the

660
00:33:22,470 --> 00:33:30,200
resource server can do so that top piece

661
00:33:32,059 --> 00:33:40,590
thank you the the the proof deep hop

662
00:33:38,100 --> 00:33:43,260
proof JWT is a JWT here's what it looks

663
00:33:40,590 --> 00:33:44,909
like on the inside the header atop here

664
00:33:43,260 --> 00:33:46,790
it's got some explicit typing because

665
00:33:44,910 --> 00:33:48,809
that's a thing we do now

666
00:33:46,790 --> 00:33:52,080
asymmetrical in the algorithm support

667
00:33:48,809 --> 00:33:53,730
and in the public key in jwk format in

668
00:33:52,080 --> 00:33:55,530
the header so and this is the key that

669
00:33:53,730 --> 00:33:57,030
signed it and the public keys there so

670
00:33:55,530 --> 00:33:58,860
it's basically just saying hey here's a

671
00:33:57,030 --> 00:34:00,480
jot I signed it with this key and you

672
00:33:58,860 --> 00:34:02,729
can know that because you verify the

673
00:34:00,480 --> 00:34:04,860
signature it's just showing possession

674
00:34:02,730 --> 00:34:06,420
of that key and in order to kind of give

675
00:34:04,860 --> 00:34:09,779
that proof of possession some meaningful

676
00:34:06,420 --> 00:34:12,720
context we try to associate it with the

677
00:34:09,780 --> 00:34:14,820
HTTP request in a sort of minimal

678
00:34:12,719 --> 00:34:16,379
fashion enough to make it relevant but

679
00:34:14,820 --> 00:34:18,840
not enough to be difficult or

680
00:34:16,379 --> 00:34:21,239
error-prone or hard to deploy with all

681
00:34:18,840 --> 00:34:23,850
the fun and pain that comes with trying

682
00:34:21,239 --> 00:34:25,678
to deal with normalization and signing

683
00:34:23,850 --> 00:34:27,739
they should be requests so we've got a

684
00:34:25,679 --> 00:34:30,450
JT I claim in here that sort of

685
00:34:27,739 --> 00:34:33,270
encouraged but not wholly required to

686
00:34:30,449 --> 00:34:35,730
use for replay checking and we've got

687
00:34:33,270 --> 00:34:37,800
some minimal information about the HTTP

688
00:34:35,730 --> 00:34:40,199
request itself including basically just

689
00:34:37,800 --> 00:34:43,280
the request URI with no

690
00:34:40,199 --> 00:34:46,770
or any other parameters just the the

691
00:34:43,280 --> 00:34:48,929
host and path and scheme as well as the

692
00:34:46,770 --> 00:34:50,969
method that was used and then the

693
00:34:48,929 --> 00:34:53,159
issuance time of the token so that the

694
00:34:50,969 --> 00:34:55,500
server has some understanding of how

695
00:34:53,159 --> 00:34:58,109
fresh it is and can enforce some window

696
00:34:55,500 --> 00:34:59,760
of validity there and there could be

697
00:34:58,109 --> 00:35:04,200
other stuff in there but that's the

698
00:34:59,760 --> 00:35:07,619
defined set of claims right now just

699
00:35:04,200 --> 00:35:10,259
enricher just really quick has there

700
00:35:07,619 --> 00:35:13,109
been thought about how extensible that

701
00:35:10,260 --> 00:35:16,109
body should be I realize pops only doing

702
00:35:13,109 --> 00:35:18,900
that and that's fine is there any

703
00:35:16,109 --> 00:35:23,160
thought about sort of what the namespace

704
00:35:18,900 --> 00:35:24,510
of a deep op + JA payload could have in

705
00:35:23,160 --> 00:35:29,220
it if somebody had something else they

706
00:35:24,510 --> 00:35:32,310
wanted to cram in there um not beyond

707
00:35:29,220 --> 00:35:35,069
like not past what's their other stuff

708
00:35:32,310 --> 00:35:37,020
go here ok that's that's fine and

709
00:35:35,070 --> 00:35:39,990
mansome mention in the draft now that

710
00:35:37,020 --> 00:35:42,660
sort of says as much like you could do

711
00:35:39,990 --> 00:35:43,979
more but but there's no explicit

712
00:35:42,660 --> 00:35:49,078
provisions for what that would look like

713
00:35:43,980 --> 00:35:52,740
gotcha okay thank you besides quick

714
00:35:49,079 --> 00:35:57,480
question any specific reason why replay

715
00:35:52,740 --> 00:35:59,430
checking would be optional so if you've

716
00:35:57,480 --> 00:36:02,160
followed some of the conversation on the

717
00:35:59,430 --> 00:36:05,669
realist recently there's potentially

718
00:36:02,160 --> 00:36:07,890
some deployment issues at scale

719
00:36:05,670 --> 00:36:12,150
depending on how your architecture is

720
00:36:07,890 --> 00:36:16,230
for ensuring that the the one-time use

721
00:36:12,150 --> 00:36:18,450
of tokens is timely and accurate so you

722
00:36:16,230 --> 00:36:20,990
might be checking that validity you

723
00:36:18,450 --> 00:36:24,029
might be checking that sort of store of

724
00:36:20,990 --> 00:36:26,189
IDs in a large cluster with an

725
00:36:24,030 --> 00:36:30,020
eventually consistent back-end to store

726
00:36:26,190 --> 00:36:32,069
that so you want we've made some

727
00:36:30,020 --> 00:36:34,200
provisions to allow for things that

728
00:36:32,069 --> 00:36:36,089
aren't tightly transactionally oriented

729
00:36:34,200 --> 00:36:38,129
they could have really negative impacts

730
00:36:36,089 --> 00:36:40,230
on the system as a whole as well as you

731
00:36:38,130 --> 00:36:42,599
might you might choose to only track

732
00:36:40,230 --> 00:36:44,520
those within a local system only and

733
00:36:42,599 --> 00:36:46,230
sort of trade-off the cost benefits of

734
00:36:44,520 --> 00:36:48,240
this considering again these are things

735
00:36:46,230 --> 00:36:49,619
that might only be valid the might

736
00:36:48,240 --> 00:36:53,450
server might only consider it valid for

737
00:36:49,619 --> 00:36:53,450
the order of a few seconds

738
00:36:53,630 --> 00:37:00,180
you know I it's there's a there's a

739
00:36:57,840 --> 00:37:03,510
large continuum of sort of the level of

740
00:37:00,180 --> 00:37:05,250
security you can get to versus sort of

741
00:37:03,510 --> 00:37:08,340
the performance and the usability of

742
00:37:05,250 --> 00:37:10,530
this and we've might not be the right

743
00:37:08,340 --> 00:37:12,690
place but we've tried to sort of pick a

744
00:37:10,530 --> 00:37:16,410
meaningful spot in the middle that

745
00:37:12,690 --> 00:37:19,410
provides that utility without being too

746
00:37:16,410 --> 00:37:21,990
cumbersome to implement or deploy and so

747
00:37:19,410 --> 00:37:24,240
one last thing by optional I don't say

748
00:37:21,990 --> 00:37:25,799
it's optional but it's a should and it's

749
00:37:24,240 --> 00:37:28,049
actually a must another place with a

750
00:37:25,800 --> 00:37:30,710
caveat of within reasonable

751
00:37:28,050 --> 00:37:33,869
considerations for performance and

752
00:37:30,710 --> 00:37:36,510
inconsistency toastin as a co-author

753
00:37:33,869 --> 00:37:38,070
which just would like to add that you

754
00:37:36,510 --> 00:37:40,859
can different get different levels

755
00:37:38,070 --> 00:37:42,599
replay detection right if you don't do

756
00:37:40,859 --> 00:37:45,119
the gtii you get replay detection if

757
00:37:42,599 --> 00:37:47,430
someone wants to use the the header with

758
00:37:45,119 --> 00:37:48,930
a different race or server and if you

759
00:37:47,430 --> 00:37:50,848
put into the IDI they get you get the

760
00:37:48,930 --> 00:37:52,410
replay detection if that's replayed on

761
00:37:50,849 --> 00:37:55,140
the same resource or more I think that's

762
00:37:52,410 --> 00:37:57,330
a good a good distinguishment yeah in

763
00:37:55,140 --> 00:37:59,819
furthermore it's on the same resource

764
00:37:57,330 --> 00:38:02,040
research server at the same path at the

765
00:37:59,820 --> 00:38:05,550
same method in the order of a few

766
00:38:02,040 --> 00:38:08,099
seconds so it's narrow Annabel Beckman

767
00:38:05,550 --> 00:38:11,339
Amazon we talked in the previous session

768
00:38:08,099 --> 00:38:12,960
about the coming work for HP message

769
00:38:11,339 --> 00:38:14,609
signing so I'm not going to go into that

770
00:38:12,960 --> 00:38:16,500
any more than just reminding people that

771
00:38:14,609 --> 00:38:21,060
that work is happening and maybe

772
00:38:16,500 --> 00:38:22,740
applicable here separate from that from

773
00:38:21,060 --> 00:38:24,029
the conversation on the list it seemed

774
00:38:22,740 --> 00:38:25,939
pretty clear to me that it would be

775
00:38:24,030 --> 00:38:30,720
helpful to have a clear statement of

776
00:38:25,940 --> 00:38:32,280
what what the threat model is for you

777
00:38:30,720 --> 00:38:36,118
know what we're trying to mitigate here

778
00:38:32,280 --> 00:38:38,609
with depop because the more of these

779
00:38:36,119 --> 00:38:41,730
things that you strip out yeah the more

780
00:38:38,609 --> 00:38:45,210
this just becomes another bearer token

781
00:38:41,730 --> 00:38:48,480
that you're putting in the request so it

782
00:38:45,210 --> 00:38:51,839
would really be helpful to understand

783
00:38:48,480 --> 00:38:53,580
you know once we strip all of that out

784
00:38:51,839 --> 00:38:56,670
are there threats that we are actually

785
00:38:53,580 --> 00:38:58,319
still mitigating here or have we just

786
00:38:56,670 --> 00:39:01,500
produce something that ends up making

787
00:38:58,320 --> 00:39:03,510
people feel safer than they really are

788
00:39:01,500 --> 00:39:05,670
yeah some tightening up of that I think

789
00:39:03,510 --> 00:39:07,800
well as with all things it's hard

790
00:39:05,670 --> 00:39:09,359
because I think everyone has a little

791
00:39:07,800 --> 00:39:12,420
bit different idea of what that is and

792
00:39:09,359 --> 00:39:14,009
the push to change this is you know

793
00:39:12,420 --> 00:39:15,060
there's different competing interests

794
00:39:14,010 --> 00:39:17,460
but it definitely needs to be some

795
00:39:15,060 --> 00:39:18,630
tightening up of the of the objectives

796
00:39:17,460 --> 00:39:19,920
around the threat model and what we're

797
00:39:18,630 --> 00:39:21,420
trying to provide I mean if there if

798
00:39:19,920 --> 00:39:24,240
there are competing interests and that

799
00:39:21,420 --> 00:39:27,600
does argue for a you know more flexible

800
00:39:24,240 --> 00:39:31,410
model that yeah it argues for it but I

801
00:39:27,600 --> 00:39:35,670
don't know that it wins that argument no

802
00:39:31,410 --> 00:39:38,310
we have to have that argument I very

803
00:39:35,670 --> 00:39:41,280
much want to avoid a situation where the

804
00:39:38,310 --> 00:39:44,190
the client is in in the place of saying

805
00:39:41,280 --> 00:39:46,500
what is sine in this token because it

806
00:39:44,190 --> 00:39:48,600
has a lot of ramifications on how do you

807
00:39:46,500 --> 00:39:49,800
negotiate what that is what are the

808
00:39:48,600 --> 00:39:52,500
properties of that that actually

809
00:39:49,800 --> 00:39:54,060
provides and if we can't talk about it

810
00:39:52,500 --> 00:39:55,859
and I know we have a hard time yesterday

811
00:39:54,060 --> 00:39:58,020
talking about exactly what you get from

812
00:39:55,859 --> 00:39:59,490
what I'm wholly unconvinced that the

813
00:39:58,020 --> 00:40:01,710
average client developer can make a

814
00:39:59,490 --> 00:40:04,290
reasonable decision well the client

815
00:40:01,710 --> 00:40:06,119
doesn't have to the resource own server

816
00:40:04,290 --> 00:40:07,890
does well that would then assume that

817
00:40:06,119 --> 00:40:09,660
you have some sort of discovery and

818
00:40:07,890 --> 00:40:11,430
metadata indication to say what

819
00:40:09,660 --> 00:40:13,020
particular aspects of the HTTP request

820
00:40:11,430 --> 00:40:14,549
are signed in the context of this

821
00:40:13,020 --> 00:40:18,119
resource that would be the API

822
00:40:14,550 --> 00:40:19,590
documentation for the API or calling and

823
00:40:18,119 --> 00:40:21,390
those are those are the things I'd like

824
00:40:19,590 --> 00:40:24,990
to avoid again going back to this is

825
00:40:21,390 --> 00:40:27,750
meant to be simple easily deployable not

826
00:40:24,990 --> 00:40:31,770
a lot of options and if the scope of

827
00:40:27,750 --> 00:40:37,410
this is to be usable specifically and

828
00:40:31,770 --> 00:40:39,750
only within the domain where you're in a

829
00:40:37,410 --> 00:40:43,680
pure discovery world and and you're

830
00:40:39,750 --> 00:40:46,140
talking about a P is on completely

831
00:40:43,680 --> 00:40:48,180
standard interfaces then I understand

832
00:40:46,140 --> 00:40:49,319
why you would not want to be in that you

833
00:40:48,180 --> 00:40:51,509
know place where you have to negotiate

834
00:40:49,320 --> 00:40:54,540
that but the practical reality is that

835
00:40:51,510 --> 00:40:57,180
OS is used for all sorts of things that

836
00:40:54,540 --> 00:41:02,060
aren't you know just standardized api's

837
00:40:57,180 --> 00:41:04,080
and in those cases people have

838
00:41:02,060 --> 00:41:07,160
documentation for their API is that

839
00:41:04,080 --> 00:41:09,090
describe what needs to be you know how

840
00:41:07,160 --> 00:41:11,879
authentication authorization happens

841
00:41:09,090 --> 00:41:13,200
part of that can and if they're using

842
00:41:11,880 --> 00:41:15,030
something like this should be an

843
00:41:13,200 --> 00:41:16,480
indication of these are the things that

844
00:41:15,030 --> 00:41:18,580
need to be signed in order to protect

845
00:41:16,480 --> 00:41:20,200
this request it definitely could be but

846
00:41:18,580 --> 00:41:22,240
it doesn't have to be and one of the

847
00:41:20,200 --> 00:41:24,100
value of standards is avoiding the need

848
00:41:22,240 --> 00:41:28,810
to look up that stuff either in

849
00:41:24,100 --> 00:41:31,660
documentation or in dynamic discovered

850
00:41:28,810 --> 00:41:35,590
sort of metadata sorry I'm under saying

851
00:41:31,660 --> 00:41:39,700
that that that there is value without

852
00:41:35,590 --> 00:41:42,640
yep there is value in that flexibility

853
00:41:39,700 --> 00:41:45,660
there are strong use cases for what

854
00:41:42,640 --> 00:41:48,339
we're what is what where you're actually

855
00:41:45,660 --> 00:41:49,390
specifically stating what what you're

856
00:41:48,340 --> 00:41:51,160
going to include what you're not and

857
00:41:49,390 --> 00:41:54,368
there are strong use cases for

858
00:41:51,160 --> 00:41:56,500
standardizing the format and allowing

859
00:41:54,369 --> 00:41:58,359
implementations and deployments to say

860
00:41:56,500 --> 00:42:00,310
this is what I need covered and this is

861
00:41:58,359 --> 00:42:02,859
what I don't both of those use cases

862
00:42:00,310 --> 00:42:07,740
exist and I think we'd be remiss to

863
00:42:02,859 --> 00:42:07,740
support one at the expense of the other

864
00:42:09,210 --> 00:42:16,210
noted yeah I disagree yeah one last

865
00:42:14,230 --> 00:42:19,990
thing based on discussion on the list I

866
00:42:16,210 --> 00:42:23,820
believe you you or maybe it was Neil

867
00:42:19,990 --> 00:42:23,819
somebody in that conversation said that

868
00:42:24,720 --> 00:42:33,850
that CPU cost of asymmetric crypto was

869
00:42:29,950 --> 00:42:36,490
not a concern at scale and I wanted to

870
00:42:33,850 --> 00:42:41,080
just state my disagreement with that we

871
00:42:36,490 --> 00:42:44,680
we have use cases where the time and and

872
00:42:41,080 --> 00:42:50,310
cost of asymmetric asymmetric crypto

873
00:42:44,680 --> 00:42:52,629
versus H max is absolutely a concern

874
00:42:50,310 --> 00:42:56,380
okay I don't think anyone said it wasn't

875
00:42:52,630 --> 00:42:59,020
a concern really we had that discussion

876
00:42:56,380 --> 00:43:02,020
early on like when Annabelle presented

877
00:42:59,020 --> 00:43:03,820
it and when I talked about the existing

878
00:43:02,020 --> 00:43:08,380
documents and there be a symmetric key

879
00:43:03,820 --> 00:43:11,230
mechanism we had that discussion for a

880
00:43:08,380 --> 00:43:13,869
moment we can go back to those yeah well

881
00:43:11,230 --> 00:43:15,609
I think that the more recent discussion

882
00:43:13,869 --> 00:43:17,890
was around the relative trade-offs

883
00:43:15,609 --> 00:43:19,840
whether the simplicity of not managing a

884
00:43:17,890 --> 00:43:21,759
symmetric key distribution environment

885
00:43:19,840 --> 00:43:23,640
and all the other things that come with

886
00:43:21,760 --> 00:43:26,320
that were worth the trade-off republic

887
00:43:23,640 --> 00:43:29,680
perhaps I misread or misinterpreted but

888
00:43:26,320 --> 00:43:30,280
I what I saw was that there was a claim

889
00:43:29,680 --> 00:43:32,770
that

890
00:43:30,280 --> 00:43:37,990
that scaling was not a was not a concern

891
00:43:32,770 --> 00:43:40,480
for asymmetric crypto and like I said I

892
00:43:37,990 --> 00:43:43,390
may have misinterpreted that so if so

893
00:43:40,480 --> 00:43:45,970
then that was an agreement I said it

894
00:43:43,390 --> 00:43:47,680
could scale out because of the nature of

895
00:43:45,970 --> 00:43:50,319
it you didn't but it didn't mean that

896
00:43:47,680 --> 00:43:57,819
there's not CPU cost but only that it

897
00:43:50,320 --> 00:44:00,010
could scale you're on Schaffer back to

898
00:43:57,820 --> 00:44:03,430
replay I think it would be simpler to

899
00:44:00,010 --> 00:44:07,480
always have a GTI always have a random

900
00:44:03,430 --> 00:44:10,750
GTI and leave it to the server as a

901
00:44:07,480 --> 00:44:12,880
should to do replay protection that's

902
00:44:10,750 --> 00:44:14,920
the current state of the draft there's

903
00:44:12,880 --> 00:44:17,650
just been awesome because you did

904
00:44:14,920 --> 00:44:21,040
mention missing GTI

905
00:44:17,650 --> 00:44:22,720
I didn't mean it that way I'm okay it is

906
00:44:21,040 --> 00:44:24,610
required always from the client

907
00:44:22,720 --> 00:44:26,799
perspective there's a bit of wiggle room

908
00:44:24,610 --> 00:44:28,510
about just how strict the server needs

909
00:44:26,800 --> 00:44:30,400
to be with it but it's always required

910
00:44:28,510 --> 00:44:33,040
to be there and the server's supposed to

911
00:44:30,400 --> 00:44:37,870
I guess you say make a best effort at at

912
00:44:33,040 --> 00:44:41,560
replay protection toastin speaking as a

913
00:44:37,870 --> 00:44:42,910
co-author um first reflecting on

914
00:44:41,560 --> 00:44:45,820
Annabelle's question regarding the

915
00:44:42,910 --> 00:44:48,310
threat model it's being documented it

916
00:44:45,820 --> 00:44:50,710
can be found in section 2 so refers to

917
00:44:48,310 --> 00:44:54,850
the threat model that's documenting the

918
00:44:50,710 --> 00:44:57,220
security BCP and I think generally we

919
00:44:54,850 --> 00:45:00,420
need to keep in mind the scope and the

920
00:44:57,220 --> 00:45:04,270
objective of that draft I stated that

921
00:45:00,420 --> 00:45:07,420
yesterday I do it again this is a

922
00:45:04,270 --> 00:45:09,550
stopgap measure this is not intended to

923
00:45:07,420 --> 00:45:11,950
be at least from my perspective as a

924
00:45:09,550 --> 00:45:14,620
general means to do pop in the org world

925
00:45:11,950 --> 00:45:18,850
because we've got another mechanism TLS

926
00:45:14,620 --> 00:45:21,069
and it works very well this one the

927
00:45:18,850 --> 00:45:22,810
original objective was to find something

928
00:45:21,070 --> 00:45:25,360
that works for SPS that wants to use

929
00:45:22,810 --> 00:45:28,230
access tokens in the browser please keep

930
00:45:25,360 --> 00:45:30,490
that in mind we can change the scope but

931
00:45:28,230 --> 00:45:32,170
then we need to consider the

932
00:45:30,490 --> 00:45:36,850
consequences but that's that's the

933
00:45:32,170 --> 00:45:38,020
reason why we started at work this is

934
00:45:36,850 --> 00:45:40,720
Justin with what

935
00:45:38,020 --> 00:45:43,630
Torsten just said and again you know and

936
00:45:40,720 --> 00:45:45,999
brought up yesterday in mind

937
00:45:43,630 --> 00:45:48,699
the the scope and the threat model is

938
00:45:45,999 --> 00:45:51,609
not clear from the current dock so if we

939
00:45:48,699 --> 00:45:53,579
bring this in as a working group item

940
00:45:51,609 --> 00:45:56,979
then that's going to have to be very

941
00:45:53,579 --> 00:45:58,089
very very very clear because I think a

942
00:45:56,979 --> 00:46:01,689
lot of the discussion that's happening

943
00:45:58,089 --> 00:46:05,199
right now is because this feels like

944
00:46:01,690 --> 00:46:06,880
it's it it could be you know the

945
00:46:05,199 --> 00:46:09,880
resurrection of the whole low off pop

946
00:46:06,880 --> 00:46:11,259
infrastructure and that had all kinds of

947
00:46:09,880 --> 00:46:13,150
features like the server being able to

948
00:46:11,259 --> 00:46:14,499
provision keys to clients and symmetric

949
00:46:13,150 --> 00:46:17,469
crypto and all of this other kind of

950
00:46:14,499 --> 00:46:21,189
stuff which aren't part of this I think

951
00:46:17,469 --> 00:46:25,690
that this would benefit from a narrower

952
00:46:21,190 --> 00:46:30,119
focus like for example pixie had pixie

953
00:46:25,690 --> 00:46:32,799
was about you know public mobile clients

954
00:46:30,119 --> 00:46:34,900
protecting the auth code flow because

955
00:46:32,799 --> 00:46:36,910
they don't have client secrets and by

956
00:46:34,900 --> 00:46:38,829
the way here's how you do it turns out

957
00:46:36,910 --> 00:46:40,538
Pixies a lot more useful for a lot more

958
00:46:38,829 --> 00:46:44,410
than that and we're using it everywhere

959
00:46:40,539 --> 00:46:46,509
for lots of different things because it

960
00:46:44,410 --> 00:46:50,949
was a reasonably defined mechanism that

961
00:46:46,509 --> 00:46:52,809
found other uses this right now feels

962
00:46:50,949 --> 00:46:55,269
doesn't feel like that it doesn't feel

963
00:46:52,809 --> 00:46:59,559
like it's a specific point solution or

964
00:46:55,269 --> 00:47:01,269
stopgap as as Torsten said so if we were

965
00:46:59,559 --> 00:47:04,329
to go forward with this and to be clear

966
00:47:01,269 --> 00:47:06,848
I like deep hop I think it's a really

967
00:47:04,329 --> 00:47:10,420
clever way to have the solution and I've

968
00:47:06,849 --> 00:47:14,650
implemented all these header processing

969
00:47:10,420 --> 00:47:18,219
things and stuff like that I I like this

970
00:47:14,650 --> 00:47:21,519
but we need but if we want it to stay

971
00:47:18,219 --> 00:47:24,969
focused it needs to be presented as

972
00:47:21,519 --> 00:47:27,129
focused in the text and in the working

973
00:47:24,969 --> 00:47:28,779
group we're not there yet I think we

974
00:47:27,130 --> 00:47:31,170
could get there if we decided to bring

975
00:47:28,779 --> 00:47:31,170
this forward

976
00:47:33,729 --> 00:47:38,169
Eric knee from octa I don't mean to like

977
00:47:36,670 --> 00:47:42,449
hone in on a specific point again but

978
00:47:38,170 --> 00:47:45,119
just to echo Annabelle was saying and

979
00:47:42,449 --> 00:47:48,039
relaying comments from people at octa

980
00:47:45,119 --> 00:47:51,489
there is definitely some concern around

981
00:47:48,039 --> 00:47:55,539
the asymmetric only keys and I know that

982
00:47:51,489 --> 00:47:57,490
a lot of my team there would not deploy

983
00:47:55,539 --> 00:47:59,800
it if it was asymmetric only

984
00:47:57,490 --> 00:48:01,839
would rather see a symmetric option so

985
00:47:59,800 --> 00:48:05,020
because of the speed concerns there so

986
00:48:01,840 --> 00:48:06,970
just keep in mind that we still actually

987
00:48:05,020 --> 00:48:09,850
have a working group of item if the

988
00:48:06,970 --> 00:48:13,899
symmetric version as well are so so in

989
00:48:09,850 --> 00:48:15,819
that sense we find of course when

990
00:48:13,900 --> 00:48:18,790
Annabelle presented her work I asked her

991
00:48:15,820 --> 00:48:20,350
whether it would make sense to align

992
00:48:18,790 --> 00:48:21,970
that what she presented because it was

993
00:48:20,350 --> 00:48:25,900
slightly different to in terms of header

994
00:48:21,970 --> 00:48:29,230
fields etc but that may be an option but

995
00:48:25,900 --> 00:48:31,180
what I hear from numerous percent sort

996
00:48:29,230 --> 00:48:33,790
of presenters on a microphone now is

997
00:48:31,180 --> 00:48:36,790
that you want something very specific

998
00:48:33,790 --> 00:48:40,480
very specific need and not a generic

999
00:48:36,790 --> 00:48:44,790
mechanism and I think is that correct

1000
00:48:40,480 --> 00:48:44,790
but what you do you want something else

1001
00:48:45,960 --> 00:48:57,060
but but well I gave the specific example

1002
00:48:50,740 --> 00:48:59,229
of the spot type applications and but as

1003
00:48:57,060 --> 00:49:01,560
maybe I couldn't sort of where Justin

1004
00:48:59,230 --> 00:49:04,270
came from oftentimes you know a specific

1005
00:49:01,560 --> 00:49:05,650
point solution can be generalized into

1006
00:49:04,270 --> 00:49:07,119
something more and so from my

1007
00:49:05,650 --> 00:49:10,140
perspective I'm trying to make this

1008
00:49:07,119 --> 00:49:14,440
something that can be a reasonable

1009
00:49:10,140 --> 00:49:17,109
deployable usable pop option for access

1010
00:49:14,440 --> 00:49:19,420
and refresh token so we how we came here

1011
00:49:17,109 --> 00:49:21,520
was um we had a working group item I

1012
00:49:19,420 --> 00:49:23,830
still have one that is that has a

1013
00:49:21,520 --> 00:49:26,020
symmetric and an asymmetric variant and

1014
00:49:23,830 --> 00:49:28,690
then you guys started this new effort

1015
00:49:26,020 --> 00:49:30,400
because you the argument was the other

1016
00:49:28,690 --> 00:49:32,350
one is too complicated because it

1017
00:49:30,400 --> 00:49:35,290
contains the symmetric the asymmetric

1018
00:49:32,350 --> 00:49:37,210
and refers to some generic HTTP signing

1019
00:49:35,290 --> 00:49:40,869
which now interestingly is being

1020
00:49:37,210 --> 00:49:43,180
entertained now which is and now you are

1021
00:49:40,869 --> 00:49:44,650
saying oh actually we could extend it to

1022
00:49:43,180 --> 00:49:50,980
something more generic that doesn't make

1023
00:49:44,650 --> 00:49:54,550
sense to me right that's what he just

1024
00:49:50,980 --> 00:49:55,900
said nothing okay so no I'm not saying

1025
00:49:54,550 --> 00:49:57,190
it could be extended to something more

1026
00:49:55,900 --> 00:49:58,810
generic I'm not pushing for it I'm

1027
00:49:57,190 --> 00:50:00,940
hearing people say it should include a

1028
00:49:58,810 --> 00:50:02,799
symmetric key option I'm saying that

1029
00:50:00,940 --> 00:50:05,470
there's a very serious trade-off with

1030
00:50:02,800 --> 00:50:07,650
that okay in that this is simple because

1031
00:50:05,470 --> 00:50:09,549
it relies on public private keys I

1032
00:50:07,650 --> 00:50:11,170
understand the concerns I don't know I'm

1033
00:50:09,550 --> 00:50:11,510
not saying it's not a done decision but

1034
00:50:11,170 --> 00:50:13,280
that's

1035
00:50:11,510 --> 00:50:14,810
that's why it's this way that's why it

1036
00:50:13,280 --> 00:50:16,100
can be as simple as just the client

1037
00:50:14,810 --> 00:50:17,960
presenting this header every time

1038
00:50:16,100 --> 00:50:19,610
because we're not negotiating keys

1039
00:50:17,960 --> 00:50:21,860
that's why you get a particular security

1040
00:50:19,610 --> 00:50:23,330
property of not being able to replay

1041
00:50:21,860 --> 00:50:24,770
that across resource servers because you

1042
00:50:23,330 --> 00:50:26,150
don't have to distribute this is not

1043
00:50:24,770 --> 00:50:28,640
your key and get in the situation where

1044
00:50:26,150 --> 00:50:30,170
the resource server can then impersonate

1045
00:50:28,640 --> 00:50:31,700
another one because it has access the

1046
00:50:30,170 --> 00:50:34,520
symmetric key so that that was sort of

1047
00:50:31,700 --> 00:50:35,810
driving bit of this there are people

1048
00:50:34,520 --> 00:50:38,630
that want it to be something different

1049
00:50:35,810 --> 00:50:40,250
um I you know we're at a working group

1050
00:50:38,630 --> 00:50:42,620
we have to work through that but so I'm

1051
00:50:40,250 --> 00:50:45,110
trying to respond to different comments

1052
00:50:42,620 --> 00:50:46,850
and different desires for things one of

1053
00:50:45,110 --> 00:50:49,190
the reasons you know the document you

1054
00:50:46,850 --> 00:50:50,839
keep talking about has symmetric and

1055
00:50:49,190 --> 00:50:54,560
asymmetric key options but it's it's

1056
00:50:50,840 --> 00:50:57,710
strictly key distribution it doesn't do

1057
00:50:54,560 --> 00:51:00,230
the the actual token presentation and

1058
00:50:57,710 --> 00:51:02,840
proof of possession part which is right

1059
00:51:00,230 --> 00:51:05,600
another reason that it's not not useful

1060
00:51:02,840 --> 00:51:08,030
yeah well it it had that just in a

1061
00:51:05,600 --> 00:51:12,410
separate document which this was just in

1062
00:51:08,030 --> 00:51:15,050
some document if you recall which which

1063
00:51:12,410 --> 00:51:19,310
I think now before the work we made its

1064
00:51:15,050 --> 00:51:21,680
way into the at this meeting getting

1065
00:51:19,310 --> 00:51:24,290
adopting this was and this was what

1066
00:51:21,680 --> 00:51:26,750
anybody was talking about is that or is

1067
00:51:24,290 --> 00:51:28,460
it a modified cabbage combined with

1068
00:51:26,750 --> 00:51:31,460
something something it's it's an

1069
00:51:28,460 --> 00:51:33,710
illusion of that more of that yeah but

1070
00:51:31,460 --> 00:51:38,320
it but there the idea was to separate

1071
00:51:33,710 --> 00:51:41,000
out the key distribution from the

1072
00:51:38,320 --> 00:51:47,120
presentation in two separate documents

1073
00:51:41,000 --> 00:51:52,370
there was a decision at that time good

1074
00:51:47,120 --> 00:51:55,009
good approach I don't know I've got

1075
00:51:52,370 --> 00:51:59,569
another comment from Jabbar again from

1076
00:51:55,010 --> 00:52:03,080
Philip and he basically is underlining

1077
00:51:59,570 --> 00:52:06,290
or stressing what Orton said let's not

1078
00:52:03,080 --> 00:52:08,830
forget the initial scope urgent need to

1079
00:52:06,290 --> 00:52:15,710
be solved the sender constrained spi

1080
00:52:08,830 --> 00:52:19,880
tokens john bradley yubico one of the

1081
00:52:15,710 --> 00:52:22,070
co-authors so again with scope our

1082
00:52:19,880 --> 00:52:24,020
initial plan in the working group and

1083
00:52:22,070 --> 00:52:24,850
discussions work we were going to use

1084
00:52:24,020 --> 00:52:27,850
token by

1085
00:52:24,850 --> 00:52:30,430
to center constrained tokens for single

1086
00:52:27,850 --> 00:52:32,650
page applications some people over here

1087
00:52:30,430 --> 00:52:36,100
that I'm pointing at may have screwed up

1088
00:52:32,650 --> 00:52:38,770
that idea what

1089
00:52:36,100 --> 00:52:45,819
well not Dirk he's actually on the good

1090
00:52:38,770 --> 00:52:47,590
side but when and we may eventually get

1091
00:52:45,820 --> 00:52:51,310
token binding when Microsoft and Google

1092
00:52:47,590 --> 00:52:56,380
sort things out and we cats and dogs

1093
00:52:51,310 --> 00:52:58,540
live together happy so until given that

1094
00:52:56,380 --> 00:53:01,030
that might not happen in the next short

1095
00:52:58,540 --> 00:53:03,610
number of months we at the OAuth

1096
00:53:01,030 --> 00:53:06,630
security workshop we said okay what can

1097
00:53:03,610 --> 00:53:09,280
we do for a single page application

1098
00:53:06,630 --> 00:53:12,760
since we don't have token binding in the

1099
00:53:09,280 --> 00:53:14,740
near future and the answer was okay you

1100
00:53:12,760 --> 00:53:17,080
could use web crypto and have the

1101
00:53:14,740 --> 00:53:20,080
browser make a key pair and do a very

1102
00:53:17,080 --> 00:53:22,750
simple signing operation so this is

1103
00:53:20,080 --> 00:53:26,890
really only intended to deal with that

1104
00:53:22,750 --> 00:53:29,830
single page application mechanism so I

1105
00:53:26,890 --> 00:53:31,629
don't know whether given that we're

1106
00:53:29,830 --> 00:53:33,610
talking about single page applications

1107
00:53:31,630 --> 00:53:37,030
whether the performance issues are

1108
00:53:33,610 --> 00:53:41,380
really all that concerning these aren't

1109
00:53:37,030 --> 00:53:44,110
high speed you know high volumes clients

1110
00:53:41,380 --> 00:53:47,770
server clients that are talking to two

1111
00:53:44,110 --> 00:53:48,970
api's for other applications that

1112
00:53:47,770 --> 00:53:53,770
doesn't hmm

1113
00:53:48,970 --> 00:53:56,890
make any sense with force for native

1114
00:53:53,770 --> 00:54:00,250
apps and host based applications they

1115
00:53:56,890 --> 00:54:03,100
should be using the mutual TLS proof of

1116
00:54:00,250 --> 00:54:07,960
possession because that does have better

1117
00:54:03,100 --> 00:54:11,110
scaling options so this isn't intended

1118
00:54:07,960 --> 00:54:14,440
to deal with all the native apps all the

1119
00:54:11,110 --> 00:54:17,350
server based clients this is really

1120
00:54:14,440 --> 00:54:20,470
intended for that subset of single page

1121
00:54:17,350 --> 00:54:28,120
applications that need to sender

1122
00:54:20,470 --> 00:54:34,120
constrain their tokens Justin again so

1123
00:54:28,120 --> 00:54:36,730
what if this were adopted with the very

1124
00:54:34,120 --> 00:54:38,020
narrow very specific scope and all of

1125
00:54:36,730 --> 00:54:40,680
the other fancy bells and whistles go

1126
00:54:38,020 --> 00:54:40,680
into oauth 3

1127
00:54:41,140 --> 00:54:47,690
it's yeah sure what which fancy bells

1128
00:54:46,130 --> 00:54:50,960
and whistles the ones that are being

1129
00:54:47,690 --> 00:54:53,060
suggested or a key negotiations and all

1130
00:54:50,960 --> 00:54:54,620
and all of this kind of stuff and sort

1131
00:54:53,060 --> 00:54:57,650
of general proofing mechanisms and

1132
00:54:54,620 --> 00:55:00,980
things like that while I agree with

1133
00:54:57,650 --> 00:55:03,350
Annabel that you know if the time skills

1134
00:55:00,980 --> 00:55:05,980
were better this ought to be using the

1135
00:55:03,350 --> 00:55:08,509
general purpose HTTP signing mechanism

1136
00:55:05,980 --> 00:55:13,820
yeah that's probably going to be a while

1137
00:55:08,510 --> 00:55:18,830
in cooking but you know because this is

1138
00:55:13,820 --> 00:55:25,760
a very if this can be a very specific

1139
00:55:18,830 --> 00:55:28,069
thing then I think that it's not going

1140
00:55:25,760 --> 00:55:32,210
to hurt if this exists and other

1141
00:55:28,070 --> 00:55:35,510
solutions also exist so if there's a you

1142
00:55:32,210 --> 00:55:40,610
know a spot for a symmetrical proof of

1143
00:55:35,510 --> 00:55:42,620
possession or whatever then great you

1144
00:55:40,610 --> 00:55:44,720
know if there's something with the next

1145
00:55:42,620 --> 00:55:46,580
major revision of OAuth it lets you do

1146
00:55:44,720 --> 00:55:48,379
all kinds of different keys or goes back

1147
00:55:46,580 --> 00:55:50,660
to the the OAuth key distribution

1148
00:55:48,380 --> 00:55:53,030
architectures where you know servers are

1149
00:55:50,660 --> 00:55:55,129
distributing keys and binding them to

1150
00:55:53,030 --> 00:55:58,010
client credentials and all of that other

1151
00:55:55,130 --> 00:56:00,610
kind of stuff great I mean you know this

1152
00:55:58,010 --> 00:56:05,810
existing doesn't make mutual TLS go away

1153
00:56:00,610 --> 00:56:08,150
you it's it's very worth to to add

1154
00:56:05,810 --> 00:56:12,590
another thing to the already gigantic

1155
00:56:08,150 --> 00:56:15,320
menu to let people choose from that's

1156
00:56:12,590 --> 00:56:17,540
true and yeah and we are in the we are

1157
00:56:15,320 --> 00:56:19,700
not done adding to the menu was the was

1158
00:56:17,540 --> 00:56:21,440
the heckling from the back this is not a

1159
00:56:19,700 --> 00:56:22,640
value judgment this is a statement if

1160
00:56:21,440 --> 00:56:26,290
you want the value judgment talk to me

1161
00:56:22,640 --> 00:56:29,150
after but for for real though this

1162
00:56:26,290 --> 00:56:36,560
having this be like this does this one

1163
00:56:29,150 --> 00:56:38,780
thing I think fits and about just having

1164
00:56:36,560 --> 00:56:40,580
looked at backup of the D pops back if

1165
00:56:38,780 --> 00:56:42,590
the intention is really that this is

1166
00:56:40,580 --> 00:56:44,600
specifically driven at at s pas that

1167
00:56:42,590 --> 00:56:45,980
really needs to be cleared out that

1168
00:56:44,600 --> 00:56:48,980
really needs to be called out more

1169
00:56:45,980 --> 00:56:50,780
clearly in the draft because it really

1170
00:56:48,980 --> 00:56:52,670
isn't right now you've sort of if you

1171
00:56:50,780 --> 00:56:54,260
read between the lines and knowing that

1172
00:56:52,670 --> 00:56:56,869
you know that's what the authors are

1173
00:56:54,260 --> 00:56:58,700
saying in forums like this then you can

1174
00:56:56,869 --> 00:57:02,650
kind of see it but without that it's

1175
00:56:58,700 --> 00:57:06,460
really not clear separately back to the

1176
00:57:02,650 --> 00:57:08,510
asymmetric crypto scaling question

1177
00:57:06,460 --> 00:57:11,960
everybody's focusing on latency but

1178
00:57:08,510 --> 00:57:14,329
that's only one aspect of scaling if you

1179
00:57:11,960 --> 00:57:17,150
have a service that is taking millions

1180
00:57:14,329 --> 00:57:20,180
of requests a second that little bit of

1181
00:57:17,150 --> 00:57:22,309
CPU time adds up and all of a sudden

1182
00:57:20,180 --> 00:57:25,759
you're running your service becomes a

1183
00:57:22,309 --> 00:57:29,539
lot more expensive so yeah that may not

1184
00:57:25,760 --> 00:57:32,359
you know one one request taking a tiny

1185
00:57:29,539 --> 00:57:36,799
fraction of a second longer may not you

1186
00:57:32,359 --> 00:57:39,259
know impact the end users experience but

1187
00:57:36,799 --> 00:57:41,269
that doesn't necessarily mean that it's

1188
00:57:39,260 --> 00:57:43,010
scalable the other thing to consider is

1189
00:57:41,269 --> 00:57:45,558
scenarios where you're making lots of

1190
00:57:43,010 --> 00:57:47,059
these requests in the course of

1191
00:57:45,559 --> 00:57:49,190
fulfilling one you want to end user

1192
00:57:47,059 --> 00:57:52,490
requests so are when you end user

1193
00:57:49,190 --> 00:58:03,920
operation it's not necessarily just one

1194
00:57:52,490 --> 00:58:18,279
hit here it could be multiple make

1195
00:58:03,920 --> 00:58:18,279
Joan's Microsoft Mike Jones Microsoft

1196
00:58:18,730 --> 00:58:26,599
Microsoft internally currently has

1197
00:58:22,130 --> 00:58:28,839
deployed the old Roth HTTP signing draft

1198
00:58:26,599 --> 00:58:31,849
that expired two and a half years ago

1199
00:58:28,839 --> 00:58:34,609
because we need application level

1200
00:58:31,849 --> 00:58:39,589
signing given the failure of token

1201
00:58:34,609 --> 00:58:41,779
binding to ubiquitously deploy we would

1202
00:58:39,589 --> 00:58:45,288
like to use this for all flows for all

1203
00:58:41,779 --> 00:58:50,049
client types and please let's not do

1204
00:58:45,289 --> 00:58:50,049
anything that prevents that from working

1205
00:58:52,569 --> 00:58:59,500
Dolson um

1206
00:58:56,560 --> 00:59:01,690
in answering over reflecting on what an

1207
00:58:59,500 --> 00:59:04,990
apologist said I understand that I know

1208
00:59:01,690 --> 00:59:06,790
that they CP o cost for a symmetric is I

1209
00:59:04,990 --> 00:59:08,950
think to others or three orders of

1210
00:59:06,790 --> 00:59:10,840
magnitude higher I think there are other

1211
00:59:08,950 --> 00:59:13,720
ways to couple of that then using

1212
00:59:10,840 --> 00:59:15,670
symmetric crypto we have at least two

1213
00:59:13,720 --> 00:59:17,319
architectural option and they all

1214
00:59:15,670 --> 00:59:19,930
document in the SP a BCP

1215
00:59:17,320 --> 00:59:22,930
one of them is not to use access tokens

1216
00:59:19,930 --> 00:59:26,080
in the browser and rely on web security

1217
00:59:22,930 --> 00:59:29,020
mechanisms to protect a the lack to the

1218
00:59:26,080 --> 00:59:30,340
backend and also in the in the in the in

1219
00:59:29,020 --> 00:59:33,460
the latter case which is talked about

1220
00:59:30,340 --> 00:59:36,070
having a lot of requests being executed

1221
00:59:33,460 --> 00:59:38,800
on the on behalf of the of the user yeah

1222
00:59:36,070 --> 00:59:40,450
just set up a back-end and and let that

1223
00:59:38,800 --> 00:59:44,350
back and for all those requests and use

1224
00:59:40,450 --> 00:59:48,879
a TLS so I think this is a much too

1225
00:59:44,350 --> 00:59:53,380
narrow focus discussion yet yeah just my

1226
00:59:48,880 --> 00:59:56,560
father's Annabel I'm again echoing I

1227
00:59:53,380 --> 01:00:02,170
think Mike what Mike said just was

1228
00:59:56,560 --> 01:00:04,180
really a response to that that as a you

1229
01:00:02,170 --> 01:00:05,920
know service provider we really don't

1230
01:00:04,180 --> 01:00:08,950
want to have to operate

1231
01:00:05,920 --> 01:00:11,470
you know significantly different

1232
01:00:08,950 --> 01:00:15,220
authorization mechanisms you know across

1233
01:00:11,470 --> 01:00:18,459
our ecosystem if we can avoid it and you

1234
01:00:15,220 --> 01:00:22,259
know forcing that on people is not the

1235
01:00:18,460 --> 01:00:22,260
way to get them to adopt things

1236
01:00:22,530 --> 01:00:28,330
separately III feel like you're you're

1237
01:00:27,100 --> 01:00:31,029
telling people that they should

1238
01:00:28,330 --> 01:00:34,569
architect their application such that it

1239
01:00:31,030 --> 01:00:37,270
fits the model or the constraints of

1240
01:00:34,570 --> 01:00:40,870
your authorization mechanism which seems

1241
01:00:37,270 --> 01:00:44,170
wildly backwards to me like people build

1242
01:00:40,870 --> 01:00:47,049
s pas that do not have backends but need

1243
01:00:44,170 --> 01:00:50,110
to make lots of requests to to other

1244
01:00:47,050 --> 01:00:51,970
services that use case exists if you're

1245
01:00:50,110 --> 01:00:54,460
not going to support it then that's fine

1246
01:00:51,970 --> 01:00:56,680
just acknowledge that this is not going

1247
01:00:54,460 --> 01:00:58,240
to support that use case but you know we

1248
01:00:56,680 --> 01:01:01,990
should be intentional about making that

1249
01:00:58,240 --> 01:01:03,459
decision so Brian can I ask you a

1250
01:01:01,990 --> 01:01:06,459
question you've heard a lot of feedback

1251
01:01:03,460 --> 01:01:08,590
at the mic ly what are what is the one

1252
01:01:06,460 --> 01:01:09,090
or two questions you need resolution on

1253
01:01:08,590 --> 01:01:14,040
from

1254
01:01:09,090 --> 01:01:15,750
the work nor I I don't think I can say

1255
01:01:14,040 --> 01:01:19,200
because there's a quite a bit of

1256
01:01:15,750 --> 01:01:22,500
feedback from make it very narrow to

1257
01:01:19,200 --> 01:01:25,279
make it do all this stuff I want well do

1258
01:01:22,500 --> 01:01:29,190
beyond there's a lot of competing

1259
01:01:25,280 --> 01:01:32,730
interests and desires here so I guess

1260
01:01:29,190 --> 01:01:34,920
the do you now know why we came up with

1261
01:01:32,730 --> 01:01:39,330
the more the sort of this broader thing

1262
01:01:34,920 --> 01:01:40,740
I I think he went in a group at that

1263
01:01:39,330 --> 01:01:53,970
time I think that's the problem

1264
01:01:40,740 --> 01:01:55,740
yeah it was progress this well I mean I

1265
01:01:53,970 --> 01:01:57,870
guess the first question is do we want

1266
01:01:55,740 --> 01:02:05,700
to progress it in the group because the

1267
01:01:57,870 --> 01:02:08,759
you know Torsten just my guess is and

1268
01:02:05,700 --> 01:02:12,049
that it was popping up in my head a few

1269
01:02:08,760 --> 01:02:14,010
seconds ago I think we need to have a

1270
01:02:12,050 --> 01:02:15,570
consensus in the group whether we want

1271
01:02:14,010 --> 01:02:18,450
to rely on to your last based mechanism

1272
01:02:15,570 --> 01:02:20,750
for sender constraining because all the

1273
01:02:18,450 --> 01:02:23,730
discussion now I have feared from

1274
01:02:20,750 --> 01:02:25,110
contributions from Mike and Annabel to

1275
01:02:23,730 --> 01:02:28,500
me point in a completely different

1276
01:02:25,110 --> 01:02:31,080
direction I mean right now we are unable

1277
01:02:28,500 --> 01:02:33,000
to provide a TLS base and mechanism for

1278
01:02:31,080 --> 01:02:36,000
sender constraining for all kinds of

1279
01:02:33,000 --> 01:02:38,520
clients and we drove the conclusion from

1280
01:02:36,000 --> 01:02:40,680
that we need a stopgap measure for those

1281
01:02:38,520 --> 01:02:43,920
that cannot really use em TLS which are

1282
01:02:40,680 --> 01:02:45,690
s pas note the discussion is turning

1283
01:02:43,920 --> 01:02:47,400
into all we have that mechanism let's

1284
01:02:45,690 --> 01:02:49,500
make it a general-purpose magnify all

1285
01:02:47,400 --> 01:02:51,540
kinds of plans and then I understand the

1286
01:02:49,500 --> 01:02:52,680
need for symmetric cryptography and so

1287
01:02:51,540 --> 01:02:54,410
on and so on and so on so from my

1288
01:02:52,680 --> 01:02:56,790
perspective we don't have a real

1289
01:02:54,410 --> 01:02:59,549
consensus around how we do how we want

1290
01:02:56,790 --> 01:03:02,670
to implement sender constraining no I

1291
01:02:59,550 --> 01:03:04,860
see it slightly different we have one

1292
01:03:02,670 --> 01:03:06,360
solution for we have several solution

1293
01:03:04,860 --> 01:03:09,440
for sender constraint one is token

1294
01:03:06,360 --> 01:03:11,610
binding one is empty LS and one is

1295
01:03:09,440 --> 01:03:13,710
mechanism based or the application layer

1296
01:03:11,610 --> 01:03:17,570
or several mechanisms based on

1297
01:03:13,710 --> 01:03:20,790
application layer which just haven't we

1298
01:03:17,570 --> 01:03:23,489
we like them TLS because that's why we

1299
01:03:20,790 --> 01:03:26,429
worked on and published it

1300
01:03:23,489 --> 01:03:28,319
we are but we know its limitations and

1301
01:03:26,429 --> 01:03:30,839
we also like talking bad English just

1302
01:03:28,319 --> 01:03:33,209
sad about its lack of deployment and now

1303
01:03:30,839 --> 01:03:35,549
we we need to sort of make some progress

1304
01:03:33,209 --> 01:03:38,279
on the application layer stuff which we

1305
01:03:35,549 --> 01:03:40,890
failed to make progress on and partially

1306
01:03:38,279 --> 01:03:45,119
because we can't agree on exactly on

1307
01:03:40,890 --> 01:03:46,979
what credential types to support how the

1308
01:03:45,119 --> 01:03:49,799
details look like what to sign but not a

1309
01:03:46,979 --> 01:03:54,779
sign and that's that has been a

1310
01:03:49,799 --> 01:03:59,669
challenge in the past over years in so

1311
01:03:54,779 --> 01:04:02,009
here we are yeah I I agree with that

1312
01:03:59,669 --> 01:04:10,229
um I think I've just phrased it

1313
01:04:02,009 --> 01:04:12,829
differently okay Mike Jones

1314
01:04:10,229 --> 01:04:16,410
I believe that Microsoft's viewpoint is

1315
01:04:12,829 --> 01:04:19,979
M TLS is great in certain constrained

1316
01:04:16,410 --> 01:04:24,178
environments such as financial api's but

1317
01:04:19,979 --> 01:04:26,308
it is virtually under Boleyn general

1318
01:04:24,179 --> 01:04:32,849
purpose consumer applications therefore

1319
01:04:26,309 --> 01:04:35,759
we felt get given the existent threats

1320
01:04:32,849 --> 01:04:37,559
about stealing bearer tokens that we

1321
01:04:35,759 --> 01:04:40,709
need as an industry to develop an

1322
01:04:37,559 --> 01:04:43,199
application level proof of possession

1323
01:04:40,709 --> 01:04:47,999
mechanism that works across the board

1324
01:04:43,199 --> 01:04:51,900
for access tokens refresh tokens we're

1325
01:04:47,999 --> 01:04:53,368
hoping that this will be that um we are

1326
01:04:51,900 --> 01:04:56,159
running a little bit out of time under

1327
01:04:53,369 --> 01:05:00,109
China so that because a little bit

1328
01:04:56,159 --> 01:05:04,880
longer than we were hoping and I think

1329
01:05:00,109 --> 01:05:09,959
before enable you I'm tossing that was

1330
01:05:04,880 --> 01:05:13,589
anybody's um cut the line here so I'm

1331
01:05:09,959 --> 01:05:17,069
the chairs will work with our esteemed

1332
01:05:13,589 --> 01:05:21,538
ad to find a path forward on this I'm

1333
01:05:17,069 --> 01:05:24,529
how to advance this topic because we it

1334
01:05:21,539 --> 01:05:27,689
feels a little bit stuck on that issue

1335
01:05:24,529 --> 01:05:31,489
but I'm positive that we find you find

1336
01:05:27,689 --> 01:05:34,259
something out rather quick so expect a

1337
01:05:31,489 --> 01:05:39,780
virtual intra meeting

1338
01:05:34,260 --> 01:05:44,790
yeah give him what we just heard I would

1339
01:05:39,780 --> 01:05:49,460
say not really yes we think that yeah we

1340
01:05:44,790 --> 01:05:52,830
talked this side the last coming ed was

1341
01:05:49,460 --> 01:05:57,410
from my perspective even for our SP a

1342
01:05:52,830 --> 01:05:57,410
use cases d pop would not work for us

1343
01:05:58,010 --> 01:06:02,910
we'll work this out

1344
01:06:00,600 --> 01:06:04,440
right sorry that you didn't manage to

1345
01:06:02,910 --> 01:06:06,540
get any further there must be something

1346
01:06:04,440 --> 01:06:08,970
magic I'm just like probably that's

1347
01:06:06,540 --> 01:06:11,420
really it yeah I didn't even know passed

1348
01:06:08,970 --> 01:06:22,399
that point

1349
01:06:11,420 --> 01:06:35,760
okay sorry about that um we had on yeah

1350
01:06:22,400 --> 01:06:39,119
Boston Boston okay thank you Brian

1351
01:06:35,760 --> 01:06:39,860
presenting the teapot work really

1352
01:06:39,119 --> 01:06:43,100
appreciate that

1353
01:06:39,860 --> 01:06:45,450
[Laughter]

1354
01:06:43,100 --> 01:06:50,009
yeah yeah I would like to start with

1355
01:06:45,450 --> 01:06:52,020
another yeah yeah a small addition to

1356
01:06:50,010 --> 01:06:55,980
another small addition to another small

1357
01:06:52,020 --> 01:07:03,859
addition to all its push to

1358
01:06:55,980 --> 01:07:03,859
authorization yeah alright so basically

1359
01:07:06,140 --> 01:07:13,410
the problem this the small addition to a

1360
01:07:10,740 --> 01:07:17,680
small addition of o of once the solve is

1361
01:07:13,410 --> 01:07:19,089
this that's the kind of

1362
01:07:17,680 --> 01:07:22,839
for is Asian requests we are seeing in

1363
01:07:19,090 --> 01:07:26,340
the wild when you use some of for

1364
01:07:22,840 --> 01:07:29,410
example open ID connect mechanisms

1365
01:07:26,340 --> 01:07:35,710
you're ending up with a really really

1366
01:07:29,410 --> 01:07:40,960
bulky authorization request URL that

1367
01:07:35,710 --> 01:07:43,000
sends through the user agent and it

1368
01:07:40,960 --> 01:07:45,610
poses some challenges first of all is

1369
01:07:43,000 --> 01:07:49,510
lengthy it has some impact on the

1370
01:07:45,610 --> 01:07:51,190
latency on the robustness but there's

1371
01:07:49,510 --> 01:07:53,260
also no mechanism for integrity and

1372
01:07:51,190 --> 01:07:55,920
confidentiality protection which might

1373
01:07:53,260 --> 01:07:58,420
be relevant especially if you pass

1374
01:07:55,920 --> 01:08:00,460
transaction specific values or

1375
01:07:58,420 --> 01:08:04,780
constrains regarding the authorization

1376
01:08:00,460 --> 01:08:06,490
process through that channel we've got a

1377
01:08:04,780 --> 01:08:09,070
solution at least a partial solution

1378
01:08:06,490 --> 01:08:11,709
that's the extension to all of that we

1379
01:08:09,070 --> 01:08:14,260
are gonna extend it's the judge secured

1380
01:08:11,710 --> 01:08:18,279
authorization request which I hope will

1381
01:08:14,260 --> 01:08:20,170
be published soon it provides security

1382
01:08:18,279 --> 01:08:22,359
for the authorization request by

1383
01:08:20,170 --> 01:08:24,160
providing a mechanism to sign this the

1384
01:08:22,359 --> 01:08:27,700
request objects and also has a mechanism

1385
01:08:24,160 --> 01:08:29,889
to pass a request your eye into the

1386
01:08:27,700 --> 01:08:32,490
authorization request if you don't want

1387
01:08:29,890 --> 01:08:35,650
to pass all the data to the user agent

1388
01:08:32,490 --> 01:08:39,729
and what we do now we provide a

1389
01:08:35,649 --> 01:08:42,670
mechanism to upload the payload of

1390
01:08:39,729 --> 01:08:45,519
authorization request to das and to

1391
01:08:42,670 --> 01:08:48,040
obtain request your I to then use the

1392
01:08:45,520 --> 01:08:49,960
draw mechanism request UI to send the

1393
01:08:48,040 --> 01:08:52,149
data to das so for my perspective that's

1394
01:08:49,960 --> 01:08:55,270
just the nets next step to bridge that

1395
01:08:52,149 --> 01:08:58,389
to bridge that gap and that's how it's

1396
01:08:55,270 --> 01:09:01,390
going to look like so there's just a

1397
01:08:58,390 --> 01:09:04,600
small change with a step two

1398
01:09:01,390 --> 01:09:07,630
so declined first sets up the

1399
01:09:04,600 --> 01:09:11,560
authorization request in the direct post

1400
01:09:07,630 --> 01:09:16,900
call to the a s and they asked somewhere

1401
01:09:11,560 --> 01:09:19,780
stores did this payload and returns a UN

1402
01:09:16,899 --> 01:09:22,899
to the client and that your and then in

1403
01:09:19,779 --> 01:09:25,590
turn is used in the front end call to

1404
01:09:22,899 --> 01:09:25,589
the a s

1405
01:09:27,380 --> 01:09:33,480
all right so how does it look like on an

1406
01:09:30,810 --> 01:09:35,430
HTTP level um that's a traditional OAuth

1407
01:09:33,479 --> 01:09:38,519
request so it's a get that sent from the

1408
01:09:35,430 --> 01:09:43,410
user agent to today arm to the a s

1409
01:09:38,520 --> 01:09:45,390
authorization endpoint what we do is we

1410
01:09:43,410 --> 01:09:48,750
defined a new push to authorization

1411
01:09:45,390 --> 01:09:51,299
endpoint with das and it takes the same

1412
01:09:48,750 --> 01:09:55,260
parameters in exactly the same encoding

1413
01:09:51,299 --> 01:09:58,230
and sends that why a post request

1414
01:09:55,260 --> 01:10:01,470
that's the modification and what you

1415
01:09:58,230 --> 01:10:04,200
also see on that request you can easily

1416
01:10:01,470 --> 01:10:08,070
authenticate the client and draft says

1417
01:10:04,200 --> 01:10:10,019
use the token or the a s uses the same

1418
01:10:08,070 --> 01:10:11,969
token endpoint authentication method

1419
01:10:10,020 --> 01:10:13,410
that's set up for a declined to

1420
01:10:11,970 --> 01:10:17,850
authenticate the client for that request

1421
01:10:13,410 --> 01:10:21,240
which also means you can only refuse to

1422
01:10:17,850 --> 01:10:23,880
serve that client for example because

1423
01:10:21,240 --> 01:10:26,280
the client isn't authorized to access or

1424
01:10:23,880 --> 01:10:30,240
request a certain scope which adds a lot

1425
01:10:26,280 --> 01:10:32,070
to the security of the protocol because

1426
01:10:30,240 --> 01:10:34,349
then in the authorization endpoint you

1427
01:10:32,070 --> 01:10:36,330
know I have actually authenticated that

1428
01:10:34,350 --> 01:10:39,150
client before the authorization request

1429
01:10:36,330 --> 01:10:42,230
hit my authorization endpoint that's

1430
01:10:39,150 --> 01:10:45,719
really cool yeah and then the a s

1431
01:10:42,230 --> 01:10:49,950
returns a request URI and the request

1432
01:10:45,720 --> 01:10:53,130
your I is not intended to be used as a

1433
01:10:49,950 --> 01:10:55,800
way to obtain the authorization data by

1434
01:10:53,130 --> 01:10:57,810
any external system it's just a

1435
01:10:55,800 --> 01:10:59,940
reference could have been an opaque

1436
01:10:57,810 --> 01:11:04,440
identifier I think it's I would assume

1437
01:10:59,940 --> 01:11:07,019
XYZ does it with an opaque identifier we

1438
01:11:04,440 --> 01:11:09,570
just decided to do build on top of jar

1439
01:11:07,020 --> 01:11:11,130
and that's why it isn't URM and that

1440
01:11:09,570 --> 01:11:12,840
you're and then is passed in the

1441
01:11:11,130 --> 01:11:16,140
authorization request and the es is

1442
01:11:12,840 --> 01:11:18,900
supposed to use that or you are and to

1443
01:11:16,140 --> 01:11:23,060
look the authorization the request up in

1444
01:11:18,900 --> 01:11:23,059
a database and then just proceed

1445
01:11:23,120 --> 01:11:28,110
question now just Richard just for a

1446
01:11:25,770 --> 01:11:30,660
quick clarification in Xyz so yeah keep

1447
01:11:28,110 --> 01:11:33,929
it on this slide the main difference

1448
01:11:30,660 --> 01:11:36,150
between the way that this this works and

1449
01:11:33,930 --> 01:11:38,970
XYZ is that what you get back in X Y Z

1450
01:11:36,150 --> 01:11:40,559
is that entire URL and not something

1451
01:11:38,970 --> 01:11:43,190
that the client composes other

1452
01:11:40,560 --> 01:11:45,690
why is it is very much the same pattern

1453
01:11:43,190 --> 01:11:48,509
yeah we stripped it down as far as

1454
01:11:45,690 --> 01:11:52,889
possible but wanted to be compliant to

1455
01:11:48,510 --> 01:11:57,240
to the rest of oh of and there's another

1456
01:11:52,890 --> 01:11:59,220
option which is to actually send a

1457
01:11:57,240 --> 01:12:01,920
signed and potentially a cryptic request

1458
01:11:59,220 --> 01:12:04,710
object why the same channel so instead

1459
01:12:01,920 --> 01:12:07,680
of using the payload we are familiar way

1460
01:12:04,710 --> 01:12:12,330
from RC 67 49 use the payload has been

1461
01:12:07,680 --> 01:12:14,250
defined by drower to send payload to das

1462
01:12:12,330 --> 01:12:16,830
having the advantage she can do our

1463
01:12:14,250 --> 01:12:20,160
application level crypto for example to

1464
01:12:16,830 --> 01:12:20,400
do non-repudiation the result is the

1465
01:12:20,160 --> 01:12:22,530
same

1466
01:12:20,400 --> 01:12:25,049
you could request your eye and you send

1467
01:12:22,530 --> 01:12:26,670
that request your eye to das so those

1468
01:12:25,050 --> 01:12:31,470
are the two different modes that we

1469
01:12:26,670 --> 01:12:34,020
expect out the advantages of the

1470
01:12:31,470 --> 01:12:36,300
solutions are it's a release of robust

1471
01:12:34,020 --> 01:12:39,780
solution for sending even larger

1472
01:12:36,300 --> 01:12:41,460
authorization requests payloads to das

1473
01:12:39,780 --> 01:12:44,160
which are relevant in all the use cases

1474
01:12:41,460 --> 01:12:46,710
I am working on currently and I think I

1475
01:12:44,160 --> 01:12:51,690
described that on Monday and there is

1476
01:12:46,710 --> 01:12:53,700
also a significant improvement in

1477
01:12:51,690 --> 01:12:58,230
security for from my perspective

1478
01:12:53,700 --> 01:13:00,059
relatively less cost of you cost because

1479
01:12:58,230 --> 01:13:02,540
we've got the integrity confidentiality

1480
01:13:00,060 --> 01:13:04,890
and authenticity protection of TLS

1481
01:13:02,540 --> 01:13:06,750
you've got the client authentication up

1482
01:13:04,890 --> 01:13:09,950
front of the authorization process which

1483
01:13:06,750 --> 01:13:12,420
also mean you can authorize decline and

1484
01:13:09,950 --> 01:13:14,490
Daniel's FETs feeling is that it's in

1485
01:13:12,420 --> 01:13:18,090
resistant accounts against mix-up

1486
01:13:14,490 --> 01:13:21,059
attacks and that's from my perspective

1487
01:13:18,090 --> 01:13:22,680
better than having some systematic

1488
01:13:21,060 --> 01:13:25,050
analysis of other people so are the

1489
01:13:22,680 --> 01:13:28,380
analysis is still ongoing but we already

1490
01:13:25,050 --> 01:13:30,630
really confident about that end early

1491
01:13:28,380 --> 01:13:32,460
experience the show that's really easy

1492
01:13:30,630 --> 01:13:34,650
to use I'm starting with the developers

1493
01:13:32,460 --> 01:13:36,810
of the a SS because some a s has already

1494
01:13:34,650 --> 01:13:39,599
have implemented that and they that did

1495
01:13:36,810 --> 01:13:41,970
really quickly and that also guided a

1496
01:13:39,600 --> 01:13:44,820
bit just the way we should we wrote a

1497
01:13:41,970 --> 01:13:46,410
specification and it turned out that the

1498
01:13:44,820 --> 01:13:48,030
logic that's being executed at the

1499
01:13:46,410 --> 01:13:49,440
authorization endpoint and the logics

1500
01:13:48,030 --> 01:13:53,969
being executed that the token endpoint

1501
01:13:49,440 --> 01:13:54,360
can be combined in a pipe that's at

1502
01:13:53,970 --> 01:13:56,610
least

1503
01:13:54,360 --> 01:13:58,670
but Filipe for example told us I mean if

1504
01:13:56,610 --> 01:14:02,639
you have come up with different

1505
01:13:58,670 --> 01:14:04,889
experiences there's no let you know now

1506
01:14:02,639 --> 01:14:08,760
or as you like

1507
01:14:04,889 --> 01:14:13,110
okay just nurture just add so I have

1508
01:14:08,760 --> 01:14:15,650
yeah I know we got a we got area I've so

1509
01:14:13,110 --> 01:14:20,009
we did implement this spec as part of

1510
01:14:15,650 --> 01:14:22,170
athletes next revision and while we

1511
01:14:20,010 --> 01:14:25,199
weren't able to completely combined the

1512
01:14:22,170 --> 01:14:28,889
off endpoint we were able to abstract a

1513
01:14:25,199 --> 01:14:31,500
lot of the processing and I can I can

1514
01:14:28,889 --> 01:14:35,119
state that this is pretty easy and

1515
01:14:31,500 --> 01:14:40,730
sensible to do on an existing

1516
01:14:35,119 --> 01:14:40,730
established AAS platform okay thanks

1517
01:14:41,030 --> 01:14:46,290
yeah um Annabel Backman Amazon personal

1518
01:14:44,070 --> 01:14:48,150
I just want to say I think this is like

1519
01:14:46,290 --> 01:14:49,769
a no-brainer for the working group to

1520
01:14:48,150 --> 01:14:54,239
adopt I definitely think we should do

1521
01:14:49,770 --> 01:14:59,340
this okay we still friends Torsten why

1522
01:14:54,239 --> 01:15:01,769
not you don't like my ideas of running

1523
01:14:59,340 --> 01:15:05,670
SBA's I can live with that

1524
01:15:01,770 --> 01:15:09,119
I did want to ask her how your have you

1525
01:15:05,670 --> 01:15:12,300
thought about how this would mix with

1526
01:15:09,119 --> 01:15:14,940
the device flow and if there's an

1527
01:15:12,300 --> 01:15:19,980
opportunity to align the two of those

1528
01:15:14,940 --> 01:15:22,799
because yes an excellent question what I

1529
01:15:19,980 --> 01:15:27,419
just out of the top of my head I fear we

1530
01:15:22,800 --> 01:15:29,760
are running into XYZ territory and III

1531
01:15:27,420 --> 01:15:31,409
don't have concerns going that way but I

1532
01:15:29,760 --> 01:15:33,690
think you will end up with a more

1533
01:15:31,409 --> 01:15:36,059
conversational protocol and that's not

1534
01:15:33,690 --> 01:15:37,769
the way o of two is designed to work but

1535
01:15:36,060 --> 01:15:40,560
we should definitely take a look into

1536
01:15:37,770 --> 01:15:43,530
that and I would also include Seba even

1537
01:15:40,560 --> 01:15:46,409
if that's not ITF stuff yeah yeah I

1538
01:15:43,530 --> 01:15:48,900
haven't read this too closely but it

1539
01:15:46,409 --> 01:15:52,440
seems like there might be an easy way to

1540
01:15:48,900 --> 01:15:57,750
integrate to to get it to play well with

1541
01:15:52,440 --> 01:15:59,339
device flow but yeah yeah yeah that

1542
01:15:57,750 --> 01:16:00,510
could easily like blow things up yeah I

1543
01:15:59,340 --> 01:16:02,790
thought about that

1544
01:16:00,510 --> 01:16:04,230
also so if you can find ways yeah let's

1545
01:16:02,790 --> 01:16:06,980
make it simpler in the end

1546
01:16:04,230 --> 01:16:06,980
I'll take a look

1547
01:16:08,550 --> 01:16:11,770
engineered now because we are running

1548
01:16:10,510 --> 01:16:15,820
terribly out of time

1549
01:16:11,770 --> 01:16:17,890
they can leave look Justin just to just

1550
01:16:15,820 --> 01:16:20,580
to reinforce what Torsen just said when

1551
01:16:17,890 --> 01:16:23,170
you combine par at the device flows Seba

1552
01:16:20,580 --> 01:16:26,470
you know the the fappy stuff that

1553
01:16:23,170 --> 01:16:28,780
predated this Yuma all of those sort of

1554
01:16:26,470 --> 01:16:31,060
staging intent things into one protocol

1555
01:16:28,780 --> 01:16:33,370
you kind of do get X Y Z that was the

1556
01:16:31,060 --> 01:16:36,160
idea they they are not as compatible as

1557
01:16:33,370 --> 01:16:39,670
they seem on the box unfortunately due

1558
01:16:36,160 --> 01:16:42,130
to the nature of os conversations okay

1559
01:16:39,670 --> 01:16:43,930
so as I already mentioned there are

1560
01:16:42,130 --> 01:16:48,700
implementations out there I I count at

1561
01:16:43,930 --> 01:16:50,350
five of them so my last question is

1562
01:16:48,700 --> 01:16:53,550
would the working group consider to

1563
01:16:50,350 --> 01:16:59,680
adopt that as a working group I document

1564
01:16:53,550 --> 01:17:01,990
I'm going to ask for hum please hum if

1565
01:16:59,680 --> 01:17:04,030
you think that we should adopt this

1566
01:17:01,990 --> 01:17:11,889
document as a starting point for the

1567
01:17:04,030 --> 01:17:16,210
working group please some if you can

1568
01:17:11,890 --> 01:17:19,930
please hum if you object to making this

1569
01:17:16,210 --> 01:17:25,090
a working group item okay and that was

1570
01:17:19,930 --> 01:17:36,710
clear strong positive response to thank

1571
01:17:25,090 --> 01:17:38,220
you okay that was the warmup you have

1572
01:17:36,710 --> 01:17:43,480
[Music]

1573
01:17:38,220 --> 01:17:44,800
two minutes that reminds me on the first

1574
01:17:43,480 --> 01:17:46,150
presentation of the charts I'm for

1575
01:17:44,800 --> 01:17:48,610
introspection responds that are

1576
01:17:46,150 --> 01:18:00,639
different mode ly so honestly two

1577
01:17:48,610 --> 01:18:05,349
minutes not really I was part of it

1578
01:18:00,640 --> 01:18:08,080
okay um all right then I talked about

1579
01:18:05,350 --> 01:18:09,820
just briefly talk about the problem the

1580
01:18:08,080 --> 01:18:17,329
proposal and we'll ask you to add up the

1581
01:18:09,820 --> 01:18:20,960
draft right so the problem is is about

1582
01:18:17,329 --> 01:18:25,119
I would say complex authorization

1583
01:18:20,960 --> 01:18:27,500
processes Tony I try as best as I can

1584
01:18:25,119 --> 01:18:29,808
complex authorization processes that

1585
01:18:27,500 --> 01:18:31,130
need more data as you can today pass in

1586
01:18:29,809 --> 01:18:33,139
a scope so let's assume you have a

1587
01:18:31,130 --> 01:18:35,690
payment API you wanna the merchant wants

1588
01:18:33,139 --> 01:18:39,290
to to send the payment or get some money

1589
01:18:35,690 --> 01:18:41,030
the question is how does the author how

1590
01:18:39,290 --> 01:18:43,849
does the resource all know that it a

1591
01:18:41,030 --> 01:18:46,550
user actually authorized that this

1592
01:18:43,849 --> 01:18:48,860
merchant is allowed to to get that money

1593
01:18:46,550 --> 01:18:50,389
and that's that's the key question that

1594
01:18:48,860 --> 01:18:53,540
drives the rich authorization stuff

1595
01:18:50,389 --> 01:18:55,040
because in the end the authorization

1596
01:18:53,540 --> 01:18:59,380
server needs all the information to

1597
01:18:55,040 --> 01:19:02,780
render that user consent right so and

1598
01:18:59,380 --> 01:19:05,630
that user content contains transaction

1599
01:19:02,780 --> 01:19:12,509
specific values is rather complex and as

1600
01:19:05,630 --> 01:19:17,100
context and the short form of that

1601
01:19:12,510 --> 01:19:20,190
is we have come up with a proposal to

1602
01:19:17,100 --> 01:19:22,170
allow clients to specify this kind of

1603
01:19:20,190 --> 01:19:25,559
more complex authorization requirements

1604
01:19:22,170 --> 01:19:28,230
in a structured way to some we use

1605
01:19:25,560 --> 01:19:31,650
something that I was initially calling

1606
01:19:28,230 --> 01:19:34,530
structured scopes but Mike asked us to

1607
01:19:31,650 --> 01:19:36,420
not use the scope terminology so we came

1608
01:19:34,530 --> 01:19:39,559
up with the authorization details name

1609
01:19:36,420 --> 01:19:42,060
so it's an array you can bump into that

1610
01:19:39,560 --> 01:19:44,430
JSON objects that are specifically

1611
01:19:42,060 --> 01:19:46,530
designed for the needs of a certain API

1612
01:19:44,430 --> 01:19:48,180
that's why they are typed so the a s can

1613
01:19:46,530 --> 01:19:50,099
differentiate what type of authorization

1614
01:19:48,180 --> 01:19:52,650
request object is that can I combine

1615
01:19:50,100 --> 01:19:54,030
them cannot do not combine them you can

1616
01:19:52,650 --> 01:19:59,870
combine them you can send them

1617
01:19:54,030 --> 01:20:02,670
everywhere or you can use a scope yeah

1618
01:19:59,870 --> 01:20:05,910
it's in the third revision we've got

1619
01:20:02,670 --> 01:20:07,320
some positive feedback even on the list

1620
01:20:05,910 --> 01:20:10,410
from people that are new to our

1621
01:20:07,320 --> 01:20:12,240
community I just put in a citation here

1622
01:20:10,410 --> 01:20:16,170
from a guy from Mozilla I think it's

1623
01:20:12,240 --> 01:20:18,179
he's on the line as well there are two

1624
01:20:16,170 --> 01:20:21,440
implementations already existing at all

1625
01:20:18,180 --> 01:20:23,960
fleet and the prototype at yes comm I

1626
01:20:21,440 --> 01:20:25,860
would like to consider you to adopt that

1627
01:20:23,960 --> 01:20:30,050
as a working Go button

1628
01:20:25,860 --> 01:20:30,049
so who has read the document

1629
01:20:35,950 --> 01:20:41,320
mentioned Justin and Bryan are

1630
01:20:37,090 --> 01:20:47,830
co-authors of the document that tells

1631
01:20:41,320 --> 01:20:53,559
you something right because you may have

1632
01:20:47,830 --> 01:20:58,090
just written it yeah how many non

1633
01:20:53,560 --> 01:21:06,850
authors have read it yes three are kind

1634
01:20:58,090 --> 01:21:09,450
of half and four people in the goal that

1635
01:21:06,850 --> 01:21:11,980
right at the draft I think we will do a

1636
01:21:09,450 --> 01:21:15,970
call for adoption on the list and give

1637
01:21:11,980 --> 01:21:18,160
people a chance to also sort of provide

1638
01:21:15,970 --> 01:21:21,820
some feedback and so on but I think

1639
01:21:18,160 --> 01:21:32,200
that's that's good good stuff two more

1640
01:21:21,820 --> 01:21:34,690
from Jabbar who read the document all

1641
01:21:32,200 --> 01:21:39,309
right so thank you yeah we we will do

1642
01:21:34,690 --> 01:21:50,410
that um Tony did you capture that yeah

1643
01:21:39,310 --> 01:21:57,430
okay cool perfect yep yes sorry Travis

1644
01:21:50,410 --> 01:21:59,710
that we have eight minutes okay well

1645
01:21:57,430 --> 01:22:02,200
I'll get started even before the slides

1646
01:21:59,710 --> 01:22:04,420
came up we've been talking in various

1647
01:22:02,200 --> 01:22:07,090
venues various places about this problem

1648
01:22:04,420 --> 01:22:11,320
that Torsten just talked about and and

1649
01:22:07,090 --> 01:22:14,440
I've been proposing a different solution

1650
01:22:11,320 --> 01:22:16,500
to the problem and to make that a little

1651
01:22:14,440 --> 01:22:18,549
bit more tangible I wrote it down as a

1652
01:22:16,500 --> 01:22:20,440
specification

1653
01:22:18,550 --> 01:22:22,090
I've been proposing that that that

1654
01:22:20,440 --> 01:22:25,929
problem can be solved using the claims

1655
01:22:22,090 --> 01:22:28,060
request parameter from open ID but the

1656
01:22:25,930 --> 01:22:29,530
pushback that I get is that well that's

1657
01:22:28,060 --> 01:22:33,310
bound to open ID and a lot of people

1658
01:22:29,530 --> 01:22:37,360
want to do API security only using OAuth

1659
01:22:33,310 --> 01:22:40,210
and so in this draft the what I've done

1660
01:22:37,360 --> 01:22:43,570
is I've lifted that out so here you can

1661
01:22:40,210 --> 01:22:46,570
find the link to the draft lifted that

1662
01:22:43,570 --> 01:22:49,480
out of open ID and made it usable for

1663
01:22:46,570 --> 01:22:51,460
API access using just ooofff

1664
01:22:49,480 --> 01:22:54,549
explained how we can use this in non

1665
01:22:51,460 --> 01:22:57,190
OAuth or non open ID Connect flows i've

1666
01:22:54,550 --> 01:23:00,010
stipulated how the the input can work

1667
01:22:57,190 --> 01:23:01,809
not only on browser-based flows like

1668
01:23:00,010 --> 01:23:03,610
authorization and implicit but also the

1669
01:23:01,810 --> 01:23:06,130
output which is something that's missing

1670
01:23:03,610 --> 01:23:07,960
from open ID the draft has additional

1671
01:23:06,130 --> 01:23:10,810
examples that aren't found in open ID

1672
01:23:07,960 --> 01:23:13,510
some defining some clarifying terms and

1673
01:23:10,810 --> 01:23:15,010
then the entire specification or the

1674
01:23:13,510 --> 01:23:16,440
draft specification is compatible with

1675
01:23:15,010 --> 01:23:18,910
open ID

1676
01:23:16,440 --> 01:23:20,400
erinite i see you there but i've got 19

1677
01:23:18,910 --> 01:23:24,130
slides in eight minutes

1678
01:23:20,400 --> 01:23:26,019
it could is it okay if we wait a little

1679
01:23:24,130 --> 01:23:28,150
bit because I might even address your

1680
01:23:26,020 --> 01:23:29,890
point so just to know what what we're

1681
01:23:28,150 --> 01:23:31,540
talking about if you've ever seen an

1682
01:23:29,890 --> 01:23:33,160
authorization request like this where we

1683
01:23:31,540 --> 01:23:34,989
have the claims request parameter which

1684
01:23:33,160 --> 01:23:36,849
is even liked Orson's example he just

1685
01:23:34,989 --> 01:23:41,889
put up this is what we're talking about

1686
01:23:36,850 --> 01:23:46,380
so it's basically a query asking for

1687
01:23:41,890 --> 01:23:48,700
certain claims to be asserted by the AAS

1688
01:23:46,380 --> 01:23:50,560
so the terms that I mentioned we're

1689
01:23:48,700 --> 01:23:52,540
using claims claim name claim value from

1690
01:23:50,560 --> 01:23:55,300
the job specification essential form

1691
01:23:52,540 --> 01:23:57,760
open ID but rewritten so that it's not

1692
01:23:55,300 --> 01:23:59,530
bound to the end user and some others

1693
01:23:57,760 --> 01:24:01,750
that are defined in the the draft

1694
01:23:59,530 --> 01:24:03,790
importantly claim seeing claims request

1695
01:24:01,750 --> 01:24:06,160
object these are things that exist

1696
01:24:03,790 --> 01:24:09,340
abstractly and open ID but aren't aren't

1697
01:24:06,160 --> 01:24:11,559
given a specific name so a claim sink

1698
01:24:09,340 --> 01:24:13,300
what we mean by this is the the part of

1699
01:24:11,560 --> 01:24:14,410
the request that's that the client is

1700
01:24:13,300 --> 01:24:16,810
saying this is where I want the claims

1701
01:24:14,410 --> 01:24:19,120
to be asserted I want them to be

1702
01:24:16,810 --> 01:24:22,450
included for example in an access token

1703
01:24:19,120 --> 01:24:23,620
a claim might say I don't know I want

1704
01:24:22,450 --> 01:24:25,030
them to be asserted but I don't know

1705
01:24:23,620 --> 01:24:26,800
where they're gonna go so it might just

1706
01:24:25,030 --> 01:24:28,630
say the claim sink is question mark or

1707
01:24:26,800 --> 01:24:32,950
might say I want them in every every

1708
01:24:28,630 --> 01:24:35,590
destination so I'll use I'll use star it

1709
01:24:32,950 --> 01:24:40,210
might also do ID token or user info if

1710
01:24:35,590 --> 01:24:44,920
the AAS is also an Opie so requesting

1711
01:24:40,210 --> 01:24:47,770
claims so the object here I've been in a

1712
01:24:44,920 --> 01:24:49,870
name a claim scene query object and a

1713
01:24:47,770 --> 01:24:52,390
claims value query object but basically

1714
01:24:49,870 --> 01:24:54,250
what this is is a way of querying for

1715
01:24:52,390 --> 01:24:56,560
certain claims to be asserted by the the

1716
01:24:54,250 --> 01:24:59,170
authorization server so we're asking

1717
01:24:56,560 --> 01:25:01,719
that claims be put in a certain sink in

1718
01:24:59,170 --> 01:25:03,550
a certain destination the access token

1719
01:25:01,719 --> 01:25:08,020
ID token and that

1720
01:25:03,550 --> 01:25:11,790
touken specific to a certain resource

1721
01:25:08,020 --> 01:25:14,530
server and then we can also have

1722
01:25:11,790 --> 01:25:16,449
preferential values to be a circuit but

1723
01:25:14,530 --> 01:25:18,460
it's really really important to keep in

1724
01:25:16,449 --> 01:25:20,820
mind that this is a query this isn't a

1725
01:25:18,460 --> 01:25:23,860
demand from the client to say you must

1726
01:25:20,820 --> 01:25:25,808
assert this value so similar to like

1727
01:25:23,860 --> 01:25:27,759
what poor Stan was saying there you know

1728
01:25:25,809 --> 01:25:30,130
I want this transaction I want this

1729
01:25:27,760 --> 01:25:32,409
information this account here you can

1730
01:25:30,130 --> 01:25:34,290
see another way of doing that I can say

1731
01:25:32,409 --> 01:25:38,079
okay I want a value of the count 1 2 3

1732
01:25:34,290 --> 01:25:40,059
or otherwise account 4 5 6 this is

1733
01:25:38,079 --> 01:25:44,049
essential to me for a smooth operation

1734
01:25:40,059 --> 01:25:45,750
of a ization at the API and here I have

1735
01:25:44,050 --> 01:25:51,820
a payment ID with a value of a certain

1736
01:25:45,750 --> 01:25:53,860
payment number so another thing is

1737
01:25:51,820 --> 01:25:56,829
essential claims so an essential claims

1738
01:25:53,860 --> 01:25:59,110
like I just said is a claim that is

1739
01:25:56,829 --> 01:26:01,540
required or essential for the smooth

1740
01:25:59,110 --> 01:26:03,909
operation of a task by the resource

1741
01:26:01,540 --> 01:26:05,860
owner at a resource server it doesn't

1742
01:26:03,909 --> 01:26:07,690
mean that it's a required value so the

1743
01:26:05,860 --> 01:26:09,969
authorization server should not respond

1744
01:26:07,690 --> 01:26:13,690
with an error if the essential claim

1745
01:26:09,969 --> 01:26:15,280
isn't asserted with those values or if

1746
01:26:13,690 --> 01:26:19,839
the claim isn't available at all for

1747
01:26:15,280 --> 01:26:21,610
that resource owner and and essential

1748
01:26:19,840 --> 01:26:23,980
claims are defined by open ID connect

1749
01:26:21,610 --> 01:26:25,420
but there is nothing in open in D

1750
01:26:23,980 --> 01:26:26,769
Connect that says anything about it

1751
01:26:25,420 --> 01:26:29,829
like it's got to be there it's a

1752
01:26:26,770 --> 01:26:32,139
required claim so the draft could create

1753
01:26:29,829 --> 01:26:34,599
something called a critical claim using

1754
01:26:32,139 --> 01:26:38,139
something similar to JSON web tokens

1755
01:26:34,599 --> 01:26:41,500
where it has a crit member in in the

1756
01:26:38,139 --> 01:26:43,659
JSON object saying that any Jason

1757
01:26:41,500 --> 01:26:46,510
pointer or it's a it's an array of JSON

1758
01:26:43,659 --> 01:26:48,280
pointers that point into some part of

1759
01:26:46,510 --> 01:26:50,079
the request to say that this is critical

1760
01:26:48,280 --> 01:26:52,570
like if the authorization server can't

1761
01:26:50,079 --> 01:26:54,820
assert this claim or claim with this

1762
01:26:52,570 --> 01:26:57,730
preferred value then the authorization

1763
01:26:54,820 --> 01:27:00,849
server has to respond with an error so

1764
01:26:57,730 --> 01:27:02,709
this this helps the the client to say ok

1765
01:27:00,849 --> 01:27:04,780
I've got to have this payment ID to be

1766
01:27:02,710 --> 01:27:07,210
authorized and if not then I need an

1767
01:27:04,780 --> 01:27:09,489
error back Jason pointer also defines

1768
01:27:07,210 --> 01:27:10,929
how to do the escaping of the slashes

1769
01:27:09,489 --> 01:27:13,690
which you can see an example of in the

1770
01:27:10,929 --> 01:27:16,630
draft I mentioned these special claim

1771
01:27:13,690 --> 01:27:17,290
sinks this this third one here is the

1772
01:27:16,630 --> 01:27:19,570
binding then

1773
01:27:17,290 --> 01:27:23,230
to the resource indicator where the

1774
01:27:19,570 --> 01:27:25,630
claim scene could be a URI or URL of the

1775
01:27:23,230 --> 01:27:28,150
protected resource so that you could get

1776
01:27:25,630 --> 01:27:29,980
claim scope to Pacific resource servers

1777
01:27:28,150 --> 01:27:32,320
if the client has that knowledge of

1778
01:27:29,980 --> 01:27:36,730
knowing that certain claims are destined

1779
01:27:32,320 --> 01:27:39,400
for a certain API the draft binds this

1780
01:27:36,730 --> 01:27:40,990
to a code blown implicit blow which

1781
01:27:39,400 --> 01:27:43,509
looked very much like what's in open ID

1782
01:27:40,990 --> 01:27:45,849
Connect but also the ROP C and the

1783
01:27:43,510 --> 01:27:47,950
client credential flow it also talks

1784
01:27:45,850 --> 01:27:49,660
about token refresh took an

1785
01:27:47,950 --> 01:27:52,510
introspection and I wanted to get to

1786
01:27:49,660 --> 01:27:55,180
token exchange but I ran out of time so

1787
01:27:52,510 --> 01:27:56,860
the authorization flow and as I

1788
01:27:55,180 --> 01:27:59,890
mentioned looks pretty much the same as

1789
01:27:56,860 --> 01:28:01,900
open ID and are the difference though is

1790
01:27:59,890 --> 01:28:03,990
this bullet here that the response

1791
01:28:01,900 --> 01:28:06,700
includes the space operated list of

1792
01:28:03,990 --> 01:28:09,460
granted claim names so similar to the

1793
01:28:06,700 --> 01:28:11,410
way that that scopes are returned on the

1794
01:28:09,460 --> 01:28:13,330
token endpoints so that the client knows

1795
01:28:11,410 --> 01:28:16,450
okay you asked for this but you you got

1796
01:28:13,330 --> 01:28:18,070
this so if the client asks I want these

1797
01:28:16,450 --> 01:28:19,929
claims but it doesn't get all those

1798
01:28:18,070 --> 01:28:22,059
claims asserted then it will be given

1799
01:28:19,930 --> 01:28:25,810
those claim names that actually were

1800
01:28:22,060 --> 01:28:27,400
asserted are OPC and CC can also specify

1801
01:28:25,810 --> 01:28:29,260
I want to have certain claims to be

1802
01:28:27,400 --> 01:28:31,420
asserted some of them can be critical as

1803
01:28:29,260 --> 01:28:33,850
I'm essential so it ends up working

1804
01:28:31,420 --> 01:28:36,730
similar to the scope request and in all

1805
01:28:33,850 --> 01:28:38,230
four of those flows it defines some

1806
01:28:36,730 --> 01:28:39,879
errors oops sorry

1807
01:28:38,230 --> 01:28:41,290
had to find some errors and it does so

1808
01:28:39,880 --> 01:28:43,810
in a way that maintains compatibility

1809
01:28:41,290 --> 01:28:45,400
Open ID Connect but it's very open ID

1810
01:28:43,810 --> 01:28:48,550
connect does isn't very rich in its

1811
01:28:45,400 --> 01:28:52,870
error codes for that so it defines some

1812
01:28:48,550 --> 01:28:55,780
additional ones that can be used refresh

1813
01:28:52,870 --> 01:28:58,090
I know I'm going on time but I'll do my

1814
01:28:55,780 --> 01:28:59,500
best here quickly you can send the

1815
01:28:58,090 --> 01:29:01,420
claims request parameter to do down

1816
01:28:59,500 --> 01:29:03,340
scoping so to say just like you can with

1817
01:29:01,420 --> 01:29:05,980
sending the scope request parameter to

1818
01:29:03,340 --> 01:29:08,050
down scope if you've done that and then

1819
01:29:05,980 --> 01:29:10,209
you refresh again you can up scope back

1820
01:29:08,050 --> 01:29:12,990
to your original grant this is difficult

1821
01:29:10,210 --> 01:29:15,130
to implement I can speak from experience

1822
01:29:12,990 --> 01:29:17,139
using the Scopes and claims together

1823
01:29:15,130 --> 01:29:19,570
makes this hard and policy changes make

1824
01:29:17,140 --> 01:29:22,540
this hard but those two parts are left

1825
01:29:19,570 --> 01:29:23,889
out of the specification so it doesn't

1826
01:29:22,540 --> 01:29:27,519
talk at all about using scopes and

1827
01:29:23,890 --> 01:29:29,740
claims together like open ID does and it

1828
01:29:27,520 --> 01:29:31,130
also doesn't go into handling policy

1829
01:29:29,740 --> 01:29:33,469
configuration changes so reef

1830
01:29:31,130 --> 01:29:36,280
is actually pretty simple as far as the

1831
01:29:33,469 --> 01:29:39,020
spec is concerned token introspection

1832
01:29:36,280 --> 01:29:40,790
when you introspect a token respond with

1833
01:29:39,020 --> 01:29:43,550
a space separated list of claim names

1834
01:29:40,790 --> 01:29:46,639
that were authorized so that the API can

1835
01:29:43,550 --> 01:29:50,360
see the extent of the the scope of the

1836
01:29:46,639 --> 01:29:51,699
token as far as the claims go I know I

1837
01:29:50,360 --> 01:29:55,699
know I know

1838
01:29:51,699 --> 01:29:57,769
so this oh yeah so it's in there the

1839
01:29:55,699 --> 01:29:59,120
important part is that critical claims

1840
01:29:57,770 --> 01:30:01,610
be supported because you might be

1841
01:29:59,120 --> 01:30:04,219
talking to an Opie and open ID Connect

1842
01:30:01,610 --> 01:30:06,199
open provider that doesn't support this

1843
01:30:04,219 --> 01:30:08,000
so this is helpful to know that okay

1844
01:30:06,199 --> 01:30:09,530
they're implementing the OB is also

1845
01:30:08,000 --> 01:30:11,270
supporting this draft or the AES is only

1846
01:30:09,530 --> 01:30:13,340
supporting this draft so I think that

1847
01:30:11,270 --> 01:30:16,580
that's the point on the slide to be

1848
01:30:13,340 --> 01:30:18,350
aware of open questions I think the

1849
01:30:16,580 --> 01:30:22,250
essential part for movin IV Connect is

1850
01:30:18,350 --> 01:30:23,960
kind of like another it's confusing and

1851
01:30:22,250 --> 01:30:27,830
oftentimes it's like why do we need to

1852
01:30:23,960 --> 01:30:28,940
do this it it's it doesn't mmm so I

1853
01:30:27,830 --> 01:30:31,659
think it should be dropped from the

1854
01:30:28,940 --> 01:30:35,030
draft but I wanted to have some broader

1855
01:30:31,659 --> 01:30:37,159
input on that maybe some restructuring

1856
01:30:35,030 --> 01:30:39,650
of the document to avoid redundancy with

1857
01:30:37,159 --> 01:30:41,299
the different flows how do you integrate

1858
01:30:39,650 --> 01:30:42,949
it with the resource indicators I'd like

1859
01:30:41,300 --> 01:30:44,510
some suggestions on that and I'd also

1860
01:30:42,949 --> 01:30:47,210
like to talk about the integration with

1861
01:30:44,510 --> 01:30:48,739
token exchange in the next version of

1862
01:30:47,210 --> 01:30:50,179
the draft oh right the token exchange

1863
01:30:48,739 --> 01:30:52,190
the resource indicator tie in and of

1864
01:30:50,179 --> 01:30:55,460
course the the leftover considerations

1865
01:30:52,190 --> 01:30:58,610
haven't been created and also a way of

1866
01:30:55,460 --> 01:31:01,610
registering clients to say that they

1867
01:30:58,610 --> 01:31:03,290
want access to certain claims so full

1868
01:31:01,610 --> 01:31:05,089
disclosure curity we've implemented all

1869
01:31:03,290 --> 01:31:07,969
of this we had to do most of it because

1870
01:31:05,090 --> 01:31:10,699
it's in open ID connect but the other

1871
01:31:07,969 --> 01:31:11,870
aspects like the the output of claim

1872
01:31:10,699 --> 01:31:13,699
names and things like that we have

1873
01:31:11,870 --> 01:31:18,800
implemented and we have no patents on

1874
01:31:13,699 --> 01:31:20,570
any of these things so obviously be out

1875
01:31:18,800 --> 01:31:22,010
of time we're going to have this

1876
01:31:20,570 --> 01:31:23,599
virtually into a meeting obviously we

1877
01:31:22,010 --> 01:31:28,610
need that not only for the other topic

1878
01:31:23,600 --> 01:31:30,010
but also for these type of things so at

1879
01:31:28,610 --> 01:31:35,509
this point in time I think the only

1880
01:31:30,010 --> 01:31:40,159
question I can ask is who has read the

1881
01:31:35,510 --> 01:31:43,360
document 3 I think we need more people

1882
01:31:40,159 --> 01:31:45,349
to read the document um so I think it

1883
01:31:43,360 --> 01:31:48,920
relates nicely to the purse

1884
01:31:45,350 --> 01:31:51,550
nation doesn't give earlier on do you

1885
01:31:48,920 --> 01:31:53,840
want to say a famous last what errand or

1886
01:31:51,550 --> 01:31:55,430
do you want to deep dive into a

1887
01:31:53,840 --> 01:31:57,380
technical discussion about this I want

1888
01:31:55,430 --> 01:31:58,940
to do the opposite II deep dive which is

1889
01:31:57,380 --> 01:32:00,350
back up to the high-level view of this

1890
01:31:58,940 --> 01:32:02,150
high-level all of this and I'm sorry for

1891
01:32:00,350 --> 01:32:04,190
being so blunt we're out of time

1892
01:32:02,150 --> 01:32:06,290
I think this is actually the completely

1893
01:32:04,190 --> 01:32:09,110
wrong approach bringing things from open

1894
01:32:06,290 --> 01:32:10,820
to connect into this because ID tokens

1895
01:32:09,110 --> 01:32:12,710
are meant to be consumed by clients and

1896
01:32:10,820 --> 01:32:14,690
understood by them access tokens are

1897
01:32:12,710 --> 01:32:16,700
explicitly not and this feels like

1898
01:32:14,690 --> 01:32:18,440
bringing knowledge about authorization

1899
01:32:16,700 --> 01:32:22,340
servers and access tokens into the

1900
01:32:18,440 --> 01:32:24,950
client in a way that the Torrens

1901
01:32:22,340 --> 01:32:26,360
proposal is more about expressing the

1902
01:32:24,950 --> 01:32:28,639
goals the client is trying to achieve

1903
01:32:26,360 --> 01:32:30,500
rather than how it expects the a/s to

1904
01:32:28,640 --> 01:32:32,300
achieve them I feel like that's the line

1905
01:32:30,500 --> 01:32:35,200
that this is crossing and I don't think

1906
01:32:32,300 --> 01:32:38,630
it's appropriate yeah strongly disagree

1907
01:32:35,200 --> 01:32:40,700
we we can discuss that's good

1908
01:32:38,630 --> 01:32:42,500
we always have different perspectives in

1909
01:32:40,700 --> 01:32:44,929
the group so it's kind of normal

1910
01:32:42,500 --> 01:32:49,610
um and we're going to have a discussion

1911
01:32:44,930 --> 01:32:52,280
on this and the story will continue when

1912
01:32:49,610 --> 01:32:55,250
we have our meeting I will send out an a

1913
01:32:52,280 --> 01:32:57,259
doodle poll for dates in December and

1914
01:32:55,250 --> 01:32:59,690
and of course it's December I know

1915
01:32:57,260 --> 01:33:03,320
December stuff leading into its January

1916
01:32:59,690 --> 01:33:04,879
to see what works for you guys and we

1917
01:33:03,320 --> 01:33:06,590
need to look at more time obviously to

1918
01:33:04,880 --> 01:33:08,660
cover these topics that we left out

1919
01:33:06,590 --> 01:33:11,450
Aaron had one presentation we didn't got

1920
01:33:08,660 --> 01:33:14,420
to so that will be covered too and there

1921
01:33:11,450 --> 01:33:16,670
are few documents still in the group

1922
01:33:14,420 --> 01:33:19,210
which hadn't been talked about this

1923
01:33:16,670 --> 01:33:24,170
meeting because the also weren't here

1924
01:33:19,210 --> 01:33:25,280
Victoria for example his document and so

1925
01:33:24,170 --> 01:33:27,710
on and so on I don't want to go through

1926
01:33:25,280 --> 01:33:31,660
those okay quick suggestion maybe we

1927
01:33:27,710 --> 01:33:34,940
should have three sessions in Vancouver

1928
01:33:31,660 --> 01:33:37,240
three sessions is not an option two

1929
01:33:34,940 --> 01:33:39,980
sessions is all the working group

1930
01:33:37,240 --> 01:33:42,050
sessions um our workload varies

1931
01:33:39,980 --> 01:33:44,719
sometimes a little bit when we make the

1932
01:33:42,050 --> 01:33:46,520
request then sometimes there's barely

1933
01:33:44,720 --> 01:33:51,640
anything and then you get totally hyped

1934
01:33:46,520 --> 01:33:53,960
up on something sorry you it's not that

1935
01:33:51,640 --> 01:33:56,210
it's not that you can't ask for three by

1936
01:33:53,960 --> 01:33:58,190
policy working groups get two slots max

1937
01:33:56,210 --> 01:33:59,270
so you can't ask for three

1938
01:33:58,190 --> 01:34:00,889
so the

1939
01:33:59,270 --> 01:34:02,270
that my cutter guidances if you feel

1940
01:34:00,890 --> 01:34:09,200
like you need three you need to be

1941
01:34:02,270 --> 01:34:10,160
having more virtual neurons god I should

1942
01:34:09,200 --> 01:34:11,720
have said I should have said that

1943
01:34:10,160 --> 01:34:14,230
earlier yeah working groups can't get

1944
01:34:11,720 --> 01:34:14,230
three slots

1945
01:34:35,670 --> 01:34:37,730
you

