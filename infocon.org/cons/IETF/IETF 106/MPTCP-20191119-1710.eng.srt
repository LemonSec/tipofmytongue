1
00:00:20,820 --> 00:00:28,650
okay okay we'll start meeting in a

2
00:00:26,619 --> 00:00:28,650
minute

3
00:00:40,880 --> 00:00:44,039
[Music]

4
00:01:02,070 --> 00:01:08,279
[Music]

5
00:01:12,960 --> 00:01:17,449
[Music]

6
00:01:22,479 --> 00:01:29,179
okay shall we start so this is multipass

7
00:01:26,899 --> 00:01:33,259
working group meeting please make sure

8
00:01:29,179 --> 00:01:36,679
you are in the right room and my name is

9
00:01:33,259 --> 00:01:38,299
Yoshi Nishida and unfortunately field

10
00:01:36,679 --> 00:01:38,780
could not make it to this login group

11
00:01:38,299 --> 00:01:41,359
meeting

12
00:01:38,780 --> 00:02:06,140
I think here we're gonna join this

13
00:01:41,359 --> 00:02:07,579
meeting from remote okay and no takers

14
00:02:06,140 --> 00:02:08,389
thanks for crystal footprint area

15
00:02:07,579 --> 00:02:10,669
note-taker

16
00:02:08,389 --> 00:02:16,010
and thanks for media take care of each

17
00:02:10,669 --> 00:02:18,819
other and just reminder when you stick

18
00:02:16,010 --> 00:02:21,349
up at the mic please say your name

19
00:02:18,819 --> 00:02:24,170
before you start to making comments

20
00:02:21,349 --> 00:02:28,250
so that's note-taker can write down your

21
00:02:24,170 --> 00:02:31,548
name in the minute and also if I knew

22
00:02:28,250 --> 00:02:35,389
submit your internet draft please make

23
00:02:31,549 --> 00:02:38,840
sure puts MP DCP in your title of your

24
00:02:35,389 --> 00:02:42,859
draft so that chairs can track the

25
00:02:38,840 --> 00:02:44,959
status of your draft and also in this

26
00:02:42,859 --> 00:02:53,989
meeting please make sure write down your

27
00:02:44,959 --> 00:02:56,419
name on the brew seat okay so this is

28
00:02:53,989 --> 00:02:58,609
used or not well I think you already get

29
00:02:56,419 --> 00:03:01,489
familiar with this man so this is a

30
00:02:58,609 --> 00:03:07,180
reminder of ITF policy with regard to

31
00:03:01,489 --> 00:03:10,130
your behavior your policy I your privacy

32
00:03:07,180 --> 00:03:12,799
your intellectual property your

33
00:03:10,130 --> 00:03:15,590
copyright and so on so if you have any

34
00:03:12,799 --> 00:03:18,650
concerned about it please take care of

35
00:03:15,590 --> 00:03:21,440
it please no take a look at carefree and

36
00:03:18,650 --> 00:03:27,410
you can find same contents on the ITF

37
00:03:21,440 --> 00:03:28,099
web page okay so this is the stage

38
00:03:27,410 --> 00:03:31,549
agenda

39
00:03:28,099 --> 00:03:35,089
so first I'm sure we'll talk about

40
00:03:31,549 --> 00:03:35,890
working group status updates and after

41
00:03:35,090 --> 00:03:38,360
that

42
00:03:35,890 --> 00:03:41,179
we are talking about implementation

43
00:03:38,360 --> 00:03:44,420
updates and Christophe will talk about

44
00:03:41,180 --> 00:03:46,460
iOS and the Linux updates and then if

45
00:03:44,420 --> 00:03:48,709
you have any other updates for

46
00:03:46,460 --> 00:03:53,990
implementations you will have a chance

47
00:03:48,710 --> 00:03:58,750
to speak up and after that we were born

48
00:03:53,990 --> 00:04:01,160
to the individual presentation at first

49
00:03:58,750 --> 00:04:03,590
Jo and the Marcus will talk about

50
00:04:01,160 --> 00:04:06,579
multiple TCP extensions for robust

51
00:04:03,590 --> 00:04:10,760
system establishment and after that

52
00:04:06,580 --> 00:04:13,930
Nicolas will talk about some experience

53
00:04:10,760 --> 00:04:18,560
of MP TCP over satellite networks and

54
00:04:13,930 --> 00:04:21,560
after that a OE and she will talk about

55
00:04:18,560 --> 00:04:25,300
multi pass TCP extension for trust and

56
00:04:21,560 --> 00:04:30,880
prediction so this is a today's agenda

57
00:04:25,300 --> 00:04:30,880
any comments suggestion to the agenda

58
00:04:31,150 --> 00:04:43,760
okay now let's move on to the working

59
00:04:37,250 --> 00:04:51,050
group status and it tooks for so long

60
00:04:43,760 --> 00:04:54,080
time but finally we finished 66 to a 24

61
00:04:51,050 --> 00:04:55,820
bits draft so it's in in RFC editor

62
00:04:54,080 --> 00:04:59,090
queue so it will be published very soon

63
00:04:55,820 --> 00:05:02,500
and I really appreciate your support for

64
00:04:59,090 --> 00:05:05,900
this draft and thank you so much and

65
00:05:02,500 --> 00:05:07,040
also we have mentioned this several

66
00:05:05,900 --> 00:05:11,150
times already

67
00:05:07,040 --> 00:05:13,520
that's know we don't have active working

68
00:05:11,150 --> 00:05:16,340
group item right now and just this is

69
00:05:13,520 --> 00:05:19,760
just a reminder so this list of the

70
00:05:16,340 --> 00:05:23,989
milestones of our working group and then

71
00:05:19,760 --> 00:05:27,610
we have done many stuff and then in our

72
00:05:23,990 --> 00:05:32,450
past meeting we discussed about

73
00:05:27,610 --> 00:05:35,720
publishing enhanced API draft but our

74
00:05:32,450 --> 00:05:38,630
consensus was that we don't have enough

75
00:05:35,720 --> 00:05:41,530
energy to publish this draft so we skip

76
00:05:38,630 --> 00:05:45,830
this one and then rest of the item was

77
00:05:41,530 --> 00:05:48,169
MP TCP standard track protocol and this

78
00:05:45,830 --> 00:05:49,310
is just finished right now and as a

79
00:05:48,169 --> 00:05:50,570
result

80
00:05:49,310 --> 00:05:54,380
don't have a Viking to fight them

81
00:05:50,570 --> 00:05:56,690
anymore and then as you know I

82
00:05:54,380 --> 00:05:59,810
we mentioned several times already we

83
00:05:56,690 --> 00:06:03,350
cannot run working group meeting without

84
00:05:59,810 --> 00:06:06,800
having a working group items and then so

85
00:06:03,350 --> 00:06:10,060
right now turned 80 continuing

86
00:06:06,800 --> 00:06:13,130
disgusting about this one

87
00:06:10,060 --> 00:06:16,520
if we cannot hover enough you know

88
00:06:13,130 --> 00:06:19,090
working group items very soon we need to

89
00:06:16,520 --> 00:06:22,280
think about crossing working group I

90
00:06:19,090 --> 00:06:23,989
know we still have a summer energy in

91
00:06:22,280 --> 00:06:25,580
this community because you know every

92
00:06:23,990 --> 00:06:27,710
time we have meeting we have some

93
00:06:25,580 --> 00:06:29,390
interesting presentation just like today

94
00:06:27,710 --> 00:06:33,049
today we have three interesting

95
00:06:29,390 --> 00:06:35,090
presentation but in order to keep the

96
00:06:33,050 --> 00:06:37,910
working group we have to have a some

97
00:06:35,090 --> 00:06:40,789
working item that's create standard

98
00:06:37,910 --> 00:06:42,380
that's what we need to if we want to

99
00:06:40,790 --> 00:06:46,790
maintain the working group that's what

100
00:06:42,380 --> 00:06:50,840
we need and then we do not make any

101
00:06:46,790 --> 00:06:55,310
decision in this meeting but we still

102
00:06:50,840 --> 00:06:58,330
you know discussing and then I think you

103
00:06:55,310 --> 00:07:01,700
know we might make some decision before

104
00:06:58,330 --> 00:07:04,450
Don Cuba meeting that means we might

105
00:07:01,700 --> 00:07:07,880
cross a meeting across the working group

106
00:07:04,450 --> 00:07:10,700
before the bank Cuba meeting if we don't

107
00:07:07,880 --> 00:07:14,990
have enough energy so if you have some

108
00:07:10,700 --> 00:07:17,570
items to work on you should encourage

109
00:07:14,990 --> 00:07:20,180
you to you know make it hurry submit a

110
00:07:17,570 --> 00:07:22,550
draft and then announce a mailing list

111
00:07:20,180 --> 00:07:26,090
and encourage people read the draft and

112
00:07:22,550 --> 00:07:28,670
the suppose a draft and then that way I

113
00:07:26,090 --> 00:07:30,349
think we can think about know we still

114
00:07:28,670 --> 00:07:34,400
have a summer energy to keep the working

115
00:07:30,350 --> 00:07:37,070
group but just in case even if we close

116
00:07:34,400 --> 00:07:40,429
the working group this does no mean IITs

117
00:07:37,070 --> 00:07:45,820
do not work when PTC P in this case most

118
00:07:40,430 --> 00:07:48,470
likely TC p.m. will be the venue for the

119
00:07:45,820 --> 00:07:51,020
NPDC P topics Christoph you want to say

120
00:07:48,470 --> 00:07:57,350
something okay

121
00:07:51,020 --> 00:07:58,219
I see okay so most likely but it has not

122
00:07:57,350 --> 00:08:00,140
been decided yet

123
00:07:58,220 --> 00:08:02,990
but most likely TC p.m. will be the

124
00:08:00,140 --> 00:08:05,360
venue for the MV TCP topic

125
00:08:02,990 --> 00:08:08,479
that's a case if we close the meeting

126
00:08:05,360 --> 00:08:10,850
closed the working group so that's the

127
00:08:08,479 --> 00:08:15,740
status of this working group any comment

128
00:08:10,850 --> 00:08:16,220
question suggestion or addition it's

129
00:08:15,740 --> 00:08:19,750
okay

130
00:08:16,220 --> 00:08:19,750
media you want to say something just

131
00:08:24,330 --> 00:08:27,359
[Music]

132
00:08:28,000 --> 00:08:33,440
very quickly on this point so I think

133
00:08:30,410 --> 00:08:36,229
the ttpm trader already includes minor

134
00:08:33,440 --> 00:08:39,050
change to TCP so it includes also 2mp

135
00:08:36,229 --> 00:08:40,070
TCP because it's part of TCP but I think

136
00:08:39,049 --> 00:08:42,409
it would be good discussion with the

137
00:08:40,070 --> 00:08:44,060
chairs there to potentially update the

138
00:08:42,409 --> 00:08:48,020
Charter and make this explicit so people

139
00:08:44,059 --> 00:08:58,029
know where to go but still we haven't

140
00:08:48,020 --> 00:08:58,029
decided okay any questions okay

141
00:08:59,140 --> 00:09:05,890
move on to the next topic implementation

142
00:09:01,970 --> 00:09:05,890
updates so Christoph

143
00:09:14,330 --> 00:09:21,829
[Music]

144
00:09:16,180 --> 00:09:25,250
so terms of implementation updates we

145
00:09:21,829 --> 00:09:28,060
released iOS 13 in September and if you

146
00:09:25,250 --> 00:09:31,130
have seen the WWDC presentation in June

147
00:09:28,060 --> 00:09:35,449
we are now using MPT SP for Apple music

148
00:09:31,130 --> 00:09:37,730
to stream the music to the devices and

149
00:09:35,450 --> 00:09:40,820
we see a great reduction in all your

150
00:09:37,730 --> 00:09:42,620
stalls thanks to this we are also now

151
00:09:40,820 --> 00:09:45,250
using it for Apple Maps when people are

152
00:09:42,620 --> 00:09:49,399
searching and for getting directions and

153
00:09:45,250 --> 00:09:52,850
we we it allows us to handle the Wi-Fi

154
00:09:49,399 --> 00:09:55,250
to sell transitions so that means at

155
00:09:52,850 --> 00:09:59,480
least inside Apple we have Siri music

156
00:09:55,250 --> 00:10:05,110
and maps well first party users of MP

157
00:09:59,480 --> 00:10:08,510
TCP besides that in the linux kernel

158
00:10:05,110 --> 00:10:11,029
there is now a community working on up

159
00:10:08,510 --> 00:10:13,310
streaming amputees p to the official

160
00:10:11,029 --> 00:10:16,640
linux kernel this community is being

161
00:10:13,310 --> 00:10:19,550
driven by Red Hat Intel and Tessa res

162
00:10:16,640 --> 00:10:21,680
and we are making great progress and we

163
00:10:19,550 --> 00:10:24,469
hope that in the coming months we have

164
00:10:21,680 --> 00:10:28,279
the first part of MPGs be in the

165
00:10:24,470 --> 00:10:30,680
upstream Linux kernel okay I have a

166
00:10:28,279 --> 00:10:33,320
clarification question so in my

167
00:10:30,680 --> 00:10:36,439
understandings apples MP TCP

168
00:10:33,320 --> 00:10:39,980
implementation is six to eight 24 ps4 in

169
00:10:36,440 --> 00:10:42,800
24 button and then being exposure is 60

170
00:10:39,980 --> 00:10:46,399
24 PC button I'm not correct yes that's

171
00:10:42,800 --> 00:10:51,140
right the the multipath TCP upstreaming

172
00:10:46,399 --> 00:10:53,000
is aiming for 68 24 bits our

173
00:10:51,140 --> 00:10:58,730
implementation currently is the old

174
00:10:53,000 --> 00:11:02,480
standard the actually one point here is

175
00:10:58,730 --> 00:11:05,750
as Red Hat into an ant SRS are

176
00:11:02,480 --> 00:11:07,970
implementing MPSP from scratch here in

177
00:11:05,750 --> 00:11:11,149
the Linux kernel now and because they

178
00:11:07,970 --> 00:11:14,149
are not usually used to coming to the

179
00:11:11,149 --> 00:11:16,940
ITF they are actually reading the IETF

180
00:11:14,149 --> 00:11:18,019
RC as it is and sometimes are finding

181
00:11:16,940 --> 00:11:21,620
some issues that are a little bit

182
00:11:18,019 --> 00:11:25,220
confusing and so they have actually some

183
00:11:21,620 --> 00:11:28,130
feedback to provide to the base draft I

184
00:11:25,220 --> 00:11:32,180
know it's late but it's just now that

185
00:11:28,130 --> 00:11:34,730
they are reading the drop yeah yeah it's

186
00:11:32,180 --> 00:11:40,939
more like clarifications not like no big

187
00:11:34,730 --> 00:11:45,410
deal yeah okay I might be possibility to

188
00:11:40,940 --> 00:11:47,750
be a draft it's it's mostly about

189
00:11:45,410 --> 00:11:49,640
wording and making sure that things are

190
00:11:47,750 --> 00:11:53,240
spelled out in the way they should be so

191
00:11:49,640 --> 00:11:55,310
that it's unmistakably clear okay yeah I

192
00:11:53,240 --> 00:11:56,779
mean that's kind of the purpose of the

193
00:11:55,310 --> 00:11:59,660
editing step we have read the very end

194
00:11:56,779 --> 00:12:01,040
so I think we should add addresses come

195
00:11:59,660 --> 00:12:02,449
in and take them in and just like maybe

196
00:12:01,040 --> 00:12:04,519
send an email to the mailing is to make

197
00:12:02,449 --> 00:12:06,229
sure everybody's aware but if it's

198
00:12:04,519 --> 00:12:11,959
really purely editorial I think it can

199
00:12:06,230 --> 00:12:14,390
still be addressed okay and then

200
00:12:11,959 --> 00:12:19,130
probably this is difficult question for

201
00:12:14,390 --> 00:12:24,800
you but if you have a any pram that's up

202
00:12:19,130 --> 00:12:28,069
we're support this draft if you don't

203
00:12:24,800 --> 00:12:30,560
want to talk about it I don't have a

204
00:12:28,069 --> 00:12:33,969
timeline for that we will have to see

205
00:12:30,560 --> 00:12:38,869
one thing is that the 3gpp ATSs

206
00:12:33,970 --> 00:12:40,340
standardization of the MB TCP proxy uses

207
00:12:38,870 --> 00:12:45,140
the best version of the draft so

208
00:12:40,340 --> 00:12:47,480
ultimately if we will want to support

209
00:12:45,140 --> 00:12:49,250
that if you will want and will have to

210
00:12:47,480 --> 00:12:52,180
implement the best version okay I think

211
00:12:49,250 --> 00:13:03,770
more magicians will have to respond okay

212
00:12:52,180 --> 00:13:05,930
thank you and if you have any other

213
00:13:03,770 --> 00:13:15,380
implementation updates this is a time

214
00:13:05,930 --> 00:13:17,030
for you to speak up anything okay so now

215
00:13:15,380 --> 00:13:26,170
let's move on to the individual

216
00:13:17,030 --> 00:13:26,170
presentation I think Marcus

217
00:13:27,620 --> 00:13:30,759
[Music]

218
00:14:04,290 --> 00:14:10,599
Marcus I'm n from Deutsche Telekom so I

219
00:14:07,300 --> 00:14:12,250
want to give an update to our draft

220
00:14:10,600 --> 00:14:15,160
about robot session establishment for

221
00:14:12,250 --> 00:14:17,680
multiple CCP it's not the first time

222
00:14:15,160 --> 00:14:21,400
that we have an additional contributor

223
00:14:17,680 --> 00:14:23,650
it's Jia from who or why and she's also

224
00:14:21,400 --> 00:14:26,970
here today so in case if there are later

225
00:14:23,650 --> 00:14:29,620
any questions she can answer as well

226
00:14:26,970 --> 00:14:33,910
first I want to give an overview about

227
00:14:29,620 --> 00:14:35,950
the update since last time we did a

228
00:14:33,910 --> 00:14:37,260
merger with the initial part election

229
00:14:35,950 --> 00:14:42,400
draft

230
00:14:37,260 --> 00:14:44,230
it was mainly written by GL and now be

231
00:14:42,400 --> 00:14:46,240
merged into the prophecy establishment

232
00:14:44,230 --> 00:14:52,720
because it had had more or less the same

233
00:14:46,240 --> 00:14:55,720
goals and we renamed the original ro be

234
00:14:52,720 --> 00:14:59,350
extended solution from the first draft

235
00:14:55,720 --> 00:15:01,330
version now to Roby Eason enhanced sin

236
00:14:59,350 --> 00:15:05,980
what it means we will see in the next

237
00:15:01,330 --> 00:15:09,459
slides we adding two new solutions Roby

238
00:15:05,980 --> 00:15:11,890
it's for in this report selection and

239
00:15:09,459 --> 00:15:16,300
Roby timer the initial path selection

240
00:15:11,890 --> 00:15:18,250
solution is coming from the merger with

241
00:15:16,300 --> 00:15:21,520
the initial from from the Metro be the

242
00:15:18,250 --> 00:15:23,830
initial plan selection traffic we have

243
00:15:21,520 --> 00:15:26,589
now an approved document structure which

244
00:15:23,830 --> 00:15:30,089
means the different solutions for robust

245
00:15:26,589 --> 00:15:33,310
establishment we distinguish between

246
00:15:30,089 --> 00:15:37,920
solutions which require multiple TCP

247
00:15:33,310 --> 00:15:41,170
protocol adaption or does not require

248
00:15:37,920 --> 00:15:44,140
and also we started to define for the

249
00:15:41,170 --> 00:15:49,000
concept I will explain this further in

250
00:15:44,140 --> 00:15:52,380
slides just as a short recap what a

251
00:15:49,000 --> 00:15:56,320
service session establishment about we

252
00:15:52,380 --> 00:15:59,320
stand at multi pass TCP and RC 6 8 2 4

253
00:15:56,320 --> 00:16:02,980
and even the Biss are pretty much

254
00:15:59,320 --> 00:16:05,560
relying on a functional path or in for

255
00:16:02,980 --> 00:16:09,270
the initial session establishment of the

256
00:16:05,560 --> 00:16:11,410
if the path selected for the initial

257
00:16:09,270 --> 00:16:14,410
multi pass TCP session establishment

258
00:16:11,410 --> 00:16:14,769
does not work no communication can

259
00:16:14,410 --> 00:16:17,589
happen

260
00:16:14,769 --> 00:16:20,230
even if there are other working paths or

261
00:16:17,589 --> 00:16:21,850
links available and with robust

262
00:16:20,230 --> 00:16:23,319
establishment with the robust

263
00:16:21,850 --> 00:16:28,929
establishment traffic we directly

264
00:16:23,319 --> 00:16:31,540
address this and try to elaborate

265
00:16:28,929 --> 00:16:37,379
different solutions to to deal with this

266
00:16:31,540 --> 00:16:42,069
issue the draft now in the current state

267
00:16:37,379 --> 00:16:44,739
includes four solutions that is the

268
00:16:42,069 --> 00:16:48,488
Europe Roby timers Robeson Robeson and

269
00:16:44,739 --> 00:16:51,069
Robbie Epps but it also contains

270
00:16:48,489 --> 00:16:53,889
description about combination of those

271
00:16:51,069 --> 00:16:56,949
solutions again that we will see during

272
00:16:53,889 --> 00:16:58,540
the presentation today starting with you

273
00:16:56,949 --> 00:17:04,299
there will be time a solution that is a

274
00:16:58,540 --> 00:17:11,889
fairly easy proposal so that makes use

275
00:17:04,299 --> 00:17:16,480
of the TCP retransmission timer so it

276
00:17:11,890 --> 00:17:20,860
starts with the with the standard so rc6

277
00:17:16,480 --> 00:17:24,849
a two for session establishment here for

278
00:17:20,859 --> 00:17:29,020
example in this figure on a1 from a1 to

279
00:17:24,849 --> 00:17:32,168
v1 and if this expires and then it

280
00:17:29,020 --> 00:17:37,270
starts to use the next path to make this

281
00:17:32,169 --> 00:17:40,240
session establishment happening so we

282
00:17:37,270 --> 00:17:42,460
see no conflict with the existing

283
00:17:40,240 --> 00:17:44,169
multi-party CP standard and at least it

284
00:17:42,460 --> 00:17:47,789
would guarantee a certain establishment

285
00:17:44,169 --> 00:17:53,830
in case there the functional path

286
00:17:47,789 --> 00:17:56,520
however it brings in some delay so if

287
00:17:53,830 --> 00:18:04,990
the first part fails which we selected

288
00:17:56,520 --> 00:18:07,690
then it needs at least the time to to

289
00:18:04,990 --> 00:18:10,389
get the retransmission timer expired

290
00:18:07,690 --> 00:18:14,440
until the next path and can be used and

291
00:18:10,389 --> 00:18:22,899
if you have several paths failing then

292
00:18:14,440 --> 00:18:25,299
it sums up then we have the Aerobie sim

293
00:18:22,899 --> 00:18:28,379
that was already part of the first

294
00:18:25,299 --> 00:18:33,559
version of the traffic

295
00:18:28,380 --> 00:18:35,520
that makes use of similar changes

296
00:18:33,559 --> 00:18:38,280
establishments are using any path

297
00:18:35,520 --> 00:18:40,110
available for the session set up so that

298
00:18:38,280 --> 00:18:44,190
we can see in the in the figure here as

299
00:18:40,110 --> 00:18:50,668
well so we start a soon request on on a1

300
00:18:44,190 --> 00:18:52,620
and a2 simultaneously and the the

301
00:18:50,669 --> 00:18:54,870
request which was acknowledged first

302
00:18:52,620 --> 00:18:57,989
will be then the elected at the initial

303
00:18:54,870 --> 00:19:01,709
path and the other one or once our

304
00:18:57,990 --> 00:19:06,540
resetted afterward with the tcp rst what

305
00:19:01,710 --> 00:19:10,049
you can see at step is a 6-1 so that is

306
00:19:06,540 --> 00:19:12,540
also in line with a standard and it only

307
00:19:10,049 --> 00:19:19,679
relies on the functions which are

308
00:19:12,540 --> 00:19:22,470
provided from the standard itself that

309
00:19:19,679 --> 00:19:26,850
is now you in the traffic that is the

310
00:19:22,470 --> 00:19:30,600
initial path a selection logic so that

311
00:19:26,850 --> 00:19:34,830
try to make use of heuristic and tries

312
00:19:30,600 --> 00:19:35,879
to learn over time which path could be

313
00:19:34,830 --> 00:19:38,659
the best

314
00:19:35,880 --> 00:19:40,860
maybe that is also something which is

315
00:19:38,660 --> 00:19:43,070
included in the iOS with the Wi-Fi

316
00:19:40,860 --> 00:19:47,939
assist I'm not sure if this is similar

317
00:19:43,070 --> 00:19:51,840
but yeah as I said it it tries to to

318
00:19:47,940 --> 00:19:56,850
learn overt over time which path has the

319
00:19:51,840 --> 00:19:59,250
highest probability to succeed and we

320
00:19:56,850 --> 00:20:01,379
have to two examples how it could work

321
00:19:59,250 --> 00:20:07,169
if I start on the right figure the

322
00:20:01,380 --> 00:20:08,549
figure six it will whenever an

323
00:20:07,169 --> 00:20:12,410
application requests

324
00:20:08,549 --> 00:20:17,940
multipass TCP session it will try to

325
00:20:12,410 --> 00:20:21,510
make a decision which path could be the

326
00:20:17,940 --> 00:20:25,020
initial the route for the initial

327
00:20:21,510 --> 00:20:26,370
connection set up if it is the first

328
00:20:25,020 --> 00:20:29,309
connection don't know heuristic

329
00:20:26,370 --> 00:20:31,678
available then it could use the default

330
00:20:29,309 --> 00:20:33,840
route of the operation system otherwise

331
00:20:31,679 --> 00:20:38,370
it will use the information it has

332
00:20:33,840 --> 00:20:41,490
available and select the road for the

333
00:20:38,370 --> 00:20:42,428
initial path establishment on the left

334
00:20:41,490 --> 00:20:44,890
side

335
00:20:42,429 --> 00:20:46,929
it's a little bit simpler though there's

336
00:20:44,890 --> 00:20:50,049
no decision if if a heuristic is

337
00:20:46,929 --> 00:20:52,620
available or not so it will always use

338
00:20:50,049 --> 00:20:56,139
the initial part selection logic to

339
00:20:52,620 --> 00:20:59,559
select the proper path but that also

340
00:20:56,140 --> 00:21:07,059
means maybe it fails when not enough

341
00:20:59,559 --> 00:21:11,620
information are available the that what

342
00:21:07,059 --> 00:21:15,870
a former Roby xtour for for extended in

343
00:21:11,620 --> 00:21:21,520
the first version of the draft and that

344
00:21:15,870 --> 00:21:26,320
enhance the sim solution as I explained

345
00:21:21,520 --> 00:21:28,720
for sin we simultaneously use or we make

346
00:21:26,320 --> 00:21:32,139
simultaneously use of all paths which

347
00:21:28,720 --> 00:21:38,559
are available to establish a multiple

348
00:21:32,140 --> 00:21:41,950
TCP session that will guarantee that a

349
00:21:38,559 --> 00:21:44,559
multipass TCP session becomes is -

350
00:21:41,950 --> 00:21:47,080
established as long and there is one

351
00:21:44,559 --> 00:21:50,500
part of functional in the system - about

352
00:21:47,080 --> 00:21:53,918
the destination and with the sim

353
00:21:50,500 --> 00:21:56,380
solution so without the e this means we

354
00:21:53,919 --> 00:22:02,080
have a lot of overhead because we reset

355
00:21:56,380 --> 00:22:09,309
all paths but one linear obe sim we make

356
00:22:02,080 --> 00:22:15,600
use of all the is all all the

357
00:22:09,309 --> 00:22:19,658
simultaneous establishment and me the MP

358
00:22:15,600 --> 00:22:22,629
joint cap option we propose in the trap

359
00:22:19,659 --> 00:22:25,630
though that isn't step as i62 in the

360
00:22:22,630 --> 00:22:28,450
left figure on the bottom and we can

361
00:22:25,630 --> 00:22:30,730
make sure that any part which is not

362
00:22:28,450 --> 00:22:33,640
selected after after after the whole

363
00:22:30,730 --> 00:22:37,570
process to being the initial path can be

364
00:22:33,640 --> 00:22:39,640
directly merged so it's not required

365
00:22:37,570 --> 00:22:43,090
anymore to have the traditional empty

366
00:22:39,640 --> 00:22:45,280
join process we can make a direct use

367
00:22:43,090 --> 00:22:47,080
out of it that has several benefits

368
00:22:45,280 --> 00:22:49,450
which we also explain and the trough

369
00:22:47,080 --> 00:22:53,379
also related to to the business document

370
00:22:49,450 --> 00:22:56,670
where you compare to to the old RFC six

371
00:22:53,380 --> 00:23:00,010
eight to four

372
00:22:56,670 --> 00:23:02,950
you need now a reliable egg in this room

373
00:23:00,010 --> 00:23:05,980
a handshake and with Robi Isom you can

374
00:23:02,950 --> 00:23:07,540
relax this a little bit so please I have

375
00:23:05,980 --> 00:23:12,100
a look for details into the traffic or

376
00:23:07,540 --> 00:23:15,450
we can just cut this afterwards on the

377
00:23:12,100 --> 00:23:18,340
left figure we have an implicit

378
00:23:15,450 --> 00:23:20,770
connection setup which means we don't

379
00:23:18,340 --> 00:23:25,260
have a negotiation between client and so

380
00:23:20,770 --> 00:23:28,420
ever about the Robi ECM a functionality

381
00:23:25,260 --> 00:23:32,370
whereas on the right side we have a

382
00:23:28,420 --> 00:23:37,150
explicit negotiation using the row B is

383
00:23:32,370 --> 00:23:42,820
en multi-part CCP option B also proposed

384
00:23:37,150 --> 00:23:47,350
in the draft okay

385
00:23:42,820 --> 00:23:51,010
that is sorry but I forget to mention is

386
00:23:47,350 --> 00:23:55,360
for the row B ISM it it needs mpg city

387
00:23:51,010 --> 00:23:58,510
protocol adapt adaptation you mean you

388
00:23:55,360 --> 00:24:05,500
need assign new option yes at least the

389
00:23:58,510 --> 00:24:10,990
NPT on cap yes it's the same now for the

390
00:24:05,500 --> 00:24:16,420
row B IPS including the server

391
00:24:10,990 --> 00:24:18,850
RTT functionality so we could make use

392
00:24:16,420 --> 00:24:22,270
of the RTT information available by

393
00:24:18,850 --> 00:24:26,699
congestion control and to make a more

394
00:24:22,270 --> 00:24:29,139
sophisticated decision about which path

395
00:24:26,700 --> 00:24:34,060
could guarantee an initial path

396
00:24:29,140 --> 00:24:36,310
establishment and that is exactly what

397
00:24:34,060 --> 00:24:40,090
what we are doing here but there's the

398
00:24:36,310 --> 00:24:42,129
case imagine that the IPS is working in

399
00:24:40,090 --> 00:24:43,840
a mobile phone and you have only

400
00:24:42,130 --> 00:24:46,030
downstream traffic of you so your

401
00:24:43,840 --> 00:24:48,580
transfer traffic from the Internet to

402
00:24:46,030 --> 00:24:51,670
about the mobile phone then you have

403
00:24:48,580 --> 00:24:53,560
this information only available on

404
00:24:51,670 --> 00:24:58,930
sender side so not in the mobile phone

405
00:24:53,560 --> 00:25:04,659
itself it's on the remote host and for

406
00:24:58,930 --> 00:25:07,120
that we propose the ltte an option to be

407
00:25:04,660 --> 00:25:09,310
defined which can carry the RTT

408
00:25:07,120 --> 00:25:11,860
information from the remote host to

409
00:25:09,310 --> 00:25:18,570
the mobile phone for example though that

410
00:25:11,860 --> 00:25:22,570
can be used in the IPS logic that is now

411
00:25:18,570 --> 00:25:25,240
one of the combinations I mentioned in

412
00:25:22,570 --> 00:25:32,740
the beginning so that is Robbie a sim

413
00:25:25,240 --> 00:25:37,120
and Roby IPS combined so in case the IPS

414
00:25:32,740 --> 00:25:39,940
has not enough information for selecting

415
00:25:37,120 --> 00:25:42,280
a proper path in the beginning so

416
00:25:39,940 --> 00:25:45,790
there's there's not enough eristic and

417
00:25:42,280 --> 00:25:51,399
then it can use the Roby sim in the

418
00:25:45,790 --> 00:25:53,230
beginning and afterwards then if enough

419
00:25:51,400 --> 00:25:56,350
information is available in the system

420
00:25:53,230 --> 00:26:00,040
or in the IPS logic then it can fall

421
00:25:56,350 --> 00:26:02,649
back to pure IPS and there is a

422
00:26:00,040 --> 00:26:05,950
combination of Roby timer and and Roby

423
00:26:02,650 --> 00:26:08,890
IOPS so the same if not enough a

424
00:26:05,950 --> 00:26:13,990
heuristic is available it can use in the

425
00:26:08,890 --> 00:26:15,490
beginning the timer solution and when

426
00:26:13,990 --> 00:26:19,560
enough information is available in the

427
00:26:15,490 --> 00:26:20,800
system then it can fall back to pure IPS

428
00:26:19,560 --> 00:26:22,360
yes

429
00:26:20,800 --> 00:26:26,560
so there are the three options we

430
00:26:22,360 --> 00:26:29,500
propose currently in the traffic so that

431
00:26:26,560 --> 00:26:34,980
is the in the middle of the MP joint CAD

432
00:26:29,500 --> 00:26:40,570
what we need for the ECM a solution it's

433
00:26:34,980 --> 00:26:44,110
on the top the is an en option to make

434
00:26:40,570 --> 00:26:45,939
explicit a negotiation for the ECM

435
00:26:44,110 --> 00:26:50,740
solution we are not sure if this is

436
00:26:45,940 --> 00:26:53,650
required but if explicit negotiation is

437
00:26:50,740 --> 00:26:57,310
wished and then we then we needed and on

438
00:26:53,650 --> 00:26:58,960
the bottom we have the RTT en so in case

439
00:26:57,310 --> 00:27:03,090
we want to have a TT information from

440
00:26:58,960 --> 00:27:07,180
the remote host for some heuristic

441
00:27:03,090 --> 00:27:09,790
functionality that is a table which is

442
00:27:07,180 --> 00:27:13,150
also part of the draft itself it gives

443
00:27:09,790 --> 00:27:15,370
you a quick overview what are the

444
00:27:13,150 --> 00:27:17,160
features of the individual solutions I'm

445
00:27:15,370 --> 00:27:21,539
not sure if you have time to go through

446
00:27:17,160 --> 00:27:24,610
to be or how much time you need

447
00:27:21,539 --> 00:27:27,480
three minutes okay okay so I'll give it

448
00:27:24,610 --> 00:27:31,090
a try so on the left side we have

449
00:27:27,480 --> 00:27:34,330
different scenarios listed and then over

450
00:27:31,090 --> 00:27:35,678
the columns columns we compare the

451
00:27:34,330 --> 00:27:41,110
different solutions with the standard

452
00:27:35,679 --> 00:27:43,480
not pass TCP so in case we have packet

453
00:27:41,110 --> 00:27:45,370
loss on on the initial part or part of

454
00:27:43,480 --> 00:27:48,070
the hench I cannot be transmitted then

455
00:27:45,370 --> 00:27:52,418
for multiple TCP this at least means we

456
00:27:48,070 --> 00:28:00,010
have a delayed connection for the Robie

457
00:27:52,419 --> 00:28:04,000
timer this depends then on how long it

458
00:28:00,010 --> 00:28:06,279
requires to to trigger a next try on a

459
00:28:04,000 --> 00:28:09,549
different path for the Roby sim it has

460
00:28:06,279 --> 00:28:12,690
no impact because we simultaneously try

461
00:28:09,549 --> 00:28:15,460
to establish a connection on on any path

462
00:28:12,690 --> 00:28:17,200
so at least if there is one part

463
00:28:15,460 --> 00:28:20,289
available without packet loss in the

464
00:28:17,200 --> 00:28:24,490
system it has no impact for Robbie E sim

465
00:28:20,289 --> 00:28:27,010
it's absolutely the same and for IPS it

466
00:28:24,490 --> 00:28:29,529
means a delayed connection if the

467
00:28:27,010 --> 00:28:32,049
selected path by IPS is affected by

468
00:28:29,529 --> 00:28:35,529
packet loss if the initial path is

469
00:28:32,049 --> 00:28:38,350
broken so that is a control then for

470
00:28:35,529 --> 00:28:45,940
multiple TCP that means there is no

471
00:28:38,350 --> 00:28:50,439
connection possible for timer it is then

472
00:28:45,940 --> 00:28:52,299
depending on how long it it needs to to

473
00:28:50,440 --> 00:28:55,480
get the timer expired and to get a

474
00:28:52,299 --> 00:28:58,389
trigger on and to try it on another part

475
00:28:55,480 --> 00:29:01,330
again for the yoruba sim it has no

476
00:28:58,389 --> 00:29:04,408
impact for the Eastern as well and for

477
00:29:01,330 --> 00:29:10,720
IPS it's the same there is no connection

478
00:29:04,409 --> 00:29:15,000
possible now in the third row we

479
00:29:10,720 --> 00:29:21,970
consider what it means in terms of how

480
00:29:15,000 --> 00:29:24,279
long it requires to establish an initial

481
00:29:21,970 --> 00:29:26,860
path so for multiple TCP it's depending

482
00:29:24,279 --> 00:29:28,659
on the default route characteristics for

483
00:29:26,860 --> 00:29:31,809
the Robie timer it depends on the

484
00:29:28,659 --> 00:29:34,630
default route plus possible tries on

485
00:29:31,809 --> 00:29:38,049
other paths for OB sim

486
00:29:34,630 --> 00:29:40,120
it's depending on the fast part and the

487
00:29:38,049 --> 00:29:43,539
in the system for robbery same the same

488
00:29:40,120 --> 00:29:45,909
and for IPS depending on the selected

489
00:29:43,539 --> 00:29:50,110
part which could be the default route

490
00:29:45,910 --> 00:29:52,059
but could also be something else in the

491
00:29:50,110 --> 00:29:56,080
fourth row then we have the same

492
00:29:52,059 --> 00:29:58,059
consideration but for multipath session

493
00:29:56,080 --> 00:30:00,909
set up so it that means at least it

494
00:29:58,059 --> 00:30:03,610
needs a second path in vs. system to

495
00:30:00,910 --> 00:30:06,039
provide multi connectivity or a multi

496
00:30:03,610 --> 00:30:09,000
path usage so for multiple CCP that is

497
00:30:06,039 --> 00:30:10,929
depending on the multi path capital

498
00:30:09,000 --> 00:30:14,559
handshake for the initial path

499
00:30:10,929 --> 00:30:19,510
establishment plus the MP join process

500
00:30:14,559 --> 00:30:24,309
for subsequent path here OB timer it

501
00:30:19,510 --> 00:30:25,299
depends on how many initial pass

502
00:30:24,309 --> 00:30:29,350
establishment

503
00:30:25,299 --> 00:30:33,460
it requires plus the following am patron

504
00:30:29,350 --> 00:30:40,780
process for OB sim it's only depending

505
00:30:33,460 --> 00:30:44,230
on the handshake of the fastest path in

506
00:30:40,780 --> 00:30:46,658
the system plus a later MP join your OBE

507
00:30:44,230 --> 00:30:49,870
sim it's a little bit different there we

508
00:30:46,659 --> 00:30:53,559
can reach the highest gain because we

509
00:30:49,870 --> 00:30:57,209
can there make use of all the pathway or

510
00:30:53,559 --> 00:31:00,580
all all the handshakes we simultaneously

511
00:30:57,210 --> 00:31:03,460
started so we don't have an empty joint

512
00:31:00,580 --> 00:31:06,428
anymore and we have the fastest multi

513
00:31:03,460 --> 00:31:09,640
pass session set up over all the

514
00:31:06,429 --> 00:31:12,610
solutions in the Ruby ECM and for IPS

515
00:31:09,640 --> 00:31:15,640
it's also the standard anti capable

516
00:31:12,610 --> 00:31:18,178
process plus and each one and the most

517
00:31:15,640 --> 00:31:20,919
important thing now in the last row

518
00:31:18,179 --> 00:31:23,409
which of this solution guarantees at

519
00:31:20,919 --> 00:31:25,980
least session setup so for multi pass

520
00:31:23,409 --> 00:31:29,940
DCP it's depending on the default route

521
00:31:25,980 --> 00:31:34,270
Robey timer sim and Isom can guarantee

522
00:31:29,940 --> 00:31:40,419
session setup and for IPS it's depends

523
00:31:34,270 --> 00:31:46,720
on the selection so next steps yeah it

524
00:31:40,419 --> 00:31:47,980
is draft ready for adoption and second

525
00:31:46,720 --> 00:31:52,270
are there n

526
00:31:47,980 --> 00:32:00,460
comments from your side and you comment

527
00:31:52,270 --> 00:32:03,610
questions okay I think you know this

528
00:32:00,460 --> 00:32:05,650
buzzer is 25 pages for the draft so it's

529
00:32:03,610 --> 00:32:10,080
compared to the previous version

530
00:32:05,650 --> 00:32:13,450
it gets very mature that yes and and

531
00:32:10,080 --> 00:32:16,210
then I think this is useful idea because

532
00:32:13,450 --> 00:32:18,160
know you can establish an PTC system

533
00:32:16,210 --> 00:32:22,720
very quickly without wasting any

534
00:32:18,160 --> 00:32:25,720
resources yeah yeah and so my question

535
00:32:22,720 --> 00:32:27,580
is know if someone wants to support this

536
00:32:25,720 --> 00:32:30,250
one and then especially if you want to

537
00:32:27,580 --> 00:32:36,540
implement this one that would be great

538
00:32:30,250 --> 00:32:38,950
so anybody have some interests in

539
00:32:36,540 --> 00:32:42,250
reading draft a baby in draft why

540
00:32:38,950 --> 00:32:47,010
implement draft could you speak up a

541
00:32:42,250 --> 00:32:50,890
little bit mmm

542
00:32:47,010 --> 00:32:53,530
in any case we could also consider to

543
00:32:50,890 --> 00:32:56,080
make this part of the next hackathon no

544
00:32:53,530 --> 00:33:02,620
okay but also be an option

545
00:32:56,080 --> 00:33:05,260
yeah right and in your company there is

546
00:33:02,620 --> 00:33:06,850
any ramp or implementing this one

547
00:33:05,260 --> 00:33:11,559
unfortunately currently we don't have

548
00:33:06,850 --> 00:33:13,270
any resources for that so that's why it

549
00:33:11,559 --> 00:33:18,370
would be good to have additional

550
00:33:13,270 --> 00:33:21,190
contributors okay okay

551
00:33:18,370 --> 00:33:25,178
just redraft and if you have a comments

552
00:33:21,190 --> 00:33:29,679
please send on the mailing list what

553
00:33:25,179 --> 00:33:32,230
what are the prerequisites for for a

554
00:33:29,679 --> 00:33:35,710
working group adoption yes okay I won't

555
00:33:32,230 --> 00:33:38,320
see feedback right now okay you know

556
00:33:35,710 --> 00:33:41,350
people don't say support one no support

557
00:33:38,320 --> 00:33:44,139
yeah okay maybe we can encourage people

558
00:33:41,350 --> 00:33:48,280
make some opinion on the mailing list

559
00:33:44,140 --> 00:33:49,090
yeah okay yeah thank you yeah thanks one

560
00:33:48,280 --> 00:33:54,940
a nice draft

561
00:33:49,090 --> 00:33:57,480
it's getting matured there's one more

562
00:33:54,940 --> 00:34:00,220
question from Phil from the a Java

563
00:33:57,480 --> 00:34:01,360
are there any experiments of how often

564
00:34:00,220 --> 00:34:07,299
this idea gets you any

565
00:34:01,360 --> 00:34:14,109
significant gain so if you check my

566
00:34:07,299 --> 00:34:19,210
presentation from the IETF 104 there we

567
00:34:14,109 --> 00:34:22,509
have some experiments presented and

568
00:34:19,210 --> 00:34:25,810
there's also a paper out where we did

569
00:34:22,510 --> 00:34:29,919
several tests on what can be gained and

570
00:34:25,810 --> 00:34:31,480
there there are huge gains you can you

571
00:34:29,918 --> 00:34:38,699
can reach maybe they're the only

572
00:34:31,480 --> 00:34:45,219
question how often it it happens or you

573
00:34:38,699 --> 00:34:47,460
need it in the in reality yeah well

574
00:34:45,219 --> 00:34:50,529
there we don't have any data about that

575
00:34:47,460 --> 00:34:52,929
but it's pretty likely that for example

576
00:34:50,530 --> 00:34:55,480
with a mobile phone it happens that you

577
00:34:52,929 --> 00:34:59,920
are connected to two Wi-Fi hotspots

578
00:34:55,480 --> 00:35:02,590
which are not capable to to guarantee a

579
00:34:59,920 --> 00:35:08,619
session set up or maybe delay the

580
00:35:02,590 --> 00:35:11,520
session set up at least thank you so

581
00:35:08,619 --> 00:35:14,650
much Nicolas

582
00:35:11,520 --> 00:35:14,650
[Music]

583
00:35:35,710 --> 00:35:46,330
okay okay

584
00:35:42,220 --> 00:35:48,970
hello everyone during last IGF and more

585
00:35:46,330 --> 00:35:51,819
specifically during the social event I

586
00:35:48,970 --> 00:35:54,098
had a chat with Phil on the problem we

587
00:35:51,820 --> 00:35:54,760
had in some MP TCP deployments and

588
00:35:54,099 --> 00:35:59,109
performance

589
00:35:54,760 --> 00:36:02,200
so if thought it was interesting so here

590
00:35:59,109 --> 00:36:05,259
are our issues what we tried to do some

591
00:36:02,200 --> 00:36:06,939
evaluation of performance and we don't

592
00:36:05,260 --> 00:36:08,589
understand everything we measure just to

593
00:36:06,940 --> 00:36:11,950
warn you that there are some strange

594
00:36:08,589 --> 00:36:16,210
thing happening and Wow let's go through

595
00:36:11,950 --> 00:36:19,720
it first foundation is in two parts

596
00:36:16,210 --> 00:36:22,990
first one is MP TCP on Geo satellite

597
00:36:19,720 --> 00:36:25,930
axis and the other one is on low Earth

598
00:36:22,990 --> 00:36:27,879
orbit satellites so for those who are

599
00:36:25,930 --> 00:36:31,330
not familiar with geo satellites they

600
00:36:27,880 --> 00:36:35,800
are mostly at 36,000 kilometers and so

601
00:36:31,330 --> 00:36:41,049
we have 600 milliseconds OTT and because

602
00:36:35,800 --> 00:36:44,200
of that we usually deploy TCP proxies

603
00:36:41,050 --> 00:36:45,670
so what TCP proxies do that is an

604
00:36:44,200 --> 00:36:47,980
example of what you can do they

605
00:36:45,670 --> 00:36:50,380
basically intercept the scene then the

606
00:36:47,980 --> 00:36:51,760
siak to the asked so we have a quick

607
00:36:50,380 --> 00:36:54,700
establishment of the connection between

608
00:36:51,760 --> 00:36:56,349
the US and the first proxy then we have

609
00:36:54,700 --> 00:37:00,279
a specific protocol between the two

610
00:36:56,349 --> 00:37:07,240
proxies and then a third part of TCP

611
00:37:00,280 --> 00:37:09,730
connection so when we go in how MP TCP

612
00:37:07,240 --> 00:37:12,930
and shakes and connection establishments

613
00:37:09,730 --> 00:37:15,280
work this is an example we follow

614
00:37:12,930 --> 00:37:18,399
throughout the presentation we have a

615
00:37:15,280 --> 00:37:20,680
stay with two addresses and Osby so we

616
00:37:18,400 --> 00:37:26,560
have the connection that is been done on

617
00:37:20,680 --> 00:37:30,598
whatever LTE or fixed network and we

618
00:37:26,560 --> 00:37:35,680
have the exchange of MP MP capable data

619
00:37:30,599 --> 00:37:37,900
between us a and OS b but the main

620
00:37:35,680 --> 00:37:42,700
problem is if we try to open this up

621
00:37:37,900 --> 00:37:45,910
flow on the satellite link if we just

622
00:37:42,700 --> 00:37:49,899
take our open source proxy or even a

623
00:37:45,910 --> 00:37:51,670
commercial proxy if you don't adapt it

624
00:37:49,900 --> 00:37:55,020
basically when you receive a scene

625
00:37:51,670 --> 00:37:57,640
please press n an MP join it just

626
00:37:55,020 --> 00:37:59,800
forward the scene that's what we

627
00:37:57,640 --> 00:38:01,450
measured so the problem is because it

628
00:37:59,800 --> 00:38:04,620
sends a syn ACK to the second address

629
00:38:01,450 --> 00:38:08,830
the MP disappea connection cannot happen

630
00:38:04,620 --> 00:38:14,650
so we have done some modifications to

631
00:38:08,830 --> 00:38:16,990
our open source proxy to be able to

632
00:38:14,650 --> 00:38:20,350
establish an participe connections so

633
00:38:16,990 --> 00:38:23,259
what we do is instead of finding the I

634
00:38:20,350 --> 00:38:27,040
hope it's clear but when the proxy

635
00:38:23,260 --> 00:38:29,770
receive the thin and the MP join instead

636
00:38:27,040 --> 00:38:32,350
of just sending the thin act directly

637
00:38:29,770 --> 00:38:36,759
through the address - we just hold on

638
00:38:32,350 --> 00:38:39,730
and we forward the scene and m-pin join

639
00:38:36,760 --> 00:38:42,580
with the token through OSB once we

640
00:38:39,730 --> 00:38:46,930
receive the Finnick with MP join form

641
00:38:42,580 --> 00:38:50,110
the OSB we just wait again then we all

642
00:38:46,930 --> 00:38:52,419
lack from the pepto source B then we

643
00:38:50,110 --> 00:38:54,460
then the thin AK and the MP join with

644
00:38:52,420 --> 00:38:58,660
everything from auth be through address

645
00:38:54,460 --> 00:39:01,990
a and then one we want to receive the

646
00:38:58,660 --> 00:39:04,720
enjoy moment with a we can for that to

647
00:39:01,990 --> 00:39:06,339
us me and we have MP TCP connection

648
00:39:04,720 --> 00:39:08,529
established even though we have a

649
00:39:06,340 --> 00:39:14,230
disappear poxy that was the first step

650
00:39:08,530 --> 00:39:18,640
the second step was stranger if

651
00:39:14,230 --> 00:39:22,300
basically our TCP proxy acknowledges

652
00:39:18,640 --> 00:39:24,609
everything at MPT CP level though the

653
00:39:22,300 --> 00:39:27,280
problem that we had is that we realized

654
00:39:24,610 --> 00:39:30,160
that if in some experiments we had the

655
00:39:27,280 --> 00:39:32,080
loss on the first path and so what

656
00:39:30,160 --> 00:39:35,560
happened if in this case for a number we

657
00:39:32,080 --> 00:39:38,470
lose packet 2 and with our open source

658
00:39:35,560 --> 00:39:42,690
experiment and we just had the

659
00:39:38,470 --> 00:39:46,390
peps that was acknowledging the packet 5

660
00:39:42,690 --> 00:39:48,610
asking for the fifths packet and because

661
00:39:46,390 --> 00:39:51,750
us a receives this acknowledgement

662
00:39:48,610 --> 00:39:57,070
packet 2 is removed for the same buffer

663
00:39:51,750 --> 00:40:00,700
so even though we can adapt our proxy to

664
00:39:57,070 --> 00:40:03,070
actually make enable and participate

665
00:40:00,700 --> 00:40:04,569
connection despite the presence of the

666
00:40:03,070 --> 00:40:06,820
proxy

667
00:40:04,570 --> 00:40:12,640
they are much further modifications

668
00:40:06,820 --> 00:40:14,710
required through the open source app for

669
00:40:12,640 --> 00:40:17,319
that we can actually have an MP TCP

670
00:40:14,710 --> 00:40:19,870
connection that works because this ends

671
00:40:17,320 --> 00:40:22,600
up in connection closing and we have

672
00:40:19,870 --> 00:40:26,710
that just doesn't work

673
00:40:22,600 --> 00:40:29,200
also there is something in that's

674
00:40:26,710 --> 00:40:32,650
something that we have also seen if

675
00:40:29,200 --> 00:40:35,020
basically on the area v4 MP TCP it

676
00:40:32,650 --> 00:40:37,810
mentioned that we need to have at MP TCP

677
00:40:35,020 --> 00:40:40,630
level one one unique receive buffer and

678
00:40:37,810 --> 00:40:42,790
the problem is we have here one with

679
00:40:40,630 --> 00:40:46,270
each buffer at the proxy level and when

680
00:40:42,790 --> 00:40:49,000
receive buffer at the Osby level so we

681
00:40:46,270 --> 00:40:57,400
may we have sometimes encounter also

682
00:40:49,000 --> 00:41:00,520
flow control issues so we were not happy

683
00:40:57,400 --> 00:41:04,600
with the results but we don't like to

684
00:41:00,520 --> 00:41:08,370
have proxies we usually need them and so

685
00:41:04,600 --> 00:41:11,290
we also made in experiments without

686
00:41:08,370 --> 00:41:15,400
specific accelerations so we just have

687
00:41:11,290 --> 00:41:19,540
this pep style which is an open source a

688
00:41:15,400 --> 00:41:23,020
TCP proxy we have just used an MP tcp

689
00:41:19,540 --> 00:41:26,100
version with on this under the stack and

690
00:41:23,020 --> 00:41:28,630
we have huge asymmetry because we have

691
00:41:26,100 --> 00:41:31,720
66 hundred milliseconds on saturate

692
00:41:28,630 --> 00:41:33,820
thing with download and uploads and

693
00:41:31,720 --> 00:41:40,180
characteristics that are close to what

694
00:41:33,820 --> 00:41:41,770
we have in public accesses for internet

695
00:41:40,180 --> 00:41:43,839
access with satellite and on the

696
00:41:41,770 --> 00:41:49,750
terrorist er link we have an oddity that

697
00:41:43,840 --> 00:41:53,890
is 120 and 8 make I put in the load so

698
00:41:49,750 --> 00:41:56,290
we have done some downloads you can feel

699
00:41:53,890 --> 00:41:59,230
the bottom left so that is a down

700
00:41:56,290 --> 00:42:03,220
landing time at the function of the 5

701
00:41:59,230 --> 00:42:06,280
size and 4 MP DCP using both links and

702
00:42:03,220 --> 00:42:09,160
participating only the LT link or the

703
00:42:06,280 --> 00:42:13,270
emulated somehow tourist holding and the

704
00:42:09,160 --> 00:42:17,080
satellite link good thing is even if we

705
00:42:13,270 --> 00:42:17,680
can't accelerate these MP DCP if we just

706
00:42:17,080 --> 00:42:19,750
that it goes

707
00:42:17,680 --> 00:42:21,460
to that rate networks without

708
00:42:19,750 --> 00:42:23,740
acceleration we have gains

709
00:42:21,460 --> 00:42:26,619
despite the really large asymmetry which

710
00:42:23,740 --> 00:42:30,520
we are just using the basic and minimum

711
00:42:26,619 --> 00:42:31,990
mataji scheduler so that is a good thing

712
00:42:30,520 --> 00:42:33,759
for Earth we are happy to have this kind

713
00:42:31,990 --> 00:42:36,250
of results because we see lots of trends

714
00:42:33,760 --> 00:42:40,059
in using MP TCP to do aggregation

715
00:42:36,250 --> 00:42:42,609
between it with different networks that

716
00:42:40,059 --> 00:42:45,329
was the first part of my presentation

717
00:42:42,609 --> 00:42:48,400
the second part of my presentation is

718
00:42:45,329 --> 00:42:54,280
speaking about using MP TCP to link

719
00:42:48,400 --> 00:42:58,079
aggregation some in some cases we have

720
00:42:54,280 --> 00:43:00,520
the huge trend in low-earth orbit

721
00:42:58,079 --> 00:43:04,410
satellite constellations you may have

722
00:43:00,520 --> 00:43:07,980
heard of the basics one or one web or

723
00:43:04,410 --> 00:43:12,640
Telesat one what are many around we and

724
00:43:07,980 --> 00:43:15,250
so sometimes there is interesting doing

725
00:43:12,640 --> 00:43:17,859
layer to irritation or but we were

726
00:43:15,250 --> 00:43:20,800
thinking that may be doing that at MPT

727
00:43:17,859 --> 00:43:24,180
CP level which would make things life

728
00:43:20,800 --> 00:43:27,099
easier at the physical and link layers

729
00:43:24,180 --> 00:43:31,750
so we have done some measurements to see

730
00:43:27,099 --> 00:43:34,180
how MP DCP behaves in these use cases we

731
00:43:31,750 --> 00:43:37,569
also have experiments on how this

732
00:43:34,180 --> 00:43:40,210
behaves if we want to use MP TCP for end

733
00:43:37,569 --> 00:43:44,380
overs but I will present the case where

734
00:43:40,210 --> 00:43:47,020
we have basically client that is behind

735
00:43:44,380 --> 00:43:51,220
the box with MP TCP we have two

736
00:43:47,020 --> 00:43:52,780
different satellites available and we

737
00:43:51,220 --> 00:43:56,319
have them participate box and the other

738
00:43:52,780 --> 00:43:58,930
side's and server at the other side we

739
00:43:56,319 --> 00:44:01,750
have a variable delay one way delay that

740
00:43:58,930 --> 00:44:03,279
is close to basically if the delay is

741
00:44:01,750 --> 00:44:06,130
moving is because the satellite is going

742
00:44:03,280 --> 00:44:10,660
for the controller and going further

743
00:44:06,130 --> 00:44:13,059
away and we neglect the the impact of

744
00:44:10,660 --> 00:44:14,649
end overs basically we consider that we

745
00:44:13,059 --> 00:44:17,140
always have one satellite that is going

746
00:44:14,650 --> 00:44:20,760
closer to us and one that is going away

747
00:44:17,140 --> 00:44:25,930
and so that is a simple model and that

748
00:44:20,760 --> 00:44:28,440
but it still somehow close to one of the

749
00:44:25,930 --> 00:44:32,470
constellation models

750
00:44:28,440 --> 00:44:34,480
but the we even though we either jump

751
00:44:32,470 --> 00:44:38,529
today you have only couple of kilobits

752
00:44:34,480 --> 00:44:40,420
per second successes with these huge

753
00:44:38,530 --> 00:44:44,980
mega constellations we expect to have

754
00:44:40,420 --> 00:44:47,320
more decent capacity what we have done

755
00:44:44,980 --> 00:44:51,370
is comparing MP TCP that is able to grab

756
00:44:47,320 --> 00:44:53,140
to have 8 megabits on both links we

757
00:44:51,370 --> 00:44:56,740
compare that with a single pass TCP

758
00:44:53,140 --> 00:44:58,990
using only 8 make link but also to have

759
00:44:56,740 --> 00:45:02,200
a fair comparison we compare that with

760
00:44:58,990 --> 00:45:04,060
them with a single TCP that actually

761
00:45:02,200 --> 00:45:06,669
have the double capacity because

762
00:45:04,060 --> 00:45:09,610
otherwise we often see in mp TCP

763
00:45:06,670 --> 00:45:11,230
comparisons and fair comparisons because

764
00:45:09,610 --> 00:45:14,140
with a better performance but that also

765
00:45:11,230 --> 00:45:15,790
just because we have no capacity so we

766
00:45:14,140 --> 00:45:20,770
wanted to have this case as well to see

767
00:45:15,790 --> 00:45:23,590
to what extent MP TCP can be as good or

768
00:45:20,770 --> 00:45:27,100
not have the finger pass one with a

769
00:45:23,590 --> 00:45:29,230
double capacity so this is one of the

770
00:45:27,100 --> 00:45:31,150
results we have so in this case I have

771
00:45:29,230 --> 00:45:36,310
two experiments on that this one we have

772
00:45:31,150 --> 00:45:38,650
a simple bash server so we are not sure

773
00:45:36,310 --> 00:45:41,470
that this is again the file transfer

774
00:45:38,650 --> 00:45:44,140
depending on the file size and we are

775
00:45:41,470 --> 00:45:48,040
not sure that we have reached the

776
00:45:44,140 --> 00:45:50,740
maximum capacity but the protocol could

777
00:45:48,040 --> 00:45:54,250
have because we have limited file size

778
00:45:50,740 --> 00:45:59,799
but what we can see is when we look at

779
00:45:54,250 --> 00:46:02,350
the larger file of 100 Meg so TCP with

780
00:45:59,800 --> 00:46:06,640
only 8 megabits have seven megabytes

781
00:46:02,350 --> 00:46:11,230
megabits per second of good put MP TCP

782
00:46:06,640 --> 00:46:14,920
11 and TCP with 16 megabytes megabit per

783
00:46:11,230 --> 00:46:18,460
second 14 basically we see that mptp

784
00:46:14,920 --> 00:46:20,620
does not do do as good as the TCP that

785
00:46:18,460 --> 00:46:24,010
has more capacity but we know that with

786
00:46:20,620 --> 00:46:26,049
Audia and all these mechanism for

787
00:46:24,010 --> 00:46:28,240
fairness that's also one of the big

788
00:46:26,050 --> 00:46:30,760
chief objective of MP TCP not to grab

789
00:46:28,240 --> 00:46:32,680
the whole available capacity so we are

790
00:46:30,760 --> 00:46:34,840
not saying and participe is doing bad

791
00:46:32,680 --> 00:46:37,990
but we also saying that this is what it

792
00:46:34,840 --> 00:46:40,470
has been designed to do and not to grab

793
00:46:37,990 --> 00:46:40,470
the whole capacity

794
00:46:41,280 --> 00:46:45,060
but still we think there might be

795
00:46:42,690 --> 00:46:49,320
improvements here in this use case also

796
00:46:45,060 --> 00:46:53,460
we thought that we know that there may

797
00:46:49,320 --> 00:46:55,530
be some issues on TCP native TCP on when

798
00:46:53,460 --> 00:46:56,970
you have this kind of variable delay and

799
00:46:55,530 --> 00:47:01,020
that is something we are investigating

800
00:46:56,970 --> 00:47:04,140
at the moment and another set of

801
00:47:01,020 --> 00:47:08,100
experiments because we know that the web

802
00:47:04,140 --> 00:47:11,609
is strange we have this emulated

803
00:47:08,100 --> 00:47:18,089
platform then we go out on the internet

804
00:47:11,610 --> 00:47:21,560
and download will wait pages using HTTP

805
00:47:18,090 --> 00:47:23,630
2 over TCP we don't have quick here and

806
00:47:21,560 --> 00:47:26,279
basically will have the same

807
00:47:23,630 --> 00:47:28,620
characteristics of MP TCP single pass

808
00:47:26,280 --> 00:47:31,380
the CP or no participe with a double

809
00:47:28,620 --> 00:47:34,049
capacity so when we look at the first

810
00:47:31,380 --> 00:47:38,210
results we have three from how simple

811
00:47:34,050 --> 00:47:41,940
pages with either HTTP 2 or HTTP 1.1 and

812
00:47:38,210 --> 00:47:44,010
few read directions the other domains

813
00:47:41,940 --> 00:47:49,530
refers to the amount of redirections

814
00:47:44,010 --> 00:47:52,110
that are done on the page and what we

815
00:47:49,530 --> 00:47:56,190
can see is that in this case if we

816
00:47:52,110 --> 00:47:59,250
compare these three web pages MP TCP in

817
00:47:56,190 --> 00:48:04,020
Papua does as good as TCP with a very

818
00:47:59,250 --> 00:48:06,890
huge capacity like 15 megabit however

819
00:48:04,020 --> 00:48:13,110
when we moved to more complexed pages

820
00:48:06,890 --> 00:48:14,580
when we have lots of redirections so

821
00:48:13,110 --> 00:48:18,630
that's the part where I don't exactly

822
00:48:14,580 --> 00:48:21,810
understand what's going on because we

823
00:48:18,630 --> 00:48:25,260
see that fan on port for the page Lulla

824
00:48:21,810 --> 00:48:29,790
per page blue moon even though we have

825
00:48:25,260 --> 00:48:33,390
few red directions we don't see much

826
00:48:29,790 --> 00:48:35,730
differences between the time needed to

827
00:48:33,390 --> 00:48:36,870
download the page however for the pages

828
00:48:35,730 --> 00:48:39,900
that are very complicated

829
00:48:36,870 --> 00:48:43,460
we thought that MP TCP was not doing as

830
00:48:39,900 --> 00:48:46,800
good as TCP with 16 megabytes we think

831
00:48:43,460 --> 00:48:50,280
that that may be because MP TCP opens

832
00:48:46,800 --> 00:48:53,880
then lots of sub flows and that may not

833
00:48:50,280 --> 00:48:55,030
be as interesting as having one less

834
00:48:53,880 --> 00:49:00,430
flow we don't know if it's

835
00:48:55,030 --> 00:49:02,560
client limits or if it's MP TCP that

836
00:49:00,430 --> 00:49:05,049
opens too many things that still

837
00:49:02,560 --> 00:49:11,020
something that we are investigating but

838
00:49:05,050 --> 00:49:15,310
anyway we we feel that as an easy way to

839
00:49:11,020 --> 00:49:17,770
handle end overs and to aggregate

840
00:49:15,310 --> 00:49:24,100
capacity in the Leo constellation news

841
00:49:17,770 --> 00:49:28,360
case so to sum up TCP proxies block MPT

842
00:49:24,100 --> 00:49:30,310
MPT CB traffic and we tried that quickly

843
00:49:28,360 --> 00:49:30,730
and adapting TCP proxy is not that

844
00:49:30,310 --> 00:49:34,270
simple

845
00:49:30,730 --> 00:49:36,340
and we haven't opened all the Pandora

846
00:49:34,270 --> 00:49:38,650
Box we may encounter when we want to do

847
00:49:36,340 --> 00:49:40,780
that so we have been not using TCP

848
00:49:38,650 --> 00:49:44,170
proxies if the performance are good and

849
00:49:40,780 --> 00:49:46,000
they are actually quite good and also we

850
00:49:44,170 --> 00:49:49,840
realize that it was very complicated to

851
00:49:46,000 --> 00:49:51,730
make a fair comparison with the

852
00:49:49,840 --> 00:49:54,070
diversity of the web pages we've seen

853
00:49:51,730 --> 00:49:56,740
and for those who are interested in

854
00:49:54,070 --> 00:49:59,740
SATCOM we have a workshop on quick for

855
00:49:56,740 --> 00:50:06,040
that come tomorrow afternoon thank you

856
00:49:59,740 --> 00:50:07,540
any question mark assignment and short

857
00:50:06,040 --> 00:50:08,800
question I think it was on slide 10

858
00:50:07,540 --> 00:50:10,960
where you did a comparison between

859
00:50:08,800 --> 00:50:13,810
multiple TCP and TCP yes

860
00:50:10,960 --> 00:50:15,340
did you also play it a little bit softer

861
00:50:13,810 --> 00:50:17,560
did you also played a little bit with

862
00:50:15,340 --> 00:50:20,560
the buffers hmm did you did you play it

863
00:50:17,560 --> 00:50:23,350
with the tune did you change the buffers

864
00:50:20,560 --> 00:50:27,730
and then try it out if this make the

865
00:50:23,350 --> 00:50:30,460
difference the NPDC PCP buffer send and

866
00:50:27,730 --> 00:50:35,380
receive buffer now that was we have just

867
00:50:30,460 --> 00:50:38,320
on default and a VP that was internal

868
00:50:35,380 --> 00:50:42,360
I don't remember which version because

869
00:50:38,320 --> 00:50:44,860
we have sometimes good experience to

870
00:50:42,360 --> 00:50:48,580
adapt a little bit send and receive

871
00:50:44,860 --> 00:50:54,950
buffers to to get the data right tuned

872
00:50:48,580 --> 00:50:56,810
okay thank you hello this is

873
00:50:54,950 --> 00:50:59,390
Remora this is because this is my

874
00:50:56,810 --> 00:51:01,640
personal curiosity yes thanks for

875
00:50:59,390 --> 00:51:06,290
interesting presentation so I have

876
00:51:01,640 --> 00:51:08,690
several questions first I would like to

877
00:51:06,290 --> 00:51:11,000
know which kind of implementation you

878
00:51:08,690 --> 00:51:15,500
have use for send and receive I did you

879
00:51:11,000 --> 00:51:18,820
use Linux implementation what

880
00:51:15,500 --> 00:51:24,890
implementation we used for or experiment

881
00:51:18,820 --> 00:51:28,760
for so for and for the pep we are using

882
00:51:24,890 --> 00:51:32,480
pepsin and for that C's region here that

883
00:51:28,760 --> 00:51:34,700
EPS and both open source pet and for the

884
00:51:32,480 --> 00:51:36,320
stack we have not been using the same

885
00:51:34,700 --> 00:51:39,950
for the two experiments because they are

886
00:51:36,320 --> 00:51:42,200
two one I don't have the number in my

887
00:51:39,950 --> 00:51:45,828
head for them that means open source

888
00:51:42,200 --> 00:51:48,439
type support market path PCP basically

889
00:51:45,829 --> 00:51:51,500
it depends on the stack on which it is

890
00:51:48,440 --> 00:51:54,010
using which uses the stack on which it

891
00:51:51,500 --> 00:51:56,359
is used

892
00:51:54,010 --> 00:52:00,710
so basically if you are on a stack with

893
00:51:56,359 --> 00:52:06,440
an PTT P version X epsilon is using M

894
00:52:00,710 --> 00:52:10,060
participe version X depends on the Linux

895
00:52:06,440 --> 00:52:14,829
kernel it is on on top of which it is

896
00:52:10,060 --> 00:52:14,828
okay when I look at the page six

897
00:52:15,579 --> 00:52:26,260
I'm not a six six five okay come on I'm

898
00:52:21,319 --> 00:52:29,569
not sure if why pepsin being ak5 here

899
00:52:26,260 --> 00:52:32,150
I'm wondering if might be there might be

900
00:52:29,569 --> 00:52:34,550
a bug in a pep implementation that's why

901
00:52:32,150 --> 00:52:39,170
I'm asking what kind of implementation

902
00:52:34,550 --> 00:52:42,710
you are using okay yeah that's what I

903
00:52:39,170 --> 00:52:45,920
want to know and then so other stuff

904
00:52:42,710 --> 00:52:49,099
with you know can you share the TCP dump

905
00:52:45,920 --> 00:52:50,869
file for your experiment that way some

906
00:52:49,099 --> 00:52:54,560
people have a some knowledge about MP

907
00:52:50,869 --> 00:52:57,170
TCP can debug that traffic and then from

908
00:52:54,560 --> 00:52:58,880
you might be able to identify okay this

909
00:52:57,170 --> 00:53:01,250
is that reason I mean it could be a bad

910
00:52:58,880 --> 00:53:03,560
I could be some problem of being big TCP

911
00:53:01,250 --> 00:53:05,329
okay you sure we can I can share or I

912
00:53:03,560 --> 00:53:07,369
can share we share or I can on their

913
00:53:05,329 --> 00:53:10,640
lists but also

914
00:53:07,369 --> 00:53:12,619
I wanted to we thought that was the

915
00:53:10,640 --> 00:53:14,299
first problems we were in country we

916
00:53:12,619 --> 00:53:16,450
were saying more and more problems we

917
00:53:14,299 --> 00:53:18,769
were like maybe we don't need any

918
00:53:16,450 --> 00:53:20,269
acceleration for that use case because

919
00:53:18,769 --> 00:53:21,680
of the receive buffer we had flow

920
00:53:20,269 --> 00:53:23,209
control issues and we're like oh maybe

921
00:53:21,680 --> 00:53:25,578
we just don't need proxies in the use

922
00:53:23,210 --> 00:53:27,049
case but I can show you the problems if

923
00:53:25,579 --> 00:53:30,190
that's interesting for now maybe I think

924
00:53:27,049 --> 00:53:30,190
useful thank you

925
00:53:39,109 --> 00:53:54,319
okay any more comments question okay

926
00:53:48,420 --> 00:53:54,320
Thank You Percy now see

927
00:54:06,510 --> 00:54:16,050
now you can use this to be a time trust

928
00:54:11,440 --> 00:54:16,050
first trust this first

929
00:54:25,630 --> 00:54:40,880
it's big ok thanks for cheering thanks

930
00:54:38,599 --> 00:54:43,539
for your coming hello everyone my name

931
00:54:40,880 --> 00:54:47,599
is Chi from Ching hai University and

932
00:54:43,539 --> 00:54:50,630
it's my first time to attend IETF so

933
00:54:47,599 --> 00:54:54,950
please excuse me for any anything wrong

934
00:54:50,630 --> 00:54:57,259
ok ok so as the network changes and

935
00:54:54,950 --> 00:54:59,959
develops we see more and more

936
00:54:57,259 --> 00:55:03,519
information different informations that

937
00:54:59,959 --> 00:55:06,499
we could adopt obtain and utilize in

938
00:55:03,519 --> 00:55:09,288
transportation layer to improve some

939
00:55:06,499 --> 00:55:12,680
performance like stupid or say or

940
00:55:09,289 --> 00:55:17,690
security and other things so today we

941
00:55:12,680 --> 00:55:21,440
are bringing two simple and powerful

942
00:55:17,690 --> 00:55:23,930
things we want to introduce them to MP

943
00:55:21,440 --> 00:55:26,660
TCP and to improve something so now

944
00:55:23,930 --> 00:55:29,479
let's start the first one is is to

945
00:55:26,660 --> 00:55:31,879
introduce prediction and we have

946
00:55:29,479 --> 00:55:32,660
submitted the draft the predictable

947
00:55:31,880 --> 00:55:35,299
multiparous

948
00:55:32,660 --> 00:55:40,279
tcp extension so what's the

949
00:55:35,299 --> 00:55:42,890
predictability we stay here as the in

950
00:55:40,279 --> 00:55:45,769
the emergent networks we see more and

951
00:55:42,890 --> 00:55:49,249
more predictable nodes are involved

952
00:55:45,769 --> 00:55:52,578
so by predicable we mean they are

953
00:55:49,249 --> 00:55:56,749
different from the previous nodes as

954
00:55:52,579 --> 00:56:00,289
they have inherent and thus predictable

955
00:55:56,749 --> 00:56:03,649
location information some of which are

956
00:56:00,289 --> 00:56:06,199
at the fixed locations some specific

957
00:56:03,650 --> 00:56:09,019
locations like the ground stations and

958
00:56:06,199 --> 00:56:12,619
others are keep moving they are

959
00:56:09,019 --> 00:56:16,939
continually moving at the expected

960
00:56:12,619 --> 00:56:20,150
expected speed on some predefined orbits

961
00:56:16,940 --> 00:56:24,619
or verifying the routings on earth on

962
00:56:20,150 --> 00:56:27,920
the ocean or in the space so like the

963
00:56:24,619 --> 00:56:30,739
low low Earth orbit satellites the

964
00:56:27,920 --> 00:56:33,799
geostationary satellites and the air

965
00:56:30,739 --> 00:56:36,769
aviation crafts and the ships and so on

966
00:56:33,799 --> 00:56:38,769
they have predefined routings and we can

967
00:56:36,769 --> 00:56:42,109
predict is there

968
00:56:38,769 --> 00:56:45,109
locations and the furthermore the

969
00:56:42,109 --> 00:56:48,710
because the relative position between

970
00:56:45,109 --> 00:56:51,890
Zim can be predicted the state of the

971
00:56:48,710 --> 00:56:55,460
let work Nick's can also be predicted

972
00:56:51,890 --> 00:56:58,730
so in to be specific the predictable

973
00:56:55,460 --> 00:57:03,079
information are include but not limited

974
00:56:58,730 --> 00:57:08,230
to disease for like a some link handover

975
00:57:03,079 --> 00:57:11,650
like if you have an air aircraft that's

976
00:57:08,230 --> 00:57:15,529
connection to the internet with the air

977
00:57:11,650 --> 00:57:19,609
with the air to ground state a port back

978
00:57:15,529 --> 00:57:21,799
that's the connecting to the stations

979
00:57:19,609 --> 00:57:25,400
the base the base stations on the ground

980
00:57:21,799 --> 00:57:28,609
and the aircraft is kept moving it will

981
00:57:25,400 --> 00:57:31,849
hand the link will hand over so we can

982
00:57:28,609 --> 00:57:35,089
predict as a time the handover happens

983
00:57:31,849 --> 00:57:37,970
the link bandwidth and delay before and

984
00:57:35,089 --> 00:57:40,578
after the handover happens and for some

985
00:57:37,970 --> 00:57:43,549
on the off switch and that is some if

986
00:57:40,579 --> 00:57:45,819
some link is will continually disconnect

987
00:57:43,549 --> 00:57:50,450
and the reflex disconnect and reconnect

988
00:57:45,819 --> 00:57:51,920
we can predict the time the

989
00:57:50,450 --> 00:57:55,759
disconnection and the reconnection

990
00:57:51,920 --> 00:57:59,599
happens and the link bandwidth the RTT

991
00:57:55,759 --> 00:58:02,660
when the reconnection happens so how can

992
00:57:59,599 --> 00:58:04,700
we utilize them here is an example to

993
00:58:02,660 --> 00:58:07,819
show a scheduler using prediction

994
00:58:04,700 --> 00:58:11,328
information as we can say in this

995
00:58:07,819 --> 00:58:15,339
scenario and aviation crafts connection

996
00:58:11,329 --> 00:58:17,619
to the internet with MPT CP and Xia

997
00:58:15,339 --> 00:58:20,900
simultaneously using air-to-ground

998
00:58:17,619 --> 00:58:23,690
broadband and satellite communications

999
00:58:20,900 --> 00:58:26,690
and what's more because of the

1000
00:58:23,690 --> 00:58:30,319
complicated topography like some

1001
00:58:26,690 --> 00:58:34,099
mountains or rivers the base stations on

1002
00:58:30,319 --> 00:58:36,440
the ground maybe they don't appear at

1003
00:58:34,099 --> 00:58:40,009
anywhere on the ground so it's leads

1004
00:58:36,440 --> 00:58:43,420
choose a this community of ATG broadband

1005
00:58:40,009 --> 00:58:46,700
that means the ATG broadband link may be

1006
00:58:43,420 --> 00:58:49,509
intermittent intermittent and therefore

1007
00:58:46,700 --> 00:58:51,810
defaces equality of the hoe MP TCP

1008
00:58:49,509 --> 00:58:55,320
performance so

1009
00:58:51,810 --> 00:58:58,700
we want to introduce the protection

1010
00:58:55,320 --> 00:59:02,910
informations and we have a modified

1011
00:58:58,700 --> 00:59:06,290
vision for a version of the MPCA we call

1012
00:59:02,910 --> 00:59:11,069
em it is a PP the default scheduling

1013
00:59:06,290 --> 00:59:14,670
principle of MPT CP is minimum our TT

1014
00:59:11,070 --> 00:59:17,340
principle and we introduce these these

1015
00:59:14,670 --> 00:59:19,530
two prediction information that is the

1016
00:59:17,340 --> 00:59:21,600
time the next to disconnection happens

1017
00:59:19,530 --> 00:59:24,270
and the time the next reconnection

1018
00:59:21,600 --> 00:59:27,589
happens and they are denoted as time

1019
00:59:24,270 --> 00:59:29,910
down and time up so it's very simple

1020
00:59:27,590 --> 00:59:33,900
body modification

1021
00:59:29,910 --> 00:59:36,810
the original RTD was calculated by the

1022
00:59:33,900 --> 00:59:38,880
default method is called the RTC

1023
00:59:36,810 --> 00:59:43,230
original of course we reserved it and

1024
00:59:38,880 --> 00:59:46,200
when the ATG link is connected the rttp

1025
00:59:43,230 --> 00:59:49,380
equals to RTD original however when the

1026
00:59:46,200 --> 00:59:53,220
link is disconnected it's calculated as

1027
00:59:49,380 --> 00:59:59,910
our TTP equals RT t original plus RT T

1028
00:59:53,220 --> 01:00:03,870
time up and - time now and actually the

1029
00:59:59,910 --> 01:00:07,890
rttp will - notice the extra time that

1030
01:00:03,870 --> 01:00:11,069
you use if you send a package now the

1031
01:00:07,890 --> 01:00:14,790
packages the RTT of this of packet so

1032
01:00:11,070 --> 01:00:19,500
the MBTA PP schedules the packets in the

1033
01:00:14,790 --> 01:00:22,860
minimum Artie T P principle so please

1034
01:00:19,500 --> 01:00:25,130
pay attention here is how we the impulse

1035
01:00:22,860 --> 01:00:29,730
mint we can get through the modification

1036
01:00:25,130 --> 01:00:32,190
the original MBTA P takes time to find a

1037
01:00:29,730 --> 01:00:35,850
link disconnected or reconnected and

1038
01:00:32,190 --> 01:00:37,800
then it will accordingly schedule datas

1039
01:00:35,850 --> 01:00:41,069
and packets to two different paths and

1040
01:00:37,800 --> 01:00:45,180
with the protect prediction information

1041
01:00:41,070 --> 01:00:48,150
introduced when a link is going to

1042
01:00:45,180 --> 01:00:50,940
disconnect the MPGs a PP could reduce

1043
01:00:48,150 --> 01:00:54,990
the packets to be allocated to that path

1044
01:00:50,940 --> 01:00:57,930
and also it can take other strategies

1045
01:00:54,990 --> 01:01:00,240
like a canceling the timers for the

1046
01:00:57,930 --> 01:01:02,299
package sent on this path because the

1047
01:01:00,240 --> 01:01:05,640
retransmission will be meaningless and

1048
01:01:02,300 --> 01:01:10,190
when the link is going to reconnect

1049
01:01:05,640 --> 01:01:12,900
MPTV we can pre can allocate some

1050
01:01:10,190 --> 01:01:18,750
packets to it at the time

1051
01:01:12,900 --> 01:01:22,309
once it gets reconnected so for the next

1052
01:01:18,750 --> 01:01:26,390
steps if you you may notice that in the

1053
01:01:22,309 --> 01:01:29,789
example we mentioned some sometimes

1054
01:01:26,390 --> 01:01:33,240
actually we may need to in keeps the

1055
01:01:29,789 --> 01:01:36,660
temporarily disconnected sub flow valid

1056
01:01:33,240 --> 01:01:39,240
when it's disconnected for for us quite

1057
01:01:36,660 --> 01:01:41,430
a period of time and it might be

1058
01:01:39,240 --> 01:01:45,689
necessary to do some more measurements

1059
01:01:41,430 --> 01:01:50,578
like you set it to a backup mode or to

1060
01:01:45,690 --> 01:01:54,450
inform the other part the other and the

1061
01:01:50,579 --> 01:01:56,849
state that that is to inform the other

1062
01:01:54,450 --> 01:01:58,859
ends that it will get connected what's

1063
01:01:56,849 --> 01:02:03,539
more some extension to TCP you may be

1064
01:01:58,859 --> 01:02:05,279
also be be needed and we are thinking

1065
01:02:03,539 --> 01:02:09,240
about this working on this if you have

1066
01:02:05,279 --> 01:02:12,210
any suggestions please tell us and so

1067
01:02:09,240 --> 01:02:14,250
what's more we are here to encourage the

1068
01:02:12,210 --> 01:02:17,490
community the whole community to find

1069
01:02:14,250 --> 01:02:19,380
more ways to use these prediction

1070
01:02:17,490 --> 01:02:23,459
informations for the emergent

1071
01:02:19,380 --> 01:02:25,980
predictable network nodes like if you

1072
01:02:23,460 --> 01:02:28,410
find some new modifications that you can

1073
01:02:25,980 --> 01:02:31,859
make with prediction information or you

1074
01:02:28,410 --> 01:02:34,740
think we should build a framework to a

1075
01:02:31,859 --> 01:02:36,720
to a battalion and to use these

1076
01:02:34,740 --> 01:02:41,089
prediction information so please tell us

1077
01:02:36,720 --> 01:02:41,089
if you have any suggestions or questions

1078
01:02:50,680 --> 01:02:56,379
hi my name is Spencer Dawkins and

1079
01:02:58,850 --> 01:03:10,190
but please excuse me if I get anything

1080
01:03:00,920 --> 01:03:14,230
wrong also welcome welcome so I I really

1081
01:03:10,190 --> 01:03:14,230
appreciate you bringing this work here

1082
01:03:15,010 --> 01:03:22,810
the ITF has had efforts in the past to

1083
01:03:19,760 --> 01:03:27,970
try to say if I know something about

1084
01:03:22,810 --> 01:03:32,360
changes to link state for some reason

1085
01:03:27,970 --> 01:03:35,029
and a number of years ago this was I

1086
01:03:32,360 --> 01:03:38,180
know I noticed that I've lost my cell

1087
01:03:35,030 --> 01:03:40,790
cellular signal on my cell phone you

1088
01:03:38,180 --> 01:03:44,149
know I know that so I could tell the TCP

1089
01:03:40,790 --> 01:03:48,170
on my cell phone and it could use that

1090
01:03:44,150 --> 01:03:52,040
information in some way that hasn't

1091
01:03:48,170 --> 01:03:56,420
worked in the past but you're not

1092
01:03:52,040 --> 01:03:58,670
talking about the same kind of TCP that

1093
01:03:56,420 --> 01:04:00,800
we were talking about in the past you

1094
01:03:58,670 --> 01:04:03,200
know you're not talking about one path

1095
01:04:00,800 --> 01:04:06,830
which is what a lot of the work that I

1096
01:04:03,200 --> 01:04:10,279
was involved with was doing so this

1097
01:04:06,830 --> 01:04:13,819
might be different enough to where this

1098
01:04:10,280 --> 01:04:20,380
could succeed where previous attempts in

1099
01:04:13,820 --> 01:04:20,380
this space have not succeeded I am in

1100
01:04:20,530 --> 01:04:29,660
path aware networking research group I

1101
01:04:23,690 --> 01:04:33,490
am draft author for a draft the the file

1102
01:04:29,660 --> 01:04:36,920
name for the draft is what not to do and

1103
01:04:33,490 --> 01:04:39,950
it describes one of my own failures in

1104
01:04:36,920 --> 01:04:42,470
this draft so I would love to talk to

1105
01:04:39,950 --> 01:04:44,839
you about that and about how this might

1106
01:04:42,470 --> 01:04:48,319
be different but I really appreciate you

1107
01:04:44,840 --> 01:04:50,840
bringing this work here because if we if

1108
01:04:48,320 --> 01:04:54,650
we can do if we could do something with

1109
01:04:50,840 --> 01:04:59,420
multipath TCP that is a dream that I

1110
01:04:54,650 --> 01:05:01,720
have had since 1998 thank you what's the

1111
01:04:59,420 --> 01:05:01,720
sex

1112
01:05:07,330 --> 01:05:19,220
any more comments okay move on to the

1113
01:05:15,080 --> 01:05:22,279
next one okay okay thank you and to to

1114
01:05:19,220 --> 01:05:27,319
compare with TCP we believe that MPGs of

1115
01:05:22,280 --> 01:05:31,390
you could simultaneously use different

1116
01:05:27,320 --> 01:05:35,180
paths especially the paths of different

1117
01:05:31,390 --> 01:05:51,740
characteristics and the next one we will

1118
01:05:35,180 --> 01:05:57,440
introduce is trust by moving it's moving

1119
01:05:51,740 --> 01:06:00,979
it's coming soon so so Trust is as

1120
01:05:57,440 --> 01:06:04,130
crucial in our own human modern society

1121
01:06:00,980 --> 01:06:07,490
and we believe is very important for the

1122
01:06:04,130 --> 01:06:11,150
Internet and the researchers have been

1123
01:06:07,490 --> 01:06:26,299
working for many years towards a trusted

1124
01:06:11,150 --> 01:06:29,540
net internet so today trusty Internet is

1125
01:06:26,300 --> 01:06:32,120
has been supported by more and more

1126
01:06:29,540 --> 01:06:37,310
infrastructure and is being supported by

1127
01:06:32,120 --> 01:06:41,930
more and more so the accountability is a

1128
01:06:37,310 --> 01:06:44,570
very important part of trust for for

1129
01:06:41,930 --> 01:06:48,200
example the source of just validation

1130
01:06:44,570 --> 01:06:52,820
that is SAV mechanisms are developed to

1131
01:06:48,200 --> 01:06:55,129
prevent nodes to spoof other nodes IP

1132
01:06:52,820 --> 01:06:59,780
addresses and to do something malicious

1133
01:06:55,130 --> 01:07:03,350
and this us it can all the IP address in

1134
01:06:59,780 --> 01:07:05,240
the net will be accountable and such

1135
01:07:03,350 --> 01:07:09,560
improve the accountability of the

1136
01:07:05,240 --> 01:07:10,399
internet savvy and the sava here they

1137
01:07:09,560 --> 01:07:14,690
have own

1138
01:07:10,400 --> 01:07:18,080
RFC's so Marquez here is being faced

1139
01:07:14,690 --> 01:07:20,210
with some challenges cos 2 pi D forged

1140
01:07:18,080 --> 01:07:23,990
the control pack

1141
01:07:20,210 --> 01:07:28,630
it's sent by some malicious hosts with a

1142
01:07:23,990 --> 01:07:33,439
forge an IP address so we are here to

1143
01:07:28,630 --> 01:07:36,800
expose to extend MP TCP to support to

1144
01:07:33,440 --> 01:07:39,980
work with SAV and so that it can to

1145
01:07:36,800 --> 01:07:42,950
improve the accountability of the whole

1146
01:07:39,980 --> 01:07:46,010
MPGs a big connection and also this

1147
01:07:42,950 --> 01:07:51,200
security can be improved because the app

1148
01:07:46,010 --> 01:07:54,680
here justice can be accountable so here

1149
01:07:51,200 --> 01:07:57,859
is what we have extended so here we

1150
01:07:54,680 --> 01:08:02,270
define an IP address is trusted if it's

1151
01:07:57,859 --> 01:08:05,150
protected by Savio Sabha and if one on

1152
01:08:02,270 --> 01:08:07,580
one sub for the source IP address and

1153
01:08:05,150 --> 01:08:10,520
the destination IP address are both

1154
01:08:07,580 --> 01:08:14,630
trusted we call sub flow a trusted one

1155
01:08:10,520 --> 01:08:17,988
and then for the control packets and of

1156
01:08:14,630 --> 01:08:20,350
MVT they be they will be prone will they

1157
01:08:17,988 --> 01:08:24,108
will be preferentially sent Susie

1158
01:08:20,350 --> 01:08:27,259
trusted sub flows that means MPT to be

1159
01:08:24,109 --> 01:08:30,440
my time simultaneously utilize different

1160
01:08:27,259 --> 01:08:34,009
paths some of which may be protected

1161
01:08:30,439 --> 01:08:37,219
that is trusted and some may be not so

1162
01:08:34,009 --> 01:08:44,689
for the control packets that may be used

1163
01:08:37,219 --> 01:08:48,670
to to carry out some like security

1164
01:08:44,689 --> 01:08:53,689
issues it can be protected if we send

1165
01:08:48,670 --> 01:08:57,589
all the control packets the venerable

1166
01:08:53,689 --> 01:09:01,099
control packets so the the trusted pass

1167
01:08:57,589 --> 01:09:04,670
and if there is no trusted pass mbta we

1168
01:09:01,100 --> 01:09:08,420
will just performs as usual so this is

1169
01:09:04,670 --> 01:09:12,399
what and for to be specific the details

1170
01:09:08,420 --> 01:09:16,040
we have the first we have extended the

1171
01:09:12,399 --> 01:09:18,649
original eight at address option to

1172
01:09:16,040 --> 01:09:23,299
carry a more flag that is a trusted

1173
01:09:18,649 --> 01:09:27,528
address flag passively when you add one

1174
01:09:23,299 --> 01:09:32,000
address so and secondly to make sure

1175
01:09:27,529 --> 01:09:34,069
that both parties for n communication

1176
01:09:32,000 --> 01:09:37,000
paths know that the

1177
01:09:34,069 --> 01:09:39,829
sap flow is trusted or not we have

1178
01:09:37,000 --> 01:09:43,179
proposed a new option that is a just

1179
01:09:39,828 --> 01:09:48,019
trust to notify they trusted just

1180
01:09:43,179 --> 01:09:51,139
proactively and third we will record the

1181
01:09:48,020 --> 01:09:53,389
this in trusted informations in one

1182
01:09:51,139 --> 01:09:56,869
table called trusted past spending

1183
01:09:53,389 --> 01:09:59,630
tables to maintain the adjusted sub flow

1184
01:09:56,869 --> 01:10:02,480
state so that when we want to send a

1185
01:09:59,630 --> 01:10:07,340
control package we can send it from the

1186
01:10:02,480 --> 01:10:10,269
trusted one so here is the trusted

1187
01:10:07,340 --> 01:10:17,000
adjust notification we have extended the

1188
01:10:10,270 --> 01:10:22,130
address packet so we have a tea flag if

1189
01:10:17,000 --> 01:10:26,090
you notice the flag tea is to indicate

1190
01:10:22,130 --> 01:10:30,770
the whether the adjust is trusted and

1191
01:10:26,090 --> 01:10:34,579
the flag yi as original is to guarantee

1192
01:10:30,770 --> 01:10:38,989
the reliability and what's more the

1193
01:10:34,579 --> 01:10:42,170
truncated H Mac is Chung is a Mac H Mac

1194
01:10:38,989 --> 01:10:44,750
of address and the trustor flag which

1195
01:10:42,170 --> 01:10:50,719
can protect that as a Chester flag is is

1196
01:10:44,750 --> 01:10:54,980
true and this is how it was interacted

1197
01:10:50,719 --> 01:10:57,909
and the second this is a chested

1198
01:10:54,980 --> 01:11:02,750
connection notification so if one

1199
01:10:57,909 --> 01:11:05,449
connection has been has been established

1200
01:11:02,750 --> 01:11:09,829
and you don't know whether if it is

1201
01:11:05,449 --> 01:11:12,710
trusted you can send your own address FZ

1202
01:11:09,829 --> 01:11:15,650
just one and descended to choose the

1203
01:11:12,710 --> 01:11:19,040
other if the other is also trusted if it

1204
01:11:15,650 --> 01:11:22,219
ever sent send it back and to change the

1205
01:11:19,040 --> 01:11:26,269
flag EE into one so that you will know

1206
01:11:22,219 --> 01:11:29,659
the both ends of the pair of this of the

1207
01:11:26,270 --> 01:11:32,989
sub flow is trusted and you can add one

1208
01:11:29,659 --> 01:11:36,049
entry into the trusted pass bending

1209
01:11:32,989 --> 01:11:39,860
table so in this table or every sub flow

1210
01:11:36,050 --> 01:11:43,010
is is consists of a source address IP

1211
01:11:39,860 --> 01:11:45,380
and a destination address if the

1212
01:11:43,010 --> 01:11:47,960
sausages and the destination IP address

1213
01:11:45,380 --> 01:11:51,980
are also trusted the

1214
01:11:47,960 --> 01:11:55,340
sub flow is called the trusted and if so

1215
01:11:51,980 --> 01:11:59,750
when you want to send some trusted or

1216
01:11:55,340 --> 01:12:02,270
the control packets you can check this

1217
01:11:59,750 --> 01:12:06,530
table and the send it through a trusted

1218
01:12:02,270 --> 01:12:08,180
flow okay thanks that's all and we

1219
01:12:06,530 --> 01:12:10,809
really need your comments and questions

1220
01:12:08,180 --> 01:12:21,560
thank you

1221
01:12:10,810 --> 01:12:24,920
questions comments so okay see this is

1222
01:12:21,560 --> 01:12:27,739
interesting but so I would like to know

1223
01:12:24,920 --> 01:12:29,450
about the next step of this man so are

1224
01:12:27,739 --> 01:12:31,730
you going to implement this man when

1225
01:12:29,450 --> 01:12:34,190
making prototype or something what you

1226
01:12:31,730 --> 01:12:37,580
are thinking okay actually for the for

1227
01:12:34,190 --> 01:12:40,370
the trusted one we do have some a priori

1228
01:12:37,580 --> 01:12:43,489
intention and we have a paper that is

1229
01:12:40,370 --> 01:12:45,980
not paying and being published and for

1230
01:12:43,489 --> 01:12:50,209
backups this is a framework that we have

1231
01:12:45,980 --> 01:12:54,379
implemented implemented Church we call

1232
01:12:50,210 --> 01:12:57,920
it a trusted MPT CP and we have three

1233
01:12:54,380 --> 01:13:00,380
new objects like trust either just

1234
01:12:57,920 --> 01:13:04,489
notify to mark and the chassis the pass

1235
01:13:00,380 --> 01:13:08,989
choose and add into the original MP TCP

1236
01:13:04,489 --> 01:13:14,480
architecture and we have also evaluated

1237
01:13:08,989 --> 01:13:17,179
it and it works and it it will you know

1238
01:13:14,480 --> 01:13:23,570
the CIM civil uses of it with slower

1239
01:13:17,180 --> 01:13:25,850
than the regular a regular MP TCP so mmm

1240
01:13:23,570 --> 01:13:29,960
do you have any suggestions for next

1241
01:13:25,850 --> 01:13:33,080
step or if you can introduce some

1242
01:13:29,960 --> 01:13:35,330
experiment and then come back with this

1243
01:13:33,080 --> 01:13:36,980
meeting that will be I think it's

1244
01:13:35,330 --> 01:13:41,090
interesting and then he can stimulate

1245
01:13:36,980 --> 01:13:43,129
people to work on this thing and there

1246
01:13:41,090 --> 01:13:46,940
are some maze them there's some comments

1247
01:13:43,130 --> 01:13:49,910
I miss to card wondered whether you're

1248
01:13:46,940 --> 01:13:52,489
interested in exploring stronger notions

1249
01:13:49,910 --> 01:13:56,989
of trust such as perhaps you might have

1250
01:13:52,489 --> 01:14:00,019
an IPSec ESP tunnel between a pair of

1251
01:13:56,989 --> 01:14:01,150
those IP addresses which would obviously

1252
01:14:00,020 --> 01:14:02,650
give a you

1253
01:14:01,150 --> 01:14:05,320
a higher level of trust and really a

1254
01:14:02,650 --> 01:14:14,799
verified address does that help in any

1255
01:14:05,320 --> 01:14:17,159
way do you think and and so can your

1256
01:14:14,800 --> 01:14:20,890
video question

1257
01:14:17,159 --> 01:14:24,519
sorry wonder if you believe there is any

1258
01:14:20,890 --> 01:14:27,370
potential benefit to exploring stronger

1259
01:14:24,520 --> 01:14:29,980
notions of trust than merely a verified

1260
01:14:27,370 --> 01:14:32,260
address such as for instance an ipsec

1261
01:14:29,980 --> 01:14:34,019
encapsulating security payload tunnel

1262
01:14:32,260 --> 01:14:36,730
that might have been built at layer 3

1263
01:14:34,020 --> 01:14:38,590
between a pair of those source and

1264
01:14:36,730 --> 01:14:40,209
destination IP addresses

1265
01:14:38,590 --> 01:14:42,489
obviously there's additional overhead

1266
01:14:40,210 --> 01:14:46,690
associated with that but there's also a

1267
01:14:42,489 --> 01:14:50,129
greater degree of trust so actually with

1268
01:14:46,690 --> 01:14:53,379
the development of security or network

1269
01:14:50,130 --> 01:14:56,409
the internet serves for the applications

1270
01:14:53,380 --> 01:15:00,159
so as last two if the application

1271
01:14:56,409 --> 01:15:03,190
doesn't know whether they the Trust's as

1272
01:15:00,159 --> 01:15:07,409
is a pass or the connection is trusted

1273
01:15:03,190 --> 01:15:12,719
it cannot do some selections or

1274
01:15:07,409 --> 01:15:16,690
according to it so if we can do more

1275
01:15:12,719 --> 01:15:19,989
know implement more stronger security on

1276
01:15:16,690 --> 01:15:23,110
the transportation layer we can tell the

1277
01:15:19,989 --> 01:15:25,089
application layer whether it's secure or

1278
01:15:23,110 --> 01:15:31,870
not so the application can also utilize

1279
01:15:25,090 --> 01:15:39,570
this one and is that clear and maybe

1280
01:15:31,870 --> 01:15:42,250
another - as javis bribe from Hong Kong

1281
01:15:39,570 --> 01:15:44,949
do we destroy the TCP ports as well

1282
01:15:42,250 --> 01:15:47,350
because CG not might actually change the

1283
01:15:44,949 --> 01:15:49,719
source and destination IP address or is

1284
01:15:47,350 --> 01:15:55,270
this NAT does this work in a CG not

1285
01:15:49,719 --> 01:15:58,060
environment the question is is like the

1286
01:15:55,270 --> 01:16:00,159
literal question do we need to store TCP

1287
01:15:58,060 --> 01:16:04,000
port also since see Gina may change

1288
01:16:00,159 --> 01:16:05,500
source best IP address so the

1289
01:16:04,000 --> 01:16:08,110
interpreter I'm interpreting that is

1290
01:16:05,500 --> 01:16:11,139
does this work in general in a CG NAT

1291
01:16:08,110 --> 01:16:13,120
environment see Gina carrier-grade NAT

1292
01:16:11,139 --> 01:16:14,980
so you basically have like large-scale

1293
01:16:13,120 --> 01:16:17,680
changing of the source destiny

1294
01:16:14,980 --> 01:16:19,000
ports and or the source port and address

1295
01:16:17,680 --> 01:16:27,730
and destination port Madras in the

1296
01:16:19,000 --> 01:16:29,310
backside and if you in maybe not is it

1297
01:16:27,730 --> 01:16:38,219
yeah

1298
01:16:29,310 --> 01:16:40,450
you okay oh holy from to ha that

1299
01:16:38,220 --> 01:16:45,130
condition no information for our

1300
01:16:40,450 --> 01:16:45,970
solutions yeah Korean language yeah what

1301
01:16:45,130 --> 01:16:50,500
he care about that please

1302
01:16:45,970 --> 01:16:53,650
I'll speak ok ok ok thank you that

1303
01:16:50,500 --> 01:16:57,489
that's a crude here from application

1304
01:16:53,650 --> 01:17:00,820
layers we need some trans information

1305
01:16:57,489 --> 01:17:04,059
from IP address if we have a true IP

1306
01:17:00,820 --> 01:17:07,450
there is not forc IP like some DDoS

1307
01:17:04,060 --> 01:17:10,150
services can be avoid from CDN services

1308
01:17:07,450 --> 01:17:13,750
so this is why application need much

1309
01:17:10,150 --> 01:17:16,599
informations not only by the IPSec and

1310
01:17:13,750 --> 01:17:18,730
by other support hidden from network

1311
01:17:16,600 --> 01:17:21,850
layer so this is why we have savvy

1312
01:17:18,730 --> 01:17:24,940
infrastructures in the fact for China

1313
01:17:21,850 --> 01:17:29,080
there we have sir net and sir net who we

1314
01:17:24,940 --> 01:17:32,019
have established to establish some savvy

1315
01:17:29,080 --> 01:17:34,630
structures to support it so we have that

1316
01:17:32,020 --> 01:17:38,380
if we know this from application layers

1317
01:17:34,630 --> 01:17:40,540
know this IP cannot be fought so we can

1318
01:17:38,380 --> 01:17:43,420
do many research and support it on it

1319
01:17:40,540 --> 01:17:46,420
this is some remedy information I see

1320
01:17:43,420 --> 01:17:48,970
but does this framework cannot be used

1321
01:17:46,420 --> 01:17:55,890
with all savvy is there a simple way to

1322
01:17:48,970 --> 01:17:59,080
trust the IP address just like IPSec all

1323
01:17:55,890 --> 01:18:02,140
right now it's presumption of the

1324
01:17:59,080 --> 01:18:04,809
existence of savvy that's the this

1325
01:18:02,140 --> 01:18:07,239
framework so you always presume savvy

1326
01:18:04,810 --> 01:18:09,610
framework no I said if anything

1327
01:18:07,239 --> 01:18:12,870
framework can tell us the information we

1328
01:18:09,610 --> 01:18:12,870
can utilize it ok

1329
01:18:16,480 --> 01:18:24,099
any more question okay

1330
01:18:21,850 --> 01:18:27,970
thanks so much okay thank you thank you

1331
01:18:24,100 --> 01:18:30,310
so it's ten minutes Ari but it's okay

1332
01:18:27,970 --> 01:18:33,910
and then thank you so much for many

1333
01:18:30,310 --> 01:18:37,240
interesting presentation and I cannot

1334
01:18:33,910 --> 01:18:42,450
say rich needs on Cuba right now but uh

1335
01:18:37,240 --> 01:18:42,450
let's enjoy so sorry Ben thanks so much

1336
01:18:59,620 --> 01:19:05,280
anybody has brew seed please bring it to

1337
01:19:03,100 --> 01:19:05,280
me

1338
01:19:39,340 --> 01:19:42,459
[Music]

