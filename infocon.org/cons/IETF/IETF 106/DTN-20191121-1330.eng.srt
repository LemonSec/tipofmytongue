1
00:00:29,789 --> 00:00:35,080
okay so I think we probably ought to

2
00:00:34,150 --> 00:00:38,739
make a start

3
00:00:35,080 --> 00:00:40,420
given the clock is now ticking good

4
00:00:38,739 --> 00:00:44,730
afternoon everybody welcome to the VIP

5
00:00:40,420 --> 00:00:51,640
room so you should all feel dutifully

6
00:00:44,730 --> 00:00:54,129
special trying to make Chrome there we

7
00:00:51,640 --> 00:00:55,600
go so this is the DTN working group if

8
00:00:54,129 --> 00:01:00,610
you are in the wrong room now is your

9
00:00:55,600 --> 00:01:06,310
chance to creep out quietly I'm Rick

10
00:01:00,610 --> 00:01:08,080
Taylor first off as this is an IETF

11
00:01:06,310 --> 00:01:10,780
meeting it this meeting is held under

12
00:01:08,080 --> 00:01:13,360
the no well you should have all read I'm

13
00:01:10,780 --> 00:01:16,270
no 12 before if you're not familiar I

14
00:01:13,360 --> 00:01:19,869
recommend you have a look on the

15
00:01:16,270 --> 00:01:23,890
internet and read it thoroughly that

16
00:01:19,869 --> 00:01:27,580
much more adieu I'll move on a bit of

17
00:01:23,890 --> 00:01:29,679
admin first off let me try and make this

18
00:01:27,580 --> 00:01:32,469
do something sensible there we go so we

19
00:01:29,679 --> 00:01:35,170
need a note-taker would anyone like to

20
00:01:32,469 --> 00:01:40,000
volunteer to make some notes there is an

21
00:01:35,170 --> 00:01:41,979
etherpad URL so you can dynamically take

22
00:01:40,000 --> 00:01:44,079
notes and other people could take notes

23
00:01:41,979 --> 00:01:46,450
I know edge normally takes some notes

24
00:01:44,079 --> 00:01:48,158
but he is speaking so if somebody else

25
00:01:46,450 --> 00:01:50,409
can jump onto etherpad while EDD is

26
00:01:48,159 --> 00:01:51,640
speaking and try and capture any of the

27
00:01:50,409 --> 00:01:52,869
comments that are made at the mic or

28
00:01:51,640 --> 00:01:56,289
anything like that that would be greatly

29
00:01:52,869 --> 00:02:00,340
appreciated also can somebody please

30
00:01:56,289 --> 00:02:02,920
monitor jabber for us we need to jabber

31
00:02:00,340 --> 00:02:04,689
scribe although we have meet echo a meet

32
00:02:02,920 --> 00:02:06,549
echo is very good it would be great if

33
00:02:04,689 --> 00:02:10,119
somebody is watching the jabber Channel

34
00:02:06,549 --> 00:02:13,330
any volunteers please thank you very

35
00:02:10,119 --> 00:02:15,310
much and the other little bits of admin

36
00:02:13,330 --> 00:02:17,020
are obviously please state your native

37
00:02:15,310 --> 00:02:20,050
name at the microphone because we have

38
00:02:17,020 --> 00:02:23,680
remote attendees and presenters there's

39
00:02:20,050 --> 00:02:26,110
a pink cross up here so you are stood in

40
00:02:23,680 --> 00:02:28,690
the right place for the audiovisual

41
00:02:26,110 --> 00:02:31,180
recording which all eventually ends up

42
00:02:28,690 --> 00:02:32,480
on YouTube and the remote attendees can

43
00:02:31,180 --> 00:02:35,239
also see you

44
00:02:32,480 --> 00:02:37,099
so we have some apologies which is as

45
00:02:35,239 --> 00:02:38,930
you can tell it's just me at the table

46
00:02:37,099 --> 00:02:42,500
here mark launched a senses apologies

47
00:02:38,930 --> 00:02:44,800
and Magnus Westerlund is also remote he

48
00:02:42,500 --> 00:02:47,180
can't make it in person so he's our ad

49
00:02:44,800 --> 00:02:50,110
but I'm sure he can jump in across meat

50
00:02:47,180 --> 00:02:54,140
echo and tell me where I'm going wrong

51
00:02:50,110 --> 00:02:58,940
so first off the agenda we have a

52
00:02:54,140 --> 00:03:02,000
reasonably light agenda for this working

53
00:02:58,940 --> 00:03:05,959
group meeting I will briefly run through

54
00:03:02,000 --> 00:03:09,230
some of the document status we as some

55
00:03:05,959 --> 00:03:11,540
of you know oh the other apology is I

56
00:03:09,230 --> 00:03:15,920
have very nasty cough so occasionally I

57
00:03:11,540 --> 00:03:20,120
may splatter we have three key documents

58
00:03:15,920 --> 00:03:21,859
that are all in the eye let me get this

59
00:03:20,120 --> 00:03:25,069
right they are all currently going

60
00:03:21,860 --> 00:03:28,730
through the area reviews so we have had

61
00:03:25,069 --> 00:03:30,828
some reviews from the Janerio sec area

62
00:03:28,730 --> 00:03:32,268
for the various documents these of

63
00:03:30,829 --> 00:03:35,360
course came back with comments as they

64
00:03:32,269 --> 00:03:37,130
always do and so I will cover some of

65
00:03:35,360 --> 00:03:40,910
the status of some of those documents

66
00:03:37,130 --> 00:03:42,230
and two of the authors of two of those

67
00:03:40,910 --> 00:03:43,609
three documents are here and they're

68
00:03:42,230 --> 00:03:44,720
going to say a few words about the

69
00:03:43,609 --> 00:03:46,370
comments that were raised and how

70
00:03:44,720 --> 00:03:47,660
they're being addressed there may be

71
00:03:46,370 --> 00:03:50,239
some open questions for the working

72
00:03:47,660 --> 00:03:53,000
group which we have plenty of time to

73
00:03:50,239 --> 00:03:56,030
discuss and of course that discussion

74
00:03:53,000 --> 00:03:57,829
would be taken to the list as well I'm I

75
00:03:56,030 --> 00:03:59,440
have the feeling they're not too

76
00:03:57,829 --> 00:04:02,209
contentious but I'll come on to that and

77
00:03:59,440 --> 00:04:03,769
Scott said he wanted to say a few words

78
00:04:02,209 --> 00:04:08,209
about bundling bundle encapsulation if

79
00:04:03,769 --> 00:04:09,799
he had time and some notes I Scott has

80
00:04:08,209 --> 00:04:12,380
no slides if we have time in there's

81
00:04:09,799 --> 00:04:14,810
interest can you do something freeform

82
00:04:12,380 --> 00:04:17,570
that's very kind and then we have an

83
00:04:14,810 --> 00:04:19,849
open mic at the end so prior to this

84
00:04:17,570 --> 00:04:21,620
meeting the chairs put a call-out on the

85
00:04:19,849 --> 00:04:23,180
mailing list to say does anyone have

86
00:04:21,620 --> 00:04:26,440
anything interesting they wanted to

87
00:04:23,180 --> 00:04:29,720
present there was a resounding silence

88
00:04:26,440 --> 00:04:32,840
but that doesn't prevent somebody who

89
00:04:29,720 --> 00:04:34,010
was too shy or it was too early to put

90
00:04:32,840 --> 00:04:35,989
something on the mailing list if they

91
00:04:34,010 --> 00:04:37,580
have something interesting please bring

92
00:04:35,990 --> 00:04:41,180
it to the microphone we have time to

93
00:04:37,580 --> 00:04:42,859
discuss these things so okay does anyone

94
00:04:41,180 --> 00:04:44,479
want to bash this agenda do you want to

95
00:04:42,860 --> 00:04:46,990
add any items and we missed something

96
00:04:44,479 --> 00:04:46,990
important

97
00:04:48,149 --> 00:04:53,679
okay

98
00:04:49,329 --> 00:04:56,259
so going through the document status for

99
00:04:53,679 --> 00:04:57,339
those of you who are not entirely up to

100
00:04:56,259 --> 00:04:58,419
speed with what we're doing in the

101
00:04:57,339 --> 00:05:00,819
working group at the moment there are

102
00:04:58,419 --> 00:05:04,568
three critical documents that are the

103
00:05:00,819 --> 00:05:09,129
foundation of the DTN protocol stack for

104
00:05:04,569 --> 00:05:12,459
the IETF work one of which is the update

105
00:05:09,129 --> 00:05:16,059
to the bundle protocol BP bists so the

106
00:05:12,459 --> 00:05:17,860
status of this is the genic review has

107
00:05:16,059 --> 00:05:19,719
come in there were questions over the

108
00:05:17,860 --> 00:05:21,669
definition of time and we are still

109
00:05:19,719 --> 00:05:23,709
waiting for the ops area review and the

110
00:05:21,669 --> 00:05:24,998
secondary review to come back in I'll

111
00:05:23,709 --> 00:05:33,279
let Scott cover that in a bit more

112
00:05:24,999 --> 00:05:35,860
detail tcp CL version 4 so the the DTM

113
00:05:33,279 --> 00:05:37,389
stack is divided between bundle

114
00:05:35,860 --> 00:05:40,269
processing agents which know how to

115
00:05:37,389 --> 00:05:42,159
shift bundles around and the concept of

116
00:05:40,269 --> 00:05:44,349
a convergence layer underneath which

117
00:05:42,159 --> 00:05:48,629
actually acts as effectively a link

118
00:05:44,349 --> 00:05:53,079
layer to move the bundles between nodes

119
00:05:48,629 --> 00:05:55,719
the first defined protocol for doing

120
00:05:53,079 --> 00:05:58,149
this moving is based on TCP and hence

121
00:05:55,719 --> 00:05:59,739
the TCP convergence layer and this is

122
00:05:58,149 --> 00:06:02,709
the version four so this is updating the

123
00:05:59,739 --> 00:06:04,989
work that was done in the IRT F now

124
00:06:02,709 --> 00:06:07,599
doing it in the IETF so this will be a

125
00:06:04,989 --> 00:06:08,948
standard tracked document and again

126
00:06:07,599 --> 00:06:09,839
we're going through the review phase

127
00:06:08,949 --> 00:06:13,119
with it

128
00:06:09,839 --> 00:06:16,149
ops dir came back and said it's fine

129
00:06:13,119 --> 00:06:18,329
there's some typos can you fix sec dir

130
00:06:16,149 --> 00:06:21,039
came back with a couple of queries about

131
00:06:18,329 --> 00:06:24,009
because we're running over TCP that

132
00:06:21,039 --> 00:06:26,019
means we are using TLS because it makes

133
00:06:24,009 --> 00:06:27,639
good sense and I won't go into all that

134
00:06:26,019 --> 00:06:30,219
detail here there are plenty of people

135
00:06:27,639 --> 00:06:32,919
who can tell you why using TLS is a good

136
00:06:30,219 --> 00:06:35,319
idea that raised questions about

137
00:06:32,919 --> 00:06:38,079
certificate revocation so how is

138
00:06:35,319 --> 00:06:41,199
certificate handling managed for that

139
00:06:38,079 --> 00:06:49,479
TLS connection between peers and also

140
00:06:41,199 --> 00:06:52,269
because because DTN can be a DTN subnet

141
00:06:49,479 --> 00:06:53,800
effectively so a an administrative area

142
00:06:52,269 --> 00:06:56,409
could be running in a controlled

143
00:06:53,800 --> 00:06:58,520
environment such as International Space

144
00:06:56,409 --> 00:07:00,560
Station where

145
00:06:58,520 --> 00:07:01,909
your traffic isn't travelling across the

146
00:07:00,560 --> 00:07:04,220
public internet and you're pretty sure

147
00:07:01,910 --> 00:07:06,320
about which devices are connected to the

148
00:07:04,220 --> 00:07:10,460
network mostly because you put them

149
00:07:06,320 --> 00:07:13,219
there the option to say look I don't

150
00:07:10,460 --> 00:07:18,419
need TLS I am an embedded device without

151
00:07:13,220 --> 00:07:21,130
the power to do TLS can I not please as

152
00:07:18,420 --> 00:07:23,330
[Music]

153
00:07:21,130 --> 00:07:25,190
means there's a flag in the initial

154
00:07:23,330 --> 00:07:27,859
handshake in TCP CL which says look I

155
00:07:25,190 --> 00:07:30,320
can't do it please don't demand that I

156
00:07:27,860 --> 00:07:32,840
can and if you are happy with that we

157
00:07:30,320 --> 00:07:35,510
can proceed so obviously as security a

158
00:07:32,840 --> 00:07:37,460
DS came back and said well that's is

159
00:07:35,510 --> 00:07:39,560
that a downgrade attack how can that be

160
00:07:37,460 --> 00:07:42,700
exploited have you considered this and

161
00:07:39,560 --> 00:07:45,770
Brian C posish the primary author has

162
00:07:42,700 --> 00:07:47,900
answered these two what he believes is

163
00:07:45,770 --> 00:07:49,490
to his satisfaction we're waiting for

164
00:07:47,900 --> 00:07:51,130
comments to come back from the sec a DS

165
00:07:49,490 --> 00:07:53,750
to see if they're happy with that and

166
00:07:51,130 --> 00:07:56,030
brian says he has a new version of the

167
00:07:53,750 --> 00:07:58,550
draft which captures his comments sorts

168
00:07:56,030 --> 00:08:00,109
out the myths and I believe he is

169
00:07:58,550 --> 00:08:02,450
waiting for the general to review to

170
00:08:00,110 --> 00:08:06,410
return before he actually pushes out

171
00:08:02,450 --> 00:08:10,670
another document and the third document

172
00:08:06,410 --> 00:08:12,740
is so we know how to define a bundle and

173
00:08:10,670 --> 00:08:14,780
we have an example of how to move a

174
00:08:12,740 --> 00:08:18,320
bundle the missing pieces how do we

175
00:08:14,780 --> 00:08:20,299
secure this bundle not only for

176
00:08:18,320 --> 00:08:22,760
integrity but also for encryption and

177
00:08:20,300 --> 00:08:30,320
that's covered by the BP SEC document

178
00:08:22,760 --> 00:08:32,960
which again is in the review phase so it

179
00:08:30,320 --> 00:08:35,059
is currently marked as on hold because

180
00:08:32,960 --> 00:08:39,110
it has a normative reference to beat

181
00:08:35,059 --> 00:08:43,479
this BP Biss is waiting because I Anna

182
00:08:39,110 --> 00:08:48,070
raised some questions about the reuse of

183
00:08:43,480 --> 00:08:51,380
registries from the IEEE RTF documents

184
00:08:48,070 --> 00:08:53,000
now being taken on by IETF documents and

185
00:08:51,380 --> 00:08:54,920
I will let Scott try and get into a bit

186
00:08:53,000 --> 00:09:00,860
more detail about this although it's

187
00:08:54,920 --> 00:09:02,420
quite a hazy area otherwise Janet came

188
00:09:00,860 --> 00:09:04,520
back and said there were some typos and

189
00:09:02,420 --> 00:09:06,770
some small knits not a great problem and

190
00:09:04,520 --> 00:09:11,180
we are waiting for the SEC Arya review

191
00:09:06,770 --> 00:09:11,600
so BP SEC is a it's a security document

192
00:09:11,180 --> 00:09:15,079
it

193
00:09:11,600 --> 00:09:17,930
lots of deep security aspects to it and

194
00:09:15,079 --> 00:09:19,699
I I have no evidence of this but I

195
00:09:17,930 --> 00:09:21,680
believe the SEC will take a little bit

196
00:09:19,699 --> 00:09:23,120
of time to make sure it's correct they

197
00:09:21,680 --> 00:09:25,609
have done an early review on it before

198
00:09:23,120 --> 00:09:27,769
so we're hoping there's gonna be no

199
00:09:25,610 --> 00:09:31,269
showstoppers but I think Eddie's gonna

200
00:09:27,769 --> 00:09:31,269
say a few things about that as well I

201
00:09:31,480 --> 00:09:53,180
beg your pardon and that pretty much

202
00:09:37,100 --> 00:09:56,480
covers me so next topic is some of you

203
00:09:53,180 --> 00:10:03,229
are are aware that we held a virtual

204
00:09:56,480 --> 00:10:05,899
interim between Montreal and today 18th

205
00:10:03,230 --> 00:10:07,459
of September to be precise the purpose

206
00:10:05,899 --> 00:10:09,829
of the virtual interim was to make sure

207
00:10:07,459 --> 00:10:13,638
that those 3 key documents that really

208
00:10:09,829 --> 00:10:15,439
are blocking they have to be done by the

209
00:10:13,639 --> 00:10:17,180
working group to give us a foundation on

210
00:10:15,440 --> 00:10:19,550
which to build everything else so it's

211
00:10:17,180 --> 00:10:21,138
critical that these really do get

212
00:10:19,550 --> 00:10:23,859
through onto the standards track as fast

213
00:10:21,139 --> 00:10:26,360
as possible so it was a discussion about

214
00:10:23,860 --> 00:10:27,790
how do we the progress of those

215
00:10:26,360 --> 00:10:30,769
documents and we'll go over that again

216
00:10:27,790 --> 00:10:34,250
there was a big debate for those who

217
00:10:30,769 --> 00:10:36,199
aren't aware BEP abyss is an update of a

218
00:10:34,250 --> 00:10:40,160
document that was originally worked on

219
00:10:36,199 --> 00:10:45,889
in the IRT F not the IETF so there is

220
00:10:40,160 --> 00:10:48,399
some politics and admin around although

221
00:10:45,889 --> 00:10:51,410
this is bundle protocol version 7 and

222
00:10:48,399 --> 00:10:54,079
obviously we would like to say use

223
00:10:51,410 --> 00:10:58,670
version 7 not the previous version 6

224
00:10:54,079 --> 00:11:01,099
because it is better TM version 6 is

225
00:10:58,670 --> 00:11:05,959
owned by a different standards body so

226
00:11:01,100 --> 00:11:07,579
how do we indicate to readers of bundle

227
00:11:05,959 --> 00:11:12,079
protocol version 6 that they should go

228
00:11:07,579 --> 00:11:15,138
and look at version 7 and the conclusion

229
00:11:12,079 --> 00:11:18,800
that's the virtual interim was that we

230
00:11:15,139 --> 00:11:21,350
should work out the chairs should go

231
00:11:18,800 --> 00:11:24,170
away and discuss with the 80s and the

232
00:11:21,350 --> 00:11:25,340
IRT F people involved in order to just

233
00:11:24,170 --> 00:11:27,979
make this happen

234
00:11:25,340 --> 00:11:31,250
so rather than leaving both documents in

235
00:11:27,980 --> 00:11:35,120
existence try and work out the best way

236
00:11:31,250 --> 00:11:38,240
to mark RFC 5050 so bundle protocol

237
00:11:35,120 --> 00:11:39,680
version six as obsolete ie

238
00:11:38,240 --> 00:11:42,560
if you're starting a new implementation

239
00:11:39,680 --> 00:11:45,680
don't use this use the new one that's

240
00:11:42,560 --> 00:11:47,920
coming and the other thing that was

241
00:11:45,680 --> 00:11:50,479
discussed in the virtual interim was

242
00:11:47,920 --> 00:11:52,880
given we've got these three critical

243
00:11:50,480 --> 00:11:54,620
documents almost complete and they're

244
00:11:52,880 --> 00:11:56,510
you know they're going through the iesg

245
00:11:54,620 --> 00:11:59,450
review phase and they're heading for the

246
00:11:56,510 --> 00:12:03,080
RFC editors what do we do next in this

247
00:11:59,450 --> 00:12:06,260
group so I know over the last a couple

248
00:12:03,080 --> 00:12:08,089
of meetings people have have said they

249
00:12:06,260 --> 00:12:11,870
have ideas we still have a couple of

250
00:12:08,089 --> 00:12:13,910
charter items and so as part of that

251
00:12:11,870 --> 00:12:17,120
virtual interim we started to draw up a

252
00:12:13,910 --> 00:12:20,630
list of some stuff people would like to

253
00:12:17,120 --> 00:12:22,420
work on or like to see done and that was

254
00:12:20,630 --> 00:12:24,529
published out on the mailing list and

255
00:12:22,420 --> 00:12:27,829
there was some good feedback and

256
00:12:24,529 --> 00:12:30,890
discussion about it the ad magnus had

257
00:12:27,830 --> 00:12:32,839
some concerns which was that the list

258
00:12:30,890 --> 00:12:34,790
was too ambitious and too big and was

259
00:12:32,839 --> 00:12:36,500
there enough energy in the working group

260
00:12:34,790 --> 00:12:40,939
to get this done in a reasonable amount

261
00:12:36,500 --> 00:12:42,680
of time so that's the list I mean it's

262
00:12:40,940 --> 00:12:44,120
it's quite an ambitious shopping list

263
00:12:42,680 --> 00:12:47,900
and there are some really exciting

264
00:12:44,120 --> 00:12:49,970
topics on there so from my perspective

265
00:12:47,900 --> 00:12:55,579
yes this would be great to work on these

266
00:12:49,970 --> 00:12:57,470
kind of things but it does depend on is

267
00:12:55,580 --> 00:13:05,600
this doable and do we have people

268
00:12:57,470 --> 00:13:07,640
willing to do it so yes so I'll go back

269
00:13:05,600 --> 00:13:09,740
to that slide in a minute and if we have

270
00:13:07,640 --> 00:13:11,360
plenty of time in this session so if we

271
00:13:09,740 --> 00:13:13,430
want to go back to that slide at the end

272
00:13:11,360 --> 00:13:15,709
of the open mic spot and discuss that at

273
00:13:13,430 --> 00:13:20,420
some length I'm absolutely happy to do

274
00:13:15,709 --> 00:13:22,699
that so my only other item was there is

275
00:13:20,420 --> 00:13:25,579
a fourth document that's been lingering

276
00:13:22,700 --> 00:13:28,370
around so for historical reasons it was

277
00:13:25,580 --> 00:13:31,640
taking quite a long time to get the fine

278
00:13:28,370 --> 00:13:33,470
detail of the TCP convergence layer done

279
00:13:31,640 --> 00:13:38,420
to the satisfaction of the working group

280
00:13:33,470 --> 00:13:41,089
and of the ISJ in the Secretariat etc

281
00:13:38,420 --> 00:13:44,120
in the meantime Scott Burley suggested

282
00:13:41,089 --> 00:13:46,370
that he had a very minimal

283
00:13:44,120 --> 00:13:49,670
we were avoiding the word simple but a

284
00:13:46,370 --> 00:13:51,290
really simple TCP implementation that

285
00:13:49,670 --> 00:13:53,089
might be able to avoid some of the

286
00:13:51,290 --> 00:13:56,449
complexities that was holding up the

287
00:13:53,089 --> 00:13:58,790
working on the TCP CL draft and so he

288
00:13:56,450 --> 00:14:00,529
wrote that up and submitted it and it

289
00:13:58,790 --> 00:14:06,319
was accepted as a working group document

290
00:14:00,529 --> 00:14:07,790
however now that TCP CL is has left the

291
00:14:06,320 --> 00:14:10,670
working group and is now in the IHG

292
00:14:07,790 --> 00:14:14,390
pipeline do we still need to bother to

293
00:14:10,670 --> 00:14:18,349
work on a minimal less capable subset of

294
00:14:14,390 --> 00:14:20,140
that functionality or are we just making

295
00:14:18,350 --> 00:14:22,490
work for ourselves

296
00:14:20,140 --> 00:14:29,660
so I'm looking for comments from the

297
00:14:22,490 --> 00:14:33,459
room about this at the mic at the market

298
00:14:29,660 --> 00:14:33,459
now is good Scott at the mic

299
00:14:39,190 --> 00:14:51,829
Schiaparelli I'm the minimum TCP CL is

300
00:14:47,199 --> 00:14:55,609
simple and small enough specification

301
00:14:51,829 --> 00:15:00,739
that it's not a huge workload whether we

302
00:14:55,610 --> 00:15:02,300
do it or not it's more of a and it's

303
00:15:00,740 --> 00:15:07,940
more of an administrative workload then

304
00:15:02,300 --> 00:15:13,099
then then a compositional workload if

305
00:15:07,940 --> 00:15:16,120
the TCP CL specification is is making

306
00:15:13,100 --> 00:15:19,279
sort of progress that it is then I

307
00:15:16,120 --> 00:15:23,930
certainly am NOT a great champion of

308
00:15:19,279 --> 00:15:27,560
pushing head with MTC PCL if it's not

309
00:15:23,930 --> 00:15:29,800
needed so I'm happy to let that fall by

310
00:15:27,560 --> 00:15:29,800
the wayside

311
00:15:34,449 --> 00:15:39,309
obviously I will take that question to

312
00:15:36,249 --> 00:15:40,869
the list but I am interested just quick

313
00:15:39,309 --> 00:15:46,149
show of hands in the room how many

314
00:15:40,869 --> 00:15:49,239
people have read TCP CL or MTC PCL Scott

315
00:15:46,149 --> 00:15:52,919
you wrote it both of them no only one of

316
00:15:49,239 --> 00:15:56,009
them okay so only a couple of people so

317
00:15:52,919 --> 00:16:01,839
this might be a better topic for the

318
00:15:56,009 --> 00:16:03,939
mailing list so as I said it will come

319
00:16:01,839 --> 00:16:06,100
back to propose new charter items at the

320
00:16:03,939 --> 00:16:08,858
end when we've got a bit more of free

321
00:16:06,100 --> 00:16:28,149
time but in the meantime I think we'll

322
00:16:08,859 --> 00:16:30,160
move over to Scott if you're okay noon

323
00:16:28,149 --> 00:16:31,869
everybody Scott brought the Jet

324
00:16:30,160 --> 00:16:41,049
Propulsion Laboratory I'm going to talk

325
00:16:31,869 --> 00:16:45,609
about the the gen arc review of the BP V

326
00:16:41,049 --> 00:16:47,589
17 specification latest draft and I also

327
00:16:45,609 --> 00:16:52,179
am extremely sick so there will be

328
00:16:47,589 --> 00:16:59,379
occasional interruptions here while I go

329
00:16:52,179 --> 00:17:02,559
and lie down draft 17 of the

330
00:16:59,379 --> 00:17:06,130
specification was reviewed by the

331
00:17:02,559 --> 00:17:10,569
generic reviewer Stuart Bryant and on

332
00:17:06,130 --> 00:17:13,829
these slides about 20 some slides list

333
00:17:10,569 --> 00:17:20,459
of points that were raised in his

334
00:17:13,829 --> 00:17:26,879
responses and sort of by to frame this

335
00:17:20,459 --> 00:17:26,880
Magnus westerly the area director also

336
00:17:27,720 --> 00:17:33,600
read this review and he had some

337
00:17:30,399 --> 00:17:36,279
responses of his own and it was his

338
00:17:33,600 --> 00:17:37,658
feeling that there were some of these

339
00:17:36,279 --> 00:17:39,070
points that actually needed to be

340
00:17:37,659 --> 00:17:43,179
discussed in the working group and I

341
00:17:39,070 --> 00:17:47,659
will call those out as I go through the

342
00:17:43,179 --> 00:17:50,480
ones that I think are are none our

343
00:17:47,660 --> 00:17:52,370
really sort of open to some question RC

344
00:17:50,480 --> 00:17:57,320
50/50 this is sort of a big one but I

345
00:17:52,370 --> 00:18:01,159
think that what happened in on the

346
00:17:57,320 --> 00:18:04,580
mailing list since the interim meeting

347
00:18:01,160 --> 00:18:08,030
was it was decided that it was not our

348
00:18:04,580 --> 00:18:12,129
job to obsolete RC 50/50 so this

349
00:18:08,030 --> 00:18:14,810
document that's not obsolete RSC 50/50

350
00:18:12,130 --> 00:18:18,050
Stewart's question was it's not clear

351
00:18:14,810 --> 00:18:21,440
what the statuses RFC is with regard to

352
00:18:18,050 --> 00:18:26,450
our C 50/50 if it modifies the status of

353
00:18:21,440 --> 00:18:30,140
50/50 s and we need to say so and so in

354
00:18:26,450 --> 00:18:33,200
the interest of not pretending that into

355
00:18:30,140 --> 00:18:36,680
50/50 doesn't exist at all I proposed to

356
00:18:33,200 --> 00:18:39,200
add this sentence to the introduction

357
00:18:36,680 --> 00:18:41,950
and the abstract to make that clear just

358
00:18:39,200 --> 00:18:44,540
to say that and this is this is a

359
00:18:41,950 --> 00:18:47,720
distillation of what came out on the

360
00:18:44,540 --> 00:18:51,230
mailing list that I RTF is advised this

361
00:18:47,720 --> 00:18:53,870
document is an update of RSA 50/50

362
00:18:51,230 --> 00:18:57,670
reflects lessons learned does not

363
00:18:53,870 --> 00:19:01,399
obsolete RC 50/50 probably can't so

364
00:18:57,670 --> 00:19:03,650
anyone reading this document should be

365
00:19:01,400 --> 00:19:06,520
aware that we believe it's an

366
00:19:03,650 --> 00:19:10,220
improvement over our FC 5050 but our

367
00:19:06,520 --> 00:19:12,110
5050 50 is not obsoleted if you want to

368
00:19:10,220 --> 00:19:13,970
use it then at least for the time being

369
00:19:12,110 --> 00:19:15,830
of course you're welcome to hold on

370
00:19:13,970 --> 00:19:16,190
Scott Magnus is coming in with a

371
00:19:15,830 --> 00:19:21,129
question

372
00:19:16,190 --> 00:19:25,250
oh yes yes I'll read your comment here

373
00:19:21,130 --> 00:19:27,770
so I think it careful about using

374
00:19:25,250 --> 00:19:31,820
updates in that because I mean updated

375
00:19:27,770 --> 00:19:33,410
in IDF terminology has different

376
00:19:31,820 --> 00:19:34,460
meanings and nothing puts intended here

377
00:19:33,410 --> 00:19:40,400
I mean we're basically talking about

378
00:19:34,460 --> 00:19:43,190
something which is revised or I mean or

379
00:19:40,400 --> 00:19:47,720
it's it's in some sense replacement but

380
00:19:43,190 --> 00:19:48,920
it's I mean it is revision so it's I

381
00:19:47,720 --> 00:19:52,400
think something else needs to be said

382
00:19:48,920 --> 00:19:56,300
there but adaptation maybe I I think I

383
00:19:52,400 --> 00:20:00,770
think I took update from the the text of

384
00:19:56,300 --> 00:20:01,330
the email so this was I think was his

385
00:20:00,770 --> 00:20:02,830
lifted

386
00:20:01,330 --> 00:20:04,510
from what came out on the mailing list

387
00:20:02,830 --> 00:20:06,879
but I'm happy to change it to something

388
00:20:04,510 --> 00:20:09,700
else I think adaptation makes sense also

389
00:20:06,880 --> 00:20:11,260
Magnus so Rick here yeah from my

390
00:20:09,700 --> 00:20:13,930
understanding of the results of the

391
00:20:11,260 --> 00:20:15,970
virtual interim and the and the poll put

392
00:20:13,930 --> 00:20:18,130
onto the mailing lists the consensus of

393
00:20:15,970 --> 00:20:20,260
the working group was to recommend to

394
00:20:18,130 --> 00:20:23,860
the IRT F that they did obsolete it

395
00:20:20,260 --> 00:20:25,900
so although we can't prompt salute it we

396
00:20:23,860 --> 00:20:29,439
would strongly recommend as best we can

397
00:20:25,900 --> 00:20:31,840
that they do so and the IRT F chair at

398
00:20:29,440 --> 00:20:36,400
the time or I remember who he was

399
00:20:31,840 --> 00:20:39,189
he's calling yes instead I'm quite happy

400
00:20:36,400 --> 00:20:41,380
to do that I mean it was a semi informal

401
00:20:39,190 --> 00:20:43,030
statement but he said I see no problem

402
00:20:41,380 --> 00:20:44,830
that if the IETF have gone ahead and

403
00:20:43,030 --> 00:20:48,120
worked on something then we can just

404
00:20:44,830 --> 00:20:50,770
mark on documents as as you recommend

405
00:20:48,120 --> 00:20:53,530
yeah in some sense we actually put in

406
00:20:50,770 --> 00:20:56,889
put in place a process for this case to

407
00:20:53,530 --> 00:21:00,610
actually have ITF obsoletes iot of

408
00:20:56,890 --> 00:21:02,410
documents in some sense so so that

409
00:21:00,610 --> 00:21:06,189
process has inside it has been created

410
00:21:02,410 --> 00:21:08,650
due to the discussion we had before also

411
00:21:06,190 --> 00:21:10,870
saying when we but yeah I mean you know

412
00:21:08,650 --> 00:21:15,370
the working group consensus supposed to

413
00:21:10,870 --> 00:21:17,080
not Erica obsolete it but there it's for

414
00:21:15,370 --> 00:21:19,120
the future we had you see I had to have

415
00:21:17,080 --> 00:21:21,189
this process in place where we can ITF

416
00:21:19,120 --> 00:21:25,300
can actually all sky or Taft directly by

417
00:21:21,190 --> 00:21:27,430
in in base setting obsolete and I RTF

418
00:21:25,300 --> 00:21:31,060
document and then they can agree on it

419
00:21:27,430 --> 00:21:33,160
so I my own feeling is that this

420
00:21:31,060 --> 00:21:36,340
document is the wrong place to explain

421
00:21:33,160 --> 00:21:38,470
all of that that that they're having a

422
00:21:36,340 --> 00:21:40,629
sentence that said that there's a

423
00:21:38,470 --> 00:21:47,680
relationship makes a lot of sense but

424
00:21:40,630 --> 00:21:51,730
explaining the whole procedure and thing

425
00:21:47,680 --> 00:21:55,540
is that we worked on the process back

426
00:21:51,730 --> 00:21:58,360
besides say of doing that jobs basically

427
00:21:55,540 --> 00:22:00,909
in the future if you put an IRT assess

428
00:21:58,360 --> 00:22:04,870
an abstract document assess obsoletes an

429
00:22:00,910 --> 00:22:09,220
IRT F experimental we now know what to

430
00:22:04,870 --> 00:22:12,669
do with it that question will then in

431
00:22:09,220 --> 00:22:14,890
the approval stage go to IR to the IRF

432
00:22:12,670 --> 00:22:17,590
share and if they agree on

433
00:22:14,890 --> 00:22:21,610
obsoleting IRS documents that's what's

434
00:22:17,590 --> 00:22:26,620
gonna happen so Magnus he's like we went

435
00:22:21,610 --> 00:22:28,240
the other so what would happen because

436
00:22:26,620 --> 00:22:30,669
like I understood just right now that

437
00:22:28,240 --> 00:22:32,590
the that you expect that the IRT F is

438
00:22:30,670 --> 00:22:34,960
obsoleting this document right so they

439
00:22:32,590 --> 00:22:36,550
would need to write another RFC that

440
00:22:34,960 --> 00:22:38,140
obsolete this RC which seems like a

441
00:22:36,550 --> 00:22:39,639
little bit an overhead right so if you

442
00:22:38,140 --> 00:22:41,620
want to have this document obsolete it

443
00:22:39,640 --> 00:22:44,920
you should do it now

444
00:22:41,620 --> 00:22:48,070
we were RFC 5050 is is the I RTF

445
00:22:44,920 --> 00:22:49,870
document understood and we the consensus

446
00:22:48,070 --> 00:22:51,429
of this working group which is made up

447
00:22:49,870 --> 00:22:53,709
of people who worked on that document

448
00:22:51,430 --> 00:22:56,890
already in the in what was the IRT F

449
00:22:53,710 --> 00:22:58,450
working group want to believe that we

450
00:22:56,890 --> 00:23:00,820
want to obsolete the previous document

451
00:22:58,450 --> 00:23:02,440
it's just that it's held by the IRT F

452
00:23:00,820 --> 00:23:04,480
and therefore we don't have the power to

453
00:23:02,440 --> 00:23:07,000
do it it's not true we set up this

454
00:23:04,480 --> 00:23:09,610
process I was unaware of that process so

455
00:23:07,000 --> 00:23:11,050
really the chairs and you guys need to

456
00:23:09,610 --> 00:23:14,080
help the chairs just make that happen

457
00:23:11,050 --> 00:23:16,360
and whatever text has to go in whatever

458
00:23:14,080 --> 00:23:19,030
dock in this document we can just get

459
00:23:16,360 --> 00:23:21,010
put in is that correct yeah but

460
00:23:19,030 --> 00:23:23,770
basically what we put in place now is

461
00:23:21,010 --> 00:23:26,200
basically if you yes we add the obsolete

462
00:23:23,770 --> 00:23:32,740
5050 it that's defect it would happen

463
00:23:26,200 --> 00:23:36,370
but I think from a process standpoint

464
00:23:32,740 --> 00:23:38,500
that's what's what's you know however my

465
00:23:36,370 --> 00:23:41,679
interpretation of the consensus call in

466
00:23:38,500 --> 00:23:44,350
some sense was that it wasn't clear

467
00:23:41,680 --> 00:23:47,590
capped at the absolution should occur at

468
00:23:44,350 --> 00:23:49,689
the same at the exact moment this gets

469
00:23:47,590 --> 00:23:51,909
published this New York C which is what

470
00:23:49,690 --> 00:23:56,440
will happen if you put in that absolutes

471
00:23:51,910 --> 00:23:59,850
and the IRT F share with Moses for

472
00:23:56,440 --> 00:24:03,220
asking hours he agrees on doing it

473
00:23:59,850 --> 00:24:04,870
Ratigan that's not my understanding of

474
00:24:03,220 --> 00:24:06,760
the consensus that we saw on the mailing

475
00:24:04,870 --> 00:24:11,889
list so I will probably have to go back

476
00:24:06,760 --> 00:24:17,080
over ice I bred a pretty resounding yes

477
00:24:11,890 --> 00:24:19,510
obsolete 5050 yeah or do whatever

478
00:24:17,080 --> 00:24:21,879
mechanism is required to say stop

479
00:24:19,510 --> 00:24:26,220
working on stop building new systems on

480
00:24:21,880 --> 00:24:26,220
bp6 build it on bp7

481
00:24:26,850 --> 00:24:30,060
I think the process would be you just

482
00:24:28,260 --> 00:24:32,370
degree at the obsolete you say in the

483
00:24:30,060 --> 00:24:34,710
abstract it does obsolete nothing else

484
00:24:32,370 --> 00:24:36,600
needs in the text and then when we

485
00:24:34,710 --> 00:24:39,120
process a document we will actually ask

486
00:24:36,600 --> 00:24:41,189
the I ITF chair to confirm that this

487
00:24:39,120 --> 00:24:44,189
obsolete is okay but that happens in

488
00:24:41,190 --> 00:24:48,030
background sir okay so as I understand

489
00:24:44,190 --> 00:24:54,620
it's got that last phrase in that music

490
00:24:48,030 --> 00:24:58,200
is not correct well okay so absolute

491
00:24:54,620 --> 00:25:01,949
we're going back to phase a that's fine

492
00:24:58,200 --> 00:25:06,540
well so I will revise this obsolete we

493
00:25:01,950 --> 00:25:09,750
which it said six months ago if we do

494
00:25:06,540 --> 00:25:12,300
that does that also obsolete the other

495
00:25:09,750 --> 00:25:13,320
RFC's that we're supporting RFC fifty

496
00:25:12,300 --> 00:25:18,960
fifty and I'm thinking there

497
00:25:13,320 --> 00:25:22,230
specifically of the RFC's for for the

498
00:25:18,960 --> 00:25:26,070
Ayana registries that RFC fifty-fifty

499
00:25:22,230 --> 00:25:29,760
but references uh in a way it's actually

500
00:25:26,070 --> 00:25:32,760
easier if it does because then we can go

501
00:25:29,760 --> 00:25:36,300
back in and and and set up new

502
00:25:32,760 --> 00:25:41,610
registries for RFC 50 of our for for bpp

503
00:25:36,300 --> 00:25:47,780
seven and and avoid trying to merge with

504
00:25:41,610 --> 00:25:50,310
the existing registries no go ahead

505
00:25:47,780 --> 00:25:53,250
so my understanding is I mean because

506
00:25:50,310 --> 00:25:55,379
it's the it's formerly no you need to be

507
00:25:53,250 --> 00:25:59,190
explicit about which RC skits obsoleted

508
00:25:55,380 --> 00:26:01,560
by this document and and I think what's

509
00:25:59,190 --> 00:26:04,410
currently in the ANA section do work

510
00:26:01,560 --> 00:26:08,550
without a specific I because you have

511
00:26:04,410 --> 00:26:13,380
this is 6255 isn't it yeah yeah which

512
00:26:08,550 --> 00:26:15,780
which will defines the registry with the

513
00:26:13,380 --> 00:26:18,240
updates to the registration rules that

514
00:26:15,780 --> 00:26:20,879
these documents specify so I think we

515
00:26:18,240 --> 00:26:22,770
covered and and I don't want to go back

516
00:26:20,880 --> 00:26:28,760
on that decision also that seems to be

517
00:26:22,770 --> 00:26:30,990
that from the main list that we have the

518
00:26:28,760 --> 00:26:33,180
young registry between the different

519
00:26:30,990 --> 00:26:37,320
versions which is what's now setup so

520
00:26:33,180 --> 00:26:40,289
with the updates so do I understand then

521
00:26:37,320 --> 00:26:41,939
that we're saying that we want to change

522
00:26:40,289 --> 00:26:45,360
this document is to say that it

523
00:26:41,940 --> 00:26:48,240
obsoletes RFC 5050 but it does not

524
00:26:45,360 --> 00:26:53,070
obviously RFC 6255 or whatever it is

525
00:26:48,240 --> 00:26:56,039
yeah and and that the merging of the

526
00:26:53,070 --> 00:27:01,439
existing registries that support arts at

527
00:26:56,039 --> 00:27:04,490
5050 with the new values that is

528
00:27:01,440 --> 00:27:07,769
reflected in this in in draft 17 is

529
00:27:04,490 --> 00:27:13,260
still goes forward is that right yeah

530
00:27:07,769 --> 00:27:16,070
that's my my understanding okay say okay

531
00:27:13,260 --> 00:27:22,919
yeah thanks I guess

532
00:27:16,070 --> 00:27:28,470
okay that was easy CRC's Stuart remark

533
00:27:22,919 --> 00:27:32,039
that surprised that we're using CRC's in

534
00:27:28,470 --> 00:27:35,159
this document given especially given the

535
00:27:32,039 --> 00:27:38,129
the harsh environment and so what I've

536
00:27:35,159 --> 00:27:40,260
done is I've added in 4.1.1 a note

537
00:27:38,130 --> 00:27:43,350
saying that if you want more robust

538
00:27:40,260 --> 00:27:45,779
protection then use a a bundle integrity

539
00:27:43,350 --> 00:27:50,699
block a block integrity block rather as

540
00:27:45,779 --> 00:27:52,980
defined in BP SEC the the expectation

541
00:27:50,700 --> 00:27:58,399
being that in some environments crcs are

542
00:27:52,980 --> 00:28:06,110
fine in some you do need a stronger

543
00:27:58,399 --> 00:28:08,639
protection of of the blocks that was

544
00:28:06,110 --> 00:28:10,110
stood noted that that the manifest block

545
00:28:08,639 --> 00:28:12,299
because it's not defined it seems out of

546
00:28:10,110 --> 00:28:14,969
place and so what I've done is I've

547
00:28:12,299 --> 00:28:17,010
removed all mention of manifest block

548
00:28:14,970 --> 00:28:19,409
from everywhere in the specification

549
00:28:17,010 --> 00:28:23,809
that's all all gone we can talk about

550
00:28:19,409 --> 00:28:23,809
adding it back in as a new RFC later on

551
00:28:24,500 --> 00:28:35,700
time we spent we spent a long time and a

552
00:28:30,899 --> 00:28:39,959
lot of cycles I'm the maleness talking

553
00:28:35,700 --> 00:28:43,919
about time I think the the salient point

554
00:28:39,960 --> 00:28:46,169
that comes out of this is really in my

555
00:28:43,919 --> 00:28:48,899
view this is the the third sentence and

556
00:28:46,169 --> 00:28:50,700
in the ex extract that I've got here

557
00:28:48,899 --> 00:28:51,600
from what Stuart said is that all you

558
00:28:50,700 --> 00:28:52,840
need to say is that you need a

559
00:28:51,600 --> 00:28:54,879
monotonically increasing

560
00:28:52,840 --> 00:28:58,000
system and our software convenience it

561
00:28:54,880 --> 00:29:00,460
shows the latter so what I've done is I

562
00:28:58,000 --> 00:29:02,470
took for table 1.6 which is about DT and

563
00:29:00,460 --> 00:29:04,779
time and just took out almost everything

564
00:29:02,470 --> 00:29:05,260
and said a t10 time is an unsigned

565
00:29:04,779 --> 00:29:08,230
integer

566
00:29:05,260 --> 00:29:12,250
there's the count of seconds since the

567
00:29:08,230 --> 00:29:14,409
start of the year 2000 UTC and it's

568
00:29:12,250 --> 00:29:16,330
going to be represented as a seaborne

569
00:29:14,409 --> 00:29:20,770
signed integer and how you figure that

570
00:29:16,330 --> 00:29:21,730
out is a implementation matter and we

571
00:29:20,770 --> 00:29:23,020
don't even say that it's an

572
00:29:21,730 --> 00:29:27,190
implementation matter because it doesn't

573
00:29:23,020 --> 00:29:31,418
matter so Scott Rick Tyler is that shall

574
00:29:27,190 --> 00:29:32,890
correct it shall be represented as a

575
00:29:31,419 --> 00:29:35,320
seaborne unsigned integer gives me

576
00:29:32,890 --> 00:29:38,350
enough wiggle room to make it a double

577
00:29:35,320 --> 00:29:39,340
or format as a string I sure there

578
00:29:38,350 --> 00:29:45,070
should be a must

579
00:29:39,340 --> 00:29:47,490
oh no probably wrong there I thought the

580
00:29:45,070 --> 00:29:53,049
same thing I may be full of cold sorry

581
00:29:47,490 --> 00:29:57,250
Magnus is backing I mean they are the

582
00:29:53,049 --> 00:30:00,370
same so but I think it's I mean this

583
00:29:57,250 --> 00:30:02,169
your I don't think you should use 2119

584
00:30:00,370 --> 00:30:03,399
language there at all you I mean this

585
00:30:02,169 --> 00:30:05,770
protocol uses a particular

586
00:30:03,399 --> 00:30:07,689
representation of this value and and

587
00:30:05,770 --> 00:30:11,260
that's I think you have state that this

588
00:30:07,690 --> 00:30:14,260
is represented as as a C Brown side

589
00:30:11,260 --> 00:30:15,970
because it's it's not you defining how

590
00:30:14,260 --> 00:30:19,240
it's being represented and you don't

591
00:30:15,970 --> 00:30:21,760
need to make that a must shall or

592
00:30:19,240 --> 00:30:24,490
whatever it's it's not debate about you

593
00:30:21,760 --> 00:30:27,070
just declare that this is defined well

594
00:30:24,490 --> 00:30:30,279
only thing how it's presented is is that

595
00:30:27,070 --> 00:30:32,289
a general comment applying to all of the

596
00:30:30,279 --> 00:30:34,210
remarks on representations through the

597
00:30:32,289 --> 00:30:39,299
document because we we essentially say

598
00:30:34,210 --> 00:30:42,370
this sort of thing for for all parts of

599
00:30:39,299 --> 00:30:44,679
the bundle right because everything is

600
00:30:42,370 --> 00:30:47,860
supposed to be in in C bar format and

601
00:30:44,679 --> 00:30:50,230
and what we say is specifically this

602
00:30:47,860 --> 00:30:53,320
thing people in C bar format isn't this

603
00:30:50,230 --> 00:30:55,179
C bar format yeah so I mean what you

604
00:30:53,320 --> 00:30:58,658
define these the exact representation

605
00:30:55,179 --> 00:31:03,429
here and that's right yeah and I think

606
00:30:58,659 --> 00:31:05,799
you can I mean I its I've in many cases

607
00:31:03,429 --> 00:31:06,580
may be the unnecessary use of 2119

608
00:31:05,799 --> 00:31:08,740
language this

609
00:31:06,580 --> 00:31:11,019
because it's saying if you just declare

610
00:31:08,740 --> 00:31:14,380
that this is represented in and implied

611
00:31:11,019 --> 00:31:17,529
basically MVP v7 it is represented this

612
00:31:14,380 --> 00:31:19,149
way about okay change to every place

613
00:31:17,529 --> 00:31:23,350
else where where we say how its

614
00:31:19,149 --> 00:31:27,070
represented it's it's I mean it's not

615
00:31:23,350 --> 00:31:29,620
necessarily and maybe so i actually that

616
00:31:27,070 --> 00:31:31,809
was so that this is a very minor point i

617
00:31:29,620 --> 00:31:34,418
think it's not like people

618
00:31:31,809 --> 00:31:36,129
I mean having it as chalice is not a I

619
00:31:34,419 --> 00:31:38,590
think it slightly will be use of it but

620
00:31:36,130 --> 00:31:41,200
that's actually not I'm a little bit

621
00:31:38,590 --> 00:31:44,918
worried about that this what's written

622
00:31:41,200 --> 00:31:47,620
here is not easily decodable for an

623
00:31:44,919 --> 00:31:51,639
implementer either I'm just saying it's

624
00:31:47,620 --> 00:31:54,729
you see on the second since started near

625
00:31:51,639 --> 00:31:58,029
2000 on you to see scale because the

626
00:31:54,730 --> 00:32:00,760
time it again me back to this question

627
00:31:58,029 --> 00:32:04,899
about okay how the hell is asleep

628
00:32:00,760 --> 00:32:07,510
secures handled well but but that's just

629
00:32:04,899 --> 00:32:09,428
it's not then that that's exactly saying

630
00:32:07,510 --> 00:32:11,320
is d'Arnaud leave seconds it's it's a

631
00:32:09,429 --> 00:32:13,090
it's a count of seconds that have

632
00:32:11,320 --> 00:32:16,360
elapsed and there are no loop seconds in

633
00:32:13,090 --> 00:32:19,389
there okay so this is actually now it

634
00:32:16,360 --> 00:32:21,850
read an actual change to the time format

635
00:32:19,389 --> 00:32:24,100
because it's not a matter of format it's

636
00:32:21,850 --> 00:32:32,010
just it's just that it's a number it's a

637
00:32:24,100 --> 00:32:32,010
count of seconds yeah but the unix time

638
00:32:32,130 --> 00:32:40,690
wasn't you to see scale next time is is

639
00:32:37,330 --> 00:32:42,269
a count of seconds since a since unix

640
00:32:40,690 --> 00:32:43,870
time is a count of seconds since

641
00:32:42,269 --> 00:32:47,019
beginning of january first nineteen

642
00:32:43,870 --> 00:32:49,870
seventy UTC yeah so magnus rick here

643
00:32:47,019 --> 00:32:53,559
yeah what we're not doing is recording a

644
00:32:49,870 --> 00:32:58,299
date time we're recording an interval

645
00:32:53,559 --> 00:33:01,629
how many seconds since 1970 yeah and and

646
00:32:58,299 --> 00:33:04,120
and this and this usually gets into

647
00:33:01,630 --> 00:33:09,750
confusion say okay it's sleep seconds

648
00:33:04,120 --> 00:33:15,389
how is the on you to see scale but

649
00:33:09,750 --> 00:33:17,170
nothing compared to ta which would be i

650
00:33:15,389 --> 00:33:18,669
mean if

651
00:33:17,170 --> 00:33:21,820
say you to see then includes sleep

652
00:33:18,670 --> 00:33:23,920
seconds which means right but it's it's

653
00:33:21,820 --> 00:33:27,389
not saying that as a UTC interval it's

654
00:33:23,920 --> 00:33:32,040
saying that's a count since a UTC point

655
00:33:27,390 --> 00:33:32,040
so there are no leap seconds involved

656
00:33:33,240 --> 00:33:38,260
yeah then then I think you should

657
00:33:35,110 --> 00:33:44,530
clarify that's back together it's like

658
00:33:38,260 --> 00:33:46,000
okay this is as usual not time it's I I

659
00:33:44,530 --> 00:33:57,070
don't know how to make this any clearer

660
00:33:46,000 --> 00:33:58,510
than it is it's okay yeah okay do you

661
00:33:57,070 --> 00:33:59,220
want to continue this discussion on the

662
00:33:58,510 --> 00:34:09,370
list

663
00:33:59,220 --> 00:34:12,040
Magnus yeah okay because I was just

664
00:34:09,370 --> 00:34:14,739
having a quick look through the back a

665
00:34:12,040 --> 00:34:16,929
log of messages about this and there is

666
00:34:14,739 --> 00:34:18,699
a reference to a seaboard raft about

667
00:34:16,929 --> 00:34:20,918
time stamping where they appear to have

668
00:34:18,699 --> 00:34:23,739
some good text exactly covering this

669
00:34:20,918 --> 00:34:26,440
talking about an interval of seconds

670
00:34:23,739 --> 00:34:28,330
since 1970 and they covered the leap

671
00:34:26,440 --> 00:34:31,240
second thing and it might be I think was

672
00:34:28,330 --> 00:34:32,889
actually reference from Caston it might

673
00:34:31,239 --> 00:34:35,770
be a good bit of reference material to

674
00:34:32,889 --> 00:34:47,649
agree around possibly even kill the text

675
00:34:35,770 --> 00:34:55,630
in some way okay okay thanks okay there

676
00:34:47,649 --> 00:35:00,040
are in after which section where there's

677
00:34:55,630 --> 00:35:03,190
a mention of some anticipated extension

678
00:35:00,040 --> 00:35:04,420
blocks and Stewart's comment was that

679
00:35:03,190 --> 00:35:08,590
these should be handled through an iron

680
00:35:04,420 --> 00:35:11,020
a registry and the block numbers 13 14

681
00:35:08,590 --> 00:35:13,120
and 15 and they shouldn't be in the text

682
00:35:11,020 --> 00:35:17,080
until they're standard so all of those

683
00:35:13,120 --> 00:35:19,150
have been removed everything that's

684
00:35:17,080 --> 00:35:23,650
that's not defined is removed from the

685
00:35:19,150 --> 00:35:26,050
spectrum there's some comments on

686
00:35:23,650 --> 00:35:27,690
securities our definition of the bundle

687
00:35:26,050 --> 00:35:30,000
and bundle protocol

688
00:35:27,690 --> 00:35:32,310
and well I've done there as I've added a

689
00:35:30,000 --> 00:35:34,410
note in Security section saying that

690
00:35:32,310 --> 00:35:38,310
it's a current research topic there

691
00:35:34,410 --> 00:35:42,180
there isn't it it is a work in progress

692
00:35:38,310 --> 00:35:45,089
and there is an internet draft we could

693
00:35:42,180 --> 00:35:46,109
refer to it here or just says the

694
00:35:45,089 --> 00:35:48,630
current research topic whatever

695
00:35:46,109 --> 00:35:50,369
whichever makes sense

696
00:35:48,630 --> 00:35:52,589
rick has chair I wouldn't say current

697
00:35:50,369 --> 00:35:56,069
research topic because we've got a

698
00:35:52,589 --> 00:35:58,410
working groups document on and we're not

699
00:35:56,069 --> 00:36:01,050
a research organization okay we are we

700
00:35:58,410 --> 00:36:04,560
are engineering that solution so I would

701
00:36:01,050 --> 00:36:06,750
say is is a work in progress okay

702
00:36:04,560 --> 00:36:09,690
rather than it's a research topic okay

703
00:36:06,750 --> 00:36:13,609
I'll change to work in progress and do

704
00:36:09,690 --> 00:36:17,990
we want a reference to the I think

705
00:36:13,609 --> 00:36:19,980
referencing from this informative

706
00:36:17,990 --> 00:36:21,660
possibly I'm not sure where the

707
00:36:19,980 --> 00:36:22,829
referencing drafts in progress from a

708
00:36:21,660 --> 00:36:24,359
document you're trying to get through

709
00:36:22,829 --> 00:36:27,420
standards track okay that will cause

710
00:36:24,359 --> 00:36:32,730
more trouble than looking at Miriah for

711
00:36:27,420 --> 00:36:34,319
advice here you go first yes if it's not

712
00:36:32,730 --> 00:36:34,800
a normative reference it's not a problem

713
00:36:34,319 --> 00:36:36,480
at all

714
00:36:34,800 --> 00:36:38,940
yeah okay so you put it in as an

715
00:36:36,480 --> 00:36:42,750
informative reference okay I'm gonna let

716
00:36:38,940 --> 00:36:45,450
Magnus hopefully he's conscious okay all

717
00:36:42,750 --> 00:36:47,849
right and spirit other comment on

718
00:36:45,450 --> 00:36:49,529
security was that there's material in

719
00:36:47,849 --> 00:36:52,020
the security section that seems to be

720
00:36:49,530 --> 00:36:56,130
defining protocol there's actually a lot

721
00:36:52,020 --> 00:36:57,599
of shouse language in there and he

722
00:36:56,130 --> 00:36:59,010
points out to be better to define that

723
00:36:57,599 --> 00:37:00,390
in the body of the text or point to a

724
00:36:59,010 --> 00:37:03,690
definition or another document which is

725
00:37:00,390 --> 00:37:06,598
B P SEC so what I've done is remove all

726
00:37:03,690 --> 00:37:09,240
the text in the security section that

727
00:37:06,599 --> 00:37:11,640
has any of this normative sort of

728
00:37:09,240 --> 00:37:15,029
language in it so though the last

729
00:37:11,640 --> 00:37:16,410
sentence and security section is talking

730
00:37:15,030 --> 00:37:17,819
about the distribution of public keys

731
00:37:16,410 --> 00:37:24,299
which is a current research topic which

732
00:37:17,819 --> 00:37:26,819
is yeah I had a considerations a lot of

733
00:37:24,300 --> 00:37:30,119
this stuff namespaces do not seem to be

734
00:37:26,819 --> 00:37:31,440
identified and Here I am at sea I don't

735
00:37:30,119 --> 00:37:34,140
know the difference between a namespace

736
00:37:31,440 --> 00:37:36,150
in a registry and I'm hoping somebody

737
00:37:34,140 --> 00:37:38,379
can clarify that for me here comes

738
00:37:36,150 --> 00:37:41,620
Magnus

739
00:37:38,380 --> 00:37:43,750
yeah so I think what's he really

740
00:37:41,620 --> 00:37:47,170
referring is that he thinks it's unclear

741
00:37:43,750 --> 00:37:48,940
which particular registry because I mean

742
00:37:47,170 --> 00:37:50,980
and especially in this case we have the

743
00:37:48,940 --> 00:37:54,040
registries that grouped together in that

744
00:37:50,980 --> 00:37:56,200
general upon the protocol versus on the

745
00:37:54,040 --> 00:37:58,720
protocol it's actually well I guess it's

746
00:37:56,200 --> 00:38:01,680
the group now but I think we just need

747
00:37:58,720 --> 00:38:04,120
to be clear on which particular registry

748
00:38:01,680 --> 00:38:06,009
the registries are are called out

749
00:38:04,120 --> 00:38:08,080
specifically in that section every

750
00:38:06,010 --> 00:38:10,540
Sierra and that was my reaction too tall

751
00:38:08,080 --> 00:38:16,540
so and I mean I commented that I think

752
00:38:10,540 --> 00:38:18,400
it's because so should i the word

753
00:38:16,540 --> 00:38:18,820
registry be changed to namespace or does

754
00:38:18,400 --> 00:38:22,300
it matter

755
00:38:18,820 --> 00:38:24,580
no I think in the anatomists called the

756
00:38:22,300 --> 00:38:26,440
registry you'd be your correct producing

757
00:38:24,580 --> 00:38:31,779
registries I don't see you should change

758
00:38:26,440 --> 00:38:34,330
that okay I mean yeah I mean I think it

759
00:38:31,780 --> 00:38:36,160
was like in some cases to what bundle

760
00:38:34,330 --> 00:38:37,960
protocol when he was missing in some of

761
00:38:36,160 --> 00:38:40,299
these cases so that it wasn't clear that

762
00:38:37,960 --> 00:38:43,390
this was the bundle protocol particular

763
00:38:40,300 --> 00:38:45,430
registry so just check that you go to

764
00:38:43,390 --> 00:38:48,940
Layana registry page check that you have

765
00:38:45,430 --> 00:38:50,319
the full registry name identifier so to

766
00:38:48,940 --> 00:38:52,870
say the string that's actually on the

767
00:38:50,320 --> 00:38:56,620
eye on a web page for each registry that

768
00:38:52,870 --> 00:39:02,440
that's actually written exactly in the

769
00:38:56,620 --> 00:39:06,339
draft okay sure yeah yeah go ahead

770
00:39:02,440 --> 00:39:08,380
no no that's this is this is mostly text

771
00:39:06,340 --> 00:39:10,960
from from mark who wrote the the other

772
00:39:08,380 --> 00:39:17,200
draft so I I suspect he got it right but

773
00:39:10,960 --> 00:39:19,030
I will double-check the iron registry

774
00:39:17,200 --> 00:39:22,540
for new allocations ought to be this RFC

775
00:39:19,030 --> 00:39:25,600
so I think Ricky said this on the

776
00:39:22,540 --> 00:39:28,630
mailing list that should be RFC to be in

777
00:39:25,600 --> 00:39:32,560
a lot of places you said that one I

778
00:39:28,630 --> 00:39:33,970
think was Magnus wasn't me so from

779
00:39:32,560 --> 00:39:34,540
experience of this sort of thing you let

780
00:39:33,970 --> 00:39:37,779
Ayane

781
00:39:34,540 --> 00:39:39,790
yeah to find it you know yeah right so

782
00:39:37,780 --> 00:39:41,680
well but it's it's not it's not a matter

783
00:39:39,790 --> 00:39:44,140
of what the numbers are going to be it's

784
00:39:41,680 --> 00:39:47,620
a matter of how you write the name of

785
00:39:44,140 --> 00:39:50,980
the reference and so I think that the

786
00:39:47,620 --> 00:39:52,058
references currently are in 16 anyway

787
00:39:50,980 --> 00:39:55,449
were or 17 where

788
00:39:52,059 --> 00:39:59,579
or section numbers in the specification

789
00:39:55,449 --> 00:39:59,579
so we can just change it to RFC to be

790
00:40:00,770 --> 00:40:03,849
[Music]

791
00:40:04,739 --> 00:40:12,339
yes I mean in the straightest tables

792
00:40:09,939 --> 00:40:15,219
where comments you use like the what I

793
00:40:12,339 --> 00:40:18,069
put in the shed which is square bracket

794
00:40:15,219 --> 00:40:23,890
RFC to be defined as shortened together

795
00:40:18,069 --> 00:40:25,989
it comes RFC to be D and square brackets

796
00:40:23,890 --> 00:40:29,199
and you put that in the reference part

797
00:40:25,989 --> 00:40:33,819
of the tables so and then during the

798
00:40:29,199 --> 00:40:35,829
this publication process I notice in the

799
00:40:33,819 --> 00:40:38,558
arts the editor will change that to the

800
00:40:35,829 --> 00:40:44,559
RFC number assigned okay

801
00:40:38,559 --> 00:40:48,029
okay and then with the third part of the

802
00:40:44,559 --> 00:40:50,199
INR considerations comments were that

803
00:40:48,029 --> 00:40:53,589
how come there are references to our

804
00:40:50,199 --> 00:40:55,119
state 5050 and does this indicate that

805
00:40:53,589 --> 00:40:57,849
our C 50 is expected to remain in our

806
00:40:55,119 --> 00:41:01,719
current protocol how do we do that

807
00:40:57,849 --> 00:41:05,079
and I and I'm here again I'm I'm

808
00:41:01,719 --> 00:41:10,599
uncertain what we do about this if we're

809
00:41:05,079 --> 00:41:17,920
going to have an eye on a section that

810
00:41:10,599 --> 00:41:22,479
comprises a merger of the original RFC

811
00:41:17,920 --> 00:41:25,449
50/50 oriented registries and then new

812
00:41:22,479 --> 00:41:30,218
values then the reference for those

813
00:41:25,449 --> 00:41:32,469
things sort of has to be RFC 5050 if

814
00:41:30,219 --> 00:41:37,989
we're not then then we can take them

815
00:41:32,469 --> 00:41:40,209
away so Scot the Rick Taylor again I'm

816
00:41:37,989 --> 00:41:42,489
slightly confused about the context of

817
00:41:40,209 --> 00:41:46,328
this was the question around the fact

818
00:41:42,489 --> 00:41:47,769
that you have tables of new entry

819
00:41:46,329 --> 00:41:50,559
suggestions for Ayana

820
00:41:47,769 --> 00:41:53,529
in the document which have the previous

821
00:41:50,559 --> 00:41:58,150
values reused by RFC 50 50 in them

822
00:41:53,529 --> 00:42:00,549
that's right so from my non chair

823
00:41:58,150 --> 00:42:03,279
opinion if I was writing that I would

824
00:42:00,549 --> 00:42:04,910
not include values that weren't defined

825
00:42:03,279 --> 00:42:07,160
by the document

826
00:42:04,910 --> 00:42:10,520
to your writing so you say dear Ayane

827
00:42:07,160 --> 00:42:12,830
please add these values and update

828
00:42:10,520 --> 00:42:15,740
existing if required the following

829
00:42:12,830 --> 00:42:18,590
values and let Ayane maintain the

830
00:42:15,740 --> 00:42:21,200
registry you just defined the Deaf okay

831
00:42:18,590 --> 00:42:27,980
so I would like to just make sure that

832
00:42:21,200 --> 00:42:31,520
that mark agrees this context is from in

833
00:42:27,980 --> 00:42:35,510
this case I think you're on WIC often

834
00:42:31,520 --> 00:42:39,410
wrong because what we're doing here is

835
00:42:35,510 --> 00:42:41,270
we actually we are so going forward

836
00:42:39,410 --> 00:42:43,339
after this nurse Lee becomes published

837
00:42:41,270 --> 00:42:46,100
but the anti section currently does is

838
00:42:43,340 --> 00:42:49,280
saying that yes if these following

839
00:42:46,100 --> 00:42:52,040
registries that we have been updated by

840
00:42:49,280 --> 00:42:54,440
this RC so the registration definition

841
00:42:52,040 --> 00:42:57,920
is being the combination of obscene 6255

842
00:42:54,440 --> 00:43:00,260
and the RFC to be and therefore in the

843
00:42:57,920 --> 00:43:02,660
tables we actually want to show how the

844
00:43:00,260 --> 00:43:05,390
tables is supposed to look by after this

845
00:43:02,660 --> 00:43:08,540
update and that includes reference them

846
00:43:05,390 --> 00:43:10,970
for that's going to be both 50/50 and

847
00:43:08,540 --> 00:43:12,710
RFC to be and I think the missing the

848
00:43:10,970 --> 00:43:14,810
fact that they were missing in those

849
00:43:12,710 --> 00:43:17,900
interests that's it's used by both BP

850
00:43:14,810 --> 00:43:19,910
six and seven didn't have the double

851
00:43:17,900 --> 00:43:25,070
reference set right it might be part of

852
00:43:19,910 --> 00:43:28,279
the confusion here from so when you're

853
00:43:25,070 --> 00:43:30,170
showing that thesis this is how the

854
00:43:28,280 --> 00:43:33,170
table will look at the point of

855
00:43:30,170 --> 00:43:35,930
registering this new updates to the

856
00:43:33,170 --> 00:43:37,550
registries and going forward of course

857
00:43:35,930 --> 00:43:40,339
you can add to it individual video

858
00:43:37,550 --> 00:43:42,710
saying as you say WIC adds the following

859
00:43:40,340 --> 00:43:44,300
entry in the table and that's gonna be

860
00:43:42,710 --> 00:43:46,190
hanged by Anna but at this point we

861
00:43:44,300 --> 00:43:50,570
actually defining a snapshot of a

862
00:43:46,190 --> 00:43:52,940
reorganization of the table okay okay so

863
00:43:50,570 --> 00:43:55,760
so the current structure is the correct

864
00:43:52,940 --> 00:44:02,450
structure don't look at me because I'm

865
00:43:55,760 --> 00:44:04,250
wrong about in the document yes okay

866
00:44:02,450 --> 00:44:06,529
yeah you just need to add where you have

867
00:44:04,250 --> 00:44:09,680
fifty fifty and in cases like those

868
00:44:06,530 --> 00:44:12,500
based on like if you take the bundle

869
00:44:09,680 --> 00:44:15,169
formats registry or saying which

870
00:44:12,500 --> 00:44:17,450
different I mean there you have to have

871
00:44:15,170 --> 00:44:18,650
those interests you know this is both 56

872
00:44:17,450 --> 00:44:21,230
and seven and

873
00:44:18,650 --> 00:44:26,900
of course this is included order the RFC

874
00:44:21,230 --> 00:44:32,270
to be and the 50:54 that's my opinion

875
00:44:26,900 --> 00:44:35,030
list so yeah so this is the types are

876
00:44:32,270 --> 00:44:37,340
redefined in this document right there

877
00:44:35,030 --> 00:44:40,160
the definitions are repeated in this

878
00:44:37,340 --> 00:44:43,730
document yeah I would like just a

879
00:44:40,160 --> 00:44:47,120
actually they are defined for bp7 in

880
00:44:43,730 --> 00:44:51,980
this document well no they're the the

881
00:44:47,120 --> 00:44:57,350
the the registries in that in the IRS

882
00:44:51,980 --> 00:45:01,430
section are they show the union of the

883
00:44:57,350 --> 00:45:06,049
original RFC 50 50 values and the new

884
00:45:01,430 --> 00:45:08,330
vp7 values and the definition is of the

885
00:45:06,050 --> 00:45:11,870
original values is now in both documents

886
00:45:08,330 --> 00:45:13,610
the there are definitions the

887
00:45:11,870 --> 00:45:15,890
definitions of some of these values are

888
00:45:13,610 --> 00:45:18,530
in 5050 and the definitions of others

889
00:45:15,890 --> 00:45:22,339
are in this document okay so in there

890
00:45:18,530 --> 00:45:24,380
not like anything that's in 50 50 is not

891
00:45:22,340 --> 00:45:26,390
repeated in this document know that they

892
00:45:24,380 --> 00:45:29,480
are repeated yeah in their repeated in

893
00:45:26,390 --> 00:45:31,759
these these registries registry

894
00:45:29,480 --> 00:45:33,950
snapshots no I mean the definition the

895
00:45:31,760 --> 00:45:41,570
extra text the definitions are not okay

896
00:45:33,950 --> 00:45:47,990
then it's fine yeah okay okay so we'll

897
00:45:41,570 --> 00:45:53,480
leave that alone and the processing

898
00:45:47,990 --> 00:45:56,049
control Flags Stuart said that these are

899
00:45:53,480 --> 00:46:00,920
critical enough that there should be a

900
00:45:56,050 --> 00:46:02,930
more demanding criterion for updating

901
00:46:00,920 --> 00:46:05,630
them such as standards action so I said

902
00:46:02,930 --> 00:46:08,870
fine so I changed the registration

903
00:46:05,630 --> 00:46:10,670
policy request as shown here the

904
00:46:08,870 --> 00:46:12,890
registration policy has changed to

905
00:46:10,670 --> 00:46:14,480
standards action and because there's a

906
00:46:12,890 --> 00:46:15,920
limited number of bits available that

907
00:46:14,480 --> 00:46:19,390
should only be granted for stannis tract

908
00:46:15,920 --> 00:46:23,420
RFC approved by a iesg

909
00:46:19,390 --> 00:46:25,069
this is an existing registry Stuart says

910
00:46:23,420 --> 00:46:28,760
how come there are no private use of

911
00:46:25,070 --> 00:46:31,160
experimental allocations and I don't

912
00:46:28,760 --> 00:46:31,850
know what we should do about this should

913
00:46:31,160 --> 00:46:34,190
we

914
00:46:31,850 --> 00:46:36,650
define some that are not currently

915
00:46:34,190 --> 00:46:38,540
defined the original registry did not

916
00:46:36,650 --> 00:46:41,480
have any private use or experimental

917
00:46:38,540 --> 00:46:43,009
allocations I wreck taylor here i'm

918
00:46:41,480 --> 00:46:47,359
actually just looking at the the

919
00:46:43,010 --> 00:46:51,340
registry filings 21 to 63 amount is

920
00:46:47,359 --> 00:46:56,240
unassigned so the insurgents from

921
00:46:51,340 --> 00:47:01,180
private and yes so you could redefine an

922
00:46:56,240 --> 00:47:03,950
area of that good i personally not

923
00:47:01,180 --> 00:47:07,368
personally i think it's worth having a

924
00:47:03,950 --> 00:47:09,049
few okay that's not my chair opinion

925
00:47:07,369 --> 00:47:12,050
that's my personal opinion because

926
00:47:09,050 --> 00:47:14,660
people do experiments and let's not get

927
00:47:12,050 --> 00:47:19,640
them rampaging across other people's

928
00:47:14,660 --> 00:47:22,940
face i for five daga mad okay so it's

929
00:47:19,640 --> 00:47:24,770
just a gut feeling some some handful

930
00:47:22,940 --> 00:47:26,300
eight maybe something yeah it seems

931
00:47:24,770 --> 00:47:30,380
seniors most power of two

932
00:47:26,300 --> 00:47:32,450
okay good could do that and following on

933
00:47:30,380 --> 00:47:35,840
from that I'd make them right at the top

934
00:47:32,450 --> 00:47:39,140
yes it seems logical does help those you

935
00:47:35,840 --> 00:47:44,660
know top end of the spectrum this is a

936
00:47:39,140 --> 00:47:47,600
free-for-all area sure okay Norman of

937
00:47:44,660 --> 00:47:49,490
references this was just a

938
00:47:47,600 --> 00:47:52,940
misunderstanding on Stuart's part though

939
00:47:49,490 --> 00:47:56,660
that he thought BP second meant RFC 6 to

940
00:47:52,940 --> 00:47:58,040
7 and and and it actually does not it

941
00:47:56,660 --> 00:48:00,859
means they're the Big D sex

942
00:47:58,040 --> 00:48:06,700
specification which is assumed to be a

943
00:48:00,859 --> 00:48:06,700
an RFC so it shouldn't be down revved

944
00:48:07,480 --> 00:48:14,750
let's see a normative reference Turner I

945
00:48:09,890 --> 00:48:16,970
should leave paper on on crc32 so but

946
00:48:14,750 --> 00:48:20,390
that reference has been changed in now

947
00:48:16,970 --> 00:48:26,020
refers to RFC 3385 instead of the I

948
00:48:20,390 --> 00:48:26,020
Triple E reference defining crc32 seeing

949
00:48:28,119 --> 00:48:37,430
the there was a there was a reference to

950
00:48:32,080 --> 00:48:38,869
the definition of epic time and Stuart

951
00:48:37,430 --> 00:48:41,359
said I'm not sure it's a good idea and

952
00:48:38,869 --> 00:48:43,220
it becomes moot because everything

953
00:48:41,359 --> 00:48:45,950
relating to definition of time has been

954
00:48:43,220 --> 00:48:53,299
removed so that that handily

955
00:48:45,950 --> 00:48:56,810
Lutz this question is there there's a

956
00:48:53,300 --> 00:48:59,170
there's CB VL at the end of the document

957
00:48:56,810 --> 00:49:02,630
what's the license position for that and

958
00:48:59,170 --> 00:49:04,850
I'm quoting from Magnus's email here

959
00:49:02,630 --> 00:49:09,070
that it's it's not code it's it's format

960
00:49:04,850 --> 00:49:11,420
description comparable to a B and F so I

961
00:49:09,070 --> 00:49:15,890
don't proposed it to change anything

962
00:49:11,420 --> 00:49:19,660
there and then there was more on

963
00:49:15,890 --> 00:49:21,770
namespaces there several places where

964
00:49:19,660 --> 00:49:24,170
Stewart asked what where's the namespace

965
00:49:21,770 --> 00:49:26,390
but something in space and I we've been

966
00:49:24,170 --> 00:49:30,140
through this just a few minutes ago so I

967
00:49:26,390 --> 00:49:32,270
think the resolution here is it's it's

968
00:49:30,140 --> 00:49:35,210
fine the way it is I'll go back and make

969
00:49:32,270 --> 00:49:38,180
sure that the registry names are correct

970
00:49:35,210 --> 00:49:41,960
that match up exactly with what's on

971
00:49:38,180 --> 00:49:43,970
Ayana but that we don't need to be

972
00:49:41,960 --> 00:49:45,950
saying what the namespaces are because

973
00:49:43,970 --> 00:49:54,740
the registry names are essentially the

974
00:49:45,950 --> 00:50:02,600
namespaces there's a URI scheme types

975
00:49:54,740 --> 00:50:05,419
registry and Stuart's reservation here

976
00:50:02,600 --> 00:50:08,060
is that it's made bit field why are

977
00:50:05,420 --> 00:50:09,950
there not more reserved values that more

978
00:50:08,060 --> 00:50:13,190
require more considered action to

979
00:50:09,950 --> 00:50:15,140
release and that's a good question so I

980
00:50:13,190 --> 00:50:17,990
don't know what to do about that and I

981
00:50:15,140 --> 00:50:25,549
open the question up to the working

982
00:50:17,990 --> 00:50:31,069
group what do we think about this go

983
00:50:25,550 --> 00:50:32,420
back there we go sorry I'm just trying

984
00:50:31,069 --> 00:50:39,349
the reference my cell phone my laptop

985
00:50:32,420 --> 00:50:45,279
yeah you're asking types so is that the

986
00:50:39,349 --> 00:50:51,079
that's in the bundle protocol it's yeah

987
00:50:45,279 --> 00:50:52,819
scheme types I think is the name yeah I

988
00:50:51,079 --> 00:50:55,059
didn't copy the whole name into the

989
00:50:52,819 --> 00:50:55,058
header here

990
00:51:09,519 --> 00:51:19,430
yeah I'm not certain just what the name

991
00:51:11,599 --> 00:51:21,469
is it could be scheme type codes or but

992
00:51:19,430 --> 00:51:24,680
if but it's your ice scheme the bundle

993
00:51:21,469 --> 00:51:27,789
protocol URI scheme should if you search

994
00:51:24,680 --> 00:51:27,788
for that it should come up

995
00:51:38,330 --> 00:51:48,620
under the actual Ayane URI schemes yeah

996
00:51:42,560 --> 00:51:51,080
I I think I think there I there are the

997
00:51:48,620 --> 00:51:52,940
schemes but there's what the things that

998
00:51:51,080 --> 00:51:56,060
the schemes are definitions of URI

999
00:51:52,940 --> 00:51:58,940
schemes but we're defined here as codes

1000
00:51:56,060 --> 00:52:01,670
that are numbers that were that

1001
00:51:58,940 --> 00:52:05,900
identifies those schemes and that's a

1002
00:52:01,670 --> 00:52:08,510
new registering that's why I can't find

1003
00:52:05,900 --> 00:52:10,120
its new go ahead - yeah yeah so what

1004
00:52:08,510 --> 00:52:15,980
would be talking about this section

1005
00:52:10,120 --> 00:52:19,160
10.16 right the trade history and and it

1006
00:52:15,980 --> 00:52:22,670
has serious research one is DT and two

1007
00:52:19,160 --> 00:52:29,330
is IP n and three to 254 is unassigned

1008
00:52:22,670 --> 00:52:34,130
and 255 is reserved so that's and III

1009
00:52:29,330 --> 00:52:35,690
don't think this is an issue and the its

1010
00:52:34,130 --> 00:52:37,460
specification required which seems very

1011
00:52:35,690 --> 00:52:39,620
reasonable for this you need to have in

1012
00:52:37,460 --> 00:52:41,960
your ice cream definition which you want

1013
00:52:39,620 --> 00:52:43,339
to add to this protocol and that Suffolk

1014
00:52:41,960 --> 00:52:47,420
is sufficient it has some documentation

1015
00:52:43,340 --> 00:52:51,770
on how to use this in bp7 Tony the

1016
00:52:47,420 --> 00:52:53,270
larger values Rick speaking personally

1017
00:52:51,770 --> 00:52:55,730
now I've worked out what on earth we're

1018
00:52:53,270 --> 00:53:00,230
talking about sorry for being slow no I

1019
00:52:55,730 --> 00:53:02,480
don't think so I as me speaking

1020
00:53:00,230 --> 00:53:04,190
personally not as chair I don't

1021
00:53:02,480 --> 00:53:06,950
particularly like this eight bit field

1022
00:53:04,190 --> 00:53:09,470
anyway but I know the reality is IP n

1023
00:53:06,950 --> 00:53:11,169
exists and the DTN text-based schema

1024
00:53:09,470 --> 00:53:14,000
exists as well so we need to have a

1025
00:53:11,170 --> 00:53:15,590
selector yeah let's and there look at

1026
00:53:14,000 --> 00:53:17,480
conceivably the others and there was the

1027
00:53:15,590 --> 00:53:19,460
intent is that it's a URI so you can

1028
00:53:17,480 --> 00:53:21,380
have like lots of different ways of

1029
00:53:19,460 --> 00:53:23,540
doing it exactly and then having this

1030
00:53:21,380 --> 00:53:26,210
sort of numeric selector in there seems

1031
00:53:23,540 --> 00:53:28,370
to go against the grain of what the URI

1032
00:53:26,210 --> 00:53:30,350
guys are trying to do so I think

1033
00:53:28,370 --> 00:53:32,810
philosophically it's not a great idea so

1034
00:53:30,350 --> 00:53:35,810
making it bigger than eight is just

1035
00:53:32,810 --> 00:53:38,420
inviting people to agree to go off and

1036
00:53:35,810 --> 00:53:40,370
do more crazy numeric stuff which is

1037
00:53:38,420 --> 00:53:42,400
probably not right right yeah well

1038
00:53:40,370 --> 00:53:46,630
there's only one reserved value in that

1039
00:53:42,400 --> 00:53:48,290
field is that is that sufficient yes

1040
00:53:46,630 --> 00:53:50,600
okay good

1041
00:53:48,290 --> 00:53:53,690
I think at least is because I mean

1042
00:53:50,600 --> 00:53:55,400
what's like 255 would be used if we ever

1043
00:53:53,690 --> 00:53:58,370
run out of space at this table you would

1044
00:53:55,400 --> 00:54:00,170
use 255 sucess oh by the way you need to

1045
00:53:58,370 --> 00:54:05,000
go look at something else he actually

1046
00:54:00,170 --> 00:54:07,160
understand this okay and and I don't

1047
00:54:05,000 --> 00:54:12,050
think this never will occur in this

1048
00:54:07,160 --> 00:54:15,560
because doing so many different URI

1049
00:54:12,050 --> 00:54:21,380
schemes for upon the protocol doesn't

1050
00:54:15,560 --> 00:54:23,570
seem that likely mm-hmm start here so I

1051
00:54:21,380 --> 00:54:26,800
used to see a lot of rfcs with you know

1052
00:54:23,570 --> 00:54:29,720
reserved for future standards action and

1053
00:54:26,800 --> 00:54:31,220
point taken that we may not be fond of

1054
00:54:29,720 --> 00:54:34,000
the existence of this field in the first

1055
00:54:31,220 --> 00:54:37,790
place but we'd be even less fond if

1056
00:54:34,000 --> 00:54:39,800
people start using it and and filling

1057
00:54:37,790 --> 00:54:42,380
vast regions of the of the 8-bit space

1058
00:54:39,800 --> 00:54:45,620
with with different things so it might

1059
00:54:42,380 --> 00:54:47,570
not be unreasonable to you know reserve

1060
00:54:45,620 --> 00:54:49,190
half the space for standards action and

1061
00:54:47,570 --> 00:54:50,780
only leave half the space open for

1062
00:54:49,190 --> 00:54:56,060
people to do whatever crazy things

1063
00:54:50,780 --> 00:54:57,860
they're thinking of doing Rick hit point

1064
00:54:56,060 --> 00:55:00,799
point taken I thought the idea was to

1065
00:54:57,860 --> 00:55:05,330
reserve that the whole 8-bit field is

1066
00:55:00,800 --> 00:55:07,130
under standards track control so you

1067
00:55:05,330 --> 00:55:20,290
have to understand a stripe document to

1068
00:55:07,130 --> 00:55:23,810
get one of those values so to begin with

1069
00:55:20,290 --> 00:55:26,210
then you have a need use that your iced

1070
00:55:23,810 --> 00:55:28,009
tea mean inbounder protocol and that's

1071
00:55:26,210 --> 00:55:30,320
and then you need a document that

1072
00:55:28,010 --> 00:55:31,910
defines how you do that and that's I

1073
00:55:30,320 --> 00:55:34,280
think a reasonable bar and it's

1074
00:55:31,910 --> 00:55:36,379
basically for expert also check that

1075
00:55:34,280 --> 00:55:39,530
cells this is a reasonable request to

1076
00:55:36,380 --> 00:55:42,460
add it I think it we don't need to put

1077
00:55:39,530 --> 00:55:49,180
the board at high and split I mean I

1078
00:55:42,460 --> 00:55:52,119
wouldn't expect an issue with this okay

1079
00:55:49,180 --> 00:55:55,689
so we leave that alone good

1080
00:55:52,119 --> 00:55:58,059
there's a reference to the DTN research

1081
00:55:55,689 --> 00:56:00,189
group website in the for additional

1082
00:55:58,059 --> 00:56:02,259
information section they thought that

1083
00:56:00,189 --> 00:56:06,759
was a bad idea so I've removed that

1084
00:56:02,259 --> 00:56:08,559
reference and and he objected to the

1085
00:56:06,759 --> 00:56:13,529
word contraindicated which is actually

1086
00:56:08,559 --> 00:56:18,009
goes back to RC 50/50 but as points out

1087
00:56:13,529 --> 00:56:22,779
some some of us may be less familiar

1088
00:56:18,009 --> 00:56:25,779
with this word than others and so can I

1089
00:56:22,779 --> 00:56:28,089
jump in as Rick here um I had a similar

1090
00:56:25,779 --> 00:56:30,009
instance in a previous RFC I got

1091
00:56:28,089 --> 00:56:32,949
published where and this sort of stuff

1092
00:56:30,009 --> 00:56:34,539
is picked up by the RFC editors I I had

1093
00:56:32,949 --> 00:56:37,900
a statement talking about magic beans

1094
00:56:34,539 --> 00:56:40,900
and the RFC editors are very good copy

1095
00:56:37,900 --> 00:56:43,089
editors and they understand about the

1096
00:56:40,900 --> 00:56:45,130
use of English for non-native English

1097
00:56:43,089 --> 00:56:49,689
speakers and understanding that this is

1098
00:56:45,130 --> 00:56:51,880
legible and clear from my perspective

1099
00:56:49,689 --> 00:56:53,920
these topics are to be picked up by the

1100
00:56:51,880 --> 00:56:55,769
RFC editor and they will quiz you about

1101
00:56:53,920 --> 00:56:58,359
this and other things you didn't realize

1102
00:56:55,769 --> 00:57:01,959
okay they they they didn't pick it up

1103
00:56:58,359 --> 00:57:04,089
for our 1650 ah well perhaps we'll get a

1104
00:57:01,959 --> 00:57:06,749
different editor this time or you know I

1105
00:57:04,089 --> 00:57:09,069
I'm not sure it's worth spending time

1106
00:57:06,749 --> 00:57:10,509
working on the English language at this

1107
00:57:09,069 --> 00:57:13,209
point it's a perfectly valid I don't

1108
00:57:10,509 --> 00:57:16,959
find that I I've proposed to stick in

1109
00:57:13,209 --> 00:57:18,459
four words here well we we have an

1110
00:57:16,959 --> 00:57:21,098
opportunity here we have a room full of

1111
00:57:18,459 --> 00:57:23,469
I mentioned some non-native English

1112
00:57:21,099 --> 00:57:25,179
speakers does anyone who image is their

1113
00:57:23,469 --> 00:57:34,449
second language have an opinion about

1114
00:57:25,179 --> 00:57:37,299
the word contraindicated yes I think

1115
00:57:34,449 --> 00:57:40,689
it's it's it's fairly far out in my

1116
00:57:37,299 --> 00:57:44,079
vocabulary at least it's not obvious

1117
00:57:40,689 --> 00:57:46,420
not one word which is like the immediate

1118
00:57:44,079 --> 00:57:47,890
springs to mind of what that means so if

1119
00:57:46,420 --> 00:57:51,699
you can change it to something simpler I

1120
00:57:47,890 --> 00:57:54,009
think that's there is a point in it okay

1121
00:57:51,699 --> 00:57:55,900
so I would propose then to just leave it

1122
00:57:54,009 --> 00:57:59,079
for the copy editors and and not deal

1123
00:57:55,900 --> 00:57:59,920
with it now and I think that's the last

1124
00:57:59,079 --> 00:58:04,170
of my slides

1125
00:57:59,920 --> 00:58:04,170
yeah all right yes

1126
00:58:05,190 --> 00:58:15,930
thank you Scott any questions thanks

1127
00:58:07,380 --> 00:58:18,890
okay goodbye Magnus so Nick next up we

1128
00:58:15,930 --> 00:58:20,910
have ed who's going to be talking about

1129
00:58:18,890 --> 00:58:33,000
what's happened in the wonderful world

1130
00:58:20,910 --> 00:58:34,589
of VP sex so hello my name is ed brain

1131
00:58:33,000 --> 00:58:37,740
you may need to be close to microphone

1132
00:58:34,589 --> 00:58:40,109
this look great and I work at Johns

1133
00:58:37,740 --> 00:58:42,598
Hopkins Applied Physics lab and I wanted

1134
00:58:40,109 --> 00:58:46,319
to just go over some updates to VP SEC

1135
00:58:42,599 --> 00:58:49,349
so the version of BT sac that went in

1136
00:58:46,319 --> 00:58:52,440
for review was VP SEC version 12

1137
00:58:49,349 --> 00:58:56,220
we made some responses to those reviews

1138
00:58:52,440 --> 00:58:58,559
which was BP section 13 none of the

1139
00:58:56,220 --> 00:59:00,328
changes or comments were significant

1140
00:58:58,559 --> 00:59:01,770
certainly nothing that changed the

1141
00:59:00,329 --> 00:59:04,380
processing or the data structures

1142
00:59:01,770 --> 00:59:06,059
associated with the protocol so it's

1143
00:59:04,380 --> 00:59:08,280
used up a little extra time while we

1144
00:59:06,059 --> 00:59:10,740
have the working group together I wanted

1145
00:59:08,280 --> 00:59:12,299
to also talk about some of the

1146
00:59:10,740 --> 00:59:15,240
interoperability work that we are doing

1147
00:59:12,299 --> 00:59:16,288
and some policy rules associated with to

1148
00:59:15,240 --> 00:59:18,930
see if the working group had any

1149
00:59:16,289 --> 00:59:20,549
comments on on those before before the

1150
00:59:18,930 --> 00:59:24,538
internet drafts associated with them

1151
00:59:20,549 --> 00:59:27,869
would come up on the list so for BP SEC

1152
00:59:24,539 --> 00:59:29,730
12 the the general review came back with

1153
00:59:27,869 --> 00:59:31,829
ready with nits there were some very

1154
00:59:29,730 --> 00:59:34,230
very minor comments associated with

1155
00:59:31,829 --> 00:59:36,299
making sure that we had spelled out

1156
00:59:34,230 --> 00:59:38,660
acronyms before they were used or there

1157
00:59:36,299 --> 00:59:42,020
was an extra space in between two words

1158
00:59:38,660 --> 00:59:45,420
and we fix all of those without any fuss

1159
00:59:42,020 --> 00:59:48,270
we did not get sector review comments

1160
00:59:45,420 --> 00:59:50,400
back I believe that they were initially

1161
00:59:48,270 --> 00:59:53,279
requested to be do about a week ago on

1162
00:59:50,400 --> 00:59:54,990
November 14th but we don't have an

1163
00:59:53,279 --> 00:59:56,430
update on that so if anyone does have an

1164
00:59:54,990 --> 00:59:58,379
update on that or if there's a way that

1165
00:59:56,430 --> 01:00:03,240
we could appropriately ask for an update

1166
00:59:58,380 --> 01:00:04,859
that would be appreciated otherwise the

1167
01:00:03,240 --> 01:00:07,379
only other reviews that came in the

1168
01:00:04,859 --> 01:00:09,839
Ayana reviews or were not significant

1169
01:00:07,380 --> 01:00:12,480
and it talked about the question of how

1170
01:00:09,839 --> 01:00:15,509
do we look at the registries from the

1171
01:00:12,480 --> 01:00:17,640
point of view of BP is an RFC 50 50 and

1172
01:00:15,510 --> 01:00:18,780
I think that we came to an understanding

1173
01:00:17,640 --> 01:00:22,379
there

1174
01:00:18,780 --> 01:00:23,880
in particular the the Ayana updates most

1175
01:00:22,380 --> 01:00:26,520
recently where that we converged on

1176
01:00:23,880 --> 01:00:28,890
these registry questions the new bundle

1177
01:00:26,520 --> 01:00:32,190
protocol specification VP Biss will

1178
01:00:28,890 --> 01:00:33,750
register bpv seven block types and we

1179
01:00:32,190 --> 01:00:37,050
will not have conflict with those block

1180
01:00:33,750 --> 01:00:39,360
types and RFC 50:50 the BP sec document

1181
01:00:37,050 --> 01:00:40,590
had called out block types two and three

1182
01:00:39,360 --> 01:00:42,930
for the integrity block in the

1183
01:00:40,590 --> 01:00:45,600
confidentiality block we won't do that

1184
01:00:42,930 --> 01:00:48,629
because RFC 5050 block type registries

1185
01:00:45,600 --> 01:00:49,950
in v6 had already defined two and three

1186
01:00:48,630 --> 01:00:52,800
and we don't want that kind of collision

1187
01:00:49,950 --> 01:00:54,419
so these will be moved most likely to

1188
01:00:52,800 --> 01:00:56,550
eleven and twelve instead of two and

1189
01:00:54,420 --> 01:00:57,990
three it really doesn't make a

1190
01:00:56,550 --> 01:00:59,820
difference from our point of view it's

1191
01:00:57,990 --> 01:01:01,620
still all in codes within one byte so it

1192
01:00:59,820 --> 01:01:04,950
would have really practically no impact

1193
01:01:01,620 --> 01:01:08,460
on on VP sack or the size of the blocks

1194
01:01:04,950 --> 01:01:10,589
and in VP sack version thirteen I

1195
01:01:08,460 --> 01:01:12,270
updated those to be eleven and twelve I

1196
01:01:10,590 --> 01:01:14,340
will probably have to publish a fourteen

1197
01:01:12,270 --> 01:01:17,400
which I'm going to wait on for SEC

1198
01:01:14,340 --> 01:01:18,600
sector review when I won't even put

1199
01:01:17,400 --> 01:01:20,850
eleven and twelve and I think the right

1200
01:01:18,600 --> 01:01:23,930
thing to do is to say as assigned by

1201
01:01:20,850 --> 01:01:26,310
iana or whatever the appropriate text is

1202
01:01:23,930 --> 01:01:28,919
Rick unless there's some compelling

1203
01:01:26,310 --> 01:01:31,680
reason why the values 11 and 12 have

1204
01:01:28,920 --> 01:01:34,590
meaning then just ask for the for some

1205
01:01:31,680 --> 01:01:37,500
numbers indeed and and really as long as

1206
01:01:34,590 --> 01:01:39,330
it's less than I think 22 or so which is

1207
01:01:37,500 --> 01:01:41,100
what what you can pack into a seaboard

1208
01:01:39,330 --> 01:01:44,549
mic without going into two bytes that

1209
01:01:41,100 --> 01:01:46,980
would be our preference so but to

1210
01:01:44,550 --> 01:01:49,860
respond to the to the comments that we

1211
01:01:46,980 --> 01:01:51,330
gotten to date we put out a VP 613 we

1212
01:01:49,860 --> 01:01:53,760
made all of the minor changes we

1213
01:01:51,330 --> 01:01:55,740
corrected the gen our nets and we

1214
01:01:53,760 --> 01:01:57,090
cleaned up some other terminology in

1215
01:01:55,740 --> 01:01:58,859
particular there was some leftover

1216
01:01:57,090 --> 01:02:00,960
terminology that talked about key

1217
01:01:58,860 --> 01:02:03,390
parameters as opposed to just parameters

1218
01:02:00,960 --> 01:02:05,430
and there really isn't a sense of

1219
01:02:03,390 --> 01:02:07,020
parameters and key parameters they are

1220
01:02:05,430 --> 01:02:09,779
all just parameters so we cleaned that

1221
01:02:07,020 --> 01:02:11,370
language up actually walking through the

1222
01:02:09,780 --> 01:02:14,250
description the text-based description

1223
01:02:11,370 --> 01:02:17,700
of example blocks in an example bundle

1224
01:02:14,250 --> 01:02:20,100
the text did not match the figure which

1225
01:02:17,700 --> 01:02:21,810
was surprising when I went through and

1226
01:02:20,100 --> 01:02:24,299
did a final read-through so we made a

1227
01:02:21,810 --> 01:02:26,279
few minor Corrections to make sure that

1228
01:02:24,300 --> 01:02:30,810
the text matched the figure the figure

1229
01:02:26,280 --> 01:02:32,160
was correct and then really because we

1230
01:02:30,810 --> 01:02:34,440
had made a

1231
01:02:32,160 --> 01:02:36,930
terminology change from security from

1232
01:02:34,440 --> 01:02:40,260
cipher suite to security context we made

1233
01:02:36,930 --> 01:02:42,779
sure that we had used the proper

1234
01:02:40,260 --> 01:02:44,369
terminology security context everywhere

1235
01:02:42,780 --> 01:02:45,960
if that was needed in the document so

1236
01:02:44,369 --> 01:02:47,190
these were all clean up things nothing

1237
01:02:45,960 --> 01:02:50,400
that changed the standard the data

1238
01:02:47,190 --> 01:02:52,470
structures or its processing so what is

1239
01:02:50,400 --> 01:02:54,960
left once we get the security reviews

1240
01:02:52,470 --> 01:02:57,839
back we will apply any comments that we

1241
01:02:54,960 --> 01:03:00,180
get we did get an initial review of BP

1242
01:02:57,839 --> 01:03:02,640
SEC version 6 even though that was seven

1243
01:03:00,180 --> 01:03:05,098
versions ago there really has not been

1244
01:03:02,640 --> 01:03:07,170
significant technical change to the

1245
01:03:05,099 --> 01:03:09,839
document is but mostly clarifying text

1246
01:03:07,170 --> 01:03:12,809
some of which was responding to the

1247
01:03:09,839 --> 01:03:15,299
comments that we got from BP SEC 6

1248
01:03:12,809 --> 01:03:17,280
sector review so I think that we're good

1249
01:03:15,299 --> 01:03:19,470
there we're not expecting any

1250
01:03:17,280 --> 01:03:21,270
significant problems or changes or

1251
01:03:19,470 --> 01:03:23,459
showstoppers coming back and we do have

1252
01:03:21,270 --> 01:03:27,119
the same reviewer as the person who

1253
01:03:23,460 --> 01:03:30,030
reviewed this seven versions ago so I

1254
01:03:27,119 --> 01:03:32,039
think we'll be ok we'll update the Ino

1255
01:03:30,030 --> 01:03:33,960
section as we need to we will make sure

1256
01:03:32,039 --> 01:03:36,660
the only other thing that has come up is

1257
01:03:33,960 --> 01:03:39,599
the BP SEC document makes a reference to

1258
01:03:36,660 --> 01:03:41,910
something called PID reference as we use

1259
01:03:39,599 --> 01:03:45,000
it in the document it just means the

1260
01:03:41,910 --> 01:03:48,839
reference to the security source a ID

1261
01:03:45,000 --> 01:03:51,299
however someone noted that in BP v6

1262
01:03:48,839 --> 01:03:53,460
terminology ID reference has a specific

1263
01:03:51,299 --> 01:03:56,279
meaning which is a pointer into a

1264
01:03:53,460 --> 01:03:59,220
dictionary in a primary block in BP

1265
01:03:56,279 --> 01:04:00,960
version 6 and so that is something we

1266
01:03:59,220 --> 01:04:03,149
should not use we should just say Eid

1267
01:04:00,960 --> 01:04:04,799
instead of Eid reference so we'll clean

1268
01:04:03,150 --> 01:04:06,539
that up in the next version to make sure

1269
01:04:04,799 --> 01:04:08,880
that that there is no terminology

1270
01:04:06,539 --> 01:04:12,680
collision and otherwise any review

1271
01:04:08,880 --> 01:04:12,680
comments will will apply as we get them

1272
01:04:12,740 --> 01:04:18,270
so unless there are any other specific

1273
01:04:15,270 --> 01:04:21,299
questions or concerns around BP SEC as a

1274
01:04:18,270 --> 01:04:23,640
as a standard in review or recommend a

1275
01:04:21,299 --> 01:04:31,460
standard in review I wanted to move on

1276
01:04:23,640 --> 01:04:34,078
talked about a few other things so we

1277
01:04:31,460 --> 01:04:36,900
introduced the concept of a security

1278
01:04:34,079 --> 01:04:40,109
context separate from a cipher suite

1279
01:04:36,900 --> 01:04:42,510
because a cipher suite is a suite of

1280
01:04:40,109 --> 01:04:44,640
tools that you would use to apply

1281
01:04:42,510 --> 01:04:45,990
different security constructs into the

1282
01:04:44,640 --> 01:04:47,850
bundle to generate

1283
01:04:45,990 --> 01:04:50,700
Saltz to generate ciphertext from plain

1284
01:04:47,850 --> 01:04:53,279
text however a cipher suite assumes a

1285
01:04:50,700 --> 01:04:56,339
set of configurations and one of the

1286
01:04:53,280 --> 01:04:59,070
things that we would typically see such

1287
01:04:56,340 --> 01:05:01,020
as in IPSec is a security Association a

1288
01:04:59,070 --> 01:05:03,260
security Association would be some

1289
01:05:01,020 --> 01:05:05,369
predefined or pre-configured set of

1290
01:05:03,260 --> 01:05:08,610
configurations that could be shared and

1291
01:05:05,369 --> 01:05:11,160
to end that's not necessarily one-to-one

1292
01:05:08,610 --> 01:05:14,040
a reasonable thing to expect in a delay

1293
01:05:11,160 --> 01:05:16,799
tolerant Network however the concept

1294
01:05:14,040 --> 01:05:19,200
that there is a security context around

1295
01:05:16,800 --> 01:05:21,960
a cipher suite which is the cipher suite

1296
01:05:19,200 --> 01:05:23,759
plus the configuration or understanding

1297
01:05:21,960 --> 01:05:25,920
of configuration associated with how to

1298
01:05:23,760 --> 01:05:28,740
use and apply that cipher suite is a

1299
01:05:25,920 --> 01:05:31,650
useful concept and if we just use the

1300
01:05:28,740 --> 01:05:33,868
term cipher suite it doesn't imply

1301
01:05:31,650 --> 01:05:36,869
cipher suite plus that additional

1302
01:05:33,869 --> 01:05:39,240
contextual information so to make sure

1303
01:05:36,869 --> 01:05:41,550
that there was not a confusion of those

1304
01:05:39,240 --> 01:05:44,729
terms we decided not to say cipher suite

1305
01:05:41,550 --> 01:05:47,550
we decided to say security context in

1306
01:05:44,730 --> 01:05:48,810
that to then give an example of how this

1307
01:05:47,550 --> 01:05:50,910
would be used we define some

1308
01:05:48,810 --> 01:05:53,220
interoperability security context and

1309
01:05:50,910 --> 01:05:56,850
there is one called interoperable

1310
01:05:53,220 --> 01:05:58,560
Interop - SC - zero zero which is a

1311
01:05:56,850 --> 01:06:00,690
working group document and presumably

1312
01:05:58,560 --> 01:06:03,859
would would go forward or once we make

1313
01:06:00,690 --> 01:06:06,450
sure there are no changes in BP SEC and

1314
01:06:03,859 --> 01:06:09,240
we have then started looking past the

1315
01:06:06,450 --> 01:06:11,939
initial draft security context into what

1316
01:06:09,240 --> 01:06:14,549
other ones might be useful to have and

1317
01:06:11,940 --> 01:06:17,369
so here are three examples of current

1318
01:06:14,550 --> 01:06:19,080
thinking on security context concepts

1319
01:06:17,369 --> 01:06:20,400
that are out there I wanted to put them

1320
01:06:19,080 --> 01:06:24,509
in front of the working group to see if

1321
01:06:20,400 --> 01:06:26,400
there were any comments the first is is

1322
01:06:24,510 --> 01:06:28,859
there value either in the existing

1323
01:06:26,400 --> 01:06:29,520
interoperability security context or in

1324
01:06:28,859 --> 01:06:34,020
a new one

1325
01:06:29,520 --> 01:06:35,730
to add a self signing bib and for those

1326
01:06:34,020 --> 01:06:38,580
of you who are familiar with the context

1327
01:06:35,730 --> 01:06:41,280
of a bib a bib is a security block that

1328
01:06:38,580 --> 01:06:43,890
is added to a bundle and the block type

1329
01:06:41,280 --> 01:06:49,020
specific data in the bib has among other

1330
01:06:43,890 --> 01:06:51,299
things a a result a signed integrity

1331
01:06:49,020 --> 01:06:55,290
signature over the target block that it

1332
01:06:51,300 --> 01:06:57,840
is targeting and is there a value at

1333
01:06:55,290 --> 01:06:58,690
having a separate signature result in

1334
01:06:57,840 --> 01:07:02,020
the bib that

1335
01:06:58,690 --> 01:07:13,960
is a self signature over itself to see

1336
01:07:02,020 --> 01:07:16,569
if anything had changed in the bib and

1337
01:07:13,960 --> 01:07:18,670
and want one of the reasons that that

1338
01:07:16,569 --> 01:07:20,380
had come so so there is not a draft

1339
01:07:18,670 --> 01:07:22,780
associated with any of these three

1340
01:07:20,380 --> 01:07:24,880
things and one of the one of the items

1341
01:07:22,780 --> 01:07:27,280
that we will propose is another internet

1342
01:07:24,880 --> 01:07:28,630
draft will show up that has either 300

1343
01:07:27,280 --> 01:07:30,970
net rafts or one that has multiple

1344
01:07:28,630 --> 01:07:33,640
security contacts in it which will have

1345
01:07:30,970 --> 01:07:36,730
some of these ideas and so perhaps at

1346
01:07:33,640 --> 01:07:39,578
the next IETF if there is time we could

1347
01:07:36,730 --> 01:07:41,260
present it as a draft but just to prime

1348
01:07:39,579 --> 01:07:43,000
that discussion we wanted to bring forth

1349
01:07:41,260 --> 01:07:45,460
some of the ideas here to see if there

1350
01:07:43,000 --> 01:07:47,920
was a strong sense or useful comments

1351
01:07:45,460 --> 01:07:53,700
that we could get prior to writing such

1352
01:07:47,920 --> 01:07:56,170
an internet draft Scott brewery just

1353
01:07:53,700 --> 01:07:59,348
asking about this and really asking I

1354
01:07:56,170 --> 01:08:06,339
don't know enough to comment but would

1355
01:07:59,349 --> 01:08:08,500
this self signature on the bib be would

1356
01:08:06,339 --> 01:08:12,759
it be obviated by using asymmetric

1357
01:08:08,500 --> 01:08:14,470
encryption or or would you even need it

1358
01:08:12,760 --> 01:08:19,600
even if if you have public and private

1359
01:08:14,470 --> 01:08:22,509
keys so so it could be but again if this

1360
01:08:19,600 --> 01:08:24,940
were a security context if the security

1361
01:08:22,509 --> 01:08:27,040
context has a superset of the cipher

1362
01:08:24,939 --> 01:08:29,469
suites used it would say if you are

1363
01:08:27,040 --> 01:08:31,719
using a security context the security

1364
01:08:29,469 --> 01:08:34,060
context would say here are the cipher

1365
01:08:31,719 --> 01:08:35,890
suites that we would be using and we

1366
01:08:34,060 --> 01:08:38,830
would use these particular cipher suites

1367
01:08:35,890 --> 01:08:41,020
to generate target signatures and self

1368
01:08:38,830 --> 01:08:43,778
signatures and handle them in this way

1369
01:08:41,020 --> 01:08:45,759
if you then were to chain if you were to

1370
01:08:43,779 --> 01:08:46,960
use a different cipher suite with a

1371
01:08:45,759 --> 01:08:48,969
different context it would be a

1372
01:08:46,960 --> 01:08:51,130
different security context not this one

1373
01:08:48,969 --> 01:08:53,890
so so a concept around the security

1374
01:08:51,130 --> 01:08:56,859
context is it is the cipher suites that

1375
01:08:53,890 --> 01:08:58,750
you would use and the context around it

1376
01:08:56,859 --> 01:09:01,060
it isn't we could keep the same security

1377
01:08:58,750 --> 01:09:05,460
context and swap cipher Suites in and

1378
01:09:01,060 --> 01:09:05,460
out under the hood this is permanent

1379
01:09:09,658 --> 01:09:15,809
Schiaparelli again so that I I think

1380
01:09:13,560 --> 01:09:18,900
that wasn't exactly my question I think

1381
01:09:15,810 --> 01:09:23,759
you you asked what would it be valuable

1382
01:09:18,899 --> 01:09:27,719
to have a self signing bib and and my

1383
01:09:23,759 --> 01:09:29,520
question was do you need it do you need

1384
01:09:27,719 --> 01:09:33,089
self signature on a bib

1385
01:09:29,520 --> 01:09:35,819
if the cipher suite did you happen to be

1386
01:09:33,089 --> 01:09:41,100
using is based on asymmetric encryption

1387
01:09:35,819 --> 01:09:44,880
or do you only need self signature on a

1388
01:09:41,100 --> 01:09:48,270
bib if you've got symmetric keys III

1389
01:09:44,880 --> 01:09:51,140
don't so I don't fully understand that

1390
01:09:48,270 --> 01:09:54,089
question because because if you have

1391
01:09:51,140 --> 01:09:55,830
multiple parameters in the security

1392
01:09:54,089 --> 01:09:58,800
block itself do you want an integrity

1393
01:09:55,830 --> 01:10:02,309
signature over those parameters or if

1394
01:09:58,800 --> 01:10:04,469
you look down to one of the questions

1395
01:10:02,310 --> 01:10:06,570
that we have for bib a little bit couple

1396
01:10:04,469 --> 01:10:08,850
bullet points down would you also want

1397
01:10:06,570 --> 01:10:10,830
to include things like the block

1398
01:10:08,850 --> 01:10:12,510
processing flags of the bib in the

1399
01:10:10,830 --> 01:10:14,670
integrity signature and I think that

1400
01:10:12,510 --> 01:10:17,159
deciding whether you want to protect

1401
01:10:14,670 --> 01:10:18,659
changes to the bib block itself is

1402
01:10:17,159 --> 01:10:20,820
different from whether you're using

1403
01:10:18,659 --> 01:10:24,239
symmetric or asymmetric key to generate

1404
01:10:20,820 --> 01:10:25,590
some of the contents of the bib block so

1405
01:10:24,239 --> 01:10:27,139
I thought that's I I don't know that I'm

1406
01:10:25,590 --> 01:10:29,820
understanding that question

1407
01:10:27,140 --> 01:10:32,370
so if I create a if I create a security

1408
01:10:29,820 --> 01:10:34,080
bib it will have security results in it

1409
01:10:32,370 --> 01:10:36,690
but it will have a lot of other material

1410
01:10:34,080 --> 01:10:38,880
in it and I don't want an attacker for

1411
01:10:36,690 --> 01:10:41,070
example to twiddle some bits in the bib

1412
01:10:38,880 --> 01:10:43,890
in a parameter field or somewhere else

1413
01:10:41,070 --> 01:10:46,980
that that never touched a cipher suite

1414
01:10:43,890 --> 01:10:48,600
symmetric key or a symmetric key okay so

1415
01:10:46,980 --> 01:10:50,009
sorry Rick just jumping into the queue

1416
01:10:48,600 --> 01:10:54,360
here just because I can't be bothered to

1417
01:10:50,010 --> 01:10:55,770
stand up and I if I understand what

1418
01:10:54,360 --> 01:10:57,870
you're saying is given now security

1419
01:10:55,770 --> 01:11:00,060
context is more than just the cipher

1420
01:10:57,870 --> 01:11:02,929
suite selection there is also extra

1421
01:11:00,060 --> 01:11:05,760
metadata that is carried in that context

1422
01:11:02,929 --> 01:11:08,010
you could use a cipher suite that's self

1423
01:11:05,760 --> 01:11:11,659
protecting in some way probably probably

1424
01:11:08,010 --> 01:11:14,429
key pair but that other metadata isn't

1425
01:11:11,659 --> 01:11:16,530
isn't covered under that protection and

1426
01:11:14,429 --> 01:11:17,940
therefore your question is what if you

1427
01:11:16,530 --> 01:11:18,700
could put a bib on that and then you put

1428
01:11:17,940 --> 01:11:20,799
an endless

1429
01:11:18,700 --> 01:11:22,840
recursive loop of self signing each

1430
01:11:20,800 --> 01:11:25,180
other so so you probably wouldn't want

1431
01:11:22,840 --> 01:11:28,180
an endless but but if you look at the

1432
01:11:25,180 --> 01:11:30,550
contents of a big a bib would say this

1433
01:11:28,180 --> 01:11:33,780
is the security context identifier that

1434
01:11:30,550 --> 01:11:37,540
I'm using then these are the parameters

1435
01:11:33,780 --> 01:11:40,660
for that security context and then here

1436
01:11:37,540 --> 01:11:43,870
is a set of key value pairs of results

1437
01:11:40,660 --> 01:11:45,519
the result type 1 has result value and

1438
01:11:43,870 --> 01:11:49,660
yes that value would have been generated

1439
01:11:45,520 --> 01:11:52,690
by whatever cipher suite was used but if

1440
01:11:49,660 --> 01:11:55,420
I see if I am a malicious person I'm not

1441
01:11:52,690 --> 01:11:57,940
but if I were a malicious person I would

1442
01:11:55,420 --> 01:12:00,340
come back and say if I see a bib I could

1443
01:11:57,940 --> 01:12:04,599
change the security context ID from a 7

1444
01:12:00,340 --> 01:12:08,140
2 & 8 & and that would result in failure

1445
01:12:04,600 --> 01:12:10,120
perhaps to to verify at a security

1446
01:12:08,140 --> 01:12:11,950
Waypoint or a destination because I have

1447
01:12:10,120 --> 01:12:14,620
changed something about how we would

1448
01:12:11,950 --> 01:12:16,450
apply a cipher suite but you might be

1449
01:12:14,620 --> 01:12:18,130
able to catch that even sooner and say

1450
01:12:16,450 --> 01:12:21,250
specifically something had happened with

1451
01:12:18,130 --> 01:12:22,960
the parameters as opposed to the the

1452
01:12:21,250 --> 01:12:25,180
result data and is there value in that

1453
01:12:22,960 --> 01:12:28,510
or if someone were to change the block

1454
01:12:25,180 --> 01:12:32,260
processing flags of a bib would you want

1455
01:12:28,510 --> 01:12:35,920
to understand that and then react to

1456
01:12:32,260 --> 01:12:39,250
that as well as opposed to ignoring it

1457
01:12:35,920 --> 01:12:41,080
and that's the kind of extra data around

1458
01:12:39,250 --> 01:12:42,850
the cipher suite results and the

1459
01:12:41,080 --> 01:12:45,940
question is is there value in signing

1460
01:12:42,850 --> 01:12:47,560
that Rick again I would solve that

1461
01:12:45,940 --> 01:12:51,969
problem by using bundle and bundle

1462
01:12:47,560 --> 01:12:55,360
encapsulation ok I would just at that

1463
01:12:51,970 --> 01:12:57,160
point it gets so meta in terms that I

1464
01:12:55,360 --> 01:12:58,900
would take a step back and say just

1465
01:12:57,160 --> 01:13:09,340
encapsulate the whole bundle and then I

1466
01:12:58,900 --> 01:13:12,750
can guarantee integrity of it I guess I

1467
01:13:09,340 --> 01:13:14,500
guess in my mind the the endless

1468
01:13:12,750 --> 01:13:17,050
recursive loop that you're talking about

1469
01:13:14,500 --> 01:13:21,040
is is the issue and maybe not maybe

1470
01:13:17,050 --> 01:13:22,750
incorrectly but but why would the self

1471
01:13:21,040 --> 01:13:27,250
signature itself will not be susceptible

1472
01:13:22,750 --> 01:13:29,020
to being fiddled with so that it no

1473
01:13:27,250 --> 01:13:30,280
longer works there's probably a reason

1474
01:13:29,020 --> 01:13:31,380
for that but I don't know what it is

1475
01:13:30,280 --> 01:13:34,469
well know

1476
01:13:31,380 --> 01:13:37,840
and is the impact any different if

1477
01:13:34,470 --> 01:13:40,030
whether you I take your point that

1478
01:13:37,840 --> 01:13:42,850
earlier in the path of transit of that

1479
01:13:40,030 --> 01:13:44,259
bundle an intermediate node may say hey

1480
01:13:42,850 --> 01:13:44,770
the integrity signatures have been

1481
01:13:44,260 --> 01:13:49,360
tampered with

1482
01:13:44,770 --> 01:13:51,010
mmm-hmm drop is that I suppose the point

1483
01:13:49,360 --> 01:13:52,780
is that you could do that check earlier

1484
01:13:51,010 --> 01:13:54,160
in the path or could you not I suppose

1485
01:13:52,780 --> 01:13:57,070
with the security context where an

1486
01:13:54,160 --> 01:14:00,550
intermediate node could not work out

1487
01:13:57,070 --> 01:14:01,920
where the tamper has occurred I I'm

1488
01:14:00,550 --> 01:14:05,800
trying to work through the use case

1489
01:14:01,920 --> 01:14:10,930
quite simply in there is data in a bib

1490
01:14:05,800 --> 01:14:12,280
that is not integrity site right so so

1491
01:14:10,930 --> 01:14:14,320
there are three ways that you could

1492
01:14:12,280 --> 01:14:17,380
handle that one is to allow data in a

1493
01:14:14,320 --> 01:14:20,040
bib to just never be integrity site the

1494
01:14:17,380 --> 01:14:22,210
second is take the entire bundle and

1495
01:14:20,040 --> 01:14:25,360
encapsulate it in a different bundle and

1496
01:14:22,210 --> 01:14:27,760
then integrity sign the intention which

1497
01:14:25,360 --> 01:14:30,790
is a little heavyweight yeah the third

1498
01:14:27,760 --> 01:14:33,640
is to say of the data that is not

1499
01:14:30,790 --> 01:14:35,920
integrity protected in the bib add an

1500
01:14:33,640 --> 01:14:38,200
integrity signature to it which does not

1501
01:14:35,920 --> 01:14:40,660
force you into infinite recursion it

1502
01:14:38,200 --> 01:14:43,750
simply says you can you can construct an

1503
01:14:40,660 --> 01:14:46,650
integrity signature over the data that

1504
01:14:43,750 --> 01:14:50,950
is not signed and carry that signature

1505
01:14:46,650 --> 01:14:52,179
I'm gonna drill the line okay because

1506
01:14:50,950 --> 01:14:53,590
let's take this to the list this is

1507
01:14:52,180 --> 01:14:55,870
really interesting but I think we all

1508
01:14:53,590 --> 01:14:57,520
need to have a long think about it so

1509
01:14:55,870 --> 01:15:00,970
absolutely and point being is that I

1510
01:14:57,520 --> 01:15:03,730
wanted to okay so I think there's

1511
01:15:00,970 --> 01:15:07,150
interest in taking this to the list and

1512
01:15:03,730 --> 01:15:09,280
just in the points we got a little bit

1513
01:15:07,150 --> 01:15:11,830
more time the other is a single target

1514
01:15:09,280 --> 01:15:13,269
multiple result something else that came

1515
01:15:11,830 --> 01:15:15,730
back was it would be nice to have a

1516
01:15:13,270 --> 01:15:17,800
security context that would say here's a

1517
01:15:15,730 --> 01:15:21,370
cipher suite you don't need to

1518
01:15:17,800 --> 01:15:24,400
necessarily have a single signature with

1519
01:15:21,370 --> 01:15:26,650
a single key over the target data what

1520
01:15:24,400 --> 01:15:29,379
we could do is provide multiple

1521
01:15:26,650 --> 01:15:31,269
parameters for the security context and

1522
01:15:29,380 --> 01:15:33,820
you would generate multiple results and

1523
01:15:31,270 --> 01:15:36,420
the security context documentation would

1524
01:15:33,820 --> 01:15:39,880
then come back and say if any of these

1525
01:15:36,420 --> 01:15:41,950
verify then then the block has verified

1526
01:15:39,880 --> 01:15:44,620
and it would be okay or some quorum of

1527
01:15:41,950 --> 01:15:44,949
them verify and that might be a way of

1528
01:15:44,620 --> 01:15:47,590
saying

1529
01:15:44,949 --> 01:15:49,900
if I don't know all of the recipients

1530
01:15:47,590 --> 01:15:52,570
and I don't have a single multicast a ID

1531
01:15:49,900 --> 01:15:54,670
key then I can I can carry multiple

1532
01:15:52,570 --> 01:15:56,739
signatures and we think that that's a

1533
01:15:54,670 --> 01:15:58,960
reasonable thing to do as opposed to

1534
01:15:56,739 --> 01:16:01,480
having multiple bid blocks or multiple

1535
01:15:58,960 --> 01:16:03,160
individual entries you could capture it

1536
01:16:01,480 --> 01:16:05,129
in a single security context and that

1537
01:16:03,160 --> 01:16:08,590
would be a little less bytes on the wire

1538
01:16:05,130 --> 01:16:10,660
Rick again I can see some as far as I've

1539
01:16:08,590 --> 01:16:13,660
understood it I think I can see some

1540
01:16:10,660 --> 01:16:17,889
value in that you to handle the case of

1541
01:16:13,660 --> 01:16:20,860
expired certificates so you could multi

1542
01:16:17,890 --> 01:16:22,390
sign with out-of-date information that

1543
01:16:20,860 --> 01:16:24,219
at least the person that the other one

1544
01:16:22,390 --> 01:16:28,679
knows they can unpack it and know it's

1545
01:16:24,219 --> 01:16:31,030
out of date because one of the targets

1546
01:16:28,679 --> 01:16:33,340
validated the integrity but they knew

1547
01:16:31,030 --> 01:16:35,530
they were using an old key or something

1548
01:16:33,340 --> 01:16:37,719
like that yeah that's a great idea

1549
01:16:35,530 --> 01:16:40,059
particularly if you have key rotation

1550
01:16:37,719 --> 01:16:42,640
schedules or something else you can go

1551
01:16:40,060 --> 01:16:44,530
over it's a DTN you could be away for

1552
01:16:42,640 --> 01:16:45,940
long for longer than you were expected

1553
01:16:44,530 --> 01:16:49,239
and all your certificates expired while

1554
01:16:45,940 --> 01:16:50,650
you were away yeah so that is good

1555
01:16:49,239 --> 01:16:54,610
that's good feedback I'll take it from

1556
01:16:50,650 --> 01:16:56,320
the notes and then the last was for for

1557
01:16:54,610 --> 01:16:59,380
even just the interoperability security

1558
01:16:56,320 --> 01:17:02,860
context that we have right now the

1559
01:16:59,380 --> 01:17:07,120
integrity block only captures integrity

1560
01:17:02,860 --> 01:17:09,880
over the data portion of its target so

1561
01:17:07,120 --> 01:17:13,239
if it is if it's looking at target block

1562
01:17:09,880 --> 01:17:15,160
b1 it will look at B ones block type

1563
01:17:13,239 --> 01:17:17,199
specific data fields and generate a

1564
01:17:15,160 --> 01:17:19,840
signature over that however there's an

1565
01:17:17,199 --> 01:17:22,719
entire block header separate from the

1566
01:17:19,840 --> 01:17:25,239
data there is no reason why you could

1567
01:17:22,719 --> 01:17:27,370
not take the entire block or large

1568
01:17:25,239 --> 01:17:29,139
pieces of the block canonicalize it and

1569
01:17:27,370 --> 01:17:30,730
generate the integrity signature over

1570
01:17:29,140 --> 01:17:32,620
more than just the block type data

1571
01:17:30,730 --> 01:17:34,750
fields and there are three things at

1572
01:17:32,620 --> 01:17:36,460
least that could be done there one is we

1573
01:17:34,750 --> 01:17:37,960
could leave it as is and only generate

1574
01:17:36,460 --> 01:17:40,510
the integrity signature over the block

1575
01:17:37,960 --> 01:17:42,840
type specific data the other is generate

1576
01:17:40,510 --> 01:17:45,520
a signal signature over the entire

1577
01:17:42,840 --> 01:17:47,050
extension block or at least a superset

1578
01:17:45,520 --> 01:17:50,350
of just the block type specific data

1579
01:17:47,050 --> 01:17:52,300
which would which could be done or the

1580
01:17:50,350 --> 01:17:54,489
third is you generate two signatures

1581
01:17:52,300 --> 01:17:56,110
which seems like a lot of work one over

1582
01:17:54,489 --> 01:17:57,968
the block type specific data and one

1583
01:17:56,110 --> 01:17:58,630
separately over the block extension data

1584
01:17:57,969 --> 01:18:00,370
and

1585
01:17:58,630 --> 01:18:02,199
have rules as to whether both are

1586
01:18:00,370 --> 01:18:04,630
required or one is a nice to have in

1587
01:18:02,199 --> 01:18:07,089
case someone changes a block processing

1588
01:18:04,630 --> 01:18:14,830
flag I know if there were any opinions

1589
01:18:07,090 --> 01:18:16,870
about that and then the last one is the

1590
01:18:14,830 --> 01:18:19,360
sim the same question reimagined for a

1591
01:18:16,870 --> 01:18:22,120
confidentiality block which is again the

1592
01:18:19,360 --> 01:18:24,219
ECB will replace the block type specific

1593
01:18:22,120 --> 01:18:26,949
data of its target with ciphertext and

1594
01:18:24,219 --> 01:18:29,110
it will generate a signature over that

1595
01:18:26,949 --> 01:18:31,540
ciphertext is there then value in having

1596
01:18:29,110 --> 01:18:34,570
a separate plaintext signature over the

1597
01:18:31,540 --> 01:18:38,530
the non block type specific data fields

1598
01:18:34,570 --> 01:18:41,110
of its target the block type ID the the

1599
01:18:38,530 --> 01:18:42,849
block number the block processing flags

1600
01:18:41,110 --> 01:18:47,070
things like that then that information

1601
01:18:42,850 --> 01:18:49,630
is pretty canonical isn't it I'd say I

1602
01:18:47,070 --> 01:18:50,889
sorry Rick Taylor yeah I'm gonna have to

1603
01:18:49,630 --> 01:18:52,870
think about this I'm gonna have to think

1604
01:18:50,889 --> 01:18:55,060
about the representation because I think

1605
01:18:52,870 --> 01:18:57,010
this comes down to do we have a

1606
01:18:55,060 --> 01:18:58,780
canonical representation of these things

1607
01:18:57,010 --> 01:19:00,730
that can be validated correctly and I

1608
01:18:58,780 --> 01:19:04,750
believe BP biz has a canonicalization

1609
01:19:00,730 --> 01:19:06,549
algorithm for extension blocks that that

1610
01:19:04,750 --> 01:19:09,400
this could be used I believe that's the

1611
01:19:06,550 --> 01:19:12,280
case I no longer believe that that is

1612
01:19:09,400 --> 01:19:14,980
the case but but one could however a

1613
01:19:12,280 --> 01:19:16,900
security context and this is something

1614
01:19:14,980 --> 01:19:19,659
that the BP SEC document describes a

1615
01:19:16,900 --> 01:19:21,670
security context is able to define a

1616
01:19:19,659 --> 01:19:25,360
canonicalization algorithm to be used if

1617
01:19:21,670 --> 01:19:27,909
one does not so so those were some ideas

1618
01:19:25,360 --> 01:19:30,159
as we start we will start putting

1619
01:19:27,909 --> 01:19:33,610
forward some security context internet

1620
01:19:30,159 --> 01:19:35,290
drafts to describe this idea of not just

1621
01:19:33,610 --> 01:19:37,360
cipher Suites but cipher suites and

1622
01:19:35,290 --> 01:19:39,969
behavior and context configuration

1623
01:19:37,360 --> 01:19:41,860
associated with them Oh Scott burly I

1624
01:19:39,969 --> 01:19:46,380
actually think about it the

1625
01:19:41,860 --> 01:19:46,380
canonicalization we do have

1626
01:19:46,679 --> 01:19:55,330
specification in BP biz for serializing

1627
01:19:50,139 --> 01:19:57,370
a extension block and so the student the

1628
01:19:55,330 --> 01:19:59,230
serialized represented the sea boar see

1629
01:19:57,370 --> 01:20:02,199
realized representation of extension

1630
01:19:59,230 --> 01:20:04,150
block I think you could think of as

1631
01:20:02,199 --> 01:20:06,099
being the canonicalization of that

1632
01:20:04,150 --> 01:20:08,589
extension block and so in that sense we

1633
01:20:06,100 --> 01:20:10,719
do have it as long as it is there some

1634
01:20:08,590 --> 01:20:11,600
normative way of saying well here are

1635
01:20:10,719 --> 01:20:14,210
some

1636
01:20:11,600 --> 01:20:16,760
user reserved bits in the block type

1637
01:20:14,210 --> 01:20:18,590
processing flags and set them all to

1638
01:20:16,760 --> 01:20:20,420
zero or set them all to ones truncate

1639
01:20:18,590 --> 01:20:23,740
them in some way so Rick we've been

1640
01:20:20,420 --> 01:20:26,960
round this before and I believe that the

1641
01:20:23,740 --> 01:20:28,550
the the C but there's this there was a

1642
01:20:26,960 --> 01:20:30,110
working group working on C Burrell

1643
01:20:28,550 --> 01:20:34,190
signatures and certificate and key

1644
01:20:30,110 --> 01:20:36,710
material who works through all the

1645
01:20:34,190 --> 01:20:41,269
canonicalization of C bore serialization

1646
01:20:36,710 --> 01:20:42,650
rules but I'm I will need to look

1647
01:20:41,270 --> 01:20:44,360
through my notes and try and remember

1648
01:20:42,650 --> 01:20:45,589
what nerve I'm talking about but I know

1649
01:20:44,360 --> 01:20:47,269
that would be a good reference to have

1650
01:20:45,590 --> 01:20:49,190
yes I think we're gonna come up with

1651
01:20:47,270 --> 01:20:51,110
that as we define the behaviors of

1652
01:20:49,190 --> 01:20:53,150
various security contents I'm thinking

1653
01:20:51,110 --> 01:20:56,839
that works being done already for us and

1654
01:20:53,150 --> 01:20:59,719
we don't need to reinvent it so so those

1655
01:20:56,840 --> 01:21:02,210
were some security context ideas then

1656
01:20:59,720 --> 01:21:04,190
the the last topic and if we're

1657
01:21:02,210 --> 01:21:08,930
stretching on the line would before we

1658
01:21:04,190 --> 01:21:11,809
do so the the next is the BP SEC

1659
01:21:08,930 --> 01:21:14,210
document defines how security blocks can

1660
01:21:11,810 --> 01:21:16,760
be added into a bundle to implement

1661
01:21:14,210 --> 01:21:18,830
security services however there is a

1662
01:21:16,760 --> 01:21:20,780
separate out-of-band question which is

1663
01:21:18,830 --> 01:21:23,030
if i am a waypoint note or if i'm a

1664
01:21:20,780 --> 01:21:24,980
destination note how do i understand

1665
01:21:23,030 --> 01:21:28,250
whether a service needs to be in the

1666
01:21:24,980 --> 01:21:30,410
bundle or not and there's a problem with

1667
01:21:28,250 --> 01:21:32,120
encoding that information in a bundle

1668
01:21:30,410 --> 01:21:34,309
because if you go through a malicious

1669
01:21:32,120 --> 01:21:35,690
node the malicious node could remove

1670
01:21:34,310 --> 01:21:38,780
that information or put other

1671
01:21:35,690 --> 01:21:42,110
information in an example of that would

1672
01:21:38,780 --> 01:21:45,519
be if a source of a bundle adds a b ib

1673
01:21:42,110 --> 01:21:47,750
into a bundle and it goes through a a

1674
01:21:45,520 --> 01:21:50,480
malicious node the malicious node could

1675
01:21:47,750 --> 01:21:52,910
drop the b ib signature change the

1676
01:21:50,480 --> 01:21:54,559
target block if the destination doesn't

1677
01:21:52,910 --> 01:21:56,990
know that a big should have been there

1678
01:21:54,560 --> 01:21:59,330
it would not think to check the

1679
01:21:56,990 --> 01:22:01,370
integrity of the target block and would

1680
01:21:59,330 --> 01:22:04,160
pick it up and use it and so something

1681
01:22:01,370 --> 01:22:07,070
has to exist at destinations that say

1682
01:22:04,160 --> 01:22:08,900
this is what you are expected to have in

1683
01:22:07,070 --> 01:22:10,610
a bundle and when you generate bundles

1684
01:22:08,900 --> 01:22:12,259
this is what you should put in based on

1685
01:22:10,610 --> 01:22:13,820
those specifications and that's an

1686
01:22:12,260 --> 01:22:15,920
out-of-band mechanism and it's covered

1687
01:22:13,820 --> 01:22:17,929
in the vp SEC security consideration

1688
01:22:15,920 --> 01:22:19,520
document and policy cannot document

1689
01:22:17,930 --> 01:22:21,980
security considerations section and

1690
01:22:19,520 --> 01:22:23,610
policy consideration section we've

1691
01:22:21,980 --> 01:22:25,709
started looking through what that

1692
01:22:23,610 --> 01:22:28,558
could look like it is largely informed

1693
01:22:25,710 --> 01:22:30,599
by the ion implementation which is

1694
01:22:28,559 --> 01:22:32,579
thought through some of this in what

1695
01:22:30,599 --> 01:22:35,250
they call the ion second min tool and

1696
01:22:32,579 --> 01:22:37,679
and the processing rules the security

1697
01:22:35,250 --> 01:22:40,050
processing rules in in looking at this

1698
01:22:37,679 --> 01:22:42,889
we've defined three different roles that

1699
01:22:40,050 --> 01:22:45,179
a BPA from a protocol agent may have a

1700
01:22:42,889 --> 01:22:48,090
bundle protocol agent could in some

1701
01:22:45,179 --> 01:22:50,040
cases act as a security source which is

1702
01:22:48,090 --> 01:22:51,929
an agent that adds security blocks into

1703
01:22:50,040 --> 01:22:54,929
a bundle either a bundle it is creating

1704
01:22:51,929 --> 01:22:57,389
or a bundle that it is modifying before

1705
01:22:54,929 --> 01:22:59,489
retransmitting or forwarding a security

1706
01:22:57,389 --> 01:23:02,639
way point which is cases where a bundle

1707
01:22:59,489 --> 01:23:04,650
agent would verify a security service

1708
01:23:02,639 --> 01:23:06,960
like integrity before forwarding a

1709
01:23:04,650 --> 01:23:09,690
bundle and the last is when the bundle

1710
01:23:06,960 --> 01:23:12,030
agent is itself the destination of a

1711
01:23:09,690 --> 01:23:13,980
security service perhaps a nose that

1712
01:23:12,030 --> 01:23:16,380
would do decryption which may or may not

1713
01:23:13,980 --> 01:23:19,199
be the same as the bundle destination

1714
01:23:16,380 --> 01:23:21,300
itself and and those are a single node

1715
01:23:19,199 --> 01:23:25,079
could be each of those four different

1716
01:23:21,300 --> 01:23:27,360
bundles that it encounters so Rick just

1717
01:23:25,079 --> 01:23:28,710
jumping ahead of scope I have a question

1718
01:23:27,360 --> 01:23:31,889
about your security waypoints and I

1719
01:23:28,710 --> 01:23:35,969
understand this are you attempting to

1720
01:23:31,889 --> 01:23:40,050
tackle the problem of malicious

1721
01:23:35,969 --> 01:23:42,530
intermediate nodes moving corrupted

1722
01:23:40,050 --> 01:23:45,690
bundles around the Cheka Waypoint no no

1723
01:23:42,530 --> 01:23:50,880
so we're not trying to do path based

1724
01:23:45,690 --> 01:23:52,379
security the the use of the term source

1725
01:23:50,880 --> 01:23:55,050
Waypoint and destination and the

1726
01:23:52,380 --> 01:23:57,659
connotation of those terms with routing

1727
01:23:55,050 --> 01:23:59,909
and there is no expectation that there

1728
01:23:57,659 --> 01:24:02,190
is any routing or path computation for

1729
01:23:59,909 --> 01:24:04,019
expectation with that when we say

1730
01:24:02,190 --> 01:24:06,150
security source security Waypoint and

1731
01:24:04,020 --> 01:24:09,630
security destination we we mean

1732
01:24:06,150 --> 01:24:12,929
literally the source the Eid that is the

1733
01:24:09,630 --> 01:24:15,780
source of a security block the Eid that

1734
01:24:12,929 --> 01:24:18,380
is processing a security block that is

1735
01:24:15,780 --> 01:24:21,420
not the destination should be the end

1736
01:24:18,380 --> 01:24:22,739
receiver of that and a security

1737
01:24:21,420 --> 01:24:24,750
destination is not the bundle

1738
01:24:22,739 --> 01:24:26,879
destination and is not a part of a path

1739
01:24:24,750 --> 01:24:29,909
and a route a security destination is a

1740
01:24:26,880 --> 01:24:32,040
BPA that say I am the end consumer of

1741
01:24:29,909 --> 01:24:34,379
that security block I will process it

1742
01:24:32,040 --> 01:24:36,090
remove it from the bundle and then

1743
01:24:34,380 --> 01:24:36,969
separately perhaps deliver that bundle

1744
01:24:36,090 --> 01:24:41,730
or forward

1745
01:24:36,969 --> 01:24:41,730
to someone else okay hmm

1746
01:24:41,980 --> 01:24:48,150
Schiaparelli I'm security security

1747
01:24:44,890 --> 01:24:50,290
destination of course I immediately

1748
01:24:48,150 --> 01:24:52,480
raises a flag for me

1749
01:24:50,290 --> 01:24:57,010
I we were saying that it has a thing to

1750
01:24:52,480 --> 01:24:59,769
do with routing how do you ensure that

1751
01:24:57,010 --> 01:25:03,390
the bundle that the block reaches its

1752
01:24:59,770 --> 01:25:07,719
destination if you don't route using it

1753
01:25:03,390 --> 01:25:10,660
so so when when we looked at the

1754
01:25:07,719 --> 01:25:13,510
original BSP there was a concept of

1755
01:25:10,660 --> 01:25:16,750
security destination which was itself

1756
01:25:13,510 --> 01:25:18,670
somehow conflated with routing you know

1757
01:25:16,750 --> 01:25:20,890
such that you needed to get to the

1758
01:25:18,670 --> 01:25:25,000
security destination before you got to

1759
01:25:20,890 --> 01:25:27,340
the bundle destination well you needed

1760
01:25:25,000 --> 01:25:28,989
to get to the security destination yeah

1761
01:25:27,340 --> 01:25:30,040
I guess before I got to the bundle

1762
01:25:28,989 --> 01:25:33,009
destination because otherwise you would

1763
01:25:30,040 --> 01:25:34,600
never get to it sure so so that was

1764
01:25:33,010 --> 01:25:36,969
certainly a problem and was one of the

1765
01:25:34,600 --> 01:25:39,520
things it was one of the reasons why we

1766
01:25:36,969 --> 01:25:40,660
looked at VP sex effort from BSP because

1767
01:25:39,520 --> 01:25:42,489
it was one of the implementation

1768
01:25:40,660 --> 01:25:45,550
concerns there there is no expectation

1769
01:25:42,489 --> 01:25:48,730
associated with routing when you add a

1770
01:25:45,550 --> 01:25:50,980
security service into a bundle for

1771
01:25:48,730 --> 01:25:54,309
example if you say I am going to encrypt

1772
01:25:50,980 --> 01:25:57,160
a target block there is there is not

1773
01:25:54,310 --> 01:26:00,850
necessarily anything in that block that

1774
01:25:57,160 --> 01:26:03,160
says only some future other block in the

1775
01:26:00,850 --> 01:26:06,880
or other node in the network can decrypt

1776
01:26:03,160 --> 01:26:10,239
this you you encrypt the block and you

1777
01:26:06,880 --> 01:26:12,640
send it along its way what who decrypts

1778
01:26:10,239 --> 01:26:14,709
it later is a function of this kind of

1779
01:26:12,640 --> 01:26:18,340
policy implementation that is

1780
01:26:14,710 --> 01:26:21,370
out-of-band with BP sack if you are the

1781
01:26:18,340 --> 01:26:24,370
bundle destination and you receive an

1782
01:26:21,370 --> 01:26:26,199
encrypted block you will try and decrypt

1783
01:26:24,370 --> 01:26:27,790
it you may not succeed you may not have

1784
01:26:26,199 --> 01:26:30,190
the security context you may not have

1785
01:26:27,790 --> 01:26:32,140
the cryptographic material to do the

1786
01:26:30,190 --> 01:26:34,030
decryption and you may wind up at the

1787
01:26:32,140 --> 01:26:35,949
bundled destination receiving an

1788
01:26:34,030 --> 01:26:38,230
encrypted block that you don't know how

1789
01:26:35,949 --> 01:26:40,389
to process now that but that is a

1790
01:26:38,230 --> 01:26:44,610
network configuration error not an issue

1791
01:26:40,390 --> 01:26:49,090
per se with the security specification I

1792
01:26:44,610 --> 01:26:50,080
I would suggest that it be nice to find

1793
01:26:49,090 --> 01:26:52,350
a term other than

1794
01:26:50,080 --> 01:27:00,340
destination then because destination

1795
01:26:52,350 --> 01:27:04,650
connotes intent it connotes direction to

1796
01:27:00,340 --> 01:27:07,210
up to a point as opposed to here it is

1797
01:27:04,650 --> 01:27:08,950
whoever it is that receives it and can

1798
01:27:07,210 --> 01:27:10,480
do something with it please do something

1799
01:27:08,950 --> 01:27:12,490
with it could I could I suggest

1800
01:27:10,480 --> 01:27:15,820
something like origin and targets I mean

1801
01:27:12,490 --> 01:27:18,880
well it's not really target but its its

1802
01:27:15,820 --> 01:27:20,559
I my first thought was producer and

1803
01:27:18,880 --> 01:27:22,840
consumer but but I don't think that's

1804
01:27:20,560 --> 01:27:24,520
exactly we're talking about roles not

1805
01:27:22,840 --> 01:27:27,100
moving things I yes I agree with you

1806
01:27:24,520 --> 01:27:29,440
again notice we have a little bit of

1807
01:27:27,100 --> 01:27:32,470
you've got about three moments point

1808
01:27:29,440 --> 01:27:36,009
being the the I agree and I'm open to

1809
01:27:32,470 --> 01:27:40,000
other terms the the the insight into

1810
01:27:36,010 --> 01:27:42,580
this is the originator of the bundle

1811
01:27:40,000 --> 01:27:45,310
does not determine who the destination

1812
01:27:42,580 --> 01:27:47,490
is it is incumbent upon the receiver of

1813
01:27:45,310 --> 01:27:50,230
the bundle to self identify as the

1814
01:27:47,490 --> 01:27:53,200
destination and and from that

1815
01:27:50,230 --> 01:27:55,360
perspective there is there is not intent

1816
01:27:53,200 --> 01:27:57,280
from the sender side it is a self

1817
01:27:55,360 --> 01:28:00,460
identification on the receiver side but

1818
01:27:57,280 --> 01:28:02,580
and and my concern is that someone

1819
01:28:00,460 --> 01:28:04,480
coming to look at this specification

1820
01:28:02,580 --> 01:28:07,390
doesn't know all the context in the

1821
01:28:04,480 --> 01:28:10,900
history might be confused and and and I

1822
01:28:07,390 --> 01:28:13,390
think it would be good to avert that

1823
01:28:10,900 --> 01:28:15,129
confusion so I I'm not tied to the term

1824
01:28:13,390 --> 01:28:17,170
in particular if there's a better term

1825
01:28:15,130 --> 01:28:22,060
perhaps consumer okay that was some that

1826
01:28:17,170 --> 01:28:25,150
something okay sukar Tier three quick

1827
01:28:22,060 --> 01:28:26,800
ones starting with the last first a word

1828
01:28:25,150 --> 01:28:30,219
that seems somewhat cumbersome but that

1829
01:28:26,800 --> 01:28:34,090
might have the correct definition would

1830
01:28:30,220 --> 01:28:37,840
be accept or security accept or I can

1831
01:28:34,090 --> 01:28:40,270
see that then a second question security

1832
01:28:37,840 --> 01:28:42,250
source second bullet item last word may

1833
01:28:40,270 --> 01:28:47,350
or may not be the bundle destination

1834
01:28:42,250 --> 01:28:49,600
setting aside the I'm sorry okay thank

1835
01:28:47,350 --> 01:28:51,730
you and lastly security Waypoint

1836
01:28:49,600 --> 01:28:54,190
responsible for actually verifying

1837
01:28:51,730 --> 01:28:55,959
security services is that the only thing

1838
01:28:54,190 --> 01:28:57,879
that a waypoint can do or could a

1839
01:28:55,960 --> 01:29:01,739
waypoint for instance do proc Syrian

1840
01:28:57,880 --> 01:29:04,350
Krypton so

1841
01:29:01,739 --> 01:29:07,019
as we have laid out the roles we would

1842
01:29:04,350 --> 01:29:09,840
say that verification but not changing

1843
01:29:07,020 --> 01:29:12,239
would be would be the role of the

1844
01:29:09,840 --> 01:29:14,070
Waypoint and that if you were to

1845
01:29:12,239 --> 01:29:16,559
re-encrypt re-encrypt to me means

1846
01:29:14,070 --> 01:29:18,059
decrypt from in existing and then re

1847
01:29:16,560 --> 01:29:20,640
encrypt with a different security

1848
01:29:18,060 --> 01:29:22,620
context in which case that node would

1849
01:29:20,640 --> 01:29:25,890
not no longer be a waypoint it would be

1850
01:29:22,620 --> 01:29:29,280
both a security accept or and a security

1851
01:29:25,890 --> 01:29:30,690
source that's separate from the idea of

1852
01:29:29,280 --> 01:29:32,400
super encryption which would be you take

1853
01:29:30,690 --> 01:29:34,620
the initial ciphertext and generate

1854
01:29:32,400 --> 01:29:37,019
ciphertext over the ciphertext which

1855
01:29:34,620 --> 01:29:39,780
which we currently don't believe is a

1856
01:29:37,020 --> 01:29:43,080
useful thing to do and because it all

1857
01:29:39,780 --> 01:29:45,300
fine but one clarification proxy

1858
01:29:43,080 --> 01:29:47,460
encryption doesn't necessarily involve

1859
01:29:45,300 --> 01:29:49,590
going from ciphertext to plaintext and

1860
01:29:47,460 --> 01:29:53,850
then back to ciphertext there are tricky

1861
01:29:49,590 --> 01:29:55,620
Ari encryption I think Rick here I think

1862
01:29:53,850 --> 01:29:58,020
the point is that the way point has has

1863
01:29:55,620 --> 01:29:59,670
read-only access to the bundle I would

1864
01:29:58,020 --> 01:30:02,219
again suggest Waypoint is probably not

1865
01:29:59,670 --> 01:30:02,610
the right word and verifier or something

1866
01:30:02,219 --> 01:30:05,370
like that

1867
01:30:02,610 --> 01:30:08,250
someone who examines the bundle checks

1868
01:30:05,370 --> 01:30:10,950
it is all okay but doesn't touch the

1869
01:30:08,250 --> 01:30:14,040
security context involved now I

1870
01:30:10,950 --> 01:30:16,440
appreciate that so then in in what we

1871
01:30:14,040 --> 01:30:18,480
can skip over that unless unless anyone

1872
01:30:16,440 --> 01:30:20,519
wants to test their eyesight but it is

1873
01:30:18,480 --> 01:30:22,650
just sort of some of the some of the

1874
01:30:20,520 --> 01:30:26,670
illustrations which we can now do an SVG

1875
01:30:22,650 --> 01:30:29,730
yeah to the internet drafts when we talk

1876
01:30:26,670 --> 01:30:31,950
about these different roles and we'll

1877
01:30:29,730 --> 01:30:35,099
keep security source what would they

1878
01:30:31,950 --> 01:30:37,710
look like and so part of this process is

1879
01:30:35,100 --> 01:30:39,239
to put together the at least the data

1880
01:30:37,710 --> 01:30:41,120
model or the language associated with

1881
01:30:39,239 --> 01:30:43,709
how these rules would be specified and

1882
01:30:41,120 --> 01:30:46,140
for security source there are two pieces

1883
01:30:43,710 --> 01:30:48,000
to it one is how do you identify that a

1884
01:30:46,140 --> 01:30:49,830
security service is necessary and then

1885
01:30:48,000 --> 01:30:52,260
how do you represent which security

1886
01:30:49,830 --> 01:30:55,230
service that actually is borrowing from

1887
01:30:52,260 --> 01:30:56,850
ion we've said that the way you identify

1888
01:30:55,230 --> 01:30:59,669
whether a security service is required

1889
01:30:56,850 --> 01:31:02,190
in a bundle is to say if you are if your

1890
01:30:59,670 --> 01:31:05,100
bundle was sourced at this particular a

1891
01:31:02,190 --> 01:31:07,500
ID with wild card matching and it is

1892
01:31:05,100 --> 01:31:10,410
destined for some other a ID with wild

1893
01:31:07,500 --> 01:31:13,020
card matching and you have this type of

1894
01:31:10,410 --> 01:31:15,659
block in the bundle then this particular

1895
01:31:13,020 --> 01:31:17,070
block type going from

1896
01:31:15,659 --> 01:31:20,099
source bundle source to bundle

1897
01:31:17,070 --> 01:31:22,559
destination should have this security

1898
01:31:20,100 --> 01:31:24,600
service associated with it we don't call

1899
01:31:22,560 --> 01:31:26,370
out in particular integrity versus

1900
01:31:24,600 --> 01:31:30,840
confidentiality because that's captured

1901
01:31:26,370 --> 01:31:34,830
in the security context ID and then the

1902
01:31:30,840 --> 01:31:38,130
security source would be which EW you

1903
01:31:34,830 --> 01:31:41,760
want to represent this BPA as we know

1904
01:31:38,130 --> 01:31:44,010
with with BP a particular physical node

1905
01:31:41,760 --> 01:31:46,530
can have multiple a IDs registered with

1906
01:31:44,010 --> 01:31:48,300
it and so you would you would perhaps

1907
01:31:46,530 --> 01:31:50,070
want to configure when you add a

1908
01:31:48,300 --> 01:31:51,989
security block into the bundle and you

1909
01:31:50,070 --> 01:31:54,210
want to represent that security source a

1910
01:31:51,989 --> 01:31:56,940
ID in the security block you have a

1911
01:31:54,210 --> 01:31:58,920
option of e IDs to choose from which one

1912
01:31:56,940 --> 01:32:00,629
would you want to use and then if there

1913
01:31:58,920 --> 01:32:02,670
are any particular security context

1914
01:32:00,630 --> 01:32:04,590
parameters that you want carried in the

1915
01:32:02,670 --> 01:32:07,110
security block they would be listed as

1916
01:32:04,590 --> 01:32:09,000
well and and a simple example of what

1917
01:32:07,110 --> 01:32:11,549
that would look like would be if you are

1918
01:32:09,000 --> 01:32:13,949
generating a bundle coming out of IP n1

1919
01:32:11,550 --> 01:32:17,159
dot anything going anywhere and you have

1920
01:32:13,949 --> 01:32:19,739
a payload in it then you will identify

1921
01:32:17,159 --> 01:32:22,620
the security source ID as IP n1 dot o

1922
01:32:19,739 --> 01:32:24,718
and you will use contact seven with some

1923
01:32:22,620 --> 01:32:27,059
parameters associated with it and this

1924
01:32:24,719 --> 01:32:31,429
list of rules would be the security

1925
01:32:27,060 --> 01:32:31,429
policy associated with security source

1926
01:32:32,360 --> 01:32:38,099
then if you are either a security

1927
01:32:35,040 --> 01:32:40,320
verifier or security except door then

1928
01:32:38,100 --> 01:32:41,940
you would have a slightly different that

1929
01:32:40,320 --> 01:32:43,259
rolls off the tongue thank you

1930
01:32:41,940 --> 01:32:45,120
you would have a different set of

1931
01:32:43,260 --> 01:32:47,550
information the identification would

1932
01:32:45,120 --> 01:32:50,699
still be the same if you are receiving a

1933
01:32:47,550 --> 01:32:53,219
bundle from this source bundle source to

1934
01:32:50,699 --> 01:32:56,159
this bundle destination and it has this

1935
01:32:53,219 --> 01:32:59,639
block type in it then this is what to

1936
01:32:56,159 --> 01:33:02,190
expect this rule would say if you if you

1937
01:32:59,639 --> 01:33:04,530
match that with wildcards you should see

1938
01:33:02,190 --> 01:33:07,138
a security block with security context

1939
01:33:04,530 --> 01:33:09,300
idea of whatever over that target block

1940
01:33:07,139 --> 01:33:12,330
and in addition to the security

1941
01:33:09,300 --> 01:33:14,130
parameters in that security block here

1942
01:33:12,330 --> 01:33:15,809
are some local parameters that you would

1943
01:33:14,130 --> 01:33:18,449
also want to feed to the cipher suite

1944
01:33:15,810 --> 01:33:20,820
and the reason we do that is there are

1945
01:33:18,449 --> 01:33:23,009
times when you may not wish to put all

1946
01:33:20,820 --> 01:33:24,750
of the security context parameters in

1947
01:33:23,010 --> 01:33:26,760
the security block because you

1948
01:33:24,750 --> 01:33:28,500
understand that there is some pre

1949
01:33:26,760 --> 01:33:29,190
configuration or pre sharing or

1950
01:33:28,500 --> 01:33:31,590
precalculus

1951
01:33:29,190 --> 01:33:33,809
of information that doesn't need to be

1952
01:33:31,590 --> 01:33:35,370
in the bundle and can be assumed across

1953
01:33:33,810 --> 01:33:36,510
obviously if you were in networks or

1954
01:33:35,370 --> 01:33:38,490
cases where you can't make that

1955
01:33:36,510 --> 01:33:40,320
assumption you can find ways of putting

1956
01:33:38,490 --> 01:33:43,650
that data into the security block itself

1957
01:33:40,320 --> 01:33:46,170
and then lastly regarding on whether you

1958
01:33:43,650 --> 01:33:48,240
are a verifier or an acceptor you would

1959
01:33:46,170 --> 01:33:50,430
say what are the processing actions that

1960
01:33:48,240 --> 01:33:52,620
I might want to take based on how the

1961
01:33:50,430 --> 01:33:54,840
verification or the acceptance of that

1962
01:33:52,620 --> 01:33:56,940
security source would go and this would

1963
01:33:54,840 --> 01:33:59,400
give you fine-grained control by block

1964
01:33:56,940 --> 01:34:02,370
type and by security context of how you

1965
01:33:59,400 --> 01:34:03,990
handle certain behaviors so so what I've

1966
01:34:02,370 --> 01:34:05,940
started putting together and this is by

1967
01:34:03,990 --> 01:34:08,250
no means either correct or complete is

1968
01:34:05,940 --> 01:34:12,990
the set of actions that you may want to

1969
01:34:08,250 --> 01:34:15,510
or into a action bid field you know if

1970
01:34:12,990 --> 01:34:18,420
follow the block processing control

1971
01:34:15,510 --> 01:34:20,250
flags if you failed something sorry ed

1972
01:34:18,420 --> 01:34:23,760
can I jump in here so there's this bit

1973
01:34:20,250 --> 01:34:25,830
field where is it is this going in is

1974
01:34:23,760 --> 01:34:27,420
your intention to put another extension

1975
01:34:25,830 --> 01:34:30,120
block in which contains these rules

1976
01:34:27,420 --> 01:34:31,920
which travels with the bundle no no not

1977
01:34:30,120 --> 01:34:34,200
at all so so that would be an

1978
01:34:31,920 --> 01:34:36,210
implementation as part of your rules

1979
01:34:34,200 --> 01:34:38,220
that would be lookup in some sort of

1980
01:34:36,210 --> 01:34:40,530
data table and then that's my action

1981
01:34:38,220 --> 01:34:44,960
absolutely okay if I were to show you

1982
01:34:40,530 --> 01:34:44,960
this which is an even worse picture Wow

1983
01:34:45,830 --> 01:34:52,650
if we would come back and say I am a bpa

1984
01:34:48,810 --> 01:34:55,380
agent that is receiving a bundle I would

1985
01:34:52,650 --> 01:34:57,540
have a local policy database associated

1986
01:34:55,380 --> 01:35:00,450
with my source rules my verifier rules

1987
01:34:57,540 --> 01:35:02,100
my acceptor rules and and the verifier

1988
01:35:00,450 --> 01:35:03,720
rules and the acceptor rules while they

1989
01:35:02,100 --> 01:35:05,700
may have the same format made themselves

1990
01:35:03,720 --> 01:35:07,260
be different because you may take

1991
01:35:05,700 --> 01:35:09,660
different actions based on what role you

1992
01:35:07,260 --> 01:35:11,820
have but this is something that would be

1993
01:35:09,660 --> 01:35:15,000
local implementation associated with the

1994
01:35:11,820 --> 01:35:17,700
BPA and it would allow you to say things

1995
01:35:15,000 --> 01:35:21,900
like saying if the security context

1996
01:35:17,700 --> 01:35:24,330
failed to verify in some way then we

1997
01:35:21,900 --> 01:35:26,730
would set bit four which says please

1998
01:35:24,330 --> 01:35:29,790
send a report signifying that to the

1999
01:35:26,730 --> 01:35:31,650
report to be ID and that is Ord with bit

2000
01:35:29,790 --> 01:35:33,690
eight that says and delete the security

2001
01:35:31,650 --> 01:35:36,389
target that failed the processing and

2002
01:35:33,690 --> 01:35:37,950
that's word with one zero which is

2003
01:35:36,390 --> 01:35:40,380
delete the security block associated

2004
01:35:37,950 --> 01:35:41,730
with that as well or somesuch there so

2005
01:35:40,380 --> 01:35:43,050
the point is I'm not saying these are

2006
01:35:41,730 --> 01:35:45,990
the correct action

2007
01:35:43,050 --> 01:35:47,760
points but the idea is that from a

2008
01:35:45,990 --> 01:35:49,170
formatting perspective this is likely

2009
01:35:47,760 --> 01:35:51,960
the set of information and then you

2010
01:35:49,170 --> 01:35:53,070
could see a series of rules or rows in a

2011
01:35:51,960 --> 01:35:55,470
database that you could walk through

2012
01:35:53,070 --> 01:35:57,090
saying I've gotten a bundle in it's from

2013
01:35:55,470 --> 01:35:59,700
this source to this destination within

2014
01:35:57,090 --> 01:36:02,250
wildcards like I got a bundle from IP n

2015
01:35:59,700 --> 01:36:05,519
1 dot something it's going somewhere it

2016
01:36:02,250 --> 01:36:07,440
has a payload in it I should expect that

2017
01:36:05,520 --> 01:36:10,770
this would have a security block over

2018
01:36:07,440 --> 01:36:12,240
that payload using ID 7 it may not

2019
01:36:10,770 --> 01:36:13,680
itself have a key name in it but I'm

2020
01:36:12,240 --> 01:36:16,050
gonna hard-coded that the key name

2021
01:36:13,680 --> 01:36:17,430
should be 1 and here are the actions I

2022
01:36:16,050 --> 01:36:18,950
will or will not take based on how the

2023
01:36:17,430 --> 01:36:21,990
processing goes

2024
01:36:18,950 --> 01:36:24,960
Schiaparelli I'm just as I'm listening

2025
01:36:21,990 --> 01:36:27,510
to this I'm wondering if this is the

2026
01:36:24,960 --> 01:36:30,120
moral equivalent of firewalls for DTS

2027
01:36:27,510 --> 01:36:33,570
yeah this is excess control yeah yeah

2028
01:36:30,120 --> 01:36:36,180
okay so I'm there and a reason to bring

2029
01:36:33,570 --> 01:36:42,630
that up is that several years ago there

2030
01:36:36,180 --> 01:36:44,130
was work on on a deacon analog to be

2031
01:36:42,630 --> 01:36:49,650
peat iptables

2032
01:36:44,130 --> 01:36:51,870
EP tables and I'm wondering if if that

2033
01:36:49,650 --> 01:36:54,599
needs to be revisited and maybe

2034
01:36:51,870 --> 01:36:56,430
superseded by this fair enough point

2035
01:36:54,600 --> 01:36:57,780
well-taken it and our point was that as

2036
01:36:56,430 --> 01:37:00,390
we start trying to do reference

2037
01:36:57,780 --> 01:37:02,280
implementations for BP sack we need some

2038
01:37:00,390 --> 01:37:04,140
way of capturing the policy associated

2039
01:37:02,280 --> 01:37:06,000
with what blocks you put in what blocks

2040
01:37:04,140 --> 01:37:08,610
you verify and what actions you take

2041
01:37:06,000 --> 01:37:13,530
based on those so Rick with my chair hat

2042
01:37:08,610 --> 01:37:16,440
on yes I can see there's two parts to

2043
01:37:13,530 --> 01:37:18,090
this yeah it's a there's a lot of

2044
01:37:16,440 --> 01:37:22,559
implementation detail here but I

2045
01:37:18,090 --> 01:37:24,300
evaluate for that implementation to

2046
01:37:22,560 --> 01:37:26,430
ensure that we've covered all the corner

2047
01:37:24,300 --> 01:37:29,240
cases in BP second we've got the the

2048
01:37:26,430 --> 01:37:31,530
power to do this sort of thing so I

2049
01:37:29,240 --> 01:37:34,139
obviously I really like the work I think

2050
01:37:31,530 --> 01:37:36,300
it's really clever but yeah it's it's

2051
01:37:34,140 --> 01:37:38,520
filtering access control list stuff and

2052
01:37:36,300 --> 01:37:42,180
it's a good demonstration of what we can

2053
01:37:38,520 --> 01:37:45,210
do with with BP sake I'm not sure we

2054
01:37:42,180 --> 01:37:47,010
dive too far into sponsoring work about

2055
01:37:45,210 --> 01:37:48,060
bit layouts for implementations and so

2056
01:37:47,010 --> 01:37:50,370
on but I'm not sure you're proposing

2057
01:37:48,060 --> 01:37:51,480
that no and perhaps the output of this

2058
01:37:50,370 --> 01:37:54,870
usefully would be something

2059
01:37:51,480 --> 01:37:57,320
informational yeah absolutely so I'm

2060
01:37:54,870 --> 01:38:02,870
looking at the time

2061
01:37:57,320 --> 01:38:06,690
okay any other questions from people no

2062
01:38:02,870 --> 01:38:10,080
thank you very much it so Scott you

2063
01:38:06,690 --> 01:38:12,299
don't have any slides about bundle and

2064
01:38:10,080 --> 01:38:15,680
bundle encapsulation do you want to do

2065
01:38:12,300 --> 01:38:15,680
something off the cuff

2066
01:38:18,120 --> 01:38:26,190
sure and really all I would want to do

2067
01:38:20,700 --> 01:38:29,550
is encourage people to to take a look at

2068
01:38:26,190 --> 01:38:32,490
the latest internet draft for bundled

2069
01:38:29,550 --> 01:38:34,260
model encapsulation I'll probably be

2070
01:38:32,490 --> 01:38:35,460
posting another one because the window

2071
01:38:34,260 --> 01:38:37,470
is closed right now but as soon as the

2072
01:38:35,460 --> 01:38:41,400
window reopens I've got another draft

2073
01:38:37,470 --> 01:38:42,420
ready to post the the reason bundle

2074
01:38:41,400 --> 01:38:45,530
bundle encapsulation I think is

2075
01:38:42,420 --> 01:38:48,780
important for a couple of reasons one is

2076
01:38:45,530 --> 01:38:49,830
there are some security features that

2077
01:38:48,780 --> 01:38:51,240
you can get from bundle and bundle

2078
01:38:49,830 --> 01:38:52,460
encapsulation that are difficult to get

2079
01:38:51,240 --> 01:38:56,490
any other ways such as

2080
01:38:52,460 --> 01:38:59,880
protection from traffic analysis another

2081
01:38:56,490 --> 01:39:05,269
though is that the bundle bundle

2082
01:38:59,880 --> 01:39:09,680
encapsulation specification includes the

2083
01:39:05,270 --> 01:39:13,590
custody transfer mechanism that was in

2084
01:39:09,680 --> 01:39:20,580
RFC 5050 and actually extends and

2085
01:39:13,590 --> 01:39:22,980
updates that to to implement a an

2086
01:39:20,580 --> 01:39:25,590
aggregate custody signaling system that

2087
01:39:22,980 --> 01:39:27,059
has been in ion for several years

2088
01:39:25,590 --> 01:39:30,320
developed by guys at University of

2089
01:39:27,060 --> 01:39:33,870
Colorado to bring the overhead of

2090
01:39:30,320 --> 01:39:42,690
custody transfer down I think that's a a

2091
01:39:33,870 --> 01:39:46,440
useful mechanism and I I think it's an

2092
01:39:42,690 --> 01:39:48,570
important work item for the recharter

2093
01:39:46,440 --> 01:39:53,759
which is our segue into the next topic

2094
01:39:48,570 --> 01:39:56,820
and for in in my mind it's the the that

2095
01:39:53,760 --> 01:39:58,760
my mind is the top priority work item

2096
01:39:56,820 --> 01:40:02,910
for the Charter after we get these three

2097
01:39:58,760 --> 01:40:04,130
documents in in place any questions on

2098
01:40:02,910 --> 01:40:07,379
that

2099
01:40:04,130 --> 01:40:11,070
Thanks thanks thanks

2100
01:40:07,379 --> 01:40:14,219
so we have 20 minutes left of the

2101
01:40:11,070 --> 01:40:17,579
session and following on from the is

2102
01:40:14,219 --> 01:40:23,010
that full screen following on from the

2103
01:40:17,579 --> 01:40:25,018
interim the list of proposed new charter

2104
01:40:23,010 --> 01:40:27,570
items as was circulated on the mailing

2105
01:40:25,019 --> 01:40:29,789
list is this so

2106
01:40:27,570 --> 01:40:32,159
Magnus at the time raised concern that

2107
01:40:29,789 --> 01:40:36,809
this is a very long list and I know

2108
01:40:32,159 --> 01:40:38,969
there are drafts so you can see that

2109
01:40:36,809 --> 01:40:42,419
there's March or D have an active a

2110
01:40:38,969 --> 01:40:45,840
recent draft and those parts with an X

2111
01:40:42,419 --> 01:40:48,869
have a draft from the IRT FD Tian

2112
01:40:45,840 --> 01:40:52,829
research group so some of this stuff

2113
01:40:48,869 --> 01:40:55,639
does have some documentation already but

2114
01:40:52,829 --> 01:40:57,959
the critical question is before we

2115
01:40:55,639 --> 01:41:02,669
update the Charter for the working group

2116
01:40:57,959 --> 01:41:05,309
so DTN working group phase two we need

2117
01:41:02,669 --> 01:41:07,800
to make sure that the items that go on

2118
01:41:05,309 --> 01:41:10,280
the Charter are achievable so I'm

2119
01:41:07,800 --> 01:41:12,869
looking at the people in the room here

2120
01:41:10,280 --> 01:41:14,550
only our ad is on meet EKKO but I'm

2121
01:41:12,869 --> 01:41:18,808
assuming or hoping there are a couple of

2122
01:41:14,550 --> 01:41:20,489
other people on Jabba and there are

2123
01:41:18,809 --> 01:41:25,340
other people who are willing to step in

2124
01:41:20,489 --> 01:41:29,039
and help put some of this together so

2125
01:41:25,340 --> 01:41:31,139
this is now an open mic opportunity for

2126
01:41:29,039 --> 01:41:33,929
people to say yes I'm interested in

2127
01:41:31,139 --> 01:41:37,349
working on some of these things yes I am

2128
01:41:33,929 --> 01:41:39,300
interested in this new thing which I

2129
01:41:37,349 --> 01:41:42,949
think should be really important etc etc

2130
01:41:39,300 --> 01:41:52,739
or no I think this is nonsense

2131
01:41:42,949 --> 01:41:54,688
help yourself so ed brain I know that

2132
01:41:52,739 --> 01:41:57,598
the asynchronous management has a lot of

2133
01:41:54,689 --> 01:42:00,510
items under it but I would say that this

2134
01:41:57,599 --> 01:42:02,479
work will continue it has some years

2135
01:42:00,510 --> 01:42:04,919
behind it it has years ahead of it and

2136
01:42:02,479 --> 01:42:07,349
so we would be able and have the energy

2137
01:42:04,919 --> 01:42:09,449
and people who are already working on it

2138
01:42:07,349 --> 01:42:11,039
to continue it and obviously if anyone

2139
01:42:09,449 --> 01:42:13,499
else wanted to to join in we would

2140
01:42:11,039 --> 01:42:15,599
welcome that and then if we talk about a

2141
01:42:13,499 --> 01:42:17,429
manifest block or a table of contents

2142
01:42:15,599 --> 01:42:18,989
block or something else that provides

2143
01:42:17,429 --> 01:42:20,969
expectations of what should be in a

2144
01:42:18,989 --> 01:42:21,239
bundle would be very interested in

2145
01:42:20,969 --> 01:42:25,829
helping

2146
01:42:21,239 --> 01:42:28,829
with that as well so Rick speaking

2147
01:42:25,829 --> 01:42:30,960
personally I the top half of that list

2148
01:42:28,829 --> 01:42:32,579
so bundle protocol additional blocks

2149
01:42:30,960 --> 01:42:35,309
that's bundle and bundle is working

2150
01:42:32,579 --> 01:42:37,320
progress manifests block I know that

2151
01:42:35,309 --> 01:42:40,019
Scott and Ed are both very keen to see

2152
01:42:37,320 --> 01:42:41,969
that work being done as ed said

2153
01:42:40,019 --> 01:42:45,090
asynchronous management is very much

2154
01:42:41,969 --> 01:42:48,360
underway the bottom half of this list is

2155
01:42:45,090 --> 01:42:51,030
actually something I think is as

2156
01:42:48,360 --> 01:42:54,030
important but has less interest or less

2157
01:42:51,030 --> 01:42:59,309
input from from the regulars so to speak

2158
01:42:54,030 --> 01:43:02,670
so neighbor discovery outside of very

2159
01:42:59,309 --> 01:43:05,999
fixed deterministic delay tolerant

2160
01:43:02,670 --> 01:43:08,760
networks some sort of neighbor discovery

2161
01:43:05,999 --> 01:43:11,309
starts to be relevant when you're

2162
01:43:08,760 --> 01:43:15,449
looking at ad hoc style DT ends which is

2163
01:43:11,309 --> 01:43:18,570
obviously for non-space communities main

2164
01:43:15,449 --> 01:43:20,669
driver for DT ends you've got to be able

2165
01:43:18,570 --> 01:43:23,130
to discover potential forwarding

2166
01:43:20,670 --> 01:43:24,809
opportunities potential adjacencies how

2167
01:43:23,130 --> 01:43:27,599
is this done at the bundle processing

2168
01:43:24,809 --> 01:43:30,079
where we know how to do this with link

2169
01:43:27,599 --> 01:43:35,340
technologies but how do we bridge that

2170
01:43:30,079 --> 01:43:40,799
link to bundle protocol gap and there's

2171
01:43:35,340 --> 01:43:44,039
lots of room for ideas experimentation

2172
01:43:40,800 --> 01:43:47,280
suggestions and all welcome also naming

2173
01:43:44,039 --> 01:43:49,710
an addressing that's people outside of

2174
01:43:47,280 --> 01:43:54,719
this room assume that there's a naming

2175
01:43:49,710 --> 01:43:56,730
scheme there is but it's fairly simple

2176
01:43:54,719 --> 01:43:59,960
I'm trying not to be rude about it

2177
01:43:56,730 --> 01:44:04,230
but it's it's it's it works for small

2178
01:43:59,960 --> 01:44:06,420
systems if we want to try do we want to

2179
01:44:04,230 --> 01:44:08,759
try and build a global heterogeneous DTN

2180
01:44:06,420 --> 01:44:11,309
network because if we do we need a

2181
01:44:08,760 --> 01:44:14,340
proper global addressing we need to

2182
01:44:11,309 --> 01:44:17,130
solve the global addressing problem let

2183
01:44:14,340 --> 01:44:21,300
me put it that way so that might pique

2184
01:44:17,130 --> 01:44:23,309
some people's interest marble SAE is

2185
01:44:21,300 --> 01:44:25,530
very keen on a registry of service

2186
01:44:23,309 --> 01:44:31,079
identifier I'm really hoping he drives

2187
01:44:25,530 --> 01:44:34,650
that work personally I have a partially

2188
01:44:31,079 --> 01:44:36,750
written HTTP CL I just don't

2189
01:44:34,650 --> 01:44:39,299
have the time to finish it I'm looking

2190
01:44:36,750 --> 01:44:43,380
for co-authors I'm looking for anyone to

2191
01:44:39,300 --> 01:44:46,590
just help me get the words out I have an

2192
01:44:43,380 --> 01:44:48,540
SMTP implementation it's partially

2193
01:44:46,590 --> 01:44:51,810
broken it would be nice to write up what

2194
01:44:48,540 --> 01:44:54,420
I'm doing it's not brilliant I need help

2195
01:44:51,810 --> 01:44:57,179
or I'm happy to just give it to somebody

2196
01:44:54,420 --> 01:45:00,810
else to work on this it's about

2197
01:44:57,179 --> 01:45:03,409
collaboration and we need input okay

2198
01:45:00,810 --> 01:45:03,409
that's me

2199
01:45:04,530 --> 01:45:13,170
scarper Lee I'm of course very committed

2200
01:45:10,770 --> 01:45:16,110
to doing bundle bundle encapsulation I'm

2201
01:45:13,170 --> 01:45:19,590
certainly interested in the naming and

2202
01:45:16,110 --> 01:45:22,190
addressing I definitely want to be part

2203
01:45:19,590 --> 01:45:28,739
of that conversation neighbor discovery

2204
01:45:22,190 --> 01:45:33,030
there's a informational experimental RFC

2205
01:45:28,739 --> 01:45:35,669
that is implemented and and works I

2206
01:45:33,030 --> 01:45:41,099
think it's a good prototype for us to be

2207
01:45:35,670 --> 01:45:44,210
working from in ion in particular what

2208
01:45:41,100 --> 01:45:46,620
I've been trying to do is support

2209
01:45:44,210 --> 01:45:51,390
opportunistic forwarding based on

2210
01:45:46,620 --> 01:45:58,340
contact graph routing and and in aid of

2211
01:45:51,390 --> 01:46:02,030
that I've got a definitions for a for a

2212
01:45:58,340 --> 01:46:05,400
non-standard administrative record that

2213
01:46:02,030 --> 01:46:08,009
communicates in neighbor discovery

2214
01:46:05,400 --> 01:46:13,349
history through the network so that you

2215
01:46:08,010 --> 01:46:16,800
can guess at likely contacts in the

2216
01:46:13,350 --> 01:46:19,620
future with some some degree of

2217
01:46:16,800 --> 01:46:21,719
confidence and and and base forwarding

2218
01:46:19,620 --> 01:46:24,960
decisions on that there are a number of

2219
01:46:21,719 --> 01:46:27,870
other extension blocks and

2220
01:46:24,960 --> 01:46:29,790
administrative records that we are

2221
01:46:27,870 --> 01:46:33,050
finding that are non-standard

2222
01:46:29,790 --> 01:46:36,239
that we are finding useful in particular

2223
01:46:33,050 --> 01:46:39,210
quality of service at some point I think

2224
01:46:36,239 --> 01:46:42,839
needs to be addressed and I'm certainly

2225
01:46:39,210 --> 01:46:44,880
interested in working on all of that I'm

2226
01:46:42,840 --> 01:46:48,020
happy to leave the registry of service

2227
01:46:44,880 --> 01:46:48,020
identifiers to mark

2228
01:46:50,000 --> 01:47:00,890
so go ahead stir if you so one of the

2229
01:46:55,290 --> 01:47:03,180
questions put to us by our ad was given

2230
01:47:00,890 --> 01:47:05,100
the amount of effort involved in the

2231
01:47:03,180 --> 01:47:08,040
size of this list what what does the

2232
01:47:05,100 --> 01:47:10,110
working group want to prioritize we have

2233
01:47:08,040 --> 01:47:13,920
to put up we have to prioritize these

2234
01:47:10,110 --> 01:47:16,200
things so does anyone have any strong

2235
01:47:13,920 --> 01:47:19,950
opinions about which are the key next

2236
01:47:16,200 --> 01:47:24,389
pieces to do still carry here I guess I

2237
01:47:19,950 --> 01:47:28,650
will speak before prioritizing because I

2238
01:47:24,390 --> 01:47:31,230
get more things to prioritize so the

2239
01:47:28,650 --> 01:47:33,420
whole naming an addressing area that's

2240
01:47:31,230 --> 01:47:34,830
an area in which within my severe

2241
01:47:33,420 --> 01:47:37,680
bandwidth constraints I would be

2242
01:47:34,830 --> 01:47:40,019
interested in contributing we've had

2243
01:47:37,680 --> 01:47:42,900
some thoughts at our shop about mapping

2244
01:47:40,020 --> 01:47:44,520
between DTN endpoint IDs and other

2245
01:47:42,900 --> 01:47:46,710
identifiers spaces

2246
01:47:44,520 --> 01:47:49,820
you will probably grown would not be

2247
01:47:46,710 --> 01:47:53,610
surprised when I mention host identities

2248
01:47:49,820 --> 01:47:55,740
and those of you who are familiar with

2249
01:47:53,610 --> 01:47:58,170
high-frequency radio communications and

2250
01:47:55,740 --> 01:48:01,170
the AL e standard automatic link

2251
01:47:58,170 --> 01:48:03,530
establishment as al identifiers which I

2252
01:48:01,170 --> 01:48:06,570
think are sometimes relevant here

2253
01:48:03,530 --> 01:48:09,240
another area where again within limited

2254
01:48:06,570 --> 01:48:13,370
bandwidth I would be interested in

2255
01:48:09,240 --> 01:48:17,580
working on the norm convergence layer

2256
01:48:13,370 --> 01:48:22,530
when it comes to SMTP there's some work

2257
01:48:17,580 --> 01:48:24,720
that our shop did way back in 2001 where

2258
01:48:22,530 --> 01:48:27,450
because the bundle protocol didn't exist

2259
01:48:24,720 --> 01:48:29,820
yet we gave a different answer to the

2260
01:48:27,450 --> 01:48:32,340
question of is this just SMTP in our

2261
01:48:29,820 --> 01:48:35,670
case the answer was yes and we bundled

2262
01:48:32,340 --> 01:48:37,200
all sorts of things inside of SMTP and I

2263
01:48:35,670 --> 01:48:39,480
think it would be great to be able to

2264
01:48:37,200 --> 01:48:41,700
put a real bundle now that we have a

2265
01:48:39,480 --> 01:48:42,240
bundle protocol inside SMTP and vice

2266
01:48:41,700 --> 01:48:44,190
versa

2267
01:48:42,240 --> 01:48:45,809
sometimes you want to transport a bundle

2268
01:48:44,190 --> 01:48:48,960
across SMTP sometimes you want to

2269
01:48:45,810 --> 01:48:51,600
transport SMTP across a DTN with model

2270
01:48:48,960 --> 01:48:53,370
protocol the folks over in the network

2271
01:48:51,600 --> 01:48:56,550
coding Research Group are interested in

2272
01:48:53,370 --> 01:48:59,769
supporting DTN with network coding they

2273
01:48:56,550 --> 01:49:04,080
are pretty bandwidth limited as well

2274
01:48:59,770 --> 01:49:07,480
and finally I think the the ICN

2275
01:49:04,080 --> 01:49:10,809
application somewhere should be on this

2276
01:49:07,480 --> 01:49:13,030
radar and and the the profit draft the

2277
01:49:10,810 --> 01:49:15,340
profit extension draft I think is pretty

2278
01:49:13,030 --> 01:49:18,130
neat so I'm just throwing more things on

2279
01:49:15,340 --> 01:49:21,580
the list before we start ranking them so

2280
01:49:18,130 --> 01:49:23,230
quick question you raised that about the

2281
01:49:21,580 --> 01:49:25,600
profit extension draft that came in from

2282
01:49:23,230 --> 01:49:31,740
the ICN the guy who put that he's not in

2283
01:49:25,600 --> 01:49:34,030
the room is he because there's

2284
01:49:31,740 --> 01:49:35,740
occasionally this is me with my chair

2285
01:49:34,030 --> 01:49:39,130
hat on just in case somebody's listening

2286
01:49:35,740 --> 01:49:42,190
to the audio in the future occasionally

2287
01:49:39,130 --> 01:49:45,180
we get drafts coming in from far eastern

2288
01:49:42,190 --> 01:49:47,969
universities and academic institutions

2289
01:49:45,180 --> 01:49:50,500
talking about DTN work talking about

2290
01:49:47,970 --> 01:49:54,160
crossovers with ICN and it's interesting

2291
01:49:50,500 --> 01:49:55,660
interesting things and there's not a lot

2292
01:49:54,160 --> 01:49:57,370
of communication with the working group

2293
01:49:55,660 --> 01:50:01,000
they just submit a personal draft and

2294
01:49:57,370 --> 01:50:03,010
that's the last we hear I would really

2295
01:50:01,000 --> 01:50:05,080
like these people to come and talk to us

2296
01:50:03,010 --> 01:50:07,270
just put up put a message on the mailing

2297
01:50:05,080 --> 01:50:09,760
list to say hi I have submitted this

2298
01:50:07,270 --> 01:50:11,320
individual draft because there is a lot

2299
01:50:09,760 --> 01:50:13,870
of interest with people who read these

2300
01:50:11,320 --> 01:50:17,710
we read these things and say hey that's

2301
01:50:13,870 --> 01:50:21,280
really good let's move it on I are the

2302
01:50:17,710 --> 01:50:22,630
authors of this these drafts do they

2303
01:50:21,280 --> 01:50:28,389
want them to become working group

2304
01:50:22,630 --> 01:50:30,490
documents to do they my question I

2305
01:50:28,390 --> 01:50:32,640
suppose is is this a way of publishing a

2306
01:50:30,490 --> 01:50:36,849
paper to achieve part of their degree

2307
01:50:32,640 --> 01:50:39,580
which is not quite what it's for but

2308
01:50:36,850 --> 01:50:41,860
that's okay but the work is good and

2309
01:50:39,580 --> 01:50:43,660
when the work is good let's work on it

2310
01:50:41,860 --> 01:50:46,030
in the working group and and let's go

2311
01:50:43,660 --> 01:50:48,970
make this a standard so it's a bit of a

2312
01:50:46,030 --> 01:50:51,429
plea to any of the authors of a couple

2313
01:50:48,970 --> 01:50:53,860
of these documents to say we like this

2314
01:50:51,430 --> 01:50:56,290
you know come come talk to us it's an

2315
01:50:53,860 --> 01:50:58,480
open forum we can do this work okay

2316
01:50:56,290 --> 01:51:02,320
and I'm Whittaker critical technologies

2317
01:50:58,480 --> 01:51:05,889
um I want to just dovetail on that point

2318
01:51:02,320 --> 01:51:08,860
maybe at some point somebody I'm not

2319
01:51:05,890 --> 01:51:11,170
volunteering myself but reach back out

2320
01:51:08,860 --> 01:51:12,768
on some of those drafts that were really

2321
01:51:11,170 --> 01:51:15,469
highlights they we saw

2322
01:51:12,769 --> 01:51:17,329
reach back and say hey we've been

2323
01:51:15,469 --> 01:51:19,820
looking back through this was really

2324
01:51:17,329 --> 01:51:21,710
interesting is there anything else going

2325
01:51:19,820 --> 01:51:24,860
on because then maybe they continued

2326
01:51:21,710 --> 01:51:28,099
working on it um just to put up into

2327
01:51:24,860 --> 01:51:31,759
Stu's point I generally try to relieve

2328
01:51:28,099 --> 01:51:35,480
the stress and take load off of him for

2329
01:51:31,760 --> 01:51:37,760
his work so we're both constrained and I

2330
01:51:35,480 --> 01:51:40,249
share a lot of what he's interested in

2331
01:51:37,760 --> 01:51:43,579
as well but I'm also interested in just

2332
01:51:40,249 --> 01:51:43,999
reviewing if you have something throw me

2333
01:51:43,579 --> 01:51:46,340
an email

2334
01:51:43,999 --> 01:51:49,190
I'll review it I'll read it I'll try to

2335
01:51:46,340 --> 01:51:51,739
give you some sort of feedback so the

2336
01:51:49,190 --> 01:51:53,089
best place to review stuff is get on the

2337
01:51:51,739 --> 01:51:55,549
data tracker look at the active

2338
01:51:53,090 --> 01:51:56,809
documents and just literally put a

2339
01:51:55,550 --> 01:51:59,119
review on the main leanness to say I

2340
01:51:56,809 --> 01:52:01,579
read this you've got a typo here I don't

2341
01:51:59,119 --> 01:52:10,219
understand paragraph four all review

2342
01:52:01,579 --> 01:52:11,749
helps I hate to go to the might choice

2343
01:52:10,219 --> 01:52:13,309
in a row but it's too card here alright

2344
01:52:11,749 --> 01:52:16,519
so I guess if nobody's throwing more

2345
01:52:13,309 --> 01:52:21,940
things on the list I will nominate

2346
01:52:16,519 --> 01:52:21,940
naming and addressing as a priority

2347
01:52:30,050 --> 01:52:35,010
okay Rick speaking personally I agree

2348
01:52:33,510 --> 01:52:36,750
with you Stu I think naming and

2349
01:52:35,010 --> 01:52:40,130
addressing is the elephant in the room

2350
01:52:36,750 --> 01:52:43,019
as they say it's the one thing we all

2351
01:52:40,130 --> 01:52:46,320
pretend works but when you start to look

2352
01:52:43,019 --> 01:52:49,619
at it it's not actually there yet I will

2353
01:52:46,320 --> 01:52:51,058
also add ie we have some of the

2354
01:52:49,619 --> 01:52:53,369
asynchronous management is already on

2355
01:52:51,059 --> 01:52:57,630
the Charter as an architecture I know

2356
01:52:53,369 --> 01:52:58,920
that ed and his team are working hard on

2357
01:52:57,630 --> 01:53:02,070
this and doing good work and I think

2358
01:52:58,920 --> 01:53:11,309
it's really important so my plus one is

2359
01:53:02,070 --> 01:53:15,000
for the asynchronous management so so we

2360
01:53:11,309 --> 01:53:16,440
have seven minutes left I get the

2361
01:53:15,000 --> 01:53:19,469
feeling that we've covered quite a lot

2362
01:53:16,440 --> 01:53:22,469
of the topics I think the new charter

2363
01:53:19,469 --> 01:53:24,360
item priorities and people offering to

2364
01:53:22,469 --> 01:53:26,550
work on it or saying what they're

2365
01:53:24,360 --> 01:53:28,440
working on that they want to contribute

2366
01:53:26,550 --> 01:53:34,230
into the working group I think we'll

2367
01:53:28,440 --> 01:53:36,000
take that to the list so last five

2368
01:53:34,230 --> 01:53:37,709
minutes any other business or I will

2369
01:53:36,000 --> 01:53:39,059
shall close early and we can go and see

2370
01:53:37,710 --> 01:53:46,289
if we can find a cup of coffee and I can

2371
01:53:39,059 --> 01:53:47,340
get another drink for my throat okay in

2372
01:53:46,289 --> 01:53:49,130
which case I'm going to close the

2373
01:53:47,340 --> 01:54:08,760
meeting early thank you very much and

2374
01:53:49,130 --> 01:54:10,170
we'll see you all in Vancouver okay blue

2375
01:54:08,760 --> 01:54:14,000
sheets blue cheese blue sheets blue

2376
01:54:10,170 --> 01:54:14,000
sheets thank you very much

2377
01:54:47,650 --> 01:54:51,040
the problem

