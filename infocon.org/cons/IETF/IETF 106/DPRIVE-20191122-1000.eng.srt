1
00:00:45,480 --> 00:00:50,769
good morning all I was just waiting for

2
00:00:48,130 --> 00:00:54,220
the some of the presenters to finish

3
00:00:50,770 --> 00:00:55,870
their last minute conversations so it's

4
00:00:54,220 --> 00:00:58,450
Friday morning and we've been here a

5
00:00:55,870 --> 00:00:59,079
long time so welcome to deprive Dena's

6
00:00:58,450 --> 00:01:01,140
privacy

7
00:00:59,079 --> 00:01:02,920
I'm Tim Bennett filling in for Brian

8
00:01:01,140 --> 00:01:04,659
Brian's on the other side of the world

9
00:01:02,920 --> 00:01:06,100
so if there's any mistakes we can throw

10
00:01:04,659 --> 00:01:10,300
him under the bus unless that's poor

11
00:01:06,100 --> 00:01:12,250
form so and our very responsible area

12
00:01:10,300 --> 00:01:15,759
director Eric there in the front row

13
00:01:12,250 --> 00:01:18,540
so Paul opt-ins offer to do minutes so

14
00:01:15,760 --> 00:01:21,700
thank you we'd need a jabber scribe

15
00:01:18,540 --> 00:01:23,650
because we all fail it during Jabbar so

16
00:01:21,700 --> 00:01:27,909
if anybody can manage to make that work

17
00:01:23,650 --> 00:01:29,520
that would be super great I know there's

18
00:01:27,909 --> 00:01:31,570
a bunch of people at meet echo as well

19
00:01:29,520 --> 00:01:33,280
you all know the note well you should

20
00:01:31,570 --> 00:01:34,960
know it by now we should be able to sort

21
00:01:33,280 --> 00:01:39,010
of repeat it by heart because it is

22
00:01:34,960 --> 00:01:42,509
Friday morning so just keep that in mind

23
00:01:39,010 --> 00:01:46,840
oh you can do the job really

24
00:01:42,510 --> 00:01:49,360
goldstar oh thank you blue sheets

25
00:01:46,840 --> 00:01:51,270
they're going around so please fill them

26
00:01:49,360 --> 00:01:54,729
in we'll collect them later

27
00:01:51,270 --> 00:01:58,750
we've got a short agenda mostly it's

28
00:01:54,729 --> 00:02:00,759
stuff that's coming in so three

29
00:01:58,750 --> 00:02:03,790
documents updates the BCP of course has

30
00:02:00,759 --> 00:02:05,650
been finished and we submitted it done

31
00:02:03,790 --> 00:02:08,759
the Shepherd right up and it's now in

32
00:02:05,650 --> 00:02:11,019
our very responsible eighties hands the

33
00:02:08,758 --> 00:02:12,578
seventy six twenty six biz has been done

34
00:02:11,019 --> 00:02:14,349
and that actually looks like I think

35
00:02:12,579 --> 00:02:17,469
it's moving forward for pretty quickly

36
00:02:14,349 --> 00:02:18,579
and then we adopt that the expert over

37
00:02:17,469 --> 00:02:20,109
TLS draft

38
00:02:18,580 --> 00:02:21,520
and so that ones in our queue so that's

39
00:02:20,110 --> 00:02:24,580
pretty much the only current one that's

40
00:02:21,520 --> 00:02:26,350
actually in our queue but we've you know

41
00:02:24,580 --> 00:02:28,390
we've got lots other stuff that's sort

42
00:02:26,350 --> 00:02:30,190
of floating around and of course since

43
00:02:28,390 --> 00:02:32,799
most of you are at the pretty excellent

44
00:02:30,190 --> 00:02:34,840
ABCD Bob earlier this week there's

45
00:02:32,800 --> 00:02:36,700
always good times there so some stuff

46
00:02:34,840 --> 00:02:39,400
will probably end up floating this way

47
00:02:36,700 --> 00:02:41,679
and some of those documents are gonna be

48
00:02:39,400 --> 00:02:44,680
on the menu today the adaptive DNS

49
00:02:41,680 --> 00:02:49,170
privacy which Tommy just had in the buff

50
00:02:44,680 --> 00:02:53,410
and then also the oblivious dope draft

51
00:02:49,170 --> 00:02:56,470
and then the deep deep ride privacy

52
00:02:53,410 --> 00:02:58,329
policy that looks like I've there's a

53
00:02:56,470 --> 00:03:00,400
double tape in there so those are the

54
00:02:58,330 --> 00:03:01,600
big three drafts and then the big one is

55
00:03:00,400 --> 00:03:05,170
actually the Phase two requirements

56
00:03:01,600 --> 00:03:06,760
document that we had the in term on Alex

57
00:03:05,170 --> 00:03:10,059
Jason who I didn't think was gonna be

58
00:03:06,760 --> 00:03:11,140
here and Ben are gonna do that we're

59
00:03:10,060 --> 00:03:12,670
trying to prioritize some of those

60
00:03:11,140 --> 00:03:15,700
requirements we're not trying to solve

61
00:03:12,670 --> 00:03:16,869
everything here today that that we're

62
00:03:15,700 --> 00:03:19,450
just gonna go down and rat holes for

63
00:03:16,870 --> 00:03:21,550
that and our plan is to adopt that as a

64
00:03:19,450 --> 00:03:24,100
working group document only so it will

65
00:03:21,550 --> 00:03:26,860
be adopted but it's busy for us to work

66
00:03:24,100 --> 00:03:29,109
on and to sort of help sort of sort all

67
00:03:26,860 --> 00:03:31,510
those requirements out and so that's

68
00:03:29,110 --> 00:03:33,700
essentially our agenda today so there's

69
00:03:31,510 --> 00:03:35,170
basically the three drafts and then the

70
00:03:33,700 --> 00:03:36,310
big discussion about the requirements

71
00:03:35,170 --> 00:03:40,089
and that's gonna be a pretty

72
00:03:36,310 --> 00:03:44,940
free-flowing conversation so so I think

73
00:03:40,090 --> 00:03:47,980
what we'll do is that's it so Tommy

74
00:03:44,940 --> 00:03:50,890
where are you served your first actually

75
00:03:47,980 --> 00:03:58,260
you've got both so you could do one and

76
00:03:50,890 --> 00:03:58,260
then the other okay okay it was unclear

77
00:04:06,090 --> 00:04:13,890
okay all right good morning everyone

78
00:04:10,270 --> 00:04:17,230
happy Friday you've made it this far so

79
00:04:13,890 --> 00:04:19,839
I'm Tommy Polly I'm from Apple I'll be

80
00:04:17,230 --> 00:04:22,630
presenting this document that I've

81
00:04:19,839 --> 00:04:27,159
worked on with Chris Wood Eric on our

82
00:04:22,630 --> 00:04:27,700
team as well as Patrick McManus and so

83
00:04:27,160 --> 00:04:30,910
this one

84
00:04:27,700 --> 00:04:33,159
is presented in the ABCD Boff the main

85
00:04:30,910 --> 00:04:35,800
focus I tried to have there was on the

86
00:04:33,160 --> 00:04:37,480
way that we do discovery how we're

87
00:04:35,800 --> 00:04:39,760
trying to approach the problems and

88
00:04:37,480 --> 00:04:41,800
particularly how we interact with the

89
00:04:39,760 --> 00:04:46,120
local networks because that's very much

90
00:04:41,800 --> 00:04:47,470
the focus of that off for this I'm gonna

91
00:04:46,120 --> 00:04:49,300
cover a bit of that but I also want to

92
00:04:47,470 --> 00:04:50,440
talk about some of the mechanisms that

93
00:04:49,300 --> 00:04:53,620
we're trying to do at a bit more

94
00:04:50,440 --> 00:04:57,700
technical layer so it'd be great to have

95
00:04:53,620 --> 00:05:00,300
everyone's input here we did you know

96
00:04:57,700 --> 00:05:02,560
these drafts are marked as being under

97
00:05:00,300 --> 00:05:04,120
deprived because it seems like they fit

98
00:05:02,560 --> 00:05:06,430
under the category of DNS privacy

99
00:05:04,120 --> 00:05:08,890
however I think there's still discussion

100
00:05:06,430 --> 00:05:14,830
about where exactly this work should

101
00:05:08,890 --> 00:05:17,229
progress all right so of course some

102
00:05:14,830 --> 00:05:20,250
background to start with here's our

103
00:05:17,230 --> 00:05:23,110
picture of our status quo DNS we have

104
00:05:20,250 --> 00:05:25,170
you know three parties generally

105
00:05:23,110 --> 00:05:28,360
involved when we're not doing any other

106
00:05:25,170 --> 00:05:30,100
privacy mechanisms we have our client we

107
00:05:28,360 --> 00:05:33,820
have our local network resolver that

108
00:05:30,100 --> 00:05:35,890
we're assigned via DHCP or Ras and we

109
00:05:33,820 --> 00:05:40,630
have the actual names and origin servers

110
00:05:35,890 --> 00:05:43,450
we're trying to reach so we see this

111
00:05:40,630 --> 00:05:46,810
common trend right now of looking at how

112
00:05:43,450 --> 00:05:51,000
do we use these you know private trusted

113
00:05:46,810 --> 00:05:54,850
resolvers oftentimes these are public

114
00:05:51,000 --> 00:05:57,340
recursive doe servers and it often ends

115
00:05:54,850 --> 00:05:59,650
up skipping entirely the local

116
00:05:57,340 --> 00:06:02,289
resolution infrastructure and this it

117
00:05:59,650 --> 00:06:03,250
has some concerns certainly for people

118
00:06:02,290 --> 00:06:05,920
who are running that local

119
00:06:03,250 --> 00:06:08,650
infrastructure but also as an operating

120
00:06:05,920 --> 00:06:10,810
system vendor it does have you know

121
00:06:08,650 --> 00:06:13,570
concerns that are raised about how we're

122
00:06:10,810 --> 00:06:15,340
dealing with names that do need local

123
00:06:13,570 --> 00:06:18,400
breakout on an enterprise network or

124
00:06:15,340 --> 00:06:20,369
have some local information and I think

125
00:06:18,400 --> 00:06:22,239
we need more of a kind of split DNS

126
00:06:20,370 --> 00:06:24,700
model when we're thinking about these

127
00:06:22,240 --> 00:06:25,990
things because we do need to trust the

128
00:06:24,700 --> 00:06:30,159
things that are authoritative for the

129
00:06:25,990 --> 00:06:33,250
right resources so the goals that we

130
00:06:30,160 --> 00:06:37,780
have in this document which we're

131
00:06:33,250 --> 00:06:38,740
calling adaptive DNS privacy in this is

132
00:06:37,780 --> 00:06:41,140
kind of the overall architecture

133
00:06:38,740 --> 00:06:41,500
document the other one that Chris is

134
00:06:41,140 --> 00:06:44,500
present

135
00:06:41,500 --> 00:06:46,390
is more of a detailed technical bit for

136
00:06:44,500 --> 00:06:49,330
how we add some extra privacy on top

137
00:06:46,390 --> 00:06:52,000
using oblivious queries but the goals

138
00:06:49,330 --> 00:06:54,539
here are to overall improve our DNS

139
00:06:52,000 --> 00:06:57,850
privacy for client requests without

140
00:06:54,540 --> 00:07:00,310
requiring that we have some fixed or

141
00:06:57,850 --> 00:07:02,920
whitelisted lists of public resolvers

142
00:07:00,310 --> 00:07:06,430
that we're doing and skipping all the

143
00:07:02,920 --> 00:07:07,990
local infrastructure and so in order to

144
00:07:06,430 --> 00:07:10,990
get to this type of decentralized

145
00:07:07,990 --> 00:07:13,480
architecture we think that we need to

146
00:07:10,990 --> 00:07:15,250
discover many different encrypted DNS

147
00:07:13,480 --> 00:07:17,500
servers and we need to have clear

148
00:07:15,250 --> 00:07:19,540
indications of when to use them and

149
00:07:17,500 --> 00:07:20,590
there's a basic premise here that there

150
00:07:19,540 --> 00:07:22,090
are scenarios in which we don't

151
00:07:20,590 --> 00:07:24,429
necessarily want to send all of our

152
00:07:22,090 --> 00:07:27,219
queries through the local resolver I

153
00:07:24,430 --> 00:07:28,900
think these in these represent a lot of

154
00:07:27,220 --> 00:07:30,580
scenarios in which I may be on a network

155
00:07:28,900 --> 00:07:34,150
that I don't totally trust and I don't

156
00:07:30,580 --> 00:07:36,789
think it's appropriate for it to see all

157
00:07:34,150 --> 00:07:40,960
the names that I'm accessing and be able

158
00:07:36,790 --> 00:07:43,840
to build up a profile about the user we

159
00:07:40,960 --> 00:07:45,219
also want to define how the clients can

160
00:07:43,840 --> 00:07:48,969
make sure that they're interacting

161
00:07:45,220 --> 00:07:50,229
correctly with enterprise names that are

162
00:07:48,970 --> 00:07:51,370
you know private names that are only

163
00:07:50,229 --> 00:07:53,500
going to resolve here and we're not

164
00:07:51,370 --> 00:07:55,450
leaking them to other places that we

165
00:07:53,500 --> 00:07:57,010
work correctly with content that is

166
00:07:55,450 --> 00:07:58,450
indeed owned by the local network and

167
00:07:57,010 --> 00:08:01,479
cached very locally and could be

168
00:07:58,450 --> 00:08:04,770
optimized that way as well as any local

169
00:08:01,479 --> 00:08:09,479
policy that has to do with filtering

170
00:08:04,770 --> 00:08:11,500
rules that the provider may have and

171
00:08:09,479 --> 00:08:14,140
then the last part is that we want to

172
00:08:11,500 --> 00:08:16,180
provide a mechanism for when we really

173
00:08:14,140 --> 00:08:18,789
don't trust the network that we're on or

174
00:08:16,180 --> 00:08:22,450
we want to have an extra privacy mode a

175
00:08:18,790 --> 00:08:25,690
way to make oblivious queries it's such

176
00:08:22,450 --> 00:08:28,659
that we don't even have to worry about

177
00:08:25,690 --> 00:08:31,360
is this public resolver that I'm talking

178
00:08:28,660 --> 00:08:32,950
to something that I really can trust to

179
00:08:31,360 --> 00:08:35,650
not log what I'm doing to make sure that

180
00:08:32,950 --> 00:08:38,349
even it cannot see everything I'm doing

181
00:08:35,650 --> 00:08:41,799
and build up a profile about me so

182
00:08:38,349 --> 00:08:43,030
that's the scope of this document so

183
00:08:41,799 --> 00:08:45,520
specifically I think one of the

184
00:08:43,030 --> 00:08:48,220
interesting parts technically is how do

185
00:08:45,520 --> 00:08:49,449
we discover the encrypted resolvers that

186
00:08:48,220 --> 00:08:52,360
are appropriate to use for different

187
00:08:49,450 --> 00:08:54,459
names and there are many different

188
00:08:52,360 --> 00:08:55,360
options that you can have here you can

189
00:08:54,459 --> 00:08:56,979
have why

190
00:08:55,360 --> 00:09:00,820
listing you could have information that

191
00:08:56,980 --> 00:09:02,860
comes over DHCP or Ras but what we are

192
00:09:00,820 --> 00:09:04,990
proposing in this document is to have

193
00:09:02,860 --> 00:09:09,579
the information about what I should use

194
00:09:04,990 --> 00:09:11,950
to do my encrypted resolution come from

195
00:09:09,579 --> 00:09:13,300
the DNS itself because that's kind of

196
00:09:11,950 --> 00:09:17,019
the system that we're working in and it

197
00:09:13,300 --> 00:09:19,510
seems to make most sense so this

198
00:09:17,019 --> 00:09:22,450
proposal is using the service binding

199
00:09:19,510 --> 00:09:25,750
records the names are still in flux

200
00:09:22,450 --> 00:09:29,019
current links are called SVC B and HTTP

201
00:09:25,750 --> 00:09:31,140
service now these are records that are

202
00:09:29,019 --> 00:09:34,029
able to communicate amongst other things

203
00:09:31,140 --> 00:09:35,949
alt serve and ES ni keys but we also

204
00:09:34,029 --> 00:09:39,189
want to use them to indicate the

205
00:09:35,950 --> 00:09:41,200
information about what doe servers are

206
00:09:39,190 --> 00:09:44,019
being designated for a given zone

207
00:09:41,200 --> 00:09:47,050
essentially and we also want to make

208
00:09:44,019 --> 00:09:49,180
sure that these designations are things

209
00:09:47,050 --> 00:09:50,829
that we can validate and trust such that

210
00:09:49,180 --> 00:09:54,790
people can't intercept it so we do want

211
00:09:50,829 --> 00:09:56,140
to use DNS SEC to assign these records

212
00:09:54,790 --> 00:10:00,130
particularly and that's a very important

213
00:09:56,140 --> 00:10:01,540
part so a lot of people have also even

214
00:10:00,130 --> 00:10:04,540
brought up questions about DNS SEC we'll

215
00:10:01,540 --> 00:10:07,089
get into that a little bit later so the

216
00:10:04,540 --> 00:10:09,459
picture ends up looking if we just add

217
00:10:07,089 --> 00:10:11,560
one more step something like this we do

218
00:10:09,459 --> 00:10:14,079
have our local resolver we definitely

219
00:10:11,560 --> 00:10:15,910
will use it but let's say I then

220
00:10:14,079 --> 00:10:17,260
discovered that there is a designated

221
00:10:15,910 --> 00:10:20,680
doe server for the zone under

222
00:10:17,260 --> 00:10:23,199
example.com so for any names within that

223
00:10:20,680 --> 00:10:26,079
zone that may be private or sensitive I

224
00:10:23,199 --> 00:10:28,810
know that it's safe to use that DOE

225
00:10:26,079 --> 00:10:30,819
server and I also have a pretty good

226
00:10:28,810 --> 00:10:32,369
chance that this doe server is something

227
00:10:30,820 --> 00:10:34,240
that maybe I could use for a better

228
00:10:32,370 --> 00:10:36,100
coalescing because this is actually

229
00:10:34,240 --> 00:10:40,000
something that is being managed by the

230
00:10:36,100 --> 00:10:42,790
same entity that is managing the main

231
00:10:40,000 --> 00:10:45,820
example.com server so as a difference

232
00:10:42,790 --> 00:10:47,529
from just using a public recursive it's

233
00:10:45,820 --> 00:10:49,990
kind of still more a three-party system

234
00:10:47,529 --> 00:10:53,800
we haven't added that fourth party into

235
00:10:49,990 --> 00:10:56,380
this and then of course you know this

236
00:10:53,800 --> 00:10:57,910
thing could expand to be you know much

237
00:10:56,380 --> 00:11:00,040
bigger because we actually have many

238
00:10:57,910 --> 00:11:01,510
different designated servers we also

239
00:11:00,040 --> 00:11:05,980
need to make sure that these things play

240
00:11:01,510 --> 00:11:09,360
well with VPNs etc so one of the pieces

241
00:11:05,980 --> 00:11:11,620
of complexity that this does add is that

242
00:11:09,360 --> 00:11:14,250
clients in this case do need to be aware

243
00:11:11,620 --> 00:11:17,280
of the right rules for when to use what

244
00:11:14,250 --> 00:11:19,990
as someone who you know implements our

245
00:11:17,280 --> 00:11:21,430
VPN slip dns logic this is something

246
00:11:19,990 --> 00:11:23,980
that we definitely have the ability to

247
00:11:21,430 --> 00:11:29,290
do today and so one of the questions is

248
00:11:23,980 --> 00:11:31,750
how this scales beyond that so getting

249
00:11:29,290 --> 00:11:34,540
to the details of how the records are

250
00:11:31,750 --> 00:11:37,570
communicating the DOE information so the

251
00:11:34,540 --> 00:11:40,599
service binding record is a new RR type

252
00:11:37,570 --> 00:11:44,800
that we would be querying alongside RA

253
00:11:40,600 --> 00:11:47,230
in quad-a records and it can encode the

254
00:11:44,800 --> 00:11:49,060
service information such as any alt

255
00:11:47,230 --> 00:11:51,970
service information saying that well by

256
00:11:49,060 --> 00:11:53,680
the way I support quick will also give

257
00:11:51,970 --> 00:11:57,850
us the keying material that we can use

258
00:11:53,680 --> 00:11:59,620
for encrypted sni and in this document

259
00:11:57,850 --> 00:12:01,630
we are adding two more things to the

260
00:11:59,620 --> 00:12:05,050
registry of what is defined for the key

261
00:12:01,630 --> 00:12:08,230
value pairs here to include the URI

262
00:12:05,050 --> 00:12:12,430
template for a doe server that is

263
00:12:08,230 --> 00:12:14,470
designated for this zone as well as a

264
00:12:12,430 --> 00:12:16,959
encryption key if we want to be able to

265
00:12:14,470 --> 00:12:20,980
bootstrap doing oblivious queries to

266
00:12:16,960 --> 00:12:23,500
this same server and I do want to point

267
00:12:20,980 --> 00:12:26,680
out that you know a lot of the benefit

268
00:12:23,500 --> 00:12:30,610
of this is related to when we do have es

269
00:12:26,680 --> 00:12:34,060
ni keys so today oftentimes we if we're

270
00:12:30,610 --> 00:12:35,770
doing doe to some server yes we are

271
00:12:34,060 --> 00:12:37,930
encrypting that name and maybe that is

272
00:12:35,770 --> 00:12:40,510
private from the local network but it is

273
00:12:37,930 --> 00:12:43,810
pretty trivially easy and people are

274
00:12:40,510 --> 00:12:46,569
already doing this to look at the SNI

275
00:12:43,810 --> 00:12:48,430
that is going through the TLS handshake

276
00:12:46,570 --> 00:12:49,870
and if they're not using TLS they're

277
00:12:48,430 --> 00:12:53,890
even more obvious about what they're

278
00:12:49,870 --> 00:12:55,900
accessing so it is a requirement to

279
00:12:53,890 --> 00:12:57,850
really get a fully private name solution

280
00:12:55,900 --> 00:12:59,439
that the server infrastructure of who

281
00:12:57,850 --> 00:13:01,840
owns this name does need to change they

282
00:12:59,440 --> 00:13:02,890
need to add any s ni key and so

283
00:13:01,840 --> 00:13:05,080
essentially we're saying at the same

284
00:13:02,890 --> 00:13:10,620
time give us the information that helps

285
00:13:05,080 --> 00:13:10,620
us bootstrap the encrypted dns as well

286
00:13:13,430 --> 00:13:18,150
so the details of the formatting these

287
00:13:16,710 --> 00:13:20,820
are two different examples of how you

288
00:13:18,150 --> 00:13:22,740
can encode this the service binding

289
00:13:20,820 --> 00:13:24,390
record has an alias form in a non

290
00:13:22,740 --> 00:13:28,050
aliased form these are just two ways

291
00:13:24,390 --> 00:13:31,949
that that can play out it's relatively

292
00:13:28,050 --> 00:13:33,810
simple all right so some common

293
00:13:31,950 --> 00:13:34,980
questions I just want to address and

294
00:13:33,810 --> 00:13:38,400
have some discussion about are your

295
00:13:34,980 --> 00:13:42,660
thoughts on so one is why are we using

296
00:13:38,400 --> 00:13:44,939
doe and not dot we'll get into that why

297
00:13:42,660 --> 00:13:46,380
are we using DNS SEC some people are

298
00:13:44,940 --> 00:13:47,690
allergic to D in a second some people

299
00:13:46,380 --> 00:13:50,910
love it so it's an interesting

300
00:13:47,690 --> 00:13:52,200
conversation to have and then also how

301
00:13:50,910 --> 00:13:55,620
does this overall system get

302
00:13:52,200 --> 00:13:58,380
bootstrapped because it's you know it

303
00:13:55,620 --> 00:14:00,330
seems that you need to do a query over

304
00:13:58,380 --> 00:14:02,460
some resolver that you may not trust in

305
00:14:00,330 --> 00:14:04,490
order to find out who you do trust so

306
00:14:02,460 --> 00:14:07,350
let's go through each of those three now

307
00:14:04,490 --> 00:14:10,590
all right so first the choice of

308
00:14:07,350 --> 00:14:13,650
protocol right now we are focusing on

309
00:14:10,590 --> 00:14:17,010
doe some of the discussion if you may

310
00:14:13,650 --> 00:14:18,780
have seen on the ad D list has been you

311
00:14:17,010 --> 00:14:21,360
know questioning why people want to do

312
00:14:18,780 --> 00:14:23,040
doe and some of the reasons that have

313
00:14:21,360 --> 00:14:25,580
been brought up indicate that maybe it's

314
00:14:23,040 --> 00:14:28,349
so it can you know hide and it'll be

315
00:14:25,580 --> 00:14:30,480
easier to get through various firewalls

316
00:14:28,350 --> 00:14:32,550
and other things for us that is not

317
00:14:30,480 --> 00:14:34,470
really the reason that we're looking at

318
00:14:32,550 --> 00:14:38,990
this there are other benefits we see in

319
00:14:34,470 --> 00:14:42,180
doe that work well in this architecture

320
00:14:38,990 --> 00:14:46,350
so one it does allow the possibility of

321
00:14:42,180 --> 00:14:48,689
connection reuse with HTTP so like if I

322
00:14:46,350 --> 00:14:51,060
end up doing a doe connection to

323
00:14:48,690 --> 00:14:54,300
example.com I can potentially start

324
00:14:51,060 --> 00:14:57,209
doing more requests to that same server

325
00:14:54,300 --> 00:14:58,800
if it happens to be co-located I think

326
00:14:57,210 --> 00:15:01,380
when the biggest ones for me is that it

327
00:14:58,800 --> 00:15:04,680
allows us to migrate to quick very

328
00:15:01,380 --> 00:15:05,370
easily of course we can define a DNS

329
00:15:04,680 --> 00:15:08,219
over quick

330
00:15:05,370 --> 00:15:10,860
mapping that's I think there are various

331
00:15:08,220 --> 00:15:13,530
proposals for how to do that but this

332
00:15:10,860 --> 00:15:15,090
allows us to fairly trivially in both a

333
00:15:13,530 --> 00:15:20,189
client and server implementation move

334
00:15:15,090 --> 00:15:22,560
from HTTP to to HTTP 3 and that just

335
00:15:20,190 --> 00:15:24,660
requires updating libraries underneath

336
00:15:22,560 --> 00:15:26,520
and we don't really need to change any

337
00:15:24,660 --> 00:15:28,920
of the formatting

338
00:15:26,520 --> 00:15:31,920
another big one is that the HTTP header

339
00:15:28,920 --> 00:15:34,050
format does allow us more extensibility

340
00:15:31,920 --> 00:15:36,510
and allows us to do things like what

341
00:15:34,050 --> 00:15:38,040
we're doing for oblivious queries to be

342
00:15:36,510 --> 00:15:41,250
able to have different forms of

343
00:15:38,040 --> 00:15:44,780
encapsulation as well as to be able to

344
00:15:41,250 --> 00:15:47,220
proxy queries around when we want to do

345
00:15:44,780 --> 00:15:49,050
efficient of what IP address were coming

346
00:15:47,220 --> 00:15:51,900
from you could of course add these

347
00:15:49,050 --> 00:15:54,180
things to protocols like dot but the

348
00:15:51,900 --> 00:15:56,540
format for that is simple enough that it

349
00:15:54,180 --> 00:16:00,239
was a little bit too much work to extend

350
00:15:56,540 --> 00:16:01,800
all that to say though this you know

351
00:16:00,240 --> 00:16:03,870
system for saying how we want to

352
00:16:01,800 --> 00:16:07,020
designate encrypted DNS servers could

353
00:16:03,870 --> 00:16:08,940
equally work well for saying that here

354
00:16:07,020 --> 00:16:16,410
is a dot server that we should use for

355
00:16:08,940 --> 00:16:17,790
this alright so another key thing that

356
00:16:16,410 --> 00:16:21,240
we want to do is make sure that the

357
00:16:17,790 --> 00:16:23,939
designation of a server is signed that

358
00:16:21,240 --> 00:16:25,980
we are sure that this is not some rogue

359
00:16:23,940 --> 00:16:29,370
record that we have saying oh send all

360
00:16:25,980 --> 00:16:30,870
of your queries for google.com to some

361
00:16:29,370 --> 00:16:32,880
evil server like that would be a pretty

362
00:16:30,870 --> 00:16:36,480
bad attack and end up really harming

363
00:16:32,880 --> 00:16:38,370
privacy so if the DOS server

364
00:16:36,480 --> 00:16:41,190
destinations are not signed they can be

365
00:16:38,370 --> 00:16:42,360
steered around what we currently have in

366
00:16:41,190 --> 00:16:45,240
the document is the requirement that

367
00:16:42,360 --> 00:16:47,520
these designations are DNS X signed

368
00:16:45,240 --> 00:16:50,760
because this provides a mechanism to tie

369
00:16:47,520 --> 00:16:53,730
this destination to the person who signs

370
00:16:50,760 --> 00:16:55,590
the zone and this is a good route of

371
00:16:53,730 --> 00:16:58,860
trust for the information about what

372
00:16:55,590 --> 00:17:01,350
we're getting from DNS it also allows us

373
00:16:58,860 --> 00:17:03,930
to have a fairly public record that you

374
00:17:01,350 --> 00:17:07,230
could follow and easily corroborate from

375
00:17:03,930 --> 00:17:10,079
other vantage points one of the concerns

376
00:17:07,230 --> 00:17:11,790
here is that it does seem like you know

377
00:17:10,079 --> 00:17:13,230
certain deployments find it a barrier to

378
00:17:11,790 --> 00:17:14,879
entry there are a lot of large

379
00:17:13,230 --> 00:17:18,959
deployments that are not necessarily

380
00:17:14,880 --> 00:17:21,650
signing all of their zones so if people

381
00:17:18,959 --> 00:17:25,380
do have thoughts about ways to make this

382
00:17:21,650 --> 00:17:26,850
easy to do or other some people have

383
00:17:25,380 --> 00:17:29,580
talked about it ok we have other signing

384
00:17:26,849 --> 00:17:32,820
mechanisms here that would be good to

385
00:17:29,580 --> 00:17:33,540
look at although I do want to emphasize

386
00:17:32,820 --> 00:17:34,919
that we probably shouldn't be

387
00:17:33,540 --> 00:17:37,200
reinventing something that's just

388
00:17:34,920 --> 00:17:39,900
another DNS heck because we have a

389
00:17:37,200 --> 00:17:42,180
solution already here

390
00:17:39,900 --> 00:17:45,030
and lastly talking about the

391
00:17:42,180 --> 00:17:50,970
bootstrapping there's a couple different

392
00:17:45,030 --> 00:17:53,160
models that we can use here so one thing

393
00:17:50,970 --> 00:17:56,309
you can imagine is that a client can

394
00:17:53,160 --> 00:17:58,980
know a set of names initially that it

395
00:17:56,309 --> 00:18:01,770
does expect designations for so for

396
00:17:58,980 --> 00:18:04,050
example on I think you know both Android

397
00:18:01,770 --> 00:18:06,059
and iOS devices today when we join the

398
00:18:04,050 --> 00:18:07,620
Wi-Fi network and we try to do some

399
00:18:06,059 --> 00:18:09,840
probes or captive portals and there's

400
00:18:07,620 --> 00:18:12,120
some initial traffic so along with that

401
00:18:09,840 --> 00:18:15,300
initial traffic we could easily imagine

402
00:18:12,120 --> 00:18:17,489
that there would be some generic non

403
00:18:15,300 --> 00:18:19,919
user identifying queries that go out

404
00:18:17,490 --> 00:18:22,830
that help us discover that as

405
00:18:19,920 --> 00:18:25,380
designations for kind of the system

406
00:18:22,830 --> 00:18:26,820
default traffic so on an iOS device

407
00:18:25,380 --> 00:18:29,580
we're probably going to be connecting

408
00:18:26,820 --> 00:18:31,230
back for push notifications to Apple

409
00:18:29,580 --> 00:18:34,770
servers and so that's an opportunity to

410
00:18:31,230 --> 00:18:36,840
do a non user specific query that allows

411
00:18:34,770 --> 00:18:39,840
us to discover some designated doe

412
00:18:36,840 --> 00:18:43,530
server so those we will have queries of

413
00:18:39,840 --> 00:18:48,209
course that go always over the local DNS

414
00:18:43,530 --> 00:18:50,790
infrastructure and then after that point

415
00:18:48,210 --> 00:18:52,830
depending on the stance we have towards

416
00:18:50,790 --> 00:18:54,780
that local network we have a couple

417
00:18:52,830 --> 00:18:56,730
different options so if this is a

418
00:18:54,780 --> 00:18:59,490
network that maybe is you know my

419
00:18:56,730 --> 00:19:01,230
carrier is B that if the user has an

420
00:18:59,490 --> 00:19:04,200
explicit relationship with and that they

421
00:19:01,230 --> 00:19:08,660
do trust we didn't imagine that some of

422
00:19:04,200 --> 00:19:13,260
this designated doe is really done at a

423
00:19:08,660 --> 00:19:15,510
kind of ekam mmm best effort basis right

424
00:19:13,260 --> 00:19:17,550
like when we know that we do have some

425
00:19:15,510 --> 00:19:19,020
destinations we make those private those

426
00:19:17,550 --> 00:19:22,050
correspond to servers that have ES and

427
00:19:19,020 --> 00:19:24,090
Nikes and we do it that way if we are a

428
00:19:22,050 --> 00:19:26,220
bit more paranoid and we don't trust

429
00:19:24,090 --> 00:19:27,629
this network I'm at some sketchy cafe

430
00:19:26,220 --> 00:19:30,380
you and I'm on vacation I don't know

431
00:19:27,630 --> 00:19:32,400
what's going on we could instead use

432
00:19:30,380 --> 00:19:34,380
oblivious doe which we'll talk about a

433
00:19:32,400 --> 00:19:38,700
bit later and that as long as we have

434
00:19:34,380 --> 00:19:40,470
knowledge of some doe server that's out

435
00:19:38,700 --> 00:19:42,690
there that allows this as well as some

436
00:19:40,470 --> 00:19:45,500
way to proxy to it we can start querying

437
00:19:42,690 --> 00:19:48,120
for more names without giving up our

438
00:19:45,500 --> 00:19:52,190
both our IP address and our query

439
00:19:48,120 --> 00:19:52,189
content to that doe server

440
00:19:52,519 --> 00:19:57,639
so as a little workflow through here

441
00:19:55,209 --> 00:20:00,049
let's say I get on a network and

442
00:19:57,639 --> 00:20:02,869
example.com is my default thing that the

443
00:20:00,049 --> 00:20:05,629
system does so it will do a query to the

444
00:20:02,869 --> 00:20:07,389
local recursive for the service binding

445
00:20:05,629 --> 00:20:10,668
records for example.com

446
00:20:07,389 --> 00:20:13,309
it will then find out with a DNS xn

447
00:20:10,669 --> 00:20:16,399
record that there is a designation to

448
00:20:13,309 --> 00:20:20,658
DNS example net and it will know where

449
00:20:16,399 --> 00:20:22,369
that doe server is at that point we can

450
00:20:20,659 --> 00:20:25,519
say we have essentially bootstrapped our

451
00:20:22,369 --> 00:20:26,928
doe connections we then ask it for any

452
00:20:25,519 --> 00:20:28,489
names within that maybe these are

453
00:20:26,929 --> 00:20:30,889
private names that it may be sensitive

454
00:20:28,489 --> 00:20:32,659
for some reason and then we can have

455
00:20:30,889 --> 00:20:34,639
connectivity there so the local network

456
00:20:32,659 --> 00:20:37,219
can certainly know that yes you're

457
00:20:34,639 --> 00:20:39,458
talking to this general entity you're

458
00:20:37,219 --> 00:20:41,629
talking maybe to this CDN or to this

459
00:20:39,459 --> 00:20:43,339
general provider but you don't know the

460
00:20:41,629 --> 00:20:47,689
specific content that they're asking for

461
00:20:43,339 --> 00:20:50,450
within that there's also information

462
00:20:47,690 --> 00:20:54,259
that we can get from the DOE server

463
00:20:50,450 --> 00:20:57,679
itself we're taking some phrases that we

464
00:20:54,259 --> 00:21:00,019
have from the int area and mith working

465
00:20:57,679 --> 00:21:02,899
groups of provisioning domains because

466
00:21:00,019 --> 00:21:04,639
in some in some ways these are almost

467
00:21:02,899 --> 00:21:06,589
like virtual interfaces that we have

468
00:21:04,639 --> 00:21:10,519
that represent our relationship with

469
00:21:06,589 --> 00:21:12,019
various CBN's and so these are new

470
00:21:10,519 --> 00:21:15,139
provisioning domains so when we talk to

471
00:21:12,019 --> 00:21:19,309
a doe server we can also ask it off of a

472
00:21:15,139 --> 00:21:20,899
specific content type for some JSON

473
00:21:19,309 --> 00:21:22,729
description about what are the things

474
00:21:20,899 --> 00:21:24,949
that are provided here so we can learn

475
00:21:22,729 --> 00:21:27,529
some of the other default names within

476
00:21:24,950 --> 00:21:30,619
this so if I talk to Apple maybe it says

477
00:21:27,529 --> 00:21:32,149
oh yeah I host iTunes I host iCloud and

478
00:21:30,619 --> 00:21:34,399
these are other things that you can get

479
00:21:32,149 --> 00:21:36,379
here and then the client would request

480
00:21:34,399 --> 00:21:39,049
the same records to prove that

481
00:21:36,379 --> 00:21:42,109
designation and validate that there is a

482
00:21:39,049 --> 00:21:45,759
DNS sex signature that says that this

483
00:21:42,109 --> 00:21:47,928
server is also Thorat ativ for those and

484
00:21:45,759 --> 00:21:51,529
there's some nice things you can do with

485
00:21:47,929 --> 00:21:53,479
doe here because HTTP 2 can start

486
00:21:51,529 --> 00:21:55,849
pushing some of these default records to

487
00:21:53,479 --> 00:21:58,519
prove its designations for more of the

488
00:21:55,849 --> 00:22:00,908
different zones without actually wasting

489
00:21:58,519 --> 00:22:00,909
a roundtrip

490
00:22:03,100 --> 00:22:07,209
those are some of the answers to the

491
00:22:04,480 --> 00:22:08,889
basic questions that often come up we

492
00:22:07,210 --> 00:22:13,059
have a couple different issues that we

493
00:22:08,889 --> 00:22:15,399
are working on and we are having various

494
00:22:13,059 --> 00:22:16,870
conversations with people about we

495
00:22:15,399 --> 00:22:19,029
didn't mean to make sure that we have a

496
00:22:16,870 --> 00:22:20,678
good story around multi CDN deployments

497
00:22:19,029 --> 00:22:23,710
when you have names that are being

498
00:22:20,679 --> 00:22:27,730
managed by multiple different entities

499
00:22:23,710 --> 00:22:28,899
that we do want a good story about what

500
00:22:27,730 --> 00:22:30,850
we should do and what the

501
00:22:28,899 --> 00:22:35,289
recommendations are for zones that maybe

502
00:22:30,850 --> 00:22:37,360
aren't DNS SEC ready yet there may be an

503
00:22:35,289 --> 00:22:40,389
option here there may not be if people

504
00:22:37,360 --> 00:22:42,070
have ideas I'd love to hear them we also

505
00:22:40,389 --> 00:22:45,279
want to have guidance on when it's

506
00:22:42,070 --> 00:22:47,110
appropriate to reuse HTTP connections

507
00:22:45,279 --> 00:22:49,809
that were used for dough and start using

508
00:22:47,110 --> 00:22:52,719
for other connections in a way that's

509
00:22:49,809 --> 00:22:54,970
not going to abuse privacy and we also

510
00:22:52,720 --> 00:22:56,649
want to dig into more about the failure

511
00:22:54,970 --> 00:23:01,330
options about how you fall back between

512
00:22:56,649 --> 00:23:04,449
these different server configurations so

513
00:23:01,330 --> 00:23:06,220
at the bottom there is a github link to

514
00:23:04,450 --> 00:23:08,409
where we have these documents we have a

515
00:23:06,220 --> 00:23:09,820
bunch of issues and pull requests filed

516
00:23:08,409 --> 00:23:12,399
by people and I encourage you if you

517
00:23:09,820 --> 00:23:14,649
have thoughts to chime in there because

518
00:23:12,399 --> 00:23:17,918
that's a great way to interact with the

519
00:23:14,649 --> 00:23:19,629
authors all right I think that's my last

520
00:23:17,919 --> 00:23:22,029
slide Chris will talk a little bit more

521
00:23:19,629 --> 00:23:24,129
about our oblivious dough in a bit but

522
00:23:22,029 --> 00:23:27,250
if there are questions now comments

523
00:23:24,129 --> 00:23:29,408
that'd be great to hear oh I had I had

524
00:23:27,250 --> 00:23:30,789
some before people start sorry I it's

525
00:23:29,409 --> 00:23:32,860
okay because this was discussed at the

526
00:23:30,789 --> 00:23:34,509
bar on Tuesday yes and it had a lot of

527
00:23:32,860 --> 00:23:36,189
people who had read it and had comments

528
00:23:34,509 --> 00:23:37,899
yep it weren't on the d-pryde list so I

529
00:23:36,190 --> 00:23:39,639
figured that they're all on the ATD list

530
00:23:37,899 --> 00:23:41,049
which I read for a while and then it got

531
00:23:39,639 --> 00:23:44,709
locked and then I stopped reading it so

532
00:23:41,049 --> 00:23:46,360
yes so we posted this to both lists I

533
00:23:44,710 --> 00:23:49,509
mean we posted primarily to game Prive

534
00:23:46,360 --> 00:23:50,439
and then also cross posted there yeah

535
00:23:49,509 --> 00:23:51,759
exactly

536
00:23:50,440 --> 00:23:54,399
okay just wanted to double-check on that

537
00:23:51,759 --> 00:23:56,379
my co-chair was confirming so so we'll

538
00:23:54,399 --> 00:23:59,379
go to Ralph and cut the line at Ralph at

539
00:23:56,379 --> 00:24:03,549
the end there so mr. Brian Brian Dixon

540
00:23:59,379 --> 00:24:06,908
GoDaddy as far as the DNS signing of

541
00:24:03,549 --> 00:24:09,750
zones it's I'm not sure if everyone's

542
00:24:06,909 --> 00:24:13,389
aware but GoDaddy is intending to make

543
00:24:09,750 --> 00:24:16,389
DNS signing available to all of its

544
00:24:13,389 --> 00:24:16,959
customers and has a hard time line but

545
00:24:16,389 --> 00:24:19,330
that'll be

546
00:24:16,960 --> 00:24:23,190
for you presented the Internet that's

547
00:24:19,330 --> 00:24:23,189
great I love that

548
00:24:23,250 --> 00:24:29,529
Alex meal for Nick today t I think that

549
00:24:26,890 --> 00:24:31,450
is a pretty broad impact on the on the

550
00:24:29,529 --> 00:24:33,029
summit of the general concept of the DNS

551
00:24:31,450 --> 00:24:36,010
because essentially you can like

552
00:24:33,029 --> 00:24:37,750
designate a server to be sort of

553
00:24:36,010 --> 00:24:39,549
authoritative for domain even if it's

554
00:24:37,750 --> 00:24:45,640
not authoritative according credit

555
00:24:39,549 --> 00:24:47,830
delegation and and you also like get

556
00:24:45,640 --> 00:24:49,450
into a grey area between this is

557
00:24:47,830 --> 00:24:51,428
authoritative and this is recursive

558
00:24:49,450 --> 00:24:53,350
because the server could like provide

559
00:24:51,429 --> 00:24:56,230
other responses so it's a completely new

560
00:24:53,350 --> 00:24:58,689
world of how DNS works essentially so I

561
00:24:56,230 --> 00:25:01,840
think we should treat that pretty

562
00:24:58,690 --> 00:25:04,240
carefully yeah yeah yeah this the second

563
00:25:01,840 --> 00:25:08,260
one is I understand that you defined a

564
00:25:04,240 --> 00:25:09,640
new resource record type that's defined

565
00:25:08,260 --> 00:25:11,590
outside of these documents well yeah

566
00:25:09,640 --> 00:25:12,820
yeah and and have you looked at the

567
00:25:11,590 --> 00:25:17,350
other options that would be there like

568
00:25:12,820 --> 00:25:21,220
the URI RR type and laughter records

569
00:25:17,350 --> 00:25:23,709
yeah long time ago right so your I want

570
00:25:21,220 --> 00:25:25,539
everything yeah you could find a URI

571
00:25:23,710 --> 00:25:28,510
scheme that actually encodes all that

572
00:25:25,539 --> 00:25:30,070
information and then yeah but but did

573
00:25:28,510 --> 00:25:31,990
you mention where you actually want the

574
00:25:30,070 --> 00:25:35,470
new stuff to go so it's like moving

575
00:25:31,990 --> 00:25:38,799
around bits from USB that's true so for

576
00:25:35,470 --> 00:25:41,710
the URI one since the technically the

577
00:25:38,799 --> 00:25:43,270
URI of the DOE server is under the HTTP

578
00:25:41,710 --> 00:25:46,630
scheme it seems like it may be a bit

579
00:25:43,270 --> 00:25:51,820
vague what the URI is if it is simply a

580
00:25:46,630 --> 00:25:54,610
HTTP URI attached to attached your name

581
00:25:51,820 --> 00:25:57,299
a problem is your poly can't do the

582
00:25:54,610 --> 00:26:01,360
other sings as query parameters to that

583
00:25:57,299 --> 00:26:03,730
to the DOE HTTP your I so that's a

584
00:26:01,360 --> 00:26:05,500
little bit yeah okay it's good point

585
00:26:03,730 --> 00:26:08,529
though and you know your issues may be

586
00:26:05,500 --> 00:26:09,700
the broader one that yes yes the will

587
00:26:08,529 --> 00:26:11,620
will for sure it trigger some

588
00:26:09,700 --> 00:26:13,630
interesting discussions once abs

589
00:26:11,620 --> 00:26:16,090
absolutely and I think as we've been

590
00:26:13,630 --> 00:26:20,770
talking to you know various deployments

591
00:26:16,090 --> 00:26:23,260
I think you know there are cases in

592
00:26:20,770 --> 00:26:28,299
which this is just putting a doe server

593
00:26:23,260 --> 00:26:30,010
in front of the authoritative and that

594
00:26:28,299 --> 00:26:32,350
seems to be

595
00:26:30,010 --> 00:26:36,730
maybe one of the clearer reductions of

596
00:26:32,350 --> 00:26:39,129
this and then people who want to do it

597
00:26:36,730 --> 00:26:41,590
say I think the question is do we want

598
00:26:39,130 --> 00:26:42,910
people to designate full recursive if

599
00:26:41,590 --> 00:26:46,020
they have them already essentially like

600
00:26:42,910 --> 00:26:48,550
if CloudFlare has its large dose over

601
00:26:46,020 --> 00:26:51,280
you know is it most convenient for it to

602
00:26:48,550 --> 00:26:53,830
just say yeah just do doe to our main

603
00:26:51,280 --> 00:26:55,870
recursive server even for names that are

604
00:26:53,830 --> 00:26:58,570
hosted within CloudFlare yeah it appears

605
00:26:55,870 --> 00:27:04,020
to me a little bit as the hosts txt of

606
00:26:58,570 --> 00:27:04,020
the 21st century DEP DEP DEP DEP though

607
00:27:04,560 --> 00:27:09,190
from the jabber room a peter spot-check

608
00:27:07,240 --> 00:27:11,230
says I'm against adoption in its current

609
00:27:09,190 --> 00:27:13,210
form basically this is a combination of

610
00:27:11,230 --> 00:27:16,300
custom-made pour network limited to

611
00:27:13,210 --> 00:27:18,700
Dinah's plus auto configuration magic on

612
00:27:16,300 --> 00:27:20,409
top at the same time latest research and

613
00:27:18,700 --> 00:27:23,440
privacy field has shown that hiding only

614
00:27:20,410 --> 00:27:25,510
dns traffic does not actually help much

615
00:27:23,440 --> 00:27:27,280
because just the set of server IP

616
00:27:25,510 --> 00:27:29,410
addresses client is connecting to is

617
00:27:27,280 --> 00:27:31,810
sufficient to reveal what website the

618
00:27:29,410 --> 00:27:35,530
client is accessing for this reason this

619
00:27:31,810 --> 00:27:36,940
humongous complexity is not justified he

620
00:27:35,530 --> 00:27:39,190
then posts the reference in the research

621
00:27:36,940 --> 00:27:42,010
article which is what can you learn from

622
00:27:39,190 --> 00:27:45,010
an IP authors Simran Patil and Nikita

623
00:27:42,010 --> 00:27:47,740
Boras of the link is in the jabber

624
00:27:45,010 --> 00:27:51,070
great thank you yes so to just to

625
00:27:47,740 --> 00:27:54,280
respond to that point absolutely agree

626
00:27:51,070 --> 00:27:56,620
that the IP address alone does in a lot

627
00:27:54,280 --> 00:28:00,220
of cases give away a lot

628
00:27:56,620 --> 00:28:04,570
this is trying to make it possible for

629
00:28:00,220 --> 00:28:05,950
us to have good DNS name encryption as I

630
00:28:04,570 --> 00:28:08,310
mentioned before it also does require

631
00:28:05,950 --> 00:28:11,770
that you do have encrypted sni and

632
00:28:08,310 --> 00:28:13,149
beyond that it requires that whoever is

633
00:28:11,770 --> 00:28:15,610
hosting these IP addresses has a

634
00:28:13,150 --> 00:28:19,510
sufficient in a non anonymity set of the

635
00:28:15,610 --> 00:28:22,179
name to address mappings so essentially

636
00:28:19,510 --> 00:28:24,220
it is possible to build a deployment of

637
00:28:22,180 --> 00:28:26,290
course that will not have good privacy

638
00:28:24,220 --> 00:28:28,990
properties or we're trying to do here is

639
00:28:26,290 --> 00:28:30,730
make it possible if you do have a

640
00:28:28,990 --> 00:28:32,110
deployment to have good privacy

641
00:28:30,730 --> 00:28:37,210
properties if you deploy it the right

642
00:28:32,110 --> 00:28:38,379
way I Stephen comment on two questions

643
00:28:37,210 --> 00:28:41,080
which are kind of really one question

644
00:28:38,380 --> 00:28:42,670
and I kind of generally like it I think

645
00:28:41,080 --> 00:28:43,399
you're a bit optimistic about the NSX

646
00:28:42,670 --> 00:28:45,919
but yeah

647
00:28:43,399 --> 00:28:48,728
okay eater can you go to the slide with

648
00:28:45,919 --> 00:28:51,739
the bit of JSON there yeah so about this

649
00:28:48,729 --> 00:28:55,219
these names here the DNS zones you name

650
00:28:51,739 --> 00:28:57,529
here and about the oblivious feature yep

651
00:28:55,219 --> 00:28:59,629
it's really not clear to me how a client

652
00:28:57,529 --> 00:29:02,119
is going to react differently to those

653
00:28:59,629 --> 00:29:03,769
versus things that are you know how to

654
00:29:02,119 --> 00:29:06,589
decide to use the oblivious feature how

655
00:29:03,769 --> 00:29:09,259
would the decide to treat names below

656
00:29:06,589 --> 00:29:10,428
foo Burnette differently as it's trying

657
00:29:09,259 --> 00:29:11,539
to resolve stuff I mean how would a

658
00:29:10,429 --> 00:29:13,159
client decide that is it

659
00:29:11,539 --> 00:29:15,349
are you intending that that would be a

660
00:29:13,159 --> 00:29:17,960
standard behavior that we would specify

661
00:29:15,349 --> 00:29:19,700
yeah and so that is at least right now

662
00:29:17,960 --> 00:29:22,879
kind of specified in there I think the

663
00:29:19,700 --> 00:29:25,099
idea is if I can have a provable

664
00:29:22,879 --> 00:29:27,738
designation from fubar net to

665
00:29:25,099 --> 00:29:28,099
example.com provable that you mean it's

666
00:29:27,739 --> 00:29:31,450
urgent

667
00:29:28,099 --> 00:29:34,039
hmm you can assert sort of been signed

668
00:29:31,450 --> 00:29:36,320
essentially that we have this I couldn't

669
00:29:34,039 --> 00:29:40,669
sign whatever I want right that the

670
00:29:36,320 --> 00:29:43,960
fubar net root so the sort that the zone

671
00:29:40,669 --> 00:29:46,099
Foubert are not signs right so in my

672
00:29:43,960 --> 00:29:49,099
campus company tolerant networks dot-com

673
00:29:46,099 --> 00:29:52,939
I could say I'm Apple I can sign that

674
00:29:49,099 --> 00:29:54,769
right you could say that you have a

675
00:29:52,940 --> 00:29:55,969
relationship with this doe server

676
00:29:54,769 --> 00:29:57,830
infrastructure that you would like them

677
00:29:55,969 --> 00:29:59,389
to handle your resolution yeah okay so

678
00:29:57,830 --> 00:30:02,239
the handling of that and how it doesn't

679
00:29:59,389 --> 00:30:04,070
need to issues and how yeah what's what

680
00:30:02,239 --> 00:30:05,570
client behavior is part of the

681
00:30:04,070 --> 00:30:07,428
specification is unclear to me and I

682
00:30:05,570 --> 00:30:13,489
kind of think it might be a bit wrinkly

683
00:30:07,429 --> 00:30:14,960
yeah sounds good yes similar concerns

684
00:30:13,489 --> 00:30:17,509
this I mean I think one thing with this

685
00:30:14,960 --> 00:30:18,889
particular specifically is you know how

686
00:30:17,509 --> 00:30:20,389
do i how does the client know that the

687
00:30:18,889 --> 00:30:22,459
tow servers actually has any sort of

688
00:30:20,389 --> 00:30:24,408
relationship with an example come right

689
00:30:22,460 --> 00:30:26,059
so it sounds like this information is

690
00:30:24,409 --> 00:30:27,679
actually duplicating the information in

691
00:30:26,059 --> 00:30:29,210
the in the HTTP service record that

692
00:30:27,679 --> 00:30:30,169
tells you I am the DOE forever for this

693
00:30:29,210 --> 00:30:33,529
domain okay

694
00:30:30,169 --> 00:30:35,269
to clarify and sorry I didn't make that

695
00:30:33,529 --> 00:30:37,879
it's clear we're speaking through this

696
00:30:35,269 --> 00:30:40,639
but it is in the document this is

697
00:30:37,879 --> 00:30:43,759
essentially a hint of things that you

698
00:30:40,639 --> 00:30:47,059
should go look up using the HTTP service

699
00:30:43,759 --> 00:30:49,429
record to get that official device why

700
00:30:47,059 --> 00:30:51,229
not just use this HTTP service records

701
00:30:49,429 --> 00:30:53,200
with the TTLs so then I get all the

702
00:30:51,229 --> 00:30:55,969
information that I need as a client I

703
00:30:53,200 --> 00:30:56,810
think the client if he doesn't know

704
00:30:55,969 --> 00:30:59,480
about

705
00:30:56,810 --> 00:31:00,830
so apple.com if it doesn't know that

706
00:30:59,480 --> 00:31:03,710
iCloud is a thing that it should ask

707
00:31:00,830 --> 00:31:05,990
about this is essentially just a way to

708
00:31:03,710 --> 00:31:08,570
optimize and prefetch the comments yeah

709
00:31:05,990 --> 00:31:11,060
yeah I still have to ask for them but if

710
00:31:08,570 --> 00:31:13,370
you--if instead of just an optimization

711
00:31:11,060 --> 00:31:14,690
it was actually I'm gonna optimize by

712
00:31:13,370 --> 00:31:16,580
giving you the information that you will

713
00:31:14,690 --> 00:31:18,080
need anyway if you use any of these then

714
00:31:16,580 --> 00:31:21,169
that would be I think it'll be simpler

715
00:31:18,080 --> 00:31:23,300
but we could take that offline sure just

716
00:31:21,170 --> 00:31:24,920
just by giving you the reference because

717
00:31:23,300 --> 00:31:26,690
at the end of the day if I get this I'm

718
00:31:24,920 --> 00:31:28,250
like sure you you think your authority

719
00:31:26,690 --> 00:31:31,310
for example.com that's just your opinion

720
00:31:28,250 --> 00:31:32,630
do you say they ask for a service just

721
00:31:31,310 --> 00:31:36,260
give it to me there with the signature

722
00:31:32,630 --> 00:31:37,580
so I think right so what would happen is

723
00:31:36,260 --> 00:31:39,440
they would be pushing those records at

724
00:31:37,580 --> 00:31:43,399
the same time I think it's often that

725
00:31:39,440 --> 00:31:45,830
from at least from a client DNS API we

726
00:31:43,400 --> 00:31:49,850
we don't bubble up record information

727
00:31:45,830 --> 00:31:52,220
that was an unasked for okay I was

728
00:31:49,850 --> 00:31:55,429
thinking okay I had some other some

729
00:31:52,220 --> 00:31:56,930
other some other questions I think do

730
00:31:55,430 --> 00:31:58,310
you have a lot because you just won

731
00:31:56,930 --> 00:32:00,250
three people and we're like minutes

732
00:31:58,310 --> 00:32:04,429
behind schedule already so structurally

733
00:32:00,250 --> 00:32:06,710
why tie oblivious an opportunistic to

734
00:32:04,430 --> 00:32:07,310
the end-to-end bottle it seems like two

735
00:32:06,710 --> 00:32:10,460
different things

736
00:32:07,310 --> 00:32:14,210
yeah I think didn't seem to be any

737
00:32:10,460 --> 00:32:15,050
explanation a draft why mm and I think

738
00:32:14,210 --> 00:32:21,860
that's something that we're discussing

739
00:32:15,050 --> 00:32:23,000
about decoupling Ben Schwartz so there's

740
00:32:21,860 --> 00:32:25,129
a lot of details here I think it's

741
00:32:23,000 --> 00:32:26,600
tempting to to dive right into all of

742
00:32:25,130 --> 00:32:28,430
the diesels oh thanks for the detailed

743
00:32:26,600 --> 00:32:29,480
proposal I think we should still be

744
00:32:28,430 --> 00:32:32,690
thinking a little bit more about

745
00:32:29,480 --> 00:32:36,220
architecture yes um it seems to me that

746
00:32:32,690 --> 00:32:38,870
some people have said this that you're

747
00:32:36,220 --> 00:32:41,030
you're building a spectrum between

748
00:32:38,870 --> 00:32:44,389
recursive and authoritative here I think

749
00:32:41,030 --> 00:32:47,240
that's a cool idea I think that there's

750
00:32:44,390 --> 00:32:48,920
it would be worthwhile trying to

751
00:32:47,240 --> 00:32:52,970
harmonize this with the recursive to

752
00:32:48,920 --> 00:32:55,460
authoritative encryption mm-hm

753
00:32:52,970 --> 00:32:59,180
because fundamentally what what I think

754
00:32:55,460 --> 00:33:02,300
we have here to me it looks like a mode

755
00:32:59,180 --> 00:33:06,980
switching a mode switching resolver

756
00:33:02,300 --> 00:33:08,899
which is recursive when encryption when

757
00:33:06,980 --> 00:33:10,160
transport encryption is available and

758
00:33:08,900 --> 00:33:11,510
stub

759
00:33:10,160 --> 00:33:16,880
when transport encryption is not

760
00:33:11,510 --> 00:33:18,940
available right I think the lines with a

761
00:33:16,880 --> 00:33:20,870
rock on my end to announce a bit of this

762
00:33:18,940 --> 00:33:23,780
encourage you really to look in the

763
00:33:20,870 --> 00:33:26,179
other transport like dot and DNS over

764
00:33:23,780 --> 00:33:28,310
over over Quaker eventually I mean we

765
00:33:26,180 --> 00:33:29,900
don't need the NSI and I Forge dot for

766
00:33:28,310 --> 00:33:33,740
instance I mean there's just some

767
00:33:29,900 --> 00:33:35,510
simplicity that is there and if echoing

768
00:33:33,740 --> 00:33:38,630
what Ben said if we really could make

769
00:33:35,510 --> 00:33:41,390
that similar to what we have in the

770
00:33:38,630 --> 00:33:44,450
regular recursive to authoritative it

771
00:33:41,390 --> 00:33:50,000
would be probably better make the same

772
00:33:44,450 --> 00:34:06,260
print okay thank you the last person in

773
00:33:50,000 --> 00:34:08,870
the queued the queue was closed that

774
00:34:06,260 --> 00:34:12,260
have melissamia principles of spreading

775
00:34:08,870 --> 00:34:15,138
queries across multiple service other

776
00:34:12,260 --> 00:34:17,210
than losing a single resolver I think

777
00:34:15,139 --> 00:34:19,129
there should be an analysis whether this

778
00:34:17,210 --> 00:34:20,870
is compatible actually in providing more

779
00:34:19,129 --> 00:34:22,759
privacy to us because I've seen several

780
00:34:20,870 --> 00:34:25,250
times that we should spread out the

781
00:34:22,760 --> 00:34:27,200
queries to provide more privacy and this

782
00:34:25,250 --> 00:34:28,850
is exactly the opposite of the privacy

783
00:34:27,199 --> 00:34:30,259
protection model at least in Europe and

784
00:34:28,850 --> 00:34:31,909
in the countess that follows a model

785
00:34:30,260 --> 00:34:33,950
which is about that a minimization so

786
00:34:31,909 --> 00:34:36,919
about sending us less data as you can to

787
00:34:33,949 --> 00:34:38,719
as less places that you can and so I I

788
00:34:36,918 --> 00:34:40,969
don't know if this is actually ever

789
00:34:38,719 --> 00:34:42,589
could be compatible improperly

790
00:34:40,969 --> 00:34:45,830
improperly usable in in this kind of

791
00:34:42,590 --> 00:34:47,540
context and I think that before claiming

792
00:34:45,830 --> 00:34:49,429
this increases the privacy there should

793
00:34:47,540 --> 00:34:51,529
be some problem study privacy impact

794
00:34:49,429 --> 00:34:53,090
assessment deciding without actually

795
00:34:51,530 --> 00:34:56,300
spreading that around process more

796
00:34:53,090 --> 00:34:58,250
privacy than less and also you okay it

797
00:34:56,300 --> 00:34:59,840
seems your other people have already

798
00:34:58,250 --> 00:35:01,610
said that you're basically trying to get

799
00:34:59,840 --> 00:35:03,890
rid of the cross on the middle using the

800
00:35:01,610 --> 00:35:07,250
authorities directly from the client the

801
00:35:03,890 --> 00:35:08,960
I mean again I don't see how this would

802
00:35:07,250 --> 00:35:10,910
benefit privacy because in the end

803
00:35:08,960 --> 00:35:13,340
you're actually having third parties

804
00:35:10,910 --> 00:35:15,560
tell where the users data should go and

805
00:35:13,340 --> 00:35:17,180
again this is not how privacy works this

806
00:35:15,560 --> 00:35:18,620
is I mean that piracy is about the data

807
00:35:17,180 --> 00:35:20,600
and the people choosing where the data

808
00:35:18,620 --> 00:35:22,400
go and having them some of the big

809
00:35:20,600 --> 00:35:23,910
internal platforms telling my client

810
00:35:22,400 --> 00:35:26,210
well my data should or is

811
00:35:23,910 --> 00:35:28,680
really not helping my privacy at all

812
00:35:26,210 --> 00:35:31,410
okay so I think the assertion I would

813
00:35:28,680 --> 00:35:35,750
make to that is if I am about to connect

814
00:35:31,410 --> 00:35:38,160
to google.com Google comm for sure knows

815
00:35:35,750 --> 00:35:39,930
you know who I am at least for them

816
00:35:38,160 --> 00:35:43,348
whatever stance I am going through some

817
00:35:39,930 --> 00:35:46,848
proxy or VPN maybe but I I do for sure

818
00:35:43,349 --> 00:35:50,780
have a relationship with them and so I

819
00:35:46,849 --> 00:35:53,579
think analysis is warranted but doing

820
00:35:50,780 --> 00:35:56,010
resolution using that same

821
00:35:53,579 --> 00:35:57,720
infrastructure to Google outcome is not

822
00:35:56,010 --> 00:35:59,880
giving them any new information about

823
00:35:57,720 --> 00:36:01,740
Who I am I'm about to connect to that

824
00:35:59,880 --> 00:36:04,470
same address that they are giving me and

825
00:36:01,740 --> 00:36:07,229
so the idea is yes let's not spread it

826
00:36:04,470 --> 00:36:08,788
to other servers that have nothing to do

827
00:36:07,230 --> 00:36:10,319
with this but if we know we can get back

828
00:36:08,789 --> 00:36:12,630
to the server that is actually the

829
00:36:10,319 --> 00:36:14,579
responsible hosting party then we are

830
00:36:12,630 --> 00:36:15,930
not expanding the set of data that we

831
00:36:14,579 --> 00:36:18,839
were giving to the network I think we

832
00:36:15,930 --> 00:36:20,700
need to discuss that okay thank you so

833
00:36:18,839 --> 00:36:23,609
so thanks one thing I wanted to say real

834
00:36:20,700 --> 00:36:25,140
quick for crimson is we know is

835
00:36:23,609 --> 00:36:26,609
discussed in the in the bath and the

836
00:36:25,140 --> 00:36:28,950
chairs are gonna sit down and sort of

837
00:36:26,609 --> 00:36:31,288
talk about the traps and stuff but this

838
00:36:28,950 --> 00:36:33,118
part of this does fall in the deprived

839
00:36:31,289 --> 00:36:36,210
charter work because our Charter is

840
00:36:33,119 --> 00:36:37,740
pretty tight sort of you know so so

841
00:36:36,210 --> 00:36:40,319
Brian and I are gonna sit down and talk

842
00:36:37,740 --> 00:36:41,640
with Ben and David as well as about this

843
00:36:40,319 --> 00:36:44,460
and see where this goes sort of thing

844
00:36:41,640 --> 00:36:45,629
but if so that conversation probably

845
00:36:44,460 --> 00:36:48,539
should end up start moving over to

846
00:36:45,630 --> 00:36:50,099
deprive out of the deal it's just a sort

847
00:36:48,539 --> 00:36:51,569
of so we have a better way of tracking

848
00:36:50,099 --> 00:36:55,650
some of that that's good thank you okay

849
00:36:51,569 --> 00:36:56,819
great thanks all right hello everyone my

850
00:36:55,650 --> 00:36:59,010
name is Chris Wood and I'm gonna talk

851
00:36:56,819 --> 00:37:00,779
about the specifically the oblivious

852
00:36:59,010 --> 00:37:02,730
part of this proposal so thank you Tommy

853
00:37:00,779 --> 00:37:04,890
for sort of giving the big architectural

854
00:37:02,730 --> 00:37:07,140
overview this is going to specifically

855
00:37:04,890 --> 00:37:08,910
focus on how we want a proxy of livius

856
00:37:07,140 --> 00:37:10,680
queries in the case where we don't trust

857
00:37:08,910 --> 00:37:14,848
our particular resolver to do resolution

858
00:37:10,680 --> 00:37:17,339
for us so Libya snow much like oblivious

859
00:37:14,849 --> 00:37:19,650
DNS is designed to support proxy

860
00:37:17,339 --> 00:37:22,799
inquiries between clients and an

861
00:37:19,650 --> 00:37:25,680
untrusted resolver pretty simple and

862
00:37:22,799 --> 00:37:27,089
concept we have a couple assumptions

863
00:37:25,680 --> 00:37:31,410
we're making about actually running this

864
00:37:27,089 --> 00:37:33,509
in practice in particular there's that

865
00:37:31,410 --> 00:37:34,828
the clients in order to run an oblivious

866
00:37:33,510 --> 00:37:37,140
don't need to know the public key of

867
00:37:34,829 --> 00:37:37,680
what we call a target resolver which

868
00:37:37,140 --> 00:37:39,150
will eventually

869
00:37:37,680 --> 00:37:41,460
we actually do the resolution of the

870
00:37:39,150 --> 00:37:42,990
name that the clients are after and

871
00:37:41,460 --> 00:37:45,420
needs to know the public encryption key

872
00:37:42,990 --> 00:37:46,950
of that particular resolver it also

873
00:37:45,420 --> 00:37:52,020
needs to know the address of a willing

874
00:37:46,950 --> 00:37:53,819
proxy willing is very important here as

875
00:37:52,020 --> 00:37:56,089
far as assumptions about what we're

876
00:37:53,819 --> 00:37:58,410
making about this overall system

877
00:37:56,089 --> 00:38:00,750
minimally we require that the targets

878
00:37:58,410 --> 00:38:02,790
and the proxies are not colluding

879
00:38:00,750 --> 00:38:04,619
otherwise the whatever you would get

880
00:38:02,790 --> 00:38:07,460
from keeping these two entities disjoint

881
00:38:04,619 --> 00:38:10,710
is completely it completely falls apart

882
00:38:07,460 --> 00:38:12,750
and the goal much like oblivious DNS

883
00:38:10,710 --> 00:38:14,790
which I assume must be here are familiar

884
00:38:12,750 --> 00:38:17,849
with is to make sure that an entity

885
00:38:14,790 --> 00:38:20,520
which gets the actual name to be

886
00:38:17,849 --> 00:38:24,030
resolved doesn't learn the IP address of

887
00:38:20,520 --> 00:38:25,680
the entity which issued the query you

888
00:38:24,030 --> 00:38:28,500
know modulo traffic analysis and things

889
00:38:25,680 --> 00:38:30,390
like that so we're focusing strictly on

890
00:38:28,500 --> 00:38:32,849
like what we can do best with

891
00:38:30,390 --> 00:38:34,859
cryptography traffic analysis is

892
00:38:32,849 --> 00:38:37,190
certainly important and something we

893
00:38:34,859 --> 00:38:42,690
will kind of keep under advisement but

894
00:38:37,190 --> 00:38:45,450
you know DVD future work etc etc so to

895
00:38:42,690 --> 00:38:47,250
actually look at what an oblivious doe

896
00:38:45,450 --> 00:38:50,308
message looks like it's very similar to

897
00:38:47,250 --> 00:38:52,170
a doe message right now except that the

898
00:38:50,309 --> 00:38:54,930
body instead of containing potentially

899
00:38:52,170 --> 00:38:57,480
you know a plaintext doe message or

900
00:38:54,930 --> 00:38:59,549
whatever our DNS message it just has an

901
00:38:57,480 --> 00:39:01,290
encryption of an envelope Livius DNS

902
00:38:59,549 --> 00:39:06,930
query the contents of which I will

903
00:39:01,290 --> 00:39:10,529
describe in a little bit the path for

904
00:39:06,930 --> 00:39:13,348
the DOE message indicates the target to

905
00:39:10,530 --> 00:39:15,059
which the message should be sent so in

906
00:39:13,349 --> 00:39:18,329
this particular example we have the

907
00:39:15,059 --> 00:39:21,270
client sending an oblivious query to the

908
00:39:18,329 --> 00:39:24,119
target example net target with a

909
00:39:21,270 --> 00:39:25,859
specific euro path indicating the

910
00:39:24,119 --> 00:39:27,869
content type that this is an oblivious

911
00:39:25,859 --> 00:39:30,109
DNS message with some other headers

912
00:39:27,869 --> 00:39:34,799
another HTTP group to make it all work

913
00:39:30,109 --> 00:39:36,569
so this is the scenario we have client

914
00:39:34,799 --> 00:39:38,130
wants to resolve a particular name

915
00:39:36,569 --> 00:39:41,819
through nutbar in this particular case

916
00:39:38,130 --> 00:39:44,640
using the target DOE server target

917
00:39:41,819 --> 00:39:46,859
example net and the client has learned

918
00:39:44,640 --> 00:39:48,480
the public encryption key via one of the

919
00:39:46,859 --> 00:39:50,950
mechanisms described in the update of

920
00:39:48,480 --> 00:39:53,140
Jean s draft or via carrier pigeon or by

921
00:39:50,950 --> 00:39:54,669
some provisioning mechanism you know

922
00:39:53,140 --> 00:39:58,029
that's sort of out of the scope of this

923
00:39:54,670 --> 00:39:59,710
particular document so he does is quite

924
00:39:58,030 --> 00:40:02,490
simple much like in the oblivious DNS

925
00:39:59,710 --> 00:40:04,660
case he basically takes that name

926
00:40:02,490 --> 00:40:06,879
encrypts it alongside a randomly

927
00:40:04,660 --> 00:40:09,220
generated symmetric key which is K in

928
00:40:06,880 --> 00:40:11,290
this particular case packages that up as

929
00:40:09,220 --> 00:40:15,970
the you know in the oblivious DNS

930
00:40:11,290 --> 00:40:18,970
message sends it to the proxy indicating

931
00:40:15,970 --> 00:40:23,049
the target target example.com who will

932
00:40:18,970 --> 00:40:26,529
happily forward the message over to

933
00:40:23,050 --> 00:40:29,050
target example.com using you know that

934
00:40:26,530 --> 00:40:32,740
the the target name that was identified

935
00:40:29,050 --> 00:40:35,619
in the message target then naturally

936
00:40:32,740 --> 00:40:37,299
decrypt using its public key to you know

937
00:40:35,619 --> 00:40:39,450
discover the name that the client wishes

938
00:40:37,300 --> 00:40:41,829
to resolve does the resolution to

939
00:40:39,450 --> 00:40:43,660
identify and address and encrypts that

940
00:40:41,829 --> 00:40:47,230
answer under the randomly symmetric

941
00:40:43,660 --> 00:40:49,359
randomly generates metric key k and then

942
00:40:47,230 --> 00:40:51,099
sends that back to the proxy who then

943
00:40:49,359 --> 00:40:55,650
just happily for is it onto the client

944
00:40:51,099 --> 00:40:58,660
very simple and the client would use it

945
00:40:55,650 --> 00:41:01,990
and so the idea much like oblivious DNS

946
00:40:58,660 --> 00:41:05,440
is that by having this proxy effectively

947
00:41:01,990 --> 00:41:08,069
in between the client and the target the

948
00:41:05,440 --> 00:41:11,260
separation there is a separation between

949
00:41:08,069 --> 00:41:12,550
you know the entity which knows the name

950
00:41:11,260 --> 00:41:15,339
which is the target in this particular

951
00:41:12,550 --> 00:41:17,140
case and the entities which know the IP

952
00:41:15,339 --> 00:41:18,310
address of the client of course like if

953
00:41:17,140 --> 00:41:20,379
they are colluding the proxy in the

954
00:41:18,310 --> 00:41:22,150
target proxy could say oh by the way

955
00:41:20,380 --> 00:41:23,980
here's the IP address of the target so

956
00:41:22,150 --> 00:41:26,050
that's not great so that's an assumption

957
00:41:23,980 --> 00:41:27,630
we sort of make in the system and I'll

958
00:41:26,050 --> 00:41:29,680
get to that in just a little bit later

959
00:41:27,630 --> 00:41:30,670
I'd also like to point out that the

960
00:41:29,680 --> 00:41:32,140
threat model that we're sort of

961
00:41:30,670 --> 00:41:33,310
considering here is an adversary which

962
00:41:32,140 --> 00:41:35,529
would potentially sit in multiple places

963
00:41:33,310 --> 00:41:37,569
the network in particular between the

964
00:41:35,530 --> 00:41:40,990
client and the proxy as well as between

965
00:41:37,569 --> 00:41:44,410
the proxy and the target which is why

966
00:41:40,990 --> 00:41:46,868
these connections are encrypted by TLS

967
00:41:44,410 --> 00:41:48,940
it's if you were not concerned for

968
00:41:46,869 --> 00:41:51,099
example about an adversary sitting

969
00:41:48,940 --> 00:41:53,290
between the proxy and the target it

970
00:41:51,099 --> 00:41:55,660
might not be necessary to use TLS at all

971
00:41:53,290 --> 00:41:56,890
anywhere the message is already

972
00:41:55,660 --> 00:41:59,109
encrypted you could just have something

973
00:41:56,890 --> 00:42:01,960
like a simple TCP proxy for any messages

974
00:41:59,109 --> 00:42:03,098
on behalf of the client but because

975
00:42:01,960 --> 00:42:04,570
we're trying to assume sort of a worst

976
00:42:03,099 --> 00:42:06,760
case scenario

977
00:42:04,570 --> 00:42:07,990
we put TLS everywhere and it's sort of

978
00:42:06,760 --> 00:42:10,840
just good hygiene to use to get less

979
00:42:07,990 --> 00:42:13,330
everywhere so I also know that the

980
00:42:10,840 --> 00:42:14,860
adversary could be sitting to the right

981
00:42:13,330 --> 00:42:17,230
of the target as well between the target

982
00:42:14,860 --> 00:42:19,120
and the upstream authoritative I didn't

983
00:42:17,230 --> 00:42:23,590
draw that here but that's sort of

984
00:42:19,120 --> 00:42:26,589
included in the threat model right so

985
00:42:23,590 --> 00:42:28,480
there are of course some oblivion

986
00:42:26,590 --> 00:42:31,120
concerns that one might have in

987
00:42:28,480 --> 00:42:34,570
considering whether or not to deploy

988
00:42:31,120 --> 00:42:37,259
oblivious though first one you know is

989
00:42:34,570 --> 00:42:40,510
the public key encryption overhead of

990
00:42:37,260 --> 00:42:45,250
processing for each individual query too

991
00:42:40,510 --> 00:42:49,480
much it seems not of course you know

992
00:42:45,250 --> 00:42:52,090
says the client but considering that you

993
00:42:49,480 --> 00:42:56,110
know we're going towards a world in

994
00:42:52,090 --> 00:42:57,960
which we have ES and I and I guess I'll

995
00:42:56,110 --> 00:43:01,180
assign eyes the motivating factor here

996
00:42:57,960 --> 00:43:03,010
every single new TLS connection most

997
00:43:01,180 --> 00:43:05,730
likely will require at least two public

998
00:43:03,010 --> 00:43:09,910
key operations to even get things going

999
00:43:05,730 --> 00:43:11,830
so it doesn't seem like much more of a

1000
00:43:09,910 --> 00:43:15,310
stretch to do another public key

1001
00:43:11,830 --> 00:43:17,080
decryption again caveat I am the client

1002
00:43:15,310 --> 00:43:18,730
you're not speaking after the server so

1003
00:43:17,080 --> 00:43:21,700
if the server's are you know think this

1004
00:43:18,730 --> 00:43:23,380
is terrible please tell us if initially

1005
00:43:21,700 --> 00:43:25,810
we could reuse connections or do

1006
00:43:23,380 --> 00:43:30,280
something like that but to make sure

1007
00:43:25,810 --> 00:43:31,390
that each query was not linkable we use

1008
00:43:30,280 --> 00:43:34,240
public key encryption for each

1009
00:43:31,390 --> 00:43:37,330
individual query so that there's no like

1010
00:43:34,240 --> 00:43:40,479
state across consecutive queries from

1011
00:43:37,330 --> 00:43:43,930
clients a second big one is what

1012
00:43:40,480 --> 00:43:45,760
motivates an entity to proxy traffic so

1013
00:43:43,930 --> 00:43:49,120
currently in the draft what we have

1014
00:43:45,760 --> 00:43:50,440
specified and you know this is something

1015
00:43:49,120 --> 00:43:53,680
we're still in discussion with as

1016
00:43:50,440 --> 00:43:57,250
various folks is that a client will only

1017
00:43:53,680 --> 00:43:59,620
use a target a designated target if that

1018
00:43:57,250 --> 00:44:03,400
target is willing to also behave as a

1019
00:43:59,620 --> 00:44:06,279
proxy for other traffic and the idea

1020
00:44:03,400 --> 00:44:08,230
being that it's in the best interest of

1021
00:44:06,280 --> 00:44:10,300
the target to offer this particular

1022
00:44:08,230 --> 00:44:12,220
service because it can improve the

1023
00:44:10,300 --> 00:44:15,880
performance of clients connecting to the

1024
00:44:12,220 --> 00:44:17,200
services that it hosts absent that all

1025
00:44:15,880 --> 00:44:18,370
queries will be sent through an

1026
00:44:17,200 --> 00:44:21,850
oblivious proxy in the

1027
00:44:18,370 --> 00:44:23,350
the user experience will degrade of

1028
00:44:21,850 --> 00:44:25,180
course if there are willing Samaritans

1029
00:44:23,350 --> 00:44:28,810
that are happy I will happily run

1030
00:44:25,180 --> 00:44:31,649
proxies that would be great but right

1031
00:44:28,810 --> 00:44:33,759
now that's what we currently specified

1032
00:44:31,650 --> 00:44:35,710
another question is how do we know for

1033
00:44:33,760 --> 00:44:37,450
sure that the client how does the client

1034
00:44:35,710 --> 00:44:40,060
know for sure that the target and the

1035
00:44:37,450 --> 00:44:41,770
proxy are not the same entity of course

1036
00:44:40,060 --> 00:44:44,500
I was saying earlier sort of you know

1037
00:44:41,770 --> 00:44:45,310
makes everything kind of fall apart and

1038
00:44:44,500 --> 00:44:47,710
I think at the end of the day there's

1039
00:44:45,310 --> 00:44:49,420
really nothing technically mechanically

1040
00:44:47,710 --> 00:44:52,510
that clients can do to sort of you know

1041
00:44:49,420 --> 00:44:54,640
get that assurance you can tweak with

1042
00:44:52,510 --> 00:44:56,200
and play with the resolution algorithms

1043
00:44:54,640 --> 00:45:01,390
and how you choose your proxies and your

1044
00:44:56,200 --> 00:45:03,250
targets to sort of try to improve or

1045
00:45:01,390 --> 00:45:04,870
decrease the chance that they are the

1046
00:45:03,250 --> 00:45:06,340
same entity you might for example choose

1047
00:45:04,870 --> 00:45:08,200
like a proxy that's very close to you in

1048
00:45:06,340 --> 00:45:10,150
a target that's very far away for some

1049
00:45:08,200 --> 00:45:12,910
definition of far and some definition of

1050
00:45:10,150 --> 00:45:14,670
distance and maybe that has a good

1051
00:45:12,910 --> 00:45:17,680
chance of then not being the same entity

1052
00:45:14,670 --> 00:45:19,030
but really the clients don't really have

1053
00:45:17,680 --> 00:45:21,220
any visibility so whether or not there's

1054
00:45:19,030 --> 00:45:23,860
a relationship between the proxy and the

1055
00:45:21,220 --> 00:45:25,750
target much like clients don't have any

1056
00:45:23,860 --> 00:45:27,370
knowledge of whether or not a TLS server

1057
00:45:25,750 --> 00:45:29,230
is exfiltrating keys and just sending

1058
00:45:27,370 --> 00:45:31,750
them off to someone to you know

1059
00:45:29,230 --> 00:45:34,030
decrypt traffic so I think we kind of

1060
00:45:31,750 --> 00:45:36,070
for the most part take that as a given I

1061
00:45:34,030 --> 00:45:39,280
think it's the last question is why you

1062
00:45:36,070 --> 00:45:41,350
doe like why use doe is the transport as

1063
00:45:39,280 --> 00:45:46,000
a proxy and I just want to go back to

1064
00:45:41,350 --> 00:45:48,130
the earlier slide this one about the

1065
00:45:46,000 --> 00:45:49,330
threat model because we're assuming that

1066
00:45:48,130 --> 00:45:51,400
the adversary can say to multiple

1067
00:45:49,330 --> 00:45:53,200
vantage points in the network we want to

1068
00:45:51,400 --> 00:45:54,880
encrypt that connection because this

1069
00:45:53,200 --> 00:45:59,859
oblivious doe just makes sense to use

1070
00:45:54,880 --> 00:46:02,140
doe which as HBS which has TLS now like

1071
00:45:59,860 --> 00:46:04,810
I said earlier if you are assuming sort

1072
00:46:02,140 --> 00:46:06,520
of a you know a weaker adversary one

1073
00:46:04,810 --> 00:46:07,570
that's not proliferate throughout the

1074
00:46:06,520 --> 00:46:09,370
network

1075
00:46:07,570 --> 00:46:10,660
perhaps it's simple TCP proxy might

1076
00:46:09,370 --> 00:46:12,040
suffice but for now we're sort of

1077
00:46:10,660 --> 00:46:17,259
assuming the worst case and we're going

1078
00:46:12,040 --> 00:46:19,050
we're using doe there are possible with

1079
00:46:17,260 --> 00:46:20,440
different directions you could take this

1080
00:46:19,050 --> 00:46:27,610
for example

1081
00:46:20,440 --> 00:46:29,410
if you wanted to build tor perhaps I

1082
00:46:27,610 --> 00:46:32,150
should have said that but if you wanted

1083
00:46:29,410 --> 00:46:37,009
to do something like tor

1084
00:46:32,150 --> 00:46:39,710
in which instead of having just a proxy

1085
00:46:37,010 --> 00:46:45,710
that forwards an encryption along from

1086
00:46:39,710 --> 00:46:47,540
the client so instead of having a proxy

1087
00:46:45,710 --> 00:46:50,200
that yeah just forwards a message and

1088
00:46:47,540 --> 00:46:52,610
having and you wanted one that decrypt

1089
00:46:50,200 --> 00:46:54,439
actively decrypt something from the

1090
00:46:52,610 --> 00:46:55,670
client discovers something else that

1091
00:46:54,440 --> 00:46:56,960
could potentially be you know another

1092
00:46:55,670 --> 00:47:00,980
encrypted message itself

1093
00:46:56,960 --> 00:47:02,810
or something to resolve and send it you

1094
00:47:00,980 --> 00:47:04,970
know you you could in theory build that

1095
00:47:02,810 --> 00:47:06,200
into the protocol but it's not clear

1096
00:47:04,970 --> 00:47:10,910
right now that that's the direction we

1097
00:47:06,200 --> 00:47:12,560
want to go in I guess another concern or

1098
00:47:10,910 --> 00:47:14,509
you know observation that has been

1099
00:47:12,560 --> 00:47:17,870
raised is that this is a bit too

1100
00:47:14,510 --> 00:47:21,140
specific to doe itself you might want to

1101
00:47:17,870 --> 00:47:24,470
generalize it to say just you know HTTP

1102
00:47:21,140 --> 00:47:26,270
messages and make go I specific DNS a

1103
00:47:24,470 --> 00:47:29,060
specific type of HB message that you

1104
00:47:26,270 --> 00:47:33,590
might send and might be proxy from a

1105
00:47:29,060 --> 00:47:35,840
client to a particular target so what

1106
00:47:33,590 --> 00:47:38,600
would that variants look like oblivious

1107
00:47:35,840 --> 00:47:40,550
HTTP well quite simple you would just

1108
00:47:38,600 --> 00:47:43,850
instead of having an encrypted DNS

1109
00:47:40,550 --> 00:47:47,020
message or inside the client request you

1110
00:47:43,850 --> 00:47:49,730
would have an encrypted HTTP message and

1111
00:47:47,020 --> 00:47:51,440
you would have the content type indicate

1112
00:47:49,730 --> 00:47:53,330
that this is in particular this is an

1113
00:47:51,440 --> 00:47:55,370
oblivious message and the proxy would

1114
00:47:53,330 --> 00:47:57,140
forward it as such I'm not advocating

1115
00:47:55,370 --> 00:47:59,359
for right now that's absolutely the

1116
00:47:57,140 --> 00:48:01,490
direction we should go in there you know

1117
00:47:59,360 --> 00:48:03,860
potential questions to be asked about

1118
00:48:01,490 --> 00:48:06,259
whether or not this opens up or turns

1119
00:48:03,860 --> 00:48:09,050
the DOE specific target into like an oak

1120
00:48:06,260 --> 00:48:10,250
dos Pacific proxy into an open proxy but

1121
00:48:09,050 --> 00:48:13,520
I think those are things we can sort of

1122
00:48:10,250 --> 00:48:15,890
work through and it'd be nice if this

1123
00:48:13,520 --> 00:48:20,540
this general mechanism was you know

1124
00:48:15,890 --> 00:48:25,029
potentially used outside of DOE so as

1125
00:48:20,540 --> 00:48:26,720
Tommy mentioned earlier we have a couple

1126
00:48:25,030 --> 00:48:27,980
places where you can get more

1127
00:48:26,720 --> 00:48:30,230
information about this particular work

1128
00:48:27,980 --> 00:48:32,840
we have the draft on github there are

1129
00:48:30,230 --> 00:48:35,120
two sample projects that have reference

1130
00:48:32,840 --> 00:48:37,010
code for both the the oblivious to--

1131
00:48:35,120 --> 00:48:39,140
functionality itself as well as a server

1132
00:48:37,010 --> 00:48:42,650
that you can spin up in Google Cloud if

1133
00:48:39,140 --> 00:48:44,560
you wanted to so you can check them out

1134
00:48:42,650 --> 00:48:46,270
I encourage

1135
00:48:44,560 --> 00:48:47,860
you know folks who are interested in

1136
00:48:46,270 --> 00:48:49,120
oblivious know stuff to take a look at

1137
00:48:47,860 --> 00:48:51,130
the draft as well as to take a look at

1138
00:48:49,120 --> 00:48:55,150
the oblivious DMS stuff from which this

1139
00:48:51,130 --> 00:48:56,860
work originally came and either you know

1140
00:48:55,150 --> 00:48:59,590
send us email or file issues on the

1141
00:48:56,860 --> 00:49:01,200
draft and with that I will take any

1142
00:48:59,590 --> 00:49:07,630
questions

1143
00:49:01,200 --> 00:49:10,540
it's okay Paul Hoffman this is the third

1144
00:49:07,630 --> 00:49:13,270
oblivious food thing I've seen um always

1145
00:49:10,540 --> 00:49:14,920
the first one was oblivious DNS in

1146
00:49:13,270 --> 00:49:16,420
general yeah so and I forget what the

1147
00:49:14,920 --> 00:49:19,050
middle one will finish your question but

1148
00:49:16,420 --> 00:49:21,130
I won't to clothesline now yeah sure

1149
00:49:19,050 --> 00:49:25,300
right I mean given that we're actually

1150
00:49:21,130 --> 00:49:28,240
Wendy five minutes yeah yeah so I think

1151
00:49:25,300 --> 00:49:30,340
you should do this as oblivious HTTP and

1152
00:49:28,240 --> 00:49:32,229
I think you should not do it here it is

1153
00:49:30,340 --> 00:49:33,790
actually not appropriate for deprive I

1154
00:49:32,230 --> 00:49:36,130
could totally see a working group

1155
00:49:33,790 --> 00:49:39,279
getting spun up with other things like

1156
00:49:36,130 --> 00:49:40,810
that but this is this has so little to

1157
00:49:39,280 --> 00:49:43,000
do with DNS and so much to do with

1158
00:49:40,810 --> 00:49:45,160
oblivious take it somewhere else but

1159
00:49:43,000 --> 00:49:48,820
it's certainly then we would have that

1160
00:49:45,160 --> 00:49:51,160
here both for Stubbs recursive and such

1161
00:49:48,820 --> 00:49:51,880
like that yeah thank you um that that

1162
00:49:51,160 --> 00:49:53,799
makes perfect sense

1163
00:49:51,880 --> 00:49:55,840
a it's here because it has dough in the

1164
00:49:53,800 --> 00:49:57,760
name right now but yes if we happen to

1165
00:49:55,840 --> 00:49:59,920
go down the oblivious HB message route

1166
00:49:57,760 --> 00:50:02,220
perhaps we date somewhere else lovely

1167
00:49:59,920 --> 00:50:05,110
back I'm a bit scared by the sort of

1168
00:50:02,220 --> 00:50:07,080
network of open proxies that we are

1169
00:50:05,110 --> 00:50:09,340
generating I mean DNS still has a

1170
00:50:07,080 --> 00:50:11,920
imbalance when it comes to the Curia and

1171
00:50:09,340 --> 00:50:15,910
response and I can easily see how you

1172
00:50:11,920 --> 00:50:17,920
could abuse that to kind of kill a doe

1173
00:50:15,910 --> 00:50:21,009
server a designate doe server by just

1174
00:50:17,920 --> 00:50:24,730
kind of blasting - episode amounts

1175
00:50:21,010 --> 00:50:29,230
graphic - it from a kind of a small to

1176
00:50:24,730 --> 00:50:31,330
medium botnet I'm not sure how the proxy

1177
00:50:29,230 --> 00:50:34,210
makes that problem worse clients could

1178
00:50:31,330 --> 00:50:36,160
also themselves send ones incredible

1179
00:50:34,210 --> 00:50:39,280
five ten targets it's easy it's easier

1180
00:50:36,160 --> 00:50:45,730
to identify if you kind of if you don't

1181
00:50:39,280 --> 00:50:47,290
go over the proxy valgus okay noted yes

1182
00:50:45,730 --> 00:50:48,790
potentially there are some issues that

1183
00:50:47,290 --> 00:50:51,900
we need to work through but yes we'll

1184
00:50:48,790 --> 00:50:54,720
take that under consideration thank you

1185
00:50:51,900 --> 00:50:56,549
I was wondering why not use split VPN or

1186
00:50:54,720 --> 00:50:59,069
other techniques to basically only

1187
00:50:56,549 --> 00:51:00,569
eternal DNS traffic I mean why do you

1188
00:50:59,069 --> 00:51:02,670
have to reinvent the wheel with regard

1189
00:51:00,569 --> 00:51:05,249
to this unique technique that you're

1190
00:51:02,670 --> 00:51:06,660
coming up with and can you repeat the

1191
00:51:05,249 --> 00:51:08,700
question I'm sorry yeah I was just

1192
00:51:06,660 --> 00:51:10,618
saying why not use split VPN why liquid

1193
00:51:08,700 --> 00:51:12,390
tunnel just the DNS traffic and that

1194
00:51:10,619 --> 00:51:15,269
would mask your IP address from the

1195
00:51:12,390 --> 00:51:17,759
authority word so why this technique how

1196
00:51:15,269 --> 00:51:19,529
is it better than split VPN or tor or

1197
00:51:17,759 --> 00:51:21,450
other services that are there already

1198
00:51:19,529 --> 00:51:23,519
don't analyze the IP address of the

1199
00:51:21,450 --> 00:51:25,859
endpoint are you saying VPN to the

1200
00:51:23,519 --> 00:51:28,470
target or VPN to something and then

1201
00:51:25,859 --> 00:51:31,170
that's something I did at bet that's

1202
00:51:28,470 --> 00:51:33,299
another type of proxy there's no reason

1203
00:51:31,170 --> 00:51:35,130
not to do that great so I'm saying I'm

1204
00:51:33,299 --> 00:51:36,720
saying it would be good to discuss what

1205
00:51:35,130 --> 00:51:39,630
the pros and cons of each of these

1206
00:51:36,720 --> 00:51:40,769
mechanisms to see yeah I think there's a

1207
00:51:39,630 --> 00:51:42,329
discussion there's a section in the

1208
00:51:40,769 --> 00:51:44,220
draft like describing what other proxy

1209
00:51:42,329 --> 00:51:46,680
technologies could use until I see cloud

1210
00:51:44,220 --> 00:51:49,319
free hosting already or tow service

1211
00:51:46,680 --> 00:51:51,450
within the Tor network right on in

1212
00:51:49,319 --> 00:51:53,160
service so how's that better than this

1213
00:51:51,450 --> 00:51:54,220
one or that would be a good discussion

1214
00:51:53,160 --> 00:51:56,899
to have absolutely thank you

1215
00:51:54,220 --> 00:51:59,759
[Music]

1216
00:51:56,900 --> 00:52:02,009
from the jabber room Peter spa check

1217
00:51:59,759 --> 00:52:04,109
limiting ourselves to DNS is not going

1218
00:52:02,009 --> 00:52:05,549
to help privacy for reasons stated in

1219
00:52:04,109 --> 00:52:09,499
the previous discussion let's try

1220
00:52:05,549 --> 00:52:13,470
oblivious HTTP transport okay thank you

1221
00:52:09,499 --> 00:52:14,999
it's doing well so I guess I'm in two

1222
00:52:13,470 --> 00:52:18,589
minds about how you whether you should

1223
00:52:14,999 --> 00:52:20,459
generalize this or not so previously I

1224
00:52:18,589 --> 00:52:24,049
mean it would be really nice to have a

1225
00:52:20,460 --> 00:52:26,130
standard tour like thing I think but

1226
00:52:24,049 --> 00:52:29,009
it's not clear that people will be

1227
00:52:26,130 --> 00:52:31,289
willing to offer servers and you don't

1228
00:52:29,009 --> 00:52:33,930
get the kind of the agility that tor

1229
00:52:31,289 --> 00:52:36,930
requires itself to deal with to do

1230
00:52:33,930 --> 00:52:39,359
circumvention if you standardize I need

1231
00:52:36,930 --> 00:52:41,819
it so technically it might be nice to

1232
00:52:39,359 --> 00:52:44,009
standardize to expand this to be a more

1233
00:52:41,819 --> 00:52:46,349
generic thing um but then you might not

1234
00:52:44,009 --> 00:52:49,489
get the relays offering service and you

1235
00:52:46,349 --> 00:52:51,660
might not get the sacrum engine you need

1236
00:52:49,489 --> 00:52:53,730
so it might actually be a better to

1237
00:52:51,660 --> 00:52:55,799
think about this as a purely DNS or e2

1238
00:52:53,730 --> 00:52:57,690
thing because maybe in that case you

1239
00:52:55,799 --> 00:52:59,369
don't need the agility that you need for

1240
00:52:57,690 --> 00:53:00,779
kind of more full circumvention and

1241
00:52:59,369 --> 00:53:03,660
perhaps people would be willing to offer

1242
00:53:00,779 --> 00:53:04,890
relays so I don't know well either I

1243
00:53:03,660 --> 00:53:05,790
think is a good thing to do or maybe

1244
00:53:04,890 --> 00:53:07,799
both yeah

1245
00:53:05,790 --> 00:53:10,710
thank you um I that's a very good point

1246
00:53:07,800 --> 00:53:12,510
I will note that in if we don't do any

1247
00:53:10,710 --> 00:53:14,460
generalization right now if you have a

1248
00:53:12,510 --> 00:53:16,710
colluding client and target you can

1249
00:53:14,460 --> 00:53:20,460
still use the posse to like send things

1250
00:53:16,710 --> 00:53:22,260
that are not not tudo messages you could

1251
00:53:20,460 --> 00:53:23,580
say like oh this this looks like an

1252
00:53:22,260 --> 00:53:25,050
oblivious tone message and the proxy

1253
00:53:23,580 --> 00:53:28,640
will happily move it but actually it's

1254
00:53:25,050 --> 00:53:30,560
you know something else so yes

1255
00:53:28,640 --> 00:53:33,870
interesting questions to answer

1256
00:53:30,560 --> 00:53:35,279
one quick sec if any of it can move to

1257
00:53:33,870 --> 00:53:37,049
the mailing list just in a sort of a

1258
00:53:35,280 --> 00:53:38,070
function of time that would be great but

1259
00:53:37,050 --> 00:53:39,990
just try to keep this short because

1260
00:53:38,070 --> 00:53:42,000
we're literally starting to run way

1261
00:53:39,990 --> 00:53:42,540
behind schedule sort of thing anyway we

1262
00:53:42,000 --> 00:53:45,150
go ahead

1263
00:53:42,540 --> 00:53:47,610
so Mike Bishop couple observations one

1264
00:53:45,150 --> 00:53:49,470
being that if your proxy is far from the

1265
00:53:47,610 --> 00:53:53,010
client then you will get poor CDN

1266
00:53:49,470 --> 00:53:56,430
mapping so your results may not be as

1267
00:53:53,010 --> 00:54:01,350
good also some observations from the

1268
00:53:56,430 --> 00:54:04,200
structure of tor tor uses a consistent

1269
00:54:01,350 --> 00:54:06,990
first node over a long period of time

1270
00:54:04,200 --> 00:54:09,450
because it under the theory that it is

1271
00:54:06,990 --> 00:54:11,580
better for a small fraction of clients

1272
00:54:09,450 --> 00:54:15,980
using that new to be compromised all the

1273
00:54:11,580 --> 00:54:19,140
time then for all clients to be to be

1274
00:54:15,980 --> 00:54:21,390
surveilled a certain percentage of the

1275
00:54:19,140 --> 00:54:25,290
time so you might consider using the

1276
00:54:21,390 --> 00:54:27,870
same relay over a longer time scale yeah

1277
00:54:25,290 --> 00:54:29,460
which proxy we use and how we actually

1278
00:54:27,870 --> 00:54:30,930
sort of stripe the queries across

1279
00:54:29,460 --> 00:54:32,610
proxies and targets is still something

1280
00:54:30,930 --> 00:54:34,669
we're sort of working out but yes that's

1281
00:54:32,610 --> 00:54:38,610
a very good point to raise and you might

1282
00:54:34,670 --> 00:54:40,320
be also taking a clue from tor you might

1283
00:54:38,610 --> 00:54:43,890
want to enable the use of multiple

1284
00:54:40,320 --> 00:54:45,180
relays yes it would be nice to sort of

1285
00:54:43,890 --> 00:54:46,890
extend it in that direction as well

1286
00:54:45,180 --> 00:54:48,660
because that way you increase the groups

1287
00:54:46,890 --> 00:54:51,259
that would have to collude to get full

1288
00:54:48,660 --> 00:54:54,330
trade yes

1289
00:54:51,260 --> 00:54:57,060
forensic evading just please bear in

1290
00:54:54,330 --> 00:54:59,160
mind latency as well I think for example

1291
00:54:57,060 --> 00:55:01,080
the fact that you you know that it uses

1292
00:54:59,160 --> 00:55:05,069
post means you can't do 0 TT reconnect

1293
00:55:01,080 --> 00:55:07,560
and so you know the DNS does need to be

1294
00:55:05,070 --> 00:55:09,240
latency sensitive also bear in mind that

1295
00:55:07,560 --> 00:55:11,460
you know DNS is extremely lightweight at

1296
00:55:09,240 --> 00:55:13,109
the moment and and instead of a full TLS

1297
00:55:11,460 --> 00:55:16,770
handshake can be for quick couldn't be

1298
00:55:13,110 --> 00:55:18,510
like you know 10 K so we sort of try to

1299
00:55:16,770 --> 00:55:19,589
keep that cheap as well yeah I would

1300
00:55:18,510 --> 00:55:20,999
imagine that the clients would

1301
00:55:19,589 --> 00:55:23,009
have sort of persistent connections to

1302
00:55:20,999 --> 00:55:26,009
the proxies but still be doing that you

1303
00:55:23,009 --> 00:55:27,989
know per query public key encryption but

1304
00:55:26,009 --> 00:55:30,599
yes that these are of course very of my

1305
00:55:27,989 --> 00:55:32,999
series Brand X and Caretti have you

1306
00:55:30,599 --> 00:55:35,940
thought about or looked at a three-way

1307
00:55:32,999 --> 00:55:37,738
party encryption for at least part of it

1308
00:55:35,940 --> 00:55:41,219
so you don't have to rely on the trust

1309
00:55:37,739 --> 00:55:43,410
between the proxy and the target I'm not

1310
00:55:41,219 --> 00:55:45,150
sure what you mean by three-way party

1311
00:55:43,410 --> 00:55:46,828
it's one of the diffie-hellman things

1312
00:55:45,150 --> 00:55:51,359
you can do with three parties to set a

1313
00:55:46,829 --> 00:55:53,609
to my group diffie-hellman will take an

1314
00:55:51,359 --> 00:56:21,900
offline yeah that would be good okay

1315
00:55:53,609 --> 00:56:23,940
thank you good morning everyone I'm

1316
00:56:21,900 --> 00:56:26,160
through I'll be presenting our draft on

1317
00:56:23,940 --> 00:56:34,589
Tina's server privacy policy whisper

1318
00:56:26,160 --> 00:56:36,328
session token' yeah the agenda is to go

1319
00:56:34,589 --> 00:56:39,269
the problem statement and the solution

1320
00:56:36,329 --> 00:56:41,579
view and the privacy policy of the DNS

1321
00:56:39,269 --> 00:56:44,008
server it's rejected by token and then

1322
00:56:41,579 --> 00:56:47,819
the examples of some privacy assertion

1323
00:56:44,009 --> 00:56:49,440
tokens why do you need Tina so privacy

1324
00:56:47,819 --> 00:56:52,109
policy right what are the user needs

1325
00:56:49,440 --> 00:56:54,479
basically one of the one is that even

1326
00:56:52,109 --> 00:56:56,489
with today the user does not know what

1327
00:56:54,479 --> 00:56:58,799
the DNS servers privacy policy is he has

1328
00:56:56,489 --> 00:57:01,410
to go and search and find out what the

1329
00:56:58,799 --> 00:57:03,180
DNS of a privacy policy he is and the

1330
00:57:01,410 --> 00:57:04,920
other bigger problem is what happens if

1331
00:57:03,180 --> 00:57:06,569
the DNS server privacy policy changes

1332
00:57:04,920 --> 00:57:08,910
the user would not even be aware that

1333
00:57:06,569 --> 00:57:11,819
the DNS server privacy policy has

1334
00:57:08,910 --> 00:57:14,910
changed and the third one is how do we

1335
00:57:11,819 --> 00:57:17,579
know that what the DNS server is saying

1336
00:57:14,910 --> 00:57:20,038
is actually the true statement of the

1337
00:57:17,579 --> 00:57:22,499
DNS server privacy policy right and

1338
00:57:20,039 --> 00:57:24,479
fourth one is because many of the

1339
00:57:22,499 --> 00:57:26,368
networks doo-deen is filtering how would

1340
00:57:24,479 --> 00:57:29,749
the client know whether the DNS server

1341
00:57:26,369 --> 00:57:29,749
is doing any sorts of DNS filtering

1342
00:57:31,210 --> 00:57:37,810
the solution is in is basically to let

1343
00:57:34,660 --> 00:57:39,609
the user know what is the the URL of the

1344
00:57:37,810 --> 00:57:41,830
readability in a server privacy policy

1345
00:57:39,609 --> 00:57:43,630
so that user can go all right the second

1346
00:57:41,830 --> 00:57:46,598
part of it is to provide a machine

1347
00:57:43,630 --> 00:57:49,000
possible dinosaur privacy policy that

1348
00:57:46,599 --> 00:57:50,800
allows a DNS server that the client can

1349
00:57:49,000 --> 00:57:53,109
pick which complies with the DNS clients

1350
00:57:50,800 --> 00:57:55,270
privacy policy we have aligned the

1351
00:57:53,109 --> 00:57:57,970
attributes in the DNS privacy policy to

1352
00:57:55,270 --> 00:57:59,950
be closely in line with the drop

1353
00:57:57,970 --> 00:58:02,529
structure in the in the best formal

1354
00:57:59,950 --> 00:58:04,990
practices entry Prime and this would

1355
00:58:02,530 --> 00:58:07,380
require some user consent and minimal

1356
00:58:04,990 --> 00:58:13,240
human intervention to select discovered

1357
00:58:07,380 --> 00:58:14,800
eh or devotee server the other

1358
00:58:13,240 --> 00:58:16,689
advantages of this mechanism would be

1359
00:58:14,800 --> 00:58:19,090
that the client would notice any updates

1360
00:58:16,690 --> 00:58:20,859
to the privacy policy changes and the

1361
00:58:19,090 --> 00:58:22,840
user would be notified if the privacy

1362
00:58:20,859 --> 00:58:25,509
policy claims of the DNS server changes

1363
00:58:22,840 --> 00:58:27,609
and finally the client can select a Lina

1364
00:58:25,510 --> 00:58:31,410
server that meets the privacy preserving

1365
00:58:27,609 --> 00:58:31,410
data policy requirements of the client

1366
00:58:32,650 --> 00:58:37,810
how do we the solution proposal is we

1367
00:58:35,740 --> 00:58:40,720
have DNS of a privacy policy it's in

1368
00:58:37,810 --> 00:58:42,640
Jason it would be signed by the domain

1369
00:58:40,720 --> 00:58:44,379
operating the DNS server it has to be

1370
00:58:42,640 --> 00:58:46,690
signed by the domain operating the DNS

1371
00:58:44,380 --> 00:58:51,040
server because the DNS transaction data

1372
00:58:46,690 --> 00:58:53,260
could be used by various entities within

1373
00:58:51,040 --> 00:58:54,790
the organization for analytics for DNS

1374
00:58:53,260 --> 00:58:58,450
filtering anomaly detection and other

1375
00:58:54,790 --> 00:59:00,490
purposes typically many of the DNS

1376
00:58:58,450 --> 00:59:02,740
servers would be subjected auditing by a

1377
00:59:00,490 --> 00:59:05,439
third party for security and privacy so

1378
00:59:02,740 --> 00:59:08,290
an auditing company can also optionally

1379
00:59:05,440 --> 00:59:10,510
sign the privacy policy statement this

1380
00:59:08,290 --> 00:59:12,310
is typically done today before VPN

1381
00:59:10,510 --> 00:59:14,109
providers became providers to go to

1382
00:59:12,310 --> 00:59:17,160
third-party auditors because they

1383
00:59:14,109 --> 00:59:19,960
provide services for IP anonymity and

1384
00:59:17,160 --> 00:59:22,270
this has to be signed probably by an OVA

1385
00:59:19,960 --> 00:59:24,010
or EB certificate for privacy claims

1386
00:59:22,270 --> 00:59:26,640
from registered organizations this would

1387
00:59:24,010 --> 00:59:30,040
at least prevent malware's from hosting

1388
00:59:26,640 --> 00:59:32,180
and getting a domain and getting a

1389
00:59:30,040 --> 00:59:35,120
certificate for that come in

1390
00:59:32,180 --> 00:59:37,160
and and the last part of it would be to

1391
00:59:35,120 --> 00:59:38,990
determine what kind of DNS filtering

1392
00:59:37,160 --> 00:59:41,299
would be done whether the DNS server is

1393
00:59:38,990 --> 00:59:43,879
doing malware blocking or has some

1394
00:59:41,300 --> 00:59:45,590
policy which could be censorship or some

1395
00:59:43,880 --> 00:59:47,360
blacklisting organizational a twisting

1396
00:59:45,590 --> 00:59:51,800
rule it has to basically block certain

1397
00:59:47,360 --> 00:59:53,900
domains this is a huge list of

1398
00:59:51,800 --> 00:59:55,760
attributes that we have listed in the

1399
00:59:53,900 --> 00:59:58,240
draft I mean I'll go through some of

1400
00:59:55,760 --> 01:00:00,590
them whether the IP address is PA or not

1401
00:59:58,240 --> 01:00:02,629
logging of transaction data and it's

1402
01:00:00,590 --> 01:00:04,640
corresponding duration whether the user

1403
01:00:02,630 --> 01:00:07,640
identity is logged and the duration for

1404
01:00:04,640 --> 01:00:10,100
that and type of DNS filtering malware

1405
01:00:07,640 --> 01:00:12,319
or or any specific policy for blocking

1406
01:00:10,100 --> 01:00:14,420
that many of the DNS providers today

1407
01:00:12,320 --> 01:00:16,670
share the transaction data with partners

1408
01:00:14,420 --> 01:00:18,590
and the name of the partners and whether

1409
01:00:16,670 --> 01:00:21,110
anonymous data or pseudo anonymous data

1410
01:00:18,590 --> 01:00:22,520
is shared with partners and if any data

1411
01:00:21,110 --> 01:00:25,610
is transferred to third parties and

1412
01:00:22,520 --> 01:00:28,370
typically DNS servers which do filtering

1413
01:00:25,610 --> 01:00:30,950
a log the DNS data which is being

1414
01:00:28,370 --> 01:00:32,660
blocked for notifying users and any

1415
01:00:30,950 --> 01:00:34,730
logging for analytics like anomaly

1416
01:00:32,660 --> 01:00:37,310
detection and whether it does queue name

1417
01:00:34,730 --> 01:00:40,340
minimization and a human readable URL

1418
01:00:37,310 --> 01:00:42,410
privacy URL and an audit URL and if the

1419
01:00:40,340 --> 01:00:44,900
client is communicating within of

1420
01:00:42,410 --> 01:00:46,490
leanness forwarder then the initial also

1421
01:00:44,900 --> 01:00:48,470
include the DNS recursive servers

1422
01:00:46,490 --> 01:00:50,479
privacy policy and if the connection

1423
01:00:48,470 --> 01:00:54,439
between the DNS forward and the DNS

1424
01:00:50,480 --> 01:00:55,910
because its server or secure or not so

1425
01:00:54,440 --> 01:00:57,590
what are we doing to get the privacy

1426
01:00:55,910 --> 01:00:58,819
session token' this is very similar to

1427
01:00:57,590 --> 01:01:01,040
the work happening in several working

1428
01:00:58,820 --> 01:01:03,140
groups like we're at straight out of the

1429
01:01:01,040 --> 01:01:04,759
working groups while using pact which is

1430
01:01:03,140 --> 01:01:07,460
chasing the token and Jason web

1431
01:01:04,760 --> 01:01:09,170
signatures client retrieves the privacy

1432
01:01:07,460 --> 01:01:11,360
session token using one of the methods

1433
01:01:09,170 --> 01:01:14,180
being discussed in the DNS of working

1434
01:01:11,360 --> 01:01:16,070
group the object has to be created by

1435
01:01:14,180 --> 01:01:18,259
the domain hosting the do TT webserver

1436
01:01:16,070 --> 01:01:20,060
and optionally can also be attested by

1437
01:01:18,260 --> 01:01:22,190
the third party which has done a privacy

1438
01:01:20,060 --> 01:01:25,730
and security audit of the devotee works

1439
01:01:22,190 --> 01:01:27,560
over so this is just a simple example of

1440
01:01:25,730 --> 01:01:29,750
a pad object you have an authentication

1441
01:01:27,560 --> 01:01:31,070
domain name the time it was issued the

1442
01:01:29,750 --> 01:01:33,020
expiry time and the privacy information

1443
01:01:31,070 --> 01:01:36,080
blob which includes all the privacy

1444
01:01:33,020 --> 01:01:39,590
details for the client and the machine

1445
01:01:36,080 --> 01:01:41,090
to parse and this would have the JW's

1446
01:01:39,590 --> 01:01:43,340
protected header which would point to

1447
01:01:41,090 --> 01:01:45,650
the signature algorithm and the

1448
01:01:43,340 --> 01:01:47,990
certificate public key to use for

1449
01:01:45,650 --> 01:01:50,450
finding the payload and as you see in

1450
01:01:47,990 --> 01:01:53,660
this example we have this payload both

1451
01:01:50,450 --> 01:01:56,180
protected by C assigned by the operator

1452
01:01:53,660 --> 01:02:01,640
who is operating the DNS server as well

1453
01:01:56,180 --> 01:02:10,399
as the third party auditor any questions

1454
01:02:01,640 --> 01:02:12,098
and comments yeah I'll make it Richard I

1455
01:02:10,400 --> 01:02:14,119
said it's also on a list already I think

1456
01:02:12,099 --> 01:02:16,700
this this seems like a sort of

1457
01:02:14,119 --> 01:02:19,400
reinvention of like Evie certificates

1458
01:02:16,700 --> 01:02:21,259
for DNS servers there's a lot of policy

1459
01:02:19,400 --> 01:02:23,839
from from companies and auditors that

1460
01:02:21,260 --> 01:02:25,940
are not technical so specifying all of

1461
01:02:23,839 --> 01:02:29,420
these technical things in in the

1462
01:02:25,940 --> 01:02:31,609
pretense that Deena's clients can use

1463
01:02:29,420 --> 01:02:34,190
that policy even though they can verify

1464
01:02:31,609 --> 01:02:42,288
most of the policy seems a good way to

1465
01:02:34,190 --> 01:02:46,339
me mark Nottingham member of the now

1466
01:02:42,289 --> 01:02:50,270
along defunct p3p working group I would

1467
01:02:46,339 --> 01:02:52,190
very much encourage you to explore

1468
01:02:50,270 --> 01:02:53,960
deeply why that effort failed so badly

1469
01:02:52,190 --> 01:02:57,980
because this seems to have many of the

1470
01:02:53,960 --> 01:03:02,299
same problems beyond that I don't know

1471
01:02:57,980 --> 01:03:05,240
that you know requiring a new kind of

1472
01:03:02,299 --> 01:03:06,950
consent to use the internet and for

1473
01:03:05,240 --> 01:03:09,020
users to understand a new kind of

1474
01:03:06,950 --> 01:03:11,210
consent model is the right thing to do

1475
01:03:09,020 --> 01:03:12,380
we already have a consent problem on the

1476
01:03:11,210 --> 01:03:14,630
internet we already have a lot of

1477
01:03:12,380 --> 01:03:17,089
complexity and layering in something new

1478
01:03:14,630 --> 01:03:18,650
is I understand how in some

1479
01:03:17,089 --> 01:03:21,500
jurisdictions it's the natural thing to

1480
01:03:18,650 --> 01:03:24,640
lead into lean towards but it doesn't

1481
01:03:21,500 --> 01:03:24,640
mean it's right for the entire Internet

1482
01:03:27,760 --> 01:03:34,109
Ben Schwartz

1483
01:03:30,980 --> 01:03:38,430
so I think there are several different

1484
01:03:34,109 --> 01:03:42,170
layers here where or we we start with

1485
01:03:38,430 --> 01:03:44,720
this idea of getting some blob of

1486
01:03:42,170 --> 01:03:47,940
potentially essentially opaque

1487
01:03:44,720 --> 01:03:50,419
information from the DNS server a self

1488
01:03:47,940 --> 01:03:53,040
description of some kind and then

1489
01:03:50,420 --> 01:03:55,530
potentially that that can be machine

1490
01:03:53,040 --> 01:03:58,890
readable and then potentially that can

1491
01:03:55,530 --> 01:04:03,420
have signatures layered on top of it so

1492
01:03:58,890 --> 01:04:05,420
I think that I am I'm supportive of the

1493
01:04:03,420 --> 01:04:09,839
idea of being able to get and

1494
01:04:05,420 --> 01:04:13,230
essentially opaque human readable set of

1495
01:04:09,839 --> 01:04:15,509
of information about a DNS server I

1496
01:04:13,230 --> 01:04:21,180
think that could be could be very useful

1497
01:04:15,510 --> 01:04:23,250
and essentially usable I think that the

1498
01:04:21,180 --> 01:04:27,149
idea of stating it as a privacy policy

1499
01:04:23,250 --> 01:04:30,540
already dips our tone into policy areas

1500
01:04:27,150 --> 01:04:32,280
that are not really in my view not

1501
01:04:30,540 --> 01:04:34,890
really our domain I don't think that

1502
01:04:32,280 --> 01:04:38,250
that we are well equipped to specify

1503
01:04:34,890 --> 01:04:40,259
that Deanna to even distinguish between

1504
01:04:38,250 --> 01:04:42,300
things that are and are not privacy

1505
01:04:40,260 --> 01:04:45,000
policies I don't know that the IETF

1506
01:04:42,300 --> 01:04:46,859
could draw a line and say this block of

1507
01:04:45,000 --> 01:04:48,930
text is a privacy policy and this block

1508
01:04:46,859 --> 01:04:50,098
of text is not a privacy policy so I

1509
01:04:48,930 --> 01:04:51,660
wouldn't be able to say with any

1510
01:04:50,099 --> 01:04:55,440
confidence about whether somebody had

1511
01:04:51,660 --> 01:04:57,319
implemented this correctly and then the

1512
01:04:55,440 --> 01:05:01,290
the machine readable formatting I think

1513
01:04:57,320 --> 01:05:02,550
is not is not going to work I think that

1514
01:05:01,290 --> 01:05:05,700
the reason for that from my perspective

1515
01:05:02,550 --> 01:05:07,980
is that lawyers are very particular

1516
01:05:05,700 --> 01:05:11,490
about the precise words that they use in

1517
01:05:07,980 --> 01:05:14,609
legally binding text and trying to

1518
01:05:11,490 --> 01:05:17,189
reduce that that legal language which

1519
01:05:14,609 --> 01:05:20,400
uses the the full scope of human

1520
01:05:17,190 --> 01:05:24,060
expression to a machine readable format

1521
01:05:20,400 --> 01:05:26,550
I think is yeah in my experience not

1522
01:05:24,060 --> 01:05:29,160
something that lawyers would be be

1523
01:05:26,550 --> 01:05:31,080
willing to do for it for example you one

1524
01:05:29,160 --> 01:05:34,950
of the things that comes to mind is you

1525
01:05:31,080 --> 01:05:36,420
mentioned retention lifetimes here most

1526
01:05:34,950 --> 01:05:39,000
policy is describing a retention

1527
01:05:36,420 --> 01:05:42,630
lifetime have various kinds of

1528
01:05:39,000 --> 01:05:46,380
exceptions explicit or implicit for

1529
01:05:42,630 --> 01:05:49,440
for different investigating attacks on

1530
01:05:46,380 --> 01:05:50,970
the system for sometimes different kinds

1531
01:05:49,440 --> 01:05:54,000
of law enforcement requests may be some

1532
01:05:50,970 --> 01:05:57,538
kinds but not other kinds I don't think

1533
01:05:54,000 --> 01:06:00,750
this can be reduced to a fixed schema so

1534
01:05:57,539 --> 01:06:02,460
I think that the the thing that I think

1535
01:06:00,750 --> 01:06:06,630
is great here is I would love to be able

1536
01:06:02,460 --> 01:06:09,930
to get for example a URL from a DNS

1537
01:06:06,630 --> 01:06:11,819
server that says this is a web page you

1538
01:06:09,930 --> 01:06:14,190
can go to to get more information about

1539
01:06:11,819 --> 01:06:17,009
this server I think that that actually

1540
01:06:14,190 --> 01:06:18,960
addresses sort of the 90% use case that

1541
01:06:17,009 --> 01:06:21,630
you're you're getting toward here and

1542
01:06:18,960 --> 01:06:23,160
avoids getting us stuck in a lot of mud

1543
01:06:21,630 --> 01:06:25,049
yeah you're not avoiding the human

1544
01:06:23,160 --> 01:06:27,509
readable created by lawyers we still

1545
01:06:25,049 --> 01:06:28,680
provide that but I understand the

1546
01:06:27,509 --> 01:06:30,509
concerns that you're raising with the

1547
01:06:28,680 --> 01:06:31,828
machine parts but at least one that was

1548
01:06:30,509 --> 01:06:35,039
interesting was the teen is filtering

1549
01:06:31,829 --> 01:06:36,539
one for example like today Mozilla uses

1550
01:06:35,039 --> 01:06:38,160
can be dopamine's to block so that would

1551
01:06:36,539 --> 01:06:46,380
at least be coming as part of a secure

1552
01:06:38,160 --> 01:06:49,319
communication shuttle as a user life

1553
01:06:46,380 --> 01:06:51,450
would find this useful and I think I

1554
01:06:49,319 --> 01:06:53,549
would like to have both so the URL

1555
01:06:51,450 --> 01:06:55,980
pointer to properly know your written

1556
01:06:53,549 --> 01:06:58,259
statement and as much as possible a few

1557
01:06:55,980 --> 01:07:00,329
data which can be machine consumed and

1558
01:06:58,259 --> 01:07:01,920
presented by my client in a useful way

1559
01:07:00,329 --> 01:07:04,619
but then it depends on clients whether

1560
01:07:01,920 --> 01:07:06,329
they want to implement this I think this

1561
01:07:04,619 --> 01:07:13,049
will have to merge with any work we're

1562
01:07:06,329 --> 01:07:16,859
gonna do on server discovery so it has

1563
01:07:13,049 --> 01:07:18,720
two side with our discovery and both the

1564
01:07:16,859 --> 01:07:20,490
privacy URL and audit URL there are

1565
01:07:18,720 --> 01:07:24,750
pointing to the human readable URL so

1566
01:07:20,490 --> 01:07:27,229
that's not a tributes I think you have

1567
01:07:24,750 --> 01:07:29,940
to align precisely with what's in these

1568
01:07:27,230 --> 01:07:32,099
CBCP up because there are some things

1569
01:07:29,940 --> 01:07:34,859
that I don't see here like the support

1570
01:07:32,099 --> 01:07:38,279
URL of the jurisdictional so I think my

1571
01:07:34,859 --> 01:07:38,910
Penta the best practice we're just going

1572
01:07:38,279 --> 01:07:41,369
to publish

1573
01:07:38,910 --> 01:07:42,990
I mean you refer to it in parts of the

1574
01:07:41,369 --> 01:07:45,720
draft but then there are certain things

1575
01:07:42,990 --> 01:07:51,348
in that drop statement yes because some

1576
01:07:45,720 --> 01:07:51,348
so yes thanks

1577
01:07:52,980 --> 01:07:58,470
Eric rajala so I guess I'm a little

1578
01:07:56,310 --> 01:07:59,640
understanding how this has this works in

1579
01:07:58,470 --> 01:08:00,330
practice so let me just write to work

1580
01:07:59,640 --> 01:08:04,920
through an example

1581
01:08:00,330 --> 01:08:07,110
so I join a network and I get some DHCP

1582
01:08:04,920 --> 01:08:11,310
exercise meant that says here is the

1583
01:08:07,110 --> 01:08:12,870
server we assume you have to do a server

1584
01:08:11,310 --> 01:08:14,310
for now or a doubt server already

1585
01:08:12,870 --> 01:08:16,380
assuming it's any kind of server book

1586
01:08:14,310 --> 01:08:20,819
could be it's it's it's it's a it's a

1587
01:08:16,380 --> 01:08:24,330
creates a secure server yeah and so I I

1588
01:08:20,819 --> 01:08:27,090
connect that server and I um I I connect

1589
01:08:24,330 --> 01:08:27,960
over TLS and I I guess we assumes got a

1590
01:08:27,090 --> 01:08:29,670
web peek yes sir

1591
01:08:27,960 --> 01:08:31,500
and I checked about peek yes sir yeah

1592
01:08:29,670 --> 01:08:33,630
that's got some new mania and then I

1593
01:08:31,500 --> 01:08:34,080
fetched this object over that or that

1594
01:08:33,630 --> 01:08:37,080
okay

1595
01:08:34,080 --> 01:08:38,850
and this Arjun self is signed and I

1596
01:08:37,080 --> 01:08:40,859
assume a little unclear in the draft but

1597
01:08:38,850 --> 01:08:42,660
that adn is supposed to be this is

1598
01:08:40,859 --> 01:08:44,370
supposed to be bitwise identical to the

1599
01:08:42,660 --> 01:08:46,439
domain name that ID that it may name in

1600
01:08:44,370 --> 01:08:48,540
the sort the authenticated domain name

1601
01:08:46,439 --> 01:08:49,710
of the devotee civil or but this is but

1602
01:08:48,540 --> 01:08:51,090
this is supposed to be I'm supposed to

1603
01:08:49,710 --> 01:08:53,819
compare this the thing I'm connecting to

1604
01:08:51,090 --> 01:08:56,550
yeah okay so that's what binds it okay

1605
01:08:53,819 --> 01:08:58,139
and then this is signed by some other

1606
01:08:56,550 --> 01:09:00,029
word PCI sir

1607
01:08:58,140 --> 01:09:02,610
it could be sign it could be signed by

1608
01:09:00,029 --> 01:09:05,160
you your organization hosting the tott

1609
01:09:02,609 --> 01:09:06,689
word so like using your own certificates

1610
01:09:05,160 --> 01:09:08,040
or it could be also signed by an

1611
01:09:06,689 --> 01:09:11,450
auditing company which has done an audit

1612
01:09:08,040 --> 01:09:15,090
of the dinosaur privacy policy oh okay

1613
01:09:11,450 --> 01:09:17,130
fine and then and then I'm supposed to

1614
01:09:15,090 --> 01:09:18,660
like examine like those names and like

1615
01:09:17,130 --> 01:09:22,109
conclusion of all the things these are

1616
01:09:18,660 --> 01:09:23,700
cool yeah one thing is DHCP can be

1617
01:09:22,109 --> 01:09:25,290
pretty much easily spoofed today so this

1618
01:09:23,700 --> 01:09:26,939
would at least make sure that for

1619
01:09:25,290 --> 01:09:28,319
example an internal attacker or an

1620
01:09:26,939 --> 01:09:30,599
external attacker is not hosting

1621
01:09:28,319 --> 01:09:32,250
diversity was over and then saying that

1622
01:09:30,600 --> 01:09:34,070
he has a privacy policy right I

1623
01:09:32,250 --> 01:09:36,060
understand what I'm saying is I'm

1624
01:09:34,069 --> 01:09:38,130
supposed to like examine those names

1625
01:09:36,060 --> 01:09:40,860
because this can be done by the client

1626
01:09:38,130 --> 01:09:43,650
itself sorry to break in this I think

1627
01:09:40,859 --> 01:09:49,170
it's very useful but gives me time and

1628
01:09:43,649 --> 01:09:51,269
going okay okay well yeah so I think you

1629
01:09:49,170 --> 01:09:52,920
have a point but either can you

1630
01:09:51,270 --> 01:09:54,240
sure well I was trying to reverse that

1631
01:09:52,920 --> 01:09:57,300
point I trying to view at that point

1632
01:09:54,240 --> 01:10:00,719
which is that the nature of the word PGI

1633
01:09:57,300 --> 01:10:02,490
is mechanical comparisons between names

1634
01:10:00,720 --> 01:10:05,340
that the user already has which is a

1635
01:10:02,490 --> 01:10:07,639
domain names and things that

1636
01:10:05,340 --> 01:10:09,660
and then things arts it is not

1637
01:10:07,640 --> 01:10:12,450
examination of the names in the search

1638
01:10:09,660 --> 01:10:13,650
by humans to see if they are cool and if

1639
01:10:12,450 --> 01:10:15,269
and this system does not have that

1640
01:10:13,650 --> 01:10:16,950
property this is of the property I'm

1641
01:10:15,270 --> 01:10:18,450
somehow examining the search and like

1642
01:10:16,950 --> 01:10:19,800
look at the organization name or look at

1643
01:10:18,450 --> 01:10:24,230
our god forbid look at the domain name

1644
01:10:19,800 --> 01:10:27,300
and be like is like you a Airlines

1645
01:10:24,230 --> 01:10:29,040
internet.com something I like that is

1646
01:10:27,300 --> 01:10:31,020
not going to work and is the reason why

1647
01:10:29,040 --> 01:10:32,580
browsers of compar are increasingly

1648
01:10:31,020 --> 01:10:36,180
abandoning the display the certificates

1649
01:10:32,580 --> 01:10:37,800
of users so until so like for the seats

1650
01:10:36,180 --> 01:10:40,470
are like doubling down a marks point

1651
01:10:37,800 --> 01:10:41,790
like like this is not gonna work for

1652
01:10:40,470 --> 01:10:43,320
security reasons because your face is

1653
01:10:41,790 --> 01:10:45,360
like unacceptable to like it for any

1654
01:10:43,320 --> 01:10:52,740
actual progress and Eve you will not

1655
01:10:45,360 --> 01:10:53,790
solve that problem ELISA Cooper just

1656
01:10:52,740 --> 01:10:55,830
coming back to the machine readable

1657
01:10:53,790 --> 01:10:57,590
policies but so in addition to the

1658
01:10:55,830 --> 01:10:59,700
example of p3p this is actually a

1659
01:10:57,590 --> 01:11:01,710
technique that has been tried in a

1660
01:10:59,700 --> 01:11:03,000
multiplicity of different venues and

1661
01:11:01,710 --> 01:11:04,680
different ways and has failed like

1662
01:11:03,000 --> 01:11:06,900
basically every time we even have an

1663
01:11:04,680 --> 01:11:08,430
example from the ITF itself we tried to

1664
01:11:06,900 --> 01:11:09,809
do this for a location privacy it was a

1665
01:11:08,430 --> 01:11:11,280
working group called geo proof we

1666
01:11:09,810 --> 01:11:13,050
specified the policies in a

1667
01:11:11,280 --> 01:11:14,370
machine-readable format and nobody was

1668
01:11:13,050 --> 01:11:17,250
interested in using them in any way

1669
01:11:14,370 --> 01:11:18,840
shape or form so I think you would have

1670
01:11:17,250 --> 01:11:20,310
to think about why this is different in

1671
01:11:18,840 --> 01:11:22,320
some way from all those other examples

1672
01:11:20,310 --> 01:11:23,790
and it's not really obvious to me I

1673
01:11:22,320 --> 01:11:25,830
understand that that's fairly

1674
01:11:23,790 --> 01:11:27,720
unsatisfactory given I mean if you

1675
01:11:25,830 --> 01:11:29,100
believe what ekor said that like neither

1676
01:11:27,720 --> 01:11:31,410
a machine readable way of negotiating

1677
01:11:29,100 --> 01:11:34,680
this nor a way in which the human being

1678
01:11:31,410 --> 01:11:36,180
is involved actually gets you very far

1679
01:11:34,680 --> 01:11:38,390
but I think that's just unfortunately

1680
01:11:36,180 --> 01:11:39,720
kind of the state of privacy on the web

1681
01:11:38,390 --> 01:11:42,030
okay

1682
01:11:39,720 --> 01:11:43,530
I think thanks yeah that I don't know if

1683
01:11:42,030 --> 01:11:45,059
folks had read it but the chairs had

1684
01:11:43,530 --> 01:11:46,440
read the draft and we found a lot of

1685
01:11:45,060 --> 01:11:48,090
hand waving through lots of sections

1686
01:11:46,440 --> 01:11:49,559
which is why we were trying to sort of

1687
01:11:48,090 --> 01:11:50,850
keep the comments if I figured most

1688
01:11:49,560 --> 01:11:53,400
people making comments actually I didn't

1689
01:11:50,850 --> 01:11:54,510
sat down and read the draft so and we

1690
01:11:53,400 --> 01:11:56,420
wanted to get to actually the meat of

1691
01:11:54,510 --> 01:11:59,280
the meaning which is actually trying to

1692
01:11:56,420 --> 01:12:01,650
to get some get moving in our phase two

1693
01:11:59,280 --> 01:12:04,320
problems sort of stuff so we've got Alex

1694
01:12:01,650 --> 01:12:07,349
and Jason are gonna get up here in a

1695
01:12:04,320 --> 01:12:08,620
minute so surprised you guys aren't

1696
01:12:07,350 --> 01:12:32,140
ready

1697
01:12:08,620 --> 01:12:34,300
ooh that's fancy yeah okay so I mean the

1698
01:12:32,140 --> 01:12:36,280
bad news oh good news and I'm not sure

1699
01:12:34,300 --> 01:12:42,550
yet is that I have to leave about in the

1700
01:12:36,280 --> 01:12:46,300
20 minutes leave the rest to you so what

1701
01:12:42,550 --> 01:12:48,630
we did as you know I know Jason and

1702
01:12:46,300 --> 01:12:51,640
myself got together and we created that

1703
01:12:48,630 --> 01:12:53,560
LMO which is living at my over over and

1704
01:12:51,640 --> 01:12:56,430
the deep rise phase phase two

1705
01:12:53,560 --> 01:12:59,050
requirements there's zero one provision

1706
01:12:56,430 --> 01:13:03,820
we are developing that in markdown form

1707
01:12:59,050 --> 01:13:06,340
at that github repository so we did roll

1708
01:13:03,820 --> 01:13:10,480
over a vision for the interim meeting

1709
01:13:06,340 --> 01:13:13,330
and with it roll the revision for this

1710
01:13:10,480 --> 01:13:16,750
meeting right on on on the day of the

1711
01:13:13,330 --> 01:13:22,000
cutoff so can I ask you who have who has

1712
01:13:16,750 --> 01:13:26,470
actually read it pretty impressive

1713
01:13:22,000 --> 01:13:30,690
yeah so we had an interim meeting where

1714
01:13:26,470 --> 01:13:33,490
we discussed that that that document and

1715
01:13:30,690 --> 01:13:36,519
we identified during the creation of the

1716
01:13:33,490 --> 01:13:38,170
of the of this word diversion for this

1717
01:13:36,520 --> 01:13:40,750
meeting that we have a couple of

1718
01:13:38,170 --> 01:13:42,520
specific areas of feedback and working

1719
01:13:40,750 --> 01:13:44,230
group discussion that we would need to

1720
01:13:42,520 --> 01:13:47,170
address and we've put them on the slides

1721
01:13:44,230 --> 01:13:47,830
here so the idea of the document if I

1722
01:13:47,170 --> 01:13:51,010
get it right

1723
01:13:47,830 --> 01:13:52,690
two chairs you disagree is that we are

1724
01:13:51,010 --> 01:13:54,400
we are not going to publish that so so

1725
01:13:52,690 --> 01:13:56,169
we it's gonna stick around in the

1726
01:13:54,400 --> 01:13:58,750
working group as a working group item

1727
01:13:56,170 --> 01:14:00,370
eventually for a while but it's not

1728
01:13:58,750 --> 01:14:06,910
gonna get another scene um a stick on

1729
01:14:00,370 --> 01:14:09,460
top of it yeah so yeah so so I mean the

1730
01:14:06,910 --> 01:14:12,599
basic structure of the document we have

1731
01:14:09,460 --> 01:14:15,900
we have we have a section that that

1732
01:14:12,600 --> 01:14:15,900
identifiers like

1733
01:14:19,210 --> 01:14:24,240
this red model got it and and in a

1734
01:14:21,910 --> 01:14:26,440
subsequent section we have those

1735
01:14:24,240 --> 01:14:28,389
perspective as we called it search for

1736
01:14:26,440 --> 01:14:32,519
each of the of the different entities

1737
01:14:28,390 --> 01:14:34,420
interested in like operating or or using

1738
01:14:32,520 --> 01:14:35,740
encryption between request of an

1739
01:14:34,420 --> 01:14:37,450
authoritative we have different

1740
01:14:35,740 --> 01:14:38,980
perspectives and there's a lot of use

1741
01:14:37,450 --> 01:14:42,580
cases in there that's quite an extensive

1742
01:14:38,980 --> 01:14:43,959
section and in in the subsequent section

1743
01:14:42,580 --> 01:14:46,660
we have the actual requirement so the

1744
01:14:43,960 --> 01:14:49,030
idea is that at some point we can

1745
01:14:46,660 --> 01:14:52,120
actually use the perspectives and use

1746
01:14:49,030 --> 01:14:54,550
cases section to do a gap analysis with

1747
01:14:52,120 --> 01:14:56,920
regards to the existing requirements

1748
01:14:54,550 --> 01:14:58,270
that we have in a document and when we

1749
01:14:56,920 --> 01:15:00,850
have found out that we have like

1750
01:14:58,270 --> 01:15:02,650
identified all the requirements that

1751
01:15:00,850 --> 01:15:04,930
came out of the use cases and

1752
01:15:02,650 --> 01:15:08,139
perspectives then we can actually remove

1753
01:15:04,930 --> 01:15:10,030
that section or or move it to the

1754
01:15:08,140 --> 01:15:11,020
appendix or whatever since we don't

1755
01:15:10,030 --> 01:15:13,950
publish it anyway

1756
01:15:11,020 --> 01:15:15,880
I mean here we say our C editor here but

1757
01:15:13,950 --> 01:15:17,679
since we don't publish it we can

1758
01:15:15,880 --> 01:15:20,170
probably keep it as an appendix but but

1759
01:15:17,680 --> 01:15:22,480
that is a lot of text that has all kind

1760
01:15:20,170 --> 01:15:24,670
of sorts put into so we can remove that

1761
01:15:22,480 --> 01:15:25,620
to a little point you want to add

1762
01:15:24,670 --> 01:15:32,050
something to that

1763
01:15:25,620 --> 01:15:34,450
okay cool so yes let's move right into

1764
01:15:32,050 --> 01:15:37,630
the discussion I guess so the first

1765
01:15:34,450 --> 01:15:39,099
important question to us we're trying to

1766
01:15:37,630 --> 01:15:41,620
first let me step back a little bit we

1767
01:15:39,100 --> 01:15:43,450
are trying to keep that as issues on

1768
01:15:41,620 --> 01:15:45,580
github right now we have all the open

1769
01:15:43,450 --> 01:15:47,320
question is one issue we might want to

1770
01:15:45,580 --> 01:15:50,350
split that out at some point if there's

1771
01:15:47,320 --> 01:15:52,150
more discussion about it so the idea is

1772
01:15:50,350 --> 01:15:54,960
that as soon as we have no open issues

1773
01:15:52,150 --> 01:15:57,910
in a github account anymore we are done

1774
01:15:54,960 --> 01:15:59,980
and that means that as soon as we close

1775
01:15:57,910 --> 01:16:02,410
all of them successfully not ready to

1776
01:15:59,980 --> 01:16:04,990
eat them so the first thing that we have

1777
01:16:02,410 --> 01:16:06,970
that probably pre-game important this is

1778
01:16:04,990 --> 01:16:08,920
anything missing from the actual stret

1779
01:16:06,970 --> 01:16:11,890
model and problem statement so we can we

1780
01:16:08,920 --> 01:16:13,630
can discuss this here and if you have

1781
01:16:11,890 --> 01:16:18,060
input that we would appreciate it if

1782
01:16:13,630 --> 01:16:18,060
we're missing something important okay

1783
01:16:19,740 --> 01:16:23,590
you can also post it to the meaning for

1784
01:16:22,270 --> 01:16:26,080
some people and then I don't know if

1785
01:16:23,590 --> 01:16:28,300
you're missing it um I read this start

1786
01:16:26,080 --> 01:16:29,830
model as required so we had a long

1787
01:16:28,300 --> 01:16:31,510
discussion list of a threat model right

1788
01:16:29,830 --> 01:16:32,620
and in particular about whether it was

1789
01:16:31,510 --> 01:16:35,350
intended to prevent

1790
01:16:32,620 --> 01:16:36,760
um you know downgrades effect weather is

1791
01:16:35,350 --> 01:16:39,670
that downgrades all the way through the

1792
01:16:36,760 --> 01:16:42,040
system right and um this seems to encode

1793
01:16:39,670 --> 01:16:43,060
I guess my view which is that the system

1794
01:16:42,040 --> 01:16:44,860
should print down grades and the

1795
01:16:43,060 --> 01:16:46,120
referential integrity although and so if

1796
01:16:44,860 --> 01:16:47,950
you start from the top and you like and

1797
01:16:46,120 --> 01:16:49,420
you have you know dot to the top then

1798
01:16:47,950 --> 01:16:51,220
you should be able to like they do have

1799
01:16:49,420 --> 01:16:52,270
referential integrity all the way um but

1800
01:16:51,220 --> 01:16:53,230
I heard a lot of people saying we

1801
01:16:52,270 --> 01:16:55,000
shouldn't do that we should necessarily

1802
01:16:53,230 --> 01:16:56,740
do that so I think that probably is the

1803
01:16:55,000 --> 01:16:58,060
topic we should we should not just pass

1804
01:16:56,740 --> 01:17:03,849
over in silence but rather have

1805
01:16:58,060 --> 01:17:07,510
discussion of another question in in a

1806
01:17:03,850 --> 01:17:18,370
subsequent slide but uh okay one of the

1807
01:17:07,510 --> 01:17:20,230
harder things Peter Sawchuk from the

1808
01:17:18,370 --> 01:17:22,150
Java room maybe we should explicitly

1809
01:17:20,230 --> 01:17:24,490
state that attacker who has access to

1810
01:17:22,150 --> 01:17:25,870
all traffic's out of scope again in that

1811
01:17:24,490 --> 01:17:27,250
case traffic analysis will give that

1812
01:17:25,870 --> 01:17:33,160
almost all the data even without

1813
01:17:27,250 --> 01:17:34,390
decrypting DNS traffic ekor says he

1814
01:17:33,160 --> 01:17:36,070
doesn't agree with it at all and since

1815
01:17:34,390 --> 01:17:38,260
I'm at the mic I'll say I also don't

1816
01:17:36,070 --> 01:17:49,900
but as jabber relay that's what eater

1817
01:17:38,260 --> 01:17:51,700
said so I'm not up to date on the threat

1818
01:17:49,900 --> 01:17:53,139
model I mean read in a while but one

1819
01:17:51,700 --> 01:17:55,630
thing that was mentioned I think by a

1820
01:17:53,140 --> 01:18:00,370
Christian winema that that I think is

1821
01:17:55,630 --> 01:18:02,860
valuable is we should we should think

1822
01:18:00,370 --> 01:18:07,780
carefully about any interaction here

1823
01:18:02,860 --> 01:18:09,639
with CAA Acme and domain validated

1824
01:18:07,780 --> 01:18:11,800
certificates that is if there is any

1825
01:18:09,640 --> 01:18:13,950
dependency here on the web PKI we have

1826
01:18:11,800 --> 01:18:16,210
to make sure that we haven't created a

1827
01:18:13,950 --> 01:18:20,620
circular dependency that is actually a

1828
01:18:16,210 --> 01:18:24,730
owner ability yeah that's coming up as

1829
01:18:20,620 --> 01:18:26,769
well so any more on the general Streck

1830
01:18:24,730 --> 01:18:27,549
model because otherwise please please

1831
01:18:26,770 --> 01:18:28,900
post to the list

1832
01:18:27,550 --> 01:18:30,790
we're gonna watch lists of course and we

1833
01:18:28,900 --> 01:18:37,660
can enroll things that we discover on

1834
01:18:30,790 --> 01:18:39,820
the list into issues into the next the

1835
01:18:37,660 --> 01:18:42,849
next issue that we we discussed

1836
01:18:39,820 --> 01:18:45,160
internally was is do we to be actually

1837
01:18:42,850 --> 01:18:46,389
imply that do T is always used between

1838
01:18:45,160 --> 01:18:48,130
recursos and

1839
01:18:46,389 --> 01:18:51,269
authoritative servers or are there

1840
01:18:48,130 --> 01:18:53,860
situations where some other type of

1841
01:18:51,269 --> 01:18:55,809
privacy enhancing mechanism privacy

1842
01:18:53,860 --> 01:18:58,329
protective mechanism you name

1843
01:18:55,809 --> 01:18:59,979
minimization whatever is good enough so

1844
01:18:58,329 --> 01:19:03,610
it's a different story whether we

1845
01:18:59,979 --> 01:19:05,380
require we require do t so the first

1846
01:19:03,610 --> 01:19:06,999
requirement is use do t alter all of the

1847
01:19:05,380 --> 01:19:08,760
time yeah or not yeah that's that's

1848
01:19:06,999 --> 01:19:11,829
that's not an important issue I guess

1849
01:19:08,760 --> 01:19:13,239
then short I don't understand the

1850
01:19:11,829 --> 01:19:15,398
question you're asking but we never had

1851
01:19:13,239 --> 01:19:16,869
the ability to tell people you know we

1852
01:19:15,399 --> 01:19:19,360
were not the protocol police we can't

1853
01:19:16,869 --> 01:19:21,009
force people to do anything so we can

1854
01:19:19,360 --> 01:19:23,228
define this protocol but we can't make

1855
01:19:21,010 --> 01:19:26,349
people implement it so what does it mean

1856
01:19:23,229 --> 01:19:29,139
for for the protocol to be defined but

1857
01:19:26,349 --> 01:19:33,880
not always required I don't understand

1858
01:19:29,139 --> 01:19:35,829
um um let me put it that way if there's

1859
01:19:33,880 --> 01:19:39,189
another privacy enhancing privacy

1860
01:19:35,829 --> 01:19:41,228
protecting mechanism available is is is

1861
01:19:39,189 --> 01:19:43,479
that is that an option as well so should

1862
01:19:41,229 --> 01:19:45,249
we should we should recreate your

1863
01:19:43,479 --> 01:19:49,449
requirements in the form that they they

1864
01:19:45,249 --> 01:19:51,369
are not specific to do T so I think that

1865
01:19:49,449 --> 01:19:52,869
we should focus so just to chime in I

1866
01:19:51,369 --> 01:19:54,749
think we noticed that there were some

1867
01:19:52,869 --> 01:19:57,880
people in the list that suggested that

1868
01:19:54,749 --> 01:20:00,130
DoD would be appropriate say from a

1869
01:19:57,880 --> 01:20:01,780
single level domain between a recursive

1870
01:20:00,130 --> 01:20:04,449
server and a single domain but maybe up

1871
01:20:01,780 --> 01:20:06,999
to the root like maybe some of them or

1872
01:20:04,449 --> 01:20:08,379
some TL DS didn't want to do dot in some

1873
01:20:06,999 --> 01:20:10,539
scenarios and there would be other

1874
01:20:08,380 --> 01:20:12,130
mechanisms that you could use so you

1875
01:20:10,539 --> 01:20:14,110
could conceive that the protocol might

1876
01:20:12,130 --> 01:20:16,389
have different sort of you know

1877
01:20:14,110 --> 01:20:17,348
selection criteria for which pop of

1878
01:20:16,389 --> 01:20:19,119
recursion you were doing that's all

1879
01:20:17,349 --> 01:20:20,769
we're really asking because we we

1880
01:20:19,119 --> 01:20:23,199
couldn't discern from the mailing list

1881
01:20:20,769 --> 01:20:25,869
where the the consensus was and that's

1882
01:20:23,199 --> 01:20:27,938
what we're trying to get a sense of sure

1883
01:20:25,869 --> 01:20:29,259
I think though so I think we should be

1884
01:20:27,939 --> 01:20:31,419
in the business of defining this

1885
01:20:29,260 --> 01:20:35,949
protocol and describing the properties

1886
01:20:31,419 --> 01:20:37,840
that it that it has and you know we can

1887
01:20:35,949 --> 01:20:39,249
we can certainly compare it to other

1888
01:20:37,840 --> 01:20:40,809
protocols and properties that they have

1889
01:20:39,249 --> 01:20:43,300
maybe there are cases where there's

1890
01:20:40,809 --> 01:20:45,519
equally good alternatives so short

1891
01:20:43,300 --> 01:20:48,669
answer is yes dot is always required

1892
01:20:45,519 --> 01:20:52,149
right no I think dot is always required

1893
01:20:48,669 --> 01:20:53,530
if you're doing dot and whether you're

1894
01:20:52,149 --> 01:20:58,209
doing dot is not something that we can

1895
01:20:53,530 --> 01:20:59,079
tell you okay yeah I think I was

1896
01:20:58,209 --> 01:21:01,309
interesting

1897
01:20:59,079 --> 01:21:03,259
actual I think it's sort of a grid Bend

1898
01:21:01,309 --> 01:21:06,590
I think maybe like that maybe like a

1899
01:21:03,260 --> 01:21:09,289
different way of putting it um so let's

1900
01:21:06,590 --> 01:21:12,219
like like hypothesize that there is some

1901
01:21:09,289 --> 01:21:14,840
way in there's some way in in or in

1902
01:21:12,219 --> 01:21:18,079
unspecified now but in order to discover

1903
01:21:14,840 --> 01:21:20,480
that a delegation or the next a thought

1904
01:21:18,079 --> 01:21:24,380
to be like it supports secure transport

1905
01:21:20,480 --> 01:21:26,570
right um so I think you'd want to say um

1906
01:21:24,380 --> 01:21:28,219
what you say would be here is like how

1907
01:21:26,570 --> 01:21:29,690
you indicate that like this is that this

1908
01:21:28,219 --> 01:21:31,340
and that this is ns the reference

1909
01:21:29,690 --> 01:21:32,629
support secure transport and this is

1910
01:21:31,340 --> 01:21:34,730
what how it tells you what kind of

1911
01:21:32,630 --> 01:21:36,320
secure transport it supports and this is

1912
01:21:34,730 --> 01:21:37,759
what you want to do when you get that if

1913
01:21:36,320 --> 01:21:41,539
you're like you're like a compliant dude

1914
01:21:37,760 --> 01:21:43,369
um and I apply resolver and you know and

1915
01:21:41,539 --> 01:21:45,139
then some separately I suppose we could

1916
01:21:43,369 --> 01:21:47,058
say and you and we encourage you know

1917
01:21:45,139 --> 01:21:48,880
Allah hosts requirements we encourages

1918
01:21:47,059 --> 01:21:52,039
all of us to do this kind of thing right

1919
01:21:48,880 --> 01:21:54,020
but um I I guess I agree with Ben on

1920
01:21:52,039 --> 01:21:57,110
that it like that's kind of like the

1921
01:21:54,020 --> 01:21:57,860
limits of our thing I guess um it seems

1922
01:21:57,110 --> 01:21:59,659
like you might want to have an

1923
01:21:57,860 --> 01:22:01,519
equivalence class of what what secure

1924
01:21:59,659 --> 01:22:02,690
transports means so I guess you know I

1925
01:22:01,520 --> 01:22:03,829
don't want to get into do over to stop

1926
01:22:02,690 --> 01:22:07,610
but certainly something we may imagine

1927
01:22:03,829 --> 01:22:09,500
that made DNS sever quick Oh hum and or

1928
01:22:07,610 --> 01:22:10,429
des already tell us I suppose and I

1929
01:22:09,500 --> 01:22:11,809
think you know you could imagine having

1930
01:22:10,429 --> 01:22:13,400
a variety of secure transport you you

1931
01:22:11,809 --> 01:22:14,989
think have a cooler know Cleveland's

1932
01:22:13,400 --> 01:22:17,509
class I think cumin is not medical

1933
01:22:14,989 --> 01:22:19,610
Volans class um but I think so you

1934
01:22:17,510 --> 01:22:21,230
surely wouldn't want to be like dot

1935
01:22:19,610 --> 01:22:23,539
forever like you can't DDS ever quick

1936
01:22:21,230 --> 01:22:24,769
but um but I do think like we should

1937
01:22:23,539 --> 01:22:26,289
like to try to think about we're trying

1938
01:22:24,770 --> 01:22:28,670
to encourage with a script transport

1939
01:22:26,289 --> 01:22:30,320
saying is essentially we should we

1940
01:22:28,670 --> 01:22:33,980
should probably rephrase sense and say

1941
01:22:30,320 --> 01:22:35,420
secure transport is instead of do T yeah

1942
01:22:33,980 --> 01:22:36,678
but I think I mean I think again I'd

1943
01:22:35,420 --> 01:22:38,300
only always requires already think about

1944
01:22:36,679 --> 01:22:39,980
I think the way to indicate is is

1945
01:22:38,300 --> 01:22:45,020
there's a way to learn that people do it

1946
01:22:39,980 --> 01:22:47,650
and then you want to do it west heard

1947
01:22:45,020 --> 01:22:50,409
occur is I am pulling it up and

1948
01:22:47,650 --> 01:22:52,308
relabeling sort of what echo just said

1949
01:22:50,409 --> 01:22:54,739
when I read to you the document I I

1950
01:22:52,309 --> 01:22:56,210
would love large portions of it I like

1951
01:22:54,739 --> 01:22:57,619
the fact that you broke down you know

1952
01:22:56,210 --> 01:22:59,570
that there's different levels of the DNS

1953
01:22:57,619 --> 01:23:01,549
name and things above the PSL is you

1954
01:22:59,570 --> 01:23:02,900
know possibly need to be dealt with in a

1955
01:23:01,550 --> 01:23:04,400
different way especially when talking to

1956
01:23:02,900 --> 01:23:05,449
the route if you're doing Communion

1957
01:23:04,400 --> 01:23:07,909
minimization I thought that was

1958
01:23:05,449 --> 01:23:10,219
fantastic the problem is is that a lot

1959
01:23:07,909 --> 01:23:12,799
of the text is not talking about

1960
01:23:10,219 --> 01:23:14,210
requirements but rather solutions

1961
01:23:12,800 --> 01:23:15,800
and I know it's been mentioned on the

1962
01:23:14,210 --> 01:23:17,270
list but but a function of functionally

1963
01:23:15,800 --> 01:23:19,300
even this little statement is really

1964
01:23:17,270 --> 01:23:21,829
saying is this solution always required

1965
01:23:19,300 --> 01:23:24,469
right so you're pre picking the solution

1966
01:23:21,829 --> 01:23:26,719
rather than saying is encryption always

1967
01:23:24,469 --> 01:23:28,670
required and what are the requirements

1968
01:23:26,719 --> 01:23:29,929
you know if encryption is required what

1969
01:23:28,670 --> 01:23:31,820
are the requirements of bootstrapping

1970
01:23:29,929 --> 01:23:33,079
that how do we get the trust anchor

1971
01:23:31,820 --> 01:23:35,090
lists and things like that so if you

1972
01:23:33,079 --> 01:23:37,670
step if you just reword a lot of the and

1973
01:23:35,090 --> 01:23:38,869
it's not just a section it sprinkled

1974
01:23:37,670 --> 01:23:40,550
throughout and I would divide that up

1975
01:23:38,869 --> 01:23:42,110
into requirements and then maybe

1976
01:23:40,550 --> 01:23:44,300
solutions if you want to include it

1977
01:23:42,110 --> 01:23:45,860
bootstrapping a conversation yeah find

1978
01:23:44,300 --> 01:23:47,270
it's a pretty common problem in the ITF

1979
01:23:45,860 --> 01:23:49,730
that we all engineer said we tend to

1980
01:23:47,270 --> 01:23:51,590
sink in solutions immunity I feel like I

1981
01:23:49,730 --> 01:23:54,290
mean really the requirement is we need

1982
01:23:51,590 --> 01:23:57,409
to be able to securely and that means

1983
01:23:54,290 --> 01:24:00,409
encrypted to get from the bootstrapping

1984
01:23:57,409 --> 01:24:03,679
down to the name we have to do and I

1985
01:24:00,409 --> 01:24:05,179
mean be dot doc or whatever we don't

1986
01:24:03,679 --> 01:24:11,300
care it has to be secure mechanism that

1987
01:24:05,179 --> 01:24:13,429
we find okay thanks Bryan Dix from

1988
01:24:11,300 --> 01:24:15,829
GoDaddy I think breaking out a couple of

1989
01:24:13,429 --> 01:24:19,250
different distinct aspects of this would

1990
01:24:15,829 --> 01:24:21,549
be possibly more helpful to achieving

1991
01:24:19,250 --> 01:24:25,969
the goal of getting consensus on

1992
01:24:21,550 --> 01:24:31,309
requirements one of which is the

1993
01:24:25,969 --> 01:24:34,699
delegation chain if it's signed versus

1994
01:24:31,309 --> 01:24:38,199
if it's not and whether in order to

1995
01:24:34,699 --> 01:24:42,530
achieve privacy and if you are using

1996
01:24:38,199 --> 01:24:44,619
Dane then you need to have a secure

1997
01:24:42,530 --> 01:24:47,420
delegation all the way down to the

1998
01:24:44,619 --> 01:24:50,420
domain name server that you're gonna

1999
01:24:47,420 --> 01:24:53,690
connect to over an encrypted transport

2000
01:24:50,420 --> 01:24:55,280
the other thing would be potentially

2001
01:24:53,690 --> 01:24:58,009
looking at what the mandatory to

2002
01:24:55,280 --> 01:24:59,989
implement is and whether depending on

2003
01:24:58,010 --> 01:25:02,809
that that may actually turn into

2004
01:24:59,989 --> 01:25:04,699
requirements for what the client

2005
01:25:02,809 --> 01:25:10,159
supports as opposed to what the server

2006
01:25:04,699 --> 01:25:12,769
has to support thank you so it sounds

2007
01:25:10,159 --> 01:25:14,629
like to change it to more being focused

2008
01:25:12,770 --> 01:25:18,739
on encryption rather than yep secure

2009
01:25:14,630 --> 01:25:24,679
transport cubed yeah perfect thanks very

2010
01:25:18,739 --> 01:25:26,570
helpful well thank a security should the

2011
01:25:24,679 --> 01:25:29,060
secure transport yeah

2012
01:25:26,570 --> 01:25:33,049
depend only on the DNS sustain or should

2013
01:25:29,060 --> 01:25:36,440
we also do some kind of like PKI stuff

2014
01:25:33,050 --> 01:25:39,230
besides DNS mechanism I plead with you

2015
01:25:36,440 --> 01:25:41,210
not to get into this I really really do

2016
01:25:39,230 --> 01:25:43,879
if we could get to the point where like

2017
01:25:41,210 --> 01:25:45,110
if we get if we get to the point where

2018
01:25:43,880 --> 01:25:46,880
like we were at where like this was the

2019
01:25:45,110 --> 01:25:52,000
open question we'd be such a better

2020
01:25:46,880 --> 01:25:52,000
position um like oh yeah

2021
01:25:52,030 --> 01:25:56,420
so should we should we be silent and

2022
01:25:54,739 --> 01:26:00,379
document about it this is not this is

2023
01:25:56,420 --> 01:26:04,280
like not going to the dentist yeah so

2024
01:26:00,380 --> 01:26:06,550
short maybe to rephrase I think that

2025
01:26:04,280 --> 01:26:12,320
this is not the right level of

2026
01:26:06,550 --> 01:26:15,800
requirements okay that that this is is

2027
01:26:12,320 --> 01:26:16,869
getting very close to the to the

2028
01:26:15,800 --> 01:26:19,489
solution space

2029
01:26:16,869 --> 01:26:21,380
so may be rephrased again thinking of

2030
01:26:19,489 --> 01:26:23,509
the secure transport rephrasing a moment

2031
01:26:21,380 --> 01:26:25,550
ago maybe this is about being able to

2032
01:26:23,510 --> 01:26:27,739
validate in some way with an independent

2033
01:26:25,550 --> 01:26:29,300
authority you know that that that

2034
01:26:27,739 --> 01:26:30,888
bootstrapping is valid or something like

2035
01:26:29,300 --> 01:26:34,820
that like you know something much more

2036
01:26:30,889 --> 01:26:36,530
generalized so I don't I don't agree

2037
01:26:34,820 --> 01:26:39,230
with that characterization of the

2038
01:26:36,530 --> 01:26:40,579
previous comment I think that what's

2039
01:26:39,230 --> 01:26:41,959
needed there you know you mentioned

2040
01:26:40,579 --> 01:26:44,599
alternatives I think what's needed there

2041
01:26:41,960 --> 01:26:45,920
is not a recommendation to use or not

2042
01:26:44,599 --> 01:26:47,630
use encrypted transports but a

2043
01:26:45,920 --> 01:26:49,429
comparison of the properties of an

2044
01:26:47,630 --> 01:26:52,790
encrypted transport versus Qun a

2045
01:26:49,429 --> 01:26:54,349
minimization in different scenarios so I

2046
01:26:52,790 --> 01:26:56,480
don't think that that's a requirement

2047
01:26:54,349 --> 01:27:00,139
that we need to think about now it's

2048
01:26:56,480 --> 01:27:01,848
just it's just something that we need in

2049
01:27:00,139 --> 01:27:03,949
the explanatory text at some point in

2050
01:27:01,849 --> 01:27:05,599
the document to help explain people what

2051
01:27:03,949 --> 01:27:07,098
they're buying if they're implementing

2052
01:27:05,599 --> 01:27:13,070
to UT and what their other options might

2053
01:27:07,099 --> 01:27:15,739
be on this topic I do think it could be

2054
01:27:13,070 --> 01:27:20,630
useful to enumerate a few different

2055
01:27:15,739 --> 01:27:22,848
cases here but I don't think that we can

2056
01:27:20,630 --> 01:27:24,409
determine now which ones will be able to

2057
01:27:22,849 --> 01:27:25,909
solve I think that we're going to have

2058
01:27:24,409 --> 01:27:29,809
to explore the solution space to figure

2059
01:27:25,909 --> 01:27:32,388
out what's tractable it wasn't and

2060
01:27:29,810 --> 01:27:34,219
Eirene this point I think I mean I guess

2061
01:27:32,389 --> 01:27:36,260
Barret ticket thickens to back right

2062
01:27:34,219 --> 01:27:40,260
there are two effective settings right

2063
01:27:36,260 --> 01:27:41,730
that's right three one setting is

2064
01:27:40,260 --> 01:27:42,840
where you have out-of-band information

2065
01:27:41,730 --> 01:27:44,070
about the resolve your connection to

2066
01:27:42,840 --> 01:27:48,150
which is of course this way shouldn't

2067
01:27:44,070 --> 01:27:51,000
with like you know the the dot and dot

2068
01:27:48,150 --> 01:27:52,139
endo client or two recursive situations

2069
01:27:51,000 --> 01:27:54,660
where like you're giving domain name and

2070
01:27:52,140 --> 01:27:57,510
you just connect to the thing um the the

2071
01:27:54,660 --> 01:28:01,110
second second second setting is one

2072
01:27:57,510 --> 01:28:03,060
where during the UM during during the

2073
01:28:01,110 --> 01:28:05,460
resolution chain you learn here go

2074
01:28:03,060 --> 01:28:07,680
somewhere here and you're supposed to

2075
01:28:05,460 --> 01:28:08,820
connect that person now and somewhere in

2076
01:28:07,680 --> 01:28:11,250
there that's got it there's got to be an

2077
01:28:08,820 --> 01:28:12,509
if that's going to be secure against it

2078
01:28:11,250 --> 01:28:13,980
gets active attack there has to be has

2079
01:28:12,510 --> 01:28:15,360
to be enough information that when you

2080
01:28:13,980 --> 01:28:17,639
talk to that next guy you're able to

2081
01:28:15,360 --> 01:28:18,989
determine that the the reference you

2082
01:28:17,640 --> 01:28:20,070
were given corresponds to the thing that

2083
01:28:18,989 --> 01:28:22,679
you're connecting to and there's a

2084
01:28:20,070 --> 01:28:24,059
compiled ways to do that and like um I

2085
01:28:22,680 --> 01:28:25,380
think some of the more attractable

2086
01:28:24,060 --> 01:28:27,480
others we could like we don't the decide

2087
01:28:25,380 --> 01:28:30,060
if I'm not here on that the key point is

2088
01:28:27,480 --> 01:28:32,099
a referential integrity and then finally

2089
01:28:30,060 --> 01:28:35,520
there are these um there's there there's

2090
01:28:32,100 --> 01:28:36,570
the opportunity of discovery where

2091
01:28:35,520 --> 01:28:37,830
people are like hey I'm gonna happy

2092
01:28:36,570 --> 01:28:40,590
eyeballs and see if this guy's supports

2093
01:28:37,830 --> 01:28:41,790
dot or just like go fifty three and like

2094
01:28:40,590 --> 01:28:43,590
in that case there's like no really no

2095
01:28:41,790 --> 01:28:47,190
point in getting the person in there and

2096
01:28:43,590 --> 01:28:49,080
because like is it is what it is so so I

2097
01:28:47,190 --> 01:28:50,940
think those are the three cases um it's

2098
01:28:49,080 --> 01:28:53,790
it's really the case it is important

2099
01:28:50,940 --> 01:28:57,450
that leads on that needs like some

2100
01:28:53,790 --> 01:28:58,769
definition is that is if we choose to

2101
01:28:57,450 --> 01:29:00,000
build something that has referential I

2102
01:28:58,770 --> 01:29:01,110
go all the way down it has to have

2103
01:29:00,000 --> 01:29:02,700
referential integrity at that stage

2104
01:29:01,110 --> 01:29:04,200
they're the reference has to be

2105
01:29:02,700 --> 01:29:05,190
correspond about the credentials were

2106
01:29:04,200 --> 01:29:09,660
given to you by the person you're

2107
01:29:05,190 --> 01:29:15,389
cracking up are secure transport thank

2108
01:29:09,660 --> 01:29:17,849
you later Christian we tomorrow it's not

2109
01:29:15,390 --> 01:29:21,510
directly related to using what you use

2110
01:29:17,850 --> 01:29:23,010
to secure the whatever secure connection

2111
01:29:21,510 --> 01:29:28,110
you are between the client and the

2112
01:29:23,010 --> 01:29:31,820
authoritative but I am scared about the

2113
01:29:28,110 --> 01:29:37,259
circular dependencies between PGI

2114
01:29:31,820 --> 01:29:39,389
Acme and DNS security so it's easy to

2115
01:29:37,260 --> 01:29:43,110
envisage a case in which you can only

2116
01:29:39,390 --> 01:29:44,910
get a certificate for some them if you

2117
01:29:43,110 --> 01:29:48,420
can prove that you control the wizard

2118
01:29:44,910 --> 01:29:50,639
above about Nam but then you can only

2119
01:29:48,420 --> 01:29:53,100
get to the wizard off of that name

2120
01:29:50,640 --> 01:29:54,190
before where you have a way to assess

2121
01:29:53,100 --> 01:29:57,219
that you are the right with

2122
01:29:54,190 --> 01:30:00,190
with a certificate for that name so

2123
01:29:57,219 --> 01:30:02,770
these this notion of circular

2124
01:30:00,190 --> 01:30:06,759
dependencies should be put in the

2125
01:30:02,770 --> 01:30:09,210
requirements as in this is a single char

2126
01:30:06,760 --> 01:30:09,210
not break

2127
01:30:09,960 --> 01:30:15,790
should we add to the requirements that

2128
01:30:12,760 --> 01:30:19,510
any implementation or any solutions

2129
01:30:15,790 --> 01:30:21,820
should be careful about such loop

2130
01:30:19,510 --> 01:30:22,989
dependencies yeah you you you you should

2131
01:30:21,820 --> 01:30:25,870
basically least the potential

2132
01:30:22,989 --> 01:30:32,489
dependencies and says whatever you do

2133
01:30:25,870 --> 01:30:32,489
don't break that yep absolutely

2134
01:30:34,680 --> 01:30:40,989
Brian Dixon GoDaddy so I think one of

2135
01:30:39,190 --> 01:30:44,049
the things that might need to be called

2136
01:30:40,989 --> 01:30:47,199
out is the fact that this is what's

2137
01:30:44,050 --> 01:30:49,360
agreed on between the resolver and

2138
01:30:47,199 --> 01:30:52,330
authoritative server the authoritative

2139
01:30:49,360 --> 01:30:55,570
servers are depending on how we define

2140
01:30:52,330 --> 01:30:58,330
these documents and requirements free to

2141
01:30:55,570 --> 01:31:01,750
use if they're doing deign for different

2142
01:30:58,330 --> 01:31:03,820
models which can include non CA signed

2143
01:31:01,750 --> 01:31:08,820
certificate it can either be self signed

2144
01:31:03,820 --> 01:31:12,040
or signed by some non CA parent search

2145
01:31:08,820 --> 01:31:14,309
which can be protected through the deign

2146
01:31:12,040 --> 01:31:18,880
delegation and the deign validation

2147
01:31:14,310 --> 01:31:21,820
which means that giving the the list of

2148
01:31:18,880 --> 01:31:23,949
what the methods are and what the

2149
01:31:21,820 --> 01:31:27,120
security properties are if you do or do

2150
01:31:23,949 --> 01:31:31,629
not support these validation mechanisms

2151
01:31:27,120 --> 01:31:35,400
is I think critical to the implementers

2152
01:31:31,630 --> 01:31:39,520
to understand especially if large

2153
01:31:35,400 --> 01:31:41,250
Authority servers effectively commit to

2154
01:31:39,520 --> 01:31:43,900
not doing anything other than Dean

2155
01:31:41,250 --> 01:31:47,860
becomes that becomes a critical aspect

2156
01:31:43,900 --> 01:31:50,739
of it working as well as you know what

2157
01:31:47,860 --> 01:31:55,259
the what the take-up is on the resolver

2158
01:31:50,739 --> 01:32:00,959
side then

2159
01:31:55,260 --> 01:32:03,389
on Gilmore so my head is spinning at the

2160
01:32:00,960 --> 01:32:05,699
thought that we care at one about

2161
01:32:03,389 --> 01:32:07,920
avoiding circular dependencies and two

2162
01:32:05,699 --> 01:32:14,820
that we might want to do some sort of

2163
01:32:07,920 --> 01:32:18,090
hybridized Dane plus web PKI plus a

2164
01:32:14,820 --> 01:32:20,460
third party perhaps not any of the above

2165
01:32:18,090 --> 01:32:22,619
certification models so I think that

2166
01:32:20,460 --> 01:32:24,389
sounds super complicated and the idea

2167
01:32:22,619 --> 01:32:25,469
that we're gonna get that right that all

2168
01:32:24,389 --> 01:32:27,989
of the players in the game writing up

2169
01:32:25,469 --> 01:32:30,300
that right is really scary to me so in

2170
01:32:27,989 --> 01:32:31,440
some sense I find myself and I know

2171
01:32:30,300 --> 01:32:33,210
we're not supposed to be talking about

2172
01:32:31,440 --> 01:32:35,009
solutions here but I actually think that

2173
01:32:33,210 --> 01:32:36,000
we should put in the requirements that's

2174
01:32:35,010 --> 01:32:38,420
something that we're gonna have is going

2175
01:32:36,000 --> 01:32:41,190
to be simple enough to be analyzable

2176
01:32:38,420 --> 01:32:43,800
which I'm not convinced by by some of

2177
01:32:41,190 --> 01:32:46,169
the proposals that I've heard secondly I

2178
01:32:43,800 --> 01:32:48,360
wanted to generally agree with eckers

2179
01:32:46,170 --> 01:32:52,880
break down the sort of three-part model

2180
01:32:48,360 --> 01:32:56,280
right pre pre-ordained knowledge

2181
01:32:52,880 --> 01:32:58,679
hierarchical delegation and happy

2182
01:32:56,280 --> 01:33:00,389
eyeballs as sort of the paths as you get

2183
01:32:58,679 --> 01:33:02,519
to these sorts of privacy things but I

2184
01:33:00,389 --> 01:33:05,250
wanted to having just said we shouldn't

2185
01:33:02,519 --> 01:33:08,610
complicate things complicate things

2186
01:33:05,250 --> 01:33:10,980
I think that there is it spot so a lot

2187
01:33:08,610 --> 01:33:12,659
of this one has to do with there's a

2188
01:33:10,980 --> 01:33:13,348
temporal dependency in these things as

2189
01:33:12,659 --> 01:33:14,969
well right

2190
01:33:13,349 --> 01:33:17,869
a delegation that you get is time

2191
01:33:14,969 --> 01:33:20,369
limited by a number of different things

2192
01:33:17,869 --> 01:33:23,250
the certificates if we're doing web PK I

2193
01:33:20,369 --> 01:33:26,518
have limits the DNS records have have

2194
01:33:23,250 --> 01:33:29,130
TTL all these other time limitations and

2195
01:33:26,519 --> 01:33:33,710
I wonder if the happy eyeballs

2196
01:33:29,130 --> 01:33:33,710
opportunistic mechanism might also

2197
01:33:33,860 --> 01:33:37,259
opportunistically provide you with

2198
01:33:35,699 --> 01:33:38,400
something that's more verifiable than

2199
01:33:37,260 --> 01:33:40,769
you would have gotten from the strict

2200
01:33:38,400 --> 01:33:43,348
delegation and I wonder how that

2201
01:33:40,769 --> 01:33:45,329
interacts with like what what are the

2202
01:33:43,349 --> 01:33:46,739
temporal aspects of that so for example

2203
01:33:45,329 --> 01:33:49,500
rather than getting an explicit

2204
01:33:46,739 --> 01:33:51,480
delegation I might get a happy eyeballs

2205
01:33:49,500 --> 01:33:53,369
approach where hey well we've got you

2206
01:33:51,480 --> 01:33:55,049
know we've got dot and somehow by having

2207
01:33:53,369 --> 01:33:57,089
gotten dot in that case I learned

2208
01:33:55,050 --> 01:33:59,099
something that I can retain so that my

2209
01:33:57,090 --> 01:34:01,949
next query at least for some temporal

2210
01:33:59,099 --> 01:34:04,170
duration will retain what will ratchet

2211
01:34:01,949 --> 01:34:06,598
that in so I joined a sort of flag that

2212
01:34:04,170 --> 01:34:07,910
that as an additional wrinkle to a

2213
01:34:06,599 --> 01:34:10,070
cursory part break I am

2214
01:34:07,910 --> 01:34:11,900
okay one quick second and we're just

2215
01:34:10,070 --> 01:34:14,389
gonna stay away from web PKI completely

2216
01:34:11,900 --> 01:34:16,580
because we think that's just a here at

2217
01:34:14,390 --> 01:34:18,020
this is that's like that's just a place

2218
01:34:16,580 --> 01:34:19,580
fraught with dis disaster

2219
01:34:18,020 --> 01:34:20,660
yeah why I just thought was not what I

2220
01:34:19,580 --> 01:34:22,610
was saying what I was saying was do not

2221
01:34:20,660 --> 01:34:26,450
discuss themed person web PPI at this

2222
01:34:22,610 --> 01:34:29,570
moment um not I was not saying say don't

2223
01:34:26,450 --> 01:34:31,250
do a peaky I um I think I think like I

2224
01:34:29,570 --> 01:34:32,150
think like there I see different people

2225
01:34:31,250 --> 01:34:33,440
in the room different opinions about

2226
01:34:32,150 --> 01:34:34,639
whether or not it's key viable to have

2227
01:34:33,440 --> 01:34:35,660
these big web peaky I search ordained

2228
01:34:34,640 --> 01:34:37,250
sorts and I just don't think at this

2229
01:34:35,660 --> 01:34:39,740
point in the game like I said a

2230
01:34:37,250 --> 01:34:41,150
requirement as when you engage with um I

2231
01:34:39,740 --> 01:34:45,530
think later may often be a true that um

2232
01:34:41,150 --> 01:34:47,660
like um so I think dick eg on you

2233
01:34:45,530 --> 01:34:49,160
we just comes up you were thinking basic

2234
01:34:47,660 --> 01:34:50,720
it sound like HSTs right we're like I

2235
01:34:49,160 --> 01:34:52,400
connect I connect to the server and it

2236
01:34:50,720 --> 01:34:54,970
goes like I promise I will be dot for

2237
01:34:52,400 --> 01:34:57,259
the next two weeks right yeah I've never

2238
01:34:54,970 --> 01:34:58,640
extremely valuable kind of idea I'm I

2239
01:34:57,260 --> 01:35:00,170
think we would not want to sing like HP

2240
01:34:58,640 --> 01:35:01,550
KP where it's like I promise that you

2241
01:35:00,170 --> 01:35:03,020
know that I would have this key for the

2242
01:35:01,550 --> 01:35:05,510
next two weeks that didn't work out so

2243
01:35:03,020 --> 01:35:06,590
well do you think so you think we should

2244
01:35:05,510 --> 01:35:08,030
yeah

2245
01:35:06,590 --> 01:35:11,660
and we're like taking that out now you

2246
01:35:08,030 --> 01:35:12,920
know I'm afraid guys that I have to I

2247
01:35:11,660 --> 01:35:17,180
have to leave anyway so I leave the

2248
01:35:12,920 --> 01:35:19,460
really hard ones to chasten yeah I think

2249
01:35:17,180 --> 01:35:22,130
the line between HSTs and HP KP is

2250
01:35:19,460 --> 01:35:24,440
fuzzier than we think it is and there

2251
01:35:22,130 --> 01:35:27,050
are other implications around around the

2252
01:35:24,440 --> 01:35:28,519
choices there so yes I agree that giving

2253
01:35:27,050 --> 01:35:30,380
people horrible foot guns is a bad idea

2254
01:35:28,520 --> 01:35:32,000
but I'm not sure what the what the

2255
01:35:30,380 --> 01:35:34,790
actual line is in this particular

2256
01:35:32,000 --> 01:35:37,550
context all right so we need to move on

2257
01:35:34,790 --> 01:35:39,830
I'm sorry I do want to respond very very

2258
01:35:37,550 --> 01:35:42,740
quickly one of the things about any of

2259
01:35:39,830 --> 01:35:45,320
those other pin up things is it does not

2260
01:35:42,740 --> 01:35:48,650
honor things that are in the DNS itself

2261
01:35:45,320 --> 01:35:50,299
if there is a Dane thing with a TTL that

2262
01:35:48,650 --> 01:35:56,120
absolutely has to be honored otherwise

2263
01:35:50,300 --> 01:35:57,590
it breaks a security model okay so there

2264
01:35:56,120 --> 01:36:00,740
was a lot of discussion on the list

2265
01:35:57,590 --> 01:36:04,040
about what choice we should make here

2266
01:36:00,740 --> 01:36:05,630
and there seem to be a few perspectives

2267
01:36:04,040 --> 01:36:09,019
expressed and we're trying to understand

2268
01:36:05,630 --> 01:36:11,360
how to put these into requirements or

2269
01:36:09,020 --> 01:36:13,670
how they translate or apply so the

2270
01:36:11,360 --> 01:36:16,219
question is really should the user

2271
01:36:13,670 --> 01:36:17,960
whether that's the stub resolver the

2272
01:36:16,220 --> 01:36:21,540
application like a browser or the

2273
01:36:17,960 --> 01:36:25,110
recursive resolver be able to say for

2274
01:36:21,540 --> 01:36:26,910
particular upstream server only ever use

2275
01:36:25,110 --> 01:36:29,880
you know secure transport and never

2276
01:36:26,910 --> 01:36:32,670
downgrade or should it or maybe in some

2277
01:36:29,880 --> 01:36:35,340
cases you know that is permissible or

2278
01:36:32,670 --> 01:36:37,620
should the authoritative domain whether

2279
01:36:35,340 --> 01:36:39,750
the owner/operator should specify that

2280
01:36:37,620 --> 01:36:42,660
say in a you know some sort of DNS

2281
01:36:39,750 --> 01:36:45,030
record or should we be silent on this

2282
01:36:42,660 --> 01:36:47,099
and and you know not worry about it for

2283
01:36:45,030 --> 01:36:51,090
requirements and either side could could

2284
01:36:47,100 --> 01:36:52,850
decide so I guess it seems like you're

2285
01:36:51,090 --> 01:36:56,550
offering three options one is that the

2286
01:36:52,850 --> 01:36:59,070
client says don't um only ever use dot

2287
01:36:56,550 --> 01:37:01,800
yep Swiper or and I don't see how that

2288
01:36:59,070 --> 01:37:03,059
works because like then like like but

2289
01:37:01,800 --> 01:37:05,250
they II try that on like you want to

2290
01:37:03,060 --> 01:37:06,480
talk to anybody he that's like we're

2291
01:37:05,250 --> 01:37:08,430
pretty I mean like we weren't even there

2292
01:37:06,480 --> 01:37:10,080
you know we're you know we're like you

2293
01:37:08,430 --> 01:37:11,400
know 90 plus percent HTTP penetration

2294
01:37:10,080 --> 01:37:12,809
we're terrified putting this on for HTTP

2295
01:37:11,400 --> 01:37:19,920
I think that's like that's pretty far

2296
01:37:12,810 --> 01:37:22,770
out of the future um the UH the I think

2297
01:37:19,920 --> 01:37:25,800
that the similarly for backup

2298
01:37:22,770 --> 01:37:27,720
compatibility reasons the most on the on

2299
01:37:25,800 --> 01:37:30,000
the authoritative domain obviously has

2300
01:37:27,720 --> 01:37:32,190
to advertise a way to talk to talk to

2301
01:37:30,000 --> 01:37:34,410
talk to the next guy the chain like not

2302
01:37:32,190 --> 01:37:36,419
via dot because like otherwise people

2303
01:37:34,410 --> 01:37:37,950
who only speak tout well I like people

2304
01:37:36,420 --> 01:37:40,260
everybody who currently in existence

2305
01:37:37,950 --> 01:37:41,370
will just choke right so like all your

2306
01:37:40,260 --> 01:37:44,550
so I think the only things you can

2307
01:37:41,370 --> 01:37:47,160
plausibly say are um you know here is

2308
01:37:44,550 --> 01:37:48,870
how to talk to me via Dodd and here's

2309
01:37:47,160 --> 01:37:51,900
how to talk to me if ya like not dot and

2310
01:37:48,870 --> 01:37:53,280
um and and then you know we could talk

2311
01:37:51,900 --> 01:37:54,900
about the semantics of like how you're

2312
01:37:53,280 --> 01:37:58,710
supposed to do just behaving you can

2313
01:37:54,900 --> 01:38:00,179
send information on the my instinct

2314
01:37:58,710 --> 01:38:01,740
obviously would be to has have to say

2315
01:38:00,180 --> 01:38:04,020
that like if you were given both of

2316
01:38:01,740 --> 01:38:05,490
those and you're like a modern person

2317
01:38:04,020 --> 01:38:08,430
then you ought to take dot and you what

2318
01:38:05,490 --> 01:38:10,679
refuse to connect the other one um but

2319
01:38:08,430 --> 01:38:12,300
um but I mean they because the

2320
01:38:10,680 --> 01:38:15,390
temporalities was not much also you can

2321
01:38:12,300 --> 01:38:16,560
say um I think that that I mean it was

2322
01:38:15,390 --> 01:38:18,270
really the truce minutes you can pause

2323
01:38:16,560 --> 01:38:21,360
that we have at this point for the to be

2324
01:38:18,270 --> 01:38:23,280
advertised are number one um like I

2325
01:38:21,360 --> 01:38:25,200
speak dot and you really ought to use it

2326
01:38:23,280 --> 01:38:26,429
um and I promise to have it on like

2327
01:38:25,200 --> 01:38:29,910
indefinitely so if it doesn't work like

2328
01:38:26,430 --> 01:38:32,040
you know that's an attack or conversely

2329
01:38:29,910 --> 01:38:33,450
I speak but like I don't like promise

2330
01:38:32,040 --> 01:38:34,739
that might not work and like maybe I

2331
01:38:33,450 --> 01:38:35,938
think you were happy I

2332
01:38:34,739 --> 01:38:37,678
those are the only sensible things you

2333
01:38:35,939 --> 01:38:38,999
can plausibly say I think the second one

2334
01:38:37,679 --> 01:38:40,229
is not super valuable but I can

2335
01:38:38,999 --> 01:38:41,880
understand it I think wouldn't be a

2336
01:38:40,229 --> 01:38:44,489
tragedy to have liked both settings both

2337
01:38:41,880 --> 01:38:45,689
indicators but like I say um you know

2338
01:38:44,489 --> 01:38:47,848
you have to build advertise both

2339
01:38:45,689 --> 01:38:49,380
otherwise people are breaking okay good

2340
01:38:47,849 --> 01:38:51,300
and I like the two scenarios that you

2341
01:38:49,380 --> 01:38:56,459
gave I think that that's great for

2342
01:38:51,300 --> 01:38:58,229
requirements Thanks Ben Schwartz I I

2343
01:38:56,459 --> 01:38:59,820
don't think it makes sense for the stub

2344
01:38:58,229 --> 01:39:02,869
resolver to provide any instruction

2345
01:38:59,820 --> 01:39:05,909
about this to the recursive I would be

2346
01:39:02,869 --> 01:39:09,389
strongly in favor of removing any of

2347
01:39:05,909 --> 01:39:12,360
that from the requirements and and

2348
01:39:09,389 --> 01:39:17,130
instead saying for example that there be

2349
01:39:12,360 --> 01:39:20,039
no change required or or involved at all

2350
01:39:17,130 --> 01:39:24,479
in the construction of queries formed by

2351
01:39:20,039 --> 01:39:26,099
the stub in particular where we're

2352
01:39:24,479 --> 01:39:28,499
talking about something here that is

2353
01:39:26,099 --> 01:39:31,170
completely unbearable from the stubs

2354
01:39:28,499 --> 01:39:33,420
perspective stub has no way to prove

2355
01:39:31,170 --> 01:39:35,340
whether this happened at all in contrast

2356
01:39:33,420 --> 01:39:36,900
to for example the DNS SEC okay bit

2357
01:39:35,340 --> 01:39:38,820
where at least if things are working

2358
01:39:36,900 --> 01:39:42,659
right you'll get an RR cig back that

2359
01:39:38,820 --> 01:39:44,340
tells you that that tells you that you

2360
01:39:42,659 --> 01:39:46,098
can use to verify locally that the

2361
01:39:44,340 --> 01:39:48,840
recursive did what you wanted it to do

2362
01:39:46,099 --> 01:39:51,719
also I think that the bit we're talking

2363
01:39:48,840 --> 01:39:54,959
about here gets extremely strange very

2364
01:39:51,719 --> 01:39:57,119
quickly for example it's not clear what

2365
01:39:54,959 --> 01:40:00,659
if you imagine that the stub is allowed

2366
01:39:57,119 --> 01:40:02,098
to say only do do T then you have to try

2367
01:40:00,659 --> 01:40:04,079
to understand what that means about

2368
01:40:02,099 --> 01:40:06,179
reading results out of the resolve out

2369
01:40:04,079 --> 01:40:09,299
of the recursive cash you have to think

2370
01:40:06,179 --> 01:40:13,380
about what that means about whether the

2371
01:40:09,300 --> 01:40:15,479
route has implemented do T or not or

2372
01:40:13,380 --> 01:40:18,689
whether a local copy of the route that

2373
01:40:15,479 --> 01:40:20,849
was fetched over an insecure transport

2374
01:40:18,689 --> 01:40:23,010
with DNS SEC validated is considered

2375
01:40:20,849 --> 01:40:24,780
appropriate I think it's a gigantic can

2376
01:40:23,010 --> 01:40:27,079
of worms and we should exclude it cool

2377
01:40:24,780 --> 01:40:27,079
thanks

2378
01:40:27,110 --> 01:40:31,369
got a favor I come by with my sort of

2379
01:40:29,579 --> 01:40:34,400
resolver vendor on it

2380
01:40:31,369 --> 01:40:36,589
no I mean really resolving is already

2381
01:40:34,400 --> 01:40:38,690
complicated enough we have to shout at

2382
01:40:36,590 --> 01:40:40,969
the cash for ECS there's jr.

2383
01:40:38,690 --> 01:40:42,290
minimization there's and next domain I

2384
01:40:40,969 --> 01:40:44,239
mean there's lots of stuff that's going

2385
01:40:42,290 --> 01:40:46,210
on there and it's really complicated if

2386
01:40:44,239 --> 01:40:48,559
the client wants to have an assertion

2387
01:40:46,210 --> 01:40:51,020
you should do the things themselves

2388
01:40:48,560 --> 01:40:54,139
maybe the way that yeah yep that the NSA

2389
01:40:51,020 --> 01:40:56,330
was was prepared but the result really

2390
01:40:54,139 --> 01:40:58,429
should do it stuff and I mean if you if

2391
01:40:56,330 --> 01:41:00,469
any client would have to say turn it on

2392
01:40:58,429 --> 01:41:02,030
now that reminds me a bit of the early

2393
01:41:00,469 --> 01:41:03,710
versions of the Microsoft DNS server

2394
01:41:02,030 --> 01:41:05,840
where you if you turned on the in a sec

2395
01:41:03,710 --> 01:41:08,150
on the domain everything I don't need

2396
01:41:05,840 --> 01:41:09,290
has to be validated so it doesn't work

2397
01:41:08,150 --> 01:41:12,409
at the moment and it's really

2398
01:41:09,290 --> 01:41:15,050
complicated so I mean we should not do

2399
01:41:12,409 --> 01:41:17,239
have a requirement okay so I'm hearing

2400
01:41:15,050 --> 01:41:18,949
lots of Plus Ones don't do the client

2401
01:41:17,239 --> 01:41:21,980
side stuff so yeah one more plus one

2402
01:41:18,949 --> 01:41:25,699
from the page me here so this reminds me

2403
01:41:21,980 --> 01:41:28,190
a lot of the required TLS mechanism in

2404
01:41:25,699 --> 01:41:29,989
SMTP which is very difficult to figure

2405
01:41:28,190 --> 01:41:32,719
out how to deploy it even in a situation

2406
01:41:29,989 --> 01:41:34,909
where we had start TLS available for a

2407
01:41:32,719 --> 01:41:37,040
long time I want to call out the

2408
01:41:34,909 --> 01:41:40,400
similarities between this project and

2409
01:41:37,040 --> 01:41:41,780
start TLS for the SMTP network I think

2410
01:41:40,400 --> 01:41:43,940
we did a great job at getting start to

2411
01:41:41,780 --> 01:41:46,340
us out there and SMTP and we didn't do a

2412
01:41:43,940 --> 01:41:49,009
good job of figuring out how to ratchet

2413
01:41:46,340 --> 01:41:51,739
ourselves into a majority start TLS

2414
01:41:49,010 --> 01:41:53,300
world until another decade after that so

2415
01:41:51,739 --> 01:41:55,428
I appreciate the attempt to think about

2416
01:41:53,300 --> 01:41:58,369
how we get there but we're not even at

2417
01:41:55,429 --> 01:41:59,659
the stage of start TLS is deployed in

2418
01:41:58,369 --> 01:42:01,610
this mechanism and I think we need to

2419
01:41:59,659 --> 01:42:03,110
get there first it's just the curse of

2420
01:42:01,610 --> 01:42:08,929
the deployed base right that's what we

2421
01:42:03,110 --> 01:42:10,549
do here at the IETF yep Wes redeker is a

2422
01:42:08,929 --> 01:42:14,409
I'm going to both agree and disagree

2423
01:42:10,550 --> 01:42:18,560
with dkg I think so

2424
01:42:14,409 --> 01:42:21,170
RC 76-72 I strongly suggest going back

2425
01:42:18,560 --> 01:42:23,330
to look at so that is Dana SMTP and and

2426
01:42:21,170 --> 01:42:26,810
how those work together and Victor to

2427
01:42:23,330 --> 01:42:28,610
have me put a lot of effort into how to

2428
01:42:26,810 --> 01:42:30,920
deal with the situation yeah there's

2429
01:42:28,610 --> 01:42:32,570
always a train of yeah Broly cards

2430
01:42:30,920 --> 01:42:36,590
behind all these rooms that makes for an

2431
01:42:32,570 --> 01:42:38,900
interesting week so he thought long and

2432
01:42:36,590 --> 01:42:41,030
hard about how to deal with situations

2433
01:42:38,900 --> 01:42:42,920
where the user is removed from the

2434
01:42:41,030 --> 01:42:44,790
decision-making process of starting up

2435
01:42:42,920 --> 01:42:47,460
TLS and so

2436
01:42:44,790 --> 01:42:49,290
that 76-72 is actually defined as an

2437
01:42:47,460 --> 01:42:51,660
opportunistic encryption role to where

2438
01:42:49,290 --> 01:42:53,790
you you you do the best that you can

2439
01:42:51,660 --> 01:42:56,250
under the guy is with the information

2440
01:42:53,790 --> 01:42:57,690
that you have and you know you may end

2441
01:42:56,250 --> 01:43:00,030
up starting TLS even when you don't

2442
01:42:57,690 --> 01:43:01,559
necessarily know the other side if you

2443
01:43:00,030 --> 01:43:03,420
can't you know find the right gain

2444
01:43:01,560 --> 01:43:05,040
record to get you all the way there but

2445
01:43:03,420 --> 01:43:06,540
the important part is not actually the

2446
01:43:05,040 --> 01:43:08,700
semantics of actually how to make that

2447
01:43:06,540 --> 01:43:10,260
connection but rather the fallback logic

2448
01:43:08,700 --> 01:43:12,269
of he put in a lot of very good

2449
01:43:10,260 --> 01:43:14,040
description of you know what's the best

2450
01:43:12,270 --> 01:43:18,930
you can hope for and here's why and

2451
01:43:14,040 --> 01:43:22,500
here's the logic to walk through Brian

2452
01:43:18,930 --> 01:43:25,140
Dixon GoDaddy +12 what Wes just said +12

2453
01:43:22,500 --> 01:43:27,960
not the client I think from the

2454
01:43:25,140 --> 01:43:32,040
authority side there may be some value

2455
01:43:27,960 --> 01:43:34,980
to guidance from the authority on how to

2456
01:43:32,040 --> 01:43:38,640
deal with the happy eyeballs requirement

2457
01:43:34,980 --> 01:43:41,009
or just intent such as using some

2458
01:43:38,640 --> 01:43:44,760
version of serve stale if the d-o-t

2459
01:43:41,010 --> 01:43:49,380
isn't reachable while rather than trying

2460
01:43:44,760 --> 01:43:51,150
to go over Deal 53 versus the

2461
01:43:49,380 --> 01:43:53,670
information effectively not having a lot

2462
01:43:51,150 --> 01:43:55,530
of privacy value and just allow it to

2463
01:43:53,670 --> 01:44:01,500
fall back without trying to do serve

2464
01:43:55,530 --> 01:44:03,450
stale Patman minutes with fastly I'm

2465
01:44:01,500 --> 01:44:05,760
just to sort of riff on TKG

2466
01:44:03,450 --> 01:44:09,240
saying maybe the requirement should be

2467
01:44:05,760 --> 01:44:11,310
that we deal with discovery an

2468
01:44:09,240 --> 01:44:14,250
advertisement of non down down readable

2469
01:44:11,310 --> 01:44:16,590
services right so the way G B solves

2470
01:44:14,250 --> 01:44:18,990
this is with your ice cube I mean yes

2471
01:44:16,590 --> 01:44:20,190
does that right in maybe the SMTP didn't

2472
01:44:18,990 --> 01:44:22,639
so that might be the requirement to

2473
01:44:20,190 --> 01:44:22,639
focus on

2474
01:44:32,790 --> 01:44:38,620
all right great

2475
01:44:35,130 --> 01:44:41,830
all right so now we're to requirements

2476
01:44:38,620 --> 01:44:44,050
on discovery so what requirements do we

2477
01:44:41,830 --> 01:44:46,989
have for a recursive to determine

2478
01:44:44,050 --> 01:44:50,230
availability of you know dot in this

2479
01:44:46,989 --> 01:44:52,509
case on an authoritative server so I

2480
01:44:50,230 --> 01:44:54,910
think you know mostly this is via

2481
01:44:52,510 --> 01:44:56,260
whitelist today so are there any

2482
01:44:54,910 --> 01:44:58,090
requirements that we want to place on

2483
01:44:56,260 --> 01:45:00,390
this like it has to be in the DNS or it

2484
01:44:58,090 --> 01:45:03,190
should be you know completely

2485
01:45:00,390 --> 01:45:05,320
automatable independently from different

2486
01:45:03,190 --> 01:45:06,610
entities any requirements that we

2487
01:45:05,320 --> 01:45:08,440
haven't thought of or that have come up

2488
01:45:06,610 --> 01:45:11,559
on the mailing list that you'd like to

2489
01:45:08,440 --> 01:45:14,830
be certain aren't included here Brian

2490
01:45:11,560 --> 01:45:17,230
excellent GoDaddy at least my opinion it

2491
01:45:14,830 --> 01:45:20,710
has to be in the DNS should be Dane

2492
01:45:17,230 --> 01:45:23,320
sorry DNS X signed and it should be

2493
01:45:20,710 --> 01:45:26,350
associated with the name of the name

2494
01:45:23,320 --> 01:45:29,110
server rather than domain being served I

2495
01:45:26,350 --> 01:45:32,500
think it scales much better that way and

2496
01:45:29,110 --> 01:45:38,860
it provides all the the necessary parts

2497
01:45:32,500 --> 01:45:41,550
as far as delegation signatures Wes

2498
01:45:38,860 --> 01:45:44,259
heard occur again to put it another way

2499
01:45:41,550 --> 01:45:46,750
we have a distributed hierarchical

2500
01:45:44,260 --> 01:45:50,820
lookup model why would we look somewhere

2501
01:45:46,750 --> 01:45:50,820
else for information on how to use it

2502
01:45:56,219 --> 01:45:59,219
Erol

2503
01:45:57,719 --> 01:46:00,540
I think this ties in directly to Patrick

2504
01:45:59,219 --> 01:46:02,219
Ravana's just said a few minutes ago

2505
01:46:00,540 --> 01:46:04,260
they're like there's news you're some

2506
01:46:02,219 --> 01:46:06,030
way semantically to say this thing ought

2507
01:46:04,260 --> 01:46:17,850
to be encrypted the rest of it seems

2508
01:46:06,030 --> 01:46:20,670
like we've gotten a lot of notes here

2509
01:46:17,850 --> 01:46:22,310
we'll compare as co-authors and look at

2510
01:46:20,670 --> 01:46:26,580
the notes of course from the session and

2511
01:46:22,310 --> 01:46:30,420
Java room and make those changes and you

2512
01:46:26,580 --> 01:46:32,910
know I guess updated quite honestly a

2513
01:46:30,420 --> 01:46:34,860
couple weeks after the meeting to get

2514
01:46:32,910 --> 01:46:37,019
back and catch up on other work and then

2515
01:46:34,860 --> 01:46:39,210
do an update so certainly before end of

2516
01:46:37,020 --> 01:46:40,620
year I think we'll have a next revision

2517
01:46:39,210 --> 01:46:42,360
and then the question is like did we

2518
01:46:40,620 --> 01:46:44,430
just you know keep this document and

2519
01:46:42,360 --> 01:46:46,170
keep on yeah I think what we're working

2520
01:46:44,430 --> 01:46:47,969
when Brian and I talked about was just

2521
01:46:46,170 --> 01:46:49,320
adopting it having you guys like you'll

2522
01:46:47,969 --> 01:46:51,090
do some updates and we'll just adopt it

2523
01:46:49,320 --> 01:46:52,199
as a working group only document we

2524
01:46:51,090 --> 01:46:54,660
won't have to go through a lot of that

2525
01:46:52,199 --> 01:46:56,009
sort of process stuff and then we can

2526
01:46:54,660 --> 01:46:58,230
just then the group can just start

2527
01:46:56,010 --> 01:46:59,940
chewing on it that way and and making

2528
01:46:58,230 --> 01:47:02,910
all their suggestions and stuff yeah and

2529
01:46:59,940 --> 01:47:06,210
I think one that we said at the

2530
01:47:02,910 --> 01:47:08,010
beginning just to be clear so we will be

2531
01:47:06,210 --> 01:47:10,469
looking in particular at the perspective

2532
01:47:08,010 --> 01:47:12,510
is and use cases there are much of

2533
01:47:10,469 --> 01:47:13,920
requirements there that we probably miss

2534
01:47:12,510 --> 01:47:16,410
that we'll have to pull in so we'll do a

2535
01:47:13,920 --> 01:47:17,910
quick gap analysis the rest of that will

2536
01:47:16,410 --> 01:47:19,410
just put into appendix so it could be

2537
01:47:17,910 --> 01:47:22,730
deletable later just to make this as

2538
01:47:19,410 --> 01:47:25,500
simple as possible in the main body yeah

2539
01:47:22,730 --> 01:47:29,669
sorry Brian Dixon GoDaddy I think just

2540
01:47:25,500 --> 01:47:33,120
from a very high level from building the

2541
01:47:29,670 --> 01:47:35,300
requirements I think definitely making

2542
01:47:33,120 --> 01:47:37,949
the distinction between things that are

2543
01:47:35,300 --> 01:47:41,820
for providing the service on the

2544
01:47:37,949 --> 01:47:43,259
authority side what what the value

2545
01:47:41,820 --> 01:47:45,330
propositions are and what things should

2546
01:47:43,260 --> 01:47:48,330
be recommended versus what things should

2547
01:47:45,330 --> 01:47:50,610
be mandatory to implement versus in

2548
01:47:48,330 --> 01:47:53,489
order to achieve the privacy on the

2549
01:47:50,610 --> 01:47:56,460
client side if you want to get the

2550
01:47:53,489 --> 01:47:58,349
privacy you may need to implement

2551
01:47:56,460 --> 01:48:00,360
certain things but it doesn't need to be

2552
01:47:58,350 --> 01:48:02,969
mandatory because it's always the choice

2553
01:48:00,360 --> 01:48:04,410
of the resolver yeah that's a good point

2554
01:48:02,969 --> 01:48:06,690
and I think that's probably one of the

2555
01:48:04,410 --> 01:48:08,309
next discussions to have once the doc is

2556
01:48:06,690 --> 01:48:10,769
updated is you know which of these are

2557
01:48:08,310 --> 01:48:13,640
firmly mandatory

2558
01:48:10,770 --> 01:48:16,080
in which are potentially optional ones

2559
01:48:13,640 --> 01:48:18,440
Steve Marisa I think this might be more

2560
01:48:16,080 --> 01:48:20,790
a question for the chairs than you but

2561
01:48:18,440 --> 01:48:22,200
so at what point are you encouraging

2562
01:48:20,790 --> 01:48:23,760
people to sort of actually write into a

2563
01:48:22,200 --> 01:48:25,050
trash saying here's how I would do the

2564
01:48:23,760 --> 01:48:28,440
signalling here's how I would use a

2565
01:48:25,050 --> 01:48:29,730
funny name for an NS or because I think

2566
01:48:28,440 --> 01:48:31,919
I've seen a bunch of discussions on the

2567
01:48:29,730 --> 01:48:33,809
list for people kind of put in little

2568
01:48:31,920 --> 01:48:35,550
snippets of these ideas in mail and it

2569
01:48:33,810 --> 01:48:37,320
gets confusing and so I'm just wondering

2570
01:48:35,550 --> 01:48:39,960
at what point would you like to see more

2571
01:48:37,320 --> 01:48:42,330
I think fairly soon I think once we sort

2572
01:48:39,960 --> 01:48:44,580
of do an update on this and sort of get

2573
01:48:42,330 --> 01:48:45,960
it more a little structured Brian and I

2574
01:48:44,580 --> 01:48:47,309
actually already meeting scheduled on

2575
01:48:45,960 --> 01:48:50,490
Tuesday to sort of go through some of

2576
01:48:47,310 --> 01:48:52,800
this but I figure you know once that

2577
01:48:50,490 --> 01:48:54,780
happens you know I would say like you

2578
01:48:52,800 --> 01:48:56,790
then we can yes we can start people can

2579
01:48:54,780 --> 01:48:58,110
start submitting stuff on on here's how

2580
01:48:56,790 --> 01:48:59,340
we think about solving it this way or

2581
01:48:58,110 --> 01:49:01,049
here's how we can look at it this way

2582
01:48:59,340 --> 01:49:02,580
current thing great yeah so I think it

2583
01:49:01,050 --> 01:49:04,260
might be helped the view abroad send a

2584
01:49:02,580 --> 01:49:06,660
medal to say okay

2585
01:49:04,260 --> 01:49:08,850
Ready Steady Go yes exactly and I think

2586
01:49:06,660 --> 01:49:11,160
what we're gonna wait for is to go

2587
01:49:08,850 --> 01:49:13,740
through the have the authors go through

2588
01:49:11,160 --> 01:49:15,720
and do an update and then we can push

2589
01:49:13,740 --> 01:49:17,280
that push that out and because of the

2590
01:49:15,720 --> 01:49:18,930
holidays and stuff I'm not expecting

2591
01:49:17,280 --> 01:49:21,540
that till the end of December basically

2592
01:49:18,930 --> 01:49:24,960
yeah and and I would say you know the

2593
01:49:21,540 --> 01:49:26,850
mandatory versus you know optional

2594
01:49:24,960 --> 01:49:29,280
acquirements I don't think there's too

2595
01:49:26,850 --> 01:49:31,440
much on people doing propose exactly the

2596
01:49:29,280 --> 01:49:33,780
solutions so I think once the next drove

2597
01:49:31,440 --> 01:49:35,429
happens yes those things can happen in

2598
01:49:33,780 --> 01:49:37,320
parallel exactly

2599
01:49:35,430 --> 01:49:39,570
Brian Dixon godaddy one other comment

2600
01:49:37,320 --> 01:49:42,450
just in case just a reminder if

2601
01:49:39,570 --> 01:49:44,570
anybody's interested in testing an

2602
01:49:42,450 --> 01:49:48,330
actual implementation which is way

2603
01:49:44,570 --> 01:49:53,210
premature but we actually have in our ot

2604
01:49:48,330 --> 01:49:53,210
environment ADOT setup Oh

2605
01:49:53,550 --> 01:49:58,230
also one thing that came up before Paul

2606
01:49:55,440 --> 01:49:59,339
speaks is Brian and I if we do get a lot

2607
01:49:58,230 --> 01:50:02,160
of good feedback if people start

2608
01:49:59,340 --> 01:50:04,080
submitting drafts like Stephen says we

2609
01:50:02,160 --> 01:50:06,480
are we're totally open to having another

2610
01:50:04,080 --> 01:50:07,680
intern before Vancouver to sort of chew

2611
01:50:06,480 --> 01:50:11,940
through some of this in a very focused

2612
01:50:07,680 --> 01:50:13,680
way so just keep that on I just got a

2613
01:50:11,940 --> 01:50:15,210
question about clarity I don't actually

2614
01:50:13,680 --> 01:50:17,760
care much of what the answer is but I

2615
01:50:15,210 --> 01:50:19,230
was confused by the intro is this an

2616
01:50:17,760 --> 01:50:20,220
internal working group document or

2617
01:50:19,230 --> 01:50:22,530
something we're trying to like publish

2618
01:50:20,220 --> 01:50:24,570
with IETF internals okay

2619
01:50:22,530 --> 01:50:25,980
it'd be adopted working group only just

2620
01:50:24,570 --> 01:50:28,769
for the we don't intend to publish it

2621
01:50:25,980 --> 01:50:30,990
without census exactly well maybe maybe

2622
01:50:28,770 --> 01:50:32,670
I can go in some other reference pointer

2623
01:50:30,990 --> 01:50:36,679
it mean it might be good historically to

2624
01:50:32,670 --> 01:50:38,550
point back to doesn't doesn't matter I

2625
01:50:36,680 --> 01:50:39,960
think it might matter so we should

2626
01:50:38,550 --> 01:50:42,120
probably wanna be clear about what what

2627
01:50:39,960 --> 01:50:44,820
do you think though I would rate it a

2628
01:50:42,120 --> 01:50:48,800
little bit differently if I was trying

2629
01:50:44,820 --> 01:50:48,799
to get Crosse area review for it right

2630
01:50:51,680 --> 01:50:56,790
ok all right thanks oh wait this fall

2631
01:50:55,230 --> 01:50:58,110
off and I just I haven't gotten to the

2632
01:50:56,790 --> 01:51:01,680
mic because I've been trying to take

2633
01:50:58,110 --> 01:51:06,599
notes a major major thing that is not

2634
01:51:01,680 --> 01:51:09,210
covered in this document is name sir

2635
01:51:06,600 --> 01:51:13,080
zones whose name servers are not all

2636
01:51:09,210 --> 01:51:16,350
controlled by one one organization so

2637
01:51:13,080 --> 01:51:18,330
there's two issues here that again is

2638
01:51:16,350 --> 01:51:20,430
not covered at all and I don't I believe

2639
01:51:18,330 --> 01:51:23,519
that we do have requirements about it

2640
01:51:20,430 --> 01:51:26,340
from the DNS one is are all NS records

2641
01:51:23,520 --> 01:51:30,090
considered equal and a very simple case

2642
01:51:26,340 --> 01:51:32,580
would be a zone that has two NS records

2643
01:51:30,090 --> 01:51:34,440
one that offers dot and one that does

2644
01:51:32,580 --> 01:51:38,610
not right so that's one thing but the

2645
01:51:34,440 --> 01:51:40,830
other is for organization or for zones

2646
01:51:38,610 --> 01:51:43,410
where there are many many name servers

2647
01:51:40,830 --> 01:51:46,019
that are known to be run by wildly

2648
01:51:43,410 --> 01:51:47,370
different organizations how do we you

2649
01:51:46,020 --> 01:51:49,950
know like how do we want to handle that

2650
01:51:47,370 --> 01:51:52,349
and I'll just say it as one word the

2651
01:51:49,950 --> 01:51:53,550
route got it so in that scenario it's

2652
01:51:52,350 --> 01:51:56,010
like you know you're the domain owner

2653
01:51:53,550 --> 01:51:58,170
you're using you know for different CD

2654
01:51:56,010 --> 01:52:00,480
ends for a particular zone and so on

2655
01:51:58,170 --> 01:52:02,820
yeah okay yeah that actually seems like

2656
01:52:00,480 --> 01:52:05,339
my paper has for what for client policy

2657
01:52:02,820 --> 01:52:07,620
but um I just wanted to in reference to

2658
01:52:05,340 --> 01:52:09,690
Patrick's question um about the state of

2659
01:52:07,620 --> 01:52:11,940
this document um I'd like call your

2660
01:52:09,690 --> 01:52:13,500
attention to that November 2016 i HT

2661
01:52:11,940 --> 01:52:15,389
statement on supporting documents for

2662
01:52:13,500 --> 01:52:17,070
working groups which strongly suggests

2663
01:52:15,390 --> 01:52:21,600
the documents like this do not end up

2664
01:52:17,070 --> 01:52:24,469
being RFC's okay that's right and that's

2665
01:52:21,600 --> 01:52:24,470
what we yep

2666
01:52:26,940 --> 01:52:32,820
Brian Dixon one comment about the

2667
01:52:30,120 --> 01:52:36,180
question about Dame server's name server

2668
01:52:32,820 --> 01:52:39,480
names in the NS set I would recommend

2669
01:52:36,180 --> 01:52:41,790
putting in recommendation that those be

2670
01:52:39,480 --> 01:52:54,330
retrieved from the apex of the zone

2671
01:52:41,790 --> 01:52:56,130
rather than the delegation blue awesome

2672
01:52:54,330 --> 01:52:59,070
yep so that's all you got you guys

2673
01:52:56,130 --> 01:53:00,300
you've got some work cut out for you we

2674
01:52:59,070 --> 01:53:02,370
have some I know the chairs have some

2675
01:53:00,300 --> 01:53:07,650
work cut out for us in the short term as

2676
01:53:02,370 --> 01:53:09,090
well so if there's not anything else

2677
01:53:07,650 --> 01:53:10,200
if hopefully everybody signed the blue

2678
01:53:09,090 --> 01:53:13,070
sheets we're doing pretty good actually

2679
01:53:10,200 --> 01:53:18,000
so surprisingly considering how late

2680
01:53:13,070 --> 01:53:19,620
everything sort of ran the as I said

2681
01:53:18,000 --> 01:53:21,240
Brian and I will talk to next week we'll

2682
01:53:19,620 --> 01:53:23,040
probably actually a couple of these

2683
01:53:21,240 --> 01:53:26,010
documents that we talked about earlier

2684
01:53:23,040 --> 01:53:27,630
we want to go back with the other chairs

2685
01:53:26,010 --> 01:53:29,760
on the other groups and sort of discuss

2686
01:53:27,630 --> 01:53:32,580
how they sort of fit in if they do or

2687
01:53:29,760 --> 01:53:34,800
not focusing on our sort of tight

2688
01:53:32,580 --> 01:53:36,809
charter it expanded a little bit with

2689
01:53:34,800 --> 01:53:40,710
the phase two work but it still sort of

2690
01:53:36,810 --> 01:53:42,960
focused on what's going on and so we'll

2691
01:53:40,710 --> 01:53:44,910
we'll sort of see where that goes so so

2692
01:53:42,960 --> 01:53:46,680
thanks everybody I appreciate all this

2693
01:53:44,910 --> 01:53:48,420
like I said if it looks like we get a

2694
01:53:46,680 --> 01:53:49,590
lot of good stuff going on with the face

2695
01:53:48,420 --> 01:53:51,150
to requite especially with solution

2696
01:53:49,590 --> 01:53:53,040
stuff we'll probably plan on doing an

2697
01:53:51,150 --> 01:53:55,950
interim in February before the March

2698
01:53:53,040 --> 01:53:57,210
meeting so well-well chairs will take

2699
01:53:55,950 --> 01:53:58,590
that up and sort of see what we can do

2700
01:53:57,210 --> 01:54:00,780
with that all right

2701
01:53:58,590 --> 01:54:05,390
thanks all so where are the blue sheets

2702
01:54:00,780 --> 01:54:05,389
oh cool thank you Daniel

