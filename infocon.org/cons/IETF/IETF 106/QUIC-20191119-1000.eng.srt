1
00:00:05,420 --> 00:00:16,128
okay let's get started Ben I'm sorry

2
00:00:10,940 --> 00:00:19,189
or engineer it'll work out okay this is

3
00:00:16,129 --> 00:00:20,689
quick I'm one of your chairs mark

4
00:00:19,189 --> 00:00:23,300
Nottingham Lars couldn't make it here

5
00:00:20,689 --> 00:00:26,360
this week and he may join us remotely

6
00:00:23,300 --> 00:00:30,410
but I'm not I don't see him yet it is

7
00:00:26,360 --> 00:00:32,320
quite early for him yes this is the note

8
00:00:30,410 --> 00:00:34,370
well hopefully you're familiar with it

9
00:00:32,320 --> 00:00:37,850
this is the terms under which we

10
00:00:34,370 --> 00:00:38,989
participate in the ITF because you know

11
00:00:37,850 --> 00:00:40,910
you're taking a picture of the note well

12
00:00:38,989 --> 00:00:44,659
that thank you

13
00:00:40,910 --> 00:00:45,858
good especially regarding not only

14
00:00:44,659 --> 00:00:48,440
intellectual property but also

15
00:00:45,859 --> 00:00:50,120
especially our behavior as we engage in

16
00:00:48,440 --> 00:00:52,370
these discussions we need to make sure

17
00:00:50,120 --> 00:00:53,599
we treat each other with respect so we

18
00:00:52,370 --> 00:00:55,968
have a code of conduct we have

19
00:00:53,600 --> 00:00:58,819
anti-harassment procedures we also have

20
00:00:55,969 --> 00:01:00,440
various structures the ITF to make sure

21
00:00:58,819 --> 00:01:02,329
this is followed and give people help if

22
00:01:00,440 --> 00:01:04,209
they need it so if you have any concerns

23
00:01:02,329 --> 00:01:07,850
please talk to myself

24
00:01:04,209 --> 00:01:12,619
Lars next time perhaps or other ITF

25
00:01:07,850 --> 00:01:14,330
leadership blue sheets are circulating

26
00:01:12,620 --> 00:01:17,240
please sign those as they come by you

27
00:01:14,330 --> 00:01:19,190
there blue Brian has so graciously

28
00:01:17,240 --> 00:01:22,910
offered to scribe for us thank you Brian

29
00:01:19,190 --> 00:01:25,310
your cane and dkg is jabber scribing I

30
00:01:22,910 --> 00:01:27,979
just checked the bridge between jabber

31
00:01:25,310 --> 00:01:30,590
and slack is not functioning terribly

32
00:01:27,980 --> 00:01:31,730
well right now so don't assume that what

33
00:01:30,590 --> 00:01:33,350
you say and select will be seen in

34
00:01:31,730 --> 00:01:34,880
jabber and vice versa so let's just use

35
00:01:33,350 --> 00:01:40,309
jabber for now since that's what

36
00:01:34,880 --> 00:01:44,360
everybody's familiar with I have no idea

37
00:01:40,310 --> 00:01:47,630
why you would be not hearing me yes the

38
00:01:44,360 --> 00:01:50,060
agenda today we're going to talk briefly

39
00:01:47,630 --> 00:01:51,229
about the hackathon give people update

40
00:01:50,060 --> 00:01:52,850
of where that got us

41
00:01:51,230 --> 00:01:54,080
and then we're just going to talk about

42
00:01:52,850 --> 00:01:56,509
issues we've gotten to the point where

43
00:01:54,080 --> 00:01:58,670
are our issues that we have opened are

44
00:01:56,510 --> 00:02:00,770
relatively few and so we're just gonna

45
00:01:58,670 --> 00:02:03,050
turn through the issues list I will

46
00:02:00,770 --> 00:02:04,820
continue that on Thursday and end up

47
00:02:03,050 --> 00:02:07,850
with some presentations on drafts that

48
00:02:04,820 --> 00:02:09,470
we are might consider adopting regarding

49
00:02:07,850 --> 00:02:11,480
extensions one on datagrams and one on

50
00:02:09,470 --> 00:02:14,000
load balancers then talk briefly about

51
00:02:11,480 --> 00:02:17,929
planning our our future and we have some

52
00:02:14,000 --> 00:02:20,930
as time permits sessions I see Martin

53
00:02:17,930 --> 00:02:24,730
and is this a scribe interrupts it

54
00:02:20,930 --> 00:02:24,730
always takes precedence please interrupt

55
00:02:28,560 --> 00:02:32,670
yeah I would like to ask for a backup

56
00:02:31,170 --> 00:02:35,100
scribe to jump into the ether pad with

57
00:02:32,670 --> 00:02:38,130
me oh yes thank you yes would anybody be

58
00:02:35,100 --> 00:02:42,120
willing to help almost right next to you

59
00:02:38,130 --> 00:02:44,940
so that's that's that's good I think you

60
00:02:42,120 --> 00:02:48,450
find you sitting next to each other

61
00:02:44,940 --> 00:02:50,310
yeah sometimes a brief agenda bash I

62
00:02:48,450 --> 00:02:51,869
know I talked to you you're a bit close

63
00:02:50,310 --> 00:02:54,030
to life I know I talked to you about

64
00:02:51,870 --> 00:02:56,760
this before privately but the quick

65
00:02:54,030 --> 00:02:58,890
version negotiation stuff I think that

66
00:02:56,760 --> 00:03:00,570
needs 15 minutes and I think that needs

67
00:02:58,890 --> 00:03:03,089
15 minutes ahead of the two that you

68
00:03:00,570 --> 00:03:05,910
have assigned 15 minutes there okay it's

69
00:03:03,090 --> 00:03:09,300
one of the key decision points that

70
00:03:05,910 --> 00:03:11,340
we're we're making here and so if we

71
00:03:09,300 --> 00:03:15,230
don't resolve that before we ship

72
00:03:11,340 --> 00:03:17,519
version one as I hope we do very soon

73
00:03:15,230 --> 00:03:19,560
we're in a bit of an awkward situation

74
00:03:17,519 --> 00:03:21,239
so understanding where we're going with

75
00:03:19,560 --> 00:03:24,180
version negotiation even if we don't

76
00:03:21,239 --> 00:03:26,130
have a fixed date for that is that

77
00:03:24,180 --> 00:03:27,600
probably the best thing no no need to go

78
00:03:26,130 --> 00:03:28,920
into too much detail

79
00:03:27,600 --> 00:03:30,239
we just need to time box all those

80
00:03:28,920 --> 00:03:33,929
discussions to make sure that everyone

81
00:03:30,239 --> 00:03:36,750
has time available Martin Martin Duke so

82
00:03:33,930 --> 00:03:39,239
um this is the quick version

83
00:03:36,750 --> 00:03:41,850
ossification in the scope of the issue

84
00:03:39,239 --> 00:03:44,880
discussion or version negotiation issues

85
00:03:41,850 --> 00:03:51,150
okay thanks okay anything else any other

86
00:03:44,880 --> 00:03:55,140
agenda bashes okay a real quick note we

87
00:03:51,150 --> 00:03:57,299
now have an HTTP 3 logo I we may be the

88
00:03:55,140 --> 00:04:01,230
first ITF working group with two logos

89
00:03:57,299 --> 00:04:02,700
so that's exciting we have stickers that

90
00:04:01,230 --> 00:04:04,798
have been graciously created for us so

91
00:04:02,700 --> 00:04:06,179
I'll be giving those out after the

92
00:04:04,799 --> 00:04:10,410
session if you're interested they're

93
00:04:06,180 --> 00:04:13,040
very small stickers okay so let's get

94
00:04:10,410 --> 00:04:13,040
right into it then

95
00:04:32,960 --> 00:04:37,169
okay so for those who don't know we're

96
00:04:35,010 --> 00:04:40,039
using this project on github to track

97
00:04:37,170 --> 00:04:45,090
the issues in the late stage process

98
00:04:40,040 --> 00:04:47,970
right now that's the transport and TLS

99
00:04:45,090 --> 00:04:49,229
issues we'll talk about HTTP and

100
00:04:47,970 --> 00:04:54,630
recovery joining that in a little while

101
00:04:49,230 --> 00:04:56,370
Martin I'm sorry hackathon was that not

102
00:04:54,630 --> 00:04:58,170
the first hackathon discussion was not

103
00:04:56,370 --> 00:04:59,670
the first thing oh I'm sorry yes uh

104
00:04:58,170 --> 00:05:01,200
hackathon would you well

105
00:04:59,670 --> 00:05:03,030
now that you're at the mic why don't you

106
00:05:01,200 --> 00:05:06,420
summarize for us yeah can you call it

107
00:05:03,030 --> 00:05:08,159
the matrix if not doesn't really matter

108
00:05:06,420 --> 00:05:11,040
so I think we had seven clients in

109
00:05:08,160 --> 00:05:14,040
eleven servers participating it was

110
00:05:11,040 --> 00:05:15,300
worse than usual participation wise I

111
00:05:14,040 --> 00:05:18,390
think part of it was just attendance at

112
00:05:15,300 --> 00:05:21,120
Singapore and part of it was a draft 24

113
00:05:18,390 --> 00:05:23,729
dropped a couple weeks ago and I want to

114
00:05:21,120 --> 00:05:26,370
say there may be three or four teams

115
00:05:23,730 --> 00:05:28,680
that were not ready to go other than

116
00:05:26,370 --> 00:05:31,620
that I think draft 24 is fairly Interop

117
00:05:28,680 --> 00:05:33,780
was fairly successful the same things

118
00:05:31,620 --> 00:05:35,490
are continuing and that the basic

119
00:05:33,780 --> 00:05:39,179
protocol functionality is in pretty good

120
00:05:35,490 --> 00:05:40,800
shape there are a few implementations

121
00:05:39,180 --> 00:05:43,530
that are doing the mostly advanced

122
00:05:40,800 --> 00:05:45,540
mobility stuff and there are a few

123
00:05:43,530 --> 00:05:48,690
implementations are doing the fancy HTTP

124
00:05:45,540 --> 00:05:58,410
three bits like push but really not as

125
00:05:48,690 --> 00:06:01,410
many as I think we'd like to see other

126
00:05:58,410 --> 00:06:03,030
things going on which David just really

127
00:06:01,410 --> 00:06:04,740
quickly there are also some

128
00:06:03,030 --> 00:06:06,960
implementations doing intro up on the

129
00:06:04,740 --> 00:06:08,190
Datagram extension so that's also

130
00:06:06,960 --> 00:06:10,140
happening like our extension mechanism

131
00:06:08,190 --> 00:06:12,060
is working yay

132
00:06:10,140 --> 00:06:18,690
and I'm David's Ignasi from Google

133
00:06:12,060 --> 00:06:20,480
Chrome a quick word there are a number

134
00:06:18,690 --> 00:06:23,480
of implementations since the interim

135
00:06:20,480 --> 00:06:25,680
number of implementations have also now

136
00:06:23,480 --> 00:06:29,040
come in to the quick interrupt runner

137
00:06:25,680 --> 00:06:30,600
that we've been building and I think

138
00:06:29,040 --> 00:06:33,060
skin Ozzie said that maybe this week

139
00:06:30,600 --> 00:06:35,240
chromium will also be in there so we'll

140
00:06:33,060 --> 00:06:35,240
see

141
00:06:35,889 --> 00:06:38,379
I think we talked about this before but

142
00:06:37,000 --> 00:06:40,750
if you want I'll get hub reco for that

143
00:06:38,379 --> 00:06:45,219
in the working group organization talk

144
00:06:40,750 --> 00:06:47,439
to us sorry but since Jonna put words in

145
00:06:45,219 --> 00:06:51,939
my mouth I did not say that and we have

146
00:06:47,439 --> 00:06:53,409
not committed to that yet actually while

147
00:06:51,939 --> 00:06:56,650
we're talking about more general things

148
00:06:53,409 --> 00:06:59,050
one more reminder we have a an interim

149
00:06:56,650 --> 00:07:00,188
meeting scheduled in early February in

150
00:06:59,050 --> 00:07:01,900
Zurich

151
00:07:00,189 --> 00:07:03,099
so that was announced on the list if you

152
00:07:01,900 --> 00:07:06,099
haven't registered for that you want to

153
00:07:03,099 --> 00:07:07,090
come please do so soon so we can plan to

154
00:07:06,099 --> 00:07:07,210
make sure we have the right facilities

155
00:07:07,090 --> 00:07:09,840
available

156
00:07:07,210 --> 00:07:14,188
[Music]

157
00:07:09,840 --> 00:07:17,799
any other discussion on hackathon okay

158
00:07:14,189 --> 00:07:20,529
so on two issues let's start with the

159
00:07:17,800 --> 00:07:22,090
transport and TLS issues and as you can

160
00:07:20,529 --> 00:07:24,009
see we have a few issues in triage we'll

161
00:07:22,090 --> 00:07:26,770
touch on those in a little while the

162
00:07:24,009 --> 00:07:28,029
editors have 27 issues that they still

163
00:07:26,770 --> 00:07:30,580
need to address I think last time we

164
00:07:28,029 --> 00:07:33,520
looked at this was about 39 or so so

165
00:07:30,580 --> 00:07:35,979
they're making some progress and design

166
00:07:33,520 --> 00:07:38,469
issues we have 12 left here that we've

167
00:07:35,979 --> 00:07:44,370
decided our design issues so let's go

168
00:07:38,469 --> 00:07:44,370
ahead and go through those first up

169
00:07:45,089 --> 00:07:50,979
issue 2792 yes we're getting near to

170
00:07:48,669 --> 00:07:53,349
$0.03 more than 3,000 issues yeah timing

171
00:07:50,979 --> 00:07:58,990
side channels on key updates yeah this

172
00:07:53,349 --> 00:08:02,020
is we discussed this in Montreal so as I

173
00:07:58,990 --> 00:08:03,190
understand it the they say can produce a

174
00:08:02,020 --> 00:08:09,909
fair representation in the distribution

175
00:08:03,190 --> 00:08:12,159
which is that say you receive a a your

176
00:08:09,909 --> 00:08:15,310
in key phase 0 and you receive a packet

177
00:08:12,159 --> 00:08:17,680
and key phase 1 it feel free to write me

178
00:08:15,310 --> 00:08:19,180
anytime Martin if I'm sorry which

179
00:08:17,680 --> 00:08:23,020
normally normally is key phase 1 thank

180
00:08:19,180 --> 00:08:25,060
you um now um so on if it's a valid key

181
00:08:23,020 --> 00:08:26,710
phase 1 packet you're supposed to um you

182
00:08:25,060 --> 00:08:28,779
know you're supposed to basically on

183
00:08:26,710 --> 00:08:30,789
help get your honky right but if it's an

184
00:08:28,779 --> 00:08:32,049
invalid keep it you know fact that you

185
00:08:30,789 --> 00:08:37,269
know they don't have to be shut the ball

186
00:08:32,049 --> 00:08:40,059
and so the on the observation here is if

187
00:08:37,269 --> 00:08:42,789
I understand correctly that because the

188
00:08:40,059 --> 00:08:46,479
on key phase bits themselves are not a a

189
00:08:42,789 --> 00:08:47,350
deed prior to packet decryption um that

190
00:08:46,480 --> 00:08:49,040
that is to say there's not an

191
00:08:47,350 --> 00:08:50,630
independent zone

192
00:08:49,040 --> 00:08:53,120
integrity check for the key phase bitch

193
00:08:50,630 --> 00:08:54,949
um then an attacker can flip that bit

194
00:08:53,120 --> 00:08:57,920
and thus causes you to do whatever

195
00:08:54,949 --> 00:08:59,990
processing you would have done um for um

196
00:08:57,920 --> 00:09:01,430
the new packet and then use a washer

197
00:08:59,990 --> 00:09:02,449
this is bogus because that because it is

198
00:09:01,430 --> 00:09:07,430
under integrity checking you drop it

199
00:09:02,449 --> 00:09:11,689
right and the um so I'm so far so good

200
00:09:07,430 --> 00:09:15,319
Martin um right and so um as I

201
00:09:11,690 --> 00:09:17,750
understand it the there is some theory

202
00:09:15,319 --> 00:09:19,639
that given implementation strategies for

203
00:09:17,750 --> 00:09:23,000
doing this an attacker might be able to

204
00:09:19,639 --> 00:09:27,319
probe what key phase you are in because

205
00:09:23,000 --> 00:09:29,839
if you um if you so this point part

206
00:09:27,319 --> 00:09:31,790
right it's all complicated but if you

207
00:09:29,839 --> 00:09:33,649
compute the new keys only at the time

208
00:09:31,790 --> 00:09:35,329
when you're the parent key phase change

209
00:09:33,649 --> 00:09:36,889
the attacker regularly measure the time

210
00:09:35,329 --> 00:09:39,979
that you do that in some unspecified

211
00:09:36,889 --> 00:09:41,600
fashion um the UM

212
00:09:39,980 --> 00:09:44,329
again I think this is all relative of

213
00:09:41,600 --> 00:09:45,589
consensus um um I have not like seen

214
00:09:44,329 --> 00:09:49,279
like a really clear definition of how

215
00:09:45,589 --> 00:09:51,980
this would work but on the specification

216
00:09:49,279 --> 00:09:53,959
then says in order to print this you

217
00:09:51,980 --> 00:09:55,100
want to like pre-compute thank you a

218
00:09:53,959 --> 00:09:56,779
bunch of keys on a particular schedule

219
00:09:55,100 --> 00:09:58,699
so the like you won't have this happen

220
00:09:56,779 --> 00:10:00,560
um this is the proton complaining about

221
00:09:58,699 --> 00:10:08,660
I just like this should to be a May and

222
00:10:00,560 --> 00:10:12,680
I will shut up so just to expand on that

223
00:10:08,660 --> 00:10:15,860
I think because summary was good the

224
00:10:12,680 --> 00:10:18,380
dirt the draft currently says should do

225
00:10:15,860 --> 00:10:22,069
that and echo is arguing for a May I

226
00:10:18,380 --> 00:10:24,079
don't care on this particular one the

227
00:10:22,069 --> 00:10:26,689
the point here was to make sure that it

228
00:10:24,079 --> 00:10:29,930
was understood what the properties of

229
00:10:26,690 --> 00:10:31,399
the system were and that the mitigation

230
00:10:29,930 --> 00:10:33,589
was also understood and the cost of that

231
00:10:31,399 --> 00:10:36,079
were understood and I think that it may

232
00:10:33,589 --> 00:10:37,579
is perfectly adequate in this case I've

233
00:10:36,079 --> 00:10:40,099
noted that a couple of people just

234
00:10:37,579 --> 00:10:41,719
simply generate the new keys in line

235
00:10:40,100 --> 00:10:44,480
when they're doing this processing and

236
00:10:41,720 --> 00:10:46,880
just accept the fact that that creates a

237
00:10:44,480 --> 00:10:49,100
potential time inside channel and that's

238
00:10:46,880 --> 00:10:51,170
fine and the question is whether we

239
00:10:49,100 --> 00:10:53,120
recommend that they don't do that or

240
00:10:51,170 --> 00:10:55,670
whether they we just say if you're

241
00:10:53,120 --> 00:10:56,899
concerned about this then you might want

242
00:10:55,670 --> 00:10:59,899
to do this and that's really the line

243
00:10:56,899 --> 00:11:01,250
we're sitting on so so echo your

244
00:10:59,899 --> 00:11:02,680
proposal is just to change it should ii

245
00:11:01,250 --> 00:11:06,500
am a and we're done

246
00:11:02,680 --> 00:11:10,130
does anyone object to that process I

247
00:11:06,500 --> 00:11:11,680
will create a PR when I sit back down so

248
00:11:10,130 --> 00:11:15,560
there's there's a there's a should

249
00:11:11,680 --> 00:11:19,040
recommending around recommending pre

250
00:11:15,560 --> 00:11:22,459
generation of the next phase of keys so

251
00:11:19,040 --> 00:11:24,920
that you don't lick this signal and so

252
00:11:22,459 --> 00:11:26,689
this will simply make this a may and I

253
00:11:24,920 --> 00:11:30,199
think it's appropriate because a lot of

254
00:11:26,690 --> 00:11:33,410
the other aspects of this very much

255
00:11:30,199 --> 00:11:36,500
advisory so that's consistent with that

256
00:11:33,410 --> 00:11:42,829
there's no Interop effect for this this

257
00:11:36,500 --> 00:11:44,779
is a security question well Mike Bishop

258
00:11:42,829 --> 00:11:46,939
asks off mic use their entry any

259
00:11:44,779 --> 00:11:50,240
interrupt consequences therefore why do

260
00:11:46,940 --> 00:11:52,339
we use 2119 language I think the answer

261
00:11:50,240 --> 00:11:54,230
there is generally that we do that for a

262
00:11:52,339 --> 00:11:58,730
lot of security related things yes so

263
00:11:54,230 --> 00:12:00,800
it's appropriate to do that but I think

264
00:11:58,730 --> 00:12:03,560
the the general feeling is that people

265
00:12:00,800 --> 00:12:06,229
are comfortable to varying extents with

266
00:12:03,560 --> 00:12:08,290
this side channel and should be making

267
00:12:06,230 --> 00:12:10,699
their own decisions okay

268
00:12:08,290 --> 00:12:12,769
general got a quick question Martin I

269
00:12:10,699 --> 00:12:15,170
haven't seen this text but as their text

270
00:12:12,769 --> 00:12:16,910
around it which which which talks about

271
00:12:15,170 --> 00:12:18,889
the timing attack itself the timing side

272
00:12:16,910 --> 00:12:20,389
channel so as long as that's there II am

273
00:12:18,889 --> 00:12:22,490
I think it's perfectly reasonable to do

274
00:12:20,389 --> 00:12:27,620
on me okay

275
00:12:22,490 --> 00:12:33,649
does this capture the way forward okay

276
00:12:27,620 --> 00:12:36,279
thank you next up and that's already

277
00:12:33,649 --> 00:12:37,690
assigned to you three so that's good

278
00:12:36,279 --> 00:12:41,899
excuse me

279
00:12:37,690 --> 00:12:47,990
where's version ossification our old old

280
00:12:41,899 --> 00:12:54,139
friend 31 11 where are we at with this

281
00:12:47,990 --> 00:12:57,769
it is not assigned to anyone and we

282
00:12:54,139 --> 00:13:01,100
don't have a PR yet so my put on the

283
00:12:57,769 --> 00:13:03,980
list always that we should defer this it

284
00:13:01,100 --> 00:13:05,449
seemed in Montreal like there might be a

285
00:13:03,980 --> 00:13:06,709
sweet spot in the space that we could

286
00:13:05,449 --> 00:13:12,260
cut out that we doable

287
00:13:06,709 --> 00:13:15,199
I feel like later later later discussion

288
00:13:12,260 --> 00:13:15,580
has has called that question and it's

289
00:13:15,199 --> 00:13:21,310
now

290
00:13:15,580 --> 00:13:24,580
we complicated um um so the the thesis I

291
00:13:21,310 --> 00:13:26,229
think the there so I think there are so

292
00:13:24,580 --> 00:13:28,270
I want to make to I like to points um

293
00:13:26,230 --> 00:13:29,350
the first point is this looks like it's

294
00:13:28,270 --> 00:13:31,150
gonna be kind of easy and now it's

295
00:13:29,350 --> 00:13:32,410
looking like a lot less easy on that may

296
00:13:31,150 --> 00:13:35,380
be requirements creep but I think it's

297
00:13:32,410 --> 00:13:38,319
also like um scope like like creeper

298
00:13:35,380 --> 00:13:43,270
understand the problem better um um the

299
00:13:38,320 --> 00:13:45,670
UM and the second point is that I did

300
00:13:43,270 --> 00:13:47,350
the tunt that I think we have more time

301
00:13:45,670 --> 00:13:48,520
to do this than I think perhaps thought

302
00:13:47,350 --> 00:13:49,840
we did in the sense that we're gonna

303
00:13:48,520 --> 00:13:52,540
have like a real to long period of

304
00:13:49,840 --> 00:13:54,760
overlap between the draft versions and

305
00:13:52,540 --> 00:13:55,839
the release version and I know like I

306
00:13:54,760 --> 00:13:57,010
was talking to Ian who's saying that

307
00:13:55,840 --> 00:13:58,480
like they planned experiment with like

308
00:13:57,010 --> 00:14:00,819
you know new verses relatively

309
00:13:58,480 --> 00:14:02,590
aggressively so I that the corresponding

310
00:14:00,820 --> 00:14:05,740
risk of actual ossification seems like

311
00:14:02,590 --> 00:14:07,510
compared awfully less high um so I think

312
00:14:05,740 --> 00:14:09,160
like this gives us a little time to work

313
00:14:07,510 --> 00:14:10,300
on the problem and I'm worried it's

314
00:14:09,160 --> 00:14:13,360
actually holding you know actually hold

315
00:14:10,300 --> 00:14:15,250
what could be one um and it seems like

316
00:14:13,360 --> 00:14:16,270
you know if we had so I guess my - I put

317
00:14:15,250 --> 00:14:18,040
on this if we have light if we like

318
00:14:16,270 --> 00:14:20,260
solve this problem you know indeed like

319
00:14:18,040 --> 00:14:22,180
six months six to nine month period well

320
00:14:20,260 --> 00:14:24,160
um you know while we're doing my test

321
00:14:22,180 --> 00:14:25,630
deployments um people could turn their

322
00:14:24,160 --> 00:14:27,430
attention to that it was perfectly it's

323
00:14:25,630 --> 00:14:28,689
perfectly fine as an extension um so

324
00:14:27,430 --> 00:14:30,939
like let us use that mechanism that was

325
00:14:28,690 --> 00:14:32,230
my put um I I personally find it

326
00:14:30,940 --> 00:14:33,160
fascinating I'm happy to work on it but

327
00:14:32,230 --> 00:14:35,680
I'm trying to like think about the

328
00:14:33,160 --> 00:14:36,910
bigger picture so your proposals to not

329
00:14:35,680 --> 00:14:42,849
put this in scope for quick view one

330
00:14:36,910 --> 00:14:45,370
that's correct okay Mike Bishop Akamai I

331
00:14:42,850 --> 00:14:47,410
will say that part of why we want to

332
00:14:45,370 --> 00:14:51,520
pull the version negotiation discussion

333
00:14:47,410 --> 00:14:53,319
out of as time permits is that going

334
00:14:51,520 --> 00:14:55,569
through discussion of this it has become

335
00:14:53,320 --> 00:14:58,060
clear we don't really want to do this

336
00:14:55,570 --> 00:15:03,100
without some idea of how you detect fall

337
00:14:58,060 --> 00:15:05,920
back and react to that and that is work

338
00:15:03,100 --> 00:15:08,230
we've already decided to scope out so I

339
00:15:05,920 --> 00:15:10,209
think we either have to adjust our scope

340
00:15:08,230 --> 00:15:12,970
to include that work and be one or we

341
00:15:10,210 --> 00:15:14,380
have to push this out of v1 the midpoint

342
00:15:12,970 --> 00:15:15,940
just does not work so you'd be fine with

343
00:15:14,380 --> 00:15:23,410
that Chris proposal I think that's

344
00:15:15,940 --> 00:15:25,840
reasonable okay what's worse there's the

345
00:15:23,410 --> 00:15:27,790
poor twist that says may be fixed by

346
00:15:25,840 --> 00:15:28,820
thing I mean if you look at the kata

347
00:15:27,790 --> 00:15:32,569
page

348
00:15:28,820 --> 00:15:35,720
yep but English ah well for this

349
00:15:32,570 --> 00:15:38,630
approach to walk I mean the server needs

350
00:15:35,720 --> 00:15:41,330
to remember the keys the alternatives

351
00:15:38,630 --> 00:15:43,370
that as I said but that means that it

352
00:15:41,330 --> 00:15:46,190
doesn't work for multi CDN use case

353
00:15:43,370 --> 00:15:49,850
which in turn means that it work only

354
00:15:46,190 --> 00:15:51,590
for the large-scale providers I mean one

355
00:15:49,850 --> 00:15:54,050
of the largest care providers that home

356
00:15:51,590 --> 00:15:56,020
both the client and the server into

357
00:15:54,050 --> 00:15:59,680
using this mechanism but it seems that

358
00:15:56,020 --> 00:16:02,660
there's not much possibility in that so

359
00:15:59,680 --> 00:16:04,880
as a conclusion I think we can put this

360
00:16:02,660 --> 00:16:08,750
to you budget or something so you agree

361
00:16:04,880 --> 00:16:09,770
you're ok with Decker ok it's a long

362
00:16:08,750 --> 00:16:14,240
queue for people who agree with that

363
00:16:09,770 --> 00:16:18,160
connects interesting David Scott yeah

364
00:16:14,240 --> 00:16:22,820
it's there's David Skinner's Igor Chrome

365
00:16:18,160 --> 00:16:25,010
so I agree with that curve as well and

366
00:16:22,820 --> 00:16:27,440
in particular if this becomes an

367
00:16:25,010 --> 00:16:28,880
extension we're starting to pile up a

368
00:16:27,440 --> 00:16:32,480
list of drafts that are coming up that's

369
00:16:28,880 --> 00:16:33,980
a great thing and since the goal here is

370
00:16:32,480 --> 00:16:35,840
to prevent someone from building a

371
00:16:33,980 --> 00:16:38,240
middle box that only lets some versions

372
00:16:35,840 --> 00:16:40,700
of quick through and not others we can

373
00:16:38,240 --> 00:16:43,700
establish this by only having a couple p

374
00:16:40,700 --> 00:16:45,290
large providers deploy it so I just

375
00:16:43,700 --> 00:16:47,030
wanted to say that the odds of Google

376
00:16:45,290 --> 00:16:49,939
deploying this on our servers are pretty

377
00:16:47,030 --> 00:16:51,949
high so even if this is an extension I

378
00:16:49,940 --> 00:16:53,420
think it'll get its job done to make

379
00:16:51,950 --> 00:16:57,500
sure the version of quick doesn't get

380
00:16:53,420 --> 00:16:59,150
ossified right away and so what Google

381
00:16:57,500 --> 00:17:00,320
yeah I also agree with that Kurt but I

382
00:16:59,150 --> 00:17:02,180
also want a second

383
00:17:00,320 --> 00:17:04,340
the other comment about version

384
00:17:02,180 --> 00:17:05,839
negotiation and I think pulling this in

385
00:17:04,339 --> 00:17:08,270
without really having a clear solution

386
00:17:05,839 --> 00:17:12,819
to that is gonna be like a disaster so

387
00:17:08,270 --> 00:17:12,819
and I really don't want to pull in both

388
00:17:13,359 --> 00:17:17,869
German gonna happen to be part of the

389
00:17:15,440 --> 00:17:22,400
long queue that happens to agree with I

390
00:17:17,869 --> 00:17:24,409
could I'll say that one thing that I

391
00:17:22,400 --> 00:17:26,090
wanted to bring up here and it this

392
00:17:24,410 --> 00:17:29,990
might apply to other issues we may

393
00:17:26,089 --> 00:17:32,480
encounter today as well there is I'm

394
00:17:29,990 --> 00:17:34,580
hearing some amount of fatigue start to

395
00:17:32,480 --> 00:17:37,130
show among implementers and various folk

396
00:17:34,580 --> 00:17:38,960
who are starting to wonder when we are

397
00:17:37,130 --> 00:17:41,960
actually going to ship I've heard this

398
00:17:38,960 --> 00:17:45,350
before but I'm starting to see again

399
00:17:41,960 --> 00:17:47,390
arise in that concern and it's

400
00:17:45,350 --> 00:17:48,949
legitimate it's completely reasonable we

401
00:17:47,390 --> 00:17:50,419
were hoping to have some things done by

402
00:17:48,950 --> 00:17:52,640
the end of this year and we aren't and

403
00:17:50,419 --> 00:17:55,610
so we're sort of passing on the deadline

404
00:17:52,640 --> 00:17:58,429
and moving forward so in the interest of

405
00:17:55,610 --> 00:17:59,750
moving forward I think we should we

406
00:17:58,429 --> 00:18:02,330
should put this aside

407
00:17:59,750 --> 00:18:05,330
Martin Duke I think was wanting to

408
00:18:02,330 --> 00:18:08,570
popularize the term sidecar this is a

409
00:18:05,330 --> 00:18:10,309
great he's behind me yeah chuckling this

410
00:18:08,570 --> 00:18:12,049
is exactly the kind of stuff that we can

411
00:18:10,309 --> 00:18:14,330
put on the sidecar and sort of have it

412
00:18:12,049 --> 00:18:16,490
done soon after we've shipped and there

413
00:18:14,330 --> 00:18:18,860
will be other ones that might be similar

414
00:18:16,490 --> 00:18:20,720
as well but yeah in general I agree and

415
00:18:18,860 --> 00:18:27,830
I think we should really be focused on

416
00:18:20,720 --> 00:18:30,820
trying to ship protocol apps is my

417
00:18:27,830 --> 00:18:33,860
please I just wanted to point out that

418
00:18:30,820 --> 00:18:35,928
just having just deploying different

419
00:18:33,860 --> 00:18:39,168
versions of quick might not be enough to

420
00:18:35,929 --> 00:18:41,330
prevent ossification if the middle box

421
00:18:39,169 --> 00:18:43,789
is now hard to decode all those versions

422
00:18:41,330 --> 00:18:45,678
so there's the the risk that middle

423
00:18:43,789 --> 00:18:47,539
boxes will happily let everything

424
00:18:45,679 --> 00:18:48,950
through that they understand but block

425
00:18:47,539 --> 00:18:50,600
everything that they don't understand

426
00:18:48,950 --> 00:18:53,270
and for that reason we need to deploy a

427
00:18:50,600 --> 00:18:56,629
version where middle boxes can decrypt

428
00:18:53,270 --> 00:18:59,720
the initial packet that being said an

429
00:18:56,630 --> 00:19:01,760
extension would also be a perfectly

430
00:18:59,720 --> 00:19:08,840
valid solution for this problem so I'm

431
00:19:01,760 --> 00:19:10,610
okay with taking this out of vp1 Martin

432
00:19:08,840 --> 00:19:11,870
Duke I think it's fine as long as as

433
00:19:10,610 --> 00:19:14,418
Johnna said we put it in the sidecar

434
00:19:11,870 --> 00:19:17,299
with quick OB and HTTP priorities and

435
00:19:14,419 --> 00:19:20,870
the other stuff that didn't happen very

436
00:19:17,299 --> 00:19:22,850
very soon after v1 okay so it seems like

437
00:19:20,870 --> 00:19:24,289
we have a pretty good group of people

438
00:19:22,850 --> 00:19:26,779
who think we can do this as an extension

439
00:19:24,289 --> 00:19:29,360
so we'll talk a little bit tomorrow

440
00:19:26,779 --> 00:19:30,679
about how we're gonna go about doing

441
00:19:29,360 --> 00:19:33,620
extensions and that's that's another

442
00:19:30,679 --> 00:19:35,890
discussion but I think that's the

443
00:19:33,620 --> 00:19:35,889
proposal

444
00:19:44,430 --> 00:19:47,420
yep

445
00:19:49,250 --> 00:19:57,600
all right Martin you had a it's okay

446
00:19:54,780 --> 00:20:01,560
okay he's already moved on you can tag

447
00:19:57,600 --> 00:20:03,600
that quickly - it's all right I can do

448
00:20:01,560 --> 00:20:05,129
that that don't work and we have another

449
00:20:03,600 --> 00:20:13,530
version ossification no that's the same

450
00:20:05,130 --> 00:20:15,660
the same one same same okay I think this

451
00:20:13,530 --> 00:20:18,860
is closed with no action or quickly too

452
00:20:15,660 --> 00:20:18,860
close done

453
00:20:25,540 --> 00:20:37,790
yep so this is an interesting

454
00:20:35,540 --> 00:20:39,920
observation that eka made doing the

455
00:20:37,790 --> 00:20:42,710
review of some of the related work that

456
00:20:39,920 --> 00:20:44,420
we're doing the document currently

457
00:20:42,710 --> 00:20:47,660
prohibits the use of key updates until

458
00:20:44,420 --> 00:20:52,570
the handshake is confirmed but in

459
00:20:47,660 --> 00:20:55,790
practice the first key update can occur

460
00:20:52,570 --> 00:21:00,530
immediately as soon as you have one RCT

461
00:20:55,790 --> 00:21:02,420
keys I think this this is true but we

462
00:21:00,530 --> 00:21:05,889
could still decide to wait for

463
00:21:02,420 --> 00:21:11,930
confirmation before allowing key updates

464
00:21:05,890 --> 00:21:14,390
discuss kahoku I'd like to point out

465
00:21:11,930 --> 00:21:17,660
that there's actually application key

466
00:21:14,390 --> 00:21:21,380
that precedes one our duty which is v-0

467
00:21:17,660 --> 00:21:23,510
T to get from the client site so it

468
00:21:21,380 --> 00:21:26,090
makes sense to also have confirmation

469
00:21:23,510 --> 00:21:29,629
for the first I are one now treaty key

470
00:21:26,090 --> 00:21:34,070
being used because it gives us the time

471
00:21:29,630 --> 00:21:37,040
to retire the 0.5 key without that heel

472
00:21:34,070 --> 00:21:39,260
pocket Ryota enclosing a book or

473
00:21:37,040 --> 00:21:44,180
something I mean the whole musty

474
00:21:39,260 --> 00:21:46,970
relation Eric rajala on so actually I

475
00:21:44,180 --> 00:21:48,590
think on Martin is correctly channeling

476
00:21:46,970 --> 00:21:52,190
something I said but that's not what

477
00:21:48,590 --> 00:21:56,090
this says um I don't think um namely um

478
00:21:52,190 --> 00:21:57,560
what this says is that the that the text

479
00:21:56,090 --> 00:22:00,139
in the specification is redundant

480
00:21:57,560 --> 00:22:03,020
because you cannot have handshake

481
00:22:00,140 --> 00:22:05,780
confirmed that basically assume that

482
00:22:03,020 --> 00:22:06,830
that could point to here on once you

483
00:22:05,780 --> 00:22:09,260
receive knowledge and practice it with

484
00:22:06,830 --> 00:22:10,820
ease implies handshake confirmed and

485
00:22:09,260 --> 00:22:12,980
therefore both tests are not needed in

486
00:22:10,820 --> 00:22:14,659
the specification where it says so um so

487
00:22:12,980 --> 00:22:15,890
that that is not a design change that's

488
00:22:14,660 --> 00:22:19,400
merely this but it's really a text

489
00:22:15,890 --> 00:22:20,510
change um um so and I think now now

490
00:22:19,400 --> 00:22:22,340
maybe I'm wrong about that which I'd

491
00:22:20,510 --> 00:22:23,900
like to be corrected but this was not

492
00:22:22,340 --> 00:22:26,000
intended to be this is intended only be

493
00:22:23,900 --> 00:22:28,820
a textual change um to make life simpler

494
00:22:26,000 --> 00:22:30,350
um now it may be the case that if we

495
00:22:28,820 --> 00:22:33,139
take there may be the case that once the

496
00:22:30,350 --> 00:22:34,669
handshake done patch comes in at that my

497
00:22:33,140 --> 00:22:35,930
statement here is no longer true which

498
00:22:34,670 --> 00:22:37,700
officials revisit that so I suggest we

499
00:22:35,930 --> 00:22:39,110
hold off on this particularly shoot well

500
00:22:37,700 --> 00:22:40,279
after we resolve the key

501
00:22:39,110 --> 00:22:42,769
change issue and then we could just

502
00:22:40,279 --> 00:22:44,090
discuss it privately um if I'm right

503
00:22:42,769 --> 00:22:46,789
then this is an editorial issue if I'm

504
00:22:44,090 --> 00:22:49,490
wrong then like we can it's a non-issue

505
00:22:46,789 --> 00:22:51,470
there's a bigger discussion on so that

506
00:22:49,490 --> 00:22:53,809
said Martin is separately making a point

507
00:22:51,470 --> 00:22:55,730
which I do agree with which is we could

508
00:22:53,809 --> 00:22:58,428
have laksa rules about when campus were

509
00:22:55,730 --> 00:23:01,700
permitted the on the purpose of the key

510
00:22:58,429 --> 00:23:03,529
update rules recall is um is to remove

511
00:23:01,700 --> 00:23:05,600
the ambiguity introduced by the fact

512
00:23:03,529 --> 00:23:07,640
that we only have that we have only have

513
00:23:05,600 --> 00:23:09,740
one bit for indicating key phase and so

514
00:23:07,640 --> 00:23:12,440
you need to arrange that you need to

515
00:23:09,740 --> 00:23:13,760
arrange the state such that you know so

516
00:23:12,440 --> 00:23:15,620
that when the person receives the OP

517
00:23:13,760 --> 00:23:17,480
that inverted key phase though there

518
00:23:15,620 --> 00:23:19,879
what are they referring to you right um

519
00:23:17,480 --> 00:23:21,590
and that's the purpose of the rules as

520
00:23:19,880 --> 00:23:22,460
opposed to um that's like why for

521
00:23:21,590 --> 00:23:23,480
instance like tell us one more three

522
00:23:22,460 --> 00:23:26,269
laws like an infant number key updates

523
00:23:23,480 --> 00:23:28,250
in in the phase on because um there's no

524
00:23:26,269 --> 00:23:29,510
there's no way to get it wrong right um

525
00:23:28,250 --> 00:23:36,500
in the same things actually

526
00:23:29,510 --> 00:23:38,269
so the on so the on you can as soon as

527
00:23:36,500 --> 00:23:38,750
you know you can send one or key key

528
00:23:38,269 --> 00:23:41,120
keys

529
00:23:38,750 --> 00:23:43,760
I see how the one key keys to send you

530
00:23:41,120 --> 00:23:45,320
could send a the next phase because you

531
00:23:43,760 --> 00:23:46,580
know the either of the these other side

532
00:23:45,320 --> 00:23:49,789
is ready or it's not but it can't be

533
00:23:46,580 --> 00:23:51,350
confused and so that so I think if we

534
00:23:49,789 --> 00:23:53,658
wanted to relax that where we could but

535
00:23:51,350 --> 00:23:55,309
um I'm also not like if I could go to

536
00:23:53,659 --> 00:24:01,100
the mat for that but this was only

537
00:23:55,309 --> 00:24:02,928
intended to be okay so we if it is an

538
00:24:01,100 --> 00:24:05,689
interior point will not belabor that too

539
00:24:02,929 --> 00:24:06,889
much but my opinion if it is not an

540
00:24:05,690 --> 00:24:08,899
eighty-year-old point we should wait

541
00:24:06,889 --> 00:24:11,809
until we have disposed of the uncheck

542
00:24:08,899 --> 00:24:20,899
burning issue and then we visit it sure

543
00:24:11,809 --> 00:24:34,389
let's do okay next up that shouldn't be

544
00:24:20,899 --> 00:24:34,389
there defer okay

545
00:24:38,080 --> 00:25:03,310
this one so we talked about this pretty

546
00:24:42,490 --> 00:25:04,510
extensively in Cupertino 3020 transport

547
00:25:03,310 --> 00:25:07,450
parameter registry is too constraining

548
00:25:04,510 --> 00:25:16,780
for innovation so this was assigned to

549
00:25:07,450 --> 00:25:20,730
David we give us an update so David's

550
00:25:16,780 --> 00:25:26,530
gonna see Google Chrome the current spec

551
00:25:20,730 --> 00:25:29,590
has most of the are transformer or let

552
00:25:26,530 --> 00:25:32,590
me read let me start yet our main joint

553
00:25:29,590 --> 00:25:33,699
for extensibility in quick is transport

554
00:25:32,590 --> 00:25:37,500
parameters

555
00:25:33,700 --> 00:25:39,970
those are governed by a 16-bit space and

556
00:25:37,500 --> 00:25:43,540
which is covered by an ion our registry

557
00:25:39,970 --> 00:25:47,440
and in the current text almost all of

558
00:25:43,540 --> 00:25:49,330
that is specification required and there

559
00:25:47,440 --> 00:25:51,820
are cases for folks who have like

560
00:25:49,330 --> 00:25:53,340
private extensions that illness they

561
00:25:51,820 --> 00:25:56,220
don't necessarily want a document where

562
00:25:53,340 --> 00:26:02,649
they want to be able to get a code point

563
00:25:56,220 --> 00:26:07,630
without writing an entire spec so today

564
00:26:02,650 --> 00:26:09,610
that space is so tight that people might

565
00:26:07,630 --> 00:26:12,490
end up just either squatting on some

566
00:26:09,610 --> 00:26:16,360
space or which would could cause

567
00:26:12,490 --> 00:26:20,560
collisions so the correct fix is to do

568
00:26:16,360 --> 00:26:24,490
something to the registry and Martin has

569
00:26:20,560 --> 00:26:27,480
APR on how we can do that just by

570
00:26:24,490 --> 00:26:30,310
changing the rules it includes both

571
00:26:27,480 --> 00:26:33,580
permanent registrations and provisional

572
00:26:30,310 --> 00:26:37,090
registrations and I think that solves

573
00:26:33,580 --> 00:26:38,980
the issue nicely so so far like there's

574
00:26:37,090 --> 00:26:41,860
been a that discussion kind of landed in

575
00:26:38,980 --> 00:26:45,240
part on Martin's PR but I think we're in

576
00:26:41,860 --> 00:26:45,240
good shape there

577
00:26:48,250 --> 00:26:53,570
yeah so some Artin Thomson that that PR

578
00:26:51,410 --> 00:26:55,160
essentially says that provisional

579
00:26:53,570 --> 00:26:59,480
registrations can go anywhere in these

580
00:26:55,160 --> 00:27:01,940
spaces but establishes expert review for

581
00:26:59,480 --> 00:27:04,040
the entire space there's a bunch of

582
00:27:01,940 --> 00:27:05,480
advice on how this operates and and

583
00:27:04,040 --> 00:27:07,428
there are some rules about how we might

584
00:27:05,480 --> 00:27:10,100
reclaim provisional code points if we

585
00:27:07,429 --> 00:27:11,809
absolutely need to and and a bunch of

586
00:27:10,100 --> 00:27:14,149
other things like that that's a lot of

587
00:27:11,809 --> 00:27:15,980
text I don't want to really go into too

588
00:27:14,150 --> 00:27:18,559
much detail here about what that is but

589
00:27:15,980 --> 00:27:20,780
I want to encourage people to read it

590
00:27:18,559 --> 00:27:23,000
and understand it if you care about it

591
00:27:20,780 --> 00:27:25,820
so much that I expect most people want a

592
00:27:23,000 --> 00:27:29,059
high order bit David made a couple of

593
00:27:25,820 --> 00:27:30,980
PRS here ones editorial ones design you

594
00:27:29,059 --> 00:27:32,540
give some feedback here are you happy

595
00:27:30,980 --> 00:27:34,240
with the state of the ours now or do you

596
00:27:32,540 --> 00:27:39,260
still think we need to discuss it

597
00:27:34,240 --> 00:27:42,559
so the editorial PR 3108 was merged okay

598
00:27:39,260 --> 00:27:45,530
and the Ayanna policy one is superseded

599
00:27:42,559 --> 00:27:48,139
by the PR that we're talking about okay

600
00:27:45,530 --> 00:27:51,350
about now which is the I've seen seven

601
00:27:48,140 --> 00:27:52,690
this one here right and we've had some

602
00:27:51,350 --> 00:27:54,889
discussions on that one

603
00:27:52,690 --> 00:27:56,570
there's some finer points that we could

604
00:27:54,890 --> 00:27:58,160
continue just to discuss here but I

605
00:27:56,570 --> 00:27:59,629
think it's we're spending much more

606
00:27:58,160 --> 00:28:01,190
productive to do that on the list do you

607
00:27:59,630 --> 00:28:03,559
think we're close to getting a consensus

608
00:28:01,190 --> 00:28:05,059
on him I talked to David he seemed

609
00:28:03,559 --> 00:28:07,090
relatively happy with what we have

610
00:28:05,059 --> 00:28:09,740
I've talked to a number of people I

611
00:28:07,090 --> 00:28:11,990
think you've commented on it as well

612
00:28:09,740 --> 00:28:13,370
so that we can leave it to a little more

613
00:28:11,990 --> 00:28:14,690
discussion and then what did I would

614
00:28:13,370 --> 00:28:17,090
like to sense there's a call for

615
00:28:14,690 --> 00:28:17,570
consensus in the next batch if we okay

616
00:28:17,090 --> 00:28:19,370
we good

617
00:28:17,570 --> 00:28:20,540
great all right I don't think we need to

618
00:28:19,370 --> 00:28:21,649
spend much more time here so just to

619
00:28:20,540 --> 00:28:22,700
make sure I understand this they play

620
00:28:21,650 --> 00:28:25,610
provisional registrations are

621
00:28:22,700 --> 00:28:27,559
essentially free yeah yeah we just

622
00:28:25,610 --> 00:28:29,570
people who don't know um we actually

623
00:28:27,559 --> 00:28:32,750
just discovered it in like the last

624
00:28:29,570 --> 00:28:34,520
glass call at TLS that we that we had

625
00:28:32,750 --> 00:28:38,929
their working group universe on the same

626
00:28:34,520 --> 00:28:40,460
Co point to to UM do two drafts so so so

627
00:28:38,929 --> 00:28:42,260
yes I would really really like to have a

628
00:28:40,460 --> 00:28:43,190
registry where we did this so that we

629
00:28:42,260 --> 00:28:45,830
don't I mean like this wasn't even

630
00:28:43,190 --> 00:28:48,170
uncoordinated by exactly the same clowns

631
00:28:45,830 --> 00:28:48,980
but you might I mean me yeah that's

632
00:28:48,170 --> 00:28:54,040
never happened before

633
00:28:48,980 --> 00:28:54,040
okay alright that's good to hear

634
00:28:55,130 --> 00:28:59,360
I see people are being free with the

635
00:28:57,740 --> 00:29:05,120
labels again we should have a chat after

636
00:28:59,360 --> 00:29:09,469
the meeting the editors what's happened

637
00:29:05,120 --> 00:29:14,120
here editors are you editing the the

638
00:29:09,470 --> 00:29:21,919
board in real time because this changed

639
00:29:14,120 --> 00:29:23,270
very suddenly all right oh I see

640
00:29:21,919 --> 00:29:32,960
somebody's gone and added some labels

641
00:29:23,270 --> 00:29:35,289
when they shouldn't have just disk so

642
00:29:32,960 --> 00:29:35,289
here we are

643
00:29:37,510 --> 00:29:41,770
31:59 server should not accept one RTT

644
00:29:40,280 --> 00:29:49,850
traffic beforehand check completion

645
00:29:41,770 --> 00:29:52,789
Martin so Martin Thompson this really

646
00:29:49,850 --> 00:29:54,469
goes to the core of some of the design

647
00:29:52,789 --> 00:29:58,158
philosophy that we've had around the

648
00:29:54,470 --> 00:30:01,159
protocol one of the sort of things were

649
00:29:58,159 --> 00:30:03,470
tried to maintain in the design is if

650
00:30:01,159 --> 00:30:05,990
there's something we don't want someone

651
00:30:03,470 --> 00:30:09,620
to be able to do it should not be

652
00:30:05,990 --> 00:30:11,870
possible for them to do it unfortunately

653
00:30:09,620 --> 00:30:16,360
the way that TLS is structured the

654
00:30:11,870 --> 00:30:20,360
server can send and receive one RTT

655
00:30:16,360 --> 00:30:23,209
packets before it really should be and

656
00:30:20,360 --> 00:30:25,549
so in particular there were a number of

657
00:30:23,210 --> 00:30:28,700
implementations out there that were

658
00:30:25,549 --> 00:30:31,190
getting the one RTT secrets installing

659
00:30:28,700 --> 00:30:32,870
read keys and accepting those packets

660
00:30:31,190 --> 00:30:37,700
and even acknowledging them in some

661
00:30:32,870 --> 00:30:41,330
cases which is inadvisable the draft

662
00:30:37,700 --> 00:30:43,280
explicitly prohibits that but the

663
00:30:41,330 --> 00:30:45,139
question here and the long discussion

664
00:30:43,280 --> 00:30:47,200
that went into this was what sort of

665
00:30:45,140 --> 00:30:51,159
mechanisms can we put in place to

666
00:30:47,200 --> 00:30:54,770
actually prevent that from happening and

667
00:30:51,159 --> 00:30:56,330
the conclusion that I came to and I

668
00:30:54,770 --> 00:31:00,500
think some other people came to was that

669
00:30:56,330 --> 00:31:03,020
if we wanted to change TLS which is what

670
00:31:00,500 --> 00:31:05,270
would be required and our entire key

671
00:31:03,020 --> 00:31:06,918
schedule that's a really disruptive

672
00:31:05,270 --> 00:31:08,440
change and I would prefer to just

673
00:31:06,919 --> 00:31:10,090
strengthen the

674
00:31:08,440 --> 00:31:11,830
the normative force of this requirement

675
00:31:10,090 --> 00:31:15,790
not to read stuff that you shouldn't be

676
00:31:11,830 --> 00:31:19,730
reading in in this very narrow case so

677
00:31:15,790 --> 00:31:20,850
that's what this pull request proposes

678
00:31:19,730 --> 00:31:23,080
[Music]

679
00:31:20,850 --> 00:31:25,689
yeah that's the right place to come to

680
00:31:23,080 --> 00:31:30,580
on this so for context this is not an

681
00:31:25,690 --> 00:31:32,470
issue well this is the this is perhaps

682
00:31:30,580 --> 00:31:35,080
less of an issue and tell us because the

683
00:31:32,470 --> 00:31:36,220
ordered nature of the data I'm not

684
00:31:35,080 --> 00:31:40,629
saying it's actually I mean you could

685
00:31:36,220 --> 00:31:43,110
still make this mistake um but um I I

686
00:31:40,630 --> 00:31:45,100
guess I would make two observations one

687
00:31:43,110 --> 00:31:46,959
there are a number of other things in

688
00:31:45,100 --> 00:31:49,030
this area that one can do that we don't

689
00:31:46,960 --> 00:31:50,740
stop you so the example I give their day

690
00:31:49,030 --> 00:31:55,330
is we don't stop you from processing

691
00:31:50,740 --> 00:31:57,550
data frames in handshake packets like

692
00:31:55,330 --> 00:32:00,429
you can you better or not but we don't

693
00:31:57,550 --> 00:32:03,820
stop you right or an initial packets for

694
00:32:00,430 --> 00:32:05,380
that there's a wire including permits it

695
00:32:03,820 --> 00:32:09,639
therefore and therefore you have to

696
00:32:05,380 --> 00:32:11,530
actually filter right so um the so I

697
00:32:09,640 --> 00:32:12,700
don't think you know that this is a

698
00:32:11,530 --> 00:32:14,350
principle but it's one we perhaps

699
00:32:12,700 --> 00:32:17,170
respects unless I'm in other parts the

700
00:32:14,350 --> 00:32:19,689
time um the it'd be possible of course

701
00:32:17,170 --> 00:32:20,830
to make it impossible what the initial

702
00:32:19,690 --> 00:32:25,350
encoding has you know so you couldn't do

703
00:32:20,830 --> 00:32:27,639
that right we just don't um the um um

704
00:32:25,350 --> 00:32:29,230
this is sort of a kind of a miss feature

705
00:32:27,640 --> 00:32:30,730
until us I think at the end of the day

706
00:32:29,230 --> 00:32:34,450
I'm saying we sort of have you

707
00:32:30,730 --> 00:32:36,280
conversation about fixing that the put

708
00:32:34,450 --> 00:32:37,870
here looking at me would be to make it

709
00:32:36,280 --> 00:32:40,930
so that the clients wonder he's

710
00:32:37,870 --> 00:32:42,010
depending the full transcript um sorry

711
00:32:40,930 --> 00:32:43,660
Eckhart can you make sure you talk into

712
00:32:42,010 --> 00:32:45,700
the my sorry the fix would be to make

713
00:32:43,660 --> 00:32:50,500
the clients one RT tikis depend on the

714
00:32:45,700 --> 00:32:51,520
full transcript um so um which I mean it

715
00:32:50,500 --> 00:32:52,900
wouldn't be that difficult but as they

716
00:32:51,520 --> 00:32:57,490
say will be a change I changed a TLS and

717
00:32:52,900 --> 00:32:57,760
quick so I think always is the right

718
00:32:57,490 --> 00:32:59,800
answer

719
00:32:57,760 --> 00:33:01,360
I'm given that even those points though

720
00:32:59,800 --> 00:33:02,950
I miss a nice me a little sad like

721
00:33:01,360 --> 00:33:04,840
because I know it was kind of a miss

722
00:33:02,950 --> 00:33:08,080
feature and um it's also a miss feature

723
00:33:04,840 --> 00:33:09,699
in DT loss by the way so I think um I I

724
00:33:08,080 --> 00:33:11,260
will probably float this at the TLS

725
00:33:09,700 --> 00:33:12,790
working group um that they're in the TLS

726
00:33:11,260 --> 00:33:14,170
session and see if people like I don't

727
00:33:12,790 --> 00:33:16,270
like it for DTLS and would like to

728
00:33:14,170 --> 00:33:18,010
reconsider and we're happy to come back

729
00:33:16,270 --> 00:33:19,150
to this group if he tells working group

730
00:33:18,010 --> 00:33:21,220
thinks that that's like a details

731
00:33:19,150 --> 00:33:22,960
problem so you're okay with merging this

732
00:33:21,220 --> 00:33:25,030
now I think I'm okay with merging this

733
00:33:22,960 --> 00:33:26,230
now I think if the tail is working good

734
00:33:25,030 --> 00:33:27,970
books at this or like what this is a

735
00:33:26,230 --> 00:33:29,620
horror show and we should fix it in DTLS

736
00:33:27,970 --> 00:33:30,760
then we're like come back to you and say

737
00:33:29,620 --> 00:33:35,229
like well we're gonna fix it you are to

738
00:33:30,760 --> 00:33:37,660
- okay Martin Duke so substances

739
00:33:35,230 --> 00:33:39,370
substance of empties PR is fine I had a

740
00:33:37,660 --> 00:33:42,430
different one much shorter for the same

741
00:33:39,370 --> 00:33:43,689
problem but I guess by my but my way of

742
00:33:42,430 --> 00:33:45,700
thinking of this is just sort of

743
00:33:43,690 --> 00:33:48,820
practical there are a lot of quick

744
00:33:45,700 --> 00:33:50,350
implementations some of which are sort

745
00:33:48,820 --> 00:33:51,700
of hacky and some which are done by

746
00:33:50,350 --> 00:33:53,080
through the a lot about security there's

747
00:33:51,700 --> 00:33:54,820
a much smaller number of TLS

748
00:33:53,080 --> 00:33:55,659
implementations out there generally done

749
00:33:54,820 --> 00:33:59,980
by people who know something about

750
00:33:55,660 --> 00:34:03,010
security and to work with quick you have

751
00:33:59,980 --> 00:34:05,710
to do some special interface API stuff

752
00:34:03,010 --> 00:34:07,919
you can't just pull TLS off the shelf so

753
00:34:05,710 --> 00:34:10,270
I think the right place to apply this

754
00:34:07,919 --> 00:34:12,310
the right pressure point in which to

755
00:34:10,270 --> 00:34:15,340
specify this is to specify in the

756
00:34:12,310 --> 00:34:17,350
interface between TLS and quick when

757
00:34:15,340 --> 00:34:19,690
things must pass so that if the TLS

758
00:34:17,350 --> 00:34:21,639
inflators does not push down the receive

759
00:34:19,690 --> 00:34:24,250
keys until the handshake is complete you

760
00:34:21,639 --> 00:34:25,389
kind of solved this naturally for quick

761
00:34:24,250 --> 00:34:27,580
coupla mutations that's the narrow

762
00:34:25,389 --> 00:34:32,440
that's the narrow part of the waste here

763
00:34:27,580 --> 00:34:33,819
of the of a full click upon full stack

764
00:34:32,440 --> 00:34:36,130
quick implementation so that's what I

765
00:34:33,820 --> 00:34:37,660
would recommend and I looking at this PR

766
00:34:36,130 --> 00:34:39,880
now I'm not sure if that says that in

767
00:34:37,659 --> 00:34:41,259
here but that's that's where I think we

768
00:34:39,880 --> 00:34:48,610
should actually try to make sure this

769
00:34:41,260 --> 00:34:53,340
happens it in the forcible way David's

770
00:34:48,610 --> 00:34:55,300
Knaus II yeah this this is sad but it's

771
00:34:53,340 --> 00:34:57,250
something we can live with for now

772
00:34:55,300 --> 00:35:00,820
because fixing it as I said before is

773
00:34:57,250 --> 00:35:02,590
really tricky so I think we should start

774
00:35:00,820 --> 00:35:05,440
that conversation in TLS but we don't

775
00:35:02,590 --> 00:35:07,150
need to go over that here and then once

776
00:35:05,440 --> 00:35:08,500
that happens there we can mate

777
00:35:07,150 --> 00:35:11,050
this would be a really good candidate

778
00:35:08,500 --> 00:35:13,030
for quick v2 in the meantime I think it

779
00:35:11,050 --> 00:35:16,990
would really be nice to either in our

780
00:35:13,030 --> 00:35:20,860
Interop matrix or in our magical Interop

781
00:35:16,990 --> 00:35:23,470
harness docker thingy have a test for

782
00:35:20,860 --> 00:35:25,810
this that if someone is holding it wrong

783
00:35:23,470 --> 00:35:26,980
we find out and that way I think this

784
00:35:25,810 --> 00:35:28,990
puts us in a place where we're good

785
00:35:26,980 --> 00:35:30,340
enough to ship with v1 so I support

786
00:35:28,990 --> 00:35:33,240
merging this as the right solution your

787
00:35:30,340 --> 00:35:33,240
key would merging this yes

788
00:35:33,420 --> 00:35:38,590
so Martin Thomson oh I just wanted to

789
00:35:36,220 --> 00:35:43,660
address Martin Jukes concern

790
00:35:38,590 --> 00:35:46,390
oh I think his philosophy here is fine

791
00:35:43,660 --> 00:35:48,549
and I would support implementations

792
00:35:46,390 --> 00:35:50,740
doing that but I was very careful not to

793
00:35:48,550 --> 00:35:53,470
put that in the specification because I

794
00:35:50,740 --> 00:35:55,509
don't believe that levying requirements

795
00:35:53,470 --> 00:35:58,089
on the interface between the quick

796
00:35:55,510 --> 00:36:01,150
transport and TLS too tightly is is

797
00:35:58,090 --> 00:36:03,310
appropriate here I do think that it is

798
00:36:01,150 --> 00:36:05,950
absolutely the right thing fo TLS

799
00:36:03,310 --> 00:36:10,390
implementations considering this to

800
00:36:05,950 --> 00:36:12,069
think about and probably now that in in

801
00:36:10,390 --> 00:36:15,040
retrospect now that I built in that

802
00:36:12,070 --> 00:36:18,609
interface in NSS I'm thinking that maybe

803
00:36:15,040 --> 00:36:21,550
I did it wrong but I'm not going to

804
00:36:18,609 --> 00:36:23,950
unravel all of that just for this

805
00:36:21,550 --> 00:36:25,570
particular problem we have a fix in the

806
00:36:23,950 --> 00:36:28,450
quick side of things and that works fine

807
00:36:25,570 --> 00:36:29,980
I don't want to have any mandate on how

808
00:36:28,450 --> 00:36:32,169
people structure their implementations

809
00:36:29,980 --> 00:36:39,340
in it that's getting dangerously close

810
00:36:32,170 --> 00:36:41,470
to that repair to pay on quick

811
00:36:39,340 --> 00:36:43,270
observation so Roberto can you speak up

812
00:36:41,470 --> 00:36:48,250
a bit yes we learn to pay on quick

813
00:36:43,270 --> 00:36:50,590
observation our if it's not possible to

814
00:36:48,250 --> 00:36:55,570
ensure that a conforming implementation

815
00:36:50,590 --> 00:36:58,630
will not have this defect is it possible

816
00:36:55,570 --> 00:37:01,330
to ensure that a remote side can probe

817
00:36:58,630 --> 00:37:10,000
to see that the remote side has this

818
00:37:01,330 --> 00:37:12,580
defect is that that's yes okay Kyle at

819
00:37:10,000 --> 00:37:17,170
crits I think I agree with sweat Martin

820
00:37:12,580 --> 00:37:21,700
said earlier with which Martin Thomson

821
00:37:17,170 --> 00:37:25,119
thank you that it's it's the right thing

822
00:37:21,700 --> 00:37:27,189
to do to require this but I like we

823
00:37:25,119 --> 00:37:29,350
can't really require we shouldn't have

824
00:37:27,190 --> 00:37:31,780
suspect require that the API patient is

825
00:37:29,350 --> 00:37:33,880
surgeon we shouldn't be able to like

826
00:37:31,780 --> 00:37:35,650
require that the spec requires this

827
00:37:33,880 --> 00:37:38,560
particular implementation deal it'd be

828
00:37:35,650 --> 00:37:40,960
ideal to be able to actually require it

829
00:37:38,560 --> 00:37:43,660
with the the wire protocol but that will

830
00:37:40,960 --> 00:37:46,590
require chains and TLS I think it's

831
00:37:43,660 --> 00:37:51,180
probably worse making that chain

832
00:37:46,590 --> 00:37:55,350
but it's a question of whether we go

833
00:37:51,180 --> 00:37:57,359
into the effort of that chains just in

834
00:37:55,350 --> 00:38:00,000
the interest of completeness the PR that

835
00:37:57,360 --> 00:38:01,830
I 5 was 31 74 that said I'm not going to

836
00:38:00,000 --> 00:38:03,870
die on this hill and if people like

837
00:38:01,830 --> 00:38:06,750
empties VR that's great

838
00:38:03,870 --> 00:38:08,730
okay thank you Martin it sounds like

839
00:38:06,750 --> 00:38:13,490
we'll go ahead and try and get consensus

840
00:38:08,730 --> 00:38:13,490
on on Martin's PR Martin Thompson's

841
00:38:18,590 --> 00:38:22,800
[Music]

842
00:38:38,150 --> 00:38:55,380
okay that leaves us at 2863 Martin

843
00:38:49,470 --> 00:38:57,799
seaman or actually yeah you have slides

844
00:38:55,380 --> 00:38:57,800
okay

845
00:39:00,950 --> 00:39:20,069
this is the discord don't step backwards

846
00:39:12,270 --> 00:39:21,870
oh yeah this is dangerous it is yeah

847
00:39:20,070 --> 00:39:29,750
these are on the materials on during the

848
00:39:21,870 --> 00:39:33,720
hf 106 folder all right yeah so

849
00:39:29,750 --> 00:39:37,160
discarding keys has been an adventure to

850
00:39:33,720 --> 00:39:40,080
the point where we formed a design team

851
00:39:37,160 --> 00:39:42,660
whose members are listed down here I'm

852
00:39:40,080 --> 00:39:46,860
David's canoes II and let's hope if we

853
00:39:42,660 --> 00:39:48,960
killed this Thanks so we the design team

854
00:39:46,860 --> 00:39:50,790
at some point in the past I don't even

855
00:39:48,960 --> 00:39:52,800
remember which ITF came up with a

856
00:39:50,790 --> 00:39:55,440
solution on how to discard the keys they

857
00:39:52,800 --> 00:39:58,140
went into the spec and then Martin

858
00:39:55,440 --> 00:39:59,850
realized that there was a way it was

859
00:39:58,140 --> 00:40:01,500
hardly or broken and then Kazuo found

860
00:39:59,850 --> 00:40:04,140
another way in which was broken but

861
00:40:01,500 --> 00:40:07,860
without going into too much detail

862
00:40:04,140 --> 00:40:10,680
if one specific AK in the handshake gets

863
00:40:07,860 --> 00:40:12,960
lost the client can end up in a state

864
00:40:10,680 --> 00:40:14,549
were it keeps we transfer say

865
00:40:12,960 --> 00:40:17,310
retransmitting its clients finished

866
00:40:14,550 --> 00:40:19,020
because it's expected to do that until

867
00:40:17,310 --> 00:40:21,390
it gets an AK but the server's drop

868
00:40:19,020 --> 00:40:25,890
those keys so it's never gonna act that

869
00:40:21,390 --> 00:40:27,660
packet and if you do it just the wrong

870
00:40:25,890 --> 00:40:29,490
way you can exhaust your congestion

871
00:40:27,660 --> 00:40:30,509
window and completely shoot yourself in

872
00:40:29,490 --> 00:40:34,140
the foot to the point where your

873
00:40:30,510 --> 00:40:37,710
connection just never sends anything bad

874
00:40:34,140 --> 00:40:40,200
bad bad we need to fix this so and the

875
00:40:37,710 --> 00:40:45,330
other problem that Kazuo noticed is that

876
00:40:40,200 --> 00:40:47,399
if so discarding keys happens well on

877
00:40:45,330 --> 00:40:49,620
what we call handshake confirmed and

878
00:40:47,400 --> 00:40:50,940
that also keys off a lot of other

879
00:40:49,620 --> 00:40:53,400
features in the protocol such

880
00:40:50,940 --> 00:40:56,430
connection migration and if the client

881
00:40:53,400 --> 00:40:58,140
migrates before the server has done this

882
00:40:56,430 --> 00:41:01,169
you end up in a state where the server

883
00:40:58,140 --> 00:41:02,970
ends up sending long headers to a

884
00:41:01,170 --> 00:41:04,380
migrated address which is something we

885
00:41:02,970 --> 00:41:07,288
never really thought of and then you

886
00:41:04,380 --> 00:41:10,940
have other gross things there that bad

887
00:41:07,289 --> 00:41:13,980
must fix so occurred did a really nice

888
00:41:10,940 --> 00:41:14,640
analysis in LA tech that is very

889
00:41:13,980 --> 00:41:18,359
thorough

890
00:41:14,640 --> 00:41:20,308
next slide please and but we have a

891
00:41:18,359 --> 00:41:23,430
solution and hopefully our design team

892
00:41:20,309 --> 00:41:26,130
never has to meet on this again so

893
00:41:23,430 --> 00:41:29,910
Martin other Martin Martin seaman came

894
00:41:26,130 --> 00:41:33,450
up with a PR for this and so the idea is

895
00:41:29,910 --> 00:41:35,640
on the server the moment you receive the

896
00:41:33,450 --> 00:41:37,348
client finished and your TLS stack tells

897
00:41:35,640 --> 00:41:39,900
you the handshake is complete you say

898
00:41:37,349 --> 00:41:42,809
okay great the and check is confirmed I

899
00:41:39,900 --> 00:41:45,240
drop my handshake keys and I send a new

900
00:41:42,809 --> 00:41:47,339
handshake done frame from the server to

901
00:41:45,240 --> 00:41:48,779
the client and you keep transmitting to

902
00:41:47,339 --> 00:41:51,509
that until you eventually get an ACK

903
00:41:48,780 --> 00:41:54,450
and on the client as soon as you get

904
00:41:51,510 --> 00:41:55,980
that frame you say okay great now I know

905
00:41:54,450 --> 00:41:57,569
the server has received my client

906
00:41:55,980 --> 00:42:00,750
finished I can discard my handshake keys

907
00:41:57,569 --> 00:42:03,150
and I can confirm it and enable some

908
00:42:00,750 --> 00:42:04,770
features like migration and there is one

909
00:42:03,150 --> 00:42:08,880
slight subtlety that we added in there

910
00:42:04,770 --> 00:42:12,119
is if the client receives an ACK of a

911
00:42:08,880 --> 00:42:13,950
warranty tea packet had sent it because

912
00:42:12,119 --> 00:42:16,140
of the rules we were talking about the

913
00:42:13,950 --> 00:42:17,970
server is not allowed to process and a

914
00:42:16,140 --> 00:42:20,520
quantity packets until it's confirmed

915
00:42:17,970 --> 00:42:23,098
that completed the handshake so that

916
00:42:20,520 --> 00:42:24,839
means that also you know the server is

917
00:42:23,099 --> 00:42:26,099
in that state it just so happened that

918
00:42:24,839 --> 00:42:27,509
maybe your handshake done for him got

919
00:42:26,099 --> 00:42:29,190
lost along the way so you can treat that

920
00:42:27,510 --> 00:42:31,049
similarly to the receipt of a handshake

921
00:42:29,190 --> 00:42:33,589
done frame get from the handshake and

922
00:42:31,049 --> 00:42:39,059
discard the keys next slide please

923
00:42:33,589 --> 00:42:41,670
so it works the the important property

924
00:42:39,059 --> 00:42:44,089
here that was what we kept shooting

925
00:42:41,670 --> 00:42:46,680
ourselves in the foot with was that a

926
00:42:44,089 --> 00:42:51,078
lot of the correctness of this depended

927
00:42:46,680 --> 00:42:54,660
on subtleties in the recovery draft and

928
00:42:51,079 --> 00:42:57,690
that's not great so this because it's an

929
00:42:54,660 --> 00:42:59,190
explicit frame it really kind of is a

930
00:42:57,690 --> 00:43:00,809
lot easier to reason about and it

931
00:42:59,190 --> 00:43:02,789
doesn't have a dependency there and it

932
00:43:00,809 --> 00:43:04,680
also doesn't require the application on

933
00:43:02,789 --> 00:43:06,960
top of quick to be sending data for

934
00:43:04,680 --> 00:43:09,000
to flow and all that so this can only

935
00:43:06,960 --> 00:43:11,940
entirely be implemented at the quick

936
00:43:09,000 --> 00:43:14,240
dress rope TLS layer which is also a lot

937
00:43:11,940 --> 00:43:16,589
easier to reason to get about again and

938
00:43:14,240 --> 00:43:17,609
so it solves the problem of the client

939
00:43:16,589 --> 00:43:20,599
setting the clan finish because it'll

940
00:43:17,609 --> 00:43:22,890
eventually get that frame and because

941
00:43:20,599 --> 00:43:24,240
the server drops that when it sends the

942
00:43:22,890 --> 00:43:25,770
frame and the client drops it when he

943
00:43:24,240 --> 00:43:27,868
receives it we're guaranteed to have the

944
00:43:25,770 --> 00:43:29,670
server do it before the client which

945
00:43:27,869 --> 00:43:31,530
means that if the client migrates the

946
00:43:29,670 --> 00:43:32,640
server is guaranteed to have dropped his

947
00:43:31,530 --> 00:43:33,329
handshake keys so that other problem

948
00:43:32,640 --> 00:43:37,799
goes away

949
00:43:33,329 --> 00:43:40,829
next slide please and that's it we have

950
00:43:37,800 --> 00:43:44,069
a solution the everyone on the design

951
00:43:40,829 --> 00:43:46,559
team can live with it so hopefully we

952
00:43:44,069 --> 00:43:48,150
can take this and not have to discuss

953
00:43:46,559 --> 00:43:55,050
this ever again because we're all burped

954
00:43:48,150 --> 00:44:01,050
out on it it's sad so we have a proposal

955
00:43:55,050 --> 00:44:02,760
any discussion I see thumbs up from the

956
00:44:01,050 --> 00:44:04,710
audience and Eckhart the mic yeah I'm

957
00:44:02,760 --> 00:44:06,630
fine with this or come up with it rather

958
00:44:04,710 --> 00:44:09,059
I just want to flag that if we want to

959
00:44:06,630 --> 00:44:12,000
do server initiated migration to any

960
00:44:09,059 --> 00:44:14,490
point the future this will not work so

961
00:44:12,000 --> 00:44:15,839
just remember that for the future all

962
00:44:14,490 --> 00:44:17,368
right let's keep that in the back of our

963
00:44:15,839 --> 00:44:20,099
minds and we can shoot ourselves in the

964
00:44:17,369 --> 00:44:28,980
other foot when we get there we do have

965
00:44:20,099 --> 00:44:31,829
two feet Brian this is a point of making

966
00:44:28,980 --> 00:44:33,750
sure that that doesn't get lost is Brian

967
00:44:31,829 --> 00:44:34,859
Trammell it is just a point of making

968
00:44:33,750 --> 00:44:36,329
sure that that doesn't get lost you and

969
00:44:34,859 --> 00:44:38,430
I go ahead and file an if you in tag it

970
00:44:36,329 --> 00:44:40,140
quickly to I mean because we already

971
00:44:38,430 --> 00:44:41,339
have there's already an issue to talk

972
00:44:40,140 --> 00:44:42,990
about hey maybe we want to talk about

973
00:44:41,339 --> 00:44:45,359
deferred server initiated migration

974
00:44:42,990 --> 00:44:48,359
anyway and we should tag the issue right

975
00:44:45,359 --> 00:44:52,710
because otherwise it comes back and like

976
00:44:48,359 --> 00:44:54,210
if a smaller group if the room that

977
00:44:52,710 --> 00:44:55,140
considers this later does not include a

978
00:44:54,210 --> 00:44:56,910
lot of people who are in the room right

979
00:44:55,140 --> 00:44:59,598
now then it would be nice to have a

980
00:44:56,910 --> 00:44:59,598
record of that somewhere

981
00:45:05,860 --> 00:45:09,340
much larger issue than just this this is

982
00:45:07,720 --> 00:45:10,509
repaired to pay on I just want to make

983
00:45:09,340 --> 00:45:12,010
sure that we all know that we're not

984
00:45:10,510 --> 00:45:16,420
just talking about this issue if we're

985
00:45:12,010 --> 00:45:20,890
talking about that isn't much larger Jim

986
00:45:16,420 --> 00:45:24,070
I ain't got to Brian's point Eskenazi

987
00:45:20,890 --> 00:45:26,100
had linked to acres analysis which is

988
00:45:24,070 --> 00:45:29,020
very good and I think that's probably

989
00:45:26,100 --> 00:45:31,750
acres analysis which is linked in skin

990
00:45:29,020 --> 00:45:33,940
Aziz slides is a very good analysis and

991
00:45:31,750 --> 00:45:35,770
I think that captures sort of what the

992
00:45:33,940 --> 00:45:38,560
different what the scope of different

993
00:45:35,770 --> 00:45:44,020
solutions that would discussed were and

994
00:45:38,560 --> 00:45:48,400
I think that's required so the the PR

995
00:45:44,020 --> 00:45:49,720
we're talking about is 3145 right okay

996
00:45:48,400 --> 00:45:53,250
so absolutely the discussion I think

997
00:45:49,720 --> 00:45:53,250
will do the call for consensus on this

998
00:45:53,730 --> 00:46:08,070
thank you very much for putting that

999
00:45:57,970 --> 00:46:11,620
together David and team 31:45 yeah like

1000
00:46:08,070 --> 00:46:24,150
not on this issue but I think we skipped

1001
00:46:11,620 --> 00:46:24,150
over 3197 one second 3187 ninety-seven

1002
00:46:27,830 --> 00:46:50,509
still 97 that yes yes so not to it yet I

1003
00:46:42,830 --> 00:46:54,560
think or oh there yeah okay yep yep go

1004
00:46:50,510 --> 00:46:56,960
ahead yeah so this is there are two

1005
00:46:54,560 --> 00:46:59,990
related issues here 31 93 is the other

1006
00:46:56,960 --> 00:47:05,260
one and for whatever reason 93 has not

1007
00:46:59,990 --> 00:47:09,220
been worked designed but this one has so

1008
00:47:05,260 --> 00:47:11,990
but basically they are they are both

1009
00:47:09,220 --> 00:47:16,700
dealing with things about the active

1010
00:47:11,990 --> 00:47:19,040
connection ID limit where when you want

1011
00:47:16,700 --> 00:47:20,779
to make it work with retire prior to

1012
00:47:19,040 --> 00:47:23,960
which we've added since we came to the

1013
00:47:20,780 --> 00:47:27,740
agreement on how this should work it now

1014
00:47:23,960 --> 00:47:29,570
no longer is really good to learn to

1015
00:47:27,740 --> 00:47:32,870
make the limit be just a suggestion

1016
00:47:29,570 --> 00:47:33,950
instead of a hard requirement but if

1017
00:47:32,870 --> 00:47:36,830
you're going to make it be a hard

1018
00:47:33,950 --> 00:47:38,419
requirement the default value does not

1019
00:47:36,830 --> 00:47:42,890
make any sense because it's not possible

1020
00:47:38,420 --> 00:47:44,420
not to exceed that limit I mean you

1021
00:47:42,890 --> 00:47:51,350
can't finish the handshake and have

1022
00:47:44,420 --> 00:47:54,260
issued zero connection IDs so and you

1023
00:47:51,350 --> 00:47:55,790
have a PR so Eric Kinnear so Martin

1024
00:47:54,260 --> 00:47:58,580
seaman actually wrote a PPR for this

1025
00:47:55,790 --> 00:48:00,560
louder even louder Wow can we also open

1026
00:47:58,580 --> 00:48:03,529
up 3193 while we're at it son say should

1027
00:48:00,560 --> 00:48:06,740
indeed be design the same PR covers both

1028
00:48:03,530 --> 00:48:08,360
of these issues at the time technically

1029
00:48:06,740 --> 00:48:09,770
it's possible to not exceed it because

1030
00:48:08,360 --> 00:48:11,510
it didn't include the one established

1031
00:48:09,770 --> 00:48:14,630
during the handshake but the PR purpose

1032
00:48:11,510 --> 00:48:18,710
is changing that so the previous case

1033
00:48:14,630 --> 00:48:20,810
was the issuer of connection IDs issues

1034
00:48:18,710 --> 00:48:23,270
however many they want there's a

1035
00:48:20,810 --> 00:48:24,830
transport parameter for the recipient of

1036
00:48:23,270 --> 00:48:26,630
those to express how many they're

1037
00:48:24,830 --> 00:48:28,340
willing to store and if you issue too

1038
00:48:26,630 --> 00:48:30,800
many you're expected to drop them and

1039
00:48:28,340 --> 00:48:33,170
now the two different sides are out of

1040
00:48:30,800 --> 00:48:35,930
sync in terms of knowing how many are

1041
00:48:33,170 --> 00:48:39,500
currently actually possible for the

1042
00:48:35,930 --> 00:48:41,390
recipient to use and that's worked and

1043
00:48:39,500 --> 00:48:43,640
we had a bunch of language about that

1044
00:48:41,390 --> 00:48:46,910
and it manages to confuse everyone all

1045
00:48:43,640 --> 00:48:48,759
the time so this PR makes a change now

1046
00:48:46,910 --> 00:48:51,170
that we have a way for the issuer to

1047
00:48:48,760 --> 00:48:55,550
require that they be retired and

1048
00:48:51,170 --> 00:48:57,320
replaced and for the recipient to bound

1049
00:48:55,550 --> 00:48:59,120
the amount that they're willing to store

1050
00:48:57,320 --> 00:49:02,330
and just communicate that as opposed to

1051
00:48:59,120 --> 00:49:04,580
having to silently drop them the PR that

1052
00:49:02,330 --> 00:49:06,259
covers both of these issues makes it so

1053
00:49:04,580 --> 00:49:08,690
that you now say I'm willing to store

1054
00:49:06,260 --> 00:49:10,340
this many if the person issues you too

1055
00:49:08,690 --> 00:49:13,550
many that's actually an error and it's a

1056
00:49:10,340 --> 00:49:15,650
must not and so they issue you up to

1057
00:49:13,550 --> 00:49:18,050
that many when you retire them they get

1058
00:49:15,650 --> 00:49:20,210
replaced and if they request that they

1059
00:49:18,050 --> 00:49:22,580
be retired and replace them then you're

1060
00:49:20,210 --> 00:49:25,040
all good so it brings them back into

1061
00:49:22,580 --> 00:49:26,360
sync and as a side effect of that which

1062
00:49:25,040 --> 00:49:29,690
is kind of what Mike's issue is trying

1063
00:49:26,360 --> 00:49:32,510
to get at it means that the the default

1064
00:49:29,690 --> 00:49:34,160
needs to become - because it starts

1065
00:49:32,510 --> 00:49:35,900
counting the one established during the

1066
00:49:34,160 --> 00:49:38,180
handshake and be preferred address one

1067
00:49:35,900 --> 00:49:40,070
as counting so that we don't have this

1068
00:49:38,180 --> 00:49:41,839
magical two that are floating off in the

1069
00:49:40,070 --> 00:49:42,980
middle of nowhere so it makes everything

1070
00:49:41,840 --> 00:49:46,420
much more consistent with the way

1071
00:49:42,980 --> 00:49:46,420
everything else in the protocol works

1072
00:49:46,570 --> 00:49:51,140
should be linked from both of these

1073
00:49:48,590 --> 00:49:55,379
issues we just got a scroll

1074
00:49:51,140 --> 00:49:55,379
[Music]

1075
00:49:59,770 --> 00:50:06,590
that's dangerous there should just be

1076
00:50:01,610 --> 00:50:09,040
one pier this one yeah it looks like

1077
00:50:06,590 --> 00:50:11,330
this does some discussion on this I

1078
00:50:09,040 --> 00:50:14,810
suspect we can click the resolve button

1079
00:50:11,330 --> 00:50:18,380
on both of these genre are we good to

1080
00:50:14,810 --> 00:50:23,900
click the resolve button on those yeah

1081
00:50:18,380 --> 00:50:25,790
down at the bottom so I had some

1082
00:50:23,900 --> 00:50:28,070
comments on this earlier and I've had

1083
00:50:25,790 --> 00:50:30,590
conversations with Derek and Kazuo since

1084
00:50:28,070 --> 00:50:32,900
then and I understand this is a bit of a

1085
00:50:30,590 --> 00:50:34,970
model shift the way we were thinking

1086
00:50:32,900 --> 00:50:37,760
about this earlier was different than

1087
00:50:34,970 --> 00:50:40,279
the way that these folks are thinking

1088
00:50:37,760 --> 00:50:44,900
about this now and now having understood

1089
00:50:40,280 --> 00:50:46,430
the model I think it makes sense I I can

1090
00:50:44,900 --> 00:50:48,800
see this being natural for those who

1091
00:50:46,430 --> 00:50:52,279
aren't who haven't thought about this in

1092
00:50:48,800 --> 00:50:54,090
the previous so I have some comments in

1093
00:50:52,280 --> 00:50:57,570
there which which need

1094
00:50:54,090 --> 00:51:00,420
solving but those aren't those aren't

1095
00:50:57,570 --> 00:51:01,950
fundamental those aren't blocking they

1096
00:51:00,420 --> 00:51:06,300
will get they can easily be resolved

1097
00:51:01,950 --> 00:51:11,730
it's just text work but I think this is

1098
00:51:06,300 --> 00:51:15,720
this PR is seen and I actually I don't I

1099
00:51:11,730 --> 00:51:17,700
don't mind doing it this way I also know

1100
00:51:15,720 --> 00:51:20,220
that apparently this this this stuff was

1101
00:51:17,700 --> 00:51:22,560
confusing to implementers so it's it's a

1102
00:51:20,220 --> 00:51:25,129
valuable work in that it's not just

1103
00:51:22,560 --> 00:51:28,049
somebody thinking that this new model is

1104
00:51:25,130 --> 00:51:29,790
better - it's it's more to somebody's

1105
00:51:28,050 --> 00:51:32,160
liking than the previous model it

1106
00:51:29,790 --> 00:51:37,050
happened to be actual confusion with the

1107
00:51:32,160 --> 00:51:39,629
old model Martin dude maybe I'm confused

1108
00:51:37,050 --> 00:51:46,110
but why is the wise one an invalid value

1109
00:51:39,630 --> 00:51:51,840
for if I'm not supporting migration at

1110
00:51:46,110 --> 00:51:54,840
the mic place if you're not supporting

1111
00:51:51,840 --> 00:51:56,850
migration then you can never change

1112
00:51:54,840 --> 00:51:58,650
connection ID because they could never

1113
00:51:56,850 --> 00:52:03,540
issue you a second connection ID -

1114
00:51:58,650 --> 00:52:11,930
change - maybe you don't want to support

1115
00:52:03,540 --> 00:52:14,520
that it might be valid Erik Kinnear so

1116
00:52:11,930 --> 00:52:16,740
you can change connection IDs without

1117
00:52:14,520 --> 00:52:18,870
migrating so if you're not supporting

1118
00:52:16,740 --> 00:52:21,029
migration and you don't ever want to

1119
00:52:18,870 --> 00:52:24,180
change those are separate things the

1120
00:52:21,030 --> 00:52:25,620
reason that you need to is so that the

1121
00:52:24,180 --> 00:52:27,149
server can give you the preferred

1122
00:52:25,620 --> 00:52:30,060
address transport parameter and that

1123
00:52:27,150 --> 00:52:34,320
comes with the CID to use so if they

1124
00:52:30,060 --> 00:52:38,450
don't give you that then your your said

1125
00:52:34,320 --> 00:52:38,450
you you are still saying I'm okay with -

1126
00:52:39,440 --> 00:52:44,390
that just applies to the client yes I

1127
00:52:45,080 --> 00:52:51,270
mean do you really want it to be

1128
00:52:46,800 --> 00:52:53,040
asymmetrical all right it sounds like

1129
00:52:51,270 --> 00:52:55,560
maybe a little more discussion needs to

1130
00:52:53,040 --> 00:52:57,420
take this offline with yeah I think we

1131
00:52:55,560 --> 00:53:00,120
can probably do a call for consensus the

1132
00:52:57,420 --> 00:53:01,410
next batch for this one so people have a

1133
00:53:00,120 --> 00:53:02,460
look make sure you're happy let's let

1134
00:53:01,410 --> 00:53:02,879
the discussion play out and we'll go

1135
00:53:02,460 --> 00:53:04,830
from there

1136
00:53:02,880 --> 00:53:06,789
I think the key to highlight is that

1137
00:53:04,830 --> 00:53:10,359
both of the issues are

1138
00:53:06,789 --> 00:53:13,569
at one small point and the PRS proposed

1139
00:53:10,359 --> 00:53:16,390
changes the model itself as opposed to

1140
00:53:13,569 --> 00:53:31,929
one small point so please rate the PR

1141
00:53:16,390 --> 00:53:39,219
more than the issue sure okay it takes

1142
00:53:31,929 --> 00:53:42,569
us back down to I think 2602 how we

1143
00:53:39,219 --> 00:53:42,569
doing we got two more after that okay

1144
00:53:44,099 --> 00:53:49,209
this is need any discussion or I don't

1145
00:53:47,380 --> 00:53:50,739
think it needs discussion here does a PR

1146
00:53:49,209 --> 00:53:52,598
and there's some ongoing discussion on

1147
00:53:50,739 --> 00:53:57,219
there but I think it's pretty close to

1148
00:53:52,599 --> 00:53:59,140
getting done okay so we'll we'll wait

1149
00:53:57,219 --> 00:54:02,910
for the proposal ready from from the

1150
00:53:59,140 --> 00:54:02,910
editors and then yeah go for consensus

1151
00:54:02,949 --> 00:54:17,289
next up be more conservative about

1152
00:54:04,660 --> 00:54:20,229
migration 21:43 Eric Kinnear so this is

1153
00:54:17,289 --> 00:54:23,679
the one that we've had for a while we

1154
00:54:20,229 --> 00:54:25,058
wrote up a bunch of text changed it gory

1155
00:54:23,679 --> 00:54:27,159
went through it and helped us review it

1156
00:54:25,059 --> 00:54:29,619
since Cupertino so our last status in

1157
00:54:27,159 --> 00:54:32,199
Cupertino was that we were hoping Gauri

1158
00:54:29,619 --> 00:54:33,959
would would take a look and that we get

1159
00:54:32,199 --> 00:54:36,159
some of the reviews on the proposed text

1160
00:54:33,959 --> 00:54:40,469
we have not done that Thank You Gauri

1161
00:54:36,159 --> 00:54:42,939
and then we went through with Martin and

1162
00:54:40,469 --> 00:54:44,829
reorganize things a bit so they should

1163
00:54:42,939 --> 00:54:47,709
be in good shape to be included in the

1164
00:54:44,829 --> 00:54:50,709
next consensus call okay so we'll wait

1165
00:54:47,709 --> 00:54:53,169
for that and then make the make the next

1166
00:54:50,709 --> 00:54:56,279
batch button so Martin Thomson I regard

1167
00:54:53,169 --> 00:55:00,609
this as largely an editorial exercise

1168
00:54:56,279 --> 00:55:02,289
but the the size of the information and

1169
00:55:00,609 --> 00:55:04,538
the and the scope of it is such that I

1170
00:55:02,289 --> 00:55:08,589
think it's important to have this sort

1171
00:55:04,539 --> 00:55:10,269
of level of visibility I'm relatively

1172
00:55:08,589 --> 00:55:12,459
happy where things were going I haven't

1173
00:55:10,269 --> 00:55:14,979
seen the new stuff that that echo has

1174
00:55:12,459 --> 00:55:16,598
added to this document which is talking

1175
00:55:14,979 --> 00:55:18,399
about the handshake and the packet

1176
00:55:16,599 --> 00:55:19,960
protection and how that interacts with

1177
00:55:18,400 --> 00:55:24,100
all all of this

1178
00:55:19,960 --> 00:55:25,840
it's a fairly big project so I want to

1179
00:55:24,100 --> 00:55:28,180
make sure that people are we're aware of

1180
00:55:25,840 --> 00:55:30,220
what's going on here because this this

1181
00:55:28,180 --> 00:55:33,850
is really the the grounding on which a

1182
00:55:30,220 --> 00:55:35,379
lot of our analysis is based it's kind

1183
00:55:33,850 --> 00:55:37,450
of strange that it's coming so late in

1184
00:55:35,380 --> 00:55:39,610
the process but I think that's just a

1185
00:55:37,450 --> 00:55:43,439
consequence of of us now understanding a

1186
00:55:39,610 --> 00:55:45,700
lot better how we got to where we are so

1187
00:55:43,440 --> 00:55:47,110
I've got to review this again it's gonna

1188
00:55:45,700 --> 00:55:50,080
take a long time there's a lot of

1189
00:55:47,110 --> 00:55:51,040
textures kind of convoluted but I think

1190
00:55:50,080 --> 00:55:55,230
this is headed in the right direction

1191
00:55:51,040 --> 00:55:55,230
you'll see it proposed already very soon

1192
00:55:55,920 --> 00:56:00,310
yeah I mean please do read this this

1193
00:55:58,510 --> 00:56:02,650
should have no normative force but if

1194
00:56:00,310 --> 00:56:05,380
you read this and you're like wait I

1195
00:56:02,650 --> 00:56:08,320
thought we defended against that or this

1196
00:56:05,380 --> 00:56:10,150
is nonsense or you know wait this is a

1197
00:56:08,320 --> 00:56:11,890
little booty exists holy crap

1198
00:56:10,150 --> 00:56:12,910
yeah like those are bad things and we

1199
00:56:11,890 --> 00:56:14,980
should fix it what you talk about them

1200
00:56:12,910 --> 00:56:16,750
so this is like if this is accurately

1201
00:56:14,980 --> 00:56:17,980
characterized your expectations looks

1202
00:56:16,750 --> 00:56:19,720
like things in here surprising to you

1203
00:56:17,980 --> 00:56:21,370
then like that's something you should

1204
00:56:19,720 --> 00:56:22,899
flag so people who thought this problem

1205
00:56:21,370 --> 00:56:24,040
please read it and like and be like and

1206
00:56:22,900 --> 00:56:25,300
try to make sure it matches your

1207
00:56:24,040 --> 00:56:27,400
expectations of like what you think

1208
00:56:25,300 --> 00:56:31,050
quick we're supposed to provide because

1209
00:56:27,400 --> 00:56:31,050
intended right so it's intended to do

1210
00:56:31,140 --> 00:56:36,430
christianism oh I have actually studied

1211
00:56:34,780 --> 00:56:38,760
that we never do a lot I have a unit

1212
00:56:36,430 --> 00:56:42,129
test testing that in my implementation

1213
00:56:38,760 --> 00:56:44,560
to see what happens it's extremely hard

1214
00:56:42,130 --> 00:56:46,360
to defend against that attack it's a

1215
00:56:44,560 --> 00:56:48,880
logical consequence of being able to

1216
00:56:46,360 --> 00:56:51,850
support to support not not binding not

1217
00:56:48,880 --> 00:56:54,400
rebinding as long as the IP address are

1218
00:56:51,850 --> 00:56:57,130
not authenticated this dilatory can do

1219
00:56:54,400 --> 00:57:00,250
it except from sending toxins and doing

1220
00:56:57,130 --> 00:57:02,110
heuristics so I think that at best what

1221
00:57:00,250 --> 00:57:04,590
we should have is a mention of that

1222
00:57:02,110 --> 00:57:09,390
attack in the security consideration and

1223
00:57:04,590 --> 00:57:09,390
some kind of do your best recommendation

1224
00:57:12,870 --> 00:57:18,009
Eric can hear two things first I did

1225
00:57:16,480 --> 00:57:20,560
forget to highlight earlier we've now

1226
00:57:18,010 --> 00:57:22,210
filled out a Necker filled out the first

1227
00:57:20,560 --> 00:57:23,680
section that was kind of TBD when we

1228
00:57:22,210 --> 00:57:25,810
discussed this in cupertino so thank you

1229
00:57:23,680 --> 00:57:27,580
echo for doing that and to Christians

1230
00:57:25,810 --> 00:57:30,100
point I believe the current text does

1231
00:57:27,580 --> 00:57:31,630
highlight that attack and list the

1232
00:57:30,100 --> 00:57:33,190
capabilities that we believe somebody

1233
00:57:31,630 --> 00:57:33,610
who has successfully carried out that

1234
00:57:33,190 --> 00:57:37,390
attack

1235
00:57:33,610 --> 00:57:39,460
has that's what I'm hoping people will

1236
00:57:37,390 --> 00:57:41,500
take a look at and say no this makes no

1237
00:57:39,460 --> 00:57:44,350
sense we don't like this or yes that's

1238
00:57:41,500 --> 00:57:46,630
about right that's what an act can do so

1239
00:57:44,350 --> 00:57:48,490
it it should be in there

1240
00:57:46,630 --> 00:57:50,650
and there is also mentioned elsewhere in

1241
00:57:48,490 --> 00:57:52,720
the document of that you may want to use

1242
00:57:50,650 --> 00:57:54,760
some heuristics to try to defend against

1243
00:57:52,720 --> 00:57:56,500
that but we don't outline exactly what

1244
00:57:54,760 --> 00:58:00,300
those are because that would be a whole

1245
00:57:56,500 --> 00:58:03,160
set of documents by themselves okay

1246
00:58:00,300 --> 00:58:06,040
excuse me thank you so uh let's go ahead

1247
00:58:03,160 --> 00:58:08,410
and mark this proposal ready go through

1248
00:58:06,040 --> 00:58:10,360
the process everyone take special care

1249
00:58:08,410 --> 00:58:12,220
to look at this make sure you understand

1250
00:58:10,360 --> 00:58:16,600
the changes have been made and we'll see

1251
00:58:12,220 --> 00:58:21,370
where we get thanks for that uh last one

1252
00:58:16,600 --> 00:58:23,680
on this particular list okay oh right

1253
00:58:21,370 --> 00:58:26,710
right right I remember that yeah that's

1254
00:58:23,680 --> 00:58:29,560
good it's twofer all right so that takes

1255
00:58:26,710 --> 00:58:33,520
us through our design issues what we

1256
00:58:29,560 --> 00:58:36,330
have left is the recovery and the HTTP

1257
00:58:33,520 --> 00:58:38,650
issues excuse me

1258
00:58:36,330 --> 00:58:40,840
however I wanted to go through the

1259
00:58:38,650 --> 00:58:45,070
triage issues really quickly and

1260
00:58:40,840 --> 00:58:46,930
highlight maybe one or two so for those

1261
00:58:45,070 --> 00:58:49,840
who aren't familiar we have a process

1262
00:58:46,930 --> 00:58:50,890
where we triage the issues to make sure

1263
00:58:49,840 --> 00:58:52,120
we're going to take them on before we

1264
00:58:50,890 --> 00:58:54,819
actually mark them as design or

1265
00:58:52,120 --> 00:58:59,710
editorial issues and there's one that's

1266
00:58:54,820 --> 00:59:08,950
been a little contentious which I can't

1267
00:58:59,710 --> 00:59:13,600
find now sorry don't know Thank You 3189

1268
00:59:08,950 --> 00:59:16,450
quick loads real pages really slowly

1269
00:59:13,600 --> 00:59:19,810
here lacks on page unpacked exposure of

1270
00:59:16,450 --> 00:59:23,740
packet loss 3189 on the transport draft

1271
00:59:19,810 --> 00:59:26,650
and so this is a proposal to add some

1272
00:59:23,740 --> 00:59:28,779
bits to the long sorry short packet

1273
00:59:26,650 --> 00:59:31,030
header for detecting loss by networks

1274
00:59:28,780 --> 00:59:34,150
that's a topic which we've discussed

1275
00:59:31,030 --> 00:59:36,850
before and it's related of course to the

1276
00:59:34,150 --> 00:59:38,980
spin bit discussion and we had a

1277
00:59:36,850 --> 00:59:40,540
separate issue about that a while back

1278
00:59:38,980 --> 00:59:44,320
where we came to consensus that we

1279
00:59:40,540 --> 00:59:46,509
wouldn't do this in quickly one so been

1280
00:59:44,320 --> 00:59:47,590
talking to a lot of people about this we

1281
00:59:46,510 --> 00:59:47,740
actually had a lot of discussion when

1282
00:59:47,590 --> 00:59:49,900
the

1283
00:59:47,740 --> 00:59:52,029
so we locked the issue because it

1284
00:59:49,900 --> 00:59:54,190
doesn't do any good to have a triage

1285
00:59:52,030 --> 00:59:55,720
process if everyone spends our time

1286
00:59:54,190 --> 00:59:58,510
discussing the issues before we actually

1287
00:59:55,720 --> 01:00:04,529
say we're working to discuss them I'm

1288
00:59:58,510 --> 01:00:08,430
gonna go ahead and lock that now talking

1289
01:00:04,530 --> 01:00:10,780
yes Brian thank you for your input

1290
01:00:08,430 --> 01:00:12,790
I've talked to the area directors about

1291
01:00:10,780 --> 01:00:17,410
this I've talked to the proponents about

1292
01:00:12,790 --> 01:00:18,970
this my personal take is is that it

1293
01:00:17,410 --> 01:00:22,240
would be most productive for the group

1294
01:00:18,970 --> 01:00:25,299
if we were to not consider this in the

1295
01:00:22,240 --> 01:00:27,609
scope of quickly one but to consider an

1296
01:00:25,300 --> 01:00:30,010
extension and then you know we said

1297
01:00:27,610 --> 01:00:31,420
before that if a proposal emerges we

1298
01:00:30,010 --> 01:00:35,170
would consider that and we would do the

1299
01:00:31,420 --> 01:00:36,460
same privacy and security review that

1300
01:00:35,170 --> 01:00:39,160
would be a process that would be

1301
01:00:36,460 --> 01:00:40,420
necessary for us to consider this and

1302
01:00:39,160 --> 01:00:45,040
the question is when do we do that

1303
01:00:40,420 --> 01:00:46,600
process so so that would be that that's

1304
01:00:45,040 --> 01:00:48,190
what's first in mind but but I want to

1305
01:00:46,600 --> 01:00:49,600
open up the floor let's have some

1306
01:00:48,190 --> 01:00:52,750
discussion let's see how people feel

1307
01:00:49,600 --> 01:00:57,490
about taking this work on so and Igor is

1308
01:00:52,750 --> 01:00:59,500
is the the proponents of please start so

1309
01:00:57,490 --> 01:01:00,609
just to give people a tiny bit of

1310
01:00:59,500 --> 01:01:05,350
background who haven't been following

1311
01:01:00,609 --> 01:01:07,900
that closely so there's a lot of

1312
01:01:05,350 --> 01:01:09,549
discussion about it in TS vwg so quick

1313
01:01:07,900 --> 01:01:13,540
increase its headers it's one of the new

1314
01:01:09,550 --> 01:01:17,140
protocols it does it so it doesn't

1315
01:01:13,540 --> 01:01:21,700
expose delay and loss to the past and

1316
01:01:17,140 --> 01:01:23,520
which many operators and researchers and

1317
01:01:21,700 --> 01:01:27,220
many other parties said that wells it is

1318
01:01:23,520 --> 01:01:30,220
problematic for them to ensure quality

1319
01:01:27,220 --> 01:01:32,618
of service Brian's had a great proposal

1320
01:01:30,220 --> 01:01:35,410
about spin bits there was an extensive

1321
01:01:32,619 --> 01:01:39,400
privacy discussion and a working group

1322
01:01:35,410 --> 01:01:41,859
decided that concerns have a consensus

1323
01:01:39,400 --> 01:01:44,380
to adopt that and to include one of the

1324
01:01:41,859 --> 01:01:48,490
reserve leads for spin bid at that time

1325
01:01:44,380 --> 01:01:50,410
there was no viable proposal for the

1326
01:01:48,490 --> 01:01:53,680
lost bid so the group decided that there

1327
01:01:50,410 --> 01:01:57,490
is nothing to do so it was changed the

1328
01:01:53,680 --> 01:01:59,049
draw of proposals now the risk codes

1329
01:01:57,490 --> 01:02:00,689
that we've implemented based on that

1330
01:01:59,050 --> 01:02:06,330
proposal

1331
01:02:00,690 --> 01:02:09,020
last ATF Orange has done presented some

1332
01:02:06,330 --> 01:02:10,799
experiments data from that code

1333
01:02:09,020 --> 01:02:15,240
yesterday's

1334
01:02:10,800 --> 01:02:18,480
CNET presented some SATCOM data from

1335
01:02:15,240 --> 01:02:21,240
experiments based on that stuff so it's

1336
01:02:18,480 --> 01:02:23,700
there are other proposals in that area

1337
01:02:21,240 --> 01:02:26,640
which means that it's kind of important

1338
01:02:23,700 --> 01:02:29,220
people care now it's clear that it's

1339
01:02:26,640 --> 01:02:34,730
quite contentious in terms of timing for

1340
01:02:29,220 --> 01:02:40,799
v1 so I'm ready to commit to make a

1341
01:02:34,730 --> 01:02:43,050
extension draft for the interim and if

1342
01:02:40,800 --> 01:02:44,880
working group is interested in this

1343
01:02:43,050 --> 01:02:47,550
topic which I think they should be

1344
01:02:44,880 --> 01:02:50,430
because it's a lot of there is a lot of

1345
01:02:47,550 --> 01:02:54,870
interest in the community so we can work

1346
01:02:50,430 --> 01:02:57,990
with that we would need working group

1347
01:02:54,870 --> 01:03:02,930
engagement to do a similar privacy

1348
01:02:57,990 --> 01:03:02,930
consideration for the new draft and

1349
01:03:06,980 --> 01:03:15,510
repair to pay own I think I would like

1350
01:03:13,140 --> 01:03:17,220
to ask everybody it the question of what

1351
01:03:15,510 --> 01:03:19,680
is the layer of this protocol and I know

1352
01:03:17,220 --> 01:03:22,859
that since the start we've smooshed

1353
01:03:19,680 --> 01:03:25,710
together a bunch of layers to call it

1354
01:03:22,860 --> 01:03:27,510
quick and that was even a design intent

1355
01:03:25,710 --> 01:03:30,480
in the beginning however there is a

1356
01:03:27,510 --> 01:03:32,550
minimum layer of the OSI model that we

1357
01:03:30,480 --> 01:03:36,360
have ever asserted that this thing is

1358
01:03:32,550 --> 01:03:38,960
and it really feels like we're stepping

1359
01:03:36,360 --> 01:03:41,070
a layer too deep with these things for

1360
01:03:38,960 --> 01:03:45,900
reasons that aren't very good they're

1361
01:03:41,070 --> 01:03:47,700
merely convenient and it seems very sad

1362
01:03:45,900 --> 01:03:50,370
that we will attempt to solve this in

1363
01:03:47,700 --> 01:03:54,720
quick when it is a problem that exists

1364
01:03:50,370 --> 01:03:56,190
for other protocols and I think if we

1365
01:03:54,720 --> 01:04:01,140
want to solve this we should solve this

1366
01:03:56,190 --> 01:04:02,400
there and not here and there's all kinds

1367
01:04:01,140 --> 01:04:03,870
of reasons for it and I'm sure other

1368
01:04:02,400 --> 01:04:05,760
people are gonna talk about them but

1369
01:04:03,870 --> 01:04:06,330
that's how I feel very strongly thank

1370
01:04:05,760 --> 01:04:11,420
you very much

1371
01:04:06,330 --> 01:04:13,920
so just just for my benefit I think our

1372
01:04:11,420 --> 01:04:15,510
options are to know

1373
01:04:13,920 --> 01:04:19,049
discussed this in the skip a quick v1

1374
01:04:15,510 --> 01:04:22,099
say this is out scope or we could say

1375
01:04:19,049 --> 01:04:24,569
yes it is in scope or we could instruct

1376
01:04:22,099 --> 01:04:26,670
Igor and the other components to come up

1377
01:04:24,569 --> 01:04:29,009
with an extension draft and we'll start

1378
01:04:26,670 --> 01:04:30,450
the extension discussion if people think

1379
01:04:29,010 --> 01:04:32,160
there are other options where they have

1380
01:04:30,450 --> 01:04:35,430
opinions about those options I'd like to

1381
01:04:32,160 --> 01:04:37,589
hear them so it I Brian Trammell it

1382
01:04:35,430 --> 01:04:41,640
sounded like to me like Roberto was

1383
01:04:37,589 --> 01:04:42,750
proposing that we do an IP v7 boffin I

1384
01:04:41,640 --> 01:04:44,400
mean you thought about pushing it one

1385
01:04:42,750 --> 01:04:50,130
layer down right like so back down to

1386
01:04:44,400 --> 01:04:51,660
the network layer right yeah so it's a

1387
01:04:50,130 --> 01:04:55,200
supple it's it sounds like it's maybe

1388
01:04:51,660 --> 01:04:59,270
even like a bath layer maybe on top of

1389
01:04:55,200 --> 01:05:01,109
UDP might be a substrate I don't know I

1390
01:04:59,270 --> 01:05:03,630
told you I was gonna take over your

1391
01:05:01,109 --> 01:05:09,750
working group mark I'm sorry um now

1392
01:05:03,630 --> 01:05:11,280
we're seriously I think there's they

1393
01:05:09,750 --> 01:05:14,549
don't really wanted to read what I put

1394
01:05:11,280 --> 01:05:17,069
into the issue I think there's like two

1395
01:05:14,549 --> 01:05:18,299
questions here um actually do put it up

1396
01:05:17,069 --> 01:05:21,319
there so I can remember what I wanted to

1397
01:05:18,299 --> 01:05:24,960
say um there's two questions here one is

1398
01:05:21,319 --> 01:05:27,270
do we want to you know recognizing that

1399
01:05:24,960 --> 01:05:29,220
it is kind of an expedient hack do we

1400
01:05:27,270 --> 01:05:30,809
want to basically say look we want to

1401
01:05:29,220 --> 01:05:33,118
replace the fact that people have used

1402
01:05:30,809 --> 01:05:36,000
implicit past signals in TCP to do loss

1403
01:05:33,119 --> 01:05:38,609
measurement with explicit past signals

1404
01:05:36,000 --> 01:05:40,950
for loss measurement in quick and then

1405
01:05:38,609 --> 01:05:42,690
the second question is do we want this

1406
01:05:40,950 --> 01:05:45,180
proposal to be the basis of that I think

1407
01:05:42,690 --> 01:05:48,390
we should separate those out um I think

1408
01:05:45,180 --> 01:05:52,680
it's really late to have this

1409
01:05:48,390 --> 01:05:54,779
conversation I think like absolutely we

1410
01:05:52,680 --> 01:05:56,700
should say let's try and figure out I

1411
01:05:54,780 --> 01:05:58,200
liked Igor's proposal it's like we're

1412
01:05:56,700 --> 01:06:00,118
gonna go really fast and see if maybe we

1413
01:05:58,200 --> 01:06:02,220
can get something that might actually

1414
01:06:00,119 --> 01:06:04,319
work in the timeframe you know so the

1415
01:06:02,220 --> 01:06:06,118
bet there that that Igor is making is

1416
01:06:04,319 --> 01:06:08,009
that you know with the rest of the

1417
01:06:06,119 --> 01:06:09,299
things that we need to get done for v1

1418
01:06:08,010 --> 01:06:10,440
we're going to be slower than we think

1419
01:06:09,299 --> 01:06:14,960
we are and I think looking at our

1420
01:06:10,440 --> 01:06:14,960
history that's a pretty good bet huh

1421
01:06:15,290 --> 01:06:23,579
my sorry can I write down Christian

1422
01:06:17,849 --> 01:06:26,510
sorry um ve the yeah schedule chicken

1423
01:06:23,579 --> 01:06:26,510
yeah pretty much

1424
01:06:26,660 --> 01:06:32,779
the the thing I'm concerned with a

1425
01:06:31,579 --> 01:06:34,130
little bit is that we talk about it as

1426
01:06:32,779 --> 01:06:35,210
an extension this would be different

1427
01:06:34,130 --> 01:06:36,079
than any of the other extensions that

1428
01:06:35,210 --> 01:06:37,519
we're talking about what all the other

1429
01:06:36,079 --> 01:06:39,799
extensions were talking about our a

1430
01:06:37,519 --> 01:06:42,410
stick a you know sticking a transport

1431
01:06:39,799 --> 01:06:44,930
parameter and it's inside the crypto and

1432
01:06:42,410 --> 01:06:46,848
there is no a change to the wire image

1433
01:06:44,930 --> 01:06:48,799
and it's just real like those extensions

1434
01:06:46,849 --> 01:06:50,690
are easy right like it might actually

1435
01:06:48,799 --> 01:06:52,519
turn out that those extensions mean we

1436
01:06:50,690 --> 01:06:54,019
never actually really have a quick v2 we

1437
01:06:52,519 --> 01:06:55,999
just have profiles a quick under v1

1438
01:06:54,019 --> 01:06:58,038
because of of because we're actually

1439
01:06:55,999 --> 01:07:03,919
really successful with transform yeah

1440
01:06:58,039 --> 01:07:05,839
yeah down yeah yeah well I mean like

1441
01:07:03,920 --> 01:07:12,019
Roberto started with IP b7 so let's just

1442
01:07:05,839 --> 01:07:15,369
blow it all up the the discussion that

1443
01:07:12,019 --> 01:07:18,828
we could have that would make a

1444
01:07:15,369 --> 01:07:22,369
extension oriented solution to this

1445
01:07:18,829 --> 01:07:24,589
question easier is how many bits do we

1446
01:07:22,369 --> 01:07:27,200
want to lay aside and how many bits do

1447
01:07:24,589 --> 01:07:30,349
we think that we can we can lay aside in

1448
01:07:27,200 --> 01:07:34,399
v1 for a v1 5 or v2 solution for this

1449
01:07:30,349 --> 01:07:38,329
because it would be sad if we decided

1450
01:07:34,400 --> 01:07:42,019
that we actually do want this we

1451
01:07:38,329 --> 01:07:44,119
actually have found a way to like I

1452
01:07:42,019 --> 01:07:47,479
think that you know this actually meets

1453
01:07:44,119 --> 01:07:50,420
the requirements of exposing the loss

1454
01:07:47,479 --> 01:07:52,549
information there's a big question about

1455
01:07:50,420 --> 01:07:54,319
privacy and security which we'd have to

1456
01:07:52,549 --> 01:07:57,079
dig into pretty deeply I think it's a

1457
01:07:54,319 --> 01:07:58,609
it's a it's less clear than the story

1458
01:07:57,079 --> 01:08:00,259
was for the spin bit and the story for

1459
01:07:58,609 --> 01:08:05,450
this binned it was two papers worth of

1460
01:08:00,259 --> 01:08:06,469
not very clear it would be a shame if we

1461
01:08:05,450 --> 01:08:07,549
decide we want to do this we figure out

1462
01:08:06,469 --> 01:08:10,219
a way to do it and then the bits are

1463
01:08:07,549 --> 01:08:11,960
gone so I think that is a discussion

1464
01:08:10,219 --> 01:08:12,979
that we we probably should have and then

1465
01:08:11,960 --> 01:08:15,049
we can defer the rest of the discussion

1466
01:08:12,979 --> 01:08:16,639
with respect to how exactly we do this

1467
01:08:15,049 --> 01:08:18,170
because I think there are probably ways

1468
01:08:16,639 --> 01:08:19,909
that look a lot like this but are subtly

1469
01:08:18,170 --> 01:08:21,980
different they have different

1470
01:08:19,908 --> 01:08:23,028
characteristics I have kind of it the

1471
01:08:21,979 --> 01:08:24,379
beginning of an idea that I haven't

1472
01:08:23,029 --> 01:08:25,279
actually had the time to work on and I

1473
01:08:24,380 --> 01:08:26,569
don't really want to say hey you should

1474
01:08:25,279 --> 01:08:28,940
do my thing even though I've written it

1475
01:08:26,569 --> 01:08:31,339
down because it's stupid but I think

1476
01:08:28,939 --> 01:08:32,899
that we can we can discuss like other

1477
01:08:31,339 --> 01:08:33,920
techniques here separately from the

1478
01:08:32,899 --> 01:08:35,420
weather we want to do this or not

1479
01:08:33,920 --> 01:08:36,889
and that's separate from the how do we

1480
01:08:35,420 --> 01:08:38,769
make sure that we have the space to do

1481
01:08:36,889 --> 01:08:41,259
it when we're finally done

1482
01:08:38,769 --> 01:08:42,639
um so we have a pretty long queue so

1483
01:08:41,259 --> 01:08:44,710
let's just keep them brief

1484
01:08:42,639 --> 01:08:47,380
this is dkg I'm Jabbar scribing I'm

1485
01:08:44,710 --> 01:08:48,730
channeling Chris lemons he says I think

1486
01:08:47,380 --> 01:08:51,130
the question for excluding is from quick

1487
01:08:48,729 --> 01:08:52,718
v1 is this for the lack of a packet loss

1488
01:08:51,130 --> 01:08:54,639
detection mechanism and quick prevent

1489
01:08:52,719 --> 01:08:55,960
operators from implementing it perhaps

1490
01:08:54,639 --> 01:08:57,400
some of those companies who have

1491
01:08:55,960 --> 01:09:02,099
expressed strong interest in this can

1492
01:08:57,399 --> 01:09:02,098
comment on how blocking this is or isn't

1493
01:09:02,788 --> 01:09:07,658
Ian's by at Google I I definitely think

1494
01:09:05,769 --> 01:09:10,179
we do not need to put this in quickly

1495
01:09:07,658 --> 01:09:13,089
one fairly we've already kind of I

1496
01:09:10,179 --> 01:09:16,359
thought said this once but I would like

1497
01:09:13,089 --> 01:09:18,038
to say that if there is something some

1498
01:09:16,359 --> 01:09:19,809
small change we need to make two quick

1499
01:09:18,038 --> 01:09:22,389
v1 to make it easier to actually run

1500
01:09:19,809 --> 01:09:24,369
experiments and get data about this

1501
01:09:22,389 --> 01:09:26,380
mechanism as well as potentially other

1502
01:09:24,368 --> 01:09:28,259
competing mechanisms because I'm also

1503
01:09:26,380 --> 01:09:30,788
not 100% convinced this is the best

1504
01:09:28,259 --> 01:09:32,439
mechanism then I am amenable to that and

1505
01:09:30,788 --> 01:09:35,318
I don't think that should be considered

1506
01:09:32,439 --> 01:09:36,669
necessarily out of scope so I agree with

1507
01:09:35,319 --> 01:09:38,499
Brian on that point that I don't want us

1508
01:09:36,670 --> 01:09:40,299
to get into a situation where we could

1509
01:09:38,499 --> 01:09:42,219
never ever do this after we do quick v1

1510
01:09:40,299 --> 01:09:47,819
but we could also do quick v2 that would

1511
01:09:42,219 --> 01:09:50,109
be much better David's Knaus II Google

1512
01:09:47,819 --> 01:09:54,460
to echo some of the points are you made

1513
01:09:50,109 --> 01:10:00,219
I need to speak up sorry Wow

1514
01:09:54,460 --> 01:10:03,699
the the decision we've reached as a

1515
01:10:00,219 --> 01:10:06,219
working group a while back took a very

1516
01:10:03,699 --> 01:10:08,589
long time and a lot of energy I'm saying

1517
01:10:06,219 --> 01:10:11,440
that the decision was to add the spin

1518
01:10:08,590 --> 01:10:16,409
bit as one bit that is optional to

1519
01:10:11,440 --> 01:10:18,879
implement in this Bank this this is the

1520
01:10:16,409 --> 01:10:21,839
interesting research project I've read

1521
01:10:18,880 --> 01:10:25,929
the proposal it's interesting but

1522
01:10:21,840 --> 01:10:27,940
research takes time and I didn't see

1523
01:10:25,929 --> 01:10:30,099
anything in there that warranted

1524
01:10:27,940 --> 01:10:34,239
revisiting the working groups consensus

1525
01:10:30,099 --> 01:10:37,269
decision and also like from my

1526
01:10:34,239 --> 01:10:40,110
engineering understanding I think this

1527
01:10:37,269 --> 01:10:42,190
can fully be implemented as an extension

1528
01:10:40,110 --> 01:10:46,239
negotiate with a transport parameter and

1529
01:10:42,190 --> 01:10:49,299
then use those bits so I really strongly

1530
01:10:46,239 --> 01:10:51,999
in favor of declaring this out of scope

1531
01:10:49,300 --> 01:10:52,650
for quick view on and in scope of an

1532
01:10:51,999 --> 01:10:54,660
extension

1533
01:10:52,650 --> 01:10:56,250
and let's see that extension draft and

1534
01:10:54,660 --> 01:10:57,780
we can discuss it there we already have

1535
01:10:56,250 --> 01:10:59,700
a bunch of extensions

1536
01:10:57,780 --> 01:11:01,830
it might even ship at the same time as

1537
01:10:59,700 --> 01:11:03,450
quick view on but if it gets delayed

1538
01:11:01,830 --> 01:11:05,730
because of let's say the privacy review

1539
01:11:03,450 --> 01:11:07,230
it won't delay quick view want so let's

1540
01:11:05,730 --> 01:11:08,790
just keep it on the side and see what

1541
01:11:07,230 --> 01:11:09,179
comes out from it let's not delay quick

1542
01:11:08,790 --> 01:11:10,769
view

1543
01:11:09,180 --> 01:11:12,000
so just to be clear you would be

1544
01:11:10,770 --> 01:11:14,490
interested in looking at this as an

1545
01:11:12,000 --> 01:11:16,200
extension yes I would read the extension

1546
01:11:14,490 --> 01:11:18,570
graft would you put any effort into the

1547
01:11:16,200 --> 01:11:21,870
security and privacy review if it came

1548
01:11:18,570 --> 01:11:24,330
about I can't commit to that because

1549
01:11:21,870 --> 01:11:26,580
that kind of review takes a lot of time

1550
01:11:24,330 --> 01:11:28,950
but you know would you be open to it I'd

1551
01:11:26,580 --> 01:11:30,540
be open to it okay right now I want to

1552
01:11:28,950 --> 01:11:32,460
focus on shipping quick view on but like

1553
01:11:30,540 --> 01:11:36,180
we just open to it thank you that's good

1554
01:11:32,460 --> 01:11:38,060
information thanks to echo a few of the

1555
01:11:36,180 --> 01:11:40,170
things people been saying before um

1556
01:11:38,060 --> 01:11:41,790
certainly this should be sharable as an

1557
01:11:40,170 --> 01:11:43,530
extension if it's not then we failed in

1558
01:11:41,790 --> 01:11:45,660
our mechanism and that be nice to know

1559
01:11:43,530 --> 01:11:47,280
um so I think this also ties I'm saying

1560
01:11:45,660 --> 01:11:48,330
even was saying like if we find out

1561
01:11:47,280 --> 01:11:49,349
there's some reason we can't ship this

1562
01:11:48,330 --> 01:11:51,240
that was something the higher priority

1563
01:11:49,350 --> 01:11:53,900
to address chant this is an

1564
01:11:51,240 --> 01:11:56,730
extension that was any hyper rush now um

1565
01:11:53,900 --> 01:11:58,290
I am also not in favor of putting this

1566
01:11:56,730 --> 01:12:00,509
in quick v1 I feel like we spend a lot

1567
01:11:58,290 --> 01:12:03,960
of time litigating this previously and

1568
01:12:00,510 --> 01:12:05,670
this would reopen that on you know we're

1569
01:12:03,960 --> 01:12:07,530
gonna have it's true we'll have some

1570
01:12:05,670 --> 01:12:08,640
time in this sort of like you know in

1571
01:12:07,530 --> 01:12:09,840
this sort of like somewhat like I don't

1572
01:12:08,640 --> 01:12:11,220
period when you know we're doing

1573
01:12:09,840 --> 01:12:13,050
deployments to think about things but I

1574
01:12:11,220 --> 01:12:16,020
think we have uses for that time and um

1575
01:12:13,050 --> 01:12:17,580
and I mean that the exact same resources

1576
01:12:16,020 --> 01:12:18,600
which we need to like do other offenses

1577
01:12:17,580 --> 01:12:19,950
I think are more important would be

1578
01:12:18,600 --> 01:12:22,230
consumed during the security in privacy

1579
01:12:19,950 --> 01:12:23,849
review so I think the idea we're gonna

1580
01:12:22,230 --> 01:12:25,650
play as Christian put its schedule

1581
01:12:23,850 --> 01:12:27,090
chicken and like you know if this is

1582
01:12:25,650 --> 01:12:28,349
somehow finished that maybe it just gets

1583
01:12:27,090 --> 01:12:29,730
crammed into the last minute I think

1584
01:12:28,350 --> 01:12:31,920
it's like super unfortunate we shouldn't

1585
01:12:29,730 --> 01:12:36,690
do that um I know that correctly

1586
01:12:31,920 --> 01:12:37,890
um and um I as with David I at some

1587
01:12:36,690 --> 01:12:39,330
point we were willing to like take a

1588
01:12:37,890 --> 01:12:40,950
look at the screen privacy of this but I

1589
01:12:39,330 --> 01:12:43,530
think it's not I don't think it's a haha

1590
01:12:40,950 --> 01:12:49,710
I super high priority for me okay thank

1591
01:12:43,530 --> 01:12:51,900
you Chris box BT as someone who designs

1592
01:12:49,710 --> 01:12:57,540
and runs and mobile network so I can't

1593
01:12:51,900 --> 01:12:58,320
speak up just a bit sorry as yeah Chris

1594
01:12:57,540 --> 01:13:02,070
box BT

1595
01:12:58,320 --> 01:13:04,410
so my day job is designing running a

1596
01:13:02,070 --> 01:13:05,490
mobile network so as part of that

1597
01:13:04,410 --> 01:13:07,920
[Music]

1598
01:13:05,490 --> 01:13:10,080
I just want to reiterate the need to

1599
01:13:07,920 --> 01:13:11,810
actually understand packet loss and

1600
01:13:10,080 --> 01:13:14,850
where it occurs in their network because

1601
01:13:11,810 --> 01:13:18,090
without that yeah the network will

1602
01:13:14,850 --> 01:13:21,720
inevitably deteriorate so whether this

1603
01:13:18,090 --> 01:13:26,210
how it's done and whether it's done now

1604
01:13:21,720 --> 01:13:28,380
or later I don't mind how it's done but

1605
01:13:26,210 --> 01:13:30,930
we don't want to wait too long because

1606
01:13:28,380 --> 01:13:32,550
you're then incurring those issues that

1607
01:13:30,930 --> 01:13:38,460
they will generate particularly if it's

1608
01:13:32,550 --> 01:13:40,980
adopted a lot so and to address the

1609
01:13:38,460 --> 01:13:42,600
other point no we don't block quick we

1610
01:13:40,980 --> 01:13:45,540
have no intention of locking quick it's

1611
01:13:42,600 --> 01:13:47,970
got a lot of good properties but please

1612
01:13:45,540 --> 01:13:57,650
make it mine a manageable and operate of

1613
01:13:47,970 --> 01:14:05,880
all so gory Fairhurst

1614
01:13:57,650 --> 01:14:07,860
I think this sort of use of the bytes

1615
01:14:05,880 --> 01:14:11,820
that we call transport is within the

1616
01:14:07,860 --> 01:14:14,849
transport area okay I think this use of

1617
01:14:11,820 --> 01:14:16,920
bytes which we put into the header is

1618
01:14:14,850 --> 01:14:19,890
part of something we do in transport

1619
01:14:16,920 --> 01:14:22,680
area IP performance metrics is part of

1620
01:14:19,890 --> 01:14:24,240
this group so have other other groups

1621
01:14:22,680 --> 01:14:27,060
looked at transport issues to do with

1622
01:14:24,240 --> 01:14:29,820
mobility and lost detection latency

1623
01:14:27,060 --> 01:14:32,070
detection etc so I think we need to stop

1624
01:14:29,820 --> 01:14:34,500
going on that this is not part of a

1625
01:14:32,070 --> 01:14:36,990
layer whatever at a layer is is part of

1626
01:14:34,500 --> 01:14:38,670
the transport area from my opinion and I

1627
01:14:36,990 --> 01:14:41,580
think we should do this whether this

1628
01:14:38,670 --> 01:14:43,410
proposal is right now I can't judge

1629
01:14:41,580 --> 01:14:45,690
because I guess we spent so much time in

1630
01:14:43,410 --> 01:14:47,099
the working group not talking about this

1631
01:14:45,690 --> 01:14:49,919
we haven't actually looked at these

1632
01:14:47,100 --> 01:14:51,570
things in enough detail so this could

1633
01:14:49,920 --> 01:14:53,940
have a bad implication it makes quick

1634
01:14:51,570 --> 01:14:55,590
and experimental protocol based on

1635
01:14:53,940 --> 01:14:57,509
deployment and whether it's manageable

1636
01:14:55,590 --> 01:15:00,990
which was never really part of what I

1637
01:14:57,510 --> 01:15:03,420
was hoping for in quick so if we accept

1638
01:15:00,990 --> 01:15:04,800
this and we look forward then quick v2

1639
01:15:03,420 --> 01:15:06,990
will do something good and we can design

1640
01:15:04,800 --> 01:15:08,490
it I I don't know how to solve this but

1641
01:15:06,990 --> 01:15:11,690
I just think we need to stop talking

1642
01:15:08,490 --> 01:15:11,690
about it being at the wrong layer

1643
01:15:15,849 --> 01:15:22,699
so this is also about layering and

1644
01:15:18,860 --> 01:15:24,589
because I've heard initially the opinion

1645
01:15:22,699 --> 01:15:27,678
that we should do nothing here because

1646
01:15:24,590 --> 01:15:29,860
it's actually not pretty and it may be

1647
01:15:27,679 --> 01:15:33,949
actually our city actually not pretty

1648
01:15:29,860 --> 01:15:37,190
but the whole reason why Google went

1649
01:15:33,949 --> 01:15:41,360
with layering quick on top of UDP and

1650
01:15:37,190 --> 01:15:43,638
not on top of IP is because of pragma

1651
01:15:41,360 --> 01:15:46,098
pragmatic realization that that the only

1652
01:15:43,639 --> 01:15:48,229
thing that actually works and the

1653
01:15:46,099 --> 01:15:52,489
current internet as we have it so it is

1654
01:15:48,229 --> 01:15:54,320
in the kind of spirit of quic is that we

1655
01:15:52,489 --> 01:15:57,829
have to be pragmatic and understand what

1656
01:15:54,320 --> 01:16:00,650
works and actually do it that way now

1657
01:15:57,829 --> 01:16:04,639
meanwhile there are discussions NTS v WG

1658
01:16:00,650 --> 01:16:10,670
how to do it the right right way but one

1659
01:16:04,639 --> 01:16:13,309
could not stop the other 10:30 speaking

1660
01:16:10,670 --> 01:16:15,559
clearly we must absolutely do this or

1661
01:16:13,309 --> 01:16:24,469
people might deploy ecn and since we

1662
01:16:15,559 --> 01:16:25,969
have to prevent that oh wait my actual

1663
01:16:24,469 --> 01:16:27,590
point here is we have had a long

1664
01:16:25,969 --> 01:16:29,539
discussion of this we are very very late

1665
01:16:27,590 --> 01:16:33,369
I am happy to work on this if it is not

1666
01:16:29,539 --> 01:16:36,170
gating for v1 but I I strongly believe

1667
01:16:33,369 --> 01:16:38,210
we should not set aside any bits for it

1668
01:16:36,170 --> 01:16:39,829
now because those will get squatted on

1669
01:16:38,210 --> 01:16:41,239
very quickly by people who have other

1670
01:16:39,829 --> 01:16:41,780
experiments they wish to run with the

1671
01:16:41,239 --> 01:16:43,518
network

1672
01:16:41,780 --> 01:16:46,369
some of them deal it areas to the

1673
01:16:43,519 --> 01:16:48,349
network we should have a real design

1674
01:16:46,369 --> 01:16:50,539
process and if you need somebody else to

1675
01:16:48,349 --> 01:16:53,210
be Stuckey to corral that I will once

1676
01:16:50,539 --> 01:17:00,380
again volunteer but please no gating

1677
01:16:53,210 --> 01:17:01,639
where we are moving for now yeah mom

1678
01:17:00,380 --> 01:17:03,499
Thompson I'm just gonna add to the

1679
01:17:01,639 --> 01:17:05,900
chorus if those saying that this is

1680
01:17:03,499 --> 01:17:10,190
gonna take longer than I'm willing to

1681
01:17:05,900 --> 01:17:13,848
tolerate I'm looking at being done with

1682
01:17:10,190 --> 01:17:17,150
the core transport protocol very soon

1683
01:17:13,849 --> 01:17:19,969
now as in this month from the

1684
01:17:17,150 --> 01:17:22,129
perspective of the issues you saw we

1685
01:17:19,969 --> 01:17:23,900
discussed the issues here and we got to

1686
01:17:22,130 --> 01:17:28,010
the end of the list in very short amount

1687
01:17:23,900 --> 01:17:28,730
of time and that's indicative to me of

1688
01:17:28,010 --> 01:17:32,030
something that

1689
01:17:28,730 --> 01:17:33,200
basically ready ready to go we're we're

1690
01:17:32,030 --> 01:17:34,489
gonna hold this back a little bit

1691
01:17:33,200 --> 01:17:37,700
because we'll want to get some

1692
01:17:34,489 --> 01:17:40,160
deployment experience but other than

1693
01:17:37,700 --> 01:17:42,400
that we're done and the spin bit

1694
01:17:40,160 --> 01:17:48,290
discussion took an extraordinarily long

1695
01:17:42,400 --> 01:17:49,580
amount of time I just wanted to point

1696
01:17:48,290 --> 01:17:51,140
out also people have been talking about

1697
01:17:49,580 --> 01:17:54,380
extension I think they're also thinking

1698
01:17:51,140 --> 01:17:57,560
about minting new versions I don't want

1699
01:17:54,380 --> 01:18:02,180
to go to the point of reserving bits in

1700
01:17:57,560 --> 01:18:04,850
v1 for speculative reasons we have bits

1701
01:18:02,180 --> 01:18:11,200
lying around because well they come in

1702
01:18:04,850 --> 01:18:11,200
multiples of eight and that's really all

1703
01:18:11,230 --> 01:18:17,000
so I I don't want to I don't know what

1704
01:18:15,710 --> 01:18:19,460
start speculating about what we might

1705
01:18:17,000 --> 01:18:24,010
need bits for later if we need bits for

1706
01:18:19,460 --> 01:18:26,840
something later we have in the order of

1707
01:18:24,010 --> 01:18:30,230
9600 of them in any given packet we

1708
01:18:26,840 --> 01:18:32,480
should probably use them and we've done

1709
01:18:30,230 --> 01:18:34,160
what we can to protect our ability to

1710
01:18:32,480 --> 01:18:35,509
use those packets through the invariants

1711
01:18:34,160 --> 01:18:38,330
and the encryption and all the other

1712
01:18:35,510 --> 01:18:40,370
things we're doing here so I'm not super

1713
01:18:38,330 --> 01:18:42,290
concerned about that sort of thing I

1714
01:18:40,370 --> 01:18:44,870
think the ship has sailed on whether

1715
01:18:42,290 --> 01:18:48,019
something like spin or lost signals can

1716
01:18:44,870 --> 01:18:50,360
be invariant in the protocol take that

1717
01:18:48,020 --> 01:18:51,739
as it as you will if you you're

1718
01:18:50,360 --> 01:18:53,660
interested in receiving their signals

1719
01:18:51,739 --> 01:18:56,299
that's a bit unfortunate if you're not

1720
01:18:53,660 --> 01:18:59,720
then you might think that's a feature

1721
01:18:56,300 --> 01:19:03,640
but but that's where we're at so I think

1722
01:18:59,720 --> 01:19:07,610
that the planners proposed is is fine I

1723
01:19:03,640 --> 01:19:09,380
too can participate in analyzing these

1724
01:19:07,610 --> 01:19:12,200
sorts of things again that will depend

1725
01:19:09,380 --> 01:19:14,330
on at the time that that decision is

1726
01:19:12,200 --> 01:19:15,679
made where this fits in with all my

1727
01:19:14,330 --> 01:19:17,290
other priorities and I'm sure that

1728
01:19:15,680 --> 01:19:19,670
everyone else is in that same position

1729
01:19:17,290 --> 01:19:21,470
so so let's go ahead and cut the queue

1730
01:19:19,670 --> 01:19:23,989
and drain it and I'd ask the folks

1731
01:19:21,470 --> 01:19:25,790
remaining to withhold from the the

1732
01:19:23,989 --> 01:19:28,879
instinct to pontificate a little too

1733
01:19:25,790 --> 01:19:32,950
much this is general Congo more from the

1734
01:19:28,880 --> 01:19:35,150
ACLU please please do not make this

1735
01:19:32,950 --> 01:19:38,469
something that is required for quickly

1736
01:19:35,150 --> 01:19:40,940
one if it's proposed as an extension

1737
01:19:38,469 --> 01:19:42,650
again similar to the other commenters

1738
01:19:40,940 --> 01:19:44,030
like I would be willing to look at

1739
01:19:42,650 --> 01:19:47,150
a little bit I think if I can make the

1740
01:19:44,030 --> 01:19:49,009
time for it I am NOT confident that this

1741
01:19:47,150 --> 01:19:51,799
is a good idea I'm not confident it's

1742
01:19:49,010 --> 01:19:54,860
good idea in terms of ossification among

1743
01:19:51,800 --> 01:19:57,469
other things so but yeah but whatever

1744
01:19:54,860 --> 01:20:06,830
whatever happens please please not part

1745
01:19:57,469 --> 01:20:10,310
of quickly one cause an extinction and

1746
01:20:06,830 --> 01:20:12,800
I'm also not opposed to leaving some

1747
01:20:10,310 --> 01:20:14,120
bits in vivo I used that it might use

1748
01:20:12,800 --> 01:20:17,060
for experiments

1749
01:20:14,120 --> 01:20:19,309
though I'd also you there those bits

1750
01:20:17,060 --> 01:20:22,070
can't be a brown bag that an in-point

1751
01:20:19,310 --> 01:20:23,900
can run an experiment because there

1752
01:20:22,070 --> 01:20:25,790
should be a bilateral agreement between

1753
01:20:23,900 --> 01:20:28,759
the client and server to run experiments

1754
01:20:25,790 --> 01:20:32,870
with the understanding of what the risks

1755
01:20:28,760 --> 01:20:35,090
are I mean and that means that the bits

1756
01:20:32,870 --> 01:20:36,620
cannot be a problem so if we are going

1757
01:20:35,090 --> 01:20:39,199
to run experiment there should be a

1758
01:20:36,620 --> 01:20:44,449
bilateral agreement on plant X but the

1759
01:20:39,199 --> 01:20:48,589
exact exposure is Christian we tomorrow

1760
01:20:44,449 --> 01:20:51,769
I agree with the other speakers that

1761
01:20:48,590 --> 01:20:53,179
this should not be part of v1 I mean the

1762
01:20:51,770 --> 01:20:56,060
measurement argument

1763
01:20:53,179 --> 01:20:58,940
I understand but a measurement document

1764
01:20:56,060 --> 01:21:01,400
in a network will only take shape that

1765
01:20:58,940 --> 01:21:03,650
force when the vast majority of the

1766
01:21:01,400 --> 01:21:06,920
traffic is quick and we are not there

1767
01:21:03,650 --> 01:21:10,549
yet so it's clearly not a v1 issue on

1768
01:21:06,920 --> 01:21:13,130
the other hand I am very happy to work

1769
01:21:10,550 --> 01:21:15,920
on that as an extension to help people

1770
01:21:13,130 --> 01:21:18,290
in given the extension and to study the

1771
01:21:15,920 --> 01:21:20,030
privacy issue detailing at that let's

1772
01:21:18,290 --> 01:21:22,850
remember that the study of the privacy

1773
01:21:20,030 --> 01:21:25,309
issue for the spin bit took us several

1774
01:21:22,850 --> 01:21:27,199
months and we don't have several months

1775
01:21:25,310 --> 01:21:29,560
between now and when we want to ship v1

1776
01:21:27,199 --> 01:21:33,759
so let's do it properly not rush it and

1777
01:21:29,560 --> 01:21:33,760
I'll be happy to work on it later

1778
01:21:35,350 --> 01:21:39,890
Jahangir I'll very quickly just agree

1779
01:21:38,420 --> 01:21:42,590
that yeah this shouldn't join it is

1780
01:21:39,890 --> 01:21:44,949
take-up sorry and they'll quickly agree

1781
01:21:42,590 --> 01:21:49,850
that this shouldn't be part of v1

1782
01:21:44,949 --> 01:21:52,519
separately we are designing not just

1783
01:21:49,850 --> 01:21:53,989
four mechanisms that we want but we also

1784
01:21:52,520 --> 01:21:55,489
want to keep in mind that we are

1785
01:21:53,989 --> 01:21:57,478
designing for

1786
01:21:55,489 --> 01:21:59,218
what I mean by that is that we've

1787
01:21:57,479 --> 01:22:01,050
designed the spin bit and if you were to

1788
01:21:59,219 --> 01:22:02,699
think of that as a template the spin bit

1789
01:22:01,050 --> 01:22:04,530
is something that is optional the end

1790
01:22:02,699 --> 01:22:06,178
points may or may not spin it we have

1791
01:22:04,530 --> 01:22:08,309
absolutely no experience at this point

1792
01:22:06,179 --> 01:22:09,829
to see whether that's actually going to

1793
01:22:08,309 --> 01:22:12,539
get deployed in the wild or not

1794
01:22:09,829 --> 01:22:14,489
designing more bits that are not going

1795
01:22:12,539 --> 01:22:15,239
to get deployed potentially makes no

1796
01:22:14,489 --> 01:22:17,428
sense to me

1797
01:22:15,239 --> 01:22:18,989
so I'd like to wait until wait and see

1798
01:22:17,429 --> 01:22:20,849
if he actually gets some traction on the

1799
01:22:18,989 --> 01:22:23,820
spin but before we talk about adding

1800
01:22:20,849 --> 01:22:30,119
more bits that are optional and will may

1801
01:22:23,820 --> 01:22:31,829
not get spend Tommy Polly Apple so I

1802
01:22:30,119 --> 01:22:33,739
mean echoing a lot of people's comments

1803
01:22:31,829 --> 01:22:36,900
I don't think this is appropriate to

1804
01:22:33,739 --> 01:22:39,329
heffers a requirement for your 4v1 but I

1805
01:22:36,900 --> 01:22:43,829
think it is very useful to look into and

1806
01:22:39,329 --> 01:22:46,409
to echo Christians point I think it will

1807
01:22:43,829 --> 01:22:48,630
be actually a much better mechanism if

1808
01:22:46,409 --> 01:22:51,058
we wait because once we get more

1809
01:22:48,630 --> 01:22:53,130
information we will be able to do far

1810
01:22:51,059 --> 01:22:55,739
better experimentation around different

1811
01:22:53,130 --> 01:22:57,869
extensions right now the traffic we see

1812
01:22:55,739 --> 01:23:00,839
we have a lot of what browser traffic

1813
01:22:57,869 --> 01:23:02,280
essentially in one type of pattern we

1814
01:23:00,840 --> 01:23:04,949
are going to start seeing a lot more use

1815
01:23:02,280 --> 01:23:06,749
cases different types of traffic and the

1816
01:23:04,949 --> 01:23:09,178
fact that we are now essentially moving

1817
01:23:06,749 --> 01:23:10,739
things that used to be implicit and now

1818
01:23:09,179 --> 01:23:13,769
we're putting them across a encryption

1819
01:23:10,739 --> 01:23:15,329
boundary and having you know explicit

1820
01:23:13,769 --> 01:23:16,889
bits this is something we haven't done

1821
01:23:15,329 --> 01:23:19,169
very often before and we need to figure

1822
01:23:16,889 --> 01:23:21,749
out how it works and even if we get

1823
01:23:19,169 --> 01:23:24,510
experienced just today with how it works

1824
01:23:21,749 --> 01:23:26,969
for browser traffic that may not be the

1825
01:23:24,510 --> 01:23:30,119
right solution long term so I think it's

1826
01:23:26,969 --> 01:23:37,010
better to do quick experimentations as

1827
01:23:30,119 --> 01:23:39,039
we can with v1 as extensions go heavier

1828
01:23:37,010 --> 01:23:40,929
so a completely

1829
01:23:39,039 --> 01:23:44,259
that we did it's an experimental thing

1830
01:23:40,929 --> 01:23:47,409
and which means that we need to run the

1831
01:23:44,260 --> 01:23:48,939
experiment to see how it works so we

1832
01:23:47,409 --> 01:23:54,549
need to be able to run an experiment to

1833
01:23:48,939 --> 01:23:56,799
see how it works okay so you know this

1834
01:23:54,549 --> 01:23:58,569
is one of the the mechanisms that you

1835
01:23:56,799 --> 01:24:00,519
know for it to work and for it to give

1836
01:23:58,569 --> 01:24:03,039
the operators what they want they need

1837
01:24:00,519 --> 01:24:05,589
the cooperation of the endpoints and

1838
01:24:03,039 --> 01:24:08,949
from what I'm hearing from the implement

1839
01:24:05,589 --> 01:24:10,539
implementers is that they don't want

1840
01:24:08,949 --> 01:24:12,398
this to be on the critical path for

1841
01:24:10,539 --> 01:24:14,499
quick v1 but they're very open to it as

1842
01:24:12,399 --> 01:24:15,669
an extension and importantly I heard a

1843
01:24:14,499 --> 01:24:17,799
number of people say that they were

1844
01:24:15,669 --> 01:24:20,709
willing to consider helping out with

1845
01:24:17,799 --> 01:24:22,659
that Security and Privacy evaluation

1846
01:24:20,709 --> 01:24:27,188
which for me is critical that needs to

1847
01:24:22,659 --> 01:24:30,789
be a reasonable attempt to evaluate the

1848
01:24:27,189 --> 01:24:32,799
properties of the proposal Brian hi

1849
01:24:30,789 --> 01:24:35,259
Marcus like actually I saw a few people

1850
01:24:32,799 --> 01:24:37,359
who were in line um said yeah I would be

1851
01:24:35,260 --> 01:24:38,829
willing to work on this but not in v1 I

1852
01:24:37,359 --> 01:24:41,769
don't think anyone said I'd be willing

1853
01:24:38,829 --> 01:24:43,839
to work on this you know faster than v1

1854
01:24:41,769 --> 01:24:45,129
other than the proponents could we do

1855
01:24:43,839 --> 01:24:46,568
like just a quick show of hands in the

1856
01:24:45,129 --> 01:24:49,209
room who would be willing to work on

1857
01:24:46,569 --> 01:24:51,280
sort of the security privacy design of

1858
01:24:49,209 --> 01:24:52,869
this yeah there's some noise back there

1859
01:24:51,280 --> 01:24:55,599
who would be willing to work on the

1860
01:24:52,869 --> 01:24:57,759
security privacy design of this after

1861
01:24:55,599 --> 01:24:58,869
things ship right like so it's kind of

1862
01:24:57,760 --> 01:25:01,719
like that who's interested in the design

1863
01:24:58,869 --> 01:25:04,119
team thing that we've asked before yeah

1864
01:25:01,719 --> 01:25:06,280
yeah we're getting did I just ask that

1865
01:25:04,119 --> 01:25:10,058
question okay yeah oh yeah you're trying

1866
01:25:06,280 --> 01:25:11,829
to chair the working group again right

1867
01:25:10,059 --> 01:25:14,229
it's a good selection of able I think

1868
01:25:11,829 --> 01:25:16,478
it's at least as healthy as what we had

1869
01:25:14,229 --> 01:25:18,369
for this pin bit and making me that's I

1870
01:25:16,479 --> 01:25:20,289
wanted to see whether that was yeah

1871
01:25:18,369 --> 01:25:22,058
thanks right my concern before this was

1872
01:25:20,289 --> 01:25:23,349
that if no one was willing even to put

1873
01:25:22,059 --> 01:25:26,530
that work and we would be in a bit of a

1874
01:25:23,349 --> 01:25:27,849
pickle yeah and so we have a group of

1875
01:25:26,530 --> 01:25:28,809
people who are willing to work on it as

1876
01:25:27,849 --> 01:25:31,269
long as it's not on the critical path

1877
01:25:28,809 --> 01:25:33,760
for v1 and so I think that's the path

1878
01:25:31,269 --> 01:25:36,519
that is most likely to give us a

1879
01:25:33,760 --> 01:25:40,299
successful outcome for some definition

1880
01:25:36,519 --> 01:25:41,949
of success and so what I'd recommend to

1881
01:25:40,299 --> 01:25:44,379
you igor's take you and your co-authors

1882
01:25:41,949 --> 01:25:46,719
draft convert into something that looks

1883
01:25:44,379 --> 01:25:48,339
more like an extension and we'll talk

1884
01:25:46,719 --> 01:25:50,649
about this a bit more tomorrow but we're

1885
01:25:48,339 --> 01:25:52,510
talking about how we can take on

1886
01:25:50,649 --> 01:25:53,559
extension work in this working group

1887
01:25:52,510 --> 01:25:55,119
and that could be something that just

1888
01:25:53,559 --> 01:25:59,050
like tomorrow we're having load balancer

1889
01:25:55,119 --> 01:26:00,940
and and the unreliable delivery proposed

1890
01:25:59,050 --> 01:26:02,980
extensions you can propose an extension

1891
01:26:00,940 --> 01:26:06,039
the only question on my mind for that is

1892
01:26:02,980 --> 01:26:08,199
timeframe whether it's better to do that

1893
01:26:06,039 --> 01:26:10,090
in the zurich interim or which we've

1894
01:26:08,199 --> 01:26:13,419
announced or whether it's better to wait

1895
01:26:10,090 --> 01:26:15,519
we have a broader audience for it in in

1896
01:26:13,420 --> 01:26:17,079
the vancouver meeting but we can take

1897
01:26:15,519 --> 01:26:20,380
that discussion offline and find the

1898
01:26:17,079 --> 01:26:22,030
right time for for you it so I think

1899
01:26:20,380 --> 01:26:23,349
that's our from from listening to the

1900
01:26:22,030 --> 01:26:25,210
mic line and what's happened in the room

1901
01:26:23,349 --> 01:26:26,710
I think that's the plan for it I think

1902
01:26:25,210 --> 01:26:29,079
we'll close this issue as not in scope

1903
01:26:26,710 --> 01:26:30,429
for quickly one but anticipate an

1904
01:26:29,079 --> 01:26:33,340
extension draft that we can discuss in

1905
01:26:30,429 --> 01:26:40,449
the future is is everyone happy with

1906
01:26:33,340 --> 01:26:43,929
that I'm seeing nodding heads and as the

1907
01:26:40,449 --> 01:26:46,928
transport you need to be know oh yeah I

1908
01:26:43,929 --> 01:26:53,230
need more water as the transporter

1909
01:26:46,929 --> 01:26:56,769
working group yeah okay I'm talking

1910
01:26:53,230 --> 01:26:58,299
right and yeah we're with you also to

1911
01:26:56,769 --> 01:27:00,460
try and make sure there's a home for

1912
01:26:58,300 --> 01:27:02,199
this because if the if there is energy

1913
01:27:00,460 --> 01:27:04,929
here to develop this then it should be

1914
01:27:02,199 --> 01:27:06,699
here and if there are central mechanisms

1915
01:27:04,929 --> 01:27:08,860
that are generic across things then

1916
01:27:06,699 --> 01:27:11,169
maybe they could be in this work here in

1917
01:27:08,860 --> 01:27:13,360
TSP WG but we should do this in one

1918
01:27:11,170 --> 01:27:16,030
place your place should be a great place

1919
01:27:13,360 --> 01:27:17,230
if you've got an extension okay great

1920
01:27:16,030 --> 01:27:20,018
definitely make sure we can coordinate

1921
01:27:17,230 --> 01:27:24,339
that any comment from Miriam from an ad

1922
01:27:20,019 --> 01:27:29,050
perspective you're happy okay thank you

1923
01:27:24,340 --> 01:27:30,550
all right let's move on I don't think

1924
01:27:29,050 --> 01:27:32,530
there are any other triage issues we

1925
01:27:30,550 --> 01:27:35,760
need to discuss right now unless the

1926
01:27:32,530 --> 01:27:39,039
editors want to point any out do you I

1927
01:27:35,760 --> 01:27:41,380
submitted the the slides for the other

1928
01:27:39,039 --> 01:27:43,480
issue that we skipped over if you want

1929
01:27:41,380 --> 01:27:46,630
to accept that PR and pull it up which

1930
01:27:43,480 --> 01:27:49,839
other issue the LPN one that's an HTTP

1931
01:27:46,630 --> 01:27:53,909
issue right yeah I noticed that it

1932
01:27:49,840 --> 01:27:57,460
flipped parity a little while back so we

1933
01:27:53,909 --> 01:27:59,799
we've concluded that the the text that

1934
01:27:57,460 --> 01:28:01,570
would need to change is an HTTP but it's

1935
01:27:59,800 --> 01:28:04,840
a principle that we probably want to

1936
01:28:01,570 --> 01:28:06,160
apply to all protocols using quick so we

1937
01:28:04,840 --> 01:28:08,380
can discuss it either way

1938
01:28:06,160 --> 01:28:09,309
well so next is recovery an HTTP issues

1939
01:28:08,380 --> 01:28:13,930
so we can start with that one if you

1940
01:28:09,310 --> 01:28:17,410
like works for me yeah we've got a half

1941
01:28:13,930 --> 01:28:18,640
an hour so so good okay you submitted

1942
01:28:17,410 --> 01:28:35,230
that to the working group materials rep

1943
01:28:18,640 --> 01:28:42,340
oh okay which one apparently we both

1944
01:28:35,230 --> 01:28:44,730
submitted it I'm gonna take Mike since

1945
01:28:42,340 --> 01:28:46,600
he's an editor for the document I guess

1946
01:28:44,730 --> 01:29:10,809
really hoping they're the same they're

1947
01:28:46,600 --> 01:29:25,320
the same flawed once you come on upfront

1948
01:29:10,810 --> 01:29:31,150
Mike you lost etherpad

1949
01:29:25,320 --> 01:29:32,889
we lost the Internet yeah I've mine has

1950
01:29:31,150 --> 01:29:38,679
not been terribly well connected I just

1951
01:29:32,890 --> 01:29:39,130
switched to tethering on my phone no

1952
01:29:38,680 --> 01:29:51,600
thank you

1953
01:29:39,130 --> 01:29:54,730
use your phone alright so step forward

1954
01:29:51,600 --> 01:29:56,680
basically the question is when you put

1955
01:29:54,730 --> 01:29:59,500
an ALP an identifier in the TLS

1956
01:29:56,680 --> 01:30:02,950
handshake are we talking about the

1957
01:29:59,500 --> 01:30:06,880
application layer LPN or are we talking

1958
01:30:02,950 --> 01:30:08,410
about the entire stack which is h3 all

1959
01:30:06,880 --> 01:30:12,520
the way down through the transport that

1960
01:30:08,410 --> 01:30:17,440
it uses now right now that's kind of a a

1961
01:30:12,520 --> 01:30:19,780
given because we only have quick v1 but

1962
01:30:17,440 --> 01:30:22,000
in fact we're actually

1963
01:30:19,780 --> 01:30:24,219
we're doing interrupts we have an LPN

1964
01:30:22,000 --> 01:30:27,010
token that says what h3 version we're

1965
01:30:24,220 --> 01:30:29,260
using and we also have a version in the

1966
01:30:27,010 --> 01:30:30,580
quick packet that says what transport

1967
01:30:29,260 --> 01:30:33,280
version were using and we have draft

1968
01:30:30,580 --> 01:30:36,370
versions we haven't been doing them out

1969
01:30:33,280 --> 01:30:40,170
of sync but technically we could as the

1970
01:30:36,370 --> 01:30:43,420
current state of things so look forward

1971
01:30:40,170 --> 01:30:46,960
so we kind of have to look at what the

1972
01:30:43,420 --> 01:30:48,250
world is going to look like we expect

1973
01:30:46,960 --> 01:30:52,270
that we're going to ship new versions of

1974
01:30:48,250 --> 01:30:54,070
both protocols we expect that at least

1975
01:30:52,270 --> 01:30:56,470
some quick versions we'll keep a

1976
01:30:54,070 --> 01:30:58,690
consistent interface to the application

1977
01:30:56,470 --> 01:31:01,210
or at least we'll be superset to the

1978
01:30:58,690 --> 01:31:04,599
'quran interface and therefore that h3

1979
01:31:01,210 --> 01:31:07,480
would work over those quick versions but

1980
01:31:04,600 --> 01:31:10,060
those application interfaces are not

1981
01:31:07,480 --> 01:31:12,070
invariant so there will also be some

1982
01:31:10,060 --> 01:31:15,580
quick versions that don't work with h3

1983
01:31:12,070 --> 01:31:19,030
and we need to figure out how we express

1984
01:31:15,580 --> 01:31:24,550
that and what what we do with that so

1985
01:31:19,030 --> 01:31:28,480
next so what do we do when there's a

1986
01:31:24,550 --> 01:31:32,350
quick to that h3 works over one option

1987
01:31:28,480 --> 01:31:34,660
is we meant a new a LPN token h3 q2 and

1988
01:31:32,350 --> 01:31:37,000
we say the tokens refer to the entire

1989
01:31:34,660 --> 01:31:41,410
stack another one is to say that the

1990
01:31:37,000 --> 01:31:43,360
client will offer h3 over quick - and if

1991
01:31:41,410 --> 01:31:44,830
you speak quick - hopefully you know

1992
01:31:43,360 --> 01:31:48,190
that that application protocol can be

1993
01:31:44,830 --> 01:31:50,350
spoken of that transport now

1994
01:31:48,190 --> 01:31:53,919
hypothetically you could get into a

1995
01:31:50,350 --> 01:31:55,750
state where the the server says well we

1996
01:31:53,920 --> 01:31:57,940
negotiated quick - but I don't believe

1997
01:31:55,750 --> 01:32:01,780
HD a p3 is a valid protocol over that

1998
01:31:57,940 --> 01:32:03,280
version you know how do you do that

1999
01:32:01,780 --> 01:32:07,410
without triggering the version fallback

2000
01:32:03,280 --> 01:32:10,330
on transport that gets a little messy

2001
01:32:07,410 --> 01:32:12,970
but the idea is we don't have a way to

2002
01:32:10,330 --> 01:32:18,880
identify what that application interface

2003
01:32:12,970 --> 01:32:22,660
is next the way we had originally SPECT

2004
01:32:18,880 --> 01:32:23,920
version negotiation was that you agreed

2005
01:32:22,660 --> 01:32:27,309
on the version of the transport layer

2006
01:32:23,920 --> 01:32:31,720
first and only then were you able to get

2007
01:32:27,310 --> 01:32:33,469
into what what was even in the LPN token

2008
01:32:31,720 --> 01:32:36,800
because you couldn't find it until you

2009
01:32:33,469 --> 01:32:38,960
with the transport version was now we

2010
01:32:36,800 --> 01:32:41,239
have this draft for version negotiation

2011
01:32:38,960 --> 01:32:44,060
where potentially you could be doing the

2012
01:32:41,239 --> 01:32:47,059
negotiations at the same time and you

2013
01:32:44,060 --> 01:32:50,090
could choose the transport version and

2014
01:32:47,060 --> 01:32:54,500
application version combination that you

2015
01:32:50,090 --> 01:32:56,570
like new the trade-off but we still have

2016
01:32:54,500 --> 01:32:58,730
to have a fallback path to the other

2017
01:32:56,570 --> 01:33:00,949
type of version negotiation if they're

2018
01:32:58,730 --> 01:33:03,530
not compatible but here we're talking

2019
01:33:00,949 --> 01:33:05,210
about we really have two concepts of

2020
01:33:03,530 --> 01:33:11,110
compatible versions because this is

2021
01:33:05,210 --> 01:33:13,340
compatible with the a player so next so

2022
01:33:11,110 --> 01:33:16,339
these two approaches if we stick in

2023
01:33:13,340 --> 01:33:19,010
renault service we might bring back the

2024
01:33:16,340 --> 01:33:20,540
quick version hint that says I speak h3

2025
01:33:19,010 --> 01:33:22,940
and I can speak it over these quick

2026
01:33:20,540 --> 01:33:25,850
versions or maybe we have to make

2027
01:33:22,940 --> 01:33:28,040
multiple advertisements of h3 which

2028
01:33:25,850 --> 01:33:30,680
implies quick one we also have to

2029
01:33:28,040 --> 01:33:32,690
advertise h3 q2 we also have to

2030
01:33:30,680 --> 01:33:35,780
advertise h4 which might imply a

2031
01:33:32,690 --> 01:33:38,330
particular quick version and that list

2032
01:33:35,780 --> 01:33:41,449
could get kind of long so we have to

2033
01:33:38,330 --> 01:33:44,350
figure out do we want complicated and

2034
01:33:41,449 --> 01:33:57,080
flexible or do we want simple but

2035
01:33:44,350 --> 01:33:59,570
everything is rigid next so HTTP 3 can't

2036
01:33:57,080 --> 01:34:03,050
define how it works with quick 2 because

2037
01:33:59,570 --> 01:34:04,969
quick 2 doesn't exist yet it can define

2038
01:34:03,050 --> 01:34:07,640
itself in terms of abstractions we

2039
01:34:04,969 --> 01:34:09,260
already have a lot of that in the

2040
01:34:07,640 --> 01:34:13,070
interface between the two documents now

2041
01:34:09,260 --> 01:34:16,420
we've parceled out required operations

2042
01:34:13,070 --> 01:34:18,710
for connections and streams if we

2043
01:34:16,420 --> 01:34:20,270
maintain those operations as being

2044
01:34:18,710 --> 01:34:23,719
possible in a future version of quick

2045
01:34:20,270 --> 01:34:25,699
then h3 should work but there's we don't

2046
01:34:23,719 --> 01:34:28,160
have a name for that interface this is

2047
01:34:25,699 --> 01:34:33,530
not object-oriented programming where we

2048
01:34:28,160 --> 01:34:38,150
can say requires interface streamable so

2049
01:34:33,530 --> 01:34:40,699
we don't really have a dependency on TLS

2050
01:34:38,150 --> 01:34:43,129
itself as the crypto handshake may be

2051
01:34:40,699 --> 01:34:44,989
although we have a lot of cases where we

2052
01:34:43,130 --> 01:34:47,250
assume that we're using TLS for

2053
01:34:44,989 --> 01:34:52,410
something that provides us with an

2054
01:34:47,250 --> 01:34:56,940
40 so what are the critical services and

2055
01:34:52,410 --> 01:34:58,500
do we want to define that next so one

2056
01:34:56,940 --> 01:35:00,030
option is to say we're not going to

2057
01:34:58,500 --> 01:35:01,410
solve this now that seems to be a

2058
01:35:00,030 --> 01:35:05,070
popular enter in the working group these

2059
01:35:01,410 --> 01:35:10,470
days we could say that HTTP 3 requires

2060
01:35:05,070 --> 01:35:12,480
quick version 1 and if quick V 2 keeps

2061
01:35:10,470 --> 01:35:16,860
the same shape of the application

2062
01:35:12,480 --> 01:35:19,919
interface then quick V 2 can extend the

2063
01:35:16,860 --> 01:35:21,240
definition of the age 3 al PN token or

2064
01:35:19,920 --> 01:35:23,520
we can have a separate graph that does

2065
01:35:21,240 --> 01:35:28,200
that or one that mints a new al pn tok

2066
01:35:23,520 --> 01:35:29,760
and we can solve that later but H 3 is

2067
01:35:28,200 --> 01:35:32,970
not the only protocol that's ever gonna

2068
01:35:29,760 --> 01:35:34,710
ride over quick and I don't think this

2069
01:35:32,970 --> 01:35:36,870
working group wants to be responsible

2070
01:35:34,710 --> 01:35:38,610
for curating which a player protocols

2071
01:35:36,870 --> 01:35:41,160
will work with quit which versions of

2072
01:35:38,610 --> 01:35:43,080
quick I don't know if that's work we

2073
01:35:41,160 --> 01:35:47,160
want to take off next and I believe

2074
01:35:43,080 --> 01:35:49,290
that's last sure so sometimes just just

2075
01:35:47,160 --> 01:35:51,389
to clarify this is to avoid that

2076
01:35:49,290 --> 01:35:54,720
situation where you have quick V 2 and

2077
01:35:51,390 --> 01:35:57,300
one side thinks that HTTP 3 is fine to

2078
01:35:54,720 --> 01:35:59,310
run on quickly too but the other is not

2079
01:35:57,300 --> 01:36:01,800
aware of the fact that it this is the

2080
01:35:59,310 --> 01:36:05,400
case and you end up with some form of

2081
01:36:01,800 --> 01:36:06,930
negotiation failure so we need we needed

2082
01:36:05,400 --> 01:36:09,269
to be the case that when when you

2083
01:36:06,930 --> 01:36:12,120
implement this new combination of things

2084
01:36:09,270 --> 01:36:13,890
you can be sure that the signaling that

2085
01:36:12,120 --> 01:36:16,470
you provide to the other side will be

2086
01:36:13,890 --> 01:36:17,880
understood and so we don't want to get

2087
01:36:16,470 --> 01:36:21,830
into a situation where a client or a

2088
01:36:17,880 --> 01:36:24,780
server decides to pick HTTP 3 on quick

2089
01:36:21,830 --> 01:36:25,530
version 2 but the client thinks that's a

2090
01:36:24,780 --> 01:36:27,360
terrible idea

2091
01:36:25,530 --> 01:36:30,000
or isn't aware of the fact that this is

2092
01:36:27,360 --> 01:36:32,639
possible right so if quick v 2 actually

2093
01:36:30,000 --> 01:36:35,610
defines each 3s compatibility with it

2094
01:36:32,640 --> 01:36:38,190
you can't you can't compliantly

2095
01:36:35,610 --> 01:36:45,990
implement quick v 2 without knowing that

2096
01:36:38,190 --> 01:36:47,580
age 3 is supported yeah yeah I guess III

2097
01:36:45,990 --> 01:36:49,530
just not seeing why that's like such a

2098
01:36:47,580 --> 01:36:54,230
big problem like like write it down the

2099
01:36:49,530 --> 01:36:54,230
document in the document

2100
01:36:54,350 --> 01:37:01,310
yeah okay so what do we do for protocols

2101
01:36:57,800 --> 01:37:02,900
that are not HTTP I mean I think like

2102
01:37:01,310 --> 01:37:04,130
we've been doing this for like how long

2103
01:37:02,900 --> 01:37:05,450
would tell us and they've never had this

2104
01:37:04,130 --> 01:37:06,710
problem so I just like not personally

2105
01:37:05,450 --> 01:37:08,840
this is seems like a lot of like very

2106
01:37:06,710 --> 01:37:13,720
abstract theorizing about some problem

2107
01:37:08,840 --> 01:37:13,720
which I don't believe exists I mean like

2108
01:37:14,080 --> 01:37:18,650
like is in principle like in principle

2109
01:37:16,820 --> 01:37:22,460
we could they decide that like you know

2110
01:37:18,650 --> 01:37:26,089
that that the brief things entirely but

2111
01:37:22,460 --> 01:37:27,050
I just like like the you could make the

2112
01:37:26,090 --> 01:37:28,850
decision that you could make that

2113
01:37:27,050 --> 01:37:30,230
decision and yet in the situation where

2114
01:37:28,850 --> 01:37:31,580
both sides are so confused I just find

2115
01:37:30,230 --> 01:37:33,410
very impossible I mean it's not like

2116
01:37:31,580 --> 01:37:34,700
you're not like you're not like trying

2117
01:37:33,410 --> 01:37:36,260
to private that intersection of like

2118
01:37:34,700 --> 01:37:38,990
everything which side supports when the

2119
01:37:36,260 --> 01:37:40,400
client starts at notre closer to HTTP so

2120
01:37:38,990 --> 01:37:41,900
if like those some quick v9 that does

2121
01:37:40,400 --> 01:37:47,690
know HTTP the clients not gonna offer in

2122
01:37:41,900 --> 01:37:52,670
this or is not accept that can we finish

2123
01:37:47,690 --> 01:37:54,200
the presentation sorry I thought the

2124
01:37:52,670 --> 01:37:55,880
presentation was there are more slide

2125
01:37:54,200 --> 01:37:57,170
time we have a queue and we started with

2126
01:37:55,880 --> 01:38:01,480
the clarification question then all of a

2127
01:37:57,170 --> 01:38:01,480
sudden we had a huge queue we started

2128
01:38:01,600 --> 01:38:12,230
yeah let's finish so one more there it

2129
01:38:08,060 --> 01:38:14,140
if you do Noguchi one negotiate the

2130
01:38:12,230 --> 01:38:18,230
transport first and then the a player

2131
01:38:14,140 --> 01:38:20,300
which is kind of what TCP does you you

2132
01:38:18,230 --> 01:38:22,990
have TCP and only then do you see the

2133
01:38:20,300 --> 01:38:26,600
TLS handshake to negotiate the a player

2134
01:38:22,990 --> 01:38:29,210
in this kind of weird hypothetical

2135
01:38:26,600 --> 01:38:32,120
situation where there's an h4 that it

2136
01:38:29,210 --> 01:38:34,040
doesn't support quick - if you've

2137
01:38:32,120 --> 01:38:36,170
already negotiated the to run quick -

2138
01:38:34,040 --> 01:38:37,970
you just won't include that in the Oh al

2139
01:38:36,170 --> 01:38:40,520
pin offer and the server won't know that

2140
01:38:37,970 --> 01:38:43,640
it could have done h4 if it had only

2141
01:38:40,520 --> 01:38:46,880
chosen quick v1 it's a little weird

2142
01:38:43,640 --> 01:38:49,340
hopefully we continue to support things

2143
01:38:46,880 --> 01:38:51,110
as we get bigger but it means that the

2144
01:38:49,340 --> 01:38:52,430
server is not operating with full or

2145
01:38:51,110 --> 01:38:52,969
full knowledge of what the possibilities

2146
01:38:52,430 --> 01:38:59,990
are

2147
01:38:52,970 --> 01:39:03,470
next so really this is just a choice we

2148
01:38:59,990 --> 01:39:06,860
need to make if we have the token do the

2149
01:39:03,470 --> 01:39:08,190
full stack that is a little bit

2150
01:39:06,860 --> 01:39:11,940
inflexible

2151
01:39:08,190 --> 01:39:14,219
but it is simple and if we have the

2152
01:39:11,940 --> 01:39:16,349
token identified just the a player which

2153
01:39:14,220 --> 01:39:19,370
I think is more appealing from an

2154
01:39:16,350 --> 01:39:23,420
architectural standpoint then things get

2155
01:39:19,370 --> 01:39:25,980
potentially hairy in terms of who knows

2156
01:39:23,420 --> 01:39:32,070
who knows what is supported with what

2157
01:39:25,980 --> 01:39:34,830
quick versions and Ben Schwartz do we

2158
01:39:32,070 --> 01:39:37,679
have to make this trade-off now or can

2159
01:39:34,830 --> 01:39:39,930
we delay it until such time as there has

2160
01:39:37,680 --> 01:39:42,270
been created a version of quick that is

2161
01:39:39,930 --> 01:39:44,940
not backwards compatible or we are about

2162
01:39:42,270 --> 01:39:48,420
to create such a version of quick so

2163
01:39:44,940 --> 01:39:51,599
what the document says right now the tls

2164
01:39:48,420 --> 01:39:53,910
document says that the application

2165
01:39:51,600 --> 01:39:56,730
protocol can restrict which transport

2166
01:39:53,910 --> 01:39:59,490
versions are acceptable and I think that

2167
01:39:56,730 --> 01:40:03,179
is probably the right choice we have the

2168
01:39:59,490 --> 01:40:05,240
earth right now htv-3 says that can be

2169
01:40:03,180 --> 01:40:09,300
used with any version of quick where the

2170
01:40:05,240 --> 01:40:10,920
crypto handshake is TLS which given that

2171
01:40:09,300 --> 01:40:14,190
that says nothing about what the

2172
01:40:10,920 --> 01:40:17,580
interface is I think there has to be a

2173
01:40:14,190 --> 01:40:21,860
change in h3 the change could be we

2174
01:40:17,580 --> 01:40:25,470
require quick v1 until other west dated

2175
01:40:21,860 --> 01:40:27,450
yeah so so mutton Thomson this

2176
01:40:25,470 --> 01:40:31,530
philosophical difference has existed

2177
01:40:27,450 --> 01:40:33,630
since we published RFC 70 301 because

2178
01:40:31,530 --> 01:40:37,500
everyone has assumed a very different

2179
01:40:33,630 --> 01:40:40,170
model of how a OPN operates now we have

2180
01:40:37,500 --> 01:40:43,260
an identifier now that identifies

2181
01:40:40,170 --> 01:40:47,520
something that maybe Ted thinks means

2182
01:40:43,260 --> 01:40:50,220
this and dkg thinks means something else

2183
01:40:47,520 --> 01:40:52,350
and we've been happy up until this point

2184
01:40:50,220 --> 01:40:53,220
well actually we've not been happy up

2185
01:40:52,350 --> 01:40:56,520
until this point there's been a

2186
01:40:53,220 --> 01:40:59,610
continual problem but we keep sort of

2187
01:40:56,520 --> 01:41:02,880
dancing around this problem in the wider

2188
01:40:59,610 --> 01:41:04,980
community and TLS in HTTP in in other

2189
01:41:02,880 --> 01:41:07,250
working groups that now rely on LPN

2190
01:41:04,980 --> 01:41:13,200
we've been dancing around this issue and

2191
01:41:07,250 --> 01:41:16,530
I don't think we absolutely have to 100

2192
01:41:13,200 --> 01:41:19,470
cent decide on this now we can punt this

2193
01:41:16,530 --> 01:41:21,380
down the road we can tweak the language

2194
01:41:19,470 --> 01:41:24,770
in the HTTP spec

2195
01:41:21,380 --> 01:41:27,710
move on blithely ignorant of the fact

2196
01:41:24,770 --> 01:41:29,840
that we've got this problem that we'll

2197
01:41:27,710 --> 01:41:33,889
have to solve later on we can accept

2198
01:41:29,840 --> 01:41:37,730
that problem and defer it but I can't

2199
01:41:33,889 --> 01:41:41,090
would like to know what a LPN means what

2200
01:41:37,730 --> 01:41:42,589
it really identifies because it's pretty

2201
01:41:41,090 --> 01:41:44,179
clear to me that we don't have consensus

2202
01:41:42,590 --> 01:41:46,340
in this community about what that is

2203
01:41:44,179 --> 01:41:47,510
which is unfortunate because I think a

2204
01:41:46,340 --> 01:41:49,880
number of people have been headed off

2205
01:41:47,510 --> 01:41:51,170
down different paths on various

2206
01:41:49,880 --> 01:41:56,449
assumptions and we all know what

2207
01:41:51,170 --> 01:41:59,179
assumptions are good for Tommy Polly

2208
01:41:56,449 --> 01:42:02,259
Apple so I think we should actually

2209
01:41:59,179 --> 01:42:05,270
absolutely update the h3 texted to

2210
01:42:02,260 --> 01:42:08,090
redefine what it requires I would urge

2211
01:42:05,270 --> 01:42:11,719
that we don't you know we shouldn't say

2212
01:42:08,090 --> 01:42:13,010
oh this requires TLS as the the one

2213
01:42:11,719 --> 01:42:16,130
thing I don't think we should also say

2214
01:42:13,010 --> 01:42:17,449
that it requires quick v1 maybe great if

2215
01:42:16,130 --> 01:42:20,330
we can you have some language of it

2216
01:42:17,449 --> 01:42:22,009
describes the transport services offered

2217
01:42:20,330 --> 01:42:23,840
by a quick v1 layer I mean essentially

2218
01:42:22,010 --> 01:42:27,679
saying you need this shape right because

2219
01:42:23,840 --> 01:42:30,199
if you're running h2 you require a

2220
01:42:27,679 --> 01:42:31,940
essentially a TLS stream interface you

2221
01:42:30,199 --> 01:42:33,469
know secure stream interface and the

2222
01:42:31,940 --> 01:42:37,638
things that we're talking about that

2223
01:42:33,469 --> 01:42:40,070
would potentially break h3 would be oh

2224
01:42:37,639 --> 01:42:41,469
you no longer have reliable streams and

2225
01:42:40,070 --> 01:42:46,400
like something fundamentally in that

2226
01:42:41,469 --> 01:42:47,600
transport interface so this is a great

2227
01:42:46,400 --> 01:42:50,388
conversation we won't talk about how it

2228
01:42:47,600 --> 01:42:52,969
evolves into the future that's a thing

2229
01:42:50,389 --> 01:42:54,560
for taps and stuff like that but I think

2230
01:42:52,969 --> 01:42:57,020
we shouldn't necessarily make the

2231
01:42:54,560 --> 01:42:58,489
decision about what the ALP and encoding

2232
01:42:57,020 --> 01:43:02,409
is going to evolve into in the future

2233
01:42:58,489 --> 01:43:05,900
until we get to that but I think really

2234
01:43:02,409 --> 01:43:08,809
h3 needs to be tied to whatever mapping

2235
01:43:05,900 --> 01:43:09,980
of the transport we have on quickly one

2236
01:43:08,810 --> 01:43:12,050
today and that could work for quick

2237
01:43:09,980 --> 01:43:14,169
review - but if quickly - decides to

2238
01:43:12,050 --> 01:43:17,960
ditch streams then we'll have to rethink

2239
01:43:14,170 --> 01:43:19,670
so there are sections in the quick

2240
01:43:17,960 --> 01:43:22,040
transport document that define

2241
01:43:19,670 --> 01:43:24,770
particular operations that have to be

2242
01:43:22,040 --> 01:43:27,500
supported one possibility would be to

2243
01:43:24,770 --> 01:43:29,659
point into the quick v1 document and say

2244
01:43:27,500 --> 01:43:32,239
all of these operations must be

2245
01:43:29,659 --> 01:43:35,320
supported by the version of quick that

2246
01:43:32,239 --> 01:43:38,980
you use that's great

2247
01:43:35,320 --> 01:43:40,330
so I'm gonna cut the mic lines here I'd

2248
01:43:38,980 --> 01:43:41,980
also like to take this opportunity to

2249
01:43:40,330 --> 01:43:44,559
point out we are now a transport working

2250
01:43:41,980 --> 01:43:47,639
group talking about a security working

2251
01:43:44,560 --> 01:43:50,290
groups concept of what an application is

2252
01:43:47,640 --> 01:43:51,400
I probably need to coordinate a little

2253
01:43:50,290 --> 01:43:54,130
bit please go on

2254
01:43:51,400 --> 01:43:55,960
Kyle nekritz when we're doing the

2255
01:43:54,130 --> 01:43:58,420
negotiation for the transport verse and

2256
01:43:55,960 --> 01:44:00,610
that's something that's generally going

2257
01:43:58,420 --> 01:44:02,110
to require round trips or a round trip

2258
01:44:00,610 --> 01:44:05,339
if you don't get your first choice

2259
01:44:02,110 --> 01:44:07,839
whereas the ALP n negotiation

2260
01:44:05,340 --> 01:44:10,320
essentially piggy backs off the round

2261
01:44:07,840 --> 01:44:13,990
trip that's required for a TLS anyway

2262
01:44:10,320 --> 01:44:16,389
and if we try to shove them together

2263
01:44:13,990 --> 01:44:20,290
then we lose the possibility of doing

2264
01:44:16,390 --> 01:44:22,180
some a ALP n negotiation that doesn't

2265
01:44:20,290 --> 01:44:30,280
add additional round trips and that's a

2266
01:44:22,180 --> 01:44:34,720
feature I'd really like to keep David's

2267
01:44:30,280 --> 01:44:36,700
Kazi Google so first to respond to

2268
01:44:34,720 --> 01:44:41,050
eckers point about how this has never

2269
01:44:36,700 --> 01:44:44,740
been a problem in TLS the conceptual

2270
01:44:41,050 --> 01:44:48,160
interface or SLA from TLS to its

2271
01:44:44,740 --> 01:44:52,380
application is dirt simple it's a byte

2272
01:44:48,160 --> 01:44:56,380
stream that's altars to it pretty much

2273
01:44:52,380 --> 01:45:01,290
and so when you can totally have yeah

2274
01:44:56,380 --> 01:45:04,090
TLS 101 1 1 2 1 3 versus HTTP 1 1 or 2

2275
01:45:01,290 --> 01:45:05,950
that interface between them is the same

2276
01:45:04,090 --> 01:45:10,330
so these are completely independent

2277
01:45:05,950 --> 01:45:13,300
problems in quick we've taken the

2278
01:45:10,330 --> 01:45:15,100
layering model and remove the layers of

2279
01:45:13,300 --> 01:45:17,860
indirection to get better performance so

2280
01:45:15,100 --> 01:45:19,180
that causes these problems that's why we

2281
01:45:17,860 --> 01:45:26,170
I think it is useful to have this

2282
01:45:19,180 --> 01:45:27,670
conversation however I think some people

2283
01:45:26,170 --> 01:45:31,810
have pointed out predicting the future

2284
01:45:27,670 --> 01:45:38,710
is hard and all we can do today is think

2285
01:45:31,810 --> 01:45:43,750
about what we have today so - - Tommy's

2286
01:45:38,710 --> 01:45:46,000
point the idea of defining

2287
01:45:43,750 --> 01:45:47,980
going full taps as I like to call it and

2288
01:45:46,000 --> 01:45:51,520
defining all of the properties of these

2289
01:45:47,980 --> 01:45:54,009
things is hard the taps working group as

2290
01:45:51,520 --> 01:45:56,530
well have for the years and I really

2291
01:45:54,010 --> 01:45:58,720
want to avoid being in a state where one

2292
01:45:56,530 --> 01:46:00,910
person thinks it means X and one person

2293
01:45:58,720 --> 01:46:02,890
thinks it means Y and then people like I

2294
01:46:00,910 --> 01:46:05,700
was saying disagree on whether it's

2295
01:46:02,890 --> 01:46:08,830
gtb/4 fits on could be true or not so

2296
01:46:05,700 --> 01:46:11,590
how about we keep this dirt simple and

2297
01:46:08,830 --> 01:46:15,370
contained to what we know about today so

2298
01:46:11,590 --> 01:46:19,140
I really like the proposal of HTTP 3

2299
01:46:15,370 --> 01:46:23,650
means quick view on period if tomorrow

2300
01:46:19,140 --> 01:46:27,370
someone has quick V 2 then they can rate

2301
01:46:23,650 --> 01:46:30,219
a write a one-page RFC that is this

2302
01:46:27,370 --> 01:46:32,740
works HTTP three words would quick v2

2303
01:46:30,220 --> 01:46:34,990
the only downside here is that we would

2304
01:46:32,740 --> 01:46:38,740
have to spend a few more bits and in the

2305
01:46:34,990 --> 01:46:40,960
LPN and call it h 3q 2 so I think that's

2306
01:46:38,740 --> 01:46:43,690
the best way one thing all that as well

2307
01:46:40,960 --> 01:46:47,230
is a LPN is a concept that's specific to

2308
01:46:43,690 --> 01:46:49,360
TLS quick the invariants don't

2309
01:46:47,230 --> 01:46:54,160
necessarily have TLS if someone wants to

2310
01:46:49,360 --> 01:46:56,889
build HTTP over quick with a custom

2311
01:46:54,160 --> 01:46:59,080
handshake I'm sorry a custom key

2312
01:46:56,890 --> 01:47:01,480
exchange mechanism which we're probably

2313
01:46:59,080 --> 01:47:02,980
looking into at Google for some

2314
01:47:01,480 --> 01:47:05,320
corporate stuff that has some magic

2315
01:47:02,980 --> 01:47:07,690
crypto stuff in a corner somewhere

2316
01:47:05,320 --> 01:47:10,299
we'll have to defined that internally

2317
01:47:07,690 --> 01:47:12,990
and it might not even use the LPN at all

2318
01:47:10,300 --> 01:47:16,900
so anyway let's just keep this simple

2319
01:47:12,990 --> 01:47:19,240
have the string h3 mean she will do a

2320
01:47:16,900 --> 01:47:21,269
quick view one and then we can solve

2321
01:47:19,240 --> 01:47:23,320
that problem when we get there later

2322
01:47:21,270 --> 01:47:29,080
mainly in the interest of shipping this

2323
01:47:23,320 --> 01:47:30,820
sooner hi I'm Emily I came up here to

2324
01:47:29,080 --> 01:47:32,400
disagree with David but then he made

2325
01:47:30,820 --> 01:47:34,870
sense so I'm going to agree with him I

2326
01:47:32,400 --> 01:47:36,160
think I think that this actually should

2327
01:47:34,870 --> 01:47:37,480
be deferrable because the actual

2328
01:47:36,160 --> 01:47:38,590
question that you're asking here is much

2329
01:47:37,480 --> 01:47:42,190
harder than you think it is

2330
01:47:38,590 --> 01:47:43,420
you've taken the idea of well the big

2331
01:47:42,190 --> 01:47:45,129
question is much harder than you think

2332
01:47:43,420 --> 01:47:49,240
it is you already think it's pretty hard

2333
01:47:45,130 --> 01:47:52,090
it's harder than that the the easy

2334
01:47:49,240 --> 01:47:54,070
question is can we just bind can can we

2335
01:47:52,090 --> 01:47:55,990
so the problem is is we've taken the

2336
01:47:54,070 --> 01:47:57,580
concept of a LPN which was essentially

2337
01:47:55,990 --> 01:48:00,130
security layer trying to abstract

2338
01:47:57,580 --> 01:48:01,269
what an application layer is just like

2339
01:48:00,130 --> 01:48:02,320
that's just an application I don't

2340
01:48:01,270 --> 01:48:03,520
really care about it and it doesn't the

2341
01:48:02,320 --> 01:48:07,059
transport doesn't matter because it's

2342
01:48:03,520 --> 01:48:09,880
always going to be TCP forever um the

2343
01:48:07,060 --> 01:48:11,200
the the word layer there is wrong but

2344
01:48:09,880 --> 01:48:12,460
the transport layer actually wants to

2345
01:48:11,200 --> 01:48:14,710
talk about or the transport or the

2346
01:48:12,460 --> 01:48:16,960
security service I'm not completely

2347
01:48:14,710 --> 01:48:18,130
screwed up on this um see what happens

2348
01:48:16,960 --> 01:48:20,380
when you put too many layers in a stack

2349
01:48:18,130 --> 01:48:22,150
um what it actually wants to talk about

2350
01:48:20,380 --> 01:48:23,650
is the whole stack rate so it should

2351
01:48:22,150 --> 01:48:25,540
actually be called Aspen how they OPN

2352
01:48:23,650 --> 01:48:27,610
it's the application stack of protocol

2353
01:48:25,540 --> 01:48:28,930
negotiation provocation protocols to

2354
01:48:27,610 --> 01:48:33,670
activate amen

2355
01:48:28,930 --> 01:48:34,990
so the bigger question of like of how do

2356
01:48:33,670 --> 01:48:38,500
we do this we need to think more about

2357
01:48:34,990 --> 01:48:39,880
what we mean about a stack the fact that

2358
01:48:38,500 --> 01:48:41,860
quick has a much more complicated

2359
01:48:39,880 --> 01:48:43,720
interface to it transport that orbit

2360
01:48:41,860 --> 01:48:45,460
that hb3 has much more complicated

2361
01:48:43,720 --> 01:48:48,790
interface to its transport than anything

2362
01:48:45,460 --> 01:48:50,860
over TCP everwood means that you might

2363
01:48:48,790 --> 01:48:52,240
think that you can do things in that top

2364
01:48:50,860 --> 01:48:53,860
thing let's like hey these are going to

2365
01:48:52,240 --> 01:48:55,540
layer cleanly but you'll always be wrong

2366
01:48:53,860 --> 01:48:57,519
right there will always be some subtlety

2367
01:48:55,540 --> 01:48:59,950
that means that there's some dependency

2368
01:48:57,520 --> 01:49:01,330
here that won't that will trip that up

2369
01:48:59,950 --> 01:49:03,250
and then you have to have an exception I

2370
01:49:01,330 --> 01:49:04,750
think that the longer more complicated

2371
01:49:03,250 --> 01:49:06,280
discussion is probably going to land on

2372
01:49:04,750 --> 01:49:08,740
the bottom one identify this I can come

2373
01:49:06,280 --> 01:49:11,429
up with a way to do that that's not

2374
01:49:08,740 --> 01:49:16,210
going full taps unless you mean to UM

2375
01:49:11,430 --> 01:49:18,850
come to taps it's this afternoon but for

2376
01:49:16,210 --> 01:49:22,270
now I think we just basically say h3 is

2377
01:49:18,850 --> 01:49:25,090
q1 q2 gets to decide what the finding is

2378
01:49:22,270 --> 01:49:26,710
and then we get ourselves the time to

2379
01:49:25,090 --> 01:49:29,950
have that more complicated discussion

2380
01:49:26,710 --> 01:49:31,870
down there better we don't make a bad

2381
01:49:29,950 --> 01:49:37,120
decision under time pressure because

2382
01:49:31,870 --> 01:49:39,430
that'll be a bad idea yeah TL DR I mean

2383
01:49:37,120 --> 01:49:41,740
we had a bunch of points where we like

2384
01:49:39,430 --> 01:49:45,190
knew we punch it out like the exact way

2385
01:49:41,740 --> 01:49:45,969
we're gonna spell new versions even

2386
01:49:45,190 --> 01:49:46,299
though we knew that probably gonna

2387
01:49:45,970 --> 01:49:49,720
happen

2388
01:49:46,300 --> 01:49:50,920
um case in point the the key label

2389
01:49:49,720 --> 01:49:53,590
expansions where we're calling it a

2390
01:49:50,920 --> 01:49:55,900
quick as supposed a quick one um so I

2391
01:49:53,590 --> 01:49:58,630
think this perfectly fine is all this h3

2392
01:49:55,900 --> 01:50:00,339
and say it means quickly one and then we

2393
01:49:58,630 --> 01:50:01,630
can when we get we define quick v2 we

2394
01:50:00,340 --> 01:50:03,450
can define decide we're need a newly

2395
01:50:01,630 --> 01:50:07,300
opened token or not at that point um

2396
01:50:03,450 --> 01:50:08,710
with that said a few minor points um we

2397
01:50:07,300 --> 01:50:10,150
really can't like to find the semantics

2398
01:50:08,710 --> 01:50:11,409
of a OPN here any differently than the

2399
01:50:10,150 --> 01:50:13,808
way it already is defined because

2400
01:50:11,409 --> 01:50:16,780
questions so need some liquid e's on

2401
01:50:13,809 --> 01:50:19,199
statement those people are totally

2402
01:50:16,780 --> 01:50:24,820
different from the people in this room

2403
01:50:19,199 --> 01:50:26,978
the on second on the problem of having

2404
01:50:24,820 --> 01:50:29,409
sequential negotiations give you some

2405
01:50:26,979 --> 01:50:32,829
ultimate comes is like all restricted to

2406
01:50:29,409 --> 01:50:34,268
like this version thing that like in one

2407
01:50:32,829 --> 01:50:36,280
three first this one like if you have

2408
01:50:34,269 --> 01:50:38,380
like odd you know if you have on

2409
01:50:36,280 --> 01:50:41,590
interacting things or she's like I'm

2410
01:50:38,380 --> 01:50:42,820
going to UM so on and there's always a

2411
01:50:41,590 --> 01:50:44,079
tension between my trying to get the

2412
01:50:42,820 --> 01:50:45,518
optimal comes versus having this like

2413
01:50:44,079 --> 01:50:48,249
giant list of like well I mean your for

2414
01:50:45,519 --> 01:50:50,499
all things on so I'm not too sweated

2415
01:50:48,249 --> 01:50:52,090
about that um the third thing is just

2416
01:50:50,499 --> 01:50:53,829
wants to David on funny you should

2417
01:50:52,090 --> 01:50:56,050
mention that TLS has a straightforward

2418
01:50:53,829 --> 01:50:57,938
application interface because there's

2419
01:50:56,050 --> 01:51:00,939
the thing called DTLS which also has a

2420
01:50:57,939 --> 01:51:02,860
OPN and um so I guess my thesis is

2421
01:51:00,939 --> 01:51:05,919
nobody ever thought I don't think that

2422
01:51:02,860 --> 01:51:07,179
you could run on issue p2 over DT OS and

2423
01:51:05,919 --> 01:51:16,209
that would be cool but I didn't actually

2424
01:51:07,179 --> 01:51:18,219
say you can't do that denying God I'm

2425
01:51:16,209 --> 01:51:21,659
actually surprised I have a contrary

2426
01:51:18,219 --> 01:51:23,829
opinion here so I'm going to state it

2427
01:51:21,659 --> 01:51:24,879
the way I understand it and we don't

2428
01:51:23,829 --> 01:51:25,959
need to parse this here because

2429
01:51:24,880 --> 01:51:28,539
obviously it's not the place to

2430
01:51:25,959 --> 01:51:30,519
necessarily do it but a LPN for TLS is

2431
01:51:28,539 --> 01:51:32,590
the thing that sits on top of it my

2432
01:51:30,519 --> 01:51:33,969
understanding is application was it's

2433
01:51:32,590 --> 01:51:36,189
convenient because that's what sat on

2434
01:51:33,969 --> 01:51:38,499
top of TLS in this key is the thing that

2435
01:51:36,189 --> 01:51:41,709
sits on top of TLS if you look at it in

2436
01:51:38,499 --> 01:51:43,570
a certain way is quick and HDB and so

2437
01:51:41,709 --> 01:51:46,209
again to me

2438
01:51:43,570 --> 01:51:49,150
the simple solution of identifying the

2439
01:51:46,209 --> 01:51:53,789
combination of quick and HTTP makes

2440
01:51:49,150 --> 01:51:56,289
sense it is I don't see that as

2441
01:51:53,789 --> 01:51:57,999
inflexible when I understand that it's

2442
01:51:56,289 --> 01:51:59,469
rigid because you're specifying the

2443
01:51:57,999 --> 01:52:02,650
whole thing that's sitting on on top

2444
01:51:59,469 --> 01:52:05,559
there but it is also the one option that

2445
01:52:02,650 --> 01:52:07,449
to me leaves more choices in the future

2446
01:52:05,559 --> 01:52:10,360
one thing to keep in mind is that yes

2447
01:52:07,449 --> 01:52:12,759
the future is unpredictable but we are

2448
01:52:10,360 --> 01:52:14,110
putting a lot into quick v2 or if

2449
01:52:12,760 --> 01:52:17,110
they're hoping that we will come up with

2450
01:52:14,110 --> 01:52:18,188
a new version of quick very soon but I

2451
01:52:17,110 --> 01:52:19,419
don't think anybody in the room is

2452
01:52:18,189 --> 01:52:21,849
hoping that we will come up with a new

2453
01:52:19,419 --> 01:52:23,500
version of HTTP very soon and we may or

2454
01:52:21,849 --> 01:52:25,840
may not want to do

2455
01:52:23,500 --> 01:52:27,610
two couple those things in an indirect

2456
01:52:25,840 --> 01:52:29,500
way where we say that HTTP 3 implies

2457
01:52:27,610 --> 01:52:33,219
quickly 1 then we have to figure out how

2458
01:52:29,500 --> 01:52:35,470
to wedge out of that so it just seems to

2459
01:52:33,220 --> 01:52:37,900
me that the simple and easy solution

2460
01:52:35,470 --> 01:52:41,560
right now is to combine the two and to

2461
01:52:37,900 --> 01:52:43,750
say that the LPN is h 3q 1 and we can

2462
01:52:41,560 --> 01:52:46,450
easily say h 3q to the problem of

2463
01:52:43,750 --> 01:52:48,160
scaling that's the problem that shows up

2464
01:52:46,450 --> 01:52:50,950
is that you may have a lot of them that

2465
01:52:48,160 --> 01:52:52,630
I'm happy to punt because we can deal

2466
01:52:50,950 --> 01:52:59,410
with that later when we actually have

2467
01:52:52,630 --> 01:53:01,540
the problem ok so it sounds like we have

2468
01:52:59,410 --> 01:53:02,740
some agreement there do you have would

2469
01:53:01,540 --> 01:53:06,970
you like a hum or do you have enough

2470
01:53:02,740 --> 01:53:11,889
information I heard a lot of support for

2471
01:53:06,970 --> 01:53:14,980
H 3 equals Q 1 it sounded like some

2472
01:53:11,890 --> 01:53:20,290
support for H 3 equals a version of

2473
01:53:14,980 --> 01:53:23,919
quick with the properties in Q 1 might

2474
01:53:20,290 --> 01:53:26,080
be useful to have a hum to see to see

2475
01:53:23,920 --> 01:53:28,930
whether those are equal or 1 best a

2476
01:53:26,080 --> 01:53:30,640
outweighs the other sure Martin yeah I

2477
01:53:28,930 --> 01:53:33,760
was just gonna say the same thing I

2478
01:53:30,640 --> 01:53:37,180
would like to know how how much lies on

2479
01:53:33,760 --> 01:53:40,360
there just just say H 3 uses Q 1 of

2480
01:53:37,180 --> 01:53:45,520
course the properties thing right and so

2481
01:53:40,360 --> 01:53:47,440
I think yes gentlemen classification

2482
01:53:45,520 --> 01:53:50,080
question cause a whole cook so what does

2483
01:53:47,440 --> 01:53:52,240
it mean what does future change actually

2484
01:53:50,080 --> 01:53:54,850
me for example consider the case where

2485
01:53:52,240 --> 01:53:57,160
quickly two has one less stream IDs

2486
01:53:54,850 --> 01:54:04,690
number space does that mean that it has

2487
01:53:57,160 --> 01:54:06,519
a different feature so speaking is the

2488
01:54:04,690 --> 01:54:10,960
h3 editor know because we've been

2489
01:54:06,520 --> 01:54:13,720
careful to design away from that we

2490
01:54:10,960 --> 01:54:15,700
don't assume that we don't assume a

2491
01:54:13,720 --> 01:54:20,650
particular shape to the set of stream

2492
01:54:15,700 --> 01:54:24,220
ideas I think the choices at hand are we

2493
01:54:20,650 --> 01:54:28,389
either define h3 as using exactly q1

2494
01:54:24,220 --> 01:54:31,960
quick one or we define some abstraction

2495
01:54:28,390 --> 01:54:35,340
that you know we do the work so I think

2496
01:54:31,960 --> 01:54:35,340
already exists in the transport dock

2497
01:54:35,850 --> 01:54:41,850
I don't know that there's agreement on

2498
01:54:37,560 --> 01:54:43,410
that we may have to we have may have to

2499
01:54:41,850 --> 01:54:45,360
see whether there are additional things

2500
01:54:43,410 --> 01:54:47,160
that get added so I think the the the

2501
01:54:45,360 --> 01:54:48,509
second the the first is very simple age

2502
01:54:47,160 --> 01:54:50,220
three is q1 we're done

2503
01:54:48,510 --> 01:54:51,930
the second days we're going to do some

2504
01:54:50,220 --> 01:54:54,180
work to try and make it a little more

2505
01:54:51,930 --> 01:54:56,750
nuanced and that work is a little bit

2506
01:54:54,180 --> 01:54:56,750
unknown at this point

2507
01:54:57,980 --> 01:55:03,330
and my Miranda the third option is that

2508
01:55:01,320 --> 01:55:04,620
we actually explicitly let's start

2509
01:55:03,330 --> 01:55:05,730
across some of the options there a

2510
01:55:04,620 --> 01:55:13,110
tricky one

2511
01:55:05,730 --> 01:55:14,490
as the LPN yeah that's not not by

2512
01:55:13,110 --> 01:55:16,559
cheating this there we're talking about

2513
01:55:14,490 --> 01:55:18,300
the options on the table now you're

2514
01:55:16,560 --> 01:55:20,340
changing the opaque token that means the

2515
01:55:18,300 --> 01:55:22,230
step and saying be explicit about the

2516
01:55:20,340 --> 01:55:23,340
stack I haven't heard any support for

2517
01:55:22,230 --> 01:55:26,179
that yet if somebody else would like to

2518
01:55:23,340 --> 01:55:32,610
support that well II's come to Mike I do

2519
01:55:26,180 --> 01:55:34,500
know tell me Polly Apple so as one of

2520
01:55:32,610 --> 01:55:36,360
the people who brought up talking about

2521
01:55:34,500 --> 01:55:37,950
the mapping I also want to say like we

2522
01:55:36,360 --> 01:55:40,049
don't I don't really want to open that

2523
01:55:37,950 --> 01:55:42,889
whole can of worms here and I don't

2524
01:55:40,050 --> 01:55:45,480
really know if we have the right

2525
01:55:42,890 --> 01:55:47,220
information to decide this to some

2526
01:55:45,480 --> 01:55:50,610
degree I almost just want to see like a

2527
01:55:47,220 --> 01:55:57,480
minimal PR because I think it's fine to

2528
01:55:50,610 --> 01:55:58,889
say yes h3 uses quick v1 it's more just

2529
01:55:57,480 --> 01:56:00,599
kind of like the text around that

2530
01:55:58,890 --> 01:56:02,130
paragraph of how do we phrase the

2531
01:56:00,600 --> 01:56:05,310
flexibility of how we would update this

2532
01:56:02,130 --> 01:56:07,140
later to allow h3 to also work over

2533
01:56:05,310 --> 01:56:08,550
quick too and it's really probably just

2534
01:56:07,140 --> 01:56:12,090
kind of the nuances I don't think we

2535
01:56:08,550 --> 01:56:14,040
should have took a full mapping document

2536
01:56:12,090 --> 01:56:15,480
like let us do that in taps and that'll

2537
01:56:14,040 --> 01:56:17,010
be fun to work on but like that's not

2538
01:56:15,480 --> 01:56:20,700
for this document we shouldn't hold that

2539
01:56:17,010 --> 01:56:24,960
up okay we're running out of time we're

2540
01:56:20,700 --> 01:56:25,950
the blue sheets anyone are they still in

2541
01:56:24,960 --> 01:56:27,810
the room uh-huh

2542
01:56:25,950 --> 01:56:31,349
if does anybody need them put your hand

2543
01:56:27,810 --> 01:56:32,850
up now okay thanks so folks on the line

2544
01:56:31,350 --> 01:56:34,080
please keep it very brief and we're

2545
01:56:32,850 --> 01:56:37,500
gonna try to do a home before we finish

2546
01:56:34,080 --> 01:56:39,000
let's go Kyle Mike Ritz just a very

2547
01:56:37,500 --> 01:56:41,970
quick clarification when we say H 1

2548
01:56:39,000 --> 01:56:45,030
equal or h3 equals q1 we're not saying

2549
01:56:41,970 --> 01:56:48,360
that q1 is restricted to h3 no of course

2550
01:56:45,030 --> 01:56:49,429
no other LPN tokens for other protocols

2551
01:56:48,360 --> 01:56:54,139
might also use

2552
01:56:49,429 --> 01:56:58,040
quick one yeah um I I think the minimal

2553
01:56:54,140 --> 01:56:59,900
thing here is to say h3 implies Q 1 and

2554
01:56:58,040 --> 01:57:03,350
then we can punt all the rest up till

2555
01:56:59,900 --> 01:57:04,370
later um it's worth um and then I think

2556
01:57:03,350 --> 01:57:07,900
there are a number of options available

2557
01:57:04,370 --> 01:57:10,130
to us what when you find a d qu qu um

2558
01:57:07,900 --> 01:57:11,570
one one that has not that mean like I

2559
01:57:10,130 --> 01:57:13,730
know there was like some hate for like

2560
01:57:11,570 --> 01:57:14,989
actually writing this down like one

2561
01:57:13,730 --> 01:57:16,699
thing we've done in tell us is like we

2562
01:57:14,989 --> 01:57:18,739
have like a column of like in their

2563
01:57:16,699 --> 01:57:19,699
registries it says he uses for DTLS and

2564
01:57:18,739 --> 01:57:21,559
some things you can and something you

2565
01:57:19,699 --> 01:57:22,639
can't and like I think for like the

2566
01:57:21,560 --> 01:57:24,020
number of application protocols are

2567
01:57:22,640 --> 01:57:25,670
Paul's are gonna run never be defined by

2568
01:57:24,020 --> 01:57:27,530
ITF and run over quick in the next like

2569
01:57:25,670 --> 01:57:28,699
five years like to the list just

2570
01:57:27,530 --> 01:57:31,480
listening which one's work okay - it's

2571
01:57:28,699 --> 01:57:35,480
not gonna be like an enormous problem

2572
01:57:31,480 --> 01:57:37,879
this is Daniel con Gilmore just say h3

2573
01:57:35,480 --> 01:57:39,110
implies quickly one the idea that this

2574
01:57:37,880 --> 01:57:42,800
whole working group is going to

2575
01:57:39,110 --> 01:57:46,280
successfully describe what the specific

2576
01:57:42,800 --> 01:57:47,480
properties are of of q1 that HTTP

2577
01:57:46,280 --> 01:57:49,489
through relies on in any reasonable

2578
01:57:47,480 --> 01:57:51,830
period of time is is bananas it's not

2579
01:57:49,489 --> 01:57:55,360
gonna happen just say h3 equals Q one

2580
01:57:51,830 --> 01:57:57,920
and we will figure it out it Nick Harper

2581
01:57:55,360 --> 01:58:00,110
clarification question if we say h3

2582
01:57:57,920 --> 01:58:03,949
means Q one right now does that allow us

2583
01:58:00,110 --> 01:58:07,519
when there's quick to just also use h3

2584
01:58:03,949 --> 01:58:10,730
with that okay that's what I want to do

2585
01:58:07,520 --> 01:58:12,860
we we would ship another document at

2586
01:58:10,730 --> 01:58:16,339
that time expanding the definition of H

2587
01:58:12,860 --> 01:58:18,710
3 and then we would also have to figure

2588
01:58:16,340 --> 01:58:20,870
out what happens if there's a mismatch

2589
01:58:18,710 --> 01:58:24,409
on whether two sides support that

2590
01:58:20,870 --> 01:58:29,809
document denying gravitation question a

2591
01:58:24,409 --> 01:58:31,339
ratification point I had misunderstood

2592
01:58:29,810 --> 01:58:33,860
something Roberto let me understand it

2593
01:58:31,340 --> 01:58:38,000
I'm in agreement with H 3 equals Q 1

2594
01:58:33,860 --> 01:58:40,159
okay so I'm gonna do - hums 1 is if you

2595
01:58:38,000 --> 01:58:42,679
believe we should close this issue by

2596
01:58:40,159 --> 01:58:44,420
just saying that H 3 is quick version 1

2597
01:58:42,679 --> 01:58:45,980
there might be a little bit of editorial

2598
01:58:44,420 --> 01:58:48,469
wiggle room around that but no detail

2599
01:58:45,980 --> 01:58:50,570
the other would be we're gonna take some

2600
01:58:48,469 --> 01:58:52,520
time and do some work to try and

2601
01:58:50,570 --> 01:58:56,409
describe the properties we want from

2602
01:58:52,520 --> 01:58:58,880
quick that mean h3 does that make sense

2603
01:58:56,409 --> 01:59:02,920
ok so if you believe that we should just

2604
01:58:58,880 --> 01:59:06,410
stop and say h3 is q1 please come now

2605
01:59:02,920 --> 01:59:08,210
and if you believe we need to spend more

2606
01:59:06,410 --> 01:59:09,769
time on this and try and do this in a

2607
01:59:08,210 --> 01:59:13,790
properties based approach please come

2608
01:59:09,770 --> 01:59:14,240
now that's pretty clear okay thank you

2609
01:59:13,790 --> 01:59:16,790
Mike

2610
01:59:14,240 --> 01:59:19,099
we'll return tomorrow and we'll talk

2611
01:59:16,790 --> 01:59:20,450
about HTTP and recovery issues talk

2612
01:59:19,100 --> 01:59:23,260
about extensions and talk about the

2613
01:59:20,450 --> 01:59:23,260
future thank you

