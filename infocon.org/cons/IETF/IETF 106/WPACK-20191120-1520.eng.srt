1
00:00:04,560 --> 00:00:12,110
oh wait one minute you want to get going

2
00:00:13,730 --> 00:00:18,150
hey let's get this jot this thing

3
00:00:16,230 --> 00:00:21,830
started Ben can you do me a favor and

4
00:00:18,150 --> 00:00:21,830
close the doors thank you very much

5
00:00:34,370 --> 00:00:40,199
alright everyone welcome to the web

6
00:00:36,929 --> 00:00:44,249
packaging both here at the IETF 106 I

7
00:00:40,199 --> 00:00:47,070
appreciate everyone showing up so did we

8
00:00:44,249 --> 00:00:48,300
start the blue sheets we did start the

9
00:00:47,070 --> 00:00:50,489
blue sheets that's excellent

10
00:00:48,300 --> 00:00:52,169
and we already have note takers thank

11
00:00:50,489 --> 00:00:54,300
you too Lucas Perdue and Martin Jukes

12
00:00:52,170 --> 00:00:56,010
that's really great and Eric Kinnear is

13
00:00:54,300 --> 00:00:58,468
going to jabber relays so we don't have

14
00:00:56,010 --> 00:01:00,269
to beg everyone for those jobs so you

15
00:00:58,469 --> 00:01:02,010
should thank these fine gentlemen if you

16
00:01:00,269 --> 00:01:06,929
should see them the hallway for sparing

17
00:01:02,010 --> 00:01:08,610
you the awkward question this is the

18
00:01:06,930 --> 00:01:10,920
note well it makes references to various

19
00:01:08,610 --> 00:01:12,930
important policies that govern our

20
00:01:10,920 --> 00:01:16,110
conductor in this meeting including the

21
00:01:12,930 --> 00:01:17,520
privacy policy in the IPR policy and the

22
00:01:16,110 --> 00:01:22,560
code of conduct which we will be

23
00:01:17,520 --> 00:01:24,869
enforcing during this meeting ok so why

24
00:01:22,560 --> 00:01:25,979
are we here I mean excellent existential

25
00:01:24,869 --> 00:01:28,950
questions are important it's a boss

26
00:01:25,979 --> 00:01:30,630
after all right Shawn and I are here as

27
00:01:28,950 --> 00:01:32,340
your guides we are neither proponents

28
00:01:30,630 --> 00:01:33,839
nor opponents of this proposed working

29
00:01:32,340 --> 00:01:36,030
group and this is a potentially working

30
00:01:33,840 --> 00:01:37,439
group performing both the proponents of

31
00:01:36,030 --> 00:01:39,240
the both have presented a proposed

32
00:01:37,439 --> 00:01:41,669
charter and will be sharing their ideas

33
00:01:39,240 --> 00:01:43,770
and their technology about the items

34
00:01:41,670 --> 00:01:45,000
their scope with you directly as they've

35
00:01:43,770 --> 00:01:46,079
already done on the mailing list and

36
00:01:45,000 --> 00:01:47,250
thank you for the discussion that's

37
00:01:46,079 --> 00:01:49,619
happened on the mailing list a

38
00:01:47,250 --> 00:01:51,329
high-level purpose of this in-person

39
00:01:49,619 --> 00:01:53,880
get-together here there are little

40
00:01:51,329 --> 00:01:56,038
confab is to determine if the Boff

41
00:01:53,880 --> 00:01:57,179
participants recommend the formation of

42
00:01:56,039 --> 00:01:58,859
a working group based on the web

43
00:01:57,179 --> 00:02:01,619
packaging problem the rule would discuss

44
00:01:58,859 --> 00:02:03,538
today and if they do if they have any

45
00:02:01,619 --> 00:02:07,320
recommendations regarding a potential

46
00:02:03,539 --> 00:02:09,660
charter for said for service group and

47
00:02:07,320 --> 00:02:11,280
this will be sort of a long and twisty

48
00:02:09,660 --> 00:02:13,290
road to get there but everything we do

49
00:02:11,280 --> 00:02:17,040
is in service of these two questions for

50
00:02:13,290 --> 00:02:19,280
the next 90 minutes all right here are

51
00:02:17,040 --> 00:02:21,200
some of the twists

52
00:02:19,280 --> 00:02:23,210
well first be discussing several aspects

53
00:02:21,200 --> 00:02:24,829
of the problem space you see there are

54
00:02:23,210 --> 00:02:26,870
four really short five-minute

55
00:02:24,830 --> 00:02:28,700
presentations I'm gonna ask that we

56
00:02:26,870 --> 00:02:31,070
really hold questions until the end of

57
00:02:28,700 --> 00:02:33,230
those when we have 10 minute period set

58
00:02:31,070 --> 00:02:34,850
up for discussion of that I'm concerned

59
00:02:33,230 --> 00:02:36,380
that otherwise there might be a fair bit

60
00:02:34,850 --> 00:02:38,180
of you know redundancy and the questions

61
00:02:36,380 --> 00:02:40,850
and hopefully that'll help avoid some of

62
00:02:38,180 --> 00:02:42,080
that afterwards Jeffery will talk about

63
00:02:40,850 --> 00:02:43,700
some of the technology that's being

64
00:02:42,080 --> 00:02:46,550
proposed followed by discussion time

65
00:02:43,700 --> 00:02:48,709
specifically about that then we'll move

66
00:02:46,550 --> 00:02:51,260
on to the proposed charter gather the

67
00:02:48,710 --> 00:02:52,850
groups insights about that proposal it's

68
00:02:51,260 --> 00:02:54,260
been circulated on the mailing list and

69
00:02:52,850 --> 00:02:55,820
it's in the media materials if you'd

70
00:02:54,260 --> 00:02:57,230
like to take a look at it now we'll also

71
00:02:55,820 --> 00:02:59,780
of course put it up on the screen when

72
00:02:57,230 --> 00:03:02,540
we get to this part it envisions five

73
00:02:59,780 --> 00:03:04,220
specific deliverables and proposes a

74
00:03:02,540 --> 00:03:05,870
number of specific internet drafts as

75
00:03:04,220 --> 00:03:08,180
starting points for a potential working

76
00:03:05,870 --> 00:03:10,160
group if the box would like to try and

77
00:03:08,180 --> 00:03:11,930
refine that in real time we can try and

78
00:03:10,160 --> 00:03:12,440
do the edit a proposal thing on the

79
00:03:11,930 --> 00:03:14,270
screen

80
00:03:12,440 --> 00:03:17,780
I don't know how awesome that will be

81
00:03:14,270 --> 00:03:19,460
but we can give it a shot and the last

82
00:03:17,780 --> 00:03:22,010
thing I want to say before we get on to

83
00:03:19,460 --> 00:03:23,270
getting on here is that timing is

84
00:03:22,010 --> 00:03:25,850
probably to be the most important thing

85
00:03:23,270 --> 00:03:27,410
that Sean and I do up here today and

86
00:03:25,850 --> 00:03:29,660
it's possible that you'll not be able to

87
00:03:27,410 --> 00:03:31,340
finish a presentation or you'll end up

88
00:03:29,660 --> 00:03:32,600
in a queue and I'll get cut off and I

89
00:03:31,340 --> 00:03:34,850
get a chance to speak because of the

90
00:03:32,600 --> 00:03:37,220
timing and we'll just have to move on so

91
00:03:34,850 --> 00:03:39,040
my advice is get in line early and keep

92
00:03:37,220 --> 00:03:40,580
your presentations on schedule

93
00:03:39,040 --> 00:03:42,739
additionally we're gonna try and make

94
00:03:40,580 --> 00:03:44,120
sure that in particular the voices the

95
00:03:42,740 --> 00:03:46,130
proponents are heard whenever there's

96
00:03:44,120 --> 00:03:47,300
any lack of clarity because the most

97
00:03:46,130 --> 00:03:49,880
important thing here is that you

98
00:03:47,300 --> 00:03:52,490
understand their proposal so we can

99
00:03:49,880 --> 00:03:55,970
decide the key questions that we'll ask

100
00:03:52,490 --> 00:03:58,220
at the end and of course you know lastly

101
00:03:55,970 --> 00:03:59,510
we will finish with some polls about a

102
00:03:58,220 --> 00:04:02,240
potential working group forming 'both

103
00:03:59,510 --> 00:04:05,359
these are the questions at this time

104
00:04:02,240 --> 00:04:08,180
that we intend to ask we'll see if the

105
00:04:05,360 --> 00:04:11,990
if the results of the next year 90

106
00:04:08,180 --> 00:04:16,300
minutes alter that in any way okay so

107
00:04:11,990 --> 00:04:16,300
with that being said Matt your first

108
00:04:27,590 --> 00:04:32,229
[Music]

109
00:04:39,250 --> 00:04:43,520
all right thanks hello everyone my name

110
00:04:42,020 --> 00:04:45,830
is Matt and I have just a few brief

111
00:04:43,520 --> 00:04:48,590
minutes to talk to you about our use

112
00:04:45,830 --> 00:04:51,440
case for a web packaging in remote edge

113
00:04:48,590 --> 00:04:53,060
networks or community networks so for

114
00:04:51,440 --> 00:04:54,469
some background I am a researcher at the

115
00:04:53,060 --> 00:04:56,720
University of Washington and I'm here

116
00:04:54,470 --> 00:04:58,610
are some of my colleagues and our

117
00:04:56,720 --> 00:05:00,500
research group focuses on internet

118
00:04:58,610 --> 00:05:03,350
access in rural remote and developing

119
00:05:00,500 --> 00:05:05,350
regions most typically we focus on

120
00:05:03,350 --> 00:05:08,270
community networks in these regions so

121
00:05:05,350 --> 00:05:09,770
what is a community network community

122
00:05:08,270 --> 00:05:13,340
network is a network that is owned and

123
00:05:09,770 --> 00:05:15,969
operated by members of the community and

124
00:05:13,340 --> 00:05:18,469
serving members of the local community

125
00:05:15,970 --> 00:05:20,780
community networks are generally small

126
00:05:18,470 --> 00:05:22,730
scale and they're typically owned

127
00:05:20,780 --> 00:05:25,609
collectively or as a small business and

128
00:05:22,730 --> 00:05:27,530
sometimes even run informally so two key

129
00:05:25,610 --> 00:05:29,210
points to take away from this the first

130
00:05:27,530 --> 00:05:31,520
point is that these internet providers

131
00:05:29,210 --> 00:05:33,919
are typically too small to have business

132
00:05:31,520 --> 00:05:36,109
relationships with typical large content

133
00:05:33,920 --> 00:05:39,260
distribution networks or content

134
00:05:36,110 --> 00:05:41,090
platforms the second key point is that

135
00:05:39,260 --> 00:05:42,650
these internet providers have local

136
00:05:41,090 --> 00:05:44,119
infrastructure that's close to their end

137
00:05:42,650 --> 00:05:46,280
users because they're coming from the

138
00:05:44,120 --> 00:05:47,330
communities that they're serving so I

139
00:05:46,280 --> 00:05:48,830
want to talk a little bit about the

140
00:05:47,330 --> 00:05:51,590
characteristics of these networks at a

141
00:05:48,830 --> 00:05:53,210
technical level one is that if you

142
00:05:51,590 --> 00:05:55,909
remember they're extremely remote and

143
00:05:53,210 --> 00:05:58,099
part of coming with being extremely

144
00:05:55,910 --> 00:06:00,050
remote in many cases is very constrained

145
00:05:58,100 --> 00:06:02,390
backhaul so I have some numbers from

146
00:06:00,050 --> 00:06:04,790
real networks that we operate in and

147
00:06:02,390 --> 00:06:06,620
generally you have on the order of a few

148
00:06:04,790 --> 00:06:09,830
megabits per second of backhaul

149
00:06:06,620 --> 00:06:12,230
connectivity for a few hundred users and

150
00:06:09,830 --> 00:06:15,500
even these metrics sometimes are a

151
00:06:12,230 --> 00:06:19,250
little bit optimistic but in these

152
00:06:15,500 --> 00:06:22,040
networks we typically have a modern fast

153
00:06:19,250 --> 00:06:23,690
radio access network and this access

154
00:06:22,040 --> 00:06:25,940
network is orders of magnitude faster

155
00:06:23,690 --> 00:06:29,660
than the backhaul connection so even out

156
00:06:25,940 --> 00:06:31,550
one bar of local signal strength the

157
00:06:29,660 --> 00:06:33,490
bottleneck is still usually the upstream

158
00:06:31,550 --> 00:06:36,110
backhaul connection

159
00:06:33,490 --> 00:06:38,390
so in these networks what does the

160
00:06:36,110 --> 00:06:41,960
traffic look like and we note that in a

161
00:06:38,390 --> 00:06:45,770
community oftentimes the media that

162
00:06:41,960 --> 00:06:47,450
people want to share and view is driven

163
00:06:45,770 --> 00:06:49,969
by social connections and these are

164
00:06:47,450 --> 00:06:50,840
tightly net local communities but we

165
00:06:49,970 --> 00:06:52,820
observe that

166
00:06:50,840 --> 00:06:56,539
what the network is actually seeing is

167
00:06:52,820 --> 00:06:58,280
mostly mostly HTTP sessions to the large

168
00:06:56,540 --> 00:07:02,470
content platforms that you would expect

169
00:06:58,280 --> 00:07:05,840
in 2019 so this isn't super surprising

170
00:07:02,470 --> 00:07:07,610
so why are we interested in webpack our

171
00:07:05,840 --> 00:07:09,138
goal is to optimize local traffic and

172
00:07:07,610 --> 00:07:11,300
keep it off this constrained backhaul

173
00:07:09,139 --> 00:07:12,830
connection whenever possible and this is

174
00:07:11,300 --> 00:07:15,320
really complicated to do in the current

175
00:07:12,830 --> 00:07:17,240
regime these networks again are too

176
00:07:15,320 --> 00:07:20,510
small to locally deploy hardware from

177
00:07:17,240 --> 00:07:22,070
major CD ends and there are some sort of

178
00:07:20,510 --> 00:07:24,889
hacky solutions but they're like really

179
00:07:22,070 --> 00:07:28,280
unsatisfying and they're all like bad in

180
00:07:24,889 --> 00:07:29,750
different ways right so three concrete

181
00:07:28,280 --> 00:07:32,210
use cases to leave you with from

182
00:07:29,750 --> 00:07:34,520
community networks that we see the first

183
00:07:32,210 --> 00:07:36,200
is that in these networks many users

184
00:07:34,520 --> 00:07:38,510
disable security updates for their

185
00:07:36,200 --> 00:07:41,180
devices because the updates are large

186
00:07:38,510 --> 00:07:42,530
and bandwidth is precious so you can

187
00:07:41,180 --> 00:07:44,450
imagine a network administrator's

188
00:07:42,530 --> 00:07:46,609
frustration when the same binary has to

189
00:07:44,450 --> 00:07:49,099
be downloaded hundreds of times over a

190
00:07:46,610 --> 00:07:51,260
backhaul bottleneck all right so we see

191
00:07:49,100 --> 00:07:55,039
webpack as in a bit as a way to cache

192
00:07:51,260 --> 00:07:57,800
these updates the second is local media

193
00:07:55,039 --> 00:07:59,599
again I talked about how media sharing

194
00:07:57,800 --> 00:08:03,050
is often defined by these local social

195
00:07:59,600 --> 00:08:05,750
networks and we see demand for the same

196
00:08:03,050 --> 00:08:06,800
media across many users and I won't go

197
00:08:05,750 --> 00:08:08,750
into this too much because I think

198
00:08:06,800 --> 00:08:12,320
there's a presentation about this in

199
00:08:08,750 --> 00:08:14,539
more detail later well the last case I

200
00:08:12,320 --> 00:08:16,849
also want to emphasize is breaking out

201
00:08:14,539 --> 00:08:18,800
local applications from the content that

202
00:08:16,850 --> 00:08:20,930
they're delivering so if you imagine

203
00:08:18,800 --> 00:08:22,460
applications like Trello or Google Docs

204
00:08:20,930 --> 00:08:24,979
that are very useful but that are

205
00:08:22,460 --> 00:08:27,349
relatively heavy they don't operate well

206
00:08:24,979 --> 00:08:28,849
in these remote communities and the

207
00:08:27,350 --> 00:08:30,950
members of these communities are cut off

208
00:08:28,850 --> 00:08:34,550
from these like important parts of the

209
00:08:30,950 --> 00:08:36,319
modern Internet so we see that we argue

210
00:08:34,549 --> 00:08:38,539
that like local caching even independent

211
00:08:36,320 --> 00:08:41,120
of content could benefit the

212
00:08:38,539 --> 00:08:44,380
applications themselves all right so our

213
00:08:41,120 --> 00:08:47,779
major asks or that we as a group

214
00:08:44,380 --> 00:08:50,240
consider these small ISPs and drive

215
00:08:47,779 --> 00:08:51,439
towards an open standard and we believe

216
00:08:50,240 --> 00:08:54,500
that this is probably the best way

217
00:08:51,440 --> 00:08:56,839
forward for us right now to us web pack

218
00:08:54,500 --> 00:08:59,510
looks like the closest thing available

219
00:08:56,839 --> 00:09:01,190
to meet our needs but we're open to

220
00:08:59,510 --> 00:09:02,839
other suggestions also and you just ask

221
00:09:01,190 --> 00:09:04,700
that you all keep this use case in mind

222
00:09:02,839 --> 00:09:07,120
it's not as new issues you may think

223
00:09:04,700 --> 00:09:07,120
thank you

224
00:09:10,870 --> 00:09:17,420
so is Brian going to present remotely

225
00:09:13,430 --> 00:09:21,890
over all right so Brian you can just put

226
00:09:17,420 --> 00:09:22,969
yourself in the me deco or Brian I'm

227
00:09:21,890 --> 00:09:25,910
sorry you can't hear me

228
00:09:22,970 --> 00:09:27,680
there you go sorry about that I will

229
00:09:25,910 --> 00:09:33,250
admit you and get your slides up

230
00:09:27,680 --> 00:09:37,250
oh it's easier said than done

231
00:09:33,250 --> 00:09:41,000
can you hear me yes can you see the

232
00:09:37,250 --> 00:09:42,590
slides I can see the slides awesome so

233
00:09:41,000 --> 00:09:46,430
if you want me to advance the slides

234
00:09:42,590 --> 00:09:47,810
just say next okay so this is gonna be

235
00:09:46,430 --> 00:09:55,160
really simple and I'm gonna be saying

236
00:09:47,810 --> 00:09:56,780
next a lot next so embedded web

237
00:09:55,160 --> 00:09:59,990
technologies are increasingly used for

238
00:09:56,780 --> 00:10:03,500
embedded systems this is everything from

239
00:09:59,990 --> 00:10:06,950
digital signage to cable boxes to smart

240
00:10:03,500 --> 00:10:09,500
appliances televisions there are already

241
00:10:06,950 --> 00:10:13,400
many hundreds of millions of devices

242
00:10:09,500 --> 00:10:18,410
using web browsers for this purpose and

243
00:10:13,400 --> 00:10:21,980
go to next they do this because it's

244
00:10:18,410 --> 00:10:25,370
really big Commons it means that you can

245
00:10:21,980 --> 00:10:30,920
draw on like millions of developers

246
00:10:25,370 --> 00:10:33,200
worldwide with common expertise and we

247
00:10:30,920 --> 00:10:38,599
can all work together on the foundations

248
00:10:33,200 --> 00:10:44,210
so next the trouble is it's currently a

249
00:10:38,600 --> 00:10:56,570
little other next most straightforward

250
00:10:44,210 --> 00:10:59,710
use cases like next some use cases also

251
00:10:56,570 --> 00:11:04,250
use a server basically a local loopback

252
00:10:59,710 --> 00:11:06,050
next but the majority of devices are

253
00:11:04,250 --> 00:11:09,050
actually really really resource

254
00:11:06,050 --> 00:11:13,609
constrained these are comparatively very

255
00:11:09,050 --> 00:11:15,979
low end hardware next so that's not very

256
00:11:13,610 --> 00:11:18,110
practical to run servers if you don't

257
00:11:15,980 --> 00:11:21,320
need to ultimately

258
00:11:18,110 --> 00:11:23,899
you're embedded device like always comes

259
00:11:21,320 --> 00:11:25,550
with at least one application like it's

260
00:11:23,899 --> 00:11:28,790
supposed to ship with the application

261
00:11:25,550 --> 00:11:31,089
and that application often can't depend

262
00:11:28,790 --> 00:11:37,790
on the network for the first load

263
00:11:31,089 --> 00:11:39,829
ok next but you almost always want to

264
00:11:37,790 --> 00:11:43,519
update the network when it's available

265
00:11:39,829 --> 00:11:45,829
and it wants to be part of the web just

266
00:11:43,519 --> 00:11:47,839
like everything else so I'd like to ship

267
00:11:45,829 --> 00:11:49,760
you an e-reader with some books already

268
00:11:47,839 --> 00:11:53,149
pre-installed or cookbook with some

269
00:11:49,760 --> 00:11:55,790
recipes these ultimately exist with real

270
00:11:53,149 --> 00:11:58,790
URLs at real endpoints on the real web

271
00:11:55,790 --> 00:12:01,459
and we would like to update them as

272
00:11:58,790 --> 00:12:05,089
content changes and things like that but

273
00:12:01,459 --> 00:12:08,089
if we send you your device and you don't

274
00:12:05,089 --> 00:12:09,860
have an internet connection at that

275
00:12:08,089 --> 00:12:16,550
point in time you should be able to turn

276
00:12:09,860 --> 00:12:18,019
it on and use it usefully next so this

277
00:12:16,550 --> 00:12:19,699
is a problem because the web has always

278
00:12:18,019 --> 00:12:21,980
assumed your first interaction with the

279
00:12:19,700 --> 00:12:24,490
site would come from fetching it from a

280
00:12:21,980 --> 00:12:27,410
domain across the internet and

281
00:12:24,490 --> 00:12:29,870
increasingly many features that are very

282
00:12:27,410 --> 00:12:34,969
useful for these sorts of things you get

283
00:12:29,870 --> 00:12:38,870
on embedded devices are cut off because

284
00:12:34,970 --> 00:12:42,680
they're designed around concepts that

285
00:12:38,870 --> 00:12:50,870
really only work with based on the

286
00:12:42,680 --> 00:12:52,819
network model next at the same time the

287
00:12:50,870 --> 00:12:55,120
web itself has increased its

288
00:12:52,820 --> 00:12:58,130
capabilities to allow it to work

289
00:12:55,120 --> 00:12:59,690
increasingly offline and so it seems

290
00:12:58,130 --> 00:13:02,269
that there is just simply a single

291
00:12:59,690 --> 00:13:04,010
significant disconnect just this

292
00:13:02,269 --> 00:13:10,220
assumption that the first content always

293
00:13:04,010 --> 00:13:11,990
comes from the online next so the

294
00:13:10,220 --> 00:13:19,010
question is how can we bridge those two

295
00:13:11,990 --> 00:13:21,199
worlds next and today the embedded use

296
00:13:19,010 --> 00:13:24,079
cases wind up solving and resolving a

297
00:13:21,199 --> 00:13:26,689
lot of complexity to bridge this gap but

298
00:13:24,079 --> 00:13:30,930
we really want is to simply bootstrap

299
00:13:26,690 --> 00:13:33,390
this content into a serviceworker

300
00:13:30,930 --> 00:13:35,699
is standard fare offline content and

301
00:13:33,390 --> 00:13:39,140
then let all the web technologies work

302
00:13:35,700 --> 00:13:45,180
just as fluidly as they would otherwise

303
00:13:39,140 --> 00:13:48,589
next we don't believe that this requires

304
00:13:45,180 --> 00:13:51,029
a model of universal trust and signing

305
00:13:48,589 --> 00:13:54,240
what we need is the uniform way to

306
00:13:51,029 --> 00:13:57,660
configure a specific device or browser

307
00:13:54,240 --> 00:14:02,089
startup to say trust this package as

308
00:13:57,660 --> 00:14:05,490
this it's not important that other

309
00:14:02,089 --> 00:14:08,190
browsers and devices also share the same

310
00:14:05,490 --> 00:14:10,589
level of trust because with an embedded

311
00:14:08,190 --> 00:14:14,430
device we're giving you an entire

312
00:14:10,589 --> 00:14:18,270
operating system and we can reasonably

313
00:14:14,430 --> 00:14:23,760
say what you trust I believe that's the

314
00:14:18,270 --> 00:14:26,130
end of my slides oh it's not so this

315
00:14:23,760 --> 00:14:28,020
leaves if we solve this it means no

316
00:14:26,130 --> 00:14:30,750
local web servers are necessary and

317
00:14:28,020 --> 00:14:32,610
there's no discrepancy like is it the

318
00:14:30,750 --> 00:14:36,300
web or isn't it to the web is that this

319
00:14:32,610 --> 00:14:38,430
strange relationship

320
00:14:36,300 --> 00:14:46,349
it's then it's just a standard offline

321
00:14:38,430 --> 00:14:51,180
web app yes so the ability to provide my

322
00:14:46,350 --> 00:14:55,650
disk image a package with the

323
00:14:51,180 --> 00:14:57,209
serviceworker and just load it and go so

324
00:14:55,650 --> 00:14:58,860
that was kind of fun it was like a huge

325
00:14:57,209 --> 00:15:01,800
edge of the slides just kept running no

326
00:14:58,860 --> 00:15:04,350
matter what yeah thank you for your

327
00:15:01,800 --> 00:15:05,729
comments if you like get into the

328
00:15:04,350 --> 00:15:07,620
discussion during the discussion time

329
00:15:05,730 --> 00:15:09,860
just jump right back in the queue thank

330
00:15:07,620 --> 00:15:09,860
you thank you

331
00:15:11,070 --> 00:15:30,029
Devin is gonna definitely connects and

332
00:15:14,370 --> 00:15:39,000
then couldn't go after that okay hello

333
00:15:30,029 --> 00:15:40,800
I'm Devin from Google hello so what led

334
00:15:39,000 --> 00:15:43,589
to amp in the first place this is a bit

335
00:15:40,800 --> 00:15:44,160
of prehistory for me because I joined am

336
00:15:43,589 --> 00:15:46,199
just

337
00:15:44,160 --> 00:15:49,829
last year to work on sign exchanges but

338
00:15:46,199 --> 00:15:53,160
as far as I can tell people saw the

339
00:15:49,829 --> 00:15:54,959
mobile web was suffering and kind of

340
00:15:53,160 --> 00:15:57,420
motivations to heal that come from a

341
00:15:54,959 --> 00:15:59,189
variety of places it's a amalgam of the

342
00:15:57,420 --> 00:16:01,620
individuals working on the project

343
00:15:59,190 --> 00:16:02,879
those that founded it and kind of set

344
00:16:01,620 --> 00:16:04,589
cultural precedent as well as the

345
00:16:02,879 --> 00:16:06,329
companies participate participating in

346
00:16:04,589 --> 00:16:09,990
the project which the motivations there

347
00:16:06,329 --> 00:16:12,420
is amalgams as well there are many

348
00:16:09,990 --> 00:16:14,939
possible avenues for improvement of the

349
00:16:12,420 --> 00:16:17,389
mobile web and an amp is one of many

350
00:16:14,939 --> 00:16:21,750
that Google has pursued over the years

351
00:16:17,389 --> 00:16:23,970
the Y amp in particular as far as I can

352
00:16:21,750 --> 00:16:27,269
tell be those kind of two main goals

353
00:16:23,970 --> 00:16:31,230
here one is to enable good UX at scale

354
00:16:27,269 --> 00:16:34,350
through opinionated DX and the other is

355
00:16:31,230 --> 00:16:36,509
to enable static verification of a

356
00:16:34,350 --> 00:16:38,579
variety of properties here's the UX

357
00:16:36,509 --> 00:16:40,529
properties security and privacy which

358
00:16:38,579 --> 00:16:42,089
I'll talk about on the next slide and as

359
00:16:40,529 --> 00:16:43,829
well as a communication channel between

360
00:16:42,089 --> 00:16:47,339
the prefer and the reference to enable

361
00:16:43,829 --> 00:16:50,339
certain interaction patterns so why the

362
00:16:47,339 --> 00:16:53,490
amp cache one is to enable this static

363
00:16:50,339 --> 00:16:55,620
analysis and another one is particularly

364
00:16:53,490 --> 00:16:58,470
fast page loading which if you're

365
00:16:55,620 --> 00:17:00,750
looking for like a 95 percentile metric

366
00:16:58,470 --> 00:17:03,300
it doesn't strictly require a cache but

367
00:17:00,750 --> 00:17:05,789
it helps and once you've made the

368
00:17:03,300 --> 00:17:07,289
decision to have a cache kind of then

369
00:17:05,789 --> 00:17:09,179
leads to this chain of implications

370
00:17:07,289 --> 00:17:12,689
which requires these particular privacy

371
00:17:09,179 --> 00:17:15,839
and security guarantees a consequence of

372
00:17:12,689 --> 00:17:17,390
this is bad URLs which leads to bad

373
00:17:15,839 --> 00:17:21,178
branding wasted screen real estate

374
00:17:17,390 --> 00:17:23,400
having to trust caches and difficulty or

375
00:17:21,179 --> 00:17:26,669
impossibility using a variety of web

376
00:17:23,400 --> 00:17:28,319
api's because the bad origin means that

377
00:17:26,669 --> 00:17:30,360
the amp cache has access to state it

378
00:17:28,319 --> 00:17:32,039
doesn't want and pages have to do extra

379
00:17:30,360 --> 00:17:34,889
work to send that back to the publisher

380
00:17:32,039 --> 00:17:38,929
for instance using course sign exchanges

381
00:17:34,890 --> 00:17:41,700
fix all that while still allowing amp to

382
00:17:38,929 --> 00:17:44,030
guarantee the sort of the UX privacy and

383
00:17:41,700 --> 00:17:47,970
security guarantees that were set by the

384
00:17:44,030 --> 00:17:49,700
initial unsigned amp deployment this is

385
00:17:47,970 --> 00:17:52,980
my attempt to sort of distill our

386
00:17:49,700 --> 00:17:56,490
minimal needs one is that the content

387
00:17:52,980 --> 00:17:57,630
should provide the URL in origin in a

388
00:17:56,490 --> 00:17:59,610
way that the browser can

389
00:17:57,630 --> 00:18:02,250
trust for display to the user as well as

390
00:17:59,610 --> 00:18:03,929
for those web AP is another is that the

391
00:18:02,250 --> 00:18:06,090
publisher should be able to specify a

392
00:18:03,930 --> 00:18:09,060
subset of the page that up to and

393
00:18:06,090 --> 00:18:11,459
including the whole page in a way that

394
00:18:09,060 --> 00:18:13,260
can render concurrently with subsequent

395
00:18:11,460 --> 00:18:16,770
with additional network requests for

396
00:18:13,260 --> 00:18:19,860
resources third the user experience

397
00:18:16,770 --> 00:18:23,220
should be relatively uneventful tears

398
00:18:19,860 --> 00:18:25,080
and lastly because this is kind of based

399
00:18:23,220 --> 00:18:26,970
on this an exchange spelling you know I

400
00:18:25,080 --> 00:18:28,470
may have over an under specified in ways

401
00:18:26,970 --> 00:18:31,710
that you know we'll discover as we

402
00:18:28,470 --> 00:18:35,070
explore the design space in the future

403
00:18:31,710 --> 00:18:37,170
there's room for Google's deployment of

404
00:18:35,070 --> 00:18:42,720
the current spec and we're working on

405
00:18:37,170 --> 00:18:46,140
all of these so caches cannot distribute

406
00:18:42,720 --> 00:18:48,150
modified versions of sign exchanges to

407
00:18:46,140 --> 00:18:51,780
users publisher signed exchanges to

408
00:18:48,150 --> 00:18:53,100
users but they can serve previously

409
00:18:51,780 --> 00:18:55,110
fetched sango's changes within the

410
00:18:53,100 --> 00:18:57,469
expires window this is mostly an

411
00:18:55,110 --> 00:18:59,820
improvement on the unsigned amp model

412
00:18:57,470 --> 00:19:02,130
the mitigations here are not full

413
00:18:59,820 --> 00:19:04,020
solutions because they are subject to

414
00:19:02,130 --> 00:19:06,180
aggregator approval as well as possible

415
00:19:04,020 --> 00:19:09,990
interference from high level actors that

416
00:19:06,180 --> 00:19:12,990
can selectively block traffic amp sign

417
00:19:09,990 --> 00:19:14,580
exchanges need to vary by distributor

418
00:19:12,990 --> 00:19:18,210
this is the appcache transform header

419
00:19:14,580 --> 00:19:20,970
that some people have heard of this is

420
00:19:18,210 --> 00:19:23,130
mostly due to the fact that these were

421
00:19:20,970 --> 00:19:25,340
deployed before the multi exchange

422
00:19:23,130 --> 00:19:29,400
solutions were designed and built and

423
00:19:25,340 --> 00:19:31,050
the sort of art non amp solution on amps

424
00:19:29,400 --> 00:19:32,190
and exchange solution shouldn't have

425
00:19:31,050 --> 00:19:35,730
this problem and hopefully we can fix

426
00:19:32,190 --> 00:19:39,300
this for amp as well lastly various

427
00:19:35,730 --> 00:19:42,150
companies including Google require amp

428
00:19:39,300 --> 00:19:43,950
for certain experiences this should be

429
00:19:42,150 --> 00:19:46,740
generalized generalizable to a much

430
00:19:43,950 --> 00:19:48,480
wider subset of the web and outside of

431
00:19:46,740 --> 00:19:51,750
this buff Google is working on evolving

432
00:19:48,480 --> 00:19:54,930
various standards to make that possible

433
00:19:51,750 --> 00:20:00,030
and welcomes participation in that space

434
00:19:54,930 --> 00:20:02,490
thank you weird a lot of material in

435
00:20:00,030 --> 00:20:04,320
five minutes thank you for that the

436
00:20:02,490 --> 00:20:08,460
clock management of this presentation is

437
00:20:04,320 --> 00:20:10,760
very good if nothing else koneko wiII be

438
00:20:08,460 --> 00:20:13,680
joining us remotely

439
00:20:10,760 --> 00:20:26,610
if so just put yourself in the me deco

440
00:20:13,680 --> 00:20:27,360
cube and I can hit the red button you

441
00:20:26,610 --> 00:20:31,320
have the floor

442
00:20:27,360 --> 00:20:33,060
can you see your slides you should just

443
00:20:31,320 --> 00:20:41,580
say next and I will aventure slides when

444
00:20:33,060 --> 00:20:45,300
you want hello and I'm Vista working on

445
00:20:41,580 --> 00:20:46,040
Chrome and I have been implementing next

446
00:20:45,300 --> 00:20:49,740
please

447
00:20:46,040 --> 00:20:52,830
so I'd like to talk about um use is

448
00:20:49,740 --> 00:20:54,990
caring all kinda bundles the unsigned

449
00:20:52,830 --> 00:20:57,419
bundles are basically you know condo

450
00:20:54,990 --> 00:20:59,190
losers chimney church because they

451
00:20:57,420 --> 00:21:04,650
abandon see can burn up multiple

452
00:20:59,190 --> 00:21:05,990
resources and the Camry present a single

453
00:21:04,650 --> 00:21:09,630
multiple pages

454
00:21:05,990 --> 00:21:11,400
users can just open the bra bundle in

455
00:21:09,630 --> 00:21:15,600
the cam browser around oh it is a bundle

456
00:21:11,400 --> 00:21:17,250
in the evening a while because it

457
00:21:15,600 --> 00:21:19,980
doesn't have the same interest it is not

458
00:21:17,250 --> 00:21:22,200
possible to verify who published the

459
00:21:19,980 --> 00:21:27,540
contemplates the con same as the

460
00:21:22,200 --> 00:21:29,880
original next piece and here's the

461
00:21:27,540 --> 00:21:32,700
potential use it imagine that the

462
00:21:29,880 --> 00:21:35,610
browser's provide a teacher like save a

463
00:21:32,700 --> 00:21:38,400
bundle where users can discreetly

464
00:21:35,610 --> 00:21:40,530
culturally download the current Facebook

465
00:21:38,400 --> 00:21:43,370
he was as brought him in the shade was a

466
00:21:40,530 --> 00:21:46,050
friend in order to the soft browser can

467
00:21:43,370 --> 00:21:48,780
automatically generate a bundle for the

468
00:21:46,050 --> 00:21:51,330
page or hide can probably also processor

469
00:21:48,780 --> 00:21:53,930
on bundle for beta you X and the profit

470
00:21:51,330 --> 00:21:58,980
a link to the browser can discover

471
00:21:53,930 --> 00:22:02,670
downloaded instead next and the feature

472
00:21:58,980 --> 00:22:04,860
like this quickly enable of like Union

473
00:22:02,670 --> 00:22:08,010
Station where internet connected is vini

474
00:22:04,860 --> 00:22:10,169
lady on the airplane your friend might

475
00:22:08,010 --> 00:22:12,480
have download a nice with game as a

476
00:22:10,170 --> 00:22:16,680
bundle and that because it's a bundle is

477
00:22:12,480 --> 00:22:19,050
just about offline an XP but then like I

478
00:22:16,680 --> 00:22:22,230
use the statistical you want to cost of

479
00:22:19,050 --> 00:22:23,549
tries on with of why use meet again but

480
00:22:22,230 --> 00:22:26,070
with one of it

481
00:22:23,549 --> 00:22:30,450
like a simple you jump discouraged it's

482
00:22:26,070 --> 00:22:35,939
a bundle using p2p parts I thought you

483
00:22:30,450 --> 00:22:40,489
just display that don't stir up in XP

484
00:22:35,940 --> 00:22:44,369
and then get the bundle file from your

485
00:22:40,489 --> 00:22:47,970
friends device next please and they then

486
00:22:44,369 --> 00:22:50,699
open it yeah the game our website just

487
00:22:47,970 --> 00:22:53,789
walks in a browser next week

488
00:22:50,700 --> 00:22:55,859
oh by the way this because I'm portion

489
00:22:53,789 --> 00:22:58,200
are you're actually well with latest

490
00:22:55,859 --> 00:23:00,330
Chrome Canary if you enable the

491
00:22:58,200 --> 00:23:03,539
particular flood or the with bundles

492
00:23:00,330 --> 00:23:05,699
either a project an unsigned bundles

493
00:23:03,539 --> 00:23:08,100
yeah or a word games with you can

494
00:23:05,700 --> 00:23:10,289
actually title if you're interested and

495
00:23:08,100 --> 00:23:14,580
I can share it with friends of our next

496
00:23:10,289 --> 00:23:16,799
big I didn't express to mention but of

497
00:23:14,580 --> 00:23:18,899
course because bundle can burned up

498
00:23:16,799 --> 00:23:22,080
multiple resource and those missiles can

499
00:23:18,899 --> 00:23:24,840
be launched from there users can use

500
00:23:22,080 --> 00:23:28,199
that themselves can use that for offline

501
00:23:24,840 --> 00:23:30,988
browsing and because resource can be

502
00:23:28,200 --> 00:23:37,619
just there it was very fast didn't rest

503
00:23:30,989 --> 00:23:39,659
of the collective XP and so all flying

504
00:23:37,619 --> 00:23:43,019
were like operate native situations is

505
00:23:39,659 --> 00:23:44,730
still very common in my being record it

506
00:23:43,019 --> 00:23:47,730
was actually also mentioned in previous

507
00:23:44,730 --> 00:23:51,690
box for camp like I income datings or

508
00:23:47,730 --> 00:23:54,359
some business systems you probably have

509
00:23:51,690 --> 00:23:57,470
experienced but like a Wi-Fi 105 but

510
00:23:54,359 --> 00:24:00,779
it's very flaky or actually in some

511
00:23:57,470 --> 00:24:02,820
mobile carriers something very heavy

512
00:24:00,779 --> 00:24:06,659
squadron when you just did that we study

513
00:24:02,820 --> 00:24:08,908
it once it happens getting anything from

514
00:24:06,659 --> 00:24:12,210
the server from the network becomes very

515
00:24:08,909 --> 00:24:15,539
very painful in the actually can be very

516
00:24:12,210 --> 00:24:19,590
commonly observable in Japan next please

517
00:24:15,539 --> 00:24:21,799
and also like for example of all

518
00:24:19,590 --> 00:24:25,080
Alliance for affordable Internet

519
00:24:21,799 --> 00:24:29,100
publishes internet affordability because

520
00:24:25,080 --> 00:24:31,830
every year in the latest we call plasma

521
00:24:29,100 --> 00:24:34,799
still is the billions of people are in

522
00:24:31,830 --> 00:24:37,530
solar eclipse offering and among needs

523
00:24:34,799 --> 00:24:43,139
people public Wi-Fi and the PCB parts

524
00:24:37,530 --> 00:24:45,810
by me very very common expedia day you

525
00:24:43,140 --> 00:24:48,450
can there are open construed available

526
00:24:45,810 --> 00:24:50,610
only absolute to develop a young kind of

527
00:24:48,450 --> 00:24:55,800
easily Crete as their bundles for just

528
00:24:50,610 --> 00:24:58,020
like misty so in some way we think that

529
00:24:55,800 --> 00:25:00,570
like I can but the unsigned bundles can

530
00:24:58,020 --> 00:25:02,760
be very useful for casualties and shared

531
00:25:00,570 --> 00:25:06,800
dishes and the bonded space changes

532
00:25:02,760 --> 00:25:10,260
parts even more offline so we think this

533
00:25:06,800 --> 00:25:19,020
technology could be various for all kind

534
00:25:10,260 --> 00:25:21,240
of thank you so much okay so thank you

535
00:25:19,020 --> 00:25:24,150
to all the presenters for summarizing

536
00:25:21,240 --> 00:25:25,620
the use cases and problems that they

537
00:25:24,150 --> 00:25:29,190
anticipate would be solved by the

538
00:25:25,620 --> 00:25:30,449
efforts in this working today we have 10

539
00:25:29,190 --> 00:25:32,520
minutes set aside now to talk about

540
00:25:30,450 --> 00:25:34,140
those use cases keeping in mind that

541
00:25:32,520 --> 00:25:36,330
afterwards you know Jeffrey will make a

542
00:25:34,140 --> 00:25:38,190
presentation about his sort of the

543
00:25:36,330 --> 00:25:40,860
proposed approaches of technologies he

544
00:25:38,190 --> 00:25:42,480
has for the potential working group if

545
00:25:40,860 --> 00:25:45,929
any of the speakers would like to come

546
00:25:42,480 --> 00:25:47,700
forward Jeffrey as well to help

547
00:25:45,930 --> 00:25:51,960
facilitate this discussion that's that's

548
00:25:47,700 --> 00:25:54,450
fine points of clarification mark go yes

549
00:25:51,960 --> 00:25:56,760
mark Nottingham um I just I was a little

550
00:25:54,450 --> 00:25:58,800
surprised so so it's being asserted that

551
00:25:56,760 --> 00:26:00,480
the use cases we just heard about are

552
00:25:58,800 --> 00:26:23,610
all in scope for the proposed work and

553
00:26:00,480 --> 00:26:29,220
will be delivered by it yes that was a

554
00:26:23,610 --> 00:26:32,040
long pause yes so um I see a very clear

555
00:26:29,220 --> 00:26:35,370
path from from what has been proposed to

556
00:26:32,040 --> 00:26:39,960
the amp use case that's fine I don't see

557
00:26:35,370 --> 00:26:41,909
a clear path or a natural reason why

558
00:26:39,960 --> 00:26:43,980
this work is is the right solution for

559
00:26:41,910 --> 00:26:47,430
the other use cases you know for the

560
00:26:43,980 --> 00:26:49,920
unsigned bundling why is a standard

561
00:26:47,430 --> 00:26:51,409
format for this necessary browsers

562
00:26:49,920 --> 00:26:53,190
already do this to some degree

563
00:26:51,409 --> 00:26:55,200
but I expect to hear about

564
00:26:53,190 --> 00:26:57,960
interoperability challenges in that area

565
00:26:55,200 --> 00:26:59,340
for the the remote network and the the

566
00:26:57,960 --> 00:27:00,809
poorly connected networks this is a

567
00:26:59,340 --> 00:27:03,059
problem we've talked about a lot in the

568
00:27:00,809 --> 00:27:05,639
HP working group we've had proposals in

569
00:27:03,059 --> 00:27:07,049
this space in the past and we didn't go

570
00:27:05,639 --> 00:27:09,209
forward for a lot of different reasons

571
00:27:07,049 --> 00:27:11,700
but but part of that is is that when you

572
00:27:09,210 --> 00:27:13,919
do that you lose confidentiality and and

573
00:27:11,700 --> 00:27:15,210
so it makes me a little nervous to say

574
00:27:13,919 --> 00:27:16,470
we're gonna address the C's case when we

575
00:27:15,210 --> 00:27:18,480
don't have an answer to the

576
00:27:16,470 --> 00:27:20,159
confidentiality problem and we don't

577
00:27:18,480 --> 00:27:21,480
have a run in a true mechanism for

578
00:27:20,159 --> 00:27:24,960
finding those caches there's a lot of

579
00:27:21,480 --> 00:27:26,580
undone work there so I'd almost want to

580
00:27:24,960 --> 00:27:28,619
say don't include that in scope for the

581
00:27:26,580 --> 00:27:31,789
Charter but maybe that's if we find a

582
00:27:28,619 --> 00:27:34,408
path towards that then do that later

583
00:27:31,789 --> 00:27:37,019
that's a party that actually turns out

584
00:27:34,409 --> 00:27:39,299
to be something that Daniel Kahn Gilmore

585
00:27:37,019 --> 00:27:41,279
raised as an issue with me and Brian

586
00:27:39,299 --> 00:27:43,408
some time ago and we actually did went

587
00:27:41,279 --> 00:27:45,299
out and did an analysis I think you're

588
00:27:43,409 --> 00:27:47,999
right it is much more complicated as it

589
00:27:45,299 --> 00:27:50,580
turns out the first use case where

590
00:27:47,999 --> 00:27:53,639
you're basically replacing the

591
00:27:50,580 --> 00:27:55,080
connection to a distributor replaces the

592
00:27:53,639 --> 00:27:56,908
connection to an origin it ends up

593
00:27:55,080 --> 00:27:58,980
looking a lot like in circular mental

594
00:27:56,909 --> 00:28:00,840
models were connection to a CDN

595
00:27:58,980 --> 00:28:02,789
replacing the connection to an origin in

596
00:28:00,840 --> 00:28:05,428
peer-to-peer networks it's somewhat

597
00:28:02,789 --> 00:28:07,379
different because you have two different

598
00:28:05,429 --> 00:28:10,019
ways of trying to manage the

599
00:28:07,379 --> 00:28:11,730
confidentiality property and I'll give

600
00:28:10,019 --> 00:28:13,860
you the simplest way of thinking about

601
00:28:11,730 --> 00:28:15,690
it in a flooding network this isn't a

602
00:28:13,860 --> 00:28:17,998
problem because every node sees every

603
00:28:15,690 --> 00:28:20,309
question and every response and so the

604
00:28:17,999 --> 00:28:22,470
size of the flooding Network turns out

605
00:28:20,309 --> 00:28:25,080
to be the equivalent of the anonymity

606
00:28:22,470 --> 00:28:26,639
size of the group you have now no

607
00:28:25,080 --> 00:28:28,830
peer-to-peer network in the modern sense

608
00:28:26,639 --> 00:28:30,689
is a flooding network but if you start

609
00:28:28,830 --> 00:28:32,970
from that and think about ok what I

610
00:28:30,690 --> 00:28:35,639
actually need to do is to obfuscate

611
00:28:32,970 --> 00:28:37,860
which client is asking the question

612
00:28:35,639 --> 00:28:39,389
there are actually techniques you can

613
00:28:37,860 --> 00:28:41,820
use for this that basically creates

614
00:28:39,389 --> 00:28:44,309
pseudo clients and say that the client

615
00:28:41,820 --> 00:28:46,710
that is sending it is claiming to be on

616
00:28:44,309 --> 00:28:49,559
path to the to the client which is

617
00:28:46,710 --> 00:28:51,690
making the request rather than being the

618
00:28:49,559 --> 00:28:55,039
requester itself and the result of that

619
00:28:51,690 --> 00:28:58,799
is as long as you're able to manufacture

620
00:28:55,039 --> 00:29:00,809
those kind of pseudo client mechanisms

621
00:28:58,799 --> 00:29:02,460
and this is actually something bundle

622
00:29:00,809 --> 00:29:04,480
allows you to do very easily but some

623
00:29:02,460 --> 00:29:06,010
others like writes mash or other peer

624
00:29:04,480 --> 00:29:09,429
your technologies don't allow you to do

625
00:29:06,010 --> 00:29:11,890
easily you can get there now is this

626
00:29:09,429 --> 00:29:14,650
worked enough to put into a standard

627
00:29:11,890 --> 00:29:16,330
right now absolutely not but I think

628
00:29:14,650 --> 00:29:20,049
there are paths for which we can take

629
00:29:16,330 --> 00:29:24,100
this analysis and there's a reasonable

630
00:29:20,049 --> 00:29:25,690
sense in which one or the other would

631
00:29:24,100 --> 00:29:27,549
allow us to move forward with the

632
00:29:25,690 --> 00:29:28,720
peer-to-peer cases so that's frankly the

633
00:29:27,549 --> 00:29:30,730
one that interested me that variance cut

634
00:29:28,720 --> 00:29:33,760
the queue after Brian really quick okay

635
00:29:30,730 --> 00:29:35,650
that that sounds exciting but I'd like

636
00:29:33,760 --> 00:29:37,809
to see the proposal so we can analyze it

637
00:29:35,650 --> 00:29:39,460
before we consider it in scope for this

638
00:29:37,809 --> 00:29:40,809
work and especially cannot only the the

639
00:29:39,460 --> 00:29:42,370
security analysis but the analysis of

640
00:29:40,809 --> 00:29:44,020
whether this is the right framework to

641
00:29:42,370 --> 00:29:45,760
fit that approach within right so so in

642
00:29:44,020 --> 00:29:47,379
particular that work on peer to the

643
00:29:45,760 --> 00:29:50,710
peer-to-peer protocol is not in the

644
00:29:47,380 --> 00:29:52,570
Turner it's only the the thing that you

645
00:29:50,710 --> 00:29:54,070
transfer and and the way the the

646
00:29:52,570 --> 00:29:55,840
community networks I believe would use

647
00:29:54,070 --> 00:29:58,270
it is there they would have a central

648
00:29:55,840 --> 00:30:01,418
node that users explicitly go to to

649
00:29:58,270 --> 00:30:03,340
fetch the applications so that so the

650
00:30:01,419 --> 00:30:04,870
privacy is explicit and we have 20

651
00:30:03,340 --> 00:30:08,260
minutes to the big cuchara as well so

652
00:30:04,870 --> 00:30:10,540
Phil Han Baker I'm really puzzled by the

653
00:30:08,260 --> 00:30:12,940
set of use cases because as I was

654
00:30:10,540 --> 00:30:16,210
watching them I see well of course you

655
00:30:12,940 --> 00:30:18,070
want encryption I just can't understand

656
00:30:16,210 --> 00:30:20,799
why you're proposing a packaging format

657
00:30:18,070 --> 00:30:23,230
without encryption in the first place I

658
00:30:20,799 --> 00:30:25,540
can't see why with those use cases you

659
00:30:23,230 --> 00:30:27,330
don't want encryption because if you're

660
00:30:25,540 --> 00:30:30,610
doing any cache data in the network

661
00:30:27,330 --> 00:30:33,010
cache data should be encrypted I don't

662
00:30:30,610 --> 00:30:36,969
think that today we should be talking

663
00:30:33,010 --> 00:30:40,150
about deploying a noose anew bunch of

664
00:30:36,970 --> 00:30:43,679
web technology that ensure this assumes

665
00:30:40,150 --> 00:30:46,480
that the data sits even on a web server

666
00:30:43,679 --> 00:30:48,820
unencrypted and now you wanting to throw

667
00:30:46,480 --> 00:30:51,880
this data all over in caches everywhere

668
00:30:48,820 --> 00:30:57,299
and not think about encryption I think

669
00:30:51,880 --> 00:30:57,299
that encryption should be a requirement

670
00:30:57,419 --> 00:31:14,520
Roberto I'm still Roberto thank you

671
00:31:03,730 --> 00:31:17,940
Facebook if we're if weren't

672
00:31:14,520 --> 00:31:19,590
is to ensure that we can offline some

673
00:31:17,940 --> 00:31:23,130
applications or speed up some of the

674
00:31:19,590 --> 00:31:26,459
offline let's speed it up so that we can

675
00:31:23,130 --> 00:31:29,460
use offline resources would this only

676
00:31:26,460 --> 00:31:31,530
include HTTP or are we imagining that we

677
00:31:29,460 --> 00:31:34,680
could extend this as well to some of the

678
00:31:31,530 --> 00:31:37,710
other api's like WebSockets that are

679
00:31:34,680 --> 00:31:39,060
fairly common within the pages so the

680
00:31:37,710 --> 00:31:41,940
reason I ask this right now is because

681
00:31:39,060 --> 00:31:48,450
it may change how we define this problem

682
00:31:41,940 --> 00:31:50,070
if we are going to chartering hi Malory

683
00:31:48,450 --> 00:31:51,720
no doll from article 19 just a

684
00:31:50,070 --> 00:31:54,620
clarifying question on Brian's

685
00:31:51,720 --> 00:31:57,420
presentation it said on the future slide

686
00:31:54,620 --> 00:31:59,250
working on making amp a requirement for

687
00:31:57,420 --> 00:32:00,510
various integrations are you making it a

688
00:31:59,250 --> 00:32:08,010
requirement you're making it not a

689
00:32:00,510 --> 00:32:10,320
requirement yeah so it is presently a

690
00:32:08,010 --> 00:32:11,879
requirement for various cases the the

691
00:32:10,320 --> 00:32:14,909
goal is to make it not a requirement

692
00:32:11,880 --> 00:32:20,100
there is going to be a requirement but

693
00:32:14,910 --> 00:32:23,250
the goal is to widen that - yeah that's

694
00:32:20,100 --> 00:32:25,110
great so I'm glad it's not the other

695
00:32:23,250 --> 00:32:27,720
thing and then I had just a comment

696
00:32:25,110 --> 00:32:29,370
about I think the community networks

697
00:32:27,720 --> 00:32:31,470
case is super interesting and I think it

698
00:32:29,370 --> 00:32:33,449
should go beyond a humble request to

699
00:32:31,470 --> 00:32:36,240
consider it as a use case actually think

700
00:32:33,450 --> 00:32:38,190
that in a lot of ways if you actually

701
00:32:36,240 --> 00:32:40,050
start from the experience in the use

702
00:32:38,190 --> 00:32:42,200
case of a community network you will get

703
00:32:40,050 --> 00:32:45,480
much further than thinking about like

704
00:32:42,200 --> 00:32:46,680
the intermediary needs which is what amp

705
00:32:45,480 --> 00:32:48,390
and news and all the other ones are

706
00:32:46,680 --> 00:32:50,190
because there's really three people

707
00:32:48,390 --> 00:32:51,480
playing here and depending on their

708
00:32:50,190 --> 00:32:52,770
perspective you would probably get a

709
00:32:51,480 --> 00:32:54,750
different technology there's the

710
00:32:52,770 --> 00:32:56,190
original publisher there's then the end

711
00:32:54,750 --> 00:32:58,320
user and then there's the intermediary

712
00:32:56,190 --> 00:32:59,730
and right now all these technologies are

713
00:32:58,320 --> 00:33:03,030
coming from an intermediaries

714
00:32:59,730 --> 00:33:05,280
perspective and I feel like we could get

715
00:33:03,030 --> 00:33:07,350
a very different result if we start with

716
00:33:05,280 --> 00:33:12,090
community networks and that current

717
00:33:07,350 --> 00:33:15,360
reality so just I guess hope that that's

718
00:33:12,090 --> 00:33:17,459
the focus and not a side issue and in

719
00:33:15,360 --> 00:33:19,409
fact the design did start from the idea

720
00:33:17,460 --> 00:33:22,280
of the community and networks and we

721
00:33:19,410 --> 00:33:26,850
later realize that it worked for amp -

722
00:33:22,280 --> 00:33:28,379
thank you Daniel con Gilmore ACLU so I

723
00:33:26,850 --> 00:33:33,000
continue to be nervous about

724
00:33:28,380 --> 00:33:35,520
this appreciate Ted's comment about in

725
00:33:33,000 --> 00:33:36,450
response to mark Nottingham so but I

726
00:33:35,520 --> 00:33:37,560
wanted to point out there was a couple

727
00:33:36,450 --> 00:33:39,390
weird things that happened in the

728
00:33:37,560 --> 00:33:41,340
exchange just between Marg and Ted their

729
00:33:39,390 --> 00:33:42,870
mark came up here and said we really

730
00:33:41,340 --> 00:33:45,240
need to think about confidentiality and

731
00:33:42,870 --> 00:33:47,419
Ted's came up and said what we did this

732
00:33:45,240 --> 00:33:50,190
analysis thinking about basically

733
00:33:47,420 --> 00:33:54,870
metadata privacy and those two are not

734
00:33:50,190 --> 00:33:56,280
the same thing so one question and maybe

735
00:33:54,870 --> 00:33:58,050
this is also related to Phil's comment

736
00:33:56,280 --> 00:33:59,700
but so one question is how much should

737
00:33:58,050 --> 00:34:02,700
the intermediary be able to see of the

738
00:33:59,700 --> 00:34:04,590
content and then the second question is

739
00:34:02,700 --> 00:34:06,810
how much should the intermediary be able

740
00:34:04,590 --> 00:34:10,469
to see of what the user actually does

741
00:34:06,810 --> 00:34:13,949
and the fact that those two things are

742
00:34:10,469 --> 00:34:17,730
being bundled together worries me and

743
00:34:13,949 --> 00:34:21,178
the fact that the that we are now

744
00:34:17,730 --> 00:34:23,909
conflating authenticity with the origin

745
00:34:21,179 --> 00:34:26,190
and all of other pieces of whatever the

746
00:34:23,909 --> 00:34:27,570
origin means in the browser also worries

747
00:34:26,190 --> 00:34:30,389
me because I think as we talked about

748
00:34:27,570 --> 00:34:32,490
last time there's a lot of things that

749
00:34:30,389 --> 00:34:34,590
the origin means in the Web today and

750
00:34:32,489 --> 00:34:36,359
I'm not convinced that we actually know

751
00:34:34,590 --> 00:34:37,200
what all of those things are and what

752
00:34:36,360 --> 00:34:38,460
we're going to be doing with it so I'm

753
00:34:37,199 --> 00:34:40,560
just going to repeat that particular

754
00:34:38,460 --> 00:34:42,020
concern because I don't think those

755
00:34:40,560 --> 00:34:46,469
questions have been answered

756
00:34:42,020 --> 00:34:47,940
in in a in a robust way I don't even

757
00:34:46,469 --> 00:34:49,290
know how to answer them because it's do

758
00:34:47,940 --> 00:34:51,418
it because the web is so big so I'm just

759
00:34:49,290 --> 00:34:52,949
like trying to put those concerns back

760
00:34:51,418 --> 00:34:55,020
on the table I also want to add one

761
00:34:52,949 --> 00:35:00,120
quick thing which is when we're thinking

762
00:34:55,020 --> 00:35:03,270
about this stuff the web security model

763
00:35:00,120 --> 00:35:06,569
is a transport security model this is an

764
00:35:03,270 --> 00:35:08,670
object security model I have no problem

765
00:35:06,570 --> 00:35:11,130
with object security models to the NS a

766
00:35:08,670 --> 00:35:13,530
casaba security openpgp is object

767
00:35:11,130 --> 00:35:15,360
security CMS is object security but

768
00:35:13,530 --> 00:35:19,350
that's not the web security model yeah

769
00:35:15,360 --> 00:35:21,120
we'll see this question later okay um so

770
00:35:19,350 --> 00:35:22,410
just for clarity Kent as part of the

771
00:35:21,120 --> 00:35:25,049
proponents for the Buffs I'm gonna give

772
00:35:22,410 --> 00:35:26,759
me a chance to clarify he wants there so

773
00:35:25,050 --> 00:35:28,110
I appreciate the comment I was actually

774
00:35:26,760 --> 00:35:29,910
gonna ask you a clarifying question

775
00:35:28,110 --> 00:35:31,440
which is why cuz they're okay

776
00:35:29,910 --> 00:35:32,879
so quickly but you you got to the end

777
00:35:31,440 --> 00:35:36,360
before did and that is when when you're

778
00:35:32,880 --> 00:35:38,700
asking in particular what can the

779
00:35:36,360 --> 00:35:40,680
intramurally intermediary see of what

780
00:35:38,700 --> 00:35:41,939
the user does can you unpack that

781
00:35:40,680 --> 00:35:46,169
slightly what the

782
00:35:41,940 --> 00:35:51,299
sure so we're the transport model that

783
00:35:46,170 --> 00:35:54,750
we know and love on the web the

784
00:35:51,299 --> 00:35:59,520
intermediary well I suppose there are

785
00:35:54,750 --> 00:36:00,920
you know link tracking JavaScript and

786
00:35:59,520 --> 00:36:04,220
things like that but once the user has

787
00:36:00,920 --> 00:36:06,150
navigated away from they prefer the

788
00:36:04,220 --> 00:36:10,319
prefer basically doesn't get to see

789
00:36:06,150 --> 00:36:12,119
anything else right in terms of what the

790
00:36:10,319 --> 00:36:15,839
user is concretely doing when they

791
00:36:12,119 --> 00:36:17,099
interact with the origin in the model

792
00:36:15,839 --> 00:36:19,950
where the intermediary just keeps

793
00:36:17,099 --> 00:36:21,930
themselves there and acts as a proxy for

794
00:36:19,950 --> 00:36:26,160
the content they see all of the

795
00:36:21,930 --> 00:36:28,500
transactions between the between the

796
00:36:26,160 --> 00:36:29,279
client and the origin so in this

797
00:36:28,500 --> 00:36:31,799
particular case you're thinking

798
00:36:29,280 --> 00:36:34,349
intermediary equals distributor of the

799
00:36:31,799 --> 00:36:37,500
bundle right that's right or a bug or

800
00:36:34,349 --> 00:36:41,880
bundles bundles and they may be able to

801
00:36:37,500 --> 00:36:43,559
extract piecemeal right so if the only

802
00:36:41,880 --> 00:36:45,750
thing they get is one bundle from the

803
00:36:43,559 --> 00:36:47,700
origin then presumably they shipped the

804
00:36:45,750 --> 00:36:52,230
entire bundle that will probably make

805
00:36:47,700 --> 00:36:54,089
the small networks sad because that's it

806
00:36:52,230 --> 00:36:55,829
you know the bundle is large and they're

807
00:36:54,089 --> 00:36:56,970
now forced to pay that cost even if the

808
00:36:55,829 --> 00:36:58,799
user is only looking at why that woman

809
00:36:56,970 --> 00:37:00,689
to the bundle the bundle is split up

810
00:36:58,799 --> 00:37:02,640
into detail and the user requests the

811
00:37:00,690 --> 00:37:04,680
different bundles separately then you

812
00:37:02,640 --> 00:37:07,828
get finer grained details about what the

813
00:37:04,680 --> 00:37:09,299
user actually is doing okay so we can

814
00:37:07,829 --> 00:37:11,190
probably take a detailed discussion of

815
00:37:09,299 --> 00:37:12,390
this offline but I agree with you that

816
00:37:11,190 --> 00:37:14,700
you have to think about this in a

817
00:37:12,390 --> 00:37:16,859
slightly different way here so an

818
00:37:14,700 --> 00:37:20,879
example that was given in in later

819
00:37:16,859 --> 00:37:23,819
slides is the the weekly digest that

820
00:37:20,880 --> 00:37:26,839
gets handed around Cuba it's actually

821
00:37:23,819 --> 00:37:30,029
fairly large as a bundle of information

822
00:37:26,839 --> 00:37:32,460
but the peer-to-peer handing of it

823
00:37:30,029 --> 00:37:34,079
around is very very cheap so the

824
00:37:32,460 --> 00:37:35,640
backhaul portion of it that the

825
00:37:34,079 --> 00:37:38,849
generation in the backhaul of it is the

826
00:37:35,640 --> 00:37:40,710
expensive part both from a true cost

827
00:37:38,849 --> 00:37:43,200
perspective and frankly in the past a

828
00:37:40,710 --> 00:37:46,260
political risk perspective right so if

829
00:37:43,200 --> 00:37:48,240
you're handing that off as a whole in

830
00:37:46,260 --> 00:37:50,190
fact the intermediary doesn't know

831
00:37:48,240 --> 00:37:52,140
anything about what you're interested in

832
00:37:50,190 --> 00:37:54,539
within that about right so the larger

833
00:37:52,140 --> 00:37:55,170
that's core and so it's sort of like

834
00:37:54,539 --> 00:37:59,280
peeking

835
00:37:55,170 --> 00:38:00,930
a DNS query provider you you can hide

836
00:37:59,280 --> 00:38:02,550
your query stream and everybody else's

837
00:38:00,930 --> 00:38:03,690
query stream if you get a big one but

838
00:38:02,550 --> 00:38:06,030
now you're talking to somebody who's a

839
00:38:03,690 --> 00:38:07,200
big query provider you have the same

840
00:38:06,030 --> 00:38:09,210
sort of thing when you're talking about

841
00:38:07,200 --> 00:38:11,580
the size of object you as a content

842
00:38:09,210 --> 00:38:13,320
creator create and so one of the things

843
00:38:11,580 --> 00:38:15,180
that the content creators have to think

844
00:38:13,320 --> 00:38:18,690
about is what they're putting together

845
00:38:15,180 --> 00:38:21,600
in a bundle is it enough to have the

846
00:38:18,690 --> 00:38:23,880
user experience set that they're likely

847
00:38:21,600 --> 00:38:26,430
users are going to want to have in the

848
00:38:23,880 --> 00:38:29,010
context that they want frankly I think

849
00:38:26,430 --> 00:38:31,649
amp is the simple version of this set of

850
00:38:29,010 --> 00:38:33,900
considerations right it's much harder in

851
00:38:31,650 --> 00:38:36,840
the peer to peer cases but I think again

852
00:38:33,900 --> 00:38:39,090
it's both worth doing and and should be

853
00:38:36,840 --> 00:38:40,440
the motivating use case for for some of

854
00:38:39,090 --> 00:38:42,180
the security and privacy considerations

855
00:38:40,440 --> 00:38:43,890
that we end up writing ok yeah we'd have

856
00:38:42,180 --> 00:38:45,480
to wrap up this section of the program

857
00:38:43,890 --> 00:38:46,890
at this point but we have a chance for

858
00:38:45,480 --> 00:38:48,990
more discussion coming up later but I

859
00:38:46,890 --> 00:38:50,879
just one quick do you feel about a lot

860
00:38:48,990 --> 00:38:54,959
but please keep it under your sentence

861
00:38:50,880 --> 00:38:57,060
so the person distributing the bundle is

862
00:38:54,960 --> 00:38:58,950
the origin and they are making decisions

863
00:38:57,060 --> 00:39:01,650
in terms of how they pack up the bundle

864
00:38:58,950 --> 00:39:03,899
which will have an impact on the privacy

865
00:39:01,650 --> 00:39:06,690
characteristics for the client with

866
00:39:03,900 --> 00:39:08,070
respect to the intermediary so the

867
00:39:06,690 --> 00:39:09,840
intent is about who's making these

868
00:39:08,070 --> 00:39:14,580
decisions and who's getting affected by

869
00:39:09,840 --> 00:39:16,230
them are pretty weird so we'll move on a

870
00:39:14,580 --> 00:39:18,180
Jeff is going to talk about some of the

871
00:39:16,230 --> 00:39:21,600
proposed technologies potentially that

872
00:39:18,180 --> 00:39:23,040
would be in the working group so I'll

873
00:39:21,600 --> 00:39:24,839
start this by saying all of this is

874
00:39:23,040 --> 00:39:27,120
preliminary we expect this to change

875
00:39:24,840 --> 00:39:29,100
possibly in significant ways as the

876
00:39:27,120 --> 00:39:30,600
working group does its work and there's

877
00:39:29,100 --> 00:39:34,259
a piece of the design that that's

878
00:39:30,600 --> 00:39:36,690
intended to facilitate that so I'm gonna

879
00:39:34,260 --> 00:39:38,850
this is in two sections one is the the

880
00:39:36,690 --> 00:39:42,510
package or bundle format the other is

881
00:39:38,850 --> 00:39:46,350
talking about origin trust so a package

882
00:39:42,510 --> 00:39:48,960
is a collection of URLs possibly from

883
00:39:46,350 --> 00:39:51,120
multiple origins with content

884
00:39:48,960 --> 00:39:53,790
negotiation information so this this

885
00:39:51,120 --> 00:39:55,680
example has one URL that's negotiated on

886
00:39:53,790 --> 00:39:57,600
language one that's negotiated on

887
00:39:55,680 --> 00:39:59,279
content type and one that's not

888
00:39:57,600 --> 00:40:02,850
negotiated and comes from a different

889
00:39:59,280 --> 00:40:04,980
origin than the other to the overall

890
00:40:02,850 --> 00:40:07,900
format in the in the current design

891
00:40:04,980 --> 00:40:10,359
it's the subset of see bore without

892
00:40:07,900 --> 00:40:13,359
without tags without complicated map

893
00:40:10,359 --> 00:40:15,670
keys and without floating-point there's

894
00:40:13,359 --> 00:40:18,819
a trunk at the beginning of the format

895
00:40:15,670 --> 00:40:20,859
that we hope to be invariant which has

896
00:40:18,819 --> 00:40:22,450
the version number and a fallback URL so

897
00:40:20,859 --> 00:40:24,430
that a client that doesn't understand

898
00:40:22,450 --> 00:40:31,058
the version it gets can just redirect to

899
00:40:24,430 --> 00:40:33,759
that URL there's a list of sections so

900
00:40:31,059 --> 00:40:36,220
that the format can be used in a random

901
00:40:33,759 --> 00:40:37,779
access way there's an index of those

902
00:40:36,220 --> 00:40:40,808
sections of pointers directly to where

903
00:40:37,779 --> 00:40:42,400
they start so that it can be used so

904
00:40:40,809 --> 00:40:44,380
that it can be read in a streaming way

905
00:40:42,400 --> 00:40:46,299
we put that index at the beginning of

906
00:40:44,380 --> 00:40:48,759
the format unlike the zip which which

907
00:40:46,299 --> 00:40:52,869
puts it at the end this sacrifices the

908
00:40:48,759 --> 00:40:54,309
ability to append resources and the

909
00:40:52,869 --> 00:40:56,769
ability to write the format in a

910
00:40:54,309 --> 00:40:58,329
straight anyway and then at the very end

911
00:40:56,769 --> 00:40:59,740
we stick the total length of the format

912
00:40:58,329 --> 00:41:03,910
so that we can stuff it into

913
00:40:59,740 --> 00:41:07,089
self-extracting executables the index

914
00:41:03,910 --> 00:41:09,670
section is a map from a URL and content

915
00:41:07,089 --> 00:41:12,160
negotiation information to a range of

916
00:41:09,670 --> 00:41:13,749
bytes in the responses section the

917
00:41:12,160 --> 00:41:15,220
content negotiation information

918
00:41:13,749 --> 00:41:20,230
currently uses mark Nottingham's

919
00:41:15,220 --> 00:41:24,999
variants proposal the responses section

920
00:41:20,230 --> 00:41:26,799
is just a big chunk of HTP responses the

921
00:41:24,999 --> 00:41:28,598
index points at an individual response

922
00:41:26,799 --> 00:41:30,940
so you never have to parse the whole

923
00:41:28,599 --> 00:41:34,329
section at once you just parse the thing

924
00:41:30,940 --> 00:41:36,309
you want to look up a response is

925
00:41:34,329 --> 00:41:39,279
represented as the pair of header and

926
00:41:36,309 --> 00:41:41,470
body the header is a map of map from

927
00:41:39,279 --> 00:41:43,660
names to values we don't represent

928
00:41:41,470 --> 00:41:45,459
trailers right now and we assume that

929
00:41:43,660 --> 00:41:46,930
header fields have been combined which

930
00:41:45,460 --> 00:41:50,170
means that that we can't represent

931
00:41:46,930 --> 00:41:51,549
setcookie or multiple set cookies as far

932
00:41:50,170 --> 00:41:53,619
as I know that's the only header that

933
00:41:51,549 --> 00:41:54,940
breaks in this model and we could change

934
00:41:53,619 --> 00:41:59,499
it if people think it's important to

935
00:41:54,940 --> 00:42:02,980
bundle setcookie the manifest gives you

936
00:41:59,499 --> 00:42:05,078
a pointer it gives you a URL for sort of

937
00:42:02,980 --> 00:42:06,819
metadata about the package and that URL

938
00:42:05,079 --> 00:42:09,759
is expected to be found within the

939
00:42:06,819 --> 00:42:11,950
within the package for a web app it's

940
00:42:09,759 --> 00:42:15,239
probably the app manifest defined by the

941
00:42:11,950 --> 00:42:19,509
w3c for a book it might be the the ePub

942
00:42:15,239 --> 00:42:21,670
index format or manifest format it's

943
00:42:19,509 --> 00:42:23,290
it's not not specified

944
00:42:21,670 --> 00:42:27,059
what it needs to be that'll be in the

945
00:42:23,290 --> 00:42:30,520
kind of w3c side of the specifications

946
00:42:27,059 --> 00:42:33,640
there's a list of critical sections so

947
00:42:30,520 --> 00:42:36,339
the the section names are an

948
00:42:33,640 --> 00:42:38,650
extensibility point and so if we define

949
00:42:36,339 --> 00:42:42,578
a new section and it's important that

950
00:42:38,650 --> 00:42:44,230
clients read it or or don't use the

951
00:42:42,579 --> 00:42:46,030
package then it gets listed in critical

952
00:42:44,230 --> 00:42:47,829
sections and there's a couple other ways

953
00:42:46,030 --> 00:42:50,280
to represent this if we if we think this

954
00:42:47,829 --> 00:42:53,920
isn't the right the right detailed way

955
00:42:50,280 --> 00:42:57,339
and finally there's a list of signatures

956
00:42:53,920 --> 00:42:58,869
for first stuff in the bundle so the

957
00:42:57,339 --> 00:43:02,078
signature section has a list of

958
00:42:58,869 --> 00:43:03,880
authorities an authority is x.509

959
00:43:02,079 --> 00:43:05,980
certificate it could be a raw public key

960
00:43:03,880 --> 00:43:08,380
we could define other other things that

961
00:43:05,980 --> 00:43:11,470
are authorities Rob public keys are

962
00:43:08,380 --> 00:43:13,270
useful for for a signature based sub

963
00:43:11,470 --> 00:43:15,189
resource integrity where a webpage just

964
00:43:13,270 --> 00:43:17,859
says here's the public key I expect to

965
00:43:15,190 --> 00:43:19,660
have signed by resource an x.509

966
00:43:17,859 --> 00:43:22,540
certificate could represent a domain

967
00:43:19,660 --> 00:43:24,430
owner or something else for instance a

968
00:43:22,540 --> 00:43:27,750
transparency log asserting that that

969
00:43:24,430 --> 00:43:30,430
something that a resource appeared in it

970
00:43:27,750 --> 00:43:32,829
could be kind of semantically a

971
00:43:30,430 --> 00:43:34,930
publisher of books that vouch for the

972
00:43:32,829 --> 00:43:38,020
content but don't say this this lives at

973
00:43:34,930 --> 00:43:39,940
a particular origin and the list needs

974
00:43:38,020 --> 00:43:41,589
to include any certificates used to

975
00:43:39,940 --> 00:43:44,109
build a chain which Rusted Root because

976
00:43:41,589 --> 00:43:46,240
these are meant to be used offline each

977
00:43:44,109 --> 00:43:48,910
signature picks out a signing Authority

978
00:43:46,240 --> 00:43:51,089
the the type of public key defiant

979
00:43:48,910 --> 00:43:54,970
determines the the signature algorithm

980
00:43:51,089 --> 00:43:58,808
it defines when in time the signature is

981
00:43:54,970 --> 00:44:02,078
valid start and end it points at a URL

982
00:43:58,809 --> 00:44:04,059
where you can update the signature so -

983
00:44:02,079 --> 00:44:05,980
once it expires you can get a new

984
00:44:04,059 --> 00:44:08,950
version assuming the content hasn't

985
00:44:05,980 --> 00:44:11,609
changed and it it covers a particular

986
00:44:08,950 --> 00:44:13,779
subset of resources so you can have

987
00:44:11,609 --> 00:44:16,390
resources for multiple origins which you

988
00:44:13,780 --> 00:44:19,839
need different signers and so you you

989
00:44:16,390 --> 00:44:23,710
pick out the the particular subset that

990
00:44:19,839 --> 00:44:25,690
this signature is vouching for signs the

991
00:44:23,710 --> 00:44:28,599
hashes of the resource you seem Martin

992
00:44:25,690 --> 00:44:31,000
Thompson's mice algorithm again to help

993
00:44:28,599 --> 00:44:32,589
with stream bloating we don't have a

994
00:44:31,000 --> 00:44:34,180
design yet for counter signatures but

995
00:44:32,589 --> 00:44:35,470
there's a couple use cases that seem

996
00:44:34,180 --> 00:44:37,330
like they need them so that's

997
00:44:35,470 --> 00:44:41,680
something that that I would suggest the

998
00:44:37,330 --> 00:44:44,348
working group think about when you have

999
00:44:41,680 --> 00:44:47,259
a package that has untrusted stuff in it

1000
00:44:44,349 --> 00:44:49,450
so stuff that's not signed each resource

1001
00:44:47,260 --> 00:44:52,270
has a package URL and an origin that

1002
00:44:49,450 --> 00:44:54,549
it's claiming now we need that to be

1003
00:44:52,270 --> 00:44:55,990
cross origin with stuff that is actually

1004
00:44:54,550 --> 00:44:58,770
from the origin that's claimed otherwise

1005
00:44:55,990 --> 00:45:00,609
you get trivial cross-site scripting

1006
00:44:58,770 --> 00:45:02,920
resources with a different claimed

1007
00:45:00,609 --> 00:45:05,560
origin the same package need to be cross

1008
00:45:02,920 --> 00:45:07,690
origin so that storage works if you

1009
00:45:05,560 --> 00:45:09,880
bundle two different websites into one

1010
00:45:07,690 --> 00:45:12,910
package like el paquete de Seminole does

1011
00:45:09,880 --> 00:45:16,599
in Cuba you don't want their their

1012
00:45:12,910 --> 00:45:18,279
storage to stomp on each other things on

1013
00:45:16,599 --> 00:45:20,050
the server that served the package

1014
00:45:18,280 --> 00:45:22,390
should be cross origin with the package

1015
00:45:20,050 --> 00:45:24,099
this supports the web archive which

1016
00:45:22,390 --> 00:45:27,368
bundles a bunch of websites that it

1017
00:45:24,099 --> 00:45:30,640
doesn't trust and doesn't want them to

1018
00:45:27,369 --> 00:45:33,430
be able to mess with the the main the

1019
00:45:30,640 --> 00:45:34,900
main origin and then we think that that

1020
00:45:33,430 --> 00:45:36,819
you should be able to package the same

1021
00:45:34,900 --> 00:45:38,800
resource into two packages like two

1022
00:45:36,820 --> 00:45:40,930
versions of a resource into two packages

1023
00:45:38,800 --> 00:45:44,560
and have them not stomp on there so on

1024
00:45:40,930 --> 00:45:46,569
each other's storage so origin trust is

1025
00:45:44,560 --> 00:45:49,890
that the controversial part of all this

1026
00:45:46,570 --> 00:45:52,480
as far as I can tell

1027
00:45:49,890 --> 00:45:53,650
fundamentally you get origin trust by

1028
00:45:52,480 --> 00:45:55,660
signing the content with the

1029
00:45:53,650 --> 00:45:59,109
certificates that it's issued the same

1030
00:45:55,660 --> 00:46:01,990
way as a servers TOS certificate all of

1031
00:45:59,109 --> 00:46:05,650
the complicated parts come from trying

1032
00:46:01,990 --> 00:46:10,569
to prevent a group of dangers that that

1033
00:46:05,650 --> 00:46:12,760
come from come from that siding so some

1034
00:46:10,570 --> 00:46:16,270
of those dangers are intrinsic to any

1035
00:46:12,760 --> 00:46:19,780
object based security model some we can

1036
00:46:16,270 --> 00:46:22,270
avoid by designing things carefully so

1037
00:46:19,780 --> 00:46:23,619
for the intrinsic dangers we we can kind

1038
00:46:22,270 --> 00:46:26,320
of make them less dangerous we can't

1039
00:46:23,619 --> 00:46:30,250
completely prevent them and so we make

1040
00:46:26,320 --> 00:46:32,200
servers opt into to the danger they do

1041
00:46:30,250 --> 00:46:34,000
that by getting by having the

1042
00:46:32,200 --> 00:46:37,149
certificate have a particular x.509

1043
00:46:34,000 --> 00:46:41,050
extension and then ca's only grant that

1044
00:46:37,150 --> 00:46:42,760
if dns says - we also limit this the

1045
00:46:41,050 --> 00:46:44,710
length that the signature can be valid

1046
00:46:42,760 --> 00:46:46,599
so that if someone signs of owner

1047
00:46:44,710 --> 00:46:48,040
ability and thinks that they don't have

1048
00:46:46,599 --> 00:46:48,970
a vulnerability they still can't shoot

1049
00:46:48,040 --> 00:46:51,670
themselves in the foot for

1050
00:46:48,970 --> 00:46:53,649
ever that the particular limit of a week

1051
00:46:51,670 --> 00:46:57,910
is pretty arbitrary and the working

1052
00:46:53,650 --> 00:46:59,230
group should should reconsider it you

1053
00:46:57,910 --> 00:47:01,598
can cause problems if you sign

1054
00:46:59,230 --> 00:47:04,270
personalized data so if you sign

1055
00:47:01,599 --> 00:47:05,920
someone's like bank statement you can

1056
00:47:04,270 --> 00:47:07,930
you can allow them to attack other

1057
00:47:05,920 --> 00:47:09,940
people we have some advice in the

1058
00:47:07,930 --> 00:47:11,410
specifications about how servers can

1059
00:47:09,940 --> 00:47:13,660
prevent themselves from doing that you

1060
00:47:11,410 --> 00:47:16,569
know in a kind of systematic way and

1061
00:47:13,660 --> 00:47:19,930
then clients also do not do not allow

1062
00:47:16,570 --> 00:47:22,180
stateful headers so you can't do session

1063
00:47:19,930 --> 00:47:24,430
fixation stuff that that comes from some

1064
00:47:22,180 --> 00:47:30,098
some Commons that occur and Martin

1065
00:47:24,430 --> 00:47:32,200
Thompson sent it's possible if you just

1066
00:47:30,099 --> 00:47:34,210
have a bundle of sign things then an

1067
00:47:32,200 --> 00:47:36,069
attacker could mismatch versions that's

1068
00:47:34,210 --> 00:47:38,650
why the bundles have signatures that

1069
00:47:36,070 --> 00:47:40,300
cover multiple resources at once if an

1070
00:47:38,650 --> 00:47:42,700
attacker removes one resource from the

1071
00:47:40,300 --> 00:47:45,280
signed group it it requests for it from

1072
00:47:42,700 --> 00:47:47,319
the stuff in the bundle will fail they

1073
00:47:45,280 --> 00:47:48,520
won't go to the network but if you try

1074
00:47:47,320 --> 00:47:50,740
to fetch something that's not mentioned

1075
00:47:48,520 --> 00:47:56,619
at all it will go to the network which

1076
00:47:50,740 --> 00:47:59,109
which helps a couple use cases John will

1077
00:47:56,619 --> 00:48:01,300
endure from Safari pointed out that if a

1078
00:47:59,109 --> 00:48:02,859
distributor knows a user ID they can

1079
00:48:01,300 --> 00:48:05,020
send it to the origin that signed the

1080
00:48:02,859 --> 00:48:06,460
package which allows tracking and we

1081
00:48:05,020 --> 00:48:09,099
don't want to do that

1082
00:48:06,460 --> 00:48:10,980
and so we're going to require that you

1083
00:48:09,099 --> 00:48:13,690
request a package without credentials

1084
00:48:10,980 --> 00:48:15,790
and that the distributor's URL is a

1085
00:48:13,690 --> 00:48:18,220
function of the primary URL in the

1086
00:48:15,790 --> 00:48:21,990
package that prevents the the source

1087
00:48:18,220 --> 00:48:24,910
from encoding a user ID into the URL

1088
00:48:21,990 --> 00:48:26,649
there may be more dangers we haven't

1089
00:48:24,910 --> 00:48:29,470
fully analyzed the web security model

1090
00:48:26,650 --> 00:48:31,020
and we're going to need to and so the

1091
00:48:29,470 --> 00:48:33,520
working groups Charter includes

1092
00:48:31,020 --> 00:48:36,730
instructions to look into this and and

1093
00:48:33,520 --> 00:48:40,660
publish documents analyzing like what

1094
00:48:36,730 --> 00:48:42,880
the what the full implications are so

1095
00:48:40,660 --> 00:48:44,259
I've talked a bunch about packages you

1096
00:48:42,880 --> 00:48:46,450
heard stuff about signed exchanges

1097
00:48:44,260 --> 00:48:49,330
earlier signed exchanges are basically

1098
00:48:46,450 --> 00:48:52,629
an optimized format for a one resource

1099
00:48:49,330 --> 00:48:54,220
bundle that's signed we're not sure if

1100
00:48:52,630 --> 00:48:56,290
we will actually need that that

1101
00:48:54,220 --> 00:48:57,819
optimisation in the long run if we don't

1102
00:48:56,290 --> 00:48:59,500
all of the tools that generate signed

1103
00:48:57,820 --> 00:49:03,330
exchanges will just migrate to

1104
00:48:59,500 --> 00:49:06,430
generating bundles and that's it

1105
00:49:03,330 --> 00:49:09,069
thank you we have a few minutes we have

1106
00:49:06,430 --> 00:49:10,960
about 10 minutes actually to talk about

1107
00:49:09,070 --> 00:49:13,090
this presentation so any questions

1108
00:49:10,960 --> 00:49:25,359
comments general observations about the

1109
00:49:13,090 --> 00:49:33,460
technology mics are open repair to pay

1110
00:49:25,359 --> 00:49:37,630
on Facebook when there is a bundle and

1111
00:49:33,460 --> 00:49:41,560
one resource is changed and we wish to

1112
00:49:37,630 --> 00:49:42,220
have that one changed item available for

1113
00:49:41,560 --> 00:49:46,359
everybody else

1114
00:49:42,220 --> 00:49:48,970
how will we accomplish that it is it's

1115
00:49:46,359 --> 00:49:51,700
reasonable to build a patch format we

1116
00:49:48,970 --> 00:49:53,109
haven't done that and it's not currently

1117
00:49:51,700 --> 00:49:54,549
in the working group charter but I'm not

1118
00:49:53,109 --> 00:49:56,799
opposed to saying that the working group

1119
00:49:54,550 --> 00:49:58,690
should think about that remem I think I

1120
00:49:56,800 --> 00:50:01,510
think it's a secondary consideration I

1121
00:49:58,690 --> 00:50:04,000
think we should possibly think about it

1122
00:50:01,510 --> 00:50:06,160
in designing the the primary format to

1123
00:50:04,000 --> 00:50:08,020
make it possible but I don't think we

1124
00:50:06,160 --> 00:50:10,180
need to kind of have have the patch

1125
00:50:08,020 --> 00:50:15,359
format fully figured out before we get

1126
00:50:10,180 --> 00:50:20,410
use out of bundles I think that it's a

1127
00:50:15,359 --> 00:50:22,029
question so stepping back the question

1128
00:50:20,410 --> 00:50:25,210
I'm trying to ask is is this something

1129
00:50:22,030 --> 00:50:26,770
if we formed about a working group would

1130
00:50:25,210 --> 00:50:29,260
that be in scope of that working group

1131
00:50:26,770 --> 00:50:30,880
because it might be an important tool

1132
00:50:29,260 --> 00:50:32,320
for solving some of the use cases that

1133
00:50:30,880 --> 00:50:36,270
we had presentations about at the

1134
00:50:32,320 --> 00:50:36,270
beginning of the meeting good thanks

1135
00:50:41,300 --> 00:50:47,030
and I was wondering if anyone

1136
00:50:44,480 --> 00:50:50,000
well if how many people in this room had

1137
00:50:47,030 --> 00:50:52,520
read the escape workshop report this is

1138
00:50:50,000 --> 00:50:57,980
probably relevant here all right that's

1139
00:50:52,520 --> 00:51:00,470
pretty good all these problems were

1140
00:50:57,980 --> 00:51:02,960
discussed there and and we went through

1141
00:51:00,470 --> 00:51:04,549
a bunch more discussion about the use

1142
00:51:02,960 --> 00:51:07,310
cases and I just wanted to make sure

1143
00:51:04,550 --> 00:51:11,060
that everyone understood this I think

1144
00:51:07,310 --> 00:51:13,660
the the unsigned bundles aspect of this

1145
00:51:11,060 --> 00:51:17,210
work is interesting tying it so

1146
00:51:13,660 --> 00:51:20,779
completely to http may be a decision

1147
00:51:17,210 --> 00:51:23,150
that the working group could make a

1148
00:51:20,780 --> 00:51:24,440
decision on it seems a little bit odd in

1149
00:51:23,150 --> 00:51:26,240
some ways the way that it's structured

1150
00:51:24,440 --> 00:51:28,780
at the moment I sort of understand how

1151
00:51:26,240 --> 00:51:32,720
it got there and and the form of it but

1152
00:51:28,780 --> 00:51:37,190
it the fact that you don't have request

1153
00:51:32,720 --> 00:51:38,810
header fields is curious which requires

1154
00:51:37,190 --> 00:51:41,750
that you understand the variance thing

1155
00:51:38,810 --> 00:51:43,850
very very much in depth before you can

1156
00:51:41,750 --> 00:51:45,350
satisfy yourself that this is an okay

1157
00:51:43,850 --> 00:51:47,210
thing to do yeah I forgot to mention

1158
00:51:45,350 --> 00:51:49,940
that it would be possible to add request

1159
00:51:47,210 --> 00:51:52,280
headers that are matched literally in

1160
00:51:49,940 --> 00:51:56,660
into the the content negotiation

1161
00:51:52,280 --> 00:51:58,250
information yeah but most of my

1162
00:51:56,660 --> 00:52:02,109
reservations about this work and I think

1163
00:51:58,250 --> 00:52:05,350
many others is about this this notion of

1164
00:52:02,110 --> 00:52:08,060
taking the content that you have

1165
00:52:05,350 --> 00:52:14,569
acquired from any distribution channel

1166
00:52:08,060 --> 00:52:17,509
and identified one problem with the use

1167
00:52:14,570 --> 00:52:19,670
of those distribution channels and then

1168
00:52:17,510 --> 00:52:23,360
substituting that in for content that

1169
00:52:19,670 --> 00:52:26,060
would be considered equivalent to and

1170
00:52:23,360 --> 00:52:27,440
can share the same state as stuff that

1171
00:52:26,060 --> 00:52:30,320
you would acquire from a direct

1172
00:52:27,440 --> 00:52:36,430
connection to the origin and I haven't

1173
00:52:30,320 --> 00:52:36,430
seen to dick edges points earlier a

1174
00:52:36,610 --> 00:52:42,320
satisfactory answer to that that makes

1175
00:52:38,750 --> 00:52:45,680
me comfortable that we have the answer

1176
00:52:42,320 --> 00:52:48,010
in in that area and that remains my my

1177
00:52:45,680 --> 00:52:49,730
biggest concern with all of this

1178
00:52:48,010 --> 00:52:51,200
unfortunately that goes to a lot of the

1179
00:52:49,730 --> 00:52:52,670
use cases that we're talked about I

1180
00:52:51,200 --> 00:52:54,500
don't know what to do about them yeah

1181
00:52:52,670 --> 00:52:55,260
guys goes to half of the the use case

1182
00:52:54,500 --> 00:52:57,330
talks that

1183
00:52:55,260 --> 00:52:59,250
we're here yeah I think I think there's

1184
00:52:57,330 --> 00:53:00,330
there's half of it and when you draw a

1185
00:52:59,250 --> 00:53:02,220
bright line down the middle of it you

1186
00:53:00,330 --> 00:53:04,740
suddenly realize that the the space of

1187
00:53:02,220 --> 00:53:07,500
use by use cases that we have here is a

1188
00:53:04,740 --> 00:53:10,890
little bit more diverse than a single

1189
00:53:07,500 --> 00:53:13,290
solution might might address so I'm a

1190
00:53:10,890 --> 00:53:15,180
little bit uncomfortable with with the

1191
00:53:13,290 --> 00:53:16,529
spectrum we use cases I got cut off

1192
00:53:15,180 --> 00:53:18,390
before but I think this is probably a

1193
00:53:16,530 --> 00:53:19,650
comment that I should I should concern

1194
00:53:18,390 --> 00:53:22,170
that I share with mark Nottingham or not

1195
00:53:19,650 --> 00:53:24,240
and others Thank You Martin I'm gonna

1196
00:53:22,170 --> 00:53:25,080
cut the cue in just a brief moment so if

1197
00:53:24,240 --> 00:53:31,100
you want to get in

1198
00:53:25,080 --> 00:53:33,630
jump up now hi Brian Trammell Google so

1199
00:53:31,100 --> 00:53:36,779
this is a this is not a fully formed

1200
00:53:33,630 --> 00:53:40,050
thought but kind of as a response to

1201
00:53:36,780 --> 00:53:42,030
Martin I also like I think that you know

1202
00:53:40,050 --> 00:53:44,640
that the encoding parts of this are

1203
00:53:42,030 --> 00:53:48,450
uninteresting which is to say good job

1204
00:53:44,640 --> 00:53:50,670
looks good seems reasonable yay

1205
00:53:48,450 --> 00:53:52,770
the interesting question here is again

1206
00:53:50,670 --> 00:53:55,800
this shift from from transport object

1207
00:53:52,770 --> 00:53:58,830
security I see in sort of the encoding

1208
00:53:55,800 --> 00:54:00,420
parts of this of this presentation a lot

1209
00:53:58,830 --> 00:54:01,650
of evidence of essentially hey we have

1210
00:54:00,420 --> 00:54:02,940
this we have some implementation

1211
00:54:01,650 --> 00:54:04,770
experience with it we took it to a

1212
00:54:02,940 --> 00:54:06,660
larger forum we basically got feedback

1213
00:54:04,770 --> 00:54:09,300
and you're essentially playing sort of

1214
00:54:06,660 --> 00:54:12,569
like vulnerability golf with with the

1215
00:54:09,300 --> 00:54:14,670
format DJ and Ted and I sat down in

1216
00:54:12,570 --> 00:54:16,380
Montreal after this and sort of tried to

1217
00:54:14,670 --> 00:54:19,170
start playing that game with the

1218
00:54:16,380 --> 00:54:22,380
transport the object security stuff and

1219
00:54:19,170 --> 00:54:23,970
I thought we got a lot farther than I

1220
00:54:22,380 --> 00:54:26,550
expected us to get right like so the

1221
00:54:23,970 --> 00:54:28,649
space kind of got bigger but it didn't

1222
00:54:26,550 --> 00:54:30,270
get you know exponentially bigger in a

1223
00:54:28,650 --> 00:54:32,400
way that was was terrifying at least

1224
00:54:30,270 --> 00:54:33,600
from my standpoint dkg is kind of making

1225
00:54:32,400 --> 00:54:34,560
a face over there that makes me think

1226
00:54:33,600 --> 00:54:37,410
that maybe we were having a slightly

1227
00:54:34,560 --> 00:54:40,500
different conversation I think the

1228
00:54:37,410 --> 00:54:44,129
approach that was applied to sort of the

1229
00:54:40,500 --> 00:54:47,550
encoding and sort of the interactions is

1230
00:54:44,130 --> 00:54:50,130
probably one that we should apply to to

1231
00:54:47,550 --> 00:54:51,480
the the transport object security thing

1232
00:54:50,130 --> 00:54:53,550
we can continue having these discussions

1233
00:54:51,480 --> 00:54:54,780
in order for because it's like I don't

1234
00:54:53,550 --> 00:54:56,580
think that the solution to this should

1235
00:54:54,780 --> 00:54:57,810
be the Ted dkg and I sit down and have a

1236
00:54:56,580 --> 00:54:59,850
beer and talk about it right like we

1237
00:54:57,810 --> 00:55:00,930
need up a bigger ring to that and I know

1238
00:54:59,850 --> 00:55:03,630
that we're not supposed to be talking to

1239
00:55:00,930 --> 00:55:05,069
that 2d charterparty yet that I'm gonna

1240
00:55:03,630 --> 00:55:05,910
shut up that would be the point of the

1241
00:55:05,070 --> 00:55:08,589
working

1242
00:55:05,910 --> 00:55:10,569
xfinity exactly so the one are gonna be

1243
00:55:08,589 --> 00:55:12,038
a cut after our driver Scott and I but I

1244
00:55:10,569 --> 00:55:14,229
will make that I will make that point

1245
00:55:12,039 --> 00:55:16,029
back again about like how to massage the

1246
00:55:14,229 --> 00:55:19,450
Charter to say you know this is where we

1247
00:55:16,029 --> 00:55:22,150
got time for the discussion Phil Han

1248
00:55:19,450 --> 00:55:23,950
Baker yeah I do have some very firm

1249
00:55:22,150 --> 00:55:27,279
views about encouraging because I have

1250
00:55:23,950 --> 00:55:30,399
an alternative proposal here but that

1251
00:55:27,279 --> 00:55:32,979
aside I think that one of the things

1252
00:55:30,400 --> 00:55:35,319
that we need to do here is it's not just

1253
00:55:32,979 --> 00:55:37,450
when you choose use cases it's not just

1254
00:55:35,319 --> 00:55:40,239
about choosing the use cases that you

1255
00:55:37,450 --> 00:55:43,239
want to solve it's about finding the

1256
00:55:40,239 --> 00:55:46,569
paradigmatic use case that encapsulates

1257
00:55:43,239 --> 00:55:50,019
as much of the problem as possible

1258
00:55:46,569 --> 00:55:53,079
and what you're doing here is that

1259
00:55:50,019 --> 00:55:57,640
you're moving from transport which HTTP

1260
00:55:53,079 --> 00:56:00,069
is to the object what you're really

1261
00:55:57,640 --> 00:56:03,400
doing here is that this package is

1262
00:56:00,069 --> 00:56:06,190
really standing for that web server that

1263
00:56:03,400 --> 00:56:08,079
you're not talking to and so when you're

1264
00:56:06,190 --> 00:56:11,199
trying to map it onto HTTP which you

1265
00:56:08,079 --> 00:56:13,199
know I'm big families of HTTP you know I

1266
00:56:11,199 --> 00:56:17,440
did some work on it myself at one point

1267
00:56:13,199 --> 00:56:19,930
I think that what you need to do is to

1268
00:56:17,440 --> 00:56:23,680
think in terms of if you are going to

1269
00:56:19,930 --> 00:56:27,249
have a format that would allow a website

1270
00:56:23,680 --> 00:56:30,609
manager to upload their content into the

1271
00:56:27,249 --> 00:56:33,038
cloud and service from just that format

1272
00:56:30,609 --> 00:56:35,799
I know that it is not one of the use

1273
00:56:33,039 --> 00:56:38,140
cases that you want to consider I think

1274
00:56:35,799 --> 00:56:40,869
that that might be the paradigmatic use

1275
00:56:38,140 --> 00:56:43,749
case that would guide the design in a

1276
00:56:40,869 --> 00:56:45,400
profitable way so you you made the

1277
00:56:43,749 --> 00:56:47,919
really interesting point that you can

1278
00:56:45,400 --> 00:56:49,869
think of this package format as acting

1279
00:56:47,920 --> 00:56:52,569
as the server and I think it actually

1280
00:56:49,869 --> 00:56:55,539
acts as the cache which is why variants

1281
00:56:52,569 --> 00:56:58,058
happened to work really well for it and

1282
00:56:55,539 --> 00:57:00,999
if you think of the package as a cache

1283
00:56:58,059 --> 00:57:03,430
it actually probably does work for CDN

1284
00:57:00,999 --> 00:57:05,529
upload but the paradigm attic use case

1285
00:57:03,430 --> 00:57:07,419
that that I've been coming from for

1286
00:57:05,529 --> 00:57:12,160
designing the whole thing is in fact the

1287
00:57:07,420 --> 00:57:14,289
community networking use case mark

1288
00:57:12,160 --> 00:57:17,098
Nottingham since Martin brought it up I

1289
00:57:14,289 --> 00:57:19,330
helped instigate the escape workshop and

1290
00:57:17,099 --> 00:57:20,980
from my perspective that was

1291
00:57:19,330 --> 00:57:23,020
largely because we had heard concerns

1292
00:57:20,980 --> 00:57:25,060
from parts of the community about the

1293
00:57:23,020 --> 00:57:27,190
power dynamics around around you know

1294
00:57:25,060 --> 00:57:29,440
whether this would enable certain

1295
00:57:27,190 --> 00:57:33,340
imbalances and I think my takeaway from

1296
00:57:29,440 --> 00:57:36,340
that was that while those are concerning

1297
00:57:33,340 --> 00:57:38,350
dynamics it's not something that we

1298
00:57:36,340 --> 00:57:40,450
should really consider concern yourself

1299
00:57:38,350 --> 00:57:43,930
with here because it's an effect at at

1300
00:57:40,450 --> 00:57:46,960
least a tertiary distance it's it's not

1301
00:57:43,930 --> 00:57:50,350
a direct effect of this proposal and so

1302
00:57:46,960 --> 00:57:52,420
I to my mind those those criticisms

1303
00:57:50,350 --> 00:57:54,130
aren't valid trip for this proposal it's

1304
00:57:52,420 --> 00:57:55,630
not something we should say well we

1305
00:57:54,130 --> 00:57:58,180
can't do that work here if they were a

1306
00:57:55,630 --> 00:57:58,840
direct effect of course you know that's

1307
00:57:58,180 --> 00:58:01,720
a different story

1308
00:57:58,840 --> 00:58:04,330
I and so I'm not against this work going

1309
00:58:01,720 --> 00:58:06,160
forward I do have concerns I'm gonna

1310
00:58:04,330 --> 00:58:08,319
piss off Patrick can we go back to the

1311
00:58:06,160 --> 00:58:11,200
slides I know you've got the Charter up

1312
00:58:08,320 --> 00:58:18,490
now which slides the Geoffrey severance

1313
00:58:11,200 --> 00:58:22,899
yes and go back a couple not quite that

1314
00:58:18,490 --> 00:58:24,910
fast ease forward a few please keep on

1315
00:58:22,900 --> 00:58:28,300
going give me something to work with

1316
00:58:24,910 --> 00:58:33,879
mark you're looking for one more now

1317
00:58:28,300 --> 00:58:37,720
keep on going okay I'll do it from

1318
00:58:33,880 --> 00:58:40,150
memory how's that you know you mentioned

1319
00:58:37,720 --> 00:58:42,580
at one point that there's a risk when

1320
00:58:40,150 --> 00:58:44,980
you put private data in the package and

1321
00:58:42,580 --> 00:58:47,200
the the kind of hand way the answer that

1322
00:58:44,980 --> 00:58:48,910
is as well publisher don't do that and

1323
00:58:47,200 --> 00:58:52,060
we have an analogous situation in H

1324
00:58:48,910 --> 00:58:53,980
thank you you know we have an analogous

1325
00:58:52,060 --> 00:58:55,420
situation in HTTP where we have a lot of

1326
00:58:53,980 --> 00:58:59,110
people who want to do a share

1327
00:58:55,420 --> 00:59:00,970
compression for for State on different

1328
00:58:59,110 --> 00:59:02,740
representations and it's very exciting

1329
00:59:00,970 --> 00:59:05,799
for a lot of people but we've

1330
00:59:02,740 --> 00:59:06,850
consistently told them no because the

1331
00:59:05,800 --> 00:59:09,990
security properties that are too

1332
00:59:06,850 --> 00:59:12,490
slippery and it's a foot gun and we've

1333
00:59:09,990 --> 00:59:13,810
created this requirement today that that

1334
00:59:12,490 --> 00:59:15,729
community interest in that create a

1335
00:59:13,810 --> 00:59:17,710
record you know a quite complex document

1336
00:59:15,730 --> 00:59:19,180
around the security trade-offs there we

1337
00:59:17,710 --> 00:59:21,220
need to evaluate that and then we'll

1338
00:59:19,180 --> 00:59:22,990
think about starting some work yet here

1339
00:59:21,220 --> 00:59:24,910
you know I think some of the same

1340
00:59:22,990 --> 00:59:26,290
engineers who did that a valuation of no

1341
00:59:24,910 --> 00:59:28,120
we can't do that I've said all this is

1342
00:59:26,290 --> 00:59:29,650
this is okay we need to take these

1343
00:59:28,120 --> 00:59:31,600
things seriously we need to have that

1344
00:59:29,650 --> 00:59:33,020
evaluation so I'd like to see that

1345
00:59:31,600 --> 00:59:36,259
another ass

1346
00:59:33,020 --> 00:59:37,490
to this that concerns me is I was on the

1347
00:59:36,260 --> 00:59:40,400
tag when the tag did the original

1348
00:59:37,490 --> 00:59:42,950
package format that you started with and

1349
00:59:40,400 --> 00:59:44,630
I've since gone way beyond me and and

1350
00:59:42,950 --> 00:59:47,210
one of the concerns around that is is

1351
00:59:44,630 --> 00:59:48,920
that developers tend to use pet overuse

1352
00:59:47,210 --> 00:59:51,380
packages and I'm concerned we're gonna

1353
00:59:48,920 --> 00:59:52,850
get to a web where we're back to PDFs or

1354
00:59:51,380 --> 00:59:55,220
flash applications where you do a huge

1355
00:59:52,850 --> 00:59:56,390
chunky download you don't get good cache

1356
00:59:55,220 --> 00:59:58,669
efficiency you don't get good

1357
00:59:56,390 --> 01:00:00,440
integration into the stack and so you

1358
00:59:58,670 --> 01:00:02,480
know people say this is an alternative

1359
01:00:00,440 --> 01:00:04,010
to HTTP but also needs to work with HTTP

1360
01:00:02,480 --> 01:00:05,180
you say it's part of the caching model

1361
01:00:04,010 --> 01:00:06,530
it needs to work with the HP caching

1362
01:00:05,180 --> 01:00:10,850
model and we need to have those

1363
01:00:06,530 --> 01:00:15,470
discussions too and our jabber really

1364
01:00:10,850 --> 01:00:17,600
gets the last word Chris lemon says on

1365
01:00:15,470 --> 01:00:19,669
jabber this work seems designed directly

1366
01:00:17,600 --> 01:00:21,860
for the Google amp presentation the

1367
01:00:19,670 --> 01:00:23,270
other use cases appear to be trying to

1368
01:00:21,860 --> 01:00:25,580
pick up on a solution that seemed to

1369
01:00:23,270 --> 01:00:27,110
solve 80% of their use case the question

1370
01:00:25,580 --> 01:00:29,779
is really whether we want to take on

1371
01:00:27,110 --> 01:00:31,340
those extra 20% of work he thinks we

1372
01:00:29,780 --> 01:00:32,960
should start with the basic work and if

1373
01:00:31,340 --> 01:00:34,640
we discover that we want to and can

1374
01:00:32,960 --> 01:00:36,800
expand the scope that we would consider

1375
01:00:34,640 --> 01:00:38,720
reach our during at that time it's a

1376
01:00:36,800 --> 01:00:40,010
party and I am doing the proponent

1377
01:00:38,720 --> 01:00:42,529
response to this because I could read

1378
01:00:40,010 --> 01:00:44,000
what he wrote it worked every good and

1379
01:00:42,530 --> 01:00:45,800
and they're kind of two responses I have

1380
01:00:44,000 --> 01:00:47,780
one of which is as a proponent you would

1381
01:00:45,800 --> 01:00:49,400
make Jeffrey and I very very sad if you

1382
01:00:47,780 --> 01:00:51,460
left these out because there's a really

1383
01:00:49,400 --> 01:00:53,510
use cases we care a lot about and

1384
01:00:51,460 --> 01:00:55,250
Mallory and others have kind of pointed

1385
01:00:53,510 --> 01:00:56,780
out why those might be good paradigmatic

1386
01:00:55,250 --> 01:00:59,570
use cases but the other reason is

1387
01:00:56,780 --> 01:01:01,730
actually in IETF reason and as the ITF

1388
01:00:59,570 --> 01:01:03,619
does its best work when it's building

1389
01:01:01,730 --> 01:01:06,560
building blocks and if you have

1390
01:01:03,619 --> 01:01:08,090
something really really tailored in mind

1391
01:01:06,560 --> 01:01:09,320
when you build the building block it's

1392
01:01:08,090 --> 01:01:11,480
not a very good building block for

1393
01:01:09,320 --> 01:01:14,150
anything else so simply having these

1394
01:01:11,480 --> 01:01:15,560
other use cases in mind not only do we

1395
01:01:14,150 --> 01:01:17,660
get to use them and these important

1396
01:01:15,560 --> 01:01:19,279
community network applications if we get

1397
01:01:17,660 --> 01:01:20,960
them right it's going to make the

1398
01:01:19,280 --> 01:01:23,990
building block better even for the amp

1399
01:01:20,960 --> 01:01:26,510
use case so I strongly believe that the

1400
01:01:23,990 --> 01:01:28,759
Charter should include more than one use

1401
01:01:26,510 --> 01:01:31,100
case here and I prefer to include the

1402
01:01:28,760 --> 01:01:36,650
amp and the community network one is as

1403
01:01:31,100 --> 01:01:38,089
just very basic yeah I think so now

1404
01:01:36,650 --> 01:01:40,760
we're gonna move to the fun part where

1405
01:01:38,090 --> 01:01:43,390
hopefully nothing crashes and I brought

1406
01:01:40,760 --> 01:01:45,770
the right dongle this all works

1407
01:01:43,390 --> 01:01:46,460
the big Google Apple transfer see if

1408
01:01:45,770 --> 01:01:49,880
this works

1409
01:01:46,460 --> 01:01:55,100
come on scruffy here we go I have all my

1410
01:01:49,880 --> 01:01:55,460
other applications closed no yeah turn

1411
01:01:55,100 --> 01:01:57,200
that off

1412
01:01:55,460 --> 01:01:58,910
Patrick I'm sorry I asked a very quick

1413
01:01:57,200 --> 01:02:01,730
question because I was busy scribing I'm

1414
01:01:58,910 --> 01:02:03,680
with the historical archiving use case

1415
01:02:01,730 --> 01:02:07,390
apply to this baby say yes or no

1416
01:02:03,680 --> 01:02:09,859
question okay thank you

1417
01:02:07,390 --> 01:02:11,779
all right so now we're gonna have some

1418
01:02:09,860 --> 01:02:17,300
reading hopefully where the help of this

1419
01:02:11,780 --> 01:02:20,030
thing go come on

1420
01:02:17,300 --> 01:02:31,220
scruffy chic I've done this before in my

1421
01:02:20,030 --> 01:02:38,620
life well I want it slide over that's

1422
01:02:31,220 --> 01:03:05,540
annoying all right what am i doing you

1423
01:02:38,620 --> 01:03:08,630
just sorry I think we fixed it

1424
01:03:05,540 --> 01:03:10,279
apologies again while you do this can I

1425
01:03:08,630 --> 01:03:14,360
finish the thought are you done

1426
01:03:10,280 --> 01:03:17,750
oh no or maybe not look I do not

1427
01:03:14,360 --> 01:03:29,030
understand why it's not working I'm

1428
01:03:17,750 --> 01:03:32,930
completely baffled yeah yeah so I forgot

1429
01:03:29,030 --> 01:03:34,880
one part of my comment which was I think

1430
01:03:32,930 --> 01:03:37,100
it's super portent for everyone here

1431
01:03:34,880 --> 01:03:40,430
especially folks who have specific use

1432
01:03:37,100 --> 01:03:41,839
cases in mind to realize that this is a

1433
01:03:40,430 --> 01:03:43,970
building block Ted's absolutely correct

1434
01:03:41,840 --> 01:03:46,310
and that the parts we're gonna deliver

1435
01:03:43,970 --> 01:03:48,830
are just building blocks that need to be

1436
01:03:46,310 --> 01:03:52,340
implemented and enabled by other places

1437
01:03:48,830 --> 01:03:54,920
so browsers need to expose api's and

1438
01:03:52,340 --> 01:03:56,660
some use cases may be advantaged by that

1439
01:03:54,920 --> 01:03:57,680
and some may not be realized

1440
01:03:56,660 --> 01:03:59,299
likewise you know we talked about

1441
01:03:57,680 --> 01:04:01,490
rendezvous we talked about other things

1442
01:03:59,300 --> 01:04:03,560
it won't happen unless we actually have

1443
01:04:01,490 --> 01:04:07,850
other standards and other bodies created

1444
01:04:03,560 --> 01:04:09,170
and then implement it alright so now

1445
01:04:07,850 --> 01:04:14,450
this is the fun part where we get to do

1446
01:04:09,170 --> 01:04:19,100
some group editing so I guess the go

1447
01:04:14,450 --> 01:04:22,189
ahead and start reading Roberto are you

1448
01:04:19,100 --> 01:04:27,670
going to the microphone No okay so

1449
01:04:22,190 --> 01:04:27,670
background Ben are you getting in line

1450
01:04:27,730 --> 01:04:32,450
yep go ahead I mean you might as well

1451
01:04:30,140 --> 01:04:33,650
yeah my plan was basically just to read

1452
01:04:32,450 --> 01:04:34,939
this and try to take comments and

1453
01:04:33,650 --> 01:04:36,830
literally week if we can edit it on the

1454
01:04:34,940 --> 01:04:40,220
fly we have 20 minutes set aside for

1455
01:04:36,830 --> 01:04:45,860
this no it's more like 10 now since I

1456
01:04:40,220 --> 01:04:46,970
screwed up for five but you know hey if

1457
01:04:45,860 --> 01:04:49,070
you're starting from the beginning that

1458
01:04:46,970 --> 01:04:51,350
I mean you have to wait okay so

1459
01:04:49,070 --> 01:04:54,140
background web pages sometimes group

1460
01:04:51,350 --> 01:04:55,670
multiple sub resources into a single

1461
01:04:54,140 --> 01:04:57,589
combined resource to fill out cross

1462
01:04:55,670 --> 01:05:01,840
resource compression introduce the

1463
01:04:57,590 --> 01:05:04,250
overhead of HTTP 1 requests w3c tag

1464
01:05:01,840 --> 01:05:06,410
proposed a web packaging format based on

1465
01:05:04,250 --> 01:05:08,270
multi-part to give web browsers

1466
01:05:06,410 --> 01:05:10,370
visibility into the structure of these

1467
01:05:08,270 --> 01:05:12,890
combined resources that is not seen

1468
01:05:10,370 --> 01:05:15,710
deployment in HTTP 2 did not make these

1469
01:05:12,890 --> 01:05:18,710
bundles on unnecessarily as one one as

1470
01:05:15,710 --> 01:05:20,540
was once expected these bundles are

1471
01:05:18,710 --> 01:05:22,940
still needed in countries were expensive

1472
01:05:20,540 --> 01:05:24,920
and or unreliable mobile data there's

1473
01:05:22,940 --> 01:05:26,680
established practice of sharing content

1474
01:05:24,920 --> 01:05:28,790
and native applications peer-to-peer

1475
01:05:26,680 --> 01:05:31,430
untrusted web content can generally be

1476
01:05:28,790 --> 01:05:33,860
shared but within the web's moved to

1477
01:05:31,430 --> 01:05:37,629
HTTPS that is no longer possible to

1478
01:05:33,860 --> 01:05:37,630
share web apps over these channels I

1479
01:05:39,190 --> 01:05:45,050
will pause there

1480
01:05:42,310 --> 01:05:50,590
yes mam Thompson that last statement is

1481
01:05:45,050 --> 01:05:50,590
false okay

1482
01:05:51,670 --> 01:05:56,240
there's a test there's an implicit

1483
01:05:53,630 --> 01:05:59,360
assumption here that the the web

1484
01:05:56,240 --> 01:06:04,459
application is identified by an HTTP

1485
01:05:59,360 --> 01:06:05,810
your I or or somesuch I think and so it

1486
01:06:04,460 --> 01:06:07,400
might need a little bit of expansion if

1487
01:06:05,810 --> 01:06:08,870
you if you want to keep that one I just

1488
01:06:07,400 --> 01:06:09,859
realized that now it's like oh hang on a

1489
01:06:08,870 --> 01:06:11,690
second

1490
01:06:09,859 --> 01:06:18,200
web applications can come from other

1491
01:06:11,690 --> 01:06:20,119
places as well mark Nadia excuse me mark

1492
01:06:18,200 --> 01:06:23,089
Nottingham the last sentence of the

1493
01:06:20,119 --> 01:06:26,599
first paragraph is going to be read by

1494
01:06:23,089 --> 01:06:28,788
many developers as saying that bundling

1495
01:06:26,599 --> 01:06:30,829
is necessary for performance that's an

1496
01:06:28,789 --> 01:06:32,329
extremely contentious and I think

1497
01:06:30,829 --> 01:06:33,259
disproven statement in the web

1498
01:06:32,329 --> 01:06:39,910
performance community

1499
01:06:33,259 --> 01:06:43,489
I'd recommend deleting it Mike Bishop

1500
01:06:39,910 --> 01:06:46,430
there's a statement here that a previous

1501
01:06:43,489 --> 01:06:49,729
attempt to solve this problem it was not

1502
01:06:46,430 --> 01:06:51,799
deployed and we don't go into why it was

1503
01:06:49,729 --> 01:06:55,249
not adopted or how we intend to do

1504
01:06:51,799 --> 01:06:58,759
better that needs to at least be

1505
01:06:55,249 --> 01:07:01,788
understood maybe research on that as

1506
01:06:58,759 --> 01:07:03,049
part of the working groups charter but I

1507
01:07:01,789 --> 01:07:08,539
think I would rather have an

1508
01:07:03,049 --> 01:07:15,109
understanding of that before we go okay

1509
01:07:08,539 --> 01:07:17,839
so answering Martin the browsers require

1510
01:07:15,109 --> 01:07:22,479
a secure context for a lot of web api is

1511
01:07:17,839 --> 01:07:27,319
now you don't get that with files and

1512
01:07:22,479 --> 01:07:30,499
replying to mark people there there's a

1513
01:07:27,319 --> 01:07:32,930
program called web pack which we're

1514
01:07:30,499 --> 01:07:36,819
trying not collide names with but that

1515
01:07:32,930 --> 01:07:39,279
is super heavily used sometimes too much

1516
01:07:36,819 --> 01:07:42,499
if you listen to Alex Russell like

1517
01:07:39,279 --> 01:07:45,109
bundle sizes should be smaller but we do

1518
01:07:42,499 --> 01:07:47,479
not know how to how to send the

1519
01:07:45,109 --> 01:07:49,308
individual resources efficiently you you

1520
01:07:47,479 --> 01:07:56,828
have to bundle them to get to get

1521
01:07:49,309 --> 01:08:01,130
reasonable performance more charter

1522
01:07:56,829 --> 01:08:02,900
Roberto Roberto pay on so I bound this

1523
01:08:01,130 --> 01:08:04,699
off at least two folks that agree that

1524
01:08:02,900 --> 01:08:08,779
this is not crazy so hopefully this is

1525
01:08:04,699 --> 01:08:10,819
not crazy but it a lot of the solution

1526
01:08:08,779 --> 01:08:12,559
space and problem space of this are very

1527
01:08:10,819 --> 01:08:17,618
similar to those things we tried to

1528
01:08:12,559 --> 01:08:20,810
attack with HTTP to server push and I

1529
01:08:17,618 --> 01:08:23,979
think that's probably worth thinking

1530
01:08:20,810 --> 01:08:26,650
about or maybe even a mention here

1531
01:08:23,979 --> 01:08:29,169
because these things are so similar like

1532
01:08:26,649 --> 01:08:31,089
oh my gosh it's already in the cache I'm

1533
01:08:29,170 --> 01:08:33,460
gonna push it again is that going to

1534
01:08:31,089 --> 01:08:38,640
prevent me from making this bundle etc

1535
01:08:33,460 --> 01:08:38,640
etc it's endemic it's so similar so

1536
01:08:39,149 --> 01:08:45,969
would it work to change that to HTV to

1537
01:08:41,950 --> 01:08:51,580
server push in so just hb2 a little more

1538
01:08:45,970 --> 01:08:53,589
clear I'd like to make an observation

1539
01:08:51,580 --> 01:08:57,760
that we're wordsmithing the background

1540
01:08:53,589 --> 01:08:59,260
section I know I'm just making that

1541
01:08:57,760 --> 01:09:01,300
observation because I I'd like to talk

1542
01:08:59,260 --> 01:09:03,310
about the rest of it all right can I sit

1543
01:09:01,300 --> 01:09:05,830
on that we did Patrick took notes on the

1544
01:09:03,310 --> 01:09:08,380
sides and we can you know try to resolve

1545
01:09:05,830 --> 01:09:09,580
these on the list on so W pack the W

1546
01:09:08,380 --> 01:09:12,069
pack working group will develop a

1547
01:09:09,580 --> 01:09:14,410
specification for a web packaging format

1548
01:09:12,069 --> 01:09:17,020
that efficiently bundles multiple HTTP

1549
01:09:14,410 --> 01:09:19,510
resources it will also specify a way to

1550
01:09:17,020 --> 01:09:21,700
optionally signs resources such that a

1551
01:09:19,510 --> 01:09:25,120
user agent can trust that they came from

1552
01:09:21,700 --> 01:09:27,519
their claimed web origins key goals for

1553
01:09:25,120 --> 01:09:30,399
web pack are efficient storage across a

1554
01:09:27,520 --> 01:09:32,290
range of resource combinations three

1555
01:09:30,399 --> 01:09:34,450
examples to be supported our client

1556
01:09:32,290 --> 01:09:36,609
generated snapshot of a complete web

1557
01:09:34,450 --> 01:09:40,210
page a web pages tree of JavaScript

1558
01:09:36,609 --> 01:09:43,120
modules and L Pal hits the mail from

1559
01:09:40,210 --> 01:09:43,600
Cuba I'm sure I better dad yeah Benny

1560
01:09:43,120 --> 01:09:45,580
Schwartz

1561
01:09:43,600 --> 01:09:49,060
as much as I love that bucket de semana

1562
01:09:45,580 --> 01:09:50,649
can we just not have that as our

1563
01:09:49,060 --> 01:09:52,420
specific example since you know a

1564
01:09:50,649 --> 01:09:56,290
complete web page doesn't say yahoo.com

1565
01:09:52,420 --> 01:10:04,810
I could take that point we can just say

1566
01:09:56,290 --> 01:10:06,960
- alright safe web app installation

1567
01:10:04,810 --> 01:10:10,750
after having been retrieved from appear

1568
01:10:06,960 --> 01:10:12,730
low latency to load sub resource from a

1569
01:10:10,750 --> 01:10:14,500
package whether the package is signed or

1570
01:10:12,730 --> 01:10:16,780
unsigned and whether the package is

1571
01:10:14,500 --> 01:10:19,080
streamed loaded from a random access

1572
01:10:16,780 --> 01:10:19,080
storage

1573
01:10:23,249 --> 01:10:26,880
can I make a a comment on something that

1574
01:10:25,619 --> 01:10:33,570
you haven't read out yet

1575
01:10:26,880 --> 01:10:35,519
no because Roberto's in line is web app

1576
01:10:33,570 --> 01:10:36,989
installation well-defined enough that I

1577
01:10:35,519 --> 01:10:40,110
mean we are we invoking our liaison

1578
01:10:36,989 --> 01:10:57,030
relationship here or it seems to be a

1579
01:10:40,110 --> 01:10:58,589
little messy okay the next one is being

1580
01:10:57,030 --> 01:11:01,610
extensible including to avoid

1581
01:10:58,590 --> 01:11:03,749
cryptography that becomes obsolete

1582
01:11:01,610 --> 01:11:05,848
security and privacy properties using

1583
01:11:03,749 --> 01:11:08,849
bundles as close to as practical to TLS

1584
01:11:05,849 --> 01:11:10,440
1.3 transport of the same resources or

1585
01:11:08,849 --> 01:11:12,300
properties do change the group will

1586
01:11:10,440 --> 01:11:14,900
document exactly what changed and how

1587
01:11:12,300 --> 01:11:18,780
the content authors can come compensate

1588
01:11:14,900 --> 01:11:20,879
hyper and Rimmel Google I understand

1589
01:11:18,780 --> 01:11:24,900
where this came from I understand that a

1590
01:11:20,880 --> 01:11:26,280
lot of the anxiety around this is about

1591
01:11:24,900 --> 01:11:29,518
that last part right there

1592
01:11:26,280 --> 01:11:31,079
I would like anyone affected by any

1593
01:11:29,519 --> 01:11:33,979
change in the security model to be able

1594
01:11:31,079 --> 01:11:37,860
to compensate and I'd like us to to

1595
01:11:33,979 --> 01:11:40,170
consider all of them so like either I

1596
01:11:37,860 --> 01:11:41,670
can I can suggest X or that at later

1597
01:11:40,170 --> 01:11:50,969
expanding it or contracting it very like

1598
01:11:41,670 --> 01:11:52,559
but don't leave it right there whether

1599
01:11:50,969 --> 01:11:54,809
the web app installation was

1600
01:11:52,559 --> 01:11:56,489
sufficiently understood and if we're

1601
01:11:54,809 --> 01:12:03,179
instituting essentially a liaison

1602
01:11:56,489 --> 01:12:04,138
relationship with the w3c Ted Hardy I

1603
01:12:03,179 --> 01:12:07,289
think the security and privacy

1604
01:12:04,139 --> 01:12:10,170
properties of using bundles after Daniel

1605
01:12:07,289 --> 01:12:12,719
con Gilmore's a previous discussion is

1606
01:12:10,170 --> 01:12:14,280
probably not granular enough we need to

1607
01:12:12,719 --> 01:12:16,949
have both something here that talks

1608
01:12:14,280 --> 01:12:19,409
about the retrieval of the bundles and

1609
01:12:16,949 --> 01:12:22,829
the confidentiality properties of using

1610
01:12:19,409 --> 01:12:25,589
the bundle derived resources as well and

1611
01:12:22,829 --> 01:12:27,478
since I see him behind me in line I'll

1612
01:12:25,590 --> 01:12:29,880
let him finish this basically just needs

1613
01:12:27,479 --> 01:12:32,550
more details my super high-level summary

1614
01:12:29,880 --> 01:12:34,289
I would yeah I would suggest also that

1615
01:12:32,550 --> 01:12:35,980
like so one of the headings from Jeffrey

1616
01:12:34,289 --> 01:12:38,980
slides about like

1617
01:12:35,980 --> 01:12:40,660
the transition from transport to object

1618
01:12:38,980 --> 01:12:42,040
security might show up in here and be a

1619
01:12:40,660 --> 01:12:52,210
good way to shorthand a little bit of

1620
01:12:42,040 --> 01:12:54,240
that the currently highlighted text does

1621
01:12:52,210 --> 01:12:56,470
not seem specific enough yeah or

1622
01:12:54,240 --> 01:13:02,650
comprehensive enough I will leave it to

1623
01:12:56,470 --> 01:13:04,780
others to Mike Bishop I want to make

1624
01:13:02,650 --> 01:13:08,610
sure that one of the notes back further

1625
01:13:04,780 --> 01:13:12,309
up it was very brief and I think he

1626
01:13:08,610 --> 01:13:15,040
misses the point that was made the

1627
01:13:12,310 --> 01:13:18,220
suggestion was not to drop on alphecca

1628
01:13:15,040 --> 01:13:22,330
Thea's seminar it was not to drop the

1629
01:13:18,220 --> 01:13:26,260
third example but to but I interpreted

1630
01:13:22,330 --> 01:13:34,630
that as drop that particular embodiment

1631
01:13:26,260 --> 01:13:38,200
and just refer to the use case yes I

1632
01:13:34,630 --> 01:13:40,480
should be able to simply say yeah simply

1633
01:13:38,200 --> 01:13:45,059
saying to drop the third one does not

1634
01:13:40,480 --> 01:13:52,209
capture that suggestion yep there we go

1635
01:13:45,060 --> 01:13:54,130
thank you for doing that for me yes so a

1636
01:13:52,210 --> 01:13:55,990
likelihood that the new format increases

1637
01:13:54,130 --> 01:14:00,160
centralization or power power and

1638
01:13:55,990 --> 01:14:02,860
balances on the web sir yeah sorry can

1639
01:14:00,160 --> 01:14:05,230
this is dinner con Gilmore so the one

1640
01:14:02,860 --> 01:14:07,360
that's that's highlighted there and has

1641
01:14:05,230 --> 01:14:08,650
been I can't tell what's going on now I

1642
01:14:07,360 --> 01:14:13,980
don't know how people work with white on

1643
01:14:08,650 --> 01:14:16,570
white I'm trying to make you seasick in

1644
01:14:13,980 --> 01:14:19,509
addition to maybe being too vague it

1645
01:14:16,570 --> 01:14:21,759
seems basically impossible to me the TLS

1646
01:14:19,510 --> 01:14:24,370
1.3 transport is going away if we do

1647
01:14:21,760 --> 01:14:25,510
this right the confidentiality and

1648
01:14:24,370 --> 01:14:27,940
privacy properties that you get from

1649
01:14:25,510 --> 01:14:29,560
jelous 1.3 are simply not present when

1650
01:14:27,940 --> 01:14:32,049
someone else is doing the delivering of

1651
01:14:29,560 --> 01:14:33,870
the data and so the idea that we're

1652
01:14:32,050 --> 01:14:39,070
trying to keep it as close as practical

1653
01:14:33,870 --> 01:14:41,410
just sounds like a flight of fancy to me

1654
01:14:39,070 --> 01:14:43,450
and I and I and I can't imagine how we

1655
01:14:41,410 --> 01:14:45,220
would how we would do that are you

1656
01:14:43,450 --> 01:14:47,530
suggesting a bar the work would have to

1657
01:14:45,220 --> 01:14:48,239
meet to be successful with respect to

1658
01:14:47,530 --> 01:14:50,910
that

1659
01:14:48,239 --> 01:14:53,549
sorry are you suggesting a bar that the

1660
01:14:50,910 --> 01:14:55,950
work would have to meet rather than I'm

1661
01:14:53,550 --> 01:14:58,440
seeing or documenting sort of the Delta

1662
01:14:55,950 --> 01:15:00,660
here are you suggesting I mean meet how

1663
01:14:58,440 --> 01:15:02,730
does one compensate how does anyone

1664
01:15:00,660 --> 01:15:03,930
content authors or otherwise compensate

1665
01:15:02,730 --> 01:15:06,000
for the fact that you have simply

1666
01:15:03,930 --> 01:15:08,900
changed what the confidentiality and

1667
01:15:06,000 --> 01:15:11,370
privacy properties are of the transport

1668
01:15:08,900 --> 01:15:15,509
well how what does that mean to

1669
01:15:11,370 --> 01:15:17,160
compensate for that we're obviously not

1670
01:15:15,510 --> 01:15:18,780
going to rewrite the whole Charter

1671
01:15:17,160 --> 01:15:20,219
sitting here but we'll take as many

1672
01:15:18,780 --> 01:15:22,139
comments as we can before we get to the

1673
01:15:20,219 --> 01:15:24,739
questions which I would say is on the

1674
01:15:22,140 --> 01:15:28,950
order of three or four more minutes

1675
01:15:24,739 --> 01:15:30,870
Malorie nodal article 19 so um we keep

1676
01:15:28,950 --> 01:15:32,550
referring to content authors and I don't

1677
01:15:30,870 --> 01:15:34,320
think that's what you mean in all cases

1678
01:15:32,550 --> 01:15:37,800
and actually the better word would be

1679
01:15:34,320 --> 01:15:40,469
publishers we're talking about online

1680
01:15:37,800 --> 01:15:42,480
versions of newspapers and other places

1681
01:15:40,469 --> 01:15:44,070
that are no longer gonna for example get

1682
01:15:42,480 --> 01:15:46,500
their own ad revenue because of

1683
01:15:44,070 --> 01:15:49,160
something like this and that would

1684
01:15:46,500 --> 01:15:52,200
probably be a little bit more accurate

1685
01:15:49,160 --> 01:15:53,670
and then I think there also might need

1686
01:15:52,200 --> 01:15:58,769
to be a little bit of thinking around

1687
01:15:53,670 --> 01:16:01,830
the goals for that third person like

1688
01:15:58,770 --> 01:16:04,500
stake holder if you will like how this

1689
01:16:01,830 --> 01:16:08,010
will affect those original content

1690
01:16:04,500 --> 01:16:09,350
publishers I have another point oh I

1691
01:16:08,010 --> 01:16:11,280
think in the last one around

1692
01:16:09,350 --> 01:16:12,750
centralization and power imbalances

1693
01:16:11,280 --> 01:16:16,250
maybe also doesn't completely

1694
01:16:12,750 --> 01:16:19,590
encapsulate how this will look for a

1695
01:16:16,250 --> 01:16:21,420
publisher a Content publisher because I

1696
01:16:19,590 --> 01:16:23,370
think it is also around monetization and

1697
01:16:21,420 --> 01:16:25,860
power and centralization don't quite

1698
01:16:23,370 --> 01:16:30,440
give it that explicitly would be my

1699
01:16:25,860 --> 01:16:30,440
suggestion thank you thank you

1700
01:16:30,560 --> 01:16:36,870
so oh well it just jumps around all the

1701
01:16:33,780 --> 01:16:40,019
time it's great so Martin Thomson we're

1702
01:16:36,870 --> 01:16:41,340
gonna cut the queue after okay so one of

1703
01:16:40,020 --> 01:16:43,650
the things that's missing here I think

1704
01:16:41,340 --> 01:16:45,900
is a very clear articulation of the

1705
01:16:43,650 --> 01:16:47,879
constraints under which people choosing

1706
01:16:45,900 --> 01:16:49,860
to use this would have to operate in

1707
01:16:47,880 --> 01:16:52,530
order to gain the guarantees being

1708
01:16:49,860 --> 01:16:54,480
promised owned I kind of agree with dkg

1709
01:16:52,530 --> 01:16:56,480
here that because we're making such a

1710
01:16:54,480 --> 01:16:59,750
fundamental change the way this operates

1711
01:16:56,480 --> 01:17:02,098
setting the bar here is is unrealistic

1712
01:16:59,750 --> 01:17:04,139
so we we need

1713
01:17:02,099 --> 01:17:07,860
what we're doing here is we're setting a

1714
01:17:04,139 --> 01:17:10,349
new bar and in order to meet that new

1715
01:17:07,860 --> 01:17:12,570
bar you have to meet an entirely new set

1716
01:17:10,349 --> 01:17:14,040
of requirements and that goes to Mark's

1717
01:17:12,570 --> 01:17:15,929
question about how you operationalize

1718
01:17:14,040 --> 01:17:18,570
this thing it goes to the question of

1719
01:17:15,929 --> 01:17:20,340
that Jeffry raised in his discussion

1720
01:17:18,570 --> 01:17:23,670
about what sort of confidentiality

1721
01:17:20,340 --> 01:17:25,290
guarantees we will eat we need to expect

1722
01:17:23,670 --> 01:17:28,170
and it goes to things like the

1723
01:17:25,290 --> 01:17:30,300
personalization things you can't put

1724
01:17:28,170 --> 01:17:31,260
personal personalized information in one

1725
01:17:30,300 --> 01:17:32,550
of those things and get anywhere near

1726
01:17:31,260 --> 01:17:36,210
the guarantees that we're talking about

1727
01:17:32,550 --> 01:17:38,310
here so I'd like to see that somewhere

1728
01:17:36,210 --> 01:17:40,260
in this in this charter explicitly

1729
01:17:38,310 --> 01:17:43,860
because there's going to be some work to

1730
01:17:40,260 --> 01:17:48,810
set the bar and do the analysis to prove

1731
01:17:43,860 --> 01:17:50,969
that we can make that bar and find what

1732
01:17:48,810 --> 01:17:54,659
constraints need to be met in order to

1733
01:17:50,969 --> 01:17:56,790
reach that bar so I realize a bit of a

1734
01:17:54,659 --> 01:17:58,348
mouthful handful that get rid of but I

1735
01:17:56,790 --> 01:18:02,579
think I think that's really central to

1736
01:17:58,349 --> 01:18:07,710
all of this and if you've got that I've

1737
01:18:02,579 --> 01:18:10,559
got another point yes go ahead

1738
01:18:07,710 --> 01:18:13,290
I don't think safe web app installation

1739
01:18:10,560 --> 01:18:16,139
is necessarily a goal that I'm

1740
01:18:13,290 --> 01:18:19,500
interested in pursuing I know that

1741
01:18:16,139 --> 01:18:22,190
others are but I I think there's a lot

1742
01:18:19,500 --> 01:18:25,440
wrapped up in that that could lead to

1743
01:18:22,190 --> 01:18:28,230
some very interesting consequences for a

1744
01:18:25,440 --> 01:18:30,839
working group and disagreements unless

1745
01:18:28,230 --> 01:18:32,459
we unpack that a lot more I suspect that

1746
01:18:30,840 --> 01:18:35,730
we're going to put ourselves into a

1747
01:18:32,460 --> 01:18:38,639
tailspin and just addressing something

1748
01:18:35,730 --> 01:18:40,769
like the amp use case or the distribute

1749
01:18:38,639 --> 01:18:43,770
content to someone who has narrow

1750
01:18:40,770 --> 01:18:46,590
backhaul as we heard all earlier maybe

1751
01:18:43,770 --> 01:18:48,360
we could solve those two but that's a

1752
01:18:46,590 --> 01:18:53,849
whole nother kettle of fish so I'd

1753
01:18:48,360 --> 01:18:57,559
rather for that bear to pay on Facebook

1754
01:18:53,849 --> 01:18:59,670
I would not love to be sued for

1755
01:18:57,560 --> 01:19:03,630
participating in this as a private

1756
01:18:59,670 --> 01:19:06,060
individual because somebody did not put

1757
01:19:03,630 --> 01:19:09,329
a license on this thing but suggested it

1758
01:19:06,060 --> 01:19:11,280
can be distributed I think that we would

1759
01:19:09,329 --> 01:19:14,400
be remiss if we did not consider that

1760
01:19:11,280 --> 01:19:16,639
aspect of redistribution in here

1761
01:19:14,400 --> 01:19:16,638
somewhere

1762
01:19:17,180 --> 01:19:26,120
okay Ben hi Ben Schwartz

1763
01:19:22,830 --> 01:19:29,430
so I wanted to sort of second Martin's

1764
01:19:26,120 --> 01:19:30,930
Martin's point that we and particularly

1765
01:19:29,430 --> 01:19:33,090
I wanted to point out that there's this

1766
01:19:30,930 --> 01:19:34,710
line here about out of scope it's out of

1767
01:19:33,090 --> 01:19:36,720
scope to define the details of how web

1768
01:19:34,710 --> 01:19:39,240
browsers load the formats

1769
01:19:36,720 --> 01:19:41,850
I think it would be worth rephrasing

1770
01:19:39,240 --> 01:19:44,820
that because I think it should be in

1771
01:19:41,850 --> 01:19:48,540
scope to define constraints on how web

1772
01:19:44,820 --> 01:19:50,730
browsers load the format in particular I

1773
01:19:48,540 --> 01:19:53,040
want to point out that there are some

1774
01:19:50,730 --> 01:19:57,690
constraints that would make this a clear

1775
01:19:53,040 --> 01:19:59,790
privacy victory over existing HTTPS in

1776
01:19:57,690 --> 01:20:02,190
particular if there's a constraint that

1777
01:19:59,790 --> 01:20:04,350
that web browsers can't load a bundle in

1778
01:20:02,190 --> 01:20:08,940
response to a user action that it can

1779
01:20:04,350 --> 01:20:10,850
only be essentially pushed down by the

1780
01:20:08,940 --> 01:20:14,580
by the server preemptively

1781
01:20:10,850 --> 01:20:16,440
that actually I expect personally has

1782
01:20:14,580 --> 01:20:19,500
better privacy properties than ordinary

1783
01:20:16,440 --> 01:20:20,960
HTTP and so I think the Charter should

1784
01:20:19,500 --> 01:20:23,310
make it clear that it's at least

1785
01:20:20,960 --> 01:20:28,290
allowable for the the working group to

1786
01:20:23,310 --> 01:20:32,100
create a constraint in that kind felix

1787
01:20:28,290 --> 01:20:33,960
hanta Facebook I think one of the things

1788
01:20:32,100 --> 01:20:37,770
that stands out to me here is something

1789
01:20:33,960 --> 01:20:40,320
that is not discussed in the scope and

1790
01:20:37,770 --> 01:20:44,040
sort of United the use cases that were

1791
01:20:40,320 --> 01:20:47,250
discussed is a sort of punting on the

1792
01:20:44,040 --> 01:20:49,410
discovery mechanism all of these cases

1793
01:20:47,250 --> 01:20:53,850
to my knowledge described sort of manual

1794
01:20:49,410 --> 01:20:58,080
user discovery of this and maybe that's

1795
01:20:53,850 --> 01:21:02,490
a hard problem but I think this is the

1796
01:20:58,080 --> 01:21:05,090
best place to look at solving that thank

1797
01:21:02,490 --> 01:21:07,800
you thank you all right I'm gonna go on

1798
01:21:05,090 --> 01:21:10,200
so the packaging format will also aim to

1799
01:21:07,800 --> 01:21:13,790
achieve the secondary goals described

1800
01:21:10,200 --> 01:21:16,320
and draft MP squad as long as they don't

1801
01:21:13,790 --> 01:21:18,150
compromise or delay the above properties

1802
01:21:16,320 --> 01:21:21,030
the following potential goals are out of

1803
01:21:18,150 --> 01:21:23,070
scope for this Charter DRM a way to

1804
01:21:21,030 --> 01:21:25,710
distribute the private portions of a

1805
01:21:23,070 --> 01:21:27,450
website for example UW PAC might define

1806
01:21:25,710 --> 01:21:29,340
a way to distribute emails application

1807
01:21:27,450 --> 01:21:31,380
but won't define a way to distribute

1808
01:21:29,340 --> 01:21:33,929
individual emails without a direct

1809
01:21:31,380 --> 01:21:35,340
connection to Gmail's origin we talked

1810
01:21:33,929 --> 01:21:37,770
about the next one but defining the

1811
01:21:35,340 --> 01:21:39,570
details of how a web browser load the

1812
01:21:37,770 --> 01:21:42,060
format's and interact with any protocols

1813
01:21:39,570 --> 01:21:43,830
we define here a way to automatically

1814
01:21:42,060 --> 01:21:47,540
discover the URL for an accessible

1815
01:21:43,830 --> 01:21:47,540
package that includes specific content

1816
01:21:47,570 --> 01:21:51,570
note that consensus is required both for

1817
01:21:50,429 --> 01:21:53,489
changes to the current protocol

1818
01:21:51,570 --> 01:21:55,409
mechanisms and retention of current

1819
01:21:53,489 --> 01:21:57,500
mechanisms in particular because

1820
01:21:55,409 --> 01:21:59,909
something is in the initial document set

1821
01:21:57,500 --> 01:22:02,280
there's uh lists there does not imply

1822
01:21:59,909 --> 01:22:04,619
that this consensus around features of

1823
01:22:02,280 --> 01:22:06,090
how to specify that's basically just

1824
01:22:04,619 --> 01:22:07,469
saying it's a starting point and we're

1825
01:22:06,090 --> 01:22:08,969
going to take control and do whatever we

1826
01:22:07,469 --> 01:22:09,449
want to the document which is pretty

1827
01:22:08,969 --> 01:22:12,659
standard

1828
01:22:09,449 --> 01:22:14,759
we're like ships to other stos w pack

1829
01:22:12,659 --> 01:22:16,290
will work with the w3c and then what

1830
01:22:14,760 --> 01:22:18,119
working group to identify the existing

1831
01:22:16,290 --> 01:22:20,610
security and privacy models for the web

1832
01:22:18,119 --> 01:22:31,880
and to ensure those stos can define how

1833
01:22:20,610 --> 01:22:31,880
this format is used by web browsers yes

1834
01:22:33,949 --> 01:22:38,129
the private information stuff I can

1835
01:22:36,420 --> 01:22:40,170
understand I can guess as to why that's

1836
01:22:38,130 --> 01:22:42,810
out of scope why are we making data

1837
01:22:40,170 --> 01:22:50,429
scope because it can actually increase

1838
01:22:42,810 --> 01:22:52,260
security in some cases so the in order

1839
01:22:50,429 --> 01:22:54,810
to distribute private information you

1840
01:22:52,260 --> 01:22:57,840
need you do need to encrypt it you need

1841
01:22:54,810 --> 01:22:59,730
it's it's very dangerous to sign it in a

1842
01:22:57,840 --> 01:23:02,130
way that anyone will trust is coming

1843
01:22:59,730 --> 01:23:05,730
from the origin server you can they're

1844
01:23:02,130 --> 01:23:07,560
spoofing attacks so like making this for

1845
01:23:05,730 --> 01:23:11,299
public information constrains the scope

1846
01:23:07,560 --> 01:23:11,300
to make it slot to make it tractable

1847
01:23:14,699 --> 01:23:18,119
question could go on for a long time so

1848
01:23:16,320 --> 01:23:19,978
unfortunately the constraints of the the

1849
01:23:18,119 --> 01:23:21,570
format we're gonna move forward I think

1850
01:23:19,979 --> 01:23:23,400
to the polls based on what we know when

1851
01:23:21,570 --> 01:23:25,409
we understand about how the group feels

1852
01:23:23,400 --> 01:23:27,089
about the changes to the Charter we

1853
01:23:25,409 --> 01:23:29,339
obviously can't prevent present a

1854
01:23:27,090 --> 01:23:31,349
totally revised charter you know in real

1855
01:23:29,340 --> 01:23:36,179
time so we'll do our best based upon

1856
01:23:31,349 --> 01:23:38,940
these questions so both polls we have

1857
01:23:36,179 --> 01:23:40,349
them here you've read them all we can

1858
01:23:38,940 --> 01:23:43,169
actually work set them on the fly but I

1859
01:23:40,349 --> 01:23:44,999
hope we don't have to do you understand

1860
01:23:43,170 --> 01:23:54,209
the issue being proposed for the working

1861
01:23:44,999 --> 01:23:55,800
group please home now do you not

1862
01:23:54,209 --> 01:23:59,579
understand the issues being proposed for

1863
01:23:55,800 --> 01:24:02,849
the working group please home now that

1864
01:23:59,579 --> 01:24:04,228
was pretty clear next one a is it well

1865
01:24:02,849 --> 01:24:11,219
enough defined for a working group

1866
01:24:04,229 --> 01:24:15,659
please hum now is it not well enough to

1867
01:24:11,219 --> 01:24:17,159
find for a working group I guess we

1868
01:24:15,659 --> 01:24:20,190
should be calling these out that I think

1869
01:24:17,159 --> 01:24:24,949
the first one was very clear second one

1870
01:24:20,190 --> 01:24:24,949
I thought it was slightly more four yes

1871
01:24:26,959 --> 01:24:30,239
yeah yeah obviously yeah I mean of

1872
01:24:29,369 --> 01:24:35,070
course yeah we're not

1873
01:24:30,239 --> 01:24:36,570
you're not done done that were you know

1874
01:24:35,070 --> 01:24:40,409
this is assuming that we get the Charter

1875
01:24:36,570 --> 01:24:42,058
revisions done and agreed essentially to

1876
01:24:40,409 --> 01:24:48,570
is this a problem that should be

1877
01:24:42,059 --> 01:24:49,400
addressed by the IETF please hum now as

1878
01:24:48,570 --> 01:24:50,809
this approach

1879
01:24:49,400 --> 01:24:54,799
statement that should not be addressed

1880
01:24:50,810 --> 01:24:57,500
by the ietf now that was pretty clear

1881
01:24:54,800 --> 01:25:00,860
for the yes are there enough people

1882
01:24:57,500 --> 01:25:06,530
willing to work on the problem please

1883
01:25:00,860 --> 01:25:12,500
hum now if you're willing if you're not

1884
01:25:06,530 --> 01:25:14,059
willing to participate in the work oh no

1885
01:25:12,500 --> 01:25:16,490
no the obverse is if you're willing to

1886
01:25:14,060 --> 01:25:25,550
block people from working on the problem

1887
01:25:16,490 --> 01:25:29,860
please hum now a significant so fans who

1888
01:25:25,550 --> 01:25:29,860
will work on documents review them

1889
01:25:32,170 --> 01:25:39,940
twenty people and a number of different

1890
01:25:34,820 --> 01:25:39,940
organizations say about 20-ish

1891
01:25:40,990 --> 01:25:46,340
from it from a number of organizations

1892
01:25:43,310 --> 01:25:47,990
as well so it's not just one are the

1893
01:25:46,340 --> 01:25:52,120
proposed deliverables correct and well

1894
01:25:47,990 --> 01:25:52,120
and articulated please home now

1895
01:25:54,520 --> 01:25:58,850
milquetoast home I mean I think that

1896
01:25:56,810 --> 01:26:00,530
that derives from us trying to figure

1897
01:25:58,850 --> 01:26:03,080
out the Charter so when you get when

1898
01:26:00,530 --> 01:26:04,639
falls from the other um so I think we're

1899
01:26:03,080 --> 01:26:07,040
gonna get another locally format one

1900
01:26:04,640 --> 01:26:09,950
year are the proposed deal herbals not

1901
01:26:07,040 --> 01:26:22,670
correct and not well articulated or or

1902
01:26:09,950 --> 01:26:25,030
correct so I think we're oh sorry so are

1903
01:26:22,670 --> 01:26:28,010
the proposed deliverables not correct or

1904
01:26:25,030 --> 01:26:33,590
and or not well articulated please home

1905
01:26:28,010 --> 01:26:35,630
now yeah I said that was fifty-fifty

1906
01:26:33,590 --> 01:26:43,610
alexei do you have the information that

1907
01:26:35,630 --> 01:26:44,990
you need as the sponsoring ad yeah okay

1908
01:26:43,610 --> 01:26:48,710
so i mean obviously the next steps are

1909
01:26:44,990 --> 01:26:50,780
to revise the Charter and basically work

1910
01:26:48,710 --> 01:26:52,460
out the details but it didn't sound from

1911
01:26:50,780 --> 01:26:54,500
my firm where I was saying that this was

1912
01:26:52,460 --> 01:26:56,330
a go away burn in hell this is the end

1913
01:26:54,500 --> 01:26:57,860
of the world okay clarification that

1914
01:26:56,330 --> 01:27:00,590
charter revision is gonna happen on the

1915
01:26:57,860 --> 01:27:02,000
mailing list in public yes I mean there

1916
01:27:00,590 --> 01:27:03,030
is a github repo but yeah that whole

1917
01:27:02,000 --> 01:27:07,500
idea is that we can do

1918
01:27:03,030 --> 01:27:09,509
no publican it won't be cool thank you

1919
01:27:07,500 --> 01:27:10,920
very much for your time where are the

1920
01:27:09,510 --> 01:27:13,010
blue sheets I see one where's the other

1921
01:27:10,920 --> 01:27:13,010
one

