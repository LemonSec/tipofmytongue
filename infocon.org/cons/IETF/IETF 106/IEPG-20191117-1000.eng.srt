1
00:00:04,560 --> 00:00:30,139
oh yeah hold on

2
00:00:26,539 --> 00:00:30,140
he's in the wrong hand

3
00:00:35,540 --> 00:00:58,140
can I have a mic just by pushing all of

4
00:00:37,920 --> 00:01:01,380
the keys at once I think right oh all

5
00:00:58,140 --> 00:01:05,640
right well okay anyway I can only do

6
00:01:01,380 --> 00:01:09,240
this one hand okay good morning this is

7
00:01:05,640 --> 00:01:10,380
the IEP G at IETF 106 in Singapore if

8
00:01:09,240 --> 00:01:13,469
you're not supposed to be in Singapore

9
00:01:10,380 --> 00:01:14,670
I'm sorry you took the long flight if

10
00:01:13,469 --> 00:01:15,419
you're not supposed to be the IEP G and

11
00:01:14,670 --> 00:01:16,590
you're supposed to be at some other

12
00:01:15,420 --> 00:01:18,119
meeting then you're in the wrong room

13
00:01:16,590 --> 00:01:20,009
you should consider moving or you could

14
00:01:18,119 --> 00:01:21,960
stay because it will probably be fun for

15
00:01:20,009 --> 00:01:26,789
those people that are presenting there's

16
00:01:21,960 --> 00:01:28,949
a microphone please don't please speak

17
00:01:26,789 --> 00:01:30,210
into the microphone there's a nice thing

18
00:01:28,950 --> 00:01:34,259
we'll show you the pictures that are up

19
00:01:30,210 --> 00:01:40,589
there so you don't have to do this okay

20
00:01:34,259 --> 00:01:41,909
there's also a pointer doesn't the

21
00:01:40,590 --> 00:01:45,450
clicky thing doesn't work my laptop is

22
00:01:41,909 --> 00:01:49,619
misbehaving or something so you could at

23
00:01:45,450 --> 00:01:52,770
least point we have five presenters five

24
00:01:49,619 --> 00:01:54,810
presentations first up Carlos oh by the

25
00:01:52,770 --> 00:01:56,880
way my name is Chris and Warren's not

26
00:01:54,810 --> 00:02:14,159
here he's busy with something else hello

27
00:01:56,880 --> 00:02:15,329
everybody I say kick man you're talking

28
00:02:14,159 --> 00:02:16,579
everybody

29
00:02:15,330 --> 00:02:21,320
[Music]

30
00:02:16,580 --> 00:02:23,990
actually thanks Chris for the time this

31
00:02:21,320 --> 00:02:27,890
is this is just a short introduction a

32
00:02:23,990 --> 00:02:29,930
short I would say marketing presentation

33
00:02:27,890 --> 00:02:32,140
I want to introduce you a new rpki

34
00:02:29,930 --> 00:02:35,810
validator

35
00:02:32,140 --> 00:02:37,459
we call it fort because it made sense at

36
00:02:35,810 --> 00:02:39,230
the time and it says something about the

37
00:02:37,460 --> 00:02:42,020
stronger internet or something but we

38
00:02:39,230 --> 00:02:44,649
just call it fort and we try to not

39
00:02:42,020 --> 00:02:48,190
think very much about what it means so

40
00:02:44,650 --> 00:02:51,350
there's a background to this there's a

41
00:02:48,190 --> 00:02:54,859
fort project and the four validator the

42
00:02:51,350 --> 00:02:56,239
full project started as a initiative to

43
00:02:54,860 --> 00:03:00,410
promote route and security in the region

44
00:02:56,240 --> 00:03:02,710
there's there was a call from the open

45
00:03:00,410 --> 00:03:05,690
Technology Fund which is a fund that

46
00:03:02,710 --> 00:03:07,250
finances technology projects having to

47
00:03:05,690 --> 00:03:09,740
do with freedom on the internet what I

48
00:03:07,250 --> 00:03:14,240
think it's something we all sympathize

49
00:03:09,740 --> 00:03:15,620
with and back at the time we were toying

50
00:03:14,240 --> 00:03:17,420
with the idea of developing a new

51
00:03:15,620 --> 00:03:20,900
replica a validator and we were in talk

52
00:03:17,420 --> 00:03:22,850
in discussions with the great guys from

53
00:03:20,900 --> 00:03:25,280
Nick Mexico about developing something

54
00:03:22,850 --> 00:03:26,840
and at some point everything came

55
00:03:25,280 --> 00:03:29,240
together and we decided to move forward

56
00:03:26,840 --> 00:03:32,090
with this project which has two

57
00:03:29,240 --> 00:03:33,350
components it has a validator and it has

58
00:03:32,090 --> 00:03:37,720
something we call the tracking tool

59
00:03:33,350 --> 00:03:40,670
which is a hopes to be when it's ready

60
00:03:37,720 --> 00:03:44,410
system or mechanism to keep track of

61
00:03:40,670 --> 00:03:48,458
routing incidents in the region and that

62
00:03:44,410 --> 00:03:52,310
it sort that is I mean the I would say

63
00:03:48,459 --> 00:03:54,170
social part of the open Technology Fund

64
00:03:52,310 --> 00:03:56,270
project which is that that is the part

65
00:03:54,170 --> 00:03:58,070
that interests them the most the idea is

66
00:03:56,270 --> 00:04:00,110
that money the tracking tool will

67
00:03:58,070 --> 00:04:03,859
provide information about writing

68
00:04:00,110 --> 00:04:07,160
incidents for non-technical people under

69
00:04:03,860 --> 00:04:10,370
the hope that it will help people

70
00:04:07,160 --> 00:04:13,640
realize whether their country government

71
00:04:10,370 --> 00:04:16,450
is PE whatever is actually you know

72
00:04:13,640 --> 00:04:21,918
playing tricks on them next please

73
00:04:16,450 --> 00:04:23,539
so what I'm going to talk about today is

74
00:04:21,918 --> 00:04:25,340
the Arabic a validator with a said is

75
00:04:23,539 --> 00:04:26,580
one of the two parts of the project next

76
00:04:25,340 --> 00:04:30,789
please

77
00:04:26,580 --> 00:04:34,690
why another our PKA validator you know

78
00:04:30,790 --> 00:04:36,580
lately it seems to be that everybody is

79
00:04:34,690 --> 00:04:39,130
developing a new epoch a validator there

80
00:04:36,580 --> 00:04:43,270
is at least four projects that I can

81
00:04:39,130 --> 00:04:45,490
remember about and I think it's good

82
00:04:43,270 --> 00:04:46,960
having diversity is good having

83
00:04:45,490 --> 00:04:50,380
programming language is diversity is

84
00:04:46,960 --> 00:04:52,239
good and it's also worth mentioning that

85
00:04:50,380 --> 00:04:53,560
back at the time when we decided to move

86
00:04:52,240 --> 00:04:56,380
forward with this project well the

87
00:04:53,560 --> 00:05:00,370
options about RPK validators were rather

88
00:04:56,380 --> 00:05:02,080
limited so it may not send a lot of

89
00:05:00,370 --> 00:05:07,450
sense at the time to create a new one

90
00:05:02,080 --> 00:05:10,919
sex please so short description about

91
00:05:07,450 --> 00:05:14,530
fourth what is implementing right now is

92
00:05:10,920 --> 00:05:16,720
repository validation and the RTL server

93
00:05:14,530 --> 00:05:19,809
there is no GUI there's no web there's

94
00:05:16,720 --> 00:05:22,870
no nothing so it's very silly something

95
00:05:19,810 --> 00:05:26,470
you run and hopefully you don't get

96
00:05:22,870 --> 00:05:29,920
anything on the console right so it's

97
00:05:26,470 --> 00:05:31,540
rather an exciting in that sense it's

98
00:05:29,920 --> 00:05:34,300
written in C which is you think it's

99
00:05:31,540 --> 00:05:37,870
great I mean I didn't know people still

100
00:05:34,300 --> 00:05:39,760
read strong programming in C I mean

101
00:05:37,870 --> 00:05:43,440
people I thought everybody had moved to

102
00:05:39,760 --> 00:05:48,310
go and rust and Python and you say that

103
00:05:43,440 --> 00:05:51,540
it compiles cleanly and runs on several

104
00:05:48,310 --> 00:05:55,510
Linux and BSD platforms the license MIT

105
00:05:51,540 --> 00:05:57,540
so basically is almost you can do

106
00:05:55,510 --> 00:06:00,610
whatever you want with it

107
00:05:57,540 --> 00:06:04,810
and the road map as it's done is we are

108
00:06:00,610 --> 00:06:06,669
now at version 1 1 and the guys from

109
00:06:04,810 --> 00:06:12,370
Nick Mexico are planning a version 1.2

110
00:06:06,669 --> 00:06:15,190
for the first quarter of 2020 the code

111
00:06:12,370 --> 00:06:17,370
is in github that we have the URL next

112
00:06:15,190 --> 00:06:17,370
please

113
00:06:17,710 --> 00:06:23,080
but it does what does it support right

114
00:06:20,290 --> 00:06:25,450
now you can check the details on that

115
00:06:23,080 --> 00:06:28,710
URL there's a very nice table with all

116
00:06:25,450 --> 00:06:30,909
the LLC's and the percentage of

117
00:06:28,710 --> 00:06:32,560
implementation but basically some of the

118
00:06:30,910 --> 00:06:34,539
things that I consider interesting in is

119
00:06:32,560 --> 00:06:36,300
validated it that support this learn the

120
00:06:34,539 --> 00:06:38,760
support they say some files from the RFC

121
00:06:36,300 --> 00:06:40,660
it supports validation reconsider

122
00:06:38,760 --> 00:06:43,120
validates goes faster

123
00:06:40,660 --> 00:06:47,320
it supports policy qualifiers and has

124
00:06:43,120 --> 00:06:50,770
some support for BGP SEC objects what is

125
00:06:47,320 --> 00:06:55,480
missing notably is a DB support and the

126
00:06:50,770 --> 00:06:57,609
HTTPS tiles hopefully coming in version

127
00:06:55,480 --> 00:07:03,490
1.2 in a few months

128
00:06:57,610 --> 00:07:05,380
next please it has reasonable high test

129
00:07:03,490 --> 00:07:09,160
coverage this is some of the platforms

130
00:07:05,380 --> 00:07:11,290
where the tests have been run I haven't

131
00:07:09,160 --> 00:07:15,310
tried compiling it obviously but I guess

132
00:07:11,290 --> 00:07:17,260
it's the same thing as always it's very

133
00:07:15,310 --> 00:07:22,120
easy to install it on Divya no.12

134
00:07:17,260 --> 00:07:25,719
next one please the usual routine right

135
00:07:22,120 --> 00:07:28,930
you install some dependencies you unpack

136
00:07:25,720 --> 00:07:31,510
the Col configure make make install and

137
00:07:28,930 --> 00:07:34,920
you're running I created a couple of

138
00:07:31,510 --> 00:07:38,219
docker images you can try if you want

139
00:07:34,920 --> 00:07:38,220
next please

140
00:07:38,500 --> 00:07:43,600
and there are two ways of running it one

141
00:07:41,050 --> 00:07:45,760
is what the unique only documentation is

142
00:07:43,600 --> 00:07:47,860
called standalone what is basically it

143
00:07:45,760 --> 00:07:50,920
will run validate a repository or a set

144
00:07:47,860 --> 00:07:55,750
of repositories produce some CSV output

145
00:07:50,920 --> 00:07:59,170
and exit no fancy web no graphics nor

146
00:07:55,750 --> 00:08:01,860
anything and the other way of running it

147
00:07:59,170 --> 00:08:04,570
is with a survey with the LTL survey

148
00:08:01,860 --> 00:08:06,940
enabled and it will just stay there and

149
00:08:04,570 --> 00:08:10,180
the only thing you'll hear from it is

150
00:08:06,940 --> 00:08:11,710
where it finds errors and or some

151
00:08:10,180 --> 00:08:13,480
inconsistencies in reporters in the

152
00:08:11,710 --> 00:08:17,500
repositories these are the basic options

153
00:08:13,480 --> 00:08:19,620
it has tons of options some of them are

154
00:08:17,500 --> 00:08:22,600
quite interesting for example you can

155
00:08:19,620 --> 00:08:25,480
tune a little bit how strict the

156
00:08:22,600 --> 00:08:27,760
validation it performs it performs which

157
00:08:25,480 --> 00:08:31,090
you think is kind of nice because there

158
00:08:27,760 --> 00:08:32,530
are still some I would say divergences

159
00:08:31,090 --> 00:08:34,270
in the implementations of the

160
00:08:32,530 --> 00:08:38,049
repositories next please

161
00:08:34,270 --> 00:08:40,860
a few tests they run this is memory

162
00:08:38,049 --> 00:08:44,410
consumption running on a standalone mode

163
00:08:40,860 --> 00:08:47,530
these are the M dark blue is a penis

164
00:08:44,410 --> 00:08:51,100
repository light blue slag neck and the

165
00:08:47,530 --> 00:08:55,110
sort of yellowish greenish something

166
00:08:51,100 --> 00:08:55,110
color there is a Phoenix they repository

167
00:08:55,389 --> 00:09:01,209
it's quite low it's quite efficient in

168
00:08:57,850 --> 00:09:03,759
memory usage which is kind of nice and

169
00:09:01,209 --> 00:09:08,170
it's I would say natural by proud of

170
00:09:03,759 --> 00:09:09,850
it's been written in plain C text well

171
00:09:08,170 --> 00:09:12,610
thank you if you like the idea of having

172
00:09:09,850 --> 00:09:13,660
a new tool in your tool chest please

173
00:09:12,610 --> 00:09:15,579
send us your box

174
00:09:13,660 --> 00:09:17,199
I'm not promising this is the great

175
00:09:15,579 --> 00:09:20,769
thing the greatest thing since sliced

176
00:09:17,199 --> 00:09:24,099
bread nor the disciple free is probably

177
00:09:20,769 --> 00:09:25,810
full of bugs that is what we are mostly

178
00:09:24,100 --> 00:09:28,720
interested in hearing from you

179
00:09:25,810 --> 00:09:31,140
send us your bug reports and if you

180
00:09:28,720 --> 00:09:34,920
liked it please let us know thank you

181
00:09:31,140 --> 00:09:37,769
[Music]

182
00:09:34,920 --> 00:09:45,490
[Applause]

183
00:09:37,769 --> 00:09:53,050
questions that might please Randy Bush

184
00:09:45,490 --> 00:10:02,490
our consumer Jay Randy Bush our

185
00:09:53,050 --> 00:10:06,880
Cassandra EJ um how do I deal with inter

186
00:10:02,490 --> 00:10:12,069
instance slurm in other words I have a

187
00:10:06,880 --> 00:10:17,730
slurm file on my in my cop in San Diego

188
00:10:12,069 --> 00:10:21,779
and I want you to run it in your pop in

189
00:10:17,730 --> 00:10:23,740
San Francisco what's the trust model

190
00:10:21,779 --> 00:10:26,019
that's a completely different discussion

191
00:10:23,740 --> 00:10:28,449
I kind of agree with you but I don't

192
00:10:26,019 --> 00:10:34,649
know you have something red in your hair

193
00:10:28,449 --> 00:10:50,979
what is it the light no seriously

194
00:10:34,649 --> 00:10:53,790
okay okay thank you all right next up

195
00:10:50,980 --> 00:10:53,790
yeah sure

196
00:10:53,970 --> 00:10:57,509
[Music]

197
00:11:01,850 --> 00:11:47,310
tell me why you're so good morning my

198
00:11:44,069 --> 00:11:50,610
name is arianah from the VRS today i'd

199
00:11:47,310 --> 00:11:53,910
like to introduce our research work to

200
00:11:50,610 --> 00:11:56,930
detect the TMS ik provocation failure at

201
00:11:53,910 --> 00:12:01,589
the TRD server monitoring

202
00:11:56,930 --> 00:12:04,430
next please so as you know DNA SEC

203
00:12:01,589 --> 00:12:10,170
validation failure happens frequently

204
00:12:04,430 --> 00:12:14,099
but the reliability of DNA six operation

205
00:12:10,170 --> 00:12:17,160
is a key of the nsx deployment so so

206
00:12:14,100 --> 00:12:22,559
that next please

207
00:12:17,160 --> 00:12:25,110
we made a research question how can we

208
00:12:22,559 --> 00:12:26,959
detect validation failure rapidly and

209
00:12:25,110 --> 00:12:30,360
efficiently

210
00:12:26,959 --> 00:12:33,199
of course active amazement is an easy

211
00:12:30,360 --> 00:12:38,399
way to detect DNA segmentation failure

212
00:12:33,199 --> 00:12:42,300
but it causes high higher loader for

213
00:12:38,399 --> 00:12:46,500
more DNA SEC available domains so that

214
00:12:42,300 --> 00:12:49,109
we thought about how can we detect the

215
00:12:46,500 --> 00:12:53,819
NSX validation failure by the passive

216
00:12:49,110 --> 00:12:56,459
measurement so we focused on the to see

217
00:12:53,819 --> 00:12:59,719
the change of curly patterns could be a

218
00:12:56,459 --> 00:13:02,518
good indicator at the monitoring of

219
00:12:59,720 --> 00:13:05,809
power I'm sorry authoritative

220
00:13:02,519 --> 00:13:08,910
nameservers Rabia next please

221
00:13:05,809 --> 00:13:10,699
so to us detecting validation failures

222
00:13:08,910 --> 00:13:14,180
with passive measurements

223
00:13:10,700 --> 00:13:16,520
the goal of our research is depicting

224
00:13:14,180 --> 00:13:19,729
chant detecting change of clearly

225
00:13:16,520 --> 00:13:23,810
patterns at CCTV servers at this moment

226
00:13:19,730 --> 00:13:28,030
we are the GP operators so we are seeing

227
00:13:23,810 --> 00:13:32,689
JP DNS servers before and after failure

228
00:13:28,030 --> 00:13:36,530
when Colin tomahawk is using both octave

229
00:13:32,690 --> 00:13:39,650
measurement and passive measurement for

230
00:13:36,530 --> 00:13:44,150
the active measurement we are using ripe

231
00:13:39,650 --> 00:13:48,319
address for the DNS client and the else

232
00:13:44,150 --> 00:13:52,760
worried dietas neighbor to the iPad

233
00:13:48,320 --> 00:13:58,010
rests approximately 500 at ISPs on edges

234
00:13:52,760 --> 00:14:01,660
and also we prepared local authoritative

235
00:13:58,010 --> 00:14:04,790
DNS servers which provide both

236
00:14:01,660 --> 00:14:08,959
successful DNS SEC validation and failed

237
00:14:04,790 --> 00:14:12,290
as DNS expeditions with different TTL

238
00:14:08,960 --> 00:14:16,690
settings and passive measurement vantage

239
00:14:12,290 --> 00:14:19,610
point is JP DNS servers next please

240
00:14:16,690 --> 00:14:24,110
this figure shows the measurement

241
00:14:19,610 --> 00:14:28,190
ababeel the measurement period for this

242
00:14:24,110 --> 00:14:31,520
research is equally 2018 this is also

243
00:14:28,190 --> 00:14:36,170
conjunction with the idea happened on

244
00:14:31,520 --> 00:14:39,199
April 20 80s and then passive

245
00:14:36,170 --> 00:14:43,610
measurement about age point is JP t JP

246
00:14:39,200 --> 00:14:46,370
DNS servers and active measurement at

247
00:14:43,610 --> 00:14:50,570
the local authoritative servers at the

248
00:14:46,370 --> 00:14:53,510
light bottom light shark is a local also

249
00:14:50,570 --> 00:14:57,170
tilting Sabah provided Saudi Arabia of

250
00:14:53,510 --> 00:15:02,300
Jupiter by name and the targeted queries

251
00:14:57,170 --> 00:15:07,150
from light a Taurus probe n is a DNS key

252
00:15:02,300 --> 00:15:11,599
and the DES records and we use around

253
00:15:07,150 --> 00:15:15,130
thousand life matters probe and six

254
00:15:11,600 --> 00:15:20,380
hundreds of DNS SEC marketers at home

255
00:15:15,130 --> 00:15:24,640
next please so before we perform our

256
00:15:20,380 --> 00:15:24,640
measurement we

257
00:15:25,690 --> 00:15:33,860
search for the Public DNS because we do

258
00:15:30,050 --> 00:15:38,689
not know the concrete behavior of Public

259
00:15:33,860 --> 00:15:43,790
DNS and we targeting the body heaters at

260
00:15:38,690 --> 00:15:46,580
ISPs on homes so that we sent light

261
00:15:43,790 --> 00:15:50,569
probe at was unique queries to our

262
00:15:46,580 --> 00:15:56,180
associative servers and check the source

263
00:15:50,570 --> 00:15:59,390
address of the I curries which paragate

264
00:15:56,180 --> 00:16:04,130
parties these robots sent to Korea to

265
00:15:59,390 --> 00:16:08,120
our local service and check if it is in

266
00:16:04,130 --> 00:16:11,780
the public dns servers IP address or not

267
00:16:08,120 --> 00:16:17,500
so that we find which type a terminal

268
00:16:11,780 --> 00:16:21,230
node uses the Public DNS we exclude the

269
00:16:17,500 --> 00:16:23,570
excluded those try Patras probes from

270
00:16:21,230 --> 00:16:31,070
our measurement next please

271
00:16:23,570 --> 00:16:37,880
and we also measure the TTL distribution

272
00:16:31,070 --> 00:16:44,240
in signed JP DNS JP Zahn's prior to our

273
00:16:37,880 --> 00:16:49,280
measurement so we can find four

274
00:16:44,240 --> 00:16:53,590
categories of the TTL settings for NS

275
00:16:49,280 --> 00:16:57,500
and DNS keys this quadrant shots the

276
00:16:53,590 --> 00:17:03,440
classification of the lengths home NS

277
00:16:57,500 --> 00:17:07,730
and DNS key details so we don't know why

278
00:17:03,440 --> 00:17:13,630
this quadrant happens in Japan but this

279
00:17:07,730 --> 00:17:15,140
is very very typical to some industries

280
00:17:13,630 --> 00:17:19,280
next please

281
00:17:15,140 --> 00:17:26,240
so according to these TTL settings we

282
00:17:19,280 --> 00:17:29,860
set up the eight zones for this test

283
00:17:26,240 --> 00:17:33,340
next please so

284
00:17:29,860 --> 00:17:38,979
the full of food zones successful

285
00:17:33,340 --> 00:17:42,990
validation and for other force by a very

286
00:17:38,980 --> 00:17:46,649
odd validation because of the

287
00:17:42,990 --> 00:17:52,049
inconsistency between des and DNS key

288
00:17:46,649 --> 00:17:58,018
and for these settings we use the fixed

289
00:17:52,049 --> 00:18:02,470
TTL for DS and a records next please

290
00:17:58,019 --> 00:18:05,679
so this table shows the result of

291
00:18:02,470 --> 00:18:07,389
queries that we observed at the local

292
00:18:05,679 --> 00:18:13,260
authoritative server that is three

293
00:18:07,389 --> 00:18:16,689
laboratory and at UC when DNA

294
00:18:13,260 --> 00:18:23,039
segmentation failed them overall queries

295
00:18:16,690 --> 00:18:27,250
increased in for DNS SEC related queries

296
00:18:23,039 --> 00:18:30,279
so the left-hand side is a successful

297
00:18:27,250 --> 00:18:33,370
validated successful domain names and

298
00:18:30,279 --> 00:18:37,690
the right-hand side is a varied zones

299
00:18:33,370 --> 00:18:45,489
so you can see some several multi prides

300
00:18:37,690 --> 00:18:50,440
of the each resource record queries so

301
00:18:45,490 --> 00:18:55,899
next please and this is a result of

302
00:18:50,440 --> 00:19:01,330
queries monitored at the Jaypee dns as

303
00:18:55,899 --> 00:19:05,199
you see the dns expiration failure

304
00:19:01,330 --> 00:19:09,850
happens DNS SEC related records

305
00:19:05,200 --> 00:19:13,299
Khali's increased but the attenuation is

306
00:19:09,850 --> 00:19:21,240
lower than the authoritative at local

307
00:19:13,299 --> 00:19:24,899
servers so next please but you can see

308
00:19:21,240 --> 00:19:28,330
DNS key is better indicators because

309
00:19:24,899 --> 00:19:33,479
especially for the longer TTL settings

310
00:19:28,330 --> 00:19:37,110
for okay 23 at the left hand side and

311
00:19:33,480 --> 00:19:43,240
okay 43 at the left hand side is a

312
00:19:37,110 --> 00:19:47,129
longer TTL and see the mg 23 on ng 43

313
00:19:43,240 --> 00:19:51,940
it is also the shorter detail so the

314
00:19:47,130 --> 00:19:55,210
marriage price numbers is higher than

315
00:19:51,940 --> 00:20:01,710
the shorter TTL of DNS key it's about

316
00:19:55,210 --> 00:20:06,850
seven times I Adam the successful a so

317
00:20:01,710 --> 00:20:11,050
so that we thought that the the increase

318
00:20:06,850 --> 00:20:17,740
meant of DNS key is in the could be our

319
00:20:11,050 --> 00:20:21,610
indicator next please so this table

320
00:20:17,740 --> 00:20:24,850
shows the comparison with local also

321
00:20:21,610 --> 00:20:28,919
rotated that is heard rate was a third

322
00:20:24,850 --> 00:20:34,000
rail is rabbit and Jade JP ccTLD servers

323
00:20:28,920 --> 00:20:38,290
so you can see the huge nation of of the

324
00:20:34,000 --> 00:20:41,410
bubble queries so if we can see the

325
00:20:38,290 --> 00:20:45,840
local circuit of services we see much

326
00:20:41,410 --> 00:20:52,630
more queries but we still see some

327
00:20:45,840 --> 00:20:57,220
increase meant on the TLD servers but it

328
00:20:52,630 --> 00:20:59,530
is suffering to say that the validation

329
00:20:57,220 --> 00:21:00,760
failure in minor domains are likely to

330
00:20:59,530 --> 00:21:05,190
difficult to detect

331
00:21:00,760 --> 00:21:09,670
next please so the collision of our

332
00:21:05,190 --> 00:21:13,210
research is we conducted DNS passive and

333
00:21:09,670 --> 00:21:16,750
active measurement to know clearly

334
00:21:13,210 --> 00:21:19,240
behaviors in DNS SEC failure and DNS

335
00:21:16,750 --> 00:21:23,670
queries increased a-team ASIC validation

336
00:21:19,240 --> 00:21:28,320
failure the automation of queries in DNS

337
00:21:23,670 --> 00:21:31,480
hierarchy is different as expected but

338
00:21:28,320 --> 00:21:34,350
do you see the MSC difference is still a

339
00:21:31,480 --> 00:21:39,490
good metric to detect validation failure

340
00:21:34,350 --> 00:21:43,139
next please so that we still continuing

341
00:21:39,490 --> 00:21:47,620
this work because we have still some

342
00:21:43,140 --> 00:21:50,710
unknown issues so that was one of the

343
00:21:47,620 --> 00:21:53,979
issues difference in public and as a

344
00:21:50,710 --> 00:21:56,800
reservist Public DNS and as a reservist

345
00:21:53,980 --> 00:22:00,340
we will have different behaviors

346
00:21:56,800 --> 00:22:06,370
the Public DNS of a very large and very

347
00:22:00,340 --> 00:22:10,179
good operation and the quantify of ccTLD

348
00:22:06,370 --> 00:22:16,719
that is top level or second treble was

349
00:22:10,180 --> 00:22:20,200
horribly attenuation because I am a TD

350
00:22:16,720 --> 00:22:24,940
operator so I am watching over

351
00:22:20,200 --> 00:22:31,390
monitoring the tlg servers mainly and TT

352
00:22:24,940 --> 00:22:34,000
react in various status and we had to

353
00:22:31,390 --> 00:22:41,230
have some longitudinal analysis of a

354
00:22:34,000 --> 00:22:44,080
part of GP DNS service traces we want to

355
00:22:41,230 --> 00:22:46,690
have a victim cause in real time

356
00:22:44,080 --> 00:22:50,919
detection method of theory disturb aside

357
00:22:46,690 --> 00:22:57,670
because we are monitoring to two out of

358
00:22:50,920 --> 00:23:01,150
seven JP DNS servers almost real time so

359
00:22:57,670 --> 00:23:05,890
that we can find which I used those two

360
00:23:01,150 --> 00:23:10,030
servers as on the vantage point to find

361
00:23:05,890 --> 00:23:12,760
detect of DNS SEC failure so I'm very

362
00:23:10,030 --> 00:23:17,129
welcome here any comments regarding to

363
00:23:12,760 --> 00:23:17,129
research work thank you

364
00:23:22,050 --> 00:23:27,909
any questions

365
00:23:24,700 --> 00:23:27,910
[Music]

366
00:23:32,350 --> 00:23:39,290
[Music]

367
00:24:06,480 --> 00:24:13,929
hi everyone my name is Ray Adams before

368
00:24:11,139 --> 00:24:16,869
I start on this topic a disclaimer I

369
00:24:13,929 --> 00:24:18,129
work for ICANN and all I all opinions

370
00:24:16,869 --> 00:24:20,830
expressed here are my own

371
00:24:18,129 --> 00:24:22,539
not necessarily I cans here's what I

372
00:24:20,830 --> 00:24:25,509
make that clear I'm gonna talk about

373
00:24:22,539 --> 00:24:26,730
private space names a lot of you are

374
00:24:25,509 --> 00:24:29,470
thinking now not again

375
00:24:26,730 --> 00:24:30,940
well again this private name stuff we

376
00:24:29,470 --> 00:24:32,950
talked about him to know we talked about

377
00:24:30,940 --> 00:24:50,789
dolls can we just move on

378
00:24:32,950 --> 00:24:50,789
well next slide there you go thank you

379
00:24:51,389 --> 00:24:56,979
so if you look at the solution space

380
00:24:54,460 --> 00:24:58,600
currently there are a lot of solutions

381
00:24:56,980 --> 00:25:00,519
out there people suggest that you

382
00:24:58,600 --> 00:25:03,369
register your own name well that's not

383
00:25:00,519 --> 00:25:05,289
really private before I go on let me

384
00:25:03,369 --> 00:25:07,238
explain a little quickly what I mean

385
00:25:05,289 --> 00:25:08,980
with private use it's a it's a it's a

386
00:25:07,239 --> 00:25:12,879
name that you can use on your own

387
00:25:08,980 --> 00:25:15,700
private network media corporation be it

388
00:25:12,879 --> 00:25:17,709
your home network etc etc another

389
00:25:15,700 --> 00:25:19,690
argument just don't don't don't do it

390
00:25:17,710 --> 00:25:22,210
I've often heard that but that also

391
00:25:19,690 --> 00:25:25,570
really doesn't work used us internal or

392
00:25:22,210 --> 00:25:27,129
good local or dot alt or dot home but

393
00:25:25,570 --> 00:25:31,509
I'm not really gonna talk about at home

394
00:25:27,129 --> 00:25:36,269
or home dot our plan and the problem is

395
00:25:31,509 --> 00:25:36,269
there is no defined way of doing this

396
00:25:36,899 --> 00:25:44,158
and the result is something you see on

397
00:25:40,419 --> 00:25:44,159
screen here these are the results of

398
00:25:45,059 --> 00:25:52,269
results of I thi I teach knives identify

399
00:25:49,239 --> 00:25:54,039
technology health indicators and in

400
00:25:52,269 --> 00:25:58,779
short is the stuff that we've observed

401
00:25:54,039 --> 00:26:02,799
at the L root or iMRS root server at the

402
00:25:58,779 --> 00:26:04,539
top the little 13 and names that do not

403
00:26:02,799 --> 00:26:06,399
exist that's being queried for create

404
00:26:04,539 --> 00:26:09,220
for and you can see it all over the

405
00:26:06,399 --> 00:26:11,709
place there's nothing wrong with these

406
00:26:09,220 --> 00:26:13,539
strings I'm just saying that we observe

407
00:26:11,710 --> 00:26:14,700
that these things leak and they do not

408
00:26:13,539 --> 00:26:20,090
exist

409
00:26:14,700 --> 00:26:22,859
in the root zone and next slide please

410
00:26:20,090 --> 00:26:25,709
so I'm going to talk about a proposed

411
00:26:22,859 --> 00:26:27,299
solutions place constraints so now that

412
00:26:25,710 --> 00:26:29,100
we understand the problem space

413
00:26:27,299 --> 00:26:31,470
here are some constraints in the

414
00:26:29,100 --> 00:26:34,230
solution space we need a simple and

415
00:26:31,470 --> 00:26:36,749
concise BCP the BCP that basically says

416
00:26:34,230 --> 00:26:39,359
if you want to do this this is your way

417
00:26:36,749 --> 00:26:43,309
of doing it and we need to have a label

418
00:26:39,359 --> 00:26:45,629
in there that has no semantic meaning

419
00:26:43,309 --> 00:26:50,668
what I mean with semantic meaning is

420
00:26:45,629 --> 00:26:53,699
like it shouldn't have a literal meaning

421
00:26:50,669 --> 00:26:55,320
like internal or private or alt or local

422
00:26:53,700 --> 00:26:57,980
or home or anything for that matter

423
00:26:55,320 --> 00:27:03,269
because the moment you choose private or

424
00:26:57,980 --> 00:27:04,889
internal folks have an argument when

425
00:27:03,269 --> 00:27:07,529
they say well that doesn't really cover

426
00:27:04,889 --> 00:27:11,668
my home network or my private news

427
00:27:07,529 --> 00:27:14,970
network and remember the X my headers

428
00:27:11,669 --> 00:27:19,619
that I talked about before right or in

429
00:27:14,970 --> 00:27:21,989
language text you have X - there's

430
00:27:19,619 --> 00:27:24,899
enough semantic headers they have no

431
00:27:21,989 --> 00:27:27,529
literal meaning so we need something

432
00:27:24,899 --> 00:27:29,850
that has no semantic meaning and we also

433
00:27:27,529 --> 00:27:31,350
another problem with these restraints

434
00:27:29,850 --> 00:27:35,820
are they to angular funny they don't

435
00:27:31,350 --> 00:27:38,100
work in German or in Dutch and it also

436
00:27:35,820 --> 00:27:41,549
smart to choose a label that will never

437
00:27:38,100 --> 00:27:43,019
never be delegated and we also need to

438
00:27:41,549 --> 00:27:45,149
choose a label with label I mean a

439
00:27:43,019 --> 00:27:49,470
top-level domain label choose a label

440
00:27:45,149 --> 00:27:51,149
that may not require our C 67 61 this

441
00:27:49,470 --> 00:27:53,999
the exceptionally reserved list of

442
00:27:51,149 --> 00:27:58,529
top-level domains so maybe we can just

443
00:27:53,999 --> 00:28:03,269
use a two character ASCII domain next

444
00:27:58,529 --> 00:28:07,739
like this this is a potential political

445
00:28:03,269 --> 00:28:09,419
minefield to leather askew domains so

446
00:28:07,739 --> 00:28:15,840
you can you can kill me later in the

447
00:28:09,419 --> 00:28:17,220
Mike line our C 1591 talks about domain

448
00:28:15,840 --> 00:28:19,350
name system structure and delegation

449
00:28:17,220 --> 00:28:21,409
there's this infamous section of famous

450
00:28:19,350 --> 00:28:25,230
section that talks about country codes

451
00:28:21,409 --> 00:28:28,140
the Ayana is nothing the business of

452
00:28:25,230 --> 00:28:30,630
deciding what is what is not a country

453
00:28:28,140 --> 00:28:34,230
and the next section talks about the ISO

454
00:28:30,630 --> 00:28:35,940
3166 list and keep in mind that the next

455
00:28:34,230 --> 00:28:38,640
section and actually the entire document

456
00:28:35,940 --> 00:28:42,420
does not talk about countries at all

457
00:28:38,640 --> 00:28:45,620
it talks about country names and it

458
00:28:42,420 --> 00:28:48,210
talks about entities but most countries

459
00:28:45,620 --> 00:28:50,959
and so I saw three one six six lists

460
00:28:48,210 --> 00:28:53,010
they are basically the two character

461
00:28:50,960 --> 00:28:55,290
top-level domains that's right it took

462
00:28:53,010 --> 00:28:55,799
two character country codes and if the

463
00:28:55,290 --> 00:28:58,920
next slide please

464
00:28:55,799 --> 00:29:04,350
and lists them all I can go through them

465
00:28:58,920 --> 00:29:07,230
right now it's a a a b a c and I've

466
00:29:04,350 --> 00:29:08,490
counted them one by one they're 676 I'm

467
00:29:07,230 --> 00:29:09,870
sure I'm sure there's some mathematical

468
00:29:08,490 --> 00:29:12,840
tricks that you can use in order to do

469
00:29:09,870 --> 00:29:15,719
this faster but there are 676 next slide

470
00:29:12,840 --> 00:29:18,178
please and what he is oh three one six

471
00:29:15,720 --> 00:29:21,090
six folks have done is they've

472
00:29:18,179 --> 00:29:23,640
categorized them all of these individual

473
00:29:21,090 --> 00:29:24,899
elements fall into a category and I'm a

474
00:29:23,640 --> 00:29:26,220
little bit of color blind so I hope I'm

475
00:29:24,900 --> 00:29:29,490
gonna get this right they can have here

476
00:29:26,220 --> 00:29:33,480
next slide yeah on the top left you see

477
00:29:29,490 --> 00:29:34,980
a colored squirm this is a a a color

478
00:29:33,480 --> 00:29:37,559
square it basically means it's user

479
00:29:34,980 --> 00:29:39,000
assigns and this one's going to talk

480
00:29:37,559 --> 00:29:41,730
about in a minute I'm gonna go quickly

481
00:29:39,000 --> 00:29:44,790
through the rest you have the white

482
00:29:41,730 --> 00:29:48,960
background it's actually feasible I know

483
00:29:44,790 --> 00:29:50,639
I'm Valerie perfect that's visible so

484
00:29:48,960 --> 00:29:53,250
the white background like a bee those

485
00:29:50,640 --> 00:29:54,840
haven't been assigned yet they may be

486
00:29:53,250 --> 00:29:57,390
assigned in the future but they haven't

487
00:29:54,840 --> 00:29:59,850
been assigned yet so the categories and

488
00:29:57,390 --> 00:30:02,549
the science and then we have

489
00:29:59,850 --> 00:30:07,139
exceptionally reserved like UK this

490
00:30:02,549 --> 00:30:09,059
yellow and EU this yellow small sidestep

491
00:30:07,140 --> 00:30:11,490
here I used to work for a company names

492
00:30:09,059 --> 00:30:16,470
and Namie nets and I used to work it for

493
00:30:11,490 --> 00:30:18,780
nine years and I knew UK is not gb but I

494
00:30:16,470 --> 00:30:19,980
never knew the following and this is

495
00:30:18,780 --> 00:30:20,899
only what I discovered in the last

496
00:30:19,980 --> 00:30:25,230
couple of months

497
00:30:20,900 --> 00:30:29,340
ISO 3166 and as you know and as UK is

498
00:30:25,230 --> 00:30:31,710
exceptionally reserved and in the

499
00:30:29,340 --> 00:30:34,379
context of ISO 3166

500
00:30:31,710 --> 00:30:37,200
it means that UK is not a country

501
00:30:34,380 --> 00:30:40,380
another country name is not assigned

502
00:30:37,200 --> 00:30:41,550
because ISO 3166 is assigning official

503
00:30:40,380 --> 00:30:45,000
country names

504
00:30:41,550 --> 00:30:47,520
to a two-letter code right this UK is

505
00:30:45,000 --> 00:30:49,950
not a science to the United Kingdom why

506
00:30:47,520 --> 00:30:52,260
not is because the ISO 3166

507
00:30:49,950 --> 00:30:55,560
decided long ago to avoid generic terms

508
00:30:52,260 --> 00:30:56,910
like unites or Kingdom or Republic if

509
00:30:55,560 --> 00:30:59,220
you're gonna stick with all these

510
00:30:56,910 --> 00:30:59,910
generic names like United Kingdom and

511
00:30:59,220 --> 00:31:01,800
Republic

512
00:30:59,910 --> 00:31:03,980
you're gonna soon run out of huge case

513
00:31:01,800 --> 00:31:06,090
and ours to use in your to letter doing

514
00:31:03,980 --> 00:31:08,240
so for the United Kingdom of Great

515
00:31:06,090 --> 00:31:10,949
Britain and Northern Ireland the first

516
00:31:08,240 --> 00:31:15,750
distinguishing string is Great Britain

517
00:31:10,950 --> 00:31:17,340
and the official encoding for the

518
00:31:15,750 --> 00:31:19,080
country code for therefore a country

519
00:31:17,340 --> 00:31:23,040
named United Kingdom Great Britain

520
00:31:19,080 --> 00:31:28,080
Northern Ireland is GB and not UK so why

521
00:31:23,040 --> 00:31:32,280
is this exceptionally reserved sorry yes

522
00:31:28,080 --> 00:31:38,460
that's an exception yes

523
00:31:32,280 --> 00:31:40,530
so if you look at Russia you know let's

524
00:31:38,460 --> 00:31:42,930
move on these the other codes is the

525
00:31:40,530 --> 00:31:45,840
green stuff that's officially assigned

526
00:31:42,930 --> 00:31:47,460
and then you have some transitional

527
00:31:45,840 --> 00:31:48,750
e-reserves and in in in determine a

528
00:31:47,460 --> 00:31:51,210
division I'm not gonna go into that

529
00:31:48,750 --> 00:31:53,220
right now but it's just for me it's an

530
00:31:51,210 --> 00:31:54,570
interesting thing next slide please

531
00:31:53,220 --> 00:31:57,540
so these are the codes that I want to

532
00:31:54,570 --> 00:32:04,020
talk about the user design stuff a a qm2

533
00:31:57,540 --> 00:32:06,570
Q Jets XA 2 XS jet set next light so

534
00:32:04,020 --> 00:32:09,629
what does the ISO standards say about

535
00:32:06,570 --> 00:32:12,330
these things about your construction of

536
00:32:09,630 --> 00:32:16,200
the alpha-2 codes the ISO 3166 standard

537
00:32:12,330 --> 00:32:21,780
uses a combinations in the range a b TQ

538
00:32:16,200 --> 00:32:23,940
l ra t wz and why eh-2-zed why so d iso

539
00:32:21,780 --> 00:32:26,760
standard talks about dead range of

540
00:32:23,940 --> 00:32:29,940
course what did they say about the other

541
00:32:26,760 --> 00:32:33,240
42 these user assigned elements they are

542
00:32:29,940 --> 00:32:33,810
not used in the standards they are not

543
00:32:33,240 --> 00:32:36,540
used

544
00:32:33,810 --> 00:32:39,919
they will never be assigned they will

545
00:32:36,540 --> 00:32:42,360
never be reserved they are not used and

546
00:32:39,920 --> 00:32:44,360
this is important in the context of what

547
00:32:42,360 --> 00:32:47,729
I want to talk about in a minute

548
00:32:44,360 --> 00:32:49,740
so the standard goes on in 8.1 about

549
00:32:47,730 --> 00:32:52,530
special provisions you should sometimes

550
00:32:49,740 --> 00:32:54,150
need to extend or to alter the use of

551
00:32:52,530 --> 00:32:55,170
country code elements for special

552
00:32:54,150 --> 00:32:58,920
purposes

553
00:32:55,170 --> 00:33:00,809
and in an 8 1 2 it says if users need

554
00:32:58,920 --> 00:33:04,170
code elements to present country names

555
00:33:00,809 --> 00:33:07,649
of countries country names not included

556
00:33:04,170 --> 00:33:10,170
in this part these series of letters AAA

557
00:33:07,650 --> 00:33:13,230
qmq jet etc are available

558
00:33:10,170 --> 00:33:14,850
this is guidance it doesn't mean you

559
00:33:13,230 --> 00:33:16,049
can't use this for anything else and I'm

560
00:33:14,850 --> 00:33:17,790
gonna give you a few examples of how

561
00:33:16,049 --> 00:33:21,210
other standards are using these things

562
00:33:17,790 --> 00:33:23,520
next likely so are these things used to

563
00:33:21,210 --> 00:33:25,890
elsewhere these user sign codes is o3

564
00:33:23,520 --> 00:33:27,360
901 in the international standard

565
00:33:25,890 --> 00:33:28,559
recording code and I'm not going to

566
00:33:27,360 --> 00:33:31,439
pretend I know anything about these

567
00:33:28,559 --> 00:33:33,240
things I've just found them so it

568
00:33:31,440 --> 00:33:36,210
reserved said set for direct registrants

569
00:33:33,240 --> 00:33:38,669
independent of any country now the next

570
00:33:36,210 --> 00:33:39,960
one is quite interesting mi so for tu-16

571
00:33:38,669 --> 00:33:43,200
codes for the representation of

572
00:33:39,960 --> 00:33:44,549
currencies it reserves XA to exit for

573
00:33:43,200 --> 00:33:46,740
transactions and precious precious

574
00:33:44,549 --> 00:33:49,559
metals as their country independence I'm

575
00:33:46,740 --> 00:33:52,049
gonna talk about this a little bit US

576
00:33:49,559 --> 00:33:55,918
dollar the official code for your Zola

577
00:33:52,049 --> 00:33:59,879
is USD and the US in USD comes from the

578
00:33:55,919 --> 00:34:03,570
three one six six tenders GBP remember

579
00:33:59,880 --> 00:34:05,460
GB UK you don't have UK P if GBP the GB

580
00:34:03,570 --> 00:34:08,219
GB please stems from the ISO three one

581
00:34:05,460 --> 00:34:11,970
six extend it so what's all this XA

582
00:34:08,219 --> 00:34:14,069
stuff in official standards gold can be

583
00:34:11,969 --> 00:34:17,069
used sorry nothing official standards in

584
00:34:14,070 --> 00:34:19,139
general gold can be used to pay for

585
00:34:17,070 --> 00:34:21,270
stuff right its currency in transactions

586
00:34:19,139 --> 00:34:27,750
etc etc there's no official code for

587
00:34:21,270 --> 00:34:31,739
that is X a you silver x AG Bitcoin I'm

588
00:34:27,750 --> 00:34:34,379
not kidding XB t so these are used these

589
00:34:31,739 --> 00:34:36,509
private space names this em sorry

590
00:34:34,379 --> 00:34:39,899
these user sign names are used in all

591
00:34:36,510 --> 00:34:42,419
kinds of standards iso 6-1 6-2 6-2 about

592
00:34:39,899 --> 00:34:44,699
excess for security clear to Euro clear

593
00:34:42,418 --> 00:34:45,888
clear stream etc away from the ISO

594
00:34:44,699 --> 00:34:48,989
standards next slide please

595
00:34:45,889 --> 00:34:51,300
you have ICAO International Civil

596
00:34:48,989 --> 00:34:55,770
Aviation Organization it reserves LSATs

597
00:34:51,300 --> 00:34:57,149
for UN travel documents and WIPO WIPO

598
00:34:55,770 --> 00:34:59,009
the worth is lecture Property

599
00:34:57,149 --> 00:35:01,950
Organization uses a whole range of these

600
00:34:59,010 --> 00:35:03,450
private space and things and it uses not

601
00:35:01,950 --> 00:35:06,118
for countries but basically for their

602
00:35:03,450 --> 00:35:08,379
own offices so if you have a peasant's

603
00:35:06,119 --> 00:35:10,720
or an application from a certain con

604
00:35:08,380 --> 00:35:12,880
you can use a country code but if it

605
00:35:10,720 --> 00:35:14,709
goes through a certain Patent Office you

606
00:35:12,880 --> 00:35:17,770
can actually use the code for that

607
00:35:14,710 --> 00:35:19,330
patent on this closer to home to can't

608
00:35:17,770 --> 00:35:21,640
form the certificate authority in

609
00:35:19,330 --> 00:35:24,430
browser form it reserves xx to signify

610
00:35:21,640 --> 00:35:26,799
location not covered by ISO 3166 and

611
00:35:24,430 --> 00:35:29,919
even closer to her closer to home and

612
00:35:26,800 --> 00:35:32,350
RFC five six four six well known to many

613
00:35:29,920 --> 00:35:34,500
of you text for arson identifying

614
00:35:32,350 --> 00:35:37,089
languages this is when you use action

615
00:35:34,500 --> 00:35:41,890
these language taxi your browser etc

616
00:35:37,090 --> 00:35:44,380
cetera next slide this is the text

617
00:35:41,890 --> 00:35:46,810
lifted from the standard from that sorry

618
00:35:44,380 --> 00:35:49,240
from the BCP it says for example the

619
00:35:46,810 --> 00:35:51,340
region subtext a a set set and dosing

620
00:35:49,240 --> 00:35:53,740
ranges etc etc you recognize these from

621
00:35:51,340 --> 00:35:57,220
before they can be used to form a

622
00:35:53,740 --> 00:35:59,560
language language stack and here's an

623
00:35:57,220 --> 00:36:03,370
example on the screen so next slide

624
00:35:59,560 --> 00:36:06,940
please so in conclusion we now we now

625
00:36:03,370 --> 00:36:09,250
have what we I because I speak for

626
00:36:06,940 --> 00:36:12,910
myself have shown you that

627
00:36:09,250 --> 00:36:15,580
alpha-2 user assigned codes these two

628
00:36:12,910 --> 00:36:18,279
character codes they are used as

629
00:36:15,580 --> 00:36:21,640
intended in various standards and

630
00:36:18,280 --> 00:36:26,050
therefore these codes will never be ISO

631
00:36:21,640 --> 00:36:31,870
assigns or reserves it says so in the

632
00:36:26,050 --> 00:36:35,320
standard that implies if I follow RC

633
00:36:31,870 --> 00:36:40,720
1591 and price that these codes will

634
00:36:35,320 --> 00:36:43,480
never be delegated and since they never

635
00:36:40,720 --> 00:36:46,180
be delegated we might may not and I say

636
00:36:43,480 --> 00:36:49,060
may happy to do it if that's needed we

637
00:36:46,180 --> 00:36:52,450
may not need these to go through RC 67

638
00:36:49,060 --> 00:36:57,040
61 where you where you reserved them

639
00:36:52,450 --> 00:37:00,220
such as the onion etc etc and the cool

640
00:36:57,040 --> 00:37:03,310
thing just like these X Montag's right

641
00:37:00,220 --> 00:37:05,490
using these two character costs have no

642
00:37:03,310 --> 00:37:11,290
semantic meaning which is a good thing

643
00:37:05,490 --> 00:37:13,509
next like so I'm just gonna use this as

644
00:37:11,290 --> 00:37:16,240
a suggestion I don't want to paint

645
00:37:13,510 --> 00:37:18,220
device yet too much right to use that

646
00:37:16,240 --> 00:37:20,049
said I'm gonna use that zet as an

647
00:37:18,220 --> 00:37:21,669
example going forward

648
00:37:20,050 --> 00:37:23,890
luckily I only have one slide left so

649
00:37:21,670 --> 00:37:27,430
but I'm not suggesting that we should

650
00:37:23,890 --> 00:37:30,029
use this now I'm just suggesting that

651
00:37:27,430 --> 00:37:34,410
that is available for this purpose and

652
00:37:30,030 --> 00:37:37,060
next slide so what about D in a sec

653
00:37:34,410 --> 00:37:39,790
well we all know that Zed Zed doesn't

654
00:37:37,060 --> 00:37:42,100
actually exist and your validator will

655
00:37:39,790 --> 00:37:45,940
validate that that said that doesn't

656
00:37:42,100 --> 00:37:48,310
exist because it doesn't validate can

657
00:37:45,940 --> 00:37:51,640
prove this that's a good thing

658
00:37:48,310 --> 00:37:53,529
I don't want to be lied to right at

659
00:37:51,640 --> 00:37:57,879
least not without approval now some have

660
00:37:53,530 --> 00:38:01,440
suggested that Zed says or internal you

661
00:37:57,880 --> 00:38:07,780
should be delegated in the route and

662
00:38:01,440 --> 00:38:08,890
signs now I disagree if I as a validator

663
00:38:07,780 --> 00:38:12,040
want to be lied to

664
00:38:08,890 --> 00:38:14,200
I want to make that explicit I want to

665
00:38:12,040 --> 00:38:17,470
have to configure it that people can lie

666
00:38:14,200 --> 00:38:20,020
to me so does the internal both odds

667
00:38:17,470 --> 00:38:22,990
don't onion or what not if I want to

668
00:38:20,020 --> 00:38:24,970
allow that in my in my validator space

669
00:38:22,990 --> 00:38:26,379
then I want to make it explicit I want

670
00:38:24,970 --> 00:38:29,259
to have a truss tank for that a negative

671
00:38:26,380 --> 00:38:30,700
trust anchor now stubby works sure that

672
00:38:29,260 --> 00:38:34,840
bind works for that it all works

673
00:38:30,700 --> 00:38:37,450
basically so an even better if I wanted

674
00:38:34,840 --> 00:38:40,720
resigns his private space I can now do

675
00:38:37,450 --> 00:38:42,660
that with a positive trust anchor as

676
00:38:40,720 --> 00:38:48,220
opposed to a negative trust anchor

677
00:38:42,660 --> 00:38:50,259
anyway this is my my rent my my little

678
00:38:48,220 --> 00:38:52,180
talk about using private space names I

679
00:38:50,260 --> 00:38:54,910
will take this to DNA shops on on

680
00:38:52,180 --> 00:38:57,339
Thursday and I will bore you all once

681
00:38:54,910 --> 00:38:58,210
again with this stuff if you have any

682
00:38:57,340 --> 00:39:01,030
questions let me know

683
00:38:58,210 --> 00:39:09,280
I'm available all day all week for

684
00:39:01,030 --> 00:39:11,590
discussions on this just a quick comment

685
00:39:09,280 --> 00:39:13,900
thank you for this and I think it makes

686
00:39:11,590 --> 00:39:16,270
a lot of sense I've been using dot XY

687
00:39:13,900 --> 00:39:17,859
for a number of years I didn't do the

688
00:39:16,270 --> 00:39:19,810
detailing research I just read the

689
00:39:17,859 --> 00:39:25,330
Wikipedia article on our own

690
00:39:19,810 --> 00:39:27,190
I guess so 3166 I the other proposals I

691
00:39:25,330 --> 00:39:29,590
mean dot internal is nice but it's just

692
00:39:27,190 --> 00:39:33,430
too long I mean it's feels really

693
00:39:29,590 --> 00:39:34,000
unnatural to pinger you know TV you know

694
00:39:33,430 --> 00:39:36,490
the ping

695
00:39:34,000 --> 00:39:38,530
TV dot intimal feels unnatural it's

696
00:39:36,490 --> 00:39:41,500
people are not going to use that so

697
00:39:38,530 --> 00:39:48,670
thank you very much and uh alright we

698
00:39:41,500 --> 00:40:18,730
worry thank you nobody else alright

699
00:39:48,670 --> 00:40:23,530
thank you job Snyder's good morning I a

700
00:40:18,730 --> 00:40:30,099
PG my name is Jobe Snyder's I work for

701
00:40:23,530 --> 00:40:30,700
NCT and we're having random slides next

702
00:40:30,099 --> 00:40:34,300
slide please

703
00:40:30,700 --> 00:40:38,339
I want to give a bit of a recap on

704
00:40:34,300 --> 00:40:41,230
recent rpki deployments highlights a

705
00:40:38,339 --> 00:40:43,150
regional internet registry policy

706
00:40:41,230 --> 00:40:46,540
updates that is of interest to this

707
00:40:43,150 --> 00:40:48,900
group perhaps share some updates on an

708
00:40:46,540 --> 00:40:52,029
open source project and finally conclude

709
00:40:48,900 --> 00:40:56,130
with an update about the best operating

710
00:40:52,030 --> 00:41:02,650
system on the planet next slide please

711
00:40:56,130 --> 00:41:05,560
so I have a server somewhere and with a

712
00:41:02,650 --> 00:41:08,320
bunch of people we're using that server

713
00:41:05,560 --> 00:41:12,759
to map outs rpki deployments on the

714
00:41:08,320 --> 00:41:15,869
internet using a fairly simple method we

715
00:41:12,760 --> 00:41:19,900
have two prefixes 1 as an RPG I invalids

716
00:41:15,869 --> 00:41:23,070
prefix the other is pellets and from

717
00:41:19,900 --> 00:41:26,320
those prefixes we sent ICMP messages to

718
00:41:23,070 --> 00:41:30,190
every ipv4 address on the internet and

719
00:41:26,320 --> 00:41:35,140
we compare which of the source addresses

720
00:41:30,190 --> 00:41:38,080
gets replies now in this image you see

721
00:41:35,140 --> 00:41:40,830
bloom is IP four addresses that

722
00:41:38,080 --> 00:41:44,859
responded to both the valid and invalid

723
00:41:40,830 --> 00:41:47,620
source address this means they are not

724
00:41:44,859 --> 00:41:51,670
performing rpki based BGP origin

725
00:41:47,620 --> 00:41:53,890
validation and yellow is only responding

726
00:41:51,670 --> 00:41:57,460
to the valid source address so they are

727
00:41:53,890 --> 00:42:00,370
in fact doing origin validation or a

728
00:41:57,460 --> 00:42:03,250
network between that server and that IP

729
00:42:00,370 --> 00:42:05,650
address is doing origin validation so

730
00:42:03,250 --> 00:42:13,090
this is a snapshot from August next

731
00:42:05,650 --> 00:42:15,880
place a month later next place and what

732
00:42:13,090 --> 00:42:18,910
you can see here is that rpki deployment

733
00:42:15,880 --> 00:42:20,380
is rapidly picking up the largest

734
00:42:18,910 --> 00:42:22,000
networks on the planets are deploying

735
00:42:20,380 --> 00:42:24,790
it's the smallest networks on the

736
00:42:22,000 --> 00:42:27,130
planets are deploying its route surfer

737
00:42:24,790 --> 00:42:28,270
operators are doing it so that's very

738
00:42:27,130 --> 00:42:32,190
cool

739
00:42:28,270 --> 00:42:37,840
developments next please

740
00:42:32,190 --> 00:42:41,380
now a update on rpki in context of a re

741
00:42:37,840 --> 00:42:45,370
are in the right community roughly a

742
00:42:41,380 --> 00:42:49,210
year ago the IRR database was split into

743
00:42:45,370 --> 00:42:51,850
two parts almost called ripe and the

744
00:42:49,210 --> 00:42:56,080
other is called ripe numb off and the

745
00:42:51,850 --> 00:42:59,650
splits occurred because the ir objects

746
00:42:56,080 --> 00:43:02,380
in the ripe source were authenticated

747
00:42:59,650 --> 00:43:04,930
against the wishes of the resource

748
00:43:02,380 --> 00:43:07,690
holder but there also was a bunch of

749
00:43:04,930 --> 00:43:10,120
data in the right eye arm that was never

750
00:43:07,690 --> 00:43:12,070
in fact checked against the wishes of

751
00:43:10,120 --> 00:43:15,279
the resource holder so we call this

752
00:43:12,070 --> 00:43:19,180
non-operative and that nan afford if

753
00:43:15,280 --> 00:43:21,910
datasets cannot just be deleted because

754
00:43:19,180 --> 00:43:24,960
we don't really know which parts of that

755
00:43:21,910 --> 00:43:28,000
datasets are still useful which parts

756
00:43:24,960 --> 00:43:31,750
serve a purpose and which parts are

757
00:43:28,000 --> 00:43:34,620
detrimental to operations so the

758
00:43:31,750 --> 00:43:37,870
thinking was what if we use this

759
00:43:34,620 --> 00:43:42,310
original addition procedure and apply it

760
00:43:37,870 --> 00:43:45,940
to IRR objects in other words if an IRR

761
00:43:42,310 --> 00:43:48,880
object is in conflict we've published

762
00:43:45,940 --> 00:43:52,420
harpy guy are ways we can conclude that

763
00:43:48,880 --> 00:43:54,730
the ir object is describing a state that

764
00:43:52,420 --> 00:43:58,200
should be rejected and therefore this ir

765
00:43:54,730 --> 00:44:00,640
object can be deleted now the community

766
00:43:58,200 --> 00:44:01,000
came to consensus on this

767
00:44:00,640 --> 00:44:05,440
the

768
00:44:01,000 --> 00:44:08,830
policy was ratified last week and out of

769
00:44:05,440 --> 00:44:12,010
the 65,000 ish objects in this data

770
00:44:08,830 --> 00:44:14,830
source roughly 900 are in conflict with

771
00:44:12,010 --> 00:44:17,260
published are ways if you want to

772
00:44:14,830 --> 00:44:20,140
inspect this you can download a small

773
00:44:17,260 --> 00:44:23,350
Python scripts I've wrote and that will

774
00:44:20,140 --> 00:44:28,330
show you the data next slides this is

775
00:44:23,350 --> 00:44:30,520
one of such examples probably some time

776
00:44:28,330 --> 00:44:34,569
long before I was even walking this

777
00:44:30,520 --> 00:44:37,960
planet a company created route objects'

778
00:44:34,570 --> 00:44:40,920
that describe state that is in conflict

779
00:44:37,960 --> 00:44:44,950
with our ways that entity published an

780
00:44:40,920 --> 00:44:48,030
entity did not have any way to delete

781
00:44:44,950 --> 00:44:50,980
these IR objects in the right database

782
00:44:48,030 --> 00:44:53,260
until now because now we can point at

783
00:44:50,980 --> 00:44:56,580
the ARCA carry our ways which signified

784
00:44:53,260 --> 00:45:03,610
that objects like these should not exist

785
00:44:56,580 --> 00:45:06,069
next please related to the policy that

786
00:45:03,610 --> 00:45:12,880
will be implemented in the right

787
00:45:06,070 --> 00:45:17,110
database is a effort called IR Rd and IR

788
00:45:12,880 --> 00:45:19,840
D is becoming smart middleware between

789
00:45:17,110 --> 00:45:22,930
your prefix filter generation clients

790
00:45:19,840 --> 00:45:25,980
and the various data sources that exists

791
00:45:22,930 --> 00:45:29,500
out there in the world next slide please

792
00:45:25,980 --> 00:45:33,040
the reason I already for exists is that

793
00:45:29,500 --> 00:45:35,020
legacy IR D was no longer extensible

794
00:45:33,040 --> 00:45:37,900
there were some reliability issues with

795
00:45:35,020 --> 00:45:41,110
this demon which meant that we just had

796
00:45:37,900 --> 00:45:44,830
to restart it every week but the code

797
00:45:41,110 --> 00:45:47,320
was complicated which meant that we

798
00:45:44,830 --> 00:45:50,590
could not add new features specifically

799
00:45:47,320 --> 00:45:53,920
new security features and one of the

800
00:45:50,590 --> 00:45:56,020
cool things that is coming to IR D is a

801
00:45:53,920 --> 00:46:01,120
mechanism similar to what is happening

802
00:45:56,020 --> 00:46:03,310
in the ripe database the IR D for demon

803
00:46:01,120 --> 00:46:06,609
in its next release will have

804
00:46:03,310 --> 00:46:09,580
functionality to consume rpki data to

805
00:46:06,610 --> 00:46:12,280
suppress or deletes conflicting IR

806
00:46:09,580 --> 00:46:14,150
information and this will happen on two

807
00:46:12,280 --> 00:46:17,269
levels

808
00:46:14,150 --> 00:46:20,410
both in context of the IRD demon being a

809
00:46:17,269 --> 00:46:24,410
furtive quote-unquote supportive

810
00:46:20,410 --> 00:46:26,629
database and on the mirroring level when

811
00:46:24,410 --> 00:46:31,848
this demon consumes data from other

812
00:46:26,630 --> 00:46:34,759
databases over nrt m in both halves -

813
00:46:31,849 --> 00:46:37,180
into this into the cache of this demon

814
00:46:34,759 --> 00:46:40,549
origin validation will be applied

815
00:46:37,180 --> 00:46:43,569
thereby significantly cleaning up the

816
00:46:40,549 --> 00:46:45,880
potential damage that the irr can bring

817
00:46:43,569 --> 00:46:49,190
next slide please

818
00:46:45,880 --> 00:46:51,160
the beauty of this mechanism is that it

819
00:46:49,190 --> 00:46:53,509
not only helps us clean up the past

820
00:46:51,160 --> 00:46:58,480
route objects that have been created in

821
00:46:53,509 --> 00:47:00,490
the last 20 years it provides us

822
00:46:58,480 --> 00:47:03,920
operators with a industry-standard

823
00:47:00,490 --> 00:47:07,098
mechanism to get rid of old route

824
00:47:03,920 --> 00:47:09,559
objects but it also helps protect us

825
00:47:07,099 --> 00:47:12,759
going forward because the moment you put

826
00:47:09,559 --> 00:47:16,549
in our Picaro us these demons will

827
00:47:12,759 --> 00:47:18,890
reject ir object updates that are in

828
00:47:16,549 --> 00:47:21,739
conflict with the published arrays

829
00:47:18,890 --> 00:47:23,989
so publishing our ways becomes more

830
00:47:21,739 --> 00:47:25,789
valuable so to speak because it helps

831
00:47:23,989 --> 00:47:29,390
you clean up things but it also helps

832
00:47:25,789 --> 00:47:34,730
you protect going forward the timeline

833
00:47:29,390 --> 00:47:38,660
for these things is roughly spring 2020

834
00:47:34,730 --> 00:47:42,140
I expect the various evolved parties

835
00:47:38,660 --> 00:47:45,618
will provide more updates as these

836
00:47:42,140 --> 00:47:47,509
timelines become more firm but the good

837
00:47:45,619 --> 00:47:48,309
news in all of this is that it's not too

838
00:47:47,509 --> 00:47:55,609
far away

839
00:47:48,309 --> 00:48:00,200
next slide please now onwards to open

840
00:47:55,609 --> 00:48:03,980
BSD open BC is a research project where

841
00:48:00,200 --> 00:48:08,779
we experiment with things and amongst

842
00:48:03,980 --> 00:48:11,749
those things is RPG I mean nowadays you

843
00:48:08,779 --> 00:48:14,269
have to realize open BC is not only very

844
00:48:11,749 --> 00:48:17,058
useful to create beautiful slides like I

845
00:48:14,269 --> 00:48:19,038
have done here but it also is a

846
00:48:17,059 --> 00:48:21,170
functional network operating system

847
00:48:19,039 --> 00:48:24,440
meaning that if you install a software

848
00:48:21,170 --> 00:48:27,800
out of the box you have a BGP

849
00:48:24,440 --> 00:48:30,380
implementation and OSPF implementation

850
00:48:27,800 --> 00:48:33,950
decent MPLS tech including layer 3 VPN

851
00:48:30,380 --> 00:48:36,020
and pseudo wires and whatnot and from

852
00:48:33,950 --> 00:48:38,779
that context it is very interesting to

853
00:48:36,020 --> 00:48:40,280
experiment with the notion of creating a

854
00:48:38,780 --> 00:48:43,369
network operating system that

855
00:48:40,280 --> 00:48:47,630
out-of-the-box can perform our API based

856
00:48:43,369 --> 00:48:51,830
original evasion so we set out to write

857
00:48:47,630 --> 00:48:56,060
a validator called RPG I'm clients but

858
00:48:51,830 --> 00:48:59,509
this was not a trivial efforts Libre

859
00:48:56,060 --> 00:49:02,509
essays ohm the cryptographic core that

860
00:48:59,510 --> 00:49:06,290
is used in open BSD which is a fork of

861
00:49:02,510 --> 00:49:09,920
open SSL did not have capabilities to

862
00:49:06,290 --> 00:49:14,450
handle CMS so that had to be added to

863
00:49:09,920 --> 00:49:16,970
libre SSL and the developers were giving

864
00:49:14,450 --> 00:49:21,819
me a lot of for it because it turns

865
00:49:16,970 --> 00:49:25,490
out CMS is not trivial to implement

866
00:49:21,820 --> 00:49:28,720
furthermore we had to implement our sync

867
00:49:25,490 --> 00:49:32,209
this project is called open our sync and

868
00:49:28,720 --> 00:49:34,790
those three components have created a

869
00:49:32,210 --> 00:49:39,589
scenario in which we can have original

870
00:49:34,790 --> 00:49:43,640
Edition out of the box next slide here's

871
00:49:39,589 --> 00:49:46,070
a small screen capture the beach P demon

872
00:49:43,640 --> 00:49:49,368
is running from Chrome I am calling the

873
00:49:46,070 --> 00:49:52,820
RPG I clients that outputs a list of the

874
00:49:49,369 --> 00:49:56,030
VIPs into a text file format that's

875
00:49:52,820 --> 00:49:58,310
suitable for open Beach PD and this

876
00:49:56,030 --> 00:50:02,060
allows the Beach PD daemon running on

877
00:49:58,310 --> 00:50:06,109
this box to do original edition and show

878
00:50:02,060 --> 00:50:10,339
us fellas were invalid States now my

879
00:50:06,109 --> 00:50:12,589
hope is that by implementing our PGI at

880
00:50:10,339 --> 00:50:15,589
this level in a network operating system

881
00:50:12,589 --> 00:50:18,549
we inspire more commonly used network

882
00:50:15,589 --> 00:50:21,980
operating systems such as cisco juniper

883
00:50:18,550 --> 00:50:25,940
others to consider the deployment model

884
00:50:21,980 --> 00:50:29,330
where routers extruders themselves can

885
00:50:25,940 --> 00:50:32,089
perform the origin validation the RPK

886
00:50:29,330 --> 00:50:35,210
cache validation function in order to do

887
00:50:32,089 --> 00:50:37,400
original edition i think this is one of

888
00:50:35,210 --> 00:50:40,609
many deployment scenarios this is not

889
00:50:37,400 --> 00:50:41,390
necessarily the recommendation that will

890
00:50:40,609 --> 00:50:43,700
work for

891
00:50:41,390 --> 00:50:46,879
everybody but I think there are some use

892
00:50:43,700 --> 00:50:51,049
cases specifically in smaller is piece

893
00:50:46,880 --> 00:50:53,960
where it could be beneficial to take a

894
00:50:51,050 --> 00:50:55,240
page from this approach next slide

895
00:50:53,960 --> 00:50:59,060
please

896
00:50:55,240 --> 00:51:01,459
so everything is well with archives

897
00:50:59,060 --> 00:51:04,070
being deployed people like it software's

898
00:51:01,460 --> 00:51:06,770
out there we are close to doing things

899
00:51:04,070 --> 00:51:10,460
out of the box but it appears there's

900
00:51:06,770 --> 00:51:15,890
just one last outstanding issue and this

901
00:51:10,460 --> 00:51:17,660
is the matter of the Aaron rpki talam it

902
00:51:15,890 --> 00:51:20,629
is a bit of an unfortunate situation

903
00:51:17,660 --> 00:51:23,470
that a organization that is supposed to

904
00:51:20,630 --> 00:51:27,740
operate in the best interests of its

905
00:51:23,470 --> 00:51:31,100
community specifically its members that

906
00:51:27,740 --> 00:51:36,950
they are not publicly distributing their

907
00:51:31,100 --> 00:51:39,380
public crypto keys and I'm not sure what

908
00:51:36,950 --> 00:51:41,980
the immediate solution is other than to

909
00:51:39,380 --> 00:51:44,720
keep lobbying and keep applying pressure

910
00:51:41,980 --> 00:51:46,790
directly and indirectly to this

911
00:51:44,720 --> 00:51:50,000
organization to get them to release

912
00:51:46,790 --> 00:51:53,680
their public keys to the public but this

913
00:51:50,000 --> 00:51:56,300
is a measurable issue on the Internet a

914
00:51:53,680 --> 00:51:59,210
double-digit percentage of networks

915
00:51:56,300 --> 00:52:01,610
performing RPI region foundation is not

916
00:51:59,210 --> 00:52:05,590
using the air Intel because the air

917
00:52:01,610 --> 00:52:10,880
Intel cannot be included in open source

918
00:52:05,590 --> 00:52:12,820
distributions such as open BSD so we

919
00:52:10,880 --> 00:52:16,040
have to keep an eye out for this and

920
00:52:12,820 --> 00:52:18,920
whatever security mechanisms we design

921
00:52:16,040 --> 00:52:22,130
next we should keep in mind that we

922
00:52:18,920 --> 00:52:26,570
should make it hard for people to make

923
00:52:22,130 --> 00:52:27,400
the public keys unavailable next slide

924
00:52:26,570 --> 00:52:32,630
please

925
00:52:27,400 --> 00:52:36,440
so in summary what I wanted to share

926
00:52:32,630 --> 00:52:39,200
with you from this slide deck is that

927
00:52:36,440 --> 00:52:41,600
rpki Israel it's here it's being

928
00:52:39,200 --> 00:52:45,560
deployed and a lot of people are using

929
00:52:41,600 --> 00:52:48,230
it so this means that we are now running

930
00:52:45,560 --> 00:52:50,930
in a maintenance mode where we have to

931
00:52:48,230 --> 00:52:54,680
keep our eyes and ears open towards the

932
00:52:50,930 --> 00:52:55,399
end users and the implementers of RPI

933
00:52:54,680 --> 00:52:59,538
suffer

934
00:52:55,400 --> 00:53:03,769
and that's all for today questions

935
00:52:59,539 --> 00:53:05,839
comments concerns remarks can be either

936
00:53:03,769 --> 00:53:08,499
shared through the microphone or emailed

937
00:53:05,839 --> 00:53:08,499
to me directly

938
00:53:09,849 --> 00:53:19,660
oops

939
00:53:11,200 --> 00:53:20,839
still doji Telecom really go for Luke

940
00:53:19,660 --> 00:53:29,690
okay

941
00:53:20,839 --> 00:53:34,029
still doji telecom I usually have to do

942
00:53:29,690 --> 00:53:37,009
some nitpicking about the language used

943
00:53:34,029 --> 00:53:39,319
precise use of language sometimes is

944
00:53:37,009 --> 00:53:43,759
actually helpful to avoid confusing

945
00:53:39,319 --> 00:53:47,029
people even if the first use of precise

946
00:53:43,759 --> 00:53:52,220
language males may called confuse people

947
00:53:47,029 --> 00:53:55,609
who are used to imprecise use the thing

948
00:53:52,220 --> 00:53:58,868
the thing where I would want to do when

949
00:53:55,609 --> 00:54:03,859
it picking right now with a perspective

950
00:53:58,869 --> 00:54:09,309
attacking your last topic is you are

951
00:54:03,859 --> 00:54:13,519
giving one map about rpki deployment I

952
00:54:09,309 --> 00:54:17,470
would change the headline for that to

953
00:54:13,519 --> 00:54:20,749
rpki or Ridge invalidation deployment

954
00:54:17,470 --> 00:54:24,140
for there are there are many ways to

955
00:54:20,749 --> 00:54:28,700
deploy and use rpki and there is at

956
00:54:24,140 --> 00:54:32,239
least one essential thing were a map

957
00:54:28,700 --> 00:54:37,009
like this would could be given and would

958
00:54:32,239 --> 00:54:39,559
be useful which is what parts of the

959
00:54:37,009 --> 00:54:43,640
address space actually are covered by

960
00:54:39,559 --> 00:54:48,680
certificates and roars may be different

961
00:54:43,640 --> 00:54:54,259
and for attacking your last topic doing

962
00:54:48,680 --> 00:54:56,899
the maps showing are the deployment that

963
00:54:54,259 --> 00:55:01,099
is visible for you through the public

964
00:54:56,900 --> 00:55:04,849
available tools as opposed to those two

965
00:55:01,099 --> 00:55:07,599
- what is - what is available with the

966
00:55:04,849 --> 00:55:13,529
secret ones could

967
00:55:07,599 --> 00:55:13,529
one of the nice things to push stuff

968
00:55:13,650 --> 00:55:18,609
I'll take it up with the team now we can

969
00:55:16,299 --> 00:55:20,829
render some additional essential

970
00:55:18,609 --> 00:55:24,880
associations and the last and the last

971
00:55:20,829 --> 00:55:33,099
word - the last - to your last words you

972
00:55:24,880 --> 00:55:34,660
were saying well okay V vTOLs should be

973
00:55:33,099 --> 00:55:38,890
public

974
00:55:34,660 --> 00:55:48,670
the IETF defined standards are assuming

975
00:55:38,890 --> 00:55:51,069
a signal tell that would be public hi

976
00:55:48,670 --> 00:55:53,259
this is Andre from I see I just wanted

977
00:55:51,069 --> 00:55:56,079
to say thank you for sponsoring the open

978
00:55:53,259 --> 00:55:57,549
source you use in production I think it

979
00:55:56,079 --> 00:56:03,460
says a good good example for the

980
00:55:57,549 --> 00:56:06,430
community in the category of thank yous

981
00:56:03,460 --> 00:56:11,940
it was Internet Society that helps

982
00:56:06,430 --> 00:56:14,618
extend libre SSL with CMS functions

983
00:56:11,940 --> 00:56:16,569
actually there's tens of companies and

984
00:56:14,619 --> 00:56:17,619
individuals evolved in this project to

985
00:56:16,569 --> 00:56:20,170
get it going

986
00:56:17,619 --> 00:56:25,930
the list is long and that's pretty

987
00:56:20,170 --> 00:56:30,339
awesome really push energy Marcus I just

988
00:56:25,930 --> 00:56:39,509
want to say thank you thank you for the

989
00:56:30,339 --> 00:56:39,509
kind words thank you

990
00:56:39,730 --> 00:56:42,829
[Music]

991
00:57:03,380 --> 00:57:09,560
so the score is currently two BGP talks

992
00:57:06,050 --> 00:57:21,950
and two DNS talks so DNS wins because

993
00:57:09,560 --> 00:57:25,880
this is a number DNS talk next slide so

994
00:57:21,950 --> 00:57:29,330
the thing about the DNS I think BGP also

995
00:57:25,880 --> 00:57:33,020
shares this is that these are

996
00:57:29,330 --> 00:57:36,250
distributed systems that spend a huge

997
00:57:33,020 --> 00:57:40,820
amount of time chattering to themselves

998
00:57:36,250 --> 00:57:42,710
so in the case of BGP there's an event

999
00:57:40,820 --> 00:57:45,320
you might announce a prefix there might

1000
00:57:42,710 --> 00:57:47,600
be a link state up down and then this

1001
00:57:45,320 --> 00:57:48,980
sort of ton of updates is ripple

1002
00:57:47,600 --> 00:57:53,120
throughout the rest of the network

1003
00:57:48,980 --> 00:57:55,550
and at times trying to understand why

1004
00:57:53,120 --> 00:57:58,310
your router is kind of having a seizure

1005
00:57:55,550 --> 00:58:00,350
and what was the original event that is

1006
00:57:58,310 --> 00:58:04,100
causing it is sometimes really hard to

1007
00:58:00,350 --> 00:58:05,930
tell now that's BGP and you know a fair

1008
00:58:04,100 --> 00:58:07,759
deal of study has gone into that and we

1009
00:58:05,930 --> 00:58:11,720
still don't understand that at least I

1010
00:58:07,760 --> 00:58:14,000
don't DNS is about the same you might

1011
00:58:11,720 --> 00:58:17,299
think that the DNS is kind of this

1012
00:58:14,000 --> 00:58:20,090
transactional thing where your browser

1013
00:58:17,300 --> 00:58:24,010
your application is given some kind of

1014
00:58:20,090 --> 00:58:26,570
name so it asks a question in the DNS

1015
00:58:24,010 --> 00:58:28,700
the DNS goes to hunt for the right

1016
00:58:26,570 --> 00:58:31,700
authoritative server and out pops an

1017
00:58:28,700 --> 00:58:33,620
answer right so every question that's

1018
00:58:31,700 --> 00:58:35,600
all query that sitting inside the dns

1019
00:58:33,620 --> 00:58:37,630
should be able to be mapped to some

1020
00:58:35,600 --> 00:58:40,509
original event that the users driven

1021
00:58:37,630 --> 00:58:43,550
nothing could be further than the truth

1022
00:58:40,510 --> 00:58:45,950
the DNS is like artificial intelligence

1023
00:58:43,550 --> 00:58:47,540
it just talks to itself and at least 50%

1024
00:58:45,950 --> 00:58:50,060
of all the queries that we see inside

1025
00:58:47,540 --> 00:58:51,560
the DNS are basically we have no

1026
00:58:50,060 --> 00:58:54,440
idea why they're there or what's going

1027
00:58:51,560 --> 00:58:56,060
on and and this is something we were

1028
00:58:54,440 --> 00:58:59,270
looking at when we're looking at an area

1029
00:58:56,060 --> 00:59:00,950
called aggressive insect caching there's

1030
00:58:59,270 --> 00:59:03,740
this kind of theory that

1031
00:59:00,950 --> 00:59:05,330
DNS SEC is really really good but the

1032
00:59:03,740 --> 00:59:08,209
really hard question is what is it good

1033
00:59:05,330 --> 00:59:08,990
for and if you're not allowed to answer

1034
00:59:08,210 --> 00:59:11,420
Dane

1035
00:59:08,990 --> 00:59:14,060
it becomes a really really hard question

1036
00:59:11,420 --> 00:59:19,340
because if you can't use it for keying

1037
00:59:14,060 --> 00:59:21,440
in TLS what's it good for and one of the

1038
00:59:19,340 --> 00:59:22,040
theories was that well if it's not good

1039
00:59:21,440 --> 00:59:25,880
for that

1040
00:59:22,040 --> 00:59:28,910
so I why don't we use it to actually

1041
00:59:25,880 --> 00:59:33,350
change the way negative answers ocation

1042
00:59:28,910 --> 00:59:35,779
in the DNS because the easiest way to

1043
00:59:33,350 --> 00:59:37,580
bring down the DNS or parts thereof in a

1044
00:59:35,780 --> 00:59:39,440
highly targeted fashion and this is no

1045
00:59:37,580 --> 00:59:42,170
secret it's basically random named

1046
00:59:39,440 --> 00:59:45,380
attacks you set up a largely distributed

1047
00:59:42,170 --> 00:59:47,450
system you set up random labels across

1048
00:59:45,380 --> 00:59:50,570
all of your little zombies and you just

1049
00:59:47,450 --> 00:59:52,460
hit the authoritative nameserver Roy

1050
00:59:50,570 --> 00:59:55,040
says I'm not allowed to say how it's

1051
00:59:52,460 --> 00:59:56,930
really easy you just hit it because the

1052
00:59:55,040 --> 00:59:58,759
random names ensure that caching doesn't

1053
00:59:56,930 --> 01:00:00,500
work all of those queries go to the

1054
00:59:58,760 --> 01:00:02,240
authoritative servers and if you thority

1055
01:00:00,500 --> 01:00:05,420
of servers aren't well defended they

1056
01:00:02,240 --> 01:00:07,549
will melt now what you really wanted was

1057
01:00:05,420 --> 01:00:10,280
to get the recursive x' to come along

1058
01:00:07,550 --> 01:00:12,470
and help you so the first time you asked

1059
01:00:10,280 --> 01:00:14,810
even a random subdomain name it would go

1060
01:00:12,470 --> 01:00:18,439
now I'm sorry that doesn't exist the

1061
01:00:14,810 --> 01:00:21,890
only way you can do that in theory was

1062
01:00:18,440 --> 01:00:24,590
with signed domain names and range based

1063
01:00:21,890 --> 01:00:27,440
answers and whether it's in sick or in

1064
01:00:24,590 --> 01:00:29,360
sex 3 makes no difference you can

1065
01:00:27,440 --> 01:00:33,230
actually manage to deflect these attacks

1066
01:00:29,360 --> 01:00:34,610
in theory now that whole story and the

1067
01:00:33,230 --> 01:00:36,140
answer is a different presentation

1068
01:00:34,610 --> 01:00:38,120
that's not it that's not what we're

1069
01:00:36,140 --> 01:00:40,460
talking about today but what we were

1070
01:00:38,120 --> 01:00:44,810
talking about and looking at was a

1071
01:00:40,460 --> 01:00:46,040
really simple thing what happens when

1072
01:00:44,810 --> 01:00:49,460
the answer is No

1073
01:00:46,040 --> 01:00:52,190
so we present to the user a DNS name go

1074
01:00:49,460 --> 01:00:55,490
and resolve this name and it's our zone

1075
01:00:52,190 --> 01:00:57,260
and we look at the number of queries and

1076
01:00:55,490 --> 01:01:01,209
what queries happen when the name does

1077
01:00:57,260 --> 01:01:04,610
not exist and the really odd thing was

1078
01:01:01,210 --> 01:01:07,880
the person only got the name once only

1079
01:01:04,610 --> 01:01:10,880
once it's inside an online ad control

1080
01:01:07,880 --> 01:01:14,090
this the user only exercised that name

1081
01:01:10,880 --> 01:01:14,800
once and only once why are there more

1082
01:01:14,090 --> 01:01:20,260
queries

1083
01:01:14,800 --> 01:01:22,420
next so we control the end user and we

1084
01:01:20,260 --> 01:01:24,610
control the authoritative server there

1085
01:01:22,420 --> 01:01:29,110
are random labels flying around so there

1086
01:01:24,610 --> 01:01:31,120
is no caching the thing is not signed as

1087
01:01:29,110 --> 01:01:32,170
I recall or maybe it is makes no

1088
01:01:31,120 --> 01:01:33,700
difference

1089
01:01:32,170 --> 01:01:36,670
and we're getting a whole bunch of

1090
01:01:33,700 --> 01:01:39,210
queries from the same resolver from

1091
01:01:36,670 --> 01:01:42,010
different resolvers but this is weird

1092
01:01:39,210 --> 01:01:46,720
why are we getting so many queries next

1093
01:01:42,010 --> 01:01:48,670
on average over 60 million names that

1094
01:01:46,720 --> 01:01:52,209
were used in this experiment will get

1095
01:01:48,670 --> 01:01:55,660
142 million queries in other words no

1096
01:01:52,210 --> 01:01:58,930
has to be said at least twice no no and

1097
01:01:55,660 --> 01:02:02,319
a bit more no 0.37 of a no and that's

1098
01:01:58,930 --> 01:02:05,080
the average amount of time to say no now

1099
01:02:02,320 --> 01:02:08,470
it's really great the DNS queries are

1100
01:02:05,080 --> 01:02:11,259
free cuz if they weren't some will be

1101
01:02:08,470 --> 01:02:13,419
making a massive amount of money cuz you

1102
01:02:11,260 --> 01:02:15,640
know this software is crap

1103
01:02:13,420 --> 01:02:19,510
why is it doing this is sort of an

1104
01:02:15,640 --> 01:02:24,549
interesting question next so the naive

1105
01:02:19,510 --> 01:02:26,200
expectation is that no means no browsers

1106
01:02:24,550 --> 01:02:27,910
should understand that asking three

1107
01:02:26,200 --> 01:02:30,939
times for name that doesn't exist is

1108
01:02:27,910 --> 01:02:33,430
kind of two times to many but even out

1109
01:02:30,940 --> 01:02:36,700
there in the bigger DNS that's 1.3 7

1110
01:02:33,430 --> 01:02:39,580
times too many so is this just the fact

1111
01:02:36,700 --> 01:02:43,359
that folk who write DNS resolvers are

1112
01:02:39,580 --> 01:02:46,000
lunatics they could well be I don't know

1113
01:02:43,360 --> 01:02:47,740
their source code is baroque I have no

1114
01:02:46,000 --> 01:02:49,600
idea what's inside it there could be

1115
01:02:47,740 --> 01:02:51,580
strange and wonderful loops doing this

1116
01:02:49,600 --> 01:02:53,860
or it could just be we've created

1117
01:02:51,580 --> 01:02:55,690
artificial intelligence deep in the DNS

1118
01:02:53,860 --> 01:02:58,150
and just haven't realized the stunning

1119
01:02:55,690 --> 01:03:00,580
beauty that we have created that the DNS

1120
01:02:58,150 --> 01:03:04,810
truly is a neural network and it's

1121
01:03:00,580 --> 01:03:06,940
assumed a life of its own next but there

1122
01:03:04,810 --> 01:03:09,310
are some more prosaic reasons that sort

1123
01:03:06,940 --> 01:03:10,840
of begs you down in what's going on and

1124
01:03:09,310 --> 01:03:13,660
part of the I suppose the theory is that

1125
01:03:10,840 --> 01:03:15,310
at various parts in the application sack

1126
01:03:13,660 --> 01:03:17,290
no one gives a about any other part

1127
01:03:15,310 --> 01:03:20,290
of the application stack just do not

1128
01:03:17,290 --> 01:03:22,450
care and happy eyeballs is one of these

1129
01:03:20,290 --> 01:03:24,670
just do not care I'm going to solve my

1130
01:03:22,450 --> 01:03:26,859
problem and tough you get more queries

1131
01:03:24,670 --> 01:03:28,690
well that's what you're built for so

1132
01:03:26,860 --> 01:03:31,300
oddly enough happy eyeballs

1133
01:03:28,690 --> 01:03:34,660
if you're running dual-stack you double

1134
01:03:31,300 --> 01:03:35,950
the number of queries instantly because

1135
01:03:34,660 --> 01:03:38,859
you don't wait for an answer from the

1136
01:03:35,950 --> 01:03:41,020
first before you go to the second you

1137
01:03:38,859 --> 01:03:43,089
send off both an A and a quite a

1138
01:03:41,020 --> 01:03:45,400
straightaway normally within 20

1139
01:03:43,089 --> 01:03:47,680
milliseconds of each other and in our

1140
01:03:45,400 --> 01:03:50,220
case we saw 23 percent of these clients

1141
01:03:47,680 --> 01:03:52,839
do two queries back-to-back

1142
01:03:50,220 --> 01:03:56,669
interestingly and you know this is

1143
01:03:52,839 --> 01:04:00,339
bizarre 3% only asked for the quad-a

1144
01:03:56,670 --> 01:04:02,829
now they're not a v6 only end hosts we

1145
01:04:00,339 --> 01:04:05,319
know this the ad was delivered over v4

1146
01:04:02,829 --> 01:04:07,450
we're having a v4 conversation it has

1147
01:04:05,319 --> 01:04:12,000
dual stack great but it's asking for a

1148
01:04:07,450 --> 01:04:16,149
quad a and not an a my feeling is that

1149
01:04:12,000 --> 01:04:18,310
it's serializing not parallelizing so it

1150
01:04:16,150 --> 01:04:20,410
asks for the quad a doesn't ask for the

1151
01:04:18,310 --> 01:04:22,390
a record it gets back in there next a

1152
01:04:20,410 --> 01:04:28,240
man goes okay the name doesn't exist I

1153
01:04:22,390 --> 01:04:29,710
will go away 3% of the cases 74% only v4

1154
01:04:28,240 --> 01:04:31,569
which is about the same as the amount of

1155
01:04:29,710 --> 01:04:36,700
v4 and v6 out there on the larger

1156
01:04:31,569 --> 01:04:38,259
Internet so roughly expected next so we

1157
01:04:36,700 --> 01:04:39,700
can sort of start dividing things up a

1158
01:04:38,260 --> 01:04:41,650
bit and we sort of say well okay let's

1159
01:04:39,700 --> 01:04:43,750
just group these a in quad a queries

1160
01:04:41,650 --> 01:04:47,109
together and if we group them together

1161
01:04:43,750 --> 01:04:50,079
we saw 74 million seventy-three point

1162
01:04:47,109 --> 01:04:52,240
five million dns resolution events but

1163
01:04:50,079 --> 01:04:54,099
we still saw one hundred and forty two

1164
01:04:52,240 --> 01:04:56,740
thousand four and three two million

1165
01:04:54,099 --> 01:04:58,000
queries so we've got our two point three

1166
01:04:56,740 --> 01:05:02,049
seven down to one point nine three

1167
01:04:58,000 --> 01:05:10,810
queries better but the dns is still

1168
01:05:02,050 --> 01:05:12,520
weird next under half the time it just

1169
01:05:10,810 --> 01:05:14,890
worked with either one query now that

1170
01:05:12,520 --> 01:05:18,579
might have been one A and one quad a but

1171
01:05:14,890 --> 01:05:22,240
it was just one query the other half of

1172
01:05:18,579 --> 01:05:26,470
the time 51 percent that query got

1173
01:05:22,240 --> 01:05:27,700
repeated and the average was two point

1174
01:05:26,470 --> 01:05:32,290
eight four so there's a lot of queries

1175
01:05:27,700 --> 01:05:35,649
going on next and the real question is

1176
01:05:32,290 --> 01:05:38,650
is that an average misleading are there

1177
01:05:35,650 --> 01:05:40,530
one or two resolvers that are doing an

1178
01:05:38,650 --> 01:05:42,700
amplification factor of a million and

1179
01:05:40,530 --> 01:05:45,190
everyone else being saying

1180
01:05:42,700 --> 01:05:48,640
or is there sort of most people are sort

1181
01:05:45,190 --> 01:05:54,310
of randomly kind of weird next so we

1182
01:05:48,640 --> 01:05:56,259
looked at the distribution fourteen

1183
01:05:54,310 --> 01:05:58,570
hundred and thirty queries I'm like what

1184
01:05:56,260 --> 01:06:00,820
part of no is a problem fourteen hundred

1185
01:05:58,570 --> 01:06:03,640
and thirty times whoever wrote that

1186
01:06:00,820 --> 01:06:07,690
software you know good good Anya work

1187
01:06:03,640 --> 01:06:09,970
about down on the other side a large

1188
01:06:07,690 --> 01:06:12,480
amount of folk re queried one so it was

1189
01:06:09,970 --> 01:06:15,370
two queries a smaller amount twice

1190
01:06:12,480 --> 01:06:18,880
thirty two percent of queries though

1191
01:06:15,370 --> 01:06:20,740
were three or more repeats so third of

1192
01:06:18,880 --> 01:06:23,410
the time the DNS is going throb throb

1193
01:06:20,740 --> 01:06:25,330
throb throb throb and the answer is

1194
01:06:23,410 --> 01:06:28,980
always there next domain same name same

1195
01:06:25,330 --> 01:06:34,180
query type just throb throb throb next

1196
01:06:28,980 --> 01:06:35,440
so it's as UDP just completely suck so

1197
01:06:34,180 --> 01:06:39,009
you're going to say yes it does and I

1198
01:06:35,440 --> 01:06:40,840
agree with you UDP sucks now you had a

1199
01:06:39,010 --> 01:06:43,840
problem Jaret and just can't wait can it

1200
01:06:40,840 --> 01:06:46,690
no it can't it just can't wait hi Jared

1201
01:06:43,840 --> 01:06:48,190
watch Akamai so when you see these three

1202
01:06:46,690 --> 01:06:50,320
queries in a row do they have the same

1203
01:06:48,190 --> 01:06:53,050
query idea and come from the same UDP

1204
01:06:50,320 --> 01:06:56,050
port it's the same query idea in the

1205
01:06:53,050 --> 01:06:57,670
same just hang on a second Jared and you

1206
01:06:56,050 --> 01:07:01,290
will start to see what's going on

1207
01:06:57,670 --> 01:07:04,690
because it's more than you think

1208
01:07:01,290 --> 01:07:06,370
that was your yeah no so there's no

1209
01:07:04,690 --> 01:07:09,430
clues going on here

1210
01:07:06,370 --> 01:07:12,370
does UDP sack oh yes UDP sucks but not

1211
01:07:09,430 --> 01:07:14,500
he doesn't suck that bad and the the

1212
01:07:12,370 --> 01:07:17,500
response was not big it was only 603

1213
01:07:14,500 --> 01:07:19,180
bytes and if I can't get a 603 but DNS

1214
01:07:17,500 --> 01:07:20,890
packets ripped through the internet I

1215
01:07:19,180 --> 01:07:22,990
don't know what you're doing here you

1216
01:07:20,890 --> 01:07:24,400
should be fixing your because quite

1217
01:07:22,990 --> 01:07:27,850
frankly if I can't get that through I

1218
01:07:24,400 --> 01:07:30,310
can't get anything through so why are we

1219
01:07:27,850 --> 01:07:33,790
seeing 51 percent of test generating two

1220
01:07:30,310 --> 01:07:36,130
or more next so we started looking at

1221
01:07:33,790 --> 01:07:38,020
the repeat intervals Jared and we

1222
01:07:36,130 --> 01:07:40,240
started looking at the time between

1223
01:07:38,020 --> 01:07:43,210
successive queries from the original

1224
01:07:40,240 --> 01:07:46,899
epoch time and you know there are these

1225
01:07:43,210 --> 01:07:49,210
really strong Peaks you know next so who

1226
01:07:46,900 --> 01:07:53,340
writes a piece of DNS resolving software

1227
01:07:49,210 --> 01:07:55,960
with a 370 millisecond timer Open DNS

1228
01:07:53,340 --> 01:07:57,880
why did they use 370

1229
01:07:55,960 --> 01:08:01,150
milliseconds because that's a really

1230
01:07:57,880 --> 01:08:03,760
aggressive re time rate why

1231
01:08:01,150 --> 01:08:10,570
who writes software with an 800

1232
01:08:03,760 --> 01:08:15,760
millisecond retime err unbound who

1233
01:08:10,570 --> 01:08:17,020
writes one second bind so a lot of what

1234
01:08:15,760 --> 01:08:21,310
we see here there are actually

1235
01:08:17,020 --> 01:08:24,580
signatures of the resolver folk making

1236
01:08:21,310 --> 01:08:26,710
arbitrary assumptions about the UDP

1237
01:08:24,580 --> 01:08:30,068
timeout intervals that have no

1238
01:08:26,710 --> 01:08:32,259
relationship to reality have nothing to

1239
01:08:30,069 --> 01:08:35,770
do with anything else other than this

1240
01:08:32,259 --> 01:08:37,930
number and oddly enough they all use

1241
01:08:35,770 --> 01:08:40,089
different numbers and what they actually

1242
01:08:37,930 --> 01:08:42,609
cause is some degree of pathology of

1243
01:08:40,089 --> 01:08:44,920
repeats because these time intervals

1244
01:08:42,609 --> 01:08:49,540
appear strongly in this wreak weary

1245
01:08:44,920 --> 01:08:51,700
signal what's weird is does UDP suck

1246
01:08:49,540 --> 01:08:54,519
that much that the original answer never

1247
01:08:51,700 --> 01:08:56,589
got there or is the resolver simply on

1248
01:08:54,520 --> 01:08:58,750
this mindless path of God or repeat the

1249
01:08:56,589 --> 01:09:00,339
query don't care if I got an answer or

1250
01:08:58,750 --> 01:09:04,049
not I just have to repeat this query I'm

1251
01:09:00,339 --> 01:09:08,769
a driven resolver no clue next

1252
01:09:04,049 --> 01:09:12,910
so timers is one issue the next is DNS

1253
01:09:08,770 --> 01:09:18,100
SEC it is a DNS SEC sign name so it has

1254
01:09:12,910 --> 01:09:20,439
an insect record AHA is validating the N

1255
01:09:18,100 --> 01:09:23,080
SEC a factor and don't forget these are

1256
01:09:20,439 --> 01:09:26,439
unique names and they're so structured

1257
01:09:23,080 --> 01:09:29,649
that they're even in unique domains so

1258
01:09:26,439 --> 01:09:34,750
the validation is has to be done every

1259
01:09:29,649 --> 01:09:36,670
single time so is DNS ik causing this so

1260
01:09:34,750 --> 01:09:41,219
ok let's add another test

1261
01:09:36,670 --> 01:09:43,690
let's go unsigned next Wow

1262
01:09:41,219 --> 01:09:45,100
you have to get right or get right up

1263
01:09:43,689 --> 01:09:47,439
here to slot the difference between the

1264
01:09:45,100 --> 01:09:54,250
blue and the the red lines now at the

1265
01:09:47,439 --> 01:09:56,530
point of won't help annex signed n X

1266
01:09:54,250 --> 01:10:00,250
domains generate a lot more requir e's

1267
01:09:56,530 --> 01:10:02,500
going up over 5 6 7 8 9 10 and so on and

1268
01:10:00,250 --> 01:10:05,080
the reason why is basically because of

1269
01:10:02,500 --> 01:10:07,330
the time required to validate every

1270
01:10:05,080 --> 01:10:08,739
single time the original recursive is

1271
01:10:07,330 --> 01:10:09,850
going look I'm really bored about this

1272
01:10:08,739 --> 01:10:12,519
I'm going to ask you again

1273
01:10:09,850 --> 01:10:14,170
cuz 370 milliseconds says I've really

1274
01:10:12,520 --> 01:10:17,620
got to ask you again and again and again

1275
01:10:14,170 --> 01:10:20,110
and again and again so signing generates

1276
01:10:17,620 --> 01:10:23,170
more load when the name doesn't exist

1277
01:10:20,110 --> 01:10:25,540
because of validation next and we can

1278
01:10:23,170 --> 01:10:28,000
actually quantify this a little bit when

1279
01:10:25,540 --> 01:10:29,950
it's signed the require ear aid is three

1280
01:10:28,000 --> 01:10:32,200
point one nine on average we're unsigned

1281
01:10:29,950 --> 01:10:35,110
it's two point five one so around twelve

1282
01:10:32,200 --> 01:10:39,730
percent of the time it's DNS SEC that's

1283
01:10:35,110 --> 01:10:42,580
causing the requir e's next so okay DNS

1284
01:10:39,730 --> 01:10:48,669
SEC happy eyeballs twenty three percent

1285
01:10:42,580 --> 01:10:51,550
DNS SEC twelve percent next how many

1286
01:10:48,670 --> 01:10:54,490
folk think DNS resolvers are just

1287
01:10:51,550 --> 01:10:57,490
standalone boxes well no one anymore

1288
01:10:54,490 --> 01:11:00,610
because if I ain't there these weird

1289
01:10:57,490 --> 01:11:02,830
things called load balances and they sit

1290
01:11:00,610 --> 01:11:04,929
inside a whole bunch of you know single

1291
01:11:02,830 --> 01:11:06,760
resolver engines except when the load

1292
01:11:04,930 --> 01:11:09,130
balancers actually become load

1293
01:11:06,760 --> 01:11:11,740
amplifiers as is a case from this

1294
01:11:09,130 --> 01:11:13,660
Taiwanese network where the front-end

1295
01:11:11,740 --> 01:11:16,090
load balancer decided to send the same

1296
01:11:13,660 --> 01:11:18,250
query to every single member of two

1297
01:11:16,090 --> 01:11:21,190
distinct subnets and you look at those

1298
01:11:18,250 --> 01:11:23,260
query times every sort of twenty have

1299
01:11:21,190 --> 01:11:25,269
David sorry every hundred milliseconds I

1300
01:11:23,260 --> 01:11:29,130
get another query from the same subnet

1301
01:11:25,270 --> 01:11:32,620
but a different engine common as hell

1302
01:11:29,130 --> 01:11:35,020
whoever runs this stuff has no idea what

1303
01:11:32,620 --> 01:11:37,960
they're doing and and that a huge number

1304
01:11:35,020 --> 01:11:40,770
of these distributed DNS resolver farms

1305
01:11:37,960 --> 01:11:44,470
actually become DNS resolver amplifiers

1306
01:11:40,770 --> 01:11:49,150
just because you can thank you very much

1307
01:11:44,470 --> 01:11:51,940
next how common 70% of the requir e's

1308
01:11:49,150 --> 01:11:54,070
come from these shared subnet prefixes

1309
01:11:51,940 --> 01:11:56,440
so it's not the same IP address it's a

1310
01:11:54,070 --> 01:11:58,330
different IP address it's a different

1311
01:11:56,440 --> 01:11:59,950
query but the original query is being

1312
01:11:58,330 --> 01:12:04,000
forked out again and again and again

1313
01:11:59,950 --> 01:12:07,179
across the entire subnet whoever runs

1314
01:12:04,000 --> 01:12:09,430
resolver farms whoever runs yours fire

1315
01:12:07,180 --> 01:12:12,760
them cuz they're obviously at their

1316
01:12:09,430 --> 01:12:14,440
job cuz this is really really common 70%

1317
01:12:12,760 --> 01:12:20,020
of the requir e's come in from these

1318
01:12:14,440 --> 01:12:22,049
kind of odd resolver farms next so it's

1319
01:12:20,020 --> 01:12:23,500
kind of wondering is this a no problem

1320
01:12:22,050 --> 01:12:25,450
i'm like when i

1321
01:12:23,500 --> 01:12:27,310
say no do you not believe me whereas if

1322
01:12:25,450 --> 01:12:30,280
I give you an answer go oh yes good fine

1323
01:12:27,310 --> 01:12:34,590
there's no worse than yes so next is the

1324
01:12:30,280 --> 01:12:34,590
require rate lower Wow

1325
01:12:35,640 --> 01:12:41,470
if I give you an answer you're more

1326
01:12:38,470 --> 01:12:43,360
likely to believe it but if you re query

1327
01:12:41,470 --> 01:12:46,450
if you get a real answer

1328
01:12:43,360 --> 01:12:48,549
you'll hammer the out of me so that

1329
01:12:46,450 --> 01:12:52,150
39 percent of the requir is in in X

1330
01:12:48,550 --> 01:12:55,390
domain signed become requir YZ three

1331
01:12:52,150 --> 01:12:59,410
point one nine queries per per name when

1332
01:12:55,390 --> 01:13:02,260
it's an real answer I and quad-a only 13

1333
01:12:59,410 --> 01:13:04,510
percent wreak wery much much better guys

1334
01:13:02,260 --> 01:13:07,420
but your average is five point eight one

1335
01:13:04,510 --> 01:13:09,730
re queries what the I'm like you don't

1336
01:13:07,420 --> 01:13:11,590
even like a good answer it's this sort

1337
01:13:09,730 --> 01:13:13,120
of subset of lunatics that kind of go

1338
01:13:11,590 --> 01:13:14,890
look I don't care whether it's a no or a

1339
01:13:13,120 --> 01:13:18,610
yes I'm just gonna ask and ask and ask

1340
01:13:14,890 --> 01:13:20,440
and ask because you know I can so yeah

1341
01:13:18,610 --> 01:13:22,389
whether it's a real answer or not a real

1342
01:13:20,440 --> 01:13:25,780
answer there is this phenomenal wreak

1343
01:13:22,390 --> 01:13:27,010
weary rate down there next so that's the

1344
01:13:25,780 --> 01:13:29,710
same graph you need to be right up there

1345
01:13:27,010 --> 01:13:32,830
to see it but what you see is a DNS SEC

1346
01:13:29,710 --> 01:13:36,100
sign name generates a lot more responses

1347
01:13:32,830 --> 01:13:38,620
than a real name but the real names when

1348
01:13:36,100 --> 01:13:41,970
they require e re query very very hard

1349
01:13:38,620 --> 01:13:44,380
next so we can kind of put it out there

1350
01:13:41,970 --> 01:13:45,690
inside of a single graph this is the one

1351
01:13:44,380 --> 01:13:50,530
that I showed you before

1352
01:13:45,690 --> 01:13:53,280
42% do it once next happy eyeballs

1353
01:13:50,530 --> 01:13:57,309
I'd say about 10% additional load next I

1354
01:13:53,280 --> 01:14:01,090
put DNS SEC at near 70% of the total

1355
01:13:57,310 --> 01:14:05,950
load next NX domain itself signed an X

1356
01:14:01,090 --> 01:14:08,500
domain no vs. yes about 14% next insane

1357
01:14:05,950 --> 01:14:12,160
stupidity down on the farm about 13% of

1358
01:14:08,500 --> 01:14:14,260
queries and the next wow you guys are

1359
01:14:12,160 --> 01:14:15,760
just inventive I have no idea why else

1360
01:14:14,260 --> 01:14:19,230
you're doing this but you know good on

1361
01:14:15,760 --> 01:14:22,440
you so yes this is the DNS for you next

1362
01:14:19,230 --> 01:14:27,190
nothing more thank you

1363
01:14:22,440 --> 01:14:31,250
[Applause]

1364
01:14:27,190 --> 01:14:33,980
yeah heíd shared much again so if you

1365
01:14:31,250 --> 01:14:38,059
know if you can hit the backspace key or

1366
01:14:33,980 --> 01:14:43,000
something Chris so here I don't see this

1367
01:14:38,059 --> 01:14:43,000
showing whether or not this looks to be

1368
01:14:43,960 --> 01:14:49,280
dysfunctional Network behavior of packet

1369
01:14:47,030 --> 01:14:51,380
replication in the networks because I've

1370
01:14:49,280 --> 01:14:53,809
definitely seen that before especially

1371
01:14:51,380 --> 01:14:58,369
with UDP which is why I asked the prior

1372
01:14:53,809 --> 01:15:03,469
question about query ID and the port

1373
01:14:58,369 --> 01:15:05,750
numbers and so I'm curious it is that

1374
01:15:03,469 --> 01:15:07,670
the reasons or is that sorry

1375
01:15:05,750 --> 01:15:11,420
it could will be I couldn't think of any

1376
01:15:07,670 --> 01:15:13,219
other deliberate pathologies that you

1377
01:15:11,420 --> 01:15:14,900
know I was smart enough to understand

1378
01:15:13,219 --> 01:15:18,289
but you've just uncovered one and and

1379
01:15:14,900 --> 01:15:21,860
thank you you know replicated query

1380
01:15:18,289 --> 01:15:24,739
packets something subtle though if the

1381
01:15:21,860 --> 01:15:26,539
replication is happening between the

1382
01:15:24,739 --> 01:15:30,259
recursive and the authoritative I will

1383
01:15:26,539 --> 01:15:33,590
see it if the replication is happening

1384
01:15:30,260 --> 01:15:35,599
earlier it's actually not obvious what

1385
01:15:33,590 --> 01:15:37,520
the recursive is going to do when it

1386
01:15:35,599 --> 01:15:40,280
starts to get back-to-back queries and

1387
01:15:37,520 --> 01:15:43,579
there's already a query in process good

1388
01:15:40,280 --> 01:15:45,590
engineering says duplicate queries get

1389
01:15:43,579 --> 01:15:49,639
held in occassion till the answer comes

1390
01:15:45,590 --> 01:15:50,059
back reality says you know all bets are

1391
01:15:49,639 --> 01:15:52,219
off

1392
01:15:50,059 --> 01:15:54,320
sure I mean in the case of a resolver

1393
01:15:52,219 --> 01:15:56,869
farm I could easily see a subsequent

1394
01:15:54,320 --> 01:16:00,230
query being load balance differently

1395
01:15:56,869 --> 01:16:02,780
yeah but what I have specifically seen

1396
01:16:00,230 --> 01:16:04,968
as I have seen Network pathologies

1397
01:16:02,780 --> 01:16:07,000
because people are either configured

1398
01:16:04,969 --> 01:16:10,730
ports panning or mirroring or have

1399
01:16:07,000 --> 01:16:12,980
active or passive taps in the middle for

1400
01:16:10,730 --> 01:16:15,650
their own monitoring of the network that

1401
01:16:12,980 --> 01:16:19,129
sometimes end up replicating packets and

1402
01:16:15,650 --> 01:16:21,920
it is especially harmful for UDP based

1403
01:16:19,130 --> 01:16:25,880
protocols like this which is why I would

1404
01:16:21,920 --> 01:16:29,980
urge you to look at that further in part

1405
01:16:25,880 --> 01:16:34,010
of them that's a good point thank you

1406
01:16:29,980 --> 01:16:35,718
Jeff as you certainly have plenty of

1407
01:16:34,010 --> 01:16:37,159
interesting bugs here and people

1408
01:16:35,719 --> 01:16:38,929
probably fix a number of these things

1409
01:16:37,159 --> 01:16:40,579
just by people in the room

1410
01:16:38,929 --> 01:16:44,059
created these bugs I just watched them

1411
01:16:40,579 --> 01:16:47,840
do it I'm sure the one thing I'm here to

1412
01:16:44,059 --> 01:16:50,769
respond to is is UDP that bad so I live

1413
01:16:47,840 --> 01:16:55,280
in BFD for obvious reasons

1414
01:16:50,769 --> 01:16:58,130
UDP isn't always that bad itself but the

1415
01:16:55,280 --> 01:17:00,320
ecosystem that consumes it can be no so

1416
01:16:58,130 --> 01:17:01,760
you can do your darkness to pass the

1417
01:17:00,320 --> 01:17:03,679
packet all the way across the network

1418
01:17:01,760 --> 01:17:05,389
and I'll get to some part of your

1419
01:17:03,679 --> 01:17:08,599
ecosystem whether it's a firewall of

1420
01:17:05,389 --> 01:17:11,630
load balance or host paths for VM pick

1421
01:17:08,599 --> 01:17:13,519
your poison of choice and there's weird

1422
01:17:11,630 --> 01:17:15,979
assumptions in the stack that it's okay

1423
01:17:13,519 --> 01:17:18,110
to drop these things because no you know

1424
01:17:15,979 --> 01:17:20,780
it's meant to be unreliable and things

1425
01:17:18,110 --> 01:17:24,259
look it through and what that tends to

1426
01:17:20,780 --> 01:17:27,018
have informed us as a protocol is that

1427
01:17:24,260 --> 01:17:29,059
being adaptive about your load rate is

1428
01:17:27,019 --> 01:17:30,260
actually very important and the graph

1429
01:17:29,059 --> 01:17:31,670
here is showing about the various

1430
01:17:30,260 --> 01:17:33,709
implementations that we're timing

1431
01:17:31,670 --> 01:17:36,099
assumptions you know constants are

1432
01:17:33,709 --> 01:17:38,929
almost always wrong in some sense an

1433
01:17:36,099 --> 01:17:41,059
interesting line of inquiry might at

1434
01:17:38,929 --> 01:17:43,699
some point be is there a way to allow

1435
01:17:41,059 --> 01:17:46,340
dns to sort of actively signal back into

1436
01:17:43,699 --> 01:17:48,018
the system so here's how the cadence

1437
01:17:46,340 --> 01:17:50,360
should look like that would get you a

1438
01:17:48,019 --> 01:17:52,909
better response rate you know you know

1439
01:17:50,360 --> 01:17:55,249
that's a great question and and had you

1440
01:17:52,909 --> 01:17:58,188
said that about 10 years ago and the

1441
01:17:55,249 --> 01:18:00,530
obvious answer is DNS over TCP why TCP

1442
01:17:58,189 --> 01:18:02,420
because instead of a preset timer that

1443
01:18:00,530 --> 01:18:03,709
tells you there's a problem there's an

1444
01:18:02,420 --> 01:18:05,539
acknowledgment time you actually

1445
01:18:03,709 --> 01:18:07,400
understand round-trip times and you know

1446
01:18:05,539 --> 01:18:10,188
when you're missing a packet you wait

1447
01:18:07,400 --> 01:18:13,638
for twice the time etc etc TCP does a

1448
01:18:10,189 --> 01:18:16,400
much better job of getting over packet

1449
01:18:13,639 --> 01:18:18,439
pathologies because that's its job now

1450
01:18:16,400 --> 01:18:19,579
it withstand a loss rate of up to about

1451
01:18:18,439 --> 01:18:21,499
three or four percent

1452
01:18:19,579 --> 01:18:24,049
that's why mobile networks work as

1453
01:18:21,499 --> 01:18:26,209
distinct from don't so this is a good

1454
01:18:24,050 --> 01:18:28,159
idea but ten years ago when you said DNS

1455
01:18:26,209 --> 01:18:29,900
over TCP you'd be covered in arrows

1456
01:18:28,159 --> 01:18:31,369
because obviously you're a heretic

1457
01:18:29,900 --> 01:18:33,589
you're a pagan and you should be burned

1458
01:18:31,369 --> 01:18:36,768
at some local stake these days it's

1459
01:18:33,590 --> 01:18:38,599
fashionable to say DNS over TLS and

1460
01:18:36,769 --> 01:18:40,639
everything will be cured and life will

1461
01:18:38,599 --> 01:18:42,170
be wonderful and if you're doing ultra

1462
01:18:40,639 --> 01:18:44,209
trendy I'm going to mention the magic

1463
01:18:42,170 --> 01:18:45,070
word the magic word is Doh and it just

1464
01:18:44,209 --> 01:18:49,789
makes everything better

1465
01:18:45,070 --> 01:18:52,730
so my heresies aside my other big head

1466
01:18:49,789 --> 01:18:54,200
there whereas you know PGP obviously and

1467
01:18:52,730 --> 01:18:57,889
spend an awful lot of time dealing with

1468
01:18:54,200 --> 01:18:59,389
TCP pathologies I think that TCP is the

1469
01:18:57,890 --> 01:19:00,620
primary transport freudian as we just

1470
01:18:59,390 --> 01:19:02,660
simply compound a lot of very

1471
01:19:00,620 --> 01:19:04,400
interesting problems

1472
01:19:02,660 --> 01:19:07,820
I don't really consider it part of the

1473
01:19:04,400 --> 01:19:12,519
solution space could you ever believe of

1474
01:19:07,820 --> 01:19:12,519
a future where BGP worked over UDP I

1475
01:19:13,540 --> 01:19:18,460
have some very entertaining slides about

1476
01:19:16,040 --> 01:19:22,130
the history of BGP that has some

1477
01:19:18,460 --> 01:19:24,830
pathologies about EGP that our elders

1478
01:19:22,130 --> 01:19:26,300
would share about why fragmentation

1479
01:19:24,830 --> 01:19:35,570
based protocols are not good for routing

1480
01:19:26,300 --> 01:19:37,880
yeah general to clarifying questions so

1481
01:19:35,570 --> 01:19:41,870
when you say yes when you actually

1482
01:19:37,880 --> 01:19:45,470
return some answer does client get the

1483
01:19:41,870 --> 01:19:47,300
page oh I'm not looking at that sorry I

1484
01:19:45,470 --> 01:19:49,010
just never went that far I really am

1485
01:19:47,300 --> 01:19:50,630
just looking at the DNS query logs at

1486
01:19:49,010 --> 01:19:52,280
the authoritative server and I'm just

1487
01:19:50,630 --> 01:19:54,230
looking for repeats because it's

1488
01:19:52,280 --> 01:19:56,509
actually interesting is actually client

1489
01:19:54,230 --> 01:19:58,519
not getting the answers at all it keep

1490
01:19:56,510 --> 01:20:01,010
repeating right so you know the

1491
01:19:58,520 --> 01:20:02,600
wonderfulness of the dns is there are so

1492
01:20:01,010 --> 01:20:04,760
many points where the queries could get

1493
01:20:02,600 --> 01:20:06,860
replicated and you know it's in the load

1494
01:20:04,760 --> 01:20:09,260
distributors it's in the recursive

1495
01:20:06,860 --> 01:20:11,660
engines it's in the forwarding system

1496
01:20:09,260 --> 01:20:13,820
you know let alone in the stubs let

1497
01:20:11,660 --> 01:20:17,269
alone in the application and in some

1498
01:20:13,820 --> 01:20:19,400
cases the bizarre thing is your

1499
01:20:17,270 --> 01:20:21,800
application might get an answer and go

1500
01:20:19,400 --> 01:20:24,620
and get the webpage but somewhere deep

1501
01:20:21,800 --> 01:20:28,730
in DNS land some engine's going frog

1502
01:20:24,620 --> 01:20:31,460
frog frog frog frog because you can we

1503
01:20:28,730 --> 01:20:33,889
time everything and every DNS query has

1504
01:20:31,460 --> 01:20:35,960
a timer forty five percent of all the

1505
01:20:33,890 --> 01:20:39,080
queries we see on our servers are more

1506
01:20:35,960 --> 01:20:42,080
than two hours old a visible percentage

1507
01:20:39,080 --> 01:20:43,640
of more than three years old I'm like I

1508
01:20:42,080 --> 01:20:45,050
don't think it uses sitting there with

1509
01:20:43,640 --> 01:20:46,430
the browser going you know I pressed

1510
01:20:45,050 --> 01:20:49,070
this three years ago I'm really am

1511
01:20:46,430 --> 01:20:50,750
waiting for that page so the DNS does

1512
01:20:49,070 --> 01:20:53,719
take it on a life of its own and the web

1513
01:20:50,750 --> 01:20:55,580
is is is not really relevant completion

1514
01:20:53,720 --> 01:20:59,000
at the user level doesn't stop the

1515
01:20:55,580 --> 01:21:02,120
pathology okay and the second question

1516
01:20:59,000 --> 01:21:04,940
so this three percent when they only ask

1517
01:21:02,120 --> 01:21:06,530
for quad-a you said you're sure they are

1518
01:21:04,940 --> 01:21:09,440
not v6 only so you mean

1519
01:21:06,530 --> 01:21:17,690
you initiated communication over before

1520
01:21:09,440 --> 01:21:20,389
without reason deenis yes I that's tail

1521
01:21:17,690 --> 01:21:22,639
I came up with one request but you've

1522
01:21:20,390 --> 01:21:24,230
just added a second one in that I think

1523
01:21:22,640 --> 01:21:28,130
it's probably best for all of us if we

1524
01:21:24,230 --> 01:21:30,830
not refer to the throbbing DNS but apart

1525
01:21:28,130 --> 01:21:32,630
from that I'm curious if if you happen

1526
01:21:30,830 --> 01:21:34,400
to repeat this experiment in the future

1527
01:21:32,630 --> 01:21:38,060
if you could also include the yes/no

1528
01:21:34,400 --> 01:21:40,759
answer that is a no data response both

1529
01:21:38,060 --> 01:21:43,580
signed and unsigned to see how we've

1530
01:21:40,760 --> 01:21:46,660
been wondering about refused surveil in

1531
01:21:43,580 --> 01:21:49,670
X domain no answer because this

1532
01:21:46,660 --> 01:21:51,500
phenomenal amount of ghost queries in

1533
01:21:49,670 --> 01:21:54,080
the DNS that just don't seem to have an

1534
01:21:51,500 --> 01:21:54,440
obvious reason and it's always been an

1535
01:21:54,080 --> 01:21:58,220
issue

1536
01:21:54,440 --> 01:22:01,639
what responses encourage reek weary and

1537
01:21:58,220 --> 01:22:03,200
what responses kill it flat and we're

1538
01:22:01,640 --> 01:22:06,350
working on a theory at one point that

1539
01:22:03,200 --> 01:22:09,200
said NX domain is cache no and the

1540
01:22:06,350 --> 01:22:10,190
answer is well no it's not it sort of

1541
01:22:09,200 --> 01:22:12,740
hit me again

1542
01:22:10,190 --> 01:22:14,809
so yeah I don't know where the no data

1543
01:22:12,740 --> 01:22:17,059
refused to fail or any other response

1544
01:22:14,810 --> 01:22:19,280
code would have different response

1545
01:22:17,060 --> 01:22:21,080
behaviors right it's worth a try that's

1546
01:22:19,280 --> 01:22:25,910
mostly what drives my curiosity

1547
01:22:21,080 --> 01:22:28,340
yeah hi Jeff Mark Smith another thought

1548
01:22:25,910 --> 01:22:29,780
I had was that these persistent queries

1549
01:22:28,340 --> 01:22:31,760
even when you give them a good answer a

1550
01:22:29,780 --> 01:22:33,530
load balancers doing liveness checking

1551
01:22:31,760 --> 01:22:34,970
so they might present a single IP

1552
01:22:33,530 --> 01:22:37,519
address to their client but then they

1553
01:22:34,970 --> 01:22:40,490
have a pool of upstream servers and they

1554
01:22:37,520 --> 01:22:44,180
likes reaching quickly and so on I hide

1555
01:22:40,490 --> 01:22:47,719
them for various reasons and I think

1556
01:22:44,180 --> 01:22:49,880
it's probably a mutual hatred the folk

1557
01:22:47,720 --> 01:22:52,010
who build load balancers and the IETF

1558
01:22:49,880 --> 01:22:53,900
have never met eye-to-eye there is no

1559
01:22:52,010 --> 01:22:55,970
standard there is no spec there is no

1560
01:22:53,900 --> 01:22:57,440
behavior this is a bit like the first

1561
01:22:55,970 --> 01:22:59,510
weird and wonderful world of Nats

1562
01:22:57,440 --> 01:23:01,309
everyone builds DNS load balancers

1563
01:22:59,510 --> 01:23:03,350
differently they screw with I some hash

1564
01:23:01,310 --> 01:23:06,770
some hash various parts some do you know

1565
01:23:03,350 --> 01:23:10,070
and so on and so because a lot of the

1566
01:23:06,770 --> 01:23:13,990
recursive resolver families appear to

1567
01:23:10,070 --> 01:23:17,170
sit behind these wacky load balancers

1568
01:23:13,990 --> 01:23:19,900
the end result is a set of queries that

1569
01:23:17,170 --> 01:23:22,450
dooby-doo behave oddly

1570
01:23:19,900 --> 01:23:24,150
I mean Jared's question would possibly

1571
01:23:22,450 --> 01:23:26,410
also explain this as well just yeah

1572
01:23:24,150 --> 01:23:32,589
thanks for telling me you there I'll ask

1573
01:23:26,410 --> 01:23:35,410
in in a few seconds Thanks hi Nalini

1574
01:23:32,590 --> 01:23:38,680
Elkins I wanted to go back to the do H

1575
01:23:35,410 --> 01:23:42,840
and D ot question a bit if we wanted to

1576
01:23:38,680 --> 01:23:46,810
see this kind of behavior using DNS over

1577
01:23:42,840 --> 01:23:50,020
HTTP or DFT or whatever where where

1578
01:23:46,810 --> 01:23:54,880
would be the points at which you would

1579
01:23:50,020 --> 01:23:58,570
try to measure this because it's

1580
01:23:54,880 --> 01:24:01,060
encrypted on the wire right you're going

1581
01:23:58,570 --> 01:24:03,580
down a completely different path and and

1582
01:24:01,060 --> 01:24:06,190
a path that in the dns is a path that

1583
01:24:03,580 --> 01:24:09,540
doesn't have very many answers the dns

1584
01:24:06,190 --> 01:24:12,790
is incredibly opaque our attempts

1585
01:24:09,540 --> 01:24:15,100
misguided as they came of putting

1586
01:24:12,790 --> 01:24:19,150
fingerprints in queries otherwise known

1587
01:24:15,100 --> 01:24:23,410
as client subnet have been loudly met

1588
01:24:19,150 --> 01:24:26,679
with accurate accusations of acute

1589
01:24:23,410 --> 01:24:29,440
invasions of privacy and so the dns is

1590
01:24:26,680 --> 01:24:31,060
resistant to any kind of realistic

1591
01:24:29,440 --> 01:24:33,820
measurement of the things you're talking

1592
01:24:31,060 --> 01:24:35,560
about we can't see that clearly you can

1593
01:24:33,820 --> 01:24:40,620
see either end but the middle is sort of

1594
01:24:35,560 --> 01:24:40,620
a mystery yeah interesting thank you

1595
01:24:41,100 --> 01:24:48,280
Robbo Stein couple couple of comments

1596
01:24:45,060 --> 01:24:50,860
one the time out issue with the

1597
01:24:48,280 --> 01:24:51,880
ridiculously short retry intervals yeah

1598
01:24:50,860 --> 01:24:56,080
back in that you should probably

1599
01:24:51,880 --> 01:24:59,170
expression the 80s we actually used

1600
01:24:56,080 --> 01:25:00,460
retry intervals like you know two three

1601
01:24:59,170 --> 01:25:03,820
seconds and stuff like that

1602
01:25:00,460 --> 01:25:06,340
and as near as I can tell what changed

1603
01:25:03,820 --> 01:25:07,599
it was essentially market pressure you

1604
01:25:06,340 --> 01:25:09,280
know it's basically an old version of

1605
01:25:07,600 --> 01:25:10,950
the happy eyeballs problem people whine

1606
01:25:09,280 --> 01:25:13,210
when they don't get an instant response

1607
01:25:10,950 --> 01:25:14,440
and the idea that your query global

1608
01:25:13,210 --> 01:25:15,790
database it might take a little while

1609
01:25:14,440 --> 01:25:18,490
well screw that I want an answer now

1610
01:25:15,790 --> 01:25:20,170
damn it and you know the vendors just

1611
01:25:18,490 --> 01:25:22,090
kept cranking the numbers down until it

1612
01:25:20,170 --> 01:25:23,140
got to the current insane levels but I

1613
01:25:22,090 --> 01:25:25,510
mean it was already insane by the

1614
01:25:23,140 --> 01:25:26,470
mid-90s what Microsoft is doing then and

1615
01:25:25,510 --> 01:25:28,690
hasn't improved

1616
01:25:26,470 --> 01:25:31,390
now you quite right and the problem was

1617
01:25:28,690 --> 01:25:32,889
with UDP there's no feedback right you

1618
01:25:31,390 --> 01:25:33,880
don't understand what you're driving in

1619
01:25:32,890 --> 01:25:37,210
so it becomes

1620
01:25:33,880 --> 01:25:40,360
a number given to you from on high use

1621
01:25:37,210 --> 01:25:42,730
this number for no time outs yeah the

1622
01:25:40,360 --> 01:25:44,440
other thing is you know I've not

1623
01:25:42,730 --> 01:25:46,030
actually been to the DNS business for

1624
01:25:44,440 --> 01:25:49,030
about a decade in fact the last time I

1625
01:25:46,030 --> 01:25:52,179
was our working theory about a lot of

1626
01:25:49,030 --> 01:25:54,730
the insane query that just like nothing

1627
01:25:52,180 --> 01:25:56,050
you can do will stop it was people

1628
01:25:54,730 --> 01:25:58,209
behind stupid-looking figured firewalls

1629
01:25:56,050 --> 01:25:59,500
idiot with firewall so they send lots of

1630
01:25:58,210 --> 01:26:02,350
queries and never get a response so they

1631
01:25:59,500 --> 01:26:04,330
send more queries and they never turn

1632
01:26:02,350 --> 01:26:07,090
anything off they're like well it isn't

1633
01:26:04,330 --> 01:26:08,590
working so I'll add another thing and

1634
01:26:07,090 --> 01:26:10,000
I'll do this and I'll do that oh look

1635
01:26:08,590 --> 01:26:12,280
I'm father yeah response it's good don't

1636
01:26:10,000 --> 01:26:14,350
touch it and it just stays like that

1637
01:26:12,280 --> 01:26:15,639
forever I don't know how much of that

1638
01:26:14,350 --> 01:26:17,890
you're seeing I have no idea how you'd

1639
01:26:15,640 --> 01:26:21,190
even detect that but that was our theory

1640
01:26:17,890 --> 01:26:24,400
at the time it certainly seems in Chrome

1641
01:26:21,190 --> 01:26:26,650
in its tests of liveness which it sends

1642
01:26:24,400 --> 01:26:28,690
off random names towards the root there

1643
01:26:26,650 --> 01:26:31,809
is this attitude in other parts that the

1644
01:26:28,690 --> 01:26:34,419
DNS is infinite is fantastically

1645
01:26:31,810 --> 01:26:36,400
engineered and and works exactly as

1646
01:26:34,420 --> 01:26:37,720
planned all the time and people could

1647
01:26:36,400 --> 01:26:39,190
just throw queries in it whatever

1648
01:26:37,720 --> 01:26:42,370
magnitude they want and they'll always

1649
01:26:39,190 --> 01:26:44,290
be an answer I wish it was so you know

1650
01:26:42,370 --> 01:26:46,330
but the fact that it isn't creates this

1651
01:26:44,290 --> 01:26:48,640
astonishing sort of amount of tension

1652
01:26:46,330 --> 01:26:51,640
between what application folk believe

1653
01:26:48,640 --> 01:26:54,070
the DNS is doing and what operators see

1654
01:26:51,640 --> 01:26:55,300
it's doing and where DNS code then to

1655
01:26:54,070 --> 01:26:57,400
sit in the middle going what the hell

1656
01:26:55,300 --> 01:26:59,620
should I write next time how to defend

1657
01:26:57,400 --> 01:27:02,129
ourselves and folk around our code it's

1658
01:26:59,620 --> 01:27:02,130
a tough one

1659
01:27:02,460 --> 01:27:08,230
Aaron Falk alchemy thank you for you

1660
01:27:05,290 --> 01:27:09,190
talk Jeff the two quick points and a

1661
01:27:08,230 --> 01:27:12,309
question

1662
01:27:09,190 --> 01:27:14,019
thank you for sustaining my belief that

1663
01:27:12,310 --> 01:27:15,640
there's a lot of weirdness in the

1664
01:27:14,020 --> 01:27:20,620
internet I'm glad to see that hasn't

1665
01:27:15,640 --> 01:27:23,710
changed and I think that you gave your

1666
01:27:20,620 --> 01:27:25,360
the the reason in I think your first

1667
01:27:23,710 --> 01:27:27,850
couple of sentences which is that it's

1668
01:27:25,360 --> 01:27:30,519
free right there's like many of our

1669
01:27:27,850 --> 01:27:34,780
tragedies of the Commons there's really

1670
01:27:30,520 --> 01:27:35,710
no reason not to keep trying it would be

1671
01:27:34,780 --> 01:27:38,380
interesting if there was a way to

1672
01:27:35,710 --> 01:27:44,440
quantify the cost in your organization

1673
01:27:38,380 --> 01:27:46,929
from the the extraneous requests the and

1674
01:27:44,440 --> 01:27:48,699
my question is

1675
01:27:46,929 --> 01:27:50,140
are you doing any sort of longitudinal

1676
01:27:48,699 --> 01:27:53,620
measurements are you seeing any trends

1677
01:27:50,140 --> 01:27:56,080
here any periodicity is there is this

1678
01:27:53,620 --> 01:27:58,510
changing over time are you planning on

1679
01:27:56,080 --> 01:28:01,150
continuing measurements to gain that now

1680
01:27:58,510 --> 01:28:04,900
knowledge we've been seeding the DNS

1681
01:28:01,150 --> 01:28:08,080
with unique DNS names for seven years

1682
01:28:04,900 --> 01:28:11,019
now and we see seven year old queries

1683
01:28:08,080 --> 01:28:14,679
because the timestamp is inside the DNS

1684
01:28:11,020 --> 01:28:16,929
name so you know there are just old

1685
01:28:14,679 --> 01:28:19,150
queries out there I always think the DNS

1686
01:28:16,929 --> 01:28:21,310
is actually like long term storage that

1687
01:28:19,150 --> 01:28:23,679
all you need to do is encode what you

1688
01:28:21,310 --> 01:28:24,790
want inside a query and to sit there and

1689
01:28:23,679 --> 01:28:26,110
listen and sooner or later you're gonna

1690
01:28:24,790 --> 01:28:29,199
get re query and that's your read

1691
01:28:26,110 --> 01:28:32,110
function I don't know it's getting worse

1692
01:28:29,199 --> 01:28:35,589
or better but certainly our perspective

1693
01:28:32,110 --> 01:28:37,449
is we seed more names in our repeat rate

1694
01:28:35,590 --> 01:28:39,969
you know the ghost rate just keeps on

1695
01:28:37,449 --> 01:28:42,669
inexorably growing at some point we're

1696
01:28:39,969 --> 01:28:44,380
going to have to walk away from the

1697
01:28:42,670 --> 01:28:46,390
top-level names that we're using because

1698
01:28:44,380 --> 01:28:49,510
they're so polluted the signal is

1699
01:28:46,390 --> 01:28:51,429
getting lost inside the repeat noise we

1700
01:28:49,510 --> 01:28:56,409
know what we're doing because the names

1701
01:28:51,429 --> 01:28:59,020
have meaning but your server which have

1702
01:28:56,409 --> 01:29:02,920
been running for years which has a whole

1703
01:28:59,020 --> 01:29:05,409
bunch of gross queries and you're seeing

1704
01:29:02,920 --> 01:29:08,830
a thousand queries a minute is that nine

1705
01:29:05,409 --> 01:29:12,809
hundred and ninety and one real how

1706
01:29:08,830 --> 01:29:15,820
do you know no one does the suspicion is

1707
01:29:12,810 --> 01:29:18,610
that you are overwhelmed with your

1708
01:29:15,820 --> 01:29:20,769
legacy and that real queries are

1709
01:29:18,610 --> 01:29:22,239
actually extremely low but they're

1710
01:29:20,770 --> 01:29:24,820
masked out by this extraordinary

1711
01:29:22,239 --> 01:29:27,239
property of the DNS to just simply

1712
01:29:24,820 --> 01:29:30,009
memorize a repeat and recycle

1713
01:29:27,239 --> 01:29:33,669
quantifying that difficult that it

1714
01:29:30,010 --> 01:29:35,760
certainly seems bad one question that

1715
01:29:33,670 --> 01:29:40,179
occurred to me as I was looking at your

1716
01:29:35,760 --> 01:29:43,030
your analysis is is there the potential

1717
01:29:40,179 --> 01:29:47,560
that some of this is malware traffic

1718
01:29:43,030 --> 01:29:49,809
that's using you know DNS queries as

1719
01:29:47,560 --> 01:29:55,630
some way of probing the state of the

1720
01:29:49,810 --> 01:29:59,020
network reach ability we see a lot of

1721
01:29:55,630 --> 01:30:00,780
log re players so there is a massive

1722
01:29:59,020 --> 01:30:04,499
business out there of capturing

1723
01:30:00,780 --> 01:30:08,429
and then replaying and generally they

1724
01:30:04,499 --> 01:30:09,960
are relatively benign but we also see a

1725
01:30:08,429 --> 01:30:12,599
whole bunch of other things where

1726
01:30:09,960 --> 01:30:14,639
pathologies that are inexplicable there

1727
01:30:12,599 --> 01:30:17,369
was a DNS resolver in Jordan and other

1728
01:30:14,639 --> 01:30:20,070
one in Guatemala doing up to 20,000

1729
01:30:17,369 --> 01:30:22,380
queries per second for days of the same

1730
01:30:20,070 --> 01:30:25,739
name it's kind of I'm sorry what exactly

1731
01:30:22,380 --> 01:30:28,460
is going on here guys you know so the

1732
01:30:25,739 --> 01:30:32,400
combination is just an amazing pool of

1733
01:30:28,460 --> 01:30:40,550
awfulness we've exhausted the line thank

1734
01:30:32,400 --> 01:30:47,820
you very much thank you see you in

1735
01:30:40,550 --> 01:30:50,909
Vancouver and also the slide where

1736
01:30:47,820 --> 01:30:52,820
should be available Susan from the

1737
01:30:50,909 --> 01:30:56,089
website

1738
01:30:52,820 --> 01:30:56,090
[Music]

1739
01:31:18,270 --> 01:31:22,759
[Music]

