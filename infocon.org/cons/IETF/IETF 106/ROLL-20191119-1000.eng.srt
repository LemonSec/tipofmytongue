1
00:01:05,250 --> 00:01:08,759
so the problem

2
00:01:30,909 --> 00:01:49,300
yeah good morning everyone

3
00:01:46,190 --> 00:01:49,300
this is the wrong meeting

4
00:02:10,110 --> 00:02:13,179
[Music]

5
00:02:27,990 --> 00:02:53,070
I just join me take on Winston good

6
00:02:50,430 --> 00:02:56,150
morning this is the wrong meeting we

7
00:02:53,070 --> 00:02:56,150
will start now okay

8
00:02:58,830 --> 00:03:07,860
we have our first meeting yesterday um

9
00:03:03,980 --> 00:03:09,450
this is the not well please be aware

10
00:03:07,860 --> 00:03:12,230
that this meeting is aligned with that

11
00:03:09,450 --> 00:03:16,619
we will not read it but it applies to

12
00:03:12,230 --> 00:03:19,709
alight the of activities these are the

13
00:03:16,620 --> 00:03:22,530
meeting materials check out that eater

14
00:03:19,710 --> 00:03:26,640
pad inside the same done just read if we

15
00:03:22,530 --> 00:03:28,950
put them Monday thank you thank you

16
00:03:26,640 --> 00:03:32,690
thank you Michael Michael's country this

17
00:03:28,950 --> 00:03:35,459
I prescribed and mineus taken please

18
00:03:32,690 --> 00:03:38,370
okay thank you very much Alex I'm

19
00:03:35,460 --> 00:03:41,250
Dominique thank you very much guys I

20
00:03:38,370 --> 00:03:45,680
appreciate mmm yeah

21
00:03:41,250 --> 00:03:49,230
the slides are complete said this is the

22
00:03:45,680 --> 00:03:53,880
second part please sign the blue sheets

23
00:03:49,230 --> 00:03:55,890
the blue sheets are there okay thank you

24
00:03:53,880 --> 00:03:58,769
okay

25
00:03:55,890 --> 00:04:03,630
thank you very much Pascal good teamwork

26
00:03:58,770 --> 00:04:06,120
here this is the agenda for today so we

27
00:04:03,630 --> 00:04:09,630
will start with this introduction then

28
00:04:06,120 --> 00:04:11,550
we go for Pascal with an hour live then

29
00:04:09,630 --> 00:04:15,269
we will keep some update and use of

30
00:04:11,550 --> 00:04:16,950
ripple info then Pascal or the Minich

31
00:04:15,270 --> 00:04:19,140
they are going to talk about the light

32
00:04:16,950 --> 00:04:20,690
India information to keep the semi

33
00:04:19,140 --> 00:04:24,630
status between the child and the father

34
00:04:20,690 --> 00:04:30,450
then Raul is going to provide his update

35
00:04:24,630 --> 00:04:33,840
for MP do and then Pascal is going to

36
00:04:30,450 --> 00:04:37,430
talk about the turn of a d138 we aim to

37
00:04:33,840 --> 00:04:39,840
do this working group adoption today I

38
00:04:37,430 --> 00:04:41,330
started and we are going to continue by

39
00:04:39,840 --> 00:04:44,880
mini list

40
00:04:41,330 --> 00:04:48,780
so then we have the upper floor comments

41
00:04:44,880 --> 00:04:54,890
for the gender okay we go forward

42
00:04:48,780 --> 00:04:58,619
Thank You Pascal thank you

43
00:04:54,890 --> 00:05:06,510
this graph is almost ready for last call

44
00:04:58,620 --> 00:05:09,930
we are asking for reviews yes basically

45
00:05:06,510 --> 00:05:13,050
we're from Cisco so this is about the

46
00:05:09,930 --> 00:05:15,480
ripple unaware leaf so there was a lot

47
00:05:13,050 --> 00:05:18,960
of activity on this document and the

48
00:05:15,480 --> 00:05:22,680
reason is that we actually found that it

49
00:05:18,960 --> 00:05:25,340
was a normative reference to other

50
00:05:22,680 --> 00:05:28,740
documents which were well advanced and

51
00:05:25,340 --> 00:05:32,549
so now the ripple unaware leaf is kind

52
00:05:28,740 --> 00:05:35,340
of holding other documents in miss rough

53
00:05:32,550 --> 00:05:38,430
state and we want to avoid keeping those

54
00:05:35,340 --> 00:05:41,520
documents in Miss rf2 too long so we

55
00:05:38,430 --> 00:05:45,150
ended up spitting some work on unaware

56
00:05:41,520 --> 00:05:49,890
leaf it is not a very complex document

57
00:05:45,150 --> 00:05:52,950
it is the application of RFC 8 5 4 5

58
00:05:49,890 --> 00:05:55,830
which is agnostic to the routing

59
00:05:52,950 --> 00:05:58,890
protocol but still is a registration

60
00:05:55,830 --> 00:06:02,460
mechanism by a host to a router and in

61
00:05:58,890 --> 00:06:06,990
this case we explained how you can use

62
00:06:02,460 --> 00:06:10,020
RFC 8 505 to register to ripple services

63
00:06:06,990 --> 00:06:13,770
there are other documents at the ITF for

64
00:06:10,020 --> 00:06:17,370
instance in rift 400 proxy etc that also

65
00:06:13,770 --> 00:06:19,500
leverage RFC 8 5 for 5 at storage as a

66
00:06:17,370 --> 00:06:23,930
registration mechanism so this

67
00:06:19,500 --> 00:06:27,300
particular document is how a leaf will

68
00:06:23,930 --> 00:06:31,920
use at 5:05 to to register to ripple

69
00:06:27,300 --> 00:06:33,900
services so the the draft has moved

70
00:06:31,920 --> 00:06:36,530
along quite a bit I mean there were like

71
00:06:33,900 --> 00:06:40,710
four revisions since the last IETF and

72
00:06:36,530 --> 00:06:42,479
part of that is related to the review by

73
00:06:40,710 --> 00:06:49,039
Alva also thank you so much around for

74
00:06:42,480 --> 00:06:49,040
all your help there on the DCO document

75
00:06:49,310 --> 00:06:55,050
because basically there is this this

76
00:06:52,260 --> 00:06:57,000
concept that the DCO is the only

77
00:06:55,050 --> 00:06:59,340
in report that goes down as

78
00:06:57,000 --> 00:07:01,560
synchronously from the root to the

79
00:06:59,340 --> 00:07:04,138
devices and there are a number of flows

80
00:07:01,560 --> 00:07:07,530
including the backbone router which

81
00:07:04,139 --> 00:07:10,440
require possibly a miss a that goes

82
00:07:07,530 --> 00:07:13,258
through the repo Network and

83
00:07:10,440 --> 00:07:15,960
synchronously down to the 6lr so the

84
00:07:13,259 --> 00:07:19,560
router can actually tell the leaf that

85
00:07:15,960 --> 00:07:22,919
there is a problem whatever and so we

86
00:07:19,560 --> 00:07:28,110
found that it was actually useful and we

87
00:07:22,919 --> 00:07:30,780
did it to carry an ND status into the

88
00:07:28,110 --> 00:07:33,780
repo status and the way we initially did

89
00:07:30,780 --> 00:07:36,809
that was not satisfactory it was kind of

90
00:07:33,780 --> 00:07:40,919
a mapping table and now we replace that

91
00:07:36,810 --> 00:07:43,680
by your next Blissett signaling inside

92
00:07:40,919 --> 00:07:45,810
the ripple status so that if you carry

93
00:07:43,680 --> 00:07:49,409
an ND status in the repo status then

94
00:07:45,810 --> 00:07:51,930
there's this flag telling you right so

95
00:07:49,409 --> 00:07:55,860
initially the repo status the left-most

96
00:07:51,930 --> 00:08:00,539
built was a knee reverse is warning that

97
00:07:55,860 --> 00:08:03,870
if the status was above 128 then it was

98
00:08:00,539 --> 00:08:06,300
a neuro below it was a warning now we

99
00:08:03,870 --> 00:08:08,520
have the second bit which signals

100
00:08:06,300 --> 00:08:11,310
whether you actually have a native

101
00:08:08,520 --> 00:08:15,109
report errors or if you are transporting

102
00:08:11,310 --> 00:08:19,259
and ND status we are doing all this game

103
00:08:15,110 --> 00:08:21,449
because actually ng and repo repo is

104
00:08:19,259 --> 00:08:23,340
kind of an extension to nd for multi hub

105
00:08:21,449 --> 00:08:25,680
you can see it as that and that's how

106
00:08:23,340 --> 00:08:30,810
we're using it in in many use cases

107
00:08:25,680 --> 00:08:33,390
it's just ND fun and BMA networks and at

108
00:08:30,810 --> 00:08:35,279
the edge of the ripple Network what you

109
00:08:33,390 --> 00:08:37,169
see is with the real draft is pure handy

110
00:08:35,279 --> 00:08:39,390
and that's true also at the northern

111
00:08:37,169 --> 00:08:41,640
edge with if you have a backbone with

112
00:08:39,390 --> 00:08:43,909
the backbone router it's pure nd so at

113
00:08:41,640 --> 00:08:46,680
some point there is this need to map the

114
00:08:43,909 --> 00:08:48,959
way ripple expresses thing and the way

115
00:08:46,680 --> 00:08:51,180
and the Express things and you'll find

116
00:08:48,959 --> 00:08:53,729
the same kind of prime not prime but but

117
00:08:51,180 --> 00:08:55,680
things with the PIO for instance the

118
00:08:53,730 --> 00:08:58,380
prefix information option in rapport is

119
00:08:55,680 --> 00:09:00,540
the only one so you see there is a tight

120
00:08:58,380 --> 00:09:04,649
integration between Andy and ripple in

121
00:09:00,540 --> 00:09:08,760
the case of unaware leaf the most

122
00:09:04,649 --> 00:09:10,980
important integration is that

123
00:09:08,760 --> 00:09:13,439
if we before this draft you had to add

124
00:09:10,980 --> 00:09:16,920
to have two different messages that flow

125
00:09:13,440 --> 00:09:19,139
in parallel between the router down in

126
00:09:16,920 --> 00:09:21,779
the network and the route one of them

127
00:09:19,139 --> 00:09:24,180
was for handy that's the data exchange

128
00:09:21,779 --> 00:09:25,740
and the other one was the dowel for it

129
00:09:24,180 --> 00:09:27,870
and that we have two messages in a

130
00:09:25,740 --> 00:09:30,480
constraint network multi hub sometimes

131
00:09:27,870 --> 00:09:33,449
or a deep so we said a with the real

132
00:09:30,480 --> 00:09:35,699
draft will kind of package them into one

133
00:09:33,449 --> 00:09:38,130
which means that at some point you have

134
00:09:35,699 --> 00:09:40,109
to re explode that and so the

135
00:09:38,130 --> 00:09:43,439
integrating the status as we did is part

136
00:09:40,110 --> 00:09:45,389
of that game we use repo down the geotag

137
00:09:43,440 --> 00:09:47,519
to signal to a six on our the six are

138
00:09:45,389 --> 00:09:50,370
our fixed information it needs sends it

139
00:09:47,519 --> 00:09:54,199
to the to the leaf so that that's that's

140
00:09:50,370 --> 00:10:01,470
one big thing we did is this status game

141
00:09:54,199 --> 00:10:07,139
the other big thing we we did was clean

142
00:10:01,470 --> 00:10:09,959
up the the way we integrate with address

143
00:10:07,139 --> 00:10:11,880
protection so in ng you've got this

144
00:10:09,959 --> 00:10:14,160
concept of with five eight five four

145
00:10:11,880 --> 00:10:18,750
five and a PMD you've got this concept

146
00:10:14,160 --> 00:10:21,000
of a rover the rover is a capability by

147
00:10:18,750 --> 00:10:24,750
the host to actually prove that he owns

148
00:10:21,000 --> 00:10:27,449
the address right now we are not using

149
00:10:24,750 --> 00:10:28,889
that in repo to protect repo I hope in

150
00:10:27,449 --> 00:10:31,079
the future we will be able to do that

151
00:10:28,889 --> 00:10:34,380
but for now we have not using it to

152
00:10:31,079 --> 00:10:36,750
protect repo but the rover was needed at

153
00:10:34,380 --> 00:10:39,389
the north of the geotag to actually

154
00:10:36,750 --> 00:10:41,160
signal to the 6lv are in case the 6l dri

155
00:10:39,389 --> 00:10:43,290
separates it from the root we had this

156
00:10:41,160 --> 00:10:45,600
long discussion do we want to force that

157
00:10:43,290 --> 00:10:48,510
the 6 lv r is the same box as the root

158
00:10:45,600 --> 00:10:51,149
or not at some time we said yes and then

159
00:10:48,510 --> 00:10:54,930
we decided no all right so so since it's

160
00:10:51,149 --> 00:10:56,850
a no and we need the rover to talk to to

161
00:10:54,930 --> 00:11:00,810
the 6 lb r because the 6a via one set

162
00:10:56,850 --> 00:11:02,940
then we had to pass the Rover in as part

163
00:11:00,810 --> 00:11:05,279
of the target so it's actually the

164
00:11:02,940 --> 00:11:07,649
signature kind of all the way to prove

165
00:11:05,279 --> 00:11:09,569
the ownership of the target is now

166
00:11:07,649 --> 00:11:11,010
piggybacked in to report so that that's

167
00:11:09,569 --> 00:11:13,889
another big change that we made in the

168
00:11:11,010 --> 00:11:16,589
road raft so as of today is just to

169
00:11:13,889 --> 00:11:18,959
enable us to build the correct

170
00:11:16,589 --> 00:11:22,110
exchange with the 6 lvl so the root can

171
00:11:18,959 --> 00:11:22,380
do a duck with a 6 lb are as supposed to

172
00:11:22,110 --> 00:11:24,000
see

173
00:11:22,380 --> 00:11:27,240
settle down there so we save all this

174
00:11:24,000 --> 00:11:29,670
thing but in the future that also gives

175
00:11:27,240 --> 00:11:32,430
us the opportunity to actually validate

176
00:11:29,670 --> 00:11:34,589
a ripple rot because now we'll be able

177
00:11:32,430 --> 00:11:36,449
since we have the rover in as part of

178
00:11:34,590 --> 00:11:38,550
the ripple signaling we'll be able to

179
00:11:36,450 --> 00:11:40,770
use that to prove the ownership of the

180
00:11:38,550 --> 00:11:42,540
address if we get to because right now

181
00:11:40,770 --> 00:11:45,030
anybody can inject the down one say this

182
00:11:42,540 --> 00:11:47,339
address this year but in the future with

183
00:11:45,030 --> 00:11:48,630
this Rover we can exchange a P and D and

184
00:11:47,340 --> 00:11:50,310
we'll see if we do that on that but

185
00:11:48,630 --> 00:11:52,020
we'll be able to prove the ownership so

186
00:11:50,310 --> 00:11:53,699
it's kind of a good idea we needed it

187
00:11:52,020 --> 00:11:58,680
but it's also a good idea to protect the

188
00:11:53,700 --> 00:12:01,140
future last but not least we so we

189
00:11:58,680 --> 00:12:02,790
pulled kind of DCO from the editor cube

190
00:12:01,140 --> 00:12:04,680
because of the changes which are related

191
00:12:02,790 --> 00:12:07,829
to to what I just said the status and

192
00:12:04,680 --> 00:12:10,829
stuff we also pulled the use of ripple

193
00:12:07,830 --> 00:12:14,490
info from from the editor cube and that

194
00:12:10,830 --> 00:12:16,860
was more like a problem of definition

195
00:12:14,490 --> 00:12:19,830
what is a rule in particular there was a

196
00:12:16,860 --> 00:12:22,380
discrepancy between how the use of

197
00:12:19,830 --> 00:12:24,240
ripple info define the real repair in a

198
00:12:22,380 --> 00:12:26,250
relief and how this draft defined

199
00:12:24,240 --> 00:12:28,740
rapport anomalies so we had all those

200
00:12:26,250 --> 00:12:31,020
discussions on the mailing list and we

201
00:12:28,740 --> 00:12:33,090
ended up with a common definition and I

202
00:12:31,020 --> 00:12:36,630
believe now that use of ripple info is

203
00:12:33,090 --> 00:12:39,060
clean and and self-consistent and the

204
00:12:36,630 --> 00:12:41,700
real draft now is aligned to that and so

205
00:12:39,060 --> 00:12:44,040
the way we've done it now is that the

206
00:12:41,700 --> 00:12:46,620
real draft as a normative reference to

207
00:12:44,040 --> 00:12:48,360
the use of ripple and not the other way

208
00:12:46,620 --> 00:12:51,510
around so we can ship use of ripple if

209
00:12:48,360 --> 00:12:54,060
we captain so the way we define those

210
00:12:51,510 --> 00:12:58,110
thing the end of that long story to make

211
00:12:54,060 --> 00:12:59,520
it very short is that a leaf with first

212
00:12:58,110 --> 00:13:01,320
we had to define a leaf you realize that

213
00:12:59,520 --> 00:13:04,380
the leaf was not redefined since the

214
00:13:01,320 --> 00:13:07,590
days of early repo so now with the

215
00:13:04,380 --> 00:13:12,600
unaware thing the leaf definition had to

216
00:13:07,590 --> 00:13:16,290
be updated so relief now is a ipv6 host

217
00:13:12,600 --> 00:13:18,660
so it has to comply with a 200 so it's

218
00:13:16,290 --> 00:13:20,550
an ipv6 host which is attached to a

219
00:13:18,660 --> 00:13:23,040
ripple Network right it's a host

220
00:13:20,550 --> 00:13:24,510
supports ipv6 attached to report that we

221
00:13:23,040 --> 00:13:28,230
are getting routing through ripple and

222
00:13:24,510 --> 00:13:31,680
with that simple definition you'll find

223
00:13:28,230 --> 00:13:34,140
that the way the rule to the I know the

224
00:13:31,680 --> 00:13:35,760
way use of ripple info describe

225
00:13:34,140 --> 00:13:36,360
forwarding to the leaf is completely

226
00:13:35,760 --> 00:13:39,929
consistent

227
00:13:36,360 --> 00:13:46,709
because it doesn't care how the rod was

228
00:13:39,929 --> 00:13:48,929
set up right rule the rule draft will be

229
00:13:46,709 --> 00:13:50,459
one way of setting that that rod you

230
00:13:48,929 --> 00:13:53,699
could imagine that there are other ways

231
00:13:50,459 --> 00:13:55,979
or other sorts of leaf so the leaf is a

232
00:13:53,699 --> 00:13:56,819
plain ipv6 host the only thing you want

233
00:13:55,980 --> 00:13:59,879
from him

234
00:13:56,819 --> 00:14:01,589
is that it supports a hop by hop it out

235
00:13:59,879 --> 00:14:04,079
that's fully consumed and that's part of

236
00:14:01,589 --> 00:14:05,579
8,200 and the other thing you want from

237
00:14:04,079 --> 00:14:08,059
em is that if there is this hop by hop

238
00:14:05,579 --> 00:14:10,019
header I can ignore it which is also

239
00:14:08,059 --> 00:14:12,959
compliance to 8200

240
00:14:10,019 --> 00:14:15,720
so it's an ipv6 host with that we can

241
00:14:12,959 --> 00:14:17,670
use the use of ripple info to wait what

242
00:14:15,720 --> 00:14:21,239
is right for a long time so we didn't

243
00:14:17,670 --> 00:14:23,670
have to change that that piece okay so

244
00:14:21,239 --> 00:14:25,559
that's a leaf a leaf is a ipv6 host

245
00:14:23,670 --> 00:14:29,459
attached to ripple Network I mean that's

246
00:14:25,559 --> 00:14:33,509
kind of easy now ripple aware will mean

247
00:14:29,459 --> 00:14:36,359
that he understands RFC 6550 and ripple

248
00:14:33,509 --> 00:14:38,850
unaware he doesn't understand their FCC

249
00:14:36,360 --> 00:14:41,549
specialty simple as that so now we have

250
00:14:38,850 --> 00:14:45,480
a very simple concept of what a ripple

251
00:14:41,549 --> 00:14:47,579
unaware leaf is is that enough to play

252
00:14:45,480 --> 00:14:51,089
with this draft no because this draft

253
00:14:47,579 --> 00:14:53,459
explains how a ripple unaware leaf will

254
00:14:51,089 --> 00:14:56,069
use eight five four five it has to use H

255
00:14:53,459 --> 00:14:59,279
five four five in a certain manner so

256
00:14:56,069 --> 00:15:02,219
this draft adds dependency on the host

257
00:14:59,279 --> 00:15:04,889
describes how the host that supports at

258
00:15:02,220 --> 00:15:07,619
5:05 will use H five four five so that

259
00:15:04,889 --> 00:15:10,829
the router in turn can provide ripple

260
00:15:07,619 --> 00:15:14,459
rotting for it so that so this is kind

261
00:15:10,829 --> 00:15:17,699
of not initially like four versions ago

262
00:15:14,459 --> 00:15:19,679
it was presented as the definition of a

263
00:15:17,699 --> 00:15:22,079
row now it's no more the definition of a

264
00:15:19,679 --> 00:15:24,179
row the rule is this lifts it which is

265
00:15:22,079 --> 00:15:25,859
not aware of ripple but then we've got

266
00:15:24,179 --> 00:15:28,649
this additional support that's needed on

267
00:15:25,860 --> 00:15:35,579
a crew to make it a rule that does this

268
00:15:28,649 --> 00:15:41,009
raft basically hopes clear okay so

269
00:15:35,579 --> 00:15:46,229
that's where we are a senator I believe

270
00:15:41,009 --> 00:15:49,110
that the draft is ready I would really

271
00:15:46,230 --> 00:15:50,040
appreciate that people see in s mail

272
00:15:49,110 --> 00:15:53,670
asking

273
00:15:50,040 --> 00:15:55,199
reduce either we do one of two early

274
00:15:53,670 --> 00:15:58,620
reviews and then we do the workgroup

275
00:15:55,200 --> 00:16:02,310
last call and then if you would like

276
00:15:58,620 --> 00:16:05,610
love to see hands yes thank you fascicle

277
00:16:02,310 --> 00:16:07,469
yes please say who is willing to review

278
00:16:05,610 --> 00:16:13,250
this wrap we need two reviews thank you

279
00:16:07,470 --> 00:16:13,250
Robert Webb parents one more one more

280
00:16:14,390 --> 00:16:21,420
yes Rama Rao Jadhav Huawei so one of the

281
00:16:19,440 --> 00:16:25,020
question that I have was with regards to

282
00:16:21,420 --> 00:16:26,910
the ripple status since now we have a

283
00:16:25,020 --> 00:16:28,500
completely a lot of new semantics

284
00:16:26,910 --> 00:16:30,900
getting added to ripple status which

285
00:16:28,500 --> 00:16:35,550
essentially is carrying the nd status

286
00:16:30,900 --> 00:16:38,069
back as well so this will also mean that

287
00:16:35,550 --> 00:16:41,189
the DAO act status I mean it updates

288
00:16:38,070 --> 00:16:44,010
essentially 6550 so is it is it I mean

289
00:16:41,190 --> 00:16:46,740
is it is it is it okay to use the same

290
00:16:44,010 --> 00:16:48,210
status or shall we I mean I know that we

291
00:16:46,740 --> 00:16:50,460
have already discussed this before and

292
00:16:48,210 --> 00:16:53,250
we decided to use the same status but I

293
00:16:50,460 --> 00:16:55,680
just want to bring to this working group

294
00:16:53,250 --> 00:16:58,170
notice again that you know if if it is

295
00:16:55,680 --> 00:17:01,709
indeed the right way of doing it or

296
00:16:58,170 --> 00:17:03,780
shall we shall we have different reason

297
00:17:01,710 --> 00:17:06,959
or something which we should be using

298
00:17:03,780 --> 00:17:10,379
instead because now we are sort of

299
00:17:06,959 --> 00:17:12,810
confining and overlapping a lot of nd

300
00:17:10,380 --> 00:17:16,170
stuff with ripple in a way you know yes

301
00:17:12,810 --> 00:17:17,940
I mean yeah we needed that for number of

302
00:17:16,170 --> 00:17:20,400
tribes including backbone router right

303
00:17:17,940 --> 00:17:26,430
now we we have a very clean way of doing

304
00:17:20,400 --> 00:17:29,220
it I would believe what alternate would

305
00:17:26,430 --> 00:17:32,310
we have like define the second field for

306
00:17:29,220 --> 00:17:35,610
and the status separate from repost

307
00:17:32,310 --> 00:17:38,820
errors and it's one more bite right I

308
00:17:35,610 --> 00:17:42,149
mean do we need more so the new format

309
00:17:38,820 --> 00:17:45,629
leaves us 64 values for pure ripple

310
00:17:42,150 --> 00:17:48,690
status and 64 values for nd status that

311
00:17:45,630 --> 00:17:51,180
are carried along and I mean we're very

312
00:17:48,690 --> 00:17:54,510
very far from needing all those statuses

313
00:17:51,180 --> 00:17:58,890
right so I think yet another byte which

314
00:17:54,510 --> 00:18:02,180
is you know 8 bits in year 4 something

315
00:17:58,890 --> 00:18:04,300
that we are very very far from consuming

316
00:18:02,180 --> 00:18:06,310
for

317
00:18:04,300 --> 00:18:08,850
you basically what we're seeing is there

318
00:18:06,310 --> 00:18:11,919
is still a lot of scope for expansion

319
00:18:08,850 --> 00:18:15,250
regardless of a ripple we did not even

320
00:18:11,920 --> 00:18:17,260
define a single arak code so far right

321
00:18:15,250 --> 00:18:20,170
we just said if the bit on the left is

322
00:18:17,260 --> 00:18:21,730
on it's an error it's a rejection and we

323
00:18:20,170 --> 00:18:24,880
expected that new specs which come in

324
00:18:21,730 --> 00:18:26,650
with examples of rejection and so far

325
00:18:24,880 --> 00:18:28,420
the only examples of rejection we have

326
00:18:26,650 --> 00:18:31,990
are the one that are carried from an T

327
00:18:28,420 --> 00:18:33,430
actually and in case of Dow AK we have

328
00:18:31,990 --> 00:18:34,900
rejection from the parent upstream

329
00:18:33,430 --> 00:18:36,730
parent in case of storing mode of

330
00:18:34,900 --> 00:18:38,230
operation for the table is full and

331
00:18:36,730 --> 00:18:40,930
things like that we're implementers are

332
00:18:38,230 --> 00:18:44,890
using their own statuses yes exactly so

333
00:18:40,930 --> 00:18:47,470
so that's why the bit that we used to

334
00:18:44,890 --> 00:18:50,640
signal and D is actually the second bit

335
00:18:47,470 --> 00:18:55,630
when it's on so if people started using

336
00:18:50,640 --> 00:18:57,880
1 0 and 1 2 3 4 5 6 whatever we don't

337
00:18:55,630 --> 00:19:00,610
impact those specifications or those

338
00:18:57,880 --> 00:19:03,340
implementations but really if if people

339
00:19:00,610 --> 00:19:07,360
want to start using status code in repo

340
00:19:03,340 --> 00:19:09,399
they should go to IANA and now it's

341
00:19:07,360 --> 00:19:10,840
something we can look at actually as

342
00:19:09,400 --> 00:19:13,090
part of the review for the real draft

343
00:19:10,840 --> 00:19:16,889
since we are actually telling IANA we

344
00:19:13,090 --> 00:19:20,230
are doing those things please consider

345
00:19:16,890 --> 00:19:23,170
the way you would like to see the new

346
00:19:20,230 --> 00:19:25,780
repo status code assigned by iana you

347
00:19:23,170 --> 00:19:27,340
know there is always is say this short

348
00:19:25,780 --> 00:19:29,740
sentence which says oh it has to be an

349
00:19:27,340 --> 00:19:32,230
RFC has to be a standard document there

350
00:19:29,740 --> 00:19:35,920
is an RFC that I knew how to work those

351
00:19:32,230 --> 00:19:37,960
things where do you expect that the

352
00:19:35,920 --> 00:19:41,290
ripple status will be coming from would

353
00:19:37,960 --> 00:19:44,110
you like some some companies to propose

354
00:19:41,290 --> 00:19:46,930
directly status to aiya now and be

355
00:19:44,110 --> 00:19:48,490
granted or you know so I mean under how

356
00:19:46,930 --> 00:19:50,500
I see or anything interest but but

357
00:19:48,490 --> 00:19:52,600
that's that's a big question - IANA I

358
00:19:50,500 --> 00:19:54,700
mean if you if you're telling me our

359
00:19:52,600 --> 00:19:56,260
implementations which may be starting to

360
00:19:54,700 --> 00:19:58,240
use some code and they never declare

361
00:19:56,260 --> 00:20:00,700
them anywhere it's very risky for them

362
00:19:58,240 --> 00:20:02,770
because at some point the main spec may

363
00:20:00,700 --> 00:20:06,130
decide to use the statuses that's why

364
00:20:02,770 --> 00:20:08,650
there is a high honor so so what is the

365
00:20:06,130 --> 00:20:10,480
policy for allocating at IANA do we open

366
00:20:08,650 --> 00:20:12,220
it so that you know some implementation

367
00:20:10,480 --> 00:20:15,340
can go to IANA and say oh I want this

368
00:20:12,220 --> 00:20:17,049
code yes you get it or do we want to

369
00:20:15,340 --> 00:20:20,070
close it a little bit so it has to be

370
00:20:17,049 --> 00:20:23,049
a standard from any any solid body or

371
00:20:20,070 --> 00:20:26,769
does it need to be an expert with you or

372
00:20:23,049 --> 00:20:29,200
never a CEO so there are worlds and I

373
00:20:26,769 --> 00:20:31,419
just picked one at the moment so please

374
00:20:29,200 --> 00:20:34,989
please consider this carefully is part

375
00:20:31,419 --> 00:20:38,350
of your review the other question that I

376
00:20:34,989 --> 00:20:42,610
had was with regards to the capabilities

377
00:20:38,350 --> 00:20:45,219
now that we have the 6l are essentially

378
00:20:42,610 --> 00:20:48,219
signalling on behalf of the unaware

379
00:20:45,220 --> 00:20:51,730
leave what does it mean for example if

380
00:20:48,220 --> 00:20:56,649
let's say the six LR is capable of doing

381
00:20:51,730 --> 00:20:59,859
a 23-8 and the never leave is clearly

382
00:20:56,649 --> 00:21:03,729
not so so it would mean that somehow the

383
00:20:59,859 --> 00:21:06,399
route should know that the six LR is in

384
00:21:03,730 --> 00:21:11,139
charge of the unaware leaf and has to do

385
00:21:06,399 --> 00:21:14,678
IP in IP I would say that way because

386
00:21:11,139 --> 00:21:17,139
the compression is a subway I mean it's

387
00:21:14,679 --> 00:21:20,409
under layer three right which means that

388
00:21:17,139 --> 00:21:23,709
you could you could in theory decompress

389
00:21:20,409 --> 00:21:25,899
at every hop if you like to it's it's

390
00:21:23,710 --> 00:21:27,970
it's it's the way you place the packet

391
00:21:25,899 --> 00:21:31,090
on the wire I mean the compressed form

392
00:21:27,970 --> 00:21:33,879
is equivalent to to the uncompressed

393
00:21:31,090 --> 00:21:34,869
form meaning that the 6rr if it if it

394
00:21:33,879 --> 00:21:37,928
doesn't know better

395
00:21:34,869 --> 00:21:39,639
it should just uncompress but the route

396
00:21:37,929 --> 00:21:41,440
doesn't have to care whether the 6r

397
00:21:39,639 --> 00:21:44,439
makes the compression decision it's a

398
00:21:41,440 --> 00:21:46,659
one hop decision okay okay so the

399
00:21:44,440 --> 00:21:48,850
Assumption here is that the six sellers

400
00:21:46,659 --> 00:21:51,759
make the decision anyways for the data

401
00:21:48,850 --> 00:21:54,279
plane as well on behalf of yes you get

402
00:21:51,759 --> 00:21:56,789
out of the the ripple domain for an

403
00:21:54,279 --> 00:21:58,809
external rod which is the case of rule

404
00:21:56,789 --> 00:22:01,600
unless you know better

405
00:21:58,809 --> 00:22:04,918
the 6lr should always decompress but the

406
00:22:01,600 --> 00:22:04,918
root doesn't have to know about that

407
00:22:05,999 --> 00:22:09,239
makes sense

408
00:22:12,850 --> 00:22:25,929
I did not choose the time today thank

409
00:22:24,220 --> 00:22:29,680
you very much Pascal and some more

410
00:22:25,930 --> 00:22:31,750
questions no well I will give you an

411
00:22:29,680 --> 00:22:34,090
update about the use of ripple info

412
00:22:31,750 --> 00:22:36,720
before please sign the blue sheets they

413
00:22:34,090 --> 00:22:48,610
are given thank you very much all for

414
00:22:36,720 --> 00:22:51,370
teddy bear dad okay like Pascal said we

415
00:22:48,610 --> 00:22:56,469
had the terminology be fine once a

416
00:22:51,370 --> 00:23:01,899
ripple leaf so he's like any PVC host

417
00:22:56,470 --> 00:23:04,780
but we can't have when the topology is

418
00:23:01,900 --> 00:23:07,780
firm we can have a router as a leaf as

419
00:23:04,780 --> 00:23:10,120
well right Pascal when so but actually

420
00:23:07,780 --> 00:23:13,270
we define a ripple if I proceed host as

421
00:23:10,120 --> 00:23:16,330
functionality but whether when we formed

422
00:23:13,270 --> 00:23:19,540
at the apology a router when join a

423
00:23:16,330 --> 00:23:22,810
topology is going to be a leaf for for

424
00:23:19,540 --> 00:23:26,740
some temporal time but we are in here

425
00:23:22,810 --> 00:23:31,450
kind of functionality so then we have

426
00:23:26,740 --> 00:23:35,440
the ipv6 host aligned with the 8200 then

427
00:23:31,450 --> 00:23:38,650
we can have our nodes ripple awareness

428
00:23:35,440 --> 00:23:40,360
live and people unaware leaf so

429
00:23:38,650 --> 00:23:45,730
basically this is the terminology that

430
00:23:40,360 --> 00:23:48,179
we introduced we hope for comments if

431
00:23:45,730 --> 00:23:51,580
you are not already please let us know

432
00:23:48,180 --> 00:23:54,850
then other modifications we are the

433
00:23:51,580 --> 00:23:57,550
sections to advertise external targets

434
00:23:54,850 --> 00:24:02,230
in our case rule is an external target

435
00:23:57,550 --> 00:24:06,669
through non storing signaling so in our

436
00:24:02,230 --> 00:24:11,360
case to use cases are affected yes yes

437
00:24:06,670 --> 00:24:16,370
Pascal don't interrupt you good

438
00:24:11,360 --> 00:24:20,389
but basically we're here that this first

439
00:24:16,370 --> 00:24:24,020
sentence hides a change which is quite

440
00:24:20,390 --> 00:24:28,040
important is that all the discussion

441
00:24:24,020 --> 00:24:32,570
about using link-local capsulation at

442
00:24:28,040 --> 00:24:34,820
every hop is gone yes yes we we say in

443
00:24:32,570 --> 00:24:37,520
the document that we don't expect that

444
00:24:34,820 --> 00:24:40,070
rule to support IP IP encapsulation and

445
00:24:37,520 --> 00:24:41,629
as well we don't expect the rule to

446
00:24:40,070 --> 00:24:45,649
support eighty one three eight

447
00:24:41,630 --> 00:24:48,050
compression so the traffic is

448
00:24:45,650 --> 00:24:50,600
encapsulated in the road if it's going

449
00:24:48,050 --> 00:24:52,490
to be destination to read the rule when

450
00:24:50,600 --> 00:24:55,370
it's encapsulated into the route the

451
00:24:52,490 --> 00:24:57,710
destination is the 6lr father of the

452
00:24:55,370 --> 00:25:03,709
rule so therefore two use cases are

453
00:24:57,710 --> 00:25:07,550
modified in our use cases and as well we

454
00:25:03,710 --> 00:25:11,290
update the RFC editor comments basically

455
00:25:07,550 --> 00:25:15,379
are some needs so those are the four

456
00:25:11,290 --> 00:25:19,129
three big changes the terminology this

457
00:25:15,380 --> 00:25:21,470
section about external targets and then

458
00:25:19,130 --> 00:25:26,180
we update the story mode use cases where

459
00:25:21,470 --> 00:25:28,580
the rule is the destination so this is

460
00:25:26,180 --> 00:25:32,660
the document so please if you don't

461
00:25:28,580 --> 00:25:34,520
agree as our comment or otherwise we can

462
00:25:32,660 --> 00:25:37,070
proceed we will send an email to the

463
00:25:34,520 --> 00:25:41,870
mini list as one kind of last call so

464
00:25:37,070 --> 00:25:46,220
you can state if you don't agree based

465
00:25:41,870 --> 00:25:51,860
on comments okay thank you obvious

466
00:25:46,220 --> 00:25:53,840
Pascal let's come again yes I have a

467
00:25:51,860 --> 00:25:55,370
question to alcohol because we did this

468
00:25:53,840 --> 00:25:58,629
unusual thing which is to pull the

469
00:25:55,370 --> 00:26:01,760
document out of the RFC editor queue so

470
00:25:58,630 --> 00:26:03,860
now we need to put it back yeah so what

471
00:26:01,760 --> 00:26:09,740
are the next steps and how is this going

472
00:26:03,860 --> 00:26:13,879
to happen with our routing ID yes what's

473
00:26:09,740 --> 00:26:16,580
gonna happen is you're gonna review this

474
00:26:13,880 --> 00:26:21,920
from the main list you instance me I'm

475
00:26:16,580 --> 00:26:23,810
gonna look at it most likely looking at

476
00:26:21,920 --> 00:26:24,920
the changes that have been done it will

477
00:26:23,810 --> 00:26:27,169
be fine because we're

478
00:26:24,920 --> 00:26:29,990
reviewed it I don't think we initially

479
00:26:27,170 --> 00:26:31,970
need to go back to a AG evaluation and

480
00:26:29,990 --> 00:26:35,090
ITA let's call and all this stuff so

481
00:26:31,970 --> 00:26:37,250
I'll probably just tell the RC editor

482
00:26:35,090 --> 00:26:41,990
that we're ready to go okay thank you

483
00:26:37,250 --> 00:26:48,740
very much yes thank you very much now we

484
00:26:41,990 --> 00:26:50,830
have Pascal with the information to keep

485
00:26:48,740 --> 00:26:57,800
the same estate between child and father

486
00:26:50,830 --> 00:27:03,949
thank you Thank You eNOS yes when we did

487
00:26:57,800 --> 00:27:06,620
repo we we thought as usual on the

488
00:27:03,950 --> 00:27:10,160
immediate prom and not necessarily on

489
00:27:06,620 --> 00:27:14,629
how the protocol would live on meaning

490
00:27:10,160 --> 00:27:16,460
you know the expectation was network

491
00:27:14,630 --> 00:27:18,260
will have a single and simple

492
00:27:16,460 --> 00:27:21,770
configuration and that's gonna be at

493
00:27:18,260 --> 00:27:24,110
fiver and now the kind of the protocol

494
00:27:21,770 --> 00:27:25,700
becomes more successful and you see all

495
00:27:24,110 --> 00:27:29,540
sort of variation of how it's being

496
00:27:25,700 --> 00:27:31,520
deployed and now you see that people are

497
00:27:29,540 --> 00:27:34,070
hiding new features and although Sarah

498
00:27:31,520 --> 00:27:36,080
sees that we are writing now I can have

499
00:27:34,070 --> 00:27:38,840
new features which are added to the

500
00:27:36,080 --> 00:27:40,939
protocol and when we build the initial

501
00:27:38,840 --> 00:27:43,370
protocol we didn't really care too much

502
00:27:40,940 --> 00:27:47,440
about how those additions would happen

503
00:27:43,370 --> 00:27:51,919
and how a live network could be updated

504
00:27:47,440 --> 00:27:54,400
and so if we take the particular case of

505
00:27:51,920 --> 00:27:57,260
what we call the configuration option

506
00:27:54,400 --> 00:27:59,750
this is an interesting thing for

507
00:27:57,260 --> 00:28:02,450
instance animal likes repo because it

508
00:27:59,750 --> 00:28:05,780
has this autonomic thing in it which is

509
00:28:02,450 --> 00:28:09,710
that basically the CLI the configuration

510
00:28:05,780 --> 00:28:11,450
of the routers is learned as part of the

511
00:28:09,710 --> 00:28:14,270
protocol itself so you just have to

512
00:28:11,450 --> 00:28:16,400
configure code and code the root and the

513
00:28:14,270 --> 00:28:19,490
root will distribute the configuration

514
00:28:16,400 --> 00:28:21,220
as part of the signaling which which

515
00:28:19,490 --> 00:28:25,130
creates the rotting in the first place

516
00:28:21,220 --> 00:28:27,470
so the rod the neural network is self

517
00:28:25,130 --> 00:28:29,090
configured this way just well not really

518
00:28:27,470 --> 00:28:31,220
fully self you need to configure the

519
00:28:29,090 --> 00:28:33,590
root but then the whole network will

520
00:28:31,220 --> 00:28:36,320
will learn the configuration from the

521
00:28:33,590 --> 00:28:37,939
repo signaling itself as opposed to what

522
00:28:36,320 --> 00:28:38,710
you find usually you have to configure

523
00:28:37,940 --> 00:28:40,899
all the routers

524
00:28:38,710 --> 00:28:42,760
say you run this this protocol on that

525
00:28:40,899 --> 00:28:44,320
interface and other parameters and you

526
00:28:42,760 --> 00:28:45,549
need to be imagine is in all the routers

527
00:28:44,320 --> 00:28:49,090
for this to work

528
00:28:45,549 --> 00:28:52,299
repo is not like that repo distributes

529
00:28:49,090 --> 00:28:54,010
its own CLI as part of the protocol

530
00:28:52,299 --> 00:28:55,960
itself which is kind of cool for a

531
00:28:54,010 --> 00:29:00,010
network that scales to thousands of

532
00:28:55,960 --> 00:29:03,730
nodes and nodes are hardly reachable but

533
00:29:00,010 --> 00:29:06,070
now we had a number of entry meetings

534
00:29:03,730 --> 00:29:07,450
and thus part of discussion in

535
00:29:06,070 --> 00:29:12,010
particular or the configuration and

536
00:29:07,450 --> 00:29:14,320
stuff we found that the way ripple

537
00:29:12,010 --> 00:29:16,690
specified it and in particular the

538
00:29:14,320 --> 00:29:17,830
capability to alight the configuration

539
00:29:16,690 --> 00:29:19,539
when everybody understands the

540
00:29:17,830 --> 00:29:21,699
configuration there's no point repeating

541
00:29:19,539 --> 00:29:24,610
repeating repeating and so ripple says

542
00:29:21,700 --> 00:29:26,380
you can alight it after a while but that

543
00:29:24,610 --> 00:29:29,979
really implies that everybody is aware

544
00:29:26,380 --> 00:29:31,539
of that configuration and mostly it

545
00:29:29,980 --> 00:29:34,480
tells you that you don't expect the

546
00:29:31,539 --> 00:29:37,559
configuration to change after that well

547
00:29:34,480 --> 00:29:40,240
that was cool for the only repo but now

548
00:29:37,559 --> 00:29:44,620
we want to be able to place

549
00:29:40,240 --> 00:29:46,779
modifications and if we just send a Gao

550
00:29:44,620 --> 00:29:49,629
with a new configuration and we know

551
00:29:46,779 --> 00:29:51,130
some nodes will miss it so how long

552
00:29:49,630 --> 00:29:53,529
should we be repeating and repeating

553
00:29:51,130 --> 00:29:55,570
that configuration till we are sure that

554
00:29:53,529 --> 00:29:57,850
everybody knows every everyone every

555
00:29:55,570 --> 00:30:00,070
node knows that the configuration was

556
00:29:57,850 --> 00:30:01,600
updated it's kind of a prom so we

557
00:30:00,070 --> 00:30:04,418
discussed that number of times at the

558
00:30:01,600 --> 00:30:06,219
end trim and we ended up saying a we

559
00:30:04,419 --> 00:30:10,779
want a simple but very explicit

560
00:30:06,220 --> 00:30:13,720
signaling that tells us what is the

561
00:30:10,779 --> 00:30:16,570
version of those fields that we want to

562
00:30:13,720 --> 00:30:18,760
alight so the configuration is one the

563
00:30:16,570 --> 00:30:20,980
capability could be one the prefix

564
00:30:18,760 --> 00:30:23,110
information can be one ripple says you

565
00:30:20,980 --> 00:30:25,390
can alight them but it never says a if

566
00:30:23,110 --> 00:30:29,260
you like them how do the nodes know that

567
00:30:25,390 --> 00:30:30,789
it's updated so we talked and talked and

568
00:30:29,260 --> 00:30:33,309
we decided that we would have a draft

569
00:30:30,789 --> 00:30:37,000
and there was a resin who wants to what

570
00:30:33,309 --> 00:30:39,039
is draft ended up being me so so this

571
00:30:37,000 --> 00:30:42,090
draft is pretty much what we said at

572
00:30:39,039 --> 00:30:44,919
those interim calls and put into words

573
00:30:42,090 --> 00:30:47,199
it's not complicated it's all about

574
00:30:44,919 --> 00:30:48,820
using a sequence number for every option

575
00:30:47,200 --> 00:30:52,120
and being able to signal all the

576
00:30:48,820 --> 00:30:55,300
sequence numbers the leak of

577
00:30:52,120 --> 00:30:58,090
like city is that the sequence number is

578
00:30:55,300 --> 00:31:03,070
in the main Dao because you relied the

579
00:30:58,090 --> 00:31:05,290
options and so basically it's kind of

580
00:31:03,070 --> 00:31:07,000
one sequence number for all the option

581
00:31:05,290 --> 00:31:08,740
if you don't like that approach then we

582
00:31:07,000 --> 00:31:10,240
need to rewrite number of things in this

583
00:31:08,740 --> 00:31:14,650
draft but it's important it's the only

584
00:31:10,240 --> 00:31:17,490
kind of weird thing in this draft is the

585
00:31:14,650 --> 00:31:20,860
number is the number of the DAO all

586
00:31:17,490 --> 00:31:25,060
options considered you change one option

587
00:31:20,860 --> 00:31:26,290
you change this number meaning that you

588
00:31:25,060 --> 00:31:28,750
have to figure out when the number of

589
00:31:26,290 --> 00:31:32,470
changes which options are impacted and

590
00:31:28,750 --> 00:31:35,470
when you're back level from that number

591
00:31:32,470 --> 00:31:37,930
well you need to dig which were the

592
00:31:35,470 --> 00:31:41,140
options that were changed so in order to

593
00:31:37,930 --> 00:31:43,090
be able to do that smoothly we

594
00:31:41,140 --> 00:31:45,580
introduced a new option which is kind of

595
00:31:43,090 --> 00:31:47,290
just giving you option by option the

596
00:31:45,580 --> 00:31:49,330
option number and the sequence at which

597
00:31:47,290 --> 00:31:52,540
it was last updated so you can very

598
00:31:49,330 --> 00:31:55,210
rapidly see the sequence of each

599
00:31:52,540 --> 00:31:57,220
particular option what's the last change

600
00:31:55,210 --> 00:32:00,180
you know where you are so you know which

601
00:31:57,220 --> 00:32:03,250
one has change you get those ones so

602
00:32:00,180 --> 00:32:06,400
basically if you're back level with this

603
00:32:03,250 --> 00:32:09,760
number you send this message to to your

604
00:32:06,400 --> 00:32:11,290
parent and the parent of the parent will

605
00:32:09,760 --> 00:32:13,230
come back to you with everything that

606
00:32:11,290 --> 00:32:15,879
changes since the seconds that you saw

607
00:32:13,230 --> 00:32:17,650
giving you the abbreviated version for

608
00:32:15,880 --> 00:32:20,680
things which need not change so you have

609
00:32:17,650 --> 00:32:23,800
the real number and the unabbreviated

610
00:32:20,680 --> 00:32:26,140
version for those options which did

611
00:32:23,800 --> 00:32:28,210
change so now you re synchronized so

612
00:32:26,140 --> 00:32:31,150
it's really a synchronization protocol

613
00:32:28,210 --> 00:32:34,900
based on a single sequence number for

614
00:32:31,150 --> 00:32:37,450
all options since this equal number

615
00:32:34,900 --> 00:32:38,950
wraps that has the consequence that you

616
00:32:37,450 --> 00:32:41,620
need to increase the sequence number of

617
00:32:38,950 --> 00:32:43,930
each option before the thing wraps so

618
00:32:41,620 --> 00:32:46,120
it's not perfect we might like to do it

619
00:32:43,930 --> 00:32:49,210
slightly differently so it's just a

620
00:32:46,120 --> 00:32:51,780
proposal that's on the paper if we want

621
00:32:49,210 --> 00:32:53,950
to have one sequence number per option

622
00:32:51,780 --> 00:32:55,660
then we will have to signal the

623
00:32:53,950 --> 00:32:58,560
abbreviated version of all options in

624
00:32:55,660 --> 00:33:02,380
every packet which is a lot more costly

625
00:32:58,560 --> 00:33:04,360
so it's a choice the choice right now in

626
00:33:02,380 --> 00:33:05,980
the draft was to put one single sequence

627
00:33:04,360 --> 00:33:07,178
number for our options so you

628
00:33:05,980 --> 00:33:09,460
have to put even the abbreviated

629
00:33:07,179 --> 00:33:12,250
versions that saves you a lot of mites I

630
00:33:09,460 --> 00:33:14,110
mean like 4 bytes per option and if we

631
00:33:12,250 --> 00:33:16,780
want to use this mechanism for more and

632
00:33:14,110 --> 00:33:19,449
more stuff we talked about having the

633
00:33:16,780 --> 00:33:21,040
SLA option we talked about I think I

634
00:33:19,450 --> 00:33:22,330
don't know number of options from

635
00:33:21,040 --> 00:33:24,280
ng-include

636
00:33:22,330 --> 00:33:26,799
into the DAO and you want to abbreviate

637
00:33:24,280 --> 00:33:28,000
them all well I think the list of all

638
00:33:26,799 --> 00:33:30,790
the abbreviation with the sequence

639
00:33:28,000 --> 00:33:32,830
number will start to be big already so I

640
00:33:30,790 --> 00:33:34,690
kind of like the idea that we have a

641
00:33:32,830 --> 00:33:38,168
single sequence for everybody so we

642
00:33:34,690 --> 00:33:40,470
don't put all those things but to be

643
00:33:38,169 --> 00:33:44,290
these guys right I think that's the most

644
00:33:40,470 --> 00:33:46,870
discuss about item apart from that it's

645
00:33:44,290 --> 00:33:48,970
a very simple spectrum I mean straight

646
00:33:46,870 --> 00:33:51,340
to the point I hope I mean very simple

647
00:33:48,970 --> 00:33:53,710
problem to solve very simple solution

648
00:33:51,340 --> 00:33:57,370
apart from this common sequence than

649
00:33:53,710 --> 00:33:59,020
nothing so please review bla bla bla I

650
00:33:57,370 --> 00:34:00,790
mean the problem is still fresh in the

651
00:33:59,020 --> 00:34:04,990
mind of those party will participate it

652
00:34:00,790 --> 00:34:07,870
to the entrance so please you asked me

653
00:34:04,990 --> 00:34:09,219
to write it review it let's move forward

654
00:34:07,870 --> 00:34:18,509
because that's that's something we can

655
00:34:09,219 --> 00:34:18,509
forget soon as we've done it so yeah I

656
00:34:19,590 --> 00:34:25,510
can go through slides now that was a big

657
00:34:24,280 --> 00:34:29,649
introduction I'll just wait for you to

658
00:34:25,510 --> 00:34:31,270
finish this ok so what didn't I say well

659
00:34:29,649 --> 00:34:35,589
the sequence number is called the ripple

660
00:34:31,270 --> 00:34:37,989
configuration state sequence now the DAO

661
00:34:35,590 --> 00:34:40,690
tells you this LCSs which is global to

662
00:34:37,989 --> 00:34:42,759
all the options so now you can fully

663
00:34:40,690 --> 00:34:44,830
light any notion of any of these options

664
00:34:42,760 --> 00:34:51,520
and just say this global sequence number

665
00:34:44,830 --> 00:34:53,409
for all of them we also there was a

666
00:34:51,520 --> 00:34:56,830
question on the mailing list and what do

667
00:34:53,409 --> 00:34:59,170
we do for Dao and you know mostly in

668
00:34:56,830 --> 00:35:01,150
storing mode I mean if nothing changes

669
00:34:59,170 --> 00:35:02,619
that's a lot of now information you

670
00:35:01,150 --> 00:35:06,990
would like to refresh just to refresh

671
00:35:02,619 --> 00:35:09,280
the lifetime or something like that so

672
00:35:06,990 --> 00:35:11,979
now there is a message which is

673
00:35:09,280 --> 00:35:12,460
navigated down which tells you same as

674
00:35:11,980 --> 00:35:14,500
last time

675
00:35:12,460 --> 00:35:16,780
just refresh eliezer the right time so

676
00:35:14,500 --> 00:35:18,160
you give the sequence number of last

677
00:35:16,780 --> 00:35:19,420
time and you say well just the same

678
00:35:18,160 --> 00:35:21,609
refresh lifetime

679
00:35:19,420 --> 00:35:25,569
so that makes a single message

680
00:35:21,609 --> 00:35:27,279
refreshing or thing equal for very lower

681
00:35:25,569 --> 00:35:28,960
cost so that that was actually one of

682
00:35:27,279 --> 00:35:33,849
the new thing compared to the interim

683
00:35:28,960 --> 00:35:38,130
that was meaningless discussion so we

684
00:35:33,849 --> 00:35:41,410
have a new object to request the the

685
00:35:38,130 --> 00:35:43,690
last version of the options in the desk

686
00:35:41,410 --> 00:35:46,269
so you say what what is your view of the

687
00:35:43,690 --> 00:35:48,279
last sequence so the parent can decide

688
00:35:46,269 --> 00:35:49,720
there is also a discussion like if two

689
00:35:48,279 --> 00:35:51,190
parents don't have the same sequence

690
00:35:49,720 --> 00:35:53,649
that means one of them is kind of

691
00:35:51,190 --> 00:35:55,269
obsolete you might have a parent which

692
00:35:53,650 --> 00:35:57,190
is not aware of the changes and the

693
00:35:55,269 --> 00:35:58,779
other that yes so obviously the text

694
00:35:57,190 --> 00:36:00,660
tells you use the parent which is aware

695
00:35:58,779 --> 00:36:03,700
of the most recent change right

696
00:36:00,660 --> 00:36:05,470
Rahul Jadhav regarding the abbreviated

697
00:36:03,700 --> 00:36:07,899
option so then the assumption is that

698
00:36:05,470 --> 00:36:09,848
the DAO traverses the same path as

699
00:36:07,900 --> 00:36:11,890
before yes but it might it might

700
00:36:09,849 --> 00:36:14,019
Traverse a different path and it might

701
00:36:11,890 --> 00:36:16,089
update the different path if you have

702
00:36:14,019 --> 00:36:17,950
ions that didn't get the same Dao as

703
00:36:16,089 --> 00:36:20,529
last time you cannot use that you have

704
00:36:17,950 --> 00:36:22,149
to give him everything but but the node

705
00:36:20,529 --> 00:36:24,400
itself which is which is sending the dow

706
00:36:22,150 --> 00:36:27,039
doesn't know oh yeah yeah i mean if

707
00:36:24,400 --> 00:36:28,900
something changes you have to update all

708
00:36:27,039 --> 00:36:32,109
right you have to update that yeah but

709
00:36:28,900 --> 00:36:35,049
but but the AO ability adoption is is

710
00:36:32,109 --> 00:36:38,170
the responsibility of the of the node to

711
00:36:35,049 --> 00:36:40,869
be a node sending it and that node is

712
00:36:38,170 --> 00:36:42,700
not aware that something in between has

713
00:36:40,869 --> 00:36:44,559
changed the path is going is not going

714
00:36:42,700 --> 00:36:46,240
to be the same so if it's a in sense an

715
00:36:44,559 --> 00:36:47,740
abbreviated option all the all the all

716
00:36:46,240 --> 00:36:50,589
the intermediates Excel ours are not

717
00:36:47,740 --> 00:36:56,470
available on aware of the latest latest

718
00:36:50,589 --> 00:36:58,599
information if we can discuss that on

719
00:36:56,470 --> 00:37:00,939
the mailing list but my feeling is if a

720
00:36:58,599 --> 00:37:03,130
parent of so the child sends the

721
00:37:00,940 --> 00:37:04,690
abbreviated saying oh no change the

722
00:37:03,130 --> 00:37:08,799
parent gets that but she has a new

723
00:37:04,690 --> 00:37:10,180
parent for the parent which was old yeah

724
00:37:08,799 --> 00:37:11,829
you can send the abbreviated for the

725
00:37:10,180 --> 00:37:14,140
parent which is new he sends some based

726
00:37:11,829 --> 00:37:15,880
on its own state but you need again to

727
00:37:14,140 --> 00:37:17,348
be able to reveal the state that's what

728
00:37:15,880 --> 00:37:19,029
your discussion yesterday right the

729
00:37:17,349 --> 00:37:21,369
assumption is you can always reveal the

730
00:37:19,029 --> 00:37:23,589
down from your state so if you have a

731
00:37:21,369 --> 00:37:26,160
new parent which is not aware of the

732
00:37:23,589 --> 00:37:30,730
last variation you need to tell him

733
00:37:26,160 --> 00:37:32,589
makes sense so a BC right a stands in

734
00:37:30,730 --> 00:37:36,430
abbreviate it B knows

735
00:37:32,590 --> 00:37:38,200
everybody say else not challenge D knew

736
00:37:36,430 --> 00:37:40,660
that so you can send the abbreviated II

737
00:37:38,200 --> 00:37:43,509
did not know it new parent you have to

738
00:37:40,660 --> 00:37:45,279
send a full version yet the only problem

739
00:37:43,510 --> 00:37:47,380
that I see is now with with with with

740
00:37:45,280 --> 00:37:49,660
the rich information that we are we

741
00:37:47,380 --> 00:37:53,980
which were propagating with the

742
00:37:49,660 --> 00:37:56,830
capabilities are we expecting every node

743
00:37:53,980 --> 00:37:59,500
to keep the capability in the routing

744
00:37:56,830 --> 00:38:01,120
table in context to each of the node

745
00:37:59,500 --> 00:38:03,850
below it because that's a big

746
00:38:01,120 --> 00:38:07,779
information and we may not be able to do

747
00:38:03,850 --> 00:38:09,759
aggregated now in that sense you know

748
00:38:07,780 --> 00:38:11,920
the capability is an interesting thing

749
00:38:09,760 --> 00:38:13,960
because if we if we say we'll define

750
00:38:11,920 --> 00:38:15,940
this new messaging for gathering

751
00:38:13,960 --> 00:38:18,430
capabilities that it's not part of the

752
00:38:15,940 --> 00:38:20,800
DAO so it's not really in our discussion

753
00:38:18,430 --> 00:38:23,379
it's only for whatever we would like to

754
00:38:20,800 --> 00:38:24,790
place in down messages I don't know if

755
00:38:23,380 --> 00:38:27,010
we'll place capabilities into our

756
00:38:24,790 --> 00:38:28,300
messages so I think it's gonna be all

757
00:38:27,010 --> 00:38:30,790
this new message you have to define

758
00:38:28,300 --> 00:38:33,550
right so essentially I thought either we

759
00:38:30,790 --> 00:38:35,740
need to see that that we cannot send

760
00:38:33,550 --> 00:38:38,560
capabilities endow or we cannot depend

761
00:38:35,740 --> 00:38:40,359
on the intermediates Excel ours to know

762
00:38:38,560 --> 00:38:42,730
the capability on behalf of all the sub

763
00:38:40,360 --> 00:38:45,630
do that so when we define the capability

764
00:38:42,730 --> 00:38:48,820
we have to be very careful about this

765
00:38:45,630 --> 00:38:51,040
so right now there only five options but

766
00:38:48,820 --> 00:38:54,040
that one of the big thing that this

767
00:38:51,040 --> 00:38:55,750
specification gives us apart from now

768
00:38:54,040 --> 00:38:57,730
the network can live on and you can

769
00:38:55,750 --> 00:39:00,220
update its configuration safely bla bla

770
00:38:57,730 --> 00:39:03,130
bla is that we'll be able to have more

771
00:39:00,220 --> 00:39:05,649
options in repo so put more of nd into

772
00:39:03,130 --> 00:39:09,190
repo like a cellular option and whatever

773
00:39:05,650 --> 00:39:12,220
else because doesn't cost as long as it

774
00:39:09,190 --> 00:39:14,830
can be lighted it can be safely United

775
00:39:12,220 --> 00:39:17,080
now so that that's kind of the big thing

776
00:39:14,830 --> 00:39:19,270
is this draft is simple but it really

777
00:39:17,080 --> 00:39:21,730
opens up for a future where a live

778
00:39:19,270 --> 00:39:26,020
network evolves basically the

779
00:39:21,730 --> 00:39:28,510
configuration challenges the prefix is

780
00:39:26,020 --> 00:39:32,950
updated things like that now we can

781
00:39:28,510 --> 00:39:35,620
safely say oh everybody will would be

782
00:39:32,950 --> 00:39:37,299
aware as soon as he gets a dial that the

783
00:39:35,620 --> 00:39:38,920
prefix has changed so even if it's a

784
00:39:37,300 --> 00:39:41,500
prefix that they will be able to pull it

785
00:39:38,920 --> 00:39:45,090
and now we will know so that makes you

786
00:39:41,500 --> 00:39:46,480
know our network much more manageable or

787
00:39:45,090 --> 00:39:49,060
can live for

788
00:39:46,480 --> 00:39:51,190
much longer time in a lot of what we are

789
00:39:49,060 --> 00:39:53,799
doing with this ripple v2 is to do go

790
00:39:51,190 --> 00:39:55,840
around broad networks and live networks

791
00:39:53,800 --> 00:39:57,610
right and keep them alive all the time

792
00:39:55,840 --> 00:39:58,780
we can't just stop them and start them

793
00:39:57,610 --> 00:40:04,840
again it's very hard when you're

794
00:39:58,780 --> 00:40:06,310
thousands of nodes so so this is the

795
00:40:04,840 --> 00:40:08,620
abbreviated option that I discussed

796
00:40:06,310 --> 00:40:11,380
which replaced the full option so so

797
00:40:08,620 --> 00:40:13,450
basically all it says is it's so it's

798
00:40:11,380 --> 00:40:16,900
there is only one abbreviated option

799
00:40:13,450 --> 00:40:19,899
right it's not one per option so the

800
00:40:16,900 --> 00:40:23,170
abbreviated option is the abbreviated

801
00:40:19,900 --> 00:40:32,350
option and what it tells you is the

802
00:40:23,170 --> 00:40:34,000
option value that I'm carrying is the

803
00:40:32,350 --> 00:40:35,470
option that's being abbreviated and next

804
00:40:34,000 --> 00:40:38,020
to it is the sequence number associated

805
00:40:35,470 --> 00:40:40,359
so you will you can find five times this

806
00:40:38,020 --> 00:40:41,920
thing with five different values of the

807
00:40:40,360 --> 00:40:43,660
abbreviated option meaning pio

808
00:40:41,920 --> 00:40:45,730
configuration blah blah blah five of

809
00:40:43,660 --> 00:40:49,629
them and for each one you will sindelle

810
00:40:45,730 --> 00:40:55,330
the last LCSs for which the assumption

811
00:40:49,630 --> 00:40:58,360
was modified so we we can we updated

812
00:40:55,330 --> 00:41:01,000
this message and this please challenge

813
00:40:58,360 --> 00:41:05,170
this because it's not necessarily needed

814
00:41:01,000 --> 00:41:06,880
think about it we use some of the flags

815
00:41:05,170 --> 00:41:09,730
to say I want this I want this I want

816
00:41:06,880 --> 00:41:12,520
this I want that but at the same time we

817
00:41:09,730 --> 00:41:14,620
also say here is the SES s so on the

818
00:41:12,520 --> 00:41:16,840
child I'm sending this this and I'm

819
00:41:14,620 --> 00:41:18,569
saying eh here is the last sequence to

820
00:41:16,840 --> 00:41:23,830
which I was sequence I was synchronized

821
00:41:18,570 --> 00:41:28,079
so the parent could decide everything

822
00:41:23,830 --> 00:41:31,979
that challenge and push it to the child

823
00:41:28,079 --> 00:41:34,949
on this I'm on that the reason for the

824
00:41:31,979 --> 00:41:36,419
flag is like okay this information has

825
00:41:34,949 --> 00:41:38,759
changed but they don't care I'm not

826
00:41:36,420 --> 00:41:40,979
using it I don't know which

827
00:41:38,759 --> 00:41:43,589
configuration that would be but if one

828
00:41:40,979 --> 00:41:45,868
of those five things is of no interest

829
00:41:43,589 --> 00:41:50,038
to the child then you would not set the

830
00:41:45,869 --> 00:41:51,739
bet is it a valuable thing to do I'm not

831
00:41:50,039 --> 00:41:56,309
sure it's just a proposal on the table

832
00:41:51,739 --> 00:41:59,429
if we don't define those five flags then

833
00:41:56,309 --> 00:42:01,199
the parent will give you everything that

834
00:41:59,429 --> 00:42:05,910
changed since your sequence number

835
00:42:01,199 --> 00:42:08,239
there's gonna be ad works so you tell me

836
00:42:05,910 --> 00:42:12,269
if those flags are useful or not and

837
00:42:08,239 --> 00:42:14,999
personally I don't know I don't really

838
00:42:12,269 --> 00:42:20,910
have a case where a child would not care

839
00:42:14,999 --> 00:42:24,988
about an option it's consuming five

840
00:42:20,910 --> 00:42:31,439
minutes so I can erase that on the next

841
00:42:24,989 --> 00:42:33,119
version you just tell me if you have a

842
00:42:31,439 --> 00:42:36,420
long time then we can read this I won't

843
00:42:33,119 --> 00:42:40,140
read it you can read it so that's the

844
00:42:36,420 --> 00:42:42,089
mechanism so part of the discussion is

845
00:42:40,140 --> 00:42:44,519
can you detect a reboot of your parent

846
00:42:42,089 --> 00:42:48,538
or actually it's a route that cites the

847
00:42:44,519 --> 00:42:51,328
RCSS can we can we find reboot and the

848
00:42:48,539 --> 00:42:54,719
idea is yes because the straight part is

849
00:42:51,329 --> 00:42:58,920
very short this time and it should be

850
00:42:54,719 --> 00:43:00,989
incremented rapidly so the time during

851
00:42:58,920 --> 00:43:02,759
which a reboot cannot be identified is

852
00:43:00,989 --> 00:43:04,859
actually very short I don't remember

853
00:43:02,759 --> 00:43:07,469
what initial value I'd put for a CSS but

854
00:43:04,859 --> 00:43:11,009
baby is 250 for something which means

855
00:43:07,469 --> 00:43:13,259
that one or two changes of the our CSS

856
00:43:11,009 --> 00:43:18,119
and Bank during the run part and you

857
00:43:13,259 --> 00:43:19,799
will detect a reboot so it's it's still

858
00:43:18,119 --> 00:43:23,999
imperfect because of the straight part

859
00:43:19,799 --> 00:43:25,829
of the lollipop but it's the windows

860
00:43:23,999 --> 00:43:28,799
will be very very small where you don't

861
00:43:25,829 --> 00:43:32,069
detect a reboot Aled something you

862
00:43:28,799 --> 00:43:34,079
didn't say Raul yesterday is even if

863
00:43:32,069 --> 00:43:36,239
okay so this you are here in the

864
00:43:34,079 --> 00:43:38,759
straight path somewhere and you reboot

865
00:43:36,239 --> 00:43:40,769
so you go down the straight path so when

866
00:43:38,759 --> 00:43:41,880
you increment you won't detect but you

867
00:43:40,769 --> 00:43:43,529
will end up increment

868
00:43:41,880 --> 00:43:45,870
past the previous value and at this

869
00:43:43,530 --> 00:43:47,940
point you detect you at this point you

870
00:43:45,870 --> 00:43:48,600
think I'm sorry so it's not like you're

871
00:43:47,940 --> 00:43:52,790
stuck fiver

872
00:43:48,600 --> 00:43:56,520
oh okay explain the data offline but

873
00:43:52,790 --> 00:43:58,980
basically if you go left to go back in

874
00:43:56,520 --> 00:44:01,590
time on the straight part but you

875
00:43:58,980 --> 00:44:03,600
increment rapidly there is a point where

876
00:44:01,590 --> 00:44:05,550
you will pass the old value and at this

877
00:44:03,600 --> 00:44:07,680
time people will detect your you know

878
00:44:05,550 --> 00:44:09,600
where you are so that they will at least

879
00:44:07,680 --> 00:44:12,049
learn the new configuration you're not

880
00:44:09,600 --> 00:44:15,240
stuck with the old configuration forever

881
00:44:12,050 --> 00:44:27,150
I'm clear I'm not clear okay we have

882
00:44:15,240 --> 00:44:29,939
time but but I not have a whiteboard I

883
00:44:27,150 --> 00:44:32,040
think regardless of this point we need

884
00:44:29,940 --> 00:44:33,600
to we need to talk about the lollipop

885
00:44:32,040 --> 00:44:37,170
counter and the impact on persistence

886
00:44:33,600 --> 00:44:41,250
story separately okay it's just that I

887
00:44:37,170 --> 00:44:44,790
don't expect that the lollipop in the

888
00:44:41,250 --> 00:44:47,100
CIO is an efficient tool use you said it

889
00:44:44,790 --> 00:44:50,279
it's not an efficient tool for detecting

890
00:44:47,100 --> 00:44:53,009
reboot I'm trying to make a CSS a more

891
00:44:50,280 --> 00:44:56,340
efficient tool to detect reboot it's not

892
00:44:53,010 --> 00:44:58,200
perfect but it's already tuned for two

893
00:44:56,340 --> 00:45:01,350
reasons to be much more efficient first

894
00:44:58,200 --> 00:45:03,210
reason too much shorter a straight path

895
00:45:01,350 --> 00:45:04,920
second much faster updates you can

896
00:45:03,210 --> 00:45:06,990
update it and update it and update it

897
00:45:04,920 --> 00:45:08,820
doesn't cost much and it's not like

898
00:45:06,990 --> 00:45:12,990
having to reveal the diag or anything

899
00:45:08,820 --> 00:45:14,610
right but so my what I want to say here

900
00:45:12,990 --> 00:45:16,950
is the you and you mentioned it already

901
00:45:14,610 --> 00:45:18,510
that you know the straight part how long

902
00:45:16,950 --> 00:45:19,980
is that straight part going to be and

903
00:45:18,510 --> 00:45:22,320
you said it should be shorter a shorter

904
00:45:19,980 --> 00:45:24,450
as possible it has both implications it

905
00:45:22,320 --> 00:45:28,020
has advantages disadvantages so those

906
00:45:24,450 --> 00:45:29,279
have to be considered yes I think that

907
00:45:28,020 --> 00:45:36,420
we should have a different separate

908
00:45:29,280 --> 00:45:40,230
discussion for the server so right now

909
00:45:36,420 --> 00:45:42,660
to rethink a child will basically

910
00:45:40,230 --> 00:45:44,460
indicate the last sequence that he knows

911
00:45:42,660 --> 00:45:46,379
about so it basically is the state of

912
00:45:44,460 --> 00:45:48,690
his database if you are used to thinking

913
00:45:46,380 --> 00:45:50,700
LSD B's and some of you guys are it's

914
00:45:48,690 --> 00:45:53,280
pretty much the same major you have your

915
00:45:50,700 --> 00:45:55,890
horn on sequence for for each of the

916
00:45:53,280 --> 00:45:59,460
options and implicitly

917
00:45:55,890 --> 00:46:03,598
so each option bears the sequence of the

918
00:45:59,460 --> 00:46:05,910
last time it was presented info and so

919
00:46:03,599 --> 00:46:09,150
you know why you are elastic once I saw

920
00:46:05,910 --> 00:46:10,529
was 20 and I see that the GAO has 23 so

921
00:46:09,150 --> 00:46:11,999
that must have been three changes that

922
00:46:10,529 --> 00:46:14,339
I'm not aware of but I don't know what

923
00:46:11,999 --> 00:46:16,859
those changes are so I said this to the

924
00:46:14,339 --> 00:46:18,599
parent with 20 and the crown should be

925
00:46:16,859 --> 00:46:21,210
should send me back everything I need

926
00:46:18,599 --> 00:46:23,069
all the way to 23 it might need more

927
00:46:21,210 --> 00:46:27,960
than one message to get there because of

928
00:46:23,069 --> 00:46:30,480
MTU okay so to make sure that I have all

929
00:46:27,960 --> 00:46:32,700
the information all the way to 23 I need

930
00:46:30,480 --> 00:46:35,009
to see all the options either in the

931
00:46:32,700 --> 00:46:36,689
abbreviated form or in the full form if

932
00:46:35,009 --> 00:46:38,489
the option does change the route the

933
00:46:36,690 --> 00:46:41,339
parent will set it me in the full form

934
00:46:38,489 --> 00:46:43,650
with the newer CSS I'm done if the

935
00:46:41,339 --> 00:46:46,078
option was not changed between 20 and 23

936
00:46:43,650 --> 00:46:48,809
the parent will send me the option in

937
00:46:46,079 --> 00:46:51,450
the abbreviated form saying 19 or

938
00:46:48,809 --> 00:46:54,089
whatever so so I know that even if I'm

939
00:46:51,450 --> 00:46:56,279
at 23 deception was still in 19 and they

940
00:46:54,089 --> 00:46:59,788
did not need to get a new value for it

941
00:46:56,279 --> 00:47:01,440
so that's how it works now like I said

942
00:46:59,789 --> 00:47:03,539
there are those five bits which are the

943
00:47:01,440 --> 00:47:07,440
five option we can alight and the child

944
00:47:03,539 --> 00:47:09,420
can actually right now most indicate

945
00:47:07,440 --> 00:47:11,279
which one it wants and if it's always

946
00:47:09,420 --> 00:47:15,480
all once then maybe we can avoid those

947
00:47:11,279 --> 00:47:19,739
flags just a short question does that

948
00:47:15,480 --> 00:47:21,450
mean the Alexander yes yes so is it

949
00:47:19,739 --> 00:47:23,220
possible so does that mean that the

950
00:47:21,450 --> 00:47:24,899
nodes need to keep the full story the

951
00:47:23,220 --> 00:47:27,828
full history of the options as they

952
00:47:24,900 --> 00:47:31,289
change the node needs to know the latest

953
00:47:27,829 --> 00:47:33,180
version not the full story I mean in

954
00:47:31,289 --> 00:47:39,420
finishing if you get a cab and version

955
00:47:33,180 --> 00:47:41,879
23 and you want the latest of each right

956
00:47:39,420 --> 00:47:45,019
so the parent will tell you it doesn't

957
00:47:41,880 --> 00:47:50,099
care what you know you it cares about

958
00:47:45,019 --> 00:47:52,189
the deliverer while you are and I mean

959
00:47:50,099 --> 00:47:55,980
okay if you know that you're on level 20

960
00:47:52,190 --> 00:47:58,049
the child is level 20 option 5 is 21 say

961
00:47:55,980 --> 00:48:01,799
so the route the parent knows that

962
00:47:58,049 --> 00:48:04,019
option 5 is 21 so 21 above 20 I need so

963
00:48:01,799 --> 00:48:07,200
needed for whether light was changed for

964
00:48:04,019 --> 00:48:09,359
21 22 23 I don't care I just have to

965
00:48:07,200 --> 00:48:11,910
know it was changed since 20

966
00:48:09,359 --> 00:48:14,130
so I have to sell it info okay so it's

967
00:48:11,910 --> 00:48:24,839
not these stories the latest is okay

968
00:48:14,130 --> 00:48:26,730
yeah okay like I said you you can easily

969
00:48:24,839 --> 00:48:29,220
spread them about more than one di oh

970
00:48:26,730 --> 00:48:30,839
but if most of them were not changed

971
00:48:29,220 --> 00:48:33,359
then they are only sent in the

972
00:48:30,839 --> 00:48:34,799
abbreviated form so that the expectation

973
00:48:33,359 --> 00:48:38,730
is most of the time you don't want to

974
00:48:34,799 --> 00:48:46,670
spread them into multiple dials and

975
00:48:38,730 --> 00:48:50,910
that's pretty much thank you very much

976
00:48:46,670 --> 00:48:52,769
Rahul yeah so when one of the

977
00:48:50,910 --> 00:48:55,348
modifications that we have seen was with

978
00:48:52,769 --> 00:48:57,058
regards to the dis modifications in in

979
00:48:55,349 --> 00:48:59,489
the same draft so we have decided to

980
00:48:57,059 --> 00:49:01,859
combine the work for dis modifications

981
00:48:59,489 --> 00:49:04,739
with daylighting and we have that couple

982
00:49:01,859 --> 00:49:06,359
of options but how we haven't really

983
00:49:04,739 --> 00:49:12,480
talked about it right so yeah that's

984
00:49:06,359 --> 00:49:15,029
true I mean so yes let me give you some

985
00:49:12,480 --> 00:49:16,829
context here so there was there was a

986
00:49:15,029 --> 00:49:18,690
draft about this I hope we are talking

987
00:49:16,829 --> 00:49:21,059
about the same thing there was a draft

988
00:49:18,690 --> 00:49:24,029
about providing some options to Adeus to

989
00:49:21,059 --> 00:49:26,039
decide whether the answer should be

990
00:49:24,029 --> 00:49:31,049
multicast or unicast and things like

991
00:49:26,039 --> 00:49:32,119
that and so the discussion was I just

992
00:49:31,049 --> 00:49:34,710
like two bits

993
00:49:32,119 --> 00:49:36,809
couldn't we package that discussion into

994
00:49:34,710 --> 00:49:39,299
this draft and I'm completely positive

995
00:49:36,809 --> 00:49:46,499
with that gate and we want feedback and

996
00:49:39,299 --> 00:49:48,630
yes yeah just an updated on that I think

997
00:49:46,499 --> 00:49:53,788
we published a new version after the I

998
00:49:48,630 --> 00:49:56,160
mean right now okay so it's only github

999
00:49:53,789 --> 00:50:00,029
but not published yet we've started

1000
00:49:56,160 --> 00:50:02,609
merging those two draft so in the

1001
00:50:00,029 --> 00:50:04,710
current most updated version I'm

1002
00:50:02,609 --> 00:50:08,430
proposing that the two bits we had in AD

1003
00:50:04,710 --> 00:50:12,029
is modification draft be the two bits

1004
00:50:08,430 --> 00:50:14,249
that are left in Pascal's format and

1005
00:50:12,029 --> 00:50:15,390
there are more questions that we had in

1006
00:50:14,249 --> 00:50:17,848
it yes

1007
00:50:15,390 --> 00:50:19,980
modification dress which which word we

1008
00:50:17,849 --> 00:50:22,349
reset the trickle timer do we respond

1009
00:50:19,980 --> 00:50:22,950
back with a unicast or multicast the

1010
00:50:22,349 --> 00:50:24,450
arrows

1011
00:50:22,950 --> 00:50:29,910
and I think all these questions are

1012
00:50:24,450 --> 00:50:33,180
relevant to pascals occurring options as

1013
00:50:29,910 --> 00:50:35,790
well so we're going to work on that

1014
00:50:33,180 --> 00:50:38,250
together so that the intention is indeed

1015
00:50:35,790 --> 00:50:41,279
to merge yes modification graphs into

1016
00:50:38,250 --> 00:50:44,369
this one yes I have some comments about

1017
00:50:41,280 --> 00:50:45,900
those two bids so if we have tied and

1018
00:50:44,369 --> 00:50:47,849
then we can start the work on this piece

1019
00:50:45,900 --> 00:50:49,770
yes we have time so if we can have agree

1020
00:50:47,849 --> 00:50:51,480
that it's a good idea to just put them

1021
00:50:49,770 --> 00:50:55,170
in here as opposed to having a draft for

1022
00:50:51,480 --> 00:50:57,359
that the first thing is the original

1023
00:50:55,170 --> 00:51:00,299
repo gives you oh if the message was

1024
00:50:57,359 --> 00:51:02,279
unicast or multicast then you should

1025
00:51:00,299 --> 00:51:04,980
reset this or not all you should respond

1026
00:51:02,280 --> 00:51:10,079
unicast or multicast you don't show me

1027
00:51:04,980 --> 00:51:12,869
yeah so the repo specification basically

1028
00:51:10,079 --> 00:51:15,390
gave you complex behavior which we

1029
00:51:12,869 --> 00:51:27,200
depends on of the request if the request

1030
00:51:15,390 --> 00:51:33,650
is unicast or multicast or if the yes

1031
00:51:27,200 --> 00:51:35,939
yes so the bits should not signal

1032
00:51:33,650 --> 00:51:38,549
whether you use trigger or well use

1033
00:51:35,940 --> 00:51:40,640
multicast in my mind they should signal

1034
00:51:38,549 --> 00:51:42,980
whether you reverse the repo behavior

1035
00:51:40,640 --> 00:51:46,680
because otherwise you need a third bit

1036
00:51:42,980 --> 00:51:48,390
if you want to be able to signal because

1037
00:51:46,680 --> 00:51:49,919
if you basically want to send a

1038
00:51:48,390 --> 00:51:53,879
multicast but you want to reverse the

1039
00:51:49,920 --> 00:51:56,160
behavior of repo to respond multicast I

1040
00:51:53,880 --> 00:51:58,349
don't know then then the bid should

1041
00:51:56,160 --> 00:51:59,819
signal a do the reverse of what ripple

1042
00:51:58,349 --> 00:52:01,770
does otherwise I don't set the bit and

1043
00:51:59,819 --> 00:52:03,509
we are back to original repo because if

1044
00:52:01,770 --> 00:52:05,549
you have to live with legacy nodes which

1045
00:52:03,510 --> 00:52:08,250
don't support your stuff I mean that

1046
00:52:05,549 --> 00:52:10,829
must be a way to say eh when the bit is

1047
00:52:08,250 --> 00:52:13,740
0 it really means something new right

1048
00:52:10,829 --> 00:52:15,960
right and so you'd need a third bit to

1049
00:52:13,740 --> 00:52:20,040
say eh and in this new mode where I'm

1050
00:52:15,960 --> 00:52:23,250
doing those things unless you say eh the

1051
00:52:20,040 --> 00:52:25,650
value 0 is always what ripple did before

1052
00:52:23,250 --> 00:52:27,750
so I'm backward compatible in which case

1053
00:52:25,650 --> 00:52:31,710
when you set the value 1 you reverse

1054
00:52:27,750 --> 00:52:33,390
what ripple was doing so so depending on

1055
00:52:31,710 --> 00:52:36,239
whether it's unicast or multicast and

1056
00:52:33,390 --> 00:52:39,328
blah blah then the setting the

1057
00:52:36,239 --> 00:52:42,479
would reverse that you see what I I hear

1058
00:52:39,329 --> 00:52:44,699
what you're saying I think it's been

1059
00:52:42,479 --> 00:52:46,468
some time since we've updated the das

1060
00:52:44,699 --> 00:52:48,929
modification draft but I think they

1061
00:52:46,469 --> 00:52:51,059
current ripple behavior is too complex

1062
00:52:48,929 --> 00:52:54,539
so that you can reverse it with just one

1063
00:52:51,059 --> 00:52:57,929
bit because it has all these cases so

1064
00:52:54,539 --> 00:53:01,379
what we did is we had one bit which was

1065
00:52:57,929 --> 00:53:03,269
a no inconsistency bed which basically

1066
00:53:01,379 --> 00:53:06,328
when it was said to zero which was a

1067
00:53:03,269 --> 00:53:10,379
reserved value anyway in the original

1068
00:53:06,329 --> 00:53:12,119
draft would not change current ripple

1069
00:53:10,379 --> 00:53:17,788
behavior so we had backward

1070
00:53:12,119 --> 00:53:21,899
compatibility and so we need to we can

1071
00:53:17,789 --> 00:53:23,939
allocate time the other piece is is I

1072
00:53:21,899 --> 00:53:25,799
talked to the team implementing that at

1073
00:53:23,939 --> 00:53:28,529
Cisco and they are this interesting

1074
00:53:25,799 --> 00:53:31,889
observation like they would like to be

1075
00:53:28,529 --> 00:53:37,589
able to sound the disks in the form of

1076
00:53:31,889 --> 00:53:39,569
multicast so has to cancel the emission

1077
00:53:37,589 --> 00:53:41,578
of ADIZ by other nodes so if for

1078
00:53:39,569 --> 00:53:45,709
instance that is this case what that we

1079
00:53:41,579 --> 00:53:49,289
call power outage where all the nodes

1080
00:53:45,709 --> 00:53:51,089
die together right and now they restart

1081
00:53:49,289 --> 00:53:54,209
and guess what they all want to send it

1082
00:53:51,089 --> 00:53:57,269
is but if they trickle out this thing

1083
00:53:54,209 --> 00:53:59,549
one will send first if if the deceased

1084
00:53:57,269 --> 00:54:02,519
sends unique ask to the old parrot to a

1085
00:53:59,549 --> 00:54:04,999
previous part then the other children

1086
00:54:02,519 --> 00:54:08,999
won't hear it so they won't be able to

1087
00:54:04,999 --> 00:54:11,669
refrain from sending ideas and so what

1088
00:54:08,999 --> 00:54:13,558
they really want to achieve is I want to

1089
00:54:11,669 --> 00:54:15,479
send these to my previous parent because

1090
00:54:13,559 --> 00:54:17,359
probably I'm rebuilding the same network

1091
00:54:15,479 --> 00:54:22,259
so I want to send this unicast

1092
00:54:17,359 --> 00:54:24,569
but still I want the other children - I

1093
00:54:22,259 --> 00:54:29,549
want the unicast behavior of ripple for

1094
00:54:24,569 --> 00:54:31,499
for this like not resetting the well we

1095
00:54:29,549 --> 00:54:33,538
have to look at that but the bottom line

1096
00:54:31,499 --> 00:54:38,249
is I want the other guys to hear that I

1097
00:54:33,539 --> 00:54:39,779
sent is dis dis so they don't sell the

1098
00:54:38,249 --> 00:54:41,698
dis they just wait for the DI or

1099
00:54:39,779 --> 00:54:43,049
multicast from the parent so basically

1100
00:54:41,699 --> 00:54:45,689
out if I'm the winner

1101
00:54:43,049 --> 00:54:48,119
I sanded this first I won't set the bid

1102
00:54:45,689 --> 00:54:49,770
so the response is multicast I don't

1103
00:54:48,119 --> 00:54:51,060
necessarily want to

1104
00:54:49,770 --> 00:54:53,160
to reset Treecko that's another

1105
00:54:51,060 --> 00:54:54,779
discussion well maybe I do because I

1106
00:54:53,160 --> 00:54:56,040
generate yeah I need to reset trick-or

1107
00:54:54,780 --> 00:54:58,110
because that's how it generates a

1108
00:54:56,040 --> 00:55:01,920
multicast so at the end of the day yes I

1109
00:54:58,110 --> 00:55:04,140
would set the multicast bit but I want

1110
00:55:01,920 --> 00:55:07,560
that even the dis is heard by the other

1111
00:55:04,140 --> 00:55:09,359
guys so in the meantime between ice and

1112
00:55:07,560 --> 00:55:11,730
the DS and the multicast response is

1113
00:55:09,360 --> 00:55:13,140
sound the other guys don't also send

1114
00:55:11,730 --> 00:55:16,290
this which could interfere with the DI

1115
00:55:13,140 --> 00:55:18,029
oh right because this is a use case

1116
00:55:16,290 --> 00:55:21,150
that's already described in ATS

1117
00:55:18,030 --> 00:55:25,050
modification draft but so far we

1118
00:55:21,150 --> 00:55:28,050
expected the DI oh that would be sent as

1119
00:55:25,050 --> 00:55:31,170
a multicast to be heard by all the

1120
00:55:28,050 --> 00:55:34,050
neighboring nodes and you're going a

1121
00:55:31,170 --> 00:55:36,300
step further having the other notes over

1122
00:55:34,050 --> 00:55:37,619
here the D is was that refrained from

1123
00:55:36,300 --> 00:55:41,520
sending their own dears

1124
00:55:37,619 --> 00:55:46,470
so it's even and so better we look at we

1125
00:55:41,520 --> 00:55:49,560
looked at that and we thought that we

1126
00:55:46,470 --> 00:55:51,930
could have a multicast address which is

1127
00:55:49,560 --> 00:55:55,140
derived from the parent so we already in

1128
00:55:51,930 --> 00:55:58,529
v6 of our SC 2630 I don't remember what

1129
00:55:55,140 --> 00:56:01,259
which is how you derive a multicast

1130
00:55:58,530 --> 00:56:04,440
address from a prefix right this exists

1131
00:56:01,260 --> 00:56:07,680
there is there is an automatic formation

1132
00:56:04,440 --> 00:56:09,960
of an ipv6 multicast group per prefix

1133
00:56:07,680 --> 00:56:12,118
here everybody has the same prefix we

1134
00:56:09,960 --> 00:56:14,640
don't care about the prefix but we would

1135
00:56:12,119 --> 00:56:16,440
love to be able to configure a multicast

1136
00:56:14,640 --> 00:56:19,770
address within the current prefix of

1137
00:56:16,440 --> 00:56:22,530
this ripple domain for the surfing store

1138
00:56:19,770 --> 00:56:24,600
the ID of the parent meaning that if you

1139
00:56:22,530 --> 00:56:26,580
have a charge of this parent you would

1140
00:56:24,600 --> 00:56:28,170
always listen to that multicast address

1141
00:56:26,580 --> 00:56:30,299
and obviously the parent himself would

1142
00:56:28,170 --> 00:56:32,730
listen to that multicast address so when

1143
00:56:30,300 --> 00:56:35,130
you sell ad I get to that multicast

1144
00:56:32,730 --> 00:56:36,330
address only the parent can reply with

1145
00:56:35,130 --> 00:56:39,510
the multicast Dao

1146
00:56:36,330 --> 00:56:41,430
but the other guys hear it so now they

1147
00:56:39,510 --> 00:56:44,310
refrain from sending the DES so the

1148
00:56:41,430 --> 00:56:46,529
trick we had in mind was to to create

1149
00:56:44,310 --> 00:56:48,840
this new multicast address that would

1150
00:56:46,530 --> 00:56:51,150
just be this parent and this children

1151
00:56:48,840 --> 00:56:53,580
and there is a side effect to this which

1152
00:56:51,150 --> 00:56:56,250
is quite interesting is the children

1153
00:56:53,580 --> 00:56:58,380
will do MLD to their parent to say I am

1154
00:56:56,250 --> 00:57:00,480
listener and now that gives you a way

1155
00:56:58,380 --> 00:57:02,760
for a child to declare to the parent and

1156
00:57:00,480 --> 00:57:03,690
your child because the way we did

1157
00:57:02,760 --> 00:57:07,380
non-story

1158
00:57:03,690 --> 00:57:09,390
the child sends a packet to the root but

1159
00:57:07,380 --> 00:57:11,339
the parent doesn't Reno if he has

1160
00:57:09,390 --> 00:57:13,078
children I mean it can infer it from

1161
00:57:11,339 --> 00:57:15,690
traffic or what but there is no explicit

1162
00:57:13,079 --> 00:57:16,950
signaling say I'm your child it exists

1163
00:57:15,690 --> 00:57:19,920
for the rule but does not exist for

1164
00:57:16,950 --> 00:57:21,750
normal non-story and so I think this

1165
00:57:19,920 --> 00:57:23,910
multicast group and registration to the

1166
00:57:21,750 --> 00:57:25,650
multicast group gives the parents an

1167
00:57:23,910 --> 00:57:27,000
idea of the children that it has because

1168
00:57:25,650 --> 00:57:29,339
that's how the member of the multicast

1169
00:57:27,000 --> 00:57:32,960
group fights or us so we were looking at

1170
00:57:29,339 --> 00:57:35,038
that just chef I judge commands on this

1171
00:57:32,960 --> 00:57:41,369
Roger I just want to comment on the

1172
00:57:35,039 --> 00:57:44,369
whole utility of know of we having a way

1173
00:57:41,369 --> 00:57:47,160
for telling all the other nodes to

1174
00:57:44,369 --> 00:57:50,010
overhear the disc and not send it what

1175
00:57:47,160 --> 00:57:53,250
what I'm trying to say is the scenario

1176
00:57:50,010 --> 00:57:55,710
where a node sense at this where mu lot

1177
00:57:53,250 --> 00:57:57,089
of nodes are sending this is is is a

1178
00:57:55,710 --> 00:57:59,760
one-off scenario where all the nodes

1179
00:57:57,089 --> 00:58:02,299
gets rebooted let's say even if they

1180
00:57:59,760 --> 00:58:04,619
send all that all of them send the discs

1181
00:58:02,299 --> 00:58:06,329
what the problem that we have currently

1182
00:58:04,619 --> 00:58:08,730
which is already addressed by the draft

1183
00:58:06,329 --> 00:58:09,329
is that the DI electrical timer won't

1184
00:58:08,730 --> 00:58:11,549
get reseted

1185
00:58:09,329 --> 00:58:13,470
once we have that solution then the DIA

1186
00:58:11,549 --> 00:58:17,250
is sent to everyone and everyone stops

1187
00:58:13,470 --> 00:58:19,259
at this anyways so I mean if we don't go

1188
00:58:17,250 --> 00:58:21,089
the other way we can avoid a lot of

1189
00:58:19,260 --> 00:58:25,579
complication is what I'm trying to say

1190
00:58:21,089 --> 00:58:28,369
let let the node sent is anyways okay so

1191
00:58:25,579 --> 00:58:32,910
yes it's two things you said two things

1192
00:58:28,369 --> 00:58:34,559
the first one is I think a

1193
00:58:32,910 --> 00:58:36,450
misunderstanding of what it means to

1194
00:58:34,559 --> 00:58:38,849
reset the trickle timer there is a

1195
00:58:36,450 --> 00:58:42,500
difference between resetting a trickle

1196
00:58:38,849 --> 00:58:45,569
timer and restarting a t-coil timer and

1197
00:58:42,500 --> 00:58:50,250
the spec fails to discuss that correctly

1198
00:58:45,569 --> 00:58:52,259
so basically we should respect I what it

1199
00:58:50,250 --> 00:58:54,630
means to reset the trickle timer so you

1200
00:58:52,260 --> 00:58:56,190
don't have this problem basically if

1201
00:58:54,630 --> 00:58:58,680
you're triggered timer is very long

1202
00:58:56,190 --> 00:59:01,140
because the network was very stable if

1203
00:58:58,680 --> 00:59:04,529
you reset the trickle timer I mean I

1204
00:59:01,140 --> 00:59:06,029
equalized zero reset the period you need

1205
00:59:04,529 --> 00:59:07,890
to restart it because otherwise it will

1206
00:59:06,029 --> 00:59:10,680
it will timeout in a long future so you

1207
00:59:07,890 --> 00:59:12,690
need not only to reset I to i0 which is

1208
00:59:10,680 --> 00:59:15,808
really what reset the trickle timer

1209
00:59:12,690 --> 00:59:17,400
means but you need also to restart the

1210
00:59:15,809 --> 00:59:20,520
trickle timer so now you fall

1211
00:59:17,400 --> 00:59:23,130
into this between I and I zero but if

1212
00:59:20,520 --> 00:59:25,500
you reset it again and it's already

1213
00:59:23,130 --> 00:59:27,330
started for this short value there is no

1214
00:59:25,500 --> 00:59:27,930
point in restarting the timer that's a

1215
00:59:27,330 --> 00:59:29,790
mistake

1216
00:59:27,930 --> 00:59:32,100
if you restart the timer it will never

1217
00:59:29,790 --> 00:59:33,420
her labs you should not restart so you

1218
00:59:32,100 --> 00:59:36,089
should let it elapsed because it's

1219
00:59:33,420 --> 00:59:37,530
already in the right region so we need

1220
00:59:36,090 --> 00:59:38,430
to specify that so you don't have your

1221
00:59:37,530 --> 00:59:40,110
prime but I don't think we need

1222
00:59:38,430 --> 00:59:42,350
signalling we need to better specify

1223
00:59:40,110 --> 00:59:45,180
what it needs to reset the trickle timer

1224
00:59:42,350 --> 00:59:47,460
so just a clarification here when when

1225
00:59:45,180 --> 00:59:49,740
we as when I said resetting I mean going

1226
00:59:47,460 --> 00:59:52,550
back to the I mean okay so there is no

1227
00:59:49,740 --> 00:59:56,009
use case where we restart at the current

1228
00:59:52,550 --> 00:59:57,810
current I I value I interval so that

1229
00:59:56,010 --> 01:00:01,320
there is there is there is no reason why

1230
00:59:57,810 --> 01:00:03,180
a node can reset the Dro timer to the

1231
01:00:01,320 --> 01:00:09,990
current I value it always resets it back

1232
01:00:03,180 --> 01:00:13,529
to the I mean if some origin I mean then

1233
01:00:09,990 --> 01:00:16,319
then well yeah but the prime is at that

1234
01:00:13,530 --> 01:00:17,910
time you should not restart the timer if

1235
01:00:16,320 --> 01:00:19,410
you're already in I mean you should not

1236
01:00:17,910 --> 01:00:20,910
restart the time or if you restart you

1237
01:00:19,410 --> 01:00:23,910
will keep restarting it for every days

1238
01:00:20,910 --> 01:00:25,470
and then it will never elapsed so so the

1239
01:00:23,910 --> 01:00:27,899
mistake here - it's an implementation

1240
01:00:25,470 --> 01:00:30,299
discussion for your auto-draft the

1241
01:00:27,900 --> 01:00:32,820
observation you should observe the way

1242
01:00:30,300 --> 01:00:35,900
trickle is implement and the observation

1243
01:00:32,820 --> 01:00:40,740
is if I more than and then I mean I zero

1244
01:00:35,900 --> 01:00:44,130
then resetting means I equal I mean my

1245
01:00:40,740 --> 01:00:46,020
zero and because now you will elapse

1246
01:00:44,130 --> 01:00:48,900
further than that you need to restart

1247
01:00:46,020 --> 01:00:50,940
your timer but if I is already equal to

1248
01:00:48,900 --> 01:00:53,600
I mean then you're already elapsed

1249
01:00:50,940 --> 01:00:56,730
saying in the expected window let it run

1250
01:00:53,600 --> 01:00:57,060
don't restart the timer that's what it

1251
01:00:56,730 --> 01:00:59,640
means

1252
01:00:57,060 --> 01:01:02,160
so so this discussion is not in report

1253
01:00:59,640 --> 01:01:04,049
it's not well enough explained I have to

1254
01:01:02,160 --> 01:01:05,850
go to the trigger RFC because it should

1255
01:01:04,050 --> 01:01:09,030
have been written there but if it's not

1256
01:01:05,850 --> 01:01:11,580
then we need a section in your document

1257
01:01:09,030 --> 01:01:13,410
explaining exactly that if I equal I

1258
01:01:11,580 --> 01:01:17,190
mean don't restart the timer

1259
01:01:13,410 --> 01:01:19,230
boom this problem goes away now the

1260
01:01:17,190 --> 01:01:21,270
other prime you say it's one your case

1261
01:01:19,230 --> 01:01:24,810
but it's a real prime we have it in the

1262
01:01:21,270 --> 01:01:27,420
field the real parameters go to Canada

1263
01:01:24,810 --> 01:01:29,820
some of those are from Canada and go

1264
01:01:27,420 --> 01:01:31,530
down the basement of a big building and

1265
01:01:29,820 --> 01:01:33,210
you will find all the

1266
01:01:31,530 --> 01:01:35,160
we call matters on the wall and that can

1267
01:01:33,210 --> 01:01:37,650
be 200 of them now

1268
01:01:35,160 --> 01:01:40,560
outraged in this building 200 notes got

1269
01:01:37,650 --> 01:01:42,810
out of power bank so they have to notify

1270
01:01:40,560 --> 01:01:43,950
the utility that they lost power they

1271
01:01:42,810 --> 01:01:46,140
have to send this parallel Taoiseach

1272
01:01:43,950 --> 01:01:48,060
notification bank and as we have all

1273
01:01:46,140 --> 01:01:50,790
sorts of primary being able to do that

1274
01:01:48,060 --> 01:01:53,850
but the worst case is now when you power

1275
01:01:50,790 --> 01:01:56,250
back up again guess what all those notes

1276
01:01:53,850 --> 01:01:57,630
start sending this at the same time on

1277
01:01:56,250 --> 01:01:59,280
the same frequencies blah blah blah the

1278
01:01:57,630 --> 01:02:01,950
interfere with one another the interfere

1279
01:01:59,280 --> 01:02:04,620
with the DDI oh it's a cacophony nobody

1280
01:02:01,950 --> 01:02:08,040
hears anything right so what you really

1281
01:02:04,620 --> 01:02:10,740
want to do is either the router is like

1282
01:02:08,040 --> 01:02:13,320
keys and cdiu before or one of them send

1283
01:02:10,740 --> 01:02:16,020
the first disk and the router sends the

1284
01:02:13,320 --> 01:02:18,060
DAO but if all the others 200 plus notes

1285
01:02:16,020 --> 01:02:20,670
and this at the same time it's really a

1286
01:02:18,060 --> 01:02:23,340
cacophony so for us it's a real feel

1287
01:02:20,670 --> 01:02:27,120
prime that we have right then it's it's

1288
01:02:23,340 --> 01:02:30,420
not unusual it's just the way metals are

1289
01:02:27,120 --> 01:02:33,150
deployed so we have to do something

1290
01:02:30,420 --> 01:02:36,540
about it yeah we need to define the use

1291
01:02:33,150 --> 01:02:39,630
cases anything we have I'm sorry again

1292
01:02:36,540 --> 01:02:43,590
but this is solved with the current text

1293
01:02:39,630 --> 01:02:45,450
isn't it I mean if we stop resetting the

1294
01:02:43,590 --> 01:02:46,860
trickle timer and our definition of

1295
01:02:45,450 --> 01:02:49,259
resetting the article timer is going

1296
01:02:46,860 --> 01:02:52,320
back to I mean if it if we stop that and

1297
01:02:49,260 --> 01:02:54,390
we letter the node send this the DI

1298
01:02:52,320 --> 01:02:56,070
Oracle timer won't get restated and

1299
01:02:54,390 --> 01:02:58,770
other nodes will hear the DI oh and they

1300
01:02:56,070 --> 01:03:08,070
will stop sending this and start yeah

1301
01:02:58,770 --> 01:03:10,320
but what Pascal works is as soon as the

1302
01:03:08,070 --> 01:03:12,630
giu multicast is sent with the bits

1303
01:03:10,320 --> 01:03:15,030
thanks to the bits that you have then

1304
01:03:12,630 --> 01:03:17,010
yes the cacophony stops if the nodes

1305
01:03:15,030 --> 01:03:18,480
here of the DI oh but if they are

1306
01:03:17,010 --> 01:03:19,800
sending this at that time they won't

1307
01:03:18,480 --> 01:03:22,620
even hear that yeah you and they will

1308
01:03:19,800 --> 01:03:23,940
keep sending this so so you can't

1309
01:03:22,620 --> 01:03:26,520
receive and transmit at the same time

1310
01:03:23,940 --> 01:03:29,730
right I mean there is a weird moment

1311
01:03:26,520 --> 01:03:31,680
where everybody wants to talk and nobody

1312
01:03:29,730 --> 01:03:40,440
listens just like in this room no no no

1313
01:03:31,680 --> 01:03:41,730
joking so that needs to be an trickle is

1314
01:03:40,440 --> 01:03:43,710
good at that that needs to be a winner

1315
01:03:41,730 --> 01:03:44,839
East out of the parent sending the DI oh

1316
01:03:43,710 --> 01:03:49,299
that's perfect

1317
01:03:44,839 --> 01:03:53,029
or a child sending ideas but then

1318
01:03:49,299 --> 01:03:54,559
everybody should silence be silent

1319
01:03:53,029 --> 01:03:56,210
chill because the DAO is not

1320
01:03:54,559 --> 01:03:58,190
instantaneous the whole principle of

1321
01:03:56,210 --> 01:04:01,489
Treecko is the response is always

1322
01:03:58,190 --> 01:04:04,339
delight by something akin to admin right

1323
01:04:01,489 --> 01:04:06,529
in the order of I mean and so during

1324
01:04:04,339 --> 01:04:09,410
that time today with the current

1325
01:04:06,529 --> 01:04:12,829
implementations in the field everybody

1326
01:04:09,410 --> 01:04:15,379
shouts nobody he listens right and the

1327
01:04:12,829 --> 01:04:17,989
Jo is lost and even the DS sometimes

1328
01:04:15,380 --> 01:04:19,489
that is so much cacophony that even the

1329
01:04:17,989 --> 01:04:22,190
parent doesn't hear the dis because it's

1330
01:04:19,489 --> 01:04:24,229
interfered by the others right but

1331
01:04:22,190 --> 01:04:26,390
Pascal can I just make a comment on that

1332
01:04:24,229 --> 01:04:29,210
we must be careful though not to be

1333
01:04:26,390 --> 01:04:32,239
trying to solve a layer two issues so

1334
01:04:29,210 --> 01:04:34,969
it's good to have to understand the use

1335
01:04:32,239 --> 01:04:39,319
case but what you're describing is just

1336
01:04:34,969 --> 01:04:42,229
a medium access problem so we can help

1337
01:04:39,319 --> 01:04:47,180
it but we shouldn't be solving it at

1338
01:04:42,229 --> 01:04:48,799
their free I mean if the solution is as

1339
01:04:47,180 --> 01:04:52,759
simple as defining a multi afterwards

1340
01:04:48,799 --> 01:04:54,710
pop art that's not so hard right it's

1341
01:04:52,759 --> 01:04:57,739
and that is really a sweet solution for

1342
01:04:54,710 --> 01:05:01,599
a problem so yeah we I'm saying we can

1343
01:04:57,739 --> 01:05:05,119
have an option that helps but we should

1344
01:05:01,599 --> 01:05:06,999
pretend it and pretend we resolve in by

1345
01:05:05,119 --> 01:05:09,799
ourselves

1346
01:05:06,999 --> 01:05:11,680
same thing in in our draft we had this

1347
01:05:09,799 --> 01:05:15,170
spreading option as well for the

1348
01:05:11,680 --> 01:05:17,210
responses when you you know if it's your

1349
01:05:15,170 --> 01:05:19,609
posit situation in unit that turns the

1350
01:05:17,210 --> 01:05:23,029
network and Kroy has no idea what

1351
01:05:19,609 --> 01:05:25,219
brought us around so it's sending a case

1352
01:05:23,029 --> 01:05:26,839
to our brothers it's a different

1353
01:05:25,219 --> 01:05:28,219
situation because in that case it was

1354
01:05:26,839 --> 01:05:30,170
send it to all parents he will all

1355
01:05:28,219 --> 01:05:31,819
routers he will not send it to the

1356
01:05:30,170 --> 01:05:34,969
multicast address of his previous part

1357
01:05:31,819 --> 01:05:37,219
right it's so different parties I'm

1358
01:05:34,969 --> 01:05:39,559
saying in this case you have all the

1359
01:05:37,219 --> 01:05:41,719
routers that respond at the same time so

1360
01:05:39,559 --> 01:05:46,460
we proposed an option but at the same

1361
01:05:41,719 --> 01:05:47,809
time this trickle no because in current

1362
01:05:46,460 --> 01:05:52,099
version of ripple this is an

1363
01:05:47,809 --> 01:05:55,329
inconsistency so you will end up trickle

1364
01:05:52,099 --> 01:05:58,280
to i0 but until you trickle you get a

1365
01:05:55,329 --> 01:06:00,050
unique STR your response

1366
01:05:58,280 --> 01:06:03,110
which is immediate which is not governed

1367
01:06:00,050 --> 01:06:06,590
by a trickle okay let's discuss about

1368
01:06:03,110 --> 01:06:10,130
the unicast and and then we added that

1369
01:06:06,590 --> 01:06:13,310
option to spread responses so to avoid

1370
01:06:10,130 --> 01:06:15,800
this the yellow storm so maybe we need

1371
01:06:13,310 --> 01:06:18,140
the the same similar mechanism the other

1372
01:06:15,800 --> 01:06:24,560
way round for York useless yes

1373
01:06:18,140 --> 01:06:26,390
love it thank you very much guys one

1374
01:06:24,560 --> 01:06:28,340
piece in general do we need a document

1375
01:06:26,390 --> 01:06:33,080
that explain what's happened with the

1376
01:06:28,340 --> 01:06:38,540
note when we start I don't think because

1377
01:06:33,080 --> 01:06:40,040
there's some lot of status as of now the

1378
01:06:38,540 --> 01:06:45,529
discussions that we had yesterday it's

1379
01:06:40,040 --> 01:06:47,270
it's unwrapped idea so I'm planning to

1380
01:06:45,530 --> 01:06:48,890
update the same document observations

1381
01:06:47,270 --> 01:06:50,300
draft with most of the text at some

1382
01:06:48,890 --> 01:06:53,420
point of time maybe the working group

1383
01:06:50,300 --> 01:06:55,250
might feel that this can be published as

1384
01:06:53,420 --> 01:06:57,080
a separate document or maybe working

1385
01:06:55,250 --> 01:06:58,670
group might decide that at later point

1386
01:06:57,080 --> 01:07:02,090
of time if it has enough substantial

1387
01:06:58,670 --> 01:07:03,320
material which needs a publication in

1388
01:07:02,090 --> 01:07:05,240
that case we can take a call something

1389
01:07:03,320 --> 01:07:07,460
like that does it make sense yeah

1390
01:07:05,240 --> 01:07:09,169
basically we see the text we check the

1391
01:07:07,460 --> 01:07:13,000
text in the observation stock first or

1392
01:07:09,170 --> 01:07:15,800
you know or if you decide that right now

1393
01:07:13,000 --> 01:07:18,260
it's a it clearly requires a different

1394
01:07:15,800 --> 01:07:21,230
document then then it's a teaser call

1395
01:07:18,260 --> 01:07:23,360
yeah but as for example each document

1396
01:07:21,230 --> 01:07:25,700
has like a security consideration we may

1397
01:07:23,360 --> 01:07:28,790
you can include like a section what

1398
01:07:25,700 --> 01:07:30,560
happens when a note restart so we can

1399
01:07:28,790 --> 01:07:33,050
feel that because they're always

1400
01:07:30,560 --> 01:07:35,529
question so we can kind of have a

1401
01:07:33,050 --> 01:07:37,310
mandatory section well mandatory like

1402
01:07:35,530 --> 01:07:40,730
like it what happened

1403
01:07:37,310 --> 01:07:43,820
and that would be nice in each document

1404
01:07:40,730 --> 01:07:49,880
have that section I don't know what do

1405
01:07:43,820 --> 01:07:52,940
you think I believe that house document

1406
01:07:49,880 --> 01:07:54,740
on the observations is so useful and at

1407
01:07:52,940 --> 01:07:57,860
least verbally we should capture what

1408
01:07:54,740 --> 01:07:59,930
was said to the in rolls document so at

1409
01:07:57,860 --> 01:08:02,240
least we have a status of that we know

1410
01:07:59,930 --> 01:08:04,730
this problem we discussed that and and

1411
01:08:02,240 --> 01:08:05,930
there is where we are at least I agree

1412
01:08:04,730 --> 01:08:08,960
with what you said I mean having a

1413
01:08:05,930 --> 01:08:10,910
section on exactly but already writing

1414
01:08:08,960 --> 01:08:12,300
down a for instance to trickle time we

1415
01:08:10,910 --> 01:08:13,890
are resetting trickle does it means we

1416
01:08:12,300 --> 01:08:16,109
starting the time on this le oh that's

1417
01:08:13,890 --> 01:08:18,389
important must be written somewhere and

1418
01:08:16,109 --> 01:08:20,910
and so all this discussion about the use

1419
01:08:18,390 --> 01:08:23,630
of the bits etc so we need to complete

1420
01:08:20,910 --> 01:08:26,790
on the mailing list in the agreement on

1421
01:08:23,630 --> 01:08:29,460
the bits that are inherited from the

1422
01:08:26,790 --> 01:08:31,109
other thing which which also relates to

1423
01:08:29,460 --> 01:08:34,260
the fact I'm using five of those bits

1424
01:08:31,109 --> 01:08:35,790
and it's not awfully necessary so if we

1425
01:08:34,260 --> 01:08:38,490
start using those bits remember I'm

1426
01:08:35,790 --> 01:08:41,069
using five bits and so that means you

1427
01:08:38,490 --> 01:08:43,769
know kind of a waste so it seems to me

1428
01:08:41,069 --> 01:08:45,420
that if we restart finding a real more

1429
01:08:43,770 --> 01:08:51,240
important use of the bits maybe we

1430
01:08:45,420 --> 01:08:52,740
should remove those ones because it

1431
01:08:51,240 --> 01:08:54,210
seems a lot more important to be able to

1432
01:08:52,740 --> 01:08:55,920
do what Dominic wants to do with those

1433
01:08:54,210 --> 01:08:58,130
bits then to signal I want this I want

1434
01:08:55,920 --> 01:08:58,130
that

1435
01:09:00,290 --> 01:09:03,899
just one more on each other well just

1436
01:09:02,760 --> 01:09:05,520
one more thing that I would like to

1437
01:09:03,899 --> 01:09:07,830
mention in this context is that we

1438
01:09:05,520 --> 01:09:10,020
should expect future specification to

1439
01:09:07,830 --> 01:09:11,880
generate new options which should be

1440
01:09:10,020 --> 01:09:13,859
readily or it should be possible to

1441
01:09:11,880 --> 01:09:15,390
elect them as well and we give some sort

1442
01:09:13,859 --> 01:09:18,830
of considerations in this document

1443
01:09:15,390 --> 01:09:22,230
saying that if you have a new option and

1444
01:09:18,830 --> 01:09:25,589
it rarely changes then you should follow

1445
01:09:22,229 --> 01:09:27,419
so and so things I mean you have to

1446
01:09:25,589 --> 01:09:29,760
define a sequence number for every

1447
01:09:27,420 --> 01:09:31,170
option do you really need it so some

1448
01:09:29,760 --> 01:09:33,359
sort of considerations for new a few

1449
01:09:31,170 --> 01:09:34,500
future options because we see already

1450
01:09:33,359 --> 01:09:47,940
that there are going to be future

1451
01:09:34,500 --> 01:09:52,819
options okay okay yes we'll track try to

1452
01:09:47,939 --> 01:09:55,379
did for rapidly before that but just

1453
01:09:52,819 --> 01:09:57,060
thank you very much yes please at the

1454
01:09:55,380 --> 01:09:59,400
what the saying they observe ancient

1455
01:09:57,060 --> 01:10:01,860
thank you if you could write that in a

1456
01:09:59,400 --> 01:10:07,379
few words in a mail so I could respond

1457
01:10:01,860 --> 01:10:11,519
and say yes proposal blah blah blah so

1458
01:10:07,380 --> 01:10:14,280
um for adoption I hope there's a if you

1459
01:10:11,520 --> 01:10:16,500
are if you agree we can publish your

1460
01:10:14,280 --> 01:10:22,130
marriage documents and then we go for

1461
01:10:16,500 --> 01:10:26,560
adoptions is that okay for you yep okay

1462
01:10:22,130 --> 01:10:29,360
comments questions okay thank you around

1463
01:10:26,560 --> 01:10:30,710
thank you very much pasta so don't be

1464
01:10:29,360 --> 01:10:34,309
Nick the bullies in your kelp

1465
01:10:30,710 --> 01:10:37,699
Dominique at half as a contributor yeah

1466
01:10:34,310 --> 01:10:39,800
yes and so please give a thought to what

1467
01:10:37,699 --> 01:10:41,900
I said about reversing beards and maybe

1468
01:10:39,800 --> 01:10:44,239
we talked out of line and then we'll

1469
01:10:41,900 --> 01:10:47,119
publish that and we'll tell you we're

1470
01:10:44,239 --> 01:10:49,489
ready yes yeah I think the way we wrote

1471
01:10:47,119 --> 01:10:51,710
it in the identification is already what

1472
01:10:49,489 --> 01:10:53,169
you want but I'll make sure we discuss

1473
01:10:51,710 --> 01:10:58,810
it

1474
01:10:53,170 --> 01:10:59,929
thank you throne oh we have for each

1475
01:10:58,810 --> 01:11:01,909
other

1476
01:10:59,929 --> 01:11:05,030
I'm going to talk about the updates to

1477
01:11:01,909 --> 01:11:08,839
the NP Dow it went into the IG last call

1478
01:11:05,030 --> 01:11:13,940
we received all the IG reviews and then

1479
01:11:08,840 --> 01:11:16,369
we had an update when one important

1480
01:11:13,940 --> 01:11:19,339
update rather we are now carrying and

1481
01:11:16,369 --> 01:11:21,530
ripple status as part of DC oh well this

1482
01:11:19,340 --> 01:11:23,780
is very generate and it is important for

1483
01:11:21,530 --> 01:11:26,269
DC oh the node generating the DCO to

1484
01:11:23,780 --> 01:11:27,710
sort of give a reason why is it

1485
01:11:26,270 --> 01:11:31,550
generating that ECU in the first place

1486
01:11:27,710 --> 01:11:33,829
so it is regardless of the unaware

1487
01:11:31,550 --> 01:11:35,480
leaves proposition it is important for

1488
01:11:33,829 --> 01:11:37,250
DC or to give this reason we should have

1489
01:11:35,480 --> 01:11:44,839
identified that in the first place but

1490
01:11:37,250 --> 01:11:46,760
now we have it but so this slide

1491
01:11:44,840 --> 01:11:50,210
explains you the impact of unaware

1492
01:11:46,760 --> 01:11:52,940
leaves on on on this particular draft

1493
01:11:50,210 --> 01:11:56,210
and we have seen a Pascal has already

1494
01:11:52,940 --> 01:11:58,339
explained it but what we have here is we

1495
01:11:56,210 --> 01:12:00,739
have the RPL status format changed we

1496
01:11:58,340 --> 01:12:04,550
have another bit which is which is

1497
01:12:00,739 --> 01:12:07,549
mentioning whether it is rather nd

1498
01:12:04,550 --> 01:12:11,389
status so now this text I've picked up

1499
01:12:07,550 --> 01:12:13,130
from unaware leaves but it is quite

1500
01:12:11,389 --> 01:12:16,280
important to be noted in this context

1501
01:12:13,130 --> 01:12:19,159
now the the reason the one the number

1502
01:12:16,280 --> 01:12:22,699
130 that has been mentioned currently in

1503
01:12:19,159 --> 01:12:27,049
the in the NP dowdy CEO draft it may not

1504
01:12:22,699 --> 01:12:29,059
be correct so that has to be changed so

1505
01:12:27,050 --> 01:12:32,380
there is one update that will be

1506
01:12:29,060 --> 01:12:32,380
required even after this

1507
01:12:34,210 --> 01:12:37,180
just a change of number there is no

1508
01:12:35,710 --> 01:12:41,640
change in the Ayane consideration but

1509
01:12:37,180 --> 01:12:41,640
yeah it there is still a change required

1510
01:12:44,730 --> 01:12:49,870
so sorry I missed that one we just

1511
01:12:47,020 --> 01:12:52,989
discovered it by reviewing with how like

1512
01:12:49,870 --> 01:12:55,180
yesterday or something but we are the

1513
01:12:52,989 --> 01:12:59,019
more interesting discussion if I may say

1514
01:12:55,180 --> 01:13:02,500
is that since now we are carrying the

1515
01:12:59,020 --> 01:13:07,960
stairs and the status can be one to 127

1516
01:13:02,500 --> 01:13:10,510
like the EBIT is not set then we could

1517
01:13:07,960 --> 01:13:14,050
really make the future of this yo lot

1518
01:13:10,510 --> 01:13:18,310
brighter if we said that instead of

1519
01:13:14,050 --> 01:13:21,960
being always a killer for the path it

1520
01:13:18,310 --> 01:13:25,090
can also be carrying an indication and

1521
01:13:21,960 --> 01:13:27,130
not kill the path right now if you get

1522
01:13:25,090 --> 01:13:30,370
to this yo regardless of the value of

1523
01:13:27,130 --> 01:13:32,890
the DCO you kill the path regardless of

1524
01:13:30,370 --> 01:13:34,780
the status of the of the ripple

1525
01:13:32,890 --> 01:13:36,760
Stellar's but the repo status as the

1526
01:13:34,780 --> 01:13:37,420
EBIT which tells you a it's a rejection

1527
01:13:36,760 --> 01:13:42,300
or not

1528
01:13:37,420 --> 01:13:45,760
so one sentence somewhere in that spec

1529
01:13:42,300 --> 01:13:48,040
that says that if the eve is what what

1530
01:13:45,760 --> 01:13:51,870
we described so far is is valid if the e

1531
01:13:48,040 --> 01:13:54,969
bit is indicating rejection but

1532
01:13:51,870 --> 01:13:57,250
otherwise you just forward the DCO and

1533
01:13:54,969 --> 01:13:59,219
and you do what you know about the

1534
01:13:57,250 --> 01:14:03,280
status that's in there she understand it

1535
01:13:59,219 --> 01:14:05,410
then we could use it this message for

1536
01:14:03,280 --> 01:14:10,540
new cases and actually we had one

1537
01:14:05,410 --> 01:14:14,670
yesterday so it looks like I would like

1538
01:14:10,540 --> 01:14:18,090
to see this additional change to say a

1539
01:14:14,670 --> 01:14:21,790
don't discard the path if the idiot is

1540
01:14:18,090 --> 01:14:23,680
reset and if you understand the value

1541
01:14:21,790 --> 01:14:25,480
and the value tells you to do something

1542
01:14:23,680 --> 01:14:28,180
to it otherwise just pass the DCU on

1543
01:14:25,480 --> 01:14:32,709
down the path and this way we can signal

1544
01:14:28,180 --> 01:14:35,560
nan your information down the path for

1545
01:14:32,710 --> 01:14:38,380
instance I have too many children I need

1546
01:14:35,560 --> 01:14:39,250
to rebalance the tree which is the use

1547
01:14:38,380 --> 01:14:41,140
case we had yesterday

1548
01:14:39,250 --> 01:14:43,780
so it's an encouragement of people down

1549
01:14:41,140 --> 01:14:46,810
the path to repair in somewhere so we

1550
01:14:43,780 --> 01:14:48,040
rebalance the graph it's just one case

1551
01:14:46,810 --> 01:14:50,110
but we thought eh

1552
01:14:48,040 --> 01:14:52,980
that's the only message we have that

1553
01:14:50,110 --> 01:14:57,429
flies i synchronously down from the root

1554
01:14:52,980 --> 01:14:59,740
and if it's if I mean just using it for

1555
01:14:57,430 --> 01:15:03,430
one purpose is kind of a waste right

1556
01:14:59,740 --> 01:15:05,590
having the capability to say a it can be

1557
01:15:03,430 --> 01:15:08,260
more than a rejection it can also also

1558
01:15:05,590 --> 01:15:12,490
be a status a warning status like I'm

1559
01:15:08,260 --> 01:15:14,200
overloaded but you can keep me but if

1560
01:15:12,490 --> 01:15:18,700
you can switch to somebody else that

1561
01:15:14,200 --> 01:15:21,360
would be better it's not an out what an

1562
01:15:18,700 --> 01:15:23,650
outright rejection

1563
01:15:21,360 --> 01:15:37,210
it makes this message lot more useful

1564
01:15:23,650 --> 01:15:41,830
and powerful reaction New York hey al

1565
01:15:37,210 --> 01:15:44,350
Loredana that's a big change very big

1566
01:15:41,830 --> 01:15:45,340
change for several reasons not only are

1567
01:15:44,350 --> 01:15:47,080
you using the mister something else

1568
01:15:45,340 --> 01:15:49,900
which is great I love we use if that's

1569
01:15:47,080 --> 01:15:51,970
what works do that's perfect the drafts

1570
01:15:49,900 --> 01:15:54,879
a couple things besides that it says

1571
01:15:51,970 --> 01:15:59,290
something about not expecting the nodes

1572
01:15:54,880 --> 01:16:02,140
to do anything based on status now

1573
01:15:59,290 --> 01:16:04,500
you're changing that right and and the

1574
01:16:02,140 --> 01:16:10,780
other part that really concerns me is

1575
01:16:04,500 --> 01:16:12,520
the fact that you say that the status I

1576
01:16:10,780 --> 01:16:15,910
forgot the exact words must not change

1577
01:16:12,520 --> 01:16:18,130
or something on the path that's great

1578
01:16:15,910 --> 01:16:20,889
but there's not a real way to enforce

1579
01:16:18,130 --> 01:16:23,230
that right meaning when I get the

1580
01:16:20,890 --> 01:16:25,270
message from chorus above me I don't

1581
01:16:23,230 --> 01:16:33,990
know if that was what he got from the

1582
01:16:25,270 --> 01:16:36,880
guy from his parent so you know that's i

1583
01:16:33,990 --> 01:16:38,980
it's just a it's just a way that was

1584
01:16:36,880 --> 01:16:41,950
written that maybe was written in draft

1585
01:16:38,980 --> 01:16:43,839
that because we can't enforce that then

1586
01:16:41,950 --> 01:16:46,090
we can't really say you must not change

1587
01:16:43,840 --> 01:16:47,620
it right so so we need to to be clear

1588
01:16:46,090 --> 01:16:50,410
about those those cases and be clear

1589
01:16:47,620 --> 01:16:52,030
about the fact that I can now tell

1590
01:16:50,410 --> 01:16:54,430
someone hey you need to repair it

1591
01:16:52,030 --> 01:16:55,990
for no apparent racist right just

1592
01:16:54,430 --> 01:16:58,570
because I want to of course this may be

1593
01:16:55,990 --> 01:17:00,929
better than telling them the path is not

1594
01:16:58,570 --> 01:17:03,389
available at all

1595
01:17:00,929 --> 01:17:06,000
correct so maybe that's a little better

1596
01:17:03,390 --> 01:17:10,050
but you know they're still you know

1597
01:17:06,000 --> 01:17:14,219
things Here I am obviously not opposed

1598
01:17:10,050 --> 01:17:19,409
to you doing this stuff we might need a

1599
01:17:14,219 --> 01:17:26,730
lot more review yes what I mean is we

1600
01:17:19,409 --> 01:17:31,530
might have to go back to the AAC or yeah

1601
01:17:26,730 --> 01:17:33,959
please my bottom line is if we keep the

1602
01:17:31,530 --> 01:17:36,480
text as it is the nodes will effectively

1603
01:17:33,960 --> 01:17:39,060
not because of this mast will not look

1604
01:17:36,480 --> 01:17:41,040
at the stairs which means that this

1605
01:17:39,060 --> 01:17:42,989
creates a backward compatibility issue

1606
01:17:41,040 --> 01:17:44,730
whereby even if we want to extend it in

1607
01:17:42,989 --> 01:17:48,509
the future if we have a legacy node it

1608
01:17:44,730 --> 01:17:50,610
will kill the route which is not what

1609
01:17:48,510 --> 01:17:52,409
who I mean that's sad if the life

1610
01:17:50,610 --> 01:17:54,030
I mean having this bit which sighs if

1611
01:17:52,409 --> 01:17:55,500
you don't understand it but at least you

1612
01:17:54,030 --> 01:17:57,989
know destroy not destroy something

1613
01:17:55,500 --> 01:18:00,659
that's proven very useful in ng and many

1614
01:17:57,989 --> 01:18:01,949
other use use cases right what you do

1615
01:18:00,659 --> 01:18:05,159
when you don't understand it

1616
01:18:01,949 --> 01:18:06,719
so although all the idea is okay we did

1617
01:18:05,159 --> 01:18:08,730
not expect the nodes to understand it

1618
01:18:06,719 --> 01:18:10,739
and they would destroy the route now at

1619
01:18:08,730 --> 01:18:12,718
least we say eh if you underst you don't

1620
01:18:10,739 --> 01:18:14,540
understand it but it's a warning you

1621
01:18:12,719 --> 01:18:17,460
don't destroy the route you pass it down

1622
01:18:14,540 --> 01:18:19,800
that was so useful in other protocols I

1623
01:18:17,460 --> 01:18:21,390
mean I can wait for the RFC number if we

1624
01:18:19,800 --> 01:18:24,960
get this additional feature I'm ready to

1625
01:18:21,390 --> 01:18:26,909
see who goes to reduce now and like I

1626
01:18:24,960 --> 01:18:28,679
said we're in misrata hall anyway so if

1627
01:18:26,909 --> 01:18:29,969
what we do here is faster than what we

1628
01:18:28,679 --> 01:18:34,560
do for the rules that does not delay

1629
01:18:29,969 --> 01:18:37,739
there I see anyway I just want to say

1630
01:18:34,560 --> 01:18:40,100
the statement at the the enforcement

1631
01:18:37,739 --> 01:18:43,169
policy that Anwar you mentioned you know

1632
01:18:40,100 --> 01:18:44,310
there is no way for the nodes

1633
01:18:43,170 --> 01:18:45,510
intermediate nodes

1634
01:18:44,310 --> 01:18:48,090
I mean intermediate nodes can

1635
01:18:45,510 --> 01:18:50,219
essentially change it and there's no way

1636
01:18:48,090 --> 01:18:53,040
to enforce it but the same is true even

1637
01:18:50,219 --> 01:18:55,020
for the existing down messages so I mean

1638
01:18:53,040 --> 01:18:56,969
if we completely depend upon Delta

1639
01:18:55,020 --> 01:19:00,500
security or the security or mechanisms

1640
01:18:56,969 --> 01:19:00,500
in our field for that so

1641
01:19:03,270 --> 01:19:07,490
that's so there will be an update here

1642
01:19:08,900 --> 01:19:15,929
yeah thank you very much thank you so

1643
01:19:13,680 --> 01:19:19,260
well you will add a drop and then we

1644
01:19:15,930 --> 01:19:20,910
will request for abuse we will update

1645
01:19:19,260 --> 01:19:22,830
data I mean you will update drop and

1646
01:19:20,910 --> 01:19:24,710
then will will recuse against their

1647
01:19:22,830 --> 01:19:30,900
request for abuse

1648
01:19:24,710 --> 01:19:36,270
so now Pascal please and this stuff is

1649
01:19:30,900 --> 01:19:40,879
going to be for working we have 40

1650
01:19:36,270 --> 01:19:50,700
minutes 40 okay so you have a for you

1651
01:19:40,880 --> 01:19:55,470
okay so basically the this does this

1652
01:19:50,700 --> 01:19:59,280
need to update a brownfield Network that

1653
01:19:55,470 --> 01:20:00,720
we did not foresee earlier but we kind

1654
01:19:59,280 --> 01:20:06,030
of realized that the notion of Flag Day

1655
01:20:00,720 --> 01:20:08,850
was not very feasible in some

1656
01:20:06,030 --> 01:20:12,809
applications of repo like a dag of

1657
01:20:08,850 --> 01:20:15,720
thousands of nodes and so if you want to

1658
01:20:12,810 --> 01:20:20,100
introduce a function like the new hub by

1659
01:20:15,720 --> 01:20:21,960
hub API value or the fact that you want

1660
01:20:20,100 --> 01:20:25,800
to use the compression that we never

1661
01:20:21,960 --> 01:20:28,740
with eight one three eight then the way

1662
01:20:25,800 --> 01:20:30,870
you would do it is progressively install

1663
01:20:28,740 --> 01:20:32,870
the new software in the devices which

1664
01:20:30,870 --> 01:20:36,150
are capable of doing those new things

1665
01:20:32,870 --> 01:20:39,330
but the whole network needs to use the

1666
01:20:36,150 --> 01:20:42,389
same functions so as long as you get but

1667
01:20:39,330 --> 01:20:44,460
level devices you cannot reuse it so if

1668
01:20:42,390 --> 01:20:46,170
the new software said just use it and

1669
01:20:44,460 --> 01:20:48,590
you all software who is not using it

1670
01:20:46,170 --> 01:20:52,500
then your network would be inconsistent

1671
01:20:48,590 --> 01:20:56,280
so there is the need to replace the Flag

1672
01:20:52,500 --> 01:20:58,740
Day by a process whereby your greater

1673
01:20:56,280 --> 01:21:02,790
nodes at the speed you can and when they

1674
01:20:58,740 --> 01:21:06,360
are all graded then you fire a bit

1675
01:21:02,790 --> 01:21:10,230
somewhere and everybody works with the

1676
01:21:06,360 --> 01:21:12,480
new operation so that's the way that we

1677
01:21:10,230 --> 01:21:16,290
solve the problem in the use of repo

1678
01:21:12,480 --> 01:21:17,218
information for the new value of the hub

1679
01:21:16,290 --> 01:21:21,269
by option of

1680
01:21:17,219 --> 01:21:23,579
API and we have the exact same problem -

1681
01:21:21,269 --> 01:21:26,219
for another repo specific operation

1682
01:21:23,579 --> 01:21:28,650
which is the use of compression so it's

1683
01:21:26,219 --> 01:21:31,349
not the first discussion the meaningless

1684
01:21:28,650 --> 01:21:33,268
like oh it's not the shape of the geotag

1685
01:21:31,349 --> 01:21:34,800
well the configuration is not just the

1686
01:21:33,269 --> 01:21:38,699
shape of the geotag it's everything that

1687
01:21:34,800 --> 01:21:40,110
people does and the compression is one

1688
01:21:38,699 --> 01:21:42,030
of those things that ripple does that

1689
01:21:40,110 --> 01:21:44,190
needs to be homogeneous within a

1690
01:21:42,030 --> 01:21:46,289
particular do DAC if you have a

1691
01:21:44,190 --> 01:21:47,999
multi-tier that configuration may be one

1692
01:21:46,289 --> 01:21:51,210
deal diagnoses it and the other does not

1693
01:21:47,999 --> 01:21:53,728
but at least under a certain route as

1694
01:21:51,210 --> 01:21:56,070
part of your subnet but not necessarily

1695
01:21:53,729 --> 01:21:58,829
the host at that you need to know if

1696
01:21:56,070 --> 01:22:00,539
it's on or it's off and you need to be

1697
01:21:58,829 --> 01:22:02,460
able to deploy the nodes with a new

1698
01:22:00,539 --> 01:22:04,860
software and this it's off so they don't

1699
01:22:02,460 --> 01:22:05,909
choose it and when all the software is

1700
01:22:04,860 --> 01:22:09,749
installed everywhere

1701
01:22:05,909 --> 01:22:12,900
then you can decide to turn it up so

1702
01:22:09,749 --> 01:22:15,179
this is a configuration thing it's not

1703
01:22:12,900 --> 01:22:17,429
the same thing as the capability the

1704
01:22:15,179 --> 01:22:21,150
capability is whether the new software

1705
01:22:17,429 --> 01:22:23,010
can do it or not it's useful to have a

1706
01:22:21,150 --> 01:22:26,699
capability to say that the new software

1707
01:22:23,010 --> 01:22:28,079
can do it because now when you know that

1708
01:22:26,699 --> 01:22:30,888
every nodes can do it you can

1709
01:22:28,079 --> 01:22:34,380
automatically automatically turn it down

1710
01:22:30,889 --> 01:22:37,050
but you might also know that every node

1711
01:22:34,380 --> 01:22:39,570
can do it because you know you have done

1712
01:22:37,050 --> 01:22:42,900
upgrading your network or because you

1713
01:22:39,570 --> 01:22:45,829
have another management protocol and we

1714
01:22:42,900 --> 01:22:50,249
have one by the way which tells you that

1715
01:22:45,829 --> 01:22:52,349
so there is not a strong tie between the

1716
01:22:50,249 --> 01:22:55,920
configuration that says Taneytown

1717
01:22:52,349 --> 01:23:00,179
and the capability that says it's a

1718
01:22:55,920 --> 01:23:05,460
viable kappa beat is a very useful thing

1719
01:23:00,179 --> 01:23:07,829
we can live without it because we have

1720
01:23:05,460 --> 01:23:10,889
other means to manage the devices which

1721
01:23:07,829 --> 01:23:12,929
are not based on a capability right so

1722
01:23:10,889 --> 01:23:16,489
does this need to wait for the

1723
01:23:12,929 --> 01:23:18,599
capability draft now does this need a

1724
01:23:16,489 --> 01:23:21,509
normative reference to a variability

1725
01:23:18,599 --> 01:23:25,440
draft no is it something that's useful

1726
01:23:21,510 --> 01:23:28,679
in standalone yes just like it's

1727
01:23:25,440 --> 01:23:30,659
actually a Mis use a free pollen fo as

1728
01:23:28,679 --> 01:23:33,179
the bed we did not miss that

1729
01:23:30,659 --> 01:23:35,489
time but when we rotate one three eight

1730
01:23:33,179 --> 01:23:38,969
we are so concerned by the compression

1731
01:23:35,489 --> 01:23:40,919
that we forgot the bran field and we

1732
01:23:38,969 --> 01:23:42,989
forgot to put this bit so it's just

1733
01:23:40,919 --> 01:23:47,429
catching up with a mess that's no more

1734
01:23:42,989 --> 01:23:50,518
than that draft has been very very very

1735
01:23:47,429 --> 01:23:53,639
stable there were discussions about is

1736
01:23:50,519 --> 01:23:56,999
there are other ways to use to do that

1737
01:23:53,639 --> 01:24:00,900
rather than the compression the six CIO

1738
01:23:56,999 --> 01:24:04,110
is nd it talks about a subnet not a

1739
01:24:00,900 --> 01:24:06,688
geotag we should not make ng aware of

1740
01:24:04,110 --> 01:24:08,429
our setback configuration or ripple

1741
01:24:06,689 --> 01:24:10,860
specific stuff so it doesn't look like a

1742
01:24:08,429 --> 01:24:12,840
good idea in this case and now it if we

1743
01:24:10,860 --> 01:24:14,909
did in 6ew it would be harder to tie

1744
01:24:12,840 --> 01:24:17,369
with the capability I would like to do

1745
01:24:14,909 --> 01:24:19,259
the same thing for using the hub by hop

1746
01:24:17,369 --> 01:24:20,938
and for using the compression because

1747
01:24:19,260 --> 01:24:22,650
it's a very similar problem so it's cool

1748
01:24:20,939 --> 01:24:25,769
to be consistent the way we approach

1749
01:24:22,650 --> 01:24:28,110
those Prime's somebody said we could use

1750
01:24:25,769 --> 01:24:29,369
a new protocol so yes let's define a new

1751
01:24:28,110 --> 01:24:31,650
protocol that's priced through the

1752
01:24:29,369 --> 01:24:34,799
network and also new messages just to

1753
01:24:31,650 --> 01:24:36,929
carry one bit why not well I'm not too

1754
01:24:34,800 --> 01:24:39,179
good for that so I think we are we're

1755
01:24:36,929 --> 01:24:43,530
kind of okay and ready for let's call

1756
01:24:39,179 --> 01:24:49,349
for an option yeah thanks for adoption

1757
01:24:43,530 --> 01:24:51,329
I'm sorry well both it's just one bit

1758
01:24:49,349 --> 01:24:53,689
right at the end of the day it's just

1759
01:24:51,329 --> 01:24:57,919
just one damn bit

1760
01:24:53,689 --> 01:24:59,760
they're all just bits just one at a time

1761
01:24:57,919 --> 01:25:02,669
Michael here

1762
01:24:59,760 --> 01:25:06,510
so Pascal explained to me the disconnect

1763
01:25:02,669 --> 01:25:09,150
between I ween capabilities and this

1764
01:25:06,510 --> 01:25:12,209
document I I was not previously happy

1765
01:25:09,150 --> 01:25:17,098
with turn on not using capabilities to

1766
01:25:12,209 --> 01:25:19,619
enable itself but now I understand what

1767
01:25:17,099 --> 01:25:22,619
he's proposing that that later on we may

1768
01:25:19,619 --> 01:25:25,169
have a capability that asks where we can

1769
01:25:22,619 --> 01:25:27,478
discover if the network is 81

1770
01:25:25,169 --> 01:25:31,489
thirty-eight ready in Pascal's case and

1771
01:25:27,479 --> 01:25:33,749
I believe this is a metering networks

1772
01:25:31,489 --> 01:25:36,900
when the installers been to every single

1773
01:25:33,749 --> 01:25:38,969
home they know that they've upgraded the

1774
01:25:36,900 --> 01:25:40,679
meters or that whatever because in most

1775
01:25:38,969 --> 01:25:43,860
cases those devices are installed by

1776
01:25:40,679 --> 01:25:44,130
putting a fiber-optic cable and into the

1777
01:25:43,860 --> 01:25:48,150
front

1778
01:25:44,130 --> 01:25:49,350
the meter and updating the firmware so

1779
01:25:48,150 --> 01:25:50,759
they've done them all I guess it takes

1780
01:25:49,350 --> 01:25:53,120
two years or something to visit every

1781
01:25:50,760 --> 01:25:56,130
home and then they turn on 81 38 right

1782
01:25:53,120 --> 01:25:58,139
and if if they lose some devices I guess

1783
01:25:56,130 --> 01:26:02,159
they they screwed up and missed some and

1784
01:25:58,139 --> 01:26:04,980
that's all so I support doing this I

1785
01:26:02,159 --> 01:26:12,000
understand the the somewhat urgency of

1786
01:26:04,980 --> 01:26:13,468
it and okay right it would be nice again

1787
01:26:12,000 --> 01:26:15,090
it would be nice if we had the

1788
01:26:13,469 --> 01:26:16,530
capabilities document sufficiently

1789
01:26:15,090 --> 01:26:19,739
advanced that you could just use this

1790
01:26:16,530 --> 01:26:22,530
but to announce to turn it on as well as

1791
01:26:19,739 --> 01:26:24,360
discover but I agree that that's gonna

1792
01:26:22,530 --> 01:26:29,570
take us a little while to do this and I

1793
01:26:24,360 --> 01:26:29,570
think you need this so they're going

1794
01:26:29,780 --> 01:26:33,960
thank you Michael

1795
01:26:31,219 --> 01:26:36,389
Roger though I completely agree with

1796
01:26:33,960 --> 01:26:38,219
that we need this kind of stuff but the

1797
01:26:36,389 --> 01:26:42,179
one important one thing that I want to

1798
01:26:38,219 --> 01:26:44,190
mention is that basically what it avoids

1799
01:26:42,179 --> 01:26:45,960
is what we are we are sort of avoiding

1800
01:26:44,190 --> 01:26:49,710
through this is a flag day operations

1801
01:26:45,960 --> 01:26:51,719
where we now know the route can signal

1802
01:26:49,710 --> 01:26:54,420
all the nodes that something is now can

1803
01:26:51,719 --> 01:26:57,150
be turned on by so what I'm trying to

1804
01:26:54,420 --> 01:26:59,760
say is in eventually we will have other

1805
01:26:57,150 --> 01:27:03,059
other mechanisms which have to be turned

1806
01:26:59,760 --> 01:27:05,159
on by the route after then after the

1807
01:27:03,060 --> 01:27:08,850
discovery of that mechanism so is it

1808
01:27:05,159 --> 01:27:10,379
possible for us to generalize this so

1809
01:27:08,850 --> 01:27:13,500
that it can be used for other purposes

1810
01:27:10,380 --> 01:27:14,940
as as well and not only for 80 138 so

1811
01:27:13,500 --> 01:27:17,190
this is a generic problem statement

1812
01:27:14,940 --> 01:27:19,559
where the route needs to tell all the

1813
01:27:17,190 --> 01:27:20,909
nodes in the network and the reason why

1814
01:27:19,560 --> 01:27:23,520
I'm concerned is because now we are

1815
01:27:20,909 --> 01:27:25,699
making use of the DAO base objects I

1816
01:27:23,520 --> 01:27:31,739
mean the configuration options flag

1817
01:27:25,699 --> 01:27:33,870
which are limited and if we use for

1818
01:27:31,739 --> 01:27:35,759
specific purpose as eight one three

1819
01:27:33,870 --> 01:27:37,949
eight and I see a reason why we are

1820
01:27:35,760 --> 01:27:40,790
doing it but eventually we will need

1821
01:27:37,949 --> 01:27:44,280
this for other things as well

1822
01:27:40,790 --> 01:27:46,260
so what what so is it possible for us to

1823
01:27:44,280 --> 01:27:48,840
do it generally such that in the future

1824
01:27:46,260 --> 01:27:50,520
if the route has to say to the all to

1825
01:27:48,840 --> 01:27:52,739
all other nodes that you can yes start

1826
01:27:50,520 --> 01:27:54,750
using this not only for eight one three

1827
01:27:52,739 --> 01:27:57,160
eight I mean that's a great question and

1828
01:27:54,750 --> 01:28:01,150
I think it's realized a lot with them up

1829
01:27:57,160 --> 01:28:04,000
we had a similar Prime with them up and

1830
01:28:01,150 --> 01:28:05,019
I expect that when we need more room and

1831
01:28:04,000 --> 01:28:08,050
we have to configure ripple

1832
01:28:05,020 --> 01:28:09,760
configuration option right we'll we'll

1833
01:28:08,050 --> 01:28:13,630
extend the ripple configuration option

1834
01:28:09,760 --> 01:28:16,510
for more bit space or whatever so so for

1835
01:28:13,630 --> 01:28:18,490
now we don't need it let's use the space

1836
01:28:16,510 --> 01:28:22,300
we have the very cool thing is because

1837
01:28:18,490 --> 01:28:24,250
of the other draught eliding we can make

1838
01:28:22,300 --> 01:28:26,350
the configuration a bigger because now

1839
01:28:24,250 --> 01:28:29,890
we can elide it easily and we can update

1840
01:28:26,350 --> 01:28:31,930
it easily so for for the future I guess

1841
01:28:29,890 --> 01:28:33,520
we'll take the bits from the ripple

1842
01:28:31,930 --> 01:28:36,700
configuration option and not from the

1843
01:28:33,520 --> 01:28:38,530
base well from external of new options

1844
01:28:36,700 --> 01:28:40,780
to the ripple configuration option so

1845
01:28:38,530 --> 01:28:44,200
basically so for now we can live with

1846
01:28:40,780 --> 01:28:47,349
what we have so use it but be prepared

1847
01:28:44,200 --> 01:28:51,070
yes to have tlvs in the configuration

1848
01:28:47,350 --> 01:28:59,800
option in the future just like you're

1849
01:28:51,070 --> 01:29:01,299
doing for the map and I think right yes

1850
01:28:59,800 --> 01:29:03,580
you can start thinking about this

1851
01:29:01,300 --> 01:29:07,000
mechanism and if you want to piggyback

1852
01:29:03,580 --> 01:29:09,760
that with the map ax why not because

1853
01:29:07,000 --> 01:29:11,470
it's infrastructure I'm not really using

1854
01:29:09,760 --> 01:29:14,230
my packs right we are just saying a the

1855
01:29:11,470 --> 01:29:16,410
value seven will mean ripple v2 but we

1856
01:29:14,230 --> 01:29:19,209
are not defining new Maps at the moment

1857
01:29:16,410 --> 01:29:21,040
same thing we could already start for

1858
01:29:19,210 --> 01:29:23,070
providing the mechanism to put new

1859
01:29:21,040 --> 01:29:25,690
options in the configuration option and

1860
01:29:23,070 --> 01:29:29,559
some things missing and so we have the

1861
01:29:25,690 --> 01:29:31,299
infrared II so around for it sorry so I

1862
01:29:29,560 --> 01:29:34,000
just want to say that you know in this

1863
01:29:31,300 --> 01:29:35,800
case equating it to more pegs might not

1864
01:29:34,000 --> 01:29:38,140
be because because if we start using

1865
01:29:35,800 --> 01:29:39,760
mopix for such purposes it will it will

1866
01:29:38,140 --> 01:29:42,010
result in all the Combinator

1867
01:29:39,760 --> 01:29:44,260
I'm not saying use map X I'm saying o

1868
01:29:42,010 --> 01:29:47,140
map X is I infrastructural document

1869
01:29:44,260 --> 01:29:49,510
which does not recreate a new map it

1870
01:29:47,140 --> 01:29:52,870
just nabel's us to extend them up space

1871
01:29:49,510 --> 01:29:54,640
in the same fashion maybe if we need to

1872
01:29:52,870 --> 01:29:57,519
do something to be able to extend the

1873
01:29:54,640 --> 01:29:58,930
configuration space with new options and

1874
01:29:57,520 --> 01:30:00,730
you want to give formats or something

1875
01:29:58,930 --> 01:30:03,790
like that to ignore them or understand

1876
01:30:00,730 --> 01:30:05,469
them or things like that then you you

1877
01:30:03,790 --> 01:30:08,010
could package that with more tags if you

1878
01:30:05,470 --> 01:30:10,989
don't define anything new but just a a a

1879
01:30:08,010 --> 01:30:13,090
generic transport or signal for those

1880
01:30:10,989 --> 01:30:16,120
just like map exaggerate transport from

1881
01:30:13,090 --> 01:30:20,020
new maps do the maps don't exist right

1882
01:30:16,120 --> 01:30:22,059
it's no new body so just wondering if

1883
01:30:20,020 --> 01:30:24,310
you could answer your own question

1884
01:30:22,060 --> 01:30:26,890
India split more pegs but on the more

1885
01:30:24,310 --> 01:30:28,980
backside not us you know just as

1886
01:30:26,890 --> 01:30:34,450
infrastructure that could be needed

1887
01:30:28,980 --> 01:30:36,849
right so so my concern was that we we

1888
01:30:34,450 --> 01:30:40,870
will use this bit in the i/o

1889
01:30:36,850 --> 01:30:42,570
configuration option and it will this

1890
01:30:40,870 --> 01:30:46,480
bit will linger on for a long long time

1891
01:30:42,570 --> 01:30:47,889
for since even once the eight one three

1892
01:30:46,480 --> 01:30:49,989
eight option is readily used in the

1893
01:30:47,890 --> 01:30:55,630
network so this bit will become like

1894
01:30:49,989 --> 01:30:59,230
yeah but by then we will have the

1895
01:30:55,630 --> 01:31:01,570
configuration option there with

1896
01:30:59,230 --> 01:31:03,639
extensions and whatever yeah I see the

1897
01:31:01,570 --> 01:31:04,179
prime right but it's true for the

1898
01:31:03,640 --> 01:31:06,760
hop-by-hop

1899
01:31:04,180 --> 01:31:09,100
also I mean you can view that in two

1900
01:31:06,760 --> 01:31:11,560
years from now everybody we use will be

1901
01:31:09,100 --> 01:31:16,780
using X 23 and then signaling it will

1902
01:31:11,560 --> 01:31:19,750
become useless uh-huh okay so same prime

1903
01:31:16,780 --> 01:31:22,179
I don't have an answer well Michael here

1904
01:31:19,750 --> 01:31:23,230
sorry I had to go to the bathroom but I

1905
01:31:22,180 --> 01:31:25,930
just heard the last couple of the

1906
01:31:23,230 --> 01:31:31,718
conversation Pascale what if we made

1907
01:31:25,930 --> 01:31:34,560
this document experimental yeah because

1908
01:31:31,719 --> 01:31:38,560
then the allocation of the bit would be

1909
01:31:34,560 --> 01:31:41,219
essentially revocable so how do you

1910
01:31:38,560 --> 01:31:44,320
differentiate that from the user 3.0

1911
01:31:41,219 --> 01:31:46,960
like it should it should that also be

1912
01:31:44,320 --> 01:31:49,139
experimental in user 3.0 should be the

1913
01:31:46,960 --> 01:31:51,520
allocation of the bit be experimental

1914
01:31:49,140 --> 01:31:56,050
yeah it would be it would be easier if

1915
01:31:51,520 --> 01:31:57,910
if we it would be easier if we had split

1916
01:31:56,050 --> 01:31:59,560
that off into its separate document and

1917
01:31:57,910 --> 01:32:02,980
then we could mark it experimental as

1918
01:31:59,560 --> 01:32:05,290
well and so instead we would have to

1919
01:32:02,980 --> 01:32:08,500
write another document in the future if

1920
01:32:05,290 --> 01:32:10,090
we did a 65 50 bits when we would we

1921
01:32:08,500 --> 01:32:15,160
would then mark that bit as as

1922
01:32:10,090 --> 01:32:20,469
deprecated right so we could also take

1923
01:32:15,160 --> 01:32:23,910
reclaim this bit in a 65 50 bits as that

1924
01:32:20,469 --> 01:32:23,910
way that would be another option

1925
01:32:24,050 --> 01:32:31,430
I don't know I mean notice that don't

1926
01:32:28,280 --> 01:32:35,719
sorry the nodes that don't have not 81

1927
01:32:31,430 --> 01:32:38,350
38 right with if they see an

1928
01:32:35,720 --> 01:32:42,050
announcement and they're the bits not on

1929
01:32:38,350 --> 01:32:44,900
they will fail because they don't have

1930
01:32:42,050 --> 01:32:47,270
the like well it can't mean you can

1931
01:32:44,900 --> 01:32:51,259
always run uncompressed right so we

1932
01:32:47,270 --> 01:32:56,210
mandate that but right the alternate is

1933
01:32:51,260 --> 01:32:58,850
to say a mob 7 meaning ripple V 2 8 1 3

1934
01:32:56,210 --> 01:33:01,580
8 is mandatory in ripple v2 so blah you

1935
01:32:58,850 --> 01:33:03,050
could also do that but III like we

1936
01:33:01,580 --> 01:33:07,280
discussed that yesterday and I like that

1937
01:33:03,050 --> 01:33:09,410
that a little bit as the as the right

1938
01:33:07,280 --> 01:33:11,599
way but you may need this bit beforehand

1939
01:33:09,410 --> 01:33:14,809
that's all I'm saying is that that going

1940
01:33:11,600 --> 01:33:16,700
for it is experimental might might and

1941
01:33:14,810 --> 01:33:19,610
that's what we did with ecn right yeah

1942
01:33:16,700 --> 01:33:21,950
but it's I mean the metals will be

1943
01:33:19,610 --> 01:33:23,420
deployed and so if you tell them that

1944
01:33:21,950 --> 01:33:24,800
the bit is duplicated did not really

1945
01:33:23,420 --> 01:33:27,860
care they are deployed and they operate

1946
01:33:24,800 --> 01:33:31,610
unless you reflash the smart meter

1947
01:33:27,860 --> 01:33:33,710
operator will not replace the software

1948
01:33:31,610 --> 01:33:35,900
just because the bit was deprecated of

1949
01:33:33,710 --> 01:33:38,560
course not but but they also won't if

1950
01:33:35,900 --> 01:33:40,219
they don't replace the software period

1951
01:33:38,560 --> 01:33:41,810
going forward

1952
01:33:40,220 --> 01:33:43,700
so you can't duplicate that bit that's

1953
01:33:41,810 --> 01:33:46,040
what I mean right you know you will

1954
01:33:43,700 --> 01:33:47,900
still need to deploy new devices which

1955
01:33:46,040 --> 01:33:50,210
may need the new variation of the bit

1956
01:33:47,900 --> 01:33:53,809
now and so that creates an immense

1957
01:33:50,210 --> 01:33:57,170
problem my dental well well so what I'm

1958
01:33:53,810 --> 01:33:59,750
trying to say is that that so so ok so

1959
01:33:57,170 --> 01:34:02,990
next year you deploy new software and it

1960
01:33:59,750 --> 01:34:04,550
takes a year for an operator to actually

1961
01:34:02,990 --> 01:34:06,860
deploy it to all the household so that's

1962
01:34:04,550 --> 01:34:09,080
that's I would say realistic you know

1963
01:34:06,860 --> 01:34:11,150
we're talking about probably a truck

1964
01:34:09,080 --> 01:34:12,769
wool guy rolling yeah walking down the

1965
01:34:11,150 --> 01:34:14,839
street updating cousin a lot of these

1966
01:34:12,770 --> 01:34:17,480
meters don't have don't necessarily have

1967
01:34:14,840 --> 01:34:21,890
out there a field upgradeable but not in

1968
01:34:17,480 --> 01:34:24,110
band field upgradeable over-the-air okay

1969
01:34:21,890 --> 01:34:27,290
at least the one in my house is not is

1970
01:34:24,110 --> 01:34:30,530
not it's not upgradable there there they

1971
01:34:27,290 --> 01:34:33,420
they have in times come removed the

1972
01:34:30,530 --> 01:34:34,950
meter put it in a truck

1973
01:34:33,420 --> 01:34:37,110
well they're probably through a new one

1974
01:34:34,950 --> 01:34:38,849
on it but put it in a truck upgraded it

1975
01:34:37,110 --> 01:34:42,420
put it back and I've had no power for 10

1976
01:34:38,850 --> 01:34:43,920
minutes right that's how it's worked but

1977
01:34:42,420 --> 01:34:46,560
I'm told that they don't have to remove

1978
01:34:43,920 --> 01:34:49,820
the meter they just are become overly

1979
01:34:46,560 --> 01:34:52,590
cautious about electrocuting themselves

1980
01:34:49,820 --> 01:34:54,719
but the point is that it takes some time

1981
01:34:52,590 --> 01:34:57,900
as you saying it takes some time before

1982
01:34:54,720 --> 01:35:01,470
the network is upgraded and then they

1983
01:34:57,900 --> 01:35:03,240
turn the bid on okay and then they run

1984
01:35:01,470 --> 01:35:05,310
for a number of years during which

1985
01:35:03,240 --> 01:35:08,250
there's probably other other software

1986
01:35:05,310 --> 01:35:10,890
patches that come out and they they

1987
01:35:08,250 --> 01:35:13,620
apply them at some point you you make

1988
01:35:10,890 --> 01:35:15,990
the decision you know what we are no

1989
01:35:13,620 --> 01:35:20,700
longer ship support for having the bit

1990
01:35:15,990 --> 01:35:26,790
off right if the bit is turned off the

1991
01:35:20,700 --> 01:35:28,500
meter won't run right I mean it's full I

1992
01:35:26,790 --> 01:35:30,060
mean in this case it's a little bit

1993
01:35:28,500 --> 01:35:32,670
weird because you can always not you can

1994
01:35:30,060 --> 01:35:34,140
always not compress as well like eighty

1995
01:35:32,670 --> 01:35:39,000
one thirty one lets you compress better

1996
01:35:34,140 --> 01:35:40,680
right and if you just don't compress so

1997
01:35:39,000 --> 01:35:42,060
well well that's just the networks just

1998
01:35:40,680 --> 01:35:44,010
copes with it so in this case it's a

1999
01:35:42,060 --> 01:35:47,100
little bit weird because you can you can

2000
01:35:44,010 --> 01:35:49,020
always run you can always if you have 81

2001
01:35:47,100 --> 01:35:52,100
thirty-eight you can always not use it

2002
01:35:49,020 --> 01:35:55,800
as I believe it's still the case right

2003
01:35:52,100 --> 01:35:57,360
III don't see that I mean the mechanism

2004
01:35:55,800 --> 01:36:00,260
looks good the way I describe it but in

2005
01:35:57,360 --> 01:36:03,240
in in the real world I don't see that

2006
01:36:00,260 --> 01:36:08,130
the world will care if this bit was

2007
01:36:03,240 --> 01:36:10,290
experimental and some Islanders may so

2008
01:36:08,130 --> 01:36:12,990
you know it's most like at some point

2009
01:36:10,290 --> 01:36:15,740
you plan to reuse it and and that's the

2010
01:36:12,990 --> 01:36:18,059
day the nightmare starts because we'll

2011
01:36:15,740 --> 01:36:21,000
interoperate with an old implementation

2012
01:36:18,060 --> 01:36:23,100
that sees that this bit means that and

2013
01:36:21,000 --> 01:36:25,020
that guy was not reflashed and and now

2014
01:36:23,100 --> 01:36:27,390
you say oh I have to refresh my own

2015
01:36:25,020 --> 01:36:29,400
network and maybe there is this thing in

2016
01:36:27,390 --> 01:36:31,230
particular deployment which is not so

2017
01:36:29,400 --> 01:36:33,540
much in use that still speaks your

2018
01:36:31,230 --> 01:36:38,669
language of that bit I'm really really

2019
01:36:33,540 --> 01:36:40,560
concerned that when we reused a bit for

2020
01:36:38,670 --> 01:36:45,630
something else it will create a

2021
01:36:40,560 --> 01:36:47,130
nightmare but let me go back if we could

2022
01:36:45,630 --> 01:36:51,120
find a way to reuse the

2023
01:36:47,130 --> 01:36:52,679
it would you be happy or who thought

2024
01:36:51,120 --> 01:36:55,590
maybe maybe that's the better question

2025
01:36:52,679 --> 01:36:57,150
to ask you right maybe maybe maybe

2026
01:36:55,590 --> 01:36:59,280
marking experimental is not the right

2027
01:36:57,150 --> 01:37:00,809
way to figure this out but but that's

2028
01:36:59,280 --> 01:37:02,159
what I just heard as I came back in the

2029
01:37:00,810 --> 01:37:04,679
room is it we would like to be able to

2030
01:37:02,159 --> 01:37:07,920
reclaim the bit sometime in the future

2031
01:37:04,679 --> 01:37:10,980
right not next year not in five years

2032
01:37:07,920 --> 01:37:12,989
but sometime during the period of the

2033
01:37:10,980 --> 01:37:15,540
lifespan of some of these networks we

2034
01:37:12,989 --> 01:37:18,480
may want to reclaim that debt yeah so so

2035
01:37:15,540 --> 01:37:22,139
we need to define the method for that

2036
01:37:18,480 --> 01:37:24,330
like say there is another or something

2037
01:37:22,139 --> 01:37:27,420
next to it which tells you the version

2038
01:37:24,330 --> 01:37:29,760
of those bits version zero its use of

2039
01:37:27,420 --> 01:37:32,100
ripple info plus RFC eight one three

2040
01:37:29,760 --> 01:37:33,570
eight and when we go version one this

2041
01:37:32,100 --> 01:37:35,190
bit will meet something completely

2042
01:37:33,570 --> 01:37:38,730
different but that is the current

2043
01:37:35,190 --> 01:37:41,460
software can already know if those bits

2044
01:37:38,730 --> 01:37:43,259
mean that or not and if it means it's

2045
01:37:41,460 --> 01:37:45,150
future thing then it was the old version

2046
01:37:43,260 --> 01:37:46,469
is too now so I don't know what those

2047
01:37:45,150 --> 01:37:48,509
bits are but they don't mean what I

2048
01:37:46,469 --> 01:37:53,010
think they mean well I'm happy if we

2049
01:37:48,510 --> 01:37:55,560
decided that was mop equals 7 not equal

2050
01:37:53,010 --> 01:37:57,360
7 we live with this current value oh

2051
01:37:55,560 --> 01:38:00,360
yeah I mean if you say more people

2052
01:37:57,360 --> 01:38:03,929
equals 7 implies the 2 bits are set

2053
01:38:00,360 --> 01:38:07,259
that's what you mean I see yeah that's

2054
01:38:03,929 --> 01:38:10,620
what I'm saying right moving forward you

2055
01:38:07,260 --> 01:38:12,900
could already pre-k 3po yes well that's

2056
01:38:10,620 --> 01:38:16,830
right so so the point is is you know a

2057
01:38:12,900 --> 01:38:18,150
mop equal 7 you know it is is already

2058
01:38:16,830 --> 01:38:20,550
going to be a sufficient interesting

2059
01:38:18,150 --> 01:38:23,129
change that yes we could deprecated the

2060
01:38:20,550 --> 01:38:25,440
other two other bits if we needed to but

2061
01:38:23,130 --> 01:38:28,110
you also mean that the support of eight

2062
01:38:25,440 --> 01:38:31,919
one three eight is mandatory yeah I

2063
01:38:28,110 --> 01:38:34,019
thought that it should be well I sent an

2064
01:38:31,920 --> 01:38:36,270
email this morning so you didn't have

2065
01:38:34,020 --> 01:38:38,219
time to read it but the bottom line was

2066
01:38:36,270 --> 01:38:41,940
okay now we are all reported to note

2067
01:38:38,219 --> 01:38:44,010
what is mandatory was a personal but it

2068
01:38:41,940 --> 01:38:45,839
might not it might it might not be mop

2069
01:38:44,010 --> 01:38:49,020
equal seven makes it it might be mop

2070
01:38:45,840 --> 01:38:51,900
equals 7 plus mop X values we'll say

2071
01:38:49,020 --> 01:38:53,699
what what what's going on right but that

2072
01:38:51,900 --> 01:38:56,040
I'm saying is that something in that

2073
01:38:53,699 --> 01:39:00,178
space sounds like the way that we're

2074
01:38:56,040 --> 01:39:00,870
getting to ripple v2 okay and and we get

2075
01:39:00,179 --> 01:39:03,600
there

2076
01:39:00,870 --> 01:39:05,820
quickly or slowly I don't know but but

2077
01:39:03,600 --> 01:39:07,710
that sounds like the process by which we

2078
01:39:05,820 --> 01:39:09,540
should essentially obsolete some of the

2079
01:39:07,710 --> 01:39:11,820
compatibility options it's at that stage

2080
01:39:09,540 --> 01:39:14,160
that we should say that whether and I'm

2081
01:39:11,820 --> 01:39:16,830
not picky whether at which particular

2082
01:39:14,160 --> 01:39:19,470
thing is the clue the the the statement

2083
01:39:16,830 --> 01:39:20,460
that we're at quote v2 right and that

2084
01:39:19,470 --> 01:39:23,010
doesn't mean that we've spawned the

2085
01:39:20,460 --> 01:39:24,570
document even right because that may be

2086
01:39:23,010 --> 01:39:25,950
a lot more effort we may want to wait

2087
01:39:24,570 --> 01:39:27,950
for a little while and then we spend the

2088
01:39:25,950 --> 01:39:34,320
document remove stuff nobody used right

2089
01:39:27,950 --> 01:39:35,970
but they're so oh they're oh you

2090
01:39:34,320 --> 01:39:38,969
probably already spoke while I was no

2091
01:39:35,970 --> 01:39:40,740
it's a very important discussion I was

2092
01:39:38,970 --> 01:39:42,600
wondering why we we needed that much

2093
01:39:40,740 --> 01:39:45,300
time for this document but now I realize

2094
01:39:42,600 --> 01:39:46,650
it's just four uh-huh but because it's

2095
01:39:45,300 --> 01:39:48,840
not really this document right it's

2096
01:39:46,650 --> 01:39:51,150
really uh those bits will be there

2097
01:39:48,840 --> 01:39:52,620
forever and it's a way we don't have it

2098
01:39:51,150 --> 01:39:54,509
we don't have very many of them and so

2099
01:39:52,620 --> 01:39:54,870
that's why we're anxious about it yeah

2100
01:39:54,510 --> 01:39:57,240
right

2101
01:39:54,870 --> 01:39:59,730
that's the issue okay yeah so some of

2102
01:39:57,240 --> 01:40:02,610
these draft it's really land

2103
01:39:59,730 --> 01:40:03,870
so using do you agree role that you

2104
01:40:02,610 --> 01:40:05,730
don't have a fundamental problem with

2105
01:40:03,870 --> 01:40:10,410
him using the bit it's how we get little

2106
01:40:05,730 --> 01:40:11,820
bit back right so yeah and and so maybe

2107
01:40:10,410 --> 01:40:14,849
we just don't have to solve that problem

2108
01:40:11,820 --> 01:40:16,469
with this document because it's already

2109
01:40:14,850 --> 01:40:18,870
there with you I said that's what I'm

2110
01:40:16,470 --> 01:40:21,210
just saying really just hold my nose and

2111
01:40:18,870 --> 01:40:23,849
go okay it's not the best solution that

2112
01:40:21,210 --> 01:40:27,540
I would like because document applies to

2113
01:40:23,850 --> 01:40:31,290
a network with map non-story so we could

2114
01:40:27,540 --> 01:40:33,720
say as long as the map is is the current

2115
01:40:31,290 --> 01:40:35,310
known story at least a bit mean yes yes

2116
01:40:33,720 --> 01:40:37,170
and then we can always delay to the

2117
01:40:35,310 --> 01:40:40,260
future when the map is seven to say what

2118
01:40:37,170 --> 01:40:42,000
happens so so so maybe maybe the

2119
01:40:40,260 --> 01:40:45,120
document should say this document

2120
01:40:42,000 --> 01:40:46,560
applies to mop non storing I don't know

2121
01:40:45,120 --> 01:40:50,280
if you want to apply to storing as well

2122
01:40:46,560 --> 01:40:53,400
I'm open to that statement okay but you

2123
01:40:50,280 --> 01:40:56,639
may not but but then you may want to say

2124
01:40:53,400 --> 01:40:59,639
that this bit is undefined for other mop

2125
01:40:56,640 --> 01:41:02,930
values until such time as someone else

2126
01:40:59,640 --> 01:41:10,860
decides whether it's defined or not

2127
01:41:02,930 --> 01:41:14,610
right do you want to go and make the

2128
01:41:10,860 --> 01:41:21,389
same addition for user freepo because

2129
01:41:14,610 --> 01:41:23,670
stealing though Hales Michael again so

2130
01:41:21,390 --> 01:41:26,070
we would say it applies to the mop value

2131
01:41:23,670 --> 01:41:27,960
for storing with multicast and the mop

2132
01:41:26,070 --> 01:41:29,549
value for storing without multicast or

2133
01:41:27,960 --> 01:41:31,380
whatever it was in the mop Valley for

2134
01:41:29,550 --> 01:41:33,330
not storing a camera with a list of the

2135
01:41:31,380 --> 01:41:35,760
three well these are se to say that

2136
01:41:33,330 --> 01:41:38,010
supplies to the other no no I'm saying

2137
01:41:35,760 --> 01:41:38,670
in use of ripple we would we would

2138
01:41:38,010 --> 01:41:41,250
qualify

2139
01:41:38,670 --> 01:41:43,800
we also qualify our use of the bit to

2140
01:41:41,250 --> 01:41:45,480
say it's the three values of mop that I

2141
01:41:43,800 --> 01:41:47,250
think are the relevant three that matter

2142
01:41:45,480 --> 01:41:48,509
and I don't think there's any other ones

2143
01:41:47,250 --> 01:41:50,340
there's one that no one uses or

2144
01:41:48,510 --> 01:41:52,980
something right right I can't remember

2145
01:41:50,340 --> 01:41:55,620
what the list is but so the plan I can

2146
01:41:52,980 --> 01:41:57,480
summarize the plan is I change this

2147
01:41:55,620 --> 01:42:01,380
draft well we can still call for

2148
01:41:57,480 --> 01:42:04,200
adoption right because the draft to say

2149
01:42:01,380 --> 01:42:07,380
a by the way this bit is only defined if

2150
01:42:04,200 --> 01:42:09,120
the map is below seven first time then

2151
01:42:07,380 --> 01:42:11,820
you go news a free poll you do the same

2152
01:42:09,120 --> 01:42:21,570
thing this okay socialize I'll leave the

2153
01:42:11,820 --> 01:42:23,340
mop is below seven and we still have to

2154
01:42:21,570 --> 01:42:25,830
look at my email where I say what does

2155
01:42:23,340 --> 01:42:30,150
seven mean basically what is optional

2156
01:42:25,830 --> 01:42:34,519
what's is mandatory or something okay so

2157
01:42:30,150 --> 01:42:34,519
we have a whole is it satisfactory oh

2158
01:42:35,210 --> 01:42:39,990
yeah I don't know I just have a question

2159
01:42:37,380 --> 01:42:43,620
because I'm maybe a little bit lost or

2160
01:42:39,990 --> 01:42:48,170
any other bits dependent on the mop just

2161
01:42:43,620 --> 01:42:50,820
this one I think it's the first time

2162
01:42:48,170 --> 01:42:52,230
because in reality what it sounds that

2163
01:42:50,820 --> 01:42:54,900
you're doing is that you were creating

2164
01:42:52,230 --> 01:42:56,490
sort of a different registry I mean

2165
01:42:54,900 --> 01:42:59,070
right because the way I ain't had those

2166
01:42:56,490 --> 01:43:01,950
things right there's the registry and it

2167
01:42:59,070 --> 01:43:03,269
says this bit is whatever right today it

2168
01:43:01,950 --> 01:43:06,269
doesn't differentiate between the moms

2169
01:43:03,270 --> 01:43:08,070
right so basically by saying this only

2170
01:43:06,270 --> 01:43:11,250
applies to some mops and not others

2171
01:43:08,070 --> 01:43:14,340
you're sort of adding columns to the

2172
01:43:11,250 --> 01:43:17,220
registry we are to say this bit applies

2173
01:43:14,340 --> 01:43:19,620
you know one four six or whatever this

2174
01:43:17,220 --> 01:43:23,430
other bit applies to everything or you

2175
01:43:19,620 --> 01:43:27,120
know whatever it is because later right

2176
01:43:23,430 --> 01:43:27,840
if you do mop eight or something and now

2177
01:43:27,120 --> 01:43:31,260
you say that

2178
01:43:27,840 --> 01:43:33,330
as bid means something else right and

2179
01:43:31,260 --> 01:43:34,470
you ask a let's racer it well how do you

2180
01:43:33,330 --> 01:43:37,890
raise for that because it's already

2181
01:43:34,470 --> 01:43:40,740
there right unless you modify the

2182
01:43:37,890 --> 01:43:42,930
registry somehow ensure I mean we can

2183
01:43:40,740 --> 01:43:44,880
there are main registries there that

2184
01:43:42,930 --> 01:43:47,130
have your columns and you know whatever

2185
01:43:44,880 --> 01:43:50,040
right it's a race don't already in the

2186
01:43:47,130 --> 01:43:52,230
past yes so we have to I think the

2187
01:43:50,040 --> 01:43:53,280
registry would have to be modified for

2188
01:43:52,230 --> 01:43:55,950
that right it's not as easy is just

2189
01:43:53,280 --> 01:43:57,599
saying in one sentence it only applies

2190
01:43:55,950 --> 01:43:59,970
right here there is already a you know

2191
01:43:57,600 --> 01:44:02,340
section but just say stab it doesn't say

2192
01:43:59,970 --> 01:44:04,170
the column right right exactly so that's

2193
01:44:02,340 --> 01:44:07,050
what I mean there's no column today

2194
01:44:04,170 --> 01:44:09,930
right so someone somewhere and one of

2195
01:44:07,050 --> 01:44:13,200
these documents has to update the

2196
01:44:09,930 --> 01:44:16,580
registry so that now and in the future

2197
01:44:13,200 --> 01:44:22,860
for every other bit you have to indicate

2198
01:44:16,580 --> 01:44:24,330
what mops the bit is valid for so I mean

2199
01:44:22,860 --> 01:44:25,620
it gives you a lot more flexibility and

2200
01:44:24,330 --> 01:44:28,920
it actually gives you a lot more bits

2201
01:44:25,620 --> 01:44:31,590
right because now you can have all the

2202
01:44:28,920 --> 01:44:34,680
bits supply to one specific one or not

2203
01:44:31,590 --> 01:44:37,860
apply to something I completely agree

2204
01:44:34,680 --> 01:44:39,780
for one and I was thinking as we went on

2205
01:44:37,860 --> 01:44:41,849
which document should be doing this I

2206
01:44:39,780 --> 01:44:45,059
was thinking after the case have in mind

2207
01:44:41,850 --> 01:44:47,280
is 6lowpan in sixth up and initially we

2208
01:44:45,060 --> 01:44:49,710
started with with the bits in just one

2209
01:44:47,280 --> 01:44:54,300
table and then we did arrive c85 28 and

2210
01:44:49,710 --> 01:44:56,100
28 0 25 its 0 25 basically is mostly

2211
01:44:54,300 --> 01:44:58,080
about saying that the sixth applied

2212
01:44:56,100 --> 01:45:00,800
compression now is in tables so you have

2213
01:44:58,080 --> 01:45:03,510
like 16 tables so we are did this table

2214
01:45:00,800 --> 01:45:06,150
column which is exactly the same as the

2215
01:45:03,510 --> 01:45:08,550
mop column now well initially 6 up and

2216
01:45:06,150 --> 01:45:11,370
even without it and then there was 8 525

2217
01:45:08,550 --> 01:45:14,760
8 0 25 which was mostly about creating

2218
01:45:11,370 --> 01:45:16,920
that column in our case the inference

2219
01:45:14,760 --> 01:45:18,750
which an infrastructure thing it does

2220
01:45:16,920 --> 01:45:21,930
not really a new function it please new

2221
01:45:18,750 --> 01:45:24,240
infra and we have a mock draft which is

2222
01:45:21,930 --> 01:45:26,910
coming map X which will bring new in

2223
01:45:24,240 --> 01:45:28,980
fraud but not not new feature and this

2224
01:45:26,910 --> 01:45:31,590
new infra will be when the new cap maps

2225
01:45:28,980 --> 01:45:33,809
will be introduced they won't because

2226
01:45:31,590 --> 01:45:36,360
the problem is if we did it in use of

2227
01:45:33,810 --> 01:45:38,910
repo or if we did it in this one then it

2228
01:45:36,360 --> 01:45:40,530
would not be balanced kind of and right

2229
01:45:38,910 --> 01:45:41,670
now we don't need them because we say it

2230
01:45:40,530 --> 01:45:44,580
applies to all the

2231
01:45:41,670 --> 01:45:47,370
that exists so so we could say we can

2232
01:45:44,580 --> 01:45:48,929
leave for those two drafts the way use

2233
01:45:47,370 --> 01:45:50,670
of ripple is already written and the way

2234
01:45:48,929 --> 01:45:53,790
this one's already written but we need

2235
01:45:50,670 --> 01:45:56,280
to do what you say very soon in an infra

2236
01:45:53,790 --> 01:46:00,960
draft which is mopix maybe that's just

2237
01:45:56,280 --> 01:46:02,219
my suggestion right so yes so saying

2238
01:46:00,960 --> 01:46:04,050
that it applies to all the mops that

2239
01:46:02,219 --> 01:46:06,780
exist really says that it applies to all

2240
01:46:04,050 --> 01:46:09,719
the moms even the future ones that are

2241
01:46:06,780 --> 01:46:12,330
not defined right because again right

2242
01:46:09,719 --> 01:46:14,030
now there's nothing that says that

2243
01:46:12,330 --> 01:46:17,390
whatever bit has already been defined

2244
01:46:14,030 --> 01:46:19,559
would not apply to some future thing

2245
01:46:17,390 --> 01:46:23,040
because think of the registry is flat

2246
01:46:19,560 --> 01:46:26,310
right it's just one column so do we do

2247
01:46:23,040 --> 01:46:29,400
we need to show you just a lot of things

2248
01:46:26,310 --> 01:46:31,350
that if somehow you really want to say

2249
01:46:29,400 --> 01:46:34,170
that whatever bit has already been

2250
01:46:31,350 --> 01:46:36,570
defined only applies to the mops that

2251
01:46:34,170 --> 01:46:39,960
have been defined now yes we want it

2252
01:46:36,570 --> 01:46:42,259
when that infrastructure is defined you

2253
01:46:39,960 --> 01:46:45,800
need to go update that other old RFC's

2254
01:46:42,260 --> 01:46:48,239
so that they don't apply to future mops

2255
01:46:45,800 --> 01:46:51,030
unless the future mob must use that bit

2256
01:46:48,239 --> 01:46:53,280
for whatever which is what so there's

2257
01:46:51,030 --> 01:46:56,309
some more you know text that has to go

2258
01:46:53,280 --> 01:46:58,650
in there somehow so we know in our two

2259
01:46:56,310 --> 01:47:00,449
drafts will say applies to mob bla bla

2260
01:46:58,650 --> 01:47:02,639
bla and for the rest we can say that's

2261
01:47:00,449 --> 01:47:04,500
what we'll say right but we don't we

2262
01:47:02,640 --> 01:47:06,480
won't be doing inr games

2263
01:47:04,500 --> 01:47:09,480
we'll just declare the base to the IANA

2264
01:47:06,480 --> 01:47:12,389
as if there is a single set of bits and

2265
01:47:09,480 --> 01:47:15,089
in map X we say oh by the way for future

2266
01:47:12,390 --> 01:47:16,980
like you say it's different and we

2267
01:47:15,090 --> 01:47:20,130
create a new registry for the mob x

2268
01:47:16,980 --> 01:47:23,339
equals seven right as a registry with a

2269
01:47:20,130 --> 01:47:26,550
new column it will add the column yeah

2270
01:47:23,340 --> 01:47:28,560
sure we call when we add the column I

2271
01:47:26,550 --> 01:47:30,600
was just looking as I actually when you

2272
01:47:28,560 --> 01:47:32,370
said this I was like really I thought I

2273
01:47:30,600 --> 01:47:33,870
didn't think we actually had a registry

2274
01:47:32,370 --> 01:47:36,540
for that those bits I thought we

2275
01:47:33,870 --> 01:47:39,269
actually were just updating 6550 as a as

2276
01:47:36,540 --> 01:47:41,040
an update that's that's that's what I

2277
01:47:39,270 --> 01:47:43,230
thought we were doing and I just looked

2278
01:47:41,040 --> 01:47:45,960
and there is a registry and and we are

2279
01:47:43,230 --> 01:47:47,669
we are updating it and use of our pls

2280
01:47:45,960 --> 01:47:51,000
bits already in the list even because it

2281
01:47:47,670 --> 01:47:53,820
was a allocated it's Vienna when we went

2282
01:47:51,000 --> 01:47:55,500
through them the first pet time so but I

2283
01:47:53,820 --> 01:47:58,230
think what you're saying Ella vero and

2284
01:47:55,500 --> 01:48:01,740
and Pascal is that we will just go

2285
01:47:58,230 --> 01:48:04,620
proceed and turn on will allocate the

2286
01:48:01,740 --> 01:48:08,070
bit as the use of our PL did and that

2287
01:48:04,620 --> 01:48:11,880
when we define mop equals seven in the

2288
01:48:08,070 --> 01:48:14,400
mop X Draft we will then add the column

2289
01:48:11,880 --> 01:48:17,190
to that registry and create another

2290
01:48:14,400 --> 01:48:18,629
another thing because that puts it in

2291
01:48:17,190 --> 01:48:22,110
the right draft that creates the right

2292
01:48:18,630 --> 01:48:25,800
place and and that that male make it

2293
01:48:22,110 --> 01:48:27,420
clear I hope and not we could walk down

2294
01:48:25,800 --> 01:48:30,120
the hall and talk to Michelle and find

2295
01:48:27,420 --> 01:48:32,250
out what she thinks so we need one more

2296
01:48:30,120 --> 01:48:33,840
quick edit to use a free poll that the

2297
01:48:32,250 --> 01:48:39,960
whole because we are before we add it

2298
01:48:33,840 --> 01:48:41,820
back to you it's a small champion use a

2299
01:48:39,960 --> 01:48:45,810
free mobile site only applies to mobs

2300
01:48:41,820 --> 01:48:47,400
bla right yeah Raja though can we go for

2301
01:48:45,810 --> 01:48:49,800
another buy one more question in the

2302
01:48:47,400 --> 01:48:52,769
same context not in the same context

2303
01:48:49,800 --> 01:48:55,140
with regards to the use of a 23-8 there

2304
01:48:52,770 --> 01:48:59,400
is and now we have a dependency of this

2305
01:48:55,140 --> 01:49:02,220
on P Dow because we might have non

2306
01:48:59,400 --> 01:49:07,080
storing mode segments in projected Dow

2307
01:49:02,220 --> 01:49:18,150
and we would like the node nodes to know

2308
01:49:07,080 --> 01:49:20,220
that a 23-8 is on so you mean that when

2309
01:49:18,150 --> 01:49:23,250
you send a pit out there should be a bit

2310
01:49:20,220 --> 01:49:26,550
in the P Dow saying use a 23-8 for this

2311
01:49:23,250 --> 01:49:28,470
project or rather not Abed it is

2312
01:49:26,550 --> 01:49:30,600
possible but so basically the problem is

2313
01:49:28,470 --> 01:49:32,330
this in using P Dow we can have a

2314
01:49:30,600 --> 01:49:34,830
segments which are non storing mode

2315
01:49:32,330 --> 01:49:37,710
which operates in non storing more and

2316
01:49:34,830 --> 01:49:39,780
they can essentially use a 23-8 even in

2317
01:49:37,710 --> 01:49:41,820
storing I mean even in even if the whole

2318
01:49:39,780 --> 01:49:43,650
network is not fully at once rate

2319
01:49:41,820 --> 01:49:44,219
capable it might be that a given path

2320
01:49:43,650 --> 01:49:46,080
yes

2321
01:49:44,220 --> 01:49:49,110
and so you could you if you are the

2322
01:49:46,080 --> 01:49:51,090
capabilities to know that this path is 8

2323
01:49:49,110 --> 01:49:54,059
1 3 8 compliant you could signal in the

2324
01:49:51,090 --> 01:49:58,200
PIO use compression for that path right

2325
01:49:54,060 --> 01:50:03,480
so it's not just on store and I mean so

2326
01:49:58,200 --> 01:50:06,480
why so does that make any so now we have

2327
01:50:03,480 --> 01:50:08,909
to refer I mean we would it mean that

2328
01:50:06,480 --> 01:50:11,129
this document the

2329
01:50:08,909 --> 01:50:13,138
we'll be a normative reference in PDF

2330
01:50:11,130 --> 01:50:14,610
for this document not necessarily so dot

2331
01:50:13,139 --> 01:50:19,139
no I don't think so

2332
01:50:14,610 --> 01:50:22,289
first thing is by default today P doubt

2333
01:50:19,139 --> 01:50:24,179
that's what the duck does so if if down

2334
01:50:22,289 --> 01:50:26,518
on I stand down that's true for died

2335
01:50:24,179 --> 01:50:28,229
Opie doubt everybody so the dog is is

2336
01:50:26,519 --> 01:50:31,019
doing it or the dag is not doing it and

2337
01:50:28,229 --> 01:50:33,389
P da is just another lie inside this big

2338
01:50:31,019 --> 01:50:34,889
tag so so for now because we didn't

2339
01:50:33,389 --> 01:50:35,610
specify anything that's probably the way

2340
01:50:34,889 --> 01:50:37,769
it works

2341
01:50:35,610 --> 01:50:40,018
it needs words in P Dow to just say that

2342
01:50:37,769 --> 01:50:43,079
but it would be the implicit way now if

2343
01:50:40,019 --> 01:50:46,619
we want to do something more fancy

2344
01:50:43,079 --> 01:50:48,570
inside the P Dow subtag not just

2345
01:50:46,619 --> 01:50:51,299
narrating from the underlay but having

2346
01:50:48,570 --> 01:50:54,239
its own capabilities it's not because of

2347
01:50:51,300 --> 01:50:57,179
this signaling anymore it's because of a

2348
01:50:54,239 --> 01:50:58,919
bit in the P Dow telling you oh by the

2349
01:50:57,179 --> 01:51:02,789
way you can compress even if the rest of

2350
01:50:58,919 --> 01:51:09,269
the tag does not do we want that well

2351
01:51:02,789 --> 01:51:11,728
you tell me on the mailing list I hope

2352
01:51:09,269 --> 01:51:13,530
you know my thing is I'm that's why what

2353
01:51:11,729 --> 01:51:15,539
you said only I resonated to me is like

2354
01:51:13,530 --> 01:51:17,340
I really hope that in the near future

2355
01:51:15,539 --> 01:51:19,199
everybody does it and does not ask the

2356
01:51:17,340 --> 01:51:20,969
question which is what you said the bit

2357
01:51:19,199 --> 01:51:22,978
becomes useless it's kind of the same

2358
01:51:20,969 --> 01:51:25,829
thing for using 23 right I mean the big

2359
01:51:22,979 --> 01:51:27,809
becomes useless okay if the bit is

2360
01:51:25,829 --> 01:51:30,119
useless then don't spend too much effort

2361
01:51:27,809 --> 01:51:32,340
doing the PIO different from the rest

2362
01:51:30,119 --> 01:51:36,169
just think that everybody will use 80

2363
01:51:32,340 --> 01:51:39,030
once right very soon and we all set

2364
01:51:36,169 --> 01:51:41,909
but yes having a sentence in P Dow say

2365
01:51:39,030 --> 01:51:46,249
the user of the compression is narrated

2366
01:51:41,909 --> 01:51:46,249
from the dock could be a sentence to add

2367
01:51:46,969 --> 01:51:59,280
so that would make P Dow refer to that

2368
01:51:50,760 --> 01:52:03,150
normatively if we say that so this

2369
01:51:59,280 --> 01:52:06,840
should fly yeah Thank You Pascal so we

2370
01:52:03,150 --> 01:52:11,969
are going to do the adoption call for

2371
01:52:06,840 --> 01:52:14,539
disrupt so please ham if you re with

2372
01:52:11,969 --> 01:52:14,539
this document

2373
01:52:17,870 --> 01:52:27,440
the AC agrees it's the AC I'm smaller

2374
01:52:24,120 --> 01:52:37,800
than they do right so so please hug

2375
01:52:27,440 --> 01:52:39,809
please huh no so yeah okay now we raise

2376
01:52:37,800 --> 01:52:44,390
hand because we didn't listen so much

2377
01:52:39,810 --> 01:52:47,610
what race honey few already

2378
01:52:44,390 --> 01:52:52,620
yeah result if you agree to adopt the

2379
01:52:47,610 --> 01:52:55,670
document yes I guess three four five six

2380
01:52:52,620 --> 01:52:55,670
seven eight

2381
01:52:55,880 --> 01:53:02,690
so raise hand if you don't agree with

2382
01:53:00,000 --> 01:53:06,300
this document to be adopted

2383
01:53:02,690 --> 01:53:14,910
yeah if you oppose if you have passed a

2384
01:53:06,300 --> 01:53:18,090
thank you so no yeah and nobody in the

2385
01:53:14,910 --> 01:53:21,930
Matteo Needham so yes we can't film in

2386
01:53:18,090 --> 01:53:25,950
the minimis so far we agreed to adopt

2387
01:53:21,930 --> 01:53:29,370
this document so thank you very much for

2388
01:53:25,950 --> 01:53:34,320
the useful conversation so we have some

2389
01:53:29,370 --> 01:53:36,630
additional comments you know additional

2390
01:53:34,320 --> 01:53:39,420
comments or questions if the people has

2391
01:53:36,630 --> 01:53:41,850
no so so far we have to update this

2392
01:53:39,420 --> 01:53:48,060
document and the use of ripple info as

2393
01:53:41,850 --> 01:53:55,760
well okay so it's time for today thank

2394
01:53:48,060 --> 01:53:55,760
you very much we finish

2395
01:54:38,969 --> 01:54:41,030
you

