1
00:00:42,380 --> 00:00:46,770
yeah okay friends let's get started we

2
00:00:45,030 --> 00:00:49,140
only have 90 minutes and there's a bunch

3
00:00:46,770 --> 00:00:52,440
of things to talk about the blue sheets

4
00:00:49,140 --> 00:00:54,060
are going around Sara and tail are gonna

5
00:00:52,440 --> 00:00:57,269
be taking notes I assume you guys can be

6
00:00:54,060 --> 00:01:03,300
using ether pad Sara's at your plan -

7
00:00:57,270 --> 00:01:05,610
okay already there okay great okay so

8
00:01:03,300 --> 00:01:10,590
welcome again this is me daddy

9
00:01:05,610 --> 00:01:16,200
jonshorter it mature iron so let's just

10
00:01:10,590 --> 00:01:19,770
wrap the Tufts IT f-106 session not well

11
00:01:16,200 --> 00:01:26,360
I think you have been already familiar

12
00:01:19,770 --> 00:01:26,360
if not please read it out and maintain

13
00:01:27,409 --> 00:01:34,260
you have some links there you can click

14
00:01:30,120 --> 00:01:37,490
Anakin you can read on Emily's a time

15
00:01:34,260 --> 00:01:40,380
so this is this the agenda so we have

16
00:01:37,490 --> 00:01:44,759
some issues review I think we'll go

17
00:01:40,380 --> 00:01:47,429
through the github and then we have we

18
00:01:44,760 --> 00:01:49,799
have like Brian talk tech talking about

19
00:01:47,430 --> 00:01:52,320
Tufts architecture and interfaces and

20
00:01:49,799 --> 00:01:59,909
then Tommy will be an implementation so

21
00:01:52,320 --> 00:02:02,220
that way updates then we have one IT a

22
00:01:59,909 --> 00:02:04,380
plastic off we got some comments that we

23
00:02:02,220 --> 00:02:06,210
would like to converse to some

24
00:02:04,380 --> 00:02:10,378
conclusion what to do I think where our

25
00:02:06,210 --> 00:02:14,069
Aires has also like try to sale resolve

26
00:02:10,378 --> 00:02:16,980
the how try to come up with a solution

27
00:02:14,069 --> 00:02:18,540
like arteries of the issues and then

28
00:02:16,980 --> 00:02:20,640
we'll have some discussion on the mile

29
00:02:18,540 --> 00:02:22,560
because we have a couple of - attention

30
00:02:20,640 --> 00:02:27,719
to you and we have some plans for that

31
00:02:22,560 --> 00:02:32,459
one document status as I said there was

32
00:02:27,719 --> 00:02:34,890
like one document on the IPO plus last

33
00:02:32,459 --> 00:02:39,450
call so we have been on 80 follow up

34
00:02:34,890 --> 00:02:42,238
stays and we have Phillip doing the

35
00:02:39,450 --> 00:02:43,738
shepherding thanks for doing it and you

36
00:02:42,239 --> 00:02:47,849
have I think you have a quite a good

37
00:02:43,739 --> 00:02:50,700
experience looks like is this a fast

38
00:02:47,849 --> 00:02:56,250
shepherding of document okay so that's a

39
00:02:50,700 --> 00:02:58,168
good experience and then there was a fan

40
00:02:56,250 --> 00:03:01,489
interim but we cancelled it because we

41
00:02:58,169 --> 00:03:05,099
didn't find a much of things to discuss

42
00:03:01,489 --> 00:03:08,010
so we said like yeah let's meet on this

43
00:03:05,099 --> 00:03:09,450
meeting and there it here is how it

44
00:03:08,010 --> 00:03:21,810
looks like the milestones so we have

45
00:03:09,450 --> 00:03:24,750
like two deals and I think okay next

46
00:03:21,810 --> 00:03:26,159
slide so like I said in the there's not

47
00:03:24,750 --> 00:03:30,019
next slide oh you didn't update the

48
00:03:26,159 --> 00:03:34,760
slides I that's that's interesting okay

49
00:03:30,019 --> 00:03:34,760
will it's a surprise

50
00:03:35,389 --> 00:03:43,079
hold on a second you know what we'll

51
00:03:41,159 --> 00:03:45,510
come back to this at the end basically I

52
00:03:43,079 --> 00:03:47,819
have I drafted a schedule to get us from

53
00:03:45,510 --> 00:03:51,000
here to March with getting working group

54
00:03:47,819 --> 00:03:55,379
last call for the three drafts with some

55
00:03:51,000 --> 00:03:57,709
notional weeks for calls in timeframes

56
00:03:55,379 --> 00:04:01,290
for doing working group last calls and

57
00:03:57,709 --> 00:04:02,489
so ideally I wanted people that the

58
00:04:01,290 --> 00:04:04,019
authors and such to look at their

59
00:04:02,489 --> 00:04:05,629
calendars and see if they could support

60
00:04:04,019 --> 00:04:14,400
the schedule get a commitment from folks

61
00:04:05,629 --> 00:04:17,250
and we will hold on a second I gotta

62
00:04:14,400 --> 00:04:17,668
first I found the room and yes I beg

63
00:04:17,250 --> 00:04:20,159
your pardon

64
00:04:17,668 --> 00:04:24,169
Corey first I find the room and yes I

65
00:04:20,159 --> 00:04:28,830
commit to this this is a gang core is in

66
00:04:24,169 --> 00:04:32,010
that doesn't matter he's in that it's

67
00:04:28,830 --> 00:04:32,919
that much more meaningful I've got the

68
00:04:32,010 --> 00:04:46,930
slide on my

69
00:04:32,920 --> 00:04:54,490
my laptop here hello that is an

70
00:04:46,930 --> 00:04:57,070
excellent question okay so here it is

71
00:04:54,490 --> 00:05:00,280
it's a it's kind of aggressive basically

72
00:04:57,070 --> 00:05:02,469
the basic structure is we try to do

73
00:05:00,280 --> 00:05:03,880
working group last call for a different

74
00:05:02,470 --> 00:05:06,430
document each month starting with the

75
00:05:03,880 --> 00:05:09,159
most mature right so we go arch then

76
00:05:06,430 --> 00:05:10,540
interface and implementation then in the

77
00:05:09,160 --> 00:05:11,620
subsequent month we figure that there's

78
00:05:10,540 --> 00:05:14,110
going to be stuff that comes out of the

79
00:05:11,620 --> 00:05:16,630
last call we have to do a Rev right and

80
00:05:14,110 --> 00:05:18,940
so when in December we work in group

81
00:05:16,630 --> 00:05:21,010
last call arch then in January we rev it

82
00:05:18,940 --> 00:05:22,980
and January we're working group last

83
00:05:21,010 --> 00:05:25,960
call interface in February we Revit

84
00:05:22,980 --> 00:05:29,500
again in implementation in February and

85
00:05:25,960 --> 00:05:36,280
then we rib it for March and then we do

86
00:05:29,500 --> 00:05:37,330
an interim call I'm I'm so this is I

87
00:05:36,280 --> 00:05:39,609
guess I need a little bit of feedback

88
00:05:37,330 --> 00:05:49,150
from the community is like well should

89
00:05:39,610 --> 00:05:52,150
we do the call you know what what's

90
00:05:49,150 --> 00:05:53,710
wrong with the call oh yeah assuming we

91
00:05:52,150 --> 00:05:57,489
will have stuff to talk about

92
00:05:53,710 --> 00:06:02,349
otherwise we we would be done now so I

93
00:05:57,490 --> 00:06:04,300
am I'm I'm gonna disagree Nagori I'm

94
00:06:02,350 --> 00:06:07,570
strongly in favor of you know in call I

95
00:06:04,300 --> 00:06:10,240
think this is the right number of them I

96
00:06:07,570 --> 00:06:12,520
think we probably need to do to all this

97
00:06:10,240 --> 00:06:14,080
because January 13th is not great for me

98
00:06:12,520 --> 00:06:15,940
in February 10th I'm not gonna show up

99
00:06:14,080 --> 00:06:18,640
at because this is not as interesting as

100
00:06:15,940 --> 00:06:20,170
the mountains are I haven't checked

101
00:06:18,640 --> 00:06:22,690
March 23rd yet but I think it's okay

102
00:06:20,170 --> 00:06:30,460
wait when when do we actually know first

103
00:06:22,690 --> 00:06:32,110
the IETF yeah but you know okay so well

104
00:06:30,460 --> 00:06:34,210
what I wanted to do is was pick a week

105
00:06:32,110 --> 00:06:35,860
and then doodle within the week so that

106
00:06:34,210 --> 00:06:38,049
we don't have to try to pick from across

107
00:06:35,860 --> 00:06:40,870
the whole month and so can we try to

108
00:06:38,050 --> 00:06:42,040
narrow that down now like so December

109
00:06:40,870 --> 00:06:44,040
16th does anybody have a problem

110
00:06:42,040 --> 00:06:46,570
December 16th considering that a

111
00:06:44,040 --> 00:06:49,830
question yes

112
00:06:46,570 --> 00:06:53,260
so I like the idea of the calls yeah I

113
00:06:49,830 --> 00:06:55,479
just I understand the January February

114
00:06:53,260 --> 00:06:57,310
March ones because those are after

115
00:06:55,480 --> 00:07:00,070
working group last calls when we've

116
00:06:57,310 --> 00:07:01,630
presumably received comments I don't

117
00:07:00,070 --> 00:07:05,980
understand the point of the first one if

118
00:07:01,630 --> 00:07:08,290
we haven't started a call do what's the

119
00:07:05,980 --> 00:07:11,950
agenda for that it's for things that we

120
00:07:08,290 --> 00:07:13,810
don't get resolved here today okay

121
00:07:11,950 --> 00:07:16,090
that might have to go into the other

122
00:07:13,810 --> 00:07:18,460
documents that are not yet in last call

123
00:07:16,090 --> 00:07:20,619
it's like we don't have to only discuss

124
00:07:18,460 --> 00:07:21,219
the the documents that have been last

125
00:07:20,620 --> 00:07:23,080
called

126
00:07:21,220 --> 00:07:24,250
in our interim meetings right we can

127
00:07:23,080 --> 00:07:25,930
talk about the other documents if

128
00:07:24,250 --> 00:07:27,820
there's stuff that's unresolved so

129
00:07:25,930 --> 00:07:28,840
they're kind of placeholders for now but

130
00:07:27,820 --> 00:07:31,360
that's one of the things I wanted

131
00:07:28,840 --> 00:07:32,739
feedback on or not I just wondered

132
00:07:31,360 --> 00:07:35,800
whether there actually won't I just

133
00:07:32,740 --> 00:07:37,330
think whether if we do architecture

134
00:07:35,800 --> 00:07:39,100
working group last call and with then we

135
00:07:37,330 --> 00:07:40,599
we try and revise it and we try and get

136
00:07:39,100 --> 00:07:44,530
good text we probably have it ready for

137
00:07:40,600 --> 00:07:46,570
about January the 13th or so and if we

138
00:07:44,530 --> 00:07:49,690
do implementation we do working great

139
00:07:46,570 --> 00:07:51,159
last call in February then so before you

140
00:07:49,690 --> 00:07:53,110
go I want to I don't know in the first

141
00:07:51,160 --> 00:07:55,360
thing you said you say it again Julie so

142
00:07:53,110 --> 00:07:56,980
I think the first okay I may be thinking

143
00:07:55,360 --> 00:07:59,080
exactly the same as Tommy but I'm just

144
00:07:56,980 --> 00:08:02,500
not going in my head yet but um I think

145
00:07:59,080 --> 00:08:05,229
the UH the architecture call needs to be

146
00:08:02,500 --> 00:08:07,180
in January after we do working grit last

147
00:08:05,230 --> 00:08:08,950
call we get some feedback we've done a

148
00:08:07,180 --> 00:08:11,740
detailed read through with our brains

149
00:08:08,950 --> 00:08:13,690
Rhys inked and and it's kind of almost

150
00:08:11,740 --> 00:08:16,600
there a book we just need to get it

151
00:08:13,690 --> 00:08:18,850
there and on the next one this or the

152
00:08:16,600 --> 00:08:21,040
one of the beginning seems to be like

153
00:08:18,850 --> 00:08:22,630
before we've got this process in stat

154
00:08:21,040 --> 00:08:24,670
right and then there's will have to be

155
00:08:22,630 --> 00:08:26,590
one in MA racially you are making the

156
00:08:24,670 --> 00:08:29,710
same comment that Tommy did let me go

157
00:08:26,590 --> 00:08:30,549
sit down stop no no let me makers I

158
00:08:29,710 --> 00:08:32,140
don't understand if you have an

159
00:08:30,550 --> 00:08:33,669
objection yet let me try to explain my

160
00:08:32,140 --> 00:08:35,650
thinking the thinking is that the

161
00:08:33,669 --> 00:08:37,659
interim calls are not just to discuss

162
00:08:35,650 --> 00:08:39,189
last call comments but they're discussed

163
00:08:37,659 --> 00:08:42,069
open issues for documents that have not

164
00:08:39,190 --> 00:08:44,169
yet gone into last call the idea is to

165
00:08:42,070 --> 00:08:46,030
have a more frequent cadence than IETF

166
00:08:44,169 --> 00:08:48,550
meetings for us to talk about things

167
00:08:46,030 --> 00:08:50,949
that are unresolved right it doesn't

168
00:08:48,550 --> 00:08:52,900
have to be to respond to less call

169
00:08:50,950 --> 00:08:56,080
Clemens let me let me be a little bit

170
00:08:52,900 --> 00:08:59,290
more blunt I think that the January 13th

171
00:08:56,080 --> 00:09:00,400
beating is for the last call the

172
00:08:59,290 --> 00:09:02,380
February 10th beating is for the

173
00:09:00,400 --> 00:09:03,910
called the December 16th feeding is a

174
00:09:02,380 --> 00:09:05,320
forcing function to make sure that we

175
00:09:03,910 --> 00:09:07,930
like actually get off our butts and do

176
00:09:05,320 --> 00:09:10,450
the work because we're gonna assign a

177
00:09:07,930 --> 00:09:12,219
bunch of issues today and we need an

178
00:09:10,450 --> 00:09:15,460
intake we're gonna make them do for that

179
00:09:12,220 --> 00:09:17,590
call where that needs and and it's

180
00:09:15,460 --> 00:09:19,840
probably better to have a call so that

181
00:09:17,590 --> 00:09:21,310
you you you have to like so that we yell

182
00:09:19,840 --> 00:09:25,030
at each other for not having actually

183
00:09:21,310 --> 00:09:27,010
done the work that's what that calls for

184
00:09:25,030 --> 00:09:28,300
thank you yes that's I know you didn't

185
00:09:27,010 --> 00:09:30,490
want to say that as chair because that

186
00:09:28,300 --> 00:09:32,829
sounds kind of like you're like fish but

187
00:09:30,490 --> 00:09:34,270
I'll say it but when you when you look

188
00:09:32,830 --> 00:09:36,040
at the calendar right after December

189
00:09:34,270 --> 00:09:38,530
16th becomes January first very quickly

190
00:09:36,040 --> 00:09:40,510
yes it does and so then there's two

191
00:09:38,530 --> 00:09:42,610
weeks before the next call and we're in

192
00:09:40,510 --> 00:09:44,170
that time period we are doing an

193
00:09:42,610 --> 00:09:45,670
interface working group last calls so

194
00:09:44,170 --> 00:09:47,800
we've got to basically get those first

195
00:09:45,670 --> 00:09:52,300
two documents done good into the next

196
00:09:47,800 --> 00:09:55,780
few work weeks can I propose extremely

197
00:09:52,300 --> 00:09:57,609
selfishly that we push the January call

198
00:09:55,780 --> 00:10:02,500
one week and that we push the February

199
00:09:57,610 --> 00:10:05,230
call one week so because I can't make

200
00:10:02,500 --> 00:10:06,670
the February call it the can't recall I

201
00:10:05,230 --> 00:10:09,310
could make either of those two weeks but

202
00:10:06,670 --> 00:10:11,829
that also gives us the ability for those

203
00:10:09,310 --> 00:10:14,969
of us in you know who live in countries

204
00:10:11,830 --> 00:10:17,110
with like reasonable holiday schedules

205
00:10:14,970 --> 00:10:19,810
who actually do take time off over

206
00:10:17,110 --> 00:10:21,520
Christmas um like a lot of us don't come

207
00:10:19,810 --> 00:10:23,319
back until the sixth right like we

208
00:10:21,520 --> 00:10:24,579
disappear on the 20 mumbles and we come

209
00:10:23,320 --> 00:10:25,690
back on the sixth means you're not

210
00:10:24,580 --> 00:10:28,780
working on these documents on your

211
00:10:25,690 --> 00:10:33,460
vacation I can put you in touch with my

212
00:10:28,780 --> 00:10:39,010
family about that one they might be

213
00:10:33,460 --> 00:10:39,940
awake do you want to call so I'm not

214
00:10:39,010 --> 00:10:41,350
seeing anybody else staying if the

215
00:10:39,940 --> 00:10:42,550
microphone is EV other people sort of

216
00:10:41,350 --> 00:10:44,980
thought about their calendars and

217
00:10:42,550 --> 00:10:46,209
whether you guys can support this like

218
00:10:44,980 --> 00:10:50,200
people who might be starting a new job

219
00:10:46,210 --> 00:10:58,720
or something Theresa today's I think odd

220
00:10:50,200 --> 00:11:02,530
I think I can do this yeah and I your

221
00:10:58,720 --> 00:11:05,160
author on the implementation document do

222
00:11:02,530 --> 00:11:07,180
you want to speak up on this before we

223
00:11:05,160 --> 00:11:12,370
it sounds like we've got kind of a

224
00:11:07,180 --> 00:11:13,910
consensus on it or you could do it in

225
00:11:12,370 --> 00:11:19,490
jabber if somebody's looking at the

226
00:11:13,910 --> 00:11:25,189
that jabber there she is was a button

227
00:11:19,490 --> 00:11:26,620
somewhere yes hi just trying to check my

228
00:11:25,190 --> 00:11:29,600
calendar

229
00:11:26,620 --> 00:11:32,770
so the February 17 week is actually

230
00:11:29,600 --> 00:11:32,770
difficult for me

231
00:11:33,560 --> 00:11:37,640
is it is the whole wheat blocked I think

232
00:11:36,530 --> 00:11:43,189
that we're running out of weeks in

233
00:11:37,640 --> 00:11:45,140
February if we try to avoid Brian's yeah

234
00:11:43,190 --> 00:11:50,120
actually the whole week is a bit

235
00:11:45,140 --> 00:11:52,220
difficult so we started with February

236
00:11:50,120 --> 00:11:54,110
10th and we and we ruled that out in

237
00:11:52,220 --> 00:11:58,310
February 17th and we rolled that out so

238
00:11:54,110 --> 00:12:27,860
we can go earlier later I suppose so the

239
00:11:58,310 --> 00:12:33,699
week of the if the Friday and week of

240
00:12:27,860 --> 00:12:36,260
February 17 is an option that okay

241
00:12:33,700 --> 00:12:43,700
alright why don't we just I'm gonna jot

242
00:12:36,260 --> 00:12:45,350
that down while we yeah but we've done

243
00:12:43,700 --> 00:12:47,510
that before I think that I think that

244
00:12:45,350 --> 00:12:49,400
well there's one there's one time window

245
00:12:47,510 --> 00:12:58,910
that seems to work for you know from

246
00:12:49,400 --> 00:13:04,310
Zurich to Simcoe okay whatever u.s. west

247
00:12:58,910 --> 00:13:07,280
coast any other loud gripes about this

248
00:13:04,310 --> 00:13:08,599
schedule here so we can move on this is

249
00:13:07,280 --> 00:13:10,370
one of these things where it's much

250
00:13:08,600 --> 00:13:11,030
easier to do it face to face than to try

251
00:13:10,370 --> 00:13:17,810
to do it online

252
00:13:11,030 --> 00:13:20,089
alright then okay gory these are these

253
00:13:17,810 --> 00:13:22,160
are weeks and we're gonna do except for

254
00:13:20,090 --> 00:13:25,370
we'll do the time for the last one but

255
00:13:22,160 --> 00:13:27,430
we're gonna do a doodle for the day on

256
00:13:25,370 --> 00:13:28,899
the mailing list

257
00:13:27,430 --> 00:13:30,099
so I guess what the minutes only need to

258
00:13:28,899 --> 00:13:33,550
say we're going to doodle for them

259
00:13:30,100 --> 00:13:37,779
really okay going first

260
00:13:33,550 --> 00:13:39,670
and I really like the idea of the

261
00:13:37,779 --> 00:13:41,620
schedule of pushing and getting the arch

262
00:13:39,670 --> 00:13:43,750
done cushion going the interface done

263
00:13:41,620 --> 00:13:47,260
I'm slightly hesitant that

264
00:13:43,750 --> 00:13:50,230
implementation will arrive in February

265
00:13:47,260 --> 00:13:52,029
from previous experience just nothing to

266
00:13:50,230 --> 00:13:56,050
do with maturity of it but to do with

267
00:13:52,029 --> 00:13:57,820
the type of month ages I've always had

268
00:13:56,050 --> 00:13:59,199
problems with February personally it's

269
00:13:57,820 --> 00:14:01,750
been slightly shorter than I expected

270
00:13:59,200 --> 00:14:06,270
and people stick one thing in the middle

271
00:14:01,750 --> 00:14:10,240
and the whole thing's gone I understand

272
00:14:06,270 --> 00:14:13,329
yeah so what would you be really upset

273
00:14:10,240 --> 00:14:15,640
if we try if we thought when we get to

274
00:14:13,330 --> 00:14:19,180
February whether we prioritize finishing

275
00:14:15,640 --> 00:14:21,279
in arch all the big ones

276
00:14:19,180 --> 00:14:23,979
I would for all these things I would

277
00:14:21,279 --> 00:14:26,230
prioritize completion over moving on

278
00:14:23,980 --> 00:14:28,149
because I want to get the completion and

279
00:14:26,230 --> 00:14:29,680
unless we've got like some interlocking

280
00:14:28,149 --> 00:14:30,940
thing where we want to get the

281
00:14:29,680 --> 00:14:33,160
implementation experience and feed it

282
00:14:30,940 --> 00:14:34,540
back in I would definitely agree that

283
00:14:33,160 --> 00:14:35,800
that would be the way to go alright so

284
00:14:34,540 --> 00:14:37,240
we can figure that out in February

285
00:14:35,800 --> 00:14:39,310
there's not a big dependency but the

286
00:14:37,240 --> 00:14:40,570
implementation stuff can just follow

287
00:14:39,310 --> 00:14:45,400
because it's just a matter of writing

288
00:14:40,570 --> 00:14:49,209
great text all right I think this is

289
00:14:45,400 --> 00:14:53,319
this is close enough and we'll find out

290
00:14:49,209 --> 00:14:54,729
what you know is what it is okay now we

291
00:14:53,320 --> 00:14:57,540
need to switch the monitors again so we

292
00:14:54,730 --> 00:14:57,540
can get back to the slides

293
00:15:02,900 --> 00:15:06,020
[Music]

294
00:15:06,150 --> 00:15:12,520
I'm sorry can I best render bibs and I

295
00:15:10,450 --> 00:15:14,650
suggest we start with security because I

296
00:15:12,520 --> 00:15:28,689
have comments on architecture that kind

297
00:15:14,650 --> 00:15:30,430
of depend on security good can we come

298
00:15:28,690 --> 00:15:34,329
in a little more on this edge will you

299
00:15:30,430 --> 00:15:36,670
head well at the expense of actually

300
00:15:34,329 --> 00:15:40,870
talking about technical stuff I realize

301
00:15:36,670 --> 00:15:42,880
it was a little late yeah so

302
00:15:40,870 --> 00:15:45,730
common plugins that that to me seems

303
00:15:42,880 --> 00:15:50,650
aggressive its intentionally aggressive

304
00:15:45,730 --> 00:16:01,330
yes I was just too aggressive okay

305
00:15:50,650 --> 00:16:04,180
I mean at some point our students are

306
00:16:01,330 --> 00:16:06,520
going to graduate and disappear among

307
00:16:04,180 --> 00:16:07,930
other things and also we've been we've

308
00:16:06,520 --> 00:16:11,140
been sort of working on these documents

309
00:16:07,930 --> 00:16:13,209
for a couple years now so we should

310
00:16:11,140 --> 00:16:14,680
finish them yeah I mean we let me put it

311
00:16:13,210 --> 00:16:17,680
this way we're making up for some lack

312
00:16:14,680 --> 00:16:26,290
of aggressiveness over the past couple

313
00:16:17,680 --> 00:16:27,969
years yeah okay all I'm suggesting is if

314
00:16:26,290 --> 00:16:30,339
do you want certain of the office to

315
00:16:27,970 --> 00:16:33,840
read the documents and comment sensibly

316
00:16:30,340 --> 00:16:33,840
and that timeframe is too aggressive

317
00:16:34,350 --> 00:16:38,280
okay I hear you

318
00:16:39,000 --> 00:16:42,100
so Phillip T's directly commenting on

319
00:16:41,680 --> 00:16:45,849
that

320
00:16:42,100 --> 00:16:48,160
I think the schedule is aggressive but

321
00:16:45,850 --> 00:16:52,360
doable at least for interphase and

322
00:16:48,160 --> 00:16:54,640
architecture I don't believe it I think

323
00:16:52,360 --> 00:16:57,700
it's too aggressive for implementation

324
00:16:54,640 --> 00:17:05,800
but we can at least try to get close to

325
00:16:57,700 --> 00:17:10,330
it right right so two aggressiveness on

326
00:17:05,800 --> 00:17:11,829
arm like as a weight I forget I'm an

327
00:17:10,329 --> 00:17:14,050
editor of which of these architecture

328
00:17:11,829 --> 00:17:16,540
and interface right yeah both cool okay

329
00:17:14,050 --> 00:17:20,379
so with my editor hat on for those two

330
00:17:16,540 --> 00:17:22,869
documents I intend sort of generation of

331
00:17:20,380 --> 00:17:25,090
text to working group last call for

332
00:17:22,869 --> 00:17:26,739
architecture to be if there's an open

333
00:17:25,089 --> 00:17:29,590
issue on architecture that we can't find

334
00:17:26,740 --> 00:17:31,450
somebody to put text in today it's

335
00:17:29,590 --> 00:17:33,250
closed about it's closed on results it's

336
00:17:31,450 --> 00:17:35,890
like multics nobody cares enough to do

337
00:17:33,250 --> 00:17:37,450
it I'm gonna do it for interface if we

338
00:17:35,890 --> 00:17:39,100
can't find people kind of by that

339
00:17:37,450 --> 00:17:42,220
December 16th call it we're willing to

340
00:17:39,100 --> 00:17:45,370
commit we're gonna type text over

341
00:17:42,220 --> 00:17:47,080
Christmas then it's like hey it was a

342
00:17:45,370 --> 00:17:50,919
neat idea it was cool we probably should

343
00:17:47,080 --> 00:17:53,290
have done something about it but we

344
00:17:50,920 --> 00:17:56,520
gotta move on great like so the

345
00:17:53,290 --> 00:18:00,370
perfect is the enemy of the good and

346
00:17:56,520 --> 00:18:03,670
your anything oh yeah yeah see we can

347
00:18:00,370 --> 00:18:05,889
actually see what's going on yeah so

348
00:18:03,670 --> 00:18:07,720
yeah I mean that's that's how I intend

349
00:18:05,890 --> 00:18:09,790
to run this with my editor hat on is

350
00:18:07,720 --> 00:18:11,110
we're closing stuff it's like the train

351
00:18:09,790 --> 00:18:13,690
is leaving the station because we've had

352
00:18:11,110 --> 00:18:18,699
a year of not doing anything exactly I

353
00:18:13,690 --> 00:18:21,670
would like to be done I think I can't

354
00:18:18,700 --> 00:18:23,740
tell is Anna waiting - no I cut her off

355
00:18:21,670 --> 00:18:24,880
sorry Anna get back in line if you want

356
00:18:23,740 --> 00:18:55,810
to say something I thought you were in

357
00:18:24,880 --> 00:18:57,730
the queue I think so right thanks so hi

358
00:18:55,810 --> 00:18:59,139
guys max rank it from tio Berlin and I'm

359
00:18:57,730 --> 00:19:00,610
just going to talk about our pipes

360
00:18:59,140 --> 00:19:02,830
implementation and mostly what we did at

361
00:19:00,610 --> 00:19:05,860
the heck of fun and so since Brock

362
00:19:02,830 --> 00:19:08,110
basically what we added our protocol and

363
00:19:05,860 --> 00:19:09,580
remote endpoint racing and frameless

364
00:19:08,110 --> 00:19:10,409
there are the big things that have been

365
00:19:09,580 --> 00:19:12,790
added

366
00:19:10,410 --> 00:19:13,270
interface election is almost done I

367
00:19:12,790 --> 00:19:16,030
think

368
00:19:13,270 --> 00:19:19,150
and mr. hopefully going to it quick at

369
00:19:16,030 --> 00:19:20,770
some point and so the framers did in our

370
00:19:19,150 --> 00:19:22,720
implementation now are a bit different

371
00:19:20,770 --> 00:19:25,450
from the ones that I specified not

372
00:19:22,720 --> 00:19:26,440
specified at an example in interface

373
00:19:25,450 --> 00:19:30,760
implementation

374
00:19:26,440 --> 00:19:32,740
sorry not interface and main difference

375
00:19:30,760 --> 00:19:34,570
is that data frame message when they

376
00:19:32,740 --> 00:19:37,170
arrive instead of when the application

377
00:19:34,570 --> 00:19:39,610
calls received that for us was just a

378
00:19:37,170 --> 00:19:41,650
choice to make but it's or not that

379
00:19:39,610 --> 00:19:44,889
interesting and it can do much more than

380
00:19:41,650 --> 00:19:47,110
just transform messages obviously and so

381
00:19:44,890 --> 00:19:49,380
thanks to Jake we also have multicast

382
00:19:47,110 --> 00:19:56,110
support interrupts so we can receive

383
00:19:49,380 --> 00:19:58,510
muriatic receive SM multicast streams so

384
00:19:56,110 --> 00:20:00,909
until Saturday or until today actually

385
00:19:58,510 --> 00:20:03,460
we thought we wouldn't need a anything

386
00:20:00,910 --> 00:20:04,630
API no Michael had we had discussion on

387
00:20:03,460 --> 00:20:06,450
the open floor case that we might

388
00:20:04,630 --> 00:20:08,520
actually do something and

389
00:20:06,450 --> 00:20:10,560
need something in APA but yeah there's

390
00:20:08,520 --> 00:20:12,870
an open plea request by Jake about how

391
00:20:10,560 --> 00:20:14,970
to do multicast for now and the way we

392
00:20:12,870 --> 00:20:16,709
do it is that the local endpoint if it

393
00:20:14,970 --> 00:20:18,870
is a group address on the local endpoint

394
00:20:16,710 --> 00:20:21,960
and we just assume it's multicast and

395
00:20:18,870 --> 00:20:23,669
then we require the application to

396
00:20:21,960 --> 00:20:25,650
specify in the transport properties that

397
00:20:23,670 --> 00:20:31,020
it is a unicast receive a unidirectional

398
00:20:25,650 --> 00:20:33,510
receive and then we on a listen call we

399
00:20:31,020 --> 00:20:35,760
can send out and join request and the

400
00:20:33,510 --> 00:20:38,340
application gets multicast packets and

401
00:20:35,760 --> 00:20:42,450
if it's trying to do Nate it will throw

402
00:20:38,340 --> 00:20:43,919
an error right so I guess the question

403
00:20:42,450 --> 00:20:48,990
would be if there's discussion on

404
00:20:43,920 --> 00:20:59,010
multicast probably issues that something

405
00:20:48,990 --> 00:21:01,230
the next thing one source in ASM is that

406
00:20:59,010 --> 00:21:02,850
counted for like I want to start in the

407
00:21:01,230 --> 00:21:04,940
SM group but because I'm you're doing

408
00:21:02,850 --> 00:21:07,879
the SM model but I only have one source

409
00:21:04,940 --> 00:21:12,930
that's also okay

410
00:21:07,880 --> 00:21:14,430
as in aasmaan SSM our restrict the

411
00:21:12,930 --> 00:21:17,580
number of sources but I also have a

412
00:21:14,430 --> 00:21:19,380
single source a s7 groups well so I

413
00:21:17,580 --> 00:21:24,330
can't just choose except only one source

414
00:21:19,380 --> 00:21:28,320
is that Jake talk yeah yes so the

415
00:21:24,330 --> 00:21:30,300
proposed text regardless of whether

416
00:21:28,320 --> 00:21:34,830
there's one source or not you would be

417
00:21:30,300 --> 00:21:38,070
joining the the group using an ASM join

418
00:21:34,830 --> 00:21:40,740
and therefore if if the packets do get

419
00:21:38,070 --> 00:21:44,610
routed somehow to you then they would be

420
00:21:40,740 --> 00:21:47,670
so if somebody else sends to that ASM

421
00:21:44,610 --> 00:21:51,060
group you would receive it if you are if

422
00:21:47,670 --> 00:21:52,740
you join with an ASM this this it may be

423
00:21:51,060 --> 00:21:53,820
that this inter that this couples two

424
00:21:52,740 --> 00:21:55,220
things together that should not be

425
00:21:53,820 --> 00:21:57,480
coupled together

426
00:21:55,220 --> 00:22:05,400
thank you that's nothing but I can now

427
00:21:57,480 --> 00:22:08,040
look at the text conference just to

428
00:22:05,400 --> 00:22:12,320
clarify as is with this API is it

429
00:22:08,040 --> 00:22:13,830
possible to send without joining a group

430
00:22:12,320 --> 00:22:15,990
you can

431
00:22:13,830 --> 00:22:17,879
well the join isn't explicit it's

432
00:22:15,990 --> 00:22:18,810
implicit so if you have a multicast

433
00:22:17,880 --> 00:22:22,080
group

434
00:22:18,810 --> 00:22:24,450
as a local address then the taps system

435
00:22:22,080 --> 00:22:26,399
will send to join okay so there have

436
00:22:24,450 --> 00:22:32,750
been implementations of multicast that

437
00:22:26,400 --> 00:22:32,750
send without joining okay okay

438
00:22:32,910 --> 00:22:39,420
right Jake again the the send doesn't

439
00:22:37,380 --> 00:22:41,100
require anything this is not a multicast

440
00:22:39,420 --> 00:22:43,110
operation this is simply a sent to a

441
00:22:41,100 --> 00:22:45,570
remote endpoint that has a group address

442
00:22:43,110 --> 00:22:50,399
there's nothing different about that

443
00:22:45,570 --> 00:22:55,409
than ordinary UDP for this is this is

444
00:22:50,400 --> 00:22:56,550
restricted to the receive as long as

445
00:22:55,410 --> 00:22:59,490
it's possible to send to a group

446
00:22:56,550 --> 00:23:00,990
chattering yeah you can send a group the

447
00:22:59,490 --> 00:23:02,610
other thing and it's been a long time

448
00:23:00,990 --> 00:23:05,880
since I fought about multicast so maybe

449
00:23:02,610 --> 00:23:08,250
I'm misremembering there was some sort

450
00:23:05,880 --> 00:23:11,660
of sauce filtering features in some

451
00:23:08,250 --> 00:23:15,420
versions of multicast release it's yeah

452
00:23:11,660 --> 00:23:17,370
yeah you've got the right flexibility to

453
00:23:15,420 --> 00:23:19,140
handle all the different rights Regan

454
00:23:17,370 --> 00:23:23,419
yeah if there is a remote endpoint then

455
00:23:19,140 --> 00:23:23,420
you filter by those addresses basically

456
00:23:27,500 --> 00:23:36,290
okay I'm not sure that was only SSM but

457
00:23:30,150 --> 00:23:40,770
maybe I'm misremembering yeah yeah okay

458
00:23:36,290 --> 00:23:43,680
nobody uses that as far as I'm aware

459
00:23:40,770 --> 00:23:45,360
I've never heard I did ask around I've

460
00:23:43,680 --> 00:23:50,130
never heard of anybody using it it's

461
00:23:45,360 --> 00:23:56,479
like theoretically possible in the specs

462
00:23:50,130 --> 00:23:59,490
I I would be shocked if it works but

463
00:23:56,480 --> 00:24:03,410
generally like okay so on the endpoints

464
00:23:59,490 --> 00:24:08,520
today if you try to do an a normal

465
00:24:03,410 --> 00:24:11,190
socket and an issue the the sock up that

466
00:24:08,520 --> 00:24:13,379
you set your options are to do an SSM

467
00:24:11,190 --> 00:24:15,530
join or to do an ASM join and you do it

468
00:24:13,380 --> 00:24:20,190
by setting a sock opt and providing the

469
00:24:15,530 --> 00:24:24,000
EM rec or the the would see their own

470
00:24:20,190 --> 00:24:25,920
code that and Marcus or something I

471
00:24:24,000 --> 00:24:28,200
forget but the those are the only

472
00:24:25,920 --> 00:24:31,080
options that a normal host has today so

473
00:24:28,200 --> 00:24:32,960
in the same sense this API only provides

474
00:24:31,080 --> 00:24:35,129
those operations

475
00:24:32,960 --> 00:24:37,080
to do something different you're gonna

476
00:24:35,130 --> 00:24:40,770
have to like construct an IGMP packet

477
00:24:37,080 --> 00:24:42,350
that does something funny okay that's

478
00:24:40,770 --> 00:24:46,020
fine we should just document that that's

479
00:24:42,350 --> 00:24:51,149
that those features are not expected to

480
00:24:46,020 --> 00:24:54,150
work and we're not Spokane okay so that

481
00:24:51,150 --> 00:24:55,830
was the multicast only part of it what

482
00:24:54,150 --> 00:24:58,950
we introduced in plumeria order

483
00:24:55,830 --> 00:25:00,720
hackathon explai we did Jake has a

484
00:24:58,950 --> 00:25:03,120
protocol right now a draft for protocol

485
00:25:00,720 --> 00:25:05,370
code ambi which is a way to check the

486
00:25:03,120 --> 00:25:08,270
integrity of multicast packets which

487
00:25:05,370 --> 00:25:11,489
creates an out-of-band TLS connection

488
00:25:08,270 --> 00:25:13,530
along the multicast receive so we

489
00:25:11,490 --> 00:25:15,650
implemented it as a framer and what

490
00:25:13,530 --> 00:25:17,670
we're doing is that under start

491
00:25:15,650 --> 00:25:20,700
initialization of the multicast

492
00:25:17,670 --> 00:25:23,940
connection object the framer also

493
00:25:20,700 --> 00:25:25,620
creates a TLS connection so there's two

494
00:25:23,940 --> 00:25:28,350
connections one is inside the frame and

495
00:25:25,620 --> 00:25:30,750
one is the connection exposed to the

496
00:25:28,350 --> 00:25:32,610
application and then anytime a packet

497
00:25:30,750 --> 00:25:35,190
arrives the multicast packet arrives the

498
00:25:32,610 --> 00:25:38,219
framer gets many failed by the framer

499
00:25:35,190 --> 00:25:40,470
gets manifests all the time from the MB

500
00:25:38,220 --> 00:25:44,310
generator from mu manifest generator and

501
00:25:40,470 --> 00:25:46,620
then it checks if the hash for that

502
00:25:44,310 --> 00:25:48,929
specific multicast packet is in the

503
00:25:46,620 --> 00:25:50,639
manifests and if it is it just returns

504
00:25:48,930 --> 00:25:51,870
the message itself like the multicast

505
00:25:50,640 --> 00:25:52,580
message it doesn't do anything to the

506
00:25:51,870 --> 00:25:55,020
message

507
00:25:52,580 --> 00:25:57,000
so the question kinda is is this a

508
00:25:55,020 --> 00:25:59,190
legitimate use of a framer because right

509
00:25:57,000 --> 00:26:01,260
now the text mostly says encapsulation

510
00:25:59,190 --> 00:26:02,940
encoding and message transformation but

511
00:26:01,260 --> 00:26:04,410
it doesn't do any of that it takes the

512
00:26:02,940 --> 00:26:05,010
message as it comes in and puts the same

513
00:26:04,410 --> 00:26:07,500
message out

514
00:26:05,010 --> 00:26:09,210
so if it should be a legitimate framer

515
00:26:07,500 --> 00:26:11,280
maybe at something to takes like also

516
00:26:09,210 --> 00:26:13,260
analyze or just change something about

517
00:26:11,280 --> 00:26:15,060
the text to make it clear that this is a

518
00:26:13,260 --> 00:26:23,010
legitimate use and if it isn't I'm not

519
00:26:15,060 --> 00:26:25,950
sure why it shouldn't be basically Tommy

520
00:26:23,010 --> 00:26:29,610
Polly Apple so I mean I'm not sure how

521
00:26:25,950 --> 00:26:31,200
we gauge legitimate having framers in

522
00:26:29,610 --> 00:26:33,629
our implementation I have definitely

523
00:26:31,200 --> 00:26:35,550
done essentially the same thing it is a

524
00:26:33,630 --> 00:26:37,080
like once you have that shape of thing

525
00:26:35,550 --> 00:26:42,540
it's very easy to do and it's very

526
00:26:37,080 --> 00:26:44,939
natural to do that so yeah I I think it

527
00:26:42,540 --> 00:26:45,989
is a natural outcome and I don't think

528
00:26:44,940 --> 00:26:48,809
we should prohibit

529
00:26:45,989 --> 00:26:52,349
I don't know if we do we need is it are

530
00:26:48,809 --> 00:26:54,029
you proposing text for that use case

531
00:26:52,349 --> 00:26:56,759
we're just gonna let it kind of happen

532
00:26:54,029 --> 00:26:58,229
right I'm not sure like if it's because

533
00:26:56,759 --> 00:26:59,639
it's not interpolation encoding or

534
00:26:58,229 --> 00:27:00,809
transformation so and that's I like two

535
00:26:59,639 --> 00:27:02,820
things that get mentioned so maybe I'd

536
00:27:00,809 --> 00:27:06,749
like something like analyze or something

537
00:27:02,820 --> 00:27:07,979
to do the tickets because it that maybe

538
00:27:06,749 --> 00:27:09,659
make it more clear that you don't

539
00:27:07,979 --> 00:27:12,509
actually have to do anything with the

540
00:27:09,659 --> 00:27:16,139
pic yeah so yeah if we can have some

541
00:27:12,509 --> 00:27:17,519
text you say now to include that use

542
00:27:16,139 --> 00:27:21,389
case that would mean good to clarify I

543
00:27:17,519 --> 00:27:25,049
thank you right and that's oh right

544
00:27:21,389 --> 00:27:27,119
that's not it and we also like fun about

545
00:27:25,049 --> 00:27:29,249
right now in the API it says like the

546
00:27:27,119 --> 00:27:30,749
frame object gets created once on the

547
00:27:29,249 --> 00:27:31,769
pre connection and it's really editor on

548
00:27:30,749 --> 00:27:33,570
the pre connection but it's not right

549
00:27:31,769 --> 00:27:34,679
clear what happens if you call isn't it

550
00:27:33,570 --> 00:27:36,178
because then you only have one frame

551
00:27:34,679 --> 00:27:38,809
object but the listen can spawn many

552
00:27:36,179 --> 00:27:41,129
connections and there would like the

553
00:27:38,809 --> 00:27:43,320
listener wouldn't really have an option

554
00:27:41,129 --> 00:27:45,449
to create new frame objects itself right

555
00:27:43,320 --> 00:27:49,139
because it doesn't necessarily know how

556
00:27:45,450 --> 00:27:51,509
to create them right but but how does it

557
00:27:49,139 --> 00:27:53,668
get him like in API probably something

558
00:27:51,509 --> 00:27:56,789
in interface and implementation to like

559
00:27:53,669 --> 00:28:02,570
explain how to do it yeah and that's

560
00:27:56,789 --> 00:28:08,549
basically it that's the link send high

561
00:28:02,570 --> 00:28:10,439
competence um I I wonder that we don't

562
00:28:08,549 --> 00:28:17,789
have different very different views of

563
00:28:10,440 --> 00:28:20,099
what framers are magic to to to me a

564
00:28:17,789 --> 00:28:22,559
framer is a much simpler thing than that

565
00:28:20,099 --> 00:28:31,589
and maybe I maybe I'm in the rough on

566
00:28:22,559 --> 00:28:34,168
what the consensus is yeah I thought it

567
00:28:31,589 --> 00:28:36,269
was it was it was passing and you said

568
00:28:34,169 --> 00:28:38,519
the architecture document was done well

569
00:28:36,269 --> 00:28:41,239
this is why I said I'm not I thought

570
00:28:38,519 --> 00:28:41,239
they it was too aggressive

571
00:28:43,489 --> 00:28:49,859
tell me Akali so I think if you look at

572
00:28:47,369 --> 00:28:53,639
what the architecture does say for

573
00:28:49,859 --> 00:28:56,478
framer it is certainly smaller and a

574
00:28:53,639 --> 00:28:59,729
tighter definition of it and we have

575
00:28:56,479 --> 00:29:01,080
moved all the implementation details

576
00:28:59,730 --> 00:29:04,620
to the implementation documents or even

577
00:29:01,080 --> 00:29:06,570
the interface is the the thing I think

578
00:29:04,620 --> 00:29:09,570
that Colin is thinking of the simpler

579
00:29:06,570 --> 00:29:11,909
version to your point when you are

580
00:29:09,570 --> 00:29:13,290
playing with these you realize you can

581
00:29:11,910 --> 00:29:17,460
do more with it and it's it's an

582
00:29:13,290 --> 00:29:19,110
expansion point so I think once you

583
00:29:17,460 --> 00:29:22,560
start using it that way it potentially

584
00:29:19,110 --> 00:29:26,219
goes beyond the notion that we have in

585
00:29:22,560 --> 00:29:28,260
the architecture of a primary so I I

586
00:29:26,220 --> 00:29:30,390
would prefer to leave the definition

587
00:29:28,260 --> 00:29:33,440
constrained because that's all you need

588
00:29:30,390 --> 00:29:38,040
to do and I think these other use cases

589
00:29:33,440 --> 00:29:40,530
end up being maybe some other doctrine

590
00:29:38,040 --> 00:29:42,240
of how to describe you using them from

591
00:29:40,530 --> 00:29:44,790
but it's not really part of its it is

592
00:29:42,240 --> 00:29:53,220
it's an outcome of the way we build them

593
00:29:44,790 --> 00:29:55,530
more than a fundamental property so yeah

594
00:29:53,220 --> 00:29:58,530
mostly that I'll you know I'll answer

595
00:29:55,530 --> 00:30:00,210
the first question up here is this a

596
00:29:58,530 --> 00:30:04,230
legitimate use of framers with it

597
00:30:00,210 --> 00:30:06,000
doesn't matter all right like so the

598
00:30:04,230 --> 00:30:07,860
architectural document is designed to be

599
00:30:06,000 --> 00:30:10,230
sort of a framework for understanding

600
00:30:07,860 --> 00:30:12,330
the interface the interface document is

601
00:30:10,230 --> 00:30:16,170
designed to be as abstract as possible

602
00:30:12,330 --> 00:30:21,439
um the fact that framers are kind of the

603
00:30:16,170 --> 00:30:23,640
only real bit of implementer accessible

604
00:30:21,440 --> 00:30:26,340
extensibility that we've put into the

605
00:30:23,640 --> 00:30:28,620
architecture because we need it but

606
00:30:26,340 --> 00:30:30,179
because of you know how framing and D

607
00:30:28,620 --> 00:30:31,560
framing works with a message based thing

608
00:30:30,180 --> 00:30:33,690
on top of street based protocols you

609
00:30:31,560 --> 00:30:35,730
can't get away from it it's going to be

610
00:30:33,690 --> 00:30:38,660
where all of the I don't wanna say abuse

611
00:30:35,730 --> 00:30:41,460
happens but they've creative use

612
00:30:38,660 --> 00:30:43,800
innovation yeah abuse ennovation same

613
00:30:41,460 --> 00:30:45,360
same it's gonna be where OB innovation

614
00:30:43,800 --> 00:30:48,990
happens so like is it a legitimate use

615
00:30:45,360 --> 00:30:51,540
of framers who cares are you I mean

616
00:30:48,990 --> 00:30:53,670
thank you for asking the question um but

617
00:30:51,540 --> 00:30:56,760
you're also the one with your hands on

618
00:30:53,670 --> 00:31:00,150
the keyboard so like right running code

619
00:30:56,760 --> 00:31:00,960
Trump's um rough consensus every time

620
00:31:00,150 --> 00:31:08,670
cool

621
00:31:00,960 --> 00:31:09,570
thanks : I think we care a little to the

622
00:31:08,670 --> 00:31:12,029
extent

623
00:31:09,570 --> 00:31:15,559
if there are going to be overextension

624
00:31:12,029 --> 00:31:18,269
points we should probably hint that

625
00:31:15,559 --> 00:31:20,460
there are likely to be such things

626
00:31:18,269 --> 00:31:21,929
rather than forcing everyone from the

627
00:31:20,460 --> 00:31:24,690
beginning to clutch rings into the

628
00:31:21,929 --> 00:31:27,029
architecture saying we we know they say

629
00:31:24,690 --> 00:31:29,369
this is incomplete and we expect

630
00:31:27,029 --> 00:31:32,340
implementations to grow additional stuff

631
00:31:29,369 --> 00:31:34,470
in the middle which is not necessarily

632
00:31:32,340 --> 00:31:36,418
framers but perhaps looks a little bit

633
00:31:34,470 --> 00:31:38,700
like them if you squint but we expect

634
00:31:36,419 --> 00:31:40,169
this to evolve would be a useful thing

635
00:31:38,700 --> 00:31:41,789
to say rather than just saying yes a

636
00:31:40,169 --> 00:31:43,830
framer when we know it's not really a

637
00:31:41,789 --> 00:31:50,009
sort of pledged extension that happens

638
00:31:43,830 --> 00:31:51,749
to fit in if you squint bit Philip

639
00:31:50,009 --> 00:31:55,080
teasel I would like to add upon doesn't

640
00:31:51,749 --> 00:31:57,269
say I think it would really be helpful

641
00:31:55,080 --> 00:31:59,849
to add at some points in the document

642
00:31:57,269 --> 00:32:03,029
where we see the extension cause I think

643
00:31:59,849 --> 00:32:05,519
everyone should go about this and make

644
00:32:03,029 --> 00:32:08,099
pull requests for that I explicitly say

645
00:32:05,519 --> 00:32:10,529
is see that for example framers there

646
00:32:08,099 --> 00:32:13,320
could be an extension point saying that

647
00:32:10,529 --> 00:32:15,450
framers allows certain protocol

648
00:32:13,320 --> 00:32:17,820
transformations and thus there would be

649
00:32:15,450 --> 00:32:19,499
a way to annotate that I think it

650
00:32:17,820 --> 00:32:21,928
doesn't have to be in the first revision

651
00:32:19,499 --> 00:32:23,879
but at least having this kind of there

652
00:32:21,929 --> 00:32:27,320
could be at this point at be added later

653
00:32:23,879 --> 00:32:27,320
on makes sense

654
00:32:28,279 --> 00:32:32,820
expects we're all talking about pull

655
00:32:31,049 --> 00:32:45,239
requests for their architecture document

656
00:32:32,820 --> 00:32:46,710
right not had not no all right okay so

657
00:32:45,239 --> 00:32:50,879
we're going to talk about the security

658
00:32:46,710 --> 00:32:53,599
document next write-up we have Anna

659
00:32:50,879 --> 00:32:53,599
wants to say something

660
00:32:54,049 --> 00:32:59,549
yes hi I just wanted to add I I think

661
00:32:57,539 --> 00:33:03,658
for the architecture draft we should

662
00:32:59,549 --> 00:33:07,889
avoid putting too much details into that

663
00:33:03,659 --> 00:33:09,690
one and keep it on the concept level you

664
00:33:07,889 --> 00:33:12,570
have a whole reasoning or thumbs up

665
00:33:09,690 --> 00:33:14,340
agreeing with you Anna okay good because

666
00:33:12,570 --> 00:33:16,049
this is actually something I noticed

667
00:33:14,340 --> 00:33:18,529
also when I read it the last time that

668
00:33:16,049 --> 00:33:21,418
maybe if anything maybe we have a few

669
00:33:18,529 --> 00:33:23,309
too much details in there because we

670
00:33:21,419 --> 00:33:25,230
whenever something you

671
00:33:23,309 --> 00:33:26,820
feature got added there was a tendency

672
00:33:25,230 --> 00:33:28,710
we want to mention it in the

673
00:33:26,820 --> 00:33:29,850
architecture draft but maybe that is not

674
00:33:28,710 --> 00:33:33,600
not necessary

675
00:33:29,850 --> 00:33:34,709
so yes good but then we all agreed okay

676
00:33:33,600 --> 00:33:37,620
thank you

677
00:33:34,710 --> 00:33:39,149
so we have a 56 minutes left in the

678
00:33:37,620 --> 00:33:42,029
session Phillip how much time do you

679
00:33:39,149 --> 00:33:44,668
think you'll need ah we want to go less

680
00:33:42,029 --> 00:33:47,370
than 30 minutes and depending on the

681
00:33:44,669 --> 00:33:49,889
discussion maybe also less than 15

682
00:33:47,370 --> 00:33:51,570
minutes okay so maybe let's try to keep

683
00:33:49,889 --> 00:33:53,939
the discussion on point so that we can

684
00:33:51,570 --> 00:34:00,600
sort of try to get a plan together for

685
00:33:53,940 --> 00:34:02,100
our now aggressive schedule yes so I'm

686
00:34:00,600 --> 00:34:06,240
just being here at the shepherd of the

687
00:34:02,100 --> 00:34:09,359
document and in the last month's we had

688
00:34:06,240 --> 00:34:14,460
a working group last call we did I did

689
00:34:09,359 --> 00:34:17,159
the Shepherd ride ride up the idea

690
00:34:14,460 --> 00:34:18,750
review was done we got rivers from

691
00:34:17,159 --> 00:34:20,659
Canada and sectors that saying the

692
00:34:18,750 --> 00:34:27,569
document is ready we get an e Anna

693
00:34:20,659 --> 00:34:28,950
review okay and then we got it should

694
00:34:27,569 --> 00:34:34,259
not be published in its current form

695
00:34:28,949 --> 00:34:36,899
from to in or should not be published

696
00:34:34,260 --> 00:34:44,230
its cursory should not be published in

697
00:34:36,899 --> 00:34:45,409
its current form sorry by ekr and

698
00:34:44,230 --> 00:34:49,589
[Music]

699
00:34:45,409 --> 00:34:52,919
christian Bettina and this is the reason

700
00:34:49,589 --> 00:34:55,230
why we're discussing this here ah let's

701
00:34:52,918 --> 00:34:59,339
wrap up what the criticism roughly was

702
00:34:55,230 --> 00:35:02,460
so first its it started with this

703
00:34:59,339 --> 00:35:06,200
general skepticism against the tap side

704
00:35:02,460 --> 00:35:09,270
here so too ambitious pushes against

705
00:35:06,200 --> 00:35:10,919
implementations trends like quick is

706
00:35:09,270 --> 00:35:14,910
really integrating everything in the

707
00:35:10,920 --> 00:35:17,849
application while taps was trying to

708
00:35:14,910 --> 00:35:24,149
move that out again to replace make

709
00:35:17,849 --> 00:35:29,579
transport replaceable no matter what

710
00:35:24,150 --> 00:35:34,020
this is I think we need to briefly make

711
00:35:29,579 --> 00:35:36,930
ours up our minds whether we really want

712
00:35:34,020 --> 00:35:39,420
to iterate this argument over and over

713
00:35:36,930 --> 00:35:42,540
or whether we say okay this is approach

714
00:35:39,420 --> 00:35:44,940
to do these things it might work it

715
00:35:42,540 --> 00:35:49,350
might fail we just want to make the

716
00:35:44,940 --> 00:35:51,180
documents for if it works so on this

717
00:35:49,350 --> 00:35:53,430
point I would have a I would buy that

718
00:35:51,180 --> 00:35:55,859
argument a whole lot more if like quick

719
00:35:53,430 --> 00:35:59,370
wasn't actually turning a LPN into a

720
00:35:55,860 --> 00:36:01,980
protocol stack identifier so like I

721
00:35:59,370 --> 00:36:03,450
think we can like I mean too ambitious

722
00:36:01,980 --> 00:36:05,400
task yeah we had a couple of boss about

723
00:36:03,450 --> 00:36:05,850
this the first one was harder than the

724
00:36:05,400 --> 00:36:11,820
second one

725
00:36:05,850 --> 00:36:12,990
um it's working group um so if we're

726
00:36:11,820 --> 00:36:14,250
gonna have a line of people arguing with

727
00:36:12,990 --> 00:36:15,750
Decker and Christian who are in the room

728
00:36:14,250 --> 00:36:17,790
I'm not sure that's productive yeah it's

729
00:36:15,750 --> 00:36:19,170
probably not I'm just saying I think I

730
00:36:17,790 --> 00:36:25,050
think that we can safely move on to

731
00:36:19,170 --> 00:36:30,930
criticism - I agree basically Kyle rose

732
00:36:25,050 --> 00:36:35,820
Akamai the I think the the the criticism

733
00:36:30,930 --> 00:36:38,940
against against an API that some people

734
00:36:35,820 --> 00:36:40,320
might not want to use is it's something

735
00:36:38,940 --> 00:36:44,370
that will be solved by whether people

736
00:36:40,320 --> 00:36:46,290
use it or not right the when it comes to

737
00:36:44,370 --> 00:36:48,180
when it comes to security or safety I

738
00:36:46,290 --> 00:36:49,440
think those criticisms are warranted and

739
00:36:48,180 --> 00:36:51,540
I guess I'm guessing that's what

740
00:36:49,440 --> 00:36:55,530
criticism too is and I think that's

741
00:36:51,540 --> 00:36:58,890
where we should focus our effort yeah

742
00:36:55,530 --> 00:37:01,590
Tommy probably definitely agree on that

743
00:36:58,890 --> 00:37:04,609
oh sorry you're in lying before Magnus

744
00:37:01,590 --> 00:37:07,830
ah there yah sorry Magnus

745
00:37:04,610 --> 00:37:09,780
so just to cut to the chase a little bit

746
00:37:07,830 --> 00:37:12,240
for people in the room we have published

747
00:37:09,780 --> 00:37:14,790
a new Rev I'm sure you're about to get

748
00:37:12,240 --> 00:37:16,680
to this I think potentially as we go

749
00:37:14,790 --> 00:37:19,980
through these things I want to validate

750
00:37:16,680 --> 00:37:23,520
that this revision that we have done a

751
00:37:19,980 --> 00:37:25,560
the group thinks is a good idea but also

752
00:37:23,520 --> 00:37:27,990
that we think it addresses some of these

753
00:37:25,560 --> 00:37:30,660
things so just to kind of briefly quote

754
00:37:27,990 --> 00:37:33,720
from that well we've clarified now in

755
00:37:30,660 --> 00:37:35,250
like an on goal section is to say it is

756
00:37:33,720 --> 00:37:36,870
not a goal to allow software

757
00:37:35,250 --> 00:37:38,490
implementations to automatically switch

758
00:37:36,870 --> 00:37:41,730
between different security protocols

759
00:37:38,490 --> 00:37:43,979
essentially say the scope of our tapsa

760
00:37:41,730 --> 00:37:46,740
fication of racing things is not

761
00:37:43,980 --> 00:37:48,770
applying to the security aspects and I

762
00:37:46,740 --> 00:37:50,430
you know hopefully this does address

763
00:37:48,770 --> 00:37:52,020
this

764
00:37:50,430 --> 00:37:59,790
concerned it's saying we're not touching

765
00:37:52,020 --> 00:38:02,310
your stuff okay Magnus thank you

766
00:37:59,790 --> 00:38:04,170
yes I just want to I mean make clear I

767
00:38:02,310 --> 00:38:06,600
mean for my as an ad here in this

768
00:38:04,170 --> 00:38:08,820
protective I just think that you need to

769
00:38:06,600 --> 00:38:12,150
it's I mean it's fine to push back

770
00:38:08,820 --> 00:38:13,740
against criticisms wait and with

771
00:38:12,150 --> 00:38:16,680
argument saying yes this is our task

772
00:38:13,740 --> 00:38:18,689
what we do what we have to be sure to do

773
00:38:16,680 --> 00:38:21,180
with cetera and of course these people

774
00:38:18,690 --> 00:38:23,040
who haven't been involved or maybe was

775
00:38:21,180 --> 00:38:25,140
at the boss and didn't like the outcome

776
00:38:23,040 --> 00:38:28,320
with the Citroen that's I mean that's

777
00:38:25,140 --> 00:38:31,319
not nothing position discusses as Tom

778
00:38:28,320 --> 00:38:33,060
Thomas yes state is like okay clarify a

779
00:38:31,320 --> 00:38:34,770
bit to scope when it helps that's good

780
00:38:33,060 --> 00:38:37,230
but otherwise it's fine to push back

781
00:38:34,770 --> 00:38:39,390
that's just but want to say so we don't

782
00:38:37,230 --> 00:38:41,400
need to you need to comment and answer

783
00:38:39,390 --> 00:38:46,319
things but you don't need to address

784
00:38:41,400 --> 00:38:55,170
necessarily yeah thank you thank you in

785
00:38:46,320 --> 00:38:58,320
Crete t-shirt so moving on to the second

786
00:38:55,170 --> 00:39:03,660
criticism first security protocols are

787
00:38:58,320 --> 00:39:06,240
special and saying security probably not

788
00:39:03,660 --> 00:39:08,640
but must be integrated deeply into the

789
00:39:06,240 --> 00:39:10,379
application and must not be automated or

790
00:39:08,640 --> 00:39:12,660
raised in sepsis and I think with your

791
00:39:10,380 --> 00:39:17,940
revision you already address the second

792
00:39:12,660 --> 00:39:19,830
point my personal opinion is you could

793
00:39:17,940 --> 00:39:23,550
also have argued that there are use

794
00:39:19,830 --> 00:39:25,890
cases for that but that's the choice of

795
00:39:23,550 --> 00:39:31,380
the authors and I can definitely say

796
00:39:25,890 --> 00:39:32,609
it's available choice and said

797
00:39:31,380 --> 00:39:35,700
transferring network security a

798
00:39:32,610 --> 00:39:37,760
fundamentally different yeah somehow

799
00:39:35,700 --> 00:39:40,140
they have to be integrated somewhere and

800
00:39:37,760 --> 00:39:43,260
which steps we are acknowledging that

801
00:39:40,140 --> 00:39:45,509
they're part of the stack and that

802
00:39:43,260 --> 00:39:46,860
they're not always somewhere outside the

803
00:39:45,510 --> 00:39:50,040
stack and some special at ons

804
00:39:46,860 --> 00:39:52,290
historically they have been but I think

805
00:39:50,040 --> 00:39:54,770
the time that we can go without is over

806
00:39:52,290 --> 00:39:58,860
and therefore taps has to integrate that

807
00:39:54,770 --> 00:40:00,810
and I think at least for my reread of

808
00:39:58,860 --> 00:40:03,240
your changes

809
00:40:00,810 --> 00:40:06,990
you're pretty you're addressing these

810
00:40:03,240 --> 00:40:09,209
points pretty clearly and I would just

811
00:40:06,990 --> 00:40:11,640
ask the room whether there's different

812
00:40:09,210 --> 00:40:13,950
opinions on that

813
00:40:11,640 --> 00:40:16,319
Kyle Rosa Akamai so the I don't know how

814
00:40:13,950 --> 00:40:18,509
many people read the new draft but we

815
00:40:16,320 --> 00:40:20,970
added a goals and non goals section at

816
00:40:18,510 --> 00:40:22,890
the beginning and the non or I don't

817
00:40:20,970 --> 00:40:26,279
know if it was the non goal but a non

818
00:40:22,890 --> 00:40:29,220
goal was to race different security

819
00:40:26,280 --> 00:40:30,660
protocols or assume that that a security

820
00:40:29,220 --> 00:40:33,660
protocol any security protocol that a

821
00:40:30,660 --> 00:40:37,049
tap system might choose would provide

822
00:40:33,660 --> 00:40:39,509
some magic you know fairy dust or

823
00:40:37,050 --> 00:40:42,720
whatnot that would make your application

824
00:40:39,510 --> 00:40:45,150
magically secure we're instead making it

825
00:40:42,720 --> 00:40:48,169
clear that we need the we need

826
00:40:45,150 --> 00:40:52,020
implementations applications rather to

827
00:40:48,170 --> 00:40:54,990
explicitly choose a security protocol

828
00:40:52,020 --> 00:40:56,820
that you know that fulfills their

829
00:40:54,990 --> 00:40:59,609
requirements as far as security goes

830
00:40:56,820 --> 00:41:01,980
right so it's it we're making it much

831
00:40:59,610 --> 00:41:04,320
clearer than I think the doc was before

832
00:41:01,980 --> 00:41:08,120
that we're not trying to erase the

833
00:41:04,320 --> 00:41:10,500
security protocols against each other um

834
00:41:08,120 --> 00:41:13,680
having this now the question is whether

835
00:41:10,500 --> 00:41:16,020
this needs reflection in the at the

836
00:41:13,680 --> 00:41:18,899
interface draft later I don't want to

837
00:41:16,020 --> 00:41:20,700
discuss this now but I just want to put

838
00:41:18,900 --> 00:41:27,510
this on the stack for for the issue

839
00:41:20,700 --> 00:41:30,569
discussion so the other criticism is its

840
00:41:27,510 --> 00:41:34,760
security work outside this sec area I

841
00:41:30,570 --> 00:41:38,240
can definitely say yes it is somehow but

842
00:41:34,760 --> 00:41:43,110
what other choices do we have

843
00:41:38,240 --> 00:41:46,620
so asking another area to just do the

844
00:41:43,110 --> 00:41:49,200
work for us it's just difficult and

845
00:41:46,620 --> 00:41:51,000
therefore I think we have enough

846
00:41:49,200 --> 00:41:54,359
expertise and it makes sense to say okay

847
00:41:51,000 --> 00:41:58,170
we did this in the other scope perhaps

848
00:41:54,360 --> 00:42:00,480
we should have consulted them more but I

849
00:41:58,170 --> 00:42:04,940
think it's not really a point for long

850
00:42:00,480 --> 00:42:07,950
discussion now do you think as an author

851
00:42:04,940 --> 00:42:10,710
so I think this criticism mostly applied

852
00:42:07,950 --> 00:42:12,270
to us giving very detailed descriptions

853
00:42:10,710 --> 00:42:14,109
of the security protocols and like

854
00:42:12,270 --> 00:42:17,499
cryptographic details and we

855
00:42:14,109 --> 00:42:20,019
he chose to basically delete this from

856
00:42:17,499 --> 00:42:21,160
the from the draft because it was giving

857
00:42:20,019 --> 00:42:22,720
the impression that we are trying to

858
00:42:21,160 --> 00:42:25,299
give like a comprehensive security

859
00:42:22,720 --> 00:42:27,459
analysis of these protocols and we chose

860
00:42:25,299 --> 00:42:29,890
that we will not attempt to make this

861
00:42:27,460 --> 00:42:31,720
comprehensive analysis but instead

862
00:42:29,890 --> 00:42:33,160
applications that choose a protocol have

863
00:42:31,720 --> 00:42:35,078
to go back and treat like the original

864
00:42:33,160 --> 00:42:36,640
RC or whatever documentation of the

865
00:42:35,079 --> 00:42:38,529
security protocol and then make a

866
00:42:36,640 --> 00:42:41,710
conscious choice of what the security

867
00:42:38,529 --> 00:42:43,809
properties are and be aware of

868
00:42:41,710 --> 00:42:45,430
limitations and we cannot do this for

869
00:42:43,809 --> 00:42:47,289
like a number of security protocols in

870
00:42:45,430 --> 00:42:48,999
this one draft and so we took this out

871
00:42:47,289 --> 00:42:53,319
and so I think the short address the

872
00:42:48,999 --> 00:43:00,368
comments Spencer I think Magnus may have

873
00:42:53,319 --> 00:43:03,609
been in front of you all his life yeah

874
00:43:00,369 --> 00:43:07,029
so but yeah I I don't see a problem I

875
00:43:03,609 --> 00:43:08,980
mean working groups outside of security

876
00:43:07,029 --> 00:43:10,869
obviously need to work on security

877
00:43:08,980 --> 00:43:14,170
related to the protocols etc so it's

878
00:43:10,869 --> 00:43:17,200
it's I don't take that first or anything

879
00:43:14,170 --> 00:43:19,480
I think and I think Teresa's comments

880
00:43:17,200 --> 00:43:23,470
maybe it's more spot-on for what what

881
00:43:19,480 --> 00:43:25,269
issue was singer so and I I haven't read

882
00:43:23,470 --> 00:43:28,779
the new version yet so I haven't figured

883
00:43:25,269 --> 00:43:38,229
out if if you removed too much or not

884
00:43:28,779 --> 00:43:41,289
but but let's see okay did you have more

885
00:43:38,230 --> 00:43:46,299
okay it's not Spencer Dawkins

886
00:43:41,289 --> 00:43:48,579
and what Teresa said about pulling out

887
00:43:46,299 --> 00:43:52,029
their detailed descriptions is brilliant

888
00:43:48,579 --> 00:43:53,589
because it was not super easy for the

889
00:43:52,029 --> 00:43:56,440
transport people to agree on the

890
00:43:53,589 --> 00:43:58,450
transport trade-offs back and for you

891
00:43:56,440 --> 00:44:00,460
know characterizations and trans in and

892
00:43:58,450 --> 00:44:02,680
in trade-offs and things like that back

893
00:44:00,460 --> 00:44:03,670
in the day when taps was starting so

894
00:44:02,680 --> 00:44:06,129
that's the right answer

895
00:44:03,670 --> 00:44:06,819
having said that former area directors

896
00:44:06,130 --> 00:44:09,279
can be blunt

897
00:44:06,819 --> 00:44:10,720
this is chartered work and it was

898
00:44:09,279 --> 00:44:15,460
discussed within the isg when I

899
00:44:10,720 --> 00:44:18,549
chartered it period Thank You Spencer

900
00:44:15,460 --> 00:44:19,749
Chris yeah Chris wooden I think we need

901
00:44:18,549 --> 00:44:21,579
to resolve this by just removing

902
00:44:19,749 --> 00:44:25,209
basically all of the fluff from the

903
00:44:21,579 --> 00:44:27,430
document and I think we can just move

904
00:44:25,210 --> 00:44:28,120
forward with the new stuff I'd also like

905
00:44:27,430 --> 00:44:30,430
to comment like

906
00:44:28,120 --> 00:44:32,470
Magnus said like quick is arguably

907
00:44:30,430 --> 00:44:38,190
probably should have been done maybe in

908
00:44:32,470 --> 00:44:44,680
the security area it's done that's

909
00:44:38,190 --> 00:44:46,630
moving right along okay um yeah the last

910
00:44:44,680 --> 00:44:49,810
criticism is that the document is a

911
00:44:46,630 --> 00:45:00,610
mixed bag of things which is somehow

912
00:44:49,810 --> 00:45:02,259
true for transfers so for mean set this

913
00:45:00,610 --> 00:45:06,520
was a split of documents now it's one

914
00:45:02,260 --> 00:45:09,160
document I think if we get more

915
00:45:06,520 --> 00:45:12,340
criticism on that we might want to

916
00:45:09,160 --> 00:45:13,569
change or we might want to decide to

917
00:45:12,340 --> 00:45:17,110
split the document again

918
00:45:13,570 --> 00:45:20,290
but as now for the rework most of the

919
00:45:17,110 --> 00:45:23,260
security and security analysis or

920
00:45:20,290 --> 00:45:27,130
security feature spotting has been

921
00:45:23,260 --> 00:45:31,720
removed I don't see the reason for that

922
00:45:27,130 --> 00:45:33,340
anymore and to clarify that you're

923
00:45:31,720 --> 00:45:35,500
saying you don't see a reason to split

924
00:45:33,340 --> 00:45:35,800
them yeah several documents okay yeah me

925
00:45:35,500 --> 00:45:36,970
neither

926
00:45:35,800 --> 00:45:43,800
please keep them in the same document

927
00:45:36,970 --> 00:45:43,799
and let's move it forward Chris would

928
00:45:44,880 --> 00:45:50,830
Chris okay Gouri first exactly one

929
00:45:49,540 --> 00:45:56,890
document much better to have these

930
00:45:50,830 --> 00:46:00,180
together okay so I think we are out I'm

931
00:45:56,890 --> 00:46:02,950
out of discussion points and with

932
00:46:00,180 --> 00:46:07,600
cleanly seemed to agree that most that

933
00:46:02,950 --> 00:46:10,899
the edits Mosley's at least try to

934
00:46:07,600 --> 00:46:14,380
address these issues the question is how

935
00:46:10,900 --> 00:46:17,080
do we continue so I have a suggestion

936
00:46:14,380 --> 00:46:20,950
okay sorry a quick chair interrupt here

937
00:46:17,080 --> 00:46:25,810
so one of the roles of the Shepherd is

938
00:46:20,950 --> 00:46:28,330
to work with commenters to get feedback

939
00:46:25,810 --> 00:46:35,140
on the resolution of their comments so I

940
00:46:28,330 --> 00:46:38,380
think a typical next step would be for

941
00:46:35,140 --> 00:46:39,370
you to summarize or maybe the with in

942
00:46:38,380 --> 00:46:41,200
collaboration with the authors to

943
00:46:39,370 --> 00:46:41,799
summarize the changes send a pointer to

944
00:46:41,200 --> 00:46:45,370
the new diet

945
00:46:41,800 --> 00:46:48,700
meant to Christian and Ecker allow them

946
00:46:45,370 --> 00:46:50,560
to respond to the changes and then we

947
00:46:48,700 --> 00:46:52,919
work with our area director on making a

948
00:46:50,560 --> 00:46:55,690
decision on how to proceed after that

949
00:46:52,920 --> 00:46:57,460
these are informative comments we've

950
00:46:55,690 --> 00:46:59,470
responded to it it sounds like people

951
00:46:57,460 --> 00:47:03,190
have given a lot of thought to making

952
00:46:59,470 --> 00:47:04,689
changes that are responsive to them but

953
00:47:03,190 --> 00:47:07,180
I think that giving the comment or a

954
00:47:04,690 --> 00:47:12,660
chance to make sure that we understand

955
00:47:07,180 --> 00:47:12,660
their concerns correctly is is typical

956
00:47:14,460 --> 00:47:21,010
yes Thank You Erin for that part and I

957
00:47:17,830 --> 00:47:24,700
would also request because of the rather

958
00:47:21,010 --> 00:47:26,920
large amount of changes I would be glad

959
00:47:24,700 --> 00:47:30,029
if someone beyond the authors would

960
00:47:26,920 --> 00:47:32,700
actually review the new version and say

961
00:47:30,030 --> 00:47:37,060
does this work for the working group etc

962
00:47:32,700 --> 00:47:40,629
still the committee can we get a

963
00:47:37,060 --> 00:47:42,240
volunteer Brian has volunteered thank

964
00:47:40,630 --> 00:47:48,100
you Brian

965
00:47:42,240 --> 00:47:52,649
the Shepherd I expect you I don't hear

966
00:47:48,100 --> 00:47:52,650
you I'm already warranted for that yes

967
00:47:52,770 --> 00:47:57,970
so I wanted to ask the chairs is due to

968
00:47:56,320 --> 00:48:02,830
this change since we did go through

969
00:47:57,970 --> 00:48:04,029
working group last call are we okay do

970
00:48:02,830 --> 00:48:06,819
we need to go through that again

971
00:48:04,030 --> 00:48:08,170
or are we okay essentially asking the

972
00:48:06,820 --> 00:48:10,570
whole working group to please review it

973
00:48:08,170 --> 00:48:13,030
as we are going forward with it and have

974
00:48:10,570 --> 00:48:16,990
specific people look at it yeah I think

975
00:48:13,030 --> 00:48:18,910
that this is this is you know my sort of

976
00:48:16,990 --> 00:48:21,520
opinion as chair and odd can Wayne if he

977
00:48:18,910 --> 00:48:22,779
wants is we didn't know working group

978
00:48:21,520 --> 00:48:24,130
last call it got that feedback we've

979
00:48:22,780 --> 00:48:25,870
done ITF last call we've gotten that

980
00:48:24,130 --> 00:48:27,310
feedback it's like each time you

981
00:48:25,870 --> 00:48:28,870
incorporate feedback you don't have to

982
00:48:27,310 --> 00:48:30,310
start back from square zero so I think

983
00:48:28,870 --> 00:48:32,710
we're in a process of continuous

984
00:48:30,310 --> 00:48:34,630
refinement I think it you know we should

985
00:48:32,710 --> 00:48:36,910
make sure the the working group gets

986
00:48:34,630 --> 00:48:39,730
notice like a summary of what the

987
00:48:36,910 --> 00:48:42,040
changes are and it can encourage them to

988
00:48:39,730 --> 00:48:43,780
give another look at it we've got at

989
00:48:42,040 --> 00:48:46,900
least one committed reviewers I think

990
00:48:43,780 --> 00:48:48,730
that's sufficient III think I agree with

991
00:48:46,900 --> 00:48:50,920
that we I mean now we are discussing

992
00:48:48,730 --> 00:48:52,930
here and it's meeting and then we have

993
00:48:50,920 --> 00:48:55,360
some volunteers working on working on

994
00:48:52,930 --> 00:48:58,180
the changes so I think we're fine

995
00:48:55,360 --> 00:48:59,110
yeah that sounds Chris what that sounds

996
00:48:58,180 --> 00:49:01,600
great

997
00:48:59,110 --> 00:49:03,730
if this were just the reduction in

998
00:49:01,600 --> 00:49:06,279
content I wish we could just move it

999
00:49:03,730 --> 00:49:07,660
forward but because there's this new bit

1000
00:49:06,280 --> 00:49:10,150
about what the interface is to

1001
00:49:07,660 --> 00:49:11,680
applications which is sort of different

1002
00:49:10,150 --> 00:49:13,230
from what we had before it's like

1003
00:49:11,680 --> 00:49:16,029
rephrased a little bit differently

1004
00:49:13,230 --> 00:49:17,230
having folks like Brian and particulars

1005
00:49:16,030 --> 00:49:20,320
that were working on the implementation

1006
00:49:17,230 --> 00:49:23,860
or the API Draft would be really great

1007
00:49:20,320 --> 00:49:25,750
and having those reviews before we move

1008
00:49:23,860 --> 00:49:29,440
forward with you know for some

1009
00:49:25,750 --> 00:49:32,800
definition move forward yeah I think I

1010
00:49:29,440 --> 00:49:34,980
think yeah from my perspective you're

1011
00:49:32,800 --> 00:49:37,990
gonna have basically two weeks to

1012
00:49:34,980 --> 00:49:41,830
comment review these changes and and I

1013
00:49:37,990 --> 00:49:44,319
mean I'm hoping that you also that you

1014
00:49:41,830 --> 00:49:47,069
manage to get feedback from a Korean and

1015
00:49:44,320 --> 00:49:50,380
a Christian in that time frame because

1016
00:49:47,070 --> 00:49:51,820
that's roughly where I mean I don't

1017
00:49:50,380 --> 00:49:53,560
think we're gonna have an ISDN call

1018
00:49:51,820 --> 00:49:57,700
within the next two weeks and everything

1019
00:49:53,560 --> 00:50:00,130
it's two weeks until it so I will see

1020
00:49:57,700 --> 00:50:05,230
how it looks next week and then see the

1021
00:50:00,130 --> 00:50:09,520
side of mine scheduling for dynasty okay

1022
00:50:05,230 --> 00:50:11,140
so that this these were non-blocking

1023
00:50:09,520 --> 00:50:12,340
comments right there's not discuss on

1024
00:50:11,140 --> 00:50:15,460
the draft at this time is that right

1025
00:50:12,340 --> 00:50:17,230
Magnus no this is i flossed cole

1026
00:50:15,460 --> 00:50:19,930
comments and we need I need two story

1027
00:50:17,230 --> 00:50:22,830
for say I need to know that we have

1028
00:50:19,930 --> 00:50:25,390
addressed or these consider those

1029
00:50:22,830 --> 00:50:27,220
comments etc and and that's what we're

1030
00:50:25,390 --> 00:50:28,750
doing now and that's why I got it we

1031
00:50:27,220 --> 00:50:30,669
need you at least I would like to see

1032
00:50:28,750 --> 00:50:32,530
some feedback from occurring christian

1033
00:50:30,670 --> 00:50:35,260
on this because they were the main main

1034
00:50:32,530 --> 00:50:38,430
people otherwise it's i think you

1035
00:50:35,260 --> 00:50:40,990
managed to dress those etc but it's and

1036
00:50:38,430 --> 00:50:43,140
and therefore i also give the working

1037
00:50:40,990 --> 00:50:45,580
group the time because the change is to

1038
00:50:43,140 --> 00:50:46,600
review this before it goes in front of

1039
00:50:45,580 --> 00:50:50,590
their history and they make a decision

1040
00:50:46,600 --> 00:50:54,910
so okay great thank you thank you thanks

1041
00:50:50,590 --> 00:50:56,350
Phillip I folks in the room take a look

1042
00:50:54,910 --> 00:50:57,700
at how much fun it is to shepherd when

1043
00:50:56,350 --> 00:51:03,819
these drafts because we've got three

1044
00:50:57,700 --> 00:51:07,660
more opportunities coming ok so then

1045
00:51:03,820 --> 00:51:09,080
next item is Brian and

1046
00:51:07,660 --> 00:51:16,170
[Music]

1047
00:51:09,080 --> 00:51:18,450
the open issue reviews so we have labels

1048
00:51:16,170 --> 00:51:22,320
got it yes yes yes yes

1049
00:51:18,450 --> 00:51:24,330
architecture is it is it a multiple

1050
00:51:22,320 --> 00:51:26,390
select thing do I have to unselect yes I

1051
00:51:24,330 --> 00:51:26,390
do

1052
00:51:29,090 --> 00:51:39,270
alright well we've been talking I think

1053
00:51:36,480 --> 00:51:40,560
Corey's got a guilty conscience what

1054
00:51:39,270 --> 00:51:43,410
while Brian's work and what he's doing

1055
00:51:40,560 --> 00:51:46,140
and the change in the security document

1056
00:51:43,410 --> 00:51:51,420
is kind of fairly large in terms of text

1057
00:51:46,140 --> 00:51:53,970
change yes yeah like people in this room

1058
00:51:51,420 --> 00:51:55,530
have a look at it quickly to see whether

1059
00:51:53,970 --> 00:51:57,720
it really is the same thing that we

1060
00:51:55,530 --> 00:51:59,400
wanted I think he probably is but he'd

1061
00:51:57,720 --> 00:52:02,160
be nice to have told the working group

1062
00:51:59,400 --> 00:52:03,540
such I think he says the same stuff I'm

1063
00:52:02,160 --> 00:52:04,980
not complaining but I'm just saying

1064
00:52:03,540 --> 00:52:07,230
there's a lot of text change we should

1065
00:52:04,980 --> 00:52:09,930
look at it and give encouragement to the

1066
00:52:07,230 --> 00:52:11,550
chair that we all support it if it turns

1067
00:52:09,930 --> 00:52:13,589
out it's been long enough since I've

1068
00:52:11,550 --> 00:52:14,910
seen this thing that I forget it so I'm

1069
00:52:13,590 --> 00:52:15,930
just gonna be looking at it with new I'm

1070
00:52:14,910 --> 00:52:17,100
not gonna look at the change and you're

1071
00:52:15,930 --> 00:52:19,350
gonna look at the document with new eyes

1072
00:52:17,100 --> 00:52:22,350
and figure out what the what the

1073
00:52:19,350 --> 00:52:25,140
situation is yeah so Brian as we

1074
00:52:22,350 --> 00:52:26,520
discussed on the list my personal goal

1075
00:52:25,140 --> 00:52:28,500
here is to make sure there's an owner

1076
00:52:26,520 --> 00:52:30,750
for each of these two either driver to

1077
00:52:28,500 --> 00:52:33,000
closure or remove it all together great

1078
00:52:30,750 --> 00:52:35,580
so we have number 45 we're gonna were

1079
00:52:33,000 --> 00:52:37,680
the oldest one first Wow one digit

1080
00:52:35,580 --> 00:52:41,279
issues just came from quick so this is

1081
00:52:37,680 --> 00:52:42,779
you do digit issues still Tommy I'm

1082
00:52:41,280 --> 00:52:44,910
making you feel guilty enough to just go

1083
00:52:42,780 --> 00:52:46,830
write the text for this like I mean like

1084
00:52:44,910 --> 00:52:48,240
I think we know what you're clicking it

1085
00:52:46,830 --> 00:52:49,950
and I call you see what we great we had

1086
00:52:48,240 --> 00:52:53,100
a pretty long discussion about this also

1087
00:52:49,950 --> 00:52:55,620
be nice to get back in 2018 helping on

1088
00:52:53,100 --> 00:53:00,360
some of these things right so if we

1089
00:52:55,620 --> 00:53:02,100
scroll down wow this is referring to

1090
00:53:00,360 --> 00:53:05,970
things that we delete Lee added in and

1091
00:53:02,100 --> 00:53:07,170
deleted yeah a lot of this is like we're

1092
00:53:05,970 --> 00:53:09,629
not gonna do it we're still not gonna do

1093
00:53:07,170 --> 00:53:11,910
it we've already done post London yeah

1094
00:53:09,630 --> 00:53:13,140
yeah so we've already done various pull

1095
00:53:11,910 --> 00:53:14,850
requests for it we just never fully

1096
00:53:13,140 --> 00:53:16,500
closed it okay it looks like the last

1097
00:53:14,850 --> 00:53:19,440
date we have on here is comments we had

1098
00:53:16,500 --> 00:53:21,420
from our side meeting in March yeah

1099
00:53:19,440 --> 00:53:22,180
about just rewording so I think this is

1100
00:53:21,420 --> 00:53:23,680
something we can

1101
00:53:22,180 --> 00:53:25,029
we try to get done this week okay

1102
00:53:23,680 --> 00:53:28,089
together we'll sit down and do it

1103
00:53:25,030 --> 00:53:32,820
wordsmith it um can you can you assign

1104
00:53:28,090 --> 00:53:32,820
me to this one as well go up to the top

1105
00:53:41,130 --> 00:53:47,440
Bri

1106
00:53:43,170 --> 00:53:50,200
Trammell with two L's yeah

1107
00:53:47,440 --> 00:53:52,030
brick Ram yeah which is no no click it

1108
00:53:50,200 --> 00:53:54,970
again click it again click it again

1109
00:53:52,030 --> 00:53:59,380
there we go good yes fine now click

1110
00:53:54,970 --> 00:54:02,020
somewhere else and it's gonna take a

1111
00:53:59,380 --> 00:54:10,990
while and there you go okay computers

1112
00:54:02,020 --> 00:54:13,509
how do they work okay okay um yeah so

1113
00:54:10,990 --> 00:54:14,799
yeah then go back this is stupid does

1114
00:54:13,510 --> 00:54:16,420
anyone know how to go to the next issue

1115
00:54:14,800 --> 00:54:20,170
or the previous issue in the list that

1116
00:54:16,420 --> 00:54:21,940
you came from does radar do this to have

1117
00:54:20,170 --> 00:54:25,980
like the you know go me through my yeah

1118
00:54:21,940 --> 00:54:25,980
okay all right you know what I'll Drive

1119
00:54:33,240 --> 00:54:44,589
let's watch people learn how to use a

1120
00:54:36,040 --> 00:54:48,150
Chromebook alright wow this is slow who

1121
00:54:44,590 --> 00:54:51,370
who who built this operating system oh

1122
00:54:48,150 --> 00:54:53,890
wait no I accidentally do API and okay

1123
00:54:51,370 --> 00:54:58,740
sleep oh this is so painful

1124
00:54:53,890 --> 00:54:58,740
can we actually plug my machine into the

1125
00:55:04,830 --> 00:55:10,080
is there a give it

1126
00:55:31,470 --> 00:55:35,160
using your spot in

1127
00:55:54,920 --> 00:55:58,030
[Music]

1128
00:56:08,460 --> 00:56:28,770
all right so labels architecture labels

1129
00:56:18,440 --> 00:56:31,830
API Wow looks like a Chromebook

1130
00:56:28,770 --> 00:56:35,930
all right um so architecture privacy and

1131
00:56:31,830 --> 00:56:38,730
security considerations ready for tax

1132
00:56:35,930 --> 00:56:40,230
yeah Krista this one has been ready for

1133
00:56:38,730 --> 00:56:42,360
text for a very long time I think

1134
00:56:40,230 --> 00:56:45,240
there's like 30 pings to me on this yes

1135
00:56:42,360 --> 00:56:49,290
you there are um we should just sit down

1136
00:56:45,240 --> 00:56:51,149
this week and do it yeah so yeah on

1137
00:56:49,290 --> 00:56:52,920
Friday let's do it all right

1138
00:56:51,150 --> 00:56:56,640
I'm Friday correct great it will happen

1139
00:56:52,920 --> 00:56:59,250
on Friday excellent that is a sign to

1140
00:56:56,640 --> 00:57:01,290
Chris I can't oh right

1141
00:56:59,250 --> 00:57:04,920
define the server-side equivalent of

1142
00:57:01,290 --> 00:57:06,390
racing this somehow this is ready for

1143
00:57:04,920 --> 00:57:21,950
text even though I have no idea how the

1144
00:57:06,390 --> 00:57:26,370
hell would do it the PR from yeah from

1145
00:57:21,950 --> 00:57:29,160
PR number nine oh no that's that's a PR

1146
00:57:26,370 --> 00:57:38,460
from Teresa Owens and coke oh I see

1147
00:57:29,160 --> 00:57:40,020
great listening a multiple interfaces

1148
00:57:38,460 --> 00:57:41,850
address it by default need fees best

1149
00:57:40,020 --> 00:57:43,590
buys that I think for architecture all

1150
00:57:41,850 --> 00:57:48,779
we need to do is put like a line of text

1151
00:57:43,590 --> 00:57:50,400
in there yes for interface we probably

1152
00:57:48,780 --> 00:57:52,560
need to put a line of text in there

1153
00:57:50,400 --> 00:57:53,610
right it's like you're not really racing

1154
00:57:52,560 --> 00:57:56,009
anything you're just listening on

1155
00:57:53,610 --> 00:58:00,300
multiple things and like whether or not

1156
00:57:56,010 --> 00:58:04,260
one of those two things like injects

1157
00:58:00,300 --> 00:58:05,550
delay for some reason is up to that I

1158
00:58:04,260 --> 00:58:08,070
don't think we should suggest to people

1159
00:58:05,550 --> 00:58:11,100
that they do that right so there's a

1160
00:58:08,070 --> 00:58:13,080
line of text in each doc and it's a sign

1161
00:58:11,100 --> 00:58:13,910
to Tommy and callin and callin is

1162
00:58:13,080 --> 00:58:16,620
confused

1163
00:58:13,910 --> 00:58:18,990
well I'm frequently confused I'm

1164
00:58:16,620 --> 00:58:20,290
wondering and of course I have read all

1165
00:58:18,990 --> 00:58:22,359
these issues three

1166
00:58:20,290 --> 00:58:37,509
recently and wouldn't care it relates to

1167
00:58:22,360 --> 00:58:38,800
the rendezvous stuff thinking okay we

1168
00:58:37,510 --> 00:58:41,500
may need to think about this a little

1169
00:58:38,800 --> 00:58:42,940
bit more to make sure the run it's we're

1170
00:58:41,500 --> 00:58:47,250
not closing off the rendezvous stuff

1171
00:58:42,940 --> 00:58:47,250
which we know needs work rate

1172
00:58:51,990 --> 00:58:58,779
let's punt on this one it's still

1173
00:58:56,500 --> 00:59:00,190
assigned to the two of you if we don't

1174
00:58:58,780 --> 00:59:01,780
get a chance to talk about that this

1175
00:59:00,190 --> 00:59:08,410
week then let's try and do that before

1176
00:59:01,780 --> 00:59:12,370
the next call no ha ha the back button

1177
00:59:08,410 --> 00:59:14,049
works API needs a way to handle start

1178
00:59:12,370 --> 00:59:24,240
TLS this is assigned to me even though

1179
00:59:14,050 --> 00:59:28,140
it's still marked discuss this Tommy now

1180
00:59:24,240 --> 00:59:30,939
actually this is this is free more abuse

1181
00:59:28,140 --> 00:59:34,810
yeah this is another things why frame as

1182
00:59:30,940 --> 00:59:36,790
a critique ray well I think that I think

1183
00:59:34,810 --> 00:59:39,100
that this discussion is actually what

1184
00:59:36,790 --> 00:59:44,279
drove us to make the framers bigger and

1185
00:59:39,100 --> 00:59:47,620
then we made the framer smaller again I

1186
00:59:44,280 --> 00:59:52,780
as the owner of this issue and inclined

1187
00:59:47,620 --> 00:59:58,720
to close it without further close it

1188
00:59:52,780 --> 01:00:00,430
with a shrug or assignment Jonathan ok

1189
00:59:58,720 --> 01:00:04,270
but so you're saying that there will not

1190
01:00:00,430 --> 01:00:06,430
be a way to for a taps using thing to do

1191
01:00:04,270 --> 01:00:08,140
start TLS in a way that you know that's

1192
01:00:06,430 --> 01:00:09,970
not what we're saying okay what we're

1193
01:00:08,140 --> 01:00:16,240
saying is that there won't be a way for

1194
01:00:09,970 --> 01:00:18,700
taps to abstractly and generically

1195
01:00:16,240 --> 01:00:21,370
represent an interface for defining

1196
01:00:18,700 --> 01:00:24,189
start TLS like semantics at a layer

1197
01:00:21,370 --> 01:00:26,650
other than the application layer you can

1198
01:00:24,190 --> 01:00:30,760
use a framer to hack it but we're not

1199
01:00:26,650 --> 01:00:32,290
going to put a a protocol stack mutation

1200
01:00:30,760 --> 01:00:34,510
hook into the architecture

1201
01:00:32,290 --> 01:00:38,230
because start TLS is a stock mutation

1202
01:00:34,510 --> 01:00:40,210
right right yeah I mean this was sort of

1203
01:00:38,230 --> 01:00:41,680
I used as a sort of like an instance of

1204
01:00:40,210 --> 01:00:45,310
things that need to do stack mutation

1205
01:00:41,680 --> 01:00:48,430
rate and what I would say is that start

1206
01:00:45,310 --> 01:00:50,529
TLS is an application sorry and

1207
01:00:48,430 --> 01:00:53,859
WebSockets is an application right it's

1208
01:00:50,530 --> 01:00:57,460
a the application modifies a stack and

1209
01:00:53,860 --> 01:00:59,380
that's a problem but taps is more taps

1210
01:00:57,460 --> 01:01:01,830
is more important doing stock selection

1211
01:00:59,380 --> 01:01:04,750
at connection time than it is at

1212
01:01:01,830 --> 01:01:07,690
mutation time and you could possibly

1213
01:01:04,750 --> 01:01:09,550
have an implementation specific thing

1214
01:01:07,690 --> 01:01:11,500
this is by the way this stack is mutated

1215
01:01:09,550 --> 01:01:13,660
all to this other stack which is

1216
01:01:11,500 --> 01:01:16,720
actually kind of implicit right all

1217
01:01:13,660 --> 01:01:18,190
http/2 connections that look like they

1218
01:01:16,720 --> 01:01:20,080
might have a WebSockets in point at them

1219
01:01:18,190 --> 01:01:21,610
or mutate of all the WebSockets taps

1220
01:01:20,080 --> 01:01:24,430
doesn't need to know it's not HTTP to

1221
01:01:21,610 --> 01:01:26,590
also do connections are probably

1222
01:01:24,430 --> 01:01:27,700
hopefully it will be a two people on one

1223
01:01:26,590 --> 01:01:29,770
conduction spending what what server

1224
01:01:27,700 --> 01:01:30,700
does yeah right so but this is all but

1225
01:01:29,770 --> 01:01:32,259
this is all things that need to get

1226
01:01:30,700 --> 01:01:35,350
bubbled up the app tap so absolutely

1227
01:01:32,260 --> 01:01:37,780
shouldn't be down in that space yeah

1228
01:01:35,350 --> 01:01:42,310
unless we want to reconnect it which we

1229
01:01:37,780 --> 01:01:46,030
don't right taps is focused on the API

1230
01:01:42,310 --> 01:01:47,560
looking down and lot of the confusion is

1231
01:01:46,030 --> 01:01:53,410
because we're talking about concepts

1232
01:01:47,560 --> 01:01:55,480
that happen within the implementation so

1233
01:01:53,410 --> 01:01:57,879
tell me Paul here probably Singapore it

1234
01:01:55,480 --> 01:02:03,010
to the point like this issue right now

1235
01:01:57,880 --> 01:02:04,600
is labeled with arc and API and I

1236
01:02:03,010 --> 01:02:07,330
certainly don't think we need text in

1237
01:02:04,600 --> 01:02:08,980
the architecture for this and with

1238
01:02:07,330 --> 01:02:11,170
regards to the API what we did with the

1239
01:02:08,980 --> 01:02:13,900
framework essentially modify the taxes

1240
01:02:11,170 --> 01:02:15,430
that we pushed the details of how you do

1241
01:02:13,900 --> 01:02:17,350
dynamic modification into the

1242
01:02:15,430 --> 01:02:19,660
implementation yeah and I think what is

1243
01:02:17,350 --> 01:02:21,670
there is sufficient to do it the only

1244
01:02:19,660 --> 01:02:23,710
caveat there is that the implementation

1245
01:02:21,670 --> 01:02:25,480
unlike the other ones is informational

1246
01:02:23,710 --> 01:02:28,090
and so it doesn't have any normative

1247
01:02:25,480 --> 01:02:30,370
text saying that your taps

1248
01:02:28,090 --> 01:02:32,350
implementation must give these hooks to

1249
01:02:30,370 --> 01:02:35,380
let people do start TLS I think in

1250
01:02:32,350 --> 01:02:37,569
practice they will but that would I

1251
01:02:35,380 --> 01:02:38,890
almost argue it's a follow-on document

1252
01:02:37,570 --> 01:02:40,600
that maybe we should start looking at

1253
01:02:38,890 --> 01:02:42,310
standardizing implementations of

1254
01:02:40,600 --> 01:02:44,140
protocol stacks and having like

1255
01:02:42,310 --> 01:02:45,819
interoperable ones that we have defined

1256
01:02:44,140 --> 01:02:47,319
with yang models as

1257
01:02:45,819 --> 01:02:52,150
secondary activity after we get the

1258
01:02:47,319 --> 01:02:54,640
chord arguments done yes you can do

1259
01:02:52,150 --> 01:02:59,589
start a less than our API so it works so

1260
01:02:54,640 --> 01:03:00,879
everything's good 2:49 is now closed do

1261
01:02:59,589 --> 01:03:03,819
we need a terminology section and

1262
01:03:00,880 --> 01:03:05,709
architecture assigns to the entire work

1263
01:03:03,819 --> 01:03:08,979
and actually if we scroll down I think

1264
01:03:05,709 --> 01:03:10,419
the last question on here is like now it

1265
01:03:08,979 --> 01:03:13,149
wasn't this one like we thought we were

1266
01:03:10,420 --> 01:03:17,319
done though it's needs confirmation why

1267
01:03:13,150 --> 01:03:19,959
did he decide Gauri you opened this do

1268
01:03:17,319 --> 01:03:29,529
you think we need more terminology than

1269
01:03:19,959 --> 01:03:32,649
we have me reopened it my opinion is

1270
01:03:29,529 --> 01:03:34,509
that essentially the the back half of

1271
01:03:32,650 --> 01:03:36,880
the document is terminology and

1272
01:03:34,509 --> 01:03:42,099
definitions already and we don't need

1273
01:03:36,880 --> 01:03:44,049
another section ok this was me I mean

1274
01:03:42,099 --> 01:03:45,880
this was connected to another comment

1275
01:03:44,049 --> 01:03:47,529
because it was sometimes a little bit

1276
01:03:45,880 --> 01:03:48,849
hard to understand this term these terms

1277
01:03:47,529 --> 01:03:50,259
when they show up the first time because

1278
01:03:48,849 --> 01:03:51,430
they were not well defined but now we

1279
01:03:50,259 --> 01:03:52,829
have a little bit more this overview

1280
01:03:51,430 --> 01:03:55,089
section so I think that actually

1281
01:03:52,829 --> 01:04:03,339
fulfills the same class time ok it was

1282
01:03:55,089 --> 01:04:05,709
just like closing it while Bryan's

1283
01:04:03,339 --> 01:04:08,288
closing it I promise to do a very

1284
01:04:05,709 --> 01:04:09,848
detailed read through this with no prior

1285
01:04:08,289 --> 01:04:13,589
understanding to see whether we define

1286
01:04:09,849 --> 01:04:15,519
everything so a solution that's breath

1287
01:04:13,589 --> 01:04:19,229
and you're gonna open a whole bunch of

1288
01:04:15,519 --> 01:04:22,479
new issues what'll be great yeah tabs

1289
01:04:19,229 --> 01:04:25,718
architectural review two notes 25 March

1290
01:04:22,479 --> 01:04:28,989
by Gauri let's do that this week there's

1291
01:04:25,719 --> 01:04:31,449
no need to to talk about that vertical

1292
01:04:28,989 --> 01:04:39,910
stacks that are not equivalent have no

1293
01:04:31,449 --> 01:04:42,670
space in our framework only protocol

1294
01:04:39,910 --> 01:04:43,859
stacks work will be safely raised trees

1295
01:04:42,670 --> 01:04:47,249
even to talk to this one a little bit

1296
01:04:43,859 --> 01:04:49,598
yes already architecture document before

1297
01:04:47,249 --> 01:04:51,069
coming to this meeting and I was kind of

1298
01:04:49,599 --> 01:04:53,109
confused what we actually consider

1299
01:04:51,069 --> 01:04:54,969
equivalent I think we talked about this

1300
01:04:53,109 --> 01:04:57,489
before but in the architecture text is

1301
01:04:54,969 --> 01:04:59,740
not really clear so one interpretation

1302
01:04:57,489 --> 01:05:01,750
is that if our application doesn't space

1303
01:04:59,740 --> 01:05:03,430
if I what it needs like it says reliable

1304
01:05:01,750 --> 01:05:05,770
ignore like I don't care if it's

1305
01:05:03,430 --> 01:05:07,690
reliable or not then TCP and UDP can be

1306
01:05:05,770 --> 01:05:10,180
equivalent and then the architecture

1307
01:05:07,690 --> 01:05:12,040
says this is fine and it says it's not

1308
01:05:10,180 --> 01:05:14,020
fine like there's two different places

1309
01:05:12,040 --> 01:05:19,680
where we talk about this looks like phil

1310
01:05:14,020 --> 01:05:24,100
has an actual specific remedy to this

1311
01:05:19,680 --> 01:05:26,799
yeah which is what PR 327 is all about

1312
01:05:24,100 --> 01:05:28,930
did we land PR 327 like a month ago or I

1313
01:05:26,800 --> 01:05:30,130
mean we either we ever landed or

1314
01:05:28,930 --> 01:05:37,660
reclosed it because it's not the one

1315
01:05:30,130 --> 01:05:40,780
open PR we have right now and this was a

1316
01:05:37,660 --> 01:05:42,160
change to the API doc it's okay we just

1317
01:05:40,780 --> 01:05:45,970
needed to go do some architecture

1318
01:05:42,160 --> 01:05:48,940
cleanup will we'll sit down and and take

1319
01:05:45,970 --> 01:05:55,660
your suggestion hold on I need to find

1320
01:05:48,940 --> 01:05:57,190
them just okay Oh max franca just real

1321
01:05:55,660 --> 01:06:00,069
quick we had a lot of discussion on the

1322
01:05:57,190 --> 01:06:01,810
mailing list during Montreal just to

1323
01:06:00,070 --> 01:06:07,030
make sure so people know there's more

1324
01:06:01,810 --> 01:06:10,900
than just an issue okay so the basic

1325
01:06:07,030 --> 01:06:13,240
case was saying that if something

1326
01:06:10,900 --> 01:06:15,460
matches that criteria selection

1327
01:06:13,240 --> 01:06:18,779
properties specified by the application

1328
01:06:15,460 --> 01:06:22,119
it's considered equivalent so if you--if

1329
01:06:18,780 --> 01:06:23,680
if it's not so TCP and UDP can be

1330
01:06:22,119 --> 01:06:25,900
equivalent if the application does

1331
01:06:23,680 --> 01:06:29,379
doesn't care about any properties of the

1332
01:06:25,900 --> 01:06:31,390
transport but this but this is clearly

1333
01:06:29,380 --> 01:06:33,760
not a problem of taps but a problem of

1334
01:06:31,390 --> 01:06:37,420
an application just not specifying what

1335
01:06:33,760 --> 01:06:40,540
it wants ready so the real question is

1336
01:06:37,420 --> 01:06:44,830
is if the if the application specifies

1337
01:06:40,540 --> 01:06:48,759
something stupid that's not our problem

1338
01:06:44,830 --> 01:06:50,319
right it is up to the implementation the

1339
01:06:48,760 --> 01:06:51,670
implementer is to decide whether or not

1340
01:06:50,320 --> 01:06:55,720
they want to be permissive or

1341
01:06:51,670 --> 01:06:57,430
restrictive on that yeah right

1342
01:06:55,720 --> 01:06:59,529
yeah there's defaults as well right like

1343
01:06:57,430 --> 01:07:00,970
so and pretty much everyone is going to

1344
01:06:59,530 --> 01:07:02,380
have their default be yeah here you get

1345
01:07:00,970 --> 01:07:05,830
TCP because that's probably what you

1346
01:07:02,380 --> 01:07:08,140
meant yeah so I think we should assign

1347
01:07:05,830 --> 01:07:09,400
somebody for that and then also another

1348
01:07:08,140 --> 01:07:11,529
thing that's why I wanted security

1349
01:07:09,400 --> 01:07:13,570
discussed first so right now equivalent

1350
01:07:11,530 --> 01:07:15,280
says oh and it needs to be like the same

1351
01:07:13,570 --> 01:07:20,550
transports and the same security

1352
01:07:15,280 --> 01:07:24,400
protocol and yeah

1353
01:07:20,550 --> 01:07:26,320
someone needs you assigned yeah and

1354
01:07:24,400 --> 01:07:28,210
actually because and I would say so

1355
01:07:26,320 --> 01:07:31,030
please add that note on security in the

1356
01:07:28,210 --> 01:07:32,800
issue and I'd say since you have a lot

1357
01:07:31,030 --> 01:07:35,410
more context on security than I do that

1358
01:07:32,800 --> 01:07:38,500
it's it's probably actually that was

1359
01:07:35,410 --> 01:07:39,430
that was almost a joke assigning you

1360
01:07:38,500 --> 01:07:40,390
when you said someone should be assigned

1361
01:07:39,430 --> 01:07:44,740
but I think you're actually the right

1362
01:07:40,390 --> 01:07:48,220
person to do it so there so I guess I'd

1363
01:07:44,740 --> 01:07:51,240
have is our HTTP 1 1 and HTTP 2 or I

1364
01:07:48,220 --> 01:07:53,740
should give you 2 H 2 B 3 equivalent yes

1365
01:07:51,240 --> 01:07:56,950
but just because we say they are well

1366
01:07:53,740 --> 01:07:59,410
because they mutate to each other but I

1367
01:07:56,950 --> 01:08:00,790
mean so obviously it's one of those some

1368
01:07:59,410 --> 01:08:05,830
can do multiplexing and some of them

1369
01:08:00,790 --> 01:08:07,060
can't so why are they equivalent if the

1370
01:08:05,830 --> 01:08:09,040
application hasn't asked for it then

1371
01:08:07,060 --> 01:08:10,600
yeah then it it doesn't matter right

1372
01:08:09,040 --> 01:08:14,230
like you can you can have a multiplexing

1373
01:08:10,600 --> 01:08:16,059
protocol stand into an on multiplexing

1374
01:08:14,230 --> 01:08:19,960
protocol right right I mean that's

1375
01:08:16,060 --> 01:08:21,069
that's how upgrade works so uh looking

1376
01:08:19,960 --> 01:08:23,770
through this again I think Phillips

1377
01:08:21,069 --> 01:08:25,150
point that it's mainly point one that

1378
01:08:23,770 --> 01:08:26,830
needs clarification of text is

1379
01:08:25,149 --> 01:08:30,279
absolutely correct because the other

1380
01:08:26,830 --> 01:08:32,680
points are much clearer in saying that

1381
01:08:30,279 --> 01:08:35,318
like you both things must offer the

1382
01:08:32,680 --> 01:08:36,970
transport services as required by the

1383
01:08:35,319 --> 01:08:38,500
application yeah and so essentially you

1384
01:08:36,970 --> 01:08:40,540
must also have the same application

1385
01:08:38,500 --> 01:08:42,520
features such as multiplexing as

1386
01:08:40,540 --> 01:08:44,470
required by the application if you don't

1387
01:08:42,520 --> 01:08:45,580
require them the fact that h2 has

1388
01:08:44,470 --> 01:08:51,370
multiplexing you don't care about

1389
01:08:45,580 --> 01:08:53,170
doesn't matter so in any documentation

1390
01:08:51,370 --> 01:08:55,779
could even choose to say oh we don't

1391
01:08:53,170 --> 01:08:57,760
have multiplexing so we make a

1392
01:08:55,779 --> 01:08:59,920
connection pool of TCP connections and

1393
01:08:57,760 --> 01:09:03,240
use this pool for multiplexing this

1394
01:08:59,920 --> 01:09:03,240
would also be considered equivalent

1395
01:09:10,850 --> 01:09:21,240
so events versus callbacks for security

1396
01:09:13,859 --> 01:09:22,439
relevant asynchrony oh yeah so this is

1397
01:09:21,240 --> 01:09:24,809
basically the architecture talks about

1398
01:09:22,439 --> 01:09:28,710
events but then the interface talks

1399
01:09:24,810 --> 01:09:30,480
about events and callbacks and it uses

1400
01:09:28,710 --> 01:09:32,790
events for things that happen

1401
01:09:30,479 --> 01:09:34,319
asynchronously and callbacks for things

1402
01:09:32,790 --> 01:09:36,710
that happen because the security

1403
01:09:34,319 --> 01:09:40,349
Association event happened great and the

1404
01:09:36,710 --> 01:09:42,689
the should we explicitly specify this so

1405
01:09:40,350 --> 01:09:44,400
it's not confusing and I think we should

1406
01:09:42,689 --> 01:09:47,330
actually have both because a callback is

1407
01:09:44,399 --> 01:09:51,479
different than an event a callback is a

1408
01:09:47,330 --> 01:09:53,040
hey I yeah yes right

1409
01:09:51,479 --> 01:09:54,690
yeah an event is something that doesn't

1410
01:09:53,040 --> 01:09:57,480
have a context that you pass to it and a

1411
01:09:54,690 --> 01:09:59,879
callback is and callbacks are very

1412
01:09:57,480 --> 01:10:01,049
common sort of in the like api's that

1413
01:09:59,880 --> 01:10:05,340
provide security that we're going to be

1414
01:10:01,050 --> 01:10:06,090
building on top of um yeah there's a lot

1415
01:10:05,340 --> 01:10:11,460
of yes

1416
01:10:06,090 --> 01:10:13,410
there's a yeah I think we just I think I

1417
01:10:11,460 --> 01:10:15,630
put a ready for text tag on this and I

1418
01:10:13,410 --> 01:10:17,910
think I was right oh no I did not but

1419
01:10:15,630 --> 01:10:30,150
let's do that now and I'll assign myself

1420
01:10:17,910 --> 01:10:37,650
since ah thank you good up labels ready

1421
01:10:30,150 --> 01:10:39,710
for text sign yourself then one bin is

1422
01:10:37,650 --> 01:10:43,830
me okay

1423
01:10:39,710 --> 01:10:46,790
so I'll just write that yeah Chris would

1424
01:10:43,830 --> 01:10:49,050
thank you please keep them separate yeah

1425
01:10:46,790 --> 01:10:52,050
treating everything as an event has led

1426
01:10:49,050 --> 01:10:55,280
to like very bad API in the past that

1427
01:10:52,050 --> 01:10:57,690
has bitten me personally many times yo

1428
01:10:55,280 --> 01:10:58,980
cool yeah so the problem is right now is

1429
01:10:57,690 --> 01:11:00,690
like we keep them separate in the API

1430
01:10:58,980 --> 01:11:02,009
and in the architecture we just sort of

1431
01:11:00,690 --> 01:11:03,240
like don't say anything and that was

1432
01:11:02,010 --> 01:11:05,220
what was confusing right like we're not

1433
01:11:03,240 --> 01:11:07,230
talking about blending them together

1434
01:11:05,220 --> 01:11:09,540
we're talking about like raising it to a

1435
01:11:07,230 --> 01:11:11,910
this is an architecture level thing and

1436
01:11:09,540 --> 01:11:14,400
it's there for reasons right and that's

1437
01:11:11,910 --> 01:11:18,849
what I'm gonna do

1438
01:11:14,400 --> 01:11:21,250
yeah competency yes I agree

1439
01:11:18,850 --> 01:11:23,140
be careful how you phrase this because

1440
01:11:21,250 --> 01:11:24,610
both events and callback have lots of

1441
01:11:23,140 --> 01:11:26,320
different meanings to lots of different

1442
01:11:24,610 --> 01:11:28,839
people with different programming

1443
01:11:26,320 --> 01:11:32,019
language is operating systems

1444
01:11:28,840 --> 01:11:35,080
yeah let's avoid confusing people yep

1445
01:11:32,020 --> 01:11:36,460
I think we I think we will not be

1446
01:11:35,080 --> 01:11:37,570
successful in avoiding confusing people

1447
01:11:36,460 --> 01:11:41,680
because people it turns out are

1448
01:11:37,570 --> 01:11:44,920
extremely confusable but we will try ok

1449
01:11:41,680 --> 01:11:50,290
so we're done with the architecture if

1450
01:11:44,920 --> 01:11:52,060
you scrub sometimes you tell me how much

1451
01:11:50,290 --> 01:11:56,950
time do you need for your presentation

1452
01:11:52,060 --> 01:12:04,080
because we have like 20 minutes so we

1453
01:11:56,950 --> 01:12:13,330
have a lot of issues yeah

1454
01:12:04,080 --> 01:12:14,019
and almost all of them are yours that's

1455
01:12:13,330 --> 01:12:17,410
yours

1456
01:12:14,020 --> 01:12:21,280
it's closed the protocol selection that

1457
01:12:17,410 --> 01:12:31,000
is future work which we're just going to

1458
01:12:21,280 --> 01:12:35,290
go ahead and close so tell me it's still

1459
01:12:31,000 --> 01:12:49,180
waiting come on almost time in need for

1460
01:12:35,290 --> 01:12:52,480
us to descend here we're gonna skip the

1461
01:12:49,180 --> 01:12:56,980
ready for text because well Tommy I know

1462
01:12:52,480 --> 01:12:58,179
you're gonna rate text and then Jake is

1463
01:12:56,980 --> 01:12:59,290
gonna rate acts a geek you actually have

1464
01:12:58,180 --> 01:13:03,760
written some text for that you have a

1465
01:12:59,290 --> 01:13:08,980
pending PR and um grace is gonna write

1466
01:13:03,760 --> 01:13:11,080
text and write okay we've already got we

1467
01:13:08,980 --> 01:13:13,360
already talked about that one property

1468
01:13:11,080 --> 01:13:16,600
for address privacy telling me oh do you

1469
01:13:13,360 --> 01:13:20,639
want to talk about this one Tommy this

1470
01:13:16,600 --> 01:13:26,280
seems pretty straightforward

1471
01:13:20,640 --> 01:13:26,280
yes just do it this one's ready for text

1472
01:13:35,030 --> 01:13:44,150
and more expressive multipath transport

1473
01:13:38,090 --> 01:13:45,500
property so but for the private for

1474
01:13:44,150 --> 01:13:47,660
specifying my private stuff we need to

1475
01:13:45,500 --> 01:13:52,940
make sure that is visible to the

1476
01:13:47,660 --> 01:13:56,389
rendezvous stuff yeah so cuz I did that

1477
01:13:52,940 --> 01:13:58,929
with us right so a private and

1478
01:13:56,390 --> 01:14:04,340
rendezvous is gonna be difficult

1479
01:13:58,930 --> 01:14:06,350
no yeah yes yes but we look at what what

1480
01:14:04,340 --> 01:14:08,780
about si si did great okay we just need

1481
01:14:06,350 --> 01:14:10,670
to make sure it's visible so make sure

1482
01:14:08,780 --> 01:14:18,650
it's tagged with forum to view some

1483
01:14:10,670 --> 01:14:23,510
house remember this says it's ready for

1484
01:14:18,650 --> 01:14:25,519
text Tommy you put that label on it this

1485
01:14:23,510 --> 01:14:28,100
is more expressive multipath transport

1486
01:14:25,520 --> 01:14:30,790
property you're you're actually vet okay

1487
01:14:28,100 --> 01:14:30,790
cool

1488
01:14:30,940 --> 01:14:40,250
failure of unsatisfiable configurations

1489
01:14:33,980 --> 01:14:44,089
I don't agree that that's actually a

1490
01:14:40,250 --> 01:14:46,550
thing that we want to do right like so

1491
01:14:44,090 --> 01:15:01,190
yeah it it's up to the implementation

1492
01:14:46,550 --> 01:15:02,690
when it checks for so we can close it so

1493
01:15:01,190 --> 01:15:05,210
this is this is basic about specifying

1494
01:15:02,690 --> 01:15:07,490
when the system makes the choice that

1495
01:15:05,210 --> 01:15:11,300
you handed it a bunch of constraints

1496
01:15:07,490 --> 01:15:13,130
that it can't satisfy and it's you know

1497
01:15:11,300 --> 01:15:17,960
whether or not the system decides to

1498
01:15:13,130 --> 01:15:19,850
fail before or after it you initiate is

1499
01:15:17,960 --> 01:15:21,620
an implementation detail right that's

1500
01:15:19,850 --> 01:15:23,570
the PES notified the Knox long as the

1501
01:15:21,620 --> 01:15:29,120
personified the issue I also get

1502
01:15:23,570 --> 01:15:34,269
exhausted okay I agree should be closed

1503
01:15:29,120 --> 01:15:39,830
but I think there's a minor yeah clearly

1504
01:15:34,270 --> 01:15:41,870
implementations may find better like

1505
01:15:39,830 --> 01:15:43,550
interoperability across

1506
01:15:41,870 --> 01:15:46,160
applications using different systems if

1507
01:15:43,550 --> 01:15:49,010
they do have it failed later as we've

1508
01:15:46,160 --> 01:15:50,630
said here because you could imagine that

1509
01:15:49,010 --> 01:15:52,610
something that on one platform is

1510
01:15:50,630 --> 01:15:55,130
unsatisfiable condition is satisfiable

1511
01:15:52,610 --> 01:15:56,750
on other platforms and so it's kind of a

1512
01:15:55,130 --> 01:15:58,300
weird assumption to make but it doesn't

1513
01:15:56,750 --> 01:16:02,390
matter

1514
01:15:58,300 --> 01:16:03,860
yeah unsatisfiable now an unsatisfiable

1515
01:16:02,390 --> 01:16:06,940
later not necessarily the same thing

1516
01:16:03,860 --> 01:16:09,019
weighted which is we not wanting in an

1517
01:16:06,940 --> 01:16:11,629
implementation to be able to sort of

1518
01:16:09,020 --> 01:16:13,370
create a precondition hold on to it for

1519
01:16:11,630 --> 01:16:14,780
a while and then at some point later try

1520
01:16:13,370 --> 01:16:16,730
and initiates it even though it may not

1521
01:16:14,780 --> 01:16:18,110
sit well so one thing one thing that

1522
01:16:16,730 --> 01:16:19,309
might happen there two things that could

1523
01:16:18,110 --> 01:16:21,200
happen right you could end up with a

1524
01:16:19,310 --> 01:16:22,820
path that you can use a transport

1525
01:16:21,200 --> 01:16:26,480
protocol on the stack on that you

1526
01:16:22,820 --> 01:16:29,599
couldn't before or you could install a

1527
01:16:26,480 --> 01:16:32,030
loadable kernel module that gives us CTP

1528
01:16:29,600 --> 01:16:35,900
support and I think that we probably

1529
01:16:32,030 --> 01:16:37,790
want the implementation to UM handle the

1530
01:16:35,900 --> 01:16:39,110
first one gracefully and you get extra

1531
01:16:37,790 --> 01:16:41,630
credit points if you handle a second one

1532
01:16:39,110 --> 01:16:44,210
gracefully but we don't expect it and in

1533
01:16:41,630 --> 01:16:48,230
either case I think this is like this is

1534
01:16:44,210 --> 01:16:50,060
not a um this is not something that we

1535
01:16:48,230 --> 01:16:53,719
need to specify at the API level right

1536
01:16:50,060 --> 01:16:54,980
like so when the thing fails doesn't

1537
01:16:53,720 --> 01:16:56,720
need to be part of the contract the API

1538
01:16:54,980 --> 01:16:59,089
does currently specify that there were

1539
01:16:56,720 --> 01:17:00,860
two ways it can fail it can either you

1540
01:16:59,090 --> 01:17:02,330
know return an error when you try to

1541
01:17:00,860 --> 01:17:04,610
instantiate the thing right

1542
01:17:02,330 --> 01:17:07,090
I would like unreliable UDP or no but

1543
01:17:04,610 --> 01:17:09,849
that works I would like unreliable TCP

1544
01:17:07,090 --> 01:17:12,560
right that works too but it's a hack

1545
01:17:09,850 --> 01:17:14,620
right I know you built it it's awesome

1546
01:17:12,560 --> 01:17:16,880
[Laughter]

1547
01:17:14,620 --> 01:17:19,160
but we have to wait for the install the

1548
01:17:16,880 --> 01:17:25,520
loadable kernel module event to happen

1549
01:17:19,160 --> 01:17:32,780
right yeah so yeah we're moving on um

1550
01:17:25,520 --> 01:17:35,480
clarification on queued receives you

1551
01:17:32,780 --> 01:17:37,130
Tommy you were nominated to write this

1552
01:17:35,480 --> 01:17:39,290
by Michael because you probably already

1553
01:17:37,130 --> 01:17:41,530
have a solution for this because if you

1554
01:17:39,290 --> 01:17:45,230
don't then people are complaining to you

1555
01:17:41,530 --> 01:17:46,460
because it happens quite a while so so

1556
01:17:45,230 --> 01:17:48,129
in volts will assign himself and then

1557
01:17:46,460 --> 01:17:51,909
unassigned himself which is like some

1558
01:17:48,130 --> 01:17:54,280
like hey let's do this together

1559
01:17:51,909 --> 01:17:55,929
I was miss clicking and then things

1560
01:17:54,280 --> 01:17:58,659
keeping track of the history of Miss

1561
01:17:55,929 --> 01:18:00,400
clicks so this is so I think this is

1562
01:17:58,659 --> 01:18:07,119
good and I think Tommy do you know what

1563
01:18:00,400 --> 01:18:09,579
to do here yeah I I have a theory on why

1564
01:18:07,119 --> 01:18:11,438
the last comment from Max probably

1565
01:18:09,579 --> 01:18:13,570
probably is a non-issue but I think that

1566
01:18:11,439 --> 01:18:15,159
is just something to take off and settle

1567
01:18:13,570 --> 01:18:25,259
because we're almost done here we are

1568
01:18:15,159 --> 01:18:30,219
like we are getting default values yeah

1569
01:18:25,260 --> 01:18:33,489
yeah yeah default values default values

1570
01:18:30,219 --> 01:18:38,919
oh it's how much time do you want fear

1571
01:18:33,489 --> 01:18:41,110
for your thing this is very quick it

1572
01:18:38,919 --> 01:18:42,639
looks long so this is just me copying

1573
01:18:41,110 --> 01:18:45,039
everything because Corey said we should

1574
01:18:42,639 --> 01:18:46,300
talk about defaults and after looking at

1575
01:18:45,039 --> 01:18:51,400
the long list there's only one thing

1576
01:18:46,300 --> 01:18:52,510
that he took an issue with and I guess

1577
01:18:51,400 --> 01:18:54,308
that's gross it's having a short

1578
01:18:52,510 --> 01:18:57,430
discussion about oh yeah okay okay

1579
01:18:54,309 --> 01:18:59,070
everything else he was fine with

1580
01:18:57,430 --> 01:19:04,749
[Music]

1581
01:18:59,070 --> 01:19:07,659
parallel use of multiple paths default

1582
01:19:04,749 --> 01:19:11,380
prefer yeah I think do you want to

1583
01:19:07,659 --> 01:19:22,360
default ignore or default avoid I think

1584
01:19:11,380 --> 01:19:23,010
we want default ignore okay yeah so

1585
01:19:22,360 --> 01:19:24,870
there's

1586
01:19:23,010 --> 01:19:25,980
there's text here that basically makes a

1587
01:19:24,870 --> 01:19:27,230
generalization this will improve

1588
01:19:25,980 --> 01:19:31,099
performance achieving greater throughput

1589
01:19:27,230 --> 01:19:33,209
which is not supported by the research

1590
01:19:31,100 --> 01:19:34,530
it's not supported by the research in

1591
01:19:33,210 --> 01:19:36,300
situations where they were trying to

1592
01:19:34,530 --> 01:19:37,769
actually make it work on unfavorable

1593
01:19:36,300 --> 01:19:39,960
pounds and it's certainly not supported

1594
01:19:37,770 --> 01:19:41,220
by the research when one of your paths

1595
01:19:39,960 --> 01:19:48,020
that you're going to get your axe across

1596
01:19:41,220 --> 01:19:54,770
is actually a tin can so I think this is

1597
01:19:48,020 --> 01:19:54,770
default ignore does anyone disagree okay

1598
01:19:56,810 --> 01:20:02,370
so we literally are typing more text

1599
01:20:00,570 --> 01:20:04,980
we're interacting more with github than

1600
01:20:02,370 --> 01:20:12,990
we will with the editor to make this

1601
01:20:04,980 --> 01:20:17,549
happen but good yeah I'll do it I'll do

1602
01:20:12,990 --> 01:20:22,860
the easily sorry Michael I can I can I

1603
01:20:17,550 --> 01:20:24,570
can I can I can aside you a hard one you

1604
01:20:22,860 --> 01:20:33,900
know what you know what we'll do this

1605
01:20:24,570 --> 01:20:39,500
one together all right we're good hey

1606
01:20:33,900 --> 01:20:42,530
that's me like I do some stuff go back

1607
01:20:39,500 --> 01:20:42,530
go back

1608
01:20:43,160 --> 01:20:48,269
we're down to ten minutes and we've

1609
01:20:45,270 --> 01:20:50,660
actually finished the the architecture

1610
01:20:48,270 --> 01:20:53,250
and API scrubs and I think that's a

1611
01:20:50,660 --> 01:20:56,340
that's a pretty good I feel pretty good

1612
01:20:53,250 --> 01:20:58,400
about that achievement all right thanks

1613
01:20:56,340 --> 01:20:58,400
a lot

1614
01:21:23,810 --> 01:21:30,650
so in our last 10 minutes just going

1615
01:21:26,330 --> 01:21:31,820
over the implementation document so I

1616
01:21:30,650 --> 01:21:33,889
will want to go through some of the

1617
01:21:31,820 --> 01:21:36,049
issues but first I do want to refresh

1618
01:21:33,890 --> 01:21:37,400
people on what we're doing here because

1619
01:21:36,050 --> 01:21:41,300
we actually have gotten a fair amount

1620
01:21:37,400 --> 01:21:43,040
done in the recent a couple months and I

1621
01:21:41,300 --> 01:21:44,360
think it's the right direction and so it

1622
01:21:43,040 --> 01:21:45,830
should make us a little bit more

1623
01:21:44,360 --> 01:21:49,929
optimistic about actually getting this

1624
01:21:45,830 --> 01:21:49,930
document done in our aggressive schedule

1625
01:21:50,380 --> 01:22:02,930
yeah so recent changes we updated the

1626
01:21:57,650 --> 01:22:05,299
terminology for our API mappings this is

1627
01:22:02,930 --> 01:22:07,370
mainly thanks to Michael for going

1628
01:22:05,300 --> 01:22:09,920
through and using kind of the official

1629
01:22:07,370 --> 01:22:11,450
names that we came up with for what are

1630
01:22:09,920 --> 01:22:13,070
the transport features and actually

1631
01:22:11,450 --> 01:22:15,290
saying hey by the way remember these

1632
01:22:13,070 --> 01:22:17,660
other documents we did so all of this

1633
01:22:15,290 --> 01:22:19,610
taps API actually uses those mappings

1634
01:22:17,660 --> 01:22:22,400
and defines those so I think that was a

1635
01:22:19,610 --> 01:22:25,309
really strengthening thing it shows that

1636
01:22:22,400 --> 01:22:26,990
we actually learned something so whoo we

1637
01:22:25,310 --> 01:22:28,700
also added text for defining our

1638
01:22:26,990 --> 01:22:31,099
mappings for SCTP so again thank you

1639
01:22:28,700 --> 01:22:33,920
very much for writing that and then we

1640
01:22:31,100 --> 01:22:35,690
also scrubbed the terminology to make

1641
01:22:33,920 --> 01:22:37,910
sure it matches what API has become I

1642
01:22:35,690 --> 01:22:39,650
think a lot of what's going to remain

1643
01:22:37,910 --> 01:22:41,300
for this document is that type of work

1644
01:22:39,650 --> 01:22:45,889
of just aligning it with the others and

1645
01:22:41,300 --> 01:22:49,190
making sure that it's cohesive set so we

1646
01:22:45,890 --> 01:22:50,570
also got some error reasons appendix

1647
01:22:49,190 --> 01:22:51,320
that was I think for max so thank you

1648
01:22:50,570 --> 01:22:54,710
for doing that

1649
01:22:51,320 --> 01:22:57,290
I moved the message framer over from API

1650
01:22:54,710 --> 01:23:00,850
into implementation so that's where we

1651
01:22:57,290 --> 01:23:04,460
stuff our start TLS hacks so that's good

1652
01:23:00,850 --> 01:23:06,200
we have I think it was from Phillip we

1653
01:23:04,460 --> 01:23:09,110
got some text around pooled connections

1654
01:23:06,200 --> 01:23:11,420
and then we have a start on referencing

1655
01:23:09,110 --> 01:23:13,070
existing implementations I think we want

1656
01:23:11,420 --> 01:23:14,870
to fill that a little bit more but

1657
01:23:13,070 --> 01:23:17,420
essentially say this is where we got

1658
01:23:14,870 --> 01:23:19,580
this background from I think that is

1659
01:23:17,420 --> 01:23:22,550
appropriate for this document and it

1660
01:23:19,580 --> 01:23:23,809
will just want so essentially anyone who

1661
01:23:22,550 --> 01:23:25,430
has been working on this I know we have

1662
01:23:23,810 --> 01:23:30,490
PI taps we have our implementation we

1663
01:23:25,430 --> 01:23:32,780
have the work that was done in neat

1664
01:23:30,490 --> 01:23:34,099
exactly and I don't know if there's

1665
01:23:32,780 --> 01:23:36,620
other work that we want to highlight

1666
01:23:34,100 --> 01:23:37,220
from the post sockets efforts when Brian

1667
01:23:36,620 --> 01:23:40,040
and

1668
01:23:37,220 --> 01:23:42,140
you're doing with students but anything

1669
01:23:40,040 --> 01:23:47,269
there that we want to add in please do

1670
01:23:42,140 --> 01:23:49,430
that in the next couple months yes how

1671
01:23:47,270 --> 01:23:51,020
would you see that added I mean what do

1672
01:23:49,430 --> 01:23:53,450
you use thinking of so there is a

1673
01:23:51,020 --> 01:23:55,370
section that was added in there that

1674
01:23:53,450 --> 01:23:57,710
kind of lists the implementations and I

1675
01:23:55,370 --> 01:23:59,750
think just kind of saying yeah this is

1676
01:23:57,710 --> 01:24:02,660
the work they did this is the scope of

1677
01:23:59,750 --> 01:24:06,250
the types of racing they did how they

1678
01:24:02,660 --> 01:24:08,870
expose the API of useful so read

1679
01:24:06,250 --> 01:24:11,150
implementation other paragraph or

1680
01:24:08,870 --> 01:24:15,290
something to that blob yes fill out that

1681
01:24:11,150 --> 01:24:17,330
blog that'd be great thank you so I

1682
01:24:15,290 --> 01:24:20,450
wanted to just kind of get a slide out

1683
01:24:17,330 --> 01:24:22,490
here and you can you know we can go

1684
01:24:20,450 --> 01:24:26,150
offline and do this but just when you

1685
01:24:22,490 --> 01:24:28,250
zoom out to just the kind of outline of

1686
01:24:26,150 --> 01:24:31,099
the document of what we're doing the

1687
01:24:28,250 --> 01:24:32,720
goal is to be very parallel to the lists

1688
01:24:31,100 --> 01:24:35,750
of things that we have in architecture

1689
01:24:32,720 --> 01:24:37,700
and an API and just saying here's how

1690
01:24:35,750 --> 01:24:39,800
you implement these things and let's get

1691
01:24:37,700 --> 01:24:42,769
into the nitty-gritty of it so we have

1692
01:24:39,800 --> 01:24:44,270
you know what are these objects how do

1693
01:24:42,770 --> 01:24:45,500
we do connection establishment I think

1694
01:24:44,270 --> 01:24:47,480
this is the biggest section with all the

1695
01:24:45,500 --> 01:24:50,140
racing work we have sending/receiving

1696
01:24:47,480 --> 01:24:51,709
data that includes frame we're now

1697
01:24:50,140 --> 01:24:54,830
connection management connection

1698
01:24:51,710 --> 01:24:57,710
termination caching and then that last

1699
01:24:54,830 --> 01:24:59,750
section is the specific transport

1700
01:24:57,710 --> 01:25:01,040
protocols and this is where we go and we

1701
01:24:59,750 --> 01:25:03,380
use the formal mappings that we've

1702
01:25:01,040 --> 01:25:05,720
defined previously in taps say and

1703
01:25:03,380 --> 01:25:08,480
here's how these things all play out

1704
01:25:05,720 --> 01:25:09,830
we just we discuss different ways of

1705
01:25:08,480 --> 01:25:11,480
doing it of scattering those mappings

1706
01:25:09,830 --> 01:25:13,760
throughout the document or having them

1707
01:25:11,480 --> 01:25:15,620
all aggregated in one place and what we

1708
01:25:13,760 --> 01:25:17,300
ended up with is deciding that we want

1709
01:25:15,620 --> 01:25:20,780
them in one place so that if someone is

1710
01:25:17,300 --> 01:25:22,280
going and implementing TCP in their taps

1711
01:25:20,780 --> 01:25:23,750
implementation they can see I here's how

1712
01:25:22,280 --> 01:25:26,240
I do that one they can focus on that

1713
01:25:23,750 --> 01:25:30,740
protocol if you have other opinions

1714
01:25:26,240 --> 01:25:32,150
please write an issue speak up John

1715
01:25:30,740 --> 01:25:34,010
thanks my only concern is that this is

1716
01:25:32,150 --> 01:25:38,480
an informational document and that field

1717
01:25:34,010 --> 01:25:40,269
that part feels normative to me yeah

1718
01:25:38,480 --> 01:25:46,239
mappings

1719
01:25:40,269 --> 01:25:49,360
okay it's interesting point I I'm not

1720
01:25:46,239 --> 01:25:51,730
sure how normative we can get with the

1721
01:25:49,360 --> 01:25:52,960
mappings because the different

1722
01:25:51,730 --> 01:25:59,289
implementations could choose to

1723
01:25:52,960 --> 01:26:02,380
interpret things differently that could

1724
01:25:59,289 --> 01:26:04,989
be work that we want to do in future

1725
01:26:02,380 --> 01:26:06,670
documents of trying to have like again

1726
01:26:04,989 --> 01:26:08,829
interoperable yang models are these

1727
01:26:06,670 --> 01:26:10,539
things yeah Gauri first I think I think

1728
01:26:08,829 --> 01:26:12,880
the mappings are more UPS they're still

1729
01:26:10,539 --> 01:26:16,170
abstract they're not concrete so yeah it

1730
01:26:12,880 --> 01:26:19,989
makes it not normative to me okay

1731
01:26:16,170 --> 01:26:22,780
Michael also +1 I mean it's just a

1732
01:26:19,989 --> 01:26:24,459
reference back to the RFC that has two

1733
01:26:22,780 --> 01:26:27,179
functionality to say you could use that

1734
01:26:24,460 --> 01:26:30,630
to implement that okay so it's it's

1735
01:26:27,179 --> 01:26:32,860
explaining something more Jonathan jorah

1736
01:26:30,630 --> 01:26:35,170
yeah I mean I sort of disagree because I

1737
01:26:32,860 --> 01:26:36,820
mean the fact that you know clone on TCP

1738
01:26:35,170 --> 01:26:39,369
means open a new connection or as clone

1739
01:26:36,820 --> 01:26:42,249
on messy tv-channel means a new channel

1740
01:26:39,369 --> 01:26:45,179
and not a new connection is kind of

1741
01:26:42,249 --> 01:26:48,130
fundamental you know that if you

1742
01:26:45,179 --> 01:26:51,789
disagree on what those things mean then

1743
01:26:48,130 --> 01:26:53,889
they're you know not doing this they're

1744
01:26:51,789 --> 01:26:55,389
not doing the same thing and as an

1745
01:26:53,889 --> 01:26:58,030
implementer I need to know what happens

1746
01:26:55,389 --> 01:27:00,579
when I call these KPIs or otherwise

1747
01:26:58,030 --> 01:27:02,320
they're just you know don't mean

1748
01:27:00,579 --> 01:27:04,049
anything yeah I get that point that

1749
01:27:02,320 --> 01:27:08,699
makes sense

1750
01:27:04,050 --> 01:27:12,579
Brian did you want to comment on that um

1751
01:27:08,699 --> 01:27:15,280
so I kind of like the fact that the

1752
01:27:12,579 --> 01:27:19,329
implementation draft is informational I

1753
01:27:15,280 --> 01:27:22,409
do too like I like it a lot and I think

1754
01:27:19,329 --> 01:27:25,058
that what we've bubbled up here is

1755
01:27:22,409 --> 01:27:27,969
something that needs to come back we did

1756
01:27:25,059 --> 01:27:29,679
such a good job of closing all the API

1757
01:27:27,969 --> 01:27:33,210
issues but I think this might be an API

1758
01:27:29,679 --> 01:27:35,650
issue that we essentially say hey look

1759
01:27:33,210 --> 01:27:38,980
certain transport protocol stacks have

1760
01:27:35,650 --> 01:27:40,119
this feature and this clone thing I

1761
01:27:38,980 --> 01:27:42,579
think we need to kind of bind it a

1762
01:27:40,119 --> 01:27:45,610
little bit more tightly because because

1763
01:27:42,579 --> 01:27:48,280
Jonathan's right but I don't want to do

1764
01:27:45,610 --> 01:27:50,289
it here the other option we have because

1765
01:27:48,280 --> 01:27:52,809
I'm not sure if it's really API as well

1766
01:27:50,289 --> 01:27:53,800
is to split them out and we've talked

1767
01:27:52,809 --> 01:27:57,400
about this before

1768
01:27:53,800 --> 01:27:59,680
of saying these mappings of taps

1769
01:27:57,400 --> 01:28:02,080
interfaces to specific protocols that

1770
01:27:59,680 --> 01:28:05,950
we've defined elsewhere are separate

1771
01:28:02,080 --> 01:28:07,500
documents okay and it's almost like a

1772
01:28:05,950 --> 01:28:10,420
registry of it yeah

1773
01:28:07,500 --> 01:28:12,490
and those normative and we essentially

1774
01:28:10,420 --> 01:28:14,710
just split this chunk out of the

1775
01:28:12,490 --> 01:28:16,120
document and we I like that let the core

1776
01:28:14,710 --> 01:28:17,710
three documents go and then we

1777
01:28:16,120 --> 01:28:19,330
potentially talk about yeah bringing in

1778
01:28:17,710 --> 01:28:21,400
Jess Cove of the Charter yeah damn

1779
01:28:19,330 --> 01:28:23,530
formal mappings and then it allows us to

1780
01:28:21,400 --> 01:28:24,849
have a template on which we can do

1781
01:28:23,530 --> 01:28:27,700
formal mappings for quick as it

1782
01:28:24,850 --> 01:28:30,430
continues to evolve yeah I like that a

1783
01:28:27,700 --> 01:28:35,050
lot so we may want to open an issue to

1784
01:28:30,430 --> 01:28:37,000
kind of D scope texture so let's let's

1785
01:28:35,050 --> 01:28:38,080
take that to the list of what I think

1786
01:28:37,000 --> 01:28:39,340
needs to be a little bit more discussion

1787
01:28:38,080 --> 01:28:43,720
about that because it's like hey another

1788
01:28:39,340 --> 01:28:44,980
document but yeah okay great so the

1789
01:28:43,720 --> 01:28:48,310
conclusion is like you were gonna check

1790
01:28:44,980 --> 01:28:51,400
on the yeah I think we want to have an

1791
01:28:48,310 --> 01:28:54,610
issue and also a thread about it yeah

1792
01:28:51,400 --> 01:28:56,139
one common and it's a I hear a lot of

1793
01:28:54,610 --> 01:28:58,089
people saying already like taps so

1794
01:28:56,140 --> 01:28:59,560
complicated and like that the reason why

1795
01:28:58,090 --> 01:29:01,240
I don't want to use it right and taking

1796
01:28:59,560 --> 01:29:03,730
the more concrete stuff out of here and

1797
01:29:01,240 --> 01:29:06,519
delaying it further might actually give

1798
01:29:03,730 --> 01:29:09,370
the wrong impression so I think that we

1799
01:29:06,520 --> 01:29:12,910
should have this discussion all the

1800
01:29:09,370 --> 01:29:15,760
lists there's more time doing yours yeah

1801
01:29:12,910 --> 01:29:18,160
so I just wanted to highlight what we do

1802
01:29:15,760 --> 01:29:21,100
have is issues right now some of these

1803
01:29:18,160 --> 01:29:22,930
are cross listed so we already have the

1804
01:29:21,100 --> 01:29:25,210
PO crest for multicast stuff that's

1805
01:29:22,930 --> 01:29:27,070
great this is the issue just to finish

1806
01:29:25,210 --> 01:29:28,810
filling out the implementations where I

1807
01:29:27,070 --> 01:29:31,290
talked about that so please do that this

1808
01:29:28,810 --> 01:29:33,370
is going to require all of us to help

1809
01:29:31,290 --> 01:29:36,430
structure is essentially what we just

1810
01:29:33,370 --> 01:29:39,990
discussed and I think this is the kind

1811
01:29:36,430 --> 01:29:41,830
of the one niggly bit that's left open

1812
01:29:39,990 --> 01:29:44,380
we're working on the privacy

1813
01:29:41,830 --> 01:29:46,269
considerations like the one last one we

1814
01:29:44,380 --> 01:29:51,010
want to highlight is kind of this

1815
01:29:46,270 --> 01:29:56,610
proxying stuff we had mentioned that you

1816
01:29:51,010 --> 01:29:56,610
yeah we you still have 30 seconds left

1817
01:29:56,910 --> 01:30:04,420
so we have yeah thank you thank you so

1818
01:30:01,690 --> 01:30:06,370
we do have the issue around specifying

1819
01:30:04,420 --> 01:30:07,840
how much we do proxies we do have this I

1820
01:30:06,370 --> 01:30:13,559
think we

1821
01:30:07,840 --> 01:30:15,880
close this at this point but I tom was a

1822
01:30:13,560 --> 01:30:20,730
sign I think he talked about doing stuff

1823
01:30:15,880 --> 01:30:20,730
on this I I don't think he's here or

1824
01:30:21,090 --> 01:30:27,160
yeah so he'd been assigned to help look

1825
01:30:25,210 --> 01:30:28,510
at some stuff about we essentially do

1826
01:30:27,160 --> 01:30:29,860
have text about what you do with proxies

1827
01:30:28,510 --> 01:30:31,390
we don't have any text about what you

1828
01:30:29,860 --> 01:30:34,690
would do with tor but I think we can

1829
01:30:31,390 --> 01:30:35,830
leave that out okay great so let's close

1830
01:30:34,690 --> 01:30:37,900
that that's the one I wanted to get

1831
01:30:35,830 --> 01:30:40,600
confirmation we can close boom done

1832
01:30:37,900 --> 01:30:42,429
all right so I think the main thing out

1833
01:30:40,600 --> 01:30:45,280
of this is we should have a good

1834
01:30:42,430 --> 01:30:51,130
discussion on the list about the

1835
01:30:45,280 --> 01:30:54,340
concrete mappings yes so the time that

1836
01:30:51,130 --> 01:30:55,570
we've arranged is Friday morning like

1837
01:30:54,340 --> 01:31:08,590
essentially the site meeting session

1838
01:30:55,570 --> 01:31:16,929
time like the 8:30 to 10:00 on Friday we

1839
01:31:08,590 --> 01:31:23,260
can try to get a yeah yeah I could even

1840
01:31:16,930 --> 01:31:30,610
can I open my new issue so we don't have

1841
01:31:23,260 --> 01:31:34,000
time this opening like when while I was

1842
01:31:30,610 --> 01:31:39,370
reading transports right I notice a very

1843
01:31:34,000 --> 01:31:43,590
little about is yeah do we need to say

1844
01:31:39,370 --> 01:31:43,590
more about this should I put an issue in

1845
01:31:44,040 --> 01:31:51,640
please file an issue on TLS repo I mean

1846
01:31:49,480 --> 01:31:53,169
no this is complicated I mean you were

1847
01:31:51,640 --> 01:31:59,310
you're in quick this morning this is

1848
01:31:53,170 --> 01:32:04,600
complicated this can be this is a

1849
01:31:59,310 --> 01:32:08,080
transport a specific option that you

1850
01:32:04,600 --> 01:32:10,780
want to use potentially so the problem

1851
01:32:08,080 --> 01:32:13,840
the problem is is that a LPN is a stock

1852
01:32:10,780 --> 01:32:15,849
identifier that the stewards of LPN do

1853
01:32:13,840 --> 01:32:19,030
not understand is a stock identifier and

1854
01:32:15,850 --> 01:32:20,650
will probably violently resist I'm just

1855
01:32:19,030 --> 01:32:21,349
you're the closest thing we have a

1856
01:32:20,650 --> 01:32:24,769
security guy

1857
01:32:21,350 --> 01:32:26,240
right so it's your fault and I get the

1858
01:32:24,770 --> 01:32:28,570
sense they will violently resist being

1859
01:32:26,240 --> 01:32:30,740
told that even though it's true so

1860
01:32:28,570 --> 01:32:32,480
that's a bigger Longer

1861
01:32:30,740 --> 01:32:36,200
uglier discussion we can file an issue

1862
01:32:32,480 --> 01:32:37,610
on our issue what's our answer for

1863
01:32:36,200 --> 01:32:39,769
people who say like I want to use tests

1864
01:32:37,610 --> 01:32:43,700
and I want to use Le PN and I need an

1865
01:32:39,770 --> 01:32:46,130
interface for it what's the answer so if

1866
01:32:43,700 --> 01:32:47,570
we look at the way that we have it in

1867
01:32:46,130 --> 01:32:50,120
our implementation I think with the

1868
01:32:47,570 --> 01:32:51,230
others you have a protocol specific

1869
01:32:50,120 --> 01:32:54,590
option that when you configure the

1870
01:32:51,230 --> 01:32:56,919
protocol TLS you configure a Opa Opa and

1871
01:32:54,590 --> 01:32:59,090
is defined only for the scope of TLS and

1872
01:32:56,920 --> 01:33:01,820
none of our API or architectural

1873
01:32:59,090 --> 01:33:03,440
documents give like saying this is API

1874
01:33:01,820 --> 01:33:04,790
that exists only for this specific

1875
01:33:03,440 --> 01:33:06,200
protocol and the architecture

1876
01:33:04,790 --> 01:33:07,610
specifically says like that's not a

1877
01:33:06,200 --> 01:33:10,070
thing that you do in the generic apps

1878
01:33:07,610 --> 01:33:14,299
interface that belongs to the protocol

1879
01:33:10,070 --> 01:33:17,000
specific options the implementation Jeff

1880
01:33:14,300 --> 01:33:18,770
could maybe mention it but we don't go

1881
01:33:17,000 --> 01:33:21,560
into the details of TLS mappings there

1882
01:33:18,770 --> 01:33:23,510
so maybe this is another document maybe

1883
01:33:21,560 --> 01:33:25,250
we have in our split off normative

1884
01:33:23,510 --> 01:33:28,220
documents about how you map TLS you say

1885
01:33:25,250 --> 01:33:30,470
you offer this option one so one thing

1886
01:33:28,220 --> 01:33:32,810
we could do maybe to solve it is to use

1887
01:33:30,470 --> 01:33:36,080
that as an example because we have some

1888
01:33:32,810 --> 01:33:41,060
examples and then it would be clear to

1889
01:33:36,080 --> 01:33:43,640
anyone reading it I think that would be

1890
01:33:41,060 --> 01:33:48,110
great I'm still asking should I open an

1891
01:33:43,640 --> 01:33:51,860
issue yes that's the minute show me

1892
01:33:48,110 --> 01:33:53,830
Ria's gonna open an issue thank you to

1893
01:33:51,860 --> 01:33:57,830
our minute takers who worked overtime

1894
01:33:53,830 --> 01:33:59,720
thank you and of folks who want to

1895
01:33:57,830 --> 01:34:01,640
participate in the discussion further

1896
01:33:59,720 --> 01:34:15,770
which will show up Friday morning at

1897
01:34:01,640 --> 01:34:17,360
8:30 and the room to be revealed and I

1898
01:34:15,770 --> 01:34:19,280
was here to sit in and see what's going

1899
01:34:17,360 --> 01:34:22,269
on in this transfer area stuff which I

1900
01:34:19,280 --> 01:34:22,269
don't know anything about and

