1
00:00:04,560 --> 00:00:38,190
Oh things will slow down they tell me

2
00:00:13,879 --> 00:00:41,490
okay 2:6 man this is the first of two

3
00:00:38,190 --> 00:00:43,559
six-man sessions today and we will have

4
00:00:41,490 --> 00:00:47,280
a break so you can go to Internet area

5
00:00:43,560 --> 00:00:50,370
in between and I hope you appreciate we

6
00:00:47,280 --> 00:00:53,430
arrange for a room with that's not

7
00:00:50,370 --> 00:01:04,559
freezing so who knows it may get too hot

8
00:00:53,430 --> 00:01:06,420
but we'll see okay next yes there we go

9
00:01:04,559 --> 00:01:16,289
and I hope you appreciate all these

10
00:01:06,420 --> 00:01:19,950
slide here so here's the the note well

11
00:01:16,289 --> 00:01:23,819
I'm sure you all have had this tattooed

12
00:01:19,950 --> 00:01:29,520
on your arm already so we will all do

13
00:01:23,819 --> 00:01:32,329
this we have a jabber room there is meet

14
00:01:29,520 --> 00:01:37,920
echo etherpad

15
00:01:32,329 --> 00:01:41,818
Barbara is taking minutes and hang

16
00:01:37,920 --> 00:01:45,270
trooping is the jabber scribe thank you

17
00:01:41,819 --> 00:01:47,219
very much we really appreciate that we

18
00:01:45,270 --> 00:01:48,920
try really hard to get people lined up

19
00:01:47,219 --> 00:01:51,449
to do it before the meeting starts

20
00:01:48,920 --> 00:01:53,369
there's all the presentations are

21
00:01:51,450 --> 00:01:59,399
uploaded and the blue sheets are being

22
00:01:53,369 --> 00:02:03,090
circulated so for today's agenda

23
00:01:59,399 --> 00:02:07,109
we have three working group drafts to

24
00:02:03,090 --> 00:02:11,940
discuss our working group eight items

25
00:02:07,109 --> 00:02:16,820
the fragmentation and RC 8200 the path

26
00:02:11,940 --> 00:02:20,720
MTU hop-by-hop option the

27
00:02:16,820 --> 00:02:24,260
Oh a.m. segment routing draft and then

28
00:02:20,720 --> 00:02:26,390
we have three individual drafts active

29
00:02:24,260 --> 00:02:29,480
individual drafts being discussed and

30
00:02:26,390 --> 00:02:33,019
then if we have time we have two new

31
00:02:29,480 --> 00:02:35,780
individual drafts these may if we run

32
00:02:33,020 --> 00:02:38,750
over these will get moved to the second

33
00:02:35,780 --> 00:02:43,120
session at the end and then in the

34
00:02:38,750 --> 00:02:47,540
second session we have two drafts

35
00:02:43,120 --> 00:02:50,000
relating to header insertion and what

36
00:02:47,540 --> 00:02:52,549
we're would like to do for that we'll

37
00:02:50,000 --> 00:02:55,580
talk about this at that beginning of the

38
00:02:52,550 --> 00:02:58,310
session but have both of the speakers do

39
00:02:55,580 --> 00:02:59,840
their presentations if people should ask

40
00:02:58,310 --> 00:03:01,730
clarifying questions and then we're

41
00:02:59,840 --> 00:03:04,100
going to try to have a discussion where

42
00:03:01,730 --> 00:03:07,100
both speakers are in the front of the

43
00:03:04,100 --> 00:03:09,920
room they don't this the first time

44
00:03:07,100 --> 00:03:12,530
they're hearing this too so so we're

45
00:03:09,920 --> 00:03:14,450
hoping that will be a good people can

46
00:03:12,530 --> 00:03:23,000
ask questions and they can both answers

47
00:03:14,450 --> 00:03:27,109
they are interrelated okay right so they

48
00:03:23,000 --> 00:03:29,480
were back on to document status we have

49
00:03:27,110 --> 00:03:32,330
not published any RFC since the last

50
00:03:29,480 --> 00:03:34,730
meeting we have finally gotten the

51
00:03:32,330 --> 00:03:36,380
segment routing document into the RFC

52
00:03:34,730 --> 00:03:43,040
editor queue so that you'll probably get

53
00:03:36,380 --> 00:03:45,799
a number very soon I'm sure there are

54
00:03:43,040 --> 00:03:48,200
other SR documents in the pipeline so

55
00:03:45,800 --> 00:03:51,220
you know you might not clap ourselves on

56
00:03:48,200 --> 00:03:51,220
the back too early

57
00:03:51,430 --> 00:03:56,060
all right yes the IANA

58
00:03:53,600 --> 00:04:01,160
allocation for that document is done so

59
00:03:56,060 --> 00:04:03,320
so yes run out and implement the ICMP

60
00:04:01,160 --> 00:04:07,490
error document is submitted to the isg

61
00:04:03,320 --> 00:04:08,870
the ITF sorry their prep 64 you know not

62
00:04:07,490 --> 00:04:13,000
six for prefixes in reach or

63
00:04:08,870 --> 00:04:13,000
advertisements that's in ITF last call

64
00:04:13,540 --> 00:04:19,730
we have run through a few reviews on the

65
00:04:17,839 --> 00:04:23,869
privacy extensions for for slack

66
00:04:19,730 --> 00:04:26,810
document that is not only agenda for

67
00:04:23,870 --> 00:04:29,510
today but I expect we will work in group

68
00:04:26,810 --> 00:04:31,430
last call that very soon after this

69
00:04:29,510 --> 00:04:33,170
meeting

70
00:04:31,430 --> 00:04:37,880
the minimum path name to you hope I hope

71
00:04:33,170 --> 00:04:39,890
option document is on the agenda so it's

72
00:04:37,880 --> 00:04:41,060
do I am document for four segments

73
00:04:39,890 --> 00:04:45,349
routing so we'll talk about those

74
00:04:41,060 --> 00:04:51,380
afterwards yeah so that's the document

75
00:04:45,350 --> 00:04:53,120
status any comments on those then I just

76
00:04:51,380 --> 00:04:55,909
wanted to remind you that the document

77
00:04:53,120 --> 00:04:59,420
process has changed here's the links to

78
00:04:55,910 --> 00:05:02,210
the you know both the format FAQ and the

79
00:04:59,420 --> 00:05:05,630
XML to RFC tool updates new vocabulary

80
00:05:02,210 --> 00:05:08,330
there's a neat tool to use to convert

81
00:05:05,630 --> 00:05:10,670
from v2 to v3 so I think you know from

82
00:05:08,330 --> 00:05:13,880
now on we expect documents to be v3

83
00:05:10,670 --> 00:05:16,250
coming out to this working group I also

84
00:05:13,880 --> 00:05:17,870
feel free to use the github we have so

85
00:05:16,250 --> 00:05:22,270
we can do pull requests for changes and

86
00:05:17,870 --> 00:05:24,350
don't have to discuss you know a small

87
00:05:22,270 --> 00:05:25,849
editorial changes you know on the

88
00:05:24,350 --> 00:05:27,830
mailing list it's it's a bit more

89
00:05:25,850 --> 00:05:30,970
efficient to use modern tool for that

90
00:05:27,830 --> 00:05:34,010
that's up to people what I want to use

91
00:05:30,970 --> 00:05:36,170
okay so I think that was it I think give

92
00:05:34,010 --> 00:05:49,219
Bob you are up here's the clicker please

93
00:05:36,170 --> 00:05:50,810
stand in the pink box great thank you

94
00:05:49,220 --> 00:05:55,310
now you just saw all the slides I can

95
00:05:50,810 --> 00:05:57,590
stop so this is the next step in the the

96
00:05:55,310 --> 00:06:01,820
errata the fragmentation errata that was

97
00:05:57,590 --> 00:06:03,650
reported against RC 8200 just to

98
00:06:01,820 --> 00:06:05,710
background slides he's the same as last

99
00:06:03,650 --> 00:06:09,560
time

100
00:06:05,710 --> 00:06:13,520
8200 included a number of updates in for

101
00:06:09,560 --> 00:06:15,890
RFC's this required extensive changes to

102
00:06:13,520 --> 00:06:19,669
the fragmentation text in section 4.5

103
00:06:15,890 --> 00:06:24,830
and subsequent to 8200 being published a

104
00:06:19,670 --> 00:06:26,960
number of errata were filed the general

105
00:06:24,830 --> 00:06:29,479
problem is that the fragment offset to

106
00:06:26,960 --> 00:06:31,190
find is said it was pointing to

107
00:06:29,480 --> 00:06:33,380
fragmental part where it should have

108
00:06:31,190 --> 00:06:36,890
been pointing to extension and upper

109
00:06:33,380 --> 00:06:42,610
layer layer headers text needs to change

110
00:06:36,890 --> 00:06:42,610
in four places the figures and

111
00:06:42,630 --> 00:06:51,719
the proposals in the errata proposed

112
00:06:45,750 --> 00:06:55,200
other changes as we have talked about as

113
00:06:51,720 --> 00:06:57,150
we have talked about figured out a I

114
00:06:55,200 --> 00:06:59,219
think a better way to address these

115
00:06:57,150 --> 00:07:03,150
errata than what was proposed in the

116
00:06:59,220 --> 00:07:06,090
errata and then there was also 5173 and

117
00:07:03,150 --> 00:07:08,039
with what we're proposing to do this is

118
00:07:06,090 --> 00:07:09,750
sort of not even an issue because this

119
00:07:08,040 --> 00:07:11,610
figure changes in a way that this

120
00:07:09,750 --> 00:07:20,610
doesn't isn't relevant anymore

121
00:07:11,610 --> 00:07:24,600
so the weave at the last ITF we proposed

122
00:07:20,610 --> 00:07:27,360
the new text it's was discussed this has

123
00:07:24,600 --> 00:07:29,250
been discussed on the mailing list and I

124
00:07:27,360 --> 00:07:32,550
think there was I take there was general

125
00:07:29,250 --> 00:07:36,120
agreement on the changes with one

126
00:07:32,550 --> 00:07:37,860
edition changing subsection 4 from the

127
00:07:36,120 --> 00:07:39,600
first fragment to the remainder of the

128
00:07:37,860 --> 00:07:43,230
first fragment you'll see this in a

129
00:07:39,600 --> 00:07:46,590
minute in context so I think we're in

130
00:07:43,230 --> 00:07:52,340
good shape so I'm going to do two things

131
00:07:46,590 --> 00:07:54,869
here so this is you know the HTML diff

132
00:07:52,340 --> 00:07:57,299
so you can see on the left is the old

133
00:07:54,870 --> 00:07:59,490
and the right it's a I think it's a

134
00:07:57,300 --> 00:08:01,740
little hard to follow because like in

135
00:07:59,490 --> 00:08:03,510
this one there's a paragraph that looks

136
00:08:01,740 --> 00:08:06,150
like it's deleted but it's actually

137
00:08:03,510 --> 00:08:08,460
moved later where it makes more sense so

138
00:08:06,150 --> 00:08:11,219
I'm going to go through these very well

139
00:08:08,460 --> 00:08:15,590
you can see them and they're online very

140
00:08:11,220 --> 00:08:15,590
quickly or you can run your own whoops

141
00:08:15,830 --> 00:08:22,530
and you know there's a lot of changes to

142
00:08:19,350 --> 00:08:26,100
the figures there's a few this is where

143
00:08:22,530 --> 00:08:27,840
the that paragraph gets inserted and

144
00:08:26,100 --> 00:08:29,310
then you can see the other number for

145
00:08:27,840 --> 00:08:33,510
change the remainder or the first

146
00:08:29,310 --> 00:08:36,479
fragment and then some other changes the

147
00:08:33,510 --> 00:08:39,919
figures so it it's not a lot of changes

148
00:08:36,479 --> 00:08:43,380
but they are important so what I did was

149
00:08:39,919 --> 00:08:46,050
create my own diff for the presentation

150
00:08:43,380 --> 00:08:47,880
it's a lot of slides but I think it's a

151
00:08:46,050 --> 00:08:50,699
clearer way to see what the changes are

152
00:08:47,880 --> 00:08:53,040
and also to see what's not changing so

153
00:08:50,700 --> 00:08:55,560
many of these are look just like this

154
00:08:53,040 --> 00:09:00,300
where there is no change

155
00:08:55,560 --> 00:09:03,949
the next one or this one there we go so

156
00:09:00,300 --> 00:09:07,290
this this is the change to this figure

157
00:09:03,950 --> 00:09:09,899
where we're instead of showing extension

158
00:09:07,290 --> 00:09:12,300
and upper layer headers in the in the

159
00:09:09,899 --> 00:09:15,120
examples it's now just talked about in

160
00:09:12,300 --> 00:09:18,829
the text and the text says as it always

161
00:09:15,120 --> 00:09:21,390
did the first fragment includes the the

162
00:09:18,830 --> 00:09:22,709
extensions at upper layer headers so as

163
00:09:21,390 --> 00:09:24,510
opposed to trying to do it in the

164
00:09:22,709 --> 00:09:26,939
figures and I think this makes this much

165
00:09:24,510 --> 00:09:28,680
clearer and then there's that you can

166
00:09:26,940 --> 00:09:33,779
see the paragraph that's getting moved

167
00:09:28,680 --> 00:09:38,719
later and then this this paragraph is

168
00:09:33,779 --> 00:09:44,339
rewritten I think I did this correctly

169
00:09:38,720 --> 00:09:46,970
and then there's another figure change

170
00:09:44,339 --> 00:09:49,350
the same sort of thing not putting

171
00:09:46,970 --> 00:09:53,070
extension and upper layer headers in the

172
00:09:49,350 --> 00:09:58,760
in the figure just you know they're just

173
00:09:53,070 --> 00:10:02,610
part of the first fragment and same here

174
00:09:58,760 --> 00:10:04,920
and and this is where the that other

175
00:10:02,610 --> 00:10:06,660
paragraph goes where it makes a lot of

176
00:10:04,920 --> 00:10:09,360
sense because it's the paragraph about

177
00:10:06,660 --> 00:10:12,540
extension headers but the paragraph

178
00:10:09,360 --> 00:10:15,360
itself did not change and then here's

179
00:10:12,540 --> 00:10:19,079
the remainder of the first fragment and

180
00:10:15,360 --> 00:10:24,060
this page this didn't change and here's

181
00:10:19,080 --> 00:10:26,100
another example of the not calling at

182
00:10:24,060 --> 00:10:29,790
all this detail in the figures which

183
00:10:26,100 --> 00:10:33,510
created other problems and this didn't

184
00:10:29,790 --> 00:10:36,660
change and this didn't change and this

185
00:10:33,510 --> 00:10:39,200
didn't choose a lot of these and this

186
00:10:36,660 --> 00:10:41,459
the last one also didn't change so that

187
00:10:39,200 --> 00:10:44,910
the changes are I think are pretty

188
00:10:41,459 --> 00:10:48,180
focused around solving this problem so

189
00:10:44,910 --> 00:10:51,959
the the plan we worked out with sure our

190
00:10:48,180 --> 00:10:54,750
Airy director is to open up open a new

191
00:10:51,959 --> 00:10:56,699
errata that describes the error the

192
00:10:54,750 --> 00:10:59,220
error is in the fragmentation text and

193
00:10:56,700 --> 00:11:02,310
include the revised text and this will

194
00:10:59,220 --> 00:11:06,180
basically be a new section four point

195
00:11:02,310 --> 00:11:08,640
five a revised section four point five

196
00:11:06,180 --> 00:11:13,069
and this width and then he

197
00:11:08,640 --> 00:11:16,319
well then he will accept the Arado with

198
00:11:13,070 --> 00:11:19,350
status of verified saying it's it is a

199
00:11:16,320 --> 00:11:23,130
technical problem and you know it is

200
00:11:19,350 --> 00:11:25,470
correct to fix it and then the those the

201
00:11:23,130 --> 00:11:29,070
other four errata will be marked as

202
00:11:25,470 --> 00:11:34,470
rejected and in the notes point to the

203
00:11:29,070 --> 00:11:38,430
new errata and so this is the format of

204
00:11:34,470 --> 00:11:41,220
the new errata and so errata is when you

205
00:11:38,430 --> 00:11:43,170
file them they they say you know you

206
00:11:41,220 --> 00:11:46,110
fill in what the current text is and

207
00:11:43,170 --> 00:11:48,180
then you put the new text and then you

208
00:11:46,110 --> 00:11:52,050
have a note which describes what you're

209
00:11:48,180 --> 00:11:54,120
doing so you know so this will have the

210
00:11:52,050 --> 00:11:57,229
current text this will have the new text

211
00:11:54,120 --> 00:12:02,610
we've you've seen on the list and here

212
00:11:57,230 --> 00:12:04,980
and then this will be the note and it's

213
00:12:02,610 --> 00:12:08,070
you know short summary of the problem

214
00:12:04,980 --> 00:12:10,380
and that this Arado replaces these other

215
00:12:08,070 --> 00:12:15,390
errata and the change has been reviewed

216
00:12:10,380 --> 00:12:22,980
here and that was it so any comments or

217
00:12:15,390 --> 00:12:26,640
questions so Bob and I have read through

218
00:12:22,980 --> 00:12:29,460
this text quite a few times but I would

219
00:12:26,640 --> 00:12:31,620
really like a couple reviewers to to

220
00:12:29,460 --> 00:12:33,120
read through it from start to finish and

221
00:12:31,620 --> 00:12:33,780
to ensure that we really get it right

222
00:12:33,120 --> 00:12:36,890
this time

223
00:12:33,780 --> 00:12:40,560
I mean I think we used up our quota for

224
00:12:36,890 --> 00:12:42,689
getting it wrong Eric everything in the

225
00:12:40,560 --> 00:12:44,550
viewer and contributor here obviously on

226
00:12:42,690 --> 00:12:47,790
one of your slide you show the

227
00:12:44,550 --> 00:12:53,729
reassemble fragments can you come back

228
00:12:47,790 --> 00:12:55,800
on this one you know this one yeah

229
00:12:53,730 --> 00:12:59,460
obviously we need to remove the X and a

230
00:12:55,800 --> 00:13:01,109
per layer header but I like somehow to

231
00:12:59,460 --> 00:13:05,040
keep the first flag that has to go in

232
00:13:01,110 --> 00:13:07,620
fact that last fragment made of this yes

233
00:13:05,040 --> 00:13:10,890
I say my Dido so it also turns out that

234
00:13:07,620 --> 00:13:13,380
if you go back and look at 2460 what

235
00:13:10,890 --> 00:13:15,990
we're ending up here with looks a lot

236
00:13:13,380 --> 00:13:20,010
closer to what's in 2460 where it was

237
00:13:15,990 --> 00:13:22,110
described so you know there's six

238
00:13:20,010 --> 00:13:23,670
different ways of doing this this

239
00:13:22,110 --> 00:13:26,940
absolutely I mean I'll go look at that

240
00:13:23,670 --> 00:13:28,890
again but I you know it's it seemed like

241
00:13:26,940 --> 00:13:30,660
I think what we discovered is trying to

242
00:13:28,890 --> 00:13:32,970
break this out into a lot of detail

243
00:13:30,660 --> 00:13:35,850
ended up causing some other issues and

244
00:13:32,970 --> 00:13:39,390
the important thing is to read the text

245
00:13:35,850 --> 00:13:42,930
which is I think has always was correct

246
00:13:39,390 --> 00:13:45,920
is correct in 8,200 but the figures make

247
00:13:42,930 --> 00:13:48,359
this more complicated okay fair enough

248
00:13:45,920 --> 00:13:51,479
yeah I mean it was I mean I was the

249
00:13:48,360 --> 00:13:53,550
editor on this and it was really hard it

250
00:13:51,480 --> 00:13:56,070
was challenged and it went through the

251
00:13:53,550 --> 00:13:58,020
whole IETF the six-man and the

252
00:13:56,070 --> 00:14:02,160
authority-- F working group process and

253
00:13:58,020 --> 00:14:05,819
the last call and all of this you know

254
00:14:02,160 --> 00:14:07,560
so it it was not so much later that this

255
00:14:05,820 --> 00:14:09,240
was noticed that there was a you know

256
00:14:07,560 --> 00:14:13,469
there was actually a problem with the

257
00:14:09,240 --> 00:14:14,850
text but bringing all the changes in you

258
00:14:13,470 --> 00:14:16,950
know we've done what we did a lot of

259
00:14:14,850 --> 00:14:19,560
things here and getting text that is

260
00:14:16,950 --> 00:14:22,310
understandable and work was clearly a

261
00:14:19,560 --> 00:14:27,780
challenge that we all failed

262
00:14:22,310 --> 00:14:30,449
okay so sure s good yeah suresh

263
00:14:27,780 --> 00:14:33,420
krisshnan so bob if you just send it

264
00:14:30,450 --> 00:14:35,970
once he agreed on this like let's put a

265
00:14:33,420 --> 00:14:40,650
timer on it and then I'll verify it

266
00:14:35,970 --> 00:14:42,810
let's say end of the year okay so my

267
00:14:40,650 --> 00:14:48,510
question is when should I file the new

268
00:14:42,810 --> 00:14:50,579
errata put it on time around the list

269
00:14:48,510 --> 00:14:52,200
for people to comment on this way

270
00:14:50,580 --> 00:14:59,760
forward and then probably in two weeks

271
00:14:52,200 --> 00:15:02,370
or so okay will do thank you yes we need

272
00:14:59,760 --> 00:15:04,020
at least a couple of people who you know

273
00:15:02,370 --> 00:15:05,520
read through this thing and give their

274
00:15:04,020 --> 00:15:07,050
thumbs up and can't find any other

275
00:15:05,520 --> 00:15:08,610
issues you know if they can be bothered

276
00:15:07,050 --> 00:15:10,229
to implement it from this text that

277
00:15:08,610 --> 00:15:13,800
would also be nice but we don't quite

278
00:15:10,230 --> 00:15:17,960
expect that I think it's just a few

279
00:15:13,800 --> 00:15:20,670
hundred lines of C right the flight oh

280
00:15:17,960 --> 00:15:23,120
okay Bob thank you you stay up here

281
00:15:20,670 --> 00:15:29,790
that's right

282
00:15:23,120 --> 00:15:33,460
Gouri in the room good

283
00:15:29,790 --> 00:15:35,620
can you feed to in the books there's a

284
00:15:33,460 --> 00:15:36,990
tutu in a books there's no box oh just

285
00:15:35,620 --> 00:15:40,000
an X Oh

286
00:15:36,990 --> 00:15:43,529
[Music]

287
00:15:40,000 --> 00:15:48,750
I'm Bob so gory this is just an update

288
00:15:43,529 --> 00:15:51,430
out of whoops go through this quickly

289
00:15:48,750 --> 00:15:53,770
yeah so you've heard this before we know

290
00:15:51,430 --> 00:15:56,229
their problems with half em to you this

291
00:15:53,770 --> 00:15:58,569
was sort of part of the idea of sending

292
00:15:56,230 --> 00:16:03,490
feedback from the destination instead of

293
00:15:58,570 --> 00:16:06,580
from middle this is the current format

294
00:16:03,490 --> 00:16:10,390
that's defined in the draft this hasn't

295
00:16:06,580 --> 00:16:14,950
changed since the last ITF meeting

296
00:16:10,390 --> 00:16:18,250
so since 105 this was adopted as a

297
00:16:14,950 --> 00:16:22,060
working group draft first working group

298
00:16:18,250 --> 00:16:24,970
- was published we did a request for an

299
00:16:22,060 --> 00:16:27,609
early I an allocation this was assigned

300
00:16:24,970 --> 00:16:29,470
we published a new draft with that and

301
00:16:27,610 --> 00:16:35,230
some other a bunch of text

302
00:16:29,470 --> 00:16:38,560
clarifications I also had my Wireshark

303
00:16:35,230 --> 00:16:40,839
code for this accepted in Wireshark I

304
00:16:38,560 --> 00:16:42,729
haven't done anything like this for a

305
00:16:40,839 --> 00:16:44,500
while so it was learning a bunch learned

306
00:16:42,730 --> 00:16:47,260
a bunch of stuff in all dimensions and

307
00:16:44,500 --> 00:16:49,810
I'm not sure which I think it's going to

308
00:16:47,260 --> 00:16:54,130
be in the next distribution but that

309
00:16:49,810 --> 00:17:04,899
it's in the developers distribution and

310
00:16:54,130 --> 00:17:08,069
in this we've made some measurement

311
00:17:04,900 --> 00:17:11,709
experiments to try and measure whether

312
00:17:08,069 --> 00:17:15,959
we can send a hop by hop option or an

313
00:17:11,709 --> 00:17:18,339
extension header we're ipv6 works and

314
00:17:15,959 --> 00:17:21,280
where we find a bigger empty you

315
00:17:18,339 --> 00:17:23,948
supported whether we can send a bigger

316
00:17:21,280 --> 00:17:27,428
packet and we're in the network it might

317
00:17:23,949 --> 00:17:30,910
not get to so that's the general scope

318
00:17:27,429 --> 00:17:35,650
and we have some probes we currently

319
00:17:30,910 --> 00:17:38,530
have five on this list here and we have

320
00:17:35,650 --> 00:17:40,270
a few more to give out or run maybe as

321
00:17:38,530 --> 00:17:42,850
virtual machines if anyone would like to

322
00:17:40,270 --> 00:17:43,960
join us as a place to run these

323
00:17:42,850 --> 00:17:46,209
measurements

324
00:17:43,960 --> 00:17:48,400
so these measurement probes are run

325
00:17:46,210 --> 00:17:51,090
using ansible they're remotely deployed

326
00:17:48,400 --> 00:17:52,960
they remotely execute a script of

327
00:17:51,090 --> 00:17:55,090
experiments and then they retrieve the

328
00:17:52,960 --> 00:18:00,520
data back to a central point with us and

329
00:17:55,090 --> 00:18:02,350
if you have a large MTU ipv6 supporting

330
00:18:00,520 --> 00:18:04,720
link which could be a good audience to

331
00:18:02,350 --> 00:18:05,919
talk to and you want to do this sort of

332
00:18:04,720 --> 00:18:09,100
experiment talk to me and I'll explain

333
00:18:05,920 --> 00:18:11,110
in detail what it is and I'll talk at

334
00:18:09,100 --> 00:18:13,959
Panaji as well and I'll mention a little

335
00:18:11,110 --> 00:18:15,929
bit more about how probes and it would

336
00:18:13,960 --> 00:18:19,210
be nice to say we've done experiments

337
00:18:15,930 --> 00:18:20,860
it's kind of only just true but at least

338
00:18:19,210 --> 00:18:23,230
in the experience we've done with found

339
00:18:20,860 --> 00:18:26,830
of like one-eighth of the destinations

340
00:18:23,230 --> 00:18:28,780
we probed actually supported by hope

341
00:18:26,830 --> 00:18:31,300
options across the path we use which is

342
00:18:28,780 --> 00:18:34,960
kind of fun now we got to check what

343
00:18:31,300 --> 00:18:38,350
that means and there was one particular

344
00:18:34,960 --> 00:18:40,210
and location where none of the packets

345
00:18:38,350 --> 00:18:42,120
went anywhere when they had a hop by hop

346
00:18:40,210 --> 00:18:44,920
session yes Bob's fault

347
00:18:42,120 --> 00:18:47,439
Bob's peers are somewhere along that

348
00:18:44,920 --> 00:18:49,450
path something goes wrong and so and

349
00:18:47,440 --> 00:18:51,910
obviously we're going to troubleshoot

350
00:18:49,450 --> 00:18:54,040
that so that there there is definitely

351
00:18:51,910 --> 00:18:56,050
evidence that hop by hop options do not

352
00:18:54,040 --> 00:18:57,760
work across the internet and there's

353
00:18:56,050 --> 00:18:59,560
definitely evidence that they can work

354
00:18:57,760 --> 00:19:01,510
across the internet in some cases so

355
00:18:59,560 --> 00:19:04,899
there's the data point we're at more

356
00:19:01,510 --> 00:19:06,150
information next time and this is a sort

357
00:19:04,900 --> 00:19:08,380
of question we're going to ask and

358
00:19:06,150 --> 00:19:10,480
probably obvious now how often is the

359
00:19:08,380 --> 00:19:14,140
path MTU smaller than normal how often

360
00:19:10,480 --> 00:19:16,510
can use a much larger MTU our ipv4 and

361
00:19:14,140 --> 00:19:17,890
ipv6 playing the same might not be

362
00:19:16,510 --> 00:19:19,180
interesting to six-member sure is

363
00:19:17,890 --> 00:19:22,060
interesting to me to figure out what

364
00:19:19,180 --> 00:19:23,860
happens and I can't hop my hot buttons

365
00:19:22,060 --> 00:19:25,179
be sent and what's the pathology we're

366
00:19:23,860 --> 00:19:26,979
going to try and look into pathologist

367
00:19:25,180 --> 00:19:30,100
so we understand why as well as just

368
00:19:26,980 --> 00:19:31,780
what and continuing experience please

369
00:19:30,100 --> 00:19:35,620
talk to us is that the end of our slide

370
00:19:31,780 --> 00:19:40,750
deck I can talk to us then is anybody

371
00:19:35,620 --> 00:19:41,158
who want to talk to us now please form a

372
00:19:40,750 --> 00:19:43,759
line

373
00:19:41,159 --> 00:19:46,229
you wish to help us in our measurements

374
00:19:43,759 --> 00:19:47,909
seriously and we were available on the

375
00:19:46,229 --> 00:19:50,669
list we're available at the idea and

376
00:19:47,909 --> 00:19:52,139
just torture XIV you if you want to do

377
00:19:50,669 --> 00:19:54,809
that but if you want to ask any

378
00:19:52,139 --> 00:19:56,580
questions please come and ask recline

379
00:19:54,809 --> 00:20:02,340
question dude do your probes run on the

380
00:19:56,580 --> 00:20:04,619
right backless framework no we have

381
00:20:02,340 --> 00:20:06,869
ideas of collaborating and running these

382
00:20:04,619 --> 00:20:08,309
from ripe Atlas positions as well the

383
00:20:06,869 --> 00:20:09,988
reason they don't is because there's a

384
00:20:08,309 --> 00:20:12,239
restricted set of experiments you can do

385
00:20:09,989 --> 00:20:13,859
from ripe Atlas positions and that's one

386
00:20:12,239 --> 00:20:17,099
set of experience from lots and lots of

387
00:20:13,859 --> 00:20:18,869
vantage points our probes that were more

388
00:20:17,099 --> 00:20:21,178
intended to run from one vantage point

389
00:20:18,869 --> 00:20:22,799
in measure lots of different paths and

390
00:20:21,179 --> 00:20:24,450
lots of different ways through the

391
00:20:22,799 --> 00:20:26,399
network and if we gather a different

392
00:20:24,450 --> 00:20:29,999
data set these two data sets in needs

393
00:20:26,399 --> 00:20:32,340
together so um yes that is interesting

394
00:20:29,999 --> 00:20:33,899
if you want to actually just do more

395
00:20:32,340 --> 00:20:35,309
than ask the question please talk to me

396
00:20:33,899 --> 00:20:37,678
or talk to someone else

397
00:20:35,309 --> 00:20:38,849
I just haven't have an hour's probe at

398
00:20:37,679 --> 00:20:40,409
home and I'm sure I know many people who

399
00:20:38,849 --> 00:20:42,210
do but excellent well you should you

400
00:20:40,409 --> 00:20:44,999
should join the experiment we will find

401
00:20:42,210 --> 00:20:45,929
a way to enable you this is Robert from

402
00:20:44,999 --> 00:20:49,349
the ripe ncc

403
00:20:45,929 --> 00:20:49,859
I have been someone such a solvable

404
00:20:49,349 --> 00:20:56,039
problem

405
00:20:49,859 --> 00:21:00,330
let's talk cool oh yes thank you we did

406
00:20:56,039 --> 00:21:03,179
good work hello sir one more question

407
00:21:00,330 --> 00:21:07,619
Johnny from are we and master cousin

408
00:21:03,179 --> 00:21:11,899
that is this mechanism useful oi'm

409
00:21:07,619 --> 00:21:17,220
packets or the data packet this is an

410
00:21:11,899 --> 00:21:19,649
ipv6 extension header yes so what the

411
00:21:17,220 --> 00:21:25,139
packet carries I don't really care I

412
00:21:19,649 --> 00:21:27,389
mean so well the only you say I mean can

413
00:21:25,139 --> 00:21:30,449
be in any packet but it it's really not

414
00:21:27,389 --> 00:21:33,840
intended to be in maximum MTU size

415
00:21:30,450 --> 00:21:37,229
packets but but it read the draft list

416
00:21:33,840 --> 00:21:42,869
it's all in the draft yeah okay thank

417
00:21:37,229 --> 00:21:46,159
you thank you okay super I think if I

418
00:21:42,869 --> 00:21:49,859
remember correctly we have so far next

419
00:21:46,159 --> 00:21:52,470
you have 50 minutes on are you doing

420
00:21:49,859 --> 00:21:55,879
both drafts so far or just the one we

421
00:21:52,470 --> 00:21:55,879
have here yep super

422
00:21:59,490 --> 00:22:06,400
hi my name is the Fox can you hear me

423
00:22:01,780 --> 00:22:11,470
well good so I'm going to present update

424
00:22:06,400 --> 00:22:14,410
on the OLM draft is corded opted on

425
00:22:11,470 --> 00:22:17,890
behalf of my quarters he is a list of

426
00:22:14,410 --> 00:22:19,660
contributors to this draft and here the

427
00:22:17,890 --> 00:22:26,050
big history so the work is started back

428
00:22:19,660 --> 00:22:29,140
in July 2017 we had eight revision this

429
00:22:26,050 --> 00:22:33,070
document has been actively discussed and

430
00:22:29,140 --> 00:22:38,920
presented both in spring and six then at

431
00:22:33,070 --> 00:22:39,280
different times it got adopted at six

432
00:22:38,920 --> 00:22:43,870
men

433
00:22:39,280 --> 00:22:47,230
thanks six men to accept this but there

434
00:22:43,870 --> 00:22:48,550
was a lot of time that the draft keep

435
00:22:47,230 --> 00:22:51,040
finding it homes

436
00:22:48,550 --> 00:22:53,409
home while the implementations were

437
00:22:51,040 --> 00:22:56,500
happening and a lot of discussion and

438
00:22:53,410 --> 00:22:58,540
and reviews happened both actively on

439
00:22:56,500 --> 00:23:02,320
the list as well as off the list

440
00:22:58,540 --> 00:23:08,909
and since adoption also we have

441
00:23:02,320 --> 00:23:12,419
addressed all the common received hazy

442
00:23:08,910 --> 00:23:15,100
summary of the draft so the draft

443
00:23:12,420 --> 00:23:18,490
basically mentioned how we can use the

444
00:23:15,100 --> 00:23:21,639
existing ICMP mechanism for onn in a

445
00:23:18,490 --> 00:23:27,520
services network and then it also

446
00:23:21,640 --> 00:23:31,480
defines use of SRH flag specifically

447
00:23:27,520 --> 00:23:34,690
basically say it defines the flag for

448
00:23:31,480 --> 00:23:37,360
onm purposes and then it also defines

449
00:23:34,690 --> 00:23:43,020
some use cases how the old flag could be

450
00:23:37,360 --> 00:23:47,439
used and it also defined to onm sits

451
00:23:43,020 --> 00:23:51,730
specifically n dot o P which is a

452
00:23:47,440 --> 00:23:56,440
behavior designated for onm end point

453
00:23:51,730 --> 00:24:00,450
with punt instruction and n dot OTP

454
00:23:56,440 --> 00:24:04,030
which is designed for onm end point with

455
00:24:00,450 --> 00:24:05,960
timestamp and punt instruction so that's

456
00:24:04,030 --> 00:24:13,070
the overall

457
00:24:05,960 --> 00:24:17,259
summary of the content since ITA 105 we

458
00:24:13,070 --> 00:24:19,879
did receive some comments on the draft

459
00:24:17,259 --> 00:24:23,480
specifically there were some comments

460
00:24:19,879 --> 00:24:26,748
with respect to use and processing of au

461
00:24:23,480 --> 00:24:30,350
flag when a package received with SL

462
00:24:26,749 --> 00:24:31,850
equal to zero this version address was

463
00:24:30,350 --> 00:24:35,090
common thanks very much for your

464
00:24:31,850 --> 00:24:37,459
comments but they said this address is

465
00:24:35,090 --> 00:24:41,840
the common dispersion and then there

466
00:24:37,460 --> 00:24:45,860
were also comments regarding some cases

467
00:24:41,840 --> 00:24:50,779
where there were could be duplicate ICMP

468
00:24:45,860 --> 00:24:52,610
header error messages sent and N and

469
00:24:50,779 --> 00:24:55,639
this just does clarification for those

470
00:24:52,610 --> 00:24:58,850
as well and then there was quite a bit

471
00:24:55,639 --> 00:25:01,850
of comment on editorial changes and all

472
00:24:58,850 --> 00:25:09,289
those changes have been made in this

473
00:25:01,850 --> 00:25:11,389
version so the main change which is from

474
00:25:09,289 --> 00:25:15,799
processing quite a few dozen territorial

475
00:25:11,389 --> 00:25:17,959
thing is regarding clarifying the OU

476
00:25:15,799 --> 00:25:20,720
flag processing when a packet will see

477
00:25:17,960 --> 00:25:24,100
with a cell could 0 now this does not

478
00:25:20,720 --> 00:25:29,389
the change is still editorial in nature

479
00:25:24,100 --> 00:25:33,139
from the get-go in july 2017 when the OU

480
00:25:29,389 --> 00:25:38,029
flag was defined it was defined to make

481
00:25:33,139 --> 00:25:41,178
a copy of the packet and with the

482
00:25:38,029 --> 00:25:47,090
timestamp and forward so it always

483
00:25:41,179 --> 00:25:51,289
define as punt forward and process the

484
00:25:47,090 --> 00:25:53,840
local said how one it was a good comment

485
00:25:51,289 --> 00:25:56,029
that is not so clear what happened where

486
00:25:53,840 --> 00:25:58,939
syllable 0 so but we did is we

487
00:25:56,029 --> 00:26:02,990
specifically linked it back to the SRH

488
00:25:58,940 --> 00:26:07,220
draft and and basically say that the

489
00:26:02,990 --> 00:26:11,090
instruction really that goes at as 0 1.1

490
00:26:07,220 --> 00:26:14,629
is that if a flag is set and local

491
00:26:11,090 --> 00:26:17,429
configuration permits then do make a

492
00:26:14,629 --> 00:26:20,480
copy of the packet time is time

493
00:26:17,430 --> 00:26:24,690
and send that to local one in process

494
00:26:20,480 --> 00:26:29,610
now this obviously get executed before

495
00:26:24,690 --> 00:26:32,250
the SL check SL equal to zero check so

496
00:26:29,610 --> 00:26:37,260
basically this chain clarified on the

497
00:26:32,250 --> 00:26:40,040
comment now in the deployment status at

498
00:26:37,260 --> 00:26:43,890
the moment there are six deployment

499
00:26:40,040 --> 00:26:45,570
running comer in a production Network

500
00:26:43,890 --> 00:26:48,990
running significant amount of commercial

501
00:26:45,570 --> 00:26:49,679
traffic that includes Softbank China

502
00:26:48,990 --> 00:26:54,060
Telecom

503
00:26:49,680 --> 00:26:57,150
elite China Unicom clear net and MTN

504
00:26:54,060 --> 00:26:59,610
Uganda and there are some other in

505
00:26:57,150 --> 00:27:02,130
deployments there are no not but not

506
00:26:59,610 --> 00:27:05,909
publicly disclosed for the public

507
00:27:02,130 --> 00:27:10,260
disclosure there is a draft for the SR

508
00:27:05,910 --> 00:27:14,810
v6 deployment status and these and and

509
00:27:10,260 --> 00:27:17,280
the operator have contributed to

510
00:27:14,810 --> 00:27:20,129
addition of what they have deployed and

511
00:27:17,280 --> 00:27:23,780
is they specifically mentioned that onm

512
00:27:20,130 --> 00:27:26,190
has been deployed in these deployments

513
00:27:23,780 --> 00:27:29,760
from implementation status point of view

514
00:27:26,190 --> 00:27:33,420
there are 12 hardware implementation of

515
00:27:29,760 --> 00:27:37,530
the draft with shipping which are

516
00:27:33,420 --> 00:27:41,040
shipping and those are deployed as well

517
00:27:37,530 --> 00:27:42,060
as we saw and there are additional known

518
00:27:41,040 --> 00:27:45,510
implementation

519
00:27:42,060 --> 00:27:50,790
and the details are provided in the ax

520
00:27:45,510 --> 00:27:52,440
services deployment status draft for

521
00:27:50,790 --> 00:27:55,350
interoperability there was a multi

522
00:27:52,440 --> 00:27:59,820
vendor in trop even in European at once

523
00:27:55,350 --> 00:28:05,459
network test center II a NTC back in

524
00:27:59,820 --> 00:28:08,460
March 2019 and the results for the intro

525
00:28:05,460 --> 00:28:11,880
op has been discussed and disclosed as

526
00:28:08,460 --> 00:28:13,920
part of MPLS for congress in apple 2019

527
00:28:11,880 --> 00:28:17,760
these are publically available and are

528
00:28:13,920 --> 00:28:23,580
referenced in the services deployment

529
00:28:17,760 --> 00:28:24,419
and implementation status draft from a

530
00:28:23,580 --> 00:28:26,489
next step by

531
00:28:24,419 --> 00:28:31,590
whew since the draft has been deployed

532
00:28:26,489 --> 00:28:33,509
there are at least 12 Hardware

533
00:28:31,590 --> 00:28:37,619
implementation of the draft we shipping

534
00:28:33,509 --> 00:28:40,950
an interoperable code we think that

535
00:28:37,619 --> 00:28:46,009
draft is stable implementation exists

536
00:28:40,950 --> 00:28:50,749
Interop has been done and we intend to

537
00:28:46,009 --> 00:28:54,509
do a last call for this draft if

538
00:28:50,749 --> 00:28:57,899
depending on chairs how they take it but

539
00:28:54,509 --> 00:29:00,090
but definitely by wind cooler or between

540
00:28:57,899 --> 00:29:02,668
now and when Cooper but we will really

541
00:29:00,090 --> 00:29:05,428
like to hear more feedback from the

542
00:29:02,669 --> 00:29:13,980
working group more reviews and we

543
00:29:05,429 --> 00:29:15,359
welcome any corporation any questions so

544
00:29:13,980 --> 00:29:18,749
while people are running up to the

545
00:29:15,359 --> 00:29:23,279
microphone and since this is a you know

546
00:29:18,749 --> 00:29:25,259
six-man spring document you know when we

547
00:29:23,279 --> 00:29:27,359
will run a working group last call it

548
00:29:25,259 --> 00:29:32,519
would certainly be last call in in both

549
00:29:27,359 --> 00:29:34,949
working groups so I found you know

550
00:29:32,519 --> 00:29:37,889
unless I I believe if unless you are

551
00:29:34,950 --> 00:29:40,350
quite versed in in SR in spring

552
00:29:37,889 --> 00:29:43,229
terminology you might find this document

553
00:29:40,350 --> 00:29:46,699
a little hard to read how many people

554
00:29:43,230 --> 00:29:51,659
have read this document in in six man

555
00:29:46,700 --> 00:29:53,489
excellent so quite quite a few so

556
00:29:51,659 --> 00:29:55,679
certainly encourage you know people to

557
00:29:53,489 --> 00:29:59,249
review it here with Wade sort of yours

558
00:29:55,679 --> 00:30:03,119
v6 or six-man hat on and give us

559
00:29:59,249 --> 00:30:05,609
feedback we have and I guess we should

560
00:30:03,119 --> 00:30:07,019
discuss this with our ad if there might

561
00:30:05,609 --> 00:30:08,730
be overlap with all the working groups

562
00:30:07,019 --> 00:30:12,659
as well you know there might be I

563
00:30:08,730 --> 00:30:15,749
believe I ppm for example works on on

564
00:30:12,659 --> 00:30:17,759
sort of similar ish issues if we should

565
00:30:15,749 --> 00:30:19,289
get those in you know them involved now

566
00:30:17,759 --> 00:30:25,230
you know I don't know if Suresh I see

567
00:30:19,289 --> 00:30:26,759
you know D but subscription I was not

568
00:30:25,230 --> 00:30:29,639
really thinking about like know the

569
00:30:26,759 --> 00:30:31,049
stuff that's generally called by last

570
00:30:29,639 --> 00:30:32,789
call review so I was thinking like you

571
00:30:31,049 --> 00:30:35,039
know the other groups will get looked in

572
00:30:32,789 --> 00:30:37,259
later in the cycle but I think the

573
00:30:35,039 --> 00:30:38,400
spring is like probably important around

574
00:30:37,259 --> 00:30:39,780
the time of working to blast

575
00:30:38,400 --> 00:30:41,940
so the other stuff are like after ad

576
00:30:39,780 --> 00:30:43,290
well I'll probably sends a Molly review

577
00:30:41,940 --> 00:30:44,820
request that's kind of how we handle

578
00:30:43,290 --> 00:30:46,980
like you know stuff like yang and things

579
00:30:44,820 --> 00:30:49,110
like that I do a little bit requests if

580
00:30:46,980 --> 00:30:52,590
possible yeah but after the working

581
00:30:49,110 --> 00:30:54,389
group process yes kind of and this

582
00:30:52,590 --> 00:30:56,879
document depends on network programming

583
00:30:54,390 --> 00:30:59,160
i believe say would be stuck behind in

584
00:30:56,880 --> 00:31:02,640
eq for network programming document

585
00:30:59,160 --> 00:31:10,500
right no I I think these are independent

586
00:31:02,640 --> 00:31:13,050
it doesn't depend it defines from the

587
00:31:10,500 --> 00:31:15,600
core point point of view the behavior I

588
00:31:13,050 --> 00:31:17,610
in a registry point of view and all yes

589
00:31:15,600 --> 00:31:20,370
but otherwise from a technicality point

590
00:31:17,610 --> 00:31:22,260
of you know I think Ola means it's a

591
00:31:20,370 --> 00:31:23,520
normative reference so it's gonna not

592
00:31:22,260 --> 00:31:28,980
get published I think like you

593
00:31:23,520 --> 00:31:31,620
understand that yeah you know top of

594
00:31:28,980 --> 00:31:33,870
your head we're in the pipeline the

595
00:31:31,620 --> 00:31:37,889
network programming document is we can

596
00:31:33,870 --> 00:31:41,909
so network programming last call request

597
00:31:37,890 --> 00:31:44,190
has made Pablo is here he may more like

598
00:31:41,910 --> 00:31:47,990
to add something but my understanding is

599
00:31:44,190 --> 00:31:55,910
that last call request has been made and

600
00:31:47,990 --> 00:31:59,480
I at this is spring working group table

601
00:31:55,910 --> 00:32:02,280
Pablo comedy Jeff Cisco so yes this

602
00:31:59,480 --> 00:32:06,360
meeting we requested working of Lascaux

603
00:32:02,280 --> 00:32:09,629
and we expect you to appreciate sure ok

604
00:32:06,360 --> 00:32:12,209
ok yeah so we'll follow up when doing

605
00:32:09,630 --> 00:32:14,670
that you know probably after that every

606
00:32:12,210 --> 00:32:21,210
programming or close close in parallel

607
00:32:14,670 --> 00:32:22,740
or in parallel yeah so again I think

608
00:32:21,210 --> 00:32:25,380
it's fairly advanced in the process as

609
00:32:22,740 --> 00:32:27,180
well yeah so one thing that came up kind

610
00:32:25,380 --> 00:32:28,860
of like we talked about it expand

611
00:32:27,180 --> 00:32:30,540
related stuff as well as the they

612
00:32:28,860 --> 00:32:32,820
require a protocol number allocation now

613
00:32:30,540 --> 00:32:35,610
so they're gonna go with the early

614
00:32:32,820 --> 00:32:37,470
allocation request for the protocol

615
00:32:35,610 --> 00:32:39,419
number so I don't think it's gonna stop

616
00:32:37,470 --> 00:32:42,540
anything it's just that like bunch of

617
00:32:39,420 --> 00:32:47,160
process steps to be made yep ok yeah

618
00:32:42,540 --> 00:32:50,040
super let's let's get that going thank

619
00:32:47,160 --> 00:32:53,420
you and we appreciate really feedback

620
00:32:50,040 --> 00:32:53,420
from the working group thanks bye

621
00:32:55,240 --> 00:33:03,680
okay Jen I think your uh I think we have

622
00:33:01,790 --> 00:33:05,480
a six man document about this font

623
00:33:03,680 --> 00:33:14,660
choice of yours but I can't remember the

624
00:33:05,480 --> 00:33:16,220
number hi hello who has read the draft

625
00:33:14,660 --> 00:33:21,830
though at least know what's about

626
00:33:16,220 --> 00:33:23,810
oh come on so who was in v6 hopes okay

627
00:33:21,830 --> 00:33:27,820
we can count how many people were

628
00:33:23,810 --> 00:33:32,389
already in emails so quickly comes then

629
00:33:27,820 --> 00:33:36,110
the problem host join the network sends

630
00:33:32,390 --> 00:33:38,090
anarres gets on the right back and that

631
00:33:36,110 --> 00:33:40,520
eraser is everything host needs to

632
00:33:38,090 --> 00:33:43,220
configure addresses to know the default

633
00:33:40,520 --> 00:33:46,340
gateway IP and MAC address everything is

634
00:33:43,220 --> 00:33:48,800
ready to send the traffic good by the

635
00:33:46,340 --> 00:33:50,600
way router at that point has no

636
00:33:48,800 --> 00:33:53,180
knowledge about host global addresses

637
00:33:50,600 --> 00:33:56,990
yet now host start sending traffic

638
00:33:53,180 --> 00:34:00,080
outside to some internet destinations

639
00:33:56,990 --> 00:34:04,550
all good but then return traffic coming

640
00:34:00,080 --> 00:34:06,350
back and router again has no entries and

641
00:34:04,550 --> 00:34:10,399
neighbor cash for that for the host

642
00:34:06,350 --> 00:34:14,000
global address so router is per standard

643
00:34:10,399 --> 00:34:18,380
buffers one packet and starts new

644
00:34:14,000 --> 00:34:21,290
address resolution for the host drop in

645
00:34:18,380 --> 00:34:23,570
air all other packets on the floor so as

646
00:34:21,290 --> 00:34:26,389
a result only first packet my reach the

647
00:34:23,570 --> 00:34:27,880
host everything else is dropped until

648
00:34:26,389 --> 00:34:30,020
host starts to the transmission

649
00:34:27,880 --> 00:34:32,540
apparently some applications might be

650
00:34:30,020 --> 00:34:34,550
quite unhappy about that which causing

651
00:34:32,540 --> 00:34:36,980
significant user visible delays in

652
00:34:34,550 --> 00:34:40,790
connecting to the network you can see it

653
00:34:36,980 --> 00:34:43,250
yourself if you connect to v6 only not

654
00:34:40,790 --> 00:34:45,409
64 SSID hear some of your phones might

655
00:34:43,250 --> 00:34:48,949
show like five seven seven seconds delay

656
00:34:45,409 --> 00:34:50,780
caused by this because he an ideal world

657
00:34:48,949 --> 00:34:53,120
it would be nice said by the time the

658
00:34:50,780 --> 00:34:54,950
traffic coming back to the router to be

659
00:34:53,120 --> 00:34:56,929
delivered to the host router

660
00:34:54,949 --> 00:34:58,910
ideally should know where to send it

661
00:34:56,929 --> 00:35:02,720
without all this additional delay caused

662
00:34:58,910 --> 00:35:04,730
by address resolution why we do not see

663
00:35:02,720 --> 00:35:08,450
in dual stack networks the

664
00:35:04,730 --> 00:35:11,510
whose hosts sent our packets taylean

665
00:35:08,450 --> 00:35:13,850
routers about the addresses routers gets

666
00:35:11,510 --> 00:35:15,740
a ARP cache updated and because of hey

667
00:35:13,850 --> 00:35:18,290
Bibles nobody notion and notation

668
00:35:15,740 --> 00:35:20,629
anything until you turn off ipv4 and

669
00:35:18,290 --> 00:35:22,490
then you start seeing the problem while

670
00:35:20,630 --> 00:35:26,420
we cannot have the same nice think in

671
00:35:22,490 --> 00:35:31,939
ipv6 because a neighbor discovered

672
00:35:26,420 --> 00:35:36,410
arrived she claims said if if v6 device

673
00:35:31,940 --> 00:35:38,900
receives a unsolicited na and there is

674
00:35:36,410 --> 00:35:41,690
no entry yet for that address then it

675
00:35:38,900 --> 00:35:43,430
should be silently discarded and luckily

676
00:35:41,690 --> 00:35:45,980
we have an explanation why it should be

677
00:35:43,430 --> 00:35:48,319
silently discarded because there is no

678
00:35:45,980 --> 00:35:50,510
reason to create an entry because the

679
00:35:48,320 --> 00:35:52,550
sender is not trying to talk to you it's

680
00:35:50,510 --> 00:35:54,440
definitely true for host by host who's

681
00:35:52,550 --> 00:35:57,320
the host but it's definitely not true

682
00:35:54,440 --> 00:35:59,570
for traffic sent through the router

683
00:35:57,320 --> 00:36:01,609
outside in this case he a host is not

684
00:35:59,570 --> 00:36:03,590
try and talk to her outer but router

685
00:36:01,609 --> 00:36:07,790
will need to talk to host back quite

686
00:36:03,590 --> 00:36:09,859
soon sir there is a draft in v6 ops

687
00:36:07,790 --> 00:36:12,890
which explains the problem and

688
00:36:09,859 --> 00:36:16,850
enumerated possible things we can do to

689
00:36:12,890 --> 00:36:20,359
solve it and because some of those

690
00:36:16,850 --> 00:36:22,759
solutions involves updates to neighbor

691
00:36:20,359 --> 00:36:25,580
discovery state machine I was advised to

692
00:36:22,760 --> 00:36:27,830
come here so here we are so the draft

693
00:36:25,580 --> 00:36:31,279
which is in six month was sent to

694
00:36:27,830 --> 00:36:33,049
mailing list some time ago proposed some

695
00:36:31,280 --> 00:36:35,510
solutions discuss the potential

696
00:36:33,050 --> 00:36:37,490
disruption which Maya might not be

697
00:36:35,510 --> 00:36:40,400
caused by the solution and has some

698
00:36:37,490 --> 00:36:42,589
security considerations so what we want

699
00:36:40,400 --> 00:36:45,590
from the solution we definitely need to

700
00:36:42,590 --> 00:36:46,609
be able for the host to create a stale

701
00:36:45,590 --> 00:36:49,580
or incomplete

702
00:36:46,609 --> 00:36:51,830
entry in router neighbor cache when a

703
00:36:49,580 --> 00:36:54,710
host starts sending traffic it should

704
00:36:51,830 --> 00:36:56,480
not cause any disruption for in case of

705
00:36:54,710 --> 00:36:58,970
duplicate addresses for example if there

706
00:36:56,480 --> 00:37:00,410
is an existing entry already and it

707
00:36:58,970 --> 00:37:02,509
would be really nice if it would work

708
00:37:00,410 --> 00:37:03,830
for optimistic addresses - because the

709
00:37:02,510 --> 00:37:05,960
whole idea of optimistic

710
00:37:03,830 --> 00:37:08,029
addresses where I want to send traffic

711
00:37:05,960 --> 00:37:11,420
as fast as possible as soon as I get

712
00:37:08,030 --> 00:37:13,130
array and also if I have multiple source

713
00:37:11,420 --> 00:37:15,619
top routers it would be really nice if

714
00:37:13,130 --> 00:37:17,750
it worked for both of them because host

715
00:37:15,619 --> 00:37:18,289
might send traffic through router one

716
00:37:17,750 --> 00:37:19,999
but

717
00:37:18,289 --> 00:37:23,329
traffic might come through completely

718
00:37:19,999 --> 00:37:25,519
different host router so what we can do

719
00:37:23,329 --> 00:37:27,739
we can do niacin and claim its works as

720
00:37:25,519 --> 00:37:29,508
intended transport protocol should take

721
00:37:27,739 --> 00:37:34,069
care of all of this and packet losses

722
00:37:29,509 --> 00:37:37,279
okay I kind of disagree we can do what

723
00:37:34,069 --> 00:37:39,769
we do for APB for hosts advertise the

724
00:37:37,279 --> 00:37:41,559
addresses in unsolicited A's routers

725
00:37:39,769 --> 00:37:44,538
Update caches everyone is happy

726
00:37:41,559 --> 00:37:47,689
we can let routers glean from that

727
00:37:44,539 --> 00:37:51,410
packet also a solution is far as I know

728
00:37:47,689 --> 00:37:53,928
few vendors doing it already host might

729
00:37:51,410 --> 00:37:58,699
sent an nh-2 router from mobile source

730
00:37:53,929 --> 00:38:00,169
and trigger neighbors discovery process

731
00:37:58,699 --> 00:38:01,910
however it would not work for

732
00:38:00,169 --> 00:38:04,699
opportunistic addresses because it's

733
00:38:01,910 --> 00:38:06,799
explicitly prohibited host might sent an

734
00:38:04,699 --> 00:38:09,529
arrest from global address which will

735
00:38:06,799 --> 00:38:12,259
trigger again packet being sent back to

736
00:38:09,529 --> 00:38:14,539
host however it would not work for

737
00:38:12,259 --> 00:38:16,609
domestic addresses if routers the

738
00:38:14,539 --> 00:38:19,999
multicast because you cannot sent an

739
00:38:16,609 --> 00:38:24,529
arrest with link layer address in arrest

740
00:38:19,999 --> 00:38:27,979
so if router is responding with unicast

741
00:38:24,529 --> 00:38:29,839
then router will trigger an address

742
00:38:27,979 --> 00:38:31,489
resolution but if router is doing

743
00:38:29,839 --> 00:38:34,959
multicast it will just respond with

744
00:38:31,489 --> 00:38:37,309
multicast and no entries will be created

745
00:38:34,959 --> 00:38:39,979
we can ask routers to buffer more

746
00:38:37,309 --> 00:38:41,229
packets I think security people wouldn't

747
00:38:39,979 --> 00:38:45,319
approve

748
00:38:41,229 --> 00:38:47,288
there is also idea to trigger address

749
00:38:45,319 --> 00:38:51,288
resolution every time the router

750
00:38:47,289 --> 00:38:54,169
forwards routes some packet for which it

751
00:38:51,289 --> 00:38:56,479
does not have entry already I kind of

752
00:38:54,169 --> 00:38:59,058
concerned here as far as I know a and

753
00:38:56,479 --> 00:39:00,769
some vendors do that but I think this

754
00:38:59,059 --> 00:39:02,989
connection between forwarding cancer

755
00:39:00,769 --> 00:39:06,799
control plane might be tricky sure

756
00:39:02,989 --> 00:39:09,619
proposed changes when host gets a new

757
00:39:06,799 --> 00:39:13,729
global address configured it should send

758
00:39:09,619 --> 00:39:15,380
unsolicited an A with override flag set

759
00:39:13,729 --> 00:39:18,198
to zero and I forgot to put it on the

760
00:39:15,380 --> 00:39:21,709
draft about a red flag I will update it

761
00:39:18,199 --> 00:39:23,959
in zero one so a second override flag to

762
00:39:21,709 --> 00:39:27,979
0 means we would not disrupt any

763
00:39:23,959 --> 00:39:30,979
existing countries and rare routers may

764
00:39:27,979 --> 00:39:32,069
shoot and I'm not sure about this should

765
00:39:30,979 --> 00:39:34,098
create a stale

766
00:39:32,069 --> 00:39:36,900
countries when they receive unsolicited

767
00:39:34,099 --> 00:39:38,180
tennis and there is no entry for that

768
00:39:36,900 --> 00:39:41,459
address yet

769
00:39:38,180 --> 00:39:44,399
so actually purpose because RFC

770
00:39:41,459 --> 00:39:46,709
currently say Ansel Easton a should be

771
00:39:44,400 --> 00:39:49,170
discarded I think my II does not even

772
00:39:46,709 --> 00:39:51,899
violate the current statement should not

773
00:39:49,170 --> 00:39:53,910
means me but I believe we probably

774
00:39:51,900 --> 00:39:56,489
should say should here because it's a

775
00:39:53,910 --> 00:39:58,259
good idea if you have a host on the

776
00:39:56,489 --> 00:40:01,249
network then probably it makes sense to

777
00:39:58,259 --> 00:40:04,829
create an entry proactively disruption

778
00:40:01,249 --> 00:40:07,529
what bad gonna happen if you do this if

779
00:40:04,829 --> 00:40:10,859
there is an entry already then nothing

780
00:40:07,529 --> 00:40:12,869
would happen because receiving Ansel

781
00:40:10,859 --> 00:40:15,660
Easton a might in the worst case

782
00:40:12,869 --> 00:40:18,509
scenario updates the entry state to

783
00:40:15,660 --> 00:40:20,940
income to stale which again would not

784
00:40:18,509 --> 00:40:23,670
disrupt any traffic it might just

785
00:40:20,940 --> 00:40:27,059
trigger additional cycle of neighbors in

786
00:40:23,670 --> 00:40:29,640
neighbor solicitations if if there is

787
00:40:27,059 --> 00:40:32,910
incomplete entry well this tricky right

788
00:40:29,640 --> 00:40:35,729
it means that router already started

789
00:40:32,910 --> 00:40:38,640
address resolution so router has sent

790
00:40:35,729 --> 00:40:42,029
and multicast honest then my new host

791
00:40:38,640 --> 00:40:44,489
sends this unsolicited naa in this case

792
00:40:42,029 --> 00:40:48,779
entry changed from incomplete to stale

793
00:40:44,489 --> 00:40:51,209
and it will sit in the stale until the

794
00:40:48,779 --> 00:40:53,009
rightful owner responds so I'm talking

795
00:40:51,209 --> 00:40:55,709
about situation when someone might have

796
00:40:53,009 --> 00:40:58,289
that address already because we can

797
00:40:55,709 --> 00:41:01,109
expect that Solis the 10a will have

798
00:40:58,289 --> 00:41:03,630
overwrite said then the target and

799
00:41:01,109 --> 00:41:06,390
target link layer address included then

800
00:41:03,630 --> 00:41:08,549
style will come become reachable so the

801
00:41:06,390 --> 00:41:11,038
only moment when some traffic might go

802
00:41:08,549 --> 00:41:14,239
to the wrong destination will be between

803
00:41:11,039 --> 00:41:17,699
receiving na and unsolicited na and

804
00:41:14,239 --> 00:41:20,339
before Solis that comes but in real life

805
00:41:17,699 --> 00:41:23,640
the traffic would be dropped anyway

806
00:41:20,339 --> 00:41:26,729
because before Solis the tane came there

807
00:41:23,640 --> 00:41:29,670
is no enter right so I did not find the

808
00:41:26,729 --> 00:41:32,009
scenario when it might be disruptive but

809
00:41:29,670 --> 00:41:33,660
I might be wrong right so I I would like

810
00:41:32,009 --> 00:41:34,349
people to read this draft and tell me

811
00:41:33,660 --> 00:41:38,449
where I'm wrong

812
00:41:34,349 --> 00:41:38,449
Eric you already found when I wrong good

813
00:41:41,780 --> 00:41:47,120
if the neighbor is err client if the

814
00:41:43,670 --> 00:41:49,370
neighbor is in probe state if it's ins a

815
00:41:47,120 --> 00:41:51,880
probe then you receive an unsolicited a

816
00:41:49,370 --> 00:41:56,600
you haven't verified to a reach ability

817
00:41:51,880 --> 00:41:59,630
yeah okay and short-circuit as far as I

818
00:41:56,600 --> 00:42:00,710
can remember if it's in any state except

819
00:41:59,630 --> 00:42:03,230
incomplete

820
00:42:00,710 --> 00:42:05,390
it does nothing it will just move it to

821
00:42:03,230 --> 00:42:08,480
stale so we're not gonna update the

822
00:42:05,390 --> 00:42:11,410
cache there is no condition in which any

823
00:42:08,480 --> 00:42:15,440
entry except incomplete might be updated

824
00:42:11,410 --> 00:42:17,149
yeah so there's one thing that you're

825
00:42:15,440 --> 00:42:20,660
not in general this makes a lot of sense

826
00:42:17,150 --> 00:42:22,190
the the nitty details is about this

827
00:42:20,660 --> 00:42:30,100
doesn't specify whether you set the

828
00:42:22,190 --> 00:42:35,810
override Fagin this or not and for it I

829
00:42:30,100 --> 00:42:37,400
read all of the purple stars I was

830
00:42:35,810 --> 00:42:42,049
attracted by the purple color and they

831
00:42:37,400 --> 00:42:43,730
didn't read that I noted yesterday but I

832
00:42:42,050 --> 00:42:46,580
was thinking it doesn't make sense to me

833
00:42:43,730 --> 00:42:48,020
but to submit zero one like ten minutes

834
00:42:46,580 --> 00:42:51,340
before the session right yeah I will

835
00:42:48,020 --> 00:42:55,009
update it in the draft yeah Dave Miller

836
00:42:51,340 --> 00:42:57,050
so on the previous slide I think yeah I

837
00:42:55,010 --> 00:42:59,480
have no problems with a slide and should

838
00:42:57,050 --> 00:43:00,860
maybe should yeah sure I think what I

839
00:42:59,480 --> 00:43:04,700
wanted to observe is that for the router

840
00:43:00,860 --> 00:43:06,140
behavior my reading is that on the slide

841
00:43:04,700 --> 00:43:07,430
that you had a ways back that you said

842
00:43:06,140 --> 00:43:08,690
this is true for hosts but not for

843
00:43:07,430 --> 00:43:11,270
routers or whatever where it was a

844
00:43:08,690 --> 00:43:13,010
should my belief is that any router that

845
00:43:11,270 --> 00:43:14,420
does this is still compliant with 4860

846
00:43:13,010 --> 00:43:17,540
was yeah it just doesn't follow that

847
00:43:14,420 --> 00:43:19,550
should so this is just an elaboration on

848
00:43:17,540 --> 00:43:20,990
when you might not follow that should

849
00:43:19,550 --> 00:43:22,370
this is not actually any change to the

850
00:43:20,990 --> 00:43:24,830
router behavior here yeah

851
00:43:22,370 --> 00:43:26,270
yes it's just an informative elaboration

852
00:43:24,830 --> 00:43:27,380
on what should means and for a router

853
00:43:26,270 --> 00:43:28,910
you probably don't to follow that should

854
00:43:27,380 --> 00:43:30,710
that's what you're saying here yeah yeah

855
00:43:28,910 --> 00:43:32,060
yeah I just didn't do my stuff in the

856
00:43:30,710 --> 00:43:33,410
slave so that's why the bottom half I

857
00:43:32,060 --> 00:43:35,630
can't argue with because I believe

858
00:43:33,410 --> 00:43:36,890
that's already 48 61 compliant at the

859
00:43:35,630 --> 00:43:38,600
top half of this is the only interaction

860
00:43:36,890 --> 00:43:39,799
proposing as a change and that's one

861
00:43:38,600 --> 00:43:41,569
that I'm saying I don't see a problem

862
00:43:39,800 --> 00:43:43,880
with that offhand although you might

863
00:43:41,570 --> 00:43:47,030
want to say that this whole thing is

864
00:43:43,880 --> 00:43:49,160
just a may because the host isn't broken

865
00:43:47,030 --> 00:43:51,170
per se if it doesn't send a bunch of

866
00:43:49,160 --> 00:43:54,589
back to back things or whatever and so

867
00:43:51,170 --> 00:43:55,720
it's really do us more of a ipv6 no

868
00:43:54,590 --> 00:43:57,340
requirements question

869
00:43:55,720 --> 00:44:00,279
right you want to claim that all the

870
00:43:57,340 --> 00:44:02,080
legacy stuff is is is no longer

871
00:44:00,280 --> 00:44:04,480
compliant or do you say it's compliant

872
00:44:02,080 --> 00:44:06,098
it's just not optimally efficient okay

873
00:44:04,480 --> 00:44:07,810
and so that's what I mean by is this

874
00:44:06,099 --> 00:44:09,700
just a May is this in a separate

875
00:44:07,810 --> 00:44:11,759
document that's a May or optional or

876
00:44:09,700 --> 00:44:14,799
whatever that's the only question I have

877
00:44:11,760 --> 00:44:16,660
so basically it usually it was v6 ops

878
00:44:14,800 --> 00:44:19,810
because I was thinking actually not even

879
00:44:16,660 --> 00:44:21,490
updated anything in 46 to 1 but then it

880
00:44:19,810 --> 00:44:23,560
was suggestion my don't release it it's

881
00:44:21,490 --> 00:44:25,598
actually protocol change because now we

882
00:44:23,560 --> 00:44:29,859
suggest that host should send some

883
00:44:25,599 --> 00:44:32,140
packets right here so I looked at 48 61

884
00:44:29,859 --> 00:44:33,190
and checked my memory and assuming I was

885
00:44:32,140 --> 00:44:35,379
looking at the right place isn't it

886
00:44:33,190 --> 00:44:38,410
missing other place it allows sending

887
00:44:35,380 --> 00:44:40,330
unsolicited ascend A's right now

888
00:44:38,410 --> 00:44:42,190
but it does so in the condition that

889
00:44:40,330 --> 00:44:43,509
your link layer address changes yeah

890
00:44:42,190 --> 00:44:44,830
like yeah you just had a change in your

891
00:44:43,510 --> 00:44:46,420
MAC address or something like that and

892
00:44:44,830 --> 00:44:47,770
you want to proactively do it that's the

893
00:44:46,420 --> 00:44:49,359
only cases called out in there that I've

894
00:44:47,770 --> 00:44:50,980
noticed so far what you're doing is

895
00:44:49,359 --> 00:44:52,869
you're adding a second condition that

896
00:44:50,980 --> 00:44:54,369
says I'd like to do it as soon as a new

897
00:44:52,869 --> 00:44:55,960
address is configured and that's the

898
00:44:54,369 --> 00:44:58,150
purpose of the Edition yes so basically

899
00:44:55,960 --> 00:45:00,930
proposed change actually I think a

900
00:44:58,150 --> 00:45:04,390
paragraph just after that what yeah

901
00:45:00,930 --> 00:45:06,549
pravin actually I think like Windows or

902
00:45:04,390 --> 00:45:08,560
at least and the gratuitous in a right

903
00:45:06,550 --> 00:45:12,760
after duplicate address detection

904
00:45:08,560 --> 00:45:14,710
completes so this is what I was

905
00:45:12,760 --> 00:45:16,540
suggesting you might want if you use an

906
00:45:14,710 --> 00:45:19,300
optimistic that you might even want to

907
00:45:16,540 --> 00:45:21,220
do it before there was ways overwrite

908
00:45:19,300 --> 00:45:24,339
flag set to zero you're not disturbing

909
00:45:21,220 --> 00:45:26,140
anything so because again people systems

910
00:45:24,339 --> 00:45:27,520
which I used an optimistic dad probably

911
00:45:26,140 --> 00:45:28,868
do it for reason because they want to

912
00:45:27,520 --> 00:45:30,910
start syncing traffic as soon as

913
00:45:28,869 --> 00:45:32,940
possible so theoretically you might get

914
00:45:30,910 --> 00:45:39,098
richer in traffic before you dot

915
00:45:32,940 --> 00:45:41,200
completely not like again just you going

916
00:45:39,099 --> 00:45:43,540
back and for the day in the case that

917
00:45:41,200 --> 00:45:48,368
the MAC address changes you want to set

918
00:45:43,540 --> 00:45:51,790
override to true right so you spec says

919
00:45:48,369 --> 00:45:54,220
in generally it's a you set it to either

920
00:45:51,790 --> 00:45:55,690
one but in in practice if you want to

921
00:45:54,220 --> 00:45:57,730
get the benefits in that case you would

922
00:45:55,690 --> 00:45:59,290
set it and here you wouldn't yeah yeah

923
00:45:57,730 --> 00:46:04,930
you're so like again I will update the

924
00:45:59,290 --> 00:46:09,430
text so here is question to the audience

925
00:46:04,930 --> 00:46:11,859
if does it make sense if does can be

926
00:46:09,430 --> 00:46:14,379
for adoption and the site question

927
00:46:11,860 --> 00:46:16,660
actually is currently be six jobs draft

928
00:46:14,380 --> 00:46:18,700
enumerate all possible solutions such as

929
00:46:16,660 --> 00:46:21,339
the we're doing those two sins and

930
00:46:18,700 --> 00:46:23,140
brings it here shall we keep all

931
00:46:21,340 --> 00:46:25,030
possible solutions in this draft

932
00:46:23,140 --> 00:46:27,790
occupied in v6 hopes I don't have

933
00:46:25,030 --> 00:46:32,080
opinions in just a matter of where with

934
00:46:27,790 --> 00:46:33,700
the comment stuff so so one question so

935
00:46:32,080 --> 00:46:37,540
one other change you're making is that

936
00:46:33,700 --> 00:46:42,460
the unsolicited n/a will now have a old

937
00:46:37,540 --> 00:46:44,800
reaches destination address as I like

938
00:46:42,460 --> 00:46:49,630
yeah I forgot to put on the slide yeah

939
00:46:44,800 --> 00:46:51,430
just to minimize the noise and I we

940
00:46:49,630 --> 00:46:52,870
might send it to all halls but I don't

941
00:46:51,430 --> 00:46:55,390
think it's useful because it's actually

942
00:46:52,870 --> 00:46:57,520
intended for outers and I do not think

943
00:46:55,390 --> 00:46:59,830
it's it's violates any existing

944
00:46:57,520 --> 00:47:03,340
standards because I think the current

945
00:46:59,830 --> 00:47:05,710
standard says usually the destination of

946
00:47:03,340 --> 00:47:07,000
unsolicited assets all hosts it's not

947
00:47:05,710 --> 00:47:09,250
even I do not even see it as a

948
00:47:07,000 --> 00:47:11,830
requirement so suggestion is to send it

949
00:47:09,250 --> 00:47:13,800
to all others but probably we can send

950
00:47:11,830 --> 00:47:17,470
it to all hosts

951
00:47:13,800 --> 00:47:19,060
d-dave they were I came up to you

952
00:47:17,470 --> 00:47:20,410
because you asked the question of him

953
00:47:19,060 --> 00:47:22,420
does it make sense and what should you

954
00:47:20,410 --> 00:47:25,180
do with the all possible solutions and

955
00:47:22,420 --> 00:47:26,560
so on and so my comment on that is for

956
00:47:25,180 --> 00:47:29,799
the purse that you showed in the

957
00:47:26,560 --> 00:47:31,330
proposal yes that makes sense and I

958
00:47:29,800 --> 00:47:33,970
think it would make sense for six men to

959
00:47:31,330 --> 00:47:35,410
do that part as far as what to do with

960
00:47:33,970 --> 00:47:37,810
the list of all the other possibilities

961
00:47:35,410 --> 00:47:39,910
I would say leave it in the expired

962
00:47:37,810 --> 00:47:41,350
internet draft which will always be

963
00:47:39,910 --> 00:47:43,330
accessible but don't publish it as an

964
00:47:41,350 --> 00:47:45,610
RFC and the reason for that is if you

965
00:47:43,330 --> 00:47:47,380
publish all possible ways to do

966
00:47:45,610 --> 00:47:49,150
something people will start reading

967
00:47:47,380 --> 00:47:51,480
internet drafts for every single one of

968
00:47:49,150 --> 00:47:55,000
those over the next 20 years

969
00:47:51,480 --> 00:47:56,680
so my understanding Kay is currently all

970
00:47:55,000 --> 00:47:58,750
possible solutions belong to Bishop

971
00:47:56,680 --> 00:48:01,839
swabs draft in the format here is the

972
00:47:58,750 --> 00:48:03,190
problem we had all those ideas what to

973
00:48:01,840 --> 00:48:05,950
do with them starting from doing nothing

974
00:48:03,190 --> 00:48:08,410
and we decided there are two good things

975
00:48:05,950 --> 00:48:10,870
we can do and what we did in six men

976
00:48:08,410 --> 00:48:13,480
however as far as I know some vendors do

977
00:48:10,870 --> 00:48:16,000
already doing some of those additional

978
00:48:13,480 --> 00:48:18,580
things as well and I don't think as they

979
00:48:16,000 --> 00:48:20,770
have pros and cons so at least yeah we

980
00:48:18,580 --> 00:48:22,810
can probably keep on these are things

981
00:48:20,770 --> 00:48:23,330
that operators can already do by

982
00:48:22,810 --> 00:48:24,770
tweaking

983
00:48:23,330 --> 00:48:26,450
things meaning things that are already

984
00:48:24,770 --> 00:48:29,570
compliant you're changing which things

985
00:48:26,450 --> 00:48:31,580
are configured which rfcs are turned on

986
00:48:29,570 --> 00:48:33,950
and off and whether shoulds or maze or

987
00:48:31,580 --> 00:48:35,180
on and off that part is fine if you're

988
00:48:33,950 --> 00:48:36,980
saying here's a bunch of ways you can

989
00:48:35,180 --> 00:48:38,390
invent new technologies for new

990
00:48:36,980 --> 00:48:40,670
mechanisms for the involved changes

991
00:48:38,390 --> 00:48:42,710
RFC's I'd say don't put that in an RFC

992
00:48:40,670 --> 00:48:44,870
just leave it in your doctor in a

993
00:48:42,710 --> 00:48:46,700
document right now but it's not

994
00:48:44,870 --> 00:48:50,450
published yes so he's clearly answering

995
00:48:46,700 --> 00:48:52,490
your question that this don't leave

996
00:48:50,450 --> 00:48:54,830
those other solutions in the other draft

997
00:48:52,490 --> 00:48:59,540
take them out and they will still exist

998
00:48:54,830 --> 00:49:01,520
forever in an expired draft suresh

999
00:48:59,540 --> 00:49:03,350
krisshnan so it kind of makes sense to

1000
00:49:01,520 --> 00:49:06,920
me there's like some work I think you

1001
00:49:03,350 --> 00:49:11,270
need to do specifically the gratuitous

1002
00:49:06,920 --> 00:49:12,830
na s going to doll hosts as well as all

1003
00:49:11,270 --> 00:49:14,570
daughters because it's not clear with

1004
00:49:12,830 --> 00:49:16,490
the new text in the draft whether you're

1005
00:49:14,570 --> 00:49:18,380
still sending the almost one as well or

1006
00:49:16,490 --> 00:49:20,720
just sending all daughters one so I

1007
00:49:18,380 --> 00:49:24,380
think you need to verify that okay point

1008
00:49:20,720 --> 00:49:28,189
taken to make sense okay so the chairs

1009
00:49:24,380 --> 00:49:31,970
have now been on training for how to get

1010
00:49:28,190 --> 00:49:35,230
consensus in a working group and so this

1011
00:49:31,970 --> 00:49:38,080
is not going to be a hum for adoption

1012
00:49:35,230 --> 00:49:42,550
it's going to be a hum against adoption

1013
00:49:38,080 --> 00:49:44,870
so but any objectors here who think that

1014
00:49:42,550 --> 00:49:46,820
doing this solution that is proposed

1015
00:49:44,870 --> 00:49:50,060
here would be a bad idea or break

1016
00:49:46,820 --> 00:49:51,860
something can you please get up now or

1017
00:49:50,060 --> 00:49:55,370
if you don't dare to get up now you can

1018
00:49:51,860 --> 00:50:04,670
hum quietly and we'll count that as an

1019
00:49:55,370 --> 00:50:07,100
objection Eric earring again individual

1020
00:50:04,670 --> 00:50:09,290
contributor I like this don't take me

1021
00:50:07,100 --> 00:50:11,960
wrong right so you know ham my only

1022
00:50:09,290 --> 00:50:14,630
concern is that it's v6 up you come up

1023
00:50:11,960 --> 00:50:17,000
with five solution then we could end up

1024
00:50:14,630 --> 00:50:19,580
with five solution here the router

1025
00:50:17,000 --> 00:50:20,990
vendors implement one two three and it

1026
00:50:19,580 --> 00:50:25,069
was when they implement two four and

1027
00:50:20,990 --> 00:50:26,810
five we end up nowhere so I think it can

1028
00:50:25,070 --> 00:50:29,000
be six tops draft enumerate things I'm

1029
00:50:26,810 --> 00:50:30,710
insane pros and cons and for some of the

1030
00:50:29,000 --> 00:50:35,870
machine it saying it's not going to work

1031
00:50:30,710 --> 00:50:37,970
at all for example si boot here knees

1032
00:50:35,870 --> 00:50:40,339
are thinking ns or arrests

1033
00:50:37,970 --> 00:50:43,399
would work optimistic addresses right so

1034
00:50:40,340 --> 00:50:45,920
I put I can put them in the section

1035
00:50:43,400 --> 00:50:48,230
considered by discard that right

1036
00:50:45,920 --> 00:50:50,720
I can rephrase v6 ops drafts obviously

1037
00:50:48,230 --> 00:50:53,180
yeah because initially until now I don't

1038
00:50:50,720 --> 00:50:54,680
know if it's all make sense I would

1039
00:50:53,180 --> 00:50:57,580
expect some people to come and tell me

1040
00:50:54,680 --> 00:51:00,140
that I'm gonna break stuff right so it's

1041
00:50:57,580 --> 00:51:01,850
so from a 6-minute perspective I think

1042
00:51:00,140 --> 00:51:05,330
these six ops have presented us with a

1043
00:51:01,850 --> 00:51:08,660
problem and we're picking a solution and

1044
00:51:05,330 --> 00:51:11,319
I think it's Dave and Bob said you know

1045
00:51:08,660 --> 00:51:13,549
we can leave those alternatives in a

1046
00:51:11,320 --> 00:51:16,130
expired internet draft we certainly

1047
00:51:13,550 --> 00:51:18,110
don't want to include them or talk about

1048
00:51:16,130 --> 00:51:20,420
them here I think we're going to pick

1049
00:51:18,110 --> 00:51:23,840
one solution and stand there as we pick

1050
00:51:20,420 --> 00:51:26,120
one solution another solution yeah so I

1051
00:51:23,840 --> 00:51:30,070
see Fred coming up representing v6 ops

1052
00:51:26,120 --> 00:51:30,069
and we'll hear his side of the story

1053
00:51:31,150 --> 00:51:38,570
Fred Baker who knows nothing about v6

1054
00:51:33,920 --> 00:51:40,430
hops I guess my question is what expired

1055
00:51:38,570 --> 00:51:42,650
draft are we talking about are you

1056
00:51:40,430 --> 00:51:46,339
saying that you want v6 ops to take

1057
00:51:42,650 --> 00:51:51,590
Jen's draft that we have and just let it

1058
00:51:46,340 --> 00:51:55,730
expire she will do an update to that

1059
00:51:51,590 --> 00:51:59,240
draft so the if they all won't be in the

1060
00:51:55,730 --> 00:52:01,840
plus whatever version is now they'll go

1061
00:51:59,240 --> 00:52:04,459
away in the current in the next version

1062
00:52:01,840 --> 00:52:07,160
but the current version will you know

1063
00:52:04,460 --> 00:52:08,900
she will have to two drafts in v6 ops

1064
00:52:07,160 --> 00:52:11,660
one of which we will allow to no she

1065
00:52:08,900 --> 00:52:16,220
will do a replacement draft which will

1066
00:52:11,660 --> 00:52:18,620
only have one solution in it but that

1067
00:52:16,220 --> 00:52:20,779
older have no pillar in the repository

1068
00:52:18,620 --> 00:52:24,109
somewhere Jen what's your triton beat

1069
00:52:20,780 --> 00:52:29,780
six ops as a draft - zero what is it's

1070
00:52:24,110 --> 00:52:31,220
currently zero zero would remove the

1071
00:52:29,780 --> 00:52:33,230
complete list and then could still go to

1072
00:52:31,220 --> 00:52:34,640
RFC and so the thing that has expired is

1073
00:52:33,230 --> 00:52:35,930
probably the wrong term to address zero

1074
00:52:34,640 --> 00:52:38,180
zero version will always be available

1075
00:52:35,930 --> 00:52:40,549
with the full stuff but the one that dr.

1076
00:52:38,180 --> 00:52:41,569
0-1 and later to RFC will not dad I

1077
00:52:40,550 --> 00:52:45,800
understand

1078
00:52:41,570 --> 00:52:51,680
okay yeah thanks a lot Dave for that

1079
00:52:45,800 --> 00:52:53,930
clarification yes I think I mean our

1080
00:52:51,680 --> 00:52:56,149
reading both of the v6 ops lists six-man

1081
00:52:53,930 --> 00:52:59,270
and this room is that there is consensus

1082
00:52:56,150 --> 00:53:01,940
that of this document I don't think it

1083
00:52:59,270 --> 00:53:05,660
is necessary to do harm for any

1084
00:53:01,940 --> 00:53:10,340
objectors did I yeah I didn't hear

1085
00:53:05,660 --> 00:53:14,200
anything I didn't mean to do good super

1086
00:53:10,340 --> 00:53:14,200
will confirm that own list Thank You Jen

1087
00:53:14,500 --> 00:53:28,310
okay Keys epi

1088
00:53:16,610 --> 00:53:31,190
are you uh are you here hello this is

1089
00:53:28,310 --> 00:53:34,130
happen and we are going to present the

1090
00:53:31,190 --> 00:53:37,820
ipv6 application for the afternoon of

1091
00:53:34,130 --> 00:53:42,380
the alternate marking method so just a

1092
00:53:37,820 --> 00:53:44,000
quick recap for this methodology so this

1093
00:53:42,380 --> 00:53:46,760
is basically an eye on performance

1094
00:53:44,000 --> 00:53:49,220
measurement technique that allow the two

1095
00:53:46,760 --> 00:53:51,620
met to measure the packet loss delay and

1096
00:53:49,220 --> 00:53:54,549
delay variation and you see the

1097
00:53:51,620 --> 00:53:56,960
reference so we have an air FSC 8321

1098
00:53:54,550 --> 00:53:59,330
basically for point-to-point measurement

1099
00:53:56,960 --> 00:54:02,140
and also the extension that we consider

1100
00:53:59,330 --> 00:54:04,610
as this evolution that is multi-point

1101
00:54:02,140 --> 00:54:08,230
alternate marking draft that allows

1102
00:54:04,610 --> 00:54:12,800
flexible application of this methodology

1103
00:54:08,230 --> 00:54:16,760
but basically it is us also the name

1104
00:54:12,800 --> 00:54:20,360
suggests is the alternation of two value

1105
00:54:16,760 --> 00:54:23,150
tube its value for example between red

1106
00:54:20,360 --> 00:54:25,580
and blue and red counters are running

1107
00:54:23,150 --> 00:54:28,610
the blue counters are sealed so we can

1108
00:54:25,580 --> 00:54:30,620
get the counters during the still period

1109
00:54:28,610 --> 00:54:32,300
and by comparison we can calculate

1110
00:54:30,620 --> 00:54:36,440
pocketers so basically it's very simple

1111
00:54:32,300 --> 00:54:38,360
and same methodology apply also to delay

1112
00:54:36,440 --> 00:54:43,910
and delay variation what are the main

1113
00:54:38,360 --> 00:54:45,920
strengths that it works without my own

1114
00:54:43,910 --> 00:54:48,040
pockets that divide precisely the

1115
00:54:45,920 --> 00:54:51,260
traffic so we don't need to inject

1116
00:54:48,040 --> 00:54:54,200
nothing in our flow it works on real

1117
00:54:51,260 --> 00:54:55,490
production traffic it works also if you

1118
00:54:54,200 --> 00:54:59,540
have out of sequence so

1119
00:54:55,490 --> 00:55:02,120
this make this methodology very flexible

1120
00:54:59,540 --> 00:55:03,970
and it works cannot synchronize at the

1121
00:55:02,120 --> 00:55:06,500
network so you don't need a strict

1122
00:55:03,970 --> 00:55:08,509
synchronization because the change of

1123
00:55:06,500 --> 00:55:10,700
marking is sort of out of

1124
00:55:08,510 --> 00:55:14,960
synchronization signal over over the

1125
00:55:10,700 --> 00:55:17,390
network regarding the delay just we have

1126
00:55:14,960 --> 00:55:19,910
two alternatives one is single mark the

1127
00:55:17,390 --> 00:55:22,430
the second is double mark the single

1128
00:55:19,910 --> 00:55:24,890
mark we use one bit I'll beat the so you

1129
00:55:22,430 --> 00:55:27,680
see the alternation between 1 and 0 you

1130
00:55:24,890 --> 00:55:31,040
can do the alternation for fixed set

1131
00:55:27,680 --> 00:55:33,859
period also or based on fixed numbers so

1132
00:55:31,040 --> 00:55:38,270
it is the same change also only the

1133
00:55:33,860 --> 00:55:42,230
implementation and so the albiet can

1134
00:55:38,270 --> 00:55:43,910
it's used for the delay and for first

1135
00:55:42,230 --> 00:55:46,100
sorry for the packet rows while for the

1136
00:55:43,910 --> 00:55:48,589
delay you can take the reference just

1137
00:55:46,100 --> 00:55:51,529
for the first on last pocket of each

1138
00:55:48,590 --> 00:55:54,560
marking period but this doesn't work so

1139
00:55:51,530 --> 00:55:56,540
well in case of reordering so in this

1140
00:55:54,560 --> 00:55:59,240
case you can also calculate the average

1141
00:55:56,540 --> 00:56:02,200
packet delay and delay variation if we

1142
00:55:59,240 --> 00:56:05,479
have the ability to have a second bits

1143
00:56:02,200 --> 00:56:07,399
in this way we can use the first bit for

1144
00:56:05,480 --> 00:56:10,970
the packet rows and second bit for the

1145
00:56:07,400 --> 00:56:16,130
delay in this case you can select some

1146
00:56:10,970 --> 00:56:18,319
packets within each period to follow

1147
00:56:16,130 --> 00:56:20,990
this packet along path and calculate the

1148
00:56:18,320 --> 00:56:23,240
delay for these packets in this case you

1149
00:56:20,990 --> 00:56:25,189
can have a more informative information

1150
00:56:23,240 --> 00:56:28,520
because you can calculate minimum the

1151
00:56:25,190 --> 00:56:32,150
maximum and all the statistics for for

1152
00:56:28,520 --> 00:56:35,960
the delay so you you can have more

1153
00:56:32,150 --> 00:56:39,110
informative matrix okay that is

1154
00:56:35,960 --> 00:56:40,820
basically the methodology if you want

1155
00:56:39,110 --> 00:56:45,440
more detail come to me already

1156
00:56:40,820 --> 00:56:51,980
draft in IP pm what about ipv6 we

1157
00:56:45,440 --> 00:56:54,650
already have presented draft and I think

1158
00:56:51,980 --> 00:56:57,380
in London that makes reporter the

1159
00:56:54,650 --> 00:57:00,680
summary about some alternatives on how

1160
00:56:57,380 --> 00:57:02,660
to apply this methodology so for example

1161
00:57:00,680 --> 00:57:04,850
we reported some alternatives that we

1162
00:57:02,660 --> 00:57:09,230
already investigated about the use of

1163
00:57:04,850 --> 00:57:11,569
ipv6 addresses the ipv6 flow level that

1164
00:57:09,230 --> 00:57:14,930
we cannot use of course because ipv6

1165
00:57:11,570 --> 00:57:18,950
addresses is too expensive the use of

1166
00:57:14,930 --> 00:57:21,950
flow labels is against the RFC 64 38

1167
00:57:18,950 --> 00:57:24,290
because it is based on the easy NP so in

1168
00:57:21,950 --> 00:57:29,689
this case if we use flow label to mark

1169
00:57:24,290 --> 00:57:32,720
we can change the the path so in this

1170
00:57:29,690 --> 00:57:34,880
case is not good to make performance and

1171
00:57:32,720 --> 00:57:37,160
to change the part at the same time so

1172
00:57:34,880 --> 00:57:39,650
the only way in summary you can say that

1173
00:57:37,160 --> 00:57:44,180
the only way is to use the an option

1174
00:57:39,650 --> 00:57:49,970
either if we consider the ipv6 or the

1175
00:57:44,180 --> 00:57:52,009
IDL V if we consider the SH our idea is

1176
00:57:49,970 --> 00:57:54,470
to define and generalize alternate

1177
00:57:52,010 --> 00:57:57,680
marking data fields we have made

1178
00:57:54,470 --> 00:58:02,328
considering all the deployment use cases

1179
00:57:57,680 --> 00:58:04,640
that we have we think that we can

1180
00:58:02,329 --> 00:58:08,329
generalize this data field so as I said

1181
00:58:04,640 --> 00:58:12,109
we need to marking 4 bits to marking

1182
00:58:08,329 --> 00:58:14,569
leads so L built and D bit one for loss

1183
00:58:12,109 --> 00:58:18,500
and the other for delay we considered

1184
00:58:14,569 --> 00:58:21,589
also a flow monitoring identified in T

1185
00:58:18,500 --> 00:58:23,660
fire so I 20 bits that is not like the

1186
00:58:21,589 --> 00:58:26,660
flow label but allow us to make a

1187
00:58:23,660 --> 00:58:29,270
Freudian TIFF occasion this is not

1188
00:58:26,660 --> 00:58:30,980
crucial for the methodology but can be

1189
00:58:29,270 --> 00:58:32,960
very useful for the deployed for

1190
00:58:30,980 --> 00:58:37,119
deployment area for deployment reason

1191
00:58:32,960 --> 00:58:41,869
and then we put some reserve 8 bit for

1192
00:58:37,119 --> 00:58:45,470
future use and this basic this data

1193
00:58:41,869 --> 00:58:51,619
fields we want to include in an option

1194
00:58:45,470 --> 00:58:54,770
header or a necessary htlv so we

1195
00:58:51,619 --> 00:58:57,290
investigated some alternatives also

1196
00:58:54,770 --> 00:59:01,069
there was some discussion on the mailing

1197
00:58:57,290 --> 00:59:03,140
list and you can use this option as up

1198
00:59:01,069 --> 00:59:05,420
by up has destination option other

1199
00:59:03,140 --> 00:59:10,790
depending on which measure you want to

1200
00:59:05,420 --> 00:59:12,290
activate or in NS htlv for example in we

1201
00:59:10,790 --> 00:59:15,069
are making a summary of the the

1202
00:59:12,290 --> 00:59:17,630
alternative options that you may have

1203
00:59:15,069 --> 00:59:19,940
you can have a destination option in

1204
00:59:17,630 --> 00:59:22,310
this case you can measure the end to end

1205
00:59:19,940 --> 00:59:23,160
with the destination address the hop by

1206
00:59:22,310 --> 00:59:25,799
up option if

1207
00:59:23,160 --> 00:59:29,009
you want to measure foreign every router

1208
00:59:25,800 --> 00:59:32,670
on the path an ester htlv in this case

1209
00:59:29,010 --> 00:59:35,400
you can allow the matrix on every node

1210
00:59:32,670 --> 00:59:38,490
along the SH pad and also a combination

1211
00:59:35,400 --> 00:59:42,020
and of destination option and the CH but

1212
00:59:38,490 --> 00:59:47,069
if this is basically the same the same

1213
00:59:42,020 --> 00:59:48,150
SL htlv so we can mention only for for

1214
00:59:47,070 --> 00:59:52,920
cosmetic reason

1215
00:59:48,150 --> 00:59:54,720
and as I said this is not zero zero

1216
00:59:52,920 --> 00:59:58,260
version because we didn't present last

1217
00:59:54,720 --> 01:00:00,089
time this is zero one and we got several

1218
00:59:58,260 --> 01:00:03,210
comments on mini list in particularly

1219
01:00:00,090 --> 01:00:04,920
want to thank Bob all Tom and Stefano

1220
01:00:03,210 --> 01:00:08,040
that give us some feedback and

1221
01:00:04,920 --> 01:00:10,020
provements to the document in particular

1222
01:00:08,040 --> 01:00:11,610
to investigate the alternatives and to

1223
01:00:10,020 --> 01:00:16,020
adjust some time the wording of the

1224
01:00:11,610 --> 01:00:19,620
draft as next step so I think we have

1225
01:00:16,020 --> 01:00:22,560
found an agreed way to apply the FEC

1226
01:00:19,620 --> 01:00:24,690
8321 and its evolution in particular

1227
01:00:22,560 --> 01:00:28,290
because we look also to the multi point

1228
01:00:24,690 --> 01:00:31,020
of mark methodology for ipv6 and we

1229
01:00:28,290 --> 01:00:32,880
asked for comments feedback and of

1230
01:00:31,020 --> 01:00:37,290
course we would like to go for the

1231
01:00:32,880 --> 01:00:39,600
adoption but it's up to you so what is

1232
01:00:37,290 --> 01:00:42,990
the relationship between the work going

1233
01:00:39,600 --> 01:00:47,790
on in IP p.m. and in this document do

1234
01:00:42,990 --> 01:00:51,390
you mean the alternate marking or in

1235
01:00:47,790 --> 01:00:56,250
bandar on which social team working I

1236
01:00:51,390 --> 01:00:59,190
mean others working on this in the draft

1237
01:00:56,250 --> 01:01:01,770
are only experimental because we cannot

1238
01:00:59,190 --> 01:01:03,630
make standard with this kind of

1239
01:01:01,770 --> 01:01:06,810
methodology so in IP p.m. we are

1240
01:01:03,630 --> 01:01:10,740
basically - we are described in general

1241
01:01:06,810 --> 01:01:16,830
methodology so now we want to apply in

1242
01:01:10,740 --> 01:01:18,890
real protocol big so do what I'm trying

1243
01:01:16,830 --> 01:01:21,750
to ask us think is is you know the

1244
01:01:18,890 --> 01:01:24,210
distribution work between IP p.m. and

1245
01:01:21,750 --> 01:01:27,450
and and 6 man if 6 man is left you know

1246
01:01:24,210 --> 01:01:29,790
defining the you know TLV format and

1247
01:01:27,450 --> 01:01:32,279
perhaps rules of which extension headers

1248
01:01:29,790 --> 01:01:34,230
to go in and and you know the marking

1249
01:01:32,280 --> 01:01:36,960
logic if you like if if that's going to

1250
01:01:34,230 --> 01:01:39,300
stay in IP p.m. for example and I guess

1251
01:01:36,960 --> 01:01:42,720
you know usually if I also look at the

1252
01:01:39,300 --> 01:01:44,730
experience of other methodology the

1253
01:01:42,720 --> 01:01:46,740
protocol the protocol specific

1254
01:01:44,730 --> 01:01:50,300
application are made in the working

1255
01:01:46,740 --> 01:01:52,828
group for example here in six-man and

1256
01:01:50,300 --> 01:01:55,109
but the methodology the general

1257
01:01:52,829 --> 01:01:59,430
methodology we are working of course in

1258
01:01:55,109 --> 01:02:02,040
a ppm because it is protocol agnostic we

1259
01:01:59,430 --> 01:02:06,450
can say so you can apply to other kind

1260
01:02:02,040 --> 01:02:14,759
of protocols and yet how many people are

1261
01:02:06,450 --> 01:02:29,160
ready stuffed okay hands down I counted

1262
01:02:14,760 --> 01:02:31,920
you I think we you know let us have a

1263
01:02:29,160 --> 01:02:33,868
you know chat with the I ppm okay ad

1264
01:02:31,920 --> 01:02:35,700
chairs as well and and then you know

1265
01:02:33,869 --> 01:02:37,740
certainly want to see continued

1266
01:02:35,700 --> 01:02:39,270
discussion on the mailing list as well

1267
01:02:37,740 --> 01:02:41,970
and you know figure out on a mailing

1268
01:02:39,270 --> 01:02:44,220
list and then you know with you know see

1269
01:02:41,970 --> 01:02:49,470
the next step as as adoption er okay

1270
01:02:44,220 --> 01:02:56,939
super thank you thank you okay mark

1271
01:02:49,470 --> 01:02:59,009
Europe hello max me some first idea for

1272
01:02:56,940 --> 01:03:00,119
Ben to sort of in a long time I've been

1273
01:02:59,010 --> 01:03:02,460
on the mailing list for a very long time

1274
01:03:00,119 --> 01:03:04,230
this is a bit blue sky and I've fallen

1275
01:03:02,460 --> 01:03:07,710
over you habit of using bullet points so

1276
01:03:04,230 --> 01:03:08,819
you might only find two or three okay

1277
01:03:07,710 --> 01:03:11,130
whoops

1278
01:03:08,819 --> 01:03:14,700
ipv6 formal any cast and functionally

1279
01:03:11,130 --> 01:03:16,740
accursed addresses current ipv6 anycast

1280
01:03:14,700 --> 01:03:19,950
addresses are from within the unicast

1281
01:03:16,740 --> 01:03:22,740
address space and as our seat 4291 says

1282
01:03:19,950 --> 01:03:24,868
they're indistinguishable to configure

1283
01:03:22,740 --> 01:03:26,240
any cast it's it's usually a flag on an

1284
01:03:24,869 --> 01:03:28,740
interface when you configure an address

1285
01:03:26,240 --> 01:03:32,430
what that does is it disables duple hood

1286
01:03:28,740 --> 01:03:34,229
address detection and to get them

1287
01:03:32,430 --> 01:03:37,529
available in the routing domain you have

1288
01:03:34,230 --> 01:03:39,599
to inject it somehow it's treated as

1289
01:03:37,530 --> 01:03:41,880
unicast by routing the main protocols

1290
01:03:39,599 --> 01:03:44,069
and other hosts I think that's a

1291
01:03:41,880 --> 01:03:48,119
negative sometimes if you happen to have

1292
01:03:44,069 --> 01:03:50,788
duplicate route table entries that's a

1293
01:03:48,119 --> 01:03:52,289
fault if it's unintentional

1294
01:03:50,789 --> 01:03:56,339
but if it's intentional then it's

1295
01:03:52,289 --> 01:03:59,910
probably anycast the forwarding scopes

1296
01:03:56,339 --> 01:04:02,549
or domains for these types of anycast

1297
01:03:59,910 --> 01:04:04,799
addresses is fairly cost we have global

1298
01:04:02,549 --> 01:04:06,599
local network and link what about

1299
01:04:04,799 --> 01:04:09,650
something a bit more discrete such as

1300
01:04:06,599 --> 01:04:12,359
realm administrative or organizational

1301
01:04:09,650 --> 01:04:14,189
another thought or an example is that

1302
01:04:12,359 --> 01:04:16,469
applications or protocols can't

1303
01:04:14,189 --> 01:04:19,319
distinguish unicast or anycast addresses

1304
01:04:16,469 --> 01:04:22,499
without manual configuration an idea is

1305
01:04:19,319 --> 01:04:24,419
to have multipath TCP or UDP establish

1306
01:04:22,499 --> 01:04:26,640
using anycast and then switch to using a

1307
01:04:24,419 --> 01:04:29,549
unicast and it would be useful to be

1308
01:04:26,640 --> 01:04:31,969
able to distinguish the address types so

1309
01:04:29,549 --> 01:04:35,819
the thought I've had is to have a formal

1310
01:04:31,969 --> 01:04:39,329
ipv6 anycast address space my thought is

1311
01:04:35,819 --> 01:04:42,509
a a soshite or possibly FA for formal

1312
01:04:39,329 --> 01:04:45,449
anycast they're both available there's

1313
01:04:42,509 --> 01:04:47,400
actually not my idea the earliest RFC

1314
01:04:45,449 --> 01:04:50,880
one of the earliest if not early star of

1315
01:04:47,400 --> 01:04:52,949
C's on any Casper 1546 suggested two

1316
01:04:50,880 --> 01:04:55,049
ways of supporting anycast and one of

1317
01:04:52,949 --> 01:04:59,759
them was to have a well known class of

1318
01:04:55,049 --> 01:05:01,679
addresses with the advantages being it's

1319
01:04:59,759 --> 01:05:03,869
easier to determine and addresses in

1320
01:05:01,679 --> 01:05:07,289
anycast address and well-known anycast

1321
01:05:03,869 --> 01:05:08,909
addresses are easy to support if we have

1322
01:05:07,289 --> 01:05:10,880
a look at some of the existing anycast

1323
01:05:08,909 --> 01:05:13,739
addresses that are already defined

1324
01:05:10,880 --> 01:05:15,089
within a subnet we have the top 127

1325
01:05:13,739 --> 01:05:17,849
addresses they're reserved for this

1326
01:05:15,089 --> 01:05:20,819
purpose and there's a couple of specific

1327
01:05:17,849 --> 01:05:23,489
resident reservations the reserves

1328
01:05:20,819 --> 01:05:26,759
subnet any caste range there's also the

1329
01:05:23,489 --> 01:05:28,890
mobile ipv6 home agents the other one

1330
01:05:26,759 --> 01:05:30,419
that's within a subnet is all zeros for

1331
01:05:28,890 --> 01:05:32,640
this subnet route or any cars address

1332
01:05:30,419 --> 01:05:35,729
these have different scopes and the

1333
01:05:32,640 --> 01:05:38,009
scopes depend on the type of unicast

1334
01:05:35,729 --> 01:05:41,519
prefix in use such as global or link

1335
01:05:38,009 --> 01:05:44,969
local etc there are some others that are

1336
01:05:41,519 --> 01:05:48,569
global globally assigned by iana they've

1337
01:05:44,969 --> 01:05:50,999
discarded discard only address block 164

1338
01:05:48,569 --> 01:05:53,669
that's a network local even though it's

1339
01:05:50,999 --> 01:05:56,788
a globally unique address the port

1340
01:05:53,669 --> 01:05:58,408
control protocol anycast in theory

1341
01:05:56,789 --> 01:06:00,179
that's supposed to be globally reachable

1342
01:05:58,409 --> 01:06:02,969
but if you look at what PCP is about

1343
01:06:00,179 --> 01:06:04,300
it's unlikely you'd have a random PCP

1344
01:06:02,969 --> 01:06:07,000
server somewhere out on the intern

1345
01:06:04,300 --> 01:06:09,160
that you want to send to there's the

1346
01:06:07,000 --> 01:06:13,060
turn one and then there's the as1 one to

1347
01:06:09,160 --> 01:06:14,680
service one looking at these reserved

1348
01:06:13,060 --> 01:06:17,290
well-known addresses I think there are

1349
01:06:14,680 --> 01:06:18,910
three common properties there encoding

1350
01:06:17,290 --> 01:06:21,340
services and functions they're not

1351
01:06:18,910 --> 01:06:24,190
actually hosts or interface identifies

1352
01:06:21,340 --> 01:06:26,620
any unique assets they have different

1353
01:06:24,190 --> 01:06:30,130
number spaces so we have the gor global

1354
01:06:26,620 --> 01:06:32,520
for some of those non guha global and

1355
01:06:30,130 --> 01:06:36,880
subnet ID and they also have different

1356
01:06:32,520 --> 01:06:38,050
forwarding domains or scopes I realize

1357
01:06:36,880 --> 01:06:41,350
that these properties are actually

1358
01:06:38,050 --> 01:06:44,580
similar to what Molly caste has and so

1359
01:06:41,350 --> 01:06:49,720
if the idea of having a formal anycast

1360
01:06:44,580 --> 01:06:52,540
address prefix is good then I think any

1361
01:06:49,720 --> 01:06:54,310
caste is by similar to unicast and it's

1362
01:06:52,540 --> 01:06:55,840
also similar to multicast in the sense

1363
01:06:54,310 --> 01:06:59,080
that it's been used for services and

1364
01:06:55,840 --> 01:07:00,190
functions sort of thinking about where

1365
01:06:59,080 --> 01:07:02,440
that puts any caste

1366
01:07:00,190 --> 01:07:05,430
it's perhaps can be imagined to be

1367
01:07:02,440 --> 01:07:10,750
halfway between unicast and multicast

1368
01:07:05,430 --> 01:07:12,580
one to one one to any and one to many so

1369
01:07:10,750 --> 01:07:14,830
if we were to have a formal anycast

1370
01:07:12,580 --> 01:07:17,290
address space then we could seek some

1371
01:07:14,830 --> 01:07:19,930
inspiration from multicast we have

1372
01:07:17,290 --> 01:07:23,759
scopes we can have an embedded unicast

1373
01:07:19,930 --> 01:07:27,129
prefix we can have some Ayana well-known

1374
01:07:23,760 --> 01:07:30,670
function or service IDs and also local

1375
01:07:27,130 --> 01:07:32,890
network service or function IDs the

1376
01:07:30,670 --> 01:07:36,580
proposal for an any caste formal any

1377
01:07:32,890 --> 01:07:39,940
caste prefix ia as I suggested then have

1378
01:07:36,580 --> 01:07:43,000
a visible scope which I say the same

1379
01:07:39,940 --> 01:07:44,980
values as the multicast scopes then four

1380
01:07:43,000 --> 01:07:46,720
bits for an any caste identify format

1381
01:07:44,980 --> 01:07:49,990
this is to allow flexibility in the

1382
01:07:46,720 --> 01:07:51,970
lower 112 bits and this is also because

1383
01:07:49,990 --> 01:07:55,589
I realize as a shape as a bowl to us so

1384
01:07:51,970 --> 01:07:58,149
I should preview feature proof it a bit

1385
01:07:55,590 --> 01:08:01,030
possibly a dozen a new destination

1386
01:07:58,150 --> 01:08:03,790
unreachable code for edge of visible

1387
01:08:01,030 --> 01:08:06,190
scope reached an interim alternative

1388
01:08:03,790 --> 01:08:10,150
would be communication with destination

1389
01:08:06,190 --> 01:08:12,850
and militarily prohibited in terms of

1390
01:08:10,150 --> 01:08:14,710
destination address selection the formal

1391
01:08:12,850 --> 01:08:16,540
anycast would be preferred over unicast

1392
01:08:14,710 --> 01:08:18,149
by default but there are some

1393
01:08:16,540 --> 01:08:20,698
applications such as that modify

1394
01:08:18,149 --> 01:08:23,118
protocol example where you might want to

1395
01:08:20,698 --> 01:08:25,528
prefer unicast well that can be easily

1396
01:08:23,118 --> 01:08:31,080
that can either be selected because of

1397
01:08:25,529 --> 01:08:35,009
the well-known anycast prefix I had this

1398
01:08:31,080 --> 01:08:36,839
idea of the thought of hosts being out

1399
01:08:35,009 --> 01:08:38,250
of register there anycast addresses and

1400
01:08:36,839 --> 01:08:40,469
then when I was preparing this

1401
01:08:38,250 --> 01:08:42,149
presentation I found a internet draft

1402
01:08:40,469 --> 01:08:44,368
from 2001

1403
01:08:42,149 --> 01:08:46,920
I've been on the mailing is since 2002

1404
01:08:44,368 --> 01:08:49,769
so I missed this but the idea is sort of

1405
01:08:46,920 --> 01:08:52,230
already there another thought that

1406
01:08:49,770 --> 01:08:54,420
occurred to me was using anycast

1407
01:08:52,229 --> 01:08:57,358
addresses for hop-by-hop processing of

1408
01:08:54,420 --> 01:08:59,310
packets through network after the local

1409
01:08:57,359 --> 01:09:00,719
hop processing which obviously starts to

1410
01:08:59,310 --> 01:09:03,659
relate to what's happening in spring and

1411
01:09:00,719 --> 01:09:05,399
so on after the local hop processing

1412
01:09:03,658 --> 01:09:09,238
there's an RPF check on the source

1413
01:09:05,399 --> 01:09:11,068
address same as multicast however we

1414
01:09:09,238 --> 01:09:13,080
need to exclude the local node anycast

1415
01:09:11,069 --> 01:09:14,699
destination address instance to prevent

1416
01:09:13,080 --> 01:09:17,040
a packet looping around within the node

1417
01:09:14,698 --> 01:09:21,388
and then finally the forwarding is based

1418
01:09:17,040 --> 01:09:23,488
on the remaining anycast routes this is

1419
01:09:21,389 --> 01:09:26,819
neither unicast or multicast forwarding

1420
01:09:23,488 --> 01:09:28,888
it's got bits of both and it's actually

1421
01:09:26,819 --> 01:09:31,319
a series of host hops if we look at our

1422
01:09:28,889 --> 01:09:33,569
FC 8200 on what our router is versus

1423
01:09:31,319 --> 01:09:35,130
what a host is the thing to remember

1424
01:09:33,569 --> 01:09:36,480
about these definitions is they're

1425
01:09:35,130 --> 01:09:39,810
really functional definition is not

1426
01:09:36,479 --> 01:09:42,330
device definitions so a router is a node

1427
01:09:39,810 --> 01:09:44,670
that forwards ipv6 packets not explicit

1428
01:09:42,330 --> 01:09:46,198
to it explicitly address to itself well

1429
01:09:44,670 --> 01:09:50,549
this is a destination address on a

1430
01:09:46,198 --> 01:09:52,649
device inside the network that is that

1431
01:09:50,549 --> 01:09:54,510
the address is assigned to so that would

1432
01:09:52,649 --> 01:09:56,369
actually make it a host and therefore

1433
01:09:54,510 --> 01:09:59,150
this processing would be a path of host

1434
01:09:56,369 --> 01:10:02,940
hops through the network

1435
01:09:59,150 --> 01:10:04,348
regarding the a the first format I think

1436
01:10:02,940 --> 01:10:08,280
I've mentioned it the functional anycast

1437
01:10:04,349 --> 01:10:10,949
this is the breakdown of the lower 112

1438
01:10:08,280 --> 01:10:13,980
bits there's an anycast domain prefix

1439
01:10:10,949 --> 01:10:18,659
which would be a unicast prefix this is

1440
01:10:13,980 --> 01:10:22,199
inspired by mod it casts RFC 3306 all

1441
01:10:18,659 --> 01:10:24,659
zeros identifies an unspecified or this

1442
01:10:22,199 --> 01:10:27,119
domain and this also provides an

1443
01:10:24,659 --> 01:10:29,570
opportunity to do any casts more

1444
01:10:27,119 --> 01:10:30,799
specific route aggregation at this point

1445
01:10:29,570 --> 01:10:35,360
there's

1446
01:10:30,800 --> 01:10:38,659
Reserve bits and then a prefix length of

1447
01:10:35,360 --> 01:10:42,920
sixty four-bit sorry six bits of prefix

1448
01:10:38,659 --> 01:10:44,960
length zero mean 64 this flags again

1449
01:10:42,920 --> 01:10:47,389
inspired by multicast however in this

1450
01:10:44,960 --> 01:10:50,150
case is only two T equals zero T equals

1451
01:10:47,389 --> 01:10:52,670
one T equals zero means that the anycast

1452
01:10:50,150 --> 01:10:54,530
function ID on the far right here's a

1453
01:10:52,670 --> 01:10:57,290
well-known Iona signed one similar

1454
01:10:54,530 --> 01:11:00,050
multicast T equals one a transient local

1455
01:10:57,290 --> 01:11:03,829
any custom own assigned similar

1456
01:11:00,050 --> 01:11:06,619
multicast again this is sort of new this

1457
01:11:03,829 --> 01:11:09,349
is a to introduce a local instance of

1458
01:11:06,619 --> 01:11:11,058
the anycast address an example could be

1459
01:11:09,349 --> 01:11:15,110
that you are developing an any car

1460
01:11:11,059 --> 01:11:17,679
service and you also have a production

1461
01:11:15,110 --> 01:11:20,389
version this is a local instance

1462
01:11:17,679 --> 01:11:22,880
configuration revision etc a number

1463
01:11:20,389 --> 01:11:25,250
embedded in the address this is a bit of

1464
01:11:22,880 --> 01:11:28,010
a soft field it could also be used to

1465
01:11:25,250 --> 01:11:31,699
extend the anycast function ID to 32

1466
01:11:28,010 --> 01:11:34,790
bits if that would be useful and finally

1467
01:11:31,699 --> 01:11:38,299
the last allow 24 bits the anycast

1468
01:11:34,790 --> 01:11:39,889
function ID with the t equals 0 or 1

1469
01:11:38,300 --> 01:11:42,920
Flags determining whether it's I on a

1470
01:11:39,889 --> 01:11:44,719
sign or not it could be a bit simpler

1471
01:11:42,920 --> 01:11:46,429
I'm not sure about the prefix length

1472
01:11:44,719 --> 01:11:48,770
field it's an informational field and

1473
01:11:46,429 --> 01:11:52,010
possibly with one flag value could be

1474
01:11:48,770 --> 01:11:54,320
encoded somewhere else some example uses

1475
01:11:52,010 --> 01:11:56,630
I've tried to set this up along quite a

1476
01:11:54,320 --> 01:12:01,250
while ago to have an Internet DDoS

1477
01:11:56,630 --> 01:12:03,020
impervious ISP anycast DNS resolvers the

1478
01:12:01,250 --> 01:12:05,179
requirements would be reachable to all

1479
01:12:03,020 --> 01:12:08,030
of a nice peace customers but not

1480
01:12:05,179 --> 01:12:10,460
reachable from the internet and then

1481
01:12:08,030 --> 01:12:12,590
it's attributable to the ISP sure your

1482
01:12:10,460 --> 01:12:14,090
customers could DDoS the DNS but they

1483
01:12:12,590 --> 01:12:16,849
have a good interest in not doing that

1484
01:12:14,090 --> 01:12:18,590
because they break their own internet so

1485
01:12:16,849 --> 01:12:21,349
we would form that using a formal

1486
01:12:18,590 --> 01:12:24,110
anycast prefix of a a as mentioned this

1487
01:12:21,349 --> 01:12:26,000
would be a new scope of a visible scope

1488
01:12:24,110 --> 01:12:28,040
of a network service provider which

1489
01:12:26,000 --> 01:12:30,409
would be greater than organizational but

1490
01:12:28,040 --> 01:12:33,909
smaller than global and then the anycast

1491
01:12:30,409 --> 01:12:37,129
identify format of functional unicast

1492
01:12:33,909 --> 01:12:40,940
the only Castlemaine prefix would be one

1493
01:12:37,130 --> 01:12:44,449
of the ISPs globally unique doers to de

1494
01:12:40,940 --> 01:12:46,339
l'eau total 0 1 DB 8

1495
01:12:44,449 --> 01:12:49,638
prefix length of value of zero meaning

1496
01:12:46,340 --> 01:12:51,889
such 64 flags of zero because it's a

1497
01:12:49,639 --> 01:12:54,679
honor assigned any caste functional

1498
01:12:51,889 --> 01:12:57,889
identifier local instance since it's in

1499
01:12:54,679 --> 01:12:59,599
production zero or whatever the ice P

1500
01:12:57,889 --> 01:13:01,519
decides but zero seems logical for

1501
01:12:59,599 --> 01:13:03,679
functional and then these would be some

1502
01:13:01,519 --> 01:13:07,579
example I honor assigned well-known

1503
01:13:03,679 --> 01:13:10,579
function IDs of 53 54 and 55 so these

1504
01:13:07,579 --> 01:13:13,039
would be the anycast addresses for dns

1505
01:13:10,579 --> 01:13:16,699
that we would distribute to our ISP

1506
01:13:13,039 --> 01:13:21,530
customers IAB 0 to Devon deviate 53 54

1507
01:13:16,699 --> 01:13:23,329
55 another example to to fill it out

1508
01:13:21,530 --> 01:13:25,249
this is an organizational thing a

1509
01:13:23,329 --> 01:13:27,610
service in development I don't know what

1510
01:13:25,249 --> 01:13:31,369
a thing I does but it's likely to find

1511
01:13:27,610 --> 01:13:34,308
again a a size 8 this scope would be

1512
01:13:31,369 --> 01:13:38,598
organization and again the functional

1513
01:13:34,309 --> 01:13:40,849
anycast identifier format anycast the

1514
01:13:38,599 --> 01:13:43,789
main prefix the ice the the organization

1515
01:13:40,849 --> 01:13:46,159
could put any of theirs there but to

1516
01:13:43,789 --> 01:13:49,880
reduce visibility they might use ula so

1517
01:13:46,159 --> 01:13:53,268
if d xxy was its etc again prefix length

1518
01:13:49,880 --> 01:13:56,150
value of 0 indicating such 64 this time

1519
01:13:53,269 --> 01:13:59,269
the t flag is 1 because it's a local

1520
01:13:56,150 --> 01:14:01,280
organization assigned the local instance

1521
01:13:59,269 --> 01:14:03,739
where we 6a because this is the ITF 106

1522
01:14:01,280 --> 01:14:07,219
revision and finally there's any cost

1523
01:14:03,739 --> 01:14:11,449
function identifier of 54 40 47 which is

1524
01:14:07,219 --> 01:14:15,079
an arbitrary number and is TNG in ascii

1525
01:14:11,449 --> 01:14:16,909
so that's that one's a bit longer but it

1526
01:14:15,079 --> 01:14:21,650
could be encoded in dns but there's a a

1527
01:14:16,909 --> 01:14:27,679
atfd and the the ula prefix the ID for

1528
01:14:21,650 --> 01:14:30,348
the t flag and then 6 a 5 4 4 e47 the

1529
01:14:27,679 --> 01:14:32,539
status I sort of have worked on this for

1530
01:14:30,349 --> 01:14:34,699
quite a while the idea is sort of mostly

1531
01:14:32,539 --> 01:14:36,159
baked I think I've been working in

1532
01:14:34,699 --> 01:14:38,690
thinking on this for about three years I

1533
01:14:36,159 --> 01:14:41,900
had no idea that whether a pan out or

1534
01:14:38,690 --> 01:14:43,940
not and asking for a sashayed is pretty

1535
01:14:41,900 --> 01:14:44,869
bold so I think you gotta justify that a

1536
01:14:43,940 --> 01:14:47,209
lot

1537
01:14:44,869 --> 01:14:50,389
I reasoned I discovered the host by

1538
01:14:47,209 --> 01:14:51,800
Cindy Carson using ml d was a same

1539
01:14:50,389 --> 01:14:53,539
suggest there's been some thoughts of

1540
01:14:51,800 --> 01:14:55,999
doing this sort of thing before as much

1541
01:14:53,539 --> 01:14:57,889
it was 20 years ago nearly and on the

1542
01:14:55,999 --> 01:14:59,389
ITF 106 to present

1543
01:14:57,889 --> 01:15:01,280
so I thought I'd see if I could

1544
01:14:59,389 --> 01:15:04,219
rightfully the Internet Society for

1545
01:15:01,280 --> 01:15:07,940
sending me here any thoughts or

1546
01:15:04,219 --> 01:15:09,469
suggestions or questions yeah we would

1547
01:15:07,940 --> 01:15:13,428
really like to hear how much to my

1548
01:15:09,469 --> 01:15:16,159
client please I'm sorry

1549
01:15:13,429 --> 01:15:18,940
Cisco so clearly there's a value in

1550
01:15:16,159 --> 01:15:21,559
identifying that this is any cost or not

1551
01:15:18,940 --> 01:15:24,980
address and some of the large scale v6

1552
01:15:21,560 --> 01:15:27,670
deployments I've been part of a few of

1553
01:15:24,980 --> 01:15:31,309
them requires such an identification and

1554
01:15:27,670 --> 01:15:34,760
the way we address them by just using a

1555
01:15:31,310 --> 01:15:38,030
bit which was part of the Geo a and

1556
01:15:34,760 --> 01:15:40,070
using that within that domain and that

1557
01:15:38,030 --> 01:15:41,719
worked out reasonably well and it

1558
01:15:40,070 --> 01:15:45,049
reasonably well to the point that we

1559
01:15:41,719 --> 01:15:47,659
could filter it if he needed to the best

1560
01:15:45,050 --> 01:15:51,530
part which was an advantage was that we

1561
01:15:47,659 --> 01:15:53,960
could still keep our summarization

1562
01:15:51,530 --> 01:15:55,969
boundaries within the G way as we would

1563
01:15:53,960 --> 01:15:58,610
need and that was the best part in my

1564
01:15:55,969 --> 01:16:02,360
opinion with this I think that becomes a

1565
01:15:58,610 --> 01:16:04,309
downside because now this is independent

1566
01:16:02,360 --> 01:16:06,530
of my Geo a that means I gotta create

1567
01:16:04,310 --> 01:16:09,980
additional rodding entries even if it's

1568
01:16:06,530 --> 01:16:14,030
within that AAA or FA water that might

1569
01:16:09,980 --> 01:16:15,489
be yep so I'm sort of 50/50 on that yeah

1570
01:16:14,030 --> 01:16:17,659
thank you

1571
01:16:15,489 --> 01:16:19,269
Eric one yeah sort of similar to that

1572
01:16:17,659 --> 01:16:20,960
point I was sort of wondering

1573
01:16:19,270 --> 01:16:23,300
operationally for your network for a

1574
01:16:20,960 --> 01:16:25,130
network service provider how much what's

1575
01:16:23,300 --> 01:16:27,530
the difference in work required for

1576
01:16:25,130 --> 01:16:28,699
using one of these and routing / 128

1577
01:16:27,530 --> 01:16:30,949
says any guests throughout your network

1578
01:16:28,699 --> 01:16:34,549
for various services versus just using

1579
01:16:30,949 --> 01:16:40,339
it GA they might have or three FF II for

1580
01:16:34,550 --> 01:16:42,800
that matter okay sorry look the the way

1581
01:16:40,340 --> 01:16:47,420
I look at I like to try make things

1582
01:16:42,800 --> 01:16:49,969
easier having identification I look at

1583
01:16:47,420 --> 01:16:51,290
the troubleshooting example and think it

1584
01:16:49,969 --> 01:16:53,540
would be useful to immediately know it

1585
01:16:51,290 --> 01:16:55,250
was anycast address rather than

1586
01:16:53,540 --> 01:17:03,050
potentially having to investigate

1587
01:16:55,250 --> 01:17:05,239
configuration and so on it it seems

1588
01:17:03,050 --> 01:17:08,840
useful to me I certainly when I looked

1589
01:17:05,239 --> 01:17:11,059
at trying to implement DDoS impervious

1590
01:17:08,840 --> 01:17:12,680
ISP resolvers not had

1591
01:17:11,060 --> 01:17:15,890
globally reachable would be quite an

1592
01:17:12,680 --> 01:17:18,200
advantage isn't it a matter of the

1593
01:17:15,890 --> 01:17:19,670
service providers filtering policy yeah

1594
01:17:18,200 --> 01:17:23,960
except you get the hundred gigabits

1595
01:17:19,670 --> 01:17:25,400
traffic before you throw it away whereas

1596
01:17:23,960 --> 01:17:26,900
if it's completely unreachable if the

1597
01:17:25,400 --> 01:17:28,519
internet no one can send it to you I

1598
01:17:26,900 --> 01:17:30,710
think they can send that to you anyway

1599
01:17:28,520 --> 01:17:32,180
on another address on another service no

1600
01:17:30,710 --> 01:17:34,940
matter letter if they know that you have

1601
01:17:32,180 --> 01:17:39,070
any address prefixes allocated to you at

1602
01:17:34,940 --> 01:17:39,070
all then they can still attack you

1603
01:17:41,230 --> 01:17:47,480
Michael Richardson I liked it on the

1604
01:17:43,160 --> 01:17:50,389
list I still like it I think that one of

1605
01:17:47,480 --> 01:17:53,269
your use cases was the quick case of

1606
01:17:50,390 --> 01:17:57,680
negotiate on anycast and then and and

1607
01:17:53,270 --> 01:17:59,390
then move elsewhere and and I like that

1608
01:17:57,680 --> 01:18:02,060
use case too I believe that's the killer

1609
01:17:59,390 --> 01:18:05,060
use case unfortunately it doesn't work

1610
01:18:02,060 --> 01:18:07,400
if the address is not visible to do is

1611
01:18:05,060 --> 01:18:10,190
not address announcing ball to the rest

1612
01:18:07,400 --> 01:18:13,219
of the world right so that's true

1613
01:18:10,190 --> 01:18:16,759
there's the drafts 30 pages so these

1614
01:18:13,220 --> 01:18:19,970
beat some phases of life that Ron so

1615
01:18:16,760 --> 01:18:23,920
this is it that's my thought I so so

1616
01:18:19,970 --> 01:18:27,620
maybe there's actually two spaces of

1617
01:18:23,920 --> 01:18:30,800
what we need there was a recent thread

1618
01:18:27,620 --> 01:18:33,320
on the EC n sanity list about equal cost

1619
01:18:30,800 --> 01:18:35,690
multi path you know you may have seen

1620
01:18:33,320 --> 01:18:38,929
this thing apparently they were

1621
01:18:35,690 --> 01:18:40,070
switching on the EC n bits and so if you

1622
01:18:38,930 --> 01:18:41,750
turned them off in the middle of your

1623
01:18:40,070 --> 01:18:46,040
TCP connection you then went to the

1624
01:18:41,750 --> 01:18:47,750
other any casted DNS server over TCP

1625
01:18:46,040 --> 01:18:49,790
which didn't work right

1626
01:18:47,750 --> 01:18:52,460
so making that work would be good

1627
01:18:49,790 --> 01:18:54,800
somehow to identify it or to make it

1628
01:18:52,460 --> 01:18:56,660
clear to the ecmp that this wasn't any

1629
01:18:54,800 --> 01:18:58,780
caste address and it shouldn't do quite

1630
01:18:56,660 --> 01:19:01,340
the same thing that would also be great

1631
01:18:58,780 --> 01:19:04,599
but I don't see how to make that work

1632
01:19:01,340 --> 01:19:08,180
and also make your you know bulletproof

1633
01:19:04,600 --> 01:19:10,700
DNS server work we had a need for some

1634
01:19:08,180 --> 01:19:13,700
kind of an anycast address in the home

1635
01:19:10,700 --> 01:19:20,179
net space yep where we want to reach

1636
01:19:13,700 --> 01:19:22,670
whichever thing has stuff and it wasn't

1637
01:19:20,180 --> 01:19:24,620
at all clear to us how to to do that

1638
01:19:22,670 --> 01:19:25,079
except that we would wind up saying okay

1639
01:19:24,620 --> 01:19:27,929
well

1640
01:19:25,079 --> 01:19:31,019
his the HomeNet was going to be well

1641
01:19:27,929 --> 01:19:33,270
would be all you la s so and we may not

1642
01:19:31,020 --> 01:19:34,920
even have address resolution we want a

1643
01:19:33,270 --> 01:19:37,380
special magic address that we can

1644
01:19:34,920 --> 01:19:40,199
essentially hard-code so the a a thing

1645
01:19:37,380 --> 01:19:41,520
would be useful for that even if it

1646
01:19:40,199 --> 01:19:42,780
doesn't solve the quick problem so i

1647
01:19:41,520 --> 01:19:44,820
think you have multiple use cases and

1648
01:19:42,780 --> 01:19:47,219
i'd like to proceed for investigating

1649
01:19:44,820 --> 01:19:49,259
this i I have I started composite the

1650
01:19:47,219 --> 01:19:51,119
the gap in the draft is more or less

1651
01:19:49,260 --> 01:19:53,309
used cases but I've sort of came up with

1652
01:19:51,119 --> 01:19:58,949
about six different ones perhaps

1653
01:19:53,309 --> 01:20:01,020
internal multiple TCP and so on John

1654
01:19:58,949 --> 01:20:04,799
linka I'm kind of sitting on the fence

1655
01:20:01,020 --> 01:20:07,500
here right so I I wouldn't use it

1656
01:20:04,800 --> 01:20:09,510
because I do not see use case really but

1657
01:20:07,500 --> 01:20:11,670
I guess if someone else he believes it's

1658
01:20:09,510 --> 01:20:14,909
useful yeah why not

1659
01:20:11,670 --> 01:20:16,290
I'm a bit concerned about again we're

1660
01:20:14,909 --> 01:20:19,558
gonna live in the world when you have

1661
01:20:16,290 --> 01:20:22,619
any cost in your prefix and any cost

1662
01:20:19,559 --> 01:20:24,150
which belongs to unicast address space

1663
01:20:22,619 --> 01:20:26,730
right because not everyone going to

1664
01:20:24,150 --> 01:20:29,519
renumber right but however there is one

1665
01:20:26,730 --> 01:20:31,440
good think about this and I don't see it

1666
01:20:29,520 --> 01:20:33,869
mention can you draft from my

1667
01:20:31,440 --> 01:20:38,119
perspective the biggest problem with any

1668
01:20:33,869 --> 01:20:42,259
cost is load balancing if you can say

1669
01:20:38,119 --> 01:20:44,159
router must not ever use L for

1670
01:20:42,260 --> 01:20:46,619
information for load balancing for

1671
01:20:44,159 --> 01:20:48,960
anycast addresses I only use Elstree

1672
01:20:46,619 --> 01:20:50,670
slash flow label or whatever that would

1673
01:20:48,960 --> 01:20:53,460
be beneficial right so I don't need to

1674
01:20:50,670 --> 01:20:55,139
explicitly configure that and it would

1675
01:20:53,460 --> 01:20:57,570
be done out immediately that might words

1676
01:20:55,139 --> 01:20:59,550
mention can the draft yeah I think to

1677
01:20:57,570 --> 01:21:01,799
some extent the the idea of using

1678
01:20:59,550 --> 01:21:04,050
multi-car Ahmadi path protocols that

1679
01:21:01,800 --> 01:21:05,849
just established with any caste which is

1680
01:21:04,050 --> 01:21:08,909
say half a dozen packets and then switch

1681
01:21:05,849 --> 01:21:14,250
to unicast potentially can address that

1682
01:21:08,909 --> 01:21:17,190
with intelligent exists in real life you

1683
01:21:14,250 --> 01:21:19,500
send one bit big packet you fragmented

1684
01:21:17,190 --> 01:21:21,900
and the second part never reaches your

1685
01:21:19,500 --> 01:21:24,929
the same anycast server as the first

1686
01:21:21,900 --> 01:21:36,030
part and then like yeah and tell me

1687
01:21:24,929 --> 01:21:38,179
about like Jody pennette I am wondering

1688
01:21:36,030 --> 01:21:40,940
one of the advantages that

1689
01:21:38,179 --> 01:21:45,530
I see which the actual anycast is that

1690
01:21:40,940 --> 01:21:47,870
the horse don't differentiate it and and

1691
01:21:45,530 --> 01:21:49,940
and i think that's very useful so i see

1692
01:21:47,870 --> 01:21:55,250
just the other way that you are looking

1693
01:21:49,940 --> 01:21:57,559
at well house isn't forced to I mean mmm

1694
01:21:55,250 --> 01:21:59,300
house don't have to do anything to

1695
01:21:57,560 --> 01:22:02,270
implement this this is really you know

1696
01:21:59,300 --> 01:22:05,210
it's it's a remote what a remote address

1697
01:22:02,270 --> 01:22:07,460
appears like so host could treat this as

1698
01:22:05,210 --> 01:22:12,920
a unicast address the way they do today

1699
01:22:07,460 --> 01:22:15,500
I don't know I am Philly a missing

1700
01:22:12,920 --> 01:22:17,270
something but I think that's the best

1701
01:22:15,500 --> 01:22:21,050
property that we have from the act on

1702
01:22:17,270 --> 01:22:23,900
any cast I don't know I I need to read

1703
01:22:21,050 --> 01:22:25,070
again the the document maybe but I think

1704
01:22:23,900 --> 01:22:34,610
that's that's the best that we have

1705
01:22:25,070 --> 01:22:36,679
which any cast actually alright thank

1706
01:22:34,610 --> 01:22:38,120
you very much appreciate its on thank

1707
01:22:36,679 --> 01:22:39,890
you and I think we'll continue the

1708
01:22:38,120 --> 01:22:46,239
discussion on the mailing lists thank

1709
01:22:39,890 --> 01:22:50,690
you sorry the draft so long thank you

1710
01:22:46,239 --> 01:22:52,580
okay so then we have to sort of semi

1711
01:22:50,690 --> 01:22:54,530
lightning draft that we've given a

1712
01:22:52,580 --> 01:23:07,670
little bit more time today the first one

1713
01:22:54,530 --> 01:23:10,460
is asymmetric ipv6 hello everyone

1714
01:23:07,670 --> 01:23:14,719
component you from Ali today I will

1715
01:23:10,460 --> 01:23:21,130
introduce a symmetric ipv6 of flexible

1716
01:23:14,719 --> 01:23:21,130
usage over 36 in edge out here scenarios

1717
01:23:22,540 --> 01:23:31,640
so a symmetric ipv6 will use short in

1718
01:23:27,949 --> 01:23:35,629
the addresses because of the released

1719
01:23:31,640 --> 01:23:39,370
region which is tricky of the MTU and

1720
01:23:35,630 --> 01:23:45,380
the big and bit rate and a bit of each

1721
01:23:39,370 --> 01:23:49,849
regions and the compression approaches

1722
01:23:45,380 --> 01:23:52,040
like 6lowpan may not work here may not

1723
01:23:49,850 --> 01:23:56,300
work here because of

1724
01:23:52,040 --> 01:23:59,210
the edge routers may be constrained so a

1725
01:23:56,300 --> 01:24:01,520
symmetrical ipv6 will route directly on

1726
01:23:59,210 --> 01:24:04,430
shorting the addresses to award

1727
01:24:01,520 --> 01:24:09,740
compression and decompression hope I

1728
01:24:04,430 --> 01:24:13,340
hope so the master includes defend a

1729
01:24:09,740 --> 01:24:16,550
short residence in and see the rest over

1730
01:24:13,340 --> 01:24:19,180
peace as prefix lanes and the ribbon

1731
01:24:16,550 --> 01:24:22,730
field can use the short addresses for

1732
01:24:19,180 --> 01:24:27,110
interment forwarding but for addresses

1733
01:24:22,730 --> 01:24:30,980
or sight so an and more unnecessary

1734
01:24:27,110 --> 01:24:36,080
headers can be alighted through using a

1735
01:24:30,980 --> 01:24:41,480
flexible header including the short

1736
01:24:36,080 --> 01:24:45,590
address lanes and the short residence is

1737
01:24:41,480 --> 01:24:50,089
is decided to men by two men when the

1738
01:24:45,590 --> 01:24:55,730
network's start up and that it will be

1739
01:24:50,090 --> 01:25:03,260
configured into or learned by by local

1740
01:24:55,730 --> 01:25:06,950
devices so as a metric at v6 Ryu reuses

1741
01:25:03,260 --> 01:25:14,729
are a message but into to defend new

1742
01:25:06,950 --> 01:25:18,280
flag beach for shorter grass mode so for

1743
01:25:14,729 --> 01:25:22,539
configuration a new tone the device as

1744
01:25:18,280 --> 01:25:25,929
SRA here means a short route address for

1745
01:25:22,539 --> 01:25:28,228
our a map from our a message and in

1746
01:25:25,929 --> 01:25:31,030
generator or shorter address accordingly

1747
01:25:28,229 --> 01:25:35,320
this address can be used for the

1748
01:25:31,030 --> 01:25:38,709
interface address only only for passing

1749
01:25:35,320 --> 01:25:45,340
validation of the ad or rewires the D ad

1750
01:25:38,709 --> 01:25:47,070
if not then regenerate another one so

1751
01:25:45,340 --> 01:25:50,800
what's capital e link app installation

1752
01:25:47,070 --> 01:25:53,679
is very simple we use the adoption layer

1753
01:25:50,800 --> 01:25:56,139
layer 6lowpan but a new dispatch should

1754
01:25:53,679 --> 01:25:59,320
be giant should be assigned for a

1755
01:25:56,139 --> 01:26:07,780
symmetric ipv6 and the following we use

1756
01:25:59,320 --> 01:26:10,780
including including bits for outward for

1757
01:26:07,780 --> 01:26:13,239
outward communication traffic the key to

1758
01:26:10,780 --> 01:26:16,389
be master a terrific to form standard

1759
01:26:13,239 --> 01:26:18,999
standard ipv6 addresses and the

1760
01:26:16,389 --> 01:26:22,300
corresponding operation is for the in

1761
01:26:18,999 --> 01:26:26,099
world traffic terrific space will not

1762
01:26:22,300 --> 01:26:28,749
attend to to introdu main communications

1763
01:26:26,099 --> 01:26:32,199
at at last

1764
01:26:28,749 --> 01:26:37,900
considering there normally be few

1765
01:26:32,199 --> 01:26:42,360
outside ipv6 ipv6 addresses involved so

1766
01:26:37,900 --> 01:26:45,400
as soon as a magic ipv6 can allocate

1767
01:26:42,360 --> 01:26:51,719
short italic interrogation for the

1768
01:26:45,400 --> 01:26:55,058
outsider at v6 ipv6 addresses here but

1769
01:26:51,719 --> 01:26:58,989
new options of RS and are a message

1770
01:26:55,059 --> 01:27:03,449
should be defined for tight ok an

1771
01:26:58,989 --> 01:27:03,449
comments and questions thank you

1772
01:27:05,400 --> 01:27:11,499
so they can have one question the what

1773
01:27:09,849 --> 01:27:14,800
is the packet format that the

1774
01:27:11,499 --> 01:27:17,499
application on the inner side looks like

1775
01:27:14,800 --> 01:27:21,599
is that in our view 6 header or is it

1776
01:27:17,499 --> 01:27:21,599
very shortened compressed header

1777
01:27:22,380 --> 01:27:30,330
you mean format so device a the IP stack

1778
01:27:27,480 --> 01:27:32,009
on device a what is it Cedars it's C a

1779
01:27:30,330 --> 01:27:33,750
compressed header there's it

1780
01:27:32,010 --> 01:27:37,560
uncompressed it and see if the library

1781
01:27:33,750 --> 01:27:40,620
says hey happen to here do you mean

1782
01:27:37,560 --> 01:27:43,710
above the socket API or below the socket

1783
01:27:40,620 --> 01:27:45,540
API well I write code on devices they

1784
01:27:43,710 --> 01:27:47,880
don't have socket API so just look at a

1785
01:27:45,540 --> 01:27:50,910
packet so what does my the packet buffer

1786
01:27:47,880 --> 01:27:56,570
that I pass up to my application of some

1787
01:27:50,910 --> 01:28:00,210
sort look like that's a good question I

1788
01:27:56,570 --> 01:28:02,790
tell you my preference it depends but I

1789
01:28:00,210 --> 01:28:05,850
would suggest that it should you see the

1790
01:28:02,790 --> 01:28:08,100
expanded packets but just because that's

1791
01:28:05,850 --> 01:28:10,950
probably how the code is written but

1792
01:28:08,100 --> 01:28:13,110
actually it isn't necessary is it right

1793
01:28:10,950 --> 01:28:14,940
but at least it has the information or

1794
01:28:13,110 --> 01:28:16,530
its intended that it has the information

1795
01:28:14,940 --> 01:28:18,120
that it can actually uncompress the

1796
01:28:16,530 --> 01:28:20,759
header yeah well I mean we can create

1797
01:28:18,120 --> 01:28:23,730
recreate a complete ipv6 packet so if

1798
01:28:20,760 --> 01:28:25,790
that's what you want in the API that's

1799
01:28:23,730 --> 01:28:29,429
what we could do

1800
01:28:25,790 --> 01:28:31,590
yeah this takes us back Fred Baker here

1801
01:28:29,430 --> 01:28:34,530
this bake takes us back to a discussion

1802
01:28:31,590 --> 01:28:37,590
to happen before ipv6 was standardized

1803
01:28:34,530 --> 01:28:39,450
in RFC 1883 should we have a variable

1804
01:28:37,590 --> 01:28:41,040
length address or a fixed length of

1805
01:28:39,450 --> 01:28:46,050
Jocelin there were proponents of each

1806
01:28:41,040 --> 01:28:49,440
side so this is a new protocol or a

1807
01:28:46,050 --> 01:28:52,130
change to the ipv6 header which would

1808
01:28:49,440 --> 01:28:56,940
insert a length field and a pointer to

1809
01:28:52,130 --> 01:29:00,450
where in the address are we starting and

1810
01:28:56,940 --> 01:29:02,610
I guess my first question is how does a

1811
01:29:00,450 --> 01:29:07,710
host know where the edge of the network

1812
01:29:02,610 --> 01:29:09,509
is how much is enough of the address you

1813
01:29:07,710 --> 01:29:17,520
know I'm not sure a host has that

1814
01:29:09,510 --> 01:29:22,920
visibility into the network Brian I I

1815
01:29:17,520 --> 01:29:25,350
think yeah it it knows this one post a

1816
01:29:22,920 --> 01:29:29,580
bit quickly in the presentation but it

1817
01:29:25,350 --> 01:29:31,580
knows the the address length in use

1818
01:29:29,580 --> 01:29:34,130
within the domain and

1819
01:29:31,580 --> 01:29:36,320
therefore it knows that some addresses

1820
01:29:34,130 --> 01:29:38,420
are short and some addresses along which

1821
01:29:36,320 --> 01:29:45,980
is which is signaled in the packet by

1822
01:29:38,420 --> 01:29:48,380
magic bits how does the host know what

1823
01:29:45,980 --> 01:29:49,150
to signal you haven't answered the

1824
01:29:48,380 --> 01:29:52,880
question

1825
01:29:49,150 --> 01:29:57,730
it doesn't need to I mean it's in the

1826
01:29:52,880 --> 01:30:02,150
domain where this is being used it

1827
01:29:57,730 --> 01:30:03,799
either uses a short address if over a

1828
01:30:02,150 --> 01:30:07,670
long address according to what the

1829
01:30:03,800 --> 01:30:13,790
destination is I suggest read the draft

1830
01:30:07,670 --> 01:30:16,550
and then ask the question again let me

1831
01:30:13,790 --> 01:30:19,310
so I'm just asking a question not the

1832
01:30:16,550 --> 01:30:22,010
chair question so I looked at the draft

1833
01:30:19,310 --> 01:30:24,110
in in the beginning it talks about the

1834
01:30:22,010 --> 01:30:29,930
motivation funder stood this the

1835
01:30:24,110 --> 01:30:32,929
motivation was for 5g networks that have

1836
01:30:29,930 --> 01:30:37,130
are very restricted in bandwidth and

1837
01:30:32,930 --> 01:30:40,760
packet size limits and then it had a

1838
01:30:37,130 --> 01:30:43,180
reference to some sort of document that

1839
01:30:40,760 --> 01:30:46,070
was sort of it talking about the

1840
01:30:43,180 --> 01:30:47,990
characteristics of 5g networks but I

1841
01:30:46,070 --> 01:30:51,230
looked at that document and I didn't see

1842
01:30:47,990 --> 01:30:53,240
anything that justified the assumptions

1843
01:30:51,230 --> 01:30:56,360
you know or the problem that this was

1844
01:30:53,240 --> 01:31:01,210
attempting to solve so I did I don't

1845
01:30:56,360 --> 01:31:01,210
understand what the use case for this is

1846
01:31:02,140 --> 01:31:09,110
okay this and that either mainly for the

1847
01:31:05,690 --> 01:31:13,250
constraint network domain in the edge in

1848
01:31:09,110 --> 01:31:18,799
the eyes networks so maybe why would you

1849
01:31:13,250 --> 01:31:22,130
maybe not Favot e okay well I think

1850
01:31:18,800 --> 01:31:24,230
there would have to be a lot you know I

1851
01:31:22,130 --> 01:31:26,420
think yeah at least it convinced me you

1852
01:31:24,230 --> 01:31:28,700
have to convince me that this is a

1853
01:31:26,420 --> 01:31:30,620
problem that needs to be solved and then

1854
01:31:28,700 --> 01:31:32,240
you know there's like we have a zillion

1855
01:31:30,620 --> 01:31:34,580
different ways of doing compression

1856
01:31:32,240 --> 01:31:37,840
already and what why we need a different

1857
01:31:34,580 --> 01:31:37,840
one so

1858
01:31:39,110 --> 01:31:45,320
growing again I mean in a sense that's

1859
01:31:42,350 --> 01:31:47,690
why we took this drove to sizzler 6lo as

1860
01:31:45,320 --> 01:31:49,099
well because that's the business and we

1861
01:31:47,690 --> 01:31:51,199
didn't get asked that question there

1862
01:31:49,100 --> 01:31:55,070
because they understand the answer if

1863
01:31:51,199 --> 01:31:57,739
you like it it probably needs more

1864
01:31:55,070 --> 01:32:00,290
context for people or not in the 6lo

1865
01:31:57,739 --> 01:32:01,879
world but we thought we'd better mention

1866
01:32:00,290 --> 01:32:05,719
it here anyway since we're mucking about

1867
01:32:01,880 --> 01:32:10,429
with their ipv6 packet for that since

1868
01:32:05,719 --> 01:32:12,650
1883 suresh krisshnan

1869
01:32:10,429 --> 01:32:16,159
as the responsible ad for about six

1870
01:32:12,650 --> 01:32:18,710
months six law I I personally also think

1871
01:32:16,159 --> 01:32:20,480
the justification is not clear because

1872
01:32:18,710 --> 01:32:21,920
one of the things it says in that draft

1873
01:32:20,480 --> 01:32:24,409
is like oh I don't want to talk about

1874
01:32:21,920 --> 01:32:27,139
cheek for example right because there's

1875
01:32:24,409 --> 01:32:28,699
compression overhead that's not like

1876
01:32:27,139 --> 01:32:30,380
obvious to me at all because she can

1877
01:32:28,699 --> 01:32:32,989
compress even higher than this and get a

1878
01:32:30,380 --> 01:32:34,940
better smaller packet format while

1879
01:32:32,989 --> 01:32:38,629
keeping the IP header pretty much intact

1880
01:32:34,940 --> 01:32:41,449
like before compression so and

1881
01:32:38,630 --> 01:32:44,239
specifically what bob was saying the Phi

1882
01:32:41,449 --> 01:32:46,669
G document pointed to in this draft is a

1883
01:32:44,239 --> 01:32:48,290
user plain analysis draft which talks

1884
01:32:46,670 --> 01:32:51,530
nothing about constrained networks it's

1885
01:32:48,290 --> 01:32:53,210
more about okay do we use gtp or SR v6

1886
01:32:51,530 --> 01:32:55,070
and all the other mechanisms so I think

1887
01:32:53,210 --> 01:32:57,139
it's a wrong reference personally so you

1888
01:32:55,070 --> 01:32:58,849
might find a better reference for it and

1889
01:32:57,139 --> 01:33:01,040
probably if you look at like NB IOT or

1890
01:32:58,850 --> 01:33:02,659
something in Phi G maybe you'll get a

1891
01:33:01,040 --> 01:33:04,100
better reference I think that was Bob's

1892
01:33:02,659 --> 01:33:06,259
point because I know about this I'm

1893
01:33:04,100 --> 01:33:09,619
giving you a better option for a

1894
01:33:06,260 --> 01:33:10,969
reference but I think like it's good

1895
01:33:09,619 --> 01:33:12,320
that six man is aware of it but it

1896
01:33:10,969 --> 01:33:14,150
probably happens to happen somewhere

1897
01:33:12,320 --> 01:33:16,340
else maybe six slow or lpy on or

1898
01:33:14,150 --> 01:33:18,440
somewhere would be a better place for

1899
01:33:16,340 --> 01:33:21,860
this to be discussed I I know you

1900
01:33:18,440 --> 01:33:23,809
presented this in six slow and so but

1901
01:33:21,860 --> 01:33:27,409
but the point is like I don't know if

1902
01:33:23,810 --> 01:33:29,239
there's room for yet another compression

1903
01:33:27,409 --> 01:33:31,699
format that's different unless you

1904
01:33:29,239 --> 01:33:33,739
justify that by saying hey this is the

1905
01:33:31,699 --> 01:33:36,460
reason and the current things don't work

1906
01:33:33,739 --> 01:33:39,559
for me rather than saying hey there's a

1907
01:33:36,460 --> 01:33:42,830
decompression overhead because it's not

1908
01:33:39,560 --> 01:33:47,840
clear the overhead is very big okay I

1909
01:33:42,830 --> 01:33:49,350
come here mainly because we reuse the re

1910
01:33:47,840 --> 01:33:53,220
and

1911
01:33:49,350 --> 01:33:54,930
a deity mechanisms now I understand the

1912
01:33:53,220 --> 01:33:57,510
solution like it's I'm just saying like

1913
01:33:54,930 --> 01:33:58,770
is the problem big enough for us to come

1914
01:33:57,510 --> 01:34:00,180
up with a completely new solution that

1915
01:33:58,770 --> 01:34:02,160
is the part of not here like maybe

1916
01:34:00,180 --> 01:34:08,400
prions to take a shot at it but that's

1917
01:34:02,160 --> 01:34:09,900
the part that's not letting an injury

1918
01:34:08,400 --> 01:34:12,420
contributor I must have eaten and read

1919
01:34:09,900 --> 01:34:14,790
the draft but may we assume that the

1920
01:34:12,420 --> 01:34:18,540
note using the short address is the

1921
01:34:14,790 --> 01:34:23,030
knowledge of its full 128-bit address so

1922
01:34:18,540 --> 01:34:23,030
that aah and ICMP generation will work

1923
01:34:27,740 --> 01:34:34,380
that's a good question I think we have

1924
01:34:30,930 --> 01:34:36,540
to make sure that the same time we tell

1925
01:34:34,380 --> 01:34:39,240
the domain that it's address length is

1926
01:34:36,540 --> 01:34:42,150
32 or whatever we also tell it what the

1927
01:34:39,240 --> 01:34:49,200
prefix to that 32 is that exact reason

1928
01:34:42,150 --> 01:34:52,290
Thank You Roger

1929
01:34:49,200 --> 01:34:54,720
sorry Cisco so got two-part question one

1930
01:34:52,290 --> 01:34:56,460
in the slide and mentioned that the

1931
01:34:54,720 --> 01:35:00,510
compression decompression algorithm

1932
01:34:56,460 --> 01:35:04,850
takes resources and empty you may be low

1933
01:35:00,510 --> 01:35:08,100
on the physical MTU if you could clarify

1934
01:35:04,850 --> 01:35:12,840
how low are we talking about them to you

1935
01:35:08,100 --> 01:35:14,340
and how much resources consumption for

1936
01:35:12,840 --> 01:35:16,830
compression decompression is really

1937
01:35:14,340 --> 01:35:18,630
problem so any numbers he could share

1938
01:35:16,830 --> 01:35:20,910
that would be really useful and the

1939
01:35:18,630 --> 01:35:23,640
second part was more on the solutions if

1940
01:35:20,910 --> 01:35:27,450
if two hops are exchanging or

1941
01:35:23,640 --> 01:35:30,630
negotiating the value for that n because

1942
01:35:27,450 --> 01:35:34,620
you're calculating 128 minus n how high

1943
01:35:30,630 --> 01:35:36,930
the end could go there's no binding

1944
01:35:34,620 --> 01:35:41,190
there's no constraint that I noticed in

1945
01:35:36,930 --> 01:35:45,510
the draft so could I go as low as two

1946
01:35:41,190 --> 01:35:48,690
bytes could I go as high as back to 128

1947
01:35:45,510 --> 01:35:51,510
bytes so the negotiation even if it's

1948
01:35:48,690 --> 01:35:54,570
between two hops and then it goes in a

1949
01:35:51,510 --> 01:35:56,520
cascading manner and how does it really

1950
01:35:54,570 --> 01:35:59,630
work out that I couldn't really follow

1951
01:35:56,520 --> 01:36:01,940
that yes

1952
01:35:59,630 --> 01:36:06,110
the first question were good we will

1953
01:36:01,940 --> 01:36:10,940
finish the detail information and the

1954
01:36:06,110 --> 01:36:13,309
later maybe we Explorer explosed each in

1955
01:36:10,940 --> 01:36:18,099
the drafts and for the second one and

1956
01:36:13,310 --> 01:36:21,440
then you should in creation will induce

1957
01:36:18,100 --> 01:36:26,570
the local lanes increase and not a

1958
01:36:21,440 --> 01:36:30,490
decrease so but if originally domain

1959
01:36:26,570 --> 01:36:34,730
meant to make it we decided to use

1960
01:36:30,490 --> 01:36:38,389
decides to use two B's lens is okay but

1961
01:36:34,730 --> 01:36:44,089
the total security system a network will

1962
01:36:38,390 --> 01:36:47,750
be small so I think we're sort of out of

1963
01:36:44,090 --> 01:36:49,610
time for this so let's continue this on

1964
01:36:47,750 --> 01:36:55,100
the mailing list thank you very much for

1965
01:36:49,610 --> 01:36:57,160
speaking okay our last speaker for this

1966
01:36:55,100 --> 01:36:57,160
session

1967
01:37:09,790 --> 01:37:14,960
hello everyone this is the Holly song

1968
01:37:12,560 --> 01:37:17,450
from future we are today I am going to

1969
01:37:14,960 --> 01:37:19,910
introduce the idea of a supporting

1970
01:37:17,450 --> 01:37:24,590
postcard based famine tree for us our v6

1971
01:37:19,910 --> 01:37:27,110
om we all know there's a new class of

1972
01:37:24,590 --> 01:37:29,480
data into memory techniques we call it

1973
01:37:27,110 --> 01:37:32,120
on past data telemetry which can

1974
01:37:29,480 --> 01:37:37,519
directly collects the data about the

1975
01:37:32,120 --> 01:37:40,670
user traffic by embedding some actual

1976
01:37:37,520 --> 01:37:44,300
instruction header into the packet it's

1977
01:37:40,670 --> 01:37:47,540
very important too for ipv6 our v6 to

1978
01:37:44,300 --> 01:37:51,980
support om and application-aware

1979
01:37:47,540 --> 01:37:55,400
services however are we all know that I

1980
01:37:51,980 --> 01:37:57,799
saw due to the SRH the header overhead

1981
01:37:55,400 --> 01:38:02,629
of as our v6 it is already pretty high

1982
01:37:57,800 --> 01:38:08,410
and then is a problematic to add even

1983
01:38:02,630 --> 01:38:12,110
more header into the SR v6 header and

1984
01:38:08,410 --> 01:38:13,440
also by introduce another new header may

1985
01:38:12,110 --> 01:38:16,460
introduce some

1986
01:38:13,440 --> 01:38:19,620
sure and ambiguity to the encapsulation

1987
01:38:16,460 --> 01:38:23,940
because it's not clear where you will

1988
01:38:19,620 --> 01:38:27,480
apply this this function is the under

1989
01:38:23,940 --> 01:38:31,820
our each underlying table or some per

1990
01:38:27,480 --> 01:38:35,759
Section basis so it's it's not clear so

1991
01:38:31,820 --> 01:38:39,320
a better solution is use what we call

1992
01:38:35,760 --> 01:38:44,190
the PBT M is a document it in another

1993
01:38:39,320 --> 01:38:46,590
draft we submit it to I PP M so the

1994
01:38:44,190 --> 01:38:50,219
basic idea is that we instead of insert

1995
01:38:46,590 --> 01:38:52,739
a new header into the packet we just use

1996
01:38:50,219 --> 01:38:55,199
a single bit to mark the packet if we

1997
01:38:52,739 --> 01:38:58,290
want to collect any data about it so

1998
01:38:55,199 --> 01:39:00,750
once a segment router received this

1999
01:38:58,290 --> 01:39:03,210
packet and detective speed it will just

2000
01:39:00,750 --> 01:39:05,520
a base down to some pre configurations

2001
01:39:03,210 --> 01:39:08,580
and collect some data about this package

2002
01:39:05,520 --> 01:39:12,330
and send it directly to a collector

2003
01:39:08,580 --> 01:39:15,269
using a postcard packet so it solves a

2004
01:39:12,330 --> 01:39:17,510
performance issue because it doesn't

2005
01:39:15,270 --> 01:39:20,790
process user packet it directly just

2006
01:39:17,510 --> 01:39:23,790
detecting the 'martha from it and it

2007
01:39:20,790 --> 01:39:25,949
wired any pesticides inflation and it

2008
01:39:23,790 --> 01:39:29,880
avoids the trouble of encapsulation and

2009
01:39:25,949 --> 01:39:32,790
it guaranteed better security arm for

2010
01:39:29,880 --> 01:39:35,239
the for the data exported and also it

2011
01:39:32,790 --> 01:39:37,890
has extra benefit to be able to detect

2012
01:39:35,239 --> 01:39:41,669
the location of the job

2013
01:39:37,890 --> 01:39:44,190
it was the user traffic is dropped but

2014
01:39:41,670 --> 01:39:47,430
it also introduced some new issues like

2015
01:39:44,190 --> 01:39:51,960
we do since if we have a bunch of a

2016
01:39:47,430 --> 01:39:54,630
postcard sending from many segments

2017
01:39:51,960 --> 01:39:56,880
routers for each single packet

2018
01:39:54,630 --> 01:40:00,030
let me need to have a mechanics to

2019
01:39:56,880 --> 01:40:02,580
correlate this postcard and also there

2020
01:40:00,030 --> 01:40:05,340
it introduced a little bit higher export

2021
01:40:02,580 --> 01:40:06,960
data overhead because each piece of data

2022
01:40:05,340 --> 01:40:10,530
from each router you will need an

2023
01:40:06,960 --> 01:40:12,780
independent packet and also you do need

2024
01:40:10,530 --> 01:40:16,040
to configuration because there's no more

2025
01:40:12,780 --> 01:40:18,570
instruction carried by the packet itself

2026
01:40:16,040 --> 01:40:22,350
however this all this issue can be

2027
01:40:18,570 --> 01:40:24,960
correctly solved and therefore that the

2028
01:40:22,350 --> 01:40:27,270
proposal is actually quite simple

2029
01:40:24,960 --> 01:40:30,120
since we already have a

2030
01:40:27,270 --> 01:40:32,550
flag fields in the Asajj header then we

2031
01:40:30,120 --> 01:40:35,040
can just a borrow one bit from that part

2032
01:40:32,550 --> 01:40:38,400
it's not necessary to be the first bit

2033
01:40:35,040 --> 01:40:41,010
any bit will do so but use this single

2034
01:40:38,400 --> 01:40:43,320
bit as indicator if you ever want to

2035
01:40:41,010 --> 01:40:47,490
collect the unpassed data about this

2036
01:40:43,320 --> 01:40:49,559
packet you just enable that bit and how

2037
01:40:47,490 --> 01:40:52,110
to solve the packet correlation problem

2038
01:40:49,560 --> 01:40:54,960
there are some common measures already

2039
01:40:52,110 --> 01:40:58,200
be documented in our postcard based

2040
01:40:54,960 --> 01:41:00,120
email telemetry Draft and here for as

2041
01:40:58,200 --> 01:41:02,820
actually we have extra advantage because

2042
01:41:00,120 --> 01:41:06,090
we already have the segment list and

2043
01:41:02,820 --> 01:41:10,410
which can help we ask to order the

2044
01:41:06,090 --> 01:41:13,710
postcards correctly and if we need some

2045
01:41:10,410 --> 01:41:16,620
extra information such as a flow ID for

2046
01:41:13,710 --> 01:41:19,290
the flow correlation or sequence number

2047
01:41:16,620 --> 01:41:22,800
for the packet correlation then we can

2048
01:41:19,290 --> 01:41:28,200
include them as simply as a tea always

2049
01:41:22,800 --> 01:41:30,810
in SRH so I think this a pretty simple

2050
01:41:28,200 --> 01:41:35,220
and elegant solution and therefore I

2051
01:41:30,810 --> 01:41:38,190
think it might be considered as a formal

2052
01:41:35,220 --> 01:41:39,990
document in the working group yeah

2053
01:41:38,190 --> 01:41:41,790
suresh krisshnan so not speaking as a

2054
01:41:39,990 --> 01:41:44,040
tea but as somebody who has an inventor

2055
01:41:41,790 --> 01:41:46,440
elementary implementation yeah I think

2056
01:41:44,040 --> 01:41:48,750
the idea of having something in the

2057
01:41:46,440 --> 01:41:51,480
payload protocol to mark in bang

2058
01:41:48,750 --> 01:41:52,800
telemetric collection doesn't scale okay

2059
01:41:51,480 --> 01:41:54,389
so if you want to do this for every

2060
01:41:52,800 --> 01:41:56,190
protocol for which you want to do in

2061
01:41:54,390 --> 01:41:58,020
bond telemetry it's not going to work

2062
01:41:56,190 --> 01:41:59,400
okay so you need to do something outside

2063
01:41:58,020 --> 01:42:01,080
the payload for which you need to

2064
01:41:59,400 --> 01:42:05,009
collect so I think it's not the right

2065
01:42:01,080 --> 01:42:07,110
approach 100 what about for encrypted

2066
01:42:05,010 --> 01:42:09,000
HTTP packets how do you signal you want

2067
01:42:07,110 --> 01:42:14,400
to have telemetry for that it's just

2068
01:42:09,000 --> 01:42:15,930
it's a head of a search Parsa Raj let's

2069
01:42:14,400 --> 01:42:17,790
say there's no a syrette right you have

2070
01:42:15,930 --> 01:42:19,890
a HTTP packet that's flowing through

2071
01:42:17,790 --> 01:42:21,570
your system right and you want to

2072
01:42:19,890 --> 01:42:25,830
collect telemetry for that Yeah right

2073
01:42:21,570 --> 01:42:29,130
where you signal so this is about second

2074
01:42:25,830 --> 01:42:31,590
routing so you said this is required for

2075
01:42:29,130 --> 01:42:34,020
in van telemetry to signal collection of

2076
01:42:31,590 --> 01:42:36,210
postcards right so if you want to do

2077
01:42:34,020 --> 01:42:38,730
that for every protocol that you carry

2078
01:42:36,210 --> 01:42:40,620
including SRH which is a protocol they

2079
01:42:38,730 --> 01:42:41,290
say this is the best free implementation

2080
01:42:40,620 --> 01:42:44,410
for us or

2081
01:42:41,290 --> 01:42:47,580
six so the PBT is a general approach

2082
01:42:44,410 --> 01:42:50,349
general method it can be applied to any

2083
01:42:47,580 --> 01:42:53,290
transport protocols but this is just a

2084
01:42:50,350 --> 01:42:55,780
specific proposal how you will apply is

2085
01:42:53,290 --> 01:42:57,160
it to SR v6 but I don't think this bit

2086
01:42:55,780 --> 01:42:58,389
is required that's the point I was

2087
01:42:57,160 --> 01:43:00,910
trying to make because for every

2088
01:42:58,390 --> 01:43:02,220
protocol is oh I I don't understand why

2089
01:43:00,910 --> 01:43:04,990
you're saying it's not required because

2090
01:43:02,220 --> 01:43:07,810
sometimes I just want to follow the path

2091
01:43:04,990 --> 01:43:09,730
of this packet and also want to monitor

2092
01:43:07,810 --> 01:43:13,300
the per section upper segment and

2093
01:43:09,730 --> 01:43:15,759
latency or no any other application use

2094
01:43:13,300 --> 01:43:17,980
cases for this if I want to collect this

2095
01:43:15,760 --> 01:43:20,110
data I have no other ways to do that so

2096
01:43:17,980 --> 01:43:22,269
you have an active and a passive or EMS

2097
01:43:20,110 --> 01:43:25,179
ER but they know directly give you the

2098
01:43:22,270 --> 01:43:26,470
user package behavior no but if you

2099
01:43:25,180 --> 01:43:28,810
don't have any sir edge how do you do

2100
01:43:26,470 --> 01:43:31,270
this what if you don't have it sir edge

2101
01:43:28,810 --> 01:43:32,680
how do you do it then this depends on

2102
01:43:31,270 --> 01:43:34,780
different protocol you can find

2103
01:43:32,680 --> 01:43:35,830
different ways a call does not make

2104
01:43:34,780 --> 01:43:37,900
sense that is my point

2105
01:43:35,830 --> 01:43:39,670
yeah I'm just saying for SRA should we

2106
01:43:37,900 --> 01:43:42,610
do have the weight because there are

2107
01:43:39,670 --> 01:43:46,270
flags we can just use single bit turn

2108
01:43:42,610 --> 01:43:48,219
from Cisco Systems I'm not sure about

2109
01:43:46,270 --> 01:43:50,550
the IP pm part of this or anything but

2110
01:43:48,220 --> 01:43:53,050
it seems like you've got a bit that says

2111
01:43:50,550 --> 01:43:55,180
copy this packet and do something with

2112
01:43:53,050 --> 01:43:57,490
it isn't that I don't copy of the packet

2113
01:43:55,180 --> 01:44:00,250
sorry I just uh sets they submit to you

2114
01:43:57,490 --> 01:44:02,320
this RH and then it's just basically

2115
01:44:00,250 --> 01:44:04,870
notify the router to you know I

2116
01:44:02,320 --> 01:44:06,700
understand yet at that router that

2117
01:44:04,870 --> 01:44:08,380
processes this header it sees that a bit

2118
01:44:06,700 --> 01:44:10,059
is set yeah and then it does some

2119
01:44:08,380 --> 01:44:11,410
special something or other yeah okay and

2120
01:44:10,060 --> 01:44:14,410
I don't know what that special something

2121
01:44:11,410 --> 01:44:16,120
rather is right but there's a bit that

2122
01:44:14,410 --> 01:44:18,010
we just talked about earlier that was a

2123
01:44:16,120 --> 01:44:20,110
in the working group document that does

2124
01:44:18,010 --> 01:44:22,090
that so you might want to consider

2125
01:44:20,110 --> 01:44:23,620
whether you need this bit or if there's

2126
01:44:22,090 --> 01:44:26,470
something else that already exists and

2127
01:44:23,620 --> 01:44:28,300
that's without understanding how you're

2128
01:44:26,470 --> 01:44:34,360
gonna use this just it looks like the

2129
01:44:28,300 --> 01:44:37,830
same thing yep okay go so hobby

2130
01:44:34,360 --> 01:44:40,420
I added some clarification regarding the

2131
01:44:37,830 --> 01:44:42,370
usual I think that they say you know we

2132
01:44:40,420 --> 01:44:44,920
always talk about the I sorry six

2133
01:44:42,370 --> 01:44:48,849
because we in fact that we have some

2134
01:44:44,920 --> 01:44:51,490
days the the boundary of the network

2135
01:44:48,850 --> 01:44:53,560
sometimes we think i sorry six me you

2136
01:44:51,490 --> 01:44:55,148
was further limited to me and not for

2137
01:44:53,560 --> 01:44:57,010
the other internet

2138
01:44:55,149 --> 01:44:59,469
so I think ideally you some the

2139
01:44:57,010 --> 01:45:01,749
difference yes oh and also this one

2140
01:44:59,469 --> 01:45:04,989
because I you mentioned the HTTP package

2141
01:45:01,749 --> 01:45:08,679
so these we may use some the HTTP is

2142
01:45:04,989 --> 01:45:11,379
repaired by the I sorry sixth ah no in

2143
01:45:08,679 --> 01:45:13,629
some limited Otomi for the mobile

2144
01:45:11,379 --> 01:45:16,389
transporter like this one so only this

2145
01:45:13,629 --> 01:45:19,899
information you the is the exporter in

2146
01:45:16,389 --> 01:45:21,610
the mobile transporter I think this is

2147
01:45:19,899 --> 01:45:24,969
the scenario but I think if you think

2148
01:45:21,610 --> 01:45:27,339
may be more general for the HTTP or some

2149
01:45:24,969 --> 01:45:29,949
the application there if you need a some

2150
01:45:27,340 --> 01:45:35,379
days director this information I think

2151
01:45:29,949 --> 01:45:40,148
that maybe other solution I'll go after

2152
01:45:35,379 --> 01:45:43,149
towel algo Thomas rahi so first of all I

2153
01:45:40,149 --> 01:45:46,059
agree with the this use case I agree

2154
01:45:43,149 --> 01:45:47,709
with what has been said here that

2155
01:45:46,059 --> 01:45:50,289
basically this is a different

2156
01:45:47,709 --> 01:45:52,119
application than alternate marking but

2157
01:45:50,289 --> 01:45:53,530
they can both use the same kind of

2158
01:45:52,119 --> 01:45:56,320
trigger at the end of the day it's a

2159
01:45:53,530 --> 01:45:57,969
trigger for doing something and I

2160
01:45:56,320 --> 01:46:01,239
believe it's the same requirement from

2161
01:45:57,969 --> 01:46:04,079
the data plane so a common solution can

2162
01:46:01,239 --> 01:46:09,518
be found for both yeah I agree

2163
01:46:04,079 --> 01:46:11,499
them do you want to go ahead of me with

2164
01:46:09,519 --> 01:46:13,629
manic smokey eye I have a question is

2165
01:46:11,499 --> 01:46:14,769
this in the context of APN six which was

2166
01:46:13,629 --> 01:46:17,499
discussed yesterday in the routing

2167
01:46:14,769 --> 01:46:19,780
working group oh no sorry this is the

2168
01:46:17,499 --> 01:46:21,550
first time I present me nobody from a

2169
01:46:19,780 --> 01:46:24,938
solution perspective on how you're going

2170
01:46:21,550 --> 01:46:26,949
to use it is this related to the or is

2171
01:46:24,939 --> 01:46:29,709
it a PNM six which was yesterday

2172
01:46:26,949 --> 01:46:32,348
discussing routing working group I say I

2173
01:46:29,709 --> 01:46:33,909
say now they say you do not directly

2174
01:46:32,349 --> 01:46:36,129
relate to the agent six

2175
01:46:33,909 --> 01:46:38,888
even though as Harvey six is because of

2176
01:46:36,129 --> 01:46:42,669
you maybe the user pair that the packet

2177
01:46:38,889 --> 01:46:44,709
appeared the PI sorry sixth ah no you I

2178
01:46:42,669 --> 01:46:46,659
mean you know I you you probably have a

2179
01:46:44,709 --> 01:46:48,309
use case on how you're going to use this

2180
01:46:46,659 --> 01:46:51,489
right for me this looks very similar

2181
01:46:48,309 --> 01:46:54,489
what's yeah the use case achieve with AP

2182
01:46:51,489 --> 01:46:57,009
and six and if that's true I think we

2183
01:46:54,489 --> 01:47:00,820
first need to flush out whether ap and

2184
01:46:57,010 --> 01:47:03,189
six as a use case is actually something

2185
01:47:00,820 --> 01:47:06,070
ITF will adopt and how and so on so

2186
01:47:03,189 --> 01:47:08,379
forth so for me I think we shouldn't

2187
01:47:06,070 --> 01:47:09,290
rush into the solution space every tooth

2188
01:47:08,379 --> 01:47:11,420
first is

2189
01:47:09,290 --> 01:47:12,740
the use case and how is applicable and

2190
01:47:11,420 --> 01:47:15,080
how it will whether it will ever use

2191
01:47:12,740 --> 01:47:17,360
because if a PM six you have lots of

2192
01:47:15,080 --> 01:47:18,590
let's say privacy issues and stuff like

2193
01:47:17,360 --> 01:47:20,330
that which were discussed yesterday in

2194
01:47:18,590 --> 01:47:22,370
routing working group so my suggestion

2195
01:47:20,330 --> 01:47:24,200
would be if it's related to that

2196
01:47:22,370 --> 01:47:26,240
let's first flush this out before we

2197
01:47:24,200 --> 01:47:29,870
rush into solution space here I think

2198
01:47:26,240 --> 01:47:32,360
starting points about yeah women I think

2199
01:47:29,870 --> 01:47:34,580
are now they say now that's the two

2200
01:47:32,360 --> 01:47:38,170
things and you now you certificado

2201
01:47:34,580 --> 01:47:41,570
since this is either the days of the

2202
01:47:38,170 --> 01:47:44,660
elementary embedded elementary so these

2203
01:47:41,570 --> 01:47:47,059
are you the Isar past level as are

2204
01:47:44,660 --> 01:47:49,610
possible years as yeah but at the AP and

2205
01:47:47,060 --> 01:47:51,500
that maybe later can't combine that we

2206
01:47:49,610 --> 01:47:53,809
look together that's a user application

2207
01:47:51,500 --> 01:47:56,720
level I think that's a even until now I

2208
01:47:53,810 --> 01:47:58,310
don't think the cobbler together right

2209
01:47:56,720 --> 01:48:00,650
right they see intent to monitor the

2210
01:47:58,310 --> 01:48:03,200
segments of voting behavior the

2211
01:48:00,650 --> 01:48:05,540
performance yeah so on so description so

2212
01:48:03,200 --> 01:48:07,580
just answering Robyn's point right so I

2213
01:48:05,540 --> 01:48:10,820
do understand why you're doing the

2214
01:48:07,580 --> 01:48:12,710
postcard base telemetry I just don't see

2215
01:48:10,820 --> 01:48:14,330
why you want to do it for every protocol

2216
01:48:12,710 --> 01:48:16,430
because if you're doing this for s rv6

2217
01:48:14,330 --> 01:48:17,750
you probably had to do it for NS h for

2218
01:48:16,430 --> 01:48:19,160
some other protocol that's gonna go

2219
01:48:17,750 --> 01:48:20,780
through right but if you have it outside

2220
01:48:19,160 --> 01:48:22,460
the protocol it's it's similar to saying

2221
01:48:20,780 --> 01:48:25,340
like oh I want to collect like some net

2222
01:48:22,460 --> 01:48:27,200
flow information right from from a some

2223
01:48:25,340 --> 01:48:28,880
kind of packet and the packet itself has

2224
01:48:27,200 --> 01:48:31,580
a bit in there it says like hey now send

2225
01:48:28,880 --> 01:48:33,170
your statistics so I I think that's not

2226
01:48:31,580 --> 01:48:35,150
a scalable approach you may or may not

2227
01:48:33,170 --> 01:48:37,700
want to do it but I'm just telling you

2228
01:48:35,150 --> 01:48:39,110
doing this per protocol for which you

2229
01:48:37,700 --> 01:48:41,660
want to get postcards base telemetry

2230
01:48:39,110 --> 01:48:43,849
it's not gonna work I'm a talk no

2231
01:48:41,660 --> 01:48:46,160
talking about applies to every particle

2232
01:48:43,850 --> 01:48:46,910
but here I just are talking about how to

2233
01:48:46,160 --> 01:48:51,650
apply it in

2234
01:48:46,910 --> 01:48:54,650
sro v6 yeah Brad she was sorry I think

2235
01:48:51,650 --> 01:48:57,019
so I see that in it's interesting to to

2236
01:48:54,650 --> 01:49:01,280
be how having a packet can way that hey

2237
01:48:57,020 --> 01:49:04,310
do something with me yeah and related to

2238
01:49:01,280 --> 01:49:07,670
what Suresh was saying this is very

2239
01:49:04,310 --> 01:49:10,460
specific for si v6 when there's an SR H

2240
01:49:07,670 --> 01:49:12,460
in place right so I'm just curious to

2241
01:49:10,460 --> 01:49:16,970
hear your point of view why restrict

2242
01:49:12,460 --> 01:49:19,550
this to that specific use case why not

2243
01:49:16,970 --> 01:49:21,560
just do it on ipv6 there are tons of

2244
01:49:19,550 --> 01:49:22,850
deployments out there just with native

2245
01:49:21,560 --> 01:49:25,370
ipv6

2246
01:49:22,850 --> 01:49:27,350
why not do it in somewhere in ipv6 main

2247
01:49:25,370 --> 01:49:29,630
header just curious yeah I don't think

2248
01:49:27,350 --> 01:49:33,020
that we're not we could do it or not yes

2249
01:49:29,630 --> 01:49:36,740
so so if you look at our original draft

2250
01:49:33,020 --> 01:49:38,420
on the PBT when we talk about this we

2251
01:49:36,740 --> 01:49:41,000
actually give several possibility to

2252
01:49:38,420 --> 01:49:44,930
apply this in several different other

2253
01:49:41,000 --> 01:49:48,500
protocols but here because those are

2254
01:49:44,930 --> 01:49:52,190
high level mastered and it has some a

2255
01:49:48,500 --> 01:49:55,100
married compared with IOM and here are

2256
01:49:52,190 --> 01:49:58,969
we just give a if you want to apply this

2257
01:49:55,100 --> 01:50:03,500
to to support the OEM for sr v6 how you

2258
01:49:58,970 --> 01:50:06,350
can do that so then we need to find a

2259
01:50:03,500 --> 01:50:08,750
place to hold this mark so that's a

2260
01:50:06,350 --> 01:50:10,760
proposal here if you make talking about

2261
01:50:08,750 --> 01:50:13,100
if you want to apply this different to

2262
01:50:10,760 --> 01:50:15,500
different our networks to difference

2263
01:50:13,100 --> 01:50:18,770
narrows you do need to find a you know a

2264
01:50:15,500 --> 01:50:21,230
place to host to host this this mark so

2265
01:50:18,770 --> 01:50:23,840
that's a different issue or not for this

2266
01:50:21,230 --> 01:50:27,500
our working group why not do it in the

2267
01:50:23,840 --> 01:50:31,700
ipv6 header was my question yeah so so

2268
01:50:27,500 --> 01:50:34,190
far I don't have a you know very you

2269
01:50:31,700 --> 01:50:38,000
know solid idea how we can do that in

2270
01:50:34,190 --> 01:50:40,960
our ipv6 because you know I don't I

2271
01:50:38,000 --> 01:50:47,420
cannot find a a bit to hold the mark

2272
01:50:40,960 --> 01:50:49,070
yeah so that's a usual thanks again I

2273
01:50:47,420 --> 01:50:54,320
don't quite understand that statement

2274
01:50:49,070 --> 01:50:57,519
because we have draft or a metal IP p.m.

2275
01:50:54,320 --> 01:51:00,139
six-man IRA and ipv6 deployment for much

2276
01:50:57,520 --> 01:51:04,070
yeah which is talking about doing this

2277
01:51:00,140 --> 01:51:07,040
in ipv6 not in s o v6 off because that's

2278
01:51:04,070 --> 01:51:08,750
the user are actual extension headers

2279
01:51:07,040 --> 01:51:10,460
yes you use an extension header you

2280
01:51:08,750 --> 01:51:12,380
you're stealing a bit in someone else's

2281
01:51:10,460 --> 01:51:14,960
extension but it's still an extension of

2282
01:51:12,380 --> 01:51:18,440
the existing header I don't introduce a

2283
01:51:14,960 --> 01:51:20,840
new header to that that exactly as I

2284
01:51:18,440 --> 01:51:21,440
said the problem here is a overhead

2285
01:51:20,840 --> 01:51:23,330
issue

2286
01:51:21,440 --> 01:51:26,960
I don't want introduce and you had her

2287
01:51:23,330 --> 01:51:29,320
to expand the size further yeah pointed

2288
01:51:26,960 --> 01:51:32,560
Suresh is making is

2289
01:51:29,320 --> 01:51:35,889
your solution is only Universal within a

2290
01:51:32,560 --> 01:51:44,679
domain where everything is encapsulated

2291
01:51:35,889 --> 01:51:49,030
in and has a certain H the other raft

2292
01:51:44,679 --> 01:51:52,210
which is an I ppm draft I guess would

2293
01:51:49,030 --> 01:51:54,099
work for every ipv6 packet in the world

2294
01:51:52,210 --> 01:51:57,010
if we decided to support such an

2295
01:51:54,099 --> 01:52:01,050
extension so that's the that's the

2296
01:51:57,010 --> 01:52:03,610
decision that somebody needs to take

2297
01:52:01,050 --> 01:52:05,079
yeah thank you so I mean this is a

2298
01:52:03,610 --> 01:52:07,150
lightening Draft

2299
01:52:05,079 --> 01:52:08,530
I think this clearly more work needed

2300
01:52:07,150 --> 01:52:12,659
here and certainly coordination between

2301
01:52:08,530 --> 01:52:14,829
I ppm you know I'll spring for this case

2302
01:52:12,659 --> 01:52:17,829
you should you know probably sit down

2303
01:52:14,829 --> 01:52:20,769
with the old mark authors and and look

2304
01:52:17,829 --> 01:52:23,049
at that as well I mean we there has to

2305
01:52:20,770 --> 01:52:25,449
be some you know coordination of this

2306
01:52:23,050 --> 01:52:27,610
set of markers in packets you know for

2307
01:52:25,449 --> 01:52:31,360
sure yes so you know let's continue that

2308
01:52:27,610 --> 01:52:33,009
on the on the list so we are actually

2309
01:52:31,360 --> 01:52:34,570
eight minutes earlier I think I can't

2310
01:52:33,010 --> 01:52:37,110
remember that has ever happened while

2311
01:52:34,570 --> 01:52:40,420
I've been co-chair at this working group

2312
01:52:37,110 --> 01:52:43,809
luckily we have one more session that

2313
01:52:40,420 --> 01:52:46,360
starts at 1740 the same room

2314
01:52:43,810 --> 01:52:47,619
please bring popcorn cause we have

2315
01:52:46,360 --> 01:52:51,489
planned for a very entertaining

2316
01:52:47,619 --> 01:52:53,710
discussion and see you then

2317
01:52:51,489 --> 01:52:57,900
interior is in the meantime but it's not

2318
01:52:53,710 --> 01:53:06,070
going to be here there's a sea bore

2319
01:52:57,900 --> 01:53:07,388
class I think thank you the second blue

2320
01:53:06,070 --> 01:53:11,549
sheet if you have that can you please

2321
01:53:07,389 --> 01:53:11,550
bring it up to the stage thank you

2322
01:53:12,190 --> 01:53:15,320
[Music]

