1
00:02:25,580 --> 00:02:51,610
I don't know what okay yeah the

2
00:02:45,980 --> 00:02:51,609
projectors are you connected your Mac no

3
00:03:04,390 --> 00:03:17,390
sorry we were having some AV issues here

4
00:03:08,209 --> 00:03:34,880
okay we should be good now this is the

5
00:03:17,390 --> 00:03:40,700
net contracting group all right so let's

6
00:03:34,880 --> 00:03:43,579
started its time with me is lo he's

7
00:03:40,700 --> 00:03:47,119
replacing he's in place for Kent Watson

8
00:03:43,580 --> 00:03:49,280
who is not he'll live

9
00:03:47,120 --> 00:03:56,960
actually Kent is attending the meeting

10
00:03:49,280 --> 00:04:00,050
remotely so Lu is helping me out oh this

11
00:03:56,960 --> 00:04:02,350
is the note well anything you say or

12
00:04:00,050 --> 00:04:13,250
discuss in this room or in the hallways

13
00:04:02,350 --> 00:04:16,298
is covered by the note well at idea the

14
00:04:13,250 --> 00:04:20,720
blue sheets should have been circulating

15
00:04:16,298 --> 00:04:23,900
make sure you do sign up when you are

16
00:04:20,720 --> 00:04:27,020
speaking in make sure you're using the

17
00:04:23,900 --> 00:04:29,929
microphones and for people who are

18
00:04:27,020 --> 00:04:33,560
trying to scribe make sure that you name

19
00:04:29,930 --> 00:04:43,040
state your name slowly and so for them

20
00:04:33,560 --> 00:04:45,830
to be able to make a record of it okay

21
00:04:43,040 --> 00:04:47,090
so Lu's gonna help me with Jabbar thank

22
00:04:45,830 --> 00:04:50,450
you

23
00:04:47,090 --> 00:04:56,330
we do have etherpad would really

24
00:04:50,450 --> 00:04:58,250
appreciate people adding they're adding

25
00:04:56,330 --> 00:05:04,580
to the etherpad and taking whatever

26
00:04:58,250 --> 00:05:06,320
minutes we can for the meeting so the

27
00:05:04,580 --> 00:05:12,169
RFC is published since the last meeting

28
00:05:06,320 --> 00:05:14,950
we have a few mostly the yang

29
00:05:12,170 --> 00:05:16,850
notification yang push set of drafts so

30
00:05:14,950 --> 00:05:19,460
congratulations to the earth all the

31
00:05:16,850 --> 00:05:26,030
author's for having finally finished

32
00:05:19,460 --> 00:05:30,409
that work with the status for the list

33
00:05:26,030 --> 00:05:33,349
of charted workgroup items we still have

34
00:05:30,410 --> 00:05:37,310
the what we call the net compress count

35
00:05:33,350 --> 00:05:39,170
client suite of drafts that Kent is

36
00:05:37,310 --> 00:05:45,070
working in Kent and a couple of others

37
00:05:39,170 --> 00:05:48,120
are working on the HTTP client server

38
00:05:45,070 --> 00:05:53,430
document did go through

39
00:05:48,120 --> 00:05:55,500
work group adoption and we had a HTTP

40
00:05:53,430 --> 00:05:58,229
business and I had a discussion this

41
00:05:55,500 --> 00:06:01,470
afternoon to try to resolve any concerns

42
00:05:58,229 --> 00:06:03,900
that they had so I think we have come to

43
00:06:01,470 --> 00:06:06,030
a resolution that they're okay with the

44
00:06:03,900 --> 00:06:08,219
work proceeding in that con so they were

45
00:06:06,030 --> 00:06:13,138
group document so it is of a group

46
00:06:08,220 --> 00:06:15,000
document now and I'll work with the

47
00:06:13,139 --> 00:06:17,010
authors to try to address some of the

48
00:06:15,000 --> 00:06:23,520
issues that the HTTP business Aires

49
00:06:17,010 --> 00:06:25,469
raised during that meeting the yang push

50
00:06:23,520 --> 00:06:27,539
notification capabilities is pass

51
00:06:25,470 --> 00:06:31,490
working group last call I serve allies

52
00:06:27,540 --> 00:06:35,460
did update the document in data tracker

53
00:06:31,490 --> 00:06:39,090
so I think it's we're ready to go ahead

54
00:06:35,460 --> 00:06:40,799
with publication of that document and

55
00:06:39,090 --> 00:06:42,960
the remaining two drafts yang push

56
00:06:40,800 --> 00:06:46,020
notification messages still work in

57
00:06:42,960 --> 00:06:49,190
progress I expect that there is a

58
00:06:46,020 --> 00:06:52,680
presentation that will be done I

59
00:06:49,190 --> 00:06:56,190
hopefully by hang if not then by Erich

60
00:06:52,680 --> 00:06:59,070
remotely and finally we have of course

61
00:06:56,190 --> 00:07:03,570
the HTTP notification which is a fairly

62
00:06:59,070 --> 00:07:07,050
new document so here's the agenda we'll

63
00:07:03,570 --> 00:07:09,440
start with of course the status and

64
00:07:07,050 --> 00:07:13,950
issues on client-server suite of drafts

65
00:07:09,440 --> 00:07:16,680
before we move to notification messages

66
00:07:13,950 --> 00:07:19,500
and notification capabilities

67
00:07:16,680 --> 00:07:21,389
presentation and we'll round up the

68
00:07:19,500 --> 00:07:24,440
charted list of items with my

69
00:07:21,389 --> 00:07:26,610
presentation on HDTV based notification

70
00:07:24,440 --> 00:07:28,880
transport for configured subscription

71
00:07:26,610 --> 00:07:28,880
sorry

72
00:07:29,910 --> 00:07:36,060
in the non-charter items we have two

73
00:07:32,870 --> 00:07:39,210
drafts to new drafts that the authors

74
00:07:36,060 --> 00:07:41,370
have published fairly recently and I

75
00:07:39,210 --> 00:07:45,750
hope we'll get a chance to hear from the

76
00:07:41,370 --> 00:07:51,240
authors and for anyone who has read

77
00:07:45,750 --> 00:07:54,139
those two documents any questions before

78
00:07:51,240 --> 00:07:54,139
we get started

79
00:08:00,120 --> 00:08:05,890
you're on tonight ah yes

80
00:08:03,070 --> 00:08:08,530
hey this Tim Carey with Nokia the

81
00:08:05,890 --> 00:08:11,560
udp-based publication channel for

82
00:08:08,530 --> 00:08:12,460
streaming telemetry do we know what the

83
00:08:11,560 --> 00:08:15,430
status of that is

84
00:08:12,460 --> 00:08:23,409
it used to be an adopted draft but I see

85
00:08:15,430 --> 00:08:27,640
it fell oh yeah yes so the that document

86
00:08:23,410 --> 00:08:29,950
I don't want to say got unadopted I

87
00:08:27,640 --> 00:08:33,900
think we the author's decided to merge

88
00:08:29,950 --> 00:08:37,960
that work with multi streams originator

89
00:08:33,900 --> 00:08:39,990
and unfortunately we don't have a

90
00:08:37,960 --> 00:08:46,540
presentation of multi streams originator

91
00:08:39,990 --> 00:08:48,400
in this session so for all practical

92
00:08:46,540 --> 00:08:50,140
purposes I think we're just looking at

93
00:08:48,400 --> 00:08:53,250
one document which is the multi stream

94
00:08:50,140 --> 00:08:53,250
so originator document

95
00:08:57,730 --> 00:09:19,870
hi can you hear me yeah did someone try

96
00:09:17,260 --> 00:09:20,200
to say something remotely yeah this is

97
00:09:19,870 --> 00:09:24,250
me

98
00:09:20,200 --> 00:09:28,990
can't can hear me Oh Kent okay it's not

99
00:09:24,250 --> 00:09:29,370
is it too quiet if anything a little

100
00:09:28,990 --> 00:09:32,980
louder

101
00:09:29,370 --> 00:09:35,590
okay softer yeah that's better

102
00:09:32,980 --> 00:09:37,930
okay yes for some reason not showing up

103
00:09:35,590 --> 00:09:39,550
in the queue but you're talking right

104
00:09:37,930 --> 00:09:41,949
because I just simply had a microphone

105
00:09:39,550 --> 00:09:45,459
button I wanted to respond to Tim on

106
00:09:41,950 --> 00:09:52,330
that last question go ahead

107
00:09:45,460 --> 00:09:54,730
if the UDP work itself was suspended

108
00:09:52,330 --> 00:09:58,060
let's just say that the intent is that

109
00:09:54,730 --> 00:10:02,580
they would or someone will it republish

110
00:09:58,060 --> 00:10:05,650
any a draft that would be a udp-based

111
00:10:02,580 --> 00:10:13,110
notice for those subscribed

112
00:10:05,650 --> 00:10:13,110
notifications work does that make sense

113
00:10:13,500 --> 00:10:17,580
the multi-stream originator draft is

114
00:10:15,910 --> 00:10:21,270
really just about how to send

115
00:10:17,580 --> 00:10:24,450
notifications from wine carts or

116
00:10:21,270 --> 00:10:29,699
satellite systems and it's not itself

117
00:10:24,450 --> 00:10:29,700
with respect to UDP in any way

118
00:10:36,950 --> 00:10:44,709
okay channeling Tim Kerry he says yes

119
00:10:41,930 --> 00:10:44,709
thanks Kent

120
00:10:45,399 --> 00:10:52,250
okay you're up Kent

121
00:10:48,370 --> 00:10:58,070
okay so I'll press the button join the

122
00:10:52,250 --> 00:11:01,040
queue can you see me E

123
00:10:58,070 --> 00:11:02,600
yes okay great good afternoon everyone

124
00:11:01,040 --> 00:11:05,029
morning for me yourself

125
00:11:02,600 --> 00:11:09,350
and I just hooked up and trying to eat

126
00:11:05,029 --> 00:11:10,730
on the house as far as the slides go are

127
00:11:09,350 --> 00:11:17,110
you gonna protect them I don't see them

128
00:11:10,730 --> 00:11:19,310
yet they are being projected okay I

129
00:11:17,110 --> 00:11:23,050
again don't see them but I'll just

130
00:11:19,310 --> 00:11:27,739
simply say next slide okay great

131
00:11:23,050 --> 00:11:30,290
again welcome well I'm not there but I'm

132
00:11:27,740 --> 00:11:32,899
still there today we're going to be

133
00:11:30,290 --> 00:11:37,579
presenting the again the client-server

134
00:11:32,899 --> 00:11:41,060
suite of drafts and you can see that

135
00:11:37,579 --> 00:11:43,880
they're now all adopted the HTTP client

136
00:11:41,060 --> 00:11:45,920
server draft is in grey because while

137
00:11:43,880 --> 00:11:48,199
it's adopted it's not yet posted so um

138
00:11:45,920 --> 00:11:49,459
well actually I guess still be talking

139
00:11:48,199 --> 00:11:52,790
about the Kay Watson draft that was

140
00:11:49,459 --> 00:11:57,018
published before next slide please

141
00:11:52,790 --> 00:11:59,149
oh by the way and I can't even see if

142
00:11:57,019 --> 00:12:02,600
you have index to the next slide what I

143
00:11:59,149 --> 00:12:04,699
did see is the audience in case Lorenzo

144
00:12:02,600 --> 00:12:06,649
or anyone's listening if you could

145
00:12:04,699 --> 00:12:10,399
somehow pan to their slides for me and

146
00:12:06,649 --> 00:12:12,649
I'd be great so I'm not gonna go over

147
00:12:10,399 --> 00:12:15,370
this slide and in detail but a lot of

148
00:12:12,649 --> 00:12:19,120
work has been done since the last ITF

149
00:12:15,370 --> 00:12:22,390
all the graphs have been updated twice

150
00:12:19,120 --> 00:12:22,390
next slide please

151
00:12:23,700 --> 00:12:31,680
this presentation is going to go over

152
00:12:25,260 --> 00:12:33,630
six different item or topics and I we

153
00:12:31,680 --> 00:12:36,050
have 45 minutes for this discussion

154
00:12:33,630 --> 00:12:39,439
I can't imagine it'll take that long

155
00:12:36,050 --> 00:12:39,439
next slide please

156
00:12:40,340 --> 00:12:47,270
so first we'll be talking about key

157
00:12:42,510 --> 00:12:47,270
formats next slide please

158
00:12:47,750 --> 00:12:54,360
okay so in the e crypto types draft

159
00:12:50,580 --> 00:12:57,660
there is we've been discussing for quite

160
00:12:54,360 --> 00:13:01,680
some time how to support algorithms or I

161
00:12:57,660 --> 00:13:03,990
should say the algorithm note when when

162
00:13:01,680 --> 00:13:06,660
having public or private keys or even

163
00:13:03,990 --> 00:13:09,270
symmetric keys it's important for the

164
00:13:06,660 --> 00:13:14,339
client to be able to know what is the

165
00:13:09,270 --> 00:13:16,800
that algorithm itself that is I see the

166
00:13:14,340 --> 00:13:20,520
slides now from the video zooming in to

167
00:13:16,800 --> 00:13:22,349
that's funny from the from the algorithm

168
00:13:20,520 --> 00:13:26,100
without will with algorithms being used

169
00:13:22,350 --> 00:13:29,280
and we were actually using the algorithm

170
00:13:26,100 --> 00:13:31,740
node before for two purposes

171
00:13:29,280 --> 00:13:34,170
the first was exactly what I just said

172
00:13:31,740 --> 00:13:36,950
what was the algorithm being used but

173
00:13:34,170 --> 00:13:41,670
the second was how was it being encoded

174
00:13:36,950 --> 00:13:43,980
and sometimes a particular key value can

175
00:13:41,670 --> 00:13:47,370
be encoded in multiple different ways

176
00:13:43,980 --> 00:13:52,530
the simplest explanation for that might

177
00:13:47,370 --> 00:13:54,900
be if it's binary versus ASCII but also

178
00:13:52,530 --> 00:13:57,510
there's other kinds of encoding so for

179
00:13:54,900 --> 00:14:00,689
instance is it a rocky versus a key

180
00:13:57,510 --> 00:14:06,689
that's been embedded inside a content

181
00:14:00,690 --> 00:14:09,480
message syntax or CMS structure so we

182
00:14:06,690 --> 00:14:11,790
were we again we've been discussing how

183
00:14:09,480 --> 00:14:13,650
to encode the algorithm field for some

184
00:14:11,790 --> 00:14:17,250
time and and the crooks of that

185
00:14:13,650 --> 00:14:19,650
discussion has been mostly with regards

186
00:14:17,250 --> 00:14:23,520
to should it be identity or an

187
00:14:19,650 --> 00:14:25,140
enumeration should that be in IETF file

188
00:14:23,520 --> 00:14:26,819
or an eye on a file should be one file

189
00:14:25,140 --> 00:14:29,730
or multiple files and what we're still

190
00:14:26,820 --> 00:14:31,920
having some of that discussion but also

191
00:14:29,730 --> 00:14:34,590
part of that was in the description

192
00:14:31,920 --> 00:14:37,349
statement for that algorithm value would

193
00:14:34,590 --> 00:14:40,560
be how was that value encoded

194
00:14:37,350 --> 00:14:45,030
and while that may be a sufficient and

195
00:14:40,560 --> 00:14:48,209
viable strategy it was or it was thought

196
00:14:45,030 --> 00:14:51,750
that we could tease out that aspect of

197
00:14:48,210 --> 00:14:55,520
it and somehow simplify the remainder

198
00:14:51,750 --> 00:14:59,640
and enable the remainder to be

199
00:14:55,520 --> 00:15:05,970
determined more simply so hence this key

200
00:14:59,640 --> 00:15:10,140
format node was you came to life the key

201
00:15:05,970 --> 00:15:11,940
format node is a in a Dana B and on the

202
00:15:10,140 --> 00:15:14,939
left hand side you can see there's a

203
00:15:11,940 --> 00:15:17,670
base called key format and then there's

204
00:15:14,940 --> 00:15:19,530
three immediate descendant identities

205
00:15:17,670 --> 00:15:22,140
called public key private key and

206
00:15:19,530 --> 00:15:24,390
symmetric key by the way they all have

207
00:15:22,140 --> 00:15:27,510
format after them sorry actually public

208
00:15:24,390 --> 00:15:29,340
key format and symmetric key format and

209
00:15:27,510 --> 00:15:33,480
then underneath those there's also

210
00:15:29,340 --> 00:15:35,250
additional sub identities and also

211
00:15:33,480 --> 00:15:36,450
they'll they also have - format at the

212
00:15:35,250 --> 00:15:37,980
end of Emily I think I was trying to

213
00:15:36,450 --> 00:15:42,660
make the slide simpler and that's why I

214
00:15:37,980 --> 00:15:45,470
did that you can see at the the last two

215
00:15:42,660 --> 00:15:47,819
identities for private key format are

216
00:15:45,470 --> 00:15:50,190
controlled by an if feature statement

217
00:15:47,820 --> 00:15:53,130
and as well as the last two of the

218
00:15:50,190 --> 00:15:56,390
symmetric key format so here the C

219
00:15:53,130 --> 00:15:58,500
feature format statement is trying to

220
00:15:56,390 --> 00:16:01,350
this is where there's a different

221
00:15:58,500 --> 00:16:03,420
encoding but we're in one aspect you

222
00:16:01,350 --> 00:16:06,300
could that key could be expressed as a

223
00:16:03,420 --> 00:16:08,099
role value or alternatively as a

224
00:16:06,300 --> 00:16:11,069
structure or a value that's been

225
00:16:08,100 --> 00:16:14,850
embedded inside of another structure the

226
00:16:11,070 --> 00:16:17,940
one symmetric key itself is a CMS

227
00:16:14,850 --> 00:16:19,500
structure but it says it's just a man

228
00:16:17,940 --> 00:16:23,790
more technically it's I think it's a

229
00:16:19,500 --> 00:16:26,640
signed data CMS structure and and even

230
00:16:23,790 --> 00:16:30,719
more particularly the sign data has in

231
00:16:26,640 --> 00:16:33,030
it within it a variable that describes

232
00:16:30,720 --> 00:16:34,260
what is the embedded structure and if so

233
00:16:33,030 --> 00:16:35,370
it's a specific kind of embedded

234
00:16:34,260 --> 00:16:40,439
structure inside that signed data

235
00:16:35,370 --> 00:16:43,880
structure both these other two formats

236
00:16:40,440 --> 00:16:43,880
are defined by other artists ease

237
00:16:47,240 --> 00:16:53,810
next slide please and then so there's

238
00:16:52,070 --> 00:16:57,470
the identity hierarchy so that's one

239
00:16:53,810 --> 00:17:00,439
aspect and I should say that that is

240
00:16:57,470 --> 00:17:02,440
inside the crypto types or I hate to

241
00:17:00,440 --> 00:17:05,449
have crypto types that yang module and

242
00:17:02,440 --> 00:17:07,910
also inside that same module are three

243
00:17:05,449 --> 00:17:09,589
groupings the two and the left are for a

244
00:17:07,910 --> 00:17:13,010
symmetric keys and one on writers for

245
00:17:09,589 --> 00:17:15,050
symmetric keys and and these groupings

246
00:17:13,010 --> 00:17:17,030
have been around for some time but they

247
00:17:15,050 --> 00:17:21,079
the part that's in red is the important

248
00:17:17,030 --> 00:17:24,139
part you can see in the top left the

249
00:17:21,079 --> 00:17:26,419
public key grouping it now contains well

250
00:17:24,140 --> 00:17:27,829
first it contains the leaf algorithm so

251
00:17:26,420 --> 00:17:31,190
that leaf algorithm has been there for

252
00:17:27,829 --> 00:17:36,800
some time and the part that's in bright

253
00:17:31,190 --> 00:17:38,600
green is is sort of a the what we'll be

254
00:17:36,800 --> 00:17:40,669
discussing in the next the next topic

255
00:17:38,600 --> 00:17:43,250
but you know how do we describe

256
00:17:40,670 --> 00:17:45,679
algorithms and and are the identities

257
00:17:43,250 --> 00:17:47,480
her enumerations etc but it's that value

258
00:17:45,679 --> 00:17:50,450
but then the second leaf is the new one

259
00:17:47,480 --> 00:17:54,370
so this is a leaf that is containing an

260
00:17:50,450 --> 00:17:57,679
identity ref to a public key format so

261
00:17:54,370 --> 00:17:59,330
there's that and then and then you can

262
00:17:57,679 --> 00:18:02,210
see the other group in the asymmetric

263
00:17:59,330 --> 00:18:04,309
key pair grouping it uses that grouping

264
00:18:02,210 --> 00:18:06,940
uses the public key grouping because

265
00:18:04,309 --> 00:18:09,620
every private key also has a public key

266
00:18:06,940 --> 00:18:12,860
but it distinctly identifies its own

267
00:18:09,620 --> 00:18:15,169
private key format and yes both the

268
00:18:12,860 --> 00:18:18,020
public and private key values could be

269
00:18:15,170 --> 00:18:22,670
expressed differently most commonly they

270
00:18:18,020 --> 00:18:25,550
would be done similarly right but it is

271
00:18:22,670 --> 00:18:28,100
possible and you know and actually in

272
00:18:25,550 --> 00:18:32,120
some cases necessary I suppose if you

273
00:18:28,100 --> 00:18:34,520
want to encrypt your private key but the

274
00:18:32,120 --> 00:18:36,110
public key is still a role value so it's

275
00:18:34,520 --> 00:18:38,480
still possible I mean it's necessary

276
00:18:36,110 --> 00:18:41,689
that they could deviate or differ in

277
00:18:38,480 --> 00:18:44,450
their encoding strategies so there's so

278
00:18:41,690 --> 00:18:45,620
that's how a symmetric Keys the

279
00:18:44,450 --> 00:18:47,480
groupings for h to metric keys have been

280
00:18:45,620 --> 00:18:50,059
modified and then on the right hand side

281
00:18:47,480 --> 00:18:51,710
it's almost the same strategy but just

282
00:18:50,059 --> 00:18:54,770
there's only the symmetric key value so

283
00:18:51,710 --> 00:18:56,330
here the leaf is called key format as

284
00:18:54,770 --> 00:18:58,860
opposed to public key for Landon and

285
00:18:56,330 --> 00:19:01,199
private key format

286
00:18:58,860 --> 00:19:03,870
so that's the gist of this strategy and

287
00:19:01,200 --> 00:19:11,850
before I ask the question if there's any

288
00:19:03,870 --> 00:19:16,250
thoughts or concerns I'm gonna see what

289
00:19:11,850 --> 00:19:19,139
I want to say no I guess that is it oh

290
00:19:16,250 --> 00:19:22,020
oh yeah I'm sorry what I wanted to say

291
00:19:19,140 --> 00:19:26,280
was and I don't have a slight it's not

292
00:19:22,020 --> 00:19:32,190
on the slides but uh if after having

293
00:19:26,280 --> 00:19:35,220
done this most of the prior use of the

294
00:19:32,190 --> 00:19:40,260
algorithm leaf has been replaced with

295
00:19:35,220 --> 00:19:42,600
this new key format leak if you were to

296
00:19:40,260 --> 00:19:44,850
look at the entirety of the remainder of

297
00:19:42,600 --> 00:19:48,629
the egg modules you'll see that the only

298
00:19:44,850 --> 00:19:50,100
remaining use of the algorithm leaf at

299
00:19:48,630 --> 00:19:54,030
least from the clients perspective of

300
00:19:50,100 --> 00:19:56,399
being able to you know like the primary

301
00:19:54,030 --> 00:19:58,770
use is in the actions

302
00:19:56,400 --> 00:20:01,440
generate private key and generate

303
00:19:58,770 --> 00:20:02,970
symmetric key so you can clearly tell

304
00:20:01,440 --> 00:20:04,350
that when a client is trying to generate

305
00:20:02,970 --> 00:20:05,580
a key it would need to be able to use

306
00:20:04,350 --> 00:20:08,490
the algorithm to say what kind of key

307
00:20:05,580 --> 00:20:14,549
that is generate so that is one of the

308
00:20:08,490 --> 00:20:18,150
most crucial remaining uses of the other

309
00:20:14,549 --> 00:20:20,040
legacy algorithm value and and then and

310
00:20:18,150 --> 00:20:21,780
then of course it's also still there for

311
00:20:20,040 --> 00:20:24,000
more of a read-only view I mean it is

312
00:20:21,780 --> 00:20:26,309
still writable but you couldn't write it

313
00:20:24,000 --> 00:20:28,320
just arbitrarily but it's it's

314
00:20:26,309 --> 00:20:29,970
definitely the case that if if a person

315
00:20:28,320 --> 00:20:32,850
if another client were to connect and

316
00:20:29,970 --> 00:20:34,440
wanted to look at the key just having

317
00:20:32,850 --> 00:20:35,549
the key format by itself it's not enough

318
00:20:34,440 --> 00:20:37,380
they would actually need that read-only

319
00:20:35,549 --> 00:20:40,139
value what is the algorithm in order to

320
00:20:37,380 --> 00:20:41,250
have a full appreciation but but so

321
00:20:40,140 --> 00:20:46,169
anyway what I'm trying to say is this

322
00:20:41,250 --> 00:20:48,660
key format is taking over the most of

323
00:20:46,169 --> 00:20:52,110
the the prior use so the algorithm leaf

324
00:20:48,660 --> 00:20:55,970
okay so with that are there any thoughts

325
00:20:52,110 --> 00:20:55,969
or concerns with this approach

326
00:21:03,480 --> 00:21:11,200
none locally okay

327
00:21:08,039 --> 00:21:15,490
and I don't think I see anything on me

328
00:21:11,200 --> 00:21:18,279
that go either so great all right so it

329
00:21:15,490 --> 00:21:23,669
so I think it's it's working out well

330
00:21:18,279 --> 00:21:26,919
I'll just say that balázs K from

331
00:21:23,669 --> 00:21:31,360
Erickson has been tracking this and and

332
00:21:26,919 --> 00:21:33,870
at first he had some mild concerns but

333
00:21:31,360 --> 00:21:36,100
then I replied on list about how the

334
00:21:33,870 --> 00:21:39,309
advantages of it and I think I want to

335
00:21:36,100 --> 00:21:41,469
over but nonetheless will continue this

336
00:21:39,309 --> 00:21:44,350
discussion on the list next slide please

337
00:21:41,470 --> 00:21:48,010
and so we'll be talking about algorithms

338
00:21:44,350 --> 00:21:50,559
next slide after that all right as I was

339
00:21:48,010 --> 00:21:54,760
saying the algorithm leaf is still there

340
00:21:50,559 --> 00:21:57,010
and it's its uses not as much as it was

341
00:21:54,760 --> 00:21:58,450
before but nonetheless is still there

342
00:21:57,010 --> 00:22:00,370
and we still needed to resolve the issue

343
00:21:58,450 --> 00:22:02,500
that we've been trying to resolve for a

344
00:22:00,370 --> 00:22:06,309
long time

345
00:22:02,500 --> 00:22:09,010
current previously there were many type

346
00:22:06,309 --> 00:22:12,549
that were typed us inside ITF crypto

347
00:22:09,010 --> 00:22:17,260
types module and now those type deaths

348
00:22:12,549 --> 00:22:19,539
have been moved into external I Anna or

349
00:22:17,260 --> 00:22:23,470
I should say external modules three of

350
00:22:19,539 --> 00:22:24,940
them and one and there's two aspects to

351
00:22:23,470 --> 00:22:29,260
that statement well the first is that

352
00:22:24,940 --> 00:22:31,179
they're each kind of modular or or I

353
00:22:29,260 --> 00:22:33,720
should each type of algorithm has been

354
00:22:31,179 --> 00:22:36,279
moved into its own module so there's one

355
00:22:33,720 --> 00:22:37,899
module that's specific for symmetric

356
00:22:36,279 --> 00:22:40,090
algorithms and otherwise for asymmetric

357
00:22:37,899 --> 00:22:43,299
algorithms and and another one for

358
00:22:40,090 --> 00:22:45,100
hashing algorithms also I shouldn't

359
00:22:43,299 --> 00:22:47,320
mention we we've reduced the total

360
00:22:45,100 --> 00:22:48,939
number of algorithm types I think before

361
00:22:47,320 --> 00:22:51,639
there may have been eight or nine

362
00:22:48,940 --> 00:22:53,669
different kinds of algorithm types but

363
00:22:51,639 --> 00:22:55,870
we reduce them down to just these three

364
00:22:53,669 --> 00:22:59,080
these three being the ones that are

365
00:22:55,870 --> 00:23:01,330
necessary for defining the Netcom and

366
00:22:59,080 --> 00:23:04,000
restaurant server modules and the

367
00:23:01,330 --> 00:23:06,820
remainder really not necessary for our

368
00:23:04,000 --> 00:23:09,159
work but it you know in the fullness of

369
00:23:06,820 --> 00:23:11,289
time important to other working groups

370
00:23:09,159 --> 00:23:13,120
oh sure but not something that we need

371
00:23:11,289 --> 00:23:14,800
to take on ourselves

372
00:23:13,120 --> 00:23:18,010
that's why just these three types of

373
00:23:14,800 --> 00:23:19,389
algorithms are being focused on so and

374
00:23:18,010 --> 00:23:21,010
then so that's the first excellent

375
00:23:19,390 --> 00:23:23,830
aspect that we've broken up into three

376
00:23:21,010 --> 00:23:28,090
the other is that we also move them from

377
00:23:23,830 --> 00:23:29,350
being IETF prefix to INF prefix and and

378
00:23:28,090 --> 00:23:32,949
actually I have a separate slide that

379
00:23:29,350 --> 00:23:35,530
talked some that specific point so first

380
00:23:32,950 --> 00:23:38,770
on that you can see in the lower left

381
00:23:35,530 --> 00:23:40,270
each module has a type that so you

382
00:23:38,770 --> 00:23:43,030
actually just moved the type that from

383
00:23:40,270 --> 00:23:45,190
the crypto types module to the other

384
00:23:43,030 --> 00:23:47,260
module and here's an example of that

385
00:23:45,190 --> 00:23:49,809
type def you can see that this type def

386
00:23:47,260 --> 00:23:53,379
is defining an enumeration so it's not

387
00:23:49,809 --> 00:23:54,820
an identity we may want to have a

388
00:23:53,380 --> 00:23:58,660
discussion as if it should be an

389
00:23:54,820 --> 00:24:00,730
enumeration or identity I actually think

390
00:23:58,660 --> 00:24:03,370
the enumerations are probably simpler to

391
00:24:00,730 --> 00:24:08,530
work with but it could even be as simple

392
00:24:03,370 --> 00:24:10,149
as a just string all here only the

393
00:24:08,530 --> 00:24:12,940
symmetric algorithm types are being

394
00:24:10,150 --> 00:24:15,850
shown but of course a symmetric n' and

395
00:24:12,940 --> 00:24:17,940
thus and hashing algorithms follow legs

396
00:24:15,850 --> 00:24:22,209
identical strategy of being a type def

397
00:24:17,940 --> 00:24:24,400
containing enumerations so before I move

398
00:24:22,210 --> 00:24:29,760
on to the next slide any comments about

399
00:24:24,400 --> 00:24:29,760
this what I would discuss so far

400
00:24:35,090 --> 00:24:46,949
nobody locally okay next like this okay

401
00:24:45,090 --> 00:24:49,649
so I just said I was gonna go back and

402
00:24:46,950 --> 00:24:53,630
talk about the a and a part of it the

403
00:24:49,650 --> 00:24:59,070
intent behind the IANA prefix was that

404
00:24:53,630 --> 00:25:02,100
we'd be able to somehow transfer the

405
00:24:59,070 --> 00:25:10,050
maintaining maintenance of these three

406
00:25:02,100 --> 00:25:12,120
modules and to to idea to I Anna that if

407
00:25:10,050 --> 00:25:14,070
other working groups were to publish new

408
00:25:12,120 --> 00:25:15,780
algorithms whether it be a symmetric

409
00:25:14,070 --> 00:25:19,070
algorithm or an asymmetric algorithm

410
00:25:15,780 --> 00:25:22,830
that their publication process would

411
00:25:19,070 --> 00:25:27,080
somehow trigger an event that Diana

412
00:25:22,830 --> 00:25:30,449
would pick up and automatically update

413
00:25:27,080 --> 00:25:36,030
the one of these modules and publish it

414
00:25:30,450 --> 00:25:39,960
and this strategy has been taken with

415
00:25:36,030 --> 00:25:41,700
other other modules and I looked I did

416
00:25:39,960 --> 00:25:44,730
look at a couple other Diana modulus and

417
00:25:41,700 --> 00:25:46,800
one thing I noted about them was that it

418
00:25:44,730 --> 00:25:49,950
seemed that there's a one-to-one mapping

419
00:25:46,800 --> 00:25:53,370
between those modules and a particular

420
00:25:49,950 --> 00:25:56,700
registry and/or actually to a particular

421
00:25:53,370 --> 00:25:58,800
RFC whether it's not as a particular

422
00:25:56,700 --> 00:26:01,760
registry I think is still I'm not sure

423
00:25:58,800 --> 00:26:05,520
about that but but in scanning these

424
00:26:01,760 --> 00:26:06,480
type ducts in these three modules there

425
00:26:05,520 --> 00:26:08,540
was I noticed that there's a

426
00:26:06,480 --> 00:26:12,150
multiplicity of RFC's that were being

427
00:26:08,540 --> 00:26:16,370
defined and so this could you know it

428
00:26:12,150 --> 00:26:19,290
wasn't clear to me how would I in a know

429
00:26:16,370 --> 00:26:22,290
when an algorithm from for instance a

430
00:26:19,290 --> 00:26:23,580
new RFC one that didn't exist before was

431
00:26:22,290 --> 00:26:26,490
supposed to be added into this

432
00:26:23,580 --> 00:26:29,340
particular you know will cause this

433
00:26:26,490 --> 00:26:32,780
particular gang module to be needing to

434
00:26:29,340 --> 00:26:32,780
be augmented and

435
00:26:37,510 --> 00:26:41,800
think that was so really I should

436
00:26:39,220 --> 00:26:44,440
probably pause here and ask if there's

437
00:26:41,800 --> 00:26:48,460
questions that was but I don't have that

438
00:26:44,440 --> 00:26:50,190
little thing that says that yes I see

439
00:26:48,460 --> 00:26:52,780
someone at the microphone

440
00:26:50,190 --> 00:26:57,130
vodka very sexually an ongoing

441
00:26:52,780 --> 00:27:00,190
discussion regarding my draft in the NS

442
00:26:57,130 --> 00:27:02,650
op working group I don't know if that

443
00:27:00,190 --> 00:27:06,400
actually it now appeared in in the main

444
00:27:02,650 --> 00:27:10,320
idea of mailing list so I guess this is

445
00:27:06,400 --> 00:27:13,720
more a net mode thing to consider but

446
00:27:10,320 --> 00:27:18,070
you asked how would I Anna know when an

447
00:27:13,720 --> 00:27:21,430
algorithm should be added so my question

448
00:27:18,070 --> 00:27:23,590
to this question would be how would I on

449
00:27:21,430 --> 00:27:25,720
uh know that an algorithm should be

450
00:27:23,590 --> 00:27:29,260
added to the registry itself because as

451
00:27:25,720 --> 00:27:32,910
soon as this is decided then it should

452
00:27:29,260 --> 00:27:35,340
be clear or at least I hope to IANA that

453
00:27:32,910 --> 00:27:39,550
the yanghwa you should be updated

454
00:27:35,340 --> 00:27:41,980
basically at the same time so I really

455
00:27:39,550 --> 00:27:44,110
don't see a big problem with this the

456
00:27:41,980 --> 00:27:47,890
only problem is that may be careless

457
00:27:44,110 --> 00:27:50,169
readers of that RFC could take the more

458
00:27:47,890 --> 00:27:53,080
you contained there as the most recent

459
00:27:50,170 --> 00:27:55,720
revision of the registry which needn't

460
00:27:53,080 --> 00:28:02,560
be the case because then the module

461
00:27:55,720 --> 00:28:05,560
lives in in under the the IANA care may

462
00:28:02,560 --> 00:28:08,919
have new revisions but I don't know how

463
00:28:05,560 --> 00:28:12,370
to solve this easily because we have we

464
00:28:08,920 --> 00:28:16,030
don't have any any like formal language

465
00:28:12,370 --> 00:28:18,850
for writing the module templates as

466
00:28:16,030 --> 00:28:25,780
usage easier so this is really quite a

467
00:28:18,850 --> 00:28:28,000
difficult proposition I think that makes

468
00:28:25,780 --> 00:28:30,639
a perfect sense to me that there would

469
00:28:28,000 --> 00:28:32,350
be a registry that and and you know a

470
00:28:30,640 --> 00:28:34,660
multiple RFC's to be feeding into about

471
00:28:32,350 --> 00:28:36,879
what registry and when that registry

472
00:28:34,660 --> 00:28:38,950
gets updated it would cause a cascading

473
00:28:36,880 --> 00:28:43,240
effect updating the module that makes

474
00:28:38,950 --> 00:28:46,750
sense in theory but I think for us in

475
00:28:43,240 --> 00:28:48,550
particular there may be that may be

476
00:28:46,750 --> 00:28:50,950
challenging and the reason why is

477
00:28:48,550 --> 00:28:53,200
because we're working with

478
00:28:50,950 --> 00:28:57,999
different protocols in particular SSH

479
00:28:53,200 --> 00:29:00,369
and TLS and I fully imagine there being

480
00:28:57,999 --> 00:29:03,009
registries that are around the

481
00:29:00,369 --> 00:29:04,809
algorithms use for SSH and its registry

482
00:29:03,009 --> 00:29:09,759
is being used for algorithms that it

483
00:29:04,809 --> 00:29:11,408
uses around TLS but we're looking for

484
00:29:09,759 --> 00:29:13,090
something that's more Universal and I

485
00:29:11,409 --> 00:29:17,039
don't know if that particular registry

486
00:29:13,090 --> 00:29:18,759
exists that could become our challenge

487
00:29:17,039 --> 00:29:21,519
yes

488
00:29:18,759 --> 00:29:23,289
Rob Wilton Cisco so I definitely think

489
00:29:21,519 --> 00:29:25,299
this is something that should be handled

490
00:29:23,289 --> 00:29:27,129
by something like an I ana registry I

491
00:29:25,299 --> 00:29:29,799
think that's where these need to get to

492
00:29:27,129 --> 00:29:31,418
I think that it that how to update an

493
00:29:29,799 --> 00:29:33,549
RFC tab these new protocols and would be

494
00:29:31,419 --> 00:29:34,809
a mistake I thought with the IANA

495
00:29:33,549 --> 00:29:37,600
registries there's ones where you could

496
00:29:34,809 --> 00:29:40,299
have like experts that were assigned to

497
00:29:37,600 --> 00:29:43,209
add values in so it may be that you

498
00:29:40,299 --> 00:29:45,158
could assign the yang doctors or net mod

499
00:29:43,210 --> 00:29:48,070
or something to update that registry if

500
00:29:45,159 --> 00:29:49,179
that was an easy way to do so maybe

501
00:29:48,070 --> 00:29:53,289
there's other ways to solve this problem

502
00:29:49,179 --> 00:29:54,970
that involves different human input into

503
00:29:53,289 --> 00:29:56,830
updating the registry but I think we

504
00:29:54,970 --> 00:30:00,159
want to somehow get to a solution where

505
00:29:56,830 --> 00:30:02,080
it is in Ayana is my impression okay and

506
00:30:00,159 --> 00:30:02,830
just as you were saying that Rob thank

507
00:30:02,080 --> 00:30:05,439
you

508
00:30:02,830 --> 00:30:06,639
it occurred to me that what I was just

509
00:30:05,440 --> 00:30:08,230
saying about how there's been an

510
00:30:06,639 --> 00:30:11,139
association to your specific registries

511
00:30:08,230 --> 00:30:12,730
we could make updates the ANA request

512
00:30:11,139 --> 00:30:15,070
could be if those registries are being

513
00:30:12,730 --> 00:30:17,109
updated then please allow them to be a

514
00:30:15,070 --> 00:30:19,480
trickle down update to this other

515
00:30:17,109 --> 00:30:22,090
registry which which is in indirect it

516
00:30:19,480 --> 00:30:23,919
may not be one-to-one but it with the

517
00:30:22,090 --> 00:30:25,658
human expert they could do that

518
00:30:23,919 --> 00:30:28,359
particular you know translation and make

519
00:30:25,659 --> 00:30:31,230
it happen that's a good idea yeah makes

520
00:30:28,359 --> 00:30:38,189
sense okay

521
00:30:31,230 --> 00:30:39,870
okay next slide please and so sort of

522
00:30:38,190 --> 00:30:42,690
rounding out the discussion about

523
00:30:39,870 --> 00:30:44,129
algorithms is a you know an S it's

524
00:30:42,690 --> 00:30:45,480
necessary so there's one thing which is

525
00:30:44,130 --> 00:30:47,820
defining the dictionary of all

526
00:30:45,480 --> 00:30:50,039
algorithms it's necessary to have a

527
00:30:47,820 --> 00:30:53,519
dictionary of of the algorithms for

528
00:30:50,039 --> 00:30:55,590
interoperability and it could be that

529
00:30:53,519 --> 00:30:58,409
each vendor came up with around you know

530
00:30:55,590 --> 00:30:59,939
the strengths but that wouldn't help

531
00:30:58,409 --> 00:31:03,090
with interoperability so having a

532
00:30:59,940 --> 00:31:05,090
universal dictionary is important but

533
00:31:03,090 --> 00:31:08,399
there's another aspect which is which

534
00:31:05,090 --> 00:31:11,610
subset of that Universal dictionary does

535
00:31:08,399 --> 00:31:14,459
a particular server support and I this

536
00:31:11,610 --> 00:31:15,840
discussion has been on the list also

537
00:31:14,460 --> 00:31:18,240
recently so for those have been

538
00:31:15,840 --> 00:31:20,668
following that you know some of this

539
00:31:18,240 --> 00:31:26,149
will be a repeat but nonetheless I'll go

540
00:31:20,669 --> 00:31:28,950
over it so first it's each module

541
00:31:26,149 --> 00:31:31,768
currently is - or I should say each of

542
00:31:28,950 --> 00:31:32,340
those three I Anna modules that we just

543
00:31:31,769 --> 00:31:35,549
discussed

544
00:31:32,340 --> 00:31:38,580
it is currently defining a config false

545
00:31:35,549 --> 00:31:41,370
list of algorithms that are supported by

546
00:31:38,580 --> 00:31:42,960
that server and so an example that you

547
00:31:41,370 --> 00:31:45,449
can see they they all kind of follow the

548
00:31:42,960 --> 00:31:47,880
pattern of supported - and what kind of

549
00:31:45,450 --> 00:31:50,340
algorithm it is - algorithms

550
00:31:47,880 --> 00:31:53,990
it is config false it's a list and then

551
00:31:50,340 --> 00:31:56,549
just a list of Leafs with with

552
00:31:53,990 --> 00:31:57,840
references to that type def or I

553
00:31:56,549 --> 00:31:59,039
shouldn't say reference but using that

554
00:31:57,840 --> 00:32:03,120
type 10 that we discussed in the

555
00:31:59,039 --> 00:32:07,580
previous slide so that's again what we

556
00:32:03,120 --> 00:32:10,620
currently have two questions relate that

557
00:32:07,580 --> 00:32:13,678
the first is instead of having a global

558
00:32:10,620 --> 00:32:17,178
list should we be having instead s a

559
00:32:13,679 --> 00:32:20,370
such Association TLS specific lists and

560
00:32:17,179 --> 00:32:22,799
just sort of back into that discussion

561
00:32:20,370 --> 00:32:24,178
it was partin's comment a couple of days

562
00:32:22,799 --> 00:32:28,379
ago

563
00:32:24,179 --> 00:32:31,799
this was late last last week where I was

564
00:32:28,380 --> 00:32:35,370
saying that you know a particular

565
00:32:31,799 --> 00:32:37,289
application or server may use different

566
00:32:35,370 --> 00:32:39,178
or be able to use different algorithms

567
00:32:37,289 --> 00:32:40,529
in different locations and if you think

568
00:32:39,179 --> 00:32:44,700
about how that application has been

569
00:32:40,529 --> 00:32:44,999
constructed with libraries one part of

570
00:32:44,700 --> 00:32:47,699
the

571
00:32:44,999 --> 00:32:49,769
vacation may use one library and Sables

572
00:32:47,699 --> 00:32:51,179
support certain algorithms another part

573
00:32:49,769 --> 00:32:54,569
of that application to use a different

574
00:32:51,179 --> 00:32:57,779
library and southern algorithms so

575
00:32:54,569 --> 00:32:59,428
there's that aspect so you know that I

576
00:32:57,779 --> 00:33:01,829
think the intent behind a global list

577
00:32:59,429 --> 00:33:05,099
would be when you're thinking like

578
00:33:01,829 --> 00:33:07,559
France's Fitts mode where you're you're

579
00:33:05,099 --> 00:33:09,119
taking a you know some you know there's

580
00:33:07,559 --> 00:33:10,799
the set of algorithms and then oh you

581
00:33:09,119 --> 00:33:12,658
turn on FIPS mode so now it's a subset

582
00:33:10,799 --> 00:33:15,629
of r and then both those statements are

583
00:33:12,659 --> 00:33:18,419
sort of there's a global list but this

584
00:33:15,629 --> 00:33:20,279
is a more refined concern where we're

585
00:33:18,419 --> 00:33:21,899
saying that it's actually related to a

586
00:33:20,279 --> 00:33:23,759
particular libraries that are being used

587
00:33:21,899 --> 00:33:25,708
and hence there's it's actually a

588
00:33:23,759 --> 00:33:27,929
variable or the list various or

589
00:33:25,709 --> 00:33:29,729
potentially could vary based on where

590
00:33:27,929 --> 00:33:34,409
than in the modeling tree it's being

591
00:33:29,729 --> 00:33:36,079
used so there's sort of the most

592
00:33:34,409 --> 00:33:39,809
granular way of doing that would be

593
00:33:36,079 --> 00:33:42,149
every single location where the leaf but

594
00:33:39,809 --> 00:33:44,279
the algorithm leaf has been used it

595
00:33:42,149 --> 00:33:46,349
could be there could be a list there or

596
00:33:44,279 --> 00:33:49,169
maybe an action statement that could

597
00:33:46,349 --> 00:33:51,989
return a list but that's highly granular

598
00:33:49,169 --> 00:33:53,729
and and maybe ideal but from a

599
00:33:51,989 --> 00:33:57,329
theoretical perspective but not very

600
00:33:53,729 --> 00:34:01,679
practical from a modeling perspective it

601
00:33:57,329 --> 00:34:04,408
seems like a possible sweet spot would

602
00:34:01,679 --> 00:34:07,589
be to focus on the algorithms and so

603
00:34:04,409 --> 00:34:09,990
have one list in instead of having the

604
00:34:07,589 --> 00:34:11,940
single global list instead of having or

605
00:34:09,989 --> 00:34:14,758
splitting it essentially into two

606
00:34:11,940 --> 00:34:19,789
globalists one one of those lists being

607
00:34:14,759 --> 00:34:22,799
specific to SSH and the other to TLS and

608
00:34:19,789 --> 00:34:24,210
so in and to be clear because we're

609
00:34:22,799 --> 00:34:27,989
talking about three different algorithm

610
00:34:24,210 --> 00:34:31,069
types there'd be 340 as SSH a.m. 340

611
00:34:27,989 --> 00:34:34,439
less a total of six of these global list

612
00:34:31,069 --> 00:34:40,529
that's the current idea any thoughts

613
00:34:34,440 --> 00:34:47,429
about that I know that when I were

614
00:34:40,529 --> 00:34:51,149
discussing you applied better why this

615
00:34:47,429 --> 00:34:56,339
is Hank I can't I think I somehow find

616
00:34:51,149 --> 00:34:58,529
myself in the slide I think is very

617
00:34:56,339 --> 00:35:00,779
important to do this the

618
00:34:58,530 --> 00:35:02,580
since you were highlighting I'm not an

619
00:35:00,780 --> 00:35:04,740
expert in this so probably this group is

620
00:35:02,580 --> 00:35:07,560
and I think one will be selected or a

621
00:35:04,740 --> 00:35:12,209
set of them I think this somehow swaps

622
00:35:07,560 --> 00:35:17,160
about who trusts store because all these

623
00:35:12,210 --> 00:35:20,490
algorithms and the big asymmetric are

624
00:35:17,160 --> 00:35:23,970
symmetric or hashing they will have in

625
00:35:20,490 --> 00:35:27,359
the end the key material used for these

626
00:35:23,970 --> 00:35:32,430
algorithms and I think nevertheless that

627
00:35:27,360 --> 00:35:35,760
is trust raw side there are hints and

628
00:35:32,430 --> 00:35:37,830
methods to find and identify these keys

629
00:35:35,760 --> 00:35:42,240
and I think this belongs also here

630
00:35:37,830 --> 00:35:44,690
because these have to be defined like in

631
00:35:42,240 --> 00:35:47,370
the same Bay I assume with the algorithm

632
00:35:44,690 --> 00:35:49,410
there comes an identification for the

633
00:35:47,370 --> 00:35:51,210
pay dirt for the algorithm and I'm

634
00:35:49,410 --> 00:35:52,950
probably that is not a part of the key

635
00:35:51,210 --> 00:35:56,430
store because that is too late if you go

636
00:35:52,950 --> 00:35:58,830
to the store you already assume your how

637
00:35:56,430 --> 00:36:00,779
to find it so there has to be a link

638
00:35:58,830 --> 00:36:02,400
between the key identification or key

639
00:36:00,780 --> 00:36:05,130
hint or identification hint they love

640
00:36:02,400 --> 00:36:09,270
multiple names for this here on this

641
00:36:05,130 --> 00:36:10,860
side of the crib so types things and and

642
00:36:09,270 --> 00:36:13,770
maybe I'm wrong but I just wanted to

643
00:36:10,860 --> 00:36:15,690
give this as a comment okay

644
00:36:13,770 --> 00:36:17,310
alright I'm not sure it seems like maybe

645
00:36:15,690 --> 00:36:19,560
add a second comment but we respond to

646
00:36:17,310 --> 00:36:21,690
the first one I think what you're just

647
00:36:19,560 --> 00:36:24,750
discussing right now is war what I was

648
00:36:21,690 --> 00:36:26,760
saying about the need for having the

649
00:36:24,750 --> 00:36:28,170
global dictionary the you know what are

650
00:36:26,760 --> 00:36:31,920
all the others what are all the type

651
00:36:28,170 --> 00:36:33,330
tests for interoperability here what

652
00:36:31,920 --> 00:36:35,310
we're talking about is trying to

653
00:36:33,330 --> 00:36:37,940
identify the subset of those algorithms

654
00:36:35,310 --> 00:36:40,950
that a particular server supports and

655
00:36:37,940 --> 00:36:42,870
and so I think it's actually but but

656
00:36:40,950 --> 00:36:46,529
that's a different that's a different

657
00:36:42,870 --> 00:36:50,930
discussion and to that first one what is

658
00:36:46,530 --> 00:36:53,460
the global dictionary of algorithms a so

659
00:36:50,930 --> 00:36:56,129
if you actually look a little bit deeper

660
00:36:53,460 --> 00:36:57,720
in right here we're talking about the

661
00:36:56,130 --> 00:37:00,270
crypto types draft so there's the

662
00:36:57,720 --> 00:37:03,359
universal set of algorithms at that

663
00:37:00,270 --> 00:37:06,000
level but then if you were to look into

664
00:37:03,360 --> 00:37:09,150
the SSH and TLS specific drafts you'll

665
00:37:06,000 --> 00:37:11,100
see that they have mapping tables and in

666
00:37:09,150 --> 00:37:12,090
particular I mean the SSH and TLS

667
00:37:11,100 --> 00:37:15,319
protocols they

668
00:37:12,090 --> 00:37:18,780
they have very specific algorithms

669
00:37:15,320 --> 00:37:21,300
enumerations values strings that are

670
00:37:18,780 --> 00:37:23,070
sent over the wire and so there's these

671
00:37:21,300 --> 00:37:26,040
mapping tables that you know for those

672
00:37:23,070 --> 00:37:30,060
who are familiar with ssh specific

673
00:37:26,040 --> 00:37:32,340
algorithms or TLS specific algorithms be

674
00:37:30,060 --> 00:37:36,330
mindful that well the algorithm was

675
00:37:32,340 --> 00:37:39,510
normally called foo in in TLS it's

676
00:37:36,330 --> 00:37:44,400
actually you know bar here in the crypto

677
00:37:39,510 --> 00:37:47,100
type trap so there's that mapping okay

678
00:37:44,400 --> 00:37:48,930
Rob Wilson Cisco's so I think this is

679
00:37:47,100 --> 00:37:52,980
part of a generalized problem of

680
00:37:48,930 --> 00:37:55,319
basically server capabilities and more I

681
00:37:52,980 --> 00:37:57,060
think that we actually as a working

682
00:37:55,320 --> 00:38:00,090
group or maybe in net mod need to look

683
00:37:57,060 --> 00:38:01,799
at that more about giving advices

684
00:38:00,090 --> 00:38:04,050
capabilities and putting instance data

685
00:38:01,800 --> 00:38:05,340
file formatting and having that they

686
00:38:04,050 --> 00:38:07,950
were off a box and that's passed the

687
00:38:05,340 --> 00:38:09,330
work that balázs has been doing but I

688
00:38:07,950 --> 00:38:11,730
don't think we've defined all the

689
00:38:09,330 --> 00:38:14,069
capabilities but I see this is a subset

690
00:38:11,730 --> 00:38:15,570
of those however that work will take a

691
00:38:14,070 --> 00:38:17,760
long time so I think what we're looking

692
00:38:15,570 --> 00:38:20,610
for here is I sort of stopped that

693
00:38:17,760 --> 00:38:22,800
measure there's no B in the short term

694
00:38:20,610 --> 00:38:25,500
and I think that I either of what you

695
00:38:22,800 --> 00:38:27,210
propose there work either global list or

696
00:38:25,500 --> 00:38:29,550
I think your suggestion of having six

697
00:38:27,210 --> 00:38:30,840
lists that seems reasonable to me I look

698
00:38:29,550 --> 00:38:32,430
like I wouldn't go anything more

699
00:38:30,840 --> 00:38:34,440
complicated than that though I'd keep it

700
00:38:32,430 --> 00:38:45,750
um I think what you're proposing then

701
00:38:34,440 --> 00:38:48,630
makes sense okay great thank you looks

702
00:38:45,750 --> 00:38:51,150
like the microphone line is empty so

703
00:38:48,630 --> 00:38:53,550
I'll move on to a second question here

704
00:38:51,150 --> 00:38:58,920
number two how are these lists to be

705
00:38:53,550 --> 00:39:04,470
used cannot use a leaf ref right I mean

706
00:38:58,920 --> 00:39:06,750
they're config files lists and well okay

707
00:39:04,470 --> 00:39:08,549
not only are they config false list but

708
00:39:06,750 --> 00:39:11,940
they're also polymorphic in the sense

709
00:39:08,550 --> 00:39:18,540
that when you have a the reference to

710
00:39:11,940 --> 00:39:20,690
the to the to the what am I trying to

711
00:39:18,540 --> 00:39:20,690
say

712
00:39:22,890 --> 00:39:27,210
okay so actually well okay what I'm

713
00:39:24,600 --> 00:39:28,380
thinking is that you would have I can't

714
00:39:27,210 --> 00:39:31,740
forget that part

715
00:39:28,380 --> 00:39:33,330
forget the polymorphic part but

716
00:39:31,740 --> 00:39:34,529
definitely it's it's a config pulseless

717
00:39:33,330 --> 00:39:38,700
and you can't have a leaf rough to

718
00:39:34,530 --> 00:39:40,080
config pulseless so again what would be

719
00:39:38,700 --> 00:39:45,810
the intention for how these lists are

720
00:39:40,080 --> 00:39:48,690
being used we could have in the

721
00:39:45,810 --> 00:39:51,299
algorithm description statement which

722
00:39:48,690 --> 00:39:52,560
would be in crypto types something like

723
00:39:51,300 --> 00:39:54,630
what's in yellow at the bottom of the

724
00:39:52,560 --> 00:39:58,890
screen it is recommended that each

725
00:39:54,630 --> 00:40:02,010
protocol sht etc makes available a list

726
00:39:58,890 --> 00:40:03,660
of the subsets of algorithms supported I

727
00:40:02,010 --> 00:40:06,510
could maybe that's a different statement

728
00:40:03,660 --> 00:40:09,029
so there's sorry that wasn't a clean

729
00:40:06,510 --> 00:40:10,680
site way there's two comments being made

730
00:40:09,030 --> 00:40:12,210
here but yeah so there's first there's a

731
00:40:10,680 --> 00:40:14,310
you know we need a set of strategies so

732
00:40:12,210 --> 00:40:16,530
whenever an algorithm or protocol is

733
00:40:14,310 --> 00:40:18,509
trying to define you know mappings we

734
00:40:16,530 --> 00:40:21,630
say we should you should create these

735
00:40:18,510 --> 00:40:23,550
other lists but once the list exists how

736
00:40:21,630 --> 00:40:28,950
are they being used I guess it's just

737
00:40:23,550 --> 00:40:31,410
simply the client referring to the list

738
00:40:28,950 --> 00:40:34,560
you know opportunistically optionally i

739
00:40:31,410 --> 00:40:36,149
should even add to try to determine what

740
00:40:34,560 --> 00:40:38,850
it is the server supports before they

741
00:40:36,150 --> 00:40:41,130
kind of configure the server and worst

742
00:40:38,850 --> 00:40:46,170
case if they send a bad value to the

743
00:40:41,130 --> 00:40:49,950
server it will fail you know RPC air the

744
00:40:46,170 --> 00:40:55,190
request so maybe there's no need to have

745
00:40:49,950 --> 00:40:57,750
a leave for effort with this so before

746
00:40:55,190 --> 00:41:00,810
robert gets on the mic we have a

747
00:40:57,750 --> 00:41:03,930
question in java from martin asking do

748
00:41:00,810 --> 00:41:09,590
we need a similar list for key format

749
00:41:03,930 --> 00:41:12,750
supported and supported key format sorry

750
00:41:09,590 --> 00:41:18,870
okay so the answer martin's question the

751
00:41:12,750 --> 00:41:22,410
oh well there is because and we didn't

752
00:41:18,870 --> 00:41:25,580
actually actually can you is it possible

753
00:41:22,410 --> 00:41:30,690
to go back to slide number five just

754
00:41:25,580 --> 00:41:32,600
quickly so on slide five you can like

755
00:41:30,690 --> 00:41:35,730
well in particularly you can see here

756
00:41:32,600 --> 00:41:36,490
those if feature statements the one

757
00:41:35,730 --> 00:41:39,190
symmetric key

758
00:41:36,490 --> 00:41:42,479
the asymmetric was right in the yeah and

759
00:41:39,190 --> 00:41:46,930
one asymmetric key the those are CMS

760
00:41:42,480 --> 00:41:52,810
structures which are more complex or

761
00:41:46,930 --> 00:41:56,080
let's say less common commonly used than

762
00:41:52,810 --> 00:41:58,930
the raw key values if you were to use

763
00:41:56,080 --> 00:42:00,520
open SSL and ask it to generate a key or

764
00:41:58,930 --> 00:42:02,529
even if necessary and ask it to generate

765
00:42:00,520 --> 00:42:05,140
key neither of those tools are going to

766
00:42:02,530 --> 00:42:09,220
generate you a one symmetric key or one

767
00:42:05,140 --> 00:42:13,118
asymmetric key structure by default so

768
00:42:09,220 --> 00:42:15,368
oh but it's necessary to have well first

769
00:42:13,119 --> 00:42:16,810
off its it's a in some cases it's

770
00:42:15,369 --> 00:42:18,850
preferred to use those structures

771
00:42:16,810 --> 00:42:21,100
because they do two things they actually

772
00:42:18,850 --> 00:42:23,740
internally embed the algorithm

773
00:42:21,100 --> 00:42:26,020
identifier which is somewhat redundant

774
00:42:23,740 --> 00:42:29,319
and maybe we should gloss over that fact

775
00:42:26,020 --> 00:42:32,290
because a lot of structures embed values

776
00:42:29,320 --> 00:42:34,869
that are also I'll you know redundantly

777
00:42:32,290 --> 00:42:37,570
expressed outside the structure but more

778
00:42:34,869 --> 00:42:41,410
importantly it's necessary to you oh

779
00:42:37,570 --> 00:42:43,359
they also support attributes so for

780
00:42:41,410 --> 00:42:44,950
instance a private key can be tagged

781
00:42:43,359 --> 00:42:46,930
with attributes that it's only to be

782
00:42:44,950 --> 00:42:49,600
used for signing or it's only be used

783
00:42:46,930 --> 00:42:52,299
for encryption or you know these kinds

784
00:42:49,600 --> 00:42:55,390
of things that what in TLS certificates

785
00:42:52,300 --> 00:42:59,050
might be referred to as key usage so

786
00:42:55,390 --> 00:43:02,170
these one or these that one asymmetric

787
00:42:59,050 --> 00:43:05,680
key structure has the ability to capture

788
00:43:02,170 --> 00:43:07,420
the key usage where the raw value has no

789
00:43:05,680 --> 00:43:09,790
way of doing that so in some

790
00:43:07,420 --> 00:43:13,450
applications it may be important to use

791
00:43:09,790 --> 00:43:16,150
the CMS structure over the raw value

792
00:43:13,450 --> 00:43:18,580
just to have that ability but then

793
00:43:16,150 --> 00:43:20,500
lastly it's actually necessary to use

794
00:43:18,580 --> 00:43:22,210
these structures the the one asymmetric

795
00:43:20,500 --> 00:43:25,750
key and and one Selectric key structures

796
00:43:22,210 --> 00:43:27,820
if you wish to encrypt the keys there's

797
00:43:25,750 --> 00:43:31,570
just no other way of or no standard way

798
00:43:27,820 --> 00:43:33,040
I should say to encrypt or Express keys

799
00:43:31,570 --> 00:43:36,720
that have been encrypted other than by

800
00:43:33,040 --> 00:43:39,400
using these structures so in all of that

801
00:43:36,720 --> 00:43:41,439
response what I'm trying to say is I

802
00:43:39,400 --> 00:43:44,640
view the use of these structures is sort

803
00:43:41,440 --> 00:43:47,260
of advanced you you know the the the

804
00:43:44,640 --> 00:43:50,210
simple get it to market as quickly as

805
00:43:47,260 --> 00:43:53,359
possible application is unlikely to want

806
00:43:50,210 --> 00:43:55,670
to support these advanced structures

807
00:43:53,359 --> 00:44:00,319
hence the desire to put them under

808
00:43:55,670 --> 00:44:01,550
feature statements and more specifically

809
00:44:00,320 --> 00:44:03,290
answering your question you asked about

810
00:44:01,550 --> 00:44:05,420
should we have config false lists I

811
00:44:03,290 --> 00:44:06,859
don't think we need to have config false

812
00:44:05,420 --> 00:44:09,530
lists like the ones that we're talking

813
00:44:06,859 --> 00:44:11,598
about here because we have a feature

814
00:44:09,530 --> 00:44:13,310
statements and you know you connect to

815
00:44:11,599 --> 00:44:14,780
the server you go to gang library you

816
00:44:13,310 --> 00:44:17,359
ask the young library what features do

817
00:44:14,780 --> 00:44:19,220
you support that is in a way a config

818
00:44:17,359 --> 00:44:22,369
false list of of those features that

819
00:44:19,220 --> 00:44:24,169
have been supported so the only thing

820
00:44:22,369 --> 00:44:27,050
that's not really being captured is is

821
00:44:24,170 --> 00:44:30,080
it granular enough yeah features are a

822
00:44:27,050 --> 00:44:31,430
global whereas do we need to have you

823
00:44:30,080 --> 00:44:34,700
know the statement you know specific

824
00:44:31,430 --> 00:44:37,609
press sage versus kill us and maybe that

825
00:44:34,700 --> 00:44:40,910
was your question so I think he has a

826
00:44:37,609 --> 00:44:43,339
modern as a follow-up question suppose I

827
00:44:40,910 --> 00:44:46,040
support as a search public key but not

828
00:44:43,339 --> 00:44:54,650
subject public key info for my eyes as

829
00:44:46,040 --> 00:44:55,670
such keys psyche I can't I don't have a

830
00:44:54,650 --> 00:45:00,950
job can you repeat that

831
00:44:55,670 --> 00:45:04,940
sure suppose I support SSH public key

832
00:45:00,950 --> 00:45:16,819
but not subject public key info for my

833
00:45:04,940 --> 00:45:17,930
search keys oh okay right actually I

834
00:45:16,820 --> 00:45:20,930
think Martin I had this very

835
00:45:17,930 --> 00:45:23,060
conversation on the list and in the

836
00:45:20,930 --> 00:45:31,000
reply to that question I was thinking

837
00:45:23,060 --> 00:45:36,950
that the degree must statements whereby

838
00:45:31,000 --> 00:45:40,160
in the SSH I guess this would be the the

839
00:45:36,950 --> 00:45:46,509
IETF SSH server and ITF estate client

840
00:45:40,160 --> 00:45:50,000
modules where they are using the

841
00:45:46,510 --> 00:45:52,760
asymmetric and symmetric key structures

842
00:45:50,000 --> 00:45:55,580
that we was on the screen a few slides

843
00:45:52,760 --> 00:46:01,310
back when they're using those groupings

844
00:45:55,580 --> 00:46:03,259
they would refine them with a must

845
00:46:01,310 --> 00:46:06,620
expression that would say

846
00:46:03,260 --> 00:46:12,170
the SSH key must be an ssh public key

847
00:46:06,620 --> 00:46:14,750
and and and and not a cannot be a

848
00:46:12,170 --> 00:46:17,660
subject public key whereas in the TLS

849
00:46:14,750 --> 00:46:19,340
module it would be saying though it's my

850
00:46:17,660 --> 00:46:22,549
statement will just be saying that it

851
00:46:19,340 --> 00:46:25,970
must be a subject public key and not a

852
00:46:22,550 --> 00:46:28,970
necessary public key so i think we could

853
00:46:25,970 --> 00:46:32,270
enable those downstream modules that are

854
00:46:28,970 --> 00:46:40,580
using those groupings to to cause to in

855
00:46:32,270 --> 00:46:43,190
inject that discrimination since this is

856
00:46:40,580 --> 00:46:44,810
hangar the Mike I just had a question I

857
00:46:43,190 --> 00:46:50,540
don't have a question any more yes I

858
00:46:44,810 --> 00:46:52,580
think that's make sense okay all right

859
00:46:50,540 --> 00:46:53,570
so I can jump back to slide 1000 or

860
00:46:52,580 --> 00:46:56,930
unless there's another comment about

861
00:46:53,570 --> 00:46:59,590
that question just a quick but from

862
00:46:56,930 --> 00:47:03,399
ardent saying fine with me less

863
00:46:59,590 --> 00:47:07,580
flexibility but I think that is okay

864
00:47:03,400 --> 00:47:12,950
then back to slide 10 this well Rob is

865
00:47:07,580 --> 00:47:15,799
asking a question yes so Rob Wilson said

866
00:47:12,950 --> 00:47:16,939
going back to the question on the second

867
00:47:15,800 --> 00:47:19,310
question I think it's almost the same

868
00:47:16,940 --> 00:47:23,090
answer as before that I think we solve

869
00:47:19,310 --> 00:47:25,279
this as part of wider capabilities work

870
00:47:23,090 --> 00:47:26,810
I think and so I think what you're

871
00:47:25,280 --> 00:47:28,190
suggesting are just saying you update

872
00:47:26,810 --> 00:47:30,049
the description statements I think

873
00:47:28,190 --> 00:47:31,660
that's fine I think that's sufficient

874
00:47:30,050 --> 00:47:33,890
for this I wouldn't try and do anything

875
00:47:31,660 --> 00:47:36,109
more sophisticated here to keep it

876
00:47:33,890 --> 00:47:37,839
simple now and say this could be solved

877
00:47:36,110 --> 00:47:44,240
in future hopefully if there's interest

878
00:47:37,840 --> 00:47:46,310
okay great thank you all right

879
00:47:44,240 --> 00:47:48,439
next slide then and we'll be talking

880
00:47:46,310 --> 00:47:52,270
next the discussion is about role public

881
00:47:48,440 --> 00:47:52,270
keys and appreciate keys next slide

882
00:47:52,390 --> 00:47:58,509
okay so what's currently published in

883
00:47:54,890 --> 00:48:01,640
crypto types 12 and trusts or seven is

884
00:47:58,510 --> 00:48:04,100
actually no longer current in the sense

885
00:48:01,640 --> 00:48:07,520
that the you know the the submission

886
00:48:04,100 --> 00:48:09,710
window closed and but after it closed

887
00:48:07,520 --> 00:48:11,420
there were ongoing discussions on list

888
00:48:09,710 --> 00:48:13,580
that that kind of moved the ball down

889
00:48:11,420 --> 00:48:15,140
the road a little bit so for those that

890
00:48:13,580 --> 00:48:16,529
reviewed that the drafts that are

891
00:48:15,140 --> 00:48:18,900
currently published

892
00:48:16,530 --> 00:48:25,140
you know this and work on the list this

893
00:48:18,900 --> 00:48:27,710
may be new but an early review of those

894
00:48:25,140 --> 00:48:33,680
particular modules twelve and seven

895
00:48:27,710 --> 00:48:33,680
identified no need to define new types

896
00:48:33,890 --> 00:48:42,660
that the existing types and groupings

897
00:48:36,570 --> 00:48:47,760
could be used so so and remember what

898
00:48:42,660 --> 00:48:49,440
we're talking about is for a number of

899
00:48:47,760 --> 00:48:51,120
years we've had already the notion of

900
00:48:49,440 --> 00:48:53,630
symmetric keys and asymmetric keys and

901
00:48:51,120 --> 00:48:56,339
what we're talking about here in TLS

902
00:48:53,630 --> 00:48:58,260
normally uses x.509 certificates but

903
00:48:56,340 --> 00:49:00,750
it's also possible to use raw public

904
00:48:58,260 --> 00:49:03,300
keys and symmetric keys but what is the

905
00:49:00,750 --> 00:49:05,730
raw public key well that's basically an

906
00:49:03,300 --> 00:49:08,010
asymmetric key what is a pre-shared key

907
00:49:05,730 --> 00:49:10,380
well it's basically a symmetric key so

908
00:49:08,010 --> 00:49:13,590
that was the observation that was made

909
00:49:10,380 --> 00:49:17,430
by the other participant of balázs cake

910
00:49:13,590 --> 00:49:20,790
and and so the thinking was you know

911
00:49:17,430 --> 00:49:23,190
rather than defining new types and

912
00:49:20,790 --> 00:49:25,560
groupings specific for Rob puppies and

913
00:49:23,190 --> 00:49:27,960
ppreciate keys such as those that you'll

914
00:49:25,560 --> 00:49:32,160
find inside crypto type 12 and Trust or

915
00:49:27,960 --> 00:49:35,430
seven instead can we not repurpose the

916
00:49:32,160 --> 00:49:36,750
existing groupings that we have that

917
00:49:35,430 --> 00:49:40,230
makes a lot of sense to me

918
00:49:36,750 --> 00:49:47,580
and so the proposal that was on list and

919
00:49:40,230 --> 00:49:50,780
on screen is essentially to a in trust

920
00:49:47,580 --> 00:49:53,130
or I think it on in the current public

921
00:49:50,780 --> 00:49:57,260
published document you'll find there's a

922
00:49:53,130 --> 00:50:01,170
list of raw public keys there have been

923
00:49:57,260 --> 00:50:03,840
better trusted and then also the list of

924
00:50:01,170 --> 00:50:06,330
the pre-shared keys that were trusted

925
00:50:03,840 --> 00:50:09,300
and so that the lists appreciate keys

926
00:50:06,330 --> 00:50:11,190
have been removed actually not

927
00:50:09,300 --> 00:50:15,240
specifically because it's an overlap but

928
00:50:11,190 --> 00:50:18,300
because it's unnecessary if you are

929
00:50:15,240 --> 00:50:20,750
having a pre shared key I mean it's a

930
00:50:18,300 --> 00:50:23,040
shared key so your that that same

931
00:50:20,750 --> 00:50:25,980
symmetric key value that's being used

932
00:50:23,040 --> 00:50:27,810
both sort of as your private key and

933
00:50:25,980 --> 00:50:29,550
also as as the public key but it's not

934
00:50:27,810 --> 00:50:30,090
saying private and public doesn't make

935
00:50:29,550 --> 00:50:33,000
sense because

936
00:50:30,090 --> 00:50:34,410
is symmetric the same key value and it's

937
00:50:33,000 --> 00:50:36,660
a secret value and you'd want that

938
00:50:34,410 --> 00:50:38,910
secret to be stored in key store not in

939
00:50:36,660 --> 00:50:41,430
trust or so the observation being is

940
00:50:38,910 --> 00:50:44,580
that that value would be stored in the

941
00:50:41,430 --> 00:50:46,350
key store and and you wouldn't we

942
00:50:44,580 --> 00:50:49,890
wouldn't want it to be also stored in

943
00:50:46,350 --> 00:50:53,970
the trust or the exact same value so so

944
00:50:49,890 --> 00:50:57,870
simply we removed pub pre-shared keys or

945
00:50:53,970 --> 00:50:59,939
PS case from trustor but but kind of

946
00:50:57,870 --> 00:51:02,339
that's that itself is not really

947
00:50:59,940 --> 00:51:05,160
following the statement I was just

948
00:51:02,340 --> 00:51:07,440
making above here you see there are

949
00:51:05,160 --> 00:51:11,129
certificates in separately also raw

950
00:51:07,440 --> 00:51:15,990
public keys I we could have a discussion

951
00:51:11,130 --> 00:51:17,580
if we want to I mean these are different

952
00:51:15,990 --> 00:51:19,770
things right so it was certificate is it

953
00:51:17,580 --> 00:51:22,680
is a public key that's been signed by an

954
00:51:19,770 --> 00:51:25,770
issuer so that's a particular thing raw

955
00:51:22,680 --> 00:51:28,640
public key is well it's you know it's

956
00:51:25,770 --> 00:51:32,490
not having any of that extra attribution

957
00:51:28,640 --> 00:51:33,480
associated with it so that's definitely

958
00:51:32,490 --> 00:51:36,540
it seems to be a separate thing

959
00:51:33,480 --> 00:51:38,630
necessary to store distinctly in the

960
00:51:36,540 --> 00:51:43,500
trustor and hence why it's still there

961
00:51:38,630 --> 00:51:45,780
but on the right hand side sorry before

962
00:51:43,500 --> 00:51:47,700
I go to right hand side going down to

963
00:51:45,780 --> 00:51:49,530
the bottom of the key store there was

964
00:51:47,700 --> 00:51:54,990
also in a key store well actually there

965
00:51:49,530 --> 00:51:56,850
wasn't when I had worked with me to

966
00:51:54,990 --> 00:51:59,459
update the trustor we did not actually

967
00:51:56,850 --> 00:52:01,049
update also the key store but there was

968
00:51:59,460 --> 00:52:03,600
some discussion about should we also be

969
00:52:01,050 --> 00:52:06,810
able to image key store and so that and

970
00:52:03,600 --> 00:52:09,660
oh we would find it it would be

971
00:52:06,810 --> 00:52:11,730
necessary first thought was well

972
00:52:09,660 --> 00:52:14,490
previously we had a symmetric keys and

973
00:52:11,730 --> 00:52:17,520
symmetric keys and so the first naive

974
00:52:14,490 --> 00:52:20,040
was let's add all also to that list Rob

975
00:52:17,520 --> 00:52:22,170
cookies and PSK so it'd be a total of

976
00:52:20,040 --> 00:52:24,630
four things or four descendants

977
00:52:22,170 --> 00:52:26,580
underneath the key store but then upon

978
00:52:24,630 --> 00:52:29,100
the observation that really Rob

979
00:52:26,580 --> 00:52:31,650
appliques are asymmetric keys and and PS

980
00:52:29,100 --> 00:52:35,009
Ches are symmetric keys we collapse them

981
00:52:31,650 --> 00:52:36,360
and and now if they are as sort of the

982
00:52:35,010 --> 00:52:38,760
proposals as they are on the screen

983
00:52:36,360 --> 00:52:42,360
I think I'll pause right there I see

984
00:52:38,760 --> 00:52:44,400
Hank there's at the mic yeah yeah again

985
00:52:42,360 --> 00:52:46,140
this is Hank so I think there's a

986
00:52:44,400 --> 00:52:48,119
distinguishing feature that we are

987
00:52:46,140 --> 00:52:51,680
collapsing but is not applying to both

988
00:52:48,119 --> 00:52:57,450
sides of the coin which is but I try to

989
00:52:51,680 --> 00:53:00,779
come to before the key IDs so pre-shared

990
00:52:57,450 --> 00:53:04,430
keys have preferred an even sometimes

991
00:53:00,779 --> 00:53:06,660
very strong recommended way to identify

992
00:53:04,430 --> 00:53:09,660
the pre-shared keys because there can be

993
00:53:06,660 --> 00:53:12,839
multiple of them and that is different

994
00:53:09,660 --> 00:53:15,690
to other symmetric keys so so I agree

995
00:53:12,839 --> 00:53:18,150
with the notion that apparently pairwise

996
00:53:15,690 --> 00:53:19,470
symmetric keys or pre-shared keys

997
00:53:18,150 --> 00:53:21,319
whatever you want to call them are

998
00:53:19,470 --> 00:53:23,038
symmetric because in the new

999
00:53:21,319 --> 00:53:25,859
interpretation of the acronym it

1000
00:53:23,039 --> 00:53:28,829
literally says pairwise shared a

1001
00:53:25,859 --> 00:53:32,848
symmetric key sorry and so that's true

1002
00:53:28,829 --> 00:53:34,589
but the pre shared key identification

1003
00:53:32,849 --> 00:53:36,960
and typically you'll go with an ID into

1004
00:53:34,589 --> 00:53:38,940
the system we don't have the hash always

1005
00:53:36,960 --> 00:53:42,630
or something more concrete but at the ID

1006
00:53:38,940 --> 00:53:46,319
and there is recomended identity hints

1007
00:53:42,630 --> 00:53:48,180
for PS case for TLS and I think these do

1008
00:53:46,319 --> 00:53:50,369
not apply to all symmetric keys so how

1009
00:53:48,180 --> 00:53:52,109
do you deal with these different kind of

1010
00:53:50,369 --> 00:53:55,859
ideas to collapse the concept and

1011
00:53:52,109 --> 00:53:56,880
symmetric simply as that so hey can you

1012
00:53:55,859 --> 00:53:59,450
help me I understand that just for a

1013
00:53:56,880 --> 00:54:01,890
second at these these IDs are these IDs

1014
00:53:59,450 --> 00:54:06,359
communicated on the wire yeah they just

1015
00:54:01,890 --> 00:54:08,038
go they are okay okay so then I was

1016
00:54:06,359 --> 00:54:09,299
gonna say that you know what's not being

1017
00:54:08,039 --> 00:54:11,430
shown in the screen is that each of

1018
00:54:09,299 --> 00:54:13,380
these lists you know the lists and so

1019
00:54:11,430 --> 00:54:15,649
there was a key value and it's called

1020
00:54:13,380 --> 00:54:17,400
name and it's an arbitrary user

1021
00:54:15,650 --> 00:54:19,170
specified name that's how you could

1022
00:54:17,400 --> 00:54:21,210
distinguish one key from the other but

1023
00:54:19,170 --> 00:54:22,380
you're actually referring to a value

1024
00:54:21,210 --> 00:54:24,630
that needs to be communicated in the

1025
00:54:22,380 --> 00:54:27,660
wire okay so that's a reason for needing

1026
00:54:24,630 --> 00:54:31,049
to actually you know have a distinct

1027
00:54:27,660 --> 00:54:32,038
thing there for for those values can we

1028
00:54:31,049 --> 00:54:39,359
take that up on the list

1029
00:54:32,039 --> 00:54:42,180
sure thank you all right so will meeting

1030
00:54:39,359 --> 00:54:44,339
be will will will take up on the list

1031
00:54:42,180 --> 00:54:45,749
and add most or I guess the idea is that

1032
00:54:44,339 --> 00:54:50,130
we'd be adding those values to a key

1033
00:54:45,749 --> 00:54:52,470
store or sorry we'd have distinct lists

1034
00:54:50,130 --> 00:54:55,499
for for capturing those also in the key

1035
00:54:52,470 --> 00:54:58,069
for okay now on the right hand side of

1036
00:54:55,499 --> 00:55:00,890
this slide

1037
00:54:58,070 --> 00:55:03,200
we see host keys and raw public keys and

1038
00:55:00,890 --> 00:55:05,770
there's a question of you know should

1039
00:55:03,200 --> 00:55:11,560
there should these two things be merged

1040
00:55:05,770 --> 00:55:15,170
possibly I mean a host key is

1041
00:55:11,560 --> 00:55:18,340
effectively an asymmetric key value and

1042
00:55:15,170 --> 00:55:22,730
a rope of caves nature metric key value

1043
00:55:18,340 --> 00:55:24,200
and so I mean there's the encoding I

1044
00:55:22,730 --> 00:55:26,750
mean I understand that you know when we

1045
00:55:24,200 --> 00:55:29,089
think about SSH house keys we we think

1046
00:55:26,750 --> 00:55:32,930
about that texturized format that you

1047
00:55:29,090 --> 00:55:35,030
know so that kind of an encoding and but

1048
00:55:32,930 --> 00:55:38,180
remember separately we have the key

1049
00:55:35,030 --> 00:55:40,000
format there's the algorithm there's a

1050
00:55:38,180 --> 00:55:44,450
key format that we discussed previously

1051
00:55:40,000 --> 00:55:47,330
so it seems that maybe trust door we

1052
00:55:44,450 --> 00:55:49,460
could really just have one of these two

1053
00:55:47,330 --> 00:55:52,190
things could be merged and and then you

1054
00:55:49,460 --> 00:55:54,890
know for those that are used for SSH the

1055
00:55:52,190 --> 00:55:56,180
key format would say it's a it's an SSH

1056
00:55:54,890 --> 00:56:00,920
key and for those that are being used

1057
00:55:56,180 --> 00:56:02,990
for other it would be the other kind of

1058
00:56:00,920 --> 00:56:04,550
encoding that be specific for that the

1059
00:56:02,990 --> 00:56:06,379
key format would be different so that

1060
00:56:04,550 --> 00:56:11,740
was my that's my question

1061
00:56:06,380 --> 00:56:11,740
Thornton group any comments or thoughts

1062
00:56:15,910 --> 00:56:19,930
okay

1063
00:56:17,680 --> 00:56:22,359
I think that particular one probably

1064
00:56:19,930 --> 00:56:27,160
requires a little modeling you know

1065
00:56:22,360 --> 00:56:31,270
where or you know examples where we play

1066
00:56:27,160 --> 00:56:32,049
it out and see how it go it seems it

1067
00:56:31,270 --> 00:56:34,180
seems possible

1068
00:56:32,050 --> 00:56:36,820
it seems viable and if there's an

1069
00:56:34,180 --> 00:56:40,930
opportunity to simplify things we should

1070
00:56:36,820 --> 00:56:44,140
so there'll be a something to explore as

1071
00:56:40,930 --> 00:56:44,770
we move forward with this okay next

1072
00:56:44,140 --> 00:56:50,620
slide please

1073
00:56:44,770 --> 00:56:53,700
slide 3 slide 13 okay so what would the

1074
00:56:50,620 --> 00:56:56,440
impact of having raw public keys and

1075
00:56:53,700 --> 00:57:00,370
pairwise symmetric or appreciate keys be

1076
00:56:56,440 --> 00:57:02,140
on to the TLS model and and mind you

1077
00:57:00,370 --> 00:57:05,109
we're talking about the TLS model and

1078
00:57:02,140 --> 00:57:08,680
not the SSH model because the notion of

1079
00:57:05,110 --> 00:57:12,160
using these values are really specific

1080
00:57:08,680 --> 00:57:14,049
with TLS I'm not I mean SSH with us a

1081
00:57:12,160 --> 00:57:18,310
sage they do have different kinds of

1082
00:57:14,050 --> 00:57:19,930
keys they talk about I mean will they

1083
00:57:18,310 --> 00:57:22,080
have public key and then with ahem

1084
00:57:19,930 --> 00:57:25,319
public key they also have for instance

1085
00:57:22,080 --> 00:57:27,880
certificate based public keys and PGP

1086
00:57:25,320 --> 00:57:30,760
based public keys

1087
00:57:27,880 --> 00:57:34,390
so yes SSH does have variations and in

1088
00:57:30,760 --> 00:57:36,940
its public keys but when when but they

1089
00:57:34,390 --> 00:57:39,339
don't really refer to raw public keys or

1090
00:57:36,940 --> 00:57:41,920
PS keys that those concepts are really

1091
00:57:39,340 --> 00:57:44,250
specific to TLS and hence why this slide

1092
00:57:41,920 --> 00:57:48,370
is only talking about the impact to TLS

1093
00:57:44,250 --> 00:57:50,650
and so what would what is the impact fee

1094
00:57:48,370 --> 00:57:53,859
so there's this TLS client grouping and

1095
00:57:50,650 --> 00:57:57,550
a similar impact would be to the TLS

1096
00:57:53,860 --> 00:58:02,950
server grouping and in this grouping we

1097
00:57:57,550 --> 00:58:04,600
have for instance client identity and of

1098
00:58:02,950 --> 00:58:07,509
course you know if the client is going

1099
00:58:04,600 --> 00:58:10,360
to identify itself using well it's

1100
00:58:07,510 --> 00:58:11,620
called pub key or preacher key but it's

1101
00:58:10,360 --> 00:58:13,630
you know if it's pub key it's actually

1102
00:58:11,620 --> 00:58:14,799
having a private key so that's what if

1103
00:58:13,630 --> 00:58:16,480
it's identifying himself using its

1104
00:58:14,800 --> 00:58:18,370
public key then of course the server

1105
00:58:16,480 --> 00:58:21,400
needs to be able to authenticate it

1106
00:58:18,370 --> 00:58:23,069
using a public key and so the impact is

1107
00:58:21,400 --> 00:58:25,900
going to have is could be you know

1108
00:58:23,070 --> 00:58:28,060
having two impacts what one you know

1109
00:58:25,900 --> 00:58:30,240
where the client is trying to identify

1110
00:58:28,060 --> 00:58:32,340
itself or the server side and by itself

1111
00:58:30,240 --> 00:58:34,080
secondly where the client is trying to

1112
00:58:32,340 --> 00:58:36,300
authenticate servers or the servers are

1113
00:58:34,080 --> 00:58:38,190
trying to authenticate clients so that's

1114
00:58:36,300 --> 00:58:42,930
why we have the impacts in two locations

1115
00:58:38,190 --> 00:58:44,520
and in both locations the impact is kind

1116
00:58:42,930 --> 00:58:49,020
of similar in a sense that where there's

1117
00:58:44,520 --> 00:58:50,730
a choice and and like it's the choice

1118
00:58:49,020 --> 00:58:53,759
part is only the identity but

1119
00:58:50,730 --> 00:58:56,369
nonetheless that we enable there's a

1120
00:58:53,760 --> 00:58:57,900
there's a variation right you can for

1121
00:58:56,369 --> 00:59:01,440
client see there's a choice because you

1122
00:58:57,900 --> 00:59:02,880
can I don't know I wanted about to say

1123
00:59:01,440 --> 00:59:04,170
you can only identify yourself and you

1124
00:59:02,880 --> 00:59:05,760
think one strategy I'm not sure if

1125
00:59:04,170 --> 00:59:08,610
that's totally true but I think it is

1126
00:59:05,760 --> 00:59:10,530
true so you kind of pick one you want

1127
00:59:08,610 --> 00:59:12,390
identify yourself using a PSK it's a you

1128
00:59:10,530 --> 00:59:15,030
would pick that choice and and do it

1129
00:59:12,390 --> 00:59:17,118
that way but when you're authenticating

1130
00:59:15,030 --> 00:59:20,190
it that's actually becomes more of a

1131
00:59:17,119 --> 00:59:22,200
multiplicity you have a really and this

1132
00:59:20,190 --> 00:59:23,820
is like references to trust or for

1133
00:59:22,200 --> 00:59:29,368
instance so there's many kinds of

1134
00:59:23,820 --> 00:59:31,070
certificates and many kinds of keys for

1135
00:59:29,369 --> 00:59:34,110
all public keys that could be used for

1136
00:59:31,070 --> 00:59:35,880
authentication purposes so that's more

1137
00:59:34,110 --> 00:59:38,520
it doesn't need of a choice it's more of

1138
00:59:35,880 --> 00:59:40,109
a union because you know you have a

1139
00:59:38,520 --> 00:59:43,109
multiplicity of clients that are coming

1140
00:59:40,109 --> 00:59:45,119
in and one client may be using one

1141
00:59:43,109 --> 00:59:47,100
choice you versus another strategy so

1142
00:59:45,119 --> 00:59:50,700
it's not a choice there okay well anyway

1143
00:59:47,100 --> 00:59:53,069
that is the current impact and I don't

1144
00:59:50,700 --> 00:59:55,189
have a question per se I just wanted to

1145
00:59:53,070 --> 00:59:58,859
bring it to the working groups attention

1146
00:59:55,190 --> 01:00:01,380
next or actually if there is a comment I

1147
00:59:58,859 --> 01:00:02,940
don't think I see anyone standing at the

1148
01:00:01,380 --> 01:00:06,690
microphone so next slide please

1149
01:00:02,940 --> 01:00:09,869
so again before we move on you have ten

1150
01:00:06,690 --> 01:00:12,119
more minutes okay and there's only four

1151
01:00:09,869 --> 01:00:13,980
more slides or really two more content

1152
01:00:12,119 --> 01:00:18,630
slides after this one so I think we'll

1153
01:00:13,980 --> 01:00:21,480
be okay thank you okay so we spoke about

1154
01:00:18,630 --> 01:00:23,010
the impact to the TLS model there's also

1155
01:00:21,480 --> 01:00:28,230
impact to the Netcom from restaurant

1156
01:00:23,010 --> 01:00:29,640
models so we spoke you know if was if

1157
01:00:28,230 --> 01:00:33,180
okay so the clients can identify

1158
01:00:29,640 --> 01:00:35,220
themselves using our PK or PS k we also

1159
01:00:33,180 --> 01:00:37,140
talked about the server team to be able

1160
01:00:35,220 --> 01:00:39,029
to authenticate the clients but in

1161
01:00:37,140 --> 01:00:41,609
addition the servers need to be able to

1162
01:00:39,030 --> 01:00:42,869
extract a username you know what is the

1163
01:00:41,609 --> 01:00:43,259
net comp username what is the breast

1164
01:00:42,869 --> 01:00:47,280
coffee

1165
01:00:43,260 --> 01:00:49,200
named for that client that I that only

1166
01:00:47,280 --> 01:00:51,750
identified itself using raw public key

1167
01:00:49,200 --> 01:00:54,359
or preacher key and particular not a

1168
01:00:51,750 --> 01:00:57,330
certificate if they were using a

1169
01:00:54,360 --> 01:01:00,720
certificate then we'd leverage the

1170
01:00:57,330 --> 01:01:04,590
existing cert to name mapping structure

1171
01:01:00,720 --> 01:01:08,339
where it describes how to extract a

1172
01:01:04,590 --> 01:01:09,590
username from a certificate so it seems

1173
01:01:08,340 --> 01:01:13,530
like we would need something like that

1174
01:01:09,590 --> 01:01:17,850
how to map or extract a username from a

1175
01:01:13,530 --> 01:01:22,380
PSK or a bogey so once a couple options

1176
01:01:17,850 --> 01:01:28,290
maybe would be one to define PSK to name

1177
01:01:22,380 --> 01:01:30,360
and RPK to name maps now and the why do

1178
01:01:28,290 --> 01:01:34,470
it now i mean is it like to extent if

1179
01:01:30,360 --> 01:01:37,110
I'm needed now or to just leave those

1180
01:01:34,470 --> 01:01:39,779
definitions for some future update and

1181
01:01:37,110 --> 01:01:41,370
not worry about it now and I think

1182
01:01:39,780 --> 01:01:44,540
that's probably a good place to pause

1183
01:01:41,370 --> 01:01:44,540
any comments

1184
01:01:52,090 --> 01:01:56,030
Robert insist so I mean I don't know how

1185
01:01:55,040 --> 01:01:57,740
important this is

1186
01:01:56,030 --> 01:01:59,690
I if there's a choice and it makes sense

1187
01:01:57,740 --> 01:02:01,669
you can defer this I would suggest it's

1188
01:01:59,690 --> 01:02:04,150
better to try and defer this and get the

1189
01:02:01,670 --> 01:02:07,220
drafts finished so that's my preference

1190
01:02:04,150 --> 01:02:08,990
but if this is required for this to work

1191
01:02:07,220 --> 01:02:10,959
then we need to do it now but I don't

1192
01:02:08,990 --> 01:02:14,600
know

1193
01:02:10,960 --> 01:02:15,860
yeah but within our working group or you

1194
01:02:14,600 --> 01:02:19,330
know looking at common restaurant

1195
01:02:15,860 --> 01:02:24,820
protocols I've I've never heard anyone

1196
01:02:19,330 --> 01:02:28,069
ask for this support the desire for

1197
01:02:24,820 --> 01:02:31,760
wanting to add support for PSK and our

1198
01:02:28,070 --> 01:02:33,620
RPK I mean theoretically as possible

1199
01:02:31,760 --> 01:02:36,740
and it probably should be supported

1200
01:02:33,620 --> 01:02:40,580
within the in the fullness of time but

1201
01:02:36,740 --> 01:02:42,830
the immediate use would be more and Hank

1202
01:02:40,580 --> 01:02:48,080
was the one that was asking for this

1203
01:02:42,830 --> 01:02:51,350
it's more for co-op and and co-ops use

1204
01:02:48,080 --> 01:02:53,450
OD TLS which is a variant of TLS and so

1205
01:02:51,350 --> 01:02:55,759
the you know and and I think they very

1206
01:02:53,450 --> 01:02:59,149
much want to be using rpkm PSK

1207
01:02:55,760 --> 01:03:02,960
immediately so so having defined support

1208
01:02:59,150 --> 01:03:07,250
for our PKA PSK in crypto types in key

1209
01:03:02,960 --> 01:03:12,170
store interest or it's very important to

1210
01:03:07,250 --> 01:03:15,080
co-op but for us I back on fresco again

1211
01:03:12,170 --> 01:03:17,660
I don't think it's necessary so I'm very

1212
01:03:15,080 --> 01:03:21,400
happy and willing to defer the

1213
01:03:17,660 --> 01:03:23,960
definition of these mappings until later

1214
01:03:21,400 --> 01:03:25,880
but I'd say yeah my preference is to

1215
01:03:23,960 --> 01:03:31,400
defer and they hang right to draft on

1216
01:03:25,880 --> 01:03:36,200
this okay I think that I'll assign it

1217
01:03:31,400 --> 01:03:39,500
the TLS is also simply using them not

1218
01:03:36,200 --> 01:03:43,580
just as often but it's most certainly it

1219
01:03:39,500 --> 01:03:47,270
is a TS back so what to be T is

1220
01:03:43,580 --> 01:03:51,170
complying well yeah that's right so

1221
01:03:47,270 --> 01:03:53,060
there you're right theoretically is is

1222
01:03:51,170 --> 01:03:56,510
there someone could want to use them and

1223
01:03:53,060 --> 01:03:57,799
if they want to be as him medon't do

1224
01:03:56,510 --> 01:03:59,410
these mappings that they just simply

1225
01:03:57,800 --> 01:04:03,230
can't and unless they create their own

1226
01:03:59,410 --> 01:04:05,000
mappings but I think that's okay I think

1227
01:04:03,230 --> 01:04:05,810
the working group we could decide to

1228
01:04:05,000 --> 01:04:09,020
just

1229
01:04:05,810 --> 01:04:11,029
not worry about that into the problem

1230
01:04:09,020 --> 01:04:12,290
arises completely so we're aware that

1231
01:04:11,030 --> 01:04:17,320
there would be a hole in the solution

1232
01:04:12,290 --> 01:04:22,250
and we with our eyes open say it's okay

1233
01:04:17,320 --> 01:04:25,340
Kent this is from Martin yep

1234
01:04:22,250 --> 01:04:26,960
two questions sort of linked with two

1235
01:04:25,340 --> 01:04:30,680
doesn't that mean that we have an

1236
01:04:26,960 --> 01:04:38,600
incomplete solution and Part B is can we

1237
01:04:30,680 --> 01:04:41,330
leave out our BK / p sk 4n c /r c yes

1238
01:04:38,600 --> 01:04:43,279
exactly so first yes it would be an

1239
01:04:41,330 --> 01:04:46,700
installation i as we were just saying

1240
01:04:43,280 --> 01:04:53,450
and and then secondly exactly we just

1241
01:04:46,700 --> 01:04:54,680
simply not can we leave him out i mean i

1242
01:04:53,450 --> 01:05:00,669
think what you're asking is can we

1243
01:04:54,680 --> 01:05:04,700
somehow make it be that clients cannot

1244
01:05:00,670 --> 01:05:07,310
use them i I can't respond to that just

1245
01:05:04,700 --> 01:05:09,410
right now I mean like it can there be a

1246
01:05:07,310 --> 01:05:12,650
must expression or something like that

1247
01:05:09,410 --> 01:05:15,920
but that could be used to restrict the

1248
01:05:12,650 --> 01:05:20,720
syntax so that's not possible I need to

1249
01:05:15,920 --> 01:05:23,990
look at that just a little bit more okay

1250
01:05:20,720 --> 01:05:25,819
so I think I said it earlier can we jump

1251
01:05:23,990 --> 01:05:30,830
ahead really just go to slides forward

1252
01:05:25,820 --> 01:05:32,240
please for client authentication there's

1253
01:05:30,830 --> 01:05:34,009
actually the repeater that's especially

1254
01:05:32,240 --> 01:05:35,720
by client authentication first we're

1255
01:05:34,010 --> 01:05:39,890
going to talk about local versus

1256
01:05:35,720 --> 01:05:42,290
external and in the currently published

1257
01:05:39,890 --> 01:05:45,440
versions of TLS Bob Wills there's a

1258
01:05:42,290 --> 01:05:47,150
local or external flag to indicate if

1259
01:05:45,440 --> 01:05:49,280
the client authentication should be

1260
01:05:47,150 --> 01:05:52,160
different inside or outside the data

1261
01:05:49,280 --> 01:05:56,480
model specifically where where's Lister

1262
01:05:52,160 --> 01:05:58,520
client a fine and you know sort of life

1263
01:05:56,480 --> 01:06:01,220
high observation I mean you want to

1264
01:05:58,520 --> 01:06:04,450
define your list of clients inside the

1265
01:06:01,220 --> 01:06:07,850
part of the data model that's kind of

1266
01:06:04,450 --> 01:06:10,370
primarily oriented to transport the the

1267
01:06:07,850 --> 01:06:12,350
endpoint to the transport we wanted to

1268
01:06:10,370 --> 01:06:14,600
find your client clients there your list

1269
01:06:12,350 --> 01:06:15,890
of clients there or would you want to

1270
01:06:14,600 --> 01:06:17,690
have some other place that you're

1271
01:06:15,890 --> 01:06:19,609
defining your clients and and so that

1272
01:06:17,690 --> 01:06:23,810
was the notion of the local versus

1273
01:06:19,610 --> 01:06:26,270
external Martin raised this discussion

1274
01:06:23,810 --> 01:06:29,330
on list since the publication of or the

1275
01:06:26,270 --> 01:06:33,259
submission of these drafts and we felt

1276
01:06:29,330 --> 01:06:36,560
that we could just simply remove that's

1277
01:06:33,260 --> 01:06:39,860
choice or I should say we could remove

1278
01:06:36,560 --> 01:06:42,470
that choice by really removing the

1279
01:06:39,860 --> 01:06:43,880
external case and flattening the local

1280
01:06:42,470 --> 01:06:46,370
case so the only case that remains

1281
01:06:43,880 --> 01:06:48,380
between the local case but adding a

1282
01:06:46,370 --> 01:06:51,440
feature statement to the local case so

1283
01:06:48,380 --> 01:06:52,990
that it would only you know for those

1284
01:06:51,440 --> 01:06:56,900
servers that wanted to find clients

1285
01:06:52,990 --> 01:06:59,299
locally they could I enabling that

1286
01:06:56,900 --> 01:07:03,080
feature statement and otherwise it'll be

1287
01:06:59,300 --> 01:07:04,450
it be on their own to define where the

1288
01:07:03,080 --> 01:07:07,790
client authentication is going to

1289
01:07:04,450 --> 01:07:09,919
configure themselves separately so

1290
01:07:07,790 --> 01:07:14,500
that's the current strategy if it's no

1291
01:07:09,920 --> 01:07:17,180
object from this will any any comments

1292
01:07:14,500 --> 01:07:22,280
yeah and in this interest of time I

1293
01:07:17,180 --> 01:07:23,750
think we'll just move forward please yes

1294
01:07:22,280 --> 01:07:25,520
again still talking about client

1295
01:07:23,750 --> 01:07:28,460
education but but now required versus

1296
01:07:25,520 --> 01:07:31,310
optional in the currently published

1297
01:07:28,460 --> 01:07:33,500
version so the TLS they should be dry so

1298
01:07:31,310 --> 01:07:36,590
this is not with SSA Jo TLS and HTTP

1299
01:07:33,500 --> 01:07:39,110
there's a required versus optional flag

1300
01:07:36,590 --> 01:07:42,320
to indicate if client authentication

1301
01:07:39,110 --> 01:07:46,070
must succeed at that protocol layer or

1302
01:07:42,320 --> 01:07:47,660
not and this isn't this is necessary

1303
01:07:46,070 --> 01:07:50,720
because in rest Kampf

1304
01:07:47,660 --> 01:07:53,120
there's rush comps authentication model

1305
01:07:50,720 --> 01:07:56,839
says that the client may be

1306
01:07:53,120 --> 01:08:01,819
authenticated at the TLS layer or at the

1307
01:07:56,840 --> 01:08:05,210
HTTP layer or both and and so there says

1308
01:08:01,820 --> 01:08:08,680
you know I was trying to express that

1309
01:08:05,210 --> 01:08:10,670
like how do we express if it's being

1310
01:08:08,680 --> 01:08:14,390
authenticated at one layer of versus the

1311
01:08:10,670 --> 01:08:16,399
other layer however recent unless

1312
01:08:14,390 --> 01:08:17,870
discussion is led to the following which

1313
01:08:16,399 --> 01:08:20,599
is essentially the removal of this

1314
01:08:17,870 --> 01:08:23,689
choice completely because primarily a

1315
01:08:20,600 --> 01:08:27,800
code that I've been working on isn't

1316
01:08:23,689 --> 01:08:29,899
using the flag rather it's keying off of

1317
01:08:27,800 --> 01:08:31,970
what credentials have been configured so

1318
01:08:29,899 --> 01:08:33,948
you know in the client list that we

1319
01:08:31,970 --> 01:08:38,089
spoke about two slides

1320
01:08:33,948 --> 01:08:40,638
prior we in in each client definition

1321
01:08:38,089 --> 01:08:43,849
the client may have a password configure

1322
01:08:40,639 --> 01:08:46,699
and separately it may have a TLS trust

1323
01:08:43,849 --> 01:08:48,619
anchor configured if if it has a

1324
01:08:46,698 --> 01:08:51,108
password configured then my code says

1325
01:08:48,618 --> 01:08:54,828
well you must authenticate using HTTP

1326
01:08:51,109 --> 01:08:56,539
basic off if you have a TLS you know

1327
01:08:54,828 --> 01:09:01,038
trust anchor configured then you must

1328
01:08:56,538 --> 01:09:03,768
authenticate at the TLS level as well so

1329
01:09:01,038 --> 01:09:06,259
so it's being driven more by what has

1330
01:09:03,769 --> 01:09:13,519
been configured at that client level

1331
01:09:06,259 --> 01:09:15,229
instead of using a flag here so a couple

1332
01:09:13,519 --> 01:09:17,809
examples if a trust anchors been

1333
01:09:15,229 --> 01:09:22,369
configured to see list of what okay

1334
01:09:17,809 --> 01:09:24,049
that's like this head so any any

1335
01:09:22,368 --> 01:09:26,420
thoughts or concerns about that makes

1336
01:09:24,049 --> 01:09:33,589
sense right to just go off of what's

1337
01:09:26,420 --> 01:09:35,059
been configured well I know I know

1338
01:09:33,589 --> 01:09:36,738
Martin's nodding his head because he

1339
01:09:35,059 --> 01:09:41,719
agreed on list when we had that

1340
01:09:36,738 --> 01:09:44,709
discussion so if there's no objections

1341
01:09:41,719 --> 01:09:46,999
then we'll it will the next update will

1342
01:09:44,709 --> 01:09:50,238
remove it just has been discussed there

1343
01:09:46,999 --> 01:09:52,009
and so that is oh I'm sorry I said

1344
01:09:50,238 --> 01:09:55,299
differently there is one more two more

1345
01:09:52,009 --> 01:09:57,889
slides please this is the last slide

1346
01:09:55,300 --> 01:10:01,940
there's a certificate name fingerprint

1347
01:09:57,889 --> 01:10:04,699
mapping currently both in the ITF and

1348
01:10:01,940 --> 01:10:06,558
restaurant server models there's a

1349
01:10:04,699 --> 01:10:09,228
search name grouping that map's the

1350
01:10:06,559 --> 01:10:10,760
client certificates to the user name the

1351
01:10:09,229 --> 01:10:13,550
grouping currently is containing

1352
01:10:10,760 --> 01:10:20,179
mandatory true for a node called

1353
01:10:13,550 --> 01:10:24,619
fingerprint and and so the observation

1354
01:10:20,179 --> 01:10:27,469
here is that in what I think could be a

1355
01:10:24,619 --> 01:10:29,509
common case deployment scenario it would

1356
01:10:27,469 --> 01:10:32,659
be unnecessary to have to define that

1357
01:10:29,510 --> 01:10:36,079
fingerprint all the time that you know a

1358
01:10:32,659 --> 01:10:38,659
deployment would have sort of a

1359
01:10:36,079 --> 01:10:40,699
deployment wide strategy you know they

1360
01:10:38,659 --> 01:10:42,530
have an issuer the issuer is signing all

1361
01:10:40,699 --> 01:10:44,478
of their certificates the same way and

1362
01:10:42,530 --> 01:10:46,820
and the user name is put in the same

1363
01:10:44,479 --> 01:10:47,719
field for all the certificates and so

1364
01:10:46,820 --> 01:10:49,610
the strategy for how

1365
01:10:47,719 --> 01:10:53,119
extracting username from a from a

1366
01:10:49,610 --> 01:10:56,989
certificate is universal and and hence

1367
01:10:53,119 --> 01:10:59,960
the need to identify the fingerprint of

1368
01:10:56,989 --> 01:11:01,280
the certificate you know and and in

1369
01:10:59,960 --> 01:11:04,159
order to figure out the extraction

1370
01:11:01,280 --> 01:11:07,999
strategy is the unnecessary or redundant

1371
01:11:04,159 --> 01:11:09,978
effectively and so you know the thinking

1372
01:11:07,999 --> 01:11:12,769
is well we like let's remove this

1373
01:11:09,979 --> 01:11:17,300
mandatory true because it's is not

1374
01:11:12,769 --> 01:11:21,139
required always and so in the current

1375
01:11:17,300 --> 01:11:25,179
model when using the grouping it refines

1376
01:11:21,139 --> 01:11:29,210
the mandatory true to a mandatory false

1377
01:11:25,179 --> 01:11:31,539
and so two aspects to that first off it

1378
01:11:29,210 --> 01:11:34,519
does not impact existing behavior so for

1379
01:11:31,539 --> 01:11:36,409
for those who like to use certificate

1380
01:11:34,519 --> 01:11:38,389
and they want to always specify

1381
01:11:36,409 --> 01:11:41,089
fingerprints they still can it's just

1382
01:11:38,389 --> 01:11:45,079
giving them the option to to not specify

1383
01:11:41,090 --> 01:11:48,229
it if they don't need to or want to or I

1384
01:11:45,079 --> 01:11:50,329
should say have to and the second aspect

1385
01:11:48,229 --> 01:11:52,249
is really what Martin was saying is that

1386
01:11:50,329 --> 01:11:54,978
doing this wouldn't need to be used with

1387
01:11:52,249 --> 01:11:58,699
care but isn't that the case with all

1388
01:11:54,979 --> 01:12:01,849
things in security you know if you if

1389
01:11:58,699 --> 01:12:03,999
you the the certificate of name mapping

1390
01:12:01,849 --> 01:12:07,460
it's a list it's a user ordered list

1391
01:12:03,999 --> 01:12:09,469
from a yang modeling or seeing syntax

1392
01:12:07,460 --> 01:12:10,130
perspective it's not actually user by it

1393
01:12:09,469 --> 01:12:12,650
I should say

1394
01:12:10,130 --> 01:12:15,979
ordered by user instead it has a field

1395
01:12:12,650 --> 01:12:18,999
called ID and the clients are supposed

1396
01:12:15,979 --> 01:12:22,909
to in the service or supposed to

1397
01:12:18,999 --> 01:12:25,010
numerically sort because the lowest ID

1398
01:12:22,909 --> 01:12:27,018
is actually the first two lists and the

1399
01:12:25,010 --> 01:12:29,949
so that they are sorted though they're

1400
01:12:27,019 --> 01:12:34,090
their user sorted list and it would be

1401
01:12:29,949 --> 01:12:36,619
important for clients to ensure that the

1402
01:12:34,090 --> 01:12:38,869
if there is more than one value in this

1403
01:12:36,619 --> 01:12:40,400
list that the one that's not having the

1404
01:12:38,869 --> 01:12:42,348
fingerprint is at the very end of the

1405
01:12:40,400 --> 01:12:46,610
list because it's effectively they catch

1406
01:12:42,349 --> 01:12:49,639
all the you know the the global wildcard

1407
01:12:46,610 --> 01:12:50,960
it matches all you know so it's the it

1408
01:12:49,639 --> 01:12:52,729
becomes the default it just need to make

1409
01:12:50,960 --> 01:12:54,499
sure that that particular entry is at

1410
01:12:52,729 --> 01:12:58,249
the end of the list so that you know yes

1411
01:12:54,499 --> 01:13:01,478
there's some care with ribs with respect

1412
01:12:58,249 --> 01:13:01,478
to that but beyond that not really

1413
01:13:01,910 --> 01:13:10,639
smell our concerns let's make it quick

1414
01:13:07,380 --> 01:13:12,900
because we are already over time on this

1415
01:13:10,640 --> 01:13:14,580
on this particular thing about nice you

1416
01:13:12,900 --> 01:13:16,290
can says I do have one other question on

1417
01:13:14,580 --> 01:13:18,780
one of the other drafts can I raise that

1418
01:13:16,290 --> 01:13:19,350
now with the Ricci late could you do it

1419
01:13:18,780 --> 01:13:22,920
on the list

1420
01:13:19,350 --> 01:13:25,370
oh yeah I can do all right thanks okay

1421
01:13:22,920 --> 01:13:25,370
thank you

1422
01:13:29,060 --> 01:13:35,120
so Hank would will you be presenting yep

1423
01:13:59,000 --> 01:14:04,380
hi I'm not Eric

1424
01:14:00,930 --> 01:14:06,150
I'm Hank I'm presenting for the message

1425
01:14:04,380 --> 01:14:09,140
standards for notifications here today

1426
01:14:06,150 --> 01:14:09,139
next slide please

1427
01:14:12,680 --> 01:14:19,890
thank you thank you okay we have old

1428
01:14:17,880 --> 01:14:21,750
school young notification probably

1429
01:14:19,890 --> 01:14:29,130
everybody knows about them we now have

1430
01:14:21,750 --> 01:14:36,060
the three rfcs that are young push and

1431
01:14:29,130 --> 01:14:38,250
and very big space of new types of

1432
01:14:36,060 --> 01:14:39,750
notifications that can be emitted some

1433
01:14:38,250 --> 01:14:41,790
of them are originating from changes

1434
01:14:39,750 --> 01:14:43,800
data stores some of them are originating

1435
01:14:41,790 --> 01:14:48,140
from action notification statements and

1436
01:14:43,800 --> 01:14:51,270
young module definitions all of these

1437
01:14:48,140 --> 01:14:54,590
can produce light quite a lot of yang

1438
01:14:51,270 --> 01:14:57,870
telemetry there will be

1439
01:14:54,590 --> 01:15:00,510
flows of notifications and these flows

1440
01:14:57,870 --> 01:15:03,840
might be aggregated at some point and

1441
01:15:00,510 --> 01:15:07,140
even on the mirror that is the yang data

1442
01:15:03,840 --> 01:15:09,600
store there might be a quite of a lot of

1443
01:15:07,140 --> 01:15:12,390
original sources of notification

1444
01:15:09,600 --> 01:15:14,220
statements and all instances in this

1445
01:15:12,390 --> 01:15:15,110
case and these could be already bundled

1446
01:15:14,220 --> 01:15:18,330
at the

1447
01:15:15,110 --> 01:15:20,969
the source later on in this dream they

1448
01:15:18,330 --> 01:15:24,930
could be bundled by young agents and

1449
01:15:20,969 --> 01:15:28,410
immediately so there is then a specific

1450
01:15:24,930 --> 01:15:30,150
need for metadata how to do this which

1451
01:15:28,410 --> 01:15:32,790
modules are involved what it is about

1452
01:15:30,150 --> 01:15:35,509
these are of course all informations

1453
01:15:32,790 --> 01:15:38,699
that are inside the tons so to speak

1454
01:15:35,510 --> 01:15:41,160
notification instances in the bundle but

1455
01:15:38,699 --> 01:15:43,919
if you just want to have fast processing

1456
01:15:41,160 --> 01:15:46,650
of these let's call it telemetry content

1457
01:15:43,920 --> 01:15:49,770
its value SFIL to have some explicit

1458
01:15:46,650 --> 01:15:52,199
metadata at the top of the notification

1459
01:15:49,770 --> 01:15:55,290
bundle so effectively it's the no

1460
01:15:52,199 --> 01:15:57,540
notifications but with a header that's

1461
01:15:55,290 --> 01:16:01,769
probably the bundle header with metadata

1462
01:15:57,540 --> 01:16:03,960
in it and then this so there are some

1463
01:16:01,770 --> 01:16:09,180
explicit changes in the last iteration

1464
01:16:03,960 --> 01:16:12,030
of this draft especially we removed the

1465
01:16:09,180 --> 01:16:14,610
potential the capability of transporting

1466
01:16:12,030 --> 01:16:16,769
something that is not a yang

1467
01:16:14,610 --> 01:16:18,809
notification everybody was a little bit

1468
01:16:16,770 --> 01:16:21,210
like this is net conf why are you doing

1469
01:16:18,810 --> 01:16:22,380
I don't know an RTP notification message

1470
01:16:21,210 --> 01:16:26,580
here this is not the right place for

1471
01:16:22,380 --> 01:16:28,320
that acceptable and true I think it can

1472
01:16:26,580 --> 01:16:30,320
be it could be augmented in again if you

1473
01:16:28,320 --> 01:16:32,370
want this on a custom basis and

1474
01:16:30,320 --> 01:16:38,400
everything in the drafts at the moment

1475
01:16:32,370 --> 01:16:39,840
is purely notification based now yes an

1476
01:16:38,400 --> 01:16:42,780
interesting question has come over the

1477
01:16:39,840 --> 01:16:44,040
list how do I know that my receiver is

1478
01:16:42,780 --> 01:16:47,360
capable of doing that

1479
01:16:44,040 --> 01:16:50,550
so this basically goes back to a note of

1480
01:16:47,360 --> 01:16:54,599
drafts that would be a place where it is

1481
01:16:50,550 --> 01:16:57,540
easy to highlight our capabilities lie

1482
01:16:54,600 --> 01:16:59,340
I think the group has to find use of it

1483
01:16:57,540 --> 01:17:03,030
in the first place I think it has

1484
01:16:59,340 --> 01:17:06,060
because this survived under version 8 of

1485
01:17:03,030 --> 01:17:08,099
the draft now but I don't know because

1486
01:17:06,060 --> 01:17:10,440
I'm not a young expert that I'm not come

1487
01:17:08,100 --> 01:17:13,620
expert if the note if traf especially

1488
01:17:10,440 --> 01:17:16,469
HTTP notice that's upcoming is the right

1489
01:17:13,620 --> 01:17:19,980
place to solve the can my receiver

1490
01:17:16,469 --> 01:17:22,800
actually process the Bandar head our

1491
01:17:19,980 --> 01:17:24,870
statements I don't know the answer to

1492
01:17:22,800 --> 01:17:27,540
this question maybe the room does yet so

1493
01:17:24,870 --> 01:17:28,679
as a contributor yeah so there is

1494
01:17:27,540 --> 01:17:32,360
interesting

1495
01:17:28,679 --> 01:17:35,699
covering receiving support hmm I take

1496
01:17:32,360 --> 01:17:38,009
but the transport might decide what

1497
01:17:35,699 --> 01:17:40,110
might be used like in our case we use

1498
01:17:38,010 --> 01:17:43,760
options to discover a receiver support

1499
01:17:40,110 --> 01:17:47,130
hmm so the question then is the format

1500
01:17:43,760 --> 01:17:49,860
how would the receiver capabilities be

1501
01:17:47,130 --> 01:17:51,659
documented so that when Greg do you know

1502
01:17:49,860 --> 01:17:53,969
all the capabilities that the receiver

1503
01:17:51,659 --> 01:17:56,638
has mm-hmm so that's something surely

1504
01:17:53,969 --> 01:17:59,340
the the draft can take up a chapter you

1505
01:17:56,639 --> 01:18:01,499
can come up with capability options and

1506
01:17:59,340 --> 01:18:03,630
how to maybe fine-grain them maybe not

1507
01:18:01,499 --> 01:18:05,699
even I don't know but we can work on

1508
01:18:03,630 --> 01:18:08,159
this for our first draft and then give

1509
01:18:05,699 --> 01:18:11,219
it to the group and if you can find out

1510
01:18:08,159 --> 01:18:13,320
of this makes sense I guess again I'm

1511
01:18:11,219 --> 01:18:16,499
not the deep expert on this term so I

1512
01:18:13,320 --> 01:18:18,539
thank you for that comment and it was

1513
01:18:16,499 --> 01:18:21,570
posted I think it was in here I know

1514
01:18:18,539 --> 01:18:23,639
some of our own contributor was posting

1515
01:18:21,570 --> 01:18:25,768
to list yeah well if you're talking

1516
01:18:23,639 --> 01:18:28,320
about yanked elementary isn't it more

1517
01:18:25,769 --> 01:18:31,289
useful if you focus on the binary

1518
01:18:28,320 --> 01:18:34,438
representation therefore have all the

1519
01:18:31,289 --> 01:18:36,360
values not in texts but as a binary

1520
01:18:34,439 --> 01:18:38,699
representation

1521
01:18:36,360 --> 01:18:41,728
what is this inferring to is the Cochran

1522
01:18:38,699 --> 01:18:44,848
work in the constrained environment

1523
01:18:41,729 --> 01:18:48,239
space here I don't have an answer to

1524
01:18:44,849 --> 01:18:50,579
this I'm more like an IOT guy so I would

1525
01:18:48,239 --> 01:18:52,259
be very happy not to waste space and

1526
01:18:50,579 --> 01:18:56,969
long were a big volumes of telemetry

1527
01:18:52,260 --> 01:19:01,260
with human readable text and XML I might

1528
01:18:56,969 --> 01:19:03,659
not be yeah this might be just my point

1529
01:19:01,260 --> 01:19:06,719
of view but I think it is at least worth

1530
01:19:03,659 --> 01:19:08,820
considering and we could highlight I

1531
01:19:06,719 --> 01:19:10,409
think the question is on the list but we

1532
01:19:08,820 --> 01:19:12,360
could highlight it again and make it

1533
01:19:10,409 --> 01:19:14,518
more prominent when we call for a

1534
01:19:12,360 --> 01:19:19,259
consensus or something how people think

1535
01:19:14,519 --> 01:19:24,920
about this and our default option is

1536
01:19:19,260 --> 01:19:28,979
binary I think and this has to be bashed

1537
01:19:24,920 --> 01:19:31,559
yeah but robots in Cisco I I think

1538
01:19:28,979 --> 01:19:35,780
binary coding is key for telemetry I

1539
01:19:31,559 --> 01:19:37,889
think for the boxes even non IOT devices

1540
01:19:35,780 --> 01:19:40,170
routers and things they're generating a

1541
01:19:37,889 --> 01:19:42,329
lot of data want to binary encoding and

1542
01:19:40,170 --> 01:19:42,619
without having support for that I think

1543
01:19:42,329 --> 01:19:45,909
it

1544
01:19:42,619 --> 01:19:50,710
acts against the ITF telemetry solution

1545
01:19:45,909 --> 01:19:50,710
yeah I'm in total agreement so thank you

1546
01:19:52,090 --> 01:19:59,270
yeah I'm not sure whether he really

1547
01:19:57,409 --> 01:20:03,170
means - doesn't see that yeah

1548
01:19:59,270 --> 01:20:07,780
oh no sorry I don't mean to be high okay

1549
01:20:03,170 --> 01:20:07,780
we'll drop you Thanks go away

1550
01:20:08,020 --> 01:20:17,179
and that's basically it so last question

1551
01:20:11,750 --> 01:20:20,750
on the slide is important is there some

1552
01:20:17,179 --> 01:20:23,989
significant interest in doing this again

1553
01:20:20,750 --> 01:20:26,150
the context is there is a large volume

1554
01:20:23,989 --> 01:20:28,419
of notification now that can be created

1555
01:20:26,150 --> 01:20:31,280
and you have to manage that somehow

1556
01:20:28,420 --> 01:20:35,300
which is not highlight on the screen as

1557
01:20:31,280 --> 01:20:37,670
there are cool sources week footer are

1558
01:20:35,300 --> 01:20:40,550
items that are highlighting for example

1559
01:20:37,670 --> 01:20:42,619
integrity evidence which is developed

1560
01:20:40,550 --> 01:20:45,380
over in the remote Association working

1561
01:20:42,619 --> 01:20:47,809
group all of this blobs can be signed

1562
01:20:45,380 --> 01:20:49,520
and the situation is not the original

1563
01:20:47,810 --> 01:20:54,440
creator of the notification so that has

1564
01:20:49,520 --> 01:20:57,139
some optional but very useful management

1565
01:20:54,440 --> 01:21:00,348
and television restream information here

1566
01:20:57,139 --> 01:21:03,790
so having added that is there some

1567
01:21:00,349 --> 01:21:08,719
strong objection to continue this work

1568
01:21:03,790 --> 01:21:11,300
in this room that does not seem to be

1569
01:21:08,719 --> 01:21:21,409
the case I'm very happy about that and I

1570
01:21:11,300 --> 01:21:24,199
can take time to sorry WG closure huh

1571
01:21:21,409 --> 01:21:26,150
yeah so just a quick comment on and I

1572
01:21:24,199 --> 01:21:28,009
think we still have the whole question

1573
01:21:26,150 --> 01:21:29,989
of receiver support or the receiver but

1574
01:21:28,010 --> 01:21:32,960
this is the basically the transition

1575
01:21:29,989 --> 01:21:36,968
stone and then so let's try to address

1576
01:21:32,960 --> 01:21:36,969
that before we talk okay thanks

1577
01:21:50,560 --> 01:22:01,580
okay well India from erikson hopefully

1578
01:21:57,380 --> 01:22:05,660
we're getting near to finalizing the ank

1579
01:22:01,580 --> 01:22:09,200
push notification capabilities draft so

1580
01:22:05,660 --> 01:22:10,820
just a basic concept the yank push

1581
01:22:09,200 --> 01:22:12,650
capabilities has a number of

1582
01:22:10,820 --> 01:22:15,440
capabilities and it would be good to

1583
01:22:12,650 --> 01:22:18,530
know what these capabilities are before

1584
01:22:15,440 --> 01:22:20,599
trying to get the notifications the most

1585
01:22:18,530 --> 01:22:23,120
important original was whether one

1586
01:22:20,600 --> 01:22:26,240
change can be supported for individual

1587
01:22:23,120 --> 01:22:29,420
data nodes or not but then since then a

1588
01:22:26,240 --> 01:22:38,990
number of other capabilities were added

1589
01:22:29,420 --> 01:22:44,150
to the data model so here we see some of

1590
01:22:38,990 --> 01:22:45,590
the capabilities and one key concept

1591
01:22:44,150 --> 01:22:49,820
that's coming in more and more the

1592
01:22:45,590 --> 01:22:52,010
capabilities are described on multiple

1593
01:22:49,820 --> 01:22:54,590
levels they can be general for the

1594
01:22:52,010 --> 01:22:56,420
publisher and we are starting to use the

1595
01:22:54,590 --> 01:23:00,160
publisher because it's publishes

1596
01:22:56,420 --> 01:23:04,130
notifications or it can be specific for

1597
01:23:00,160 --> 01:23:06,950
individual data stores for example

1598
01:23:04,130 --> 01:23:11,000
support notifications only from running

1599
01:23:06,950 --> 01:23:13,730
but not from candidate or startup or in

1600
01:23:11,000 --> 01:23:15,770
some cases we want to have want to be

1601
01:23:13,730 --> 01:23:19,540
able to specify capabilities on

1602
01:23:15,770 --> 01:23:23,990
individual data nodes so I can support

1603
01:23:19,540 --> 01:23:25,850
notifications for interfaces generally

1604
01:23:23,990 --> 01:23:29,380
but not for interface statistics or

1605
01:23:25,850 --> 01:23:32,870
maybe I want to be able to support

1606
01:23:29,380 --> 01:23:34,580
notifications for gigabit interfaces

1607
01:23:32,870 --> 01:23:38,809
because they are new hardware but not

1608
01:23:34,580 --> 01:23:41,660
for old old ones so if needed then you

1609
01:23:38,810 --> 01:23:45,170
can specify the capabilities but per

1610
01:23:41,660 --> 01:23:47,960
data node and data for example interface

1611
01:23:45,170 --> 01:23:51,170
instance always if you have a more

1612
01:23:47,960 --> 01:23:53,290
specific capability definition so you

1613
01:23:51,170 --> 01:23:55,140
might have a capability definition

1614
01:23:53,290 --> 01:23:57,030
saying that so

1615
01:23:55,140 --> 01:23:58,980
change notifications are supporters for

1616
01:23:57,030 --> 01:24:02,070
the whole node but then you have more

1617
01:23:58,980 --> 01:24:05,400
specific definition that interface

1618
01:24:02,070 --> 01:24:07,440
statistics on change as a support is not

1619
01:24:05,400 --> 01:24:12,179
provided the more specific always

1620
01:24:07,440 --> 01:24:14,179
overrides the less specific okay so

1621
01:24:12,180 --> 01:24:21,000
there have been a number of updates

1622
01:24:14,180 --> 01:24:24,150
since the last last IETF we add these

1623
01:24:21,000 --> 01:24:26,730
two capabilities excluded change type so

1624
01:24:24,150 --> 01:24:29,099
for unchanged notifications we can say

1625
01:24:26,730 --> 01:24:31,169
that we I only want a notifications

1626
01:24:29,100 --> 01:24:33,540
about the create or modify or delete

1627
01:24:31,170 --> 01:24:37,950
operations and I can say that I only

1628
01:24:33,540 --> 01:24:40,350
want some of these and this already

1629
01:24:37,950 --> 01:24:43,080
supported by yank push but now we have a

1630
01:24:40,350 --> 01:24:47,010
capability to say does the system

1631
01:24:43,080 --> 01:24:49,290
support excluding some change types

1632
01:24:47,010 --> 01:24:52,040
there are messages already in yank push

1633
01:24:49,290 --> 01:24:56,070
but it's not defined there how what what

1634
01:24:52,040 --> 01:24:59,490
what is supported or how should we

1635
01:24:56,070 --> 01:25:02,610
notify what is supported also it came up

1636
01:24:59,490 --> 01:25:05,330
lately that in some cases only unchanged

1637
01:25:02,610 --> 01:25:09,380
notifications we might be supported and

1638
01:25:05,330 --> 01:25:14,580
periodic might not if you think about it

1639
01:25:09,380 --> 01:25:17,630
yep for example for example do we

1640
01:25:14,580 --> 01:25:20,610
support periodic notifications about

1641
01:25:17,630 --> 01:25:22,670
startup configuration probably and we

1642
01:25:20,610 --> 01:25:25,799
don't now want to do that either so

1643
01:25:22,670 --> 01:25:29,370
period of notifications can be supported

1644
01:25:25,800 --> 01:25:32,700
or not and that's indicated we have a

1645
01:25:29,370 --> 01:25:35,510
restructure the yang module so it uses

1646
01:25:32,700 --> 01:25:38,580
the node selector in the same way as

1647
01:25:35,510 --> 01:25:41,310
knock'em access controls which is

1648
01:25:38,580 --> 01:25:44,820
basically that this simple slash means

1649
01:25:41,310 --> 01:25:48,480
the whole data store so we don't need a

1650
01:25:44,820 --> 01:25:50,280
special modeling level for this for the

1651
01:25:48,480 --> 01:25:55,940
whole data store is just indicated by

1652
01:25:50,280 --> 01:25:59,550
the simple slash also move to the using

1653
01:25:55,940 --> 01:26:01,589
the term publisher because it's not

1654
01:25:59,550 --> 01:26:06,960
really a server anymore let's say in

1655
01:26:01,590 --> 01:26:09,240
case of 80 HTTP based notifications in

1656
01:26:06,960 --> 01:26:10,980
some cases the term server is still

1657
01:26:09,240 --> 01:26:13,440
there because when we say speak about

1658
01:26:10,980 --> 01:26:16,709
which data stores are supported then yes

1659
01:26:13,440 --> 01:26:20,280
that certain net cost a reskin server

1660
01:26:16,710 --> 01:26:23,820
functionality as requested by some

1661
01:26:20,280 --> 01:26:26,550
there's explicitly indication that this

1662
01:26:23,820 --> 01:26:30,090
works both for nmda anon and the nmda

1663
01:26:26,550 --> 01:26:31,830
systems really the only little

1664
01:26:30,090 --> 01:26:36,690
difference is that if we are speaking

1665
01:26:31,830 --> 01:26:38,730
non nmda then this draft considers the

1666
01:26:36,690 --> 01:26:42,419
state data to be part of their own

1667
01:26:38,730 --> 01:26:44,160
running configuration just for this the

1668
01:26:42,420 --> 01:26:48,120
purpose of these drafts is not a general

1669
01:26:44,160 --> 01:26:51,559
statement in any way and also I updated

1670
01:26:48,120 --> 01:26:53,610
did the draft to follow the instance

1671
01:26:51,560 --> 01:26:57,120
file format draft

1672
01:26:53,610 --> 01:27:02,280
we had workgroup last call and I have up

1673
01:26:57,120 --> 01:27:06,300
the published update since then sorry

1674
01:27:02,280 --> 01:27:09,840
for it their updates were published

1675
01:27:06,300 --> 01:27:14,070
yesterday and maybe even after midnight

1676
01:27:09,840 --> 01:27:17,100
today one upcoming issue with these

1677
01:27:14,070 --> 01:27:20,370
updates is that if instance data format

1678
01:27:17,100 --> 01:27:23,730
draft is updated then that impacts there

1679
01:27:20,370 --> 01:27:26,070
at least examples or not at least the

1680
01:27:23,730 --> 01:27:28,019
examples in this draft so that will

1681
01:27:26,070 --> 01:27:29,849
means that whenever the instance data is

1682
01:27:28,020 --> 01:27:32,640
updated then there's a need to update

1683
01:27:29,850 --> 01:27:35,130
this there's two ways to handle this

1684
01:27:32,640 --> 01:27:36,900
either we continue to update this

1685
01:27:35,130 --> 01:27:40,310
whenever instance data format is

1686
01:27:36,900 --> 01:27:43,860
modified or we kind of strip out the

1687
01:27:40,310 --> 01:27:48,200
metadata part from from there examples

1688
01:27:43,860 --> 01:27:53,670
just putting their three dots and then

1689
01:27:48,200 --> 01:27:55,800
we don't need these updates and yes this

1690
01:27:53,670 --> 01:28:02,760
is the how the data model looks like

1691
01:27:55,800 --> 01:28:05,280
today I hope it's understandable and so

1692
01:28:02,760 --> 01:28:08,280
we have the publisher level and then we

1693
01:28:05,280 --> 01:28:11,309
have the the data store but the data

1694
01:28:08,280 --> 01:28:13,139
store capabilities really is just one

1695
01:28:11,310 --> 01:28:17,760
single key for the data store and then

1696
01:28:13,140 --> 01:28:20,790
we have the per node capabilities the

1697
01:28:17,760 --> 01:28:22,900
capabilities on the publisher level and

1698
01:28:20,790 --> 01:28:27,760
the data store and/or

1699
01:28:22,900 --> 01:28:32,990
Ferno that level are really the same and

1700
01:28:27,760 --> 01:28:35,330
I think that's the end yes Rob Alton

1701
01:28:32,990 --> 01:28:37,070
Cisco just a couple of comments for your

1702
01:28:35,330 --> 01:28:39,170
knocking node instance identifier

1703
01:28:37,070 --> 01:28:42,200
there's now that definitions sort of

1704
01:28:39,170 --> 01:28:44,840
moved into our six nine nine one bits so

1705
01:28:42,200 --> 01:28:46,580
you could pick it up from there I which

1706
01:28:44,840 --> 01:28:48,140
has the same definition I think is what

1707
01:28:46,580 --> 01:28:50,390
you require but they have dependency on

1708
01:28:48,140 --> 01:28:53,180
that document I don't know how long it's

1709
01:28:50,390 --> 01:28:56,300
going to take that would be a better

1710
01:28:53,180 --> 01:28:57,560
choice if we're willing to wait then the

1711
01:28:56,300 --> 01:28:59,780
other common I mentioned to you offline

1712
01:28:57,560 --> 01:29:02,300
is that you go back to original slide in

1713
01:28:59,780 --> 01:29:04,460
terms of the selection capabilities you

1714
01:29:02,300 --> 01:29:07,220
can select a wildcard for interface

1715
01:29:04,460 --> 01:29:09,770
names but we would have cases won't be

1716
01:29:07,220 --> 01:29:12,110
useful to say I want to do these

1717
01:29:09,770 --> 01:29:14,260
statistics for physical interfaces

1718
01:29:12,110 --> 01:29:18,889
differently from tunnel interfaces or

1719
01:29:14,260 --> 01:29:20,240
sub interfaces and at the moment I could

1720
01:29:18,890 --> 01:29:22,550
have you'd have to list every single

1721
01:29:20,240 --> 01:29:26,570
interface on the device which would be

1722
01:29:22,550 --> 01:29:29,990
huge and dynamically changing or the the

1723
01:29:26,570 --> 01:29:33,740
wild-card is it's too generic so I'm not

1724
01:29:29,990 --> 01:29:35,780
sure what the best solution to that is I

1725
01:29:33,740 --> 01:29:38,540
mean maybe we could augment it in with

1726
01:29:35,780 --> 01:29:40,519
additional filters but I'm not sure

1727
01:29:38,540 --> 01:29:41,660
where that breaks the logic of somebody

1728
01:29:40,520 --> 01:29:43,700
reading they say they don't understand

1729
01:29:41,660 --> 01:29:47,269
those extra filters but maybe we should

1730
01:29:43,700 --> 01:29:49,280
discuss that further alignment yes the

1731
01:29:47,270 --> 01:29:51,950
data tie for note selector could have

1732
01:29:49,280 --> 01:29:55,340
could be taken from six nine nine one

1733
01:29:51,950 --> 01:29:58,670
base it would delay this work I don't

1734
01:29:55,340 --> 01:30:01,550
know how 6i9 progresses I think we will

1735
01:29:58,670 --> 01:30:04,190
not be reworking knock'em either to use

1736
01:30:01,550 --> 01:30:07,160
that so I would like like to avoid that

1737
01:30:04,190 --> 01:30:12,860
but the main reason is a time and

1738
01:30:07,160 --> 01:30:17,210
dependency I hope I understand the

1739
01:30:12,860 --> 01:30:21,230
functionality or the it's the same for

1740
01:30:17,210 --> 01:30:26,300
more specific filtering yes that could

1741
01:30:21,230 --> 01:30:28,190
be done a simple wild card or then we

1742
01:30:26,300 --> 01:30:31,190
have to define what kind of additional

1743
01:30:28,190 --> 01:30:34,040
filter we want and we already have

1744
01:30:31,190 --> 01:30:36,799
subtree and XPath so defining a third

1745
01:30:34,040 --> 01:30:41,389
kind of filter might be

1746
01:30:36,800 --> 01:30:43,639
don't be a good idea also I think there

1747
01:30:41,389 --> 01:30:47,960
people are having problems reading

1748
01:30:43,639 --> 01:30:50,389
expert filter so that's an end and yeah

1749
01:30:47,960 --> 01:30:52,699
expert is very powerful and I'm not true

1750
01:30:50,389 --> 01:30:58,400
many people will understand it so I see

1751
01:30:52,699 --> 01:31:00,638
a risk there also then we get into the

1752
01:30:58,400 --> 01:31:03,710
problem of overlapping expert filters

1753
01:31:00,639 --> 01:31:07,639
and how do then we have priority between

1754
01:31:03,710 --> 01:31:10,760
them and how to handle them so my

1755
01:31:07,639 --> 01:31:13,420
preference would be to maybe he put that

1756
01:31:10,760 --> 01:31:23,300
into abyss or if that's really needed

1757
01:31:13,420 --> 01:31:25,670
okay actually for follow-up as a global

1758
01:31:23,300 --> 01:31:28,579
point actually we have relevant job to

1759
01:31:25,670 --> 01:31:32,750
discuss how to specify the selection

1760
01:31:28,579 --> 01:31:35,299
filter maybe you have to filter some

1761
01:31:32,750 --> 01:31:38,389
some useful data you don't need to could

1762
01:31:35,300 --> 01:31:40,520
you speak up please what could we

1763
01:31:38,389 --> 01:31:42,820
actually have relevant jobs actually

1764
01:31:40,520 --> 01:31:45,559
will be presented by my colleague or

1765
01:31:42,820 --> 01:31:49,670
actually can specify some selection

1766
01:31:45,559 --> 01:31:51,110
filter maybe it's kind of Simkin

1767
01:31:49,670 --> 01:32:01,219
relevant to your work

1768
01:31:51,110 --> 01:32:03,860
actually yeah okay let's discuss it yeah

1769
01:32:01,219 --> 01:32:08,239
there's one minor point that I have to

1770
01:32:03,860 --> 01:32:14,650
discuss with Lada about the yang doctor

1771
01:32:08,239 --> 01:32:14,650
review I think we can take it offline

1772
01:32:30,750 --> 01:32:37,539
all right so I'll quickly go over the

1773
01:32:34,719 --> 01:32:41,230
draft for http-based transport for

1774
01:32:37,539 --> 01:32:44,199
subscribed notifications we are

1775
01:32:41,230 --> 01:32:48,968
currently tracking three issues in the

1776
01:32:44,199 --> 01:32:51,070
github for the draft the first one is

1777
01:32:48,969 --> 01:32:53,590
related to binary encoding I think there

1778
01:32:51,070 --> 01:32:55,659
was some discussion here and an interest

1779
01:32:53,590 --> 01:33:00,909
and desire to see binary encoding

1780
01:32:55,659 --> 01:33:02,888
supported so assuming that the publisher

1781
01:33:00,909 --> 01:33:05,379
does learn of the receiver capabilities

1782
01:33:02,889 --> 01:33:08,980
and we'll talk about that in issue

1783
01:33:05,380 --> 01:33:11,769
number three can the media type itself

1784
01:33:08,980 --> 01:33:15,968
be used for communicating binary data so

1785
01:33:11,769 --> 01:33:19,929
as an example we are currently saying we

1786
01:33:15,969 --> 01:33:23,170
support XML and JSON and the there's an

1787
01:33:19,929 --> 01:33:25,199
option to basically add sibour to that

1788
01:33:23,170 --> 01:33:31,389
media type list

1789
01:33:25,199 --> 01:33:35,799
any comments questions okay I see some

1790
01:33:31,389 --> 01:33:37,960
thumbs up all right the second issue

1791
01:33:35,800 --> 01:33:40,329
that we're tracking is for whether we

1792
01:33:37,960 --> 01:33:45,369
need to rename receivers to HTTP

1793
01:33:40,329 --> 01:33:46,989
receivers and there was a question of

1794
01:33:45,369 --> 01:33:50,739
course that this should ideally have

1795
01:33:46,989 --> 01:33:52,750
been defined in 86 39 but since each

1796
01:33:50,739 --> 01:33:57,308
draft is having to define their

1797
01:33:52,750 --> 01:34:02,559
receivers the question was do we need to

1798
01:33:57,309 --> 01:34:05,260
rename it to be transport specific the

1799
01:34:02,559 --> 01:34:09,190
only question is if it's being declared

1800
01:34:05,260 --> 01:34:11,349
within the namespace of the model do we

1801
01:34:09,190 --> 01:34:13,900
need to really indicate for example with

1802
01:34:11,349 --> 01:34:17,769
an HTTP node of that it is a http

1803
01:34:13,900 --> 01:34:21,848
receiver I would think it would be

1804
01:34:17,769 --> 01:34:23,920
obvious on the module name and for if

1805
01:34:21,849 --> 01:34:26,530
there's any concern about any conflict

1806
01:34:23,920 --> 01:34:29,829
of course then the each receiver is

1807
01:34:26,530 --> 01:34:33,489
being declared in their own namespace at

1808
01:34:29,829 --> 01:34:36,960
least the current part is no but unless

1809
01:34:33,489 --> 01:34:36,959
there are any objections or comments

1810
01:34:40,520 --> 01:34:48,720
okay moving on to the last issue for the

1811
01:34:46,770 --> 01:34:51,440
discovery of receiver capabilities and

1812
01:34:48,720 --> 01:34:54,990
this is something Hank just talked about

1813
01:34:51,440 --> 01:34:57,629
so from a transferred Pacific we the

1814
01:34:54,990 --> 01:35:00,179
options I either eat sorry either to use

1815
01:34:57,630 --> 01:35:04,980
options or get we of course would prefer

1816
01:35:00,180 --> 01:35:08,550
options to return the capabilities of

1817
01:35:04,980 --> 01:35:10,620
the receiver the only point I think that

1818
01:35:08,550 --> 01:35:13,950
is left to discuss is what the format

1819
01:35:10,620 --> 01:35:15,750
for advertising advertisement of those

1820
01:35:13,950 --> 01:35:18,300
capabilities is going to look like and

1821
01:35:15,750 --> 01:35:22,890
that's something that as I suggest the

1822
01:35:18,300 --> 01:35:24,330
other draft could look into so among the

1823
01:35:22,890 --> 01:35:26,520
list of capabilities that we're

1824
01:35:24,330 --> 01:35:28,850
currently tracking is of course the

1825
01:35:26,520 --> 01:35:31,610
media type that I just talked about

1826
01:35:28,850 --> 01:35:34,470
which of course includes sea bore and

1827
01:35:31,610 --> 01:35:36,389
then this second capability that we are

1828
01:35:34,470 --> 01:35:39,060
looking at is bundled messages as

1829
01:35:36,390 --> 01:35:40,370
defined by the notification messages

1830
01:35:39,060 --> 01:35:47,400
trapped

1831
01:35:40,370 --> 01:35:52,440
alright any comments or questions all

1832
01:35:47,400 --> 01:35:56,370
right you're good sorry bonjah Ericsson

1833
01:35:52,440 --> 01:35:58,919
I would be interested that they if you

1834
01:35:56,370 --> 01:36:00,510
get these capabilities obviously or I

1835
01:35:58,920 --> 01:36:03,240
assume you don't want to get the

1836
01:36:00,510 --> 01:36:06,840
capabilities for every single HTTP

1837
01:36:03,240 --> 01:36:08,849
notification then probably you need to

1838
01:36:06,840 --> 01:36:10,710
say something about how long do you

1839
01:36:08,850 --> 01:36:16,560
think that they are still valid or

1840
01:36:10,710 --> 01:36:18,450
caching them or okay so if I understand

1841
01:36:16,560 --> 01:36:21,450
so first to answer your question now

1842
01:36:18,450 --> 01:36:23,130
this is per receiver so this is I'm

1843
01:36:21,450 --> 01:36:25,980
trying to understand what the receiver

1844
01:36:23,130 --> 01:36:28,230
capabilities are so and the second part

1845
01:36:25,980 --> 01:36:30,570
your are you contemplating that the

1846
01:36:28,230 --> 01:36:34,650
capabilities might change in transit or

1847
01:36:30,570 --> 01:36:36,960
in but no no I have a Monday I have a

1848
01:36:34,650 --> 01:36:39,480
message to a notification to send I

1849
01:36:36,960 --> 01:36:41,840
discover the capabilities will I still

1850
01:36:39,480 --> 01:36:47,719
assume the same capabilities on Tuesday

1851
01:36:41,840 --> 01:36:47,720
yes indefinitely

1852
01:36:49,350 --> 01:36:58,830
yes as as indictment on that the second

1853
01:36:54,120 --> 01:37:04,260
is about security I got strong comments

1854
01:36:58,830 --> 01:37:07,830
from some implementers that if you move

1855
01:37:04,260 --> 01:37:11,310
the receiver definition outside of the

1856
01:37:07,830 --> 01:37:16,110
subscription part so the indirection to

1857
01:37:11,310 --> 01:37:19,830
its own own data model then configuring

1858
01:37:16,110 --> 01:37:21,660
knock'em will be quite tricky because if

1859
01:37:19,830 --> 01:37:23,670
someone if you have a subscription but

1860
01:37:21,660 --> 01:37:26,309
someone else is allowed to modify the

1861
01:37:23,670 --> 01:37:29,850
receiver under your subscription because

1862
01:37:26,310 --> 01:37:32,370
it's a separate data tree that can be a

1863
01:37:29,850 --> 01:37:37,490
risk so at least you need to mention

1864
01:37:32,370 --> 01:37:43,220
this in security consideration okay and

1865
01:37:37,490 --> 01:37:46,260
third that I'm also working on 3gpp and

1866
01:37:43,220 --> 01:38:02,880
3gpp it seems is in a very very strong

1867
01:37:46,260 --> 01:38:06,470
need of this and the urgent need okay hi

1868
01:38:02,880 --> 01:38:10,070
there can you hear me yes all right

1869
01:38:06,470 --> 01:38:13,640
question on the capabilities for for

1870
01:38:10,070 --> 01:38:18,269
ballads and this is our voice by the way

1871
01:38:13,640 --> 01:38:21,330
the question was is this going to be the

1872
01:38:18,270 --> 01:38:24,090
same capabilities as available next week

1873
01:38:21,330 --> 01:38:26,070
last week or whatever and the the goal

1874
01:38:24,090 --> 01:38:28,560
really would be to have the same kind of

1875
01:38:26,070 --> 01:38:30,570
capability exposure as we have for the

1876
01:38:28,560 --> 01:38:33,030
kind of capabilities exchanged when net

1877
01:38:30,570 --> 01:38:34,769
cough or rest cough law again and you

1878
01:38:33,030 --> 01:38:37,380
find the capabilities out for the server

1879
01:38:34,770 --> 01:38:40,650
so that the idea behind that at least

1880
01:38:37,380 --> 01:38:42,210
that I had for this was that we don't

1881
01:38:40,650 --> 01:38:44,129
want to have the same life cycle of

1882
01:38:42,210 --> 01:38:53,219
capabilities that's done with other

1883
01:38:44,130 --> 01:38:56,130
types of transport establishments by

1884
01:38:53,219 --> 01:38:58,650
uh in net cough the capabilities are

1885
01:38:56,130 --> 01:39:01,820
connected to the session lifetime so

1886
01:38:58,650 --> 01:39:05,909
that's easy but what do we connect the

1887
01:39:01,820 --> 01:39:07,949
capabilities lifetime here I would have

1888
01:39:05,909 --> 01:39:11,400
expected that we'd get the same kind of

1889
01:39:07,949 --> 01:39:13,978
a session establishment to going on that

1890
01:39:11,400 --> 01:39:15,629
was the assumption that we do this was

1891
01:39:13,979 --> 01:39:29,239
part the capabilities exchange for the

1892
01:39:15,630 --> 01:39:29,239
session okay exact uestions

1893
01:39:43,469 --> 01:39:55,550
Oh God hey guys this a Michael from

1894
01:39:53,160 --> 01:39:59,370
Hawaii and today I want to introduce

1895
01:39:55,550 --> 01:40:04,050
body about is a bank subscription or for

1896
01:39:59,370 --> 01:40:06,960
even younger with the notification in

1897
01:40:04,050 --> 01:40:10,710
some Y way proposals as drafted it's

1898
01:40:06,960 --> 01:40:16,230
because in some use case so user may

1899
01:40:10,710 --> 01:40:19,560
want to send multiple even string or a

1900
01:40:16,230 --> 01:40:22,580
single message since mellitus even

1901
01:40:19,560 --> 01:40:26,850
stream may have common characteristics

1902
01:40:22,580 --> 01:40:30,949
for example says evinced ruin me some

1903
01:40:26,850 --> 01:40:36,570
data object with witchcraft from

1904
01:40:30,949 --> 01:40:40,949
different source or for same time

1905
01:40:36,570 --> 01:40:44,429
periodic and there are two related draft

1906
01:40:40,949 --> 01:40:48,179
one is a subscribe notification it I

1907
01:40:44,430 --> 01:40:52,560
already be published and that is cannot

1908
01:40:48,180 --> 01:40:57,030
allow the user to subscribe user to

1909
01:40:52,560 --> 01:41:02,660
subscribe multiple streams in a single

1910
01:40:57,030 --> 01:41:06,300
message another is a notification bundle

1911
01:41:02,660 --> 01:41:09,420
but is northern providers ability to

1912
01:41:06,300 --> 01:41:12,000
specify to explicit specifies a

1913
01:41:09,420 --> 01:41:14,310
relationship of different and

1914
01:41:12,000 --> 01:41:20,250
notification are you different streams

1915
01:41:14,310 --> 01:41:24,600
and here a some use case there are two

1916
01:41:20,250 --> 01:41:28,830
years case a one full bunk subscription

1917
01:41:24,600 --> 01:41:32,070
the other full bank this one full bunk

1918
01:41:28,830 --> 01:41:36,390
establishes a subscription the nazzer is

1919
01:41:32,070 --> 01:41:39,440
for bank the latest subscription if it

1920
01:41:36,390 --> 01:41:44,250
don't have a bomb subscription

1921
01:41:39,440 --> 01:41:46,469
capability it's a user new e to send

1922
01:41:44,250 --> 01:41:50,630
here and ok we can see it's a user need

1923
01:41:46,469 --> 01:41:53,670
to send three message to establish a

1924
01:41:50,630 --> 01:41:56,489
subscription to subscribe the module for

1925
01:41:53,670 --> 01:41:57,179
more the bar and the model parts same

1926
01:41:56,489 --> 01:42:01,049
time if we

1927
01:41:57,179 --> 01:42:04,729
to dilate ate it all so new to us in the

1928
01:42:01,050 --> 01:42:04,729
story message to delay today's

1929
01:42:05,090 --> 01:42:13,619
subscription but if we had can have a

1930
01:42:08,989 --> 01:42:20,249
capitated allow the user to send only

1931
01:42:13,619 --> 01:42:23,130
one message to subscribe 3 even and we

1932
01:42:20,249 --> 01:42:26,570
also can allow the user to use only one

1933
01:42:23,130 --> 01:42:30,959
message to delay this mess strings a

1934
01:42:26,570 --> 01:42:33,929
similar idea is okay this device can

1935
01:42:30,959 --> 01:42:41,479
allow to send assists only one message

1936
01:42:33,929 --> 01:42:48,119
to and true to the user a child okay cs3

1937
01:42:41,479 --> 01:42:51,630
even stream have appeared what we did

1938
01:42:48,119 --> 01:43:01,728
destined in this draft way to front a

1939
01:42:51,630 --> 01:43:01,729
group Rd to provided a provider flag to

1940
01:43:02,209 --> 01:43:10,260
to provide a flag to shows a explicit

1941
01:43:08,090 --> 01:43:13,349
relationship between these different

1942
01:43:10,260 --> 01:43:16,199
streams and are also different a unit

1943
01:43:13,349 --> 01:43:19,530
module which can help the user to punc

1944
01:43:16,199 --> 01:43:23,549
subscribes it's a concern Matt well I

1945
01:43:19,530 --> 01:43:27,268
can send only one message for multiple

1946
01:43:23,550 --> 01:43:30,719
streams and also you allow the publisher

1947
01:43:27,269 --> 01:43:36,179
to report multiple streams or raising

1948
01:43:30,719 --> 01:43:39,510
separate ways a group ID here is a

1949
01:43:36,179 --> 01:43:43,949
module over wheel and the way define the

1950
01:43:39,510 --> 01:43:48,329
group's list with group we have a list

1951
01:43:43,949 --> 01:43:52,650
of streams and we augmented subscription

1952
01:43:48,329 --> 01:43:55,639
and a notification module via sacra

1953
01:43:52,650 --> 01:43:59,789
party and also all commend his a bank

1954
01:43:55,639 --> 01:44:02,939
notification must not function of

1955
01:43:59,789 --> 01:44:08,369
message header with some parameters such

1956
01:44:02,939 --> 01:44:10,740
as message tab on the group ID okay it's

1957
01:44:08,369 --> 01:44:15,269
okay valley away show in our world

1958
01:44:10,740 --> 01:44:18,150
with it provides a group Rd it can help

1959
01:44:15,270 --> 01:44:21,690
to explicitly specify the relationship

1960
01:44:18,150 --> 01:44:24,809
between different un destroying and it

1961
01:44:21,690 --> 01:44:27,960
can help to reduce the round shape of

1962
01:44:24,810 --> 01:44:30,230
the request and the response that can

1963
01:44:27,960 --> 01:44:32,400
help to save the boundaries on the

1964
01:44:30,230 --> 01:44:34,860
interface between the client and the

1965
01:44:32,400 --> 01:44:38,280
server and maybe can help to provide

1966
01:44:34,860 --> 01:44:40,380
that multiple selves or aggregation why

1967
01:44:38,280 --> 01:44:43,349
we presented this document here is

1968
01:44:40,380 --> 01:44:45,480
because one to get some consensus and

1969
01:44:43,350 --> 01:44:48,060
the one to know whether this is a

1970
01:44:45,480 --> 01:44:51,240
program problems that need to be solved

1971
01:44:48,060 --> 01:44:53,970
and want to know how many people are

1972
01:44:51,240 --> 01:45:01,440
interested in unity is task that we have

1973
01:44:53,970 --> 01:45:03,560
a warm mother angle Eriksson just as an

1974
01:45:01,440 --> 01:45:07,219
interest though what number of

1975
01:45:03,560 --> 01:45:10,500
subscriptions did are you assuming sir

1976
01:45:07,220 --> 01:45:13,440
speaking of five ten hundred thousand

1977
01:45:10,500 --> 01:45:17,790
notifications that you would bundle yes

1978
01:45:13,440 --> 01:45:21,240
maybe multiple streams focus on hope if

1979
01:45:17,790 --> 01:45:25,290
we want to collect the devices some

1980
01:45:21,240 --> 01:45:30,300
stated data and this data are cryto is

1981
01:45:25,290 --> 01:45:32,640
collected for the same times and the way

1982
01:45:30,300 --> 01:45:36,690
can bound owes is and defined as a state

1983
01:45:32,640 --> 01:45:39,960
her newest group so we can only use one

1984
01:45:36,690 --> 01:45:42,599
group ID in the subscription a separate

1985
01:45:39,960 --> 01:45:45,450
subscription so we can okay it's a

1986
01:45:42,600 --> 01:45:49,710
bundle subscribes and we also can

1987
01:45:45,450 --> 01:45:52,530
receive this state data in only must one

1988
01:45:49,710 --> 01:45:54,720
message so we can't voice in case and

1989
01:45:52,530 --> 01:45:57,349
help to reduce the you know the

1990
01:45:54,720 --> 01:46:00,000
interaction between the continent server

1991
01:45:57,350 --> 01:46:02,610
it may be her cousin Jana fate I

1992
01:46:00,000 --> 01:46:04,680
understand that just asking what is your

1993
01:46:02,610 --> 01:46:09,019
assumption what size of groups would

1994
01:46:04,680 --> 01:46:16,290
would we be using in the real world

1995
01:46:09,020 --> 01:46:18,900
10,000 it depends on the use cases we

1996
01:46:16,290 --> 01:46:21,260
don't worry we really want you support

1997
01:46:18,900 --> 01:46:24,650
is Kumari sauce occupation you may

1998
01:46:21,260 --> 01:46:27,060
gather some metric from each

1999
01:46:24,650 --> 01:46:29,519
member name capture you can aggregate it

2000
01:46:27,060 --> 01:46:31,860
into the pumpkin England could you cut

2001
01:46:29,520 --> 01:46:34,740
because they very different so the

2002
01:46:31,860 --> 01:46:36,900
number could be very few actually let's

2003
01:46:34,740 --> 01:46:39,450
tell other in some other case that you

2004
01:46:36,900 --> 01:46:45,150
can more than there or more than twenty

2005
01:46:39,450 --> 01:46:46,769
yeah Rob Wilson Cisco just a quick

2006
01:46:45,150 --> 01:46:51,000
question is you go back I think

2007
01:46:46,770 --> 01:46:53,310
prettiest slide maybe no one more in

2008
01:46:51,000 --> 01:46:57,030
this case can you also use a sub-tree

2009
01:46:53,310 --> 01:46:58,200
filter to achieve the same effect so

2010
01:46:57,030 --> 01:46:59,849
rather than actually having to have

2011
01:46:58,200 --> 01:47:02,460
separate subscriptions for the different

2012
01:46:59,850 --> 01:47:04,380
paths food bar and Baz could you use a

2013
01:47:02,460 --> 01:47:08,160
sub-tree filter that would achieve the

2014
01:47:04,380 --> 01:47:09,630
same things you still end up with one

2015
01:47:08,160 --> 01:47:11,880
subscription and using the sub-tree

2016
01:47:09,630 --> 01:47:15,900
filter to achieve the same thing so the

2017
01:47:11,880 --> 01:47:17,520
question so maybe that I think if I'm

2018
01:47:15,900 --> 01:47:20,129
not saying we shouldn't do this but I

2019
01:47:17,520 --> 01:47:21,630
think we should consider like you can do

2020
01:47:20,130 --> 01:47:23,880
this probably the subtree or an X bar

2021
01:47:21,630 --> 01:47:32,160
filter anyway do we want another way of

2022
01:47:23,880 --> 01:47:34,650
expressing the same thing actually I

2023
01:47:32,160 --> 01:47:36,240
think in some cases before they

2024
01:47:34,650 --> 01:47:38,639
obviously you manage it and maybe not a

2025
01:47:36,240 --> 01:47:41,969
correlated in Chasseur so may you may

2026
01:47:38,640 --> 01:47:43,620
make assumption you need to tag a such

2027
01:47:41,970 --> 01:47:47,040
kind of obstacle you need to correlate

2028
01:47:43,620 --> 01:47:49,320
with each other so use these sabbatarian

2029
01:47:47,040 --> 01:47:51,390
filter may it doesn't work actually so

2030
01:47:49,320 --> 01:47:54,150
that's why we introduced a new google ID

2031
01:47:51,390 --> 01:47:56,550
ID to help you to correlate different

2032
01:47:54,150 --> 01:48:00,809
object and maybe not irrelevant to each

2033
01:47:56,550 --> 01:48:03,360
other apparently but the button in some

2034
01:48:00,810 --> 01:48:05,550
use cases in some context is a you do

2035
01:48:03,360 --> 01:48:08,670
need to collect a group of data that

2036
01:48:05,550 --> 01:48:11,670
have common characteristics so you can

2037
01:48:08,670 --> 01:48:15,090
use kind of group ID so yeah that's what

2038
01:48:11,670 --> 01:48:16,920
i okay then if that's the case can you

2039
01:48:15,090 --> 01:48:19,290
give examples in the draft of where

2040
01:48:16,920 --> 01:48:27,890
existing solutions don't work be helpful

2041
01:48:19,290 --> 01:48:31,580
our subtree can you come back one slide

2042
01:48:27,890 --> 01:48:35,700
this one so if I understand correctly

2043
01:48:31,580 --> 01:48:38,199
this is going to be useful in the after

2044
01:48:35,700 --> 01:48:40,719
over there were you going to delete

2045
01:48:38,199 --> 01:48:45,489
it's all the members of the group in one

2046
01:48:40,719 --> 01:48:48,670
go this is the main advantage right yeah

2047
01:48:45,489 --> 01:48:50,499
then I'm monitoring it was a big enough

2048
01:48:48,670 --> 01:48:54,010
problem to solve

2049
01:48:50,499 --> 01:48:56,289
right because yes you have multiple

2050
01:48:54,010 --> 01:49:00,039
groups of young object that you're

2051
01:48:56,289 --> 01:49:01,690
streaming and then okay maybe you have

2052
01:49:00,039 --> 01:49:03,999
to delete them one by one but actually

2053
01:49:01,690 --> 01:49:06,789
it's because you don't care any longer

2054
01:49:03,999 --> 01:49:10,030
so even if you keep receiving some more

2055
01:49:06,789 --> 01:49:14,440
while you deleting all the different or

2056
01:49:10,030 --> 01:49:16,749
is the right term stream then maybe

2057
01:49:14,440 --> 01:49:20,138
doesn't matter so I'm not sure the gain

2058
01:49:16,749 --> 01:49:21,969
is huge to tag this as a group and to

2059
01:49:20,139 --> 01:49:25,360
say I want to eat everything from Group

2060
01:49:21,969 --> 01:49:29,260
one there's a question a sickness is not

2061
01:49:25,360 --> 01:49:32,289
a need to do everything in one group it

2062
01:49:29,260 --> 01:49:35,079
because you want to subscribe the same

2063
01:49:32,289 --> 01:49:37,119
Kratt eristic it's based on your want to

2064
01:49:35,079 --> 01:49:39,849
do it's so long you're what what you

2065
01:49:37,119 --> 01:49:43,268
want to salt or a use case based on your

2066
01:49:39,849 --> 01:49:48,010
use case it if you need to subscribe to

2067
01:49:43,269 --> 01:49:51,459
send a sim cross-state sync rustic data

2068
01:49:48,010 --> 01:49:54,489
you can bundle it in streams all this

2069
01:49:51,459 --> 01:49:59,619
data together raising one group is nani

2070
01:49:54,489 --> 01:50:03,549
to one step to subscriber one data and

2071
01:49:59,619 --> 01:50:07,259
that next to do the other date has so

2072
01:50:03,550 --> 01:50:09,820
it's a different help to reduce the

2073
01:50:07,260 --> 01:50:12,459
interaction between the primary server

2074
01:50:09,820 --> 01:50:15,190
so today's is some use case so always

2075
01:50:12,459 --> 01:50:22,090
news is okay one final question from

2076
01:50:15,190 --> 01:50:25,539
Eric questions were already hit that I

2077
01:50:22,090 --> 01:50:28,479
had one other thing that is not explicit

2078
01:50:25,539 --> 01:50:30,340
in there is you have one filter as Rob

2079
01:50:28,479 --> 01:50:32,949
was mentioning and you could probably

2080
01:50:30,340 --> 01:50:35,380
get away with this with one filter but

2081
01:50:32,949 --> 01:50:36,759
have you thought about having or what

2082
01:50:35,380 --> 01:50:40,539
the implications of having different

2083
01:50:36,760 --> 01:50:43,570
filters might be for that for each

2084
01:50:40,539 --> 01:50:45,130
individual screen I think that that's an

2085
01:50:43,570 --> 01:50:47,110
interesting question because knowing how

2086
01:50:45,130 --> 01:50:48,579
many how many filters might be

2087
01:50:47,110 --> 01:50:50,860
interesting and whether the group is

2088
01:50:48,579 --> 01:50:53,670
actually applicable would be would be

2089
01:50:50,860 --> 01:50:53,670
something to work through

2090
01:50:58,500 --> 01:51:12,160
okay there is a comment and out so yeah

2091
01:51:03,820 --> 01:51:15,250
before we ask okay so coming from Martin

2092
01:51:12,160 --> 01:51:17,470
the assumption is that it is useful to

2093
01:51:15,250 --> 01:51:18,130
subscribe with the same filter on many

2094
01:51:17,470 --> 01:51:31,390
streams

2095
01:51:18,130 --> 01:51:38,739
I wonder how common that is this okay

2096
01:51:31,390 --> 01:51:42,430
it's it may be as with as I introduced

2097
01:51:38,739 --> 01:51:46,989
before a hose says in in some telecom

2098
01:51:42,430 --> 01:51:51,090
telemetry scenarios may want to Clark to

2099
01:51:46,989 --> 01:51:55,150
multiple lot of data from the device and

2100
01:51:51,090 --> 01:51:58,239
if we have some idea to classify

2101
01:51:55,150 --> 01:52:01,239
different cross into different group it

2102
01:51:58,239 --> 01:52:08,110
maybe can help to do some specific

2103
01:52:01,239 --> 01:52:10,480
application okay in it so you we are all

2104
01:52:08,110 --> 01:52:12,219
the time on this but I think you should

2105
01:52:10,480 --> 01:52:13,929
take into consideration the comments

2106
01:52:12,220 --> 01:52:17,290
that you have received to lower they all

2107
01:52:13,930 --> 01:52:19,660
seem to be around the use case that you

2108
01:52:17,290 --> 01:52:27,190
have up there which doesn't seem to

2109
01:52:19,660 --> 01:52:29,080
justify the need to bulk manage a set of

2110
01:52:27,190 --> 01:52:32,259
subscription so maybe you need to work

2111
01:52:29,080 --> 01:52:34,720
on the use case a little bit and come

2112
01:52:32,260 --> 01:52:40,930
back with a better way to a why this is

2113
01:52:34,720 --> 01:52:43,870
neither in this narrows I I think

2114
01:52:40,930 --> 01:52:47,410
specifically the comment from Martin and

2115
01:52:43,870 --> 01:52:50,530
Eric on what the user filters and how

2116
01:52:47,410 --> 01:52:55,019
you would might want to group them okay

2117
01:52:50,530 --> 01:52:55,019
thank you alright thanks

2118
01:53:22,860 --> 01:53:29,200
hello everyone my name's runtime from

2119
01:53:26,080 --> 01:53:31,809
Huawei my topic is notification

2120
01:53:29,200 --> 01:53:36,550
capabilities moto extension for data no

2121
01:53:31,810 --> 01:53:38,500
technology support actually the

2122
01:53:36,550 --> 01:53:40,450
notification capability has already been

2123
01:53:38,500 --> 01:53:42,400
defined in on in that coffin allocation

2124
01:53:40,450 --> 01:53:44,470
compatibilities and another critic

2125
01:53:42,400 --> 01:53:47,519
notification capabilities model allows

2126
01:53:44,470 --> 01:53:51,130
the client to discover young

2127
01:53:47,520 --> 01:53:53,910
possibilities such as maximum number of

2128
01:53:51,130 --> 01:53:55,930
objects can be sending updates or

2129
01:53:53,910 --> 01:54:00,010
supported appearance of chaotic

2130
01:53:55,930 --> 01:54:01,690
subscription without using notification

2131
01:54:00,010 --> 01:54:04,300
communities it's leads to an unexpected

2132
01:54:01,690 --> 01:54:07,719
failure or additional message exchange

2133
01:54:04,300 --> 01:54:09,730
for Netcom clients and in a state of our

2134
01:54:07,720 --> 01:54:13,510
subscriptions of a particular subscriber

2135
01:54:09,730 --> 01:54:16,089
to be fetched is huge field inquiries of

2136
01:54:13,510 --> 01:54:19,090
approach of operational State on a

2137
01:54:16,090 --> 01:54:20,530
server can greatly reduce the amount of

2138
01:54:19,090 --> 01:54:23,500
the data to be stream out to the

2139
01:54:20,530 --> 01:54:25,690
destination and this is the most

2140
01:54:23,500 --> 01:54:29,980
important effect of the notification

2141
01:54:25,690 --> 01:54:33,040
capabilities actually actually in the

2142
01:54:29,980 --> 01:54:35,860
existing yum post telemetry mechanism in

2143
01:54:33,040 --> 01:54:37,930
the existing the jump in the existing

2144
01:54:35,860 --> 01:54:40,830
mechanism the young post telemetry can

2145
01:54:37,930 --> 01:54:43,690
provide a mechanism you subscribe to

2146
01:54:40,830 --> 01:54:47,530
second sub to subscribe and you select

2147
01:54:43,690 --> 01:54:50,349
some operational days stated data based

2148
01:54:47,530 --> 01:54:53,469
on the selection filter past there is no

2149
01:54:50,350 --> 01:54:56,800
document you discuss how the selection

2150
01:54:53,470 --> 01:54:59,350
filter should be actually in the

2151
01:54:56,800 --> 01:55:02,320
existing mechanism to reconfigure the

2152
01:54:59,350 --> 01:55:05,140
selection filter by humoring training is

2153
01:55:02,320 --> 01:55:07,599
this is necessary all you need to rely

2154
01:55:05,140 --> 01:55:10,740
on the all you need to rely on the

2155
01:55:07,600 --> 01:55:14,050
service logic defined by the application

2156
01:55:10,740 --> 01:55:16,599
in some situation for example in the in

2157
01:55:14,050 --> 01:55:19,090
some situation may be the clients want

2158
01:55:16,600 --> 01:55:24,790
to change the selection filter for the

2159
01:55:19,090 --> 01:55:27,280
case the case the service main EQ may

2160
01:55:24,790 --> 01:55:30,400
will be terminated and may need to be

2161
01:55:27,280 --> 01:55:33,019
updated and a few and the human

2162
01:55:30,400 --> 01:55:37,170
intervention may need to be involved

2163
01:55:33,020 --> 01:55:39,329
generally say for the exist in the

2164
01:55:37,170 --> 01:55:41,460
existing mechanism his heart Fournier

2165
01:55:39,329 --> 01:55:44,489
Kafka lines to automatically select

2166
01:55:41,460 --> 01:55:46,469
which data objects of interests for

2167
01:55:44,489 --> 01:55:48,598
example to identify a set of objects

2168
01:55:46,469 --> 01:55:54,360
which have a common which have common

2169
01:55:48,599 --> 01:55:56,579
characteristics to address this issue

2170
01:55:54,360 --> 01:55:59,250
in this document will provide a tenant

2171
01:55:56,579 --> 01:56:02,909
dynamic way to specify the selection

2172
01:55:59,250 --> 01:56:05,760
filter most specifically we tagged

2173
01:56:02,909 --> 01:56:08,929
characteristics data object and an

2174
01:56:05,760 --> 01:56:11,760
instructor client all other subscribers

2175
01:56:08,929 --> 01:56:16,079
or subscribers choose a selected

2176
01:56:11,760 --> 01:56:20,340
operation select the operation we record

2177
01:56:16,079 --> 01:56:23,429
the self explanation in this drafts with

2178
01:56:20,340 --> 01:56:25,860
the self explenation information we can

2179
01:56:23,429 --> 01:56:28,079
fit we can further filter the queries of

2180
01:56:25,860 --> 01:56:29,848
a personal state or more thorough and we

2181
01:56:28,079 --> 01:56:31,739
can correlate the data objects across

2182
01:56:29,849 --> 01:56:34,139
the modules which have the common

2183
01:56:31,739 --> 01:56:36,709
characteristics and we can reduce the

2184
01:56:34,139 --> 01:56:39,840
large amount of data to the destination

2185
01:56:36,710 --> 01:56:41,639
we argument out we argument is the

2186
01:56:39,840 --> 01:56:44,310
notification comparability is a module

2187
01:56:41,639 --> 01:56:47,429
to the notification no technical

2188
01:56:44,310 --> 01:56:49,739
abilities attributes and with this

2189
01:56:47,429 --> 01:56:52,320
experience we can specifies which type

2190
01:56:49,739 --> 01:56:58,769
of the object is can it can be pushed to

2191
01:56:52,320 --> 01:57:01,369
choose the targeted recipient here is

2192
01:56:58,770 --> 01:57:01,369
our example

2193
01:57:11,260 --> 01:57:15,520
for example for example if I'm

2194
01:57:13,540 --> 01:57:20,200
interested in note a and you know saying

2195
01:57:15,520 --> 01:57:22,750
motive for an OD what should I do

2196
01:57:20,200 --> 01:57:32,349
the first step is we need to tack the

2197
01:57:22,750 --> 01:57:34,270
note in the first step is we need to

2198
01:57:32,350 --> 01:57:36,100
take the note in each device Model T

2199
01:57:34,270 --> 01:57:40,690
indicates the data that has the common

2200
01:57:36,100 --> 01:57:43,390
characteristics for example here the the

2201
01:57:40,690 --> 01:57:47,139
module for it can be like ietf the can

2202
01:57:43,390 --> 01:57:52,030
be IETF interface module and no days can

2203
01:57:47,140 --> 01:57:54,700
be like in discards package or the note

2204
01:57:52,030 --> 01:57:57,340
B can be like the aero package we tag

2205
01:57:54,700 --> 01:58:00,400
the note a in the WP performance metric

2206
01:57:57,340 --> 01:58:02,739
and for the second step we automatically

2207
01:58:00,400 --> 01:58:06,820
advise the tag from the like roster to

2208
01:58:02,739 --> 01:58:09,070
the NMS to the NMS and in the third step

2209
01:58:06,820 --> 01:58:12,250
we subscribe our interest the data based

2210
01:58:09,070 --> 01:58:15,639
on the based on the self explanation tag

2211
01:58:12,250 --> 01:58:25,720
and we care and we and from the XPath of

2212
01:58:15,640 --> 01:58:27,970
the data note and for next step we would

2213
01:58:25,720 --> 01:58:30,340
like to hear the car hear the comments

2214
01:58:27,970 --> 01:58:35,950
in this room and your comments and

2215
01:58:30,340 --> 01:58:39,940
kitchens are welcome well I enjoy

2216
01:58:35,950 --> 01:58:44,530
Erickson I see this effort and I heard

2217
01:58:39,940 --> 01:58:48,099
about at least one more where we want to

2218
01:58:44,530 --> 01:58:51,090
define different types of note

2219
01:58:48,100 --> 01:58:54,610
capabilities or data those capabilities

2220
01:58:51,090 --> 01:58:55,630
of the server which i think is generally

2221
01:58:54,610 --> 01:58:58,389
a good idea

2222
01:58:55,630 --> 01:59:01,239
but it somehow conflicts with I was

2223
01:58:58,390 --> 01:59:04,300
instructed by this group to keep my

2224
01:59:01,239 --> 01:59:06,790
draft to notification capabilities now

2225
01:59:04,300 --> 01:59:09,610
we are stretching the word notification

2226
01:59:06,790 --> 01:59:12,519
or in this I don't know the solution I

2227
01:59:09,610 --> 01:59:17,190
think the general idea of providing such

2228
01:59:12,520 --> 01:59:17,190
information is good but how to handle it

2229
01:59:19,020 --> 01:59:24,150
but not less so I

2230
01:59:21,360 --> 01:59:27,059
could see some use cases for this while

2231
01:59:24,150 --> 01:59:29,759
I wasn't a big fan of the tags for yang

2232
01:59:27,060 --> 01:59:33,869
modules I see some value for attacks for

2233
01:59:29,760 --> 01:59:35,880
data nodes and I believe that if we want

2234
01:59:33,869 --> 01:59:39,330
to do it right we have to exactly

2235
01:59:35,880 --> 01:59:40,590
augment balázs draft for a notification

2236
01:59:39,330 --> 01:59:43,409
because that's the right way to do it

2237
01:59:40,590 --> 01:59:46,710
but then we have to observe it goes way

2238
01:59:43,409 --> 01:59:48,869
beyond beyond telemetric abilities right

2239
01:59:46,710 --> 01:59:51,770
but I think that this is a right way to

2240
01:59:48,869 --> 01:59:51,769
do it yes

2241
01:59:59,760 --> 02:00:10,800
all right and then other comes did you

2242
02:00:06,300 --> 02:00:12,690
have anything no oh no all right just

2243
02:00:10,800 --> 02:00:16,140
just about time I guess

2244
02:00:12,690 --> 02:00:18,320
oh no exactly on the dot perfect thank

2245
02:00:16,140 --> 02:00:18,320
you

2246
02:00:27,420 --> 02:00:31,050
that's the agenda

2247
02:00:33,530 --> 02:00:36,710
[Music]

2248
02:02:31,460 --> 02:02:35,800
I'm a local that's like I thank you

2249
02:02:33,560 --> 02:02:35,800
notes

