1
00:00:57,960 --> 00:01:01,030
[Applause]

2
00:01:19,730 --> 00:01:22,900
[Music]

3
00:01:34,850 --> 00:01:52,008
just grab the mic can you so they're

4
00:01:45,529 --> 00:01:54,560
ready to rumble but it is time to start

5
00:01:52,009 --> 00:01:57,170
straight up you two gentlemen the front

6
00:01:54,560 --> 00:02:06,889
you two want to get a room you two

7
00:01:57,170 --> 00:02:08,400
you want a room I don't understand when

8
00:02:06,889 --> 00:02:12,420
you shut up we're trying to talk

9
00:02:08,400 --> 00:02:12,420
[Laughter]

10
00:02:14,180 --> 00:02:26,090
awesome those are chicken teriyaki oh

11
00:02:16,640 --> 00:02:27,559
yeah he saw me like desperately trying

12
00:02:26,090 --> 00:02:28,790
to get a cookies I don't know sit back

13
00:02:27,560 --> 00:02:34,250
down I'll get it

14
00:02:28,790 --> 00:02:36,319
are you guys are in M Bundy if you're

15
00:02:34,250 --> 00:02:39,549
not in the right place sit down join us

16
00:02:36,319 --> 00:02:39,548
anyway you may enjoy yourself

17
00:02:39,639 --> 00:02:44,269
this is a note well note it well

18
00:02:42,200 --> 00:02:50,510
everyone nod you've seen it

19
00:02:44,269 --> 00:02:57,829
give me one nod there we go agenda wait

20
00:02:50,510 --> 00:02:59,599
a minute okay he flipped us around

21
00:02:57,829 --> 00:03:04,250
that's okay I had the slides in reverse

22
00:02:59,599 --> 00:03:06,290
order so I guess we do start with Friday

23
00:03:04,250 --> 00:03:08,329
mirskiy I don't know who sent the deck I

24
00:03:06,290 --> 00:03:12,679
had it all backwards but I want to start

25
00:03:08,329 --> 00:03:21,409
with a just a question about the embrace

26
00:03:12,680 --> 00:03:26,449
- you said yeah switch on top might

27
00:03:21,409 --> 00:03:27,948
still be off the switch there we go so

28
00:03:26,449 --> 00:03:30,319
there was some discussion on the list

29
00:03:27,949 --> 00:03:32,090
earlier about the whole EM tres - and

30
00:03:30,319 --> 00:03:35,780
the port assignment conflicting with

31
00:03:32,090 --> 00:03:38,120
traceroute so far I have not seen

32
00:03:35,780 --> 00:03:40,639
sufficient support for giving back the

33
00:03:38,120 --> 00:03:43,759
port and getting another one the failure

34
00:03:40,639 --> 00:03:46,459
mode only seems to happen if you're

35
00:03:43,759 --> 00:03:49,939
traceroute Eng to the router that's

36
00:03:46,459 --> 00:03:51,439
running em tres and you drop one packet

37
00:03:49,939 --> 00:03:55,069
so you get one star in a traceroute

38
00:03:51,439 --> 00:03:57,168
output I've asked a couple of times on

39
00:03:55,069 --> 00:03:59,478
list and I haven't seen any other

40
00:03:57,169 --> 00:04:02,840
suggestions on where this could possibly

41
00:03:59,479 --> 00:04:05,540
cause a problem and also I haven't seen

42
00:04:02,840 --> 00:04:07,430
very many updates so and this is some

43
00:04:05,540 --> 00:04:09,379
really compelling argument made soon I

44
00:04:07,430 --> 00:04:11,479
don't see that it makes sense to

45
00:04:09,379 --> 00:04:12,858
deprecate the current RFC and publish a

46
00:04:11,479 --> 00:04:14,979
new one saying you know this is exactly

47
00:04:12,859 --> 00:04:17,269
the same just what number is different

48
00:04:14,979 --> 00:04:20,690
of course feel free to try and convince

49
00:04:17,269 --> 00:04:22,789
me otherwise it's unreasonable

50
00:04:20,690 --> 00:04:25,490
you know when tracking that now trollers

51
00:04:22,789 --> 00:04:26,909
was tied on for but I don't see him in

52
00:04:25,490 --> 00:04:29,370
the room

53
00:04:26,910 --> 00:04:32,820
and stick with us so much if I remember

54
00:04:29,370 --> 00:04:34,890
correctly but I thought that this would

55
00:04:32,820 --> 00:04:38,550
always happen if the router is like one

56
00:04:34,890 --> 00:04:40,409
hop away yeah that's alright it's the

57
00:04:38,550 --> 00:04:43,560
first hop but if you're tracing a

58
00:04:40,410 --> 00:04:46,590
destination further away it doesn't

59
00:04:43,560 --> 00:04:50,280
happen where doesn't that what happens

60
00:04:46,590 --> 00:04:52,169
just for the obvious for the first you

61
00:04:50,280 --> 00:04:53,820
probably get like a star for your first

62
00:04:52,170 --> 00:04:54,960
hop and then it starts working for the

63
00:04:53,820 --> 00:04:57,659
further hops

64
00:04:54,960 --> 00:05:00,270
so traceroute starts at a port number

65
00:04:57,660 --> 00:05:01,950
and increments it on every hub actually

66
00:05:00,270 --> 00:05:03,930
increments it for every packet it since

67
00:05:01,950 --> 00:05:05,760
three to the first three you know

68
00:05:03,930 --> 00:05:08,610
increments one two three what four five

69
00:05:05,760 --> 00:05:10,890
six so unless your trace routing to the

70
00:05:08,610 --> 00:05:14,010
device that has that is it's your first

71
00:05:10,890 --> 00:05:16,680
hop that's the only time that that port

72
00:05:14,010 --> 00:05:18,900
number would be used for second half

73
00:05:16,680 --> 00:05:21,630
that would be you know put that starting

74
00:05:18,900 --> 00:05:25,650
number plus 4/3 hop would be starting

75
00:05:21,630 --> 00:05:28,020
number plus 7 so it was only if your

76
00:05:25,650 --> 00:05:31,469
trace robbing to an increase to capable

77
00:05:28,020 --> 00:05:33,210
router and it's your first hop and what

78
00:05:31,470 --> 00:05:34,680
you get is one drop packet so you'll see

79
00:05:33,210 --> 00:05:36,840
one star and then everything will work

80
00:05:34,680 --> 00:05:38,310
this is the same behavior that you often

81
00:05:36,840 --> 00:05:40,679
see like afar peasant fully finished

82
00:05:38,310 --> 00:05:42,660
sorting its life out or similar so I

83
00:05:40,680 --> 00:05:44,760
don't really see it causing confusion to

84
00:05:42,660 --> 00:05:46,410
anyone I can draw it out on paper

85
00:05:44,760 --> 00:05:49,020
because I could took me a while to work

86
00:05:46,410 --> 00:05:52,860
my way through it okay I'll think about

87
00:05:49,020 --> 00:05:54,900
it or maybe shake on the list but yeah I

88
00:05:52,860 --> 00:05:59,270
agree though it fits if you start

89
00:05:54,900 --> 00:05:59,270
limited then it's maybe not a big deal

90
00:06:00,410 --> 00:06:16,350
just but I'm a course also I'm sore but

91
00:06:04,790 --> 00:06:18,960
is it beautiful so no it's not it's not

92
00:06:16,350 --> 00:06:20,570
wonderful but to get a new port we'd

93
00:06:18,960 --> 00:06:23,489
have to deprecate the current document

94
00:06:20,570 --> 00:06:26,150
write a whole new document saying this

95
00:06:23,490 --> 00:06:28,830
document deprecates the old RFC and

96
00:06:26,150 --> 00:06:34,049
here's a new RFC which does the same

97
00:06:28,830 --> 00:06:36,690
thing just this is different and it

98
00:06:34,050 --> 00:06:39,540
causes or you know we could do that

99
00:06:36,690 --> 00:06:40,680
the I didn't see very many responses to

100
00:06:39,540 --> 00:06:42,479
the email thread I

101
00:06:40,680 --> 00:06:44,370
I don't think we sent a couple being

102
00:06:42,479 --> 00:06:46,500
like is this okay is this okay and

103
00:06:44,370 --> 00:06:48,419
didn't see an update if the working

104
00:06:46,500 --> 00:06:50,910
group really wants to do this and is

105
00:06:48,419 --> 00:06:53,039
willing to push on it I will be happy to

106
00:06:50,910 --> 00:06:55,039
change my mind but I'm not sure if

107
00:06:53,039 --> 00:06:58,370
that's what the working group wants

108
00:06:55,039 --> 00:07:00,659
Jimmy it the failure mode is

109
00:06:58,370 --> 00:07:02,850
sufficiently unusual it's very seldom

110
00:07:00,660 --> 00:07:08,039
that I would trace route to my first top

111
00:07:02,850 --> 00:07:09,720
router and if it doesn't work I see one

112
00:07:08,039 --> 00:07:11,070
star and I can probably figure out what

113
00:07:09,720 --> 00:07:12,990
it is I'm not gonna be like oh my God my

114
00:07:11,070 --> 00:07:20,219
routers down I'll just be slightly

115
00:07:12,990 --> 00:07:21,690
confused if I'm trace routing to my

116
00:07:20,220 --> 00:07:23,310
first top router which seems like an

117
00:07:21,690 --> 00:07:26,729
unusual thing for people to be doing

118
00:07:23,310 --> 00:07:29,240
it's on the same subnet so if I'm trace

119
00:07:26,729 --> 00:07:32,719
robbing to rabbits on my same subnet

120
00:07:29,240 --> 00:07:35,550
that seems unlikely

121
00:07:32,720 --> 00:07:38,160
maybe I'm wearing that poorly you know

122
00:07:35,550 --> 00:07:41,639
if I'm 181 6 8 5 5 and I'm trace routing

123
00:07:38,160 --> 00:07:44,460
to 182 once it's a 1-1 that seems like

124
00:07:41,639 --> 00:07:45,780
an odd thing to be doing but I want to

125
00:07:44,460 --> 00:07:46,680
change that I'm happy to take it up but

126
00:07:45,780 --> 00:07:50,940
it's gonna have to be something the

127
00:07:46,680 --> 00:07:59,419
working group does it well personally

128
00:07:50,940 --> 00:08:04,490
you I think that is try to be a problem

129
00:07:59,419 --> 00:08:08,190
even though the you can trace the

130
00:08:04,490 --> 00:08:10,860
unicast try so I'm trace finally but

131
00:08:08,190 --> 00:08:12,750
always in the same situation always the

132
00:08:10,860 --> 00:08:15,210
first roadblock I just dropped a packet

133
00:08:12,750 --> 00:08:20,580
or ignored pocket and always you see s

134
00:08:15,210 --> 00:08:23,789
star this for me it's a strange so and

135
00:08:20,580 --> 00:08:26,008
the that kind of situation can be

136
00:08:23,789 --> 00:08:28,320
addressed if we change the port number

137
00:08:26,009 --> 00:08:31,139
then why don't we don't change the port

138
00:08:28,320 --> 00:08:33,958
number so the program currently the

139
00:08:31,139 --> 00:08:37,500
program is ionic self doesn't want to

140
00:08:33,958 --> 00:08:41,728
just sorry for saying this but doesn't

141
00:08:37,500 --> 00:08:43,708
want to accept the offender sorry they

142
00:08:41,729 --> 00:08:45,690
say it's not their failure so that's why

143
00:08:43,708 --> 00:08:46,079
this is a problem they say it's not a

144
00:08:45,690 --> 00:08:49,880
failure

145
00:08:46,079 --> 00:08:52,930
it's a implementation problem it's a

146
00:08:49,880 --> 00:08:55,939
linux unicast trace

147
00:08:52,930 --> 00:08:58,069
implementation problem so there is no

148
00:08:55,940 --> 00:08:59,840
variation with empty specifications

149
00:08:58,070 --> 00:09:02,270
there is no problem of iron a

150
00:08:59,840 --> 00:09:05,960
specification huai an assignment only

151
00:09:02,270 --> 00:09:09,020
the problem is a existing Linux unicast

152
00:09:05,960 --> 00:09:13,400
race round so everyone said we don't

153
00:09:09,020 --> 00:09:16,310
have any problem but honestly speaking

154
00:09:13,400 --> 00:09:18,680
if the Ayana accept that kind of a

155
00:09:16,310 --> 00:09:20,780
situation and then they assigned a new

156
00:09:18,680 --> 00:09:26,120
port number then everything become a

157
00:09:20,780 --> 00:09:28,030
crime and it looks beautiful so my

158
00:09:26,120 --> 00:09:34,070
personal opinion is that

159
00:09:28,030 --> 00:09:36,470
Ayana I'd like to ask them to redefine

160
00:09:34,070 --> 00:09:39,500
the new port number for M tries to and

161
00:09:36,470 --> 00:09:42,350
the new emirate race to LEC will be

162
00:09:39,500 --> 00:09:44,390
published as with the statement that we

163
00:09:42,350 --> 00:09:46,850
had a some conflict of the poll number

164
00:09:44,390 --> 00:09:50,360
them there is no specification change

165
00:09:46,850 --> 00:09:53,030
and we don't say it's it's not it's due

166
00:09:50,360 --> 00:09:55,750
to the I on evolution assessor this is

167
00:09:53,030 --> 00:09:58,520
just a problem of the existing

168
00:09:55,750 --> 00:10:01,340
implementation that's why we publish the

169
00:09:58,520 --> 00:10:05,689
new RFC that's all and then the finally

170
00:10:01,340 --> 00:10:07,820
everything looks good if the working

171
00:10:05,690 --> 00:10:09,230
group wants to send me a new document

172
00:10:07,820 --> 00:10:12,140
that says that and the working group

173
00:10:09,230 --> 00:10:14,660
Grady wants to push for it as I said

174
00:10:12,140 --> 00:10:16,100
unless you know the discussion happened

175
00:10:14,660 --> 00:10:18,620
a while back it kind of stopped so I

176
00:10:16,100 --> 00:10:20,000
thought people didn't care if the

177
00:10:18,620 --> 00:10:21,560
working group really wants to push for

178
00:10:20,000 --> 00:10:25,100
it iron has said they're happy to change

179
00:10:21,560 --> 00:10:27,020
it Oh some people and I on a happy Joe

180
00:10:25,100 --> 00:10:29,510
touches a little Joe Joe touch is

181
00:10:27,020 --> 00:10:31,250
pushing back he's not part of Vienna we

182
00:10:29,510 --> 00:10:32,689
I mean I'm sure we can make it happen if

183
00:10:31,250 --> 00:10:35,930
the working group is willing to push for

184
00:10:32,690 --> 00:10:37,280
it I should point out that the only time

185
00:10:35,930 --> 00:10:39,109
that the shows up it's not for the first

186
00:10:37,280 --> 00:10:41,510
top rather it's only when you're traced

187
00:10:39,110 --> 00:10:43,850
routing to the first hop router if you

188
00:10:41,510 --> 00:10:45,319
trace your up through the router it you

189
00:10:43,850 --> 00:10:47,540
never see this and that's the common

190
00:10:45,320 --> 00:10:49,160
case it's very seldom people trace route

191
00:10:47,540 --> 00:10:51,560
to their first operator because it's

192
00:10:49,160 --> 00:10:53,180
their first stop router but if the

193
00:10:51,560 --> 00:10:56,510
working group really pushes were we can

194
00:10:53,180 --> 00:11:01,079
try and deprecate the old RFC write a

195
00:10:56,510 --> 00:11:03,360
new draft you know working

196
00:11:01,080 --> 00:11:04,620
last call is G review blah blah blah it

197
00:11:03,360 --> 00:11:06,690
sounds like a lot of work for a

198
00:11:04,620 --> 00:11:09,600
situation which to me seems very very

199
00:11:06,690 --> 00:11:11,940
very uncommon but I'm yet the working

200
00:11:09,600 --> 00:11:13,860
group so if that's what the working

201
00:11:11,940 --> 00:11:14,880
group one so we can try it but the

202
00:11:13,860 --> 00:11:15,780
working group is gonna have to decide

203
00:11:14,880 --> 00:11:21,960
it's not my decision

204
00:11:15,780 --> 00:11:25,079
yeah no no okay what is your sticking

205
00:11:21,960 --> 00:11:29,040
point shall we get just one other thing

206
00:11:25,080 --> 00:11:31,260
though so so if I Anna does nothing that

207
00:11:29,040 --> 00:11:32,640
means that you know the next time

208
00:11:31,260 --> 00:11:34,830
someone asked report number you might

209
00:11:32,640 --> 00:11:37,770
give that you know just like a whole

210
00:11:34,830 --> 00:11:39,450
range of port numbers right and if I

211
00:11:37,770 --> 00:11:40,650
Anna now at this point we're Baptists

212
00:11:39,450 --> 00:11:42,810
where they start handing out port

213
00:11:40,650 --> 00:11:45,120
numbers to people you will start having

214
00:11:42,810 --> 00:11:46,949
this problem several times in the future

215
00:11:45,120 --> 00:12:19,110
for other protocols so have you thought

216
00:11:46,950 --> 00:12:21,240
about that so yeah so it's not really

217
00:12:19,110 --> 00:12:23,790
relevant for this working group but I

218
00:12:21,240 --> 00:12:25,410
just wonder if there's you know more

219
00:12:23,790 --> 00:12:28,349
bigger problem here that will show up

220
00:12:25,410 --> 00:12:29,850
and if it's more mr. gets the next port

221
00:12:28,350 --> 00:12:31,650
number maybe you will always get the

222
00:12:29,850 --> 00:12:33,330
failure when you're trace writing the

223
00:12:31,650 --> 00:12:35,760
second router away from or something

224
00:12:33,330 --> 00:12:37,380
like that yeah the next port number is

225
00:12:35,760 --> 00:12:41,670
going to be annoying forever gets it and

226
00:12:37,380 --> 00:12:43,920
the one after that and yeah so yes I

227
00:12:41,670 --> 00:12:45,810
Anna is aware of the problem and I think

228
00:12:43,920 --> 00:12:47,099
is going to try and not use those ports

229
00:12:45,810 --> 00:12:52,439
I think they're making sort of a note

230
00:12:47,100 --> 00:12:54,390
part of the problem is the person who

231
00:12:52,440 --> 00:12:56,790
somebody would need to convince Joe

232
00:12:54,390 --> 00:12:59,880
touch because he's the port registry

233
00:12:56,790 --> 00:13:01,800
person and Joe touch seems to not be

234
00:12:59,880 --> 00:13:04,320
convinced that this is a problem so I

235
00:13:01,800 --> 00:13:05,969
think what it is is for now IANA is

236
00:13:04,320 --> 00:13:10,050
gonna try and assign from other sets of

237
00:13:05,970 --> 00:13:12,540
numbers but Joe seems opposed to marking

238
00:13:10,050 --> 00:13:14,579
all of these ports as you know known in

239
00:13:12,540 --> 00:13:17,130
use by other applications

240
00:13:14,580 --> 00:13:18,990
from what I understand he said UNIX

241
00:13:17,130 --> 00:13:21,600
implementations should all just replace

242
00:13:18,990 --> 00:13:22,980
their trace route I think that that's

243
00:13:21,600 --> 00:13:23,660
what he said I'm not going to comment on

244
00:13:22,980 --> 00:13:25,920
that

245
00:13:23,660 --> 00:13:27,060
yeah and that's of course also love a

246
00:13:25,920 --> 00:13:29,040
thing whether there is some way of

247
00:13:27,060 --> 00:13:33,000
approaching them but yeah I'm not sure

248
00:13:29,040 --> 00:13:35,490
home oh that's good work yeah but Lee's

249
00:13:33,000 --> 00:13:39,540
this problem will show up in the future

250
00:13:35,490 --> 00:13:42,450
it's you're probably all right thanks

251
00:13:39,540 --> 00:13:46,099
for that guys appreciate that so first

252
00:13:42,450 --> 00:13:50,730
up we've got IP p.m. Harbor 2-step

253
00:13:46,100 --> 00:13:53,040
setting the agenda for those traps

254
00:13:50,730 --> 00:13:56,310
are they all right so I thought we had

255
00:13:53,040 --> 00:13:57,680
three stacked up here and this would be

256
00:13:56,310 --> 00:13:59,790
you bro

257
00:13:57,680 --> 00:14:01,739
and while you're doing that I think

258
00:13:59,790 --> 00:14:06,920
Lenny wanted me to just give a brief

259
00:14:01,740 --> 00:14:10,980
update about the Wi-Fi multicast draft

260
00:14:06,920 --> 00:14:16,709
so yeah so I'm gonna do that outside

261
00:14:10,980 --> 00:14:18,750
this real quick so it's the laser

262
00:14:16,709 --> 00:14:20,670
pointer yeah and I don't need this but

263
00:14:18,750 --> 00:14:22,500
so that with that particular draft I

264
00:14:20,670 --> 00:14:26,180
just had a meeting with Erik I don't

265
00:14:22,500 --> 00:14:31,500
know his last name from Cisco ad guy and

266
00:14:26,180 --> 00:14:36,469
what I see it thank pinkie okay either

267
00:14:31,500 --> 00:14:39,390
way and so that particular draft is

268
00:14:36,470 --> 00:14:41,550
under his review it's been sent back to

269
00:14:39,390 --> 00:14:45,029
us the author's worn an ID or they

270
00:14:41,550 --> 00:14:47,729
Charlie and others to address a few

271
00:14:45,029 --> 00:14:49,050
other comments and some of those

272
00:14:47,730 --> 00:14:50,760
comments are pretty extensive

273
00:14:49,050 --> 00:14:53,130
unfortunately even though we just are

274
00:14:50,760 --> 00:14:54,959
kind of done with the draft so I've been

275
00:14:53,130 --> 00:14:57,420
kind of busy updating the draft and

276
00:14:54,959 --> 00:15:01,380
we'll continue to do so so just make a

277
00:14:57,420 --> 00:15:03,410
note for the notes that the Wi-Fi theta

278
00:15:01,380 --> 00:15:08,339
2 to 11

279
00:15:03,410 --> 00:15:12,540
multicast considerations draft is still

280
00:15:08,339 --> 00:15:14,339
in being it's in it's an ad review I'm

281
00:15:12,540 --> 00:15:16,490
gonna get to these dress so this is

282
00:15:14,339 --> 00:15:19,230
these drafts are just an advertisement

283
00:15:16,490 --> 00:15:21,990
just wanted to make sure that M bode

284
00:15:19,230 --> 00:15:25,500
were aware of this work since we do Oh

285
00:15:21,990 --> 00:15:27,310
a.m. types multicast work here

286
00:15:25,500 --> 00:15:31,840
Greg mirskiy

287
00:15:27,310 --> 00:15:34,779
this in IP PM a couple days ago i ppm is

288
00:15:31,840 --> 00:15:38,590
IP performance multi k5p performance

289
00:15:34,779 --> 00:15:40,890
measurement and it's only been focusing

290
00:15:38,590 --> 00:15:43,630
on unicast up until now there's

291
00:15:40,890 --> 00:15:46,089
solutions such as i ôm that many of you

292
00:15:43,630 --> 00:15:49,300
may be familiar with inbound in band o

293
00:15:46,089 --> 00:15:50,980
a.m. type mechanisms where you do om in

294
00:15:49,300 --> 00:15:55,449
the packet instead of out it out at

295
00:15:50,980 --> 00:15:57,700
bound out of band and so with these

296
00:15:55,450 --> 00:16:00,339
solutions there haven't been a

297
00:15:57,700 --> 00:16:02,220
consideration for multicast so multicast

298
00:16:00,339 --> 00:16:07,000
traffic monitoring is important i

299
00:16:02,220 --> 00:16:08,260
presented this in pim ITF or two ago and

300
00:16:07,000 --> 00:16:10,089
there were some interest from the

301
00:16:08,260 --> 00:16:12,460
operator so the kind of the purpose of

302
00:16:10,089 --> 00:16:13,630
me presenting this draft these drafts to

303
00:16:12,460 --> 00:16:15,550
you is just to see if there's any

304
00:16:13,630 --> 00:16:17,860
interest if there is please join us in

305
00:16:15,550 --> 00:16:24,819
this draft it's being worked on in AI

306
00:16:17,860 --> 00:16:26,620
ppm and so mmm let's see there are

307
00:16:24,820 --> 00:16:29,230
current problems with the existing Toma

308
00:16:26,620 --> 00:16:31,330
tree techniques they have issues there's

309
00:16:29,230 --> 00:16:32,860
not a branch identifier which I'll talk

310
00:16:31,330 --> 00:16:36,070
about in just a moment

311
00:16:32,860 --> 00:16:40,120
and there is unnecessary application

312
00:16:36,070 --> 00:16:43,260
right now with IO am techniques for

313
00:16:40,120 --> 00:16:47,650
unicast there is trap traffic capture

314
00:16:43,260 --> 00:16:49,600
towards the head end of the flow and

315
00:16:47,650 --> 00:16:51,189
it's propagated all the way down to the

316
00:16:49,600 --> 00:16:53,350
end and for unicast that's a good thing

317
00:16:51,190 --> 00:16:58,630
but for multicast it can lead to

318
00:16:53,350 --> 00:17:00,520
unnecessary collection of data and so

319
00:16:58,630 --> 00:17:01,660
we're trying to prevent that and so

320
00:17:00,520 --> 00:17:08,650
there's some things that we've done to

321
00:17:01,660 --> 00:17:11,250
help prevent that so next slide so there

322
00:17:08,650 --> 00:17:13,780
is something that's called postcard

323
00:17:11,250 --> 00:17:17,380
postcard based trees and it's a proposal

324
00:17:13,780 --> 00:17:20,349
to on each branch you're sending up the

325
00:17:17,380 --> 00:17:24,780
data to a collector along the path and

326
00:17:20,349 --> 00:17:27,819
so that until now also hasn't been

327
00:17:24,780 --> 00:17:30,428
something that supported multicast until

328
00:17:27,819 --> 00:17:32,139
recently and so with this draft what

329
00:17:30,429 --> 00:17:36,179
we've done is we've added a branch

330
00:17:32,140 --> 00:17:39,340
identifier to the instruction header to

331
00:17:36,179 --> 00:17:40,900
provide a indication that this is a

332
00:17:39,340 --> 00:17:43,570
unique branch along

333
00:17:40,900 --> 00:17:45,640
floo so you're able to send up that data

334
00:17:43,570 --> 00:17:47,080
to a collector along the branch and

335
00:17:45,640 --> 00:17:54,190
these different branches have different

336
00:17:47,080 --> 00:17:56,860
identifiers the next slide so greg

337
00:17:54,190 --> 00:17:59,170
Mirsky has this hybrid 2-step solution

338
00:17:56,860 --> 00:18:02,050
it's also something that is being

339
00:17:59,170 --> 00:18:04,900
modified to be able to support multicast

340
00:18:02,050 --> 00:18:06,909
and so the branch node fords that hybrid

341
00:18:04,900 --> 00:18:09,190
to step over the first branch and then

342
00:18:06,910 --> 00:18:11,770
originates follow-up packets downstream

343
00:18:09,190 --> 00:18:15,840
and so that's something that he's

344
00:18:11,770 --> 00:18:15,840
leading I'm not on that draft next slide

345
00:18:17,370 --> 00:18:24,010
so there's also a way to do it instead

346
00:18:21,460 --> 00:18:29,470
of per node you can do a per segment in

347
00:18:24,010 --> 00:18:31,420
coast guard base telemetry and so your a

348
00:18:29,470 --> 00:18:34,270
post card is sent at each sections end

349
00:18:31,420 --> 00:18:38,740
node and that post guard contains the

350
00:18:34,270 --> 00:18:42,520
data for the entire section and yes next

351
00:18:38,740 --> 00:18:44,970
slide so this is the last slide so again

352
00:18:42,520 --> 00:18:47,080
your participation is welcome encouraged

353
00:18:44,970 --> 00:18:48,910
particularly operators I think someone

354
00:18:47,080 --> 00:18:50,290
from Deutsche Telekom mentioned last

355
00:18:48,910 --> 00:18:52,030
time that they'd be interested in this

356
00:18:50,290 --> 00:18:53,590
kind of work because it's very

357
00:18:52,030 --> 00:18:57,340
attractive particularly for multicast

358
00:18:53,590 --> 00:19:01,899
and we are pursuing will pursue working

359
00:18:57,340 --> 00:19:08,199
group adoption in pi ppm any comments or

360
00:19:01,900 --> 00:19:10,120
interest from anybody the ripest chair

361
00:19:08,200 --> 00:19:13,900
just yes which group of these active in

362
00:19:10,120 --> 00:19:16,510
IP PM IP p.m. PI P performance

363
00:19:13,900 --> 00:19:22,090
measurement so just know that they're

364
00:19:16,510 --> 00:19:26,440
now working on multicast it's that's

365
00:19:22,090 --> 00:19:29,409
kind of exciting it's exciting who

366
00:19:26,440 --> 00:19:32,260
started that work a colleague of mine

367
00:19:29,410 --> 00:19:34,630
how you and he was not familiar with

368
00:19:32,260 --> 00:19:36,160
multicast at all so he and I started

369
00:19:34,630 --> 00:19:38,440
working together and Greg mirskiy as

370
00:19:36,160 --> 00:19:40,420
well okay fantastic it's good and Greg

371
00:19:38,440 --> 00:19:42,840
is familiar with multicast absolutely

372
00:19:40,420 --> 00:19:45,580
thanks yeah

373
00:19:42,840 --> 00:19:48,309
is there an implementation is it

374
00:19:45,580 --> 00:19:50,550
something we can try out I don't know if

375
00:19:48,309 --> 00:19:54,570
we should you can try it out there is

376
00:19:50,550 --> 00:19:54,570
implementation but it's in a country

377
00:19:57,059 --> 00:20:29,850
okay this seems interesting all right

378
00:20:38,250 --> 00:20:44,640
all right demo how do you spell that

379
00:20:46,430 --> 00:20:52,380
[Laughter]

380
00:20:48,390 --> 00:20:52,380
it's a whole different affliction

381
00:21:23,300 --> 00:21:26,440
[Music]

382
00:21:52,340 --> 00:22:57,929
they got power man look you're on

383
00:21:54,690 --> 00:23:00,630
display no it's not charging okay so hi

384
00:22:57,930 --> 00:23:03,960
I'm Dino I actually have two

385
00:23:00,630 --> 00:23:08,580
presentations I gave this in the list

386
00:23:03,960 --> 00:23:10,680
working group in Montreal it so it's

387
00:23:08,580 --> 00:23:13,260
this mobile node which is running lisp

388
00:23:10,680 --> 00:23:16,680
on a mobile platform like android or iOS

389
00:23:13,260 --> 00:23:19,140
system and this was a unicast demo and

390
00:23:16,680 --> 00:23:20,790
what I did in here in Singapore coolest

391
00:23:19,140 --> 00:23:22,950
working group is give a multicast demo

392
00:23:20,790 --> 00:23:25,050
so I asked if I could give the multicast

393
00:23:22,950 --> 00:23:26,730
demo here and thought that this showing

394
00:23:25,050 --> 00:23:29,360
unicast first may give some good

395
00:23:26,730 --> 00:23:29,360
background

396
00:23:32,630 --> 00:23:41,070
so what we're demoing is this iPhone

397
00:23:37,620 --> 00:23:44,459
there's a iOS implementation we have our

398
00:23:41,070 --> 00:23:45,929
TRS which are a little how many I think

399
00:23:44,460 --> 00:23:47,970
some people here know list but it's a

400
00:23:45,930 --> 00:23:50,610
recap sleighing tunnel routers are

401
00:23:47,970 --> 00:23:53,340
deployed in google cloud in AWS and the

402
00:23:50,610 --> 00:23:56,159
list mobile node to list correspondent

403
00:23:53,340 --> 00:23:58,980
node can talk to each other behind Nats

404
00:23:56,160 --> 00:24:01,470
as well of lismo will know to non-lisp

405
00:23:58,980 --> 00:24:04,950
correspondent notes behind nets so to

406
00:24:01,470 --> 00:24:06,150
lisp entities are on the overlay

407
00:24:04,950 --> 00:24:07,830
can talk to each other that's what the

408
00:24:06,150 --> 00:24:10,190
third bullet is the fourth bullet is a

409
00:24:07,830 --> 00:24:12,689
list mobile node can talk to a non-lisp

410
00:24:10,190 --> 00:24:14,490
anywhere in the internet and the inner

411
00:24:12,690 --> 00:24:18,230
working is done by using something

412
00:24:14,490 --> 00:24:18,230
called list net it's one of the op sees

413
00:24:19,280 --> 00:24:24,780
so some magic sauce is lisp is not

414
00:24:23,070 --> 00:24:27,000
running a list movin those not running a

415
00:24:24,780 --> 00:24:29,460
control plane that's the whole point of

416
00:24:27,000 --> 00:24:32,040
this effort was to build a really small

417
00:24:29,460 --> 00:24:35,100
scale small footprint implementation of

418
00:24:32,040 --> 00:24:37,639
it so basically it's configured to have

419
00:24:35,100 --> 00:24:41,820
a default route that points to a set of

420
00:24:37,640 --> 00:24:43,710
encapsulating routers either proxy ETRS

421
00:24:41,820 --> 00:24:46,139
or RT RS and that's something that's

422
00:24:43,710 --> 00:24:48,420
configured in the implementation user

423
00:24:46,140 --> 00:24:51,180
would have to configure it and the RT

424
00:24:48,420 --> 00:24:53,820
R's are configured to glean xtr mappings

425
00:24:51,180 --> 00:24:55,680
so unless we have an ant traversal

426
00:24:53,820 --> 00:24:58,530
proposal but that requires control plane

427
00:24:55,680 --> 00:25:02,100
messaging which we are trying not to do

428
00:24:58,530 --> 00:25:03,899
here so basically the NAP proposal NAT

429
00:25:02,100 --> 00:25:06,120
traversal proposal uses control plane

430
00:25:03,900 --> 00:25:08,580
mechanisms but this gleaning is using a

431
00:25:06,120 --> 00:25:11,040
data plane mechanism so all the logic

432
00:25:08,580 --> 00:25:13,320
occurs at the data plane and this isn't

433
00:25:11,040 --> 00:25:15,420
an effort to implement a lightweight XDR

434
00:25:13,320 --> 00:25:18,480
and there's a use case that we're

435
00:25:15,420 --> 00:25:22,680
looking at to do traffic reporting using

436
00:25:18,480 --> 00:25:24,270
h3 grids that that Mexicans doing to be

437
00:25:22,680 --> 00:25:31,020
able to put lisp and dash cams in

438
00:25:24,270 --> 00:25:34,050
existing automobiles so here's the demo

439
00:25:31,020 --> 00:25:37,170
topology we have an iphone over there on

440
00:25:34,050 --> 00:25:39,060
the left that has an e idea of 13 and a

441
00:25:37,170 --> 00:25:41,850
docker container that was that's running

442
00:25:39,060 --> 00:25:43,790
on my laptop that's a ID 14 and then we

443
00:25:41,850 --> 00:25:47,219
have two non-lisp notes that are labeled

444
00:25:43,790 --> 00:25:49,530
red once the Google's DNS server and

445
00:25:47,220 --> 00:25:51,810
then just WW disappears that net is

446
00:25:49,530 --> 00:25:54,510
where my website is hosted but it's just

447
00:25:51,810 --> 00:25:56,879
a non-lisp site okay where you see green

448
00:25:54,510 --> 00:25:58,650
that's those are the guys that are part

449
00:25:56,880 --> 00:26:01,550
of the overlay where you see red that's

450
00:25:58,650 --> 00:26:04,560
the underlying routing stuff we have a

451
00:26:01,550 --> 00:26:06,169
RTR that's sitting the G - RTL one is

452
00:26:04,560 --> 00:26:11,340
sitting in GC p and there's three

453
00:26:06,170 --> 00:26:13,260
sitting in AWS the implementation on the

454
00:26:11,340 --> 00:26:15,629
iPhone is our that's a public domain

455
00:26:13,260 --> 00:26:16,350
implementation that runs on both Android

456
00:26:15,630 --> 00:26:18,299
and I

457
00:26:16,350 --> 00:26:23,730
and the our Tiaras are my in

458
00:26:18,299 --> 00:26:25,590
communication okay so I hope the last

459
00:26:23,730 --> 00:26:27,389
time I tried this the audio came through

460
00:26:25,590 --> 00:26:29,309
that box and nobody could hear it if

461
00:26:27,389 --> 00:26:32,820
that's what happens now I'll have to

462
00:26:29,309 --> 00:26:55,700
annotate myself so I can do the

463
00:26:32,820 --> 00:26:58,980
voiceover okay should be all the way up

464
00:26:55,700 --> 00:27:30,960
yeah yeah I was writing all right so let

465
00:26:58,980 --> 00:27:37,470
me this is awesome all these AV guys

466
00:27:30,960 --> 00:27:39,809
have a great song we go to listen what's

467
00:27:37,470 --> 00:27:42,179
it say oh let's know what what I'll go

468
00:27:39,809 --> 00:27:45,539
ahead and just do it myself but these

469
00:27:42,179 --> 00:27:54,360
things happens let me do the voiceover

470
00:27:45,539 --> 00:27:57,779
hi I'm you know this is my demo you'll

471
00:27:54,360 --> 00:28:02,189
ruin it come on I give it a little

472
00:27:57,779 --> 00:28:04,350
character yes sure okay there we go and

473
00:28:02,190 --> 00:28:07,679
let's try it again okay

474
00:28:04,350 --> 00:28:11,820
so the idea here is that the list what

475
00:28:07,679 --> 00:28:18,899
we'll note is going to the source of it

476
00:28:11,820 --> 00:28:21,899
is going to wow these I'm saying

477
00:28:18,899 --> 00:28:25,870
yes you sounded great

478
00:28:21,899 --> 00:28:27,850
okay so there

479
00:28:25,870 --> 00:28:34,299
the list mobile node is switching

480
00:28:27,850 --> 00:28:39,129
between Wi-Fi and LTE and it's going to

481
00:28:34,299 --> 00:28:41,289
send packets so right now this is the 14

482
00:28:39,130 --> 00:28:43,419
container node that's sending packets to

483
00:28:41,289 --> 00:28:47,169
13 which is this guy

484
00:28:43,419 --> 00:28:49,419
and I have list list enabled sorry for

485
00:28:47,169 --> 00:28:52,990
the shaky that's the Eid and it's

486
00:28:49,419 --> 00:28:56,110
configured with those PTR's here I'm

487
00:28:52,990 --> 00:28:59,980
going to originate a ping now see I'm on

488
00:28:56,110 --> 00:29:04,059
Wi-Fi and now what's gonna happen is I'm

489
00:28:59,980 --> 00:29:04,929
gonna ping WW lispers net and the pings

490
00:29:04,059 --> 00:29:07,090
start going

491
00:29:04,929 --> 00:29:10,270
sorry for the shaky the multicast

492
00:29:07,090 --> 00:29:13,178
filming is better and so this guy is

493
00:29:10,270 --> 00:29:15,129
pinging this guy and it turns out that

494
00:29:13,179 --> 00:29:18,010
this guy is translating the source

495
00:29:15,130 --> 00:29:19,690
address of 13 because it's an e ID which

496
00:29:18,010 --> 00:29:21,850
is not in the underlying routing system

497
00:29:19,690 --> 00:29:24,880
to the IP address of the link that's

498
00:29:21,850 --> 00:29:29,320
going into from Google now what I'm

499
00:29:24,880 --> 00:29:31,210
doing is I switched oh I switched to LTE

500
00:29:29,320 --> 00:29:34,149
in other words turn Wi-Fi off in the

501
00:29:31,210 --> 00:29:37,000
connection still the pings are still

502
00:29:34,149 --> 00:29:39,100
happening if you look in the RTR you see

503
00:29:37,000 --> 00:29:41,289
13 and 14 we're talking to each other

504
00:29:39,100 --> 00:29:42,789
that dark green packet counts means

505
00:29:41,289 --> 00:29:43,570
packets have been forwarded within the

506
00:29:42,789 --> 00:29:45,158
last second

507
00:29:43,570 --> 00:29:48,279
these have been forward in the last

508
00:29:45,159 --> 00:29:51,039
minute and so the connections happen the

509
00:29:48,279 --> 00:29:54,549
phone's going through 166 that's my AT&T

510
00:29:51,039 --> 00:29:56,200
link and 96 is happening in the

511
00:29:54,549 --> 00:29:59,679
container on my laptop sitting at my

512
00:29:56,200 --> 00:30:01,360
house using Comcast and let's see I am I

513
00:29:59,679 --> 00:30:05,049
going back yeah I'm going back to Wi-Fi

514
00:30:01,360 --> 00:30:08,229
now and then you'll see that the arlok's

515
00:30:05,049 --> 00:30:09,639
gonna change to the same 96 of course

516
00:30:08,230 --> 00:30:11,679
it's using a different port number

517
00:30:09,640 --> 00:30:13,929
because we're adding through my house

518
00:30:11,679 --> 00:30:22,659
and that's what the demo is supposed to

519
00:30:13,929 --> 00:30:25,270
show cool thank you didn't you say

520
00:30:22,659 --> 00:30:27,100
something about multicast say it's the

521
00:30:25,270 --> 00:30:28,690
next but it's the next presentation oh

522
00:30:27,100 --> 00:30:31,439
that's an expert there's two demos and I

523
00:30:28,690 --> 00:30:31,440
wanted to give you some

524
00:30:35,120 --> 00:30:41,370
it seems that the new list parts I don't

525
00:30:38,279 --> 00:30:43,350
know are kind of to make the staff on

526
00:30:41,370 --> 00:30:45,330
the phone smaller a lot more lightweight

527
00:30:43,350 --> 00:30:46,500
and support net and so on right is that

528
00:30:45,330 --> 00:30:48,330
just true

529
00:30:46,500 --> 00:30:50,159
so basically the phone is just the demo

530
00:30:48,330 --> 00:30:52,230
thing the the actual device it would be

531
00:30:50,159 --> 00:30:54,510
is a smaller lightweight IOT device like

532
00:30:52,230 --> 00:30:56,370
a dashcam or whatever whatever is them

533
00:30:54,510 --> 00:30:58,230
all enough just to have the radio but

534
00:30:56,370 --> 00:31:00,270
not I mean it could be used on the

535
00:30:58,230 --> 00:31:01,980
mobile phone just like this as well but

536
00:31:00,270 --> 00:31:04,350
yeah yeah you can run a full control

537
00:31:01,980 --> 00:31:07,850
plane but because I thought I'd seen you

538
00:31:04,350 --> 00:31:11,490
know from from you and in Cisco you know

539
00:31:07,850 --> 00:31:14,189
Lisp on mobile phones many years back

540
00:31:11,490 --> 00:31:17,460
yeah kind of the older so we first it

541
00:31:14,190 --> 00:31:19,200
first it on Android and it was it was it

542
00:31:17,460 --> 00:31:24,830
wasn't a completely full implementation

543
00:31:19,200 --> 00:31:24,830
it adhered to the list mobile notes back

544
00:31:24,890 --> 00:31:30,779
so it didn't they did it didn't do the

545
00:31:27,779 --> 00:31:32,610
full xtr support but this is doing even

546
00:31:30,779 --> 00:31:33,299
less than that now because we want it to

547
00:31:32,610 --> 00:31:39,080
be lighter weight

548
00:31:33,299 --> 00:31:42,480
no that's fine okay so next thing is we

549
00:31:39,080 --> 00:31:44,100
then I tried basically a load split ping

550
00:31:42,480 --> 00:31:47,039
test which was really easy from the

551
00:31:44,100 --> 00:31:49,559
container 2ww lispers net and the idea

552
00:31:47,039 --> 00:31:52,080
here was is that let's use all the our

553
00:31:49,559 --> 00:31:54,450
TRS and mode split traffic and what this

554
00:31:52,080 --> 00:31:57,270
is showing that is on the container

555
00:31:54,450 --> 00:32:00,390
there's a 0/0 that goes through all four

556
00:31:57,270 --> 00:32:03,570
our pr's all four Artie ours that are in

557
00:32:00,390 --> 00:32:05,669
one in Google three in AWS and their

558
00:32:03,570 --> 00:32:10,010
load splitting traffic across it so that

559
00:32:05,669 --> 00:32:10,010
was another thing meaning we could do

560
00:32:14,900 --> 00:32:19,140
[Music]

561
00:32:16,429 --> 00:32:20,730
and so what I wanted to do I go okay let

562
00:32:19,140 --> 00:32:22,350
me drive home I was at the coffee shop

563
00:32:20,730 --> 00:32:24,179
and I said okay I'm gonna go ahead and

564
00:32:22,350 --> 00:32:25,799
open Apple music and download some music

565
00:32:24,179 --> 00:32:28,470
and let's see if I could hear any

566
00:32:25,799 --> 00:32:30,000
audible differences coming down so what

567
00:32:28,470 --> 00:32:32,610
happens was when I was sitting at Pete's

568
00:32:30,000 --> 00:32:34,409
I was connected to Pete's Wi-Fi and you

569
00:32:32,610 --> 00:32:36,510
know you always see Xfinity Wi-Fi all

570
00:32:34,409 --> 00:32:39,539
over the place and so what happened was

571
00:32:36,510 --> 00:32:41,908
as I was drunk as I was at at Pete's and

572
00:32:39,539 --> 00:32:43,799
moving around I was switching between

573
00:32:41,909 --> 00:32:45,990
those and then I decided to get in the

574
00:32:43,799 --> 00:32:47,760
car and start driving away from those

575
00:32:45,990 --> 00:32:51,630
on a signal from those guys and of

576
00:32:47,760 --> 00:32:54,240
course ATT AT&T LTE was up you know it's

577
00:32:51,630 --> 00:32:56,130
at five ge laugh out loud in the corner

578
00:32:54,240 --> 00:32:57,690
but it didn't matter and then when I got

579
00:32:56,130 --> 00:33:00,270
closer to my house which was more rural

580
00:32:57,690 --> 00:33:02,520
than it actually switched over to 4G so

581
00:33:00,270 --> 00:33:04,559
the audio kept going I was downloading

582
00:33:02,520 --> 00:33:07,020
the music while all this stuff was going

583
00:33:04,559 --> 00:33:10,260
on and I didn't hit I didn't hear any

584
00:33:07,020 --> 00:33:11,580
audio lost good Karl Rossum not super

585
00:33:10,260 --> 00:33:13,770
convinced by that because don't these

586
00:33:11,580 --> 00:33:14,820
players just you know like buffer stuff

587
00:33:13,770 --> 00:33:16,740
to make sure that there is enough

588
00:33:14,820 --> 00:33:18,450
available in case there's a temporary

589
00:33:16,740 --> 00:33:19,559
connectivity loss I mean I'm not saying

590
00:33:18,450 --> 00:33:20,520
it doesn't work yeah I'm just saying

591
00:33:19,559 --> 00:33:23,160
this may not be a convincing

592
00:33:20,520 --> 00:33:27,690
demonstration of that yeah I mean I was

593
00:33:23,160 --> 00:33:29,550
driving for a good half hour I don't

594
00:33:27,690 --> 00:33:30,990
know how much buffering was between the

595
00:33:29,550 --> 00:33:37,770
points but that's that's a really good

596
00:33:30,990 --> 00:33:40,590
point okay so some caveats about what's

597
00:33:37,770 --> 00:33:42,210
going on here in the design is the list

598
00:33:40,590 --> 00:33:45,178
mobile notes must send before it can

599
00:33:42,210 --> 00:33:47,670
receive since the RTR is gleaning our

600
00:33:45,179 --> 00:33:50,880
local information from it returned

601
00:33:47,670 --> 00:33:52,679
packets cannot go back unless it's sent

602
00:33:50,880 --> 00:33:54,450
so if we have the silent source problem

603
00:33:52,679 --> 00:33:57,000
we have this in so many designs right

604
00:33:54,450 --> 00:33:58,679
this is the problem - so - mobile knows

605
00:33:57,000 --> 00:34:00,390
wanted to talk to each other they would

606
00:33:58,679 --> 00:34:01,800
have to send somewhere else this is

607
00:34:00,390 --> 00:34:03,780
really not a problem because soon as I

608
00:34:01,800 --> 00:34:05,550
bring Lisp up on the phone it's trying

609
00:34:03,780 --> 00:34:07,139
to talk the iPhone with all the

610
00:34:05,550 --> 00:34:09,210
applications are running are trying to

611
00:34:07,140 --> 00:34:11,129
talk to so many non list notes that they

612
00:34:09,210 --> 00:34:12,869
are able to send but there is some

613
00:34:11,129 --> 00:34:16,469
latency associated with it because you

614
00:34:12,869 --> 00:34:18,570
have to discover the source you have to

615
00:34:16,469 --> 00:34:20,969
punt it out of the data plane and then

616
00:34:18,570 --> 00:34:24,240
put it into your map cache before a

617
00:34:20,969 --> 00:34:26,040
return packet comes and then there's

618
00:34:24,239 --> 00:34:28,229
also the asymmetry problem where the

619
00:34:26,040 --> 00:34:30,359
mobile node 1 since the RTR one and the

620
00:34:28,230 --> 00:34:32,100
return traffic comes through our TR 2

621
00:34:30,359 --> 00:34:34,500
then the gleaned information is not an

622
00:34:32,100 --> 00:34:38,940
RT R 2 so that asymmetry causes a

623
00:34:34,500 --> 00:34:40,290
problem but and they they must do that

624
00:34:38,940 --> 00:34:42,179
they have to use the same five tuple

625
00:34:40,290 --> 00:34:43,830
hash on both sides and be configured

626
00:34:42,179 --> 00:34:45,810
with the same our TRS on both sides and

627
00:34:43,830 --> 00:34:47,460
then there's symmetric forwarding go

628
00:34:45,810 --> 00:34:50,040
ahead yeah just like quick question so

629
00:34:47,460 --> 00:34:53,310
there's technically configure a specific

630
00:34:50,040 --> 00:34:56,520
RTR on your mobile no yes okay

631
00:34:53,310 --> 00:34:58,650
absolutely yeah you we configure the

632
00:34:56,520 --> 00:34:59,700
mobile node with an instance ID so it

633
00:34:58,650 --> 00:35:02,250
could run in a VPN

634
00:34:59,700 --> 00:35:05,040
and an eID and we configure it with a

635
00:35:02,250 --> 00:35:06,869
list of our TRS and do not configure a

636
00:35:05,040 --> 00:35:10,440
map server so it's not using the mapping

637
00:35:06,869 --> 00:35:13,230
system whatsoever but just all this uses

638
00:35:10,440 --> 00:35:15,329
the RTR and that most yeah whatever yeah

639
00:35:13,230 --> 00:35:17,130
it's just basically everything that

640
00:35:15,329 --> 00:35:18,329
originates just goes and you'll find out

641
00:35:17,130 --> 00:35:20,849
for the multicast that there's some

642
00:35:18,329 --> 00:35:22,349
interesting control packets that just

643
00:35:20,849 --> 00:35:24,240
get encapsulated there too and you could

644
00:35:22,349 --> 00:35:26,790
guess with that I know it's also kind of

645
00:35:24,240 --> 00:35:30,899
challenging to implement multicast on

646
00:35:26,790 --> 00:35:33,029
the NA RTR in general oh I know it can

647
00:35:30,900 --> 00:35:35,099
be done but yeah oh yeah yeah I mean

648
00:35:33,030 --> 00:35:40,079
there's replication engineering issues

649
00:35:35,099 --> 00:35:41,490
yeah we very well aware of that I mean

650
00:35:40,079 --> 00:35:43,650
the same issues that everybody's dealing

651
00:35:41,490 --> 00:35:45,959
with when a MT really really right say

652
00:35:43,650 --> 00:35:47,880
it's the same sort of thing okay so to

653
00:35:45,960 --> 00:35:50,280
do list we want to enable our log

654
00:35:47,880 --> 00:35:53,130
probing for each ability so we want to

655
00:35:50,280 --> 00:35:55,380
be able to figure out if from the or our

656
00:35:53,130 --> 00:35:56,849
point of view on the phone if the RTR is

657
00:35:55,380 --> 00:35:58,710
are reachable versus not and when

658
00:35:56,849 --> 00:36:01,319
they're not reachable they use the other

659
00:35:58,710 --> 00:36:04,170
ones that they have configured and we

660
00:36:01,319 --> 00:36:06,359
want to be able to use list crypto which

661
00:36:04,170 --> 00:36:08,339
is data plane encryption so the our log

662
00:36:06,359 --> 00:36:10,650
probing has to contain key exchange and

663
00:36:08,339 --> 00:36:12,450
we have an RFC for that that that is

664
00:36:10,650 --> 00:36:14,130
used but we want to increase we want to

665
00:36:12,450 --> 00:36:17,578
change the implementation to support

666
00:36:14,130 --> 00:36:20,540
that and then maybe support multiple Eid

667
00:36:17,579 --> 00:36:23,099
and instanceid support so if you have

668
00:36:20,540 --> 00:36:25,079
professional vert you know it's it's a

669
00:36:23,099 --> 00:36:26,430
work phone or is it a personal phone and

670
00:36:25,079 --> 00:36:28,920
you want to run separately you could be

671
00:36:26,430 --> 00:36:30,990
able to do that so multi-tenancy support

672
00:36:28,920 --> 00:36:32,700
is what that is and then I of course I

673
00:36:30,990 --> 00:36:34,919
said in Montreal we got a new multicast

674
00:36:32,700 --> 00:36:36,808
that completes a picture and show that

675
00:36:34,920 --> 00:36:41,420
at this IETF and so that's what I'm

676
00:36:36,809 --> 00:36:49,130
about to show you now yeah go ahead

677
00:36:41,420 --> 00:36:51,599
so covers again the is this a unicast

678
00:36:49,130 --> 00:36:53,010
the the the connection to the RTR

679
00:36:51,599 --> 00:36:55,079
there's only one of them on the phone

680
00:36:53,010 --> 00:36:57,690
right there could be as many as you

681
00:36:55,079 --> 00:36:59,520
configure know that I mean in this demo

682
00:36:57,690 --> 00:37:02,990
there would not and one even if you were

683
00:36:59,520 --> 00:37:06,359
going to multiple destinations this we

684
00:37:02,990 --> 00:37:08,700
did it was one but it does work with for

685
00:37:06,359 --> 00:37:12,770
know the only reason women why I'm

686
00:37:08,700 --> 00:37:12,770
asking is you don't run into

687
00:37:12,900 --> 00:37:16,440
this isn't limited to working on certain

688
00:37:14,339 --> 00:37:18,299
kinds of Nats right you don't run into

689
00:37:16,440 --> 00:37:20,279
the problems that like the stunner turn

690
00:37:18,299 --> 00:37:21,739
people did it's just once you make an

691
00:37:20,279 --> 00:37:23,969
outbound connection in that port

692
00:37:21,739 --> 00:37:25,710
assignment on the NAT is stable and you

693
00:37:23,969 --> 00:37:27,450
use it for everything on the correct

694
00:37:25,710 --> 00:37:31,799
okay so it doesn't it's not coming from

695
00:37:27,450 --> 00:37:32,879
a different source address you're not

696
00:37:31,799 --> 00:37:35,910
gonna get packets from a different

697
00:37:32,880 --> 00:37:37,440
source of just trying to trying to send

698
00:37:35,910 --> 00:37:40,170
packets back to the phone on that port

699
00:37:37,440 --> 00:37:43,019
it would always be well the only the

700
00:37:40,170 --> 00:37:45,119
only way the RTR gets a packet the outer

701
00:37:43,019 --> 00:37:47,578
header has the translated source and

702
00:37:45,119 --> 00:37:49,859
port information in it and whatever

703
00:37:47,579 --> 00:37:51,749
translated if it was 2 Nats that did it

704
00:37:49,859 --> 00:37:54,029
it's going to go back to the first net

705
00:37:51,749 --> 00:37:55,649
so it does this stuff does work through

706
00:37:54,029 --> 00:37:58,170
double Nats or triple Nats or whatever

707
00:37:55,650 --> 00:38:00,479
or I guess maybe the bullet weight ammo

708
00:37:58,170 --> 00:38:02,849
actually goes through 4 Nats because

709
00:38:00,479 --> 00:38:06,419
it's going it when they went from my

710
00:38:02,849 --> 00:38:07,890
house to GCP there's Nats there so that

711
00:38:06,420 --> 00:38:10,140
that was a double man sometimes triple

712
00:38:07,890 --> 00:38:12,089
net so sorry I guess the I guess the

713
00:38:10,140 --> 00:38:14,848
best way to ask to ask the question that

714
00:38:12,089 --> 00:38:16,680
I was asking was it's a connection it's

715
00:38:14,849 --> 00:38:19,609
essentially a tunnel to the RTR

716
00:38:16,680 --> 00:38:24,328
absolutely okay yeah it's a dynamic

717
00:38:19,609 --> 00:38:25,650
encapsulating tunnel in uni P yep okay

718
00:38:24,329 --> 00:38:28,440
so multicast we can go through this

719
00:38:25,650 --> 00:38:30,960
quick so what are we doubling here again

720
00:38:28,440 --> 00:38:33,359
let's mobile node on the iPhone the RT R

721
00:38:30,960 --> 00:38:36,059
is deployed in GCP and we're only

722
00:38:33,359 --> 00:38:39,630
talking list to list spawn here because

723
00:38:36,059 --> 00:38:42,450
it was difficult to do non list but I

724
00:38:39,630 --> 00:38:43,349
have a surprise at the end that will you

725
00:38:42,450 --> 00:38:45,749
guys might enjoy

726
00:38:43,349 --> 00:38:47,579
so all multicast sources and receivers

727
00:38:45,749 --> 00:38:52,049
are on the list overlay is basically

728
00:38:47,579 --> 00:38:54,630
what the demo is okay saying this is all

729
00:38:52,049 --> 00:38:56,700
basically the same thing it's the same

730
00:38:54,630 --> 00:38:58,859
configuration saying we want to do

731
00:38:56,700 --> 00:39:02,308
lightweight stuff and again everything

732
00:38:58,859 --> 00:39:06,239
that's originated by the by the phone

733
00:39:02,309 --> 00:39:08,609
goes to the RTR so this mobile node is a

734
00:39:06,239 --> 00:39:10,440
multi you ask multicast receiver well

735
00:39:08,609 --> 00:39:13,319
when you bring up the application on the

736
00:39:10,440 --> 00:39:14,880
phone it will send an IGMP report of

737
00:39:13,319 --> 00:39:17,880
course the IGMP report is just in

738
00:39:14,880 --> 00:39:20,279
capsular like any other packet so the

739
00:39:17,880 --> 00:39:22,469
RTR contract group memberships from all

740
00:39:20,279 --> 00:39:24,329
the IGMP reports it received and then

741
00:39:22,469 --> 00:39:25,660
the RTR just replicate the packets to

742
00:39:24,329 --> 00:39:27,369
all the group members

743
00:39:25,660 --> 00:39:29,348
no matter where they were where they

744
00:39:27,369 --> 00:39:31,990
could be when the list mobile note is a

745
00:39:29,349 --> 00:39:33,730
multicast source on the list mobile node

746
00:39:31,990 --> 00:39:36,038
sends multicast packet just like any

747
00:39:33,730 --> 00:39:37,480
other packet to the are TRS so it

748
00:39:36,039 --> 00:39:39,339
doesn't matter if it's unicast or

749
00:39:37,480 --> 00:39:42,069
multicast it just sends it to the RT

750
00:39:39,339 --> 00:39:44,890
ours and the RT R has the group member

751
00:39:42,069 --> 00:39:46,299
list and so we can replicate there and

752
00:39:44,890 --> 00:39:48,220
I'll talk about in a minute how it does

753
00:39:46,299 --> 00:39:50,759
it with with multiple our TRS and

754
00:39:48,220 --> 00:39:53,470
members joining two different ones so

755
00:39:50,759 --> 00:39:55,119
basically the demo is showing that the

756
00:39:53,470 --> 00:39:57,578
list mobile mobile node can maintain

757
00:39:55,119 --> 00:40:00,819
multicast session continuity by

758
00:39:57,579 --> 00:40:03,849
switching between Wi-Fi and LTE either

759
00:40:00,819 --> 00:40:09,759
as a receiver a multicast receiver or as

760
00:40:03,849 --> 00:40:11,769
a multicast source okay so so the demo

761
00:40:09,759 --> 00:40:14,440
setup is pretty much the same as last

762
00:40:11,769 --> 00:40:16,750
time we have thirteen running low R and

763
00:40:14,440 --> 00:40:19,240
you have twenty five and fourteen as two

764
00:40:16,750 --> 00:40:21,490
containers running and we're gonna do

765
00:40:19,240 --> 00:40:22,538
two types of sub demos the first thing

766
00:40:21,490 --> 00:40:24,848
we're gonna do is we're going to show

767
00:40:22,539 --> 00:40:26,859
that there's a multicast video source

768
00:40:24,849 --> 00:40:28,990
sending two to 24 one one one from the

769
00:40:26,859 --> 00:40:31,808
container and the receiver is the phone

770
00:40:28,990 --> 00:40:35,049
okay and then the second demo we're

771
00:40:31,809 --> 00:40:36,880
going to show is that thirteen is a

772
00:40:35,049 --> 00:40:38,319
multicast source sending two to twenty

773
00:40:36,880 --> 00:40:47,759
four and it's being replicated to the

774
00:40:38,319 --> 00:40:50,200
two containers let's try this again yep

775
00:40:47,759 --> 00:40:52,630
so I'm basically just repeating what I

776
00:40:50,200 --> 00:40:55,569
just said now here are the two

777
00:40:52,630 --> 00:40:56,740
containers two separate windows and the

778
00:40:55,569 --> 00:40:59,259
first thing we're going to do is the

779
00:40:56,740 --> 00:41:01,750
ping so we're gonna about to set up the

780
00:40:59,259 --> 00:41:07,809
phone to send the ping and you'll see

781
00:41:01,750 --> 00:41:11,019
things scroll here so bring up the phone

782
00:41:07,809 --> 00:41:14,740
this is a shell a brute-force shell

783
00:41:11,019 --> 00:41:22,689
window and we're going to ping - - 24 -

784
00:41:14,740 --> 00:41:29,919
2 - which is for the ping demo you could

785
00:41:22,690 --> 00:41:31,190
almost hear it okay I'm about to tap

786
00:41:29,920 --> 00:41:35,810
that

787
00:41:31,190 --> 00:41:37,310
oh maybe I'm gonna tell you about who's

788
00:41:35,810 --> 00:41:41,390
who's receiving first yeah that's I'm

789
00:41:37,310 --> 00:41:43,820
going to show you so the two things are

790
00:41:41,390 --> 00:41:45,290
joined to the group - 24 - 2 - the way

791
00:41:43,820 --> 00:41:47,720
they do that is they register to the

792
00:41:45,290 --> 00:41:49,610
mapping system and this replication list

793
00:41:47,720 --> 00:41:54,350
entry is added so these are the our

794
00:41:49,610 --> 00:41:58,850
looks for Eid 25 and 14 and now the the

795
00:41:54,350 --> 00:42:00,799
pea is the ping is going and you see it

796
00:41:58,850 --> 00:42:03,110
appearing there so the replication is

797
00:42:00,800 --> 00:42:05,480
happening and if we refresh the RTR

798
00:42:03,110 --> 00:42:08,060
we'll see dark green there many packets

799
00:42:05,480 --> 00:42:13,400
are being moved and replicated to the

800
00:42:08,060 --> 00:42:18,980
two receivers we're sitting on Wi-Fi for

801
00:42:13,400 --> 00:42:21,290
the phone I'm showing you two packets

802
00:42:18,980 --> 00:42:24,590
are moving now I think I'm gonna switch

803
00:42:21,290 --> 00:42:26,330
I'm about to switch - sorry about my

804
00:42:24,590 --> 00:42:29,120
hands and there's an interesting filming

805
00:42:26,330 --> 00:42:32,140
problem here I dropped the camera it's

806
00:42:29,120 --> 00:42:34,430
sitting on an easel and I smash it so

807
00:42:32,140 --> 00:42:36,830
let's see if you actually noticed it I

808
00:42:34,430 --> 00:42:39,589
was pretty quick picking it up so now

809
00:42:36,830 --> 00:42:41,480
it's LTE and you see the pings go and

810
00:42:39,590 --> 00:42:45,280
then I'm gonna show you how the gleaning

811
00:42:41,480 --> 00:42:48,320
changed from the 73 Comcast address

812
00:42:45,280 --> 00:42:49,640
there's 13 but we're not sending any

813
00:42:48,320 --> 00:42:53,330
packets of 13 even though that was

814
00:42:49,640 --> 00:42:57,109
updated so now it's coming from 166

815
00:42:53,330 --> 00:43:02,990
which is the AT&T address it's an added

816
00:42:57,110 --> 00:43:10,660
address ok still on LTE I'm gonna switch

817
00:43:02,990 --> 00:43:15,770
over now to the video demo I'm starting

818
00:43:10,660 --> 00:43:19,609
there it is so VLC I'm starting VLC as a

819
00:43:15,770 --> 00:43:22,370
source here on 25 and then I'm going to

820
00:43:19,610 --> 00:43:24,410
join VLC on me as a receiver on the

821
00:43:22,370 --> 00:43:27,830
phone that's what's happening right now

822
00:43:24,410 --> 00:43:29,390
so that source is false starting up it's

823
00:43:27,830 --> 00:43:31,069
going to be a waterfall so you'll hear

824
00:43:29,390 --> 00:43:34,660
some static that's the actual Falls

825
00:43:31,070 --> 00:43:41,690
coming down in the video there's VLC

826
00:43:34,660 --> 00:43:43,759
coming up and when I tap on to 24 1 1 1

827
00:43:41,690 --> 00:43:44,059
that's when the IGMP report is going to

828
00:43:43,760 --> 00:43:48,380
be

829
00:43:44,059 --> 00:43:51,739
to the RTR and once I do that we'll show

830
00:43:48,380 --> 00:43:55,989
the RTR to see that 224 one one one was

831
00:43:51,739 --> 00:43:58,189
joined oh I don't know if you can hear

832
00:43:55,989 --> 00:44:00,019
there's the Falls you can see the Falls

833
00:43:58,189 --> 00:44:02,660
moving and stopping I'll tell you that

834
00:44:00,019 --> 00:44:04,399
why bat in this case there's 224 one one

835
00:44:02,660 --> 00:44:07,098
one and thirteen joined to it when it's

836
00:44:04,400 --> 00:44:12,920
our look note it's a 166 our look which

837
00:44:07,099 --> 00:44:17,390
means it's LTE still you hear a little

838
00:44:12,920 --> 00:44:20,209
bit of audio but now note this this is

839
00:44:17,390 --> 00:44:21,828
actually all the receivers and sources

840
00:44:20,209 --> 00:44:24,078
are at my house going all the way deep

841
00:44:21,829 --> 00:44:26,349
into GCP and back and that's why you see

842
00:44:24,079 --> 00:44:28,549
these delays because because the RTR

843
00:44:26,349 --> 00:44:31,339
everything's hair pinning right because

844
00:44:28,549 --> 00:44:32,930
it's it's a long path so the RTR is not

845
00:44:31,339 --> 00:44:34,849
placed in the best spot where all the

846
00:44:32,930 --> 00:44:37,189
sources and receivers are and that's

847
00:44:34,849 --> 00:44:39,170
always been a problem we've had with you

848
00:44:37,189 --> 00:44:43,249
know rendezvous points and amt relays

849
00:44:39,170 --> 00:44:46,549
and stuff like that so now I switch back

850
00:44:43,249 --> 00:44:48,769
to Wi-Fi you see the 73 address you

851
00:44:46,549 --> 00:44:52,699
notice the two twenty four one one won

852
00:44:48,769 --> 00:44:57,910
both the unicast address of the Eid and

853
00:44:52,699 --> 00:44:57,910
the group that it's showing is 13 13 13

854
00:44:57,969 --> 00:45:05,359
and that's it so we're able to to move

855
00:45:01,929 --> 00:45:08,329
across interfaces keep the sessions

856
00:45:05,359 --> 00:45:12,140
going and replicate both in the receiver

857
00:45:08,329 --> 00:45:15,259
and sender case so some observations

858
00:45:12,140 --> 00:45:18,529
glean latency does not exist as it does

859
00:45:15,259 --> 00:45:20,359
for unicast so that means that the

860
00:45:18,529 --> 00:45:22,400
reason it doesn't exist is because it's

861
00:45:20,359 --> 00:45:24,650
a unidirectional flow going from the

862
00:45:22,400 --> 00:45:26,420
phone to the receivers the gleaning

863
00:45:24,650 --> 00:45:26,869
information for unicast would only be

864
00:45:26,420 --> 00:45:29,329
useful

865
00:45:26,869 --> 00:45:31,489
unicast packets were coming back so

866
00:45:29,329 --> 00:45:34,189
since the source is just sending to the

867
00:45:31,489 --> 00:45:35,900
RTR gleaning as a source is not

868
00:45:34,189 --> 00:45:38,629
important but of course it is important

869
00:45:35,900 --> 00:45:40,609
as a receiver however you can't get the

870
00:45:38,630 --> 00:45:42,979
multicast data until you send the IGMP

871
00:45:40,609 --> 00:45:44,839
record so when you send the IGMP report

872
00:45:42,979 --> 00:45:47,029
the group membership is added and the

873
00:45:44,839 --> 00:45:50,599
gleaning happens at the same time this

874
00:45:47,029 --> 00:45:53,689
is where multicast has an advantage of

875
00:45:50,599 --> 00:45:55,910
your unicast now the problem is is if

876
00:45:53,689 --> 00:45:57,328
members are spread across our TRS the

877
00:45:55,910 --> 00:45:59,759
list mobile node needs to sense

878
00:45:57,329 --> 00:46:01,739
all our tiaras and so we have a draft

879
00:45:59,759 --> 00:46:05,549
called this replication engineering that

880
00:46:01,739 --> 00:46:07,099
shows how to put layers of replication

881
00:46:05,549 --> 00:46:09,989
engines in since this is an overlay

882
00:46:07,099 --> 00:46:12,989
replicating multicast packets in unicast

883
00:46:09,989 --> 00:46:15,059
packets we have two Eaton doing head end

884
00:46:12,989 --> 00:46:18,509
replication at various spots we have to

885
00:46:15,059 --> 00:46:21,239
do this at various locations the problem

886
00:46:18,509 --> 00:46:24,450
is all our defaults to one our TR

887
00:46:21,239 --> 00:46:27,180
because it it's just any packet it does

888
00:46:24,450 --> 00:46:30,839
a five tuple hash it picks one of many

889
00:46:27,180 --> 00:46:32,759
our TRS but if if your if the receivers

890
00:46:30,839 --> 00:46:34,828
are joined to other our TRS then you

891
00:46:32,759 --> 00:46:37,589
have a problem like this case right here

892
00:46:34,829 --> 00:46:39,390
if if the mobile phone was sending here

893
00:46:37,589 --> 00:46:41,578
this guy would only be replicating -

894
00:46:39,390 --> 00:46:44,160
what's joined but of course what you

895
00:46:41,579 --> 00:46:46,140
could do is you could have downstream

896
00:46:44,160 --> 00:46:48,390
RTR setup that these receivers are

897
00:46:46,140 --> 00:46:49,618
configured that join to and then since

898
00:46:48,390 --> 00:46:51,839
these things are registered to the

899
00:46:49,619 --> 00:46:54,869
mapping system when where the source

900
00:46:51,839 --> 00:46:56,609
just sends a packet to the upstream RT R

901
00:46:54,869 --> 00:46:58,769
the mapping system says that there's a

902
00:46:56,609 --> 00:47:00,569
replication here and so rather than

903
00:46:58,769 --> 00:47:03,419
having four replications at the source

904
00:47:00,569 --> 00:47:05,549
or four replications here you have one

905
00:47:03,420 --> 00:47:07,979
two and four where they need to be and

906
00:47:05,549 --> 00:47:10,519
it's relatively efficient ignoring the

907
00:47:07,979 --> 00:47:16,019
underlay because the underlay always

908
00:47:10,519 --> 00:47:27,109
those interesting things to an ESCO

909
00:47:16,019 --> 00:47:27,109
question takeoff is actually about the

910
00:47:29,470 --> 00:47:34,948
[Music]

911
00:47:31,759 --> 00:47:42,449
you have any vision for that how it

912
00:47:34,949 --> 00:47:45,420
would between them and you just created

913
00:47:42,449 --> 00:47:46,979
a segue to my next next next slide which

914
00:47:45,420 --> 00:47:47,609
is the surprise I have for you okay

915
00:47:46,979 --> 00:47:50,698
thank you

916
00:47:47,609 --> 00:47:58,589
but thanks for the question yeah that's

917
00:47:50,699 --> 00:48:01,589
a plant I'll pay you later Jake so if

918
00:47:58,589 --> 00:48:04,019
the archer had like native multicast it

919
00:48:01,589 --> 00:48:06,019
was like in a pen domain whatever then

920
00:48:04,019 --> 00:48:10,680
it would work fine sending and receiving

921
00:48:06,019 --> 00:48:12,930
- from native multicasts all right the

922
00:48:10,680 --> 00:48:15,120
answers yes and that's also segue into

923
00:48:12,930 --> 00:48:17,220
the next slide okay so the RT are

924
00:48:15,120 --> 00:48:19,529
typically d caps and Riaan capsule

925
00:48:17,220 --> 00:48:21,600
eighths if it just D caps and needs to

926
00:48:19,530 --> 00:48:23,700
place it on an interface that would go

927
00:48:21,600 --> 00:48:26,819
into an e TR function but it's just a

928
00:48:23,700 --> 00:48:29,669
matter of that the the e TR knows not to

929
00:48:26,820 --> 00:48:31,170
do another map cache look up to try to

930
00:48:29,670 --> 00:48:34,050
re encapsulate it because it's at the

931
00:48:31,170 --> 00:48:35,780
end of its thing right good good

932
00:48:34,050 --> 00:48:41,810
question though

933
00:48:35,780 --> 00:48:49,050
how am i doing on time so ok on time

934
00:48:41,810 --> 00:48:53,100
what is this by the way ASM SSN neither

935
00:48:49,050 --> 00:48:55,740
I don't care so what happens what's the

936
00:48:53,100 --> 00:48:58,770
joins the IGMP joins it's an IgM PV to

937
00:48:55,740 --> 00:49:00,600
join on the group ok and what I decide

938
00:48:58,770 --> 00:49:05,630
to store in the mapping system is a 0

939
00:49:00,600 --> 00:49:08,940
slash 0 comma 225 1 1 1 so that is a

940
00:49:05,630 --> 00:49:10,290
source specific join kind of but it's

941
00:49:08,940 --> 00:49:12,180
really star G because it means

942
00:49:10,290 --> 00:49:13,620
everything and the reason I'm doing that

943
00:49:12,180 --> 00:49:15,810
is because I don't want to inundate the

944
00:49:13,620 --> 00:49:17,640
mapping system with Eskimo G's so it's

945
00:49:15,810 --> 00:49:22,200
really a star comma G design without an

946
00:49:17,640 --> 00:49:24,390
RP purposely done that way okay so that

947
00:49:22,200 --> 00:49:25,109
is a SM so every every source content

948
00:49:24,390 --> 00:49:28,440
did you

949
00:49:25,110 --> 00:49:30,660
there's no joining and pruning off SG

950
00:49:28,440 --> 00:49:33,210
trees so that's why that's so you can't

951
00:49:30,660 --> 00:49:36,990
say it's a SM because I can say it's a

952
00:49:33,210 --> 00:49:40,500
SM because we never mind you can't say

953
00:49:36,990 --> 00:49:42,720
it a SM because it's not pin no a SM is

954
00:49:40,500 --> 00:49:45,180
the service model it's not the protocol

955
00:49:42,720 --> 00:49:46,709
ok it's just it's just you're joining a

956
00:49:45,180 --> 00:49:48,149
group and you get the traffic from all

957
00:49:46,710 --> 00:49:50,370
the source that's all it is there's

958
00:49:48,150 --> 00:49:51,600
nothing to do with PIM yeah right that's

959
00:49:50,370 --> 00:49:53,940
fine ok cool

960
00:49:51,600 --> 00:49:56,250
and if you want source specific state in

961
00:49:53,940 --> 00:49:58,470
there you can't put it in and and since

962
00:49:56,250 --> 00:50:00,480
the map cache look up does longest match

963
00:49:58,470 --> 00:50:02,580
lookups it does along as match look up

964
00:50:00,480 --> 00:50:04,500
on the destination first and then does a

965
00:50:02,580 --> 00:50:06,270
long as mesh look up on the source so

966
00:50:04,500 --> 00:50:09,000
you could you could have more specifics

967
00:50:06,270 --> 00:50:11,040
I think as one that's really important

968
00:50:09,000 --> 00:50:13,410
sometimes because if the source is going

969
00:50:11,040 --> 00:50:15,990
to move it may move to a different spot

970
00:50:13,410 --> 00:50:17,430
and you don't there's no RPF going on

971
00:50:15,990 --> 00:50:19,229
here but sometimes you want more

972
00:50:17,430 --> 00:50:21,029
specific because you want to be able to

973
00:50:19,230 --> 00:50:23,750
detect that the sources moved away from

974
00:50:21,030 --> 00:50:23,750
0/0

975
00:50:23,880 --> 00:50:29,340
that's really talked about that over

976
00:50:26,460 --> 00:50:32,160
beers no I think the the interesting

977
00:50:29,340 --> 00:50:33,840
stuff about SSM would primarily be as an

978
00:50:32,160 --> 00:50:35,609
access control mechanism right if you

979
00:50:33,840 --> 00:50:38,160
don't want to allow everybody to send

980
00:50:35,610 --> 00:50:40,800
what how what type of exes control let's

981
00:50:38,160 --> 00:50:42,540
say do you think you want to you can you

982
00:50:40,800 --> 00:50:45,300
can access it may go beyond the demo so

983
00:50:42,540 --> 00:50:46,770
I don't yeah you yeah well I mean I

984
00:50:45,300 --> 00:50:50,130
could a quick really quick answer you

985
00:50:46,770 --> 00:50:52,230
can access control by limiting whoever

986
00:50:50,130 --> 00:50:54,270
sends map requests to the mapping system

987
00:50:52,230 --> 00:50:58,550
you can say who who gets answers versus

988
00:50:54,270 --> 00:51:01,140
not so now in this lightweight control

989
00:50:58,550 --> 00:51:03,060
mechanism a map request is never sent by

990
00:51:01,140 --> 00:51:06,810
the phone because it always matches 0/0

991
00:51:03,060 --> 00:51:08,640
so there's never a map cache miss so you

992
00:51:06,810 --> 00:51:10,950
would have to filter at the data plane

993
00:51:08,640 --> 00:51:12,839
but most of the policy based and

994
00:51:10,950 --> 00:51:15,419
filtering stuff in Lisp happens at the

995
00:51:12,840 --> 00:51:17,490
control plane because we don't want to

996
00:51:15,420 --> 00:51:26,610
do data plane ACLs because it's a total

997
00:51:17,490 --> 00:51:30,060
mess that's application layer absolutely

998
00:51:26,610 --> 00:51:32,370
yeah okay so we just started this a

999
00:51:30,060 --> 00:51:34,440
couple weeks ago this is kind of work in

1000
00:51:32,370 --> 00:51:37,560
progress but Lenny wanted to try some

1001
00:51:34,440 --> 00:51:40,050
stuff where he said can we source some

1002
00:51:37,560 --> 00:51:43,020
packets from a mobile phone and Lisp and

1003
00:51:40,050 --> 00:51:44,940
then bring it into the AMT cloud and

1004
00:51:43,020 --> 00:51:47,070
actually just this morning we got it

1005
00:51:44,940 --> 00:51:53,490
working what we got working as a when at

1006
00:51:47,070 --> 00:51:55,350
the list working group I said I said I

1007
00:51:53,490 --> 00:51:57,089
really want to do it to work as I wanted

1008
00:51:55,350 --> 00:51:59,069
to show you guys an EM buddy what's

1009
00:51:57,090 --> 00:52:00,750
going on here so the idea is we were

1010
00:51:59,070 --> 00:52:02,640
just using ping as a source from the

1011
00:52:00,750 --> 00:52:08,180
phone and of course we had to list

1012
00:52:02,640 --> 00:52:12,359
receivers and then we have this et and

1013
00:52:08,180 --> 00:52:15,149
so so basically the the GRT are one was

1014
00:52:12,360 --> 00:52:16,590
replicating the three places now what's

1015
00:52:15,150 --> 00:52:18,360
really interesting we did this at the

1016
00:52:16,590 --> 00:52:20,340
Olympics as well what's really

1017
00:52:18,360 --> 00:52:24,570
interesting here is that packet is being

1018
00:52:20,340 --> 00:52:27,630
sourced by 13 to 224 333 if you dump

1019
00:52:24,570 --> 00:52:30,780
that into that native mbone there it's

1020
00:52:27,630 --> 00:52:32,040
not going to RPF right so we this is an

1021
00:52:30,780 --> 00:52:34,050
inner working function where some

1022
00:52:32,040 --> 00:52:36,970
receivers are Nautilus been some or less

1023
00:52:34,050 --> 00:52:43,360
so what happens is is

1024
00:52:36,970 --> 00:52:45,100
the packet after gets D capsule there it

1025
00:52:43,360 --> 00:52:49,510
actually translates the source address

1026
00:52:45,100 --> 00:52:53,680
to the IP address so the EMT relayed

1027
00:52:49,510 --> 00:52:55,750
believes all the packets there and

1028
00:52:53,680 --> 00:52:58,060
that's why our PF works all the way

1029
00:52:55,750 --> 00:53:00,310
through the cloud so the packet actually

1030
00:52:58,060 --> 00:53:02,500
makes it through that native multicast

1031
00:53:00,310 --> 00:53:04,690
cloud and the ante that relay then picks

1032
00:53:02,500 --> 00:53:08,260
it up and replicates it to the gateways

1033
00:53:04,690 --> 00:53:10,690
that have been joined 2 to 24 3 3 3 so

1034
00:53:08,260 --> 00:53:12,850
the all ours running on the phone list

1035
00:53:10,690 --> 00:53:17,340
first met on the our tyranny T are in a

1036
00:53:12,850 --> 00:53:44,620
Juniper as the AMT relay so did I answer

1037
00:53:17,340 --> 00:53:46,240
stick in Jake's question so are you

1038
00:53:44,620 --> 00:53:49,839
saying how does the joining happen down

1039
00:53:46,240 --> 00:54:08,290
there so that was a question I had for

1040
00:53:49,840 --> 00:54:25,480
Laney goes just do it static so the only

1041
00:54:08,290 --> 00:54:26,500
reason it's like this is because stake I

1042
00:54:25,480 --> 00:54:33,090
answer your question

1043
00:54:26,500 --> 00:54:33,090
no ok so that's it any other questions

1044
00:54:42,290 --> 00:54:45,449
[Applause]

1045
00:56:28,980 --> 00:56:35,430
all that has changed the access right

1046
00:56:33,070 --> 00:56:35,430
it's just

1047
00:56:44,030 --> 00:58:21,780
yeah oh close and open the lid some

1048
00:58:07,740 --> 00:58:32,479
sent me that message God kind of reaches

1049
00:58:21,780 --> 00:58:38,540
in tells me thank you

1050
00:58:32,480 --> 00:58:45,780
okay did I just all right

1051
00:58:38,540 --> 00:58:47,640
am i closing it sounds like okay I'm J :

1052
00:58:45,780 --> 00:58:49,859
I'm gonna talk about multicast to the

1053
00:58:47,640 --> 00:58:51,140
browser this is project I'm working on

1054
00:58:49,859 --> 00:58:54,230
it's composed

1055
00:58:51,140 --> 00:58:58,098
so far of these three drafts and a

1056
00:58:54,230 --> 00:59:07,099
double USCG proposal which is posted

1057
00:58:58,099 --> 00:59:09,619
here okay so the goal here is to receive

1058
00:59:07,099 --> 00:59:14,269
multicast in Java their JavaScript um

1059
00:59:09,619 --> 00:59:16,579
this is a you know and the goal behind

1060
00:59:14,269 --> 00:59:18,258
that goal is to port receivers to web

1061
00:59:16,579 --> 00:59:21,890
assembly and distribute them over web

1062
00:59:18,259 --> 00:59:23,630
pages I want to I specifically want to

1063
00:59:21,890 --> 00:59:27,009
include here proprietary players and

1064
00:59:23,630 --> 00:59:30,079
downloaders because well I have one and

1065
00:59:27,009 --> 00:59:33,319
there are something like six at least

1066
00:59:30,079 --> 00:59:35,569
others out there and plus BBC's thing

1067
00:59:33,319 --> 00:59:37,339
and I would like all of them to work so

1068
00:59:35,569 --> 00:59:39,680
we can just sort of fight those

1069
00:59:37,339 --> 00:59:41,900
protocols out in production and see what

1070
00:59:39,680 --> 00:59:44,149
actually performs the best and the goal

1071
00:59:41,900 --> 00:59:46,519
is my main two use cases are playing

1072
00:59:44,150 --> 00:59:48,619
video and downloading files there may be

1073
00:59:46,519 --> 00:59:52,999
other things but those are the things I

1074
00:59:48,619 --> 00:59:57,109
actually the second goal is to do so

1075
00:59:52,999 --> 01:00:01,098
safely so that well so that it can be

1076
00:59:57,109 --> 01:00:05,900
accepted into the browser check-ins sort

1077
01:00:01,099 --> 01:00:07,910
of ecosystem so you know when you talk

1078
01:00:05,900 --> 01:00:10,039
to the browser to people who work on

1079
01:00:07,910 --> 01:00:12,019
browsers they're highly aware that all

1080
01:00:10,039 --> 01:00:14,720
web pages are malicious and all

1081
01:00:12,019 --> 01:00:17,988
JavaScript inside even non malicious web

1082
01:00:14,720 --> 01:00:20,509
pages are also malicious so the goal

1083
01:00:17,989 --> 01:00:24,380
here is and and likewise that the

1084
01:00:20,509 --> 01:00:28,700
network itself is typically malicious so

1085
01:00:24,380 --> 01:00:29,960
I am trying to address the sort of

1086
01:00:28,700 --> 01:00:34,989
security model that they're used to

1087
01:00:29,960 --> 01:00:37,640
working with in browsers as opposed to

1088
01:00:34,989 --> 01:00:41,239
the kind of wall garden places where

1089
01:00:37,640 --> 01:00:42,890
multicast has so far been successful the

1090
01:00:41,239 --> 01:00:44,599
two main things that I'm trying to

1091
01:00:42,890 --> 01:00:49,160
accomplish at this point is to resist on

1092
01:00:44,599 --> 01:00:51,739
injection and/or packet modification and

1093
01:00:49,160 --> 01:00:53,359
to prevent malicious pages from doing

1094
01:00:51,739 --> 01:00:56,200
anything to the networks that are trying

1095
01:00:53,359 --> 01:00:56,200
to receive multicast

1096
01:00:57,540 --> 01:01:03,190
so these are the specs and the things

1097
01:00:59,890 --> 01:01:06,308
that they do is the WI CG spec that I

1098
01:01:03,190 --> 01:01:08,980
mentioned is a tries to define a

1099
01:01:06,309 --> 01:01:11,800
multicast receiver API in which the page

1100
01:01:08,980 --> 01:01:16,089
can do a join and start receiving

1101
01:01:11,800 --> 01:01:19,270
traffic the IETF specs that I have one

1102
01:01:16,089 --> 01:01:20,799
is called dorms this is discovery I'll

1103
01:01:19,270 --> 01:01:23,430
go over each of them in a little more

1104
01:01:20,800 --> 01:01:28,960
detail but the broad outline is that

1105
01:01:23,430 --> 01:01:36,730
there's just metadata that is available

1106
01:01:28,960 --> 01:01:38,619
to the to the the nodes that need to

1107
01:01:36,730 --> 01:01:40,390
have the metadata so it is the kind of

1108
01:01:38,619 --> 01:01:41,670
substrate to provide this metadata which

1109
01:01:40,390 --> 01:01:45,098
I'll go over briefly

1110
01:01:41,670 --> 01:01:46,480
ambi it uses this metadata to provide

1111
01:01:45,099 --> 01:01:48,940
the information necessary to

1112
01:01:46,480 --> 01:01:51,280
authenticate per packet that the data

1113
01:01:48,940 --> 01:01:55,150
that's being received by the browser or

1114
01:01:51,280 --> 01:01:56,410
even by a sort of multicast firewall you

1115
01:01:55,150 --> 01:01:58,990
can think of it so you can put one in

1116
01:01:56,410 --> 01:02:00,879
the network to prevent injection from

1117
01:01:58,990 --> 01:02:04,209
outside it for example an angel point

1118
01:02:00,880 --> 01:02:07,059
with your EMT campaign and then sivak is

1119
01:02:04,210 --> 01:02:10,359
another different usage extending the

1120
01:02:07,059 --> 01:02:11,619
metadata is such that you can detect

1121
01:02:10,359 --> 01:02:13,150
whether you're going to be over

1122
01:02:11,619 --> 01:02:15,040
subscribed so that you can maintain your

1123
01:02:13,150 --> 01:02:17,309
safety thresholds about how much traffic

1124
01:02:15,040 --> 01:02:21,790
you're willing to be subscribed to and

1125
01:02:17,309 --> 01:02:25,030
avoid joining the the flow if you would

1126
01:02:21,790 --> 01:02:27,700
have exceeded that threshold there have

1127
01:02:25,030 --> 01:02:29,770
been some suggestions about about maybe

1128
01:02:27,700 --> 01:02:31,359
providing a way to trim it I'm totally

1129
01:02:29,770 --> 01:02:34,900
open to that this is still very early

1130
01:02:31,359 --> 01:02:39,220
work but these are the general outlines

1131
01:02:34,900 --> 01:02:41,530
of what this is trying to accomplish the

1132
01:02:39,220 --> 01:02:45,430
way that it's implemented or the way

1133
01:02:41,530 --> 01:02:49,210
that it's it would move forward is that

1134
01:02:45,430 --> 01:02:52,509
the there's this JavaScript over on the

1135
01:02:49,210 --> 01:02:55,660
left and it's just gonna create a

1136
01:02:52,510 --> 01:02:59,200
multicast receiver object and pass it a

1137
01:02:55,660 --> 01:03:00,670
callback for receiving data so you just

1138
01:02:59,200 --> 01:03:03,098
issue a join and you start receiving

1139
01:03:00,670 --> 01:03:05,500
authenticated payloads if you are indeed

1140
01:03:03,099 --> 01:03:07,569
successful this can do the tunneling

1141
01:03:05,500 --> 01:03:11,109
with the Dryad that we've that we

1142
01:03:07,569 --> 01:03:15,808
they've been the is I guess just gone to

1143
01:03:11,109 --> 01:03:18,339
last call I think and the idea is that

1144
01:03:15,809 --> 01:03:20,709
inside the browser you can provide all

1145
01:03:18,339 --> 01:03:22,269
the guardrails so all these all these

1146
01:03:20,709 --> 01:03:24,430
pieces that are trying to provide safety

1147
01:03:22,269 --> 01:03:27,279
to the network even if the JavaScript is

1148
01:03:24,430 --> 01:03:28,989
malicious it's it's limited in what it

1149
01:03:27,279 --> 01:03:32,650
can accomplish because the browser is

1150
01:03:28,989 --> 01:03:33,880
going to notice that oh you tried to

1151
01:03:32,650 --> 01:03:36,099
join something that's too big that'll

1152
01:03:33,880 --> 01:03:37,660
blow out the network or the blow out the

1153
01:03:36,099 --> 01:03:40,930
thing and it's also going to be able to

1154
01:03:37,660 --> 01:03:43,449
monitor the loss ambi provides manifests

1155
01:03:40,930 --> 01:03:44,969
and the manifests give you so I'll get

1156
01:03:43,449 --> 01:03:49,239
into that in a moment

1157
01:03:44,969 --> 01:03:51,369
and so it's essentially just making the

1158
01:03:49,239 --> 01:03:53,559
decision is the safe to join and then

1159
01:03:51,369 --> 01:03:57,489
after issuing a join and starting to

1160
01:03:53,559 --> 01:04:00,009
receive traffic noticing if something is

1161
01:03:57,489 --> 01:04:03,009
out of whack and providing that feedback

1162
01:04:00,009 --> 01:04:05,170
to the to JavaScript and providing a

1163
01:04:03,009 --> 01:04:07,269
backstop of cutting off the JavaScript

1164
01:04:05,170 --> 01:04:08,829
if it turns out that this is even worse

1165
01:04:07,269 --> 01:04:12,008
than me then we thought for whatever

1166
01:04:08,829 --> 01:04:14,109
reason in addition to the browser

1167
01:04:12,009 --> 01:04:17,559
providing safety checks the network also

1168
01:04:14,109 --> 01:04:22,359
can access the same meta data and you

1169
01:04:17,559 --> 01:04:24,819
can operate a sort of empath a network

1170
01:04:22,359 --> 01:04:27,249
firewall that can that can do the same

1171
01:04:24,819 --> 01:04:29,799
kinds of operations using the same

1172
01:04:27,249 --> 01:04:31,988
metadata which I'll go over again in a

1173
01:04:29,799 --> 01:04:35,949
moment now then the the authentication

1174
01:04:31,989 --> 01:04:37,509
and loss detection is you may or may not

1175
01:04:35,949 --> 01:04:40,660
that you choose to run it in your

1176
01:04:37,509 --> 01:04:43,059
browser this is a written it as in my

1177
01:04:40,660 --> 01:04:45,098
router but I think of it in practice

1178
01:04:43,059 --> 01:04:47,140
probably more than in jest point or at a

1179
01:04:45,099 --> 01:04:52,539
you know joke point of some sort for

1180
01:04:47,140 --> 01:04:54,670
your network so dorms dorms is discovery

1181
01:04:52,539 --> 01:04:57,459
of rest comp metadata for SSM I've

1182
01:04:54,670 --> 01:05:01,390
defined a very small very simple yang

1183
01:04:57,459 --> 01:05:04,930
model for and the intent is to limit in

1184
01:05:01,390 --> 01:05:10,118
a restaurant server and to use this to

1185
01:05:04,930 --> 01:05:13,419
publish indexable metadata / SG so that

1186
01:05:10,119 --> 01:05:15,640
you can provide that the so as a sender

1187
01:05:13,420 --> 01:05:17,799
as a source of traffic I can put up my

1188
01:05:15,640 --> 01:05:20,949
my dorm server I can

1189
01:05:17,799 --> 01:05:24,699
seed it with the metadata about my my

1190
01:05:20,949 --> 01:05:26,890
streams and I can and then anybody who's

1191
01:05:24,699 --> 01:05:29,529
trying to join traffic that I'm that

1192
01:05:26,890 --> 01:05:34,828
I've provided would have access to fetch

1193
01:05:29,529 --> 01:05:39,640
it from from my from my dorm servers

1194
01:05:34,829 --> 01:05:42,999
using these nicely well-defined web api

1195
01:05:39,640 --> 01:05:45,519
is essentially that the that specified

1196
01:05:42,999 --> 01:05:51,428
the the format and the meaning of the

1197
01:05:45,519 --> 01:05:53,589
various fields within the within the the

1198
01:05:51,429 --> 01:05:57,489
the HTTP requests are going back and

1199
01:05:53,589 --> 01:06:00,880
forth restaurant provides a so all you

1200
01:05:57,489 --> 01:06:03,219
need to start this whole thing is the is

1201
01:06:00,880 --> 01:06:07,900
the hostname of the dorm server and then

1202
01:06:03,219 --> 01:06:10,269
you get to do you get the the hooks to

1203
01:06:07,900 --> 01:06:13,209
bootstrap up to finding the appropriate

1204
01:06:10,269 --> 01:06:18,069
metadata when you know the SG already

1205
01:06:13,209 --> 01:06:20,709
and then it also provides a particularly

1206
01:06:18,069 --> 01:06:22,660
for the browser

1207
01:06:20,709 --> 01:06:25,149
you know when the browser is going to

1208
01:06:22,660 --> 01:06:27,428
require access to the metadata then from

1209
01:06:25,150 --> 01:06:31,869
the from the server side you can check

1210
01:06:27,429 --> 01:06:33,969
the origin header and refused refused to

1211
01:06:31,869 --> 01:06:36,189
allow browser that you know like

1212
01:06:33,969 --> 01:06:37,929
malicious ads that came from the wrong

1213
01:06:36,189 --> 01:06:42,879
kind of paid to join there to join a

1214
01:06:37,929 --> 01:06:45,069
stream from an inappropriate source just

1215
01:06:42,880 --> 01:06:48,249
by refusing to provide the metadata to

1216
01:06:45,069 --> 01:06:51,609
the browser right so it there's a viable

1217
01:06:48,249 --> 01:06:57,569
threat model that is that is prevented

1218
01:06:51,609 --> 01:07:01,209
from from executing so it looks like is

1219
01:06:57,569 --> 01:07:06,689
as find is just you're going to issue a

1220
01:07:01,209 --> 01:07:10,078
a yet for the metadata it has the SG

1221
01:07:06,689 --> 01:07:13,868
provided and then you get you know the

1222
01:07:10,079 --> 01:07:15,939
the dorms substrate for passing the

1223
01:07:13,869 --> 01:07:17,739
metadata is very stupid and has almost

1224
01:07:15,939 --> 01:07:22,029
no useful information it just has the

1225
01:07:17,739 --> 01:07:24,969
structure of where the SG is but when

1226
01:07:22,029 --> 01:07:28,829
you put metadata into it it's done as an

1227
01:07:24,969 --> 01:07:30,630
augment of the of the dorms metadata

1228
01:07:28,829 --> 01:07:32,729
it ends up looking like this instead so

1229
01:07:30,630 --> 01:07:34,589
you make the request and you get

1230
01:07:32,729 --> 01:07:35,700
something that has actually useful

1231
01:07:34,589 --> 01:07:37,650
information in it this useful

1232
01:07:35,700 --> 01:07:40,200
information being here is what you do in

1233
01:07:37,650 --> 01:07:42,630
order to go to form the authentication

1234
01:07:40,200 --> 01:07:46,379
all right same thing for see back it's

1235
01:07:42,630 --> 01:07:49,109
just a little bit of extra stuff okay so

1236
01:07:46,380 --> 01:07:50,549
on top of the substrate we put ambi

1237
01:07:49,109 --> 01:07:55,650
which is a symmetric manifest based

1238
01:07:50,549 --> 01:07:57,509
integrity the idea here is that you are

1239
01:07:55,650 --> 01:08:00,539
going to provide an authenticated stream

1240
01:07:57,509 --> 01:08:02,609
of out-of-band manifests the manifests

1241
01:08:00,539 --> 01:08:04,769
contain hashes of all the packets so

1242
01:08:02,609 --> 01:08:07,109
that when you are receiving your

1243
01:08:04,769 --> 01:08:08,459
multicast packets now you can you have

1244
01:08:07,109 --> 01:08:11,459
an authentication stream which is

1245
01:08:08,459 --> 01:08:13,828
provided authenticated through an

1246
01:08:11,459 --> 01:08:15,930
out-of-band mechanism and you just cross

1247
01:08:13,829 --> 01:08:18,750
check your manifests with your hashes so

1248
01:08:15,930 --> 01:08:20,040
that so that you can decide the things

1249
01:08:18,750 --> 01:08:25,759
that you've received are the things that

1250
01:08:20,040 --> 01:08:28,259
the sender actually sent you and the the

1251
01:08:25,759 --> 01:08:30,689
you know the things you did not receive

1252
01:08:28,259 --> 01:08:35,779
were the sender thinks he sent them to

1253
01:08:30,689 --> 01:08:39,778
you so they must have been lost okay the

1254
01:08:35,779 --> 01:08:40,859
things one looks roughly like this

1255
01:08:39,779 --> 01:08:44,909
you've got the receivers down on the

1256
01:08:40,859 --> 01:08:46,469
bottom right and they you know if you

1257
01:08:44,908 --> 01:08:49,318
get a pack up without hash it was moved

1258
01:08:46,469 --> 01:08:51,359
or correct hash without a packet is lost

1259
01:08:49,319 --> 01:08:53,549
you've got the multicast data coming

1260
01:08:51,359 --> 01:08:58,679
down and being forwarded through

1261
01:08:53,549 --> 01:09:02,368
whatever you know I hope you can get it

1262
01:08:58,679 --> 01:09:06,420
and you've got the the authentication

1263
01:09:02,368 --> 01:09:08,608
data coming down as a unicast stream

1264
01:09:06,420 --> 01:09:10,500
containing these hashes and the

1265
01:09:08,609 --> 01:09:12,270
authentication data depending which ash

1266
01:09:10,500 --> 01:09:14,460
scheme you use is gonna be like one two

1267
01:09:12,270 --> 01:09:16,980
three percent of the data you use this

1268
01:09:14,460 --> 01:09:20,279
this by the way assumes a full size

1269
01:09:16,979 --> 01:09:23,250
packet approximately if you're gonna use

1270
01:09:20,279 --> 01:09:24,690
like you know 20 packets then you're

1271
01:09:23,250 --> 01:09:28,859
going to have approximately a hundred

1272
01:09:24,689 --> 01:09:34,169
percent overhead instead but that's you

1273
01:09:28,859 --> 01:09:36,119
know it well no you know it the hashes a

1274
01:09:34,170 --> 01:09:38,520
crypto hash so you're gonna choose the

1275
01:09:36,118 --> 01:09:40,649
heck crypto algorithm you can it's it's

1276
01:09:38,520 --> 01:09:42,440
selectable the one I'm running in the

1277
01:09:40,649 --> 01:09:45,979
demo is a shake 128 six

1278
01:09:42,439 --> 01:09:48,589
- you can you know if this is proven to

1279
01:09:45,979 --> 01:09:50,990
be insufficient then of course you can

1280
01:09:48,590 --> 01:09:57,080
choose that 32-byte hash with shot 256

1281
01:09:50,990 --> 01:10:00,110
or whatever it will end up on yeah so in

1282
01:09:57,080 --> 01:10:02,420
phase 2 we've talked about this a little

1283
01:10:00,110 --> 01:10:04,570
bit before but the goal is to turn it

1284
01:10:02,420 --> 01:10:07,100
into something that's going to have

1285
01:10:04,570 --> 01:10:09,469
that's going to have signatures inside

1286
01:10:07,100 --> 01:10:12,680
the multicast data streams so that you

1287
01:10:09,470 --> 01:10:14,450
can authenticate by listening to the

1288
01:10:12,680 --> 01:10:16,790
multicast stream and then you will not

1289
01:10:14,450 --> 01:10:20,480
have 1 2 3 percent of unicast data

1290
01:10:16,790 --> 01:10:21,650
overhead but you'll have this similar it

1291
01:10:20,480 --> 01:10:24,740
might be a little higher it might be

1292
01:10:21,650 --> 01:10:26,980
like 5% overhead but it'll be inside the

1293
01:10:24,740 --> 01:10:32,030
multicast stream so you don't have to

1294
01:10:26,980 --> 01:10:34,190
you no longer have a new unicast ceiling

1295
01:10:32,030 --> 01:10:37,519
on what he can accomplish at only 50 or

1296
01:10:34,190 --> 01:10:40,370
30 to 1 but rather a multicast thing

1297
01:10:37,520 --> 01:10:42,440
with a little bit of extra iske Kyle

1298
01:10:40,370 --> 01:10:44,930
Rose yeah just to the point about the

1299
01:10:42,440 --> 01:10:46,309
hash length I think we we expect to have

1300
01:10:44,930 --> 01:10:48,670
a fight with the security Directorate

1301
01:10:46,310 --> 01:10:51,920
over how long the hashes need to be

1302
01:10:48,670 --> 01:10:54,530
relative to how timely the data is

1303
01:10:51,920 --> 01:10:57,650
basically you know if you're the data is

1304
01:10:54,530 --> 01:11:00,139
only valid for two minutes

1305
01:10:57,650 --> 01:11:05,210
then do you really need a 32-bit hash

1306
01:11:00,140 --> 01:11:07,550
not clear yeah this is a longer time

1307
01:11:05,210 --> 01:11:08,900
discussion sorry even a 16 byte hash is

1308
01:11:07,550 --> 01:11:11,300
like questionable do you really need

1309
01:11:08,900 --> 01:11:13,540
that or it but you know what it's fine I

1310
01:11:11,300 --> 01:11:13,540
don't care

1311
01:11:15,490 --> 01:11:24,860
overhead notice but I'm actually happy

1312
01:11:17,630 --> 01:11:26,990
with either at this stage okay see back

1313
01:11:24,860 --> 01:11:29,299
is the circuit breaker assistant Justin

1314
01:11:26,990 --> 01:11:31,460
just comment that you just don't a

1315
01:11:29,300 --> 01:11:34,310
number 5 percent on the unicast case is

1316
01:11:31,460 --> 01:11:36,020
5% per receiver once you're in banos

1317
01:11:34,310 --> 01:11:38,260
five percent for this obsession right so

1318
01:11:36,020 --> 01:11:40,790
it's a massive reduction so yeah yeah

1319
01:11:38,260 --> 01:11:43,640
the this is this is a massive reduction

1320
01:11:40,790 --> 01:11:45,590
it's just not I mean even me yes it is a

1321
01:11:43,640 --> 01:11:49,210
massive reduction it's just not my

1322
01:11:45,590 --> 01:11:49,210
endgame as far as I see

1323
01:11:49,230 --> 01:11:57,870
um okay so let's see back the idea is

1324
01:11:55,260 --> 01:12:02,160
that you the the metadata provides a max

1325
01:11:57,870 --> 01:12:06,630
bitrate for the stream and the you know

1326
01:12:02,160 --> 01:12:09,120
the the place at which the the

1327
01:12:06,630 --> 01:12:10,680
controller is operating which would be

1328
01:12:09,120 --> 01:12:12,239
in the browser certainly and also

1329
01:12:10,680 --> 01:12:15,390
perhaps in the network I think this is

1330
01:12:12,239 --> 01:12:19,259
more useful in the network than the

1331
01:12:15,390 --> 01:12:22,860
authentication probably as opposed to

1332
01:12:19,260 --> 01:12:25,350
the browser but regardless you can we

1333
01:12:22,860 --> 01:12:29,070
can operate it anywhere that can cut off

1334
01:12:25,350 --> 01:12:30,840
the multicast stream or trim it but the

1335
01:12:29,070 --> 01:12:33,150
idea is that with the max bitrate

1336
01:12:30,840 --> 01:12:35,430
information that you've got inside the

1337
01:12:33,150 --> 01:12:37,469
inside the metadata you have enough

1338
01:12:35,430 --> 01:12:39,030
information to decide whether the bit

1339
01:12:37,470 --> 01:12:41,340
rate that you're subscribing to is safe

1340
01:12:39,030 --> 01:12:43,920
for the context you're operating all

1341
01:12:41,340 --> 01:12:46,560
right so the so that you know the other

1342
01:12:43,920 --> 01:12:49,560
the extreme that's going to South Korea

1343
01:12:46,560 --> 01:12:55,739
will not be going into the you know

1344
01:12:49,560 --> 01:12:58,500
world Indiana is PE that it has on the

1345
01:12:55,739 --> 01:13:04,139
pop set up with you know whatever

1346
01:12:58,500 --> 01:13:06,390
they're running as ingest so the the

1347
01:13:04,140 --> 01:13:09,330
oversubscription threshold is something

1348
01:13:06,390 --> 01:13:10,980
that that the the place where the

1349
01:13:09,330 --> 01:13:14,190
circuit breakers operating can decide

1350
01:13:10,980 --> 01:13:17,790
how this is best maintained and in the

1351
01:13:14,190 --> 01:13:19,769
browser I'm going to be doing something

1352
01:13:17,790 --> 01:13:22,380
dynamic which will sort of monitor the

1353
01:13:19,770 --> 01:13:24,480
loss rate and grow when the loss is

1354
01:13:22,380 --> 01:13:26,010
successful and shrink if there's if

1355
01:13:24,480 --> 01:13:28,919
there's too much loss happening and

1356
01:13:26,010 --> 01:13:30,600
provides some kind of an event based

1357
01:13:28,920 --> 01:13:32,310
back-and-forth with the with the

1358
01:13:30,600 --> 01:13:33,780
JavaScript to notify them that they're

1359
01:13:32,310 --> 01:13:35,190
about to be cut off and let them respond

1360
01:13:33,780 --> 01:13:39,000
gracefully and then cut them off they

1361
01:13:35,190 --> 01:13:41,129
don't and and to notify them about the

1362
01:13:39,000 --> 01:13:42,660
loss their that they're experiencing and

1363
01:13:41,130 --> 01:13:44,100
to maintain that within the browser

1364
01:13:42,660 --> 01:13:47,670
context regardless of what the

1365
01:13:44,100 --> 01:13:51,570
JavaScript does in the router case it's

1366
01:13:47,670 --> 01:13:53,970
I imagine it being a more sort of

1367
01:13:51,570 --> 01:13:55,950
managed case that's that's up to the

1368
01:13:53,970 --> 01:13:57,570
network to implement how much multicast

1369
01:13:55,950 --> 01:14:00,360
traffic you're going to permit in your

1370
01:13:57,570 --> 01:14:01,230
network and you know what percentage are

1371
01:14:00,360 --> 01:14:03,870
you going to put

1372
01:14:01,230 --> 01:14:06,769
on which interfaces and that's just sort

1373
01:14:03,870 --> 01:14:09,330
of up to you to configure or let your

1374
01:14:06,770 --> 01:14:14,220
you know your systems automatically

1375
01:14:09,330 --> 01:14:15,900
configure um but the goal is that any

1376
01:14:14,220 --> 01:14:18,840
place that needs to even when there's a

1377
01:14:15,900 --> 01:14:20,460
broken link downstream something that's

1378
01:14:18,840 --> 01:14:23,010
misbehaving an agent that's not a

1379
01:14:20,460 --> 01:14:24,900
browser say can join these these things

1380
01:14:23,010 --> 01:14:26,490
also I would like the networks to be

1381
01:14:24,900 --> 01:14:29,429
able to provide the multicast service

1382
01:14:26,490 --> 01:14:30,840
and when they are providing multicast

1383
01:14:29,430 --> 01:14:34,350
service they have to have some kind of

1384
01:14:30,840 --> 01:14:36,660
same protections against you know how

1385
01:14:34,350 --> 01:14:39,890
this works now there is a ping

1386
01:14:36,660 --> 01:14:43,110
population count RFC that I think is is

1387
01:14:39,890 --> 01:14:49,050
work well and interesting so that yeah

1388
01:14:43,110 --> 01:14:51,210
is that yours yeah thanks so this is a

1389
01:14:49,050 --> 01:14:54,090
this is a really helpful if it's

1390
01:14:51,210 --> 01:14:56,010
implemented way to sort of decide with

1391
01:14:54,090 --> 01:14:57,180
you know from an upstream router which

1392
01:14:56,010 --> 01:15:00,920
are the things that are worth cutting

1393
01:14:57,180 --> 01:15:03,090
off if you need to cut something off but

1394
01:15:00,920 --> 01:15:05,310
you know regardless of whether it's

1395
01:15:03,090 --> 01:15:07,440
there or not you can make a decision

1396
01:15:05,310 --> 01:15:09,180
that keeps your network safe and my hope

1397
01:15:07,440 --> 01:15:12,330
is that this makes it more plausible for

1398
01:15:09,180 --> 01:15:14,010
networks to like have a way to you know

1399
01:15:12,330 --> 01:15:21,110
with these guardrails to deploy these

1400
01:15:14,010 --> 01:15:24,090
things so implementation is early days

1401
01:15:21,110 --> 01:15:26,759
but but we do have some pieces of this

1402
01:15:24,090 --> 01:15:31,910
that are starting to come together so

1403
01:15:26,760 --> 01:15:35,070
the intent here is a published a a a

1404
01:15:31,910 --> 01:15:38,970
multicast received library that's SSM

1405
01:15:35,070 --> 01:15:40,590
oriented and my intent is to add all

1406
01:15:38,970 --> 01:15:43,200
this functionality into that library

1407
01:15:40,590 --> 01:15:45,450
over time now I've taken this library

1408
01:15:43,200 --> 01:15:46,769
and I put it into into the PI taps

1409
01:15:45,450 --> 01:15:49,170
implementation and I've also run a

1410
01:15:46,770 --> 01:15:52,530
prototype running inside chromium to

1411
01:15:49,170 --> 01:15:55,050
receive the data and pass it into a

1412
01:15:52,530 --> 01:15:57,840
JavaScript API it does not yet implement

1413
01:15:55,050 --> 01:16:00,660
all the bells and whistles that I talked

1414
01:15:57,840 --> 01:16:03,990
about here but the you know just to make

1415
01:16:00,660 --> 01:16:06,780
sure that it kind of works those those

1416
01:16:03,990 --> 01:16:10,349
pieces are together and then this time

1417
01:16:06,780 --> 01:16:11,230
attacked on with the help max attack we

1418
01:16:10,350 --> 01:16:14,080
put

1419
01:16:11,230 --> 01:16:17,349
a Python implementation of ambe's so

1420
01:16:14,080 --> 01:16:21,550
that we can send the manifests validate

1421
01:16:17,350 --> 01:16:23,860
the data that's received and check it

1422
01:16:21,550 --> 01:16:27,670
before passing it into the application

1423
01:16:23,860 --> 01:16:29,500
that that would be using so this is you

1424
01:16:27,670 --> 01:16:31,810
know a food concept we didn't run into

1425
01:16:29,500 --> 01:16:35,680
any trouble it's it's a very simple sort

1426
01:16:31,810 --> 01:16:37,360
of strategy and you know eventually be

1427
01:16:35,680 --> 01:16:40,620
moving this into the C library and

1428
01:16:37,360 --> 01:16:43,420
making that part of the underlying piece

1429
01:16:40,620 --> 01:16:46,570
obviously there's put the actual dorm

1430
01:16:43,420 --> 01:16:49,300
servers up and and do some some work on

1431
01:16:46,570 --> 01:16:53,739
C back expect to iron out some some of

1432
01:16:49,300 --> 01:16:56,100
the pieces there and add tunneling to

1433
01:16:53,739 --> 01:17:00,239
the to the received library probably

1434
01:16:56,100 --> 01:17:04,180
certainly the DNS SD find the local

1435
01:17:00,239 --> 01:17:08,259
aunty relay idea and perhaps optionally

1436
01:17:04,180 --> 01:17:09,780
also the the Dryad based remote tunnel

1437
01:17:08,260 --> 01:17:15,010
[Music]

1438
01:17:09,780 --> 01:17:18,759
so I was thinking about asking for

1439
01:17:15,010 --> 01:17:21,940
adoption I kind of would like to for for

1440
01:17:18,760 --> 01:17:25,000
the three ITF drives and I want to

1441
01:17:21,940 --> 01:17:30,400
report that I spoke briefly with Ben get

1442
01:17:25,000 --> 01:17:35,550
it he's secure EAD and also with with

1443
01:17:30,400 --> 01:17:38,830
David black the ETS V W Jeter and about

1444
01:17:35,550 --> 01:17:41,650
the appropriateness of adopting things

1445
01:17:38,830 --> 01:17:46,570
like C back which might properly live in

1446
01:17:41,650 --> 01:17:48,849
TS pwg as a so the clicker behavior or

1447
01:17:46,570 --> 01:17:52,450
an D which might properly live in a

1448
01:17:48,850 --> 01:17:55,060
security area somewhere in a place like

1449
01:17:52,450 --> 01:17:57,460
an Bodeen their take was both very

1450
01:17:55,060 --> 01:18:00,940
similar which is that neither of these

1451
01:17:57,460 --> 01:18:03,160
is particularly complicated and that

1452
01:18:00,940 --> 01:18:06,429
although they do strongly recommend an

1453
01:18:03,160 --> 01:18:09,370
early review by the other area by the

1454
01:18:06,430 --> 01:18:12,010
area appropriate to it that it would not

1455
01:18:09,370 --> 01:18:17,099
be a problem and not be served out of

1456
01:18:12,010 --> 01:18:21,409
line for work like this to to happen in

1457
01:18:17,100 --> 01:18:23,179
in m1d if if the

1458
01:18:21,409 --> 01:18:25,159
if the working group believes that this

1459
01:18:23,179 --> 01:18:28,789
is worthwhile and useful and I think

1460
01:18:25,159 --> 01:18:34,159
that with the intent to make this a sort

1461
01:18:28,789 --> 01:18:36,499
of inter domain multicast you know in

1462
01:18:34,159 --> 01:18:38,209
this case to make that realistic that

1463
01:18:36,499 --> 01:18:42,438
the ammonia is the appropriate place to

1464
01:18:38,209 --> 01:18:44,749
do this but I leave that to to the

1465
01:18:42,439 --> 01:18:51,019
chairs in the group to consider is our

1466
01:18:44,749 --> 01:18:52,489
DAT in the room Collins have you spoken

1467
01:18:51,019 --> 01:18:58,849
with the other 80s on listen Allah

1468
01:18:52,489 --> 01:19:00,678
okay right right I mean just just make

1469
01:18:58,849 --> 01:19:04,579
sure to where the conversation actually

1470
01:19:00,679 --> 01:19:07,179
that's created vote if you get a chance

1471
01:19:04,579 --> 01:19:10,489
I would also be very grateful for

1472
01:19:07,179 --> 01:19:12,439
reveals part of the WIC G proposal even

1473
01:19:10,489 --> 01:19:16,598
though it's out of scope ITF this also

1474
01:19:12,439 --> 01:19:19,070
needs you know adoption and interest

1475
01:19:16,599 --> 01:19:20,889
displayed on the appropriate lists in

1476
01:19:19,070 --> 01:19:25,518
order to move forward in that in that

1477
01:19:20,889 --> 01:19:27,919
domain I've also been talking to a

1478
01:19:25,519 --> 01:19:30,010
number of of chromium developers about

1479
01:19:27,919 --> 01:19:34,459
whether it's appropriate inside chromium

1480
01:19:30,010 --> 01:19:36,979
so far I've spoken to I believe eight

1481
01:19:34,459 --> 01:19:42,019
such and none of them have yet said that

1482
01:19:36,979 --> 01:19:43,669
it's unreasonable it's just hard so that

1483
01:19:42,019 --> 01:19:45,349
the use case that I'm trying to do

1484
01:19:43,669 --> 01:19:48,260
there's nothing jumping out at them as a

1485
01:19:45,349 --> 01:19:51,679
problem now there's a there's a little

1486
01:19:48,260 --> 01:19:53,539
bit of a caveat on that because which

1487
01:19:51,679 --> 01:19:54,979
I've called out in the in the proposal

1488
01:19:53,539 --> 01:19:58,699
in the explainer of the proposal which

1489
01:19:54,979 --> 01:20:00,289
is that the privacy guarantees are in

1490
01:19:58,699 --> 01:20:01,909
many cases the browser's are very

1491
01:20:00,289 --> 01:20:03,679
concerned about privacy guarantees and

1492
01:20:01,909 --> 01:20:05,409
some of these privacy guarantees are not

1493
01:20:03,679 --> 01:20:09,739
going to be possible with the multicast

1494
01:20:05,409 --> 01:20:11,329
receive functionality because if you

1495
01:20:09,739 --> 01:20:13,699
have an adversary that's your next hop

1496
01:20:11,329 --> 01:20:15,709
router they are going to be able to

1497
01:20:13,699 --> 01:20:18,169
determine what that multicast stream

1498
01:20:15,709 --> 01:20:20,900
represents pretty much when you join it

1499
01:20:18,169 --> 01:20:22,550
you have to assume that this is that

1500
01:20:20,900 --> 01:20:24,138
this is possible for them to do

1501
01:20:22,550 --> 01:20:25,789
regardless of whether you're encrypting

1502
01:20:24,139 --> 01:20:30,409
your S&I or what

1503
01:20:25,789 --> 01:20:32,030
right so you know if you if you need to

1504
01:20:30,409 --> 01:20:33,018
hide that from them for whatever reason

1505
01:20:32,030 --> 01:20:34,699
you're gonna have to beat the end of

1506
01:20:33,019 --> 01:20:38,059
somewhere that you trust and then turn a

1507
01:20:34,699 --> 01:20:40,190
little over that because you know so I

1508
01:20:38,059 --> 01:20:41,989
think that's not a showstopper for this

1509
01:20:40,190 --> 01:20:43,610
it might constrain the kinds of things

1510
01:20:41,989 --> 01:20:46,250
that should be distributed over this

1511
01:20:43,610 --> 01:20:47,750
kind of protocol because the but it

1512
01:20:46,250 --> 01:20:48,949
should be it should match up pretty well

1513
01:20:47,750 --> 01:20:50,599
because the intent is to do things

1514
01:20:48,949 --> 01:20:51,558
they're so popular that many people are

1515
01:20:50,599 --> 01:20:53,659
doing it right that's where you're

1516
01:20:51,559 --> 01:20:56,719
getting gained by doing anything with

1517
01:20:53,659 --> 01:21:00,530
multicast receive so so that's one

1518
01:20:56,719 --> 01:21:04,010
caveat but it it seems to be okay on

1519
01:21:00,530 --> 01:21:06,018
that front as well outside that like the

1520
01:21:04,010 --> 01:21:08,599
the reason that they took you to be out

1521
01:21:06,019 --> 01:21:10,099
of out of chromium was like because

1522
01:21:08,599 --> 01:21:13,039
sending is a terrible idea to let

1523
01:21:10,099 --> 01:21:15,650
javascript to write all that big isn't

1524
01:21:13,039 --> 01:21:18,500
malicious right so um but this is a

1525
01:21:15,650 --> 01:21:21,289
receive only API so that's not that's

1526
01:21:18,500 --> 01:21:30,050
not an issue okay so any questions

1527
01:21:21,289 --> 01:21:33,768
that's that's all I have comments other

1528
01:21:30,050 --> 01:21:36,619
implementations so the receive API now

1529
01:21:33,769 --> 01:21:40,190
or other plants are other people other

1530
01:21:36,619 --> 01:21:44,690
people working on this or just obviously

1531
01:21:40,190 --> 01:21:45,919
the API over there Xena yeah so I'm the

1532
01:21:44,690 --> 01:21:49,909
only one that's done anything with it

1533
01:21:45,920 --> 01:21:52,119
yet I mean max has has participated with

1534
01:21:49,909 --> 01:21:54,558
me in the hackathon project and that was

1535
01:21:52,119 --> 01:21:56,570
built on top of this we've integrated it

1536
01:21:54,559 --> 01:21:58,880
into PI taps so that is there's a

1537
01:21:56,570 --> 01:22:02,480
dependency there that C no established

1538
01:21:58,880 --> 01:22:04,579
now but um but that's not actually used

1539
01:22:02,480 --> 01:22:06,888
by anybody except our own little project

1540
01:22:04,579 --> 01:22:08,750
so this is yeah it's not really widely

1541
01:22:06,889 --> 01:22:13,519
deployed and it doesn't really do

1542
01:22:08,750 --> 01:22:15,409
anything yeah I was also wondering I can

1543
01:22:13,519 --> 01:22:19,460
see how you know a lot of this security

1544
01:22:15,409 --> 01:22:22,250
and so on is useful but would you say

1545
01:22:19,460 --> 01:22:24,079
it's sort of optional if you somehow

1546
01:22:22,250 --> 01:22:26,179
know that your browser is in the control

1547
01:22:24,079 --> 01:22:29,768
environment or whatever maybe you know

1548
01:22:26,179 --> 01:22:29,769
you wouldn't need all this or

1549
01:22:30,179 --> 01:22:36,300
so my assumption is that so I wanted to

1550
01:22:33,179 --> 01:22:38,280
work for generally deployed browsers I

1551
01:22:36,300 --> 01:22:41,400
agree that there might be contexts where

1552
01:22:38,280 --> 01:22:43,139
it would not be required but my my goal

1553
01:22:41,400 --> 01:22:46,290
in doing this is to make it deployable

1554
01:22:43,140 --> 01:22:50,370
for the general case of browsers so the

1555
01:22:46,290 --> 01:22:52,860
idea would be I mean I could implement

1556
01:22:50,370 --> 01:22:55,769
my own video player whatever take a unit

1557
01:22:52,860 --> 01:22:59,130
costs player and just changed use this

1558
01:22:55,770 --> 01:23:01,830
receive API more or less and yeah yeah

1559
01:22:59,130 --> 01:23:04,230
so when I the way I envisioned it

1560
01:23:01,830 --> 01:23:06,570
working is I mean the way I intend to

1561
01:23:04,230 --> 01:23:08,070
use it is is that now that this

1562
01:23:06,570 --> 01:23:10,830
JavaScript API is there

1563
01:23:08,070 --> 01:23:13,739
once it's there then all I have to do is

1564
01:23:10,830 --> 01:23:16,320
port my existing player to webassembly

1565
01:23:13,739 --> 01:23:18,480
and plug this in as the receives path

1566
01:23:16,320 --> 01:23:19,980
for the for the multicast traffic and

1567
01:23:18,480 --> 01:23:23,009
then the browser provides these

1568
01:23:19,980 --> 01:23:24,900
guardrails as such as it is and then my

1569
01:23:23,010 --> 01:23:28,320
my behavior as long as it can live

1570
01:23:24,900 --> 01:23:33,269
within these guardrails is fine sounds

1571
01:23:28,320 --> 01:23:36,570
great thank you hi thank you very much

1572
01:23:33,270 --> 01:23:38,070
Craig Taylor as an individual the point

1573
01:23:36,570 --> 01:23:40,799
about the pervasive monitoring and the

1574
01:23:38,070 --> 01:23:42,989
joins etc is own I think it's just a

1575
01:23:40,800 --> 01:23:45,120
note for security considerations I gave

1576
01:23:42,989 --> 01:23:48,540
this a lot of thought previously and you

1577
01:23:45,120 --> 01:23:50,400
need significance orchestration within

1578
01:23:48,540 --> 01:23:53,699
the environment to centralize the joins

1579
01:23:50,400 --> 01:23:55,080
in some manner to you know you know some

1580
01:23:53,699 --> 01:23:59,309
kind of pervasive attacker I kind of

1581
01:23:55,080 --> 01:24:00,900
break it anyway and yeah the you anyone

1582
01:23:59,310 --> 01:24:02,880
that could do that would have all the

1583
01:24:00,900 --> 01:24:05,250
metadata they needed even in a unicast

1584
01:24:02,880 --> 01:24:08,280
world either way so just record it

1585
01:24:05,250 --> 01:24:11,190
that's that's what I've done so far

1586
01:24:08,280 --> 01:24:15,599
known as raise this as I am going to die

1587
01:24:11,190 --> 01:24:17,699
on the hill fighting this but I think

1588
01:24:15,600 --> 01:24:21,199
that not enough people have read it to

1589
01:24:17,699 --> 01:24:21,199
be confident that that will never happen

1590
01:24:22,640 --> 01:24:26,760
okay if there's nothing else

1591
01:24:25,500 --> 01:24:29,640
thank you very much please do read the

1592
01:24:26,760 --> 01:24:31,679
drafts if you get a chance said that I

1593
01:24:29,640 --> 01:24:34,739
want to thank Morton Peterson I believe

1594
01:24:31,679 --> 01:24:37,980
he's he did apparently do so and send a

1595
01:24:34,739 --> 01:24:41,790
note to the list and in support any

1596
01:24:37,980 --> 01:24:43,509
feedback any commentary any support

1597
01:24:41,790 --> 01:24:47,700
order this is terrible

1598
01:24:43,510 --> 01:24:47,700
because X would be most welcome

1599
01:24:50,580 --> 01:25:02,650
documents you had red meaning very first

1600
01:24:57,870 --> 01:25:05,830
okay because if the intent for the yeah

1601
01:25:02,650 --> 01:25:07,440
there we go the agreement from the ADEs

1602
01:25:05,830 --> 01:25:10,150
is the work could take place here and

1603
01:25:07,440 --> 01:25:13,000
the next time for check room for

1604
01:25:10,150 --> 01:25:15,429
adoption right now right now I mean we

1605
01:25:13,000 --> 01:25:20,980
take you the list but there's what's me

1606
01:25:15,430 --> 01:25:22,290
yeah you were requesting all three yes I

1607
01:25:20,980 --> 01:25:25,750
would like to request all three I think

1608
01:25:22,290 --> 01:25:28,150
based on my conversations with with Ben

1609
01:25:25,750 --> 01:25:30,220
and David I believe all three are

1610
01:25:28,150 --> 01:25:32,879
appropriate I think I'm making claim

1611
01:25:30,220 --> 01:25:36,600
myself the dorms is appropriate and

1612
01:25:32,880 --> 01:25:40,510
without without any otherwise review

1613
01:25:36,600 --> 01:25:43,600
yeah my my concern here is that I'm

1614
01:25:40,510 --> 01:25:44,650
skeptical enough people already proven

1615
01:25:43,600 --> 01:25:47,940
wrong that would be wonderful

1616
01:25:44,650 --> 01:25:51,009
please proceed I've read them each twice

1617
01:25:47,940 --> 01:25:52,150
right you've guilted me into a night we

1618
01:25:51,010 --> 01:25:55,210
went through the slides and I let him

1619
01:25:52,150 --> 01:25:57,160
again so excellent whose read any

1620
01:25:55,210 --> 01:25:59,020
combination of these is a start anywhere

1621
01:25:57,160 --> 01:26:02,590
in okay excellent who's read all three

1622
01:25:59,020 --> 01:26:04,150
of them are the same same group who

1623
01:26:02,590 --> 01:26:07,690
thinks is the stuff we should adopt an M

1624
01:26:04,150 --> 01:26:11,250
Bundy yeah but the notes say we need to

1625
01:26:07,690 --> 01:26:17,259
do this work fantastic thank you so much

1626
01:26:11,250 --> 01:26:25,390
Clark pardon me yeah this is the second

1627
01:26:17,260 --> 01:26:26,560
time that I think from this presentation

1628
01:26:25,390 --> 01:26:29,290
there's gonna be more people reading

1629
01:26:26,560 --> 01:26:32,980
these drafts now so can i you can I ask

1630
01:26:29,290 --> 01:26:34,510
is there anybody maybe who thinks we

1631
01:26:32,980 --> 01:26:39,339
should adopt some of them but not all of

1632
01:26:34,510 --> 01:26:40,410
them for any reason think something's

1633
01:26:39,340 --> 01:26:44,380
missing

1634
01:26:40,410 --> 01:26:47,760
yeah I think that are missing I don't

1635
01:26:44,380 --> 01:26:47,760
know anything that's missing it

1636
01:26:56,409 --> 01:27:00,879
all right you got a blue over there come

1637
01:26:58,900 --> 01:27:04,000
on you got to come up now it's just no

1638
01:27:00,880 --> 01:27:06,070
more deliveries anything missing on this

1639
01:27:04,000 --> 01:27:08,530
come in so far that's been great and

1640
01:27:06,070 --> 01:27:11,199
more comments on that comes the list

1641
01:27:08,530 --> 01:27:12,489
all right notes please email them to me

1642
01:27:11,199 --> 01:27:19,809
when you've got them wrapped up and

1643
01:27:12,489 --> 01:27:21,428
perfect yeah and have a great evening in

1644
01:27:19,810 --> 01:27:28,469
Singapore police tries the street food

1645
01:27:21,429 --> 01:27:28,469
oh thank you

1646
01:27:59,540 --> 01:28:02,649
[Music]

