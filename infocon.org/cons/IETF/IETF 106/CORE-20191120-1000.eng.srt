1
00:01:47,320 --> 00:01:50,520
[Music]

2
00:01:56,840 --> 00:02:05,880
so slowly arriving either because they

3
00:02:03,029 --> 00:02:08,100
have to sleep after the social or

4
00:02:05,880 --> 00:02:10,978
because they have been due to side

5
00:02:08,100 --> 00:02:14,040
meetings already this morning as most

6
00:02:10,979 --> 00:02:16,250
people have been this is the common

7
00:02:14,040 --> 00:02:16,250
group

8
00:02:17,270 --> 00:02:24,690
three minutes and as you can see we have

9
00:02:22,010 --> 00:02:27,000
streamlined this a little bit so you

10
00:02:24,690 --> 00:02:29,130
know only can be a chair of this working

11
00:02:27,000 --> 00:02:31,980
group if you have a 12 character email

12
00:02:29,130 --> 00:02:36,180
address so Jaime has to it had to change

13
00:02:31,980 --> 00:02:38,100
this yeah it turns out that Ericsson has

14
00:02:36,180 --> 00:02:44,520
standardized an odd lookit I'm not going

15
00:02:38,100 --> 00:02:47,900
to explain further from this point yeah

16
00:02:44,520 --> 00:02:53,070
this is an ITF meeting and there is a

17
00:02:47,900 --> 00:02:59,310
note right slide which you can look at

18
00:02:53,070 --> 00:03:03,329
and we have blue sheets who are the note

19
00:02:59,310 --> 00:03:06,180
takers today Sneaky's so you're using

20
00:03:03,330 --> 00:03:07,770
visa pad great let's hope that actually

21
00:03:06,180 --> 00:03:10,050
works there was some interesting

22
00:03:07,770 --> 00:03:12,590
messages from the Secretariat about the

23
00:03:10,050 --> 00:03:12,590
internet yesterday

24
00:03:13,940 --> 00:03:27,510
who can help because if I don't okay

25
00:03:19,590 --> 00:03:33,180
great so the the agenda has a lot of

26
00:03:27,510 --> 00:03:36,720
items and some pretty random assumption

27
00:03:33,180 --> 00:03:39,660
how long we will take for these items so

28
00:03:36,720 --> 00:03:42,570
we will see where we maybe can can gain

29
00:03:39,660 --> 00:03:46,799
some time and and where we will lose

30
00:03:42,570 --> 00:03:50,250
time so this is the agenda for today

31
00:03:46,800 --> 00:03:55,920
which is essentially based around three

32
00:03:50,250 --> 00:03:57,330
subjects the conf work where we

33
00:03:55,920 --> 00:03:59,609
essentially need to issue working with

34
00:03:57,330 --> 00:04:02,100
blast codes at the moment and Android

35
00:03:59,610 --> 00:04:08,640
just asked whether there's anything in

36
00:04:02,100 --> 00:04:12,680
the way the the various ideas on how to

37
00:04:08,640 --> 00:04:15,589
use the group communication and

38
00:04:12,680 --> 00:04:20,870
properties that we now can achieve with

39
00:04:15,590 --> 00:04:24,560
Oscar so we have four segments here and

40
00:04:20,870 --> 00:04:28,830
finally we will talk about sin ml and

41
00:04:24,560 --> 00:04:30,960
because there is one document in India

42
00:04:28,830 --> 00:04:33,330
is reprocessing right now all that we

43
00:04:30,960 --> 00:04:35,989
want to get unstuck something might fall

44
00:04:33,330 --> 00:04:40,169
off here at the end let's see how we

45
00:04:35,990 --> 00:04:43,289
managed to do this because on Friday we

46
00:04:40,169 --> 00:04:45,979
actually have some some buffer space

47
00:04:43,289 --> 00:04:48,318
that we can fall into also things we

48
00:04:45,979 --> 00:04:52,349
don't get to today

49
00:04:48,319 --> 00:04:55,169
we'll move to Friday and the main

50
00:04:52,349 --> 00:04:58,199
subject of Friday we'll be discussing

51
00:04:55,169 --> 00:05:02,150
the outcome of yesterday's core

52
00:04:58,199 --> 00:05:08,190
application side meeting and the the

53
00:05:02,150 --> 00:05:11,250
related draft but of course we will need

54
00:05:08,190 --> 00:05:16,130
that that buffer to handle everything

55
00:05:11,250 --> 00:05:18,660
that falls off today so two things are

56
00:05:16,130 --> 00:05:21,360
missing here

57
00:05:18,660 --> 00:05:24,900
one is the resource directory draft

58
00:05:21,360 --> 00:05:27,930
which is also in history processing

59
00:05:24,900 --> 00:05:33,508
right now actually a devaluation right

60
00:05:27,930 --> 00:05:39,120
now so that might also come up on Friday

61
00:05:33,509 --> 00:05:42,120
and there's also a draft that expired

62
00:05:39,120 --> 00:05:44,039
and we want to resurrect and why we were

63
00:05:42,120 --> 00:05:47,699
trying to resurrect it we found a minor

64
00:05:44,039 --> 00:05:50,940
problem with the a B and F that that

65
00:05:47,699 --> 00:05:54,090
actually is not that easy to fix so

66
00:05:50,940 --> 00:05:57,630
maybe we can bring this up on Friday as

67
00:05:54,090 --> 00:06:01,799
well so that that's potential changes to

68
00:05:57,630 --> 00:06:05,070
the agenda that will hit Friday any

69
00:06:01,800 --> 00:06:08,090
other things that need to be changed on

70
00:06:05,070 --> 00:06:08,090
the edit agenda

71
00:06:09,830 --> 00:06:24,870
okay so we we had our hallway discussion

72
00:06:20,780 --> 00:06:29,280
already that was yesterday in in-room

73
00:06:24,870 --> 00:06:31,349
butterworth in in the afternoon and I

74
00:06:29,280 --> 00:06:33,869
understand that some people couldn't go

75
00:06:31,349 --> 00:06:37,409
there because SEC dispatch was

76
00:06:33,870 --> 00:06:40,229
conflicting with it yeah it's hard to

77
00:06:37,409 --> 00:06:42,330
organize site meetings here but we had

78
00:06:40,229 --> 00:06:44,690
some good discussions and I think laws

79
00:06:42,330 --> 00:06:49,169
were a report on those on

80
00:06:44,690 --> 00:06:53,639
Friday we have a number of documents in

81
00:06:49,169 --> 00:06:57,030
the pipeline the the multi-part content

82
00:06:53,639 --> 00:07:01,050
format is in the RFC editors queue and

83
00:06:57,030 --> 00:07:04,289
because cluster 328 has been released

84
00:07:01,050 --> 00:07:07,099
it will take a while until it emerges

85
00:07:04,289 --> 00:07:12,300
again so I don't have a prediction for

86
00:07:07,099 --> 00:07:15,479
that but it will take a while several

87
00:07:12,300 --> 00:07:17,669
documents are in is G processing and I'm

88
00:07:15,479 --> 00:07:20,340
a bit confused about the status of hop

89
00:07:17,669 --> 00:07:22,318
limit the test this wonderful text

90
00:07:20,340 --> 00:07:27,090
approved announcement to resend point

91
00:07:22,319 --> 00:07:32,849
raised right up needed yeah sorry I

92
00:07:27,090 --> 00:07:37,258
should have I need to follow up on this

93
00:07:32,849 --> 00:07:41,039
can you have a read of Adam's comment

94
00:07:37,259 --> 00:07:43,979
section asking why this cannot be mapped

95
00:07:41,039 --> 00:07:45,599
to HTTP header field seems quite

96
00:07:43,979 --> 00:07:47,789
straightforward I would like people to

97
00:07:45,599 --> 00:07:52,050
have a look at this and quickly tell me

98
00:07:47,789 --> 00:07:55,289
why it's not possible right so just just

99
00:07:52,050 --> 00:07:59,070
to decode what you just said yeah we

100
00:07:55,289 --> 00:08:01,860
have a new hop limit yes I can mitigate

101
00:07:59,070 --> 00:08:04,889
cycles on the core web site and the

102
00:08:01,860 --> 00:08:07,590
question is why why are we unable to do

103
00:08:04,889 --> 00:08:09,599
the same thing on the HTTP there is some

104
00:08:07,590 --> 00:08:11,159
text about mapping to http and then

105
00:08:09,599 --> 00:08:13,590
saying but this still cannot be

106
00:08:11,159 --> 00:08:15,449
preserved end to end so why don't you

107
00:08:13,590 --> 00:08:22,489
define a new HTTP header I think that's

108
00:08:15,449 --> 00:08:26,520
the gist of Adams comment right okay I

109
00:08:22,490 --> 00:08:29,580
think we can answer that so this is the

110
00:08:26,520 --> 00:08:31,440
point raised yes okay

111
00:08:29,580 --> 00:08:33,809
sorry for not being clear yes that

112
00:08:31,440 --> 00:08:35,338
that's the only thing that as far as I'm

113
00:08:33,809 --> 00:08:39,500
concerned that sort of made me pause to

114
00:08:35,339 --> 00:08:42,000
push the approve button okay so I think

115
00:08:39,500 --> 00:08:46,410
we had this discussion already a couple

116
00:08:42,000 --> 00:08:48,390
of months ago and the result of that

117
00:08:46,410 --> 00:08:51,709
discussion and I'm not sure if Adam is

118
00:08:48,390 --> 00:08:56,010
part of the consensus of that was that

119
00:08:51,709 --> 00:08:57,779
we had a solution now for the the co-op

120
00:08:56,010 --> 00:08:59,939
side

121
00:08:57,779 --> 00:09:01,829
and we're happy with that because that's

122
00:08:59,939 --> 00:09:05,459
solving the problem there's that dots

123
00:09:01,829 --> 00:09:11,550
has and doing something that actually

124
00:09:05,459 --> 00:09:13,319
spans both sides is more complex okay

125
00:09:11,550 --> 00:09:15,660
I think his comment is along the lines

126
00:09:13,319 --> 00:09:17,579
that it's not hard to define HTTP header

127
00:09:15,660 --> 00:09:19,829
field for this right - just preserver

128
00:09:17,579 --> 00:09:23,729
yeah so we already had a proposal at one

129
00:09:19,829 --> 00:09:26,809
point to define a generic HTTP header

130
00:09:23,730 --> 00:09:30,480
here is a co-op option

131
00:09:26,809 --> 00:09:33,449
please transport that for me we almost

132
00:09:30,480 --> 00:09:35,999
had had that in our score it turned out

133
00:09:33,449 --> 00:09:40,079
we didn't need it in Oscar right in the

134
00:09:35,999 --> 00:09:42,389
end but we could resurrect that so we

135
00:09:40,079 --> 00:09:46,680
don't have to go through this for every

136
00:09:42,389 --> 00:09:48,809
new think that's certainly a generic way

137
00:09:46,680 --> 00:09:51,239
of abusing this comment yes that would

138
00:09:48,809 --> 00:09:56,370
be okay good so I know what what to do

139
00:09:51,240 --> 00:09:58,829
the arm but yeah one that shouldn't be

140
00:09:56,370 --> 00:10:05,009
difficult to get closure on I would

141
00:09:58,829 --> 00:10:08,790
think Thanks so the resource directory

142
00:10:05,009 --> 00:10:11,189
work is just in the phase where we're

143
00:10:08,790 --> 00:10:14,360
Alexei is making number of comments and

144
00:10:11,189 --> 00:10:19,230
and the authors are working on those

145
00:10:14,360 --> 00:10:22,500
comments so that is all mirrored to the

146
00:10:19,230 --> 00:10:27,120
core mailing list so you should be able

147
00:10:22,500 --> 00:10:30,240
to follow that discussion and if you

148
00:10:27,120 --> 00:10:31,559
think that that discussion is going in

149
00:10:30,240 --> 00:10:34,800
the wrong direction then it would be

150
00:10:31,559 --> 00:10:36,600
really useful if you speak up but it's

151
00:10:34,800 --> 00:10:39,750
not clear right now that we actually

152
00:10:36,600 --> 00:10:43,559
need to talk here about that and if we

153
00:10:39,750 --> 00:10:47,339
do we will draw it on Friday then we

154
00:10:43,559 --> 00:10:51,389
have two drafts that are in in the

155
00:10:47,339 --> 00:10:54,089
cinema cluster so we will talk about

156
00:10:51,389 --> 00:10:58,610
those today

157
00:10:54,089 --> 00:11:03,569
one is the fetch patch draft

158
00:10:58,610 --> 00:11:07,730
how do you use any media types together

159
00:11:03,569 --> 00:11:12,099
with fetch and patch methods

160
00:11:07,730 --> 00:11:14,749
one is about the more units proposer for

161
00:11:12,100 --> 00:11:18,199
cinema I think we have some progress

162
00:11:14,749 --> 00:11:20,809
there and we'll talk about that later we

163
00:11:18,199 --> 00:11:23,358
have a couple of drafts that are still

164
00:11:20,809 --> 00:11:26,689
in the workgroup last call still in the

165
00:11:23,359 --> 00:11:29,829
working group they have passed last call

166
00:11:26,689 --> 00:11:33,618
one is the stateless draft where we're

167
00:11:29,829 --> 00:11:40,479
close we're close by the way and someone

168
00:11:33,619 --> 00:11:46,009
break him up where Klaus hasn't provided

169
00:11:40,480 --> 00:11:50,480
the update to the draft after the last

170
00:11:46,009 --> 00:11:52,220
call input so yeah he missed the

171
00:11:50,480 --> 00:11:56,019
deadline and we are waiting for their

172
00:11:52,220 --> 00:12:00,290
show for and request tag actually made

173
00:11:56,019 --> 00:12:03,230
the deadline and we now just need the

174
00:12:00,290 --> 00:12:09,669
Shepherd right up and push us put it

175
00:12:03,230 --> 00:12:15,799
push it through so these are the

176
00:12:09,669 --> 00:12:17,689
advanced for advanced elements the the

177
00:12:15,799 --> 00:12:21,470
one draft I talked about that it has an

178
00:12:17,689 --> 00:12:23,748
ABN F problem will be resurrected and

179
00:12:21,470 --> 00:12:25,879
when we are done with the ABN F problem

180
00:12:23,749 --> 00:12:32,509
we are probably ready for working up

181
00:12:25,879 --> 00:12:36,410
last call there's the draft missing

182
00:12:32,509 --> 00:12:39,799
there sorry making the same mistake

183
00:12:36,410 --> 00:12:42,980
again in newburgh new production call is

184
00:12:39,799 --> 00:12:46,669
the phaser draft sorry for not putting

185
00:12:42,980 --> 00:12:49,189
it on this slide we put that out

186
00:12:46,669 --> 00:12:53,839
yesterday belatedly and I have to

187
00:12:49,189 --> 00:12:56,269
apologize for that and we also have the

188
00:12:53,839 --> 00:12:58,639
corrections clarifications draft that

189
00:12:56,269 --> 00:13:02,299
went through adoption call but didn't

190
00:12:58,639 --> 00:13:04,609
get much feedback even though people in

191
00:13:02,299 --> 00:13:09,739
the room said this might be a good idea

192
00:13:04,609 --> 00:13:13,970
so maybe we have to reconsider that how

193
00:13:09,739 --> 00:13:16,819
we go forward with this do you have any

194
00:13:13,970 --> 00:13:19,579
other document you are worried about at

195
00:13:16,819 --> 00:13:21,909
the moment and that is not already on

196
00:13:19,579 --> 00:13:21,909
the agenda

197
00:13:25,240 --> 00:13:46,190
okay then we can go into the main part

198
00:13:30,350 --> 00:13:48,050
of the general okay hello everyone my

199
00:13:46,190 --> 00:13:52,820
name is Eva Petrov and I will be

200
00:13:48,050 --> 00:13:56,270
presenting the advancements in quorum so

201
00:13:52,820 --> 00:13:58,700
basically not much has changed since the

202
00:13:56,270 --> 00:14:02,990
last IDF the documents are pretty stable

203
00:13:58,700 --> 00:14:06,170
for the C draft there are no updates

204
00:14:02,990 --> 00:14:10,490
what we did was as it was requested that

205
00:14:06,170 --> 00:14:17,530
the last IDF we merged the seed

206
00:14:10,490 --> 00:14:23,740
generation 2 with the young - otherwise

207
00:14:17,530 --> 00:14:27,860
we didn't receive any new comments and I

208
00:14:23,740 --> 00:14:30,020
think it's good for a working group to

209
00:14:27,860 --> 00:14:38,060
ask oh I guess at the end we'll discuss

210
00:14:30,020 --> 00:14:41,870
all of them ok so yes that's the status

211
00:14:38,060 --> 00:14:46,160
of this document for the young sea board

212
00:14:41,870 --> 00:14:51,860
document we updated it I think in

213
00:14:46,160 --> 00:14:54,140
September there are few changes that are

214
00:14:51,860 --> 00:14:58,130
worth mentioning like there was a

215
00:14:54,140 --> 00:15:01,819
conflict with this massive attack that

216
00:14:58,130 --> 00:15:04,640
we made we were made aware of after some

217
00:15:01,820 --> 00:15:09,590
discussion we agreed to change the

218
00:15:04,640 --> 00:15:12,500
support act that we were using and we

219
00:15:09,590 --> 00:15:18,530
went ahead and made this modification in

220
00:15:12,500 --> 00:15:22,580
version 11 the other more significant

221
00:15:18,530 --> 00:15:26,180
changes that shoot was changed to a must

222
00:15:22,580 --> 00:15:30,440
in section 5 related to young data

223
00:15:26,180 --> 00:15:35,089
template encoding it was clear that the

224
00:15:30,440 --> 00:15:35,750
intent was to be a must for us but we

225
00:15:35,090 --> 00:15:43,280
just

226
00:15:35,750 --> 00:15:45,920
it made this mistake otherwise number of

227
00:15:43,280 --> 00:15:51,280
editorial changes we clarified route

228
00:15:45,920 --> 00:15:56,979
deltas are used exactly we refer to our

229
00:15:51,280 --> 00:16:01,400
cat6 10-4 seaboard diagnostic notation

230
00:15:56,980 --> 00:16:04,010
and we have dated the terminology

231
00:16:01,400 --> 00:16:11,360
section we removed the plus sign from

232
00:16:04,010 --> 00:16:15,939
the examples added some previously

233
00:16:11,360 --> 00:16:25,120
missing examples for example related to

234
00:16:15,940 --> 00:16:28,460
live encoding with names or any xml and

235
00:16:25,120 --> 00:16:33,560
we updated the examples not to point to

236
00:16:28,460 --> 00:16:37,760
obsolete RFC's but doors are very minor

237
00:16:33,560 --> 00:16:42,410
editorial changes nothing significant

238
00:16:37,760 --> 00:16:49,040
was changed here we believed to that the

239
00:16:42,410 --> 00:16:53,630
document is much easier to i'm it's more

240
00:16:49,040 --> 00:16:58,060
consistent now so we also believe that

241
00:16:53,630 --> 00:17:04,699
it's ready for working group last call

242
00:16:58,060 --> 00:17:08,030
the next document it was just very at

243
00:17:04,699 --> 00:17:13,459
core rank library which was adopted

244
00:17:08,030 --> 00:17:17,480
during the last IDF so it was

245
00:17:13,459 --> 00:17:23,750
resubmitted us draft IDF korean Kleiber

246
00:17:17,480 --> 00:17:26,390
e there 0 0 the lasts we didn't receive

247
00:17:23,750 --> 00:17:29,450
any new comments from the last version

248
00:17:26,390 --> 00:17:33,980
so there are no changes to this document

249
00:17:29,450 --> 00:17:43,300
or the comments that were submitted

250
00:17:33,980 --> 00:17:43,300
before were already applied 2-0 5 and

251
00:17:43,530 --> 00:17:51,930
yes if there are no concerns about this

252
00:17:48,900 --> 00:17:56,730
document we feel that we can go to a

253
00:17:51,930 --> 00:18:01,050
working little group Lascaux and finally

254
00:17:56,730 --> 00:18:05,640
for the community document what changed

255
00:18:01,050 --> 00:18:09,020
from version 7 to version 0 it is that

256
00:18:05,640 --> 00:18:13,580
we now also reference Oscar as a

257
00:18:09,020 --> 00:18:18,270
possible security mechanism we also

258
00:18:13,580 --> 00:18:23,280
changed a shoot to a must when talking

259
00:18:18,270 --> 00:18:25,830
about user ordered lists in the net

260
00:18:23,280 --> 00:18:29,670
confirm document it's very clear that

261
00:18:25,830 --> 00:18:34,649
those lists must be order as they are

262
00:18:29,670 --> 00:18:39,770
provided and we had put a shoot before

263
00:18:34,650 --> 00:18:39,770
which I realized that we fixed it so

264
00:18:40,430 --> 00:18:48,770
those are the more important changes

265
00:18:44,880 --> 00:18:54,270
that we did other than that we clarified

266
00:18:48,770 --> 00:18:57,570
in section for the treated to how and

267
00:18:54,270 --> 00:19:02,879
that we should add the keys when we add

268
00:18:57,570 --> 00:19:07,590
a new element to a list we updated the

269
00:19:02,880 --> 00:19:12,780
reference to Corian library as it has a

270
00:19:07,590 --> 00:19:15,330
new draft name we had it idea of

271
00:19:12,780 --> 00:19:20,879
copyright to a young description so very

272
00:19:15,330 --> 00:19:24,000
minor changes already and but a few

273
00:19:20,880 --> 00:19:29,220
places we had forgotten to change the

274
00:19:24,000 --> 00:19:32,670
name cometo core conf and we fix that

275
00:19:29,220 --> 00:19:37,290
another minor change was that some

276
00:19:32,670 --> 00:19:40,860
places we were giving the recommended

277
00:19:37,290 --> 00:19:45,470
values /c instead of saying that it's a

278
00:19:40,860 --> 00:19:49,560
generic thing that users can change with

279
00:19:45,470 --> 00:19:51,240
we believe was clear but it could have

280
00:19:49,560 --> 00:19:53,520
been a little bit confusing for some

281
00:19:51,240 --> 00:19:55,179
people so now we use the more generic

282
00:19:53,520 --> 00:19:57,940
form

283
00:19:55,179 --> 00:20:01,479
and we removed the plus signs from

284
00:19:57,940 --> 00:20:08,379
examples as it was discussed during the

285
00:20:01,479 --> 00:20:11,529
last idea so there are no other changes

286
00:20:08,379 --> 00:20:14,019
that we were that we are aware as needed

287
00:20:11,529 --> 00:20:16,869
and we think we are all ready for

288
00:20:14,019 --> 00:20:24,389
working group Lascaux are there any

289
00:20:16,869 --> 00:20:24,389
comments or any concerns so far

290
00:20:26,129 --> 00:20:31,928
Robertson Cisco so a question actually

291
00:20:28,629 --> 00:20:33,609
back on the seats draft and I've made a

292
00:20:31,929 --> 00:20:35,049
comment I think from the alias before I

293
00:20:33,609 --> 00:20:38,080
don't I can't seriously the lease

294
00:20:35,049 --> 00:20:41,469
document that drafts defining the SIDS

295
00:20:38,080 --> 00:20:43,509
as 60 unsigned 64-bit integers mm-hmm

296
00:20:41,469 --> 00:20:45,190
but if they have been put in as Delta's

297
00:20:43,509 --> 00:20:47,289
in the files that are still being done

298
00:20:45,190 --> 00:20:51,159
in the actual mysteries I think you want

299
00:20:47,289 --> 00:20:52,479
us to be unsigned 63 bit integers I'm

300
00:20:51,159 --> 00:20:55,389
sorry that when you subtract them you

301
00:20:52,479 --> 00:20:57,999
still end up with in a assigned 64-bit

302
00:20:55,389 --> 00:20:59,320
integer value okay so you want to in

303
00:20:57,999 --> 00:21:02,399
terms of what you allocate or not

304
00:20:59,320 --> 00:21:05,229
allocate only 63 bits rather than 64 hmm

305
00:21:02,399 --> 00:21:12,939
okay so I think that's been discussed on

306
00:21:05,229 --> 00:21:17,919
the alias so hopefully that sorry about

307
00:21:12,940 --> 00:21:26,190
this emission we will take it okay thank

308
00:21:17,919 --> 00:21:26,190
you Robertson any other comments

309
00:21:33,349 --> 00:21:40,439
ok so I think this was the the state

310
00:21:36,929 --> 00:21:42,690
that we were trying to achieve here we

311
00:21:40,440 --> 00:21:45,209
have you didn't say much about it but

312
00:21:42,690 --> 00:21:49,889
you mentioned P yang if there are

313
00:21:45,209 --> 00:21:51,299
implementations out a number of people

314
00:21:49,889 --> 00:21:58,998
have looked at this

315
00:21:51,299 --> 00:22:03,599
so generally looks ok so this is called

316
00:21:58,999 --> 00:22:05,909
material and I think the important thing

317
00:22:03,599 --> 00:22:10,168
about networking last call is that it

318
00:22:05,909 --> 00:22:13,349
actually will include the net mod and

319
00:22:10,169 --> 00:22:15,149
net conf work group so we will send out

320
00:22:13,349 --> 00:22:17,820
to working with us called to the three

321
00:22:15,149 --> 00:22:20,549
groups with a request to actually have

322
00:22:17,820 --> 00:22:22,708
the discussion on the core mailing list

323
00:22:20,549 --> 00:22:27,029
but I think it's important that these

324
00:22:22,709 --> 00:22:33,659
other groups actually part of this work

325
00:22:27,029 --> 00:22:36,269
new brass core ok so everybody agrees

326
00:22:33,659 --> 00:22:43,169
about that a quick poll who cares about

327
00:22:36,269 --> 00:22:44,489
yang for people for people in this room

328
00:22:43,169 --> 00:22:47,009
I know that there are other people who

329
00:22:44,489 --> 00:22:48,979
are not in this room maybe he'll we have

330
00:22:47,009 --> 00:22:53,820
a conflict with some some management

331
00:22:48,979 --> 00:23:01,049
group I don't know didn't check ok so I

332
00:22:53,820 --> 00:23:03,499
think we will go ahead thank you Oscar

333
00:23:01,049 --> 00:23:03,499
will come

334
00:23:16,210 --> 00:23:25,460
hi hi this is marco de la confirm rise

335
00:23:21,410 --> 00:23:29,330
for the next four presentations first

336
00:23:25,460 --> 00:23:33,290
one group of score yet another advanced

337
00:23:29,330 --> 00:23:35,320
update this was mostly related to

338
00:23:33,290 --> 00:23:38,450
addressing the comments we got from a

339
00:23:35,320 --> 00:23:42,439
not weeks review thanks a lot for that

340
00:23:38,450 --> 00:23:45,380
and a quick overview of those we

341
00:23:42,440 --> 00:23:48,020
clarified the group medina must be

342
00:23:45,380 --> 00:23:50,050
unique for a set of groups under the

343
00:23:48,020 --> 00:23:52,490
same group manager which is also

344
00:23:50,050 --> 00:23:54,440
directly and clearly responsible for

345
00:23:52,490 --> 00:23:57,050
validating the public keys used in the

346
00:23:54,440 --> 00:24:00,590
group since from the joining as to their

347
00:23:57,050 --> 00:24:05,030
format relay parameters and coney and so

348
00:24:00,590 --> 00:24:07,550
on there is also a part of the secure

349
00:24:05,030 --> 00:24:12,010
co-op message processing that was moved

350
00:24:07,550 --> 00:24:15,050
away from this document to the update of

351
00:24:12,010 --> 00:24:18,470
7390 that we are doing with s co and

352
00:24:15,050 --> 00:24:21,950
this is about ensuring that a client

353
00:24:18,470 --> 00:24:24,380
receives up to one response per server

354
00:24:21,950 --> 00:24:26,530
per request with the exception of

355
00:24:24,380 --> 00:24:28,670
observe it used to be the fun here

356
00:24:26,530 --> 00:24:33,610
according to previous discussion moved

357
00:24:28,670 --> 00:24:36,710
away to that other document also we

358
00:24:33,610 --> 00:24:41,449
improved the encoding of the two

359
00:24:36,710 --> 00:24:43,070
external a ids define here according to

360
00:24:41,450 --> 00:24:46,850
previous discussion and results from

361
00:24:43,070 --> 00:24:50,030
interrupts and we decided to totally the

362
00:24:46,850 --> 00:24:53,929
couple and make related to application

363
00:24:50,030 --> 00:24:56,450
specific policies the way a recipient

364
00:24:53,930 --> 00:24:58,460
node handles with the derivation of the

365
00:24:56,450 --> 00:24:59,930
recipient context in case it is still

366
00:24:58,460 --> 00:25:01,760
missing or the retrieval of the

367
00:24:59,930 --> 00:25:03,440
necessary public is the process that

368
00:25:01,760 --> 00:25:06,410
message so that doesn't have to happen

369
00:25:03,440 --> 00:25:10,040
necessarily the first time a message is

370
00:25:06,410 --> 00:25:13,280
received from a yet unknown sender it

371
00:25:10,040 --> 00:25:16,490
could happen before and it's totally up

372
00:25:13,280 --> 00:25:18,830
to application policies also we made a

373
00:25:16,490 --> 00:25:21,890
number of qualifications on group

374
00:25:18,830 --> 00:25:25,580
working in cases where a recipient node

375
00:25:21,890 --> 00:25:27,980
may be interested at its own risk to

376
00:25:25,580 --> 00:25:28,939
some extent to keep for a short while

377
00:25:27,980 --> 00:25:31,400
and

378
00:25:28,940 --> 00:25:33,680
recipient context so to give some time

379
00:25:31,400 --> 00:25:37,930
to have the the key rollover completed

380
00:25:33,680 --> 00:25:37,930
and the group stable in this respect

381
00:25:38,630 --> 00:25:46,310
so what's ongoing a few things we still

382
00:25:43,300 --> 00:25:49,580
would appreciate to get feedback on what

383
00:25:46,310 --> 00:25:52,460
we should actually Monday to implement

384
00:25:49,580 --> 00:25:55,159
as a preferred count the signature

385
00:25:52,460 --> 00:25:58,820
algorithm right now it's EDD say with a

386
00:25:55,160 --> 00:26:03,230
25 509 Jeff this is just about feedback

387
00:25:58,820 --> 00:26:07,310
from vendors and use case deployers and

388
00:26:03,230 --> 00:26:10,760
so on in still an open question then one

389
00:26:07,310 --> 00:26:13,250
particular point from Jim very latest

390
00:26:10,760 --> 00:26:17,030
comments that we discussed last week

391
00:26:13,250 --> 00:26:20,870
thanks for that there is a corner case

392
00:26:17,030 --> 00:26:24,100
related to the case where recipient node

393
00:26:20,870 --> 00:26:26,689
can keep for while the the old previous

394
00:26:24,100 --> 00:26:29,540
recipient context and key material where

395
00:26:26,690 --> 00:26:31,040
a request is essentially protected with

396
00:26:29,540 --> 00:26:33,379
the old key material and when the

397
00:26:31,040 --> 00:26:35,450
recipient receive it well it's still in

398
00:26:33,380 --> 00:26:38,090
a position to decrypt it but it also has

399
00:26:35,450 --> 00:26:40,700
the new context ready to go and it

400
00:26:38,090 --> 00:26:42,649
should use the latest context to protect

401
00:26:40,700 --> 00:26:44,540
the response but just to give a

402
00:26:42,650 --> 00:26:47,480
confirmation to the client that then

403
00:26:44,540 --> 00:26:50,510
they are aligned again we are going to

404
00:26:47,480 --> 00:26:53,120
include the group ID as ID context at

405
00:26:50,510 --> 00:26:56,120
the response in this first response to

406
00:26:53,120 --> 00:26:58,790
the client and at the very least in this

407
00:26:56,120 --> 00:27:01,489
first following notification in case

408
00:26:58,790 --> 00:27:05,960
observers use so we plan to include this

409
00:27:01,490 --> 00:27:09,080
node also in the next update also right

410
00:27:05,960 --> 00:27:11,510
now we are still defining two new Ayana

411
00:27:09,080 --> 00:27:13,280
registers in this document for

412
00:27:11,510 --> 00:27:15,860
indicating the structure to follow when

413
00:27:13,280 --> 00:27:18,680
indicating parameters for the use

414
00:27:15,860 --> 00:27:20,330
conditioner algorithm in keys we are

415
00:27:18,680 --> 00:27:21,950
going to remove these registries from

416
00:27:20,330 --> 00:27:24,919
here because we are instead going to

417
00:27:21,950 --> 00:27:28,550
point that extended Ayana registers that

418
00:27:24,920 --> 00:27:30,650
Jim has defined in the update to cozy as

419
00:27:28,550 --> 00:27:35,720
useful for grupos core and for other

420
00:27:30,650 --> 00:27:38,060
words for instance to a doc so as

421
00:27:35,720 --> 00:27:40,460
immediate next steps we plan to

422
00:27:38,060 --> 00:27:42,409
integrate the totally non critical

423
00:27:40,460 --> 00:27:45,500
comments we got from Jim

424
00:27:42,410 --> 00:27:47,590
we can discuss with him already and it's

425
00:27:45,500 --> 00:27:50,300
relatively easy to incorporate them and

426
00:27:47,590 --> 00:27:53,780
removals the IANA registers I've just

427
00:27:50,300 --> 00:27:55,370
mentioned but considering the very

428
00:27:53,780 --> 00:27:58,040
advanced status of the document that got

429
00:27:55,370 --> 00:27:59,659
many reviews so far and and this

430
00:27:58,040 --> 00:28:01,040
relatively easy in comments from

431
00:27:59,660 --> 00:28:04,370
Jeanette we know already how to address

432
00:28:01,040 --> 00:28:07,730
and the many interrupts have gone

433
00:28:04,370 --> 00:28:09,169
through we think this can actually be

434
00:28:07,730 --> 00:28:20,780
considered to move on to work in Reverse

435
00:28:09,170 --> 00:28:24,770
call now so of course the usual

436
00:28:20,780 --> 00:28:30,560
questions so who has read this version

437
00:28:24,770 --> 00:28:34,400
of the document well maybe a little bit

438
00:28:30,560 --> 00:28:37,820
too little time since the deadline who

439
00:28:34,400 --> 00:28:43,580
has read a version of this document you

440
00:28:37,820 --> 00:28:50,810
Trish great thank you yeah I agree with

441
00:28:43,580 --> 00:28:54,649
that and two two hands and job oh okay

442
00:28:50,810 --> 00:28:57,830
so it would be nice if the people who

443
00:28:54,650 --> 00:29:01,790
previously supplied reuse would send a

444
00:28:57,830 --> 00:29:04,790
quick notice to the mailing list yes

445
00:29:01,790 --> 00:29:06,080
this is where Alaska already I mean

446
00:29:04,790 --> 00:29:09,770
we're still going to have a working

447
00:29:06,080 --> 00:29:12,730
class called there but it would be nice

448
00:29:09,770 --> 00:29:14,930
to hear from the reviewers that they are

449
00:29:12,730 --> 00:29:19,270
they think their comments have been

450
00:29:14,930 --> 00:29:24,770
addressed so that that would be my

451
00:29:19,270 --> 00:29:28,220
proposal for proceeding yes so which

452
00:29:24,770 --> 00:29:29,750
normative references do you have which

453
00:29:28,220 --> 00:29:33,980
of the other things need to be done

454
00:29:29,750 --> 00:29:34,370
before this can become our see from the

455
00:29:33,980 --> 00:29:37,100
jabber

456
00:29:34,370 --> 00:29:42,669
Jim do you want this now or after the

457
00:29:37,100 --> 00:29:45,679
next version I guess like the this is

458
00:29:42,670 --> 00:29:48,640
email saying yes I think this is ready

459
00:29:45,680 --> 00:29:48,640
for working with law school

460
00:29:57,980 --> 00:30:10,400
for both of you so thank you I can think

461
00:30:06,210 --> 00:30:13,919
of 7390 bees there's no motive reference

462
00:30:10,400 --> 00:30:19,200
here that is not adopted yet more on

463
00:30:13,919 --> 00:30:21,780
this later nothing else that I can

464
00:30:19,200 --> 00:30:23,850
remember actually I'll double-check but

465
00:30:21,780 --> 00:30:27,510
that's probably the elephant in the room

466
00:30:23,850 --> 00:30:31,020
okay so I think we need to discuss how

467
00:30:27,510 --> 00:30:34,410
these these drugs can move without

468
00:30:31,020 --> 00:30:44,389
ending up in a giant cluster strike on

469
00:30:34,410 --> 00:30:47,970
something right thank you okay next then

470
00:30:44,390 --> 00:30:50,580
this is another supportive document in a

471
00:30:47,970 --> 00:30:53,910
sense of non normative as we presented

472
00:30:50,580 --> 00:30:56,730
before of course and just to recap this

473
00:30:53,910 --> 00:31:01,169
is about assisting just deployed device

474
00:30:56,730 --> 00:31:03,720
that need to find out how to join groups

475
00:31:01,169 --> 00:31:06,630
they're interested in they have

476
00:31:03,720 --> 00:31:09,330
essentially no idea what the group

477
00:31:06,630 --> 00:31:12,360
manager responsible for a group is how

478
00:31:09,330 --> 00:31:14,189
to approach it and the address the join

479
00:31:12,360 --> 00:31:16,860
resource to talk to in order to join the

480
00:31:14,190 --> 00:31:18,809
group and so on and as even the corner

481
00:31:16,860 --> 00:31:21,330
case where the device is deployed

482
00:31:18,809 --> 00:31:23,928
even before the group manager or before

483
00:31:21,330 --> 00:31:26,340
the group manager is at the group and

484
00:31:23,929 --> 00:31:28,860
the devices they're in a position where

485
00:31:26,340 --> 00:31:31,649
it needs to find out how to join a group

486
00:31:28,860 --> 00:31:33,959
and information to join for this we are

487
00:31:31,650 --> 00:31:36,299
proposing to use the chorizos directory

488
00:31:33,960 --> 00:31:39,360
in a sense that the group manager

489
00:31:36,299 --> 00:31:42,179
essentially registers addresses

490
00:31:39,360 --> 00:31:44,129
directory the links to its own drawing

491
00:31:42,179 --> 00:31:47,929
resources that the device has to talk to

492
00:31:44,130 --> 00:31:47,929
in order to join the group and

493
00:31:48,260 --> 00:31:52,080
properties of the group configuration

494
00:31:50,669 --> 00:31:53,910
aspect of the group's can be also

495
00:31:52,080 --> 00:31:56,460
included in the link description as

496
00:31:53,910 --> 00:31:59,340
target attributes essentially then

497
00:31:56,460 --> 00:32:00,630
devices perform resource lookups on the

498
00:31:59,340 --> 00:32:02,790
resource directory essentially to

499
00:32:00,630 --> 00:32:05,629
retrieve that link a pointer to the

500
00:32:02,790 --> 00:32:08,809
group manager in the join resource

501
00:32:05,629 --> 00:32:11,539
this was also recently disgusting one of

502
00:32:08,809 --> 00:32:15,649
the latest core inter him and a few

503
00:32:11,539 --> 00:32:19,820
people were asking for having widely

504
00:32:15,649 --> 00:32:22,969
shared a diagram along these lines where

505
00:32:19,820 --> 00:32:25,580
the whole lifecycle flow was shown and

506
00:32:22,970 --> 00:32:28,100
this document is in fact on on the very

507
00:32:25,580 --> 00:32:30,049
first step where the client discovers

508
00:32:28,100 --> 00:32:32,359
essentially a link to the join resource

509
00:32:30,049 --> 00:32:35,239
at the group manager and then things

510
00:32:32,359 --> 00:32:37,928
move on on the ACE domain when you get

511
00:32:35,239 --> 00:32:40,729
authorized to in fact join the group

512
00:32:37,929 --> 00:32:43,129
through the general resource now group

513
00:32:40,729 --> 00:32:45,559
membership resource at the group manager

514
00:32:43,129 --> 00:32:47,629
and then back to core when after having

515
00:32:45,559 --> 00:32:51,849
joined the group you can use grupos core

516
00:32:47,629 --> 00:32:54,498
to communicate inside the group so

517
00:32:51,849 --> 00:32:56,479
suggestions are welcome on the best way

518
00:32:54,499 --> 00:32:58,960
to make this diagram circulating where

519
00:32:56,479 --> 00:33:02,450
to include a wiki a separate document

520
00:32:58,960 --> 00:33:04,609
whatever well of course this document is

521
00:33:02,450 --> 00:33:06,799
covering step one but except for the

522
00:33:04,609 --> 00:33:10,449
color we can now put it in an RFC as

523
00:33:06,799 --> 00:33:18,429
well not yet I know things are changing

524
00:33:10,450 --> 00:33:21,889
but right except for the colors okay

525
00:33:18,429 --> 00:33:24,529
this one through in a sense a kind of

526
00:33:21,889 --> 00:33:26,779
review of scrutiny again during a design

527
00:33:24,529 --> 00:33:29,119
workshop we had in Stockholm in October

528
00:33:26,779 --> 00:33:31,999
and then we discussed the very same day

529
00:33:29,119 --> 00:33:35,330
a few hours later at the core interim we

530
00:33:31,999 --> 00:33:37,099
had and we clarified already in the

531
00:33:35,330 --> 00:33:39,049
abstract and most extensively in the

532
00:33:37,099 --> 00:33:42,799
introduction that the rationale we have

533
00:33:39,049 --> 00:33:44,479
been building this approach on the

534
00:33:42,799 --> 00:33:46,999
problem for the device is discovering

535
00:33:44,479 --> 00:33:50,179
the groups to join and properties of the

536
00:33:46,999 --> 00:33:51,499
groups and how to join them and we are

537
00:33:50,179 --> 00:33:54,379
mapping this to the problem of

538
00:33:51,499 --> 00:33:55,940
discovering links that grant access to

539
00:33:54,379 --> 00:33:58,279
the group so the problem becomes

540
00:33:55,940 --> 00:34:00,409
discovering the links in their

541
00:33:58,279 --> 00:34:01,970
description and it happens that there is

542
00:34:00,409 --> 00:34:04,190
an approach for doing that in core which

543
00:34:01,970 --> 00:34:06,320
is the resource directory so let's just

544
00:34:04,190 --> 00:34:09,889
use it in order to find out the links to

545
00:34:06,320 --> 00:34:11,599
join the group innocence editorially if

546
00:34:09,889 --> 00:34:13,909
we rename general resource to be called

547
00:34:11,599 --> 00:34:16,129
group membership resource consistently

548
00:34:13,909 --> 00:34:19,429
with the works in a scuzz this is not

549
00:34:16,129 --> 00:34:22,458
about joining anymore it also has

550
00:34:19,429 --> 00:34:23,869
meaning for the the notes that are

551
00:34:22,458 --> 00:34:25,518
already members in the group later on

552
00:34:23,869 --> 00:34:31,399
and can interact with the group manager

553
00:34:25,518 --> 00:34:35,089
as current members like that in the ACE

554
00:34:31,399 --> 00:34:38,058
document we redefined this sec GP

555
00:34:35,089 --> 00:34:40,728
parameter to be a simply an invariant

556
00:34:38,059 --> 00:34:42,709
plane name of the oscar group that is

557
00:34:40,728 --> 00:34:46,009
not related anymore at all with the

558
00:34:42,708 --> 00:34:48,888
actual oscar group ID or as we were

559
00:34:46,009 --> 00:34:50,599
doing before a zero epoch oscar group ID

560
00:34:48,889 --> 00:34:53,149
so it's just much easier to handle and

561
00:34:50,599 --> 00:34:56,899
it's just a plain identifier of the

562
00:34:53,149 --> 00:35:00,618
oscar group we made also a minor change

563
00:34:56,899 --> 00:35:03,499
in in how values are defined for the

564
00:35:00,619 --> 00:35:04,969
target attributes ascribing properties

565
00:35:03,499 --> 00:35:06,799
of the group and in particular the

566
00:35:04,969 --> 00:35:10,180
signature algorithms and related

567
00:35:06,799 --> 00:35:13,459
parameters we were before considering

568
00:35:10,180 --> 00:35:15,499
taking value from the name column of the

569
00:35:13,459 --> 00:35:19,279
corresponding cause we registries we

570
00:35:15,499 --> 00:35:20,749
switch to the value column cuz the

571
00:35:19,279 --> 00:35:23,989
definition of those registers say that

572
00:35:20,749 --> 00:35:26,419
value in the value column must be unique

573
00:35:23,989 --> 00:35:30,259
rather than so it just seemed to be

574
00:35:26,420 --> 00:35:32,239
a better choice consistently with all

575
00:35:30,259 --> 00:35:34,789
these updates we also update in the

576
00:35:32,239 --> 00:35:36,349
examples that I remember include also a

577
00:35:34,789 --> 00:35:39,289
real-world step-by-step life

578
00:35:36,349 --> 00:35:44,959
installation provided in supported by

579
00:35:39,289 --> 00:35:46,459
bug net to open points that I can

580
00:35:44,959 --> 00:35:48,859
mention the first one is actually moving

581
00:35:46,459 --> 00:35:50,509
forward that was discussed before we

582
00:35:48,859 --> 00:35:52,759
have a number of target attributes here

583
00:35:50,509 --> 00:35:55,549
you'll be good to register them through

584
00:35:52,759 --> 00:35:58,400
there's currently no registry for target

585
00:35:55,549 --> 00:36:00,319
attributes as I said this is moving

586
00:35:58,400 --> 00:36:03,619
forward and apparently there is going to

587
00:36:00,319 --> 00:36:06,558
be at some point working progress

588
00:36:03,619 --> 00:36:09,529
document not published yet called core

589
00:36:06,559 --> 00:36:11,660
attributes tentatively which is also

590
00:36:09,529 --> 00:36:15,109
going to cover the creation of such

591
00:36:11,660 --> 00:36:17,328
registry so when that happens there will

592
00:36:15,109 --> 00:36:21,680
be opportunity also to register their

593
00:36:17,329 --> 00:36:23,390
this target attributes and maybe you

594
00:36:21,680 --> 00:36:27,558
should add that this hasn't happened

595
00:36:23,390 --> 00:36:30,390
already in 2012 because at the time the

596
00:36:27,559 --> 00:36:34,000
document we were depending on

597
00:36:30,390 --> 00:36:40,210
there is no such residency and now the

598
00:36:34,000 --> 00:36:43,180
update RFC 82-88 actually says if a

599
00:36:40,210 --> 00:36:45,700
serialization of weblinks wants to

600
00:36:43,180 --> 00:36:47,950
define such a registry it can go ahead

601
00:36:45,700 --> 00:36:51,220
and do so and so we can go ahead and do

602
00:36:47,950 --> 00:36:52,629
so and probably should and it's just

603
00:36:51,220 --> 00:36:56,669
that somebody has to do the work and

604
00:36:52,630 --> 00:36:59,620
that somebody has to hatch that egg

605
00:36:56,670 --> 00:37:02,890
right and has started in fact

606
00:36:59,620 --> 00:37:06,100
and speaking of target attributes we

607
00:37:02,890 --> 00:37:08,259
have postponed this for a while but I've

608
00:37:06,100 --> 00:37:12,450
been thinking of in fact adding one more

609
00:37:08,260 --> 00:37:15,580
target attribute in the link description

610
00:37:12,450 --> 00:37:19,120
specifying the URI of the authorization

611
00:37:15,580 --> 00:37:22,090
server that is supposed later on in the

612
00:37:19,120 --> 00:37:24,490
ACE phase of the full lifecycle of the

613
00:37:22,090 --> 00:37:27,610
device to provide an access token to

614
00:37:24,490 --> 00:37:29,229
grant access to the joint resource at

615
00:37:27,610 --> 00:37:33,640
the group manager to proceed with the

616
00:37:29,230 --> 00:37:36,850
joining this of course is for the client

617
00:37:33,640 --> 00:37:38,770
to continue anyway experiencing an

618
00:37:36,850 --> 00:37:41,440
unauthorized access out of wish you'd

619
00:37:38,770 --> 00:37:43,030
get that URI anyway eventually from the

620
00:37:41,440 --> 00:37:45,490
group manager so it's a matter of

621
00:37:43,030 --> 00:37:48,670
optimization and we don't see any

622
00:37:45,490 --> 00:37:50,910
particular problem in including also

623
00:37:48,670 --> 00:37:53,980
this link as for the target attribute so

624
00:37:50,910 --> 00:37:56,830
unless there are strong objections

625
00:37:53,980 --> 00:38:04,800
against that we plan to do that in the

626
00:37:56,830 --> 00:38:04,799
next update and it seems there are not

627
00:38:06,720 --> 00:38:14,740
right if I may play close for a second

628
00:38:10,480 --> 00:38:16,620
he might tell you that you are eyes the

629
00:38:14,740 --> 00:38:20,169
things that links point to and

630
00:38:16,620 --> 00:38:23,170
necessarily target attributes but I

631
00:38:20,170 --> 00:38:26,950
can't emulate close beyond that so I can

632
00:38:23,170 --> 00:38:33,420
say oh my T's proposal designed for that

633
00:38:26,950 --> 00:38:36,069
I will check also with Klaus Thanks okay

634
00:38:33,420 --> 00:38:39,040
yeah to summarize most of the updates

635
00:38:36,070 --> 00:38:40,980
were clarifying the rationale of this

636
00:38:39,040 --> 00:38:43,599
approach in introduction mostly and

637
00:38:40,980 --> 00:38:46,529
encoding of target attributes and

638
00:38:43,599 --> 00:38:50,140
new additional why we can include

639
00:38:46,529 --> 00:38:52,059
updating example accordingly we think

640
00:38:50,140 --> 00:38:52,359
the document is already in pretty good

641
00:38:52,059 --> 00:38:54,489
shape

642
00:38:52,359 --> 00:38:56,140
actually to move forward and it went

643
00:38:54,489 --> 00:38:58,180
through I would say a review process

644
00:38:56,140 --> 00:39:00,098
during that design workshop we had in

645
00:38:58,180 --> 00:39:02,589
Stockholm and and again during the

646
00:39:00,099 --> 00:39:04,599
following interim still we would also

647
00:39:02,589 --> 00:39:08,249
like to get review of the actual

648
00:39:04,599 --> 00:39:11,829
documents as promised two meetings ago

649
00:39:08,249 --> 00:39:13,899
with a few volunteers so yeah we we

650
00:39:11,829 --> 00:39:20,710
solicit again reviews on the actual

651
00:39:13,900 --> 00:39:22,539
document in order to process them ok so

652
00:39:20,710 --> 00:39:25,390
that the way forward is that you will

653
00:39:22,539 --> 00:39:29,499
make the people who promised reviews and

654
00:39:25,390 --> 00:39:39,759
I didn't know this list again just as a

655
00:39:29,499 --> 00:39:51,578
reminder with minutes link yeah thank

656
00:39:39,759 --> 00:39:53,829
you okay next then this work was also

657
00:39:51,579 --> 00:39:56,529
presented for the first time at the last

658
00:39:53,829 --> 00:39:59,910
meeting in montréal Montreal we are in

659
00:39:56,529 --> 00:40:04,210
for defining multicast responses as

660
00:39:59,910 --> 00:40:07,359
observed notifications and just as a

661
00:40:04,210 --> 00:40:10,719
recap this is in general useful the

662
00:40:07,359 --> 00:40:13,828
moment you have multiple clients of all

663
00:40:10,719 --> 00:40:17,589
observing a same resource on the server

664
00:40:13,829 --> 00:40:19,450
that rather than replying with many

665
00:40:17,589 --> 00:40:22,359
individual responses to each of those

666
00:40:19,450 --> 00:40:25,899
clients would instead said send a single

667
00:40:22,359 --> 00:40:27,759
multicast notification and the very

668
00:40:25,900 --> 00:40:29,440
practical use case we consider is

669
00:40:27,759 --> 00:40:32,739
reffering use case from the beginning is

670
00:40:29,440 --> 00:40:34,900
pub/sub where then you have a number of

671
00:40:32,739 --> 00:40:38,160
subscribers all interested in observing

672
00:40:34,900 --> 00:40:40,569
same request on the broker server and

673
00:40:38,160 --> 00:40:42,489
other than the performance benefit of

674
00:40:40,569 --> 00:40:45,130
multicast here you'll be able then to

675
00:40:42,489 --> 00:40:45,579
keep those subscribers as pure clients

676
00:40:45,130 --> 00:40:47,739
only

677
00:40:45,579 --> 00:40:50,920
so of course multicast responses are not

678
00:40:47,739 --> 00:40:53,249
defined now you can imagine why it's

679
00:40:50,920 --> 00:40:55,690
mostly because of problems related to

680
00:40:53,249 --> 00:40:56,779
the binding of talking values between

681
00:40:55,690 --> 00:40:59,960
requests and responses

682
00:40:56,780 --> 00:41:01,880
not to mention security and this

683
00:40:59,960 --> 00:41:04,610
document is exactly about filling this

684
00:41:01,880 --> 00:41:08,570
gap and described how this multicast

685
00:41:04,610 --> 00:41:11,890
responses can work the approach we had

686
00:41:08,570 --> 00:41:15,950
in the previous version was pretty much

687
00:41:11,890 --> 00:41:17,450
resigned more on that later but 21 of

688
00:41:15,950 --> 00:41:19,669
the most critical question from the

689
00:41:17,450 --> 00:41:22,520
previous meeting on the handling on the

690
00:41:19,670 --> 00:41:25,580
token space we ended to something like

691
00:41:22,520 --> 00:41:28,460
this the token space formally belongs to

692
00:41:25,580 --> 00:41:32,150
the group of observers but then

693
00:41:28,460 --> 00:41:35,630
practically the group is entrusting the

694
00:41:32,150 --> 00:41:39,170
protocol management of that space to the

695
00:41:35,630 --> 00:41:41,690
server bottom line the result is that

696
00:41:39,170 --> 00:41:44,660
all clients will be aligned to a very

697
00:41:41,690 --> 00:41:47,390
same token value that will appear over

698
00:41:44,660 --> 00:41:50,450
and over in all notifications for the

699
00:41:47,390 --> 00:41:52,580
same group of serration and like before

700
00:41:50,450 --> 00:41:54,680
it is possible to have security using

701
00:41:52,580 --> 00:41:57,440
group of score to protect all those

702
00:41:54,680 --> 00:41:58,669
multicast notifications and when that's

703
00:41:57,440 --> 00:42:00,800
the case the clients will be

704
00:41:58,670 --> 00:42:04,970
synchronized in using all the same

705
00:42:00,800 --> 00:42:08,150
externally ad for well protecting a very

706
00:42:04,970 --> 00:42:11,419
fine those multicast responses this is

707
00:42:08,150 --> 00:42:13,460
at the high level a number of

708
00:42:11,420 --> 00:42:15,200
assumptions the clients have already

709
00:42:13,460 --> 00:42:17,150
discovered the exact resource they want

710
00:42:15,200 --> 00:42:19,490
to observe on the server and the server

711
00:42:17,150 --> 00:42:21,650
knows already the multicast IP address

712
00:42:19,490 --> 00:42:24,169
and port where to send all teca's

713
00:42:21,650 --> 00:42:26,660
notifications to if group of score is

714
00:42:24,170 --> 00:42:29,630
used to protect the notifications at

715
00:42:26,660 --> 00:42:31,730
least the server must be already in the

716
00:42:29,630 --> 00:42:34,190
right Oscar group not necessarily the

717
00:42:31,730 --> 00:42:36,530
client from the beginning but there's a

718
00:42:34,190 --> 00:42:39,050
way I can show you so that the server

719
00:42:36,530 --> 00:42:42,980
can help the clients to understand on

720
00:42:39,050 --> 00:42:49,130
the run was the right Oscar group to

721
00:42:42,980 --> 00:42:52,670
consider so this new design came up out

722
00:42:49,130 --> 00:42:55,430
of the many feedback we got in Montreal

723
00:42:52,670 --> 00:42:59,960
and then was extensively discussed

724
00:42:55,430 --> 00:43:01,790
during a meeting we had a design

725
00:42:59,960 --> 00:43:04,520
workshop actually we had in Stockholm in

726
00:43:01,790 --> 00:43:06,190
October and then summarized also a decor

727
00:43:04,520 --> 00:43:09,400
interim

728
00:43:06,190 --> 00:43:11,920
we concluded that it's the server that

729
00:43:09,400 --> 00:43:15,009
can practically start the group of

730
00:43:11,920 --> 00:43:17,349
servation on behalf on the group at any

731
00:43:15,009 --> 00:43:20,349
point in time but practically in case

732
00:43:17,349 --> 00:43:23,200
one of these two things happen first

733
00:43:20,349 --> 00:43:26,380
there is no observers yet on that

734
00:43:23,200 --> 00:43:28,180
resource a first client comes and the

735
00:43:26,380 --> 00:43:30,609
server decides right away then to start

736
00:43:28,180 --> 00:43:33,609
the group observation or there are

737
00:43:30,609 --> 00:43:35,500
already a number of clients observing

738
00:43:33,609 --> 00:43:37,720
that resource in a traditional way and

739
00:43:35,500 --> 00:43:40,480
the server decides no it is just better

740
00:43:37,720 --> 00:43:44,078
that they all switch as observers

741
00:43:40,480 --> 00:43:46,029
participating in a group observation but

742
00:43:44,079 --> 00:43:48,160
how does the server predict we start

743
00:43:46,029 --> 00:43:51,009
this group observation it has to do that

744
00:43:48,160 --> 00:43:53,649
like on behalf of the group and to that

745
00:43:51,009 --> 00:43:57,400
end the server generates what we call a

746
00:43:53,650 --> 00:43:59,470
phantom observation request so it's an

747
00:43:57,400 --> 00:44:01,599
observation request for registration

748
00:43:59,470 --> 00:44:06,098
that the server generates itself and

749
00:44:01,599 --> 00:44:08,680
sends to yourself without hitting the

750
00:44:06,099 --> 00:44:12,880
wire of course it's like if it is sent

751
00:44:08,680 --> 00:44:14,259
by the group so like from the multicast

752
00:44:12,880 --> 00:44:16,539
IP address that of course cannot really

753
00:44:14,259 --> 00:44:19,420
happen on the network but that's just to

754
00:44:16,539 --> 00:44:21,579
give you the intuition and all the

755
00:44:19,420 --> 00:44:24,190
following multicast responses as

756
00:44:21,579 --> 00:44:26,470
notifications will be in fact sent to

757
00:44:24,190 --> 00:44:28,990
that Nauticus DP address and they will

758
00:44:26,470 --> 00:44:31,180
be in fact a response to that phantom

759
00:44:28,990 --> 00:44:35,669
request not really to any individual

760
00:44:31,180 --> 00:44:38,200
registration requests sent by the client

761
00:44:35,670 --> 00:44:40,000
so practically the server decides to

762
00:44:38,200 --> 00:44:42,720
start the group observation it was this

763
00:44:40,000 --> 00:44:45,099
phantom request sends it to itself and

764
00:44:42,720 --> 00:44:47,529
when building it it has to choose a

765
00:44:45,099 --> 00:44:50,069
token value well it chooses it from the

766
00:44:47,529 --> 00:44:53,200
token space that practically the server

767
00:44:50,069 --> 00:44:55,990
manages and this token space is related

768
00:44:53,200 --> 00:44:58,058
to messages that are like coming from

769
00:44:55,990 --> 00:45:00,609
the multicast IP address of the group

770
00:44:58,059 --> 00:45:02,950
and address to the target resource so

771
00:45:00,609 --> 00:45:05,049
the server has all the ability to to

772
00:45:02,950 --> 00:45:07,689
keep the uniqueness of the all-news

773
00:45:05,049 --> 00:45:09,700
token values from that space the server

774
00:45:07,690 --> 00:45:12,220
process is this phantom request like if

775
00:45:09,700 --> 00:45:16,390
coming from the group from the multicast

776
00:45:12,220 --> 00:45:19,779
IP address I'm from then on that token

777
00:45:16,390 --> 00:45:22,870
value T the server chose is the one used

778
00:45:19,780 --> 00:45:24,610
Observation practically in responses the

779
00:45:22,870 --> 00:45:27,940
phantom request is stole and that

780
00:45:24,610 --> 00:45:30,490
doesn't have to be a response right away

781
00:45:27,940 --> 00:45:32,080
a notification right away that can just

782
00:45:30,490 --> 00:45:38,259
happen when the resource value in fact

783
00:45:32,080 --> 00:45:40,120
changes but what about the clients the

784
00:45:38,260 --> 00:45:44,110
server has to tell the client that this

785
00:45:40,120 --> 00:45:46,299
is happening as a new client comes or in

786
00:45:44,110 --> 00:45:48,640
case clients already observing in a

787
00:45:46,300 --> 00:45:51,190
traditional way are switched to the

788
00:45:48,640 --> 00:45:53,430
group observation in either case the

789
00:45:51,190 --> 00:45:56,860
server sends to the clients an error

790
00:45:53,430 --> 00:45:59,200
response that includes some information

791
00:45:56,860 --> 00:46:00,820
and in particular the IP multicast

792
00:45:59,200 --> 00:46:04,839
address and port where the notifications

793
00:46:00,820 --> 00:46:07,360
will be sent a serialization of the

794
00:46:04,840 --> 00:46:09,460
phantom request from which the client

795
00:46:07,360 --> 00:46:12,400
can take all the little information they

796
00:46:09,460 --> 00:46:14,620
need and a current representation of the

797
00:46:12,400 --> 00:46:15,940
target resource cause clients were

798
00:46:14,620 --> 00:46:18,279
interested in knowing that value already

799
00:46:15,940 --> 00:46:20,380
in the first place and it's a bit unfair

800
00:46:18,280 --> 00:46:22,660
to push them to send yet another request

801
00:46:20,380 --> 00:46:24,390
we can include the current value right

802
00:46:22,660 --> 00:46:26,830
there already

803
00:46:24,390 --> 00:46:29,230
then later on of course when the value

804
00:46:26,830 --> 00:46:31,090
of the resource changes the server can

805
00:46:29,230 --> 00:46:33,340
send multicast notifications to that IP

806
00:46:31,090 --> 00:46:35,800
multicast address with the token value

807
00:46:33,340 --> 00:46:38,230
it's selected for the final request and

808
00:46:35,800 --> 00:46:40,240
in fact the phantom the multicast

809
00:46:38,230 --> 00:46:43,300
notifications will be a response to the

810
00:46:40,240 --> 00:46:45,819
phantom request but when getting an

811
00:46:43,300 --> 00:46:48,670
error response of this kind the client

812
00:46:45,820 --> 00:46:51,120
will essentially start or configure on

813
00:46:48,670 --> 00:46:53,590
inside an observation for that resource

814
00:46:51,120 --> 00:46:56,259
on its own client end point associated

815
00:46:53,590 --> 00:46:58,240
to that multicast IP address and we'll

816
00:46:56,260 --> 00:47:00,640
accept notification address the debt

817
00:46:58,240 --> 00:47:03,910
multicast address with that token value

818
00:47:00,640 --> 00:47:06,250
T that the client retrieved from the

819
00:47:03,910 --> 00:47:10,779
serialized phantom request delivered in

820
00:47:06,250 --> 00:47:12,640
the error response as an example here we

821
00:47:10,780 --> 00:47:14,470
have a server that has no observers at

822
00:47:12,640 --> 00:47:14,980
all at the beginning on this resource as

823
00:47:14,470 --> 00:47:17,680
lee-char

824
00:47:14,980 --> 00:47:20,530
and first client one sends the

825
00:47:17,680 --> 00:47:22,750
traditional observation request and the

826
00:47:20,530 --> 00:47:24,580
server decides right away no we'll go

827
00:47:22,750 --> 00:47:27,250
for a group of servation here with this

828
00:47:24,580 --> 00:47:29,890
first client participate in it so the

829
00:47:27,250 --> 00:47:32,730
server decides to allocate the token

830
00:47:29,890 --> 00:47:34,270
value FF creates a phantom request

831
00:47:32,730 --> 00:47:36,940
essentially the message

832
00:47:34,270 --> 00:47:39,700
in the green box says that talking value

833
00:47:36,940 --> 00:47:42,130
is selected send it to himself in a way

834
00:47:39,700 --> 00:47:45,250
like if coming from the multicast

835
00:47:42,130 --> 00:47:47,140
address now replies to the client with

836
00:47:45,250 --> 00:47:50,230
an error message we went for the error

837
00:47:47,140 --> 00:47:52,779
code 5:03 does seem the most appropriate

838
00:47:50,230 --> 00:47:54,370
to consider here and the payload of

839
00:47:52,780 --> 00:47:56,560
these error messages I said includes

840
00:47:54,370 --> 00:47:58,839
remove the cast address to be considered

841
00:47:56,560 --> 00:48:01,420
for notifications the serialization of

842
00:47:58,840 --> 00:48:04,960
the whole phantom request and the

843
00:48:01,420 --> 00:48:07,840
current resource value and well

844
00:48:04,960 --> 00:48:10,180
something identical happens when a next

845
00:48:07,840 --> 00:48:12,310
client CTO comes other than well there's

846
00:48:10,180 --> 00:48:14,529
no need anymore for yet another fan to

847
00:48:12,310 --> 00:48:16,600
request the observation is ongoing

848
00:48:14,530 --> 00:48:19,290
already but the response to the client

849
00:48:16,600 --> 00:48:22,270
is exactly the same as for the other one

850
00:48:19,290 --> 00:48:24,910
but eventually the value of the resource

851
00:48:22,270 --> 00:48:26,140
changes and then it's when the server

852
00:48:24,910 --> 00:48:28,629
can finally send the multicast

853
00:48:26,140 --> 00:48:30,400
notification to the group address to

854
00:48:28,630 --> 00:48:33,430
that multicast address and with the

855
00:48:30,400 --> 00:48:36,130
token value chosen for this group

856
00:48:33,430 --> 00:48:38,200
observation so the binding here at the

857
00:48:36,130 --> 00:48:40,060
co-op level is between the multi class

858
00:48:38,200 --> 00:48:44,020
notifications and the phantom request

859
00:48:40,060 --> 00:48:46,720
with that token value if you want to add

860
00:48:44,020 --> 00:48:48,520
security on this well it's essentially

861
00:48:46,720 --> 00:48:50,560
about protecting the phantom request

862
00:48:48,520 --> 00:48:52,840
with grupo score in the first place

863
00:48:50,560 --> 00:48:54,370
and the server this has to be from the

864
00:48:52,840 --> 00:48:57,240
very beginning a member of the Oscar

865
00:48:54,370 --> 00:48:59,920
group so it's in a position to do that

866
00:48:57,240 --> 00:49:01,689
this one to request will then have an

867
00:48:59,920 --> 00:49:05,280
oscar option of course which will

868
00:49:01,690 --> 00:49:08,800
include the sender ID of the server and

869
00:49:05,280 --> 00:49:12,130
the consumed sequence number value of

870
00:49:08,800 --> 00:49:14,890
that sender let's say as x and y the

871
00:49:12,130 --> 00:49:17,710
point here is that then every single

872
00:49:14,890 --> 00:49:20,430
following multicast if occation will be

873
00:49:17,710 --> 00:49:22,810
protecting using as external a ad

874
00:49:20,430 --> 00:49:25,990
structure including X&Y

875
00:49:22,810 --> 00:49:27,549
as Raggedy Ann Wragby heavy which is

876
00:49:25,990 --> 00:49:30,399
consistent they are the ones from the

877
00:49:27,550 --> 00:49:32,080
phantom requests in fact and since this

878
00:49:30,400 --> 00:49:33,820
phantom requests protecting the group of

879
00:49:32,080 --> 00:49:35,560
score will be still included in the

880
00:49:33,820 --> 00:49:37,390
error response to the clients they will

881
00:49:35,560 --> 00:49:40,060
be able to retrieve this information to

882
00:49:37,390 --> 00:49:41,890
and to build correctly that externally

883
00:49:40,060 --> 00:49:44,140
ad for every single multicast

884
00:49:41,890 --> 00:49:46,930
notification coming later on so here you

885
00:49:44,140 --> 00:49:49,089
have a secure tie between

886
00:49:46,930 --> 00:49:53,700
again the notifications and the phantom

887
00:49:49,089 --> 00:49:53,700
request based also on grupo score

888
00:49:53,760 --> 00:49:58,390
optionally there is the possibility for

889
00:49:56,140 --> 00:50:03,460
the server to give some more information

890
00:49:58,390 --> 00:50:05,348
in that error response if you do so some

891
00:50:03,460 --> 00:50:08,260
of that information must be included

892
00:50:05,349 --> 00:50:09,849
then and we are thinking of the URI of

893
00:50:08,260 --> 00:50:13,240
the join resource at the group manager

894
00:50:09,849 --> 00:50:15,279
to join the group and the name as plain

895
00:50:13,240 --> 00:50:17,709
identifier of the total score group you

896
00:50:15,279 --> 00:50:19,000
can possibly add more information on the

897
00:50:17,710 --> 00:50:22,150
way the group works essentially

898
00:50:19,000 --> 00:50:23,680
algorithms parameters and and so on so

899
00:50:22,150 --> 00:50:26,319
that puts immediately the client in a

900
00:50:23,680 --> 00:50:28,149
position to know what to do where to go

901
00:50:26,319 --> 00:50:30,369
in order to join the group but this is

902
00:50:28,150 --> 00:50:33,849
optional and the client can rely instead

903
00:50:30,369 --> 00:50:36,130
on other means like the draft I've just

904
00:50:33,849 --> 00:50:40,779
presented before based on the resource

905
00:50:36,130 --> 00:50:42,520
directory discovery well in case you can

906
00:50:40,779 --> 00:50:44,799
see a group of score is just the same

907
00:50:42,520 --> 00:50:46,529
it's just that the final request is also

908
00:50:44,799 --> 00:50:50,500
a group of score protected message

909
00:50:46,529 --> 00:50:54,099
notice corruption with kd5 and partially

910
00:50:50,500 --> 00:50:55,510
5:01 so after that the sequence number

911
00:50:54,099 --> 00:50:58,299
of the server is stepped forward of

912
00:50:55,510 --> 00:51:00,609
course the 5-0 - the error response

913
00:50:58,299 --> 00:51:02,609
includes also the funder request as a

914
00:51:00,609 --> 00:51:05,230
group of core message serialized and

915
00:51:02,609 --> 00:51:07,690
more information on this error response

916
00:51:05,230 --> 00:51:09,640
how to join the group essentially the

917
00:51:07,690 --> 00:51:13,089
the link to the join resource and the

918
00:51:09,640 --> 00:51:15,308
name of the group same thing for the

919
00:51:13,089 --> 00:51:18,759
second client of course with no need for

920
00:51:15,309 --> 00:51:19,930
yet another phantom request finally when

921
00:51:18,760 --> 00:51:21,910
it's about sending the multicast

922
00:51:19,930 --> 00:51:23,770
notification this is of course also

923
00:51:21,910 --> 00:51:26,460
protected with group of score deals

924
00:51:23,770 --> 00:51:28,779
corruption as this time I partially 5:02

925
00:51:26,460 --> 00:51:31,029
the latest Sigma's number to be consumed

926
00:51:28,779 --> 00:51:34,240
but the point is this notification is

927
00:51:31,029 --> 00:51:35,440
protecting using as external ad rec ID 5

928
00:51:34,240 --> 00:51:38,919
but rec IV

929
00:51:35,440 --> 00:51:44,799
5:01 so to ensure the secure binding

930
00:51:38,920 --> 00:51:47,260
with the original phantom request so to

931
00:51:44,799 --> 00:51:49,480
conclude this is the result of I was a

932
00:51:47,260 --> 00:51:51,700
major revision from version 0 based on

933
00:51:49,480 --> 00:51:55,720
the feedback the discussion on the

934
00:51:51,700 --> 00:51:57,939
redesign workshop the server is

935
00:51:55,720 --> 00:52:00,680
entrusted by the group to manage the

936
00:51:57,940 --> 00:52:04,280
token space consistently

937
00:52:00,680 --> 00:52:06,440
we can enforce also secure binding

938
00:52:04,280 --> 00:52:08,750
between the notifications and the

939
00:52:06,440 --> 00:52:11,210
phantom request and only know this is

940
00:52:08,750 --> 00:52:13,660
about performance is particularly useful

941
00:52:11,210 --> 00:52:18,079
in the pub/sub case also to keep

942
00:52:13,660 --> 00:52:20,990
subscribers as client only and now I

943
00:52:18,079 --> 00:52:23,150
think having reviews of the document as

944
00:52:20,990 --> 00:52:29,359
such and this approach will be very

945
00:52:23,150 --> 00:52:36,079
useful to us unless there are comments

946
00:52:29,359 --> 00:52:38,210
already you had many questions yourself

947
00:52:36,079 --> 00:52:44,270
Carsten at the previous meeting I I hope

948
00:52:38,210 --> 00:52:47,809
we are on a better track now I think

949
00:52:44,270 --> 00:52:50,119
this is pretty clever stuff of course

950
00:52:47,809 --> 00:52:53,540
immediately questions like how do you do

951
00:52:50,119 --> 00:52:57,859
congestion control come to mind whenever

952
00:52:53,540 --> 00:53:03,079
you are using and so on so I think just

953
00:52:57,859 --> 00:53:05,509
this has still some some way to go

954
00:53:03,079 --> 00:53:09,319
before we can say ok this this is

955
00:53:05,510 --> 00:53:11,990
acceptable but at least to me it seems

956
00:53:09,319 --> 00:53:18,200
to be the best propose that we have had

957
00:53:11,990 --> 00:53:25,459
in this space so far don't know if other

958
00:53:18,200 --> 00:53:29,960
people have an opinion on this Christian

959
00:53:25,460 --> 00:53:32,690
from the jabber not on castings point

960
00:53:29,960 --> 00:53:34,930
but more general comment one more new

961
00:53:32,690 --> 00:53:38,750
feature of the current revision is that

962
00:53:34,930 --> 00:53:40,220
the new error response unlike the

963
00:53:38,750 --> 00:53:44,470
previous options can be cached and

964
00:53:40,220 --> 00:53:44,470
distributed possibly by a pub sub server

965
00:53:49,960 --> 00:53:54,250
and a detail I forgot compared to the

966
00:53:52,569 --> 00:53:56,170
original approach this is much simpler

967
00:53:54,250 --> 00:53:57,940
because we don't need new co-op options

968
00:53:56,170 --> 00:54:05,170
anymore we don't need to reserve any

969
00:53:57,940 --> 00:54:09,270
talking range anymore right so I think

970
00:54:05,170 --> 00:54:12,640
the next step again is finding reviewers

971
00:54:09,270 --> 00:54:20,339
so who is interested in in reviewing

972
00:54:12,640 --> 00:54:20,339
this document hmm doesn't look good now

973
00:54:20,460 --> 00:54:32,140
we cannot make any progress without

974
00:54:22,930 --> 00:54:35,819
reviewers obviously okay oh one hand

975
00:54:32,140 --> 00:54:41,069
from the German plan to do a read on it

976
00:54:35,819 --> 00:54:43,990
yeah Jim Jim yes thank you thank you

977
00:54:41,069 --> 00:54:50,680
okay but that's not not enough to really

978
00:54:43,990 --> 00:54:52,479
make progress on this group so yeah we

979
00:54:50,680 --> 00:54:56,980
will have to find people who actually

980
00:54:52,480 --> 00:55:06,940
want to work on this someone from the

981
00:54:56,980 --> 00:55:09,880
pub subspace would be useful yes okay so

982
00:55:06,940 --> 00:55:14,109
I think that will happen on the mailing

983
00:55:09,880 --> 00:55:22,619
list yes so I think up next

984
00:55:14,109 --> 00:55:26,140
yes last right was for me today at least

985
00:55:22,619 --> 00:55:30,520
this is a work led by s code and me the

986
00:55:26,140 --> 00:55:32,650
presentation today and it's an update or

987
00:55:30,520 --> 00:55:35,920
actually an attempt to obsolete if

988
00:55:32,650 --> 00:55:38,859
approved 7390 that was the fun in group

989
00:55:35,920 --> 00:55:42,940
communication for coop in fact over IP

990
00:55:38,859 --> 00:55:44,819
multicast and this is going to be yeah a

991
00:55:42,940 --> 00:55:49,540
normative reference to group of score

992
00:55:44,819 --> 00:55:52,170
speaking of which we have improved the

993
00:55:49,540 --> 00:55:55,359
nature of update or absolution of all

994
00:55:52,170 --> 00:55:57,280
7390 we clarified in the document in

995
00:55:55,359 --> 00:56:00,009
this version that we are essentially

996
00:55:57,280 --> 00:56:03,040
replacing everything of Sarina and 7390

997
00:56:00,010 --> 00:56:03,700
other then the experimental restful

998
00:56:03,040 --> 00:56:06,160
protocol that

999
00:56:03,700 --> 00:56:08,439
was define there as an API for

1000
00:56:06,160 --> 00:56:12,520
configuring groups and that part remains

1001
00:56:08,440 --> 00:56:15,210
their experimental essentially and it

1002
00:56:12,520 --> 00:56:18,550
happens it hasn't being used that much

1003
00:56:15,210 --> 00:56:22,030
so that's not covered by this document

1004
00:56:18,550 --> 00:56:24,640
itself other than that in this update we

1005
00:56:22,030 --> 00:56:26,950
clarified what since covered is document

1006
00:56:24,640 --> 00:56:29,020
and especially the security part and the

1007
00:56:26,950 --> 00:56:32,140
definitional group of score is the the

1008
00:56:29,020 --> 00:56:34,839
masked way to secure group communication

1009
00:56:32,140 --> 00:56:36,700
for co-op and we clarified also that all

1010
00:56:34,839 --> 00:56:39,369
the main body of the document has to be

1011
00:56:36,700 --> 00:56:42,009
considered normative while everything in

1012
00:56:39,369 --> 00:56:46,839
appendix meaning use cases are purely

1013
00:56:42,010 --> 00:56:49,390
informational yeah I'm just wondering

1014
00:56:46,839 --> 00:56:54,160
about this absolute success except for

1015
00:56:49,390 --> 00:56:56,500
the experimental protocol so experiments

1016
00:56:54,160 --> 00:56:59,020
of course can can run forever but then

1017
00:56:56,500 --> 00:57:03,910
you never get a conclusion so normally

1018
00:56:59,020 --> 00:57:06,460
we try to have a point somewhere we say

1019
00:57:03,910 --> 00:57:09,879
okay this experiment was successful this

1020
00:57:06,460 --> 00:57:12,010
experiment was not so successful and to

1021
00:57:09,880 --> 00:57:15,579
me it seems this experiment was not so

1022
00:57:12,010 --> 00:57:17,950
successful that particular part that

1023
00:57:15,579 --> 00:57:20,589
interface is apparently not used or we

1024
00:57:17,950 --> 00:57:23,740
couldn't find any anyways but anything

1025
00:57:20,589 --> 00:57:26,140
else group co-op was implemented oh yes

1026
00:57:23,740 --> 00:57:30,220
yeah I'm just talking what the part that

1027
00:57:26,140 --> 00:57:33,700
you you have in your except for and I

1028
00:57:30,220 --> 00:57:35,410
would imagine that at this point we

1029
00:57:33,700 --> 00:57:39,879
would say this this experiment has

1030
00:57:35,410 --> 00:57:43,270
concluded and and nothing came out of it

1031
00:57:39,880 --> 00:57:46,000
I mean we're not going to do a

1032
00:57:43,270 --> 00:57:48,640
replacement for this protocol and some

1033
00:57:46,000 --> 00:57:51,190
farm or anything it's just an experiment

1034
00:57:48,640 --> 00:57:55,509
that is concluded so to me it seems we

1035
00:57:51,190 --> 00:57:58,119
actually can obsolete seven 390 and all

1036
00:57:55,510 --> 00:57:59,530
together all together I mean if you ever

1037
00:57:58,119 --> 00:58:03,220
want to read up on the experiment the

1038
00:57:59,530 --> 00:58:07,720
ROC idea sure but I think we are not

1039
00:58:03,220 --> 00:58:09,339
continuing this particular experiment at

1040
00:58:07,720 --> 00:58:12,339
least I haven't heard from from anyone

1041
00:58:09,339 --> 00:58:14,049
who would want to so I think we can

1042
00:58:12,339 --> 00:58:15,160
simplify this a little bit and then just

1043
00:58:14,050 --> 00:58:17,320
say

1044
00:58:15,160 --> 00:58:20,440
the new thing would be just be a

1045
00:58:17,320 --> 00:58:27,220
replacement for 73 just removing the

1046
00:58:20,440 --> 00:58:29,860
statements on the exception okay yeah so

1047
00:58:27,220 --> 00:58:32,140
what happen from last time well we

1048
00:58:29,860 --> 00:58:34,810
mostly process the many comments from

1049
00:58:32,140 --> 00:58:37,870
the reviews from Jim and Thomas for

1050
00:58:34,810 --> 00:58:42,100
Satya thanks a lot for that we

1051
00:58:37,870 --> 00:58:45,549
reconsider all the content from 73 90 in

1052
00:58:42,100 --> 00:58:48,250
this new light we had a number of TBD

1053
00:58:45,550 --> 00:58:50,080
items left especially in the final

1054
00:58:48,250 --> 00:58:51,340
person the document describing how moon

1055
00:58:50,080 --> 00:58:53,670
seekers can practically work in

1056
00:58:51,340 --> 00:58:55,480
different multicast transport or

1057
00:58:53,670 --> 00:58:58,480
internet working among different

1058
00:58:55,480 --> 00:59:01,960
protocols and so on we had a huge number

1059
00:58:58,480 --> 00:59:04,300
of issues and on the way they were all

1060
00:59:01,960 --> 00:59:06,610
closed up a few two or three ones you

1061
00:59:04,300 --> 00:59:08,650
find now came up actually after the

1062
00:59:06,610 --> 00:59:11,080
resignation but it's minor things

1063
00:59:08,650 --> 00:59:15,760
so we substantially concluded the

1064
00:59:11,080 --> 00:59:18,100
document and this will be readable on

1065
00:59:15,760 --> 00:59:22,480
the new content we provide we clarified

1066
00:59:18,100 --> 00:59:25,120
a bit better how coop works in detail

1067
00:59:22,480 --> 00:59:28,300
with such model with respect to request

1068
00:59:25,120 --> 00:59:31,810
response interaction we gave indication

1069
00:59:28,300 --> 00:59:33,700
on meaningful good where is the server

1070
00:59:31,810 --> 00:59:35,830
can consider for possible response

1071
00:59:33,700 --> 00:59:39,810
suppression and then it is recommended

1072
00:59:35,830 --> 00:59:42,790
in fact supports the no response option

1073
00:59:39,810 --> 00:59:45,759
just as long as this improved the the

1074
00:59:42,790 --> 00:59:49,930
the suppression policies in the interest

1075
00:59:45,760 --> 00:59:52,890
of the client we discuss what happens

1076
00:59:49,930 --> 00:59:54,960
the pros and cons of a client repeating

1077
00:59:52,890 --> 00:59:58,720
multicast requests with the same token

1078
00:59:54,960 --> 01:00:00,370
either changing or not changing the

1079
00:59:58,720 --> 01:00:02,410
value of the message instead so that

1080
01:00:00,370 --> 01:00:05,890
that can be useful for being sure that

1081
01:00:02,410 --> 01:00:07,240
all the servers that are reachable are

1082
01:00:05,890 --> 01:00:09,879
on the same page with the client of

1083
01:00:07,240 --> 01:00:13,540
course it has some impact on performance

1084
01:00:09,880 --> 01:00:17,290
or it can really do nothing much or

1085
01:00:13,540 --> 01:00:18,370
responses are lost altogether and as I

1086
01:00:17,290 --> 01:00:21,150
mentioned in the group post

1087
01:00:18,370 --> 01:00:24,520
representation we moved in this document

1088
01:00:21,150 --> 01:00:27,010
handling on the client side on responses

1089
01:00:24,520 --> 01:00:28,670
from the server so that with the

1090
01:00:27,010 --> 01:00:31,670
exception of observe the cry

1091
01:00:28,670 --> 01:00:37,270
is expected to have at most one response

1092
01:00:31,670 --> 01:00:39,230
per server for a given forgiving request

1093
01:00:37,270 --> 01:00:41,150
we expanded on the security

1094
01:00:39,230 --> 01:00:45,470
considerations and made a number of

1095
01:00:41,150 --> 01:00:48,049
editorial improvements as well we

1096
01:00:45,470 --> 01:00:52,339
focused a bit more on observe clarifying

1097
01:00:48,049 --> 01:00:55,450
in what sense this draft is updating 76

1098
01:00:52,339 --> 01:00:59,049
41 that doesn't really say anything on

1099
01:00:55,450 --> 01:01:01,669
observation requests end of a multicast

1100
01:00:59,049 --> 01:01:03,770
we describe more in detail what happens

1101
01:01:01,670 --> 01:01:05,930
when the kind of transmits an

1102
01:01:03,770 --> 01:01:09,049
observation request with the same token

1103
01:01:05,930 --> 01:01:12,379
and again same or different a message ID

1104
01:01:09,049 --> 01:01:14,809
and we gave some indications on what a

1105
01:01:12,380 --> 01:01:17,920
server is supposed to do to check the

1106
01:01:14,809 --> 01:01:20,599
liveliness of serving clients and

1107
01:01:17,920 --> 01:01:23,210
practically we expect application

1108
01:01:20,599 --> 01:01:25,990
policies along the lines every now and

1109
01:01:23,210 --> 01:01:30,349
then the server should send confirmable

1110
01:01:25,990 --> 01:01:32,509
observe identification they should be

1111
01:01:30,349 --> 01:01:35,030
non confirmable like the request but

1112
01:01:32,510 --> 01:01:36,589
it's in particular impact is possible to

1113
01:01:35,030 --> 01:01:38,140
have the confirmable and that should

1114
01:01:36,589 --> 01:01:44,750
happen here and there for the sake of

1115
01:01:38,140 --> 01:01:47,270
liveliness check on possibly updating

1116
01:01:44,750 --> 01:01:50,270
block-wise instead we took a step back

1117
01:01:47,270 --> 01:01:52,490
and we are not really updating it

1118
01:01:50,270 --> 01:01:56,660
anymore we are expanding a bit more

1119
01:01:52,490 --> 01:01:59,750
especially on the block to usage but all

1120
01:01:56,660 --> 01:02:01,940
in all along the line all of 79 59 but

1121
01:01:59,750 --> 01:02:04,369
we are just adding considerations on the

1122
01:02:01,940 --> 01:02:07,069
fact that block 1 would be really

1123
01:02:04,369 --> 01:02:09,020
problematic in the multicast contest so

1124
01:02:07,069 --> 01:02:10,970
we are highlighting the problems but we

1125
01:02:09,020 --> 01:02:13,940
are not really proposing how to solve

1126
01:02:10,970 --> 01:02:16,129
them seems like a bit exaggerated an

1127
01:02:13,940 --> 01:02:18,109
otoscope for this draft possibly if

1128
01:02:16,130 --> 01:02:20,780
there is enough interest that can be a

1129
01:02:18,109 --> 01:02:22,460
topic for a totally separate document so

1130
01:02:20,780 --> 01:02:26,150
because of this essentially we are not

1131
01:02:22,460 --> 01:02:29,510
really updating 79 59 anymore as it was

1132
01:02:26,150 --> 01:02:34,309
intended originally but this can be

1133
01:02:29,510 --> 01:02:37,220
discussed possibly if more important so

1134
01:02:34,309 --> 01:02:39,589
what we expect next I mentioned a few

1135
01:02:37,220 --> 01:02:41,540
minor issues we finally tracked on

1136
01:02:39,589 --> 01:02:45,859
detail but by their minors

1137
01:02:41,540 --> 01:02:47,720
we had after a submission more comments

1138
01:02:45,859 --> 01:02:50,210
from June shall stating this is all not

1139
01:02:47,720 --> 01:02:52,220
a good document but proposing a number

1140
01:02:50,210 --> 01:02:54,440
of minor fixes and additions here and

1141
01:02:52,220 --> 01:02:57,799
there and Thomas already promised

1142
01:02:54,440 --> 01:03:01,070
another review on this latest version of

1143
01:02:57,800 --> 01:03:03,980
reason then of course you'd be

1144
01:03:01,070 --> 01:03:06,290
interesting to start considering one of

1145
01:03:03,980 --> 01:03:08,030
those implementations supporting coop /

1146
01:03:06,290 --> 01:03:10,820
multicast I can immediately think of

1147
01:03:08,030 --> 01:03:13,550
californium of course and well Coco's

1148
01:03:10,820 --> 01:03:15,680
the multicast itself just worked we used

1149
01:03:13,550 --> 01:03:17,599
it for a group Mouskouri Interop would

1150
01:03:15,680 --> 01:03:19,720
be interesting to test over it is also

1151
01:03:17,599 --> 01:03:24,200
additional coop services and especially

1152
01:03:19,720 --> 01:03:27,348
observe all-in-all considering the

1153
01:03:24,200 --> 01:03:29,750
current status this minor next steps we

1154
01:03:27,349 --> 01:03:33,550
already see in front of us and many

1155
01:03:29,750 --> 01:03:35,510
reviews we got we think this is for sure

1156
01:03:33,550 --> 01:03:47,510
eligible to consider for working group

1157
01:03:35,510 --> 01:03:52,550
adoption ok so the usual question who

1158
01:03:47,510 --> 01:04:01,010
has read a version of this document two

1159
01:03:52,550 --> 01:04:06,560
hands any hands from java no and so when

1160
01:04:01,010 --> 01:04:12,819
we did one hand from java so when we did

1161
01:04:06,560 --> 01:04:16,819
7390 we knew that this was an interim

1162
01:04:12,819 --> 01:04:22,250
placeholder and we were two hands from

1163
01:04:16,819 --> 01:04:25,069
java this was going to be a placeholder

1164
01:04:22,250 --> 01:04:30,859
for a while until we understood the the

1165
01:04:25,069 --> 01:04:33,619
issues better so this to a certain

1166
01:04:30,859 --> 01:04:37,520
extent always has been on the agenda to

1167
01:04:33,619 --> 01:04:41,540
revisit at some point and and i'm happy

1168
01:04:37,520 --> 01:04:45,430
that this is actually happening now it's

1169
01:04:41,540 --> 01:04:47,839
the the only experimental protocol that

1170
01:04:45,430 --> 01:04:49,129
the experimental ever see that that we

1171
01:04:47,839 --> 01:04:52,730
have produced here if I remember

1172
01:04:49,130 --> 01:04:53,650
correctly and it would be nice to get

1173
01:04:52,730 --> 01:04:57,460
this

1174
01:04:53,650 --> 01:05:00,660
weeks but repaired but of course you can

1175
01:04:57,460 --> 01:05:05,500
only do this if we get the reviews

1176
01:05:00,660 --> 01:05:15,009
forces already not that bad so that

1177
01:05:05,500 --> 01:05:16,630
makes me is partially happy Francesca

1178
01:05:15,010 --> 01:05:20,190
beanie yeah I just want to say I support

1179
01:05:16,630 --> 01:05:23,050
adoption of this as quickly as possible

1180
01:05:20,190 --> 01:05:25,150
and move it forward also considering

1181
01:05:23,050 --> 01:05:27,340
like the normative reference from grupo

1182
01:05:25,150 --> 01:05:30,060
score what she said out of the document

1183
01:05:27,340 --> 01:05:30,060
is moving forward

1184
01:05:32,250 --> 01:05:39,160
assuming adoption of this of course I'm

1185
01:05:35,200 --> 01:05:40,770
pretty confident the next version at

1186
01:05:39,160 --> 01:05:44,350
least we will do our best

1187
01:05:40,770 --> 01:05:47,590
maybe even considerable for for a big

1188
01:05:44,350 --> 01:05:50,350
shift to work in robust cold if that can

1189
01:05:47,590 --> 01:05:55,060
help so you talked about implementation

1190
01:05:50,350 --> 01:05:58,620
in California how far away is that group

1191
01:05:55,060 --> 01:06:02,560
co-op is already there and working will

1192
01:05:58,620 --> 01:06:05,319
take the whole draft how much of that is

1193
01:06:02,560 --> 01:06:07,750
actually implemented according to what

1194
01:06:05,320 --> 01:06:10,330
Kim Krauss I can get back to an old Mary

1195
01:06:07,750 --> 01:06:14,550
posted took or actually he was saying

1196
01:06:10,330 --> 01:06:17,790
there was a line to 7390 okay in fact I

1197
01:06:14,550 --> 01:06:24,760
think we have to have a little bit

1198
01:06:17,790 --> 01:06:27,130
confidence from implementation so I

1199
01:06:24,760 --> 01:06:30,430
think that that would be something where

1200
01:06:27,130 --> 01:06:33,310
I think we would want to wait for before

1201
01:06:30,430 --> 01:06:35,350
going for with Nebraska so June from the

1202
01:06:33,310 --> 01:06:39,000
Jabbar says he has a full multicast

1203
01:06:35,350 --> 01:06:43,060
implementation for our score so I guess

1204
01:06:39,000 --> 01:06:47,470
yeah that that's the group co-op part

1205
01:06:43,060 --> 01:06:49,240
this is their run Cooper Square okay the

1206
01:06:47,470 --> 01:06:52,540
question is does this cover all of

1207
01:06:49,240 --> 01:06:54,069
what's in the draft right now and that's

1208
01:06:52,540 --> 01:06:56,620
maybe something we should ascertain

1209
01:06:54,070 --> 01:06:58,590
before we actually go for it nope a

1210
01:06:56,620 --> 01:07:01,240
score so that that would be one of the

1211
01:06:58,590 --> 01:07:05,740
reviews looking at implementation status

1212
01:07:01,240 --> 01:07:09,649
and and see how confident we are

1213
01:07:05,740 --> 01:07:14,600
yeah but apart from that I think this

1214
01:07:09,650 --> 01:07:17,600
this is a good work so anybody else who

1215
01:07:14,600 --> 01:07:24,020
would argue for adoption of this

1216
01:07:17,600 --> 01:07:28,970
document who thinks we should not adopt

1217
01:07:24,020 --> 01:07:32,870
it so in in soccer

1218
01:07:28,970 --> 01:07:38,140
one zero is enough from Jabbar plus one

1219
01:07:32,870 --> 01:07:41,750
adopt from Jim and Christian okay okay

1220
01:07:38,140 --> 01:07:44,810
this is not quite in room consensus yet

1221
01:07:41,750 --> 01:07:46,360
but we can take the adoption call to the

1222
01:07:44,810 --> 01:07:49,430
list and this time we are not going to

1223
01:07:46,360 --> 01:07:56,290
forget doing that for for another four

1224
01:07:49,430 --> 01:07:56,290
months and go ahead with that thank you

1225
01:07:58,370 --> 01:08:08,359
[Music]

1226
01:08:02,290 --> 01:08:12,650
so next is sin well as I said we have

1227
01:08:08,360 --> 01:08:16,040
have two documents in the is G right now

1228
01:08:12,650 --> 01:08:19,390
and we have two documents that are in

1229
01:08:16,040 --> 01:08:23,750
various stages in the working group and

1230
01:08:19,390 --> 01:08:25,880
what we will do is we will look at all

1231
01:08:23,750 --> 01:08:30,290
four but maybe we are going to look at

1232
01:08:25,880 --> 01:08:33,109
units in the end because the inventor of

1233
01:08:30,290 --> 01:08:35,060
sin ml and founding chair of this

1234
01:08:33,109 --> 01:08:37,910
working group isn't here yet

1235
01:08:35,060 --> 01:08:40,430
Helen Jennings and he has some some

1236
01:08:37,910 --> 01:08:43,790
interest in getting this fixed so we

1237
01:08:40,430 --> 01:08:46,460
start with the other things okay so

1238
01:08:43,790 --> 01:08:49,790
let's start with its impacts with 10 ml

1239
01:08:46,460 --> 01:08:51,799
arm so this draft is all in iese review

1240
01:08:49,790 --> 01:08:54,979
it's currently state that it needs a

1241
01:08:51,799 --> 01:08:57,680
revised draft there was no updated

1242
01:08:54,979 --> 01:09:00,108
person for this idea because um I wanted

1243
01:08:57,680 --> 01:09:01,730
to have all the updates in the front is

1244
01:09:00,109 --> 01:09:03,859
reviews in the same person but you can't

1245
01:09:01,729 --> 01:09:06,200
find the Inga Topsail requests those

1246
01:09:03,859 --> 01:09:08,540
latest changes so that's very good

1247
01:09:06,200 --> 01:09:11,089
the directory review from Mathias Kovich

1248
01:09:08,540 --> 01:09:12,859
thanks a lot for that a bunch of small

1249
01:09:11,089 --> 01:09:14,420
things here and there and watch IAC

1250
01:09:12,859 --> 01:09:16,790
comments from Warren Barry and Elissa

1251
01:09:14,420 --> 01:09:18,710
also is a discuss from Roman that have

1252
01:09:16,790 --> 01:09:19,600
been addressed already in the versioning

1253
01:09:18,710 --> 01:09:22,970
it

1254
01:09:19,600 --> 01:09:25,040
one of the recurring comment we got from

1255
01:09:22,970 --> 01:09:27,470
my ESC was this fragment ID section was

1256
01:09:25,040 --> 01:09:30,260
a bit confusing so I did a rewrite for

1257
01:09:27,470 --> 01:09:31,760
that and also I did some examples and at

1258
01:09:30,260 --> 01:09:35,150
least I haven't got any complaints on

1259
01:09:31,760 --> 01:09:37,280
the new version so far also added but

1260
01:09:35,149 --> 01:09:38,568
expansive clarifications that what are

1261
01:09:37,279 --> 01:09:40,549
they really the mandatory parts you need

1262
01:09:38,569 --> 01:09:42,440
in every fetch and patch there needs to

1263
01:09:40,549 --> 01:09:44,109
be at least one record at each record

1264
01:09:42,439 --> 01:09:47,839
needs to have at least a name it etc

1265
01:09:44,109 --> 01:09:50,210
also that co-op is used for securing

1266
01:09:47,839 --> 01:09:52,100
these operations cause this format

1267
01:09:50,210 --> 01:09:53,710
itself doesn't provide any security but

1268
01:09:52,100 --> 01:09:56,960
it's really the work of the underlying

1269
01:09:53,710 --> 01:09:58,820
protocol and also clarified that I patch

1270
01:09:56,960 --> 01:10:00,770
and patch are equivalent when it comes

1271
01:09:58,820 --> 01:10:05,269
to sin ml patch because that cinema

1272
01:10:00,770 --> 01:10:07,670
patch records are or idempotent there

1273
01:10:05,270 --> 01:10:08,960
are still one discussed from Adam and

1274
01:10:07,670 --> 01:10:11,420
one comment from Ben that this still

1275
01:10:08,960 --> 01:10:13,910
needs to be addressed and in particle or

1276
01:10:11,420 --> 01:10:16,640
the review from Adam raised a few other

1277
01:10:13,910 --> 01:10:20,180
issues and so I'd like to get your crude

1278
01:10:16,640 --> 01:10:22,190
feedback and confirmation for so one

1279
01:10:20,180 --> 01:10:24,920
issue that we notice is that we actually

1280
01:10:22,190 --> 01:10:27,469
didn't have a selector for with units so

1281
01:10:24,920 --> 01:10:30,170
how currently both veteran patch work

1282
01:10:27,470 --> 01:10:32,690
that you always include a name of the

1283
01:10:30,170 --> 01:10:34,280
record and you may include a time to

1284
01:10:32,690 --> 01:10:37,370
select the records either for fetching

1285
01:10:34,280 --> 01:10:38,599
or for patching and the reason for doing

1286
01:10:37,370 --> 01:10:40,580
a design like that only

1287
01:10:38,600 --> 01:10:43,160
including a few fields there is that

1288
01:10:40,580 --> 01:10:45,050
then you can use these few fields or

1289
01:10:43,160 --> 01:10:48,170
find the record and every other field

1290
01:10:45,050 --> 01:10:49,460
for patching them like 90% of cases you

1291
01:10:48,170 --> 01:10:51,140
actually want to patch only the value

1292
01:10:49,460 --> 01:10:52,940
but there is you know usefulness for

1293
01:10:51,140 --> 01:10:56,570
appeals also add new fields to the

1294
01:10:52,940 --> 01:10:59,500
records what we didn't actually pay

1295
01:10:56,570 --> 01:11:00,620
attention to that is already in the RFC

1296
01:10:59,500 --> 01:11:03,650
examples

1297
01:11:00,620 --> 01:11:06,830
quite often unit is used to also

1298
01:11:03,650 --> 01:11:10,250
disambiguate on records so you may have

1299
01:11:06,830 --> 01:11:11,900
same name for a source of data but read

1300
01:11:10,250 --> 01:11:14,570
for example say this is latitude this is

1301
01:11:11,900 --> 01:11:17,299
longitude and only unit tells you apart

1302
01:11:14,570 --> 01:11:20,240
which record is the relevant part for

1303
01:11:17,300 --> 01:11:22,820
which part so obviously we do need to

1304
01:11:20,240 --> 01:11:25,610
also add unit to the list of selectors

1305
01:11:22,820 --> 01:11:28,130
so the proposal here is to update that

1306
01:11:25,610 --> 01:11:31,070
and say yes you always have name and you

1307
01:11:28,130 --> 01:11:32,909
may have time and/or unit so basic

1308
01:11:31,070 --> 01:11:35,429
addition of unit is to change

1309
01:11:32,909 --> 01:11:37,650
and it would be like so far you would be

1310
01:11:35,429 --> 01:11:39,630
an exact match so whatever you have of

1311
01:11:37,650 --> 01:11:41,759
this combination of the three needs to

1312
01:11:39,630 --> 01:11:46,739
be present in the record you want to

1313
01:11:41,760 --> 01:11:48,389
find for fetching or patching so if you

1314
01:11:46,739 --> 01:11:49,919
don't have any concerns of this weight

1315
01:11:48,389 --> 01:11:52,310
going forward that's gonna be part of

1316
01:11:49,920 --> 01:11:55,020
also the next version of the draft

1317
01:11:52,310 --> 01:11:59,429
custom woman from the floor

1318
01:11:55,020 --> 01:12:03,570
this means you never can update the unit

1319
01:11:59,429 --> 01:12:07,860
in the record correct so it's reasonable

1320
01:12:03,570 --> 01:12:10,409
yes yes so the way we chose to form

1321
01:12:07,860 --> 01:12:12,360
whole Pat's FX record has this downside

1322
01:12:10,409 --> 01:12:15,509
that what is wherever's use a selector

1323
01:12:12,360 --> 01:12:16,830
cannot be used as patcher so you have to

1324
01:12:15,510 --> 01:12:18,480
choose one way or the other that's all

1325
01:12:16,830 --> 01:12:19,650
so we got the question so where do you

1326
01:12:18,480 --> 01:12:21,419
draw the line well this is what we want

1327
01:12:19,650 --> 01:12:23,400
to draw the line get the very minimal

1328
01:12:21,420 --> 01:12:27,690
set that you really need that name time

1329
01:12:23,400 --> 01:12:29,429
and unit to select uniquely records if

1330
01:12:27,690 --> 01:12:31,199
you do need something more elaborate

1331
01:12:29,429 --> 01:12:33,780
there you still have the Chasen packs

1332
01:12:31,199 --> 01:12:35,610
format which has there a lot of power

1333
01:12:33,780 --> 01:12:37,500
but also a lot of complexity so you can

1334
01:12:35,610 --> 01:12:43,500
still patch stuff but then you have to

1335
01:12:37,500 --> 01:12:46,560
pay the price then another thing that

1336
01:12:43,500 --> 01:12:49,620
Adam pointed out that we should probably

1337
01:12:46,560 --> 01:12:53,100
clarify that the record order matters in

1338
01:12:49,620 --> 01:12:54,719
the patching so what what may happen

1339
01:12:53,100 --> 01:12:58,199
that you have multiple records that are

1340
01:12:54,719 --> 01:13:01,650
operating on fields with similarities so

1341
01:12:58,199 --> 01:13:05,040
for example if you have two records that

1342
01:13:01,650 --> 01:13:07,199
both end up removing the same record in

1343
01:13:05,040 --> 01:13:09,150
the target pack that's that should be an

1344
01:13:07,199 --> 01:13:11,159
error but you don't really know until

1345
01:13:09,150 --> 01:13:14,159
you actually handle the fact you are

1346
01:13:11,159 --> 01:13:16,440
actually handing handling them both so

1347
01:13:14,159 --> 01:13:19,500
what Adam was suggesting as a solution

1348
01:13:16,440 --> 01:13:20,820
that first of all clarifying that if

1349
01:13:19,500 --> 01:13:22,770
Pat's record matches more than one

1350
01:13:20,820 --> 01:13:25,949
cinema record that's immediately an

1351
01:13:22,770 --> 01:13:27,420
error that's something we may want to

1352
01:13:25,949 --> 01:13:31,589
consider but that's more on the next

1353
01:13:27,420 --> 01:13:33,510
slide and if this one of the signature

1354
01:13:31,590 --> 01:13:34,980
if any of the patch records fails then

1355
01:13:33,510 --> 01:13:37,949
you don't change anything so the whole

1356
01:13:34,980 --> 01:13:40,049
patch needs to be atomic and then you

1357
01:13:37,949 --> 01:13:41,879
would apply all the records sequentially

1358
01:13:40,050 --> 01:13:43,889
I mean this seems to me a very

1359
01:13:41,880 --> 01:13:45,570
reasonable thing to clarify on the graph

1360
01:13:43,889 --> 01:13:46,900
that it need to be addressed

1361
01:13:45,570 --> 01:13:50,170
sequentially

1362
01:13:46,900 --> 01:13:53,920
only question there is do we want to

1363
01:13:50,170 --> 01:14:01,020
allow applying patch to more than one

1364
01:13:53,920 --> 01:14:04,390
record and that brings the last point so

1365
01:14:01,020 --> 01:14:06,190
currently the dead texts kind of implied

1366
01:14:04,390 --> 01:14:07,390
that yeah it's an error if you much more

1367
01:14:06,190 --> 01:14:08,940
than one that needs to be clarified

1368
01:14:07,390 --> 01:14:11,170
anyway

1369
01:14:08,940 --> 01:14:14,290
alternative design here would be that

1370
01:14:11,170 --> 01:14:16,780
you can match multiple records with a

1371
01:14:14,290 --> 01:14:20,290
single patch record and you for example

1372
01:14:16,780 --> 01:14:21,849
be able to delete multiple records when

1373
01:14:20,290 --> 01:14:23,530
this was first suggested to me I think

1374
01:14:21,850 --> 01:14:26,260
was close okay that's it that's a good

1375
01:14:23,530 --> 01:14:28,840
idea I did a bit more thinking I found a

1376
01:14:26,260 --> 01:14:30,909
whole bunch of complexities there corner

1377
01:14:28,840 --> 01:14:33,670
cases so it might be just simple to go

1378
01:14:30,909 --> 01:14:36,099
for okay you don't want to do this you

1379
01:14:33,670 --> 01:14:38,199
if you need to modify something put a

1380
01:14:36,100 --> 01:14:40,989
separate hats record for every single

1381
01:14:38,199 --> 01:14:44,559
modification you want to do and and be

1382
01:14:40,989 --> 01:14:47,440
done with it so this is basically a

1383
01:14:44,560 --> 01:14:49,540
request for you guys if you have a use

1384
01:14:47,440 --> 01:14:51,759
case in mind that you would think of

1385
01:14:49,540 --> 01:14:55,900
matching multiple records for patching

1386
01:14:51,760 --> 01:14:58,449
is a must please let me know as soon as

1387
01:14:55,900 --> 01:15:00,790
possible otherwise I'm leaning towards

1388
01:14:58,449 --> 01:15:02,769
it's an error if attach record happens

1389
01:15:00,790 --> 01:15:06,280
too much multiple such a simple thing to

1390
01:15:02,770 --> 01:15:08,350
handle and then II you really did that

1391
01:15:06,280 --> 01:15:13,989
by being more specific which record you

1392
01:15:08,350 --> 01:15:21,050
need to apply to any immediate reactions

1393
01:15:13,989 --> 01:15:22,620
on that customer from the floor again so

1394
01:15:21,050 --> 01:15:28,380
[Music]

1395
01:15:22,620 --> 01:15:28,380
are we sure that this is all unimportant

1396
01:15:30,390 --> 01:15:37,960
the deletion should be I think we did

1397
01:15:36,610 --> 01:15:41,380
the exercise once which is probably

1398
01:15:37,960 --> 01:15:49,420
double check especially if you much more

1399
01:15:41,380 --> 01:15:53,860
than let's double check okay oh yeah

1400
01:15:49,420 --> 01:15:56,590
that was the intention it's very easy to

1401
01:15:53,860 --> 01:15:59,799
mess up and do something where this

1402
01:15:56,590 --> 01:16:14,740
important property yeah gets lost

1403
01:15:59,800 --> 01:16:16,810
oh you wanna yes so which one's next we

1404
01:16:14,740 --> 01:16:18,700
have Colin now yes that's why I'm

1405
01:16:16,810 --> 01:16:22,830
reloading the slides okay so you have

1406
01:16:18,700 --> 01:16:25,330
the next one yes and the Chromebook is

1407
01:16:22,830 --> 01:16:28,960
establishing a secure connection

1408
01:16:25,330 --> 01:16:31,780
okay well wait their slides to reload I

1409
01:16:28,960 --> 01:16:34,360
guess there was no violent agreement on

1410
01:16:31,780 --> 01:16:36,150
the way forward I proposed so I'll go

1411
01:16:34,360 --> 01:16:40,299
along those lines make a new version

1412
01:16:36,150 --> 01:16:42,639
submit that and then if I ESG is happy

1413
01:16:40,300 --> 01:16:45,550
and we check the item potency issue once

1414
01:16:42,640 --> 01:17:11,520
more I think that's gonna be on its way

1415
01:16:45,550 --> 01:17:11,520
for an RFC I just wrote the words

1416
01:17:12,270 --> 01:17:18,190
okay so presenting on behalf of Carsten

1417
01:17:15,610 --> 01:17:21,480
he straps I may have been also active

1418
01:17:18,190 --> 01:17:25,900
contributor for this draft um

1419
01:17:21,480 --> 01:17:27,879
so quick reminder about the Sentinel

1420
01:17:25,900 --> 01:17:30,190
unis registry it's basically it's a

1421
01:17:27,880 --> 01:17:32,050
sorts ring source strings to represent

1422
01:17:30,190 --> 01:17:33,910
units of measurements so we're not

1423
01:17:32,050 --> 01:17:35,530
defining units I mean there's other

1424
01:17:33,910 --> 01:17:38,139
organization who actually do that work

1425
01:17:35,530 --> 01:17:40,990
what we are defining here is that how do

1426
01:17:38,140 --> 01:17:45,490
you express those in cen ml so M stands

1427
01:17:40,990 --> 01:17:47,260
for meters etc and s for seconds in the

1428
01:17:45,490 --> 01:17:49,630
original cinema RFC we had a rather

1429
01:17:47,260 --> 01:17:52,030
restrictive registration policy that was

1430
01:17:49,630 --> 01:17:53,620
a long debate on that and we wanted to

1431
01:17:52,030 --> 01:17:55,389
lean towards facilitating

1432
01:17:53,620 --> 01:17:57,700
interoperability that we don't need to

1433
01:17:55,390 --> 01:17:59,380
be doing a lot of conversions so we

1434
01:17:57,700 --> 01:18:03,360
wouldn't have kilometres for miles we'll

1435
01:17:59,380 --> 01:18:06,700
just have meters in the registry however

1436
01:18:03,360 --> 01:18:08,620
what we did more and more notice after

1437
01:18:06,700 --> 01:18:10,809
getting more deployment experience on on

1438
01:18:08,620 --> 01:18:13,390
send email that they are one of the

1439
01:18:10,810 --> 01:18:16,870
right units in practical use today and

1440
01:18:13,390 --> 01:18:20,230
sometimes can be tricky to actually use

1441
01:18:16,870 --> 01:18:21,809
only their unscaled SI units for example

1442
01:18:20,230 --> 01:18:27,179
in Ole Miss back works there's a

1443
01:18:21,810 --> 01:18:31,510
millisecond kilowatt-hours DBMS etc so

1444
01:18:27,180 --> 01:18:34,480
if in order for those models to use only

1445
01:18:31,510 --> 01:18:35,500
the units we had originally in the

1446
01:18:34,480 --> 01:18:37,360
central registry they would have to

1447
01:18:35,500 --> 01:18:41,500
change a large amount of existing models

1448
01:18:37,360 --> 01:18:45,190
which can be very impractical and also

1449
01:18:41,500 --> 01:18:47,500
in many uses there is a natural scale

1450
01:18:45,190 --> 01:18:49,660
offset or a unit that is used for

1451
01:18:47,500 --> 01:18:52,510
example millisecond in some use of time

1452
01:18:49,660 --> 01:18:54,760
micro micrometers for particle size even

1453
01:18:52,510 --> 01:18:57,220
though ad meters for it usually always

1454
01:18:54,760 --> 01:19:00,070
missing micro micrometers or Gore

1455
01:18:57,220 --> 01:19:05,650
kilowatt hours if you're doing our power

1456
01:19:00,070 --> 01:19:08,259
stuff so a proposal that we had at last

1457
01:19:05,650 --> 01:19:11,769
IETF is to have this secondary registry

1458
01:19:08,260 --> 01:19:14,230
of Sentinel units so it would be another

1459
01:19:11,770 --> 01:19:16,210
Ruby C with slightly different kind of

1460
01:19:14,230 --> 01:19:18,459
rules that would be accepting also the

1461
01:19:16,210 --> 01:19:21,790
scaled units but they would be mapping

1462
01:19:18,460 --> 01:19:24,610
rules always to the original cm central

1463
01:19:21,790 --> 01:19:27,280
units and there's a few example from

1464
01:19:24,610 --> 01:19:30,660
kilometer and and DBM on how that works

1465
01:19:27,280 --> 01:19:33,370
in practice so based on discussion

1466
01:19:30,660 --> 01:19:35,050
before the last IETF with all my spec

1467
01:19:33,370 --> 01:19:36,940
where that seems to be a very good way

1468
01:19:35,050 --> 01:19:39,460
forward would be addressing those use

1469
01:19:36,940 --> 01:19:42,009
cases and also of course it's converging

1470
01:19:39,460 --> 01:19:45,010
thing being able to do it automatically

1471
01:19:42,010 --> 01:19:46,450
is seem to be a very useful feature and

1472
01:19:45,010 --> 01:19:48,760
it seems Italian is actually planning to

1473
01:19:46,450 --> 01:19:50,860
have a JSON based registry too sometime

1474
01:19:48,760 --> 01:19:52,870
next year so you could actually more

1475
01:19:50,860 --> 01:19:54,639
more facilitate of getting that

1476
01:19:52,870 --> 01:19:58,019
information automatically and processing

1477
01:19:54,640 --> 01:19:58,020
it as part of your application

1478
01:19:59,730 --> 01:20:08,440
there's also a long discussion on the

1479
01:20:02,710 --> 01:20:12,220
email list that I think Colin initiated

1480
01:20:08,440 --> 01:20:14,500
on that and really like is this right

1481
01:20:12,220 --> 01:20:15,730
right right way to do things and how do

1482
01:20:14,500 --> 01:20:17,620
you work still one actually maintain the

1483
01:20:15,730 --> 01:20:19,150
interoperability but still accommodate

1484
01:20:17,620 --> 01:20:23,680
on some of the need needs on the

1485
01:20:19,150 --> 01:20:27,009
industry so what the draft that Carson

1486
01:20:23,680 --> 01:20:28,840
wrote currently says is that we're not

1487
01:20:27,010 --> 01:20:30,460
commanding the use the secondary units

1488
01:20:28,840 --> 01:20:33,940
it's really that the case you really

1489
01:20:30,460 --> 01:20:37,210
have to do it and and then basically

1490
01:20:33,940 --> 01:20:39,370
used use you use the first table if you

1491
01:20:37,210 --> 01:20:43,030
at all can if you cannot then here's a

1492
01:20:39,370 --> 01:20:44,410
way you can still deal with its nml but

1493
01:20:43,030 --> 01:20:46,059
of course there were some concerns are

1494
01:20:44,410 --> 01:20:48,639
we actually now creating two different

1495
01:20:46,060 --> 01:20:51,220
kind of sentinels and how do how do we

1496
01:20:48,640 --> 01:20:53,830
deal with interoperability when there's

1497
01:20:51,220 --> 01:20:56,710
gonna be much more units than maybe a

1498
01:20:53,830 --> 01:21:00,970
lot of implementations were expecting

1499
01:20:56,710 --> 01:21:05,320
for anything else you don't say on this

1500
01:21:00,970 --> 01:21:08,470
one yeah I think there are several

1501
01:21:05,320 --> 01:21:13,360
facets to this one is the editorial one

1502
01:21:08,470 --> 01:21:15,880
to say may but should not this sounds

1503
01:21:13,360 --> 01:21:18,880
almost like an RFC sixty nine one nine

1504
01:21:15,880 --> 01:21:27,430
keywords but it's really not meant that

1505
01:21:18,880 --> 01:21:31,600
way and the other one is is the way we

1506
01:21:27,430 --> 01:21:35,980
we are updating eight four to eight the

1507
01:21:31,600 --> 01:21:39,760
right way by simply saying we are

1508
01:21:35,980 --> 01:21:41,559
putting in that secondary registry and

1509
01:21:39,760 --> 01:21:43,660
of course a few implements anywhere you

1510
01:21:41,560 --> 01:21:46,830
implement that secondary registry but

1511
01:21:43,660 --> 01:21:49,680
still its use it's not it's not

1512
01:21:46,830 --> 01:21:54,670
recommended so these are two different

1513
01:21:49,680 --> 01:21:57,370
levels we could make more clear so

1514
01:21:54,670 --> 01:21:59,770
before we go into the the full

1515
01:21:57,370 --> 01:22:04,510
discussion now he has two more slides I

1516
01:21:59,770 --> 01:22:10,030
think but if you have direct comment on

1517
01:22:04,510 --> 01:22:11,830
this please challenge eggs I mean this

1518
01:22:10,030 --> 01:22:13,179
is all this won't change anything in

1519
01:22:11,830 --> 01:22:15,220
what happens in the real world right

1520
01:22:13,180 --> 01:22:16,780
like whether we'd maze made me out you

1521
01:22:15,220 --> 01:22:19,660
should but we know you will whatever

1522
01:22:16,780 --> 01:22:21,280
right like I'm not really that I think

1523
01:22:19,660 --> 01:22:22,840
that we need to hit the core problem and

1524
01:22:21,280 --> 01:22:24,849
then may will come back in tune these

1525
01:22:22,840 --> 01:22:26,770
words a little bit but I just wanna know

1526
01:22:24,850 --> 01:22:29,110
one thing on the framing of this this is

1527
01:22:26,770 --> 01:22:31,180
not something new we discovered we knew

1528
01:22:29,110 --> 01:22:33,790
all of this information about units long

1529
01:22:31,180 --> 01:22:35,920
before we set up the current registry in

1530
01:22:33,790 --> 01:22:38,320
the current RFC we discussed all of this

1531
01:22:35,920 --> 01:22:40,379
extensively so this and I'm not saying

1532
01:22:38,320 --> 01:22:42,749
we shouldn't really and change

1533
01:22:40,379 --> 01:22:47,219
and and which i think is the proposal

1534
01:22:42,749 --> 01:22:48,239
already has here or both of you have but

1535
01:22:47,219 --> 01:22:51,169
I don't think it's like we suddenly

1536
01:22:48,239 --> 01:22:53,968
discovered that people used milliseconds

1537
01:22:51,169 --> 01:22:58,139
yeah I also don't think it's and we have

1538
01:22:53,969 --> 01:23:01,439
a trade-off between what will help us

1539
01:22:58,139 --> 01:23:04,319
achieve interoperability of this data in

1540
01:23:01,439 --> 01:23:05,909
where it's used not just the focus of

1541
01:23:04,319 --> 01:23:07,109
what would be convenient to generate and

1542
01:23:05,909 --> 01:23:08,579
we need to think about though both of

1543
01:23:07,109 --> 01:23:14,579
those we go forward on this that make

1544
01:23:08,579 --> 01:23:16,799
sense yes so indeed we have no new

1545
01:23:14,579 --> 01:23:19,469
information on this side and this

1546
01:23:16,799 --> 01:23:23,039
wouldn't make us change anything then

1547
01:23:19,469 --> 01:23:25,139
your information we have is that other

1548
01:23:23,039 --> 01:23:26,459
issues might be using this innovation

1549
01:23:25,139 --> 01:23:28,019
and that was a well known in the

1550
01:23:26,459 --> 01:23:29,879
previous version of this argument and

1551
01:23:28,019 --> 01:23:31,379
discussed we made the previous discus

1552
01:23:29,879 --> 01:23:35,219
decisions that is not new information

1553
01:23:31,379 --> 01:23:37,049
either and so and so anyway my

1554
01:23:35,219 --> 01:23:38,519
recommendation on this slide is this

1555
01:23:37,049 --> 01:23:40,349
isn't the right time to worry about the

1556
01:23:38,519 --> 01:23:41,879
details of that we should go figure out

1557
01:23:40,349 --> 01:23:43,829
what our real solution looks like on the

1558
01:23:41,879 --> 01:23:46,499
stuff and then come back to what advice

1559
01:23:43,829 --> 01:23:48,478
I mean clearly if we're making a table

1560
01:23:46,499 --> 01:23:49,739
it's because we intend people to use it

1561
01:23:48,479 --> 01:23:51,979
that's why we're making this whole thing

1562
01:23:49,739 --> 01:23:57,030
so let's not just be like you know I

1563
01:23:51,979 --> 01:23:59,010
mean this will be about as useful as

1564
01:23:57,030 --> 01:24:00,809
saying we recommend you use v6 and you

1565
01:23:59,010 --> 01:24:02,369
shouldn't use v4 I mean people are going

1566
01:24:00,809 --> 01:24:03,539
to do what they're going to do so I'm

1567
01:24:02,369 --> 01:24:06,419
not really worried about these words

1568
01:24:03,539 --> 01:24:08,039
very much yeah yeah and one one thing I

1569
01:24:06,419 --> 01:24:09,749
think would make a lot of sense to do is

1570
01:24:08,039 --> 01:24:12,139
I mean instead of just saying may but

1571
01:24:09,749 --> 01:24:14,039
should not like write down that

1572
01:24:12,139 --> 01:24:16,289
rationale that I mean lot of that was

1573
01:24:14,039 --> 01:24:18,299
documented in the email discussion that

1574
01:24:16,289 --> 01:24:20,818
we had on the mailing list like why

1575
01:24:18,299 --> 01:24:22,709
using table 1 actually makes makes a lot

1576
01:24:20,819 --> 01:24:24,929
of sense and there are a lot of

1577
01:24:22,709 --> 01:24:27,209
non-obvious aspects there putting those

1578
01:24:24,929 --> 01:24:28,739
in the draft so whenever an engineer

1579
01:24:27,209 --> 01:24:30,479
comes across and okay which one should I

1580
01:24:28,739 --> 01:24:32,909
use at least you have some guidance of

1581
01:24:30,479 --> 01:24:35,369
these non-obvious aspects and then may

1582
01:24:32,909 --> 01:24:41,598
you know doing an informed decision

1583
01:24:35,369 --> 01:24:44,999
based on that but then yet that we had a

1584
01:24:41,599 --> 01:24:47,609
good discussion this morning with Colin

1585
01:24:44,999 --> 01:24:52,289
and Carsten starting at 7:00 a.m. that's

1586
01:24:47,609 --> 01:24:53,670
how committed we are so based on that I

1587
01:24:52,289 --> 01:24:58,349
guess we kind of

1588
01:24:53,670 --> 01:25:00,840
yeah we do want to do this accommodating

1589
01:24:58,350 --> 01:25:05,429
for their more units that's kind of

1590
01:25:00,840 --> 01:25:06,870
where we agreed on what we have in the

1591
01:25:05,429 --> 01:25:10,440
end quite a bit of discussion okay so

1592
01:25:06,870 --> 01:25:12,750
how do we how do we handle this registry

1593
01:25:10,440 --> 01:25:15,330
of within new units so we did discuss

1594
01:25:12,750 --> 01:25:17,600
some some proposed expert review

1595
01:25:15,330 --> 01:25:21,690
guidance for now what we call table to

1596
01:25:17,600 --> 01:25:23,250
more relaxed units so probably it should

1597
01:25:21,690 --> 01:25:28,049
be something okay we need the units to

1598
01:25:23,250 --> 01:25:29,880
be a subset of 7-bit ascii basically the

1599
01:25:28,050 --> 01:25:33,540
only only having F at each so we're

1600
01:25:29,880 --> 01:25:36,960
looking forward them same style that we

1601
01:25:33,540 --> 01:25:38,790
have for the current units and probably

1602
01:25:36,960 --> 01:25:41,880
use the same character set as as the

1603
01:25:38,790 --> 01:25:46,110
names be more explicit on that but then

1604
01:25:41,880 --> 01:25:47,850
what kind of units should be except in

1605
01:25:46,110 --> 01:25:50,780
the original race is pretty much like on

1606
01:25:47,850 --> 01:25:53,090
scale si which is a rather strict

1607
01:25:50,780 --> 01:25:56,150
there's a few exceptions there already

1608
01:25:53,090 --> 01:25:59,910
but that was kind of a general guideline

1609
01:25:56,150 --> 01:26:02,339
so for this would be kind of towards the

1610
01:25:59,910 --> 01:26:05,130
other end of the spectrum being much

1611
01:26:02,340 --> 01:26:07,770
more liberal but we do want to have

1612
01:26:05,130 --> 01:26:11,580
still something there is not like in any

1613
01:26:07,770 --> 01:26:13,560
random proposal would be accepted so one

1614
01:26:11,580 --> 01:26:15,150
way to phrase is what thinking would be

1615
01:26:13,560 --> 01:26:16,739
that units are founding existing

1616
01:26:15,150 --> 01:26:19,429
scientific literature or specification

1617
01:26:16,739 --> 01:26:22,139
and that you can point to a a

1618
01:26:19,429 --> 01:26:23,610
specification that uses this unit you

1619
01:26:22,140 --> 01:26:26,940
know whether is some industry consortium

1620
01:26:23,610 --> 01:26:30,719
or or my a suspect then pretty much

1621
01:26:26,940 --> 01:26:34,469
would be accepted of course if there's

1622
01:26:30,719 --> 01:26:36,960
the already same unit for that thing so

1623
01:26:34,469 --> 01:26:39,210
we shouldn't have two strings meaning

1624
01:26:36,960 --> 01:26:42,120
the exact same thing that would make

1625
01:26:39,210 --> 01:26:46,199
much sense but sometimes there are cases

1626
01:26:42,120 --> 01:26:47,849
where actually it really deep down it is

1627
01:26:46,199 --> 01:26:50,000
the same thing but they're two different

1628
01:26:47,850 --> 01:26:53,760
industries that are using different

1629
01:26:50,000 --> 01:26:55,140
quote-unquote unit describe that then

1630
01:26:53,760 --> 01:26:58,890
maybe that actually make sense to have

1631
01:26:55,140 --> 01:27:00,810
have the same same unit so a different

1632
01:26:58,890 --> 01:27:05,850
unit identifier for the same underlying

1633
01:27:00,810 --> 01:27:07,710
SI unit and also checking when there is

1634
01:27:05,850 --> 01:27:10,050
a new registration I mean

1635
01:27:07,710 --> 01:27:12,989
it would be kind of towards first on

1636
01:27:10,050 --> 01:27:16,590
first-served you would check that okay

1637
01:27:12,989 --> 01:27:18,468
if if that someone wants to register cm

1638
01:27:16,590 --> 01:27:21,120
for meaning something else in centimeter

1639
01:27:18,469 --> 01:27:25,560
probably should advise them to go you

1640
01:27:21,120 --> 01:27:27,090
know find another identifier for it and

1641
01:27:25,560 --> 01:27:28,380
also what we actually have right now is

1642
01:27:27,090 --> 01:27:30,989
we have these two things were same a

1643
01:27:28,380 --> 01:27:32,730
scientific reactive apparent power we

1644
01:27:30,989 --> 01:27:34,769
may want to move some of these things to

1645
01:27:32,730 --> 01:27:36,889
the table to that when people originally

1646
01:27:34,770 --> 01:27:39,530
proposed for for a table one though and

1647
01:27:36,890 --> 01:27:41,940
we should think about the naming syntax

1648
01:27:39,530 --> 01:27:46,050
one thing that was recently proposed was

1649
01:27:41,940 --> 01:27:47,669
this evens per hour per square meter in

1650
01:27:46,050 --> 01:27:50,160
the original guidance we had like okay

1651
01:27:47,670 --> 01:27:53,310
you shouldn't have more than 1/4

1652
01:27:50,160 --> 01:27:57,030
watchlist in the units but for that kind

1653
01:27:53,310 --> 01:27:59,940
of unit two forward classes may make

1654
01:27:57,030 --> 01:28:03,330
sense produces an initial draft

1655
01:27:59,940 --> 01:28:05,669
unlike the guidance on the table to

1656
01:28:03,330 --> 01:28:07,830
cause them current guidance in in the

1657
01:28:05,670 --> 01:28:09,150
grass was rather maybe what wasn't

1658
01:28:07,830 --> 01:28:13,769
wasn't quite adequate and maybe even

1659
01:28:09,150 --> 01:28:15,509
conflicting so : James could you say a

1660
01:28:13,770 --> 01:28:18,030
little bit more on this I mean you know

1661
01:28:15,510 --> 01:28:19,980
I this makes a very open register and

1662
01:28:18,030 --> 01:28:21,509
just to provide some examples intent

1663
01:28:19,980 --> 01:28:23,339
this makes very open registry if

1664
01:28:21,510 --> 01:28:25,770
somebody is asking for micro fortnight's

1665
01:28:23,340 --> 01:28:31,950
as a unit of time we probably give it to

1666
01:28:25,770 --> 01:28:34,950
them right and definitely miles per hour

1667
01:28:31,950 --> 01:28:36,780
and everything else for sure and it's

1668
01:28:34,950 --> 01:28:39,599
you know it's to try and give people

1669
01:28:36,780 --> 01:28:42,179
what they want and we I mean we have

1670
01:28:39,600 --> 01:28:44,940
examples that are already in the draft

1671
01:28:42,180 --> 01:28:48,690
like the heart beats per minute unit

1672
01:28:44,940 --> 01:28:49,739
that you know it's hard to justify some

1673
01:28:48,690 --> 01:28:51,360
of these things right and this that

1674
01:28:49,739 --> 01:28:53,968
would be fine in this table would allow

1675
01:28:51,360 --> 01:28:54,989
exactly those types of things one other

1676
01:28:53,969 --> 01:28:56,820
thing that I really want to highlight

1677
01:28:54,989 --> 01:28:59,160
for people is this reactive apparent

1678
01:28:56,820 --> 01:29:02,040
power we have lots of things where

1679
01:28:59,160 --> 01:29:03,690
people really want to use units for

1680
01:29:02,040 --> 01:29:05,700
something that is not units at all but

1681
01:29:03,690 --> 01:29:09,089
tags additional semantic meaning to them

1682
01:29:05,700 --> 01:29:10,260
and I think this you know the different

1683
01:29:09,090 --> 01:29:12,360
types of power measurements are

1684
01:29:10,260 --> 01:29:15,450
excellent examples of a good use of that

1685
01:29:12,360 --> 01:29:17,489
and we should allow that but that opens

1686
01:29:15,450 --> 01:29:21,000
the slippery slope I think this will

1687
01:29:17,489 --> 01:29:21,750
totally open also you know in in minion

1688
01:29:21,000 --> 01:29:24,030
Street

1689
01:29:21,750 --> 01:29:24,750
parts-per-billion of carbon dioxide and

1690
01:29:24,030 --> 01:29:26,670
parts-per-billion

1691
01:29:24,750 --> 01:29:28,740
of oxygen they consider those two

1692
01:29:26,670 --> 01:29:30,780
different units and that's no different

1693
01:29:28,740 --> 01:29:33,179
than the power one so I think we've got

1694
01:29:30,780 --> 01:29:34,950
to be okay with that and III think this

1695
01:29:33,180 --> 01:29:36,870
would I can see many advantages of

1696
01:29:34,950 --> 01:29:39,800
having the second type of registry that

1697
01:29:36,870 --> 01:29:42,210
had that very open type of idea

1698
01:29:39,800 --> 01:29:43,980
particularly with the machine readable

1699
01:29:42,210 --> 01:29:46,830
way of mapping it back to Table one

1700
01:29:43,980 --> 01:29:49,049
so I just want people good with that

1701
01:29:46,830 --> 01:29:50,100
type of openness to this table I mean I

1702
01:29:49,050 --> 01:29:54,990
think that's one of the things that re

1703
01:29:50,100 --> 01:29:57,200
aren't trying to get feedback on here hi

1704
01:29:54,990 --> 01:30:00,750
I'm I'm Matt Gilmore I work with Itron

1705
01:29:57,200 --> 01:30:03,059
to your point though quite frankly we do

1706
01:30:00,750 --> 01:30:05,670
not we my company makes electric meters

1707
01:30:03,060 --> 01:30:08,760
we've shipped probably 200 million smart

1708
01:30:05,670 --> 01:30:11,250
meters across the world we all right so

1709
01:30:08,760 --> 01:30:13,830
I get it that you can represent kWh and

1710
01:30:11,250 --> 01:30:16,140
it's just a scalar unit of joules but

1711
01:30:13,830 --> 01:30:19,470
we'll never ship joules over the air its

1712
01:30:16,140 --> 01:30:21,960
kWh so I mean there's got to be some

1713
01:30:19,470 --> 01:30:23,850
means where an industry has a standard

1714
01:30:21,960 --> 01:30:26,430
and we're just trying to bring it out to

1715
01:30:23,850 --> 01:30:31,500
the IOT and that's why we went to

1716
01:30:26,430 --> 01:30:32,940
secondary registry I mean I'd say heard

1717
01:30:31,500 --> 01:30:34,560
loud and clear and you're not the first

1718
01:30:32,940 --> 01:30:35,759
people to say exactly that right it's

1719
01:30:34,560 --> 01:30:40,500
not the only example we've had other

1720
01:30:35,760 --> 01:30:42,150
people you know have said when they sit

1721
01:30:40,500 --> 01:30:43,800
when they set a house temperature in

1722
01:30:42,150 --> 01:30:45,240
Fahrenheit or Celsius they're not

1723
01:30:43,800 --> 01:30:48,990
converting it they're setting it to what

1724
01:30:45,240 --> 01:30:53,010
it's either 21.5 or 79 degrees but it's

1725
01:30:48,990 --> 01:30:54,719
it's not something else so I think we

1726
01:30:53,010 --> 01:30:57,720
have a pretty good agreement that okay

1727
01:30:54,720 --> 01:30:59,640
we will have more units and it's more on

1728
01:30:57,720 --> 01:31:02,670
the details like how do we organize the

1729
01:30:59,640 --> 01:31:04,710
whole thing and then the expert review

1730
01:31:02,670 --> 01:31:07,950
guidance is kind of one key part there

1731
01:31:04,710 --> 01:31:09,360
so all the feedback here would be very

1732
01:31:07,950 --> 01:31:11,639
much appreciated and if and of course

1733
01:31:09,360 --> 01:31:14,370
anyone volunteering to be the expert I

1734
01:31:11,640 --> 01:31:16,440
mean those are also highly appreciated

1735
01:31:14,370 --> 01:31:18,480
someone you know background on these

1736
01:31:16,440 --> 01:31:25,129
kind of things I think would be it would

1737
01:31:18,480 --> 01:31:25,129
be very good okay there

1738
01:31:25,429 --> 01:31:32,349
one more slide or you want to comment

1739
01:31:26,959 --> 01:31:37,579
right on this one oh okay then

1740
01:31:32,349 --> 01:31:40,280
one issue we couldn't quite get

1741
01:31:37,579 --> 01:31:43,308
agreement on or we could we still need

1742
01:31:40,280 --> 01:31:46,159
to do some more analysis on is should be

1743
01:31:43,309 --> 01:31:49,219
used the same you field or should we

1744
01:31:46,159 --> 01:31:51,018
have a new field for the units in the

1745
01:31:49,219 --> 01:31:55,249
second table and now that's called the

1746
01:31:51,019 --> 01:31:57,260
YouTube field so in the first process

1747
01:31:55,249 --> 01:31:59,360
over you're using the same unit for both

1748
01:31:57,260 --> 01:32:01,399
I mean they both go in same X new field

1749
01:31:59,360 --> 01:32:04,159
there are some downsides to it for

1750
01:32:01,399 --> 01:32:05,959
example that if you wrote software that

1751
01:32:04,159 --> 01:32:09,110
is kind of expecting things in table one

1752
01:32:05,959 --> 01:32:12,469
you may have assumed that this is rather

1753
01:32:09,110 --> 01:32:15,829
stable registry of course there will be

1754
01:32:12,469 --> 01:32:18,199
new units but not like in masses so

1755
01:32:15,829 --> 01:32:20,780
those assumptions may might be broken

1756
01:32:18,199 --> 01:32:24,949
once you get like you know 100 new units

1757
01:32:20,780 --> 01:32:27,050
in in the table to also in some cases it

1758
01:32:24,949 --> 01:32:29,570
might be used with a clear indication on

1759
01:32:27,050 --> 01:32:32,449
the wire is the stuff from the table one

1760
01:32:29,570 --> 01:32:38,058
or table to the top would actually then

1761
01:32:32,449 --> 01:32:41,478
make a youtube proposal potential on the

1762
01:32:38,059 --> 01:32:45,949
other hand having a separate field for

1763
01:32:41,479 --> 01:32:48,079
this units from table to it does create

1764
01:32:45,949 --> 01:32:50,089
in importance nm a lot of complexities

1765
01:32:48,079 --> 01:32:52,009
different feel for similar things and

1766
01:32:50,090 --> 01:32:55,849
that's what we hit when we were

1767
01:32:52,010 --> 01:32:58,189
discussing the content type string and a

1768
01:32:55,849 --> 01:32:59,209
numeric value we okay it's a simple

1769
01:32:58,189 --> 01:33:01,639
thing let's let's make them separate

1770
01:32:59,209 --> 01:33:03,679
fields cause they're different values no

1771
01:33:01,639 --> 01:33:05,719
it's you need a lot of complex is a lot

1772
01:33:03,679 --> 01:33:08,179
of a lot of corner cases how base values

1773
01:33:05,719 --> 01:33:10,429
overwrite each other and you just bunch

1774
01:33:08,179 --> 01:33:13,629
of complex logic which you can easily

1775
01:33:10,429 --> 01:33:16,300
avoid if you stick into the single field

1776
01:33:13,629 --> 01:33:18,860
and also I mean these are are still

1777
01:33:16,300 --> 01:33:21,229
units units in the same sense so that

1778
01:33:18,860 --> 01:33:25,398
kind of semantics of that field are or

1779
01:33:21,229 --> 01:33:26,989
are the same what we did conclude in our

1780
01:33:25,399 --> 01:33:28,249
morning works of that yeah we need to do

1781
01:33:26,989 --> 01:33:31,728
more analyze something to think of the

1782
01:33:28,249 --> 01:33:34,369
corner cases anyone interested in this

1783
01:33:31,729 --> 01:33:36,619
and willing to chat a bit more feedback

1784
01:33:34,369 --> 01:33:38,478
could be highly welcome we're planning

1785
01:33:36,619 --> 01:33:39,200
to talk about bit more during the week

1786
01:33:38,479 --> 01:33:41,030
and maybe we can

1787
01:33:39,200 --> 01:33:44,570
a quick one on the coarsest on Friday

1788
01:33:41,030 --> 01:33:46,309
two on our conclusions where we may land

1789
01:33:44,570 --> 01:33:49,519
during this week and actually have a

1790
01:33:46,310 --> 01:33:55,640
proposal for wayforward right now we

1791
01:33:49,520 --> 01:33:57,020
don't have clear one yeah having another

1792
01:33:55,640 --> 01:33:58,300
side meeting on this is probably good

1793
01:33:57,020 --> 01:34:03,940
idea

1794
01:33:58,300 --> 01:34:07,670
do you just proposed adding unit as a

1795
01:34:03,940 --> 01:34:12,110
selector criteria yes

1796
01:34:07,670 --> 01:34:13,850
adding you to as well that will be part

1797
01:34:12,110 --> 01:34:19,009
of those complexities we will hit if we

1798
01:34:13,850 --> 01:34:21,170
have another field yes yeah I just so

1799
01:34:19,010 --> 01:34:22,400
I'm not sure that the you or you I'm not

1800
01:34:21,170 --> 01:34:24,890
sure that you two is the only way to

1801
01:34:22,400 --> 01:34:27,710
skin this cat but the the thing that I

1802
01:34:24,890 --> 01:34:29,450
feel very strongly about is we have

1803
01:34:27,710 --> 01:34:32,150
these two options of spectrums they have

1804
01:34:29,450 --> 01:34:35,179
pros and cons and the spectrum what we

1805
01:34:32,150 --> 01:34:37,790
chose in cinnamon al was very much in

1806
01:34:35,180 --> 01:34:39,560
favor of what made it easy to do

1807
01:34:37,790 --> 01:34:41,960
analytics and combine this data and use

1808
01:34:39,560 --> 01:34:45,260
it in our operable way and I don't think

1809
01:34:41,960 --> 01:34:47,120
that we can just I think we need to find

1810
01:34:45,260 --> 01:34:48,560
a backwards compatible way if we're

1811
01:34:47,120 --> 01:34:49,820
going to change this we can't just we're

1812
01:34:48,560 --> 01:34:51,770
too late to just change it there's too

1813
01:34:49,820 --> 01:34:53,990
much software written that assumes that

1814
01:34:51,770 --> 01:34:55,550
if it's dealing with the units it will

1815
01:34:53,990 --> 01:34:57,710
understand them and be able to process

1816
01:34:55,550 --> 01:34:59,720
it so I'd like us to find some way that

1817
01:34:57,710 --> 01:35:02,960
it's very clear whether we're using the

1818
01:34:59,720 --> 01:35:05,660
new units or the old units I don't I

1819
01:35:02,960 --> 01:35:08,000
don't believe that any amount of you

1820
01:35:05,660 --> 01:35:09,590
should or should not use this or that I

1821
01:35:08,000 --> 01:35:11,210
mean we just heard the answer to how

1822
01:35:09,590 --> 01:35:16,760
that conversations gonna go right it

1823
01:35:11,210 --> 01:35:19,850
doesn't so I think that we need to to

1824
01:35:16,760 --> 01:35:21,950
think about all the things that went

1825
01:35:19,850 --> 01:35:24,080
with the assumption of our current RFC

1826
01:35:21,950 --> 01:35:25,880
we have to not break why they did that

1827
01:35:24,080 --> 01:35:27,110
and what what they're doing it and this

1828
01:35:25,880 --> 01:35:28,610
would do it there might be other ways to

1829
01:35:27,110 --> 01:35:30,559
do it but I think we need to find some

1830
01:35:28,610 --> 01:35:33,080
way of not breaking that type of

1831
01:35:30,560 --> 01:35:35,150
interoperability yep yeah or at least

1832
01:35:33,080 --> 01:35:37,550
minimize the damage I guess that's what

1833
01:35:35,150 --> 01:35:38,360
I'm fair enough yes yeah because I mean

1834
01:35:37,550 --> 01:35:41,330
oh of course

1835
01:35:38,360 --> 01:35:42,769
already today technically any implement

1836
01:35:41,330 --> 01:35:44,690
they should expect there are gonna be

1837
01:35:42,770 --> 01:35:46,790
new units also in the first registry but

1838
01:35:44,690 --> 01:35:49,030
yes the assumption on the amount of new

1839
01:35:46,790 --> 01:35:51,590
units cut if the assumption is if there

1840
01:35:49,030 --> 01:35:52,489
that there won't be new units which

1841
01:35:51,590 --> 01:35:54,650
their

1842
01:35:52,489 --> 01:35:56,450
inherently understands but they can't

1843
01:35:54,650 --> 01:35:57,769
read right Zack like yeah sure somebody

1844
01:35:56,450 --> 01:35:59,210
might add radiation and they only do

1845
01:35:57,770 --> 01:36:01,640
temperature but they're gonna be

1846
01:35:59,210 --> 01:36:03,200
surprised to get fahrenheits that their

1847
01:36:01,640 --> 01:36:17,660
application should be able to process

1848
01:36:03,200 --> 01:36:19,849
which they can Alexia's you're poor ad

1849
01:36:17,660 --> 01:36:24,559
for this document it looks like this one

1850
01:36:19,850 --> 01:36:26,870
is not ready for hg basically yeah we

1851
01:36:24,560 --> 01:36:29,150
need we do need to figure out this you

1852
01:36:26,870 --> 01:36:36,500
you two think hopefully we'll get some

1853
01:36:29,150 --> 01:36:39,739
clarity this week so yes as we discussed

1854
01:36:36,500 --> 01:36:42,170
the last time on there is some urgency

1855
01:36:39,739 --> 01:36:44,959
on getting a registry and getting your

1856
01:36:42,170 --> 01:36:47,630
values there that you you two part may

1857
01:36:44,960 --> 01:36:49,880
not be that urgent because I mean for

1858
01:36:47,630 --> 01:36:50,270
that it's more we could figure it out

1859
01:36:49,880 --> 01:36:52,850
later

1860
01:36:50,270 --> 01:36:55,310
I don't know if there's a sensible way

1861
01:36:52,850 --> 01:36:56,780
to do it's a pre-registration of the

1862
01:36:55,310 --> 01:37:00,170
units and then we'll figure out this

1863
01:36:56,780 --> 01:37:02,300
detail later later on I mean during the

1864
01:37:00,170 --> 01:37:04,250
process but having those units usable

1865
01:37:02,300 --> 01:37:05,840
it's kind of the urgent things and I

1866
01:37:04,250 --> 01:37:07,280
think we're just not really disagreement

1867
01:37:05,840 --> 01:37:10,430
on that but we need those identifiers

1868
01:37:07,280 --> 01:37:13,280
and the identifiers themselves are

1869
01:37:10,430 --> 01:37:15,469
rather straightforward so then we

1870
01:37:13,280 --> 01:37:17,690
wouldn't have to then rush getting this

1871
01:37:15,469 --> 01:37:20,890
into RF see if we could have the

1872
01:37:17,690 --> 01:37:24,559
registry ready okay

1873
01:37:20,890 --> 01:37:26,950
second question is have you talked to

1874
01:37:24,560 --> 01:37:31,090
Pete Resnick

1875
01:37:26,950 --> 01:37:34,700
it was the one who's continued

1876
01:37:31,090 --> 01:37:37,730
discussion when Colin races

1877
01:37:34,700 --> 01:37:40,460
yeah not after his emails no should yes

1878
01:37:37,730 --> 01:37:43,629
maybe you should talk to him I think I

1879
01:37:40,460 --> 01:37:47,090
might be incorrectly proxying his

1880
01:37:43,630 --> 01:37:48,980
comments but he thinks that one registry

1881
01:37:47,090 --> 01:37:52,820
with an extra column saying whether it's

1882
01:37:48,980 --> 01:37:54,889
recommended or not would be better was

1883
01:37:52,820 --> 01:37:57,980
confusing to people but again you know I

1884
01:37:54,890 --> 01:38:00,020
personally sort of don't care but some

1885
01:37:57,980 --> 01:38:03,700
people feel strong is another I suggest

1886
01:38:00,020 --> 01:38:06,520
you talk to him and see if it's

1887
01:38:03,700 --> 01:38:11,139
fab boxing of his comments or whether

1888
01:38:06,520 --> 01:38:15,060
very smart read the main problem with

1889
01:38:11,140 --> 01:38:17,530
that is that there are other columns

1890
01:38:15,060 --> 01:38:23,350
almost all columns are different between

1891
01:38:17,530 --> 01:38:25,030
to everyone and every true I think it's

1892
01:38:23,350 --> 01:38:27,400
really administrative thing and I I

1893
01:38:25,030 --> 01:38:30,179
agree with Carsten that like the

1894
01:38:27,400 --> 01:38:33,879
separate tables make mix makes a sense

1895
01:38:30,180 --> 01:38:35,740
from administrative point of view but

1896
01:38:33,880 --> 01:38:37,480
yeah it's good point let's let's check

1897
01:38:35,740 --> 01:38:39,280
with Peter explicitly on that at least

1898
01:38:37,480 --> 01:38:40,809
he didn't react on the later comments

1899
01:38:39,280 --> 01:38:42,910
where we where we were converging on

1900
01:38:40,810 --> 01:38:44,590
this way of doing things like a calling

1901
01:38:42,910 --> 01:38:55,990
was in the in the end favor of the two

1902
01:38:44,590 --> 01:38:57,790
tables and as everyone else yeah so I

1903
01:38:55,990 --> 01:39:05,679
think suggests that he's not trying to

1904
01:38:57,790 --> 01:39:06,790
derail our emerging consensus and

1905
01:39:05,680 --> 01:39:07,810
there's other things we found like

1906
01:39:06,790 --> 01:39:11,830
things that definitely need to be

1907
01:39:07,810 --> 01:39:14,890
updated in the current draft with with

1908
01:39:11,830 --> 01:39:17,470
like the expert rule like whatever rule

1909
01:39:14,890 --> 01:39:19,630
5 was whatever yeah yeah so I mean it's

1910
01:39:17,470 --> 01:39:21,580
definitely a very minimum a Rev of the

1911
01:39:19,630 --> 01:39:24,430
draft is definitely needed that's for

1912
01:39:21,580 --> 01:39:26,290
sure on the on the splitting and moving

1913
01:39:24,430 --> 01:39:29,380
things forward I am NOT I'm not really

1914
01:39:26,290 --> 01:39:31,780
very ok with that because if we are

1915
01:39:29,380 --> 01:39:33,580
going to use I would rather not have

1916
01:39:31,780 --> 01:39:35,290
these new units than have them in the

1917
01:39:33,580 --> 01:39:37,269
you field with no solution to the

1918
01:39:35,290 --> 01:39:38,860
problem posed here so if we're going to

1919
01:39:37,270 --> 01:39:40,090
add these new tables there has to be

1920
01:39:38,860 --> 01:39:44,110
some way of dealing with this problem

1921
01:39:40,090 --> 01:39:46,240
I'm not so be very clear on that I'm not

1922
01:39:44,110 --> 01:39:47,679
okay with if we know how we're going to

1923
01:39:46,240 --> 01:39:51,120
do it but it's not finished yet that's

1924
01:39:47,680 --> 01:39:53,890
fine I don't care but we're not going to

1925
01:39:51,120 --> 01:39:56,140
agree on the units before we agree

1926
01:39:53,890 --> 01:39:58,000
whether we are breaking the whole design

1927
01:39:56,140 --> 01:40:01,470
of the currents in ml on a non backwards

1928
01:39:58,000 --> 01:40:02,680
compatible way right so how about

1929
01:40:01,470 --> 01:40:07,780
allowing

1930
01:40:02,680 --> 01:40:13,830
table 2 and you field if it's prefixed

1931
01:40:07,780 --> 01:40:16,019
by an asterisk its prefixed by an answer

1932
01:40:13,830 --> 01:40:17,970
okay sure III mean like look that like

1933
01:40:16,020 --> 01:40:19,950
as I said there may be many ways to skin

1934
01:40:17,970 --> 01:40:22,620
the cat but some that we agree on some

1935
01:40:19,950 --> 01:40:24,780
way to see in this cat yeah yeah yeah

1936
01:40:22,620 --> 01:40:27,660
okay so I hadn't thought of that Carson

1937
01:40:24,780 --> 01:40:29,460
nice suggestion yeah we're going to at

1938
01:40:27,660 --> 01:40:32,460
least those different options on up you

1939
01:40:29,460 --> 01:40:34,050
know he's a paper or a screen and think

1940
01:40:32,460 --> 01:40:35,370
about that once I think we have many

1941
01:40:34,050 --> 01:40:39,360
ways to solve this and I'm sure we will

1942
01:40:35,370 --> 01:40:42,480
find a way but I think like in order to

1943
01:40:39,360 --> 01:40:45,120
make things move us as fast as possible

1944
01:40:42,480 --> 01:40:47,519
I think if we could like prepare for the

1945
01:40:45,120 --> 01:40:49,019
pre-registration of these units that it

1946
01:40:47,520 --> 01:40:51,750
doesn't have to wait until you know

1947
01:40:49,020 --> 01:40:53,280
there's an RFC mark on it I think that

1948
01:40:51,750 --> 01:40:55,770
would be very good for for everyone

1949
01:40:53,280 --> 01:41:00,780
depending on these new units just

1950
01:40:55,770 --> 01:41:03,090
basically right now since I oh oh ma we

1951
01:41:00,780 --> 01:41:05,009
kind of chose to use these units we are

1952
01:41:03,090 --> 01:41:08,460
working new registrations of objects

1953
01:41:05,010 --> 01:41:11,790
before we get these units ready so there

1954
01:41:08,460 --> 01:41:13,620
is some some urgency in that sense

1955
01:41:11,790 --> 01:41:15,720
otherwise we'll need to find a way

1956
01:41:13,620 --> 01:41:17,190
around it and that could just get messy

1957
01:41:15,720 --> 01:41:21,510
in the end so it would be much more

1958
01:41:17,190 --> 01:41:23,460
clear to have the units in a registry

1959
01:41:21,510 --> 01:41:28,220
and then we'll figure out how we have to

1960
01:41:23,460 --> 01:41:33,870
deal with that good I think that was my

1961
01:41:28,220 --> 01:41:42,840
last slide on that topic and the next

1962
01:41:33,870 --> 01:41:45,630
one okay cool okay

1963
01:41:42,840 --> 01:41:48,390
data value content format indication

1964
01:41:45,630 --> 01:41:51,600
just a quick reminder what this draft is

1965
01:41:48,390 --> 01:41:53,520
about it's about giving content format

1966
01:41:51,600 --> 01:41:56,070
information about the things that you

1967
01:41:53,520 --> 01:41:59,010
wouldn't send ml include in your VD this

1968
01:41:56,070 --> 01:42:01,620
data value field so for example the

1969
01:41:59,010 --> 01:42:05,670
example on the top that's on putting C

1970
01:42:01,620 --> 01:42:07,140
bore array in a senemo data and the

1971
01:42:05,670 --> 01:42:10,380
second one would be putting basically

1972
01:42:07,140 --> 01:42:15,620
comma separated values run through Z

1973
01:42:10,380 --> 01:42:18,030
gzip for compression in the data value

1974
01:42:15,620 --> 01:42:19,830
the change is what we had done since the

1975
01:42:18,030 --> 01:42:21,480
last IETF what we agreed over there is

1976
01:42:19,830 --> 01:42:23,519
that we are now used in the same field

1977
01:42:21,480 --> 01:42:26,070
and string values for both the content

1978
01:42:23,520 --> 01:42:27,839
format and cone type encoding so we used

1979
01:42:26,070 --> 01:42:30,119
to have different field for this

1980
01:42:27,839 --> 01:42:31,709
shrink type and the integer type that

1981
01:42:30,119 --> 01:42:34,530
resulted in all the complications that I

1982
01:42:31,709 --> 01:42:36,358
refer to earlier so now we're just using

1983
01:42:34,530 --> 01:42:38,728
string even though there's a numeric

1984
01:42:36,359 --> 01:42:41,159
numeric value you put it in a string

1985
01:42:38,729 --> 01:42:43,050
because it's a simpler and there's a

1986
01:42:41,159 --> 01:42:44,659
white or two of overhead but that seems

1987
01:42:43,050 --> 01:42:47,159
to be well worth it

1988
01:42:44,659 --> 01:42:49,739
also we added this mandatory to

1989
01:42:47,159 --> 01:42:52,259
understand version of the CT supposed to

1990
01:42:49,739 --> 01:42:55,259
see the underscore or base city

1991
01:42:52,260 --> 01:42:57,889
underscore and we also had a bunch of

1992
01:42:55,260 --> 01:43:01,379
examples about alexei was was asking for

1993
01:42:57,889 --> 01:43:04,439
to actually validate does this way that

1994
01:43:01,379 --> 01:43:06,059
we form the string versions made make

1995
01:43:04,439 --> 01:43:08,339
sense so there you can now see a few

1996
01:43:06,059 --> 01:43:10,679
examples that are listed in the current

1997
01:43:08,339 --> 01:43:13,109
Kraft I think in particular out the last

1998
01:43:10,679 --> 01:43:16,229
one and the second to last one Burgess

1999
01:43:13,109 --> 01:43:18,239
also the content coding included are the

2000
01:43:16,229 --> 01:43:21,139
interesting ones so using now this new

2001
01:43:18,239 --> 01:43:24,749
format of having the cone encoding

2002
01:43:21,139 --> 01:43:26,999
separated by at sign as part of the

2003
01:43:24,749 --> 01:43:28,619
string that allows us to use a single

2004
01:43:26,999 --> 01:43:29,969
field for all of these piece of

2005
01:43:28,619 --> 01:43:34,249
information and avoiding some of the

2006
01:43:29,969 --> 01:43:34,249
complexities with multiple fields

2007
01:43:35,599 --> 01:43:41,369
however they're still the same

2008
01:43:38,989 --> 01:43:47,249
complication that we briefly discussed

2009
01:43:41,369 --> 01:43:50,098
last time how do you handle mixing base

2010
01:43:47,249 --> 01:43:53,068
fields and mandatory to understand

2011
01:43:50,099 --> 01:43:55,439
fields what is the really the field that

2012
01:43:53,069 --> 01:43:58,949
ends up being used after you have

2013
01:43:55,439 --> 01:44:01,079
resolved the records and it's important

2014
01:43:58,949 --> 01:44:03,780
to go take case number one that is a

2015
01:44:01,079 --> 01:44:06,030
tricky that you have a base value for

2016
01:44:03,780 --> 01:44:08,280
foo that you say it's mandatory to

2017
01:44:06,030 --> 01:44:11,459
implement implement and I understand and

2018
01:44:08,280 --> 01:44:14,789
later on you would have a food that is

2019
01:44:11,459 --> 01:44:21,239
not mandatory what actually ends up

2020
01:44:14,789 --> 01:44:23,249
being applied and how so currently so

2021
01:44:21,239 --> 01:44:26,489
this is nothing specific to this graph

2022
01:44:23,249 --> 01:44:28,409
it's a cinema feature at large but this

2023
01:44:26,489 --> 01:44:31,468
is the first graph where we actually hit

2024
01:44:28,409 --> 01:44:33,719
this issue so current text is that okay

2025
01:44:31,469 --> 01:44:37,079
they're mandatory to understand field

2026
01:44:33,719 --> 01:44:40,050
overrides the regular field and you

2027
01:44:37,079 --> 01:44:41,639
shouldn't be mixing them and shouldn't

2028
01:44:40,050 --> 01:44:45,330
be mixing the max it's a very

2029
01:44:41,640 --> 01:44:47,340
sensible thing overall and but you may

2030
01:44:45,330 --> 01:44:49,530
not be able to avoid that if you're

2031
01:44:47,340 --> 01:44:51,780
combining send email from multiple

2032
01:44:49,530 --> 01:44:53,250
sources so one source used to monitor do

2033
01:44:51,780 --> 01:44:55,500
you understand the other one used

2034
01:44:53,250 --> 01:44:59,490
regular fields you want to put them in

2035
01:44:55,500 --> 01:45:01,200
the same pack how do you deal with we

2036
01:44:59,490 --> 01:45:03,120
thought we had a resolution on it then

2037
01:45:01,200 --> 01:45:05,030
we realize it's actually more

2038
01:45:03,120 --> 01:45:10,320
complicated than you think so

2039
01:45:05,030 --> 01:45:12,210
Arsene 1925 rule 8 applies also here so

2040
01:45:10,320 --> 01:45:14,429
we're planning to have a one more closer

2041
01:45:12,210 --> 01:45:17,850
look on these rules how does it actually

2042
01:45:14,430 --> 01:45:19,350
should be resolved again feedback would

2043
01:45:17,850 --> 01:45:21,780
be very welcome

2044
01:45:19,350 --> 01:45:24,330
we're probably need to write a maybe a

2045
01:45:21,780 --> 01:45:26,460
piece of cinema someday include some

2046
01:45:24,330 --> 01:45:29,490
instructions there or put it somewhere

2047
01:45:26,460 --> 01:45:31,410
in in a generic fashion some guidance

2048
01:45:29,490 --> 01:45:32,700
how to do this but this is the first

2049
01:45:31,410 --> 01:45:36,320
draft we actually have to solve that

2050
01:45:32,700 --> 01:45:36,320
issue specifically

2051
01:45:42,100 --> 01:45:47,050
okay any questions comments on that one

2052
01:45:53,620 --> 01:45:58,550
okay and I like say if you can impart a

2053
01:45:56,120 --> 01:46:02,660
call have a look at the format and see

2054
01:45:58,550 --> 01:46:07,820
if that's sensible kind of from media

2055
01:46:02,660 --> 01:46:09,260
type expert eighty point of view you can

2056
01:46:07,820 --> 01:46:14,900
even look at the examples in the draft

2057
01:46:09,260 --> 01:46:17,750
and see if tax le works for you okay

2058
01:46:14,900 --> 01:46:21,019
then we're actually on time

2059
01:46:17,750 --> 01:46:23,960
the final sentiment draft the base

2060
01:46:21,020 --> 01:46:27,110
prefix so this is a draft I wrote

2061
01:46:23,960 --> 01:46:28,430
together with Christy announces the idea

2062
01:46:27,110 --> 01:46:31,610
there is that since a memo we have this

2063
01:46:28,430 --> 01:46:33,110
requirement for COBOL unique names for

2064
01:46:31,610 --> 01:46:35,389
example in the RFC week I'm only use

2065
01:46:33,110 --> 01:46:37,339
ipv6 prefix in the previous of the name

2066
01:46:35,390 --> 01:46:39,620
in order to get Discovery unique names

2067
01:46:37,340 --> 01:46:41,240
and the whole idea there is that it puts

2068
01:46:39,620 --> 01:46:43,730
global unique names they facilitate

2069
01:46:41,240 --> 01:46:45,500
information exchange across multiple

2070
01:46:43,730 --> 01:46:46,730
systems because you have a global unique

2071
01:46:45,500 --> 01:46:48,350
identifier you can always point to

2072
01:46:46,730 --> 01:46:50,900
regardless of the source where you

2073
01:46:48,350 --> 01:46:52,940
actually got the information from the

2074
01:46:50,900 --> 01:46:55,429
downside of this choice is that you

2075
01:46:52,940 --> 01:46:57,290
sometimes have a long and this is long

2076
01:46:55,430 --> 01:47:00,920
in quotes cuz I mean depends how are you

2077
01:46:57,290 --> 01:47:04,070
mister to long names can end up some

2078
01:47:00,920 --> 01:47:05,720
tens of bytes of overhead for a pack its

2079
01:47:04,070 --> 01:47:07,400
and so if you are in a very constrained

2080
01:47:05,720 --> 01:47:09,110
Network something like Laura one for

2081
01:47:07,400 --> 01:47:10,160
perhaps it accident may make a big

2082
01:47:09,110 --> 01:47:11,809
difference for you and you want to

2083
01:47:10,160 --> 01:47:15,740
release squeezed out there the remaining

2084
01:47:11,810 --> 01:47:18,710
bytes the thing is like usually the base

2085
01:47:15,740 --> 01:47:20,840
name prefix has some information that

2086
01:47:18,710 --> 01:47:23,360
it's also available out of band out of

2087
01:47:20,840 --> 01:47:25,910
band of The Sentinel FAQ for example an

2088
01:47:23,360 --> 01:47:29,330
IP address requests you arrived Els

2089
01:47:25,910 --> 01:47:30,710
identity etc so the proposal in this

2090
01:47:29,330 --> 01:47:33,680
draft is that you would be able to

2091
01:47:30,710 --> 01:47:36,290
indicate how should you construct the

2092
01:47:33,680 --> 01:47:39,530
base name based on the information that

2093
01:47:36,290 --> 01:47:40,790
is available out-of-band and then when

2094
01:47:39,530 --> 01:47:43,429
this information is no longer available

2095
01:47:40,790 --> 01:47:46,040
for example after the first hop you then

2096
01:47:43,430 --> 01:47:48,290
put replace this this pointer with the

2097
01:47:46,040 --> 01:47:50,360
information that you are using and

2098
01:47:48,290 --> 01:47:54,290
therefore be able to use again like

2099
01:47:50,360 --> 01:47:54,790
standard RFC SN ml there is an IP r

2100
01:47:54,290 --> 01:47:57,519
declaration

2101
01:47:54,790 --> 01:47:58,810
on this draft there number 360 - you can

2102
01:47:57,520 --> 01:48:03,520
go and check it out that for more

2103
01:47:58,810 --> 01:48:03,970
details how it looks and like in

2104
01:48:03,520 --> 01:48:07,390
practice

2105
01:48:03,970 --> 01:48:09,700
here you have the ipv6 address as the

2106
01:48:07,390 --> 01:48:12,100
base name you basically replace that

2107
01:48:09,700 --> 01:48:14,800
with a new field called BPI and say

2108
01:48:12,100 --> 01:48:18,190
their number one number one referring to

2109
01:48:14,800 --> 01:48:20,620
ipv6 address as a pointer and then send

2110
01:48:18,190 --> 01:48:23,650
it forward and then when you would

2111
01:48:20,620 --> 01:48:26,230
actually send it then for further on you

2112
01:48:23,650 --> 01:48:27,670
wouldn't be using the one format the

2113
01:48:26,230 --> 01:48:31,120
upper format which is send again

2114
01:48:27,670 --> 01:48:32,770
standard send ml then of course a

2115
01:48:31,120 --> 01:48:35,260
question is like what kind of values can

2116
01:48:32,770 --> 01:48:37,600
you use for BPI here's our current

2117
01:48:35,260 --> 01:48:38,890
proposal so it would could be used I P

2118
01:48:37,600 --> 01:48:42,550
address as in the previous example

2119
01:48:38,890 --> 01:48:44,320
potentially with the port also what

2120
01:48:42,550 --> 01:48:46,930
seems to be rather common thing is used

2121
01:48:44,320 --> 01:48:49,210
a request base URI so depending where

2122
01:48:46,930 --> 01:48:51,700
you did the request on that could be

2123
01:48:49,210 --> 01:48:55,750
used to form the global unique base name

2124
01:48:51,700 --> 01:48:58,210
also if you have security association on

2125
01:48:55,750 --> 01:49:00,400
your connection are you using TLS or

2126
01:48:58,210 --> 01:49:01,810
something similar you could use for

2127
01:49:00,400 --> 01:49:03,940
example your public key or the

2128
01:49:01,810 --> 01:49:06,970
fingerprint of the public key there's a

2129
01:49:03,940 --> 01:49:08,799
nicely defined format in RFC 69 20 or

2130
01:49:06,970 --> 01:49:11,440
how you could do that or you could use

2131
01:49:08,800 --> 01:49:13,270
for example tsk-tsk identity or if

2132
01:49:11,440 --> 01:49:15,730
you're using a core resource director

2133
01:49:13,270 --> 01:49:16,120
your endpoint identifier or often

2134
01:49:15,730 --> 01:49:18,339
already

2135
01:49:16,120 --> 01:49:20,410
usable for this purpose so you just say

2136
01:49:18,340 --> 01:49:27,430
okay you use my endpoint I need fire as

2137
01:49:20,410 --> 01:49:30,280
the base name prefix and you're done the

2138
01:49:27,430 --> 01:49:31,870
current status of this work Hannes ja

2139
01:49:30,280 --> 01:49:34,480
panic actually presented at the last

2140
01:49:31,870 --> 01:49:37,030
IETF another draft was addressing the

2141
01:49:34,480 --> 01:49:40,389
same problem this problem was originally

2142
01:49:37,030 --> 01:49:42,009
discovered in the OMA or we may work or

2143
01:49:40,390 --> 01:49:44,440
related to light with NPM because they

2144
01:49:42,010 --> 01:49:48,010
were actually using using something like

2145
01:49:44,440 --> 01:49:50,320
this but not being explicit about it so

2146
01:49:48,010 --> 01:49:53,170
basically in in love the case you only

2147
01:49:50,320 --> 01:49:55,690
sent the path component and not actually

2148
01:49:53,170 --> 01:50:00,180
the prefix component as we generally

2149
01:49:55,690 --> 01:50:02,410
having an insane ml so what this method

2150
01:50:00,180 --> 01:50:04,540
would be doing is making that

2151
01:50:02,410 --> 01:50:06,820
information explicit so then you can use

2152
01:50:04,540 --> 01:50:08,620
things from the omiai within the metro

2153
01:50:06,820 --> 01:50:11,110
system and things from outside

2154
01:50:08,620 --> 01:50:13,210
in an intrical fashion the key

2155
01:50:11,110 --> 01:50:16,269
difference compared to the harnesses

2156
01:50:13,210 --> 01:50:18,580
proposal was that there was a new field

2157
01:50:16,270 --> 01:50:20,590
instead of base name of these relaxed

2158
01:50:18,580 --> 01:50:23,370
rules are based on or local based name

2159
01:50:20,590 --> 01:50:25,780
that relaxes the rules for uniqueness

2160
01:50:23,370 --> 01:50:29,050
different approaches are for the same

2161
01:50:25,780 --> 01:50:31,179
case however as Hannes pointed out on

2162
01:50:29,050 --> 01:50:33,370
the mailing list I'll seems that at

2163
01:50:31,180 --> 01:50:35,710
least within the OMA sphere the stuff

2164
01:50:33,370 --> 01:50:37,599
seems to be interoperable even without

2165
01:50:35,710 --> 01:50:40,240
this addition so we should have a closer

2166
01:50:37,600 --> 01:50:42,340
look like in what kind of cases would we

2167
01:50:40,240 --> 01:50:44,769
actually need this I think it's gonna be

2168
01:50:42,340 --> 01:50:46,870
mostly valuable when you do go outside

2169
01:50:44,770 --> 01:50:48,610
of a let's say for example like within

2170
01:50:46,870 --> 01:50:50,500
the ecosystem and you actually need to

2171
01:50:48,610 --> 01:50:52,660
exchange information in sending a format

2172
01:50:50,500 --> 01:50:55,390
outside of ecosystems but you still want

2173
01:50:52,660 --> 01:50:57,400
to have this good compression inside

2174
01:50:55,390 --> 01:50:59,320
techo system but we'll be looking into

2175
01:50:57,400 --> 01:51:12,070
more details on that and and reporting

2176
01:50:59,320 --> 01:51:15,820
in the upcoming IETF meetings yeah so

2177
01:51:12,070 --> 01:51:17,440
what do we do with this trash so I said

2178
01:51:15,820 --> 01:51:18,370
I will have a closer look and I think

2179
01:51:17,440 --> 01:51:21,129
we'll know at the next idea

2180
01:51:18,370 --> 01:51:22,630
unfortunately a bit along your vacation

2181
01:51:21,130 --> 01:51:25,630
before this I didn't have time to do

2182
01:51:22,630 --> 01:51:28,150
that analysis so we'll have a closer

2183
01:51:25,630 --> 01:51:30,180
look and see what direction makes sense

2184
01:51:28,150 --> 01:51:33,309
I mean should we potentially combine the

2185
01:51:30,180 --> 01:51:37,300
mechanics Newton is proposed or is this

2186
01:51:33,310 --> 01:51:39,850
one way or better or the other I think

2187
01:51:37,300 --> 01:51:45,190
like from author's point of view closer

2188
01:51:39,850 --> 01:51:47,620
look is needed so consider this as more

2189
01:51:45,190 --> 01:51:53,620
as a heads up and intro to the problem

2190
01:51:47,620 --> 01:51:56,460
and and potential solutions okay I think

2191
01:51:53,620 --> 01:52:03,330
in that case we are done for today

2192
01:51:56,460 --> 01:52:06,070
you all on Friday yes

2193
01:52:03,330 --> 01:52:10,080
well this is my 29 inch Cobra group

2194
01:52:06,070 --> 01:52:10,080
meeting and I think we did once before

2195
01:52:23,670 --> 01:52:32,199
so just for information this room will

2196
01:52:26,920 --> 01:52:39,729
be used for a lunch meeting where's the

2197
01:52:32,199 --> 01:52:48,629
receipts there's still one blue sheet

2198
01:52:39,729 --> 01:52:54,969
floating so this room will be used for a

2199
01:52:48,630 --> 01:52:57,749
lunch meeting so please do leave it edge

2200
01:52:54,969 --> 01:52:57,749
12

2201
01:54:10,190 --> 01:54:13,909
that's true yes

