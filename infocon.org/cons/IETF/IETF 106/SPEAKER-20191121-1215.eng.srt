1
00:00:06,029 --> 00:00:15,309
are you ready more or less are you ready

2
00:00:12,429 --> 00:00:18,550
to start or we wait we'll start exactly

3
00:00:15,309 --> 00:00:21,250
on time for minutes or do you want to

4
00:00:18,550 --> 00:00:25,390
start or you know I think most of the

5
00:00:21,250 --> 00:00:28,420
people are here so we will get it going

6
00:00:25,390 --> 00:00:31,510
is that okay yeah so thanks all for

7
00:00:28,420 --> 00:00:33,489
joining during lunch so my name is Wayne

8
00:00:31,510 --> 00:00:36,399
Hendrix and I will be co-presenting with

9
00:00:33,489 --> 00:00:38,530
Bryan and Risa we will do also a piece

10
00:00:36,399 --> 00:00:40,960
of the talk so the goal of this

11
00:00:38,530 --> 00:00:43,629
presentation is mainly to talk about 5g

12
00:00:40,960 --> 00:00:45,639
and the impact on the networking side so

13
00:00:43,629 --> 00:00:47,638
5g is much bigger than what we are going

14
00:00:45,639 --> 00:00:51,059
to talk about in general but we try to

15
00:00:47,639 --> 00:00:54,249
focus on this presentation on mainly the

16
00:00:51,059 --> 00:00:56,739
impact on the networking side of what 5g

17
00:00:54,249 --> 00:01:01,170
is about and that's going to be the main

18
00:00:56,739 --> 00:01:03,968
focus of the talk okay just to introduce

19
00:01:01,170 --> 00:01:06,159
5g because 5g means many things to many

20
00:01:03,969 --> 00:01:07,960
people and I typically the way I try to

21
00:01:06,159 --> 00:01:10,750
explain it if you try to summarize it

22
00:01:07,960 --> 00:01:12,729
you see that it can be summarized in

23
00:01:10,750 --> 00:01:15,040
like three big buckets right one is

24
00:01:12,730 --> 00:01:17,770
actually getting more bandwidth to end

25
00:01:15,040 --> 00:01:19,990
subscribers such that we improve the

26
00:01:17,770 --> 00:01:22,720
band to it get more speeds make sure

27
00:01:19,990 --> 00:01:25,570
that video is consumed much faster onto

28
00:01:22,720 --> 00:01:28,020
the network the second thing is kind of

29
00:01:25,570 --> 00:01:30,130
more connectivity so more IOT more

30
00:01:28,020 --> 00:01:32,350
devices which are getting connected to

31
00:01:30,130 --> 00:01:35,199
the network and the third elephant in

32
00:01:32,350 --> 00:01:38,830
the room is kind of industry 24.0 as we

33
00:01:35,200 --> 00:01:42,010
call it which is introducing new concept

34
00:01:38,830 --> 00:01:44,259
like very low latency ultra reliability

35
00:01:42,010 --> 00:01:46,570
and so on and so forth and that has a

36
00:01:44,260 --> 00:01:48,400
rather dramatic impact on how networks

37
00:01:46,570 --> 00:01:53,649
will be built going forward

38
00:01:48,400 --> 00:01:55,659
okay now if you then look if these are

39
00:01:53,650 --> 00:01:58,080
like applications or like use cases

40
00:01:55,659 --> 00:02:00,490
which are all going to become relevant

41
00:01:58,080 --> 00:02:03,280
for a set of people

42
00:02:00,490 --> 00:02:05,560
the second big aspect what we see is

43
00:02:03,280 --> 00:02:09,310
that the way we are implementing some of

44
00:02:05,560 --> 00:02:12,069
those applications or devices which are

45
00:02:09,310 --> 00:02:14,170
actually consuming or actually

46
00:02:12,069 --> 00:02:17,769
delivering some of these services there

47
00:02:14,170 --> 00:02:19,959
is also a big shift right so we used to

48
00:02:17,770 --> 00:02:21,820
things via physical devices they were

49
00:02:19,960 --> 00:02:24,820
all set together it's an appliance

50
00:02:21,820 --> 00:02:26,829
all-in-one if you look going forward on

51
00:02:24,820 --> 00:02:28,810
what's happening with NFV and

52
00:02:26,830 --> 00:02:30,400
virtualization you see that we started

53
00:02:28,810 --> 00:02:32,290
introducing quite a lot of virtual

54
00:02:30,400 --> 00:02:34,000
machines but in the mean time we talked

55
00:02:32,290 --> 00:02:37,329
about micro services we talked about

56
00:02:34,000 --> 00:02:38,860
containers but we already I some people

57
00:02:37,330 --> 00:02:40,060
are talking about function so it's no

58
00:02:38,860 --> 00:02:42,640
longer something which you can

59
00:02:40,060 --> 00:02:45,670
physically touch right so as a result

60
00:02:42,640 --> 00:02:47,320
you see that in order to define and

61
00:02:45,670 --> 00:02:49,660
build the network around these things

62
00:02:47,320 --> 00:02:52,450
you actually have a very heterogeneous

63
00:02:49,660 --> 00:02:54,430
environment to deal with right so that's

64
00:02:52,450 --> 00:02:57,459
the second big thing to take into

65
00:02:54,430 --> 00:02:59,770
account and then of course people want

66
00:02:57,460 --> 00:03:01,210
to introduce things faster wants to make

67
00:02:59,770 --> 00:03:03,640
sure that things happen much more

68
00:03:01,210 --> 00:03:05,230
quickly that it's much more agile and

69
00:03:03,640 --> 00:03:08,170
that's we come into the realm of

70
00:03:05,230 --> 00:03:10,810
programmability automation intent-based

71
00:03:08,170 --> 00:03:12,609
networking and so on and so forth so we

72
00:03:10,810 --> 00:03:14,590
want to make sure that I some of these

73
00:03:12,610 --> 00:03:16,720
services get more I delivered more

74
00:03:14,590 --> 00:03:18,850
quickly like basically the big guys or

75
00:03:16,720 --> 00:03:20,470
the the big web guys are doing is the

76
00:03:18,850 --> 00:03:22,810
introduced services much more quickly

77
00:03:20,470 --> 00:03:26,650
and much more faster into the network

78
00:03:22,810 --> 00:03:29,470
and make sure that I things get consumed

79
00:03:26,650 --> 00:03:31,420
way faster than we used to see a going

80
00:03:29,470 --> 00:03:32,200
forward right if you put this all

81
00:03:31,420 --> 00:03:35,230
together

82
00:03:32,200 --> 00:03:37,119
and trying to build let's say a

83
00:03:35,230 --> 00:03:40,000
framework or an architecture around this

84
00:03:37,120 --> 00:03:41,830
it's kind of a big thing right because

85
00:03:40,000 --> 00:03:44,470
you see that there is lots of changes

86
00:03:41,830 --> 00:03:46,510
lots of things are happening and what we

87
00:03:44,470 --> 00:03:48,850
try to do with it okay I say okay if you

88
00:03:46,510 --> 00:03:51,070
look at all of this environment how do

89
00:03:48,850 --> 00:03:53,500
we deal with all of that right and I

90
00:03:51,070 --> 00:03:56,440
think this is where I template I think

91
00:03:53,500 --> 00:03:58,600
they built important concept from the

92
00:03:56,440 --> 00:04:00,040
early days and and if you look at it we

93
00:03:58,600 --> 00:04:02,769
actually in order to build like a

94
00:04:00,040 --> 00:04:05,079
network infrastructure to support all of

95
00:04:02,770 --> 00:04:06,940
this we believe that is two key

96
00:04:05,080 --> 00:04:11,950
principles which are important to keep

97
00:04:06,940 --> 00:04:16,209
in the back of our minds switch off the

98
00:04:11,950 --> 00:04:20,070
Wi-Fi is that in order to provision

99
00:04:16,209 --> 00:04:20,070
these things in that heterogeneous space

100
00:04:21,480 --> 00:04:25,960
it's important to basically provision it

101
00:04:24,250 --> 00:04:27,700
at the edge and leave the core or the

102
00:04:25,960 --> 00:04:29,799
elements in the middle untouched right

103
00:04:27,700 --> 00:04:31,030
so we always say okay introduce the

104
00:04:29,800 --> 00:04:33,370
service at the edge

105
00:04:31,030 --> 00:04:35,440
and try to build make sure that the the

106
00:04:33,370 --> 00:04:37,150
the elements in the middle are not

107
00:04:35,440 --> 00:04:39,460
touched when you provision new services

108
00:04:37,150 --> 00:04:42,609
right and as a result you actually get a

109
00:04:39,460 --> 00:04:44,979
more easy way of introducing things the

110
00:04:42,610 --> 00:04:46,980
second important thing is actually its

111
00:04:44,980 --> 00:04:50,350
decoupling service from Transport

112
00:04:46,980 --> 00:04:52,840
because that allows us to actually focus

113
00:04:50,350 --> 00:04:55,270
on a certain set of use cases in order

114
00:04:52,840 --> 00:04:58,000
to not boil the ocean and and try to

115
00:04:55,270 --> 00:05:00,659
make sure that we actually do things in

116
00:04:58,000 --> 00:05:01,990
a very easy and and and more agile way

117
00:05:00,660 --> 00:05:05,290
now

118
00:05:01,990 --> 00:05:06,970
if we and and in this presentation when

119
00:05:05,290 --> 00:05:10,450
I talk about on edge I talked about

120
00:05:06,970 --> 00:05:12,460
mainly the data playing I also to a

121
00:05:10,450 --> 00:05:15,130
certain extent or a control plane of the

122
00:05:12,460 --> 00:05:18,159
a router or a device a forwarding device

123
00:05:15,130 --> 00:05:20,380
right so sometimes in 5g we talk about

124
00:05:18,160 --> 00:05:21,550
far edge which is a cloud infrastructure

125
00:05:20,380 --> 00:05:23,560
or an edge which is a cloud

126
00:05:21,550 --> 00:05:26,380
infrastructure here I'm talking about an

127
00:05:23,560 --> 00:05:29,860
edge which is more mainly the data plane

128
00:05:26,380 --> 00:05:31,840
or the control plane aspect of the thing

129
00:05:29,860 --> 00:05:34,120
which is delivering the network right

130
00:05:31,840 --> 00:05:35,859
and as I said from the beginning is that

131
00:05:34,120 --> 00:05:37,990
you see that those workloads are

132
00:05:35,860 --> 00:05:39,600
evolving so we see containerization and

133
00:05:37,990 --> 00:05:43,060
stuff like that so you see that the edge

134
00:05:39,600 --> 00:05:46,000
implementation in a 5g or in a network

135
00:05:43,060 --> 00:05:48,340
going forward it's know something which

136
00:05:46,000 --> 00:05:50,730
you can touch necessarily right so we

137
00:05:48,340 --> 00:05:53,979
have I here are some examples like

138
00:05:50,730 --> 00:05:57,400
physical devices we used to have edge

139
00:05:53,980 --> 00:05:59,380
routers right which are routers built-in

140
00:05:57,400 --> 00:06:00,580
chesties or in pizza boxes you see going

141
00:05:59,380 --> 00:06:03,610
forward that some of these

142
00:06:00,580 --> 00:06:05,560
implementations would happen on the data

143
00:06:03,610 --> 00:06:07,330
center switch which is acting as a

144
00:06:05,560 --> 00:06:09,070
top-of-rack type of thing or you

145
00:06:07,330 --> 00:06:12,760
actually do it on a peering type of

146
00:06:09,070 --> 00:06:15,280
device but an edge can also be like a

147
00:06:12,760 --> 00:06:17,380
virtual thing or in a micro services

148
00:06:15,280 --> 00:06:20,049
architecture it can be like a user brain

149
00:06:17,380 --> 00:06:22,780
function sitting on a server it can be a

150
00:06:20,050 --> 00:06:25,690
virtual switch implemented on a server

151
00:06:22,780 --> 00:06:28,119
or it can actually also be like virtual

152
00:06:25,690 --> 00:06:30,670
switch implemented on a nikkie going

153
00:06:28,120 --> 00:06:33,520
forward so you see that the environment

154
00:06:30,670 --> 00:06:34,930
which we are having available to us in

155
00:06:33,520 --> 00:06:37,599
order to connect all of these things

156
00:06:34,930 --> 00:06:41,230
together is a big I there's there's

157
00:06:37,600 --> 00:06:44,350
quite a lot of variety right the second

158
00:06:41,230 --> 00:06:47,860
big question is and here is there is

159
00:06:44,350 --> 00:06:50,110
Automation is it's where is the X right

160
00:06:47,860 --> 00:06:53,440
we used to build the H in a fairly

161
00:06:50,110 --> 00:06:55,300
central matter but you see that with

162
00:06:53,440 --> 00:06:57,070
this ultra-low latency and this is of

163
00:06:55,300 --> 00:06:58,540
course a use case and given that we are

164
00:06:57,070 --> 00:07:00,820
a finished company we have to have a

165
00:06:58,540 --> 00:07:04,510
finished example you see that if you

166
00:07:00,820 --> 00:07:06,969
distribute the application closer to the

167
00:07:04,510 --> 00:07:08,289
user without distributing the edge you

168
00:07:06,970 --> 00:07:10,600
actually don't achieve anything you

169
00:07:08,290 --> 00:07:13,570
actually introduce bigger latency right

170
00:07:10,600 --> 00:07:15,730
so you see is that the edge itself will

171
00:07:13,570 --> 00:07:17,469
vary depending on the use case as well

172
00:07:15,730 --> 00:07:19,270
so it's no longer something which is

173
00:07:17,470 --> 00:07:21,400
fairly central in a typical deployment

174
00:07:19,270 --> 00:07:24,340
it is something which will be

175
00:07:21,400 --> 00:07:26,739
distributed much deeper into the network

176
00:07:24,340 --> 00:07:28,599
than we used to see right and in some

177
00:07:26,740 --> 00:07:31,210
cases it's even such that it will be

178
00:07:28,600 --> 00:07:34,270
distributed up until the enterprise or

179
00:07:31,210 --> 00:07:35,950
up until the the the site where the

180
00:07:34,270 --> 00:07:38,590
application sits or it can even be

181
00:07:35,950 --> 00:07:43,450
within the enterprise or within a very

182
00:07:38,590 --> 00:07:45,849
close to the to the end consumer now if

183
00:07:43,450 --> 00:07:47,979
you look at the typical network and this

184
00:07:45,850 --> 00:07:50,230
is what the talk is all about so

185
00:07:47,980 --> 00:07:52,270
typically we segment I networks but and

186
00:07:50,230 --> 00:07:54,490
and this is mainly a service provider or

187
00:07:52,270 --> 00:07:57,250
an access provider type of use case use

188
00:07:54,490 --> 00:08:00,310
you segment the network from I typically

189
00:07:57,250 --> 00:08:03,250
access aggregation core and then you

190
00:08:00,310 --> 00:08:05,020
have like I central data centers which

191
00:08:03,250 --> 00:08:06,850
can be let's say

192
00:08:05,020 --> 00:08:09,010
localized data center or private clouds

193
00:08:06,850 --> 00:08:10,510
but you can also see that some people

194
00:08:09,010 --> 00:08:12,340
move to public cloud type of

195
00:08:10,510 --> 00:08:15,730
infrastructure so it can actually be a

196
00:08:12,340 --> 00:08:17,830
very heterogeneous environment plus you

197
00:08:15,730 --> 00:08:20,260
see that going forward you see those

198
00:08:17,830 --> 00:08:22,510
edge clouds also appearing so if you

199
00:08:20,260 --> 00:08:25,240
look there you see that there is much

200
00:08:22,510 --> 00:08:27,400
more distributed clouds and those are

201
00:08:25,240 --> 00:08:29,260
not like a typical data center going for

202
00:08:27,400 --> 00:08:32,110
but they are actually like very small

203
00:08:29,260 --> 00:08:34,979
contained type of server environments

204
00:08:32,110 --> 00:08:37,270
which can be deployed either on Prem or

205
00:08:34,979 --> 00:08:40,390
somewhere deeper into the network than

206
00:08:37,270 --> 00:08:44,100
we used to see right now if you then

207
00:08:40,390 --> 00:08:46,900
make a connotation of where the edge is

208
00:08:44,100 --> 00:08:50,740
you actually see that it's all it's

209
00:08:46,900 --> 00:08:54,069
spread all over the place right and in

210
00:08:50,740 --> 00:08:57,050
order to build a network which is

211
00:08:54,070 --> 00:09:00,200
delivering let's say kpi's

212
00:08:57,050 --> 00:09:02,930
and delivering services and to end with

213
00:09:00,200 --> 00:09:05,300
ultra-low latency but also reliability

214
00:09:02,930 --> 00:09:06,949
where you have to do diverse parts into

215
00:09:05,300 --> 00:09:09,709
the network in order to deliver such a

216
00:09:06,950 --> 00:09:11,870
service or optimize for latency or

217
00:09:09,709 --> 00:09:14,779
optimize for bandwidth or optimize for

218
00:09:11,870 --> 00:09:17,120
whatever type of capability you see that

219
00:09:14,779 --> 00:09:21,439
this is actually a very difficult space

220
00:09:17,120 --> 00:09:24,140
to deal with right so as such if you

221
00:09:21,440 --> 00:09:27,709
look at this in nokia we call this an

222
00:09:24,140 --> 00:09:29,870
fix or so we rebuild a framework around

223
00:09:27,709 --> 00:09:32,420
this in order to build such an

224
00:09:29,870 --> 00:09:35,180
environment and build let's say that

225
00:09:32,420 --> 00:09:37,089
infrastructure in a way that is that is

226
00:09:35,180 --> 00:09:39,050
supporting such a heterogeneous

227
00:09:37,089 --> 00:09:42,019
environment right so when we call this

228
00:09:39,050 --> 00:09:44,689
NFI X which is standing for network

229
00:09:42,019 --> 00:09:47,230
function interconnection because we are

230
00:09:44,690 --> 00:09:50,570
dealing with interconnecting functions

231
00:09:47,230 --> 00:09:53,480
either distributed or central but also

232
00:09:50,570 --> 00:09:55,610
to connect them in a way that you can

233
00:09:53,480 --> 00:09:58,399
connect them to devices which are either

234
00:09:55,610 --> 00:10:00,680
physical elements but also virtual

235
00:09:58,399 --> 00:10:03,320
elements containers or functions right

236
00:10:00,680 --> 00:10:05,810
so it doesn't really matter what it is

237
00:10:03,320 --> 00:10:08,899
about it's basically we want to connect

238
00:10:05,810 --> 00:10:11,479
things seamlessly together but deliver

239
00:10:08,899 --> 00:10:14,209
kpi's and as elise right and if you look

240
00:10:11,480 --> 00:10:16,820
when I change the picture from this to

241
00:10:14,209 --> 00:10:18,800
this what we try to do is build these

242
00:10:16,820 --> 00:10:20,540
boundaries which you typically have that

243
00:10:18,800 --> 00:10:22,130
because if you if you see service

244
00:10:20,540 --> 00:10:24,349
providers building network so they

245
00:10:22,130 --> 00:10:26,060
typically have difficult themes for

246
00:10:24,350 --> 00:10:29,360
aggregation different themes for core

247
00:10:26,060 --> 00:10:31,430
and so on what we try to do here is

248
00:10:29,360 --> 00:10:33,680
build the seamless interconnection

249
00:10:31,430 --> 00:10:37,160
between all of these environments in

250
00:10:33,680 --> 00:10:38,989
order to give that seamless connectivity

251
00:10:37,160 --> 00:10:42,949
between all of these different workloads

252
00:10:38,990 --> 00:10:44,060
right because we will talk about slicing

253
00:10:42,949 --> 00:10:46,029
going forwards right

254
00:10:44,060 --> 00:10:49,279
if you segment all of these things

255
00:10:46,029 --> 00:10:51,380
independently together giving you a

256
00:10:49,279 --> 00:10:52,910
single API to actually connect all of

257
00:10:51,380 --> 00:10:54,890
these workloads together in a very

258
00:10:52,910 --> 00:11:00,050
distributed or very centralized way is

259
00:10:54,890 --> 00:11:02,480
becoming very difficult okay now how

260
00:11:00,050 --> 00:11:04,579
does it build and we are not going to go

261
00:11:02,480 --> 00:11:06,860
to a lot of detail given we only have 45

262
00:11:04,579 --> 00:11:10,069
minutes but actually this is built all

263
00:11:06,860 --> 00:11:13,250
around ITF based definition

264
00:11:10,070 --> 00:11:15,950
which are actually here right so first

265
00:11:13,250 --> 00:11:18,260
of all the way we we look at this as we

266
00:11:15,950 --> 00:11:20,930
use like multi-protocol BGP for a data

267
00:11:18,260 --> 00:11:23,780
plane so we have either a VPN or IP VPN

268
00:11:20,930 --> 00:11:27,020
so we can do both IP or layer 2 or layer

269
00:11:23,780 --> 00:11:29,390
3 services we can we would introduce

270
00:11:27,020 --> 00:11:31,760
segment routing for this and which

271
00:11:29,390 --> 00:11:33,740
flavor depends on the choice of the

272
00:11:31,760 --> 00:11:36,470
operator so this will work with either

273
00:11:33,740 --> 00:11:39,950
an MPLS flavor either supporting over

274
00:11:36,470 --> 00:11:42,740
native and pillars or with IP or with as

275
00:11:39,950 --> 00:11:45,470
our v6 right so and whatever flavor

276
00:11:42,740 --> 00:11:47,750
comes available to us is actually

277
00:11:45,470 --> 00:11:50,930
capable to be working in that framework

278
00:11:47,750 --> 00:11:54,470
we use p7 as a fee to actually make sure

279
00:11:50,930 --> 00:11:57,709
that we have capabilities to define as a

280
00:11:54,470 --> 00:12:00,530
lays and KPIs depending on the use cases

281
00:11:57,710 --> 00:12:02,690
which will be supported there is service

282
00:12:00,530 --> 00:12:04,970
chaining capabilities inside which are

283
00:12:02,690 --> 00:12:07,220
done via D as a C working group and then

284
00:12:04,970 --> 00:12:11,180
of course given that we want to have

285
00:12:07,220 --> 00:12:13,400
this programmable environment we use all

286
00:12:11,180 --> 00:12:14,989
around the yang data model and we use

287
00:12:13,400 --> 00:12:17,000
telemetry to get information from

288
00:12:14,990 --> 00:12:18,950
different devices in order to do like

289
00:12:17,000 --> 00:12:22,280
intent-based networking and go

290
00:12:18,950 --> 00:12:24,470
closed-loop automation so in a nutshell

291
00:12:22,280 --> 00:12:28,040
before I give it to Brian what we are

292
00:12:24,470 --> 00:12:32,590
trying to achieve with NF IX is building

293
00:12:28,040 --> 00:12:35,630
this fabric across those different

294
00:12:32,590 --> 00:12:38,000
boundaries like aggregation core or

295
00:12:35,630 --> 00:12:40,760
whatever workload we see and give you a

296
00:12:38,000 --> 00:12:43,370
single API and the goal of this is to

297
00:12:40,760 --> 00:12:45,920
give the same experience what you get

298
00:12:43,370 --> 00:12:50,540
today when you go on to like a Google or

299
00:12:45,920 --> 00:12:52,760
an AWS or a Microsoft or Alibaba where

300
00:12:50,540 --> 00:12:54,709
you basically have a set of api's you

301
00:12:52,760 --> 00:12:57,110
define your requirements for your

302
00:12:54,710 --> 00:12:59,660
applications and those gets instantiated

303
00:12:57,110 --> 00:13:02,720
into the network and give you a seamless

304
00:12:59,660 --> 00:13:04,430
experience using certain as a lace kpi's

305
00:13:02,720 --> 00:13:06,650
which are relevant for that particular

306
00:13:04,430 --> 00:13:09,319
service all right so this is kind of

307
00:13:06,650 --> 00:13:12,560
giving you a bit of a space how we see

308
00:13:09,320 --> 00:13:15,320
any Vikes and what it I what is a key

309
00:13:12,560 --> 00:13:18,109
enabler going forward to build this very

310
00:13:15,320 --> 00:13:20,230
heterogeneous environment in in the

311
00:13:18,110 --> 00:13:20,230
future

312
00:13:22,000 --> 00:13:27,890
all right thanks a lot wim I'm going to

313
00:13:25,519 --> 00:13:29,149
take a step back now and see what we're

314
00:13:27,890 --> 00:13:31,910
actually trying to all service providers

315
00:13:29,149 --> 00:13:34,779
are actually trying to achieve with 5g

316
00:13:31,910 --> 00:13:37,310
from a business driver perspective so

317
00:13:34,779 --> 00:13:38,959
one of the key things is that 5g is

318
00:13:37,310 --> 00:13:42,018
meant to enable a whole bunch of new

319
00:13:38,959 --> 00:13:43,910
revenue lines although we'd like to

320
00:13:42,019 --> 00:13:46,550
focus on more the technology piece here

321
00:13:43,910 --> 00:13:48,620
in ITF this is really the key focus so

322
00:13:46,550 --> 00:13:50,779
when you look towards how that could be

323
00:13:48,620 --> 00:13:52,760
done or where those business drivers are

324
00:13:50,779 --> 00:13:54,170
coming from you can look to some of

325
00:13:52,760 --> 00:13:56,899
these things on the slide here so for

326
00:13:54,170 --> 00:13:58,910
example there's a huge amount of promise

327
00:13:56,899 --> 00:14:01,370
in things such as smart cities

328
00:13:58,910 --> 00:14:03,490
eHealth consumer experience with

329
00:14:01,370 --> 00:14:06,740
augmented reality and virtual reality

330
00:14:03,490 --> 00:14:08,990
public safety applications connected

331
00:14:06,740 --> 00:14:11,120
vehicles and critical automation and

332
00:14:08,990 --> 00:14:13,130
service providers ultimately want to

333
00:14:11,120 --> 00:14:15,410
play a role in the space because

334
00:14:13,130 --> 00:14:18,470
ultimately all of these spaces are being

335
00:14:15,410 --> 00:14:21,290
increasingly digitized a huge

336
00:14:18,470 --> 00:14:23,510
proliferation of devices in each of

337
00:14:21,290 --> 00:14:25,130
these applications and so this is a

338
00:14:23,510 --> 00:14:28,850
great market for service providers to

339
00:14:25,130 --> 00:14:31,100
expand into from a pure technology

340
00:14:28,850 --> 00:14:33,769
perspective ultimately we're talking

341
00:14:31,100 --> 00:14:35,720
about all the different IOT devices here

342
00:14:33,769 --> 00:14:38,750
all the different connected devices

343
00:14:35,720 --> 00:14:40,850
this can be ultimately made a huge

344
00:14:38,750 --> 00:14:42,940
amount of additional endpoints but it's

345
00:14:40,850 --> 00:14:45,350
also driving additional bandwidth and

346
00:14:42,940 --> 00:14:48,589
some of these have very particular

347
00:14:45,350 --> 00:14:49,970
latency requirements so there's things

348
00:14:48,589 --> 00:14:52,220
happening in the radio network to

349
00:14:49,970 --> 00:14:54,290
actually support those particular SLA s

350
00:14:52,220 --> 00:14:55,880
and so if you use the spectrum in a

351
00:14:54,290 --> 00:14:57,680
certain way you use the radio access in

352
00:14:55,880 --> 00:15:00,410
a certain way you can achieve low

353
00:14:57,680 --> 00:15:02,329
latency or higher bandwidth but this

354
00:15:00,410 --> 00:15:04,550
same case set of capabilities ultimately

355
00:15:02,329 --> 00:15:06,680
needs to be extended across the

356
00:15:04,550 --> 00:15:08,870
transport network to deliver the

357
00:15:06,680 --> 00:15:11,800
end-to-end SLA s that each of these

358
00:15:08,870 --> 00:15:14,120
different business drivers requires so

359
00:15:11,800 --> 00:15:15,649
while we're in this particular

360
00:15:14,120 --> 00:15:17,870
presentation we're not focusing so much

361
00:15:15,649 --> 00:15:20,089
on the radio access I want to spend some

362
00:15:17,870 --> 00:15:22,850
time to think about how we can actually

363
00:15:20,089 --> 00:15:25,310
support those different and distinct SLA

364
00:15:22,850 --> 00:15:28,130
s across of a shared transport

365
00:15:25,310 --> 00:15:30,560
infrastructure just to give one

366
00:15:28,130 --> 00:15:32,300
particular example there so I mentioned

367
00:15:30,560 --> 00:15:33,979
a bunch of industry vertical

368
00:15:32,300 --> 00:15:35,349
applications this is just one to

369
00:15:33,980 --> 00:15:40,390
illustrate it

370
00:15:35,350 --> 00:15:44,120
port is a huge and increasingly complex

371
00:15:40,390 --> 00:15:46,040
environment if you look forward to 2025

372
00:15:44,120 --> 00:15:51,340
for example just looking at some of our

373
00:15:46,040 --> 00:15:54,050
kind of lead use cases here you see over

374
00:15:51,340 --> 00:15:56,480
18,000 oh sorry 18 million containers

375
00:15:54,050 --> 00:15:57,680
going through these ports or a given

376
00:15:56,480 --> 00:16:00,500
port per year

377
00:15:57,680 --> 00:16:03,349
you have several 10k trucks moving

378
00:16:00,500 --> 00:16:05,810
around the environment you have these

379
00:16:03,350 --> 00:16:09,310
environments spanning across tens of

380
00:16:05,810 --> 00:16:12,709
thousands of hectares so a very large

381
00:16:09,310 --> 00:16:14,089
geographical space and ultimately they

382
00:16:12,710 --> 00:16:16,460
want to bring an enormous amount of

383
00:16:14,090 --> 00:16:18,830
technology into these ports to increase

384
00:16:16,460 --> 00:16:20,810
the level of automation and to increase

385
00:16:18,830 --> 00:16:24,290
the order efficiency through these ports

386
00:16:20,810 --> 00:16:26,630
so what could this mean this is you know

387
00:16:24,290 --> 00:16:28,760
broadband connectivity for ship-to-shore

388
00:16:26,630 --> 00:16:29,780
you were actually at the port to the

389
00:16:28,760 --> 00:16:32,030
ship

390
00:16:29,780 --> 00:16:34,760
video surveillance all across the port

391
00:16:32,030 --> 00:16:36,199
itself asset tracking of every

392
00:16:34,760 --> 00:16:38,630
individual can train er

393
00:16:36,200 --> 00:16:41,060
a container so we can actually see its

394
00:16:38,630 --> 00:16:43,700
process and its journey off of the ship

395
00:16:41,060 --> 00:16:47,540
through the container you need to have

396
00:16:43,700 --> 00:16:51,170
low latency video feeds from key points

397
00:16:47,540 --> 00:16:52,849
of the site in the future they want to

398
00:16:51,170 --> 00:16:55,939
have things such as augmented reality

399
00:16:52,850 --> 00:16:58,220
and virtual reality based maintenance of

400
00:16:55,940 --> 00:16:59,990
the different aspects of the site so

401
00:16:58,220 --> 00:17:01,700
they can pull in guys remotely they

402
00:16:59,990 --> 00:17:03,590
don't necessarily have to pull drive

403
00:17:01,700 --> 00:17:06,950
people to every different aspect of a

404
00:17:03,590 --> 00:17:09,200
site we expect to have drones flying

405
00:17:06,950 --> 00:17:11,930
around the site to inspect different

406
00:17:09,200 --> 00:17:14,450
parts of the facility you have

407
00:17:11,930 --> 00:17:16,340
autonomous vehicles moving about all of

408
00:17:14,450 --> 00:17:18,890
these require connectivity and there's a

409
00:17:16,339 --> 00:17:20,899
very high value asset and then also

410
00:17:18,890 --> 00:17:23,480
there are people moving about the site

411
00:17:20,900 --> 00:17:25,370
so we need to know their exact location

412
00:17:23,480 --> 00:17:27,710
and we need to be able to feed all the

413
00:17:25,369 --> 00:17:31,330
necessary information to them so this is

414
00:17:27,710 --> 00:17:33,710
just one particular example you see

415
00:17:31,330 --> 00:17:35,659
there are a couple of ways that this

416
00:17:33,710 --> 00:17:38,900
could be deployed it could be a private

417
00:17:35,660 --> 00:17:40,550
5g environment but the service providers

418
00:17:38,900 --> 00:17:42,710
also look towards this as being

419
00:17:40,550 --> 00:17:44,690
potentially something that could be

420
00:17:42,710 --> 00:17:46,280
offered as a network slice or multiple

421
00:17:44,690 --> 00:17:49,110
network slices off of their

422
00:17:46,280 --> 00:17:51,330
infrastructure as well so

423
00:17:49,110 --> 00:17:53,158
just just one illustration here to show

424
00:17:51,330 --> 00:17:56,129
the the kind of breadth of connectivity

425
00:17:53,159 --> 00:18:00,630
required to support such an application

426
00:17:56,130 --> 00:18:02,700
or such a use case so when we look

427
00:18:00,630 --> 00:18:06,299
towards how we can actually deliver

428
00:18:02,700 --> 00:18:09,360
assure these SLA s across a transport

429
00:18:06,299 --> 00:18:11,158
network we look towards this kind of

430
00:18:09,360 --> 00:18:14,129
closed-loop automation model inside

431
00:18:11,159 --> 00:18:17,580
Nokia we refer to this as insight driven

432
00:18:14,130 --> 00:18:20,039
automation ultimately what is this this

433
00:18:17,580 --> 00:18:22,620
is the ability for for you actually to

434
00:18:20,039 --> 00:18:24,990
automate the instantiation of services

435
00:18:22,620 --> 00:18:27,268
in your network so whim spoke about this

436
00:18:24,990 --> 00:18:30,000
kind of edge to edge provisioning and

437
00:18:27,269 --> 00:18:32,940
then the ability to have kind of network

438
00:18:30,000 --> 00:18:36,690
or application based optimization we

439
00:18:32,940 --> 00:18:38,220
want to have a smart IP fabric this is

440
00:18:36,690 --> 00:18:40,260
really based upon having you know

441
00:18:38,220 --> 00:18:42,389
segment routing based capabilities and

442
00:18:40,260 --> 00:18:45,029
model driven telemetry to be able to

443
00:18:42,389 --> 00:18:48,000
program an extract state from the

444
00:18:45,029 --> 00:18:51,029
program configuration and extract state

445
00:18:48,000 --> 00:18:53,250
from this environment and then on top of

446
00:18:51,029 --> 00:18:55,110
that data that were harvesting from the

447
00:18:53,250 --> 00:18:58,260
network we want to be able to run data

448
00:18:55,110 --> 00:19:00,090
analytics and we see this closed-loop

449
00:18:58,260 --> 00:19:02,879
automation as being really critical

450
00:19:00,090 --> 00:19:04,529
because it's not just about provisioning

451
00:19:02,880 --> 00:19:07,080
a service in such a way that it

452
00:19:04,529 --> 00:19:10,049
satisfies an SLA in one moment in time

453
00:19:07,080 --> 00:19:12,090
it's really about ensuring that SLA is

454
00:19:10,049 --> 00:19:14,399
met throughout the entire lifecycle of

455
00:19:12,090 --> 00:19:16,949
the service or entire lifecycle of the

456
00:19:14,399 --> 00:19:19,139
application so this is a continual

457
00:19:16,950 --> 00:19:21,299
process it's actually running so we can

458
00:19:19,139 --> 00:19:23,459
actually continue to reoptimize some

459
00:19:21,299 --> 00:19:26,850
react based on the latest state of the

460
00:19:23,460 --> 00:19:29,580
network so just a couple of examples of

461
00:19:26,850 --> 00:19:32,129
this so wim spoke before about the edge

462
00:19:29,580 --> 00:19:33,830
to edge connectivity this is one

463
00:19:32,130 --> 00:19:36,330
particular example here we show

464
00:19:33,830 --> 00:19:38,760
connectivity being created between two

465
00:19:36,330 --> 00:19:41,580
data center environments for 4-5 GS so

466
00:19:38,760 --> 00:19:45,120
this is a connectivity between virtual

467
00:19:41,580 --> 00:19:47,610
RAM and virtual core we can build this

468
00:19:45,120 --> 00:19:49,229
up because you know we we can actually

469
00:19:47,610 --> 00:19:52,229
harvest and extract topology information

470
00:19:49,230 --> 00:19:55,139
from the network using things like BGP

471
00:19:52,230 --> 00:19:58,260
LS we know about end points within a BGP

472
00:19:55,139 --> 00:20:00,959
based data center using things like BGP

473
00:19:58,260 --> 00:20:03,400
lu and from a controller perspective we

474
00:20:00,960 --> 00:20:05,470
can actually pull together

475
00:20:03,400 --> 00:20:09,360
at apology view across each of these

476
00:20:05,470 --> 00:20:12,070
distinct and disparate domains and

477
00:20:09,360 --> 00:20:14,289
between those two end points in this

478
00:20:12,070 --> 00:20:16,299
example actually create a traffic

479
00:20:14,289 --> 00:20:19,240
engineered segment erotic tunnel to

480
00:20:16,299 --> 00:20:22,450
enable that productivity so again just

481
00:20:19,240 --> 00:20:25,419
that edge to edge provisioning and kind

482
00:20:22,450 --> 00:20:28,659
of tunneling within so additionally if

483
00:20:25,419 --> 00:20:31,870
there is a if there's a topology change

484
00:20:28,659 --> 00:20:34,570
there we can react to that using the

485
00:20:31,870 --> 00:20:36,668
controller we are doing this in such a

486
00:20:34,570 --> 00:20:38,740
way it's actually going to meet the the

487
00:20:36,669 --> 00:20:40,559
different SLA constraints of the service

488
00:20:38,740 --> 00:20:42,880
right so if you want to have diversity

489
00:20:40,559 --> 00:20:45,730
path diversity between these two

490
00:20:42,880 --> 00:20:47,770
endpoints and that's possible or if we

491
00:20:45,730 --> 00:20:49,059
move towards the next example you want

492
00:20:47,770 --> 00:20:51,580
to move to something a little bit more

493
00:20:49,059 --> 00:20:53,139
complex in this case the SLA

494
00:20:51,580 --> 00:20:55,960
characteristic that we optimize around

495
00:20:53,140 --> 00:20:59,470
will be latency so in this particular

496
00:20:55,960 --> 00:21:01,990
case for example we stay on the red path

497
00:20:59,470 --> 00:21:04,330
initially but if there was something

498
00:21:01,990 --> 00:21:06,010
like an underlying change in the optical

499
00:21:04,330 --> 00:21:09,039
topology maybe your optical transport

500
00:21:06,010 --> 00:21:10,840
network had a reroute then we observed

501
00:21:09,039 --> 00:21:14,260
that the latency changes because we

502
00:21:10,840 --> 00:21:15,730
harvest that information and enrich in

503
00:21:14,260 --> 00:21:17,169
response to that we're going to re

504
00:21:15,730 --> 00:21:19,780
optimize the path from a controller

505
00:21:17,169 --> 00:21:22,450
perspective so this is the type of like

506
00:21:19,780 --> 00:21:24,908
closed loop automation I'm referring to

507
00:21:22,450 --> 00:21:27,159
so such that we can actually continue to

508
00:21:24,909 --> 00:21:28,630
support these SLA s for these different

509
00:21:27,159 --> 00:21:33,429
services throughout their entire

510
00:21:28,630 --> 00:21:36,640
lifecycle and at the outcome of this we

511
00:21:33,429 --> 00:21:38,860
have this we have this in fix fabric

512
00:21:36,640 --> 00:21:42,299
that wim described we have a controller

513
00:21:38,860 --> 00:21:46,360
that's actually enabling and securing

514
00:21:42,299 --> 00:21:48,970
SLA bound services on top of it which

515
00:21:46,360 --> 00:21:51,158
gives us an ability to start to satisfy

516
00:21:48,970 --> 00:21:53,110
these networks licensing requirements

517
00:21:51,159 --> 00:21:54,820
for each of those different applications

518
00:21:53,110 --> 00:21:57,399
and kind of business drivers that I

519
00:21:54,820 --> 00:21:59,110
mentioned at the start and now I'm going

520
00:21:57,400 --> 00:22:00,820
to hand over to Reza who's going to talk

521
00:21:59,110 --> 00:22:05,080
a little bit more from an API

522
00:22:00,820 --> 00:22:09,129
perspective in network slicing hello

523
00:22:05,080 --> 00:22:12,030
everyone it's a good point to go to the

524
00:22:09,130 --> 00:22:14,919
networking I think so far we discussed

525
00:22:12,030 --> 00:22:17,639
how we can create a network which is

526
00:22:14,919 --> 00:22:20,350
consumable without by

527
00:22:17,640 --> 00:22:22,870
Brian mentioned what is the

528
00:22:20,350 --> 00:22:25,750
characteristic of that fabric what are

529
00:22:22,870 --> 00:22:30,250
the use cases and for the last portion

530
00:22:25,750 --> 00:22:33,070
I'm going to tie this together with how

531
00:22:30,250 --> 00:22:36,640
this relates to network slicing how it

532
00:22:33,070 --> 00:22:40,659
relates to us or ATF and how basically

533
00:22:36,640 --> 00:22:44,350
that we can use this logic to create

534
00:22:40,660 --> 00:22:47,590
Network a slicing going forward I start

535
00:22:44,350 --> 00:22:50,080
with an example to make sure that at

536
00:22:47,590 --> 00:22:55,720
least we are on the same page let's say

537
00:22:50,080 --> 00:23:00,149
I have an operator which has transport

538
00:22:55,720 --> 00:23:02,200
it has on the left side is group of

539
00:23:00,150 --> 00:23:06,070
tenants or customers

540
00:23:02,200 --> 00:23:08,680
it has Public Safety Fiat and BMW these

541
00:23:06,070 --> 00:23:10,780
are the customers and on the right hand

542
00:23:08,680 --> 00:23:13,810
side there are a group of application

543
00:23:10,780 --> 00:23:15,940
servers when we talk about end-to-end

544
00:23:13,810 --> 00:23:19,360
network its loss basically we are

545
00:23:15,940 --> 00:23:22,120
referring to the logically isolated

546
00:23:19,360 --> 00:23:26,820
independent Network from left to right

547
00:23:22,120 --> 00:23:30,370
in this example for a take their last

548
00:23:26,820 --> 00:23:33,510
the public safety video surveillance

549
00:23:30,370 --> 00:23:36,939
CCTV we are creating an independent

550
00:23:33,510 --> 00:23:39,550
network from left to the right each of

551
00:23:36,940 --> 00:23:42,310
this network is slices there are various

552
00:23:39,550 --> 00:23:45,280
colors you can think of color as the SLA

553
00:23:42,310 --> 00:23:47,409
of that network a slice for example for

554
00:23:45,280 --> 00:23:50,950
the video surveillance most likely that

555
00:23:47,410 --> 00:23:54,910
the SLA will be the bandwidth 10 Meg or

556
00:23:50,950 --> 00:23:58,090
better for the network a slice green

557
00:23:54,910 --> 00:24:00,490
which is infotainment most likely again

558
00:23:58,090 --> 00:24:04,149
for the customer BMW for the service

559
00:24:00,490 --> 00:24:07,390
infotainment the SLA is 10 Meg for the

560
00:24:04,150 --> 00:24:09,850
blue autonomous driving the SLA most

561
00:24:07,390 --> 00:24:12,340
likely is the latency 5 millisecond or

562
00:24:09,850 --> 00:24:14,770
better so the idea here is we are

563
00:24:12,340 --> 00:24:18,129
creating a group of logically

564
00:24:14,770 --> 00:24:19,870
independent networks from left to right

565
00:24:18,130 --> 00:24:22,270
and this is very important when we talk

566
00:24:19,870 --> 00:24:24,699
about the context and when we are using

567
00:24:22,270 --> 00:24:27,940
in this case for example in the left

568
00:24:24,700 --> 00:24:30,780
side could be your handset could be your

569
00:24:27,940 --> 00:24:32,760
i/o are your tea devices could

570
00:24:30,780 --> 00:24:34,980
your infotainment in the car could be

571
00:24:32,760 --> 00:24:37,680
your gaming console and on the right

572
00:24:34,980 --> 00:24:41,670
side is the application that basically

573
00:24:37,680 --> 00:24:43,470
serves to create each of these and to a

574
00:24:41,670 --> 00:24:46,530
network a slice again I go back to the

575
00:24:43,470 --> 00:24:48,870
last one which the CCTV for the customer

576
00:24:46,530 --> 00:24:50,790
Public Safety let's say I want to create

577
00:24:48,870 --> 00:24:53,580
as an operator I want to create this

578
00:24:50,790 --> 00:24:55,409
into a network a slice what is needed to

579
00:24:53,580 --> 00:24:59,669
be done in the network from very high

580
00:24:55,410 --> 00:25:01,560
level we have to create ran a slice the

581
00:24:59,670 --> 00:25:04,140
meaning of the rangas Ronnie's life

582
00:25:01,560 --> 00:25:07,470
means simply I'm going to create a

583
00:25:04,140 --> 00:25:11,220
context or a personality in my ran

584
00:25:07,470 --> 00:25:14,550
equipment to understand blue green red

585
00:25:11,220 --> 00:25:17,730
Network a slice if I go to my ran I will

586
00:25:14,550 --> 00:25:20,730
see the resources in a practical way it

587
00:25:17,730 --> 00:25:25,350
means a allocation of the radio

588
00:25:20,730 --> 00:25:27,870
interface a scheduling policy profiles

589
00:25:25,350 --> 00:25:31,679
these are basically allocated for each

590
00:25:27,870 --> 00:25:35,520
of these colors by the same token if I

591
00:25:31,680 --> 00:25:38,370
go to my 5g core I'm going to create a

592
00:25:35,520 --> 00:25:42,930
personality or context for each of these

593
00:25:38,370 --> 00:25:46,770
n 2n networking slices now I created ran

594
00:25:42,930 --> 00:25:49,170
I created core now I have to do the

595
00:25:46,770 --> 00:25:51,210
connectivity between them and here the

596
00:25:49,170 --> 00:25:55,260
transport a slice come to the picture

597
00:25:51,210 --> 00:25:58,950
basically transfer a slice is a group of

598
00:25:55,260 --> 00:26:01,530
connectivity with a specific SLA slash

599
00:25:58,950 --> 00:26:03,570
SLO and this is very important to

600
00:26:01,530 --> 00:26:06,120
understand the difference between they

601
00:26:03,570 --> 00:26:11,129
determine ology sometimes this

602
00:26:06,120 --> 00:26:14,580
terminology the is important to be very

603
00:26:11,130 --> 00:26:16,440
clear each of this domain has one

604
00:26:14,580 --> 00:26:18,270
controller but I've run controller I

605
00:26:16,440 --> 00:26:20,790
have transfer controller core controller

606
00:26:18,270 --> 00:26:22,860
and at the very top there is an end to

607
00:26:20,790 --> 00:26:25,409
an Orchestrator as the name suggests

608
00:26:22,860 --> 00:26:28,350
Orchestrator is basically orchestrating

609
00:26:25,410 --> 00:26:31,650
a group of actions a group of logic that

610
00:26:28,350 --> 00:26:34,679
should be incremented in the network the

611
00:26:31,650 --> 00:26:38,310
term a slice here transferred the slice

612
00:26:34,680 --> 00:26:41,490
or ran a slice or chorus slice sometimes

613
00:26:38,310 --> 00:26:44,300
it's called for example transport

614
00:26:41,490 --> 00:26:47,930
transport sub a slice or try

615
00:26:44,300 --> 00:26:50,570
for a slight subnet all are basically

616
00:26:47,930 --> 00:26:53,600
exactly the same different terminology

617
00:26:50,570 --> 00:26:56,000
for one thing there are few observation

618
00:26:53,600 --> 00:26:59,270
from this high-level picture which to me

619
00:26:56,000 --> 00:27:01,340
is very important first end-to-end

620
00:26:59,270 --> 00:27:03,590
network a slice is different from

621
00:27:01,340 --> 00:27:06,290
transfer a slice in the picture is very

622
00:27:03,590 --> 00:27:09,770
clear that a transfer a slice is a

623
00:27:06,290 --> 00:27:11,899
portion of an end-to-end context this is

624
00:27:09,770 --> 00:27:15,440
the first observation the second

625
00:27:11,900 --> 00:27:18,020
observation here is an end to a network

626
00:27:15,440 --> 00:27:21,530
a slice again I pick on the last one

627
00:27:18,020 --> 00:27:25,129
that dark grey enter a network as wise

628
00:27:21,530 --> 00:27:28,250
can have one or more than one transfer a

629
00:27:25,130 --> 00:27:30,260
slice meaning I can have a group of

630
00:27:28,250 --> 00:27:33,110
connections and that one is more than

631
00:27:30,260 --> 00:27:35,000
one so we want to make another

632
00:27:33,110 --> 00:27:36,979
observation here is an end-to-end

633
00:27:35,000 --> 00:27:39,110
network a slice depends on the

634
00:27:36,980 --> 00:27:42,140
application here we are talking about 5g

635
00:27:39,110 --> 00:27:44,750
but this concept is well-suited for

636
00:27:42,140 --> 00:27:47,240
other type of application for a slicing

637
00:27:44,750 --> 00:27:49,550
for example if operator wants to share

638
00:27:47,240 --> 00:27:53,720
the networks or we want to do the DC

639
00:27:49,550 --> 00:27:56,690
interconnect I'm referring to 5g here as

640
00:27:53,720 --> 00:27:59,570
a prime example but keep in mind that

641
00:27:56,690 --> 00:28:02,320
this logic that discussion could be

642
00:27:59,570 --> 00:28:06,020
well-suited for all other applications

643
00:28:02,320 --> 00:28:10,460
so I referring to the last word another

644
00:28:06,020 --> 00:28:12,200
observation about the number the an end

645
00:28:10,460 --> 00:28:14,870
to a network a slice can have other

646
00:28:12,200 --> 00:28:17,450
slices here when you say coton called

647
00:28:14,870 --> 00:28:19,820
other in this picture with other I mean

648
00:28:17,450 --> 00:28:22,670
ran and core for the other application

649
00:28:19,820 --> 00:28:25,970
that might be different so in a summary

650
00:28:22,670 --> 00:28:30,460
and Antoinette regrets Lars has won on

651
00:28:25,970 --> 00:28:33,470
many transfer slices it might have other

652
00:28:30,460 --> 00:28:36,020
slices in the 5g that other a slice

653
00:28:33,470 --> 00:28:39,410
means run and call and the important

654
00:28:36,020 --> 00:28:43,030
aspect here is the only context for the

655
00:28:39,410 --> 00:28:45,350
entrant is at the very top any other

656
00:28:43,030 --> 00:28:45,860
context that you see here they are not

657
00:28:45,350 --> 00:28:48,230
into it

658
00:28:45,860 --> 00:28:50,899
I cannot expect transfer to be an to I

659
00:28:48,230 --> 00:28:52,880
ran to the entrant or core to be into it

660
00:28:50,900 --> 00:28:55,280
so this is basically the important

661
00:28:52,880 --> 00:28:57,530
aspect if I give you an example a

662
00:28:55,280 --> 00:28:58,220
practical example of how this one might

663
00:28:57,530 --> 00:29:00,168
work

664
00:28:58,220 --> 00:29:03,379
let's say for the last video

665
00:29:00,169 --> 00:29:06,559
surveillance let's say Singapore Public

666
00:29:03,379 --> 00:29:09,168
Safety come to sink tile and say I want

667
00:29:06,559 --> 00:29:11,779
to connect all the three TV cameras

668
00:29:09,169 --> 00:29:14,750
inside the city and inside the buses

669
00:29:11,779 --> 00:29:18,139
together it common as sintel to create

670
00:29:14,750 --> 00:29:20,990
an end-to-end logical network for that a

671
00:29:18,139 --> 00:29:24,709
specific application SingTel take that

672
00:29:20,990 --> 00:29:26,690
request basically goes to the RAM

673
00:29:24,710 --> 00:29:28,279
controller create the context for the

674
00:29:26,690 --> 00:29:30,769
rant it should know exactly how many

675
00:29:28,279 --> 00:29:33,649
Roenick admit you know it wants because

676
00:29:30,769 --> 00:29:35,539
it know that how big the city is whether

677
00:29:33,649 --> 00:29:37,309
or not we should create visual Network

678
00:29:35,539 --> 00:29:39,620
function on the ran or not this is the

679
00:29:37,309 --> 00:29:42,980
decision that the RAM controller make at

680
00:29:39,620 --> 00:29:45,408
that point also for the core it goes

681
00:29:42,980 --> 00:29:47,299
that do I need to create a core how many

682
00:29:45,409 --> 00:29:50,000
core I should be created when I said

683
00:29:47,299 --> 00:29:52,009
could miss 5g code do I need to create

684
00:29:50,000 --> 00:29:55,580
any visual Network function for that all

685
00:29:52,009 --> 00:29:57,679
decision will be made by the correct

686
00:29:55,580 --> 00:30:00,110
controller and at the end when the core

687
00:29:57,679 --> 00:30:02,240
and ran are created the transfer will be

688
00:30:00,110 --> 00:30:04,820
connected and end to a network a slice

689
00:30:02,240 --> 00:30:07,070
for the Singapore public safety will be

690
00:30:04,820 --> 00:30:09,678
created will be exposed to that customer

691
00:30:07,070 --> 00:30:12,769
and add there is a at the end that a

692
00:30:09,679 --> 00:30:16,700
slice can be used the last observation

693
00:30:12,769 --> 00:30:19,879
in this picture is a tenant or customer

694
00:30:16,700 --> 00:30:21,980
can have more than one end-to-end

695
00:30:19,879 --> 00:30:24,769
Network espresso you will see BMW has

696
00:30:21,980 --> 00:30:27,019
the tree of them it is possible to do

697
00:30:24,769 --> 00:30:29,659
and these three for a single customer

698
00:30:27,019 --> 00:30:33,230
are completely independent and isolated

699
00:30:29,659 --> 00:30:39,019
and this is basically that the summary

700
00:30:33,230 --> 00:30:41,990
of this slide from the management and

701
00:30:39,019 --> 00:30:44,330
control what do we need to do we

702
00:30:41,990 --> 00:30:47,440
establish the fact that we need n to an

703
00:30:44,330 --> 00:30:50,090
Orchestrator and various controllers

704
00:30:47,440 --> 00:30:52,429
there is an Orchestrator sitting at the

705
00:30:50,090 --> 00:30:55,158
top again depends on the application if

706
00:30:52,429 --> 00:30:57,950
it is not 5g is other that could be

707
00:30:55,159 --> 00:31:00,139
higher system other higher controller

708
00:30:57,950 --> 00:31:02,690
but in this context we have end-to-end

709
00:31:00,139 --> 00:31:07,539
there Orchestrator what does it do it

710
00:31:02,690 --> 00:31:10,369
does three same three jobs automation

711
00:31:07,539 --> 00:31:12,020
monitoring and optimization of the

712
00:31:10,369 --> 00:31:14,209
end-to-end network effects

713
00:31:12,020 --> 00:31:16,940
these are very important aspect because

714
00:31:14,210 --> 00:31:19,309
in most cases we tend to talk about only

715
00:31:16,940 --> 00:31:22,010
the first one we talk about automation

716
00:31:19,309 --> 00:31:24,350
how to create it everything related to

717
00:31:22,010 --> 00:31:26,260
that but at the same time we have to be

718
00:31:24,350 --> 00:31:29,030
really conscious about talking about

719
00:31:26,260 --> 00:31:31,520
monitoring assurance analytic and

720
00:31:29,030 --> 00:31:34,399
closed-loop optimization so the

721
00:31:31,520 --> 00:31:36,760
controller or Orchestrator in this case

722
00:31:34,400 --> 00:31:39,740
in to analyze Network as West controller

723
00:31:36,760 --> 00:31:42,770
performing these three jobs at the same

724
00:31:39,740 --> 00:31:46,929
time it talks to left right and middle

725
00:31:42,770 --> 00:31:50,179
controller ran core transfer controller

726
00:31:46,929 --> 00:31:52,790
to basically achieve the end-to-end is

727
00:31:50,179 --> 00:31:56,420
created for their specific networks lies

728
00:31:52,790 --> 00:31:58,909
the important aspect again here is the

729
00:31:56,420 --> 00:32:00,920
top level it doesn't know that much

730
00:31:58,910 --> 00:32:02,780
about the detail of the network it knows

731
00:32:00,920 --> 00:32:05,030
about the abstraction of the net for

732
00:32:02,780 --> 00:32:07,220
some level of knowledge of the network

733
00:32:05,030 --> 00:32:10,040
but it really delegate all the

734
00:32:07,220 --> 00:32:11,780
intelligence and everything to either of

735
00:32:10,040 --> 00:32:14,510
those controller it doesn't know how

736
00:32:11,780 --> 00:32:16,520
rent is created or what are the

737
00:32:14,510 --> 00:32:19,160
equivalent in the ran or the transfer or

738
00:32:16,520 --> 00:32:21,650
core it just know that how to delegate

739
00:32:19,160 --> 00:32:23,929
all those component at the same time

740
00:32:21,650 --> 00:32:27,610
each of this controller again doing

741
00:32:23,929 --> 00:32:30,740
three things independently automation

742
00:32:27,610 --> 00:32:33,260
monitoring and optimization and if when

743
00:32:30,740 --> 00:32:35,200
it comes to us the middle box transfer

744
00:32:33,260 --> 00:32:37,640
its rise controller is basically

745
00:32:35,200 --> 00:32:40,700
addressing automation of the transferor

746
00:32:37,640 --> 00:32:43,100
slicers monitoring and assurance of the

747
00:32:40,700 --> 00:32:45,020
transferor slices and closed loop closed

748
00:32:43,100 --> 00:32:47,330
loop optimization and these are

749
00:32:45,020 --> 00:32:50,030
happening independently and this is

750
00:32:47,330 --> 00:32:52,010
basically that concept of the delegation

751
00:32:50,030 --> 00:32:54,290
of the responsibility from Orchestrator

752
00:32:52,010 --> 00:32:56,720
each of the controllers you do your job

753
00:32:54,290 --> 00:32:59,178
if something happened try to resolve it

754
00:32:56,720 --> 00:33:02,030
to controller it transport controller

755
00:32:59,179 --> 00:33:04,340
for example which says you create this

756
00:33:02,030 --> 00:33:06,470
connectivity and it doesn't impact the

757
00:33:04,340 --> 00:33:08,449
important aspect here is when

758
00:33:06,470 --> 00:33:12,050
Orchestrator that we just go to the next

759
00:33:08,450 --> 00:33:14,360
was the interfaces that we have the 3gpp

760
00:33:12,050 --> 00:33:17,659
on the left and right in the middle

761
00:33:14,360 --> 00:33:20,949
there is no standard define that

762
00:33:17,660 --> 00:33:24,140
interface we have recently form a new

763
00:33:20,950 --> 00:33:25,940
design team in his working group I'm not

764
00:33:24,140 --> 00:33:27,740
encouraging you to go and take a look

765
00:33:25,940 --> 00:33:30,290
the material that we have their mandate

766
00:33:27,740 --> 00:33:32,720
and the vision that we have that

767
00:33:30,290 --> 00:33:34,340
interface and everything around that

768
00:33:32,720 --> 00:33:37,610
transfer is voice controller and

769
00:33:34,340 --> 00:33:39,709
everything where the logic for the the

770
00:33:37,610 --> 00:33:41,659
receiving the request there and

771
00:33:39,710 --> 00:33:43,760
fulfilling that request is basically

772
00:33:41,660 --> 00:33:47,120
will be addressed one way or another by

773
00:33:43,760 --> 00:33:50,990
that design team is real recently they

774
00:33:47,120 --> 00:33:53,389
have the meeting and not everything is

775
00:33:50,990 --> 00:33:55,580
finalized but this is that my opinion

776
00:33:53,390 --> 00:33:57,740
the right direction that we go coming

777
00:33:55,580 --> 00:34:00,379
back to that interface that I put idea

778
00:33:57,740 --> 00:34:02,600
that interface is abstract that

779
00:34:00,380 --> 00:34:04,850
interface doesn't tell from Orchestrator

780
00:34:02,600 --> 00:34:08,089
to controller go and create a transfer

781
00:34:04,850 --> 00:34:11,330
its life and use RSVP for that tunnel

782
00:34:08,090 --> 00:34:14,330
and use l3 VPN it says just connect

783
00:34:11,330 --> 00:34:18,469
endpoint one two three and as we

784
00:34:14,330 --> 00:34:21,259
mentioned Connect age 1 2 3 2 H 4 & 5 my

785
00:34:18,469 --> 00:34:23,569
SLA is 10 Meg and I want to have a full

786
00:34:21,260 --> 00:34:26,450
secure Network for example that

787
00:34:23,570 --> 00:34:29,480
interface is defining the connectivity

788
00:34:26,449 --> 00:34:31,100
this way transfer us wise controller

789
00:34:29,480 --> 00:34:32,900
receives that is that for the automation

790
00:34:31,100 --> 00:34:34,880
part I have to do something and

791
00:34:32,900 --> 00:34:36,860
basically for monitoring and

792
00:34:34,880 --> 00:34:39,980
optimization I will talk about that in

793
00:34:36,860 --> 00:34:42,470
the next slide but longer story short in

794
00:34:39,980 --> 00:34:44,690
this case we have an Orchestrator

795
00:34:42,469 --> 00:34:46,730
sitting at the top and controllers and

796
00:34:44,690 --> 00:34:49,580
I'm encouraging you to think about I

797
00:34:46,730 --> 00:34:52,520
will give your answer as we go you might

798
00:34:49,580 --> 00:34:55,190
think how the hierarchical controller or

799
00:34:52,520 --> 00:34:57,620
whatever we do at ITF you know fits here

800
00:34:55,190 --> 00:34:59,390
think about it we will get back to the

801
00:34:57,620 --> 00:35:01,400
question in a moment early but I just

802
00:34:59,390 --> 00:35:03,500
want to make sure that at least I

803
00:35:01,400 --> 00:35:05,390
started with the one question that when

804
00:35:03,500 --> 00:35:08,750
we finished we have the answer for that

805
00:35:05,390 --> 00:35:10,609
now I remove everything from this slide

806
00:35:08,750 --> 00:35:12,890
I just keep the transferor ice

807
00:35:10,610 --> 00:35:14,990
controller and every the interface on

808
00:35:12,890 --> 00:35:18,560
top this is the picture that we have if

809
00:35:14,990 --> 00:35:20,390
it comes this is the picture I have

810
00:35:18,560 --> 00:35:21,950
transfer of ice controller in the middle

811
00:35:20,390 --> 00:35:25,460
everything else is removed from that

812
00:35:21,950 --> 00:35:27,799
picture I have a higher system again I

813
00:35:25,460 --> 00:35:30,470
try to be generalizing the concept I

814
00:35:27,800 --> 00:35:32,990
have a higher system in 5g we call it

815
00:35:30,470 --> 00:35:36,049
into a network of ice Orchestrator the

816
00:35:32,990 --> 00:35:38,180
higher system sends a request number one

817
00:35:36,050 --> 00:35:39,800
to create the connectivity again

818
00:35:38,180 --> 00:35:43,310
connectivity in this context

819
00:35:39,800 --> 00:35:47,330
means connect age 1 2 3 2 H 4 and 5 with

820
00:35:43,310 --> 00:35:49,130
SLO 10 Meg or better we again this is

821
00:35:47,330 --> 00:35:51,140
the second question that interface

822
00:35:49,130 --> 00:35:53,840
should not only have this information

823
00:35:51,140 --> 00:35:55,730
but some information about the request

824
00:35:53,840 --> 00:35:58,610
which is correct for example in the

825
00:35:55,730 --> 00:36:00,560
previous example for this the single

826
00:35:58,610 --> 00:36:03,620
public safe there's a customer that

827
00:36:00,560 --> 00:36:06,049
interface one has information about who

828
00:36:03,620 --> 00:36:09,069
is the customer what is the service

829
00:36:06,050 --> 00:36:12,200
services CCTV customer is Singapore

830
00:36:09,070 --> 00:36:15,260
Public Safety and some other information

831
00:36:12,200 --> 00:36:16,790
about that end to a network a slice this

832
00:36:15,260 --> 00:36:19,850
is a second question we don't really

833
00:36:16,790 --> 00:36:21,830
need this information for automation why

834
00:36:19,850 --> 00:36:24,740
we need that one I try to get back to

835
00:36:21,830 --> 00:36:27,200
you at the very end so number one we

836
00:36:24,740 --> 00:36:30,319
receive a request the transfer a slice

837
00:36:27,200 --> 00:36:32,509
controller intelligently is going to

838
00:36:30,320 --> 00:36:34,520
realize that one in the network and this

839
00:36:32,510 --> 00:36:36,590
is basically the whole idea of

840
00:36:34,520 --> 00:36:39,470
connecting this discussion to whatever

841
00:36:36,590 --> 00:36:41,870
Beaman Brian mentioned 10 minutes ago we

842
00:36:39,470 --> 00:36:44,149
receive the request we are going to

843
00:36:41,870 --> 00:36:46,670
realize that in the net for realization

844
00:36:44,150 --> 00:36:48,920
means depends on the network that I have

845
00:36:46,670 --> 00:36:52,190
if it is much lower or pond or optic or

846
00:36:48,920 --> 00:36:54,680
IP the way that I'm creating this or I'm

847
00:36:52,190 --> 00:36:57,260
realizing this connectivity that

848
00:36:54,680 --> 00:36:59,660
transfer a slice it's different but at

849
00:36:57,260 --> 00:37:01,730
the very end number 1 doesn't change if

850
00:36:59,660 --> 00:37:04,910
I implement this connectivity on top of

851
00:37:01,730 --> 00:37:08,560
mantra wave or Path number one is do the

852
00:37:04,910 --> 00:37:14,200
connectivity between h1 h2 h3 2 H 4 & 5

853
00:37:08,560 --> 00:37:17,200
so number 2 basically tie together the

854
00:37:14,200 --> 00:37:20,960
concept that we discussed so far weed

855
00:37:17,200 --> 00:37:24,439
matting the request to any service

856
00:37:20,960 --> 00:37:27,860
tunnel path and fix will be one of those

857
00:37:24,440 --> 00:37:29,960
that we can use and basically number

858
00:37:27,860 --> 00:37:32,060
three we realize that one in the network

859
00:37:29,960 --> 00:37:36,640
depends how we want to do it we are

860
00:37:32,060 --> 00:37:39,320
using that network as the consumable the

861
00:37:36,640 --> 00:37:42,830
resource and we basically we are reusing

862
00:37:39,320 --> 00:37:45,560
the API to create a connectivity I ask

863
00:37:42,830 --> 00:37:50,240
you two questions the first question was

864
00:37:45,560 --> 00:37:52,430
the what why we need some other

865
00:37:50,240 --> 00:37:53,450
information when I want to create a

866
00:37:52,430 --> 00:37:56,690
number one

867
00:37:53,450 --> 00:37:58,910
it should have in addition to endpoints

868
00:37:56,690 --> 00:38:01,490
and SLA and SLO it should have some

869
00:37:58,910 --> 00:38:05,120
other information the answer to that one

870
00:38:01,490 --> 00:38:07,459
is number four in addition to creation

871
00:38:05,120 --> 00:38:10,640
or automation we need to do the

872
00:38:07,460 --> 00:38:13,970
assurance we need to do the monitoring

873
00:38:10,640 --> 00:38:16,100
and close for those we need to have some

874
00:38:13,970 --> 00:38:19,399
information that how this transfers was

875
00:38:16,100 --> 00:38:21,259
basically the connect to the end to a

876
00:38:19,400 --> 00:38:24,170
network a slice which customer is

877
00:38:21,260 --> 00:38:27,530
requesting for that from that aspect you

878
00:38:24,170 --> 00:38:30,710
know using this information basically

879
00:38:27,530 --> 00:38:33,310
helping us to do that the assurance and

880
00:38:30,710 --> 00:38:40,150
the monitoring and optimization of the

881
00:38:33,310 --> 00:38:40,150
transfer slices if I'd recap whatever

882
00:38:40,390 --> 00:38:49,790
you put here we have at the bottom we

883
00:38:44,090 --> 00:38:51,830
have a consumable network resource now

884
00:38:49,790 --> 00:38:55,070
the application that we built on top

885
00:38:51,830 --> 00:38:57,440
basically is going to use that resources

886
00:38:55,070 --> 00:39:00,470
and basically this is the way that we

887
00:38:57,440 --> 00:39:03,830
see the IETF can fit here

888
00:39:00,470 --> 00:39:10,009
number three is exactly whatever IETF

889
00:39:03,830 --> 00:39:11,930
has lots of history on that and doing

890
00:39:10,010 --> 00:39:14,750
number one and two and number four is

891
00:39:11,930 --> 00:39:18,770
basically leveraging everything that is

892
00:39:14,750 --> 00:39:22,310
already here and another question that

893
00:39:18,770 --> 00:39:26,500
might be relevant here sometimes there's

894
00:39:22,310 --> 00:39:30,140
a there's some question of how we do the

895
00:39:26,500 --> 00:39:31,820
for example surface slicing versus how

896
00:39:30,140 --> 00:39:34,129
the fly see how we can make sure the

897
00:39:31,820 --> 00:39:36,880
resources is in the network all is

898
00:39:34,130 --> 00:39:41,180
related to number three the realization

899
00:39:36,880 --> 00:39:43,100
do we need any specific new protocol or

900
00:39:41,180 --> 00:39:45,980
technology to achieve number three at

901
00:39:43,100 --> 00:39:50,060
this point the most likely answer is

902
00:39:45,980 --> 00:39:52,550
NIST is no but as we go forward this is

903
00:39:50,060 --> 00:39:54,500
basically one of the items that we can

904
00:39:52,550 --> 00:39:55,070
think and we can you know address going

905
00:39:54,500 --> 00:39:57,890
forward

906
00:39:55,070 --> 00:40:01,610
so this is end of the presentation for

907
00:39:57,890 --> 00:40:04,250
us I give the stage to we to basically

908
00:40:01,610 --> 00:40:05,630
wrap it up and we have I guess 10 15

909
00:40:04,250 --> 00:40:08,079
minutes to go through a question and

910
00:40:05,630 --> 00:40:12,619
answer thank you very much

911
00:40:08,079 --> 00:40:14,809
yeah to concludes basically I think you

912
00:40:12,619 --> 00:40:18,650
try to see a little bit how we as Nokia

913
00:40:14,809 --> 00:40:20,390
see this world and how networks need to

914
00:40:18,650 --> 00:40:22,249
be built or what are the different

915
00:40:20,390 --> 00:40:25,038
capabilities we need to have in order to

916
00:40:22,249 --> 00:40:27,019
support like 5g type of use cases so and

917
00:40:25,039 --> 00:40:29,839
fix in our viewers is a key building

918
00:40:27,019 --> 00:40:31,788
block or is a key enabler to actually

919
00:40:29,839 --> 00:40:34,009
give you that ubiquitous connectivity

920
00:40:31,789 --> 00:40:36,229
between all of these heterogeneous

921
00:40:34,009 --> 00:40:37,849
workloads which we actually have to deal

922
00:40:36,229 --> 00:40:39,649
with right

923
00:40:37,849 --> 00:40:44,450
and it's actually spans connectivity

924
00:40:39,650 --> 00:40:45,799
across core access I distributed things

925
00:40:44,450 --> 00:40:48,288
because what we are trying to do is

926
00:40:45,799 --> 00:40:51,288
build kind of a fabric to make that

927
00:40:48,289 --> 00:40:54,710
consumption very easy right and do that

928
00:40:51,289 --> 00:40:56,960
in a way that we achieve that where you

929
00:40:54,710 --> 00:40:59,450
can deliver actually as a race and kpi's

930
00:40:56,960 --> 00:41:02,089
and sometimes I refer to an fix as kind

931
00:40:59,450 --> 00:41:03,950
of what as the one tries to do I for

932
00:41:02,089 --> 00:41:06,380
those people familiar with as the one is

933
00:41:03,950 --> 00:41:08,359
trying to do this ubiquitous over the

934
00:41:06,380 --> 00:41:11,329
Internet over the overlay under any

935
00:41:08,359 --> 00:41:13,880
transport but we are trying to do here

936
00:41:11,329 --> 00:41:16,609
is what if you own an infrastructure and

937
00:41:13,880 --> 00:41:19,309
you want to build certain KPIs and

938
00:41:16,609 --> 00:41:21,170
deliver ubiquitous services across those

939
00:41:19,309 --> 00:41:23,029
heterogeneous environment that is what

940
00:41:21,170 --> 00:41:25,460
we are trying to achieve within fix all

941
00:41:23,029 --> 00:41:28,210
right the third bullet which I which I'm

942
00:41:25,460 --> 00:41:29,960
saying is that it's built on all ITF

943
00:41:28,210 --> 00:41:32,539
standards which are actually happening

944
00:41:29,960 --> 00:41:36,079
here the challenge which we have

945
00:41:32,539 --> 00:41:37,819
sometimes it's actually people I don't

946
00:41:36,079 --> 00:41:41,299
really know which pieces fit together

947
00:41:37,819 --> 00:41:43,069
right so we decided that we are going to

948
00:41:41,299 --> 00:41:45,829
write a draft it will be an

949
00:41:43,069 --> 00:41:48,499
informational draft so if people are

950
00:41:45,829 --> 00:41:52,069
interested in contributing I would

951
00:41:48,499 --> 00:41:53,868
welcome them so please contact us after

952
00:41:52,069 --> 00:41:57,049
this talk or something like that because

953
00:41:53,869 --> 00:41:59,569
I think it's important that it's

954
00:41:57,049 --> 00:42:01,160
sometimes I important that we fit the

955
00:41:59,569 --> 00:42:02,538
pieces together because we are using

956
00:42:01,160 --> 00:42:03,769
many building blocks which are built

957
00:42:02,539 --> 00:42:05,359
here right so we're using things from

958
00:42:03,769 --> 00:42:07,819
bears we are using things from spraying

959
00:42:05,359 --> 00:42:09,950
we're using things from net mod with all

960
00:42:07,819 --> 00:42:12,109
the yang definition models which are

961
00:42:09,950 --> 00:42:14,779
delivered or being built in different

962
00:42:12,109 --> 00:42:16,819
working groups neat I need to be

963
00:42:14,779 --> 00:42:18,469
consumed together so we use pieces we

964
00:42:16,819 --> 00:42:19,759
use I so that is different components

965
00:42:18,469 --> 00:42:20,750
from different working groups which we

966
00:42:19,759 --> 00:42:22,550
are leveraging

967
00:42:20,750 --> 00:42:24,500
in order to build this framework right

968
00:42:22,550 --> 00:42:26,450
but none of this is actually very

969
00:42:24,500 --> 00:42:27,740
propriety or very standard so it works

970
00:42:26,450 --> 00:42:30,919
with multi-vendor and actually we have

971
00:42:27,740 --> 00:42:32,959
implementations today in live customers

972
00:42:30,920 --> 00:42:35,270
where we are actually doing this using

973
00:42:32,960 --> 00:42:37,310
those building blocks and then the

974
00:42:35,270 --> 00:42:40,490
second bullet which is here is that in

975
00:42:37,310 --> 00:42:44,210
order to deliver this whole environment

976
00:42:40,490 --> 00:42:47,209
we need to come to a framework where the

977
00:42:44,210 --> 00:42:49,580
network's are consumable through an API

978
00:42:47,210 --> 00:42:52,520
is how I say it right and I always make

979
00:42:49,580 --> 00:42:54,920
the reflection towards what the public

980
00:42:52,520 --> 00:42:57,140
lies proud so guys are doing today if

981
00:42:54,920 --> 00:43:00,020
you see how easy it is consumable their

982
00:42:57,140 --> 00:43:02,150
networks is consumable this is where we

983
00:43:00,020 --> 00:43:04,340
should go towards right so we should

984
00:43:02,150 --> 00:43:07,160
basically with a few point and clicks be

985
00:43:04,340 --> 00:43:09,800
able to instantiate those capabilities

986
00:43:07,160 --> 00:43:12,259
which are your customers demanding and

987
00:43:09,800 --> 00:43:14,090
doing that in a seamless way over that

988
00:43:12,260 --> 00:43:17,500
heterogeneous environment and this is

989
00:43:14,090 --> 00:43:20,930
kind of how we see the implications of

990
00:43:17,500 --> 00:43:22,580
5g and how networks should be built or

991
00:43:20,930 --> 00:43:24,830
the capabilities that should be

992
00:43:22,580 --> 00:43:27,440
delivered going forward to achieve and

993
00:43:24,830 --> 00:43:30,560
to deliver those type of use cases with

994
00:43:27,440 --> 00:43:31,580
that I think we are almost on time and I

995
00:43:30,560 --> 00:43:34,370
don't know whether we have time for

996
00:43:31,580 --> 00:43:36,830
questions or not but we are happy to

997
00:43:34,370 --> 00:43:38,240
have some questions if there are some in

998
00:43:36,830 --> 00:43:44,090
the room but I don't know how it will

999
00:43:38,240 --> 00:44:00,049
work because we don't have mics are

1000
00:43:44,090 --> 00:44:03,440
there any questions or hello Cass DP and

1001
00:44:00,050 --> 00:44:05,810
CSA so my question is about the join up

1002
00:44:03,440 --> 00:44:08,120
between your use cases and what you're

1003
00:44:05,810 --> 00:44:11,180
sort of needing from this community and

1004
00:44:08,120 --> 00:44:13,580
how do you get a full range of telco

1005
00:44:11,180 --> 00:44:15,470
operator requirements into this

1006
00:44:13,580 --> 00:44:18,770
community and do you think that the join

1007
00:44:15,470 --> 00:44:21,200
up is currently working so what I so the

1008
00:44:18,770 --> 00:44:23,420
way we I said the question is is about

1009
00:44:21,200 --> 00:44:25,790
how we get requires from operators and

1010
00:44:23,420 --> 00:44:28,010
in this community so right so what we do

1011
00:44:25,790 --> 00:44:29,450
i from a Nokia point of view is all the

1012
00:44:28,010 --> 00:44:31,280
different requirements we get from

1013
00:44:29,450 --> 00:44:33,649
operators we try to so that's how we

1014
00:44:31,280 --> 00:44:34,700
contribute to draft an IETF and so if we

1015
00:44:33,650 --> 00:44:37,700
see that there are third

1016
00:44:34,700 --> 00:44:39,230
missing pieces like Raisa mentioned for

1017
00:44:37,700 --> 00:44:41,330
transport slicing we believe that is a

1018
00:44:39,230 --> 00:44:43,610
missing piece for a service abstraction

1019
00:44:41,330 --> 00:44:45,980
to give you that slice and transport

1020
00:44:43,610 --> 00:44:49,100
slice controller we build a contribution

1021
00:44:45,980 --> 00:44:50,930
into the various working group in order

1022
00:44:49,100 --> 00:44:53,089
to contribute and make sure that we

1023
00:44:50,930 --> 00:44:54,410
built this open framework to support

1024
00:44:53,090 --> 00:44:56,660
this type of thing so basically the

1025
00:44:54,410 --> 00:44:59,299
requirements which we see from customers

1026
00:44:56,660 --> 00:45:01,129
we bring back to IDF and we try to

1027
00:44:59,300 --> 00:45:04,160
contribute and try to make those things

1028
00:45:01,130 --> 00:45:08,690
adoptable or change depending on the use

1029
00:45:04,160 --> 00:45:10,190
or how IDF sees this adopt based on the

1030
00:45:08,690 --> 00:45:16,850
the feedback of the working group here

1031
00:45:10,190 --> 00:45:19,790
okay I saw on the slide about how these

1032
00:45:16,850 --> 00:45:21,350
slices let you do more than one thing at

1033
00:45:19,790 --> 00:45:24,200
the same time on the network or

1034
00:45:21,350 --> 00:45:26,180
different comes like Fiat and BMW could

1035
00:45:24,200 --> 00:45:30,799
both use the same network and what I'm

1036
00:45:26,180 --> 00:45:33,109
struck by is already when I'm at home I

1037
00:45:30,800 --> 00:45:35,740
can watch Netflix while at the same time

1038
00:45:33,110 --> 00:45:38,120
my Tesla's doing a firmware update

1039
00:45:35,740 --> 00:45:40,430
because I have an internet connection I

1040
00:45:38,120 --> 00:45:42,770
didn't see any mention of the Internet

1041
00:45:40,430 --> 00:45:45,470
in this presentation is this a totally

1042
00:45:42,770 --> 00:45:48,290
new thing to replace the Internet No so

1043
00:45:45,470 --> 00:45:50,240
this is actually I saw ok so this is a

1044
00:45:48,290 --> 00:45:52,430
good good question actually if the

1045
00:45:50,240 --> 00:45:54,560
Internet is good enough for that service

1046
00:45:52,430 --> 00:45:55,879
we use the internet as a so we use

1047
00:45:54,560 --> 00:45:58,130
basically the Internet connectivity

1048
00:45:55,880 --> 00:46:00,590
right so it's only when you have

1049
00:45:58,130 --> 00:46:03,170
specific requirements which cannot be

1050
00:46:00,590 --> 00:46:04,490
met or which are like certain latency

1051
00:46:03,170 --> 00:46:05,990
requirements and stuff like that on your

1052
00:46:04,490 --> 00:46:08,029
service delivered on X wires that you

1053
00:46:05,990 --> 00:46:10,640
actually do or change things so we have

1054
00:46:08,030 --> 00:46:13,850
the capability to influence based on

1055
00:46:10,640 --> 00:46:16,279
your needs of that specific use case but

1056
00:46:13,850 --> 00:46:18,410
if the Internet is good enough there

1057
00:46:16,280 --> 00:46:22,700
will be Internet connectivity used for

1058
00:46:18,410 --> 00:46:25,879
that particular service so in your

1059
00:46:22,700 --> 00:46:28,970
ignorance one of the slides you showed

1060
00:46:25,880 --> 00:46:31,730
the round slice and transport slice and

1061
00:46:28,970 --> 00:46:34,310
the cost slice yes then you said

1062
00:46:31,730 --> 00:46:36,800
essentially the leftmost either ends or

1063
00:46:34,310 --> 00:46:39,380
mostly from 3gpp 3G does the run slice

1064
00:46:36,800 --> 00:46:41,780
and da and that may be on the core side

1065
00:46:39,380 --> 00:46:45,230
then the transport slice you said IDF

1066
00:46:41,780 --> 00:46:46,850
can stand I start what exactly IDF can

1067
00:46:45,230 --> 00:46:48,109
sterilized is it just the provisioning

1068
00:46:46,850 --> 00:46:50,479
of the slice or what

1069
00:46:48,109 --> 00:46:55,489
what is the standardization that's left

1070
00:46:50,479 --> 00:46:57,618
here whatever we plan to do idea if it's

1071
00:46:55,489 --> 00:46:59,719
I encourage you to take a look at their

1072
00:46:57,619 --> 00:47:02,390
outcome and the result that we have on

1073
00:46:59,719 --> 00:47:06,709
their teaser in troupe for the network

1074
00:47:02,390 --> 00:47:09,140
is slicing in the summaries we do want

1075
00:47:06,709 --> 00:47:12,288
to first of all define transversal eyes

1076
00:47:09,140 --> 00:47:15,890
what is the consensus the definition of

1077
00:47:12,289 --> 00:47:17,869
that how it relates to network a slice

1078
00:47:15,890 --> 00:47:21,828
this is the first thing the second one

1079
00:47:17,869 --> 00:47:24,709
is study a framework to make sure that

1080
00:47:21,829 --> 00:47:26,509
we know all the component that we have

1081
00:47:24,709 --> 00:47:29,538
to do whether or not there should be a

1082
00:47:26,509 --> 00:47:32,319
for example a new NB i to be build this

1083
00:47:29,539 --> 00:47:35,630
could be one of the outcome of that

1084
00:47:32,319 --> 00:47:37,910
discussion and last but not least to

1085
00:47:35,630 --> 00:47:40,880
their address the mapping that I

1086
00:47:37,910 --> 00:47:43,999
mentioned if I wanna map that abstract

1087
00:47:40,880 --> 00:47:46,880
interface to a specific technology we

1088
00:47:43,999 --> 00:47:49,759
are going to have a few use cases and we

1089
00:47:46,880 --> 00:47:52,099
basically they show how the mapping

1090
00:47:49,759 --> 00:47:55,670
might work in the real world so these

1091
00:47:52,099 --> 00:47:58,640
are the the tree the most important

1092
00:47:55,670 --> 00:48:00,979
aspect that we want to cover there as we

1093
00:47:58,640 --> 00:48:03,618
go forward definitely we need a

1094
00:48:00,979 --> 00:48:05,390
contribution from everybody and whether

1095
00:48:03,619 --> 00:48:08,569
or not there are some other thing needed

1096
00:48:05,390 --> 00:48:10,729
to be done it this is for the future but

1097
00:48:08,569 --> 00:48:12,859
at this time we wanted to make sure we

1098
00:48:10,729 --> 00:48:15,709
are really focused on couple of saying

1099
00:48:12,859 --> 00:48:19,038
we are not basically boiling the ocean

1100
00:48:15,709 --> 00:48:22,669
at the same time how relevant that work

1101
00:48:19,039 --> 00:48:24,559
is to ITF is a prime the example of

1102
00:48:22,670 --> 00:48:26,660
whatever we do and it's very important

1103
00:48:24,559 --> 00:48:28,849
to consider that mmm maybe a follow-up

1104
00:48:26,660 --> 00:48:31,609
question so when you create a transport

1105
00:48:28,849 --> 00:48:33,829
slice what are the parameters that let's

1106
00:48:31,609 --> 00:48:35,479
say Phi G system will daily give it to

1107
00:48:33,829 --> 00:48:36,799
the transport so let's say you are a

1108
00:48:35,479 --> 00:48:37,489
let's see what will be the parameters

1109
00:48:36,799 --> 00:48:39,680
I'm just curious

1110
00:48:37,489 --> 00:48:41,569
at the high level again this is

1111
00:48:39,680 --> 00:48:44,149
something I don't want it is something

1112
00:48:41,569 --> 00:48:48,288
that we didn't haven't decided in the

1113
00:48:44,150 --> 00:48:51,799
design team but as a general concept the

1114
00:48:48,289 --> 00:48:54,979
input that you receive here I want to

1115
00:48:51,799 --> 00:48:58,369
connect H 1 2 3 2 H 4 & 5 so a group of

1116
00:48:54,979 --> 00:49:01,759
edge that should be connected the SLA an

1117
00:48:58,369 --> 00:49:04,100
SLO for that connectivity is what

1118
00:49:01,760 --> 00:49:06,920
is the objective that you want to raise

1119
00:49:04,100 --> 00:49:07,759
is the latency reliability security and

1120
00:49:06,920 --> 00:49:10,100
so on so forth

1121
00:49:07,760 --> 00:49:13,400
and some other data which is the use

1122
00:49:10,100 --> 00:49:15,319
case dependent in the 5g for example I

1123
00:49:13,400 --> 00:49:17,840
mentioned some other information that

1124
00:49:15,320 --> 00:49:19,760
helps us not only for automation but for

1125
00:49:17,840 --> 00:49:21,560
the other assurance and other aspect is

1126
00:49:19,760 --> 00:49:23,660
how this relates to the end-to-end

1127
00:49:21,560 --> 00:49:25,910
network a slice which customer is a

1128
00:49:23,660 --> 00:49:26,899
single what service is that so these are

1129
00:49:25,910 --> 00:49:29,420
very high-level

1130
00:49:26,900 --> 00:49:31,250
the detail of that obviously we have to

1131
00:49:29,420 --> 00:49:35,440
go through it to make sure that we are

1132
00:49:31,250 --> 00:49:37,960
addressing it in a very logical way and

1133
00:49:35,440 --> 00:49:40,460
whether or not we need to add other

1134
00:49:37,960 --> 00:49:42,920
attributed A's or you know remove it

1135
00:49:40,460 --> 00:49:45,280
this is the we have to go through the

1136
00:49:42,920 --> 00:49:49,220
process okay thank you okay no problem

1137
00:49:45,280 --> 00:49:52,340
okay this is a important from SK key you

1138
00:49:49,220 --> 00:49:54,410
so a very nice talk I have a one

1139
00:49:52,340 --> 00:49:58,250
question one comment

1140
00:49:54,410 --> 00:50:01,670
so you basically you propose intended

1141
00:49:58,250 --> 00:50:05,300
based and that talking will be useful

1142
00:50:01,670 --> 00:50:08,200
for our net optimizing is it correct yes

1143
00:50:05,300 --> 00:50:11,810
so basically you can see a high-level

1144
00:50:08,200 --> 00:50:15,560
some policy service level will be

1145
00:50:11,810 --> 00:50:17,840
translated into metal label or device

1146
00:50:15,560 --> 00:50:21,320
Allegra right so I believe it one of our

1147
00:50:17,840 --> 00:50:24,440
core functions is translation so are you

1148
00:50:21,320 --> 00:50:26,780
considering how to translate sub

1149
00:50:24,440 --> 00:50:29,240
survival policy into low-level policy

1150
00:50:26,780 --> 00:50:32,720
are you considering or are you working

1151
00:50:29,240 --> 00:50:35,089
for that what is your question how do

1152
00:50:32,720 --> 00:50:38,089
you translate policy from between

1153
00:50:35,090 --> 00:50:40,370
different devices or so which means it

1154
00:50:38,090 --> 00:50:42,740
you know the high level service of level

1155
00:50:40,370 --> 00:50:45,049
yes agreement why kind of subjective

1156
00:50:42,740 --> 00:50:47,540
level of policy I can def of you if you

1157
00:50:45,050 --> 00:50:50,450
look what Raisa was was talking about

1158
00:50:47,540 --> 00:50:52,640
actually is an abstracted view right but

1159
00:50:50,450 --> 00:50:55,069
you typically see today unfortunately I

1160
00:50:52,640 --> 00:50:58,069
redid a lot of work in ITF with respect

1161
00:50:55,070 --> 00:50:59,720
to data model standardization but you do

1162
00:50:58,070 --> 00:51:03,890
see is that the vendors have not all

1163
00:50:59,720 --> 00:51:06,470
implemented that uniformly yet right so

1164
00:51:03,890 --> 00:51:08,089
what you need to do is basically even if

1165
00:51:06,470 --> 00:51:09,799
we say about intent based networking

1166
00:51:08,090 --> 00:51:11,360
what you stiff typically still see is

1167
00:51:09,800 --> 00:51:13,970
that you need a device model which is

1168
00:51:11,360 --> 00:51:15,569
specific for a specific vendor so as

1169
00:51:13,970 --> 00:51:17,968
such what we are doing is we

1170
00:51:15,569 --> 00:51:19,619
like these abstract service models which

1171
00:51:17,969 --> 00:51:22,979
are being defined like for example even

1172
00:51:19,619 --> 00:51:25,949
in IDF EF l2 as an all 3sm being defined

1173
00:51:22,979 --> 00:51:27,448
alright as a service model but what you

1174
00:51:25,949 --> 00:51:29,549
see is if you have to implement that to

1175
00:51:27,449 --> 00:51:31,349
the specific device you sometimes need a

1176
00:51:29,549 --> 00:51:34,559
translation layer so we have like device

1177
00:51:31,349 --> 00:51:36,299
abstraction capabilities which are

1178
00:51:34,559 --> 00:51:39,029
actually mediating towards a specific

1179
00:51:36,299 --> 00:51:41,400
device implementing that particular use

1180
00:51:39,029 --> 00:51:43,079
case in order to translate for the

1181
00:51:41,400 --> 00:51:45,449
specific models which that device

1182
00:51:43,079 --> 00:51:47,670
actually has implemented and but so we

1183
00:51:45,449 --> 00:51:50,459
have this that is a abstract service

1184
00:51:47,670 --> 00:51:52,410
layer and then there is a device type of

1185
00:51:50,459 --> 00:51:54,589
model which is actually then implemented

1186
00:51:52,410 --> 00:51:58,288
into the device depending on the

1187
00:51:54,589 --> 00:52:01,078
capabilities that device has enabled

1188
00:51:58,289 --> 00:52:03,119
then maybe women just add I mean that

1189
00:52:01,079 --> 00:52:04,979
actually only needs to exist on the edge

1190
00:52:03,119 --> 00:52:06,630
itself as we mentioned there so it's

1191
00:52:04,979 --> 00:52:09,689
beyond that everything in between is

1192
00:52:06,630 --> 00:52:11,579
about how you can assure the the well

1193
00:52:09,690 --> 00:52:13,199
the abstract SLA that gets translated

1194
00:52:11,579 --> 00:52:14,880
into something meaningful for the

1195
00:52:13,199 --> 00:52:16,380
network how you can ensure that in a

1196
00:52:14,880 --> 00:52:20,880
closely collimation opener yeah

1197
00:52:16,380 --> 00:52:22,859
basically the IDF developer many young

1198
00:52:20,880 --> 00:52:26,099
the era models high-level and low-level

1199
00:52:22,859 --> 00:52:27,900
the problem is the link to each other

1200
00:52:26,099 --> 00:52:30,630
the translation is missing line now so

1201
00:52:27,900 --> 00:52:33,089
many people constantly working with it

1202
00:52:30,630 --> 00:52:36,359
basically the I to and i7 data security

1203
00:52:33,089 --> 00:52:38,699
a function working alone about a member

1204
00:52:36,359 --> 00:52:41,999
so we are basically implemented the

1205
00:52:38,699 --> 00:52:44,309
policy translator to link high-level

1206
00:52:41,999 --> 00:52:47,009
policy into low level so I believe

1207
00:52:44,309 --> 00:52:50,160
Network slicing case I think we can

1208
00:52:47,009 --> 00:52:51,869
elaborate the previous our work I mean

1209
00:52:50,160 --> 00:52:53,670
if there are missing pieces which you

1210
00:52:51,869 --> 00:52:55,979
believe need Standardization I think we

1211
00:52:53,670 --> 00:52:59,249
are happy to come talk and then see how

1212
00:52:55,979 --> 00:53:02,129
we can the other our question is a some

1213
00:52:59,249 --> 00:53:05,430
a collaboration with the other standard

1214
00:53:02,130 --> 00:53:07,799
apart for example the I to honest F we

1215
00:53:05,430 --> 00:53:10,979
are facing the problem is we are using

1216
00:53:07,799 --> 00:53:15,359
in security NATO spirit function with

1217
00:53:10,979 --> 00:53:19,979
the Sdn for example the problem is ITF

1218
00:53:15,359 --> 00:53:22,799
I to an ACEF and Sdn the interface

1219
00:53:19,979 --> 00:53:25,439
should be specified the problem is how

1220
00:53:22,799 --> 00:53:29,130
to collaborate with other area standard

1221
00:53:25,440 --> 00:53:32,880
body so your cases the 3gpp

1222
00:53:29,130 --> 00:53:37,049
and airier some standardization and I'd

1223
00:53:32,880 --> 00:53:39,539
have some the station has something

1224
00:53:37,049 --> 00:53:43,470
called collaborated right so there is my

1225
00:53:39,539 --> 00:53:44,819
some actually how to collaborate we are

1226
00:53:43,470 --> 00:53:47,098
we're probably running out of time here

1227
00:53:44,819 --> 00:53:50,490
but we can take this offline to see what

1228
00:53:47,099 --> 00:53:55,520
needs to happen okay thank you thank you

1229
00:53:50,490 --> 00:54:02,069
very much we have to stop okay sorry

1230
00:53:55,520 --> 00:54:02,070
[Applause]

