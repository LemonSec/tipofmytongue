1
00:00:04,800 --> 00:00:11,490
but Matt's opinion the union is

2
00:00:08,550 --> 00:00:13,469
basically memories I'd rather have a new

3
00:00:11,490 --> 00:00:16,650
room decision and confirmed on various

4
00:00:13,469 --> 00:00:20,759
sub from spectrum variance it's really

5
00:00:16,650 --> 00:00:24,270
hard winning this past summer gets all

6
00:00:20,760 --> 00:00:29,240
anything it's a nice - so are we in the

7
00:00:24,270 --> 00:00:29,240
end well

8
00:00:56,170 --> 00:01:02,620
and in a time crunch work institution

9
00:00:59,030 --> 00:01:02,620
this is a keyboard with one end

10
00:01:57,390 --> 00:02:00,390
yeah

11
00:03:06,500 --> 00:03:09,629
[Music]

12
00:03:41,120 --> 00:03:48,330
okay welcome to the second meeting of

13
00:03:44,849 --> 00:03:56,488
the career Oprah and this week and also

14
00:03:48,330 --> 00:03:58,980
the last session in this week yeah I

15
00:03:56,489 --> 00:04:01,260
think most people have seen all these

16
00:03:58,980 --> 00:04:07,920
note words and so on but if you are new

17
00:04:01,260 --> 00:04:12,359
to this please read it the objective of

18
00:04:07,920 --> 00:04:16,889
today's meeting was essentially to pick

19
00:04:12,360 --> 00:04:18,389
up items that happened this week and

20
00:04:16,889 --> 00:04:20,478
that's why it will be a little bit less

21
00:04:18,389 --> 00:04:24,030
organized and a little bit more chaotic

22
00:04:20,478 --> 00:04:27,360
then in other parts of the meeting

23
00:04:24,030 --> 00:04:30,900
because during an ITF big of course

24
00:04:27,360 --> 00:04:34,410
nobody has time to actually create tons

25
00:04:30,900 --> 00:04:39,419
of slides and so on so this is the

26
00:04:34,410 --> 00:04:42,720
agenda that is on the agenda sheet and

27
00:04:39,419 --> 00:04:46,909
we actually have two items we want to

28
00:04:42,720 --> 00:04:50,490
add to that which is a really quick

29
00:04:46,910 --> 00:04:53,639
discussion hi question a really quick

30
00:04:50,490 --> 00:04:57,030
discussion of where we are with resource

31
00:04:53,639 --> 00:05:00,690
directory the main resource directory

32
00:04:57,030 --> 00:05:05,090
document is in a DV evaluation as we

33
00:05:00,690 --> 00:05:07,169
said Wednesday but there is this other

34
00:05:05,090 --> 00:05:09,150
resource directory document and we

35
00:05:07,169 --> 00:05:12,570
should briefly talk about that so I

36
00:05:09,150 --> 00:05:16,039
think we can do that first and the other

37
00:05:12,570 --> 00:05:19,860
thing we want to do is pick up the

38
00:05:16,039 --> 00:05:24,260
discussion about the Sena mer unit thing

39
00:05:19,860 --> 00:05:28,770
but we will only do that when alexei is

40
00:05:24,260 --> 00:05:35,060
back from the presentation years to give

41
00:05:28,770 --> 00:05:38,219
right now in the Acne working group

42
00:05:35,060 --> 00:05:40,800
anything else we shall be doing today we

43
00:05:38,220 --> 00:05:44,340
probably do have time at the end so if

44
00:05:40,800 --> 00:05:46,820
you have a favorite topic that you

45
00:05:44,340 --> 00:05:54,739
always wanted to present

46
00:05:46,820 --> 00:05:56,090
or discuss now is the time now I'm not

47
00:05:54,740 --> 00:05:58,430
going to give an impromptu presentation

48
00:05:56,090 --> 00:06:04,219
about the new SI system that was

49
00:05:58,430 --> 00:06:07,640
introduced in May this year okay yeah

50
00:06:04,220 --> 00:06:23,630
we're going to skip that reset surgery

51
00:06:07,640 --> 00:06:38,690
just young these are your side's Wyatt

52
00:06:23,630 --> 00:06:41,390
we can see you very well much better

53
00:06:38,690 --> 00:06:46,910
what time is it where you are oh five

54
00:06:41,390 --> 00:06:54,830
thirty year I can't quite suppress the

55
00:06:46,910 --> 00:06:57,560
comment that you look that way okay

56
00:06:54,830 --> 00:06:57,969
so on resourcedirectory next slide

57
00:06:57,560 --> 00:07:01,880
please

58
00:06:57,970 --> 00:07:04,430
as you mentioned there has been an area

59
00:07:01,880 --> 00:07:07,820
we are in AVM generation after working

60
00:07:04,430 --> 00:07:10,190
group last call we've published three

61
00:07:07,820 --> 00:07:11,719
new draft versions during the working

62
00:07:10,190 --> 00:07:15,110
group last call period which we are

63
00:07:11,720 --> 00:07:19,940
mainly addressing things like clarify

64
00:07:15,110 --> 00:07:23,990
this add a bit more detail here or there

65
00:07:19,940 --> 00:07:29,180
now Alexa has been as kind as to finish

66
00:07:23,990 --> 00:07:31,090
or to do an ad review with that there is

67
00:07:29,180 --> 00:07:34,760
next slide please

68
00:07:31,090 --> 00:07:38,000
a lot of editorial things that we need

69
00:07:34,760 --> 00:07:39,950
to fix and one large question that is

70
00:07:38,000 --> 00:07:46,760
the question of the normativity of our

71
00:07:39,950 --> 00:07:50,960
ddns st to summarize the what we are

72
00:07:46,760 --> 00:07:53,570
saying about in SSD is that it is

73
00:07:50,960 --> 00:07:56,989
something that is being worked on and it

74
00:07:53,570 --> 00:07:59,300
is one of the ways that you can use to

75
00:07:56,990 --> 00:08:00,439
find your resource directory so if

76
00:07:59,300 --> 00:08:03,499
you're in a managed net

77
00:08:00,439 --> 00:08:07,099
then you should well it is recommended

78
00:08:03,499 --> 00:08:08,899
that you use the Rd AdWords option of

79
00:08:07,099 --> 00:08:14,058
neighbor discovery or would use any cast

80
00:08:08,899 --> 00:08:17,559
and there is also one of one of the or

81
00:08:14,059 --> 00:08:21,110
recommended mechanism is our DTN SSD and

82
00:08:17,559 --> 00:08:23,059
the commonwealth at this looks like a

83
00:08:21,110 --> 00:08:25,099
normative reference and it should be

84
00:08:23,059 --> 00:08:29,149
because right now it is an informative

85
00:08:25,099 --> 00:08:32,029
reference so what shall we do about it

86
00:08:29,149 --> 00:08:35,089
the status of our DTN SSD is that is

87
00:08:32,029 --> 00:08:38,088
being worked on so and Peter Peter

88
00:08:35,089 --> 00:08:41,479
refreshed it with all the outcome of the

89
00:08:38,089 --> 00:08:43,819
previous discussions but it's not still

90
00:08:41,479 --> 00:08:47,449
not in a state where we can expect to

91
00:08:43,818 --> 00:08:52,519
have it published in the next one or two

92
00:08:47,449 --> 00:08:54,079
I guess probably longer so having this

93
00:08:52,519 --> 00:08:55,730
as a normative reference would slow down

94
00:08:54,079 --> 00:09:00,589
the are the TNS

95
00:08:55,730 --> 00:09:03,079
of the Rd process quite a bit now the

96
00:09:00,589 --> 00:09:05,839
waste the possible ways to go forward

97
00:09:03,079 --> 00:09:09,500
here are to set it out which I don't

98
00:09:05,839 --> 00:09:12,490
think we should do to basically

99
00:09:09,500 --> 00:09:15,259
convinced Alexey that we don't want to

100
00:09:12,490 --> 00:09:18,350
that that this is really not something

101
00:09:15,259 --> 00:09:19,550
that is of normative relevance even

102
00:09:18,350 --> 00:09:22,519
though we say there's one from the

103
00:09:19,550 --> 00:09:26,029
recommended options or to remove the

104
00:09:22,519 --> 00:09:29,420
recommendation that to use this and just

105
00:09:26,029 --> 00:09:32,389
say that there may be other ones that

106
00:09:29,420 --> 00:09:35,660
other up other discovery options that

107
00:09:32,389 --> 00:09:39,610
will be provided with new documents that

108
00:09:35,660 --> 00:09:42,649
could become important as well so that's

109
00:09:39,610 --> 00:09:44,779
that's the big question for discussion

110
00:09:42,649 --> 00:09:48,439
and also the thing where I'd like to ask

111
00:09:44,779 --> 00:09:55,120
you for your input on what could we do

112
00:09:48,439 --> 00:09:55,120
about this yeah so input please

113
00:10:04,320 --> 00:10:10,380
custom woman without a chair head

114
00:10:06,480 --> 00:10:15,930
because I require on this document so I

115
00:10:10,380 --> 00:10:21,150
missed the chair for this normative

116
00:10:15,930 --> 00:10:23,599
references are really bad we made the

117
00:10:21,150 --> 00:10:26,430
mistake in our C seven to five true

118
00:10:23,600 --> 00:10:31,260
which had a normative reference for what

119
00:10:26,430 --> 00:10:35,040
we came RFC seven two five zero which is

120
00:10:31,260 --> 00:10:40,590
interesting it has our C number three

121
00:10:35,040 --> 00:10:43,050
three numbers below coop so why why was

122
00:10:40,590 --> 00:10:45,690
that a problem the problem was that some

123
00:10:43,050 --> 00:10:51,000
some random coral in the security area

124
00:10:45,690 --> 00:10:53,970
that that was completely without effect

125
00:10:51,000 --> 00:10:58,910
on the rearward delayed this document

126
00:10:53,970 --> 00:11:01,590
for a year and these things happen so

127
00:10:58,910 --> 00:11:02,730
normative reference the significant yes

128
00:11:01,590 --> 00:11:04,760
a second let me cut you there for a

129
00:11:02,730 --> 00:11:06,750
second we don't have many takers

130
00:11:04,760 --> 00:11:09,180
cause nobody volunteered the beginning

131
00:11:06,750 --> 00:11:11,040
won't one for this I'm taking some yes I

132
00:11:09,180 --> 00:11:14,660
want to take it alone sorry

133
00:11:11,040 --> 00:11:17,250
so please those of you who are plop tops

134
00:11:14,660 --> 00:11:19,020
you could raise your hand your head for

135
00:11:17,250 --> 00:11:20,520
a second and and then think about

136
00:11:19,020 --> 00:11:22,730
whether you want to take minutes and

137
00:11:20,520 --> 00:11:28,020
then raise your hand please

138
00:11:22,730 --> 00:11:29,490
Thanks okay so both of you please take

139
00:11:28,020 --> 00:11:31,500
minutes this is important because we

140
00:11:29,490 --> 00:11:36,120
want to have this is going to the list

141
00:11:31,500 --> 00:11:38,670
later so right yeah so now that

142
00:11:36,120 --> 00:11:41,640
reference really is a big liability and

143
00:11:38,670 --> 00:11:48,030
we should ensure that in situations

144
00:11:41,640 --> 00:11:51,680
where we actually need it now these

145
00:11:48,030 --> 00:11:54,930
documents were meant to to run

146
00:11:51,680 --> 00:11:59,819
synchronously and turned out after wire

147
00:11:54,930 --> 00:12:04,859
that person power reasons we couldn't

148
00:11:59,820 --> 00:12:08,150
keep this up so I think it is really

149
00:12:04,860 --> 00:12:12,780
useful to maintain that forward

150
00:12:08,150 --> 00:12:16,360
reference because yes once the

151
00:12:12,780 --> 00:12:23,430
the other document is out it's probably

152
00:12:16,360 --> 00:12:26,830
a good idea to use it but we need to

153
00:12:23,430 --> 00:12:29,229
find a way to describe this in such a

154
00:12:26,830 --> 00:12:33,850
way that it does not become a normative

155
00:12:29,230 --> 00:12:39,070
reference and one way is to say that

156
00:12:33,850 --> 00:12:42,760
that there are other ways to do

157
00:12:39,070 --> 00:12:44,620
discovery such as and then we do with

158
00:12:42,760 --> 00:12:48,040
the environment of reference to the

159
00:12:44,620 --> 00:12:52,120
draft and these also should be

160
00:12:48,040 --> 00:12:55,420
considered when finding a resource

161
00:12:52,120 --> 00:12:57,220
directory so just just to is a reminder

162
00:12:55,420 --> 00:13:01,420
we are not talking about service

163
00:12:57,220 --> 00:13:02,890
discovery or resource discovery at the

164
00:13:01,420 --> 00:13:08,099
mall we are talking about resource

165
00:13:02,890 --> 00:13:12,040
directory discovery which is pretty

166
00:13:08,100 --> 00:13:17,200
fluffy thing anyway we are not giving

167
00:13:12,040 --> 00:13:21,400
very very precise guidance here anyway

168
00:13:17,200 --> 00:13:23,200
but we are mostly listing ways this can

169
00:13:21,400 --> 00:13:25,270
be done and whether a particular

170
00:13:23,200 --> 00:13:30,460
resource directory that is discovered is

171
00:13:25,270 --> 00:13:33,819
actually useful in for a node that's a

172
00:13:30,460 --> 00:13:35,170
completely different question and there

173
00:13:33,820 --> 00:13:39,910
will be implementation specific

174
00:13:35,170 --> 00:13:42,459
considerations that play a role here so

175
00:13:39,910 --> 00:13:47,100
I think just pointing to the thing and

176
00:13:42,460 --> 00:13:52,300
using language that says this is one way

177
00:13:47,100 --> 00:14:02,710
to to configure things I think is the

178
00:13:52,300 --> 00:14:05,800
way forward or akarin and two data

179
00:14:02,710 --> 00:14:08,050
points um I can second Carsten that

180
00:14:05,800 --> 00:14:10,390
normative references can be an issue I

181
00:14:08,050 --> 00:14:12,040
have one quarter of a draft in L which

182
00:14:10,390 --> 00:14:15,090
has been for years waiting for RP to

183
00:14:12,040 --> 00:14:17,349
finish that was maybe a mistake to put I

184
00:14:15,090 --> 00:14:19,450
normally reference which was not

185
00:14:17,350 --> 00:14:21,460
strictly needed it was nice but it

186
00:14:19,450 --> 00:14:24,400
wasn't strictly needed so would have

187
00:14:21,460 --> 00:14:26,020
made sense informative and then on

188
00:14:24,400 --> 00:14:27,850
discovery us at large

189
00:14:26,020 --> 00:14:29,890
as you mentioned there's some probably

190
00:14:27,850 --> 00:14:31,570
other documents coming on discovery I

191
00:14:29,890 --> 00:14:34,330
think you're spot on on that there's a

192
00:14:31,570 --> 00:14:37,060
lot of discovery discussions ongoing on

193
00:14:34,330 --> 00:14:39,520
this pace right now I mean in the web of

194
00:14:37,060 --> 00:14:41,560
things on under discovering theories and

195
00:14:39,520 --> 00:14:45,220
hackathons many discovery discussions

196
00:14:41,560 --> 00:14:47,589
etc so most likely we will have more

197
00:14:45,220 --> 00:14:50,770
discovery related documents coming into

198
00:14:47,589 --> 00:14:54,450
space in a near future and that's

199
00:14:50,770 --> 00:14:54,449
something maybe take into account here

200
00:14:57,660 --> 00:15:04,329
now I'm Stewart Churchill from Apple

201
00:15:00,360 --> 00:15:07,839
Carsten you said something that confused

202
00:15:04,330 --> 00:15:12,880
me and maybe you can explain you said

203
00:15:07,839 --> 00:15:14,830
this reference to our DD n SSD is not

204
00:15:12,880 --> 00:15:17,290
about discovering the resources it's

205
00:15:14,830 --> 00:15:19,209
about discovering the directory but

206
00:15:17,290 --> 00:15:21,880
that's not remotely what that document

207
00:15:19,209 --> 00:15:25,119
says if you want to discover the

208
00:15:21,880 --> 00:15:27,279
directory that is a five minute task we

209
00:15:25,120 --> 00:15:29,770
can design that right here you pick a

210
00:15:27,279 --> 00:15:31,959
service type pick a unique string red

211
00:15:29,770 --> 00:15:34,449
suit with Ayane and then called the API

212
00:15:31,959 --> 00:15:36,849
on your platform to say I have a thing

213
00:15:34,450 --> 00:15:39,459
it's called the resource directory and

214
00:15:36,850 --> 00:15:41,470
I'm either offering one or I'm looking

215
00:15:39,459 --> 00:15:43,029
for one done I've just explained

216
00:15:41,470 --> 00:15:44,500
everything you need to know to advertise

217
00:15:43,029 --> 00:15:46,709
the service and there are a thousand

218
00:15:44,500 --> 00:15:49,870
other services that advertise that way

219
00:15:46,709 --> 00:15:51,310
but there's really no if if there's an

220
00:15:49,870 --> 00:15:53,800
internet draft for this it's not even

221
00:15:51,310 --> 00:15:57,300
one page long it says here's the surface

222
00:15:53,800 --> 00:16:00,010
type publish it and search for it

223
00:15:57,300 --> 00:16:02,770
what that draft talks about is how you

224
00:16:00,010 --> 00:16:04,390
map the resources that would be in a

225
00:16:02,770 --> 00:16:06,600
resource directory into their

226
00:16:04,390 --> 00:16:08,709
equivalents using TNS service discovery

227
00:16:06,600 --> 00:16:11,170
so that you don't have a resource

228
00:16:08,709 --> 00:16:13,000
directory at all so it's not about

229
00:16:11,170 --> 00:16:14,520
discovering the resource directory it's

230
00:16:13,000 --> 00:16:18,120
about making the resource directory

231
00:16:14,520 --> 00:16:20,380
unnecessary so I'm not standing here

232
00:16:18,120 --> 00:16:22,540
expressing an opinion on either side of

233
00:16:20,380 --> 00:16:24,310
that I'm just confused because what you

234
00:16:22,540 --> 00:16:27,069
said doesn't reflect what's being

235
00:16:24,310 --> 00:16:30,369
discussed here I think I can clarify

236
00:16:27,070 --> 00:16:32,470
this from here on what we what we had in

237
00:16:30,370 --> 00:16:36,250
the resource directory draft are so far

238
00:16:32,470 --> 00:16:37,720
was to say that for the link to the

239
00:16:36,250 --> 00:16:39,320
resource directory that we are

240
00:16:37,720 --> 00:16:43,190
expressing in the discovery

241
00:16:39,320 --> 00:16:45,680
as for the resource directory if we the

242
00:16:43,190 --> 00:16:48,440
way to express that in our dgn SST is

243
00:16:45,680 --> 00:16:53,510
just as if that link were put into a

244
00:16:48,440 --> 00:16:56,330
resource directory and that means that

245
00:16:53,510 --> 00:16:59,330
all the ways of how is the path encoded

246
00:16:56,330 --> 00:17:02,060
in the text record etc we didn't want to

247
00:16:59,330 --> 00:17:05,449
spell out again and in fact we had

248
00:17:02,060 --> 00:17:08,060
spelled out wrongly by using and

249
00:17:05,449 --> 00:17:11,810
outdated by using by referring to the

250
00:17:08,060 --> 00:17:15,050
old way that our DK an SSD did that so

251
00:17:11,810 --> 00:17:17,720
yes we could do that but then we would

252
00:17:15,050 --> 00:17:20,810
probably pin down the flexibility of our

253
00:17:17,720 --> 00:17:23,540
d TN SSD because that is still in the

254
00:17:20,810 --> 00:17:27,679
process of deciding a are there subtypes

255
00:17:23,540 --> 00:17:30,560
involved or not and how does protocol

256
00:17:27,680 --> 00:17:36,290
negotiation fit into that and that is

257
00:17:30,560 --> 00:17:39,440
not fully done yet ok so thanks for that

258
00:17:36,290 --> 00:17:43,610
explanation that makes sense now my

259
00:17:39,440 --> 00:17:46,060
suggestion would be it seems that

260
00:17:43,610 --> 00:17:48,379
discovering the resource directory

261
00:17:46,060 --> 00:17:52,220
doesn't need all the full full

262
00:17:48,380 --> 00:17:53,810
generality of the subtypes and the text

263
00:17:52,220 --> 00:17:56,120
record path and all the other things you

264
00:17:53,810 --> 00:17:57,950
are talking about maybe there's a way

265
00:17:56,120 --> 00:17:59,510
forward where you define the subset

266
00:17:57,950 --> 00:18:02,150
that's needed to discover a resource

267
00:17:59,510 --> 00:18:04,340
directory and that might be the empty

268
00:18:02,150 --> 00:18:06,170
set it might be just here's a service

269
00:18:04,340 --> 00:18:12,800
type registered with Ayana

270
00:18:06,170 --> 00:18:16,070
done and and then let the DNS SD

271
00:18:12,800 --> 00:18:17,659
resource directory establish the full

272
00:18:16,070 --> 00:18:20,980
generality of how other things are

273
00:18:17,660 --> 00:18:24,980
encoding because I think if you want to

274
00:18:20,980 --> 00:18:27,050
if you want to publish this RFC and have

275
00:18:24,980 --> 00:18:28,520
implementations that are discoverable on

276
00:18:27,050 --> 00:18:32,080
the network by clients that are looking

277
00:18:28,520 --> 00:18:35,810
for one then not saying how to do that

278
00:18:32,080 --> 00:18:37,699
leaves people guessing so specify the

279
00:18:35,810 --> 00:18:39,139
subset that you need to specify to have

280
00:18:37,700 --> 00:18:41,920
a workable solution that would be my

281
00:18:39,140 --> 00:18:41,920
recommendation

282
00:18:46,350 --> 00:18:53,530
so I gather we're talking about this

283
00:18:48,820 --> 00:18:55,590
paragraph in four good morning yeah a

284
00:18:53,530 --> 00:18:58,300
bit further down so here it says that

285
00:18:55,590 --> 00:19:03,429
this is described there and if you go to

286
00:18:58,300 --> 00:19:06,129
the end of that section a bit up yeah

287
00:19:03,430 --> 00:19:09,040
here so those are the three points that

288
00:19:06,130 --> 00:19:12,550
are recommended because they were added

289
00:19:09,040 --> 00:19:15,250
rather Lake in then there was the

290
00:19:12,550 --> 00:19:18,850
question about how how shoot application

291
00:19:15,250 --> 00:19:20,890
authors just do this as give some

292
00:19:18,850 --> 00:19:22,689
guidance on what to do and not only list

293
00:19:20,890 --> 00:19:30,130
options and this is the guidance that

294
00:19:22,690 --> 00:19:34,030
was added yeah so what

295
00:19:30,130 --> 00:19:39,190
Stewart has proposed would be to take

296
00:19:34,030 --> 00:19:42,370
the relevant progress from re DNS St and

297
00:19:39,190 --> 00:19:46,630
put them in yes

298
00:19:42,370 --> 00:19:50,469
does that make sense procedurally

299
00:19:46,630 --> 00:19:55,750
doesn't make sense from what would

300
00:19:50,470 --> 00:19:58,540
actually be in there I'm I'm still I'm

301
00:19:55,750 --> 00:20:00,490
not sure whether this will cover all the

302
00:19:58,540 --> 00:20:03,760
aspects of protocol negotiation that

303
00:20:00,490 --> 00:20:09,910
will that kind of follow from the ARD

304
00:20:03,760 --> 00:20:12,190
DNS st mapping so this is there hasn't

305
00:20:09,910 --> 00:20:13,750
been published update to or DG a

306
00:20:12,190 --> 00:20:16,510
necessity so what you're looking at is

307
00:20:13,750 --> 00:20:18,910
is not the the very latest version Peter

308
00:20:16,510 --> 00:20:22,450
has already removed some of the the old

309
00:20:18,910 --> 00:20:24,520
parts in there that are that that we

310
00:20:22,450 --> 00:20:31,960
found at EF we're not really relevant

311
00:20:24,520 --> 00:20:34,720
anymore but the way basically the the

312
00:20:31,960 --> 00:20:38,230
remaining question that would need to be

313
00:20:34,720 --> 00:20:43,000
solved for this to be copy able into Rd

314
00:20:38,230 --> 00:20:49,720
is how do we express the the protocol

315
00:20:43,000 --> 00:20:52,180
part do we just register a teen SST

316
00:20:49,720 --> 00:20:54,490
service type that says and this always

317
00:20:52,180 --> 00:20:58,180
unconditionally goes to coop colon slash

318
00:20:54,490 --> 00:21:03,550
slash and not qu+ TCP or anything else

319
00:20:58,180 --> 00:21:05,860
to build the beautiful here I will the

320
00:21:03,550 --> 00:21:07,659
will would that be better than with

321
00:21:05,860 --> 00:21:09,729
subtypes of what I take from the

322
00:21:07,660 --> 00:21:14,320
discussion we had with figured last time

323
00:21:09,730 --> 00:21:16,150
was that subtypes are not not designed

324
00:21:14,320 --> 00:21:18,460
for protocol negotiation and we

325
00:21:16,150 --> 00:21:23,860
shouldn't we shouldn't use it for that

326
00:21:18,460 --> 00:21:26,980
and just have an have a service type for

327
00:21:23,860 --> 00:21:30,459
each individual protocol this is bound

328
00:21:26,980 --> 00:21:32,710
to so if that's what we would go for and

329
00:21:30,460 --> 00:21:35,800
it looks like that but our DD + SSD

330
00:21:32,710 --> 00:21:41,140
isn't under direct way to publication

331
00:21:35,800 --> 00:21:47,470
yet so it's not set in stone then that

332
00:21:41,140 --> 00:21:51,940
would be the way I think I can offer you

333
00:21:47,470 --> 00:21:55,420
a suggestion about that I'll start with

334
00:21:51,940 --> 00:21:58,000
a simple example if we take a very

335
00:21:55,420 --> 00:22:00,220
familiar service like SSH and you ask

336
00:21:58,000 --> 00:22:03,190
how do you advertise that and the answer

337
00:22:00,220 --> 00:22:05,380
is its unique I on a service type is

338
00:22:03,190 --> 00:22:07,720
underscore Association underscore TCP

339
00:22:05,380 --> 00:22:09,220
you put that in the API when you offer

340
00:22:07,720 --> 00:22:12,540
it you put that in the API when you look

341
00:22:09,220 --> 00:22:18,340
for it done that's how you discover SSH

342
00:22:12,540 --> 00:22:20,530
so here that you're talking about

343
00:22:18,340 --> 00:22:24,010
something that isn't an issue with SSH

344
00:22:20,530 --> 00:22:28,510
because SSH runs over TCP it doesn't run

345
00:22:24,010 --> 00:22:30,610
over UDP or SCTP or quick so if I've got

346
00:22:28,510 --> 00:22:33,730
an ssh client and you've got an ssh

347
00:22:30,610 --> 00:22:37,179
server we know they can connect as long

348
00:22:33,730 --> 00:22:39,400
as they're on a platform that has tcp my

349
00:22:37,180 --> 00:22:45,070
the way i look at what you're describing

350
00:22:39,400 --> 00:22:48,430
here is i would fill out the Ayana form

351
00:22:45,070 --> 00:22:51,370
have a string assigned record in this

352
00:22:48,430 --> 00:22:54,400
RFC what the string is so that

353
00:22:51,370 --> 00:22:58,300
implementers know what it is and that

354
00:22:54,400 --> 00:23:05,080
string means resource directory over

355
00:22:58,300 --> 00:23:07,389
co-op over UDP now if in the future

356
00:23:05,080 --> 00:23:11,860
something is implemented there is co-op

357
00:23:07,390 --> 00:23:14,080
over TCP that is a different server

358
00:23:11,860 --> 00:23:15,909
types drink in the eye on a registry

359
00:23:14,080 --> 00:23:21,460
because it's a different implementation

360
00:23:15,910 --> 00:23:24,070
and the reason I say that is if you have

361
00:23:21,460 --> 00:23:26,620
a resource directory that only supports

362
00:23:24,070 --> 00:23:29,080
karpova TCP and I have a client that

363
00:23:26,620 --> 00:23:32,290
only support scope of UDP they can't

364
00:23:29,080 --> 00:23:35,949
talk to each other so for me to discover

365
00:23:32,290 --> 00:23:37,600
you is of zero benefit to the user the

366
00:23:35,950 --> 00:23:40,929
user wants to find things that they can

367
00:23:37,600 --> 00:23:44,949
talk to so if in the future you have

368
00:23:40,929 --> 00:23:46,870
co-op over quick if I don't support care

369
00:23:44,950 --> 00:23:53,290
over quick discovering that is useless

370
00:23:46,870 --> 00:23:55,270
as well so so it's common to think that

371
00:23:53,290 --> 00:23:56,830
you can have one application protocol

372
00:23:55,270 --> 00:23:59,470
running over three different transports

373
00:23:56,830 --> 00:24:00,909
and that's the same thing the way I look

374
00:23:59,470 --> 00:24:04,210
at it that's not the same thing that's

375
00:24:00,910 --> 00:24:06,730
three different things and the client

376
00:24:04,210 --> 00:24:08,830
can indicate which of those three or all

377
00:24:06,730 --> 00:24:10,870
of them it's interested in and the

378
00:24:08,830 --> 00:24:15,549
server can indicate which ones it offers

379
00:24:10,870 --> 00:24:19,360
so that that is my recommendation when

380
00:24:15,549 --> 00:24:21,549
when questions like this come up for NFS

381
00:24:19,360 --> 00:24:23,409
can run over TCP or UDP in the rare case

382
00:24:21,549 --> 00:24:25,990
is that that question comes up that

383
00:24:23,410 --> 00:24:28,690
that's the guidance I give people and it

384
00:24:25,990 --> 00:24:31,960
means in this document you you specify

385
00:24:28,690 --> 00:24:35,440
one or or if you're supporting TCP as

386
00:24:31,960 --> 00:24:37,809
well you specify - I'm guessing Rd /

387
00:24:35,440 --> 00:24:39,309
quick is not yet a thing okay so you

388
00:24:37,809 --> 00:24:41,049
don't need to specify that that could be

389
00:24:39,309 --> 00:24:42,700
a future RFC if and when that becomes

390
00:24:41,049 --> 00:24:45,070
real but for the ones that are real

391
00:24:42,700 --> 00:24:49,210
today specify those in concrete terms

392
00:24:45,070 --> 00:24:52,178
yeah yeah and I think that this is where

393
00:24:49,210 --> 00:24:56,200
Rd Genesis T is going I'm just saying if

394
00:24:52,179 --> 00:24:58,270
we say if we say that here then we are

395
00:24:56,200 --> 00:25:03,700
making that decision for RDG a necessity

396
00:24:58,270 --> 00:25:07,120
it look looks like me now that like this

397
00:25:03,700 --> 00:25:11,260
is this is a way we can go forward I'd

398
00:25:07,120 --> 00:25:17,320
like to have bit more on this about this

399
00:25:11,260 --> 00:25:21,660
on the mailing list maybe but yeah it

400
00:25:17,320 --> 00:25:25,629
changed me from what I'm hearing that

401
00:25:21,660 --> 00:25:29,890
there are some details to be sorted out

402
00:25:25,630 --> 00:25:35,080
and in that case this text we're looking

403
00:25:29,890 --> 00:25:37,720
at on the screen is in fact a normative

404
00:25:35,080 --> 00:25:43,030
forward reference to something that's

405
00:25:37,720 --> 00:25:44,080
not yet decided so if it's possible and

406
00:25:43,030 --> 00:25:46,290
I know you don't to slow down the

407
00:25:44,080 --> 00:25:49,659
document if it's possible

408
00:25:46,290 --> 00:25:53,080
don't try to boil the ocean if there are

409
00:25:49,660 --> 00:25:55,210
open issues in our ddns SD then those

410
00:25:53,080 --> 00:25:58,120
can take that time being discussed but

411
00:25:55,210 --> 00:26:01,170
if you can figure out the subset that is

412
00:25:58,120 --> 00:26:03,429
necessary to find in our D server and

413
00:26:01,170 --> 00:26:05,230
and I'll come back to this example again

414
00:26:03,430 --> 00:26:07,210
I just told you how to find an ssh

415
00:26:05,230 --> 00:26:08,530
server and it didn't require a working

416
00:26:07,210 --> 00:26:10,960
group and lots of discussions

417
00:26:08,530 --> 00:26:15,730
it's here's the string ask the network

418
00:26:10,960 --> 00:26:20,790
for that string if there's some reason

419
00:26:15,730 --> 00:26:23,650
that it is not that simple then then

420
00:26:20,790 --> 00:26:26,680
then we need to resolve that because it

421
00:26:23,650 --> 00:26:28,990
shouldn't be that complicated so the

422
00:26:26,680 --> 00:26:32,380
reason why I think it's not that simple

423
00:26:28,990 --> 00:26:38,080
and it's not exactly like the various

424
00:26:32,380 --> 00:26:41,050
this over DNS overall NFS is that unlike

425
00:26:38,080 --> 00:26:44,199
those protocols in coop the applications

426
00:26:41,050 --> 00:26:46,180
can rely on the core protocol to have to

427
00:26:44,200 --> 00:26:48,610
have the same usable semantics over all

428
00:26:46,180 --> 00:26:55,090
those on transport and they can rely on

429
00:26:48,610 --> 00:26:57,189
proxies so even if if a resource

430
00:26:55,090 --> 00:27:00,820
directory client discovers a co-op plus

431
00:26:57,190 --> 00:27:03,900
TC could if if we if we used subtypes

432
00:27:00,820 --> 00:27:07,330
whatsoever to do protocol negotiation in

433
00:27:03,900 --> 00:27:09,160
over again SSD and I'm not saying we

434
00:27:07,330 --> 00:27:11,139
should I'm just saying that this would

435
00:27:09,160 --> 00:27:13,930
be an option we should still consider is

436
00:27:11,140 --> 00:27:17,890
that if the client has come as the coop

437
00:27:13,930 --> 00:27:19,990
plus TCP URI but has a proxy it can use

438
00:27:17,890 --> 00:27:24,100
it could just go to the proxy and say

439
00:27:19,990 --> 00:27:27,490
hey please come please come please to my

440
00:27:24,100 --> 00:27:30,669
RT registration for my for my coop your

441
00:27:27,490 --> 00:27:37,120
ID over that proxy and that would still

442
00:27:30,670 --> 00:27:39,570
work with Cabot's but those caveats are

443
00:27:37,120 --> 00:27:42,060
generic to what is the pride discovered

444
00:27:39,570 --> 00:27:44,010
coop over quick and its proxy doesn't

445
00:27:42,060 --> 00:27:46,889
support quick this

446
00:27:44,010 --> 00:27:48,600
I think bit of a magic wand waving and

447
00:27:46,890 --> 00:27:51,060
then a miracle happened step here which

448
00:27:48,600 --> 00:27:53,340
they can't talk to be but I assumes that

449
00:27:51,060 --> 00:27:56,429
something else on their network can and

450
00:27:53,340 --> 00:27:59,760
that seems like certainly you could set

451
00:27:56,430 --> 00:28:01,650
up a demo where you can construct it

452
00:27:59,760 --> 00:28:03,030
that way but as a vendor shipping a

453
00:28:01,650 --> 00:28:05,310
product can you assume that every

454
00:28:03,030 --> 00:28:08,879
customer has these magic gateways that

455
00:28:05,310 --> 00:28:15,330
know everything no um but it can still

456
00:28:08,880 --> 00:28:17,250
then fail as later step I just I just

457
00:28:15,330 --> 00:28:20,159
want to make sure that we don't we don't

458
00:28:17,250 --> 00:28:23,190
overlook this possibility but it looks

459
00:28:20,160 --> 00:28:27,570
to me more and more like we just do as

460
00:28:23,190 --> 00:28:31,770
you suggest so I just typed into the

461
00:28:27,570 --> 00:28:37,860
node tab what I think the substance is

462
00:28:31,770 --> 00:28:39,900
we're talking about so yeah you're

463
00:28:37,860 --> 00:28:42,600
asking about Alice Lloyd UDP and

464
00:28:39,900 --> 00:28:46,520
underscore TCP and those will not be

465
00:28:42,600 --> 00:28:49,949
sufficient to cover the requirements of

466
00:28:46,520 --> 00:28:53,850
co-op because it can use more transports

467
00:28:49,950 --> 00:28:56,690
than UDP and TCP and in DNS SP the

468
00:28:53,850 --> 00:28:59,820
underscore UDP and underscore t CP is

469
00:28:56,690 --> 00:29:01,890
generally as I understand considered

470
00:28:59,820 --> 00:29:03,929
something that was designed with the

471
00:29:01,890 --> 00:29:09,420
mindset of the time when it was decided

472
00:29:03,930 --> 00:29:11,400
designed and underscored UDP is what

473
00:29:09,420 --> 00:29:14,490
more honest quit UDP and underscore TCP

474
00:29:11,400 --> 00:29:16,410
is what most applications use because

475
00:29:14,490 --> 00:29:18,140
that's what available but if there is

476
00:29:16,410 --> 00:29:21,200
anything more like co-op over WebSockets

477
00:29:18,140 --> 00:29:26,390
we still need to disambiguate between

478
00:29:21,200 --> 00:29:26,390
WebSockets and tcp plain TCP for example

479
00:29:26,510 --> 00:29:32,190
what Carsten is suggesting that would

480
00:29:30,570 --> 00:29:35,879
work for the case that we're talking

481
00:29:32,190 --> 00:29:40,200
about what what christian is talking

482
00:29:35,880 --> 00:29:43,620
about it is true but I don't to confuse

483
00:29:40,200 --> 00:29:48,510
the discussion here the if we could go

484
00:29:43,620 --> 00:29:50,820
back in time 20 years then I would not

485
00:29:48,510 --> 00:29:52,950
have inherited the underscore TCP and

486
00:29:50,820 --> 00:29:54,960
UDP from the SIV spec Oh

487
00:29:52,950 --> 00:29:58,830
just had a single label underscore srv4

488
00:29:54,960 --> 00:30:00,809
service and that that label would just

489
00:29:58,830 --> 00:30:02,760
be a placeholder to give a delegation

490
00:30:00,809 --> 00:30:06,120
point in the DNS hierarchy and it would

491
00:30:02,760 --> 00:30:08,190
have no semantic meaning so we have this

492
00:30:06,120 --> 00:30:10,889
little historical footnote that you

493
00:30:08,190 --> 00:30:14,029
point out it's not actually a problem

494
00:30:10,889 --> 00:30:18,269
for what we're talking we're right now

495
00:30:14,029 --> 00:30:20,010
right now Christian you're talking about

496
00:30:18,269 --> 00:30:22,440
all the different transports that kerb

497
00:30:20,010 --> 00:30:24,600
can use can you list all those

498
00:30:22,440 --> 00:30:26,789
transports that are currently specified

499
00:30:24,600 --> 00:30:31,709
and implemented how big is the set that

500
00:30:26,789 --> 00:30:34,799
we're talking about it's 2 times 3 it's

501
00:30:31,710 --> 00:30:41,039
UDP TCP and WebSockets all in their

502
00:30:34,799 --> 00:30:44,279
secured and secured versions so it's

503
00:30:41,039 --> 00:30:48,929
co-op over UDP Plus D TLS that's co-op s

504
00:30:44,279 --> 00:30:57,299
Cove over UDP and TCP TLS and WebSockets

505
00:30:48,929 --> 00:30:59,010
possibly with TLS okay so six is getting

506
00:30:57,299 --> 00:31:03,029
to be kind of a long list of six

507
00:30:59,010 --> 00:31:06,779
independent services to list so I agree

508
00:31:03,029 --> 00:31:08,880
that's that does make this more

509
00:31:06,779 --> 00:31:10,710
complicated than SSH which really

510
00:31:08,880 --> 00:31:18,510
doesn't have six different ways of

511
00:31:10,710 --> 00:31:22,799
connecting to it the so I'll offer this

512
00:31:18,510 --> 00:31:26,340
as an example of how other things have

513
00:31:22,799 --> 00:31:30,710
been done when your client does DNS

514
00:31:26,340 --> 00:31:34,949
update it needs to find the server for

515
00:31:30,710 --> 00:31:38,100
the hostname you're using that handles

516
00:31:34,950 --> 00:31:44,130
DNS update and that can be done in

517
00:31:38,100 --> 00:31:46,110
clear-text or it can be done over TCP or

518
00:31:44,130 --> 00:31:50,340
it can put in over TLS over TCP to

519
00:31:46,110 --> 00:31:53,219
prevent eavesdropping so there are three

520
00:31:50,340 --> 00:31:56,309
different service types because even

521
00:31:53,220 --> 00:31:58,980
though to a human being DNS update is

522
00:31:56,309 --> 00:32:01,620
just a thing I want to update my host

523
00:31:58,980 --> 00:32:05,220
name in secure secure I don't care

524
00:32:01,620 --> 00:32:06,320
maybe you should care at a protocol

525
00:32:05,220 --> 00:32:11,179
level if

526
00:32:06,320 --> 00:32:13,789
you've got a client that only uses DNS

527
00:32:11,179 --> 00:32:15,169
over TLS for updates and the server

528
00:32:13,789 --> 00:32:17,419
doesn't support that then they can't

529
00:32:15,169 --> 00:32:19,700
talk to each other so the server is the

530
00:32:17,419 --> 00:32:22,429
client is specifically looking for and I

531
00:32:19,700 --> 00:32:27,860
think the service type is DNS - update -

532
00:32:22,429 --> 00:32:31,490
TLS so so we have three service types we

533
00:32:27,860 --> 00:32:36,019
have DNS update UDP DNS update or TCP

534
00:32:31,490 --> 00:32:38,779
and DNS update - TLS TCP and the client

535
00:32:36,019 --> 00:32:42,169
looks typically only for the TLS one if

536
00:32:38,779 --> 00:32:46,789
it wants to protect against

537
00:32:42,169 --> 00:32:48,980
eavesdropping so so that is a model for

538
00:32:46,789 --> 00:32:50,450
you to think about I'm not saying you

539
00:32:48,980 --> 00:32:53,059
blindly apply it here but I'm giving

540
00:32:50,450 --> 00:32:58,070
that as one data point of what has been

541
00:32:53,059 --> 00:33:00,649
done for DNS push notifications we

542
00:32:58,070 --> 00:33:05,389
actually only define that to use TLS it

543
00:33:00,649 --> 00:33:08,029
doesn't have an insecure option so but

544
00:33:05,389 --> 00:33:11,299
it so I'm again I'm mentioning that as a

545
00:33:08,029 --> 00:33:12,769
data point to consider I know in core ID

546
00:33:11,299 --> 00:33:15,799
you have different constraints and

547
00:33:12,769 --> 00:33:21,549
having the insecure version available it

548
00:33:15,799 --> 00:33:25,940
makes sense anyway I think the the

549
00:33:21,549 --> 00:33:31,220
problem here would be that we tend to

550
00:33:25,940 --> 00:33:34,879
use the resource type and the - TLS we

551
00:33:31,220 --> 00:33:40,490
have in my example here that would

552
00:33:34,879 --> 00:33:43,959
impinge on that resource type I think

553
00:33:40,490 --> 00:33:47,240
we've moved forward in RDG and SSD on

554
00:33:43,960 --> 00:33:51,110
explicitly noting the service type that

555
00:33:47,240 --> 00:33:55,340
that your eye is usable for in the

556
00:33:51,110 --> 00:33:57,439
export and not trying to come up with a

557
00:33:55,340 --> 00:33:59,658
service type from the resource form in

558
00:33:57,440 --> 00:34:03,529
the research tab because those just

559
00:33:59,659 --> 00:34:05,830
don't match so well that we can have a

560
00:34:03,529 --> 00:34:10,270
one on one mapping and even if they did

561
00:34:05,830 --> 00:34:12,679
it would be very hard to mechanically

562
00:34:10,270 --> 00:34:16,219
convert them and through sync to

563
00:34:12,679 --> 00:34:18,330
registries so it would not be another

564
00:34:16,219 --> 00:34:21,439
tribute

565
00:34:18,330 --> 00:34:26,400
maybe another way to look at this is

566
00:34:21,440 --> 00:34:30,840
pretend the core Rd DN SSD documents

567
00:34:26,400 --> 00:34:33,360
never existed or suppose it does exist

568
00:34:30,840 --> 00:34:35,400
but it doesn't get published take that

569
00:34:33,360 --> 00:34:38,490
off the table what do you want to write

570
00:34:35,400 --> 00:34:41,280
in this document about how a client

571
00:34:38,489 --> 00:34:42,689
would discover the Rd on the network so

572
00:34:41,280 --> 00:34:46,679
it can then talk to it to do further

573
00:34:42,690 --> 00:34:49,050
discovery so at least figure that bit

574
00:34:46,679 --> 00:34:50,670
out and and I understand the details

575
00:34:49,050 --> 00:34:53,400
you're talking about they make it more

576
00:34:50,670 --> 00:34:57,750
complicated than the IPP or the SSH case

577
00:34:53,400 --> 00:35:02,190
but whatever those complications are put

578
00:34:57,750 --> 00:35:04,800
aside the full generality of RDD n SSD

579
00:35:02,190 --> 00:35:10,290
which which tries to map all of these

580
00:35:04,800 --> 00:35:13,230
other attributes just forget all that

581
00:35:10,290 --> 00:35:14,730
just ask the simple question I have a

582
00:35:13,230 --> 00:35:16,650
computer on the network I've got a

583
00:35:14,730 --> 00:35:18,930
Raspberry Pi or something I've got my

584
00:35:16,650 --> 00:35:21,480
home gateway running in our D how do I

585
00:35:18,930 --> 00:35:23,669
find it and maybe the question is scope

586
00:35:21,480 --> 00:35:27,500
down that way it won't take quite so

587
00:35:23,670 --> 00:35:32,240
long to come to agreement on the answer

588
00:35:27,500 --> 00:35:35,880
yeah I think that's useful and I think

589
00:35:32,240 --> 00:35:39,109
unless there's another opinion I think

590
00:35:35,880 --> 00:35:41,820
we can take the details to the list and

591
00:35:39,110 --> 00:35:44,690
I think that this is should be

592
00:35:41,820 --> 00:35:51,180
manageable that the children delay

593
00:35:44,690 --> 00:35:53,490
resource for a tree a lot yes okay so it

594
00:35:51,180 --> 00:35:59,430
seems that was a useful discussion to

595
00:35:53,490 --> 00:36:02,899
have yes thank you okay should I go back

596
00:35:59,430 --> 00:36:02,899
to your slides or are we done

597
00:36:09,600 --> 00:36:16,420
[Music]

598
00:36:11,010 --> 00:36:20,260
okay good

599
00:36:16,420 --> 00:36:22,329
yeah so we want you to do the same more

600
00:36:20,260 --> 00:36:25,690
units discussion but I think Alexei

601
00:36:22,329 --> 00:36:29,349
hasn't returned from acne yet so what we

602
00:36:25,690 --> 00:36:32,980
do is we're going to do the core

603
00:36:29,349 --> 00:36:35,020
applications discussion now and we use a

604
00:36:32,980 --> 00:36:38,500
format for that that we actually have

605
00:36:35,020 --> 00:36:41,680
been using in interims but has not yet

606
00:36:38,500 --> 00:36:45,880
been using face to face meetings which

607
00:36:41,680 --> 00:36:48,759
as we will just look at the notepad

608
00:36:45,880 --> 00:36:50,710
where Klaus has already written up the

609
00:36:48,760 --> 00:37:03,130
complete results of the discussion and

610
00:36:50,710 --> 00:37:10,420
we were yeah but why did you have a

611
00:37:03,130 --> 00:37:12,369
press a button - oh you you you ah you

612
00:37:10,420 --> 00:37:16,270
move the table that never moves the

613
00:37:12,369 --> 00:37:16,930
table whether particular yeah good so go

614
00:37:16,270 --> 00:37:22,180
ahead

615
00:37:16,930 --> 00:37:24,308
oh maybe given it Alex I expect you do

616
00:37:22,180 --> 00:37:40,058
the other thing first so we have the

617
00:37:24,309 --> 00:37:42,390
full rest of the time so send me more

618
00:37:40,059 --> 00:37:42,390
units

619
00:37:46,470 --> 00:37:51,310
okay so this is to continue the

620
00:37:49,180 --> 00:37:55,359
discussion we had in the previous course

621
00:37:51,310 --> 00:37:58,720
session about more units and how and if

622
00:37:55,360 --> 00:38:00,250
and should we indicate the fact that

623
00:37:58,720 --> 00:38:02,680
there are different kind of units that

624
00:38:00,250 --> 00:38:05,890
we are now proposing in there in the

625
00:38:02,680 --> 00:38:09,430
Sentinel units for history so basically

626
00:38:05,890 --> 00:38:12,129
we do have two options here we indicate

627
00:38:09,430 --> 00:38:14,890
the fact that we are using them that was

628
00:38:12,130 --> 00:38:18,220
referred to as u2 and and asterisk

629
00:38:14,890 --> 00:38:20,890
options in the previous session or we

630
00:38:18,220 --> 00:38:24,129
use units from the second registry as

631
00:38:20,890 --> 00:38:25,870
such and maybe one thing good to not

632
00:38:24,130 --> 00:38:28,000
note here is done I also sent an email

633
00:38:25,870 --> 00:38:30,580
on the other mailing list about a hour

634
00:38:28,000 --> 00:38:32,380
ago to give up every one bit of

635
00:38:30,580 --> 00:38:35,680
background on this will involve previous

636
00:38:32,380 --> 00:38:37,510
discussion they wanting to note here is

637
00:38:35,680 --> 00:38:40,180
that so we are not we are planning to

638
00:38:37,510 --> 00:38:43,810
register the unit identifiers themselves

639
00:38:40,180 --> 00:38:46,060
as such now the question is how do you

640
00:38:43,810 --> 00:38:49,630
indicate when you serialize the senemo

641
00:38:46,060 --> 00:38:51,460
using the u field how do you indicate

642
00:38:49,630 --> 00:38:53,200
that you are potentially using different

643
00:38:51,460 --> 00:38:58,030
kind of units than were originally

644
00:38:53,200 --> 00:39:00,009
proposed in them or it's no RFC but that

645
00:38:58,030 --> 00:39:01,930
of course backs you a question so why do

646
00:39:00,010 --> 00:39:02,560
you even need to indicate in the first

647
00:39:01,930 --> 00:39:06,129
place

648
00:39:02,560 --> 00:39:09,160
what's point here so can briefly

649
00:39:06,130 --> 00:39:11,230
mentioned about the the use case he had

650
00:39:09,160 --> 00:39:13,480
in mind in the previous session so I had

651
00:39:11,230 --> 00:39:17,320
a chat with him after session to get a

652
00:39:13,480 --> 00:39:19,540
bit more details on that so pretty much

653
00:39:17,320 --> 00:39:20,770
the use case here is that there are some

654
00:39:19,540 --> 00:39:23,890
cinema systems like they've been

655
00:39:20,770 --> 00:39:26,440
building in Cisco that they use the

656
00:39:23,890 --> 00:39:29,440
cinema unit field for routing cinema

657
00:39:26,440 --> 00:39:31,390
records so if your system such that you

658
00:39:29,440 --> 00:39:33,340
have say millions of sensors they're all

659
00:39:31,390 --> 00:39:35,140
sending notes in ml you're trying to

660
00:39:33,340 --> 00:39:37,390
push it all in in your college system

661
00:39:35,140 --> 00:39:38,950
and in the intermediate steps you want

662
00:39:37,390 --> 00:39:42,299
to do filtering you want to do routing

663
00:39:38,950 --> 00:39:46,720
of the information dispatching etc and

664
00:39:42,300 --> 00:39:48,460
because the units if they are consistent

665
00:39:46,720 --> 00:39:51,279
that always when you talk about speed

666
00:39:48,460 --> 00:39:53,260
it's meters per second period it's

667
00:39:51,280 --> 00:39:55,810
always only one unit for that kind of

668
00:39:53,260 --> 00:39:57,700
measurement you know that if you see

669
00:39:55,810 --> 00:40:00,069
meters per second it's something about

670
00:39:57,700 --> 00:40:01,959
speed and if you have for example

671
00:40:00,069 --> 00:40:04,900
engine replicates and only cares about

672
00:40:01,959 --> 00:40:07,868
speed you can conveniently put those

673
00:40:04,900 --> 00:40:09,969
records and that direction or vice versa

674
00:40:07,869 --> 00:40:12,039
you can filter out information that if

675
00:40:09,969 --> 00:40:14,410
you only care about speed and not for

676
00:40:12,039 --> 00:40:15,549
example radiation you see a radiation

677
00:40:14,410 --> 00:40:17,649
unit or something unit you don't

678
00:40:15,549 --> 00:40:20,559
recognize you can just drop those

679
00:40:17,650 --> 00:40:24,519
records from from your pipeline and go

680
00:40:20,559 --> 00:40:28,029
forward of course you can also use the

681
00:40:24,519 --> 00:40:29,558
name field for such as a routing but

682
00:40:28,029 --> 00:40:31,719
what this enables that you don't have to

683
00:40:29,559 --> 00:40:33,430
know those names a priori or even any

684
00:40:31,719 --> 00:40:35,979
information about the names that you can

685
00:40:33,430 --> 00:40:38,319
for example dynamically discover new

686
00:40:35,979 --> 00:40:39,759
temperature sensors just by looking at

687
00:40:38,319 --> 00:40:44,019
the fact that ok someone is now sending

688
00:40:39,759 --> 00:40:45,670
temperature information so this was

689
00:40:44,019 --> 00:40:47,828
pretty much the assumption in testing an

690
00:40:45,670 --> 00:40:51,279
RFC when we define the origin registry

691
00:40:47,829 --> 00:40:53,650
that would have one unit for for one

692
00:40:51,279 --> 00:40:56,949
kind of measurement as discussed in the

693
00:40:53,650 --> 00:40:59,499
previous session I mean that assumption

694
00:40:56,949 --> 00:41:02,259
didn't hold very well in the end but we

695
00:40:59,499 --> 00:41:03,848
were seeing more and more use for having

696
00:41:02,259 --> 00:41:06,099
richer kind of units and pretty much

697
00:41:03,849 --> 00:41:08,640
accurate okay we need a way to support

698
00:41:06,099 --> 00:41:11,650
also the richer kind of units

699
00:41:08,640 --> 00:41:14,078
another question is like how do we

700
00:41:11,650 --> 00:41:18,249
accommodate these two kind of

701
00:41:14,079 --> 00:41:20,259
conflicting requirements so one way to

702
00:41:18,249 --> 00:41:22,988
accommodate that is to have some kind of

703
00:41:20,259 --> 00:41:24,940
an indication that hey here is a unit

704
00:41:22,989 --> 00:41:27,789
where the original assumption doesn't

705
00:41:24,940 --> 00:41:29,469
hold anymore what you can do with that

706
00:41:27,789 --> 00:41:30,940
information for example you can erase an

707
00:41:29,469 --> 00:41:32,680
error that hey there's something

708
00:41:30,940 --> 00:41:33,190
happening I may need to understand but I

709
00:41:32,680 --> 00:41:35,319
don't

710
00:41:33,190 --> 00:41:37,359
or perhaps you can reroute that piece of

711
00:41:35,319 --> 00:41:41,920
data to someone that might be more

712
00:41:37,359 --> 00:41:44,769
capable of understanding so if you want

713
00:41:41,920 --> 00:41:47,109
to cover this use case we did go I think

714
00:41:44,769 --> 00:41:49,689
about different options for for doing

715
00:41:47,109 --> 00:41:51,160
that considered half a dozen different

716
00:41:49,690 --> 00:41:54,819
options going from new versions of sin

717
00:41:51,160 --> 00:41:57,308
ml the u2 field etc all of those turned

718
00:41:54,819 --> 00:41:59,410
out to be like way too much complexity

719
00:41:57,309 --> 00:42:03,160
given like what a simple thing we're

720
00:41:59,410 --> 00:42:08,440
trying to achieve here so pretty much

721
00:42:03,160 --> 00:42:09,819
the smallest impact solution that we

722
00:42:08,440 --> 00:42:12,489
came up with was actually the one that

723
00:42:09,819 --> 00:42:13,660
Carson briefly proposed in the in the

724
00:42:12,489 --> 00:42:13,839
end of the previous session I don't know

725
00:42:13,660 --> 00:42:18,660
if

726
00:42:13,839 --> 00:42:22,719
maybe half joking about but still I so

727
00:42:18,660 --> 00:42:26,140
putting putting an asterisk in the field

728
00:42:22,719 --> 00:42:28,839
and basically that would be a flag in

729
00:42:26,140 --> 00:42:31,089
the unit that hey this unit has

730
00:42:28,839 --> 00:42:34,119
different kind of characteristics than

731
00:42:31,089 --> 00:42:36,999
the units that used to be in the RFC so

732
00:42:34,119 --> 00:42:40,319
there is he an example at say km/h you'd

733
00:42:36,999 --> 00:42:43,299
put an frank character before after a

734
00:42:40,319 --> 00:42:44,979
special character that is not used you

735
00:42:43,299 --> 00:42:47,589
can easily determine that it's not one

736
00:42:44,979 --> 00:42:49,180
of the unit characters here we using

737
00:42:47,589 --> 00:42:52,450
Asterix for that because it seems to be

738
00:42:49,180 --> 00:42:54,879
a safe bet and then you all the units

739
00:42:52,450 --> 00:42:58,529
that come from the second registry yield

740
00:42:54,880 --> 00:43:01,630
prefix or suffix 10 with that flag of

741
00:42:58,529 --> 00:43:03,819
course this is not doesn't come for free

742
00:43:01,630 --> 00:43:05,920
that's an extra byte of overhead every

743
00:43:03,819 --> 00:43:08,440
time you use it that's not probably a

744
00:43:05,920 --> 00:43:09,670
really a big issue you if you really

745
00:43:08,440 --> 00:43:11,559
care about the last fight you probably

746
00:43:09,670 --> 00:43:14,710
has some form of compression to get deal

747
00:43:11,559 --> 00:43:17,859
with that anyway maybe the bigger issue

748
00:43:14,710 --> 00:43:19,509
there is that this does break the

749
00:43:17,859 --> 00:43:21,969
principle of lease at least and

750
00:43:19,509 --> 00:43:24,309
astonishment so when a developer C's

751
00:43:21,969 --> 00:43:26,799
unit able like hmmm why there's an

752
00:43:24,309 --> 00:43:28,749
asterisk and yeah they would have to go

753
00:43:26,799 --> 00:43:31,059
on into the upcoming RFC and see like oh

754
00:43:28,749 --> 00:43:34,269
that's the reason

755
00:43:31,059 --> 00:43:36,549
and yeah it's discussing this between

756
00:43:34,269 --> 00:43:39,249
the meet between the previous sessions

757
00:43:36,549 --> 00:43:42,269
yeah multiple people voice okay that's

758
00:43:39,249 --> 00:43:44,890
not very elegant it kind of smells funny

759
00:43:42,269 --> 00:43:48,939
but out of all the options this seems to

760
00:43:44,890 --> 00:43:52,269
be the best book best one we get so I

761
00:43:48,940 --> 00:43:57,569
guess that's the yes that's the last

762
00:43:52,269 --> 00:43:58,988
slide here and questions and comments

763
00:43:57,569 --> 00:44:01,930
Alexei Melnikov

764
00:43:58,989 --> 00:44:08,219
so in the current registry there are

765
00:44:01,930 --> 00:44:15,489
some units which are derivative correct

766
00:44:08,219 --> 00:44:18,249
are they going to be so that's a problem

767
00:44:15,489 --> 00:44:21,700
if we were designing that the registry

768
00:44:18,249 --> 00:44:25,718
now yes they would absolutely be is it

769
00:44:21,700 --> 00:44:27,339
worth moving them read retrospectively

770
00:44:25,719 --> 00:44:30,640
and potentially Prague

771
00:44:27,340 --> 00:44:32,470
existing code maybe not okay so they're

772
00:44:30,640 --> 00:44:35,290
sort of grandfather tents

773
00:44:32,470 --> 00:44:37,600
exactly and that's kind of an extra

774
00:44:35,290 --> 00:44:40,170
clutch there I mean we could I can see

775
00:44:37,600 --> 00:44:42,759
it work in both ways but whether the

776
00:44:40,170 --> 00:44:45,760
words of doing the right thing is worth

777
00:44:42,760 --> 00:44:49,270
breaking existing code potentially maybe

778
00:44:45,760 --> 00:44:55,540
not Justin when I was young and there

779
00:44:49,270 --> 00:44:58,450
was their books in in Germany books have

780
00:44:55,540 --> 00:45:02,020
a set price you cannot sell a book for

781
00:44:58,450 --> 00:45:04,089
less than it's set at but of course

782
00:45:02,020 --> 00:45:06,240
there are books that you want to sell

783
00:45:04,090 --> 00:45:09,910
off because you have too much inventory

784
00:45:06,240 --> 00:45:13,209
and so on so what you will do is you

785
00:45:09,910 --> 00:45:16,060
take a text marker and scribble on the

786
00:45:13,210 --> 00:45:18,730
sides of the book and then say oh this

787
00:45:16,060 --> 00:45:21,490
this is not the normal book it's a book

788
00:45:18,730 --> 00:45:24,850
with a quality problem and we can tell

789
00:45:21,490 --> 00:45:26,890
that to say that cheaper and the

790
00:45:24,850 --> 00:45:30,310
asterisk sounds a little bit like

791
00:45:26,890 --> 00:45:34,560
swimming with the text marker and saying

792
00:45:30,310 --> 00:45:38,529
oh this is not that real SI base unit

793
00:45:34,560 --> 00:45:42,700
yeah so from that point of view it's

794
00:45:38,530 --> 00:45:46,870
almost something that that I might want

795
00:45:42,700 --> 00:45:51,669
to start liking but of course the

796
00:45:46,870 --> 00:45:54,370
problem remains that those people who

797
00:45:51,670 --> 00:45:57,690
want to use these units always will see

798
00:45:54,370 --> 00:46:00,730
the black text marker on their

799
00:45:57,690 --> 00:46:02,230
applications and this is a little bit of

800
00:46:00,730 --> 00:46:05,580
a cognitive problem I mean it's not a

801
00:46:02,230 --> 00:46:09,160
technical problem but it's it's like

802
00:46:05,580 --> 00:46:11,650
they are not taking us seriously here so

803
00:46:09,160 --> 00:46:14,440
we have to use the the s for us to say

804
00:46:11,650 --> 00:46:17,560
we are the second-class citizens which

805
00:46:14,440 --> 00:46:22,180
they are but you may not may not want to

806
00:46:17,560 --> 00:46:24,690
rub it in with every usage so that's one

807
00:46:22,180 --> 00:46:27,669
way to look at the thing can I quickly

808
00:46:24,690 --> 00:46:30,490
so quick comment on the usage correct

809
00:46:27,670 --> 00:46:32,440
about this much multiple use for senemo

810
00:46:30,490 --> 00:46:34,029
units this would only apply to when you

811
00:46:32,440 --> 00:46:36,850
use the you field of the serialization

812
00:46:34,030 --> 00:46:40,310
yes Wrexham the OMA use in schema that

813
00:46:36,850 --> 00:46:44,589
would not be impacted is great

814
00:46:40,310 --> 00:46:50,900
so the other thing the objective was to

815
00:46:44,590 --> 00:46:53,090
distinguish units from table one from

816
00:46:50,900 --> 00:46:56,720
units from Table two which is pretty

817
00:46:53,090 --> 00:46:59,750
much what the Astros does now with the

818
00:46:56,720 --> 00:47:03,470
assumption that the units from Table one

819
00:46:59,750 --> 00:47:05,600
are really moving very slowly I mean we

820
00:47:03,470 --> 00:47:08,750
are not going to it we're just a lot of

821
00:47:05,600 --> 00:47:12,220
units there and this the SI system

822
00:47:08,750 --> 00:47:12,220
changed again or something like that

823
00:47:12,490 --> 00:47:17,990
the that leads to the simpler

824
00:47:15,530 --> 00:47:19,970
implementation strategy to look up the

825
00:47:17,990 --> 00:47:22,729
name and if it's not in in Tier one

826
00:47:19,970 --> 00:47:25,970
apparently isn't able to and so you can

827
00:47:22,730 --> 00:47:29,600
derive the the essentially the same

828
00:47:25,970 --> 00:47:32,779
information by doing that and actually

829
00:47:29,600 --> 00:47:34,339
if there ever is a new registration into

830
00:47:32,780 --> 00:47:37,790
everyone

831
00:47:34,340 --> 00:47:40,090
the the application that they're

832
00:47:37,790 --> 00:47:42,140
restoring the routing based on units

833
00:47:40,090 --> 00:47:44,510
probably would have to react the same

834
00:47:42,140 --> 00:47:46,430
way because it doesn't really know

835
00:47:44,510 --> 00:47:51,260
whether the newly registered unit and

836
00:47:46,430 --> 00:47:53,470
tear one concerns it or not sure from

837
00:47:51,260 --> 00:47:57,470
first principles it probably maybe

838
00:47:53,470 --> 00:48:00,109
shouldn't yeah so that actually depends

839
00:47:57,470 --> 00:48:02,120
so there are some two things in table

840
00:48:00,110 --> 00:48:04,460
one as you said like yeah it's very very

841
00:48:02,120 --> 00:48:06,500
stable and Sam Soon is that doesn't

842
00:48:04,460 --> 00:48:07,820
change much except for that half a dozen

843
00:48:06,500 --> 00:48:09,560
units you are now adding there but in

844
00:48:07,820 --> 00:48:11,510
the longer term in a few years it's

845
00:48:09,560 --> 00:48:13,160
gonna be rather stable the second thing

846
00:48:11,510 --> 00:48:16,190
is that I think is more important for

847
00:48:13,160 --> 00:48:18,200
this use case that like one unit for one

848
00:48:16,190 --> 00:48:21,080
kind of measurement so there will never

849
00:48:18,200 --> 00:48:22,939
be another meter per second let's say

850
00:48:21,080 --> 00:48:24,830
kilometres per hour or yes anything new

851
00:48:22,940 --> 00:48:27,560
for speed I'm just I'm just talking

852
00:48:24,830 --> 00:48:28,670
about the detection of the use of caber

853
00:48:27,560 --> 00:48:30,920
- yes

854
00:48:28,670 --> 00:48:33,590
download with that would look for an

855
00:48:30,920 --> 00:48:35,660
asterisk in the code I would write what

856
00:48:33,590 --> 00:48:38,900
look into everyone and say if it's not

857
00:48:35,660 --> 00:48:40,490
into everyone it's a favor to John yep

858
00:48:38,900 --> 00:48:43,700
and I think that that that's a fair way

859
00:48:40,490 --> 00:48:46,310
to do it of course it's a I guess

860
00:48:43,700 --> 00:48:49,189
Collins argument for that would be

861
00:48:46,310 --> 00:48:52,100
roughly Asterix is one line of code that

862
00:48:49,190 --> 00:48:54,080
I can easily fold into the system that

863
00:48:52,100 --> 00:49:00,710
would be a generalized

864
00:48:54,080 --> 00:49:02,940
go look up they may be 5-1 alrighty I

865
00:49:00,710 --> 00:49:05,500
okay don't come in a long line of code

866
00:49:02,940 --> 00:49:08,420
[Laughter]

867
00:49:05,500 --> 00:49:10,490
so I was like as a reviewer of this

868
00:49:08,420 --> 00:49:13,310
draft also I mean to me I was one of

869
00:49:10,490 --> 00:49:15,740
these astonished people to me it looks

870
00:49:13,310 --> 00:49:17,690
really bad as a solution I mean even the

871
00:49:15,740 --> 00:49:18,259
author seems to disagree on the actual

872
00:49:17,690 --> 00:49:20,840
choice

873
00:49:18,260 --> 00:49:25,130
I mean you propose it about you're not a

874
00:49:20,840 --> 00:49:28,040
person sure about this the target for

875
00:49:25,130 --> 00:49:30,520
sentimental is not just routing entities

876
00:49:28,040 --> 00:49:33,140
at the processing center mail is also

877
00:49:30,520 --> 00:49:34,940
consumers of this any any consumer of

878
00:49:33,140 --> 00:49:36,589
the sentimental data it might be that

879
00:49:34,940 --> 00:49:38,120
you parse it in different ways but

880
00:49:36,590 --> 00:49:40,220
having that asterisk there means like

881
00:49:38,120 --> 00:49:41,450
anytime you print it just like when you

882
00:49:40,220 --> 00:49:42,709
print chase and you will have that too

883
00:49:41,450 --> 00:49:46,189
maybe unless you do it some special

884
00:49:42,710 --> 00:49:49,130
string operation it means also that the

885
00:49:46,190 --> 00:49:50,330
view your product has km/h for some

886
00:49:49,130 --> 00:49:53,000
reason because not everybody has to use

887
00:49:50,330 --> 00:49:54,710
m/s or you'll also have to process that

888
00:49:53,000 --> 00:49:56,840
in a different way and I think it's kind

889
00:49:54,710 --> 00:50:00,260
of weird to embed these kind of ITF

890
00:49:56,840 --> 00:50:02,150
registry decisions into this NML unit

891
00:50:00,260 --> 00:50:04,160
itself like whether you have one reduced

892
00:50:02,150 --> 00:50:06,470
here to that for most people don't care

893
00:50:04,160 --> 00:50:10,310
about that I think so

894
00:50:06,470 --> 00:50:14,899
personally I think it's a bad idea I

895
00:50:10,310 --> 00:50:16,190
mean from the floor yeah I can let me

896
00:50:14,900 --> 00:50:18,290
try it if I remember all those points

897
00:50:16,190 --> 00:50:21,110
try to address them maybe in reverse

898
00:50:18,290 --> 00:50:24,130
chronological order it's not actually

899
00:50:21,110 --> 00:50:27,290
only about table 1 table 2 it's about

900
00:50:24,130 --> 00:50:29,510
semantics of that unit registry that

901
00:50:27,290 --> 00:50:32,480
were in indicating and it's really the

902
00:50:29,510 --> 00:50:35,060
key thing is that is it only one unit

903
00:50:32,480 --> 00:50:38,780
per kind of measurement and now we are

904
00:50:35,060 --> 00:50:42,140
breaking that and also as Colin pointed

905
00:50:38,780 --> 00:50:44,960
out in the previous session cinema was

906
00:50:42,140 --> 00:50:46,549
never meant to be human readable just

907
00:50:44,960 --> 00:50:49,700
turned out to be because we use Chasen

908
00:50:46,550 --> 00:50:51,890
so a normal human being you know

909
00:50:49,700 --> 00:50:55,279
developer society is never supposed to

910
00:50:51,890 --> 00:50:55,700
see sentiment as such of course in

911
00:50:55,280 --> 00:50:58,910
practice

912
00:50:55,700 --> 00:51:00,500
um it happens

913
00:50:58,910 --> 00:51:01,940
and yet the asterisks you would never

914
00:51:00,500 --> 00:51:05,030
saw that to a user you would always

915
00:51:01,940 --> 00:51:07,580
strip that a weight way in your code so

916
00:51:05,030 --> 00:51:08,000
maybe then what it looks like on the

917
00:51:07,580 --> 00:51:10,880
wire

918
00:51:08,000 --> 00:51:13,940
is mostly for neurological developers

919
00:51:10,880 --> 00:51:18,190
who will be astonished given but maybe

920
00:51:13,940 --> 00:51:21,980
it's a rather small stuff users and then

921
00:51:18,190 --> 00:51:23,180
finally yeah in one of them miss animal

922
00:51:21,980 --> 00:51:24,740
can be used in various different ways

923
00:51:23,180 --> 00:51:25,250
and it's been used in various different

924
00:51:24,740 --> 00:51:29,569
ways

925
00:51:25,250 --> 00:51:32,330
one of the core principles are also

926
00:51:29,570 --> 00:51:34,700
stayed in the RFC was that it's highly

927
00:51:32,330 --> 00:51:35,930
highly capable I mean very useful for

928
00:51:34,700 --> 00:51:37,790
this kind of environments where you have

929
00:51:35,930 --> 00:51:40,370
a lot of sensor nodes sending data to

930
00:51:37,790 --> 00:51:43,279
that to the cloud systems and there this

931
00:51:40,370 --> 00:51:46,940
kind of routing capabilities are are

932
00:51:43,280 --> 00:51:50,210
very useful of course now the question

933
00:51:46,940 --> 00:51:54,310
is is is that useful is that use case

934
00:51:50,210 --> 00:51:59,810
important enough to justify their

935
00:51:54,310 --> 00:52:04,100
ugliness and I'm personally I'm kind of

936
00:51:59,810 --> 00:52:06,470
here on defense I was originally quite a

937
00:52:04,100 --> 00:52:08,020
bit against at doing anything it's just

938
00:52:06,470 --> 00:52:10,819
like okay let's put everything as such

939
00:52:08,020 --> 00:52:13,310
after a long discussion with Colin I was

940
00:52:10,820 --> 00:52:15,230
kind of starting to okay I understand I

941
00:52:13,310 --> 00:52:18,520
understand his use case I think it's a

942
00:52:15,230 --> 00:52:21,860
relevant use case I'd like to cover that

943
00:52:18,520 --> 00:52:24,410
then the question is is like the pain of

944
00:52:21,860 --> 00:52:30,080
it pain of doing it worth it and that's

945
00:52:24,410 --> 00:52:32,330
kind of I'm on the fence here myself I'd

946
00:52:30,080 --> 00:52:37,250
be fine either way actually as long as

947
00:52:32,330 --> 00:52:40,220
we get it ya know maybe just to get a

948
00:52:37,250 --> 00:52:41,450
sense of the room does anyone have has

949
00:52:40,220 --> 00:52:47,180
anyone read the draft that's the first

950
00:52:41,450 --> 00:52:48,460
thing all right of those who have read

951
00:52:47,180 --> 00:52:51,200
the draft do you have a strong opinion

952
00:52:48,460 --> 00:52:52,820
one direction or another now you would

953
00:52:51,200 --> 00:52:55,540
like to voice out I must you mean not if

954
00:52:52,820 --> 00:52:55,540
you don't say anything

955
00:53:02,210 --> 00:53:08,240
hi my name is Matt Gilmore is the

956
00:53:05,660 --> 00:53:09,859
asterik needed I mean it's got to be

957
00:53:08,240 --> 00:53:11,509
expected that cinema in general will

958
00:53:09,860 --> 00:53:13,400
have additional units added over time

959
00:53:11,510 --> 00:53:15,320
yeah argument that there won't be a

960
00:53:13,400 --> 00:53:16,010
secondary table or additional units in

961
00:53:15,320 --> 00:53:19,010
Table one

962
00:53:16,010 --> 00:53:20,480
there's no version II non that to

963
00:53:19,010 --> 00:53:23,120
understand if that changed or not anyway

964
00:53:20,480 --> 00:53:25,340
so to the key difference is the asterik

965
00:53:23,120 --> 00:53:27,230
tells you this might be about a

966
00:53:25,340 --> 00:53:29,960
measurement that you should care about

967
00:53:27,230 --> 00:53:34,000
but you don't know that's really the

968
00:53:29,960 --> 00:53:37,070
information aster it gives you so cuz

969
00:53:34,000 --> 00:53:39,530
nope so that shouldn't happen because in

970
00:53:37,070 --> 00:53:43,250
table one you would never have new unit

971
00:53:39,530 --> 00:53:52,970
for speed where's the table to you may

972
00:53:43,250 --> 00:53:54,740
have multiple units for speed yes but um

973
00:53:52,970 --> 00:53:56,750
so you're gonna have new units for new

974
00:53:54,740 --> 00:53:59,120
kinds of measurements but as long as

975
00:53:56,750 --> 00:54:01,130
your system only cares about a single or

976
00:53:59,120 --> 00:54:04,069
let's say a subset of kinds of

977
00:54:01,130 --> 00:54:12,890
measurements that are in table one then

978
00:54:04,070 --> 00:54:14,030
it actually does bring you value that's

979
00:54:12,890 --> 00:54:16,160
one way you can use the asterisk

980
00:54:14,030 --> 00:54:20,150
probably more openly which is like hey

981
00:54:16,160 --> 00:54:21,859
oh you know raising a flag uh I might be

982
00:54:20,150 --> 00:54:24,200
doing something stupid here by ignoring

983
00:54:21,860 --> 00:54:25,550
these records that's kind of the

984
00:54:24,200 --> 00:54:27,529
simplest use case for it

985
00:54:25,550 --> 00:54:29,060
yeah but then you're right I mean you

986
00:54:27,530 --> 00:54:31,670
could also use okay you look up in table

987
00:54:29,060 --> 00:54:32,660
to forward your data to someone who can

988
00:54:31,670 --> 00:54:34,510
look at table 2

989
00:54:32,660 --> 00:54:36,830
but really the key thing is like

990
00:54:34,510 --> 00:54:38,870
avoiding the fact that someone thinks

991
00:54:36,830 --> 00:54:42,920
I'm getting all about speed but then

992
00:54:38,870 --> 00:54:44,029
actually missing kilometres per hour and

993
00:54:42,920 --> 00:54:48,550
I was a summer I'm thinking oh you know

994
00:54:44,030 --> 00:54:48,550
analytics system data dispatching etc

995
00:54:54,360 --> 00:54:59,140
yeah we have to wrap this up

996
00:54:57,130 --> 00:55:02,560
so we've enough time for for the

997
00:54:59,140 --> 00:55:05,319
applications part my proposal would be

998
00:55:02,560 --> 00:55:07,540
that we generate a new version of the

999
00:55:05,320 --> 00:55:12,010
draft that explains this implementation

1000
00:55:07,540 --> 00:55:16,300
strategy explains how it is broken by

1001
00:55:12,010 --> 00:55:20,320
Table two and also explains how doing a

1002
00:55:16,300 --> 00:55:25,570
lookup integral one is almost giving you

1003
00:55:20,320 --> 00:55:31,870
the same function back and I think with

1004
00:55:25,570 --> 00:55:34,090
that we should consider this done and

1005
00:55:31,870 --> 00:55:37,779
then should we in order to facilitate

1006
00:55:34,090 --> 00:55:39,510
that proactively register more stuff in

1007
00:55:37,780 --> 00:55:42,520
table one that we know is highly likely

1008
00:55:39,510 --> 00:55:46,510
landing there because now we're gonna do

1009
00:55:42,520 --> 00:55:49,120
it by request what we saw being used so

1010
00:55:46,510 --> 00:55:51,040
now in order for that strategy to work

1011
00:55:49,120 --> 00:55:56,380
efficiently they table one should be as

1012
00:55:51,040 --> 00:56:00,330
stable as possible okay that's maybe a

1013
00:55:56,380 --> 00:56:03,010
worthwhile thing I wouldn't couple it

1014
00:56:00,330 --> 00:56:05,500
timewise because that will take some

1015
00:56:03,010 --> 00:56:09,730
time but I think you're simply leafing

1016
00:56:05,500 --> 00:56:14,020
through iso/iec 80000 and and seeing

1017
00:56:09,730 --> 00:56:16,740
which other combinations I actually

1018
00:56:14,020 --> 00:56:21,430
defined as quantities and units there

1019
00:56:16,740 --> 00:56:24,129
might be a good basis and and doing this

1020
00:56:21,430 --> 00:56:27,149
per actively also really makes their

1021
00:56:24,130 --> 00:56:31,320
life easier of people who want

1022
00:56:27,150 --> 00:56:34,690
particular counts per square meter

1023
00:56:31,320 --> 00:56:44,440
whatever stuff that we don't do yet

1024
00:56:34,690 --> 00:56:47,080
events per hour per square meter that

1025
00:56:44,440 --> 00:56:48,580
sounds good I mean if others you send an

1026
00:56:47,080 --> 00:56:50,020
email before the meeting right and if

1027
00:56:48,580 --> 00:56:51,370
others have opinions they can also just

1028
00:56:50,020 --> 00:56:53,440
push it on a mailing list as well

1029
00:56:51,370 --> 00:56:55,660
so let's cut it there I guess because

1030
00:56:53,440 --> 00:56:58,090
they everything has been said about this

1031
00:56:55,660 --> 00:57:00,850
issue already so I picked that as an

1032
00:56:58,090 --> 00:57:03,340
action item it's certainly not something

1033
00:57:00,850 --> 00:57:05,500
that we as the highest priority but I

1034
00:57:03,340 --> 00:57:10,840
think it should be done yeah sounds good

1035
00:57:05,500 --> 00:57:14,280
Thanks so least you actually don't have

1036
00:57:10,840 --> 00:57:14,280
so much time so Klaus please

1037
00:57:31,030 --> 00:57:34,209
[Music]

1038
00:57:47,660 --> 00:57:55,259
okay I have a number of items in this

1039
00:57:51,510 --> 00:57:57,510
segment one item is report on the

1040
00:57:55,260 --> 00:58:05,460
qualification site meeting that happened

1041
00:57:57,510 --> 00:58:07,650
on Tuesday then I have somewhere a quick

1042
00:58:05,460 --> 00:58:09,540
update on the career reality drafts

1043
00:58:07,650 --> 00:58:14,250
which are working group documents here

1044
00:58:09,540 --> 00:58:16,710
in core and then related to that quickly

1045
00:58:14,250 --> 00:58:18,300
an overview of all the choreo based

1046
00:58:16,710 --> 00:58:21,630
applications that we are currently

1047
00:58:18,300 --> 00:58:23,580
having in different working groups so

1048
00:58:21,630 --> 00:58:26,820
let's start with the site meeting on the

1049
00:58:23,580 --> 00:58:30,660
rillette on Tuesday in the site meeting

1050
00:58:26,820 --> 00:58:33,500
we looked at three topics the first one

1051
00:58:30,660 --> 00:58:36,870
was problem details for co-op api's

1052
00:58:33,500 --> 00:58:39,720
that's a proposal by Thomas Rosati he

1053
00:58:36,870 --> 00:58:42,240
finally brought up what has been

1054
00:58:39,720 --> 00:58:45,209
discussed quite often already in various

1055
00:58:42,240 --> 00:58:47,910
hallway meetings and that is when you

1056
00:58:45,210 --> 00:58:51,060
build the coop based application and you

1057
00:58:47,910 --> 00:58:53,040
return some error to the client then you

1058
00:58:51,060 --> 00:58:56,299
might want to include some problem

1059
00:58:53,040 --> 00:59:00,840
details in that error description and

1060
00:58:56,300 --> 00:59:04,530
for HTTP there's our c7 807 which

1061
00:59:00,840 --> 00:59:07,020
defines a JSON based format and Thomas

1062
00:59:04,530 --> 00:59:11,940
converted this to a C bar but also did

1063
00:59:07,020 --> 00:59:15,000
some changes by making the format less

1064
00:59:11,940 --> 00:59:17,550
specific to HTTP and more generally

1065
00:59:15,000 --> 00:59:21,170
applicable so it also works in

1066
00:59:17,550 --> 00:59:23,850
constrained environments this graph

1067
00:59:21,170 --> 00:59:26,070
wasn't published before did ID cut off

1068
00:59:23,850 --> 00:59:28,319
that's why it's not on the agenda of the

1069
00:59:26,070 --> 00:59:32,570
core meeting but was on the agenda of

1070
00:59:28,320 --> 00:59:35,610
this site meeting but now that the

1071
00:59:32,570 --> 00:59:38,580
submission is open again Thomas has

1072
00:59:35,610 --> 00:59:40,800
published his draft and I think you

1073
00:59:38,580 --> 00:59:44,040
would welcome any kind of feedback on

1074
00:59:40,800 --> 00:59:48,770
his proposal I think it's a quite useful

1075
00:59:44,040 --> 00:59:54,850
addition to have in our repository of

1076
00:59:48,770 --> 00:59:57,190
core data formats so please take

1077
00:59:54,850 --> 00:59:59,799
and tell us on the mailing list what do

1078
00:59:57,190 --> 01:00:02,020
you think if it's useful and if yes how

1079
00:59:59,800 --> 01:00:05,080
you might use it in your application for

1080
01:00:02,020 --> 01:00:07,090
example then of course my favorite

1081
01:00:05,080 --> 01:00:10,150
question is always can you do it with

1082
01:00:07,090 --> 01:00:11,860
coral and so we spend a few minutes in

1083
01:00:10,150 --> 01:00:14,110
the side meeting to take a look how

1084
01:00:11,860 --> 01:00:16,870
problem details might be done with coral

1085
01:00:14,110 --> 01:00:19,270
and it turns out as long as the problem

1086
01:00:16,870 --> 01:00:22,180
details are simply a list of key value

1087
01:00:19,270 --> 01:00:24,850
pairs which is the case in most examples

1088
01:00:22,180 --> 01:00:27,970
that we could find and then yes you can

1089
01:00:24,850 --> 01:00:30,880
easily use coral for this and the

1090
01:00:27,970 --> 01:00:33,970
current choreographed Dasha one also has

1091
01:00:30,880 --> 01:00:37,360
a new section on what does it mean when

1092
01:00:33,970 --> 01:00:39,970
you return a coral document in an error

1093
01:00:37,360 --> 01:00:42,430
response so normally a Cora document

1094
01:00:39,970 --> 01:00:44,439
describes is a representation of a

1095
01:00:42,430 --> 01:00:47,140
resource but if it's not a

1096
01:00:44,440 --> 01:00:49,420
representation of a resource because

1097
01:00:47,140 --> 01:00:51,040
it's part of an error response then what

1098
01:00:49,420 --> 01:00:57,610
does it mean and that's what this new

1099
01:00:51,040 --> 01:01:08,980
section defines then the next part in

1100
01:00:57,610 --> 01:01:10,960
the it's not very general thank you the

1101
01:01:08,980 --> 01:01:13,750
next part of the site meeting was about

1102
01:01:10,960 --> 01:01:16,000
the extensibility and code points so of

1103
01:01:13,750 --> 01:01:18,490
course when you would define your

1104
01:01:16,000 --> 01:01:20,890
problem details you might want to have

1105
01:01:18,490 --> 01:01:22,330
some kind of compact error codes for the

1106
01:01:20,890 --> 01:01:24,520
different error conditions that can

1107
01:01:22,330 --> 01:01:26,440
happen in your application and you might

1108
01:01:24,520 --> 01:01:28,240
also want to include some application

1109
01:01:26,440 --> 01:01:31,480
specific error details in the error

1110
01:01:28,240 --> 01:01:34,330
message and then we have the typical

1111
01:01:31,480 --> 01:01:37,840
problem of how do we do extensibility in

1112
01:01:34,330 --> 01:01:39,580
this data format and it's becoming more

1113
01:01:37,840 --> 01:01:42,250
and more apparent that this is basically

1114
01:01:39,580 --> 01:01:44,380
the common theme of almost everything we

1115
01:01:42,250 --> 01:01:46,900
do here in the core working group we

1116
01:01:44,380 --> 01:01:50,730
need to define assign small compact

1117
01:01:46,900 --> 01:01:55,090
unique identifiers to the semantic

1118
01:01:50,730 --> 01:01:57,550
elements of our data formats so if we

1119
01:01:55,090 --> 01:02:00,910
have these error types and error

1120
01:01:57,550 --> 01:02:02,740
attributes in problem details and Thomas

1121
01:02:00,910 --> 01:02:05,830
has a proposal and is draft how to

1122
01:02:02,740 --> 01:02:08,740
allocate unique identifiers for that

1123
01:02:05,830 --> 01:02:11,170
using IANA registries

1124
01:02:08,740 --> 01:02:16,569
but of course we also have already sits

1125
01:02:11,170 --> 01:02:19,000
for Kumai or corinth which uses this

1126
01:02:16,570 --> 01:02:22,720
three level approach based on mega

1127
01:02:19,000 --> 01:02:25,570
ranges that are assigned by iana then

1128
01:02:22,720 --> 01:02:28,180
ranges which can be delegated by anna to

1129
01:02:25,570 --> 01:02:31,210
someone else like an sto and then with

1130
01:02:28,180 --> 01:02:36,460
that range there are the units as

1131
01:02:31,210 --> 01:02:38,109
allocated and of course also in coral we

1132
01:02:36,460 --> 01:02:41,230
want to have linked relation types in

1133
01:02:38,109 --> 01:02:42,790
operation types and form fields and

1134
01:02:41,230 --> 01:02:46,030
those need to have unique identifiers

1135
01:02:42,790 --> 01:02:47,920
and we want to have them compact and so

1136
01:02:46,030 --> 01:02:50,470
Corrie has a another completely

1137
01:02:47,920 --> 01:02:54,250
different approach to this it uses your

1138
01:02:50,470 --> 01:02:57,040
eyes primarily to identify the semantic

1139
01:02:54,250 --> 01:02:59,200
identifiers and but then defines a

1140
01:02:57,040 --> 01:03:04,050
static dictionary compression scheme to

1141
01:02:59,200 --> 01:03:06,250
make it very compact on the wire so this

1142
01:03:04,050 --> 01:03:08,710
segment of the site medium was mostly

1143
01:03:06,250 --> 01:03:11,380
about this observation aha we have this

1144
01:03:08,710 --> 01:03:15,280
pattern or this problem coming up all

1145
01:03:11,380 --> 01:03:16,960
the time again and again and sometimes a

1146
01:03:15,280 --> 01:03:19,300
registry is exactly what we need for

1147
01:03:16,960 --> 01:03:21,849
that in particular if it's conservative

1148
01:03:19,300 --> 01:03:24,940
protocol extensions that get reviewed a

1149
01:03:21,849 --> 01:03:28,050
lot and so on but if we get into areas

1150
01:03:24,940 --> 01:03:31,030
for example like application specific

1151
01:03:28,050 --> 01:03:33,760
error codes then it becomes quickly

1152
01:03:31,030 --> 01:03:35,950
infeasible to register every possible

1153
01:03:33,760 --> 01:03:38,260
error condition in any application that

1154
01:03:35,950 --> 01:03:40,450
might exist somewhere and then ini

1155
01:03:38,260 --> 01:03:43,660
registry so we have to look into these

1156
01:03:40,450 --> 01:03:45,580
multi-level allocation schemes and I

1157
01:03:43,660 --> 01:03:49,270
think we can learn from each other in

1158
01:03:45,580 --> 01:03:53,500
some way so there was what that part of

1159
01:03:49,270 --> 01:03:55,690
the site meeting was about and we always

1160
01:03:53,500 --> 01:03:57,430
say and there are two hard problems in

1161
01:03:55,690 --> 01:04:00,430
computer science cache in relation in

1162
01:03:57,430 --> 01:04:02,379
naming and I think the naming part is

1163
01:04:00,430 --> 01:04:03,879
often misunderstood many people think

1164
01:04:02,380 --> 01:04:06,430
it's about buying a good name for your

1165
01:04:03,880 --> 01:04:08,619
new open source project but I think the

1166
01:04:06,430 --> 01:04:12,339
naming problem is exactly this how do we

1167
01:04:08,619 --> 01:04:14,410
assign good points did a small compact

1168
01:04:12,339 --> 01:04:16,000
and globally unique without requiring

1169
01:04:14,410 --> 01:04:18,960
everyone to go through a single

1170
01:04:16,000 --> 01:04:18,960
bottleneck somewhere

1171
01:04:25,630 --> 01:04:31,980
the last part of this ad meeting was

1172
01:04:27,359 --> 01:04:34,509
again about arrows and this time about

1173
01:04:31,980 --> 01:04:37,150
co-op response codes and so we have

1174
01:04:34,510 --> 01:04:41,079
defined this bunch of response codes and

1175
01:04:37,150 --> 01:04:44,380
five five dot X X and 4 dot X X which

1176
01:04:41,079 --> 01:04:49,690
are largely inspired by HTTP and the lag

1177
01:04:44,380 --> 01:04:51,579
in HTTP those response codes are almost

1178
01:04:49,690 --> 01:04:53,680
exclusively intended for describing

1179
01:04:51,579 --> 01:04:55,240
protocol level errors so there's

1180
01:04:53,680 --> 01:05:00,129
something wrong with the coop message

1181
01:04:55,240 --> 01:05:01,598
format you would return a 4.04 sponsz

1182
01:05:00,130 --> 01:05:03,339
for example if there's something wrong

1183
01:05:01,599 --> 01:05:06,700
with an option you'll return return the

1184
01:05:03,339 --> 01:05:08,980
bet option response and so on

1185
01:05:06,700 --> 01:05:11,769
but there are very few if at all

1186
01:05:08,980 --> 01:05:13,839
response codes if something goes wrong

1187
01:05:11,769 --> 01:05:15,759
at their vacation later so the client

1188
01:05:13,839 --> 01:05:18,400
might send a request that is perfectly

1189
01:05:15,760 --> 01:05:21,809
fine from the point of view of coop but

1190
01:05:18,400 --> 01:05:24,039
their payload if it's a post for example

1191
01:05:21,809 --> 01:05:25,569
might not be acceptable from the

1192
01:05:24,039 --> 01:05:28,630
application point of view because it's

1193
01:05:25,569 --> 01:05:30,940
malformed C bar or it contains some key

1194
01:05:28,630 --> 01:05:33,579
value pairs that are not recognized by

1195
01:05:30,940 --> 01:05:36,309
the application so we discussed a bit if

1196
01:05:33,579 --> 01:05:38,920
we maybe should have some kind of new

1197
01:05:36,309 --> 01:05:42,700
and response codes which are dedicated

1198
01:05:38,920 --> 01:05:45,160
to application level arrows rather than

1199
01:05:42,700 --> 01:05:49,868
the protocol level errors and there were

1200
01:05:45,160 --> 01:05:51,848
some arguments against and for that so

1201
01:05:49,869 --> 01:05:56,890
maybe we can continue this discussion on

1202
01:05:51,849 --> 01:06:00,369
the mailing list you know the part that

1203
01:05:56,890 --> 01:06:05,288
you're living out here is that in the

1204
01:06:00,369 --> 01:06:08,079
fetch fetch document RFC 81 32 we

1205
01:06:05,289 --> 01:06:11,890
already have register two of these which

1206
01:06:08,079 --> 01:06:14,309
are 409 for doing something that would

1207
01:06:11,890 --> 01:06:20,109
leave the data in an inconsistent state

1208
01:06:14,309 --> 01:06:22,390
called conflict in in HTTP and for 22

1209
01:06:20,109 --> 01:06:25,900
which is unprocessed entity which is

1210
01:06:22,390 --> 01:06:28,779
which means something has been sent to

1211
01:06:25,900 --> 01:06:31,869
you in the request that you cannot

1212
01:06:28,779 --> 01:06:32,520
process so that's certainly not the

1213
01:06:31,869 --> 01:06:36,360
whole picture

1214
01:06:32,520 --> 01:06:39,000
but we have already started doing that

1215
01:06:36,360 --> 01:06:40,560
and the other should decide that we

1216
01:06:39,000 --> 01:06:43,550
immediately should stop doing that or

1217
01:06:40,560 --> 01:06:46,860
that this is a good thing and we

1218
01:06:43,550 --> 01:06:55,950
probably will continue this until all 32

1219
01:06:46,860 --> 01:06:58,590
records are gone another observation

1220
01:06:55,950 --> 01:07:01,500
related to error responses is that in

1221
01:06:58,590 --> 01:07:05,400
any of our drafts when we define

1222
01:07:01,500 --> 01:07:07,980
interfaces we often say this is the

1223
01:07:05,400 --> 01:07:10,440
success case so you might get two or one

1224
01:07:07,980 --> 01:07:13,410
created for example in for some API call

1225
01:07:10,440 --> 01:07:15,540
and these are the error cases so many

1226
01:07:13,410 --> 01:07:17,790
documents then say well if the resource

1227
01:07:15,540 --> 01:07:20,850
cannot be found then return to 404 if

1228
01:07:17,790 --> 01:07:23,369
the client is not authorized to be 2403

1229
01:07:20,850 --> 01:07:26,850
if there's a bad option return over 402

1230
01:07:23,369 --> 01:07:28,530
and so on and I'm wondering if we need

1231
01:07:26,850 --> 01:07:32,430
to repeat that all the time in every

1232
01:07:28,530 --> 01:07:35,880
single API documentation so we discussed

1233
01:07:32,430 --> 01:07:37,440
a bit if it could if we could have a

1234
01:07:35,880 --> 01:07:40,020
central place somewhere where we

1235
01:07:37,440 --> 01:07:42,930
describe all these conditions when you

1236
01:07:40,020 --> 01:07:44,880
are supposed to return what and then in

1237
01:07:42,930 --> 01:07:47,129
particular age documents I think like to

1238
01:07:44,880 --> 01:07:50,250
do this maybe those can just reference

1239
01:07:47,130 --> 01:07:52,619
this single document instead of having

1240
01:07:50,250 --> 01:07:54,869
all the boilerplate text explaining that

1241
01:07:52,619 --> 01:08:03,690
if the resource doesn't exist then you

1242
01:07:54,869 --> 01:08:06,600
for 324 for so that was the report on

1243
01:08:03,690 --> 01:08:12,570
the site meeting on to those who were

1244
01:08:06,600 --> 01:08:25,318
there any additions no then let's move

1245
01:08:12,570 --> 01:08:27,180
on to the so I published - or one of

1246
01:08:25,319 --> 01:08:30,480
both the career draft and the H ref

1247
01:08:27,180 --> 01:08:32,970
draft before the ITF meeting and there

1248
01:08:30,479 --> 01:08:35,339
are not big updates this time because I

1249
01:08:32,970 --> 01:08:37,650
spent more time on updating the drafts

1250
01:08:35,339 --> 01:08:41,009
that describe correlate based

1251
01:08:37,649 --> 01:08:43,170
applications so that's the next part so

1252
01:08:41,009 --> 01:08:45,279
the only change to the Korra Draft has

1253
01:08:43,170 --> 01:08:48,099
been this new power

1254
01:08:45,279 --> 01:08:49,480
in section that I mentioned about what

1255
01:08:48,099 --> 01:08:54,989
does it mean if you include career

1256
01:08:49,479 --> 01:08:58,028
documents in non 205 responses in coop

1257
01:08:54,988 --> 01:09:00,908
for arrow responses and and the other

1258
01:08:58,029 --> 01:09:04,270
success cases and there have been no

1259
01:09:00,908 --> 01:09:07,288
changes at all to date ref draft so em

1260
01:09:04,270 --> 01:09:09,429
just as a quick reminder and coral is

1261
01:09:07,288 --> 01:09:11,408
describes the links and forms of a

1262
01:09:09,429 --> 01:09:13,690
resource and H ref then defines the

1263
01:09:11,408 --> 01:09:17,108
Seaboard format that you can use to

1264
01:09:13,689 --> 01:09:20,108
compactly express your your eyes so it's

1265
01:09:17,109 --> 01:09:26,639
an alternative sterilization for your

1266
01:09:20,109 --> 01:09:29,349
eyes any questions or comments on coral

1267
01:09:26,639 --> 01:09:35,288
then let's move on to the coral based

1268
01:09:29,349 --> 01:09:37,809
applications Francesca so nothing coral

1269
01:09:35,288 --> 01:09:40,299
but on the previous topic I was just

1270
01:09:37,809 --> 01:09:44,889
checking what we do in ace just to make

1271
01:09:40,299 --> 01:09:49,269
sure and we actually we just specify

1272
01:09:44,889 --> 01:09:56,099
that when to send for one and authorized

1273
01:09:49,270 --> 01:09:56,099
message because that is like in coop

1274
01:09:56,579 --> 01:10:02,049
what unauthorized means or where it

1275
01:09:59,559 --> 01:10:04,780
comes from is outer scope of coop so the

1276
01:10:02,050 --> 01:10:06,250
application has to define that but we

1277
01:10:04,780 --> 01:10:10,809
don't actually define like we don't

1278
01:10:06,250 --> 01:10:14,770
actually use all the other like we kind

1279
01:10:10,809 --> 01:10:16,690
of say okay if it's if it's for one if

1280
01:10:14,770 --> 01:10:18,789
it's a note if the token doesn't

1281
01:10:16,690 --> 01:10:25,690
validate then use for one and authorized

1282
01:10:18,789 --> 01:10:27,670
so you for that specify you know like

1283
01:10:25,690 --> 01:10:30,009
API specification specification feel

1284
01:10:27,670 --> 01:10:31,599
often very repetitive and maybe make

1285
01:10:30,010 --> 01:10:34,659
something that everybody can reference

1286
01:10:31,599 --> 01:10:38,889
I'm not sure that our draft would would

1287
01:10:34,659 --> 01:10:42,610
use that I think maybe cos core could

1288
01:10:38,889 --> 01:10:44,380
have used that but now it's it's an RFC

1289
01:10:42,610 --> 01:10:47,440
so maybe it's more on the side of

1290
01:10:44,380 --> 01:10:48,969
implementation guidance or something

1291
01:10:47,440 --> 01:10:51,070
like that and we will figure something

1292
01:10:48,969 --> 01:10:55,900
out but it's good that you're not having

1293
01:10:51,070 --> 01:10:59,019
lots available oh yes yeah and we need

1294
01:10:55,900 --> 01:11:02,879
to debate on the meaning of 401 because

1295
01:10:59,020 --> 01:11:02,880
means the client is not authenticated

1296
01:11:04,890 --> 01:11:11,170
the client is not authorized to perform

1297
01:11:07,510 --> 01:11:14,410
the requested action that's that's and

1298
01:11:11,170 --> 01:11:16,210
that's all right 3 4 + 4 1 4 3 is

1299
01:11:14,410 --> 01:11:27,040
forbidden and reading

1300
01:11:16,210 --> 01:11:29,200
7250 - it's confusing are you saying

1301
01:11:27,040 --> 01:11:31,090
this is not what it should say because

1302
01:11:29,200 --> 01:11:33,940
then then it's different

1303
01:11:31,090 --> 01:11:36,490
so apparently we inherited some

1304
01:11:33,940 --> 01:11:38,769
terminology confusion from HTTP where

1305
01:11:36,490 --> 01:11:40,960
they often put the word authorization

1306
01:11:38,770 --> 01:11:44,470
when they mean authentication I think

1307
01:11:40,960 --> 01:11:48,400
this is one of those cases so they have

1308
01:11:44,470 --> 01:11:50,800
this www oh yeah second so that was the

1309
01:11:48,400 --> 01:11:52,750
first sentence the second sentence says

1310
01:11:50,800 --> 01:11:53,920
the client should not repeat the request

1311
01:11:52,750 --> 01:11:56,500
without first improving its

1312
01:11:53,920 --> 01:11:59,640
authentication status to the server so

1313
01:11:56,500 --> 01:12:05,560
it says authorized on the first sentence

1314
01:11:59,640 --> 01:12:06,880
actually right because in some cases of

1315
01:12:05,560 --> 01:12:08,890
course you are authorized to do

1316
01:12:06,880 --> 01:12:10,810
something without being authenticated in

1317
01:12:08,890 --> 01:12:14,800
that case you don't get a fara one but

1318
01:12:10,810 --> 01:12:16,900
you get a successful but if there there

1319
01:12:14,800 --> 01:12:20,290
is authentication that is a prerequisite

1320
01:12:16,900 --> 01:12:25,330
to being authorized then fara one

1321
01:12:20,290 --> 01:12:27,460
actually is the who are you and four or

1322
01:12:25,330 --> 01:12:32,019
three means I know who you are but you

1323
01:12:27,460 --> 01:12:34,690
you still cannot do that ok and I think

1324
01:12:32,020 --> 01:12:38,650
it makes sense to to differentiate these

1325
01:12:34,690 --> 01:12:41,740
two Elvis okay so maybe like the

1326
01:12:38,650 --> 01:12:44,110
terminology in 72-52 wasn't very clear

1327
01:12:41,740 --> 01:12:49,410
and maybe yeah that we should have had

1328
01:12:44,110 --> 01:12:52,839
this discussion before vanishing Oscar

1329
01:12:49,410 --> 01:12:56,580
so that's maybe great input for the

1330
01:12:52,840 --> 01:12:56,580
Corrections and clarifications document

1331
01:13:01,670 --> 01:13:07,920
okay done quick updates on coral based

1332
01:13:05,730 --> 01:13:10,950
applications these are currently not

1333
01:13:07,920 --> 01:13:13,710
working group documents anywhere but

1334
01:13:10,950 --> 01:13:16,620
they are subject of discussion and t2

1335
01:13:13,710 --> 01:13:19,860
TRG and in core mostly in hallway

1336
01:13:16,620 --> 01:13:23,180
meetings and I'm currently aware of for

1337
01:13:19,860 --> 01:13:27,599
applications that use Korea in some way

1338
01:13:23,180 --> 01:13:30,630
three I'm author or co-author of and

1339
01:13:27,600 --> 01:13:33,600
there's a new fourth one that exists

1340
01:13:30,630 --> 01:13:36,600
since yesterday and that I will talk at

1341
01:13:33,600 --> 01:13:39,210
the end about the most interesting one

1342
01:13:36,600 --> 01:13:42,090
probably is the overhaul of the pub/sub

1343
01:13:39,210 --> 01:13:46,290
interface you're probably all familiar

1344
01:13:42,090 --> 01:13:48,090
with the core up some draft that hasn't

1345
01:13:46,290 --> 01:13:51,989
been updated for a while and the reason

1346
01:13:48,090 --> 01:13:54,210
for that is I think it Prague or maybe

1347
01:13:51,989 --> 01:13:57,509
even the ITF meeting before that we

1348
01:13:54,210 --> 01:14:00,210
discussed splitting the configuration of

1349
01:13:57,510 --> 01:14:03,300
pop subtopics and actual publication and

1350
01:14:00,210 --> 01:14:06,120
subscription of to those publics and to

1351
01:14:03,300 --> 01:14:09,390
separate resources and it took us a

1352
01:14:06,120 --> 01:14:11,099
while to create a proposal for that and

1353
01:14:09,390 --> 01:14:15,420
they discussed that proposal in Montreal

1354
01:14:11,100 --> 01:14:19,440
and in much detail and now there's also

1355
01:14:15,420 --> 01:14:21,840
an draft that puts that proposal into a

1356
01:14:19,440 --> 01:14:25,259
text form I'm unfortunately we couldn't

1357
01:14:21,840 --> 01:14:27,450
get this draft to have future parity

1358
01:14:25,260 --> 01:14:33,420
with the current - or nine of the

1359
01:14:27,450 --> 01:14:36,960
pub/sub broker draft so the authors of

1360
01:14:33,420 --> 01:14:39,360
pops-up need to iterate on this draft a

1361
01:14:36,960 --> 01:14:42,180
few times until we get that feature

1362
01:14:39,360 --> 01:14:44,099
parity and we can simply replace the

1363
01:14:42,180 --> 01:14:50,430
contents of the current and pops our

1364
01:14:44,100 --> 01:14:53,190
draft with that updated proposal yeah

1365
01:14:50,430 --> 01:14:55,290
there are some hopefully helpful figures

1366
01:14:53,190 --> 01:14:58,769
in the draft which show the structure

1367
01:14:55,290 --> 01:15:01,110
that we have now we have a typical

1368
01:14:58,770 --> 01:15:03,620
collection resource that contains all

1369
01:15:01,110 --> 01:15:06,750
the different topic configurations and

1370
01:15:03,620 --> 01:15:08,340
clients can create new topics by

1371
01:15:06,750 --> 01:15:11,130
submitting a new initiatory

1372
01:15:08,340 --> 01:15:13,830
configuration the server will then or

1373
01:15:11,130 --> 01:15:16,710
the broker which is

1374
01:15:13,830 --> 01:15:18,330
the server then creates a new item in

1375
01:15:16,710 --> 01:15:20,070
its collection which stores the

1376
01:15:18,330 --> 01:15:21,809
configuration and you have their usual

1377
01:15:20,070 --> 01:15:25,490
operations of create read update delete

1378
01:15:21,810 --> 01:15:28,380
to change and maintain the the

1379
01:15:25,490 --> 01:15:33,990
configuration of topics and then there's

1380
01:15:28,380 --> 01:15:36,660
a second separate resource that the

1381
01:15:33,990 --> 01:15:38,580
broker also creates and that is then

1382
01:15:36,660 --> 01:15:41,220
used for the publications and

1383
01:15:38,580 --> 01:15:43,530
subscriptions so you can use in this

1384
01:15:41,220 --> 01:15:46,620
very simple scheme that - online defines

1385
01:15:43,530 --> 01:15:49,500
a put or a post to publish your

1386
01:15:46,620 --> 01:15:52,140
information to the topic and use observe

1387
01:15:49,500 --> 01:15:55,110
to get the notifications when the state

1388
01:15:52,140 --> 01:15:57,780
of that resource changes the nice thing

1389
01:15:55,110 --> 01:16:01,290
about this split is now that we can also

1390
01:15:57,780 --> 01:16:03,360
have other types of publish subscribe

1391
01:16:01,290 --> 01:16:06,240
mechanisms so for example you could

1392
01:16:03,360 --> 01:16:08,610
create your topic and then specify oh

1393
01:16:06,240 --> 01:16:10,860
it's not using this simple but observe

1394
01:16:08,610 --> 01:16:13,670
mechanism but instead it uses some other

1395
01:16:10,860 --> 01:16:20,219
protocol like amputee for example or

1396
01:16:13,670 --> 01:16:22,710
some other optimized form of coop up sup

1397
01:16:20,220 --> 01:16:24,930
so for example NT - DRG we have this

1398
01:16:22,710 --> 01:16:27,780
serious transfer pattern draft which

1399
01:16:24,930 --> 01:16:30,690
reliably gets you all the information

1400
01:16:27,780 --> 01:16:32,969
that gets published while for example if

1401
01:16:30,690 --> 01:16:35,700
you use observe you know we only have

1402
01:16:32,970 --> 01:16:38,100
this best effort approach where you get

1403
01:16:35,700 --> 01:16:40,679
the latest information so you might want

1404
01:16:38,100 --> 01:16:44,480
to configure a STP series transfer

1405
01:16:40,680 --> 01:16:51,330
instead of this simple publish/subscribe

1406
01:16:44,480 --> 01:16:56,969
can just go down a bit one implication

1407
01:16:51,330 --> 01:17:00,269
of this change is that we have now

1408
01:16:56,970 --> 01:17:03,270
something called a half created topic we

1409
01:17:00,270 --> 01:17:05,070
always have the problem that if a topic

1410
01:17:03,270 --> 01:17:07,350
is created but nothing has been

1411
01:17:05,070 --> 01:17:10,710
published yet what's that

1412
01:17:07,350 --> 01:17:13,650
state of their topic because somehow it

1413
01:17:10,710 --> 01:17:15,720
exists but at the same time somehow it

1414
01:17:13,650 --> 01:17:18,509
doesn't and I think we have now found a

1415
01:17:15,720 --> 01:17:20,310
good answer to this problem after you

1416
01:17:18,510 --> 01:17:24,930
submit your topic configuration the

1417
01:17:20,310 --> 01:17:26,989
broker creates the topic but subscribers

1418
01:17:24,930 --> 01:17:28,550
cannot subscribe yet until

1419
01:17:26,989 --> 01:17:30,768
something has been published so we have

1420
01:17:28,550 --> 01:17:33,920
this little state machine after creation

1421
01:17:30,769 --> 01:17:35,329
the topic is called half created in this

1422
01:17:33,920 --> 01:17:37,760
state you can change it to configuration

1423
01:17:35,329 --> 01:17:40,820
or delete the topic again but you cannot

1424
01:17:37,760 --> 01:17:42,499
subscribe you can only publish and once

1425
01:17:40,820 --> 01:17:44,539
something has been published for the

1426
01:17:42,499 --> 01:17:58,460
first time the topic is fully created

1427
01:17:44,539 --> 01:17:59,119
and subscribers can subscribe next did I

1428
01:17:58,460 --> 01:18:07,400
miss anything

1429
01:17:59,119 --> 01:18:14,719
I don't think so any questions or

1430
01:18:07,400 --> 01:18:20,539
comments or remarks on pubsub well one

1431
01:18:14,719 --> 01:18:22,280
one comment with my chat would be we

1432
01:18:20,539 --> 01:18:25,239
really want to ship this thing at some

1433
01:18:22,280 --> 01:18:28,909
point so we have to make sure that we

1434
01:18:25,239 --> 01:18:31,369
have the furniture that's in place to do

1435
01:18:28,909 --> 01:18:35,690
this and where we can come back to that

1436
01:18:31,369 --> 01:18:38,210
later we have about 12 minutes left I

1437
01:18:35,690 --> 01:18:44,690
think Jessica wanted five minutes to

1438
01:18:38,210 --> 01:18:51,469
talk about Oscar and at work I need

1439
01:18:44,690 --> 01:18:53,659
about five minutes okay good there have

1440
01:18:51,469 --> 01:18:57,289
been small updates to the coral reef

1441
01:18:53,659 --> 01:18:59,449
draft mostly to bring it in line in the

1442
01:18:57,289 --> 01:19:02,179
same with this and to the same style

1443
01:18:59,449 --> 01:19:06,289
that is used in the pub stop draft that

1444
01:19:02,179 --> 01:19:08,300
I submitted and this choreograph

1445
01:19:06,289 --> 01:19:10,999
describes how you can do well-known core

1446
01:19:08,300 --> 01:19:13,909
and resourcedirectory with the coral

1447
01:19:10,999 --> 01:19:18,710
interface and then there's also the data

1448
01:19:13,909 --> 01:19:20,509
updraft in t2 DRG which designs a coral

1449
01:19:18,710 --> 01:19:23,539
interface that you can use to store

1450
01:19:20,510 --> 01:19:27,019
files on a server so for example a

1451
01:19:23,539 --> 01:19:29,449
firmware update or a suit manifest or a

1452
01:19:27,019 --> 01:19:31,760
much file or whatever you need and then

1453
01:19:29,449 --> 01:19:33,829
you can have the typical lookup

1454
01:19:31,760 --> 01:19:36,079
interface similar to resource directory

1455
01:19:33,829 --> 01:19:37,639
there you can filter there the list of

1456
01:19:36,079 --> 01:19:40,039
stored files for something that is

1457
01:19:37,639 --> 01:19:40,830
interesting to you so it's a bit like a

1458
01:19:40,039 --> 01:19:42,960
resource directory

1459
01:19:40,830 --> 01:19:44,850
but the store actual files on the server

1460
01:19:42,960 --> 01:19:48,780
instead of just links that point to

1461
01:19:44,850 --> 01:19:51,410
other servers and then last but not

1462
01:19:48,780 --> 01:19:57,599
least we have a fourth application now

1463
01:19:51,410 --> 01:20:00,990
after the figure and that is draft

1464
01:19:57,600 --> 01:20:04,590
tilaka a source code group manager at

1465
01:20:00,990 --> 01:20:07,950
man - zero one that - zero one has not

1466
01:20:04,590 --> 01:20:10,730
been published yet it exists an HEC

1467
01:20:07,950 --> 01:20:14,250
indeed that we created yesterday and

1468
01:20:10,730 --> 01:20:16,910
what we did is we take we took the -

1469
01:20:14,250 --> 01:20:19,200
zero zero version of that draft and

1470
01:20:16,910 --> 01:20:21,090
restructure did a bit so it matches the

1471
01:20:19,200 --> 01:20:24,269
same structure that this pops up

1472
01:20:21,090 --> 01:20:26,730
proposal draft has so first it describes

1473
01:20:24,270 --> 01:20:29,190
all the representations and concepts

1474
01:20:26,730 --> 01:20:32,219
that are rated to a score group

1475
01:20:29,190 --> 01:20:34,410
management and then this group this

1476
01:20:32,220 --> 01:20:39,360
describes the injections with the group

1477
01:20:34,410 --> 01:20:42,300
manager and it turns out that this draft

1478
01:20:39,360 --> 01:20:44,519
is basically identical to the pops up

1479
01:20:42,300 --> 01:20:48,420
draft of course it doesn't do pops up

1480
01:20:44,520 --> 01:20:51,030
but it does it has the same pattern of

1481
01:20:48,420 --> 01:20:52,920
configuration so there's a collection

1482
01:20:51,030 --> 01:20:56,099
resource you can post a new

1483
01:20:52,920 --> 01:20:57,750
configuration to that and then the group

1484
01:20:56,100 --> 01:21:00,000
manager will create a new resource that

1485
01:20:57,750 --> 01:21:01,770
stores that configuration for the ausco

1486
01:21:00,000 --> 01:21:05,520
group and you can create read update

1487
01:21:01,770 --> 01:21:09,090
delete so essentially exactly the same

1488
01:21:05,520 --> 01:21:12,780
interface so now we are wondering can we

1489
01:21:09,090 --> 01:21:15,600
refactor this in some way and write

1490
01:21:12,780 --> 01:21:18,509
another draft that describes the overall

1491
01:21:15,600 --> 01:21:21,710
pattern and then the pops up broke for

1492
01:21:18,510 --> 01:21:25,160
example which fill in his configuration

1493
01:21:21,710 --> 01:21:27,510
parameters in status parameters and

1494
01:21:25,160 --> 01:21:29,160
group management would simply define a

1495
01:21:27,510 --> 01:21:33,480
different set of configuration

1496
01:21:29,160 --> 01:21:37,230
parameters and so we can you reuse the

1497
01:21:33,480 --> 01:21:39,330
same pattern in both drafts Colinas

1498
01:21:37,230 --> 01:21:42,240
question how often the us-backed is

1499
01:21:39,330 --> 01:21:45,300
pattern to emerge in concrete

1500
01:21:42,240 --> 01:21:47,460
applications twice so far I'm aware of

1501
01:21:45,300 --> 01:21:50,910
an Ericsson application does that does

1502
01:21:47,460 --> 01:21:53,310
it - it's huge and so it's a pattern

1503
01:21:50,910 --> 01:21:54,559
that is very frequent I think it's very

1504
01:21:53,310 --> 01:21:56,150
useful to have as

1505
01:21:54,560 --> 01:22:03,200
Janell general pattern that we can use

1506
01:21:56,150 --> 01:22:11,929
for different applications any questions

1507
01:22:03,200 --> 01:22:14,360
or comments on that marketed authorized

1508
01:22:11,930 --> 01:22:16,850
not exactly on this on the previous part

1509
01:22:14,360 --> 01:22:19,370
on coral for responses and even error

1510
01:22:16,850 --> 01:22:22,480
code maybe we have yet another draft in

1511
01:22:19,370 --> 01:22:24,740
core and describing multicast responses

1512
01:22:22,480 --> 01:22:26,660
for a group of salvations where

1513
01:22:24,740 --> 01:22:29,030
individual clients are signal about that

1514
01:22:26,660 --> 01:22:30,950
with a response message which is an

1515
01:22:29,030 --> 01:22:33,679
error response in fact so probably

1516
01:22:30,950 --> 01:22:37,280
coracle be helpful for those kinds of

1517
01:22:33,680 --> 01:22:40,280
responses to and about error codes maybe

1518
01:22:37,280 --> 01:22:44,469
we can find something even better to

1519
01:22:40,280 --> 01:22:44,469
indicate exactly that other than 5:03

1520
01:22:44,770 --> 01:22:53,030
yeah so and what you call error really

1521
01:22:48,650 --> 01:22:55,070
is more like a redirect and we said we

1522
01:22:53,030 --> 01:22:58,969
don't want to have a redirect at the

1523
01:22:55,070 --> 01:23:01,639
protocol level because it's something

1524
01:22:58,970 --> 01:23:04,340
that really an application should be

1525
01:23:01,640 --> 01:23:07,100
doing and to do this the application

1526
01:23:04,340 --> 01:23:10,720
needs some data so I think that that

1527
01:23:07,100 --> 01:23:10,720
fits together very very well

1528
01:23:12,280 --> 01:23:28,490
anything else on general on Coral Yes No

1529
01:23:20,930 --> 01:23:31,649
maybe I have one thing I would like to

1530
01:23:28,490 --> 01:23:31,648
[Music]

1531
01:23:32,890 --> 01:23:35,890
okay

1532
01:23:46,989 --> 01:23:56,480
yeah to get this thing shipped I think

1533
01:23:52,099 --> 01:23:58,280
we need to have an idea when we want to

1534
01:23:56,480 --> 01:24:00,500
ship it I mean we can work for five more

1535
01:23:58,280 --> 01:24:02,059
years on this it's going to get better

1536
01:24:00,500 --> 01:24:04,610
every year

1537
01:24:02,059 --> 01:24:07,420
but maybe we need to ship something at

1538
01:24:04,610 --> 01:24:13,730
some point to get better feedback from

1539
01:24:07,420 --> 01:24:17,770
people and my hunch is that we need

1540
01:24:13,730 --> 01:24:20,299
approximately one IDF to close all these

1541
01:24:17,770 --> 01:24:23,929
issues that are currently in the

1542
01:24:20,300 --> 01:24:29,090
repository maybe doing this using an

1543
01:24:23,929 --> 01:24:31,250
issue of the day process and then when

1544
01:24:29,090 --> 01:24:33,469
we say ok our issues are closed we have

1545
01:24:31,250 --> 01:24:35,659
something like an implementation draft

1546
01:24:33,469 --> 01:24:40,130
that we can recommend people to

1547
01:24:35,659 --> 01:24:42,860
implement we take another IGF a period

1548
01:24:40,130 --> 01:24:47,480
to get these implementations get the

1549
01:24:42,860 --> 01:24:49,940
feedback and improve the document based

1550
01:24:47,480 --> 01:24:55,129
on that feedback maybe also get a few

1551
01:24:49,940 --> 01:24:58,848
reviews from outside the web the thing

1552
01:24:55,130 --> 01:25:03,730
web community into the big web community

1553
01:24:58,849 --> 01:25:09,199
so with this timeline we would shoot for

1554
01:25:03,730 --> 01:25:11,690
working a blast call in mid 2020 and the

1555
01:25:09,199 --> 01:25:14,089
question is of course we have the

1556
01:25:11,690 --> 01:25:16,460
resources to pull this off

1557
01:25:14,090 --> 01:25:21,079
but the question of course is also do

1558
01:25:16,460 --> 01:25:23,630
people see a big problem with this

1559
01:25:21,079 --> 01:25:27,440
should we be faster but I don't know we

1560
01:25:23,630 --> 01:25:30,739
can be should we we take some more time

1561
01:25:27,440 --> 01:25:34,730
because things are may be a bit rougher

1562
01:25:30,739 --> 01:25:37,250
and then I perceive at the moment so

1563
01:25:34,730 --> 01:25:43,070
that that's where I would love to get

1564
01:25:37,250 --> 01:25:48,650
some input for instance from Jim who was

1565
01:25:43,070 --> 01:25:51,049
played a lot with her he's saying in the

1566
01:25:48,650 --> 01:25:54,980
chat um that HRF needs to happen also in

1567
01:25:51,050 --> 01:25:58,510
parallel so when I say Kowal I always

1568
01:25:54,980 --> 01:26:10,968
mean these two draft draft

1569
01:25:58,510 --> 01:26:13,099
overly intrusive call it wish I can

1570
01:26:10,969 --> 01:26:15,079
report that while there weren't many

1571
01:26:13,099 --> 01:26:17,360
draft updates in the last months since

1572
01:26:15,079 --> 01:26:20,449
Montreal on Coral there has been a ton

1573
01:26:17,360 --> 01:26:22,909
of validation of coral it has been

1574
01:26:20,449 --> 01:26:26,539
applied to a larger use case

1575
01:26:22,909 --> 01:26:29,570
internally and I think the concepts are

1576
01:26:26,539 --> 01:26:32,090
now rock solid we are not going to

1577
01:26:29,570 --> 01:26:34,369
change anything about that but we have

1578
01:26:32,090 --> 01:26:40,789
this list of issues that might lead to

1579
01:26:34,369 --> 01:26:42,438
some tweaks so Jim from Jabbar the

1580
01:26:40,789 --> 01:26:45,199
basics work well trying to solve

1581
01:26:42,439 --> 01:26:47,030
dictionaries is still an issue and also

1582
01:26:45,199 --> 01:26:50,989
do you want to solve the json coral on

1583
01:26:47,030 --> 01:26:51,739
the same time schedule that's an

1584
01:26:50,989 --> 01:26:57,799
interesting question

1585
01:26:51,739 --> 01:27:02,989
yes I'm not sure we have enough data to

1586
01:26:57,800 --> 01:27:07,189
to answer that question but we could try

1587
01:27:02,989 --> 01:27:10,209
to you don't know what kinds of problems

1588
01:27:07,189 --> 01:27:13,459
we run into when we're doing this we

1589
01:27:10,209 --> 01:27:15,019
have two proposals for Jason

1590
01:27:13,459 --> 01:27:17,539
serialization I think it's just a matter

1591
01:27:15,019 --> 01:27:29,389
of taking one of those okay and that's

1592
01:27:17,539 --> 01:27:39,800
difficult because both ugly okay you you

1593
01:27:29,389 --> 01:27:42,709
wanted to use the last three minutes yes

1594
01:27:39,800 --> 01:27:44,840
thank you casting hi I'm Francesca and I

1595
01:27:42,709 --> 01:27:47,499
have no prepared slides or any

1596
01:27:44,840 --> 01:27:57,459
presentation for this so this is just

1597
01:27:47,499 --> 01:28:00,199
talking so in for the Oscar plus a doc

1598
01:27:57,459 --> 01:28:04,039
scenario we are wondering about

1599
01:28:00,199 --> 01:28:06,138
something we like feedback from employee

1600
01:28:04,039 --> 01:28:08,539
implementers and also people who have

1601
01:28:06,139 --> 01:28:11,600
ideas about constrained implementations

1602
01:28:08,539 --> 01:28:15,290
I have started talking about this way

1603
01:28:11,600 --> 01:28:17,450
several people Klaus militia Jim and I

1604
01:28:15,290 --> 01:28:20,750
would like to hear if more people have

1605
01:28:17,450 --> 01:28:26,840
opinions so the issue or the problem

1606
01:28:20,750 --> 01:28:31,340
statement is for the aid of protocol we

1607
01:28:26,840 --> 01:28:35,960
have three messages protocol or exchange

1608
01:28:31,340 --> 01:28:37,340
and this third message so that goes from

1609
01:28:35,960 --> 01:28:41,690
the client to the server could be

1610
01:28:37,340 --> 01:28:45,460
combined with the first Oscar request

1611
01:28:41,690 --> 01:28:48,650
that comes after the ED of protocol so

1612
01:28:45,460 --> 01:28:52,150
the question is how can we combine this

1613
01:28:48,650 --> 01:28:56,839
third addict message with a no score

1614
01:28:52,150 --> 01:29:02,200
request and of course transport all of

1615
01:28:56,840 --> 01:29:05,140
it in coop so we have identified

1616
01:29:02,200 --> 01:29:09,590
possible three possible solutions and

1617
01:29:05,140 --> 01:29:10,010
I've heard several different opinions on

1618
01:29:09,590 --> 01:29:17,570
this

1619
01:29:10,010 --> 01:29:20,350
so militia from six dish he he said that

1620
01:29:17,570 --> 01:29:24,139
his preferred option would be to

1621
01:29:20,350 --> 01:29:28,550
actually transport the evoke message in

1622
01:29:24,140 --> 01:29:33,710
a no score protected co-op request so

1623
01:29:28,550 --> 01:29:35,630
that would mean adding the a doc data or

1624
01:29:33,710 --> 01:29:37,940
the message three or whatever you want

1625
01:29:35,630 --> 01:29:43,100
to call that into the payload together

1626
01:29:37,940 --> 01:29:48,110
with the cipher text and signal it in in

1627
01:29:43,100 --> 01:29:49,880
a way to to the to the server

1628
01:29:48,110 --> 01:29:52,610
so this signaling could be done in two

1629
01:29:49,880 --> 01:29:54,860
different ways Klauss supported the way

1630
01:29:52,610 --> 01:29:57,410
where this england instant directly into

1631
01:29:54,860 --> 01:30:00,080
the oscar option value so this would

1632
01:29:57,410 --> 01:30:04,400
mean that server would have to parse the

1633
01:30:00,080 --> 01:30:07,610
option value to to be able to realize

1634
01:30:04,400 --> 01:30:09,920
that in the payload of the co-op message

1635
01:30:07,610 --> 01:30:13,070
it's not on the oscar ciphertext but

1636
01:30:09,920 --> 01:30:15,260
also the ADAC message three and militia

1637
01:30:13,070 --> 01:30:18,830
initially was as it turned about this

1638
01:30:15,260 --> 01:30:21,470
and after checking that it's the code he

1639
01:30:18,830 --> 01:30:24,949
said that it's fine because he first

1640
01:30:21,470 --> 01:30:27,709
done he first does parsing of the option

1641
01:30:24,949 --> 01:30:30,289
then afterward he does processing of the

1642
01:30:27,709 --> 01:30:32,599
option so that would be fine for him but

1643
01:30:30,289 --> 01:30:35,630
Jim had a very strong reaction against

1644
01:30:32,599 --> 01:30:39,829
this because his code makes this very

1645
01:30:35,630 --> 01:30:46,340
difficult so his preferred option would

1646
01:30:39,829 --> 01:30:48,259
be to send the Oscar message inside an

1647
01:30:46,340 --> 01:30:50,749
addict message ok what is an addict

1648
01:30:48,260 --> 01:30:53,690
message that just the co-op message with

1649
01:30:50,749 --> 01:30:55,880
a doc in the payload so there is a doc

1650
01:30:53,690 --> 01:30:58,249
message three in the payload and what he

1651
01:30:55,880 --> 01:31:03,010
proposed and Jim please correct me if

1652
01:30:58,249 --> 01:31:05,869
I'm mistaken or misunderstanding is that

1653
01:31:03,010 --> 01:31:07,630
together with the a doc message three in

1654
01:31:05,869 --> 01:31:11,239
the coop payload there will be something

1655
01:31:07,630 --> 01:31:14,989
signaling that also the Oscar option

1656
01:31:11,239 --> 01:31:17,718
value and the Oscar ciphertext will be

1657
01:31:14,989 --> 01:31:22,848
contained in that same payload so what

1658
01:31:17,719 --> 01:31:26,329
the server would have to do is to take

1659
01:31:22,849 --> 01:31:29,539
the message process a doc and the other

1660
01:31:26,329 --> 01:31:34,579
processing would also start or would

1661
01:31:29,539 --> 01:31:36,800
also parse this payload and remove the

1662
01:31:34,579 --> 01:31:39,768
ciphertext and Oscar option and put them

1663
01:31:36,800 --> 01:31:42,769
at the right place so that when the coop

1664
01:31:39,769 --> 01:31:44,510
message is processed the Oscar option

1665
01:31:42,769 --> 01:31:47,719
will be added to the message and then

1666
01:31:44,510 --> 01:31:49,280
Oscar can be processed so the if in the

1667
01:31:47,719 --> 01:31:54,380
first case the processing would have

1668
01:31:49,280 --> 01:31:57,530
been okay co-op parsing Oscar parsing

1669
01:31:54,380 --> 01:32:01,030
than a doc then Oscar processing then

1670
01:31:57,530 --> 01:32:05,360
co-op in the second case it would be

1671
01:32:01,030 --> 01:32:09,559
co-op parsing a doc parsing a doc

1672
01:32:05,360 --> 01:32:12,440
processing Oscar Oscar parsing Oscar

1673
01:32:09,559 --> 01:32:14,329
processing so okay so this is recorded

1674
01:32:12,440 --> 01:32:18,589
so you can go back and listen to it

1675
01:32:14,329 --> 01:32:20,719
after but this makes sense so I actually

1676
01:32:18,590 --> 01:32:23,510
I am doing this fast because we don't

1677
01:32:20,719 --> 01:32:26,659
have time but I think that people who

1678
01:32:23,510 --> 01:32:27,380
have I've talked to have an idea what

1679
01:32:26,659 --> 01:32:35,360
I'm talking about

1680
01:32:27,380 --> 01:32:37,510
I hope re quick a flowchart yeah we can

1681
01:32:35,360 --> 01:32:39,820
you can sketch this out but okay

1682
01:32:37,510 --> 01:32:41,410
so I have a last option which I would

1683
01:32:39,820 --> 01:32:44,380
like to hear from that militia brought

1684
01:32:41,410 --> 01:32:48,940
up and he said that this would be his

1685
01:32:44,380 --> 01:32:51,220
preferred option for him and so this and

1686
01:32:48,940 --> 01:32:52,870
I haven't talked to Jim or Klaus about

1687
01:32:51,220 --> 01:32:56,350
this and I would like to hear everybody

1688
01:32:52,870 --> 01:32:59,980
else comment that would be to create a

1689
01:32:56,350 --> 01:33:03,850
new option called a doc this option is

1690
01:32:59,980 --> 01:33:08,410
sent empty the only reason for having

1691
01:33:03,850 --> 01:33:10,810
this option is to say signal that the

1692
01:33:08,410 --> 01:33:14,260
ADAC message 3 is included in the

1693
01:33:10,810 --> 01:33:16,989
payload also this option will be defined

1694
01:33:14,260 --> 01:33:21,040
so that like in the specification it

1695
01:33:16,989 --> 01:33:25,570
would say process this option before

1696
01:33:21,040 --> 01:33:30,670
processing or score so would that would

1697
01:33:25,570 --> 01:33:34,389
be an unprotected Oscar option so Oscar

1698
01:33:30,670 --> 01:33:38,350
would leave it as is and by processing

1699
01:33:34,390 --> 01:33:41,160
first before Oscar what the server would

1700
01:33:38,350 --> 01:33:44,170
do would be just to parse the payload

1701
01:33:41,160 --> 01:33:46,300
take out the doc and start the other

1702
01:33:44,170 --> 01:33:52,989
processing which is what Jim didn't like

1703
01:33:46,300 --> 01:33:56,710
but yes so I I would like to hear

1704
01:33:52,989 --> 01:33:58,360
opinions about this and I think that we

1705
01:33:56,710 --> 01:34:02,410
have on one side implement

1706
01:33:58,360 --> 01:34:05,139
implementation that are constrained and

1707
01:34:02,410 --> 01:34:07,170
more have co-op more integrated with all

1708
01:34:05,140 --> 01:34:11,310
score and on the other side

1709
01:34:07,170 --> 01:34:15,100
implementation who are more general and

1710
01:34:11,310 --> 01:34:23,680
have libraries and so switching from one

1711
01:34:15,100 --> 01:34:26,080
library to the other is hard but yeah so

1712
01:34:23,680 --> 01:34:28,720
what I what I think we should keep in

1713
01:34:26,080 --> 01:34:30,850
mind with either code and for me either

1714
01:34:28,720 --> 01:34:33,040
of those three would kind of work is

1715
01:34:30,850 --> 01:34:37,120
that what we are doing on a semantic

1716
01:34:33,040 --> 01:34:40,840
level is sending two dead two separate

1717
01:34:37,120 --> 01:34:43,059
rest requests that one is the first

1718
01:34:40,840 --> 01:34:45,160
process this attack message 3 which is

1719
01:34:43,060 --> 01:34:48,430
usually opposed to a particular resource

1720
01:34:45,160 --> 01:34:51,280
and then process whatever is in the

1721
01:34:48,430 --> 01:34:53,860
the message and that we are doing this

1722
01:34:51,280 --> 01:34:55,929
here and we may short-circuit through

1723
01:34:53,860 --> 01:34:57,219
this process but we should be aware that

1724
01:34:55,930 --> 01:35:00,040
this is what we're doing

1725
01:34:57,220 --> 01:35:02,520
yes this is exactly what we're doing yes

1726
01:35:00,040 --> 01:35:05,950
and we're trying to do it in a way that

1727
01:35:02,520 --> 01:35:09,400
implementations can do it without too

1728
01:35:05,950 --> 01:35:17,830
much pain so the question is what's the

1729
01:35:09,400 --> 01:35:19,990
best option that we degrade coop it to a

1730
01:35:17,830 --> 01:35:23,140
simple message forwarding protocol and

1731
01:35:19,990 --> 01:35:25,260
run or score on top of that and since

1732
01:35:23,140 --> 01:35:27,640
then everything is going downhill I

1733
01:35:25,260 --> 01:35:29,650
don't think there's a good option here

1734
01:35:27,640 --> 01:35:35,500
yeah they're only really bad and really

1735
01:35:29,650 --> 01:35:38,139
really bad options ok something I

1736
01:35:35,500 --> 01:35:40,120
haven't ok something I haven't said I

1737
01:35:38,140 --> 01:35:43,840
think it's important is that this will

1738
01:35:40,120 --> 01:35:47,110
be an optimization so we still have the

1739
01:35:43,840 --> 01:35:50,410
option or the default option of running

1740
01:35:47,110 --> 01:35:54,040
a doc first which runs on top of like

1741
01:35:50,410 --> 01:35:56,200
transported on coop in coop and then so

1742
01:35:54,040 --> 01:35:58,720
it's 2 passes and then start running as

1743
01:35:56,200 --> 01:36:00,940
Oscar that's that's the default well

1744
01:35:58,720 --> 01:36:03,970
here we're trying to think since it's

1745
01:36:00,940 --> 01:36:06,129
important for 6 dish to have us little

1746
01:36:03,970 --> 01:36:08,260
round trips as possible as few round

1747
01:36:06,130 --> 01:36:12,940
trips as possible how can we optimize

1748
01:36:08,260 --> 01:36:18,130
them so yeah this is this is an

1749
01:36:12,940 --> 01:36:20,730
optimization thing already filling up

1750
01:36:18,130 --> 01:36:27,310
the blocks anyway so you need multiple

1751
01:36:20,730 --> 01:36:31,780
datagrams I don't think so I think I

1752
01:36:27,310 --> 01:36:34,660
talked message 3 you mentioned was 2022

1753
01:36:31,780 --> 01:36:38,620
bite something like that so I don't

1754
01:36:34,660 --> 01:36:42,190
think that plus your score request

1755
01:36:38,620 --> 01:36:49,320
whatever that is but Oscar overhead is

1756
01:36:42,190 --> 01:36:55,870
like 10 bytes so I don't think so we can

1757
01:36:49,320 --> 01:36:58,139
do ipv6 next year so we can look at that

1758
01:36:55,870 --> 01:36:58,140
but

1759
01:36:59,920 --> 01:37:06,690
okay but we can take interim on this if

1760
01:37:02,860 --> 01:37:12,400
you think it's it's okay maybe it's

1761
01:37:06,690 --> 01:37:17,110
worth thinking about piggybacking in a

1762
01:37:12,400 --> 01:37:19,620
motion yeah since I'm not sure that will

1763
01:37:17,110 --> 01:37:24,370
lead us anywhere but maybe it does and

1764
01:37:19,620 --> 01:37:27,960
then we can use that but maybe we do

1765
01:37:24,370 --> 01:37:27,960
something very specific very ad hoc

1766
01:37:30,420 --> 01:37:33,270
great thank you

1767
01:37:32,120 --> 01:37:36,239
[Music]

1768
01:37:33,270 --> 01:37:39,989
okay as I said we are on the hallway for

1769
01:37:36,239 --> 01:37:44,530
seven minutes already thank you for your

1770
01:37:39,989 --> 01:37:47,110
patience and see you all in in the

1771
01:37:44,530 --> 01:37:51,309
interims and in vancouver maybe i should

1772
01:37:47,110 --> 01:37:54,519
say that the the hallway sentiment was

1773
01:37:51,310 --> 01:37:58,000
that having an interim meeting every two

1774
01:37:54,520 --> 01:38:00,120
weeks might be a bit too often so we

1775
01:37:58,000 --> 01:38:04,390
probably will come up with an interim

1776
01:38:00,120 --> 01:38:12,519
schedule that's a bit lighter but we can

1777
01:38:04,390 --> 01:38:14,640
do that on the mailing list every trip

1778
01:38:12,520 --> 01:38:14,640
home

