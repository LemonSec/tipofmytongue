1
00:00:27,420 --> 00:00:30,489
[Music]

2
00:00:34,110 --> 00:00:36,850
who's going to be the mend and ten

3
00:00:36,430 --> 00:00:40,750
Harkins

4
00:00:36,850 --> 00:00:47,940
yeah yeah he done it in the past dollar

5
00:00:40,750 --> 00:00:47,940
is no job all right

6
00:00:48,210 --> 00:00:52,020
money good afternoon

7
00:00:50,830 --> 00:00:55,660
[Music]

8
00:00:52,020 --> 00:00:59,649
so this is IR TF crypto forum research

9
00:00:55,660 --> 00:01:03,190
group meeting we're getting bigger rooms

10
00:00:59,649 --> 00:01:11,790
and they're getting colder just I don't

11
00:01:03,190 --> 00:01:18,210
know to keep your wake up or not so

12
00:01:11,790 --> 00:01:21,900
we're two chairs this time me and Nick

13
00:01:18,210 --> 00:01:25,179
updated note well I hope you've seen it

14
00:01:21,900 --> 00:01:29,280
this week if not I suggest you download

15
00:01:25,180 --> 00:01:29,280
slides and make sure that you read them

16
00:01:33,020 --> 00:01:46,310
right this is our gender just double

17
00:01:43,070 --> 00:01:53,830
check that if people want to bash that

18
00:01:46,310 --> 00:01:53,830
gender all right

19
00:01:56,590 --> 00:02:02,020
we have Jabari Labor's and thank you

20
00:02:00,409 --> 00:02:05,869
Valeri we have done

21
00:02:02,020 --> 00:02:09,318
Harkins doing taking notes

22
00:02:05,869 --> 00:02:19,850
thank you we have blue sheets going

23
00:02:09,318 --> 00:02:26,329
around the room I hope very quick update

24
00:02:19,850 --> 00:02:29,840
on documents we have one new RFC

25
00:02:26,330 --> 00:02:31,220
published under King Thank You stanislav

26
00:02:29,840 --> 00:02:37,910
for driving this work

27
00:02:31,220 --> 00:02:40,790
oh and my apologies for listing the

28
00:02:37,910 --> 00:02:43,570
document twice in its it's no longer in

29
00:02:40,790 --> 00:02:49,310
our cellular skew it's already published

30
00:02:43,570 --> 00:02:54,829
in our gone document is very nearly done

31
00:02:49,310 --> 00:02:57,140
I think the next step is for IRT fgr to

32
00:02:54,829 --> 00:03:04,480
review double check the document and ask

33
00:02:57,140 --> 00:03:04,480
where is g24 objections to publish

34
00:03:09,160 --> 00:03:25,990
randomness improvements document it's

35
00:03:11,910 --> 00:03:28,180
done right um I think I'll do review all

36
00:03:25,990 --> 00:03:30,480
I'll need to follow up and send it to :

37
00:03:28,180 --> 00:03:30,480
as well

38
00:03:31,110 --> 00:03:38,530
Spectre is waiting for Kenny we have

39
00:03:35,590 --> 00:03:43,060
lots of documents in flight we have a

40
00:03:38,530 --> 00:03:47,440
couple of new documents now one is Hadji

41
00:03:43,060 --> 00:03:52,090
pairing from the curves and ristretto

42
00:03:47,440 --> 00:03:55,390
document was adopted by the FRG but the

43
00:03:52,090 --> 00:03:58,540
reserve document wasn't polished yet

44
00:03:55,390 --> 00:04:10,029
I just got email from one of the editors

45
00:03:58,540 --> 00:04:11,769
that they are working on this in

46
00:04:10,030 --> 00:04:15,850
addition to this we also going through

47
00:04:11,770 --> 00:04:19,209
pack selection process which is being

48
00:04:15,850 --> 00:04:22,350
driven by Stanislav thank you again for

49
00:04:19,209 --> 00:04:23,560
this we'll have a presentation on this

50
00:04:22,350 --> 00:04:31,830
okay

51
00:04:23,560 --> 00:04:37,810
next also we have a crypto review panel

52
00:04:31,830 --> 00:04:40,030
which initial term hi just a question on

53
00:04:37,810 --> 00:04:43,060
the previous slide yeah

54
00:04:40,030 --> 00:04:48,669
the icon to draft it did it that get

55
00:04:43,060 --> 00:04:50,770
updated did I miss an update I think

56
00:04:48,669 --> 00:04:53,669
it's very 8 I think it was a very little

57
00:04:50,770 --> 00:04:56,469
thing that you agreed was okay is okay

58
00:04:53,669 --> 00:04:59,200
we should check chess afterwards because

59
00:04:56,470 --> 00:05:00,520
I was expecting an update so maybe we

60
00:04:59,200 --> 00:05:04,690
should just double-check where we're at

61
00:05:00,520 --> 00:05:06,310
yes absolutely yeah okay sure I think

62
00:05:04,690 --> 00:05:08,410
that's what the useful part about

63
00:05:06,310 --> 00:05:09,850
bringing the slides because it helps us

64
00:05:08,410 --> 00:05:13,690
to figure out whether we're waiting for

65
00:05:09,850 --> 00:05:15,010
anybody and just to make sure that we

66
00:05:13,690 --> 00:05:16,360
ask you the right question and your

67
00:05:15,010 --> 00:05:19,090
expert you know you know what this data

68
00:05:16,360 --> 00:05:20,870
it is as well yes yes and for the notes

69
00:05:19,090 --> 00:05:26,479
are I'm Colin Perkins

70
00:05:20,870 --> 00:05:28,479
thank you so the crypto review panel was

71
00:05:26,480 --> 00:05:31,550
formed in September 2016

72
00:05:28,479 --> 00:05:35,990
realistically started reviewing

73
00:05:31,550 --> 00:05:39,770
documents for the FRG skewers here

74
00:05:35,990 --> 00:05:42,229
Independence Day in beginning 2017 with

75
00:05:39,770 --> 00:05:45,969
back selection process who asked members

76
00:05:42,229 --> 00:05:50,780
to continue till the end of the year

77
00:05:45,970 --> 00:05:52,760
chairs have decided about new membership

78
00:05:50,780 --> 00:05:56,000
but we just need to contact various

79
00:05:52,760 --> 00:06:01,070
people to double-check make sure that

80
00:05:56,000 --> 00:06:04,550
nobody wants to not accept since being

81
00:06:01,070 --> 00:06:08,540
nominated and we hopefully should be

82
00:06:04,550 --> 00:06:14,840
announcing this next week membership for

83
00:06:08,540 --> 00:06:17,500
the next two years right and with back

84
00:06:14,840 --> 00:06:20,929
selection process

85
00:06:17,500 --> 00:06:23,889
Stanislav will talk more about what

86
00:06:20,930 --> 00:06:26,630
we've done and what's next steps are

87
00:06:23,889 --> 00:06:29,419
we're basically with Crypt review panel

88
00:06:26,630 --> 00:06:35,840
sculpt we narrow down the choices to two

89
00:06:29,419 --> 00:06:38,030
balanced and two augmented packs because

90
00:06:35,840 --> 00:06:39,679
we didn't end up with one and one in

91
00:06:38,030 --> 00:06:44,929
each category we need to do a bit more

92
00:06:39,680 --> 00:06:48,620
work by we it's the whole community with

93
00:06:44,930 --> 00:06:51,950
crypto review panel and a little bit of

94
00:06:48,620 --> 00:06:54,700
work from the submitters so this will be

95
00:06:51,950 --> 00:06:54,700
presented next

96
00:07:12,840 --> 00:07:20,770
semiotics henyk so about stated soft

97
00:07:16,720 --> 00:07:25,510
back selection process all of this

98
00:07:20,770 --> 00:07:28,210
started in Bangkok in ITF at 103 so

99
00:07:25,510 --> 00:07:35,620
there was a decision to start back

100
00:07:28,210 --> 00:07:39,159
selection process it started as if May

101
00:07:35,620 --> 00:07:44,640
and we had two stages one and two before

102
00:07:39,160 --> 00:07:48,310
the Montreal meeting it's better and in

103
00:07:44,640 --> 00:07:53,200
Montreal we discussed this and we had

104
00:07:48,310 --> 00:07:56,320
eight good nominated pegs emanated by

105
00:07:53,200 --> 00:07:59,200
the persons enumerated in the slide and

106
00:07:56,320 --> 00:08:01,840
after that we had four more stages on

107
00:07:59,200 --> 00:08:04,360
stage three you asked people to be the

108
00:08:01,840 --> 00:08:06,580
reviewers for the enumerate equations we

109
00:08:04,360 --> 00:08:11,790
had a number of additional questions to

110
00:08:06,580 --> 00:08:15,719
be asked to be taken into account the

111
00:08:11,790 --> 00:08:21,030
questions are on the slide and we had a

112
00:08:15,720 --> 00:08:26,230
really great team of reviewers with

113
00:08:21,030 --> 00:08:28,270
really deep really wise reviews all of

114
00:08:26,230 --> 00:08:32,110
these people are on the slide many

115
00:08:28,270 --> 00:08:38,620
things for all of them these reviews are

116
00:08:32,110 --> 00:08:42,250
in fact I would say most wise and white

117
00:08:38,620 --> 00:08:43,900
and deep understanding of pecks

118
00:08:42,250 --> 00:08:48,790
I told not only the process I would say

119
00:08:43,900 --> 00:08:51,699
so as I related to IPSec and Taylor's

120
00:08:48,790 --> 00:08:54,339
protocols about other applications of

121
00:08:51,700 --> 00:08:55,990
products about security including

122
00:08:54,340 --> 00:08:59,050
security proofs including digital

123
00:08:55,990 --> 00:09:00,790
security issues and about some other

124
00:08:59,050 --> 00:09:03,010
business with some additional

125
00:09:00,790 --> 00:09:05,829
applications with some special

126
00:09:03,010 --> 00:09:10,410
properties of packs so again many thanks

127
00:09:05,830 --> 00:09:13,240
for all these people on the slide as a

128
00:09:10,410 --> 00:09:17,050
process answer overall reviews you're

129
00:09:13,240 --> 00:09:19,440
made based on these reviews then on

130
00:09:17,050 --> 00:09:26,040
stage four

131
00:09:19,440 --> 00:09:28,750
we had the reviewing process started and

132
00:09:26,040 --> 00:09:31,839
many things to Aaron Schaefer Forgan

133
00:09:28,750 --> 00:09:36,100
organizing epic selection if repository

134
00:09:31,839 --> 00:09:39,399
saw all the views on nominated pegs or

135
00:09:36,100 --> 00:09:42,420
immediate results are public here so

136
00:09:39,399 --> 00:09:44,380
please go here and go there and read

137
00:09:42,420 --> 00:09:47,339
everything throughout the process we

138
00:09:44,380 --> 00:09:52,029
tried to be perfectly transparent here

139
00:09:47,339 --> 00:09:54,970
then on stage 5 we had four people from

140
00:09:52,029 --> 00:09:57,880
Crete review panel to review all of

141
00:09:54,970 --> 00:10:00,610
these so we had four overall reviews for

142
00:09:57,880 --> 00:10:02,230
all eight packs from buren Tuchman Rask

143
00:10:00,610 --> 00:10:05,080
Housley our own chef aarón's then it was

144
00:10:02,230 --> 00:10:09,100
much life and all of them are made

145
00:10:05,080 --> 00:10:11,529
available again on each hub and to be

146
00:10:09,100 --> 00:10:15,790
very short these for review stage

147
00:10:11,529 --> 00:10:19,060
following scenes that for all of them

148
00:10:15,790 --> 00:10:21,640
have some preferences about pegs and I

149
00:10:19,060 --> 00:10:25,260
highlighted them in the slice bass blue

150
00:10:21,640 --> 00:10:28,420
for balance pegs and magenta for

151
00:10:25,260 --> 00:10:32,380
augmented pegs so at the end of the day

152
00:10:28,420 --> 00:10:37,329
we had in fact four pegs that were liked

153
00:10:32,380 --> 00:10:41,020
by some reviewers and so we had the

154
00:10:37,329 --> 00:10:46,660
plans to announce something here after

155
00:10:41,020 --> 00:10:50,740
stage six and so we've had four overall

156
00:10:46,660 --> 00:10:54,100
reviews we don't have any conflicts or

157
00:10:50,740 --> 00:10:57,190
contradictory opinions of the reviewers

158
00:10:54,100 --> 00:11:01,240
so I think the understanding of the

159
00:10:57,190 --> 00:11:05,560
situation is more or less similar but we

160
00:11:01,240 --> 00:11:09,579
don't have a single opinion on which one

161
00:11:05,560 --> 00:11:13,989
can be the only best one so as I was a

162
00:11:09,579 --> 00:11:17,949
decision to start round two with four

163
00:11:13,990 --> 00:11:21,610
pegs going to round two these four pegs

164
00:11:17,950 --> 00:11:25,060
are speak to see pace Oh park and our

165
00:11:21,610 --> 00:11:28,720
space to Berlin specs and to augmented

166
00:11:25,060 --> 00:11:30,630
pegs so four candidates left all

167
00:11:28,720 --> 00:11:32,650
reviewers

168
00:11:30,630 --> 00:11:35,830
more or less in favor of these

169
00:11:32,650 --> 00:11:40,689
candidates and another reason for going

170
00:11:35,830 --> 00:11:42,880
to around to that at last stages of pack

171
00:11:40,690 --> 00:11:46,330
selection process there were some

172
00:11:42,880 --> 00:11:48,939
additional issues discussed in the

173
00:11:46,330 --> 00:11:51,460
mailing list for example quantum

174
00:11:48,940 --> 00:11:55,150
annoyance post quantum readiness some

175
00:11:51,460 --> 00:12:00,280
issues about whether we are rated at one

176
00:11:55,150 --> 00:12:03,430
discrete logarithm to be broken can make

177
00:12:00,280 --> 00:12:05,800
the whole protocol broken or just some

178
00:12:03,430 --> 00:12:07,870
instances of risk so we had some

179
00:12:05,800 --> 00:12:14,949
particular questions some overall

180
00:12:07,870 --> 00:12:17,350
questions and they were not addressed in

181
00:12:14,950 --> 00:12:22,860
the reviews because it were erased later

182
00:12:17,350 --> 00:12:28,030
so we decided to start round two

183
00:12:22,860 --> 00:12:30,340
moreover interviews were desire to have

184
00:12:28,030 --> 00:12:34,300
both one balanced pack and one augmented

185
00:12:30,340 --> 00:12:36,820
pack and luckily we have two plus two

186
00:12:34,300 --> 00:12:40,089
candidates to four balanced and two

187
00:12:36,820 --> 00:12:43,330
fermented so in my opinion the intention

188
00:12:40,090 --> 00:12:45,640
can be but it's an intention to select

189
00:12:43,330 --> 00:12:47,890
one or zero balanced pack and one or

190
00:12:45,640 --> 00:12:51,510
zero augmented pack so in fact

191
00:12:47,890 --> 00:12:54,780
allocating two categories of contest

192
00:12:51,510 --> 00:12:59,040
proposed plan and timeline for around to

193
00:12:54,780 --> 00:13:02,650
say Stage one of round 2 starts tomorrow

194
00:12:59,040 --> 00:13:06,400
so we plan to collect additional

195
00:13:02,650 --> 00:13:09,130
questions for all four candidates and

196
00:13:06,400 --> 00:13:11,650
these questions can be about particular

197
00:13:09,130 --> 00:13:15,900
questions or modifications for each

198
00:13:11,650 --> 00:13:19,000
candidate for example some issues about

199
00:13:15,900 --> 00:13:23,020
reduced versions of CPS and also pays

200
00:13:19,000 --> 00:13:26,380
about possible modifications of speak to

201
00:13:23,020 --> 00:13:30,780
with selection of its parameters based

202
00:13:26,380 --> 00:13:33,700
on half the curve and some other

203
00:13:30,780 --> 00:13:38,050
particular questions about eliminated

204
00:13:33,700 --> 00:13:41,020
Thanks and overall questions that can be

205
00:13:38,050 --> 00:13:42,819
taken into account additionally so these

206
00:13:41,020 --> 00:13:46,779
questions are collected by

207
00:13:42,819 --> 00:13:48,748
crypto panel at iron a fork this many

208
00:13:46,779 --> 00:13:51,009
places public so everyone can read

209
00:13:48,749 --> 00:13:54,249
everything sir

210
00:13:51,009 --> 00:13:57,639
at stage two which will last until 17th

211
00:13:54,249 --> 00:14:01,479
of December the list of any questions

212
00:13:57,639 --> 00:14:03,699
will be published exact it's up and the

213
00:14:01,479 --> 00:14:06,999
super-g will be asked if anything else

214
00:14:03,699 --> 00:14:11,709
should be added to the list at stage 3

215
00:14:06,999 --> 00:14:14,889
we'll ask our all sorts of nominations

216
00:14:11,709 --> 00:14:17,768
to prepare the replies to these

217
00:14:14,889 --> 00:14:19,720
additional questions and provide the

218
00:14:17,769 --> 00:14:22,479
qualifications for maybe additional

219
00:14:19,720 --> 00:14:24,729
security proofs and at stage 4 again

220
00:14:22,479 --> 00:14:27,129
Twitter of a panel members will prepare

221
00:14:24,729 --> 00:14:31,239
new overall reviews of course based on

222
00:14:27,129 --> 00:14:34,359
both previous results because round 2 we

223
00:14:31,239 --> 00:14:36,449
collected most part of information about

224
00:14:34,359 --> 00:14:40,359
everything and taken into account

225
00:14:36,449 --> 00:14:46,809
replies for new creations on round 2 and

226
00:14:40,359 --> 00:14:50,109
so in Vancouver we'll have a status

227
00:14:46,809 --> 00:14:52,719
update and again as a review of the

228
00:14:50,109 --> 00:14:54,909
process will be given and if everything

229
00:14:52,720 --> 00:14:57,220
is clear 1 or 0 balance back

230
00:14:54,909 --> 00:15:00,549
selected 1 or 0 augmented packet

231
00:14:57,220 --> 00:15:02,949
selected and say 4G document like

232
00:15:00,549 --> 00:15:08,049
recommendations for pegs in ITF

233
00:15:02,949 --> 00:15:10,149
protocols seem to be announced so we

234
00:15:08,049 --> 00:15:12,629
commend that in one of the reviews by

235
00:15:10,149 --> 00:15:19,509
Aaron Schaefer there was a really great

236
00:15:12,629 --> 00:15:20,129
summary of why we simply need this safe

237
00:15:19,509 --> 00:15:23,669
regime

238
00:15:20,129 --> 00:15:28,409
document about recommended packs because

239
00:15:23,669 --> 00:15:30,999
even after we select one or two or 0 X

240
00:15:28,409 --> 00:15:33,809
we'll have protocols we have

241
00:15:30,999 --> 00:15:36,879
clarifications but we'll still need to

242
00:15:33,809 --> 00:15:40,600
make all recommendations for integration

243
00:15:36,879 --> 00:15:44,379
into ITF protocols really clear with

244
00:15:40,600 --> 00:15:47,229
test vectors with address on all issues

245
00:15:44,379 --> 00:15:49,720
that can be raised by ITF people so

246
00:15:47,229 --> 00:15:53,159
we'll need to have additional work to

247
00:15:49,720 --> 00:15:56,290
make this document for SSL expects and

248
00:15:53,159 --> 00:16:01,029
so this seems to be our net

249
00:15:56,290 --> 00:16:05,439
sections after we select X so what's now

250
00:16:01,029 --> 00:16:09,130
now we ask all say for G and also of

251
00:16:05,440 --> 00:16:11,410
course criminal members to send their

252
00:16:09,130 --> 00:16:15,069
additional questions that must be

253
00:16:11,410 --> 00:16:18,250
considered during round two for all pecs

254
00:16:15,069 --> 00:16:22,410
so please send them to crypto panel at

255
00:16:18,250 --> 00:16:25,569
RT fork and I'll repeat this request

256
00:16:22,410 --> 00:16:36,339
today or tomorrow Tuesday safer G melon

257
00:16:25,569 --> 00:16:43,000
tastes so many things any questions ok

258
00:16:36,339 --> 00:16:58,089
so thank you next is Chris waters gonna

259
00:16:43,000 --> 00:17:00,009
be speaking for weird Joaquin all right

260
00:16:58,089 --> 00:17:02,339
everyone my name is Chris wood this is a

261
00:17:00,009 --> 00:17:04,959
quick update on the hash to curve draft

262
00:17:02,339 --> 00:17:07,059
since the last meeting we've made

263
00:17:04,959 --> 00:17:08,230
several major updates I guess perhaps

264
00:17:07,059 --> 00:17:10,149
the most important one is that we've

265
00:17:08,230 --> 00:17:11,260
removed an algorithm that was redundant

266
00:17:10,150 --> 00:17:12,790
with a lot of things that we've already

267
00:17:11,260 --> 00:17:15,819
heard with other algorithms already

268
00:17:12,790 --> 00:17:18,309
present in the document that's a card so

269
00:17:15,819 --> 00:17:21,369
that should help simplify things moving

270
00:17:18,309 --> 00:17:22,689
forward we promoted the simplified SW

271
00:17:21,369 --> 00:17:25,359
map that was specifically meant for a

272
00:17:22,689 --> 00:17:26,740
very friendly curves up to the main part

273
00:17:25,359 --> 00:17:31,000
of the document previously it was in an

274
00:17:26,740 --> 00:17:34,000
appendix and it has applications to

275
00:17:31,000 --> 00:17:37,049
other curves so that's useful and then

276
00:17:34,000 --> 00:17:39,909
we generalized or rial general it's the

277
00:17:37,049 --> 00:17:41,770
SW algorithm to apply to basically any

278
00:17:39,909 --> 00:17:44,559
curve in the document whereas previously

279
00:17:41,770 --> 00:17:48,370
you only apply two curves with the base

280
00:17:44,559 --> 00:17:53,440
field whose prime was congruent to 1 mod

281
00:17:48,370 --> 00:17:54,820
3 so not much more say beyond that so

282
00:17:53,440 --> 00:17:55,659
and then a lot of minor updates went

283
00:17:54,820 --> 00:17:57,668
into the document as well

284
00:17:55,659 --> 00:18:00,159
so in particular we we had this issue

285
00:17:57,669 --> 00:18:02,740
for a long time about adding like a sort

286
00:18:00,159 --> 00:18:05,320
of flow chart for how you choose the

287
00:18:02,740 --> 00:18:07,720
particular hash to curve algorithm for a

288
00:18:05,320 --> 00:18:10,129
particular curve and we replaced that

289
00:18:07,720 --> 00:18:12,020
idea which is a simple block of text

290
00:18:10,130 --> 00:18:13,370
that basically says if you want to

291
00:18:12,020 --> 00:18:17,720
target you know pairing friendly curve

292
00:18:13,370 --> 00:18:19,100
use the SW variant of that makes the

293
00:18:17,720 --> 00:18:20,870
most sense if you want to target a

294
00:18:19,100 --> 00:18:23,480
Montgomery curve use alligator two in

295
00:18:20,870 --> 00:18:25,040
all other cases use a variant of SW that

296
00:18:23,480 --> 00:18:27,200
is the most efficient so it's simplified

297
00:18:25,040 --> 00:18:30,139
us it with you being preferred in some

298
00:18:27,200 --> 00:18:31,970
cases and then the e general one being

299
00:18:30,140 --> 00:18:35,660
used or being recommended in all other

300
00:18:31,970 --> 00:18:39,290
cases there was also requests to forget

301
00:18:35,660 --> 00:18:41,930
from whom to sort of allow other hash to

302
00:18:39,290 --> 00:18:45,320
base has to base implementations to be

303
00:18:41,930 --> 00:18:47,210
plugged in and while we didn't actually

304
00:18:45,320 --> 00:18:49,760
specify alternative constructions for

305
00:18:47,210 --> 00:18:50,930
hash surveys we basically laid down what

306
00:18:49,760 --> 00:18:54,020
the criteria would be for that

307
00:18:50,930 --> 00:18:55,370
particular function you know including

308
00:18:54,020 --> 00:18:56,960
things like it must be collision

309
00:18:55,370 --> 00:18:58,520
resistance it must not use rejection

310
00:18:56,960 --> 00:19:00,200
sampling or the try and increment thing

311
00:18:58,520 --> 00:19:02,720
to hash to the curve or hash to the base

312
00:19:00,200 --> 00:19:04,610
field so if someone wanted to do

313
00:19:02,720 --> 00:19:07,280
something other than you know the HK DF

314
00:19:04,610 --> 00:19:08,449
based function that we have to find they

315
00:19:07,280 --> 00:19:09,710
should follow the guidelines and

316
00:19:08,450 --> 00:19:10,910
hopefully everything will work out just

317
00:19:09,710 --> 00:19:13,070
fine

318
00:19:10,910 --> 00:19:16,640
we also added some clarity around how to

319
00:19:13,070 --> 00:19:18,500
do domain separation in in the document

320
00:19:16,640 --> 00:19:20,810
particularly how to construct the domain

321
00:19:18,500 --> 00:19:22,130
separation tag when adding hash to curve

322
00:19:20,810 --> 00:19:24,290
to other protocols

323
00:19:22,130 --> 00:19:26,780
you know listing things like including a

324
00:19:24,290 --> 00:19:29,440
protocol version number or some other

325
00:19:26,780 --> 00:19:33,680
kind of unique identifying information

326
00:19:29,440 --> 00:19:36,200
and I guess with relevance to a domain

327
00:19:33,680 --> 00:19:38,770
separation we did tweak the hash debase

328
00:19:36,200 --> 00:19:41,540
function a little bit in particular

329
00:19:38,770 --> 00:19:44,420
previously we would not have the input

330
00:19:41,540 --> 00:19:47,020
message or we would hatch the input

331
00:19:44,420 --> 00:19:50,200
message repeatedly in the iteration step

332
00:19:47,020 --> 00:19:54,139
there's like the initial expand message

333
00:19:50,200 --> 00:19:56,660
or extract message and then for each I

334
00:19:54,140 --> 00:19:59,900
guess if you're looking at I think it

335
00:19:56,660 --> 00:20:03,470
was extension fields for each element or

336
00:19:59,900 --> 00:20:05,030
each coordinate and a polynomial

337
00:20:03,470 --> 00:20:09,020
representation for an extension field

338
00:20:05,030 --> 00:20:10,910
you would do an expansion with HKD F

339
00:20:09,020 --> 00:20:13,639
with the full message which was possibly

340
00:20:10,910 --> 00:20:16,610
redundant so now what we do is just hash

341
00:20:13,640 --> 00:20:20,240
the message upon immediately calling

342
00:20:16,610 --> 00:20:21,679
hash debase and then for each element in

343
00:20:20,240 --> 00:20:23,960
the polynomial representation then you

344
00:20:21,680 --> 00:20:27,200
would just hash something or call H

345
00:20:23,960 --> 00:20:29,900
PF extract with a smaller input but to

346
00:20:27,200 --> 00:20:32,390
make sure that no call to H Mack in that

347
00:20:29,900 --> 00:20:33,320
function doesn't collides with one

348
00:20:32,390 --> 00:20:36,860
another

349
00:20:33,320 --> 00:20:39,340
the initial hash step that we do the

350
00:20:36,860 --> 00:20:42,260
initial HDI DF expand except that we do

351
00:20:39,340 --> 00:20:44,720
append a zero byte to the end of the

352
00:20:42,260 --> 00:20:49,580
message because the internal h-back

353
00:20:44,720 --> 00:20:52,910
implications from HK DF expand only

354
00:20:49,580 --> 00:20:56,210
append of non-negative numbers larger

355
00:20:52,910 --> 00:20:58,250
and equal to one anyways you can take a

356
00:20:56,210 --> 00:21:00,650
look at the document to sort of figure

357
00:20:58,250 --> 00:21:03,140
out what I mean there we did also

358
00:21:00,650 --> 00:21:05,960
specify and make it very clear how to

359
00:21:03,140 --> 00:21:08,840
compute the sign of the resulting point

360
00:21:05,960 --> 00:21:10,970
for a you know the output of a hash to

361
00:21:08,840 --> 00:21:12,590
curve operation and we made it part of

362
00:21:10,970 --> 00:21:14,450
the cipher Suites so there's no

363
00:21:12,590 --> 00:21:17,629
ambiguity and this was done specifically

364
00:21:14,450 --> 00:21:18,680
to help alignment with the vrf draft so

365
00:21:17,630 --> 00:21:21,380
hopefully now everything should be in

366
00:21:18,680 --> 00:21:25,100
good shape and they can adopt it as a

367
00:21:21,380 --> 00:21:26,630
you know sink bowl a call to hash to

368
00:21:25,100 --> 00:21:29,090
curve rather than response applying

369
00:21:26,630 --> 00:21:32,360
alligator - where's w and that in there

370
00:21:29,090 --> 00:21:33,800
doc and that's that work is currently

371
00:21:32,360 --> 00:21:36,350
underway

372
00:21:33,800 --> 00:21:38,600
we added some optimized and constant

373
00:21:36,350 --> 00:21:41,409
time square root computations because

374
00:21:38,600 --> 00:21:43,969
those were useful or those previously we

375
00:21:41,410 --> 00:21:45,440
can't really have any kind of concrete

376
00:21:43,970 --> 00:21:46,820
algorithm for doing so we just said you

377
00:21:45,440 --> 00:21:48,950
know compute the square root and do it

378
00:21:46,820 --> 00:21:51,860
in a constant time way but now we just

379
00:21:48,950 --> 00:21:54,230
really flush that out for different

380
00:21:51,860 --> 00:21:56,060
primes are different you know computing

381
00:21:54,230 --> 00:21:58,730
square root and field to different

382
00:21:56,060 --> 00:21:59,929
primes and if all else fails if you

383
00:21:58,730 --> 00:22:02,000
don't have an optimized version for a

384
00:21:59,930 --> 00:22:03,830
particular prime you we just use a

385
00:22:02,000 --> 00:22:07,460
constant side version of Tinelli shanks

386
00:22:03,830 --> 00:22:09,860
and we added some code to generate the

387
00:22:07,460 --> 00:22:12,920
certain parameters for the SW map that

388
00:22:09,860 --> 00:22:14,209
has been generalized also like to note

389
00:22:12,920 --> 00:22:17,030
that the domain separation stuff that I

390
00:22:14,210 --> 00:22:20,570
was referring to earlier is the output

391
00:22:17,030 --> 00:22:23,090
of or came about from discussion with

392
00:22:20,570 --> 00:22:24,350
Chris Patton and Benjamin lip who have

393
00:22:23,090 --> 00:22:27,830
been helping a lot with this draft on

394
00:22:24,350 --> 00:22:31,550
the side so special thanks to them so

395
00:22:27,830 --> 00:22:32,870
there are basically two major items that

396
00:22:31,550 --> 00:22:34,790
we needed to dude before moving this

397
00:22:32,870 --> 00:22:36,260
forward the first of which is to add the

398
00:22:34,790 --> 00:22:37,399
test vectors back that we took out

399
00:22:36,260 --> 00:22:39,140
before because the docking

400
00:22:37,400 --> 00:22:42,350
changing so much we're adding new

401
00:22:39,140 --> 00:22:44,180
algorithms and so on so we have proof of

402
00:22:42,350 --> 00:22:46,100
concepts age code in the repository

403
00:22:44,180 --> 00:22:47,180
where the document is hosted and most

404
00:22:46,100 --> 00:22:48,590
likely would just generate the test

405
00:22:47,180 --> 00:22:51,530
vectors from there there are ongoing

406
00:22:48,590 --> 00:22:53,510
implementations and go see and rust and

407
00:22:51,530 --> 00:22:55,820
we'd like to finish them and make sure

408
00:22:53,510 --> 00:22:59,320
they all interoperate with the test

409
00:22:55,820 --> 00:23:02,389
vectors and assuming all goes well

410
00:22:59,320 --> 00:23:04,669
assuming those two things happen in the

411
00:23:02,390 --> 00:23:06,920
near short-term we then like to

412
00:23:04,670 --> 00:23:10,160
potentially consider starting the last

413
00:23:06,920 --> 00:23:11,690
call for this particular document that's

414
00:23:10,160 --> 00:23:13,580
all I have I'm turning through the

415
00:23:11,690 --> 00:23:18,440
chairs to see if that plan sort of makes

416
00:23:13,580 --> 00:23:24,919
sense cool okay does anyone have any

417
00:23:18,440 --> 00:23:26,690
questions live many thanks again for

418
00:23:24,920 --> 00:23:30,170
doing this I think that a lot of

419
00:23:26,690 --> 00:23:32,270
protocols even in effigy really need

420
00:23:30,170 --> 00:23:34,160
Zeus at least there were some

421
00:23:32,270 --> 00:23:37,160
discussions about possible usage of hash

422
00:23:34,160 --> 00:23:40,010
the curve impacts so many things and

423
00:23:37,160 --> 00:23:43,010
happy to review the document while it

424
00:23:40,010 --> 00:23:44,990
will be on trophy process thank you yeah

425
00:23:43,010 --> 00:23:46,970
thanks actually good question at what

426
00:23:44,990 --> 00:23:51,110
point should be request crypto panel

427
00:23:46,970 --> 00:23:53,540
review for this at any point yeah any

428
00:23:51,110 --> 00:23:54,590
time you think it's graceful okay I mean

429
00:23:53,540 --> 00:23:56,120
I think we're at a point now where the

430
00:23:54,590 --> 00:23:57,500
content is relatively solidified so it

431
00:23:56,120 --> 00:23:59,090
would be good to say it or even if it's

432
00:23:57,500 --> 00:24:01,429
stable if it's not good to change myself

433
00:23:59,090 --> 00:24:03,639
yeah no it's a good time yeah okay great

434
00:24:01,429 --> 00:24:07,620
and I think we're at that point just

435
00:24:03,640 --> 00:24:09,550
send the sort of my reminder yep moving

436
00:24:07,620 --> 00:24:11,570
[Music]

437
00:24:09,550 --> 00:24:15,830
all right unless there's any other

438
00:24:11,570 --> 00:24:19,020
questions we can move on thank you

439
00:24:15,830 --> 00:24:19,020
[Music]

440
00:24:27,040 --> 00:24:30,149
[Music]

441
00:24:37,130 --> 00:24:43,920
so good afternoon everyone this is draft

442
00:24:40,590 --> 00:24:46,139
on HP ke that we've been working on this

443
00:24:43,920 --> 00:24:49,320
hybrid public key encryption you know

444
00:24:46,140 --> 00:24:50,700
ECI es renewed and modernized I'd like

445
00:24:49,320 --> 00:24:53,159
to thank Chris Wood for using the

446
00:24:50,700 --> 00:24:56,060
official standard theme for this session

447
00:24:53,160 --> 00:24:59,010
as well as in the hatch to curve session

448
00:24:56,060 --> 00:25:01,320
so this is a draft that as I guess we're

449
00:24:59,010 --> 00:25:02,640
in Oh to now because we noticed we

450
00:25:01,320 --> 00:25:04,679
published oh one and then published Oh

451
00:25:02,640 --> 00:25:06,300
to a few hours layers I recall because

452
00:25:04,680 --> 00:25:09,630
we found some some obvious errors to

453
00:25:06,300 --> 00:25:12,480
rejiggered some things but as of now I

454
00:25:09,630 --> 00:25:16,380
think we are getting pretty stable so in

455
00:25:12,480 --> 00:25:18,240
in a 102 of the research group version

456
00:25:16,380 --> 00:25:20,160
of the draft we've been just kind of

457
00:25:18,240 --> 00:25:21,810
polishing things so there are a couple

458
00:25:20,160 --> 00:25:23,250
of minor technical changes based on some

459
00:25:21,810 --> 00:25:24,960
feedback from metal implementers so

460
00:25:23,250 --> 00:25:26,330
we're using hashes of values instead of

461
00:25:24,960 --> 00:25:28,200
the values themselves in some cases

462
00:25:26,330 --> 00:25:31,770
because people didn't want to keep the

463
00:25:28,200 --> 00:25:34,980
whole values around Chris sent us a PR

464
00:25:31,770 --> 00:25:36,930
the for a quote single-shot API so we

465
00:25:34,980 --> 00:25:38,550
had had this decoupled structure where

466
00:25:36,930 --> 00:25:40,350
you do you set up an encryption context

467
00:25:38,550 --> 00:25:41,790
that you can use multiple times to

468
00:25:40,350 --> 00:25:43,830
amortize the cost of the public key

469
00:25:41,790 --> 00:25:45,330
operation but if you're just doing a

470
00:25:43,830 --> 00:25:46,740
single encryption it's nice to just

471
00:25:45,330 --> 00:25:48,300
compose that all together at once so

472
00:25:46,740 --> 00:25:50,850
we've got a kind of simplified profile

473
00:25:48,300 --> 00:25:52,740
in the dock now to you in general what

474
00:25:50,850 --> 00:25:55,919
kind of cleaning cleaning up the dog

475
00:25:52,740 --> 00:25:58,230
getting it ready to get done you know

476
00:25:55,920 --> 00:26:00,450
with the the core mechanism firming up

477
00:25:58,230 --> 00:26:01,950
the you know the next logical step is to

478
00:26:00,450 --> 00:26:04,440
start looking at implementation it

479
00:26:01,950 --> 00:26:06,810
interrupts the latest versions of the

480
00:26:04,440 --> 00:26:09,060
draft has test vectors for all four of

481
00:26:06,810 --> 00:26:10,770
the modes and several of the Cypress

482
00:26:09,060 --> 00:26:12,870
Suites we didn't do the full

483
00:26:10,770 --> 00:26:14,070
combinatorial explosion of all the

484
00:26:12,870 --> 00:26:16,110
different possible combinations of

485
00:26:14,070 --> 00:26:18,840
algorithms but we took a couple slices

486
00:26:16,110 --> 00:26:22,800
through the algorithm space and did all

487
00:26:18,840 --> 00:26:24,419
the modes for those cases and so based

488
00:26:22,800 --> 00:26:26,430
on those test vectors we verified

489
00:26:24,420 --> 00:26:29,040
Interop on at least the first two modes

490
00:26:26,430 --> 00:26:30,780
the base mode and PSK mode between a go

491
00:26:29,040 --> 00:26:33,000
implementation that i've been using from

492
00:26:30,780 --> 00:26:34,889
which we generated the test vectors and

493
00:26:33,000 --> 00:26:36,450
I see implementation that chris has been

494
00:26:34,890 --> 00:26:38,520
working on so we're starting to see some

495
00:26:36,450 --> 00:26:42,110
inter up here that kind of validates

496
00:26:38,520 --> 00:26:44,970
that the spec is is you know plausible

497
00:26:42,110 --> 00:26:46,679
the other major thing we want to get

498
00:26:44,970 --> 00:26:47,790
done before obviously before we

499
00:26:46,680 --> 00:26:50,090
published this is to have some security

500
00:26:47,790 --> 00:26:51,629
analysis that verifies it's okay

501
00:26:50,090 --> 00:26:53,580
Benjamin Libet

502
00:26:51,630 --> 00:26:55,230
inria has been working on this and these

503
00:26:53,580 --> 00:26:57,270
are kind of the the current state of his

504
00:26:55,230 --> 00:26:59,490
results so what he's been working on is

505
00:26:57,270 --> 00:27:00,960
developing some proofs encrypt of Erath

506
00:26:59,490 --> 00:27:03,420
one of these automated verification

507
00:27:00,960 --> 00:27:04,470
tools that if you make reasonable

508
00:27:03,420 --> 00:27:06,330
assumptions about the underlying

509
00:27:04,470 --> 00:27:09,810
primitive so you assume the D H group

510
00:27:06,330 --> 00:27:14,040
satisfies the FD h assumption that the

511
00:27:09,810 --> 00:27:17,250
RA ad is a proper ad and that your that

512
00:27:14,040 --> 00:27:19,649
your KD f you know has the the

513
00:27:17,250 --> 00:27:22,560
properties you'd expect that if you take

514
00:27:19,650 --> 00:27:26,070
good primitives then you end up with a

515
00:27:22,560 --> 00:27:28,260
good compound so you have ind CCA to as

516
00:27:26,070 --> 00:27:31,260
public a public key encryption so you

517
00:27:28,260 --> 00:27:33,270
have that indistinguishability property

518
00:27:31,260 --> 00:27:35,879
and that you get the authentication

519
00:27:33,270 --> 00:27:38,490
properties that that you would get that

520
00:27:35,880 --> 00:27:41,490
you expect based on the mode so in the

521
00:27:38,490 --> 00:27:42,960
PS k mode the the PS k could the

522
00:27:41,490 --> 00:27:45,000
ciphertext can only be generated by

523
00:27:42,960 --> 00:27:46,560
someone who has that PS k in the auth

524
00:27:45,000 --> 00:27:49,680
modes only by someone who has the

525
00:27:46,560 --> 00:27:54,450
relevant private key so status here is

526
00:27:49,680 --> 00:27:56,940
Benjamin has proofs done for these base

527
00:27:54,450 --> 00:27:58,920
cases for all of all for modes in the

528
00:27:56,940 --> 00:28:00,990
case where you're not considering a key

529
00:27:58,920 --> 00:28:03,750
compromised in the key we mean here is

530
00:28:00,990 --> 00:28:04,890
the authentication key so the difference

531
00:28:03,750 --> 00:28:06,740
between the left hand side and the right

532
00:28:04,890 --> 00:28:09,300
hand side columns in the right column

533
00:28:06,740 --> 00:28:11,010
what we're verifying is that the

534
00:28:09,300 --> 00:28:13,200
confidentiality properties the

535
00:28:11,010 --> 00:28:15,840
indistinguishability property holds even

536
00:28:13,200 --> 00:28:19,020
when the authentication key is leaked so

537
00:28:15,840 --> 00:28:21,689
the whatever the PS K or the the

538
00:28:19,020 --> 00:28:23,190
initiators private key that are both

539
00:28:21,690 --> 00:28:24,900
used for authentication and not for

540
00:28:23,190 --> 00:28:26,460
confidentiality what we're trying to

541
00:28:24,900 --> 00:28:28,770
prove in those cases is that those

542
00:28:26,460 --> 00:28:31,500
confidentiality properties of the

543
00:28:28,770 --> 00:28:34,320
overall encryption still hold even if

544
00:28:31,500 --> 00:28:37,260
the authentication keys if it leaks yeah

545
00:28:34,320 --> 00:28:38,790
Chris yeah Christopher I didn't want to

546
00:28:37,260 --> 00:28:41,310
comment on anything said just one day

547
00:28:38,790 --> 00:28:44,760
for people in the room we are trying to

548
00:28:41,310 --> 00:28:45,990
also generalize the analysis to cover

549
00:28:44,760 --> 00:28:47,670
just chems

550
00:28:45,990 --> 00:28:49,230
in general the assumptions here are

551
00:28:47,670 --> 00:28:52,350
specifically the captive yeoman problem

552
00:28:49,230 --> 00:28:54,870
for the diffie-hellman CEM but since we

553
00:28:52,350 --> 00:28:56,669
one of the hallmarks of this document

554
00:28:54,870 --> 00:28:59,580
that you can plug in any CEM presumably

555
00:28:56,670 --> 00:29:01,200
and still have things work we're trying

556
00:28:59,580 --> 00:29:03,059
to make it a bit more generic so that's

557
00:29:01,200 --> 00:29:04,320
work in progress but for right now we're

558
00:29:03,059 --> 00:29:07,470
just kind of focusing on the

559
00:29:04,320 --> 00:29:09,270
diffie-hellman variants yeah yeah so

560
00:29:07,470 --> 00:29:12,090
other people would like to help out the

561
00:29:09,270 --> 00:29:12,830
analysis contribute I'm glad to have

562
00:29:12,090 --> 00:29:15,750
help here

563
00:29:12,830 --> 00:29:18,059
so that's that's basically the status

564
00:29:15,750 --> 00:29:20,970
the document is starting to get complete

565
00:29:18,059 --> 00:29:23,550
we think the core construction is pretty

566
00:29:20,970 --> 00:29:27,030
sound and and interoperable specified

567
00:29:23,550 --> 00:29:28,919
and the analysis is progressing so far

568
00:29:27,030 --> 00:29:31,050
we have proved out some of the core

569
00:29:28,920 --> 00:29:32,970
properties and we're trying to get the

570
00:29:31,050 --> 00:29:38,460
remainder you know cover the remaining

571
00:29:32,970 --> 00:29:39,630
cases with some other proofs so I think

572
00:29:38,460 --> 00:29:41,040
we're getting close to a point of

573
00:29:39,630 --> 00:29:42,330
research group last call here I don't

574
00:29:41,040 --> 00:29:43,710
know how you guys want to arrange it I

575
00:29:42,330 --> 00:29:46,590
mean I think the main major outstanding

576
00:29:43,710 --> 00:29:48,600
thing is is the analysis timeline might

577
00:29:46,590 --> 00:29:50,340
need a little while longer for for those

578
00:29:48,600 --> 00:29:51,689
to come in but that could be done

579
00:29:50,340 --> 00:29:54,330
potentially in parallel with the

580
00:29:51,690 --> 00:29:55,800
research group last call so up to the

581
00:29:54,330 --> 00:30:02,149
chairs about how you'd like to press

582
00:29:55,800 --> 00:30:05,760
this Chris did you have coming yeah I

583
00:30:02,150 --> 00:30:10,730
think we can do it see if a.g lost call

584
00:30:05,760 --> 00:30:17,670
and just hold the document waiting for I

585
00:30:10,730 --> 00:30:21,510
think that's okay just quickly for

586
00:30:17,670 --> 00:30:24,990
timeline things it's very likely that

587
00:30:21,510 --> 00:30:26,970
encrypted S&I will depend on this given

588
00:30:24,990 --> 00:30:30,059
the way things are going and we're

589
00:30:26,970 --> 00:30:32,160
aiming to have that done early next year

590
00:30:30,059 --> 00:30:34,620
at least where we start experimenting

591
00:30:32,160 --> 00:30:40,140
and there are also other things that

592
00:30:34,620 --> 00:30:42,320
have started using HP key so we may want

593
00:30:40,140 --> 00:30:45,600
to get this out sooner rather than later

594
00:30:42,320 --> 00:30:49,260
are you looking for like our C or are

595
00:30:45,600 --> 00:30:50,909
you looking for like stable I think

596
00:30:49,260 --> 00:30:55,370
stable would be fine but other people

597
00:30:50,910 --> 00:30:55,370
might want stable or RSC I

598
00:30:58,290 --> 00:31:02,700
yeah I don't think we need to make

599
00:30:59,880 --> 00:31:03,990
decision in the room so I it's fine I

600
00:31:02,700 --> 00:31:05,670
just well I suspect chairs can

601
00:31:03,990 --> 00:31:07,770
accommodate you know within reason

602
00:31:05,670 --> 00:31:09,770
yeah I did stable enough then we can

603
00:31:07,770 --> 00:31:14,960
yeah I just wanted to make the

604
00:31:09,770 --> 00:31:14,960
dependency sort of note fair comment

605
00:31:16,250 --> 00:31:31,290
okay tomorrow alright so I would like to

606
00:31:28,070 --> 00:31:33,330
propose the Oxus it's a authenticated

607
00:31:31,290 --> 00:31:35,550
encryption algorithm with two special

608
00:31:33,330 --> 00:31:37,439
properties which is called B on Thursday

609
00:31:35,550 --> 00:31:39,450
and on Smith's use a resistance I will

610
00:31:37,440 --> 00:31:42,170
explain very quickly for those who not

611
00:31:39,450 --> 00:31:42,170
sure what this is

612
00:31:59,330 --> 00:32:04,800
so basically we are trying to propose

613
00:32:02,580 --> 00:32:06,480
three are different primitives the first

614
00:32:04,800 --> 00:32:08,010
one is a tweakable block cipher so it's

615
00:32:06,480 --> 00:32:10,170
like the core primitive that's really

616
00:32:08,010 --> 00:32:11,520
designs and on top of that we have two

617
00:32:10,170 --> 00:32:15,510
modes that's going to be using this

618
00:32:11,520 --> 00:32:17,790
internal primitive thanks so what is

619
00:32:15,510 --> 00:32:19,470
autonomic encryption so basically it's

620
00:32:17,790 --> 00:32:21,389
authenticated authentication and

621
00:32:19,470 --> 00:32:23,220
encryption in the single primitive the

622
00:32:21,390 --> 00:32:26,430
goal is basically to try to avoid having

623
00:32:23,220 --> 00:32:28,950
some weird security issues you can have

624
00:32:26,430 --> 00:32:30,690
if you use them separately in the wrong

625
00:32:28,950 --> 00:32:33,150
way so if you have everything unifying

626
00:32:30,690 --> 00:32:34,380
in one primitive then your hope to be

627
00:32:33,150 --> 00:32:36,030
sure that it's gonna be fine

628
00:32:34,380 --> 00:32:38,100
and also the goal is to have some

629
00:32:36,030 --> 00:32:39,840
efficiency gain so if you do both at the

630
00:32:38,100 --> 00:32:41,939
same time you can save some operation

631
00:32:39,840 --> 00:32:43,199
have something much more efficient and

632
00:32:41,940 --> 00:32:45,150
actually what I like to propose is

633
00:32:43,200 --> 00:32:47,160
something called a EAD at Otakon

634
00:32:45,150 --> 00:32:48,870
encryption with associated data which

635
00:32:47,160 --> 00:32:50,820
means some data will be encrypted and

636
00:32:48,870 --> 00:32:52,830
authenticated and some that would be

637
00:32:50,820 --> 00:32:53,850
only authenticated not not encrypted so

638
00:32:52,830 --> 00:32:55,620
we would like to have this feature as

639
00:32:53,850 --> 00:32:57,330
well so it's not that that this was a

640
00:32:55,620 --> 00:32:59,459
hot topic in the crypto research

641
00:32:57,330 --> 00:33:03,240
community so there was a competition

642
00:32:59,460 --> 00:33:05,190
organised from 2014 to 2019 called a

643
00:33:03,240 --> 00:33:07,650
Caesar competition organised by Dan

644
00:33:05,190 --> 00:33:09,270
Bernstein and so the lot of people from

645
00:33:07,650 --> 00:33:11,800
the community participated it was like

646
00:33:09,270 --> 00:33:13,629
worldwide competition like 50-something

647
00:33:11,800 --> 00:33:16,060
submission and after five years they

648
00:33:13,630 --> 00:33:18,340
selected some candidates for the three

649
00:33:16,060 --> 00:33:19,419
portfolios and what I'm proposing here

650
00:33:18,340 --> 00:33:25,720
is the winner of one of the the

651
00:33:19,420 --> 00:33:28,510
portfolio so first what is beyond

652
00:33:25,720 --> 00:33:30,220
birthday security so actually most of

653
00:33:28,510 --> 00:33:32,950
the cipher modes so when if you say s

654
00:33:30,220 --> 00:33:35,020
box iframe inside a mode like oh CB is

655
00:33:32,950 --> 00:33:36,760
GCM what you're gonna get is what's

656
00:33:35,020 --> 00:33:40,060
called birthday security which means

657
00:33:36,760 --> 00:33:42,220
that your number of your advantage of

658
00:33:40,060 --> 00:33:43,540
the adversary will grow its square in

659
00:33:42,220 --> 00:33:45,730
the number of queries that you actually

660
00:33:43,540 --> 00:33:47,530
make to the internal cipher so rather

661
00:33:45,730 --> 00:33:50,230
quickly you're gonna get that's after

662
00:33:47,530 --> 00:33:51,399
some amount of data you're gonna use

663
00:33:50,230 --> 00:33:53,800
you're gonna query to your encryption

664
00:33:51,400 --> 00:33:56,080
Oracle the security will drop rather

665
00:33:53,800 --> 00:33:58,780
rather fast so actually in the case of

666
00:33:56,080 --> 00:34:01,449
AES if you do to 64 data which is quite

667
00:33:58,780 --> 00:34:03,490
a huge number I have to say but after

668
00:34:01,450 --> 00:34:04,960
this amount of data I read all the

669
00:34:03,490 --> 00:34:07,420
securities lost completely you can

670
00:34:04,960 --> 00:34:08,980
really have many different type of

671
00:34:07,420 --> 00:34:11,560
attacks and everything for other parts

672
00:34:08,980 --> 00:34:13,630
so beyond birthday more secure modes are

673
00:34:11,560 --> 00:34:15,699
more than trying to go beyond that so

674
00:34:13,630 --> 00:34:17,560
even if you use a lot a lot of data you

675
00:34:15,699 --> 00:34:19,509
still maintain the security to a very

676
00:34:17,560 --> 00:34:21,400
good level so there's different spectrum

677
00:34:19,510 --> 00:34:23,740
of security you can still maintain some

678
00:34:21,400 --> 00:34:25,600
will it be close to birthday but some

679
00:34:23,739 --> 00:34:27,609
can be like full security completely

680
00:34:25,600 --> 00:34:29,168
maintained and its security fuser n bit

681
00:34:27,610 --> 00:34:32,500
block cipher so that's what we like to

682
00:34:29,168 --> 00:34:35,830
propose today just to show you some

683
00:34:32,500 --> 00:34:36,820
curves basically this on the x-axis is

684
00:34:35,830 --> 00:34:38,860
the advantage

685
00:34:36,820 --> 00:34:41,620
Sarris number of queries y-axis is the

686
00:34:38,860 --> 00:34:43,330
advantage of this re so when it's high

687
00:34:41,620 --> 00:34:45,609
it's highly secure and this is a

688
00:34:43,330 --> 00:34:46,900
security is reducing and those are most

689
00:34:45,610 --> 00:34:49,179
mode will be the blue line basically

690
00:34:46,900 --> 00:34:50,950
like OCD or GCM what we're trying to

691
00:34:49,179 --> 00:34:52,540
propose our model like this so even

692
00:34:50,949 --> 00:34:55,299
though you make a lot of queries you to

693
00:34:52,540 --> 00:34:57,900
encrypt a lot of data security remains

694
00:34:55,300 --> 00:34:57,900
quite high

695
00:34:58,510 --> 00:35:02,350
second property that we like to propose

696
00:35:00,550 --> 00:35:05,440
is knows missus resistance I think this

697
00:35:02,350 --> 00:35:06,880
is quite important so most of the auto t

698
00:35:05,440 --> 00:35:08,620
care of the decay the encryption mode

699
00:35:06,880 --> 00:35:12,150
you're gonna be using you need a knowns

700
00:35:08,620 --> 00:35:15,640
so like I do that's not repeating and

701
00:35:12,150 --> 00:35:17,740
most like ocbs GCM if you reuse just a

702
00:35:15,640 --> 00:35:19,540
single time the nonce then again all

703
00:35:17,740 --> 00:35:21,339
security falls apart you can have

704
00:35:19,540 --> 00:35:23,860
Universal forgery attack you can have

705
00:35:21,340 --> 00:35:25,119
decryption so really you really must

706
00:35:23,860 --> 00:35:27,150
make sure that the nonce is never

707
00:35:25,119 --> 00:35:30,220
ever repeated and that's a strong

708
00:35:27,150 --> 00:35:32,410
constraint on the implementers so

709
00:35:30,220 --> 00:35:34,118
basically you have generate two ways of

710
00:35:32,410 --> 00:35:36,129
handling this either you generate the

711
00:35:34,119 --> 00:35:38,170
nonce right Omni then you hope that's

712
00:35:36,130 --> 00:35:39,759
the nonce is big enough and your entropy

713
00:35:38,170 --> 00:35:42,009
sauce is also good enough so you don't

714
00:35:39,759 --> 00:35:44,079
have collision too often otherwise you

715
00:35:42,009 --> 00:35:45,970
can use a counter for the nonce but then

716
00:35:44,079 --> 00:35:47,470
you must use the states and maintain the

717
00:35:45,970 --> 00:35:48,549
state as long as the key is not changed

718
00:35:47,470 --> 00:35:50,799
between the two parties you must

719
00:35:48,549 --> 00:35:52,450
maintain a state for the counter and

720
00:35:50,799 --> 00:35:54,730
this is also quite a may be as strong

721
00:35:52,450 --> 00:35:56,769
constraints so the goal is to design

722
00:35:54,730 --> 00:35:59,289
primitives then that's do not have this

723
00:35:56,769 --> 00:36:01,359
issue and even if you are reducing the

724
00:35:59,289 --> 00:36:03,369
nonce you still maintain a good level of

725
00:36:01,359 --> 00:36:05,230
security and decision security will not

726
00:36:03,369 --> 00:36:06,880
fall apart and again you have a big

727
00:36:05,230 --> 00:36:08,440
spectrum of possibilities here some will

728
00:36:06,880 --> 00:36:10,779
be a little bit secure if you reuse the

729
00:36:08,440 --> 00:36:12,549
nonce and some can be up to it makes no

730
00:36:10,779 --> 00:36:17,829
difference if you repeat the notes or

731
00:36:12,549 --> 00:36:20,769
not so I will go yeah very quickly about

732
00:36:17,829 --> 00:36:22,839
our our design so first thing we design

733
00:36:20,769 --> 00:36:24,279
is basically an internal primitive and

734
00:36:22,839 --> 00:36:27,160
it's something a little bit special it's

735
00:36:24,279 --> 00:36:29,710
called a tweakable block cipher so this

736
00:36:27,160 --> 00:36:32,078
is joint work with Jeremy Zhao and it is

737
00:36:29,710 --> 00:36:34,630
a new coalition we publish this at 2014

738
00:36:32,079 --> 00:36:38,440
and this is part of the the winning

739
00:36:34,630 --> 00:36:40,119
candidates of the Caesar competition so

740
00:36:38,440 --> 00:36:41,829
what is trickable block cipher so block

741
00:36:40,119 --> 00:36:43,680
cipher like AES looks like this you have

742
00:36:41,829 --> 00:36:45,910
a plaintext and a key and goes to a

743
00:36:43,680 --> 00:36:48,129
outputs life at XM you must be able to

744
00:36:45,910 --> 00:36:49,450
decrypt and three cover box F is exactly

745
00:36:48,130 --> 00:36:51,970
the same thing you just have an extra

746
00:36:49,450 --> 00:36:54,489
trick input in here that allows you to

747
00:36:51,970 --> 00:36:57,009
select a family basically of block

748
00:36:54,489 --> 00:36:59,380
cipher this trick can be public and it

749
00:36:57,009 --> 00:37:01,359
actually changes a lot of things when

750
00:36:59,380 --> 00:37:03,519
you are designing some modes having this

751
00:37:01,359 --> 00:37:06,430
extra two inputs makes things much much

752
00:37:03,519 --> 00:37:08,379
simpler and you can have also have much

753
00:37:06,430 --> 00:37:10,029
better bounds so basically you can build

754
00:37:08,380 --> 00:37:11,099
a lot of things very easily with the

755
00:37:10,029 --> 00:37:14,109
trickable block cipher

756
00:37:11,099 --> 00:37:16,989
problem is there's no so far knows as I

757
00:37:14,109 --> 00:37:20,680
know of there's no no standards to cable

758
00:37:16,989 --> 00:37:23,289
box offer so far so what we try to do is

759
00:37:20,680 --> 00:37:26,739
start with a yes of course and and try

760
00:37:23,289 --> 00:37:28,450
to make put some tweak inside AES so it

761
00:37:26,739 --> 00:37:31,239
looks like this very quickly the blue

762
00:37:28,450 --> 00:37:33,220
part is the AES round function that we

763
00:37:31,239 --> 00:37:35,619
use kind of a back box and we just

764
00:37:33,220 --> 00:37:37,509
basically redesign the case schedule of

765
00:37:35,619 --> 00:37:38,779
the AAS and try to get something a bit

766
00:37:37,509 --> 00:37:40,460
stronger

767
00:37:38,779 --> 00:37:42,799
with like stronger guarantees that the

768
00:37:40,460 --> 00:37:45,799
sk schedule and also to be able to use a

769
00:37:42,799 --> 00:37:50,269
trick inside okay so that's basically

770
00:37:45,799 --> 00:37:51,859
how it works so we have lots of security

771
00:37:50,269 --> 00:37:54,379
guarantees lot of analysis that we did

772
00:37:51,859 --> 00:37:56,150
in a paper you can take a look at our

773
00:37:54,380 --> 00:37:59,450
website our paper to see all these

774
00:37:56,150 --> 00:38:01,160
arguments and the important point is

775
00:37:59,450 --> 00:38:02,868
that the trust in the block cipher i

776
00:38:01,160 --> 00:38:04,490
mean any crypto primitive is put by the

777
00:38:02,869 --> 00:38:06,859
how much script analysis has been done

778
00:38:04,490 --> 00:38:09,470
so actually our continued has been one

779
00:38:06,859 --> 00:38:11,089
of the most scrutinized algorithm in the

780
00:38:09,470 --> 00:38:13,759
competition's a lot of people try to

781
00:38:11,089 --> 00:38:16,099
analyze it and still very comfortable

782
00:38:13,760 --> 00:38:17,720
security margin but there's a lot of

783
00:38:16,099 --> 00:38:20,720
quickness paper that has been published

784
00:38:17,720 --> 00:38:22,308
on this the goal was also to reuse a yes

785
00:38:20,720 --> 00:38:23,598
so that we can reuse the security our

786
00:38:22,309 --> 00:38:27,019
arguments of failure so there's been

787
00:38:23,599 --> 00:38:28,910
decades of analysis on is so we hope to

788
00:38:27,019 --> 00:38:32,808
leverage this so we don't have to read

789
00:38:28,910 --> 00:38:34,670
you everything again also it's quite

790
00:38:32,809 --> 00:38:36,289
efficient because we're using the AES

791
00:38:34,670 --> 00:38:37,849
round as a black box so you can use

792
00:38:36,289 --> 00:38:39,950
outward acceleration that you have on on

793
00:38:37,849 --> 00:38:41,630
recent processors so we can run on less

794
00:38:39,950 --> 00:38:43,939
than one cycle per bytes basically and

795
00:38:41,630 --> 00:38:47,329
we have no patents there's no patent on

796
00:38:43,940 --> 00:38:49,099
this so that's the primitive now we need

797
00:38:47,329 --> 00:38:50,809
to define a mode that's gonna use this

798
00:38:49,099 --> 00:38:53,690
primitive to provide authenticated

799
00:38:50,809 --> 00:38:55,819
encryption that's what we are called SCT

800
00:38:53,690 --> 00:38:58,670
mode so that's something that we publish

801
00:38:55,819 --> 00:39:01,190
a crypto with a unique surah and this is

802
00:38:58,670 --> 00:39:02,900
also part of the winning candidates of

803
00:39:01,190 --> 00:39:05,359
the Caesar competition basically our

804
00:39:02,900 --> 00:39:07,069
candidate was Deoxys 2 which is composed

805
00:39:05,359 --> 00:39:08,450
of the internal cipher I just described

806
00:39:07,069 --> 00:39:13,670
and these modes here

807
00:39:08,450 --> 00:39:15,558
I mean gonna describe very quickly how

808
00:39:13,670 --> 00:39:17,390
it works but this is like the main

809
00:39:15,559 --> 00:39:20,000
arguments and feature I think of our

810
00:39:17,390 --> 00:39:22,640
mode so it's a very very key thing for

811
00:39:20,000 --> 00:39:24,440
me is really it's extremely simple I can

812
00:39:22,640 --> 00:39:26,720
really describe this into basically one

813
00:39:24,440 --> 00:39:28,490
slide if you look at some other

814
00:39:26,720 --> 00:39:30,049
authentic encryption algorithm there are

815
00:39:28,490 --> 00:39:32,240
quite complex there's a lot of details

816
00:39:30,049 --> 00:39:34,730
implementation is not so easy and this

817
00:39:32,240 --> 00:39:36,558
is very different in our candidate it's

818
00:39:34,730 --> 00:39:38,539
a two pass mode which means you need to

819
00:39:36,559 --> 00:39:41,119
go through the message twice not be

820
00:39:38,539 --> 00:39:42,470
authenticated that I that you want but

821
00:39:41,119 --> 00:39:44,240
only the message you have to pass twice

822
00:39:42,470 --> 00:39:45,980
through it which is quite a strong

823
00:39:44,240 --> 00:39:47,538
constraint but this is required because

824
00:39:45,980 --> 00:39:49,490
you need this if you want to brighten on

825
00:39:47,539 --> 00:39:50,930
species resistance there's no way to

826
00:39:49,490 --> 00:39:51,950
provide no species resistance if you

827
00:39:50,930 --> 00:39:54,620
don't go

828
00:39:51,950 --> 00:39:56,540
twice through the message so it provides

829
00:39:54,620 --> 00:39:58,009
full impede security so beyond birthday

830
00:39:56,540 --> 00:40:00,590
security in up to actually the maximum

831
00:39:58,010 --> 00:40:02,360
as long as you respect the nonce and if

832
00:40:00,590 --> 00:40:04,520
you do repeat the nonce so that's the

833
00:40:02,360 --> 00:40:06,650
nonce misuse case then it provides

834
00:40:04,520 --> 00:40:09,710
birthdays security actually in practice

835
00:40:06,650 --> 00:40:11,600
it provides full and bit security the

836
00:40:09,710 --> 00:40:14,120
reason why is because our bounds here

837
00:40:11,600 --> 00:40:16,190
goes to birthday only if you repeat

838
00:40:14,120 --> 00:40:19,400
always the same notes which means like

839
00:40:16,190 --> 00:40:21,830
you've got a query to 264 data every

840
00:40:19,400 --> 00:40:23,810
time using the exact same nouns so

841
00:40:21,830 --> 00:40:26,120
that's a very very bad randomness source

842
00:40:23,810 --> 00:40:27,860
I would say so in practice you might

843
00:40:26,120 --> 00:40:29,960
have some repetition of unknown seas but

844
00:40:27,860 --> 00:40:31,670
not as much as this so in practice I do

845
00:40:29,960 --> 00:40:33,530
believe it actually provides full speed

846
00:40:31,670 --> 00:40:37,400
for n bit security even when you repeat

847
00:40:33,530 --> 00:40:40,130
the analysis so yeah the goal is to use

848
00:40:37,400 --> 00:40:42,530
this with the Oxus BC no pre-computation

849
00:40:40,130 --> 00:40:44,660
also so there's almost no overhead if

850
00:40:42,530 --> 00:40:46,310
you go for small messages so you can you

851
00:40:44,660 --> 00:40:48,920
don't have to prepare tables you don't

852
00:40:46,310 --> 00:40:50,540
have to prepare some internal keys or

853
00:40:48,920 --> 00:40:52,510
whatever you just really directly

854
00:40:50,540 --> 00:40:55,250
process your your message as it come

855
00:40:52,510 --> 00:40:57,530
fully parallel inverse free which means

856
00:40:55,250 --> 00:40:59,180
you don't need any inversion of the

857
00:40:57,530 --> 00:41:02,570
internal primitive which in all where is

858
00:40:59,180 --> 00:41:07,730
quite a nice feature okay I'm gonna go

859
00:41:02,570 --> 00:41:12,530
quick and again no patent on this I'd

860
00:41:07,730 --> 00:41:15,320
want to thanks alright so yeah okay then

861
00:41:12,530 --> 00:41:17,000
one last thing about this it's also we

862
00:41:15,320 --> 00:41:18,380
have extract seek input so because it's

863
00:41:17,000 --> 00:41:20,810
tweakable block cipher you can use this

864
00:41:18,380 --> 00:41:22,130
tweak but you can use it for the cipher

865
00:41:20,810 --> 00:41:25,160
to build the mode but you can use it for

866
00:41:22,130 --> 00:41:27,470
other protocols that might plug on top

867
00:41:25,160 --> 00:41:29,569
of this primitive this is actually

868
00:41:27,470 --> 00:41:30,910
pretty nice feature because you can use

869
00:41:29,570 --> 00:41:34,760
it for example for leakage release

870
00:41:30,910 --> 00:41:37,250
leakage resilience you can use it also

871
00:41:34,760 --> 00:41:39,110
for example disk encryption you can use

872
00:41:37,250 --> 00:41:40,400
it for ashing so by using these three

873
00:41:39,110 --> 00:41:43,190
cable box therefore there's lots of

874
00:41:40,400 --> 00:41:46,790
things you can do very easily and with

875
00:41:43,190 --> 00:41:48,250
very strong bounds so this is the slide

876
00:41:46,790 --> 00:41:51,110
basically explaining how it works

877
00:41:48,250 --> 00:41:53,330
everything is there in just one side so

878
00:41:51,110 --> 00:41:55,250
that's my data I want to authenticate

879
00:41:53,330 --> 00:41:57,230
that's my message I would like to

880
00:41:55,250 --> 00:41:59,600
encrypt and authenticate what I'm doing

881
00:41:57,230 --> 00:42:01,580
is simply make it grow in parallel

882
00:41:59,600 --> 00:42:02,150
through all my tweakable block cipher

883
00:42:01,580 --> 00:42:04,460
calls

884
00:42:02,150 --> 00:42:06,140
it's keyed with a my secret key and you

885
00:42:04,460 --> 00:42:07,910
have a counter inside

886
00:42:06,140 --> 00:42:10,879
that's it I just process this in

887
00:42:07,910 --> 00:42:13,399
parallel when I'm done I get one call to

888
00:42:10,880 --> 00:42:15,500
create the authentication tag when I'm

889
00:42:13,400 --> 00:42:17,900
done with this part I take that occasion

890
00:42:15,500 --> 00:42:18,920
tag put it in the tweak to process all

891
00:42:17,900 --> 00:42:21,109
my messages

892
00:42:18,920 --> 00:42:22,759
that I'm basically encrypted with a kind

893
00:42:21,109 --> 00:42:23,808
of a counter mode and again I'm gonna

894
00:42:22,759 --> 00:42:25,579
have the counter but this time in a

895
00:42:23,809 --> 00:42:26,809
trick not any classical way where you

896
00:42:25,579 --> 00:42:27,769
have it in the plaintext here I have the

897
00:42:26,809 --> 00:42:30,440
counter in the trick you logically

898
00:42:27,769 --> 00:42:32,419
that's it that's how the mode works

899
00:42:30,440 --> 00:42:38,359
there's no special table to prepare no

900
00:42:32,420 --> 00:42:40,940
special key no many details so alright

901
00:42:38,359 --> 00:42:42,710
this another one I mean still I'm yeah

902
00:42:40,940 --> 00:42:44,960
there's another motive like sue proposed

903
00:42:42,710 --> 00:42:48,529
which is called CMAC it's a mode that's

904
00:42:44,960 --> 00:42:49,940
it's a kind of we can see it as a trade

905
00:42:48,529 --> 00:42:51,799
off compared to the Prisma that

906
00:42:49,940 --> 00:42:54,710
subscribe I'm not gonna go into details

907
00:42:51,799 --> 00:42:58,099
in in for this one but it's something I

908
00:42:54,710 --> 00:43:01,700
proposed in 2017 with three colleagues

909
00:42:58,099 --> 00:43:04,240
and it's a little bit more complex I'm

910
00:43:01,700 --> 00:43:06,950
not going to describe it here details

911
00:43:04,240 --> 00:43:09,379
but basically what it provides is a

912
00:43:06,950 --> 00:43:10,848
little bit more efficient it's more

913
00:43:09,380 --> 00:43:12,410
complex to implement so that's why I

914
00:43:10,849 --> 00:43:14,059
would say it's a trade off but it's a

915
00:43:12,410 --> 00:43:16,308
bit more efficient and it provides full

916
00:43:14,059 --> 00:43:18,289
and bit security completely if an

917
00:43:16,309 --> 00:43:21,829
unsuspecting and on some issues ok so no

918
00:43:18,289 --> 00:43:24,019
compromise here at all alright just to

919
00:43:21,829 --> 00:43:26,539
make before finishing a quick comparison

920
00:43:24,019 --> 00:43:29,058
because there is a RFC that has been

921
00:43:26,539 --> 00:43:31,099
created I think for AES GCMs IV very

922
00:43:29,059 --> 00:43:33,559
recently so I guess GCMs IV is a

923
00:43:31,099 --> 00:43:35,450
algorithm that also tries to provide the

924
00:43:33,559 --> 00:43:40,279
same kind of features that I've been

925
00:43:35,450 --> 00:43:41,720
describing here so in order to compare

926
00:43:40,279 --> 00:43:43,460
it I think one key point is really the

927
00:43:41,720 --> 00:43:45,230
fact that the X is to has been actually

928
00:43:43,460 --> 00:43:46,759
chosen by the cryptographic research

929
00:43:45,230 --> 00:43:48,980
community as the winner of the

930
00:43:46,759 --> 00:43:50,869
competition which is kind of first like

931
00:43:48,980 --> 00:43:52,940
a message to say that we have been

932
00:43:50,869 --> 00:43:54,289
analyzing this candidates and we believe

933
00:43:52,940 --> 00:43:56,150
that this is the one offering the best

934
00:43:54,289 --> 00:43:59,259
trade-off in terms of efficiency

935
00:43:56,150 --> 00:44:01,910
features and actual security it provides

936
00:43:59,259 --> 00:44:04,160
as I said it's much simpler and flexible

937
00:44:01,910 --> 00:44:07,250
I think for implementers this is really

938
00:44:04,160 --> 00:44:09,589
something important there's also the

939
00:44:07,250 --> 00:44:11,809
issues potentially of timing attacks so

940
00:44:09,589 --> 00:44:14,599
GCM family is quite sensitive to timing

941
00:44:11,809 --> 00:44:17,630
attacks if you don't have an encryption

942
00:44:14,599 --> 00:44:19,430
you have to use big tables in order to

943
00:44:17,630 --> 00:44:21,520
make it like really efficient so

944
00:44:19,430 --> 00:44:24,109
constraint devices might be not so

945
00:44:21,520 --> 00:44:26,420
that's a good in our case it's very

946
00:44:24,109 --> 00:44:27,950
different so it's you basically just use

947
00:44:26,420 --> 00:44:30,349
a bit size implementation of AES and

948
00:44:27,950 --> 00:44:32,660
basically you you directly put this in

949
00:44:30,349 --> 00:44:34,490
the mode and that's it there's no extra

950
00:44:32,660 --> 00:44:37,250
stuff you need to end up you know the

951
00:44:34,490 --> 00:44:38,930
traffic constant time implementation it

952
00:44:37,250 --> 00:44:40,730
also provides higher security so when

953
00:44:38,930 --> 00:44:42,618
you look at the bounds compared to a CMS

954
00:44:40,730 --> 00:44:45,559
IV they are better in our case than in

955
00:44:42,619 --> 00:44:47,359
the case of ASG CMS IV so which means if

956
00:44:45,559 --> 00:44:49,369
use a certain amount of data the

957
00:44:47,359 --> 00:44:51,348
guarantee you get on the advantage of

958
00:44:49,369 --> 00:44:53,180
the adversary is higher both in the non

959
00:44:51,349 --> 00:44:57,529
respecting and in the nonce

960
00:44:53,180 --> 00:44:59,808
or not misuse scenario it's more

961
00:44:57,529 --> 00:45:01,309
efficient in in Al where because all

962
00:44:59,809 --> 00:45:03,770
these details we have to implement for

963
00:45:01,309 --> 00:45:05,569
ASG cm the key insight is it's quite

964
00:45:03,770 --> 00:45:09,230
costly in terms of hardware which is not

965
00:45:05,569 --> 00:45:11,359
keys for our continuous and again as I

966
00:45:09,230 --> 00:45:15,049
mentioned there's this tweak input that

967
00:45:11,359 --> 00:45:16,190
is quite useful to build many things so

968
00:45:15,049 --> 00:45:18,799
basically one because I've seen some

969
00:45:16,190 --> 00:45:20,809
discussion about using some auto key

970
00:45:18,799 --> 00:45:23,599
encryption and also some ashing I can't

971
00:45:20,809 --> 00:45:25,000
remember committing I can't remember

972
00:45:23,599 --> 00:45:28,460
what was the message

973
00:45:25,000 --> 00:45:31,640
but basically alchemy debt is exactly

974
00:45:28,460 --> 00:45:33,559
the kind of scheme that can provide

975
00:45:31,640 --> 00:45:35,000
directly with one primitive ashing

976
00:45:33,559 --> 00:45:40,609
authenticate encryption and many

977
00:45:35,000 --> 00:45:42,049
different things like quite easily sorry

978
00:45:40,609 --> 00:45:44,990
well I think so in terms of efficiency

979
00:45:42,049 --> 00:45:48,380
this is in software okay so I think our

980
00:45:44,990 --> 00:45:49,848
comparison is much better not in the

981
00:45:48,380 --> 00:45:51,440
case of software but in the case of

982
00:45:49,849 --> 00:45:53,329
software of course this is probably one

983
00:45:51,440 --> 00:45:57,589
of the most interesting so this is for

984
00:45:53,329 --> 00:45:59,869
really latest Intel processors that have

985
00:45:57,589 --> 00:46:01,308
a sry acceleration so I asked you see

986
00:45:59,869 --> 00:46:03,319
MSF is actually more efficient

987
00:46:01,309 --> 00:46:05,150
especially for more wrong messages but

988
00:46:03,319 --> 00:46:08,509
it has also quite a big initialization

989
00:46:05,150 --> 00:46:10,460
process it is to create some keys it has

990
00:46:08,510 --> 00:46:13,819
some retain inside so all this takes

991
00:46:10,460 --> 00:46:15,650
quite a few is runs who to compute so

992
00:46:13,819 --> 00:46:17,538
when you look at the efficiency this is

993
00:46:15,650 --> 00:46:19,940
in terms of how many is rounds you need

994
00:46:17,539 --> 00:46:21,859
to do for the m block orthotic a block

995
00:46:19,940 --> 00:46:24,140
the initialization in tag so those are

996
00:46:21,859 --> 00:46:26,569
the three schemes I was talking about

997
00:46:24,140 --> 00:46:29,299
but actually when you look at some like

998
00:46:26,569 --> 00:46:31,400
Internet mix for example like size of

999
00:46:29,299 --> 00:46:33,290
packets you you can expect it cetera you

1000
00:46:31,400 --> 00:46:35,840
can see they actually for small packets

1001
00:46:33,290 --> 00:46:37,820
this is actually faster when you get

1002
00:46:35,840 --> 00:46:39,950
medium sized packets it's start to be

1003
00:46:37,820 --> 00:46:42,920
slower and then the four long messages

1004
00:46:39,950 --> 00:46:43,640
it's about one point seven time Isaac's

1005
00:46:42,920 --> 00:46:48,140
it's slower

1006
00:46:43,640 --> 00:47:00,920
okay so that's the trade off and that's

1007
00:46:48,140 --> 00:47:03,920
it's do you have any question Dimitri

1008
00:47:00,920 --> 00:47:07,220
Belikov ski technical center of Internet

1009
00:47:03,920 --> 00:47:09,950
did you study possible applying of the

1010
00:47:07,220 --> 00:47:13,399
rakin mechanism standardized as RFC

1011
00:47:09,950 --> 00:47:18,140
eight six four five four including such

1012
00:47:13,400 --> 00:47:21,560
properties as side channel attack

1013
00:47:18,140 --> 00:47:25,190
protection and but the unbirthday

1014
00:47:21,560 --> 00:47:27,650
limitations thank you yeah so we have

1015
00:47:25,190 --> 00:47:29,780
been studying this yet we are currently

1016
00:47:27,650 --> 00:47:32,780
working on some modes that would provide

1017
00:47:29,780 --> 00:47:43,580
leakage regions but I mean this is

1018
00:47:32,780 --> 00:47:45,830
ongoing work so all right thanks up well

1019
00:47:43,580 --> 00:47:48,110
I think it would be good so Danny and me

1020
00:47:45,830 --> 00:47:50,299
go Ericsson I think it would be good we

1021
00:47:48,110 --> 00:47:53,960
come with a draft and a specification of

1022
00:47:50,300 --> 00:47:58,300
the winners so that's possible I think

1023
00:47:53,960 --> 00:48:01,310
that's the right forefinger yeah i'm i

1024
00:47:58,300 --> 00:48:03,440
once hear quite new to the process so I

1025
00:48:01,310 --> 00:48:06,730
mean I'm ready to write stuff it's a try

1026
00:48:03,440 --> 00:48:10,310
I just don't know when what went in

1027
00:48:06,730 --> 00:48:12,500
hello a silicon Krypton it

1028
00:48:10,310 --> 00:48:16,009
how many external cryptanalysis do you

1029
00:48:12,500 --> 00:48:17,990
have about the Oxus to Soho and and the

1030
00:48:16,010 --> 00:48:24,790
second question is for how long the

1031
00:48:17,990 --> 00:48:24,790
final description of the Oxus is cold so

1032
00:48:25,990 --> 00:48:32,479
the light is the latest version dates so

1033
00:48:30,020 --> 00:48:36,490
we publish this there the first one was

1034
00:48:32,480 --> 00:48:41,180
in 2014 we make some modification in

1035
00:48:36,490 --> 00:48:43,399
2015 I think in the late 2015 and since

1036
00:48:41,180 --> 00:48:45,950
then I don't think we have changed

1037
00:48:43,400 --> 00:48:46,790
anything then the other crypt analysis

1038
00:48:45,950 --> 00:48:48,200
that has been

1039
00:48:46,790 --> 00:48:49,700
is actually independent of all the

1040
00:48:48,200 --> 00:48:52,189
change the change we're like small are

1041
00:48:49,700 --> 00:48:54,230
basically small changes but the cripton

1042
00:48:52,190 --> 00:48:55,520
sees all the work not all the work but

1043
00:48:54,230 --> 00:48:57,260
some of the work is listed on our

1044
00:48:55,520 --> 00:48:58,460
website if you click then it releases

1045
00:48:57,260 --> 00:49:05,600
all the crypt analysis that has been

1046
00:48:58,460 --> 00:49:07,570
performed Thank You mr. slave so thank

1047
00:49:05,600 --> 00:49:11,509
you very much for the presentation and

1048
00:49:07,570 --> 00:49:15,680
releasing and I know that in Montreal

1049
00:49:11,510 --> 00:49:20,000
that now we have some new very good

1050
00:49:15,680 --> 00:49:24,799
options for aad and you properties to

1051
00:49:20,000 --> 00:49:26,900
address in aad modes and so just not

1052
00:49:24,800 --> 00:49:30,610
ajust a question but just a comment that

1053
00:49:26,900 --> 00:49:35,420
maybe while we collect one or more three

1054
00:49:30,610 --> 00:49:38,120
good ad modes and we can clarify the

1055
00:49:35,420 --> 00:49:41,810
requirements from the ITF community to a

1056
00:49:38,120 --> 00:49:45,230
new ad mode to be considered maybe we

1057
00:49:41,810 --> 00:49:47,150
can repeat our experience not yet ended

1058
00:49:45,230 --> 00:49:49,940
its back when we started with

1059
00:49:47,150 --> 00:49:53,510
requirements for pegs and then the

1060
00:49:49,940 --> 00:49:56,900
contest and maybe organizing the a ad

1061
00:49:53,510 --> 00:49:59,300
selection process in ITF can be a good

1062
00:49:56,900 --> 00:50:02,750
idea and as soon as that DOCSIS to will

1063
00:49:59,300 --> 00:50:05,900
of course can be one or most stronger

1064
00:50:02,750 --> 00:50:08,450
strongest competitors here because I

1065
00:50:05,900 --> 00:50:10,850
really like this and I think that the

1066
00:50:08,450 --> 00:50:14,600
structure itself is very mature or very

1067
00:50:10,850 --> 00:50:16,549
good and thank you thank you yeah I mean

1068
00:50:14,600 --> 00:50:18,920
I again I'm not sure about the process

1069
00:50:16,550 --> 00:50:19,820
so the crypto community went through

1070
00:50:18,920 --> 00:50:24,110
this work already

1071
00:50:19,820 --> 00:50:25,340
so without but as I'm one of the

1072
00:50:24,110 --> 00:50:27,200
represented who served in crypto

1073
00:50:25,340 --> 00:50:28,610
committee I participate a lot and I

1074
00:50:27,200 --> 00:50:30,529
think a lot of people actually already

1075
00:50:28,610 --> 00:50:32,150
worked on this competition try to

1076
00:50:30,530 --> 00:50:34,430
analyze it and came up with three

1077
00:50:32,150 --> 00:50:36,410
different portfolios to try to cover

1078
00:50:34,430 --> 00:50:39,319
different use cases there's one

1079
00:50:36,410 --> 00:50:41,240
portfolio for like very a fast software

1080
00:50:39,320 --> 00:50:43,520
automatically encryption that's one

1081
00:50:41,240 --> 00:50:45,259
portfolio for constraint devices and

1082
00:50:43,520 --> 00:50:48,440
there's one portfolio for robust defense

1083
00:50:45,260 --> 00:50:50,720
in depth so this is the one like the

1084
00:50:48,440 --> 00:50:52,910
winner for the defense in depth oh yes

1085
00:50:50,720 --> 00:50:56,120
personally I personally I don't have any

1086
00:50:52,910 --> 00:50:57,779
doubts and security of the access to in

1087
00:50:56,120 --> 00:50:59,700
fact personally

1088
00:50:57,780 --> 00:51:01,980
but what I'm saying is that some

1089
00:50:59,700 --> 00:51:04,379
additional properties that should be

1090
00:51:01,980 --> 00:51:06,570
considered regardons a declaration the

1091
00:51:04,380 --> 00:51:09,180
protocols can occur for example I think

1092
00:51:06,570 --> 00:51:11,280
that the next presentation we have here

1093
00:51:09,180 --> 00:51:13,919
in the session will be about key commit

1094
00:51:11,280 --> 00:51:17,570
in aad and this is one of the properties

1095
00:51:13,920 --> 00:51:20,370
that seems to be important for some

1096
00:51:17,570 --> 00:51:24,600
protocols in ATF for example it's

1097
00:51:20,370 --> 00:51:28,730
important for some schemes that are

1098
00:51:24,600 --> 00:51:33,330
considered now and maybe additional

1099
00:51:28,730 --> 00:51:36,000
things like whether we prefer nonce

1100
00:51:33,330 --> 00:51:41,520
misuse resistance but for the cost of

1101
00:51:36,000 --> 00:51:46,770
two of going to Kuwait neck and then

1102
00:51:41,520 --> 00:51:49,740
encryption or just to be as per Eliza

1103
00:51:46,770 --> 00:51:51,390
paralyzer built as possible but with our

1104
00:51:49,740 --> 00:51:53,520
own species resistance so it can be

1105
00:51:51,390 --> 00:51:56,640
required discussion again I'm not saying

1106
00:51:53,520 --> 00:51:58,920
that I personally have any doubts

1107
00:51:56,640 --> 00:52:00,690
insecurity of Jurgis - I'm just saying

1108
00:51:58,920 --> 00:52:10,590
that there's also always imbalance

1109
00:52:00,690 --> 00:52:12,780
between a lot of properties so thanks

1110
00:52:10,590 --> 00:52:15,060
for answering Slaven it's something that

1111
00:52:12,780 --> 00:52:17,310
we will keep under consideration as the

1112
00:52:15,060 --> 00:52:19,950
chairs there's quite a lot happening in

1113
00:52:17,310 --> 00:52:23,130
the aad space we'd like to explore

1114
00:52:19,950 --> 00:52:27,480
speaking of which I'm going to be myself

1115
00:52:23,130 --> 00:52:34,500
giving a presentation on behalf of Paul

1116
00:52:27,480 --> 00:52:36,960
Grubbs and Tom Reston partner so

1117
00:52:34,500 --> 00:52:38,550
unfortunately the authors of this

1118
00:52:36,960 --> 00:52:40,650
presentation weren't able to make it so

1119
00:52:38,550 --> 00:52:43,500
they asked me to come and read their

1120
00:52:40,650 --> 00:52:46,260
slides so that's what I'm going to do so

1121
00:52:43,500 --> 00:52:49,440
committing authenticated encryption is

1122
00:52:46,260 --> 00:52:51,060
what we're talking about right here as a

1123
00:52:49,440 --> 00:52:52,970
high-level summary of what we're going

1124
00:52:51,060 --> 00:52:56,100
to cover in the next five minutes or so

1125
00:52:52,970 --> 00:52:58,020
what is committed authenticated

1126
00:52:56,100 --> 00:52:59,910
encryption and how is it different than

1127
00:52:58,020 --> 00:53:03,540
regular authenticated encryption we're

1128
00:52:59,910 --> 00:53:08,089
all familiar with things like a s GCM

1129
00:53:03,540 --> 00:53:10,800
and a yes in different modes block

1130
00:53:08,090 --> 00:53:11,400
Shasha poly we've standardized well we

1131
00:53:10,800 --> 00:53:14,220
have

1132
00:53:11,400 --> 00:53:16,049
filed RFC's published RFC is about

1133
00:53:14,220 --> 00:53:20,689
multiple ones of these we just saw a

1134
00:53:16,049 --> 00:53:23,038
great presentation about a a EAD mode

1135
00:53:20,690 --> 00:53:24,390
deoxys too so what is committing

1136
00:53:23,039 --> 00:53:26,400
authenticated encryption

1137
00:53:24,390 --> 00:53:28,500
it's an authenticated encryption where

1138
00:53:26,400 --> 00:53:31,740
it's hard to find a cipher text with

1139
00:53:28,500 --> 00:53:34,760
multiple correct decryptions so in a

1140
00:53:31,740 --> 00:53:38,069
committing AE cipher texts are binding

1141
00:53:34,760 --> 00:53:43,559
commitments and one way to think of this

1142
00:53:38,069 --> 00:53:46,609
is is with the physical intuition of

1143
00:53:43,559 --> 00:53:49,529
physical encryption so thinking of a

1144
00:53:46,609 --> 00:53:52,288
safe and and a key

1145
00:53:49,529 --> 00:53:54,690
so if keys are random and hidden then

1146
00:53:52,289 --> 00:53:57,150
the box hides what's inside it giving

1147
00:53:54,690 --> 00:53:59,670
confidentiality and you can't change an

1148
00:53:57,150 --> 00:54:01,710
already lock box but this intuition

1149
00:53:59,670 --> 00:54:02,670
fails if the keys themselves can be

1150
00:54:01,710 --> 00:54:08,039
adversarial

1151
00:54:02,670 --> 00:54:10,710
so if a this is sort of where the

1152
00:54:08,039 --> 00:54:13,559
physical analogy breaks down with regard

1153
00:54:10,710 --> 00:54:16,170
to authenticated encryption if the keys

1154
00:54:13,559 --> 00:54:18,720
can be adversarial then authenticated

1155
00:54:16,170 --> 00:54:20,309
encryption has no security with the

1156
00:54:18,720 --> 00:54:23,129
attacker control of the keys so

1157
00:54:20,309 --> 00:54:27,930
ciphertext can have multiple correct

1158
00:54:23,130 --> 00:54:30,869
decryptions so you can if you can swap

1159
00:54:27,930 --> 00:54:32,549
out the key you can make it seem like

1160
00:54:30,869 --> 00:54:36,319
you're decrypting something else that

1161
00:54:32,549 --> 00:54:39,569
you didn't decrypt a commiting AEE binds

1162
00:54:36,319 --> 00:54:43,170
the ciphertext to a specific single

1163
00:54:39,569 --> 00:54:45,808
decryption like I'll go a little bit

1164
00:54:43,170 --> 00:54:48,089
more into what that means going forward

1165
00:54:45,809 --> 00:54:53,869
so why is this important what goes wrong

1166
00:54:48,089 --> 00:54:56,038
without it well just as a high level

1167
00:54:53,869 --> 00:54:58,319
example here is counter mode is not

1168
00:54:56,039 --> 00:55:00,990
committing any cipher text can be

1169
00:54:58,319 --> 00:55:04,859
decrypted under any key at the fact that

1170
00:55:00,990 --> 00:55:06,720
it's XOR means you can change what a

1171
00:55:04,859 --> 00:55:09,808
proper decryption is going to be if you

1172
00:55:06,720 --> 00:55:11,730
have the key and adding a Mac does not

1173
00:55:09,809 --> 00:55:16,319
help so go all kind of counter mode

1174
00:55:11,730 --> 00:55:21,270
itself is not committing in fact most of

1175
00:55:16,319 --> 00:55:22,558
the modes that we have here that we use

1176
00:55:21,270 --> 00:55:24,890
in protocols in the ITF are not

1177
00:55:22,559 --> 00:55:29,450
committing so AES GCM

1178
00:55:24,890 --> 00:55:32,029
20 poly 13050 CB mode encrypt than H Mac

1179
00:55:29,450 --> 00:55:35,808
with distinct keys is also not

1180
00:55:32,029 --> 00:55:39,829
committing you could also throw a a s

1181
00:55:35,809 --> 00:55:42,019
GCMs IV in this bucket the one mode that

1182
00:55:39,829 --> 00:55:44,480
we do have that actually is key

1183
00:55:42,019 --> 00:55:48,999
committing is this encrypt then H Mac

1184
00:55:44,480 --> 00:55:52,069
with derived keys so this is

1185
00:55:48,999 --> 00:55:53,299
surprisingly something that something

1186
00:55:52,069 --> 00:55:56,269
that we've we've known has been a good

1187
00:55:53,299 --> 00:55:59,390
model for a long time but one that many

1188
00:55:56,269 --> 00:56:03,098
protocols have moved away from okay so

1189
00:55:59,390 --> 00:56:05,420
where is this needed where's this used

1190
00:56:03,099 --> 00:56:08,299
the work that led up to this

1191
00:56:05,420 --> 00:56:11,269
presentation was presented and it's

1192
00:56:08,299 --> 00:56:14,569
based on a feature in messaging services

1193
00:56:11,269 --> 00:56:17,660
called message franking this is specific

1194
00:56:14,569 --> 00:56:22,400
to the Facebook encrypted messenger it's

1195
00:56:17,660 --> 00:56:25,700
a method of reporting abuse on for

1196
00:56:22,400 --> 00:56:28,099
encrypted messages so essentially if a

1197
00:56:25,700 --> 00:56:31,519
message is sent to you over an encrypted

1198
00:56:28,099 --> 00:56:33,829
Channel and and you can report it to

1199
00:56:31,519 --> 00:56:35,720
Facebook and you can do so without

1200
00:56:33,829 --> 00:56:37,819
revealing the rest of the messages that

1201
00:56:35,720 --> 00:56:41,480
you've encrypted or anything else so

1202
00:56:37,819 --> 00:56:45,410
this lack of committing ad led to this

1203
00:56:41,480 --> 00:56:50,380
invisible salamander bypass so with AES

1204
00:56:45,410 --> 00:56:52,940
GCM you were able an attacker is able to

1205
00:56:50,380 --> 00:56:55,099
take this abusive image which is a

1206
00:56:52,940 --> 00:56:56,809
salamander in this case and and sort of

1207
00:56:55,099 --> 00:56:58,819
replace it with it with the kitty cat so

1208
00:56:56,809 --> 00:57:00,589
Facebook was not able to actually verify

1209
00:56:58,819 --> 00:57:04,369
whether an abusive message was sent or

1210
00:57:00,589 --> 00:57:07,489
not so this is one use case a second use

1211
00:57:04,369 --> 00:57:11,890
case is opaque which is as we just

1212
00:57:07,489 --> 00:57:16,369
mentioned still in the pake process it

1213
00:57:11,890 --> 00:57:20,808
becomes more fragile if the AE is not

1214
00:57:16,369 --> 00:57:23,779
committing so in particular it reduces

1215
00:57:20,809 --> 00:57:25,400
the security of this cake significantly

1216
00:57:23,779 --> 00:57:28,700
if you don't have this primitive that

1217
00:57:25,400 --> 00:57:30,789
has this this feature itself a

1218
00:57:28,700 --> 00:57:33,230
committing a interests ensures

1219
00:57:30,789 --> 00:57:35,119
transcript consistency in group

1220
00:57:33,230 --> 00:57:37,130
messaging so this is potentially of

1221
00:57:35,119 --> 00:57:38,750
interest to MLS and the MLS working

1222
00:57:37,130 --> 00:57:41,390
group

1223
00:57:38,750 --> 00:57:44,720
and it's widely using research that may

1224
00:57:41,390 --> 00:57:47,540
be deployed in the future so the the

1225
00:57:44,720 --> 00:57:49,310
process I guess here was something that

1226
00:57:47,540 --> 00:57:50,960
we're kind of clarifying but in this

1227
00:57:49,310 --> 00:57:53,360
slide it says why is an RFC needed what

1228
00:57:50,960 --> 00:57:55,760
should the RFC say I'm not recommending

1229
00:57:53,360 --> 00:57:57,140
that this is exactly a piece of work

1230
00:57:55,760 --> 00:57:59,960
that's going to be adopted but this is

1231
00:57:57,140 --> 00:58:02,060
more of a general presentation and this

1232
00:57:59,960 --> 00:58:05,090
is kind of suggestions from the authors

1233
00:58:02,060 --> 00:58:07,940
as to what the benefit would be of

1234
00:58:05,090 --> 00:58:08,570
having a published document in CFR G

1235
00:58:07,940 --> 00:58:13,580
about this

1236
00:58:08,570 --> 00:58:16,880
so specifically RFC's mean fewer

1237
00:58:13,580 --> 00:58:18,740
mistakes better designs misunderstanding

1238
00:58:16,880 --> 00:58:20,110
is widespread you can implement

1239
00:58:18,740 --> 00:58:24,350
something incorrectly if you have a

1240
00:58:20,110 --> 00:58:26,480
solid readable and well vetted RFC it's

1241
00:58:24,350 --> 00:58:29,960
a lot easier to get things right and to

1242
00:58:26,480 --> 00:58:33,410
make things interoperable a committing

1243
00:58:29,960 --> 00:58:36,290
AE is a construction that's tricky and

1244
00:58:33,410 --> 00:58:38,509
has many pitfalls making sure that all

1245
00:58:36,290 --> 00:58:41,509
of those pitfalls are spelled out in a

1246
00:58:38,510 --> 00:58:44,900
document is valuable and you can dispel

1247
00:58:41,510 --> 00:58:47,870
confusion mandate good schemes so there

1248
00:58:44,900 --> 00:58:49,820
are many knobs to tweak here as as we

1249
00:58:47,870 --> 00:58:52,730
heard in the last authenticated

1250
00:58:49,820 --> 00:58:54,320
encryption talk there are multiple

1251
00:58:52,730 --> 00:58:55,610
options for symmetric encryption that

1252
00:58:54,320 --> 00:58:57,830
have different trade-offs in terms of

1253
00:58:55,610 --> 00:59:01,100
performance and setup and whatnot

1254
00:58:57,830 --> 00:59:03,850
having some recommendations for IETF

1255
00:59:01,100 --> 00:59:07,040
implementers would be a good thing and

1256
00:59:03,850 --> 00:59:09,830
with that I think that's the end of this

1257
00:59:07,040 --> 00:59:16,550
presentation so I can take questions I

1258
00:59:09,830 --> 00:59:19,340
don't know if I can answer them Thank

1259
00:59:16,550 --> 00:59:22,610
You Nick in fact the to create

1260
00:59:19,340 --> 00:59:25,670
presentations at websites very good

1261
00:59:22,610 --> 00:59:27,410
overview of the problem in practice I

1262
00:59:25,670 --> 00:59:30,170
totally agree is that I missed in

1263
00:59:27,410 --> 00:59:32,839
stained enough properties that are

1264
00:59:30,170 --> 00:59:37,220
gained by ad encryption is really

1265
00:59:32,840 --> 00:59:38,750
widespread in my practice I I have seen

1266
00:59:37,220 --> 00:59:43,009
the such an example it was terrifying

1267
00:59:38,750 --> 00:59:45,140
and I would say that in theoretical

1268
00:59:43,010 --> 00:59:49,250
probability cryptography MIT comedian

1269
00:59:45,140 --> 00:59:52,089
schemes and committing schemes are one

1270
00:59:49,250 --> 00:59:55,180
of the main building blocks

1271
00:59:52,090 --> 01:00:00,370
good scheme so I think that's really do

1272
00:59:55,180 --> 01:00:02,919
need James and I would just say that

1273
01:00:00,370 --> 01:00:05,170
Larry said we need to encourage people

1274
01:00:02,920 --> 01:00:07,930
to be involved in the process of

1275
01:00:05,170 --> 01:00:09,880
thinking of how to do this in MO

1276
01:00:07,930 --> 01:00:12,490
community thank you very much I think

1277
01:00:09,880 --> 01:00:13,120
it's it was so very important great

1278
01:00:12,490 --> 01:00:17,740
presentation

1279
01:00:13,120 --> 01:00:21,640
thank you Thanks go Phil Han Baker yeah

1280
01:00:17,740 --> 01:00:25,930
this is very helpful to me so I'd like

1281
01:00:21,640 --> 01:00:28,650
to see go forward as an RFC and I'm

1282
01:00:25,930 --> 01:00:33,279
designing a cryptographic message system

1283
01:00:28,650 --> 01:00:36,910
you know pkcs7 Jason one on things I'm

1284
01:00:33,280 --> 01:00:39,580
trying to do is to only provide options

1285
01:00:36,910 --> 01:00:42,460
this is secure so I derive oh I always

1286
01:00:39,580 --> 01:00:44,770
use derive keys and if anything out time

1287
01:00:42,460 --> 01:00:48,400
could look at it and see whether my way

1288
01:00:44,770 --> 01:00:50,220
of deriving the keys is solid I'd

1289
01:00:48,400 --> 01:00:55,720
appreciate that

1290
01:00:50,220 --> 01:00:58,109
okay thank you we have Richard back up

1291
01:00:55,720 --> 01:00:58,109
next

1292
01:01:12,410 --> 01:01:20,390
all right who's here thinks they know

1293
01:01:14,850 --> 01:01:24,660
how to multiply anybody yeah some people

1294
01:01:20,390 --> 01:01:28,020
turns out it's slightly non-trivial so

1295
01:01:24,660 --> 01:01:29,970
in certain circumstances one would like

1296
01:01:28,020 --> 01:01:32,910
to be able to update an elliptic curve

1297
01:01:29,970 --> 01:01:34,980
key pair by multiplying both the private

1298
01:01:32,910 --> 01:01:38,129
key and the public key by a scalar and

1299
01:01:34,980 --> 01:01:39,300
got a new key pair one of the co-authors

1300
01:01:38,130 --> 01:01:42,080
on this draft sure well all and

1301
01:01:39,300 --> 01:01:44,640
published some press recently about

1302
01:01:42,080 --> 01:01:46,230
these ideas about updatable public key

1303
01:01:44,640 --> 01:01:48,540
encryption where you can get some

1304
01:01:46,230 --> 01:01:51,630
forward secrecy properties by updating a

1305
01:01:48,540 --> 01:01:53,370
key with some additional entropy after

1306
01:01:51,630 --> 01:01:55,590
you've done an encryption to it and you

1307
01:01:53,370 --> 01:01:57,270
get some neat forward secrecy out of

1308
01:01:55,590 --> 01:02:00,290
things that were not forward secret

1309
01:01:57,270 --> 01:02:03,990
secret before doing that sort of update

1310
01:02:00,290 --> 01:02:06,900
so like if you're thinking it's kind of

1311
01:02:03,990 --> 01:02:12,390
standard you know good old virus drost

1312
01:02:06,900 --> 01:02:15,150
curve sort of arithmetic this diagram on

1313
01:02:12,390 --> 01:02:16,620
the left here commutes if you take a

1314
01:02:15,150 --> 01:02:18,180
scalar and you generate the

1315
01:02:16,620 --> 01:02:20,520
corresponding point by multiplying by

1316
01:02:18,180 --> 01:02:24,419
the base point and then you multiply

1317
01:02:20,520 --> 01:02:25,890
that point by another scalar d then you

1318
01:02:24,420 --> 01:02:27,740
get the same result as if you had

1319
01:02:25,890 --> 01:02:29,700
multiplied the scalar by D and then

1320
01:02:27,740 --> 01:02:31,529
generated the corresponding point by

1321
01:02:29,700 --> 01:02:34,830
multiplying by the base point now you

1322
01:02:31,530 --> 01:02:37,230
have this associative property on scalar

1323
01:02:34,830 --> 01:02:40,140
multiplication and it turns out that

1324
01:02:37,230 --> 01:02:41,970
that is not the case for these more

1325
01:02:40,140 --> 01:02:47,100
modern curves that have been defined by

1326
01:02:41,970 --> 01:02:49,649
C frg so what we're going to propose

1327
01:02:47,100 --> 01:02:51,750
here is updating this scalar

1328
01:02:49,650 --> 01:02:55,170
multiplication operation so that it ends

1329
01:02:51,750 --> 01:02:57,900
up being compatible with the kind of the

1330
01:02:55,170 --> 01:03:00,050
other side of this diagram so the

1331
01:02:57,900 --> 01:03:04,230
underlying problem here is that these

1332
01:03:00,050 --> 01:03:07,080
curve groups x.25 500 and 9 X 4 4 8 do

1333
01:03:04,230 --> 01:03:10,080
what's called clamping so before they do

1334
01:03:07,080 --> 01:03:12,180
the actual point multiplication they

1335
01:03:10,080 --> 01:03:16,319
ensure that the high order a high order

1336
01:03:12,180 --> 01:03:19,169
bit in the scalar is set so the scalar

1337
01:03:16,320 --> 01:03:21,000
always has a certain bit set which means

1338
01:03:19,170 --> 01:03:22,740
that it when you multiply two values you

1339
01:03:21,000 --> 01:03:24,360
have like a 50-50 chance

1340
01:03:22,740 --> 01:03:25,890
that bit beings that are not so the

1341
01:03:24,360 --> 01:03:28,619
multiplicative the wrong multiplication

1342
01:03:25,890 --> 01:03:31,410
doesn't work that's kind of the core of

1343
01:03:28,619 --> 01:03:32,790
the brokenness here but what this draft

1344
01:03:31,410 --> 01:03:35,160
does is proceed from that from two

1345
01:03:32,790 --> 01:03:36,600
operations one is that if you multiply

1346
01:03:35,160 --> 01:03:39,839
the two values and you get a value

1347
01:03:36,600 --> 01:03:42,118
that's not clamps then if you subtract

1348
01:03:39,840 --> 01:03:43,200
that value that products from the curve

1349
01:03:42,119 --> 01:03:46,290
order in here

1350
01:03:43,200 --> 01:03:48,540
then almost always you get a clamped

1351
01:03:46,290 --> 01:03:50,450
value so that's observation number one

1352
01:03:48,540 --> 01:03:53,670
the second value of observation is that

1353
01:03:50,450 --> 01:03:56,279
in the definitions of these these curve

1354
01:03:53,670 --> 01:03:58,530
groups they're not sensitive to the sign

1355
01:03:56,280 --> 01:04:00,480
so using X versus and minus X isn't

1356
01:03:58,530 --> 01:04:01,920
substantive you get the same x

1357
01:04:00,480 --> 01:04:03,690
coordinate and everything uses the x

1358
01:04:01,920 --> 01:04:05,340
coordinate in these and these operations

1359
01:04:03,690 --> 01:04:06,720
so it doesn't matter whether you're

1360
01:04:05,340 --> 01:04:08,940
using the positive or the negative the

1361
01:04:06,720 --> 01:04:10,529
point and so basically what we're

1362
01:04:08,940 --> 01:04:11,940
proposing here is you can create a

1363
01:04:10,530 --> 01:04:14,550
multiplication operation that is

1364
01:04:11,940 --> 01:04:16,890
compatible with the group law by just

1365
01:04:14,550 --> 01:04:19,260
taking whichever of these two values is

1366
01:04:16,890 --> 01:04:20,490
the clamped one and we propose an graphs

1367
01:04:19,260 --> 01:04:21,390
and ways to do this in constant time

1368
01:04:20,490 --> 01:04:25,109
which you need because you're dealing

1369
01:04:21,390 --> 01:04:28,589
with private values but that this is

1370
01:04:25,110 --> 01:04:30,900
that the gist of the algorithm here now

1371
01:04:28,590 --> 01:04:33,119
the kind of asterisk on this is that it

1372
01:04:30,900 --> 01:04:35,880
doesn't always work there there are some

1373
01:04:33,119 --> 01:04:39,780
values if you you know look at the the

1374
01:04:35,880 --> 01:04:42,090
range of possible scalars that are where

1375
01:04:39,780 --> 01:04:44,910
neither the value itself nor its

1376
01:04:42,090 --> 01:04:47,190
negative in the in the modular group are

1377
01:04:44,910 --> 01:04:50,009
clamped have the high-order bit set and

1378
01:04:47,190 --> 01:04:53,910
in that case you have two scalars and

1379
01:04:50,010 --> 01:04:55,619
neither products is neither it or it's

1380
01:04:53,910 --> 01:04:58,200
negative or clamped and your

1381
01:04:55,619 --> 01:04:59,340
multiplication fails so you know we

1382
01:04:58,200 --> 01:05:00,720
thought we knew how to multiply we

1383
01:04:59,340 --> 01:05:02,730
thought multiplication always works

1384
01:05:00,720 --> 01:05:05,580
turns out in these groups doesn't quite

1385
01:05:02,730 --> 01:05:08,430
always work the good news is that this

1386
01:05:05,580 --> 01:05:10,650
is it's rare and it's detectable so if

1387
01:05:08,430 --> 01:05:13,799
you write down you work through a bunch

1388
01:05:10,650 --> 01:05:15,270
of inequalities the failure cases you

1389
01:05:13,800 --> 01:05:16,770
can you can define where the failure

1390
01:05:15,270 --> 01:05:19,440
cases and you compare them to the size

1391
01:05:16,770 --> 01:05:21,600
of the group you assume that if you

1392
01:05:19,440 --> 01:05:24,030
assume that you're to multiply cancer

1393
01:05:21,600 --> 01:05:27,180
are randomly distributed so the product

1394
01:05:24,030 --> 01:05:29,130
is really randomly distributed then your

1395
01:05:27,180 --> 01:05:32,040
probabilities of failure are you know

1396
01:05:29,130 --> 01:05:35,310
down in the infinitesimal kind of scale

1397
01:05:32,040 --> 01:05:36,450
here so you have low probability of

1398
01:05:35,310 --> 01:05:38,609
failure and

1399
01:05:36,450 --> 01:05:40,169
if you do have a failure then if you're

1400
01:05:38,609 --> 01:05:42,270
doing the private key operation it is

1401
01:05:40,170 --> 01:05:44,609
detectable if you're doing the public

1402
01:05:42,270 --> 01:05:47,490
key half of this it's not detectable so

1403
01:05:44,609 --> 01:05:49,259
there's some subtlety about how you can

1404
01:05:47,490 --> 01:05:50,729
what you would need to do if you were

1405
01:05:49,260 --> 01:05:53,099
integrating this operation into a

1406
01:05:50,730 --> 01:05:54,540
protocol if you want to need it wanted

1407
01:05:53,099 --> 01:05:57,720
to kind of detect and recover from these

1408
01:05:54,540 --> 01:05:58,950
failures and not have not rely on the

1409
01:05:57,720 --> 01:06:01,169
fact that they're rare if you want to be

1410
01:05:58,950 --> 01:06:03,118
able to in the rare case that it happens

1411
01:06:01,170 --> 01:06:05,010
recover from it you would need to have

1412
01:06:03,119 --> 01:06:06,450
some communication between the private

1413
01:06:05,010 --> 01:06:09,810
key holder and folks doing the public

1414
01:06:06,450 --> 01:06:12,270
side of the operation so that's the

1415
01:06:09,810 --> 01:06:13,980
technical content this is really an

1416
01:06:12,270 --> 01:06:15,480
awareness-raising thing this is a 0-0

1417
01:06:13,980 --> 01:06:19,050
draft that we spun out just before the

1418
01:06:15,480 --> 01:06:21,660
draft deadline this came up largely

1419
01:06:19,050 --> 01:06:24,030
because it's of interest to MLS on in

1420
01:06:21,660 --> 01:06:26,069
MLS this updatable public key encryption

1421
01:06:24,030 --> 01:06:28,380
stuff if you kind of take this and you

1422
01:06:26,070 --> 01:06:31,020
merge it with HP ke and you you know put

1423
01:06:28,380 --> 01:06:32,520
it into a tree for MLS you get some

1424
01:06:31,020 --> 01:06:34,920
forward secrecy properties that attain

1425
01:06:32,520 --> 01:06:36,930
much more quickly then then you would

1426
01:06:34,920 --> 01:06:38,730
otherwise so there's some appeal to to

1427
01:06:36,930 --> 01:06:41,220
this updatable PK a public key

1428
01:06:38,730 --> 01:06:42,420
encryption in the MLS context but I

1429
01:06:41,220 --> 01:06:45,000
thought it presented here in case this

1430
01:06:42,420 --> 01:06:47,310
seemed like a useful thing to anyone

1431
01:06:45,000 --> 01:06:49,560
else to see if there's interest in maybe

1432
01:06:47,310 --> 01:06:56,730
doing something and see if our G here so

1433
01:06:49,560 --> 01:07:00,240
without all take comments questions your

1434
01:06:56,730 --> 01:07:03,680
own chef a very pragmatic question a can

1435
01:07:00,240 --> 01:07:06,689
you do any of this with out-of-the-box

1436
01:07:03,680 --> 01:07:10,560
libraries or we assuming that people

1437
01:07:06,690 --> 01:07:14,640
will be doing the or multiplication all

1438
01:07:10,560 --> 01:07:18,270
the such a little fun and so on yeah so

1439
01:07:14,640 --> 01:07:19,980
it is possible the authors have done

1440
01:07:18,270 --> 01:07:23,640
some experimentation it is possible to

1441
01:07:19,980 --> 01:07:25,589
use X to 509 libraries as they are now

1442
01:07:23,640 --> 01:07:28,799
if you can get access to the raw bytes

1443
01:07:25,589 --> 01:07:31,078
of private keys so you can do this it is

1444
01:07:28,800 --> 01:07:32,849
possible to implement and I think if you

1445
01:07:31,079 --> 01:07:34,140
introduced if you if you implement the

1446
01:07:32,849 --> 01:07:35,760
algorithms as we have them in the

1447
01:07:34,140 --> 01:07:37,500
document you end up with something that

1448
01:07:35,760 --> 01:07:40,740
has a reasonable chance of being such

1449
01:07:37,500 --> 01:07:42,000
you know free or being a constant time

1450
01:07:40,740 --> 01:07:46,470
as best we can

1451
01:07:42,000 --> 01:07:49,920
I think in the longer run one of the

1452
01:07:46,470 --> 01:07:50,250
benefits to doing a RFC about this would

1453
01:07:49,920 --> 01:07:52,770
be

1454
01:07:50,250 --> 01:07:54,780
it would be good to get this if this is

1455
01:07:52,770 --> 01:07:55,830
cut this operation and the kind of

1456
01:07:54,780 --> 01:07:58,140
protocols that you might build out a

1457
01:07:55,830 --> 01:07:59,609
very useful it would be useful for these

1458
01:07:58,140 --> 01:08:01,080
things to be in the libraries themselves

1459
01:07:59,609 --> 01:08:03,060
so you didn't have to kind of pull out

1460
01:08:01,080 --> 01:08:06,990
the wrong key bytes and manipulate them

1461
01:08:03,060 --> 01:08:08,369
agree thank you yeah yeah that would be

1462
01:08:06,990 --> 01:08:10,529
the one of the benefits of doing some

1463
01:08:08,369 --> 01:08:11,790
work here is they were you know easier

1464
01:08:10,530 --> 01:08:14,390
to justify library development if

1465
01:08:11,790 --> 01:08:16,560
there's a consistent on it yeah

1466
01:08:14,390 --> 01:08:21,059
questions go that's rich got a comment

1467
01:08:16,560 --> 01:08:22,910
come on all right we'll have to have

1468
01:08:21,060 --> 01:08:37,859
further discussion on the list

1469
01:08:22,910 --> 01:08:40,799
I think our program for today's finished

1470
01:08:37,859 --> 01:08:50,880
so we actually you know any other

1471
01:08:40,799 --> 01:08:54,390
business section real chatty group today

1472
01:08:50,880 --> 01:08:57,500
okay well thanks a lot and we'll see you

1473
01:08:54,390 --> 01:08:57,500
next time see a ferjeen

1474
01:09:27,170 --> 01:09:30,170
yeah

1475
01:09:40,450 --> 01:09:42,510
you

