1
00:00:04,620 --> 00:00:20,690
this time that's all just FYI time is it

2
00:00:22,310 --> 00:00:27,749
okay it is officially 3:20 so let's go

3
00:00:26,550 --> 00:00:29,999
ahead and get started

4
00:00:27,749 --> 00:00:33,750
welcome to the remote at the stations

5
00:00:29,999 --> 00:00:35,460
and procedures working group if this is

6
00:00:33,750 --> 00:00:43,200
not the group you're expecting you're

7
00:00:35,460 --> 00:00:45,990
likely in the wrong room we're just

8
00:00:43,200 --> 00:00:48,890
going to continue so welcome

9
00:00:45,990 --> 00:00:54,660
do we have any new attendees in the room

10
00:00:48,890 --> 00:00:56,970
nope okay so everybody is knowledgeable

11
00:00:54,660 --> 00:01:01,260
about the note well with the IPR issues

12
00:00:56,970 --> 00:01:04,259
and and the code of conduct as I say so

13
00:01:01,260 --> 00:01:09,390
moving on let's do the administrative

14
00:01:04,259 --> 00:01:11,820
tasks so I would like to thank Peter

15
00:01:09,390 --> 00:01:15,600
still here yes so I want to thank Peter

16
00:01:11,820 --> 00:01:19,048
for for taking notes I did set up an

17
00:01:15,600 --> 00:01:22,740
ether pad so I would encourage everyone

18
00:01:19,049 --> 00:01:25,020
to help with the taking of notes as we

19
00:01:22,740 --> 00:01:27,839
are going to have good discussions that

20
00:01:25,020 --> 00:01:29,719
I'd like to have captured so besides

21
00:01:27,840 --> 00:01:32,700
Peter who's going to be taking notes

22
00:01:29,719 --> 00:01:36,899
offline can I at least have one other

23
00:01:32,700 --> 00:01:43,340
volunteer and would love it if they were

24
00:01:36,899 --> 00:01:50,179
using the ether pad and I also need a

25
00:01:43,340 --> 00:01:53,159
jabber scruggs good-ass yes okay so I

26
00:01:50,179 --> 00:01:57,590
cannot move forward unless I have one

27
00:01:53,159 --> 00:02:05,340
more note taker please thank you Michael

28
00:01:57,590 --> 00:02:08,050
will you use the ether pad no I I wrote

29
00:02:05,340 --> 00:02:09,280
just so that you knew you were on the

30
00:02:08,050 --> 00:02:12,510
right okay

31
00:02:09,280 --> 00:02:16,510
so thank you for volunteering with that

32
00:02:12,510 --> 00:02:20,200
I see one

33
00:02:16,510 --> 00:02:22,660
oh my co-chairs are actually remote so

34
00:02:20,200 --> 00:02:29,619
thank you kathleen and that for joining

35
00:02:22,660 --> 00:02:31,300
me I'll be remote with respect to the

36
00:02:29,620 --> 00:02:33,490
agenda

37
00:02:31,300 --> 00:02:37,300
I have a little bit of time here just to

38
00:02:33,490 --> 00:02:39,850
go over so we have a pact to two

39
00:02:37,300 --> 00:02:46,300
sessions this week I'm not going to show

40
00:02:39,850 --> 00:02:49,840
the session for Friday but for today we

41
00:02:46,300 --> 00:02:53,320
are going to focus mainly on eat with a

42
00:02:49,840 --> 00:02:57,040
little bit of the conversation on Gary's

43
00:02:53,320 --> 00:02:58,720
proposal on quests which I can't

44
00:02:57,040 --> 00:03:01,900
remember what the acronym stands for but

45
00:02:58,720 --> 00:03:04,630
he will describe that to us so are there

46
00:03:01,900 --> 00:03:11,050
any objections for the agenda or

47
00:03:04,630 --> 00:03:12,820
additions if not let's get started so

48
00:03:11,050 --> 00:03:15,700
the blue sheet has been floating around

49
00:03:12,820 --> 00:03:23,260
and there's only one so if you need it

50
00:03:15,700 --> 00:03:26,170
just make sure you get to it okay all

51
00:03:23,260 --> 00:03:31,390
right ready you have the clicker this is

52
00:03:26,170 --> 00:03:31,929
the clicker and just do a flip make sure

53
00:03:31,390 --> 00:03:36,940
it works

54
00:03:31,930 --> 00:03:44,020
yep done all right so the first part of

55
00:03:36,940 --> 00:03:47,739
this the first 30 minutes I'm gonna set

56
00:03:44,020 --> 00:03:52,959
the clock memories so the first 30

57
00:03:47,739 --> 00:03:58,660
minutes of this is basically when is eat

58
00:03:52,959 --> 00:04:01,720
done so this is a four kind of largest

59
00:03:58,660 --> 00:04:05,260
largest claims that are areas of claims

60
00:04:01,720 --> 00:04:08,950
we could add to eat so this is about

61
00:04:05,260 --> 00:04:13,060
kind of future work the the after that

62
00:04:08,950 --> 00:04:15,280
there's 50 minutes or 40 minutes about

63
00:04:13,060 --> 00:04:18,730
open issues with the existing claim so

64
00:04:15,280 --> 00:04:21,100
the first parts proposals for new claims

65
00:04:18,730 --> 00:04:23,470
second part is working on issues for

66
00:04:21,100 --> 00:04:29,730
some of the existing claims in the

67
00:04:23,470 --> 00:04:32,290
document alright so so when is he done

68
00:04:29,730 --> 00:04:35,790
when do we have enough claims I think

69
00:04:32,290 --> 00:04:38,680
the answer is kind of never and in that

70
00:04:35,790 --> 00:04:42,760
there will always be an INR registry for

71
00:04:38,680 --> 00:04:45,070
adding claims and so the question is

72
00:04:42,760 --> 00:04:47,740
really when do we take the current eat

73
00:04:45,070 --> 00:04:49,120
document and call it done you know what

74
00:04:47,740 --> 00:04:51,010
if the set of claims we're gonna put in

75
00:04:49,120 --> 00:04:52,420
the current eat document because it will

76
00:04:51,010 --> 00:04:55,659
always be the opportunity to add

77
00:04:52,420 --> 00:04:59,830
documents later on other working groups

78
00:04:55,660 --> 00:05:02,490
can add claims people can create create

79
00:04:59,830 --> 00:05:05,620
file claims with Diana and and so on so

80
00:05:02,490 --> 00:05:07,960
so this is not like some you're in or

81
00:05:05,620 --> 00:05:09,790
you're out this is just when you know

82
00:05:07,960 --> 00:05:11,710
how do we scope our work for the next

83
00:05:09,790 --> 00:05:13,450
you know six months or a year or five

84
00:05:11,710 --> 00:05:23,710
years we don't like what do we want to

85
00:05:13,450 --> 00:05:25,930
do there so I'm going to describe the

86
00:05:23,710 --> 00:05:29,770
way I want to run this is I'm going to

87
00:05:25,930 --> 00:05:31,390
describe four areas or four claims and

88
00:05:29,770 --> 00:05:35,440
I'm just going to talk through all four

89
00:05:31,390 --> 00:05:37,810
of them and then after that I'd like try

90
00:05:35,440 --> 00:05:39,969
and leave about 10-15 minutes for

91
00:05:37,810 --> 00:05:42,310
discussion about which ones we think are

92
00:05:39,970 --> 00:05:43,690
good and which ones which ones are the

93
00:05:42,310 --> 00:05:44,320
higher priority which ones are the lower

94
00:05:43,690 --> 00:05:46,240
priority

95
00:05:44,320 --> 00:05:48,340
I'm only describing them in a conceptual

96
00:05:46,240 --> 00:05:50,650
layer conceptual level to try and

97
00:05:48,340 --> 00:05:55,270
understand if if this is something we

98
00:05:50,650 --> 00:05:57,789
want to pursue there's no there's little

99
00:05:55,270 --> 00:06:00,900
bits of work done on them here and there

100
00:05:57,790 --> 00:06:05,910
but there's not like a pull request

101
00:06:00,900 --> 00:06:12,340
requests our proposal for these alright

102
00:06:05,910 --> 00:06:15,280
so here's one proposed is that we eat be

103
00:06:12,340 --> 00:06:16,869
able to carry the attestation result you

104
00:06:15,280 --> 00:06:18,729
know so the there's the attestation

105
00:06:16,870 --> 00:06:21,010
evidence that comes from the attest ere

106
00:06:18,730 --> 00:06:23,050
it goes to the verifier and then the

107
00:06:21,010 --> 00:06:25,030
verifier outputs an attestation result

108
00:06:23,050 --> 00:06:30,310
what's the format of that can that be

109
00:06:25,030 --> 00:06:32,090
eat and maybe the output is eat even

110
00:06:30,310 --> 00:06:35,090
when the input

111
00:06:32,090 --> 00:06:36,940
is yang and comes from a teepee the

112
00:06:35,090 --> 00:06:40,429
interaction is yang and comes from a TPM

113
00:06:36,940 --> 00:06:42,469
maybe the input is is eat and all that

114
00:06:40,430 --> 00:06:44,360
the the verifier does is verify the

115
00:06:42,470 --> 00:06:46,790
signature and says yeah I checked the

116
00:06:44,360 --> 00:06:50,150
signature lots of different ways of

117
00:06:46,790 --> 00:06:52,550
going about this here there may be

118
00:06:50,150 --> 00:06:54,979
implicit claims just because we you know

119
00:06:52,550 --> 00:06:56,960
something was signed by a particular key

120
00:06:54,980 --> 00:06:58,490
and was known to be from a particular

121
00:06:56,960 --> 00:07:02,150
piece of hardware then you might know

122
00:06:58,490 --> 00:07:04,280
some other things about that that the

123
00:07:02,150 --> 00:07:06,260
verifier might not have insider

124
00:07:04,280 --> 00:07:10,099
knowledge or special knowledge about

125
00:07:06,260 --> 00:07:12,380
that that so they can add extra claims

126
00:07:10,100 --> 00:07:14,170
and into the the attestation result

127
00:07:12,380 --> 00:07:17,210
basically making implicit claims

128
00:07:14,170 --> 00:07:20,090
explicit I think another thing that's

129
00:07:17,210 --> 00:07:24,440
really interesting for here to be done

130
00:07:20,090 --> 00:07:28,010
here is the verifier knows the known

131
00:07:24,440 --> 00:07:31,040
good values of the measurements so that

132
00:07:28,010 --> 00:07:34,880
the verifier can look at the look at the

133
00:07:31,040 --> 00:07:37,670
input and then translate the measurement

134
00:07:34,880 --> 00:07:42,350
values into yes everything verified it's

135
00:07:37,670 --> 00:07:44,240
good I think another one another

136
00:07:42,350 --> 00:07:46,670
interesting one is maybe the device has

137
00:07:44,240 --> 00:07:48,860
received some certifications Common

138
00:07:46,670 --> 00:07:50,000
Criteria based or global platform or

139
00:07:48,860 --> 00:07:53,870
Fido

140
00:07:50,000 --> 00:07:57,800
so the verifier might be able to add

141
00:07:53,870 --> 00:08:01,760
those add information that says how this

142
00:07:57,800 --> 00:08:03,800
particular thing was certified you know

143
00:08:01,760 --> 00:08:05,180
if the verifier I mean we can imagine a

144
00:08:03,800 --> 00:08:08,150
lot of different verifiers one might be

145
00:08:05,180 --> 00:08:10,820
just for our manufacturer there might be

146
00:08:08,150 --> 00:08:12,560
also aggregate very fair fires that work

147
00:08:10,820 --> 00:08:17,240
across lots of different devices if it's

148
00:08:12,560 --> 00:08:18,440
an aggregator then you could the the

149
00:08:17,240 --> 00:08:21,320
certification result becomes more

150
00:08:18,440 --> 00:08:23,110
interesting so there's a lot I think

151
00:08:21,320 --> 00:08:25,670
there's a lot to that can happen here

152
00:08:23,110 --> 00:08:27,320
and I don't see Hank in the room I would

153
00:08:25,670 --> 00:08:33,289
imagine he would have a lot to

154
00:08:27,320 --> 00:08:37,390
contribute about this but yeah all right

155
00:08:33,289 --> 00:08:40,839
next clean clarifying question yes

156
00:08:37,390 --> 00:08:44,680
master page what what do you mean the

157
00:08:40,840 --> 00:08:46,870
certifications so if

158
00:08:44,680 --> 00:08:49,089
certification like a certification or a

159
00:08:46,870 --> 00:08:50,970
Common Criteria okay this kind of

160
00:08:49,089 --> 00:08:54,820
envision Hussein to who

161
00:08:50,970 --> 00:08:56,890
well I'm sorry I mean it's the source

162
00:08:54,820 --> 00:09:01,089
and to device all the device sent to the

163
00:08:56,890 --> 00:09:03,880
attestation slower the verifier would

164
00:09:01,089 --> 00:09:06,899
know would know the identity of the a

165
00:09:03,880 --> 00:09:10,089
tester okay and would have a database of

166
00:09:06,899 --> 00:09:12,850
its own that lists what certifications

167
00:09:10,089 --> 00:09:14,470
that has okay based on the information

168
00:09:12,850 --> 00:09:17,260
collected if long for our device and

169
00:09:14,470 --> 00:09:23,430
yeah the identity winner is a pasta song

170
00:09:17,260 --> 00:09:27,339
for a certification yes yes okay okay

171
00:09:23,430 --> 00:09:31,839
all right so we can put a public key in

172
00:09:27,339 --> 00:09:34,000
as a claim Fido does this Android

173
00:09:31,839 --> 00:09:37,089
keister does this you could call this a

174
00:09:34,000 --> 00:09:38,709
key attestation I think there's a some

175
00:09:37,089 --> 00:09:40,810
fuzziness of whether it's a device at a

176
00:09:38,709 --> 00:09:43,899
station with a key or it's a key at a

177
00:09:40,810 --> 00:09:46,750
station that's has some supporting

178
00:09:43,899 --> 00:09:49,150
information about the device IOT

179
00:09:46,750 --> 00:09:53,790
onboarding often needs a key pair that's

180
00:09:49,150 --> 00:10:00,420
used with DTLS so it's an IOT use case

181
00:09:53,790 --> 00:10:04,180
so we put the public key in as a claim

182
00:10:00,420 --> 00:10:06,370
you might put in some conditions about

183
00:10:04,180 --> 00:10:07,689
how the key was generated for example

184
00:10:06,370 --> 00:10:12,490
you could say this jet this key was

185
00:10:07,690 --> 00:10:14,709
generated and inside a te you might have

186
00:10:12,490 --> 00:10:16,839
conditions governing use of the key like

187
00:10:14,709 --> 00:10:19,599
for example in the Android key store

188
00:10:16,839 --> 00:10:22,029
there's a bunch of characteristics that

189
00:10:19,600 --> 00:10:23,620
say when the key is usable and when the

190
00:10:22,029 --> 00:10:26,950
key is not whether authentication is

191
00:10:23,620 --> 00:10:28,930
required what kind of authentication so

192
00:10:26,950 --> 00:10:40,300
there's a lot of put a lot of conditions

193
00:10:28,930 --> 00:10:44,560
in governing the the use of the key so

194
00:10:40,300 --> 00:10:49,300
what does it look like so we would need

195
00:10:44,560 --> 00:10:52,569
some sort of a something to hold the

196
00:10:49,300 --> 00:10:57,310
public key there's probably a Jose and

197
00:10:52,570 --> 00:10:59,440
Jose types already - for

198
00:10:57,310 --> 00:11:01,800
you might want proof of possession or

199
00:10:59,440 --> 00:11:04,930
you might not want group of possession

200
00:11:01,800 --> 00:11:09,250
if you follow that link there you'll get

201
00:11:04,930 --> 00:11:12,640
go see the three dozen characteristics

202
00:11:09,250 --> 00:11:15,160
Android has four are key that was

203
00:11:12,640 --> 00:11:18,100
generated um some of them are sort of

204
00:11:15,160 --> 00:11:19,240
the same as claims we already have some

205
00:11:18,100 --> 00:11:23,290
of them are different some of them are

206
00:11:19,240 --> 00:11:27,730
proprietary another one that I don't

207
00:11:23,290 --> 00:11:30,969
have on the slide here is a pkcs ten so

208
00:11:27,730 --> 00:11:32,710
this is kind of a it's like it's you

209
00:11:30,970 --> 00:11:37,360
know it's kind of a fuzzy area are we

210
00:11:32,710 --> 00:11:39,250
doing pkcs ten or by implicitly by just

211
00:11:37,360 --> 00:11:43,290
putting a key in an attestation or we do

212
00:11:39,250 --> 00:11:43,290
it do we actually include a pkcs tab

213
00:11:44,310 --> 00:11:53,290
yeah so so this one seems somewhat

214
00:11:50,620 --> 00:11:55,810
complicated but it seems useful because

215
00:11:53,290 --> 00:11:59,370
of the we already have a lot of use

216
00:11:55,810 --> 00:11:59,369
cases that are doing this kind of thing

217
00:11:59,700 --> 00:12:04,330
okay

218
00:12:01,690 --> 00:12:06,040
software inventory claim sorry I'm late

219
00:12:04,330 --> 00:12:08,170
to the party I have a comment for the

220
00:12:06,040 --> 00:12:10,719
last slide sorry so Claire just

221
00:12:08,170 --> 00:12:13,390
clarifying so the setup here is we're

222
00:12:10,720 --> 00:12:15,100
going through the going through the four

223
00:12:13,390 --> 00:12:18,760
four areas first and then we'll get

224
00:12:15,100 --> 00:12:20,950
opinions about whether we want to which

225
00:12:18,760 --> 00:12:22,510
ones we want to pursue it's so not a

226
00:12:20,950 --> 00:12:24,370
detailed design because that's

227
00:12:22,510 --> 00:12:25,870
presumably we'll jump in to the detail

228
00:12:24,370 --> 00:12:29,980
design after we decide which ones we

229
00:12:25,870 --> 00:12:33,670
want to do yeah thank you so so the

230
00:12:29,980 --> 00:12:36,220
software inventory I've had a number of

231
00:12:33,670 --> 00:12:38,380
people comment about you know that there

232
00:12:36,220 --> 00:12:42,760
should be software inventory that's kind

233
00:12:38,380 --> 00:12:44,740
of a major basis of trust that this this

234
00:12:42,760 --> 00:12:47,020
suffer inventory is it's a list of

235
00:12:44,740 --> 00:12:48,940
software it's not the same as a

236
00:12:47,020 --> 00:12:50,770
verification of the software like you

237
00:12:48,940 --> 00:12:52,990
might get out of TPM it's just a list of

238
00:12:50,770 --> 00:12:56,069
software so you might have the name the

239
00:12:52,990 --> 00:13:01,200
file path type of software version

240
00:12:56,070 --> 00:13:06,190
vendor maybe some measurements

241
00:13:01,200 --> 00:13:10,420
it's probably a array with one entry per

242
00:13:06,190 --> 00:13:10,980
software item and each software item has

243
00:13:10,420 --> 00:13:15,269
a map

244
00:13:10,980 --> 00:13:18,570
all of its characteristics so arms PSA

245
00:13:15,269 --> 00:13:21,779
token has this has done this so you can

246
00:13:18,570 --> 00:13:26,639
go look at the arm PSA draft so why

247
00:13:21,779 --> 00:13:29,269
would we do this there's the so the arm

248
00:13:26,639 --> 00:13:32,010
PSA token supports it cisco publishes a

249
00:13:29,269 --> 00:13:34,440
known good values list of their software

250
00:13:32,010 --> 00:13:43,230
I looked at that generally general

251
00:13:34,440 --> 00:13:47,910
interest I think just starting to Hank

252
00:13:43,230 --> 00:13:50,190
at lunch about cost wid the concise

253
00:13:47,910 --> 00:13:51,990
software ID that seems like that might

254
00:13:50,190 --> 00:13:53,970
just be the solution we could just

255
00:13:51,990 --> 00:13:56,610
reference and slot right in here that's

256
00:13:53,970 --> 00:13:59,820
very extensive already on the standards

257
00:13:56,610 --> 00:14:03,139
track seems to do it already in a nice

258
00:13:59,820 --> 00:14:06,720
neutral way so I think that's a

259
00:14:03,139 --> 00:14:08,370
possibility clarifying question just to

260
00:14:06,720 --> 00:14:10,620
comment this is Steven bang Hart I'd

261
00:14:08,370 --> 00:14:13,529
like to second support for coast wit or

262
00:14:10,620 --> 00:14:14,639
swig I think it pretty much has done all

263
00:14:13,529 --> 00:14:17,579
the work for you already

264
00:14:14,639 --> 00:14:21,000
and can just slot right in here okay all

265
00:14:17,579 --> 00:14:26,819
right so let me last one here of the

266
00:14:21,000 --> 00:14:30,360
four is into measurement or integrity

267
00:14:26,819 --> 00:14:33,689
check so I'm coming at this more from

268
00:14:30,360 --> 00:14:35,130
the te world rather than the TPM world

269
00:14:33,690 --> 00:14:36,839
and we think about this little

270
00:14:35,130 --> 00:14:42,230
measurement really different in the two

271
00:14:36,839 --> 00:14:44,550
worlds so I've listed several so so

272
00:14:42,230 --> 00:14:49,230
trying to say be let's be open-minded

273
00:14:44,550 --> 00:14:52,560
here about how we look at this so so

274
00:14:49,230 --> 00:14:56,310
there's TPM style of which is a series

275
00:14:52,560 --> 00:14:58,649
of hashes taken at boot and reported to

276
00:14:56,310 --> 00:15:02,790
the very verifier through the

277
00:14:58,649 --> 00:15:04,680
attestation evidence there's runtime

278
00:15:02,790 --> 00:15:07,290
integrity check which is different which

279
00:15:04,680 --> 00:15:09,810
is hashes of running software taken

280
00:15:07,290 --> 00:15:11,279
during run time and reported to the

281
00:15:09,810 --> 00:15:14,609
verifier so you could do this once every

282
00:15:11,279 --> 00:15:17,850
day or once every two hours or once

283
00:15:14,610 --> 00:15:20,399
every month and because of architectures

284
00:15:17,850 --> 00:15:23,450
like t e's you can do stuff like that

285
00:15:20,399 --> 00:15:25,880
that the TPM can't do

286
00:15:23,450 --> 00:15:29,060
to go further there are architectures

287
00:15:25,880 --> 00:15:32,150
where you do the runtime check and the

288
00:15:29,060 --> 00:15:34,729
te or whatever is knows the expected

289
00:15:32,150 --> 00:15:36,170
values so the result reported is yeah

290
00:15:34,730 --> 00:15:38,660
there was integrity you don't have to

291
00:15:36,170 --> 00:15:40,640
actually go all the way have the known

292
00:15:38,660 --> 00:15:42,350
good values the verifier doesn't have to

293
00:15:40,640 --> 00:15:45,980
know the known good values because the

294
00:15:42,350 --> 00:15:48,190
te knows it so these are a couple of

295
00:15:45,980 --> 00:15:52,030
different styles of integrity and

296
00:15:48,190 --> 00:15:54,950
measurement they may not be all of them

297
00:15:52,030 --> 00:15:56,990
but there's a some some examples here

298
00:15:54,950 --> 00:16:00,170
that are a little you know from

299
00:15:56,990 --> 00:16:04,040
different different places so why do we

300
00:16:00,170 --> 00:16:08,420
do this I probably don't have to say too

301
00:16:04,040 --> 00:16:09,980
much your TPM is widely used samsung has

302
00:16:08,420 --> 00:16:15,110
a product called timo that's part of

303
00:16:09,980 --> 00:16:17,090
knox that does the runtime part i think

304
00:16:15,110 --> 00:16:18,560
it's also interesting because TPMS can't

305
00:16:17,090 --> 00:16:22,840
do the runtime integrity checks so

306
00:16:18,560 --> 00:16:25,130
adding the runtime integrity check as

307
00:16:22,840 --> 00:16:28,640
another way of doing it is I think

308
00:16:25,130 --> 00:16:32,030
that's a useful thing I think this one

309
00:16:28,640 --> 00:16:34,480
has a lot of interesting challenges and

310
00:16:32,030 --> 00:16:36,500
room for a lot of interesting rewards

311
00:16:34,480 --> 00:16:38,480
because it's I think it's going to be

312
00:16:36,500 --> 00:16:40,690
hard to find a platform or an

313
00:16:38,480 --> 00:16:44,030
architecture neutrality because the way

314
00:16:40,690 --> 00:16:47,360
different different sort of technology

315
00:16:44,030 --> 00:16:49,100
areas work on it

316
00:16:47,360 --> 00:16:51,200
maybe there's too many different

317
00:16:49,100 --> 00:16:54,850
variants here we can't find a small

318
00:16:51,200 --> 00:16:56,960
enough set of measurements games I think

319
00:16:54,850 --> 00:16:58,640
the last one is probably the most

320
00:16:56,960 --> 00:17:00,590
interesting how do we find the common

321
00:16:58,640 --> 00:17:02,810
ground between the TPM and the non TPM

322
00:17:00,590 --> 00:17:04,640
worlds I know my conversations don't

323
00:17:02,810 --> 00:17:06,020
always ground out or close out when I

324
00:17:04,640 --> 00:17:08,060
have what I have had some of those

325
00:17:06,020 --> 00:17:10,660
things so I I think that's an

326
00:17:08,060 --> 00:17:15,619
interesting one so ok now let's see

327
00:17:10,660 --> 00:17:20,680
that's our 4 so now let's have some

328
00:17:15,619 --> 00:17:23,030
discussion about which of the four you

329
00:17:20,680 --> 00:17:27,860
think our priorities and we should

330
00:17:23,030 --> 00:17:32,240
pursue and should they be pursued as

331
00:17:27,859 --> 00:17:36,678
part of the current draft as a separate

332
00:17:32,240 --> 00:17:45,620
effort not at all

333
00:17:36,679 --> 00:17:48,649
so let's yeah okay sure I don't have a

334
00:17:45,620 --> 00:17:52,689
summary slide but so number one at a

335
00:17:48,649 --> 00:18:01,189
station result number two public keys

336
00:17:52,690 --> 00:18:04,700
and like pkcs ten number three software

337
00:18:01,190 --> 00:18:08,960
inventory number for measurement and

338
00:18:04,700 --> 00:18:11,600
integrity so um just a procedure this is

339
00:18:08,960 --> 00:18:14,779
Hank just a procedure thing maybe first

340
00:18:11,600 --> 00:18:18,049
do some questions and then maybe a hum I

341
00:18:14,779 --> 00:18:23,539
guess for for rumors husband okay the

342
00:18:18,049 --> 00:18:28,309
very first thing and now let honey can

343
00:18:23,539 --> 00:18:30,649
you go to the public key okay because I

344
00:18:28,309 --> 00:18:34,850
believe that already exists in some form

345
00:18:30,649 --> 00:18:38,000
yes in in in some form because we

346
00:18:34,850 --> 00:18:41,750
specified that in with post for Kota for

347
00:18:38,000 --> 00:18:46,159
CW T's as well as for JW T's I can send

348
00:18:41,750 --> 00:18:48,139
the key does yes but proof of possession

349
00:18:46,159 --> 00:18:49,610
is different and all those Android

350
00:18:48,139 --> 00:18:52,399
attributes are not in there I don't

351
00:18:49,610 --> 00:18:54,168
think II so proof recession is the

352
00:18:52,399 --> 00:18:58,370
mechanism to demonstrate that you know

353
00:18:54,169 --> 00:19:02,029
the private key but and maybe of course

354
00:18:58,370 --> 00:19:07,100
it's not exactly the hoops that was a

355
00:19:02,029 --> 00:19:11,659
coffee cup yeah sort of Android the

356
00:19:07,100 --> 00:19:13,399
Android based I'm not sure but but the

357
00:19:11,659 --> 00:19:15,919
keys the keys that in general quite

358
00:19:13,399 --> 00:19:20,120
generic but have a look at that because

359
00:19:15,919 --> 00:19:22,309
I because that has been used in other

360
00:19:20,120 --> 00:19:23,600
contexts so it may be useful to yeah I

361
00:19:22,309 --> 00:19:27,320
would expect there's a lot of reuse

362
00:19:23,600 --> 00:19:31,580
possibility yeah so this is Hank again

363
00:19:27,320 --> 00:19:35,620
and I'm very sorry to say this is take

364
00:19:31,580 --> 00:19:38,389
some some pain but there is actually a

365
00:19:35,620 --> 00:19:40,340
defined format for public Europe of a

366
00:19:38,389 --> 00:19:46,219
raw public here representation for DTS

367
00:19:40,340 --> 00:19:49,209
and it is literally defined in I have to

368
00:19:46,220 --> 00:19:52,650
look at my succeeded

369
00:19:49,210 --> 00:19:55,920
yeah exactly it is seven to five Oh

370
00:19:52,650 --> 00:19:58,630
section three it is a must unfortunately

371
00:19:55,920 --> 00:20:00,520
it's a part of a certificate cut out of

372
00:19:58,630 --> 00:20:03,250
there without context and it's awful

373
00:20:00,520 --> 00:20:05,980
it's like the Papa key info part but

374
00:20:03,250 --> 00:20:07,990
that's how the start is and it is not a

375
00:20:05,980 --> 00:20:12,250
pure value so again

376
00:20:07,990 --> 00:20:14,470
oh yeah it's it's two asn.1 items in a

377
00:20:12,250 --> 00:20:17,350
block without context so that is the

378
00:20:14,470 --> 00:20:19,600
standard for values for raw public use

379
00:20:17,350 --> 00:20:22,149
for DTLS so I think for advice we are

380
00:20:19,600 --> 00:20:24,580
pretty much set there and and this is

381
00:20:22,150 --> 00:20:31,210
for being confused or true being okay

382
00:20:24,580 --> 00:20:34,350
good I know it's comment on this putting

383
00:20:31,210 --> 00:20:47,950
an ASM value into a CBO structure is

384
00:20:34,350 --> 00:20:49,780
it's gonna happen I know it's the way

385
00:20:47,950 --> 00:20:52,690
this is the standard I think we have to

386
00:20:49,780 --> 00:20:56,500
go with it and I think this is a must

387
00:20:52,690 --> 00:21:00,040
you do this the whole award hurts yeah

388
00:20:56,500 --> 00:21:02,850
okay wait you're saying we must do this

389
00:21:00,040 --> 00:21:14,110
here in rats I thought you were saying

390
00:21:02,850 --> 00:21:15,459
yes okay think they are I can't keep all

391
00:21:14,110 --> 00:21:16,959
four of them in my head but I'm probably

392
00:21:15,460 --> 00:21:17,890
yes and all four of them but I can't

393
00:21:16,960 --> 00:21:18,850
keep them my head as I can't say for

394
00:21:17,890 --> 00:21:20,170
sure but I have a clarifying question

395
00:21:18,850 --> 00:21:22,719
about the difference between number

396
00:21:20,170 --> 00:21:23,680
three and number four meaning I think I

397
00:21:22,720 --> 00:21:24,790
understand the difference but I don't

398
00:21:23,680 --> 00:21:29,200
know if I understand it if you keep on

399
00:21:24,790 --> 00:21:31,840
that one the fourth one is about what's

400
00:21:29,200 --> 00:21:33,640
running is this one actually about

401
00:21:31,840 --> 00:21:35,199
what's installed regardless of whether

402
00:21:33,640 --> 00:21:36,820
it's running or is this one about what's

403
00:21:35,200 --> 00:21:38,050
running software inventories it's an

404
00:21:36,820 --> 00:21:39,610
inventory of what is installed

405
00:21:38,050 --> 00:21:42,460
regardless if it's running is that the

406
00:21:39,610 --> 00:21:44,740
intent I didn't really pin that down

407
00:21:42,460 --> 00:21:46,300
yeah I'm not sure even it's worth

408
00:21:44,740 --> 00:21:47,830
running the reason I asked is if it's

409
00:21:46,300 --> 00:21:49,090
what's running then there's probably too

410
00:21:47,830 --> 00:21:50,560
much over that between the third and the

411
00:21:49,090 --> 00:21:52,419
fourth that's what's installed it's

412
00:21:50,560 --> 00:21:55,570
nicely disjoint and sounds great

413
00:21:52,420 --> 00:21:57,910
okay all that so let me just do the

414
00:21:55,570 --> 00:22:00,070
clarification so software inventory

415
00:21:57,910 --> 00:22:03,570
could be what's installed this is a

416
00:22:00,070 --> 00:22:07,330
question go back to and

417
00:22:03,570 --> 00:22:11,050
I'm trying I'm now that you ask Dave I'm

418
00:22:07,330 --> 00:22:12,428
like to me integrity is what's installed

419
00:22:11,050 --> 00:22:15,190
it's not necessarily what's running

420
00:22:12,429 --> 00:22:16,450
either okay

421
00:22:15,190 --> 00:22:18,490
I guess it depends on what you're taking

422
00:22:16,450 --> 00:22:19,630
hashes over during runtime or hashes

423
00:22:18,490 --> 00:22:23,730
over during boot time

424
00:22:19,630 --> 00:22:28,990
fair point yes you have to do it

425
00:22:23,730 --> 00:22:30,370
dynamically okay so let me but I can I'm

426
00:22:28,990 --> 00:22:32,230
trying to figure out whether three and

427
00:22:30,370 --> 00:22:33,520
four are actually disjoint things or

428
00:22:32,230 --> 00:22:35,530
whether there's over that between them

429
00:22:33,520 --> 00:22:37,540
if they're disjoint I'm gonna say yes on

430
00:22:35,530 --> 00:22:39,760
both of them if they're not disjoint I

431
00:22:37,540 --> 00:22:41,980
may not say yes I'm both of them what

432
00:22:39,760 --> 00:22:44,770
I'm hearing is we need clarification so

433
00:22:41,980 --> 00:22:49,570
um Ned was in the queue so I'm gonna let

434
00:22:44,770 --> 00:22:51,850
uh yeah my question is more around do we

435
00:22:49,570 --> 00:22:57,220
have the use case context in order to

436
00:22:51,850 --> 00:23:00,850
understand how the the coast would for

437
00:22:57,220 --> 00:23:03,730
example would be used as an it as

438
00:23:00,850 --> 00:23:07,449
something that a tester would would

439
00:23:03,730 --> 00:23:14,080
assert versus something that a vendor

440
00:23:07,450 --> 00:23:16,830
would assert and and how do we and how

441
00:23:14,080 --> 00:23:19,629
does the verifier know that the if the

442
00:23:16,830 --> 00:23:22,809
tester is asserting it how does the

443
00:23:19,630 --> 00:23:25,600
verifier determine that that's something

444
00:23:22,809 --> 00:23:28,720
that's let's look that's legitimate or

445
00:23:25,600 --> 00:23:31,059
expected for it an assert or to be a for

446
00:23:28,720 --> 00:23:37,420
a and a tester to be able to be

447
00:23:31,059 --> 00:23:39,690
authoritative I'm not sure I have an

448
00:23:37,420 --> 00:23:42,190
answer for that

449
00:23:39,690 --> 00:23:45,850
yeah I'm trying to understand that if

450
00:23:42,190 --> 00:23:51,190
your question is clarification grants

451
00:23:45,850 --> 00:23:53,770
for su clarification typically a coast

452
00:23:51,190 --> 00:23:59,670
would structure is something that

453
00:23:53,770 --> 00:24:02,520
describes you know reference values and

454
00:23:59,670 --> 00:24:07,150
so that's something that a vendor

455
00:24:02,520 --> 00:24:08,950
manufacturer would be able to assert if

456
00:24:07,150 --> 00:24:13,390
we're talking about it in the context of

457
00:24:08,950 --> 00:24:16,010
evidence that an a tester would would

458
00:24:13,390 --> 00:24:18,750
create the

459
00:24:16,010 --> 00:24:21,600
you know what's the use case context for

460
00:24:18,750 --> 00:24:30,149
why or how an eye tester would be able

461
00:24:21,600 --> 00:24:31,949
to make make that assertion okay

462
00:24:30,149 --> 00:24:33,299
jump into coupling because I was just

463
00:24:31,950 --> 00:24:39,600
gonna relay what she was she's gonna say

464
00:24:33,299 --> 00:24:40,789
oh is that Kathleen okay so okay hi

465
00:24:39,600 --> 00:24:46,049
Kathleen

466
00:24:40,789 --> 00:24:48,210
hi oh can you hear me yes great so this

467
00:24:46,049 --> 00:24:51,840
originated with me with a review of the

468
00:24:48,210 --> 00:24:55,940
coast wit document and I was discussed

469
00:24:51,840 --> 00:24:58,770
this morning in sockem and essentially

470
00:24:55,940 --> 00:25:01,470
Coast wait is currently defined to just

471
00:24:58,770 --> 00:25:04,529
apply a cosy signature and in reading

472
00:25:01,470 --> 00:25:08,039
the document it seems like having a

473
00:25:04,529 --> 00:25:13,020
software vendor be able to instead do a

474
00:25:08,039 --> 00:25:16,350
cot CWT seem to make more sense and you

475
00:25:13,020 --> 00:25:19,010
might get more adoption and uptake where

476
00:25:16,350 --> 00:25:21,539
you'd have the signature and claims and

477
00:25:19,010 --> 00:25:23,908
something that developers may become

478
00:25:21,539 --> 00:25:27,919
very used to just seeing that a cot is

479
00:25:23,909 --> 00:25:31,140
used as opposed to having to look at the

480
00:25:27,919 --> 00:25:33,330
structure of the signature and apply it

481
00:25:31,140 --> 00:25:36,240
more directly from code which i think

482
00:25:33,330 --> 00:25:40,529
will be more of a one-off than using an

483
00:25:36,240 --> 00:25:42,809
e or cot so you would get additional

484
00:25:40,529 --> 00:25:46,980
claims in addition to the the signature

485
00:25:42,809 --> 00:25:48,539
and it would be from the vendor so you

486
00:25:46,980 --> 00:25:52,230
know it would be that original signature

487
00:25:48,539 --> 00:25:55,470
to answer Ned's question and you know

488
00:25:52,230 --> 00:25:59,429
then you'd be able to do other things

489
00:25:55,470 --> 00:26:01,049
that Annie could do okay that's that's a

490
00:25:59,429 --> 00:26:06,870
point well noted so I'm going to do a

491
00:26:01,049 --> 00:26:09,690
time check or 22 minutes in do you want

492
00:26:06,870 --> 00:26:13,379
answers to this do you want to take them

493
00:26:09,690 --> 00:26:15,630
to the list I think maybe maybe hum on

494
00:26:13,380 --> 00:26:17,250
the the four different things okay maybe

495
00:26:15,630 --> 00:26:20,340
we should do them one at a time yeah

496
00:26:17,250 --> 00:26:26,299
yeah okay how many different pictures

497
00:26:20,340 --> 00:26:28,490
now some yeah that way we can get the

498
00:26:26,299 --> 00:26:32,160
Midianites

499
00:26:28,490 --> 00:26:34,950
all right so I guess they're nice

500
00:26:32,160 --> 00:26:38,670
comments before we hung well in the

501
00:26:34,950 --> 00:26:41,370
interest of time just make it quick yeah

502
00:26:38,670 --> 00:26:50,310
yeah of course I can be great no come on

503
00:26:41,370 --> 00:26:52,530
okay so Coast wit per design can express

504
00:26:50,310 --> 00:26:55,610
runtime integrity because it has the

505
00:26:52,530 --> 00:26:58,139
process and resource resource collection

506
00:26:55,610 --> 00:27:00,360
inter can do this already with the

507
00:26:58,140 --> 00:27:03,240
excess Jack's every process can be

508
00:27:00,360 --> 00:27:05,610
hashed and be represented exactly in

509
00:27:03,240 --> 00:27:07,080
switch today so but this is a this is

510
00:27:05,610 --> 00:27:10,560
not the general solution that every

511
00:27:07,080 --> 00:27:13,919
platform can feel these items but there

512
00:27:10,560 --> 00:27:16,950
are some platforms then can use cos wait

513
00:27:13,920 --> 00:27:19,170
for runtime in territory also yes net

514
00:27:16,950 --> 00:27:23,250
sweat question is kind of valid when

515
00:27:19,170 --> 00:27:26,010
does a tester create a swig to create

516
00:27:23,250 --> 00:27:28,440
evidence about its software composition

517
00:27:26,010 --> 00:27:30,480
there might be cases for us very very

518
00:27:28,440 --> 00:27:31,710
secure software inventory I think the

519
00:27:30,480 --> 00:27:33,960
refuse case is a little bit in that

520
00:27:31,710 --> 00:27:35,700
domain when we have to find that out so

521
00:27:33,960 --> 00:27:39,000
I just wanted to highlight this is true

522
00:27:35,700 --> 00:27:41,700
also I Pam to Kathleen's comment I made

523
00:27:39,000 --> 00:27:44,280
a small question in sue today because

524
00:27:41,700 --> 00:27:46,020
suit also has a data structure that is

525
00:27:44,280 --> 00:27:48,270
very similar to coast with its I

526
00:27:46,020 --> 00:27:52,080
actually identical structure to coast

527
00:27:48,270 --> 00:27:54,120
with and they also do not use CWT and I

528
00:27:52,080 --> 00:27:56,699
was asking Brenton the the primary

529
00:27:54,120 --> 00:27:59,219
author of the manifest if it is viable

530
00:27:56,700 --> 00:28:01,950
to use it as CWT and his answer was no

531
00:27:59,220 --> 00:28:03,510
there will be not in adoption thing but

532
00:28:01,950 --> 00:28:05,310
and again there might be a different

533
00:28:03,510 --> 00:28:07,110
voices Hannes was like more on the

534
00:28:05,310 --> 00:28:09,000
neutral part and would like to discuss

535
00:28:07,110 --> 00:28:10,830
this so this is a very important point

536
00:28:09,000 --> 00:28:12,630
to discuss and not to hum here today

537
00:28:10,830 --> 00:28:15,929
they see everything that's my last

538
00:28:12,630 --> 00:28:19,890
comment yeah so so I think Gary I had

539
00:28:15,930 --> 00:28:21,600
cut off the line sorry so that the

540
00:28:19,890 --> 00:28:24,680
things that we need to hell about is

541
00:28:21,600 --> 00:28:28,409
whether the group believes we should be

542
00:28:24,680 --> 00:28:34,260
working on these four different items

543
00:28:28,410 --> 00:28:36,630
okay and so in the short term well in

544
00:28:34,260 --> 00:28:40,710
and then we decide whether it's either a

545
00:28:36,630 --> 00:28:42,720
different document but okay yes okay so

546
00:28:40,710 --> 00:28:44,700
let's just ask the four questions in

547
00:28:42,720 --> 00:28:47,250
general and then we can take into the

548
00:28:44,700 --> 00:28:51,840
list of how we go about them okay okay

549
00:28:47,250 --> 00:28:56,220
so the first question is with respect to

550
00:28:51,840 --> 00:28:57,629
providing attestation result so will you

551
00:28:56,220 --> 00:29:01,549
do the back row man and I'll do the

552
00:28:57,630 --> 00:29:01,549
front door you want to do side by side

553
00:29:07,039 --> 00:29:12,750
that's the group believe we should be

554
00:29:09,330 --> 00:29:30,059
working in defining claims for

555
00:29:12,750 --> 00:29:35,700
attestation results okay yes you are in

556
00:29:30,059 --> 00:29:55,168
support no you don't well how come if

557
00:29:35,700 --> 00:29:57,990
you support having rats work on this if

558
00:29:55,169 --> 00:30:03,899
you do not hum if you do not want to

559
00:29:57,990 --> 00:30:10,200
we're going to please some okay so you

560
00:30:03,899 --> 00:30:12,299
know that's a separate question no we

561
00:30:10,200 --> 00:30:18,330
are out of time we are six minutes out

562
00:30:12,299 --> 00:30:22,080
of time okay so for the next one a

563
00:30:18,330 --> 00:30:24,230
public public key claim including things

564
00:30:22,080 --> 00:30:30,960
like free food possession and even

565
00:30:24,230 --> 00:30:40,470
request by pkcs tab okay so as claims in

566
00:30:30,960 --> 00:30:42,840
eat as a claim I haven't seen it so what

567
00:30:40,470 --> 00:30:44,340
I had heard is there are some instances

568
00:30:42,840 --> 00:30:48,570
but there are some gaps and

569
00:30:44,340 --> 00:30:50,760
implementation so there if you go to the

570
00:30:48,570 --> 00:30:53,428
if you go to the Ayana registry and look

571
00:30:50,760 --> 00:30:54,300
for a claim in CWT that is a public key

572
00:30:53,429 --> 00:30:56,010
or a pkc

573
00:30:54,300 --> 00:31:02,220
stand or preferred position you will not

574
00:30:56,010 --> 00:31:04,980
find it okay so can can we just can we

575
00:31:02,220 --> 00:31:06,780
just hum if the working group believes

576
00:31:04,980 --> 00:31:13,500
that this is something that should be

577
00:31:06,780 --> 00:31:16,350
defined whether it's been defined so

578
00:31:13,500 --> 00:31:19,260
public he related but shall we put

579
00:31:16,350 --> 00:31:21,000
public he related things proof of

580
00:31:19,260 --> 00:31:31,860
possession of a public key is that what

581
00:31:21,000 --> 00:31:36,050
you mean Gary's been waiting patiently

582
00:31:31,860 --> 00:31:40,379
but make it quick this is actually not

583
00:31:36,050 --> 00:31:42,960
just y'all proof of possession or even

584
00:31:40,380 --> 00:31:44,730
attesting necessary your public key Fido

585
00:31:42,960 --> 00:31:47,730
has a concept something something called

586
00:31:44,730 --> 00:31:50,850
credential ID and I think attesting to a

587
00:31:47,730 --> 00:31:53,940
credential ID which is a handle a unique

588
00:31:50,850 --> 00:31:56,100
handle ideally it should be for a for a

589
00:31:53,940 --> 00:31:58,290
key pair is actually it would actually

590
00:31:56,100 --> 00:32:01,379
be included in this so I think anything

591
00:31:58,290 --> 00:32:03,240
anything related to attestation related

592
00:32:01,380 --> 00:32:05,040
to a key pair would be included in this

593
00:32:03,240 --> 00:32:07,050
work I don't think that we've like an

594
00:32:05,040 --> 00:32:10,710
example about a credential ID any such

595
00:32:07,050 --> 00:32:17,280
thing exists with a CWT format today so

596
00:32:10,710 --> 00:32:19,650
I don't believe it like HSN so are you

597
00:32:17,280 --> 00:32:22,470
generalizing it or just public/private

598
00:32:19,650 --> 00:32:24,750
key pair I thought I think we should

599
00:32:22,470 --> 00:32:29,430
refine this proposal and hum on at

600
00:32:24,750 --> 00:32:32,190
another time so we are in in AWS with

601
00:32:29,430 --> 00:32:34,290
the JWT and also the CWD subsequently

602
00:32:32,190 --> 00:32:37,350
which was spat on most came out of the

603
00:32:34,290 --> 00:32:40,560
ace working group there were use cases

604
00:32:37,350 --> 00:32:44,310
that required you to imp dude do a proof

605
00:32:40,560 --> 00:32:47,610
possession case okay whether token is

606
00:32:44,310 --> 00:32:51,210
bound to a key that's why we define

607
00:32:47,610 --> 00:32:53,459
claims that reference a public key or

608
00:32:51,210 --> 00:32:56,130
different variants key IDs blah blah

609
00:32:53,460 --> 00:32:58,770
blah blah hashes or public keys etc the

610
00:32:56,130 --> 00:33:01,050
actual proof of possession requires the

611
00:32:58,770 --> 00:33:02,910
person holding that dokkan to

612
00:33:01,050 --> 00:33:05,280
demonstrate that it actually ignores the

613
00:33:02,910 --> 00:33:07,560
private key that is not in a token

614
00:33:05,280 --> 00:33:08,039
itself quite naturally it comes in a

615
00:33:07,560 --> 00:33:09,570
protocol

616
00:33:08,039 --> 00:33:13,350
and we have also defined different ways

617
00:33:09,570 --> 00:33:15,359
to do that there's a big body of work on

618
00:33:13,350 --> 00:33:17,998
that I would suggest that you look at

619
00:33:15,359 --> 00:33:19,259
that before you prematurely standardize

620
00:33:17,999 --> 00:33:21,479
something else because there are

621
00:33:19,259 --> 00:33:21,899
implementations and deployments of this

622
00:33:21,479 --> 00:33:24,359
already

623
00:33:21,899 --> 00:33:27,209
okay so I'm going to call time on this

624
00:33:24,359 --> 00:33:29,820
one and say suggest to Lawrence that you

625
00:33:27,210 --> 00:33:33,659
take it up on the mail to clarify what

626
00:33:29,820 --> 00:33:37,080
it is that you want us to ask the

627
00:33:33,659 --> 00:33:39,509
question on so nedda's on the line

628
00:33:37,080 --> 00:33:41,999
sorry that I'm gonna cut you cuz we are

629
00:33:39,509 --> 00:33:46,409
10 minutes over now and we still have to

630
00:33:41,999 --> 00:33:50,340
get to the other two okay so the next

631
00:33:46,409 --> 00:33:51,029
one was software software in the

632
00:33:50,340 --> 00:33:55,049
inventory

633
00:33:51,029 --> 00:33:57,840
probably coast would well do you want it

634
00:33:55,049 --> 00:33:59,940
to be explicitly Coast Whitford or in

635
00:33:57,840 --> 00:34:02,999
why don't we say software inventory

636
00:33:59,940 --> 00:34:09,899
claim and then work the refinement later

637
00:34:02,999 --> 00:34:12,149
yes oh you need to speak okay so let's

638
00:34:09,899 --> 00:34:15,328
come on this one okay so how do you want

639
00:34:12,149 --> 00:34:17,219
us to restate the question does the

640
00:34:15,329 --> 00:34:20,490
working group want to work on defining

641
00:34:17,219 --> 00:34:25,168
so yeah what claims of software

642
00:34:20,489 --> 00:34:29,848
inventory want to work on so if you want

643
00:34:25,168 --> 00:34:38,578
the working group did you get that

644
00:34:29,849 --> 00:34:42,809
mr. note-taker okay okay

645
00:34:38,579 --> 00:34:46,290
does the group want hum if you want to

646
00:34:42,809 --> 00:34:48,030
work on what we just said I'm just

647
00:34:46,290 --> 00:34:59,308
trying to be fast okay

648
00:34:48,030 --> 00:35:03,910
please hum okay hum if you do not okay

649
00:34:59,309 --> 00:35:09,839
so that's pretty clear okay so

650
00:35:03,910 --> 00:35:18,069
notetaker three homes down the jabra in+

651
00:35:09,839 --> 00:35:19,720
we're not going to don't care okay okay

652
00:35:18,069 --> 00:35:25,720
real quick don't care

653
00:35:19,720 --> 00:35:28,839
hum of you don't care yeah it's not

654
00:35:25,720 --> 00:35:32,279
significant I'm look I'm listening okay

655
00:35:28,839 --> 00:35:35,020
let's just keep moving all right so okay

656
00:35:32,280 --> 00:35:36,430
if I could really ask the room we're

657
00:35:35,020 --> 00:35:38,049
trying to get through a process there's

658
00:35:36,430 --> 00:35:40,118
a lot of cross-chatter if you want to

659
00:35:38,049 --> 00:35:42,190
talk please come to the mic when the

660
00:35:40,119 --> 00:35:45,010
chair wants to do a consensus um please

661
00:35:42,190 --> 00:35:46,299
don't heckle from the from the chairs if

662
00:35:45,010 --> 00:35:47,680
you want to say something come to the

663
00:35:46,299 --> 00:35:48,670
microphone way to be kind of recognize

664
00:35:47,680 --> 00:35:52,210
something we're really trying to get

665
00:35:48,670 --> 00:35:57,369
through this thank you okay

666
00:35:52,210 --> 00:35:59,680
so for this last one does the work

667
00:35:57,369 --> 00:36:02,460
that's the working group want to work on

668
00:35:59,680 --> 00:36:12,669
defining measurement integrity claims

669
00:36:02,460 --> 00:36:17,289
please hum if you want to okay please

670
00:36:12,670 --> 00:36:22,900
come if you do not please some of you

671
00:36:17,289 --> 00:36:24,970
don't care okay so you have some note if

672
00:36:22,900 --> 00:36:26,980
you believe it's important take it up to

673
00:36:24,970 --> 00:36:33,098
the mail and maybe you can get

674
00:36:26,980 --> 00:36:39,549
clarifications three humps in favor

675
00:36:33,099 --> 00:36:42,400
that's still not a majority yeah well no

676
00:36:39,549 --> 00:36:45,759
I'm just saying it's not enough for us

677
00:36:42,400 --> 00:36:48,039
to move forward so I'm directing

678
00:36:45,760 --> 00:36:53,500
Lawrence who was proposing that he take

679
00:36:48,039 --> 00:36:58,779
it up to the mail list Jaime for in

680
00:36:53,500 --> 00:37:02,020
favor okay I think we need to take that

681
00:36:58,779 --> 00:37:06,010
one to the mailing list so okay yep okay

682
00:37:02,020 --> 00:37:08,500
all right so uh your now so that include

683
00:37:06,010 --> 00:37:11,859
that concludes the first part now on to

684
00:37:08,500 --> 00:37:13,510
pull requests and open issues so I've

685
00:37:11,859 --> 00:37:16,450
got three or four that I think are

686
00:37:13,510 --> 00:37:17,620
relatively easy that I just want to get

687
00:37:16,450 --> 00:37:19,569
a cross-check

688
00:37:17,620 --> 00:37:21,069
with everybody and gonna make your

689
00:37:19,570 --> 00:37:24,160
wherever then I've got some more

690
00:37:21,070 --> 00:37:25,930
interesting ones and I don't think we'll

691
00:37:24,160 --> 00:37:28,149
we may not get through all of them and

692
00:37:25,930 --> 00:37:30,490
there are definitely other claims in the

693
00:37:28,150 --> 00:37:35,020
works that are not being shown here

694
00:37:30,490 --> 00:37:35,410
today okay so the first one is only om

695
00:37:35,020 --> 00:37:41,020
ID

696
00:37:35,410 --> 00:37:43,720
this is to identify the OEM of typically

697
00:37:41,020 --> 00:37:47,530
the hardware it could be a chip it could

698
00:37:43,720 --> 00:37:50,709
be the device it could be a module or a

699
00:37:47,530 --> 00:37:52,750
sub module or any kind of thing that's

700
00:37:50,710 --> 00:37:55,960
manufactured and it's typically hardware

701
00:37:52,750 --> 00:37:58,810
so the the previous PR was a pretty

702
00:37:55,960 --> 00:38:01,590
previous description of the claim was

703
00:37:58,810 --> 00:38:04,390
pretty pretty light so now I've added

704
00:38:01,590 --> 00:38:08,130
all the correct references and all that

705
00:38:04,390 --> 00:38:10,720
so this claim is based on the I Triple E

706
00:38:08,130 --> 00:38:14,890
assigned company names that are used

707
00:38:10,720 --> 00:38:16,810
either for MAC addresses or just company

708
00:38:14,890 --> 00:38:19,930
IDs and they're all from the same space

709
00:38:16,810 --> 00:38:22,779
they don't they don't conflict that's

710
00:38:19,930 --> 00:38:25,390
just the way I Triple E runs it so the

711
00:38:22,780 --> 00:38:27,070
proposal is basically I Triple E IDs

712
00:38:25,390 --> 00:38:29,710
these these just to be known as oh you

713
00:38:27,070 --> 00:38:34,930
eyes now they're they're called ma l ma

714
00:38:29,710 --> 00:38:40,840
- M and mas yeah so they've been sizes

715
00:38:34,930 --> 00:38:42,819
and all that so the PR also has because

716
00:38:40,840 --> 00:38:49,390
you typically do these things in textual

717
00:38:42,820 --> 00:38:52,690
form like I can show down there like so

718
00:38:49,390 --> 00:38:56,770
the Jason is in textual form in

719
00:38:52,690 --> 00:38:59,410
hexadecimal the in C boy they're

720
00:38:56,770 --> 00:39:04,690
included as a byte string for

721
00:38:59,410 --> 00:39:10,770
compactness so was this an issue that

722
00:39:04,690 --> 00:39:15,490
was filed I filed I was an issue or not

723
00:39:10,770 --> 00:39:17,259
the the text that was there before was

724
00:39:15,490 --> 00:39:19,089
incomplete because it lacked references

725
00:39:17,260 --> 00:39:21,190
and coolest and polish didn't had some

726
00:39:19,090 --> 00:39:22,840
2ds now it no there's a PR that does

727
00:39:21,190 --> 00:39:24,370
have these things in it I don't think

728
00:39:22,840 --> 00:39:28,060
there were there were any comments on

729
00:39:24,370 --> 00:39:30,130
this one okay it's just a from a process

730
00:39:28,060 --> 00:39:31,259
perspective we're trying to track all of

731
00:39:30,130 --> 00:39:34,050
the issues so

732
00:39:31,260 --> 00:39:35,940
the group approves that then I one of

733
00:39:34,050 --> 00:39:38,580
the chairs has to close it but if there

734
00:39:35,940 --> 00:39:40,380
isn't one yeah I mean most of the issues

735
00:39:38,580 --> 00:39:45,240
are filed by me just trying to keep

736
00:39:40,380 --> 00:39:47,730
track of what's going on very very quick

737
00:39:45,240 --> 00:39:51,240
question for Hank about encoding and I

738
00:39:47,730 --> 00:39:55,590
get 0 for compactness fine I do not get

739
00:39:51,240 --> 00:39:59,640
some colons or dashes and hex values in

740
00:39:55,590 --> 00:40:02,670
Jason either may get base64 or base64

741
00:39:59,640 --> 00:40:04,379
URL and then you're fine decision for

742
00:40:02,670 --> 00:40:09,300
this is painful again I'm not making

743
00:40:04,380 --> 00:40:12,780
that decision I'm gonna take that to the

744
00:40:09,300 --> 00:40:14,850
I'm gonna also at the point of Jason is

745
00:40:12,780 --> 00:40:17,250
you can look at it and if you basic ste

746
00:40:14,850 --> 00:40:19,560
for something you can't it's no longer

747
00:40:17,250 --> 00:40:21,660
look you can't look at it anymore it's

748
00:40:19,560 --> 00:40:23,340
really it's really common you can tell

749
00:40:21,660 --> 00:40:26,368
what it is it's really common if you go

750
00:40:23,340 --> 00:40:31,980
into your into you use it use a UI on a

751
00:40:26,369 --> 00:40:39,270
device to see MAC addresses in this in

752
00:40:31,980 --> 00:40:41,790
this EXA decimal form yeah we can take

753
00:40:39,270 --> 00:40:44,700
that to the list since there wasn't an

754
00:40:41,790 --> 00:40:47,040
issue file but okay

755
00:40:44,700 --> 00:40:49,379
but generally I guess everybody's okay

756
00:40:47,040 --> 00:40:57,930
with with the the I Triple E assigned

757
00:40:49,380 --> 00:41:07,040
IDs no no comments about that okay okay

758
00:40:57,930 --> 00:41:10,410
nonce the the previous draft didn't

759
00:41:07,040 --> 00:41:12,810
really do the nonce claim very well it

760
00:41:10,410 --> 00:41:18,810
was it was making reference to JT I and

761
00:41:12,810 --> 00:41:22,170
CT I my understanding is the JT I and CT

762
00:41:18,810 --> 00:41:24,359
I are our token identifiers not nonces I

763
00:41:22,170 --> 00:41:27,869
mean they they look a little bit like

764
00:41:24,359 --> 00:41:30,690
nonces and the text says that they are

765
00:41:27,869 --> 00:41:31,800
to prevent replay protection but my

766
00:41:30,690 --> 00:41:38,070
understanding is that they can be

767
00:41:31,800 --> 00:41:43,140
generated locally well what this beer

768
00:41:38,070 --> 00:41:44,610
does is says that the relying party the

769
00:41:43,140 --> 00:41:47,250
ultimate consumer of the

770
00:41:44,610 --> 00:41:50,930
touken should generate a nonce and then

771
00:41:47,250 --> 00:41:54,750
that should go into a claim called nonce

772
00:41:50,930 --> 00:41:57,899
that claim already exists in a JWT the

773
00:41:54,750 --> 00:42:01,440
nonce claim does not exist for CWT so

774
00:41:57,900 --> 00:42:08,730
the the the document proposes adding it

775
00:42:01,440 --> 00:42:14,700
to the IANA registry comments we need

776
00:42:08,730 --> 00:42:19,940
any objections to that okay so this one

777
00:42:14,700 --> 00:42:25,970
is more Hardware oriented the previous

778
00:42:19,940 --> 00:42:31,200
PR had four independent billions for

779
00:42:25,970 --> 00:42:32,669
whether well actually yeah it's ignore

780
00:42:31,200 --> 00:42:34,259
the first one secure boot enable because

781
00:42:32,670 --> 00:42:37,110
that's that's that hasn't been changed

782
00:42:34,260 --> 00:42:39,720
but the next four debug disabled debug

783
00:42:37,110 --> 00:42:41,610
disabled since boot permanent disabled

784
00:42:39,720 --> 00:42:43,200
and full permanent disabled it had four

785
00:42:41,610 --> 00:42:44,990
independent boolean x' for that so you

786
00:42:43,200 --> 00:42:50,339
could come up with 16 different states

787
00:42:44,990 --> 00:42:54,479
the now the it's just an enumerated type

788
00:42:50,340 --> 00:42:57,920
and you you choose whether it's not

789
00:42:54,480 --> 00:43:00,180
disabled disabled and and if you claim

790
00:42:57,920 --> 00:43:02,420
you know full permanent disabled that

791
00:43:00,180 --> 00:43:06,919
means all of the the things previously

792
00:43:02,420 --> 00:43:06,920
that it that it is disabled right now

793
00:43:07,310 --> 00:43:14,580
this is really more focused on hardware

794
00:43:10,910 --> 00:43:17,430
debug facilities not like running gdb

795
00:43:14,580 --> 00:43:20,130
and you're you know in a process under

796
00:43:17,430 --> 00:43:22,290
your own username so like like I arm

797
00:43:20,130 --> 00:43:23,490
core site or JTAG or things like that

798
00:43:22,290 --> 00:43:26,759
that's true that's what this is really

799
00:43:23,490 --> 00:43:28,830
aimed at and typically a lot of times

800
00:43:26,760 --> 00:43:34,440
the enabling disabling is going to be by

801
00:43:28,830 --> 00:43:36,720
fuses so this one I'm actually

802
00:43:34,440 --> 00:43:40,310
interested in in like review comments

803
00:43:36,720 --> 00:43:43,890
from hardware manufacturers like Intel

804
00:43:40,310 --> 00:43:49,270
arm and Qualcomm of whether this can

805
00:43:43,890 --> 00:43:50,620
work for them and then the

806
00:43:49,270 --> 00:43:52,780
here's the train come up with something

807
00:43:50,620 --> 00:43:55,690
that is relatively independent of the

808
00:43:52,780 --> 00:44:00,190
hardware so like a relying party can can

809
00:43:55,690 --> 00:44:03,010
know what it is rather than every

810
00:44:00,190 --> 00:44:05,740
hardware vendor describing boots state

811
00:44:03,010 --> 00:44:09,520
by some register that's proprietary to

812
00:44:05,740 --> 00:44:13,209
them hi this is Hank I really tried not

813
00:44:09,520 --> 00:44:16,000
to come up to here but this is not hot

814
00:44:13,210 --> 00:44:19,240
fair independent this is platform

815
00:44:16,000 --> 00:44:21,880
specific some platforms will never ever

816
00:44:19,240 --> 00:44:23,620
be able to map to that and somewhere so

817
00:44:21,880 --> 00:44:27,070
I think it is however specific and that

818
00:44:23,620 --> 00:44:29,770
I think there should be a indication

819
00:44:27,070 --> 00:44:33,600
what platform this is for this I mean

820
00:44:29,770 --> 00:44:37,570
the intent was to try to make it not

821
00:44:33,600 --> 00:44:39,880
hard not platform specific and I would

822
00:44:37,570 --> 00:44:43,000
be interested in how we could make it

823
00:44:39,880 --> 00:44:45,730
more okay general okay first of all I

824
00:44:43,000 --> 00:44:48,250
would this encourage the deprecated use

825
00:44:45,730 --> 00:44:53,680
the use of the deprecated term six you

826
00:44:48,250 --> 00:44:55,750
would then I would make it the scope of

827
00:44:53,680 --> 00:44:57,609
the secure boot sometimes as you

828
00:44:55,750 --> 00:45:11,470
personally told me sometimes you don't

829
00:44:57,610 --> 00:45:13,060
even have a if he or if he yeah so let's

830
00:45:11,470 --> 00:45:15,879
I mean is this okay or not

831
00:45:13,060 --> 00:45:18,430
what does debug mean it means whether

832
00:45:15,880 --> 00:45:21,820
some debug facilities is turned on or

833
00:45:18,430 --> 00:45:25,480
not okay some has to be defined platform

834
00:45:21,820 --> 00:45:28,630
specific I guess you're saying it still

835
00:45:25,480 --> 00:45:30,760
needs to be platform specific yeah can

836
00:45:28,630 --> 00:45:32,530
mean so many things that I would not

837
00:45:30,760 --> 00:45:34,620
know how to use this if I would be an

838
00:45:32,530 --> 00:45:37,600
implementer I know three platforms

839
00:45:34,620 --> 00:45:40,569
personally and two of them are debug and

840
00:45:37,600 --> 00:45:42,430
I have no idea how to use this and this

841
00:45:40,570 --> 00:45:45,070
is not this is nothing being keeping

842
00:45:42,430 --> 00:45:48,819
negative criticisms I I just don't how

843
00:45:45,070 --> 00:45:52,570
have you read the text I I did not the

844
00:45:48,820 --> 00:45:54,160
irritates of the new one after yeah okay

845
00:45:52,570 --> 00:45:56,230
so he's read the works are you saying

846
00:45:54,160 --> 00:45:58,029
you're you Thursday enough context in

847
00:45:56,230 --> 00:46:01,360
there's there's more context in the in

848
00:45:58,030 --> 00:46:03,300
the yeah so Dave Ned Ned was on sir its

849
00:46:01,360 --> 00:46:06,580
first yes

850
00:46:03,300 --> 00:46:08,800
two questions one is is the secure food

851
00:46:06,580 --> 00:46:10,750
enabled still defined you and that was

852
00:46:08,800 --> 00:46:14,890
moved out of the structure and the

853
00:46:10,750 --> 00:46:18,120
second observation is that that hardware

854
00:46:14,890 --> 00:46:21,160
vendors do things differently every

855
00:46:18,120 --> 00:46:26,830
model potentially is different and it's

856
00:46:21,160 --> 00:46:29,379
it's necessary that those each model and

857
00:46:26,830 --> 00:46:31,330
vendor have some way of specifying in

858
00:46:29,380 --> 00:46:32,950
detail what those differences are so we

859
00:46:31,330 --> 00:46:37,720
didn't need some way to support vendor

860
00:46:32,950 --> 00:46:39,580
specific claims that doesn't mean that

861
00:46:37,720 --> 00:46:43,740
there couldn't be some non vendor

862
00:46:39,580 --> 00:46:47,529
specific claims that everybody agrees to

863
00:46:43,740 --> 00:46:53,049
but it's gonna depend on use case as to

864
00:46:47,530 --> 00:46:54,610
how how useful they are yes so vendors

865
00:46:53,050 --> 00:46:56,860
can always have preferred proprietary

866
00:46:54,610 --> 00:47:03,000
claims there's no prohibition against

867
00:46:56,860 --> 00:47:05,380
that take Taylor I like the bottom half

868
00:47:03,000 --> 00:47:08,800
although I like it better if you change

869
00:47:05,380 --> 00:47:11,440
one word if you changed the word boot to

870
00:47:08,800 --> 00:47:13,060
the word start it is applicable to more

871
00:47:11,440 --> 00:47:15,370
of my scenarios and the bottom partly

872
00:47:13,060 --> 00:47:17,290
disabled since boot two if that is

873
00:47:15,370 --> 00:47:19,720
disabled since start - it's applicable

874
00:47:17,290 --> 00:47:22,210
to more scenarios and a particular area

875
00:47:19,720 --> 00:47:23,560
I'm thinking of is STX unclose we're on

876
00:47:22,210 --> 00:47:25,450
the same processor you can have someone

877
00:47:23,560 --> 00:47:26,860
clays or debug and some that are not and

878
00:47:25,450 --> 00:47:29,200
you have them happen at boots they both

879
00:47:26,860 --> 00:47:31,030
start happen at UNK they start and so if

880
00:47:29,200 --> 00:47:33,279
you have that change from boot to start

881
00:47:31,030 --> 00:47:38,590
that means I can use this thank you and

882
00:47:33,280 --> 00:47:44,280
good so what would this apply to the

883
00:47:38,590 --> 00:47:51,520
different platforms in your view okay

884
00:47:44,280 --> 00:47:54,270
okay Jerry your ammonium Qualcomm so

885
00:47:51,520 --> 00:47:56,890
since you specifically requested

886
00:47:54,270 --> 00:47:58,450
Qualcomm feedback on this and one thing

887
00:47:56,890 --> 00:48:00,700
that's bothered me since we first

888
00:47:58,450 --> 00:48:03,640
submitted this a year ago was we never

889
00:48:00,700 --> 00:48:06,790
had a good reflection of our own a modes

890
00:48:03,640 --> 00:48:08,250
in the in this enumeration so our may

891
00:48:06,790 --> 00:48:11,950
being in term of I returned material

892
00:48:08,250 --> 00:48:16,690
authorization so to be specifically

893
00:48:11,950 --> 00:48:18,879
Qualcomm what it when an RMA debug

894
00:48:16,690 --> 00:48:21,069
that is enabled by Qualcomm that is

895
00:48:18,880 --> 00:48:24,670
different from when an RMA debug is

896
00:48:21,069 --> 00:48:27,730
enabled by an OEM and both of them have

897
00:48:24,670 --> 00:48:32,109
their own specific considerations we may

898
00:48:27,730 --> 00:48:35,020
not have so as far as uh as far as what

899
00:48:32,109 --> 00:48:36,609
data that the OEM may not have may main

900
00:48:35,020 --> 00:48:38,160
provision that we would not want to see

901
00:48:36,609 --> 00:48:41,558
and vice-versa

902
00:48:38,160 --> 00:48:43,930
so I'm wondering how best to handle that

903
00:48:41,559 --> 00:48:45,640
I don't think the states are in accurate

904
00:48:43,930 --> 00:48:47,649
I think the states are fine but I don't

905
00:48:45,640 --> 00:48:49,480
think we have that we don't have that

906
00:48:47,650 --> 00:48:52,450
we're missing that granularity between

907
00:48:49,480 --> 00:48:54,339
the SSE manufacturer and the OEM I'm

908
00:48:52,450 --> 00:48:56,439
wondering how we can take care of it in

909
00:48:54,339 --> 00:48:58,930
this I mean can we just put a label in

910
00:48:56,440 --> 00:49:01,750
there into that clay matrix saying that

911
00:48:58,930 --> 00:49:03,549
saying that these debug states are what

912
00:49:01,750 --> 00:49:06,520
the OEM is enabled these debug states

913
00:49:03,549 --> 00:49:08,849
and what yes IC manufacturing okay are

914
00:49:06,520 --> 00:49:12,190
you asking for an addition Gary in there

915
00:49:08,849 --> 00:49:14,140
okay yeah so in the addition yeah so

916
00:49:12,190 --> 00:49:23,650
you're okay with this with potential

917
00:49:14,140 --> 00:49:31,029
additions can we not do that now just

918
00:49:23,650 --> 00:49:33,130
yeah Thunder vs device maker so having

919
00:49:31,029 --> 00:49:36,250
work on debug systems at one point in my

920
00:49:33,130 --> 00:49:41,740
life at ti the actual scan chain debug

921
00:49:36,250 --> 00:49:44,410
systems call extension yeah yeah isn't

922
00:49:41,740 --> 00:49:46,479
in in a bunch of the TI parts you would

923
00:49:44,410 --> 00:49:48,430
never know like you can never actually

924
00:49:46,480 --> 00:49:52,510
state that and I'm wondering if an

925
00:49:48,430 --> 00:49:55,720
unknown is actually something you want

926
00:49:52,510 --> 00:49:58,089
to say because at the level of which I

927
00:49:55,720 --> 00:50:00,879
used to work on on those systems I could

928
00:49:58,089 --> 00:50:03,038
actually toggle the bit that told

929
00:50:00,880 --> 00:50:06,069
anything above the actual silicon from

930
00:50:03,039 --> 00:50:07,660
knowing yeah okay and scan chains

931
00:50:06,069 --> 00:50:11,369
another yeah that's an interesting one

932
00:50:07,660 --> 00:50:11,368
yeah thank you

933
00:50:12,070 --> 00:50:17,170
yeah I agree with Chris three valued

934
00:50:15,280 --> 00:50:20,320
boolean's are super valuable for this

935
00:50:17,170 --> 00:50:21,730
kind of thing doing unknown values is

936
00:50:20,320 --> 00:50:23,860
really important especially when you're

937
00:50:21,730 --> 00:50:27,760
doing any kind of large-scale analysis

938
00:50:23,860 --> 00:50:30,280
on like large amounts of this debug data

939
00:50:27,760 --> 00:50:31,870
any kind of unknown value is going to

940
00:50:30,280 --> 00:50:34,630
greatly enhance your ability to get

941
00:50:31,870 --> 00:50:36,960
meaningful information out of it so I

942
00:50:34,630 --> 00:50:39,850
think that would be important thank you

943
00:50:36,960 --> 00:50:43,330
okay so this one I'm gonna take the

944
00:50:39,850 --> 00:50:47,049
feedback try a rev and take it to the

945
00:50:43,330 --> 00:50:50,290
list you can make some of the additions

946
00:50:47,050 --> 00:51:01,450
it sounded like yeah I had another slide

947
00:50:50,290 --> 00:51:03,640
here all right let's keep going all

948
00:51:01,450 --> 00:51:06,700
right so this is the the interesting one

949
00:51:03,640 --> 00:51:09,970
I think generate a lot of discussion

950
00:51:06,700 --> 00:51:11,680
list I'm hoping to and it's probably one

951
00:51:09,970 --> 00:51:16,180
of the areas I struggled with the most

952
00:51:11,680 --> 00:51:18,819
and the design here so I'm taking as an

953
00:51:16,180 --> 00:51:21,990
example here a mobile phone that has a

954
00:51:18,820 --> 00:51:25,420
bunch of subsystems so you have the te

955
00:51:21,990 --> 00:51:28,060
and the tester is in the TE and it has a

956
00:51:25,420 --> 00:51:30,970
signing key then you have all these

957
00:51:28,060 --> 00:51:33,190
subsystems that are truly independent

958
00:51:30,970 --> 00:51:36,669
subsystems they boot independently they

959
00:51:33,190 --> 00:51:39,240
have isolation from each other so you

960
00:51:36,670 --> 00:51:45,070
really can think of them as separate

961
00:51:39,240 --> 00:51:49,600
subsystems so the idea here is that

962
00:51:45,070 --> 00:51:52,390
these subsystems can make claims give

963
00:51:49,600 --> 00:51:56,440
them to the attest ER and the adjuster

964
00:51:52,390 --> 00:51:58,990
can sign them and the tester has to know

965
00:51:56,440 --> 00:52:01,660
that it's coming from the Wi-Fi

966
00:51:58,990 --> 00:52:03,339
subsystem and that that is really

967
00:52:01,660 --> 00:52:04,180
different from coming from internally

968
00:52:03,340 --> 00:52:07,840
from in here

969
00:52:04,180 --> 00:52:09,970
and has to mark them as such so these

970
00:52:07,840 --> 00:52:14,470
these the these things are all connected

971
00:52:09,970 --> 00:52:17,049
to each other over a bus or some sort of

972
00:52:14,470 --> 00:52:19,689
internal very short wire or something

973
00:52:17,050 --> 00:52:20,860
like that there's no bluetooth or YP or

974
00:52:19,690 --> 00:52:22,600
anything like that here these are

975
00:52:20,860 --> 00:52:25,260
superzoom to be all very tightly

976
00:52:22,600 --> 00:52:29,310
connected you

977
00:52:25,260 --> 00:52:31,590
in this case you know the the Android is

978
00:52:29,310 --> 00:52:35,120
actually running on the same CPU as the

979
00:52:31,590 --> 00:52:38,400
TE it's just different mode all right so

980
00:52:35,120 --> 00:52:39,839
you can get information from Android you

981
00:52:38,400 --> 00:52:43,170
might even get information from an

982
00:52:39,840 --> 00:52:45,090
Android app as well and maybe you might

983
00:52:43,170 --> 00:52:47,160
say I should draw this line that goes

984
00:52:45,090 --> 00:52:52,290
from ant the Android app to Android and

985
00:52:47,160 --> 00:52:55,259
then and and then to the attest er I'm

986
00:52:52,290 --> 00:52:59,160
showing also the the cellular modem and

987
00:52:55,260 --> 00:53:01,100
the phone part of this system as a sub

988
00:52:59,160 --> 00:53:04,410
part that actually has the ability to

989
00:53:01,100 --> 00:53:07,740
sign and eat on its own so it's got a

990
00:53:04,410 --> 00:53:11,490
signing key and it has an a tester so

991
00:53:07,740 --> 00:53:17,270
what it transfers over the bus here is a

992
00:53:11,490 --> 00:53:21,930
full signed token so this is the you

993
00:53:17,270 --> 00:53:25,200
might call this the nested e so a couple

994
00:53:21,930 --> 00:53:27,540
other points each sub module here has a

995
00:53:25,200 --> 00:53:29,850
string name it has a bunch of claims it

996
00:53:27,540 --> 00:53:31,620
has an indicator of how strong the

997
00:53:29,850 --> 00:53:34,860
attachment is that's probably something

998
00:53:31,620 --> 00:53:37,950
we can have a lot of debate about claims

999
00:53:34,860 --> 00:53:40,920
are not inherited so each one would have

1000
00:53:37,950 --> 00:53:42,660
to report the butand debug state each

1001
00:53:40,920 --> 00:53:46,410
one probably should should report the

1002
00:53:42,660 --> 00:53:48,299
nonce I thought about having inherent

1003
00:53:46,410 --> 00:53:52,740
incidents just felt like a big mess

1004
00:53:48,300 --> 00:53:55,530
so didn't do that and then I've already

1005
00:53:52,740 --> 00:54:00,390
talked about the two types here so I

1006
00:53:55,530 --> 00:54:03,930
think I have so this is you know what

1007
00:54:00,390 --> 00:54:05,790
changed about the in the PR from what

1008
00:54:03,930 --> 00:54:08,879
was there before to what's there now I

1009
00:54:05,790 --> 00:54:12,090
think I think the the cleans up a bunch

1010
00:54:08,880 --> 00:54:14,370
of stuff sub mods and nested E were

1011
00:54:12,090 --> 00:54:17,670
separate things before now they're the

1012
00:54:14,370 --> 00:54:21,960
same thing and just two different types

1013
00:54:17,670 --> 00:54:23,640
of entries there wasn't really a good

1014
00:54:21,960 --> 00:54:26,340
way to have more than one nested eat

1015
00:54:23,640 --> 00:54:32,490
before without violating some Seaboard

1016
00:54:26,340 --> 00:54:36,660
design principles of duplicate keys and

1017
00:54:32,490 --> 00:54:38,459
then the there was a separate claim for

1018
00:54:36,660 --> 00:54:42,899
the sub mod name

1019
00:54:38,460 --> 00:54:45,630
instead I'm using the the label or key

1020
00:54:42,900 --> 00:54:48,900
in the map for that and then there's the

1021
00:54:45,630 --> 00:54:54,930
new claim for a sub mod attachment okay

1022
00:54:48,900 --> 00:54:56,490
and and here's an example so I'll start

1023
00:54:54,930 --> 00:54:58,618
well while you're reading that we can

1024
00:54:56,490 --> 00:54:59,578
start comments and questions hey can you

1025
00:54:58,619 --> 00:55:04,589
go back to the one that had all the

1026
00:54:59,579 --> 00:55:06,930
fancy diagram so before this I prepared

1027
00:55:04,589 --> 00:55:09,569
my list of things that I would want and

1028
00:55:06,930 --> 00:55:11,038
you've done a good job here because

1029
00:55:09,569 --> 00:55:13,470
almost everything that I want is

1030
00:55:11,039 --> 00:55:16,230
actually the I'm looking at the each sub

1031
00:55:13,470 --> 00:55:18,118
module has bullets there right when you

1032
00:55:16,230 --> 00:55:22,650
say string name claims indicator of

1033
00:55:18,119 --> 00:55:25,079
attachment strength and so for my list

1034
00:55:22,650 --> 00:55:27,299
of things that are metadata about claims

1035
00:55:25,079 --> 00:55:29,250
you have a claim that's about you know X

1036
00:55:27,299 --> 00:55:30,770
and then you want some metadata about it

1037
00:55:29,250 --> 00:55:34,020
there are four things that I had a head

1038
00:55:30,770 --> 00:55:36,380
who added the claim which I might met to

1039
00:55:34,020 --> 00:55:38,730
the string name of the sub module yeah

1040
00:55:36,380 --> 00:55:40,650
what level of confidence to the claim

1041
00:55:38,730 --> 00:55:42,180
editor having the value which I might

1042
00:55:40,650 --> 00:55:45,450
met for the indicator of attachment

1043
00:55:42,180 --> 00:55:47,069
strength when was the value taken

1044
00:55:45,450 --> 00:55:48,839
especially if it was different from the

1045
00:55:47,069 --> 00:55:50,490
time of the claim was generated yeah and

1046
00:55:48,839 --> 00:55:52,799
you could argue that that one goes

1047
00:55:50,490 --> 00:55:54,270
inside the claims and like an age or

1048
00:55:52,799 --> 00:55:56,309
something like that already and so

1049
00:55:54,270 --> 00:55:58,680
that's already there so I'm gonna one of

1050
00:55:56,309 --> 00:56:01,140
the things I'm gonna get to here is are

1051
00:55:58,680 --> 00:56:03,480
all three of those bullets could those

1052
00:56:01,140 --> 00:56:04,770
all be claims or are some of those

1053
00:56:03,480 --> 00:56:06,270
things that are not you know this is a

1054
00:56:04,770 --> 00:56:07,950
string name a claim is the indicator of

1055
00:56:06,270 --> 00:56:09,538
attachment strength is that a claim and

1056
00:56:07,950 --> 00:56:10,649
you just have a bunch of claims with

1057
00:56:09,539 --> 00:56:12,450
some of them are metadata brought all

1058
00:56:10,650 --> 00:56:15,119
the other claims in the same set okay

1059
00:56:12,450 --> 00:56:17,069
and my last one is what is the source of

1060
00:56:15,119 --> 00:56:18,510
the value not the source of the claim in

1061
00:56:17,069 --> 00:56:20,250
case you got the value from some

1062
00:56:18,510 --> 00:56:22,440
external entity so let's say you're

1063
00:56:20,250 --> 00:56:24,660
reporting geo locate your claim a door

1064
00:56:22,440 --> 00:56:27,089
might be your GPS device but the source

1065
00:56:24,660 --> 00:56:28,379
of the value might be satellite X or

1066
00:56:27,089 --> 00:56:30,029
some external entity that you got it

1067
00:56:28,380 --> 00:56:31,619
from that kind of thing and so those are

1068
00:56:30,029 --> 00:56:33,299
the four things only one I don't see on

1069
00:56:31,619 --> 00:56:35,069
there unless you create the claim for it

1070
00:56:33,299 --> 00:56:37,230
is what's the source of the value okay

1071
00:56:35,069 --> 00:56:39,270
so I met that question is can all these

1072
00:56:37,230 --> 00:56:41,700
be expressed as claims if you do then

1073
00:56:39,270 --> 00:56:43,619
it's more like saying it's the nested

1074
00:56:41,700 --> 00:56:44,910
concept for all those including the top

1075
00:56:43,619 --> 00:56:47,069
three not just the bottom one the bottom

1076
00:56:44,910 --> 00:56:48,660
what is it special all four of them use

1077
00:56:47,069 --> 00:56:51,320
the same nesting concept as a way of

1078
00:56:48,660 --> 00:56:53,899
indicating the sub module name and

1079
00:56:51,320 --> 00:56:55,280
basically the metadata so great job at

1080
00:56:53,900 --> 00:56:56,930
accomplishing my requirements I think

1081
00:56:55,280 --> 00:56:58,580
there's only one one one thing I would

1082
00:56:56,930 --> 00:57:00,500
want to add and one question could you

1083
00:56:58,580 --> 00:57:03,380
just interpret them all as claims and

1084
00:57:00,500 --> 00:57:06,080
use the that the sub-module is the way

1085
00:57:03,380 --> 00:57:07,550
to group claims and so some of those are

1086
00:57:06,080 --> 00:57:10,819
claims that are metadata about that are

1087
00:57:07,550 --> 00:57:13,340
claims so yeah I think that's what the

1088
00:57:10,820 --> 00:57:18,950
way it should be if you look at this

1089
00:57:13,340 --> 00:57:22,190
here okay yeah all right so sorry about

1090
00:57:18,950 --> 00:57:25,189
the size so the I have three sub mods

1091
00:57:22,190 --> 00:57:28,460
here and this sub mods name is at foo

1092
00:57:25,190 --> 00:57:33,890
which is an Android app the attachment

1093
00:57:28,460 --> 00:57:37,310
is is a claim there right so we could

1094
00:57:33,890 --> 00:57:39,440
add age as a claim and so the only thing

1095
00:57:37,310 --> 00:57:42,799
that's really not a sort of a sub claim

1096
00:57:39,440 --> 00:57:45,950
is the the name the name of the sub

1097
00:57:42,800 --> 00:57:47,510
module and actually the previous design

1098
00:57:45,950 --> 00:57:49,549
I had the name of this sub module as a

1099
00:57:47,510 --> 00:57:57,290
claim so he could go back to that I

1100
00:57:49,550 --> 00:57:59,000
don't have a strong feeling okay so this

1101
00:57:57,290 --> 00:58:02,029
is Hank please don't throw things at me

1102
00:57:59,000 --> 00:58:05,060
and I think most of this is actually

1103
00:58:02,030 --> 00:58:07,520
covered by the provenance attestation

1104
00:58:05,060 --> 00:58:10,430
provenance concept in the architecture

1105
00:58:07,520 --> 00:58:12,530
and it's not only about age sometimes it

1106
00:58:10,430 --> 00:58:13,970
is about the entity that but is the

1107
00:58:12,530 --> 00:58:16,850
origin Providence and maybe there's a

1108
00:58:13,970 --> 00:58:20,750
chain of it but I'm doing with Dave

1109
00:58:16,850 --> 00:58:22,569
otherwise and could you go back to some

1110
00:58:20,750 --> 00:58:25,040
where they are the Sabbath was signed

1111
00:58:22,570 --> 00:58:26,720
signed sup mods are a little bit more

1112
00:58:25,040 --> 00:58:31,250
complicated because they are

1113
00:58:26,720 --> 00:58:34,189
semantically opaque to the hood each

1114
00:58:31,250 --> 00:58:37,100
because if you want to include a signed

1115
00:58:34,190 --> 00:58:39,740
eat it will be done with dot seaboard

1116
00:58:37,100 --> 00:58:41,630
data type in your information model and

1117
00:58:39,740 --> 00:58:43,970
then it is opaque and you have to do

1118
00:58:41,630 --> 00:58:48,050
another information mode adjust for that

1119
00:58:43,970 --> 00:58:50,089
suck claim set that's the only the only

1120
00:58:48,050 --> 00:58:52,070
thing here because assigning Opaques

1121
00:58:50,090 --> 00:58:53,690
things you cannot semantically check

1122
00:58:52,070 --> 00:58:56,000
them out of the information model if

1123
00:58:53,690 --> 00:58:59,090
their own information more typically but

1124
00:58:56,000 --> 00:59:00,950
it's a Justin it yeah because otherwise

1125
00:58:59,090 --> 00:59:04,720
information model in syntax you're using

1126
00:59:00,950 --> 00:59:07,899
a spoke I guess but otherwise this looks

1127
00:59:04,720 --> 00:59:11,439
oh and one good comment it really shows

1128
00:59:07,900 --> 00:59:14,260
what is a testing and what is a tested

1129
00:59:11,440 --> 00:59:17,050
so why five sub model is a tested and

1130
00:59:14,260 --> 00:59:18,910
the TE is a testing it and I think this

1131
00:59:17,050 --> 00:59:21,490
shows the demarcation line and the any

1132
00:59:18,910 --> 00:59:23,740
other sub I test her that is another a

1133
00:59:21,490 --> 00:59:25,479
testing environment that is nested in a

1134
00:59:23,740 --> 00:59:26,169
testing environment I think this is a

1135
00:59:25,480 --> 00:59:28,119
very good

1136
00:59:26,170 --> 00:59:29,740
maybe we should somehow abstract that

1137
00:59:28,119 --> 00:59:41,520
picture and put into the architecture

1138
00:59:29,740 --> 00:59:43,450
okay you're on Ned yeah so just to

1139
00:59:41,520 --> 00:59:45,670
continue in that line of thinking I

1140
00:59:43,450 --> 00:59:48,098
think it's still not clear to me the

1141
00:59:45,670 --> 00:59:49,839
difference between what is the testing

1142
00:59:48,099 --> 00:59:52,089
environment and what is the attested

1143
00:59:49,839 --> 00:59:53,799
environment and whether or not and a

1144
00:59:52,089 --> 00:59:56,109
tested environment could be something

1145
00:59:53,800 --> 00:59:59,400
that signs something but is a tested

1146
00:59:56,109 --> 01:00:03,400
tested by an a testing environment

1147
00:59:59,400 --> 01:00:06,310
looking for some some use case context

1148
01:00:03,400 --> 01:00:17,319
on what to help justify the complexity

1149
01:00:06,310 --> 01:00:20,950
and to map it to something real sure I'm

1150
01:00:17,319 --> 01:00:24,990
following that you're saying to augment

1151
01:00:20,950 --> 01:00:28,839
into the diagram who's doing the testing

1152
01:00:24,990 --> 01:00:31,419
typically impatiens is that via testing

1153
01:00:28,839 --> 01:00:34,180
environment has some special ability to

1154
01:00:31,420 --> 01:00:35,880
observe the attested environment such

1155
01:00:34,180 --> 01:00:39,399
that it can make these claims

1156
01:00:35,880 --> 01:00:41,770
legitimately okay it can say I have

1157
01:00:39,400 --> 01:00:44,230
access to the memory region I can look

1158
01:00:41,770 --> 01:00:46,810
at the memory region and verify that

1159
01:00:44,230 --> 01:00:49,599
indeed it is a sub-module X or

1160
01:00:46,810 --> 01:00:54,460
sub-module Y or I have access to a bus

1161
01:00:49,599 --> 01:00:58,240
and the bus is is secure and therefore I

1162
01:00:54,460 --> 01:01:00,280
can with authority say that that I'm

1163
01:00:58,240 --> 01:01:03,759
observed you know the Wi-Fi sub-module

1164
01:01:00,280 --> 01:01:08,050
for example what's not clear is the case

1165
01:01:03,760 --> 01:01:11,230
where there's a another module which is

1166
01:01:08,050 --> 01:01:15,160
also signing and what it is that it's

1167
01:01:11,230 --> 01:01:17,690
observing versus who's observing it I

1168
01:01:15,160 --> 01:01:21,980
don't quite get the use case for

1169
01:01:17,690 --> 01:01:28,039
the linkage for things that sign other

1170
01:01:21,980 --> 01:01:29,770
things this is Dave I don't think this

1171
01:01:28,039 --> 01:01:32,809
picture here actually shows the

1172
01:01:29,770 --> 01:01:35,150
attesting versus a tested environment I

1173
01:01:32,809 --> 01:01:36,920
agree with Hank that you should actually

1174
01:01:35,150 --> 01:01:38,569
discuss that especially the architecture

1175
01:01:36,920 --> 01:01:42,440
documents but I don't get that out of

1176
01:01:38,569 --> 01:01:46,130
this picture he is saying the cellphone

1177
01:01:42,440 --> 01:01:50,089
modem in the bottom right is itself a

1178
01:01:46,130 --> 01:01:51,920
testing some claims the TE main a tester

1179
01:01:50,089 --> 01:01:53,660
is taking those for granted because it

1180
01:01:51,920 --> 01:01:55,990
was signed by that other Maia tester

1181
01:01:53,660 --> 01:01:57,649
number two and it may be including yet

1182
01:01:55,990 --> 01:01:58,879
encapsulated or inside of a claim

1183
01:01:57,650 --> 01:02:00,410
wherever here's this other claim said

1184
01:01:58,880 --> 01:02:01,910
I'm putting in mine but I'm not

1185
01:02:00,410 --> 01:02:03,078
attesting the code I'm just relaying

1186
01:02:01,910 --> 01:02:04,549
this or something that's what it's

1187
01:02:03,079 --> 01:02:07,430
actually Austrian here in his diagram

1188
01:02:04,549 --> 01:02:09,049
that's this is what he wants is and Ned

1189
01:02:07,430 --> 01:02:11,750
is pointing out that that's different

1190
01:02:09,049 --> 01:02:13,490
from what Hank wants okay and I'm just

1191
01:02:11,750 --> 01:02:19,930
reading here thank you for that

1192
01:02:13,490 --> 01:02:23,029
clarification okay so at least we want

1193
01:02:19,930 --> 01:02:25,129
we want clarifications in the text of

1194
01:02:23,029 --> 01:02:26,329
for what really is happening but I think

1195
01:02:25,130 --> 01:02:29,480
that's separate from what you were

1196
01:02:26,329 --> 01:02:30,950
trying to raise here yeah I'm trying to

1197
01:02:29,480 --> 01:02:34,700
come to a good good texture although

1198
01:02:30,950 --> 01:02:37,490
this yeah yeah yeah okay let's keep

1199
01:02:34,700 --> 01:02:40,848
moving so I want to make another comment

1200
01:02:37,490 --> 01:02:43,308
here about this this is I've used a

1201
01:02:40,849 --> 01:02:46,670
mobile phone here but this could be a

1202
01:02:43,309 --> 01:02:48,170
car and this could be breaking and this

1203
01:02:46,670 --> 01:02:50,809
could be entertainment and esses you

1204
01:02:48,170 --> 01:02:53,510
know some head and and and maybe this is

1205
01:02:50,809 --> 01:02:56,029
the I don't know the the nav system

1206
01:02:53,510 --> 01:03:00,190
which itself has many sub components so

1207
01:02:56,029 --> 01:03:00,190
so you can nest on all kinds of stuff I

1208
01:03:02,410 --> 01:03:07,910
will now speak on behalf of IRA McDonald

1209
01:03:05,690 --> 01:03:12,020
I have the authority a car is not like

1210
01:03:07,910 --> 01:03:24,379
this okay can we just move beyond that

1211
01:03:12,020 --> 01:03:26,660
he said like okay my car is okay so so

1212
01:03:24,380 --> 01:03:31,460
that was really good I any more comments

1213
01:03:26,660 --> 01:03:33,990
or discussion on this so so I will

1214
01:03:31,460 --> 01:03:36,150
probably trying to take update the text

1215
01:03:33,990 --> 01:03:39,600
a little bit based on the input here and

1216
01:03:36,150 --> 01:03:42,540
then another PR and then raise further

1217
01:03:39,600 --> 01:03:44,549
confirmation on the list okay so time

1218
01:03:42,540 --> 01:03:46,470
check you have 12 minutes live minutes

1219
01:03:44,550 --> 01:03:48,030
okay so now able to leave the other

1220
01:03:46,470 --> 01:03:49,589
attachment types that we may add in the

1221
01:03:48,030 --> 01:03:53,070
future because I have some ideas oh yeah

1222
01:03:49,590 --> 01:03:54,840
yeah yeah I mean I mean we I think we

1223
01:03:53,070 --> 01:03:56,310
have to go through a lot of revs of the

1224
01:03:54,840 --> 01:03:59,610
draft to really get this locked down so

1225
01:03:56,310 --> 01:04:04,860
I'm I mean this is actually really great

1226
01:03:59,610 --> 01:04:07,140
progress from my point of view okay I

1227
01:04:04,860 --> 01:04:11,070
think yeah I think you can actually just

1228
01:04:07,140 --> 01:04:15,359
take the rest of the time here all right

1229
01:04:11,070 --> 01:04:16,650
why don't you just take yeah yeah no I

1230
01:04:15,360 --> 01:04:18,210
think here you take the security

1231
01:04:16,650 --> 01:04:20,370
considerations and then you take the

1232
01:04:18,210 --> 01:04:23,640
quiz don't that should close out to 12

1233
01:04:20,370 --> 01:04:27,390
minutes I think that's reasonable and

1234
01:04:23,640 --> 01:04:36,960
and the stuff I have is I I got a lot of

1235
01:04:27,390 --> 01:04:38,819
value out of I'm content okay you gotta

1236
01:04:36,960 --> 01:04:42,570
wave your hands cuz it's gonna take me a

1237
01:04:38,820 --> 01:04:44,490
minute - sure yeah sorry yeah I'll just

1238
01:04:42,570 --> 01:04:46,830
mention something so I took the first

1239
01:04:44,490 --> 01:04:48,990
stab at security considerations I have

1240
01:04:46,830 --> 01:04:50,759
no illusions on this I know that when

1241
01:04:48,990 --> 01:04:52,770
this document gets to later stages and

1242
01:04:50,760 --> 01:04:56,220
it goes through IES key review it will

1243
01:04:52,770 --> 01:04:57,750
undergo a lot of revisions but no there

1244
01:04:56,220 --> 01:04:59,459
was something there were some things

1245
01:04:57,750 --> 01:05:04,380
that resulted from the last face-to-face

1246
01:04:59,460 --> 01:05:06,860
that made a made a security

1247
01:05:04,380 --> 01:05:08,880
consideration sections more important

1248
01:05:06,860 --> 01:05:10,710
one of things also started with a

1249
01:05:08,880 --> 01:05:12,500
disclaimer we will I will mean to

1250
01:05:10,710 --> 01:05:15,570
eventually harmonize the terminology

1251
01:05:12,500 --> 01:05:18,720
used in this part section with what's

1252
01:05:15,570 --> 01:05:20,340
actually brought forward in the rats

1253
01:05:18,720 --> 01:05:25,259
architecture will be discussing the rats

1254
01:05:20,340 --> 01:05:26,280
architecture more Friday so I'll mention

1255
01:05:25,260 --> 01:05:29,460
one thing that came up in the last

1256
01:05:26,280 --> 01:05:32,430
face-to-face was manufactured provision

1257
01:05:29,460 --> 01:05:34,260
key material we decided very

1258
01:05:32,430 --> 01:05:36,540
specifically we would move that out of

1259
01:05:34,260 --> 01:05:39,360
the main text and move that into you

1260
01:05:36,540 --> 01:05:41,480
security considerations so I put in some

1261
01:05:39,360 --> 01:05:43,200
descriptions on best practices for

1262
01:05:41,480 --> 01:05:45,300
creation

1263
01:05:43,200 --> 01:05:47,279
transport a manufacturer key material

1264
01:05:45,300 --> 01:05:50,450
now I'll mention this it's primarily

1265
01:05:47,280 --> 01:05:54,510
comes from my experience in the

1266
01:05:50,450 --> 01:05:59,368
semiconductor industry and this may not

1267
01:05:54,510 --> 01:06:02,250
be the experience of many participants

1268
01:05:59,369 --> 01:06:04,560
in the IETF particularly creation of key

1269
01:06:02,250 --> 01:06:06,690
material in what what is what I'm

1270
01:06:04,560 --> 01:06:10,950
defining is an enclave leveraging from

1271
01:06:06,690 --> 01:06:13,500
the RFC 4949 definition transport and

1272
01:06:10,950 --> 01:06:16,140
when I say secure transport here that

1273
01:06:13,500 --> 01:06:18,329
doesn't necessarily mean transport a

1274
01:06:16,140 --> 01:06:19,920
train and transport over some sort of

1275
01:06:18,329 --> 01:06:23,490
network communications it could also be

1276
01:06:19,920 --> 01:06:25,980
through human courier and there and

1277
01:06:23,490 --> 01:06:28,049
there are a lot of other interesting

1278
01:06:25,980 --> 01:06:30,119
practices on there and when I when I

1279
01:06:28,050 --> 01:06:32,010
talk about encrypted storage I didn't go

1280
01:06:30,119 --> 01:06:35,369
into descriptions on this but this could

1281
01:06:32,010 --> 01:06:38,099
be encrypted flash drives that a human

1282
01:06:35,369 --> 01:06:40,710
courier takes from one secure Enclave to

1283
01:06:38,099 --> 01:06:42,630
another secure Enclave brings it into

1284
01:06:40,710 --> 01:06:46,200
you as I said in semi tanker into the

1285
01:06:42,630 --> 01:06:48,660
into the SOC presumably maybe encrypted

1286
01:06:46,200 --> 01:06:50,910
RTL takes that flash drive

1287
01:06:48,660 --> 01:06:53,730
physically destroys it and disposes of

1288
01:06:50,910 --> 01:06:55,710
it in a way that the information on

1289
01:06:53,730 --> 01:07:00,180
there cannot be reconstructed well host

1290
01:06:55,710 --> 01:07:02,460
a party so take a look at it if you have

1291
01:07:00,180 --> 01:07:05,279
different ideas on this wait please let

1292
01:07:02,460 --> 01:07:08,520
me know Transport Security is another

1293
01:07:05,280 --> 01:07:12,119
area that I addressed basically we do

1294
01:07:08,520 --> 01:07:15,990
leverage GWT and JWT quite a bit so

1295
01:07:12,119 --> 01:07:17,970
there's we so in the document we can

1296
01:07:15,990 --> 01:07:20,430
just point to those relevant sections

1297
01:07:17,970 --> 01:07:23,069
however as Lawrence had discussed with

1298
01:07:20,430 --> 01:07:26,990
the use of nonce I did put in a

1299
01:07:23,069 --> 01:07:30,240
discussion an anti replay particularly

1300
01:07:26,990 --> 01:07:33,029
the act whoever creates what I call an

1301
01:07:30,240 --> 01:07:35,578
actor here in anticipation of the

1302
01:07:33,030 --> 01:07:36,869
architecture document one of the

1303
01:07:35,579 --> 01:07:39,599
assertions I make in there is well

1304
01:07:36,869 --> 01:07:41,760
whichever actor creates the nonce should

1305
01:07:39,599 --> 01:07:45,510
be the same one that consumes and knots

1306
01:07:41,760 --> 01:07:47,970
that verifies it and if intermediaries

1307
01:07:45,510 --> 01:07:49,020
are being used then nonce needs to be

1308
01:07:47,970 --> 01:07:52,649
able to make it through those

1309
01:07:49,020 --> 01:07:54,960
intermediaries I think if we're

1310
01:07:52,650 --> 01:07:56,610
anticipating more complex architectures

1311
01:07:54,960 --> 01:07:58,680
in the arc it we're

1312
01:07:56,610 --> 01:08:00,330
more complex uses of intermediaries in

1313
01:07:58,680 --> 01:08:02,220
the architecture document I'd like to

1314
01:08:00,330 --> 01:08:06,930
see that before I go before I give any

1315
01:08:02,220 --> 01:08:16,410
more recommendations on anti replay am I

1316
01:08:06,930 --> 01:08:18,330
going to excellent okay now we're

1317
01:08:16,410 --> 01:08:19,769
getting into some things in architecture

1318
01:08:18,330 --> 01:08:22,950
and this is an area where I'm not really

1319
01:08:19,770 --> 01:08:28,710
sure whether it belongs in this document

1320
01:08:22,950 --> 01:08:31,200
or not so we just discussed sub mods so

1321
01:08:28,710 --> 01:08:34,230
a corresponding concept is what I'm

1322
01:08:31,200 --> 01:08:35,639
calling multiple consumers and I don't

1323
01:08:34,229 --> 01:08:38,129
like the word consumer I would like to

1324
01:08:35,640 --> 01:08:40,140
replace that as soon as possible but but

1325
01:08:38,130 --> 01:08:43,620
I don't know what we will call it as far

1326
01:08:40,140 --> 01:08:45,630
as the architecture is concerned one of

1327
01:08:43,620 --> 01:08:48,510
the things that Lorenson mentioned was

1328
01:08:45,630 --> 01:08:50,790
attestation results so I do have some

1329
01:08:48,510 --> 01:08:52,470
discussion in there about verifiers your

1330
01:08:50,790 --> 01:08:56,189
crowd who are providing attestation

1331
01:08:52,470 --> 01:08:58,980
results downstream so once I mentioned

1332
01:08:56,189 --> 01:09:01,500
for instance that that those attestation

1333
01:08:58,979 --> 01:09:03,629
results can take the form of an H well

1334
01:09:01,500 --> 01:09:06,390
it could be that a verifier itself may

1335
01:09:03,630 --> 01:09:09,620
have to attest to its own security state

1336
01:09:06,390 --> 01:09:12,990
for Dan stream for Dan Stein recipients

1337
01:09:09,620 --> 01:09:14,849
also verifiers for specific sub mods and

1338
01:09:12,990 --> 01:09:16,858
how that would have that would be

1339
01:09:14,850 --> 01:09:18,750
considered and like I said does this

1340
01:09:16,859 --> 01:09:22,109
discussion belong in the architecture

1341
01:09:18,750 --> 01:09:24,839
dog cam here's a little bit of an

1342
01:09:22,109 --> 01:09:26,970
interesting diagram I apologize for it I

1343
01:09:24,839 --> 01:09:28,559
created yesterday better and it may not

1344
01:09:26,970 --> 01:09:31,950
be so easy to see so I'll try to give a

1345
01:09:28,560 --> 01:09:34,980
description at the top ana testable

1346
01:09:31,950 --> 01:09:38,189
device provides an e to a verifier the

1347
01:09:34,979 --> 01:09:40,919
verifier in turn provides its own eat to

1348
01:09:38,189 --> 01:09:43,439
a relying party now this rule is now

1349
01:09:40,920 --> 01:09:45,960
this the eat that's provided by the

1350
01:09:43,439 --> 01:09:48,450
verifier could contain attestation

1351
01:09:45,960 --> 01:09:50,850
results depending on how we decide the

1352
01:09:48,450 --> 01:09:53,550
attestation is all claim related claims

1353
01:09:50,850 --> 01:09:56,910
or finally formatted but to eat itself

1354
01:09:53,550 --> 01:10:00,840
is clear it is clearly recognizable as

1355
01:09:56,910 --> 01:10:02,430
originating from the verifier the second

1356
01:10:00,840 --> 01:10:04,380
result actually shows something

1357
01:10:02,430 --> 01:10:06,150
different for attestation results from

1358
01:10:04,380 --> 01:10:09,300
each met is probably beyond the scope of

1359
01:10:06,150 --> 01:10:09,960
the normative text in each which is the

1360
01:10:09,300 --> 01:10:13,800
attest

1361
01:10:09,960 --> 01:10:15,780
device provides each of the verifier the

1362
01:10:13,800 --> 01:10:17,670
verifier just conveys the attestation

1363
01:10:15,780 --> 01:10:20,429
results directly to the relying party

1364
01:10:17,670 --> 01:10:22,350
and that's and that is possible in my

1365
01:10:20,430 --> 01:10:24,720
opinion when the verifier and relying

1366
01:10:22,350 --> 01:10:26,910
party already have some other form of

1367
01:10:24,720 --> 01:10:29,190
trust establishment between the two so

1368
01:10:26,910 --> 01:10:32,309
the relying party clearly knows who the

1369
01:10:29,190 --> 01:10:34,679
verifier is clearly trusted clear each

1370
01:10:32,310 --> 01:10:36,570
other trusted security state they could

1371
01:10:34,680 --> 01:10:39,750
be located in the same premise for

1372
01:10:36,570 --> 01:10:41,580
instance in the same in the in the same

1373
01:10:39,750 --> 01:10:43,140
data center they could have already

1374
01:10:41,580 --> 01:10:45,059
established they could have already

1375
01:10:43,140 --> 01:10:47,430
mutually authenticated them each other

1376
01:10:45,060 --> 01:10:48,960
through other means and in which case

1377
01:10:47,430 --> 01:10:52,890
the attestation results may be just

1378
01:10:48,960 --> 01:10:54,570
conveyed independent of a need like I

1379
01:10:52,890 --> 01:10:56,040
said this is out that's outside of the

1380
01:10:54,570 --> 01:10:57,330
scope of the normative text of each but

1381
01:10:56,040 --> 01:11:00,420
I think it's perfect for security

1382
01:10:57,330 --> 01:11:02,850
considerations now this final diagram

1383
01:11:00,420 --> 01:11:05,580
down here I didn't find a good way to

1384
01:11:02,850 --> 01:11:11,160
actually depicted graphically actually

1385
01:11:05,580 --> 01:11:14,960
shows a eat with several sub mods coming

1386
01:11:11,160 --> 01:11:17,580
from the intestinal device so the

1387
01:11:14,960 --> 01:11:19,820
initial recipient of that eat is what I

1388
01:11:17,580 --> 01:11:25,260
call the verifier the top-level eat and

1389
01:11:19,820 --> 01:11:28,740
if there are sub mods that are each that

1390
01:11:25,260 --> 01:11:31,980
are encapsulate they eat they will each

1391
01:11:28,740 --> 01:11:34,530
go to their associated sub posts of mod

1392
01:11:31,980 --> 01:11:38,129
verifier see somebody verifies some

1393
01:11:34,530 --> 01:11:39,900
might be verified and all and all the

1394
01:11:38,130 --> 01:11:42,450
verifiers will eventually pass their

1395
01:11:39,900 --> 01:11:45,240
attestation results onto on to the

1396
01:11:42,450 --> 01:11:48,960
relying party in this case the example

1397
01:11:45,240 --> 01:11:51,210
shows each being passed the attestation

1398
01:11:48,960 --> 01:11:53,760
results being passed in the form of the

1399
01:11:51,210 --> 01:11:55,800
needs to the relying party now as I

1400
01:11:53,760 --> 01:11:56,640
mentioned what the anti replay each of

1401
01:11:55,800 --> 01:12:00,960
those verifiers

1402
01:11:56,640 --> 01:12:03,000
will own the nonce will have a I created

1403
01:12:00,960 --> 01:12:07,050
the nonce that's associated with the eat

1404
01:12:03,000 --> 01:12:12,480
that it's verified yes hi this is Hank

1405
01:12:07,050 --> 01:12:16,260
again sorry what this assumes is that

1406
01:12:12,480 --> 01:12:19,759
the tester I really would not call it a

1407
01:12:16,260 --> 01:12:23,699
testable device that a tester knows

1408
01:12:19,760 --> 01:12:26,400
which parties are there will be able

1409
01:12:23,699 --> 01:12:28,500
to appraise the evidence this is an

1410
01:12:26,400 --> 01:12:30,449
assumption that is not always true it

1411
01:12:28,500 --> 01:12:33,630
might be sued ruin the each scenario

1412
01:12:30,449 --> 01:12:36,928
that comes from specific users use cases

1413
01:12:33,630 --> 01:12:40,080
that micah is aggregating but i am

1414
01:12:36,929 --> 01:12:42,300
relatively certain not every use case is

1415
01:12:40,080 --> 01:12:45,620
built on the assumption that the tester

1416
01:12:42,300 --> 01:12:47,429
is aware which verifier will be able to

1417
01:12:45,620 --> 01:12:49,769
appraise its evidence

1418
01:12:47,429 --> 01:12:52,440
so this next thing you are proposing

1419
01:12:49,770 --> 01:12:54,929
here is based on an assumption that is

1420
01:12:52,440 --> 01:12:57,599
not always true I think that's a fair

1421
01:12:54,929 --> 01:12:59,160
point I think it's a I think it's

1422
01:12:57,600 --> 01:13:03,060
reasonable but I think I also have a

1423
01:12:59,160 --> 01:13:06,360
problem with the more general something

1424
01:13:03,060 --> 01:13:08,969
in that that nods me that nonce needs to

1425
01:13:06,360 --> 01:13:11,670
have some Providence otherwise you could

1426
01:13:08,969 --> 01:13:14,489
otherwise the verifier you know you

1427
01:13:11,670 --> 01:13:15,900
won't be able to get the sub body routed

1428
01:13:14,489 --> 01:13:18,059
to the proper but it is very true I

1429
01:13:15,900 --> 01:13:21,830
think I think this is can remediated by

1430
01:13:18,060 --> 01:13:25,170
the attest or giving a hint that it

1431
01:13:21,830 --> 01:13:27,210
thinks it knows and the verifiers will

1432
01:13:25,170 --> 01:13:29,630
then assess that hint like you have your

1433
01:13:27,210 --> 01:13:32,179
wrong or can follow this up also

1434
01:13:29,630 --> 01:13:35,310
nonsense I think are not only there for

1435
01:13:32,179 --> 01:13:38,429
anti replay but for providing freshness

1436
01:13:35,310 --> 01:13:41,699
and if you start to relay them freshness

1437
01:13:38,429 --> 01:13:47,100
deteriorates so there might be a use of

1438
01:13:41,699 --> 01:13:51,870
another layer of nonsense and then

1439
01:13:47,100 --> 01:13:55,320
you're on is it a case that the verifier

1440
01:13:51,870 --> 01:13:58,080
of sub mod a would provide its nonce to

1441
01:13:55,320 --> 01:14:01,949
the bearer to the top level verifier who

1442
01:13:58,080 --> 01:14:04,710
would forward it on to the tester I not

1443
01:14:01,949 --> 01:14:06,839
necessarily but in this example it's

1444
01:14:04,710 --> 01:14:08,760
certain it could be seen that way but

1445
01:14:06,840 --> 01:14:10,290
this but I bet there are other

1446
01:14:08,760 --> 01:14:12,810
architectures that are possible in the

1447
01:14:10,290 --> 01:14:14,550
odds and odds could could be provided to

1448
01:14:12,810 --> 01:14:18,090
you when I'm calling me a testable

1449
01:14:14,550 --> 01:14:20,239
device in other man in in other manners

1450
01:14:18,090 --> 01:14:23,239
other than through a single point of

1451
01:14:20,239 --> 01:14:23,239
contact

1452
01:14:27,750 --> 01:14:33,510
they tailor so the bottom case has a

1453
01:14:31,079 --> 01:14:35,940
whole bunch of complexity I'm undecided

1454
01:14:33,510 --> 01:14:37,469
as to whether we need it or not and I

1455
01:14:35,940 --> 01:14:38,190
defer to you if there's a use case that

1456
01:14:37,469 --> 01:14:39,809
needs it

1457
01:14:38,190 --> 01:14:40,799
great thank you for writing it up I

1458
01:14:39,809 --> 01:14:42,320
don't know if there's a use case that

1459
01:14:40,800 --> 01:14:44,550
needs it that's a question that I have

1460
01:14:42,320 --> 01:14:48,630
what I originally was going to get up

1461
01:14:44,550 --> 01:14:50,219
and say is that those three use case or

1462
01:14:48,630 --> 01:14:51,929
those three cases is not the only case

1463
01:14:50,219 --> 01:14:54,059
Loretta talked about the other one where

1464
01:14:51,929 --> 01:14:56,579
the thing on the left is not an eat and

1465
01:14:54,059 --> 01:14:57,989
the thing on the right isn't eat and so

1466
01:14:56,579 --> 01:15:00,000
in his slides he talked about how that

1467
01:14:57,989 --> 01:15:02,638
might be you know a yang TPM thing on

1468
01:15:00,000 --> 01:15:04,170
the left and an eat on the right meaning

1469
01:15:02,639 --> 01:15:09,170
the SS station result part and that

1470
01:15:04,170 --> 01:15:09,170
should be a fourth diagram yes I agree

1471
01:15:09,349 --> 01:15:15,540
okay of French ah I think I agree man

1472
01:15:13,290 --> 01:15:18,090
with doubt I just want to say this is

1473
01:15:15,540 --> 01:15:20,489
not a security consideration it's just

1474
01:15:18,090 --> 01:15:23,909
another use case maybe we need a some

1475
01:15:20,489 --> 01:15:26,190
solutions along it but I don't know why

1476
01:15:23,909 --> 01:15:31,259
you're talking courage the security of

1477
01:15:26,190 --> 01:15:32,790
consideration like this in this case

1478
01:15:31,260 --> 01:15:34,619
there are key things that are coming

1479
01:15:32,790 --> 01:15:37,530
into play there's transport security as

1480
01:15:34,619 --> 01:15:40,230
I mentioned in the middle in the in the

1481
01:15:37,530 --> 01:15:42,900
middle example where the attestation

1482
01:15:40,230 --> 01:15:45,178
results are conveyed not in the context

1483
01:15:42,900 --> 01:15:48,540
of an each I know there are some

1484
01:15:45,179 --> 01:15:52,800
security issues here but mostly it is at

1485
01:15:48,540 --> 01:15:56,489
a station use case I think so it's not

1486
01:15:52,800 --> 01:16:00,119
the typical unlimited have station

1487
01:15:56,489 --> 01:16:03,150
security problem I don't know if I

1488
01:16:00,119 --> 01:16:05,130
express yeah I think the second thing is

1489
01:16:03,150 --> 01:16:07,710
what I talked about with the anti but

1490
01:16:05,130 --> 01:16:12,869
yeah that's that's there if you comment

1491
01:16:07,710 --> 01:16:16,679
on the PAPR then if you think the sex

1492
01:16:12,869 --> 01:16:18,540
should be fine yes again clarifying

1493
01:16:16,679 --> 01:16:22,349
question on the diagram which is the

1494
01:16:18,540 --> 01:16:24,389
simple one that has eat and eat are you

1495
01:16:22,349 --> 01:16:26,159
assuming that the nonce on the left is

1496
01:16:24,389 --> 01:16:28,020
the same as the nonce on the right or

1497
01:16:26,159 --> 01:16:29,489
the fact that it's regenerating it with

1498
01:16:28,020 --> 01:16:30,929
some transformation means that the

1499
01:16:29,489 --> 01:16:33,178
nonces can be different in those two

1500
01:16:30,929 --> 01:16:34,980
eats which can be different not just can

1501
01:16:33,179 --> 01:16:36,210
be different okay so if the nonsense can

1502
01:16:34,980 --> 01:16:38,820
be different than moving down to the

1503
01:16:36,210 --> 01:16:40,250
bottom then answers can be different in

1504
01:16:38,820 --> 01:16:43,070
each of those lines as well

1505
01:16:40,250 --> 01:16:44,210
yes and so then if that's the case if

1506
01:16:43,070 --> 01:16:45,710
I'm interpreting your answer right then

1507
01:16:44,210 --> 01:16:48,110
the ax tester does not need to know the

1508
01:16:45,710 --> 01:16:49,760
verifier he's only talking to the

1509
01:16:48,110 --> 01:16:52,009
top-level verifier because that's the

1510
01:16:49,760 --> 01:16:54,350
only Nazi needs to include well in

1511
01:16:52,010 --> 01:16:56,510
because you could do a transform at the

1512
01:16:54,350 --> 01:16:57,770
verifier there to insert its own nuts in

1513
01:16:56,510 --> 01:16:59,030
there in the same way as it's doing an

1514
01:16:57,770 --> 01:17:00,800
attestation right so you could construct

1515
01:16:59,030 --> 01:17:02,150
a solution that way whether you think

1516
01:17:00,800 --> 01:17:04,490
that's a good idea or not as a different

1517
01:17:02,150 --> 01:17:06,620
question that maybe hamadan yeah so

1518
01:17:04,490 --> 01:17:08,690
there could be multiple at least a

1519
01:17:06,620 --> 01:17:10,940
remote in addition suppose we know that

1520
01:17:08,690 --> 01:17:13,309
the tester actually directly is aware of

1521
01:17:10,940 --> 01:17:14,839
and then the nonce creation is viable if

1522
01:17:13,310 --> 01:17:20,200
not there has to be a distribution

1523
01:17:14,840 --> 01:17:20,200
system and we add a ton of complexity so

1524
01:17:24,490 --> 01:17:31,370
if we go back to sub mods in reality I

1525
01:17:28,010 --> 01:17:35,630
don't think that the the typical that

1526
01:17:31,370 --> 01:17:36,980
it's typical that you would have four if

1527
01:17:35,630 --> 01:17:38,330
you have three sub mods you would have

1528
01:17:36,980 --> 01:17:41,120
three different nonsense because I think

1529
01:17:38,330 --> 01:17:44,690
the same verify would verify all three

1530
01:17:41,120 --> 01:17:47,769
of the sub mods so I agree I agree that

1531
01:17:44,690 --> 01:17:50,929
that maybe that's that's this could be a

1532
01:17:47,770 --> 01:18:04,970
Prada a solution in say in circular

1533
01:17:50,930 --> 01:18:09,170
problem and it's not just one more thing

1534
01:18:04,970 --> 01:18:13,820
any topics that are missing you know

1535
01:18:09,170 --> 01:18:15,530
please put it on the PR and we have to

1536
01:18:13,820 --> 01:18:18,799
take a look at them I think just bear in

1537
01:18:15,530 --> 01:18:20,809
mind though particularly fir thee for

1538
01:18:18,800 --> 01:18:24,830
the co-editors of the architecture

1539
01:18:20,810 --> 01:18:26,240
document before it bear mind that if

1540
01:18:24,830 --> 01:18:28,930
you're going to be addressing those same

1541
01:18:26,240 --> 01:18:28,929
issues and we

1542
01:18:44,780 --> 01:18:59,429
all right so ten minutes yeah okay I'll

1543
01:18:54,630 --> 01:19:01,020
give you a week's so going on the going

1544
01:18:59,430 --> 01:19:05,790
on the earlier discussion or lauren

1545
01:19:01,020 --> 01:19:08,940
started with uh with um with the it with

1546
01:19:05,790 --> 01:19:10,620
proposed claims to round out eat we

1547
01:19:08,940 --> 01:19:12,360
decided parties meaning to submit a

1548
01:19:10,620 --> 01:19:16,080
informational document on something

1549
01:19:12,360 --> 01:19:18,240
called the quest token so what what is

1550
01:19:16,080 --> 01:19:24,210
quite stand for Qualcomm wireless edge

1551
01:19:18,240 --> 01:19:28,460
services and there was a in so it

1552
01:19:24,210 --> 01:19:32,400
actually goes to you it actually goes to

1553
01:19:28,460 --> 01:19:37,050
company strategy known as task chipset

1554
01:19:32,400 --> 01:19:39,780
as a service I'm just I just say him I

1555
01:19:37,050 --> 01:19:41,340
don't make the marketing term so but

1556
01:19:39,780 --> 01:19:46,590
that but when you go to that press

1557
01:19:41,340 --> 01:19:48,450
release you'll see that but it was

1558
01:19:46,590 --> 01:19:50,190
announced it was announced that will

1559
01:19:48,450 --> 01:19:52,920
over a year and a half ago attestation

1560
01:19:50,190 --> 01:19:54,089
was a key service and this is actually

1561
01:19:52,920 --> 01:19:56,460
something that semiconductor

1562
01:19:54,090 --> 01:20:01,320
manufacturers that we've been quite a

1563
01:19:56,460 --> 01:20:03,300
bit and that is how do we best deploy at

1564
01:20:01,320 --> 01:20:07,590
a state and online attestation service

1565
01:20:03,300 --> 01:20:09,960
such that we is such that relying

1566
01:20:07,590 --> 01:20:12,840
parties can take advantage of it without

1567
01:20:09,960 --> 01:20:15,330
having to expose a lot of key a lot of

1568
01:20:12,840 --> 01:20:17,430
key material critical key material to

1569
01:20:15,330 --> 01:20:20,340
you to third parties even if they are

1570
01:20:17,430 --> 01:20:24,750
trusted and even if you have PK I play

1571
01:20:20,340 --> 01:20:26,670
so that's what Korres came about at a

1572
01:20:24,750 --> 01:20:29,040
station was a key service in the

1573
01:20:26,670 --> 01:20:34,860
attestation was codes a based and we

1574
01:20:29,040 --> 01:20:36,930
call it quiz token so some of the key

1575
01:20:34,860 --> 01:20:39,929
commonalities between quiz token and eat

1576
01:20:36,930 --> 01:20:40,860
we do there is a oh em I D there is a

1577
01:20:39,930 --> 01:20:43,710
concept nonce

1578
01:20:40,860 --> 01:20:46,049
in there but there are there are several

1579
01:20:43,710 --> 01:20:49,020
differences today and these are some

1580
01:20:46,050 --> 01:20:52,380
things that we can we can we can

1581
01:20:49,020 --> 01:20:54,060
consider as far as far as whether they

1582
01:20:52,380 --> 01:20:57,579
belong and eat or whether they belong in

1583
01:20:54,060 --> 01:21:00,489
a profile like quest token so there's

1584
01:20:57,579 --> 01:21:02,320
device ID is used a little bit

1585
01:21:00,489 --> 01:21:04,659
differently and this is something I

1586
01:21:02,320 --> 01:21:06,308
discussed it would discuss with Lawrence

1587
01:21:04,659 --> 01:21:08,379
because it's a quasi token - device ID

1588
01:21:06,309 --> 01:21:11,170
can be specific to your service provider

1589
01:21:08,380 --> 01:21:13,329
and I've looked at the way we've we're

1590
01:21:11,170 --> 01:21:16,150
addressing quest a service provider as

1591
01:21:13,329 --> 01:21:17,889
far as quiz is concerned and I believe I

1592
01:21:16,150 --> 01:21:21,449
can say it's identical to the way

1593
01:21:17,889 --> 01:21:25,360
service providers defined antique so I

1594
01:21:21,449 --> 01:21:26,829
think no Lawrence it won't the warrants

1595
01:21:25,360 --> 01:21:31,659
may have a proposal as to how to

1596
01:21:26,829 --> 01:21:34,000
reconcile reconcile defining a defining

1597
01:21:31,659 --> 01:21:36,489
a ue ID that's specific to a service

1598
01:21:34,000 --> 01:21:37,270
provider Shawn not going to talk too

1599
01:21:36,489 --> 01:21:39,730
much about that

1600
01:21:37,270 --> 01:21:43,780
there's also hardware version which is

1601
01:21:39,730 --> 01:21:46,178
the chip version context so this is

1602
01:21:43,780 --> 01:21:47,829
somewhat so this may be related a little

1603
01:21:46,179 --> 01:21:50,530
bit to what you were talking yank and

1604
01:21:47,829 --> 01:21:52,929
that is the cotton this is a this is a

1605
01:21:50,530 --> 01:21:55,389
claim defining the context of the

1606
01:21:52,929 --> 01:21:57,340
attestation so is it supposed to be used

1607
01:21:55,389 --> 01:22:00,070
for authentication is it supposed to be

1608
01:21:57,340 --> 01:22:01,690
used for certificate issuance is it

1609
01:22:00,070 --> 01:22:03,400
supposed to be designated for this

1610
01:22:01,690 --> 01:22:04,839
particular bear fire that's not

1611
01:22:03,400 --> 01:22:10,920
something that we've we've anticipated

1612
01:22:04,840 --> 01:22:10,920
but that could be another thing yeah

1613
01:22:11,940 --> 01:22:18,750
yeah PK hash this is a hash of the

1614
01:22:16,510 --> 01:22:21,130
public key provision by the OEM

1615
01:22:18,750 --> 01:22:23,530
specifically used for authenticated boot

1616
01:22:21,130 --> 01:22:26,650
I don't know I've been equivalent to eat

1617
01:22:23,530 --> 01:22:29,619
on there that is that's not common

1618
01:22:26,650 --> 01:22:30,820
terminology either that's quite a it's

1619
01:22:29,619 --> 01:22:33,369
quite a common concept in the

1620
01:22:30,820 --> 01:22:36,340
semiconductor industry yeah I think okay

1621
01:22:33,369 --> 01:22:38,320
PK hash first so um I assume that the

1622
01:22:36,340 --> 01:22:40,719
evidence does not come with the public

1623
01:22:38,320 --> 01:22:42,790
key but the hash of the public key and

1624
01:22:40,719 --> 01:22:44,889
then you go back to the Asura that is it

1625
01:22:42,790 --> 01:22:47,290
supply chain or vendor yeah and then we

1626
01:22:44,889 --> 01:22:49,989
resolve the hash was the extra public

1627
01:22:47,290 --> 01:22:54,909
key get it and now are finally able to

1628
01:22:49,989 --> 01:22:56,709
validate the religion provenance of the

1629
01:22:54,909 --> 01:22:59,379
evidence that's correct yeah so the use

1630
01:22:56,710 --> 01:23:02,050
case in the use case primarily is assume

1631
01:22:59,380 --> 01:23:03,849
that uh assume that I've done something

1632
01:23:02,050 --> 01:23:06,130
that you know it seemed that I let's

1633
01:23:03,849 --> 01:23:08,770
talk about like in a sweet suit context

1634
01:23:06,130 --> 01:23:10,650
suffer updating context assume that I

1635
01:23:08,770 --> 01:23:11,940
signed my

1636
01:23:10,650 --> 01:23:13,530
assume that I'm the main factor I'm

1637
01:23:11,940 --> 01:23:15,928
signing myself software updates with the

1638
01:23:13,530 --> 01:23:18,150
private key and there's a public key

1639
01:23:15,929 --> 01:23:22,170
there's a public key and sanchita in the

1640
01:23:18,150 --> 01:23:24,690
device or and and I verify according

1641
01:23:22,170 --> 01:23:26,940
according to that now suppose what

1642
01:23:24,690 --> 01:23:28,919
happens that I did is suppose that I

1643
01:23:26,940 --> 01:23:29,790
found out hope somehow the private Keys

1644
01:23:28,920 --> 01:23:31,650
gotten lost

1645
01:23:29,790 --> 01:23:33,239
you know disgruntled employee or

1646
01:23:31,650 --> 01:23:35,639
something like that I need to provision

1647
01:23:33,239 --> 01:23:37,530
a new public key on all these devices

1648
01:23:35,640 --> 01:23:38,670
before I start pushing software updates

1649
01:23:37,530 --> 01:23:41,009
onto them

1650
01:23:38,670 --> 01:23:43,949
well how do I know how do I know this

1651
01:23:41,010 --> 01:23:46,320
did this device is the tip of the public

1652
01:23:43,949 --> 01:23:48,629
key the public key that I'm using

1653
01:23:46,320 --> 01:23:51,030
well I can just query the PK hash and

1654
01:23:48,630 --> 01:23:53,489
get it via a testable result why is the

1655
01:23:51,030 --> 01:23:54,840
hash not also destroyed this assumption

1656
01:23:53,489 --> 01:23:57,870
of this is destroyed everything is

1657
01:23:54,840 --> 01:24:00,690
destroyed yes it would be if the device

1658
01:23:57,870 --> 01:24:01,820
is at the if if the device is updated

1659
01:24:00,690 --> 01:24:08,659
its public key store

1660
01:24:01,820 --> 01:24:11,909
what updated the assert retains like a

1661
01:24:08,659 --> 01:24:14,099
like a secret key derivation function to

1662
01:24:11,909 --> 01:24:15,719
reconstruct everything and then what

1663
01:24:14,100 --> 01:24:20,969
this was I mean it's usually like a

1664
01:24:15,719 --> 01:24:24,960
standard hash it's a sha-256 big index

1665
01:24:20,969 --> 01:24:28,699
is like a super for every device a mega

1666
01:24:24,960 --> 01:24:31,409
index hash index maintained by the

1667
01:24:28,699 --> 01:24:36,570
searcher provided to the remote

1668
01:24:31,409 --> 01:24:39,120
attestation function I guess II because

1669
01:24:36,570 --> 01:24:40,860
I don't get it so this this key that

1670
01:24:39,120 --> 01:24:43,590
you're this public key has nothing to do

1671
01:24:40,860 --> 01:24:46,949
with verifying at a stations yeah this

1672
01:24:43,590 --> 01:24:52,739
is only used to verify the software that

1673
01:24:46,949 --> 01:24:56,190
you're gonna run most different well the

1674
01:24:52,739 --> 01:24:58,530
the the the key that you're going to do

1675
01:24:56,190 --> 01:25:01,230
to know that the software that you're

1676
01:24:58,530 --> 01:25:02,610
gonna so it's the thani key to boot so

1677
01:25:01,230 --> 01:25:04,860
the the software that you're going to

1678
01:25:02,610 --> 01:25:07,440
boot has to be signed by something so

1679
01:25:04,860 --> 01:25:09,659
the person that produces the software

1680
01:25:07,440 --> 01:25:11,759
that's going to be run has the private

1681
01:25:09,659 --> 01:25:14,009
key and then the the device has the

1682
01:25:11,760 --> 01:25:16,739
public key so that the device uses that

1683
01:25:14,010 --> 01:25:18,510
to verify the software it's implicit at

1684
01:25:16,739 --> 01:25:20,619
is station by origination it's not even

1685
01:25:18,510 --> 01:25:24,530
attestation

1686
01:25:20,619 --> 01:25:29,959
then yeah it is sometimes it's a

1687
01:25:24,530 --> 01:25:33,259
stand-in for an OEM ID because you know

1688
01:25:29,959 --> 01:25:35,239
that the it'll begin eom have to have

1689
01:25:33,260 --> 01:25:36,369
that private key otherwise they couldn't

1690
01:25:35,239 --> 01:25:40,308
have signed this offer to run on that

1691
01:25:36,369 --> 01:25:41,839
rise right and when you know Williams

1692
01:25:40,309 --> 01:25:44,389
misbehave and do all sorts of things

1693
01:25:41,840 --> 01:25:45,979
sometimes that works right now there's

1694
01:25:44,389 --> 01:25:49,130
another difference the service provider

1695
01:25:45,979 --> 01:25:51,079
ID I believe that that like I said

1696
01:25:49,130 --> 01:25:52,969
service provider concept and quiz is the

1697
01:25:51,079 --> 01:25:54,139
same as in teep we discussed this

1698
01:25:52,969 --> 01:25:56,719
morning in the team meeting that there

1699
01:25:54,139 --> 01:25:58,219
will be a t profile for each so I don't

1700
01:25:56,719 --> 01:26:00,699
know so I don't believe this is a

1701
01:25:58,219 --> 01:26:03,050
candidate for common Aliza with the

1702
01:26:00,699 --> 01:26:05,388
software inventory we just went through

1703
01:26:03,050 --> 01:26:06,650
the hum we're gonna do the so we're

1704
01:26:05,389 --> 01:26:11,119
going to be defining software inventory

1705
01:26:06,650 --> 01:26:12,709
claim quasi token has to have two claims

1706
01:26:11,119 --> 01:26:15,110
specific to that there's something

1707
01:26:12,709 --> 01:26:17,150
called the QC version Qualcomm secure

1708
01:26:15,110 --> 01:26:19,459
execution environment but it's really

1709
01:26:17,150 --> 01:26:21,409
two t ee version there's also the

1710
01:26:19,459 --> 01:26:23,780
firmware version as well so this is

1711
01:26:21,409 --> 01:26:25,429
firmware you specifically for

1712
01:26:23,780 --> 01:26:28,579
bootstrapping advice okay I'm running

1713
01:26:25,429 --> 01:26:30,679
out of time here we mentioned earlier on

1714
01:26:28,579 --> 01:26:33,530
the public key claim certificate signing

1715
01:26:30,679 --> 01:26:37,400
request we actually have the ability to

1716
01:26:33,530 --> 01:26:39,709
carry pkcs 10 compliant CSR in the

1717
01:26:37,400 --> 01:26:41,299
attestation token you might say why do

1718
01:26:39,709 --> 01:26:43,610
you did why are you not sending it

1719
01:26:41,300 --> 01:26:45,499
separately well it's a potentially saves

1720
01:26:43,610 --> 01:26:48,308
a round-trip and for IOT devices that's

1721
01:26:45,499 --> 01:26:48,309
very important yeah

1722
01:26:48,610 --> 01:26:54,949
security state now this is actually

1723
01:26:50,840 --> 01:27:04,849
something that I hope we consider yeah

1724
01:26:54,949 --> 01:27:07,280
sorry security state so once it talked

1725
01:27:04,849 --> 01:27:08,059
about you know representation a debug we

1726
01:27:07,280 --> 01:27:09,559
talked a little bit about the

1727
01:27:08,059 --> 01:27:12,199
representation secure good state

1728
01:27:09,559 --> 01:27:13,939
actually a lot of that is good a lot of

1729
01:27:12,199 --> 01:27:15,589
that is controlled in a fuse or a

1730
01:27:13,939 --> 01:27:17,510
one-time programmable memory

1731
01:27:15,590 --> 01:27:20,959
I'm calling us user a but it could but

1732
01:27:17,510 --> 01:27:23,300
really programmable memory is

1733
01:27:20,959 --> 01:27:26,019
non-volatile and it could come in the

1734
01:27:23,300 --> 01:27:28,429
form of electronics user a may not

1735
01:27:26,019 --> 01:27:30,210
security stayed in the quiz token is

1736
01:27:28,429 --> 01:27:33,719
actually a survey of the bit

1737
01:27:30,210 --> 01:27:36,449
bit setting in in that non-volatile

1738
01:27:33,719 --> 01:27:39,739
memory that actually covered the debug

1739
01:27:36,449 --> 01:27:42,419
state or in a secure boot state in the

1740
01:27:39,739 --> 01:27:48,599
SSE is that something we would consider

1741
01:27:42,420 --> 01:27:51,150
for the if for this uh for each that's

1742
01:27:48,600 --> 01:27:53,400
something we can take offline app hash

1743
01:27:51,150 --> 01:27:56,009
well this is actually suitable for the

1744
01:27:53,400 --> 01:27:58,500
TE model it's actually the hash of the

1745
01:27:56,010 --> 01:28:00,810
client app that's contained at a station

1746
01:27:58,500 --> 01:28:05,610
token that will be in a T profile so I

1747
01:28:00,810 --> 01:28:09,360
don't believe that it's really really so

1748
01:28:05,610 --> 01:28:12,449
is we have to dwell on it much further

1749
01:28:09,360 --> 01:28:14,849
so I some final questions should

1750
01:28:12,449 --> 01:28:18,599
security OTPs be sent directly or the

1751
01:28:14,850 --> 01:28:20,190
information should sure the information

1752
01:28:18,600 --> 01:28:21,840
be conveyed via representative claims

1753
01:28:20,190 --> 01:28:24,719
I'll put this back of the man lists we

1754
01:28:21,840 --> 01:28:26,640
don't need to hum today I mentioned what

1755
01:28:24,719 --> 01:28:29,250
context was should we have a context

1756
01:28:26,640 --> 01:28:31,800
claim what how's the attestation token

1757
01:28:29,250 --> 01:28:33,810
what are the restrictions on the usage

1758
01:28:31,800 --> 01:28:37,170
of the attestation token is conveyed by

1759
01:28:33,810 --> 01:28:39,659
the tester we mentioned software

1760
01:28:37,170 --> 01:28:41,480
inventory and we may I discussed a

1761
01:28:39,659 --> 01:28:43,949
little bit on device I did identifiers

1762
01:28:41,480 --> 01:28:46,049
te considerations I'm not going to get

1763
01:28:43,949 --> 01:28:48,000
into this here because we already said

1764
01:28:46,050 --> 01:28:49,440
we're going to do a T profile but these

1765
01:28:48,000 --> 01:28:52,260
are some things that we could actually

1766
01:28:49,440 --> 01:28:57,690
be considered as part of a teep profile

1767
01:28:52,260 --> 01:29:00,540
so yeah so is your intent because you

1768
01:28:57,690 --> 01:29:03,178
submitted a draft is your intent to

1769
01:29:00,540 --> 01:29:06,870
bring the draft in as a potential

1770
01:29:03,179 --> 01:29:09,780
profile yes yeah yes it will be a

1771
01:29:06,870 --> 01:29:11,940
potential profile but you want I do want

1772
01:29:09,780 --> 01:29:13,800
to have it consistent I do want to

1773
01:29:11,940 --> 01:29:16,530
resolve these questions whether some of

1774
01:29:13,800 --> 01:29:18,840
these claims they mention here go heat

1775
01:29:16,530 --> 01:29:21,000
or came along in the profile so I need

1776
01:29:18,840 --> 01:29:27,300
when you pose it just make the

1777
01:29:21,000 --> 01:29:28,920
clarification what is it preferred way

1778
01:29:27,300 --> 01:29:29,909
would you like me to file issues or do

1779
01:29:28,920 --> 01:29:33,449
you want me to put it on the mailing

1780
01:29:29,909 --> 01:29:41,250
list the issues make it more formal and

1781
01:29:33,449 --> 01:29:42,659
that way we can okay okay and that'll

1782
01:29:41,250 --> 01:29:44,150
give you guidance system what goes in

1783
01:29:42,659 --> 01:29:48,509
the profile to

1784
01:29:44,150 --> 01:29:51,170
we'll just skip one side please please

1785
01:29:48,510 --> 01:29:51,170
this is Aang

1786
01:29:52,430 --> 01:29:57,060
sure you said something about the slide

1787
01:29:54,990 --> 01:30:00,990
it's not on the slide you wanted to add

1788
01:29:57,060 --> 01:30:06,300
something here a specific claim that

1789
01:30:00,990 --> 01:30:09,480
does not highlight it here what was it I

1790
01:30:06,300 --> 01:30:10,560
think I've highlighted everything here

1791
01:30:09,480 --> 01:30:12,809
earlier in the deck

1792
01:30:10,560 --> 01:30:18,260
I think context we discuss a context

1793
01:30:12,810 --> 01:30:22,260
thank you yeah no it is it's just yeah

1794
01:30:18,260 --> 01:30:28,260
yeah okay might that be a to the

1795
01:30:22,260 --> 01:30:30,300
audience Tech and CWT audience tag no it

1796
01:30:28,260 --> 01:30:33,180
could be yeah I've thought about that

1797
01:30:30,300 --> 01:30:36,270
before too I think though there I think

1798
01:30:33,180 --> 01:30:39,270
it does an audience tag you would have

1799
01:30:36,270 --> 01:30:42,210
to you would have it would have the

1800
01:30:39,270 --> 01:30:44,280
usage entity usage of the token would be

1801
01:30:42,210 --> 01:30:47,670
implicit in the audience tag so

1802
01:30:44,280 --> 01:30:50,460
basically they would have to represent

1803
01:30:47,670 --> 01:30:52,950
that and I don't think it's explicit

1804
01:30:50,460 --> 01:30:57,150
we're out of time so we should continue

1805
01:30:52,950 --> 01:30:59,880
this on the list then it has to be quick

1806
01:30:57,150 --> 01:31:02,940
because we're over time that's okay

1807
01:30:59,880 --> 01:31:05,430
let's take it to the list okay thank you

1808
01:31:02,940 --> 01:31:08,790
all right so we're gonna reconvene

1809
01:31:05,430 --> 01:31:14,000
Friday at 10 a.m. we have a very full

1810
01:31:08,790 --> 01:31:17,400
agenda then so expect very crisp okay

1811
01:31:14,000 --> 01:31:20,600
discussions thank you bye

1812
01:31:17,400 --> 01:31:47,639
blue sheets where's the blue sheet and

1813
01:31:20,600 --> 01:31:51,710
did everybody sign it who has the blue

1814
01:31:47,640 --> 01:31:51,710
sheet can you please bring it up

1815
01:31:51,730 --> 01:31:55,570
what you see like that is

