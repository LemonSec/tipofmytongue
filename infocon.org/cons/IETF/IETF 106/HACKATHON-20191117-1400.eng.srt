1
00:00:30,770 --> 00:00:33,820
[Music]

2
00:00:33,989 --> 00:00:38,140
okay

3
00:00:35,320 --> 00:00:39,760
hey there's two o'clock so we're just

4
00:00:38,140 --> 00:00:43,629
about to get started with the

5
00:00:39,760 --> 00:00:46,320
presentations is anyone still in the

6
00:00:43,629 --> 00:00:50,649
process of uploading your presentation

7
00:00:46,320 --> 00:00:52,660
okay so we have a few hands if you're

8
00:00:50,649 --> 00:00:55,899
able to upload it in like the next 30

9
00:00:52,660 --> 00:00:58,120
seconds I'm going to download everything

10
00:00:55,899 --> 00:00:59,769
that's there and we'll essentially run

11
00:00:58,120 --> 00:01:02,649
through everything that that's there at

12
00:00:59,769 --> 00:01:05,619
this time and then afterwards I'll go

13
00:01:02,649 --> 00:01:07,869
back and we can individually pick up

14
00:01:05,619 --> 00:01:09,880
ones that we missed or that God updated

15
00:01:07,869 --> 00:01:11,350
or something like that but just to try

16
00:01:09,880 --> 00:01:13,780
to speed it up I'm going to pull

17
00:01:11,350 --> 00:01:15,640
everything now and we'll just run

18
00:01:13,780 --> 00:01:17,380
through it in order and plus that way

19
00:01:15,640 --> 00:01:22,560
you can kind of see where you are in the

20
00:01:17,380 --> 00:01:22,560
list and when your your slots coming up

21
00:02:10,590 --> 00:02:22,000
yes it's available yeah are you yeah

22
00:02:19,720 --> 00:02:24,099
okay are you are you ready maybe so I

23
00:02:22,000 --> 00:02:26,420
just I don't forget because you won't be

24
00:02:24,099 --> 00:02:40,910
in the list although I'll let you go

25
00:02:26,420 --> 00:03:12,200
if that works here why don't you why

26
00:02:40,910 --> 00:03:14,660
don't you go ahead and pull it up yep

27
00:03:12,200 --> 00:03:18,560
when it's loading it's it's a bit slow

28
00:03:14,660 --> 00:03:19,850
still okay at the moment okay I'll leave

29
00:03:18,560 --> 00:03:21,530
it there and I'm just gonna make a

30
00:03:19,850 --> 00:03:27,230
couple of announcements so hopefully

31
00:03:21,530 --> 00:03:30,739
it's it's loaded with some time okay so

32
00:03:27,230 --> 00:03:33,380
so the way this is going to work is you

33
00:03:30,739 --> 00:03:37,310
know we have that three minute time

34
00:03:33,380 --> 00:03:39,260
limit as I mentioned rod here will be

35
00:03:37,310 --> 00:03:41,870
keeping he'll be the timekeeper and

36
00:03:39,260 --> 00:03:44,358
he'll give you kind of a nice like sort

37
00:03:41,870 --> 00:03:46,579
of one-minute warning when you have only

38
00:03:44,359 --> 00:03:50,690
one minute and then he'll give you a

39
00:03:46,579 --> 00:03:53,630
less nice you know notification I guess

40
00:03:50,690 --> 00:03:56,000
when your time's up if you don't wrap up

41
00:03:53,630 --> 00:04:00,950
in like two or three seconds there'll be

42
00:03:56,000 --> 00:04:01,940
something even worse so everyone start

43
00:04:00,950 --> 00:04:03,738
clapping okay

44
00:04:01,940 --> 00:04:06,799
we can use that practice that sounds

45
00:04:03,739 --> 00:04:08,540
good so yeah please do mind your time

46
00:04:06,799 --> 00:04:09,620
and and realize we want to get through

47
00:04:08,540 --> 00:04:13,760
all these and we have a lot of

48
00:04:09,620 --> 00:04:15,980
presentations fortunately so okay so

49
00:04:13,760 --> 00:04:19,608
we'll get started the first one is not

50
00:04:15,980 --> 00:04:23,240
slides it's a website and turned over to

51
00:04:19,608 --> 00:04:24,770
you cool thank you this was not what I'd

52
00:04:23,240 --> 00:04:27,830
planned to do in the geomap session

53
00:04:24,770 --> 00:04:29,389
today I'm brawn this is topic box which

54
00:04:27,830 --> 00:04:31,580
is one of fast miles products that was

55
00:04:29,389 --> 00:04:34,250
built on top of jam app even before she

56
00:04:31,580 --> 00:04:36,560
I became a standard and it's a mailing

57
00:04:34,250 --> 00:04:39,970
list product so I've slept in all of the

58
00:04:36,560 --> 00:04:39,970
ICF mailing lists

59
00:04:39,980 --> 00:04:43,670
see there's quite a lot of them here and

60
00:04:42,170 --> 00:04:46,340
showing what can be done with something

61
00:04:43,670 --> 00:04:48,500
like a powerful search searching for

62
00:04:46,340 --> 00:04:53,719
anything by me on any of the mailing

63
00:04:48,500 --> 00:04:56,270
lists over the years and we can scroll

64
00:04:53,720 --> 00:05:00,530
through here and see all the stuff I've

65
00:04:56,270 --> 00:05:02,750
done on every ohdf mailing list and you

66
00:05:00,530 --> 00:05:04,609
can search for anyone in there over the

67
00:05:02,750 --> 00:05:07,100
entire corpus of gigabytes of mail and

68
00:05:04,610 --> 00:05:07,580
it's really really fast so this this is

69
00:05:07,100 --> 00:05:09,980
Sir

70
00:05:07,580 --> 00:05:11,630
J map as it can be used right now I'll

71
00:05:09,980 --> 00:05:13,340
send a link to this around once we're

72
00:05:11,630 --> 00:05:15,110
happy that it's a little bit more stable

73
00:05:13,340 --> 00:05:17,330
and everyone can have a play with it it

74
00:05:15,110 --> 00:05:18,440
slopes in in slightly less than real

75
00:05:17,330 --> 00:05:21,740
time because it's pulling from our map

76
00:05:18,440 --> 00:05:25,040
but this is what you can do with modern

77
00:05:21,740 --> 00:05:28,760
IMAP a modern email standards I'm at

78
00:05:25,040 --> 00:05:32,900
replacement feel free to poke around in

79
00:05:28,760 --> 00:05:35,020
ITF topic box - scratch comm that's all

80
00:05:32,900 --> 00:05:35,020
I've got

81
00:05:35,050 --> 00:05:47,710
you don't want me to search anything

82
00:05:37,130 --> 00:06:11,930
while we're here come along to this cool

83
00:05:47,710 --> 00:06:13,940
is next get back my okay so different

84
00:06:11,930 --> 00:06:17,030
than usual all just seems by default it

85
00:06:13,940 --> 00:06:19,280
put things in reverse alphabetical order

86
00:06:17,030 --> 00:06:22,669
so we're gonna go go backwards which

87
00:06:19,280 --> 00:06:24,169
maybe is a good way so so you I'm just

88
00:06:22,670 --> 00:06:26,600
gonna go in order here so the first

89
00:06:24,170 --> 00:06:28,400
one's going to be Yang and then se e and

90
00:06:26,600 --> 00:06:32,560
so on so you kind of have an idea when

91
00:06:28,400 --> 00:06:36,099
your slot is up so yang mediator who's

92
00:06:32,560 --> 00:06:36,100
presenting that one

93
00:06:43,789 --> 00:06:48,120
one other thing I should warn you to

94
00:06:46,020 --> 00:06:50,219
advance the slides use the left and

95
00:06:48,120 --> 00:06:52,319
right arrow as opposed to the up and

96
00:06:50,220 --> 00:07:11,090
down if you up and down it just kind of

97
00:06:52,319 --> 00:07:11,090
scrolls through the slides here's the

98
00:07:12,500 --> 00:07:18,900
description of our hex down this time

99
00:07:16,020 --> 00:07:34,169
and this time our hack song is about as

100
00:07:18,900 --> 00:07:38,989
a v6 weepy and young mediator next so

101
00:07:34,169 --> 00:07:46,130
here is our hack song plan we we have

102
00:07:38,990 --> 00:07:49,159
things when we when we developing the

103
00:07:46,130 --> 00:07:53,729
ietf service modeling and also the

104
00:07:49,159 --> 00:07:58,639
device model we we have facing this kind

105
00:07:53,729 --> 00:08:03,570
of problem here on the left hand side

106
00:07:58,639 --> 00:08:08,669
there's a the Sdn controller

107
00:08:03,570 --> 00:08:12,150
architecture like in a lot of deployment

108
00:08:08,669 --> 00:08:16,139
most as the in controllers needs to do

109
00:08:12,150 --> 00:08:20,638
like different vendor adapters to use

110
00:08:16,139 --> 00:08:26,240
different vendor native young to manage

111
00:08:20,639 --> 00:08:31,080
the whole network but we also have some

112
00:08:26,240 --> 00:08:35,909
service provider have other requirements

113
00:08:31,080 --> 00:08:38,120
from them like the they they have their

114
00:08:35,909 --> 00:08:42,689
requirements they don't want you like

115
00:08:38,120 --> 00:08:47,430
facing different vendor specific yum

116
00:08:42,690 --> 00:08:53,230
modeling so they thinking maybe they can

117
00:08:47,430 --> 00:08:56,719
use IETF native young to manage all the

118
00:08:53,230 --> 00:09:00,860
devices and a network and here's our

119
00:08:56,720 --> 00:09:06,860
proposal to this kind of problem so we

120
00:09:00,860 --> 00:09:12,290
are proposing to use a mediator as a as

121
00:09:06,860 --> 00:09:15,680
a solution to to migrate the vendors

122
00:09:12,290 --> 00:09:18,650
basically young to IETF young like in

123
00:09:15,680 --> 00:09:22,189
the right that right now

124
00:09:18,650 --> 00:09:26,900
like there's most vendors they don't

125
00:09:22,190 --> 00:09:33,400
have implemented IETF young right now

126
00:09:26,900 --> 00:09:37,420
but they can using the mediator as the

127
00:09:33,400 --> 00:09:41,569
proxy to the ITF young modeling when

128
00:09:37,420 --> 00:09:46,250
managing the the whole network the sd1

129
00:09:41,570 --> 00:09:51,320
controller in the network could could

130
00:09:46,250 --> 00:09:57,130
only use like idea as a basics or PGP SS

131
00:09:51,320 --> 00:10:02,120
to control the ho s a VPN services then

132
00:09:57,130 --> 00:10:05,540
when they're when most when right now

133
00:10:02,120 --> 00:10:09,410
at moment they can only use vendor

134
00:10:05,540 --> 00:10:13,849
specifically on to develop the SI basics

135
00:10:09,410 --> 00:10:19,250
function okay thanks so here is the

136
00:10:13,850 --> 00:10:22,880
topology and this is our hexam topology

137
00:10:19,250 --> 00:10:28,040
to to control the whole network and and

138
00:10:22,880 --> 00:10:33,200
here's our okay okay thank you here's

139
00:10:28,040 --> 00:10:38,120
our demo rego and will you be at the

140
00:10:33,200 --> 00:10:43,700
hack demo happy hour also okay

141
00:10:38,120 --> 00:10:45,650
oh no no worse so I think you're going

142
00:10:43,700 --> 00:10:47,600
to demo it at the hack demo happy hour

143
00:10:45,650 --> 00:10:52,100
to so that'd be great if people want

144
00:10:47,600 --> 00:10:55,220
more info let's go back

145
00:10:52,100 --> 00:10:58,520
yep I believe you are if I can figure

146
00:10:55,220 --> 00:11:01,120
out how to navigate back to where I want

147
00:10:58,520 --> 00:11:01,120
to be here

148
00:11:08,609 --> 00:11:23,139
okay and yes a wonderful the wonderful

149
00:11:14,559 --> 00:11:27,339
world of Chromebooks okay so we did a

150
00:11:23,139 --> 00:11:31,629
bit of work on the SCE project today

151
00:11:27,339 --> 00:11:34,749
with some congestion experienced being a

152
00:11:31,629 --> 00:11:41,259
small extension to ECM that we've been

153
00:11:34,749 --> 00:11:45,819
working on this year and this is covered

154
00:11:41,259 --> 00:11:52,419
by two drafts currently in the system

155
00:11:45,819 --> 00:11:55,179
and also related work in a new queuing

156
00:11:52,419 --> 00:11:58,480
algorithm which we hope will improve

157
00:11:55,179 --> 00:12:00,329
deployment we wanted to test some of the

158
00:11:58,480 --> 00:12:09,429
more challenging traffic scenarios

159
00:12:00,329 --> 00:12:10,599
according to RFC 503 3 I think and we

160
00:12:09,429 --> 00:12:16,600
just like to address some of the

161
00:12:10,600 --> 00:12:18,129
existing problems by revising aqm so the

162
00:12:16,600 --> 00:12:20,529
traffic scenarios we wanted to look at

163
00:12:18,129 --> 00:12:23,439
we're bursty links that are often

164
00:12:20,529 --> 00:12:25,179
associated with Wi-Fi these are

165
00:12:23,439 --> 00:12:29,949
typically problematic for high fidelity

166
00:12:25,179 --> 00:12:33,429
ecn schemes we first check verified that

167
00:12:29,949 --> 00:12:37,599
this affects SCE as well with the

168
00:12:33,429 --> 00:12:39,579
original marking scheme we wanted to

169
00:12:37,600 --> 00:12:41,529
check bi-directional traffic on the

170
00:12:39,579 --> 00:12:44,169
asymmetric path as that's another

171
00:12:41,529 --> 00:12:46,360
challenging scenario and also

172
00:12:44,169 --> 00:12:48,069
competition between SE and non su

173
00:12:46,360 --> 00:12:53,199
traffic has has been based on the

174
00:12:48,069 --> 00:12:56,199
mailing list as a concern so starting

175
00:12:53,199 --> 00:12:59,378
with the last point first we know that

176
00:12:56,199 --> 00:13:04,899
in a single queue se enabled aqm se

177
00:12:59,379 --> 00:13:07,959
gives way with just plain ecn support in

178
00:13:04,899 --> 00:13:10,929
the aqm se competes fairly in backwards

179
00:13:07,959 --> 00:13:15,518
compatibility mode and with fair queuing

180
00:13:10,929 --> 00:13:16,240
SEO also competes fairly now we

181
00:13:15,519 --> 00:13:20,080
introduced

182
00:13:16,240 --> 00:13:23,980
nasty queueing to have minimal extra

183
00:13:20,080 --> 00:13:28,450
complexity over a plain FIFO and that

184
00:13:23,980 --> 00:13:31,899
helps and to adjust the bursty links on

185
00:13:28,450 --> 00:13:33,520
the path we changed the SE marking over

186
00:13:31,899 --> 00:13:35,920
to use caudal instead of a read play

187
00:13:33,520 --> 00:13:39,520
about algorithm and this turns out to

188
00:13:35,920 --> 00:13:42,069
have helped wrath of a lot increasing

189
00:13:39,520 --> 00:13:45,550
throughput from seven to forty megabits

190
00:13:42,070 --> 00:13:46,450
per second we weren't really able to do

191
00:13:45,550 --> 00:13:51,010
very much with the bi-directional

192
00:13:46,450 --> 00:13:53,470
traffic when out of time but we were

193
00:13:51,010 --> 00:13:58,569
able to make some progress with a key CN

194
00:13:53,470 --> 00:14:03,520
and SCE compatibility where with the

195
00:13:58,570 --> 00:14:07,089
help of Logan and Richard who like we've

196
00:14:03,520 --> 00:14:11,829
added to the team list the work is

197
00:14:07,089 --> 00:14:23,500
mostly in our github repository and the

198
00:14:11,830 --> 00:14:31,149
link is in the slide thank you okay

199
00:14:23,500 --> 00:14:45,670
thank you very much and next up would be

200
00:14:31,149 --> 00:14:49,180
IP wave it looks like thank you okay

201
00:14:45,670 --> 00:14:52,390
okay hello this is a jump or jump from a

202
00:14:49,180 --> 00:14:55,709
sketchy you know this time IP working

203
00:14:52,390 --> 00:14:59,410
guru we demonstrate the IP of a wave

204
00:14:55,709 --> 00:15:06,849
ipv6 packet delivery over I go to the 11

205
00:14:59,410 --> 00:15:10,079
OC be a mode so the custom plan you can

206
00:15:06,850 --> 00:15:13,120
see the packet a transmission over OC be

207
00:15:10,079 --> 00:15:15,339
Moses so pickle environment the case T

208
00:15:13,120 --> 00:15:17,950
SLC associate the wave of communication

209
00:15:15,339 --> 00:15:24,670
important to so we are used the

210
00:15:17,950 --> 00:15:28,000
commercial Wi-Fi a module working on 5.9

211
00:15:24,670 --> 00:15:29,650
kike here at the SRC a friend also

212
00:15:28,000 --> 00:15:32,170
we are demonstrating opposing 16

213
00:15:29,650 --> 00:15:34,600
neighbor discovery walk in to the

214
00:15:32,170 --> 00:15:36,490
allowable or CB mode also we can

215
00:15:34,600 --> 00:15:41,890
demonstrate the video on the streaming

216
00:15:36,490 --> 00:15:44,140
service so to attract are relevant so

217
00:15:41,890 --> 00:15:48,550
what cut a ton and is a custom project

218
00:15:44,140 --> 00:15:51,699
so we fixed some compound error so the

219
00:15:48,550 --> 00:15:54,160
the Connor the comparation

220
00:15:51,700 --> 00:15:58,000
from the owner another University we

221
00:15:54,160 --> 00:16:01,329
tried to clear out the make file error

222
00:15:58,000 --> 00:16:04,920
or so we enable the PS atiyah

223
00:16:01,330 --> 00:16:08,710
up and also we enable the back camera

224
00:16:04,920 --> 00:16:11,229
driver so we can successfully a computer

225
00:16:08,710 --> 00:16:13,390
IP version 6 address and also UDP data

226
00:16:11,230 --> 00:16:17,440
delivery and also video there are

227
00:16:13,390 --> 00:16:20,500
delivery okay so this is a testing

228
00:16:17,440 --> 00:16:22,540
environment so we go over there we have

229
00:16:20,500 --> 00:16:25,300
a two or laptop computers we can insert

230
00:16:22,540 --> 00:16:29,650
the Ubuntu Linux and then we can enable

231
00:16:25,300 --> 00:16:31,449
the errors that nowadays call comm Wi-Fi

232
00:16:29,650 --> 00:16:34,780
module so we cannot successfully

233
00:16:31,450 --> 00:16:37,810
delivered so this is the video on the

234
00:16:34,780 --> 00:16:40,990
snapshot we unloaded a video on

235
00:16:37,810 --> 00:16:45,969
demonstration a clip or so we can unload

236
00:16:40,990 --> 00:16:49,900
it the menu for anybody who have

237
00:16:45,970 --> 00:16:53,589
interesting you can install intensity so

238
00:16:49,900 --> 00:16:56,530
this is the summary so we are learned so

239
00:16:53,589 --> 00:17:00,600
how to configure how to IP version 6

240
00:16:56,530 --> 00:17:03,189
delivery on top of a commercial Wi-Fi

241
00:17:00,600 --> 00:17:08,230
learning 5.29

242
00:17:03,190 --> 00:17:11,650
gigahertz ok also during this hackathon

243
00:17:08,230 --> 00:17:14,110
or we showed current the neighbor

244
00:17:11,650 --> 00:17:16,390
discovery I P wave is not a complete so

245
00:17:14,109 --> 00:17:18,909
I feel great working group we work on

246
00:17:16,390 --> 00:17:21,120
for our neighbor discovery to enable

247
00:17:18,910 --> 00:17:24,520
automatic illegal Opera Builder s also

248
00:17:21,119 --> 00:17:28,780
neighbor vicar recognition will be done

249
00:17:24,520 --> 00:17:31,330
in near future so we have a champion me

250
00:17:28,780 --> 00:17:34,210
and jung yong kim sun-shin university

251
00:17:31,330 --> 00:17:36,820
also post student ok also alliance ID

252
00:17:34,210 --> 00:17:39,880
that you can get a bit of clay and menu

253
00:17:36,820 --> 00:17:40,928
and also original contributor is check

254
00:17:39,880 --> 00:17:43,690
you know

255
00:17:40,929 --> 00:17:45,899
conquer University impossible thank you

256
00:17:43,690 --> 00:17:45,899
okay

257
00:17:45,930 --> 00:17:57,820
[Applause]

258
00:17:50,580 --> 00:18:10,119
okay next up we have a survey six mobile

259
00:17:57,820 --> 00:18:17,649
oh yeah sorry I didn't catch it this

260
00:18:10,119 --> 00:18:21,158
time but okay hello everyone this is

261
00:18:17,649 --> 00:18:23,549
Satoru presenting the IIT Hakkasan for

262
00:18:21,159 --> 00:18:25,059
its our basics mobile user praying I

263
00:18:23,549 --> 00:18:27,700
explained it a bit

264
00:18:25,059 --> 00:18:30,639
our Hawks on plan to simplify the mobile

265
00:18:27,700 --> 00:18:33,190
network its idea is describing this

266
00:18:30,639 --> 00:18:36,668
right it's a basic my buddies were

267
00:18:33,190 --> 00:18:38,860
praying while DMM working group so we

268
00:18:36,669 --> 00:18:41,799
implement mobile user plan requirement

269
00:18:38,860 --> 00:18:43,149
into one single main layer which is si

270
00:18:41,799 --> 00:18:45,789
v6 i PB square

271
00:18:43,149 --> 00:18:48,399
it's our basics to be able to integrate

272
00:18:45,789 --> 00:18:54,570
mobile is a friend to the one to the

273
00:18:48,399 --> 00:18:58,779
underlying layers so what got down is

274
00:18:54,570 --> 00:19:02,200
here we achieve 5g aware mobile user

275
00:18:58,779 --> 00:19:03,879
brain function I'm not sure whether you

276
00:19:02,200 --> 00:19:07,629
already aware or not the five deep

277
00:19:03,879 --> 00:19:10,980
pocket format and that's use opera

278
00:19:07,629 --> 00:19:14,590
implement on the EBP and p4 platform and

279
00:19:10,980 --> 00:19:18,159
now he's able to inter work with other

280
00:19:14,590 --> 00:19:18,749
sto protocol which is gtp you instead

281
00:19:18,159 --> 00:19:21,669
rest Mona

282
00:19:18,749 --> 00:19:24,129
so github repo is a better proof for

283
00:19:21,669 --> 00:19:27,759
your review and get you can get chrome

284
00:19:24,129 --> 00:19:30,639
and compare it to try that future in

285
00:19:27,759 --> 00:19:33,639
your local environment and the code has

286
00:19:30,639 --> 00:19:36,149
being submitted to be PPG eric to be

287
00:19:33,639 --> 00:19:38,199
debuts so one lady who is already

288
00:19:36,149 --> 00:19:44,018
verified by Jenkins

289
00:19:38,200 --> 00:19:47,919
so that'll be sure it's a runnable on

290
00:19:44,019 --> 00:19:53,440
your environment as well so what we run

291
00:19:47,919 --> 00:19:54,669
here Isaac the the BPP and a p4 is

292
00:19:53,440 --> 00:19:57,340
already

293
00:19:54,669 --> 00:19:59,639
jerrod platform to makes easy to

294
00:19:57,340 --> 00:20:02,738
implement new function to be extensible

295
00:19:59,639 --> 00:20:05,469
but we found another requirement to

296
00:20:02,739 --> 00:20:09,070
modularity for the platform to implement

297
00:20:05,470 --> 00:20:10,720
his a basic mobile function so that'll

298
00:20:09,070 --> 00:20:14,049
be a good feedback for the open source

299
00:20:10,720 --> 00:20:17,739
community and other things in the IE and

300
00:20:14,049 --> 00:20:23,559
my colleague walk home figure out a new

301
00:20:17,739 --> 00:20:27,009
functional idea to be implemented so

302
00:20:23,559 --> 00:20:28,029
this is wrap up our team member it's to

303
00:20:27,009 --> 00:20:31,210
see i'm murakami

304
00:20:28,029 --> 00:20:33,429
if he who is your past time to join the

305
00:20:31,210 --> 00:20:36,730
Hakkasan and Kentaro i Basava have

306
00:20:33,429 --> 00:20:40,690
become a leader and Phil Berger we also

307
00:20:36,730 --> 00:20:44,649
have the skeptic code to de generate the

308
00:20:40,690 --> 00:20:49,539
SR basic oh no gtp you a 5g our pocket

309
00:20:44,649 --> 00:20:53,918
which is very new and this is the lack

310
00:20:49,539 --> 00:20:57,789
of the the point URL to show the people

311
00:20:53,919 --> 00:21:00,100
code which is also available on the idea

312
00:20:57,789 --> 00:21:14,289
of Hakkasan github library so please

313
00:21:00,100 --> 00:21:20,998
check out thank you okay so next up is a

314
00:21:14,289 --> 00:21:20,999
ECA and then after that we have PII

315
00:21:23,700 --> 00:21:26,700
great

316
00:21:29,799 --> 00:21:34,820
thank you my god

317
00:21:32,899 --> 00:21:37,969
sister Michael from hallway and in today

318
00:21:34,820 --> 00:21:40,549
wave huh concern is about to implement

319
00:21:37,970 --> 00:21:43,490
one even condition action young day

320
00:21:40,549 --> 00:21:46,158
tomorrow and this is our hack plan we

321
00:21:43,490 --> 00:21:48,080
will we well find relatives and the

322
00:21:46,159 --> 00:21:50,570
possibility of the Union mother for our

323
00:21:48,080 --> 00:21:53,269
policy basically even amendment to

324
00:21:50,570 --> 00:21:55,249
implement and the test an event in

325
00:21:53,269 --> 00:21:57,889
easily folder location as of holding

326
00:21:55,249 --> 00:21:59,600
application in the network device and we

327
00:21:57,889 --> 00:22:01,279
also implement in test and the chain

328
00:21:59,600 --> 00:22:04,129
reaction of the coordinate the humans

329
00:22:01,279 --> 00:22:06,200
and here is a reference if you there are

330
00:22:04,129 --> 00:22:08,899
two rates our document appraiser a date

331
00:22:06,200 --> 00:22:11,779
and if you have some stressor in the

332
00:22:08,899 --> 00:22:15,610
comments they are welcomes and here is

333
00:22:11,779 --> 00:22:19,549
my use case and scenarios is a automatic

334
00:22:15,610 --> 00:22:22,070
detect if you don't have the possibility

335
00:22:19,549 --> 00:22:25,580
hunted module we need to do this work

336
00:22:22,070 --> 00:22:29,869
step by step and it rely on operators

337
00:22:25,580 --> 00:22:32,449
experience but now we have a Jungian

338
00:22:29,869 --> 00:22:35,480
module we can generalize a young

339
00:22:32,450 --> 00:22:39,590
instance and submitted to the at was

340
00:22:35,480 --> 00:22:41,659
ninety was implemented come rated to in

341
00:22:39,590 --> 00:22:44,779
person scraped and subscribe to the

342
00:22:41,659 --> 00:22:47,090
relative teacher and our sizes either if

343
00:22:44,779 --> 00:22:50,860
it meets the condition it will ask you

344
00:22:47,090 --> 00:22:53,658
some specified action to use as

345
00:22:50,860 --> 00:22:57,498
Detective works out some self-healing

346
00:22:53,659 --> 00:23:00,440
works and what we do you system away the

347
00:22:57,499 --> 00:23:02,720
wrapper on is a photo localization and

348
00:23:00,440 --> 00:23:05,779
the self held implication did not work

349
00:23:02,720 --> 00:23:07,730
device and to provide the out who are

350
00:23:05,779 --> 00:23:11,059
localization self-healing such as

351
00:23:07,730 --> 00:23:14,269
architect and here are way also to our

352
00:23:11,059 --> 00:23:16,879
one network with application to display

353
00:23:14,269 --> 00:23:19,519
that he was changing over time the last

354
00:23:16,879 --> 00:23:21,439
one is the young instance is a is a

355
00:23:19,519 --> 00:23:25,909
script general read by you say models

356
00:23:21,440 --> 00:23:30,940
and write one is a scenario eight shows

357
00:23:25,909 --> 00:23:34,330
that event appears and recover eight

358
00:23:30,940 --> 00:23:40,249
what will end okay

359
00:23:34,330 --> 00:23:42,470
we collected many useful comments and we

360
00:23:40,249 --> 00:23:45,740
know that yes you say young ml

361
00:23:42,470 --> 00:23:47,720
the yonder the mother can develop not an

362
00:23:45,740 --> 00:23:50,899
image to spot automatic photo

363
00:23:47,720 --> 00:23:53,990
localization and self Harry and also

364
00:23:50,899 --> 00:23:57,258
across many other use available use case

365
00:23:53,990 --> 00:24:03,649
such as mass filter and it is computing

366
00:23:57,259 --> 00:24:07,659
and we have a great member sentence

367
00:24:03,649 --> 00:24:10,309
their comments and contribution and also

368
00:24:07,659 --> 00:24:12,769
we will have shown our demo in

369
00:24:10,309 --> 00:24:13,908
tomorrow's happy hours and if you are

370
00:24:12,769 --> 00:24:24,320
interested in this topic

371
00:24:13,909 --> 00:24:32,379
it's just thank you okay so next up is

372
00:24:24,320 --> 00:24:32,379
PII and then after that we have I to NSF

373
00:24:46,509 --> 00:24:53,570
hey folks Santosh I'm part of crabs

374
00:24:50,629 --> 00:24:57,320
information security team so the topic

375
00:24:53,570 --> 00:25:00,289
is on okay so I'm Santosh I'm part of

376
00:24:57,320 --> 00:25:01,610
grabs information security team which is

377
00:25:00,289 --> 00:25:03,408
a right healing company based in

378
00:25:01,610 --> 00:25:04,580
Singapore I'm sure quite a few of you

379
00:25:03,409 --> 00:25:06,620
would might might have used there were

380
00:25:04,580 --> 00:25:09,740
companies services to reach the venue

381
00:25:06,620 --> 00:25:11,539
from our hotel so the topic is on a

382
00:25:09,740 --> 00:25:14,570
personal information identification and

383
00:25:11,539 --> 00:25:16,940
logging so basically you know like in in

384
00:25:14,570 --> 00:25:18,740
today's world they might have several of

385
00:25:16,940 --> 00:25:20,750
the log sources could be that servers or

386
00:25:18,740 --> 00:25:24,320
any of the other applications that might

387
00:25:20,750 --> 00:25:26,389
be inadvertently logging PII data and

388
00:25:24,320 --> 00:25:29,178
this is one of the challenges that we

389
00:25:26,389 --> 00:25:31,699
face and you know like regular I know

390
00:25:29,179 --> 00:25:35,659
like my day-to-day job stuff so how do

391
00:25:31,700 --> 00:25:37,879
we effectively identify and take right

392
00:25:35,659 --> 00:25:40,879
actions on PII data it could be

393
00:25:37,879 --> 00:25:43,250
redaction masking encryption or trimming

394
00:25:40,879 --> 00:25:46,100
it out from privacy reasons as well as

395
00:25:43,250 --> 00:25:47,929
data and compliance reasons before we

396
00:25:46,100 --> 00:25:51,019
send this data out to any third-party

397
00:25:47,929 --> 00:25:54,230
processing could be external sock knock

398
00:25:51,019 --> 00:25:56,090
or you know like a vendor who is trying

399
00:25:54,230 --> 00:25:58,070
to debug your appliances right

400
00:25:56,090 --> 00:26:01,070
so you might want to sort of trim that

401
00:25:58,070 --> 00:26:05,000
out so the hackathon plan was to you

402
00:26:01,070 --> 00:26:06,950
know like identify the conventional

403
00:26:05,000 --> 00:26:09,500
methods of you know like how do they

404
00:26:06,950 --> 00:26:12,080
work when you want to sort of parse the

405
00:26:09,500 --> 00:26:14,300
logs conventional methods like largely

406
00:26:12,080 --> 00:26:16,730
regular expression based but not a lot

407
00:26:14,300 --> 00:26:18,530
of contextual data you know like as

408
00:26:16,730 --> 00:26:20,290
opposed to the proposal that we are

409
00:26:18,530 --> 00:26:23,060
putting on the table with respect to

410
00:26:20,290 --> 00:26:25,010
tagging the data at the source before it

411
00:26:23,060 --> 00:26:28,250
is sent out for any sort of processing

412
00:26:25,010 --> 00:26:32,330
or parsing and then probably put this

413
00:26:28,250 --> 00:26:34,580
logs out and lovely so this is a lot

414
00:26:32,330 --> 00:26:36,199
pipeline that we have you know like try

415
00:26:34,580 --> 00:26:38,570
it out as part of our proof of concept

416
00:26:36,200 --> 00:26:40,490
so you have a log source could be like

417
00:26:38,570 --> 00:26:43,639
engine eggs or any sort of sis cloak

418
00:26:40,490 --> 00:26:45,680
files or whatsoever and put it for PA a

419
00:26:43,640 --> 00:26:48,620
data detection under action is one of

420
00:26:45,680 --> 00:26:50,930
the use cases that we are tried and we

421
00:26:48,620 --> 00:26:54,560
can clearly see that you know like you

422
00:26:50,930 --> 00:26:56,570
probably would have a lot lower accuracy

423
00:26:54,560 --> 00:26:59,419
but the conventional methods especially

424
00:26:56,570 --> 00:27:02,689
the red one indicating at the bottom is

425
00:26:59,420 --> 00:27:05,510
showing the hash index which is actually

426
00:27:02,690 --> 00:27:07,610
matching with probably a national ID see

427
00:27:05,510 --> 00:27:10,129
Singapore's NR IC or something is what

428
00:27:07,610 --> 00:27:13,790
we were using that also gets redacted as

429
00:27:10,130 --> 00:27:15,680
part of this so yeah so what we have

430
00:27:13,790 --> 00:27:17,960
learnt is you know like a regular

431
00:27:15,680 --> 00:27:20,990
expression based detection will induce

432
00:27:17,960 --> 00:27:23,060
false positives in our logging analysis

433
00:27:20,990 --> 00:27:26,610
as opposed to tagging so this is what it

434
00:27:23,060 --> 00:27:32,059
is thank you

435
00:27:26,610 --> 00:27:37,229
[Applause]

436
00:27:32,059 --> 00:27:45,899
okay so I to NSF is next and then on

437
00:27:37,230 --> 00:27:47,820
deck is mud okay thank you Taurus well

438
00:27:45,900 --> 00:27:52,320
this is a poor jung-gu

439
00:27:47,820 --> 00:27:55,200
so this is the tenth consecutive I to an

440
00:27:52,320 --> 00:27:58,559
SSR hackathon so over all three years we

441
00:27:55,200 --> 00:28:00,390
work for ohm I turn SF so previously we

442
00:27:58,559 --> 00:28:03,570
are demonstrated that the major

443
00:28:00,390 --> 00:28:06,510
interfaces such as registration to page

444
00:28:03,570 --> 00:28:09,450
consumer-facing and natasha key function

445
00:28:06,510 --> 00:28:13,020
MSF facing also we can demonstrate T the

446
00:28:09,450 --> 00:28:17,549
script avala generator so this time we

447
00:28:13,020 --> 00:28:20,789
want to demonstrate NSF the monitoring

448
00:28:17,549 --> 00:28:24,559
so this is not a complete yet as we are

449
00:28:20,789 --> 00:28:27,929
keep going for next year and comedy yeah

450
00:28:24,559 --> 00:28:30,870
so we use the open source especially

451
00:28:27,929 --> 00:28:34,340
comedy will be I used especially the

452
00:28:30,870 --> 00:28:38,189
notification picture will be used for

453
00:28:34,340 --> 00:28:44,129
monitoring okay so this is the cuss on

454
00:28:38,190 --> 00:28:46,919
project so we have so collaborator and

455
00:28:44,130 --> 00:28:50,640
also student and also the newcomer the

456
00:28:46,919 --> 00:28:52,580
two persons joined so the right side we

457
00:28:50,640 --> 00:28:55,740
have some information for this hackathon

458
00:28:52,580 --> 00:28:58,020
so this is the our eye tuna type of

459
00:28:55,740 --> 00:28:59,370
framework the left hand side our going

460
00:28:58,020 --> 00:29:01,408
to provide the intent of base

461
00:28:59,370 --> 00:29:04,110
descriptive surpise a right side we

462
00:29:01,409 --> 00:29:06,900
implemented using on table and actively

463
00:29:04,110 --> 00:29:10,139
and also Sdn technology based upon their

464
00:29:06,900 --> 00:29:14,220
light and also of the stack so this time

465
00:29:10,140 --> 00:29:16,260
we try to implement I turn SF a nap and

466
00:29:14,220 --> 00:29:19,230
I set up the monitoring so on waiting

467
00:29:16,260 --> 00:29:22,289
work so this is our basic are tracked

468
00:29:19,230 --> 00:29:25,169
okay so I am an editor for destruct we

469
00:29:22,289 --> 00:29:30,169
based on our castle experience we will

470
00:29:25,169 --> 00:29:32,610
revise this trap so we're under how to

471
00:29:30,169 --> 00:29:34,950
implement we got some direction of

472
00:29:32,610 --> 00:29:38,459
implementation or I turn except NSF

473
00:29:34,950 --> 00:29:41,070
prophase NSF yeah monitoring so this is

474
00:29:38,460 --> 00:29:42,659
the last piece of the arrow mode in our

475
00:29:41,070 --> 00:29:56,279
working group I think

476
00:29:42,659 --> 00:30:05,099
you okay so we have mud and then after

477
00:29:56,279 --> 00:30:07,019
mud will be BMP okay

478
00:30:05,099 --> 00:30:08,820
hi everybody so we had a slightly

479
00:30:07,019 --> 00:30:11,700
smaller table than we did last time this

480
00:30:08,820 --> 00:30:13,439
time we did some we were planning to do

481
00:30:11,700 --> 00:30:17,639
a little bit of a improvement on the mud

482
00:30:13,440 --> 00:30:20,820
visualizer we had we actually were going

483
00:30:17,639 --> 00:30:23,008
to do do a visualization of one

484
00:30:20,820 --> 00:30:27,090
particular device called yes SC comm

485
00:30:23,009 --> 00:30:30,840
recorder Brian showed up to implement

486
00:30:27,090 --> 00:30:32,609
mud and grasp and I was doing some

487
00:30:30,840 --> 00:30:35,459
debugging on an internal implementation

488
00:30:32,609 --> 00:30:37,168
and then our fault of the folks at

489
00:30:35,460 --> 00:30:40,679
c-calm have been looking to develop a

490
00:30:37,169 --> 00:30:44,519
model to use mud for to actually make

491
00:30:40,679 --> 00:30:46,229
devices accessible and in a scalable

492
00:30:44,519 --> 00:30:49,019
fashion such the device doesn't have to

493
00:30:46,229 --> 00:30:51,179
implement a lot of mechanism so a lot of

494
00:30:49,019 --> 00:30:53,429
this got done

495
00:30:51,179 --> 00:30:55,379
turns out Brian didn't need to work too

496
00:30:53,429 --> 00:30:57,419
hard at this he got the initial work

497
00:30:55,379 --> 00:30:58,769
going in about 30 minutes we still have

498
00:30:57,419 --> 00:31:01,440
some signature work to do I'll talk

499
00:30:58,769 --> 00:31:04,409
about that savio from the Federal

500
00:31:01,440 --> 00:31:06,269
Institute Brazil built out some

501
00:31:04,409 --> 00:31:07,590
capabilities in the visualizer if you

502
00:31:06,269 --> 00:31:09,929
haven't seen the visualizer it's pretty

503
00:31:07,590 --> 00:31:12,330
cool you can actually visualize mud

504
00:31:09,929 --> 00:31:14,849
files and and see what sort of access of

505
00:31:12,330 --> 00:31:19,168
device we'll get I did my debugging I

506
00:31:14,849 --> 00:31:22,109
have more debugging to do we actually

507
00:31:19,169 --> 00:31:26,309
did test the device and we were able to

508
00:31:22,109 --> 00:31:29,039
visualize it and we did some we did some

509
00:31:26,309 --> 00:31:31,590
initial modifications for the mud

510
00:31:29,039 --> 00:31:34,379
manager for parsing the file extension

511
00:31:31,590 --> 00:31:39,330
this is a little view of Brian's work

512
00:31:34,379 --> 00:31:41,340
that he's done with grasp top UI he's

513
00:31:39,330 --> 00:31:43,949
not yet comfortable pushing this into a

514
00:31:41,340 --> 00:31:45,539
pip repository given that yeah we have a

515
00:31:43,950 --> 00:31:47,309
has a couple more things he wants to do

516
00:31:45,539 --> 00:31:48,960
and we really want to bind it to one of

517
00:31:47,309 --> 00:31:51,960
the open source mud manager

518
00:31:48,960 --> 00:31:53,789
implementations here's like an approval

519
00:31:51,960 --> 00:31:55,950
flow that I've been working on such that

520
00:31:53,789 --> 00:31:56,440
one of the key things that we have for

521
00:31:55,950 --> 00:31:57,730
administer

522
00:31:56,440 --> 00:31:59,200
network administrator's we've got to

523
00:31:57,730 --> 00:32:00,220
make it simple for them to understand

524
00:31:59,200 --> 00:32:02,140
what's on their network and have a

525
00:32:00,220 --> 00:32:04,450
simple approval flow this is what we

526
00:32:02,140 --> 00:32:06,340
were working on we learned a fair amount

527
00:32:04,450 --> 00:32:08,920
actually the first of which is that

528
00:32:06,340 --> 00:32:10,300
autonomic computing one of the things we

529
00:32:08,920 --> 00:32:11,620
said was that on and I'm an autonomic

530
00:32:10,300 --> 00:32:13,899
competing needs to give some thought to

531
00:32:11,620 --> 00:32:17,020
ad-hoc authorization models in terms of

532
00:32:13,900 --> 00:32:18,010
what devices can talk we reinforce that

533
00:32:17,020 --> 00:32:19,720
mud is not meant for device

534
00:32:18,010 --> 00:32:22,270
configuration but network configuration

535
00:32:19,720 --> 00:32:24,840
did individual individual eyes device

536
00:32:22,270 --> 00:32:27,190
that it's not meant for device identity

537
00:32:24,840 --> 00:32:28,840
open source version and management is

538
00:32:27,190 --> 00:32:31,360
still a pain everybody still knows this

539
00:32:28,840 --> 00:32:32,620
and the Python API is really need a

540
00:32:31,360 --> 00:32:35,409
little bit of help regarding

541
00:32:32,620 --> 00:32:37,179
verification and CMS and here's the

542
00:32:35,410 --> 00:32:38,050
people who are involved there's an

543
00:32:37,180 --> 00:32:40,510
updated version of this presentation

544
00:32:38,050 --> 00:32:42,820
that has a nice picture and correct

545
00:32:40,510 --> 00:32:45,870
spelling in some places so thanks very

546
00:32:42,820 --> 00:32:50,429
much and see you in the next hackathon

547
00:32:45,870 --> 00:33:01,000
[Applause]

548
00:32:50,430 --> 00:33:03,640
okay so next up is OB MP and then after

549
00:33:01,000 --> 00:33:18,550
that we have a MB a and bi is that what

550
00:33:03,640 --> 00:33:21,700
that it was perfect hi everybody I'm

551
00:33:18,550 --> 00:33:24,940
Thomas from the PGP manipur monitoring

552
00:33:21,700 --> 00:33:27,130
protocol the girl working group and what

553
00:33:24,940 --> 00:33:29,020
we did is said doing some

554
00:33:27,130 --> 00:33:32,140
interoperability testing between data

555
00:33:29,020 --> 00:33:34,389
collection and routers focusing on the

556
00:33:32,140 --> 00:33:38,380
alt monitoring and peer up peer down

557
00:33:34,390 --> 00:33:41,190
message types which we have from the BMP

558
00:33:38,380 --> 00:33:44,710
local area an adjacency hip out and

559
00:33:41,190 --> 00:33:51,070
we're using the newly via shock the MPD

560
00:33:44,710 --> 00:33:54,160
sector and the updated PMS ECT this is

561
00:33:51,070 --> 00:33:58,480
our testing topology just three impalas

562
00:33:54,160 --> 00:34:01,960
PE routers and data collection below URL

563
00:33:58,480 --> 00:34:04,870
if you have VMP router which is

564
00:34:01,960 --> 00:34:06,970
implemented is tuned to new drafts you

565
00:34:04,870 --> 00:34:10,299
can access this website and send over

566
00:34:06,970 --> 00:34:13,139
the internet the BMP messages to us and

567
00:34:10,300 --> 00:34:17,610
I can have a look how they are look like

568
00:34:13,139 --> 00:34:21,580
we identified some gaps namely regarding

569
00:34:17,610 --> 00:34:21,970
local originated routes in the BMP local

570
00:34:21,580 --> 00:34:25,750
it

571
00:34:21,969 --> 00:34:27,819
it seems that RFC 42 71 doesn't really

572
00:34:25,750 --> 00:34:30,520
specify what the next stop activate

573
00:34:27,820 --> 00:34:33,850
attribute should look like we take that

574
00:34:30,520 --> 00:34:36,100
to the NGO working group another thing

575
00:34:33,850 --> 00:34:41,770
which we identified was regarding the

576
00:34:36,100 --> 00:34:44,049
pier up messages when in adjacency rip

577
00:34:41,770 --> 00:34:46,960
out pre and post policy configuration

578
00:34:44,050 --> 00:34:50,860
was applied depending on implementation

579
00:34:46,960 --> 00:34:51,668
either one or multiple messages were

580
00:34:50,860 --> 00:34:56,080
sent

581
00:34:51,668 --> 00:34:58,810
so and this ambiguity me meant some some

582
00:34:56,080 --> 00:35:01,569
hiccups on the on the data collection

583
00:34:58,810 --> 00:35:03,070
side and on the BMP d sector we take

584
00:35:01,570 --> 00:35:05,290
that as well to the working groups and

585
00:35:03,070 --> 00:35:08,770
see how other vendors implemented that

586
00:35:05,290 --> 00:35:11,020
and yeah the good thing was lab

587
00:35:08,770 --> 00:35:12,340
environment was working and the bad

588
00:35:11,020 --> 00:35:15,400
thing in the test took longer than

589
00:35:12,340 --> 00:35:19,590
expected so next time we're gonna do in

590
00:35:15,400 --> 00:35:23,830
107 we want to improve our testing and

591
00:35:19,590 --> 00:35:26,260
also at now these additional three

592
00:35:23,830 --> 00:35:29,369
drafts which are building up on the

593
00:35:26,260 --> 00:35:33,010
current one which we test it this time

594
00:35:29,369 --> 00:35:42,359
thanks a lot and these are all hackathon

595
00:35:33,010 --> 00:35:51,460
new timers thanks okay fantastic

596
00:35:42,359 --> 00:36:07,029
okay MBI you guys are next and after

597
00:35:51,460 --> 00:36:10,330
that we have sweat hi I'm max I mixed

598
00:36:07,030 --> 00:36:13,359
from taps and MB which are closely

599
00:36:10,330 --> 00:36:15,009
related the sake of fun so some of us

600
00:36:13,359 --> 00:36:16,720
worked on taps which is like a

601
00:36:15,010 --> 00:36:19,570
replacement for sockets basically we

602
00:36:16,720 --> 00:36:22,089
have been here before yeah those are the

603
00:36:19,570 --> 00:36:23,710
drafts we had interactions with and then

604
00:36:22,090 --> 00:36:27,150
we also try to work on

605
00:36:23,710 --> 00:36:31,000
Emme which is the new draft by Jake and

606
00:36:27,150 --> 00:36:33,760
so what did we get done in taps we

607
00:36:31,000 --> 00:36:36,940
managed to implement an endpoint racing

608
00:36:33,760 --> 00:36:38,500
which is neat we've had between agates

609
00:36:36,940 --> 00:36:40,150
once you implement the protocol Racing's

610
00:36:38,500 --> 00:36:43,809
in a way of endpoint racing and protocol

611
00:36:40,150 --> 00:36:45,339
racing and also working on local

612
00:36:43,809 --> 00:36:47,800
endpoint racing there have been a lot of

613
00:36:45,339 --> 00:36:49,230
fixes for taps during a heck of fun and

614
00:36:47,800 --> 00:36:51,250
we found some new interesting

615
00:36:49,230 --> 00:36:52,650
interactions and issues for Framus which

616
00:36:51,250 --> 00:36:57,010
are going to take to the working group

617
00:36:52,650 --> 00:36:59,349
then for mb we implemented the first

618
00:36:57,010 --> 00:37:02,050
draft implementation we created a first

619
00:36:59,349 --> 00:37:05,740
draft implementation of the protocol and

620
00:37:02,050 --> 00:37:07,630
that was also the first time our taps

621
00:37:05,740 --> 00:37:10,779
implementation in pytho and really got

622
00:37:07,630 --> 00:37:13,809
used so we brought a real framer for the

623
00:37:10,780 --> 00:37:16,150
first time in stuff like that yeah

624
00:37:13,809 --> 00:37:30,940
that's basically it basically that's

625
00:37:16,150 --> 00:37:33,460
thousand relevant git repos okay so

626
00:37:30,940 --> 00:37:42,490
Swift and then we have pluggable

627
00:37:33,460 --> 00:37:45,160
transports after this years thank you

628
00:37:42,490 --> 00:37:47,229
everybody so my name is Vincent

629
00:37:45,160 --> 00:37:57,819
we have been working on the sliding

630
00:37:47,230 --> 00:38:00,910
window FEC Korek yeah what's goal is to

631
00:37:57,819 --> 00:38:03,849
design an open source correct for

632
00:38:00,910 --> 00:38:06,118
recovering packet losses and reduce

633
00:38:03,849 --> 00:38:09,910
latency compared to traditional real

634
00:38:06,119 --> 00:38:13,000
ribbon for instance block codes there

635
00:38:09,910 --> 00:38:14,500
are strong relationships with the Korean

636
00:38:13,000 --> 00:38:17,559
efficient paper communication research

637
00:38:14,500 --> 00:38:21,549
group and we have been working on also

638
00:38:17,559 --> 00:38:24,730
on specification of the ILC correct for

639
00:38:21,549 --> 00:38:28,540
that source code for that which is

640
00:38:24,730 --> 00:38:32,890
almost published as RFC 86-81 it's a

641
00:38:28,540 --> 00:38:34,839
matter of days so the goal yes I kept on

642
00:38:32,890 --> 00:38:36,828
as I said is to design this reference

643
00:38:34,839 --> 00:38:40,308
open source free correct

644
00:38:36,829 --> 00:38:42,619
and also to challenge generic API

645
00:38:40,309 --> 00:38:48,259
internet draft that explains how to use

646
00:38:42,619 --> 00:38:51,469
such collects what we've been working on

647
00:38:48,259 --> 00:38:53,359
this time is to centrally the decoder

648
00:38:51,469 --> 00:38:55,969
side which is the complex part of a

649
00:38:53,359 --> 00:39:03,529
correct this is where you have to manage

650
00:38:55,969 --> 00:39:08,599
and do linear system decoding using some

651
00:39:03,529 --> 00:39:10,579
kind of Gaussian elimination so we took

652
00:39:08,599 --> 00:39:13,400
advantage of an existing library

653
00:39:10,579 --> 00:39:16,369
following that but this library was done

654
00:39:13,400 --> 00:39:21,140
was designed for different context with

655
00:39:16,369 --> 00:39:24,979
different logic and so this this is

656
00:39:21,140 --> 00:39:27,078
complex to line this this library with

657
00:39:24,979 --> 00:39:29,209
what we are doing here so this is

658
00:39:27,079 --> 00:39:33,469
basically what we've been doing

659
00:39:29,209 --> 00:39:36,140
thanks to Siri can do Mema and we also I

660
00:39:33,469 --> 00:39:37,940
don't find an issue in the generic API

661
00:39:36,140 --> 00:39:40,249
internet right - that's right we

662
00:39:37,940 --> 00:39:45,940
continue working on the Python wrapper

663
00:39:40,249 --> 00:39:49,488
as well as the testing C application -

664
00:39:45,940 --> 00:39:52,699
so small team free people including

665
00:39:49,489 --> 00:39:55,219
myself that I can do Mima if you are

666
00:39:52,699 --> 00:39:59,150
interested in is the github repository

667
00:39:55,219 --> 00:40:02,150
and you can also attend our research

668
00:39:59,150 --> 00:40:16,309
group meeting on Thursday afternoon

669
00:40:02,150 --> 00:40:27,259
thank you ok pluggable transports and

670
00:40:16,309 --> 00:40:32,239
after that is J map for D mail yeah hi

671
00:40:27,259 --> 00:40:34,940
everybody we work in the area of traffic

672
00:40:32,239 --> 00:40:37,009
obfuscation for Internet freedom and

673
00:40:34,940 --> 00:40:39,739
human rights and we've worked for a

674
00:40:37,009 --> 00:40:41,890
couple years now on an application level

675
00:40:39,739 --> 00:40:45,589
technology to help us do that to defeat

676
00:40:41,890 --> 00:40:47,328
the defeat deep packet inspection the

677
00:40:45,589 --> 00:40:48,920
idea of pluggable comes from the fact

678
00:40:47,329 --> 00:40:50,690
that it's hard to keep the internet open

679
00:40:48,920 --> 00:40:53,150
and the half-life of these

680
00:40:50,690 --> 00:40:54,260
jeez is pretty short and one of the

681
00:40:53,150 --> 00:40:56,270
reasons to be talking about this

682
00:40:54,260 --> 00:40:58,069
particular topic of usability today is

683
00:40:56,270 --> 00:40:59,569
that these things do change quickly

684
00:40:58,069 --> 00:41:01,279
enough that it's hard to keep users

685
00:40:59,569 --> 00:41:04,609
informed and hard to give users a new

686
00:41:01,280 --> 00:41:05,569
way to an understandable way to sort of

687
00:41:04,609 --> 00:41:08,540
stay in the game

688
00:41:05,569 --> 00:41:09,980
so we're looking to set up a create a

689
00:41:08,540 --> 00:41:11,630
development environment for us to look

690
00:41:09,980 --> 00:41:14,000
at some of the usability issues and the

691
00:41:11,630 --> 00:41:16,510
problems we face and so we set up this

692
00:41:14,000 --> 00:41:19,339
marionette which is a goal language

693
00:41:16,510 --> 00:41:22,700
implementation of something called uh

694
00:41:19,339 --> 00:41:25,430
parts of a finite state machine that

695
00:41:22,700 --> 00:41:27,230
does format transforming encryption so

696
00:41:25,430 --> 00:41:29,359
we can make one kind of traffic look

697
00:41:27,230 --> 00:41:31,250
like another kind of traffic and this

698
00:41:29,359 --> 00:41:33,460
gives us many ways to do that so it's a

699
00:41:31,250 --> 00:41:36,290
good environment that has many options

700
00:41:33,460 --> 00:41:37,880
for the user to select all of which are

701
00:41:36,290 --> 00:41:39,140
completely opaque if you're just a

702
00:41:37,880 --> 00:41:42,829
regular user and you need to get

703
00:41:39,140 --> 00:41:45,348
something done so we want to understand

704
00:41:42,829 --> 00:41:46,849
how to you know what the limitations of

705
00:41:45,349 --> 00:41:49,460
the current model this marionette

706
00:41:46,849 --> 00:41:51,319
project is are along with what the

707
00:41:49,460 --> 00:41:53,630
global issues are that users face and

708
00:41:51,319 --> 00:41:54,920
can we put these things together to give

709
00:41:53,630 --> 00:41:58,069
us give ourselves a good development

710
00:41:54,920 --> 00:41:59,960
model for looking at user experience and

711
00:41:58,069 --> 00:42:02,960
making some claims about future user

712
00:41:59,960 --> 00:42:05,510
experience this is how the idea of

713
00:42:02,960 --> 00:42:09,589
pluggable transports works overall here

714
00:42:05,510 --> 00:42:11,810
it is in in in marionette where you have

715
00:42:09,589 --> 00:42:15,369
a client that runs low is locally hosted

716
00:42:11,810 --> 00:42:18,380
on your device that helps you select a

717
00:42:15,369 --> 00:42:20,329
format transforming encryption mode that

718
00:42:18,380 --> 00:42:22,300
that is collected by a server which

719
00:42:20,329 --> 00:42:24,920
itself links to the application server

720
00:42:22,300 --> 00:42:26,510
so there's a number of things in here

721
00:42:24,920 --> 00:42:27,890
and our current model they're fixed and

722
00:42:26,510 --> 00:42:31,099
Static and they need to get a little bit

723
00:42:27,890 --> 00:42:34,279
more dynamic so we have to look at how

724
00:42:31,099 --> 00:42:36,230
do we bootstrap the client properly how

725
00:42:34,280 --> 00:42:40,430
does an application configure itself to

726
00:42:36,230 --> 00:42:42,470
use that use that that proxy and how do

727
00:42:40,430 --> 00:42:44,450
you select what kind of transform and

728
00:42:42,470 --> 00:42:46,279
what kind of technology pluggable

729
00:42:44,450 --> 00:42:48,560
transport technology you want to use and

730
00:42:46,280 --> 00:42:51,050
also which server it is do you select

731
00:42:48,560 --> 00:42:53,660
that'll implement that technology in the

732
00:42:51,050 --> 00:42:55,520
way you need so I'd like to thank the

733
00:42:53,660 --> 00:42:57,710
team at marionette who did this

734
00:42:55,520 --> 00:42:59,450
environment based on some some

735
00:42:57,710 --> 00:43:01,400
university research that was done first

736
00:42:59,450 --> 00:43:03,710
in Python and then another team

737
00:43:01,400 --> 00:43:04,520
implemented this and go our sponsor is

738
00:43:03,710 --> 00:43:06,320
inter news and

739
00:43:04,520 --> 00:43:08,240
we thank idea for giving us a chance to

740
00:43:06,320 --> 00:43:10,400
talk there's a lot more on pluggable

741
00:43:08,240 --> 00:43:12,049
transports at pluggable transports dot

742
00:43:10,400 --> 00:43:15,020
info when we have an internet draft on

743
00:43:12,050 --> 00:43:22,630
it also in the usual place thank you

744
00:43:15,020 --> 00:43:26,930
very very much okay and thank you

745
00:43:22,630 --> 00:43:40,790
alright so next up we have a game app

746
00:43:26,930 --> 00:43:42,740
for Gmail and after that is WebRTC hey

747
00:43:40,790 --> 00:43:44,450
everybody I'm Seth um can I just got a

748
00:43:42,740 --> 00:43:49,009
quick show of hands of who uses Gmail

749
00:43:44,450 --> 00:43:52,160
regularly that is a lot of people hi I'm

750
00:43:49,010 --> 00:43:54,380
Seth this is Neil from pass fail I so

751
00:43:52,160 --> 00:43:55,700
Neil's worked for the last good while to

752
00:43:54,380 --> 00:43:57,830
make a beautiful new application

753
00:43:55,700 --> 00:43:59,569
protocol for email clients to be able to

754
00:43:57,830 --> 00:44:02,060
work effectively because IMAP is

755
00:43:59,570 --> 00:44:03,710
terrible honestly unfortunately all of

756
00:44:02,060 --> 00:44:06,230
the people in the room here which is

757
00:44:03,710 --> 00:44:08,960
like about two-thirds of people who use

758
00:44:06,230 --> 00:44:11,870
Gmail today can't take advantage of

759
00:44:08,960 --> 00:44:14,420
beautiful new Jay map API and as a

760
00:44:11,870 --> 00:44:15,830
result you have awful loading bars when

761
00:44:14,420 --> 00:44:17,660
Gmail loads and you don't have a lot of

762
00:44:15,830 --> 00:44:19,790
options because third-party email

763
00:44:17,660 --> 00:44:21,740
clients need to implement email

764
00:44:19,790 --> 00:44:23,330
functionality specific for Gmail or they

765
00:44:21,740 --> 00:44:26,299
use IMAP both of which are vaguely

766
00:44:23,330 --> 00:44:27,560
terrible so um so we thought well

767
00:44:26,300 --> 00:44:30,650
wouldn't it be great if we had some sort

768
00:44:27,560 --> 00:44:34,310
of map from Gmail API Gmail husband a

769
00:44:30,650 --> 00:44:38,300
snake you guys too well gmail has an API

770
00:44:34,310 --> 00:44:39,830
yeah if we map Gmail API across the je

771
00:44:38,300 --> 00:44:41,990
map so that way if anyone wants to build

772
00:44:39,830 --> 00:44:44,660
a nice new modern email client you'll be

773
00:44:41,990 --> 00:44:48,200
able to do so easily and it'll work well

774
00:44:44,660 --> 00:44:50,299
so we did and this is a little J map um

775
00:44:48,200 --> 00:44:52,879
web client made which Neal worked on

776
00:44:50,300 --> 00:44:54,680
yeah so we already had this demo demo

777
00:44:52,880 --> 00:44:58,130
well climb which is open sources is on

778
00:44:54,680 --> 00:45:00,319
github and we just thought let's see if

779
00:44:58,130 --> 00:45:01,550
we can get that to talk CA also we

780
00:45:00,320 --> 00:45:03,530
quickly coded up this kind of

781
00:45:01,550 --> 00:45:07,130
translation layer in the middle and it

782
00:45:03,530 --> 00:45:09,560
baby works and you can list stuff yeah

783
00:45:07,130 --> 00:45:11,080
noon browser email um so that's what

784
00:45:09,560 --> 00:45:13,940
we've spent that weekend doing

785
00:45:11,080 --> 00:45:15,020
um and J map if anyone's curious to look

786
00:45:13,940 --> 00:45:16,400
at the slides is actually quite

787
00:45:15,020 --> 00:45:18,770
beautiful you can do these kind of

788
00:45:16,400 --> 00:45:22,640
recursive RPC queries

789
00:45:18,770 --> 00:45:24,650
unfortunately Gmail's api is oh yeah

790
00:45:22,640 --> 00:45:25,580
Gmail's api is kind of awkward and slow

791
00:45:24,650 --> 00:45:28,640
and we kept running into rate-limiting

792
00:45:25,580 --> 00:45:29,840
issues we quietly suspect that Gmail

793
00:45:28,640 --> 00:45:32,120
doesn't actually use their own API to

794
00:45:29,840 --> 00:45:35,240
build their own email clients and it

795
00:45:32,120 --> 00:45:36,410
sort of hasn't been exercised it'll be

796
00:45:35,240 --> 00:45:38,540
really great if anyone is interested

797
00:45:36,410 --> 00:45:40,069
come chat to us if anyone those people

798
00:45:38,540 --> 00:45:41,480
in the Gmail team or you know it'd be

799
00:45:40,070 --> 00:45:44,360
really great if Gmail included jam up

800
00:45:41,480 --> 00:45:47,000
and that way we could we could have all

801
00:45:44,360 --> 00:45:48,770
of the stuff working well so yeah if

802
00:45:47,000 --> 00:45:49,790
you're interested there's all this stuff

803
00:45:48,770 --> 00:45:51,620
stuff on github although unfortunately

804
00:45:49,790 --> 00:45:54,080
as we said it's all very proof of

805
00:45:51,620 --> 00:45:55,759
concept and I'm really be great if we

806
00:45:54,080 --> 00:45:57,680
could throw up a website which was you

807
00:45:55,760 --> 00:46:00,320
know gem up with Gmail already working

808
00:45:57,680 --> 00:46:01,460
but it's really slow and after you

809
00:46:00,320 --> 00:46:02,420
refresh it a couple times it starts

810
00:46:01,460 --> 00:46:05,360
taking or for a minute to load just

811
00:46:02,420 --> 00:46:06,410
because it's the right limit but come

812
00:46:05,360 --> 00:46:08,450
and find us afterwards if you want to

813
00:46:06,410 --> 00:46:20,720
see you live demo show you something see

814
00:46:08,450 --> 00:46:28,689
thank you okay so I believe next was web

815
00:46:20,720 --> 00:46:28,689
RTC and then after that we have a deep

816
00:46:31,270 --> 00:46:38,660
okay right thanks hey guys so the RTC

817
00:46:36,770 --> 00:46:41,500
web group was officially closed last

818
00:46:38,660 --> 00:46:43,399
year in Bangkok so it's been a year that

819
00:46:41,500 --> 00:46:45,410
officially the work he's done and of

820
00:46:43,400 --> 00:46:47,150
course there's a lot of blood left so

821
00:46:45,410 --> 00:46:49,339
we're coming to the hackathon to go deep

822
00:46:47,150 --> 00:46:51,920
into the stack and clean the last

823
00:46:49,340 --> 00:46:54,200
remaining stuff we were not as many

824
00:46:51,920 --> 00:46:56,240
people this time as usual in Asia that

825
00:46:54,200 --> 00:46:59,359
we were in Europe and so on but we still

826
00:46:56,240 --> 00:47:01,250
had some interesting project program so

827
00:46:59,360 --> 00:47:04,280
we had apple Intel and a few other

828
00:47:01,250 --> 00:47:08,660
coming today to try to bring a new codec

829
00:47:04,280 --> 00:47:11,150
in the RTP part of the stack everyone

830
00:47:08,660 --> 00:47:13,940
even though it's done at i/o media it

831
00:47:11,150 --> 00:47:16,040
touches RTP which is done at IETF so we

832
00:47:13,940 --> 00:47:17,690
wanted also to you to you know share the

833
00:47:16,040 --> 00:47:20,690
copies and look at all we can make him

834
00:47:17,690 --> 00:47:23,900
better and so on and so forth eventually

835
00:47:20,690 --> 00:47:27,170
we got a few bugs actually addressed

836
00:47:23,900 --> 00:47:29,390
with patch pending review in different

837
00:47:27,170 --> 00:47:32,020
github repository that touch on on the

838
00:47:29,390 --> 00:47:34,629
stack and we think we might progress

839
00:47:32,020 --> 00:47:36,280
into sharing some tools that are going

840
00:47:34,630 --> 00:47:39,520
to make bandwidth estimation and

841
00:47:36,280 --> 00:47:41,560
congestion control easier to debug and

842
00:47:39,520 --> 00:47:43,720
visualize across different group whether

843
00:47:41,560 --> 00:47:48,670
it is di vita core that takes care of

844
00:47:43,720 --> 00:47:50,140
the RTP protocol or our MCAT which take

845
00:47:48,670 --> 00:47:54,400
care you know specifically of the

846
00:47:50,140 --> 00:47:56,740
congestion control so globally less bugs

847
00:47:54,400 --> 00:47:59,710
address but a lot of very interesting

848
00:47:56,740 --> 00:48:02,049
discussion that should lead into shared

849
00:47:59,710 --> 00:48:06,430
tools and share development for the next

850
00:48:02,050 --> 00:48:10,240
IETF in Vancouver alright so the usual

851
00:48:06,430 --> 00:48:12,220
suspects plus a few first-timer Intel

852
00:48:10,240 --> 00:48:15,549
join us for the first time thanks and

853
00:48:12,220 --> 00:48:16,930
welcome I hope it's going to be good

854
00:48:15,550 --> 00:48:18,670
enough to make them come back and

855
00:48:16,930 --> 00:48:20,919
participate we were certainly happy to

856
00:48:18,670 --> 00:48:22,720
have yet another an implementer

857
00:48:20,920 --> 00:48:25,920
providing feedback to for the

858
00:48:22,720 --> 00:48:28,419
specification and another company based

859
00:48:25,920 --> 00:48:30,880
focusing on security and encryption that

860
00:48:28,420 --> 00:48:43,240
we wish is going to join us again oh

861
00:48:30,880 --> 00:48:57,490
thanks okay

862
00:48:43,240 --> 00:49:00,729
cheap is next and then MDT thank you

863
00:48:57,490 --> 00:49:02,470
this is teep three minutes talk doesn't

864
00:49:00,730 --> 00:49:05,050
mean I have to talk three minutes just

865
00:49:02,470 --> 00:49:11,220
going through slice great team will

866
00:49:05,050 --> 00:49:15,310
sorry misspelling and what we plan is

867
00:49:11,220 --> 00:49:17,529
evaluating the draft with origin is

868
00:49:15,310 --> 00:49:21,160
story from authority without a version

869
00:49:17,530 --> 00:49:24,940
and then in what highly modified to have

870
00:49:21,160 --> 00:49:30,160
a tea proposal and we brought few

871
00:49:24,940 --> 00:49:32,800
implementation to Tam which is as works

872
00:49:30,160 --> 00:49:35,850
as a server and the device to the

873
00:49:32,800 --> 00:49:38,580
different kind of device and

874
00:49:35,850 --> 00:49:41,040
got done is all pictures so I don't have

875
00:49:38,580 --> 00:49:44,640
to type on the slides so type on the

876
00:49:41,040 --> 00:49:47,970
table this is Eli on the tip Pam it's

877
00:49:44,640 --> 00:49:50,670
able to upload the TAS over here is Oba

878
00:49:47,970 --> 00:49:54,870
sons time and this is the device running

879
00:49:50,670 --> 00:49:57,270
on arm opti and hacking in the bucking

880
00:49:54,870 --> 00:50:04,560
and many things didn't work

881
00:49:57,270 --> 00:50:08,250
and finally yeah t transit application

882
00:50:04,560 --> 00:50:12,330
was able to install on the T and what we

883
00:50:08,250 --> 00:50:14,820
learned is many things it's it's written

884
00:50:12,330 --> 00:50:17,880
in the slides but I'm honestly for the

885
00:50:14,820 --> 00:50:21,720
implementation it's long long away Dave

886
00:50:17,880 --> 00:50:24,360
stamps and device is pretty much

887
00:50:21,720 --> 00:50:27,060
implemented but we need a strategy how

888
00:50:24,360 --> 00:50:31,430
to make it as a properly in the future

889
00:50:27,060 --> 00:50:34,440
of the reference implementation and

890
00:50:31,430 --> 00:50:38,310
that's the wrap up but before finishing

891
00:50:34,440 --> 00:50:41,070
it this implementation will cost a lot

892
00:50:38,310 --> 00:50:43,290
of a different kind of knowledge te how

893
00:50:41,070 --> 00:50:46,620
does it work in different kind of CPU

894
00:50:43,290 --> 00:50:48,509
and json seaboard and HTTP stack or have

895
00:50:46,620 --> 00:50:51,150
to be working perfectly to implement on

896
00:50:48,510 --> 00:50:53,790
something on top of it and how needs the

897
00:50:51,150 --> 00:51:10,350
knowledge of how the device boots sick

898
00:50:53,790 --> 00:51:17,480
so yes it's a lot of work thank you okay

899
00:51:10,350 --> 00:51:29,759
so MDT and after that we have a ssh HTTP

900
00:51:17,480 --> 00:51:32,940
4-5-1 forward and backward in the hello

901
00:51:29,760 --> 00:51:35,070
everyone from far away our project is

902
00:51:32,940 --> 00:51:37,110
used yong-dae tunnel tag to filter

903
00:51:35,070 --> 00:51:40,620
different discrete categories of yarn

904
00:51:37,110 --> 00:51:42,780
data knows within young modules and and

905
00:51:40,620 --> 00:51:45,330
provide a consistent representation

906
00:51:42,780 --> 00:51:47,970
reporting for the same same category of

907
00:51:45,330 --> 00:51:50,779
young data nodes we have two related

908
00:51:47,970 --> 00:51:50,779
drafts

909
00:51:51,229 --> 00:51:56,910
actually they exist existing Janusz

910
00:51:54,029 --> 00:51:59,160
telemetry provides a mechanism to select

911
00:51:56,910 --> 00:52:01,259
and subscribe your operational data

912
00:51:59,160 --> 00:52:03,989
object it's based on a selection filter

913
00:52:01,259 --> 00:52:07,219
but there is no document to discuss how

914
00:52:03,989 --> 00:52:10,099
the selection filter can be specified to

915
00:52:07,219 --> 00:52:13,019
address this issue we introduced the

916
00:52:10,099 --> 00:52:15,690
self-cleaning conception which can be

917
00:52:13,019 --> 00:52:18,359
interpreted as instruction that data no

918
00:52:15,690 --> 00:52:22,259
the selection principles so with the

919
00:52:18,359 --> 00:52:23,940
self explanation information so so with

920
00:52:22,259 --> 00:52:27,180
the self explanation information that's

921
00:52:23,940 --> 00:52:28,829
the net of the Netcom clients can select

922
00:52:27,180 --> 00:52:31,469
which type of the objects are of

923
00:52:28,829 --> 00:52:33,269
interest for example to extract the

924
00:52:31,469 --> 00:52:39,059
features from the management data

925
00:52:33,269 --> 00:52:40,618
objects such as CPU usage we develop a

926
00:52:39,059 --> 00:52:43,049
running code and deploy during the

927
00:52:40,619 --> 00:52:44,880
telemetry collector and provides module

928
00:52:43,049 --> 00:52:46,469
data node or to automatic tagging

929
00:52:44,880 --> 00:52:50,519
automatic alluring and automatic

930
00:52:46,469 --> 00:52:54,269
subscription mechanisms the left figure

931
00:52:50,519 --> 00:52:58,049
is out is our tag model we call the OPM

932
00:52:54,269 --> 00:53:00,180
model the over object type for example

933
00:52:58,049 --> 00:53:03,180
for example the interface is an object

934
00:53:00,180 --> 00:53:06,868
type and P for property the interface

935
00:53:03,180 --> 00:53:10,589
name we call it is the property and M

936
00:53:06,869 --> 00:53:14,699
for Mature the CPU usage or the receiver

937
00:53:10,589 --> 00:53:17,788
or the stand bytes is a matrix the right

938
00:53:14,699 --> 00:53:20,789
finger is how we realize our OPM model

939
00:53:17,789 --> 00:53:23,209
in our demo you can see we we collect

940
00:53:20,789 --> 00:53:25,410
the CPU usage from the two devices

941
00:53:23,209 --> 00:53:27,749
generally say without any

942
00:53:25,410 --> 00:53:30,538
pre-configuration the monitoring data

943
00:53:27,749 --> 00:53:32,399
can be collected and displayed can

944
00:53:30,539 --> 00:53:38,009
chemical acted matically and displayed

945
00:53:32,400 --> 00:53:40,619
on the GUI error results we imported our

946
00:53:38,009 --> 00:53:42,839
collected data to the two in flux to the

947
00:53:40,619 --> 00:53:44,609
influx TV as the data source and we

948
00:53:42,839 --> 00:53:47,880
process and analyze the telemetry

949
00:53:44,609 --> 00:53:51,558
characteristic data using Grovner both

950
00:53:47,880 --> 00:53:51,559
the two software's are open source

951
00:53:53,430 --> 00:53:57,149
we better inform the project we better

952
00:53:55,320 --> 00:53:59,160
we better understand the key value of

953
00:53:57,150 --> 00:54:00,990
the telemetry tagging and we found it is

954
00:53:59,160 --> 00:54:03,359
important you have more developers to

955
00:54:00,990 --> 00:54:05,850
implant it and more service providers to

956
00:54:03,360 --> 00:54:18,110
deploy it and here our team members

957
00:54:05,850 --> 00:54:27,740
thanks very much okay so next up we have

958
00:54:18,110 --> 00:54:27,740
SSH HTTP and after that we have coin RG

959
00:54:34,850 --> 00:54:40,620
test okay so thank you very much

960
00:54:38,310 --> 00:54:42,480
it's a pleasure to be here among all of

961
00:54:40,620 --> 00:54:47,130
you so I'm just presenting for the team

962
00:54:42,480 --> 00:54:47,790
from Mauritius so the plan was to get

963
00:54:47,130 --> 00:54:51,780
some work done

964
00:54:47,790 --> 00:54:55,710
TLS 1.34 some open source packages big

965
00:54:51,780 --> 00:54:59,010
plan was to get some work done on SSH

966
00:54:55,710 --> 00:55:03,240
mostly X MSS which is a first quantum

967
00:54:59,010 --> 00:55:06,870
signature and it was also on our plan to

968
00:55:03,240 --> 00:55:13,140
finish HTTP for 5-1 Drupal module which

969
00:55:06,870 --> 00:55:15,990
was taking forever so so what got done

970
00:55:13,140 --> 00:55:19,920
HTTP for 5-1 were final fixes for Drupal

971
00:55:15,990 --> 00:55:21,990
but upstream maintenance requested

972
00:55:19,920 --> 00:55:24,900
TLS 1.3 support for an open source

973
00:55:21,990 --> 00:55:32,040
project known as check firewall loads of

974
00:55:24,900 --> 00:55:35,580
XM SS and SS f p SS h FP support added

975
00:55:32,040 --> 00:55:39,570
to a bunch of tools so quite a few of

976
00:55:35,580 --> 00:55:42,180
them were relying on Association just

977
00:55:39,570 --> 00:55:48,110
wanted updated since OpenSSH came out

978
00:55:42,180 --> 00:55:50,700
with X MSS one of us to seize big

979
00:55:48,110 --> 00:55:54,720
victories parameter because it's used as

980
00:55:50,700 --> 00:55:57,689
a library for ansible so the idea would

981
00:55:54,720 --> 00:56:03,990
be does this have ansible eventually be

982
00:55:57,690 --> 00:56:05,370
able to do some of us stuff so what we

983
00:56:03,990 --> 00:56:07,339
learn we are just really at the

984
00:56:05,370 --> 00:56:09,410
beginning in terms of

985
00:56:07,340 --> 00:56:11,600
toom cryptography like we've got

986
00:56:09,410 --> 00:56:13,910
feedback from curdle working group and

987
00:56:11,600 --> 00:56:16,610
but shares of a cardio working group are

988
00:56:13,910 --> 00:56:21,710
actually asking me to stop sending more

989
00:56:16,610 --> 00:56:24,500
drafts to the working group so we're

990
00:56:21,710 --> 00:56:27,860
still it's very new and I think we're

991
00:56:24,500 --> 00:56:33,110
going to be busy next year with more

992
00:56:27,860 --> 00:56:34,820
obvious kind of work so the people who

993
00:56:33,110 --> 00:56:37,610
do it did it in from Mauritius or

994
00:56:34,820 --> 00:56:41,840
actually quite young between 15 years

995
00:56:37,610 --> 00:56:43,310
old to 19 years old so I'm just a

996
00:56:41,840 --> 00:56:45,680
picture of the group and thanks to

997
00:56:43,310 --> 00:56:50,529
Rogers Capital for hosting very wet

998
00:56:45,680 --> 00:57:05,480
emerges and was overly soft team members

999
00:56:50,530 --> 00:57:11,870
so again thank you very much alright so

1000
00:57:05,480 --> 00:57:23,600
are we here here for coin our G and then

1001
00:57:11,870 --> 00:57:26,299
after that is was that c4 and these two

1002
00:57:23,600 --> 00:57:28,250
forward backward I'm hi I'm Murray I'm

1003
00:57:26,300 --> 00:57:31,100
representing at the best table for

1004
00:57:28,250 --> 00:57:33,800
computing in a network we're a proposed

1005
00:57:31,100 --> 00:57:36,680
research group but we're trying to do

1006
00:57:33,800 --> 00:57:38,450
things we're about data playing

1007
00:57:36,680 --> 00:57:40,399
programming and adding computation and

1008
00:57:38,450 --> 00:57:42,439
the network so our original problem that

1009
00:57:40,400 --> 00:57:44,840
we had started dressing at our first

1010
00:57:42,440 --> 00:57:48,020
hackathon in Montreal was to do packet

1011
00:57:44,840 --> 00:57:50,690
filtering and we started with that as an

1012
00:57:48,020 --> 00:57:53,240
idea we had some tons of inputs actually

1013
00:57:50,690 --> 00:57:55,130
there's a big p4 org that has a ton of

1014
00:57:53,240 --> 00:57:57,649
templates and all kinds of things for us

1015
00:57:55,130 --> 00:58:00,350
to get going and virtual machine and we

1016
00:57:57,650 --> 00:58:02,390
had a great participant Michelle who

1017
00:58:00,350 --> 00:58:06,520
because of his own work had also a lot

1018
00:58:02,390 --> 00:58:10,100
of tools to get people getting going

1019
00:58:06,520 --> 00:58:12,350
we're still at a set of individual

1020
00:58:10,100 --> 00:58:13,640
projects because our team we don't have

1021
00:58:12,350 --> 00:58:14,750
we have a team we have a bunch of people

1022
00:58:13,640 --> 00:58:17,569
getting together and trying to have fun

1023
00:58:14,750 --> 00:58:19,460
and but in the future work for the next

1024
00:58:17,570 --> 00:58:21,200
hackathon we intend to have a project

1025
00:58:19,460 --> 00:58:23,060
that will keep everybody together

1026
00:58:21,200 --> 00:58:26,890
and we intend to have that defined by by

1027
00:58:23,060 --> 00:58:29,060
the group so what got done obviously who

1028
00:58:26,890 --> 00:58:30,560
editorials for people like me and others

1029
00:58:29,060 --> 00:58:33,859
who don't really know what p4 is about

1030
00:58:30,560 --> 00:58:36,140
or not enough we had Michelle who

1031
00:58:33,859 --> 00:58:39,828
continued his work on service function

1032
00:58:36,140 --> 00:58:41,390
chaining and he had great improvement on

1033
00:58:39,829 --> 00:58:44,780
his code so we were very proud

1034
00:58:41,390 --> 00:58:47,299
there was a just for fun in coin we

1035
00:58:44,780 --> 00:58:50,359
address a lot of industrial networking

1036
00:58:47,300 --> 00:58:52,220
issues and so we had coy who actually

1037
00:58:50,359 --> 00:58:55,730
designed something to do packet

1038
00:58:52,220 --> 00:58:58,129
filtering for sensor networks where you

1039
00:58:55,730 --> 00:59:00,500
actually can define what a packet and

1040
00:58:58,130 --> 00:59:03,050
how a packet is treated based on the

1041
00:59:00,500 --> 00:59:05,410
measurements from a sensor we also had

1042
00:59:03,050 --> 00:59:08,030
Aris who started looking at some BGP

1043
00:59:05,410 --> 00:59:09,560
origin validation they had a snafu they

1044
00:59:08,030 --> 00:59:12,470
figured out that p4 wasn't good enough

1045
00:59:09,560 --> 00:59:14,480
for that and so they took an alternate

1046
00:59:12,470 --> 00:59:16,368
route we also had Luke who helped them

1047
00:59:14,480 --> 00:59:18,829
and look at one point also figured out

1048
00:59:16,369 --> 00:59:20,660
that the limitations of p4 we're

1049
00:59:18,829 --> 00:59:22,730
validating some of the aspects that we

1050
00:59:20,660 --> 00:59:25,069
have in the working group that we want

1051
00:59:22,730 --> 00:59:28,310
to use the p4 and the pilot the data

1052
00:59:25,070 --> 00:59:31,730
plane processing to do very basic packet

1053
00:59:28,310 --> 00:59:34,069
filtering and we have a another device

1054
00:59:31,730 --> 00:59:37,460
or another processor to do more advanced

1055
00:59:34,069 --> 00:59:38,930
computations what we learned we learned

1056
00:59:37,460 --> 00:59:40,339
that from the Delta from last time we're

1057
00:59:38,930 --> 00:59:42,649
doing much better there's much more

1058
00:59:40,339 --> 00:59:45,109
people who know about this field and

1059
00:59:42,650 --> 00:59:47,510
much people who know about the language

1060
00:59:45,109 --> 00:59:49,700
we agreed that we should agree on a

1061
00:59:47,510 --> 00:59:52,369
version of p4 before the for the meeting

1062
00:59:49,700 --> 00:59:54,049
would help we could do that at interim

1063
00:59:52,369 --> 00:59:56,300
meetings decide what type of setup we

1064
00:59:54,050 --> 00:59:59,270
want to have bringing a VM on a USB

1065
00:59:56,300 --> 01:00:01,819
would be great and by the way yes should

1066
00:59:59,270 --> 01:00:03,710
be more poster boards with pens and

1067
01:00:01,819 --> 01:00:05,599
paper because it's fantastic to

1068
01:00:03,710 --> 01:00:07,730
communicate with the people around your

1069
01:00:05,599 --> 01:00:11,270
table and not just the people online on

1070
01:00:07,730 --> 01:00:13,310
slack and this is the fantastic team we

1071
01:00:11,270 --> 01:00:15,950
had actually all the start people or new

1072
01:00:13,310 --> 01:00:17,839
stars the great people I see I think I

1073
01:00:15,950 --> 01:00:20,629
would like our two local people from

1074
01:00:17,839 --> 01:00:22,700
Singapore to stand up because we had two

1075
01:00:20,630 --> 01:00:26,160
people from local the local community

1076
01:00:22,700 --> 01:00:27,779
who found us which I think was amazing

1077
01:00:26,160 --> 01:00:30,700
[Applause]

1078
01:00:27,780 --> 01:00:42,840
and I'm done and join us Friday thank

1079
01:00:30,700 --> 01:00:58,480
you okay great so next up we have C 4

1080
01:00:42,840 --> 01:01:02,740
and then BMW G after that let me

1081
01:00:58,480 --> 01:01:04,990
summarize the support project so this

1082
01:01:02,740 --> 01:01:08,189
project is related to our general

1083
01:01:04,990 --> 01:01:11,859
research group and the support is

1084
01:01:08,190 --> 01:01:14,680
open-source software platform enabling

1085
01:01:11,860 --> 01:01:18,250
shishi and communication fit is

1086
01:01:14,680 --> 01:01:20,649
comparing two ways these two are F

1087
01:01:18,250 --> 01:01:23,770
sheets the main objective of this

1088
01:01:20,650 --> 01:01:27,460
project is to enhance support

1089
01:01:23,770 --> 01:01:29,050
functionalities in the context of the

1090
01:01:27,460 --> 01:01:31,510
two proposed draft

1091
01:01:29,050 --> 01:01:36,580
shishi an info and the network holding

1092
01:01:31,510 --> 01:01:39,870
for shion and a DM so more precisely in

1093
01:01:36,580 --> 01:01:43,870
this hackathon we implemented to support

1094
01:01:39,870 --> 01:01:47,859
functions one is in network controller

1095
01:01:43,870 --> 01:01:49,779
using incision info which come some

1096
01:01:47,860 --> 01:01:53,890
operate which can enable some operator

1097
01:01:49,780 --> 01:01:56,740
to check out in network condition and

1098
01:01:53,890 --> 01:02:00,910
the configure which data packets should

1099
01:01:56,740 --> 01:02:04,060
be cached and second is a Content

1100
01:02:00,910 --> 01:02:06,640
producer application called Campari

1101
01:02:04,060 --> 01:02:09,370
which can you which can utilize donor -

1102
01:02:06,640 --> 01:02:14,290
according in the context of shishun

1103
01:02:09,370 --> 01:02:16,509
communications as a shipment we built

1104
01:02:14,290 --> 01:02:20,250
and tested the basic problem modules

1105
01:02:16,510 --> 01:02:24,000
related to the two functions and

1106
01:02:20,250 --> 01:02:28,120
regarding lessons we got we need to make

1107
01:02:24,000 --> 01:02:31,900
more more feasible and flexible naming

1108
01:02:28,120 --> 01:02:35,560
scheme and deal with interest packet

1109
01:02:31,900 --> 01:02:37,150
loss to improve the performance of these

1110
01:02:35,560 --> 01:02:42,470
functions

1111
01:02:37,150 --> 01:02:45,200
here the team members and we can get

1112
01:02:42,470 --> 01:02:47,899
more support information and the source

1113
01:02:45,200 --> 01:03:02,060
and the source code from this you aware

1114
01:02:47,900 --> 01:03:04,340
thank you so next up we got BMW G and

1115
01:03:02,060 --> 01:03:16,870
then after that we have the measurements

1116
01:03:04,340 --> 01:03:20,390
team hello everyone my name is KJ from

1117
01:03:16,870 --> 01:03:26,630
University in Korea and secretin so we

1118
01:03:20,390 --> 01:03:28,490
try to define the words of our draft in

1119
01:03:26,630 --> 01:03:31,490
the BMW G containerized

1120
01:03:28,490 --> 01:03:34,220
infrastructure benchmarking so for that

1121
01:03:31,490 --> 01:03:36,580
draft to reroute that the superior

1122
01:03:34,220 --> 01:03:40,790
allocation are the technology for this

1123
01:03:36,580 --> 01:03:44,210
these days is and not guaranteed to the

1124
01:03:40,790 --> 01:03:49,370
deterministic results so or we want to

1125
01:03:44,210 --> 01:03:52,700
verifying this or to use some tools so

1126
01:03:49,370 --> 01:03:55,940
the first is a native kubernetes CPU

1127
01:03:52,700 --> 01:03:58,819
scheduler and then second is comparing

1128
01:03:55,940 --> 01:04:02,540
with CPU pining technology using the cmk

1129
01:03:58,820 --> 01:04:04,790
by Intel so so we want to allocating

1130
01:04:02,540 --> 01:04:07,009
same number of a CPU apart and the

1131
01:04:04,790 --> 01:04:09,590
measuring the support and the latency to

1132
01:04:07,010 --> 01:04:13,400
analyze the impact of the metal

1133
01:04:09,590 --> 01:04:16,640
preference of the container itself so

1134
01:04:13,400 --> 01:04:19,400
this is our system so we have a to of

1135
01:04:16,640 --> 01:04:21,680
physical server in the remote side and

1136
01:04:19,400 --> 01:04:24,620
then the one server or they will be

1137
01:04:21,680 --> 01:04:28,520
deployed a t-rex on the barometer and

1138
01:04:24,620 --> 01:04:31,009
then on the container note also we use

1139
01:04:28,520 --> 01:04:34,310
the DPD k and then continue PPP CNI

1140
01:04:31,010 --> 01:04:37,280
plug-in for networking and then force if

1141
01:04:34,310 --> 01:04:41,259
you pining we use CM k and then when

1142
01:04:37,280 --> 01:04:41,260
it's native or cpu scheduler but

1143
01:04:41,320 --> 01:04:45,560
unfortunately we couldn't get the

1144
01:04:43,220 --> 01:04:48,740
expected result yet because there's so

1145
01:04:45,560 --> 01:04:50,210
many issues in there or for configuring

1146
01:04:48,740 --> 01:04:53,839
and installing and then

1147
01:04:50,210 --> 01:04:56,060
all the stuffs or some some part of the

1148
01:04:53,839 --> 01:05:00,320
hardware and OS and Nic dependencies and

1149
01:04:56,060 --> 01:05:03,560
then the main our struggling point is

1150
01:05:00,320 --> 01:05:07,730
that some networking areas like the UDP

1151
01:05:03,560 --> 01:05:10,849
and even a checksum error so or so since

1152
01:05:07,730 --> 01:05:13,760
that the BBP is a little invisible to

1153
01:05:10,849 --> 01:05:16,280
the user so we are we are struggling to

1154
01:05:13,760 --> 01:05:18,380
define or figure out what is a problem

1155
01:05:16,280 --> 01:05:21,320
in there so and they're trying to solve

1156
01:05:18,380 --> 01:05:24,380
problem as well as possible or and then

1157
01:05:21,320 --> 01:05:28,849
after we made it and on share to return

1158
01:05:24,380 --> 01:05:30,830
to the BMW G and nevertheless the we're

1159
01:05:28,849 --> 01:05:32,920
under such different things and the

1160
01:05:30,830 --> 01:05:35,270
difference between the pre switch and

1161
01:05:32,920 --> 01:05:38,320
benchmarking switch benchmarking and and

1162
01:05:35,270 --> 01:05:40,849
that a function is ER so we thought that

1163
01:05:38,320 --> 01:05:43,940
firstly we thought that just for informs

1164
01:05:40,849 --> 01:05:47,599
switches to the container but there have

1165
01:05:43,940 --> 01:05:49,640
so many the configuration is needed and

1166
01:05:47,599 --> 01:05:53,930
then on the other end we learned more

1167
01:05:49,640 --> 01:05:56,839
than understanding for technology and

1168
01:05:53,930 --> 01:06:01,879
then configurations and all the options

1169
01:05:56,839 --> 01:06:03,290
we tried and or and or one the one thing

1170
01:06:01,880 --> 01:06:06,530
one more thing is the checks power

1171
01:06:03,290 --> 01:06:08,930
consumption so our site server was shut

1172
01:06:06,530 --> 01:06:12,050
down during the hackathon for some for

1173
01:06:08,930 --> 01:06:16,368
why or run when running checks with 100%

1174
01:06:12,050 --> 01:06:28,730
CPU usage so this is our team member

1175
01:06:16,369 --> 01:06:29,420
yeah and thank you very much ok so what

1176
01:06:28,730 --> 01:06:33,320
do we have next

1177
01:06:29,420 --> 01:06:36,770
measurements and then we have after that

1178
01:06:33,320 --> 01:06:43,160
LP ran and then I'll go back and get the

1179
01:06:36,770 --> 01:06:43,810
ones that we missed earlier Thank You

1180
01:06:43,160 --> 01:06:50,960
Charles

1181
01:06:43,810 --> 01:06:53,480
yeah ok hi I'm mal Morton and I was

1182
01:06:50,960 --> 01:06:58,130
working with Lynch avataan remotely on

1183
01:06:53,480 --> 01:06:59,660
our measurement project and here it is

1184
01:06:58,130 --> 01:07:03,500
we we talked a bit about this in

1185
01:06:59,660 --> 01:07:05,120
Montreal we were we've been working

1186
01:07:03,500 --> 01:07:07,820
on an internet draft now we're into the

1187
01:07:05,120 --> 01:07:11,330
third version of maximum IP glare

1188
01:07:07,820 --> 01:07:15,430
capacity metric and methods of

1189
01:07:11,330 --> 01:07:17,569
measurement and it's a UDP based method

1190
01:07:15,430 --> 01:07:19,490
at the ITF we're trying to gain

1191
01:07:17,570 --> 01:07:22,370
experience with really challenging

1192
01:07:19,490 --> 01:07:24,350
access one gigabit per second with lots

1193
01:07:22,370 --> 01:07:29,150
of users that won't go away that's you

1194
01:07:24,350 --> 01:07:31,520
guys so we compared that with TCP Kubik

1195
01:07:29,150 --> 01:07:34,730
this time last time we compared it with

1196
01:07:31,520 --> 01:07:36,920
you cos system which is also TCP based

1197
01:07:34,730 --> 01:07:39,170
and we run the test we iterate the

1198
01:07:36,920 --> 01:07:41,780
measurement parameters and do it again

1199
01:07:39,170 --> 01:07:44,390
so we were also going to examine the

1200
01:07:41,780 --> 01:07:46,490
crossover with the benchmarking project

1201
01:07:44,390 --> 01:07:48,680
that you just heard about but we'll have

1202
01:07:46,490 --> 01:07:51,379
to wait for later in the week so here's

1203
01:07:48,680 --> 01:07:52,580
what got done this time looking over

1204
01:07:51,380 --> 01:07:54,550
here at the right

1205
01:07:52,580 --> 01:07:56,810
we had our measurement system

1206
01:07:54,550 --> 01:07:59,300
implemented in this nice little PC

1207
01:07:56,810 --> 01:08:02,180
minute mini PC system so we're able to

1208
01:07:59,300 --> 01:08:05,180
run that bare-metal and we also had a

1209
01:08:02,180 --> 01:08:08,029
Google Cloud VM located right here in

1210
01:08:05,180 --> 01:08:12,710
Singapore less than 4 milliseconds away

1211
01:08:08,030 --> 01:08:14,420
and it was still a 15 to 18 hops the

1212
01:08:12,710 --> 01:08:17,240
measurement system sends traffic in one

1213
01:08:14,420 --> 01:08:18,589
direction and it gets feedback in the

1214
01:08:17,240 --> 01:08:22,429
other direction so it actually makes

1215
01:08:18,589 --> 01:08:25,580
adjustments very quickly and we use the

1216
01:08:22,430 --> 01:08:29,000
UDP and IP 3.6 clients and servers to do

1217
01:08:25,580 --> 01:08:32,839
that you can see on the on the right is

1218
01:08:29,000 --> 01:08:35,839
the I guess on the right hand side of

1219
01:08:32,839 --> 01:08:37,160
the graph is the percentage delivery for

1220
01:08:35,839 --> 01:08:40,009
packets that we were able to measure

1221
01:08:37,160 --> 01:08:42,589
using the UDP system you can't get that

1222
01:08:40,009 --> 01:08:44,479
kind of information readily from a TCP

1223
01:08:42,589 --> 01:08:47,630
measurement or the delay variation very

1224
01:08:44,479 --> 01:08:49,939
easily as well what we what we've got

1225
01:08:47,630 --> 01:08:52,069
here we're measuring a one gigabit per

1226
01:08:49,939 --> 01:08:55,549
second bottleneck somewhere between us

1227
01:08:52,069 --> 01:08:58,100
and our server and our UDP measurements

1228
01:08:55,549 --> 01:09:00,229
in blue there are pretty close to

1229
01:08:58,100 --> 01:09:03,440
theoretical the lowest one I've plotted

1230
01:09:00,229 --> 01:09:05,839
here is 998 megabits per second when

1231
01:09:03,439 --> 01:09:08,089
corrected for Ethernet header and one

1232
01:09:05,839 --> 01:09:10,339
VLAN tag the other ones are actually

1233
01:09:08,089 --> 01:09:14,028
higher and the last one there had loss

1234
01:09:10,339 --> 01:09:17,149
ratio of practically nothing so and then

1235
01:09:14,029 --> 01:09:22,310
the three TCPS are not doing so good

1236
01:09:17,149 --> 01:09:24,799
so let's see here 23 seconds okay so we

1237
01:09:22,310 --> 01:09:27,670
learned a lot today was testing was

1238
01:09:24,800 --> 01:09:30,890
really messy so don't test on Sunday

1239
01:09:27,670 --> 01:09:33,380
many PC was good a good bare metal

1240
01:09:30,890 --> 01:09:35,630
platform we need to do better load

1241
01:09:33,380 --> 01:09:38,150
adjustment the search algorithm uses

1242
01:09:35,630 --> 01:09:41,810
loss and delay we need to have a better

1243
01:09:38,149 --> 01:09:43,639
threshold for loss and we got some

1244
01:09:41,810 --> 01:09:47,600
actions for the existing draft and so

1245
01:09:43,640 --> 01:09:51,140
forth yep you and me are synchronized so

1246
01:09:47,600 --> 01:09:55,040
we'll try to do that later with the keep

1247
01:09:51,140 --> 01:10:03,920
going with the benchmarking group this

1248
01:09:55,040 --> 01:10:04,730
week okay next up after measurement I

1249
01:10:03,920 --> 01:10:10,850
forgot

1250
01:10:04,730 --> 01:10:12,940
oh the LP one yep you go and left and

1251
01:10:10,850 --> 01:10:16,400
right before that thank you

1252
01:10:12,940 --> 01:10:17,809
hello everybody since we are getting to

1253
01:10:16,400 --> 01:10:20,570
the end of this session I decided to

1254
01:10:17,810 --> 01:10:24,280
post it the last slide first so here's

1255
01:10:20,570 --> 01:10:27,740
the project rep oh and the team picture

1256
01:10:24,280 --> 01:10:29,570
we had a dozen contributors this time

1257
01:10:27,740 --> 01:10:33,410
quite a big team compared to the other

1258
01:10:29,570 --> 01:10:38,509
times the usual suspects draft authors

1259
01:10:33,410 --> 01:10:41,120
and some good software developers we had

1260
01:10:38,510 --> 01:10:44,060
so eg from Japan who usually attends

1261
01:10:41,120 --> 01:10:46,519
remotely you flew in at his own expenses

1262
01:10:44,060 --> 01:10:50,270
just to be with us this time thank you

1263
01:10:46,520 --> 01:10:53,720
so much so eg we had the olivier new

1264
01:10:50,270 --> 01:10:57,980
newcomer to the IDF and hackathon who

1265
01:10:53,720 --> 01:11:02,990
brought his expertise as well and one

1266
01:10:57,980 --> 01:11:05,990
remote participant from Chile so this is

1267
01:11:02,990 --> 01:11:08,750
a shake the static context header

1268
01:11:05,990 --> 01:11:11,510
compression and fragmentation to be used

1269
01:11:08,750 --> 01:11:15,830
over low-power wireless wide area

1270
01:11:11,510 --> 01:11:20,630
networks we have a couple draft the

1271
01:11:15,830 --> 01:11:22,450
first one is pasta IHG review and is we

1272
01:11:20,630 --> 01:11:27,260
want it to we want to implement an

1273
01:11:22,450 --> 01:11:29,070
open-source implementation for that the

1274
01:11:27,260 --> 01:11:31,350
the goals were

1275
01:11:29,070 --> 01:11:33,330
for those who have seen this

1276
01:11:31,350 --> 01:11:36,440
presentation before last time we

1277
01:11:33,330 --> 01:11:39,750
integrated the fragmentation and

1278
01:11:36,440 --> 01:11:42,900
compression code and so this is done and

1279
01:11:39,750 --> 01:11:46,190
now we wanted to clean up the repo we

1280
01:11:42,900 --> 01:11:49,950
had some remnants from the old structure

1281
01:11:46,190 --> 01:11:51,839
so this has been done we've improved the

1282
01:11:49,950 --> 01:11:54,570
documentation make it easier for

1283
01:11:51,840 --> 01:11:57,330
newcomers to understand what how the

1284
01:11:54,570 --> 01:11:58,710
code works and how to get started and

1285
01:11:57,330 --> 01:12:01,970
also to improve the functionality

1286
01:11:58,710 --> 01:12:05,790
because the the draft has a lot of

1287
01:12:01,970 --> 01:12:08,400
features in it and we hadn't implemented

1288
01:12:05,790 --> 01:12:11,670
everything and so thanks to olivier we

1289
01:12:08,400 --> 01:12:14,969
set up the Travis continuous integration

1290
01:12:11,670 --> 01:12:21,390
so we get more professional at the way

1291
01:12:14,970 --> 01:12:23,670
our software is developed and so what we

1292
01:12:21,390 --> 01:12:26,040
learnt is of course a better shared

1293
01:12:23,670 --> 01:12:28,320
understanding of the specs between

1294
01:12:26,040 --> 01:12:29,880
everybody around the table we spotted

1295
01:12:28,320 --> 01:12:34,410
obviously a few issues in the

1296
01:12:29,880 --> 01:12:38,070
implementation we even tried running the

1297
01:12:34,410 --> 01:12:41,849
the test code on memory device itself

1298
01:12:38,070 --> 01:12:43,620
and yes it fails it's a big - big with

1299
01:12:41,850 --> 01:12:46,530
the test environment so we need to split

1300
01:12:43,620 --> 01:12:49,559
the code but that gives us some way

1301
01:12:46,530 --> 01:12:51,090
forward and of course we need more tests

1302
01:12:49,560 --> 01:12:53,640
more test automation

1303
01:12:51,090 --> 01:12:57,630
we also spotted a missing element in the

1304
01:12:53,640 --> 01:13:00,360
data model which is another draft that

1305
01:12:57,630 --> 01:13:02,250
we work on at the working group and also

1306
01:13:00,360 --> 01:13:04,230
we think we are ready for interrupt we

1307
01:13:02,250 --> 01:13:06,960
know of two other implementations which

1308
01:13:04,230 --> 01:13:09,179
are not open source and will be probably

1309
01:13:06,960 --> 01:13:21,930
doing an interrupt that in its hackathon

1310
01:13:09,180 --> 01:13:23,910
that's it thank you ok so yeah now as

1311
01:13:21,930 --> 01:13:25,980
promised we're going to go back and try

1312
01:13:23,910 --> 01:13:31,070
to pick up some of the ones we we missed

1313
01:13:25,980 --> 01:13:31,070
from before starting with DNS

1314
01:13:46,120 --> 01:13:59,750
there we go yeah let's see yeah so left

1315
01:13:56,719 --> 01:14:03,590
and right for forward backward and thank

1316
01:13:59,750 --> 01:14:06,770
you very much all right welcome so these

1317
01:14:03,590 --> 01:14:08,030
are the results of the did the DNS table

1318
01:14:06,770 --> 01:14:12,350
good

1319
01:14:08,030 --> 01:14:14,509
so as usual in the DNS with a DD Venus

1320
01:14:12,350 --> 01:14:16,219
table we don't have one single plan we

1321
01:14:14,510 --> 01:14:19,070
have a group of individuals with their

1322
01:14:16,219 --> 01:14:21,290
own plans and we work together and we

1323
01:14:19,070 --> 01:14:24,639
talk a lot but we have a number of

1324
01:14:21,290 --> 01:14:27,230
themes the privacy DNS privacy of course

1325
01:14:24,640 --> 01:14:30,200
it's important in the past years

1326
01:14:27,230 --> 01:14:33,650
DNS protocol improvements container DNS

1327
01:14:30,200 --> 01:14:37,420
and service provisioning and submitting

1328
01:14:33,650 --> 01:14:40,339
some measurements good genus privacy

1329
01:14:37,420 --> 01:14:42,500
continuing work on dinners of atilla's

1330
01:14:40,340 --> 01:14:46,250
but previous in the previous years we

1331
01:14:42,500 --> 01:14:49,100
worked from from from the stuff from the

1332
01:14:46,250 --> 01:14:52,210
clients to the resolver new work in the

1333
01:14:49,100 --> 01:14:56,450
DNS privacy deprived working group is

1334
01:14:52,210 --> 01:14:59,989
from the resolver to the tortoise a dot

1335
01:14:56,450 --> 01:15:01,760
also gold so there wasn't hack kind of

1336
01:14:59,989 --> 01:15:05,959
proof of concept implementation inbound

1337
01:15:01,760 --> 01:15:08,030
how to implement that using a subnet

1338
01:15:05,960 --> 01:15:11,830
specification and a host name - fela

1339
01:15:08,030 --> 01:15:13,940
date it to have an authenticated tillis

1340
01:15:11,830 --> 01:15:17,090
connection to an authoritative

1341
01:15:13,940 --> 01:15:19,429
nameserver how to bootstrap this list is

1342
01:15:17,090 --> 01:15:22,100
something the deprived working group has

1343
01:15:19,430 --> 01:15:23,840
to work on so if you have ideas in this

1344
01:15:22,100 --> 01:15:25,730
room you're welcome to join the

1345
01:15:23,840 --> 01:15:27,860
discussion on deprived working group

1346
01:15:25,730 --> 01:15:32,629
Friday morning

1347
01:15:27,860 --> 01:15:36,860
Dinah's over HTTP the pi9 has and made a

1348
01:15:32,630 --> 01:15:41,570
design for implementing the OS in by 9

1349
01:15:36,860 --> 01:15:46,009
and with that we have in 2000 2008 in by

1350
01:15:41,570 --> 01:15:46,639
9 and bounds in not resolver and in

1351
01:15:46,010 --> 01:15:48,340
power

1352
01:15:46,640 --> 01:15:50,380
Dinah's this so we have

1353
01:15:48,340 --> 01:15:53,350
for open-source implementation of do H

1354
01:15:50,380 --> 01:15:55,360
which is good so if there's a choice

1355
01:15:53,350 --> 01:15:57,310
there's an options different options for

1356
01:15:55,360 --> 01:16:01,200
deployment also a proof of concept

1357
01:15:57,310 --> 01:16:03,850
implementation of DNS over hp3 quick

1358
01:16:01,200 --> 01:16:06,460
working progress based on one minutes

1359
01:16:03,850 --> 01:16:09,370
things in case some protocol

1360
01:16:06,460 --> 01:16:11,620
improvements cookies server Dena

1361
01:16:09,370 --> 01:16:15,370
cervical keys why should we care about

1362
01:16:11,620 --> 01:16:17,410
DNS server it's a way to mitigate DDoS

1363
01:16:15,370 --> 01:16:19,480
spoofed addresses you can filter them

1364
01:16:17,410 --> 01:16:22,540
out so DNS server cookies we did had an

1365
01:16:19,480 --> 01:16:24,790
in specification it wasn't very Interpol

1366
01:16:22,540 --> 01:16:27,490
you could make different implementation

1367
01:16:24,790 --> 01:16:29,830
decisions with the base specification we

1368
01:16:27,490 --> 01:16:31,480
solve that we have three four

1369
01:16:29,830 --> 01:16:35,769
implementations that are interoperable

1370
01:16:31,480 --> 01:16:38,980
and extended error well skip that not a

1371
01:16:35,770 --> 01:16:41,140
draft working on service provisioning I

1372
01:16:38,980 --> 01:16:43,690
want to mention that it's important

1373
01:16:41,140 --> 01:16:45,520
something we are thinking L in the

1374
01:16:43,690 --> 01:16:48,580
Dinah's community thinking a lot about

1375
01:16:45,520 --> 01:16:52,380
how to solve this problem in the last

1376
01:16:48,580 --> 01:16:55,300
ITF there was a new draft we did an

1377
01:16:52,380 --> 01:16:58,360
implementation of that draft it was

1378
01:16:55,300 --> 01:17:02,110
called HTTP SVC at that time it has been

1379
01:16:58,360 --> 01:17:03,940
renamed to s PCB surface binding we have

1380
01:17:02,110 --> 01:17:17,679
that in implementation and got some

1381
01:17:03,940 --> 01:17:19,690
feedback thank you ok so the order and

1382
01:17:17,680 --> 01:17:21,310
whose next is a little harder for me to

1383
01:17:19,690 --> 01:17:24,429
figure out now just because I'm going to

1384
01:17:21,310 --> 01:17:26,680
basically go back and I'm gonna pick up

1385
01:17:24,430 --> 01:17:30,250
all the projects just go from top to

1386
01:17:26,680 --> 01:17:32,500
bottom and anything we missed I believe

1387
01:17:30,250 --> 01:17:35,140
we've done all of these and the next one

1388
01:17:32,500 --> 01:17:38,230
I think that we haven't done is cap or

1389
01:17:35,140 --> 01:17:40,870
if you see yourself in the list and I

1390
01:17:38,230 --> 01:17:42,299
skipped you and let me know we'll go

1391
01:17:40,870 --> 01:17:49,490
back and get you

1392
01:17:42,300 --> 01:17:52,649
so Kapoor who is presenting that one

1393
01:17:49,490 --> 01:17:52,648
[Music]

1394
01:17:52,829 --> 01:18:12,540
great okay here we go and so left and

1395
01:18:09,099 --> 01:18:12,540
right go forward thank you

1396
01:18:13,230 --> 01:18:20,739
hi everyone so I'm Remy I was working

1397
01:18:18,250 --> 01:18:23,260
here also with the Salva and hang were

1398
01:18:20,739 --> 01:18:25,480
sitting over there on the captive portal

1399
01:18:23,260 --> 01:18:29,290
some captive portal proof of concept for

1400
01:18:25,480 --> 01:18:30,579
the Capitol working group for people who

1401
01:18:29,290 --> 01:18:34,000
are not familiar with the work they're

1402
01:18:30,579 --> 01:18:36,009
basically the first objective of the the

1403
01:18:34,000 --> 01:18:37,540
what they have kept kept pulled API

1404
01:18:36,010 --> 01:18:40,510
let's discuss in the working group is

1405
01:18:37,540 --> 01:18:43,329
first to make captive portals this bad

1406
01:18:40,510 --> 01:18:45,460
because they're like very often really

1407
01:18:43,329 --> 01:18:47,049
bad and because the for example

1408
01:18:45,460 --> 01:18:49,119
detecting that there's a portal is

1409
01:18:47,050 --> 01:18:51,460
really tricky but apart from that it

1410
01:18:49,119 --> 01:18:53,409
also enables number of use cases for

1411
01:18:51,460 --> 01:18:55,480
example knowing how much time you have

1412
01:18:53,409 --> 01:18:58,299
left on a portal if it's limited or like

1413
01:18:55,480 --> 01:19:00,339
knowing how much data you have left also

1414
01:18:58,300 --> 01:19:02,110
having a way for you to know if you're

1415
01:19:00,340 --> 01:19:03,550
still connected or not if like the the

1416
01:19:02,110 --> 01:19:05,139
network just is connected you and you

1417
01:19:03,550 --> 01:19:08,920
have no idea about it general it's not

1418
01:19:05,139 --> 01:19:11,829
great and also it enables use cases such

1419
01:19:08,920 --> 01:19:13,510
as you know having in fight on

1420
01:19:11,829 --> 01:19:15,909
containment in the plane we don't have

1421
01:19:13,510 --> 01:19:17,560
internet anything like the schedules

1422
01:19:15,909 --> 01:19:19,449
tight iam timetables if you are at the

1423
01:19:17,560 --> 01:19:21,550
HTF knowing like where you're making is

1424
01:19:19,449 --> 01:19:25,540
oh like the train at the train station

1425
01:19:21,550 --> 01:19:28,900
stuff like that so general flow of the

1426
01:19:25,540 --> 01:19:32,699
demo we built was first you will

1427
01:19:28,900 --> 01:19:36,519
discover the API endpoint for that API

1428
01:19:32,699 --> 01:19:38,650
so it from the draft it could be a ready

1429
01:19:36,520 --> 01:19:41,320
HTTP every six hours all the link

1430
01:19:38,650 --> 01:19:46,210
relational header as a backup we use we

1431
01:19:41,320 --> 01:19:48,730
implemented as DHCP then basically the

1432
01:19:46,210 --> 01:19:50,469
demo probes the endpoint to Detective or

1433
01:19:48,730 --> 01:19:52,059
portals of is open or closed

1434
01:19:50,469 --> 01:19:54,400
I get the session information and show

1435
01:19:52,060 --> 01:19:56,400
info in a notification so this is a demo

1436
01:19:54,400 --> 01:20:02,199
that was implemented on an Android phone

1437
01:19:56,400 --> 01:20:03,619
like with the open source iOS P and on

1438
01:20:02,199 --> 01:20:08,848
the

1439
01:20:03,619 --> 01:20:11,480
access point sight so we have so a team

1440
01:20:08,849 --> 01:20:15,659
from Google session which who is here

1441
01:20:11,480 --> 01:20:19,888
today who provided so one implementation

1442
01:20:15,659 --> 01:20:23,820
that they have you know for for for this

1443
01:20:19,889 --> 01:20:26,610
captive portal API so yeah and they

1444
01:20:23,820 --> 01:20:28,110
provide whether the client is captive or

1445
01:20:26,610 --> 01:20:30,690
not they provide the captive portal page

1446
01:20:28,110 --> 01:20:33,750
how much time is left and also a URL for

1447
01:20:30,690 --> 01:20:35,789
information which happens to be the IETF

1448
01:20:33,750 --> 01:20:37,289
information page so here's what the demo

1449
01:20:35,789 --> 01:20:39,090
is I can't show you because on a screen

1450
01:20:37,289 --> 01:20:40,769
would be way too small but here's what

1451
01:20:39,090 --> 01:20:43,260
it is basically you connect to a Wi-Fi

1452
01:20:40,770 --> 01:20:46,050
it tells you tap you have to sign in the

1453
01:20:43,260 --> 01:20:48,059
usual thing when you open the portal

1454
01:20:46,050 --> 01:20:50,340
which is you know the in this case the

1455
01:20:48,059 --> 01:20:53,460
Google Station provided portal you can

1456
01:20:50,340 --> 01:20:55,289
log in you get free Wi-Fi and then you

1457
01:20:53,460 --> 01:20:57,599
get this notification that tells tap to

1458
01:20:55,289 --> 01:21:00,150
manage and when you tap on this you can

1459
01:20:57,599 --> 01:21:02,639
get you know information about this

1460
01:21:00,150 --> 01:21:07,619
access point which is basically the ATF

1461
01:21:02,639 --> 01:21:11,190
info today and that's it contact here

1462
01:21:07,619 --> 01:21:15,449
for me 440 station you have a server and

1463
01:21:11,190 --> 01:21:25,469
hang and the code is on a OSP open

1464
01:21:15,449 --> 01:21:27,980
source next up if I remember right is I

1465
01:21:25,469 --> 01:21:27,980
fit

1466
01:21:46,340 --> 01:21:51,400
where to go there it is

1467
01:22:03,670 --> 01:22:13,030
do we have someone to present I fit okay

1468
01:22:15,880 --> 01:22:23,570
left and right okay hello everyone I'm

1469
01:22:21,409 --> 01:22:26,059
an angel from away and now we are

1470
01:22:23,570 --> 01:22:29,389
working on we worked on the Institute

1471
01:22:26,060 --> 01:22:32,390
flow information telemetry the I feet

1472
01:22:29,390 --> 01:22:34,969
provide a reference framework to acquire

1473
01:22:32,390 --> 01:22:38,300
data about a packet on its a forwarding

1474
01:22:34,969 --> 01:22:41,300
path but when we deploy it in the

1475
01:22:38,300 --> 01:22:44,480
network there are several challenges for

1476
01:22:41,300 --> 01:22:46,909
deployment in Carroll Network firstly

1477
01:22:44,480 --> 01:22:50,360
the performance the forwarding impact

1478
01:22:46,909 --> 01:22:52,759
due to the packet processing and the pen

1479
01:22:50,360 --> 01:22:55,880
device and the server overload due to

1480
01:22:52,760 --> 01:22:58,159
exported data and there are others some

1481
01:22:55,880 --> 01:23:01,760
other challenges for example the limited

1482
01:22:58,159 --> 01:23:04,909
data flexibility and extensibility and

1483
01:23:01,760 --> 01:23:08,570
the deployment issues and encapsulations

1484
01:23:04,909 --> 01:23:13,580
and the tunnels and the primitive models

1485
01:23:08,570 --> 01:23:15,739
API for commercial applications so we we

1486
01:23:13,580 --> 01:23:18,760
are considering several key components

1487
01:23:15,739 --> 01:23:22,159
to address the challenges including the

1488
01:23:18,760 --> 01:23:25,190
smart flow selection the export data

1489
01:23:22,159 --> 01:23:28,370
reduction the encapsulation and

1490
01:23:25,190 --> 01:23:30,230
autonomous and the dynamic network probe

1491
01:23:28,370 --> 01:23:34,580
and owned amount of technical

1492
01:23:30,230 --> 01:23:39,730
integration and this is what we

1493
01:23:34,580 --> 01:23:42,590
implemented last time in Montreal and we

1494
01:23:39,730 --> 01:23:46,218
implements the postcard based telemetry

1495
01:23:42,590 --> 01:23:47,180
and achieve several use cases including

1496
01:23:46,219 --> 01:23:50,590
the delay

1497
01:23:47,180 --> 01:23:54,380
monitoring for no link an end-to-end and

1498
01:23:50,590 --> 01:23:57,590
we also implement the packet loss

1499
01:23:54,380 --> 01:24:01,580
monitoring and the past tracking this

1500
01:23:57,590 --> 01:24:04,100
time we add two functions why is the

1501
01:24:01,580 --> 01:24:07,340
scratch guided elephant flows direction

1502
01:24:04,100 --> 01:24:10,220
we can dynamically insert the sketch in

1503
01:24:07,340 --> 01:24:12,070
in the device and select the elephant

1504
01:24:10,220 --> 01:24:15,980
flow for high-precision

1505
01:24:12,070 --> 01:24:20,269
monitoring and second we the the

1506
01:24:15,980 --> 01:24:22,549
exporting data packing we can give

1507
01:24:20,270 --> 01:24:25,790
define the number of packets to be

1508
01:24:22,550 --> 01:24:28,630
bundled and define the time interval to

1509
01:24:25,790 --> 01:24:34,040
force export in this way we can reduce

1510
01:24:28,630 --> 01:24:37,190
the exporting data and next time we are

1511
01:24:34,040 --> 01:24:40,130
going to attend the hexan again and we

1512
01:24:37,190 --> 01:24:50,059
will use people switch to implement and

1513
01:24:40,130 --> 01:24:53,350
the demo this thank you okay next up

1514
01:24:50,060 --> 01:24:53,350
should be spend

1515
01:24:56,420 --> 01:24:59,579
[Music]

1516
01:25:19,829 --> 01:25:30,880
okay weird a quick measurements team

1517
01:25:26,650 --> 01:25:34,869
working on the spin dump tool so for

1518
01:25:30,880 --> 01:25:36,639
this hackathon we plan for adding some

1519
01:25:34,869 --> 01:25:39,639
more functionalities to the spin dump

1520
01:25:36,639 --> 01:25:42,849
tool which is basically a network

1521
01:25:39,639 --> 01:25:44,380
latency monitoring tool so we wanted to

1522
01:25:42,849 --> 01:25:46,570
implement support for what is called a

1523
01:25:44,380 --> 01:25:49,749
delay bit it's an experimental proposal

1524
01:25:46,570 --> 01:25:51,670
of adding another bit to improve latency

1525
01:25:49,749 --> 01:25:54,249
measurements we also wanted to improve

1526
01:25:51,670 --> 01:25:56,920
our RTT statistics and we wanted to add

1527
01:25:54,249 --> 01:26:00,960
more more spin bit supports to quick

1528
01:25:56,920 --> 01:26:04,329
stacks so what we got done was that we

1529
01:26:00,960 --> 01:26:05,889
added support for this delay bit so we

1530
01:26:04,329 --> 01:26:08,679
can get improved RT measurements for

1531
01:26:05,889 --> 01:26:10,389
four endpoints that support that one we

1532
01:26:08,679 --> 01:26:13,539
also improve the statistics by adding

1533
01:26:10,389 --> 01:26:16,090
some some more statics like standard

1534
01:26:13,539 --> 01:26:17,920
deviation of the RTD measurements and we

1535
01:26:16,090 --> 01:26:20,579
also implemented some RTT filtering

1536
01:26:17,920 --> 01:26:23,920
based on that and we also managed to get

1537
01:26:20,579 --> 01:26:27,489
spin bit support into the move fast

1538
01:26:23,920 --> 01:26:27,969
quick stack from Facebook the team was

1539
01:26:27,489 --> 01:26:30,369
me

1540
01:26:27,969 --> 01:26:33,840
Marc Sylar yari Arco Fabio Mauro and

1541
01:26:30,369 --> 01:26:33,839
Ronnie Evan thank you

1542
01:26:33,860 --> 01:26:38,740
[Applause]

1543
01:26:42,230 --> 01:26:49,169
[Music]

1544
01:26:45,400 --> 01:26:49,170
wishy is next

1545
01:27:15,739 --> 01:27:22,499
and left and right to go forward and

1546
01:27:18,749 --> 01:27:24,239
backward right thank you okay hello

1547
01:27:22,499 --> 01:27:26,249
everyone here's a report from we see our

1548
01:27:24,239 --> 01:27:30,119
work on IOT semantic hyper media

1549
01:27:26,249 --> 01:27:32,070
interoperability our plan for this this

1550
01:27:30,119 --> 01:27:34,259
time was work on data model convergence

1551
01:27:32,070 --> 01:27:37,799
and automate translation in particular

1552
01:27:34,260 --> 01:27:39,900
with the 1bm language and tools also we

1553
01:27:37,800 --> 01:27:41,729
plan to work together with w3c web of

1554
01:27:39,900 --> 01:27:42,989
things we had a joint meeting this

1555
01:27:41,729 --> 01:27:45,420
Friday together with them and they

1556
01:27:42,989 --> 01:27:48,268
joined here on their web of things block

1557
01:27:45,420 --> 01:27:49,699
fest activities and finally we plan to

1558
01:27:48,269 --> 01:27:52,260
work on a new P which is this

1559
01:27:49,699 --> 01:27:56,400
translation between binary and and JSON

1560
01:27:52,260 --> 01:27:57,869
based data models what cut down the over

1561
01:27:56,400 --> 01:28:00,239
this weekend we had a lot of work on the

1562
01:27:57,869 --> 01:28:03,210
1dm tools and concepts in particle are

1563
01:28:00,239 --> 01:28:04,650
doing conversions between 1 DM SDF and

1564
01:28:03,210 --> 01:28:06,659
live with them to emit somewhere else so

1565
01:28:04,650 --> 01:28:09,239
this is the reverse from the what we did

1566
01:28:06,659 --> 01:28:11,219
one last idea where we did it's at 1

1567
01:28:09,239 --> 01:28:14,218
a.m. but will also enhance that kind of

1568
01:28:11,219 --> 01:28:15,510
translations we also have a linter for 1

1569
01:28:14,219 --> 01:28:18,389
DM model so you can check the validity

1570
01:28:15,510 --> 01:28:20,249
of your models and we worked on a CI in

1571
01:28:18,389 --> 01:28:21,900
github to actually check real time when

1572
01:28:20,249 --> 01:28:22,380
you commit new models they are actually

1573
01:28:21,900 --> 01:28:24,478
valid

1574
01:28:22,380 --> 01:28:26,989
most of code for above is already

1575
01:28:24,479 --> 01:28:29,340
available on on github on the link above

1576
01:28:26,989 --> 01:28:31,530
we also had very good discussions on

1577
01:28:29,340 --> 01:28:33,360
architecture use of semantics how we can

1578
01:28:31,530 --> 01:28:34,710
handle dynamic descriptions and in

1579
01:28:33,360 --> 01:28:36,929
particle how should we work on

1580
01:28:34,710 --> 01:28:40,349
convergence across SDS on various

1581
01:28:36,929 --> 01:28:42,630
specifications in this area on U P now

1582
01:28:40,349 --> 01:28:44,159
we have also basic encoding from chasing

1583
01:28:42,630 --> 01:28:45,929
the binary so we can go both ways on

1584
01:28:44,159 --> 01:28:47,940
between JSON based and binary based

1585
01:28:45,929 --> 01:28:50,789
models and web of things we have no

1586
01:28:47,940 --> 01:28:54,690
first version of TD discovery using coop

1587
01:28:50,789 --> 01:28:57,300
Rd one thing that we agreed to work on

1588
01:28:54,690 --> 01:28:59,039
going forward is this Symantec proxy so

1589
01:28:57,300 --> 01:29:01,139
the idea is to go from one DM

1590
01:28:59,039 --> 01:29:03,690
descriptions potentially with use of

1591
01:29:01,139 --> 01:29:04,949
some RDF to thinking descriptions and

1592
01:29:03,690 --> 01:29:07,110
then we could be using something like

1593
01:29:04,949 --> 01:29:09,449
Symantec proxy or a gateway to work

1594
01:29:07,110 --> 01:29:10,920
between applications and devices from

1595
01:29:09,449 --> 01:29:12,449
different ecosystem

1596
01:29:10,920 --> 01:29:13,830
see if you're interested to work on this

1597
01:29:12,449 --> 01:29:15,780
topic you're very welcome to join our

1598
01:29:13,830 --> 01:29:20,370
ongoing Vichy activities at the tingling

1599
01:29:15,780 --> 01:29:21,900
Archie something we learned again of

1600
01:29:20,370 --> 01:29:24,599
course we knew about it you shouldn't do

1601
01:29:21,900 --> 01:29:26,969
models and and examples by hand you make

1602
01:29:24,600 --> 01:29:29,489
a lot of errors there good CI helps here

1603
01:29:26,969 --> 01:29:30,960
automatic tools are even better it's not

1604
01:29:29,489 --> 01:29:32,940
like the tools don't make mistakes but

1605
01:29:30,960 --> 01:29:36,260
they make mistake in a consistent way so

1606
01:29:32,940 --> 01:29:38,428
it's usually easier to fix on the flow

1607
01:29:36,260 --> 01:29:39,810
here's our team members and if you want

1608
01:29:38,429 --> 01:29:41,760
to learn more about you can go to we

1609
01:29:39,810 --> 01:29:43,710
sheet of space or to our idea packet on

1610
01:29:41,760 --> 01:29:51,449
space and we are welcome to join on the

1611
01:29:43,710 --> 01:30:09,620
ongoing activities thank you okay next

1612
01:29:51,449 --> 01:30:09,620
up is l4 s and then NTS after that oh

1613
01:30:10,730 --> 01:30:38,610
there it is okay so this is low low low

1614
01:30:35,699 --> 01:30:44,339
latency scalable throughput for us from

1615
01:30:38,610 --> 01:30:46,730
the transport area and it's it's

1616
01:30:44,340 --> 01:30:51,360
essentially a transition mechanism from

1617
01:30:46,730 --> 01:30:53,150
today to a position where everything can

1618
01:30:51,360 --> 01:30:56,250
just be low latency without having to

1619
01:30:53,150 --> 01:30:59,750
particularly do anything about it and we

1620
01:30:56,250 --> 01:31:05,270
mean really low latency links there to

1621
01:30:59,750 --> 01:31:08,840
existing code and the specs we had a

1622
01:31:05,270 --> 01:31:12,600
number of remote people as well today

1623
01:31:08,840 --> 01:31:15,510
and also three new people to appear on

1624
01:31:12,600 --> 01:31:17,340
site and three remote people who were

1625
01:31:15,510 --> 01:31:20,550
remote last time so it's it's not all

1626
01:31:17,340 --> 01:31:22,760
bad when your remote some people do it

1627
01:31:20,550 --> 01:31:22,760
twice

1628
01:31:24,420 --> 01:31:32,709
what we got achieved really three

1629
01:31:28,659 --> 01:31:36,098
projects the first two of those bullets

1630
01:31:32,709 --> 01:31:37,630
about testbeds and the first one was one

1631
01:31:36,099 --> 01:31:39,639
of the new people getting them to work

1632
01:31:37,630 --> 01:31:42,249
through the read million check you know

1633
01:31:39,639 --> 01:31:44,769
it a fresh set of eyes can through

1634
01:31:42,249 --> 01:31:51,070
everything without anyone else telling

1635
01:31:44,769 --> 01:31:53,440
them site information and also the the

1636
01:31:51,070 --> 01:31:57,159
other one going on on the test another

1637
01:31:53,440 --> 01:31:59,909
testbed was running TCP progress as well

1638
01:31:57,159 --> 01:32:05,440
not so much versus but coexistence with

1639
01:31:59,909 --> 01:32:09,999
bbr v2 which has an l4 s transport

1640
01:32:05,440 --> 01:32:13,119
within it as Google's PBR might as deep

1641
01:32:09,999 --> 01:32:18,449
is the community one ran through full

1642
01:32:13,119 --> 01:32:22,268
set of tests on that on accuracy n

1643
01:32:18,449 --> 01:32:26,888
ill-posed started Saturday on this

1644
01:32:22,269 --> 01:32:29,380
looking at the limits code to prepare it

1645
01:32:26,889 --> 01:32:30,849
for up streaming into Linux so you he

1646
01:32:29,380 --> 01:32:33,340
was getting his head around it all

1647
01:32:30,849 --> 01:32:38,380
reviewing the code and sequencing the

1648
01:32:33,340 --> 01:32:39,309
patches so they can go in missed that

1649
01:32:38,380 --> 01:32:46,650
one

1650
01:32:39,309 --> 01:32:50,170
reasonably in order and they're also

1651
01:32:46,650 --> 01:32:54,848
that a complete remote team working on

1652
01:32:50,170 --> 01:32:57,429
NS 3 added first start up got that

1653
01:32:54,849 --> 01:32:59,760
running but still more to do on that

1654
01:32:57,429 --> 01:33:02,889
need a testing framework around it

1655
01:32:59,760 --> 01:33:08,280
updated the g oq to the spec although

1656
01:33:02,889 --> 01:33:10,179
that's still in progress and he added

1657
01:33:08,280 --> 01:33:14,320
configuration code so if the auto

1658
01:33:10,179 --> 01:33:17,679
configures when you all the ECM DSP

1659
01:33:14,320 --> 01:33:22,539
stuff for the NS three implementation a

1660
01:33:17,679 --> 01:33:25,659
piece of TCP so we learn we found a few

1661
01:33:22,539 --> 01:33:27,880
missing steps in the readme accuracy n

1662
01:33:25,659 --> 01:33:29,768
found it's more flexible in first

1663
01:33:27,880 --> 01:33:31,570
appears this was also with the SE e team

1664
01:33:29,769 --> 01:33:35,830
here Richard was explaining how that

1665
01:33:31,570 --> 01:33:38,679
might be added that was already reported

1666
01:33:35,830 --> 01:33:51,940
industry is useful for getting things

1667
01:33:38,680 --> 01:33:52,450
done okay next up is MTS and then who

1668
01:33:51,940 --> 01:33:56,169
was it

1669
01:33:52,450 --> 01:34:07,990
TMR ID I think and I think that's it

1670
01:33:56,170 --> 01:34:28,510
unless I missed any yeah you guys here

1671
01:34:07,990 --> 01:34:28,780
it is okay getting close you know the

1672
01:34:28,510 --> 01:34:33,130
drill

1673
01:34:28,780 --> 01:34:34,929
laughter thank you so hi everyone my

1674
01:34:33,130 --> 01:34:38,230
name is accused of an eagle I worked for

1675
01:34:34,930 --> 01:34:41,770
a net mode in Sweden so I'm gonna talk

1676
01:34:38,230 --> 01:34:45,610
about about NTS it's security firm for

1677
01:34:41,770 --> 01:34:48,730
MTP basically okay sorry

1678
01:34:45,610 --> 01:34:51,040
so time is important is it's basically

1679
01:34:48,730 --> 01:34:53,110
the message and I think everybody knows

1680
01:34:51,040 --> 01:34:55,480
that so I didn't have to come up with a

1681
01:34:53,110 --> 01:34:58,780
lot of examples and when it comes to

1682
01:34:55,480 --> 01:35:00,580
time of the internet MTP is the protocol

1683
01:34:58,780 --> 01:35:03,849
that everybody uses it's been around

1684
01:35:00,580 --> 01:35:06,660
since 1985 I think it even predates BSD

1685
01:35:03,850 --> 01:35:09,730
sockets so NDP is pretty old

1686
01:35:06,660 --> 01:35:11,800
NTP does have some security but it's

1687
01:35:09,730 --> 01:35:14,349
based on symmetric keys pre-shared keys

1688
01:35:11,800 --> 01:35:18,340
so it doesn't really scale to a lot of

1689
01:35:14,350 --> 01:35:21,010
users NPS adds the kind of scaling we

1690
01:35:18,340 --> 01:35:25,120
need to be able to do secure NTP to

1691
01:35:21,010 --> 01:35:27,970
everybody and I wants to meet haven't

1692
01:35:25,120 --> 01:35:30,670
done a lot of progress today which is in

1693
01:35:27,970 --> 01:35:33,310
a way good it's because we got a lot of

1694
01:35:30,670 --> 01:35:35,530
things done at early hackathons in I had

1695
01:35:33,310 --> 01:35:38,410
my first hackathon was in Prague and I

1696
01:35:35,530 --> 01:35:42,309
felt that we made a lot of progress at

1697
01:35:38,410 --> 01:35:44,290
that time so today what I've done is

1698
01:35:42,310 --> 01:35:46,150
really just been working on scripts to

1699
01:35:44,290 --> 01:35:48,910
verify the functionality of the entire

1700
01:35:46,150 --> 01:35:51,580
servers that's because we had netted her

1701
01:35:48,910 --> 01:35:54,099
MTS servers up and running now and we

1702
01:35:51,580 --> 01:35:56,410
intend to keep them up and running so

1703
01:35:54,100 --> 01:35:58,510
I'm trying to build tools so that our IT

1704
01:35:56,410 --> 01:36:01,960
operations department can see if

1705
01:35:58,510 --> 01:36:03,280
anything fails and quickly corrected it

1706
01:36:01,960 --> 01:36:06,040
might be interesting to other people so

1707
01:36:03,280 --> 01:36:08,290
I'll try to open sources I'm I've been

1708
01:36:06,040 --> 01:36:11,920
also working on how to on how to

1709
01:36:08,290 --> 01:36:14,550
actually start using NTS in a client and

1710
01:36:11,920 --> 01:36:19,120
I've been using entity SEC as an example

1711
01:36:14,550 --> 01:36:21,310
and this how-to is suppose to or I'm

1712
01:36:19,120 --> 01:36:24,280
going to show how to do it with the NTS

1713
01:36:21,310 --> 01:36:27,210
services for a university not real anger

1714
01:36:24,280 --> 01:36:30,910
has done those we have cloud fire

1715
01:36:27,210 --> 01:36:33,330
officially we said that they have entire

1716
01:36:30,910 --> 01:36:36,430
service that they intend to keep running

1717
01:36:33,330 --> 01:36:39,130
I've done a an implementation for net

1718
01:36:36,430 --> 01:36:42,040
mode which is a Frankenstein's monster

1719
01:36:39,130 --> 01:36:44,950
of my Python code and the time stamping

1720
01:36:42,040 --> 01:36:48,130
from Crowley and NTP SEC they was around

1721
01:36:44,950 --> 01:36:52,059
a couple of servers and sort of good

1722
01:36:48,130 --> 01:36:55,330
news the NTP NTS draft was submitted for

1723
01:36:52,060 --> 01:36:56,530
publication on them the 7th so hopefully

1724
01:36:55,330 --> 01:37:00,970
this will actually become a standard

1725
01:36:56,530 --> 01:37:03,160
pretty soon and not much to say today

1726
01:37:00,970 --> 01:37:05,080
it's been me Krista fighting on deepest

1727
01:37:03,160 --> 01:37:09,400
today people who have been working on

1728
01:37:05,080 --> 01:37:11,890
NTS and I'll be at the academia tomorrow

1729
01:37:09,400 --> 01:37:14,200
if anybody has some questions or wants

1730
01:37:11,890 --> 01:37:16,300
to see anything what has any one is

1731
01:37:14,200 --> 01:37:18,400
about NTS and there's a link to the

1732
01:37:16,300 --> 01:37:21,270
draft all all so if anyone wants to see

1733
01:37:18,400 --> 01:37:24,900
it thank you

1734
01:37:21,270 --> 01:37:29,460
[Applause]

1735
01:37:24,900 --> 01:37:29,460
ok next up is TMR ID

1736
01:37:32,050 --> 01:37:35,609
[Music]

1737
01:37:44,190 --> 01:37:47,259
[Music]

1738
01:37:54,570 --> 01:37:57,858
[Music]

1739
01:37:59,160 --> 01:38:04,139
Thanks so we're working on a problem

1740
01:38:01,960 --> 01:38:07,030
that comes from the real physical world

1741
01:38:04,140 --> 01:38:08,830
you're at a emergency scene you see this

1742
01:38:07,030 --> 01:38:10,840
unmanned aircraft hovering above the

1743
01:38:08,830 --> 01:38:12,700
building that's on fire and you want to

1744
01:38:10,840 --> 01:38:13,660
know whose it is so you can figure out

1745
01:38:12,700 --> 01:38:14,920
whether it's like another fire

1746
01:38:13,660 --> 01:38:16,660
department and has some business being

1747
01:38:14,920 --> 01:38:17,890
there or maybe it's the guy that started

1748
01:38:16,660 --> 01:38:20,200
the fire

1749
01:38:17,890 --> 01:38:21,940
so there's another standards development

1750
01:38:20,200 --> 01:38:23,500
organization ASTM International that's

1751
01:38:21,940 --> 01:38:25,450
been working on this problem for the US

1752
01:38:23,500 --> 01:38:28,240
Federal Aviation Administration and

1753
01:38:25,450 --> 01:38:30,070
various other civil aviation authorities

1754
01:38:28,240 --> 01:38:31,990
in the rest of the world problem is

1755
01:38:30,070 --> 01:38:33,460
their standard does not provide for

1756
01:38:31,990 --> 01:38:36,070
information that is immediately

1757
01:38:33,460 --> 01:38:38,050
actionable and privacy-preserving so

1758
01:38:36,070 --> 01:38:41,230
we're looking at leveraging some ITTF

1759
01:38:38,050 --> 01:38:43,600
work mostly related to hip we're going

1760
01:38:41,230 --> 01:38:47,709
to need to update hip with some new

1761
01:38:43,600 --> 01:38:49,360
crypto and make it hierarchical so

1762
01:38:47,710 --> 01:38:50,950
fundamentally this is to make the claims

1763
01:38:49,360 --> 01:38:56,259
that come across one of these remote ID

1764
01:38:50,950 --> 01:38:58,420
systems trustworthy so we started early

1765
01:38:56,260 --> 01:39:02,050
at the New York UAS test site we did

1766
01:38:58,420 --> 01:39:04,450
some stuff with DNS lookups what we were

1767
01:39:02,050 --> 01:39:06,310
working on today is a shake 128 based

1768
01:39:04,450 --> 01:39:08,490
hierarchical hit as a temporary stand in

1769
01:39:06,310 --> 01:39:11,710
for a seasick based hierarchical hit

1770
01:39:08,490 --> 01:39:16,179
Adam got bun two builds working cleanly

1771
01:39:11,710 --> 01:39:18,460
on recent Ubuntu we started discussing

1772
01:39:16,180 --> 01:39:21,400
observer to pilot emergency comes via

1773
01:39:18,460 --> 01:39:25,230
hip proxies back in New York we flew a

1774
01:39:21,400 --> 01:39:27,910
Bluetooth broadcast UAS from what ID of

1775
01:39:25,230 --> 01:39:29,799
currently standardized flat hit what

1776
01:39:27,910 --> 01:39:30,760
we're gonna demo here right now and you

1777
01:39:29,800 --> 01:39:31,960
here in the room aren't gonna be able to

1778
01:39:30,760 --> 01:39:34,030
see this but those who are playing along

1779
01:39:31,960 --> 01:39:35,110
at home since the cameras right here

1780
01:39:34,030 --> 01:39:38,080
will be able to get a better experience

1781
01:39:35,110 --> 01:39:39,820
I'm gonna start a scan here and then

1782
01:39:38,080 --> 01:39:42,040
Adam is gonna start broadcasting using

1783
01:39:39,820 --> 01:39:44,259
his cell phone as a surrogate for an

1784
01:39:42,040 --> 01:39:46,300
aircraft and I hope that the Bluetooth

1785
01:39:44,260 --> 01:39:46,810
range reached it did my screen paint yes

1786
01:39:46,300 --> 01:39:48,190
it did

1787
01:39:46,810 --> 01:39:51,460
those of you who are playing along at

1788
01:39:48,190 --> 01:39:53,889
home can see that the UAS ID type is a

1789
01:39:51,460 --> 01:39:55,990
host identity tag which is not in the

1790
01:39:53,890 --> 01:39:59,200
ASTM standard but we're lobbying for it

1791
01:39:55,990 --> 01:40:00,580
to get added to that standard we need

1792
01:39:59,200 --> 01:40:00,849
some more reviewers we need some inter

1793
01:40:00,580 --> 01:40:03,550
opera

1794
01:40:00,850 --> 01:40:05,350
the experimenters some of the work that

1795
01:40:03,550 --> 01:40:06,550
was done in hip a few years ago on an

1796
01:40:05,350 --> 01:40:08,230
experimental basis really needs

1797
01:40:06,550 --> 01:40:11,380
maturation some of the drafts need

1798
01:40:08,230 --> 01:40:12,849
maturation when I say UAS from what I D

1799
01:40:11,380 --> 01:40:15,220
roles of who is I'm really talking about

1800
01:40:12,850 --> 01:40:17,200
the whole domain registration process

1801
01:40:15,220 --> 01:40:19,420
not so much the who is protocol probably

1802
01:40:17,200 --> 01:40:21,849
the new are DAP protocol how are we

1803
01:40:19,420 --> 01:40:23,170
gonna use DNS because the

1804
01:40:21,850 --> 01:40:24,250
privacy-preserving aspect is really

1805
01:40:23,170 --> 01:40:26,440
important

1806
01:40:24,250 --> 01:40:28,000
duly constituted authority needs to know

1807
01:40:26,440 --> 01:40:29,110
who's flying that thing so we can tell

1808
01:40:28,000 --> 01:40:30,850
him to get the heck out of that airspace

1809
01:40:29,110 --> 01:40:33,309
because the buildings on fire underneath

1810
01:40:30,850 --> 01:40:35,020
them or whatever but the little old lady

1811
01:40:33,310 --> 01:40:36,150
next door who just doesn't like the

1812
01:40:35,020 --> 01:40:38,410
buzzing sound in the neighbor's backyard

1813
01:40:36,150 --> 01:40:41,230
shouldn't be able to use this as a pilot

1814
01:40:38,410 --> 01:40:43,300
harassment tool so the new IETF work

1815
01:40:41,230 --> 01:40:45,299
will be mostly in the hip working group

1816
01:40:43,300 --> 01:40:47,950
but we're also going to need to do some

1817
01:40:45,300 --> 01:40:50,170
coordination with other standards

1818
01:40:47,950 --> 01:40:52,139
development organizations including ASTM

1819
01:40:50,170 --> 01:40:54,520
the International Civil Aviation

1820
01:40:52,140 --> 01:40:59,050
Organization and the radio technical

1821
01:40:54,520 --> 01:41:00,910
Commission for aviation and so all the

1822
01:40:59,050 --> 01:41:03,550
team members are noobs except for Bob

1823
01:41:00,910 --> 01:41:10,389
Moskowitz and please join us set up off

1824
01:41:03,550 --> 01:41:15,240
Tuesday morning thank you so we have a

1825
01:41:10,390 --> 01:41:19,600
presentation on net cough yang managed

1826
01:41:15,240 --> 01:41:23,190
tester that I missed and then we'll have

1827
01:41:19,600 --> 01:41:23,190
a quick after that

1828
01:41:47,440 --> 01:41:51,849
so left and right before heading back

1829
01:41:55,300 --> 01:42:08,090
okay so our goal is to implement RFC

1830
01:42:01,630 --> 01:42:11,210
2544 tests in simple command line two

1831
01:42:08,090 --> 01:42:15,980
that connects the devices part of the

1832
01:42:11,210 --> 01:42:18,800
test setup over net conf and those

1833
01:42:15,980 --> 01:42:24,490
devices had the young model so we have a

1834
01:42:18,800 --> 01:42:27,880
draft that describes this solution which

1835
01:42:24,490 --> 01:42:31,820
is described by this diagram here and

1836
01:42:27,880 --> 01:42:33,440
the execution of the test should be as

1837
01:42:31,820 --> 01:42:37,940
simple as running a command line

1838
01:42:33,440 --> 01:42:43,929
providing a configuration based on the

1839
01:42:37,940 --> 01:42:48,519
UNK models mainly the topology ITF model

1840
01:42:43,930 --> 01:42:50,750
augmented with data about connecting and

1841
01:42:48,520 --> 01:42:55,700
specifying what kind of parameters the

1842
01:42:50,750 --> 01:42:59,810
test should actually take into account

1843
01:42:55,700 --> 01:43:02,630
when executing so this there are many

1844
01:42:59,810 --> 01:43:05,920
different RFC 25:44 implementations but

1845
01:43:02,630 --> 01:43:08,960
they usually involve graphical

1846
01:43:05,920 --> 01:43:13,640
interaction which is not so easy to

1847
01:43:08,960 --> 01:43:19,330
reproduce without there is no model so

1848
01:43:13,640 --> 01:43:19,330
this is this was the goal of the test so

1849
01:43:20,590 --> 01:43:28,550
to do a RFC 2544 you need the hardware

1850
01:43:24,320 --> 01:43:33,139
to actually execute it correctly and

1851
01:43:28,550 --> 01:43:36,590
then we had to make hardware for that so

1852
01:43:33,140 --> 01:43:39,680
we we have two testers one is a

1853
01:43:36,590 --> 01:43:41,420
proprietary tested on the bottom and the

1854
01:43:39,680 --> 01:43:44,540
other one is the open source open

1855
01:43:41,420 --> 01:43:46,790
hardware tester which is running Debian

1856
01:43:44,540 --> 01:43:49,730
both of them are running Debian and you

1857
01:43:46,790 --> 01:43:51,440
may want to try net conf this error the

1858
01:43:49,730 --> 01:43:54,349
middle one is the open

1859
01:43:51,440 --> 01:44:00,110
whoa cheap switch that we used as a

1860
01:43:54,350 --> 01:44:01,969
device under test and we put net Kampf D

1861
01:44:00,110 --> 01:44:06,500
wrapper on top of that so that we can

1862
01:44:01,969 --> 01:44:23,449
have a transactional model and that's

1863
01:44:06,500 --> 01:44:24,920
about it thank you okay quick usual

1864
01:44:23,449 --> 01:44:27,160
suspects were in the back corner there

1865
01:44:24,920 --> 01:44:30,469
interrupting their quick implementations

1866
01:44:27,160 --> 01:44:32,300
I think we had seven clients and eleven

1867
01:44:30,469 --> 01:44:34,250
servers actually participating that's a

1868
01:44:32,300 --> 01:44:37,670
little worse than usual a couple reasons

1869
01:44:34,250 --> 01:44:39,110
for that number one we I think with

1870
01:44:37,670 --> 01:44:41,230
lower attendance here in Singapore muted

1871
01:44:39,110 --> 01:44:43,670
in Montreal and some others and secondly

1872
01:44:41,230 --> 01:44:45,259
draft 24 drop only a couple weeks ago

1873
01:44:43,670 --> 01:44:46,430
when I think we'd several

1874
01:44:45,260 --> 01:44:48,920
implementations that weren't quite

1875
01:44:46,430 --> 01:44:50,360
caught up yet nevertheless the story is

1876
01:44:48,920 --> 01:44:52,489
fairly similar a lot of a based on

1877
01:44:50,360 --> 01:44:54,920
functionality we're pretty strong

1878
01:44:52,489 --> 01:44:56,870
Interop on even though some of the

1879
01:44:54,920 --> 01:44:58,190
details are changing we have a few

1880
01:44:56,870 --> 01:45:00,830
implementations that are doing some of

1881
01:44:58,190 --> 01:45:02,809
the advanced IP address migration stuff

1882
01:45:00,830 --> 01:45:05,660
and some of the more advanced HTTP 3

1883
01:45:02,810 --> 01:45:07,780
features like push and and so on but

1884
01:45:05,660 --> 01:45:10,010
probably not as many as we would like

1885
01:45:07,780 --> 01:45:11,000
overall I think things are moving

1886
01:45:10,010 --> 01:45:14,750
forward a lot of production

1887
01:45:11,000 --> 01:45:17,090
implementations are are maybe don't

1888
01:45:14,750 --> 01:45:21,590
quite have all the all the

1889
01:45:17,090 --> 01:45:23,360
interoperability checkboxes that some of

1890
01:45:21,590 --> 01:45:24,620
the some of the you know the for fun

1891
01:45:23,360 --> 01:45:25,730
implementations are having but they're

1892
01:45:24,620 --> 01:45:28,040
getting there and there they're getting

1893
01:45:25,730 --> 01:45:32,660
closer to do something can actually

1894
01:45:28,040 --> 01:45:44,080
deploy questions it's all I got

1895
01:45:32,660 --> 01:45:46,849
thanks ok any presentations I miss ok

1896
01:45:44,080 --> 01:45:49,250
one one thing I forgot to mention

1897
01:45:46,850 --> 01:45:51,320
earlier if some of the teams if you want

1898
01:45:49,250 --> 01:45:52,610
you're like a team photo taken or

1899
01:45:51,320 --> 01:45:54,830
something we have our friendly

1900
01:45:52,610 --> 01:45:57,110
photographer who will hang around for a

1901
01:45:54,830 --> 01:45:58,460
bit afterwards and you're welcome to

1902
01:45:57,110 --> 01:46:03,320
stick around let them know you want to

1903
01:45:58,460 --> 01:46:05,300
get a team photo taken several of you

1904
01:46:03,320 --> 01:46:08,570
mentioned that you plan to present

1905
01:46:05,300 --> 01:46:14,900
the hack demo happy hour tomorrow that

1906
01:46:08,570 --> 01:46:15,639
is what from 6-10 740 p.m. would love to

1907
01:46:14,900 --> 01:46:19,610
see you there

1908
01:46:15,640 --> 01:46:21,950
if you do plan to do that the sooner you

1909
01:46:19,610 --> 01:46:24,740
sign up the easier it is for us to to

1910
01:46:21,950 --> 01:46:27,769
plan and manage the space and we have a

1911
01:46:24,740 --> 01:46:30,110
cut-off time at noon tomorrow

1912
01:46:27,770 --> 01:46:32,210
if you sign up after noon we'll try to

1913
01:46:30,110 --> 01:46:34,070
accommodate you but I can't promise that

1914
01:46:32,210 --> 01:46:40,280
we will especially if we have a lot of

1915
01:46:34,070 --> 01:46:43,009
teams presenting the code lounge will be

1916
01:46:40,280 --> 01:46:44,750
here kind of this half of the room so I

1917
01:46:43,010 --> 01:46:46,790
know some of you said we didn't get a

1918
01:46:44,750 --> 01:46:48,200
chance to finish everything or you know

1919
01:46:46,790 --> 01:46:50,180
we have other things we want to continue

1920
01:46:48,200 --> 01:46:52,700
working on you're welcome to use that

1921
01:46:50,180 --> 01:46:54,980
space if it's helpful you can also

1922
01:46:52,700 --> 01:46:56,240
schedule time there's a page for the

1923
01:46:54,980 --> 01:46:58,969
code lounge you'll find it in the

1924
01:46:56,240 --> 01:47:04,820
hackathon wiki and so you can sign up

1925
01:46:58,970 --> 01:47:06,380
there and welcome you to do that how to

1926
01:47:04,820 --> 01:47:09,349
thought you know next time I think what

1927
01:47:06,380 --> 01:47:11,240
we're going to do is we'll give a time

1928
01:47:09,350 --> 01:47:13,760
penalty to anyone who doesn't get their

1929
01:47:11,240 --> 01:47:15,620
slides in like well one less minute or

1930
01:47:13,760 --> 01:47:18,710
maybe one more minute if you do get your

1931
01:47:15,620 --> 01:47:21,530
slides in in time and a bit of an

1932
01:47:18,710 --> 01:47:25,010
incentive there other than that I think

1933
01:47:21,530 --> 01:47:27,410
we're we're done thank you all for

1934
01:47:25,010 --> 01:47:30,230
coming here early spending your weekend

1935
01:47:27,410 --> 01:47:32,900
with us I hope you got a lot of value

1936
01:47:30,230 --> 01:47:35,570
out of the hackathon I think I've

1937
01:47:32,900 --> 01:47:37,759
certainly seen a great sort of impact of

1938
01:47:35,570 --> 01:47:39,230
the hackathons had on on what's

1939
01:47:37,760 --> 01:47:41,450
happening in the working groups please

1940
01:47:39,230 --> 01:47:44,660
do bring back what you learned into your

1941
01:47:41,450 --> 01:47:46,429
working group feel free to upload more

1942
01:47:44,660 --> 01:47:48,260
like your presentations if you have

1943
01:47:46,430 --> 01:47:50,090
things you want to add to them you're

1944
01:47:48,260 --> 01:47:52,250
free to do that even after the hackathon

1945
01:47:50,090 --> 01:47:55,390
ends that's all good because that's a

1946
01:47:52,250 --> 01:47:57,500
great resource and we have meet echo

1947
01:47:55,390 --> 01:47:59,210
recording all this so we'll have that

1948
01:47:57,500 --> 01:48:04,190
too in case you want a recording of your

1949
01:47:59,210 --> 01:48:07,090
presentation any questions comments

1950
01:48:04,190 --> 01:48:07,089
feedback

1951
01:48:09,510 --> 01:48:17,040
well thanks all except that all right

1952
01:48:14,460 --> 01:48:19,980
well thank you all and we'll try to make

1953
01:48:17,040 --> 01:48:22,170
sure we have as big a space and in

1954
01:48:19,980 --> 01:48:24,509
Vancouver and hopefully even more all of

1955
01:48:22,170 --> 01:48:26,520
you show up and tell your friends bring

1956
01:48:24,510 --> 01:48:29,900
them along too so thank you very much

1957
01:48:26,520 --> 01:48:29,900
enjoy the rest of the I

1958
01:48:30,020 --> 01:48:33,270
[Applause]

1959
01:48:37,660 --> 01:48:40,750
[Music]

