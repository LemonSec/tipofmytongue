1
00:00:17,310 --> 00:00:21,360
[Laughter]

2
00:00:36,750 --> 00:00:41,010
[Laughter]

3
00:01:06,390 --> 00:01:09,409
[Music]

4
00:01:33,100 --> 00:01:44,658
it is 131 so it's time all right

5
00:01:40,429 --> 00:01:47,719
so I think we're gonna get started so

6
00:01:44,659 --> 00:01:50,799
here's the note well plead oh please let

7
00:01:47,719 --> 00:01:50,798
us know if you have any questions

8
00:01:55,939 --> 00:02:01,158
so administrative tasks we have to note

9
00:01:58,579 --> 00:02:03,110
takers and a driver scribe so thank you

10
00:02:01,159 --> 00:02:06,759
if you want to follow along with the

11
00:02:03,110 --> 00:02:09,169
notes etherpad link is on this slide

12
00:02:06,759 --> 00:02:12,860
you're more than welcome to help out in

13
00:02:09,169 --> 00:02:18,670
addition to our two note takers here's

14
00:02:12,860 --> 00:02:18,670
our agenda for today any agenda bashing

15
00:02:19,959 --> 00:02:26,540
alright

16
00:02:21,849 --> 00:02:29,030
so working group status we have two

17
00:02:26,540 --> 00:02:36,769
drafts that are currently in working

18
00:02:29,030 --> 00:02:38,150
group last call I think we yeah we've

19
00:02:36,769 --> 00:02:40,910
done at least one working group less

20
00:02:38,150 --> 00:02:43,340
call so I think we're gonna want to have

21
00:02:40,910 --> 00:02:46,370
some discussion during the draft updates

22
00:02:43,340 --> 00:02:50,329
about next step on on those two

23
00:02:46,370 --> 00:02:51,980
documents we also have the suit manifest

24
00:02:50,329 --> 00:02:54,230
which is progressing you know rather

25
00:02:51,980 --> 00:02:57,200
well there's been some recent updates to

26
00:02:54,230 --> 00:02:59,000
that and and so I know I'm personally

27
00:02:57,200 --> 00:03:04,310
interested in where the next steps are

28
00:02:59,000 --> 00:03:06,609
there two milestones we're doing okay on

29
00:03:04,310 --> 00:03:12,440
our milestones we recently revised them

30
00:03:06,609 --> 00:03:15,440
we're expecting to submit three

31
00:03:12,440 --> 00:03:18,970
documents to the IAS G there are two

32
00:03:15,440 --> 00:03:23,350
documents to do is G this month the

33
00:03:18,970 --> 00:03:25,880
architecture and information model so

34
00:03:23,350 --> 00:03:28,160
we'll need to talk about how we can

35
00:03:25,880 --> 00:03:31,910
accomplish that and then we're expecting

36
00:03:28,160 --> 00:03:35,750
at the next IETF or by the next IETF to

37
00:03:31,910 --> 00:03:38,620
be able to submit the suit manifest to

38
00:03:35,750 --> 00:03:38,620
the is G as well

39
00:03:42,950 --> 00:03:49,640
or if tea doesn't continue to give us

40
00:03:45,349 --> 00:03:53,500
issues I think that's so I think with

41
00:03:49,640 --> 00:04:07,790
that we're going to switch to the

42
00:03:53,500 --> 00:04:11,480
hackathon honest ok this hackathon

43
00:04:07,790 --> 00:04:13,549
announcement as you can see if you have

44
00:04:11,480 --> 00:04:16,099
been following the mailing list and

45
00:04:13,550 --> 00:04:19,220
you've seen that we boasted a few males

46
00:04:16,100 --> 00:04:22,940
before doodle boil finding a date for a

47
00:04:19,220 --> 00:04:25,460
hackathon and be decided not to do it in

48
00:04:22,940 --> 00:04:27,770
at this meeting but actually do it

49
00:04:25,460 --> 00:04:30,530
separately so this it's always a

50
00:04:27,770 --> 00:04:32,299
question of distraction and so on this

51
00:04:30,530 --> 00:04:35,960
is a very busy meeting as you know or

52
00:04:32,300 --> 00:04:38,180
all IETF meetings a very PC and we've

53
00:04:35,960 --> 00:04:39,979
been quite successful in doing the

54
00:04:38,180 --> 00:04:43,250
hackathon last I mean in actually in

55
00:04:39,979 --> 00:04:47,840
Berlin so we thought that we should do

56
00:04:43,250 --> 00:04:50,450
that again with the help of Matias I

57
00:04:47,840 --> 00:04:55,369
don't see him in the room right now or

58
00:04:50,450 --> 00:04:59,300
is he okay um but in any case he set up

59
00:04:55,370 --> 00:05:02,450
a website which I think by now includes

60
00:04:59,300 --> 00:05:05,090
a registration link so the idea is that

61
00:05:02,450 --> 00:05:08,990
we have a three day event three four

62
00:05:05,090 --> 00:05:12,469
days the first day with a tutorial and

63
00:05:08,990 --> 00:05:15,770
that tutorial is focused on giving you

64
00:05:12,470 --> 00:05:17,660
some or enough information hands-on

65
00:05:15,770 --> 00:05:19,340
information so you can then actually be

66
00:05:17,660 --> 00:05:23,990
productive at the hackathon so this is

67
00:05:19,340 --> 00:05:25,969
not a one day slideshow but it's a the

68
00:05:23,990 --> 00:05:29,360
whole thing is it's very hands-on

69
00:05:25,970 --> 00:05:32,390
oriented and will cover the work from

70
00:05:29,360 --> 00:05:36,430
these three groups namely suit deep and

71
00:05:32,390 --> 00:05:40,610
rats because they are all interrelated

72
00:05:36,430 --> 00:05:43,620
and we haven't worked out the tutorial

73
00:05:40,610 --> 00:05:46,440
day the agenda yet but that

74
00:05:43,620 --> 00:05:49,470
weeks I've had a chance to talk to a few

75
00:05:46,440 --> 00:05:53,400
folks here and and find some some

76
00:05:49,470 --> 00:05:56,460
volunteers to present and you will have

77
00:05:53,400 --> 00:06:00,570
to subscribe register I would be free of

78
00:05:56,460 --> 00:06:02,359
charge for you but I need what we Mateus

79
00:06:00,570 --> 00:06:05,550
and I need the registration information

80
00:06:02,360 --> 00:06:09,450
for two reasons first of course the

81
00:06:05,550 --> 00:06:14,790
logistics catering etc for the for the

82
00:06:09,450 --> 00:06:16,740
host but also because I'm ordering

83
00:06:14,790 --> 00:06:18,270
hardware so that you actually have

84
00:06:16,740 --> 00:06:20,250
something to play with

85
00:06:18,270 --> 00:06:23,539
and needless to say that I need to know

86
00:06:20,250 --> 00:06:26,820
like what hardware do you to order

87
00:06:23,540 --> 00:06:29,010
because there's obviously some slight

88
00:06:26,820 --> 00:06:33,870
differences between the different groups

89
00:06:29,010 --> 00:06:36,180
and for the rats our group the current

90
00:06:33,870 --> 00:06:38,220
so it hasn't been fully finalized yet

91
00:06:36,180 --> 00:06:41,730
the hardware selection but for the rats

92
00:06:38,220 --> 00:06:45,270
group we are thinking about using one of

93
00:06:41,730 --> 00:06:49,620
the latest nxb our bots on supporting

94
00:06:45,270 --> 00:06:52,409
arm be a dem so we can actually test out

95
00:06:49,620 --> 00:06:56,130
these the results from from the rats at

96
00:06:52,410 --> 00:07:02,850
the station work for deep emmanuel

97
00:06:56,130 --> 00:07:05,640
suggested a port also from nxp one that

98
00:07:02,850 --> 00:07:12,000
is an earlier generation using Bluetooth

99
00:07:05,640 --> 00:07:14,310
Low Energy using um v7m and for the

100
00:07:12,000 --> 00:07:17,910
software updates in uh not for that for

101
00:07:14,310 --> 00:07:20,730
the deep work they might be um or Dave

102
00:07:17,910 --> 00:07:22,830
suggested that we actually use virtual

103
00:07:20,730 --> 00:07:25,230
machines but in addition I want to also

104
00:07:22,830 --> 00:07:27,690
order either the port that he's

105
00:07:25,230 --> 00:07:29,700
recommended on the list today if you

106
00:07:27,690 --> 00:07:35,550
have been to the earlier deep meeting or

107
00:07:29,700 --> 00:07:37,860
the ste stm32 mp1 port that I've been

108
00:07:35,550 --> 00:07:40,320
using recently recently so there would

109
00:07:37,860 --> 00:07:43,440
be a mixture of different devices out

110
00:07:40,320 --> 00:07:45,450
there and and depending on who registers

111
00:07:43,440 --> 00:07:48,870
for what will make those ports available

112
00:07:45,450 --> 00:07:51,300
there will be a little bit of effort for

113
00:07:48,870 --> 00:07:54,570
you for those who participate up front

114
00:07:51,300 --> 00:07:57,020
because um we need to make sure that we

115
00:07:54,570 --> 00:07:58,819
have the software development

116
00:07:57,020 --> 00:08:02,090
set up appropriately sort of we don't

117
00:07:58,819 --> 00:08:04,449
waste time fixing those issues during

118
00:08:02,090 --> 00:08:08,318
the hackathon and and also the tutorial

119
00:08:04,449 --> 00:08:10,789
so I would encourage you to participate

120
00:08:08,319 --> 00:08:13,220
specifically if you want to get a better

121
00:08:10,789 --> 00:08:15,259
understanding of the technology because

122
00:08:13,220 --> 00:08:17,900
I think that's the only way to get there

123
00:08:15,259 --> 00:08:21,530
and I think this is a unique opportunity

124
00:08:17,900 --> 00:08:23,989
because you will hear from some great

125
00:08:21,530 --> 00:08:26,989
speakers during the the tutorial and

126
00:08:23,990 --> 00:08:30,169
then hang around to the nice environment

127
00:08:26,990 --> 00:08:32,659
in Berlin to work on on these protocols

128
00:08:30,169 --> 00:08:35,208
and we'll make some make code available

129
00:08:32,659 --> 00:08:37,760
as much as we can beforehand so that we

130
00:08:35,208 --> 00:08:40,159
can start with a good baseline and then

131
00:08:37,760 --> 00:08:43,578
look at some more interesting advanced

132
00:08:40,159 --> 00:08:46,000
use cases at the hackathon on the date

133
00:08:43,578 --> 00:08:48,680
you see it on the slide MIT or February

134
00:08:46,000 --> 00:08:51,410
based on on the research from the duty

135
00:08:48,680 --> 00:08:53,989
board and yeah we also would like to

136
00:08:51,410 --> 00:08:58,399
thank that the chairs of the three

137
00:08:53,990 --> 00:09:06,110
groups for their support and yeah hope

138
00:08:58,399 --> 00:09:13,790
to see you guys there thank you so next

139
00:09:06,110 --> 00:09:17,480
up we have the suit architecture okay

140
00:09:13,790 --> 00:09:22,069
that's a short presentation short

141
00:09:17,480 --> 00:09:24,640
because we have been running the working

142
00:09:22,070 --> 00:09:28,160
group last call since I think February

143
00:09:24,640 --> 00:09:30,560
or April so it's a little longer working

144
00:09:28,160 --> 00:09:32,949
group last called and usual but I have

145
00:09:30,560 --> 00:09:37,760
been a couple of updates in between

146
00:09:32,950 --> 00:09:40,630
based on the feedback in and this is

147
00:09:37,760 --> 00:09:42,950
just a sort of a brief history or status

148
00:09:40,630 --> 00:09:45,290
version five four included some extra

149
00:09:42,950 --> 00:09:48,620
text on boot loaders because um there

150
00:09:45,290 --> 00:09:51,110
was the request and in version six we

151
00:09:48,620 --> 00:09:52,490
added the deep related information

152
00:09:51,110 --> 00:09:55,040
because of the decision from the working

153
00:09:52,490 --> 00:09:58,029
group to harmonize the work between

154
00:09:55,040 --> 00:10:01,370
those two groups so that has been done

155
00:09:58,029 --> 00:10:04,040
any more recently um Kathleen has posted

156
00:10:01,370 --> 00:10:05,870
a review a more detailed review and

157
00:10:04,040 --> 00:10:09,699
which led to version seven which is the

158
00:10:05,870 --> 00:10:13,870
most recent version you have under on

159
00:10:09,700 --> 00:10:16,300
in the repository that been various

160
00:10:13,870 --> 00:10:18,310
changes throughout the document but I

161
00:10:16,300 --> 00:10:22,630
specifically wanted to point out one

162
00:10:18,310 --> 00:10:25,000
change that concerned the section on

163
00:10:22,630 --> 00:10:27,460
state-of-the-art security mechanisms

164
00:10:25,000 --> 00:10:30,610
where I went into a little bit more

165
00:10:27,460 --> 00:10:32,680
detail on what the different security

166
00:10:30,610 --> 00:10:35,250
state-of-the-art security mechanisms are

167
00:10:32,680 --> 00:10:38,280
because Kathleen was specifically

168
00:10:35,250 --> 00:10:42,550
commenting on on those and questioning

169
00:10:38,280 --> 00:10:46,810
the value and on sort of the meaning of

170
00:10:42,550 --> 00:10:49,660
what we have written there and so I have

171
00:10:46,810 --> 00:10:51,189
specifically pointed out the

172
00:10:49,660 --> 00:10:54,910
authentication integrity protection

173
00:10:51,190 --> 00:10:56,470
confidentiality protection of the of the

174
00:10:54,910 --> 00:11:00,550
firmware image and potentially a

175
00:10:56,470 --> 00:11:02,500
manifest as well and then talked a

176
00:11:00,550 --> 00:11:07,180
little bit more about the hash based

177
00:11:02,500 --> 00:11:09,700
signatures and they are used in the sort

178
00:11:07,180 --> 00:11:12,819
of like or the potential danger of

179
00:11:09,700 --> 00:11:15,790
quantum computers and the fact that you

180
00:11:12,820 --> 00:11:20,380
have a certain amount of unchangeable

181
00:11:15,790 --> 00:11:22,209
code in a bootloader and so if you nail

182
00:11:20,380 --> 00:11:25,420
down specifically cryptographic

183
00:11:22,210 --> 00:11:28,480
algorithms then devices that have a

184
00:11:25,420 --> 00:11:30,849
longer lifetime obviously will then be

185
00:11:28,480 --> 00:11:34,150
at the disadvantage when when suddenly

186
00:11:30,850 --> 00:11:37,720
these quantum computers in their probe

187
00:11:34,150 --> 00:11:40,840
this when existing security mechanisms

188
00:11:37,720 --> 00:11:44,800
as a key security mechanisms suddenly

189
00:11:40,840 --> 00:11:47,590
don't work anymore so that's why I made

190
00:11:44,800 --> 00:11:49,870
this a little bit more explicit and also

191
00:11:47,590 --> 00:11:51,610
um we talked about sort of term meant

192
00:11:49,870 --> 00:11:53,950
under mandatory to implement security

193
00:11:51,610 --> 00:11:57,430
algorithms and I try to be a little bit

194
00:11:53,950 --> 00:11:59,170
more generic here brought it in listing

195
00:11:57,430 --> 00:12:01,449
his specific algorithms because probably

196
00:11:59,170 --> 00:12:03,370
the architecture isn't the right place

197
00:12:01,450 --> 00:12:07,080
to make those recommendations anyway

198
00:12:03,370 --> 00:12:10,930
which is in line with what we did also

199
00:12:07,080 --> 00:12:14,380
two hours ago or so in deep in the deep

200
00:12:10,930 --> 00:12:16,209
architecture so in the bottom paragraph

201
00:12:14,380 --> 00:12:18,750
on the screen it says has to be defined

202
00:12:16,210 --> 00:12:21,430
is the intent that that's going to say

203
00:12:18,750 --> 00:12:22,010
is defined and the super manifest or

204
00:12:21,430 --> 00:12:25,939
what is the

205
00:12:22,010 --> 00:12:26,569
go for that yeah but maybe the wording

206
00:12:25,940 --> 00:12:30,470
could be better

207
00:12:26,570 --> 00:12:32,330
um but has to be defined elsewhere not

208
00:12:30,470 --> 00:12:33,770
in this document not in the architecture

209
00:12:32,330 --> 00:12:36,560
doc is it in the super manifest document

210
00:12:33,770 --> 00:12:37,460
right now and if not where is it or is

211
00:12:36,560 --> 00:12:42,079
it something that the working group

212
00:12:37,460 --> 00:12:46,880
still needs to do good question that's a

213
00:12:42,080 --> 00:12:51,830
good question I have to check I have to

214
00:12:46,880 --> 00:12:52,550
check I don't know Brendon up here he

215
00:12:51,830 --> 00:12:57,440
comes thank you

216
00:12:52,550 --> 00:12:59,780
okay he's coming to answer here at

217
00:12:57,440 --> 00:13:04,250
Brennan hey it's not currently defined

218
00:12:59,780 --> 00:13:07,819
in the suit manifest do you think that

219
00:13:04,250 --> 00:13:13,010
it should be I can't see somewhere that

220
00:13:07,820 --> 00:13:14,210
would be better noted the suit manifest

221
00:13:13,010 --> 00:13:15,800
has not gone through working your class

222
00:13:14,210 --> 00:13:17,570
call yet and so we will leave that as an

223
00:13:15,800 --> 00:13:19,400
action item for this you manifest and

224
00:13:17,570 --> 00:13:23,720
the architecture document can then just

225
00:13:19,400 --> 00:13:28,209
say it referencing the I would find an

226
00:13:23,720 --> 00:13:29,390
issue okay great thank you thank you

227
00:13:28,210 --> 00:13:32,690
okay

228
00:13:29,390 --> 00:13:34,670
good the audios audio at least works for

229
00:13:32,690 --> 00:13:36,080
Brendon this time Dave Walter can you go

230
00:13:34,670 --> 00:13:41,300
back one slide oh sure

231
00:13:36,080 --> 00:13:43,820
so heavy dave Walter Mayer have you

232
00:13:41,300 --> 00:13:46,219
considered 128 bits of security in this

233
00:13:43,820 --> 00:13:50,120
case cuz you know software updates can

234
00:13:46,220 --> 00:13:55,040
be long-lived information you know a lot

235
00:13:50,120 --> 00:13:58,730
of the existing European and missed

236
00:13:55,040 --> 00:14:00,949
guidance indicates 128 bits you know for

237
00:13:58,730 --> 00:14:02,990
information that has a lifespan of you

238
00:14:00,950 --> 00:14:12,130
know 10 years or more that's also

239
00:14:02,990 --> 00:14:14,870
reflected in in RFC 7925 good point I

240
00:14:12,130 --> 00:14:18,320
probably should update that then point

241
00:14:14,870 --> 00:14:23,000
to those other guidelines you're right

242
00:14:18,320 --> 00:14:25,250
so should that be because you start off

243
00:14:23,000 --> 00:14:26,930
on us by saying maybe this shouldn't be

244
00:14:25,250 --> 00:14:28,880
in the architecture document do you want

245
00:14:26,930 --> 00:14:30,439
to move right he length discussion the

246
00:14:28,880 --> 00:14:33,260
super manifest and just reference it

247
00:14:30,440 --> 00:14:35,290
here yeah we okay I guess I better do

248
00:14:33,260 --> 00:14:35,290
that

249
00:14:36,149 --> 00:14:42,129
okay good idea

250
00:14:38,910 --> 00:14:43,689
um so the other question which I think

251
00:14:42,129 --> 00:14:46,269
was a little bit more generic which I

252
00:14:43,689 --> 00:14:51,610
wasn't able to answer in form of text in

253
00:14:46,269 --> 00:14:54,249
the in the document yet or at all is the

254
00:14:51,610 --> 00:14:55,839
document currently from the history of

255
00:14:54,249 --> 00:14:59,410
the group focused very much on low-end

256
00:14:55,839 --> 00:15:00,579
IOT devices and Kathleen was saying like

257
00:14:59,410 --> 00:15:03,610
is there anything in the air that

258
00:15:00,579 --> 00:15:07,660
prevents us from using this on other IOT

259
00:15:03,610 --> 00:15:09,879
devices that are bigger and like a

260
00:15:07,660 --> 00:15:12,969
classical linux based device embedded

261
00:15:09,879 --> 00:15:14,559
device I mean rather than something that

262
00:15:12,970 --> 00:15:16,540
already has like a laptop has a

263
00:15:14,559 --> 00:15:19,389
perfectly fine software update mechanism

264
00:15:16,540 --> 00:15:24,099
so we don't need to work on that but one

265
00:15:19,389 --> 00:15:26,889
could imagine higher end IOT devices

266
00:15:24,100 --> 00:15:29,670
that use classical Linux maybe use some

267
00:15:26,889 --> 00:15:32,529
of the stuff we've work on in in the

268
00:15:29,670 --> 00:15:35,019
deep working group and so you may

269
00:15:32,529 --> 00:15:37,209
actually use that the same software

270
00:15:35,019 --> 00:15:39,699
update mechanism there that we develop

271
00:15:37,209 --> 00:15:41,638
here and is there anything in the

272
00:15:39,699 --> 00:15:44,378
document that we should be doing to

273
00:15:41,639 --> 00:15:49,990
explicitly call out those cases as well

274
00:15:44,379 --> 00:15:52,569
and yeah I I and it's a it's really a

275
00:15:49,990 --> 00:15:54,670
question for a working group to rather

276
00:15:52,569 --> 00:15:57,990
than me unilaterally suddenly expanding

277
00:15:54,670 --> 00:16:00,219
the scope of the work here so I think

278
00:15:57,990 --> 00:16:01,899
maybe question for Brennan because I

279
00:16:00,220 --> 00:16:03,249
thought that there was a statement that

280
00:16:01,899 --> 00:16:04,779
he had already added but maybe it's a

281
00:16:03,249 --> 00:16:06,189
super manifest document there was some

282
00:16:04,779 --> 00:16:09,160
statement about you know nothing in this

283
00:16:06,189 --> 00:16:11,860
prevents its use in larger scenarios

284
00:16:09,160 --> 00:16:13,149
some paraphrasing of that but I don't

285
00:16:11,860 --> 00:16:15,579
remember which document they got put

286
00:16:13,149 --> 00:16:17,490
into you but that came up we and Brennan

287
00:16:15,579 --> 00:16:20,378
was presenting to the teep working group

288
00:16:17,490 --> 00:16:22,839
and I think some statement got at which

289
00:16:20,379 --> 00:16:24,879
was maybe in an interim early this year

290
00:16:22,839 --> 00:16:25,990
and then he put in some statement after

291
00:16:24,879 --> 00:16:30,610
that I thought but I don't know which

292
00:16:25,990 --> 00:16:32,860
document it was um yeah but they're

293
00:16:30,610 --> 00:16:35,290
still in some sense there's a little bit

294
00:16:32,860 --> 00:16:37,029
of we can put that statement in the our

295
00:16:35,290 --> 00:16:40,120
double check whether it's India but the

296
00:16:37,029 --> 00:16:42,610
other question is of course to go and

297
00:16:40,120 --> 00:16:45,279
look into details and in some examples

298
00:16:42,610 --> 00:16:47,170
like does it really do we really cover

299
00:16:45,279 --> 00:16:47,860
everything that needs to be done or I'll

300
00:16:47,170 --> 00:16:49,810
be talking about

301
00:16:47,860 --> 00:16:51,790
extensions here as something else maybe

302
00:16:49,810 --> 00:16:54,160
we missed something because so far the

303
00:16:51,790 --> 00:16:56,439
focus was on something else and even a

304
00:16:54,160 --> 00:16:59,920
deep case while the devices may be or

305
00:16:56,440 --> 00:17:03,399
are larger and different to what is the

306
00:16:59,920 --> 00:17:05,020
primary focus here so far there we have

307
00:17:03,399 --> 00:17:07,329
been talking about updating trusted

308
00:17:05,020 --> 00:17:09,549
applications and what Kathleen was

309
00:17:07,329 --> 00:17:12,000
talking about is updating everything

310
00:17:09,549 --> 00:17:14,109
else as well including the rich

311
00:17:12,000 --> 00:17:17,709
operating system like in Linux

312
00:17:14,109 --> 00:17:22,359
updating the Linux I'm fitting the the

313
00:17:17,709 --> 00:17:24,870
monitor code updating the the REE OS and

314
00:17:22,359 --> 00:17:24,869
so on it's on

315
00:17:26,160 --> 00:17:33,100
Brendan go ahead oh yeah the the update

316
00:17:31,690 --> 00:17:35,290
that I put in was definitely in the

317
00:17:33,100 --> 00:17:37,750
manifest document and it said

318
00:17:35,290 --> 00:17:41,559
essentially that while it's for informed

319
00:17:37,750 --> 00:17:43,660
by firmware update use cases there's

320
00:17:41,559 --> 00:17:46,899
nothing that prevents using it anywhere

321
00:17:43,660 --> 00:17:50,650
else and in fact I don't know how useful

322
00:17:46,900 --> 00:17:54,850
this is but I have seen a few a few

323
00:17:50,650 --> 00:17:57,220
instances of people using an update

324
00:17:54,850 --> 00:17:59,168
system very similar to this for updating

325
00:17:57,220 --> 00:18:00,460
Linux devices and even seen some

326
00:17:59,169 --> 00:18:05,309
discussion about using it to update

327
00:18:00,460 --> 00:18:05,309
Windows devices with whole system images

328
00:18:07,530 --> 00:18:13,540
thank you yeah the question it's like do

329
00:18:11,320 --> 00:18:15,309
we do we really need to do something

330
00:18:13,540 --> 00:18:19,270
here in this document or can we take

331
00:18:15,309 --> 00:18:21,580
this and move forward and sort of

332
00:18:19,270 --> 00:18:23,710
progress it to do the I use G and then

333
00:18:21,580 --> 00:18:25,899
get it published I was just gonna add

334
00:18:23,710 --> 00:18:27,640
our Charter doesn't preclude a solution

335
00:18:25,900 --> 00:18:29,440
that works for higher-end devices either

336
00:18:27,640 --> 00:18:31,600
we just wanted to make sure that the

337
00:18:29,440 --> 00:18:37,780
solution we did design would work for

338
00:18:31,600 --> 00:18:40,360
Class two devices yep so if we have text

339
00:18:37,780 --> 00:18:42,970
in the architecture document that says

340
00:18:40,360 --> 00:18:45,159
that you know it is intended to address

341
00:18:42,970 --> 00:18:49,840
a wide range of things scaling all the

342
00:18:45,160 --> 00:18:51,700
way down to class two devices that

343
00:18:49,840 --> 00:18:53,590
implies it can also scale up yeah I will

344
00:18:51,700 --> 00:18:58,480
double check on whether that's indeed

345
00:18:53,590 --> 00:19:01,090
sort of crystal clear it may not it may

346
00:18:58,480 --> 00:19:01,610
not be entirely there yet so I would I

347
00:19:01,090 --> 00:19:04,790
would do

348
00:19:01,610 --> 00:19:06,770
um yeah I mean I'm happy with the phrase

349
00:19:04,790 --> 00:19:09,710
that Brennan mentioned but he said that

350
00:19:06,770 --> 00:19:13,250
was just many manifest yes so maybe

351
00:19:09,710 --> 00:19:16,250
maybe something over and that should

352
00:19:13,250 --> 00:19:18,650
address odd uh review comments that

353
00:19:16,250 --> 00:19:20,690
Kathleen raised I haven't seen her so

354
00:19:18,650 --> 00:19:24,260
far yet so she may actually not be here

355
00:19:20,690 --> 00:19:26,660
she's not here okay my collage isn't I I

356
00:19:24,260 --> 00:19:29,870
feel like we've been through this like

357
00:19:26,660 --> 00:19:32,180
discussion like 12 times Michael

358
00:19:29,870 --> 00:19:35,300
Richardson which discussion discussion a

359
00:19:32,180 --> 00:19:36,680
bit about about the upper bound of it I

360
00:19:35,300 --> 00:19:39,080
feel like we did this in the chartering

361
00:19:36,680 --> 00:19:41,810
even so I just don't know why we really

362
00:19:39,080 --> 00:19:43,070
I like I can't like I wasn't gonna stand

363
00:19:41,810 --> 00:19:44,540
up because what was the point we've done

364
00:19:43,070 --> 00:19:47,750
this ready bit why are we still talking

365
00:19:44,540 --> 00:19:50,720
at this point so so do we really make

366
00:19:47,750 --> 00:19:53,000
maybe the issue is that that as the

367
00:19:50,720 --> 00:19:56,750
document goes Kathleen's issue is the

368
00:19:53,000 --> 00:19:59,090
document goes to other parts of her and

369
00:19:56,750 --> 00:20:00,080
other companies they're like oh but this

370
00:19:59,090 --> 00:20:02,480
is only for IOT

371
00:20:00,080 --> 00:20:04,820
right blah blah blah blah or whatever

372
00:20:02,480 --> 00:20:06,350
that means and and so we actually just

373
00:20:04,820 --> 00:20:07,879
have to kind of beat them over the head

374
00:20:06,350 --> 00:20:10,639
is that really what it is because I'm

375
00:20:07,880 --> 00:20:16,790
like well I totally expect to someone to

376
00:20:10,640 --> 00:20:22,270
upgrate upgrade the BMC of any kind of a

377
00:20:16,790 --> 00:20:24,950
server system using suit right the the

378
00:20:22,270 --> 00:20:27,170
basic micro controller okay I totally

379
00:20:24,950 --> 00:20:31,090
expect that that's that's I I think

380
00:20:27,170 --> 00:20:33,800
that's totally in in skiing in scope but

381
00:20:31,090 --> 00:20:36,290
but maybe the guys over there thinking

382
00:20:33,800 --> 00:20:37,760
you know that bill 3u servers just

383
00:20:36,290 --> 00:20:40,250
hasn't occurred to them that they're

384
00:20:37,760 --> 00:20:43,580
BMC's an IOT device does it turn power

385
00:20:40,250 --> 00:20:48,320
on and off yeah right well maybe it's a

386
00:20:43,580 --> 00:20:51,889
beauty but perception issue and but I in

387
00:20:48,320 --> 00:20:53,990
in I had to as yet at the of the

388
00:20:51,890 --> 00:20:56,000
document I had to somehow have to

389
00:20:53,990 --> 00:20:57,260
address those reviews and and so I'm

390
00:20:56,000 --> 00:21:01,610
trying to figure out what can I do

391
00:20:57,260 --> 00:21:03,140
differently or better maybe we just need

392
00:21:01,610 --> 00:21:05,659
more examples that's that's all

393
00:21:03,140 --> 00:21:07,670
this is explicitly included for instance

394
00:21:05,660 --> 00:21:11,150
blah blah blah and we should just ask

395
00:21:07,670 --> 00:21:12,380
for you know 10 10 10 points of weird

396
00:21:11,150 --> 00:21:13,940
things that people thought about that

397
00:21:12,380 --> 00:21:14,960
would be appropriate for suit that no

398
00:21:13,940 --> 00:21:17,809
one wouldn't know

399
00:21:14,960 --> 00:21:22,640
wise think about I mean what why not

400
00:21:17,809 --> 00:21:55,549
yeah okay and then hopefully we are done

401
00:21:22,640 --> 00:21:57,679
with that are there anyone in the room

402
00:21:55,549 --> 00:22:03,770
that have any additional issues for this

403
00:21:57,679 --> 00:22:05,779
documents because if not after we

404
00:22:03,770 --> 00:22:20,809
address this one question our plan is to

405
00:22:05,779 --> 00:22:22,279
just send it forward to the isg all

406
00:22:20,809 --> 00:22:26,320
right sounds good

407
00:22:22,279 --> 00:22:26,320
Honus when when can we expect an update

408
00:22:33,279 --> 00:22:37,360
are you saying by the end of the meeting

409
00:22:41,919 --> 00:22:56,659
all right I'm Yasuni you've set a

410
00:22:49,759 --> 00:23:00,440
precedent okay yeah as soon as you give

411
00:22:56,659 --> 00:23:02,870
that to us Thanks all right so next we

412
00:23:00,440 --> 00:23:15,309
have information model Brendan you want

413
00:23:02,870 --> 00:23:17,059
to step in the queue all right Brendan

414
00:23:15,309 --> 00:23:29,299
all right

415
00:23:17,059 --> 00:23:31,639
next slide please so the last call has

416
00:23:29,299 --> 00:23:35,629
been going on for a while but I think

417
00:23:31,639 --> 00:23:38,330
that maybe the middle of August do not

418
00:23:35,629 --> 00:23:41,600
many people notice that it had it has

419
00:23:38,330 --> 00:23:45,039
started we've had a fair bit of review

420
00:23:41,600 --> 00:23:47,689
already I actually just got a review

421
00:23:45,039 --> 00:23:51,350
yesterday which I'll come to in a little

422
00:23:47,690 --> 00:23:54,110
bit so I think that we are progressing

423
00:23:51,350 --> 00:23:57,139
pretty well here if anyone has any

424
00:23:54,110 --> 00:23:59,408
further comments now's the time next

425
00:23:57,139 --> 00:23:59,408
slide please

426
00:24:00,190 --> 00:24:06,919
so one of the big changes was that I've

427
00:24:04,250 --> 00:24:09,700
added in a few new threats and security

428
00:24:06,919 --> 00:24:12,200
requirements that justify the

429
00:24:09,700 --> 00:24:14,659
architectures mention of an end-to-end

430
00:24:12,200 --> 00:24:16,820
security model previously that hadn't

431
00:24:14,659 --> 00:24:20,529
actually been mentioned in the

432
00:24:16,820 --> 00:24:22,639
information model next slide please

433
00:24:20,529 --> 00:24:25,909
so there are a few different threats

434
00:24:22,639 --> 00:24:28,219
that I added in to to cover that so

435
00:24:25,909 --> 00:24:30,289
first there was the interception of data

436
00:24:28,220 --> 00:24:35,720
between the update service and the

437
00:24:30,289 --> 00:24:37,789
device and then he exposure threats a

438
00:24:35,720 --> 00:24:41,510
specifically extraction of signing keys

439
00:24:37,789 --> 00:24:44,019
from some form of signing service that

440
00:24:41,510 --> 00:24:46,040
would be if it were hosted or

441
00:24:44,019 --> 00:24:51,320
potentially if it is

442
00:24:46,040 --> 00:24:53,600
is a non hosted service then as well the

443
00:24:51,320 --> 00:24:56,659
possibility of a manifest being modified

444
00:24:53,600 --> 00:25:00,439
in some way between the author

445
00:24:56,660 --> 00:25:03,200
attempting to create a manifest and it

446
00:25:00,440 --> 00:25:05,360
actually arriving and being signed by

447
00:25:03,200 --> 00:25:06,520
whatever signing service be that local

448
00:25:05,360 --> 00:25:11,300
or remote

449
00:25:06,520 --> 00:25:15,560
next please then the requirements for

450
00:25:11,300 --> 00:25:17,540
mitigating those threats so they proceed

451
00:25:15,560 --> 00:25:19,899
kind of naturally their secure channels

452
00:25:17,540 --> 00:25:22,639
are necessary to protect status reports

453
00:25:19,900 --> 00:25:27,800
key protection is necessary to prevent

454
00:25:22,640 --> 00:25:30,890
key extraction manifest checking would

455
00:25:27,800 --> 00:25:33,020
be an important part of validating

456
00:25:30,890 --> 00:25:35,710
manifests to make sure that they haven't

457
00:25:33,020 --> 00:25:39,590
been modified in some unexpected way and

458
00:25:35,710 --> 00:25:41,180
of course making sure that a trusted

459
00:25:39,590 --> 00:25:44,560
environment is used for constructing

460
00:25:41,180 --> 00:25:46,580
manifests next slide please

461
00:25:44,560 --> 00:25:50,240
so there are still some more reviews

462
00:25:46,580 --> 00:25:53,530
coming along there was one as I said

463
00:25:50,240 --> 00:25:57,680
that just came in yesterday and

464
00:25:53,530 --> 00:26:00,080
evidently I'd missed a whole series of

465
00:25:57,680 --> 00:26:05,900
the uses of mandatory rather than

466
00:26:00,080 --> 00:26:08,899
required I added in some examples of uu

467
00:26:05,900 --> 00:26:12,440
IDs specifically the white labeling use

468
00:26:08,900 --> 00:26:13,580
case where one vendor sells the products

469
00:26:12,440 --> 00:26:18,080
of another vendor under their own

470
00:26:13,580 --> 00:26:19,970
branding ad and one of the features that

471
00:26:18,080 --> 00:26:24,699
had previously been in the information

472
00:26:19,970 --> 00:26:27,860
model was using channel security for

473
00:26:24,700 --> 00:26:30,890
authenticating updates specifically

474
00:26:27,860 --> 00:26:36,139
where the manifest contained only a URI

475
00:26:30,890 --> 00:26:39,050
the intent there had been that you

476
00:26:36,140 --> 00:26:42,220
didn't need additional authentication

477
00:26:39,050 --> 00:26:46,879
steps to be able to just replace the URI

478
00:26:42,220 --> 00:26:50,090
of a manifest so that a gateway for

479
00:26:46,880 --> 00:26:52,670
example would be able to override where

480
00:26:50,090 --> 00:26:55,850
a device would look for its update or

481
00:26:52,670 --> 00:26:57,980
look for a further manifest but what was

482
00:26:55,850 --> 00:26:59,510
pointed out to me was that this would

483
00:26:57,980 --> 00:27:04,220
allow

484
00:26:59,510 --> 00:27:06,920
a an attacker that is able to compromise

485
00:27:04,220 --> 00:27:10,490
the channel or the communication partner

486
00:27:06,920 --> 00:27:12,380
to then get all of the devices that it

487
00:27:10,490 --> 00:27:15,230
communicates with to make arbitrary

488
00:27:12,380 --> 00:27:18,230
requests over the network so this seems

489
00:27:15,230 --> 00:27:21,470
like we should probably plug that hole

490
00:27:18,230 --> 00:27:24,860
and so I've explicitly disallowed that

491
00:27:21,470 --> 00:27:27,380
in the in the information model now and

492
00:27:24,860 --> 00:27:29,290
I'd be very interested in the feedback

493
00:27:27,380 --> 00:27:32,840
from the working group on that

494
00:27:29,290 --> 00:27:34,700
particular change one other minor change

495
00:27:32,840 --> 00:27:36,530
in the information model as a result of

496
00:27:34,700 --> 00:27:39,890
the reviews that I've just recently

497
00:27:36,530 --> 00:27:41,780
received was to define a maximum size

498
00:27:39,890 --> 00:27:44,180
for the integrated payload now the

499
00:27:41,780 --> 00:27:48,020
maximum size that I've defined is the

500
00:27:44,180 --> 00:27:49,790
whole thing has to fit in memory which I

501
00:27:48,020 --> 00:27:53,150
think is a pretty reasonable approach to

502
00:27:49,790 --> 00:27:54,680
saying how big it can be now we might

503
00:27:53,150 --> 00:27:57,500
need to be more specific than that and

504
00:27:54,680 --> 00:28:00,170
again I'd be interested in the working

505
00:27:57,500 --> 00:28:02,210
groups feedback on whether we should be

506
00:28:00,170 --> 00:28:05,270
defining a numeric maximum size or

507
00:28:02,210 --> 00:28:06,550
leaving it as just the whole thing has

508
00:28:05,270 --> 00:28:12,320
to fit in RAM

509
00:28:06,550 --> 00:28:15,440
next slide please so we've asked for

510
00:28:12,320 --> 00:28:18,409
further reviews and we want to make sure

511
00:28:15,440 --> 00:28:20,720
that the document is complete and I

512
00:28:18,410 --> 00:28:24,020
think that it's in quite good shape now

513
00:28:20,720 --> 00:28:26,410
and so I'd like to know if there's any

514
00:28:24,020 --> 00:28:28,460
more feedback next please

515
00:28:26,410 --> 00:28:30,500
or is that it I think that's the last

516
00:28:28,460 --> 00:28:35,350
one is nice that's the last slide all

517
00:28:30,500 --> 00:28:35,350
right so very quick update there

518
00:28:44,020 --> 00:28:55,129
does anyone have any issues with the

519
00:28:46,730 --> 00:28:56,870
with the current draft including several

520
00:28:55,130 --> 00:28:59,180
of those changes in github by the ones

521
00:28:56,870 --> 00:29:00,649
not in the posted copy yet those the

522
00:28:59,180 --> 00:29:04,660
ones would be in print and specs book to

523
00:29:00,650 --> 00:29:04,660
cap that's correct yes

524
00:29:08,150 --> 00:29:14,800
hi there's a sink of the mic Hank

525
00:29:15,070 --> 00:29:30,260
hi this is a manifest related question

526
00:29:20,060 --> 00:29:33,770
is that okay it's somewhat cold

527
00:29:30,260 --> 00:29:39,490
connected but okay for the manifest it

528
00:29:33,770 --> 00:29:39,490
goes here okay

529
00:29:42,310 --> 00:29:47,360
Brennan I'll have to knock you out of

530
00:29:44,480 --> 00:29:51,530
queue yep hi Manuel here

531
00:29:47,360 --> 00:29:54,469
Emmanuel gonna be fine okay

532
00:29:51,530 --> 00:30:02,780
yeah just bouncing back on a comment

533
00:29:54,470 --> 00:30:06,490
from Brendan on whether we have to put

534
00:30:02,780 --> 00:30:10,730
in numerical limits to the size of

535
00:30:06,490 --> 00:30:11,900
payloads and things like that I think

536
00:30:10,730 --> 00:30:15,230
this might be a little bit difficult

537
00:30:11,900 --> 00:30:18,470
like on our and for example with our

538
00:30:15,230 --> 00:30:22,310
riot implementation we really try to

539
00:30:18,470 --> 00:30:25,490
push down the RAM requirements quite a

540
00:30:22,310 --> 00:30:30,710
bit such that payload actually

541
00:30:25,490 --> 00:30:33,200
definitely does not fit in RAM so we use

542
00:30:30,710 --> 00:30:36,020
things like clock wise and things I had

543
00:30:33,200 --> 00:30:40,220
to actually bring down the minimum Ram

544
00:30:36,020 --> 00:30:43,460
requirements so I think we have to be

545
00:30:40,220 --> 00:30:47,270
careful here not to not to put any

546
00:30:43,460 --> 00:30:50,660
strain on on the RAM requirements we may

547
00:30:47,270 --> 00:30:52,639
however try to look at flash

548
00:30:50,660 --> 00:30:54,230
requirements I mean if you can't like

549
00:30:52,640 --> 00:30:55,669
put there somewhere so

550
00:30:54,230 --> 00:30:58,070
we're in the memory and maybe not in the

551
00:30:55,669 --> 00:31:03,130
RAM that this whole payload then you

552
00:30:58,070 --> 00:31:03,129
have a problem but also yeah that was it

553
00:31:10,270 --> 00:31:13,760
Brendan you're back you want to respond

554
00:31:12,500 --> 00:31:15,919
to that sure yeah

555
00:31:13,760 --> 00:31:17,780
hi I'm Manuel sorry I I think I must

556
00:31:15,919 --> 00:31:23,750
have not been quite clear enough this

557
00:31:17,780 --> 00:31:25,520
this is specifically for the integrated

558
00:31:23,750 --> 00:31:28,520
payloads so this would be if you're

559
00:31:25,520 --> 00:31:31,790
passing something very small along like

560
00:31:28,520 --> 00:31:33,889
I don't know maybe an encrypted key

561
00:31:31,790 --> 00:31:38,750
that's being delivered to a device so

562
00:31:33,890 --> 00:31:42,760
not the whole payload of the of a

563
00:31:38,750 --> 00:31:45,440
firmware update but instead just a small

564
00:31:42,760 --> 00:31:50,090
payload that a device is using for some

565
00:31:45,440 --> 00:31:53,330
other purpose and clarifying question

566
00:31:50,090 --> 00:31:55,399
Brendan please thank you since we just

567
00:31:53,330 --> 00:31:57,799
had the discussion about whether this

568
00:31:55,400 --> 00:32:00,679
could scale up to larger class devices

569
00:31:57,799 --> 00:32:02,929
than class to you are you thinking that

570
00:32:00,679 --> 00:32:04,970
the maximum size would be independent of

571
00:32:02,929 --> 00:32:06,799
device size are you thinking that the

572
00:32:04,970 --> 00:32:10,010
maximum size would be for the class 2

573
00:32:06,799 --> 00:32:13,549
devices or something else well this is

574
00:32:10,010 --> 00:32:16,220
why it's currently defined as the whole

575
00:32:13,549 --> 00:32:17,990
manifest whatever that means

576
00:32:16,220 --> 00:32:21,020
integrated payload or no integrated

577
00:32:17,990 --> 00:32:22,460
payload has to fit in memory and I think

578
00:32:21,020 --> 00:32:25,990
that that makes it fairly

579
00:32:22,460 --> 00:32:25,990
straightforward in that respect

580
00:32:27,580 --> 00:32:34,990
ok sorry let me rephrase the question

581
00:32:30,650 --> 00:32:37,640
if it has to fit in the devices memory

582
00:32:34,990 --> 00:32:39,679
who's expected to know how big the

583
00:32:37,640 --> 00:32:41,690
devices memory is and what that limit is

584
00:32:39,679 --> 00:32:45,140
because is the manifest author expected

585
00:32:41,690 --> 00:32:47,419
to know that because maybe the device is

586
00:32:45,140 --> 00:32:49,370
a tiny IOT device maybe it's an 8 gig

587
00:32:47,419 --> 00:32:51,350
memory device is the manifest author

588
00:32:49,370 --> 00:32:53,209
expected to know that or is the spec

589
00:32:51,350 --> 00:32:55,490
take some number or what what is your

590
00:32:53,210 --> 00:32:57,350
proposal yeah that's exactly the problem

591
00:32:55,490 --> 00:33:00,559
that and that's why I'm asking for

592
00:32:57,350 --> 00:33:03,530
feedback so my inclination would be to

593
00:33:00,559 --> 00:33:07,730
say all right one of two things either

594
00:33:03,530 --> 00:33:15,530
the maximum size should be defined as

595
00:33:07,730 --> 00:33:18,200
you know enough to fit a a key IR aqui

596
00:33:15,530 --> 00:33:20,930
wrapped key or it should be defined as

597
00:33:18,200 --> 00:33:23,810
it's up to the implementer to know

598
00:33:20,930 --> 00:33:25,610
exactly what fits I don't really like

599
00:33:23,810 --> 00:33:30,169
it's up to the implementer to know what

600
00:33:25,610 --> 00:33:32,540
fits but at the same time picking a

601
00:33:30,170 --> 00:33:36,320
number out of the air might break some

602
00:33:32,540 --> 00:33:38,210
use cases so I'm a bit I'm a bit

603
00:33:36,320 --> 00:33:41,120
confused as to where we should handle

604
00:33:38,210 --> 00:33:42,440
that so if I understand right you don't

605
00:33:41,120 --> 00:33:44,719
have a proposal and you're asking the

606
00:33:42,440 --> 00:33:46,550
working group for advice between the

607
00:33:44,720 --> 00:33:48,710
different options here is that correct

608
00:33:46,550 --> 00:33:51,320
yeah so it's it's a binary choice here

609
00:33:48,710 --> 00:33:55,420
either we define a number or we say it's

610
00:33:51,320 --> 00:33:58,189
up to the implementer to know and I I

611
00:33:55,420 --> 00:34:01,220
prefer having a number but I recognize

612
00:33:58,190 --> 00:34:04,460
that having a number is going to break

613
00:34:01,220 --> 00:34:07,490
some use cases so I'm not sure exactly

614
00:34:04,460 --> 00:34:09,560
where we go on that one how do we deal

615
00:34:07,490 --> 00:34:12,770
with multi-party update cases where

616
00:34:09,560 --> 00:34:15,799
there are multiple implementers and they

617
00:34:12,770 --> 00:34:19,190
might not there might not be pre

618
00:34:15,800 --> 00:34:20,870
knowledge of the size cuz our

619
00:34:19,190 --> 00:34:23,450
architecture allows for those kinds of

620
00:34:20,870 --> 00:34:26,290
cases the size of memory right okay so

621
00:34:23,449 --> 00:34:30,319
the the other possibility here is that

622
00:34:26,290 --> 00:34:32,418
we look at capability reporting we've

623
00:34:30,320 --> 00:34:34,760
talked about capability reporting a bit

624
00:34:32,418 --> 00:34:36,350
in the manifest Draft and maybe that's

625
00:34:34,760 --> 00:34:39,260
something that we need to address as a

626
00:34:36,350 --> 00:34:41,739
working group so capability reports

627
00:34:39,260 --> 00:34:44,750
would possibly handle this situation

628
00:34:41,739 --> 00:34:46,850
where you're able to get information

629
00:34:44,750 --> 00:34:49,940
back from the device at the time of

630
00:34:46,850 --> 00:34:51,589
manifest creation and look at you know

631
00:34:49,940 --> 00:34:54,168
how big of a manifest will this device

632
00:34:51,590 --> 00:35:00,830
accept and then that makes it sort of

633
00:34:54,168 --> 00:35:02,000
academic the other working your

634
00:35:00,830 --> 00:35:04,240
participants have an opinion on this

635
00:35:02,000 --> 00:35:04,240
question

636
00:35:09,160 --> 00:35:16,930
this is hummus in the deep working group

637
00:35:15,290 --> 00:35:21,560
Honus

638
00:35:16,930 --> 00:35:23,240
in the deep working group if that when I

639
00:35:21,560 --> 00:35:25,430
am going to talk about the protocol

640
00:35:23,240 --> 00:35:29,118
there's actually capability discovery

641
00:35:25,430 --> 00:35:30,828
mechanism to do that but I but I

642
00:35:29,119 --> 00:35:32,960
understand it the difficulty because

643
00:35:30,829 --> 00:35:35,630
obviously like the manifest needs to be

644
00:35:32,960 --> 00:35:37,420
needs to fit somewhere in memory so that

645
00:35:35,630 --> 00:35:39,920
you can then verify the signature

646
00:35:37,420 --> 00:35:42,470
because otherwise of course the many

647
00:35:39,920 --> 00:35:47,510
manifests will in general be very small

648
00:35:42,470 --> 00:35:50,750
but so so that is typically not an issue

649
00:35:47,510 --> 00:35:54,470
as Manuel pointed out but one can

650
00:35:50,750 --> 00:35:57,290
imagine cases where you specifically

651
00:35:54,470 --> 00:36:01,790
with the use of public key crypto you

652
00:35:57,290 --> 00:36:03,410
you may include not that not just a

653
00:36:01,790 --> 00:36:05,900
signature but also a key and so on and

654
00:36:03,410 --> 00:36:09,348
so on so then it could get larger of

655
00:36:05,900 --> 00:36:11,300
course and so III don't have a specific

656
00:36:09,349 --> 00:36:14,810
recommendations on what number to put in

657
00:36:11,300 --> 00:36:16,970
there so I I would prefer to actually to

658
00:36:14,810 --> 00:36:20,509
leave it open but did point out what the

659
00:36:16,970 --> 00:36:25,450
problem is I think there's you can't do

660
00:36:20,510 --> 00:36:29,150
much more than that so this is a favor

661
00:36:25,450 --> 00:36:32,689
it's occurring there is a slight analogy

662
00:36:29,150 --> 00:36:36,650
with something like a reassembly buffer

663
00:36:32,690 --> 00:36:40,040
in protocols where for example what ipv6

664
00:36:36,650 --> 00:36:43,010
did is they said you must be capable of

665
00:36:40,040 --> 00:36:45,290
reassembling something of at least this

666
00:36:43,010 --> 00:36:47,450
size for some number like 1280 bytes or

667
00:36:45,290 --> 00:36:49,069
pick a number or whatever but you were

668
00:36:47,450 --> 00:36:50,118
allowed to pick something larger than

669
00:36:49,069 --> 00:36:52,400
that and so that means if you are

670
00:36:50,119 --> 00:36:53,930
authoring something if you want to be

671
00:36:52,400 --> 00:36:55,940
perfectly interoperable you make sure

672
00:36:53,930 --> 00:36:57,500
it's no larger than that minimum if you

673
00:36:55,940 --> 00:36:58,970
have specific knowledge of the other end

674
00:36:57,500 --> 00:37:02,119
you could go larger than that and still

675
00:36:58,970 --> 00:37:03,799
be compliant so that would be a possible

676
00:37:02,119 --> 00:37:05,300
approach that we could take I don't know

677
00:37:03,800 --> 00:37:06,589
if that's the right thing or not but

678
00:37:05,300 --> 00:37:11,630
that would be a way that actually

679
00:37:06,589 --> 00:37:13,549
supports both sides and says you it's

680
00:37:11,630 --> 00:37:15,230
not a maximum size but it's the maximum

681
00:37:13,550 --> 00:37:18,530
size at which interoperability is

682
00:37:15,230 --> 00:37:19,190
guaranteed without without knowledge of

683
00:37:18,530 --> 00:37:21,080
the other ends

684
00:37:19,190 --> 00:37:24,680
okay that's a that's a third option

685
00:37:21,080 --> 00:37:30,290
right so I think there's three options

686
00:37:24,680 --> 00:37:42,980
now that talked about any comments on

687
00:37:30,290 --> 00:37:50,180
that third option yeah lot of energy

688
00:37:42,980 --> 00:37:51,590
your own picking one so right after the

689
00:37:50,180 --> 00:37:53,480
discussion Brendan do you have any

690
00:37:51,590 --> 00:37:54,650
preference from what you heard out of

691
00:37:53,480 --> 00:38:00,020
the discussion of their working group so

692
00:37:54,650 --> 00:38:02,270
far I'm gonna have to think through that

693
00:38:00,020 --> 00:38:05,660
a bit more I'm afraid I like the

694
00:38:02,270 --> 00:38:08,630
suggestion that that dave has proposed

695
00:38:05,660 --> 00:38:10,819
but at the same time I think that the

696
00:38:08,630 --> 00:38:12,770
danger in that is that you end up with a

697
00:38:10,820 --> 00:38:15,350
whole bunch of devices that implement

698
00:38:12,770 --> 00:38:18,009
explicitly the minimum and rather than

699
00:38:15,350 --> 00:38:18,009
what they need

700
00:38:31,760 --> 00:38:36,770
okay so I'm gonna have to think through

701
00:38:34,550 --> 00:38:40,340
it a bit more I I don't think I can make

702
00:38:36,770 --> 00:38:41,780
a recommendation just yet so I'll make a

703
00:38:40,340 --> 00:38:43,270
recommendation on the list once I've had

704
00:38:41,780 --> 00:38:54,170
some time to think through it a bit more

705
00:38:43,270 --> 00:38:56,330
okay here dress since we're trying to

706
00:38:54,170 --> 00:38:58,490
get this sorted by the end of the month

707
00:38:56,330 --> 00:39:00,890
can we do it in this order make the

708
00:38:58,490 --> 00:39:04,160
recommendation of the list discuss that

709
00:39:00,890 --> 00:39:07,750
update the doc confirm the last call

710
00:39:04,160 --> 00:39:07,750
issue is resolved

711
00:39:07,990 --> 00:39:18,229
yeah that sounds good to me

712
00:39:09,859 --> 00:39:21,799
okay so just working back from for the

713
00:39:18,230 --> 00:39:27,590
rest of the the month we've got what 12

714
00:39:21,800 --> 00:39:30,290
days 11 days so you actually need to

715
00:39:27,590 --> 00:39:33,500
think through this to post a solution

716
00:39:30,290 --> 00:39:37,820
well I'm hoping to make a recommendation

717
00:39:33,500 --> 00:39:42,500
you know sort of within the next I don't

718
00:39:37,820 --> 00:39:45,700
know two days so not long I just a not

719
00:39:42,500 --> 00:39:47,080
in the middle of the meeting that's all

720
00:39:45,700 --> 00:39:50,750
right

721
00:39:47,080 --> 00:39:52,190
so I mean thinking through that so if if

722
00:39:50,750 --> 00:39:56,960
you post something to the list in a

723
00:39:52,190 --> 00:40:00,050
couple of days maybe we we post an

724
00:39:56,960 --> 00:40:01,400
updated draft next week if we after

725
00:40:00,050 --> 00:40:04,100
we've had some you know some

726
00:40:01,400 --> 00:40:08,470
conversation about the the solution and

727
00:40:04,100 --> 00:40:11,509
then we could have a couple weeks of of

728
00:40:08,470 --> 00:40:14,299
last call review before we you know we

729
00:40:11,510 --> 00:40:20,000
close out the document that would put us

730
00:40:14,300 --> 00:40:23,119
a week into a week into December but

731
00:40:20,000 --> 00:40:25,960
that's not too bad but would something

732
00:40:23,119 --> 00:40:25,960
like that be doable

733
00:40:26,020 --> 00:40:33,740
yep this is might I'm just wondering if

734
00:40:31,460 --> 00:40:38,680
if you put a maximum limit what would

735
00:40:33,740 --> 00:40:41,040
that be just just to get an idea Mohit

736
00:40:38,680 --> 00:40:44,790
so

737
00:40:41,040 --> 00:40:46,620
I was looking here at defining the

738
00:40:44,790 --> 00:40:48,900
maximum size of an integrated payload

739
00:40:46,620 --> 00:40:52,290
rather than the maximum silence of the

740
00:40:48,900 --> 00:40:54,870
manifest itself it might be more useful

741
00:40:52,290 --> 00:40:56,790
to define a maximum size of a manifest

742
00:40:54,870 --> 00:41:00,900
but that can be highly dependent on the

743
00:40:56,790 --> 00:41:05,940
on the use case it's not a fixed size

744
00:41:00,900 --> 00:41:07,170
format and in that respect I mean maybe

745
00:41:05,940 --> 00:41:09,420
that's one of the things that I need to

746
00:41:07,170 --> 00:41:12,570
work through in the next couple of days

747
00:41:09,420 --> 00:41:15,660
what makes sense for the maximum sizes

748
00:41:12,570 --> 00:41:18,330
in in that respect when we look at

749
00:41:15,660 --> 00:41:20,940
things like embedding into boot loaders

750
00:41:18,330 --> 00:41:24,930
keeping it really small is very

751
00:41:20,940 --> 00:41:29,130
important so getting the size of the

752
00:41:24,930 --> 00:41:32,060
manifest down for that use case is

753
00:41:29,130 --> 00:41:34,800
something that we we should perhaps be

754
00:41:32,060 --> 00:41:39,870
you know defining the new maximum size

755
00:41:34,800 --> 00:41:41,580
for the manifest in in each use case I

756
00:41:39,870 --> 00:41:43,440
mean if you look through the examples

757
00:41:41,580 --> 00:41:45,900
that are in the manifest document

758
00:41:43,440 --> 00:41:51,420
already then there's a few examples of

759
00:41:45,900 --> 00:41:53,820
what sizes could be I think that it's

760
00:41:51,420 --> 00:41:56,030
something that we should probably you

761
00:41:53,820 --> 00:42:02,520
know take feedback on as much as we can

762
00:41:56,030 --> 00:42:04,260
at this point but I think it's easier to

763
00:42:02,520 --> 00:42:07,250
decide define a maximum size of a

764
00:42:04,260 --> 00:42:11,220
payload than it is of a whole manifest

765
00:42:07,250 --> 00:42:13,800
right so in the payload Bay load like

766
00:42:11,220 --> 00:42:16,919
you would typically have keys signatures

767
00:42:13,800 --> 00:42:18,660
so just take like what is maybe not

768
00:42:16,920 --> 00:42:21,270
completely insane but somewhat

769
00:42:18,660 --> 00:42:23,670
nonsensical and then define so I don't

770
00:42:21,270 --> 00:42:26,040
know four zero nine six bit RSA keys and

771
00:42:23,670 --> 00:42:29,850
then taking some signatures and and then

772
00:42:26,040 --> 00:42:31,080
defining the maximum limit yeah I mean

773
00:42:29,850 --> 00:42:33,270
the other the other thing that might

774
00:42:31,080 --> 00:42:36,450
show up there is configuration so you

775
00:42:33,270 --> 00:42:38,970
could imagine fairly easily a bit of sea

776
00:42:36,450 --> 00:42:40,890
bore being delivered in an integrated

777
00:42:38,970 --> 00:42:43,379
payload because it makes more sense to

778
00:42:40,890 --> 00:42:46,560
do that than to have a completely

779
00:42:43,380 --> 00:42:48,810
separate transfer to handle that you

780
00:42:46,560 --> 00:42:50,670
know relatively small chunk of data and

781
00:42:48,810 --> 00:42:53,549
and that's where things get a little bit

782
00:42:50,670 --> 00:42:54,870
more complicated because what's a what's

783
00:42:53,550 --> 00:42:58,110
the same size

784
00:42:54,870 --> 00:42:59,880
of seaboard to deliver to a device in in

785
00:42:58,110 --> 00:43:03,060
the manifest rather than outside of the

786
00:42:59,880 --> 00:43:07,080
manifest so that so that's essentially

787
00:43:03,060 --> 00:43:11,130
the use case that I am trying to work

788
00:43:07,080 --> 00:43:12,779
through is if I'm delivering something

789
00:43:11,130 --> 00:43:16,470
reasonably arbitrary like a

790
00:43:12,780 --> 00:43:18,420
configuration blob in the manifest how

791
00:43:16,470 --> 00:43:19,799
big should that be well that's highly

792
00:43:18,420 --> 00:43:23,250
dependent on exactly what's being

793
00:43:19,800 --> 00:43:24,960
delivered and that's why I I'm sort of

794
00:43:23,250 --> 00:43:27,840
trying to work through this before

795
00:43:24,960 --> 00:43:29,310
making a direct recommendation as I said

796
00:43:27,840 --> 00:43:32,640
this is something that only came up in

797
00:43:29,310 --> 00:43:35,000
the last 24 hours for me so I haven't

798
00:43:32,640 --> 00:43:38,730
really had time to work through it yet

799
00:43:35,000 --> 00:43:39,870
so after listening to this I think I've

800
00:43:38,730 --> 00:43:41,550
changed my mind

801
00:43:39,870 --> 00:43:43,500
maybe we can document all these

802
00:43:41,550 --> 00:43:46,920
considerations and not give any minimum

803
00:43:43,500 --> 00:43:49,380
or maximum I think for implementers like

804
00:43:46,920 --> 00:43:52,020
even if they're pushing updates they

805
00:43:49,380 --> 00:43:54,240
probably do some kind of testing before

806
00:43:52,020 --> 00:43:56,100
they start you know push any any

807
00:43:54,240 --> 00:43:57,689
sensible developer would do some kind of

808
00:43:56,100 --> 00:44:00,870
testing before they start pushing

809
00:43:57,690 --> 00:44:04,830
updates so we document all this and then

810
00:44:00,870 --> 00:44:08,910
don't give any likes min or max thanks

811
00:44:04,830 --> 00:44:11,640
for your feedback running on your slide

812
00:44:08,910 --> 00:44:14,339
you say several proposed changes in

813
00:44:11,640 --> 00:44:16,259
github defined maximum size in github is

814
00:44:14,340 --> 00:44:18,510
there any specific value proposed in

815
00:44:16,260 --> 00:44:20,580
github right now or not no there isn't

816
00:44:18,510 --> 00:44:23,490
at the moment what it says right now is

817
00:44:20,580 --> 00:44:25,440
that it has to fit in Ram okay and the

818
00:44:23,490 --> 00:44:27,839
reasoning for it has to fit in RAM which

819
00:44:25,440 --> 00:44:30,810
isn't in github I should probably put

820
00:44:27,840 --> 00:44:33,000
that in is that we we need to be able to

821
00:44:30,810 --> 00:44:36,180
verify the signature across the manifest

822
00:44:33,000 --> 00:44:38,510
in one go because otherwise that leads

823
00:44:36,180 --> 00:44:42,359
to a time of check time of use

824
00:44:38,510 --> 00:44:45,180
vulnerability okay so in the interests

825
00:44:42,360 --> 00:44:46,830
of facilitating consensus since we had

826
00:44:45,180 --> 00:44:49,680
one person actually express an opinion

827
00:44:46,830 --> 00:44:52,259
rather than saying need to think about

828
00:44:49,680 --> 00:44:54,540
it then is there anybody that would have

829
00:44:52,260 --> 00:44:56,760
an objection that should they should we

830
00:44:54,540 --> 00:44:58,370
actually choose to go with the not

831
00:44:56,760 --> 00:45:00,450
defining a strict number in here is

832
00:44:58,370 --> 00:45:03,690
there anybody would actually object to

833
00:45:00,450 --> 00:45:06,859
that trying to facilitate some advice

834
00:45:03,690 --> 00:45:06,860
for consensus I

835
00:45:06,880 --> 00:45:13,540
one person said that makes sense okay so

836
00:45:10,780 --> 00:45:15,010
first your ears we're hearing general

837
00:45:13,540 --> 00:45:16,779
support by that but since it's only been

838
00:45:15,010 --> 00:45:18,220
24 hours and has been discussed on the

839
00:45:16,780 --> 00:45:19,990
list we need to confirm that but if that

840
00:45:18,220 --> 00:45:23,379
helps you Brendon know what to think

841
00:45:19,990 --> 00:45:26,140
about well that's that for me that's the

842
00:45:23,380 --> 00:45:29,770
status quo that's where it already is so

843
00:45:26,140 --> 00:45:31,450
I'm I'm reasonably happy with that yeah

844
00:45:29,770 --> 00:45:33,250
but what was implicit in that was that

845
00:45:31,450 --> 00:45:38,830
we would define or that you would define

846
00:45:33,250 --> 00:45:40,000
some some considerations relative yeah

847
00:45:38,830 --> 00:45:43,500
and it's and it's clear that those

848
00:45:40,000 --> 00:45:48,640
considerations do need to be defined

849
00:45:43,500 --> 00:45:51,310
good yep great thank you very so next up

850
00:45:48,640 --> 00:45:56,589
we have I think the manifest so Brennan

851
00:45:51,310 --> 00:46:04,110
if you would stay in queue please go

852
00:45:56,590 --> 00:46:07,210
ahead all right next slide so I we had a

853
00:46:04,110 --> 00:46:11,500
draft five approved for adoption about

854
00:46:07,210 --> 00:46:13,680
four months ago now we incorrectly said

855
00:46:11,500 --> 00:46:16,900
submitted version four sorry about that

856
00:46:13,680 --> 00:46:19,839
so that was immediately updated to or

857
00:46:16,900 --> 00:46:24,370
not immediately shortly after updated to

858
00:46:19,840 --> 00:46:28,630
version one which was the correct

859
00:46:24,370 --> 00:46:31,480
version version 2 was announced on the

860
00:46:28,630 --> 00:46:36,100
list recently and contains some

861
00:46:31,480 --> 00:46:40,290
relatively minor changes mostly in terms

862
00:46:36,100 --> 00:46:43,480
of text not encoding next slide please

863
00:46:40,290 --> 00:46:45,850
so primarily what was added was an

864
00:46:43,480 --> 00:46:50,800
interpreter behavior section which

865
00:46:45,850 --> 00:46:55,540
defined an abstract machine now that is

866
00:46:50,800 --> 00:46:57,930
mostly informational it's essentially a

867
00:46:55,540 --> 00:47:00,100
mechanism to help implementers to

868
00:46:57,930 --> 00:47:02,049
understand how to construct the

869
00:47:00,100 --> 00:47:05,410
interpreter the other thing that this

870
00:47:02,050 --> 00:47:08,620
will do is make it a little bit easier

871
00:47:05,410 --> 00:47:11,020
for us to do some testing so we also

872
00:47:08,620 --> 00:47:14,830
added templates for constructing

873
00:47:11,020 --> 00:47:17,680
manifests and then the text field items

874
00:47:14,830 --> 00:47:19,509
which have been missing for a while next

875
00:47:17,680 --> 00:47:22,118
slide please

876
00:47:19,510 --> 00:47:24,310
so for interpreter behavior it goes

877
00:47:22,119 --> 00:47:26,140
through a number of steps first there's

878
00:47:24,310 --> 00:47:28,119
a set up phase so that's what to do

879
00:47:26,140 --> 00:47:30,339
before invoking the interpreter it

880
00:47:28,119 --> 00:47:34,630
includes things like clearing out any

881
00:47:30,340 --> 00:47:37,560
parameters or making sure that you're

882
00:47:34,630 --> 00:47:40,650
loading the most recent valid manifest

883
00:47:37,560 --> 00:47:44,020
the next thing is required checks and

884
00:47:40,650 --> 00:47:47,130
that's things that the interpreter has

885
00:47:44,020 --> 00:47:50,460
to do so for example that would include

886
00:47:47,130 --> 00:47:54,640
validating signatures that would include

887
00:47:50,460 --> 00:47:57,910
making sure that there is a vendor ID

888
00:47:54,640 --> 00:47:59,319
and class ID check that's been done then

889
00:47:57,910 --> 00:48:01,480
there are commands that have to appear

890
00:47:59,320 --> 00:48:04,930
in the manifest and as I said that could

891
00:48:01,480 --> 00:48:06,430
include the vendor ID and class ID some

892
00:48:04,930 --> 00:48:09,669
of the other checks that might show up

893
00:48:06,430 --> 00:48:13,359
are things like making sure that the

894
00:48:09,670 --> 00:48:16,810
right sections of the dependencies have

895
00:48:13,359 --> 00:48:19,830
been executed then it goes through to

896
00:48:16,810 --> 00:48:21,970
explain how an interpreter should behave

897
00:48:19,830 --> 00:48:23,619
and the intent here is that two

898
00:48:21,970 --> 00:48:26,529
different interpreters should interpret

899
00:48:23,619 --> 00:48:29,200
each manifest in the same way and that

900
00:48:26,530 --> 00:48:31,330
gives us the basis for enabling

901
00:48:29,200 --> 00:48:33,189
consistent behavior across devices and

902
00:48:31,330 --> 00:48:34,600
across implementations which will be

903
00:48:33,190 --> 00:48:38,020
really important for interoperability

904
00:48:34,600 --> 00:48:40,150
later on and then we define an

905
00:48:38,020 --> 00:48:42,790
interpreter abstract machine now this is

906
00:48:40,150 --> 00:48:46,330
a relatively lightweight definition it's

907
00:48:42,790 --> 00:48:49,900
just a series of statements of exactly

908
00:48:46,330 --> 00:48:53,680
what each different element in the

909
00:48:49,900 --> 00:48:55,600
manifest commands should do and the idea

910
00:48:53,680 --> 00:48:57,970
here is that we should be able to build

911
00:48:55,600 --> 00:49:00,730
very fine-grained test vectors for

912
00:48:57,970 --> 00:49:03,310
interpreters and interpreter validation

913
00:49:00,730 --> 00:49:06,160
Suites so that'll make it hopefully a

914
00:49:03,310 --> 00:49:08,890
lot easier for people to be confident

915
00:49:06,160 --> 00:49:12,368
that their manifest interpreter is

916
00:49:08,890 --> 00:49:16,450
behaving according to the spec next

917
00:49:12,369 --> 00:49:19,000
please I've also gone through and added

918
00:49:16,450 --> 00:49:21,460
some sections defining what serialized

919
00:49:19,000 --> 00:49:23,530
processing would do as an interpreter so

920
00:49:21,460 --> 00:49:27,040
that's where each component ID is

921
00:49:23,530 --> 00:49:29,890
processed in sequence and that's out of

922
00:49:27,040 --> 00:49:32,440
sequence with the with the normal

923
00:49:29,890 --> 00:49:33,250
manifest flow the the idea here is that

924
00:49:32,440 --> 00:49:35,830
for

925
00:49:33,250 --> 00:49:37,660
extremely Ramkin strange devices it's

926
00:49:35,830 --> 00:49:41,319
still possible to handle multiple

927
00:49:37,660 --> 00:49:43,560
components and then for large devices

928
00:49:41,320 --> 00:49:47,020
where parallel processing is relevant

929
00:49:43,560 --> 00:49:49,630
how how you process commands in a

930
00:49:47,020 --> 00:49:51,700
parallel processing interpreter and and

931
00:49:49,630 --> 00:49:56,020
that would also allow out of order

932
00:49:51,700 --> 00:49:58,180
processing of certain commands then I've

933
00:49:56,020 --> 00:50:00,460
added a section on how dependencies are

934
00:49:58,180 --> 00:50:04,440
handled in the interpreter behavior

935
00:50:00,460 --> 00:50:07,600
section as well next slide please

936
00:50:04,440 --> 00:50:10,710
so then I've added a new section on

937
00:50:07,600 --> 00:50:14,650
creating manifests and this includes one

938
00:50:10,710 --> 00:50:16,960
mention of including source material in

939
00:50:14,650 --> 00:50:17,920
the text section of the manifest now

940
00:50:16,960 --> 00:50:20,890
this might be interesting for

941
00:50:17,920 --> 00:50:27,400
intermediate systems since the author

942
00:50:20,890 --> 00:50:29,980
can provide a a document that is in a

943
00:50:27,400 --> 00:50:31,720
more conventional form and that would

944
00:50:29,980 --> 00:50:35,200
allow intermediate systems to handle it

945
00:50:31,720 --> 00:50:38,529
simply but then at the same time that

946
00:50:35,200 --> 00:50:40,600
can be pruned with the with the

947
00:50:38,530 --> 00:50:43,320
severable section that it like meet with

948
00:50:40,600 --> 00:50:45,759
a text separable selection so that

949
00:50:43,320 --> 00:50:50,410
that's never actually delivered to the

950
00:50:45,760 --> 00:50:55,150
end node so we've also added templates

951
00:50:50,410 --> 00:50:59,799
so the idea there is that it gives the

952
00:50:55,150 --> 00:51:02,740
authors of tooling some help on exactly

953
00:50:59,800 --> 00:51:06,370
what different use cases should look

954
00:51:02,740 --> 00:51:09,250
like once they are built into a manifest

955
00:51:06,370 --> 00:51:13,380
and then there's a few use case

956
00:51:09,250 --> 00:51:15,340
templates that explain exactly which

957
00:51:13,380 --> 00:51:19,170
commands you would need to accomplish

958
00:51:15,340 --> 00:51:22,090
different tasks next slide please

959
00:51:19,170 --> 00:51:26,010
so I've added in some text field

960
00:51:22,090 --> 00:51:28,090
definitions those have been noted

961
00:51:26,010 --> 00:51:31,180
noticeably missing from previous

962
00:51:28,090 --> 00:51:32,920
versions of the draft so there's a few

963
00:51:31,180 --> 00:51:36,370
there's the the ones you would expect

964
00:51:32,920 --> 00:51:41,380
here vendor domain and model info are

965
00:51:36,370 --> 00:51:46,770
the inputs to the UUID v function and

966
00:51:41,380 --> 00:51:46,770
that which might be useful in some cases

967
00:51:46,890 --> 00:51:53,920
then the json source and yamo source are

968
00:51:50,650 --> 00:51:55,630
two examples of a an input file that you

969
00:51:53,920 --> 00:51:57,970
might use to create your manifest in the

970
00:51:55,630 --> 00:52:00,900
first place and then that input file can

971
00:51:57,970 --> 00:52:07,029
be included in the text fields as well

972
00:52:00,900 --> 00:52:08,430
next please so for next steps we think

973
00:52:07,030 --> 00:52:12,760
that the draft is in a pretty good state

974
00:52:08,430 --> 00:52:15,580
there's been a few editorial PRS which

975
00:52:12,760 --> 00:52:17,530
most of which have been merged we're

976
00:52:15,580 --> 00:52:19,509
wondering if there's a better name that

977
00:52:17,530 --> 00:52:22,240
we could come up with than just suit

978
00:52:19,510 --> 00:52:23,470
manifest because right now if you don't

979
00:52:22,240 --> 00:52:28,720
know what you're looking for

980
00:52:23,470 --> 00:52:30,970
I had you probably won't find it for

981
00:52:28,720 --> 00:52:33,040
technical proposals for Version three we

982
00:52:30,970 --> 00:52:36,669
have a few which I'll get into in a

983
00:52:33,040 --> 00:52:38,770
moment so we want to look at the use of

984
00:52:36,670 --> 00:52:41,350
run sequence versus try each which was

985
00:52:38,770 --> 00:52:45,009
introduced in version 5 of the

986
00:52:41,350 --> 00:52:47,770
individual draft some discuss the

987
00:52:45,010 --> 00:52:51,940
examples themselves and then I've got a

988
00:52:47,770 --> 00:52:56,520
couple of proposals for new flow control

989
00:52:51,940 --> 00:52:56,520
primitives next please

990
00:52:57,060 --> 00:53:03,690
so Brannon you want to generalize to

991
00:53:00,310 --> 00:53:07,330
something like software update manifest

992
00:53:03,690 --> 00:53:10,240
maybe I mean something like that yeah if

993
00:53:07,330 --> 00:53:12,520
you a search engine won't find yeah

994
00:53:10,240 --> 00:53:13,779
exactly so the problem with suit

995
00:53:12,520 --> 00:53:16,720
manifest is that you're not going to

996
00:53:13,780 --> 00:53:19,000
find it if you search for it so and to

997
00:53:16,720 --> 00:53:21,459
come back to the discussion that we were

998
00:53:19,000 --> 00:53:24,940
having previously with Kathleen's

999
00:53:21,460 --> 00:53:28,830
feedback if we leave it as suit manifest

1000
00:53:24,940 --> 00:53:31,840
then it's it's quite clearly not for

1001
00:53:28,830 --> 00:53:34,420
larger devices right because it says IOT

1002
00:53:31,840 --> 00:53:39,150
right enough and so maybe you software

1003
00:53:34,420 --> 00:53:42,250
update manifesting didn't catch that

1004
00:53:39,150 --> 00:53:44,020
this is Dave I like Ross's term this is

1005
00:53:42,250 --> 00:53:47,980
software update manifest sounds great to

1006
00:53:44,020 --> 00:53:51,430
me okay he suggested tuxedo manifests

1007
00:53:47,980 --> 00:53:52,870
but oh I like it so I think software

1008
00:53:51,430 --> 00:53:55,509
update manifest is a good idea

1009
00:53:52,870 --> 00:53:57,339
Rob manifest was Russ's real suggestion

1010
00:53:55,510 --> 00:53:59,610
as opposed to the tongue-in-cheek one

1011
00:53:57,340 --> 00:53:59,610
yes

1012
00:54:01,219 --> 00:54:06,799
so the thing about run sequence was we

1013
00:54:04,039 --> 00:54:09,890
originally introduced it to allow

1014
00:54:06,799 --> 00:54:13,519
conditional processing but it was a bit

1015
00:54:09,890 --> 00:54:18,229
ambiguous on what's whether it was a

1016
00:54:13,519 --> 00:54:19,788
soft fail or hard fail and then it

1017
00:54:18,229 --> 00:54:21,709
didn't have an else clause which meant

1018
00:54:19,789 --> 00:54:23,869
that if you went through and tested a

1019
00:54:21,709 --> 00:54:26,328
number of sequences and they all failed

1020
00:54:23,869 --> 00:54:30,109
there was no way to catch that case in

1021
00:54:26,329 --> 00:54:37,969
the manifest itself so as a result of

1022
00:54:30,109 --> 00:54:41,119
that we introduced we introduced the try

1023
00:54:37,969 --> 00:54:43,519
each construct now the thing about that

1024
00:54:41,119 --> 00:54:46,249
was that it's explicit that it's soft

1025
00:54:43,519 --> 00:54:48,558
failure even in its name and it

1026
00:54:46,249 --> 00:54:50,509
definitely has an else clause so the

1027
00:54:48,559 --> 00:54:53,479
question is should we deprecate run

1028
00:54:50,509 --> 00:54:57,229
sequence now there's the possibility

1029
00:54:53,479 --> 00:55:01,058
that we could use run sequence for

1030
00:54:57,229 --> 00:55:04,430
another use case which is specifically

1031
00:55:01,059 --> 00:55:06,829
serialized out of order processing the

1032
00:55:04,430 --> 00:55:08,959
idea there is that you have several

1033
00:55:06,829 --> 00:55:11,599
sequences each of which need to be

1034
00:55:08,959 --> 00:55:13,729
executed in order internally but the

1035
00:55:11,599 --> 00:55:16,039
order that you process the sequences in

1036
00:55:13,729 --> 00:55:20,058
doesn't matter that seems like a fairly

1037
00:55:16,039 --> 00:55:21,859
advanced use case so maybe it would be

1038
00:55:20,059 --> 00:55:23,890
better to just deprecated run sequence

1039
00:55:21,859 --> 00:55:30,049
and introduce a new extension

1040
00:55:23,890 --> 00:55:32,989
next please so next the example section

1041
00:55:30,049 --> 00:55:35,119
is very big now there are a few options

1042
00:55:32,989 --> 00:55:37,279
that we have here we could prune some

1043
00:55:35,119 --> 00:55:40,339
information because maybe it they're a

1044
00:55:37,279 --> 00:55:42,469
bit too verbose right now for example

1045
00:55:40,339 --> 00:55:44,719
there was a JSON representation in each

1046
00:55:42,469 --> 00:55:46,279
of the examples and I'm not sure that we

1047
00:55:44,719 --> 00:55:49,239
actually need the JSON representation

1048
00:55:46,279 --> 00:55:53,059
since we also have the Seaboard decode

1049
00:55:49,239 --> 00:55:56,779
our sorry seaboard debug info version of

1050
00:55:53,059 --> 00:55:58,640
the information we can move them to an

1051
00:55:56,779 --> 00:56:00,410
appendix in fact we should move them to

1052
00:55:58,640 --> 00:56:03,709
append an appendix if we do nothing else

1053
00:56:00,410 --> 00:56:05,538
and the other option would be to move

1054
00:56:03,709 --> 00:56:08,569
them to another document with more

1055
00:56:05,539 --> 00:56:11,719
extensive use case information now my

1056
00:56:08,569 --> 00:56:13,100
inclination here is to move them to an

1057
00:56:11,719 --> 00:56:17,120
appendix and prune the

1058
00:56:13,100 --> 00:56:19,310
for representation I'm not sure that

1059
00:56:17,120 --> 00:56:22,670
moving them to another document is the

1060
00:56:19,310 --> 00:56:23,540
best answer but I'm not sure it's not

1061
00:56:22,670 --> 00:56:28,130
the right answer

1062
00:56:23,540 --> 00:56:32,360
yeah so I think reading with you okay

1063
00:56:28,130 --> 00:56:34,760
the first two options please okay good

1064
00:56:32,360 --> 00:56:35,210
I'm glad we have some agreement all

1065
00:56:34,760 --> 00:56:39,890
right

1066
00:56:35,210 --> 00:56:44,960
next slide then so the map test executes

1067
00:56:39,890 --> 00:56:48,350
concept I was talking about I the idea

1068
00:56:44,960 --> 00:56:50,930
here is that we have a fairly common set

1069
00:56:48,350 --> 00:56:54,470
of patterns so there's a a for each

1070
00:56:50,930 --> 00:56:55,759
component things so you I have several

1071
00:56:54,470 --> 00:56:58,430
components and I want to do the same

1072
00:56:55,760 --> 00:57:01,280
thing to each of them and then there's

1073
00:56:58,430 --> 00:57:03,080
set a variety of component parameters so

1074
00:57:01,280 --> 00:57:04,910
set the digests for each of the

1075
00:57:03,080 --> 00:57:07,940
components or set the size for each of

1076
00:57:04,910 --> 00:57:10,190
the components and then there's another

1077
00:57:07,940 --> 00:57:12,440
one which is choose a set of parameters

1078
00:57:10,190 --> 00:57:15,770
based on some system properties so that

1079
00:57:12,440 --> 00:57:19,520
would involve essentially running the

1080
00:57:15,770 --> 00:57:22,009
same sequence multiple times until you

1081
00:57:19,520 --> 00:57:24,380
find one that matches and then there's

1082
00:57:22,010 --> 00:57:27,230
the prioritized parameter list which is

1083
00:57:24,380 --> 00:57:29,870
a generalization of the prioritized URI

1084
00:57:27,230 --> 00:57:33,410
list that we've discussed previously and

1085
00:57:29,870 --> 00:57:35,180
that was a request from someone that I

1086
00:57:33,410 --> 00:57:36,649
think I think that might have actually

1087
00:57:35,180 --> 00:57:39,200
come from discussions with the teep

1088
00:57:36,650 --> 00:57:43,460
working group but I'm I'm a little hazy

1089
00:57:39,200 --> 00:57:45,919
on that one and so the result of that

1090
00:57:43,460 --> 00:57:47,990
was that I'm I was looking for a

1091
00:57:45,920 --> 00:57:52,880
catch-all approach since these all seem

1092
00:57:47,990 --> 00:57:56,270
to share something fairly common so what

1093
00:57:52,880 --> 00:57:58,610
I'm going to propose is a map test

1094
00:57:56,270 --> 00:58:01,759
execute structure now the idea here is

1095
00:57:58,610 --> 00:58:04,250
that you first have a list of component

1096
00:58:01,760 --> 00:58:05,600
ID parameter set pairs so a set of

1097
00:58:04,250 --> 00:58:08,630
parameters that gets applied to a

1098
00:58:05,600 --> 00:58:12,470
particular component ID then after that

1099
00:58:08,630 --> 00:58:15,770
you have a test that makes sure that

1100
00:58:12,470 --> 00:58:18,290
that set of parameters or the each set

1101
00:58:15,770 --> 00:58:21,860
of parameters is valid and aborts if

1102
00:58:18,290 --> 00:58:24,259
it's not and then an execute which runs

1103
00:58:21,860 --> 00:58:26,900
a command sequence that can't soft fail

1104
00:58:24,260 --> 00:58:31,630
and wearing an error would cause

1105
00:58:26,900 --> 00:58:34,940
command termination next please

1106
00:58:31,630 --> 00:58:36,740
so there's an encoding there and I

1107
00:58:34,940 --> 00:58:39,440
should stress that the idea here is that

1108
00:58:36,740 --> 00:58:42,020
there is exactly one test sequence and

1109
00:58:39,440 --> 00:58:46,089
exactly one execute sequence it's not

1110
00:58:42,020 --> 00:58:48,220
one test sequence per parameter list

1111
00:58:46,089 --> 00:58:52,730
next slide please

1112
00:58:48,220 --> 00:58:55,038
so there's a trade-off here so to make

1113
00:58:52,730 --> 00:58:57,829
this work properly there has to be a

1114
00:58:55,039 --> 00:59:00,410
temporary set of parameters that is used

1115
00:58:57,829 --> 00:59:04,069
before a test happens to prevent side

1116
00:59:00,410 --> 00:59:08,390
effects in the system so that that does

1117
00:59:04,069 --> 00:59:10,430
cost some RAM to implement the the

1118
00:59:08,390 --> 00:59:12,618
benefit though is that it does produce a

1119
00:59:10,430 --> 00:59:15,200
smaller encoding of repeated patterns

1120
00:59:12,619 --> 00:59:17,990
now I should just I should make this

1121
00:59:15,200 --> 00:59:21,319
clear this is not something that's

1122
00:59:17,990 --> 00:59:23,598
mandatory for the standard to work at

1123
00:59:21,319 --> 00:59:25,099
all but it is something that would

1124
00:59:23,599 --> 00:59:27,200
produce smaller encoding under certain

1125
00:59:25,099 --> 00:59:28,640
circumstances and that's specifically

1126
00:59:27,200 --> 00:59:32,058
where there's repeated patterns and

1127
00:59:28,640 --> 00:59:34,190
parameter changes I'll bring this

1128
00:59:32,059 --> 00:59:35,839
altameyer just a quick clarifying

1129
00:59:34,190 --> 00:59:39,680
question what why do you need a set of

1130
00:59:35,839 --> 00:59:42,589
temporary parameters for both lights so

1131
00:59:39,680 --> 00:59:46,399
if we go back a slide are two slides

1132
00:59:42,589 --> 00:59:48,859
make that yeah so you have this this

1133
00:59:46,400 --> 00:59:51,890
structure where you've got a map of

1134
00:59:48,859 --> 00:59:54,348
parameter sets and then a test that

1135
00:59:51,890 --> 00:59:57,529
happens after it now you you would

1136
00:59:54,349 --> 01:00:00,349
anticipate that the parameter set will

1137
00:59:57,529 --> 01:00:03,020
not be applied to your overall system

1138
01:00:00,349 --> 01:00:06,010
state until after the test has succeeded

1139
01:00:03,020 --> 01:00:09,109
but because of the simplicity of the

1140
01:00:06,010 --> 01:00:12,140
interpreter you would have to apply the

1141
01:00:09,109 --> 01:00:15,950
parameter set before running the test in

1142
01:00:12,140 --> 01:00:17,900
order for that test sequence to to have

1143
01:00:15,950 --> 01:00:21,740
any effect since it's going to work on

1144
01:00:17,900 --> 01:00:25,220
the parameters that you've just set so

1145
01:00:21,740 --> 01:00:29,270
the temporaries are there to manage the

1146
01:00:25,220 --> 01:00:31,939
state of the of those parameter sets

1147
01:00:29,270 --> 01:00:34,730
until after the test has succeeded at

1148
01:00:31,940 --> 01:00:38,599
which point the temporaries would become

1149
01:00:34,730 --> 01:00:40,160
committed does that make sense yeah yeah

1150
01:00:38,599 --> 01:00:40,940
my confusion was mostly around the

1151
01:00:40,160 --> 01:00:42,529
terminology

1152
01:00:40,940 --> 01:00:45,920
I think yeah thanks oh they're enough

1153
01:00:42,530 --> 01:00:49,670
yeah it's the terminology is maybe a bit

1154
01:00:45,920 --> 01:00:51,650
still of a work in progress so the

1155
01:00:49,670 --> 01:00:53,750
question that I have is should this be

1156
01:00:51,650 --> 01:00:55,040
an extension should it be optional or

1157
01:00:53,750 --> 01:00:58,010
should it be required under certain

1158
01:00:55,040 --> 01:01:00,410
circumstances now my recommendation is

1159
01:00:58,010 --> 01:01:02,750
that if we use it at all it should be

1160
01:01:00,410 --> 01:01:05,690
required under these specific

1161
01:01:02,750 --> 01:01:09,590
circumstances if you have more than one

1162
01:01:05,690 --> 01:01:12,980
component it should be required and if

1163
01:01:09,590 --> 01:01:16,820
you have if you're using something like

1164
01:01:12,980 --> 01:01:18,500
a V offset or a B offset based execute

1165
01:01:16,820 --> 01:01:21,020
in place images then it should be

1166
01:01:18,500 --> 01:01:24,290
required under other circumstances for

1167
01:01:21,020 --> 01:01:27,259
so for single image devices with a

1168
01:01:24,290 --> 01:01:29,690
single offset then it would not be

1169
01:01:27,260 --> 01:01:31,520
required at all so that's my

1170
01:01:29,690 --> 01:01:34,640
recommendation if we go ahead and use it

1171
01:01:31,520 --> 01:01:40,160
if we don't then it could be added as an

1172
01:01:34,640 --> 01:01:43,629
extension later on so I'd like feedback

1173
01:01:40,160 --> 01:01:45,830
from the from the working group on that

1174
01:01:43,630 --> 01:01:48,830
specifically on my recommendation to

1175
01:01:45,830 --> 01:01:53,330
make it required for multi component

1176
01:01:48,830 --> 01:01:55,310
devices so I was just thinking on the

1177
01:01:53,330 --> 01:01:58,009
question of should this be an extension

1178
01:01:55,310 --> 01:01:59,810
or not and you know are there anyone in

1179
01:01:58,010 --> 01:02:06,500
the room that would implement this if

1180
01:01:59,810 --> 01:02:09,830
this feature was was provided it's a

1181
01:02:06,500 --> 01:02:12,200
compression algorithm effectively for

1182
01:02:09,830 --> 01:02:15,799
compressing the manifest itself sure I

1183
01:02:12,200 --> 01:02:18,799
have on the thing that I sent the list I

1184
01:02:15,800 --> 01:02:20,930
did show what it would do in a variety

1185
01:02:18,800 --> 01:02:23,390
of circumstances so I don't know if

1186
01:02:20,930 --> 01:02:24,620
that's helpful or not in evaluating it

1187
01:02:23,390 --> 01:02:26,299
and maybe this is something that people

1188
01:02:24,620 --> 01:02:32,799
need to look at a bit more before they

1189
01:02:26,300 --> 01:02:32,800
decide on it yes fair enough

1190
01:02:34,440 --> 01:02:41,020
okay well in the absence of any

1191
01:02:36,790 --> 01:02:42,820
commentary on that let's move on so the

1192
01:02:41,020 --> 01:02:45,820
other option would be for each component

1193
01:02:42,820 --> 01:02:47,410
it's a bit easier to understand but it's

1194
01:02:45,820 --> 01:02:50,050
much less flexible than the map test

1195
01:02:47,410 --> 01:02:52,420
execute construct and it implements only

1196
01:02:50,050 --> 01:02:56,050
the for each component in a list do

1197
01:02:52,420 --> 01:02:57,400
something structure rather than all four

1198
01:02:56,050 --> 01:03:01,180
of those examples that I provided

1199
01:02:57,400 --> 01:03:04,960
earlier and it expands on the the

1200
01:03:01,180 --> 01:03:07,480
previous concept of using true as a

1201
01:03:04,960 --> 01:03:10,090
catch-all so this would allow you to say

1202
01:03:07,480 --> 01:03:12,330
you know I want to apply a given

1203
01:03:10,090 --> 01:03:16,000
sequence to all but one of my components

1204
01:03:12,330 --> 01:03:17,500
whereas the previous encoding didn't

1205
01:03:16,000 --> 01:03:20,740
have any construct that would allow you

1206
01:03:17,500 --> 01:03:23,190
to do that so either map test execute or

1207
01:03:20,740 --> 01:03:24,750
for each component would allow you to do

1208
01:03:23,190 --> 01:03:27,670
this

1209
01:03:24,750 --> 01:03:31,000
this kind of construct but the for each

1210
01:03:27,670 --> 01:03:35,050
component one certainly is a bit simpler

1211
01:03:31,000 --> 01:03:38,110
and I think that's the last one

1212
01:03:35,050 --> 01:03:40,119
oh no it isn't there's a road map okay

1213
01:03:38,110 --> 01:03:43,000
yes so we have a fairly stable document

1214
01:03:40,119 --> 01:03:46,570
already but we want to make sure that it

1215
01:03:43,000 --> 01:03:50,170
is just ready to go before the hackathon

1216
01:03:46,570 --> 01:03:52,690
in February and we're planning to have

1217
01:03:50,170 --> 01:03:57,430
code and tools developed as input for

1218
01:03:52,690 --> 01:03:59,080
that event so we've already got those in

1219
01:03:57,430 --> 01:04:03,250
development so it's just a matter of

1220
01:03:59,080 --> 01:04:05,350
getting them ready for release and we're

1221
01:04:03,250 --> 01:04:16,630
hoping to start a working group last

1222
01:04:05,350 --> 01:04:23,680
call in March I think that's it hi this

1223
01:04:16,630 --> 01:04:28,740
is Hank hi Brennan my hack I have one

1224
01:04:23,680 --> 01:04:31,359
comment on getting things smaller I'm

1225
01:04:28,740 --> 01:04:34,169
somehow involved in creating a lot of

1226
01:04:31,359 --> 01:04:37,299
SIBO data items in the last year's and

1227
01:04:34,170 --> 01:04:40,090
some of them unfortunately still have

1228
01:04:37,300 --> 01:04:42,430
text values this cannot always be

1229
01:04:40,090 --> 01:04:48,070
avoided I saw a bunch of new text values

1230
01:04:42,430 --> 01:04:53,680
there so hi yes so we are considering

1231
01:04:48,070 --> 01:04:57,910
in general to give a ad for compression

1232
01:04:53,680 --> 01:05:01,690
to a data item and as you are concerned

1233
01:04:57,910 --> 01:05:04,629
with sighs I just wanted to pitch that

1234
01:05:01,690 --> 01:05:06,960
here I don't think if it's useful or

1235
01:05:04,630 --> 01:05:11,820
should be scrapped after uttering it

1236
01:05:06,960 --> 01:05:16,780
it's just the combination of zebra and

1237
01:05:11,820 --> 01:05:20,050
z4 was also used for the DNS aggregation

1238
01:05:16,780 --> 01:05:23,430
benchmarking thingy and from the icon

1239
01:05:20,050 --> 01:05:27,070
guys and there were kind of fond of it

1240
01:05:23,430 --> 01:05:29,350
because it reduced the amount of data

1241
01:05:27,070 --> 01:05:31,690
significantly depending on femicides I'm

1242
01:05:29,350 --> 01:05:34,390
not sure how much entropy is in there it

1243
01:05:31,690 --> 01:05:37,180
might not matter but this is my first

1244
01:05:34,390 --> 01:05:40,029
comment just to as a food for thought

1245
01:05:37,180 --> 01:05:45,600
I'd say before we go too much further

1246
01:05:40,030 --> 01:05:45,600
can I recommend not l said for the issue

1247
01:05:46,680 --> 01:05:52,419
though the reason that I I recommend

1248
01:05:49,240 --> 01:05:58,330
against L said for is that it has a 64 K

1249
01:05:52,420 --> 01:05:59,680
table size oh you're a bit painful good

1250
01:05:58,330 --> 01:06:02,319
argument thank you I would keep that in

1251
01:05:59,680 --> 01:06:04,480
mind okay second one comment on your

1252
01:06:02,320 --> 01:06:05,800
comment Hank I mean one of the things

1253
01:06:04,480 --> 01:06:07,240
that we need to think about though if

1254
01:06:05,800 --> 01:06:09,940
we're gonna look at any kind of

1255
01:06:07,240 --> 01:06:12,759
compression on on these data elements is

1256
01:06:09,940 --> 01:06:17,710
sort of the the the size reduction

1257
01:06:12,760 --> 01:06:20,650
versus processing cost some things in

1258
01:06:17,710 --> 01:06:23,530
the mind to ask everywhere so just I'm

1259
01:06:20,650 --> 01:06:25,540
okay with that and and they don't do it

1260
01:06:23,530 --> 01:06:28,870
is totally fine I'm not married to any

1261
01:06:25,540 --> 01:06:34,390
of this more of interest to be right now

1262
01:06:28,870 --> 01:06:38,049
is the second question I have in in

1263
01:06:34,390 --> 01:06:42,040
second we just had an interesting input

1264
01:06:38,050 --> 01:06:45,190
from Kathleen Moriarty because the coast

1265
01:06:42,040 --> 01:06:48,270
wid seaboard data structure that is also

1266
01:06:45,190 --> 01:06:52,000
an optional item of the suit manifest

1267
01:06:48,270 --> 01:06:55,630
was proposed as I was proposal from

1268
01:06:52,000 --> 01:06:59,410
Kathleen to make that a CWT structure

1269
01:06:55,630 --> 01:07:01,319
and set of a coastward structure the

1270
01:06:59,410 --> 01:07:04,259
argument here was

1271
01:07:01,319 --> 01:07:07,380
it would ease adoption of the data

1272
01:07:04,260 --> 01:07:09,540
structure as the suit manifest basically

1273
01:07:07,380 --> 01:07:14,430
has the same data structure as the coast

1274
01:07:09,540 --> 01:07:18,119
with sea bottom I would like to ask this

1275
01:07:14,430 --> 01:07:22,098
group would you see any obstacles in

1276
01:07:18,119 --> 01:07:26,940
having a specific suit manifest tag

1277
01:07:22,099 --> 01:07:31,290
instead of a CWT tag in front of the

1278
01:07:26,940 --> 01:07:37,160
manifest map and if so is that a

1279
01:07:31,290 --> 01:07:40,980
realistic threshold or is this just a a

1280
01:07:37,160 --> 01:07:44,098
felt problem I don't know I really don't

1281
01:07:40,980 --> 01:07:47,819
know because I would think that if you

1282
01:07:44,099 --> 01:07:53,400
make anything that is a Siebel map a CWT

1283
01:07:47,819 --> 01:07:56,329
you always inherit all the CWT normative

1284
01:07:53,400 --> 01:07:59,280
language which also includes for example

1285
01:07:56,329 --> 01:08:02,220
the inclusion of all the seven claims

1286
01:07:59,280 --> 01:08:04,109
and these have nothing to do with suit

1287
01:08:02,220 --> 01:08:06,089
manifests and for example they have

1288
01:08:04,109 --> 01:08:08,910
nothing to do with a course which

1289
01:08:06,089 --> 01:08:14,089
software identity check and so my

1290
01:08:08,910 --> 01:08:18,479
question is would you be pro or con

1291
01:08:14,089 --> 01:08:21,479
tagging this suit manifest with the CWT

1292
01:08:18,479 --> 01:08:28,080
tech for the sake of bigger adoption in

1293
01:08:21,479 --> 01:08:30,419
the field because CWT parsers are

1294
01:08:28,080 --> 01:08:32,759
everywhere this is the argument III I'm

1295
01:08:30,420 --> 01:08:35,580
just reflecting the argument and I see

1296
01:08:32,759 --> 01:08:37,049
the same problem o applicable of this

1297
01:08:35,580 --> 01:08:41,519
argument here this is why I'm I'm

1298
01:08:37,049 --> 01:08:46,859
highlighting it personally I am pro suit

1299
01:08:41,520 --> 01:08:49,980
tag do you think Pro and I would prefer

1300
01:08:46,859 --> 01:08:54,199
a suit tag to a CWT tag and do you think

1301
01:08:49,979 --> 01:08:56,459
that the suit tech the Hinderer adoption

1302
01:08:54,198 --> 01:08:59,160
because it's not the CWG and they're

1303
01:08:56,460 --> 01:09:00,779
less common I don't think it will

1304
01:08:59,160 --> 01:09:07,380
because I think that suit is a

1305
01:09:00,779 --> 01:09:10,980
sufficiently specific use case that if I

1306
01:09:07,380 --> 01:09:14,430
for example we're updating or designing

1307
01:09:10,979 --> 01:09:17,120
a firmware update solution it wouldn't

1308
01:09:14,430 --> 01:09:19,650
matter to me whether it was a CWT or not

1309
01:09:17,120 --> 01:09:21,870
okay so I just wanted to point out that

1310
01:09:19,649 --> 01:09:24,899
our our Charter is that is to create a

1311
01:09:21,870 --> 01:09:30,269
suit manifest format not to adapt

1312
01:09:24,899 --> 01:09:32,490
you know CWT too close with an ii but

1313
01:09:30,270 --> 01:09:35,280
but still it came up there and is this

1314
01:09:32,490 --> 01:09:37,889
is this is the exact same symmetric

1315
01:09:35,279 --> 01:09:40,620
structure I thought I would ask the same

1316
01:09:37,890 --> 01:09:44,340
question here this is honey so what

1317
01:09:40,620 --> 01:09:46,290
happens if you just take the CWD but not

1318
01:09:44,340 --> 01:09:49,170
the mandatory fields in yet would that

1319
01:09:46,290 --> 01:09:52,680
still be then okay because then the

1320
01:09:49,170 --> 01:09:54,600
differences may be may be minor because

1321
01:09:52,680 --> 01:09:55,920
some of the I don't form the top of my

1322
01:09:54,600 --> 01:10:00,000
hat I don't remember what are the

1323
01:09:55,920 --> 01:10:03,780
mandatory fields to be honest at best

1324
01:10:00,000 --> 01:10:06,120
before I D those things and I think the

1325
01:10:03,780 --> 01:10:09,059
issue is non-issue here

1326
01:10:06,120 --> 01:10:12,059
so putting them in this kind of messing

1327
01:10:09,060 --> 01:10:13,170
up a semantic messing up so I think

1328
01:10:12,060 --> 01:10:15,320
we're gonna have to take this to the

1329
01:10:13,170 --> 01:10:23,790
list because we're out of time for this

1330
01:10:15,320 --> 01:10:25,230
topic so if you could post something to

1331
01:10:23,790 --> 01:10:25,950
the list so there would be there would

1332
01:10:25,230 --> 01:10:29,099
be great

1333
01:10:25,950 --> 01:10:32,519
Brendon any last word before before we

1334
01:10:29,100 --> 01:10:33,960
wrap up no I think that's it for me

1335
01:10:32,520 --> 01:10:35,220
well I guess the only thing was to

1336
01:10:33,960 --> 01:10:37,410
respond to one other thing that Hank

1337
01:10:35,220 --> 01:10:39,600
said which was that we're adding a bunch

1338
01:10:37,410 --> 01:10:43,440
of text fields and I would note that

1339
01:10:39,600 --> 01:10:49,140
those text fields take only the size of

1340
01:10:43,440 --> 01:10:50,910
a digest to populate alright great so

1341
01:10:49,140 --> 01:10:52,820
now we're gonna move on to the other

1342
01:10:50,910 --> 01:10:56,790
work phase I'd like to have Dave Tyler

1343
01:10:52,820 --> 01:10:58,200
talk about manifest requirements from

1344
01:10:56,790 --> 01:11:01,560
the teep working group and then we have

1345
01:10:58,200 --> 01:11:04,980
one other presentation so you have ten

1346
01:11:01,560 --> 01:11:07,640
minutes okay I'm gonna try to be fast

1347
01:11:04,980 --> 01:11:10,980
and I hope Brennan stays at the mic here

1348
01:11:07,640 --> 01:11:14,190
as you may know the teep working group

1349
01:11:10,980 --> 01:11:16,410
bottom IETF meeting or so ago de pet

1350
01:11:14,190 --> 01:11:19,429
decided to take a dependency on the suit

1351
01:11:16,410 --> 01:11:23,519
manifest or the software update manifest

1352
01:11:19,430 --> 01:11:25,650
if you're not familiar t p-- provisions

1353
01:11:23,520 --> 01:11:28,530
code and configuration into a trusted

1354
01:11:25,650 --> 01:11:31,409
execution environment brennan prison

1355
01:11:28,530 --> 01:11:35,009
to the soup manifest to the teep working

1356
01:11:31,409 --> 01:11:36,509
group at an intra meeting and as a

1357
01:11:35,010 --> 01:11:39,679
result of that the teep working group

1358
01:11:36,510 --> 01:11:41,789
has gone through to compose what is the

1359
01:11:39,679 --> 01:11:43,860
requirements and the suit manifest that

1360
01:11:41,789 --> 01:11:46,679
it may or may not already meet and this

1361
01:11:43,860 --> 01:11:48,869
is the list of stuff that came up in the

1362
01:11:46,679 --> 01:11:50,639
t p-- meeting and we wanted to walk

1363
01:11:48,869 --> 01:11:52,440
through these briefly and get a yep

1364
01:11:50,639 --> 01:11:54,239
that's already in there or nope we got

1365
01:11:52,440 --> 01:11:55,558
to do something to add that okay so I'm

1366
01:11:54,239 --> 01:11:57,058
going to walk through these briefly and

1367
01:11:55,559 --> 01:11:57,989
this is really the only slide that I

1368
01:11:57,059 --> 01:12:00,030
want to walk through unless you have

1369
01:11:57,989 --> 01:12:03,239
questions but otherwise this is my only

1370
01:12:00,030 --> 01:12:05,400
slide right and so let me just prefix

1371
01:12:03,239 --> 01:12:07,949
this by saying Brendan showed a bunch of

1372
01:12:05,400 --> 01:12:11,369
use case templates and so you might

1373
01:12:07,949 --> 01:12:13,230
think about should we want a use case

1374
01:12:11,369 --> 01:12:15,259
template for any of this stuff as an

1375
01:12:13,230 --> 01:12:17,519
interesting question

1376
01:12:15,260 --> 01:12:19,469
so let me walk through these things

1377
01:12:17,520 --> 01:12:22,320
because earlier in this meeting we said

1378
01:12:19,469 --> 01:12:24,300
hey the suit manifest or soft right Nate

1379
01:12:22,320 --> 01:12:26,070
manifest could be usable for a larger

1380
01:12:24,300 --> 01:12:27,780
class things you know updating Linux

1381
01:12:26,070 --> 01:12:29,308
updating windows or whatever but hey has

1382
01:12:27,780 --> 01:12:30,840
anybody gone through to validates that

1383
01:12:29,309 --> 01:12:32,579
would actually work well that's the

1384
01:12:30,840 --> 01:12:34,440
exercise that teep just did for a trust

1385
01:12:32,579 --> 01:12:36,420
execution environment it says would it

1386
01:12:34,440 --> 01:12:39,509
actually work and this is the list that

1387
01:12:36,420 --> 01:12:41,309
we came up with in the teep meeting and

1388
01:12:39,510 --> 01:12:43,860
so I'm gonna walk through each of these

1389
01:12:41,309 --> 01:12:46,380
and hopefully we can say this is already

1390
01:12:43,860 --> 01:12:48,750
there or it's not already there but it

1391
01:12:46,380 --> 01:12:51,809
could be easily added okay so here's the

1392
01:12:48,750 --> 01:12:55,050
four things the first one is to say for

1393
01:12:51,809 --> 01:12:56,340
any dependency from a particular item

1394
01:12:55,050 --> 01:12:58,800
that needs to be installed a thing that

1395
01:12:56,340 --> 01:13:01,260
has a manifest any dependency the

1396
01:12:58,800 --> 01:13:04,230
ability to list one or more you are eyes

1397
01:13:01,260 --> 01:13:07,079
and those are not you are eyes where the

1398
01:13:04,230 --> 01:13:08,699
binary can be downloaded these are

1399
01:13:07,079 --> 01:13:11,308
binaries for which you can use a

1400
01:13:08,699 --> 01:13:12,780
protocol to negotiate the security

1401
01:13:11,309 --> 01:13:14,610
mechanism needed to say get the

1402
01:13:12,780 --> 01:13:17,550
decryption key or whatever else okay and

1403
01:13:14,610 --> 01:13:19,380
so could we have a URI associated in

1404
01:13:17,550 --> 01:13:21,119
dependency that's not the URI for the

1405
01:13:19,380 --> 01:13:25,530
binary itself that's point that's number

1406
01:13:21,119 --> 01:13:27,808
one yes I could we don't currently have

1407
01:13:25,530 --> 01:13:28,920
that but it's an easy add thank you

1408
01:13:27,809 --> 01:13:30,719
because that's the main thing is each of

1409
01:13:28,920 --> 01:13:32,820
these yes it's already there or it's an

1410
01:13:30,719 --> 01:13:34,980
easy add or it's a hard add and so thank

1411
01:13:32,820 --> 01:13:37,259
you easy add okay Hank did you ever come

1412
01:13:34,980 --> 01:13:38,400
in on that one not anymore trying to

1413
01:13:37,260 --> 01:13:41,970
stay in ten trying to stay in ten

1414
01:13:38,400 --> 01:13:45,929
minutes okay number two the

1415
01:13:41,970 --> 01:13:47,850
on certain types of te es there is in

1416
01:13:45,930 --> 01:13:50,010
order to install the binary you have to

1417
01:13:47,850 --> 01:13:52,800
do a particular thing that's to create

1418
01:13:50,010 --> 01:13:54,600
this security domain concept so you need

1419
01:13:52,800 --> 01:13:56,430
some type of a command or directive of

1420
01:13:54,600 --> 01:13:58,470
whatever it says create me a security

1421
01:13:56,430 --> 01:14:00,270
domain if it doesn't already exist and

1422
01:13:58,470 --> 01:14:02,220
here's the ID of that thing there we

1423
01:14:00,270 --> 01:14:06,350
just need to be a way to express that in

1424
01:14:02,220 --> 01:14:09,720
the manifest that should be doable

1425
01:14:06,350 --> 01:14:12,000
already that's already doable if you

1426
01:14:09,720 --> 01:14:15,000
need to do explicit create operations

1427
01:14:12,000 --> 01:14:17,760
that might be an easy add rather than an

1428
01:14:15,000 --> 01:14:19,890
already doable yeah this is a create if

1429
01:14:17,760 --> 01:14:22,310
it doesn't already exist and you know

1430
01:14:19,890 --> 01:14:24,870
test and create if it doesn't exist I

1431
01:14:22,310 --> 01:14:26,940
think we already have that available

1432
01:14:24,870 --> 01:14:29,280
okay and just the notion that the thing

1433
01:14:26,940 --> 01:14:30,629
that you're trying to create as long as

1434
01:14:29,280 --> 01:14:32,130
there's some way to say the thing that

1435
01:14:30,630 --> 01:14:33,480
you're trying to create is this security

1436
01:14:32,130 --> 01:14:34,590
domain or some way to designate that's

1437
01:14:33,480 --> 01:14:36,900
what it means when going in to this

1438
01:14:34,590 --> 01:14:39,210
particular place on the device yeah I'd

1439
01:14:36,900 --> 01:14:40,950
like to talk with you a little bit more

1440
01:14:39,210 --> 01:14:42,510
offline on that but I think that we

1441
01:14:40,950 --> 01:14:46,470
already have that and if not it's an

1442
01:14:42,510 --> 01:14:47,640
easy add great okay number three and I'm

1443
01:14:46,470 --> 01:14:49,080
pretty sure this one isn't already there

1444
01:14:47,640 --> 01:14:51,300
because Brendon presented this at the

1445
01:14:49,080 --> 01:14:53,580
inter meeting but since it came up in T

1446
01:14:51,300 --> 01:14:56,540
we said the ability to update a file

1447
01:14:53,580 --> 01:14:59,190
that is not a binary executable

1448
01:14:56,540 --> 01:14:59,640
definitely have right that's my

1449
01:14:59,190 --> 01:15:02,969
understanding

1450
01:14:59,640 --> 01:15:05,400
yeah also this is why I'm here this is

1451
01:15:02,970 --> 01:15:07,680
bear the coast with extension and the

1452
01:15:05,400 --> 01:15:10,920
soup man if it's best cut to kicks and

1453
01:15:07,680 --> 01:15:13,470
basically if the manifested save is

1454
01:15:10,920 --> 01:15:16,620
somehow lacking some semantics there I

1455
01:15:13,470 --> 01:15:20,250
think it all can be added on by the root

1456
01:15:16,620 --> 01:15:21,780
cause with extension so my personal

1457
01:15:20,250 --> 01:15:23,700
belief was this is already there and

1458
01:15:21,780 --> 01:15:25,620
Brendan talked about this danger meeting

1459
01:15:23,700 --> 01:15:31,040
I just wanted to confirm okay and then

1460
01:15:25,620 --> 01:15:33,360
the last one is if a device has multiple

1461
01:15:31,040 --> 01:15:37,230
trusted execution environments say it

1462
01:15:33,360 --> 01:15:39,089
has you know SGA exit TPM and whatever

1463
01:15:37,230 --> 01:15:41,959
else attached or whatever then you can

1464
01:15:39,090 --> 01:15:44,790
indicate which one of those Hardware

1465
01:15:41,960 --> 01:15:48,210
places is where this binary should be

1466
01:15:44,790 --> 01:15:50,970
installed to so the this is the exact

1467
01:15:48,210 --> 01:15:52,350
intent of the component ID as long as

1468
01:15:50,970 --> 01:15:54,420
each of these can be identified by a

1469
01:15:52,350 --> 01:15:55,949
component ID that's the whole point of

1470
01:15:54,420 --> 01:15:59,129
it

1471
01:15:55,949 --> 01:16:00,568
the yeah so it's really is the component

1472
01:15:59,129 --> 01:16:01,919
ID sufficient to do that and hopefully

1473
01:16:00,569 --> 01:16:03,299
the answer is yes but we need to

1474
01:16:01,919 --> 01:16:05,760
actually test that these are all things

1475
01:16:03,299 --> 01:16:07,169
that if we think the answer is yes we

1476
01:16:05,760 --> 01:16:10,739
could actually use the hackathon to

1477
01:16:07,169 --> 01:16:13,829
actually verify that that the component

1478
01:16:10,739 --> 01:16:16,079
IDs should be what you use there that's

1479
01:16:13,829 --> 01:16:18,749
that's the whole point of it okay great

1480
01:16:16,079 --> 01:16:20,669
so it looks like we have maybe too easy

1481
01:16:18,749 --> 01:16:22,289
ads and two things that should already

1482
01:16:20,669 --> 01:16:23,599
be possible we just have to confirm and

1483
01:16:22,289 --> 01:16:25,619
it works great in an implementation

1484
01:16:23,599 --> 01:16:27,449
thank you that's my report out from the

1485
01:16:25,619 --> 01:16:29,848
chief working group sounds like we can

1486
01:16:27,449 --> 01:16:31,709
use it just fine and we should think

1487
01:16:29,849 --> 01:16:33,929
about we Brendan should think about

1488
01:16:31,709 --> 01:16:36,239
should we would it make sense to add a

1489
01:16:33,929 --> 01:16:38,609
use case template for ATP use case or

1490
01:16:36,239 --> 01:16:40,348
not how do we want absolutely okay all

1491
01:16:38,609 --> 01:16:43,489
right yeah I'd love to do that all right

1492
01:16:40,349 --> 01:16:43,489
great that's the end of my presentation

1493
01:17:00,899 --> 01:17:05,649
good afternoon everyone my name is saya

1494
01:17:03,999 --> 01:17:08,978
enjoy and I'm studying in some

1495
01:17:05,649 --> 01:17:11,050
university and this is my third time

1496
01:17:08,979 --> 01:17:13,749
participating in ITF then this is my

1497
01:17:11,050 --> 01:17:17,199
first first time giving a presentation

1498
01:17:13,749 --> 01:17:18,879
in ITF so my whole body parts are so

1499
01:17:17,199 --> 01:17:22,239
shivering right now but it's I wanted to

1500
01:17:18,879 --> 01:17:26,139
be at honor to stand here and this is my

1501
01:17:22,239 --> 01:17:28,739
first step of my work so uh any comments

1502
01:17:26,139 --> 01:17:31,329
or feedback sore it'd be so grateful so

1503
01:17:28,739 --> 01:17:33,820
today I'd like to discuss about a

1504
01:17:31,329 --> 01:17:38,349
distributed for suits architecture model

1505
01:17:33,820 --> 01:17:40,509
and the contents of today slightly

1506
01:17:38,349 --> 01:17:43,570
traditional suit architecture proposal

1507
01:17:40,510 --> 01:17:46,959
and next step so let's see the

1508
01:17:43,570 --> 01:17:49,929
traditional suit architecture first then

1509
01:17:46,959 --> 01:17:52,239
let me explain my proposal then my next

1510
01:17:49,929 --> 01:17:54,820
step so the traditional suit

1511
01:17:52,239 --> 01:17:55,388
architecture is adopting client-server

1512
01:17:54,820 --> 01:17:57,909
model

1513
01:17:55,389 --> 01:18:00,159
so apparently manifests and firmware

1514
01:17:57,909 --> 01:18:03,759
images are downloaded from firmware

1515
01:18:00,159 --> 01:18:05,530
servers so the picture on the right side

1516
01:18:03,760 --> 01:18:09,489
of my slide is exactly from the

1517
01:18:05,530 --> 01:18:12,969
architecture stretched of suit and there

1518
01:18:09,489 --> 01:18:17,320
is a server in between author and former

1519
01:18:12,969 --> 01:18:19,719
consumer but that client-server model

1520
01:18:17,320 --> 01:18:22,808
which is which has centralized

1521
01:18:19,719 --> 01:18:26,979
architecture can cause overhead on

1522
01:18:22,809 --> 01:18:30,399
servers and that overhead occur update

1523
01:18:26,979 --> 01:18:32,859
failures and also servers can be

1524
01:18:30,399 --> 01:18:36,429
targeted because of that centralized

1525
01:18:32,859 --> 01:18:38,229
management and other Authority so it can

1526
01:18:36,429 --> 01:18:41,829
be targeted by an attacker for using an

1527
01:18:38,229 --> 01:18:44,109
attack and plus we'd like to define a

1528
01:18:41,829 --> 01:18:47,259
new issue called author disappearing

1529
01:18:44,109 --> 01:18:50,739
issue which is literally happens when an

1530
01:18:47,260 --> 01:18:52,659
other authors disappeared so if authors

1531
01:18:50,739 --> 01:18:54,280
disappeared for Amir's consumers who

1532
01:18:52,659 --> 01:18:57,820
have not yet updated to the latest

1533
01:18:54,280 --> 01:18:59,919
version cannot catch up so let me

1534
01:18:57,820 --> 01:19:03,688
illustrate the author disappearing issue

1535
01:18:59,919 --> 01:19:06,939
more specifically within scenario so

1536
01:19:03,689 --> 01:19:10,090
maintenance of servers as dependent on

1537
01:19:06,939 --> 01:19:10,940
the author's management like for example

1538
01:19:10,090 --> 01:19:13,750
for

1539
01:19:10,940 --> 01:19:16,309
short period work for a long period

1540
01:19:13,750 --> 01:19:18,199
others could be disappeared because of a

1541
01:19:16,310 --> 01:19:21,290
bankrupt war an attack by an attacker

1542
01:19:18,199 --> 01:19:23,780
and for that period they cannot manage

1543
01:19:21,290 --> 01:19:26,420
their servers and servers have begun

1544
01:19:23,780 --> 01:19:28,610
after that so if servers are unavailable

1545
01:19:26,420 --> 01:19:32,180
of course that data is are unavailable -

1546
01:19:28,610 --> 01:19:35,530
so in that case when firmware version

1547
01:19:32,180 --> 01:19:38,410
4.0 is uploaded by Ana thought there

1548
01:19:35,530 --> 01:19:41,300
then status tracker giving notice to a

1549
01:19:38,410 --> 01:19:44,000
consumer that they have to get updates

1550
01:19:41,300 --> 01:19:47,690
and after that in case of former version

1551
01:19:44,000 --> 01:19:52,610
4 it can be update updated completely

1552
01:19:47,690 --> 01:19:55,870
but in case of former version 5 if other

1553
01:19:52,610 --> 01:20:00,049
disappeared after they uploaded

1554
01:19:55,870 --> 01:20:02,150
consumers cannot download the tuxedo

1555
01:20:00,050 --> 01:20:04,280
manifests were from our images from the

1556
01:20:02,150 --> 01:20:09,259
servers because servers have begun so

1557
01:20:04,280 --> 01:20:11,750
they cannot get the files so to sum up

1558
01:20:09,260 --> 01:20:13,550
the shortcomings of current state

1559
01:20:11,750 --> 01:20:16,040
architecture because it's adopting

1560
01:20:13,550 --> 01:20:17,600
traditional client-server model it can

1561
01:20:16,040 --> 01:20:21,110
also with an author disappearing issue

1562
01:20:17,600 --> 01:20:23,900
and I am suggesting that blockchain can

1563
01:20:21,110 --> 01:20:26,239
solve the shortcomings because its

1564
01:20:23,900 --> 01:20:28,639
provides distributed storage for

1565
01:20:26,239 --> 01:20:31,459
manifests and for mirror image files and

1566
01:20:28,640 --> 01:20:33,830
it provides irreversibility for

1567
01:20:31,460 --> 01:20:36,800
manifests and from our image files which

1568
01:20:33,830 --> 01:20:39,050
means this data is stored in blockchain

1569
01:20:36,800 --> 01:20:44,150
can are not going to be erased where

1570
01:20:39,050 --> 01:20:48,380
changed so in case of blockchain

1571
01:20:44,150 --> 01:20:51,259
supplied on the on the architecture when

1572
01:20:48,380 --> 01:20:54,620
from original five is a loaded by not

1573
01:20:51,260 --> 01:20:58,670
there and on the blockchain and even if

1574
01:20:54,620 --> 01:21:01,160
after authors disappeared like consumers

1575
01:20:58,670 --> 01:21:04,760
can still download that files because

1576
01:21:01,160 --> 01:21:08,860
lock chain is still gonna store that

1577
01:21:04,760 --> 01:21:13,940
data even after the authors disappeared

1578
01:21:08,860 --> 01:21:18,170
so my proposed architecture is just like

1579
01:21:13,940 --> 01:21:20,989
this and former server in original

1580
01:21:18,170 --> 01:21:24,020
architecture it be changed to blockchain

1581
01:21:20,989 --> 01:21:24,769
and it's gonna have distributed storage

1582
01:21:24,020 --> 01:21:27,290
and

1583
01:21:24,770 --> 01:21:29,060
that is gonna be your irreversible and

1584
01:21:27,290 --> 01:21:33,860
it's gonna provide high availability and

1585
01:21:29,060 --> 01:21:36,770
high reliability and to solve bottleneck

1586
01:21:33,860 --> 01:21:39,410
problem can be awkward and bulging

1587
01:21:36,770 --> 01:21:42,010
Network we decided to have registration

1588
01:21:39,410 --> 01:21:45,070
notes and retrieval notes and

1589
01:21:42,010 --> 01:21:47,870
registering registration notes are which

1590
01:21:45,070 --> 01:21:51,530
process the note registrations based on

1591
01:21:47,870 --> 01:21:53,450
IP so when authors wants to upload their

1592
01:21:51,530 --> 01:21:55,719
primary work from our images were

1593
01:21:53,450 --> 01:21:58,070
manifest files on the blockchain

1594
01:21:55,720 --> 01:22:02,290
registration notes will register the

1595
01:21:58,070 --> 01:22:07,099
files based on your eyes IP and

1596
01:22:02,290 --> 01:22:10,580
retrieval notes are going to retrieve

1597
01:22:07,100 --> 01:22:16,220
retrieve the IP where URI when from your

1598
01:22:10,580 --> 01:22:18,440
consumers once or download the files so

1599
01:22:16,220 --> 01:22:21,020
there are public private consortium

1600
01:22:18,440 --> 01:22:24,410
platforms in blockchain and private

1601
01:22:21,020 --> 01:22:27,860
because of public public blockchain

1602
01:22:24,410 --> 01:22:30,019
platforms as the aspects of public

1603
01:22:27,860 --> 01:22:34,099
launching platform is that everyone is

1604
01:22:30,020 --> 01:22:38,030
opened to read or write data so there's

1605
01:22:34,100 --> 01:22:40,960
a high risk of attack so private or

1606
01:22:38,030 --> 01:22:45,500
consortium platforms would be better to

1607
01:22:40,960 --> 01:22:52,850
use in this architecture so for large

1608
01:22:45,500 --> 01:22:54,320
companies producing IT devices I have a

1609
01:22:52,850 --> 01:22:59,710
question but I'll gladly defer to

1610
01:22:54,320 --> 01:23:02,599
Brendan first yeah this one this page

1611
01:22:59,710 --> 01:23:05,350
sorry I was actually just gonna wait

1612
01:23:02,600 --> 01:23:08,750
till the end that that's okay keep going

1613
01:23:05,350 --> 01:23:11,000
okay so for large companies producing

1614
01:23:08,750 --> 01:23:14,380
IOT devices and have it be better to

1615
01:23:11,000 --> 01:23:18,170
have private blockchain platform because

1616
01:23:14,380 --> 01:23:20,240
if because they have much power than

1617
01:23:18,170 --> 01:23:21,950
other small companies so it'd be better

1618
01:23:20,240 --> 01:23:24,889
to have their own system to manage them

1619
01:23:21,950 --> 01:23:26,929
and small medium enterprises with higher

1620
01:23:24,890 --> 01:23:29,090
possibility of other disappearing issues

1621
01:23:26,930 --> 01:23:32,480
it better to have consortium blockchain

1622
01:23:29,090 --> 01:23:34,910
platform because even if they have

1623
01:23:32,480 --> 01:23:38,030
disappeared other disappear issue the

1624
01:23:34,910 --> 01:23:38,539
nodes connected to that enterprise could

1625
01:23:38,030 --> 01:23:40,250
be

1626
01:23:38,539 --> 01:23:43,039
connected to other enterprises that

1627
01:23:40,250 --> 01:23:48,019
managed together so yeah this are two

1628
01:23:43,039 --> 01:23:51,079
architectures that can be adopted so the

1629
01:23:48,019 --> 01:23:53,599
question was yes my question is this is

1630
01:23:51,079 --> 01:23:55,969
Dave Walter Meyer my questions on this

1631
01:23:53,599 --> 01:23:57,469
this model so earlier when you were

1632
01:23:55,969 --> 01:24:01,340
presenting I was wondering you know

1633
01:23:57,469 --> 01:24:03,019
who's gonna host this blockchain yeah so

1634
01:24:01,340 --> 01:24:05,719
for large companies are you envisioning

1635
01:24:03,019 --> 01:24:07,519
that that would be used in a case where

1636
01:24:05,719 --> 01:24:09,260
different parties were authoring

1637
01:24:07,519 --> 01:24:11,630
software for the devices that those

1638
01:24:09,260 --> 01:24:13,730
large companies are producing or were

1639
01:24:11,630 --> 01:24:16,489
the large company be the author because

1640
01:24:13,730 --> 01:24:17,869
if the use case is to to protect against

1641
01:24:16,489 --> 01:24:19,308
the author disappearing if they're

1642
01:24:17,869 --> 01:24:23,449
hosting their own blockchain it'll

1643
01:24:19,309 --> 01:24:26,599
probably disappear yeah actually the

1644
01:24:23,449 --> 01:24:29,268
notes constituting the blockchain it'd

1645
01:24:26,599 --> 01:24:32,750
be not only authors but it'd be

1646
01:24:29,269 --> 01:24:36,710
participants who want to be that well

1647
01:24:32,750 --> 01:24:40,760
notes of the blockchain so there there

1648
01:24:36,710 --> 01:24:44,239
should be a Ellis management of author

1649
01:24:40,760 --> 01:24:47,179
but participants normal participants

1650
01:24:44,239 --> 01:24:49,039
users gonna have that data too because

1651
01:24:47,179 --> 01:24:50,780
they're gonna be the users and that's

1652
01:24:49,039 --> 01:24:52,909
much clearer in the consortium case

1653
01:24:50,780 --> 01:24:54,980
where you know a bunch of authors and

1654
01:24:52,909 --> 01:24:57,888
consumers can band together and and host

1655
01:24:54,980 --> 01:25:01,909
the you know the necessary nudes that's

1656
01:24:57,889 --> 01:25:10,849
that's the idea there right yeah yeah

1657
01:25:01,909 --> 01:25:13,670
okay Brendan isn't me okay so can you go

1658
01:25:10,849 --> 01:25:19,760
back to slide 5 please just like fine

1659
01:25:13,670 --> 01:25:21,380
yep okay so I'm I'm a little unclear on

1660
01:25:19,760 --> 01:25:23,960
what's happened after the authors

1661
01:25:21,380 --> 01:25:25,989
disappeared why is the server or the

1662
01:25:23,960 --> 01:25:30,559
firmware server no longer responding

1663
01:25:25,989 --> 01:25:32,750
because a the disappear point

1664
01:25:30,559 --> 01:25:37,610
disappearance point of former server it

1665
01:25:32,750 --> 01:25:41,179
be a immediate or a few few days after

1666
01:25:37,610 --> 01:25:45,768
or but the point is that servers should

1667
01:25:41,179 --> 01:25:47,719
be managed by an author and ok so the

1668
01:25:45,769 --> 01:25:50,719
idea here is that the server is

1669
01:25:47,719 --> 01:25:51,910
manufactured by the author or is managed

1670
01:25:50,719 --> 01:25:54,850
by the author I mean

1671
01:25:51,910 --> 01:25:56,920
yeah like they had me for the cost of

1672
01:25:54,850 --> 01:25:58,270
managing them we're okay right okay

1673
01:25:56,920 --> 01:26:01,390
understood

1674
01:25:58,270 --> 01:26:04,590
so suit was designed for the for use

1675
01:26:01,390 --> 01:26:06,850
with content distribution networks

1676
01:26:04,590 --> 01:26:10,060
specifically untrusted content

1677
01:26:06,850 --> 01:26:13,780
distribution networks yes and that was

1678
01:26:10,060 --> 01:26:16,120
the intent from the very beginning would

1679
01:26:13,780 --> 01:26:19,090
you say that a blockchain would

1680
01:26:16,120 --> 01:26:22,570
constitute an untrusted content

1681
01:26:19,090 --> 01:26:26,460
distribution network ah yes because yeah

1682
01:26:22,570 --> 01:26:30,490
blockchain works under it based under

1683
01:26:26,460 --> 01:26:35,100
location works based promise trolls and

1684
01:26:30,490 --> 01:26:38,980
just like servers get a servers get

1685
01:26:35,100 --> 01:26:40,590
certificates it data just like just same

1686
01:26:38,980 --> 01:26:43,450
things happen in blockchain because

1687
01:26:40,590 --> 01:26:46,420
notes are gonna can't make get consent

1688
01:26:43,450 --> 01:26:49,389
notes are gonna give consensus on only

1689
01:26:46,420 --> 01:26:52,690
data that have authorized wave

1690
01:26:49,390 --> 01:26:56,020
certificates so then it sounds to me

1691
01:26:52,690 --> 01:26:59,849
like the existing suit architecture

1692
01:26:56,020 --> 01:26:59,850
actually already is compatible with us

1693
01:27:00,510 --> 01:27:05,680
because if we if we say that blockchain

1694
01:27:04,000 --> 01:27:09,070
is an untrusted content distribution

1695
01:27:05,680 --> 01:27:11,380
network which we just did then I would

1696
01:27:09,070 --> 01:27:12,670
say that since suit is designed to work

1697
01:27:11,380 --> 01:27:13,570
with untrusted content distribution

1698
01:27:12,670 --> 01:27:16,960
networks

1699
01:27:13,570 --> 01:27:20,019
we're already with there we're good

1700
01:27:16,960 --> 01:27:24,190
[Music]

1701
01:27:20,020 --> 01:27:28,420
if there's a efficiency of explaining

1702
01:27:24,190 --> 01:27:31,540
the beneficent beneficials of blockchain

1703
01:27:28,420 --> 01:27:35,020
then I think I have to explain it more

1704
01:27:31,540 --> 01:27:36,940
specifically by mailing this okay the

1705
01:27:35,020 --> 01:27:39,010
other question I had is how does an

1706
01:27:36,940 --> 01:27:43,030
offer handle it and three people at the

1707
01:27:39,010 --> 01:27:45,190
my client and Brendan's point is that he

1708
01:27:43,030 --> 01:27:48,000
thinks that the the blockchain can

1709
01:27:45,190 --> 01:27:58,750
simply be a URL like any other URL

1710
01:27:48,000 --> 01:28:00,580
that's his point yeah you mean yeah the

1711
01:27:58,750 --> 01:28:04,470
blockchain is gonna store the manifest

1712
01:28:00,580 --> 01:28:04,470
files and many festivals or

1713
01:28:04,960 --> 01:28:15,010
store distributed Li and your eyes got

1714
01:28:07,420 --> 01:28:18,160
containing that many Fitness well yeah

1715
01:28:15,010 --> 01:28:22,300
yeah still watching can give integrity

1716
01:28:18,160 --> 01:28:24,820
and irreversibility for their that that

1717
01:28:22,300 --> 01:28:26,500
that is okay let's go through the rest

1718
01:28:24,820 --> 01:28:27,759
of my Klein please keep your comments

1719
01:28:26,500 --> 01:28:29,650
short because we only have a couple

1720
01:28:27,760 --> 01:28:33,910
minutes left let's go ahead Michael

1721
01:28:29,650 --> 01:28:36,580
Richardson so um I I like this I I like

1722
01:28:33,910 --> 01:28:38,650
the concept that that the firmware is

1723
01:28:36,580 --> 01:28:42,430
distributed independently of the authors

1724
01:28:38,650 --> 01:28:44,019
and there's a number of groups the the

1725
01:28:42,430 --> 01:28:46,390
secure home gateway project is here labs

1726
01:28:44,020 --> 01:28:47,710
actually wanted to have exactly that we

1727
01:28:46,390 --> 01:28:49,270
wanted to collect all of the firmware

1728
01:28:47,710 --> 01:28:51,130
from all the devices that we've ever

1729
01:28:49,270 --> 01:28:52,810
seen specifically for the author

1730
01:28:51,130 --> 01:28:54,400
disappearing case and you didn't update

1731
01:28:52,810 --> 01:28:56,770
the latest thing before they went away

1732
01:28:54,400 --> 01:28:59,349
and so this is really interesting and I

1733
01:28:56,770 --> 01:29:02,620
think that a little bit I have very

1734
01:28:59,350 --> 01:29:04,690
pessimistic views of blockchain but the

1735
01:29:02,620 --> 01:29:07,390
one advantage is that stuff is hard to

1736
01:29:04,690 --> 01:29:09,250
delete from it and so you can't take

1737
01:29:07,390 --> 01:29:10,930
things back because you you know you

1738
01:29:09,250 --> 01:29:13,480
didn't want you didn't mean to release

1739
01:29:10,930 --> 01:29:14,470
that version that get people whatever so

1740
01:29:13,480 --> 01:29:16,750
I think that's a really interesting

1741
01:29:14,470 --> 01:29:18,430
thing I do have some questions as to

1742
01:29:16,750 --> 01:29:19,840
what the incentives to verify the

1743
01:29:18,430 --> 01:29:24,520
blockchain for the various participants

1744
01:29:19,840 --> 01:29:25,960
are I think in the the shd case we would

1745
01:29:24,520 --> 01:29:29,050
be quite interested in verifying that

1746
01:29:25,960 --> 01:29:30,970
the blockchain for free okay maybe

1747
01:29:29,050 --> 01:29:34,090
others don't would need an incentive but

1748
01:29:30,970 --> 01:29:36,070
I think that that's that's why my major

1749
01:29:34,090 --> 01:29:38,200
usually problem with locked chain is why

1750
01:29:36,070 --> 01:29:40,059
would I care right and so I think in

1751
01:29:38,200 --> 01:29:41,559
this case there's some value and and

1752
01:29:40,060 --> 01:29:44,140
finally I think it's reasonable that

1753
01:29:41,560 --> 01:29:47,040
quite a number of entities hospitals for

1754
01:29:44,140 --> 01:29:50,500
instance will be quite willing to run a

1755
01:29:47,040 --> 01:29:53,650
the server a couple of devices inside

1756
01:29:50,500 --> 01:29:55,540
that have external connectivity to talk

1757
01:29:53,650 --> 01:29:57,490
to the rest of the blockchain but also

1758
01:29:55,540 --> 01:29:58,660
have internal connectivity to track to a

1759
01:29:57,490 --> 01:30:00,820
whole bunch of devices which they

1760
01:29:58,660 --> 01:30:03,160
otherwise don't let out on the Internet

1761
01:30:00,820 --> 01:30:05,320
and so I think that's a useful thing and

1762
01:30:03,160 --> 01:30:07,150
it's just a distributed cache that's

1763
01:30:05,320 --> 01:30:11,230
cool thank you

1764
01:30:07,150 --> 01:30:13,150
so we're officially out of time but we

1765
01:30:11,230 --> 01:30:14,769
could take like if these are very short

1766
01:30:13,150 --> 01:30:17,110
comments we'll take them now I'll go

1767
01:30:14,770 --> 01:30:18,929
fast first of all you're doing a great

1768
01:30:17,110 --> 01:30:25,598
job for your first IETF present a

1769
01:30:18,929 --> 01:30:27,999
indeed I wanna I want to I want to agree

1770
01:30:25,599 --> 01:30:29,650
with what Brendan and Michael said so

1771
01:30:27,999 --> 01:30:31,239
this kind of things been done before it

1772
01:30:29,650 --> 01:30:32,679
reminds me of like distributed file

1773
01:30:31,239 --> 01:30:35,259
systems over blockchain like

1774
01:30:32,679 --> 01:30:37,809
interplanetary file system stuff like

1775
01:30:35,260 --> 01:30:40,869
that it's currently in use for for stuff

1776
01:30:37,809 --> 01:30:44,769
just like this for maintaining immutable

1777
01:30:40,869 --> 01:30:46,780
files on a distributed file system using

1778
01:30:44,769 --> 01:30:48,219
it for suit is cool and there are some

1779
01:30:46,780 --> 01:30:50,978
use cases where you could actually do

1780
01:30:48,219 --> 01:30:53,380
that I don't think that we would need to

1781
01:30:50,979 --> 01:30:56,050
make any changes to suit to support this

1782
01:30:53,380 --> 01:30:58,749
I think that you could just take suit

1783
01:30:56,050 --> 01:31:00,820
and just distribute it over a

1784
01:30:58,749 --> 01:31:02,019
distributed file system like this and

1785
01:31:00,820 --> 01:31:03,579
you're good to go so I don't think you

1786
01:31:02,019 --> 01:31:06,269
need to make any changes here but it's

1787
01:31:03,579 --> 01:31:10,630
an interesting project

1788
01:31:06,269 --> 01:31:14,139
this is honest I was wondering about one

1789
01:31:10,630 --> 01:31:19,110
thing which you may not have addressed

1790
01:31:14,139 --> 01:31:23,079
yet is if you if there also disappears

1791
01:31:19,110 --> 01:31:25,929
the other problem is what happens with

1792
01:31:23,079 --> 01:31:29,049
the keys because the the manifest needs

1793
01:31:25,929 --> 01:31:31,420
to be verified so that also has the

1794
01:31:29,050 --> 01:31:32,769
private key and unless he makes that

1795
01:31:31,420 --> 01:31:34,570
available to someone else

1796
01:31:32,769 --> 01:31:37,690
you're not going to get any updates in

1797
01:31:34,570 --> 01:31:43,869
the future anymore which could be could

1798
01:31:37,690 --> 01:31:46,360
be a problem I think that should be more

1799
01:31:43,869 --> 01:31:50,409
disguised myself so I think we're gonna

1800
01:31:46,360 --> 01:31:52,209
have to take this offline I'm are you

1801
01:31:50,409 --> 01:31:55,659
available afterwards to answer any

1802
01:31:52,209 --> 01:31:58,539
questions so I think what that we'll

1803
01:31:55,659 --> 01:31:59,829
have to you know to close the the

1804
01:31:58,539 --> 01:32:05,320
working group meeting thank you we'll

1805
01:31:59,829 --> 01:32:08,259
see you next time in Madrid if you

1806
01:32:05,320 --> 01:32:09,209
haven't signed the blue sheets please

1807
01:32:08,260 --> 01:32:12,840
come up here

1808
01:32:09,209 --> 01:32:12,840
for the blue sheets now

