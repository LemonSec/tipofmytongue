1
00:00:12,120 --> 00:00:15,200
[Music]

2
00:00:34,200 --> 00:00:37,299
[Music]

3
00:00:41,879 --> 00:00:58,349
okay thank you all right it's time hello

4
00:00:56,350 --> 00:01:03,160
everybody welcome to the extra session

5
00:00:58,350 --> 00:01:10,140
at IH f 106 let me just pull up the

6
00:01:03,160 --> 00:01:10,140
jabber room and let's get started

7
00:01:11,040 --> 00:01:15,640
everyone of course knows our note well

8
00:01:13,590 --> 00:01:18,610
I've got a few more people and we did

9
00:01:15,640 --> 00:01:20,890
the last session you we've all seen this

10
00:01:18,610 --> 00:01:25,150
before it basically says behave well

11
00:01:20,890 --> 00:01:27,340
blush its run their way around and there

12
00:01:25,150 --> 00:01:32,280
are some IPR considerations so no

13
00:01:27,340 --> 00:01:35,200
submarining us with information later

14
00:01:32,280 --> 00:01:37,990
this is the rough agenda that I've put

15
00:01:35,200 --> 00:01:40,600
together does anyone have anything I

16
00:01:37,990 --> 00:01:43,869
want to add or revise on this before we

17
00:01:40,600 --> 00:01:46,809
get started I don't see anyone jumping

18
00:01:43,869 --> 00:01:50,560
up so let's dive straight into a fetch

19
00:01:46,810 --> 00:01:54,159
preview the big area of discussion here

20
00:01:50,560 --> 00:01:55,659
is about the extension mechanism whether

21
00:01:54,159 --> 00:01:58,509
anyone's actually going to use the

22
00:01:55,659 --> 00:02:00,310
extension mechanism that's there and the

23
00:01:58,509 --> 00:02:02,439
options are roughly either keep what's

24
00:02:00,310 --> 00:02:04,750
there it works or removes the

25
00:02:02,439 --> 00:02:08,380
extensibility now and we can always add

26
00:02:04,750 --> 00:02:13,990
in a preview with more complexity if we

27
00:02:08,380 --> 00:02:15,940
need that later I think who was very

28
00:02:13,990 --> 00:02:18,330
other one with thee to discuss on this

29
00:02:15,940 --> 00:02:18,329
so

30
00:02:24,970 --> 00:02:32,750
so my contention on this is that the

31
00:02:29,450 --> 00:02:36,170
client can't possibly have any idea what

32
00:02:32,750 --> 00:02:39,019
the best way to get a preview of a

33
00:02:36,170 --> 00:02:42,170
document that lives on the server the

34
00:02:39,019 --> 00:02:44,269
only possible place the knot that

35
00:02:42,170 --> 00:02:47,089
knowledge could exist if it does at all

36
00:02:44,269 --> 00:02:50,480
is on the server side and I think having

37
00:02:47,090 --> 00:02:53,569
the client say use this algorithm to do

38
00:02:50,480 --> 00:02:55,849
your preview is pointless I would rather

39
00:02:53,569 --> 00:02:58,250
just have the client say give me a

40
00:02:55,849 --> 00:03:00,619
preview and have the server figure out

41
00:02:58,250 --> 00:03:02,840
the best way to do that and I think

42
00:03:00,620 --> 00:03:04,819
that's what makes sense it simplifies

43
00:03:02,840 --> 00:03:07,250
the protocol and it simplifies the

44
00:03:04,819 --> 00:03:10,099
implementation and then the server can

45
00:03:07,250 --> 00:03:13,370
know whether it's a text or a video or

46
00:03:10,099 --> 00:03:15,109
an audio part or a JPEG or whatever it

47
00:03:13,370 --> 00:03:17,840
is and do what it needs to do to make

48
00:03:15,110 --> 00:03:20,780
some sense out of it does anyone think

49
00:03:17,840 --> 00:03:22,400
that's not the right answer other than

50
00:03:20,780 --> 00:03:24,950
Michael that Michael and I have been

51
00:03:22,400 --> 00:03:27,079
going back and forth okay so Michael can

52
00:03:24,950 --> 00:03:32,630
give you now his view on on the same

53
00:03:27,079 --> 00:03:40,700
thing and then we could discuss it you

54
00:03:32,630 --> 00:03:44,420
guys yep look at this the same way I

55
00:03:40,700 --> 00:03:46,850
will say that everybody internally feels

56
00:03:44,420 --> 00:03:49,040
the same way that I do where we don't

57
00:03:46,850 --> 00:03:52,069
see how if you're looking at this from a

58
00:03:49,040 --> 00:03:54,709
client author perspective a client

59
00:03:52,069 --> 00:03:58,100
author has certain ways that they can

60
00:03:54,709 --> 00:04:01,819
show information to the user it's the

61
00:03:58,100 --> 00:04:05,540
client job is to make that user user

62
00:04:01,819 --> 00:04:07,010
interface determination if all of a

63
00:04:05,540 --> 00:04:09,380
sudden it starts getting information

64
00:04:07,010 --> 00:04:11,060
from a server or but it has no idea how

65
00:04:09,380 --> 00:04:12,560
to handle this is completely worthless

66
00:04:11,060 --> 00:04:15,980
this is not something that we would ever

67
00:04:12,560 --> 00:04:19,789
implement this adds a whole ton of

68
00:04:15,980 --> 00:04:21,649
complexity we feel because all we're all

69
00:04:19,789 --> 00:04:25,430
are saying here is you know this is a

70
00:04:21,649 --> 00:04:27,260
simple you know I'm a client here is

71
00:04:25,430 --> 00:04:28,870
what I want I want to in this particular

72
00:04:27,260 --> 00:04:31,719
case the one that we

73
00:04:28,870 --> 00:04:34,750
the one extension that we've defined is

74
00:04:31,720 --> 00:04:36,580
a tax-free you know because I'm as a

75
00:04:34,750 --> 00:04:39,639
client that's the one thing I could do I

76
00:04:36,580 --> 00:04:41,380
do have you know since that we last

77
00:04:39,639 --> 00:04:44,020
talked I've actually talked with several

78
00:04:41,380 --> 00:04:48,610
customers who keep asking me about image

79
00:04:44,020 --> 00:04:52,060
previews as but they also want to stress

80
00:04:48,610 --> 00:04:54,160
to me personally that they don't want

81
00:04:52,060 --> 00:04:56,980
that they want the option to have both a

82
00:04:54,160 --> 00:04:58,240
text preview and an image preview and

83
00:04:56,980 --> 00:05:00,010
those are separate that should not be

84
00:04:58,240 --> 00:05:02,950
part of the same sort of preview because

85
00:05:00,010 --> 00:05:05,320
they want to be able to choose that's

86
00:05:02,950 --> 00:05:08,110
that's my one minute pitch I think it's

87
00:05:05,320 --> 00:05:13,780
back and very probably that that's more

88
00:05:08,110 --> 00:05:16,810
information than I had before I think I

89
00:05:13,780 --> 00:05:20,169
misunderstand maybe your use case the

90
00:05:16,810 --> 00:05:23,830
use case that I've see for this is I'm

91
00:05:20,169 --> 00:05:27,010
looking at my messages in in my inbox

92
00:05:23,830 --> 00:05:29,200
and I see a list with subject and

93
00:05:27,010 --> 00:05:31,450
whatever and you have a preview by them

94
00:05:29,200 --> 00:05:33,849
like Gmail does for me it gives me the

95
00:05:31,450 --> 00:05:37,539
first couple of lines of the message if

96
00:05:33,850 --> 00:05:39,280
that's your use case then what I'm

97
00:05:37,539 --> 00:05:41,380
saying is the only thing that makes

98
00:05:39,280 --> 00:05:45,450
sense to me but if you have a different

99
00:05:41,380 --> 00:05:47,950
use case from that then maybe we have

100
00:05:45,450 --> 00:05:49,630
maybe I can see why we're looking at it

101
00:05:47,950 --> 00:05:51,400
differently Aleksei is just stepped in

102
00:05:49,630 --> 00:05:53,830
yeah I like see quite a frank question

103
00:05:51,400 --> 00:05:55,929
so when you say image preview what do

104
00:05:53,830 --> 00:05:58,659
you mean by that do you mean image

105
00:05:55,930 --> 00:06:02,380
transcribed into text or do you mean a

106
00:05:58,660 --> 00:06:04,090
simplified image no I mean like a idea

107
00:06:02,380 --> 00:06:08,219
that's making a full-size image and

108
00:06:04,090 --> 00:06:08,219
making it to some small representation

109
00:06:08,250 --> 00:06:15,580
that that sort of preview alright don't

110
00:06:11,680 --> 00:06:17,530
think that's what's in the document know

111
00:06:15,580 --> 00:06:19,359
if that's not there is no image preview

112
00:06:17,530 --> 00:06:25,450
in the document now we're just looking

113
00:06:19,360 --> 00:06:30,310
at that as a future use case for it hi

114
00:06:25,450 --> 00:06:32,229
yeah I think this is Neil Jenkins I have

115
00:06:30,310 --> 00:06:34,030
two questions so firstly he said you've

116
00:06:32,229 --> 00:06:36,340
got customers asking you for these image

117
00:06:34,030 --> 00:06:37,690
previews great so we got a use case what

118
00:06:36,340 --> 00:06:40,450
are those customers what do they want to

119
00:06:37,690 --> 00:06:42,430
do with it and then secondly from the

120
00:06:40,450 --> 00:06:42,729
sound of it what you actually want with

121
00:06:42,430 --> 00:06:44,530
the

122
00:06:42,729 --> 00:06:47,860
is for the client to tell the server I'm

123
00:06:44,530 --> 00:06:50,559
prepared to accept previews of type text

124
00:06:47,860 --> 00:06:51,939
/ plain and possibly being able to put

125
00:06:50,560 --> 00:06:53,469
image flash pindy or whatever mine

126
00:06:51,939 --> 00:06:54,580
choice they want to accept almost all

127
00:06:53,469 --> 00:06:55,719
male clients will just be text slash

128
00:06:54,580 --> 00:06:57,370
claim and maybe some other things do

129
00:06:55,719 --> 00:06:59,199
something else and then the server will

130
00:06:57,370 --> 00:07:00,699
turn whichever one of those it has

131
00:06:59,199 --> 00:07:03,699
available probably even in preference

132
00:07:00,699 --> 00:07:06,879
order the client gives it yeah I think I

133
00:07:03,699 --> 00:07:09,159
think I like Lee yeah basically was

134
00:07:06,879 --> 00:07:16,210
saying it looks like you want different

135
00:07:09,159 --> 00:07:20,259
media types yeah right side effect of

136
00:07:16,210 --> 00:07:25,049
media type selection it almost sounds

137
00:07:20,259 --> 00:07:25,050
like HTTP except sort of header that's

138
00:07:26,219 --> 00:07:32,770
yeah the first part of let me answer

139
00:07:30,370 --> 00:07:34,779
your first part first Neal there's

140
00:07:32,770 --> 00:07:38,289
actually two different use cases that

141
00:07:34,779 --> 00:07:40,180
have come up one is in general you know

142
00:07:38,289 --> 00:07:41,650
we have some customers that want to have

143
00:07:40,180 --> 00:07:43,330
like a portal you know they have their

144
00:07:41,650 --> 00:07:45,370
own portal they want to show three

145
00:07:43,330 --> 00:07:47,560
messages and they don't want to show

146
00:07:45,370 --> 00:07:49,270
text for messages necessarily they have

147
00:07:47,560 --> 00:07:52,719
like a photograph I did rather show a

148
00:07:49,270 --> 00:07:54,490
photograph potentially you know this

149
00:07:52,719 --> 00:07:56,349
isn't a you know they don't have a

150
00:07:54,490 --> 00:07:57,729
defined use case but it's definitely one

151
00:07:56,349 --> 00:07:59,139
of the ideas that they have because

152
00:07:57,729 --> 00:08:00,639
that's a more interesting thing for a

153
00:07:59,139 --> 00:08:03,310
customer looking at when they're looking

154
00:08:00,639 --> 00:08:05,110
at a portal rather than you know Grandma

155
00:08:03,310 --> 00:08:07,900
send you a photograph rather than you

156
00:08:05,110 --> 00:08:09,699
know some sort of text another option is

157
00:08:07,900 --> 00:08:13,150
part of art the chat work that we're

158
00:08:09,699 --> 00:08:17,020
doing some of these chat messages will

159
00:08:13,150 --> 00:08:19,359
come already embedded with a because the

160
00:08:17,020 --> 00:08:20,889
chat message itself was encrypted but I

161
00:08:19,360 --> 00:08:23,469
guess this is the way that whatsapp does

162
00:08:20,889 --> 00:08:26,849
it is they take the image and they they

163
00:08:23,469 --> 00:08:29,770
send a very very very blurred

164
00:08:26,849 --> 00:08:31,750
representation of that image and that's

165
00:08:29,770 --> 00:08:33,039
the thing that you know as a preview

166
00:08:31,750 --> 00:08:35,049
because that's that's what you're going

167
00:08:33,039 --> 00:08:36,189
to preview to the user and then users

168
00:08:35,049 --> 00:08:38,380
going to click on that image and it

169
00:08:36,190 --> 00:08:40,209
actually will load the full image so

170
00:08:38,380 --> 00:08:42,669
those are two potential use use cases

171
00:08:40,208 --> 00:08:45,550
and there's a per that last one is a

172
00:08:42,669 --> 00:08:47,800
perfect example of where I think the

173
00:08:45,550 --> 00:08:51,599
current mechanism of specifying

174
00:08:47,800 --> 00:08:54,130
algorithms doesn't work because the

175
00:08:51,600 --> 00:08:56,260
there's the case where you have all you

176
00:08:54,130 --> 00:08:58,030
have is a JPEG and maybe it's

177
00:08:56,260 --> 00:09:00,069
this enormous JPEG and you want the

178
00:08:58,030 --> 00:09:03,160
server to transcode it into some small

179
00:09:00,070 --> 00:09:06,580
JPEG to send as a preview the other is

180
00:09:03,160 --> 00:09:08,500
where you have an encrypted JPEG along

181
00:09:06,580 --> 00:09:10,360
with an unencrypted blurred version of

182
00:09:08,500 --> 00:09:12,190
it and you want the server to return the

183
00:09:10,360 --> 00:09:14,200
unencrypted blurred version from the

184
00:09:12,190 --> 00:09:17,290
clients point of view in both cases it's

185
00:09:14,200 --> 00:09:19,090
gotten an image preview but there are

186
00:09:17,290 --> 00:09:21,430
two different algorithms for doing that

187
00:09:19,090 --> 00:09:23,410
and so that's what I'm getting at that

188
00:09:21,430 --> 00:09:26,979
the client doesn't know what the best

189
00:09:23,410 --> 00:09:29,260
way to get an image preview is what what

190
00:09:26,980 --> 00:09:32,140
Alexei was saying it makes more sense to

191
00:09:29,260 --> 00:09:34,960
me that if you say I want to I want text

192
00:09:32,140 --> 00:09:37,540
previews and image previews and that let

193
00:09:34,960 --> 00:09:39,430
the server figure out how to do that so

194
00:09:37,540 --> 00:09:44,110
the media type makes more sense than

195
00:09:39,430 --> 00:09:46,000
than a preview algorithm there was

196
00:09:44,110 --> 00:09:50,220
something else that I wanted to say

197
00:09:46,000 --> 00:09:52,620
about the what do you want to happen

198
00:09:50,220 --> 00:09:57,760
okay there are there are three

199
00:09:52,620 --> 00:09:59,380
possibilities of a image text with an

200
00:09:57,760 --> 00:10:01,840
image so you say you get an email

201
00:09:59,380 --> 00:10:05,200
message that's multi-part mixed and has

202
00:10:01,840 --> 00:10:11,110
text and image one of them is that the

203
00:10:05,200 --> 00:10:13,120
text says it's a whole travel log its

204
00:10:11,110 --> 00:10:15,970
here's where I went on my vacation and

205
00:10:13,120 --> 00:10:18,460
the image is your favorite image from

206
00:10:15,970 --> 00:10:22,660
the vacation so in that case a preview

207
00:10:18,460 --> 00:10:25,330
of the message might be a bit of the

208
00:10:22,660 --> 00:10:28,750
text and a transcoded version of the

209
00:10:25,330 --> 00:10:31,360
image together another is that the text

210
00:10:28,750 --> 00:10:35,320
is this travel log and the image is a

211
00:10:31,360 --> 00:10:37,510
smiley face and in that case the preview

212
00:10:35,320 --> 00:10:40,360
you want is just to snap something in

213
00:10:37,510 --> 00:10:43,720
the text and the image is irrelevant and

214
00:10:40,360 --> 00:10:45,970
another is where you say check this out

215
00:10:43,720 --> 00:10:48,460
and then there's a big picture that's

216
00:10:45,970 --> 00:10:50,620
that's the gist of it and the in the

217
00:10:48,460 --> 00:10:52,540
preview you want there is just the

218
00:10:50,620 --> 00:10:57,520
picture you don't want the crap in the

219
00:10:52,540 --> 00:10:59,319
text and I don't know how a client would

220
00:10:57,520 --> 00:11:01,810
convey what it wants there in any

221
00:10:59,320 --> 00:11:04,420
reasonable sense the server can use

222
00:11:01,810 --> 00:11:06,880
heuristics to figure out whether there's

223
00:11:04,420 --> 00:11:09,550
intelligence in the text or not whether

224
00:11:06,880 --> 00:11:13,570
whether the image is worth sending and

225
00:11:09,550 --> 00:11:15,689
kind of stuff so I'm happier if we go

226
00:11:13,570 --> 00:11:22,959
with the client telling the server what

227
00:11:15,690 --> 00:11:24,850
what media types it wants and let the

228
00:11:22,959 --> 00:11:27,609
server figure out how to do that that

229
00:11:24,850 --> 00:11:30,040
makes sense to me Neil Jenkins again I

230
00:11:27,610 --> 00:11:32,769
was the exactly the same thing the other

231
00:11:30,040 --> 00:11:34,870
thing that that leap brings lead you to

232
00:11:32,769 --> 00:11:37,839
is you want multiple previous returned

233
00:11:34,870 --> 00:11:41,050
text and an image if if there are both

234
00:11:37,839 --> 00:11:43,240
know they're useful just all that off my

235
00:11:41,050 --> 00:11:45,189
head I would probably go with a well

236
00:11:43,240 --> 00:11:46,390
know she I don't know there's various

237
00:11:45,190 --> 00:11:47,680
different ways you could request that

238
00:11:46,390 --> 00:11:49,720
and it's a bit complicated in trying to

239
00:11:47,680 --> 00:11:51,250
make it not too complicated overall this

240
00:11:49,720 --> 00:11:53,170
is worthwhile

241
00:11:51,250 --> 00:11:55,149
yeah I I would just go we're gonna if

242
00:11:53,170 --> 00:11:56,920
we're gonna do that I would just go with

243
00:11:55,149 --> 00:11:59,079
the simplest thing where the client says

244
00:11:56,920 --> 00:12:02,500
these media types are ones that I accept

245
00:11:59,079 --> 00:12:04,750
and the cert the server it's up to the

246
00:12:02,500 --> 00:12:08,079
server whether it returns all of them or

247
00:12:04,750 --> 00:12:09,970
some of them or whatever I it anything

248
00:12:08,079 --> 00:12:11,260
else gets more complicated and Michael's

249
00:12:09,970 --> 00:12:12,970
already saying that he doesn't want to

250
00:12:11,260 --> 00:12:19,240
complicate this anymore and neither do I

251
00:12:12,970 --> 00:12:21,760
so it's P present it coming so I get how

252
00:12:19,240 --> 00:12:22,860
the media type idea works that makes

253
00:12:21,760 --> 00:12:25,180
sense to me

254
00:12:22,860 --> 00:12:28,630
what did you have in mind Michael other

255
00:12:25,180 --> 00:12:32,800
than fuzzy what what are the other kinds

256
00:12:28,630 --> 00:12:34,750
of choices or is that the only one Wow

257
00:12:32,800 --> 00:12:36,279
again in the future we may have used

258
00:12:34,750 --> 00:12:39,160
cases for the image you know per se

259
00:12:36,279 --> 00:12:40,930
image but again like the question

260
00:12:39,160 --> 00:12:44,529
becomes as a server as the server

261
00:12:40,930 --> 00:12:46,599
implementer what like it should be any

262
00:12:44,529 --> 00:12:49,720
image type whatever or should be limited

263
00:12:46,600 --> 00:12:52,540
to JPEG PNG something like that I mean

264
00:12:49,720 --> 00:12:56,350
how do we how do it sounds like you're

265
00:12:52,540 --> 00:12:58,540
converging on a media type except list I

266
00:12:56,350 --> 00:13:02,220
mean I mean that that makes the most

267
00:12:58,540 --> 00:13:05,380
sense because then I can say as a client

268
00:13:02,220 --> 00:13:08,290
I'll take any of these things you as a

269
00:13:05,380 --> 00:13:10,269
server can say here's what I got that

270
00:13:08,290 --> 00:13:12,490
works and whether that's a fuzzy image

271
00:13:10,269 --> 00:13:14,649
whether that's a you know a shortened

272
00:13:12,490 --> 00:13:16,870
text whatever it is at least now I've

273
00:13:14,649 --> 00:13:20,800
said these are the kinds of things I can

274
00:13:16,870 --> 00:13:22,310
handle and if the issue is one of the

275
00:13:20,800 --> 00:13:25,849
complexity of

276
00:13:22,310 --> 00:13:28,250
of the preview maybe I could give some

277
00:13:25,850 --> 00:13:32,120
sort of size parameter and as a request

278
00:13:28,250 --> 00:13:34,070
but but yeah I don't really get beyond

279
00:13:32,120 --> 00:13:36,050
here's the things I can accept and

280
00:13:34,070 --> 00:13:41,420
here's the size what the other choices

281
00:13:36,050 --> 00:13:44,390
are Alexei just showed me a picture of

282
00:13:41,420 --> 00:13:48,439
the I mean the the draft of the convert

283
00:13:44,390 --> 00:13:53,720
the RFC rather of the convert extension

284
00:13:48,440 --> 00:13:57,110
yeah what yeah what pizza yeah you they

285
00:13:53,720 --> 00:13:59,060
you could say I accept image slash JPEG

286
00:13:57,110 --> 00:14:01,490
if that's all you want or you could say

287
00:13:59,060 --> 00:14:04,910
I accept image slash star and let the

288
00:14:01,490 --> 00:14:07,640
server send whatever kind of image that

289
00:14:04,910 --> 00:14:10,010
is dangerous but it's awesome here's my

290
00:14:07,640 --> 00:14:13,520
big concern though what is what nice

291
00:14:10,010 --> 00:14:15,920
that was fuzzy has a very defined return

292
00:14:13,520 --> 00:14:18,290
value right it's a text it's this many

293
00:14:15,920 --> 00:14:21,560
characters it's in this this character

294
00:14:18,290 --> 00:14:23,630
set right so we have and what's nice

295
00:14:21,560 --> 00:14:25,279
about this and what's very important

296
00:14:23,630 --> 00:14:28,820
about us at least with my server hat on

297
00:14:25,279 --> 00:14:30,680
we cannot be creating multiple previews

298
00:14:28,820 --> 00:14:33,170
for different clients if a client sends

299
00:14:30,680 --> 00:14:34,640
I want a JPEG of 10 kilobytes and

300
00:14:33,170 --> 00:14:39,770
somebody said that JPEG of 20 to life

301
00:14:34,640 --> 00:14:42,860
that's not going to work I suggest you

302
00:14:39,770 --> 00:14:44,630
look at that I've seen 50 to 59 we've

303
00:14:42,860 --> 00:14:46,010
looked at convert it doesn't doesn't fit

304
00:14:44,630 --> 00:14:48,500
the Hughes case that we need that's

305
00:14:46,010 --> 00:14:51,110
convert I think that's exactly what you

306
00:14:48,500 --> 00:14:52,910
sort of asking about if you go beyond

307
00:14:51,110 --> 00:14:54,350
media type then it becomes very much

308
00:14:52,910 --> 00:15:00,800
like convert and I know it's over

309
00:14:54,350 --> 00:15:03,589
complicated you know people didn't yeah

310
00:15:00,800 --> 00:15:05,530
I mean getting back to the original

311
00:15:03,589 --> 00:15:08,030
problem we were trying to solve was

312
00:15:05,530 --> 00:15:10,280
every climate every climate that's too

313
00:15:08,030 --> 00:15:11,839
broad of a statement almost every client

314
00:15:10,280 --> 00:15:14,660
these days has some sort of preview

315
00:15:11,839 --> 00:15:17,839
textual preview right and that was

316
00:15:14,660 --> 00:15:20,089
really what we was the initial impetus

317
00:15:17,839 --> 00:15:21,589
for this and then we added the extension

318
00:15:20,089 --> 00:15:23,660
mechanism because we did have these

319
00:15:21,589 --> 00:15:24,860
potential ideas in the future and we

320
00:15:23,660 --> 00:15:26,270
didn't want to have to come back you

321
00:15:24,860 --> 00:15:27,950
know six months from now and saying

322
00:15:26,270 --> 00:15:29,959
guess what we just did a preview and now

323
00:15:27,950 --> 00:15:31,640
we need other whole previews that it's

324
00:15:29,959 --> 00:15:33,199
trying to balance these to work these

325
00:15:31,640 --> 00:15:34,760
two worlds because I agree that the text

326
00:15:33,200 --> 00:15:36,140
preview is the most important part

327
00:15:34,760 --> 00:15:39,439
because that's the thing that

328
00:15:36,140 --> 00:15:41,689
people use right now kneel again I just

329
00:15:39,440 --> 00:15:44,420
briefly I think the consensus in the

330
00:15:41,690 --> 00:15:45,500
room is that yes the the algorithm is

331
00:15:44,420 --> 00:15:47,780
not the right approach for this it

332
00:15:45,500 --> 00:15:49,340
should be a except media type and they

333
00:15:47,780 --> 00:15:51,650
current spec which before we had

334
00:15:49,340 --> 00:15:53,960
extensions is just if you sent explain

335
00:15:51,650 --> 00:15:55,069
you'll get back a preview there's no

336
00:15:53,960 --> 00:15:56,930
more control from the client if they

337
00:15:55,070 --> 00:16:00,290
can't say how long it is or anything

338
00:15:56,930 --> 00:16:01,729
else how you do it or whatever just give

339
00:16:00,290 --> 00:16:03,740
me a text plain preview and the server

340
00:16:01,730 --> 00:16:05,060
goes here's a text plain preview because

341
00:16:03,740 --> 00:16:06,710
I suspect almost every way it's gonna be

342
00:16:05,060 --> 00:16:07,969
infant it like certainly a fast mail we

343
00:16:06,710 --> 00:16:09,050
pre case these you're not gonna get some

344
00:16:07,970 --> 00:16:09,950
in different based what you ask there's

345
00:16:09,050 --> 00:16:11,089
only one thing we're gonna return you

346
00:16:09,950 --> 00:16:12,980
gmail is the same

347
00:16:11,090 --> 00:16:17,630
there's just no point in adding more

348
00:16:12,980 --> 00:16:19,520
complexity than that this is Peter given

349
00:16:17,630 --> 00:16:21,590
Michael's vertical up and down with his

350
00:16:19,520 --> 00:16:23,300
head died I I'm not sure there's

351
00:16:21,590 --> 00:16:26,420
anything else to say are you okay with

352
00:16:23,300 --> 00:16:28,160
the idea that this gets redefined as

353
00:16:26,420 --> 00:16:29,750
media type but really the only media

354
00:16:28,160 --> 00:16:32,930
type that is ever gonna be used in this

355
00:16:29,750 --> 00:16:35,030
first go-around is to explain and that

356
00:16:32,930 --> 00:16:37,459
is equivalent to what is currently in

357
00:16:35,030 --> 00:16:40,699
the document is fuzzy yeah so in other

358
00:16:37,460 --> 00:16:43,820
words we're just gonna take the

359
00:16:40,700 --> 00:16:48,530
semantics of text fuzzy will remain the

360
00:16:43,820 --> 00:16:51,770
same we'll just be labeled as explained

361
00:16:48,530 --> 00:16:54,680
media type right I mean that what this

362
00:16:51,770 --> 00:16:57,260
changes things to is that the extension

363
00:16:54,680 --> 00:16:59,719
mechanism is no longer an algorithm the

364
00:16:57,260 --> 00:17:01,670
extension mechanism is a media type and

365
00:16:59,720 --> 00:17:03,710
the first go-round of definition of the

366
00:17:01,670 --> 00:17:06,500
document should be the only thing you

367
00:17:03,710 --> 00:17:08,900
can do is text plane and the server will

368
00:17:06,500 --> 00:17:10,880
give you a short one and and because

369
00:17:08,900 --> 00:17:13,880
that's what fuzzy meant anyway right is

370
00:17:10,880 --> 00:17:17,150
that oh is that going to be okay with

371
00:17:13,880 --> 00:17:18,470
you as if in the future we need to do

372
00:17:17,150 --> 00:17:22,880
something it's gonna have to be on the

373
00:17:18,470 --> 00:17:25,250
level of media type and not some

374
00:17:22,880 --> 00:17:28,760
algorithm is that gonna work for your

375
00:17:25,250 --> 00:17:30,710
implementation I mean I'm trying to say

376
00:17:28,760 --> 00:17:32,930
the only thing I would be a bit worried

377
00:17:30,710 --> 00:17:35,510
about is if we have like if the if the

378
00:17:32,930 --> 00:17:39,140
name of this algorithm now or the name

379
00:17:35,510 --> 00:17:41,030
of the return type is text claim that

380
00:17:39,140 --> 00:17:42,590
text plane does have some semantics

381
00:17:41,030 --> 00:17:46,070
behind the right it's not just any text

382
00:17:42,590 --> 00:17:48,530
plane of anybody of any length I mean we

383
00:17:46,070 --> 00:17:49,860
still have to have those women I will

384
00:17:48,530 --> 00:17:53,370
fight for that one

385
00:17:49,860 --> 00:17:55,740
we have to have those limitations well I

386
00:17:53,370 --> 00:17:58,530
think it must be returned in utf-8 and

387
00:17:55,740 --> 00:18:01,860
must be of maximum to new forever

388
00:17:58,530 --> 00:18:03,990
we must have in yeah that's right yeah I

389
00:18:01,860 --> 00:18:05,100
want to just June with a couple of

390
00:18:03,990 --> 00:18:07,650
questions if I can

391
00:18:05,100 --> 00:18:10,350
I've been waiting well you three cycle

392
00:18:07,650 --> 00:18:13,429
through one of which is should we define

393
00:18:10,350 --> 00:18:16,320
a new text slash something type for this

394
00:18:13,429 --> 00:18:19,320
rather than just text plain so if we

395
00:18:16,320 --> 00:18:20,909
want to then do longer those things or

396
00:18:19,320 --> 00:18:23,668
something later I don't know that we

397
00:18:20,910 --> 00:18:26,250
need that we have things you can have

398
00:18:23,669 --> 00:18:29,070
text HTML you can have text markup you

399
00:18:26,250 --> 00:18:31,500
can have various the things with pluses

400
00:18:29,070 --> 00:18:33,270
on them to give text you know banana

401
00:18:31,500 --> 00:18:37,140
plus JSON and there's a lot of options

402
00:18:33,270 --> 00:18:38,879
and if we just set it up so that it can

403
00:18:37,140 --> 00:18:41,280
be extended with different media types

404
00:18:38,880 --> 00:18:42,929
then it makes it easy and you could even

405
00:18:41,280 --> 00:18:45,299
put something in the document that says

406
00:18:42,929 --> 00:18:47,309
in the future we may extend this with

407
00:18:45,299 --> 00:18:48,780
non text media types if you just want to

408
00:18:47,309 --> 00:18:50,879
you know other people that might

409
00:18:48,780 --> 00:18:55,428
eventually have yet my other question

410
00:18:50,880 --> 00:18:58,530
was discovery the current draft has a

411
00:18:55,429 --> 00:19:00,270
preview equals fuzzy in the capabilities

412
00:18:58,530 --> 00:19:01,799
so if you added an additional preview

413
00:19:00,270 --> 00:19:03,210
types you discover them through there

414
00:19:01,799 --> 00:19:05,370
how do we discover what the server

415
00:19:03,210 --> 00:19:11,010
supports we actually change that I think

416
00:19:05,370 --> 00:19:13,530
so the yeah very nice yeah I can

417
00:19:11,010 --> 00:19:15,929
remember if no I think we did we did you

418
00:19:13,530 --> 00:19:19,668
bear you wanted me to label every single

419
00:19:15,929 --> 00:19:22,320
at the time the algorithms I thought

420
00:19:19,669 --> 00:19:24,240
what we did I'm trying to remember the

421
00:19:22,320 --> 00:19:27,450
exact details I think what we did is we

422
00:19:24,240 --> 00:19:29,580
registered preview equals yeah and then

423
00:19:27,450 --> 00:19:34,520
we and then the document says preview

424
00:19:29,580 --> 00:19:37,770
equals fuzzy is the that's how it was

425
00:19:34,520 --> 00:19:39,570
yes I guess the question here is what

426
00:19:37,770 --> 00:19:43,549
would we put in their capabilities given

427
00:19:39,570 --> 00:19:43,549
that you can put slashes in them I don't

428
00:19:43,700 --> 00:19:53,220
it's um it's beat so do we actually

429
00:19:50,030 --> 00:19:55,370
envision a time where the server really

430
00:19:53,220 --> 00:19:58,290
wants to explain to the client what

431
00:19:55,370 --> 00:20:00,270
previews it has or is this really

432
00:19:58,290 --> 00:20:02,100
eventually going to be the clients going

433
00:20:00,270 --> 00:20:04,020
to express that it can

434
00:20:02,100 --> 00:20:05,490
support more than one preview and the

435
00:20:04,020 --> 00:20:09,360
server is going to give what it is in

436
00:20:05,490 --> 00:20:10,799
which case the capability is preview do

437
00:20:09,360 --> 00:20:12,899
we want to waste a round trip though

438
00:20:10,799 --> 00:20:14,370
like I only want to image preview the

439
00:20:12,900 --> 00:20:16,710
server will never return the image

440
00:20:14,370 --> 00:20:22,110
preview if we have some sort of

441
00:20:16,710 --> 00:20:25,679
capability then then the hint yeah I

442
00:20:22,110 --> 00:20:28,409
don't know that that's I understand like

443
00:20:25,679 --> 00:20:33,390
yeah clients are happy to be chatty at

444
00:20:28,410 --> 00:20:35,280
all times as peek at that you would

445
00:20:33,390 --> 00:20:39,390
really never encounter a client that

446
00:20:35,280 --> 00:20:41,639
that doesn't want a text preview it may

447
00:20:39,390 --> 00:20:44,280
want other things as well but I really

448
00:20:41,640 --> 00:20:46,710
doubt the use case that they wouldn't

449
00:20:44,280 --> 00:20:49,289
want a text preview so the client would

450
00:20:46,710 --> 00:20:52,620
just say I'll accept text and I'll

451
00:20:49,289 --> 00:20:54,780
accept JPEG and if it only gets JPEG

452
00:20:52,620 --> 00:20:56,820
that's fine and if it only gets text

453
00:20:54,780 --> 00:21:01,350
that's fine or it gets both that's also

454
00:20:56,820 --> 00:21:05,850
fine so yeah I'm happy to just advertise

455
00:21:01,350 --> 00:21:10,049
preview and then we say the media types

456
00:21:05,850 --> 00:21:11,939
that are supported now our text slash

457
00:21:10,049 --> 00:21:13,379
whatever and if we just want to say text

458
00:21:11,940 --> 00:21:16,200
plain that's fine if you want to add

459
00:21:13,380 --> 00:21:20,039
text any kind of text I'm okay with that

460
00:21:16,200 --> 00:21:21,900
and then say something about future

461
00:21:20,039 --> 00:21:26,669
implement or future extensions might

462
00:21:21,900 --> 00:21:28,110
support non text media types and I think

463
00:21:26,669 --> 00:21:30,990
that makes everybody happy or at least

464
00:21:28,110 --> 00:21:34,020
everyone can live with it I hope yeah

465
00:21:30,990 --> 00:21:35,909
well this is I probably need to do it's

466
00:21:34,020 --> 00:21:38,250
another HT review of this because this

467
00:21:35,909 --> 00:21:39,990
is a major change to the document I mean

468
00:21:38,250 --> 00:21:44,340
not conceptually but it will change the

469
00:21:39,990 --> 00:21:46,049
syntax right because it's something

470
00:21:44,340 --> 00:21:48,418
decline to both the client and the

471
00:21:46,049 --> 00:21:50,340
server the parson sake at minimum you

472
00:21:48,419 --> 00:21:54,150
need to update all examples so maybe

473
00:21:50,340 --> 00:21:56,970
enough this needs to go back to working

474
00:21:54,150 --> 00:21:59,340
group last call IETF last call is G

475
00:21:56,970 --> 00:22:01,380
evaluation again we can make it quick I

476
00:21:59,340 --> 00:22:04,020
I hope we can get this done quickly at

477
00:22:01,380 --> 00:22:06,090
this point so are we real loading you

478
00:22:04,020 --> 00:22:09,210
Michael or are you or not I think so

479
00:22:06,090 --> 00:22:11,040
what I'm hearing is is the actual

480
00:22:09,210 --> 00:22:11,840
behavior everybody agrees with the Klan

481
00:22:11,040 --> 00:22:13,659
behavior

482
00:22:11,840 --> 00:22:16,459
we're just going to change we're gonna

483
00:22:13,660 --> 00:22:21,100
get rid of the concept of algorithms and

484
00:22:16,460 --> 00:22:24,200
couch everything in terms of media types

485
00:22:21,100 --> 00:22:26,719
and then obviously we need to change the

486
00:22:24,200 --> 00:22:29,600
syntax for that we're not changing

487
00:22:26,720 --> 00:22:30,440
anything in the capabilities is what I

488
00:22:29,600 --> 00:22:32,510
was hearing

489
00:22:30,440 --> 00:22:36,460
well the capabilities now would just say

490
00:22:32,510 --> 00:22:41,750
preview just know we know no equal sign

491
00:22:36,460 --> 00:22:49,070
right so I think it does it simplifies

492
00:22:41,750 --> 00:22:51,670
things a little bit yeah yeah okay we're

493
00:22:49,070 --> 00:22:54,830
good thanks

494
00:22:51,670 --> 00:22:56,000
yeah I'm sorry it took so long to get to

495
00:22:54,830 --> 00:23:04,280
this point but I think it was very

496
00:22:56,000 --> 00:23:06,530
productive discussion actually thanks

497
00:23:04,280 --> 00:23:07,940
Michael yes we have we have used up the

498
00:23:06,530 --> 00:23:17,899
time we had available for this so let's

499
00:23:07,940 --> 00:23:20,380
move on to IMAP for revenue and switch

500
00:23:17,900 --> 00:23:20,380
slides

501
00:23:24,299 --> 00:23:29,190
while you're getting ready I realized I

502
00:23:26,489 --> 00:23:33,209
haven't done anything about quarter it's

503
00:23:29,190 --> 00:23:34,469
on your agenda so global okay well open

504
00:23:33,209 --> 00:23:37,559
we don't need to do anything with it if

505
00:23:34,469 --> 00:23:40,849
there's nothing to say we'll just skip

506
00:23:37,559 --> 00:23:40,849
over and we get there let's do this one

507
00:23:41,389 --> 00:23:54,658
clicker is here so we didn't have

508
00:23:51,899 --> 00:24:04,258
meeting in Montreal we had it in Prague

509
00:23:54,659 --> 00:24:06,269
there were three divisions since I think

510
00:24:04,259 --> 00:24:10,529
most of the changes on the to-do list

511
00:24:06,269 --> 00:24:24,239
are done now but we'll drive few open

512
00:24:10,529 --> 00:24:27,089
issues we'll talk about quickly biggest

513
00:24:24,239 --> 00:24:32,789
changes the other work some good

514
00:24:27,089 --> 00:24:34,369
questions from Timo a long list which is

515
00:24:32,789 --> 00:24:36,529
mostly address now

516
00:24:34,369 --> 00:24:39,599
things like permanent flags

517
00:24:36,529 --> 00:24:42,119
clarification and clarifying that

518
00:24:39,599 --> 00:24:46,950
notified you gf7 is only useful for

519
00:24:42,119 --> 00:24:50,999
everyone compatibility are done now the

520
00:24:46,950 --> 00:24:58,440
other biggest changes are removing L sub

521
00:24:50,999 --> 00:24:58,900
command and adding extended list check

522
00:24:58,440 --> 00:25:01,660
common

523
00:24:58,900 --> 00:25:03,540
got removed they just md5 was replaces

524
00:25:01,660 --> 00:25:08,050
Graham jawan scam

525
00:25:03,540 --> 00:25:12,129
sha-256 one of the cheapest comment was

526
00:25:08,050 --> 00:25:17,680
about deprecating fetcher FCA - - or

527
00:25:12,130 --> 00:25:19,960
FCAT to text and and header it was very

528
00:25:17,680 --> 00:25:22,540
clear at the time what it meant but now

529
00:25:19,960 --> 00:25:23,770
as I started looking at this I wasn't to

530
00:25:22,540 --> 00:25:26,230
tell the show what it meant

531
00:25:23,770 --> 00:25:31,690
so what currently is document is saying

532
00:25:26,230 --> 00:25:33,340
is they are accepted but shouldn't be

533
00:25:31,690 --> 00:25:35,770
used by the client and they will be

534
00:25:33,340 --> 00:25:38,919
taken out as opposed to just being

535
00:25:35,770 --> 00:25:43,540
removed yeah if people feel strongly

536
00:25:38,920 --> 00:25:48,880
that they should be just taken out I'm

537
00:25:43,540 --> 00:25:50,920
very happy to do this change but I guess

538
00:25:48,880 --> 00:25:53,260
if you're enabling and imap4 Rev - you

539
00:25:50,920 --> 00:25:55,810
know what you're doing enough to take

540
00:25:53,260 --> 00:26:02,670
them out so what people rather take them

541
00:25:55,810 --> 00:26:02,669
out I'm happy to take them out I

542
00:26:04,080 --> 00:26:10,000
strongly encourage that we take them out

543
00:26:06,570 --> 00:26:13,360
a server that wants to support imap4 rep

544
00:26:10,000 --> 00:26:15,940
- and I'm up for Rev one will support

545
00:26:13,360 --> 00:26:17,889
them well one that only supports imap4

546
00:26:15,940 --> 00:26:19,990
rep two doesn't need to put it in and

547
00:26:17,890 --> 00:26:23,860
clients won't use it if they're if

548
00:26:19,990 --> 00:26:26,050
they're talking rug - so fine it just

549
00:26:23,860 --> 00:26:28,179
yeah anyway it would be simpler in the

550
00:26:26,050 --> 00:26:30,280
document that some things are deprecated

551
00:26:28,180 --> 00:26:33,070
by being taken out and this one is sort

552
00:26:30,280 --> 00:26:34,810
of like half deprecated so for

553
00:26:33,070 --> 00:26:36,939
consistency - but to think they can

554
00:26:34,810 --> 00:26:39,210
check it out and I don't mind if we have

555
00:26:36,940 --> 00:26:41,410
a section in the document that just

556
00:26:39,210 --> 00:26:44,500
lists things that have been taken out

557
00:26:41,410 --> 00:26:46,720
yeah there is already a section of

558
00:26:44,500 --> 00:26:48,280
changes since and I'd say it mentions

559
00:26:46,720 --> 00:26:50,860
everything taken out so I think that's

560
00:26:48,280 --> 00:26:54,690
soon yeah that's fine fine okay so we

561
00:26:50,860 --> 00:26:54,689
have action item to take this out yep

562
00:26:55,060 --> 00:27:01,750
I think there are like one remaining

563
00:26:57,460 --> 00:27:05,500
comment from aren't about search new I

564
00:27:01,750 --> 00:27:08,020
think we had discussion was Braun and

565
00:27:05,500 --> 00:27:11,350
aren't about the best behavior

566
00:27:08,020 --> 00:27:16,418
I think suggestion is keep search

567
00:27:11,350 --> 00:27:19,059
new but just make it return nothing yes

568
00:27:16,419 --> 00:27:21,130
now it's probably the safest thing so if

569
00:27:19,059 --> 00:27:25,379
clients ask for it it's sort of Quebec

570
00:27:21,130 --> 00:27:28,299
word compatible well in the sense of

571
00:27:25,380 --> 00:27:30,640
there are no recent messages anymore so

572
00:27:28,299 --> 00:27:32,679
nothing is ever new so it's empty right

573
00:27:30,640 --> 00:27:35,230
I guess the question here is if we're

574
00:27:32,679 --> 00:27:37,179
deprecating things by by removing them

575
00:27:35,230 --> 00:27:38,770
entirely then once you've enabled I'm at

576
00:27:37,179 --> 00:27:41,860
four Rev - you're not going to send a

577
00:27:38,770 --> 00:27:47,080
search new right so we could just return

578
00:27:41,860 --> 00:27:52,928
bad well and that gets to the

579
00:27:47,080 --> 00:27:55,510
interesting part of yeah for the most

580
00:27:52,929 --> 00:27:58,539
part well my philosophy was to try to

581
00:27:55,510 --> 00:28:00,309
make it as easy for the client to do as

582
00:27:58,539 --> 00:28:02,500
in climb that already do various

583
00:28:00,309 --> 00:28:04,629
extensions or just implement a map for

584
00:28:02,500 --> 00:28:11,530
everyone they pretty much wouldn't

585
00:28:04,630 --> 00:28:13,030
require any changes taking out well I

586
00:28:11,530 --> 00:28:15,639
suppose if we're taking out our apps

587
00:28:13,030 --> 00:28:19,928
here - two attacks we might as well take

588
00:28:15,640 --> 00:28:21,669
out new but I think for going this way I

589
00:28:19,929 --> 00:28:23,470
think we should just not deprecated

590
00:28:21,669 --> 00:28:25,150
anything just anything that we don't

591
00:28:23,470 --> 00:28:28,539
want to support anymore we take it out

592
00:28:25,150 --> 00:28:30,700
and somebody says that they talk I'm up

593
00:28:28,539 --> 00:28:33,190
for Rev - they talk on that for Rev -

594
00:28:30,700 --> 00:28:38,320
they don't send us stuff that's not part

595
00:28:33,190 --> 00:28:42,880
of it the the backward compatibility is

596
00:28:38,320 --> 00:28:45,340
the server supports both yellow and and

597
00:28:42,880 --> 00:28:48,370
for a long time and you see how many

598
00:28:45,340 --> 00:28:50,709
change which is incompatible yeah I

599
00:28:48,370 --> 00:28:54,039
think right we should avoid changes

600
00:28:50,710 --> 00:28:55,780
where the same thing works differently

601
00:28:54,039 --> 00:28:57,879
right because then then we will break

602
00:28:55,780 --> 00:29:00,360
compatibility but we ought to make it

603
00:28:57,880 --> 00:29:04,240
easy for a server to support both and

604
00:29:00,360 --> 00:29:06,428
then that's the transition and now at

605
00:29:04,240 --> 00:29:08,289
some point maybe the server's don't

606
00:29:06,429 --> 00:29:12,010
support rev one anymore but I think that

607
00:29:08,289 --> 00:29:14,350
probably will never happen fine okay so

608
00:29:12,010 --> 00:29:17,679
I think suggestion is to take out such

609
00:29:14,350 --> 00:29:19,449
new as well yeah and that answer is I

610
00:29:17,679 --> 00:29:22,120
was going to go back to the removed L

611
00:29:19,450 --> 00:29:24,560
sub added extended list line and say

612
00:29:22,120 --> 00:29:26,750
that if you're reviewing this

613
00:29:24,560 --> 00:29:29,360
realize that the addition of extended

614
00:29:26,750 --> 00:29:31,460
list isn't finished yet I I I did that

615
00:29:29,360 --> 00:29:34,699
but there's more I need to do with it

616
00:29:31,460 --> 00:29:37,520
and part of it is getting rid of the

617
00:29:34,700 --> 00:29:41,060
floppy text in there that we used to

618
00:29:37,520 --> 00:29:43,580
have I would say it's conceptually

619
00:29:41,060 --> 00:29:46,909
finish it's like that text is not final

620
00:29:43,580 --> 00:29:48,830
at intentions a more attention to the

621
00:29:46,910 --> 00:29:50,750
sections because it's the biggest change

622
00:29:48,830 --> 00:29:53,120
in the dock you guess the text needs

623
00:29:50,750 --> 00:29:55,670
cleanup and the cleanup that it needs is

624
00:29:53,120 --> 00:29:59,060
that there's a lot of stuff in the text

625
00:29:55,670 --> 00:30:00,800
that was if you're using non extended

626
00:29:59,060 --> 00:30:02,570
list here's what you got to do and if

627
00:30:00,800 --> 00:30:05,690
you're using extended list here's what

628
00:30:02,570 --> 00:30:07,909
you got to do and I've got to clean that

629
00:30:05,690 --> 00:30:09,680
text up and I feel yeah well we'll think

630
00:30:07,910 --> 00:30:11,570
about this and we'll come up with a

631
00:30:09,680 --> 00:30:13,940
proposal I might be disagreeing video

632
00:30:11,570 --> 00:30:16,250
some of this but yes Alexei and I are

633
00:30:13,940 --> 00:30:17,900
going to talk about this and lately even

634
00:30:16,250 --> 00:30:19,430
have a time to do it except I don't

635
00:30:17,900 --> 00:30:25,220
remember when it is Friday morning

636
00:30:19,430 --> 00:30:27,260
Friday so yeah so we'll post another

637
00:30:25,220 --> 00:30:35,120
revision after we've sorted that out and

638
00:30:27,260 --> 00:30:37,540
I've made the changes it's nice to

639
00:30:35,120 --> 00:30:40,310
review my own slides from the previous

640
00:30:37,540 --> 00:30:43,040
previous type yeah I discovered that I

641
00:30:40,310 --> 00:30:52,750
forgot to do something you know to the

642
00:30:43,040 --> 00:30:55,340
document there are a few things

643
00:30:52,750 --> 00:30:57,440
explaining body structure more I think

644
00:30:55,340 --> 00:30:59,870
that's a useful thing to do this is just

645
00:30:57,440 --> 00:31:02,300
because there aren't enough examples and

646
00:30:59,870 --> 00:31:04,879
it's a at least for me it's a constant

647
00:31:02,300 --> 00:31:06,860
side of errors yep

648
00:31:04,880 --> 00:31:08,750
I caught it both server-side and

649
00:31:06,860 --> 00:31:09,560
client-side every time I do a change in

650
00:31:08,750 --> 00:31:11,330
the client-side

651
00:31:09,560 --> 00:31:13,520
I don't actually remember how it works

652
00:31:11,330 --> 00:31:15,949
so I test against the live servers to

653
00:31:13,520 --> 00:31:20,420
see what the exact behavior is so this

654
00:31:15,950 --> 00:31:25,210
really needs no examples another change

655
00:31:20,420 --> 00:31:30,710
that Chris Newman requested and actually

656
00:31:25,210 --> 00:31:35,000
it does much my implementation extended

657
00:31:30,710 --> 00:31:37,340
list lost multiple match pattern which I

658
00:31:35,000 --> 00:31:38,929
thought was very cute idea at the time

659
00:31:37,340 --> 00:31:42,549
I don't think anybody implemented it

660
00:31:38,929 --> 00:31:45,350
because well the problem was list is

661
00:31:42,549 --> 00:31:48,049
requirements on list is their server

662
00:31:45,350 --> 00:31:51,408
doesn't return information for the same

663
00:31:48,049 --> 00:31:54,679
mailbox twice or more than once where

664
00:31:51,409 --> 00:31:56,120
multiple patterns would require keeping

665
00:31:54,679 --> 00:31:58,429
all the lists and aggregating them

666
00:31:56,120 --> 00:32:00,080
before emitting as opposed to just

667
00:31:58,429 --> 00:32:03,049
emitting the list as you as you go

668
00:32:00,080 --> 00:32:04,789
through the mailbox so I think this is

669
00:32:03,049 --> 00:32:09,350
relatively straightforward is a backward

670
00:32:04,789 --> 00:32:14,059
compatible change as in if you implement

671
00:32:09,350 --> 00:32:16,759
list extended extension proper you will

672
00:32:14,059 --> 00:32:21,799
support multiple pattern but this will

673
00:32:16,759 --> 00:32:24,649
be just like drivel case over done fit

674
00:32:21,799 --> 00:32:30,440
in in even parents just a single much

675
00:32:24,649 --> 00:32:34,699
thing I the next one which I forgot

676
00:32:30,440 --> 00:32:37,129
about I think status in list is seems to

677
00:32:34,700 --> 00:32:47,179
be quite a favorite a list return status

678
00:32:37,129 --> 00:32:51,889
is nice yes so let's include this binary

679
00:32:47,179 --> 00:32:54,320
fetch I think we agreed that we only

680
00:32:51,889 --> 00:32:57,219
want the fetch size of this and only

681
00:32:54,320 --> 00:33:02,389
allow to do this for the live body parts

682
00:32:57,220 --> 00:33:04,460
I need to do my homework I think the

683
00:33:02,389 --> 00:33:13,369
message global might be a special case

684
00:33:04,460 --> 00:33:15,889
because it changed how content transfer

685
00:33:13,369 --> 00:33:17,959
encoding is working because of the

686
00:33:15,889 --> 00:33:20,389
recursive nature I think there might be

687
00:33:17,960 --> 00:33:24,860
a slight problem there for this for AI

688
00:33:20,389 --> 00:33:26,899
so my need clarification or decision

689
00:33:24,860 --> 00:33:29,258
what whether it's a special case or we

690
00:33:26,899 --> 00:33:29,258
don't care

691
00:33:29,919 --> 00:33:37,629
Chris Newman requested search to be

692
00:33:33,799 --> 00:33:39,710
intelligent and I think Timo as well are

693
00:33:37,629 --> 00:33:46,029
basically not necessarily substring

694
00:33:39,710 --> 00:33:46,029
matching but more index type matching I

695
00:33:47,030 --> 00:33:54,980
this is fine except if we're doing a

696
00:33:52,760 --> 00:33:57,290
search for header fields values I think

697
00:33:54,980 --> 00:34:00,770
having substring matching is actually

698
00:33:57,290 --> 00:34:03,290
preferred so I would like to discuss

699
00:34:00,770 --> 00:34:05,150
this a bit more on a mailing list in a

700
00:34:03,290 --> 00:34:08,230
sense so if we are doing full body

701
00:34:05,150 --> 00:34:10,580
search it's fine to do indexing and

702
00:34:08,230 --> 00:34:12,199
matching of similar looking words or

703
00:34:10,580 --> 00:34:16,909
words from different roots in language

704
00:34:12,199 --> 00:34:19,850
that's fine but if example if I'm

705
00:34:16,909 --> 00:34:22,610
searching for multi-part report content

706
00:34:19,850 --> 00:34:25,639
type value I don't want to match it

707
00:34:22,610 --> 00:34:27,650
multi-part reporting I wanted too much

708
00:34:25,639 --> 00:34:33,560
multi-part reporting so I want substring

709
00:34:27,650 --> 00:34:35,270
search is supposed to fuzzy search so

710
00:34:33,560 --> 00:34:36,830
I'll send a message on this to the

711
00:34:35,270 --> 00:34:39,800
meaningless hopefully people will agree

712
00:34:36,830 --> 00:34:42,290
and we can yeah I must can we get just

713
00:34:39,800 --> 00:34:49,280
by mandating the fuzzy extension and

714
00:34:42,290 --> 00:34:51,949
recommending class user well I think the

715
00:34:49,280 --> 00:34:57,590
use cases is if you are having human

716
00:34:51,949 --> 00:35:00,049
user who is searching for some text it's

717
00:34:57,590 --> 00:35:01,910
a quality of implementation issue if you

718
00:35:00,050 --> 00:35:03,890
have an automated email client that

719
00:35:01,910 --> 00:35:05,870
tries to do automatic processing like

720
00:35:03,890 --> 00:35:07,940
find all the messages with this

721
00:35:05,870 --> 00:35:12,259
structure with this header field

722
00:35:07,940 --> 00:35:14,900
containing this value for them it's

723
00:35:12,260 --> 00:35:18,830
better to stick to substring search but

724
00:35:14,900 --> 00:35:22,160
if if the protocol says must support

725
00:35:18,830 --> 00:35:24,710
fuzzy as as a match parameter then

726
00:35:22,160 --> 00:35:27,160
clients that want intelligent matching

727
00:35:24,710 --> 00:35:29,690
just put fuzzy is to say search fuzzy

728
00:35:27,160 --> 00:35:31,759
expression and clients that don't want

729
00:35:29,690 --> 00:35:40,820
to don't say search fuzzy and then you

730
00:35:31,760 --> 00:35:43,220
you have access to both behaviors not

731
00:35:40,820 --> 00:35:46,580
well it's well the server can just say

732
00:35:43,220 --> 00:35:50,240
go away if it doesn't want to and then

733
00:35:46,580 --> 00:35:52,640
you you advise so the way it is now many

734
00:35:50,240 --> 00:35:55,790
clients many servers rather can't

735
00:35:52,640 --> 00:35:59,660
implement non fuzzy and and they just

736
00:35:55,790 --> 00:36:02,360
implement non fuzzy as fuzzy but yet

737
00:35:59,660 --> 00:36:05,450
many of them do Lotus Notes did that and

738
00:36:02,360 --> 00:36:06,980
and for our implementation is going to

739
00:36:05,450 --> 00:36:08,540
be the opposite actually we cannot do

740
00:36:06,980 --> 00:36:11,690
fuzzy but as long as I can return

741
00:36:08,540 --> 00:36:17,420
something sensible so the question is if

742
00:36:11,690 --> 00:36:20,000
you don't say fuzzy what if the client

743
00:36:17,420 --> 00:36:25,370
doesn't say fuzzy can the server do

744
00:36:20,000 --> 00:36:29,030
fuzzy anyway now or do we say there's

745
00:36:25,370 --> 00:36:31,310
non fuzzy and there's fuzzy and you have

746
00:36:29,030 --> 00:36:33,410
to say no if you can't support that when

747
00:36:31,310 --> 00:36:35,990
I sense my on say is depending on search

748
00:36:33,410 --> 00:36:38,120
key for some search Keys you have to do

749
00:36:35,990 --> 00:36:41,839
non fuzzy and for others it doesn't

750
00:36:38,120 --> 00:36:44,690
matter I would certainly say that there

751
00:36:41,840 --> 00:36:46,460
are as many existing servers they're

752
00:36:44,690 --> 00:36:48,110
already just too fuzzy even if you don't

753
00:36:46,460 --> 00:36:52,280
ask for it and that doesn't seem to

754
00:36:48,110 --> 00:36:57,790
break too much stuff so I'm saying if

755
00:36:52,280 --> 00:37:03,140
you say search subject banana and the

756
00:36:57,790 --> 00:37:06,110
your server only supports fuzzy does it

757
00:37:03,140 --> 00:37:12,500
return a fuzzy search on banana in the

758
00:37:06,110 --> 00:37:16,640
subject or does it say no that's that's

759
00:37:12,500 --> 00:37:19,730
I don't know just briefly if it had to

760
00:37:16,640 --> 00:37:21,049
say no that would mean that existing

761
00:37:19,730 --> 00:37:22,070
servers like the Gmail one would have to

762
00:37:21,050 --> 00:37:23,420
change their behavior depending on

763
00:37:22,070 --> 00:37:25,250
whether they were deemed to rev to or

764
00:37:23,420 --> 00:37:27,850
not which i think is a bad thing so I

765
00:37:25,250 --> 00:37:31,100
think it should not have to say that

766
00:37:27,850 --> 00:37:33,049
okay this is Bron with an alternative

767
00:37:31,100 --> 00:37:35,049
suggestion which is that we add an

768
00:37:33,050 --> 00:37:40,400
extended response in the node that says

769
00:37:35,050 --> 00:37:42,470
needs fuzzy it is still journey we have

770
00:37:40,400 --> 00:37:44,840
you once you opt into for a but if you

771
00:37:42,470 --> 00:37:46,370
create a client that's opting into rev -

772
00:37:44,840 --> 00:37:48,410
it should it's not the point on the

773
00:37:46,370 --> 00:37:52,549
circuit it is that the server should not

774
00:37:48,410 --> 00:37:54,020
have to change the service should be

775
00:37:52,550 --> 00:37:56,930
able to support rev one and riveted

776
00:37:54,020 --> 00:37:58,820
together without having a lot of changes

777
00:37:56,930 --> 00:38:01,790
in between without having to know the

778
00:37:58,820 --> 00:38:04,760
difference so what he's saying is that

779
00:38:01,790 --> 00:38:06,980
if your server today on rev one just

780
00:38:04,760 --> 00:38:09,470
does a fuzzy search when you ask for non

781
00:38:06,980 --> 00:38:10,820
fuzzy we don't want to have to change

782
00:38:09,470 --> 00:38:12,470
that we don't want it to have to have

783
00:38:10,820 --> 00:38:14,480
different behavior depending on what

784
00:38:12,470 --> 00:38:16,339
the client is again I think it sort of

785
00:38:14,480 --> 00:38:19,190
depends what you're searching for do you

786
00:38:16,340 --> 00:38:21,920
do fuzzy search on address I think we

787
00:38:19,190 --> 00:38:24,859
say that it you it depends on keys you

788
00:38:21,920 --> 00:38:27,920
behave is the same as it does now but

789
00:38:24,859 --> 00:38:30,040
fuzzy is required implementation of

790
00:38:27,920 --> 00:38:33,260
fuzzy is required on the server and

791
00:38:30,040 --> 00:38:37,130
clients that want fuzzy searches should

792
00:38:33,260 --> 00:38:38,990
use fuzzy explicitly although alexei

793
00:38:37,130 --> 00:38:43,820
saying they can't sport fuzzy was that

794
00:38:38,990 --> 00:38:47,779
right yes yeah but yeah i'm cases you

795
00:38:43,820 --> 00:38:49,790
know client as I say for harder fueled

796
00:38:47,780 --> 00:38:51,770
searches specifically you don't want

797
00:38:49,790 --> 00:38:53,869
fuzzy sometimes there's no such thing as

798
00:38:51,770 --> 00:38:58,009
can't support fuzzy you just repeat

799
00:38:53,869 --> 00:39:01,640
fuzzy is undefined okay whatever you

800
00:38:58,010 --> 00:39:03,980
like yeah I think the important thing

801
00:39:01,640 --> 00:39:06,200
was my own sang was one of the goals is

802
00:39:03,980 --> 00:39:07,550
that the same request should not get a

803
00:39:06,200 --> 00:39:10,118
different response based on what you're

804
00:39:07,550 --> 00:39:13,369
doing rev one or web to know right like

805
00:39:10,119 --> 00:39:14,930
yes and that is I'm given although it's

806
00:39:13,369 --> 00:39:17,030
not allowed in the current spec a lot of

807
00:39:14,930 --> 00:39:18,859
servers are doing a fuzzy search even if

808
00:39:17,030 --> 00:39:21,020
you don't ask for it they would have to

809
00:39:18,859 --> 00:39:22,430
change behavior if you said that that

810
00:39:21,020 --> 00:39:23,930
should be rejected in remove too so I

811
00:39:22,430 --> 00:39:25,220
think it's better to change the spec to

812
00:39:23,930 --> 00:39:27,379
say that's actually allowed because

813
00:39:25,220 --> 00:39:33,859
that's what people are doing so here's a

814
00:39:27,380 --> 00:39:37,099
recommendation so we say we we have

815
00:39:33,859 --> 00:39:38,420
fuzzy we have something non fuzzy is not

816
00:39:37,099 --> 00:39:41,780
the word I want to use but we have

817
00:39:38,420 --> 00:39:44,510
something that conveys non fuzzy and we

818
00:39:41,780 --> 00:39:47,450
have nothing nothing does whatever it

819
00:39:44,510 --> 00:39:49,940
does today however you do it and then

820
00:39:47,450 --> 00:39:53,480
you can explicitly say I want fuzzy or I

821
00:39:49,940 --> 00:39:55,310
don't want fuzzy mmm so substring okay

822
00:39:53,480 --> 00:39:57,200
word well yeah we set what pizza just as

823
00:39:55,310 --> 00:39:58,490
well yes exactly yes yes it's actually

824
00:39:57,200 --> 00:40:00,230
really gross gesture you can explicitly

825
00:39:58,490 --> 00:40:01,848
ask for substring and then the server

826
00:40:00,230 --> 00:40:03,500
can say no I'm not doing that for a body

827
00:40:01,849 --> 00:40:06,859
search over this I would timeout after

828
00:40:03,500 --> 00:40:10,450
30 seconds anyone say does that make you

829
00:40:06,859 --> 00:40:13,569
happy and then that way

830
00:40:10,450 --> 00:40:15,790
if you can't do fuzzy I'm sure when a

831
00:40:13,569 --> 00:40:18,339
user searches is still in progress I'm

832
00:40:15,790 --> 00:40:21,660
not sure right well I think we do fuzzy

833
00:40:18,339 --> 00:40:26,440
when a client says fuzzy you can say no

834
00:40:21,660 --> 00:40:28,149
if it if lotus notes can't do substring

835
00:40:26,440 --> 00:40:29,980
then they say no when you ask for

836
00:40:28,150 --> 00:40:34,420
substring but when you don't ask for

837
00:40:29,980 --> 00:40:36,760
anything it does whatever it does I'm

838
00:40:34,420 --> 00:40:37,359
good I think we need I need to see an

839
00:40:36,760 --> 00:40:48,069
example

840
00:40:37,359 --> 00:40:49,869
well example will talk on Friday ok so

841
00:40:48,069 --> 00:40:52,240
yeah it's it doesn't seem like my

842
00:40:49,869 --> 00:40:54,940
original proposal where whether you do

843
00:40:52,240 --> 00:40:58,029
fuzzy or not will depends on on the

844
00:40:54,940 --> 00:40:59,410
search key Michael and Jabba says search

845
00:40:58,030 --> 00:41:00,970
results can be different in the same

846
00:40:59,410 --> 00:41:03,250
server depending on the back end search

847
00:41:00,970 --> 00:41:08,069
technology being used for the specific

848
00:41:03,250 --> 00:41:08,069
account / mailbox sure sure yeah

849
00:41:09,670 --> 00:41:16,160
what you're saying is the way it works

850
00:41:11,960 --> 00:41:18,079
today if if I do a date search it's not

851
00:41:16,160 --> 00:41:20,359
going to be fuzzy and let's say I do a

852
00:41:18,079 --> 00:41:22,460
date search on Lotus Notes it's not

853
00:41:20,359 --> 00:41:26,210
going to be fuzzy for a date search it

854
00:41:22,460 --> 00:41:33,829
will be fuzzy for a text search in some

855
00:41:26,210 --> 00:41:36,140
of you do okay in sada message-id fool

856
00:41:33,829 --> 00:41:37,819
is it going to be fuzzy no well it

857
00:41:36,140 --> 00:41:40,489
better not be fuzzy no it's nice is

858
00:41:37,819 --> 00:41:42,079
going to be horrible No so that's

859
00:41:40,489 --> 00:41:45,650
exactly the behavior I want to preserve

860
00:41:42,079 --> 00:41:48,170
sure and and what subject I don't so

861
00:41:45,650 --> 00:41:49,160
that behavior is preserved by not saying

862
00:41:48,170 --> 00:41:51,019
anything

863
00:41:49,160 --> 00:41:53,660
you don't say fuzzy you don't say

864
00:41:51,019 --> 00:41:56,779
substring message IDs behave a certain

865
00:41:53,660 --> 00:41:58,940
way yes I want a certain way subject and

866
00:41:56,779 --> 00:42:01,910
body behave a certain way well it's

867
00:41:58,940 --> 00:42:03,710
gonna be server dependent but I can't

868
00:42:01,910 --> 00:42:06,618
imagine any server that does a fuzzy

869
00:42:03,710 --> 00:42:08,329
search on message ID well midis case i

870
00:42:06,619 --> 00:42:14,349
would rather say that header field

871
00:42:08,329 --> 00:42:16,460
searches have to be not subject well

872
00:42:14,349 --> 00:42:18,950
subject might be a special case subject

873
00:42:16,460 --> 00:42:21,920
I sort of don't care because that's not

874
00:42:18,950 --> 00:42:23,930
the one although if I spy am searching

875
00:42:21,920 --> 00:42:28,130
for prefix that sort of would have been

876
00:42:23,930 --> 00:42:32,450
nice to know this is Pete I just want to

877
00:42:28,130 --> 00:42:35,989
say the client end of this whatever you

878
00:42:32,450 --> 00:42:39,348
server knuckleheads think it this fuzzy

879
00:42:35,989 --> 00:42:42,079
stuff hisses clients off because they

880
00:42:39,349 --> 00:42:44,660
sometimes want to do whatever kind of

881
00:42:42,079 --> 00:42:47,329
search they want to do and want exact

882
00:42:44,660 --> 00:42:48,828
string matches for some headers and so

883
00:42:47,329 --> 00:42:51,710
if you want to leave the behavior of

884
00:42:48,829 --> 00:42:54,829
IMAP red one alone and let it do

885
00:42:51,710 --> 00:42:57,529
whatever the server decides give away

886
00:42:54,829 --> 00:43:01,430
for the client and revenue to say stop

887
00:42:57,529 --> 00:43:05,509
it I want exact match that's what I was

888
00:43:01,430 --> 00:43:08,299
proposing and so what you're talking

889
00:43:05,509 --> 00:43:12,650
about with whether it's header or not is

890
00:43:08,299 --> 00:43:15,499
Rev one behavior that's red one or no no

891
00:43:12,650 --> 00:43:17,569
no it's under the moment is undefined

892
00:43:15,499 --> 00:43:22,459
we're now saying there will be three

893
00:43:17,569 --> 00:43:27,560
things in Rev to search search

894
00:43:22,460 --> 00:43:29,420
substring and search fuzzy searches

895
00:43:27,560 --> 00:43:31,040
Revlon behavior which is what you define

896
00:43:29,420 --> 00:43:34,250
whatever this which is whatever the

897
00:43:31,040 --> 00:43:35,900
server does with that search now there

898
00:43:34,250 --> 00:43:39,770
certainly can be a recommendation in

899
00:43:35,900 --> 00:43:42,860
there that the search for any header

900
00:43:39,770 --> 00:43:45,710
fields that are not freeform text better

901
00:43:42,860 --> 00:43:48,050
not be fuzzy by default as well as kind

902
00:43:45,710 --> 00:43:50,090
of field you don't recognize just do it

903
00:43:48,050 --> 00:43:52,310
yeah right well that's the sort of thing

904
00:43:50,090 --> 00:43:55,310
I would like to do yes happy to say that

905
00:43:52,310 --> 00:43:59,180
but but that should just be at a non

906
00:43:55,310 --> 00:44:00,440
normative recommendation level and and

907
00:43:59,180 --> 00:44:02,899
if you want a non normative

908
00:44:00,440 --> 00:44:05,690
recommendation level on the client side

909
00:44:02,900 --> 00:44:07,610
say clients should always specify

910
00:44:05,690 --> 00:44:10,460
whether they want sub string or fuzzy

911
00:44:07,610 --> 00:44:11,840
because the other do the other behavior

912
00:44:10,460 --> 00:44:14,690
is undefined

913
00:44:11,840 --> 00:44:18,230
the server decides well and for the most

914
00:44:14,690 --> 00:44:19,940
part that's okay there most searches

915
00:44:18,230 --> 00:44:23,420
that are at least searches that are

916
00:44:19,940 --> 00:44:25,490
generated by the end user do they work

917
00:44:23,420 --> 00:44:27,590
the way they work the user gets what the

918
00:44:25,490 --> 00:44:29,450
user gets and they've always sometimes

919
00:44:27,590 --> 00:44:32,000
the user gets annoyed I get annoyed

920
00:44:29,450 --> 00:44:33,890
right now from Outlook because it does

921
00:44:32,000 --> 00:44:35,960
not filter my messages the way I want

922
00:44:33,890 --> 00:44:36,490
them to and I don't know why but there

923
00:44:35,960 --> 00:44:41,600
it is

924
00:44:36,490 --> 00:44:43,430
but you know yeah I mean the other

925
00:44:41,600 --> 00:44:46,040
incident again the other advice though

926
00:44:43,430 --> 00:44:49,009
tip to clients is if you start parsing

927
00:44:46,040 --> 00:44:50,630
explicitly for substring body things

928
00:44:49,010 --> 00:44:52,550
like that the server's probably and say

929
00:44:50,630 --> 00:44:55,310
no or may well because it's just too

930
00:44:52,550 --> 00:44:57,650
expensive as I said look notice notes

931
00:44:55,310 --> 00:44:59,930
has a an index of the message and

932
00:44:57,650 --> 00:45:02,900
there's no way in its index to

933
00:44:59,930 --> 00:45:06,950
distinguish surf from surfed from

934
00:45:02,900 --> 00:45:16,880
surfing and from surfer it can't do it

935
00:45:06,950 --> 00:45:19,879
so dude what are cognates anyway so

936
00:45:16,880 --> 00:45:21,440
we're we are just to recap where we are

937
00:45:19,880 --> 00:45:24,200
as we so I think we'll do

938
00:45:21,440 --> 00:45:29,090
recommendations for servers on the

939
00:45:24,200 --> 00:45:33,339
header field search informative but you

940
00:45:29,090 --> 00:45:34,850
know encouraging and then we might add

941
00:45:33,340 --> 00:45:38,750
substring

942
00:45:34,850 --> 00:45:40,640
and fuzzy as options but I think this is

943
00:45:38,750 --> 00:45:43,190
subject to actually cashing it out and

944
00:45:40,640 --> 00:45:47,299
seeing examples well I think we put it

945
00:45:43,190 --> 00:45:50,750
in we can say that servers servers may

946
00:45:47,300 --> 00:45:55,790
return no if they don't support one or

947
00:45:50,750 --> 00:45:58,340
the other this is slightly more

948
00:45:55,790 --> 00:46:00,170
experimental than now oh yeah let's see

949
00:45:58,340 --> 00:46:03,650
the text and maybe if we can't agree on

950
00:46:00,170 --> 00:46:05,900
that will but the mine settings in f1 it

951
00:46:03,650 --> 00:46:07,370
is explicitly substring searching for

952
00:46:05,900 --> 00:46:09,320
everything except that's just ignored

953
00:46:07,370 --> 00:46:11,750
and so yes we're changing the text but

954
00:46:09,320 --> 00:46:14,480
just to match reality yes actually it is

955
00:46:11,750 --> 00:46:16,070
true yes yeah but also specifying a way

956
00:46:14,480 --> 00:46:18,380
to say no really really give me what Rev

957
00:46:16,070 --> 00:46:20,330
one said or tell me you know right but

958
00:46:18,380 --> 00:46:22,040
you have they have to be able to say no

959
00:46:20,330 --> 00:46:25,310
because if you go to a Lotus Notes

960
00:46:22,040 --> 00:46:28,550
server and say search substring on the

961
00:46:25,310 --> 00:46:33,170
body it's going to say no or it's gonna

962
00:46:28,550 --> 00:46:35,660
lie what are the other so so I think we

963
00:46:33,170 --> 00:46:38,090
need it to be able to say no we'll talk

964
00:46:35,660 --> 00:46:39,620
about it yeah so you probably don't need

965
00:46:38,090 --> 00:46:40,770
to protect her my suggestion of search

966
00:46:39,620 --> 00:46:46,000
regex

967
00:46:40,770 --> 00:46:46,000
[Laughter]

968
00:46:49,120 --> 00:46:56,450
right this this is the slide which I

969
00:46:54,410 --> 00:46:58,190
presented last time and unfortunately I

970
00:46:56,450 --> 00:47:02,419
don't remember answer to aid of these

971
00:46:58,190 --> 00:47:07,250
questions so one question was whether we

972
00:47:02,420 --> 00:47:09,440
want to fold in search for us which is

973
00:47:07,250 --> 00:47:12,140
basically allow allow you to pipeline

974
00:47:09,440 --> 00:47:15,500
several commands by saying search for

975
00:47:12,140 --> 00:47:26,720
this do this with the results like copy

976
00:47:15,500 --> 00:47:30,130
you know move there I took comprehensive

977
00:47:26,720 --> 00:47:30,129
minutes I'm finding them now

978
00:47:32,560 --> 00:47:36,759
I vaguely remember I think people are

979
00:47:34,990 --> 00:47:39,180
more supportive for this but I am not

980
00:47:36,760 --> 00:47:39,180
entirely sure

981
00:47:48,850 --> 00:47:53,080
hmm maybe I didn't take comprehensive

982
00:47:51,190 --> 00:47:56,620
notes on that bit search res include yes

983
00:47:53,080 --> 00:48:00,460
there it is so we said include lust so

984
00:47:56,620 --> 00:48:05,529
people happy to include this yes last

985
00:48:00,460 --> 00:48:10,150
chance okay we'll do that and the second

986
00:48:05,530 --> 00:48:14,350
part is state is deleted which is number

987
00:48:10,150 --> 00:48:18,820
of messages with deleted flag the use

988
00:48:14,350 --> 00:48:20,920
case for this is quota type thing if you

989
00:48:18,820 --> 00:48:25,420
know if you know box is getting close to

990
00:48:20,920 --> 00:48:30,730
quarter if you know expunge it this is

991
00:48:25,420 --> 00:48:33,790
how much you can regain I think it might

992
00:48:30,730 --> 00:48:39,010
be useful but how do people think about

993
00:48:33,790 --> 00:48:45,730
this one I'm happy with it as a server

994
00:48:39,010 --> 00:48:47,830
implemented it's not hard to add okay we

995
00:48:45,730 --> 00:48:50,830
would add a field to the status cache

996
00:48:47,830 --> 00:48:52,779
it's right simple right I can't imagine

997
00:48:50,830 --> 00:48:58,270
wanting to use it but it's so easy to

998
00:48:52,780 --> 00:49:00,670
implement that I don't care okay right

999
00:48:58,270 --> 00:49:02,980
okay in this case let's do condition

1000
00:49:00,670 --> 00:49:04,930
include items people really object to it

1001
00:49:02,980 --> 00:49:12,000
we can take it out it's it's a small

1002
00:49:04,930 --> 00:49:14,259
small work anyway right this is the plan

1003
00:49:12,000 --> 00:49:18,940
depends on editors doing what's

1004
00:49:14,260 --> 00:49:20,080
obviously but we'll do editing session

1005
00:49:18,940 --> 00:49:23,440
with Barry

1006
00:49:20,080 --> 00:49:26,500
this week we'll add the remaining few

1007
00:49:23,440 --> 00:49:31,150
bits like status list is probably the

1008
00:49:26,500 --> 00:49:37,720
biggest change some such related changes

1009
00:49:31,150 --> 00:49:40,780
as discussed I'll go over and Barry over

1010
00:49:37,720 --> 00:49:43,509
comments from Timur and aren't make sure

1011
00:49:40,780 --> 00:49:48,760
that they all address some of them I

1012
00:49:43,510 --> 00:49:52,870
think most of them were accepted some of

1013
00:49:48,760 --> 00:49:54,570
them were rejected in some cases is

1014
00:49:52,870 --> 00:49:57,460
probably just replying to Jemma saying

1015
00:49:54,570 --> 00:50:01,750
no we decided not to do this because so

1016
00:49:57,460 --> 00:50:02,530
just to get done and I would really like

1017
00:50:01,750 --> 00:50:08,130
to do working

1018
00:50:02,530 --> 00:50:08,130
last call before Christmas all right

1019
00:50:10,260 --> 00:50:20,530
so if things go well then we can send

1020
00:50:15,000 --> 00:50:22,300
ask Adam our third call Co AG to sponsor

1021
00:50:20,530 --> 00:50:24,670
it because both Baron myself I

1022
00:50:22,300 --> 00:50:27,540
implicated yeah and hopefully he can do

1023
00:50:24,670 --> 00:50:30,040
it in the last two and a half months

1024
00:50:27,540 --> 00:50:33,850
nice G alright

1025
00:50:30,040 --> 00:50:35,410
I am hesitate to raise it but I would

1026
00:50:33,850 --> 00:50:40,750
love to say okay kai they go in

1027
00:50:35,410 --> 00:50:42,430
I know it's we've gone backwards and

1028
00:50:40,750 --> 00:50:45,010
forwards on this a few times I had an

1029
00:50:42,430 --> 00:50:49,470
interesting chat with the Gmail API team

1030
00:50:45,010 --> 00:50:52,960
recently in which there came to do it so

1031
00:50:49,470 --> 00:50:56,470
if it seems most servers have some kind

1032
00:50:52,960 --> 00:50:58,990
of unique IDs for objects internally for

1033
00:50:56,470 --> 00:51:01,480
mailboxes and for messages if we can

1034
00:50:58,990 --> 00:51:05,950
have a way to expose that in a standard

1035
00:51:01,480 --> 00:51:08,950
manner then we do have a yeah but if we

1036
00:51:05,950 --> 00:51:11,890
if we have it as part of the this they

1037
00:51:08,950 --> 00:51:13,509
standard and this is the only thing that

1038
00:51:11,890 --> 00:51:16,180
my server doesn't do but I actually

1039
00:51:13,510 --> 00:51:17,860
don't object yeah if you want if you

1040
00:51:16,180 --> 00:51:20,919
want to make this argument do it quickly

1041
00:51:17,860 --> 00:51:22,810
all right there are any argument in

1042
00:51:20,920 --> 00:51:24,220
favor of object IDs it gives you a lot

1043
00:51:22,810 --> 00:51:26,320
of caching ability that you don't have

1044
00:51:24,220 --> 00:51:28,629
otherwise yeah it makes it much easier

1045
00:51:26,320 --> 00:51:31,050
to track across multiple row names and

1046
00:51:28,630 --> 00:51:34,090
emails between different mailboxes yeah

1047
00:51:31,050 --> 00:51:35,500
the argument against this array is it is

1048
00:51:34,090 --> 00:51:39,820
a requirement on the server that it

1049
00:51:35,500 --> 00:51:41,770
doesn't currently have and hence men mix

1050
00:51:39,820 --> 00:51:43,900
makes it more work to support IMAP

1051
00:51:41,770 --> 00:51:48,730
forever - you know it doesn't already

1052
00:51:43,900 --> 00:51:50,260
have it will discourage adoption of an

1053
00:51:48,730 --> 00:51:53,380
app for Revit or will it encourage

1054
00:51:50,260 --> 00:52:01,060
adoption of object ID that's that that's

1055
00:51:53,380 --> 00:52:05,590
the trade-off question there I would say

1056
00:52:01,060 --> 00:52:07,870
if people like Chris Newman and Timo say

1057
00:52:05,590 --> 00:52:10,720
that they're happy with inclusion after

1058
00:52:07,870 --> 00:52:15,009
that probably yes a slightly higher bar

1059
00:52:10,720 --> 00:52:16,209
but it's - other implementations not in

1060
00:52:15,010 --> 00:52:20,690
the room

1061
00:52:16,210 --> 00:52:27,859
that might be good enough or I will I

1062
00:52:20,690 --> 00:52:29,510
will email and ask them about that yeah

1063
00:52:27,859 --> 00:52:31,310
what would it be for your Lexie since

1064
00:52:29,510 --> 00:52:34,310
your server obviously one that doesn't

1065
00:52:31,310 --> 00:52:38,750
support at the moment do you have a

1066
00:52:34,310 --> 00:52:41,410
space to store new IDs or how would you

1067
00:52:38,750 --> 00:52:43,970
how would you go about it

1068
00:52:41,410 --> 00:52:45,020
hmm don't know I need to design

1069
00:52:43,970 --> 00:52:48,049
something yeah

1070
00:52:45,020 --> 00:52:51,470
ours is cash plus file system based

1071
00:52:48,050 --> 00:52:55,580
stuff as in be used file names for

1072
00:52:51,470 --> 00:52:57,350
storing various information so yeah so

1073
00:52:55,580 --> 00:53:01,720
short of embedding inodes or something

1074
00:52:57,350 --> 00:53:01,720
in there it becomes tricky to to track

1075
00:53:03,609 --> 00:53:09,890
when there is you can do a poor man's

1076
00:53:06,280 --> 00:53:11,920
mailbox ID just by using the hash of the

1077
00:53:09,890 --> 00:53:14,690
mailbox name and the UID of Liberty and

1078
00:53:11,920 --> 00:53:16,280
then it changes when you rename it so

1079
00:53:14,690 --> 00:53:20,480
you don't actually detect it's the same

1080
00:53:16,280 --> 00:53:22,700
mailbox but well that's thing if yes if

1081
00:53:20,480 --> 00:53:24,800
that would make it much easier then I

1082
00:53:22,700 --> 00:53:26,750
can basically implement it thank you and

1083
00:53:24,800 --> 00:53:29,420
you do the poor man's email ID by

1084
00:53:26,750 --> 00:53:32,510
hashing the mailbox you if you rd

1085
00:53:29,420 --> 00:53:34,430
validity and UID and again it's it never

1086
00:53:32,510 --> 00:53:36,880
you lose all the benefits but you still

1087
00:53:34,430 --> 00:53:36,879
have a thing

1088
00:53:52,750 --> 00:53:57,380
okay well I'm brown you're going to send

1089
00:53:55,790 --> 00:54:02,000
a message to the meaning they said about

1090
00:53:57,380 --> 00:54:06,520
and do mention the the second part of

1091
00:54:02,000 --> 00:54:09,140
possible hack to do it yes

1092
00:54:06,520 --> 00:54:12,829
protocol compliant but doesn't get a

1093
00:54:09,140 --> 00:54:22,759
full benefit I think that might be yeah

1094
00:54:12,829 --> 00:54:26,630
good enough cool alright and next topic

1095
00:54:22,760 --> 00:54:31,640
was quota which I completely forgot

1096
00:54:26,630 --> 00:54:36,349
about my first question was has anybody

1097
00:54:31,640 --> 00:54:37,069
read the draft and that's roughly what I

1098
00:54:36,349 --> 00:54:41,180
did as well

1099
00:54:37,069 --> 00:54:42,890
glanced at it do we need to do an

1100
00:54:41,180 --> 00:54:45,379
additional quota type for annotation

1101
00:54:42,890 --> 00:54:46,819
storage separate from mail storage or

1102
00:54:45,380 --> 00:54:50,990
should you just combine all that into

1103
00:54:46,819 --> 00:54:55,420
storage if you're I don't mind if you

1104
00:54:50,990 --> 00:54:57,649
can have a compelling use case and we

1105
00:54:55,420 --> 00:54:59,690
accounting it separately in our server

1106
00:54:57,650 --> 00:55:03,280
at the moment but there's no particular

1107
00:54:59,690 --> 00:55:03,280
reason to do one way or the other

1108
00:55:03,910 --> 00:55:08,149
yeah basically the problem with the

1109
00:55:06,079 --> 00:55:10,250
original spec it was under specified it

1110
00:55:08,150 --> 00:55:13,430
was making certain things it made

1111
00:55:10,250 --> 00:55:16,460
everything an example yeah we're now we

1112
00:55:13,430 --> 00:55:18,259
are creating a registry of these I think

1113
00:55:16,460 --> 00:55:20,619
there are like two or three things which

1114
00:55:18,260 --> 00:55:23,299
are more likely to be implemented as

1115
00:55:20,619 --> 00:55:25,160
long as you know it's easy to add to the

1116
00:55:23,299 --> 00:55:26,690
register on the ID I mean the other

1117
00:55:25,160 --> 00:55:28,790
thing that would be lovely to do is

1118
00:55:26,690 --> 00:55:34,130
switch to 63 bit types and get rid of

1119
00:55:28,790 --> 00:55:41,480
the storage being in 1024 octet counts

1120
00:55:34,130 --> 00:55:44,000
and just store raw octet but just sayin

1121
00:55:41,480 --> 00:55:45,849
G widen round up yeah that's not a big

1122
00:55:44,000 --> 00:55:47,660
deal is it that's not not particularly

1123
00:55:45,849 --> 00:55:49,430
but you need to store everything

1124
00:55:47,660 --> 00:55:51,980
internally and then remember this this

1125
00:55:49,430 --> 00:55:55,430
type gets a conversion applied whereas

1126
00:55:51,980 --> 00:55:58,960
the others of exact counters not a big

1127
00:55:55,430 --> 00:55:58,960
deal it's just annoying

1128
00:56:00,930 --> 00:56:08,200
send email on this just as a yeah I am

1129
00:56:05,880 --> 00:56:10,600
personally I'm undecided that's the

1130
00:56:08,200 --> 00:56:14,770
first time I've heard about it so I want

1131
00:56:10,600 --> 00:56:16,319
to give you a fair chance to defend your

1132
00:56:14,770 --> 00:56:22,960
argument

1133
00:56:16,320 --> 00:56:25,690
it's cleaner well not yeah I don't just

1134
00:56:22,960 --> 00:56:27,160
say it's cleaner yeah that's not just

1135
00:56:25,690 --> 00:56:28,990
because it's going to break resistant

1136
00:56:27,160 --> 00:56:39,370
stuff but you have to break this stuff

1137
00:56:28,990 --> 00:56:42,790
just just because in theory I suppose we

1138
00:56:39,370 --> 00:56:45,069
can say that for current commonly used

1139
00:56:42,790 --> 00:56:48,759
quota types we just have to be in

1140
00:56:45,070 --> 00:56:51,220
kilobytes to karazisis implementations

1141
00:56:48,760 --> 00:56:53,980
but let's say if you want to annotation

1142
00:56:51,220 --> 00:56:57,310
storage we can say it can be bytes yeah

1143
00:56:53,980 --> 00:57:00,220
we as in we do annotation storages

1144
00:56:57,310 --> 00:57:05,940
kilobytes as well because it's this it's

1145
00:57:00,220 --> 00:57:09,250
a storage type right well yeah okay and

1146
00:57:05,940 --> 00:57:15,180
do we want to explicitly say that all

1147
00:57:09,250 --> 00:57:17,950
the types are in our 32-bit types or I

1148
00:57:15,180 --> 00:57:23,020
think they're all 32-bit numbers at the

1149
00:57:17,950 --> 00:57:27,299
moment in the draft so yeah at the

1150
00:57:23,020 --> 00:57:30,040
moment 32 bits four kilobytes this is a

1151
00:57:27,300 --> 00:57:33,280
relatively reasonable number and we

1152
00:57:30,040 --> 00:57:34,380
don't do anything bigger than 4

1153
00:57:33,280 --> 00:57:38,080
gigabytes

1154
00:57:34,380 --> 00:57:42,660
well limits for messages is 4 we go

1155
00:57:38,080 --> 00:57:42,660
bytes right and I'm up yeah

1156
00:57:52,650 --> 00:58:02,980
that's quite live messages at the moment

1157
00:58:00,640 --> 00:58:06,279
again I'm a bit ambivalent if there is a

1158
00:58:02,980 --> 00:58:10,780
need for this huge sizes if you have a

1159
00:58:06,280 --> 00:58:13,570
compelling use case then yeah not really

1160
00:58:10,780 --> 00:58:16,420
thanks Rob the thing to look at but no

1161
00:58:13,570 --> 00:58:17,340
we can't answer you know then yeah all

1162
00:58:16,420 --> 00:58:21,960
right

1163
00:58:17,340 --> 00:58:28,380
ac so we'll see I guess plan in terms of

1164
00:58:21,960 --> 00:58:32,380
getting this out getting it published I

1165
00:58:28,380 --> 00:58:36,580
think at this point I would like more of

1166
00:58:32,380 --> 00:58:41,290
use the base document is in the

1167
00:58:36,580 --> 00:58:43,060
reasonable shape I think already in

1168
00:58:41,290 --> 00:58:44,500
there are any comments in the document

1169
00:58:43,060 --> 00:58:50,980
and people should comment on the

1170
00:58:44,500 --> 00:58:52,780
comments and so yeah I'm happy to do do

1171
00:58:50,980 --> 00:58:55,870
do this as quickly as possible after I'm

1172
00:58:52,780 --> 00:59:01,120
up for f2 but I'll concentrate on I'm up

1173
00:58:55,870 --> 00:59:06,850
for f2 first cool so goal of February

1174
00:59:01,120 --> 00:59:09,670
next year then if you like yes MA well

1175
00:59:06,850 --> 00:59:17,520
well Barry will be a July AG sponsoring

1176
00:59:09,670 --> 00:59:20,290
it by that time so which is fine yes

1177
00:59:17,520 --> 00:59:21,130
well you still sort of AG sponsoring but

1178
00:59:20,290 --> 00:59:26,680
I know what you mean

1179
00:59:21,130 --> 00:59:31,060
yes all right these are the milestones

1180
00:59:26,680 --> 00:59:33,220
we have now I'm at 4:02 obviously it's

1181
00:59:31,060 --> 00:59:37,240
being delayed till December update

1182
00:59:33,220 --> 00:59:39,640
Charter have you had any time to think

1183
00:59:37,240 --> 00:59:42,000
since this morning we've got one minute

1184
00:59:39,640 --> 00:59:45,279
left so

1185
00:59:42,000 --> 00:59:48,040
maybe we will discuss that Charter oh I

1186
00:59:45,280 --> 00:59:50,050
know it's horrible but I almost feel

1187
00:59:48,040 --> 00:59:53,529
it's better fit for Jay maps and for

1188
00:59:50,050 --> 00:59:56,590
extra okay because Jamie Pollard you

1189
00:59:53,530 --> 00:59:59,589
tomorrow lies on push notifications its

1190
00:59:56,590 --> 01:00:01,539
initial I know who are trying to

1191
00:59:59,589 --> 01:00:03,939
all the little bits there but I'd make

1192
01:00:01,539 --> 01:00:06,039
my immense EMF is pretty busy extra it's

1193
01:00:03,939 --> 01:00:13,239
gonna be very quiet once these two a gun

1194
01:00:06,039 --> 01:00:15,430
or three let's get these things done and

1195
01:00:13,239 --> 01:00:18,219
then we can let's do that all right I

1196
01:00:15,430 --> 01:00:21,930
will reduce cuss at charter in April

1197
01:00:18,219 --> 01:00:21,930
2020 and just bump that a year

1198
01:00:22,360 --> 01:00:25,110
really

1199
01:00:26,890 --> 01:00:35,960
I'm at four over two will be December

1200
01:00:30,339 --> 01:00:39,470
quota will be adopt has been done here I

1201
01:00:35,960 --> 01:00:46,599
was sieve there's I believe nothing's

1202
01:00:39,470 --> 01:00:52,578
been done on that no if you say it's May

1203
01:00:46,599 --> 01:00:54,619
2020 that's probably fair because then I

1204
01:00:52,579 --> 01:00:57,109
can probably volunteer to do something

1205
01:00:54,619 --> 01:01:03,680
about it well before I I didn't know

1206
01:00:57,109 --> 01:01:04,308
whether who wants to work on it all

1207
01:01:03,680 --> 01:01:07,220
right

1208
01:01:04,309 --> 01:01:11,049
and the preview draft we're expecting to

1209
01:01:07,220 --> 01:01:13,669
send off to ISJ in december as well yes

1210
01:01:11,049 --> 01:01:19,038
yeah Duke very quick last call on the

1211
01:01:13,670 --> 01:01:22,670
updated syntax once we see it cool with

1212
01:01:19,039 --> 01:01:25,549
that is G I can just say look this thing

1213
01:01:22,670 --> 01:01:27,980
changed to that thing do people care or

1214
01:01:25,549 --> 01:01:32,779
you just trust us that it's fine yeah

1215
01:01:27,980 --> 01:01:36,470
and see because not nobody other than

1216
01:01:32,779 --> 01:01:39,710
Barry have any serious comments on the

1217
01:01:36,470 --> 01:01:41,930
document anyway so but I will ask for IG

1218
01:01:39,710 --> 01:01:44,950
yeah oh it's Eve with Stefan Bosch

1219
01:01:41,930 --> 01:01:47,538
responsible for that asks Michael and

1220
01:01:44,950 --> 01:01:53,328
Michael church team about object ID as

1221
01:01:47,539 --> 01:02:07,039
well it sounds great cool all right I

1222
01:01:53,329 --> 01:02:09,230
will follow up with Stefan done we're at

1223
01:02:07,039 --> 01:02:11,299
a time that's it thanks everybody if

1224
01:02:09,230 --> 01:02:17,119
you've got any other business LLC in

1225
01:02:11,299 --> 01:02:23,779
Vancouver or on the list awesome

1226
01:02:17,119 --> 01:02:25,210
who has two blue sheets will I will find

1227
01:02:23,779 --> 01:02:28,400
them and take them off

1228
01:02:25,210 --> 01:02:32,650
awesome thanks everybody thank you

1229
01:02:28,400 --> 01:02:32,650
remote people game over

1230
01:02:33,150 --> 01:02:38,750
[Music]

1231
01:02:36,100 --> 01:02:59,960
yes but Huff a little Kevin signed it

1232
01:02:38,750 --> 01:03:14,360
yes on you the shapes you'll pull the

1233
01:02:59,960 --> 01:03:16,930
blue sheets not like another meeting

1234
01:03:14,360 --> 01:03:16,930
another group

