1
00:00:05,639 --> 00:00:19,330
okay guys that's yeah we need to get

2
00:00:13,840 --> 00:00:21,640
started and it at the moment Donnelly so

3
00:00:19,330 --> 00:00:23,349
the bridge so welcome to ours working

4
00:00:21,640 --> 00:00:24,490
group meeting I handed out the blue

5
00:00:23,350 --> 00:00:28,270
sheets already so they should be

6
00:00:24,490 --> 00:00:30,640
circulating around please sign Tony is

7
00:00:28,270 --> 00:00:34,000
kindly doing the meeting minutes do we

8
00:00:30,640 --> 00:00:39,100
have someone logging into Tony you don't

9
00:00:34,000 --> 00:00:42,069
know what I'm talking about do we have

10
00:00:39,100 --> 00:00:47,109
someone who could log into Java and and

11
00:00:42,069 --> 00:01:02,679
see where as someone is online please

12
00:00:47,109 --> 00:01:04,569
just just checking its lutely can you

13
00:01:02,679 --> 00:01:07,750
log into Java to see what anyone is

14
00:01:04,569 --> 00:01:16,270
online and has some questions awesome

15
00:01:07,750 --> 00:01:22,000
Thank You Ludwig is doing that this is

16
00:01:16,270 --> 00:01:24,070
the agenda for today we quickly have a

17
00:01:22,000 --> 00:01:26,980
look at the working group documents in

18
00:01:24,070 --> 00:01:29,020
terms of status and Roman sitting next

19
00:01:26,980 --> 00:01:31,810
to me will give you also a short update

20
00:01:29,020 --> 00:01:33,670
on those we had a virtual interim

21
00:01:31,810 --> 00:01:36,310
meeting not too long ago what we

22
00:01:33,670 --> 00:01:37,900
actually ran through those and sort of

23
00:01:36,310 --> 00:01:41,740
checked the status so we are moving

24
00:01:37,900 --> 00:01:44,200
things along pretty nicely then we have

25
00:01:41,740 --> 00:01:46,300
a discussion about the our security

26
00:01:44,200 --> 00:01:48,700
topics which is in working group last

27
00:01:46,300 --> 00:01:51,340
call and you've seen the emails flying

28
00:01:48,700 --> 00:01:55,240
around Aaron will talk about the browser

29
00:01:51,340 --> 00:01:57,670
based apps PCP we didn't have that was a

30
00:01:55,240 --> 00:02:01,810
China bashing thing Oh Aaron also wants

31
00:01:57,670 --> 00:02:05,620
to talk about OS 2.1 we also didn't have

32
00:02:01,810 --> 00:02:14,019
the transactional OS off update which

33
00:02:05,620 --> 00:02:15,629
was the buff happened yesterday Monday

34
00:02:14,019 --> 00:02:18,890
Monday

35
00:02:15,629 --> 00:02:21,450
and then finally we do the d pop

36
00:02:18,890 --> 00:02:27,238
presentation and then we have more

37
00:02:21,450 --> 00:02:37,768
topics to talk about on first-date okay

38
00:02:27,239 --> 00:02:40,470
let's jump over to do the documents hi

39
00:02:37,769 --> 00:02:41,670
yeah so again I'm helping out here since

40
00:02:40,470 --> 00:02:44,459
Rafa couldn't make it

41
00:02:41,670 --> 00:02:47,638
we have a bunch of documents with the is

42
00:02:44,459 --> 00:02:51,480
G or past that process so we have to in

43
00:02:47,639 --> 00:02:53,189
is G evaluation there are some blocking

44
00:02:51,480 --> 00:02:55,530
discussed positions that those

45
00:02:53,189 --> 00:02:57,299
particular ATS know that they need to

46
00:02:55,530 --> 00:02:59,220
resolve I have kind of spoken with them

47
00:02:57,299 --> 00:03:01,079
and they're committed to looking at them

48
00:02:59,220 --> 00:03:03,540
I'm trying to press them to accelerate

49
00:03:01,079 --> 00:03:06,030
that review likewise we have several

50
00:03:03,540 --> 00:03:07,739
documents already in the RFC editor

51
00:03:06,030 --> 00:03:09,389
queue and so they are making their way

52
00:03:07,739 --> 00:03:19,470
through the process required for

53
00:03:09,389 --> 00:03:21,329
publication any questions on that there

54
00:03:19,470 --> 00:03:23,400
are all sorts of other there's a whole

55
00:03:21,329 --> 00:03:24,659
kind of set of statistics I could I mean

56
00:03:23,400 --> 00:03:26,909
I can try to point or to if that's of

57
00:03:24,659 --> 00:03:30,120
interest we're in the midst of the big

58
00:03:26,909 --> 00:03:38,250
v3 transition and that is impacted

59
00:03:30,120 --> 00:03:41,639
production to some degree but okay we

60
00:03:38,250 --> 00:03:44,760
are going to see through three documents

61
00:03:41,639 --> 00:03:47,129
coming out of that queue sometime soon

62
00:03:44,760 --> 00:03:49,649
so things are good so besides those some

63
00:03:47,129 --> 00:03:51,328
sort of agenda changes to what we have

64
00:03:49,650 --> 00:03:53,760
initially submitted is there anything

65
00:03:51,329 --> 00:04:00,079
you guys want to bring up in terms of

66
00:03:53,760 --> 00:04:00,078
agenda bashing okay

67
00:04:26,960 --> 00:04:29,948
yeah

68
00:04:39,389 --> 00:04:44,449
- Austin Wesley

69
00:04:54,230 --> 00:04:59,940
hi ah slow-roasted yes calm I'm gonna

70
00:04:58,320 --> 00:05:06,540
present about his current status of the

71
00:04:59,940 --> 00:05:11,370
security BCP Hanna's just mentioned

72
00:05:06,540 --> 00:05:15,060
there was a call on 4th of November or

73
00:05:11,370 --> 00:05:20,430
we talked about how we move that draft

74
00:05:15,060 --> 00:05:22,680
forward since there was a attack being

75
00:05:20,430 --> 00:05:24,990
described and mentioned in the wharf

76
00:05:22,680 --> 00:05:26,760
session in Montreal it's the pixie shows

77
00:05:24,990 --> 00:05:31,440
and challenged attack the question was

78
00:05:26,760 --> 00:05:34,620
whether we want to wait till a solution

79
00:05:31,440 --> 00:05:37,340
is being found for that kind of attack

80
00:05:34,620 --> 00:05:41,400
or whether we push the BCP forward and

81
00:05:37,340 --> 00:05:45,510
publish it the same thing in the call

82
00:05:41,400 --> 00:05:47,849
was there is a lot of good stuff in the

83
00:05:45,510 --> 00:05:51,050
PCP right now as it is right now so we

84
00:05:47,850 --> 00:05:53,430
should move that forward and

85
00:05:51,050 --> 00:05:55,680
subsequently start on the new version of

86
00:05:53,430 --> 00:05:59,060
the PCP which will also incorporate the

87
00:05:55,680 --> 00:06:03,750
pixie shows and challenge attack and

88
00:05:59,060 --> 00:06:05,610
that's why the chairs ask or how to say

89
00:06:03,750 --> 00:06:09,630
that announced we're going to ask all I

90
00:06:05,610 --> 00:06:11,880
could sir sin on 6th of November and

91
00:06:09,630 --> 00:06:14,310
since that time a lot of people are

92
00:06:11,880 --> 00:06:19,760
reviewed the PCP thank you very much for

93
00:06:14,310 --> 00:06:25,110
that most most feedback was editorial

94
00:06:19,760 --> 00:06:27,630
hans and also met mike put up some some

95
00:06:25,110 --> 00:06:30,360
topics that were not addressed earlier

96
00:06:27,630 --> 00:06:34,230
but normative we will take a look into

97
00:06:30,360 --> 00:06:36,180
that thanks for that Mike there was also

98
00:06:34,230 --> 00:06:38,730
the Alice and Bob collusion attack bro

99
00:06:36,180 --> 00:06:40,680
brought up again that we discussed about

100
00:06:38,730 --> 00:06:43,980
I think two years ago and decided it's

101
00:06:40,680 --> 00:06:48,360
out of scope for dbcp there's one open

102
00:06:43,980 --> 00:06:50,340
issue the tons raised I will talk about

103
00:06:48,360 --> 00:06:52,740
that in the last slide because I just

104
00:06:50,340 --> 00:06:58,260
want to get through and then we have

105
00:06:52,740 --> 00:07:02,610
time to talk about this or chairs asked

106
00:06:58,260 --> 00:07:05,370
me to come up with a list of people that

107
00:07:02,610 --> 00:07:08,730
already used the security PCP have

108
00:07:05,370 --> 00:07:13,460
reviewed the BCP like the BCP and dr.

109
00:07:08,730 --> 00:07:17,669
PCP so this slide is contains a list of

110
00:07:13,460 --> 00:07:20,638
communities people companies I'm aware

111
00:07:17,669 --> 00:07:23,039
of that already used the security PCP

112
00:07:20,639 --> 00:07:25,620
just to to underpin the importance of

113
00:07:23,040 --> 00:07:29,610
that work and to get it out of the door

114
00:07:25,620 --> 00:07:31,169
so the start is to start with the

115
00:07:29,610 --> 00:07:34,639
financial grade a PR working group at

116
00:07:31,169 --> 00:07:34,639
the Open ID Foundation which does

117
00:07:34,760 --> 00:07:42,360
security profiles for security sensitive

118
00:07:37,169 --> 00:07:44,909
applications right you're already coming

119
00:07:42,360 --> 00:07:48,450
up Tony what's what's wrong just a

120
00:07:44,910 --> 00:07:51,350
clarification when you say using the PCP

121
00:07:48,450 --> 00:07:53,820
is this all of it or parts of it or I

122
00:07:51,350 --> 00:07:59,729
don't know that sound just need some

123
00:07:53,820 --> 00:08:01,620
clarification really they like the

124
00:07:59,729 --> 00:08:09,300
recommendation all the recommendations

125
00:08:01,620 --> 00:08:13,590
that we give in the PCP yes in the sense

126
00:08:09,300 --> 00:08:14,880
they are applicable to their context we

127
00:08:13,590 --> 00:08:17,310
can dig into details if you are

128
00:08:14,880 --> 00:08:19,760
interested I think for the most

129
00:08:17,310 --> 00:08:23,630
important parts which means

130
00:08:19,760 --> 00:08:26,550
authorization code redirect based stuff

131
00:08:23,630 --> 00:08:29,070
sender constraining and so on they are

132
00:08:26,550 --> 00:08:32,580
fully aware of all recommendations and

133
00:08:29,070 --> 00:08:36,260
like them and adopt them and live up to

134
00:08:32,580 --> 00:08:39,779
them does that answer your question

135
00:08:36,260 --> 00:08:41,939
okay as I said that's just a list of

136
00:08:39,779 --> 00:08:44,970
people that that use the security PCP

137
00:08:41,940 --> 00:08:46,740
are you I can put in can put you in

138
00:08:44,970 --> 00:08:50,040
contact with them if you want to talk

139
00:08:46,740 --> 00:08:52,620
about the details as a certified

140
00:08:50,040 --> 00:08:55,740
integrate API working group does

141
00:08:52,620 --> 00:08:57,450
security profiles for off for security

142
00:08:55,740 --> 00:08:59,250
sensitive applications no longer only

143
00:08:57,450 --> 00:09:01,920
for the financial service industry but

144
00:08:59,250 --> 00:09:05,220
also for other areas and then alignment

145
00:09:01,920 --> 00:09:09,229
with the security BCP is is ongoing as

146
00:09:05,220 --> 00:09:11,850
we are speaking then there is one of the

147
00:09:09,230 --> 00:09:15,030
initiatives in the open banking space

148
00:09:11,850 --> 00:09:17,120
which is the next gen PSD - also known

149
00:09:15,030 --> 00:09:19,069
as the Berlin group

150
00:09:17,120 --> 00:09:21,140
and they did recently released the

151
00:09:19,070 --> 00:09:23,170
security bulletins that recommends all

152
00:09:21,140 --> 00:09:27,560
the financial institutions implementing

153
00:09:23,170 --> 00:09:30,740
Olaf as the authorization mode for their

154
00:09:27,560 --> 00:09:33,589
API to consider the security PCP the

155
00:09:30,740 --> 00:09:35,060
follow the security PCP answer also had

156
00:09:33,589 --> 00:09:36,740
discussions with concrete search

157
00:09:35,060 --> 00:09:39,920
providers and financial institutions in

158
00:09:36,740 --> 00:09:44,570
Croatia and Romania that use the

159
00:09:39,920 --> 00:09:48,650
security PCP there's also an project in

160
00:09:44,570 --> 00:09:52,250
Norway in the eHealth space that use and

161
00:09:48,650 --> 00:09:54,980
recommend the security PCP and I also

162
00:09:52,250 --> 00:09:56,390
work with a initiative in the area of

163
00:09:54,980 --> 00:09:59,839
electronic signing and they also

164
00:09:56,390 --> 00:10:02,089
recommend in their specification to use

165
00:09:59,839 --> 00:10:04,010
and follow and align with the security

166
00:10:02,089 --> 00:10:07,880
PCP when implementing and deploying that

167
00:10:04,010 --> 00:10:10,970
API ok

168
00:10:07,880 --> 00:10:13,070
yeah and what you also kind of serve in

169
00:10:10,970 --> 00:10:14,690
for example the twitter space that for

170
00:10:13,070 --> 00:10:17,330
example javascript libraries are going

171
00:10:14,690 --> 00:10:22,670
to adopt or recommendations around using

172
00:10:17,330 --> 00:10:23,630
pixie and codes for s pas and also when

173
00:10:22,670 --> 00:10:25,189
dos starting to adopt their

174
00:10:23,630 --> 00:10:26,540
documentation to follow the

175
00:10:25,190 --> 00:10:29,930
recommendations that we give in the

176
00:10:26,540 --> 00:10:30,980
security pcp hi from engineer i just

177
00:10:29,930 --> 00:10:33,589
wanted to thank you for pulling together

178
00:10:30,980 --> 00:10:36,050
that list it's very often we make drafts

179
00:10:33,589 --> 00:10:38,209
that we label BCP and sometimes it's not

180
00:10:36,050 --> 00:10:39,800
clear the basis of what that experience

181
00:10:38,209 --> 00:10:42,140
is coming from so it's really nice to

182
00:10:39,800 --> 00:10:43,849
see you know see a long list of

183
00:10:42,140 --> 00:10:45,740
organization that's coming from even if

184
00:10:43,850 --> 00:10:47,060
we do have to refine what person what

185
00:10:45,740 --> 00:10:48,589
what the precise mapping is from

186
00:10:47,060 --> 00:10:51,459
organization to kind of right up so

187
00:10:48,589 --> 00:10:51,459
thank you for pulling this together

188
00:10:51,490 --> 00:10:55,490
aaron Preki from octa I just like to

189
00:10:53,990 --> 00:10:57,890
throw one more in to that list which is

190
00:10:55,490 --> 00:11:01,400
octa which has updated the server and

191
00:10:57,890 --> 00:11:03,400
j/s libraries to support auth code and

192
00:11:01,400 --> 00:11:08,569
pixie very single page apps as well

193
00:11:03,400 --> 00:11:10,730
thank you so if they if the chairs want

194
00:11:08,570 --> 00:11:12,800
I mean we can maintain a list um I just

195
00:11:10,730 --> 00:11:15,680
I just wanted to give an example of

196
00:11:12,800 --> 00:11:17,209
communities that I directly work with so

197
00:11:15,680 --> 00:11:19,699
I didn't really reach out the community

198
00:11:17,209 --> 00:11:21,949
to get a complete list I think that

199
00:11:19,700 --> 00:11:23,240
would be much longer absolutely I mean

200
00:11:21,950 --> 00:11:24,740
this would be perfect to include in the

201
00:11:23,240 --> 00:11:26,750
Shepherd write-up if we can if we don't

202
00:11:24,740 --> 00:11:27,980
there I asked all the all the

203
00:11:26,750 --> 00:11:31,010
organizations and people that I

204
00:11:27,980 --> 00:11:32,950
mentioned here explicitly that they are

205
00:11:31,010 --> 00:11:36,620
fine with being used as a testimonial

206
00:11:32,950 --> 00:11:37,970
but it could be like an Aaron's website

207
00:11:36,620 --> 00:11:40,640
they could that could be pretty powerful

208
00:11:37,970 --> 00:11:43,280
like if if vendors and and libraries

209
00:11:40,640 --> 00:11:44,780
indicate support for these type of

210
00:11:43,280 --> 00:11:45,860
things I think that would create also

211
00:11:44,780 --> 00:11:47,750
some pressure on others who don't

212
00:11:45,860 --> 00:11:50,590
support I'm so I think that could be

213
00:11:47,750 --> 00:11:50,590
good sounds reasonable

214
00:11:51,220 --> 00:12:00,280
all right based on the review feedbacks

215
00:11:55,640 --> 00:12:08,000
of horror the editors are planned to

216
00:12:00,280 --> 00:12:11,209
somehow reorganize the BCP to get more

217
00:12:08,000 --> 00:12:13,190
early on to the point where people that

218
00:12:11,210 --> 00:12:14,750
are interested in just getting the

219
00:12:13,190 --> 00:12:16,940
recommendation and following the

220
00:12:14,750 --> 00:12:19,430
recommendation can find the

221
00:12:16,940 --> 00:12:23,870
recommendations meaning we will move the

222
00:12:19,430 --> 00:12:26,540
attacker model one section to the back

223
00:12:23,870 --> 00:12:27,980
and we'll start after the introduction

224
00:12:26,540 --> 00:12:28,819
with the recommendation so people that

225
00:12:27,980 --> 00:12:30,920
are just want to follow the

226
00:12:28,820 --> 00:12:32,810
recommendation have a direct access to

227
00:12:30,920 --> 00:12:35,569
that and we also be rephrased the

228
00:12:32,810 --> 00:12:38,329
introduction are one have to to admit

229
00:12:35,570 --> 00:12:40,460
and keep in mind that the document is in

230
00:12:38,330 --> 00:12:41,510
the end really old so we started to work

231
00:12:40,460 --> 00:12:45,650
on a document early

232
00:12:41,510 --> 00:12:47,689
I think 2016 and it has some ledges to

233
00:12:45,650 --> 00:12:49,430
legend see from that time I did at that

234
00:12:47,690 --> 00:12:51,770
time it was more a kind of a laundry

235
00:12:49,430 --> 00:12:53,810
list of the open topic security topic

236
00:12:51,770 --> 00:12:56,180
see we have and it then developed into a

237
00:12:53,810 --> 00:12:59,119
security PCP so we will clean that up

238
00:12:56,180 --> 00:13:01,370
clean up the language and thanks a lot

239
00:12:59,120 --> 00:13:04,040
especially to hands and and Mike for

240
00:13:01,370 --> 00:13:07,040
really giving a detailed feedback even a

241
00:13:04,040 --> 00:13:09,170
regarding editorial issues so we'll take

242
00:13:07,040 --> 00:13:11,740
us some time but I think we will come up

243
00:13:09,170 --> 00:13:14,719
with a much much better readable

244
00:13:11,740 --> 00:13:17,120
proposal and we will also try to even

245
00:13:14,720 --> 00:13:19,580
make the recommendations more concise

246
00:13:17,120 --> 00:13:23,420
the tons potentially not as concise as

247
00:13:19,580 --> 00:13:26,240
hen's wished but if there is any text

248
00:13:23,420 --> 00:13:32,089
proposal we are happy to consider that

249
00:13:26,240 --> 00:13:34,400
and there is one one outstanding topic

250
00:13:32,090 --> 00:13:36,230
that we didn't integrate yet I think

251
00:13:34,400 --> 00:13:39,949
it's already integrated in the in the

252
00:13:36,230 --> 00:13:42,680
latest version on github which makes

253
00:13:39,950 --> 00:13:44,510
pixie mandatory for the a s it was being

254
00:13:42,680 --> 00:13:44,989
is decided as far as I remember in

255
00:13:44,510 --> 00:13:49,100
Montreal

256
00:13:44,990 --> 00:13:52,149
to make that either by wet

257
00:13:49,100 --> 00:13:54,830
das has implemented IXY and has to

258
00:13:52,149 --> 00:13:57,620
announce that either using metadata or

259
00:13:54,830 --> 00:14:01,490
any other proprietary deployment

260
00:13:57,620 --> 00:14:03,380
specific way right Brian Campbell ping I

261
00:14:01,490 --> 00:14:06,110
did just want to say I strongly agree

262
00:14:03,380 --> 00:14:07,430
with the idea of sort of restructuring

263
00:14:06,110 --> 00:14:09,560
the document with the focus you just

264
00:14:07,430 --> 00:14:11,029
talked about and I do hope to do a last

265
00:14:09,560 --> 00:14:12,979
call review and get it to you but in

266
00:14:11,029 --> 00:14:14,870
case I don't get to it something along

267
00:14:12,980 --> 00:14:16,310
those same lines I think should be

268
00:14:14,870 --> 00:14:17,959
considered is there some reference to

269
00:14:16,310 --> 00:14:20,029
other documents documents that are

270
00:14:17,959 --> 00:14:21,589
expired or just in draft form that are

271
00:14:20,029 --> 00:14:24,500
sort of like see this for more

272
00:14:21,589 --> 00:14:26,390
information - about the mix-up attack or

273
00:14:24,500 --> 00:14:28,580
something and as part of that

274
00:14:26,390 --> 00:14:30,649
restructuring and work on the document

275
00:14:28,580 --> 00:14:33,950
if you could either remove those or

276
00:14:30,649 --> 00:14:36,680
significantly downplay those references

277
00:14:33,950 --> 00:14:39,200
so it's not possible to mistake them for

278
00:14:36,680 --> 00:14:41,180
like normative recommendations if it's

279
00:14:39,200 --> 00:14:43,149
just background I think that would that

280
00:14:41,180 --> 00:14:45,469
would be helpful as part of the overall

281
00:14:43,149 --> 00:14:48,170
restructuring that's one thing that I've

282
00:14:45,470 --> 00:14:49,910
I don't know words too strong of a word

283
00:14:48,170 --> 00:14:52,040
but worried a little bit about in

284
00:14:49,910 --> 00:14:55,010
previous readings of it is is over

285
00:14:52,040 --> 00:14:57,319
emphasis of those sort of stray or dead

286
00:14:55,010 --> 00:15:02,450
end documents yeah okay we'll take a

287
00:14:57,320 --> 00:15:06,279
look into that thank you all right so

288
00:15:02,450 --> 00:15:09,650
and here is the outstanding issue hands

289
00:15:06,279 --> 00:15:12,890
raised the question I should I would

290
00:15:09,650 --> 00:15:16,160
should say again whether the text

291
00:15:12,890 --> 00:15:20,480
regarding implicit should be I should

292
00:15:16,160 --> 00:15:22,400
not or must not and drop Auto directly

293
00:15:20,480 --> 00:15:24,980
supported the proposal to make it a must

294
00:15:22,400 --> 00:15:27,380
on the list yesterday and that's the

295
00:15:24,980 --> 00:15:29,180
reason why I thought I bring it up here

296
00:15:27,380 --> 00:15:31,820
in the session so we can can use the

297
00:15:29,180 --> 00:15:33,790
time to together a feeling about what

298
00:15:31,820 --> 00:15:37,370
the working group thinks about that and

299
00:15:33,790 --> 00:15:42,050
as a supportive measure I put the text

300
00:15:37,370 --> 00:15:46,640
as it can be found in a BCP today on to

301
00:15:42,050 --> 00:15:52,880
the slide a lot of work has been gone

302
00:15:46,640 --> 00:15:56,750
into compiling this statement so if you

303
00:15:52,880 --> 00:16:00,010
want to set up and raise your or expand

304
00:15:56,750 --> 00:16:00,010
your opinion please go ahead

305
00:16:02,500 --> 00:16:08,360
you know what I would like to get across

306
00:16:04,910 --> 00:16:10,459
is and I'm not sure I'm not completely

307
00:16:08,360 --> 00:16:12,889
familiar with the terminology don't have

308
00:16:10,459 --> 00:16:17,109
the microphone with the terminology of

309
00:16:12,889 --> 00:16:20,149
ITF documents and their and the exact

310
00:16:17,110 --> 00:16:22,399
explanation of those terms but I would

311
00:16:20,149 --> 00:16:25,190
like a security best practice to be

312
00:16:22,399 --> 00:16:27,019
about how you must do this right it

313
00:16:25,190 --> 00:16:28,880
should be stronger than just assured

314
00:16:27,019 --> 00:16:30,620
it's it's the best breakfast you can

315
00:16:28,880 --> 00:16:32,540
choose to ignore it but if you follow

316
00:16:30,620 --> 00:16:36,370
the best practice it's a must

317
00:16:32,540 --> 00:16:38,930
that's that would be my point about this

318
00:16:36,370 --> 00:16:42,380
so your point as a miss appears is

319
00:16:38,930 --> 00:16:46,670
softer then Astana's draft document so

320
00:16:42,380 --> 00:16:54,070
that language must be horror indeed yeah

321
00:16:46,670 --> 00:16:58,300
excellent okay thank you Tony nedelin I

322
00:16:54,070 --> 00:17:02,149
guess I would probably you know their

323
00:16:58,300 --> 00:17:06,099
implicit flow the implicit flow you know

324
00:17:02,149 --> 00:17:09,049
I haven't seen a lot of data on you know

325
00:17:06,099 --> 00:17:12,530
the actual attacks going on and stuff

326
00:17:09,049 --> 00:17:14,240
with implicit flow and I'm not sure

327
00:17:12,530 --> 00:17:15,889
where all the data came from that says

328
00:17:14,240 --> 00:17:18,290
the implicit and flow should be I'm

329
00:17:15,890 --> 00:17:21,919
pretty sure what you're asking for is it

330
00:17:18,290 --> 00:17:24,409
be deprecated out of the out of the

331
00:17:21,919 --> 00:17:28,040
OAuth specification by saying it should

332
00:17:24,410 --> 00:17:30,440
not be used and I just don't see the

333
00:17:28,040 --> 00:17:32,480
data there right there there is case

334
00:17:30,440 --> 00:17:34,970
there are cases where the implicit flow

335
00:17:32,480 --> 00:17:36,620
can be made safe for those particular

336
00:17:34,970 --> 00:17:39,049
sets of applications that's why I

337
00:17:36,620 --> 00:17:41,409
believe it should be a should and not a

338
00:17:39,049 --> 00:17:41,410
must

339
00:17:42,550 --> 00:17:48,010
lady I just want to echo what Tony said

340
00:17:45,340 --> 00:17:50,439
I think it's not a blanket statement and

341
00:17:48,010 --> 00:17:52,059
also because the implication is also

342
00:17:50,440 --> 00:17:55,090
having an effect on the hybrid flow and

343
00:17:52,059 --> 00:17:56,889
open ID Connect I think we need to take

344
00:17:55,090 --> 00:17:59,010
this disk very seriously because it does

345
00:17:56,890 --> 00:18:02,650
have far-reaching implications for

346
00:17:59,010 --> 00:18:04,540
deployments and products and because

347
00:18:02,650 --> 00:18:06,840
there are ways to secure it I don't

348
00:18:04,540 --> 00:18:10,000
think that we should make it a must I

349
00:18:06,840 --> 00:18:14,260
recommend you both to read the whole the

350
00:18:10,000 --> 00:18:16,510
whole section again in the end the

351
00:18:14,260 --> 00:18:20,920
decision be made in a working group was

352
00:18:16,510 --> 00:18:23,050
based on the fact that we recommend in

353
00:18:20,920 --> 00:18:24,910
another section that people should

354
00:18:23,050 --> 00:18:28,928
consider to using the constraint tokens

355
00:18:24,910 --> 00:18:30,820
and there is no today no way to issue

356
00:18:28,929 --> 00:18:34,000
some the constraint tokens why are the

357
00:18:30,820 --> 00:18:37,480
implicit grant sure sure but this kind

358
00:18:34,000 --> 00:18:39,370
of thing has the effect of two weeks ago

359
00:18:37,480 --> 00:18:43,179
I was at a conference someone explaining

360
00:18:39,370 --> 00:18:46,780
about Oh wha and they said implicit is

361
00:18:43,179 --> 00:18:49,300
deprecated so I think it it muddies the

362
00:18:46,780 --> 00:18:51,970
water and I think that we need to be

363
00:18:49,300 --> 00:18:53,980
aware of the consequences of this

364
00:18:51,970 --> 00:18:56,970
especially if we make the the wording

365
00:18:53,980 --> 00:18:56,970
must not

366
00:19:04,420 --> 00:19:09,950
so there's my feeling and understanding

367
00:19:06,800 --> 00:19:13,970
that implicit was an optimization in the

368
00:19:09,950 --> 00:19:15,470
first in its first iteration anyway

369
00:19:13,970 --> 00:19:17,300
right and I would like to get rid of the

370
00:19:15,470 --> 00:19:19,070
optimization because it's less secure

371
00:19:17,300 --> 00:19:20,899
right and stick with the authorization

372
00:19:19,070 --> 00:19:22,939
code flow because you can and that's the

373
00:19:20,900 --> 00:19:27,020
way they're secure things not by fixing

374
00:19:22,940 --> 00:19:29,390
the implicit so speaking as a individual

375
00:19:27,020 --> 00:19:31,190
member of the working group my point on

376
00:19:29,390 --> 00:19:33,850
implicit is it was not an optimization

377
00:19:31,190 --> 00:19:35,930
it was away at a time to support

378
00:19:33,850 --> 00:19:41,659
applications that were unable to do

379
00:19:35,930 --> 00:19:44,300
calls to other regions all right so this

380
00:19:41,660 --> 00:19:45,860
limitation is gone so the question is

381
00:19:44,300 --> 00:19:48,370
I'm not talking about the security

382
00:19:45,860 --> 00:19:51,409
properties of the implicit grant right I

383
00:19:48,370 --> 00:19:53,510
can't become become to that later on

384
00:19:51,410 --> 00:19:55,550
and since we're of course now there is

385
00:19:53,510 --> 00:19:58,340
no no need to have two different flows

386
00:19:55,550 --> 00:20:01,730
for exactly the same use case which is a

387
00:19:58,340 --> 00:20:05,060
browser dance right and if we can get or

388
00:20:01,730 --> 00:20:07,550
much simpler we should do so because

389
00:20:05,060 --> 00:20:10,850
there is constant complain complaining

390
00:20:07,550 --> 00:20:13,040
about office of freaking complex first

391
00:20:10,850 --> 00:20:14,870
point second point the implicit grant is

392
00:20:13,040 --> 00:20:17,780
vulnerable to injection attacks yes

393
00:20:14,870 --> 00:20:20,239
already see hi but for a hybrid flow is

394
00:20:17,780 --> 00:20:22,510
not vulnerable to do that but we are

395
00:20:20,240 --> 00:20:25,490
talking about implicit grant here and

396
00:20:22,510 --> 00:20:27,470
even the open ID connect hybrid flow has

397
00:20:25,490 --> 00:20:28,700
no meaning for creating sender

398
00:20:27,470 --> 00:20:31,490
constraint tokens so from an

399
00:20:28,700 --> 00:20:33,320
architectural perspective we should get

400
00:20:31,490 --> 00:20:35,240
the message across that the future is

401
00:20:33,320 --> 00:20:42,889
the code plus pixie flow and not

402
00:20:35,240 --> 00:20:44,240
implicit erin perky i just want to echo

403
00:20:42,890 --> 00:20:46,270
pretty much everything Torsten said i

404
00:20:44,240 --> 00:20:48,950
was about to say the exact same thing

405
00:20:46,270 --> 00:20:50,780
the implicit flow the history was that

406
00:20:48,950 --> 00:20:53,420
it was created when there was no

407
00:20:50,780 --> 00:20:56,510
alternative there are now alternatives

408
00:20:53,420 --> 00:20:58,010
in browsers so we don't need it was

409
00:20:56,510 --> 00:21:00,350
always a hack everybody knew was a hack

410
00:20:58,010 --> 00:21:02,720
we don't need the hack anymore let's get

411
00:21:00,350 --> 00:21:05,719
rid of it just simplify things and as

412
00:21:02,720 --> 00:21:09,350
far as oh I DC is concerned I don't see

413
00:21:05,720 --> 00:21:11,030
any advantage to using that hybrid flow

414
00:21:09,350 --> 00:21:12,709
when you couldn't just get both tokens

415
00:21:11,030 --> 00:21:15,350
in response to the auth code exchange

416
00:21:12,710 --> 00:21:16,419
anyway so it seems like it's no worse

417
00:21:15,350 --> 00:21:20,469
off for oh I

418
00:21:16,419 --> 00:21:22,450
see either so yeah on a percent support

419
00:21:20,470 --> 00:21:24,879
I don't see any reason that it should be

420
00:21:22,450 --> 00:21:26,950
part of go auth anymore if oh I DC wants

421
00:21:24,879 --> 00:21:29,799
to add it back because it's secured to

422
00:21:26,950 --> 00:21:31,419
do it in Oh IDC fine that's up to Oh ABC

423
00:21:29,799 --> 00:21:33,249
to do but it shouldn't be part of the

424
00:21:31,419 --> 00:21:38,889
core Oh auth because it's no longer

425
00:21:33,249 --> 00:21:43,179
needed in Oh Tony hadlen so it was you

426
00:21:38,889 --> 00:21:46,600
can flip it up so you know it's there

427
00:21:43,179 --> 00:21:49,480
people have used it that's why it

428
00:21:46,600 --> 00:21:51,428
probably should be should not okay

429
00:21:49,480 --> 00:21:54,759
because people have deployed it and are

430
00:21:51,429 --> 00:21:56,559
using it and using it safely and if you

431
00:21:54,759 --> 00:21:59,350
just can't say don't use it at all

432
00:21:56,559 --> 00:22:02,019
because it was in the specification okay

433
00:21:59,350 --> 00:22:05,049
and so I can see this a couple years

434
00:22:02,019 --> 00:22:07,840
down the line to say must not but not to

435
00:22:05,049 --> 00:22:12,399
turn it off right now that's ridiculous

436
00:22:07,840 --> 00:22:14,590
yeah I understand I agree with what Tony

437
00:22:12,399 --> 00:22:20,109
said but also responding to Aaron's

438
00:22:14,590 --> 00:22:22,570
point there that hybrid flow I mean I

439
00:22:20,109 --> 00:22:25,689
know this isn't an open ID Kinect

440
00:22:22,570 --> 00:22:27,428
working group but in any event the ID

441
00:22:25,690 --> 00:22:29,109
token issued on the front end and the ID

442
00:22:27,429 --> 00:22:30,549
token on the back end could have

443
00:22:29,109 --> 00:22:33,519
different claims and them could have

444
00:22:30,549 --> 00:22:40,090
different information so if you have to

445
00:22:33,519 --> 00:22:42,820
consider that also in this I think Aaron

446
00:22:40,090 --> 00:22:45,759
again I wanted to I forgot to point out

447
00:22:42,820 --> 00:22:46,928
that since the beginning of a auth and

448
00:22:45,759 --> 00:22:48,970
the implicit flow there have been

449
00:22:46,929 --> 00:22:50,889
several instances of companies who have

450
00:22:48,970 --> 00:22:52,749
looked at the spec and intentionally

451
00:22:50,889 --> 00:22:55,238
decided to not implement the implicit

452
00:22:52,749 --> 00:22:57,549
flow because they saw that it was not

453
00:22:55,239 --> 00:22:59,470
secure from the beginning so it's not

454
00:22:57,549 --> 00:23:02,769
that everybody just went and built out

455
00:22:59,470 --> 00:23:04,809
the whole spec RT subsystem but for nine

456
00:23:02,769 --> 00:23:06,519
it was that people saw that saw the

457
00:23:04,809 --> 00:23:08,230
implicit float said we're not going to

458
00:23:06,519 --> 00:23:10,809
build that because we don't think it's

459
00:23:08,230 --> 00:23:12,999
secure and that is the world we are in

460
00:23:10,809 --> 00:23:15,999
today and Joe Tony's point I think that

461
00:23:12,999 --> 00:23:17,859
we are now at the point where we are a

462
00:23:15,999 --> 00:23:19,450
few years later and I think it is the

463
00:23:17,859 --> 00:23:22,389
time to shut this down

464
00:23:19,450 --> 00:23:23,619
because it has been a long time and I

465
00:23:22,389 --> 00:23:26,129
think we're past the point of this being

466
00:23:23,619 --> 00:23:26,129
a good idea

467
00:23:30,950 --> 00:23:36,480
but but just question then Aaron I mean

468
00:23:34,140 --> 00:23:39,090
shouldn't there be another RFC that

469
00:23:36,480 --> 00:23:40,860
update 67 49 that deprecates it and then

470
00:23:39,090 --> 00:23:42,030
at that point there should be a must not

471
00:23:40,860 --> 00:23:45,959
but until then it should be it should

472
00:23:42,030 --> 00:23:49,080
not I could see that going both ways

473
00:23:45,960 --> 00:23:52,770
honestly I think it'd be CP because it

474
00:23:49,080 --> 00:23:54,360
is a BCP is like fills that role of it's

475
00:23:52,770 --> 00:23:56,910
okay to have these sort of stronger

476
00:23:54,360 --> 00:23:58,110
statements because maybe you decide you

477
00:23:56,910 --> 00:23:59,580
to to not follow it and you're still

478
00:23:58,110 --> 00:24:01,350
compliant with six seven four nine as

479
00:23:59,580 --> 00:24:03,570
for whether there is a separate document

480
00:24:01,350 --> 00:24:07,678
I'm about to talk about that in a minute

481
00:24:03,570 --> 00:24:17,820
anyway so um well I'll address that

482
00:24:07,679 --> 00:24:20,280
point later any although opinions so we

483
00:24:17,820 --> 00:24:30,830
have to do a home on this yeah the class

484
00:24:20,280 --> 00:24:34,260
famous words Tony's dreadful dick heart

485
00:24:30,830 --> 00:24:38,129
a little history aren't the implicit

486
00:24:34,260 --> 00:24:39,390
flow that got added into OAuth because

487
00:24:38,130 --> 00:24:41,340
Facebook wanted to have something

488
00:24:39,390 --> 00:24:43,290
optimized for being able to show some

489
00:24:41,340 --> 00:24:44,939
context in a page where the client

490
00:24:43,290 --> 00:24:46,200
really didn't have any identity and they

491
00:24:44,940 --> 00:24:48,090
want to show us some stuff and so it

492
00:24:46,200 --> 00:24:49,500
kind of made a little bit of sense to be

493
00:24:48,090 --> 00:24:51,360
able to do something where was sort of a

494
00:24:49,500 --> 00:24:53,760
low-level authorization there wasn't

495
00:24:51,360 --> 00:24:58,040
really any other data I never liked it

496
00:24:53,760 --> 00:25:02,370
in the thing to begin with but I would

497
00:24:58,040 --> 00:25:04,678
agree that saying must is kind of

498
00:25:02,370 --> 00:25:06,928
challenging when the spec says it's in

499
00:25:04,679 --> 00:25:17,160
there that we would maybe need a new

500
00:25:06,929 --> 00:25:21,030
spec okay I will do a hum under should

501
00:25:17,160 --> 00:25:24,120
vs. must aspect and Roman is going to

502
00:25:21,030 --> 00:25:26,790
judge from the from the middle of the

503
00:25:24,120 --> 00:25:30,780
room what the feedback here so there

504
00:25:26,790 --> 00:25:34,530
would be two questions namely the first

505
00:25:30,780 --> 00:25:37,350
one is but the statement here on the on

506
00:25:34,530 --> 00:25:41,879
the slide should say should not and the

507
00:25:37,350 --> 00:25:46,139
second one what I must not okay so

508
00:25:41,880 --> 00:25:49,470
some if can I ask a clarifying question

509
00:25:46,140 --> 00:25:52,590
about this um the the the rest of the

510
00:25:49,470 --> 00:25:56,010
sentence explains when it is okay to use

511
00:25:52,590 --> 00:26:02,010
it so how does that factor in with the

512
00:25:56,010 --> 00:26:05,790
wording must versus shred well if if we

513
00:26:02,010 --> 00:26:10,530
say if it's should not it remains as it

514
00:26:05,790 --> 00:26:17,149
is if it's must not then I think it ends

515
00:26:10,530 --> 00:26:17,149
the sentence ends before they unless

516
00:26:17,300 --> 00:26:23,129
unless no that would be that would

517
00:26:21,060 --> 00:26:25,110
unless the issued tokens are Center

518
00:26:23,130 --> 00:26:26,400
constraint no I would say it was

519
00:26:25,110 --> 00:26:28,110
actually should not be could we get rid

520
00:26:26,400 --> 00:26:30,150
of the rest of the sentence if we can go

521
00:26:28,110 --> 00:26:31,020
with must the rest of the sentence is

522
00:26:30,150 --> 00:26:33,980
very important

523
00:26:31,020 --> 00:26:38,430
yeah must not it which is even more not

524
00:26:33,980 --> 00:26:40,470
versus should not John Bradley I think

525
00:26:38,430 --> 00:26:42,540
that the rest of the explanation is

526
00:26:40,470 --> 00:26:46,080
useful whether it's must not or should

527
00:26:42,540 --> 00:26:52,320
not and I must not unless is that's what

528
00:26:46,080 --> 00:26:55,850
I was just saying yeah okay so yeah so

529
00:26:52,320 --> 00:27:02,070
the my first question is whether the

530
00:26:55,850 --> 00:27:05,159
what we hung if you think the text as it

531
00:27:02,070 --> 00:27:07,679
currently is or should not is acceptable

532
00:27:05,160 --> 00:27:09,740
to you that's the first question not

533
00:27:07,680 --> 00:27:14,490
dumped Amina and the second question is

534
00:27:09,740 --> 00:27:16,830
hung if we should replace the should not

535
00:27:14,490 --> 00:27:21,150
with must not okay

536
00:27:16,830 --> 00:27:25,070
so first question hum if you are okay

537
00:27:21,150 --> 00:27:25,070
with text as shown on the screen

538
00:27:28,160 --> 00:27:34,260
hum if you would like to have the text

539
00:27:31,500 --> 00:27:36,470
they should not be replaced with must

540
00:27:34,260 --> 00:27:36,470
not

541
00:27:40,090 --> 00:27:44,949
so I heard a lot more humming for the

542
00:27:43,300 --> 00:27:47,800
keeping in the text as is what they

543
00:27:44,950 --> 00:27:50,020
should okay meet me too from here okay

544
00:27:47,800 --> 00:28:03,700
so will Tony can you record this in the

545
00:27:50,020 --> 00:28:05,980
mean two minutes okay okay no hamster

546
00:28:03,700 --> 00:28:08,950
hums from the choppa okay you didn't

547
00:28:05,980 --> 00:28:13,420
hear anything from The Dropper all right

548
00:28:08,950 --> 00:28:16,360
there's one last slide a new Wharf

549
00:28:13,420 --> 00:28:20,380
security workshop is coming up in 2020

550
00:28:16,360 --> 00:28:22,179
and I would everybody interested in

551
00:28:20,380 --> 00:28:23,890
having really really substantial

552
00:28:22,180 --> 00:28:27,670
discussions about all of security to

553
00:28:23,890 --> 00:28:29,320
consider to go there this year we met in

554
00:28:27,670 --> 00:28:31,120
Stuttgart that's the left-hand picture

555
00:28:29,320 --> 00:28:32,889
and you see all those smiling faces I

556
00:28:31,120 --> 00:28:34,419
think everybody really enjoyed the

557
00:28:32,890 --> 00:28:38,530
discussions there because those are two

558
00:28:34,420 --> 00:28:41,320
days fully packed with topics around the

559
00:28:38,530 --> 00:28:44,530
topic we laugh on on the right hand side

560
00:28:41,320 --> 00:28:46,540
just give you the impression on the

561
00:28:44,530 --> 00:28:49,510
location or the venue for next year

562
00:28:46,540 --> 00:28:51,879
which is Trondheim and it's really a

563
00:28:49,510 --> 00:29:01,960
nice city and there in Norway and by the

564
00:28:51,880 --> 00:29:03,640
way the island in the center is most

565
00:29:01,960 --> 00:29:07,780
likely the pace where we meet for the

566
00:29:03,640 --> 00:29:12,150
social event I'm not kidding okay we did

567
00:29:07,780 --> 00:29:13,230
a survey and I voted for for the island

568
00:29:12,150 --> 00:29:16,800
[Music]

569
00:29:13,230 --> 00:29:23,980
we consider that some of the attendees

570
00:29:16,800 --> 00:29:29,800
potentially will be forced to swim it

571
00:29:23,980 --> 00:29:31,930
used to be a prison so you can we're

572
00:29:29,800 --> 00:29:34,149
also being executed in the audience

573
00:29:31,930 --> 00:29:38,770
there no days it's a really nice place

574
00:29:34,150 --> 00:29:42,630
and yeah alright so you see the URL

575
00:29:38,770 --> 00:29:45,250
please register proposed topics I

576
00:29:42,630 --> 00:29:49,030
attended all of those workshops and I

577
00:29:45,250 --> 00:29:51,960
really really enjoyed it every time so

578
00:29:49,030 --> 00:29:51,960
see you in Toronto

579
00:30:06,840 --> 00:30:14,500
all right hi I'm am Becky I'm going to

580
00:30:12,820 --> 00:30:16,299
talk about OAuth for browser-based apps

581
00:30:14,500 --> 00:30:19,360
which follows on nicely from the

582
00:30:16,299 --> 00:30:22,929
previous discussion this draft has been

583
00:30:19,360 --> 00:30:25,840
in that works for I think almost a year

584
00:30:22,929 --> 00:30:27,130
now so I want to give some quick summary

585
00:30:25,840 --> 00:30:31,330
of this and then talk about some of the

586
00:30:27,130 --> 00:30:32,980
recent updates to it this is primarily

587
00:30:31,330 --> 00:30:36,490
it's a it's a sort of a compliment to

588
00:30:32,980 --> 00:30:38,530
the OAuth for native apps best practices

589
00:30:36,490 --> 00:30:41,740
that we currently have this is for

590
00:30:38,530 --> 00:30:46,960
burning in a browser so primarily single

591
00:30:41,740 --> 00:30:49,659
page apps or browser-based apps the sort

592
00:30:46,960 --> 00:30:52,350
of summary of it is that browser-based

593
00:30:49,659 --> 00:30:55,600
apps must use the auth code and pixie

594
00:30:52,350 --> 00:30:56,740
flow must not return access tokens the

595
00:30:55,600 --> 00:30:58,360
front channel these are all sort of

596
00:30:56,740 --> 00:31:00,850
referenced these reference out the

597
00:30:58,360 --> 00:31:04,418
security BCP in order to do these as

598
00:31:00,850 --> 00:31:07,480
well must use the state parameter to

599
00:31:04,419 --> 00:31:09,400
carry CSRF tokens and the authorization

600
00:31:07,480 --> 00:31:11,559
server must do exact redirect URL

601
00:31:09,400 --> 00:31:13,299
matching these are the sort of main

602
00:31:11,559 --> 00:31:14,678
high-level points in here there's a

603
00:31:13,299 --> 00:31:16,270
handful of other things in the dock as

604
00:31:14,679 --> 00:31:19,380
well as well as some descriptions of

605
00:31:16,270 --> 00:31:21,010
architectural patterns that talk about

606
00:31:19,380 --> 00:31:23,470
different ways you can actually

607
00:31:21,010 --> 00:31:27,129
accomplish this and that goes over

608
00:31:23,470 --> 00:31:29,169
things like when there is a pure

609
00:31:27,130 --> 00:31:32,919
JavaScript app talking directly to an

610
00:31:29,169 --> 00:31:36,210
ASMR s itself or whether it's got its

611
00:31:32,919 --> 00:31:39,220
own dynamic back-end component or

612
00:31:36,210 --> 00:31:43,120
running on the same domain as as RS for

613
00:31:39,220 --> 00:31:46,840
example so recent changes in this draft

614
00:31:43,120 --> 00:31:50,610
there was a lot of text updated to bring

615
00:31:46,840 --> 00:31:52,870
this more in line with the security BCP

616
00:31:50,610 --> 00:31:54,879
including things like disallowing the

617
00:31:52,870 --> 00:31:58,559
password grants even for first party

618
00:31:54,880 --> 00:32:02,169
applications which it used to allow and

619
00:31:58,559 --> 00:32:03,908
the previous draft basically said

620
00:32:02,169 --> 00:32:06,370
refresh tokens were not acceptable at

621
00:32:03,909 --> 00:32:08,500
all and now this instead references

622
00:32:06,370 --> 00:32:11,350
security BCP and puts requirements on

623
00:32:08,500 --> 00:32:14,950
how refresh tokens are able to be

624
00:32:11,350 --> 00:32:16,230
secured in a browser-based app and there

625
00:32:14,950 --> 00:32:18,070
was a handful of editorial

626
00:32:16,230 --> 00:32:20,020
clarifications as well thanks to a lot

627
00:32:18,070 --> 00:32:24,669
of the feedback that we got from the

628
00:32:20,020 --> 00:32:26,980
list so that is the sort of current

629
00:32:24,670 --> 00:32:29,710
state of things I think this is shaping

630
00:32:26,980 --> 00:32:31,450
up nicely I'm hoping to be able to kick

631
00:32:29,710 --> 00:32:34,960
it across the finish line relatively

632
00:32:31,450 --> 00:32:38,140
soon there's a couple of sort of open

633
00:32:34,960 --> 00:32:40,600
issues that we still need to so need to

634
00:32:38,140 --> 00:32:43,590
discuss which is some of what I wanted

635
00:32:40,600 --> 00:32:45,669
to bring up today and talk through

636
00:32:43,590 --> 00:32:48,909
starting with this one in particular and

637
00:32:45,670 --> 00:32:50,500
this was actually um sort of tied off of

638
00:32:48,910 --> 00:32:52,900
a discussion around the security BCP as

639
00:32:50,500 --> 00:32:54,940
well because it's it's defined in there

640
00:32:52,900 --> 00:32:59,559
as well and that's around the use of the

641
00:32:54,940 --> 00:33:02,860
state parameter so in if you are using

642
00:32:59,559 --> 00:33:05,590
pixie then then you're already protected

643
00:33:02,860 --> 00:33:07,449
from CSRF attacks the state parameter is

644
00:33:05,590 --> 00:33:10,720
another way to protect against CSRF

645
00:33:07,450 --> 00:33:13,140
attacks right now the security BCP says

646
00:33:10,720 --> 00:33:15,820
that state must be used for that and

647
00:33:13,140 --> 00:33:18,520
however if you are doing pixie you don't

648
00:33:15,820 --> 00:33:20,230
need it to do that which means it opens

649
00:33:18,520 --> 00:33:23,950
up the possibility of using state for

650
00:33:20,230 --> 00:33:26,110
carrying application level logic that

651
00:33:23,950 --> 00:33:27,730
maybe doesn't actually have randomized

652
00:33:26,110 --> 00:33:31,419
information in it like you know just

653
00:33:27,730 --> 00:33:36,540
redirect URI equals blah so the question

654
00:33:31,420 --> 00:33:39,790
here is do we want to actually require

655
00:33:36,540 --> 00:33:42,760
one-time CSRF tokens in the state value

656
00:33:39,790 --> 00:33:44,800
or mention the possibility that's okay

657
00:33:42,760 --> 00:33:50,760
if that state value is static as long as

658
00:33:44,800 --> 00:33:50,760
you're doing pixie Mike Jones Microsoft

659
00:33:51,420 --> 00:34:01,330
when we thought about CSR protection for

660
00:33:56,710 --> 00:34:03,400
Open ID connect as Roth was finishing we

661
00:34:01,330 --> 00:34:06,000
recognized that in the wild people were

662
00:34:03,400 --> 00:34:08,980
using state for all kinds of things and

663
00:34:06,000 --> 00:34:13,960
so we knew that we couldn't depend on it

664
00:34:08,980 --> 00:34:16,480
for CSRF protection that's why I believe

665
00:34:13,960 --> 00:34:20,740
John invented the nonce parameter and

666
00:34:16,480 --> 00:34:22,899
why that's how we do it and so to the

667
00:34:20,739 --> 00:34:26,589
extent you're covering this I would try

668
00:34:22,899 --> 00:34:30,429
to do what is also done in the security

669
00:34:26,590 --> 00:34:33,580
BCP which is at least list the nonce

670
00:34:30,429 --> 00:34:38,859
parameter as one of the ways to do this

671
00:34:33,580 --> 00:34:41,319
and if you don't have a nonce then and

672
00:34:38,859 --> 00:34:44,949
you don't have pixie then yeah you could

673
00:34:41,320 --> 00:34:46,840
do it but I wouldn't require it because

674
00:34:44,949 --> 00:34:51,569
there's an awful lot of deployments that

675
00:34:46,840 --> 00:34:51,570
it's already covered even without pixie

676
00:34:53,010 --> 00:34:59,590
toast militia at Mike is right

677
00:34:55,679 --> 00:35:01,420
so pixie and nuns are equivalent so I

678
00:34:59,590 --> 00:35:04,630
think we also mentioned that in a PCP if

679
00:35:01,420 --> 00:35:07,810
not we should I pick C unknowns from my

680
00:35:04,630 --> 00:35:11,080
perspective or equivalent except pixie R

681
00:35:07,810 --> 00:35:12,029
relies on the as2 to detect the attack

682
00:35:11,080 --> 00:35:14,470
whereas the nonce

683
00:35:12,030 --> 00:35:16,300
relies on the client or relying party to

684
00:35:14,470 --> 00:35:19,990
get it right which from my perspective

685
00:35:16,300 --> 00:35:23,790
III lean to a voice pixie arm because I

686
00:35:19,990 --> 00:35:23,790
more trust on the AES to get it right

687
00:35:24,000 --> 00:35:30,730
what I don't understand is what you mean

688
00:35:26,650 --> 00:35:33,670
where static state because I would

689
00:35:30,730 --> 00:35:36,310
assume if an application does not use

690
00:35:33,670 --> 00:35:38,470
the state for a Caesar F it's somehow

691
00:35:36,310 --> 00:35:40,799
Conway's parts of the application state

692
00:35:38,470 --> 00:35:44,770
in the parameter which means it

693
00:35:40,800 --> 00:35:47,980
shouldn't be static at all I've seen

694
00:35:44,770 --> 00:35:51,070
people do things like put a return to

695
00:35:47,980 --> 00:35:53,050
this URL after finish logging in after

696
00:35:51,070 --> 00:35:55,750
the auth code finishes ever after the

697
00:35:53,050 --> 00:35:57,310
flow finishes oh you mean you have you

698
00:35:55,750 --> 00:36:01,030
have you have seen variants of an open

699
00:35:57,310 --> 00:36:02,440
redirect on yes okay where it's

700
00:36:01,030 --> 00:36:03,580
statically configured in the application

701
00:36:02,440 --> 00:36:05,230
where you know there's like five

702
00:36:03,580 --> 00:36:07,660
different values that could be which is

703
00:36:05,230 --> 00:36:09,520
effectively static yeah that's that's

704
00:36:07,660 --> 00:36:11,230
the thing where and I saw some language

705
00:36:09,520 --> 00:36:13,560
in the security BCP that was sort of

706
00:36:11,230 --> 00:36:15,730
hinting at that as an option as well

707
00:36:13,560 --> 00:36:18,520
that's why I started a little worried I

708
00:36:15,730 --> 00:36:21,760
hope a misconception if you could

709
00:36:18,520 --> 00:36:24,970
directly refer me to that text I will

710
00:36:21,760 --> 00:36:27,010
take care of that okay yeah Mike so I

711
00:36:24,970 --> 00:36:29,799
mean we had the chat about that on the

712
00:36:27,010 --> 00:36:31,780
list right about pixie versus Tate

713
00:36:29,800 --> 00:36:34,390
so based on the light at the recent

714
00:36:31,780 --> 00:36:36,520
analysis by the guys from Stuttgart

715
00:36:34,390 --> 00:36:38,710
pixie should do fine for code injection

716
00:36:36,520 --> 00:36:41,440
and and and seize her F protection so

717
00:36:38,710 --> 00:36:43,750
it's a single nuns and even the

718
00:36:41,440 --> 00:36:45,640
fingerprint at nuns that can be used for

719
00:36:43,750 --> 00:36:47,410
both use cases so I think that's that's

720
00:36:45,640 --> 00:36:50,650
that's reasonable to go forward and

721
00:36:47,410 --> 00:36:54,730
given that we anyway make pixie a

722
00:36:50,650 --> 00:36:58,570
mandatory to be use of code there's a

723
00:36:54,730 --> 00:37:02,590
perfect package I tend to agree my only

724
00:36:58,570 --> 00:37:04,390
concern is that the applications have no

725
00:37:02,590 --> 00:37:07,710
way to know whether an AS supports pixie

726
00:37:04,390 --> 00:37:10,330
and because the flow works even without

727
00:37:07,710 --> 00:37:12,130
even if pixie fails the flow will work i

728
00:37:10,330 --> 00:37:14,490
I understand I I understand that's

729
00:37:12,130 --> 00:37:18,460
that's really an issue that's why we

730
00:37:14,490 --> 00:37:21,160
decided to make pixie mandatory I know

731
00:37:18,460 --> 00:37:25,119
that doesn't change the world in in the

732
00:37:21,160 --> 00:37:26,560
moment we republish so we I don't know

733
00:37:25,119 --> 00:37:31,150
how to handle it but John potentially

734
00:37:26,560 --> 00:37:33,130
has an idea well you probably guess that

735
00:37:31,150 --> 00:37:36,240
my opinion is that you should use both

736
00:37:33,130 --> 00:37:38,650
Nantes and pixie oh but that's just me

737
00:37:36,240 --> 00:37:42,069
say when you say Nance you mean state

738
00:37:38,650 --> 00:37:50,080
no I'm saying notches you know oh I know

739
00:37:42,070 --> 00:37:51,430
but the but it but if someone reading

740
00:37:50,080 --> 00:37:52,930
this is gonna if someone who does not

741
00:37:51,430 --> 00:37:54,580
care about ID tokens and they're reading

742
00:37:52,930 --> 00:37:58,509
this and they have no intention of ever

743
00:37:54,580 --> 00:38:03,100
getting an ID token then nonce does not

744
00:37:58,510 --> 00:38:07,320
exist so so you should use an

745
00:38:03,100 --> 00:38:09,730
application can choose to use both I

746
00:38:07,320 --> 00:38:12,340
mean it doesn't have to be in the OAuth

747
00:38:09,730 --> 00:38:17,080
spec to include the nonce parameter but

748
00:38:12,340 --> 00:38:18,880
beside that the you can determine

749
00:38:17,080 --> 00:38:20,529
whether or not the server as long as the

750
00:38:18,880 --> 00:38:23,830
server supports discovery you can tell

751
00:38:20,530 --> 00:38:26,290
whether or not it's using pixie so it's

752
00:38:23,830 --> 00:38:32,440
not it's not like the the client has to

753
00:38:26,290 --> 00:38:35,759
completely guess the reality reality is

754
00:38:32,440 --> 00:38:40,869
that virtually no one gets it right

755
00:38:35,760 --> 00:38:43,090
trying to do CSRF using state you know

756
00:38:40,869 --> 00:38:43,599
there are libraries that people have

757
00:38:43,090 --> 00:38:46,239
given

758
00:38:43,599 --> 00:38:48,219
you know created etc but most people who

759
00:38:46,239 --> 00:38:50,440
roll their own get it wrong in any

760
00:38:48,219 --> 00:38:53,680
number of ways which is one of the

761
00:38:50,440 --> 00:38:56,140
reasons why we separated it open ID

762
00:38:53,680 --> 00:38:58,180
connect because pretty much everybody

763
00:38:56,140 --> 00:38:59,859
was going to be guaranteed to get it

764
00:38:58,180 --> 00:39:02,979
wrong because they were using steak for

765
00:38:59,859 --> 00:39:05,799
other things and yeah it just pretty

766
00:39:02,979 --> 00:39:09,839
much always broke so if your question is

767
00:39:05,799 --> 00:39:12,819
should we recommend the pixie or

768
00:39:09,839 --> 00:39:16,630
potentially nots if you're using open ib

769
00:39:12,819 --> 00:39:19,329
connect as opposed to state then yes

770
00:39:16,630 --> 00:39:21,219
because state people in general get

771
00:39:19,329 --> 00:39:24,940
wrong so saying people must always use

772
00:39:21,219 --> 00:39:33,880
state isn't gonna get you very far

773
00:39:24,940 --> 00:39:35,920
because they'll just use it wrong Mike

774
00:39:33,880 --> 00:39:39,069
Jones this may seem like splitting hairs

775
00:39:35,920 --> 00:39:43,630
but the knots request parameter is

776
00:39:39,069 --> 00:39:47,709
registered in the OS Ayana parameters

777
00:39:43,630 --> 00:39:50,009
registry therefore it is part of OA at

778
00:39:47,709 --> 00:39:53,890
this point does it come back where

779
00:39:50,009 --> 00:39:55,150
doesn't do it doesn't if you don't get

780
00:39:53,890 --> 00:39:58,949
an ID token it doesn't come back yes

781
00:39:55,150 --> 00:39:58,949
that's what yeah you have to implement

782
00:39:59,729 --> 00:40:07,689
normative stuff that it does right it is

783
00:40:04,209 --> 00:40:10,538
part of the OAuth set of options which

784
00:40:07,690 --> 00:40:15,849
you can implement it just happens to not

785
00:40:10,539 --> 00:40:18,279
be defined in an RFI other places but I

786
00:40:15,849 --> 00:40:21,489
understand Aaron's line of thinking here

787
00:40:18,279 --> 00:40:24,430
that there are valid cases for OAuth

788
00:40:21,489 --> 00:40:26,079
without opening connect and if you're

789
00:40:24,430 --> 00:40:28,149
going to do that this is this is I want

790
00:40:26,079 --> 00:40:31,859
you know this document to be the list of

791
00:40:28,150 --> 00:40:37,059
things to do but this is a BCP so it is

792
00:40:31,859 --> 00:40:39,969
perfectly acceptable to say if use pixie

793
00:40:37,059 --> 00:40:42,130
is your first choice if you happen to be

794
00:40:39,969 --> 00:40:44,349
doing open ID connect and it doesn't

795
00:40:42,130 --> 00:40:46,599
support pixie then use nonce and if you

796
00:40:44,349 --> 00:40:49,559
don't have any other choice then you can

797
00:40:46,599 --> 00:40:52,719
try using state god help you

798
00:40:49,559 --> 00:40:56,220
okay fair I like that phrasing I see a

799
00:40:52,719 --> 00:40:58,200
couple of some sup minaton

800
00:40:56,220 --> 00:41:02,939
Travis spent security question though

801
00:40:58,200 --> 00:41:05,490
like what happens when the SP a calls

802
00:41:02,940 --> 00:41:07,109
the token end point and state wasn't

803
00:41:05,490 --> 00:41:09,089
used is the authorization server

804
00:41:07,109 --> 00:41:12,990
expected to return in error then because

805
00:41:09,089 --> 00:41:16,230
it didn't use non sir state or state is

806
00:41:12,990 --> 00:41:18,029
never sent to the AAS state has never

807
00:41:16,230 --> 00:41:20,880
sent to the AES during the are in the

808
00:41:18,030 --> 00:41:22,530
token request I mean I know at the

809
00:41:20,880 --> 00:41:24,240
authorization endpoint if state

810
00:41:22,530 --> 00:41:26,369
parameter was sent and later on I can

811
00:41:24,240 --> 00:41:28,109
tell in the token end point okay wait a

812
00:41:26,369 --> 00:41:31,260
sec you didn't use this day parameter

813
00:41:28,109 --> 00:41:32,819
you don't get a token am i completely

814
00:41:31,260 --> 00:41:34,619
miss remembering how earth works because

815
00:41:32,819 --> 00:41:36,630
there's no state parameter in the token

816
00:41:34,619 --> 00:41:38,550
request no but what I'm saying is when

817
00:41:36,630 --> 00:41:41,040
you make the authorization request I can

818
00:41:38,550 --> 00:41:42,599
see okay you didn't include state now in

819
00:41:41,040 --> 00:41:43,770
your second call to the token endpoint

820
00:41:42,599 --> 00:41:47,130
I'm not going to issue a token because

821
00:41:43,770 --> 00:41:50,160
the first one was made wrong sure I

822
00:41:47,130 --> 00:41:51,839
don't see how that is that the separate

823
00:41:50,160 --> 00:41:53,759
issue - I feel like that's a separate

824
00:41:51,839 --> 00:41:58,980
thing yeah I'm trying to figure out like

825
00:41:53,760 --> 00:42:00,839
what state or nonce or even pixie is

826
00:41:58,980 --> 00:42:02,670
plays a requirement on the second call

827
00:42:00,839 --> 00:42:04,650
to the AES because the AES has to do

828
00:42:02,670 --> 00:42:09,089
something in order to do this not just a

829
00:42:04,650 --> 00:42:11,220
client so I think we're getting a little

830
00:42:09,089 --> 00:42:14,220
in the weeds here no not really it's

831
00:42:11,220 --> 00:42:17,220
like if you call our token endpoint we

832
00:42:14,220 --> 00:42:18,359
will not issue a public client a token

833
00:42:17,220 --> 00:42:21,299
unless they used pixie

834
00:42:18,359 --> 00:42:23,069
it's placing requirements on the a s and

835
00:42:21,300 --> 00:42:24,690
I'm trying to understand okay should I

836
00:42:23,069 --> 00:42:28,880
not issue a token now because state

837
00:42:24,690 --> 00:42:32,490
wasn't used on the authorized request is

838
00:42:28,880 --> 00:42:33,869
if you are also using pixie is your

839
00:42:32,490 --> 00:42:35,098
question is if you're also using pixie

840
00:42:33,869 --> 00:42:37,140
and there is also no state in the

841
00:42:35,099 --> 00:42:39,869
authorized request should you it says

842
00:42:37,140 --> 00:42:42,900
here should state be used for cross-site

843
00:42:39,869 --> 00:42:45,420
protection even if pixie is used okay so

844
00:42:42,900 --> 00:42:46,829
if that is a requirement that's a

845
00:42:45,420 --> 00:42:50,280
requirement not only on the client but

846
00:42:46,829 --> 00:42:53,400
on the AES in the authorized request

847
00:42:50,280 --> 00:42:55,890
yeah in the gut but also on the token

848
00:42:53,400 --> 00:42:57,960
endpoint I can't issue a token if you

849
00:42:55,890 --> 00:43:00,379
didn't follow the make of proper

850
00:42:57,960 --> 00:43:04,500
requests to the authorized end playing

851
00:43:00,380 --> 00:43:08,520
Torsen hasn't mega had actually I know I

852
00:43:04,500 --> 00:43:09,840
was real good IIIi think I

853
00:43:08,520 --> 00:43:11,490
doesn't matter where there's a

854
00:43:09,840 --> 00:43:13,740
confidential public client I think

855
00:43:11,490 --> 00:43:17,450
you're making a valid point whether the

856
00:43:13,740 --> 00:43:21,120
S needs to put in force I mean the

857
00:43:17,450 --> 00:43:22,799
discussion the BCP says clients

858
00:43:21,120 --> 00:43:25,650
utilizing the authorization run type

859
00:43:22,800 --> 00:43:27,720
must use pixie right so one could

860
00:43:25,650 --> 00:43:29,760
interpret that in a way that the SAS two

861
00:43:27,720 --> 00:43:33,120
has to enforce that that's not the

862
00:43:29,760 --> 00:43:35,760
current meaning of the DCP the meaning

863
00:43:33,120 --> 00:43:39,509
of the PCP is or will be a SS must

864
00:43:35,760 --> 00:43:43,920
support pixie and clients must use pixie

865
00:43:39,510 --> 00:43:45,720
but is must not and first pixie we could

866
00:43:43,920 --> 00:43:48,000
add that but that's not currently the

867
00:43:45,720 --> 00:43:49,709
case and to further them from the

868
00:43:48,000 --> 00:43:52,170
discussion the last segment of that

869
00:43:49,710 --> 00:43:53,970
paragraph says open ID Connect clients

870
00:43:52,170 --> 00:43:55,230
may use the nonce parameter of the open

871
00:43:53,970 --> 00:43:56,759
D clinic of negation requests are

872
00:43:55,230 --> 00:43:57,990
specified an automatic connect or in

873
00:43:56,760 --> 00:44:01,440
conjunction with the corresponding ID

874
00:43:57,990 --> 00:44:06,149
token claim for the same purpose so

875
00:44:01,440 --> 00:44:07,950
everything is set so I so that this BCP

876
00:44:06,150 --> 00:44:10,050
can refer to the security BCP which

877
00:44:07,950 --> 00:44:14,399
already has the correct language is that

878
00:44:10,050 --> 00:44:18,150
essentially what you just said um okay

879
00:44:14,400 --> 00:44:21,240
so in that case should I be removing

880
00:44:18,150 --> 00:44:22,980
text from this BCD in order to avoid

881
00:44:21,240 --> 00:44:26,279
adding confusion because the security

882
00:44:22,980 --> 00:44:30,450
BCP already covers it sounds like a

883
00:44:26,280 --> 00:44:33,600
reference but I let another one last

884
00:44:30,450 --> 00:44:35,850
point on nonce it is defined as the

885
00:44:33,600 --> 00:44:39,390
value used to associate a client session

886
00:44:35,850 --> 00:44:41,130
with an ID token so usage of nonce in a

887
00:44:39,390 --> 00:44:44,549
context where you are not using an ID

888
00:44:41,130 --> 00:44:45,990
token would be out of spec with its

889
00:44:44,550 --> 00:44:49,770
current definition would be very

890
00:44:45,990 --> 00:44:54,629
confusing that's why I said if you're

891
00:44:49,770 --> 00:44:58,350
using Open ID Connect so making state

892
00:44:54,630 --> 00:45:00,720
mandatory also violates the core o

893
00:44:58,350 --> 00:45:04,910
aspect because it is an optional

894
00:45:00,720 --> 00:45:09,720
parameter it's not required so I think

895
00:45:04,910 --> 00:45:11,970
trying to make state required for CSRF

896
00:45:09,720 --> 00:45:14,100
would be a mistake in a number of

897
00:45:11,970 --> 00:45:16,049
different dimensions I think not making

898
00:45:14,100 --> 00:45:18,259
it required in pointing to the security

899
00:45:16,050 --> 00:45:21,509
BCP would make for a much shorter

900
00:45:18,260 --> 00:45:24,899
conversation say

901
00:45:21,509 --> 00:45:28,949
last working a glass send us make this

902
00:45:24,899 --> 00:45:32,489
BCP should not make state required and

903
00:45:28,949 --> 00:45:37,649
should point to the security BCP for how

904
00:45:32,489 --> 00:45:40,019
to do CSRF that's that way we wind up

905
00:45:37,649 --> 00:45:45,709
with less potentially conflicting text

906
00:45:40,019 --> 00:45:47,939
okay okay that's that sounds good thanks

907
00:45:45,709 --> 00:45:50,698
two more quick points yes so sort of

908
00:45:47,939 --> 00:45:53,759
wrap up the wrap up on the former issue

909
00:45:50,699 --> 00:45:55,769
I think we concluded that we want to

910
00:45:53,759 --> 00:46:00,389
replace the X with a reference to the

911
00:45:55,769 --> 00:46:03,328
security PCP is that yeah yes okay don't

912
00:46:00,389 --> 00:46:09,449
need do you have that thank you

913
00:46:03,329 --> 00:46:11,899
are you sure okay so these are two more

914
00:46:09,449 --> 00:46:17,699
things that came up on the list recently

915
00:46:11,899 --> 00:46:20,909
the the issue around refresh tokens this

916
00:46:17,699 --> 00:46:22,499
is a continual challenge for single page

917
00:46:20,909 --> 00:46:24,029
apps where you want a good experience

918
00:46:22,499 --> 00:46:27,089
where people are not bounced out of the

919
00:46:24,029 --> 00:46:29,339
app in order to get a new token the

920
00:46:27,089 --> 00:46:31,589
question is should we make specific

921
00:46:29,339 --> 00:46:33,569
recommendations on how to do that

922
00:46:31,589 --> 00:46:35,130
it is currently possible to do to do

923
00:46:33,569 --> 00:46:37,499
this a number of ways one of which is

924
00:46:35,130 --> 00:46:39,630
using a hidden iframe like oh i DC you

925
00:46:37,499 --> 00:46:41,428
can implement that according to auth

926
00:46:39,630 --> 00:46:44,009
it's not really defined anywhere in

927
00:46:41,429 --> 00:46:46,859
particular as being explicitly part of

928
00:46:44,009 --> 00:46:49,889
oh oh off whereas it is in oh I DC is

929
00:46:46,859 --> 00:46:52,739
there any value to making that more

930
00:46:49,889 --> 00:46:55,579
explicit as a thing that's possible to

931
00:46:52,739 --> 00:46:59,399
do for browser-based apps in this draft

932
00:46:55,579 --> 00:47:01,679
toast notice I'm not an SP expert at all

933
00:46:59,399 --> 00:47:03,779
and I would like to know what the

934
00:47:01,679 --> 00:47:05,729
specific feature isn't already see what

935
00:47:03,779 --> 00:47:07,409
that describes how to use an iframe for

936
00:47:05,729 --> 00:47:10,468
refreshing something I mean that's

937
00:47:07,409 --> 00:47:12,539
that's done right you can do that with

938
00:47:10,469 --> 00:47:16,559
implicit or Oh of authorization code

939
00:47:12,539 --> 00:47:21,209
grant type so what does YDC add to that

940
00:47:16,559 --> 00:47:22,909
in terms of spec language oh the primer

941
00:47:21,209 --> 00:47:28,019
Rama time all right

942
00:47:22,909 --> 00:47:29,699
do you wanna for the remote participants

943
00:47:28,019 --> 00:47:31,979
for the remote participants ideally have

944
00:47:29,699 --> 00:47:34,109
remote participant the the prompt

945
00:47:31,979 --> 00:47:35,040
parameter no IDC allows it to happen by

946
00:47:34,109 --> 00:47:37,650
signal

947
00:47:35,040 --> 00:47:39,779
into the as2 regardless of the outcome

948
00:47:37,650 --> 00:47:41,550
not interact with the user and return a

949
00:47:39,780 --> 00:47:44,160
response back and that way you can count

950
00:47:41,550 --> 00:47:45,810
on the iframe from the SP a perspective

951
00:47:44,160 --> 00:47:47,250
returning you a status one way or the

952
00:47:45,810 --> 00:47:50,520
other instead of just getting hung up

953
00:47:47,250 --> 00:47:55,800
and we don't have that in in baseline Oh

954
00:47:50,520 --> 00:47:56,940
a DC base I know off Tosun again my

955
00:47:55,800 --> 00:48:01,230
feeling it that would be a very useful

956
00:47:56,940 --> 00:48:04,410
extension to war we already used that in

957
00:48:01,230 --> 00:48:07,320
the off context for long time in Roth

958
00:48:04,410 --> 00:48:09,240
without our ADC yes I have a feeling a

959
00:48:07,320 --> 00:48:12,510
lot of people do use it without oh I DC

960
00:48:09,240 --> 00:48:15,479
already so because technically they find

961
00:48:12,510 --> 00:48:16,650
the right they prom spec so just it's

962
00:48:15,480 --> 00:48:20,970
just that technically it's not defined

963
00:48:16,650 --> 00:48:23,430
anywhere in Roth so is this a place to

964
00:48:20,970 --> 00:48:24,799
define it I don't know this this is not

965
00:48:23,430 --> 00:48:27,629
the place to define it

966
00:48:24,800 --> 00:48:29,880
Travis Spencer here but the the prompt

967
00:48:27,630 --> 00:48:33,210
does a lot of different input parameters

968
00:48:29,880 --> 00:48:35,010
and it can be spaced separated and it

969
00:48:33,210 --> 00:48:36,390
there's a lot of things even missing

970
00:48:35,010 --> 00:48:38,280
from that so I think that we need to

971
00:48:36,390 --> 00:48:41,129
look at that as a separate specification

972
00:48:38,280 --> 00:48:46,490
and that this should be updated perhaps

973
00:48:41,130 --> 00:48:46,490
to normally really reference that okay

974
00:48:46,550 --> 00:48:50,460
any other comments on that I think I

975
00:48:48,990 --> 00:48:53,399
would tend to agree with that assessment

976
00:48:50,460 --> 00:48:55,380
um especially since a BCP shouldn't be

977
00:48:53,400 --> 00:48:58,190
adding too much normative language and

978
00:48:55,380 --> 00:49:03,630
certainly not terribly functional stuff

979
00:48:58,190 --> 00:49:05,010
so the outcome of that would be to not

980
00:49:03,630 --> 00:49:09,000
make any specific recommendations on how

981
00:49:05,010 --> 00:49:10,890
to do this in this BCP and hopefully

982
00:49:09,000 --> 00:49:13,200
somebody will propose an extension to

983
00:49:10,890 --> 00:49:17,009
OAuth to add the prompt parameter what

984
00:49:13,200 --> 00:49:19,500
about you hopefully hopefully somebody

985
00:49:17,010 --> 00:49:22,080
not gonna point any fingers I'm not

986
00:49:19,500 --> 00:49:23,820
volunteering myself yet we'll see okay

987
00:49:22,080 --> 00:49:26,970
if I'm happy with that outcome last

988
00:49:23,820 --> 00:49:30,510
point here there's a mention in this

989
00:49:26,970 --> 00:49:33,060
draft about because you're in a browser

990
00:49:30,510 --> 00:49:34,800
and JavaScript environments are less

991
00:49:33,060 --> 00:49:37,259
secure by default than things like

992
00:49:34,800 --> 00:49:39,920
native apps it is much more important to

993
00:49:37,260 --> 00:49:42,570
have a strong content security policy

994
00:49:39,920 --> 00:49:43,860
that's basically what it says without

995
00:49:42,570 --> 00:49:49,080
giving any specific recommendations

996
00:49:43,860 --> 00:49:51,090
there was a suggestion to explicitly say

997
00:49:49,080 --> 00:49:54,569
like a couple of things that should be

998
00:49:51,090 --> 00:49:57,150
in your content security policy to at

999
00:49:54,570 --> 00:49:58,830
least have a first pass of making it

1000
00:49:57,150 --> 00:50:01,170
more secure one of which being disabling

1001
00:49:58,830 --> 00:50:02,910
inline scripts is that a good idea for

1002
00:50:01,170 --> 00:50:05,820
this BCP or should we just point people

1003
00:50:02,910 --> 00:50:07,819
to a wasp and have them go and figure it

1004
00:50:05,820 --> 00:50:09,960
out on their own

1005
00:50:07,820 --> 00:50:12,420
Travis Spencer here I don't think we

1006
00:50:09,960 --> 00:50:15,560
should because it's not just for single

1007
00:50:12,420 --> 00:50:20,100
page applications it's for all flows

1008
00:50:15,560 --> 00:50:24,000
browser-based flows for the one thing

1009
00:50:20,100 --> 00:50:27,299
that single page applications could

1010
00:50:24,000 --> 00:50:29,580
allow is an Origin that can frame them

1011
00:50:27,300 --> 00:50:32,160
and then that could change the CSP

1012
00:50:29,580 --> 00:50:33,900
responses if you look at our assisted

1013
00:50:32,160 --> 00:50:36,420
token flow specification we talked about

1014
00:50:33,900 --> 00:50:37,770
how registration of the origins could be

1015
00:50:36,420 --> 00:50:40,740
done in the client and how that could

1016
00:50:37,770 --> 00:50:42,660
update the CSP but I think that what we

1017
00:50:40,740 --> 00:50:44,700
need is a more general explanation of

1018
00:50:42,660 --> 00:50:48,509
how to use CSP and ooofff and then

1019
00:50:44,700 --> 00:50:51,109
perhaps profile it for lack of a better

1020
00:50:48,510 --> 00:50:53,910
word it for browser-based applications

1021
00:50:51,110 --> 00:50:56,970
are you volunteering to write that as a

1022
00:50:53,910 --> 00:50:59,730
as a separate CSP specification you mean

1023
00:50:56,970 --> 00:51:01,560
that this one would yeah it's it's not

1024
00:50:59,730 --> 00:51:03,120
hard it's it's just a little bit and I

1025
00:51:01,560 --> 00:51:05,299
can take it from that assistive looking

1026
00:51:03,120 --> 00:51:08,279
token flow document I think so maybe

1027
00:51:05,300 --> 00:51:11,670
yeah I I think I agree with that as well

1028
00:51:08,280 --> 00:51:13,590
it sounds like a space that is probably

1029
00:51:11,670 --> 00:51:16,380
too large to fit into a paragraph in

1030
00:51:13,590 --> 00:51:18,720
this doc and it and the fact that it

1031
00:51:16,380 --> 00:51:20,570
applies outside of this as well is a

1032
00:51:18,720 --> 00:51:24,060
good argument for being a separate

1033
00:51:20,570 --> 00:51:25,830
separate thing somewhere I don't know

1034
00:51:24,060 --> 00:51:28,650
who is going to work on that separate

1035
00:51:25,830 --> 00:51:35,250
thing you could do that

1036
00:51:28,650 --> 00:51:40,760
okay Tony did you okay so much sounds

1037
00:51:35,250 --> 00:51:43,560
like i annoy you huh great okay that

1038
00:51:40,760 --> 00:51:46,080
sorry but should should that go in that

1039
00:51:43,560 --> 00:51:48,150
security best practice one I mean should

1040
00:51:46,080 --> 00:51:52,940
it be a separate section there of how to

1041
00:51:48,150 --> 00:51:55,650
use CSP in oo for doing browser-based

1042
00:51:52,940 --> 00:51:58,130
flows seems like that's the place to put

1043
00:51:55,650 --> 00:52:01,590
it rather than its whole other document

1044
00:51:58,130 --> 00:52:06,990
hmm Boston do you have an opinion

1045
00:52:01,590 --> 00:52:09,870
that as the editor of that document from

1046
00:52:06,990 --> 00:52:11,399
a metaphorical perspective is it

1047
00:52:09,870 --> 00:52:13,740
something that the plow supplies to s

1048
00:52:11,400 --> 00:52:16,410
pas only that applies to all kinds of

1049
00:52:13,740 --> 00:52:18,899
web applications all web applications

1050
00:52:16,410 --> 00:52:21,420
okay if you could suggest showing some

1051
00:52:18,900 --> 00:52:22,740
text we can we can add it I mean Daniel

1052
00:52:21,420 --> 00:52:23,070
Fett is much more knowledgeable about

1053
00:52:22,740 --> 00:52:25,589
that

1054
00:52:23,070 --> 00:52:28,920
I think it will review that John what do

1055
00:52:25,590 --> 00:52:32,940
you think yeah makes sense

1056
00:52:28,920 --> 00:52:38,280
okay okay since we have a plan could

1057
00:52:32,940 --> 00:52:39,900
yeah we'll go do that um yeah please

1058
00:52:38,280 --> 00:52:42,690
suggest text as soon as possible so be

1059
00:52:39,900 --> 00:52:44,040
because as discussed previously there

1060
00:52:42,690 --> 00:52:45,900
are the document is in working class

1061
00:52:44,040 --> 00:52:47,370
call I'm going to be finished soon to us

1062
00:52:45,900 --> 00:52:49,200
will it really update and so we can

1063
00:52:47,370 --> 00:52:54,000
reflect that by the way I'll be sure to

1064
00:52:49,200 --> 00:52:58,160
do that ASAP thank you okay great that's

1065
00:52:54,000 --> 00:53:01,230
it for me on this one then so what's so

1066
00:52:58,160 --> 00:53:03,390
few open issues only which looks pretty

1067
00:53:01,230 --> 00:53:06,390
promising so do we have a time line to

1068
00:53:03,390 --> 00:53:08,009
get this updated and in a news I assume

1069
00:53:06,390 --> 00:53:09,540
that those are the only open issues we

1070
00:53:08,010 --> 00:53:13,020
are way off so we could actually start a

1071
00:53:09,540 --> 00:53:16,140
working class call fairly soon yeah that

1072
00:53:13,020 --> 00:53:18,630
sounds good to me I'm um I'll be working

1073
00:53:16,140 --> 00:53:20,580
on these updates in the next week or so

1074
00:53:18,630 --> 00:53:22,830
so I should have something ready for it

1075
00:53:20,580 --> 00:53:24,750
actually targeted my working class

1076
00:53:22,830 --> 00:53:28,100
called and in December beginning of

1077
00:53:24,750 --> 00:53:31,650
December I'd be happy to do that yep

1078
00:53:28,100 --> 00:53:34,009
excellent okay okay but wait here

1079
00:53:31,650 --> 00:53:34,010
yes

1080
00:53:53,240 --> 00:54:01,379
click again yeah alright it's me again

1081
00:53:58,820 --> 00:54:02,550
so this is something that came up in the

1082
00:54:01,380 --> 00:54:06,000
last couple of rounds of discussions

1083
00:54:02,550 --> 00:54:09,420
around transaction loss that Justin has

1084
00:54:06,000 --> 00:54:12,780
been leading um and came up on Monday

1085
00:54:09,420 --> 00:54:16,140
during the the session then um a little

1086
00:54:12,780 --> 00:54:17,700
bit background on what I want to talk

1087
00:54:16,140 --> 00:54:19,410
about here so ooofff

1088
00:54:17,700 --> 00:54:23,520
as we all know started a long time ago

1089
00:54:19,410 --> 00:54:25,799
with actually all around ten years ago

1090
00:54:23,520 --> 00:54:26,850
and is to find several grant types these

1091
00:54:25,800 --> 00:54:28,620
are the kind these are the grand types

1092
00:54:26,850 --> 00:54:30,569
that were set out at the beginning

1093
00:54:28,620 --> 00:54:33,120
over the course of the last ten years

1094
00:54:30,570 --> 00:54:36,240
this has changed this space has changed

1095
00:54:33,120 --> 00:54:39,180
a lot so we've added pixie through

1096
00:54:36,240 --> 00:54:42,500
another RFC originally only for native

1097
00:54:39,180 --> 00:54:44,970
apps there was a native apps BCP that

1098
00:54:42,500 --> 00:54:46,620
references pixie and saying here's how

1099
00:54:44,970 --> 00:54:49,830
to you know don't use implicit on mobile

1100
00:54:46,620 --> 00:54:52,109
apps anymore since then we've also added

1101
00:54:49,830 --> 00:54:56,009
the device grant which is a new totally

1102
00:54:52,110 --> 00:54:57,390
new top-level grant type in a auth we've

1103
00:54:56,010 --> 00:55:00,810
also now got this single page app

1104
00:54:57,390 --> 00:55:03,720
browser ASAP PCP that also says to do

1105
00:55:00,810 --> 00:55:05,759
pixie the security BCP is is coming

1106
00:55:03,720 --> 00:55:07,350
along now and is sort of crossing out

1107
00:55:05,760 --> 00:55:10,050
the implicit flow and password flow and

1108
00:55:07,350 --> 00:55:11,730
also saying do pixie for even

1109
00:55:10,050 --> 00:55:16,400
confidential clients which is a new a

1110
00:55:11,730 --> 00:55:18,570
new concept there so this is kind of

1111
00:55:16,400 --> 00:55:21,330
what I'm trying to make here is this is

1112
00:55:18,570 --> 00:55:23,280
kind of a lot for people who are new to

1113
00:55:21,330 --> 00:55:24,870
the space to try to navigate because

1114
00:55:23,280 --> 00:55:27,720
essentially you start at the beginning

1115
00:55:24,870 --> 00:55:29,910
and you have to read all these RFC's and

1116
00:55:27,720 --> 00:55:32,069
this is the picture you get which is

1117
00:55:29,910 --> 00:55:33,359
that oh well I just learned about this

1118
00:55:32,070 --> 00:55:35,570
thing and now I'm not supposed to do it

1119
00:55:33,360 --> 00:55:38,070
so instead I have to do this other thing

1120
00:55:35,570 --> 00:55:41,550
and if you look at what we actually have

1121
00:55:38,070 --> 00:55:44,130
right now this is actually what's left

1122
00:55:41,550 --> 00:55:46,950
is that basically everything uses auth

1123
00:55:44,130 --> 00:55:48,990
code and pixie in a browser and for

1124
00:55:46,950 --> 00:55:50,399
mobile apps or it's doing the client

1125
00:55:48,990 --> 00:55:52,620
conventionals grant because it's not a

1126
00:55:50,400 --> 00:55:54,330
you end-user application or it's doing

1127
00:55:52,620 --> 00:55:56,759
the device grant and this is basically

1128
00:55:54,330 --> 00:55:58,620
all we have left from both core we've

1129
00:55:56,760 --> 00:56:03,570
crossed out all the other ones through

1130
00:55:58,620 --> 00:56:05,400
the various yes sourcing I'm not

1131
00:56:03,570 --> 00:56:06,000
splitting hairs but you should mention

1132
00:56:05,400 --> 00:56:08,670
to reefer

1133
00:56:06,000 --> 00:56:10,020
grunt oh thanks yes refresh token I

1134
00:56:08,670 --> 00:56:12,530
didn't put any here because it's not a

1135
00:56:10,020 --> 00:56:14,820
it's not a it can't start the flow

1136
00:56:12,530 --> 00:56:19,580
that's can't you can't get the first two

1137
00:56:14,820 --> 00:56:25,040
access token that way but yes go ahead

1138
00:56:19,580 --> 00:56:28,549
Mike again the reason that Oh a score

1139
00:56:25,040 --> 00:56:32,300
defined Ayanna registries to extend it

1140
00:56:28,550 --> 00:56:36,030
was to enable extensions to be written

1141
00:56:32,300 --> 00:56:37,560
you can't just look at the RFC's you

1142
00:56:36,030 --> 00:56:40,710
actually have to look at all the

1143
00:56:37,560 --> 00:56:44,279
extensions that are registered in the I

1144
00:56:40,710 --> 00:56:53,460
on a registry so for instance there are

1145
00:56:44,280 --> 00:56:57,180
things even worse than this so for

1146
00:56:53,460 --> 00:56:59,790
instance there's a set of extensions

1147
00:56:57,180 --> 00:57:02,520
that define some additional response

1148
00:56:59,790 --> 00:57:05,850
types those are very important in the

1149
00:57:02,520 --> 00:57:09,170
wild as John said use of the jot

1150
00:57:05,850 --> 00:57:11,700
assertion flow is incredibly important

1151
00:57:09,170 --> 00:57:15,290
and you know there's some other stuff in

1152
00:57:11,700 --> 00:57:19,819
the pipe that we saw in the first slide

1153
00:57:15,290 --> 00:57:25,140
from the chairs we have token exchange

1154
00:57:19,820 --> 00:57:31,340
we have signed requests so there's a lot

1155
00:57:25,140 --> 00:57:35,370
more than you said and you know that but

1156
00:57:31,340 --> 00:57:37,140
my main point is it's not just the RFC's

1157
00:57:35,370 --> 00:57:39,839
that count it's the stuff in the

1158
00:57:37,140 --> 00:57:42,950
registry that this working group

1159
00:57:39,840 --> 00:57:48,830
established for that purpose that counts

1160
00:57:42,950 --> 00:57:52,560
so my point here is just that we have

1161
00:57:48,830 --> 00:57:57,029
patched and cut out things and added

1162
00:57:52,560 --> 00:57:58,500
band-aids from the core itself things

1163
00:57:57,030 --> 00:58:01,650
defined in the core not even in

1164
00:57:58,500 --> 00:58:03,450
registries or did device the device flow

1165
00:58:01,650 --> 00:58:05,370
is actually strictly speaking not in the

1166
00:58:03,450 --> 00:58:08,310
core that was the one that was one that

1167
00:58:05,370 --> 00:58:11,759
was added not in the core but it has um

1168
00:58:08,310 --> 00:58:13,920
I feel like we are asking people to

1169
00:58:11,760 --> 00:58:15,990
learn an awful lot of history that is

1170
00:58:13,920 --> 00:58:17,760
basically no longer relevant in order to

1171
00:58:15,990 --> 00:58:19,350
understand what to do and if we give

1172
00:58:17,760 --> 00:58:19,900
people my goal with this would be to

1173
00:58:19,350 --> 00:58:24,970
give people and

1174
00:58:19,900 --> 00:58:27,339
starting point to start here and then go

1175
00:58:24,970 --> 00:58:29,200
on from there to read about extensions

1176
00:58:27,339 --> 00:58:32,920
that are you know very important

1177
00:58:29,200 --> 00:58:34,750
enabling very useful things basically my

1178
00:58:32,920 --> 00:58:36,609
goal with with defining something that

1179
00:58:34,750 --> 00:58:39,069
we would call a lot two point one would

1180
00:58:36,609 --> 00:58:42,339
be to take what we do know is best

1181
00:58:39,069 --> 00:58:44,349
practice today that is deployed give it

1182
00:58:42,339 --> 00:58:45,609
you know sort of snapshot that and have

1183
00:58:44,349 --> 00:58:49,720
this be a new starting point for people

1184
00:58:45,609 --> 00:58:55,630
to go launch off of honnest from from

1185
00:58:49,720 --> 00:58:57,669
the floor now I think it's it might also

1186
00:58:55,630 --> 00:59:00,520
be worthwhile to think about like who

1187
00:58:57,670 --> 00:59:03,880
the audience is because I think in the

1188
00:59:00,520 --> 00:59:05,710
meanwhile after all these years the

1189
00:59:03,880 --> 00:59:07,210
people who there are different types of

1190
00:59:05,710 --> 00:59:09,400
people who want to read into the

1191
00:59:07,210 --> 00:59:11,170
material and there are some who just who

1192
00:59:09,400 --> 00:59:14,140
are developers who developers of

1193
00:59:11,170 --> 00:59:17,049
applications who want to use ours and

1194
00:59:14,140 --> 00:59:20,980
they probably are better off relying on

1195
00:59:17,049 --> 00:59:22,690
experts like you guys here who said who

1196
00:59:20,980 --> 00:59:25,089
developed libraries and to use those

1197
00:59:22,690 --> 00:59:27,069
libraries properly and they would then

1198
00:59:25,089 --> 00:59:30,700
implement some of the stuff we talked

1199
00:59:27,069 --> 00:59:33,910
about earlier during a meeting if you

1200
00:59:30,700 --> 00:59:36,399
are into writing your own server from

1201
00:59:33,910 --> 00:59:37,960
scratch I think you have to understand

1202
00:59:36,400 --> 00:59:39,400
that you have to do more reading you

1203
00:59:37,960 --> 00:59:42,730
have to do have to have a better

1204
00:59:39,400 --> 00:59:44,200
understanding and there's there's a

1205
00:59:42,730 --> 00:59:46,630
certain amount of effort that is

1206
00:59:44,200 --> 00:59:48,939
unavoidable so a book like the one you

1207
00:59:46,630 --> 00:59:50,500
wrote or Cheston would probably a good

1208
00:59:48,940 --> 00:59:53,789
starting point then then you have to

1209
00:59:50,500 --> 00:59:56,470
read the documents anyway I think that's

1210
00:59:53,789 --> 00:59:59,319
you have to distinguish between the and

1211
00:59:56,470 --> 01:00:00,970
the different audience audience it would

1212
00:59:59,319 --> 01:00:11,140
appear to me that this could be useful

1213
01:00:00,970 --> 01:00:12,970
just enricher I think it should I agree

1214
01:00:11,140 --> 01:00:15,839
with Aaron that this is something we

1215
01:00:12,970 --> 01:00:21,279
should probably do and considering that

1216
01:00:15,839 --> 01:00:23,740
two of the authors of books that kind of

1217
01:00:21,279 --> 01:00:26,200
do this thing for people are saying hey

1218
01:00:23,740 --> 01:00:29,348
this should be a real thing from the

1219
01:00:26,200 --> 01:00:31,808
working group that should be taken as a

1220
01:00:29,349 --> 01:00:33,780
signal to the community all right Aaron

1221
01:00:31,809 --> 01:00:35,850
and I both make a significant

1222
01:00:33,780 --> 01:00:39,810
of our income from explaining to people

1223
01:00:35,850 --> 01:00:43,980
how to navigate this stuff and if I have

1224
01:00:39,810 --> 01:00:47,400
to do that less I'll be happier I think

1225
01:00:43,980 --> 01:00:50,640
this is a good idea so it's not it's not

1226
01:00:47,400 --> 01:00:53,130
so much saying don't go read the

1227
01:00:50,640 --> 01:00:56,549
registry but it's saying we're not going

1228
01:00:53,130 --> 01:00:58,530
to force you down that road right at the

1229
01:00:56,550 --> 01:01:00,870
very beginning it's really it's just

1230
01:00:58,530 --> 01:01:03,080
collecting the stuff that's already out

1231
01:01:00,870 --> 01:01:05,370
there on a page

1232
01:01:03,080 --> 01:01:07,500
thanks yeah and I love you better as an

1233
01:01:05,370 --> 01:01:09,960
RFC and I also want to be very explicit

1234
01:01:07,500 --> 01:01:12,030
about this this is not meant to be a new

1235
01:01:09,960 --> 01:01:13,830
any new behavior in here this is not

1236
01:01:12,030 --> 01:01:15,840
meant to to find anything new at all

1237
01:01:13,830 --> 01:01:17,610
this will be meant to and it doesn't

1238
01:01:15,840 --> 01:01:19,410
even have to be an RFC it's fine if it

1239
01:01:17,610 --> 01:01:20,490
would be a BCP turns out people don't

1240
01:01:19,410 --> 01:01:26,480
actually know the difference and don't

1241
01:01:20,490 --> 01:01:31,560
care don't even don't even go there um

1242
01:01:26,480 --> 01:01:33,540
that the point is that having some you

1243
01:01:31,560 --> 01:01:34,770
know official piece of paper people

1244
01:01:33,540 --> 01:01:40,050
starting or starting from as my goal

1245
01:01:34,770 --> 01:01:41,940
here got ya Tony and Edlund so it's a

1246
01:01:40,050 --> 01:01:44,670
little bit confusing that this would be

1247
01:01:41,940 --> 01:01:48,030
yet another pcp or something like that

1248
01:01:44,670 --> 01:01:51,600
why we've got the current BCP right why

1249
01:01:48,030 --> 01:01:53,100
can't we roll that up into an oauth 2.0

1250
01:01:51,600 --> 01:01:55,680
document so you don't have to go through

1251
01:01:53,100 --> 01:01:58,710
all that crap of reading the BCP and it

1252
01:01:55,680 --> 01:02:01,230
would take everything that BCP has and

1253
01:01:58,710 --> 01:02:02,220
says this is this is the new base and

1254
01:02:01,230 --> 01:02:03,600
just go from there

1255
01:02:02,220 --> 01:02:06,930
because that stuff's already been

1256
01:02:03,600 --> 01:02:08,520
written you can just you know take out

1257
01:02:06,930 --> 01:02:10,470
things that it said you know that are in

1258
01:02:08,520 --> 01:02:12,360
there and take it out and just run with

1259
01:02:10,470 --> 01:02:15,569
that just and then we don't have a BCP

1260
01:02:12,360 --> 01:02:19,290
anymore we just got the the new 2.1

1261
01:02:15,570 --> 01:02:20,880
document yeah I'm agreeing on the

1262
01:02:19,290 --> 01:02:22,680
particular format this takes I think

1263
01:02:20,880 --> 01:02:24,930
that's what we want to discuss um I also

1264
01:02:22,680 --> 01:02:29,069
I don't have a lot of time left so

1265
01:02:24,930 --> 01:02:30,540
before I let you go I want to just

1266
01:02:29,070 --> 01:02:35,250
mention a couple other things and also

1267
01:02:30,540 --> 01:02:38,100
mention that we have time allocated here

1268
01:02:35,250 --> 01:02:39,420
at 3 o'clock where I booked a meeting

1269
01:02:38,100 --> 01:02:42,000
room not in this room it's in another

1270
01:02:39,420 --> 01:02:43,530
room here where I would like to actually

1271
01:02:42,000 --> 01:02:46,440
continue those discussions on how to

1272
01:02:43,530 --> 01:02:48,480
make how this might actually look what

1273
01:02:46,440 --> 01:02:51,280
this 4 might actually look like

1274
01:02:48,480 --> 01:02:52,840
but yeah this quickly I the goal is not

1275
01:02:51,280 --> 01:02:56,530
to find anything new the goals take what

1276
01:02:52,840 --> 01:02:59,320
is defined and um snapshot that which is

1277
01:02:56,530 --> 01:03:00,610
these are the things don't don't comment

1278
01:02:59,320 --> 01:03:03,100
on these particular points right now the

1279
01:03:00,610 --> 01:03:05,770
save this for the discussion but this is

1280
01:03:03,100 --> 01:03:09,040
sort of what I see as like here's things

1281
01:03:05,770 --> 01:03:10,450
that we know works well and there's a

1282
01:03:09,040 --> 01:03:13,540
separate issue here which I want I do

1283
01:03:10,450 --> 01:03:15,399
want to address or bring up which is

1284
01:03:13,540 --> 01:03:17,320
that if you're building an authorization

1285
01:03:15,400 --> 01:03:19,780
server that is meant to be interoperable

1286
01:03:17,320 --> 01:03:21,940
with arbitrary resource servers there's

1287
01:03:19,780 --> 01:03:25,300
I think a separate set of things those

1288
01:03:21,940 --> 01:03:26,740
need those a SS need to do in order to

1289
01:03:25,300 --> 01:03:28,690
be interoperable and we already have a

1290
01:03:26,740 --> 01:03:31,270
set of specs that address that also and

1291
01:03:28,690 --> 01:03:34,660
I think that's also another another

1292
01:03:31,270 --> 01:03:37,000
thing too to bring up so yeah

1293
01:03:34,660 --> 01:03:38,410
um feel free to cut me off whenever but

1294
01:03:37,000 --> 01:03:41,200
I whenever the comments are done I'm

1295
01:03:38,410 --> 01:03:42,879
good we're good ok so yeah I just wanted

1296
01:03:41,200 --> 01:03:45,399
to mention that don't feel like you have

1297
01:03:42,880 --> 01:03:46,860
to bring up all of the points right now

1298
01:03:45,400 --> 01:03:48,640
because we do have time set aside

1299
01:03:46,860 --> 01:03:50,020
immediately following this meeting where

1300
01:03:48,640 --> 01:03:53,830
I would love to actually continue those

1301
01:03:50,020 --> 01:03:54,820
discussions in a lot more detail this is

1302
01:03:53,830 --> 01:03:57,270
Dawson

1303
01:03:54,820 --> 01:04:03,040
it happens not so often but I fully

1304
01:03:57,270 --> 01:04:05,290
agree with Tony we already have a PCP we

1305
01:04:03,040 --> 01:04:09,090
don't need another one the problem with

1306
01:04:05,290 --> 01:04:11,380
the PCP is that it is a workaround right

1307
01:04:09,090 --> 01:04:14,110
because all the recommendations that we

1308
01:04:11,380 --> 01:04:17,800
are giving right now should from my

1309
01:04:14,110 --> 01:04:19,150
perspective update RFC 67 49 and 50 it

1310
01:04:17,800 --> 01:04:21,130
should go into security consideration

1311
01:04:19,150 --> 01:04:24,850
section or even in there in the in the

1312
01:04:21,130 --> 01:04:27,640
main body of the text and I think we

1313
01:04:24,850 --> 01:04:30,040
should develop a culture of updating

1314
01:04:27,640 --> 01:04:33,810
ooofff from time to time because the

1315
01:04:30,040 --> 01:04:38,770
current spec is I think it decayed old

1316
01:04:33,810 --> 01:04:43,210
yeah like like Tia as does and I don't

1317
01:04:38,770 --> 01:04:45,250
know why we were reluctant to to come up

1318
01:04:43,210 --> 01:04:48,750
with new RFC's we've done that before if

1319
01:04:45,250 --> 01:04:51,010
our RFC 679 it replaced the o of 1 or C

1320
01:04:48,750 --> 01:04:52,450
we should dedicate to that again and

1321
01:04:51,010 --> 01:04:54,010
then carefully think about backward

1322
01:04:52,450 --> 01:04:56,350
compatibility and what we do with

1323
01:04:54,010 --> 01:04:58,930
breaking changes and so on I said I I

1324
01:04:56,350 --> 01:05:01,779
like the idea we should be consequent

1325
01:04:58,930 --> 01:05:04,120
and from my experience with

1326
01:05:01,780 --> 01:05:07,450
working with other communities my

1327
01:05:04,120 --> 01:05:08,859
assessment is the RC is not made for the

1328
01:05:07,450 --> 01:05:10,629
average developer that doesn't want to

1329
01:05:08,860 --> 01:05:12,430
implement an app because that most

1330
01:05:10,630 --> 01:05:16,870
likely reuse the documentation provided

1331
01:05:12,430 --> 01:05:18,520
by the Service Board the RC is being

1332
01:05:16,870 --> 01:05:21,460
consumed by people that work right

1333
01:05:18,520 --> 01:05:25,060
libraries or define api's for ecosystems

1334
01:05:21,460 --> 01:05:29,260
or applications and those typically only

1335
01:05:25,060 --> 01:05:30,790
read are c6 is m.49 nothing more so if

1336
01:05:29,260 --> 01:05:33,550
you're gonna replace that with a new RFC

1337
01:05:30,790 --> 01:05:35,740
that has all in all the most stuff in

1338
01:05:33,550 --> 01:05:41,770
there what's in the BCP right now that's

1339
01:05:35,740 --> 01:05:44,620
perfect from my perspective hi i'm

1340
01:05:41,770 --> 01:05:46,750
engineer you know hat so thinking about

1341
01:05:44,620 --> 01:05:47,440
this more abstractly not your

1342
01:05:46,750 --> 01:05:49,090
specifically

1343
01:05:47,440 --> 01:05:51,490
it seems like we have a bunch of

1344
01:05:49,090 --> 01:05:52,960
documents that specify all sorts of

1345
01:05:51,490 --> 01:05:55,689
things sometimes it's must sometimes

1346
01:05:52,960 --> 01:05:57,970
it's kind of optional but what we want

1347
01:05:55,690 --> 01:06:00,040
to do is cherry-pick from that

1348
01:05:57,970 --> 01:06:01,600
collection of documents what we want

1349
01:06:00,040 --> 01:06:03,670
people to do typically being more

1350
01:06:01,600 --> 01:06:06,880
restrictive saying don't do a bunch of

1351
01:06:03,670 --> 01:06:08,740
things or up level and kind of security

1352
01:06:06,880 --> 01:06:10,690
making instances word so should be a

1353
01:06:08,740 --> 01:06:12,549
must in other forums i've heard that

1354
01:06:10,690 --> 01:06:14,170
call to profile i've also heard that

1355
01:06:12,550 --> 01:06:16,240
called in applicability statement so

1356
01:06:14,170 --> 01:06:19,540
another thought on how we might pursue

1357
01:06:16,240 --> 01:06:21,100
this that's I think not entirely what

1358
01:06:19,540 --> 01:06:24,880
I'm describing because I am actually

1359
01:06:21,100 --> 01:06:28,029
describing sort of if you if you play

1360
01:06:24,880 --> 01:06:31,390
all of the RFC's and BCP is in order you

1361
01:06:28,030 --> 01:06:33,370
get something that which is what I want

1362
01:06:31,390 --> 01:06:35,799
to snapshot and it's not that it's a

1363
01:06:33,370 --> 01:06:38,319
profile or tightening up or loosening of

1364
01:06:35,800 --> 01:06:40,390
things it's just that at some point this

1365
01:06:38,320 --> 01:06:41,620
RC says now do this and then this one

1366
01:06:40,390 --> 01:06:44,230
says don't do this thing that was

1367
01:06:41,620 --> 01:06:46,029
defined there so I'm not saying it's not

1368
01:06:44,230 --> 01:06:47,380
even that it's not optionally more like

1369
01:06:46,030 --> 01:06:49,630
if you follow the security BCP which is

1370
01:06:47,380 --> 01:06:51,040
probably the farthest thing along that

1371
01:06:49,630 --> 01:06:54,850
references the most things back in the

1372
01:06:51,040 --> 01:06:57,790
chain that's the closest to what what

1373
01:06:54,850 --> 01:07:00,100
I'm talking about that we have so it's

1374
01:06:57,790 --> 01:07:02,770
not that it's making new tighter

1375
01:07:00,100 --> 01:07:05,560
decisions about security it's that it's

1376
01:07:02,770 --> 01:07:07,870
taking the set of documents that we have

1377
01:07:05,560 --> 01:07:09,790
and then just removing this stuff that

1378
01:07:07,870 --> 01:07:13,029
these various pieces say have already

1379
01:07:09,790 --> 01:07:15,340
been removed from the spec right I mean

1380
01:07:13,030 --> 01:07:16,780
I know I won't cut a believer

1381
01:07:15,340 --> 01:07:18,790
but I think with a profile in addition

1382
01:07:16,780 --> 01:07:20,290
to you know saying should a must which

1383
01:07:18,790 --> 01:07:21,670
is I think what you keyed in on you

1384
01:07:20,290 --> 01:07:23,770
could do the other thing which is just

1385
01:07:21,670 --> 01:07:26,230
to say you're not doing that or we're

1386
01:07:23,770 --> 01:07:27,490
just taking a vertical cut above it

1387
01:07:26,230 --> 01:07:29,350
maybe we'd have table V ously look at a

1388
01:07:27,490 --> 01:07:30,700
lot more closely Thanks and I think as

1389
01:07:29,350 --> 01:07:33,040
the the profile thing is a good point

1390
01:07:30,700 --> 01:07:35,140
though because the requirements on a s

1391
01:07:33,040 --> 01:07:37,270
is for using things like John access

1392
01:07:35,140 --> 01:07:40,690
tokens and token introspection I think

1393
01:07:37,270 --> 01:07:42,130
those do fit as a profile of if you are

1394
01:07:40,690 --> 01:07:46,090
building this thing that looks like this

1395
01:07:42,130 --> 01:07:48,370
this is how you should be doing it I

1396
01:07:46,090 --> 01:07:51,580
guess I'm not sure if this is a profile

1397
01:07:48,370 --> 01:07:53,799
or a 2.1 or miss or what but generally

1398
01:07:51,580 --> 01:07:55,420
speaking I'm in favor of something along

1399
01:07:53,800 --> 01:07:57,760
these lines I agree that I think there's

1400
01:07:55,420 --> 01:07:59,680
a need there and some sort of document

1401
01:07:57,760 --> 01:08:02,020
that's more accessible and covers more

1402
01:07:59,680 --> 01:08:06,190
things it's definitely worthwhile to

1403
01:08:02,020 --> 01:08:08,980
people I do think it might be more

1404
01:08:06,190 --> 01:08:10,450
difficult than you've made it seem to

1405
01:08:08,980 --> 01:08:12,580
pick and choose which pieces are

1406
01:08:10,450 --> 01:08:15,100
included or not like you pointed to the

1407
01:08:12,580 --> 01:08:16,300
device grant specifically like that

1408
01:08:15,100 --> 01:08:16,870
could go in or out it's kind of

1409
01:08:16,300 --> 01:08:20,260
arbitrary

1410
01:08:16,870 --> 01:08:22,450
you know jto t client authentication

1411
01:08:20,260 --> 01:08:24,609
could be in or out and certainly they

1412
01:08:22,450 --> 01:08:26,529
don't all need to be there but some I

1413
01:08:24,609 --> 01:08:27,910
guess we'll have to think about how that

1414
01:08:26,529 --> 01:08:29,979
looks well that's exactly what I want to

1415
01:08:27,910 --> 01:08:32,529
talk about or if there's an obsession

1416
01:08:29,979 --> 01:08:34,750
maybe references to things as opposed to

1417
01:08:32,529 --> 01:08:39,550
fully and lime or so forth but yet in

1418
01:08:34,750 --> 01:08:41,859
general yes I'm sorry

1419
01:08:39,550 --> 01:08:43,540
I wanted to saw Mike there and reminded

1420
01:08:41,859 --> 01:08:45,250
me well it's sort of true about the

1421
01:08:43,540 --> 01:08:47,140
registry I did want to say that most

1422
01:08:45,250 --> 01:08:49,569
people in the world don't even know the

1423
01:08:47,140 --> 01:08:51,250
registry exists so the expectation that

1424
01:08:49,569 --> 01:08:53,108
people would go there and sort of work

1425
01:08:51,250 --> 01:08:55,149
backwards from it is is I don't think

1426
01:08:53,109 --> 01:09:03,370
very pragmatic and in the real world

1427
01:08:55,149 --> 01:09:07,950
yeah I agree with that as I said it to

1428
01:09:03,370 --> 01:09:12,399
make during the set Dispatch discussions

1429
01:09:07,950 --> 01:09:15,339
I and we can talk about this in the next

1430
01:09:12,399 --> 01:09:17,349
hour but we need to consider very

1431
01:09:15,339 --> 01:09:23,830
carefully if we're going to do things

1432
01:09:17,350 --> 01:09:27,100
that bifurcate a working ecosystem I am

1433
01:09:23,830 --> 01:09:29,028
fine like Brian with writing a profile

1434
01:09:27,100 --> 01:09:32,179
or a document whatever you

1435
01:09:29,029 --> 01:09:35,569
all it that picks and chooses from what

1436
01:09:32,179 --> 01:09:37,839
we have and doesn't break anything if we

1437
01:09:35,569 --> 01:09:41,329
go down the road of changing protocols

1438
01:09:37,839 --> 01:09:45,109
that's a much bigger deal and I'm not

1439
01:09:41,328 --> 01:09:48,769
necessarily in favor of that to twist

1440
01:09:45,109 --> 01:09:52,869
ins I think somewhat throwaway comment

1441
01:09:48,770 --> 01:09:55,730
where are you tourists in by tourists in

1442
01:09:52,868 --> 01:10:00,820
well we should get in the habit of

1443
01:09:55,730 --> 01:10:04,759
updating auth just like we update TCP

1444
01:10:00,820 --> 01:10:07,429
just like we update TCP there are

1445
01:10:04,760 --> 01:10:10,369
actually very different situations the

1446
01:10:07,429 --> 01:10:12,440
good news about TCP is there's a very

1447
01:10:10,369 --> 01:10:17,058
small number of implementations in the

1448
01:10:12,440 --> 01:10:18,829
world and they're behind AP is that for

1449
01:10:17,059 --> 01:10:23,090
the most part don't change when you

1450
01:10:18,829 --> 01:10:25,639
update TCP so applications keep working

1451
01:10:23,090 --> 01:10:29,829
they just start using a new version of

1452
01:10:25,639 --> 01:10:32,150
the protocol whereas if we update ooofff

1453
01:10:29,829 --> 01:10:35,090
there's going to be hundreds or

1454
01:10:32,150 --> 01:10:37,299
thousands of implementations that have

1455
01:10:35,090 --> 01:10:43,960
to consider whether to update themselves

1456
01:10:37,300 --> 01:10:43,960
and we could build chaos really quickly

1457
01:10:44,349 --> 01:10:51,679
torsion again first of all I refer to

1458
01:10:47,000 --> 01:10:55,520
TLS not the TCP and TLS is TLS is

1459
01:10:51,679 --> 01:10:57,020
updated regularly okay all right all

1460
01:10:55,520 --> 01:11:00,260
right so there is one knot oh there's

1461
01:10:57,020 --> 01:11:02,480
1.2 and 1.3 and so on so it's possible

1462
01:11:00,260 --> 01:11:05,239
and that's why I said and it wasn't a

1463
01:11:02,480 --> 01:11:07,940
throwaway comment we need to carefully

1464
01:11:05,239 --> 01:11:09,769
think about breaking changes when we

1465
01:11:07,940 --> 01:11:12,619
make them how we make them and how we

1466
01:11:09,770 --> 01:11:16,610
support for example a SS to support

1467
01:11:12,619 --> 01:11:19,009
different versions of the protocol to

1468
01:11:16,610 --> 01:11:20,839
stay backwards compatible looking

1469
01:11:19,010 --> 01:11:23,510
forward I would like to come up with or

1470
01:11:20,840 --> 01:11:26,690
I wouldn't want to change the way we

1471
01:11:23,510 --> 01:11:30,349
work so that we really maintain the

1472
01:11:26,690 --> 01:11:33,759
ecosystem in just instead of preserving

1473
01:11:30,349 --> 01:11:33,760
the ecosystem for the next 20 years

1474
01:11:35,239 --> 01:11:42,200
but I do stand by my point that TLS is

1475
01:11:38,989 --> 01:11:47,179
behind api's that don't change when you

1476
01:11:42,200 --> 01:11:49,519
update TLS where changes to OAuth don't

1477
01:11:47,180 --> 01:11:50,930
have that property I would tend I would

1478
01:11:49,520 --> 01:11:54,440
actually disagree with that point

1479
01:11:50,930 --> 01:11:55,790
because it's really only a s's where

1480
01:11:54,440 --> 01:11:57,290
that breaking change happens if you're

1481
01:11:55,790 --> 01:11:59,840
building an application consuming an

1482
01:11:57,290 --> 01:12:00,950
OAuth API you get an access token dais

1483
01:11:59,840 --> 01:12:03,530
is supposed to be able to change what

1484
01:12:00,950 --> 01:12:05,360
the access token looks like already how

1485
01:12:03,530 --> 01:12:06,980
that application gets an access token is

1486
01:12:05,360 --> 01:12:08,450
probably be using a library you update

1487
01:12:06,980 --> 01:12:10,669
your OAuth library like you like you

1488
01:12:08,450 --> 01:12:12,530
update your TLS library I think they're

1489
01:12:10,670 --> 01:12:14,290
not as different as you're making out

1490
01:12:12,530 --> 01:12:17,559
them out to be

1491
01:12:14,290 --> 01:12:21,050
Anabelle Beckman Amazon back to the

1492
01:12:17,560 --> 01:12:25,420
profile versus protocol version question

1493
01:12:21,050 --> 01:12:28,580
to my mind a a profile document would be

1494
01:12:25,420 --> 01:12:31,550
one which you know much like the current

1495
01:12:28,580 --> 01:12:34,460
BCP that's being developed references

1496
01:12:31,550 --> 01:12:35,900
the existing documents and says in says

1497
01:12:34,460 --> 01:12:37,250
hey this is this is the stuff that you

1498
01:12:35,900 --> 01:12:38,059
should use this stuff you really

1499
01:12:37,250 --> 01:12:41,570
shouldn't anymore

1500
01:12:38,060 --> 01:12:46,370
whereas a protocol version would be a

1501
01:12:41,570 --> 01:12:50,059
new document that obsoletes a bunch of

1502
01:12:46,370 --> 01:12:52,719
RFC s rather than refers to them and the

1503
01:12:50,060 --> 01:12:54,920
benefit of that potentially being that

1504
01:12:52,719 --> 01:12:58,340
developers have one thing that they have

1505
01:12:54,920 --> 01:13:00,860
to read rather than one thing they read

1506
01:12:58,340 --> 01:13:02,780
and then a dozen or two dozen other

1507
01:13:00,860 --> 01:13:04,969
things that they read that modify and

1508
01:13:02,780 --> 01:13:06,830
amend and gradually tweak their

1509
01:13:04,969 --> 01:13:08,210
understanding or of what they're

1510
01:13:06,830 --> 01:13:12,710
supposed to build or lack of

1511
01:13:08,210 --> 01:13:17,140
understanding i-i-i i think the the

1512
01:13:12,710 --> 01:13:21,170
protocol versioning idea is appealing

1513
01:13:17,140 --> 01:13:25,190
however in the face of potentially

1514
01:13:21,170 --> 01:13:27,739
parallel developments on an OAuth 3 that

1515
01:13:25,190 --> 01:13:32,480
may be a lot to try and get the

1516
01:13:27,739 --> 01:13:35,330
community to digest and and we may find

1517
01:13:32,480 --> 01:13:37,639
a lot of friction there with with with

1518
01:13:35,330 --> 01:13:40,219
development or adoption or under of that

1519
01:13:37,640 --> 01:13:44,030
or people becoming confused about what

1520
01:13:40,219 --> 01:13:47,060
it is exactly we're trying to do as to

1521
01:13:44,030 --> 01:13:50,599
what the pain points are for for

1522
01:13:47,060 --> 01:13:54,890
upgrading that you know TLS versus

1523
01:13:50,600 --> 01:14:00,740
I think the simplicity of TLS version

1524
01:13:54,890 --> 01:14:05,120
upgrades is being overstated and that

1525
01:14:00,740 --> 01:14:08,570
there's it having had some exposure to

1526
01:14:05,120 --> 01:14:11,000
real real world upgrade processes it's

1527
01:14:08,570 --> 01:14:12,679
it's painful although there's a lot of

1528
01:14:11,000 --> 01:14:16,430
backwards compatibility issues that you

1529
01:14:12,680 --> 01:14:19,670
still have to maintain despite the fact

1530
01:14:16,430 --> 01:14:21,440
that you know theoretically you know

1531
01:14:19,670 --> 01:14:24,740
clients are just using a library and it

1532
01:14:21,440 --> 01:14:30,830
all just works yeah it's it's it's

1533
01:14:24,740 --> 01:14:32,090
harder than it might look hi everyone

1534
01:14:30,830 --> 01:14:33,559
and you know you're sensitive to we're

1535
01:14:32,090 --> 01:14:35,720
running out of time I just wanted to

1536
01:14:33,560 --> 01:14:37,130
suggest other working groups then we've

1537
01:14:35,720 --> 01:14:38,840
had a lot of discussion my question

1538
01:14:37,130 --> 01:14:40,670
would be independent of what path we

1539
01:14:38,840 --> 01:14:43,460
would go down what information do we

1540
01:14:40,670 --> 01:14:48,230
need you have to help us figure this out

1541
01:14:43,460 --> 01:14:50,420
and do we have that information okay if

1542
01:14:48,230 --> 01:14:51,950
something to think about and discussed

1543
01:14:50,420 --> 01:14:54,170
during the meeting so I won't be

1544
01:14:51,950 --> 01:14:55,940
unfortunately due to conflicts I be able

1545
01:14:54,170 --> 01:14:57,650
to participate but I'm expecting that

1546
01:14:55,940 --> 01:14:59,469
you you are going to come up with a

1547
01:14:57,650 --> 01:15:04,820
summary of what you guys came up with

1548
01:14:59,470 --> 01:15:06,770
and looking forward to see whatever we

1549
01:15:04,820 --> 01:15:08,150
should do in that regard

1550
01:15:06,770 --> 01:15:09,680
so it's obviously it's just the

1551
01:15:08,150 --> 01:15:11,839
beginning of a discussion and not the

1552
01:15:09,680 --> 01:15:14,060
end yet but it's good that you kicked it

1553
01:15:11,840 --> 01:15:16,070
off it bubbled up a couple of times and

1554
01:15:14,060 --> 01:15:18,980
people approached us about this topic

1555
01:15:16,070 --> 01:15:22,370
before and it seems that there's broader

1556
01:15:18,980 --> 01:15:25,129
interest to discuss and and to do

1557
01:15:22,370 --> 01:15:26,809
something about this so that's thank you

1558
01:15:25,130 --> 01:15:27,950
Thank You Aaron hopefully see their

1559
01:15:26,810 --> 01:15:30,130
butterworth room is the one that I

1560
01:15:27,950 --> 01:15:30,130
booked

1561
01:15:30,790 --> 01:15:33,920
[Music]

1562
01:15:36,060 --> 01:15:44,350
and now we switch over to Boston again

1563
01:15:41,199 --> 01:15:45,969
and we'll have the first part for the

1564
01:15:44,350 --> 01:15:47,290
rest of the session of the default

1565
01:15:45,969 --> 01:16:06,880
discussion and then there will be more

1566
01:15:47,290 --> 01:16:10,120
at the next session Oh wrong sorry did

1567
01:16:06,880 --> 01:16:13,659
you guys have sent me slides guys did

1568
01:16:10,120 --> 01:16:25,570
you send me slides do you want to use

1569
01:16:13,659 --> 01:16:30,219
slides I sure okay we are we are going

1570
01:16:25,570 --> 01:16:33,219
to do that we're postponing it to the

1571
01:16:30,219 --> 01:16:35,350
next session can be half the discussion

1572
01:16:33,219 --> 01:16:37,360
start for addy pop and then we have

1573
01:16:35,350 --> 01:16:48,030
another session and then finalize that

1574
01:16:37,360 --> 01:16:48,030
is that good for you guys okay I guess

1575
01:16:51,570 --> 01:16:59,139
you didn't get another update of slides

1576
01:16:54,489 --> 01:17:00,070
to do I see was through the tool it

1577
01:16:59,140 --> 01:17:02,530
didn't

1578
01:17:00,070 --> 01:17:08,250
it said authorize and that kicked on

1579
01:17:02,530 --> 01:17:16,239
authorize that the right version no it's

1580
01:17:08,250 --> 01:17:19,150
good enough all right so Roth to

1581
01:17:16,239 --> 01:17:21,150
demonstration of proof of possession at

1582
01:17:19,150 --> 01:17:28,989
the application layer otherwise known as

1583
01:17:21,150 --> 01:17:30,339
depop sure so sort of a quick overview

1584
01:17:28,989 --> 01:17:33,599
of what we're talking about here depop

1585
01:17:30,340 --> 01:17:36,640
is a draft proposal for a new newish

1586
01:17:33,600 --> 01:17:38,590
simple and concise approach to a proof

1587
01:17:36,640 --> 01:17:41,440
of possession for OAuth access and

1588
01:17:38,590 --> 01:17:43,150
refresh tokens and the idea is it's

1589
01:17:41,440 --> 01:17:45,339
using the application level constructs

1590
01:17:43,150 --> 01:17:46,690
and leveraging existing library support

1591
01:17:45,340 --> 01:17:50,020
to make it happen so hopefully it's

1592
01:17:46,690 --> 01:17:51,790
actually implementable and deployable

1593
01:17:50,020 --> 01:17:53,710
there have been as many of you probably

1594
01:17:51,790 --> 01:17:55,330
know a lot of efforts around proof of

1595
01:17:53,710 --> 01:17:57,000
possession and OAuth I lift it and lift

1596
01:17:55,330 --> 01:18:00,160
them out here list them out here and

1597
01:17:57,000 --> 01:18:02,050
they've all been somewhat unsuccessful

1598
01:18:00,160 --> 01:18:03,790
to varying degrees and I'm responsible

1599
01:18:02,050 --> 01:18:06,550
for some of those so don't try to cast

1600
01:18:03,790 --> 01:18:08,800
aspersions here on anybody I have as

1601
01:18:06,550 --> 01:18:10,930
many aspersions on me as as the next one

1602
01:18:08,800 --> 01:18:13,630
but we've tried a lot of different

1603
01:18:10,930 --> 01:18:14,800
things with varying levels of success I

1604
01:18:13,630 --> 01:18:17,620
think we've learned some things in the

1605
01:18:14,800 --> 01:18:21,100
process as well and that brings us to

1606
01:18:17,620 --> 01:18:23,230
sort of this new effort which in the

1607
01:18:21,100 --> 01:18:25,030
motivations behind it are really just to

1608
01:18:23,230 --> 01:18:26,049
have some at some level it's just to

1609
01:18:25,030 --> 01:18:27,519
provide something that's widely

1610
01:18:26,050 --> 01:18:30,250
applicable and better than just basic

1611
01:18:27,520 --> 01:18:32,350
bearer tokens as well as the fact that

1612
01:18:30,250 --> 01:18:34,120
the OAuth 2 security BCP that we talked

1613
01:18:32,350 --> 01:18:36,340
about earlier does recommend the use of

1614
01:18:34,120 --> 01:18:38,170
sender constraints tokens although this

1615
01:18:36,340 --> 01:18:39,700
is it's sort of aspirational because we

1616
01:18:38,170 --> 01:18:42,490
don't have a lot of great ways to

1617
01:18:39,700 --> 01:18:46,300
actually do it and it recommends this to

1618
01:18:42,490 --> 01:18:48,280
prevent token replay across from our SRS

1619
01:18:46,300 --> 01:18:50,200
basically at different endpoints but

1620
01:18:48,280 --> 01:18:51,820
there's a lot of other benefits of proof

1621
01:18:50,200 --> 01:18:54,309
of possession style tokens beyond just

1622
01:18:51,820 --> 01:18:56,410
that and like I said we sort of lack a

1623
01:18:54,310 --> 01:18:58,540
suitable and widely applicable pop

1624
01:18:56,410 --> 01:19:01,570
method right now this is especially true

1625
01:18:58,540 --> 01:19:04,600
for single page applications we do have

1626
01:19:01,570 --> 01:19:07,719
the soon-to-be RFC in TLS draft for

1627
01:19:04,600 --> 01:19:10,300
OAuth but it it has sort of to put it

1628
01:19:07,720 --> 01:19:11,860
mildly major UX implications when when

1629
01:19:10,300 --> 01:19:14,080
using it in the browser it's basically

1630
01:19:11,860 --> 01:19:15,969
unusable except in very very specialized

1631
01:19:14,080 --> 01:19:18,460
sort of controlled situations so it's

1632
01:19:15,970 --> 01:19:20,590
not it's there it's going to be an RFC

1633
01:19:18,460 --> 01:19:23,290
but it's really not practically usable

1634
01:19:20,590 --> 01:19:24,880
for four-spot type applications and I

1635
01:19:23,290 --> 01:19:26,560
say here that the status of token

1636
01:19:24,880 --> 01:19:30,760
binding is uncertain I think that's

1637
01:19:26,560 --> 01:19:33,460
putting it somewhat mildly and so we

1638
01:19:30,760 --> 01:19:36,640
also have sort of uncovered the desire

1639
01:19:33,460 --> 01:19:38,950
the need as of reach late to have proof

1640
01:19:36,640 --> 01:19:40,690
of possession bound refresh tokens for

1641
01:19:38,950 --> 01:19:43,690
public clients as well having a stronger

1642
01:19:40,690 --> 01:19:45,250
guarantee around the Refresh tokens it's

1643
01:19:43,690 --> 01:19:49,210
issued a public clients is something

1644
01:19:45,250 --> 01:19:52,330
that's that's desirable and useful so we

1645
01:19:49,210 --> 01:19:54,640
have this proposal for deep hop flow

1646
01:19:52,330 --> 01:19:57,280
just showing the diagram here the the

1647
01:19:54,640 --> 01:19:58,630
thing that maybe we've learned or taken

1648
01:19:57,280 --> 01:20:00,219
from other things is there's some

1649
01:19:58,630 --> 01:20:01,810
similarity to how tow combining worked

1650
01:20:00,220 --> 01:20:02,980
here and that we have the same sort of

1651
01:20:01,810 --> 01:20:04,660
key proof method

1652
01:20:02,980 --> 01:20:06,219
that's used regardless of where the

1653
01:20:04,660 --> 01:20:07,900
request is made so whether the request

1654
01:20:06,220 --> 01:20:09,520
is made to an authorization server as

1655
01:20:07,900 --> 01:20:10,809
part of the token request or requests

1656
01:20:09,520 --> 01:20:14,080
are made to the resource server a

1657
01:20:10,810 --> 01:20:16,480
resource the the proof key is sent in

1658
01:20:14,080 --> 01:20:18,220
the same way in this deep deep ah proof

1659
01:20:16,480 --> 01:20:21,250
header so this this is the consistency

1660
01:20:18,220 --> 01:20:22,720
for that around how it's used when it's

1661
01:20:21,250 --> 01:20:23,950
sent to the authorization server it

1662
01:20:22,720 --> 01:20:26,200
gives the authorization server the

1663
01:20:23,950 --> 01:20:27,940
opportunity to bind both access and

1664
01:20:26,200 --> 01:20:29,740
refresh tokens depending on the context

1665
01:20:27,940 --> 01:20:31,240
to that key and when it's sent to the

1666
01:20:29,740 --> 01:20:33,219
resource server it gives that resource

1667
01:20:31,240 --> 01:20:35,559
server the opportunity to check and see

1668
01:20:33,220 --> 01:20:38,050
that there's actually possession of the

1669
01:20:35,560 --> 01:20:41,230
corresponding private key to the

1670
01:20:38,050 --> 01:20:42,790
Associated bound access token real quick

1671
01:20:41,230 --> 01:20:45,400
look at what this actually looks like so

1672
01:20:42,790 --> 01:20:47,860
that that depop proof is a header that's

1673
01:20:45,400 --> 01:20:49,750
a JWT that's sent in each request and

1674
01:20:47,860 --> 01:20:52,889
decoded it looks a little bit something

1675
01:20:49,750 --> 01:20:55,600
like this a few aspects of it are it has

1676
01:20:52,890 --> 01:20:57,760
its explicitly typed we're supporting

1677
01:20:55,600 --> 01:20:59,400
asymmetric signatures only and it must

1678
01:20:57,760 --> 01:21:02,260
be one of the asymmetric algorithms

1679
01:20:59,400 --> 01:21:05,710
inside of the header is the jwk the

1680
01:21:02,260 --> 01:21:08,920
public portion of the the key pair that

1681
01:21:05,710 --> 01:21:11,410
the client is asserting ownership of and

1682
01:21:08,920 --> 01:21:13,720
then in the claims itself we have a

1683
01:21:11,410 --> 01:21:15,670
unique identifier and a JDI claim meant

1684
01:21:13,720 --> 01:21:18,820
to allow for replay detection and

1685
01:21:15,670 --> 01:21:22,510
checking Brian Shinda that jwk should

1686
01:21:18,820 --> 01:21:24,610
should not be a CNF claim the stuff that

1687
01:21:22,510 --> 01:21:30,790
we defined with proof possession

1688
01:21:24,610 --> 01:21:32,320
functionality no not because so either

1689
01:21:30,790 --> 01:21:33,730
the the syntax

1690
01:21:32,320 --> 01:21:37,719
yeah the semantics are a little

1691
01:21:33,730 --> 01:21:39,940
different although they're they're

1692
01:21:37,720 --> 01:21:42,100
fungible that it's it's it's a it's a

1693
01:21:39,940 --> 01:21:44,679
non-obvious line but yes what this is

1694
01:21:42,100 --> 01:21:47,170
saying basically is here's a JWT here's

1695
01:21:44,680 --> 01:21:49,630
the public key which it's signature can

1696
01:21:47,170 --> 01:21:51,850
be verified with so this token is signed

1697
01:21:49,630 --> 01:21:53,530
by the private key corresponding to the

1698
01:21:51,850 --> 01:21:55,540
public key that's displayed in the jwk

1699
01:21:53,530 --> 01:21:58,360
header there you'll see the CNF claim

1700
01:21:55,540 --> 01:22:04,990
coming to end it into the picture in a

1701
01:21:58,360 --> 01:22:07,030
little bit so that's in the header and

1702
01:22:04,990 --> 01:22:10,710
then the claims that we have the jti in

1703
01:22:07,030 --> 01:22:13,389
there we have a very very minimal set of

1704
01:22:10,710 --> 01:22:15,850
information about the HTTP request so

1705
01:22:13,390 --> 01:22:16,739
this is not intended to be a generalized

1706
01:22:15,850 --> 01:22:19,469
h-2b signing

1707
01:22:16,739 --> 01:22:22,199
scheme we're trying to sign enough of

1708
01:22:19,469 --> 01:22:25,469
the HTTP request to make a relatively

1709
01:22:22,199 --> 01:22:27,119
useful statement about the client

1710
01:22:25,469 --> 01:22:29,340
actually having made that request but

1711
01:22:27,119 --> 01:22:31,170
really doing it in order to prove

1712
01:22:29,340 --> 01:22:33,210
possession of the key not protect the

1713
01:22:31,170 --> 01:22:35,219
integrity of the request and then we

1714
01:22:33,210 --> 01:22:37,739
have an issue that time around the the

1715
01:22:35,219 --> 01:22:39,749
freshness of the token which allows

1716
01:22:37,739 --> 01:22:41,638
instead of using expired we thought it'd

1717
01:22:39,749 --> 01:22:43,320
make a little bit it makes things easier

1718
01:22:41,639 --> 01:22:44,699
to say this is what wasn't issued and

1719
01:22:43,320 --> 01:22:47,039
give basically the authorization server

1720
01:22:44,699 --> 01:22:50,070
some discretion is the time window to

1721
01:22:47,039 --> 01:22:53,009
which it will be accepted at Annabel

1722
01:22:50,070 --> 01:22:55,650
Annabel Beckman Amazon so the HTTP

1723
01:22:53,010 --> 01:22:58,889
working group were expecting that they

1724
01:22:55,650 --> 01:23:01,888
will be picking up the tasks of HTTP

1725
01:22:58,889 --> 01:23:04,650
message signing based on discussion at

1726
01:23:01,889 --> 01:23:07,019
the sec dispatch meeting yesterday

1727
01:23:04,650 --> 01:23:10,049
I understand deep hop is not intended to

1728
01:23:07,019 --> 01:23:14,639
be a general message signing solution

1729
01:23:10,050 --> 01:23:17,190
would you consider adopting a message

1730
01:23:14,639 --> 01:23:23,159
signing solution defined at the HTTP

1731
01:23:17,190 --> 01:23:26,009
level you know instead of the you know

1732
01:23:23,159 --> 01:23:28,018
John proof that you have laid out here

1733
01:23:26,010 --> 01:23:31,590
obviously I'm asking you about something

1734
01:23:28,019 --> 01:23:35,159
that doesn't yet exist so no commitments

1735
01:23:31,590 --> 01:23:36,269
but I guess the question is are you open

1736
01:23:35,159 --> 01:23:39,598
to that is that something that you'd

1737
01:23:36,269 --> 01:23:42,840
want to want to look at no yes maybe I

1738
01:23:39,599 --> 01:23:45,960
mean that the the real answer is is this

1739
01:23:42,840 --> 01:23:48,900
is very much intended not to be that

1740
01:23:45,960 --> 01:23:51,420
around expectations of fragility and

1741
01:23:48,900 --> 01:23:53,638
concern with that and so the specific

1742
01:23:51,420 --> 01:23:56,150
goal here was to have some a very very

1743
01:23:53,639 --> 01:23:59,760
minimal hopefully more interoperable and

1744
01:23:56,150 --> 01:24:00,900
subset of information so based on that

1745
01:23:59,760 --> 01:24:04,440
motivation

1746
01:24:00,900 --> 01:24:06,329
no but that's so that's I'm saying that

1747
01:24:04,440 --> 01:24:08,009
about an individual draft at this point

1748
01:24:06,329 --> 01:24:11,849
in time relative to a hypothetical

1749
01:24:08,010 --> 01:24:16,260
adoption to another so I would like to

1750
01:24:11,849 --> 01:24:17,909
avoid it as the editor of the draft

1751
01:24:16,260 --> 01:24:20,460
that's going to be submitted to the

1752
01:24:17,909 --> 01:24:25,888
working group I can say that the the

1753
01:24:20,460 --> 01:24:28,679
intention of that design is to allow the

1754
01:24:25,889 --> 01:24:30,120
application layer in this case you know

1755
01:24:28,679 --> 01:24:33,810
auth deep

1756
01:24:30,120 --> 01:24:35,519
to define specifically which elements

1757
01:24:33,810 --> 01:24:41,280
are to be included and are not to be

1758
01:24:35,520 --> 01:24:43,200
included so you you could did the

1759
01:24:41,280 --> 01:24:44,730
intention is to allow you to have

1760
01:24:43,200 --> 01:24:49,790
semantics like this where you're only

1761
01:24:44,730 --> 01:24:52,019
including a couple of exactly exactly so

1762
01:24:49,790 --> 01:24:55,650
so that brings me the other answer which

1763
01:24:52,020 --> 01:24:57,930
is maybe maybe um I my sense was that

1764
01:24:55,650 --> 01:25:00,110
the specific things that are covered

1765
01:24:57,930 --> 01:25:02,940
here weren't that getting to these

1766
01:25:00,110 --> 01:25:05,280
pieces wasn't actually possible with

1767
01:25:02,940 --> 01:25:06,540
with what's in cabbage now but I could

1768
01:25:05,280 --> 01:25:09,330
be wrong I've only read through it once

1769
01:25:06,540 --> 01:25:10,800
and even with that we're still we're

1770
01:25:09,330 --> 01:25:11,790
already having some ongoing discussions

1771
01:25:10,800 --> 01:25:14,280
about whether these are the right

1772
01:25:11,790 --> 01:25:16,290
elements or not so I guess that brings

1773
01:25:14,280 --> 01:25:18,990
me back to maybe cabbage is the starting

1774
01:25:16,290 --> 01:25:24,300
point yeah all right I will talk to you

1775
01:25:18,990 --> 01:25:28,889
more about this offline sure John

1776
01:25:24,300 --> 01:25:32,730
Bradley yubico given the relative time

1777
01:25:28,890 --> 01:25:35,760
frames of the of the work

1778
01:25:32,730 --> 01:25:38,669
I'm not what one would hope that we

1779
01:25:35,760 --> 01:25:42,380
could finish at least the first round of

1780
01:25:38,670 --> 01:25:42,380
D pop and get that published before

1781
01:25:42,830 --> 01:25:49,380
Godot comes and there's a general HTTP

1782
01:25:46,200 --> 01:25:52,230
signing mechanism should there ever be a

1783
01:25:49,380 --> 01:25:54,300
general HTTP signing mechanism as one of

1784
01:25:52,230 --> 01:25:56,639
the authors I would be entirely open to

1785
01:25:54,300 --> 01:26:00,180
you know having a bist version of this

1786
01:25:56,640 --> 01:26:03,300
spec or a next version of the spec that

1787
01:26:00,180 --> 01:26:07,290
perhaps incorporated that we'd have to

1788
01:26:03,300 --> 01:26:11,550
see how that work played out but this is

1789
01:26:07,290 --> 01:26:14,100
as brian says not it's sort of

1790
01:26:11,550 --> 01:26:16,080
explicitly not attempting to cover all

1791
01:26:14,100 --> 01:26:19,260
the possible use cases and not

1792
01:26:16,080 --> 01:26:23,580
attempting to cover all of the things

1793
01:26:19,260 --> 01:26:28,290
that that you know everybody is going to

1794
01:26:23,580 --> 01:26:31,740
want some some bit of header other bit

1795
01:26:28,290 --> 01:26:37,769
of header covered and yes in theory you

1796
01:26:31,740 --> 01:26:41,519
could extend it so justin is breathing

1797
01:26:37,770 --> 01:26:42,960
down your neck the right so what could

1798
01:26:41,520 --> 01:26:44,730
go here yeah so

1799
01:26:42,960 --> 01:26:47,520
plus one - what Annabel said - one -

1800
01:26:44,730 --> 01:26:50,129
what John just said because we are not I

1801
01:26:47,520 --> 01:26:53,790
don't think anybody is asking for this

1802
01:26:50,130 --> 01:26:58,500
specifically this sort of custom bit to

1803
01:26:53,790 --> 01:27:01,920
cover more I think the request is

1804
01:26:58,500 --> 01:27:04,650
instead - if there were something more

1805
01:27:01,920 --> 01:27:08,330
general-purpose available that you could

1806
01:27:04,650 --> 01:27:12,450
configure to be this minimal then I

1807
01:27:08,330 --> 01:27:14,780
believe we should use that which does

1808
01:27:12,450 --> 01:27:18,179
not exist as a standard today I get that

1809
01:27:14,780 --> 01:27:22,380
but I contend we should use that as

1810
01:27:18,180 --> 01:27:25,040
opposed to something more you know

1811
01:27:22,380 --> 01:27:30,120
purpose fit to OAuth specifically and

1812
01:27:25,040 --> 01:27:31,860
while I am you know I hear what John

1813
01:27:30,120 --> 01:27:33,989
saying about this could happen in the

1814
01:27:31,860 --> 01:27:37,799
next revision we just had a half-hour

1815
01:27:33,989 --> 01:27:41,009
argument about a minor non breaking

1816
01:27:37,800 --> 01:27:45,090
change revision to a law so this group

1817
01:27:41,010 --> 01:27:48,090
doesn't like revisions so once once we

1818
01:27:45,090 --> 01:27:51,000
nail something down it's just gonna live

1819
01:27:48,090 --> 01:27:53,810
there or zombiefied forever so I'm not

1820
01:27:51,000 --> 01:27:53,810
convinced by that

1821
01:27:55,670 --> 01:28:05,160
toastin I also had one of the co-authors

1822
01:27:58,680 --> 01:28:08,550
of that draft I would like to just state

1823
01:28:05,160 --> 01:28:10,290
the objective of that work and that

1824
01:28:08,550 --> 01:28:13,310
potentially also answers your question

1825
01:28:10,290 --> 01:28:15,960
with a why not

1826
01:28:13,310 --> 01:28:18,900
what's dressed why not adopting

1827
01:28:15,960 --> 01:28:20,730
something when's once it gets available

1828
01:28:18,900 --> 01:28:24,030
what's the what's the purpose what's the

1829
01:28:20,730 --> 01:28:26,059
objective of that draft basically we

1830
01:28:24,030 --> 01:28:28,410
decided in the BCP do two-armed

1831
01:28:26,060 --> 01:28:32,400
recommend sender constraining for access

1832
01:28:28,410 --> 01:28:35,070
tokens to prevent token leakage we've

1833
01:28:32,400 --> 01:28:39,179
got the general purpose mechanism its

1834
01:28:35,070 --> 01:28:42,179
TLS based we know that mechanism today

1835
01:28:39,180 --> 01:28:45,930
doesn't work for applications living in

1836
01:28:42,180 --> 01:28:47,880
the browser so we came up with the idea

1837
01:28:45,930 --> 01:28:50,610
at the word security workshop in

1838
01:28:47,880 --> 01:28:53,820
Stuttgart well then let's fill that gap

1839
01:28:50,610 --> 01:28:56,139
and that's when we started at at work so

1840
01:28:53,820 --> 01:28:58,719
this work is primarily in

1841
01:28:56,139 --> 01:29:02,829
that to fill that gap to do summer

1842
01:28:58,719 --> 01:29:04,269
constraining for s pas . . and that's

1843
01:29:02,829 --> 01:29:05,768
why it's a really minimal solution that

1844
01:29:04,269 --> 01:29:07,689
we even even discussing i have seen the

1845
01:29:05,769 --> 01:29:09,489
postings on the list to remove the GTI

1846
01:29:07,689 --> 01:29:11,439
for replay detection to make it even eat

1847
01:29:09,489 --> 01:29:13,478
make it even easier and less stateful

1848
01:29:11,439 --> 01:29:17,019
and and and so on and so on and so on so

1849
01:29:13,479 --> 01:29:18,550
if we can achieve that or fulfil that

1850
01:29:17,019 --> 01:29:21,280
objective using a general-purpose

1851
01:29:18,550 --> 01:29:23,889
specification why not it would be crazy

1852
01:29:21,280 --> 01:29:27,959
not to do so but it needs to be in time

1853
01:29:23,889 --> 01:29:30,939
i need to solve that problem soon i

1854
01:29:27,959 --> 01:29:32,889
guess we need to we are already over

1855
01:29:30,939 --> 01:29:35,289
time we will continue this discussion in

1856
01:29:32,889 --> 01:29:39,449
the in the next session mike so hold

1857
01:29:35,289 --> 01:29:42,398
your thought whatever that means

1858
01:29:39,449 --> 01:29:46,598
we are ready back in one minute over so

1859
01:29:42,399 --> 01:29:48,309
but so as you can see there is still a

1860
01:29:46,599 --> 01:29:49,989
lot of well there are lots of

1861
01:29:48,309 --> 01:29:52,869
developments good developments that we

1862
01:29:49,989 --> 01:29:55,119
see and so it's a it's an exciting topic

1863
01:29:52,869 --> 01:29:57,759
to keep working on and we'll have

1864
01:29:55,119 --> 01:30:02,098
another session so we have more time to

1865
01:29:57,760 --> 01:30:03,969
discuss and yeah looking forward to that

1866
01:30:02,099 --> 01:30:05,679
thank you Brian

1867
01:30:03,969 --> 01:30:08,499
thank you guys and see you at the next

1868
01:30:05,679 --> 01:30:11,289
session and if some of you have time to

1869
01:30:08,499 --> 01:30:15,639
go to the battle Wars room if that's was

1870
01:30:11,289 --> 01:30:18,130
correct then yeah and error maybe you

1871
01:30:15,639 --> 01:30:20,849
can at the next session keep us give us

1872
01:30:18,130 --> 01:30:20,849
a brief summary

