1
00:00:22,250 --> 00:00:28,170
okay folks this is the last working

2
00:00:25,500 --> 00:00:30,780
group session my clocks claimed that

3
00:00:28,170 --> 00:00:32,759
it's time for us to get started if

4
00:00:30,780 --> 00:00:33,540
you're not here for Lisp please move

5
00:00:32,759 --> 00:00:36,450
somewhere else

6
00:00:33,540 --> 00:00:38,039
or sit and watch you're welcome but

7
00:00:36,450 --> 00:00:39,749
that's what we're gonna be discussing

8
00:00:38,039 --> 00:00:46,109
this next room for most of the next two

9
00:00:39,749 --> 00:00:46,499
hours this is the note well please note

10
00:00:46,109 --> 00:00:48,300
it

11
00:00:46,499 --> 00:00:50,909
it's Tuesday you've probably seen it a

12
00:00:48,300 --> 00:00:54,318
couple of times but it matters so this

13
00:00:50,909 --> 00:00:57,179
is the note well we're now moving on

14
00:00:54,319 --> 00:00:59,940
yeah whatever you say from now on is a

15
00:00:57,179 --> 00:01:02,159
contribution to the IETF there you can

16
00:00:59,940 --> 00:01:03,690
see the usual pointers to the chapter

17
00:01:02,159 --> 00:01:07,140
the jabber room all your three mythical

18
00:01:03,690 --> 00:01:09,060
and a gentle slides and Phrygia

19
00:01:07,140 --> 00:01:11,369
knowledge all all per we are the

20
00:01:09,060 --> 00:01:14,899
co-chairs here but mercy deep in the

21
00:01:11,369 --> 00:01:19,640
room is our secretary very helpful okay

22
00:01:14,899 --> 00:01:23,850
this is the working group status issue

23
00:01:19,640 --> 00:01:26,070
we will quickly go over it we have sixty

24
00:01:23,850 --> 00:01:27,658
eight thirty four bits it's a little

25
00:01:26,070 --> 00:01:30,869
stuck in the sense that we are waiting

26
00:01:27,659 --> 00:01:33,030
the main specs to go out to device this

27
00:01:30,869 --> 00:01:34,979
document and send it forward the past

28
00:01:33,030 --> 00:01:38,789
last call but we have to check that is

29
00:01:34,979 --> 00:01:39,450
compliant with changes that we did this

30
00:01:38,789 --> 00:01:41,960
GPE

31
00:01:39,450 --> 00:01:46,399
we will have an update later on

32
00:01:41,960 --> 00:01:50,369
introduction has done for something like

33
00:01:46,399 --> 00:01:53,520
few years I can't read the how many days

34
00:01:50,369 --> 00:01:57,840
anyway but a lot of time then we have

35
00:01:53,520 --> 00:02:00,449
the two beast documents inspects Albert

36
00:01:57,840 --> 00:02:06,590
will give us an update on what is the

37
00:02:00,450 --> 00:02:10,430
status okay eighty-one certain miss

38
00:02:06,590 --> 00:02:14,970
asked miss reference stuck in the RFC

39
00:02:10,430 --> 00:02:17,970
editor we have least sec now he this

40
00:02:14,970 --> 00:02:20,640
document is a slightly uh

41
00:02:17,970 --> 00:02:22,770
position lucy has been in working group

42
00:02:20,640 --> 00:02:28,019
last call for like three months or so

43
00:02:22,770 --> 00:02:28,740
right reason is that we went for the

44
00:02:28,020 --> 00:02:32,610
last call

45
00:02:28,740 --> 00:02:36,570
then then jumped in with comments and

46
00:02:32,610 --> 00:02:38,430
things to change so we waited for the

47
00:02:36,570 --> 00:02:42,000
autos to change it they have done it for

48
00:02:38,430 --> 00:02:46,620
a long time so I think we did not

49
00:02:42,000 --> 00:02:48,450
receive any more comments right so we

50
00:02:46,620 --> 00:02:50,459
will send out an email on the mailing

51
00:02:48,450 --> 00:02:53,310
list unless there are objections we will

52
00:02:50,459 --> 00:02:56,820
close the last call in one week from now

53
00:02:53,310 --> 00:02:59,220
so next Tuesday and then move it forward

54
00:02:56,820 --> 00:03:02,100
as usual okay in the meantime we will

55
00:02:59,220 --> 00:03:06,170
check in with Ben if he's okay with all

56
00:03:02,100 --> 00:03:08,880
the changes that have been done okay

57
00:03:06,170 --> 00:03:13,260
then there is the mist then Darrell

58
00:03:08,880 --> 00:03:18,359
cough this is past workgroup last call

59
00:03:13,260 --> 00:03:20,310
is packet waiting from for the scheffers

60
00:03:18,360 --> 00:03:26,450
where I dug which is me

61
00:03:20,310 --> 00:03:30,019
but just we are giving priority to the

62
00:03:26,450 --> 00:03:36,060
to the main stack okay

63
00:03:30,019 --> 00:03:41,910
so agenda I will take one minute to talk

64
00:03:36,060 --> 00:03:44,160
about 79 54s 79 55 okay and then we will

65
00:03:41,910 --> 00:03:46,890
go over the update for the beast

66
00:03:44,160 --> 00:03:50,340
documents this GPE as I said these are

67
00:03:46,890 --> 00:03:52,980
two working group the three working the

68
00:03:50,340 --> 00:03:55,860
documents we will discuss today and then

69
00:03:52,980 --> 00:03:59,310
we have the non working group items list

70
00:03:55,860 --> 00:04:01,790
overlays mark we present dinner will

71
00:03:59,310 --> 00:04:05,940
give us a demo about mobile node

72
00:04:01,790 --> 00:04:10,590
multicast last time you came or only

73
00:04:05,940 --> 00:04:13,250
about mobile not unicast and then Sharon

74
00:04:10,590 --> 00:04:16,918
about distributed geospatial is the

75
00:04:13,250 --> 00:04:22,640
blackboard for automatic they each

76
00:04:16,918 --> 00:04:22,640
distance any comment about the agenda

77
00:04:25,850 --> 00:04:33,860
so let me get quickly to 7950 for that

78
00:04:29,880 --> 00:04:39,600
79-65 so these two documents one was

79
00:04:33,860 --> 00:04:43,260
asking a Jana for specific prefix ipv6

80
00:04:39,600 --> 00:04:47,340
prefix to be used experimentally for

81
00:04:43,260 --> 00:04:50,700
Lisp okay and the other one were the

82
00:04:47,340 --> 00:04:54,929
guidelines how to manage this block okay

83
00:04:50,700 --> 00:04:58,860
and ripe NCC very kindly take over on

84
00:04:54,930 --> 00:05:02,790
the management of this block okay now

85
00:04:58,860 --> 00:05:04,350
the experiment and the the experiment

86
00:05:02,790 --> 00:05:08,220
went over for three years

87
00:05:04,350 --> 00:05:11,400
okay the deal was in three years in if

88
00:05:08,220 --> 00:05:14,880
we don't have sufficient demand for the

89
00:05:11,400 --> 00:05:18,630
traffic's blocks and there is no

90
00:05:14,880 --> 00:05:22,980
specific action from the ETF then we

91
00:05:18,630 --> 00:05:26,659
give this block back to Vienna so we had

92
00:05:22,980 --> 00:05:29,970
few requests about a ID prefix okay

93
00:05:26,660 --> 00:05:33,540
there was no specific action so it's

94
00:05:29,970 --> 00:05:37,200
time to give back this block to Vienna

95
00:05:33,540 --> 00:05:41,760
which happened in September now what do

96
00:05:37,200 --> 00:05:45,090
we do is these two RFC's okay they're

97
00:05:41,760 --> 00:05:48,599
the most reasonable thing to do is to

98
00:05:45,090 --> 00:05:52,349
make them store it in this way we can

99
00:05:48,600 --> 00:05:54,120
add to the two documents a note which is

100
00:05:52,350 --> 00:05:57,180
the one view you can see here on the

101
00:05:54,120 --> 00:06:01,080
screen that explains why these two

102
00:05:57,180 --> 00:06:04,020
documents are historic okay so this is

103
00:06:01,080 --> 00:06:08,130
the text that has been discussed by the

104
00:06:04,020 --> 00:06:11,010
email in that you can see the most

105
00:06:08,130 --> 00:06:13,919
important part which are the two RFC's

106
00:06:11,010 --> 00:06:16,980
the the fact that the experiment should

107
00:06:13,919 --> 00:06:21,390
run in the three years until September

108
00:06:16,980 --> 00:06:25,910
2009 King and what should be done if

109
00:06:21,390 --> 00:06:28,740
nothing happens from there IETF side so

110
00:06:25,910 --> 00:06:32,310
and at the very end there is a sentence

111
00:06:28,740 --> 00:06:35,990
that asked to put their too-tall the two

112
00:06:32,310 --> 00:06:40,139
documents as storage and add this note

113
00:06:35,990 --> 00:06:42,389
today to the process okay so that

114
00:06:40,139 --> 00:06:44,879
for whatever reason people are in these

115
00:06:42,389 --> 00:06:48,210
documents and they are looking for the

116
00:06:44,879 --> 00:06:51,870
Eid prefix in the Leonid as you see and

117
00:06:48,210 --> 00:06:54,688
they not find it they know why okay we

118
00:06:51,870 --> 00:07:00,779
keep keep track of the experiment

119
00:06:54,689 --> 00:07:03,990
okay so we'll send this this text on the

120
00:07:00,779 --> 00:07:05,759
mailing list as well okay if you have

121
00:07:03,990 --> 00:07:09,150
any suggestion or collection to do in

122
00:07:05,759 --> 00:07:13,289
the next week please send our an email

123
00:07:09,150 --> 00:07:19,289
back otherwise we will use this text to

124
00:07:13,289 --> 00:07:21,830
make these two documents start okay any

125
00:07:19,289 --> 00:07:21,830
comment on that

126
00:07:22,249 --> 00:07:34,710
great huh Padma first of all I I missed

127
00:07:32,189 --> 00:07:36,990
this discussion because hours away but

128
00:07:34,710 --> 00:07:41,219
there is one thing is that we actually

129
00:07:36,990 --> 00:07:44,430
have the Animus Eid drought that was

130
00:07:41,219 --> 00:07:48,748
actually using a portion of I believe

131
00:07:44,430 --> 00:07:53,849
these AI deeper fixes so we can which

132
00:07:48,749 --> 00:07:58,499
draft like questionable CID maybe bro

133
00:07:53,849 --> 00:08:00,089
know so you know so another address to

134
00:07:58,499 --> 00:08:02,729
use yeah we'll need to find out what

135
00:08:00,089 --> 00:08:05,029
we're going to do next it's of course it

136
00:08:02,729 --> 00:08:08,998
is possible to maybe ask for another

137
00:08:05,029 --> 00:08:11,219
range or or change the range but I

138
00:08:08,999 --> 00:08:15,749
wanted to let you know that yeah there

139
00:08:11,219 --> 00:08:18,870
is a graph from my perspective there are

140
00:08:15,749 --> 00:08:21,959
two way forward for this document so one

141
00:08:18,870 --> 00:08:24,870
is do you really need an allocation of

142
00:08:21,959 --> 00:08:28,529
Ramayan and in this case you may ask one

143
00:08:24,870 --> 00:08:31,229
in the document itself otherwise you

144
00:08:28,529 --> 00:08:35,010
just can specify the fact that maybe an

145
00:08:31,229 --> 00:08:39,539
operator should reserve a prefix to use

146
00:08:35,010 --> 00:08:42,659
it from the annuity stuff yeah so here's

147
00:08:39,539 --> 00:08:45,600
the basic an advantage and disadvantage

148
00:08:42,659 --> 00:08:51,269
to each one of those the advantage of

149
00:08:45,600 --> 00:08:53,010
having a INE pool is that all operators

150
00:08:51,269 --> 00:08:54,540
may use that for

151
00:08:53,010 --> 00:08:57,420
if you have it and you have a better

152
00:08:54,540 --> 00:08:59,579
anonymity if you have each operator

153
00:08:57,420 --> 00:09:06,360
giving you a pole yeah you won't have as

154
00:08:59,580 --> 00:09:08,430
much and I reached out this is do you

155
00:09:06,360 --> 00:09:10,860
know the reason we needed a well known

156
00:09:08,430 --> 00:09:12,359
allocation is because if we wanted the

157
00:09:10,860 --> 00:09:15,500
rest of the bits of the address to be a

158
00:09:12,360 --> 00:09:18,690
hash of the public key and we wanted an

159
00:09:15,500 --> 00:09:21,420
application to use that to look up a

160
00:09:18,690 --> 00:09:23,520
public key to verify signatures it would

161
00:09:21,420 --> 00:09:25,500
be nice to know that it's not an opaque

162
00:09:23,520 --> 00:09:29,030
address or an address that's assigned a

163
00:09:25,500 --> 00:09:29,030
different way but it actually is a hatch

164
00:09:33,080 --> 00:09:38,750
the only comment that I can say okay but

165
00:09:36,140 --> 00:09:42,090
not with these prefix is too late

166
00:09:38,750 --> 00:09:45,360
so wait that is not that much that we

167
00:09:42,090 --> 00:09:50,940
can do at this point unless even they

168
00:09:45,360 --> 00:09:51,690
start all the process which I think

169
00:09:50,940 --> 00:09:54,240
we're fine with that

170
00:09:51,690 --> 00:09:57,030
you know I'm but I wasn't at least so

171
00:09:54,240 --> 00:09:59,390
that this is known that Tao will be in

172
00:09:57,030 --> 00:09:59,390
the news

173
00:10:16,700 --> 00:10:22,950
okay so I'm describing the usual update

174
00:10:20,790 --> 00:10:26,880
on the sixteen thirty bees and six

175
00:10:22,950 --> 00:10:29,610
sixteen thirty three bees so since last

176
00:10:26,880 --> 00:10:33,380
idea idea if we have posted two new

177
00:10:29,610 --> 00:10:37,260
versions and we have address roughly 160

178
00:10:33,380 --> 00:10:39,800
discussed and comments and as far as I

179
00:10:37,260 --> 00:10:42,390
know we have addressed all the comments

180
00:10:39,800 --> 00:10:44,010
now it's up to the reviewers to to tell

181
00:10:42,390 --> 00:10:46,170
us if you can address them right or not

182
00:10:44,010 --> 00:10:50,279
or not but all of them have been

183
00:10:46,170 --> 00:10:51,660
addressed so the main changes on I will

184
00:10:50,279 --> 00:10:52,110
discuss first the main changes in the

185
00:10:51,660 --> 00:10:54,029
data plane

186
00:10:52,110 --> 00:10:58,320
the first one is unlock addressed to

187
00:10:54,029 --> 00:11:01,200
speech we have fixed a behavior that

188
00:10:58,320 --> 00:11:03,779
occurs when a locator is added or

189
00:11:01,200 --> 00:11:06,360
removed from the locator set then when

190
00:11:03,779 --> 00:11:08,610
this happens the sir sixty are the one

191
00:11:06,360 --> 00:11:12,330
which is setting up the LS we can no

192
00:11:08,610 --> 00:11:14,100
longer use lsv for a timer so it will

193
00:11:12,330 --> 00:11:17,100
set up a timer and it will at the same

194
00:11:14,100 --> 00:11:19,470
time send an SMR to the destination xtr

195
00:11:17,100 --> 00:11:21,120
which means the receiving site of the

196
00:11:19,470 --> 00:11:22,560
laboratories at two speeds then we

197
00:11:21,120 --> 00:11:25,710
receive inside of their greater status

198
00:11:22,560 --> 00:11:27,959
which will refresh the mapping and after

199
00:11:25,710 --> 00:11:30,089
the timer expires the source sixth year

200
00:11:27,960 --> 00:11:33,180
we'll be able to set the locators at

201
00:11:30,089 --> 00:11:38,850
those bits again for us so that does

202
00:11:33,180 --> 00:11:41,670
describe on the updated version then we

203
00:11:38,850 --> 00:11:44,510
have clarified also the map versioning

204
00:11:41,670 --> 00:11:48,930
requirements regarding synchronization

205
00:11:44,510 --> 00:11:52,380
that basically the DTRS within a lisp

206
00:11:48,930 --> 00:11:53,819
site needs to be synchronized within a

207
00:11:52,380 --> 00:11:55,740
one minute window which was a

208
00:11:53,820 --> 00:11:59,610
requirement from the reviewers so this

209
00:11:55,740 --> 00:12:02,430
paragraph is parroting on the spec then

210
00:11:59,610 --> 00:12:04,709
there are many many many other minor

211
00:12:02,430 --> 00:12:06,680
edits and comments and probably the most

212
00:12:04,709 --> 00:12:09,390
important one is that we have removed

213
00:12:06,680 --> 00:12:11,880
references to traffic engineering on the

214
00:12:09,390 --> 00:12:13,860
idea of definition because it it was not

215
00:12:11,880 --> 00:12:16,410
properly introduced we can also remove

216
00:12:13,860 --> 00:12:19,110
the definition from from form a native

217
00:12:16,410 --> 00:12:24,810
map-cache entry all

218
00:12:19,110 --> 00:12:27,089
the et R&D ITR we have stated the

219
00:12:24,810 --> 00:12:30,420
meaning of the instanceid just saying

220
00:12:27,089 --> 00:12:32,670
that it's informally the participants

221
00:12:30,420 --> 00:12:35,459
analyst deployment must agree on the

222
00:12:32,670 --> 00:12:37,349
meaning we have call so clarified when

223
00:12:35,459 --> 00:12:41,040
information may be cleaned and there are

224
00:12:37,350 --> 00:12:46,350
a bunch of other edits then regarding

225
00:12:41,040 --> 00:12:48,630
the data plane the control plane sorry

226
00:12:46,350 --> 00:12:51,440
we have also clarified when the a bit of

227
00:12:48,630 --> 00:12:56,370
relative it can be set in the map-reply

228
00:12:51,440 --> 00:13:00,269
we verify that we don't specify a string

229
00:12:56,370 --> 00:13:02,550
meaning for the site ID field and

230
00:13:00,269 --> 00:13:04,110
informally it provides an indication

231
00:13:02,550 --> 00:13:08,160
that a group of six years have some

232
00:13:04,110 --> 00:13:10,920
relation admission if topologically or

233
00:13:08,160 --> 00:13:12,630
otherwise we have also clarified and I

234
00:13:10,920 --> 00:13:14,189
think that that's where I could good

235
00:13:12,630 --> 00:13:16,439
catch from been that that integration

236
00:13:14,190 --> 00:13:20,730
that is recomputed and verified both in

237
00:13:16,440 --> 00:13:22,260
my motif and members if I our Ark and we

238
00:13:20,730 --> 00:13:23,760
have completely removed the section

239
00:13:22,260 --> 00:13:25,620
describing locators at compacting

240
00:13:23,760 --> 00:13:27,720
because it's no longer need because of

241
00:13:25,620 --> 00:13:30,779
the first a slight regarding locate

242
00:13:27,720 --> 00:13:32,730
residue fees we have also remove any

243
00:13:30,779 --> 00:13:34,949
reference to be hippies it seems is not

244
00:13:32,730 --> 00:13:36,959
consistent with the new scope of double

245
00:13:34,949 --> 00:13:39,779
applicability also reference to list pal

246
00:13:36,959 --> 00:13:41,459
because it it was a sense of some kind

247
00:13:39,779 --> 00:13:43,110
of privilege mapping system which is not

248
00:13:41,459 --> 00:13:45,268
the control brain can work in any

249
00:13:43,110 --> 00:13:47,850
mapping system we have clarified several

250
00:13:45,269 --> 00:13:51,329
aspect on the second consideration and

251
00:13:47,850 --> 00:13:52,860
many other minor edits so this is the

252
00:13:51,329 --> 00:13:56,670
status right now which is the same as

253
00:13:52,860 --> 00:14:01,170
Andris ATF so we still need Benjamin and

254
00:13:56,670 --> 00:14:07,319
militia to to to tell us if the changes

255
00:14:01,170 --> 00:14:09,829
are good or not and under tit question

256
00:14:07,320 --> 00:14:09,829
or comments

257
00:14:18,050 --> 00:14:23,250
from your mind I just wanted to thank

258
00:14:20,730 --> 00:14:27,660
Albert for taking care of the comments

259
00:14:23,250 --> 00:14:29,130
because it was a massive work and all

260
00:14:27,660 --> 00:14:31,500
the comments were incorporated in me

261
00:14:29,130 --> 00:14:33,959
discuss in one of the last review we got

262
00:14:31,500 --> 00:14:38,399
and yeah

263
00:14:33,959 --> 00:14:41,160
thanks be painful join fire because we

264
00:14:38,399 --> 00:14:45,899
share the pain comments and discuss its

265
00:14:41,160 --> 00:14:47,640
huge work a good job I was up to ask a

266
00:14:45,899 --> 00:14:51,000
push a little bit medium Benjamin so

267
00:14:47,640 --> 00:14:58,860
that they go they changes again and let

268
00:14:51,000 --> 00:15:01,829
us know if that final its stepper I also

269
00:14:58,860 --> 00:15:04,680
thank you for your work and I encourage

270
00:15:01,829 --> 00:15:07,229
you try this week to get with Maria and

271
00:15:04,680 --> 00:15:08,880
Benjamin to encourage them to look at

272
00:15:07,230 --> 00:15:11,850
this because what will happen in two

273
00:15:08,880 --> 00:15:14,220
weeks everybody will take start taking

274
00:15:11,850 --> 00:15:16,440
the Christmas holidays New York holidays

275
00:15:14,220 --> 00:15:20,190
especially your beans go skiing and

276
00:15:16,440 --> 00:15:23,070
Maria will not be on the isg next year

277
00:15:20,190 --> 00:15:25,920
right so we got to get this done so I

278
00:15:23,070 --> 00:15:37,820
really encourage it to these next week

279
00:15:25,920 --> 00:15:37,819
two weeks get them busy with them so

280
00:15:38,390 --> 00:15:46,890
just as a quick note on GP this document

281
00:15:41,520 --> 00:15:49,380
who was last called a while ago was

282
00:15:46,890 --> 00:15:54,949
under review at ASG there were a few

283
00:15:49,380 --> 00:15:56,630
comments and changes that we teachers

284
00:15:54,950 --> 00:15:59,100
[Music]

285
00:15:56,630 --> 00:16:01,140
believe are important that so that the

286
00:15:59,100 --> 00:16:04,079
working group has to be aware of the

287
00:16:01,140 --> 00:16:06,709
changes done okay so it's just an update

288
00:16:04,079 --> 00:16:12,949
but we have not gone through again the

289
00:16:06,709 --> 00:16:21,989
same process is just an update okay so

290
00:16:12,949 --> 00:16:24,390
the minor these are the codes so these

291
00:16:21,990 --> 00:16:25,529
are the changes I tracked since 0 6

292
00:16:24,390 --> 00:16:28,050
because there are being a couple of

293
00:16:25,529 --> 00:16:30,810
versions did you know where minor but

294
00:16:28,050 --> 00:16:37,079
the relevant challenges are between 0

295
00:16:30,810 --> 00:16:39,989
six and the current version so these are

296
00:16:37,080 --> 00:16:42,029
the main changes we remove support for

297
00:16:39,990 --> 00:16:44,160
nonsmoker sharing and LSB I'll go then

298
00:16:42,029 --> 00:16:47,279
through each one of them okay so I'll

299
00:16:44,160 --> 00:16:51,029
get back to this we introduced the

300
00:16:47,279 --> 00:16:53,730
concept of she matters then we

301
00:16:51,029 --> 00:16:55,070
introduced a new section for that is

302
00:16:53,730 --> 00:17:00,720
about implementation and deployment

303
00:16:55,070 --> 00:17:02,279
considerations and then there is a you

304
00:17:00,720 --> 00:17:03,839
know we did some changes on multiple

305
00:17:02,279 --> 00:17:06,000
data planes encapsulation bitmap

306
00:17:03,839 --> 00:17:08,370
registry and we need to do a few more

307
00:17:06,000 --> 00:17:12,510
and I hopefully a presentation of today

308
00:17:08,369 --> 00:17:18,688
will clarify what is the changes that we

309
00:17:12,510 --> 00:17:24,109
need to do so then and a few other

310
00:17:18,689 --> 00:17:26,550
reviewers pointed out that features like

311
00:17:24,109 --> 00:17:30,030
economy and map versioning we're relying

312
00:17:26,550 --> 00:17:33,270
English GP on fields that were even

313
00:17:30,030 --> 00:17:35,730
smaller than what we had in what we have

314
00:17:33,270 --> 00:17:39,210
in the in the list better in particular

315
00:17:35,730 --> 00:17:41,580
we have only those two bytes markets

316
00:17:39,210 --> 00:17:43,679
reserved now and you know in

317
00:17:41,580 --> 00:17:46,770
particularly for the nouns even from a

318
00:17:43,679 --> 00:17:49,860
person in that was complicating the the

319
00:17:46,770 --> 00:17:52,290
features as well so since we have the

320
00:17:49,860 --> 00:17:56,159
opportunity will list GP of introducing

321
00:17:52,290 --> 00:18:00,379
new feature in the form of she matters

322
00:17:56,160 --> 00:18:03,690
and we will see what we mean afterwards

323
00:18:00,380 --> 00:18:07,320
but in general since that GP e is an

324
00:18:03,690 --> 00:18:09,679
extensible protocol then we thought that

325
00:18:07,320 --> 00:18:13,950
the easiest thing to address those

326
00:18:09,679 --> 00:18:16,020
challenges was to basically remove the

327
00:18:13,950 --> 00:18:19,940
features from the main idea and you know

328
00:18:16,020 --> 00:18:24,330
if we want to it is possible to redefine

329
00:18:19,940 --> 00:18:26,429
others that will follow the least GP

330
00:18:24,330 --> 00:18:28,678
header that implement those features for

331
00:18:26,429 --> 00:18:32,880
example if one wanted to use an ounce of

332
00:18:28,679 --> 00:18:35,310
64 or even under 28 bit one could do it

333
00:18:32,880 --> 00:18:37,170
and the same format versioning and the

334
00:18:35,310 --> 00:18:40,919
same also for a recipe so rather than

335
00:18:37,170 --> 00:18:42,840
trying to live with the limitation in

336
00:18:40,920 --> 00:18:44,050
space that we add in the originally

337
00:18:42,840 --> 00:18:47,709
spider

338
00:18:44,050 --> 00:18:50,440
we will we can try to use the the

339
00:18:47,710 --> 00:18:53,200
flexibility of GP to deploy a doc

340
00:18:50,440 --> 00:18:59,880
headers for for those particular use

341
00:18:53,200 --> 00:19:02,950
cases so this is the new text here and

342
00:18:59,880 --> 00:19:08,590
and basically this is what we do we got

343
00:19:02,950 --> 00:19:11,260
a comment back from Ben saying that yeah

344
00:19:08,590 --> 00:19:13,449
this is a he agreed that this could be a

345
00:19:11,260 --> 00:19:16,840
nice way to move forward so hopefully

346
00:19:13,450 --> 00:19:22,750
this will help him to to go into a yes

347
00:19:16,840 --> 00:19:26,860
for for for this document she made us so

348
00:19:22,750 --> 00:19:29,200
the other change was introduced it

349
00:19:26,860 --> 00:19:31,929
because we realized that there are some

350
00:19:29,200 --> 00:19:34,620
features that can be used and I think

351
00:19:31,930 --> 00:19:39,850
this was a comment from Miriah that

352
00:19:34,620 --> 00:19:44,110
started this change that it is possible

353
00:19:39,850 --> 00:19:46,360
I mean the list Bader is full of

354
00:19:44,110 --> 00:19:50,110
features but you know we kind of ran out

355
00:19:46,360 --> 00:19:54,449
of space and there are some features

356
00:19:50,110 --> 00:20:01,300
that can be can be added to the to the

357
00:19:54,450 --> 00:20:06,850
to the lead GP protocol and if we make

358
00:20:01,300 --> 00:20:11,379
the format of the additional header that

359
00:20:06,850 --> 00:20:14,590
we can add will be GP fixed it is

360
00:20:11,380 --> 00:20:18,550
possible for implementation to implement

361
00:20:14,590 --> 00:20:21,070
of course the extension that are well

362
00:20:18,550 --> 00:20:24,639
known at a certain point but it is also

363
00:20:21,070 --> 00:20:27,639
possible to skip those features that are

364
00:20:24,640 --> 00:20:29,410
not known at the moment a particular

365
00:20:27,640 --> 00:20:32,380
other implementation for example or

366
00:20:29,410 --> 00:20:35,890
software or matters is defined and this

367
00:20:32,380 --> 00:20:39,340
is helpful for intermediate nodes

368
00:20:35,890 --> 00:20:41,920
because in this way one can deploy

369
00:20:39,340 --> 00:20:44,320
incrementally features that we add to

370
00:20:41,920 --> 00:20:47,470
list GP and the intermediate nodes don't

371
00:20:44,320 --> 00:20:50,050
need to be you know change because they

372
00:20:47,470 --> 00:20:54,790
can just skip the parsing let me show

373
00:20:50,050 --> 00:20:56,830
that how the she made the format is and

374
00:20:54,790 --> 00:21:00,399
you will understand that

375
00:20:56,830 --> 00:21:03,659
this is fixed so whenever we want to

376
00:21:00,400 --> 00:21:05,770
define a new she matter please

377
00:21:03,660 --> 00:21:09,460
understand that she matter better

378
00:21:05,770 --> 00:21:12,970
we don't have transit nodes the closest

379
00:21:09,460 --> 00:21:14,980
we have is our TRS and but but we don't

380
00:21:12,970 --> 00:21:18,130
put our TR is technically terminate a

381
00:21:14,980 --> 00:21:21,190
tunnel and start a new tunnel right we

382
00:21:18,130 --> 00:21:23,160
don't have any transit nodes right I've

383
00:21:21,190 --> 00:21:26,050
noticed this coming up in a number of

384
00:21:23,160 --> 00:21:27,610
overlay protocols where the protocol

385
00:21:26,050 --> 00:21:29,470
runs between two endpoints and somebody

386
00:21:27,610 --> 00:21:31,870
starts worrying about what is the

387
00:21:29,470 --> 00:21:34,420
transit node doing no let's not make any

388
00:21:31,870 --> 00:21:42,040
argument about transit no behavior

389
00:21:34,420 --> 00:21:44,250
please okay we don't have any okay I'm

390
00:21:42,040 --> 00:21:47,980
just wondering if he's talking about I

391
00:21:44,250 --> 00:21:50,020
is it your comments very right about our

392
00:21:47,980 --> 00:21:52,570
TRS but could there be nested headers

393
00:21:50,020 --> 00:21:57,639
and does your are you applying for a

394
00:21:52,570 --> 00:22:00,100
nested header that it's a transit I just

395
00:21:57,640 --> 00:22:01,840
want to know what I think that what it

396
00:22:00,100 --> 00:22:04,419
could be helpful is that I mean when

397
00:22:01,840 --> 00:22:06,850
passing even at the maybe I we should

398
00:22:04,420 --> 00:22:10,450
write more clearly that and I agree with

399
00:22:06,850 --> 00:22:13,000
your reference on fancy notes maybe what

400
00:22:10,450 --> 00:22:16,330
we should specify is that at the

401
00:22:13,000 --> 00:22:18,580
tunneling point at the idea with this

402
00:22:16,330 --> 00:22:20,470
structure the implementation can pass in

403
00:22:18,580 --> 00:22:22,629
Hardware you know all the others that

404
00:22:20,470 --> 00:22:24,580
have to be passed in hardware and you

405
00:22:22,630 --> 00:22:26,559
know for those that were not defined at

406
00:22:24,580 --> 00:22:28,750
the time that the hardware was designed

407
00:22:26,559 --> 00:22:30,730
you know the packet can then be patented

408
00:22:28,750 --> 00:22:32,860
in software and those can be taken care

409
00:22:30,730 --> 00:22:35,050
of softer so I agree I can rephrase that

410
00:22:32,860 --> 00:22:37,149
and that's a good joy in terms of etrs

411
00:22:35,050 --> 00:22:39,580
is just fine just the transit header

412
00:22:37,150 --> 00:22:41,620
caught my attention it's like no no

413
00:22:39,580 --> 00:22:43,750
that's not what we discuss here yeah

414
00:22:41,620 --> 00:22:46,659
that's a that's a good comment okay so I

415
00:22:43,750 --> 00:22:49,059
can I can do the change in and change

416
00:22:46,660 --> 00:22:52,420
actually I think this text has not been

417
00:22:49,059 --> 00:22:55,330
added yet so I'll change according to

418
00:22:52,420 --> 00:22:58,390
what we discuss it would it be enough

419
00:22:55,330 --> 00:23:04,360
just to drop the transit word and say

420
00:22:58,390 --> 00:23:06,450
this BGP notes or this GPI cos I think

421
00:23:04,360 --> 00:23:08,080
so I think if we this thing can become

422
00:23:06,450 --> 00:23:09,510
implementation that I'm not the water

423
00:23:08,080 --> 00:23:10,980
forgiven she made her

424
00:23:09,510 --> 00:23:12,570
forgiving she made the type must ignore

425
00:23:10,980 --> 00:23:14,610
the she made and proceeded to pass the

426
00:23:12,570 --> 00:23:17,639
next row turquoise yeah exactly exactly

427
00:23:14,610 --> 00:23:21,090
and also I can change the reference in

428
00:23:17,640 --> 00:23:25,200
there ok so we will do that thanks for

429
00:23:21,090 --> 00:23:27,990
the comment and yeah and that is it the

430
00:23:25,200 --> 00:23:30,780
other aspect that may be interesting of

431
00:23:27,990 --> 00:23:32,490
him at us I think to help hardware

432
00:23:30,780 --> 00:23:36,540
implementation that echolocate some

433
00:23:32,490 --> 00:23:39,840
buffer for for these particular features

434
00:23:36,540 --> 00:23:41,490
having these adders in front rather than

435
00:23:39,840 --> 00:23:46,050
at the end help

436
00:23:41,490 --> 00:23:49,500
so the she matters that use a certain

437
00:23:46,050 --> 00:23:51,419
range of the next protocol field they

438
00:23:49,500 --> 00:23:53,970
will be in front them these I think is

439
00:23:51,420 --> 00:23:58,500
just a simplification for the other

440
00:23:53,970 --> 00:24:01,770
implementation examples I mean I have

441
00:23:58,500 --> 00:24:05,790
removed all the normative reference to

442
00:24:01,770 --> 00:24:07,740
examples but the draft is actually you

443
00:24:05,790 --> 00:24:09,510
know mentioning that for example what

444
00:24:07,740 --> 00:24:11,970
you could do which you made us is the

445
00:24:09,510 --> 00:24:16,620
find support for GBP group based

446
00:24:11,970 --> 00:24:19,800
policies IO am econ on see map

447
00:24:16,620 --> 00:24:22,800
versioning and LSB of course and there

448
00:24:19,800 --> 00:24:24,930
is a sentence specifically for for nouns

449
00:24:22,800 --> 00:24:26,970
but versioning and locator set to speed

450
00:24:24,930 --> 00:24:28,410
and this is just to provide the example

451
00:24:26,970 --> 00:24:30,420
of what can be done but there is no more

452
00:24:28,410 --> 00:24:32,310
normative reference to this draft and

453
00:24:30,420 --> 00:24:35,280
also the allocation of the code points

454
00:24:32,310 --> 00:24:37,740
for for the next protocol will be done

455
00:24:35,280 --> 00:24:43,649
in the specific draft and this was

456
00:24:37,740 --> 00:24:46,290
padres joys comment we have a new

457
00:24:43,650 --> 00:24:48,510
section section for about implementation

458
00:24:46,290 --> 00:24:49,860
and deployment consideration so there

459
00:24:48,510 --> 00:24:54,600
were a few comments about congestion

460
00:24:49,860 --> 00:24:57,449
control how to handle the UDP checksum

461
00:24:54,600 --> 00:25:00,209
toss bit and PCP beats in in the

462
00:24:57,450 --> 00:25:04,230
ethernet frames that were still part of

463
00:25:00,210 --> 00:25:09,110
section 3 so actually there is a RFC RC

464
00:25:04,230 --> 00:25:14,310
885 that specify well what are the UDP

465
00:25:09,110 --> 00:25:17,250
guidelines for tunneling protocol so

466
00:25:14,310 --> 00:25:20,760
what we have done is basically look at

467
00:25:17,250 --> 00:25:23,190
FC 8086 that is GRE in UDP encapsulation

468
00:25:20,760 --> 00:25:26,040
and RFC a is basically

469
00:25:23,190 --> 00:25:28,140
Ferenc - RFC 885 and you know following

470
00:25:26,040 --> 00:25:31,320
the guidelines or FC Alexi identified so

471
00:25:28,140 --> 00:25:33,330
most no not much but some of the text

472
00:25:31,320 --> 00:25:35,790
that was in our cat6 could be you know

473
00:25:33,330 --> 00:25:38,010
basically easily ported in in this case

474
00:25:35,790 --> 00:25:39,930
and that's what we did so we have this

475
00:25:38,010 --> 00:25:44,610
section for where we have an

476
00:25:39,930 --> 00:25:47,600
applicability statement we have comments

477
00:25:44,610 --> 00:25:51,899
about a section about congestion control

478
00:25:47,600 --> 00:25:54,929
functionality the usual UDP checksum and

479
00:25:51,900 --> 00:25:59,340
you repeat zero checksum with ipv6 and

480
00:25:54,930 --> 00:26:02,940
then consideration about Ethernet

481
00:25:59,340 --> 00:26:04,199
encapsulation payloads so the

482
00:26:02,940 --> 00:26:06,030
applicability statement I think is the

483
00:26:04,200 --> 00:26:09,510
most important of this section here

484
00:26:06,030 --> 00:26:12,000
because according to RFC 85 there are

485
00:26:09,510 --> 00:26:15,390
two applicability scenarios for UDP

486
00:26:12,000 --> 00:26:18,720
application one is when the tunneling

487
00:26:15,390 --> 00:26:21,120
protocol is a design for general

488
00:26:18,720 --> 00:26:23,550
internet applications and the other one

489
00:26:21,120 --> 00:26:28,320
is when it's designed for a controlled

490
00:26:23,550 --> 00:26:29,850
environment according to RFC 885 the

491
00:26:28,320 --> 00:26:31,950
control environment is what is defined

492
00:26:29,850 --> 00:26:33,980
there is a single minute of domain or an

493
00:26:31,950 --> 00:26:40,980
edition set of cooperating domains and

494
00:26:33,980 --> 00:26:42,480
you know where a network is in a

495
00:26:40,980 --> 00:26:43,650
controlled environment and can be

496
00:26:42,480 --> 00:26:46,500
managed to create under certain

497
00:26:43,650 --> 00:26:51,240
condition they don't apply in general to

498
00:26:46,500 --> 00:26:54,330
Internet the requirement for a protocol

499
00:26:51,240 --> 00:26:58,380
a tunnel protocol that ends up in the

500
00:26:54,330 --> 00:27:00,149
controlled environment scenario are less

501
00:26:58,380 --> 00:27:02,370
restrictive than the requirement of

502
00:27:00,150 --> 00:27:05,280
general internet so if we go back to

503
00:27:02,370 --> 00:27:11,669
where FC 6830 B's we see that the least

504
00:27:05,280 --> 00:27:14,220
scope of applicability is what RFC 885

505
00:27:11,670 --> 00:27:18,180
describes are a traffic manage control

506
00:27:14,220 --> 00:27:20,280
environment and so the GP has the same

507
00:27:18,180 --> 00:27:24,090
scope of applicability and so basically

508
00:27:20,280 --> 00:27:26,670
this section is is mentioning that in

509
00:27:24,090 --> 00:27:30,389
this case we can basically refer to the

510
00:27:26,670 --> 00:27:33,180
second to the 2-day TMC scenario and

511
00:27:30,390 --> 00:27:37,010
that simplifies the requirement for for

512
00:27:33,180 --> 00:27:39,630
the for the tunnel protocol

513
00:27:37,010 --> 00:27:42,809
okay and this is you know the change

514
00:27:39,630 --> 00:27:44,820
please take a look at section 4 send

515
00:27:42,809 --> 00:27:49,260
your comments most of the text as I said

516
00:27:44,820 --> 00:27:56,730
is coming from FC 886 so it as we stood

517
00:27:49,260 --> 00:27:59,460
the you know the time at least then the

518
00:27:56,730 --> 00:28:01,679
last aspect this was particularly

519
00:27:59,460 --> 00:28:05,540
complicated for some reason I couldn't

520
00:28:01,679 --> 00:28:11,880
understand many of Luigi's suggestion

521
00:28:05,540 --> 00:28:13,980
but I think we got it now so leave GP is

522
00:28:11,880 --> 00:28:16,590
defining the use of multiple data planes

523
00:28:13,980 --> 00:28:20,900
and there is an elk calf type that is

524
00:28:16,590 --> 00:28:24,678
actually specifying how any TR can

525
00:28:20,900 --> 00:28:27,929
signal in the Mac reply which

526
00:28:24,679 --> 00:28:32,550
encapsulation are supported so all is

527
00:28:27,929 --> 00:28:37,550
fine and nice and dandy but that

528
00:28:32,550 --> 00:28:43,379
particular ELCA type is not really

529
00:28:37,550 --> 00:28:47,010
allocated as part of FC 86 so it means

530
00:28:43,380 --> 00:28:51,090
that if we wanted to refer to the elk of

531
00:28:47,010 --> 00:28:54,390
type used in ER c 86 t these would be a

532
00:28:51,090 --> 00:28:57,260
down ref to an experimental RFC and this

533
00:28:54,390 --> 00:28:59,640
is a big no-no because you know we are

534
00:28:57,260 --> 00:29:04,740
defining li GP as a proposed standard

535
00:28:59,640 --> 00:29:08,250
together with 68 1368 33 B's so the

536
00:29:04,740 --> 00:29:13,050
thing to do is basically say okay let's

537
00:29:08,250 --> 00:29:16,260
take out of scope of least GP the

538
00:29:13,050 --> 00:29:19,379
detection of ETR capability so i will

539
00:29:16,260 --> 00:29:22,350
replace a section 5 1 with a simple

540
00:29:19,380 --> 00:29:24,720
sentence that we say that the detection

541
00:29:22,350 --> 00:29:28,110
of ETR capabilities is out of scope of

542
00:29:24,720 --> 00:29:31,830
least GP and we will leave that kind of

543
00:29:28,110 --> 00:29:35,820
work for when eventually FCAT 60 from

544
00:29:31,830 --> 00:29:44,850
experiment will be moved to to propose a

545
00:29:35,820 --> 00:29:48,750
standard and that's the plan so I think

546
00:29:44,850 --> 00:29:49,770
I think this is correct then you slide

547
00:29:48,750 --> 00:29:54,720
when you say

548
00:29:49,770 --> 00:29:57,090
we still deploy Kobe before yeah here

549
00:29:54,720 --> 00:29:59,640
because these are controlled environment

550
00:29:57,090 --> 00:30:02,100
right okay and if you work they are

551
00:29:59,640 --> 00:30:05,370
connected over the public Internet still

552
00:30:02,100 --> 00:30:07,139
connecting controller domains so if the

553
00:30:05,370 --> 00:30:10,350
domains are control it you have a way to

554
00:30:07,140 --> 00:30:16,470
know who's using behavior be e or not

555
00:30:10,350 --> 00:30:24,810
okay so it makes sense - yeah okay

556
00:30:16,470 --> 00:30:28,110
that's a good comment yeah okay and yeah

557
00:30:24,810 --> 00:30:32,389
so next steps so we have a few action

558
00:30:28,110 --> 00:30:36,840
items the comments from Joyal section 5

559
00:30:32,390 --> 00:30:39,930
1 I think there are a couple of I have

560
00:30:36,840 --> 00:30:41,399
seen actually one one typo in the in the

561
00:30:39,930 --> 00:30:43,710
actual test while I was presenting the

562
00:30:41,400 --> 00:30:48,330
slides so we will address those and we

563
00:30:43,710 --> 00:30:52,110
will publish Rev 12 tomorrow or the day

564
00:30:48,330 --> 00:30:54,389
after tomorrow and and that's it and the

565
00:30:52,110 --> 00:30:57,149
document will be ready for for your

566
00:30:54,390 --> 00:31:01,110
review and then I guess and you guys

567
00:30:57,150 --> 00:31:04,020
come please confirm we will send the

568
00:31:01,110 --> 00:31:11,129
document back to last call for the

569
00:31:04,020 --> 00:31:17,520
Working Group - right yeah ok any

570
00:31:11,130 --> 00:31:20,040
comments for the from do okay thank you

571
00:31:17,520 --> 00:31:22,490
okay hopefully in you know two or three

572
00:31:20,040 --> 00:31:27,350
weeks we can be past the last call and

573
00:31:22,490 --> 00:31:27,350
and move forward thank you

574
00:31:56,310 --> 00:31:59,149
they are

575
00:32:00,190 --> 00:32:09,580
um okay so it's mark here to provide an

576
00:32:05,010 --> 00:32:16,690
update on the changes we've been doing

577
00:32:09,580 --> 00:32:18,760
to the list overlay draft yes so this is

578
00:32:16,690 --> 00:32:22,980
an update based on the feedback that we

579
00:32:18,760 --> 00:32:26,620
received in the last meeting in Montreal

580
00:32:22,980 --> 00:32:28,720
think the most important change in in

581
00:32:26,620 --> 00:32:30,879
this update is the discussion on the

582
00:32:28,720 --> 00:32:33,700
policy considerations the thing you had

583
00:32:30,880 --> 00:32:38,340
multiple comments back there we have

584
00:32:33,700 --> 00:32:41,110
also included a couple of other

585
00:32:38,340 --> 00:32:44,110
considerations here and these are based

586
00:32:41,110 --> 00:32:48,490
on on implementation aspects that we've

587
00:32:44,110 --> 00:32:52,300
seen while while trying to to put these

588
00:32:48,490 --> 00:32:56,140
in practice yeah and yeah we've also

589
00:32:52,300 --> 00:32:57,850
added some editorial comments and yeah I

590
00:32:56,140 --> 00:32:59,830
have this ending that the revision or

591
00:32:57,850 --> 00:33:01,629
two would would be posted soon and it

592
00:32:59,830 --> 00:33:04,840
just got updated

593
00:33:01,630 --> 00:33:09,580
I think Victor posted it so you'll find

594
00:33:04,840 --> 00:33:13,090
these texts already in the website just

595
00:33:09,580 --> 00:33:16,480
to recap with what is the overlay draft

596
00:33:13,090 --> 00:33:20,610
if you remember this is a draft to

597
00:33:16,480 --> 00:33:22,960
provide interoperability as

598
00:33:20,610 --> 00:33:25,449
interoperability between site overlay

599
00:33:22,960 --> 00:33:29,380
that's our disparate well that or

600
00:33:25,450 --> 00:33:32,740
running the spread implementations these

601
00:33:29,380 --> 00:33:34,540
disparity can come as as control blame

602
00:33:32,740 --> 00:33:37,810
disparity or different condom planes or

603
00:33:34,540 --> 00:33:41,260
different data planes and the basic

604
00:33:37,810 --> 00:33:45,610
proposal is or what the draft tries to

605
00:33:41,260 --> 00:33:47,440
propose these is to structure these

606
00:33:45,610 --> 00:33:50,800
interpret interoperability as a

607
00:33:47,440 --> 00:33:52,720
hierarchical structure where multiple

608
00:33:50,800 --> 00:33:56,470
sides are connected through through

609
00:33:52,720 --> 00:33:58,990
these transit overlays this is just a

610
00:33:56,470 --> 00:34:01,420
recap but the important thing is what

611
00:33:58,990 --> 00:34:03,760
comes in this version and and the most

612
00:34:01,420 --> 00:34:07,140
important update is this topology

613
00:34:03,760 --> 00:34:09,370
support discussion the idea here is

614
00:34:07,140 --> 00:34:10,990
trying to answer how do we stitch

615
00:34:09,370 --> 00:34:13,659
together multiple networks those are

616
00:34:10,989 --> 00:34:18,158
running these overlays

617
00:34:13,659 --> 00:34:21,309
and what the text proposes here is this

618
00:34:18,159 --> 00:34:23,740
concept of loop free topologies the most

619
00:34:21,309 --> 00:34:26,799
important aspect that we are saying in

620
00:34:23,739 --> 00:34:29,078
the draft is that there is no provision

621
00:34:26,799 --> 00:34:35,440
for the detection of registration looks

622
00:34:29,079 --> 00:34:37,720
in in overlay deployments okay when we

623
00:34:35,440 --> 00:34:43,929
concatenate multiple side overlays and

624
00:34:37,719 --> 00:34:47,069
on overlays and given these the the

625
00:34:43,929 --> 00:34:49,629
draft tries to enforce the idea that

626
00:34:47,069 --> 00:34:56,139
overlays must be deployed in a loop free

627
00:34:49,629 --> 00:35:02,230
topology yeah in you free devices what

628
00:34:56,139 --> 00:35:04,150
does this mean and these are yeah maybe

629
00:35:02,230 --> 00:35:06,759
let me skim through these and go

630
00:35:04,150 --> 00:35:08,859
straight to the pictures that will make

631
00:35:06,759 --> 00:35:12,130
it easier

632
00:35:08,859 --> 00:35:14,440
well if Luffy topologies mean is that

633
00:35:12,130 --> 00:35:19,650
okay first thing as we said right

634
00:35:14,440 --> 00:35:23,319
overlays are proposed in this

635
00:35:19,650 --> 00:35:25,210
hierarchical structure or the idea to

636
00:35:23,319 --> 00:35:26,710
deploy overlays is to follow these

637
00:35:25,210 --> 00:35:30,220
hierarchical structure where we have

638
00:35:26,710 --> 00:35:34,990
site overlay site overlays connected to

639
00:35:30,220 --> 00:35:37,868
or lace and and these overlays could

640
00:35:34,990 --> 00:35:41,229
potentially be connected to higher-level

641
00:35:37,869 --> 00:35:45,099
overlays that could provide these

642
00:35:41,230 --> 00:35:46,930
interconnectivity between distant or

643
00:35:45,099 --> 00:35:49,509
separate site overlays that are

644
00:35:46,930 --> 00:35:51,730
connected to two different overlays yeah

645
00:35:49,509 --> 00:35:54,369
but the important thing in this little

646
00:35:51,730 --> 00:35:57,490
loop lucrative ology is this right that

647
00:35:54,369 --> 00:36:02,049
we imposed to connectivity rules to this

648
00:35:57,490 --> 00:36:04,359
here a key of overlays where overlays

649
00:36:02,049 --> 00:36:08,259
that are at the same level should never

650
00:36:04,359 --> 00:36:11,470
connect to each other and and overlays

651
00:36:08,259 --> 00:36:14,259
of any type should never skip here key

652
00:36:11,470 --> 00:36:16,569
when when connecting to to overlay

653
00:36:14,259 --> 00:36:19,240
if we impose these two rules we

654
00:36:16,569 --> 00:36:23,160
guarantee there are no loops in in this

655
00:36:19,240 --> 00:36:27,370
topology so so we are we are free from

656
00:36:23,160 --> 00:36:33,690
having to to

657
00:36:27,370 --> 00:36:37,779
routing solutions to the connection of I

658
00:36:33,690 --> 00:36:40,060
go by the Ruiz the draft presents these

659
00:36:37,780 --> 00:36:42,280
loop free topology generate generic

660
00:36:40,060 --> 00:36:46,330
concept is not encoded in the protocol

661
00:36:42,280 --> 00:36:48,010
in any way yeah and then it goes and

662
00:36:46,330 --> 00:36:54,460
defines these two rules on how to

663
00:36:48,010 --> 00:37:01,780
connect or less yeah no if you have

664
00:36:54,460 --> 00:37:04,780
comments on topology this is a lie like

665
00:37:01,780 --> 00:37:07,840
this is you know um if somebody happened

666
00:37:04,780 --> 00:37:10,540
in site overlay one point to a map

667
00:37:07,840 --> 00:37:13,690
server in the core overlay and it's

668
00:37:10,540 --> 00:37:16,060
against the requirements of the draft I

669
00:37:13,690 --> 00:37:18,190
think but I'm not sure maybe you could

670
00:37:16,060 --> 00:37:20,560
answer this is the site ID that's being

671
00:37:18,190 --> 00:37:23,950
registered could actually be known in

672
00:37:20,560 --> 00:37:26,440
the core uber lay and when it registers

673
00:37:23,950 --> 00:37:28,540
to overlay one it knows it can do the

674
00:37:26,440 --> 00:37:30,910
loop detection you might be able to

675
00:37:28,540 --> 00:37:33,250
prevent this dynamically without any

676
00:37:30,910 --> 00:37:37,899
special anything other than what you've

677
00:37:33,250 --> 00:37:40,900
already specified we could actually a

678
00:37:37,900 --> 00:37:45,220
next section talks a little bit are you

679
00:37:40,900 --> 00:37:48,880
site IDs for this but I think we could

680
00:37:45,220 --> 00:37:53,560
still find cases where we may be able to

681
00:37:48,880 --> 00:37:54,400
break it so clearly the draft says you

682
00:37:53,560 --> 00:37:56,020
shouldn't do this

683
00:37:54,400 --> 00:37:58,990
and if somebody accidentally does it

684
00:37:56,020 --> 00:38:02,980
does the machinery actually keep the

685
00:37:58,990 --> 00:38:04,209
network together it's not the machinery

686
00:38:02,980 --> 00:38:05,830
isn't going to take care of the

687
00:38:04,210 --> 00:38:14,580
horizontal links at least so they need

688
00:38:05,830 --> 00:38:18,279
the rules anyway yeah I think Silas can

689
00:38:14,580 --> 00:38:21,040
potentially help here and we could maybe

690
00:38:18,280 --> 00:38:24,150
and and this comes with the I mean this

691
00:38:21,040 --> 00:38:27,430
relates to that nexus light right it's

692
00:38:24,150 --> 00:38:30,850
what happens if we have multiple borders

693
00:38:27,430 --> 00:38:36,339
inter connecting multiple sites or or a

694
00:38:30,850 --> 00:38:38,589
site and and and overlay and and here we

695
00:38:36,340 --> 00:38:39,160
have another instance of a loop in some

696
00:38:38,590 --> 00:38:40,840
sense either

697
00:38:39,160 --> 00:38:43,930
so the ABA

698
00:38:40,840 --> 00:38:47,190
we have a border of order said that it's

699
00:38:43,930 --> 00:38:50,020
logically connecting to two sides and

700
00:38:47,190 --> 00:38:52,660
what I think that you might see it's

701
00:38:50,020 --> 00:38:54,700
always weather what could happen here is

702
00:38:52,660 --> 00:38:58,799
that depending on the order of events

703
00:38:54,700 --> 00:39:03,160
what we could have is that one border

704
00:38:58,800 --> 00:39:06,790
learn some mapping from from nowhere lay

705
00:39:03,160 --> 00:39:09,069
before the other resistors with the with

706
00:39:06,790 --> 00:39:11,140
you overlay and for whatever reason

707
00:39:09,070 --> 00:39:13,210
these registration comes back to the

708
00:39:11,140 --> 00:39:17,190
other border and this would create a

709
00:39:13,210 --> 00:39:22,540
loop back to the original side

710
00:39:17,190 --> 00:39:26,410
yeah the update also brings a provision

711
00:39:22,540 --> 00:39:29,680
to probe to solve this and and the idea

712
00:39:26,410 --> 00:39:32,620
here is that we need to treat these

713
00:39:29,680 --> 00:39:35,649
groups of borders as a border said and

714
00:39:32,620 --> 00:39:39,480
implement with horizon rules to the

715
00:39:35,650 --> 00:39:45,070
registration process if this could help

716
00:39:39,480 --> 00:39:46,920
prevent the unexpected configurations or

717
00:39:45,070 --> 00:39:51,340
in an expected interconnections between

718
00:39:46,920 --> 00:39:56,890
overlays should reevaluate a leave it

719
00:39:51,340 --> 00:40:02,280
but could we but the other proposal here

720
00:39:56,890 --> 00:40:06,430
is that members of order set need to

721
00:40:02,280 --> 00:40:08,830
share the idea of site of origin when

722
00:40:06,430 --> 00:40:11,859
registering prefixes and how they do

723
00:40:08,830 --> 00:40:15,880
these is yeah I know that the beginning

724
00:40:11,860 --> 00:40:17,770
you mentioned that side IV is not yeah

725
00:40:15,880 --> 00:40:20,410
it's it's been specified a bit abstract

726
00:40:17,770 --> 00:40:22,990
in the in the biz draft but here we we

727
00:40:20,410 --> 00:40:26,799
try to go back and and give a more

728
00:40:22,990 --> 00:40:31,240
specific used to the site ID number and

729
00:40:26,800 --> 00:40:33,970
and there is that what we these draft

730
00:40:31,240 --> 00:40:38,500
proposes is that site ID identifies the

731
00:40:33,970 --> 00:40:40,930
origin from where e is were learned why

732
00:40:38,500 --> 00:40:43,960
let's say in this case of order set when

733
00:40:40,930 --> 00:40:46,930
registering these with another with

734
00:40:43,960 --> 00:40:48,550
within our site and as long as these as

735
00:40:46,930 --> 00:40:50,589
we keep this ID ID through the

736
00:40:48,550 --> 00:40:54,900
registration and publication process we

737
00:40:50,590 --> 00:41:03,700
can we can implement the

738
00:40:54,900 --> 00:41:07,690
the this big horizon solution yeah for

739
00:41:03,700 --> 00:41:10,509
clarification is the site ID it's down

740
00:41:07,690 --> 00:41:13,030
to the site from which I learned the

741
00:41:10,510 --> 00:41:17,350
mapping or is they decide actually

742
00:41:13,030 --> 00:41:20,410
publishing the mapping yes so it

743
00:41:17,350 --> 00:41:23,529
identifies the origin but it's it's

744
00:41:20,410 --> 00:41:28,390
meaningful in the destination let's say

745
00:41:23,530 --> 00:41:31,420
side where you send the registration but

746
00:41:28,390 --> 00:41:35,400
yeah so it's a number in some sense that

747
00:41:31,420 --> 00:41:39,190
both border XT are that that are

748
00:41:35,400 --> 00:41:41,770
redistributing Ivy's need to share in

749
00:41:39,190 --> 00:41:43,630
order to be able to to implement this

750
00:41:41,770 --> 00:41:47,290
big garage so it's it's more than just

751
00:41:43,630 --> 00:41:49,150
locally significant to the site your

752
00:41:47,290 --> 00:41:50,740
phrase here on the slide is locally

753
00:41:49,150 --> 00:41:54,400
significant to each overlay but it's

754
00:41:50,740 --> 00:42:00,069
used by other sites mmm actually not

755
00:41:54,400 --> 00:42:08,290
it's it does not need to cross side

756
00:42:00,070 --> 00:42:13,180
boundaries it so we have border set

757
00:42:08,290 --> 00:42:15,490
these guys are these these two guys are

758
00:42:13,180 --> 00:42:17,290
connecting these these two overlays

759
00:42:15,490 --> 00:42:22,330
let's say the overlay on the side of

760
00:42:17,290 --> 00:42:26,759
early now in the overlay a site ID will

761
00:42:22,330 --> 00:42:29,850
identify that prefixes come from from

762
00:42:26,760 --> 00:42:33,040
side overlay but this number is only

763
00:42:29,850 --> 00:42:34,930
significant for the two borders and it

764
00:42:33,040 --> 00:42:37,660
must be unique in the you overlay but

765
00:42:34,930 --> 00:42:39,190
does not need to be unique the site

766
00:42:37,660 --> 00:42:43,450
overlay does not need to know anything

767
00:42:39,190 --> 00:42:47,200
about it's a number that these two

768
00:42:43,450 --> 00:42:49,689
borders share in order to to to identity

769
00:42:47,200 --> 00:42:52,149
to recognize registrations that they

770
00:42:49,690 --> 00:42:54,280
have made and they have that have come

771
00:42:52,150 --> 00:42:56,770
back to the same border sector okay so

772
00:42:54,280 --> 00:42:58,420
it's used by the borders from this side

773
00:42:56,770 --> 00:43:00,430
in case their registrations get

774
00:42:58,420 --> 00:43:06,840
reflected from somewhere else yes

775
00:43:00,430 --> 00:43:06,839
so it's carried opaquely okay yes exam

776
00:43:08,079 --> 00:43:12,670
yes but there is a requirement than in

777
00:43:10,959 --> 00:43:14,618
order to make it work different sites

778
00:43:12,670 --> 00:43:15,939
better manage to nonetheless use

779
00:43:14,619 --> 00:43:19,589
different ones even though they're

780
00:43:15,939 --> 00:43:23,769
locally significant if two sites collide

781
00:43:19,589 --> 00:43:26,920
very bad a misinterpretation will happen

782
00:43:23,769 --> 00:43:36,698
so it's not quite locally significant

783
00:43:26,920 --> 00:43:39,670
it's a 64 bit number that's a random so

784
00:43:36,699 --> 00:43:41,319
I have another quick comment to me it's

785
00:43:39,670 --> 00:43:44,229
a little bit misleading how you have the

786
00:43:41,319 --> 00:43:47,049
things going on 2/3 because what's

787
00:43:44,229 --> 00:43:51,669
happening is the XT ours are registering

788
00:43:47,049 --> 00:43:54,279
to ms1 okay right and then if for some

789
00:43:51,670 --> 00:43:56,759
and then the bx TRS are registering all

790
00:43:54,279 --> 00:44:01,119
the e IDs from the site overlay - MS -

791
00:43:56,759 --> 00:44:04,989
right yes so you have an arrow in number

792
00:44:01,119 --> 00:44:07,089
for MS - back to ex TR - what is that

793
00:44:04,989 --> 00:44:10,900
supposed is that a message it's not a

794
00:44:07,089 --> 00:44:16,599
map register because b xt r2 is not an

795
00:44:10,900 --> 00:44:19,239
app server um well it could be a Polish

796
00:44:16,599 --> 00:44:22,569
message right for example so the border

797
00:44:19,239 --> 00:44:25,509
xtr do is subscribe to to receive

798
00:44:22,569 --> 00:44:28,150
everything that is resisted on ms - are

799
00:44:25,509 --> 00:44:31,420
you are you saying ms - sending a map

800
00:44:28,150 --> 00:44:32,439
notifying message - xtr - telling them

801
00:44:31,420 --> 00:44:34,509
about things that have been registered

802
00:44:32,439 --> 00:44:36,308
to it which could have came from other

803
00:44:34,509 --> 00:44:38,410
site overlays but could also come from

804
00:44:36,309 --> 00:44:41,439
itself and therefore you know you

805
00:44:38,410 --> 00:44:44,589
shouldn't register it re register - MS 1

806
00:44:41,439 --> 00:44:46,538
because xtr has registered it yeah we

807
00:44:44,589 --> 00:44:48,969
could also have partitioning right that

808
00:44:46,539 --> 00:44:51,400
I don't know for some reason traffic is

809
00:44:48,969 --> 00:44:55,150
sent through for their ex TR - sends my

810
00:44:51,400 --> 00:45:03,009
requests or so so yeah any any sequence

811
00:44:55,150 --> 00:45:09,039
of event that can can lead to this okay

812
00:45:03,009 --> 00:45:10,809
so yeah but I think yeah the important

813
00:45:09,039 --> 00:45:15,579
concept here is the size of origin and

814
00:45:10,809 --> 00:45:18,279
the relation we cited and the last one

815
00:45:15,579 --> 00:45:20,230
is this idea of default eid

816
00:45:18,279 --> 00:45:23,589
registrations

817
00:45:20,230 --> 00:45:30,849
the idea with overlays and stitching

818
00:45:23,589 --> 00:45:34,230
together site overlays is that in

819
00:45:30,849 --> 00:45:37,990
deployment we assume that borders

820
00:45:34,230 --> 00:45:40,390
receive most of the traffic following

821
00:45:37,990 --> 00:45:45,160
for example negative mob replies saying

822
00:45:40,390 --> 00:45:47,230
okay prefixes in order to prevent the an

823
00:45:45,160 --> 00:45:49,779
explosion of registrations we may choose

824
00:45:47,230 --> 00:45:53,140
to not register everything we cite

825
00:45:49,780 --> 00:45:55,900
overlays and and kind of use a default

826
00:45:53,140 --> 00:45:59,140
route when when accessing prefixes that

827
00:45:55,900 --> 00:46:02,890
are outside of the domain of the site

828
00:45:59,140 --> 00:46:05,170
overlay so these default daily

829
00:46:02,890 --> 00:46:07,150
registration is just a provision so that

830
00:46:05,170 --> 00:46:11,800
these negative map replies can be

831
00:46:07,150 --> 00:46:14,589
converted into complete mappings but and

832
00:46:11,800 --> 00:46:17,980
carry a group of our logs that

833
00:46:14,589 --> 00:46:20,980
correspond to the it's it's just so the

834
00:46:17,980 --> 00:46:24,160
basic idea that this is registered as as

835
00:46:20,980 --> 00:46:25,930
some other type of Vav just so that the

836
00:46:24,160 --> 00:46:30,040
map server can continue computing

837
00:46:25,930 --> 00:46:31,810
negative replies and yeah dynamically

838
00:46:30,040 --> 00:46:34,630
this is do you know I made a comment to

839
00:46:31,810 --> 00:46:36,670
Victor that if map-reply has an hour

840
00:46:34,630 --> 00:46:38,319
look set in it by definition it's not a

841
00:46:36,670 --> 00:46:41,200
negative battery oh yeah so we should

842
00:46:38,319 --> 00:46:42,759
use the right terminology okay yeah I

843
00:46:41,200 --> 00:46:44,859
think what we wanted to say here is that

844
00:46:42,760 --> 00:46:47,260
the calculation is the same as for

845
00:46:44,859 --> 00:46:52,810
negatives but then we we send a complete

846
00:46:47,260 --> 00:46:59,470
mapping back to okay and that's it when

847
00:46:52,810 --> 00:47:01,270
your comments or questions yeah this was

848
00:46:59,470 --> 00:47:06,189
just a bloated you can find all this

849
00:47:01,270 --> 00:47:07,960
taxing in version to come back to the

850
00:47:06,190 --> 00:47:11,410
question or to the comments of keynote

851
00:47:07,960 --> 00:47:13,810
that would be a proxy yet that's the

852
00:47:11,410 --> 00:47:17,730
terminology to be used then the toxic

853
00:47:13,810 --> 00:47:25,150
getting very encapsulate me vicious but

854
00:47:17,730 --> 00:47:27,550
stare correct I guess anybody who sends

855
00:47:25,150 --> 00:47:29,440
a map reply that are not their own our

856
00:47:27,550 --> 00:47:30,790
locks are advertising our locks of

857
00:47:29,440 --> 00:47:34,040
somebody else and yes you can call that

858
00:47:30,790 --> 00:47:37,279
a proxy a proxy map required

859
00:47:34,040 --> 00:47:39,860
so it's a great term because when I map

860
00:47:37,280 --> 00:47:42,620
server returns on map-reply on behalf of

861
00:47:39,860 --> 00:47:44,480
an EGR it's a proxy map-reply per

862
00:47:42,620 --> 00:47:46,910
definition and it turns out that the

863
00:47:44,480 --> 00:47:49,010
outlook set that it's proxy replying for

864
00:47:46,910 --> 00:47:52,600
are the et hours that are at the site so

865
00:47:49,010 --> 00:47:52,600
yeah it's perfect yeah

866
00:48:38,790 --> 00:48:56,170
okay that's great okay I'll do this I'm

867
00:48:47,830 --> 00:48:59,410
gonna understanding wrong place okay so

868
00:48:56,170 --> 00:49:03,550
I'm gonna give a quick multicast demo on

869
00:48:59,410 --> 00:49:05,890
a list mobile mode at the last IETF in

870
00:49:03,550 --> 00:49:07,450
Montreal I gave a unicast demo and

871
00:49:05,890 --> 00:49:09,879
basically what it showed is that a

872
00:49:07,450 --> 00:49:13,029
mobile node can switch from LTE to Wi-Fi

873
00:49:09,880 --> 00:49:15,160
with session continuity because the

874
00:49:13,030 --> 00:49:18,010
phone is allocated in Eid and talking to

875
00:49:15,160 --> 00:49:20,830
any ID or anonymous site on the other

876
00:49:18,010 --> 00:49:22,360
side if you want to see that unicast

877
00:49:20,830 --> 00:49:25,360
demo I'm going to give the unicast and

878
00:49:22,360 --> 00:49:27,340
multicast demo at mbone D on Thursday I

879
00:49:25,360 --> 00:49:30,990
think it is but this is just going to

880
00:49:27,340 --> 00:49:34,060
show the new stuff that I just started

881
00:49:30,990 --> 00:49:36,850
so what we are demoing is the list

882
00:49:34,060 --> 00:49:39,880
mobile node R after f5 on an iPhone and

883
00:49:36,850 --> 00:49:42,069
I have some RT R 3 encapsulating tunnel

884
00:49:39,880 --> 00:49:45,580
routers that are deployed in Google

885
00:49:42,070 --> 00:49:47,470
Cloud and the Lisp mobile node is going

886
00:49:45,580 --> 00:49:50,710
to talk to list correspondent nodes

887
00:49:47,470 --> 00:49:52,810
behind Nats and for this demo the

888
00:49:50,710 --> 00:49:55,060
multicast sources and the multicast

889
00:49:52,810 --> 00:49:58,660
receivers are all on the list overlay so

890
00:49:55,060 --> 00:50:00,580
there's no inner working per se that's

891
00:49:58,660 --> 00:50:02,170
part of the mobile phone demo but the

892
00:50:00,580 --> 00:50:04,330
very last slide is we're doing some work

893
00:50:02,170 --> 00:50:08,310
with M bone D an interoperability with

894
00:50:04,330 --> 00:50:08,310
AMT so I'll talk about that separately

895
00:50:08,340 --> 00:50:13,360
ok so some magic sauce the list mobile

896
00:50:11,500 --> 00:50:16,120
node is not running any list control

897
00:50:13,360 --> 00:50:18,250
plane just like in the unicast case so

898
00:50:16,120 --> 00:50:20,950
the list mode will know basically when

899
00:50:18,250 --> 00:50:23,980
configured has a map cache for all

900
00:50:20,950 --> 00:50:27,129
routes going to these are TR that are in

901
00:50:23,980 --> 00:50:29,980
the cloud and the RT RS are configured

902
00:50:27,130 --> 00:50:32,650
to glean xtr mappings so we don't have

903
00:50:29,980 --> 00:50:35,230
to use any natural versal control plane

904
00:50:32,650 --> 00:50:37,960
all the natural versa logic happens in

905
00:50:35,230 --> 00:50:40,150
the data plane and this isn't an effort

906
00:50:37,960 --> 00:50:43,540
to implement a really very lightweight

907
00:50:40,150 --> 00:50:46,330
xtr maybe ones that can run in dashcams

908
00:50:43,540 --> 00:50:48,810
and low memory and low CPU challenge

909
00:50:46,330 --> 00:50:48,810
devices

910
00:50:49,790 --> 00:50:53,730
okay so in the list mobile know what is

911
00:50:51,990 --> 00:50:55,828
acting as a multicast receiver that

912
00:50:53,730 --> 00:50:57,900
means it's a member of a group it's

913
00:50:55,829 --> 00:50:59,369
using IGMP to join groups the

914
00:50:57,900 --> 00:51:03,390
application that's running on the phone

915
00:50:59,369 --> 00:51:05,760
will send IGMP reports those IGMP

916
00:51:03,390 --> 00:51:06,960
reports are encapsulated like any other

917
00:51:05,760 --> 00:51:09,059
packet to the RTR

918
00:51:06,960 --> 00:51:13,349
and then the RTR tract a group

919
00:51:09,059 --> 00:51:15,510
membership the RTR is then met replicate

920
00:51:13,349 --> 00:51:16,890
multi kept multicast packets still

921
00:51:15,510 --> 00:51:19,559
although this mobile knows that our

922
00:51:16,890 --> 00:51:21,509
group members Hedden replication is head

923
00:51:19,559 --> 00:51:24,480
and head is a relative term here

924
00:51:21,510 --> 00:51:28,710
it's the RTR that are receiving the IGMP

925
00:51:24,480 --> 00:51:31,440
reports from the mobile laws when the

926
00:51:28,710 --> 00:51:33,300
list mole note is a multicast source it

927
00:51:31,440 --> 00:51:35,520
sends multicast packets just like any

928
00:51:33,300 --> 00:51:36,869
other packet to the Artie ours so as you

929
00:51:35,520 --> 00:51:39,119
can tell the list mobile note does

930
00:51:36,869 --> 00:51:42,000
absolutely nothing any application data

931
00:51:39,119 --> 00:51:44,430
packets always get sent to a an array of

932
00:51:42,000 --> 00:51:46,440
our TRS or one RT R if it's configured

933
00:51:44,430 --> 00:51:48,710
with a single one and of course the our

934
00:51:46,440 --> 00:52:03,150
TRS can replicate to correspondent nodes

935
00:51:48,710 --> 00:52:05,970
or list mobile node group so what

936
00:52:03,150 --> 00:52:07,829
happens is by doing this list mobile

937
00:52:05,970 --> 00:52:09,868
node maintains multicast session

938
00:52:07,829 --> 00:52:12,599
continuity so if the mobile node is

939
00:52:09,869 --> 00:52:14,069
moving across LTE and Wi-Fi locally it's

940
00:52:12,599 --> 00:52:16,680
either losing signal you're switching

941
00:52:14,069 --> 00:52:18,540
the multicast streams either if being

942
00:52:16,680 --> 00:52:22,770
sourced by the mobile mode or receiving

943
00:52:18,540 --> 00:52:25,349
as a member keep going so here's the

944
00:52:22,770 --> 00:52:27,170
topology we have setup I have two

945
00:52:25,349 --> 00:52:31,079
containers that are running on my laptop

946
00:52:27,170 --> 00:52:33,030
that are a IDs 25 and 14 they're sitting

947
00:52:31,079 --> 00:52:34,650
behind that devices of course because

948
00:52:33,030 --> 00:52:36,750
they're running in docker here so

949
00:52:34,650 --> 00:52:39,569
there's not only a NAT on the laptop but

950
00:52:36,750 --> 00:52:42,690
there's also Nats depending on how I'm

951
00:52:39,569 --> 00:52:46,920
connected to the Internet and the iPhone

952
00:52:42,690 --> 00:52:49,619
is running low R so some kudos to Albert

953
00:52:46,920 --> 00:52:51,329
in cut and his team for doing the O our

954
00:52:49,619 --> 00:52:53,190
implementation and supporting me through

955
00:52:51,329 --> 00:52:55,920
this it's been really a great thing so

956
00:52:53,190 --> 00:52:58,020
appreciate it so the mobile node is

957
00:52:55,920 --> 00:53:01,260
connected to Wi-Fi and LTE of course

958
00:52:58,020 --> 00:53:02,609
it's CID 13 and the idea here is that

959
00:53:01,260 --> 00:53:05,400
we're going to use

960
00:53:02,609 --> 00:53:05,910
those are TRS that are sitting in the

961
00:53:05,400 --> 00:53:08,519
Internet

962
00:53:05,910 --> 00:53:10,499
underlay so the GR TR is the one in G CP

963
00:53:08,519 --> 00:53:12,749
and there's three other ones in AWS that

964
00:53:10,499 --> 00:53:14,578
were there they're to be used they were

965
00:53:12,749 --> 00:53:15,689
there for the unicast demo but we're not

966
00:53:14,579 --> 00:53:17,789
going to use them for the multicast

967
00:53:15,690 --> 00:53:21,029
don't know we can though with some

968
00:53:17,789 --> 00:53:25,200
issues that I'll talk about so the first

969
00:53:21,029 --> 00:53:26,220
the first demo or there's two streams

970
00:53:25,200 --> 00:53:28,319
we're going to do we're going to show

971
00:53:26,220 --> 00:53:30,899
that the the 25 is going to be a

972
00:53:28,319 --> 00:53:32,849
multicast or sending to group 2 24 1 1 1

973
00:53:30,900 --> 00:53:35,489
and it's going to be running VLC as the

974
00:53:32,849 --> 00:53:37,410
application video streamers and then we

975
00:53:35,489 --> 00:53:38,970
have a copy of VLC that's on the iPhone

976
00:53:37,410 --> 00:53:44,279
that's running and it's going to be

977
00:53:38,970 --> 00:53:46,348
joined to 2 24 1 1 1 and then the second

978
00:53:44,279 --> 00:53:48,150
demos we're going to have the phone be

979
00:53:46,349 --> 00:53:50,730
the source and it's just going to be

980
00:53:48,150 --> 00:53:52,140
sending pings at - 24 - 2 - and we're

981
00:53:50,730 --> 00:53:58,109
going to show that the two containers

982
00:53:52,140 --> 00:54:01,980
are doing to that group ok clear fire up

983
00:53:58,109 --> 00:54:05,660
this demo I'm I'm not a film expert so

984
00:54:01,980 --> 00:54:05,660
there's a little bit of touchy filming

985
00:54:26,450 --> 00:54:59,609
it's not because it's in somewhere

986
00:54:35,250 --> 00:55:04,890
presentation well it didn't do it last

987
00:54:59,609 --> 00:55:07,160
time okay so I'm gonna have to do this

988
00:55:04,890 --> 00:55:07,160
myself

989
00:55:12,349 --> 00:55:33,150
sounds good so let me go back real quick

990
00:55:19,130 --> 00:55:35,779
and click okay so so I think we're first

991
00:55:33,150 --> 00:55:38,279
going to do the pig and I'm describing

992
00:55:35,779 --> 00:55:41,400
basically what I just described to you

993
00:55:38,279 --> 00:55:43,079
guys and when some action I'm just

994
00:55:41,400 --> 00:55:45,630
pointing to saying that this is the

995
00:55:43,079 --> 00:55:47,400
source and it's going to send to these

996
00:55:45,630 --> 00:55:53,690
two receivers so we're doing the pink

997
00:55:47,400 --> 00:55:53,690
pig that is a shell window up there

998
00:56:01,330 --> 00:56:07,480
and I blew out the projector hey there

999
00:56:07,930 --> 00:56:23,450
can I guess it's learning that I can't

1000
00:56:10,430 --> 00:56:25,339
leave my show navigator okay while it's

1001
00:56:23,450 --> 00:56:33,140
running if you just do this to keep it

1002
00:56:25,340 --> 00:56:37,330
going though we're good I know it's this

1003
00:56:33,140 --> 00:56:37,330
presentation though let's do it this way

1004
00:56:50,980 --> 00:57:01,400
okay oh no just oh great

1005
00:56:57,920 --> 00:57:09,380
there's too many problems there back on

1006
00:57:01,400 --> 00:57:15,380
the screen next okay I wish I could fast

1007
00:57:09,380 --> 00:57:20,060
forward so I'll keep the pointer up

1008
00:57:15,380 --> 00:57:21,980
there and while describing it just just

1009
00:57:20,060 --> 00:57:25,220
do this a couple times so the screen

1010
00:57:21,980 --> 00:57:27,740
stays refreshed okay it's only a three

1011
00:57:25,220 --> 00:57:30,140
minutes video but okay now Rebecca

1012
00:57:27,740 --> 00:57:36,500
reviewer so what's going to happen here

1013
00:57:30,140 --> 00:57:38,029
is we're going to pain to 24 - 2 - as

1014
00:57:36,500 --> 00:57:39,610
I'm showing there with the arrow if you

1015
00:57:38,030 --> 00:57:43,250
can see it from back there I'm not sure

1016
00:57:39,610 --> 00:57:45,530
and then these are the two containers in

1017
00:57:43,250 --> 00:57:48,470
this window window so once the ping

1018
00:57:45,530 --> 00:57:49,670
starts these guys are joined to the

1019
00:57:48,470 --> 00:57:53,500
group I'll show you that when I show you

1020
00:57:49,670 --> 00:57:53,500
the RTR display in that web browser

1021
00:57:58,710 --> 00:58:03,940
I'm telling you now that the two

1022
00:58:01,210 --> 00:58:06,640
containers are joined to agree to - 24 -

1023
00:58:03,940 --> 00:58:08,890
2 - these are there are looks and these

1024
00:58:06,640 --> 00:58:10,870
are there he IDs of course there me IDs

1025
00:58:08,890 --> 00:58:14,350
are important here because they're

1026
00:58:10,870 --> 00:58:16,660
receiving data from T 24 - 2 - now I'm

1027
00:58:14,350 --> 00:58:21,160
starting the ping on the phone and you

1028
00:58:16,660 --> 00:58:23,109
see the scrolling happening then when

1029
00:58:21,160 --> 00:58:24,910
you come here I'm refreshing the display

1030
00:58:23,110 --> 00:58:27,400
to show you the packet count going

1031
00:58:24,910 --> 00:58:30,190
through the RT R so it's replicating -

1032
00:58:27,400 --> 00:58:32,680
the two containers this is happening the

1033
00:58:30,190 --> 00:58:35,110
containers the receivers and the source

1034
00:58:32,680 --> 00:58:37,120
are both at my house using my Comcast

1035
00:58:35,110 --> 00:58:39,760
connection so they're actually going all

1036
00:58:37,120 --> 00:58:41,710
the way to GCP and coming back but and

1037
00:58:39,760 --> 00:58:42,790
so there's a lot of delay so the RT R is

1038
00:58:41,710 --> 00:58:45,460
really there's really a lot of hair

1039
00:58:42,790 --> 00:58:47,770
pretty going on now what I'm doing I was

1040
00:58:45,460 --> 00:58:50,680
on Wi-Fi what I'm doing now is switching

1041
00:58:47,770 --> 00:58:58,180
to LTE it's showing that the pings will

1042
00:58:50,680 --> 00:59:02,350
continue as soon as I move my head oh no

1043
00:58:58,180 --> 00:59:07,509
it's not the funny years coming up ok so

1044
00:59:02,350 --> 00:59:10,720
now what you see is now I I'm on see me

1045
00:59:07,510 --> 00:59:14,170
refresh the screen that 73 address was

1046
00:59:10,720 --> 00:59:16,270
my Comcast Wi-Fi now this is a 166

1047
00:59:14,170 --> 00:59:20,770
address which is my phone connected to

1048
00:59:16,270 --> 00:59:22,930
LTE now it's interesting here because

1049
00:59:20,770 --> 00:59:24,130
it's acting as a source the gleaning of

1050
00:59:22,930 --> 00:59:25,299
the source here is not really that

1051
00:59:24,130 --> 00:59:26,890
important because there's really no

1052
00:59:25,300 --> 00:59:28,150
packets going back to the cell phone

1053
00:59:26,890 --> 00:59:35,470
this is really a unidirectional

1054
00:59:28,150 --> 00:59:38,200
multicast well from from I had I had my

1055
00:59:35,470 --> 00:59:39,939
iPad as a camera on an easel and I

1056
00:59:38,200 --> 00:59:41,410
knocked it off so and I was quick enough

1057
00:59:39,940 --> 00:59:44,860
to put it back up where you hopefully

1058
00:59:41,410 --> 00:59:47,200
didn't see it okay so I'm doing now is

1059
00:59:44,860 --> 00:59:48,730
I'm setting up this container here to

1060
00:59:47,200 --> 00:59:52,149
send the video so we're doing the video

1061
00:59:48,730 --> 00:59:55,840
down now and now I'm I'm going to bring

1062
00:59:52,150 --> 01:00:00,160
up VLC on the phone right there and when

1063
00:59:55,840 --> 01:00:02,050
I touch when I touched the 224 network

1064
01:00:00,160 --> 01:00:04,240
stream there that's causing the IGMP

1065
01:00:02,050 --> 01:00:04,720
report from the phone to be sent to the

1066
01:00:04,240 --> 01:00:08,470
RTR

1067
01:00:04,720 --> 01:00:10,870
so that's about the tepid and there's

1068
01:00:08,470 --> 01:00:13,450
the stream is sending a waterfall

1069
01:00:10,870 --> 01:00:16,359
video image from this container and

1070
01:00:13,450 --> 01:00:18,669
there you see it on the phone okay and

1071
01:00:16,360 --> 01:00:22,600
then I think I'm going to show you the

1072
01:00:18,670 --> 01:00:24,400
RTI now now like you're gonna see is two

1073
01:00:22,600 --> 01:00:26,350
twenty four one when one is joined by

1074
01:00:24,400 --> 01:00:30,030
the phone and you notice it's sending

1075
01:00:26,350 --> 01:00:33,819
into the 166 address which is over LTE

1076
01:00:30,030 --> 01:00:34,990
and then I'm refreshing the screen to

1077
01:00:33,820 --> 01:00:36,850
show you that the count when the

1078
01:00:34,990 --> 01:00:40,169
counters are duck green that means a

1079
01:00:36,850 --> 01:00:42,520
packets but you see the last second and

1080
01:00:40,170 --> 01:00:45,400
now what I'm doing is I'm switching back

1081
01:00:42,520 --> 01:00:47,259
to Wi-Fi to show you from the receivers

1082
01:00:45,400 --> 01:00:49,390
point of view that the stream is if you

1083
01:00:47,260 --> 01:00:51,370
hear that static that's actually the

1084
01:00:49,390 --> 01:00:57,040
noise of the waterfall coming down so

1085
01:00:51,370 --> 01:01:00,549
the audience being multicast it to and

1086
01:00:57,040 --> 01:01:03,100
now there's the water fall and then when

1087
01:01:00,550 --> 01:01:06,040
we refresh the screen we went back to 73

1088
01:01:03,100 --> 01:01:09,240
to twenty-four on one one is now seventy

1089
01:01:06,040 --> 01:01:09,240
three which is the Wi-Fi connection

1090
01:01:10,470 --> 01:01:21,490
that's it okay so some observations the

1091
01:01:19,480 --> 01:01:23,590
glean links he does not exist as it does

1092
01:01:21,490 --> 01:01:26,169
for unicast so the idea is is when the

1093
01:01:23,590 --> 01:01:28,120
phone sends a packet to the RTR and it

1094
01:01:26,170 --> 01:01:31,210
cleans the are look information via the

1095
01:01:28,120 --> 01:01:33,880
NAT through than that that information

1096
01:01:31,210 --> 01:01:35,590
is glean and has to be set up in a map

1097
01:01:33,880 --> 01:01:37,630
cache entry because when a return packet

1098
01:01:35,590 --> 01:01:39,280
comes back it uses it but since we have

1099
01:01:37,630 --> 01:01:40,510
a unidirectional multicast flow here

1100
01:01:39,280 --> 01:01:43,540
we're really not sending a unicast

1101
01:01:40,510 --> 01:01:45,520
packets back for so for sender only nose

1102
01:01:43,540 --> 01:01:47,590
you really don't have to glean for

1103
01:01:45,520 --> 01:01:49,150
receiver nodes you have to glean but the

1104
01:01:47,590 --> 01:01:50,230
gleaning happens at the control plane

1105
01:01:49,150 --> 01:01:53,110
not when you need the data

1106
01:01:50,230 --> 01:01:55,690
so the IGMP report that is sent from the

1107
01:01:53,110 --> 01:01:57,280
phone to the RTR that the gleaning is

1108
01:01:55,690 --> 01:01:59,320
done there and there's no way that the

1109
01:01:57,280 --> 01:02:01,060
receiver can receive the traffic until

1110
01:01:59,320 --> 01:02:03,460
the IGMP reports so it's great the

1111
01:02:01,060 --> 01:02:05,470
reporting the group join the group

1112
01:02:03,460 --> 01:02:07,210
membership join and the glean happened

1113
01:02:05,470 --> 01:02:07,750
exactly at the same time so this is kind

1114
01:02:07,210 --> 01:02:10,630
of nice

1115
01:02:07,750 --> 01:02:12,160
this is where multicast is your head

1116
01:02:10,630 --> 01:02:14,620
upside down we were able to take

1117
01:02:12,160 --> 01:02:16,569
advantage of this receiver oriented so

1118
01:02:14,620 --> 01:02:19,600
there is an interesting issue if the

1119
01:02:16,570 --> 01:02:21,100
members are spread across our TRS then

1120
01:02:19,600 --> 01:02:22,120
the listener will know needs to send to

1121
01:02:21,100 --> 01:02:23,930
all our TRS

1122
01:02:22,120 --> 01:02:26,000
which means the list mobile node

1123
01:02:23,930 --> 01:02:28,520
to replicate this is probably not good

1124
01:02:26,000 --> 01:02:31,010
because of spectrum usage and stuff we

1125
01:02:28,520 --> 01:02:32,810
really want the mobile phone to send one

1126
01:02:31,010 --> 01:02:36,410
packet into the infrastructure and have

1127
01:02:32,810 --> 01:02:39,110
it replicate so as you see down there we

1128
01:02:36,410 --> 01:02:40,609
what we could do is we can use the

1129
01:02:39,110 --> 01:02:43,160
techniques that we have in the Lisp re

1130
01:02:40,610 --> 01:02:45,050
draft for replication engineering on how

1131
01:02:43,160 --> 01:02:48,230
to place RT hours and how to replicate

1132
01:02:45,050 --> 01:02:51,350
but by default o are only hashes to one

1133
01:02:48,230 --> 01:02:53,120
RTR so we can't get it to replicate even

1134
01:02:51,350 --> 01:02:55,549
if we wanted to but we don't want to so

1135
01:02:53,120 --> 01:02:57,380
well we we will not request any changes

1136
01:02:55,550 --> 01:03:00,560
to have from there no feature requests

1137
01:02:57,380 --> 01:03:02,540
Albert but an upstream our RTR can

1138
01:03:00,560 --> 01:03:11,000
replicate to downstream RTR so I just

1139
01:03:02,540 --> 01:03:13,190
drew that diagram if the if a source is

1140
01:03:11,000 --> 01:03:14,960
sending it could send to a single our

1141
01:03:13,190 --> 01:03:17,450
Tiaras a mobile phone could do the same

1142
01:03:14,960 --> 01:03:19,970
and since these guys these two iPhones

1143
01:03:17,450 --> 01:03:21,890
RIT MP reporting to a different RTR that

1144
01:03:19,970 --> 01:03:23,930
these phones are configured with

1145
01:03:21,890 --> 01:03:26,600
different RT RS they join up separately

1146
01:03:23,930 --> 01:03:28,520
so what we do is rather than replicate

1147
01:03:26,600 --> 01:03:31,339
for replications happening at the source

1148
01:03:28,520 --> 01:03:33,920
or for replications happening here we

1149
01:03:31,340 --> 01:03:35,810
can do one tube and the two and break it

1150
01:03:33,920 --> 01:03:36,890
up and this is the sort of stuff that we

1151
01:03:35,810 --> 01:03:39,259
talked about in the replication

1152
01:03:36,890 --> 01:03:43,640
engineering giraffes which I think are

1153
01:03:39,260 --> 01:03:45,620
now expired but so we can get that to

1154
01:03:43,640 --> 01:03:47,810
work and if people care about that I

1155
01:03:45,620 --> 01:03:57,259
could show a demo of next night you want

1156
01:03:47,810 --> 01:04:01,759
to do it good so if a receiver reason

1157
01:03:57,260 --> 01:04:08,030
will be home do you have a provision for

1158
01:04:01,760 --> 01:04:09,560
designated question well it turns out at

1159
01:04:08,030 --> 01:04:12,170
least iPhones I don't know about Android

1160
01:04:09,560 --> 01:04:14,630
devices they have multiple connections

1161
01:04:12,170 --> 01:04:16,970
but they only use one at a time and I

1162
01:04:14,630 --> 01:04:21,140
sorry that is one of the things that

1163
01:04:16,970 --> 01:04:23,990
working on changing in iOS or in general

1164
01:04:21,140 --> 01:04:27,440
in general they're moving that happens

1165
01:04:23,990 --> 01:04:30,350
to be true but it won't you can't count

1166
01:04:27,440 --> 01:04:32,120
on that going following yeah so the

1167
01:04:30,350 --> 01:04:34,430
trick there is where will the

1168
01:04:32,120 --> 01:04:36,410
application sends the IGMP reports if

1169
01:04:34,430 --> 01:04:37,129
it's multi-home that they're both active

1170
01:04:36,410 --> 01:04:38,598
it's a unique

1171
01:04:37,130 --> 01:04:40,579
this works just great because you could

1172
01:04:38,599 --> 01:04:42,650
load split on how bound and your and

1173
01:04:40,579 --> 01:04:44,990
who's in cap slating - you can load

1174
01:04:42,650 --> 01:04:46,579
split Unruh sieve so you know I mean

1175
01:04:44,990 --> 01:04:48,729
that's just basically the original Lisp

1176
01:04:46,579 --> 01:04:50,690
problem statement was doing multihoming

1177
01:04:48,730 --> 01:04:52,940
service-provider multihoming

1178
01:04:50,690 --> 01:04:54,950
so unicast not a problem in in the

1179
01:04:52,940 --> 01:04:56,839
multicast it depends on where the

1180
01:04:54,950 --> 01:05:00,799
application is going to send the IGMP

1181
01:04:56,839 --> 01:05:03,380
report and today most implementations

1182
01:05:00,799 --> 01:05:04,819
i've see ITP reports aren't sent on

1183
01:05:03,380 --> 01:05:06,829
multiple interfaces the same thing

1184
01:05:04,819 --> 01:05:08,990
because if it is there's a good chance

1185
01:05:06,829 --> 01:05:11,839
duplicates will come down so you want to

1186
01:05:08,990 --> 01:05:12,529
avoid that so that's kind of TBD still

1187
01:05:11,839 --> 01:05:13,250
researchy

1188
01:05:12,529 --> 01:05:15,849
well we don't know what the

1189
01:05:13,250 --> 01:05:19,519
implementations do should we specify it

1190
01:05:15,849 --> 01:05:20,869
good question there's also the ways

1191
01:05:19,519 --> 01:05:23,180
they're talking about using multiple

1192
01:05:20,869 --> 01:05:26,779
interfaces may make it transparent to

1193
01:05:23,180 --> 01:05:29,808
you because if it's all under the same I

1194
01:05:26,779 --> 01:05:31,339
forget what G node B or something then

1195
01:05:29,809 --> 01:05:34,069
it'll take care of it and it'll look

1196
01:05:31,339 --> 01:05:36,380
like one to you but there is definite

1197
01:05:34,069 --> 01:05:40,940
support for even splitting but

1198
01:05:36,380 --> 01:05:42,470
simultaneously Soph Wi-Fi and 5g so this

1199
01:05:40,940 --> 01:05:45,589
is something they're all looking at but

1200
01:05:42,470 --> 01:05:54,709
it's all ongoing now I would argue that

1201
01:05:45,589 --> 01:05:58,160
if the IGMP was report was being sent to

1202
01:05:54,710 --> 01:06:01,339
an e ID of the RTR then the ITR can see

1203
01:05:58,160 --> 01:06:04,129
there's two our looks for this Eid that

1204
01:06:01,339 --> 01:06:05,839
I can load split across it so that's how

1205
01:06:04,130 --> 01:06:10,809
we could do it with an overlay sort of

1206
01:06:05,839 --> 01:06:13,130
approach right so good question

1207
01:06:10,809 --> 01:06:14,450
commenting what you said the problem

1208
01:06:13,130 --> 01:06:17,240
typically with mobile phones is that

1209
01:06:14,450 --> 01:06:19,549
although multi coming might be available

1210
01:06:17,240 --> 01:06:21,140
at the kernel level they typically hide

1211
01:06:19,549 --> 01:06:22,519
this kind of functionality and make it

1212
01:06:21,140 --> 01:06:25,009
transparent to the application level

1213
01:06:22,519 --> 01:06:35,269
which means that it's very hard to be

1214
01:06:25,009 --> 01:06:38,779
right to take advantage of that could we

1215
01:06:35,269 --> 01:06:42,618
maybe bring back the control very much

1216
01:06:38,779 --> 01:06:47,329
server into the picture - so these are I

1217
01:06:42,619 --> 01:06:48,900
mean that the receiver since it's behind

1218
01:06:47,329 --> 01:06:51,779
not wanna know

1219
01:06:48,900 --> 01:06:55,499
okay no I mean I don't know if that

1220
01:06:51,779 --> 01:06:58,140
helps the problem right I mean you can

1221
01:06:55,499 --> 01:07:00,689
certainly okay so let's entertain that

1222
01:06:58,140 --> 01:07:03,299
thought it's a great idea mark if if we

1223
01:07:00,690 --> 01:07:08,190
put a map register functionality on the

1224
01:07:03,299 --> 01:07:09,390
phone and it registered its CID enjoying

1225
01:07:08,190 --> 01:07:10,589
the group because of what it's doing

1226
01:07:09,390 --> 01:07:12,450
it's not only registering it's the ID

1227
01:07:10,589 --> 01:07:15,119
that has two interfaces it's also

1228
01:07:12,450 --> 01:07:17,399
registering to 24 one one one when it

1229
01:07:15,119 --> 01:07:18,839
does that it can put in our look set in

1230
01:07:17,400 --> 01:07:21,150
that register saying I have two

1231
01:07:18,839 --> 01:07:22,650
interfaces and two the replicator it

1232
01:07:21,150 --> 01:07:24,690
looks like two different places where in

1233
01:07:22,650 --> 01:07:26,490
fact it's the same but you'll have to do

1234
01:07:24,690 --> 01:07:29,369
duplicate detection on the receiving end

1235
01:07:26,490 --> 01:07:31,169
now I've been getting requests from from

1236
01:07:29,369 --> 01:07:33,210
customers contracts or whatever that

1237
01:07:31,170 --> 01:07:35,999
it's nice to send packets both ways and

1238
01:07:33,210 --> 01:07:38,519
if we can use the nonce in the list

1239
01:07:35,999 --> 01:07:40,410
patter to detect duplicates and have a

1240
01:07:38,519 --> 01:07:42,749
small cache then on receipt we could

1241
01:07:40,410 --> 01:07:46,259
drop the packets that's subject for

1242
01:07:42,749 --> 01:07:47,999
another topic another IETF yeah that's

1243
01:07:46,259 --> 01:07:50,099
for you so bring it up on email for you

1244
01:07:47,999 --> 01:07:52,470
wanna do yeah actually that was my

1245
01:07:50,099 --> 01:07:54,809
comment or whatever if you wanna fix

1246
01:07:52,470 --> 01:07:58,019
that for public safety channels this is

1247
01:07:54,809 --> 01:08:00,619
not a bug so keep that option okay

1248
01:07:58,019 --> 01:08:03,868
interesting

1249
01:08:00,619 --> 01:08:06,299
okay multicast to-do lists list my ok on

1250
01:08:03,869 --> 01:08:08,099
time and we have a couple okay this

1251
01:08:06,299 --> 01:08:10,619
mobile node must send okay so this was

1252
01:08:08,099 --> 01:08:12,599
interesting in this demo if we ran it

1253
01:08:10,619 --> 01:08:15,150
long enough the video stream would stop

1254
01:08:12,599 --> 01:08:17,460
it's because the IGMP reports are not

1255
01:08:15,150 --> 01:08:19,799
said being sent periodically from the

1256
01:08:17,460 --> 01:08:21,989
phone and the reason is is because IGMP

1257
01:08:19,799 --> 01:08:23,100
reports are only sent in response to

1258
01:08:21,988 --> 01:08:28,198
IGMP queries

1259
01:08:23,100 --> 01:08:30,750
well the RTR is not sending IGMP queries

1260
01:08:28,198 --> 01:08:34,738
periodically so they the reports can't

1261
01:08:30,750 --> 01:08:36,750
come so I did send I did implement the

1262
01:08:34,738 --> 01:08:38,879
send HMP queries but we're having a

1263
01:08:36,750 --> 01:08:44,189
parsing problem now are you probably saw

1264
01:08:38,880 --> 01:08:46,350
the email so we don't know we think that

1265
01:08:44,189 --> 01:08:48,269
the kernel on iOS could support IGMP

1266
01:08:46,350 --> 01:08:49,500
queries but the queries are coming and

1267
01:08:48,270 --> 01:08:51,330
they have to be associated with the

1268
01:08:49,500 --> 01:08:53,460
loopback interface versus any physical

1269
01:08:51,330 --> 01:08:55,019
interface so that's some work we have to

1270
01:08:53,460 --> 01:08:57,299
do we want to keep the stream going in

1271
01:08:55,020 --> 01:08:59,639
my applications I just send on the

1272
01:08:57,299 --> 01:09:02,200
containers I send IGMP reports

1273
01:08:59,639 --> 01:09:04,390
periodically so I don't need a query or

1274
01:09:02,200 --> 01:09:06,220
happening and I would like to avoid a

1275
01:09:04,390 --> 01:09:09,820
query because that's less messages that

1276
01:09:06,220 --> 01:09:12,610
have to go to the phone so we would have

1277
01:09:09,819 --> 01:09:14,830
to write functionality in oor that once

1278
01:09:12,609 --> 01:09:17,170
an application on a socket joins a group

1279
01:09:14,830 --> 01:09:19,300
that something in the background or

1280
01:09:17,170 --> 01:09:21,970
adjacent a sidecar whatever this is a

1281
01:09:19,300 --> 01:09:23,920
popular new term I guess is would have

1282
01:09:21,970 --> 01:09:25,750
to send period but we'll take that

1283
01:09:23,920 --> 01:09:31,359
offline but that's a to-do list thing

1284
01:09:25,750 --> 01:09:34,149
same with MLD for ipv6 so yeah multicast

1285
01:09:31,359 --> 01:09:37,299
support for ipv6 is not part of this I

1286
01:09:34,149 --> 01:09:39,490
don't know the current status but we can

1287
01:09:37,300 --> 01:09:41,980
certainly do ipv6 CID is in group

1288
01:09:39,490 --> 01:09:43,870
joining over v4 our looks I don't see

1289
01:09:41,979 --> 01:09:45,700
any problem and then maybe do a little

1290
01:09:43,870 --> 01:09:47,710
bit more research on Lisp re to spread

1291
01:09:45,700 --> 01:09:50,170
the load in reduce replication cost

1292
01:09:47,710 --> 01:09:52,149
that's always interesting everything has

1293
01:09:50,170 --> 01:09:54,220
to be had and replicating because native

1294
01:09:52,149 --> 01:09:59,679
multicast is not really that available

1295
01:09:54,220 --> 01:10:01,090
however so the guys at juniper and the M

1296
01:09:59,680 --> 01:10:03,670
bode working group are playing around

1297
01:10:01,090 --> 01:10:06,100
with AMT and AMT is a tunneling

1298
01:10:03,670 --> 01:10:07,990
mechanism only supported for multicast

1299
01:10:06,100 --> 01:10:11,470
and all this infrastructure on the

1300
01:10:07,990 --> 01:10:13,800
bottom here from the yellow down is what

1301
01:10:11,470 --> 01:10:16,990
they're testing so they have a multicast

1302
01:10:13,800 --> 01:10:19,660
native mbone where multicast is native

1303
01:10:16,990 --> 01:10:21,880
using juniper and cisco boxes and the

1304
01:10:19,660 --> 01:10:24,610
AMT relay is kind of a head end that

1305
01:10:21,880 --> 01:10:26,500
replicates packets to a MT gateways

1306
01:10:24,610 --> 01:10:29,799
which are usually on mobile devices or

1307
01:10:26,500 --> 01:10:32,200
or any sort of devices so what we try

1308
01:10:29,800 --> 01:10:35,380
doing is we they said if you can source

1309
01:10:32,200 --> 01:10:37,269
some data from a phone from Lisp over on

1310
01:10:35,380 --> 01:10:38,710
the left-hand side

1311
01:10:37,270 --> 01:10:39,970
can we actually connect these

1312
01:10:38,710 --> 01:10:42,190
infrastructures together and this is

1313
01:10:39,970 --> 01:10:43,600
work in progress that we're starting we

1314
01:10:42,190 --> 01:10:44,889
just started it last week and we're

1315
01:10:43,600 --> 01:10:48,040
gonna play with a little bit this week

1316
01:10:44,890 --> 01:10:51,040
but the idea here is for 13 to send

1317
01:10:48,040 --> 01:10:53,200
multicast 2 to 24 2 to 3 and it gets

1318
01:10:51,040 --> 01:11:01,990
replicated to the two containers as well

1319
01:10:53,200 --> 01:11:04,360
as an e TR that joins to 24 2 to 3 and

1320
01:11:01,990 --> 01:11:07,120
then the MT relay forms it now what's

1321
01:11:04,360 --> 01:11:10,030
really interesting about this is the

1322
01:11:07,120 --> 01:11:12,849
packet source for multicast is in Eid 13

1323
01:11:10,030 --> 01:11:14,710
we did this at the Olympics as well the

1324
01:11:12,850 --> 01:11:17,170
problem is

1325
01:11:14,710 --> 01:11:19,510
Serhant RPF 213 because it's not in the

1326
01:11:17,170 --> 01:11:22,960
core routing tables so and this dot here

1327
01:11:19,510 --> 01:11:25,060
we do list net and what list net does is

1328
01:11:22,960 --> 01:11:28,720
translates the source address from an

1329
01:11:25,060 --> 01:11:34,030
eID to the address on that interface and

1330
01:11:28,720 --> 01:11:37,590
so all these routers here to this which

1331
01:11:34,030 --> 01:11:39,820
will naturally work right and so the MT

1332
01:11:37,590 --> 01:11:41,980
relay will accept the pappas because

1333
01:11:39,820 --> 01:11:44,620
assuming he defaults or has a specific

1334
01:11:41,980 --> 01:11:47,919
address to that thing and then sends it

1335
01:11:44,620 --> 01:11:52,240
to the receivers so what we have working

1336
01:11:47,920 --> 01:11:56,710
right now and this guy hasn't received

1337
01:11:52,240 --> 01:11:57,940
it so the ball is out of my court so

1338
01:11:56,710 --> 01:12:03,720
we're going to talk more about that at M

1339
01:11:57,940 --> 01:12:16,679
Bundy if people questions any more

1340
01:12:03,720 --> 01:12:16,680
comments sorry

1341
01:13:21,140 --> 01:13:28,440
okay so this is a good follow-up to the

1342
01:13:26,490 --> 01:13:30,450
multicast because this is an edge

1343
01:13:28,440 --> 01:13:33,540
network mobility edge network that

1344
01:13:30,450 --> 01:13:39,179
actually leverages the mobile not

1345
01:13:33,540 --> 01:13:43,050
multicast significantly so discuss is

1346
01:13:39,180 --> 01:13:46,050
the least Draft next agon will do a

1347
01:13:43,050 --> 01:13:47,280
quick recap just to baseline what's

1348
01:13:46,050 --> 01:13:50,910
going on

1349
01:13:47,280 --> 01:13:56,910
what is this network updates to the

1350
01:13:50,910 --> 01:14:00,599
draft since last ITF 105 I'm gonna just

1351
01:13:56,910 --> 01:14:03,690
summarize the value of this list edge

1352
01:14:00,600 --> 01:14:09,180
network so it builds on the stability of

1353
01:14:03,690 --> 01:14:12,349
the base and these mechanisms and makes

1354
01:14:09,180 --> 01:14:17,520
use of Lisp in edge in a time where

1355
01:14:12,350 --> 01:14:20,780
mobile edge is very hot and needs these

1356
01:14:17,520 --> 01:14:24,690
capabilities that I'll show how and then

1357
01:14:20,780 --> 01:14:29,849
given the stability of the base protocol

1358
01:14:24,690 --> 01:14:34,320
a will ask that we'll make that special

1359
01:14:29,850 --> 01:14:40,320
educator but fairly generic a working

1360
01:14:34,320 --> 01:14:44,360
group draft all right so this the

1361
01:14:40,320 --> 01:14:47,250
reality is that we have a very low cost

1362
01:14:44,360 --> 01:14:51,030
compute in the physical world and a lot

1363
01:14:47,250 --> 01:14:56,100
of sensors that actually understand what

1364
01:14:51,030 --> 01:15:00,780
they see a fixed sensors cameras

1365
01:14:56,100 --> 01:15:04,740
lighters mobile meaning patrolling that

1366
01:15:00,780 --> 01:15:12,389
enumerate the the public space and this

1367
01:15:04,740 --> 01:15:15,690
is very useful to many parties but it

1368
01:15:12,390 --> 01:15:18,720
needs to be organized there's so many

1369
01:15:15,690 --> 01:15:21,509
things patrolling so many machines cars

1370
01:15:18,720 --> 01:15:24,570
dash cams and negative cams traffic

1371
01:15:21,510 --> 01:15:27,570
light cams out there you need to somehow

1372
01:15:24,570 --> 01:15:33,429
compile this thing so that it can be

1373
01:15:27,570 --> 01:15:38,289
consumed and the approach we

1374
01:15:33,429 --> 01:15:43,510
lie to do that is just just to snap what

1375
01:15:38,289 --> 01:15:44,768
you enumerate to a formal grid of the

1376
01:15:43,510 --> 01:15:47,050
earth

1377
01:15:44,769 --> 01:15:50,050
you can choose multiple grades we chose

1378
01:15:47,050 --> 01:15:54,429
h3 because of its hierarchical nature

1379
01:15:50,050 --> 01:15:59,249
and exergonic all tiling very elegant

1380
01:15:54,429 --> 01:16:02,229
and this is addressable by lispy IDs and

1381
01:15:59,249 --> 01:16:05,139
we're going to show why this is useful

1382
01:16:02,229 --> 01:16:09,099
this specific map you can actually go

1383
01:16:05,139 --> 01:16:11,889
play with it I'll send you the URL is

1384
01:16:09,099 --> 01:16:16,650
live New York City right now including

1385
01:16:11,889 --> 01:16:16,650
images and enumerations okay

1386
01:16:20,219 --> 01:16:28,119
so as you can see the the enumeration

1387
01:16:24,909 --> 01:16:32,018
that are fairly stabilized since two

1388
01:16:28,119 --> 01:16:36,039
IDF's ago because they're mostly based

1389
01:16:32,019 --> 01:16:39,249
on BDD Berkeley Deep Drive consortium

1390
01:16:36,039 --> 01:16:41,259
and the DMV which is what is the

1391
01:16:39,249 --> 01:16:43,179
furniture of the road so that doesn't

1392
01:16:41,260 --> 01:16:48,369
change much there's still some reserved

1393
01:16:43,179 --> 01:16:51,099
for more future features of traffic

1394
01:16:48,369 --> 01:16:54,579
management of the road what's called

1395
01:16:51,099 --> 01:16:59,380
platooning but for now this is fairly

1396
01:16:54,579 --> 01:17:02,679
stable what we do is snap and pops up

1397
01:16:59,380 --> 01:17:07,570
the enumerations to an eID addressable

1398
01:17:02,679 --> 01:17:12,699
grid the basic unit of this protocol is

1399
01:17:07,570 --> 01:17:15,909
64 bit we're in the earth which style of

1400
01:17:12,699 --> 01:17:19,419
the earth which square meter you have to

1401
01:17:15,909 --> 01:17:24,518
say something about and what which is 64

1402
01:17:19,420 --> 01:17:25,900
bit of what enumeration okay and that's

1403
01:17:24,519 --> 01:17:33,130
going to be the basic building block for

1404
01:17:25,900 --> 01:17:33,969
everything the way I got this is did a

1405
01:17:33,130 --> 01:17:36,969
really quick question

1406
01:17:33,969 --> 01:17:38,860
I noticed that resolution 0 is only 2.6

1407
01:17:36,969 --> 01:17:42,119
million miles that won't cover the earth

1408
01:17:38,860 --> 01:17:42,119
what's the deal there

1409
01:17:42,130 --> 01:17:46,750
no there's a bunch of where roots you're

1410
01:17:44,620 --> 01:17:49,180
right so some of them are hexagons and

1411
01:17:46,750 --> 01:17:50,620
they actually had to patch it up with

1412
01:17:49,180 --> 01:17:56,560
some Pentagon's

1413
01:17:50,620 --> 01:17:59,830
but which are just hexagons with five I

1414
01:17:56,560 --> 01:18:04,720
don't specifically but maybe some voting

1415
01:17:59,830 --> 01:18:18,960
application you know in numerate sharks

1416
01:18:04,720 --> 01:18:23,830
for surfers coming soon all right so

1417
01:18:18,960 --> 01:18:27,540
what is the structure of the draft at

1418
01:18:23,830 --> 01:18:31,210
the core is a lisp network able to route

1419
01:18:27,540 --> 01:18:36,580
these specially IDs and especially IDs

1420
01:18:31,210 --> 01:18:39,430
re IDs for the earth styles and Eydie is

1421
01:18:36,580 --> 01:18:43,690
for clients that protect their privacy

1422
01:18:39,430 --> 01:18:47,650
meaning the objects in the network which

1423
01:18:43,690 --> 01:18:51,490
are addressable routable don't need to

1424
01:18:47,650 --> 01:18:53,160
know who is it specifically that is

1425
01:18:51,490 --> 01:18:57,370
interested in that piece of the earth

1426
01:18:53,160 --> 01:18:58,300
meaning disclose their geo privacy they

1427
01:18:57,370 --> 01:19:00,610
just need to know that they're

1428
01:18:58,300 --> 01:19:02,710
authenticated and authorized okay and

1429
01:19:00,610 --> 01:19:08,889
they have their credentials but not

1430
01:19:02,710 --> 01:19:14,350
exactly what is their IP so these key

1431
01:19:08,890 --> 01:19:20,770
IDs are routed for a publish which is a

1432
01:19:14,350 --> 01:19:25,240
unicast okay in which you write to the

1433
01:19:20,770 --> 01:19:30,390
tile to the virtual terrestrial piece of

1434
01:19:25,240 --> 01:19:35,590
land in the in the edge and you write it

1435
01:19:30,390 --> 01:19:37,990
64-bit where 64-bit what doesn't mean is

1436
01:19:35,590 --> 01:19:41,470
gonna accept it as reality may want few

1437
01:19:37,990 --> 01:19:43,360
passes in may correct your what you

1438
01:19:41,470 --> 01:19:47,580
thought is the is the location but this

1439
01:19:43,360 --> 01:19:50,920
is how you publish you subscribe to our

1440
01:19:47,580 --> 01:19:52,960
multicast channels just like Dino

1441
01:19:50,920 --> 01:19:55,839
presented in the other presentation

1442
01:19:52,960 --> 01:20:00,489
these are ard Eskimo G

1443
01:19:55,839 --> 01:20:02,079
and you receive a update on what's going

1444
01:20:00,489 --> 01:20:05,978
on and it's not a bug

1445
01:20:02,079 --> 01:20:08,799
if you multi-home and you receive state

1446
01:20:05,979 --> 01:20:11,019
of they're your next twenty seconds

1447
01:20:08,800 --> 01:20:14,039
twice it's okay because also of

1448
01:20:11,019 --> 01:20:17,979
contained in one packet in each pack

1449
01:20:14,039 --> 01:20:21,039
okay so here you see a car seeing stuff

1450
01:20:17,979 --> 01:20:23,079
understanding what it is how far it is

1451
01:20:21,039 --> 01:20:25,989
from where you are therefore where it is

1452
01:20:23,079 --> 01:20:27,639
and what it is can publish and can

1453
01:20:25,989 --> 01:20:29,678
subscribe to what's going on being up

1454
01:20:27,639 --> 01:20:32,079
beyond the corner is there is baby

1455
01:20:29,679 --> 01:20:41,469
stroller around the corner that's

1456
01:20:32,079 --> 01:20:44,530
somebody else oh okay since ITF 105 we

1457
01:20:41,469 --> 01:20:46,499
pretty much double clicked on the

1458
01:20:44,530 --> 01:20:51,579
technical details of the draft

1459
01:20:46,499 --> 01:21:04,409
following very strong demand on the

1460
01:20:51,579 --> 01:21:09,719
chair I hope we are quickly what we did

1461
01:21:04,409 --> 01:21:14,499
on the right that side which is your is

1462
01:21:09,719 --> 01:21:20,229
a triple a mechanism to get on to the

1463
01:21:14,499 --> 01:21:24,300
network so what we do he you is make use

1464
01:21:20,229 --> 01:21:27,839
of diameter which is very common in

1465
01:21:24,300 --> 01:21:31,119
mobile network typically typically in

1466
01:21:27,839 --> 01:21:33,339
non overlay you will do something to the

1467
01:21:31,119 --> 01:21:36,459
gateway the P gateway and it will

1468
01:21:33,339 --> 01:21:38,589
generate a diameter propagation since

1469
01:21:36,459 --> 01:21:41,349
this is an overlay you have an IP

1470
01:21:38,589 --> 01:21:44,079
address will let you work directly with

1471
01:21:41,349 --> 01:21:48,969
the diameter for the mobility network so

1472
01:21:44,079 --> 01:21:51,119
it's a not regular use but very very

1473
01:21:48,969 --> 01:21:55,510
practical and we make a note of that

1474
01:21:51,119 --> 01:21:57,308
so you DNS for the triple a server of

1475
01:21:55,510 --> 01:22:01,030
the mobility network the next ago

1476
01:21:57,309 --> 01:22:06,929
network you get the diameter you send

1477
01:22:01,030 --> 01:22:08,139
your credentials are your ATP's and

1478
01:22:06,929 --> 01:22:11,679
there

1479
01:22:08,139 --> 01:22:14,380
the temporary ID allocated for you based

1480
01:22:11,679 --> 01:22:17,289
on your credentials before you get it

1481
01:22:14,380 --> 01:22:20,309
back along with the arlok that you're

1482
01:22:17,289 --> 01:22:25,898
going to use for the RTR your edge

1483
01:22:20,309 --> 01:22:29,579
router its first cleared with that edge

1484
01:22:25,899 --> 01:22:32,469
RTR meaning is gonna expect you okay or

1485
01:22:29,579 --> 01:22:36,249
multiple if you want a multi-home okay

1486
01:22:32,469 --> 01:22:39,340
and then you get a reply back which is

1487
01:22:36,249 --> 01:22:42,969
this is your ID for using the mobility

1488
01:22:39,340 --> 01:22:45,099
network using this hour lock of your RTR

1489
01:22:42,969 --> 01:22:51,189
okay this way we can load balance a

1490
01:22:45,099 --> 01:22:54,760
metro and allow for high availability in

1491
01:22:51,189 --> 01:22:57,969
a very you know resilient structure this

1492
01:22:54,760 --> 01:23:01,360
is good for a while so you have to renew

1493
01:22:57,969 --> 01:23:05,340
that or the network could be shut off

1494
01:23:01,360 --> 01:23:09,130
for you okay well that's this picture

1495
01:23:05,340 --> 01:23:12,309
these pictures are the unicast and

1496
01:23:09,130 --> 01:23:13,360
multicast the publish and what you get

1497
01:23:12,309 --> 01:23:17,679
when you subscribed

1498
01:23:13,360 --> 01:23:23,110
it's basically source test so e ID

1499
01:23:17,679 --> 01:23:27,820
source CID desk or Eskimo G in multicast

1500
01:23:23,110 --> 01:23:30,808
and then some flags and then the tuples

1501
01:23:27,820 --> 01:23:33,489
where what where what key value key body

1502
01:23:30,809 --> 01:23:37,869
there is one flag which is proven to be

1503
01:23:33,489 --> 01:23:44,138
extremely useful which is to zip the kbk

1504
01:23:37,869 --> 01:23:46,419
V because the IDS of the tiles are

1505
01:23:44,139 --> 01:23:52,570
usually in the same area so they zip

1506
01:23:46,419 --> 01:23:55,780
very nicely the values in case of an

1507
01:23:52,570 --> 01:23:59,199
area somebody breached a red light the

1508
01:23:55,780 --> 01:24:03,419
danger covers a lot of area okay but

1509
01:23:59,199 --> 01:24:10,089
it's the same status staying man a

1510
01:24:03,419 --> 01:24:12,969
enumeration and also in these situations

1511
01:24:10,090 --> 01:24:14,889
many times were some neural networks

1512
01:24:12,969 --> 01:24:17,349
will just be looking for one thing just

1513
01:24:14,889 --> 01:24:20,499
portholes okay so whatever the report is

1514
01:24:17,349 --> 01:24:21,850
going to be consistent so the object IDs

1515
01:24:20,499 --> 01:24:24,610
HIDs are very kind

1516
01:24:21,850 --> 01:24:28,840
distant and the state is also fairly

1517
01:24:24,610 --> 01:24:40,299
consistent our typical zipping is 7080

1518
01:24:28,840 --> 01:24:42,510
percent which means just alright what

1519
01:24:40,300 --> 01:24:47,950
another thing that happened since last

1520
01:24:42,510 --> 01:24:50,950
idea is we have a package on github I

1521
01:24:47,950 --> 01:24:54,340
think you still need our permission so

1522
01:24:50,950 --> 01:24:56,019
we are giving it so if you want you can

1523
01:24:54,340 --> 01:25:00,220
get it

1524
01:24:56,020 --> 01:25:02,680
it still doesn't use or because the list

1525
01:25:00,220 --> 01:25:07,450
but the client if you want to build a

1526
01:25:02,680 --> 01:25:12,370
client it's still fairly hard the way of

1527
01:25:07,450 --> 01:25:15,250
using Lisp and since all the addressing

1528
01:25:12,370 --> 01:25:18,670
here is algorithmic so which makes is

1529
01:25:15,250 --> 01:25:23,110
very scalable based on where you are you

1530
01:25:18,670 --> 01:25:25,630
know the Eid you don't need to so at

1531
01:25:23,110 --> 01:25:26,830
this point this is a you know pretty

1532
01:25:25,630 --> 01:25:29,770
simple

1533
01:25:26,830 --> 01:25:31,510
but in addition the Triple A packets the

1534
01:25:29,770 --> 01:25:34,470
diameter packets are all encoded in

1535
01:25:31,510 --> 01:25:37,270
there you can get permissions that's for

1536
01:25:34,470 --> 01:25:40,300
the the part of this we use in the

1537
01:25:37,270 --> 01:25:43,810
client which is control plane free as

1538
01:25:40,300 --> 01:25:47,370
Dino described until the RT R is there

1539
01:25:43,810 --> 01:25:51,580
and you go you also get the full edge as

1540
01:25:47,370 --> 01:25:53,470
all-in-one just to debug your client if

1541
01:25:51,580 --> 01:25:55,660
you want to start using your gonna get

1542
01:25:53,470 --> 01:25:57,610
if you want to do a navigation app that

1543
01:25:55,660 --> 01:25:59,380
knows what's behind the corner or knows

1544
01:25:57,610 --> 01:26:02,500
more things than the typical navigation

1545
01:25:59,380 --> 01:26:05,380
app does or you want to play with it and

1546
01:26:02,500 --> 01:26:07,260
see potholes see the traffic signs which

1547
01:26:05,380 --> 01:26:11,070
you can't see because the tree hides

1548
01:26:07,260 --> 01:26:13,510
things like that you can use that kit

1549
01:26:11,070 --> 01:26:15,549
you can also build your own just based

1550
01:26:13,510 --> 01:26:24,930
on the RC there's no additional

1551
01:26:15,550 --> 01:26:28,420
information needed ok so let me just

1552
01:26:24,930 --> 01:26:32,770
capture the value of this special list

1553
01:26:28,420 --> 01:26:35,060
edge network it has a broad value is

1554
01:26:32,770 --> 01:26:38,980
worth a stake

1555
01:26:35,060 --> 01:26:41,270
it on I think I hope the value to

1556
01:26:38,980 --> 01:26:43,879
immunise and Department of

1557
01:26:41,270 --> 01:26:50,900
Transportation s-- government highway

1558
01:26:43,880 --> 01:26:54,170
authorities is a it's a cheaper fresher

1559
01:26:50,900 --> 01:26:59,179
way to survey what's going on usually

1560
01:26:54,170 --> 01:27:02,570
very costly done every few years not up

1561
01:26:59,180 --> 01:27:08,300
to date all the time and it's budgeted

1562
01:27:02,570 --> 01:27:10,969
its has economic value per meter but

1563
01:27:08,300 --> 01:27:14,810
this is a way to just let the network

1564
01:27:10,970 --> 01:27:20,000
gather the information to edge objects

1565
01:27:14,810 --> 01:27:22,130
that the objects compiled the multiple

1566
01:27:20,000 --> 01:27:26,380
sources the multiple passes the multiple

1567
01:27:22,130 --> 01:27:31,790
directions and give you like a survey of

1568
01:27:26,380 --> 01:27:35,720
signs on the street what's deemed went

1569
01:27:31,790 --> 01:27:38,750
away you need to repaint a traffic signs

1570
01:27:35,720 --> 01:27:42,290
the side of the road you know these

1571
01:27:38,750 --> 01:27:46,150
teenager rooms where they have the stop

1572
01:27:42,290 --> 01:27:46,150
signs they're taking from somewhere

1573
01:27:47,980 --> 01:27:51,530
[Laughter]

1574
01:27:51,640 --> 01:27:59,270
light side rails potholes stop vehicle

1575
01:27:56,240 --> 01:28:02,090
which is a big danger many times any

1576
01:27:59,270 --> 01:28:03,980
stop vehicle will result in in depth

1577
01:28:02,090 --> 01:28:06,680
because people just begin to wonder

1578
01:28:03,980 --> 01:28:08,450
around and it's very expensive to keep

1579
01:28:06,680 --> 01:28:10,600
patrols just looking for those people

1580
01:28:08,450 --> 01:28:15,639
stopping because of something and

1581
01:28:10,600 --> 01:28:17,990
risking their life construction zones

1582
01:28:15,640 --> 01:28:20,480
Muniz love that because they love to

1583
01:28:17,990 --> 01:28:24,950
give tickets to people who break their

1584
01:28:20,480 --> 01:28:28,190
permits in time and span but this is

1585
01:28:24,950 --> 01:28:32,450
really good for commuters as well an

1586
01:28:28,190 --> 01:28:35,599
alert for for drivers and OEM companies

1587
01:28:32,450 --> 01:28:37,400
OEMs would like to make money as they

1588
01:28:35,600 --> 01:28:39,560
drive they're looking for that source so

1589
01:28:37,400 --> 01:28:41,740
it's a the recent economy of data trade

1590
01:28:39,560 --> 01:28:46,130
so we can facilitate with an Interpol

1591
01:28:41,740 --> 01:28:48,110
protocol parking assist this is one of

1592
01:28:46,130 --> 01:28:48,980
the major challenges of the auto

1593
01:28:48,110 --> 01:28:51,259
industry there

1594
01:28:48,980 --> 01:28:55,570
no parking people are hesitant to buy

1595
01:28:51,260 --> 01:28:58,970
cars blockages slowdowns in the highway

1596
01:28:55,570 --> 01:29:02,450
you'll see dashcam footage last winter

1597
01:28:58,970 --> 01:29:05,870
of these pile ups which are completely

1598
01:29:02,450 --> 01:29:08,630
needless a heartbreak situation in short

1599
01:29:05,870 --> 01:29:12,320
turn let extends them

1600
01:29:08,630 --> 01:29:15,500
the sensor of a car beyond its line of

1601
01:29:12,320 --> 01:29:18,880
sight using the network using the list

1602
01:29:15,500 --> 01:29:25,820
purge in Pleiades

1603
01:29:18,880 --> 01:29:27,620
enterprises like ups and are really

1604
01:29:25,820 --> 01:29:29,269
interested in curbside conditions where

1605
01:29:27,620 --> 01:29:34,580
can they stop working out so what our

1606
01:29:29,270 --> 01:29:36,920
truck routes pedestrian vehicle density

1607
01:29:34,580 --> 01:29:39,559
how many people are in the street

1608
01:29:36,920 --> 01:29:43,430
Google Maps wants that Apple Maps wants

1609
01:29:39,560 --> 01:29:47,090
that and we can offer a standard

1610
01:29:43,430 --> 01:29:51,500
interface to subscribe to that the 5g

1611
01:29:47,090 --> 01:29:54,800
edge is very appealing and make it very

1612
01:29:51,500 --> 01:29:58,610
relevant as you can see you have an

1613
01:29:54,800 --> 01:30:03,590
aggregation at the edge that leverages

1614
01:29:58,610 --> 01:30:06,049
the new 5g technology and then a after

1615
01:30:03,590 --> 01:30:09,200
processing the consumption makes it

1616
01:30:06,050 --> 01:30:14,840
available over any internet or back to

1617
01:30:09,200 --> 01:30:20,500
the edge the capabilities in 5g the new

1618
01:30:14,840 --> 01:30:25,220
ones are a massive bandwidth which means

1619
01:30:20,500 --> 01:30:29,980
you can put all a I in the edge you can

1620
01:30:25,220 --> 01:30:33,670
really low cost the dash cams and other

1621
01:30:29,980 --> 01:30:37,269
sources of information even Street cams

1622
01:30:33,670 --> 01:30:40,640
because it can but then you have to put

1623
01:30:37,270 --> 01:30:42,350
that ad object at the edge if you wanna

1624
01:30:40,640 --> 01:30:45,710
put it in Amazon it's just not gonna

1625
01:30:42,350 --> 01:30:48,200
work and then auto reliable or latency

1626
01:30:45,710 --> 01:30:51,590
which is the public channels we don't

1627
01:30:48,200 --> 01:30:53,179
miss any packets even if we have

1628
01:30:51,590 --> 01:30:55,130
multihoming and we're gonna receive it

1629
01:30:53,180 --> 01:30:56,960
twice or three times we still don't

1630
01:30:55,130 --> 01:31:00,440
wanna miss any packet because if there

1631
01:30:56,960 --> 01:31:02,010
is a red light bridge and within I want

1632
01:31:00,440 --> 01:31:05,489
to get that packet within

1633
01:31:02,010 --> 01:31:07,860
one hundredth of a second so I can can

1634
01:31:05,489 --> 01:31:11,339
hear a sound I can lift my eyes because

1635
01:31:07,860 --> 01:31:17,789
otherwise it's dangerous and that's a

1636
01:31:11,340 --> 01:31:20,010
demo we need in AT&T the value of the

1637
01:31:17,789 --> 01:31:23,820
Lisp as an edge network as you can see

1638
01:31:20,010 --> 01:31:29,039
is that really what happens is that the

1639
01:31:23,820 --> 01:31:32,579
privacy the security the latency control

1640
01:31:29,039 --> 01:31:38,219
the subscription the sharding of the

1641
01:31:32,579 --> 01:31:40,469
processing is all throughly sprouting so

1642
01:31:38,219 --> 01:31:42,630
having a stable standard to do that

1643
01:31:40,469 --> 01:31:45,690
having off-the-shelf routers and

1644
01:31:42,630 --> 01:31:47,369
multiple stacks to control that and best

1645
01:31:45,690 --> 01:31:54,119
practices to control that is really

1646
01:31:47,369 --> 01:31:58,348
helpful you can see in a note that was

1647
01:31:54,119 --> 01:32:03,570
sent to the list by AT&T without this

1648
01:31:58,349 --> 01:32:06,090
layer three option really there AT&T was

1649
01:32:03,570 --> 01:32:10,500
facing two options to extremes

1650
01:32:06,090 --> 01:32:13,829
build the dedicated infrastructure just

1651
01:32:10,500 --> 01:32:17,880
for that or have proprietary backends

1652
01:32:13,829 --> 01:32:20,400
they need to integrate forever for every

1653
01:32:17,880 --> 01:32:22,800
feature for every vendor for every type

1654
01:32:20,400 --> 01:32:25,250
of client and we offer something

1655
01:32:22,800 --> 01:32:25,250
different

1656
01:32:26,360 --> 01:32:37,190
one last value point that I scooped for

1657
01:32:30,389 --> 01:32:41,280
Marco in DMM is that we need to realize

1658
01:32:37,190 --> 01:32:43,888
that between the edge the mobile edge

1659
01:32:41,280 --> 01:32:46,920
and aggregation the edge routers and the

1660
01:32:43,889 --> 01:32:52,590
mobile clients there's a whole 3gpp

1661
01:32:46,920 --> 01:32:55,139
network and for anything to leverage 5g

1662
01:32:52,590 --> 01:32:55,889
there's a bunch of provisioning that has

1663
01:32:55,139 --> 01:32:59,340
to happen

1664
01:32:55,889 --> 01:33:01,829
there's slicing there's a quality of

1665
01:32:59,340 --> 01:33:06,199
service there's there is provisioning

1666
01:33:01,829 --> 01:33:09,690
that happened and if we want that a

1667
01:33:06,199 --> 01:33:12,178
provisioning to be efficient we allow

1668
01:33:09,690 --> 01:33:15,690
that we facilitate better because it's

1669
01:33:12,179 --> 01:33:19,860
all done based on Eid parsing

1670
01:33:15,690 --> 01:33:21,900
and all done from edge routers to the to

1671
01:33:19,860 --> 01:33:24,389
the EPC we don't have to mess with

1672
01:33:21,900 --> 01:33:27,660
application-specific backends the fact

1673
01:33:24,390 --> 01:33:29,850
that we put it on list should make it a

1674
01:33:27,660 --> 01:33:32,790
lot simpler and there's a lot that you

1675
01:33:29,850 --> 01:33:35,640
can do for example in baby if I'm Russia

1676
01:33:32,790 --> 01:33:37,469
or me town I don't want to receive that

1677
01:33:35,640 --> 01:33:39,540
corner all the time - it's really

1678
01:33:37,469 --> 01:33:41,640
important so I can slice it I can cap it

1679
01:33:39,540 --> 01:33:47,480
okay I can do provisioning which are

1680
01:33:41,640 --> 01:33:52,620
important for mobile operators that's it

1681
01:33:47,480 --> 01:33:55,139
the ask is obviously will need an email

1682
01:33:52,620 --> 01:33:56,640
to the list from you asking for adoption

1683
01:33:55,140 --> 01:34:01,230
are there any comments questions

1684
01:33:56,640 --> 01:34:03,449
concerns three yes we're gonna release

1685
01:34:01,230 --> 01:34:05,339
Cisco one question can you talk a little

1686
01:34:03,449 --> 01:34:08,070
bit more on the triple a talked about

1687
01:34:05,340 --> 01:34:09,989
the damage interface can you just talk

1688
01:34:08,070 --> 01:34:14,719
about the triple interface the diameter

1689
01:34:09,989 --> 01:34:14,718
of messages can you tell me exactly like

1690
01:34:15,380 --> 01:34:22,290
so you have an IP you have IP

1691
01:34:19,500 --> 01:34:25,380
connectivity and you want to use

1692
01:34:22,290 --> 01:34:29,400
specific mobility network okay what you

1693
01:34:25,380 --> 01:34:34,770
do is you ask for authorization from the

1694
01:34:29,400 --> 01:34:37,349
you first ask DNS what is my a triple a

1695
01:34:34,770 --> 01:34:39,239
server for this mobility in the next

1696
01:34:37,350 --> 01:34:42,750
second Mobility network you will get an

1697
01:34:39,239 --> 01:34:46,259
IP address okay and then you ask you get

1698
01:34:42,750 --> 01:34:49,980
you that is a diameter server in which

1699
01:34:46,260 --> 01:34:55,620
you give it your credentials user

1700
01:34:49,980 --> 01:34:59,968
password vendor blah blah and after some

1701
01:34:55,620 --> 01:35:03,630
back end you will get back an e ID which

1702
01:34:59,969 --> 01:35:06,239
is your overlay address on top of the

1703
01:35:03,630 --> 01:35:08,910
carrier IP address okay it's a v6

1704
01:35:06,239 --> 01:35:12,780
overlay address that you're gonna use in

1705
01:35:08,910 --> 01:35:14,910
an hour lock which is a tunnel you're

1706
01:35:12,780 --> 01:35:16,259
going to use for the edge rocker before

1707
01:35:14,910 --> 01:35:18,960
that there's a sim based authentication

1708
01:35:16,260 --> 01:35:21,540
because I see the use the sim and the

1709
01:35:18,960 --> 01:35:23,400
password so is there a authentication to

1710
01:35:21,540 --> 01:35:26,670
the diameter server from the endpoint no

1711
01:35:23,400 --> 01:35:29,280
sorry that's already done by joining the

1712
01:35:26,670 --> 01:35:31,770
mobile network this is not

1713
01:35:29,280 --> 01:35:33,179
that he's authenticating is not the user

1714
01:35:31,770 --> 01:35:35,160
as the user of the network

1715
01:35:33,180 --> 01:35:38,840
he's authenticating the user as the user

1716
01:35:35,160 --> 01:35:42,030
of the overlay service okay okay okay

1717
01:35:38,840 --> 01:35:43,350
and it is admittedly an unusual use of

1718
01:35:42,030 --> 01:35:45,059
the triple-eight protocols because

1719
01:35:43,350 --> 01:35:47,700
they're normally used inside the network

1720
01:35:45,060 --> 01:35:51,900
as a part was not clear to me yes this

1721
01:35:47,700 --> 01:35:53,370
is an atypical that seems to work no no

1722
01:35:51,900 --> 01:36:00,360
I think I think good stuff I think I

1723
01:35:53,370 --> 01:36:03,210
like this okay I have two questions

1724
01:36:00,360 --> 01:36:10,610
um did you want to run Lisp within a

1725
01:36:03,210 --> 01:36:14,460
slice or across slices or so typically

1726
01:36:10,610 --> 01:36:16,740
the carrier will provision slices of

1727
01:36:14,460 --> 01:36:20,660
quality of services for as part of the

1728
01:36:16,740 --> 01:36:24,570
seller our IP network so the Lisp

1729
01:36:20,660 --> 01:36:27,300
individual and unique us and everything

1730
01:36:24,570 --> 01:36:30,030
is unicast even the ID for each slice

1731
01:36:27,300 --> 01:36:31,860
because in a separate mapping system or

1732
01:36:30,030 --> 01:36:34,050
would it be a crop that's what I'm

1733
01:36:31,860 --> 01:36:37,860
wondering down the slicing is purely for

1734
01:36:34,050 --> 01:36:39,540
the EBC okay and could you go back to

1735
01:36:37,860 --> 01:36:43,530
slides where you have a nice diagram of

1736
01:36:39,540 --> 01:36:46,440
the h3 tiles I don't know if you thought

1737
01:36:43,530 --> 01:36:50,219
about that yeah that'll work right there

1738
01:36:46,440 --> 01:36:54,299
that so you have these solid lines

1739
01:36:50,220 --> 01:36:59,280
around 7 yeah right perfect thank you

1740
01:36:54,300 --> 01:37:03,030
you have a hexagon Accra across 2 4 6 7

1741
01:36:59,280 --> 01:37:05,429
hexagons and so what I'm thinking is

1742
01:37:03,030 --> 01:37:07,019
have you put much thought about how to

1743
01:37:05,430 --> 01:37:10,170
join multicast groups when they're per

1744
01:37:07,020 --> 01:37:12,000
each h3 tile for instance that on the

1745
01:37:10,170 --> 01:37:13,610
bottom right hand corner if you look at

1746
01:37:12,000 --> 01:37:16,050
a node that's right in the very center

1747
01:37:13,610 --> 01:37:18,450
it would actually join a group that

1748
01:37:16,050 --> 01:37:21,330
would be for that tile that's it right

1749
01:37:18,450 --> 01:37:23,250
in the center should that guy join that

1750
01:37:21,330 --> 01:37:26,100
group as well as all the six groups

1751
01:37:23,250 --> 01:37:28,440
around it or should a join to the one

1752
01:37:26,100 --> 01:37:29,940
group which is the aggregate of all of

1753
01:37:28,440 --> 01:37:32,280
them and what I've noticed with the

1754
01:37:29,940 --> 01:37:35,669
resolutions they don't map exactly and

1755
01:37:32,280 --> 01:37:38,040
fit exactly so do you have to join seven

1756
01:37:35,670 --> 01:37:40,200
groups the one you're in and all the six

1757
01:37:38,040 --> 01:37:41,860
neighbors or there have you thought

1758
01:37:40,200 --> 01:37:47,860
about any of those how we make

1759
01:37:41,860 --> 01:37:50,349
work yeah so here's the thing so what

1760
01:37:47,860 --> 01:37:52,030
you use is a specific resolution for

1761
01:37:50,350 --> 01:37:56,520
multicast which is resolution nine which

1762
01:37:52,030 --> 01:38:01,269
is like a few blocks okay let's say this

1763
01:37:56,520 --> 01:38:04,900
ruffle City and this holds all the tiles

1764
01:38:01,270 --> 01:38:08,380
that's AI D addressable and the the

1765
01:38:04,900 --> 01:38:09,519
tiles are not when you hierarchy there

1766
01:38:08,380 --> 01:38:12,190
is leftovers

1767
01:38:09,520 --> 01:38:18,310
that's correct and this is the price you

1768
01:38:12,190 --> 01:38:21,820
pay for having a polygon which is both

1769
01:38:18,310 --> 01:38:24,520
approximation of a circle but ties in

1770
01:38:21,820 --> 01:38:27,119
hierarchy so that's the price you pay so

1771
01:38:24,520 --> 01:38:31,060
but in our nine yes there will be some

1772
01:38:27,119 --> 01:38:33,630
overlaps but you what you will do is the

1773
01:38:31,060 --> 01:38:37,659
client because you know where you are

1774
01:38:33,630 --> 01:38:40,659
you will register for the on lines which

1775
01:38:37,659 --> 01:38:42,190
you are in your vector okay you don't

1776
01:38:40,659 --> 01:38:43,659
have to reduce in the direction you're

1777
01:38:42,190 --> 01:38:45,190
clean and where are you going and this

1778
01:38:43,659 --> 01:38:48,909
is something that you know is a client

1779
01:38:45,190 --> 01:38:50,830
and here the network and serves you but

1780
01:38:48,909 --> 01:38:52,929
you have awareness because you realize

1781
01:38:50,830 --> 01:38:54,670
we might have joined latency as your I

1782
01:38:52,929 --> 01:38:57,219
remember when I worked at Cisco we did

1783
01:38:54,670 --> 01:38:59,560
this on battlefield grids and leaving

1784
01:38:57,219 --> 01:39:01,510
one square of a grid going the other you

1785
01:38:59,560 --> 01:39:04,030
have to leave to stop receiving data

1786
01:39:01,510 --> 01:39:06,159
enjoying the next one and this has the

1787
01:39:04,030 --> 01:39:08,440
same problem it's a joint latency data

1788
01:39:06,159 --> 01:39:10,540
and state trade-off core and we you know

1789
01:39:08,440 --> 01:39:12,969
see it showing early if you know where

1790
01:39:10,540 --> 01:39:16,269
you're going you joined before exactly

1791
01:39:12,969 --> 01:39:17,650
but if you join to a larger grid then

1792
01:39:16,270 --> 01:39:21,580
you don't have to delete join me join

1793
01:39:17,650 --> 01:39:24,099
you know that's packets packets will go

1794
01:39:21,580 --> 01:39:28,510
to more places right very similar to

1795
01:39:24,100 --> 01:39:30,610
Hannover I mean you may join a few just

1796
01:39:28,510 --> 01:39:33,070
to make sure that you covered and that's

1797
01:39:30,610 --> 01:39:35,739
okay for the same reason why it's okay

1798
01:39:33,070 --> 01:39:37,780
for you to receive multi-home it's all

1799
01:39:35,739 --> 01:39:40,718
contained so you'll just get more

1800
01:39:37,780 --> 01:39:43,440
doesn't mean that they are the

1801
01:39:40,719 --> 01:39:46,540
application will alert the driver

1802
01:39:43,440 --> 01:39:49,690
graphically or no or soundly on

1803
01:39:46,540 --> 01:39:54,489
everything may use judgment but it will

1804
01:39:49,690 --> 01:39:56,860
receive a look ahead yeah

1805
01:39:54,489 --> 01:39:58,659
I understand and it depends how soon you

1806
01:39:56,860 --> 01:40:01,329
start joining because there is joy

1807
01:39:58,659 --> 01:40:04,030
latency there since the joint message is

1808
01:40:01,329 --> 01:40:05,499
the red map registers are UDP messages

1809
01:40:04,030 --> 01:40:08,739
that can be dropped yes

1810
01:40:05,499 --> 01:40:10,659
and will you get will you get the

1811
01:40:08,739 --> 01:40:15,039
information soon enough do you have to

1812
01:40:10,659 --> 01:40:18,400
plan multiple tiles ahead of you say

1813
01:40:15,039 --> 01:40:19,449
says you don't the code doesn't know

1814
01:40:18,400 --> 01:40:20,920
that the driver is gonna make a

1815
01:40:19,449 --> 01:40:24,190
right-hand turn right

1816
01:40:20,920 --> 01:40:27,460
no but the client does know it's victor

1817
01:40:24,190 --> 01:40:30,039
the client that joins does know the

1818
01:40:27,460 --> 01:40:32,199
driving victor okay the other thing is

1819
01:40:30,039 --> 01:40:34,329
there's a distinction between useful to

1820
01:40:32,199 --> 01:40:36,009
know really promptly and safety-critical

1821
01:40:34,329 --> 01:40:38,079
and as far as I know you're not trying

1822
01:40:36,010 --> 01:40:41,199
to handle safety critical data at all

1823
01:40:38,079 --> 01:40:42,249
yes so one second ahead of you is

1824
01:40:41,199 --> 01:40:44,739
irrelevant

1825
01:40:42,249 --> 01:40:46,659
that has to be regardless of any network

1826
01:40:44,739 --> 01:40:55,329
the car has to do with it on its own

1827
01:40:46,659 --> 01:40:59,348
with this is 20 30 seconds heads-up not

1828
01:40:55,329 --> 01:41:05,349
for our nine no not oil and and not in

1829
01:40:59,349 --> 01:41:18,789
current mobility technologies supersonic

1830
01:41:05,349 --> 01:41:24,969
fighters really fast is a different

1831
01:41:18,789 --> 01:41:29,619
scale no 200 km/h that's fine okay any

1832
01:41:24,969 --> 01:41:33,010
other questions okay thank you I need

1833
01:41:29,619 --> 01:41:34,570
the connector back any other business

1834
01:41:33,010 --> 01:41:37,170
people want to raise for the list

1835
01:41:34,570 --> 01:41:37,170
working group

1836
01:41:40,380 --> 01:41:45,360
hearing none please get the blue sheets

1837
01:41:42,820 --> 01:41:45,360
to Padma

1838
01:42:02,200 --> 01:43:03,349
just refresh changing mideco we messed

1839
01:42:32,420 --> 01:43:05,500
up the connection we got it Thank You

1840
01:43:03,350 --> 01:43:05,500
Louie

1841
01:43:21,920 --> 01:43:24,939
[Music]

1842
01:44:06,130 --> 01:44:09,189
[Music]

