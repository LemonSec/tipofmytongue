1
00:00:05,689 --> 00:00:08,990
welcome to Singapore

2
00:00:17,990 --> 00:00:29,820
yeah um just go back one there we go um

3
00:00:27,660 --> 00:00:32,070
anyway you probably have all seen the

4
00:00:29,820 --> 00:00:34,280
note well before but I'll put it up here

5
00:00:32,070 --> 00:00:50,430
for just a second since it is Monday

6
00:00:34,280 --> 00:00:53,250
right yeah yeah okay blue sheets are

7
00:00:50,430 --> 00:00:55,920
going around no they're not blue sheets

8
00:00:53,250 --> 00:00:58,530
will be going around momentarily I

9
00:00:55,920 --> 00:01:06,479
believe we have a Elliott taking notes

10
00:00:58,530 --> 00:01:08,280
and and somebody do an Jabbar the I

11
00:01:06,479 --> 00:01:13,350
guess the next thing would be working

12
00:01:08,280 --> 00:01:15,920
group documents so who do we have up

13
00:01:13,350 --> 00:01:15,919
first

14
00:01:21,020 --> 00:01:26,100
yeah maybe Yuri do you want to just get

15
00:01:23,969 --> 00:01:27,839
up and say a few things about aka or are

16
00:01:26,100 --> 00:01:30,288
you ready for that that might be the

17
00:01:27,840 --> 00:01:30,289
quickest

18
00:01:57,240 --> 00:02:03,070
so I don't actually have any slide so I

19
00:01:59,530 --> 00:02:06,640
can put about the 54:48 this and then

20
00:02:03,070 --> 00:02:09,579
the PFS document both of its are working

21
00:02:06,640 --> 00:02:12,760
route documents the the base is about to

22
00:02:09,580 --> 00:02:14,860
be sent I see I believe and there's been

23
00:02:12,760 --> 00:02:17,590
a small update of that and that is

24
00:02:14,860 --> 00:02:20,010
through Joe's review identified that

25
00:02:17,590 --> 00:02:25,060
there's a few references that have

26
00:02:20,010 --> 00:02:26,950
received in new RFC or those revisions

27
00:02:25,060 --> 00:02:29,709
have been obsoleted or the RCS have been

28
00:02:26,950 --> 00:02:32,548
obsoleted and so I just replaced them

29
00:02:29,709 --> 00:02:37,810
with new ones so this was for the NAI

30
00:02:32,549 --> 00:02:41,319
RFC for Ike v2 RFC I think the IANA

31
00:02:37,810 --> 00:02:45,310
considerations are C so that's a simple

32
00:02:41,319 --> 00:02:49,630
thing I don't have any other open issues

33
00:02:45,310 --> 00:02:52,180
at this time yeah I'm pretty sure that

34
00:02:49,630 --> 00:02:55,570
we've this is document is well ready to

35
00:02:52,180 --> 00:03:07,570
go forward so I'll hit the button after

36
00:02:55,570 --> 00:03:10,269
this meeting mmm and then on the aka

37
00:03:07,570 --> 00:03:12,400
side there were two updates recently one

38
00:03:10,269 --> 00:03:18,660
for the deadlines and then you know more

39
00:03:12,400 --> 00:03:26,859
proper updates today few hours ago and

40
00:03:18,660 --> 00:03:28,810
there's no huge change but it included a

41
00:03:26,859 --> 00:03:32,590
few things which I am listing here from

42
00:03:28,810 --> 00:03:35,769
my notes the first thing is that we

43
00:03:32,590 --> 00:03:37,540
changed the document to do an update it

44
00:03:35,769 --> 00:03:41,440
has an update header at the top and says

45
00:03:37,540 --> 00:03:43,390
update 54:48 or rather the the draft

46
00:03:41,440 --> 00:03:46,620
that will at some point get an RFC

47
00:03:43,390 --> 00:03:51,309
number because we are extending it

48
00:03:46,620 --> 00:03:53,400
noting that and then I changed the

49
00:03:51,310 --> 00:03:55,439
wording around what we say

50
00:03:53,400 --> 00:03:58,230
about this document and it's optionality

51
00:03:55,439 --> 00:04:03,150
it's optional but now it also says it's

52
00:03:58,230 --> 00:04:08,189
use is recommended basically based on

53
00:04:03,150 --> 00:04:10,950
you know better security properties and

54
00:04:08,189 --> 00:04:17,298
then there were some somewhat unclear

55
00:04:10,950 --> 00:04:21,209
references to the the curve 255 19 and

56
00:04:17,298 --> 00:04:25,650
how different numbers are generated so

57
00:04:21,209 --> 00:04:29,310
there was reference to can't remember

58
00:04:25,650 --> 00:04:31,289
that OC numbers of hand but but there's

59
00:04:29,310 --> 00:04:33,330
the the RFC that actually defines the

60
00:04:31,289 --> 00:04:36,620
curve and then this RFC that uses it for

61
00:04:33,330 --> 00:04:39,359
IP to and actually deleted the ike v2

62
00:04:36,620 --> 00:04:42,600
reference entirely from that and just

63
00:04:39,360 --> 00:04:50,220
refer to the actual curve definition RFC

64
00:04:42,600 --> 00:04:51,780
and simplified some AKA and simcard

65
00:04:50,220 --> 00:04:55,880
terminology and made some other

66
00:04:51,780 --> 00:04:59,299
editorial changes so I believe those are

67
00:04:55,880 --> 00:05:02,099
hopefully largely uncontroversial things

68
00:04:59,300 --> 00:05:04,410
we did identify when Jen and I were

69
00:05:02,099 --> 00:05:08,669
discussing we did identify one remaining

70
00:05:04,410 --> 00:05:13,979
issue that we didn't quite know how to

71
00:05:08,669 --> 00:05:19,109
deal with so so this draft defines one

72
00:05:13,979 --> 00:05:23,070
algorithm the curve 255 19 to do things

73
00:05:19,110 --> 00:05:27,180
and what it does is that it carries this

74
00:05:23,070 --> 00:05:30,599
in in one attribute that defines like

75
00:05:27,180 --> 00:05:33,720
we're going to do this particular

76
00:05:30,599 --> 00:05:38,820
extension and then there's an attribute

77
00:05:33,720 --> 00:05:42,960
or for this algorithm this entire style

78
00:05:38,820 --> 00:05:44,400
of key generation and now the question

79
00:05:42,960 --> 00:05:46,888
is is it sufficient to have one

80
00:05:44,400 --> 00:05:53,280
algorithm must be already from day one

81
00:05:46,889 --> 00:05:56,430
have to maybe maybe not I'd like to hear

82
00:05:53,280 --> 00:06:00,119
opinions and secondly how do we handle

83
00:05:56,430 --> 00:06:01,560
the registration of this number so so

84
00:06:00,120 --> 00:06:03,330
now it's kind of like everything's

85
00:06:01,560 --> 00:06:06,840
bundled together if you do this thing

86
00:06:03,330 --> 00:06:08,520
then there's one number that refers to

87
00:06:06,840 --> 00:06:11,638
this particular style of key generation

88
00:06:08,520 --> 00:06:13,409
and and this particular algorithm you

89
00:06:11,639 --> 00:06:17,970
could also separate them but then it'd

90
00:06:13,410 --> 00:06:19,500
be more attributes and John had also

91
00:06:17,970 --> 00:06:21,810
suggested that Mina maybe would be

92
00:06:19,500 --> 00:06:25,139
possible to refer to some some other

93
00:06:21,810 --> 00:06:29,760
registry of algorithms of this this

94
00:06:25,139 --> 00:06:31,139
nature that's a possibility as well

95
00:06:29,760 --> 00:06:33,180
although I was looking at some of the

96
00:06:31,139 --> 00:06:35,100
existing registers and their numbers

97
00:06:33,180 --> 00:06:37,200
bases were kind of funny that they were

98
00:06:35,100 --> 00:06:42,380
not sort of neatly positive small

99
00:06:37,200 --> 00:06:46,260
integral numbers but it was a cosy

100
00:06:42,380 --> 00:06:47,610
registry that was a little bit funny in

101
00:06:46,260 --> 00:06:50,250
that sense that he googles and negative

102
00:06:47,610 --> 00:06:51,930
numbers and so on but I guess the main

103
00:06:50,250 --> 00:06:53,850
question is do we need something extra

104
00:06:51,930 --> 00:06:56,550
in terms of additional algorithms from

105
00:06:53,850 --> 00:06:58,320
day one and if so is the current

106
00:06:56,550 --> 00:07:00,500
structure of F attribute sufficient or

107
00:06:58,320 --> 00:07:00,500
not

108
00:07:03,139 --> 00:07:10,139
then you take a stab at both of those

109
00:07:05,690 --> 00:07:13,050
the first is by referring the question

110
00:07:10,139 --> 00:07:15,470
about multiple algorithms over to you

111
00:07:13,050 --> 00:07:18,660
know two more more knowledgeable people

112
00:07:15,470 --> 00:07:20,400
who are understanding of what the state

113
00:07:18,660 --> 00:07:22,740
of standardization of the various curves

114
00:07:20,400 --> 00:07:24,870
are because particularly at the nist

115
00:07:22,740 --> 00:07:26,610
level because if you have another

116
00:07:24,870 --> 00:07:27,660
standardized curve that i know i know

117
00:07:26,610 --> 00:07:30,030
they're coming along but i don't know

118
00:07:27,660 --> 00:07:32,100
where where they where they land it

119
00:07:30,030 --> 00:07:37,169
seems to me having a second having a

120
00:07:32,100 --> 00:07:41,000
another go to one is is a useful way to

121
00:07:37,169 --> 00:07:43,560
handle failover in in case of a crisis

122
00:07:41,000 --> 00:07:47,400
that's just you know one view of it at

123
00:07:43,560 --> 00:07:51,930
least the second point about having

124
00:07:47,400 --> 00:07:54,150
multiple registries is does having an

125
00:07:51,930 --> 00:07:56,160
entry in the registry what does it imply

126
00:07:54,150 --> 00:07:58,289
in terms of implementation if it implies

127
00:07:56,160 --> 00:08:00,270
nothing in terms of implementation then

128
00:07:58,289 --> 00:08:02,340
overloading sounds fine if it implies

129
00:08:00,270 --> 00:08:04,320
something about if it implies something

130
00:08:02,340 --> 00:08:06,570
about an implementation in terms of yeah

131
00:08:04,320 --> 00:08:07,919
you you have to be able to man have to

132
00:08:06,570 --> 00:08:10,620
be able to support it is it an empty eye

133
00:08:07,919 --> 00:08:13,770
is it an option then then overloading is

134
00:08:10,620 --> 00:08:15,510
bad yeah that's a good point but I think

135
00:08:13,770 --> 00:08:18,479
there's a separation between like the

136
00:08:15,510 --> 00:08:20,430
requirement level that even if we just

137
00:08:18,479 --> 00:08:21,830
write things in in our document

138
00:08:20,430 --> 00:08:24,360
we'll have to say and even if we have

139
00:08:21,830 --> 00:08:26,130
two or three algorithms we will have to

140
00:08:24,360 --> 00:08:27,900
say that this one's mandatory and these

141
00:08:26,130 --> 00:08:30,000
other ones are optional or all of them

142
00:08:27,900 --> 00:08:31,560
are around Natori so that decision has

143
00:08:30,000 --> 00:08:33,330
to happen there's a separate thing about

144
00:08:31,560 --> 00:08:39,600
do we actually reuse somebody else's

145
00:08:33,330 --> 00:08:43,740
number or not you're not song so I think

146
00:08:39,600 --> 00:08:46,710
it would be good not to to specify make

147
00:08:43,740 --> 00:08:51,210
the document more general and to support

148
00:08:46,710 --> 00:08:55,530
a set of algorithm anon it's correct to

149
00:08:51,210 --> 00:08:59,250
have a state mandatory to implement tree

150
00:08:55,530 --> 00:09:01,620
DPP when discussing Sookie encryption

151
00:08:59,250 --> 00:09:05,910
three people decided to standardize both

152
00:09:01,620 --> 00:09:08,700
curve two five five one nine and P 256

153
00:09:05,910 --> 00:09:10,530
there's also has been in the past the

154
00:09:08,700 --> 00:09:12,840
general wish for treaty people to have

155
00:09:10,530 --> 00:09:15,270
now they did not choose that for Sookie

156
00:09:12,840 --> 00:09:22,830
but in the there's been a wish to have

157
00:09:15,270 --> 00:09:24,660
stronger algorithm a able to for

158
00:09:22,830 --> 00:09:27,560
government requirements government

159
00:09:24,660 --> 00:09:32,459
wanting to use celery systems I think

160
00:09:27,560 --> 00:09:35,219
curve because p-38 for would also be

161
00:09:32,460 --> 00:09:39,060
good to and maybe in a few traits will

162
00:09:35,220 --> 00:09:45,630
be curved for for eight but I think that

163
00:09:39,060 --> 00:09:48,839
would be very good no yes to support

164
00:09:45,630 --> 00:09:50,910
them for as mousses I think code to for

165
00:09:48,840 --> 00:09:54,060
among nine as mandatory to implement

166
00:09:50,910 --> 00:09:58,020
everything else optional but it would be

167
00:09:54,060 --> 00:09:59,550
good if the document could just the best

168
00:09:58,020 --> 00:10:02,189
thing would be if we could take the

169
00:09:59,550 --> 00:10:04,560
coastal register or the TLS register and

170
00:10:02,190 --> 00:10:09,150
just refer to that and say look here is

171
00:10:04,560 --> 00:10:12,150
how to to use any of these that already

172
00:10:09,150 --> 00:10:14,670
and rise also for this I don't there's

173
00:10:12,150 --> 00:10:18,240
complications how do we transfer them is

174
00:10:14,670 --> 00:10:21,300
there any TLS IPSec courses specifically

175
00:10:18,240 --> 00:10:24,990
and how do we transfer the identifiers

176
00:10:21,300 --> 00:10:29,010
but these are still for analysis perfect

177
00:10:24,990 --> 00:10:30,870
that would be in the best that would be

178
00:10:29,010 --> 00:10:33,510
the best option if it can be sold

179
00:10:30,870 --> 00:10:35,820
practically so I

180
00:10:33,510 --> 00:10:38,189
like the idea that we could have one

181
00:10:35,820 --> 00:10:41,430
mandatory to implement the current one

182
00:10:38,190 --> 00:10:43,530
and then add one or two more and sounds

183
00:10:41,430 --> 00:10:45,989
like you have good candidates in mind so

184
00:10:43,530 --> 00:10:49,010
so that's great we can we can put that

185
00:10:45,990 --> 00:10:51,870
in I can talk to you offline and the

186
00:10:49,010 --> 00:10:53,400
reuse of the register is still troubling

187
00:10:51,870 --> 00:10:55,440
me a little bit because it seems to me

188
00:10:53,400 --> 00:10:58,350
that there's when we add algorithm is

189
00:10:55,440 --> 00:11:02,430
always some specification needed that

190
00:10:58,350 --> 00:11:04,320
like use it this way and it's not just

191
00:11:02,430 --> 00:11:08,729
the numbers that that is in the registry

192
00:11:04,320 --> 00:11:14,190
so you actually have to maybe you

193
00:11:08,730 --> 00:11:15,930
specify also something and yeah it's

194
00:11:14,190 --> 00:11:19,020
it's a question of whether we can tests

195
00:11:15,930 --> 00:11:20,550
it doesn't magically add to get added to

196
00:11:19,020 --> 00:11:24,199
my implementation just because there's

197
00:11:20,550 --> 00:11:24,199
an entry in somebody's register value

198
00:11:25,400 --> 00:11:30,090
yeah I think it's buts easier to create

199
00:11:28,680 --> 00:11:33,359
your own register and use them because

200
00:11:30,090 --> 00:11:35,730
then then you also you know our control

201
00:11:33,360 --> 00:11:37,350
of your registry so you under end up in

202
00:11:35,730 --> 00:11:38,880
if you're using somebody else's register

203
00:11:37,350 --> 00:11:41,300
at they say no no we don't want to have

204
00:11:38,880 --> 00:11:43,620
that you know we don't care about that

205
00:11:41,300 --> 00:11:47,189
algorithm and they don't allow you to

206
00:11:43,620 --> 00:11:50,430
put something in there and then you want

207
00:11:47,190 --> 00:11:52,260
to we want to and because they add oh

208
00:11:50,430 --> 00:11:54,089
they are add stuff there that it's not

209
00:11:52,260 --> 00:11:57,120
usable for you because they say oh you

210
00:11:54,090 --> 00:11:59,340
have used is hash based you know to its

211
00:11:57,120 --> 00:12:01,380
own 103 you know megabytes office you

212
00:11:59,340 --> 00:12:03,690
know this public key oh it's no problem

213
00:12:01,380 --> 00:12:07,560
in our our call protocol it might the

214
00:12:03,690 --> 00:12:09,570
problem is your yes zones point was like

215
00:12:07,560 --> 00:12:13,199
I mean I agree with you that that it's

216
00:12:09,570 --> 00:12:17,790
probably lower cost for us to do our own

217
00:12:13,200 --> 00:12:20,610
thing but that Jones argument I think

218
00:12:17,790 --> 00:12:23,069
was more like lifetime cost of this it's

219
00:12:20,610 --> 00:12:25,020
initially easier but is it cheaper in

220
00:12:23,070 --> 00:12:26,430
the long run if somebody else does does

221
00:12:25,020 --> 00:12:29,880
some amount of work there's that that's

222
00:12:26,430 --> 00:12:32,550
the trade-off okay so this is Elliott

223
00:12:29,880 --> 00:12:35,340
again short term long term okay short

224
00:12:32,550 --> 00:12:37,560
term clearly I think I'm coming down on

225
00:12:35,340 --> 00:12:38,940
your side long term this is something

226
00:12:37,560 --> 00:12:42,900
that should be referred back to the IAB

227
00:12:38,940 --> 00:12:44,490
because it the there are so many

228
00:12:42,900 --> 00:12:45,840
different forms of encryption units in

229
00:12:44,490 --> 00:12:47,100
so many different places and so many

230
00:12:45,840 --> 00:12:47,490
different registries if you go through

231
00:12:47,100 --> 00:12:48,870
all the

232
00:12:47,490 --> 00:12:50,550
Registry's the stuff repeats itself

233
00:12:48,870 --> 00:12:54,180
again and again and again and again and

234
00:12:50,550 --> 00:12:58,649
again and so it would be nice if we had

235
00:12:54,180 --> 00:13:00,870
a clearer way in the ietf to do that but

236
00:12:58,649 --> 00:13:02,970
in order to do that it means that we

237
00:13:00,870 --> 00:13:06,089
can't have a lot of customization going

238
00:13:02,970 --> 00:13:08,820
on within the individual uses and that

239
00:13:06,089 --> 00:13:11,399
refers us back to John's work right in

240
00:13:08,820 --> 00:13:13,470
the TLS 1/3 document how much Stan how

241
00:13:11,399 --> 00:13:17,190
much customization has to go on in TLS

242
00:13:13,470 --> 00:13:27,120
one thie to adapt for ETLs tea etc etc

243
00:13:17,190 --> 00:13:29,550
etc that's the long-term issue yeah and

244
00:13:27,120 --> 00:13:31,110
your reference to IAB there this I am

245
00:13:29,550 --> 00:13:32,760
ember doesn't know what the answer is at

246
00:13:31,110 --> 00:13:48,000
least but maybe there's some other IAB

247
00:13:32,760 --> 00:13:50,790
members that do the round number all

248
00:13:48,000 --> 00:13:52,620
right so it sounds like there's there's

249
00:13:50,790 --> 00:13:55,319
some more work to do here in terms of

250
00:13:52,620 --> 00:13:56,880
just getting you know and a couple more

251
00:13:55,320 --> 00:14:03,440
algorithms in there and just figuring

252
00:13:56,880 --> 00:14:26,610
out what the mechanism will be thank you

253
00:14:03,440 --> 00:14:29,880
all right next TLS one three so this is

254
00:14:26,610 --> 00:14:34,589
a presentation of using TLS with using

255
00:14:29,880 --> 00:14:36,750
ETLs with TLS 103 it's in version 7 next

256
00:14:34,589 --> 00:14:44,700
slide No

257
00:14:36,750 --> 00:14:47,579
that was too fast there so there's been

258
00:14:44,700 --> 00:14:53,070
two updates since the last IDF based on

259
00:14:47,579 --> 00:14:56,760
oh thanks based on the post working

260
00:14:53,070 --> 00:14:59,230
group last call comments changes from 5

261
00:14:56,760 --> 00:15:02,710
to 6 is

262
00:14:59,230 --> 00:15:05,320
based on support in current Els

263
00:15:02,710 --> 00:15:07,900
implementation especially OpenSSL so

264
00:15:05,320 --> 00:15:10,660
OpenSSL does not support sending the

265
00:15:07,900 --> 00:15:14,079
empty string as application data even if

266
00:15:10,660 --> 00:15:14,620
it's allowed by the oil sea so to fix

267
00:15:14,080 --> 00:15:18,280
this

268
00:15:14,620 --> 00:15:23,050
the epls rod was changed to sending a

269
00:15:18,280 --> 00:15:24,839
bomb byte of zeros now it was a big

270
00:15:23,050 --> 00:15:28,900
tariff occasions that the server must

271
00:15:24,840 --> 00:15:32,080
the client must send single byte but the

272
00:15:28,900 --> 00:15:36,459
server must accept everything quite

273
00:15:32,080 --> 00:15:39,010
standard then there is yeah another

274
00:15:36,460 --> 00:15:42,670
changed also based on open TLS is that

275
00:15:39,010 --> 00:15:47,319
up until s does not allow the server to

276
00:15:42,670 --> 00:15:49,630
send early data in the server hello

277
00:15:47,320 --> 00:15:53,470
which is allowed according to the RFC

278
00:15:49,630 --> 00:15:56,740
but not implemented in open SSL so we

279
00:15:53,470 --> 00:16:03,210
updated Roth to also allow sending the

280
00:15:56,740 --> 00:16:08,580
commit message in a separate message

281
00:16:03,210 --> 00:16:12,690
that's and then between 0 6 & 0 7 was a

282
00:16:08,580 --> 00:16:15,820
review by Jim mostly editorial and

283
00:16:12,690 --> 00:16:18,540
clarifications the commitment message is

284
00:16:15,820 --> 00:16:21,660
now called commitment message everywhere

285
00:16:18,540 --> 00:16:24,819
there are some privacy considerations on

286
00:16:21,660 --> 00:16:28,810
padding and listing that TLS 103 has

287
00:16:24,820 --> 00:16:32,440
padding and recommend its use then there

288
00:16:28,810 --> 00:16:35,920
is additional references to the TLS 103

289
00:16:32,440 --> 00:16:38,500
or C on security considerations and

290
00:16:35,920 --> 00:16:41,110
clarifications and there is a reference

291
00:16:38,500 --> 00:16:46,120
to the now working group adopted dropped

292
00:16:41,110 --> 00:16:49,210
ITF emu so about certificate used an

293
00:16:46,120 --> 00:16:52,470
informal reference it does not depend on

294
00:16:49,210 --> 00:16:52,470
that next slide

295
00:16:52,750 --> 00:17:00,400
the only remaining issue that has been

296
00:16:56,560 --> 00:17:04,379
debated on the mailing list most working

297
00:17:00,400 --> 00:17:09,339
group last call it's where did he allow

298
00:17:04,380 --> 00:17:12,130
ETLs 103 with PSK and if yesterday to

299
00:17:09,339 --> 00:17:15,609
answer how to allow that

300
00:17:12,130 --> 00:17:20,980
so they're starting by a comment by two

301
00:17:15,609 --> 00:17:23,649
months ha that EPA EPS K does not

302
00:17:20,980 --> 00:17:26,260
provide any identity protection and does

303
00:17:23,650 --> 00:17:32,340
not provide perfect forward secrecy and

304
00:17:26,260 --> 00:17:35,919
he suggested to allow PSK in eap-tls

305
00:17:32,340 --> 00:17:39,668
damn there was some discussion that EAP

306
00:17:35,919 --> 00:17:44,610
password provides perfect forward

307
00:17:39,669 --> 00:17:53,650
secrecy but a password is not really

308
00:17:44,610 --> 00:17:57,760
suitable for IOT devices so I think

309
00:17:53,650 --> 00:18:00,400
that's we end our UT use cases or where

310
00:17:57,760 --> 00:18:06,450
people has been on the list has been

311
00:18:00,400 --> 00:18:09,669
wanting to use PS k authentication last

312
00:18:06,450 --> 00:18:11,890
lately on the ITF list I think most of

313
00:18:09,669 --> 00:18:15,510
the comments have been positive to doing

314
00:18:11,890 --> 00:18:25,120
this has been wish to use this in IOT

315
00:18:15,510 --> 00:18:27,129
use it in T and so so but if we should

316
00:18:25,120 --> 00:18:32,370
do that and the question is should it be

317
00:18:27,130 --> 00:18:36,309
should this PS k use the same method

318
00:18:32,370 --> 00:18:37,870
number and should it be defined in the

319
00:18:36,309 --> 00:18:42,850
same document

320
00:18:37,870 --> 00:18:45,280
on the first question I would say yes I

321
00:18:42,850 --> 00:18:49,120
don't think it helped having it the same

322
00:18:45,280 --> 00:18:52,299
in different number the second I think a

323
00:18:49,120 --> 00:18:54,879
new document would be the preferred I

324
00:18:52,299 --> 00:18:57,940
don't think we should wait for this and

325
00:18:54,880 --> 00:19:01,360
I think we need time to discuss any

326
00:18:57,940 --> 00:19:03,010
issues here yeah yeah I mean important

327
00:19:01,360 --> 00:19:05,649
thing to understand with this is that

328
00:19:03,010 --> 00:19:08,080
EAP TLS is used in very high security

329
00:19:05,650 --> 00:19:10,919
installations where additional modes are

330
00:19:08,080 --> 00:19:13,689
not just a bad idea they are forbidden

331
00:19:10,919 --> 00:19:17,679
okay so if you add this stuff into the

332
00:19:13,690 --> 00:19:19,059
RFC will get it banned it will not only

333
00:19:17,679 --> 00:19:21,490
not get implemented it will be forbidden

334
00:19:19,059 --> 00:19:22,840
to be implemented so don't start messing

335
00:19:21,490 --> 00:19:25,270
with this and adding it like a zillion

336
00:19:22,840 --> 00:19:26,209
additional authentication modes do it

337
00:19:25,270 --> 00:19:28,440
separately

338
00:19:26,210 --> 00:19:30,240
because you're talking about extremely

339
00:19:28,440 --> 00:19:32,190
high security installations which will

340
00:19:30,240 --> 00:19:33,929
not allow PS case and other stuff and

341
00:19:32,190 --> 00:19:36,480
adding a zillion modes which have never

342
00:19:33,929 --> 00:19:39,809
been implemented and never tested is is

343
00:19:36,480 --> 00:19:41,730
an attack on on on national security

344
00:19:39,809 --> 00:19:42,210
it's not this isn't like an useful thing

345
00:19:41,730 --> 00:19:45,090
to do

346
00:19:42,210 --> 00:19:46,559
it's very negative and we can we're

347
00:19:45,090 --> 00:19:48,000
going to end up for bidding this RFC

348
00:19:46,559 --> 00:20:04,500
from ever being implemented if you do

349
00:19:48,000 --> 00:20:06,960
that so Bernard this Elliot the reason

350
00:20:04,500 --> 00:20:10,620
that this whole conversation came up was

351
00:20:06,960 --> 00:20:12,950
that we're we're working out actual

352
00:20:10,620 --> 00:20:15,629
operational flows that we need for IOT

353
00:20:12,950 --> 00:20:20,250
right and for fallen boarding and so

354
00:20:15,630 --> 00:20:24,299
that we see the value in using TLS PSK

355
00:20:20,250 --> 00:20:26,880
it's defined right so the question is

356
00:20:24,299 --> 00:20:34,200
why can't we use a mode that already

357
00:20:26,880 --> 00:20:37,710
exists another code point for it that's

358
00:20:34,200 --> 00:20:39,360
fine but if if somebody's the point is

359
00:20:37,710 --> 00:20:41,850
it was forbidden in the original drafts

360
00:20:39,360 --> 00:20:44,370
it was forbidden for a reason it was

361
00:20:41,850 --> 00:20:46,049
because it there was there were security

362
00:20:44,370 --> 00:20:47,639
proofs that were required to get it

363
00:20:46,049 --> 00:20:50,760
deployed those proofs are been validated

364
00:20:47,639 --> 00:20:52,469
by what you're adding here okay so so

365
00:20:50,760 --> 00:20:56,129
people wanted to do very specific things

366
00:20:52,470 --> 00:20:57,539
and only those things and and only those

367
00:20:56,130 --> 00:20:58,860
things were allowed for those particular

368
00:20:57,539 --> 00:21:01,350
installations there were very high

369
00:20:58,860 --> 00:21:02,459
security certificate based things want

370
00:21:01,350 --> 00:21:05,070
to do something else just get another

371
00:21:02,460 --> 00:21:07,350
code point do it there don't add all of

372
00:21:05,070 --> 00:21:08,879
these all of this additional stuff which

373
00:21:07,350 --> 00:21:11,730
will and that it'll invalidate all the

374
00:21:08,880 --> 00:21:13,620
security proofs that are there you know

375
00:21:11,730 --> 00:21:16,200
cause a ton of problems and because of

376
00:21:13,620 --> 00:21:17,969
that you will have to be banned so this

377
00:21:16,200 --> 00:21:20,279
stuff I mean you're just going places

378
00:21:17,970 --> 00:21:23,850
that you just don't go there just get

379
00:21:20,279 --> 00:21:26,159
another code point and you know do it

380
00:21:23,850 --> 00:21:27,689
separately just so people who are people

381
00:21:26,159 --> 00:21:31,159
who had negotiate this particular code

382
00:21:27,690 --> 00:21:31,159
point know exactly what they're getting

383
00:21:34,490 --> 00:21:39,810
that also implies is that any sort of

384
00:21:37,620 --> 00:21:42,479
new definition within a clientele

385
00:21:39,810 --> 00:21:44,580
that the tls people divine means it

386
00:21:42,480 --> 00:21:50,250
can't be re-employed here without

387
00:21:44,580 --> 00:21:53,629
without further being standardized well

388
00:21:50,250 --> 00:22:07,230
point in where in which in which show

389
00:21:53,630 --> 00:22:10,910
okay do everyone just so the document

390
00:22:07,230 --> 00:22:14,820
currently says that external PSK is

391
00:22:10,910 --> 00:22:18,930
forbidden so my suggestion would be we

392
00:22:14,820 --> 00:22:21,540
keep that and discuss PSK in additional

393
00:22:18,930 --> 00:22:25,800
draft then people are free to implement

394
00:22:21,540 --> 00:22:28,920
that if they want to the other

395
00:22:25,800 --> 00:22:31,290
alternative is to simply add the code

396
00:22:28,920 --> 00:22:32,310
point right and discuss it in this draft

397
00:22:31,290 --> 00:22:36,750
so don't we don't have to constantly

398
00:22:32,310 --> 00:22:41,030
revisit I'm sorry so we don't have to

399
00:22:36,750 --> 00:22:41,030
constantly revisit ETLs again again

400
00:22:49,929 --> 00:22:56,889
mohit no hat

401
00:22:52,960 --> 00:22:59,110
so as author I think it's it's

402
00:22:56,889 --> 00:23:00,519
non-trivial to just say yup es case are

403
00:22:59,110 --> 00:23:02,350
allowed and we are done with it as you

404
00:23:00,519 --> 00:23:03,759
as we have seen from the discussion on

405
00:23:02,350 --> 00:23:06,428
the list there is all these questions

406
00:23:03,759 --> 00:23:09,519
about what identities to use whether PS

407
00:23:06,429 --> 00:23:11,740
case using epls with PS case should we

408
00:23:09,519 --> 00:23:15,240
allow resumption tickets and resumption

409
00:23:11,740 --> 00:23:19,269
PS case so it's not a done deal

410
00:23:15,240 --> 00:23:22,929
personally I'm fan of small modular

411
00:23:19,269 --> 00:23:24,700
documents I would favor so I agree with

412
00:23:22,929 --> 00:23:27,279
Myrna that probably having a different

413
00:23:24,700 --> 00:23:29,230
method number makes sense anyways or

414
00:23:27,279 --> 00:23:31,210
type code and then having a separate

415
00:23:29,230 --> 00:23:33,700
document and figure out the issues as we

416
00:23:31,210 --> 00:23:37,389
kind of implement this because currently

417
00:23:33,700 --> 00:23:39,999
TLS PSK at least is not implemented in

418
00:23:37,389 --> 00:23:41,619
in the open-source WPA supplicant so as

419
00:23:39,999 --> 00:23:43,509
we learn along the implementation we

420
00:23:41,619 --> 00:23:46,119
will probably need to make make changes

421
00:23:43,509 --> 00:23:56,300
and there's no point holding on to the

422
00:23:46,119 --> 00:23:58,100
TLS spec until that own forces

423
00:23:56,300 --> 00:24:00,530
confirm authentication piece kids are

424
00:23:58,100 --> 00:24:02,570
fine with any TLS it's just the X T

425
00:24:00,530 --> 00:24:07,850
external off Pierce case need to be

426
00:24:02,570 --> 00:24:11,389
split out sorry a presumption PS kazar

427
00:24:07,850 --> 00:24:12,830
find extra are fine in TLS 103 those are

428
00:24:11,390 --> 00:24:14,300
fine that's absolutely fine okay it's

429
00:24:12,830 --> 00:24:21,740
just the external piece case need to be

430
00:24:14,300 --> 00:24:24,590
split out fine okay yeah seems to be so

431
00:24:21,740 --> 00:24:26,240
CS any is to use a different code point

432
00:24:24,590 --> 00:24:28,730
no objection to that

433
00:24:26,240 --> 00:24:30,500
it seems still a little bit discussion

434
00:24:28,730 --> 00:24:33,320
whether it should be in this document

435
00:24:30,500 --> 00:24:37,820
will not okay so let's just just want to

436
00:24:33,320 --> 00:24:40,879
check the room is anybody opposed to

437
00:24:37,820 --> 00:24:45,770
using a separate foot code point for a

438
00:24:40,880 --> 00:24:49,280
pls PSK okay

439
00:24:45,770 --> 00:24:52,940
so I think that's part that's a good

440
00:24:49,280 --> 00:24:56,480
direction to go forward with the next

441
00:24:52,940 --> 00:25:01,430
question would be whether do you use the

442
00:24:56,480 --> 00:25:05,960
same document or a different document we

443
00:25:01,430 --> 00:25:07,220
can take you can let's take a hum here

444
00:25:05,960 --> 00:25:09,230
this is something I'm pretty sure we'll

445
00:25:07,220 --> 00:25:14,240
have to take to the list first question

446
00:25:09,230 --> 00:25:16,640
will ask is if we will use the if we

447
00:25:14,240 --> 00:25:19,250
should cover EP SK in the same document

448
00:25:16,640 --> 00:25:22,730
and the next question will be if we

449
00:25:19,250 --> 00:25:25,670
should you do TLS PSK and a different

450
00:25:22,730 --> 00:25:30,890
document so hum if you think we should

451
00:25:25,670 --> 00:25:32,670
do it in the same document if you think

452
00:25:30,890 --> 00:25:35,410
we should do it in a different document

453
00:25:32,670 --> 00:25:39,650
[Music]

454
00:25:35,410 --> 00:25:41,180
pretty pretty close so I think well

455
00:25:39,650 --> 00:25:43,700
we'll have to have some discussion on

456
00:25:41,180 --> 00:25:44,780
the list but Elliot yeah so there's a

457
00:25:43,700 --> 00:25:47,570
reason why I think we should do it now

458
00:25:44,780 --> 00:25:49,760
deal with it now because Alan and I and

459
00:25:47,570 --> 00:25:51,320
a couple of others have gone through all

460
00:25:49,760 --> 00:25:54,800
the effort to sort through these issues

461
00:25:51,320 --> 00:25:56,840
already on list and we we've done all

462
00:25:54,800 --> 00:25:59,750
we've done a lot of the work we're

463
00:25:56,840 --> 00:26:01,429
coming close to closure on it and so to

464
00:25:59,750 --> 00:26:04,160
spin up another document to have to do

465
00:26:01,430 --> 00:26:05,780
it has to causes two problems the first

466
00:26:04,160 --> 00:26:08,390
of all it's a lot of work to spin up a

467
00:26:05,780 --> 00:26:09,889
document for this the second issue is

468
00:26:08,390 --> 00:26:11,480
that I

469
00:26:09,890 --> 00:26:13,790
think about it from my reader standpoint

470
00:26:11,480 --> 00:26:18,500
which is okay great now I have to

471
00:26:13,790 --> 00:26:19,940
essentially I have to come reconcile two

472
00:26:18,500 --> 00:26:22,250
documents to figure out how I'm going to

473
00:26:19,940 --> 00:26:24,890
do my implementation and I think that's

474
00:26:22,250 --> 00:26:29,270
actually more complex from even having a

475
00:26:24,890 --> 00:26:30,710
single document oh and I'll give one

476
00:26:29,270 --> 00:26:34,850
reason why I think it could possibly be

477
00:26:30,710 --> 00:26:36,320
a separate document and that is we will

478
00:26:34,850 --> 00:26:38,030
need some guidance from Matias working

479
00:26:36,320 --> 00:26:39,710
group and pasta dinner after this one

480
00:26:38,030 --> 00:26:41,930
two three to give some implementation

481
00:26:39,710 --> 00:26:44,270
guidance on differentiating between

482
00:26:41,930 --> 00:26:47,210
presumption and authenticating PS case

483
00:26:44,270 --> 00:26:53,889
and getting that guides from TLS might

484
00:26:47,210 --> 00:26:59,150
hold up this document yeah own freedom

485
00:26:53,890 --> 00:27:01,280
okay not I mean we can I think that we

486
00:26:59,150 --> 00:27:03,320
that should be brought up in the TLS

487
00:27:01,280 --> 00:27:05,660
working group I don't know if we if you

488
00:27:03,320 --> 00:27:11,179
have you guys done that I'm not sure if

489
00:27:05,660 --> 00:27:13,400
you'll get the guidance you want but if

490
00:27:11,180 --> 00:27:15,830
we should be bringing that up if you you

491
00:27:13,400 --> 00:27:17,530
know you can post an errata or spring it

492
00:27:15,830 --> 00:27:20,000
up on the list

493
00:27:17,530 --> 00:27:21,800
so I agree with the one also I don't

494
00:27:20,000 --> 00:27:23,990
want to publish an expect which doesn't

495
00:27:21,800 --> 00:27:26,450
have implementation so if you are going

496
00:27:23,990 --> 00:27:28,760
to wait until the TLS PSK implementation

497
00:27:26,450 --> 00:27:31,610
has move forward in WPA supplicant this

498
00:27:28,760 --> 00:27:33,320
we would basically hold on to the TLS

499
00:27:31,610 --> 00:27:36,770
document as well which is more or less

500
00:27:33,320 --> 00:27:38,720
ready to be shipped so that's another

501
00:27:36,770 --> 00:27:40,010
reason why I want to do it separately so

502
00:27:38,720 --> 00:27:42,650
that we can have some time to implement

503
00:27:40,010 --> 00:27:44,540
and learn from that it's one thing to

504
00:27:42,650 --> 00:27:47,930
say yeah we have figured out all the

505
00:27:44,540 --> 00:27:49,850
issues in the draft but I'm pretty sure

506
00:27:47,930 --> 00:27:51,410
when we actually sit down to implement

507
00:27:49,850 --> 00:28:02,689
there will be some some questions that

508
00:27:51,410 --> 00:28:08,720
that remain to be answered okay

509
00:28:02,690 --> 00:28:09,910
were there any comments on jabber it's

510
00:28:08,720 --> 00:28:11,080
okay all right

511
00:28:09,910 --> 00:28:13,720
it's

512
00:28:11,080 --> 00:28:16,629
so I think we'll continue discussion on

513
00:28:13,720 --> 00:28:19,779
the list of both resolving the issues

514
00:28:16,630 --> 00:28:21,370
with PSK mode like the identity issues

515
00:28:19,779 --> 00:28:25,570
I think are primarily the issues and

516
00:28:21,370 --> 00:28:27,340
then also work through this separation

517
00:28:25,570 --> 00:28:34,510
of the documents or doing it at one

518
00:28:27,340 --> 00:28:37,750
document yeah second bullet went by it

519
00:28:34,510 --> 00:28:39,519
should survey allow authentication with

520
00:28:37,750 --> 00:28:43,690
both certificates and external beers

521
00:28:39,519 --> 00:28:47,820
case this is just a draft in TLS right

522
00:28:43,690 --> 00:28:52,990
now how far it has progressed but

523
00:28:47,820 --> 00:28:55,779
probably a later question I not clear

524
00:28:52,990 --> 00:29:06,519
that that is even forbidden in the

525
00:28:55,779 --> 00:29:10,659
current epls relationship between

526
00:29:06,519 --> 00:29:12,940
identity and I when using external PS

527
00:29:10,659 --> 00:29:17,080
case there there has been quite a lot of

528
00:29:12,940 --> 00:29:19,899
discussion even suggestion in the on the

529
00:29:17,080 --> 00:29:23,799
list as yes gender seems to be a greater

530
00:29:19,899 --> 00:29:27,129
poem that when using external PSK you

531
00:29:23,799 --> 00:29:32,740
should also provide a realm that can be

532
00:29:27,130 --> 00:29:35,950
used as an anonymous nigh and then

533
00:29:32,740 --> 00:29:38,649
discussion I think no clear answer it

534
00:29:35,950 --> 00:29:43,809
should be distinguished external PSK

535
00:29:38,649 --> 00:29:46,418
from resumption PS case John yeah on the

536
00:29:43,809 --> 00:29:51,129
point relating to providing an anonymous

537
00:29:46,419 --> 00:29:54,130
nai with with PS k so Alan and I went

538
00:29:51,130 --> 00:29:56,289
around on this couple times the issue we

539
00:29:54,130 --> 00:29:58,480
have to be careful about is you can't

540
00:29:56,289 --> 00:30:02,080
always use that anonymous nai you have

541
00:29:58,480 --> 00:30:04,149
to or it's or I'll simply break

542
00:30:02,080 --> 00:30:06,100
frederick federation i'm you have to be

543
00:30:04,149 --> 00:30:08,080
somewhat circumspect as to how you use

544
00:30:06,100 --> 00:30:10,269
the anonymous nai so for enrollment

545
00:30:08,080 --> 00:30:11,199
purposes maybe you need to do something

546
00:30:10,269 --> 00:30:14,440
along those lines if you're talking

547
00:30:11,200 --> 00:30:16,929
about t p-- for instance but you can't

548
00:30:14,440 --> 00:30:18,460
if you're already enrolled and you want

549
00:30:16,929 --> 00:30:21,520
and you want to essentially use the nai

550
00:30:18,460 --> 00:30:23,139
to route on then which is not an

551
00:30:21,520 --> 00:30:24,340
unreasonable thing to do we do it but if

552
00:30:23,139 --> 00:30:26,590
that's the

553
00:30:24,340 --> 00:30:28,658
pretty massive use of eep at this point

554
00:30:26,590 --> 00:30:30,610
okay I just use an anonymous nao and

555
00:30:28,659 --> 00:30:33,669
this actually impacts eat new it back

556
00:30:30,610 --> 00:30:36,729
steep and a few others too yeah actually

557
00:30:33,669 --> 00:30:40,500
I think to the current text in the EPL

558
00:30:36,730 --> 00:30:44,500
s103 document says that anonymous nie is

559
00:30:40,500 --> 00:30:48,190
you must support recommended to use must

560
00:30:44,500 --> 00:30:53,860
use privacy friendly identifier I think

561
00:30:48,190 --> 00:30:55,690
that would apply also for choice you can

562
00:30:53,860 --> 00:30:57,549
still do Federation and routing with

563
00:30:55,690 --> 00:30:58,990
anonymous nigh as long as the realm is

564
00:30:57,549 --> 00:31:00,908
correct so if you have ever used at your

565
00:30:58,990 --> 00:31:03,789
home there is a field where you you put

566
00:31:00,909 --> 00:31:05,950
the anonymous knife as long as you put

567
00:31:03,789 --> 00:31:09,580
the correct domain part in the realm or

568
00:31:05,950 --> 00:31:11,740
in deny your authentication request will

569
00:31:09,580 --> 00:31:14,110
get routed to the correct server side I

570
00:31:11,740 --> 00:31:15,549
don't I think there was an incorrect

571
00:31:14,110 --> 00:31:16,899
statement to say that you can't have

572
00:31:15,549 --> 00:31:19,480
anonymous nice because you need

573
00:31:16,899 --> 00:31:21,760
Federation and routing sorry sorry what

574
00:31:19,480 --> 00:31:24,399
I meant to say you know he's right well

575
00:31:21,760 --> 00:31:25,658
we're there's a separate discussion and

576
00:31:24,399 --> 00:31:27,549
I mix them up there's a separate

577
00:31:25,659 --> 00:31:31,149
discussion going on about when to use a

578
00:31:27,549 --> 00:31:33,250
standard realm identifier and that's

579
00:31:31,149 --> 00:31:34,600
where things can break Federation that's

580
00:31:33,250 --> 00:31:40,090
and so you're right you're absolutely

581
00:31:34,600 --> 00:31:41,949
right you can use anonymous any fourth

582
00:31:40,090 --> 00:31:45,549
bullet is to distinguish between

583
00:31:41,950 --> 00:31:48,190
external PSK and resumption PSK and

584
00:31:45,549 --> 00:31:52,000
officially and be any guidance I think

585
00:31:48,190 --> 00:31:54,190
the it might be hard to control both of

586
00:31:52,000 --> 00:31:56,919
these external peers case you might have

587
00:31:54,190 --> 00:31:59,159
control of might also come from some

588
00:31:56,919 --> 00:32:02,740
other source you might want to reduce

589
00:31:59,159 --> 00:32:06,700
existing identities in the organization

590
00:32:02,740 --> 00:32:10,179
and derive identities from from that the

591
00:32:06,700 --> 00:32:13,059
internal resumption peers case are

592
00:32:10,179 --> 00:32:17,350
typically decided by the TLS application

593
00:32:13,059 --> 00:32:20,740
so the EAP implementation might or might

594
00:32:17,350 --> 00:32:24,610
not have an influence on that depending

595
00:32:20,740 --> 00:32:28,840
on how much they want to reuse or me

596
00:32:24,610 --> 00:32:30,809
mess with a TLS code but I think these

597
00:32:28,840 --> 00:32:34,199
are both of these things are things that

598
00:32:30,809 --> 00:32:37,539
should be discussed but I don't think we

599
00:32:34,200 --> 00:32:38,060
can end up in any must look like this

600
00:32:37,539 --> 00:32:51,290
it's

601
00:32:38,060 --> 00:32:53,600
more like guidance no our Dan Harkins

602
00:32:51,290 --> 00:32:56,690
already done with this slide after yeah

603
00:32:53,600 --> 00:32:59,419
so you mentioned the CFR G is working on

604
00:32:56,690 --> 00:33:02,300
a pig selection process so if we do

605
00:32:59,420 --> 00:33:05,090
separate things and have T let's 1.3 as

606
00:33:02,300 --> 00:33:07,070
one document and PSK is a different

607
00:33:05,090 --> 00:33:10,370
document why don't you want to wait for

608
00:33:07,070 --> 00:33:13,580
the PSK one and just to do a peg because

609
00:33:10,370 --> 00:33:18,350
it's probably a heavy and not very iot

610
00:33:13,580 --> 00:33:20,560
friendly for small devices I are you

611
00:33:18,350 --> 00:33:24,139
gonna do it diffie-hellman in the PS k

612
00:33:20,560 --> 00:33:26,179
yes then it's not bene

613
00:33:24,140 --> 00:33:29,510
I mean it's like a diffie-hellman and a

614
00:33:26,180 --> 00:33:30,680
half to do okay yeah a balance pay right

615
00:33:29,510 --> 00:33:31,790
you could do something that's

616
00:33:30,680 --> 00:33:34,700
considerably more than a diffie-hellman

617
00:33:31,790 --> 00:33:36,889
and a half but I mean I I think would

618
00:33:34,700 --> 00:33:42,680
behoove this group to wait a little bit

619
00:33:36,890 --> 00:33:43,940
to do the right thing because even with

620
00:33:42,680 --> 00:33:47,420
doing it diffie-hellman it's still

621
00:33:43,940 --> 00:33:51,170
susceptible to a offline dictionary

622
00:33:47,420 --> 00:33:54,440
attack after an active attack so I think

623
00:33:51,170 --> 00:33:59,150
using a pig would probably be a really

624
00:33:54,440 --> 00:34:01,310
good idea yeah I think if you use if you

625
00:33:59,150 --> 00:34:02,300
use password with the PSK brochure it's

626
00:34:01,310 --> 00:34:06,889
weak

627
00:34:02,300 --> 00:34:09,170
I think passwords MPs case or some

628
00:34:06,890 --> 00:34:11,540
sometimes people misuse it but otherwise

629
00:34:09,170 --> 00:34:15,200
it's different use cases you have PSK in

630
00:34:11,540 --> 00:34:17,570
IOT where you have some so you have some

631
00:34:15,199 --> 00:34:20,149
distribution system of these PS case and

632
00:34:17,570 --> 00:34:22,820
that's secure them when you have human

633
00:34:20,150 --> 00:34:27,230
involves setting things up then you have

634
00:34:22,820 --> 00:34:29,390
passwords yeah forgive me I was about to

635
00:34:27,230 --> 00:34:31,130
come at the same thing a PS k is PS k

636
00:34:29,389 --> 00:34:34,580
businesses say it's appreciate key it's

637
00:34:31,130 --> 00:34:36,860
not password yeah it's a strong long

638
00:34:34,580 --> 00:34:40,069
entropy and in the IOT environment it

639
00:34:36,860 --> 00:34:42,260
actually might be that in for lots of

640
00:34:40,070 --> 00:34:43,550
the other environments it isn't so

641
00:34:42,260 --> 00:34:46,070
that's why I think that there is still a

642
00:34:43,550 --> 00:34:49,580
use for especially in IOT environment

643
00:34:46,070 --> 00:34:51,410
for EAP a PPS K in that case because it

644
00:34:49,580 --> 00:34:51,830
might be even even if it's a little bit

645
00:34:51,409 --> 00:34:56,779
only

646
00:34:51,830 --> 00:34:58,730
foster it still might be enough there I

647
00:34:56,780 --> 00:35:01,970
think we should all disabuse ourselves

648
00:34:58,730 --> 00:35:04,460
to the notion that you know the guidance

649
00:35:01,970 --> 00:35:06,259
we recommend in in the security

650
00:35:04,460 --> 00:35:09,020
considerations of an RSC is how it ends

651
00:35:06,260 --> 00:35:10,640
up getting used and saying well PSK is a

652
00:35:09,020 --> 00:35:12,590
PSK and on a password and therefore

653
00:35:10,640 --> 00:35:14,420
people will use PSK with PSK eat a big

654
00:35:12,590 --> 00:35:16,040
long giant strings and not not with

655
00:35:14,420 --> 00:35:18,530
passwords because we know that they're

656
00:35:16,040 --> 00:35:19,670
not going to do that people use the

657
00:35:18,530 --> 00:35:22,640
tools that they have and they sometimes

658
00:35:19,670 --> 00:35:25,340
use them wrong so if we come up with

659
00:35:22,640 --> 00:35:26,600
tools that are misuse resistant then it

660
00:35:25,340 --> 00:35:29,150
doesn't matter if they use it right or

661
00:35:26,600 --> 00:35:37,819
wrong because it's still gonna be strong

662
00:35:29,150 --> 00:35:39,950
and that that's the point we can't prove

663
00:35:37,820 --> 00:35:43,340
to idiots I mean if they use make me a

664
00:35:39,950 --> 00:35:45,710
tasty code as their password it doesn't

665
00:35:43,340 --> 00:35:47,390
matter if our if using pay core PSK if

666
00:35:45,710 --> 00:35:49,240
the part if the password is same for

667
00:35:47,390 --> 00:35:52,940
everybody I'd known by that you know

668
00:35:49,240 --> 00:35:54,169
everybody so so I mean it's nobody

669
00:35:52,940 --> 00:35:57,260
follows or of any of anything what's

670
00:35:54,170 --> 00:35:59,090
right we are you know losing anyway if

671
00:35:57,260 --> 00:36:01,180
they use weak passwords one letter

672
00:35:59,090 --> 00:36:04,670
passwords it really doesn't matter

673
00:36:01,180 --> 00:36:09,740
whether you are using fake or PSK

674
00:36:04,670 --> 00:36:12,200
alright ok let's let's not make

675
00:36:09,740 --> 00:36:14,089
arguments from an absurd position you

676
00:36:12,200 --> 00:36:17,089
know the absurdity of somebody using a

677
00:36:14,090 --> 00:36:19,820
one a one letter password you know is is

678
00:36:17,090 --> 00:36:24,320
not not as a serious argument

679
00:36:19,820 --> 00:36:26,360
so what ok so we have a little little a

680
00:36:24,320 --> 00:36:35,360
little more discussion to be had on the

681
00:36:26,360 --> 00:36:37,880
PSK topic but I think if we decide to

682
00:36:35,360 --> 00:36:42,980
have the PSK in a separate dropped and I

683
00:36:37,880 --> 00:36:45,890
think the the EPL s103 draft is ready to

684
00:36:42,980 --> 00:36:48,200
proceed I think there's still a question

685
00:36:45,890 --> 00:36:49,850
on identity still we need to make sure

686
00:36:48,200 --> 00:36:52,549
that that's clear and there's no

687
00:36:49,850 --> 00:36:57,380
ambiguity and in there even with

688
00:36:52,550 --> 00:36:59,450
certificates so I just we want to make

689
00:36:57,380 --> 00:37:04,550
sure we verify that what questions

690
00:36:59,450 --> 00:37:08,509
that so how you know what what goes in

691
00:37:04,550 --> 00:37:10,430
the identity field I mean so there seems

692
00:37:08,510 --> 00:37:12,410
like there's still confusion and Elliott

693
00:37:10,430 --> 00:37:16,339
was bringing up there may need to be a

694
00:37:12,410 --> 00:37:20,589
specific identity format so in general

695
00:37:16,340 --> 00:37:26,050
the document does not really specify I

696
00:37:20,590 --> 00:37:28,690
think the NAI so I think it needs work I

697
00:37:26,050 --> 00:37:31,910
don't have the specific right here so

698
00:37:28,690 --> 00:37:35,330
but let's it may be fine but we need to

699
00:37:31,910 --> 00:37:40,879
make sure that it's fine okay can we I

700
00:37:35,330 --> 00:37:45,230
am you only see the atom in four PS km

701
00:37:40,880 --> 00:37:46,640
for certificate extensions I don't know

702
00:37:45,230 --> 00:37:49,420
if there is something specific for each

703
00:37:46,640 --> 00:37:53,150
LS in that case we should make sure to

704
00:37:49,420 --> 00:37:59,270
very concretely take that discussion on

705
00:37:53,150 --> 00:38:01,490
the list yeah okay next yeah

706
00:37:59,270 --> 00:38:08,240
so this is about certificate handling

707
00:38:01,490 --> 00:38:11,419
and I have serious slides on this this

708
00:38:08,240 --> 00:38:16,959
has been no comments since the last time

709
00:38:11,420 --> 00:38:22,990
and no updates if I interpret positively

710
00:38:16,960 --> 00:38:26,390
the draft is done and ready to proceed

711
00:38:22,990 --> 00:38:31,430
so I would see as the working group last

712
00:38:26,390 --> 00:38:37,310
call if any at least that forces people

713
00:38:31,430 --> 00:38:39,020
to review just has anybody reviewed the

714
00:38:37,310 --> 00:38:41,920
latest draft I mean I don't know if it's

715
00:38:39,020 --> 00:38:41,920
changed at all but

716
00:38:51,700 --> 00:38:57,520
say well we'll begin our working group

717
00:38:54,110 --> 00:38:57,520
last call sometime after this meeting

718
00:39:10,360 --> 00:39:22,150
how can you put yourself in the queue

719
00:39:13,520 --> 00:39:22,150
you're up sir

720
00:39:23,170 --> 00:39:34,520
coming through okay yes excellent okay

721
00:39:27,830 --> 00:39:38,960
so on this is just a summary my thoughts

722
00:39:34,520 --> 00:39:42,620
on identity so as you're saying earlier

723
00:39:38,960 --> 00:39:47,420
the the current epls document is a

724
00:39:42,620 --> 00:39:49,970
little thin on the use of na eyes and

725
00:39:47,420 --> 00:39:56,780
when and where so if you go through go

726
00:39:49,970 --> 00:39:58,580
to the next slide there was some

727
00:39:56,780 --> 00:40:00,350
discussion I had sent a long email to

728
00:39:58,580 --> 00:40:02,509
the list which I couldn't find in there

729
00:40:00,350 --> 00:40:04,549
in the list archives there's the short

730
00:40:02,510 --> 00:40:06,140
summary is that we should I think we

731
00:40:04,550 --> 00:40:10,670
should really recommend using the

732
00:40:06,140 --> 00:40:12,710
anonymous any eyes everywhere clearly

733
00:40:10,670 --> 00:40:15,380
people should be allowed to do other

734
00:40:12,710 --> 00:40:18,530
things if they want but then it won't be

735
00:40:15,380 --> 00:40:21,620
compatible with roaming which is a very

736
00:40:18,530 --> 00:40:24,020
very common use case so if you go to the

737
00:40:21,620 --> 00:40:28,759
next slide there's some additional

738
00:40:24,020 --> 00:40:33,759
discussions so this is sort of the

739
00:40:28,760 --> 00:40:36,620
summary of which identities are where

740
00:40:33,760 --> 00:40:39,200
you have the username which is used in

741
00:40:36,620 --> 00:40:43,160
triple-a routing the eep respond slash

742
00:40:39,200 --> 00:40:45,859
identity and then the PSK identity or

743
00:40:43,160 --> 00:40:51,140
certificate common name which is

744
00:40:45,860 --> 00:40:55,520
commonly used in TLS they're often the

745
00:40:51,140 --> 00:40:57,500
same they don't have to be I think we

746
00:40:55,520 --> 00:41:00,410
can agree that the eep identity and the

747
00:40:57,500 --> 00:41:01,940
username have to be identical on their

748
00:41:00,410 --> 00:41:05,089
requirements in the various Earth's

749
00:41:01,940 --> 00:41:08,270
needs to copy the EEP identity into the

750
00:41:05,090 --> 00:41:10,510
user name field so if we go to the next

751
00:41:08,270 --> 00:41:10,509
slide

752
00:41:13,750 --> 00:41:18,800
common practice is that the EP identity

753
00:41:17,090 --> 00:41:21,650
is derived from the common name for

754
00:41:18,800 --> 00:41:28,180
certificates a lot of you eyes also

755
00:41:21,650 --> 00:41:28,180
allow people to enter an explicit outer

756
00:41:29,230 --> 00:41:38,990
username for P TLS or R or T TLS with

757
00:41:36,380 --> 00:41:41,090
TLS 1.2 SOF identities exactly the

758
00:41:38,990 --> 00:41:43,220
common name because there's the

759
00:41:41,090 --> 00:41:46,490
certificates they're usually public for

760
00:41:43,220 --> 00:41:49,879
TLS 1.3 key identity should be

761
00:41:46,490 --> 00:41:53,060
anonymized so we can say that generally

762
00:41:49,880 --> 00:41:55,820
instead of having the user configured

763
00:41:53,060 --> 00:41:57,890
two different things on we could just

764
00:41:55,820 --> 00:41:59,330
say the comment the EP identity is

765
00:41:57,890 --> 00:42:03,589
derived from the common name by using

766
00:41:59,330 --> 00:42:10,880
the realm portion so it's routable and

767
00:42:03,590 --> 00:42:17,060
maintains user privacy so next slide so

768
00:42:10,880 --> 00:42:21,160
for PSK identities whether or not we

769
00:42:17,060 --> 00:42:26,210
allow ETLs use PSK for pre provisioned

770
00:42:21,160 --> 00:42:30,109
PSK identities we can recommend using

771
00:42:26,210 --> 00:42:32,270
the NAI form when we know that works or

772
00:42:30,110 --> 00:42:36,260
if there's a need for identities which

773
00:42:32,270 --> 00:42:38,210
do not match the NIE requirements we can

774
00:42:36,260 --> 00:42:40,550
just say people use whatever they want

775
00:42:38,210 --> 00:42:43,190
for the PS key identity and then

776
00:42:40,550 --> 00:42:46,310
separately use the NAI for the eep

777
00:42:43,190 --> 00:42:48,170
identity right so the idea here is it

778
00:42:46,310 --> 00:42:51,380
doesn't really matter what the PST

779
00:42:48,170 --> 00:42:55,660
identity is we know that the anonymous

780
00:42:51,380 --> 00:43:00,460
Nai you always works for routing I'm

781
00:42:55,660 --> 00:43:04,670
super go to the next slide and

782
00:43:00,460 --> 00:43:06,860
resumption the eep application doesn't

783
00:43:04,670 --> 00:43:09,710
necessarily control the derivation of

784
00:43:06,860 --> 00:43:11,540
the PST identity for a resumption so

785
00:43:09,710 --> 00:43:14,570
it's safest to assume that it's just

786
00:43:11,540 --> 00:43:18,140
it's opaque blob which is not utf-8 and

787
00:43:14,570 --> 00:43:18,859
not an nai and therefore cannot be used

788
00:43:18,140 --> 00:43:21,739
for the EEP

789
00:43:18,859 --> 00:43:27,019
so again we're left with and nonnamous

790
00:43:21,739 --> 00:43:30,499
nai which then allows the assumption to

791
00:43:27,019 --> 00:43:33,229
be routable and decouples routing from

792
00:43:30,499 --> 00:43:36,410
the PSG identity so we can use different

793
00:43:33,229 --> 00:43:38,808
identities for every resumption which

794
00:43:36,410 --> 00:43:40,819
gives us some level of privacy even

795
00:43:38,809 --> 00:43:44,299
though the MAC address is usually

796
00:43:40,819 --> 00:43:45,829
they're always the same and then it

797
00:43:44,299 --> 00:43:49,549
doesn't affect read ability of the

798
00:43:45,829 --> 00:43:55,130
packet some of my earlier comments were

799
00:43:49,549 --> 00:43:58,959
that the resumption session should use

800
00:43:55,130 --> 00:44:03,289
the same EEP identity as the original

801
00:43:58,959 --> 00:44:06,589
authentication so if you're using an

802
00:44:03,289 --> 00:44:09,559
actual username for the original TLS

803
00:44:06,589 --> 00:44:13,849
authentication it's probably a good idea

804
00:44:09,559 --> 00:44:17,660
to use an actual username for the

805
00:44:13,849 --> 00:44:19,819
resumption simply for consistency if you

806
00:44:17,660 --> 00:44:22,420
use the anonymous nai everywhere then

807
00:44:19,819 --> 00:44:30,799
you should just use it everywhere so

808
00:44:22,420 --> 00:44:35,150
next slide so yeah we assume that

809
00:44:30,799 --> 00:44:37,729
generally medication will be routed if

810
00:44:35,150 --> 00:44:39,319
it's not being routed and identities

811
00:44:37,729 --> 00:44:43,848
don't really matter and people can do

812
00:44:39,319 --> 00:44:46,400
whatever they want but in general it's

813
00:44:43,849 --> 00:44:50,499
good practice and people pretty much

814
00:44:46,400 --> 00:44:52,999
always do this nowadays even if the

815
00:44:50,499 --> 00:44:56,439
requests aren't routable they just use

816
00:44:52,999 --> 00:45:00,379
the anonymous na eyes everywhere

817
00:44:56,439 --> 00:45:03,019
and I guess the the my recommendation

818
00:45:00,380 --> 00:45:06,829
haven't looked into this is is I think

819
00:45:03,019 --> 00:45:10,609
the EEP TLS draft should be clearer as

820
00:45:06,829 --> 00:45:14,869
to which nai it's so which identity it's

821
00:45:10,609 --> 00:45:18,038
recommending and why and I think it

822
00:45:14,869 --> 00:45:22,549
should recommend the anonymous nai

823
00:45:18,039 --> 00:45:27,349
everywhere and I think going forward a

824
00:45:22,549 --> 00:45:29,150
litte a little bit the TLS 1.34 other

825
00:45:27,349 --> 00:45:32,720
you types documents would probably also

826
00:45:29,150 --> 00:45:34,850
do the same thing

827
00:45:32,720 --> 00:45:40,850
that's it for these slides if we go to

828
00:45:34,850 --> 00:45:41,390
the next one I think nope I think that's

829
00:45:40,850 --> 00:45:49,100
it

830
00:45:41,390 --> 00:45:52,160
questions comments Alan it's Elliott I

831
00:45:49,100 --> 00:45:53,270
really mostly agree with pretty much

832
00:45:52,160 --> 00:45:57,529
everything you said I had a question

833
00:45:53,270 --> 00:46:01,490
about handling normal TLS certs if you

834
00:45:57,530 --> 00:46:04,720
go back to like that that slide not PSK

835
00:46:01,490 --> 00:46:07,430
but just the the other other form of a

836
00:46:04,720 --> 00:46:09,230
is your presumption that there is

837
00:46:07,430 --> 00:46:14,029
something that approximates a realm

838
00:46:09,230 --> 00:46:16,550
within the cert generally is the common

839
00:46:14,030 --> 00:46:21,070
name and people use that but you know

840
00:46:16,550 --> 00:46:24,350
based on other discussions on the list

841
00:46:21,070 --> 00:46:27,650
we probably should have a separate nai

842
00:46:24,350 --> 00:46:30,380
realm o ID in the certificate too and

843
00:46:27,650 --> 00:46:33,740
then that can be used for the anonymous

844
00:46:30,380 --> 00:46:37,190
outer identity that's a whole effort

845
00:46:33,740 --> 00:46:39,770
discussion as to where that nai which

846
00:46:37,190 --> 00:46:42,440
which field of the cert that nai comes

847
00:46:39,770 --> 00:46:44,120
from is a separate discussion with I for

848
00:46:42,440 --> 00:46:46,910
now I'm just waving my hands and going

849
00:46:44,120 --> 00:46:49,190
it's in there somewhere if the search

850
00:46:46,910 --> 00:46:52,819
says it's for example.com we probably

851
00:46:49,190 --> 00:46:57,620
want to use example.com in the identity

852
00:46:52,820 --> 00:46:59,180
as an anonymous realm so the reason I

853
00:46:57,620 --> 00:47:01,130
mention it is that there are some

854
00:46:59,180 --> 00:47:05,750
implications here relating to I Triple E

855
00:47:01,130 --> 00:47:09,170
8o 2.1 AR which has no such form as I as

856
00:47:05,750 --> 00:47:10,880
I understand it and so I like your

857
00:47:09,170 --> 00:47:14,390
answer earlier which is just use

858
00:47:10,880 --> 00:47:16,130
anonymous na eyes but what if that has

859
00:47:14,390 --> 00:47:18,620
other implications we should explore

860
00:47:16,130 --> 00:47:20,450
them I don't think it has other

861
00:47:18,620 --> 00:47:22,790
anonymous implications this is really

862
00:47:20,450 --> 00:47:26,569
the text on this slide is really more

863
00:47:22,790 --> 00:47:30,470
just background as to what people mostly

864
00:47:26,570 --> 00:47:32,630
use now in the common on derivation the

865
00:47:30,470 --> 00:47:34,609
common practice and after going through

866
00:47:32,630 --> 00:47:36,170
this and sort of running down the

867
00:47:34,610 --> 00:47:39,140
checklist of all the different

868
00:47:36,170 --> 00:47:42,920
possibilities everything comes out with

869
00:47:39,140 --> 00:47:45,770
use the anonymous nei so I think that

870
00:47:42,920 --> 00:47:49,100
should be the recommendation in depend

871
00:47:45,770 --> 00:47:51,080
why it's worth having an explanation but

872
00:47:49,100 --> 00:47:52,640
it's worth also just having the

873
00:47:51,080 --> 00:47:54,470
recommendation of you know just use the

874
00:47:52,640 --> 00:47:59,000
anonymous nai everywhere always no

875
00:47:54,470 --> 00:48:00,529
matter what yeah you're not sorry you

876
00:47:59,000 --> 00:48:03,320
say that it should be a recommendation

877
00:48:00,530 --> 00:48:05,270
but the EPL s103 draught will already

878
00:48:03,320 --> 00:48:07,550
have a recommendation it says that

879
00:48:05,270 --> 00:48:09,800
anonymous knives are mandatory to

880
00:48:07,550 --> 00:48:12,860
support and recommended to use so I

881
00:48:09,800 --> 00:48:16,190
don't I don't really see concretely what

882
00:48:12,860 --> 00:48:18,080
you are when we think for this

883
00:48:16,190 --> 00:48:22,100
certificate use case for the biggest Kay

884
00:48:18,080 --> 00:48:27,049
use case you have local other I'm

885
00:48:22,100 --> 00:48:31,549
speaking as an implementer I I guess the

886
00:48:27,050 --> 00:48:35,840
text on identities is buried inside of

887
00:48:31,550 --> 00:48:41,180
the resumption section so it's not clear

888
00:48:35,840 --> 00:48:44,450
that for normal authentication you

889
00:48:41,180 --> 00:48:46,879
should use the anonymous nai I had some

890
00:48:44,450 --> 00:48:49,399
tax I sent to the list I think I also

891
00:48:46,880 --> 00:48:51,260
open a github request I think it would

892
00:48:49,400 --> 00:48:55,190
help to have a separate section in the

893
00:48:51,260 --> 00:48:57,350
document saying identities which you can

894
00:48:55,190 --> 00:48:59,600
then discuss hey some certificates have

895
00:48:57,350 --> 00:49:03,830
these identity some don't for resumption

896
00:48:59,600 --> 00:49:08,750
in any case for this list of reasons

897
00:49:03,830 --> 00:49:12,100
here's why for ETLs the eep identity

898
00:49:08,750 --> 00:49:15,590
should be the anonymous nai realm

899
00:49:12,100 --> 00:49:17,240
because i guess for me it's it's not

900
00:49:15,590 --> 00:49:19,490
clear if that text is buried in the

901
00:49:17,240 --> 00:49:22,339
resumption section it's not clear to me

902
00:49:19,490 --> 00:49:24,919
as an implement or reading this that

903
00:49:22,340 --> 00:49:27,170
this field which is separate from

904
00:49:24,920 --> 00:49:31,100
resumption should have a particular

905
00:49:27,170 --> 00:49:35,990
value for particular reasons sure so

906
00:49:31,100 --> 00:49:40,839
mobile mic resistant which is that you

907
00:49:35,990 --> 00:49:43,640
know at in some systems i have seen the

908
00:49:40,840 --> 00:49:44,600
radius server make different suggestions

909
00:49:43,640 --> 00:49:48,200
of different methods for different

910
00:49:44,600 --> 00:49:51,049
people right so what that means is that

911
00:49:48,200 --> 00:49:53,210
there can be more than one i done more

912
00:49:51,050 --> 00:49:56,120
than one anonymous in AI used by our an

913
00:49:53,210 --> 00:49:57,590
organization say they decide i security

914
00:49:56,120 --> 00:49:59,400
users are going to all be forced to use

915
00:49:57,590 --> 00:50:03,020
the apt less and lower security

916
00:49:59,400 --> 00:50:05,849
users use something else teep whatever

917
00:50:03,020 --> 00:50:07,680
and it's worth thinking that the the AP

918
00:50:05,849 --> 00:50:10,829
identity right is not method specific

919
00:50:07,680 --> 00:50:12,419
it's for any method so we're really

920
00:50:10,829 --> 00:50:15,089
talking about here kind of upgrading

921
00:50:12,420 --> 00:50:18,329
privacy for really everything not really

922
00:50:15,089 --> 00:50:20,490
specific to EB TLS and I guess my point

923
00:50:18,329 --> 00:50:22,349
is that when you're asked for an

924
00:50:20,490 --> 00:50:24,328
identity you don't necessarily know what

925
00:50:22,349 --> 00:50:25,980
method you're going to use so saying

926
00:50:24,329 --> 00:50:27,359
this is this is the identity you should

927
00:50:25,980 --> 00:50:29,329
use for EB atilla's those are not

928
00:50:27,359 --> 00:50:40,859
necessarily correlated with each other

929
00:50:29,329 --> 00:50:42,299
oh okay yeah I mean to a certain extent

930
00:50:40,859 --> 00:50:45,779
yes but I think we still need to have

931
00:50:42,299 --> 00:50:49,170
some recommendation for the implementers

932
00:50:45,779 --> 00:50:52,559
of ETLs as to when they're trying to

933
00:50:49,170 --> 00:50:54,210
negotiate TLS they need to have a have

934
00:50:52,559 --> 00:50:56,069
an initial starting point for the

935
00:50:54,210 --> 00:50:57,960
identity and that's where the

936
00:50:56,069 --> 00:51:08,089
recommendation of this anonymous nei

937
00:50:57,960 --> 00:51:08,089
comes from okay I think that's it then

938
00:51:08,450 --> 00:51:15,020
okay thanks I think we'll have some more

939
00:51:12,299 --> 00:51:15,020
discussion on that

940
00:51:22,460 --> 00:51:33,900
Allen I guess it's it's still you so can

941
00:51:27,570 --> 00:51:37,260
you join the queue yeah okay I don't

942
00:51:33,900 --> 00:51:39,000
have a lot to add on this document I

943
00:51:37,260 --> 00:51:41,369
think there's just one slide if we go to

944
00:51:39,000 --> 00:51:45,300
the next one

945
00:51:41,369 --> 00:51:47,940
I think the documents okay did get a

946
00:51:45,300 --> 00:51:52,050
response from Microsoft supporting this

947
00:51:47,940 --> 00:51:55,560
approach for peope it's not clear what

948
00:51:52,050 --> 00:51:58,490
to do with fast the text in the document

949
00:51:55,560 --> 00:52:02,779
is sort of my initial stab in the dark

950
00:51:58,490 --> 00:52:05,970
but it would be good to actually have

951
00:52:02,780 --> 00:52:10,590
some review of that for fast and maybe

952
00:52:05,970 --> 00:52:13,529
something from implementers saying that

953
00:52:10,590 --> 00:52:15,869
this works and there's interoperable but

954
00:52:13,530 --> 00:52:21,980
I don't think anyone's really done much

955
00:52:15,869 --> 00:52:24,119
of anything with with fast and TLS 1.3 I

956
00:52:21,980 --> 00:52:28,740
think based on discussion on the list

957
00:52:24,119 --> 00:52:32,490
the T pop dates probably belong here and

958
00:52:28,740 --> 00:52:34,229
then I think the document should be

959
00:52:32,490 --> 00:52:37,439
published close in time to the ETLs

960
00:52:34,230 --> 00:52:39,510
document I know the the response from

961
00:52:37,440 --> 00:52:42,390
Microsoft was that they wouldn't touch

962
00:52:39,510 --> 00:52:47,130
anything including epls until they could

963
00:52:42,390 --> 00:52:53,160
rev all the other TLS types - or TLS

964
00:52:47,130 --> 00:52:55,500
based EGH types I know that e TLS is

965
00:52:53,160 --> 00:52:58,529
implemented for TLS 1.3 is implemented

966
00:52:55,500 --> 00:53:02,940
in WPA supplicant I don't think there's

967
00:52:58,530 --> 00:53:05,280
been any progress on P port or TTLs

968
00:53:02,940 --> 00:53:08,580
they're the same thing in my

969
00:53:05,280 --> 00:53:11,640
implementation mostly because we're not

970
00:53:08,580 --> 00:53:13,830
really sure what to do so if we can get

971
00:53:11,640 --> 00:53:15,509
some additional feedback here and I

972
00:53:13,830 --> 00:53:17,549
think we can get the various open source

973
00:53:15,510 --> 00:53:19,710
people to update everything and

974
00:53:17,550 --> 00:53:22,349
implement everything and then we know it

975
00:53:19,710 --> 00:53:24,150
works I think we just need consensus

976
00:53:22,349 --> 00:53:26,550
from the working group that yes this is

977
00:53:24,150 --> 00:53:33,589
okay and we should we should be moving

978
00:53:26,550 --> 00:53:33,589
forward with this questions

979
00:53:34,559 --> 00:53:42,369
so are you are you in touch with folks

980
00:53:38,349 --> 00:53:43,930
who can help with teep information

981
00:53:42,369 --> 00:53:45,819
because I think that's been a common

982
00:53:43,930 --> 00:53:48,640
open issues that we have some errata

983
00:53:45,819 --> 00:53:50,259
still open and there's been some

984
00:53:48,640 --> 00:53:51,460
discussion but not quite enough and I

985
00:53:50,259 --> 00:53:55,079
know folks are talking about

986
00:53:51,460 --> 00:53:58,869
implementations want to make sure that

987
00:53:55,079 --> 00:54:03,220
we have the right folks involved so that

988
00:53:58,869 --> 00:54:06,279
we can get the document updated in a

989
00:54:03,220 --> 00:54:10,269
reasonable amount of time so the word

990
00:54:06,279 --> 00:54:12,789
out to implementers yeah it's basically

991
00:54:10,269 --> 00:54:15,129
what's what's been on the mailing list

992
00:54:12,789 --> 00:54:17,470
I know Microsoft was saying that

993
00:54:15,130 --> 00:54:25,749
recently they have I believe they have

994
00:54:17,470 --> 00:54:28,058
teep in recent previews but yeah there's

995
00:54:25,749 --> 00:54:29,980
been no sort of coordinated effort from

996
00:54:28,059 --> 00:54:32,619
implementers to get in a room and go

997
00:54:29,980 --> 00:54:36,970
this is what we've done let's check that

998
00:54:32,619 --> 00:54:38,650
it works it's mainly just discussions on

999
00:54:36,970 --> 00:54:39,578
the mailing list going I think this is

1000
00:54:38,650 --> 00:54:42,789
what we should do

1001
00:54:39,579 --> 00:54:45,369
so I think I'll trying to reach out to

1002
00:54:42,789 --> 00:54:48,069
people behind the scenes and try and get

1003
00:54:45,369 --> 00:54:50,619
some no on-the-record statements but

1004
00:54:48,069 --> 00:54:56,410
that might take a while in the meantime

1005
00:54:50,619 --> 00:54:59,829
I think the documents mostly okay my

1006
00:54:56,410 --> 00:55:04,480
inclination is that given that peep and

1007
00:54:59,829 --> 00:55:09,579
TTLs are more widely used than teep and

1008
00:55:04,480 --> 00:55:12,730
easier to update if there's any concern

1009
00:55:09,579 --> 00:55:15,579
of a teep that causes delays of this

1010
00:55:12,730 --> 00:55:17,980
document I would prefer just to drop

1011
00:55:15,579 --> 00:55:20,829
fast and teep and just have a reference

1012
00:55:17,980 --> 00:55:23,499
of you know this is what we think might

1013
00:55:20,829 --> 00:55:26,220
work but we're not really sure and then

1014
00:55:23,499 --> 00:55:30,519
read it later so that we can we can rev

1015
00:55:26,220 --> 00:55:33,368
TLS and teep so int TLS and peep all at

1016
00:55:30,519 --> 00:55:36,328
the same time which which are extremely

1017
00:55:33,369 --> 00:55:36,329
widely used

1018
00:55:40,600 --> 00:55:58,180
I don't see any discussion on that okay

1019
00:55:54,610 --> 00:56:02,110
so I think we'll bring this to lists we

1020
00:55:58,180 --> 00:56:04,359
probably sure to have a discussion if if

1021
00:56:02,110 --> 00:56:06,400
it would help to get either having a

1022
00:56:04,360 --> 00:56:08,560
virtual interim where we get

1023
00:56:06,400 --> 00:56:11,020
implementers out together in the same

1024
00:56:08,560 --> 00:56:15,040
room or the same virtual room if that

1025
00:56:11,020 --> 00:56:20,040
would help to kind of work through some

1026
00:56:15,040 --> 00:56:20,040
issues I think that would Thanks

1027
00:56:35,050 --> 00:56:53,710
Tomas yes can you hear me yes okay I'll

1028
00:56:48,250 --> 00:56:55,410
give an overview of e noob and next

1029
00:56:53,710 --> 00:56:57,940
slide please

1030
00:56:55,410 --> 00:57:00,339
so I'll start with a quick overview of

1031
00:56:57,940 --> 00:57:02,380
the protocol then the draft status and

1032
00:57:00,340 --> 00:57:05,710
then at the end I have a couple of

1033
00:57:02,380 --> 00:57:08,230
technical issues that may be of interest

1034
00:57:05,710 --> 00:57:12,910
one is how we use deny and then about

1035
00:57:08,230 --> 00:57:17,170
roaming okay so what problem does a be

1036
00:57:12,910 --> 00:57:19,720
noob into soul well as we know this

1037
00:57:17,170 --> 00:57:22,930
currently no out of mana indication

1038
00:57:19,720 --> 00:57:25,330
method for EAP and the need for this

1039
00:57:22,930 --> 00:57:30,279
method has now been identified in the

1040
00:57:25,330 --> 00:57:34,140
new charter for the working group and ap

1041
00:57:30,280 --> 00:57:42,340
noob is one solution for that problem

1042
00:57:34,140 --> 00:57:45,910
next slide and as a quick overview of

1043
00:57:42,340 --> 00:57:49,600
the protocol it's an EAP method for user

1044
00:57:45,910 --> 00:57:52,509
assisted out-of-band authentication for

1045
00:57:49,600 --> 00:57:56,020
example the user could scan a dynamic QR

1046
00:57:52,510 --> 00:58:00,910
code or endeth tag or read a blinking

1047
00:57:56,020 --> 00:58:03,280
light with a mobile phone to deliver the

1048
00:58:00,910 --> 00:58:07,779
out-of-band message between the peer and

1049
00:58:03,280 --> 00:58:11,350
the server and this is a bootstrapping

1050
00:58:07,780 --> 00:58:14,140
method so that when the out of band or

1051
00:58:11,350 --> 00:58:18,870
the dictation takes place the device is

1052
00:58:14,140 --> 00:58:22,180
also registered at the triple-a and then

1053
00:58:18,870 --> 00:58:25,569
it could that registration will later be

1054
00:58:22,180 --> 00:58:27,940
used for a fast reload indication of the

1055
00:58:25,570 --> 00:58:30,400
pre of the register devices so that no

1056
00:58:27,940 --> 00:58:37,960
more user interaction or other bad

1057
00:58:30,400 --> 00:58:40,870
communication is needed next slide here

1058
00:58:37,960 --> 00:58:44,440
is the architecture picture also as a

1059
00:58:40,870 --> 00:58:47,799
reminder the main trick here is to do in

1060
00:58:44,440 --> 00:58:48,430
band communication over EAP between the

1061
00:58:47,800 --> 00:58:53,680
nudie bar

1062
00:58:48,430 --> 00:58:57,390
and then the triple a server and do most

1063
00:58:53,680 --> 00:59:00,879
of the communication in band / EAP

1064
00:58:57,390 --> 00:59:05,098
cryptographic handshake and then have

1065
00:59:00,880 --> 00:59:08,349
one user assist the elder and methods to

1066
00:59:05,099 --> 00:59:12,279
authenticate that in band key exchange

1067
00:59:08,349 --> 00:59:14,920
and this idea has now been copied by

1068
00:59:12,279 --> 00:59:17,710
some other specific agents and maybe I

1069
00:59:14,920 --> 00:59:20,710
should just to advertise and remind that

1070
00:59:17,710 --> 00:59:29,140
this origin is the idea is originates

1071
00:59:20,710 --> 00:59:31,539
from mojits PhD thesis ok next slide the

1072
00:59:29,140 --> 00:59:35,098
state of the draft is such that we have

1073
00:59:31,539 --> 00:59:36,869
worked a few years on it and on the

1074
00:59:35,099 --> 00:59:40,119
implementations and modeling

1075
00:59:36,869 --> 00:59:46,869
verification and the current draft

1076
00:59:40,119 --> 00:59:48,670
number is seven next slide there have

1077
00:59:46,869 --> 00:59:51,460
been no major updates to this version

1078
00:59:48,670 --> 00:59:53,650
the main thing is to update the sample

1079
00:59:51,460 --> 00:59:57,309
messages so that they are up-to-date

1080
00:59:53,650 --> 01:00:01,020
with the specification text and also

1081
00:59:57,309 --> 01:00:07,210
have been tested with the implementation

1082
01:00:01,020 --> 01:00:10,359
next slide so here is a summary of the

1083
01:00:07,210 --> 01:00:15,160
draft status I think it's pretty mature

1084
01:00:10,359 --> 01:00:18,759
now we have two implementations there is

1085
01:00:15,160 --> 01:00:22,920
the implementation for WPA supplicant

1086
01:00:18,760 --> 01:00:27,160
and hostapd done at other university and

1087
01:00:22,920 --> 01:00:32,710
then kentucky implementation mainly at

1088
01:00:27,160 --> 01:00:36,220
University of Murcia in Spain and then

1089
01:00:32,710 --> 01:00:39,579
we have model the protocol with formal

1090
01:00:36,220 --> 01:00:42,250
modeling and verification tools on one

1091
01:00:39,579 --> 01:00:44,880
hand the protocol state machines and in

1092
01:00:42,250 --> 01:00:49,109
our service resistance properties and

1093
01:00:44,880 --> 01:00:55,029
then the security protocol and

1094
01:00:49,109 --> 01:00:57,880
authentication and I think once the new

1095
01:00:55,029 --> 01:00:59,859
charter updated Charter is confirmed

1096
01:00:57,880 --> 01:01:01,960
this would be ready for a working group

1097
01:00:59,859 --> 01:01:06,578
adoption and

1098
01:01:01,960 --> 01:01:08,109
maybe if we can agree on that then that

1099
01:01:06,579 --> 01:01:13,240
can be confirmed on the mailing list

1100
01:01:08,109 --> 01:01:18,250
after the rich artery is complete so

1101
01:01:13,240 --> 01:01:21,819
this was the update on the protocol on

1102
01:01:18,250 --> 01:01:25,930
the specific case and then I still have

1103
01:01:21,819 --> 01:01:29,050
a few slides about the kind of the core

1104
01:01:25,930 --> 01:01:29,618
take more technical stuff so next slide

1105
01:01:29,050 --> 01:01:36,160
please

1106
01:01:29,619 --> 01:01:40,329
and you can still go one more and first

1107
01:01:36,160 --> 01:01:43,569
about how we use the NA so because the

1108
01:01:40,329 --> 01:01:46,690
device initially here is not registered

1109
01:01:43,569 --> 01:01:50,558
with the Triple A it doesn't have an IE

1110
01:01:46,690 --> 01:01:53,550
and for that reason we use this generic

1111
01:01:50,559 --> 01:01:57,339
nigh and especially the generic real

1112
01:01:53,550 --> 01:01:59,670
which is currently EAB dual of MIT but I

1113
01:01:57,339 --> 01:02:03,400
understand that it's better to use

1114
01:01:59,670 --> 01:02:08,619
reserver dot ARPA domain for this

1115
01:02:03,400 --> 01:02:11,589
purpose and why we need this generic

1116
01:02:08,619 --> 01:02:16,420
realme that is used for routing the EAB

1117
01:02:11,589 --> 01:02:19,960
noob or EAP requests from the new

1118
01:02:16,420 --> 01:02:23,650
unregistered peers to the correct

1119
01:02:19,960 --> 01:02:27,369
triple-a server and normally we would

1120
01:02:23,650 --> 01:02:31,210
expect the network administrators to

1121
01:02:27,369 --> 01:02:34,089
select a server for that network and

1122
01:02:31,210 --> 01:02:36,400
that handles this out-of-band

1123
01:02:34,089 --> 01:02:41,078
authentication an interaction with the

1124
01:02:36,400 --> 01:02:45,220
user and route the radius for the this

1125
01:02:41,079 --> 01:02:49,630
generic realm to that specialized server

1126
01:02:45,220 --> 01:02:53,399
and then immediately in the initial

1127
01:02:49,630 --> 01:03:00,130
exchange in the ap noob the server signs

1128
01:02:53,400 --> 01:03:03,309
appear ID and real to the pier and after

1129
01:03:00,130 --> 01:03:07,510
that those will be used for routing the

1130
01:03:03,309 --> 01:03:09,970
requests if there is no roaming then

1131
01:03:07,510 --> 01:03:10,869
they can continue to use the generic

1132
01:03:09,970 --> 01:03:13,660
real man

1133
01:03:10,869 --> 01:03:15,340
but the usually I guess it would be good

1134
01:03:13,660 --> 01:03:19,299
to assign realme for roaming

1135
01:03:15,340 --> 01:03:22,390
Persis so this is how we have solved

1136
01:03:19,300 --> 01:03:29,950
this night problem with the unregistered

1137
01:03:22,390 --> 01:03:32,859
devices in the beginning and then next

1138
01:03:29,950 --> 01:03:35,290
slide actually you can go one more if I

1139
01:03:32,860 --> 01:03:39,250
use the picture other than the text so I

1140
01:03:35,290 --> 01:03:43,060
want to explain a roaming question or a

1141
01:03:39,250 --> 01:03:46,890
problem how we handle roaming and then

1142
01:03:43,060 --> 01:03:50,259
what still hasn't been done about it

1143
01:03:46,890 --> 01:03:53,410
okay so here is the first simple roaming

1144
01:03:50,260 --> 01:03:56,680
scenario we register the device at home

1145
01:03:53,410 --> 01:04:00,549
and I use here any room between a couple

1146
01:03:56,680 --> 01:04:01,000
of universities as the example next

1147
01:04:00,550 --> 01:04:06,960
slide

1148
01:04:01,000 --> 01:04:08,950
and when PAP newb is used for

1149
01:04:06,960 --> 01:04:11,470
authenticating and registering the

1150
01:04:08,950 --> 01:04:16,990
device it initially uses this generic

1151
01:04:11,470 --> 01:04:20,770
real man ID and then the local Triple A

1152
01:04:16,990 --> 01:04:23,549
or a specialized radio server for the AV

1153
01:04:20,770 --> 01:04:30,220
noob will handle the CLP loop

1154
01:04:23,550 --> 01:04:35,080
authentication and next slide as part of

1155
01:04:30,220 --> 01:04:38,770
that process in the initial exchange the

1156
01:04:35,080 --> 01:04:45,340
Triple A assigns a peer ID and real OMA

1157
01:04:38,770 --> 01:04:47,110
to the device next slide and later the

1158
01:04:45,340 --> 01:04:50,700
same device if it moves to different

1159
01:04:47,110 --> 01:04:55,060
parts of the network it can use that

1160
01:04:50,700 --> 01:04:57,040
assigned na for roaming just as normal

1161
01:04:55,060 --> 01:04:59,230
there is nothing specific special about

1162
01:04:57,040 --> 01:05:02,890
this and this works well with the

1163
01:04:59,230 --> 01:05:04,840
current EAP noob specification so that's

1164
01:05:02,890 --> 01:05:10,450
the kind of roaming that we currently

1165
01:05:04,840 --> 01:05:13,150
support then in the following two slides

1166
01:05:10,450 --> 01:05:17,859
I want to talk some kind of what could

1167
01:05:13,150 --> 01:05:19,990
be done so now here is a user who is

1168
01:05:17,860 --> 01:05:22,150
already at the other parts of the

1169
01:05:19,990 --> 01:05:25,299
network and not in the whole network and

1170
01:05:22,150 --> 01:05:26,920
in this for a network it's wondering

1171
01:05:25,300 --> 01:05:29,180
when it has just purchased the first

1172
01:05:26,920 --> 01:05:34,789
device is wondering why

1173
01:05:29,180 --> 01:05:38,390
it can register that next slide the

1174
01:05:34,789 --> 01:05:41,900
problem they have is that we would need

1175
01:05:38,390 --> 01:05:45,368
to route the radius requests from this

1176
01:05:41,900 --> 01:05:48,650
forum triple-a to the home triple-a and

1177
01:05:45,369 --> 01:05:51,680
then if that was possible then we could

1178
01:05:48,650 --> 01:05:54,109
do the authentication with the EAP noob

1179
01:05:51,680 --> 01:05:56,089
but because the device now has the

1180
01:05:54,109 --> 01:06:01,160
generic ID and realm'

1181
01:05:56,089 --> 01:06:03,140
it cannot really connect your home or

1182
01:06:01,160 --> 01:06:05,629
the load the foreign triple-a doesn't

1183
01:06:03,140 --> 01:06:08,660
know where to route this request where

1184
01:06:05,630 --> 01:06:11,119
does the user want them and we don't

1185
01:06:08,660 --> 01:06:17,049
currently have a technical solution then

1186
01:06:11,119 --> 01:06:21,549
next slide this is the final slide so

1187
01:06:17,049 --> 01:06:24,170
the we think that there could be some

1188
01:06:21,549 --> 01:06:26,990
mechanism for the user to interact with

1189
01:06:24,170 --> 01:06:29,650
the foreign triple-a let's say a webpage

1190
01:06:26,990 --> 01:06:34,189
where it can request routing of the

1191
01:06:29,650 --> 01:06:38,349
radio requests for the new device to the

1192
01:06:34,190 --> 01:06:40,940
home triple-a and that would enable

1193
01:06:38,349 --> 01:06:43,549
registration of new devices while

1194
01:06:40,940 --> 01:06:47,210
roaming and this only needs to be done

1195
01:06:43,549 --> 01:06:49,940
once and what then when the EAP new

1196
01:06:47,210 --> 01:06:52,400
Association has been created the reordan

1197
01:06:49,940 --> 01:06:54,559
dication will again work as normal

1198
01:06:52,400 --> 01:06:58,640
roaming without any such special

1199
01:06:54,559 --> 01:07:02,150
interaction but this is just something

1200
01:06:58,640 --> 01:07:05,328
that we have been thinking about but

1201
01:07:02,150 --> 01:07:07,549
it's not specified how to do this in the

1202
01:07:05,329 --> 01:07:09,289
EAB noob specification we just have been

1203
01:07:07,549 --> 01:07:15,339
careful not to prevent this kind of

1204
01:07:09,289 --> 01:07:15,339
scenarios in the future that's all I had

1205
01:07:16,390 --> 01:07:20,920
if there are any questions or comments

1206
01:07:23,410 --> 01:07:27,038
this is a awarding list from the

1207
01:07:25,150 --> 01:07:28,930
University of Murcia I'd have to say

1208
01:07:27,039 --> 01:07:32,289
that I implemented the contain the

1209
01:07:28,930 --> 01:07:34,629
evening person for Kentucky I will send

1210
01:07:32,289 --> 01:07:37,450
a mail with the github project on the

1211
01:07:34,630 --> 01:07:43,289
mailing list what I implemented that

1212
01:07:37,450 --> 01:07:43,288
with until University great thank you a

1213
01:07:49,890 --> 01:07:58,410
vision wattage area from thesis research

1214
01:07:53,799 --> 01:08:01,509
India so I have a few comments from

1215
01:07:58,410 --> 01:08:04,118
different logistics perspective the

1216
01:08:01,509 --> 01:08:07,990
thing is that in Bangkok I mentioned

1217
01:08:04,119 --> 01:08:11,200
that considering the startup community

1218
01:08:07,990 --> 01:08:13,959
growing in the subcontinent level what

1219
01:08:11,200 --> 01:08:16,689
we have seen is that there's a gap in

1220
01:08:13,960 --> 01:08:19,630
terms of securing this I mean the

1221
01:08:16,689 --> 01:08:21,879
knowledge in terms of securing their

1222
01:08:19,630 --> 01:08:23,409
devices properly so they have good

1223
01:08:21,880 --> 01:08:26,469
sensor knowledge they have good

1224
01:08:23,408 --> 01:08:30,009
knowledge on the basic hardware but this

1225
01:08:26,469 --> 01:08:33,569
kind of solution as a plug-in can

1226
01:08:30,009 --> 01:08:37,389
actually help them for a better service

1227
01:08:33,569 --> 01:08:40,630
but the problem in terms of adopting the

1228
01:08:37,389 --> 01:08:44,889
solution that I see is that when these

1229
01:08:40,630 --> 01:08:48,639
companies they go to market their end

1230
01:08:44,889 --> 01:08:53,409
customer would not like to use anything

1231
01:08:48,639 --> 01:08:56,799
which is non-standard and also

1232
01:08:53,408 --> 01:08:59,670
implementation wise getting the the

1233
01:08:56,799 --> 01:09:02,679
numbers from Ayane is very important

1234
01:08:59,670 --> 01:09:08,889
because people don't really like to

1235
01:09:02,679 --> 01:09:12,580
change nativities inside so probably if

1236
01:09:08,889 --> 01:09:14,380
it is technically I mean it is at some

1237
01:09:12,580 --> 01:09:18,750
stage and there are implementations

1238
01:09:14,380 --> 01:09:21,429
already available open source probably

1239
01:09:18,750 --> 01:09:24,279
pushing it for adoption and

1240
01:09:21,429 --> 01:09:28,739
standardization might might find a new

1241
01:09:24,279 --> 01:09:28,739
opportunity that's all I wanted to say

1242
01:09:32,630 --> 01:09:37,830
this is Elliot I agree that it looks

1243
01:09:35,399 --> 01:09:41,839
pretty stable we're not ready to

1244
01:09:37,830 --> 01:09:44,460
implement yet at Cisco but others are

1245
01:09:41,839 --> 01:09:47,160
what I want to add though is I like your

1246
01:09:44,460 --> 01:09:48,779
discussion about these the and the I

1247
01:09:47,160 --> 01:09:50,630
we're basically following through

1248
01:09:48,779 --> 01:10:01,440
tracking that from a teep perspective

1249
01:09:50,630 --> 01:10:03,540
for onboarding yeah I think right now

1250
01:10:01,440 --> 01:10:05,849
we're waiting for the aren't their

1251
01:10:03,540 --> 01:10:07,460
charters currently an IAS G review so

1252
01:10:05,850 --> 01:10:09,750
we'll see what comes out of that and

1253
01:10:07,460 --> 01:10:15,350
hopefully once that goes through then

1254
01:10:09,750 --> 01:10:18,030
we'll be set to it adopt new work items

1255
01:10:15,350 --> 01:10:20,850
room engineer has the ad just to kind of

1256
01:10:18,030 --> 01:10:22,259
be precise the Charter we were through

1257
01:10:20,850 --> 01:10:24,030
the internal review of the ice G it's

1258
01:10:22,260 --> 01:10:28,730
going for external comment and then it

1259
01:10:24,030 --> 01:10:36,960
will come back I'm sorry

1260
01:10:28,730 --> 01:10:38,879
alright perfect so the practical process

1261
01:10:36,960 --> 01:10:40,560
in case what we did is the Charter

1262
01:10:38,880 --> 01:10:42,570
result first comes to the ice tree for a

1263
01:10:40,560 --> 01:10:44,340
quick look are you okay with that yes

1264
01:10:42,570 --> 01:10:46,320
we're okay with that then let's go to

1265
01:10:44,340 --> 01:10:48,000
the community is the community okay with

1266
01:10:46,320 --> 01:10:49,650
that and based on the community comments

1267
01:10:48,000 --> 01:10:51,270
and then comes back to the is G okay you

1268
01:10:49,650 --> 01:10:52,679
heard from the community are you now

1269
01:10:51,270 --> 01:11:01,140
really okay with it and then it gets

1270
01:10:52,680 --> 01:11:03,300
approved review that finished on on the

1271
01:11:01,140 --> 01:11:07,470
11th of November now it should is G on

1272
01:11:03,300 --> 01:11:09,690
their meeting on 5th of December yeah

1273
01:11:07,470 --> 01:11:11,910
the the external review period happens

1274
01:11:09,690 --> 01:11:15,349
just like a ITF last call basically and

1275
01:11:11,910 --> 01:11:20,519
then I is she gets checked out try at it

1276
01:11:15,350 --> 01:11:27,720
yeah Elliott into the Mike it's on the

1277
01:11:20,520 --> 01:11:30,150
teletype for the final ballot I have

1278
01:11:27,720 --> 01:11:32,790
been working with a DS who were at some

1279
01:11:30,150 --> 01:11:35,700
point in that lengthy process able to

1280
01:11:32,790 --> 01:11:39,360
say you can start operating as if the

1281
01:11:35,700 --> 01:11:40,710
new charter was in place so maybe we can

1282
01:11:39,360 --> 01:11:41,400
reach that at some point I don't know if

1283
01:11:40,710 --> 01:11:45,030
you are there but

1284
01:11:41,400 --> 01:11:48,659
Julia you can just say that and in

1285
01:11:45,030 --> 01:11:52,880
pursuit I mean I think we're we're

1286
01:11:48,659 --> 01:11:56,429
pretty close you know assuming that once

1287
01:11:52,880 --> 01:11:57,719
once it goes through then it I mean I

1288
01:11:56,429 --> 01:11:59,730
think we can wait for the teletraan i

1289
01:11:57,719 --> 01:12:02,429
don't think we kind of have holidays in

1290
01:11:59,730 --> 01:12:04,559
between then but yeah sorry sir just

1291
01:12:02,429 --> 01:12:08,730
checking gates it's on the teletrac for

1292
01:12:04,560 --> 01:12:10,830
December 5th so yes in two weeks so the

1293
01:12:08,730 --> 01:12:13,889
end is near for you know figuring out

1294
01:12:10,830 --> 01:12:15,690
the closure all right let's move to the

1295
01:12:13,890 --> 01:12:25,440
next presentation which i think is

1296
01:12:15,690 --> 01:12:29,580
Burt's key can somebody do a little

1297
01:12:25,440 --> 01:12:31,769
ether padding taking some notes

1298
01:12:29,580 --> 01:12:33,540
no we'll fill them in okay this will be

1299
01:12:31,770 --> 01:12:38,750
a pretty short presentation I hope next

1300
01:12:33,540 --> 01:12:42,090
slide please all right well these so

1301
01:12:38,750 --> 01:12:44,400
we've only been subtle to small changes

1302
01:12:42,090 --> 01:12:47,820
to eat deep risky but larger changes are

1303
01:12:44,400 --> 01:12:49,259
coming the first is that the doctor that

1304
01:12:47,820 --> 01:12:51,150
all the diagrams have been simplified

1305
01:12:49,260 --> 01:12:55,140
there was a lot of hopping over things

1306
01:12:51,150 --> 01:12:57,570
and where didn't we're in the swimming

1307
01:12:55,140 --> 01:13:00,210
line diagrams from UML that didn't need

1308
01:12:57,570 --> 01:13:03,210
to happen and so we cleaned a bunch of

1309
01:13:00,210 --> 01:13:04,920
that up so that's done we've done a

1310
01:13:03,210 --> 01:13:08,280
bunch of rework or over the discussion

1311
01:13:04,920 --> 01:13:11,090
around nai which is almost identical in

1312
01:13:08,280 --> 01:13:14,519
nature to what you just heard from noob

1313
01:13:11,090 --> 01:13:16,290
and in fact what I'll do is I'll to

1314
01:13:14,520 --> 01:13:18,150
compare text there because I don't see

1315
01:13:16,290 --> 01:13:20,850
any reason to be inconsistent with what

1316
01:13:18,150 --> 01:13:25,259
noob is doing that seem that seems about

1317
01:13:20,850 --> 01:13:29,340
right the last round of discussions we

1318
01:13:25,260 --> 01:13:32,760
we've realized is that at least thanks

1319
01:13:29,340 --> 01:13:35,190
to yoni there's a lot of there are a lot

1320
01:13:32,760 --> 01:13:37,320
of errata open on teep and so there's a

1321
01:13:35,190 --> 01:13:39,259
lot of work that needs to get done so

1322
01:13:37,320 --> 01:13:42,960
that tip can be more broadly implemented

1323
01:13:39,260 --> 01:13:44,640
and so a couple of things are happening

1324
01:13:42,960 --> 01:13:48,090
I think here I think we want to broaden

1325
01:13:44,640 --> 01:13:50,670
out the this to a teep update maybe even

1326
01:13:48,090 --> 01:13:52,770
de-emphasize the brewski part in this

1327
01:13:50,670 --> 01:13:54,420
just make it more of a Jenner generic

1328
01:13:52,770 --> 01:13:57,050
teep update but also

1329
01:13:54,420 --> 01:14:02,670
keep you know the additional opcodes

1330
01:13:57,050 --> 01:14:04,460
titl bees for brewski and so this ties

1331
01:14:02,670 --> 01:14:10,880
to a couple of different things

1332
01:14:04,460 --> 01:14:14,850
next slide please so here are all of the

1333
01:14:10,880 --> 01:14:17,880
errata 14 might so I just had a very

1334
01:14:14,850 --> 01:14:21,750
short comment on on this doing the

1335
01:14:17,880 --> 01:14:24,510
update of deep and brewski so what I

1336
01:14:21,750 --> 01:14:26,520
apply to my own drafts I I don't ask you

1337
01:14:24,510 --> 01:14:28,680
to do anything what I don't do myself so

1338
01:14:26,520 --> 01:14:31,200
I kind of recommend it to myself to

1339
01:14:28,680 --> 01:14:33,750
split the PSK part out I would kind of

1340
01:14:31,200 --> 01:14:36,000
recommend the same thing to you to put

1341
01:14:33,750 --> 01:14:38,670
the brewski part in a separate Draft and

1342
01:14:36,000 --> 01:14:40,500
fix the tea Parata as a separate

1343
01:14:38,670 --> 01:14:43,080
document the reason I'm saying this is

1344
01:14:40,500 --> 01:14:45,420
because now teep is finally getting

1345
01:14:43,080 --> 01:14:49,590
implemented in in Windows and and in

1346
01:14:45,420 --> 01:14:52,680
other places and which is very nice and

1347
01:14:49,590 --> 01:14:55,560
we should kind of fix the writin in in

1348
01:14:52,680 --> 01:14:58,560
one document and I'm not sure if like

1349
01:14:55,560 --> 01:15:00,360
all use cases would use brewski and like

1350
01:14:58,560 --> 01:15:02,310
my Windows laptop probably won't come

1351
01:15:00,360 --> 01:15:07,170
with I'll divide eaj divide E's and so

1352
01:15:02,310 --> 01:15:09,090
on so maybe as I said I'm a fan of small

1353
01:15:07,170 --> 01:15:12,930
modular document so maybe splitting them

1354
01:15:09,090 --> 01:15:15,510
up makes sense yeah and I tend to think

1355
01:15:12,930 --> 01:15:17,970
of it as the opposite actually Mohit

1356
01:15:15,510 --> 01:15:19,530
because from an implementer standpoint

1357
01:15:17,970 --> 01:15:22,220
if I have to end up reading a hundred

1358
01:15:19,530 --> 01:15:24,630
documents to implement implement teep or

1359
01:15:22,220 --> 01:15:26,690
actually they're peeps not the worst

1360
01:15:24,630 --> 01:15:29,010
offender here but there are a couple of

1361
01:15:26,690 --> 01:15:31,559
protocols in the ITF that are really bad

1362
01:15:29,010 --> 01:15:33,540
because you had to really have to sift

1363
01:15:31,560 --> 01:15:35,790
through a lot of documents I don't want

1364
01:15:33,540 --> 01:15:39,030
to start down that road if we can get

1365
01:15:35,790 --> 01:15:41,700
many of these are I think relatively

1366
01:15:39,030 --> 01:15:43,530
simple changes and nothing should

1367
01:15:41,700 --> 01:15:46,050
require that people have to implement a

1368
01:15:43,530 --> 01:15:47,730
brewski opcode in the process and that's

1369
01:15:46,050 --> 01:15:49,260
part of the rewrite would be that you

1370
01:15:47,730 --> 01:15:52,049
just don't you don't make them mandatory

1371
01:15:49,260 --> 01:15:53,940
but if you do here's what you do yeah I

1372
01:15:52,050 --> 01:15:55,710
should have added no strong opinion so I

1373
01:15:53,940 --> 01:15:56,940
leave it for the best of your judgement

1374
01:15:55,710 --> 01:15:59,010
yeah and there are a couple of things

1375
01:15:56,940 --> 01:16:02,009
here that are well outside say the

1376
01:15:59,010 --> 01:16:04,560
voucher aspects of ruski that probably

1377
01:16:02,010 --> 01:16:06,060
are worth capturing and teep that we

1378
01:16:04,560 --> 01:16:06,540
that just got missed the first time

1379
01:16:06,060 --> 01:16:07,250
around

1380
01:16:06,540 --> 01:16:11,210
so if

1381
01:16:07,250 --> 01:16:13,880
instance the get CSR attributes function

1382
01:16:11,210 --> 01:16:15,470
that that's in that's in brewski

1383
01:16:13,880 --> 01:16:17,360
probably is something that is needed

1384
01:16:15,470 --> 01:16:19,430
more in an EST log function which is

1385
01:16:17,360 --> 01:16:21,250
what teep tracked and so you probably

1386
01:16:19,430 --> 01:16:23,150
want to keep that one way or the other

1387
01:16:21,250 --> 01:16:25,430
even if at the end of the day we decided

1388
01:16:23,150 --> 01:16:29,299
to drop all the brewski the rest of the

1389
01:16:25,430 --> 01:16:31,400
voucher ones there are other aspects

1390
01:16:29,300 --> 01:16:33,110
here too which is if we're going to open

1391
01:16:31,400 --> 01:16:37,160
up t p-- Draft there may be a couple of

1392
01:16:33,110 --> 01:16:40,040
other tlvs that we want to add in any

1393
01:16:37,160 --> 01:16:45,620
case I'll come to that in a moment

1394
01:16:40,040 --> 01:16:47,360
I went through all of the the the errata

1395
01:16:45,620 --> 01:16:48,920
and some of them are really

1396
01:16:47,360 --> 01:16:52,429
straightforward right I mean you have

1397
01:16:48,920 --> 01:16:56,600
typos in various places that sorta

1398
01:16:52,430 --> 01:17:00,950
caught for instance and some of them are

1399
01:16:56,600 --> 01:17:03,680
also really rather simple clarifications

1400
01:17:00,950 --> 01:17:05,540
so you see where it says accept accept

1401
01:17:03,680 --> 01:17:07,370
accept these are just suggestions as to

1402
01:17:05,540 --> 01:17:10,070
how we might proceed in a drought in a

1403
01:17:07,370 --> 01:17:11,990
draft update not something we have to

1404
01:17:10,070 --> 01:17:17,179
decide on today but you know a rough cut

1405
01:17:11,990 --> 01:17:22,250
of where I see things going there are a

1406
01:17:17,180 --> 01:17:24,440
couple places where the the there's

1407
01:17:22,250 --> 01:17:27,650
pretty involved discussion that you Oni

1408
01:17:24,440 --> 01:17:31,009
provides especially when it comes to

1409
01:17:27,650 --> 01:17:32,780
some of the derivations and that those

1410
01:17:31,010 --> 01:17:36,920
those really do require more discussion

1411
01:17:32,780 --> 01:17:40,000
when it comes to tea some of them are

1412
01:17:36,920 --> 01:17:42,200
you know relatively simple like

1413
01:17:40,000 --> 01:17:45,080
relatively simple clarifications like

1414
01:17:42,200 --> 01:17:47,870
when to make sure using intermediate

1415
01:17:45,080 --> 01:17:49,160
results when you're actually used when

1416
01:17:47,870 --> 01:17:51,800
you're actually processing intermediate

1417
01:17:49,160 --> 01:17:54,200
results and don't try and return the the

1418
01:17:51,800 --> 01:17:55,610
crypto binding instead because the

1419
01:17:54,200 --> 01:17:57,530
intermediate results I think includes

1420
01:17:55,610 --> 01:18:01,009
essentially the same crypto bonding

1421
01:17:57,530 --> 01:18:02,450
functionality there's like no nice text

1422
01:18:01,010 --> 01:18:03,770
there was I felt pretty close to

1423
01:18:02,450 --> 01:18:05,929
accurate there was like corner cases

1424
01:18:03,770 --> 01:18:08,090
there like but what if you're actually

1425
01:18:05,930 --> 01:18:10,070
finished then you actually do want to do

1426
01:18:08,090 --> 01:18:11,720
the crypto binding and and he you know

1427
01:18:10,070 --> 01:18:16,820
that's it's just small word word

1428
01:18:11,720 --> 01:18:18,500
smithing along those lines so I think

1429
01:18:16,820 --> 01:18:19,670
these these are the list it's not a huge

1430
01:18:18,500 --> 01:18:20,900
list

1431
01:18:19,670 --> 01:18:23,270
and it's just something I think we could

1432
01:18:20,900 --> 01:18:24,860
knock through over the next couple of I

1433
01:18:23,270 --> 01:18:26,060
want to say next couple months we're

1434
01:18:24,860 --> 01:18:28,130
probably it's going to take a couple of

1435
01:18:26,060 --> 01:18:31,369
cycles the meetings actually to make

1436
01:18:28,130 --> 01:18:33,369
sure we're comfortable with this next

1437
01:18:31,369 --> 01:18:36,469
slide please

1438
01:18:33,369 --> 01:18:38,179
okay so these are sort of the new TTL

1439
01:18:36,469 --> 01:18:40,699
visas that are in there already and then

1440
01:18:38,179 --> 01:18:43,460
I think we just go through and sift and

1441
01:18:40,699 --> 01:18:45,530
decide which ones are useful to keep

1442
01:18:43,460 --> 01:18:47,869
which ones are which ones we might want

1443
01:18:45,530 --> 01:18:49,460
to add and I think this also ties quite

1444
01:18:47,869 --> 01:18:51,980
closely to the onboarding discussions

1445
01:18:49,460 --> 01:18:54,260
that we're having as to how we bind to

1446
01:18:51,980 --> 01:18:57,980
various onboarding mechanisms before you

1447
01:18:54,260 --> 01:19:00,590
even get to eat so for this purpose what

1448
01:18:57,980 --> 01:19:04,280
I'm suggesting is that we slow roll some

1449
01:19:00,590 --> 01:19:05,659
of this and if it really slow rolls then

1450
01:19:04,280 --> 01:19:07,580
I would have to agree with you Mohit

1451
01:19:05,659 --> 01:19:11,570
that we would want to separate out the

1452
01:19:07,580 --> 01:19:14,179
clarifications but if we're not gonna if

1453
01:19:11,570 --> 01:19:16,699
it's not going to be too slow then let's

1454
01:19:14,179 --> 01:19:20,600
just proceed and see how far we get so I

1455
01:19:16,699 --> 01:19:23,480
think there's one more side right so

1456
01:19:20,600 --> 01:19:25,489
yeah there's this interaction aspect so

1457
01:19:23,480 --> 01:19:29,030
how does teep interact with other 802 11

1458
01:19:25,489 --> 01:19:30,409
capabilities and EPP in particular how

1459
01:19:29,030 --> 01:19:32,780
do you do network selection from

1460
01:19:30,409 --> 01:19:36,500
wireless and how you bind from a DPP

1461
01:19:32,780 --> 01:19:38,509
applicator Madi PP transaction into t

1462
01:19:36,500 --> 01:19:39,469
p-- if you're going to do that and some

1463
01:19:38,510 --> 01:19:41,090
of that has to be worked out

1464
01:19:39,469 --> 01:19:42,290
architectural and this ties to the

1465
01:19:41,090 --> 01:19:44,600
discussion that we've been having about

1466
01:19:42,290 --> 01:19:46,760
you know how do you how these building

1467
01:19:44,600 --> 01:19:49,100
blocks look together and what does that

1468
01:19:46,760 --> 01:19:52,820
mean from a from a how do we discuss

1469
01:19:49,100 --> 01:19:54,230
that at the IETF so I don't want to blow

1470
01:19:52,820 --> 01:19:57,580
up the you know this into a huge issue

1471
01:19:54,230 --> 01:20:00,830
it's it's really not I don't think but

1472
01:19:57,580 --> 01:20:08,809
we are tying this is a little bit bigger

1473
01:20:00,830 --> 01:20:10,280
than just teep next slide okay so you

1474
01:20:08,810 --> 01:20:11,840
know one of the things we can do is just

1475
01:20:10,280 --> 01:20:14,840
have a section that goes through and

1476
01:20:11,840 --> 01:20:16,730
accepts you know or provides an update

1477
01:20:14,840 --> 01:20:18,619
on on how we deal with the errata then

1478
01:20:16,730 --> 01:20:21,980
we have another issue which is how do we

1479
01:20:18,619 --> 01:20:26,540
deal with TLS one three I sort of like

1480
01:20:21,980 --> 01:20:29,449
the idea of having that done and the

1481
01:20:26,540 --> 01:20:32,060
other document that Alan's doing one of

1482
01:20:29,449 --> 01:20:33,489
the reasons is that I don't think and

1483
01:20:32,060 --> 01:20:35,860
maybe in Ana's but there

1484
01:20:33,489 --> 01:20:37,690
rest of us aren't really TLS 1/3 experts

1485
01:20:35,860 --> 01:20:38,860
and if we could knock that through and

1486
01:20:37,690 --> 01:20:42,070
the other document I think it'd probably

1487
01:20:38,860 --> 01:20:43,530
be easier but I'm not religious about

1488
01:20:42,070 --> 01:20:46,749
that either

1489
01:20:43,530 --> 01:20:47,920
so you know the proposal here is less

1490
01:20:46,749 --> 01:20:50,260
focused on brewski

1491
01:20:47,920 --> 01:20:51,820
more focused on update as I said roll it

1492
01:20:50,260 --> 01:20:53,769
slow get some more code going we

1493
01:20:51,820 --> 01:20:59,469
actually have some code that we've done

1494
01:20:53,769 --> 01:21:02,619
in both WPA supplicant and in and in the

1495
01:20:59,469 --> 01:21:04,179
hostapd code that goes not yet we're

1496
01:21:02,619 --> 01:21:05,499
ready for release because it's slightly

1497
01:21:04,179 --> 01:21:07,269
embarrassing in terms of one or two

1498
01:21:05,499 --> 01:21:10,960
points and I would rather not be quite

1499
01:21:07,269 --> 01:21:13,110
that embarrassed so I think at the end

1500
01:21:10,960 --> 01:21:15,400
of the day you know probably in March

1501
01:21:13,110 --> 01:21:18,339
the document will look a little bit

1502
01:21:15,400 --> 01:21:19,629
cleaner in terms of how this looks and

1503
01:21:18,340 --> 01:21:22,269
that will be that will give you a good

1504
01:21:19,630 --> 01:21:23,860
view as to whether or not to adopt it's

1505
01:21:22,269 --> 01:21:27,880
the way I see it and that would be that

1506
01:21:23,860 --> 01:21:29,259
where I would leave things for now one

1507
01:21:27,880 --> 01:21:32,019
of the things I kind of hope is we could

1508
01:21:29,260 --> 01:21:35,499
knock through the errata that we don't

1509
01:21:32,019 --> 01:21:38,050
we can resolve the errata without having

1510
01:21:35,499 --> 01:21:39,760
them in the document and then just write

1511
01:21:38,050 --> 01:21:42,400
the document would just reflect the

1512
01:21:39,760 --> 01:21:42,760
changes right so that would be fine I

1513
01:21:42,400 --> 01:21:45,070
think

1514
01:21:42,760 --> 01:21:47,170
come on do that you know kind of in

1515
01:21:45,070 --> 01:21:48,400
process as we work through because some

1516
01:21:47,170 --> 01:21:50,679
of them yeah might take a little bit

1517
01:21:48,400 --> 01:21:52,210
longer but many of them like you say are

1518
01:21:50,679 --> 01:21:53,949
pretty straightforward and if we can

1519
01:21:52,210 --> 01:21:56,409
start knocking those off I think that

1520
01:21:53,949 --> 01:21:59,440
would be helpful okay so here's what I

1521
01:21:56,409 --> 01:22:02,469
propose then Joe I will take as an

1522
01:21:59,440 --> 01:22:05,530
action to post it to post these each as

1523
01:22:02,469 --> 01:22:08,199
an issue right each of the errata as an

1524
01:22:05,530 --> 01:22:10,659
issue with a proposal how to address

1525
01:22:08,199 --> 01:22:12,879
I suggest the chairs track them as

1526
01:22:10,659 --> 01:22:15,460
separate issues right and then you guys

1527
01:22:12,880 --> 01:22:17,469
have the option of closing or not and

1528
01:22:15,460 --> 01:22:21,400
and you know based on the working groups

1529
01:22:17,469 --> 01:22:23,170
view and then when once the as as we're

1530
01:22:21,400 --> 01:22:24,638
doing that in parallel we can also deal

1531
01:22:23,170 --> 01:22:29,519
with the other deep work that's being

1532
01:22:24,639 --> 01:22:39,780
done okay that sounds like a plan okay

1533
01:22:29,519 --> 01:22:39,780
I'm done cool text

1534
01:22:40,040 --> 01:23:00,000
miss pixel max hello everybody I'm max

1535
01:22:55,980 --> 01:23:02,549
Paula I'm here to talk about if creds we

1536
01:23:00,000 --> 01:23:04,770
already presented last time on this want

1537
01:23:02,550 --> 01:23:06,210
to provide some updates some

1538
01:23:04,770 --> 01:23:09,150
consideration about the work that we're

1539
01:23:06,210 --> 01:23:10,820
doing with its applicability and what

1540
01:23:09,150 --> 01:23:17,460
are the next steps that we envision

1541
01:23:10,820 --> 01:23:19,590
please okay so problem statement I work

1542
01:23:17,460 --> 01:23:22,560
for Kaiba labs so we have our members

1543
01:23:19,590 --> 01:23:24,870
our operators that tend to deploy a

1544
01:23:22,560 --> 01:23:27,120
different type of networks from Wi-Fi

1545
01:23:24,870 --> 01:23:31,230
with public access point to cellular

1546
01:23:27,120 --> 01:23:34,760
networks CBR s which is practically 4G

1547
01:23:31,230 --> 01:23:38,459
and Phi G doing in unlicensed spectrum

1548
01:23:34,760 --> 01:23:42,690
like multi fire or our networks like the

1549
01:23:38,460 --> 01:23:45,090
Oxus networks right however this one one

1550
01:23:42,690 --> 01:23:46,860
problem that our members always report

1551
01:23:45,090 --> 01:23:48,660
it's very difficult to manage to

1552
01:23:46,860 --> 01:23:51,240
dynamically manage these credentials for

1553
01:23:48,660 --> 01:23:53,580
their access networks and they really

1554
01:23:51,240 --> 01:23:56,160
would like to have the possibility to

1555
01:23:53,580 --> 01:23:58,260
change these credentials depending on

1556
01:23:56,160 --> 01:24:01,380
the risk level that that is that they

1557
01:23:58,260 --> 01:24:02,940
want to set in the networks right so

1558
01:24:01,380 --> 01:24:04,370
today is very difficult for them to have

1559
01:24:02,940 --> 01:24:06,360
a centralized system that does this

1560
01:24:04,370 --> 01:24:13,110
across different networks different

1561
01:24:06,360 --> 01:24:16,259
technologies next slide and of course we

1562
01:24:13,110 --> 01:24:17,519
don't use one type of credentials we use

1563
01:24:16,260 --> 01:24:19,200
different type of credentials like

1564
01:24:17,520 --> 01:24:21,240
username password secret keys and

1565
01:24:19,200 --> 01:24:23,790
certificates so certificate is one of

1566
01:24:21,240 --> 01:24:27,059
them and you know usually having

1567
01:24:23,790 --> 01:24:28,680
multiple methods can improve device

1568
01:24:27,060 --> 01:24:30,420
diversity in your in your network

1569
01:24:28,680 --> 01:24:33,990
sometimes and the possibility to switch

1570
01:24:30,420 --> 01:24:36,150
between between type of credentials and

1571
01:24:33,990 --> 01:24:36,960
security manages this credential is not

1572
01:24:36,150 --> 01:24:40,740
easy right

1573
01:24:36,960 --> 01:24:43,050
so we seen some proposals to manage

1574
01:24:40,740 --> 01:24:47,309
credentials through through EEP

1575
01:24:43,050 --> 01:24:49,320
but there's no consistency about being

1576
01:24:47,310 --> 01:24:51,210
able to manage all type of credentials

1577
01:24:49,320 --> 01:24:52,228
we focus mostly on certificates because

1578
01:24:51,210 --> 01:24:54,479
this is a very

1579
01:24:52,229 --> 01:24:56,969
common use case but we have other use

1580
01:24:54,479 --> 01:24:58,979
case that involve you know keys or

1581
01:24:56,969 --> 01:25:02,489
username and passwords and especially

1582
01:24:58,979 --> 01:25:07,530
IOT is a mix type of type of credentials

1583
01:25:02,489 --> 01:25:09,598
that in deploy next time so what are we

1584
01:25:07,530 --> 01:25:11,099
trying to focus with our work so that

1585
01:25:09,599 --> 01:25:12,869
work is trying to provide an

1586
01:25:11,099 --> 01:25:15,780
encapsulation mechanism right so that

1587
01:25:12,869 --> 01:25:18,659
you can use your own provisioning

1588
01:25:15,780 --> 01:25:21,090
mechanism and/or encapsulate standard

1589
01:25:18,659 --> 01:25:23,670
mechanism that already exists why do we

1590
01:25:21,090 --> 01:25:25,139
think this is a a good approach right we

1591
01:25:23,670 --> 01:25:27,780
work in many different vitamins like

1592
01:25:25,139 --> 01:25:30,510
that bf a for example where they use a

1593
01:25:27,780 --> 01:25:33,539
different approach they propose that

1594
01:25:30,510 --> 01:25:36,030
devices get their own IP address get in

1595
01:25:33,539 --> 01:25:39,030
jail state basically can reach a also

1596
01:25:36,030 --> 01:25:42,599
server which is a online sign up server

1597
01:25:39,030 --> 01:25:44,699
and then from there then we can get

1598
01:25:42,599 --> 01:25:47,369
their credentials and then authenticate

1599
01:25:44,699 --> 01:25:49,259
to the network however you know some

1600
01:25:47,369 --> 01:25:50,670
operators reported that they don't feel

1601
01:25:49,260 --> 01:25:52,889
comfortable deploying these type of

1602
01:25:50,670 --> 01:25:55,679
solutions because now you have devices

1603
01:25:52,889 --> 01:25:58,079
that are not authenticated and they can

1604
01:25:55,679 --> 01:26:01,380
probe your network because they have IP

1605
01:25:58,079 --> 01:26:03,058
so they have relative bility we think

1606
01:26:01,380 --> 01:26:05,070
that this solution solves this problem

1607
01:26:03,059 --> 01:26:07,949
because now you cannot route your

1608
01:26:05,070 --> 01:26:09,659
message and it's from a security

1609
01:26:07,949 --> 01:26:10,469
standpoint of view it makes a lot of

1610
01:26:09,659 --> 01:26:15,058
sense

1611
01:26:10,469 --> 01:26:17,999
and as before I suggested also for

1612
01:26:15,059 --> 01:26:20,249
brewski we think that with our protocol

1613
01:26:17,999 --> 01:26:23,820
being generic you can have profiles for

1614
01:26:20,249 --> 01:26:25,679
that for your use case and so for

1615
01:26:23,820 --> 01:26:28,558
example if you want to implement a full

1616
01:26:25,679 --> 01:26:30,510
set of standard you know like est you

1617
01:26:28,559 --> 01:26:32,070
can print the full est or you can just

1618
01:26:30,510 --> 01:26:34,050
implement the renewal because that's the

1619
01:26:32,070 --> 01:26:39,090
use case that that makes sense for you

1620
01:26:34,050 --> 01:26:41,999
next slide so just very briefly Ameri

1621
01:26:39,090 --> 01:26:45,090
quickly well how we organize the EEP

1622
01:26:41,999 --> 01:26:47,519
creds we try to provide three different

1623
01:26:45,090 --> 01:26:49,380
phases for now the initialization the

1624
01:26:47,519 --> 01:26:51,510
management and the validation the

1625
01:26:49,380 --> 01:26:54,630
initialization is the part that you can

1626
01:26:51,510 --> 01:26:58,199
use to bootstrap the process you can use

1627
01:26:54,630 --> 01:27:00,329
tokens or voucher that can be bear

1628
01:26:58,199 --> 01:27:02,669
tokens or can be tied to a key so

1629
01:27:00,329 --> 01:27:04,590
there's all methods that you can use for

1630
01:27:02,670 --> 01:27:05,939
authentication but basically this the

1631
01:27:04,590 --> 01:27:07,709
initialization says

1632
01:27:05,939 --> 01:27:09,479
the device says oh these are the

1633
01:27:07,709 --> 01:27:10,919
credential they have for your network do

1634
01:27:09,479 --> 01:27:13,919
you want to do something with it and

1635
01:27:10,919 --> 01:27:15,959
then basically the the server can't

1636
01:27:13,919 --> 01:27:17,820
start if he wants to

1637
01:27:15,959 --> 01:27:19,499
I started management please where you

1638
01:27:17,820 --> 01:27:20,999
can renew or deploy new type of

1639
01:27:19,499 --> 01:27:24,059
credentials it is supported by the

1640
01:27:20,999 --> 01:27:26,519
device and then optionally verify that

1641
01:27:24,059 --> 01:27:28,739
actually what the device has corresponds

1642
01:27:26,519 --> 01:27:32,849
to what the server thinks you should

1643
01:27:28,739 --> 01:27:33,388
have next time so what has changed so

1644
01:27:32,849 --> 01:27:36,360
far

1645
01:27:33,389 --> 01:27:38,159
well we simplify the proposal because we

1646
01:27:36,360 --> 01:27:40,079
receive feedback from the from the

1647
01:27:38,159 --> 01:27:42,570
workgroup these are documents are very

1648
01:27:40,079 --> 01:27:47,099
long we want them to simplify so they

1649
01:27:42,570 --> 01:27:49,590
can be understood better so we we

1650
01:27:47,099 --> 01:27:51,659
decided well from from the Middle East

1651
01:27:49,590 --> 01:27:53,570
they said it's okay if you say that you

1652
01:27:51,659 --> 01:27:57,929
you have to rely on a secure method

1653
01:27:53,570 --> 01:27:59,880
before executing this so this this

1654
01:27:57,929 --> 01:28:01,919
actually helps us because we say well

1655
01:27:59,880 --> 01:28:04,019
you have to have a secure channel but

1656
01:28:01,919 --> 01:28:06,239
we're not going to go into the

1657
01:28:04,019 --> 01:28:09,719
description how to get that once you add

1658
01:28:06,239 --> 01:28:13,259
that like for example if TLS if keep or

1659
01:28:09,719 --> 01:28:17,939
other mechanism then you can use this

1660
01:28:13,260 --> 01:28:20,070
method and the we we simplified certain

1661
01:28:17,939 --> 01:28:21,749
things by removing that but at the same

1662
01:28:20,070 --> 01:28:24,840
time we add a new text because one of

1663
01:28:21,749 --> 01:28:26,880
the item that was left over was to

1664
01:28:24,840 --> 01:28:28,739
define one basic protocol that could

1665
01:28:26,880 --> 01:28:32,459
handle all different type of credentials

1666
01:28:28,739 --> 01:28:33,598
I recall now SPP or simple provision in

1667
01:28:32,459 --> 01:28:37,650
protocol but it's just a very simple

1668
01:28:33,599 --> 01:28:40,590
thing and basically this try to provide

1669
01:28:37,650 --> 01:28:43,888
one method so it's not the only method

1670
01:28:40,590 --> 01:28:48,050
so they the it creds is meant to be an

1671
01:28:43,889 --> 01:28:51,050
encapsulation method and next slide

1672
01:28:48,050 --> 01:28:55,979
because of this right we thought about

1673
01:28:51,050 --> 01:28:59,010
simplifying the the document by removing

1674
01:28:55,979 --> 01:29:00,630
the SPP we just put it there maybe put

1675
01:28:59,010 --> 01:29:04,139
it in a separate document so that it

1676
01:29:00,630 --> 01:29:06,510
Kratz is a shorter encapsulating method

1677
01:29:04,139 --> 01:29:07,699
and the SPP can be implemented there or

1678
01:29:06,510 --> 01:29:11,400
not

1679
01:29:07,699 --> 01:29:13,259
now there are some other things that we

1680
01:29:11,400 --> 01:29:16,438
might and you might simplify the

1681
01:29:13,260 --> 01:29:19,010
document to make it even shorter but I

1682
01:29:16,439 --> 01:29:20,660
hope we can do it then the next

1683
01:29:19,010 --> 01:29:24,140
in the next version of the draft next

1684
01:29:20,660 --> 01:29:26,630
slide of course I want to thank

1685
01:29:24,140 --> 01:29:30,380
everybody that really helped us in

1686
01:29:26,630 --> 01:29:34,670
making the proposal better and also in

1687
01:29:30,380 --> 01:29:37,550
the chairs because they charted text has

1688
01:29:34,670 --> 01:29:40,130
been a longtime discussion and finally

1689
01:29:37,550 --> 01:29:41,210
we get we get there yeah thank you so

1690
01:29:40,130 --> 01:29:51,050
much

1691
01:29:41,210 --> 01:29:53,750
next slide so what are what I request

1692
01:29:51,050 --> 01:29:54,890
here so of course we're focusing on the

1693
01:29:53,750 --> 01:29:56,120
use case that makes sense for our

1694
01:29:54,890 --> 01:29:59,239
members because this is something we

1695
01:29:56,120 --> 01:30:03,739
want to deploy in our networks we also

1696
01:29:59,239 --> 01:30:07,580
working with CBR s where I think on the

1697
01:30:03,739 --> 01:30:09,739
14th was the four released three EPs was

1698
01:30:07,580 --> 01:30:14,170
a lot adopted to manage the credentials

1699
01:30:09,739 --> 01:30:16,429
for cellular networks for CBR s networks

1700
01:30:14,170 --> 01:30:18,980
then we're working also with the

1701
01:30:16,430 --> 01:30:22,100
wireless broadband Alliance they were

1702
01:30:18,980 --> 01:30:24,230
interested in to see can we use this to

1703
01:30:22,100 --> 01:30:27,890
provision credentials in their

1704
01:30:24,230 --> 01:30:30,469
environment and Wi-Fi we're going to

1705
01:30:27,890 --> 01:30:33,020
present there soon there's no date yet

1706
01:30:30,470 --> 01:30:39,470
so this is some work that can they can

1707
01:30:33,020 --> 01:30:41,200
go also in the WBA next slide we don't

1708
01:30:39,470 --> 01:30:43,430
think that the document is ready for

1709
01:30:41,200 --> 01:30:46,460
thinking about adopting in the workgroup

1710
01:30:43,430 --> 01:30:49,130
we want to simplify that and make some

1711
01:30:46,460 --> 01:30:53,750
tweaks before before we think is ready

1712
01:30:49,130 --> 01:30:56,000
for evaluation but we hope that we can

1713
01:30:53,750 --> 01:30:59,330
do it soon and maybe by the night next

1714
01:30:56,000 --> 01:31:01,550
time we can think about adopting it this

1715
01:30:59,330 --> 01:31:04,690
is the reference for the current ID that

1716
01:31:01,550 --> 01:31:08,060
we have I know it's very in his late and

1717
01:31:04,690 --> 01:31:10,629
you have the eyes very open but if you

1718
01:31:08,060 --> 01:31:10,630
have any question please

1719
01:31:16,010 --> 01:31:24,650
aha you know a lot of IOT or device

1720
01:31:21,230 --> 01:31:27,018
onboarding procedure usually we have

1721
01:31:24,650 --> 01:31:29,360
some Pro provisioning or create

1722
01:31:27,019 --> 01:31:31,849
credential on the device and we use it

1723
01:31:29,360 --> 01:31:35,268
for the authentication and for the later

1724
01:31:31,849 --> 01:31:38,000
network set control so but here you

1725
01:31:35,269 --> 01:31:40,489
propose that we we through the

1726
01:31:38,000 --> 01:31:45,019
credential provision you know when the

1727
01:31:40,489 --> 01:31:46,848
device is is joining the network so I

1728
01:31:45,019 --> 01:31:49,400
don't know the relation between the you

1729
01:31:46,849 --> 01:31:51,949
know the current method and what is the

1730
01:31:49,400 --> 01:31:55,879
typical use cases for your method

1731
01:31:51,949 --> 01:31:57,860
thanks for the question so with the with

1732
01:31:55,880 --> 01:31:59,449
this method actually you can still

1733
01:31:57,860 --> 01:32:02,210
continue to use that that approach in

1734
01:31:59,449 --> 01:32:03,799
the sense that when you do an

1735
01:32:02,210 --> 01:32:06,380
initialization phase if the device

1736
01:32:03,800 --> 01:32:08,449
doesn't have as some credentials that

1737
01:32:06,380 --> 01:32:11,210
you may leverage to register the device

1738
01:32:08,449 --> 01:32:12,949
that happens in the to initial message

1739
01:32:11,210 --> 01:32:15,710
so there's two messages in the

1740
01:32:12,949 --> 01:32:18,829
initialization phase and you can use

1741
01:32:15,710 --> 01:32:20,900
that that method to leverage credentials

1742
01:32:18,829 --> 01:32:24,230
that already exist but on top of that

1743
01:32:20,900 --> 01:32:25,638
you can you can decide well I like these

1744
01:32:24,230 --> 01:32:26,959
credentials this is the credentials for

1745
01:32:25,639 --> 01:32:28,670
example that were put there for

1746
01:32:26,960 --> 01:32:30,739
certification you have an Aussie F

1747
01:32:28,670 --> 01:32:32,000
device you have you know some devices

1748
01:32:30,739 --> 01:32:34,459
that have certification already

1749
01:32:32,000 --> 01:32:36,949
certificate but that particular method

1750
01:32:34,460 --> 01:32:39,019
of authentication for your network you

1751
01:32:36,949 --> 01:32:40,428
don't think is appropriate oh let's put

1752
01:32:39,019 --> 01:32:43,429
it this way you want to change so you

1753
01:32:40,429 --> 01:32:45,289
can you can use that credentials to

1754
01:32:43,429 --> 01:32:47,690
register the device and then deploy the

1755
01:32:45,289 --> 01:32:49,219
credentials that you would like the

1756
01:32:47,690 --> 01:32:52,009
device to use the next time they they

1757
01:32:49,219 --> 01:32:53,989
accident or something like that so think

1758
01:32:52,010 --> 01:32:56,449
about you might have a voucher you might

1759
01:32:53,989 --> 01:32:58,459
have something that is tied to a key or

1760
01:32:56,449 --> 01:32:59,989
not or just presenting one-time token

1761
01:32:58,460 --> 01:33:03,860
right to register the device that you

1762
01:32:59,989 --> 01:33:05,718
obtain from a website somewhere we don't

1763
01:33:03,860 --> 01:33:08,808
specify that this is outside the scope

1764
01:33:05,719 --> 01:33:10,760
of the of the protocol but they are use

1765
01:33:08,809 --> 01:33:13,760
case for example for adaxes network or

1766
01:33:10,760 --> 01:33:16,099
CB RS is you have some sim credentials

1767
01:33:13,760 --> 01:33:18,050
you can leverage them to deploy this

1768
01:33:16,099 --> 01:33:19,639
that you no other type of credential

1769
01:33:18,050 --> 01:33:21,679
like certificates or user name password

1770
01:33:19,639 --> 01:33:24,889
that in the environment the same things

1771
01:33:21,679 --> 01:33:27,889
we're thinking for our next generation

1772
01:33:24,889 --> 01:33:29,880
of cable networks that we are working on

1773
01:33:27,889 --> 01:33:32,940
delivering the tangi at

1774
01:33:29,880 --> 01:33:35,130
platform and we think that because they

1775
01:33:32,940 --> 01:33:36,570
added number of entities that are going

1776
01:33:35,130 --> 01:33:38,420
to be on our networks we need to have

1777
01:33:36,570 --> 01:33:41,519
some form of authentication and

1778
01:33:38,420 --> 01:33:44,370
credentials managing that we use treat

1779
01:33:41,520 --> 01:33:47,010
not only for the clients the cable

1780
01:33:44,370 --> 01:33:48,719
modems and DVRs etcetera but also for

1781
01:33:47,010 --> 01:33:52,050
the infrastructure so this would allow

1782
01:33:48,719 --> 01:33:54,270
us to have a very centralized system for

1783
01:33:52,050 --> 01:33:56,219
all our operators which is very

1784
01:33:54,270 --> 01:33:57,900
interesting for now ok ok yeah thank you

1785
01:33:56,219 --> 01:33:59,070
for the clarification I think in general

1786
01:33:57,900 --> 01:34:05,159
I like this idea

1787
01:33:59,070 --> 01:34:07,170
thank you thank you hey max so I think

1788
01:34:05,159 --> 01:34:08,699
what your there's a lot here that you're

1789
01:34:07,170 --> 01:34:11,130
doing that I think is really interesting

1790
01:34:08,699 --> 01:34:12,839
because it attracts precisely to this

1791
01:34:11,130 --> 01:34:15,900
morning's conversation right in terms of

1792
01:34:12,840 --> 01:34:19,980
how we onboard with IOT I have one I

1793
01:34:15,900 --> 01:34:21,629
have one major concern well it's one

1794
01:34:19,980 --> 01:34:23,370
major concern but it's it's a lengthy

1795
01:34:21,630 --> 01:34:27,060
one I'll apologize in advance for that

1796
01:34:23,370 --> 01:34:29,550
which is first of all it seems like you

1797
01:34:27,060 --> 01:34:31,560
have sort of the the kitchen sink

1798
01:34:29,550 --> 01:34:33,030
approach here right in terms of there

1799
01:34:31,560 --> 01:34:34,350
are all these different mechanisms that

1800
01:34:33,030 --> 01:34:38,519
you're gonna try and reference with an

1801
01:34:34,350 --> 01:34:42,300
ich ich red what we are suffering with

1802
01:34:38,520 --> 01:34:43,469
in IOT right now is fragmentation of all

1803
01:34:42,300 --> 01:34:46,020
this and I realize you're trying to

1804
01:34:43,469 --> 01:34:47,429
defragment by by finding at least one

1805
01:34:46,020 --> 01:34:49,290
consolidation point but I'm concerned

1806
01:34:47,429 --> 01:34:53,699
that with so many mechanisms it actually

1807
01:34:49,290 --> 01:34:55,710
won't consolidate and so one of the

1808
01:34:53,699 --> 01:34:58,769
things that we talked about this morning

1809
01:34:55,710 --> 01:35:01,290
was can we distill down architectural II

1810
01:34:58,770 --> 01:35:04,560
what is really needed to bind between

1811
01:35:01,290 --> 01:35:06,810
these you know the input process for for

1812
01:35:04,560 --> 01:35:09,840
eep if you will versus the output

1813
01:35:06,810 --> 01:35:11,610
process from what came before and I

1814
01:35:09,840 --> 01:35:13,320
wonder if we want to just take a step

1815
01:35:11,610 --> 01:35:15,570
back a little bit as we go through that

1816
01:35:13,320 --> 01:35:17,250
and say ok can we can we distill this

1817
01:35:15,570 --> 01:35:19,080
down to something like we discussed this

1818
01:35:17,250 --> 01:35:21,389
morning as as a you know something like

1819
01:35:19,080 --> 01:35:23,550
an EDC sa public/private key pair or

1820
01:35:21,389 --> 01:35:25,860
something along those lines maybe the

1821
01:35:23,550 --> 01:35:27,480
public EDSA is a little ETCs a is

1822
01:35:25,860 --> 01:35:29,280
probably a little too specific right you

1823
01:35:27,480 --> 01:35:31,709
probably need a code point approach and

1824
01:35:29,280 --> 01:35:33,659
this and I'm not even sure about how to

1825
01:35:31,710 --> 01:35:37,260
manage the code points in that regard

1826
01:35:33,659 --> 01:35:39,269
but if we can distill that down then

1827
01:35:37,260 --> 01:35:41,070
there's another opportunity here the

1828
01:35:39,270 --> 01:35:43,640
other opportunity is that our two drafts

1829
01:35:41,070 --> 01:35:45,950
merge right and

1830
01:35:43,640 --> 01:35:47,420
we sort of proceeded forward along those

1831
01:35:45,950 --> 01:35:49,370
lines

1832
01:35:47,420 --> 01:35:50,840
I haven't actually thought all of that

1833
01:35:49,370 --> 01:35:53,390
through but I think that's a discussion

1834
01:35:50,840 --> 01:35:55,550
we should have and I really like the

1835
01:35:53,390 --> 01:35:59,300
idea of merging in one particular regard

1836
01:35:55,550 --> 01:36:01,490
which is less fragmentation but as part

1837
01:35:59,300 --> 01:36:03,380
of that I think we we need to understand

1838
01:36:01,490 --> 01:36:04,670
each of the use cases that you were

1839
01:36:03,380 --> 01:36:06,830
attempting to address with all those

1840
01:36:04,670 --> 01:36:09,260
different enrollment mechanisms and you

1841
01:36:06,830 --> 01:36:11,720
know I think the the the gentleman from

1842
01:36:09,260 --> 01:36:14,120
Siemens Siemens are here and in your

1843
01:36:11,720 --> 01:36:16,640
draft and anima right you have you you

1844
01:36:14,120 --> 01:36:18,170
have to try and chisel down right what

1845
01:36:16,640 --> 01:36:19,430
what sort of a role enrollment

1846
01:36:18,170 --> 01:36:21,770
approaches you really wanted to tackle

1847
01:36:19,430 --> 01:36:24,950
right do you want to throw us SCEP and

1848
01:36:21,770 --> 01:36:26,210
in-ears for instance and you know and i

1849
01:36:24,950 --> 01:36:28,970
think there are some use cases that they

1850
01:36:26,210 --> 01:36:31,940
have but that that needs to be reviewed

1851
01:36:28,970 --> 01:36:34,730
in this context so as all as part of

1852
01:36:31,940 --> 01:36:37,190
this if we can distill this down then we

1853
01:36:34,730 --> 01:36:41,089
can reduce the fragmentation and that

1854
01:36:37,190 --> 01:36:42,950
will accelerate deployment yeah Elliot

1855
01:36:41,090 --> 01:36:47,030
thank you for the question

1856
01:36:42,950 --> 01:36:49,730
yeah definitely if we can maybe merge

1857
01:36:47,030 --> 01:36:52,580
the two proposals if we you know they

1858
01:36:49,730 --> 01:36:57,080
both fit they use cases great less work

1859
01:36:52,580 --> 01:37:00,650
and better work and so far architecture

1860
01:36:57,080 --> 01:37:04,670
wise they what we are working on is try

1861
01:37:00,650 --> 01:37:07,160
not to put architecture in this but lets

1862
01:37:04,670 --> 01:37:10,580
you decide the architecture so this

1863
01:37:07,160 --> 01:37:13,870
comes from you know the our operators

1864
01:37:10,580 --> 01:37:17,059
they usually have some purchasing power

1865
01:37:13,870 --> 01:37:18,830
for devices so that that usually helps

1866
01:37:17,060 --> 01:37:20,840
them to have more freedom when they have

1867
01:37:18,830 --> 01:37:23,750
to decide how to manage the credentials

1868
01:37:20,840 --> 01:37:26,360
but coming to the point that you were

1869
01:37:23,750 --> 01:37:27,680
saying about the you know defining all

1870
01:37:26,360 --> 01:37:29,900
this fragmentation for these

1871
01:37:27,680 --> 01:37:32,240
provisioning protocols I totally agree

1872
01:37:29,900 --> 01:37:33,559
with them we have that problem and this

1873
01:37:32,240 --> 01:37:35,900
is not a new problem

1874
01:37:33,560 --> 01:37:39,080
you know whenever you need to implement

1875
01:37:35,900 --> 01:37:41,179
a provisioning protocol you have to

1876
01:37:39,080 --> 01:37:43,250
choose which one which option not that

1877
01:37:41,180 --> 01:37:47,960
provisioning protocol cetera that's

1878
01:37:43,250 --> 01:37:50,300
definitely true my plan is not to to do

1879
01:37:47,960 --> 01:37:52,730
this work for every protocols that we

1880
01:37:50,300 --> 01:37:55,100
have as I said before we have a proposal

1881
01:37:52,730 --> 01:37:56,099
for the SPP which is very simple meant

1882
01:37:55,100 --> 01:37:59,700
to be

1883
01:37:56,100 --> 01:38:02,420
version not super flexible and like

1884
01:37:59,700 --> 01:38:04,470
other programming protocol but

1885
01:38:02,420 --> 01:38:06,750
sufficient let's boot it wait sufficient

1886
01:38:04,470 --> 01:38:09,770
for for a good implementation and if you

1887
01:38:06,750 --> 01:38:11,970
want to go over and have you know using

1888
01:38:09,770 --> 01:38:16,980
something like brewskis cetera

1889
01:38:11,970 --> 01:38:18,710
you could still integrate that right the

1890
01:38:16,980 --> 01:38:21,809
other thing that I wanted to point out

1891
01:38:18,710 --> 01:38:24,360
this could be used for example so and we

1892
01:38:21,810 --> 01:38:26,340
talked about this this morning when you

1893
01:38:24,360 --> 01:38:28,230
have DPP for example they approach that

1894
01:38:26,340 --> 01:38:31,950
they're using for the personal use in

1895
01:38:28,230 --> 01:38:35,269
the in the in the buffet to be

1896
01:38:31,950 --> 01:38:38,429
transported over the enterprise so we're

1897
01:38:35,270 --> 01:38:40,770
over eeep by encapsulating the DPP

1898
01:38:38,430 --> 01:38:45,810
packets on the EP so you could

1899
01:38:40,770 --> 01:38:48,030
potentially use DPP also in threep it's

1900
01:38:45,810 --> 01:38:51,270
just an example of how this would enable

1901
01:38:48,030 --> 01:38:58,550
new tools that might make find you in

1902
01:38:51,270 --> 01:39:04,170
use cases but so this is all thank you

1903
01:38:58,550 --> 01:39:17,600
let's go to the next presentation which

1904
01:39:04,170 --> 01:39:22,980
i think is ok I hope if you hear me fine

1905
01:39:17,600 --> 01:39:26,550
yes okay yeah so my name is john korabik

1906
01:39:22,980 --> 01:39:30,690
ICA's I'm currently a student in bremen

1907
01:39:26,550 --> 01:39:34,680
in germany and i have submitted this

1908
01:39:30,690 --> 01:39:39,900
draft yet just as an idea so you can go

1909
01:39:34,680 --> 01:39:43,610
to the next slide I'm working on at our

1910
01:39:39,900 --> 01:39:47,580
networking Center in Bremen and I am

1911
01:39:43,610 --> 01:39:49,860
dealing with eduroam and one experience

1912
01:39:47,580 --> 01:39:52,170
I had when dealing with eduroam is that

1913
01:39:49,860 --> 01:39:57,089
the certificate checks on supplicants in

1914
01:39:52,170 --> 01:39:59,910
eap-tls are known to be faulty and with

1915
01:39:57,090 --> 01:40:02,760
faulty I mean not badly implemented but

1916
01:39:59,910 --> 01:40:03,840
they don't really happen in a way that

1917
01:40:02,760 --> 01:40:06,690
we should

1918
01:40:03,840 --> 01:40:09,150
well that they should happen so they use

1919
01:40:06,690 --> 01:40:09,688
very unsecure defaults for example in

1920
01:40:09,150 --> 01:40:14,459
android

1921
01:40:09,689 --> 01:40:16,769
devices there was not really default for

1922
01:40:14,459 --> 01:40:19,199
checking with Android versions at least

1923
01:40:16,769 --> 01:40:22,260
prior to version 7 I'm not quite sure

1924
01:40:19,199 --> 01:40:24,598
about that so the certificate checking

1925
01:40:22,260 --> 01:40:27,269
was disabled by default current androids

1926
01:40:24,599 --> 01:40:30,809
have this option used system

1927
01:40:27,269 --> 01:40:32,669
certificates with domain input and not

1928
01:40:30,809 --> 01:40:36,090
really a documentation what this domain

1929
01:40:32,669 --> 01:40:38,669
should be Windows Mac OS iOS they

1930
01:40:36,090 --> 01:40:42,769
question the user for the certificate

1931
01:40:38,669 --> 01:40:46,380
and at least for Windows you just see a

1932
01:40:42,769 --> 01:40:48,689
fingerprint and no information about the

1933
01:40:46,380 --> 01:40:52,260
common name or the issuer

1934
01:40:48,689 --> 01:40:56,010
so that is a big issue in eduroam

1935
01:40:52,260 --> 01:40:58,739
in bremen at least so the reason for

1936
01:40:56,010 --> 01:41:02,280
that is from my perspective that the

1937
01:40:58,739 --> 01:41:05,579
eap-tls specification lacks a specific

1938
01:41:02,280 --> 01:41:07,228
method or specific data to determine if

1939
01:41:05,579 --> 01:41:12,869
the certificate is valid for this

1940
01:41:07,229 --> 01:41:16,469
specific use and I think this should be

1941
01:41:12,869 --> 01:41:19,348
solved by giving the supplicants some

1942
01:41:16,469 --> 01:41:23,329
means to determine if the certificate is

1943
01:41:19,349 --> 01:41:26,039
valid for the intended use by in

1944
01:41:23,329 --> 01:41:28,380
including information into the

1945
01:41:26,039 --> 01:41:32,009
certificate that is implicitly defined

1946
01:41:28,380 --> 01:41:35,699
by the communication context so if you

1947
01:41:32,010 --> 01:41:39,030
can go to the next slide my proposed

1948
01:41:35,699 --> 01:41:42,719
solution for that is to add a new

1949
01:41:39,030 --> 01:41:46,489
certificate extension that explicitly

1950
01:41:42,719 --> 01:41:50,969
defines a valid realm for this

1951
01:41:46,489 --> 01:41:55,829
certificate for which EAP realm this

1952
01:41:50,969 --> 01:41:59,539
certificate should be used this is a big

1953
01:41:55,829 --> 01:42:02,728
advantage because the user name is

1954
01:41:59,539 --> 01:42:04,320
implicitly known from communication

1955
01:42:02,729 --> 01:42:06,780
context and the realm can be extracted

1956
01:42:04,320 --> 01:42:10,228
from that and Cas

1957
01:42:06,780 --> 01:42:13,800
can validate this if the realm is a dns

1958
01:42:10,229 --> 01:42:19,769
name and especially in AD Rome this is

1959
01:42:13,800 --> 01:42:21,749
true for the realms I have asked for

1960
01:42:19,769 --> 01:42:22,290
comments on the mailing list and I have

1961
01:42:21,749 --> 01:42:25,710
some

1962
01:42:22,290 --> 01:42:29,990
other ideas seen on the mailing list so

1963
01:42:25,710 --> 01:42:35,760
if you can go to the next slide there is

1964
01:42:29,990 --> 01:42:38,160
RFC 7585 the niín AI realm specified

1965
01:42:35,760 --> 01:42:41,420
there which is intended to help with

1966
01:42:38,160 --> 01:42:48,420
roaming federation contest connections

1967
01:42:41,420 --> 01:42:51,960
so this is one idea that was very like

1968
01:42:48,420 --> 01:42:56,640
the first response that I'm redoing this

1969
01:42:51,960 --> 01:42:58,680
work here from my perspective this could

1970
01:42:56,640 --> 01:43:03,540
be a solution to also use that for

1971
01:42:58,680 --> 01:43:06,960
eap-tls but I don't think this is a good

1972
01:43:03,540 --> 01:43:11,220
idea to just simply reuse that because

1973
01:43:06,960 --> 01:43:15,150
it is not the same scope another idea

1974
01:43:11,220 --> 01:43:18,900
would be to specify a specific prefix

1975
01:43:15,150 --> 01:43:20,870
for the subject alt name DNS name or

1976
01:43:18,900 --> 01:43:24,690
even for common name in the certificate

1977
01:43:20,870 --> 01:43:26,880
for example eap-tls dot uni- Bremen dot

1978
01:43:24,690 --> 01:43:31,290
de for the Union - bremond of the e

1979
01:43:26,880 --> 01:43:37,680
realm but my suggested solution would be

1980
01:43:31,290 --> 01:43:40,590
to use this new certificate extension so

1981
01:43:37,680 --> 01:43:43,140
if you could go to the next slide

1982
01:43:40,590 --> 01:43:46,710
yes so the feedback I received for that

1983
01:43:43,140 --> 01:43:53,490
is to possibly just reuse the OID from

1984
01:43:46,710 --> 01:43:56,780
the RFC 7585 nii realm maybe and that is

1985
01:43:53,490 --> 01:44:00,900
also an idea that came to my mind after

1986
01:43:56,780 --> 01:44:03,690
submitting this draft is to also add a

1987
01:44:00,900 --> 01:44:06,629
specific extended key usage for eap-tls

1988
01:44:03,690 --> 01:44:09,240
server authentication because currently

1989
01:44:06,630 --> 01:44:13,890
speaking for Bremen eduroam

1990
01:44:09,240 --> 01:44:17,250
as well the certificate we use has the

1991
01:44:13,890 --> 01:44:20,970
extended key usage for TLS web server

1992
01:44:17,250 --> 01:44:25,200
and client authentication and from my

1993
01:44:20,970 --> 01:44:28,190
perspective this leads to quite a lot of

1994
01:44:25,200 --> 01:44:30,809
problems because it is quite easy if

1995
01:44:28,190 --> 01:44:33,570
people just type in their username and

1996
01:44:30,810 --> 01:44:35,849
their password to set up a rogue access

1997
01:44:33,570 --> 01:44:39,389
point and get credentials there

1998
01:44:35,849 --> 01:44:43,440
so yeah this is my first draft for the

1999
01:44:39,389 --> 01:44:45,090
IDF so I would be very happy to receive

2000
01:44:43,440 --> 01:44:48,360
feedback of this goes in the right

2001
01:44:45,090 --> 01:45:04,290
direction if there's something I have

2002
01:44:48,360 --> 01:45:06,420
missed if this is useful this is Elliot

2003
01:45:04,290 --> 01:45:08,340
again young Frederick thanks for the

2004
01:45:06,420 --> 01:45:10,230
draft I think this guy is a little bit

2005
01:45:08,340 --> 01:45:13,619
too the work that Owens doing if I

2006
01:45:10,230 --> 01:45:15,449
understand correctly in in terms of

2007
01:45:13,619 --> 01:45:17,219
realm identification I think Owen you're

2008
01:45:15,449 --> 01:45:20,150
gonna talk to that is that right later

2009
01:45:17,219 --> 01:45:23,639
or maybe not in this room but I think it

2010
01:45:20,150 --> 01:45:27,000
we we we have we have looked at at

2011
01:45:23,639 --> 01:45:28,829
similar issues in terms similar aspects

2012
01:45:27,000 --> 01:45:33,690
that I think relate a little bit to your

2013
01:45:28,829 --> 01:45:34,949
acne work and and and so I think they're

2014
01:45:33,690 --> 01:45:36,598
they're a couple of things that are

2015
01:45:34,949 --> 01:45:38,969
hiding out there what I was going to say

2016
01:45:36,599 --> 01:45:42,929
is I was a little unclear the use case

2017
01:45:38,969 --> 01:45:45,300
though in terms of when when you need

2018
01:45:42,929 --> 01:45:48,989
that realm and the edger in it available

2019
01:45:45,300 --> 01:45:50,520
in edge room for instance in certificate

2020
01:45:48,989 --> 01:45:53,159
is being presented inappropriately

2021
01:45:50,520 --> 01:45:56,730
elsewhere or they're not being able to

2022
01:45:53,159 --> 01:46:04,138
select the certificate for Fred roams

2023
01:45:56,730 --> 01:46:05,968
use in a context of the Federation so

2024
01:46:04,139 --> 01:46:09,750
the the the main problem with a

2025
01:46:05,969 --> 01:46:12,000
certificate checking is that it is quite

2026
01:46:09,750 --> 01:46:14,849
common or was quite common for a lot of

2027
01:46:12,000 --> 01:46:18,540
a long time that users just typed in

2028
01:46:14,849 --> 01:46:21,929
their username and password and did not

2029
01:46:18,540 --> 01:46:23,610
select any certificate attributes and

2030
01:46:21,929 --> 01:46:26,699
especially with the user interface in

2031
01:46:23,610 --> 01:46:31,679
Eddy row in Android this was the easiest

2032
01:46:26,699 --> 01:46:34,759
way and my aim is to help to get a

2033
01:46:31,679 --> 01:46:37,170
secure default that supplicants know

2034
01:46:34,760 --> 01:46:41,760
exactly from the certificate that this

2035
01:46:37,170 --> 01:46:43,409
is valid for the intended years so this

2036
01:46:41,760 --> 01:46:44,400
is Owen just to clarify what I was

2037
01:46:43,409 --> 01:46:46,739
talking about what I'm going to talk

2038
01:46:44,400 --> 01:46:48,179
about in five minutes time is the other

2039
01:46:46,739 --> 01:46:49,349
side of the house which is how vacuum

2040
01:46:48,179 --> 01:46:51,480
can be used to issue

2041
01:46:49,350 --> 01:46:53,370
inside certs but this is more relevant

2042
01:46:51,480 --> 01:46:55,320
for as Brisky cloud but it's going to

2043
01:46:53,370 --> 01:46:57,840
come up with a animal it around the week

2044
01:46:55,320 --> 01:47:00,299
which is and when a cloud registrar

2045
01:46:57,840 --> 01:47:01,950
redirects an entity to a triple-a how

2046
01:47:00,300 --> 01:47:07,230
does the entity verified the triplicity

2047
01:47:01,950 --> 01:47:09,030
by dentistry we're not about Microsoft

2048
01:47:07,230 --> 01:47:11,429
so I have a question about how you

2049
01:47:09,030 --> 01:47:13,559
intend this to be used is the idea that

2050
01:47:11,430 --> 01:47:15,060
you don't feel that the users should be

2051
01:47:13,560 --> 01:47:17,760
prompted to ok the certificate and that

2052
01:47:15,060 --> 01:47:19,770
should somehow automatically check the

2053
01:47:17,760 --> 01:47:22,400
NAI against this nai realm and just

2054
01:47:19,770 --> 01:47:25,620
allow it is that the idea

2055
01:47:22,400 --> 01:47:27,299
definitely yes yeah I guess I don't know

2056
01:47:25,620 --> 01:47:30,990
it seems like a very dangerous thing

2057
01:47:27,300 --> 01:47:32,880
because what prevents you have assert to

2058
01:47:30,990 --> 01:47:35,910
claim any ni realm right they did it

2059
01:47:32,880 --> 01:47:37,980
like I my corporation I'll I'll claim I

2060
01:47:35,910 --> 01:47:39,660
have only ni realm for whatever I don't

2061
01:47:37,980 --> 01:47:42,030
actually own it has no relationship to

2062
01:47:39,660 --> 01:47:44,150
the cert and now you're not putting out

2063
01:47:42,030 --> 01:47:46,679
the dialog box so I'm can basically

2064
01:47:44,150 --> 01:47:51,780
infect the user system with a with a

2065
01:47:46,680 --> 01:47:53,730
false nai realm claim right I can I can

2066
01:47:51,780 --> 01:47:56,460
put whatever I want in there like I'm

2067
01:47:53,730 --> 01:47:59,160
Joe blows fish shop and I'll claim you

2068
01:47:56,460 --> 01:48:01,980
know that I own the NIR realm for you

2069
01:47:59,160 --> 01:48:03,750
know and I say the u.s. gov right and

2070
01:48:01,980 --> 01:48:09,139
and you'll accept that automatically is

2071
01:48:03,750 --> 01:48:12,720
that the idea well basically the idea is

2072
01:48:09,140 --> 01:48:18,860
because in eduroam we deal with public

2073
01:48:12,720 --> 01:48:21,660
CAS public trust and CAS a lot to help

2074
01:48:18,860 --> 01:48:24,000
to have this certificate attribute also

2075
01:48:21,660 --> 01:48:28,500
verified by trusted CAS

2076
01:48:24,000 --> 01:48:31,320
so that of course if if I have control

2077
01:48:28,500 --> 01:48:34,950
over uni- bremond op de then I should be

2078
01:48:31,320 --> 01:48:38,009
the only one who is allowed to be issued

2079
01:48:34,950 --> 01:48:42,990
a certificate with the humanitarian de

2080
01:48:38,010 --> 01:48:47,800
realm I guess I don't we're gonna cut

2081
01:48:42,990 --> 01:48:52,750
the line hold oh yeah yeah

2082
01:48:47,800 --> 01:48:55,630
just quick observation here improving

2083
01:48:52,750 --> 01:48:58,389
the security can be done in several ways

2084
01:48:55,630 --> 01:49:01,780
here and given that we are talking about

2085
01:48:58,389 --> 01:49:05,260
an environment in which most endpoints

2086
01:49:01,780 --> 01:49:09,759
are broken it's really hard to reason

2087
01:49:05,260 --> 01:49:13,750
about security and one observation is

2088
01:49:09,760 --> 01:49:16,929
that it really helps to be able to build

2089
01:49:13,750 --> 01:49:20,619
your production system out in such a way

2090
01:49:16,929 --> 01:49:23,739
that it rejects a larger part of the

2091
01:49:20,619 --> 01:49:26,769
broken ancestors that are not only

2092
01:49:23,739 --> 01:49:28,509
broken but also misconfigured so that's

2093
01:49:26,770 --> 01:49:31,540
maybe a slightly different objective

2094
01:49:28,510 --> 01:49:40,929
that we have in mind here then you are

2095
01:49:31,540 --> 01:49:44,230
usually working with yeah

2096
01:49:40,929 --> 01:49:46,329
so to address Bernards point that that's

2097
01:49:44,230 --> 01:49:49,468
certainly true but I think one of the

2098
01:49:46,329 --> 01:49:57,308
issues now is the supplicants by default

2099
01:49:49,469 --> 01:49:59,699
don't trust any of the root CAS for epls

2100
01:49:57,309 --> 01:50:03,550
authentication they do trust it for

2101
01:49:59,699 --> 01:50:06,848
HTTPS and one of the issues is that all

2102
01:50:03,550 --> 01:50:11,679
of the ETLs server certificates have

2103
01:50:06,849 --> 01:50:16,290
this TLS web server o ID and I think it

2104
01:50:11,679 --> 01:50:21,280
would help if the CAS would issue

2105
01:50:16,290 --> 01:50:23,849
certificates specifically for ETLs at

2106
01:50:21,280 --> 01:50:27,579
which point the supplicants could

2107
01:50:23,849 --> 01:50:30,520
default trust all the route CAS and then

2108
01:50:27,579 --> 01:50:33,429
validate that that certificate coming

2109
01:50:30,520 --> 01:50:35,650
over ETLs is actually an e TLS

2110
01:50:33,429 --> 01:50:37,719
certificate so I think what young

2111
01:50:35,650 --> 01:50:41,199
Frederick has pointed out here is an

2112
01:50:37,719 --> 01:50:44,320
issue not just with this particular oh I

2113
01:50:41,199 --> 01:50:48,969
D but I think there may be a need for a

2114
01:50:44,320 --> 01:50:51,730
larger eat practices document as to what

2115
01:50:48,969 --> 01:50:54,429
the supplicant should do what the CA

2116
01:50:51,730 --> 01:50:56,709
should do and I think it would certainly

2117
01:50:54,429 --> 01:50:58,440
help with adoption rather a lot because

2118
01:50:56,710 --> 01:51:01,540
it'd be very very nice to be able to say

2119
01:50:58,440 --> 01:51:05,019
you know here's my identification

2120
01:51:01,540 --> 01:51:07,660
I'm in realm X and I connect to some

2121
01:51:05,020 --> 01:51:09,790
random as as ID hey I get a certificate

2122
01:51:07,660 --> 01:51:13,180
which says it's for that realm it's

2123
01:51:09,790 --> 01:51:14,920
signed by a root CA I trust therefore I

2124
01:51:13,180 --> 01:51:17,020
don't have to do the whole clickety

2125
01:51:14,920 --> 01:51:19,420
clickety click thing that everyone has

2126
01:51:17,020 --> 01:51:21,870
to do now so I think this is an issue

2127
01:51:19,420 --> 01:51:24,820
which is worth working on

2128
01:51:21,870 --> 01:51:27,250
okay thanks we have to move on to the

2129
01:51:24,820 --> 01:51:29,049
next presentation thank you yon Frederic

2130
01:51:27,250 --> 01:51:39,440
and I'm sure we'll have more discussion

2131
01:51:29,050 --> 01:51:43,280
on this on the list so there

2132
01:51:39,440 --> 01:51:45,530
barso I'll be really quick so the

2133
01:51:43,280 --> 01:51:51,860
problem that via an Cisco trying to

2134
01:51:45,530 --> 01:51:53,750
solve contacts light and so what this

2135
01:51:51,860 --> 01:51:55,519
describes is it's a mechanism by which

2136
01:51:53,750 --> 01:51:56,780
we can use acne for integrated with

2137
01:51:55,520 --> 01:51:58,489
multiple different protocols that are

2138
01:51:56,780 --> 01:52:04,580
used for issuing device and client-side

2139
01:51:58,489 --> 01:52:05,870
certs next so the doc describes multiple

2140
01:52:04,580 --> 01:52:07,969
different use cases how I can become

2141
01:52:05,870 --> 01:52:09,739
integrated with est with brewski with

2142
01:52:07,969 --> 01:52:11,570
the new brisket club registrar

2143
01:52:09,739 --> 01:52:12,889
but for parts of most important so this

2144
01:52:11,570 --> 01:52:15,799
room is how it competes grater with

2145
01:52:12,890 --> 01:52:17,840
teeth and with tea Brisky are what's

2146
01:52:15,800 --> 01:52:20,270
been rebranded as t pop dated extensions

2147
01:52:17,840 --> 01:52:22,699
for bootstrapping and I think that acne

2148
01:52:20,270 --> 01:52:24,500
actually requires the extensions the new

2149
01:52:22,699 --> 01:52:26,780
TVs that have been defined and the T pop

2150
01:52:24,500 --> 01:52:27,770
dish and so I don't think that I can

2151
01:52:26,780 --> 01:52:29,300
will cleanly integrate with teeth

2152
01:52:27,770 --> 01:52:33,710
there's a couple of problems with teeth

2153
01:52:29,300 --> 01:52:35,510
as it currently stands next slide and so

2154
01:52:33,710 --> 01:52:37,070
what's changed last presented this so

2155
01:52:35,510 --> 01:52:39,350
for acne integrations used to cover

2156
01:52:37,070 --> 01:52:41,360
exactly four subdomains as well that has

2157
01:52:39,350 --> 01:52:43,850
been broken out based on feedback at the

2158
01:52:41,360 --> 01:52:45,769
acne working group last last year are

2159
01:52:43,850 --> 01:52:47,390
sorry last session and that's been

2160
01:52:45,770 --> 01:52:48,980
attract me just this time around but

2161
01:52:47,390 --> 01:52:51,080
acne for sub mins does it's a very nice

2162
01:52:48,980 --> 01:52:54,589
integration for for client side and

2163
01:52:51,080 --> 01:52:56,269
circa Xuan's it allows an acne client to

2164
01:52:54,590 --> 01:52:59,060
prove to be an ownership of a parent

2165
01:52:56,270 --> 01:53:01,250
domain and then the client can then send

2166
01:52:59,060 --> 01:53:02,989
in certificate requests for hundreds or

2167
01:53:01,250 --> 01:53:04,520
thousands of subdomain inserts after

2168
01:53:02,989 --> 01:53:06,169
appearance menu but I haven't approved

2169
01:53:04,520 --> 01:53:08,690
domain ownership explicitly for each

2170
01:53:06,170 --> 01:53:09,920
client site search and the brisket Club

2171
01:53:08,690 --> 01:53:12,009
register use case has been added and

2172
01:53:09,920 --> 01:53:14,660
there's been a couple of updates to and

2173
01:53:12,010 --> 01:53:18,110
Elliot's draft and the two most

2174
01:53:14,660 --> 01:53:19,610
important ones that we've added as a CSR

2175
01:53:18,110 --> 01:53:21,980
attributes one on one that you missed in

2176
01:53:19,610 --> 01:53:24,920
your presentation Elliott has a retry

2177
01:53:21,980 --> 01:53:27,980
after TLV and we try after two they will

2178
01:53:24,920 --> 01:53:29,930
be really really useful when and the t

2179
01:53:27,980 --> 01:53:31,400
p-- server once which were searched to

2180
01:53:29,930 --> 01:53:35,989
the client but was not willing to do it

2181
01:53:31,400 --> 01:53:40,070
yet it can't do it yet yeah so next

2182
01:53:35,989 --> 01:53:42,500
slide and it's what its core but like

2183
01:53:40,070 --> 01:53:43,880
the dystrophy it should only be

2184
01:53:42,500 --> 01:53:45,650
informational it doesn't require any

2185
01:53:43,880 --> 01:53:50,510
changes to acne it will not require any

2186
01:53:45,650 --> 01:53:52,489
changes es T or T RT Popish what is T

2187
01:53:50,510 --> 01:53:52,969
and T two is used to antique define and

2188
01:53:52,489 --> 01:53:54,799
product

2189
01:53:52,969 --> 01:53:56,420
by which the client can interact with

2190
01:53:54,800 --> 01:53:58,010
the server but it doesn't specify had to

2191
01:53:56,420 --> 01:53:59,540
serve interests with the backend CA and

2192
01:53:58,010 --> 01:54:04,640
Acme can be used to integrate at the

2193
01:53:59,540 --> 01:54:06,440
backend CA next slide I was just over

2194
01:54:04,640 --> 01:54:08,420
you to flow so this is this is

2195
01:54:06,440 --> 01:54:11,500
boilerplate Acme this is how you can use

2196
01:54:08,420 --> 01:54:15,020
acne to M do the main claim using DNS

2197
01:54:11,500 --> 01:54:16,760
next slide this just bought skip over

2198
01:54:15,020 --> 01:54:19,760
this that's just standard Tipton

2199
01:54:16,760 --> 01:54:22,760
establishment this is where it gets

2200
01:54:19,760 --> 01:54:25,969
interesting and so this is standard teak

2201
01:54:22,760 --> 01:54:28,580
but doesn't have the Nu T of these that

2202
01:54:25,969 --> 01:54:30,680
have been defined in tip update and the

2203
01:54:28,580 --> 01:54:32,600
client sends in a PK C is 10 requests to

2204
01:54:30,680 --> 01:54:34,250
the tip server keep server then turns

2205
01:54:32,600 --> 01:54:36,290
around and sends a Acme new order

2206
01:54:34,250 --> 01:54:38,480
request followed by an acme finalized

2207
01:54:36,290 --> 01:54:40,250
request fun la followed by the Acme

2208
01:54:38,480 --> 01:54:41,330
certificate request again everything on

2209
01:54:40,250 --> 01:54:42,500
the left hand side the standard T

2210
01:54:41,330 --> 01:54:44,510
everything on the right hand side for

2211
01:54:42,500 --> 01:54:46,430
standard Acme no genius why the protocol

2212
01:54:44,510 --> 01:54:48,380
and it ends up with them

2213
01:54:46,430 --> 01:54:51,230
the client even issued a certificate

2214
01:54:48,380 --> 01:54:53,870
that is sent by the cheap server using

2215
01:54:51,230 --> 01:54:57,650
the pkc as ten people sorry a PK c is

2216
01:54:53,870 --> 01:55:00,019
seven till the two the pledge next slide

2217
01:54:57,650 --> 01:55:01,580
so the next slide covers it's it's the

2218
01:55:00,020 --> 01:55:04,610
new T of these that have been defined in

2219
01:55:01,580 --> 01:55:05,930
the T pop date it defines what happens

2220
01:55:04,610 --> 01:55:08,599
and how our client Lee were just using

2221
01:55:05,930 --> 01:55:09,949
utilities so first is the client doesn't

2222
01:55:08,600 --> 01:55:11,510
know what attributes to include in the C

2223
01:55:09,949 --> 01:55:13,519
user request so the client sends and you

2224
01:55:11,510 --> 01:55:16,070
teach these are attributes request to

2225
01:55:13,520 --> 01:55:18,620
the Steep server that's response so for

2226
01:55:16,070 --> 01:55:20,150
example that could include specific

2227
01:55:18,620 --> 01:55:23,239
information on what subject to include

2228
01:55:20,150 --> 01:55:26,809
or hots and to include and the client

2229
01:55:23,239 --> 01:55:28,669
then in step 3 sends pikas he is 10 T of

2230
01:55:26,810 --> 01:55:31,550
e to the t server keep server turns

2231
01:55:28,670 --> 01:55:34,430
around and interacts react me Acme will

2232
01:55:31,550 --> 01:55:35,960
turn around and say the status is

2233
01:55:34,430 --> 01:55:37,219
processing I'm not ready to she was

2234
01:55:35,960 --> 01:55:38,180
searched yet Holly she was hurt in a

2235
01:55:37,219 --> 01:55:40,880
certain period of time

2236
01:55:38,180 --> 01:55:43,160
acme has a mechanism for specifying our

2237
01:55:40,880 --> 01:55:45,230
retry after interval to the Acme client

2238
01:55:43,160 --> 01:55:47,030
the teep server is jack me client and

2239
01:55:45,230 --> 01:55:50,120
turned around and used the new retry

2240
01:55:47,030 --> 01:55:52,670
after kill the send that retry back to

2241
01:55:50,120 --> 01:55:55,670
the client the client will then retry

2242
01:55:52,670 --> 01:55:57,050
after that timeout has courage I'm the

2243
01:55:55,670 --> 01:55:58,820
way that the tip of the attractor is

2244
01:55:57,050 --> 01:56:00,350
currently specified it's just two

2245
01:55:58,820 --> 01:56:02,389
different mechanisms for doing to retry

2246
01:56:00,350 --> 01:56:04,460
one is wood in the tunnel if it's a

2247
01:56:02,390 --> 01:56:06,380
short control to is outside the tunnel

2248
01:56:04,460 --> 01:56:08,570
it was a long interval

2249
01:56:06,380 --> 01:56:11,659
and that's indicated via either a 1x X

2250
01:56:08,570 --> 01:56:14,900
or a 2x X error code until V and T TLV

2251
01:56:11,659 --> 01:56:16,670
and and then finally after the retry

2252
01:56:14,900 --> 01:56:18,349
declined part illustrator here is

2253
01:56:16,670 --> 01:56:20,480
happening inside the same tunnel the

2254
01:56:18,350 --> 01:56:23,000
client in step nine sends the exact same

2255
01:56:20,480 --> 01:56:25,129
pkc as ten requests again to the teep

2256
01:56:23,000 --> 01:56:27,230
server keep server then goes to Acme and

2257
01:56:25,130 --> 01:56:30,080
the finalize our ger is ready

2258
01:56:27,230 --> 01:56:33,099
it downloads the certain returns it to

2259
01:56:30,080 --> 01:56:35,840
the client in the pkcs7

2260
01:56:33,100 --> 01:56:37,340
next slide is the final slide so

2261
01:56:35,840 --> 01:56:38,810
discussion of what's missing from the

2262
01:56:37,340 --> 01:56:40,790
draft is security considerations it's

2263
01:56:38,810 --> 01:56:44,179
security considerations need to touch on

2264
01:56:40,790 --> 01:56:47,929
all the integrations so EST and brewski

2265
01:56:44,179 --> 01:56:50,510
and acme and t p-- and but the biggest

2266
01:56:47,929 --> 01:56:52,010
the biggest thing that I'd like to

2267
01:56:50,510 --> 01:56:53,360
discuss here and the questions I'd like

2268
01:56:52,010 --> 01:56:56,320
to get feedback from is because this

2269
01:56:53,360 --> 01:57:00,049
spans multiple working groups Acme anima

2270
01:56:56,320 --> 01:57:01,940
mu why do we do with this where do we go

2271
01:57:00,050 --> 01:57:03,650
next with this with this draft several

2272
01:57:01,940 --> 01:57:05,419
people on several organizations have

2273
01:57:03,650 --> 01:57:31,690
expressed interest in us but we don't

2274
01:57:05,420 --> 01:57:35,600
over at lands any questions comment sir

2275
01:57:31,690 --> 01:57:37,449
not really on this point some other

2276
01:57:35,600 --> 01:57:39,800
point a just a clarification question

2277
01:57:37,449 --> 01:57:41,769
when you do the the translation between

2278
01:57:39,800 --> 01:57:46,040
the two protocols how do you handle the

2279
01:57:41,770 --> 01:57:48,290
account management that is in Acme so is

2280
01:57:46,040 --> 01:57:49,880
the account that is used to request the

2281
01:57:48,290 --> 01:57:53,510
certificates from the temporary server

2282
01:57:49,880 --> 01:57:57,880
or from the client well the tip server

2283
01:57:53,510 --> 01:58:01,699
is Technic right oh okay thank you

2284
01:57:57,880 --> 01:58:03,230
Roman so back to the kind of the

2285
01:58:01,699 --> 01:58:04,759
question where do we do it unfortunately

2286
01:58:03,230 --> 01:58:06,110
I know the sec dispatch agenda is full

2287
01:58:04,760 --> 01:58:08,750
so we can't take it there or kind of

2288
01:58:06,110 --> 01:58:14,089
later this week so we can start I'm

2289
01:58:08,750 --> 01:58:15,739
sorry there is still that you're right

2290
01:58:14,090 --> 01:58:17,900
then yeah the question I was gonna ask

2291
01:58:15,739 --> 01:58:19,730
is I mean would this working group be

2292
01:58:17,900 --> 01:58:20,320
against doing the work here and we can

2293
01:58:19,730 --> 01:58:26,379
ask

2294
01:58:20,320 --> 01:58:28,420
you know acne as well I'm Francia just a

2295
01:58:26,380 --> 01:58:34,239
quick question is there any relation of

2296
01:58:28,420 --> 01:58:37,269
this drafter with the bouzouki yes it

2297
01:58:34,239 --> 01:58:40,058
got its intranet wait with brewski well

2298
01:58:37,269 --> 01:58:41,800
what would religion so brewskis loosened

2299
01:58:40,059 --> 01:58:43,360
up for ESG so the actual certain role

2300
01:58:41,800 --> 01:58:46,719
mechanism in brewski just uses

2301
01:58:43,360 --> 01:58:49,058
boilerplate est yes um and this can

2302
01:58:46,719 --> 01:58:51,130
integrate with est and that when the

2303
01:58:49,059 --> 01:58:52,719
client sends the est simple enroll or

2304
01:58:51,130 --> 01:58:54,670
foreign oil message to the each server

2305
01:58:52,719 --> 01:58:57,010
deep server can turn around and turned

2306
01:58:54,670 --> 01:58:58,750
it into an acne request because what and

2307
01:58:57,010 --> 01:59:01,210
and in fact if you read the est draft

2308
01:58:58,750 --> 01:59:02,679
the eastery draft says that when the

2309
01:59:01,210 --> 01:59:06,099
server is deployed as a registration

2310
01:59:02,679 --> 01:59:08,230
authority as an RA the protocol and the

2311
01:59:06,099 --> 01:59:10,030
interactions between the RA and the

2312
01:59:08,230 --> 01:59:13,678
certificate authority is out of scope of

2313
01:59:10,030 --> 01:59:17,768
the UST draft so it could be acne yes

2314
01:59:13,679 --> 01:59:20,050
because uh but um but my point is that

2315
01:59:17,769 --> 01:59:23,170
yeah I understand your point but that's

2316
01:59:20,050 --> 01:59:26,559
just the very last step of the Yeomen of

2317
01:59:23,170 --> 01:59:29,170
the devices so it whiskeys are mainly

2318
01:59:26,559 --> 01:59:32,650
about it that you know that from the

2319
01:59:29,170 --> 01:59:34,210
beginning on here the est so yeah but

2320
01:59:32,650 --> 01:59:36,879
the only the only relationship is is

2321
01:59:34,210 --> 01:59:39,039
what's behind that est simple wrong API

2322
01:59:36,880 --> 01:59:42,550
what's behind the ECC inferno Lindy I

2323
01:59:39,039 --> 01:59:43,989
could be acne map on there did comparing

2324
01:59:42,550 --> 01:59:47,710
to other working group I think the

2325
01:59:43,989 --> 01:59:50,259
bullski has so little radiation where if

2326
01:59:47,710 --> 01:59:57,340
your radiation with your work other may

2327
01:59:50,260 --> 01:59:59,590
be more related yeah I think you know we

2328
01:59:57,340 --> 02:00:02,050
can do a poll here I don't know if

2329
01:59:59,590 --> 02:00:06,519
that's gonna think how many people have

2330
02:00:02,050 --> 02:00:10,300
read the document okay three people so I

2331
02:00:06,519 --> 02:00:12,880
think we have to get a little more you

2332
02:00:10,300 --> 02:00:14,920
know people looking at it and you know

2333
02:00:12,880 --> 02:00:17,320
if there is interest I don't I don't

2334
02:00:14,920 --> 02:00:18,699
think it's impossible to do it in this

2335
02:00:17,320 --> 02:00:20,650
working group it doesn't strike me as

2336
02:00:18,699 --> 02:00:25,690
necessarily being the most logical group

2337
02:00:20,650 --> 02:00:28,179
to do it in but you know it I suppose

2338
02:00:25,690 --> 02:00:30,909
it's as good as any so I kill one of one

2339
02:00:28,179 --> 02:00:33,780
of the agenda items for acne this week

2340
02:00:30,909 --> 02:00:38,099
is should it be adopted by acne okay

2341
02:00:33,780 --> 02:00:40,240
so if they adopt it then that's great I

2342
02:00:38,100 --> 02:00:41,470
take the answer would be no from athlete

2343
02:00:40,240 --> 02:00:43,599
all right so let's say and I'll take it

2344
02:00:41,470 --> 02:00:45,040
to EMU or take it to somewhere else the

2345
02:00:43,600 --> 02:00:45,790
only reason I think this le the only

2346
02:00:45,040 --> 02:00:48,130
reason I think you should be adopted

2347
02:00:45,790 --> 02:00:49,750
here is that it's gonna normally block

2348
02:00:48,130 --> 02:00:52,510
on the teep update it's gonna

2349
02:00:49,750 --> 02:00:54,580
normatively block on the t pub meet so I

2350
02:00:52,510 --> 02:00:56,230
mean it works happening here if you're

2351
02:00:54,580 --> 02:00:57,940
gonna normally block normatively block

2352
02:00:56,230 --> 02:01:00,660
on something you hacked me then then

2353
02:00:57,940 --> 02:01:00,660
it's a 710 split

2354
02:01:02,220 --> 02:01:08,520
okay but I think there's you know more

2355
02:01:05,860 --> 02:01:08,519
discussion to be had

2356
02:01:10,950 --> 02:01:16,480
all right I think that's it for this

2357
02:01:14,530 --> 02:01:44,980
edition of your email working group

2358
02:01:16,480 --> 02:01:46,570
meeting yeah hey John so like yeah just

2359
02:01:44,980 --> 02:01:49,269
you know since there are these questions

2360
02:01:46,570 --> 02:02:02,250
I just was unresolved right and maybe

2361
02:01:49,270 --> 02:02:02,250
it's fine it's not like a big deal

