1
00:00:08,400 --> 00:00:29,110
and we got those other to Pakistan so he

2
00:00:26,739 --> 00:00:31,090
just went to the wrong room yeah well I

3
00:00:29,110 --> 00:00:35,050
got in here - Harris was kidding I'll

4
00:00:31,090 --> 00:00:38,380
set up a working group so we both had to

5
00:00:35,050 --> 00:00:45,280
look she was I knew I was in all right

6
00:00:38,380 --> 00:00:47,440
but because we were here before yes well

7
00:00:45,280 --> 00:00:51,250
and also our minute takers just arrived

8
00:00:47,440 --> 00:01:04,780
yes just in tongue so we need to give

9
00:00:51,250 --> 00:01:06,189
her time to set up so we're going to get

10
00:01:04,780 --> 00:01:08,650
started within a couple of minutes we

11
00:01:06,189 --> 00:01:10,710
left our minute taker get set up and I

12
00:01:08,650 --> 00:01:17,500
think we're still missing the presenter

13
00:01:10,710 --> 00:01:21,539
Mark Smith are you in the room no guess

14
00:01:17,500 --> 00:01:21,540
it's this session between us and beer so

15
00:01:39,390 --> 00:03:12,299
yeah so Michael you take anyone so wait

16
00:03:15,269 --> 00:03:31,660
okay so shipping are you in the room

17
00:03:29,220 --> 00:03:35,380
excellent doing jabber again thank you

18
00:03:31,660 --> 00:03:37,900
if someone else wanna join in and help

19
00:03:35,380 --> 00:03:38,410
Barbara on the etherpad for minutes that

20
00:03:37,900 --> 00:03:43,770
would be fun

21
00:03:38,410 --> 00:03:45,700
thank you there will be eternal

22
00:03:43,770 --> 00:03:58,480
gratefulness

23
00:03:45,700 --> 00:04:01,660
dished out know as if anyone have the

24
00:03:58,480 --> 00:04:05,440
phone number for mr. Smith and give him

25
00:04:01,660 --> 00:04:07,090
a little nudge would be nice otherwise I

26
00:04:05,440 --> 00:04:18,160
think we will have to swap the order of

27
00:04:07,090 --> 00:04:21,310
the presentations yeah I mean we have we

28
00:04:18,160 --> 00:04:25,660
have some buffer at the end here we'll

29
00:04:21,310 --> 00:04:31,870
be alright if you want to sing something

30
00:04:25,660 --> 00:04:34,630
Suresh yes so so our esteemed ad is now

31
00:04:31,870 --> 00:04:37,180
going to come up and sing a song from

32
00:04:34,630 --> 00:04:39,780
from Bollywood you know he has a in this

33
00:04:37,180 --> 00:04:39,780
early years

34
00:05:22,730 --> 00:05:25,769
[Music]

35
00:05:45,310 --> 00:06:02,389
run faster we are waiting for you march

36
00:05:49,960 --> 00:06:05,359
right okay so welcome to the second

37
00:06:02,389 --> 00:06:09,080
six-man session we now got the press

38
00:06:05,360 --> 00:06:11,870
enter for the first presentation on

39
00:06:09,080 --> 00:06:14,568
extension headers Terrance doing the the

40
00:06:11,870 --> 00:06:16,669
other one and then the plan was to hold

41
00:06:14,569 --> 00:06:18,199
questions until the the end of the two

42
00:06:16,669 --> 00:06:20,840
sessions we can have clarifying sessions

43
00:06:18,199 --> 00:06:22,490
after after marks talk and errands but

44
00:06:20,840 --> 00:06:25,729
then we can have a general discussion on

45
00:06:22,490 --> 00:06:27,800
the topic topic afterwards super marking

46
00:06:25,729 --> 00:06:29,719
if you can't you caught your breath

47
00:06:27,800 --> 00:06:34,960
you know presenting again later tonight

48
00:06:29,719 --> 00:06:39,560
so okay in flight ipv6 header extension

49
00:06:34,960 --> 00:06:42,680
inserting considered harmful boom

50
00:06:39,560 --> 00:06:45,110
RFC is 1893 and twenty four sixty so

51
00:06:42,680 --> 00:06:47,750
this about some processing of extension

52
00:06:45,110 --> 00:06:49,400
headers with one exception extension

53
00:06:47,750 --> 00:06:51,699
headers are not examined a process by

54
00:06:49,400 --> 00:06:53,710
any node along a packets delivery path

55
00:06:51,699 --> 00:06:55,580
until the packet reaches a node

56
00:06:53,710 --> 00:07:00,229
identified in the destination address

57
00:06:55,580 --> 00:07:01,068
field of the ipv6 header the exception

58
00:07:00,229 --> 00:07:03,830
is the hop-by-hop

59
00:07:01,069 --> 00:07:05,750
options header which carries information

60
00:07:03,830 --> 00:07:07,520
which me examined and process by every

61
00:07:05,750 --> 00:07:09,650
node along a package delivery path the

62
00:07:07,520 --> 00:07:11,900
hop-by-hop options header must

63
00:07:09,650 --> 00:07:13,758
immediately follow the ipv6 header its

64
00:07:11,900 --> 00:07:17,900
presence indicated by the value zero in

65
00:07:13,759 --> 00:07:21,380
the next set of field RFC 8200 updated

66
00:07:17,900 --> 00:07:23,630
this and made a bit more explicit

67
00:07:21,380 --> 00:07:25,759
extension headers are not processed

68
00:07:23,630 --> 00:07:26,930
inserted or deleted by any node along a

69
00:07:25,759 --> 00:07:28,729
package delivery path

70
00:07:26,930 --> 00:07:32,270
until the packet reaches the destination

71
00:07:28,729 --> 00:07:35,690
dress mmm and the hop-by-hop

72
00:07:32,270 --> 00:07:38,930
options text was modified in a similar

73
00:07:35,690 --> 00:07:41,509
way the other difference is it says it's

74
00:07:38,930 --> 00:07:45,530
may be examined or processed rather than

75
00:07:41,509 --> 00:07:48,500
must be the changes and motivations with

76
00:07:45,530 --> 00:07:50,830
regards to the offer by hop header it

77
00:07:48,500 --> 00:07:54,070
was found that high-speed routers were

78
00:07:50,830 --> 00:07:57,758
ignoring the requirement of must process

79
00:07:54,070 --> 00:07:57,759
so that was solution

80
00:07:58,820 --> 00:08:03,259
the other one was triggered by a draft

81
00:08:00,500 --> 00:08:07,039
around the time of value 200 it's an

82
00:08:03,259 --> 00:08:08,840
example in this it's it's related to the

83
00:08:07,039 --> 00:08:12,800
spring work but I'm pretty sure there's

84
00:08:08,840 --> 00:08:14,780
been a few other internet drafts mmm and

85
00:08:12,800 --> 00:08:19,849
that's why there was some clarifications

86
00:08:14,780 --> 00:08:22,219
about what eh processing involved one

87
00:08:19,849 --> 00:08:24,199
thing to remember about RFC 8200 is

88
00:08:22,220 --> 00:08:26,270
actually one of the 92 full internet

89
00:08:24,199 --> 00:08:28,669
standards and there's billions of

90
00:08:26,270 --> 00:08:32,630
implementations and there's 100 in this

91
00:08:28,669 --> 00:08:35,630
room so the purpose of this internet

92
00:08:32,630 --> 00:08:37,729
draft was really to capture the and

93
00:08:35,630 --> 00:08:42,830
record the reasons and motivations for

94
00:08:37,729 --> 00:08:44,870
the 1883 24 60 and 80 200 text and also

95
00:08:42,830 --> 00:08:49,250
to describe an ipv6 architecture Allah

96
00:08:44,870 --> 00:08:52,250
compliant solution to define in in

97
00:08:49,250 --> 00:08:54,290
flight eh insertion we've got a packet

98
00:08:52,250 --> 00:08:58,070
going from the left to the right or from

99
00:08:54,290 --> 00:09:00,760
A to C it's transiting Network B and

100
00:08:58,070 --> 00:09:05,089
network beyond ingress is inserting an

101
00:09:00,760 --> 00:09:07,520
extension header and then at egress of B

102
00:09:05,089 --> 00:09:10,070
hopefully the extension header is

103
00:09:07,520 --> 00:09:13,939
removed so that the original packet

104
00:09:10,070 --> 00:09:15,709
arrives at C some observations the

105
00:09:13,940 --> 00:09:18,980
original source and destination address

106
00:09:15,709 --> 00:09:20,569
of the packet are not modified during

107
00:09:18,980 --> 00:09:23,029
insertion and removal and they couldn't

108
00:09:20,570 --> 00:09:26,350
be the packets are being modified

109
00:09:23,029 --> 00:09:29,209
without attribution so it's an anonymous

110
00:09:26,350 --> 00:09:32,480
modification the packet size got larger

111
00:09:29,209 --> 00:09:38,029
and an immutable next header field got

112
00:09:32,480 --> 00:09:40,350
modified as well the motivation we this

113
00:09:38,029 --> 00:09:44,910
this particular draft hasn't really

114
00:09:40,350 --> 00:09:46,730
why it wants to do insertion my

115
00:09:44,910 --> 00:09:49,469
speculation is that because there's

116
00:09:46,730 --> 00:09:51,780
128-bit segment routing IDs the same

117
00:09:49,470 --> 00:09:53,700
size as ipv6 addresses it's going to

118
00:09:51,780 --> 00:09:55,199
route it quite a lot of overhead and so

119
00:09:53,700 --> 00:09:56,970
perhaps the idea is to try and save

120
00:09:55,200 --> 00:10:01,470
overhead somewhere else instead of

121
00:09:56,970 --> 00:10:04,050
having smaller seeds one quote which has

122
00:10:01,470 --> 00:10:06,180
been removed I think Darren posted

123
00:10:04,050 --> 00:10:07,890
version eight of this but and and and

124
00:10:06,180 --> 00:10:09,630
this is an example of text we might want

125
00:10:07,890 --> 00:10:11,600
to look for rather than being

126
00:10:09,630 --> 00:10:13,890
specifically one that's continued

127
00:10:11,600 --> 00:10:16,760
there's some theory in the draft since

128
00:10:13,890 --> 00:10:18,990
the SRH inserted within a inter

129
00:10:16,760 --> 00:10:20,670
intermediate node must be removed when

130
00:10:18,990 --> 00:10:22,890
all segments within the SRH are being

131
00:10:20,670 --> 00:10:24,689
visited it is not possible to leak their

132
00:10:22,890 --> 00:10:26,630
search to the destination outside the

133
00:10:24,690 --> 00:10:30,740
source domain

134
00:10:26,630 --> 00:10:32,960
unfortunately that's a theoretical

135
00:10:30,740 --> 00:10:35,460
statement rather than a practical one

136
00:10:32,960 --> 00:10:37,260
I've experienced all three of these

137
00:10:35,460 --> 00:10:39,960
things in my career implementation bugs

138
00:10:37,260 --> 00:10:43,410
partial device failures and device miss

139
00:10:39,960 --> 00:10:47,820
configurations so that sort of mass

140
00:10:43,410 --> 00:10:49,949
desertion in a internet draft or enough

141
00:10:47,820 --> 00:10:55,530
C is really an aspiration it's not

142
00:10:49,950 --> 00:10:58,560
assurance it it may not be removed the

143
00:10:55,530 --> 00:11:01,050
other thing to to observe or be aware of

144
00:10:58,560 --> 00:11:02,609
is that these sorts of boundary devices

145
00:11:01,050 --> 00:11:05,550
and while the firewall is not quite the

146
00:11:02,610 --> 00:11:08,310
same it's quite common to have only a

147
00:11:05,550 --> 00:11:10,050
single instance of them I have actually

148
00:11:08,310 --> 00:11:12,930
heard of somebody having two NAT devices

149
00:11:10,050 --> 00:11:14,069
in a row surprisingly it was at their

150
00:11:12,930 --> 00:11:17,430
home and there was some information

151
00:11:14,070 --> 00:11:19,170
security person from Y or something but

152
00:11:17,430 --> 00:11:20,520
most the time in my experience there's

153
00:11:19,170 --> 00:11:22,800
only been a single edge device

154
00:11:20,520 --> 00:11:24,449
performing these sorts of function so

155
00:11:22,800 --> 00:11:26,459
that that's really only that means

156
00:11:24,450 --> 00:11:29,280
there's really only one opportunity to

157
00:11:26,460 --> 00:11:31,710
perform this operation if the operation

158
00:11:29,280 --> 00:11:34,740
isn't performed then the packet just

159
00:11:31,710 --> 00:11:36,690
keeps going without the changes that

160
00:11:34,740 --> 00:11:38,580
it's supposed to have so we have a

161
00:11:36,690 --> 00:11:42,690
single point of failure on the the

162
00:11:38,580 --> 00:11:46,260
boundary this is a scenario and this is

163
00:11:42,690 --> 00:11:50,790
sort of where where my objection comes

164
00:11:46,260 --> 00:11:52,230
from we have a scenario where a packets

165
00:11:50,790 --> 00:11:53,760
traveling across the internet from a

166
00:11:52,230 --> 00:11:56,030
source is on the left

167
00:11:53,760 --> 00:11:58,439
through the destination is on the right

168
00:11:56,030 --> 00:12:01,140
the sorceress might be say a video

169
00:11:58,440 --> 00:12:03,090
content provider the destination is on

170
00:12:01,140 --> 00:12:05,600
the other end is a residential ice P and

171
00:12:03,090 --> 00:12:08,040
I've spent quite a lot of time at those

172
00:12:05,600 --> 00:12:10,590
as our packet goes across the internet

173
00:12:08,040 --> 00:12:14,599
it traverses a number of a SS and is one

174
00:12:10,590 --> 00:12:17,550
has chosen to do anonymous eh insertion

175
00:12:14,600 --> 00:12:19,740
for some reason rather they failed to

176
00:12:17,550 --> 00:12:21,030
remove there instead of the H because

177
00:12:19,740 --> 00:12:23,700
the destination address of the packet

178
00:12:21,030 --> 00:12:27,839
hasn't changed the packet will just keep

179
00:12:23,700 --> 00:12:29,760
going to the destination da s and the

180
00:12:27,840 --> 00:12:32,640
brokenness would occur at the

181
00:12:29,760 --> 00:12:34,170
destination is the question then as me

182
00:12:32,640 --> 00:12:36,810
is an operator sitting there looking at

183
00:12:34,170 --> 00:12:39,089
these packets that may be taking five or

184
00:12:36,810 --> 00:12:42,979
ten thousand of my customers video

185
00:12:39,090 --> 00:12:45,210
content offline is who inserted the H

186
00:12:42,980 --> 00:12:48,690
there's nothing in the packet that tells

187
00:12:45,210 --> 00:12:51,600
me that and therefore I will have to

188
00:12:48,690 --> 00:12:54,960
manually or going brute-force contact

189
00:12:51,600 --> 00:12:57,780
every single is asked that is are you

190
00:12:54,960 --> 00:12:59,460
inserting a h's ask them are you

191
00:12:57,780 --> 00:13:01,740
removing them and they'll say no my

192
00:12:59,460 --> 00:13:04,680
vendor writes perfect code and I'll say

193
00:13:01,740 --> 00:13:06,900
can you have a look place it may even

194
00:13:04,680 --> 00:13:08,790
involve you know disconnecting hundred

195
00:13:06,900 --> 00:13:11,550
gig links to try and insert some sort of

196
00:13:08,790 --> 00:13:13,469
device to to you know capture the

197
00:13:11,550 --> 00:13:14,969
packets to determine that the device is

198
00:13:13,470 --> 00:13:17,160
really performing as it's supposed to be

199
00:13:14,970 --> 00:13:19,410
the problem is that this fault is only

200
00:13:17,160 --> 00:13:21,870
really seen as after the packets left

201
00:13:19,410 --> 00:13:24,000
the network so most operators and I've

202
00:13:21,870 --> 00:13:26,070
certainly been one of them if you like

203
00:13:24,000 --> 00:13:29,510
I've never inspected the packets leaving

204
00:13:26,070 --> 00:13:29,510
my network to see if they're good or not

205
00:13:29,660 --> 00:13:34,579
you know once they're gone once the

206
00:13:32,400 --> 00:13:38,850
traffic's there they're gone

207
00:13:34,580 --> 00:13:40,440
so the consequences impacts the sort of

208
00:13:38,850 --> 00:13:42,360
fundamental thing is it's ignoring the

209
00:13:40,440 --> 00:13:45,900
source address field semantics the

210
00:13:42,360 --> 00:13:48,330
packet has now got in effect two devices

211
00:13:45,900 --> 00:13:50,520
that have constructed the packet but

212
00:13:48,330 --> 00:13:53,190
only one of them is identified by the

213
00:13:50,520 --> 00:13:56,610
source address and this means that in in

214
00:13:53,190 --> 00:13:58,290
this case the if the eh triggers some

215
00:13:56,610 --> 00:14:00,300
sort of mechanism that relies on the

216
00:13:58,290 --> 00:14:03,810
source address of the packet it's not

217
00:14:00,300 --> 00:14:07,109
going to work because it can't the the

218
00:14:03,810 --> 00:14:10,768
eh device the eh inserting device has an

219
00:14:07,110 --> 00:14:15,600
been identified the the classic case

220
00:14:10,769 --> 00:14:18,899
would be icmpv6 so if the eh triggers an

221
00:14:15,600 --> 00:14:21,540
ICMP mechanism of some sort it will

222
00:14:18,899 --> 00:14:23,790
though the the device that sends the

223
00:14:21,540 --> 00:14:24,930
icmpv6 message can only ever send it

224
00:14:23,790 --> 00:14:26,939
back to the source address of the packet

225
00:14:24,930 --> 00:14:30,269
well that's not the device that inserted

226
00:14:26,940 --> 00:14:32,990
eh so it's not going to make it to a

227
00:14:30,269 --> 00:14:36,990
device that can consult the issue a

228
00:14:32,990 --> 00:14:39,060
specific case is icmpv6 PMT UD the

229
00:14:36,990 --> 00:14:43,709
packet size has got bigger because the

230
00:14:39,060 --> 00:14:46,260
of the inserted eh if that triggers a

231
00:14:43,709 --> 00:14:48,630
packet to a big message it can't and

232
00:14:46,260 --> 00:14:51,410
won't be sent to the eh inserting device

233
00:14:48,630 --> 00:14:55,230
because that's not identified

234
00:14:51,410 --> 00:14:58,110
it'll also potentially break lipstick or

235
00:14:55,230 --> 00:15:00,089
IPSec if it will if it's not removed

236
00:14:58,110 --> 00:15:06,290
when it arrives it'll look like

237
00:15:00,089 --> 00:15:06,290
unauthorized modification of the packet

238
00:15:06,860 --> 00:15:12,750
another possibility in my diagram I only

239
00:15:09,899 --> 00:15:14,070
had one transit network inserting h's

240
00:15:12,750 --> 00:15:17,820
but imagine if one of those other ones

241
00:15:14,070 --> 00:15:19,800
was as well if the first AAS didn't

242
00:15:17,820 --> 00:15:22,620
remove the EH and it kept floating along

243
00:15:19,800 --> 00:15:25,109
to a later transit network and that

244
00:15:22,620 --> 00:15:27,810
later transit network was also using eh

245
00:15:25,110 --> 00:15:31,769
insertion then the EH might get inside

246
00:15:27,810 --> 00:15:36,779
that Network any impact operation some

247
00:15:31,769 --> 00:15:38,730
other way incorrect destination host

248
00:15:36,779 --> 00:15:41,370
processing so one of the issues is that

249
00:15:38,730 --> 00:15:43,260
this this eh that was inserted was not

250
00:15:41,370 --> 00:15:46,170
intended to be received by the device

251
00:15:43,260 --> 00:15:50,069
with the destination address and how an

252
00:15:46,170 --> 00:15:52,769
unknown here unknown eh is handled is

253
00:15:50,070 --> 00:15:56,130
indicated by the top two bits in the

254
00:15:52,769 --> 00:15:58,500
type of the EH this could result in a

255
00:15:56,130 --> 00:15:59,820
packet that gets discarded even though

256
00:15:58,500 --> 00:16:02,610
it would actually be possible to skip

257
00:15:59,820 --> 00:16:04,680
over the unknown option and process the

258
00:16:02,610 --> 00:16:06,720
remainder of the packet the opposite

259
00:16:04,680 --> 00:16:08,699
could occur as well so a packet could

260
00:16:06,720 --> 00:16:12,320
get I've actually lost which order I did

261
00:16:08,699 --> 00:16:14,099
it but anyway the packet could get

262
00:16:12,320 --> 00:16:16,649
processed when it should really be

263
00:16:14,100 --> 00:16:18,540
discarded based on the context of the

264
00:16:16,649 --> 00:16:22,620
video so you know the application that

265
00:16:18,540 --> 00:16:24,629
it's in the payload a packet

266
00:16:22,620 --> 00:16:26,819
implementation complexity if you think

267
00:16:24,629 --> 00:16:31,319
about it the edge device the on egress

268
00:16:26,819 --> 00:16:33,389
has to scan the eh chain assume it's

269
00:16:31,319 --> 00:16:35,490
possibly not the first one to determine

270
00:16:33,389 --> 00:16:38,310
whether there's an eh there to remove or

271
00:16:35,490 --> 00:16:41,009
not this is comp more complex and using

272
00:16:38,310 --> 00:16:43,229
a simple destination address match in

273
00:16:41,009 --> 00:16:46,829
the destination address says to a device

274
00:16:43,230 --> 00:16:48,240
or says to a router should this be

275
00:16:46,829 --> 00:16:49,800
forwarded further using simple

276
00:16:48,240 --> 00:16:53,060
forwarding or should more deeper

277
00:16:49,800 --> 00:16:53,060
processing the packet occur

278
00:16:53,959 --> 00:16:59,219
finally the I think it's even as

279
00:16:57,360 --> 00:17:02,790
fundamental as hostels law or robustness

280
00:16:59,220 --> 00:17:04,470
principle which says be conservative

281
00:17:02,790 --> 00:17:08,280
what you send be liberal on what you

282
00:17:04,470 --> 00:17:12,510
accept inserted eh Azhar not expected by

283
00:17:08,280 --> 00:17:14,699
RFC 8200 compliant receivers as RFC 8200

284
00:17:12,510 --> 00:17:16,020
P Hibbert some so purposely sending them

285
00:17:14,699 --> 00:17:19,919
is not being conservative

286
00:17:16,020 --> 00:17:21,900
I think the solutions encapsulation it's

287
00:17:19,919 --> 00:17:25,620
the classic way to add new information

288
00:17:21,900 --> 00:17:27,809
to an existing PDE obviously we should

289
00:17:25,619 --> 00:17:31,049
all understand and remember TCP and caps

290
00:17:27,809 --> 00:17:35,789
application IP and caps TCP link layer

291
00:17:31,049 --> 00:17:39,960
caps IP the to me the solution is to

292
00:17:35,789 --> 00:17:42,360
encapsulate in an ipv6 tunnel an RFC 24

293
00:17:39,960 --> 00:17:44,730
73 the generic packet tunnelling over

294
00:17:42,360 --> 00:17:47,340
ipv6 spec actually shows an example of

295
00:17:44,730 --> 00:17:52,460
adding new EHS to an existing packet

296
00:17:47,340 --> 00:17:56,480
after the new outer ipv6 header and

297
00:17:52,460 --> 00:17:59,070
therefore RFC 24 73 provides a tradition

298
00:17:56,480 --> 00:18:01,890
attribution via the outer ipv6 source

299
00:17:59,070 --> 00:18:05,418
addressed as an example of the benefit

300
00:18:01,890 --> 00:18:08,280
that means that PMT OD works because the

301
00:18:05,419 --> 00:18:10,500
the the tunnel endpoint that increased

302
00:18:08,280 --> 00:18:15,289
the packet size is identified by the

303
00:18:10,500 --> 00:18:17,370
source address in the outer header

304
00:18:15,289 --> 00:18:18,600
there's a really good internet draft

305
00:18:17,370 --> 00:18:20,870
that's been in development for quite a

306
00:18:18,600 --> 00:18:23,158
while that it expands much more on

307
00:18:20,870 --> 00:18:25,469
tunnels in the internet architecture I

308
00:18:23,159 --> 00:18:27,150
think from memory it's 20 or 30 pages so

309
00:18:25,470 --> 00:18:32,640
it's quite a big read but very

310
00:18:27,150 --> 00:18:34,740
comprehensive 50 okay it's very good one

311
00:18:32,640 --> 00:18:37,500
of the issues which which seems to be

312
00:18:34,740 --> 00:18:41,059
possible motivation is to try and reduce

313
00:18:37,500 --> 00:18:43,470
telling overhead one of the struggles I

314
00:18:41,059 --> 00:18:45,600
remember dealing with because I've done

315
00:18:43,470 --> 00:18:48,899
quite a lot of work in the past with

316
00:18:45,600 --> 00:18:52,020
IPSec tunnels is this idea that there's

317
00:18:48,899 --> 00:18:53,850
an IP packet inside of another IP packet

318
00:18:52,020 --> 00:18:56,070
and it's sometimes a bit of a struggle

319
00:18:53,850 --> 00:18:59,070
to sort of forget that the payload of

320
00:18:56,070 --> 00:19:02,639
the outer packet is a is a I P v6 packet

321
00:18:59,070 --> 00:19:04,889
in itself so in that context if we

322
00:19:02,640 --> 00:19:07,320
forget about we just look at the model

323
00:19:04,890 --> 00:19:09,809
in a common ipv6 packet there's a link

324
00:19:07,320 --> 00:19:14,189
layer header on the front Ethernet PDP

325
00:19:09,809 --> 00:19:16,340
etc in an ipv6 and ipv6 tunnel it's the

326
00:19:14,190 --> 00:19:19,470
same thing it just happens to be another

327
00:19:16,340 --> 00:19:22,020
ipv6 header and it's coincidence that

328
00:19:19,470 --> 00:19:26,610
the the fields and the semantics have

329
00:19:22,020 --> 00:19:28,350
the same meaning so if we consider and

330
00:19:26,610 --> 00:19:32,629
remember that an IP tunnel is a link

331
00:19:28,350 --> 00:19:35,639
layer link then we can use link layer

332
00:19:32,630 --> 00:19:40,350
compression to compress the inner packet

333
00:19:35,640 --> 00:19:42,149
an example would be robust header

334
00:19:40,350 --> 00:19:44,340
compression so you would apply this on

335
00:19:42,149 --> 00:19:46,260
the inner packets ipv6 header and

336
00:19:44,340 --> 00:19:48,539
possible either possibly other headers

337
00:19:46,260 --> 00:19:51,450
on the inner packet to compress the

338
00:19:48,539 --> 00:19:52,799
effective size of the total something

339
00:19:51,450 --> 00:19:54,960
else that I worked on a few years back

340
00:19:52,799 --> 00:19:58,139
just as an idea sort of triggered by

341
00:19:54,960 --> 00:20:00,539
this was what I've called skinny ipv6

342
00:19:58,140 --> 00:20:02,460
and ipv6 tunneling so this actually

343
00:20:00,539 --> 00:20:04,350
leverages the fact that the inner packet

344
00:20:02,460 --> 00:20:07,890
and the outer packet have the same

345
00:20:04,350 --> 00:20:10,199
header and how same header semantics and

346
00:20:07,890 --> 00:20:12,480
so what it does is for nearly all of the

347
00:20:10,200 --> 00:20:15,840
fields it basically makes the outer

348
00:20:12,480 --> 00:20:19,200
header carry many of the inner fields

349
00:20:15,840 --> 00:20:21,629
values and then disposes of nearly all

350
00:20:19,200 --> 00:20:23,520
of the inner packet header effectively

351
00:20:21,630 --> 00:20:25,860
and then reconstructs at the other end

352
00:20:23,520 --> 00:20:28,500
another thing it does is use a slash

353
00:20:25,860 --> 00:20:33,629
64's to identify tunnel endpoints rather

354
00:20:28,500 --> 00:20:36,919
than such 128 and the unused IRD parts

355
00:20:33,630 --> 00:20:40,770
of the outer ipv6 header address fields

356
00:20:36,919 --> 00:20:42,210
copy and carry the inner packets IRD

357
00:20:40,770 --> 00:20:44,710
fields

358
00:20:42,210 --> 00:20:47,740
one of the emergent advantages of this

359
00:20:44,710 --> 00:20:49,270
is that the actual I the the packet the

360
00:20:47,740 --> 00:20:51,610
tunnel packets will actually be spread

361
00:20:49,270 --> 00:20:55,389
by re CMP because they become inputs

362
00:20:51,610 --> 00:20:56,020
into the ECM P load sharing so that was

363
00:20:55,390 --> 00:20:59,880
just an idea

364
00:20:56,020 --> 00:21:04,360
another way of possibly reducing the

365
00:20:59,880 --> 00:21:08,170
tunneling overhead alright

366
00:21:04,360 --> 00:21:10,149
thoughts and questions oh hang on well

367
00:21:08,170 --> 00:21:12,400
we can do if there is any clarifying

368
00:21:10,150 --> 00:21:15,040
questions we can do them though now okay

369
00:21:12,400 --> 00:21:17,620
yeah I have a clarifying question um I

370
00:21:15,040 --> 00:21:19,930
first part of it did you read draft for

371
00:21:17,620 --> 00:21:22,600
a number seven that was the one that was

372
00:21:19,930 --> 00:21:25,990
published in September I did okay and oh

373
00:21:22,600 --> 00:21:27,850
sorry okay and then how how are the

374
00:21:25,990 --> 00:21:30,520
slides you just prevent presented about

375
00:21:27,850 --> 00:21:33,010
in-flight extension header slide the

376
00:21:30,520 --> 00:21:36,310
very first one and your single point of

377
00:21:33,010 --> 00:21:39,330
failure slide related in any way to what

378
00:21:36,310 --> 00:21:42,070
that draft describes so what that draft

379
00:21:39,330 --> 00:21:44,949
does is it's actually inserting into the

380
00:21:42,070 --> 00:21:47,169
tunnel packets right so the packets that

381
00:21:44,950 --> 00:21:49,450
are already encapsulated for their

382
00:21:47,170 --> 00:21:51,640
journey within the estart domain yeah so

383
00:21:49,450 --> 00:21:53,620
the stuff that you were discussing about

384
00:21:51,640 --> 00:21:55,600
how a packet that you're sending over

385
00:21:53,620 --> 00:21:57,909
the Internet might have extension

386
00:21:55,600 --> 00:22:00,399
headers inserted between domains I mean

387
00:21:57,910 --> 00:22:04,780
that's not relevant is it look to some

388
00:22:00,400 --> 00:22:06,730
extent as I said in this this prison

389
00:22:04,780 --> 00:22:09,790
this is to capture the the broader issue

390
00:22:06,730 --> 00:22:11,410
I saw if it could could you elaborate on

391
00:22:09,790 --> 00:22:13,840
what parts of your presentation we're

392
00:22:11,410 --> 00:22:17,830
relevant to the draft versus which were

393
00:22:13,840 --> 00:22:19,480
in general perhaps you know during a few

394
00:22:17,830 --> 00:22:21,850
percent okay

395
00:22:19,480 --> 00:22:23,680
your so and then you know perhaps you

396
00:22:21,850 --> 00:22:25,750
should allow for a few minutes of you

397
00:22:23,680 --> 00:22:27,970
know you to debating it and we can okay

398
00:22:25,750 --> 00:22:30,390
sounds good we can we can watch any

399
00:22:27,970 --> 00:22:30,390
popco

400
00:22:55,639 --> 00:23:04,129
okay now I don't have to slouch okay so

401
00:23:00,299 --> 00:23:07,139
this presentation is of course about

402
00:23:04,129 --> 00:23:09,389
segment routing header insertion within

403
00:23:07,139 --> 00:23:11,039
an SR domain okay

404
00:23:09,389 --> 00:23:13,379
there's been several versions of this

405
00:23:11,039 --> 00:23:15,480
draft I'll just quickly mention that the

406
00:23:13,379 --> 00:23:17,539
one that where we'll be talking about a

407
00:23:15,480 --> 00:23:20,580
couple t I just updated the draft

408
00:23:17,539 --> 00:23:22,529
yesterday and sent out the mail today so

409
00:23:20,580 --> 00:23:25,320
you know we'll of course talk about

410
00:23:22,529 --> 00:23:27,809
revision 7 which is a very important

411
00:23:25,320 --> 00:23:30,450
revision but we've made some changes in

412
00:23:27,809 --> 00:23:31,830
the most recent one and we'll we'll go

413
00:23:30,450 --> 00:23:34,109
over those too but I think it still

414
00:23:31,830 --> 00:23:37,320
leaves all of this discussion entirely

415
00:23:34,109 --> 00:23:43,350
relevant so we can discuss all the

416
00:23:37,320 --> 00:23:45,689
versions of the draft in revision 7 we

417
00:23:43,350 --> 00:23:48,570
made the draft standards tract we added

418
00:23:45,690 --> 00:23:50,519
a lot of normative text to describe how

419
00:23:48,570 --> 00:23:53,220
segment routing header insertion in

420
00:23:50,519 --> 00:23:55,590
particular is done within an SR domain

421
00:23:53,220 --> 00:23:57,539
we describe the insertion process we

422
00:23:55,590 --> 00:24:00,059
describe the removal process we

423
00:23:57,539 --> 00:24:05,820
described icmpv6 processing path MTU

424
00:24:00,059 --> 00:24:08,820
discovery and went into I think a lot of

425
00:24:05,820 --> 00:24:10,619
good detail on how implementations can

426
00:24:08,820 --> 00:24:13,529
do segment routing header insertion

427
00:24:10,619 --> 00:24:15,299
within an SR domain and do it do it

428
00:24:13,529 --> 00:24:17,820
safely within that domain in order to

429
00:24:15,299 --> 00:24:22,549
provide you know different types of

430
00:24:17,820 --> 00:24:25,799
services within the domain in revision 8

431
00:24:22,549 --> 00:24:27,960
we've gone a bit different way and in

432
00:24:25,799 --> 00:24:30,210
revision 7 and prior to revision 7 there

433
00:24:27,960 --> 00:24:32,129
was a lot of discussion like the first

434
00:24:30,210 --> 00:24:33,690
part of mark slide where it was kind of

435
00:24:32,129 --> 00:24:36,928
a shall not do segment routing header

436
00:24:33,690 --> 00:24:38,909
insertion because 25 years ago we wrote

437
00:24:36,929 --> 00:24:40,730
some texts it said extension headers

438
00:24:38,909 --> 00:24:44,070
aren't inserted modified or deleted

439
00:24:40,730 --> 00:24:46,559
except at a source or destination and

440
00:24:44,070 --> 00:24:48,928
well that was very applicable to the

441
00:24:46,559 --> 00:24:50,850
larger internet we are looking at

442
00:24:48,929 --> 00:24:52,300
segment routing header insertion within

443
00:24:50,850 --> 00:24:55,240
an SR domain and that's

444
00:24:52,300 --> 00:24:56,620
more limited scope so we've done

445
00:24:55,240 --> 00:25:00,400
renovation eight is we've we've

446
00:24:56,620 --> 00:25:03,189
described now how deployments and

447
00:25:00,400 --> 00:25:05,800
implementations are doing segment

448
00:25:03,190 --> 00:25:09,040
routing header insertion why they're

449
00:25:05,800 --> 00:25:12,340
doing it and documenting the fact that

450
00:25:09,040 --> 00:25:13,780
it is done so that this community can

451
00:25:12,340 --> 00:25:16,209
understand that this is something that's

452
00:25:13,780 --> 00:25:19,570
real it's happening within limited

453
00:25:16,210 --> 00:25:20,680
domains within SR domains and get some

454
00:25:19,570 --> 00:25:23,620
of the motivation for why that's

455
00:25:20,680 --> 00:25:26,800
happening okay but we can still talk

456
00:25:23,620 --> 00:25:29,520
about both revisions today I think it'll

457
00:25:26,800 --> 00:25:29,520
be more fun that way

458
00:25:30,330 --> 00:25:34,000
okay who's deploying this we saw some of

459
00:25:32,740 --> 00:25:34,420
this this morning so I'll skip over it

460
00:25:34,000 --> 00:25:37,150
quickly

461
00:25:34,420 --> 00:25:39,160
Softbank China Telecom elia 22 kohm

462
00:25:37,150 --> 00:25:45,760
stern net and tender ganda are all

463
00:25:39,160 --> 00:25:49,120
deploying sr v6 and it with SR insertion

464
00:25:45,760 --> 00:25:51,280
within their domains who's supporting

465
00:25:49,120 --> 00:25:53,350
SRH insertion and removal in their

466
00:25:51,280 --> 00:25:54,910
implementations you guys have seen this

467
00:25:53,350 --> 00:25:58,090
in previous presentations in six-man

468
00:25:54,910 --> 00:26:01,000
I'll highlight custom Asics from Cisco

469
00:25:58,090 --> 00:26:04,540
huawei merchants silicon Brad gum Marvel

470
00:26:01,000 --> 00:26:07,860
Intel are spreading the insertion and

471
00:26:04,540 --> 00:26:13,570
removal capability and some open source

472
00:26:07,860 --> 00:26:16,830
content so one thing that's important

473
00:26:13,570 --> 00:26:18,850
for us to remember is that s our domains

474
00:26:16,830 --> 00:26:20,500
encapsulate the traffic that's

475
00:26:18,850 --> 00:26:21,909
traversing them we had a lot of

476
00:26:20,500 --> 00:26:23,110
discussion over the last couple of years

477
00:26:21,910 --> 00:26:24,910
that I've been involved in this working

478
00:26:23,110 --> 00:26:27,479
group on that with regards to the SR

479
00:26:24,910 --> 00:26:31,960
header graph that's now nearly RF seed

480
00:26:27,480 --> 00:26:35,410
and we do encapsulate the packets that

481
00:26:31,960 --> 00:26:37,090
are traversing the domain always so

482
00:26:35,410 --> 00:26:38,710
packets that are traversing it or

483
00:26:37,090 --> 00:26:41,139
packets destined to nodes within the

484
00:26:38,710 --> 00:26:43,660
domain or packets from the within them

485
00:26:41,140 --> 00:26:46,540
in the domain xing domain are always

486
00:26:43,660 --> 00:26:48,610
encapsulated so in other words all the

487
00:26:46,540 --> 00:26:50,920
packet headers within the domain have a

488
00:26:48,610 --> 00:26:57,590
source and destination address that are

489
00:26:50,920 --> 00:27:04,159
4 nodes within the SR domain so the SR

490
00:26:57,590 --> 00:27:05,899
is protected in that devices outside the

491
00:27:04,159 --> 00:27:08,270
SSR domain don't get access to those

492
00:27:05,900 --> 00:27:10,220
SIDS within the SSR domain and we've

493
00:27:08,270 --> 00:27:15,650
said this in the SR header draft

494
00:27:10,220 --> 00:27:17,210
soon-to-be RC about how that how that

495
00:27:15,650 --> 00:27:20,600
domain is protected I'll go through how

496
00:27:17,210 --> 00:27:24,500
the implementations and deployments

497
00:27:20,600 --> 00:27:27,860
actually do that protection so let's

498
00:27:24,500 --> 00:27:29,419
remember that domain encapsulate

499
00:27:27,860 --> 00:27:31,219
everything so packets going from node 1

500
00:27:29,419 --> 00:27:32,600
to node 2 when they first the domain

501
00:27:31,220 --> 00:27:35,690
they get encapsulated and outer IP

502
00:27:32,600 --> 00:27:37,129
header packets going from 1 to 5 would

503
00:27:35,690 --> 00:27:42,409
also be encapsulated for the journey

504
00:27:37,130 --> 00:27:46,010
within the domain between 3 and 5 so

505
00:27:42,409 --> 00:27:48,649
we'll reiterate that and just a

506
00:27:46,010 --> 00:27:50,059
clarifying question could you just the

507
00:27:48,649 --> 00:27:52,580
two of you are using the different

508
00:27:50,059 --> 00:27:55,639
styles here so could just explain the

509
00:27:52,580 --> 00:27:57,889
width and the dots and the numbers and

510
00:27:55,640 --> 00:28:00,429
style game so in this diagram this this

511
00:27:57,890 --> 00:28:02,929
is out of this is out of the draft so

512
00:28:00,429 --> 00:28:05,120
who's read the draft in any of the

513
00:28:02,929 --> 00:28:06,710
versions all right lots of people

514
00:28:05,120 --> 00:28:10,399
awesome ok

515
00:28:06,710 --> 00:28:12,140
so and this is similar to the SR header

516
00:28:10,399 --> 00:28:15,260
draft as well it uses the same thing so

517
00:28:12,140 --> 00:28:20,390
node 1 is connected to node 3 3 to 5 5

518
00:28:15,260 --> 00:28:22,640
to 6 6 to 4 and 4 to 2 ok nodes 3 5 7 8

519
00:28:20,390 --> 00:28:26,360
6 and 4 are all within the SR domain

520
00:28:22,640 --> 00:28:29,090
node 3 and fours are essentially pease

521
00:28:26,360 --> 00:28:32,090
of the SR domain ingress egress p/es 4

522
00:28:29,090 --> 00:28:33,129
packets heading from left to right sound

523
00:28:32,090 --> 00:28:35,629
good

524
00:28:33,130 --> 00:28:38,539
7 & 8 or other nodes within the SR

525
00:28:35,630 --> 00:28:40,970
domain all right they're also a 7 is

526
00:28:38,539 --> 00:28:41,870
attached to 5 7 s attached to a th the 6

527
00:28:40,970 --> 00:28:43,880
ok

528
00:28:41,870 --> 00:28:46,820
I'm giving it as an example that there's

529
00:28:43,880 --> 00:28:49,909
a some network that has some edge notes

530
00:28:46,820 --> 00:28:52,039
and notes outside of it connect to those

531
00:28:49,909 --> 00:28:56,690
edge nodes and traffic that traverses

532
00:28:52,039 --> 00:28:59,299
the SR domain gets encapsulated and the

533
00:28:56,690 --> 00:29:02,510
like 3 does the encapsulation assuming

534
00:28:59,299 --> 00:29:04,340
it's going that's right yeah so let me

535
00:29:02,510 --> 00:29:07,640
let me clarify that as well for a packet

536
00:29:04,340 --> 00:29:10,399
from node 1 to node 2 node 3 receives

537
00:29:07,640 --> 00:29:11,570
that packet note 3 encapsulates in an

538
00:29:10,399 --> 00:29:15,320
ipv6 header

539
00:29:11,570 --> 00:29:17,539
between node three and four okay

540
00:29:15,320 --> 00:29:20,239
the source of the packet the outer IP

541
00:29:17,539 --> 00:29:23,869
header is node three the destination of

542
00:29:20,239 --> 00:29:27,019
that outer IP header is a CID at node 4

543
00:29:23,869 --> 00:29:29,899
and that packet traverses node five six

544
00:29:27,019 --> 00:29:36,289
seven eight etcetera well depending on

545
00:29:29,899 --> 00:29:39,469
its path will play not although so what

546
00:29:36,289 --> 00:29:41,899
operators have done for example and and

547
00:29:39,470 --> 00:29:44,539
this isn't specific to any one of the

548
00:29:41,899 --> 00:29:48,830
operators this is in general they make a

549
00:29:44,539 --> 00:29:51,710
choice as to as to how they define SIDS

550
00:29:48,830 --> 00:29:55,340
within their domains so for example an

551
00:29:51,710 --> 00:29:59,570
operator with a GU a lock of slash 28 P

552
00:29:55,340 --> 00:30:02,840
P P P P something slash 28 would use

553
00:29:59,570 --> 00:30:07,099
their block to sub allocate a block of

554
00:30:02,840 --> 00:30:09,019
SIDS so P P P colon B where B is the B

555
00:30:07,099 --> 00:30:11,928
is the block of SIDS with a let's say a

556
00:30:09,019 --> 00:30:15,529
slash 40 okay

557
00:30:11,929 --> 00:30:18,200
and within that block of SIDS so that

558
00:30:15,529 --> 00:30:21,649
that slash 40 identifies all the sins

559
00:30:18,200 --> 00:30:26,259
within that SR domain within that block

560
00:30:21,649 --> 00:30:28,518
of 40 there's let's say a slub slash 64

561
00:30:26,259 --> 00:30:31,700
Devon enter here from liquid I just want

562
00:30:28,519 --> 00:30:34,759
to ask a clarifying question because you

563
00:30:31,700 --> 00:30:39,049
refer you multiple times to a s or

564
00:30:34,759 --> 00:30:41,539
domain right can you clarify exactly

565
00:30:39,049 --> 00:30:47,239
what you mean by and yeah please please

566
00:30:41,539 --> 00:30:51,080
read the drafts Thanks okay so again we

567
00:30:47,239 --> 00:30:53,659
allocate a / 64 CID locator to each of

568
00:30:51,080 --> 00:30:58,220
the nodes in the domain where that

569
00:30:53,659 --> 00:31:00,889
prefix is for example pb4 for example at

570
00:30:58,220 --> 00:31:03,979
node 4 so it node 4 receives it for

571
00:31:00,889 --> 00:31:06,590
example a / 64 from which it can

572
00:31:03,979 --> 00:31:09,649
allocate segment IDs for use at that

573
00:31:06,590 --> 00:31:12,769
node so anyone familiar with our s our

574
00:31:09,649 --> 00:31:14,658
header document should remember that

575
00:31:12,769 --> 00:31:17,629
those SIDS are then used for different

576
00:31:14,659 --> 00:31:19,820
things who's familiar with s sir v6

577
00:31:17,629 --> 00:31:22,908
network programming who's read that

578
00:31:19,820 --> 00:31:24,320
looked at it okay good all right so the

579
00:31:22,909 --> 00:31:25,370
majority of the room then is also

580
00:31:24,320 --> 00:31:27,159
familiar with the fact that

581
00:31:25,370 --> 00:31:31,209
different SIDS are allocated at those

582
00:31:27,160 --> 00:31:31,210
excuse me allocated at those nodes

583
00:31:36,070 --> 00:31:42,669
oops okay real and we do have experience

584
00:31:39,890 --> 00:31:46,630
in automating this process of of course

585
00:31:42,670 --> 00:31:49,370
block allocations to notes okay so the I

586
00:31:46,630 --> 00:31:54,080
guess the user error in that areas is

587
00:31:49,370 --> 00:31:56,239
pretty low the next part is in an how we

588
00:31:54,080 --> 00:31:59,750
protect the SR domain and if you'll

589
00:31:56,240 --> 00:32:04,160
remember the SR header and the SR header

590
00:31:59,750 --> 00:32:06,470
draft defines how we filter external

591
00:32:04,160 --> 00:32:08,360
traffic entering the domain and at the

592
00:32:06,470 --> 00:32:11,390
ingress edge we apply an ingress ACL

593
00:32:08,360 --> 00:32:14,600
that drops any packets destined to that

594
00:32:11,390 --> 00:32:18,350
sid block within the SR domain and then

595
00:32:14,600 --> 00:32:22,428
on internal nodes we also filter traffic

596
00:32:18,350 --> 00:32:24,439
Destin's to the local set block from any

597
00:32:22,429 --> 00:32:26,420
source address that is not within the SR

598
00:32:24,440 --> 00:32:28,280
domain so we protect who is able to

599
00:32:26,420 --> 00:32:30,650
access those SIDS and use those SIDS and

600
00:32:28,280 --> 00:32:33,230
again we have experience automating that

601
00:32:30,650 --> 00:32:38,210
process as well so the chances of user

602
00:32:33,230 --> 00:32:40,790
configuration error are very low so

603
00:32:38,210 --> 00:32:44,320
within this SR domain what these

604
00:32:40,790 --> 00:32:48,710
operators provide is is a VPN service

605
00:32:44,320 --> 00:32:51,409
that well that I described previously

606
00:32:48,710 --> 00:32:54,980
essentially so there's a ingress PE at

607
00:32:51,410 --> 00:32:57,170
node 3 and egress P at node 4 and the

608
00:32:54,980 --> 00:33:02,720
ingress PE performs that ipv6

609
00:32:57,170 --> 00:33:05,090
encapsulation with the SID that will D

610
00:33:02,720 --> 00:33:06,800
capsulate that outer ipv6 header when

611
00:33:05,090 --> 00:33:09,830
the packet reaches note 4 now that Sid

612
00:33:06,800 --> 00:33:11,720
might be an N dot DX r n dot DT Sid for

613
00:33:09,830 --> 00:33:15,080
those who don't know those simply say

614
00:33:11,720 --> 00:33:17,420
forward the inner packet on a adjacency

615
00:33:15,080 --> 00:33:22,720
or forward the inner packet and based on

616
00:33:17,420 --> 00:33:22,720
a lookup in a particular v4 v6 table

617
00:33:23,920 --> 00:33:29,900
within this SR domain providing a layer

618
00:33:28,010 --> 00:33:33,980
3 VPN service

619
00:33:29,900 --> 00:33:37,850
there's a feature called TI LFA TI LFA

620
00:33:33,980 --> 00:33:40,670
provides a less than 50 millisecond

621
00:33:37,850 --> 00:33:42,679
lincoln node protection for traffic

622
00:33:40,670 --> 00:33:44,960
traversing that domain and remember that

623
00:33:42,680 --> 00:33:51,140
traffic is all source and destined to

624
00:33:44,960 --> 00:33:54,650
nodes in the domain for that TL at TI

625
00:33:51,140 --> 00:33:57,110
LFA traffic we are going to be forming s

626
00:33:54,650 --> 00:33:58,340
our header insertion yeah go ahead you

627
00:33:57,110 --> 00:34:03,409
have a question yes

628
00:33:58,340 --> 00:34:08,449
so you give name please Greg Norskies ET

629
00:34:03,410 --> 00:34:12,020
you could fare a specific time so is it

630
00:34:08,449 --> 00:34:14,870
switch over for one tunnel or switch

631
00:34:12,020 --> 00:34:16,340
over for some number of tunnels okay so

632
00:34:14,870 --> 00:34:20,690
that's more of a feature thing I guess

633
00:34:16,340 --> 00:34:24,320
so in the products that I'm aware of for

634
00:34:20,690 --> 00:34:27,800
any traffic destined via a node or a

635
00:34:24,320 --> 00:34:31,129
link that fails the repair path is pre

636
00:34:27,800 --> 00:34:34,760
computed for that traffic and that point

637
00:34:31,129 --> 00:34:36,918
of local repair inserts an SR header to

638
00:34:34,760 --> 00:34:39,590
get around that link or node failure to

639
00:34:36,918 --> 00:34:41,839
the destination so where I say a 50

640
00:34:39,590 --> 00:34:44,330
millisecond or sub 50 millisecond packet

641
00:34:41,840 --> 00:34:46,280
loss that's the that's the the

642
00:34:44,330 --> 00:34:48,230
inflammation at implementation at that

643
00:34:46,280 --> 00:34:51,139
point of local repair that's pre

644
00:34:48,230 --> 00:34:53,629
computed this repair path that inserts

645
00:34:51,139 --> 00:34:56,360
the SR header that then sends everything

646
00:34:53,629 --> 00:35:00,620
it's desk or that's via the linker node

647
00:34:56,360 --> 00:35:07,820
that's failed over that pre computed

648
00:35:00,620 --> 00:35:11,420
bath okay but you can have of this edge

649
00:35:07,820 --> 00:35:14,720
of the segment so your next segment can

650
00:35:11,420 --> 00:35:16,910
be several IP hops away yeah and also

651
00:35:14,720 --> 00:35:19,339
you know that that tunnel has failed and

652
00:35:16,910 --> 00:35:21,049
you need to route not the rocket so I

653
00:35:19,340 --> 00:35:24,260
think at this point in the middle of the

654
00:35:21,050 --> 00:35:26,510
of the SR domain I don't care if this

655
00:35:24,260 --> 00:35:28,640
traffic is tunneled I don't care that it

656
00:35:26,510 --> 00:35:31,340
is tunnel traffic all I care about is

657
00:35:28,640 --> 00:35:35,750
that this traffic is destined to a node

658
00:35:31,340 --> 00:35:38,930
that I have protection for I protect

659
00:35:35,750 --> 00:35:42,680
traffic destined to any node in the

660
00:35:38,930 --> 00:35:43,819
network with a pre computed path that is

661
00:35:42,680 --> 00:35:45,799
going to get me

662
00:35:43,820 --> 00:35:47,450
any link or node failure for which I am

663
00:35:45,800 --> 00:35:49,040
the point of local repair if you want

664
00:35:47,450 --> 00:35:52,460
you can read the TI LFA draft and that

665
00:35:49,040 --> 00:35:54,200
one's got a lot of detail on on how this

666
00:35:52,460 --> 00:35:55,880
actually works but for the purpose of

667
00:35:54,200 --> 00:35:58,399
this presentation

668
00:35:55,880 --> 00:36:02,360
let's take it for fact that no these

669
00:35:58,400 --> 00:36:04,850
these no it certain SR header because

670
00:36:02,360 --> 00:36:06,650
otherwise I'll get you to sit down I'll

671
00:36:04,850 --> 00:36:10,360
finish this one and then we'll come back

672
00:36:06,650 --> 00:36:13,370
to to what it is you're asking because I

673
00:36:10,360 --> 00:36:16,220
ask you is it related in any way to SR

674
00:36:13,370 --> 00:36:18,140
insertion within an SR doing well or are

675
00:36:16,220 --> 00:36:21,680
you interested in how t io FA works no

676
00:36:18,140 --> 00:36:24,350
no you you give specific number and you

677
00:36:21,680 --> 00:36:25,790
don't explain how you arrived to this

678
00:36:24,350 --> 00:36:28,700
number sorry it's an implementation

679
00:36:25,790 --> 00:36:30,770
specific thing as a feature of the

680
00:36:28,700 --> 00:36:34,129
products that that are listed and used

681
00:36:30,770 --> 00:36:34,810
in that domain so that's the specific

682
00:36:34,130 --> 00:36:42,260
number

683
00:36:34,810 --> 00:36:44,779
thanks okay so let's go over where does

684
00:36:42,260 --> 00:36:48,970
s our header insertion occur it occurs

685
00:36:44,780 --> 00:36:52,520
at any node within the SR domain okay

686
00:36:48,970 --> 00:36:54,890
and that's any node that's that point of

687
00:36:52,520 --> 00:36:57,200
local repair so in this case where we're

688
00:36:54,890 --> 00:37:00,620
doing TI LFA I know that is a point of

689
00:36:57,200 --> 00:37:03,529
local repair running supporting TI LFA

690
00:37:00,620 --> 00:37:07,310
is going to insert that SR header okay

691
00:37:03,530 --> 00:37:09,020
that assertion occurs on the outer ipv6

692
00:37:07,310 --> 00:37:10,790
header which is the one that that

693
00:37:09,020 --> 00:37:17,150
essentially tunnel header between the

694
00:37:10,790 --> 00:37:20,570
node 3 and node 4 within the domain the

695
00:37:17,150 --> 00:37:23,750
SR header removal occurs at the

696
00:37:20,570 --> 00:37:25,940
destination address in the in the outer

697
00:37:23,750 --> 00:37:28,850
header so that s our header gets

698
00:37:25,940 --> 00:37:31,940
inserted and it's removed at a node that

699
00:37:28,850 --> 00:37:34,990
the inserting node decided on when it

700
00:37:31,940 --> 00:37:37,670
inserted the SR header so that

701
00:37:34,990 --> 00:37:41,750
destination node in the packet receives

702
00:37:37,670 --> 00:37:44,660
it in the terms of network programming

703
00:37:41,750 --> 00:37:47,480
he he pops these as a pelt mat segment

704
00:37:44,660 --> 00:37:49,220
pop and removes the SR header that was

705
00:37:47,480 --> 00:37:51,140
previously inserted and the packet

706
00:37:49,220 --> 00:37:54,799
continues on its journey to the

707
00:37:51,140 --> 00:37:57,680
destination node within the domain so

708
00:37:54,800 --> 00:38:00,079
Darren can ask a clarifying question so

709
00:37:57,680 --> 00:38:03,529
are you saying that note 3 would not

710
00:38:00,079 --> 00:38:05,240
insert a a s or well that package from

711
00:38:03,529 --> 00:38:07,789
them you know no number 3 would not have

712
00:38:05,240 --> 00:38:10,220
an S or H header well in the in the

713
00:38:07,789 --> 00:38:12,650
layer 3 VPN example yeah

714
00:38:10,220 --> 00:38:15,500
there's no need for this our each header

715
00:38:12,650 --> 00:38:19,069
because it is just encapsulating with an

716
00:38:15,500 --> 00:38:20,900
end dot DX or DT sit if there were

717
00:38:19,069 --> 00:38:23,599
traffic engineering also applied well

718
00:38:20,900 --> 00:38:25,880
then yes you could have an SR header but

719
00:38:23,599 --> 00:38:28,010
since we're saying C we didn't know how

720
00:38:25,880 --> 00:38:29,480
would you if you have a package with the

721
00:38:28,010 --> 00:38:32,720
C do you have to have a nicer H header

722
00:38:29,480 --> 00:38:34,520
as well right do you know I'm asking no

723
00:38:32,720 --> 00:38:37,009
you don't know the answer is you don't

724
00:38:34,520 --> 00:38:38,690
because if I simply encapsulate an odor

725
00:38:37,010 --> 00:38:42,109
I P where the destination address that

726
00:38:38,690 --> 00:38:44,690
IP at the outer IP is an SR v6 CID and

727
00:38:42,109 --> 00:38:46,609
that s our v6 SIDS behavior is 2d

728
00:38:44,690 --> 00:38:48,170
capsulate the packet then will wheelie

729
00:38:46,609 --> 00:38:52,359
caps and I think that is actually

730
00:38:48,170 --> 00:38:52,359
described in the SR header draft as well

731
00:38:52,960 --> 00:38:59,869
isn't it I mean you're saying just the

732
00:38:56,289 --> 00:39:01,460
EHS but isn't it the whole outer header

733
00:38:59,869 --> 00:39:03,109
that's removed because that's the

734
00:39:01,460 --> 00:39:04,819
destination node so it's not really

735
00:39:03,109 --> 00:39:09,680
removal it's just sort of taking that

736
00:39:04,819 --> 00:39:12,140
well in in it depends so if that if the

737
00:39:09,680 --> 00:39:16,399
node that receives this packet with the

738
00:39:12,140 --> 00:39:19,730
inserted SR header is node 4 and the CID

739
00:39:16,400 --> 00:39:22,069
is the D capsulate said then of course

740
00:39:19,730 --> 00:39:23,710
that entire IP header is removed if the

741
00:39:22,069 --> 00:39:25,160
node that receives that packet is

742
00:39:23,710 --> 00:39:28,690
another note

743
00:39:25,160 --> 00:39:32,270
prior to node 4 in the example then the

744
00:39:28,690 --> 00:39:34,789
removal would happen at a node before

745
00:39:32,270 --> 00:39:37,579
node 4 ok it's up to the node that

746
00:39:34,789 --> 00:39:39,890
inserted the header to also specify what

747
00:39:37,579 --> 00:39:42,260
the sit is that's going to remove the

748
00:39:39,890 --> 00:39:44,960
header ok and that was described in

749
00:39:42,260 --> 00:39:47,799
revision 7 of the draft in more detail

750
00:39:44,960 --> 00:39:52,880
[Music]

751
00:39:47,799 --> 00:39:57,140
from Shri Hari and the question is when

752
00:39:52,880 --> 00:40:00,670
as Raj is inserted at the PIR will dice

753
00:39:57,140 --> 00:40:04,460
a be changed to P our node no it's not

754
00:40:00,670 --> 00:40:07,609
if it is not changed and if there is a

755
00:40:04,460 --> 00:40:11,840
problem problem along the backup path

756
00:40:07,609 --> 00:40:15,310
that requires IC SMP v6

757
00:40:11,840 --> 00:40:18,470
PACA degeneration where this icmpv6

758
00:40:15,310 --> 00:40:21,320
packet reach in the example it would be

759
00:40:18,470 --> 00:40:25,009
sent to node 3 and node 3 would process

760
00:40:21,320 --> 00:40:27,980
the ICMP air since I say it's not

761
00:40:25,010 --> 00:40:31,370
changed in a way to reach the PLR i'll

762
00:40:27,980 --> 00:40:36,670
original source source node it'll reach

763
00:40:31,370 --> 00:40:36,670
the original source node node 3 thanks

764
00:40:37,360 --> 00:40:43,160
but clarification yards and yeah a bit

765
00:40:41,270 --> 00:40:45,620
of a clarification and if it is in some

766
00:40:43,160 --> 00:40:50,690
or if c please tell me where so that i

767
00:40:45,620 --> 00:40:52,880
can go and read it so you say that on

768
00:40:50,690 --> 00:40:55,970
the on the back up and on the protection

769
00:40:52,880 --> 00:40:57,800
it inserts a header now in an Assad

770
00:40:55,970 --> 00:40:59,419
domain that potentially spends ten

771
00:40:57,800 --> 00:41:01,850
thousand kilometers fifteen countries

772
00:40:59,420 --> 00:41:04,970
thousands of links I want to clarify

773
00:41:01,850 --> 00:41:06,319
what happens if I get a break here then

774
00:41:04,970 --> 00:41:07,879
I get a break there I'm gonna get a

775
00:41:06,320 --> 00:41:10,040
break there and I get a break there and

776
00:41:07,880 --> 00:41:13,370
I'm not running six breaks deep okay am

777
00:41:10,040 --> 00:41:16,850
i ending up with six header insertions

778
00:41:13,370 --> 00:41:20,299
and very very large stacks as a result

779
00:41:16,850 --> 00:41:22,430
or not I know they understand that yeah

780
00:41:20,300 --> 00:41:25,910
so I'll suggest that you read the the

781
00:41:22,430 --> 00:41:28,370
CIO of a draft and the way that that

782
00:41:25,910 --> 00:41:30,259
post convergence path is computed I can

783
00:41:28,370 --> 00:41:41,630
send you to the link to that later and

784
00:41:30,260 --> 00:41:48,500
ER thanks Marni's Shh can you go back to

785
00:41:41,630 --> 00:41:52,610
the diagram okay yeah yeah that's not no

786
00:41:48,500 --> 00:41:54,710
so see where I would the approach I

787
00:41:52,610 --> 00:41:57,140
would take is that I would make three

788
00:41:54,710 --> 00:41:59,270
and five tunnel endpoints and in five

789
00:41:57,140 --> 00:42:01,430
and six tunnel endpoints and then six

790
00:41:59,270 --> 00:42:02,900
and for tile endpoints and those are

791
00:42:01,430 --> 00:42:06,140
then the opportunities where you can add

792
00:42:02,900 --> 00:42:08,030
or insert or remove your SRH okay and

793
00:42:06,140 --> 00:42:11,060
then that gives you the attribution the

794
00:42:08,030 --> 00:42:13,910
source address update and so on so okay

795
00:42:11,060 --> 00:42:15,500
yeah let's yeah let's let's let's hold

796
00:42:13,910 --> 00:42:18,649
on to that and let's not forget that you

797
00:42:15,500 --> 00:42:22,810
said that okay yeah charlie from highway

798
00:42:18,650 --> 00:42:25,460
and I think the SH can be inserted

799
00:42:22,810 --> 00:42:29,089
within the SR v6 to

800
00:42:25,460 --> 00:42:32,180
and he would be removed within the a6 to

801
00:42:29,089 --> 00:42:34,430
me so that's right security this is yeah

802
00:42:32,180 --> 00:42:36,049
yeah yeah and I think that's what I was

803
00:42:34,430 --> 00:42:38,348
trying to point out during Marx present

804
00:42:36,050 --> 00:42:42,710
it doesn't escape it's my understanding

805
00:42:38,349 --> 00:42:45,290
the maxima sr h number would be too but

806
00:42:42,710 --> 00:42:48,920
we can make it numbers but we don't need

807
00:42:45,290 --> 00:42:51,200
to do that yes yeah so yeah the there's

808
00:42:48,920 --> 00:42:52,970
some there's some math and some research

809
00:42:51,200 --> 00:42:56,629
that's in also in the TA oh if they drop

810
00:42:52,970 --> 00:42:58,910
saying what with the typical or maximum

811
00:42:56,630 --> 00:43:02,390
size this would be for those inserted

812
00:42:58,910 --> 00:43:05,480
sits yeah yes so I think this is a good

813
00:43:02,390 --> 00:43:07,609
idea thank you okay the draft does talk

814
00:43:05,480 --> 00:43:09,940
about MTU planning seven and eight both

815
00:43:07,609 --> 00:43:12,230
talk about it

816
00:43:09,940 --> 00:43:16,130
empty use at the ingress nodes are of

817
00:43:12,230 --> 00:43:18,609
course less than to you in the in the

818
00:43:16,130 --> 00:43:22,730
domain itself this is pretty standard

819
00:43:18,609 --> 00:43:23,420
operational procedure Joel do you want

820
00:43:22,730 --> 00:43:25,220
to wait one minute

821
00:43:23,420 --> 00:43:30,950
I can wait one minute Kay finish your

822
00:43:25,220 --> 00:43:33,259
life all right so we've seen from the

823
00:43:30,950 --> 00:43:35,450
beginning it's deployed its functional

824
00:43:33,260 --> 00:43:38,180
there's vendors doing it the purpose of

825
00:43:35,450 --> 00:43:40,549
revision eight is to state that fact and

826
00:43:38,180 --> 00:43:42,279
let the community understand what's

827
00:43:40,550 --> 00:43:44,720
going on and what's happening and

828
00:43:42,280 --> 00:43:47,260
understand that this is a fact and it's

829
00:43:44,720 --> 00:43:50,540
it is what's being done with NSR domains

830
00:43:47,260 --> 00:43:52,490
we do expect this to happen a lot more

831
00:43:50,540 --> 00:43:54,800
over the next few months and of course

832
00:43:52,490 --> 00:43:57,618
over the coming years so this this

833
00:43:54,800 --> 00:44:00,800
situation of SR header insertion within

834
00:43:57,619 --> 00:44:02,930
an SR domain isn't going to stop

835
00:44:00,800 --> 00:44:07,250
regardless of the outcome of this

836
00:44:02,930 --> 00:44:09,109
discussion good job okay I mean let me

837
00:44:07,250 --> 00:44:11,119
just comment on your last point saying

838
00:44:09,109 --> 00:44:13,970
we're going to violate the RFC no matter

839
00:44:11,119 --> 00:44:16,460
what you do is a bad reason to ask us to

840
00:44:13,970 --> 00:44:20,720
change the RFC please don't

841
00:44:16,460 --> 00:44:22,810
now let's back up the thing I didn't

842
00:44:20,720 --> 00:44:25,939
hear in this whole thing was any

843
00:44:22,810 --> 00:44:28,700
explanation for why other than saving a

844
00:44:25,940 --> 00:44:32,000
few bytes you need to do insertion

845
00:44:28,700 --> 00:44:34,460
instead of encapsulation for this ti LFA

846
00:44:32,000 --> 00:44:37,730
problem we know how to another argument

847
00:44:34,460 --> 00:44:38,870
one shouldn't do TI LFA i have read the

848
00:44:37,730 --> 00:44:41,060
TI LFA train

849
00:44:38,870 --> 00:44:42,799
you're doing adoptions you do have

850
00:44:41,060 --> 00:44:44,750
options to do encapsulation and

851
00:44:42,800 --> 00:44:47,390
implantation I'm saying is also the

852
00:44:44,750 --> 00:44:49,010
capability of doing the header insertion

853
00:44:47,390 --> 00:44:50,839
within the SR domain where that is a

854
00:44:49,010 --> 00:44:56,270
limited domain where you can ensure that

855
00:44:50,840 --> 00:44:58,010
that this insertion is going to be this

856
00:44:56,270 --> 00:45:02,360
is not going to escape the domain and

857
00:44:58,010 --> 00:45:04,700
that that is the answer the answer is

858
00:45:02,360 --> 00:45:06,590
you want it that's not a good answer

859
00:45:04,700 --> 00:45:09,589
so I think we now have moved away from

860
00:45:06,590 --> 00:45:13,430
clarifying questions to the actual

861
00:45:09,590 --> 00:45:15,440
debate and I've got to say that both

862
00:45:13,430 --> 00:45:16,609
mark and I were very upset that you did

863
00:45:15,440 --> 00:45:19,070
not tell us that there was going to be a

864
00:45:16,610 --> 00:45:21,410
debate because if you did we would have

865
00:45:19,070 --> 00:45:25,090
arranged some sumo suits and we could

866
00:45:21,410 --> 00:45:25,089
have like it would have been spectacular

867
00:45:27,100 --> 00:45:38,420
okay good the next debate as ad Joel to

868
00:45:36,530 --> 00:45:40,580
respond to one point right like from

869
00:45:38,420 --> 00:45:42,800
version 7 to version 8 the draft has

870
00:45:40,580 --> 00:45:46,040
been changed to informational so they're

871
00:45:42,800 --> 00:45:47,660
not seeking to change the standard okay

872
00:45:46,040 --> 00:45:50,360
no I'm just saying right so now it's

873
00:45:47,660 --> 00:45:52,009
like really like documentation of some

874
00:45:50,360 --> 00:45:54,740
like implementation and deployment

875
00:45:52,010 --> 00:45:56,140
rather than trying to change it so for

876
00:45:54,740 --> 00:45:58,660
me that changes something in my brain

877
00:45:56,140 --> 00:46:01,430
okay

878
00:45:58,660 --> 00:46:03,200
it's a different thing so I do

879
00:46:01,430 --> 00:46:05,299
understand your point but that's not

880
00:46:03,200 --> 00:46:08,000
what that is proposing okay

881
00:46:05,300 --> 00:46:12,440
so since we're in the debate portion of

882
00:46:08,000 --> 00:46:15,380
the event today so I'm going to - hold

883
00:46:12,440 --> 00:46:17,510
on to the mic mark is also coming up and

884
00:46:15,380 --> 00:46:19,490
people can come to the line and ask

885
00:46:17,510 --> 00:46:21,800
questions so we're we're gonna shake

886
00:46:19,490 --> 00:46:26,689
hands answer us are okay look at how

887
00:46:21,800 --> 00:46:28,940
well do you think well and to your

888
00:46:26,690 --> 00:46:33,350
question before it's like it is a debate

889
00:46:28,940 --> 00:46:36,380
it's not wrestling yeah okay I think

890
00:46:33,350 --> 00:46:37,970
well this is I don't know okay since I

891
00:46:36,380 --> 00:46:40,730
was at the first person they get up to

892
00:46:37,970 --> 00:46:43,450
the mic I'm gonna kick off the questions

893
00:46:40,730 --> 00:46:43,450
such a second

894
00:46:45,869 --> 00:46:51,430
my first one okay well hold on shipping

895
00:46:49,690 --> 00:46:54,010
I'm gonna well I'm gonna know I should

896
00:46:51,430 --> 00:46:55,960
let's do that we know you can talk to

897
00:46:54,010 --> 00:46:59,470
each other but we would like to hear

898
00:46:55,960 --> 00:47:01,900
from the people Mike no I understand

899
00:46:59,470 --> 00:47:07,450
that's fine yeah go ahead with a jabber

900
00:47:01,900 --> 00:47:10,150
comment right yes we're going Hari

901
00:47:07,450 --> 00:47:14,500
and there's a follow-up question to si

902
00:47:10,150 --> 00:47:18,010
it's not updated ITR and if there is a

903
00:47:14,500 --> 00:47:20,740
issue with them Hugh what is expected by

904
00:47:18,010 --> 00:47:21,339
no three when it tries to send packet

905
00:47:20,740 --> 00:47:22,899
again

906
00:47:21,339 --> 00:47:28,299
yeah revision seven of the draft

907
00:47:22,900 --> 00:47:31,029
describes that thanks it's a

908
00:47:28,299 --> 00:47:34,509
clarification question I just want to

909
00:47:31,029 --> 00:47:36,250
make sure that the operators and you

910
00:47:34,510 --> 00:47:41,410
mentioned deployed eyes are each

911
00:47:36,250 --> 00:47:43,299
insertion not purely as are each if so

912
00:47:41,410 --> 00:47:46,660
could you please add the eyes are each

913
00:47:43,299 --> 00:47:49,200
insertion scenarios in the deployment

914
00:47:46,660 --> 00:47:49,200
draft

915
00:47:50,490 --> 00:47:56,169
ok I'm gonna I'm gonna say yes I'll

916
00:47:54,250 --> 00:47:57,819
listen to recording I'm not sure what

917
00:47:56,170 --> 00:48:01,869
was what was asked but I'll listen to it

918
00:47:57,819 --> 00:48:05,230
and I'll I'll try to answer that Erica

919
00:48:01,869 --> 00:48:07,599
Lane I'm not a router implementer and I

920
00:48:05,230 --> 00:48:10,359
did not follow the SRH development so

921
00:48:07,599 --> 00:48:16,240
this is just a hypothetical question the

922
00:48:10,359 --> 00:48:18,098
if the SRH header was say large enough

923
00:48:16,240 --> 00:48:19,660
and had padding at the end is it

924
00:48:18,099 --> 00:48:23,049
computationally the same or more

925
00:48:19,660 --> 00:48:24,700
expensive to sa rewrite the SRH to sort

926
00:48:23,049 --> 00:48:27,759
of insert your stuff and stop rather

927
00:48:24,700 --> 00:48:29,500
than insert I see so when ya scratch

928
00:48:27,760 --> 00:48:31,420
space yeah so it's really going to

929
00:48:29,500 --> 00:48:34,210
depend on a hardware implementation as

930
00:48:31,420 --> 00:48:36,010
to whether that you know you could how

931
00:48:34,210 --> 00:48:39,069
well they're able to kind of do the

932
00:48:36,010 --> 00:48:40,569
split versus the just right into its I

933
00:48:39,069 --> 00:48:42,460
would say that's very implementation

934
00:48:40,569 --> 00:48:44,950
specific because given given that you

935
00:48:42,460 --> 00:48:47,589
are having to take MTU sizing

936
00:48:44,950 --> 00:48:50,230
considerations into into effect in this

937
00:48:47,589 --> 00:48:53,200
network in the SR domain anyway you

938
00:48:50,230 --> 00:48:56,319
could sort of like maximally pet it at

939
00:48:53,200 --> 00:48:58,359
at insertion and just allow endless

940
00:48:56,319 --> 00:48:58,630
scribbling over it all the way until you

941
00:48:58,359 --> 00:49:00,400
got

942
00:48:58,630 --> 00:49:02,140
but I I'm not use that I'm not a rather

943
00:49:00,400 --> 00:49:05,859
implemented I mean the T of these can be

944
00:49:02,140 --> 00:49:07,420
changeable the tlvs can change it in the

945
00:49:05,859 --> 00:49:09,400
header yeah I understand what you're

946
00:49:07,420 --> 00:49:12,339
saying it we didn't go that way

947
00:49:09,400 --> 00:49:18,039
I don't think we would but I understand

948
00:49:12,339 --> 00:49:19,890
the point actually came up to ask a

949
00:49:18,039 --> 00:49:24,460
clarifying question but I don't think

950
00:49:19,890 --> 00:49:26,078
okay I can't okay but in terms of

951
00:49:24,460 --> 00:49:27,730
protection what you described and I

952
00:49:26,079 --> 00:49:29,410
checked these are a draft as well it

953
00:49:27,730 --> 00:49:31,539
talks about protecting people from me

954
00:49:29,410 --> 00:49:34,029
injecting things for this prefix right

955
00:49:31,539 --> 00:49:36,549
yeah I assume that people configure it

956
00:49:34,029 --> 00:49:38,829
to that prefix doesn't leak as a DA as

957
00:49:36,549 --> 00:49:40,390
well out any part of the domain but

958
00:49:38,829 --> 00:49:41,980
that's not written up in the draft yeah

959
00:49:40,390 --> 00:49:45,940
actually I think Brian had a similar

960
00:49:41,980 --> 00:49:48,579
comment so so I guess the it's basically

961
00:49:45,940 --> 00:49:50,259
how do you make sure at that egress edge

962
00:49:48,579 --> 00:49:51,819
that I'm not sending a packet to

963
00:49:50,259 --> 00:49:54,519
something that's not an egress edge

964
00:49:51,819 --> 00:49:56,410
exactly yeah this last forty prefix

965
00:49:54,519 --> 00:49:57,819
right but it doesn't go yeah I think

966
00:49:56,410 --> 00:49:59,589
Brian asked that same question on the

967
00:49:57,819 --> 00:50:04,740
list I think I can think we can address

968
00:49:59,589 --> 00:50:06,940
that there I'll use UI prefix yeah yeah

969
00:50:04,740 --> 00:50:10,029
there's yeah there's there's stuff

970
00:50:06,940 --> 00:50:11,950
exactly it does in other ways you know

971
00:50:10,029 --> 00:50:17,670
of course you've got ingress ACLs thrown

972
00:50:11,950 --> 00:50:17,669
in egress ACO it's another option

973
00:50:19,349 --> 00:50:23,319
Gokhale

974
00:50:20,470 --> 00:50:26,019
I think that they say the interest in

975
00:50:23,319 --> 00:50:29,259
the base for my upon the wheel they say

976
00:50:26,019 --> 00:50:32,500
the casa showed the config confliction

977
00:50:29,259 --> 00:50:34,930
of the usual of the network boundary

978
00:50:32,500 --> 00:50:37,089
yeah because of your I saying I

979
00:50:34,930 --> 00:50:38,828
mentioned some Mayo I think that's the

980
00:50:37,089 --> 00:50:43,029
summer we're thinking about this the

981
00:50:38,829 --> 00:50:45,640
ipv6 the base on the internet summary is

982
00:50:43,029 --> 00:50:47,440
a based on the limit he that domain so I

983
00:50:45,640 --> 00:50:49,720
think this is because of this is that

984
00:50:47,440 --> 00:50:53,230
different a requirement we have that

985
00:50:49,720 --> 00:50:55,419
different concern yeah from our point of

986
00:50:53,230 --> 00:50:58,359
view I think that the eyesight relation

987
00:50:55,420 --> 00:51:00,759
work I think these are you the in the in

988
00:50:58,359 --> 00:51:03,279
the current in chrome and deployment

989
00:51:00,759 --> 00:51:05,859
you're always a you the from my upon

990
00:51:03,279 --> 00:51:08,440
with the mobile transport or the IP core

991
00:51:05,859 --> 00:51:11,319
transport like this one so I think that

992
00:51:08,440 --> 00:51:12,760
this is a concern either

993
00:51:11,319 --> 00:51:14,500
at least from

994
00:51:12,760 --> 00:51:17,700
the Internet I think it's can be

995
00:51:14,500 --> 00:51:20,290
controlled there's the first one say

996
00:51:17,700 --> 00:51:23,200
yeah I second a while I sing in fact

997
00:51:20,290 --> 00:51:25,779
that we also compare in the per possible

998
00:51:23,200 --> 00:51:27,850
this is a choice I think maybe we also

999
00:51:25,780 --> 00:51:30,100
use some that tunnel Messer like this

1000
00:51:27,850 --> 00:51:32,410
one I sing the day so we were introduced

1001
00:51:30,100 --> 00:51:35,350
of the more complexity and the overhead

1002
00:51:32,410 --> 00:51:39,040
so I is also a career idea so this is

1003
00:51:35,350 --> 00:51:43,390
the design this is the simplicity that

1004
00:51:39,040 --> 00:51:46,650
is also the concern on this one so I

1005
00:51:43,390 --> 00:51:51,190
think some of this comes down to

1006
00:51:46,650 --> 00:51:52,930
climbing to follow ipv6 RC 8200 and then

1007
00:51:51,190 --> 00:51:55,080
not actually following it but it might

1008
00:51:52,930 --> 00:51:58,890
sound like a academic argument but

1009
00:51:55,080 --> 00:52:02,529
you're rather following it or not and if

1010
00:51:58,890 --> 00:52:04,750
if as I come up with IP V 10 that's a

1011
00:52:02,530 --> 00:52:07,600
copy of the ipv6 spec but it allows this

1012
00:52:04,750 --> 00:52:10,570
and then says we use IP V n well I mean

1013
00:52:07,600 --> 00:52:12,580
our FCS are always open to being updated

1014
00:52:10,570 --> 00:52:15,760
I think the I think what's highlighted

1015
00:52:12,580 --> 00:52:18,759
in this discussion and Brian Carpenter

1016
00:52:15,760 --> 00:52:22,450
has a draft on this that is not finding

1017
00:52:18,760 --> 00:52:26,040
a home in six-man but has a draft on

1018
00:52:22,450 --> 00:52:29,980
this on unlimited domains there you go

1019
00:52:26,040 --> 00:52:33,690
so he's describing a case where you know

1020
00:52:29,980 --> 00:52:35,680
not not there there do exist and he's

1021
00:52:33,690 --> 00:52:38,350
recognized in the fact that do exist

1022
00:52:35,680 --> 00:52:42,520
domains where things other than what are

1023
00:52:38,350 --> 00:52:46,150
you know what are stated for protocols

1024
00:52:42,520 --> 00:52:48,580
across the internet are applicable and I

1025
00:52:46,150 --> 00:52:50,590
think this is one of those cases with

1026
00:52:48,580 --> 00:52:54,880
the SR header insertion within an SR

1027
00:52:50,590 --> 00:52:58,750
domain so that surprise you put like

1028
00:52:54,880 --> 00:53:00,550
MPLS up there and one of the things that

1029
00:52:58,750 --> 00:53:04,060
I've particularly and you might have

1030
00:53:00,550 --> 00:53:10,330
seen me quote the RFC 8200 earlier today

1031
00:53:04,060 --> 00:53:12,700
mmm-hmm in MPLS although people it's

1032
00:53:10,330 --> 00:53:15,130
going in MPLS although people probably

1033
00:53:12,700 --> 00:53:17,529
have never done this imagine you've got

1034
00:53:15,130 --> 00:53:19,420
two LS arse with an Ethernet link

1035
00:53:17,530 --> 00:53:20,890
between them mmm-hmm obviously everybody

1036
00:53:19,420 --> 00:53:22,590
would do point-to-point

1037
00:53:20,890 --> 00:53:24,420
Ethernet these days

1038
00:53:22,590 --> 00:53:27,180
but if you insert an Ethernet switch or

1039
00:53:24,420 --> 00:53:30,030
bridge in between that sort of the

1040
00:53:27,180 --> 00:53:34,890
equivalent what of ipv6 router is so in

1041
00:53:30,030 --> 00:53:37,800
in ipv6 ipv6 routers forward packets for

1042
00:53:34,890 --> 00:53:40,799
non-local destinations mm-hmm a host is

1043
00:53:37,800 --> 00:53:44,070
anything else and so in the MPLS model

1044
00:53:40,800 --> 00:53:47,580
LS are comparatively LS ours would be

1045
00:53:44,070 --> 00:53:51,000
ipv6 hosts and an Ethernet switch would

1046
00:53:47,580 --> 00:53:53,009
be the equivalent of ipv6 router and so

1047
00:53:51,000 --> 00:53:54,960
that's where when I look at the the

1048
00:53:53,010 --> 00:53:57,960
diagram up there and see those

1049
00:53:54,960 --> 00:54:00,590
intermediary hops to me there are

1050
00:53:57,960 --> 00:54:05,970
actually ipv6 hosts or should be and

1051
00:54:00,590 --> 00:54:07,980
tunnel endpoints are actually hosts and

1052
00:54:05,970 --> 00:54:09,959
therefore then once you go from one link

1053
00:54:07,980 --> 00:54:11,610
to another a name that's very that's a

1054
00:54:09,960 --> 00:54:12,630
that's a heck of a convoluted so

1055
00:54:11,610 --> 00:54:16,080
basically you're saying build tunnels

1056
00:54:12,630 --> 00:54:23,790
between every node yep okay I would not

1057
00:54:16,080 --> 00:54:25,350
want to deploy that I'm fascinated in

1058
00:54:23,790 --> 00:54:29,029
this discussion and I remember when we

1059
00:54:25,350 --> 00:54:33,180
had the same discussion when 8200 was

1060
00:54:29,030 --> 00:54:36,420
written I can't remember someone said we

1061
00:54:33,180 --> 00:54:38,669
can say we should not modify headers but

1062
00:54:36,420 --> 00:54:41,880
if you find the use case and a way to do

1063
00:54:38,670 --> 00:54:43,110
it safely we can reveal this right so

1064
00:54:41,880 --> 00:54:45,510
I'm a bit confused with your

1065
00:54:43,110 --> 00:54:49,290
presentation and your draft mark because

1066
00:54:45,510 --> 00:54:52,790
I think it's actually trying to say not

1067
00:54:49,290 --> 00:54:56,640
what is exactly in the title because it

1068
00:54:52,790 --> 00:54:58,830
the title says insertion is harmful but

1069
00:54:56,640 --> 00:55:03,330
what I see on the slide you saying that

1070
00:54:58,830 --> 00:55:04,710
a removing is harmful because if you

1071
00:55:03,330 --> 00:55:07,140
look at your slide and let's say I have

1072
00:55:04,710 --> 00:55:09,840
a server on the left and the source node

1073
00:55:07,140 --> 00:55:13,790
answer I generates a packet with

1074
00:55:09,840 --> 00:55:17,640
extension I use case she hasn't told us

1075
00:55:13,790 --> 00:55:19,200
yeah I just did not want to put more oil

1076
00:55:17,640 --> 00:55:25,470
and Sapphire and said it might not

1077
00:55:19,200 --> 00:55:28,169
understand where most of your concerns

1078
00:55:25,470 --> 00:55:31,200
are still applicable if the source node

1079
00:55:28,170 --> 00:55:32,760
has an extension header is the packet

1080
00:55:31,200 --> 00:55:35,669
voice generated because that expansion

1081
00:55:32,760 --> 00:55:36,260
header and it was not removed on the fly

1082
00:55:35,670 --> 00:55:40,670
right

1083
00:55:36,260 --> 00:55:42,980
and the edge of the domain so I qualify

1084
00:55:40,670 --> 00:55:46,010
this Olli brought up some examples from

1085
00:55:42,980 --> 00:55:48,680
IPSec there's bumping the stack in the

1086
00:55:46,010 --> 00:55:50,300
bump in the wire bumping the stack I

1087
00:55:48,680 --> 00:55:54,290
wouldn't consider to be in flight

1088
00:55:50,300 --> 00:55:56,570
insertion because the source addressing

1089
00:55:54,290 --> 00:55:58,610
the packet tracer source it's use the

1090
00:55:56,570 --> 00:56:00,410
device it's inserting it might not be in

1091
00:55:58,610 --> 00:56:03,200
the IP layer it's happening lower Jeff

1092
00:56:00,410 --> 00:56:03,799
but in terms of protocols like ICMP p.m.

1093
00:56:03,200 --> 00:56:06,589
JD

1094
00:56:03,800 --> 00:56:08,330
I think we are worried yeah but the

1095
00:56:06,590 --> 00:56:10,640
problem will be distance I we have a

1096
00:56:08,330 --> 00:56:14,720
server in data center which generates a

1097
00:56:10,640 --> 00:56:16,819
packet with SR or any other extension

1098
00:56:14,720 --> 00:56:19,160
headers and I expect them to be removed

1099
00:56:16,820 --> 00:56:20,510
at the age or never leak all your

1100
00:56:19,160 --> 00:56:24,859
problems on your slides are get should

1101
00:56:20,510 --> 00:56:26,660
is the same right because all those

1102
00:56:24,860 --> 00:56:28,820
problems caused are not by the fact that

1103
00:56:26,660 --> 00:56:31,009
someone ends in me on the fly insert

1104
00:56:28,820 --> 00:56:33,800
them it doesn't matter where is this

1105
00:56:31,010 --> 00:56:37,100
extension from it might be generated

1106
00:56:33,800 --> 00:56:38,870
original Eve is original I paid by the

1107
00:56:37,100 --> 00:56:42,200
sender is just the problem is I'm not

1108
00:56:38,870 --> 00:56:43,609
removing it right now if you do read the

1109
00:56:42,200 --> 00:56:46,040
draft mark that is what you put in

1110
00:56:43,610 --> 00:56:48,080
section problems with extension header

1111
00:56:46,040 --> 00:56:49,460
removal like that's that's race

1112
00:56:48,080 --> 00:56:51,290
basically the whole draft talks about

1113
00:56:49,460 --> 00:56:57,410
hey extension header removal can have

1114
00:56:51,290 --> 00:56:59,990
these problems short end okay that's the

1115
00:56:57,410 --> 00:57:03,700
proposals I've seen have always been in

1116
00:56:59,990 --> 00:57:09,200
fly insertion and in-flight removal so

1117
00:57:03,700 --> 00:57:10,730
yes I haven't seen this case yeah so

1118
00:57:09,200 --> 00:57:12,410
basically I think the document is a bit

1119
00:57:10,730 --> 00:57:13,940
confusing yeah because basically the

1120
00:57:12,410 --> 00:57:15,920
statements you're making it's not of

1121
00:57:13,940 --> 00:57:17,780
what I think you're trying to say well

1122
00:57:15,920 --> 00:57:20,660
it's all about filing filing you do

1123
00:57:17,780 --> 00:57:22,340
something in the consequences of it I

1124
00:57:20,660 --> 00:57:27,080
can generate make it with extension

1125
00:57:22,340 --> 00:57:28,670
headers as it's fine right so you'll

1126
00:57:27,080 --> 00:57:30,080
find mrs. right it's just that you just

1127
00:57:28,670 --> 00:57:32,660
don't like you just think what is

1128
00:57:30,080 --> 00:57:35,930
harmful is intermediate not to deal with

1129
00:57:32,660 --> 00:57:39,290
it yeah I'd like to see your case before

1130
00:57:35,930 --> 00:57:44,629
I absolutely understand that but cause

1131
00:57:39,290 --> 00:57:47,360
I've been game so I asked the i/o to

1132
00:57:44,630 --> 00:57:50,120
comments the first one I think we should

1133
00:57:47,360 --> 00:57:52,700
I respect the RC

1134
00:57:50,120 --> 00:57:55,640
but I think this is neither to be driven

1135
00:57:52,700 --> 00:57:57,890
by the requirement yeah I think this is

1136
00:57:55,640 --> 00:58:00,200
the icing of the artists a who they are

1137
00:57:57,890 --> 00:58:04,790
they are all proper the many times in

1138
00:58:00,200 --> 00:58:07,549
the meaning list but I think the I sorry

1139
00:58:04,790 --> 00:58:09,920
six that you the helpful to ipv6 I

1140
00:58:07,550 --> 00:58:12,020
saying that the you know also and also

1141
00:58:09,920 --> 00:58:14,210
proper these to the requirement of the

1142
00:58:12,020 --> 00:58:16,370
faster reroute and this is the Biden

1143
00:58:14,210 --> 00:58:19,580
seat they said you'll also use the I

1144
00:58:16,370 --> 00:58:22,310
think that your insertion is the simple

1145
00:58:19,580 --> 00:58:27,230
way to solve this little requirement the

1146
00:58:22,310 --> 00:58:28,730
first 157 users of my network well again

1147
00:58:27,230 --> 00:58:32,630
this is within a necessary domain it's

1148
00:58:28,730 --> 00:58:35,870
not it's it's not within second a while

1149
00:58:32,630 --> 00:58:38,510
I want to emphasize this I think this we

1150
00:58:35,870 --> 00:58:41,089
be living in the grunion code I think oh

1151
00:58:38,510 --> 00:58:43,250
we already say that the in TAC the

1152
00:58:41,090 --> 00:58:45,590
Europa this advance Annette will attest

1153
00:58:43,250 --> 00:58:48,200
her send her already attest that the

1154
00:58:45,590 --> 00:58:50,240
faster as our visas that he our every

1155
00:58:48,200 --> 00:58:52,939
that's a between the different of

1156
00:58:50,240 --> 00:58:54,830
endures so I think that this already I

1157
00:58:52,940 --> 00:58:57,350
think that the society you think to keep

1158
00:58:54,830 --> 00:59:00,230
in mind and I put in my slides this is a

1159
00:58:57,350 --> 00:59:02,569
more broader our qv6 expand issue yes

1160
00:59:00,230 --> 00:59:05,000
being an example so that you know that

1161
00:59:02,570 --> 00:59:07,610
the problem is is that with your slides

1162
00:59:05,000 --> 00:59:10,100
and with your draft is that you are not

1163
00:59:07,610 --> 00:59:11,750
considering the proposal that's made the

1164
00:59:10,100 --> 00:59:14,060
proposal that is made is s our header

1165
00:59:11,750 --> 00:59:17,150
insertion with an NS our domain and you

1166
00:59:14,060 --> 00:59:19,690
say extension header insertion on the

1167
00:59:17,150 --> 00:59:23,090
Internet is bad and you know what I

1168
00:59:19,690 --> 00:59:25,340
don't want my phone wherever it is when

1169
00:59:23,090 --> 00:59:28,280
I'm talking to whatever to have

1170
00:59:25,340 --> 00:59:30,740
extension headers inserted within the

1171
00:59:28,280 --> 00:59:32,990
package that it is generating I like

1172
00:59:30,740 --> 00:59:35,990
caused me problems but if a transit

1173
00:59:32,990 --> 00:59:37,520
domain happens to encapsulate my pack

1174
00:59:35,990 --> 00:59:39,740
and do whatever the heck it wants with

1175
00:59:37,520 --> 00:59:42,950
my packet I as an endpoint

1176
00:59:39,740 --> 00:59:45,020
I'm not infected by it so your your

1177
00:59:42,950 --> 00:59:48,379
examples in your draft your examples and

1178
00:59:45,020 --> 00:59:51,140
your slides had no unfortunately no

1179
00:59:48,380 --> 00:59:53,900
relevance to the question that's well so

1180
00:59:51,140 --> 00:59:56,210
I think this comes down to in your asada

1181
00:59:53,900 --> 01:00:00,580
mine are you talking about 36 or not yes

1182
00:59:56,210 --> 01:00:02,980
so let's I I think that let's go to the

1183
01:00:00,580 --> 01:00:05,109
final phase I have some

1184
01:00:02,980 --> 01:00:07,930
illusions and I think Shiraz does as

1185
01:00:05,109 --> 01:00:11,109
well I want to thank you both thank you

1186
01:00:07,930 --> 01:00:16,600
this has been quite good we didn't come

1187
01:00:11,109 --> 01:00:19,200
to Blythe there's a lot of beer thank

1188
01:00:16,600 --> 01:00:19,200
you very much

1189
01:00:20,760 --> 01:00:28,480
hope you're all entertained so let me go

1190
01:00:24,310 --> 01:00:31,720
first yeah so so as someone said earlier

1191
01:00:28,480 --> 01:00:34,869
when we were talking about this when we

1192
01:00:31,720 --> 01:00:37,450
were doing what became RC 8200 what was

1193
01:00:34,869 --> 01:00:39,340
said was you know this is the default

1194
01:00:37,450 --> 01:00:41,319
case you can't do insertion or

1195
01:00:39,340 --> 01:00:43,960
modification whatever was on that slide

1196
01:00:41,320 --> 01:00:47,680
and in the draft but if someone can

1197
01:00:43,960 --> 01:00:49,810
write a document which describes how you

1198
01:00:47,680 --> 01:00:53,379
would do it and and deal with the issues

1199
01:00:49,810 --> 01:00:56,799
and that could be considered and so the

1200
01:00:53,380 --> 01:00:58,810
first thing I know is that we have

1201
01:00:56,800 --> 01:01:00,640
discussed this an email quite a lot so I

1202
01:00:58,810 --> 01:01:02,770
think it's quite good that mark has

1203
01:01:00,640 --> 01:01:04,600
started the process of writing a

1204
01:01:02,770 --> 01:01:07,780
document that actually writes down the

1205
01:01:04,600 --> 01:01:10,868
issues I you know I I don't this is and

1206
01:01:07,780 --> 01:01:13,810
you know the first version of this draft

1207
01:01:10,869 --> 01:01:16,119
and I think it's good it needs a lot of

1208
01:01:13,810 --> 01:01:17,859
work but I think it's good that we're

1209
01:01:16,119 --> 01:01:21,400
getting these issues written down

1210
01:01:17,859 --> 01:01:24,160
because you because it gives you know it

1211
01:01:21,400 --> 01:01:26,500
lays them out and so so if this proposal

1212
01:01:24,160 --> 01:01:29,890
like we've just heard about for us or

1213
01:01:26,500 --> 01:01:31,540
it's RH insertion they can say how they

1214
01:01:29,890 --> 01:01:33,400
address the issues and then we can

1215
01:01:31,540 --> 01:01:35,290
consider it rationally as opposed to

1216
01:01:33,400 --> 01:01:38,020
just endless email so I think this is

1217
01:01:35,290 --> 01:01:41,980
quite good I don't think we're quite

1218
01:01:38,020 --> 01:01:44,770
done to consider either of these but I

1219
01:01:41,980 --> 01:01:46,869
you know I think this is a constructive

1220
01:01:44,770 --> 01:01:51,070
way of dealing with it better than just

1221
01:01:46,869 --> 01:01:56,020
the you know gigabytes of email that we

1222
01:01:51,070 --> 01:01:58,390
did before so yeah well that's good

1223
01:01:56,020 --> 01:02:00,640
yeah that's why we write documents here

1224
01:01:58,390 --> 01:02:02,799
is to write these issues down and get

1225
01:02:00,640 --> 01:02:06,129
agreement on them and and I think both

1226
01:02:02,800 --> 01:02:08,550
of these things could exist at the same

1227
01:02:06,130 --> 01:02:11,109
time because they can address each other

1228
01:02:08,550 --> 01:02:13,300
and you know and the things some of the

1229
01:02:11,109 --> 01:02:14,980
things I heard about you know it's just

1230
01:02:13,300 --> 01:02:16,869
off the top of my head it seems like

1231
01:02:14,980 --> 01:02:19,599
doing insertion in it

1232
01:02:16,869 --> 01:02:22,210
Paquette seems less problematic than

1233
01:02:19,599 --> 01:02:24,999
just doing the general case of insertion

1234
01:02:22,210 --> 01:02:28,299
which is what RFC 8200 is really talking

1235
01:02:24,999 --> 01:02:33,098
about so I think there's some ground

1236
01:02:28,299 --> 01:02:37,809
here too to work in that is reasonable

1237
01:02:33,099 --> 01:02:39,160
so let me go to ash yeah so Bob you

1238
01:02:37,809 --> 01:02:40,839
covered most of the things I wanted to

1239
01:02:39,160 --> 01:02:42,399
say so like originally when I threw down

1240
01:02:40,839 --> 01:02:44,200
the gauntlet kind of thing right saying

1241
01:02:42,400 --> 01:02:46,599
like okay explain how this works and the

1242
01:02:44,200 --> 01:02:48,490
internet I I don't think that bar has

1243
01:02:46,599 --> 01:02:50,049
been met so like I I agree with lot of

1244
01:02:48,490 --> 01:02:52,868
the problems that like Marc brought up

1245
01:02:50,049 --> 01:02:55,150
in his presentation and I contend

1246
01:02:52,869 --> 01:02:58,809
they're not relevant in the stuff that

1247
01:02:55,150 --> 01:02:59,920
Darren talked about right and and so if

1248
01:02:58,809 --> 01:03:01,569
somebody comes to me and says like hey

1249
01:02:59,920 --> 01:03:04,539
this is Darren's draft let's go change

1250
01:03:01,569 --> 01:03:06,730
8,200 I'm gonna say hell no right but

1251
01:03:04,539 --> 01:03:10,390
but I don't think that's the ask and the

1252
01:03:06,730 --> 01:03:12,339
ask has changed in the draft okay from

1253
01:03:10,390 --> 01:03:14,019
version 7 to version 8 so that's kind of

1254
01:03:12,339 --> 01:03:16,210
like you know we are not past the

1255
01:03:14,019 --> 01:03:18,129
emotional stage like to look at that

1256
01:03:16,210 --> 01:03:21,190
so I think the ass is completely

1257
01:03:18,130 --> 01:03:23,980
different than before and I'm very more

1258
01:03:21,190 --> 01:03:26,559
comfortable with like version 8 talking

1259
01:03:23,980 --> 01:03:30,160
about experiences and deployments rather

1260
01:03:26,559 --> 01:03:32,140
than saying like hey let's go relax 8200

1261
01:03:30,160 --> 01:03:33,489
because I think that's like a bigger pad

1262
01:03:32,140 --> 01:03:35,650
because I don't think this is generally

1263
01:03:33,489 --> 01:03:37,690
safe to recommend on the Internet

1264
01:03:35,650 --> 01:03:40,119
okay that's kind of my view on this and

1265
01:03:37,690 --> 01:03:42,339
they in the Oh it came out like very

1266
01:03:40,119 --> 01:03:44,230
recently so most yeah I haven't had a

1267
01:03:42,339 --> 01:03:46,299
chance to look at it closely and right

1268
01:03:44,230 --> 01:03:48,130
so that is one of the like points of

1269
01:03:46,299 --> 01:03:49,960
feedback I gave Darren right I said like

1270
01:03:48,130 --> 01:03:51,670
okay like you're trying to push this on

1271
01:03:49,960 --> 01:03:55,299
everybody like instead like talk about

1272
01:03:51,670 --> 01:03:56,529
like what you have done rather than like

1273
01:03:55,299 --> 01:03:59,529
say like hey this should apply on the

1274
01:03:56,529 --> 01:04:02,519
internet so that's kind of the direction

1275
01:03:59,529 --> 01:04:02,519
I'm okay with it

1276
01:04:08,630 --> 01:04:12,410
yeah I mean my comment is that before I

1277
01:04:10,550 --> 01:04:14,360
read the draft I didn't realize that

1278
01:04:12,410 --> 01:04:17,540
there was this encapsulation going on

1279
01:04:14,360 --> 01:04:19,280
followed by the insertion right because

1280
01:04:17,540 --> 01:04:21,140
that actually changes it and as far as I

1281
01:04:19,280 --> 01:04:24,230
can tell it's the way it's constructed

1282
01:04:21,140 --> 01:04:27,650
it's not gonna leak any of these headers

1283
01:04:24,230 --> 01:04:29,360
because of the encapsulation so the DD

1284
01:04:27,650 --> 01:04:32,090
action boundary of the domain is well

1285
01:04:29,360 --> 01:04:33,860
defined I mean it might but actually

1286
01:04:32,090 --> 01:04:35,390
leak the whole encapsulated packet but

1287
01:04:33,860 --> 01:04:36,530
any have other problems right but it's

1288
01:04:35,390 --> 01:04:41,330
not going to leak the fact that it just

1289
01:04:36,530 --> 01:04:42,650
inserted a packet so like Eddy that was

1290
01:04:41,330 --> 01:04:44,480
like one of the things that got removed

1291
01:04:42,650 --> 01:04:46,160
in the SRX draft itself so that is one

1292
01:04:44,480 --> 01:04:47,840
of the points I brought up no gional SRS

1293
01:04:46,160 --> 01:04:49,160
draft which is known the RFC at cue and

1294
01:04:47,840 --> 01:04:52,090
that got removed from the draft

1295
01:04:49,160 --> 01:04:54,620
specifically for this reason so yeah

1296
01:04:52,090 --> 01:04:56,600
okay so Eric and then I think we will

1297
01:04:54,620 --> 01:05:00,160
wrap up yeah Eric Cline question

1298
01:04:56,600 --> 01:05:03,500
clarifying question for Suresh so then

1299
01:05:00,160 --> 01:05:05,299
hypothetically assuming things could get

1300
01:05:03,500 --> 01:05:06,710
massaged into some acceptable State is

1301
01:05:05,300 --> 01:05:10,880
it hypothetically possible to publish

1302
01:05:06,710 --> 01:05:12,470
both documents yeah that's what I was

1303
01:05:10,880 --> 01:05:14,630
going to say I think we should continue

1304
01:05:12,470 --> 01:05:16,879
working on both of these yeah and I

1305
01:05:14,630 --> 01:05:19,280
think they can exist at the same time

1306
01:05:16,880 --> 01:05:20,690
and maybe we can get to the point of

1307
01:05:19,280 --> 01:05:22,850
submitting them at the same time but

1308
01:05:20,690 --> 01:05:26,030
let's one separate absolutely like

1309
01:05:22,850 --> 01:05:27,350
personally I think like it's both of

1310
01:05:26,030 --> 01:05:29,150
them can exist and both of them have a

1311
01:05:27,350 --> 01:05:32,060
spot like it's really I don't think

1312
01:05:29,150 --> 01:05:34,130
there's any conceptual misalignment

1313
01:05:32,060 --> 01:05:38,680
between these two things like to be very

1314
01:05:34,130 --> 01:05:43,580
frank I don't disagree I just wanted to

1315
01:05:38,680 --> 01:05:45,620
get it down verbatim I'm gonna take note

1316
01:05:43,580 --> 01:05:49,640
that these two documents can potentially

1317
01:05:45,620 --> 01:05:52,819
exist together yes so good I think we

1318
01:05:49,640 --> 01:05:57,140
are done we're five minutes late but all

1319
01:05:52,820 --> 01:06:01,760
in all not too bad and well no it's it's

1320
01:05:57,140 --> 01:06:03,560
this is this was the actually we had

1321
01:06:01,760 --> 01:06:05,630
five minutes at the front for us to talk

1322
01:06:03,560 --> 01:06:08,180
so you were fine

1323
01:06:05,630 --> 01:06:12,470
so so I think this was a very

1324
01:06:08,180 --> 01:06:15,200
constructive session we are not done

1325
01:06:12,470 --> 01:06:18,410
with this topic so I think this wraps up

1326
01:06:15,200 --> 01:06:20,189
six-man in Singapore and I guess we'll

1327
01:06:18,410 --> 01:06:24,569
see you all in

1328
01:06:20,190 --> 01:06:27,980
Vancouver yes a shorter trip for me but

1329
01:06:24,569 --> 01:06:27,980
good thank you

1330
01:06:35,780 --> 01:06:40,349
if anyone knows where the blue sheets

1331
01:06:38,579 --> 01:06:44,390
are can you please bring them forward

1332
01:06:40,349 --> 01:06:44,390
thank you fantastic

1333
01:06:45,100 --> 01:06:48,139
[Music]

1334
01:06:59,620 --> 01:07:02,659
[Music]

