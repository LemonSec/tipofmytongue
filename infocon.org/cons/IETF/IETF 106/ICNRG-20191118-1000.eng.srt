1
00:00:05,920 --> 00:00:11,150
he pointed out that if I hand this

2
00:00:08,540 --> 00:00:12,770
directly to Adrian he's just going to

3
00:00:11,150 --> 00:00:14,750
turn around and hand that the something

4
00:00:12,770 --> 00:00:19,279
to the people in this community it's any

5
00:00:14,750 --> 00:00:21,550
good right yeah

6
00:00:19,279 --> 00:00:33,949
so he said why'd you just run it through

7
00:00:21,550 --> 00:00:37,040
- I see an RJ you know so maybe I should

8
00:00:33,949 --> 00:00:38,180
just you know propose we adopt it you

9
00:00:37,040 --> 00:00:47,420
know it's just something I'm running

10
00:00:38,180 --> 00:00:49,129
doing any just how every that's a good

11
00:00:47,420 --> 00:00:54,309
question for Colin I don't think so I

12
00:00:49,130 --> 00:00:54,309
would say just I can just produce they

13
00:00:54,550 --> 00:00:58,930
produce an offbeat you can say it looks

14
00:01:00,250 --> 00:01:05,899
just you know I'm pointing out that you

15
00:01:04,640 --> 00:01:10,340
know this is a check point and then

16
00:01:05,899 --> 00:01:12,049
we're you know as Thomas proposed we're

17
00:01:10,340 --> 00:01:16,490
maybe border you proposed but we just

18
00:01:12,049 --> 00:01:21,350
write a new you know a new RG level

19
00:01:16,490 --> 00:01:23,899
learner picture yeah and we can just

20
00:01:21,350 --> 00:01:25,428
reference this as prior work because

21
00:01:23,899 --> 00:01:27,350
we've done I think we've gathered enough

22
00:01:25,429 --> 00:01:28,609
it may be just copying what working

23
00:01:27,350 --> 00:01:35,798
before you do it but maybe there's

24
00:01:28,609 --> 00:01:38,119
actually no need to do okay good morning

25
00:01:35,799 --> 00:01:48,139
please find your seats we're gonna start

26
00:01:38,119 --> 00:01:50,419
soon right so it's ten o'clock and then

27
00:01:48,139 --> 00:01:56,119
I think it's not that early so there's

28
00:01:50,419 --> 00:02:01,569
no excuse to be late okay good morning

29
00:01:56,119 --> 00:02:05,299
this is IC energy welcome to Singapore

30
00:02:01,569 --> 00:02:08,410
these are my coaches Bowie woman and day

31
00:02:05,299 --> 00:02:13,270
for Ann and I'm their coach oh and

32
00:02:08,410 --> 00:02:15,900
before we start so we have an updated

33
00:02:13,270 --> 00:02:18,540
note well note

34
00:02:15,900 --> 00:02:21,120
and so it's important to be aware of

35
00:02:18,540 --> 00:02:23,010
that so first of all so that this one

36
00:02:21,120 --> 00:02:24,930
hasn't really changed but so you're

37
00:02:23,010 --> 00:02:28,260
still expected to let us know if you

38
00:02:24,930 --> 00:02:31,400
introduced IP our CIP are in the

39
00:02:28,260 --> 00:02:36,048
presentations or discussions yeah

40
00:02:31,400 --> 00:02:40,590
second the IRT F is also following the

41
00:02:36,049 --> 00:02:44,519
IITs policy so for privacy and could of

42
00:02:40,590 --> 00:02:47,159
conduct so check out these two our C's

43
00:02:44,519 --> 00:02:55,049
here and talk to the Ombuds team if you

44
00:02:47,159 --> 00:02:57,750
have any concerns or questions and so

45
00:02:55,049 --> 00:03:00,810
finally we'd like to remind you that

46
00:02:57,750 --> 00:03:04,920
this is the internet research task force

47
00:03:00,810 --> 00:03:07,650
so we are doing research here we are

48
00:03:04,920 --> 00:03:12,000
generally not doing standards although

49
00:03:07,650 --> 00:03:16,069
sometimes we use the same methodology so

50
00:03:12,000 --> 00:03:19,560
we do drafts and at some point our C's

51
00:03:16,069 --> 00:03:22,980
quite often the goal of the work that we

52
00:03:19,560 --> 00:03:25,859
do here is just to enable additional you

53
00:03:22,980 --> 00:03:28,349
know experimentation people enable

54
00:03:25,859 --> 00:03:32,060
collaboration on certain topics but it's

55
00:03:28,349 --> 00:03:32,060
really not about producing standards

56
00:03:32,129 --> 00:03:40,379
check out this my RTF primer if you have

57
00:03:35,150 --> 00:03:42,930
questions on that okay so yeah I see

58
00:03:40,379 --> 00:03:47,429
energy as all the other groups has a

59
00:03:42,930 --> 00:03:51,599
mailing list a web page data tracker

60
00:03:47,430 --> 00:03:53,489
page and so on and so for this meeting

61
00:03:51,599 --> 00:03:55,228
now you to say kindly agreed to take

62
00:03:53,489 --> 00:04:00,319
notes thank you very very much

63
00:03:55,229 --> 00:04:06,269
it's not the first time the materials

64
00:04:00,319 --> 00:04:09,030
uploaded and this is the agenda for

65
00:04:06,269 --> 00:04:12,150
today so it's you can see it's it's

66
00:04:09,030 --> 00:04:15,720
pretty packed so we didn't have a full

67
00:04:12,150 --> 00:04:18,358
day interim yesterday because we just

68
00:04:15,720 --> 00:04:21,238
had one in Macau so we're going to talk

69
00:04:18,358 --> 00:04:22,888
a bit about that as a summary I'm not

70
00:04:21,238 --> 00:04:25,888
going to read through all of this right

71
00:04:22,889 --> 00:04:29,370
now I'm just asking around is there any

72
00:04:25,889 --> 00:04:36,600
update and you do wanna bash the agenda

73
00:04:29,370 --> 00:04:43,050
anything we missed okay so then let's

74
00:04:36,600 --> 00:04:46,699
get started so we had this interim

75
00:04:43,050 --> 00:04:51,240
meeting in Macau in September after the

76
00:04:46,699 --> 00:04:53,430
ICN conference there so the conference

77
00:04:51,240 --> 00:04:55,880
and also our highest energy meeting was

78
00:04:53,430 --> 00:05:02,780
kindly hosted by the University of Macau

79
00:04:55,880 --> 00:05:05,969
so thanks a lot for that and so we had a

80
00:05:02,780 --> 00:05:11,159
kind of interesting agenda so often we

81
00:05:05,970 --> 00:05:13,500
use these post conference meetings to do

82
00:05:11,160 --> 00:05:14,910
a deep dive on uncertain interesting for

83
00:05:13,500 --> 00:05:18,320
example paper presentations that

84
00:05:14,910 --> 00:05:22,800
occurred at the conference or some some

85
00:05:18,320 --> 00:05:25,770
in-depth technical discussion and so let

86
00:05:22,800 --> 00:05:30,840
me just give you a quick summary of what

87
00:05:25,770 --> 00:05:34,460
happened here so Jeff Berkeley and and

88
00:05:30,840 --> 00:05:37,560
and Tim actually organized a full-day

89
00:05:34,460 --> 00:05:40,430
workshop before the conference that was

90
00:05:37,560 --> 00:05:43,440
called touching the future Internet and

91
00:05:40,430 --> 00:05:47,010
that was at the took place at the School

92
00:05:43,440 --> 00:05:52,469
of Creative Media at the city in Hong

93
00:05:47,010 --> 00:05:54,599
Kong and so this was about yeah creating

94
00:05:52,470 --> 00:05:59,460
new ways to deal with distributed

95
00:05:54,599 --> 00:06:03,840
multimedia and was a specific tool touch

96
00:05:59,460 --> 00:06:07,650
designer and NDN so the the background

97
00:06:03,840 --> 00:06:10,380
is that so say in the old days when we

98
00:06:07,650 --> 00:06:13,289
when we were doing like like video which

99
00:06:10,380 --> 00:06:16,200
I'm streaming and so on I mean mostly

100
00:06:13,289 --> 00:06:20,700
concern was like linear video and he

101
00:06:16,200 --> 00:06:23,760
thinks well actually today they are much

102
00:06:20,700 --> 00:06:28,190
richer ways to interact with multimedia

103
00:06:23,760 --> 00:06:30,419
so for example in this say multimedia

104
00:06:28,190 --> 00:06:34,200
presentation environments or theater

105
00:06:30,419 --> 00:06:35,930
environments where Jeff works you are

106
00:06:34,200 --> 00:06:40,469
mixing constantly mixing different

107
00:06:35,930 --> 00:06:42,870
sources and so on and so the idea that

108
00:06:40,469 --> 00:06:45,480
Jeff and his team had

109
00:06:42,870 --> 00:06:49,470
or to provide a good networking support

110
00:06:45,480 --> 00:06:52,470
and could api's for that and so they

111
00:06:49,470 --> 00:06:54,930
actually integrated in the end in a

112
00:06:52,470 --> 00:06:58,580
commercial tools or touch designer by a

113
00:06:54,930 --> 00:07:03,960
canadian company called derivative and

114
00:06:58,580 --> 00:07:07,560
so gave this to designers or researchers

115
00:07:03,960 --> 00:07:09,570
in that space and so for experimentation

116
00:07:07,560 --> 00:07:13,890
and that was a really cool workshop and

117
00:07:09,570 --> 00:07:15,870
Jeff gave us a summary so check out his

118
00:07:13,890 --> 00:07:18,380
slides from the interim if you

119
00:07:15,870 --> 00:07:18,380
interested in that

120
00:07:19,980 --> 00:07:24,750
shank did an update on I see an open I'm

121
00:07:23,730 --> 00:07:29,400
not gonna talk about this now because

122
00:07:24,750 --> 00:07:31,800
Thomas is talking about this later and

123
00:07:29,400 --> 00:07:34,229
Chang also talked about quality of

124
00:07:31,800 --> 00:07:38,090
service for ICN in the 80s so there's a

125
00:07:34,230 --> 00:07:42,390
draft in IC energy about these ideas and

126
00:07:38,090 --> 00:07:46,380
so that team also had papers and demos

127
00:07:42,390 --> 00:07:50,760
at the at the conference and so in

128
00:07:46,380 --> 00:07:52,530
general the idea is that while QoS of

129
00:07:50,760 --> 00:07:55,800
course has a long history in the IP

130
00:07:52,530 --> 00:08:00,359
world and in ICN it's quite interesting

131
00:07:55,800 --> 00:08:02,610
to revisit qsr because actually you have

132
00:08:00,360 --> 00:08:05,160
much more resources to control so you

133
00:08:02,610 --> 00:08:09,720
can actually achieve you know better

134
00:08:05,160 --> 00:08:12,360
control maybe a more fine granular qsr

135
00:08:09,720 --> 00:08:18,450
control and you also have things like

136
00:08:12,360 --> 00:08:20,370
the ICN naming approach so you can

137
00:08:18,450 --> 00:08:23,250
actually also maybe be a bit more

138
00:08:20,370 --> 00:08:26,180
expressive about classifying flows and

139
00:08:23,250 --> 00:08:29,280
so on and so especially in the

140
00:08:26,180 --> 00:08:32,370
constrained IOT environment it makes a

141
00:08:29,280 --> 00:08:36,089
lot of sense to look at resource control

142
00:08:32,370 --> 00:08:38,640
quite carefully and so this work at a

143
00:08:36,090 --> 00:08:42,690
case where they wanted to support really

144
00:08:38,640 --> 00:08:45,840
critical IOT communication so like

145
00:08:42,690 --> 00:08:50,310
life-saving alarm signals for example

146
00:08:45,840 --> 00:08:51,930
and so they looked at you know what can

147
00:08:50,310 --> 00:08:54,030
you do in an isolated fashion on one

148
00:08:51,930 --> 00:08:56,290
node so how you deal with the different

149
00:08:54,030 --> 00:08:58,389
resources how you can you can

150
00:08:56,290 --> 00:09:01,269
relate the different say ICN forward

151
00:08:58,389 --> 00:09:04,420
resources on one note but and how can

152
00:09:01,269 --> 00:09:09,430
you also distribute the coordination in

153
00:09:04,420 --> 00:09:13,810
a larger network so with that I think

154
00:09:09,430 --> 00:09:15,180
that should be a good teaser for you to

155
00:09:13,810 --> 00:09:20,229
check this out

156
00:09:15,180 --> 00:09:25,449
and then we had a discussion about ICN

157
00:09:20,230 --> 00:09:30,490
and low-power long-range communication

158
00:09:25,449 --> 00:09:34,180
so Laura in particular so you're

159
00:09:30,490 --> 00:09:36,069
probably familiar with SE lo pan develop

160
00:09:34,180 --> 00:09:38,769
I'm working and I see energy or 6lowpan

161
00:09:36,069 --> 00:09:40,810
in the in the ITF and so and low-power

162
00:09:38,769 --> 00:09:44,410
wide area is a bit different so it's

163
00:09:40,810 --> 00:09:47,829
also very constrained very low-power but

164
00:09:44,410 --> 00:09:49,660
wide range and you connect well

165
00:09:47,829 --> 00:09:52,209
something to something like the Internet

166
00:09:49,660 --> 00:09:55,870
in the end and so you don't have this

167
00:09:52,209 --> 00:10:00,459
gateway more than necessarily and turns

168
00:09:55,870 --> 00:10:03,670
out that our different communities in

169
00:10:00,459 --> 00:10:05,380
the larger ICN space have been have

170
00:10:03,670 --> 00:10:08,589
started looking into into Laura because

171
00:10:05,380 --> 00:10:11,439
it's quite quite interesting so for

172
00:10:08,589 --> 00:10:14,050
example we had a presentation from the

173
00:10:11,440 --> 00:10:18,010
Hong Kong Applied Science and Technology

174
00:10:14,050 --> 00:10:21,550
Research Institute a stream and they are

175
00:10:18,010 --> 00:10:25,120
developing in a ndn based system for a

176
00:10:21,550 --> 00:10:28,839
smart water meter collection in in Hong

177
00:10:25,120 --> 00:10:32,319
Kong and so had talked about their

178
00:10:28,839 --> 00:10:37,810
prototype implementation and so they are

179
00:10:32,319 --> 00:10:42,610
their ideas on that and Peter kids man

180
00:10:37,810 --> 00:10:45,399
from from riot invited the team gave us

181
00:10:42,610 --> 00:10:46,319
an update about the Laura support in in

182
00:10:45,399 --> 00:10:52,209
riot

183
00:10:46,319 --> 00:10:54,819
so there is a proprietary code by Centex

184
00:10:52,209 --> 00:11:00,849
so the basically inventors of the Laura

185
00:10:54,819 --> 00:11:02,709
Phi protocol and so that that's

186
00:11:00,850 --> 00:11:05,290
integrated into riot but

187
00:11:02,709 --> 00:11:07,630
riot is also working on a bit more

188
00:11:05,290 --> 00:11:09,339
elegant implementation

189
00:11:07,630 --> 00:11:13,899
of Laura into there the general

190
00:11:09,339 --> 00:11:15,670
networking stack so basically Laura is

191
00:11:13,899 --> 00:11:17,769
supported quite quite well and right

192
00:11:15,670 --> 00:11:20,920
that's good news for people who want to

193
00:11:17,769 --> 00:11:25,600
do experiments also ICN experiments in

194
00:11:20,920 --> 00:11:28,930
that space and so after this kind of

195
00:11:25,600 --> 00:11:32,560
more presentational ancient discussions

196
00:11:28,930 --> 00:11:34,930
we had a in-depth discussion about some

197
00:11:32,560 --> 00:11:38,680
design opportunities or designer

198
00:11:34,930 --> 00:11:41,709
alternatives for doing ICN in Laura or

199
00:11:38,680 --> 00:11:44,888
over Laura and so I'm not going to

200
00:11:41,709 --> 00:11:47,439
repeat this right now so we probably

201
00:11:44,889 --> 00:11:50,829
continue this and we'll be able to tell

202
00:11:47,440 --> 00:11:53,470
you more about this in at the Vancouver

203
00:11:50,829 --> 00:11:56,079
meeting if you're interested in

204
00:11:53,470 --> 00:11:58,540
participating we just used the icy

205
00:11:56,079 --> 00:12:02,529
energy mailing list so please contact me

206
00:11:58,540 --> 00:12:06,730
or command use the main list okay and

207
00:12:02,529 --> 00:12:12,699
then finally Christian shooting gave us

208
00:12:06,730 --> 00:12:16,060
an interesting update about his thoughts

209
00:12:12,699 --> 00:12:20,139
about push based communication so push

210
00:12:16,060 --> 00:12:22,899
it update to and so if you have been

211
00:12:20,139 --> 00:12:24,970
here before you maybe you remember an

212
00:12:22,899 --> 00:12:28,569
earlier presentation we talked about the

213
00:12:24,970 --> 00:12:32,410
general idea and so the motivation to

214
00:12:28,569 --> 00:12:37,000
four is doing like a hand only push

215
00:12:32,410 --> 00:12:38,620
communication and so this time he had

216
00:12:37,000 --> 00:12:43,569
some more information about say some

217
00:12:38,620 --> 00:12:45,550
protocol design ideas I don't think I

218
00:12:43,569 --> 00:12:47,979
would do a good service in explains

219
00:12:45,550 --> 00:12:52,599
because this takes more time so I just

220
00:12:47,980 --> 00:12:56,649
refer you to the presentation and okay

221
00:12:52,600 --> 00:13:01,269
so that was a quick summary about the

222
00:12:56,649 --> 00:13:03,310
Macau interim and with that I am I think

223
00:13:01,269 --> 00:13:10,050
we should start with the regular program

224
00:13:03,310 --> 00:13:10,050
can you bring up the slides yeah

225
00:13:13,670 --> 00:13:21,120
is if you have any questions on the

226
00:13:17,730 --> 00:13:26,340
McCowan room let us know okay

227
00:13:21,120 --> 00:13:30,530
and so the first presentation is will be

228
00:13:26,340 --> 00:13:39,660
given by Dave on on the flow Balance

229
00:13:30,530 --> 00:13:43,439
ideas and so this is a little sorry I'm

230
00:13:39,660 --> 00:13:47,579
little tall here there we go so those of

231
00:13:43,440 --> 00:13:50,670
you who have worked with Indian or CCN

232
00:13:47,580 --> 00:13:52,470
like protocols know that an inherent

233
00:13:50,670 --> 00:13:53,969
property of those protocols is that one

234
00:13:52,470 --> 00:13:56,070
interest message produces one data

235
00:13:53,970 --> 00:13:59,760
message and you get this property of the

236
00:13:56,070 --> 00:14:02,850
overall system called flow balance so

237
00:13:59,760 --> 00:14:04,830
this talk is about some characteristics

238
00:14:02,850 --> 00:14:07,350
of flow balance that are desirable

239
00:14:04,830 --> 00:14:11,190
versus undesirable and how we might make

240
00:14:07,350 --> 00:14:14,460
some small changes to algorithms and

241
00:14:11,190 --> 00:14:17,520
protocols to improve the performance of

242
00:14:14,460 --> 00:14:20,940
a flow balance based flow in congestion

243
00:14:17,520 --> 00:14:23,340
control scheme so this draft has been

244
00:14:20,940 --> 00:14:25,200
around for a few months haven't gotten

245
00:14:23,340 --> 00:14:27,420
very much in the way of comments on it

246
00:14:25,200 --> 00:14:30,810
so we thought it might be useful for me

247
00:14:27,420 --> 00:14:33,780
to sort of bootstrap the discussion by

248
00:14:30,810 --> 00:14:35,219
giving a talk so the outline is

249
00:14:33,780 --> 00:14:37,170
basically I'm going to give a short

250
00:14:35,220 --> 00:14:38,580
background on flow balance and how its

251
00:14:37,170 --> 00:14:41,760
congested how it's connected to

252
00:14:38,580 --> 00:14:45,330
congestion control algorithms sort of

253
00:14:41,760 --> 00:14:48,569
like the baseline bottom line issue

254
00:14:45,330 --> 00:14:50,850
which is whether you're counting

255
00:14:48,570 --> 00:14:52,770
interest messages or actually counting

256
00:14:50,850 --> 00:14:54,720
bytes as one would do in a classic

257
00:14:52,770 --> 00:14:57,689
congestion control algorithm and end

258
00:14:54,720 --> 00:15:01,230
with a protocol proposal for how we

259
00:14:57,690 --> 00:15:05,030
might enhance both ndn and CCN X in

260
00:15:01,230 --> 00:15:08,640
order to do a better job of this next so

261
00:15:05,030 --> 00:15:10,439
one interest produces one data which has

262
00:15:08,640 --> 00:15:13,230
some very nice properties including the

263
00:15:10,440 --> 00:15:15,900
inability of a node to just inject data

264
00:15:13,230 --> 00:15:17,550
into the network because if there isn't

265
00:15:15,900 --> 00:15:20,730
an outstanding interest for a piece of

266
00:15:17,550 --> 00:15:23,310
data any data message that sent in is is

267
00:15:20,730 --> 00:15:24,320
is allowed to be and likely to be

268
00:15:23,310 --> 00:15:27,109
dropped

269
00:15:24,320 --> 00:15:30,019
the second point is that these messages

270
00:15:27,110 --> 00:15:32,870
at the at layer 3 were up where the ICN

271
00:15:30,019 --> 00:15:37,579
protocols run are bounded by a level a

272
00:15:32,870 --> 00:15:40,370
layer 3 MTU not a layer 2 MTU and in the

273
00:15:37,579 --> 00:15:44,209
case of n ta andn at least in theory

274
00:15:40,370 --> 00:15:46,339
that l3 MTU is essentially unbounded

275
00:15:44,209 --> 00:15:48,050
because the designers decided for some

276
00:15:46,339 --> 00:15:49,490
reason which I don't want to go into

277
00:15:48,050 --> 00:15:54,519
because it will start me on a different

278
00:15:49,490 --> 00:15:57,019
rant that the MTU size is a TLV value

279
00:15:54,519 --> 00:16:00,440
which means you could can at least in

280
00:15:57,019 --> 00:16:02,240
theory have gigabyte m2 use or petabyte

281
00:16:00,440 --> 00:16:04,730
m to use if you you know if you want to

282
00:16:02,240 --> 00:16:07,550
wait around long enough in practice this

283
00:16:04,730 --> 00:16:11,420
is limited there's a compiled in upper

284
00:16:07,550 --> 00:16:13,339
bound in the nd and code base which will

285
00:16:11,420 --> 00:16:17,060
wind up being an architectural constant

286
00:16:13,339 --> 00:16:21,769
I suppose and that's for K bytes for CCN

287
00:16:17,060 --> 00:16:25,250
X it's a fixed size field so the maximum

288
00:16:21,769 --> 00:16:30,980
theoretical l3 MTU is 64 kilobytes same

289
00:16:25,250 --> 00:16:32,360
as UDP or TCP in the IP world so if if

290
00:16:30,980 --> 00:16:35,660
the problem you're trying to solve is

291
00:16:32,360 --> 00:16:38,360
how do you fit this into the l2 and to

292
00:16:35,660 --> 00:16:41,930
you you need fragmentation protocols in

293
00:16:38,360 --> 00:16:45,940
the case where the l3 and the N or 16x

294
00:16:41,930 --> 00:16:45,939
message is bigger than an l2 em to you

295
00:16:47,440 --> 00:16:54,290
I'll probably screw up right okay so

296
00:16:51,290 --> 00:16:57,589
what's the problem here the problem is

297
00:16:54,290 --> 00:17:01,310
is the small data objects in terms of

298
00:16:57,589 --> 00:17:03,050
constructing your ICN level data packet

299
00:17:01,310 --> 00:17:04,879
are inconvenient for a number of

300
00:17:03,050 --> 00:17:06,859
applications because the natural object

301
00:17:04,880 --> 00:17:09,230
size you want to deal with is larger

302
00:17:06,859 --> 00:17:12,559
than a link MTU so things like video

303
00:17:09,230 --> 00:17:16,130
frames are larger than an MTU various

304
00:17:12,559 --> 00:17:18,619
other types of say row of a database

305
00:17:16,130 --> 00:17:21,380
table or any number of data structures

306
00:17:18,619 --> 00:17:23,329
are larger than an MTU on the other hand

307
00:17:21,380 --> 00:17:26,860
you also have applications with very

308
00:17:23,329 --> 00:17:29,360
small data objects such as voice over IP

309
00:17:26,859 --> 00:17:31,790
audio data frames which can be as small

310
00:17:29,360 --> 00:17:34,520
as 20 bytes sensor readings which

311
00:17:31,790 --> 00:17:37,280
conceivably could be even small or you

312
00:17:34,520 --> 00:17:42,680
know 2 3 4 bytes and

313
00:17:37,280 --> 00:17:44,660
if you don't know how big a l-3 data

314
00:17:42,680 --> 00:17:48,830
packet coming back at you when you issue

315
00:17:44,660 --> 00:17:50,750
an interest is how do you do the

316
00:17:48,830 --> 00:17:53,270
resource allocation in a reasonable way

317
00:17:50,750 --> 00:17:55,580
what people have been doing if you look

318
00:17:53,270 --> 00:17:57,650
at the existing resource allocation

319
00:17:55,580 --> 00:18:00,020
algorithms that have been implemented

320
00:17:57,650 --> 00:18:02,830
and and measured they make very

321
00:18:00,020 --> 00:18:06,470
conservative resource allocation

322
00:18:02,830 --> 00:18:09,409
decisions and assume MTU size packets at

323
00:18:06,470 --> 00:18:11,720
least l/2 and to size packets and in

324
00:18:09,410 --> 00:18:13,940
some cases even l3 and to you size

325
00:18:11,720 --> 00:18:16,340
packets and then there's some per packet

326
00:18:13,940 --> 00:18:18,290
crypto overhead in terms of how much you

327
00:18:16,340 --> 00:18:20,689
have to hash on every packet and what

328
00:18:18,290 --> 00:18:23,720
you include in the packet in the absence

329
00:18:20,690 --> 00:18:25,580
of manifests which makes things bigger

330
00:18:23,720 --> 00:18:28,460
than you might like to this is

331
00:18:25,580 --> 00:18:30,649
equivalent to the how do i size a data

332
00:18:28,460 --> 00:18:32,930
packet when I put it into a VPN tunnel

333
00:18:30,650 --> 00:18:35,270
because I might you know the native data

334
00:18:32,930 --> 00:18:37,610
might fit on the link but then I add the

335
00:18:35,270 --> 00:18:40,070
extra overhead and I've spilled over and

336
00:18:37,610 --> 00:18:42,050
I need fragmentation so why don't we

337
00:18:40,070 --> 00:18:43,909
solve this whole flow balance problem

338
00:18:42,050 --> 00:18:45,560
with fragmentation there's a bunch of

339
00:18:43,910 --> 00:18:47,510
different fragmentation schemes I won't

340
00:18:45,560 --> 00:18:50,450
go into what they are you can do end to

341
00:18:47,510 --> 00:18:53,240
end you can do hop by hop you can do hop

342
00:18:50,450 --> 00:18:55,730
by hop with cut through any of these

343
00:18:53,240 --> 00:18:57,410
things but the bottom line is that this

344
00:18:55,730 --> 00:18:59,270
doesn't actually solve the flow balance

345
00:18:57,410 --> 00:19:01,520
problem because you still have to

346
00:18:59,270 --> 00:19:03,379
allocate buffer and link bandwidth at

347
00:19:01,520 --> 00:19:06,080
each intermediate hop because the

348
00:19:03,380 --> 00:19:07,940
stateful forwarding and you have to set

349
00:19:06,080 --> 00:19:10,639
that aside for the maximum size objects

350
00:19:07,940 --> 00:19:12,470
because if you don't do that you it this

351
00:19:10,640 --> 00:19:13,220
is similar to the fragmentation problem

352
00:19:12,470 --> 00:19:15,200
in IP

353
00:19:13,220 --> 00:19:17,930
you're going to get congestion collapse

354
00:19:15,200 --> 00:19:20,450
on overload because you can't put any

355
00:19:17,930 --> 00:19:23,060
single thing back together again in a

356
00:19:20,450 --> 00:19:25,220
reasonable way so here are some design

357
00:19:23,060 --> 00:19:28,310
considerations that led to the scheme

358
00:19:25,220 --> 00:19:30,080
that I'm proposing here so you once some

359
00:19:28,310 --> 00:19:32,419
means to allocate link bandwidth for

360
00:19:30,080 --> 00:19:34,760
data messages with an upper bound larger

361
00:19:32,420 --> 00:19:37,730
than the path MTU and a lower bound

362
00:19:34,760 --> 00:19:40,340
lower than a single link MTU you want to

363
00:19:37,730 --> 00:19:43,070
at least handle moderate sized objects

364
00:19:40,340 --> 00:19:45,530
and I sort of took the you know the C

365
00:19:43,070 --> 00:19:47,389
CNX view of the world which is it's

366
00:19:45,530 --> 00:19:50,740
unlikely you would ever want to have an

367
00:19:47,390 --> 00:19:52,480
l-3 MTU greater than 64 kilobytes

368
00:19:50,740 --> 00:19:54,670
as opposed to really big ones and

369
00:19:52,480 --> 00:19:56,679
finding the right trade-off if you allow

370
00:19:54,670 --> 00:19:58,420
really big ones between handling a large

371
00:19:56,679 --> 00:20:00,400
number of small objects or a small

372
00:19:58,420 --> 00:20:02,290
number of large objects if you look at

373
00:20:00,400 --> 00:20:03,970
the math that's very quickly an

374
00:20:02,290 --> 00:20:06,370
intractable resource allocation problem

375
00:20:03,970 --> 00:20:08,710
you just you just have no idea what to

376
00:20:06,370 --> 00:20:10,330
do and in many of these congestion

377
00:20:08,710 --> 00:20:13,300
control schemes resources are allocated

378
00:20:10,330 --> 00:20:15,580
for the returning data packet based on

379
00:20:13,300 --> 00:20:17,290
the arriving interest not just waiting

380
00:20:15,580 --> 00:20:19,419
around waiting for the data packet to

381
00:20:17,290 --> 00:20:22,090
arrive in doing some kind of tail drop

382
00:20:19,420 --> 00:20:24,309
or aqm scheme on the data so that means

383
00:20:22,090 --> 00:20:26,590
it's really useful to know when an

384
00:20:24,309 --> 00:20:28,149
interest message arrives how much data

385
00:20:26,590 --> 00:20:29,770
you expect to come back

386
00:20:28,150 --> 00:20:33,309
based on the arrival that interest

387
00:20:29,770 --> 00:20:36,850
message so the solution is actually

388
00:20:33,309 --> 00:20:38,740
super simple you just add a TLD to the

389
00:20:36,850 --> 00:20:41,770
interest message saying this is how big

390
00:20:38,740 --> 00:20:43,870
I expect the data coming back for this

391
00:20:41,770 --> 00:20:46,240
interest message to be and you use that

392
00:20:43,870 --> 00:20:48,159
to calculate bandwidth allocation for

393
00:20:46,240 --> 00:20:50,890
the return hop instead of just counting

394
00:20:48,160 --> 00:20:54,400
oil interests equally so that's super

395
00:20:50,890 --> 00:20:56,470
simple only it isn't so there are a

396
00:20:54,400 --> 00:20:58,120
number of problems here one is well how

397
00:20:56,470 --> 00:20:59,950
do you know the size you know what are

398
00:20:58,120 --> 00:21:01,780
you putting the interest message well in

399
00:20:59,950 --> 00:21:04,330
a lot of cases for a lot of applications

400
00:21:01,780 --> 00:21:05,620
this is actually pretty easy right for

401
00:21:04,330 --> 00:21:08,020
sensor or other Internet of Things

402
00:21:05,620 --> 00:21:09,639
applications the data is instrument

403
00:21:08,020 --> 00:21:11,320
readings these are known by the

404
00:21:09,640 --> 00:21:13,360
applicant their fixed size they're known

405
00:21:11,320 --> 00:21:16,360
in advance by the application protocol

406
00:21:13,360 --> 00:21:18,669
and you can just you know tell the l3

407
00:21:16,360 --> 00:21:21,669
you know this is temperature reading is

408
00:21:18,670 --> 00:21:24,130
four bytes long right in video streaming

409
00:21:21,670 --> 00:21:26,080
the information is also available ahead

410
00:21:24,130 --> 00:21:28,210
of time in the manifests these are the

411
00:21:26,080 --> 00:21:31,419
application layer manifests which

412
00:21:28,210 --> 00:21:34,360
contain the names of video segments and

413
00:21:31,420 --> 00:21:35,890
their sizes and also for the audio so

414
00:21:34,360 --> 00:21:39,280
you have that information at the

415
00:21:35,890 --> 00:21:42,700
application layer as well and then the

416
00:21:39,280 --> 00:21:45,730
case for something like VoIP almost all

417
00:21:42,700 --> 00:21:48,250
the known vocoders have fixed size

418
00:21:45,730 --> 00:21:49,990
frames which are negotiated at the start

419
00:21:48,250 --> 00:21:52,210
of the session so you know before any

420
00:21:49,990 --> 00:21:54,610
data is exchanged whether you're you

421
00:21:52,210 --> 00:21:56,140
know if you're doing LP kelp you know

422
00:21:54,610 --> 00:21:59,469
they're going to be you know somewhere

423
00:21:56,140 --> 00:22:01,929
between 10 and 20 bytes per sample all

424
00:21:59,470 --> 00:22:04,269
right but that doesn't cover everything

425
00:22:01,929 --> 00:22:07,479
sometimes you don't know right

426
00:22:04,269 --> 00:22:09,729
and what if the consumer has to guess so

427
00:22:07,479 --> 00:22:11,979
we need to deal with consumers that

428
00:22:09,729 --> 00:22:14,320
guess and if you allow consumers to

429
00:22:11,979 --> 00:22:17,950
guess you need to deal with both honest

430
00:22:14,320 --> 00:22:20,950
consumers and malicious consumers so the

431
00:22:17,950 --> 00:22:22,899
second problem if you have if if if the

432
00:22:20,950 --> 00:22:24,429
user is guessing or something that you

433
00:22:22,899 --> 00:22:26,468
thought you know what you was right was

434
00:22:24,429 --> 00:22:29,200
wrong the data could be a lot bigger

435
00:22:26,469 --> 00:22:31,359
than the estimate and if that's the case

436
00:22:29,200 --> 00:22:33,369
the data can result in two things first

437
00:22:31,359 --> 00:22:37,239
you can get unfair bandwidth allocation

438
00:22:33,369 --> 00:22:42,428
where you've allocated resources for for

439
00:22:37,239 --> 00:22:45,659
this much but this much comes back so in

440
00:22:42,429 --> 00:22:49,089
the worst case you can actually amplify

441
00:22:45,659 --> 00:22:50,769
congestion by sending back a lot more

442
00:22:49,089 --> 00:22:52,629
data than you've allocated the resources

443
00:22:50,769 --> 00:22:54,039
for so you have some number of choices

444
00:22:52,629 --> 00:22:55,958
here I won't spend much time on them you

445
00:22:54,039 --> 00:22:58,419
can forward it any way which is safe if

446
00:22:55,959 --> 00:23:00,039
you're not congested but that's unfair

447
00:22:58,419 --> 00:23:02,440
and unstable when the link gets

448
00:23:00,039 --> 00:23:04,869
congested you can forward the data when

449
00:23:02,440 --> 00:23:07,899
the links uncongested but suppress the

450
00:23:04,869 --> 00:23:11,019
interest and reject it when the link is

451
00:23:07,899 --> 00:23:13,059
congested or you could say well you know

452
00:23:11,019 --> 00:23:15,849
people miss estimating their nefarious

453
00:23:13,059 --> 00:23:17,440
characters so if you if you ask for too

454
00:23:15,849 --> 00:23:20,320
much you just drop the data as a way of

455
00:23:17,440 --> 00:23:22,659
punishing the user for the Mis estimate

456
00:23:20,320 --> 00:23:24,189
but if you're going to do that you need

457
00:23:22,659 --> 00:23:26,049
some kind of feedback though and you'll

458
00:23:24,190 --> 00:23:26,799
notice that in the protocol proposal

459
00:23:26,049 --> 00:23:29,408
that I'm making

460
00:23:26,799 --> 00:23:31,749
there is a an error code that can come

461
00:23:29,409 --> 00:23:34,690
back on an interest if you drop the

462
00:23:31,749 --> 00:23:38,589
interest or their data coming back due

463
00:23:34,690 --> 00:23:40,929
to due to the Mis estimate being too big

464
00:23:38,589 --> 00:23:43,509
so the next problem is well the inverse

465
00:23:40,929 --> 00:23:45,129
problem the data is too small so you

466
00:23:43,509 --> 00:23:48,219
don't cause any congestion by

467
00:23:45,129 --> 00:23:50,408
overestimating the size of the data

468
00:23:48,219 --> 00:23:52,779
coming back but resources get

469
00:23:50,409 --> 00:23:54,700
inefficiently allocated because not all

470
00:23:52,779 --> 00:23:57,249
the set-aside bandwidth is actually used

471
00:23:54,700 --> 00:23:59,049
for the returning data so there's some

472
00:23:57,249 --> 00:24:01,379
things you could do here too one is to

473
00:23:59,049 --> 00:24:04,779
well let's just ignore this problem um

474
00:24:01,379 --> 00:24:06,609
because you know you if you're doing

475
00:24:04,779 --> 00:24:08,739
stochastic resource allocation on the

476
00:24:06,609 --> 00:24:11,559
return link somebody will get to use it

477
00:24:08,739 --> 00:24:13,839
any way you could account for the usage

478
00:24:11,559 --> 00:24:16,599
according to the larger data size that

479
00:24:13,839 --> 00:24:18,159
somebody could have said and then you're

480
00:24:16,599 --> 00:24:21,879
sort of penalizing people in the

481
00:24:18,160 --> 00:24:23,890
domain of their flow control for that

482
00:24:21,880 --> 00:24:25,840
Mis estimate or you could attempt to

483
00:24:23,890 --> 00:24:27,160
adjust congestion control parameters

484
00:24:25,840 --> 00:24:29,439
around this it's a little too more

485
00:24:27,160 --> 00:24:32,050
detailed for the talk here look at the

486
00:24:29,440 --> 00:24:33,970
draft for that and then problem number

487
00:24:32,050 --> 00:24:35,710
four the one that always rears its head

488
00:24:33,970 --> 00:24:38,830
in any of these architectures like

489
00:24:35,710 --> 00:24:41,620
Indiana and CCN which is interest

490
00:24:38,830 --> 00:24:43,449
aggregation because multiple interests

491
00:24:41,620 --> 00:24:45,189
can be aggregated at the same point and

492
00:24:43,450 --> 00:24:46,750
what if one of them says the data is 10

493
00:24:45,190 --> 00:24:50,080
kilobytes and the other one says the

494
00:24:46,750 --> 00:24:51,760
data is you know 64 kilobytes what do

495
00:24:50,080 --> 00:24:53,830
you do how do you how do you manage this

496
00:24:51,760 --> 00:24:55,330
and again the draft has a bunch of

497
00:24:53,830 --> 00:24:57,730
possible approaches to this I won't

498
00:24:55,330 --> 00:24:59,290
spend much time going through the

499
00:24:57,730 --> 00:25:02,110
details here just read it in the draft

500
00:24:59,290 --> 00:25:04,870
there's some reasonable approaches to

501
00:25:02,110 --> 00:25:06,070
deal with interest aggregation here by

502
00:25:04,870 --> 00:25:09,850
the way anytime you try to do something

503
00:25:06,070 --> 00:25:11,950
clever in either nd an or CCN you're

504
00:25:09,850 --> 00:25:13,959
gonna run up against huh what am I going

505
00:25:11,950 --> 00:25:15,190
to do about interest aggregation so we

506
00:25:13,960 --> 00:25:18,120
see this in the quality of service

507
00:25:15,190 --> 00:25:21,280
discussion between ant later as well and

508
00:25:18,120 --> 00:25:23,290
then of course you have malicious actors

509
00:25:21,280 --> 00:25:25,780
you have people who are intentionally

510
00:25:23,290 --> 00:25:27,220
overestimating they decides with the

511
00:25:25,780 --> 00:25:31,120
goal of preventing other users from

512
00:25:27,220 --> 00:25:33,070
using the bandwidth so or consumers

513
00:25:31,120 --> 00:25:34,780
intentionally under estimating data size

514
00:25:33,070 --> 00:25:36,850
and the goal is to sort of have the

515
00:25:34,780 --> 00:25:38,830
interest processed while other

516
00:25:36,850 --> 00:25:41,139
aggregated interests are not processed

517
00:25:38,830 --> 00:25:42,790
so you can have one users interests

518
00:25:41,140 --> 00:25:47,710
interfere with another users interest

519
00:25:42,790 --> 00:25:49,510
denying them access to the data so the

520
00:25:47,710 --> 00:25:52,540
simplest approach here very much the one

521
00:25:49,510 --> 00:25:54,190
I recommend is this is effectively an

522
00:25:52,540 --> 00:25:55,600
interest flooding attack deal with it

523
00:25:54,190 --> 00:25:57,460
the way you would deal with any interest

524
00:25:55,600 --> 00:25:59,169
flooding attack there's some more

525
00:25:57,460 --> 00:26:00,850
sophisticated things you could do but

526
00:25:59,170 --> 00:26:03,120
there's some additional computational

527
00:26:00,850 --> 00:26:07,000
cost in terms of tracking the state

528
00:26:03,120 --> 00:26:14,080
necessary to distinguish a malicious

529
00:26:07,000 --> 00:26:16,420
Fermin honest use of the scheme so from

530
00:26:14,080 --> 00:26:17,889
a protocol proposal point of view this

531
00:26:16,420 --> 00:26:20,770
is really simple there's a proposed

532
00:26:17,890 --> 00:26:24,580
encoding it's a single new TLV you stick

533
00:26:20,770 --> 00:26:26,320
the expected data size in at CLV and the

534
00:26:24,580 --> 00:26:28,149
interest message it goes along with the

535
00:26:26,320 --> 00:26:30,399
interest message any forwarder can look

536
00:26:28,150 --> 00:26:31,960
at it and use it in order to be able to

537
00:26:30,400 --> 00:26:33,580
allocate ban

538
00:26:31,960 --> 00:26:35,860
with for the returning data based on a

539
00:26:33,580 --> 00:26:37,449
byte count which is what most congestion

540
00:26:35,860 --> 00:26:40,030
control algorithms would like to do

541
00:26:37,450 --> 00:26:44,140
rather than pessimal E or stochastically

542
00:26:40,030 --> 00:26:47,200
based on I a assume them to you size and

543
00:26:44,140 --> 00:26:52,530
that's the end of my talk thank you ok

544
00:26:47,200 --> 00:26:52,530
thank you to people if any questions

545
00:26:56,580 --> 00:27:03,429
going once

546
00:26:58,830 --> 00:27:06,610
how many people read the draft yeah ok

547
00:27:03,430 --> 00:27:09,190
that's probably all right so the goal I

548
00:27:06,610 --> 00:27:13,270
have here is to have you find the

549
00:27:09,190 --> 00:27:14,800
sufficiently interesting or scary one

550
00:27:13,270 --> 00:27:16,360
way or the other that you go read the

551
00:27:14,800 --> 00:27:18,460
draft then you tell me how stupid the

552
00:27:16,360 --> 00:27:20,290
ideas or how wonderful the idea is or

553
00:27:18,460 --> 00:27:21,250
what we should do with this going

554
00:27:20,290 --> 00:27:24,610
forward Thanks

555
00:27:21,250 --> 00:27:27,370
ok you can just keep sending that and we

556
00:27:24,610 --> 00:27:30,810
continue with slick all right this is a

557
00:27:27,370 --> 00:27:33,189
complete change of topic

558
00:27:30,810 --> 00:27:38,169
so I'm going to talk about an update to

559
00:27:33,190 --> 00:27:41,620
a draft that has been around pretty much

560
00:27:38,170 --> 00:27:46,030
since Genesis you know the creation of

561
00:27:41,620 --> 00:27:50,649
Indiana and CCN which is a method for

562
00:27:46,030 --> 00:27:54,090
for doing manifests which are ability to

563
00:27:50,650 --> 00:27:56,560
describe collections of ICN data objects

564
00:27:54,090 --> 00:27:58,480
so the background is that this has been

565
00:27:56,560 --> 00:28:01,320
around for a very long time the design

566
00:27:58,480 --> 00:28:04,480
was done I don't even remember probably

567
00:28:01,320 --> 00:28:07,120
2014 sometime like that around the time

568
00:28:04,480 --> 00:28:10,540
the CC next one dot o Christian shootin

569
00:28:07,120 --> 00:28:12,129
for CCN light came up with with an early

570
00:28:10,540 --> 00:28:16,270
version of this that's how it got the

571
00:28:12,130 --> 00:28:18,070
acronym name click and in terms of the

572
00:28:16,270 --> 00:28:21,700
protocols were dealing with manifests

573
00:28:18,070 --> 00:28:23,290
are useful in in Indiana in the sense

574
00:28:21,700 --> 00:28:24,790
that you don't have to use them you

575
00:28:23,290 --> 00:28:28,060
could put everything you needed in every

576
00:28:24,790 --> 00:28:30,670
single data packet but they're critical

577
00:28:28,060 --> 00:28:34,090
in CC NX because c c NX is heavily

578
00:28:30,670 --> 00:28:35,980
biased toward not having all the state

579
00:28:34,090 --> 00:28:37,959
that you need to process a data message

580
00:28:35,980 --> 00:28:39,730
in each individual data message but

581
00:28:37,960 --> 00:28:41,740
assume that you can get the common

582
00:28:39,730 --> 00:28:43,600
pieces of information through an

583
00:28:41,740 --> 00:28:45,340
aggregated data structure like a

584
00:28:43,600 --> 00:28:47,770
manifest so

585
00:28:45,340 --> 00:28:49,300
the examples here are cc NX is heavily

586
00:28:47,770 --> 00:28:51,879
biased toward having what are called

587
00:28:49,300 --> 00:28:55,180
nameless objects which are just the

588
00:28:51,880 --> 00:28:59,080
implicit hash of the of the of the name

589
00:28:55,180 --> 00:29:01,120
together with the data it can need it in

590
00:28:59,080 --> 00:29:02,740
order to take large objects logical

591
00:29:01,120 --> 00:29:05,679
objects and segment them into data

592
00:29:02,740 --> 00:29:07,000
packets of various size and it's also

593
00:29:05,680 --> 00:29:09,190
needed if you want to express

594
00:29:07,000 --> 00:29:12,250
collections of objects the equivalent of

595
00:29:09,190 --> 00:29:15,370
like filesystem directories or database

596
00:29:12,250 --> 00:29:17,170
tables so it's been implemented it's

597
00:29:15,370 --> 00:29:20,229
been around for a long time it's been in

598
00:29:17,170 --> 00:29:22,690
use in real applications for a long time

599
00:29:20,230 --> 00:29:25,210
so where are we well the current state

600
00:29:22,690 --> 00:29:29,290
of affairs is that the draft expired in

601
00:29:25,210 --> 00:29:33,570
2018 the original authors have gone on

602
00:29:29,290 --> 00:29:35,980
to greener pastures pretty much and

603
00:29:33,570 --> 00:29:40,270
don't have time to really do much work

604
00:29:35,980 --> 00:29:42,370
on it so I sort of cajoled two of the

605
00:29:40,270 --> 00:29:43,629
existing authors to kind of resurrect

606
00:29:42,370 --> 00:29:45,729
the work and we had a meeting in

607
00:29:43,630 --> 00:29:48,880
Montreal to sort of say hey what how do

608
00:29:45,730 --> 00:29:50,740
we get this sort of going again and we

609
00:29:48,880 --> 00:29:53,320
got some a little bit of help from some

610
00:29:50,740 --> 00:29:55,510
but mark Moscow and I basically said hey

611
00:29:53,320 --> 00:29:57,429
let's just go get this going it's a

612
00:29:55,510 --> 00:30:02,740
critical piece of technology we need for

613
00:29:57,430 --> 00:30:04,780
both of these designs so after some work

614
00:30:02,740 --> 00:30:07,450
we got finally got a new version of the

615
00:30:04,780 --> 00:30:09,790
draft published a few weeks ago so it's

616
00:30:07,450 --> 00:30:13,620
a lie however you say it's now alive

617
00:30:09,790 --> 00:30:16,300
again so some things haven't changed

618
00:30:13,620 --> 00:30:19,810
Flik still uses this notion of a hash

619
00:30:16,300 --> 00:30:22,270
group which is a group of object caches

620
00:30:19,810 --> 00:30:24,310
that represent individual data packets

621
00:30:22,270 --> 00:30:27,520
that's an ordered list of these content

622
00:30:24,310 --> 00:30:30,310
objects that point to either the the

623
00:30:27,520 --> 00:30:34,210
native data object at the bottom or you

624
00:30:30,310 --> 00:30:35,590
can build a Merkel tree of manifest so

625
00:30:34,210 --> 00:30:38,020
one manifest can point to another

626
00:30:35,590 --> 00:30:38,830
manifest in a manifest tree that's all

627
00:30:38,020 --> 00:30:41,379
still the same

628
00:30:38,830 --> 00:30:43,149
it still has metadata in the manifest

629
00:30:41,380 --> 00:30:45,910
that tells you how to interpret the

630
00:30:43,150 --> 00:30:49,200
manifest using a relatively simple

631
00:30:45,910 --> 00:30:52,050
automaton to traverse the manifest and

632
00:30:49,200 --> 00:30:56,200
it also has this nice property which I

633
00:30:52,050 --> 00:30:58,649
think is underappreciated is that you

634
00:30:56,200 --> 00:31:00,480
can encrypt the manifest using different

635
00:30:58,650 --> 00:31:02,490
he's from the ones that are used to

636
00:31:00,480 --> 00:31:05,100
encrypt the data and the reason why this

637
00:31:02,490 --> 00:31:08,310
is useful is that mana you may want

638
00:31:05,100 --> 00:31:10,409
third parties and intermediaries to

639
00:31:08,310 --> 00:31:12,240
actually be able to interpret a manifest

640
00:31:10,410 --> 00:31:14,400
to do various types of optimizations

641
00:31:12,240 --> 00:31:17,240
without actually giving them the data

642
00:31:14,400 --> 00:31:22,140
encryption keys for the underlying data

643
00:31:17,240 --> 00:31:24,600
so what has changed quite a bit actually

644
00:31:22,140 --> 00:31:26,580
since we've learned a lot since in the

645
00:31:24,600 --> 00:31:29,010
last year and a half since since the

646
00:31:26,580 --> 00:31:31,050
work went idle so the first thing we did

647
00:31:29,010 --> 00:31:33,930
is we added this concept of namespaces

648
00:31:31,050 --> 00:31:36,659
so that you could really describe how

649
00:31:33,930 --> 00:31:41,910
the naming conventions for sub manifests

650
00:31:36,660 --> 00:31:43,350
and data objects work right and the

651
00:31:41,910 --> 00:31:45,090
prior one just sort of assumed

652
00:31:43,350 --> 00:31:47,490
everything was a nameless object you

653
00:31:45,090 --> 00:31:50,629
couldn't have a manifest pointing to a

654
00:31:47,490 --> 00:31:53,190
list of entries each of which had a name

655
00:31:50,630 --> 00:31:56,490
right so we've defined the three

656
00:31:53,190 --> 00:31:59,100
namespaces name space opera nameless

657
00:31:56,490 --> 00:32:02,520
operation which is 2.2 Hache objects a

658
00:31:59,100 --> 00:32:05,159
single prefix which says that everything

659
00:32:02,520 --> 00:32:08,730
under the name of the manifest is a

660
00:32:05,160 --> 00:32:12,240
lower level on next level hierarchical

661
00:32:08,730 --> 00:32:14,910
name component or segmented prefix where

662
00:32:12,240 --> 00:32:17,160
every name is unique so you can do all

663
00:32:14,910 --> 00:32:18,690
three of those things obviously the

664
00:32:17,160 --> 00:32:20,250
first is the most efficient since the

665
00:32:18,690 --> 00:32:22,680
stores the least amount of data in the

666
00:32:20,250 --> 00:32:24,150
manifest the next one is sort of

667
00:32:22,680 --> 00:32:26,250
intermediary where you're sharing the

668
00:32:24,150 --> 00:32:28,290
prefix among the other objects and the

669
00:32:26,250 --> 00:32:30,090
last one is you know if neither of those

670
00:32:28,290 --> 00:32:31,770
things holds you can still construct the

671
00:32:30,090 --> 00:32:34,350
manifest for a random collection of

672
00:32:31,770 --> 00:32:36,690
objects so each hash for group when the

673
00:32:34,350 --> 00:32:39,330
manifest can use its own namespace so

674
00:32:36,690 --> 00:32:41,280
the application and manifest namespaces

675
00:32:39,330 --> 00:32:44,040
for where you're pointing the things can

676
00:32:41,280 --> 00:32:47,100
be different from each other the second

677
00:32:44,040 --> 00:32:49,050
thing that's changed is we how can I put

678
00:32:47,100 --> 00:32:50,850
this this sounds really different it's

679
00:32:49,050 --> 00:32:52,200
really not all that different but there

680
00:32:50,850 --> 00:32:54,570
have been some changes to the encryption

681
00:32:52,200 --> 00:32:55,760
scheme I think these are all pretty much

682
00:32:54,570 --> 00:32:59,550
for the better

683
00:32:55,760 --> 00:33:01,590
there's no before the encryption scheme

684
00:32:59,550 --> 00:33:03,990
had something's not covered by the

685
00:33:01,590 --> 00:33:07,199
encryption and hence various pieces of

686
00:33:03,990 --> 00:33:10,290
metadata would leak so we've redone the

687
00:33:07,200 --> 00:33:12,720
the syntax of the manifest such that no

688
00:33:10,290 --> 00:33:14,309
information leaks are

689
00:33:12,720 --> 00:33:17,549
since it's all encrypted under the key

690
00:33:14,309 --> 00:33:19,110
that encrypts the manifest and it was

691
00:33:17,549 --> 00:33:21,080
done in such a way that you didn't have

692
00:33:19,110 --> 00:33:23,459
to do data copies you can do in-place

693
00:33:21,080 --> 00:33:26,399
encrypt decrypt of the data structures

694
00:33:23,460 --> 00:33:27,990
in the manifest we removed one piece of

695
00:33:26,400 --> 00:33:29,220
flexibility we had which is in the

696
00:33:27,990 --> 00:33:33,240
original one you could have different

697
00:33:29,220 --> 00:33:36,659
encryption keys in different hash groups

698
00:33:33,240 --> 00:33:39,030
of the manifest we decided that was

699
00:33:36,659 --> 00:33:41,070
unnecessary complexity got rid of it if

700
00:33:39,030 --> 00:33:42,480
anybody is using that we'd like to know

701
00:33:41,070 --> 00:33:44,340
because we're gonna take something away

702
00:33:42,480 --> 00:33:45,870
from you and now there's only one

703
00:33:44,340 --> 00:33:50,129
encryption key for the for an entire

704
00:33:45,870 --> 00:33:52,168
manifest our manifest tree we specified

705
00:33:50,130 --> 00:33:55,200
in detail how you do pre shared key

706
00:33:52,169 --> 00:33:57,659
encryption and group key encryption for

707
00:33:55,200 --> 00:33:59,429
the manifests group key encryption is

708
00:33:57,659 --> 00:34:01,590
probably the most useful for a data

709
00:33:59,429 --> 00:34:03,900
structure like this in terms of

710
00:34:01,590 --> 00:34:05,879
processing the keys and the actual

711
00:34:03,900 --> 00:34:09,389
encrypt decrypt that turns out that they

712
00:34:05,880 --> 00:34:12,300
devolve to the same underlying code that

713
00:34:09,389 --> 00:34:14,700
you need to make it work and we added

714
00:34:12,300 --> 00:34:16,379
extensibility mechanisms so both the

715
00:34:14,699 --> 00:34:18,540
encryption mechanism and the key

716
00:34:16,379 --> 00:34:21,418
location mechanism for getting the keys

717
00:34:18,540 --> 00:34:24,060
to decrypt the manifests are extensible

718
00:34:21,418 --> 00:34:26,009
so we can add new key location

719
00:34:24,060 --> 00:34:29,190
capabilities we can add new encryption

720
00:34:26,010 --> 00:34:33,450
schemes second thing that's changed is

721
00:34:29,190 --> 00:34:35,220
we've enhanced the metadata so the

722
00:34:33,449 --> 00:34:37,230
manifest metadata is sort of completely

723
00:34:35,219 --> 00:34:39,480
refactored it's in different places in

724
00:34:37,230 --> 00:34:42,179
the in physically in the data structure

725
00:34:39,480 --> 00:34:46,080
than it was before allowing both direct

726
00:34:42,179 --> 00:34:48,690
and indirect subtree hashes and now the

727
00:34:46,080 --> 00:34:50,668
the way manifest metadata is handled is

728
00:34:48,690 --> 00:34:52,679
exactly the same between the node level

729
00:34:50,668 --> 00:34:55,080
which is for the whole manifest and the

730
00:34:52,679 --> 00:34:57,900
hash group level which is for subsets of

731
00:34:55,080 --> 00:35:00,359
that we added a general extensibility

732
00:34:57,900 --> 00:35:02,910
message mechanism so if there's any

733
00:35:00,359 --> 00:35:05,130
manifest level mech and metadata you'd

734
00:35:02,910 --> 00:35:08,520
like to add to something hints about

735
00:35:05,130 --> 00:35:13,609
video coding if it's for video objects

736
00:35:08,520 --> 00:35:16,020
or hints about time series semantics of

737
00:35:13,609 --> 00:35:18,390
sensor data ratings something that's

738
00:35:16,020 --> 00:35:20,400
application specific you can put stuff

739
00:35:18,390 --> 00:35:22,950
in the manifest rather than having to go

740
00:35:20,400 --> 00:35:25,380
out and actually fetch data objects for

741
00:35:22,950 --> 00:35:26,580
the application in order to discover

742
00:35:25,380 --> 00:35:29,890
those sorts of things

743
00:35:26,580 --> 00:35:33,700
we also add a metadata on the pointers

744
00:35:29,890 --> 00:35:35,620
in the hash groups so now you can have

745
00:35:33,700 --> 00:35:37,839
annotated pointers as well as plain

746
00:35:35,620 --> 00:35:39,850
pointers and the annotated pointers

747
00:35:37,840 --> 00:35:42,520
allow metadata and extensions on every

748
00:35:39,850 --> 00:35:44,560
pointer so a good example here which

749
00:35:42,520 --> 00:35:46,810
reflects back on my previous talk is

750
00:35:44,560 --> 00:35:49,600
that you can put size information on

751
00:35:46,810 --> 00:35:51,370
every pointer so that just by parsing

752
00:35:49,600 --> 00:35:53,080
the manifest you know what to put in for

753
00:35:51,370 --> 00:35:54,790
example one of these expected data size

754
00:35:53,080 --> 00:35:57,700
things when you go to fetch something

755
00:35:54,790 --> 00:36:00,970
you can also use this nicely if it's a

756
00:35:57,700 --> 00:36:02,799
linear data object like a large file you

757
00:36:00,970 --> 00:36:04,120
can use this for seeking because once

758
00:36:02,800 --> 00:36:05,950
you have the manifest you know the

759
00:36:04,120 --> 00:36:08,740
length of everything and you know where

760
00:36:05,950 --> 00:36:12,490
to go to get a particular byte in a

761
00:36:08,740 --> 00:36:15,490
linear data structure you can also do

762
00:36:12,490 --> 00:36:18,009
hints for traversal order if you have a

763
00:36:15,490 --> 00:36:20,200
video application where you would like

764
00:36:18,010 --> 00:36:21,520
to fetch things in an order different

765
00:36:20,200 --> 00:36:24,189
from the order in which the encoder

766
00:36:21,520 --> 00:36:27,130
produced them decoding hints and all

767
00:36:24,190 --> 00:36:29,530
sorts of other things so it the only

768
00:36:27,130 --> 00:36:32,380
thing we've added to the actual spec is

769
00:36:29,530 --> 00:36:35,110
the size extension for annotated

770
00:36:32,380 --> 00:36:36,160
pointers but it's extensible you just

771
00:36:35,110 --> 00:36:39,720
register tlvs

772
00:36:36,160 --> 00:36:42,490
so number of miscellaneous changes

773
00:36:39,720 --> 00:36:46,029
locators which are names that are

774
00:36:42,490 --> 00:36:47,680
topologically sensitive we can have

775
00:36:46,030 --> 00:36:50,620
multiple names for the same underlying

776
00:36:47,680 --> 00:36:52,509
data based on a manifest these can now

777
00:36:50,620 --> 00:36:55,480
be an array as opposed to just a single

778
00:36:52,510 --> 00:36:57,340
locator so if for example you have a set

779
00:36:55,480 --> 00:36:59,500
of data that you want to name with a

780
00:36:57,340 --> 00:37:02,980
manifest then you want the names to

781
00:36:59,500 --> 00:37:04,990
allow you to stick producers in in the

782
00:37:02,980 --> 00:37:08,140
infrastructure of multiple service

783
00:37:04,990 --> 00:37:10,779
providers such that the actual names are

784
00:37:08,140 --> 00:37:12,850
routed topologically with the service

785
00:37:10,780 --> 00:37:15,670
provider but still maintain all the

786
00:37:12,850 --> 00:37:17,830
security and keying of the application

787
00:37:15,670 --> 00:37:19,690
you can do that there's a lot more

788
00:37:17,830 --> 00:37:21,069
detail on the draft that's expanded

789
00:37:19,690 --> 00:37:22,600
probably to twice the previous size

790
00:37:21,070 --> 00:37:25,480
there's a lot more explanatory material

791
00:37:22,600 --> 00:37:28,240
and we now have a Python implementation

792
00:37:25,480 --> 00:37:31,690
which is not exactly the whole draft but

793
00:37:28,240 --> 00:37:34,060
pretty close so we we've added to the

794
00:37:31,690 --> 00:37:35,110
implementation enough - for you to start

795
00:37:34,060 --> 00:37:37,000
working with it

796
00:37:35,110 --> 00:37:40,300
there's still a few things to be done

797
00:37:37,000 --> 00:37:42,099
we're not quite ready to last call this

798
00:37:40,300 --> 00:37:44,980
we intend to do some more work between

799
00:37:42,099 --> 00:37:47,589
now and the end of the year to update

800
00:37:44,980 --> 00:37:50,140
the two implementations and get the

801
00:37:47,589 --> 00:37:51,369
python implementation up to date we're

802
00:37:50,140 --> 00:37:55,089
missing an eye on a consideration

803
00:37:51,369 --> 00:37:57,580
section which is just mechanical stuff

804
00:37:55,089 --> 00:37:58,540
that we need to register things and we

805
00:37:57,580 --> 00:38:00,310
don't really have a security

806
00:37:58,540 --> 00:38:02,470
consideration section which is in fact

807
00:38:00,310 --> 00:38:05,080
the big problem and that is sort of like

808
00:38:02,470 --> 00:38:06,009
needs to get get written so we're done

809
00:38:05,080 --> 00:38:09,670
thank you

810
00:38:06,010 --> 00:38:14,109
cool thank you our students questions

811
00:38:09,670 --> 00:38:16,480
questions so look at this it's really

812
00:38:14,109 --> 00:38:21,279
important actually don't want to build

813
00:38:16,480 --> 00:38:23,560
applications for these things right so

814
00:38:21,280 --> 00:38:26,290
yes as Dave mentioned this is really a

815
00:38:23,560 --> 00:38:29,109
critical piece of work and so we'd like

816
00:38:26,290 --> 00:38:32,440
to publish it as one of our

817
00:38:29,109 --> 00:38:35,830
specifications next year if you like if

818
00:38:32,440 --> 00:38:38,050
you thought this was a good thing we did

819
00:38:35,830 --> 00:38:40,540
send a thank-you note to mark Moscow

820
00:38:38,050 --> 00:38:48,339
because this is not his day job yeah

821
00:38:40,540 --> 00:38:50,560
right so we as chairs we really like to

822
00:38:48,339 --> 00:38:54,490
encourage people reading this draft and

823
00:38:50,560 --> 00:38:57,640
so if you are working on any ICN

824
00:38:54,490 --> 00:38:59,680
implementation please look at it very

825
00:38:57,640 --> 00:39:03,670
carefully would be great if you could

826
00:38:59,680 --> 00:39:06,879
even consider implementing it so again

827
00:39:03,670 --> 00:39:10,390
it's it's a key piece of technology it

828
00:39:06,880 --> 00:39:14,080
it can do much more than you know just

829
00:39:10,390 --> 00:39:16,868
enabling the use of collections it's all

830
00:39:14,080 --> 00:39:19,480
cut out to be a your tool of supporting

831
00:39:16,869 --> 00:39:22,480
a better cooperation between notes and

832
00:39:19,480 --> 00:39:25,869
the networks as they've pointed out so

833
00:39:22,480 --> 00:39:30,250
it's would be good to have more people

834
00:39:25,869 --> 00:39:32,619
looking at this okay thank you so next

835
00:39:30,250 --> 00:39:38,980
is Zhang Hao giving us an update about

836
00:39:32,619 --> 00:39:40,680
the name dilution work the second from

837
00:39:38,980 --> 00:39:44,390
the left

838
00:39:40,680 --> 00:39:44,390
it's the right

839
00:39:48,140 --> 00:39:51,890
[Music]

840
00:40:00,840 --> 00:40:03,949
[Music]

841
00:40:11,370 --> 00:40:17,609
please stop your video streaming right

842
00:40:13,510 --> 00:40:17,610
now we need the bed with four slides

843
00:40:27,870 --> 00:40:31,049
sorry about that

844
00:40:34,590 --> 00:40:39,690
they stood some progress and I think I

845
00:40:42,240 --> 00:40:46,709
had this before we like this morning

846
00:40:44,290 --> 00:40:46,710
science

847
00:40:57,290 --> 00:41:08,370
hmm I'm sure not it may be real open one

848
00:41:08,000 --> 00:41:11,540
more time

849
00:41:08,370 --> 00:41:11,540
[Music]

850
00:41:23,830 --> 00:41:35,569
that's best maybe the best way know what

851
00:41:32,990 --> 00:41:40,189
the clicker work we move the clicker to

852
00:41:35,570 --> 00:41:50,440
your machine as well but the network is

853
00:41:40,190 --> 00:41:53,750
finance must be the other trouble okay

854
00:41:50,440 --> 00:41:57,890
this is for update on a nurse document

855
00:41:53,750 --> 00:42:00,770
I'm Jonah from a tree we have a to talk

856
00:41:57,890 --> 00:42:04,069
mint on NRS one is the design guidelines

857
00:42:00,770 --> 00:42:07,700
from NRS in ICN and the other is the

858
00:42:04,070 --> 00:42:10,790
architecture considerations of ICN using

859
00:42:07,700 --> 00:42:13,339
an RS and the first one has been the

860
00:42:10,790 --> 00:42:15,470
title of the first one has been changed

861
00:42:13,340 --> 00:42:17,780
it from the requirement to the design

862
00:42:15,470 --> 00:42:19,700
guidelines we haven't discussed the

863
00:42:17,780 --> 00:42:23,210
according to the requirements for a long

864
00:42:19,700 --> 00:42:25,850
time but last among it last meeting in

865
00:42:23,210 --> 00:42:31,910
Montreal we have updated and changed it

866
00:42:25,850 --> 00:42:35,029
a title to the design guidelines and we

867
00:42:31,910 --> 00:42:38,540
asked for the RG last comfort post

868
00:42:35,030 --> 00:42:41,810
document in Montreux and we have we got

869
00:42:38,540 --> 00:42:46,700
some comments through in in the mailing

870
00:42:41,810 --> 00:42:48,920
list and I just copied the Davis comment

871
00:42:46,700 --> 00:42:51,290
for the two documents and the person on

872
00:42:48,920 --> 00:42:54,230
the design guidelines the technical

873
00:42:51,290 --> 00:42:57,800
comments may require a second last call

874
00:42:54,230 --> 00:43:00,830
but the other architecture consideration

875
00:42:57,800 --> 00:43:04,580
documents there are some technical and

876
00:43:00,830 --> 00:43:07,000
editorial comments but those are those

877
00:43:04,580 --> 00:43:11,090
can be dissolved without without

878
00:43:07,000 --> 00:43:15,110
requiring a second call

879
00:43:11,090 --> 00:43:18,710
and these are a scoffer bulls document

880
00:43:15,110 --> 00:43:22,130
the first one design guidelines focuses

881
00:43:18,710 --> 00:43:26,780
on the NRS itself as a service or as a

882
00:43:22,130 --> 00:43:29,780
system in ICN and it provides the LRS

883
00:43:26,780 --> 00:43:32,210
overview and LS functionalities and

884
00:43:29,780 --> 00:43:35,090
anesthesia guidelines as well and

885
00:43:32,210 --> 00:43:35,720
security considerations and the other

886
00:43:35,090 --> 00:43:38,660
one

887
00:43:35,720 --> 00:43:42,140
architectural considerations focus on

888
00:43:38,660 --> 00:43:44,899
things related to the ICL architecture

889
00:43:42,140 --> 00:43:47,390
so it describes a how I see an

890
00:43:44,900 --> 00:43:50,480
architectural change and what

891
00:43:47,390 --> 00:43:53,259
implications are introduced within the

892
00:43:50,480 --> 00:43:57,590
ICN routing system when NRS is

893
00:43:53,260 --> 00:43:59,810
integrated into ICN so when you look for

894
00:43:57,590 --> 00:44:02,960
the and iris example you have to see the

895
00:43:59,810 --> 00:44:06,200
first strap and but when the second one

896
00:44:02,960 --> 00:44:08,720
is a related ICM but is focused on the

897
00:44:06,200 --> 00:44:11,240
ICN architecture not the eyes and iris

898
00:44:08,720 --> 00:44:14,560
itself so these are the difference of

899
00:44:11,240 --> 00:44:18,129
the two document and we added what we

900
00:44:14,560 --> 00:44:21,290
added in the introduction across

901
00:44:18,130 --> 00:44:28,570
explanation of the two documents which

902
00:44:21,290 --> 00:44:33,620
was the comments from day and for the

903
00:44:28,570 --> 00:44:38,200
design guidelines document we tried to

904
00:44:33,620 --> 00:44:41,450
adjust all the comments from tables and

905
00:44:38,200 --> 00:44:45,589
I'm very sorry that I haven't send out

906
00:44:41,450 --> 00:44:48,500
the how we address how how we address

907
00:44:45,590 --> 00:44:51,320
the comments by the mailing list but I

908
00:44:48,500 --> 00:44:53,630
explained me a little bit for now and

909
00:44:51,320 --> 00:44:56,720
then I try to send that out as soon as

910
00:44:53,630 --> 00:45:02,210
possible during thirty's ITF meeting so

911
00:44:56,720 --> 00:45:04,370
please look please take have an

912
00:45:02,210 --> 00:45:09,440
intention on the mailing list and give

913
00:45:04,370 --> 00:45:11,810
us a good comments as well and we mostly

914
00:45:09,440 --> 00:45:16,360
accepted and agree with our Tabas

915
00:45:11,810 --> 00:45:21,950
comment but discovered content discovery

916
00:45:16,360 --> 00:45:24,200
technologies we he did suggested change

917
00:45:21,950 --> 00:45:27,558
it to the information

918
00:45:24,200 --> 00:45:30,770
or a Content request but we change it to

919
00:45:27,559 --> 00:45:34,460
her 2d content to recast the routing the

920
00:45:30,770 --> 00:45:37,009
reason they actually the the part that

921
00:45:34,460 --> 00:45:40,970
content is covering written was we

922
00:45:37,010 --> 00:45:44,119
explained how I share Aurora step work

923
00:45:40,970 --> 00:45:47,689
actually it was quoted from the ICN

924
00:45:44,119 --> 00:45:51,559
research challenge ERF sees in there

925
00:45:47,690 --> 00:45:53,780
what is en robin step is one is a lame

926
00:45:51,559 --> 00:45:57,049
the first is named as a motion and

927
00:45:53,780 --> 00:46:00,710
second is the discovery and third is the

928
00:45:57,049 --> 00:46:03,890
delivery but we instead we just copied

929
00:46:00,710 --> 00:46:06,049
that those tong so we put the contents

930
00:46:03,890 --> 00:46:09,200
in front of the discovery and the

931
00:46:06,049 --> 00:46:11,839
delivery but in a I think it made some

932
00:46:09,200 --> 00:46:15,230
confusion on the using that along leads

933
00:46:11,839 --> 00:46:18,558
of the discovery so our intention was

934
00:46:15,230 --> 00:46:21,680
the content to recast the Rory so we

935
00:46:18,559 --> 00:46:24,079
changed it and there are some few part

936
00:46:21,680 --> 00:46:27,290
that we use the content discovery

937
00:46:24,079 --> 00:46:30,500
originally we try to change it all but

938
00:46:27,290 --> 00:46:34,190
we miss the two part so we fix them in

939
00:46:30,500 --> 00:46:39,109
the next revision and similar comment

940
00:46:34,190 --> 00:46:43,010
from the mark he what his comment was it

941
00:46:39,109 --> 00:46:47,380
would be good to clarify discovered turn

942
00:46:43,010 --> 00:46:51,380
in this document but and he also

943
00:46:47,380 --> 00:46:53,470
mentioned the there are two discovery

944
00:46:51,380 --> 00:46:55,760
which is in the one is lammle they

945
00:46:53,470 --> 00:46:59,270
discovery and the other is content

946
00:46:55,760 --> 00:47:02,329
discovery but we consider both because

947
00:46:59,270 --> 00:47:05,270
this in this document we try to consider

948
00:47:02,329 --> 00:47:09,410
any type of NRS to show the possible

949
00:47:05,270 --> 00:47:11,809
functionality of the NRS and but the

950
00:47:09,410 --> 00:47:15,649
discovery party is not the main issue of

951
00:47:11,809 --> 00:47:19,430
this document as well so we deliver the

952
00:47:15,650 --> 00:47:23,960
the Tom and also this discover each

953
00:47:19,430 --> 00:47:28,190
terminology has not been defined even in

954
00:47:23,960 --> 00:47:31,220
the terminologies document so I wonder

955
00:47:28,190 --> 00:47:35,180
if we if it is a too late to edit the

956
00:47:31,220 --> 00:47:37,850
Tom the discovery Tommy in the term

957
00:47:35,180 --> 00:47:45,140
knowledge or not but we can

958
00:47:37,850 --> 00:47:47,839
about it and third one third person's

959
00:47:45,140 --> 00:47:51,830
comment it would be worthwhile to

960
00:47:47,840 --> 00:47:57,260
include some reference to ongoing 3gpp

961
00:47:51,830 --> 00:48:01,610
work so we stayed in as a short sentence

962
00:47:57,260 --> 00:48:07,460
to reference 3gpp work but I'm not sure

963
00:48:01,610 --> 00:48:10,820
if I added the right reference

964
00:48:07,460 --> 00:48:16,070
he asked for a but I would separate

965
00:48:10,820 --> 00:48:22,670
later and there was a various comments

966
00:48:16,070 --> 00:48:25,880
but we mostly deflected and I answer and

967
00:48:22,670 --> 00:48:29,740
and send out how we addressed it

968
00:48:25,880 --> 00:48:36,530
I send up by email this morning and

969
00:48:29,740 --> 00:48:39,020
there was a poll on scope and II he gave

970
00:48:36,530 --> 00:48:42,200
us a lot of comment which was good but

971
00:48:39,020 --> 00:48:45,740
that was a good discussion for ICM but

972
00:48:42,200 --> 00:48:50,060
it was a little bit out of scope of this

973
00:48:45,740 --> 00:48:56,660
document so we accepted some of his

974
00:48:50,060 --> 00:49:01,549
point but we realized some but also I

975
00:48:56,660 --> 00:49:04,370
said how we addressed and what was the

976
00:49:01,550 --> 00:49:11,020
out of the scope in the pie in the

977
00:49:04,370 --> 00:49:11,020
Melanie's as soon as possible and

978
00:49:11,230 --> 00:49:17,510
architecture considerations documents

979
00:49:14,690 --> 00:49:21,200
there was only Davis comments and we are

980
00:49:17,510 --> 00:49:24,350
deflected and but we couldn't quite

981
00:49:21,200 --> 00:49:27,470
completed all his comment for this

982
00:49:24,350 --> 00:49:30,440
revision so what we trying to do is we

983
00:49:27,470 --> 00:49:36,350
will complete it as soon as possible and

984
00:49:30,440 --> 00:49:41,180
submitted soon again but and for now I

985
00:49:36,350 --> 00:49:45,049
only mentioned but one of his comment on

986
00:49:41,180 --> 00:49:48,470
NRS caches so we assumed and I said

987
00:49:45,050 --> 00:49:51,770
reserver have cache it it was because

988
00:49:48,470 --> 00:49:56,000
Anna's cache it could be helpful for

989
00:49:51,770 --> 00:49:59,930
or such a case of the live streaming

990
00:49:56,000 --> 00:50:02,900
service E and for like a time on

991
00:49:59,930 --> 00:50:06,770
critical service you know you don't have

992
00:50:02,900 --> 00:50:13,070
to do the name that is reserved every

993
00:50:06,770 --> 00:50:18,310
time so for that case we assume the and

994
00:50:13,070 --> 00:50:21,710
as caches but because of that there is a

995
00:50:18,310 --> 00:50:24,080
architectural considerations or cash yes

996
00:50:21,710 --> 00:50:27,380
when you even use the cash there is

997
00:50:24,080 --> 00:50:30,589
always of issues on cash but which is

998
00:50:27,380 --> 00:50:33,770
not really directly related to the

999
00:50:30,589 --> 00:50:36,980
analyst issues so we haven't addressed

1000
00:50:33,770 --> 00:50:40,550
much for this revision but we'll fix

1001
00:50:36,980 --> 00:50:44,810
some part in the next division but since

1002
00:50:40,550 --> 00:50:47,660
the cashing I'm not sure either relate

1003
00:50:44,810 --> 00:50:53,270
to that I see an architecture or the an

1004
00:50:47,660 --> 00:50:56,480
arrest system so we'll look for which

1005
00:50:53,270 --> 00:50:58,820
which trapped could be the better if we

1006
00:50:56,480 --> 00:51:04,670
we mentioned about the inners caches in

1007
00:50:58,820 --> 00:51:06,369
in ditra indeed wrapped thank you okay

1008
00:51:04,670 --> 00:51:15,440
thank you

1009
00:51:06,369 --> 00:51:16,880
any questions Hamish Madhavi I'm Luke I

1010
00:51:15,440 --> 00:51:18,740
have a question regarding prions

1011
00:51:16,880 --> 00:51:22,820
comments if I remember correctly pooyan

1012
00:51:18,740 --> 00:51:25,339
was mentioning the problem of name

1013
00:51:22,820 --> 00:51:27,650
administration and enforcement of the of

1014
00:51:25,339 --> 00:51:32,900
the name distributed name administration

1015
00:51:27,650 --> 00:51:35,720
did you address this names not really

1016
00:51:32,900 --> 00:51:38,930
because the name is namespacing we

1017
00:51:35,720 --> 00:51:45,169
mentioned in the trap but in this trap

1018
00:51:38,930 --> 00:51:48,680
we are not trying to show will discuss

1019
00:51:45,170 --> 00:51:50,900
about the namespace itself well the

1020
00:51:48,680 --> 00:51:52,700
point I mean if you just look at the DNS

1021
00:51:50,900 --> 00:51:55,180
I mean the way the DNS is built at this

1022
00:51:52,700 --> 00:51:57,740
and for it enforces the distributed

1023
00:51:55,180 --> 00:51:59,419
administration of names so you I can't

1024
00:51:57,740 --> 00:52:01,729
just change the name of Google or

1025
00:51:59,420 --> 00:52:04,070
something and that is actually an

1026
00:52:01,730 --> 00:52:05,120
important point here that's why heroes

1027
00:52:04,070 --> 00:52:10,490
it

1028
00:52:05,120 --> 00:52:14,330
yeah well Koreans comments was mostly

1029
00:52:10,490 --> 00:52:21,770
related to do about compared was related

1030
00:52:14,330 --> 00:52:25,130
to the DNS and I think the NRS is a

1031
00:52:21,770 --> 00:52:32,200
similar to the N DNS but is a different

1032
00:52:25,130 --> 00:52:37,010
and maybe I can I can I can make up

1033
00:52:32,200 --> 00:52:46,609
reply for the through the email then you

1034
00:52:37,010 --> 00:52:48,590
keep maybe more comments I stew card my

1035
00:52:46,610 --> 00:52:51,740
question has to do with the earlier

1036
00:52:48,590 --> 00:52:55,190
draft the design guidelines in security

1037
00:52:51,740 --> 00:52:58,100
concession Siri security considerations

1038
00:52:55,190 --> 00:52:59,900
6.1 accessibility second paragraph the

1039
00:52:58,100 --> 00:53:01,610
NRS may support access control for

1040
00:52:59,900 --> 00:53:03,290
certain name records so the only users

1041
00:53:01,610 --> 00:53:07,040
and producers within the proper lists

1042
00:53:03,290 --> 00:53:09,980
can access these records so that assumes

1043
00:53:07,040 --> 00:53:14,120
the traditional access control list

1044
00:53:09,980 --> 00:53:17,660
model of access control and I think name

1045
00:53:14,120 --> 00:53:21,350
resolution naturally Maps better to the

1046
00:53:17,660 --> 00:53:23,569
capability based model of access control

1047
00:53:21,350 --> 00:53:27,620
since essentially these are pointers

1048
00:53:23,570 --> 00:53:30,050
references etc I wondered if you wanted

1049
00:53:27,620 --> 00:53:33,799
to address you know capability based

1050
00:53:30,050 --> 00:53:37,210
access control in addition to ACLs no

1051
00:53:33,800 --> 00:53:37,210
okay thanks

1052
00:53:41,539 --> 00:54:01,279
you want to respond to that well well uh

1053
00:53:56,509 --> 00:54:03,519
we'll consider well your comments thank

1054
00:54:01,279 --> 00:54:03,519
you

1055
00:54:03,999 --> 00:54:12,138
okay good comments thank you so this is

1056
00:54:07,719 --> 00:54:13,729
basically still in last call or I think

1057
00:54:12,139 --> 00:54:20,449
the one ref may be updated right yeah

1058
00:54:13,729 --> 00:54:21,678
okay okay thank you Janna and so next is

1059
00:54:20,449 --> 00:54:24,679
the new speaker

1060
00:54:21,679 --> 00:54:28,880
it's called de Varenne talk about pasta

1061
00:54:24,679 --> 00:54:40,279
me feel like I'm getting unfair

1062
00:54:28,880 --> 00:54:41,599
bandwidth allocation here well what

1063
00:54:40,279 --> 00:54:45,429
we're getting this slides up let me

1064
00:54:41,599 --> 00:54:49,429
preface to talk to say that this is work

1065
00:54:45,429 --> 00:54:55,519
based on a paper that Cinco and I

1066
00:54:49,429 --> 00:54:58,279
published in ICN seventeen that turns

1067
00:54:55,519 --> 00:55:01,158
out perhaps has more than just research

1068
00:54:58,279 --> 00:55:03,799
more more than just a little bit of

1069
00:55:01,159 --> 00:55:06,739
interest in the community so we decided

1070
00:55:03,799 --> 00:55:09,739
that maybe rather than just sort of you

1071
00:55:06,739 --> 00:55:12,679
know go read the paper we would take it

1072
00:55:09,739 --> 00:55:16,009
a step forward and explain a bit about

1073
00:55:12,679 --> 00:55:18,469
how we might want to do this as part of

1074
00:55:16,009 --> 00:55:21,139
the CC NX and Indian Protocol

1075
00:55:18,469 --> 00:55:25,759
architectures and so people could

1076
00:55:21,139 --> 00:55:29,029
actually use this to move forward on on

1077
00:55:25,759 --> 00:55:32,839
application development rather than just

1078
00:55:29,029 --> 00:55:35,449
you know seeing some research results so

1079
00:55:32,839 --> 00:55:39,199
think of this as a proposal to enhance

1080
00:55:35,449 --> 00:55:40,969
the protocols using the work there's for

1081
00:55:39,199 --> 00:55:42,649
those of you who have read the ICN paper

1082
00:55:40,969 --> 00:55:45,829
you can go to sleep because there's

1083
00:55:42,649 --> 00:55:50,808
practically nothing here that isn't in

1084
00:55:45,829 --> 00:55:54,999
the paper the the biggest job was

1085
00:55:50,809 --> 00:55:59,450
converting late ektu XML but you know

1086
00:55:54,999 --> 00:56:02,269
we all know we all know that how're we

1087
00:55:59,450 --> 00:56:19,730
doing here not so good

1088
00:56:02,269 --> 00:56:22,839
oh dear what happened did it wasn't

1089
00:56:19,730 --> 00:56:30,349
working when it was on board EA's laptop

1090
00:56:22,839 --> 00:56:32,808
let's switch back yeah I'll try to do

1091
00:56:30,349 --> 00:56:36,140
this quickly because I want you know I

1092
00:56:32,809 --> 00:56:38,809
want fair time for for other people at

1093
00:56:36,140 --> 00:56:46,519
the meeting there we go

1094
00:56:38,809 --> 00:56:50,839
I just put it in full screen all right

1095
00:56:46,519 --> 00:56:53,029
oh great

1096
00:56:50,839 --> 00:56:54,910
alright so quick outline I'll give you a

1097
00:56:53,029 --> 00:56:57,920
bit of introduction to the background of

1098
00:56:54,910 --> 00:57:00,529
path steering I'll talk about the design

1099
00:56:57,920 --> 00:57:03,109
of this path steering scheme a bit about

1100
00:57:00,529 --> 00:57:04,630
the packet encoding and when you do

1101
00:57:03,109 --> 00:57:07,609
things like this

1102
00:57:04,630 --> 00:57:11,589
you you you may have some additional

1103
00:57:07,609 --> 00:57:14,420
security considerations over pure

1104
00:57:11,589 --> 00:57:17,808
longest name prefix match Spile

1105
00:57:14,420 --> 00:57:21,440
forwarding so so here's the problem

1106
00:57:17,809 --> 00:57:23,749
statement as we know the communications

1107
00:57:21,440 --> 00:57:26,180
capabilities of these ICN protocols are

1108
00:57:23,749 --> 00:57:28,879
both inherently multipath and multi

1109
00:57:26,180 --> 00:57:31,160
destination which says that if you

1110
00:57:28,880 --> 00:57:32,599
launch an interest the forwarders have

1111
00:57:31,160 --> 00:57:34,279
the capability of spraying those

1112
00:57:32,599 --> 00:57:36,230
interests over multiple paths and

1113
00:57:34,279 --> 00:57:39,230
reaching multiple destinations that

1114
00:57:36,230 --> 00:57:41,239
match the name of the object of data

1115
00:57:39,230 --> 00:57:45,259
that you want to return however we have

1116
00:57:41,239 --> 00:57:48,200
no mechanism for consumers to affect the

1117
00:57:45,259 --> 00:57:50,720
selection of which path among the

1118
00:57:48,200 --> 00:57:53,779
feasible paths gets used for any given

1119
00:57:50,720 --> 00:57:55,339
interest data exchange so the forwarders

1120
00:57:53,779 --> 00:57:59,059
can spray the packets on the various

1121
00:57:55,339 --> 00:58:00,680
paths and um when failures occur it's

1122
00:57:59,059 --> 00:58:02,779
kind of hard for the consumers to

1123
00:58:00,680 --> 00:58:04,009
actually figure out what's going on they

1124
00:58:02,779 --> 00:58:06,559
may be getting performance glitches

1125
00:58:04,009 --> 00:58:07,520
because if the if the packet goes over

1126
00:58:06,559 --> 00:58:09,290
one path that hits

1127
00:58:07,520 --> 00:58:11,290
failure of some sort if it happens to be

1128
00:58:09,290 --> 00:58:13,520
selected for another path that doesn't

1129
00:58:11,290 --> 00:58:15,560
you you have a very difficult time

1130
00:58:13,520 --> 00:58:18,080
figuring out why your performance is

1131
00:58:15,560 --> 00:58:21,380
what your performance is so some of the

1132
00:58:18,080 --> 00:58:23,150
motivations for employing the ability

1133
00:58:21,380 --> 00:58:26,240
for consumers to steer packets on the

1134
00:58:23,150 --> 00:58:28,090
path is to monitor and troubleshoot all

1135
00:58:26,240 --> 00:58:30,500
these multipath network connectivity

1136
00:58:28,090 --> 00:58:33,140
problems all right which don't exist so

1137
00:58:30,500 --> 00:58:38,000
much in IP because IP basically only

1138
00:58:33,140 --> 00:58:40,100
supports ecmp and not general multipath

1139
00:58:38,000 --> 00:58:42,260
and also doesn't support multi

1140
00:58:40,100 --> 00:58:46,220
destinations since the address is

1141
00:58:42,260 --> 00:58:48,410
expressed are either unicast or anycast

1142
00:58:46,220 --> 00:58:51,379
addresses and multicast an IP is a whole

1143
00:58:48,410 --> 00:58:53,089
different kettle of fish so you'd like

1144
00:58:51,380 --> 00:58:54,800
to be able to do that and have tools

1145
00:58:53,090 --> 00:58:57,950
like the equivalent of ping and

1146
00:58:54,800 --> 00:59:01,430
traceroute in IP in order to diagnose

1147
00:58:57,950 --> 00:59:03,950
problems um secondly in order to measure

1148
00:59:01,430 --> 00:59:06,410
the performance of a path you need to be

1149
00:59:03,950 --> 00:59:09,710
able to send multiple probe packets down

1150
00:59:06,410 --> 00:59:11,420
that path to figure out what the

1151
00:59:09,710 --> 00:59:13,280
properties of that path are from a

1152
00:59:11,420 --> 00:59:15,500
performance standpoint and if you can't

1153
00:59:13,280 --> 00:59:18,650
control whether a given interest message

1154
00:59:15,500 --> 00:59:21,860
gets allocated onto a particular path

1155
00:59:18,650 --> 00:59:23,930
you have no way to do any kind of fine

1156
00:59:21,860 --> 00:59:27,320
grained performance measurement of your

1157
00:59:23,930 --> 00:59:29,629
pads my particular interest in getting

1158
00:59:27,320 --> 00:59:32,690
into this work was because of the work I

1159
00:59:29,630 --> 00:59:36,020
did over a few years on multipath

1160
00:59:32,690 --> 00:59:38,030
congestion control because some of the

1161
00:59:36,020 --> 00:59:40,460
more sophisticated multipath congestion

1162
00:59:38,030 --> 00:59:43,550
control algorithms actually require you

1163
00:59:40,460 --> 00:59:45,950
as a consumer to count the number of

1164
00:59:43,550 --> 00:59:48,560
available paths uniquely identify those

1165
00:59:45,950 --> 00:59:49,850
paths and allocate traffic according to

1166
00:59:48,560 --> 00:59:53,180
the capacity of those paths

1167
00:59:49,850 --> 00:59:54,740
proportionally so there's a number if

1168
00:59:53,180 --> 00:59:56,779
you look in the draft you'll see a bunch

1169
00:59:54,740 --> 00:59:59,450
of references for a variety of multipath

1170
00:59:56,780 --> 01:00:01,100
congestion control schemes that depend

1171
00:59:59,450 --> 01:00:03,859
on the ability to steer packets on the

1172
01:00:01,100 --> 01:00:05,330
paths and then there's interesting

1173
01:00:03,860 --> 01:00:07,760
traffic engineering and Sdn

1174
01:00:05,330 --> 01:00:10,970
possibilities here if pads can be

1175
01:00:07,760 --> 01:00:14,510
pre-loaded for traffic engineering

1176
01:00:10,970 --> 01:00:16,700
purposes into forwarders via a third

1177
01:00:14,510 --> 01:00:19,420
party that has done measurements or or

1178
01:00:16,700 --> 01:00:21,180
other types of or other types of

1179
01:00:19,420 --> 01:00:24,150
exploration

1180
01:00:21,180 --> 01:00:25,558
so here's the design the first question

1181
01:00:24,150 --> 01:00:30,240
you have to ask is how do you label the

1182
01:00:25,559 --> 01:00:32,130
pads and from our point of view on the

1183
01:00:30,240 --> 01:00:35,069
mental model you might want to have

1184
01:00:32,130 --> 01:00:40,380
which is a little dangerous um is

1185
01:00:35,069 --> 01:00:44,849
something like source routes or MPLS

1186
01:00:40,380 --> 01:00:47,700
LSPs or segment routing enumerations

1187
01:00:44,849 --> 01:00:49,470
it's not exactly the same so be cautious

1188
01:00:47,700 --> 01:00:51,990
but at a high level

1189
01:00:49,470 --> 01:00:54,089
we're basically constructing a data

1190
01:00:51,990 --> 01:00:57,089
structure that contains information

1191
01:00:54,089 --> 01:00:59,819
about every hop on a particular path so

1192
01:00:57,089 --> 01:01:01,799
in the paper we publish we examined a

1193
01:00:59,819 --> 01:01:04,259
number of possible ways to encode this

1194
01:01:01,800 --> 01:01:06,660
information including bloom filters and

1195
01:01:04,260 --> 01:01:09,569
this very clever thing called canter

1196
01:01:06,660 --> 01:01:11,368
pairing functions which go back to go

1197
01:01:09,569 --> 01:01:13,290
back to your CS days and look at them

1198
01:01:11,369 --> 01:01:16,740
they're very cool they wound up only

1199
01:01:13,290 --> 01:01:19,170
working for short pads for us but very

1200
01:01:16,740 --> 01:01:22,740
cool data structure a label stack

1201
01:01:19,170 --> 01:01:24,960
similar to MPLS but we chose instead to

1202
01:01:22,740 --> 01:01:27,180
use fixed size labels in a polynomial

1203
01:01:24,960 --> 01:01:29,099
style encoding for what we propose to

1204
01:01:27,180 --> 01:01:31,500
put in the protocol it seems that the

1205
01:01:29,099 --> 01:01:35,700
best trade-offs in terms of flexibility

1206
01:01:31,500 --> 01:01:37,349
size and processing overhead so the way

1207
01:01:35,700 --> 01:01:39,390
it works is pretty straightforward and

1208
01:01:37,349 --> 01:01:41,430
interest contains a path level marked is

1209
01:01:39,390 --> 01:01:43,470
something called discovery mode and is

1210
01:01:41,430 --> 01:01:48,410
forward forwarded normally through the

1211
01:01:43,470 --> 01:01:48,410
longest name prefix match in the FIB

1212
01:01:48,470 --> 01:01:53,339
when a data when a content message is

1213
01:01:51,119 --> 01:01:55,440
data message comes back it carries the

1214
01:01:53,339 --> 01:01:58,650
path label which has been modified on

1215
01:01:55,440 --> 01:02:03,809
every hop to add information and what is

1216
01:01:58,650 --> 01:02:07,380
the information that's added its whoops

1217
01:02:03,809 --> 01:02:11,339
the information is a next hop label for

1218
01:02:07,380 --> 01:02:15,089
every next hop that a future interest

1219
01:02:11,339 --> 01:02:17,069
would would do so then once you get back

1220
01:02:15,089 --> 01:02:19,680
this data structure in a in the path

1221
01:02:17,069 --> 01:02:22,200
label in the data message you can insert

1222
01:02:19,680 --> 01:02:24,960
that into a future interest message and

1223
01:02:22,200 --> 01:02:26,578
that interest message will be routed

1224
01:02:24,960 --> 01:02:29,250
over the path that was previously

1225
01:02:26,579 --> 01:02:32,069
discovered so you do a longest prefix

1226
01:02:29,250 --> 01:02:34,890
match within that fib entry there'll be

1227
01:02:32,069 --> 01:02:37,620
this matching of the next hop

1228
01:02:34,890 --> 01:02:39,960
code point and that will cause the

1229
01:02:37,620 --> 01:02:44,100
selection of the of the outbound face

1230
01:02:39,960 --> 01:02:45,860
under that fib entry to be selected for

1231
01:02:44,100 --> 01:02:49,230
that for that data back for that

1232
01:02:45,860 --> 01:02:52,260
subsequent interest packet so it's

1233
01:02:49,230 --> 01:02:54,630
relatively straightforward some obvious

1234
01:02:52,260 --> 01:02:56,760
advantage of this an ICN ping

1235
01:02:54,630 --> 01:03:00,270
application can reliably measure the

1236
01:02:56,760 --> 01:03:01,920
path RTT by sending multiple interests

1237
01:03:00,270 --> 01:03:03,720
over the same path and then met you can

1238
01:03:01,920 --> 01:03:06,510
measure the path a traceroute

1239
01:03:03,720 --> 01:03:09,089
application can iteratively discover

1240
01:03:06,510 --> 01:03:10,800
multiple network paths now one thing

1241
01:03:09,090 --> 01:03:13,460
I'll bring up really briefly here is

1242
01:03:10,800 --> 01:03:17,570
there's partial overlap here with the

1243
01:03:13,460 --> 01:03:20,850
existing work in ic NRG on on CCN info

1244
01:03:17,570 --> 01:03:22,890
which has a separate forwarding strategy

1245
01:03:20,850 --> 01:03:25,860
for doing path exploration and

1246
01:03:22,890 --> 01:03:28,560
discovering all the possible paths that

1247
01:03:25,860 --> 01:03:31,680
the various fibs contain returning those

1248
01:03:28,560 --> 01:03:33,270
and then being able to diagnose that's

1249
01:03:31,680 --> 01:03:35,730
clearly more powerful it's higher

1250
01:03:33,270 --> 01:03:38,460
potentially higher overhead has some

1251
01:03:35,730 --> 01:03:40,500
other different characteristics so we're

1252
01:03:38,460 --> 01:03:44,040
not necessarily proposing that this is

1253
01:03:40,500 --> 01:03:46,860
an alternative to CC n info it's an

1254
01:03:44,040 --> 01:03:49,259
another tool in the bag of tricks okay

1255
01:03:46,860 --> 01:03:50,880
so the consumer multipath congestion

1256
01:03:49,260 --> 01:03:54,780
control algorithms can discover and

1257
01:03:50,880 --> 01:03:57,000
distribute load across the pads and as a

1258
01:03:54,780 --> 01:03:58,800
sort of side benefit if you suspect

1259
01:03:57,000 --> 01:04:01,200
you're getting a content poisoning

1260
01:03:58,800 --> 01:04:03,960
attack because of the way the particular

1261
01:04:01,200 --> 01:04:06,839
path that was selected by the forwarders

1262
01:04:03,960 --> 01:04:08,820
passes through a poisoned cache you can

1263
01:04:06,840 --> 01:04:11,790
select a different path with routes

1264
01:04:08,820 --> 01:04:13,980
around potentially poison caches and

1265
01:04:11,790 --> 01:04:16,320
then a brief mention you can do traffic

1266
01:04:13,980 --> 01:04:19,500
engineering solutions if you happen to

1267
01:04:16,320 --> 01:04:21,420
believe the Sdn religion for pushing

1268
01:04:19,500 --> 01:04:24,900
everything into routers via third

1269
01:04:21,420 --> 01:04:27,420
parties so what are the complications

1270
01:04:24,900 --> 01:04:30,480
here well the clear complication is how

1271
01:04:27,420 --> 01:04:31,770
do you invalidate paths if the routes

1272
01:04:30,480 --> 01:04:34,710
are changing right

1273
01:04:31,770 --> 01:04:37,500
so with path steering you still use the

1274
01:04:34,710 --> 01:04:39,120
prefix match to find the set of next

1275
01:04:37,500 --> 01:04:41,520
hops for which the path next hop is

1276
01:04:39,120 --> 01:04:44,640
chosen so the only time you need to

1277
01:04:41,520 --> 01:04:47,730
invalidate a path is when you go look up

1278
01:04:44,640 --> 01:04:48,660
the next hop in the fib entry for that

1279
01:04:47,730 --> 01:04:51,839
for the

1280
01:04:48,660 --> 01:04:54,750
forwarder and the next hop label that

1281
01:04:51,839 --> 01:04:58,140
you had there is no longer there right

1282
01:04:54,750 --> 01:05:00,750
so if next top selection fails we have a

1283
01:04:58,140 --> 01:05:01,440
way of returning an error that says you

1284
01:05:00,750 --> 01:05:04,530
know oops

1285
01:05:01,440 --> 01:05:07,319
invalid path label return that to the to

1286
01:05:04,530 --> 01:05:09,510
the consumer he can invalidate that path

1287
01:05:07,319 --> 01:05:12,660
this potentially just try other paths or

1288
01:05:09,510 --> 01:05:14,609
discover other paths there's an option

1289
01:05:12,660 --> 01:05:16,950
you can either reject it or silently

1290
01:05:14,609 --> 01:05:19,348
forward in case the user doesn't really

1291
01:05:16,950 --> 01:05:21,419
care and you can control this behavior

1292
01:05:19,349 --> 01:05:24,809
through some options that we provide in

1293
01:05:21,420 --> 01:05:26,849
the path label data structure so the

1294
01:05:24,809 --> 01:05:29,730
next top labels are assigned every time

1295
01:05:26,849 --> 01:05:32,780
a fib entry changes and on the reverse

1296
01:05:29,730 --> 01:05:35,910
path the data or the nack is dropped if

1297
01:05:32,780 --> 01:05:38,670
you're returning an entry returning data

1298
01:05:35,910 --> 01:05:41,098
for a path that is no longer valid okay

1299
01:05:38,670 --> 01:05:46,190
and the forward path the interest is

1300
01:05:41,099 --> 01:05:49,920
intact so the packet encoding is a very

1301
01:05:46,190 --> 01:05:53,010
careful trade-off between how big this

1302
01:05:49,920 --> 01:05:56,400
has to be to handle longish pads more

1303
01:05:53,010 --> 01:05:58,109
than a few hops and how much compute you

1304
01:05:56,400 --> 01:06:02,569
need to do to actually select a

1305
01:05:58,109 --> 01:06:06,089
particular path in terms of

1306
01:06:02,569 --> 01:06:08,160
computational overhead so we add a new

1307
01:06:06,089 --> 01:06:11,970
hop by hop header which is the path

1308
01:06:08,160 --> 01:06:15,899
label and the individual next hops are

1309
01:06:11,970 --> 01:06:19,770
is is constructed as a bitmap and that

1310
01:06:15,900 --> 01:06:22,309
are actually 12 bit chunks here's a

1311
01:06:19,770 --> 01:06:25,319
quick picture of the data structure

1312
01:06:22,309 --> 01:06:27,779
which contains the path label some flags

1313
01:06:25,319 --> 01:06:29,910
which is like discovery mode and strict

1314
01:06:27,779 --> 01:06:31,650
the vs. fallback mode and something

1315
01:06:29,910 --> 01:06:33,029
called the path label hop count and this

1316
01:06:31,650 --> 01:06:35,369
is an important thing that those two

1317
01:06:33,029 --> 01:06:37,740
things one is it tells each forward or

1318
01:06:35,369 --> 01:06:39,990
we're in the path label bitmap to

1319
01:06:37,740 --> 01:06:42,270
extract the particular next hop label

1320
01:06:39,990 --> 01:06:45,839
you want the other nice property it has

1321
01:06:42,270 --> 01:06:49,500
is since this will count opposite the

1322
01:06:45,839 --> 01:06:51,420
hop limit you can detect when you chop

1323
01:06:49,500 --> 01:06:54,329
traverse forwarders that don't support

1324
01:06:51,420 --> 01:06:58,250
the path labeling needed me to finish up

1325
01:06:54,329 --> 01:07:01,170
ok I'm almost done so we use 12 bit

1326
01:06:58,250 --> 01:07:02,430
things which is a trade-off between how

1327
01:07:01,170 --> 01:07:04,380
quickly you need to in Val

1328
01:07:02,430 --> 01:07:07,348
eight pads in order to not have aliasing

1329
01:07:04,380 --> 01:07:09,630
and how much space you need to do so

1330
01:07:07,349 --> 01:07:12,119
some security implications real quick

1331
01:07:09,630 --> 01:07:15,329
clearly consumers can try to maliciously

1332
01:07:12,119 --> 01:07:17,460
Mystere interests because if you use a

1333
01:07:15,329 --> 01:07:19,109
12-bit next stop label you only need two

1334
01:07:17,460 --> 01:07:21,869
to the twelfth interests in order to

1335
01:07:19,109 --> 01:07:24,450
explore and find a valid on next top

1336
01:07:21,869 --> 01:07:26,490
label to try to exploit so to mitigate

1337
01:07:24,450 --> 01:07:28,828
this you just periodically update the

1338
01:07:26,490 --> 01:07:32,609
next stop labels the minute maximize the

1339
01:07:28,829 --> 01:07:34,410
lifetime of pads and the path label can

1340
01:07:32,609 --> 01:07:36,420
also be encrypted hop-by-hop we have a

1341
01:07:34,410 --> 01:07:39,660
hop by hop encryption capability that

1342
01:07:36,420 --> 01:07:42,869
doesn't require any sharing so that you

1343
01:07:39,660 --> 01:07:45,359
don't leak topological information to

1344
01:07:42,869 --> 01:07:47,819
consumers about all the forward is on a

1345
01:07:45,359 --> 01:07:50,730
pack there's some cache pollution

1346
01:07:47,819 --> 01:07:54,808
potentials where a consumer and a

1347
01:07:50,730 --> 01:07:57,000
producer can can collude to cause

1348
01:07:54,809 --> 01:07:59,910
poisoned information to be returned over

1349
01:07:57,000 --> 01:08:01,740
certain paths so there's a relatively

1350
01:07:59,910 --> 01:08:04,470
simple mitigation here which is you

1351
01:08:01,740 --> 01:08:06,959
annotate any cache entry with the path

1352
01:08:04,470 --> 01:08:10,379
that the data came over and if it's

1353
01:08:06,960 --> 01:08:13,049
different you don't is it good entries

1354
01:08:10,380 --> 01:08:20,549
with maliciously constructed entries and

1355
01:08:13,049 --> 01:08:22,049
I'm done thank you great thank you any

1356
01:08:20,549 --> 01:08:23,519
question obviously I'd like to see

1357
01:08:22,049 --> 01:08:25,140
comments on the list about this I think

1358
01:08:23,520 --> 01:08:27,739
we you know we might want to progress

1359
01:08:25,140 --> 01:08:30,239
this forward as a party item right and

1360
01:08:27,738 --> 01:08:33,419
check out the my C on conference paper

1361
01:08:30,238 --> 01:08:37,709
that Dave mentioned okay

1362
01:08:33,420 --> 01:08:44,640
Nexus tomash wit also in a a new draft

1363
01:08:37,710 --> 01:08:46,910
on tiny leaf and we are putting up the

1364
01:08:44,640 --> 01:08:46,910
slides

1365
01:08:47,689 --> 01:08:50,819
[Music]

1366
01:09:14,948 --> 01:09:24,259
so this whoops okay hello everybody this

1367
01:09:22,370 --> 01:09:27,380
is a new draft but actually there's not

1368
01:09:24,259 --> 01:09:31,250
a new subject this is inspired from a

1369
01:09:27,380 --> 01:09:34,940
discussion we had earlier in earlier

1370
01:09:31,250 --> 01:09:38,569
meetings here and this it basically

1371
01:09:34,939 --> 01:09:42,108
ranks around the other draft I'll talk

1372
01:09:38,569 --> 01:09:44,359
about today is this ICN lo pan if you

1373
01:09:42,109 --> 01:09:47,600
remember of those who have been here

1374
01:09:44,359 --> 01:09:50,540
remember we have been involved or have

1375
01:09:47,600 --> 01:09:52,489
been working on compressing data that is

1376
01:09:50,540 --> 01:09:54,739
to be transmitted in IOT constrained

1377
01:09:52,488 --> 01:09:57,290
environments and the reasons for this is

1378
01:09:54,739 --> 01:10:00,919
that there's low bandwidth with high

1379
01:09:57,290 --> 01:10:03,830
latency slow links and energy

1380
01:10:00,920 --> 01:10:06,199
constraints so we actually want to save

1381
01:10:03,830 --> 01:10:09,650
as much bandwidth and as many bits as

1382
01:10:06,199 --> 01:10:16,339
possible similar to what the people in

1383
01:10:09,650 --> 01:10:19,489
the in the in the IP world - and along

1384
01:10:16,340 --> 01:10:25,150
this line we had the we came across the

1385
01:10:19,489 --> 01:10:29,349
times the timer's in CCN and NDN and

1386
01:10:25,150 --> 01:10:32,480
these timer values are relatively large

1387
01:10:29,350 --> 01:10:35,000
numbers they're usually NTP timestamps

1388
01:10:32,480 --> 01:10:38,809
and we were thinking about how to

1389
01:10:35,000 --> 01:10:40,880
compress them just looking at the data

1390
01:10:38,810 --> 01:10:43,190
structures we have in the interest we

1391
01:10:40,880 --> 01:10:45,650
have two timers one is the signature

1392
01:10:43,190 --> 01:10:48,410
time of the interest message in the case

1393
01:10:45,650 --> 01:10:51,080
and interest is signed and we have the

1394
01:10:48,410 --> 01:10:54,769
interest lifetime message which isn't a

1395
01:10:51,080 --> 01:10:57,050
relative timer and that describes how

1396
01:10:54,770 --> 01:11:00,530
long an interest should be should be

1397
01:10:57,050 --> 01:11:03,680
maintained in the in the pit at the

1398
01:11:00,530 --> 01:11:06,320
others at the data sites we have even

1399
01:11:03,680 --> 01:11:09,260
three timers one is again the signature

1400
01:11:06,320 --> 01:11:12,410
time the the time when the data was

1401
01:11:09,260 --> 01:11:14,870
signed and we have two others two other

1402
01:11:12,410 --> 01:11:17,989
absolute timers the expiration time and

1403
01:11:14,870 --> 01:11:19,849
the recommended cache time those are

1404
01:11:17,989 --> 01:11:24,879
also absolute timers whereas the

1405
01:11:19,850 --> 01:11:28,450
interest lifetime is a relative time and

1406
01:11:24,880 --> 01:11:31,630
the idea is to to do better on

1407
01:11:28,450 --> 01:11:36,460
compressing these timers we had the

1408
01:11:31,630 --> 01:11:39,190
proposal in the ICN lopen draft but the

1409
01:11:36,460 --> 01:11:42,040
problem is if we compress times as I

1410
01:11:39,190 --> 01:11:44,440
will just discuss here then we can't

1411
01:11:42,040 --> 01:11:47,350
recover in all cases the original times

1412
01:11:44,440 --> 01:11:51,969
and now the the idea was okay why don't

1413
01:11:47,350 --> 01:11:54,040
we try to adapt the spec of CC NX so

1414
01:11:51,970 --> 01:11:55,960
that we actually choose time of values

1415
01:11:54,040 --> 01:12:04,660
that can be compressed and recovered

1416
01:11:55,960 --> 01:12:08,640
completely yeah so we've looked at the

1417
01:12:04,660 --> 01:12:12,190
the current represent representation of

1418
01:12:08,640 --> 01:12:13,750
timers we have the relative times and

1419
01:12:12,190 --> 01:12:17,049
the absolute times the relative times

1420
01:12:13,750 --> 01:12:20,350
are our time Delta's in milliseconds and

1421
01:12:17,050 --> 01:12:22,510
they can be can be one to several octet

1422
01:12:20,350 --> 01:12:26,320
so they are flexible the absolute times

1423
01:12:22,510 --> 01:12:28,510
are inflexible in the sense that they

1424
01:12:26,320 --> 01:12:31,840
are NTP time stems and have have eight

1425
01:12:28,510 --> 01:12:34,590
eight octaves in length so that's

1426
01:12:31,840 --> 01:12:41,130
actually a pretty large number

1427
01:12:34,590 --> 01:12:43,870
oops the idea discussed already along in

1428
01:12:41,130 --> 01:12:46,740
in the ICN lopen draft and which is

1429
01:12:43,870 --> 01:12:51,790
actually harvested from an from the IP

1430
01:12:46,740 --> 01:12:55,240
MANET world from RC 50 497 is to

1431
01:12:51,790 --> 01:12:57,850
represent x in a logarithmic scale so

1432
01:12:55,240 --> 01:13:00,550
that you actually can express them in

1433
01:12:57,850 --> 01:13:02,530
one to two octet is a relatively large

1434
01:13:00,550 --> 01:13:05,230
range of times but with different

1435
01:13:02,530 --> 01:13:07,599
granularity for small values you have a

1436
01:13:05,230 --> 01:13:11,190
fine granularity for larger values you

1437
01:13:07,600 --> 01:13:14,020
have a larger coarse grained granularity

1438
01:13:11,190 --> 01:13:16,990
the idea to integrate this in CC and X

1439
01:13:14,020 --> 01:13:20,920
is very simple if you have a if you have

1440
01:13:16,990 --> 01:13:22,990
a time delta timer with the TTL V length

1441
01:13:20,920 --> 01:13:25,750
of one or two bytes then we assume that

1442
01:13:22,990 --> 01:13:30,120
this is a compressed time otherwise that

1443
01:13:25,750 --> 01:13:33,190
is just a normal representation of CCN X

1444
01:13:30,120 --> 01:13:36,580
so just to give you some numbers or some

1445
01:13:33,190 --> 01:13:38,610
some ways how to do this with a in a one

1446
01:13:36,580 --> 01:13:41,250
octave case so what you do is

1447
01:13:38,610 --> 01:13:43,589
you take your 8 bits and you fix a fix a

1448
01:13:41,250 --> 01:13:46,950
certain amount of bits as the exponent

1449
01:13:43,590 --> 01:13:53,640
and the rest as a mantissa and then you

1450
01:13:46,950 --> 01:13:57,260
build timer values know you build timer

1451
01:13:53,640 --> 01:14:02,210
values as you see the equation they're

1452
01:13:57,260 --> 01:14:06,510
constructed as as the mantissa times

1453
01:14:02,210 --> 01:14:08,670
times the exponent 2 to the B times the

1454
01:14:06,510 --> 01:14:11,250
value of C that actually fixes the range

1455
01:14:08,670 --> 01:14:14,670
so you have to we have to fix three

1456
01:14:11,250 --> 01:14:16,770
values a the length of the exponent the

1457
01:14:14,670 --> 01:14:19,830
links of the mantissa and this C value

1458
01:14:16,770 --> 01:14:27,510
here the examples for a for length a

1459
01:14:19,830 --> 01:14:30,120
equal to 3 B to 5 and C 1001 over 1,024

1460
01:14:27,510 --> 01:14:33,090
and this those are actually the numbers

1461
01:14:30,120 --> 01:14:35,190
taken from from the RC previous

1462
01:14:33,090 --> 01:14:37,740
mentioned that means you have a range of

1463
01:14:35,190 --> 01:14:40,589
expressiveness between the smallest

1464
01:14:37,740 --> 01:14:44,250
value is the C and the largest is about

1465
01:14:40,590 --> 01:14:46,260
45 days we can of course use other

1466
01:14:44,250 --> 01:14:53,130
timers other ranges for other

1467
01:14:46,260 --> 01:14:55,050
expressiveness so looking at the timers

1468
01:14:53,130 --> 01:14:56,940
again we have the absolute times and

1469
01:14:55,050 --> 01:15:01,500
that the absolute times are difficult to

1470
01:14:56,940 --> 01:15:04,769
to compress as such as Delta times look

1471
01:15:01,500 --> 01:15:08,100
at looking at the signature timers these

1472
01:15:04,770 --> 01:15:10,050
signatures can be in the past so you you

1473
01:15:08,100 --> 01:15:15,450
can't express them as Delta's they can

1474
01:15:10,050 --> 01:15:19,110
be far in the past they can have they

1475
01:15:15,450 --> 01:15:22,470
can have basically all values so we are

1476
01:15:19,110 --> 01:15:28,259
not we are not addressing to it to

1477
01:15:22,470 --> 01:15:31,320
replace those but we are we're looking

1478
01:15:28,260 --> 01:15:36,510
at at other absolute timers here and

1479
01:15:31,320 --> 01:15:37,889
this is the in the data there's the

1480
01:15:36,510 --> 01:15:40,710
recommended cache time and the

1481
01:15:37,890 --> 01:15:43,950
expiration time those are also encoded

1482
01:15:40,710 --> 01:15:47,570
as absolute values in the in the CCN

1483
01:15:43,950 --> 01:15:50,429
expect but could be actually changed to

1484
01:15:47,570 --> 01:15:51,790
two like taking the signature time as

1485
01:15:50,430 --> 01:15:53,620
the baseline and then

1486
01:15:51,790 --> 01:15:55,300
using doubters to express the

1487
01:15:53,620 --> 01:15:56,980
exploration time in the recommended

1488
01:15:55,300 --> 01:16:00,640
cache times and that will be a

1489
01:15:56,980 --> 01:16:02,919
discussion we would like to to have with

1490
01:16:00,640 --> 01:16:04,600
you or have on the list whether this

1491
01:16:02,920 --> 01:16:08,590
should be done or shouldn't I would

1492
01:16:04,600 --> 01:16:10,989
actually change to two other timer

1493
01:16:08,590 --> 01:16:15,580
values into much shorter shorter

1494
01:16:10,989 --> 01:16:18,700
encodings yeah what will be the next

1495
01:16:15,580 --> 01:16:20,470
steps well we would probably investigate

1496
01:16:18,700 --> 01:16:23,950
a little bit about the ranges that are

1497
01:16:20,470 --> 01:16:25,750
that are appropriate for for the

1498
01:16:23,950 --> 01:16:28,150
different applications in the different

1499
01:16:25,750 --> 01:16:30,400
Delta timers for instance the the values

1500
01:16:28,150 --> 01:16:32,710
I showed you would be very nice for

1501
01:16:30,400 --> 01:16:35,219
interest lifetime I believe but they may

1502
01:16:32,710 --> 01:16:42,720
not be appropriate for the Delta x in

1503
01:16:35,220 --> 01:16:45,430
the in the object lifetime yeah and

1504
01:16:42,720 --> 01:16:48,730
otherwise I guess the question is

1505
01:16:45,430 --> 01:16:52,060
whether this is the research group will

1506
01:16:48,730 --> 01:16:54,549
be interested in just doing this work or

1507
01:16:52,060 --> 01:16:58,000
changing this spec because it's actually

1508
01:16:54,550 --> 01:17:00,250
a very small small thing to do but I

1509
01:16:58,000 --> 01:17:03,880
mean a decision on whether whether we

1510
01:17:00,250 --> 01:17:06,480
want to change the timer's in CCN

1511
01:17:03,880 --> 01:17:11,320
expects thank you

1512
01:17:06,480 --> 01:17:13,989
Thank You Thomas right so that was the

1513
01:17:11,320 --> 01:17:17,700
important information at the end so the

1514
01:17:13,989 --> 01:17:19,870
whole idea of this work is what to unify

1515
01:17:17,700 --> 01:17:23,980
the time compression that has been done

1516
01:17:19,870 --> 01:17:28,180
in the say IOT space before and say

1517
01:17:23,980 --> 01:17:31,870
possibly update the CC Nexen specs with

1518
01:17:28,180 --> 01:17:34,239
that and so that's why I think it's

1519
01:17:31,870 --> 01:17:37,989
important to for people to review this

1520
01:17:34,239 --> 01:17:40,239
and basically here tell us what you

1521
01:17:37,989 --> 01:17:43,299
think about it one thing I forgot to

1522
01:17:40,239 --> 01:17:45,519
mention as some of these timers are part

1523
01:17:43,300 --> 01:17:49,120
of the signature and the of the envelope

1524
01:17:45,520 --> 01:17:53,530
that is signed so if we cannot recover

1525
01:17:49,120 --> 01:17:55,890
this the timers under the compression we

1526
01:17:53,530 --> 01:17:59,349
cannot actually compress these timers

1527
01:17:55,890 --> 01:18:00,850
without destroying the signature and

1528
01:17:59,350 --> 01:18:03,219
right

1529
01:18:00,850 --> 01:18:05,340
one of the major motivations actually

1530
01:18:03,219 --> 01:18:09,239
yeah sorry I forgot this

1531
01:18:05,340 --> 01:18:12,610
okay the other is just a very brief

1532
01:18:09,239 --> 01:18:14,739
recap or just a very brief addition to

1533
01:18:12,610 --> 01:18:16,299
what happened to this ICN lopen draught

1534
01:18:14,739 --> 01:18:18,190
this is actually has been presented

1535
01:18:16,300 --> 01:18:20,620
several times many times he had

1536
01:18:18,190 --> 01:18:25,269
discussed in quite detail has matured

1537
01:18:20,620 --> 01:18:27,070
and about ready ready to go so what did

1538
01:18:25,270 --> 01:18:31,350
we do we had several reviews also on the

1539
01:18:27,070 --> 01:18:38,019
mailing list in particular by one chef

1540
01:18:31,350 --> 01:18:42,400
mr. Shi F trouble in pronouncing so yet

1541
01:18:38,020 --> 01:18:46,230
also commended on several things the

1542
01:18:42,400 --> 01:18:49,900
last way or in typos and on operators

1543
01:18:46,230 --> 01:18:54,250
what we also did is we harmonize the the

1544
01:18:49,900 --> 01:18:57,250
ICN open draft with the teed time ta

1545
01:18:54,250 --> 01:19:00,340
Vedra draft I just presented a second

1546
01:18:57,250 --> 01:19:04,810
ago so that those fit together nicely

1547
01:19:00,340 --> 01:19:09,969
and the second discussion question we

1548
01:19:04,810 --> 01:19:13,530
had from the montréal meeting was the

1549
01:19:09,969 --> 01:19:16,840
this draft originally concentrated on

1550
01:19:13,530 --> 01:19:19,239
efficiently compressing like the default

1551
01:19:16,840 --> 01:19:22,239
standard cases and as a default standard

1552
01:19:19,239 --> 01:19:25,030
cases case we identified the generic

1553
01:19:22,239 --> 01:19:27,129
name components for named object for the

1554
01:19:25,030 --> 01:19:30,820
names of object and this is actually

1555
01:19:27,130 --> 01:19:35,380
what is shown here so what we do is we

1556
01:19:30,820 --> 01:19:39,880
have a recompress we compress the names

1557
01:19:35,380 --> 01:19:41,980
under the under the assumption that the

1558
01:19:39,880 --> 01:19:45,489
the names only consists of generic name

1559
01:19:41,980 --> 01:19:48,759
components limit the length of the name

1560
01:19:45,489 --> 01:19:54,820
components and then actually we compress

1561
01:19:48,760 --> 01:19:57,160
it down to down to a very short very

1562
01:19:54,820 --> 01:19:58,929
short name there has been the discussion

1563
01:19:57,160 --> 01:20:01,300
on the mailing list and also in Montreal

1564
01:19:58,929 --> 01:20:03,820
whether we should include types types

1565
01:20:01,300 --> 01:20:08,410
here should also account for type name

1566
01:20:03,820 --> 01:20:15,000
components and Shang made a proposal in

1567
01:20:08,410 --> 01:20:19,380
in Macao to to just have a give certain

1568
01:20:15,000 --> 01:20:22,810
fix a certain kind of types

1569
01:20:19,380 --> 01:20:26,620
like version numbers and and timestamps

1570
01:20:22,810 --> 01:20:28,720
in in these names to to make to actually

1571
01:20:26,620 --> 01:20:31,480
to make the smoke expressive to include

1572
01:20:28,720 --> 01:20:33,880
some types which led to another

1573
01:20:31,480 --> 01:20:35,019
discussion on the mailing list about all

1574
01:20:33,880 --> 01:20:37,030
there are other types that are also

1575
01:20:35,020 --> 01:20:38,800
interested and actually our way out of

1576
01:20:37,030 --> 01:20:41,259
this discussion because we can't really

1577
01:20:38,800 --> 01:20:43,870
judge on what name types are the most

1578
01:20:41,260 --> 01:20:47,400
interesting and what or not is to make

1579
01:20:43,870 --> 01:20:53,559
the to make this in extensible

1580
01:20:47,400 --> 01:21:00,339
extensible extensible thing so the idea

1581
01:20:53,560 --> 01:21:02,290
is we we have in the ICN lobe and we

1582
01:21:00,340 --> 01:21:04,060
have you want to interrupt or no keep

1583
01:21:02,290 --> 01:21:05,980
going in the eyes are opened we have

1584
01:21:04,060 --> 01:21:08,800
dispatch fields and these dispatch

1585
01:21:05,980 --> 01:21:11,709
fields can be extended they have

1586
01:21:08,800 --> 01:21:14,230
extension extension fields and the ideas

1587
01:21:11,710 --> 01:21:16,840
to define and such an extension groups

1588
01:21:14,230 --> 01:21:22,299
such an extension field here that has

1589
01:21:16,840 --> 01:21:27,400
has to to further values to to

1590
01:21:22,300 --> 01:21:29,380
incorporate flexibly name components for

1591
01:21:27,400 --> 01:21:31,870
instance defined in dictionaries or in

1592
01:21:29,380 --> 01:21:33,940
something else that copy could be

1593
01:21:31,870 --> 01:21:36,820
actually special specified in future

1594
01:21:33,940 --> 01:21:42,040
documents which are not which are not

1595
01:21:36,820 --> 01:21:46,330
part of the spec you want know are you

1596
01:21:42,040 --> 01:21:48,220
done well basically no I actually it's

1597
01:21:46,330 --> 01:21:50,309
appropriate to that slide so ask it now

1598
01:21:48,220 --> 01:21:56,380
or just make the comment now go back one

1599
01:21:50,310 --> 01:21:59,710
well this is basically and so wrong um

1600
01:21:56,380 --> 01:22:01,960
this seems to me anyway to be a poster

1601
01:21:59,710 --> 01:22:05,890
child example of something that you

1602
01:22:01,960 --> 01:22:08,020
could use manifest metadata for to

1603
01:22:05,890 --> 01:22:09,880
actually explain what what dictionary

1604
01:22:08,020 --> 01:22:12,670
you you're using or so yeah that's right

1605
01:22:09,880 --> 01:22:15,730
so for a whole given you know subtree of

1606
01:22:12,670 --> 01:22:17,560
objects that use certain type name type

1607
01:22:15,730 --> 01:22:19,570
components you can put in the manifest

1608
01:22:17,560 --> 01:22:23,920
metadata these are the ones that you Det

1609
01:22:19,570 --> 01:22:25,570
that you would be compressed that's

1610
01:22:23,920 --> 01:22:28,060
actually the extension what I wanted to

1611
01:22:25,570 --> 01:22:31,000
show anyway but yeah you that the point

1612
01:22:28,060 --> 01:22:31,720
is in this extension address you would

1613
01:22:31,000 --> 01:22:35,620
have

1614
01:22:31,720 --> 01:22:36,970
you would encode a compression strategy

1615
01:22:35,620 --> 01:22:38,950
that yeah but those have to be in every

1616
01:22:36,970 --> 01:22:40,900
packet that's right those would have to

1617
01:22:38,950 --> 01:22:43,900
be in every packet that will be annexed

1618
01:22:40,900 --> 01:22:46,120
yeah yeah so yeah so just think about

1619
01:22:43,900 --> 01:22:49,839
using manifest metadata it seems like a

1620
01:22:46,120 --> 01:22:51,790
nice trade off okay so we think about

1621
01:22:49,840 --> 01:22:54,070
the manifest metadata and otherwise

1622
01:22:51,790 --> 01:22:56,190
we're I mean we think we are pretty much

1623
01:22:54,070 --> 01:23:00,750
much done with this draft so we're

1624
01:22:56,190 --> 01:23:03,370
asking for right Thank You Thomas

1625
01:23:00,750 --> 01:23:05,590
so just on the last point I mean we have

1626
01:23:03,370 --> 01:23:10,180
to find a way to deal with these

1627
01:23:05,590 --> 01:23:13,240
dependencies meaningful way so if you

1628
01:23:10,180 --> 01:23:15,400
think about the manifest approach I hope

1629
01:23:13,240 --> 01:23:18,910
this wouldn't affect this current draft

1630
01:23:15,400 --> 01:23:21,190
so we don't have to wait with this draft

1631
01:23:18,910 --> 01:23:24,340
to figure out a way to use manifest for

1632
01:23:21,190 --> 01:23:27,610
the dictionary description right yeah I

1633
01:23:24,340 --> 01:23:29,230
guess we I mean we probably we think

1634
01:23:27,610 --> 01:23:33,160
about this manifest and take it to the

1635
01:23:29,230 --> 01:23:35,559
list I mean the the the price we are

1636
01:23:33,160 --> 01:23:38,139
discussing is actually relatively low so

1637
01:23:35,560 --> 01:23:40,530
I mean defining additional dictionaries

1638
01:23:38,140 --> 01:23:42,910
would mean that we have one octet

1639
01:23:40,530 --> 01:23:45,250
extension of that year which is also not

1640
01:23:42,910 --> 01:23:48,990
that that bad

1641
01:23:45,250 --> 01:23:52,750
right so I think from our perspective

1642
01:23:48,990 --> 01:23:54,880
it's good time to last call this draft

1643
01:23:52,750 --> 01:23:57,220
now and it shouldn't keep us from

1644
01:23:54,880 --> 01:24:02,110
thinking about the manifest and idea

1645
01:23:57,220 --> 01:24:05,580
later okay so we will issue a last call

1646
01:24:02,110 --> 01:24:08,730
on the main list please please please

1647
01:24:05,580 --> 01:24:12,760
have a second look at the at the draft

1648
01:24:08,730 --> 01:24:15,610
so and this is also going to be an

1649
01:24:12,760 --> 01:24:21,100
important specification for ICN in IOT

1650
01:24:15,610 --> 01:24:23,740
so we want to publish this because it's

1651
01:24:21,100 --> 01:24:30,430
important for building IOT solutions was

1652
01:24:23,740 --> 01:24:34,300
ICN okay so next is Greg right so I'm

1653
01:24:30,430 --> 01:24:36,460
coming in with an update on ipok which

1654
01:24:34,300 --> 01:24:43,410
we recently adopted as a research group

1655
01:24:36,460 --> 01:24:43,410
document and who stole the ticker

1656
01:24:45,510 --> 01:24:53,530
thank you all right thank you this would

1657
01:24:49,000 --> 01:24:55,960
be a fairly short update so giving this

1658
01:24:53,530 --> 01:25:01,210
update on behalf of my co-authors just

1659
01:24:55,960 --> 01:25:04,300
militant chain you to the concept if

1660
01:25:01,210 --> 01:25:07,239
this if you're new to ipok its idea to

1661
01:25:04,300 --> 01:25:10,150
use CC n as the forwarding plane for a

1662
01:25:07,239 --> 01:25:15,098
mobile core network so not running CC n

1663
01:25:10,150 --> 01:25:17,650
on top of IP on top of LTE think a PC a

1664
01:25:15,099 --> 01:25:19,750
things like that essentially use CC

1665
01:25:17,650 --> 01:25:22,929
annette as as that forwarding plane and

1666
01:25:19,750 --> 01:25:27,670
then run existing IP services on top of

1667
01:25:22,929 --> 01:25:31,360
that and so i his IP over CCM and the

1668
01:25:27,670 --> 01:25:32,800
idea is that it would replace LTE PC and

1669
01:25:31,360 --> 01:25:36,190
the gtp tunnels that are used for that

1670
01:25:32,800 --> 01:25:38,469
for mobility and then once you've got

1671
01:25:36,190 --> 01:25:40,928
that forwarding plane of CCN in your

1672
01:25:38,469 --> 01:25:43,989
mobile network then you can now deploy

1673
01:25:40,929 --> 01:25:46,090
native CCN applications and get all the

1674
01:25:43,989 --> 01:25:47,888
benefits that you know in network

1675
01:25:46,090 --> 01:25:53,020
caching and and mobility that comes

1676
01:25:47,889 --> 01:25:55,929
along with that status I did a fairly

1677
01:25:53,020 --> 01:25:59,199
detailed presentation on the protocol at

1678
01:25:55,929 --> 01:26:02,949
the interim before the Montreal IC

1679
01:25:59,199 --> 01:26:04,269
energy or IETF meeting link is there if

1680
01:26:02,949 --> 01:26:06,129
you want to take a look at the slides

1681
01:26:04,270 --> 01:26:09,880
from that so I'm not going to go through

1682
01:26:06,130 --> 01:26:12,369
a detailed overview again today after

1683
01:26:09,880 --> 01:26:15,520
that meeting there was an adoption call

1684
01:26:12,369 --> 01:26:18,489
on the mailing list and it was adopted

1685
01:26:15,520 --> 01:26:22,389
and shortly thereafter or a couple weeks

1686
01:26:18,489 --> 01:26:25,449
after I updated the draft and submitted

1687
01:26:22,389 --> 01:26:28,270
that as a research group that changes or

1688
01:26:25,449 --> 01:26:30,219
were pretty minor added one reference in

1689
01:26:28,270 --> 01:26:32,469
response to a question on the mailing

1690
01:26:30,219 --> 01:26:34,690
list and then I updated the references

1691
01:26:32,469 --> 01:26:39,040
to the CC n document since they had

1692
01:26:34,690 --> 01:26:43,960
become RFC it around that time and was

1693
01:26:39,040 --> 01:26:44,619
it open items there's only one open item

1694
01:26:43,960 --> 01:26:47,679
that I'm aware of

1695
01:26:44,619 --> 01:26:50,619
maybe I'm forgetting something and that

1696
01:26:47,679 --> 01:26:52,599
was a comment from toss about consider

1697
01:26:50,619 --> 01:26:56,320
including a comparative discussion of

1698
01:26:52,599 --> 01:26:57,520
mobile ipv6 and multicast mobility we've

1699
01:26:56,320 --> 01:27:00,309
had some

1700
01:26:57,520 --> 01:27:02,080
offline exchange via email and plan to

1701
01:27:00,310 --> 01:27:04,900
think up sometime this week to discuss

1702
01:27:02,080 --> 01:27:07,480
that yeah I just Canet I mean that the

1703
01:27:04,900 --> 01:27:09,849
point is you're you're trading CCN

1704
01:27:07,480 --> 01:27:12,219
mobility versus IP mobility and you're

1705
01:27:09,850 --> 01:27:15,520
in a research group so it makes sense

1706
01:27:12,220 --> 01:27:18,910
actually to position between the two and

1707
01:27:15,520 --> 01:27:21,520
I mean multicast is interesting in this

1708
01:27:18,910 --> 01:27:24,430
case because I'm CC n is also a reverse

1709
01:27:21,520 --> 01:27:27,310
path forwarding so multicast ability is

1710
01:27:24,430 --> 01:27:30,040
actually the direct counterpart of your

1711
01:27:27,310 --> 01:27:33,340
approach that's at least for a

1712
01:27:30,040 --> 01:27:35,590
scientific completeness I guess yeah I

1713
01:27:33,340 --> 01:27:39,250
have no objection to doing I think that

1714
01:27:35,590 --> 01:27:41,710
we could come up with a short subsection

1715
01:27:39,250 --> 01:27:44,710
in the document that that discusses that

1716
01:27:41,710 --> 01:27:46,930
I wouldn't want that to become you know

1717
01:27:44,710 --> 01:27:49,390
the book the document but you certainly

1718
01:27:46,930 --> 01:27:51,250
cover that and and with your help Thomas

1719
01:27:49,390 --> 01:27:52,810
says I'm not an expert on multicast

1720
01:27:51,250 --> 01:27:57,760
mobility or actually on mobile ipv6

1721
01:27:52,810 --> 01:28:00,940
either appreciate the offer to help so

1722
01:27:57,760 --> 01:28:03,190
that's in I think there's unless there

1723
01:28:00,940 --> 01:28:07,440
are further items that come up on the

1724
01:28:03,190 --> 01:28:10,089
mailing lists either as a result of this

1725
01:28:07,440 --> 01:28:12,849
I'd suggest that once we've gotten some

1726
01:28:10,090 --> 01:28:19,270
text together on that that we should

1727
01:28:12,850 --> 01:28:22,270
consider a level okay thank you Greg and

1728
01:28:19,270 --> 01:28:25,450
just one question from the chest and so

1729
01:28:22,270 --> 01:28:26,050
it you keep using the term CCN in this

1730
01:28:25,450 --> 01:28:31,480
document

1731
01:28:26,050 --> 01:28:44,860
shouldn't it be CCX it should be second

1732
01:28:31,480 --> 01:28:47,080
I guess that's one question so I just

1733
01:28:44,860 --> 01:28:52,089
want to confirm about the deployment

1734
01:28:47,080 --> 01:28:54,040
strategy in like I see any in 5jc this

1735
01:28:52,090 --> 01:28:57,040
is not relevant but I won't confirm this

1736
01:28:54,040 --> 01:29:00,430
is like the first mode or second mode of

1737
01:28:57,040 --> 01:29:03,820
its overlay or underline because we were

1738
01:29:00,430 --> 01:29:07,090
quite confused about that definition so

1739
01:29:03,820 --> 01:29:10,929
it is part of this study in the

1740
01:29:07,090 --> 01:29:15,119
deployment consideration or not

1741
01:29:10,929 --> 01:29:22,630
which one so I puck is discussed in the

1742
01:29:15,119 --> 01:29:24,009
CC on over PI G Draft and I'm not

1743
01:29:22,630 --> 01:29:26,550
remembering exactly the terminology

1744
01:29:24,010 --> 01:29:30,219
that's used there but essentially it is

1745
01:29:26,550 --> 01:29:32,289
using CC n forwarding natively over so

1746
01:29:30,219 --> 01:29:34,479
Ethernet row over another layer to

1747
01:29:32,289 --> 01:29:38,139
technology in the core network and not

1748
01:29:34,479 --> 01:29:42,489
with IP underneath it and then running

1749
01:29:38,139 --> 01:29:44,199
native CC n applications or or IP

1750
01:29:42,489 --> 01:29:47,619
applications in particular in this case

1751
01:29:44,199 --> 01:29:51,070
IP applications on top of CC NS that is

1752
01:29:47,619 --> 01:30:03,780
that foreign plane here's the question

1753
01:29:51,070 --> 01:30:07,420
and your name please okay

1754
01:30:03,780 --> 01:30:09,219
by the way and the mic is not picking up

1755
01:30:07,420 --> 01:30:10,869
the voices really well so you have to

1756
01:30:09,219 --> 01:30:13,989
move really close to the mic if you say

1757
01:30:10,869 --> 01:30:15,339
something okay so it sounds like that's

1758
01:30:13,989 --> 01:30:17,070
gonna be one more revision and then we

1759
01:30:15,340 --> 01:30:18,999
might consider that's calling it wait

1760
01:30:17,070 --> 01:30:21,699
that's right

1761
01:30:18,999 --> 01:30:24,309
I think we can probably get these edits

1762
01:30:21,699 --> 01:30:26,949
done in the next row by the end of the

1763
01:30:24,309 --> 01:30:31,179
year so next next few weeks okay so I'm

1764
01:30:26,949 --> 01:30:33,518
very good thank you very okay so moving

1765
01:30:31,179 --> 01:30:42,789
on like this you're crossing the sea in

1766
01:30:33,519 --> 01:30:45,999
the room oh yeah also a new draft on

1767
01:30:42,789 --> 01:30:49,860
Internet services over I CN n 5g a LAN

1768
01:30:45,999 --> 01:30:49,860
environments if you can just put

1769
01:31:06,099 --> 01:31:12,250
hello everyone this is actually it's a

1770
01:31:09,880 --> 01:31:16,599
version zero zero but actually it's a

1771
01:31:12,250 --> 01:31:20,199
revised never Eiland draft we presented

1772
01:31:16,599 --> 01:31:25,329
it in NASA a meeting moon chill it's

1773
01:31:20,199 --> 01:31:29,110
about the so when we play the other one

1774
01:31:25,329 --> 01:31:31,690
the IPO risin over fabula so rana the

1775
01:31:29,110 --> 01:31:34,929
presented the idea I'm pretending now is

1776
01:31:31,690 --> 01:31:37,780
we call the Internet services over ice

1777
01:31:34,929 --> 01:31:40,780
and over fifty lon

1778
01:31:37,780 --> 01:31:43,690
in terms of icing world fevzi actually

1779
01:31:40,780 --> 01:31:47,290
we have another related were on our G

1780
01:31:43,690 --> 01:31:50,138
draft labeling ice and over so gpb's

1781
01:31:47,290 --> 01:31:53,579
fifty next generation core network so

1782
01:31:50,139 --> 01:31:57,579
inland draft talking about the how to

1783
01:31:53,579 --> 01:32:01,210
extend the 5g control plan and data plan

1784
01:31:57,579 --> 01:32:04,360
in order to support us in over forty a

1785
01:32:01,210 --> 01:32:06,610
network or 4G system so the current one

1786
01:32:04,360 --> 01:32:09,009
is kind of for Exantus stabbed near the

1787
01:32:06,610 --> 01:32:11,619
feather is think about if we have the

1788
01:32:09,010 --> 01:32:14,829
HTTP HTTP for example internet services

1789
01:32:11,619 --> 01:32:18,549
such as HTTP if you want to ride over

1790
01:32:14,829 --> 01:32:21,340
the ice N and also here will focus on

1791
01:32:18,550 --> 01:32:26,980
fabula because fabula is can a vertical

1792
01:32:21,340 --> 01:32:29,560
our virtual land a group of some years

1793
01:32:26,980 --> 01:32:38,138
so we want to look at this how to

1794
01:32:29,560 --> 01:32:40,510
support this you know the utilize Ison

1795
01:32:38,139 --> 01:32:43,929
and the underlay and also utilize the

1796
01:32:40,510 --> 01:32:47,530
Ison and the kind of a slice in favilla

1797
01:32:43,929 --> 01:32:50,230
environment in order to support the the

1798
01:32:47,530 --> 01:32:54,340
upper layer the HP up our internet

1799
01:32:50,230 --> 01:32:58,269
sources such as HTTP so basically in

1800
01:32:54,340 --> 01:33:01,329
this draft we presented to use kisses

1801
01:32:58,270 --> 01:33:03,250
whines about the control a plan because

1802
01:33:01,329 --> 01:33:06,369
contraband you know they felt control

1803
01:33:03,250 --> 01:33:09,610
plane the use HTTP protocol is kind of

1804
01:33:06,369 --> 01:33:13,869
interest services the signal use case we

1805
01:33:09,610 --> 01:33:16,540
are including the job is Kali the HD

1806
01:33:13,869 --> 01:33:19,360
streaming so we introduced a faulty line

1807
01:33:16,540 --> 01:33:21,310
architecture according to the

1808
01:33:19,360 --> 01:33:25,089
education and of course it's ongoing

1809
01:33:21,310 --> 01:33:27,219
studio in CPP the architectural Falchi

1810
01:33:25,090 --> 01:33:30,850
next generation corner work in support

1811
01:33:27,219 --> 01:33:35,469
in order to support our Jalan most more

1812
01:33:30,850 --> 01:33:37,570
counter contents in in this trophy's the

1813
01:33:35,469 --> 01:33:39,820
making demanded also the architecture in

1814
01:33:37,570 --> 01:33:41,500
order to supports the interest services

1815
01:33:39,820 --> 01:33:46,239
over a single on

1816
01:33:41,500 --> 01:33:50,530
for example we need to introduce the

1817
01:33:46,239 --> 01:33:53,379
Ison API in order to supply upper layers

1818
01:33:50,530 --> 01:33:56,500
for example sue this SNP I the upper

1819
01:33:53,380 --> 01:33:59,560
layer such as the UTP they can call this

1820
01:33:56,500 --> 01:34:03,790
API to send the packet to the data to

1821
01:33:59,560 --> 01:34:06,219
the eyes in there as a part of that we

1822
01:34:03,790 --> 01:34:08,440
also consider the service proxy

1823
01:34:06,219 --> 01:34:10,750
operations in order to support the

1824
01:34:08,440 --> 01:34:13,540
legacy devices which means it only

1825
01:34:10,750 --> 01:34:15,760
supports the ice and natively so for

1826
01:34:13,540 --> 01:34:18,310
those kind of legacy devices they talk

1827
01:34:15,760 --> 01:34:22,300
to the service proxy operations from the

1828
01:34:18,310 --> 01:34:25,449
air the service proxy proxy it can

1829
01:34:22,300 --> 01:34:28,060
translate the LexA device operations to

1830
01:34:25,449 --> 01:34:31,360
the you know with proposal e at the

1831
01:34:28,060 --> 01:34:34,300
icing or 5g lon and also part of that is

1832
01:34:31,360 --> 01:34:37,599
we need to have a component we call the

1833
01:34:34,300 --> 01:34:39,850
name resolver in order to you know

1834
01:34:37,600 --> 01:34:43,179
discover and the fan in the past ID

1835
01:34:39,850 --> 01:34:46,540
because even though we use the ICN the

1836
01:34:43,179 --> 01:34:49,600
underlay we still using the past based

1837
01:34:46,540 --> 01:34:52,719
forwarding for example in order to send

1838
01:34:49,600 --> 01:34:56,739
send a one Ison packet from one UPF to

1839
01:34:52,719 --> 01:34:59,560
another UPF also we also consider the

1840
01:34:56,739 --> 01:35:01,290
dual stack device reports because in

1841
01:34:59,560 --> 01:35:04,239
some cases the device supports

1842
01:35:01,290 --> 01:35:07,719
commission on IP protocol also support

1843
01:35:04,239 --> 01:35:11,949
the that we propose here the inter

1844
01:35:07,719 --> 01:35:14,260
services or icing over 50 lon and then

1845
01:35:11,949 --> 01:35:16,678
the deployment considerations we

1846
01:35:14,260 --> 01:35:19,989
basically took the guidelines from the

1847
01:35:16,679 --> 01:35:21,010
research group document about the ice

1848
01:35:19,989 --> 01:35:24,849
and deployment

1849
01:35:21,010 --> 01:35:29,290
guidelines specifically to our commands

1850
01:35:24,850 --> 01:35:31,570
were taken is Ison and the underlay and

1851
01:35:29,290 --> 01:35:32,600
also since we are here consider on how

1852
01:35:31,570 --> 01:35:36,110
to do that

1853
01:35:32,600 --> 01:35:38,860
50 lon so we also take the Ison and they

1854
01:35:36,110 --> 01:35:43,719
slice because and you know the the 4G

1855
01:35:38,860 --> 01:35:45,910
system suppose Network slice and nicely

1856
01:35:43,720 --> 01:35:49,280
and that's kind of being content

1857
01:35:45,910 --> 01:35:54,410
including the it's chopped so we

1858
01:35:49,280 --> 01:35:56,960
received a few comments back in July in

1859
01:35:54,410 --> 01:35:59,150
münchen meeting so we made some those

1860
01:35:56,960 --> 01:36:04,520
two major changes number ones and a

1861
01:35:59,150 --> 01:36:08,000
paragraph to describe the how to realize

1862
01:36:04,520 --> 01:36:11,270
how to achieve this interest sources

1863
01:36:08,000 --> 01:36:13,370
over a single file on under you know

1864
01:36:11,270 --> 01:36:15,770
some other transport networks we talk

1865
01:36:13,370 --> 01:36:19,010
about the Easton transport networks in

1866
01:36:15,770 --> 01:36:21,170
Section four to a further one here the

1867
01:36:19,010 --> 01:36:23,300
father to we and a paragraph to clarify

1868
01:36:21,170 --> 01:36:27,080
we also can use a bigger traffic

1869
01:36:23,300 --> 01:36:29,120
engineering and then you know one type

1870
01:36:27,080 --> 01:36:33,710
of other transfer networks in order to

1871
01:36:29,120 --> 01:36:37,660
support the inner source is authorizing

1872
01:36:33,710 --> 01:36:40,190
over fifty line so essential idea was to

1873
01:36:37,660 --> 01:36:42,050
basically say the beer of trafficking in

1874
01:36:40,190 --> 01:36:44,360
your controller is quite similar to the

1875
01:36:42,050 --> 01:36:49,310
HD in control controller so we can base

1876
01:36:44,360 --> 01:36:52,250
into this inner sin configure some you

1877
01:36:49,310 --> 01:36:55,580
know they the positions and a bit

1878
01:36:52,250 --> 01:36:57,680
strings in order to utilize the pass is

1879
01:36:55,580 --> 01:37:00,830
forwarding again from for example from

1880
01:36:57,680 --> 01:37:03,740
one UPA for a lot of UPF a lot of

1881
01:37:00,830 --> 01:37:05,930
changes we replace the IP services with

1882
01:37:03,740 --> 01:37:08,510
the Internet services one of the reasons

1883
01:37:05,930 --> 01:37:11,120
also the computer by the pier but the

1884
01:37:08,510 --> 01:37:13,490
folks not meeting in montréal is I think

1885
01:37:11,120 --> 01:37:16,849
the the inter services in the more

1886
01:37:13,490 --> 01:37:19,690
meaningful and more consistent with the

1887
01:37:16,850 --> 01:37:23,330
content with the motivation covered by

1888
01:37:19,690 --> 01:37:25,009
this draft that's kind of for to mere

1889
01:37:23,330 --> 01:37:27,769
changes that we made so far of course

1890
01:37:25,010 --> 01:37:31,370
there are some other of future updates

1891
01:37:27,770 --> 01:37:33,860
we plan to do for example currently we

1892
01:37:31,370 --> 01:37:37,040
have two components the flow management

1893
01:37:33,860 --> 01:37:40,969
and also the mobility handling so those

1894
01:37:37,040 --> 01:37:44,810
two components currently is its kibriya

1895
01:37:40,970 --> 01:37:46,460
we plan to you you know under the future

1896
01:37:44,810 --> 01:37:49,640
updates for example for the flow

1897
01:37:46,460 --> 01:37:52,420
management we plan to describe how

1898
01:37:49,640 --> 01:37:55,100
Internet transactions are mapped onto

1899
01:37:52,420 --> 01:37:56,660
single transaction our relation with the

1900
01:37:55,100 --> 01:37:58,580
joint flow control across all

1901
01:37:56,660 --> 01:38:02,450
transactions I'm not going to repeat

1902
01:37:58,580 --> 01:38:05,630
this you know the perimeter thinking or

1903
01:38:02,450 --> 01:38:08,450
the promise to Adam you know more

1904
01:38:05,630 --> 01:38:10,760
description and more content or run

1905
01:38:08,450 --> 01:38:13,880
those two components flow management and

1906
01:38:10,760 --> 01:38:18,460
mobility are handling another thing what

1907
01:38:13,880 --> 01:38:23,150
you plan to do is in the we we plan to

1908
01:38:18,460 --> 01:38:28,070
show a demo in next meeting 107 in my

1909
01:38:23,150 --> 01:38:30,799
cooler so the plan was to showcase a

1910
01:38:28,070 --> 01:38:33,410
realization of Internet services over a

1911
01:38:30,800 --> 01:38:37,850
little too for example HD and transfer

1912
01:38:33,410 --> 01:38:39,500
network using the Ison based routing of

1913
01:38:37,850 --> 01:38:42,530
course we mention one for common

1914
01:38:39,500 --> 01:38:49,610
component we proposes service proxy so

1915
01:38:42,530 --> 01:38:52,160
the term knows suppose terminals as well

1916
01:38:49,610 --> 01:38:54,469
as a service approximate solution will

1917
01:38:52,160 --> 01:38:59,300
be demonstrated and as use case because

1918
01:38:54,470 --> 01:39:02,480
it will be you now with use case I

1919
01:38:59,300 --> 01:39:06,200
described in this draft example the HTTP

1920
01:39:02,480 --> 01:39:09,339
video streaming or video viewing yeah

1921
01:39:06,200 --> 01:39:12,530
but there you have any feedback or

1922
01:39:09,340 --> 01:39:15,820
question oh wait just keep going yeah I

1923
01:39:12,530 --> 01:39:19,759
guess I'm almost done I guess yeah

1924
01:39:15,820 --> 01:39:23,090
all right so quick question um you're

1925
01:39:19,760 --> 01:39:25,670
running you're running HTTP on top of an

1926
01:39:23,090 --> 01:39:32,420
ICN protocol yes

1927
01:39:25,670 --> 01:39:33,800
so what spec defines that mapping so you

1928
01:39:32,420 --> 01:39:36,020
say what's the back or yeah what

1929
01:39:33,800 --> 01:39:41,660
specification defines the mapping of

1930
01:39:36,020 --> 01:39:44,720
HTTP on to the ICN because I didn't see

1931
01:39:41,660 --> 01:39:47,180
it in this draft this dress was sort of

1932
01:39:44,720 --> 01:39:52,610
hand waves and say we map HTTP on top of

1933
01:39:47,180 --> 01:39:55,040
ICN I I guess a while a waffle idea was

1934
01:39:52,610 --> 01:39:57,500
to the icin because I should be a nice

1935
01:39:55,040 --> 01:40:00,340
and so basically you were asking how to

1936
01:39:57,500 --> 01:40:03,250
map right because both layers or

1937
01:40:00,340 --> 01:40:04,929
different a once idea is working to the

1938
01:40:03,250 --> 01:40:09,070
icing is going to be extended by

1939
01:40:04,929 --> 01:40:12,429
providing certain API to the upper

1940
01:40:09,070 --> 01:40:15,519
layers for example two or four api's

1941
01:40:12,429 --> 01:40:18,480
were described in the draft is send a

1942
01:40:15,520 --> 01:40:22,810
packet and a collection so using this

1943
01:40:18,480 --> 01:40:26,080
this assume this ice and API is there so

1944
01:40:22,810 --> 01:40:29,369
in order to use HTTP in a packet from a

1945
01:40:26,080 --> 01:40:32,110
source to a desolation the sender the

1946
01:40:29,369 --> 01:40:35,380
HIV layer and the sender is going to

1947
01:40:32,110 --> 01:40:37,780
call the API and talk call this isin API

1948
01:40:35,380 --> 01:40:40,150
talked to the ice in a layer and to the

1949
01:40:37,780 --> 01:40:42,759
cinder side and then send a packet down

1950
01:40:40,150 --> 01:40:46,360
to as in there from there the icing and

1951
01:40:42,760 --> 01:40:49,599
there is going to you know use the ice

1952
01:40:46,360 --> 01:40:52,480
and make known class the past based

1953
01:40:49,599 --> 01:40:54,400
forwarding in order to send a this ice

1954
01:40:52,480 --> 01:40:58,059
in packet of course a payload that will

1955
01:40:54,400 --> 01:41:00,489
be the HTTP packet sending this ice and

1956
01:40:58,060 --> 01:41:02,560
packet tail packet for example from one

1957
01:41:00,489 --> 01:41:06,280
you piaf for other UPF and eventually

1958
01:41:02,560 --> 01:41:11,320
the destination UPF is going to like you

1959
01:41:06,280 --> 01:41:13,719
know recover the original HIV packet and

1960
01:41:11,320 --> 01:41:16,090
send it to the eventually sent to UE for

1961
01:41:13,719 --> 01:41:17,619
example so basically to answer your

1962
01:41:16,090 --> 01:41:20,500
question you founder understood

1963
01:41:17,619 --> 01:41:22,469
correctly there will be something we

1964
01:41:20,500 --> 01:41:25,420
need to propose and we need to extend

1965
01:41:22,469 --> 01:41:28,810
the ice and near for example here is a

1966
01:41:25,420 --> 01:41:31,780
by providing certain api's to the upper

1967
01:41:28,810 --> 01:41:33,940
layer like HTTP ok thanks just quick

1968
01:41:31,780 --> 01:41:35,590
thing this still has me confused but not

1969
01:41:33,940 --> 01:41:37,210
to take time here on it which is that

1970
01:41:35,590 --> 01:41:43,239
sounds like that requires at least

1971
01:41:37,210 --> 01:41:46,810
double the packets of a native HTTP so

1972
01:41:43,239 --> 01:41:48,369
why don't we you know dive deeper into

1973
01:41:46,810 --> 01:41:49,599
this when you do the demo in Vancouver

1974
01:41:48,369 --> 01:41:51,909
that would be nice if you could explain

1975
01:41:49,599 --> 01:41:53,820
how the HTTP mapping we looks like yeah

1976
01:41:51,909 --> 01:41:57,280
cool thank you very much

1977
01:41:53,820 --> 01:42:00,929
ok next is we're done I'm gonna update

1978
01:41:57,280 --> 01:42:04,769
on hope I hope authentication in CC n X

1979
01:42:00,929 --> 01:42:04,770
or Indian

1980
01:42:22,610 --> 01:42:32,089
and never walk

1981
01:42:24,389 --> 01:42:32,090
I'm reading from nice

1982
01:42:38,510 --> 01:42:41,640
[Music]

1983
01:42:45,750 --> 01:42:52,630
yes I'm from a ICT Japan and today I

1984
01:42:49,750 --> 01:42:54,820
will present updates on the ha post

1985
01:42:52,630 --> 01:42:56,470
after hope I hope I was in the game in

1986
01:42:54,820 --> 01:43:00,309
containers in Germany Turkey and the

1987
01:42:56,470 --> 01:43:05,080
name written on it working last time we

1988
01:43:00,310 --> 01:43:08,680
at ITF 1:05 I presented that basically

1989
01:43:05,080 --> 01:43:11,440
design of the Hoppus theater market some

1990
01:43:08,680 --> 01:43:13,540
feedback on the motivation the initial

1991
01:43:11,440 --> 01:43:17,530
chasm and trust establishment and so

1992
01:43:13,540 --> 01:43:20,710
this time I give some updated for the

1993
01:43:17,530 --> 01:43:23,769
draft and this the updated my own

1994
01:43:20,710 --> 01:43:25,630
version zero one easier to the included

1995
01:43:23,770 --> 01:43:27,780
the motivation clarification and the

1996
01:43:25,630 --> 01:43:31,960
motifs collision on the initial trust

1997
01:43:27,780 --> 01:43:34,059
establishment first this is simple

1998
01:43:31,960 --> 01:43:36,700
introduction on the continental network

1999
01:43:34,060 --> 01:43:39,310
and numerator networking and there is a

2000
01:43:36,700 --> 01:43:41,410
consumer see another sign out as an

2001
01:43:39,310 --> 01:43:44,020
entry say and the end user where people

2002
01:43:41,410 --> 01:43:46,510
would either hope I hope finally reaches

2003
01:43:44,020 --> 01:43:49,540
the copy cooter and then copy hood a

2004
01:43:46,510 --> 01:43:52,480
reprise with date heart and in this

2005
01:43:49,540 --> 01:43:55,269
procedure the three entities involved

2006
01:43:52,480 --> 01:43:59,650
one is the publisher consumer and a copy

2007
01:43:55,270 --> 01:44:03,460
cooler we consider to add a virtual

2008
01:43:59,650 --> 01:44:05,469
model why is the content a poison

2009
01:44:03,460 --> 01:44:08,230
attackers yeah is the attacker

2010
01:44:05,470 --> 01:44:11,100
impersonated the copy hooda to provide a

2011
01:44:08,230 --> 01:44:14,259
free coca-cola broker uppity the data

2012
01:44:11,100 --> 01:44:17,260
the current in currently the company's

2013
01:44:14,260 --> 01:44:20,560
only signed with key of the ante who

2014
01:44:17,260 --> 01:44:22,870
publishes this data so the consumer may

2015
01:44:20,560 --> 01:44:25,390
always retrieve the wrong effect data

2016
01:44:22,870 --> 01:44:28,540
because of the because the Reuters

2017
01:44:25,390 --> 01:44:31,180
cannot details of entity of the data so

2018
01:44:28,540 --> 01:44:34,180
it is necessary for the rotor to use the

2019
01:44:31,180 --> 01:44:37,420
authentication service to for the

2020
01:44:34,180 --> 01:44:39,760
thousand kids that data so the second

2021
01:44:37,420 --> 01:44:42,430
attacker we consider is the inches of

2022
01:44:39,760 --> 01:44:44,860
flooding on Hokulea is the attacker can

2023
01:44:42,430 --> 01:44:49,870
impersonate the consumer to request the

2024
01:44:44,860 --> 01:44:52,839
data much existing worker faxing on the

2025
01:44:49,870 --> 01:44:56,320
restricting the inches at any rate so it

2026
01:44:52,840 --> 01:44:58,829
is ratified the treaty is necessary for

2027
01:44:56,320 --> 01:45:02,929
the copy Hooters to use

2028
01:44:58,829 --> 01:45:06,688
service to authenticate increased packet

2029
01:45:02,929 --> 01:45:09,260
this is a teacher some teachers of the

2030
01:45:06,689 --> 01:45:13,349
condom poisoning a tackle the attacker

2031
01:45:09,260 --> 01:45:16,709
who drew the providers effect of gravity

2032
01:45:13,349 --> 01:45:21,179
corrupted the data then the consumers in

2033
01:45:16,709 --> 01:45:22,949
out of the interest the end the data

2034
01:45:21,179 --> 01:45:26,939
faculty that we will be prior to the

2035
01:45:22,949 --> 01:45:30,058
consumer one so this is a proponent one

2036
01:45:26,939 --> 01:45:32,909
yet a consumer always reaches the wrong

2037
01:45:30,059 --> 01:45:36,079
data because the intermediator rota to

2038
01:45:32,909 --> 01:45:39,179
Lotter detected the benefit of the data

2039
01:45:36,079 --> 01:45:42,989
so after the SS the data was attached

2040
01:45:39,179 --> 01:45:45,269
hope I hope this data obviously the

2041
01:45:42,989 --> 01:45:49,320
consumer tool I send out of the interest

2042
01:45:45,269 --> 01:45:50,579
energy and also the wrong packet don't

2043
01:45:49,320 --> 01:45:53,280
did how we appear applied to the

2044
01:45:50,579 --> 01:45:56,909
consumer to from the cash the memory of

2045
01:45:53,280 --> 01:45:59,129
the closer rotor so the second problem

2046
01:45:56,909 --> 01:46:03,358
is that the fact era our Futurecast

2047
01:45:59,129 --> 01:46:06,899
which pollutes the rotors as a bit Russo

2048
01:46:03,359 --> 01:46:09,479
sprays so we identified two requirements

2049
01:46:06,899 --> 01:46:11,599
here the first requirement is after all

2050
01:46:09,479 --> 01:46:15,510
the rotors and on the past need to

2051
01:46:11,599 --> 01:46:18,119
verify the data before cashing but we do

2052
01:46:15,510 --> 01:46:21,510
not to avoid a heavy and complex tasks a

2053
01:46:18,119 --> 01:46:23,909
and the senior management cysteine the

2054
01:46:21,510 --> 01:46:27,059
second commonly that's the consumer need

2055
01:46:23,909 --> 01:46:29,909
to verify the computer and a data which

2056
01:46:27,059 --> 01:46:32,639
were pass to identify the some the

2057
01:46:29,909 --> 01:46:37,558
polluted auntie's besides the hub

2058
01:46:32,639 --> 01:46:39,419
verification this is introduction of the

2059
01:46:37,559 --> 01:46:42,359
inclusive radiant haircut the other is

2060
01:46:39,419 --> 01:46:44,489
the consumer send out the floods of the

2061
01:46:42,359 --> 01:46:48,629
increased to the native occur to me of a

2062
01:46:44,489 --> 01:46:52,709
machine the rotors so the first problem

2063
01:46:48,629 --> 01:46:54,570
is that the Nodoka may be broken of

2064
01:46:52,709 --> 01:46:57,539
course there are some much existing

2065
01:46:54,570 --> 01:47:00,570
worker-owned focusing on the road and

2066
01:46:57,539 --> 01:47:04,949
limiting so but finally there are still

2067
01:47:00,570 --> 01:47:08,429
some malicious interest can still reach

2068
01:47:04,949 --> 01:47:11,518
the copy hood so the cop car still need

2069
01:47:08,429 --> 01:47:13,010
to provide some priority the data so it

2070
01:47:11,519 --> 01:47:15,949
is not audio

2071
01:47:13,010 --> 01:47:18,870
solution so the what we identified two

2072
01:47:15,949 --> 01:47:23,489
requirements here also the first one is

2073
01:47:18,870 --> 01:47:28,290
there to the not the hopper rotor needs

2074
01:47:23,489 --> 01:47:31,169
to any eliminated changes chance of the

2075
01:47:28,290 --> 01:47:32,820
increase of flooding attack the second

2076
01:47:31,170 --> 01:47:36,000
commentator is a cop who don't need to

2077
01:47:32,820 --> 01:47:41,519
modify the increased apocalyptic before

2078
01:47:36,000 --> 01:47:44,460
reprise the data so the suppose in a

2079
01:47:41,520 --> 01:47:47,969
summary that is some summarized at

2080
01:47:44,460 --> 01:47:50,850
manageable hobos who policy is single

2081
01:47:47,969 --> 01:47:54,449
mechanism enabling the potential was

2082
01:47:50,850 --> 01:47:57,330
indication from any consumer to the data

2083
01:47:54,449 --> 01:48:00,210
to the copy holder in kanuni publisher

2084
01:47:57,330 --> 01:48:02,670
and also to the data retrieval path and

2085
01:48:00,210 --> 01:48:06,000
it also enables the router to

2086
01:48:02,670 --> 01:48:08,489
authenticate the interest so it is data

2087
01:48:06,000 --> 01:48:11,880
orange the mechanism and that doesn't

2088
01:48:08,489 --> 01:48:15,709
necessarily rely on the external servers

2089
01:48:11,880 --> 01:48:18,090
but it doesn't exclude the use of the

2090
01:48:15,710 --> 01:48:21,320
certificate authority as it is the

2091
01:48:18,090 --> 01:48:26,429
contributor to the suspension model we

2092
01:48:21,320 --> 01:48:31,620
propose during our hoppers but here I'll

2093
01:48:26,429 --> 01:48:34,380
introduce our modification and from here

2094
01:48:31,620 --> 01:48:37,650
is introduction on the initial trust

2095
01:48:34,380 --> 01:48:42,840
established and for the use of the CEO

2096
01:48:37,650 --> 01:48:48,239
certify Pournami we use the hash of the

2097
01:48:42,840 --> 01:48:51,389
public key to impurity into the name to

2098
01:48:48,239 --> 01:48:55,320
prevent the stoning and the progeny of

2099
01:48:51,389 --> 01:48:59,489
the existing names the solution here we

2100
01:48:55,320 --> 01:49:01,380
use the public key to is embedded into

2101
01:48:59,489 --> 01:49:02,250
the name to inability to be sealed

2102
01:49:01,380 --> 01:49:05,630
certifiable

2103
01:49:02,250 --> 01:49:09,000
the name owner can use the corresponding

2104
01:49:05,630 --> 01:49:11,460
private key to ascertain its ownership

2105
01:49:09,000 --> 01:49:14,790
to sign the message sent from this

2106
01:49:11,460 --> 01:49:18,230
entity with an M but we needed to notice

2107
01:49:14,790 --> 01:49:20,909
that an attacker can create a you name

2108
01:49:18,230 --> 01:49:23,519
from an arbitrary public key

2109
01:49:20,909 --> 01:49:27,110
however the attack cannot cannot

2110
01:49:23,520 --> 01:49:29,550
impersonate somebody else's name

2111
01:49:27,110 --> 01:49:31,650
here is the conclusion we updated the

2112
01:49:29,550 --> 01:49:35,370
tapas draft on the modification

2113
01:49:31,650 --> 01:49:38,780
clarification the initial trust match if

2114
01:49:35,370 --> 01:49:41,840
you trust the establishment thank you

2115
01:49:38,780 --> 01:49:41,840
thank you

2116
01:49:41,870 --> 01:50:09,200
any question okay okay so just change

2117
01:49:54,510 --> 01:50:09,200
again because a sudden can you come up

2118
01:50:16,910 --> 01:50:24,470
yeah this is adapter hell I don't think

2119
01:50:21,690 --> 01:50:24,469
we can't do this

2120
01:50:46,490 --> 01:50:54,280
[Music]

2121
01:50:48,510 --> 01:51:00,360
so we had a couple of additional society

2122
01:50:54,280 --> 01:51:04,570
events on ICN this time so one was a

2123
01:51:00,360 --> 01:51:08,049
heck of an activity by energy T and

2124
01:51:04,570 --> 01:51:10,809
colleagues on the C for implementation

2125
01:51:08,050 --> 01:51:12,700
another one was a Q s discussion that

2126
01:51:10,810 --> 01:51:15,370
wasn't really at the hackathon but that

2127
01:51:12,700 --> 01:51:22,389
took place on non Sunday which is really

2128
01:51:15,370 --> 01:51:25,809
like to update you on those so the

2129
01:51:22,390 --> 01:51:35,250
present me quick report are the support

2130
01:51:25,810 --> 01:51:37,810
project in this hack zone so simple is

2131
01:51:35,250 --> 01:51:39,610
open source software a software platform

2132
01:51:37,810 --> 01:51:44,380
in a weighing machine communication

2133
01:51:39,610 --> 01:51:49,000
which complete with two RF seeds the

2134
01:51:44,380 --> 01:51:51,130
main objective is to enhance to this

2135
01:51:49,000 --> 01:51:54,790
several functionality in the context of

2136
01:51:51,130 --> 01:51:56,380
the two proposed draft one is she's

2137
01:51:54,790 --> 01:52:01,269
aiming for and the secondary is network

2138
01:51:56,380 --> 01:52:05,920
coding position and the nvm so more

2139
01:52:01,270 --> 01:52:11,230
precisely in the second so we we

2140
01:52:05,920 --> 01:52:15,340
implemented two simple function y is a

2141
01:52:11,230 --> 01:52:18,730
network control using machine info which

2142
01:52:15,340 --> 01:52:21,040
can enable some operator to check out a

2143
01:52:18,730 --> 01:52:25,450
network connection in network condition

2144
01:52:21,040 --> 01:52:28,080
in a Turkish condition and which data

2145
01:52:25,450 --> 01:52:31,630
should be cached and the second is a

2146
01:52:28,080 --> 01:52:34,750
Content producer application using which

2147
01:52:31,630 --> 01:52:37,720
can utilize the network coding in the

2148
01:52:34,750 --> 01:52:41,170
context of she and communication so

2149
01:52:37,720 --> 01:52:44,080
other achievement we built an test it's

2150
01:52:41,170 --> 01:52:48,460
a basic problem module created to date

2151
01:52:44,080 --> 01:52:51,670
to function and we it's still ongoing

2152
01:52:48,460 --> 01:52:55,290
and we need to make more flexible and

2153
01:52:51,670 --> 01:52:57,520
feasible naming speak and the deal with

2154
01:52:55,290 --> 01:53:00,220
interest pocketers to improve

2155
01:52:57,520 --> 01:53:06,920
performance

2156
01:53:00,220 --> 01:53:09,560
so here the these team members and you

2157
01:53:06,920 --> 01:53:14,470
can get more information and the source

2158
01:53:09,560 --> 01:53:16,640
code or from this URL thank you okay

2159
01:53:14,470 --> 01:53:19,070
great so that that's great to see that

2160
01:53:16,640 --> 01:53:22,250
people are doing this microphone

2161
01:53:19,070 --> 01:53:28,309
activities so let's do more of this next

2162
01:53:22,250 --> 01:53:32,170
time thank you very much and another

2163
01:53:28,310 --> 01:53:32,170
laptop switch let's see how it goes

2164
01:53:42,099 --> 01:53:48,780
 that's but yeah much better

2165
01:54:01,590 --> 01:54:17,040
oh you switch to marking them on yeah

2166
01:54:15,000 --> 01:54:45,080
sorry the presentation laptop didn't

2167
01:54:17,040 --> 01:54:49,380
work today so I'm just going to sit down

2168
01:54:45,080 --> 01:54:51,570
um so as you know we announced a sort of

2169
01:54:49,380 --> 01:54:53,970
an informal side meeting about what I

2170
01:54:51,570 --> 01:54:57,269
see and RG might be doing about quality

2171
01:54:53,970 --> 01:54:59,400
of service stuff going forward and we

2172
01:54:57,270 --> 01:55:01,760
didn't get a lot of attendance but the

2173
01:54:59,400 --> 01:55:04,559
attendance we got was some pretty good

2174
01:55:01,760 --> 01:55:05,670
engagement from variety of people so I'm

2175
01:55:04,560 --> 01:55:07,740
just going to quickly run through some

2176
01:55:05,670 --> 01:55:11,010
of the things we talked about and our

2177
01:55:07,740 --> 01:55:12,870
idea is if people are interested in

2178
01:55:11,010 --> 01:55:15,030
they'll take a poll at the end whether

2179
01:55:12,870 --> 01:55:17,309
we should have a follow on inform we'll

2180
01:55:15,030 --> 01:55:20,670
get together later this week we would be

2181
01:55:17,310 --> 01:55:24,870
targeting the early the morning open

2182
01:55:20,670 --> 01:55:29,000
slots for Thursday in order to get

2183
01:55:24,870 --> 01:55:32,190
together so we we looked at the existing

2184
01:55:29,000 --> 01:55:34,920
drafts that have that address various

2185
01:55:32,190 --> 01:55:39,059
quality of service things but the

2186
01:55:34,920 --> 01:55:40,560
discussion ranged somewhat wider so some

2187
01:55:39,060 --> 01:55:42,630
of the things people seem to want to

2188
01:55:40,560 --> 01:55:44,790
talk about is what what interesting

2189
01:55:42,630 --> 01:55:48,330
research can we support by working on

2190
01:55:44,790 --> 01:55:51,030
quality of service stuff do we want to

2191
01:55:48,330 --> 01:55:54,120
actually try to come up with a defined

2192
01:55:51,030 --> 01:55:57,000
architecture for doing quality of

2193
01:55:54,120 --> 01:55:59,430
service in ICN how much should are the

2194
01:55:57,000 --> 01:56:03,030
experience we have doing quality of

2195
01:55:59,430 --> 01:56:04,740
service work in the IOT and low end low

2196
01:56:03,030 --> 01:56:07,050
bandwidth low capability network

2197
01:56:04,740 --> 01:56:08,490
environment use that to drive some of

2198
01:56:07,050 --> 01:56:10,920
our quality of service work because

2199
01:56:08,490 --> 01:56:13,650
that's where people have spent a lot of

2200
01:56:10,920 --> 01:56:15,510
time sort of like the high level

2201
01:56:13,650 --> 01:56:18,000
question is who cares

2202
01:56:15,510 --> 01:56:19,800
if people don't care there's not going

2203
01:56:18,000 --> 01:56:22,740
to be enough participation to really

2204
01:56:19,800 --> 01:56:25,110
make some progress some more detailed

2205
01:56:22,740 --> 01:56:28,590
questions like do we want to mirror the

2206
01:56:25,110 --> 01:56:30,630
kind of class-based quality of service

2207
01:56:28,590 --> 01:56:32,970
capabilities that diffserv provides or

2208
01:56:30,630 --> 01:56:35,700
do we want to also accommodate flow

2209
01:56:32,970 --> 01:56:38,310
style quality of service capabilities

2210
01:56:35,700 --> 01:56:39,990
similar to what M serve does and who

2211
01:56:38,310 --> 01:56:41,550
will implement and measure whatever we

2212
01:56:39,990 --> 01:56:43,800
come up with because if we just write

2213
01:56:41,550 --> 01:56:46,020
specs that'll be you know fun for

2214
01:56:43,800 --> 01:56:48,030
putting things together but not really

2215
01:56:46,020 --> 01:56:49,500
affect things so we have a whole bunch

2216
01:56:48,030 --> 01:56:52,349
of notes I'm not going to go through all

2217
01:56:49,500 --> 01:56:55,890
the notes there they've been posted to

2218
01:56:52,350 --> 01:56:58,770
the data tracker but just to give you a

2219
01:56:55,890 --> 01:57:00,780
sense of of what we talked about we

2220
01:56:58,770 --> 01:57:03,570
talked a bit about what the alternatives

2221
01:57:00,780 --> 01:57:06,360
are for flow classification we talked

2222
01:57:03,570 --> 01:57:08,969
about some of our terminology is kind of

2223
01:57:06,360 --> 01:57:11,849
loose and we need to to clean it up some

2224
01:57:08,970 --> 01:57:13,620
more for example there's already some

2225
01:57:11,850 --> 01:57:15,960
confusion about why some people think

2226
01:57:13,620 --> 01:57:18,240
flowing congestion control are sort of

2227
01:57:15,960 --> 01:57:20,850
very closely related to one another and

2228
01:57:18,240 --> 01:57:22,800
other people think those are sort of

2229
01:57:20,850 --> 01:57:23,970
separate topics and you want to talk

2230
01:57:22,800 --> 01:57:29,430
about flow control and congestion

2231
01:57:23,970 --> 01:57:31,260
control separately and whether QoS

2232
01:57:29,430 --> 01:57:34,890
treatments should be bound together with

2233
01:57:31,260 --> 01:57:37,680
flow classification or not so there is

2234
01:57:34,890 --> 01:57:39,200
some sort of general talk about about

2235
01:57:37,680 --> 01:57:43,110
this quality of service architecture

2236
01:57:39,200 --> 01:57:45,809
polemic that that then I published a few

2237
01:57:43,110 --> 01:57:46,469
months ago and what we should do about

2238
01:57:45,810 --> 01:57:48,660
that

2239
01:57:46,470 --> 01:57:50,940
we're interested in more feedback on

2240
01:57:48,660 --> 01:57:54,150
that I think our default after talking

2241
01:57:50,940 --> 01:57:57,210
to Colin is to actually move it through

2242
01:57:54,150 --> 01:58:00,179
I cnrg but treated as an individual

2243
01:57:57,210 --> 01:58:01,770
submission so it doesn't bias our future

2244
01:58:00,180 --> 01:58:07,920
work in coming up with a quality of

2245
01:58:01,770 --> 01:58:09,090
service architecture I'm trying to think

2246
01:58:07,920 --> 01:58:10,740
if there's anything in here that I

2247
01:58:09,090 --> 01:58:16,970
couldn't that you just couldn't figure

2248
01:58:10,740 --> 01:58:16,969
out by looking at the at the materials

2249
01:58:17,450 --> 01:58:23,040
no I think that's about it so please

2250
01:58:20,490 --> 01:58:24,750
look at this stuff ask questions and let

2251
01:58:23,040 --> 01:58:26,370
me just get a show of hands who might be

2252
01:58:24,750 --> 01:58:28,700
interested in showing up Thursday

2253
01:58:26,370 --> 01:58:35,050
morning for further discussions on this

2254
01:58:28,700 --> 01:58:37,370
topic all right all right so we'll do it

2255
01:58:35,050 --> 01:58:38,840
instead of doing a doodle poll since

2256
01:58:37,370 --> 01:58:41,269
there aren't very many options other

2257
01:58:38,840 --> 01:58:44,740
than really Thursday morning um we'll

2258
01:58:41,270 --> 01:58:44,740
try and get a room yes

2259
01:58:46,000 --> 01:58:52,790
it would be in the open tslot time from

2260
01:58:49,610 --> 01:58:54,019
8:00 to 9:30 right so since there seems

2261
01:58:52,790 --> 01:58:56,150
to be enough interest

2262
01:58:54,020 --> 01:58:59,210
we'll go and try and schedule a room and

2263
01:58:56,150 --> 01:59:01,099
and send the room information to the to

2264
01:58:59,210 --> 01:59:02,330
the IC n RG list for Thursday morning

2265
01:59:01,100 --> 01:59:05,830
okay

2266
01:59:02,330 --> 01:59:08,150
okay great I think we're done yeah so

2267
01:59:05,830 --> 01:59:10,250
thank you also as you have seen I mean

2268
01:59:08,150 --> 01:59:11,750
this was a pretty packed agenda so thank

2269
01:59:10,250 --> 01:59:15,050
you all for your contribution and your

2270
01:59:11,750 --> 01:59:17,420
discipline so next time we'll have to

2271
01:59:15,050 --> 01:59:19,550
find a way how to deal with that so we

2272
01:59:17,420 --> 01:59:22,010
are likely going for another full day

2273
01:59:19,550 --> 01:59:24,050
interim on the other hand we would also

2274
01:59:22,010 --> 01:59:26,150
like to encourage more hackathon work

2275
01:59:24,050 --> 01:59:30,230
and so this what kind of conflict was

2276
01:59:26,150 --> 01:59:33,320
the weekend before so maybe let's

2277
01:59:30,230 --> 01:59:34,969
discuss this a little bit so if you want

2278
01:59:33,320 --> 01:59:37,340
to do some hackathon activities at the

2279
01:59:34,970 --> 01:59:40,310
next ITF it would be good to let people

2280
01:59:37,340 --> 01:59:42,500
know in advance so we can Kona a little

2281
01:59:40,310 --> 01:59:44,600
bit and make sure that you have good

2282
01:59:42,500 --> 01:59:48,200
attendance at you a cup on table or

2283
01:59:44,600 --> 01:59:57,950
she's please give us back the blue

2284
01:59:48,200 --> 02:00:00,670
sheets and enjoy your lunch okay we're

2285
01:59:57,950 --> 02:00:00,670
done thank you very much

2286
02:00:31,220 --> 02:00:34,359
[Music]

