1
00:01:27,820 --> 00:01:48,020
some little room I'm glad I'm sitting

2
00:01:30,859 --> 00:01:56,619
down there but that doesn't work no so

3
00:01:48,020 --> 00:01:56,619
maybe we should still because

4
00:02:53,850 --> 00:02:56,930
[Music]

5
00:03:04,670 --> 00:03:15,409
[Music]

6
00:03:06,519 --> 00:03:16,700
Thanks fine me deco people I think the

7
00:03:15,409 --> 00:03:22,519
last session of Tuesday

8
00:03:16,700 --> 00:03:31,548
this is DNS op we have two minutes

9
00:03:22,519 --> 00:03:35,299
Arcanum right always ahead oh no it's

10
00:03:31,549 --> 00:03:37,129
late you slackers so we are three

11
00:03:35,299 --> 00:03:39,650
minutes late um

12
00:03:37,129 --> 00:03:42,170
welcome to DNS op the last meeting for

13
00:03:39,650 --> 00:03:45,069
Tuesday I am Tim that's Ben oh that's

14
00:03:42,170 --> 00:03:45,069
Susan down at the other end

15
00:03:45,400 --> 00:03:53,260
Warren's over there he's our area

16
00:03:48,170 --> 00:03:56,149
director Paul's doing minutes hi Paul

17
00:03:53,260 --> 00:04:00,790
poor Dan York didn't make it so Tim

18
00:03:56,150 --> 00:04:04,040
where is Tim I don't see Tim the other

19
00:04:00,790 --> 00:04:06,470
okay I need my glasses there we go

20
00:04:04,040 --> 00:04:11,720
Thanks he's gonna be doing Jabba scribe

21
00:04:06,470 --> 00:04:14,720
so the note well please note it details

22
00:04:11,720 --> 00:04:18,858
etc etc etc you know what's going on

23
00:04:14,720 --> 00:04:20,959
there so this is session one but there's

24
00:04:18,858 --> 00:04:23,570
blue sheets going around so please fill

25
00:04:20,959 --> 00:04:26,330
them in the rule will be smaller next

26
00:04:23,570 --> 00:04:29,599
time which right now doesn't look too

27
00:04:26,330 --> 00:04:31,900
bad so let's kind of looks kind of sad

28
00:04:29,599 --> 00:04:31,900
and empty

29
00:04:31,960 --> 00:04:37,099
it's our agenda today it's an hour and a

30
00:04:34,580 --> 00:04:39,530
half I think um mostly updates on some

31
00:04:37,099 --> 00:04:44,150
old work the hackathon updates and some

32
00:04:39,530 --> 00:04:45,888
current working group business there's

33
00:04:44,150 --> 00:04:48,080
only like three or four different talks

34
00:04:45,889 --> 00:04:49,669
since our last meeting we believe it's

35
00:04:48,080 --> 00:04:51,139
been kind of sad guess we haven't had a

36
00:04:49,669 --> 00:04:54,889
great fall

37
00:04:51,139 --> 00:04:57,830
capture format finally got done obsolete

38
00:04:54,889 --> 00:04:59,570
vlv is in the end of the queue I tell

39
00:04:57,830 --> 00:05:03,020
you for moving something historic that's

40
00:04:59,570 --> 00:05:04,310
a lot of work you know I what did I

41
00:05:03,020 --> 00:05:08,630
actually spend way too much energy on

42
00:05:04,310 --> 00:05:11,570
that so when they say the output of the

43
00:05:08,630 --> 00:05:13,589
IETF is is documents it's like it's like

44
00:05:11,570 --> 00:05:16,558
it's a One Direction thing so

45
00:05:13,589 --> 00:05:18,569
I do think we somehow need to fix that

46
00:05:16,559 --> 00:05:21,719
the poor camel was suffering on that one

47
00:05:18,569 --> 00:05:24,299
so but that should be done soon we've

48
00:05:21,719 --> 00:05:26,849
got two things in the is GQ serve sale

49
00:05:24,299 --> 00:05:30,119
which looks like berry released this

50
00:05:26,849 --> 00:05:31,019
morning and the no response issue which

51
00:05:30,119 --> 00:05:34,889
I pushed out

52
00:05:31,019 --> 00:05:36,689
we have two write-ups going on and I am

53
00:05:34,889 --> 00:05:38,069
committing I had to apologize to Ben oh

54
00:05:36,689 --> 00:05:42,389
like three times yesterday because I

55
00:05:38,069 --> 00:05:45,569
want 2845 biz done this week we're gonna

56
00:05:42,389 --> 00:05:46,709
push that along and so that's our

57
00:05:45,569 --> 00:05:50,969
commitment to you that will have that

58
00:05:46,709 --> 00:05:53,369
Shepherd write-up done and probably 7706

59
00:05:50,969 --> 00:05:55,319
biz there is that one update that I

60
00:05:53,369 --> 00:05:57,509
believe the authors did and as long as

61
00:05:55,319 --> 00:05:59,069
that addresses it will do the same there

62
00:05:57,509 --> 00:05:59,629
so hopefully by the end of the week

63
00:05:59,069 --> 00:06:02,099
Friday

64
00:05:59,629 --> 00:06:04,829
that'll be all moving along because we

65
00:06:02,099 --> 00:06:06,688
have two things oh we have extended

66
00:06:04,829 --> 00:06:09,629
error which is coming up today that's

67
00:06:06,689 --> 00:06:13,499
good times the multi provider Dean has

68
00:06:09,629 --> 00:06:16,109
sex we need some comments from folks so

69
00:06:13,499 --> 00:06:17,519
we've heard a few things but we should

70
00:06:16,109 --> 00:06:19,289
get some emails from folks to say

71
00:06:17,519 --> 00:06:22,919
whether they want to move it through

72
00:06:19,289 --> 00:06:26,219
working group last call or not we

73
00:06:22,919 --> 00:06:28,399
believe it's it's a good solid document

74
00:06:26,219 --> 00:06:31,549
we just need to hear some more stuff so

75
00:06:28,399 --> 00:06:34,499
either way kind of thing please folks

76
00:06:31,549 --> 00:06:37,679
send some emails do something maybe the

77
00:06:34,499 --> 00:06:42,539
authors can leverage them their goodwill

78
00:06:37,679 --> 00:06:43,739
on people and ready for working group

79
00:06:42,539 --> 00:06:44,938
last call and we've been sitting on

80
00:06:43,739 --> 00:06:46,768
these mostly because we've been trying

81
00:06:44,939 --> 00:06:48,479
to get the other document son and they

82
00:06:46,769 --> 00:06:50,549
just don't want to go as fast as we want

83
00:06:48,479 --> 00:06:52,469
them to the zone digest I can it with

84
00:06:50,549 --> 00:06:55,229
which Dewayne will talk about briefly

85
00:06:52,469 --> 00:06:59,039
and the TCP requirements that he's gonna

86
00:06:55,229 --> 00:07:01,889
talk about briefly on Thursday and we

87
00:06:59,039 --> 00:07:02,909
don't think they need a lot but we've

88
00:07:01,889 --> 00:07:04,409
been really just trying to get that

89
00:07:02,909 --> 00:07:07,109
backlog going so we can start pushing

90
00:07:04,409 --> 00:07:10,829
these out because we got stuff going on

91
00:07:07,109 --> 00:07:13,558
and we finally adopted that yang

92
00:07:10,829 --> 00:07:17,129
document the Cheras wanted to send it to

93
00:07:13,559 --> 00:07:19,049
the ops area and then Warren said well

94
00:07:17,129 --> 00:07:20,759
that's where drafts go to die and I was

95
00:07:19,049 --> 00:07:23,609
like that's what I thought Deana stock

96
00:07:20,759 --> 00:07:25,639
was four so we were kind of confused by

97
00:07:23,610 --> 00:07:28,370
that so but

98
00:07:25,639 --> 00:07:29,659
it's only gonna sit there until the ihe

99
00:07:28,370 --> 00:07:33,770
kind of figures out this whole yang

100
00:07:29,659 --> 00:07:35,379
problem so that's probably the most

101
00:07:33,770 --> 00:07:41,840
simple way of putting it

102
00:07:35,379 --> 00:07:43,460
so we've got a couple other documents

103
00:07:41,840 --> 00:07:46,099
that we're not going to talk about the

104
00:07:43,460 --> 00:07:46,609
7816 biz which expired that's kind of

105
00:07:46,099 --> 00:07:50,270
sad

106
00:07:46,610 --> 00:07:51,229
so we'll have to find Stefan and see

107
00:07:50,270 --> 00:07:53,659
what's going on there

108
00:07:51,229 --> 00:07:56,840
they ain't named document it's actually

109
00:07:53,659 --> 00:07:57,379
gonna be discussed what's that did I get

110
00:07:56,840 --> 00:08:01,479
that wrong

111
00:07:57,379 --> 00:08:04,250
oh is that in D Prime no it's not I

112
00:08:01,479 --> 00:08:06,500
didn't know that's Paul Hoffman

113
00:08:04,250 --> 00:08:07,939
co-author on 7816 biz

114
00:08:06,500 --> 00:08:10,129
I've been waitin on the working group

115
00:08:07,939 --> 00:08:12,439
chairs to say whether you want us to be

116
00:08:10,129 --> 00:08:14,719
moving it forwards or not oh I've sent

117
00:08:12,439 --> 00:08:17,659
my badges over the last six months cuz

118
00:08:14,719 --> 00:08:18,199
we're ready to revive it I I apologize

119
00:08:17,659 --> 00:08:21,020
okay

120
00:08:18,199 --> 00:08:23,090
usually no we were waiting on you you

121
00:08:21,020 --> 00:08:26,090
you would last time you had said we've

122
00:08:23,090 --> 00:08:30,770
got a lot going on and so for those who

123
00:08:26,090 --> 00:08:33,799
don't know 7816 basis' q name

124
00:08:30,770 --> 00:08:35,870
minimization and the miss will be both

125
00:08:33,799 --> 00:08:40,069
to possibly put on standards track but

126
00:08:35,870 --> 00:08:44,329
to mostly to show what has been found

127
00:08:40,070 --> 00:08:46,160
out you know in in deployments and we've

128
00:08:44,329 --> 00:08:48,170
got some interesting research articles

129
00:08:46,160 --> 00:08:50,449
and such like that so last I heard you

130
00:08:48,170 --> 00:08:51,829
were waiting until things sort of settle

131
00:08:50,449 --> 00:08:54,079
down here because we weren't in a rush

132
00:08:51,829 --> 00:08:56,300
we're happy to try and Ralph said that

133
00:08:54,079 --> 00:08:58,819
he would co-author we're ready to do it

134
00:08:56,300 --> 00:09:00,349
do you want us to go ahead yeah I figure

135
00:08:58,820 --> 00:09:03,860
because you should get your chairs a

136
00:09:00,350 --> 00:09:09,140
little bit more no we missed that um no

137
00:09:03,860 --> 00:09:11,149
yeah okay no right the a name draft

138
00:09:09,140 --> 00:09:13,699
there's actually part of the discussion

139
00:09:11,149 --> 00:09:14,990
on the Ben and Eric's draft actually

140
00:09:13,699 --> 00:09:16,189
sort of covers some stuff in there

141
00:09:14,990 --> 00:09:21,620
there's some actually some interesting

142
00:09:16,190 --> 00:09:23,360
stuff some good slides in there these we

143
00:09:21,620 --> 00:09:27,079
aren't actually gonna really cover the

144
00:09:23,360 --> 00:09:29,690
terminology turf and we figured some

145
00:09:27,079 --> 00:09:31,219
stuff's gonna come up from that ABCD

146
00:09:29,690 --> 00:09:34,370
buff that happened earlier today and

147
00:09:31,220 --> 00:09:35,600
some other stuff so who knows probably

148
00:09:34,370 --> 00:09:38,440
the next meeting will be in shape to do

149
00:09:35,600 --> 00:09:39,759
something and the resolver information

150
00:09:38,440 --> 00:09:41,620
people seem to be implementing it but

151
00:09:39,759 --> 00:09:45,220
they're just not talking about it so

152
00:09:41,620 --> 00:09:47,290
those which cannot be named but there's

153
00:09:45,220 --> 00:09:49,209
actually deprived documents that seem to

154
00:09:47,290 --> 00:09:51,189
be referencing it so that's why I was

155
00:09:49,209 --> 00:09:55,750
kind of wondering where that status was

156
00:09:51,190 --> 00:09:56,649
so that's kind of else and there isn't

157
00:09:55,750 --> 00:09:58,449
stuff's going to be talked about either

158
00:09:56,649 --> 00:10:00,639
today or Thursday most of it's all today

159
00:09:58,449 --> 00:10:04,540
and that's you know in the data tracker

160
00:10:00,639 --> 00:10:07,060
or on our github we have an adopted a

161
00:10:04,540 --> 00:10:09,069
bunch we haven't seen a lot that people

162
00:10:07,060 --> 00:10:11,079
seem to be sort of thrilled on that may

163
00:10:09,069 --> 00:10:13,810
change after they've bought this book

164
00:10:11,079 --> 00:10:16,359
this afternoon so Benno's gonna talk

165
00:10:13,810 --> 00:10:18,369
hackathon updates and then I think we'll

166
00:10:16,360 --> 00:10:19,990
kick over to Duane and sort of take it

167
00:10:18,370 --> 00:10:21,550
from there and I'm gonna think I'm good

168
00:10:19,990 --> 00:10:27,209
I think and you sit down because there's

169
00:10:21,550 --> 00:10:27,209
no room up here so so thanks all

170
00:10:28,860 --> 00:10:32,019
[Music]

171
00:10:40,649 --> 00:10:45,409
there we are

172
00:10:42,370 --> 00:10:45,409
[Music]

173
00:10:47,430 --> 00:10:50,489
[Music]

174
00:10:48,569 --> 00:10:56,139
more practical

175
00:10:50,490 --> 00:10:58,379
well this ITF this hackathon as usual a

176
00:10:56,139 --> 00:11:01,930
group of Venus software engineers

177
00:10:58,379 --> 00:11:04,499
gathered around the table and also as

178
00:11:01,930 --> 00:11:07,449
usual other than other groups actually

179
00:11:04,499 --> 00:11:09,579
we didn't have a plan one single plan we

180
00:11:07,449 --> 00:11:13,689
had a number of plans so each software

181
00:11:09,579 --> 00:11:15,910
developer worked on an ID and most of

182
00:11:13,689 --> 00:11:17,740
these IDs are directly relevant to the

183
00:11:15,910 --> 00:11:20,829
needs of working group or deprived

184
00:11:17,740 --> 00:11:22,629
working group so if we consider the

185
00:11:20,829 --> 00:11:25,388
number of themes which Dena's privacy

186
00:11:22,629 --> 00:11:28,720
protocol improvement service

187
00:11:25,389 --> 00:11:31,360
provisioning SPSS FEC and eNOS

188
00:11:28,720 --> 00:11:34,269
monitoring which is not that directly

189
00:11:31,360 --> 00:11:36,639
Dinah's up working group related but

190
00:11:34,269 --> 00:11:42,370
could work anyways and worth mentioning

191
00:11:36,639 --> 00:11:45,639
good under Dena's privacy beam Manu

192
00:11:42,370 --> 00:11:50,050
retai worked on dienes over TLS to

193
00:11:45,639 --> 00:11:51,670
authoritative so it was kind of how

194
00:11:50,050 --> 00:11:53,378
could that work how can we make it work

195
00:11:51,670 --> 00:11:56,620
that from a recursive to an

196
00:11:53,379 --> 00:11:58,269
authoritative so it worked on a set of

197
00:11:56,620 --> 00:12:00,699
net blocks specifying a kind of

198
00:11:58,269 --> 00:12:05,379
whitelist of set of net blocks that are

199
00:12:00,699 --> 00:12:07,689
d-o-t enabled including an house name

200
00:12:05,379 --> 00:12:14,529
for verification so you can specify it

201
00:12:07,689 --> 00:12:16,748
ABC 0/24 and then DLT is mandatory how

202
00:12:14,529 --> 00:12:18,879
to come this to bootstrap this list

203
00:12:16,749 --> 00:12:20,860
that's something the deprived working

204
00:12:18,879 --> 00:12:24,579
group has to work upon so this is not

205
00:12:20,860 --> 00:12:27,309
soft but at least this could be a way to

206
00:12:24,579 --> 00:12:32,699
implement it once this discovery has

207
00:12:27,309 --> 00:12:37,059
been specified dinners all over HTTP

208
00:12:32,699 --> 00:12:39,910
design in by nine so recently all the

209
00:12:37,059 --> 00:12:43,209
network code has been refactored out of

210
00:12:39,910 --> 00:12:45,999
the DNS well separated from the dns

211
00:12:43,209 --> 00:12:49,029
codes in by nine so and with this new

212
00:12:45,999 --> 00:12:51,819
design the new network design do H as

213
00:12:49,029 --> 00:12:53,740
been can be easily or more easily fitted

214
00:12:51,819 --> 00:12:56,439
in in by nine so

215
00:12:53,740 --> 00:13:00,210
Andre words on that and about timelines

216
00:12:56,440 --> 00:13:00,210
I'm not sure somewhere early next year

217
00:13:00,240 --> 00:13:07,420
Dinah's over hb3 quick bene in senti

218
00:13:06,010 --> 00:13:11,319
works on a proof of concept

219
00:13:07,420 --> 00:13:14,640
implementation based on the clouds flare

220
00:13:11,320 --> 00:13:18,400
Kish library it's also working progress

221
00:13:14,640 --> 00:13:21,550
it's good bristles here Dena's protocol

222
00:13:18,400 --> 00:13:24,280
improvement villain will tell Willam

223
00:13:21,550 --> 00:13:26,890
worked on it together with Andre and it

224
00:13:24,280 --> 00:13:30,160
was interesting it's kind of finalizing

225
00:13:26,890 --> 00:13:32,350
the draft but also testing IDs so if the

226
00:13:30,160 --> 00:13:34,150
draft we specified this way it can be

227
00:13:32,350 --> 00:13:37,110
implemented in this is performance so it

228
00:13:34,150 --> 00:13:39,760
was interesting and so forth between

229
00:13:37,110 --> 00:13:42,100
specification implementation and said it

230
00:13:39,760 --> 00:13:45,550
was very worthwhile villain will tell

231
00:13:42,100 --> 00:13:47,650
more about this later extended error the

232
00:13:45,550 --> 00:13:51,339
draft will also be presented later there

233
00:13:47,650 --> 00:13:54,939
was already some code in unbound and Tim

234
00:13:51,340 --> 00:13:59,460
Rotenberg and low Gordon he were worked

235
00:13:54,940 --> 00:14:03,660
on well on update in the couch in in

236
00:13:59,460 --> 00:14:06,160
what in according to the latest draft

237
00:14:03,660 --> 00:14:10,569
also working progress was not completed

238
00:14:06,160 --> 00:14:14,430
yet during the hackathon the service

239
00:14:10,570 --> 00:14:17,620
provisioning so Ralph Norman's words on

240
00:14:14,430 --> 00:14:21,189
an update of his implementation in the

241
00:14:17,620 --> 00:14:26,950
last hackathon last in Montreal Roth

242
00:14:21,190 --> 00:14:30,310
implemented the HTTP HTTP VC as SVC the

243
00:14:26,950 --> 00:14:31,870
draft has been updated so Rolf also

244
00:14:30,310 --> 00:14:35,439
updated the implementation inbound

245
00:14:31,870 --> 00:14:37,270
including the SVC be records and not

246
00:14:35,440 --> 00:14:39,370
everybody has tested but there are some

247
00:14:37,270 --> 00:14:42,100
similarities so it's good work here

248
00:14:39,370 --> 00:14:44,980
going on and there will be some feedback

249
00:14:42,100 --> 00:14:50,010
to the document specifically for the

250
00:14:44,980 --> 00:14:52,480
implementation details Dina's monitoring

251
00:14:50,010 --> 00:14:56,680
Paul Hoffman and violent or worked

252
00:14:52,480 --> 00:15:01,090
together on a tool so the project is

253
00:14:56,680 --> 00:15:03,520
about well the project is more than only

254
00:15:01,090 --> 00:15:05,770
this tool but the project is about the

255
00:15:03,520 --> 00:15:08,579
kind of the performance performance

256
00:15:05,770 --> 00:15:10,319
indicators of the root system

257
00:15:08,579 --> 00:15:14,430
and that there has to be hundred percent

258
00:15:10,319 --> 00:15:17,490
so one of the things is they want to

259
00:15:14,430 --> 00:15:20,219
test the the DNS responses from the past

260
00:15:17,490 --> 00:15:23,730
so Phila dating a root zone you have

261
00:15:20,220 --> 00:15:25,740
something like filadyne s or Aldean s 35

262
00:15:23,730 --> 00:15:29,189
zone but that's the zone file it's not

263
00:15:25,740 --> 00:15:33,480
the response from a name server so vilem

264
00:15:29,189 --> 00:15:38,550
and Paul worked together to build a tool

265
00:15:33,480 --> 00:15:40,889
to do some well to store queries from

266
00:15:38,550 --> 00:15:43,649
the past or to store queries for later

267
00:15:40,889 --> 00:15:49,290
do the chain validation the DNA SEC

268
00:15:43,649 --> 00:15:52,499
validation of answers so to summarize it

269
00:15:49,290 --> 00:15:56,759
correctly thank you good code is on the

270
00:15:52,499 --> 00:15:59,639
github hackathon website that's it these

271
00:15:56,759 --> 00:16:01,829
are the the hackers my name is also

272
00:15:59,639 --> 00:16:03,990
between that you might notice that I was

273
00:16:01,829 --> 00:16:04,679
not associated with any of the projects

274
00:16:03,990 --> 00:16:09,480
that's correct

275
00:16:04,679 --> 00:16:13,949
I'm just talking out here exactly I

276
00:16:09,480 --> 00:16:16,079
brought the coffee also important that's

277
00:16:13,949 --> 00:16:18,748
it maybe some questions follow-ups

278
00:16:16,079 --> 00:16:20,758
otherwise go directly to the to the to

279
00:16:18,749 --> 00:16:23,639
the hackers to the software developers

280
00:16:20,759 --> 00:16:30,779
for more questions that's it that's my

281
00:16:23,639 --> 00:16:35,939
part ok I think Duane is next up but

282
00:16:30,779 --> 00:16:37,860
just as a really rap rap rap oh sorry it

283
00:16:35,939 --> 00:16:40,829
seemed it is really really useful this

284
00:16:37,860 --> 00:16:42,329
hackathon and we see much if we make

285
00:16:40,829 --> 00:16:45,540
quite some progress during this

286
00:16:42,329 --> 00:16:47,969
interaction with group of people two

287
00:16:45,540 --> 00:16:49,740
days around the table and discuss IDs

288
00:16:47,970 --> 00:16:52,170
it's not only coding it's also a lot of

289
00:16:49,740 --> 00:16:56,040
talking about good ideas and how to for

290
00:16:52,170 --> 00:16:58,490
go forward Thanks I will pull up your

291
00:16:56,040 --> 00:16:58,490
slide

292
00:17:16,398 --> 00:17:24,148
all right so I'm doing this is a just a

293
00:17:21,148 --> 00:17:28,049
few minutes about the status of the the

294
00:17:24,148 --> 00:17:31,850
message digest for DNS zones draft so

295
00:17:28,049 --> 00:17:34,279
for a while now this this draft has

296
00:17:31,850 --> 00:17:38,369
supported the idea of algorithm agility

297
00:17:34,279 --> 00:17:40,529
that this is a change from the variance

298
00:17:38,369 --> 00:17:44,600
so now there is the idea of having

299
00:17:40,529 --> 00:17:46,860
multiple zone MD records in the zone

300
00:17:44,600 --> 00:17:48,209
after after that change was published

301
00:17:46,860 --> 00:17:49,979
there was some some good feedback from a

302
00:17:48,210 --> 00:17:51,840
couple of people who pointed out some

303
00:17:49,980 --> 00:17:53,879
some issues with sort of forward and

304
00:17:51,840 --> 00:17:56,299
backward compatibility so an important

305
00:17:53,879 --> 00:17:59,570
change in the very last version is that

306
00:17:56,299 --> 00:18:01,499
the the digest type field and the

307
00:17:59,570 --> 00:18:03,418
formerly called the reserved field now

308
00:18:01,499 --> 00:18:04,769
called the parameter field sort of the

309
00:18:03,419 --> 00:18:07,200
interpretations of those has changed

310
00:18:04,769 --> 00:18:09,629
previously the their interpretations

311
00:18:07,200 --> 00:18:11,730
were independent from each other but but

312
00:18:09,629 --> 00:18:13,649
in the current version the the inter

313
00:18:11,730 --> 00:18:17,369
meaning of the parameter field depends

314
00:18:13,649 --> 00:18:18,689
on on the digestible so please take a

315
00:18:17,369 --> 00:18:22,110
look at that that's that's that's an

316
00:18:18,690 --> 00:18:27,360
important change the current draft says

317
00:18:22,110 --> 00:18:30,080
that you you must not have multiple

318
00:18:27,360 --> 00:18:32,340
digests with the same type and parameter

319
00:18:30,080 --> 00:18:34,379
so that this is kind of designed to keep

320
00:18:32,340 --> 00:18:36,330
the the size of the are set small and

321
00:18:34,379 --> 00:18:39,360
and keep keep the reason for having

322
00:18:36,330 --> 00:18:45,418
multiple zone digests only for

323
00:18:39,360 --> 00:18:48,029
supporting algorithm rollovers the the

324
00:18:45,419 --> 00:18:49,830
the the the name of the so the the

325
00:18:48,029 --> 00:18:53,879
document defines one digest type which

326
00:18:49,830 --> 00:18:57,990
formerly was just called sha 384 now

327
00:18:53,879 --> 00:18:59,219
it's called sha 384 - stable and there

328
00:18:57,990 --> 00:19:01,559
was a very brief discussion about

329
00:18:59,220 --> 00:19:02,580
whether stable is a good name and and

330
00:19:01,559 --> 00:19:05,580
maybe something else would be better

331
00:19:02,580 --> 00:19:07,289
such as flat and I'm I'm supportive of

332
00:19:05,580 --> 00:19:10,820
that I think that's maybe a better

333
00:19:07,289 --> 00:19:14,340
choice there are currently two

334
00:19:10,820 --> 00:19:16,049
interoperable implementations of the

335
00:19:14,340 --> 00:19:19,110
zone digest so that's that's very cool

336
00:19:16,049 --> 00:19:21,539
and we think it's ready for working

337
00:19:19,110 --> 00:19:25,560
group less call and I would also like to

338
00:19:21,539 --> 00:19:27,750
ask the working group if if

339
00:19:25,560 --> 00:19:29,190
so previously there was a little bit of

340
00:19:27,750 --> 00:19:31,290
I think reluctance on the working groups

341
00:19:29,190 --> 00:19:33,000
part to adopt it as proposed standard so

342
00:19:31,290 --> 00:19:34,980
it's currently marked as experimental

343
00:19:33,000 --> 00:19:36,660
and I would like to ask if people have

344
00:19:34,980 --> 00:19:38,760
maybe changed out the feel about that

345
00:19:36,660 --> 00:19:43,740
and if we could consider going back to

346
00:19:38,760 --> 00:19:45,330
proposed standard just to go a little

347
00:19:43,740 --> 00:19:47,580
bit more into what that means as far as

348
00:19:45,330 --> 00:19:49,290
the intended status there's a section in

349
00:19:47,580 --> 00:19:51,800
the document now that describes what's

350
00:19:49,290 --> 00:19:55,139
experimental about the the proposed

351
00:19:51,800 --> 00:19:56,879
deployment and I think that the question

352
00:19:55,140 --> 00:19:58,650
that we really have to consider is

353
00:19:56,880 --> 00:20:00,870
whether people are comfortable that it's

354
00:19:58,650 --> 00:20:05,460
deployable as as written you know it's

355
00:20:00,870 --> 00:20:07,620
at scale or the suggestions good the the

356
00:20:05,460 --> 00:20:08,940
the issues called out in the section

357
00:20:07,620 --> 00:20:11,959
about the experiment which is I believe

358
00:20:08,940 --> 00:20:14,820
section 5 you kind of have to figure out

359
00:20:11,960 --> 00:20:17,100
do we need more the experiment that's

360
00:20:14,820 --> 00:20:18,810
described in order to determine whether

361
00:20:17,100 --> 00:20:21,060
this is deployable at scale and should

362
00:20:18,810 --> 00:20:23,280
be proposed standard or if there's

363
00:20:21,060 --> 00:20:25,470
enough in the document now that people

364
00:20:23,280 --> 00:20:27,780
are confident can be deployed as is yeah

365
00:20:25,470 --> 00:20:30,570
one of the the experiment that is

366
00:20:27,780 --> 00:20:33,810
described there sort of relates to this

367
00:20:30,570 --> 00:20:35,490
issue of of the meaning of the parameter

368
00:20:33,810 --> 00:20:39,030
field and and the digest type and I

369
00:20:35,490 --> 00:20:40,950
personally I feel that now that those

370
00:20:39,030 --> 00:20:43,800
have been sort of combined differently

371
00:20:40,950 --> 00:20:45,300
it makes it a little easier to

372
00:20:43,800 --> 00:20:48,990
understand to to consider that it could

373
00:20:45,300 --> 00:21:00,210
be a proposed standard and less reasons

374
00:20:48,990 --> 00:21:02,010
for it to be experimental question

375
00:21:00,210 --> 00:21:08,420
questions or concerns about status any

376
00:21:02,010 --> 00:21:08,420
of those things alright

377
00:21:10,120 --> 00:21:17,830
I guess I am this is John Levine I sort

378
00:21:15,340 --> 00:21:20,980
of a a dumb question you know I look at

379
00:21:17,830 --> 00:21:22,629
this I don't understand why what what

380
00:21:20,980 --> 00:21:26,980
looks hard to deploy about it like you

381
00:21:22,630 --> 00:21:29,559
sort the zone and you sum it up so a lot

382
00:21:26,980 --> 00:21:32,830
of the discussion earlier on was about

383
00:21:29,559 --> 00:21:35,440
how you would support large dynamic

384
00:21:32,830 --> 00:21:37,539
zones with something like this and and

385
00:21:35,440 --> 00:21:39,520
so that's that's also the nature of the

386
00:21:37,539 --> 00:21:42,460
experiment so if you if you sort of

387
00:21:39,520 --> 00:21:44,559
restrict this right now to smaller or

388
00:21:42,460 --> 00:21:46,570
stable zones it's it's quite easy to

389
00:21:44,559 --> 00:21:49,720
deploy that the complexity comes from

390
00:21:46,570 --> 00:21:51,370
from the other and so but for me the

391
00:21:49,720 --> 00:21:53,110
obvious use case is downloading the root

392
00:21:51,370 --> 00:21:55,840
zone and making sure and validating the

393
00:21:53,110 --> 00:21:57,969
glue you know so I think I think even do

394
00:21:55,840 --> 00:22:00,309
even good for yeah for assigning a

395
00:21:57,970 --> 00:22:01,809
static zone isn't necessarily super huge

396
00:22:00,309 --> 00:22:04,029
I mean I think the use cases are already

397
00:22:01,809 --> 00:22:05,710
really obvious yes you know so please

398
00:22:04,029 --> 00:22:08,309
move it ahead okay thanks

399
00:22:05,710 --> 00:22:11,289
so but John does that mean you would

400
00:22:08,309 --> 00:22:13,289
support proposed standard or keep it

401
00:22:11,289 --> 00:22:23,590
experimental give an opinion on that I

402
00:22:13,289 --> 00:22:27,908
would if I can get come here at phonemes

403
00:22:23,590 --> 00:22:30,039
yes I think as it is with the one you

404
00:22:27,909 --> 00:22:31,659
know flat and I don't care what we call

405
00:22:30,039 --> 00:22:34,510
it flat state I think the existing

406
00:22:31,659 --> 00:22:35,710
signing thing is technically simple

407
00:22:34,510 --> 00:22:37,179
enough that it makes sense to be

408
00:22:35,710 --> 00:22:39,279
proposed standard if people want to do

409
00:22:37,179 --> 00:22:42,159
experiments with funky trees for updates

410
00:22:39,279 --> 00:22:45,039
like like and that can be an experiment

411
00:22:42,159 --> 00:22:46,990
and and I guess I will defer to the to

412
00:22:45,039 --> 00:22:49,480
management whether that needs to be like

413
00:22:46,990 --> 00:22:51,309
this say this is an experiment or carbon

414
00:22:49,480 --> 00:22:53,890
off and it was into a separate document

415
00:22:51,309 --> 00:22:55,178
or or more likely just like do the

416
00:22:53,890 --> 00:22:57,340
experiment and come back and say hey

417
00:22:55,179 --> 00:23:01,659
this this way this way of signing update

418
00:22:57,340 --> 00:23:03,639
seems to work okay thanks Alex my offer

419
00:23:01,659 --> 00:23:07,809
once more question what are the two

420
00:23:03,640 --> 00:23:09,520
implementations that you did you can say

421
00:23:07,809 --> 00:23:11,529
it again what are the two interrupt

422
00:23:09,520 --> 00:23:15,460
people implementations that you did so

423
00:23:11,529 --> 00:23:17,980
one implementation is by myself using LD

424
00:23:15,460 --> 00:23:19,960
NS so it's in see the other

425
00:23:17,980 --> 00:23:23,559
implementation was done by Shane Kerr at

426
00:23:19,960 --> 00:23:26,799
a hackathon in Python okay

427
00:23:23,559 --> 00:23:28,928
cool and total to the question of

428
00:23:26,799 --> 00:23:30,820
experimental or standard striker I

429
00:23:28,929 --> 00:23:33,879
believe we can perfectly run this this

430
00:23:30,820 --> 00:23:34,720
experimental for now and if it proves to

431
00:23:33,879 --> 00:23:37,990
be successful

432
00:23:34,720 --> 00:23:42,159
why not rehash it in a piece version and

433
00:23:37,990 --> 00:23:43,840
then that's the experience from the from

434
00:23:42,159 --> 00:23:55,029
the deployment into it like we did with

435
00:23:43,840 --> 00:23:58,080
unit minimization okay thank you any

436
00:23:55,029 --> 00:24:06,999
other any other suggest suggestions

437
00:23:58,080 --> 00:24:08,678
questions no okay thanks okay yeah it

438
00:24:06,999 --> 00:24:10,809
seems to me that unless there's strong

439
00:24:08,679 --> 00:24:13,990
support for putting this out as

440
00:24:10,809 --> 00:24:15,639
experimental PS makes sense just because

441
00:24:13,990 --> 00:24:17,919
experimental is kind of a commitment to

442
00:24:15,639 --> 00:24:19,360
come back later and reevaluate and if

443
00:24:17,919 --> 00:24:21,039
folks don't feel that's necessary I

444
00:24:19,360 --> 00:24:23,258
don't know I'm not sure we should commit

445
00:24:21,039 --> 00:24:27,759
to the future work well I'll be a little

446
00:24:23,259 --> 00:24:30,249
bit I guess more talk more about my

447
00:24:27,759 --> 00:24:31,869
rationale for wanting to do because you

448
00:24:30,249 --> 00:24:32,950
know as John said I see this being very

449
00:24:31,869 --> 00:24:34,720
useful for the root zone and I would

450
00:24:32,950 --> 00:24:36,490
like to see it deployed there and I

451
00:24:34,720 --> 00:24:39,519
think that as a proposed standard it has

452
00:24:36,490 --> 00:24:42,039
more chance of of getting to that point

453
00:24:39,519 --> 00:24:44,590
where as people may be reluctant to put

454
00:24:42,039 --> 00:24:48,820
something experimental you know on the

455
00:24:44,590 --> 00:24:54,459
root zone yeah there's just area direct

456
00:24:48,820 --> 00:24:57,158
with no hats on great so if it's

457
00:24:54,460 --> 00:24:58,659
experimental it's likely that we're

458
00:24:57,159 --> 00:25:01,090
going to try and explain what the

459
00:24:58,659 --> 00:25:02,710
experiment is and what the success and

460
00:25:01,090 --> 00:25:05,980
failure criteria are and I'm not really

461
00:25:02,710 --> 00:25:09,299
sure what we would say other than so

462
00:25:05,980 --> 00:25:09,299
that would be helpful if people tell us

463
00:25:11,490 --> 00:25:15,039
there is a current say there is this

464
00:25:13,539 --> 00:25:18,820
brief section in the current document

465
00:25:15,039 --> 00:25:21,429
that if we that's another reason to lean

466
00:25:18,820 --> 00:25:22,649
towards saying what's there is clear

467
00:25:21,429 --> 00:25:25,960
enough that it's implementable now

468
00:25:22,649 --> 00:25:27,340
because we would have to satisfy our

469
00:25:25,960 --> 00:25:32,830
area director that we had described the

470
00:25:27,340 --> 00:25:36,070
experiment an adequate detail so yeah

471
00:25:32,830 --> 00:25:36,659
chair chair head off and all that labs

472
00:25:36,070 --> 00:25:40,110
had

473
00:25:36,660 --> 00:25:43,860
so another that is also planning to

474
00:25:40,110 --> 00:25:48,000
implement an MD zone

475
00:25:43,860 --> 00:25:51,959
mrs. dices owns and also in well

476
00:25:48,000 --> 00:25:54,240
response of Alex remark in order to kind

477
00:25:51,960 --> 00:25:56,790
of experimental implement lasers maybe

478
00:25:54,240 --> 00:26:02,600
but we are planning to do it's in

479
00:25:56,790 --> 00:26:06,000
production codes somewhere next year so

480
00:26:02,600 --> 00:26:07,409
that's my my contribution for now on the

481
00:26:06,000 --> 00:26:09,780
discussion but that we are planning to

482
00:26:07,410 --> 00:26:17,240
do that in production cut-offs okay

483
00:26:09,780 --> 00:26:17,240
thank you okay thanks

484
00:26:37,059 --> 00:26:46,520
but if we go really fast we can go to

485
00:26:39,500 --> 00:26:47,960
the social okay I'm Wes Parker I was

486
00:26:46,520 --> 00:26:50,000
going to talk today about the extended

487
00:26:47,960 --> 00:26:51,770
error conclusions and some non

488
00:26:50,000 --> 00:26:52,280
conclusions from the working group last

489
00:26:51,770 --> 00:26:55,639
called

490
00:26:52,280 --> 00:26:57,020
number two I will say well there's a

491
00:26:55,640 --> 00:26:58,880
bunch of other authors I should have

492
00:26:57,020 --> 00:27:02,720
listed them and I didn't my apologies to

493
00:26:58,880 --> 00:27:04,400
all of them the good news out of all

494
00:27:02,720 --> 00:27:08,419
this is that people seem to really care

495
00:27:04,400 --> 00:27:11,390
and you know they want it to be correct

496
00:27:08,419 --> 00:27:13,130
and right and and perfect which is a

497
00:27:11,390 --> 00:27:14,240
good thing because sometimes drafts you

498
00:27:13,130 --> 00:27:15,320
know people don't care about I mean

499
00:27:14,240 --> 00:27:18,650
there's no comments and that's not

500
00:27:15,320 --> 00:27:20,330
necessarily better so first off I'm

501
00:27:18,650 --> 00:27:21,770
going to talk about some conclusions

502
00:27:20,330 --> 00:27:24,049
that I don't think need help please

503
00:27:21,770 --> 00:27:25,639
correct me if I'm wrong and I'm going to

504
00:27:24,049 --> 00:27:27,260
talk about some conclusions that weren't

505
00:27:25,640 --> 00:27:30,580
really quite conclusions and brought up

506
00:27:27,260 --> 00:27:30,580
more questions than anything else

507
00:27:30,650 --> 00:27:35,120
so the the conclusion that I think was

508
00:27:33,230 --> 00:27:37,400
fairly easily resolved was registry

509
00:27:35,120 --> 00:27:38,870
changes that previously there was three

510
00:27:37,400 --> 00:27:41,000
different sections at the registry and

511
00:27:38,870 --> 00:27:43,370
we've removed that and changed it to

512
00:27:41,000 --> 00:27:45,650
just this about the simplest there's you

513
00:27:43,370 --> 00:27:48,199
know there's sixty-five thousand two

514
00:27:45,650 --> 00:27:52,250
hundred and eighty entries so we

515
00:27:48,200 --> 00:27:53,630
allocated the first most of the the

516
00:27:52,250 --> 00:27:56,120
first ones the first forty nine thousand

517
00:27:53,630 --> 00:27:58,820
one hundred and fifty-two technically as

518
00:27:56,120 --> 00:28:01,459
first-come first-serve if anybody has a

519
00:27:58,820 --> 00:28:02,840
beef for this versus requiring technical

520
00:28:01,460 --> 00:28:03,919
expert or anything like that but there's

521
00:28:02,840 --> 00:28:07,610
so many entries it doesn't seem

522
00:28:03,919 --> 00:28:10,250
necessary to require expert review or

523
00:28:07,610 --> 00:28:11,600
anything out of a higher string and then

524
00:28:10,250 --> 00:28:13,039
the last one there's a bunch of people

525
00:28:11,600 --> 00:28:17,110
of a few people that said they'd still

526
00:28:13,039 --> 00:28:19,750
wanted a private use space going once

527
00:28:17,110 --> 00:28:21,979
going twice

528
00:28:19,750 --> 00:28:26,659
alright so that was the end of the easy

529
00:28:21,980 --> 00:28:28,760
ones so now there's two sort of major

530
00:28:26,659 --> 00:28:32,030
issues that came up after that and there

531
00:28:28,760 --> 00:28:33,620
they were worth discussing enough to

532
00:28:32,030 --> 00:28:35,928
bring here today as opposed to trying to

533
00:28:33,620 --> 00:28:37,979
resolve them on a mailing list and so

534
00:28:35,929 --> 00:28:41,220
the first is what do we do

535
00:28:37,980 --> 00:28:42,840
out UDP overflow issues so overflow

536
00:28:41,220 --> 00:28:45,510
happens all the time especially with

537
00:28:42,840 --> 00:28:47,070
things like glue and the normal thing

538
00:28:45,510 --> 00:28:49,860
that we do is we set the TC bit a

539
00:28:47,070 --> 00:28:51,450
truncated bit in order to say hey some

540
00:28:49,860 --> 00:28:53,699
important information has been excluded

541
00:28:51,450 --> 00:28:55,290
you may want to come back and retry over

542
00:28:53,700 --> 00:28:56,520
TCP so you can get the rest of this

543
00:28:55,290 --> 00:29:01,250
important information that I'm leaving

544
00:28:56,520 --> 00:29:03,750
out well extended errors of course being

545
00:29:01,250 --> 00:29:07,530
sort of arbitrary in size could of

546
00:29:03,750 --> 00:29:09,240
course cause overflow as well so one of

547
00:29:07,530 --> 00:29:10,678
the important revelations is we didn't

548
00:29:09,240 --> 00:29:13,559
specify anything to do in the document

549
00:29:10,679 --> 00:29:15,870
and clearly it's less important than

550
00:29:13,559 --> 00:29:18,149
some of those other things like glue so

551
00:29:15,870 --> 00:29:21,360
we proposed putting in information

552
00:29:18,150 --> 00:29:23,160
saying we should just drop anything but

553
00:29:21,360 --> 00:29:26,428
then it kind of comes to the question of

554
00:29:23,160 --> 00:29:29,910
well do you set the TC bit so if if

555
00:29:26,429 --> 00:29:32,429
there is ete information that gets

556
00:29:29,910 --> 00:29:35,429
dropped should that require setting the

557
00:29:32,429 --> 00:29:37,080
TC bit so there's some sort of some

558
00:29:35,429 --> 00:29:39,210
problems with that one setting the TTB

559
00:29:37,080 --> 00:29:40,740
it seems rather extreme that's kind of

560
00:29:39,210 --> 00:29:43,470
like you know ete is really only

561
00:29:40,740 --> 00:29:46,140
supplemental information and re trying

562
00:29:43,470 --> 00:29:48,000
over tcp just to get some extra

563
00:29:46,140 --> 00:29:51,270
supplemental information seems kind of

564
00:29:48,000 --> 00:29:52,320
extreme as well and the IDI information

565
00:29:51,270 --> 00:29:55,320
that got dropped

566
00:29:52,320 --> 00:29:56,580
maybe UDP specific so when you request

567
00:29:55,320 --> 00:29:59,700
over TCP you could actually get the

568
00:29:56,580 --> 00:30:01,080
exact same answer because it the error

569
00:29:59,700 --> 00:30:05,850
actually went away because you went to a

570
00:30:01,080 --> 00:30:07,949
different protocol so a new idea was

571
00:30:05,850 --> 00:30:09,809
floated on the list from Victor do

572
00:30:07,950 --> 00:30:11,070
companies colleague which would be an

573
00:30:09,809 --> 00:30:16,168
interesting thing to put in the

574
00:30:11,070 --> 00:30:17,700
acknowledgment section that a new he

575
00:30:16,169 --> 00:30:20,400
never said who it was but we'd have to

576
00:30:17,700 --> 00:30:24,360
find out if we go this route that a new

577
00:30:20,400 --> 00:30:26,429
Idina 0 bit might be used to say that

578
00:30:24,360 --> 00:30:28,469
instead of the TC bit that would

579
00:30:26,429 --> 00:30:31,130
basically say we've left out some

580
00:30:28,470 --> 00:30:33,840
non-essential diagnostic information

581
00:30:31,130 --> 00:30:35,340
which sort of gives you a better hint of

582
00:30:33,840 --> 00:30:37,110
how much you actually care to go

583
00:30:35,340 --> 00:30:38,428
retrieve that you know if you if you're

584
00:30:37,110 --> 00:30:39,600
actually trying to debug stuff you might

585
00:30:38,429 --> 00:30:41,040
you know actually want to call a tool

586
00:30:39,600 --> 00:30:42,899
that says yes I really want to go back

587
00:30:41,040 --> 00:30:44,700
and refresh that over TCP or something

588
00:30:42,900 --> 00:30:48,480
so that you can figure out whether to

589
00:30:44,700 --> 00:30:49,919
debug it or not so here's the options

590
00:30:48,480 --> 00:30:51,450
going forward and this is where I think

591
00:30:49,919 --> 00:30:54,720
we need feedback

592
00:30:51,450 --> 00:30:56,400
we could don't specify anything clearly

593
00:30:54,720 --> 00:30:58,490
that was wrong and I think nobody wants

594
00:30:56,400 --> 00:31:02,820
that option so I already crossed it out

595
00:30:58,490 --> 00:31:04,350
we need to drop Edes first right if we I

596
00:31:02,820 --> 00:31:06,750
think everybody agrees it's probably the

597
00:31:04,350 --> 00:31:08,730
least important information at this

598
00:31:06,750 --> 00:31:13,830
point the question comes do we set the

599
00:31:08,730 --> 00:31:16,350
TC bit do we don't set the TC bit and

600
00:31:13,830 --> 00:31:18,510
just leave it as is or do we create a

601
00:31:16,350 --> 00:31:22,439
new bit that it says supplemental

602
00:31:18,510 --> 00:31:25,440
information was dropped I'm sort of on

603
00:31:22,440 --> 00:31:26,840
the fence I would love lots of opinions

604
00:31:25,440 --> 00:31:28,860
of what other people especially

605
00:31:26,840 --> 00:31:31,129
implementers that actually want to deal

606
00:31:28,860 --> 00:31:36,090
with this and do stuff based on it

607
00:31:31,130 --> 00:31:38,520
excellent right valise I see Wes can you

608
00:31:36,090 --> 00:31:40,320
expand on the possibilities of how a

609
00:31:38,520 --> 00:31:42,360
needy could actually cause overflow

610
00:31:40,320 --> 00:31:43,950
because of minimal error response would

611
00:31:42,360 --> 00:31:46,530
normally only have the answer sorry have

612
00:31:43,950 --> 00:31:49,620
the question section in it anyway which

613
00:31:46,530 --> 00:31:50,940
doesn't really repeat it I missed a

614
00:31:49,620 --> 00:31:53,699
couple of words or any echo pay a

615
00:31:50,940 --> 00:31:56,070
minimal error response which only needs

616
00:31:53,700 --> 00:31:59,220
to have the questions section in it for

617
00:31:56,070 --> 00:32:02,810
matching up with the original query so

618
00:31:59,220 --> 00:32:05,400
remembers I got it so so thank you

619
00:32:02,810 --> 00:32:08,310
remember that these can be included with

620
00:32:05,400 --> 00:32:10,290
any sort of response and that even

621
00:32:08,310 --> 00:32:11,460
includes no error responses in fact I

622
00:32:10,290 --> 00:32:13,500
think there's some examples of that in

623
00:32:11,460 --> 00:32:15,900
the draft of when you might so you're

624
00:32:13,500 --> 00:32:18,510
right so that it might be unusual for

625
00:32:15,900 --> 00:32:20,790
this to actually occur in the wild but

626
00:32:18,510 --> 00:32:25,940
it still absolutely so it's the extended

627
00:32:20,790 --> 00:32:25,940
no no response in an honor yes exactly

628
00:32:26,280 --> 00:32:32,250
Mike hi Mike st. John's um you said

629
00:32:29,910 --> 00:32:34,410
something interesting where the data

630
00:32:32,250 --> 00:32:36,660
retrieved on TCP might not be the same

631
00:32:34,410 --> 00:32:39,750
day that you have gotten under UDP you

632
00:32:36,660 --> 00:32:43,890
know the error that okay the the error

633
00:32:39,750 --> 00:32:46,140
response and that means that if you set

634
00:32:43,890 --> 00:32:48,510
any bit there's no reason to go to hit

635
00:32:46,140 --> 00:32:50,370
TCP because all you're gonna get you may

636
00:32:48,510 --> 00:32:52,650
not get what you were trying to get

637
00:32:50,370 --> 00:32:55,350
right so you need either to make that

638
00:32:52,650 --> 00:32:57,270
data the same or carry it over and say

639
00:32:55,350 --> 00:32:58,980
well this is what you have gotten if

640
00:32:57,270 --> 00:33:03,150
you've done this in UDP and we're just

641
00:32:58,980 --> 00:33:04,920
keeping it for TCP so be aware be aware

642
00:33:03,150 --> 00:33:07,380
that I like

643
00:33:04,920 --> 00:33:09,060
the last one creating a new bit but if

644
00:33:07,380 --> 00:33:10,740
you go back and ask the question you

645
00:33:09,060 --> 00:33:12,929
need to get the information you would

646
00:33:10,740 --> 00:33:15,480
have gotten had you been able stuff at

647
00:33:12,930 --> 00:33:17,250
all in hideout implementations would be

648
00:33:15,480 --> 00:33:18,870
willing to figure out how to do that

649
00:33:17,250 --> 00:33:21,300
properly but I understand your point

650
00:33:18,870 --> 00:33:23,850
then you mean wanted to sort of drop

651
00:33:21,300 --> 00:33:25,889
this and not do it well that's that's

652
00:33:23,850 --> 00:33:28,050
one option right we'll just switch back

653
00:33:25,890 --> 00:33:31,350
and forth between microphones hi this is

654
00:33:28,050 --> 00:33:35,520
Andre I see so from the implementers

655
00:33:31,350 --> 00:33:37,169
point don't do anything special so GC

656
00:33:35,520 --> 00:33:40,610
bid is perfectly fine because it will

657
00:33:37,170 --> 00:33:43,770
happen only in one of million and

658
00:33:40,610 --> 00:33:46,919
switching to TCP is the thing we are

659
00:33:43,770 --> 00:33:50,190
going to do anyway so just set the tcp

660
00:33:46,920 --> 00:33:53,550
if it doesn't fit don't care about there

661
00:33:50,190 --> 00:33:55,830
that is not in the tcp that's fine there

662
00:33:53,550 --> 00:33:57,870
is over behind late but a reasonable

663
00:33:55,830 --> 00:34:00,149
code will not handle yet another option

664
00:33:57,870 --> 00:34:01,949
and yet another different handling so

665
00:34:00,150 --> 00:34:05,070
please don't treat it and especially

666
00:34:01,950 --> 00:34:07,470
just just use the normal code math for

667
00:34:05,070 --> 00:34:10,918
it so if it doesn't fit just drop the

668
00:34:07,470 --> 00:34:13,830
mic cut out it from the bottom to the

669
00:34:10,918 --> 00:34:16,350
top until it fits set a TC bit and let

670
00:34:13,830 --> 00:34:17,969
the resolvers handle it okay great I was

671
00:34:16,350 --> 00:34:19,350
expecting somebody with that opinions

672
00:34:17,969 --> 00:34:23,819
and I'll say about how come I what honor

673
00:34:19,350 --> 00:34:27,120
is it all right - yeah Eric or chrome

674
00:34:23,820 --> 00:34:29,370
DNS I want express support for the

675
00:34:27,120 --> 00:34:31,799
creating a new bit option just because I

676
00:34:29,370 --> 00:34:33,179
can see lots of cases where you're doing

677
00:34:31,800 --> 00:34:35,130
some debugging up and you're gonna want

678
00:34:33,179 --> 00:34:38,340
to get that extra info if it was dropped

679
00:34:35,130 --> 00:34:39,660
but in the case of Chrome I don't think

680
00:34:38,340 --> 00:34:41,280
we're gonna want to make another request

681
00:34:39,659 --> 00:34:42,540
to get it it's good enough without the

682
00:34:41,280 --> 00:34:45,090
error info we're not going to want to

683
00:34:42,540 --> 00:34:47,820
make another round trip to do that so I

684
00:34:45,090 --> 00:34:49,980
think there's cases where you want get

685
00:34:47,820 --> 00:34:54,200
it or you don't want to get it and the

686
00:34:49,980 --> 00:34:54,199
new bits the way to do that okay

687
00:34:55,610 --> 00:35:00,720
riddling for repeaters bad check

688
00:34:58,560 --> 00:35:03,180
TC equals one in case where II D

689
00:35:00,720 --> 00:35:06,660
overflow seems excessive so I would say

690
00:35:03,180 --> 00:35:09,270
drop ete do not set t c equals one new e

691
00:35:06,660 --> 00:35:11,460
dns bit seems to be out of scope and

692
00:35:09,270 --> 00:35:15,360
should be specified in a separate

693
00:35:11,460 --> 00:35:17,810
document later and Ted lemon also bits

694
00:35:15,360 --> 00:35:22,450
are expensive

695
00:35:17,810 --> 00:35:22,450
did you say bits are expensive okay

696
00:35:22,880 --> 00:35:27,800
Robert Robert story is I I'm gonna say

697
00:35:26,390 --> 00:35:30,710
the opposite but everybody else is

698
00:35:27,800 --> 00:35:33,020
saying and you didn't consider leaving

699
00:35:30,710 --> 00:35:36,770
ete and maybe shortening the the glue

700
00:35:33,020 --> 00:35:38,570
records because people are you know if

701
00:35:36,770 --> 00:35:40,759
you say you're gonna set truncation if

702
00:35:38,570 --> 00:35:42,290
you don't have enough glue but you only

703
00:35:40,760 --> 00:35:44,480
have ete if it was specifically

704
00:35:42,290 --> 00:35:47,360
requested so they asked for a needy

705
00:35:44,480 --> 00:35:49,370
response so throwing it away and keeping

706
00:35:47,360 --> 00:35:50,810
to fit in some extra glue records it

707
00:35:49,370 --> 00:35:52,670
seems like they want the error message

708
00:35:50,810 --> 00:35:54,620
you set the t see if they want more of

709
00:35:52,670 --> 00:35:57,320
the glue records they can retry with TC

710
00:35:54,620 --> 00:36:00,020
so I am unless my recollection is wrong

711
00:35:57,320 --> 00:36:03,710
we there is no bit indicating I want it

712
00:36:00,020 --> 00:36:05,720
you just get it wait there was at one

713
00:36:03,710 --> 00:36:07,670
point I think we removed that so now II

714
00:36:05,720 --> 00:36:11,379
des can be included regardless of

715
00:36:07,670 --> 00:36:15,590
whether people said they wanted it okay

716
00:36:11,380 --> 00:36:18,020
Brian Brian Dixon GoDaddy what if you

717
00:36:15,590 --> 00:36:20,330
set the TC bit and also created a new

718
00:36:18,020 --> 00:36:22,370
bit so anything that was old and

719
00:36:20,330 --> 00:36:24,830
backward compatible would just do the TC

720
00:36:22,370 --> 00:36:27,170
thing something that was newer would

721
00:36:24,830 --> 00:36:28,120
decide based on that bit what it should

722
00:36:27,170 --> 00:36:31,430
do

723
00:36:28,120 --> 00:36:34,730
where's that do complex no that's

724
00:36:31,430 --> 00:36:36,529
actually a good that's a good secondary

725
00:36:34,730 --> 00:36:38,110
so the new bit would indicate the TC is

726
00:36:36,530 --> 00:36:42,230
actually not that important

727
00:36:38,110 --> 00:36:45,500
Mike st. John Sakata um my thing about

728
00:36:42,230 --> 00:36:48,140
this going back the TC bit implies that

729
00:36:45,500 --> 00:36:51,170
I left something out and if you ask me

730
00:36:48,140 --> 00:36:55,129
again over TCP you will get what I left

731
00:36:51,170 --> 00:36:57,140
out so if this doesn't meet that syntax

732
00:36:55,130 --> 00:36:59,870
you really try it should avoid

733
00:36:57,140 --> 00:37:02,690
redefining it well so be careful there

734
00:36:59,870 --> 00:37:05,480
right because the TC bit is a hint that

735
00:37:02,690 --> 00:37:07,580
you should retry over TCP and hopefully

736
00:37:05,480 --> 00:37:09,290
you will get everything because the dns

737
00:37:07,580 --> 00:37:11,240
is a flexible system there's no

738
00:37:09,290 --> 00:37:14,600
guarantee that when you ask again that

739
00:37:11,240 --> 00:37:17,839
something won't have changed so it's not

740
00:37:14,600 --> 00:37:20,600
a guarantee at all it's a strong

741
00:37:17,840 --> 00:37:23,650
indication implication that yeah you

742
00:37:20,600 --> 00:37:23,650
should try okay

743
00:37:24,710 --> 00:37:30,440
yeah please more opinions would be good

744
00:37:26,960 --> 00:37:31,730
because we're a andrey again so I just

745
00:37:30,440 --> 00:37:34,640
want to support what you said best

746
00:37:31,730 --> 00:37:37,430
because when you send a query via UDP

747
00:37:34,640 --> 00:37:39,650
you might hit a different server in a

748
00:37:37,430 --> 00:37:42,259
cloud or any cost and then when you

749
00:37:39,650 --> 00:37:43,880
connect 50 CB might get be hitting at

750
00:37:42,260 --> 00:37:45,920
completely different server that will

751
00:37:43,880 --> 00:37:49,010
give a completely different answer so

752
00:37:45,920 --> 00:37:50,780
the state between the UDP or TCP never

753
00:37:49,010 --> 00:37:53,660
existed in Deanna's and it should not

754
00:37:50,780 --> 00:37:55,609
not be introduced especially not in this

755
00:37:53,660 --> 00:38:00,740
minor draft yeah now that's a very good

756
00:37:55,609 --> 00:38:09,290
point - okay so I'm gonna ask the chairs

757
00:38:00,740 --> 00:38:11,569
to call consensus all right I think

758
00:38:09,290 --> 00:38:14,829
we'll let that sit and I'll send a

759
00:38:11,569 --> 00:38:17,180
message to the list and see if if we can

760
00:38:14,829 --> 00:38:18,890
give a consensus on there and maybe

761
00:38:17,180 --> 00:38:23,480
people sitting on it for a little bit

762
00:38:18,890 --> 00:38:25,819
will Evan yeah yeah indeed we get a good

763
00:38:23,480 --> 00:38:29,049
sense from the room now we should probe

764
00:38:25,819 --> 00:38:32,450
the mailing list needs okay and then

765
00:38:29,049 --> 00:38:35,089
right and thanks for option before yeah

766
00:38:32,450 --> 00:38:40,220
that was a good one yeah okay

767
00:38:35,089 --> 00:38:43,759
set to bits all right last option and

768
00:38:40,220 --> 00:38:45,529
the harder one multiple last call

769
00:38:43,760 --> 00:38:47,119
comments said you know what we really

770
00:38:45,530 --> 00:38:48,559
need to handle the forwarding case so if

771
00:38:47,119 --> 00:38:50,599
people remember previously in the

772
00:38:48,559 --> 00:38:53,960
document we said it was a undefined

773
00:38:50,599 --> 00:38:56,720
situation as to what to do when a needy

774
00:38:53,960 --> 00:38:58,520
occurred say at a resolver that got it

775
00:38:56,720 --> 00:39:00,618
from authoritative server or an upstream

776
00:38:58,520 --> 00:39:02,690
resolver and you know how to pass it

777
00:39:00,619 --> 00:39:04,970
back to the client or something you know

778
00:39:02,690 --> 00:39:07,970
and in a longer chain that we all know

779
00:39:04,970 --> 00:39:09,890
and love in the DNS world so discussions

780
00:39:07,970 --> 00:39:11,270
with a couple of people led to a series

781
00:39:09,890 --> 00:39:13,609
of options so I'm gonna list them all

782
00:39:11,270 --> 00:39:16,520
here some of which I've already struck

783
00:39:13,609 --> 00:39:18,500
out because they don't seem wise but

784
00:39:16,520 --> 00:39:20,420
they're all listed for completeness one

785
00:39:18,500 --> 00:39:21,680
we could mandate that no forwarding

786
00:39:20,420 --> 00:39:23,480
happens you just drop it all on the

787
00:39:21,680 --> 00:39:25,250
floor I don't think anybody wants to do

788
00:39:23,480 --> 00:39:28,160
that and I think the comments on the

789
00:39:25,250 --> 00:39:29,869
list clearly indicated that we could

790
00:39:28,160 --> 00:39:32,000
mandate the resolver and forwarders

791
00:39:29,869 --> 00:39:34,730
simply copy it forward so you just you

792
00:39:32,000 --> 00:39:37,280
know if you're generating more stuff

793
00:39:34,730 --> 00:39:38,540
back to the client then you just you

794
00:39:37,280 --> 00:39:41,240
know copy it all in and off you

795
00:39:38,540 --> 00:39:43,420
go note that resolvers may have been

796
00:39:41,240 --> 00:39:45,799
talking to more than one upstream you

797
00:39:43,420 --> 00:39:47,570
may have been talking to more than one

798
00:39:45,800 --> 00:39:49,700
authoritative server that may have given

799
00:39:47,570 --> 00:39:51,140
you some ete options that you may want

800
00:39:49,700 --> 00:39:52,399
to pass them all back to the client

801
00:39:51,140 --> 00:39:54,859
which makes it kind of hard to figure

802
00:39:52,400 --> 00:39:59,030
out for the client where did all this

803
00:39:54,860 --> 00:40:01,670
stuff come from you could just copy and

804
00:39:59,030 --> 00:40:03,380
adjust that extra text field so you add

805
00:40:01,670 --> 00:40:05,150
an extra bit of information to the front

806
00:40:03,380 --> 00:40:07,040
of it saying hey you know I was talking

807
00:40:05,150 --> 00:40:08,660
to somebody else they gave me this error

808
00:40:07,040 --> 00:40:10,700
I'm gonna augment it saying where I got

809
00:40:08,660 --> 00:40:12,529
it from this doesn't seem like the most

810
00:40:10,700 --> 00:40:14,439
wise thing to do because you're

811
00:40:12,530 --> 00:40:17,390
modifying somebody else's information

812
00:40:14,440 --> 00:40:23,810
and we'll get back to formatting in a

813
00:40:17,390 --> 00:40:26,420
little bit so options four to seven four

814
00:40:23,810 --> 00:40:28,100
you could add some tracing elements to

815
00:40:26,420 --> 00:40:30,500
the packet in other words you could add

816
00:40:28,100 --> 00:40:32,720
elements to say where this came from so

817
00:40:30,500 --> 00:40:34,310
that you can trace it along and there is

818
00:40:32,720 --> 00:40:36,140
even some discussions of doing some sort

819
00:40:34,310 --> 00:40:37,580
of like traceroute mechanism where you

820
00:40:36,140 --> 00:40:39,080
are actually adding multiple hops so

821
00:40:37,580 --> 00:40:40,310
that you keep growing it so that you

822
00:40:39,080 --> 00:40:42,680
could actually trace it all the way down

823
00:40:40,310 --> 00:40:45,320
as useful as that is I think that the

824
00:40:42,680 --> 00:40:47,210
implementation complexity would make

825
00:40:45,320 --> 00:40:51,380
most implementers throw it out the

826
00:40:47,210 --> 00:40:54,320
window we could recommend adding source

827
00:40:51,380 --> 00:40:56,060
indication like with another ete

828
00:40:54,320 --> 00:40:57,530
supplemental flag that you would add

829
00:40:56,060 --> 00:40:59,090
after the other one and say well I got

830
00:40:57,530 --> 00:41:02,150
this previous one from this other guy

831
00:40:59,090 --> 00:41:04,010
and that actually would require sorting

832
00:41:02,150 --> 00:41:06,110
that's why number five is crossed out

833
00:41:04,010 --> 00:41:07,940
because there is no requirement right

834
00:41:06,110 --> 00:41:09,440
now that resource records be sorted and

835
00:41:07,940 --> 00:41:11,000
I really don't think we want to insert

836
00:41:09,440 --> 00:41:13,010
that requirement in fact some

837
00:41:11,000 --> 00:41:16,490
implementers said no I wouldn't do that

838
00:41:13,010 --> 00:41:18,650
of course number six we could make the

839
00:41:16,490 --> 00:41:21,439
document experimental that was suggested

840
00:41:18,650 --> 00:41:24,740
on the list as just get more deployment

841
00:41:21,440 --> 00:41:26,930
exercise and come deal with it later and

842
00:41:24,740 --> 00:41:29,000
number seven is your idea here which

843
00:41:26,930 --> 00:41:32,839
Brian will fill us in on and then it

844
00:41:29,000 --> 00:41:36,230
give me one minute Brian so number for

845
00:41:32,840 --> 00:41:39,260
one I think is where external consensus

846
00:41:36,230 --> 00:41:41,720
before this discussion has sort of come

847
00:41:39,260 --> 00:41:44,960
to a conclusion that adding a single

848
00:41:41,720 --> 00:41:47,270
source to the ete generating by the e de

849
00:41:44,960 --> 00:41:51,700
generating entity and then passing that

850
00:41:47,270 --> 00:41:54,640
on so in other words the

851
00:41:51,700 --> 00:41:58,029
is sort of the new proposed packet

852
00:41:54,640 --> 00:42:00,069
format and so you can see that the new

853
00:41:58,030 --> 00:42:01,480
there's a new flag on the on the bottom

854
00:42:00,070 --> 00:42:03,670
right there's a source length on a

855
00:42:01,480 --> 00:42:06,250
source field that gets added and then

856
00:42:03,670 --> 00:42:07,390
some indication of source and we'll get

857
00:42:06,250 --> 00:42:11,410
into that in a second part of this

858
00:42:07,390 --> 00:42:13,990
discussion of this was generated by 8 me

859
00:42:11,410 --> 00:42:17,980
by some definition of me and we'll get

860
00:42:13,990 --> 00:42:21,009
to that in a minute but Brian go ahead I

861
00:42:17,980 --> 00:42:24,550
was gonna insert my idea here saying 4.1

862
00:42:21,010 --> 00:42:26,740
with an identity identity for this is

863
00:42:24,550 --> 00:42:29,650
gonna be coming from another thing if

864
00:42:26,740 --> 00:42:31,959
the ATD working group or ABCD working

865
00:42:29,650 --> 00:42:34,180
group actually forms something I was

866
00:42:31,960 --> 00:42:37,990
gonna hope to work on there effectively

867
00:42:34,180 --> 00:42:41,319
local locally generated global unique

868
00:42:37,990 --> 00:42:45,700
but locally scoped name to be usable

869
00:42:41,320 --> 00:42:48,339
within a forwarding chain that would let

870
00:42:45,700 --> 00:42:51,210
you if it's an upgraded resolver

871
00:42:48,339 --> 00:42:54,759
actually do like a TCP direct

872
00:42:51,210 --> 00:42:56,740
DNS trace route or as a minimum have the

873
00:42:54,760 --> 00:43:00,609
ability to a generate an identity that

874
00:42:56,740 --> 00:43:01,660
is useful for so that is the hard thing

875
00:43:00,609 --> 00:43:04,810
to do when you start thinking about

876
00:43:01,660 --> 00:43:06,368
identities and in some of the before

877
00:43:04,810 --> 00:43:08,828
discussions we came up with all of these

878
00:43:06,369 --> 00:43:10,810
crazy notions of well it could be on a

879
00:43:08,829 --> 00:43:13,450
private address based network it could

880
00:43:10,810 --> 00:43:14,799
be that you pulled it over a URL so you

881
00:43:13,450 --> 00:43:17,200
should include something that can do

882
00:43:14,800 --> 00:43:18,970
HTTPS and the in the identity field and

883
00:43:17,200 --> 00:43:20,140
now you're passing it back over DNS I

884
00:43:18,970 --> 00:43:24,160
mean there's all these crazy sort of

885
00:43:20,140 --> 00:43:27,368
notions of DNS has has no notion of how

886
00:43:24,160 --> 00:43:29,410
you got the packet and that it must be

887
00:43:27,369 --> 00:43:32,109
the same protocol all the way through so

888
00:43:29,410 --> 00:43:34,270
the identity section we're so we're

889
00:43:32,109 --> 00:43:36,430
gonna get to that in a minute which is

890
00:43:34,270 --> 00:43:38,050
here's the list of identities that that

891
00:43:36,430 --> 00:43:39,578
we we could possibly stick in the source

892
00:43:38,050 --> 00:43:43,990
field but for now I want to stick with

893
00:43:39,579 --> 00:43:46,089
is 4.1 a single identity the right

894
00:43:43,990 --> 00:43:47,560
answer or would somebody prefer some of

895
00:43:46,089 --> 00:43:49,390
the other ones we'll get we'll get into

896
00:43:47,560 --> 00:43:52,119
naming the identities in a second is

897
00:43:49,390 --> 00:43:52,509
that ofer Mobile is 44.1 it's the right

898
00:43:52,119 --> 00:43:56,560
thing

899
00:43:52,510 --> 00:43:58,720
excellent perfect array ballast I see my

900
00:43:56,560 --> 00:43:59,170
vote is none of the above please just

901
00:43:58,720 --> 00:44:01,569
don't

902
00:43:59,170 --> 00:44:02,680
edan s s frantic so suppose to be

903
00:44:01,569 --> 00:44:05,970
hop-by-hop and this is a massive

904
00:44:02,680 --> 00:44:05,970
extension for semantics

905
00:44:06,849 --> 00:44:13,219
yes so would your your proposal would be

906
00:44:09,859 --> 00:44:15,380
drop it on the floor drop it on the

907
00:44:13,219 --> 00:44:17,569
floor default at the moment and we know

908
00:44:15,380 --> 00:44:22,640
that we're not good in DNS to kind of

909
00:44:17,569 --> 00:44:25,189
upgrade stuff so unless all the kind of

910
00:44:22,640 --> 00:44:27,379
forwarders in the past implement that

911
00:44:25,189 --> 00:44:30,439
then well we'll drop it on the floor

912
00:44:27,380 --> 00:44:32,509
anyway and if the foreword is

913
00:44:30,439 --> 00:44:33,979
implemented I think they can make an

914
00:44:32,509 --> 00:44:36,019
informed decision to give back the

915
00:44:33,979 --> 00:44:38,269
correct error I mean that was with the

916
00:44:36,019 --> 00:44:39,919
implementation saying okay I got this

917
00:44:38,269 --> 00:44:41,959
error and maybe got it from somewhere

918
00:44:39,920 --> 00:44:43,729
the somewhere might actually not be

919
00:44:41,959 --> 00:44:47,959
reachable for you because of forwarding

920
00:44:43,729 --> 00:44:49,279
change of private space okay so if

921
00:44:47,959 --> 00:44:52,160
you're both saying the same thing

922
00:44:49,279 --> 00:44:53,809
basically it should be the middle box

923
00:44:52,160 --> 00:44:55,489
that is actually handling the original

924
00:44:53,809 --> 00:44:57,199
one to make an intelligent determination

925
00:44:55,489 --> 00:44:58,849
of what to do with it whether to

926
00:44:57,199 --> 00:45:02,569
refactor it and create a new one and

927
00:44:58,849 --> 00:45:04,400
pass it on to a client that correct yeah

928
00:45:02,569 --> 00:45:06,469
more or less but with the caveat that

929
00:45:04,400 --> 00:45:08,539
what we call the middle box depends on

930
00:45:06,469 --> 00:45:11,289
whether you're talking about a dumb yeah

931
00:45:08,539 --> 00:45:13,609
home gateway type proxy for was just

932
00:45:11,289 --> 00:45:15,589
it's essentially almost nothing more

933
00:45:13,609 --> 00:45:17,328
than a NAT versus something is actually

934
00:45:15,589 --> 00:45:19,729
intelligently sat in the path of the DNS

935
00:45:17,329 --> 00:45:22,729
query okay so if you don't know what to

936
00:45:19,729 --> 00:45:24,259
do with it because you're not you're

937
00:45:22,729 --> 00:45:26,749
seeing new codes or something just drop

938
00:45:24,259 --> 00:45:34,809
them and and don't add to it okay

939
00:45:26,749 --> 00:45:37,578
the site first please Ben Schwartz I I

940
00:45:34,809 --> 00:45:39,920
don't like this for a different reasons

941
00:45:37,579 --> 00:45:41,900
I also am somebody who's kind of

942
00:45:39,920 --> 00:45:45,499
intrigued by the idea of a DNS tracer

943
00:45:41,900 --> 00:45:48,769
but I think that there's an efficiency

944
00:45:45,499 --> 00:45:50,359
concern here where potentially an

945
00:45:48,769 --> 00:45:52,249
upstream resolver might have a good

946
00:45:50,359 --> 00:45:55,459
reason actually the more information it

947
00:45:52,249 --> 00:45:57,288
can include the better it's the more

948
00:45:55,459 --> 00:45:59,868
useful it can be for debugging the more

949
00:45:57,289 --> 00:46:02,390
it can help whatever the next hop is but

950
00:45:59,869 --> 00:46:04,759
because there's no signal here in the

951
00:46:02,390 --> 00:46:07,339
query that requests this information

952
00:46:04,759 --> 00:46:10,339
there's essentially no choice but to do

953
00:46:07,339 --> 00:46:12,439
this all the time and so we're proposing

954
00:46:10,339 --> 00:46:13,819
to essentially include potentially a

955
00:46:12,439 --> 00:46:16,368
very large amount of information in

956
00:46:13,819 --> 00:46:18,410
every single response packet if I

957
00:46:16,369 --> 00:46:22,250
imagine for example including entired

958
00:46:18,410 --> 00:46:25,339
URI templates of every hop in the in the

959
00:46:22,250 --> 00:46:27,680
request path in every single response I

960
00:46:25,339 --> 00:46:28,130
think it's very inefficient and not very

961
00:46:27,680 --> 00:46:31,038
useful

962
00:46:28,130 --> 00:46:36,490
okay so drop it on the floor and don't

963
00:46:31,039 --> 00:46:39,200
pass anything forward yeah I think

964
00:46:36,490 --> 00:46:41,709
related to the previous conversation I

965
00:46:39,200 --> 00:46:46,730
would slightly adjust this and say

966
00:46:41,710 --> 00:46:49,970
essentially forward it or set your own

967
00:46:46,730 --> 00:46:53,539
basically but if you if you're not edie

968
00:46:49,970 --> 00:46:56,180
aware then probably you should just

969
00:46:53,539 --> 00:46:58,910
forward it if you don't understand what

970
00:46:56,180 --> 00:47:00,500
it is so if you re D aware if you have a

971
00:46:58,910 --> 00:47:01,759
cut if you'd like to have a code other

972
00:47:00,500 --> 00:47:03,589
than the one that was sent to you you

973
00:47:01,760 --> 00:47:05,030
know replace it didn't you just

974
00:47:03,589 --> 00:47:09,380
contradict yourself and your original

975
00:47:05,030 --> 00:47:11,539
statement I know I know what I'm saying

976
00:47:09,380 --> 00:47:14,150
is that we shouldn't grow a chain here

977
00:47:11,539 --> 00:47:16,309
where we where we extend and extend and

978
00:47:14,150 --> 00:47:20,990
extend oh so you don't like the

979
00:47:16,309 --> 00:47:24,529
traceroute right okay that so four point

980
00:47:20,990 --> 00:47:25,578
one is actually okay which is well so

981
00:47:24,529 --> 00:47:27,049
that there's a question of whether we

982
00:47:25,579 --> 00:47:28,609
add a single source or not so you're

983
00:47:27,049 --> 00:47:31,038
saying don't add a source at all just

984
00:47:28,609 --> 00:47:36,230
for either forward it intact or replace

985
00:47:31,039 --> 00:47:39,760
it got it okay Andre I see so Wes if you

986
00:47:36,230 --> 00:47:41,930
need a sentence to draft I would say

987
00:47:39,760 --> 00:47:43,670
forwarding they're handling of EDD

988
00:47:41,930 --> 00:47:45,078
forwarding is not specified by Z so

989
00:47:43,670 --> 00:47:48,470
command and it is implementation

990
00:47:45,079 --> 00:47:50,779
specific there may be like thunderous

991
00:47:48,470 --> 00:47:53,029
later it doesn't have to be experimental

992
00:47:50,779 --> 00:47:56,059
it could be unspecified and said it is

993
00:47:53,029 --> 00:47:59,299
this implementation specific and just

994
00:47:56,059 --> 00:48:03,230
deal with if this until one we have more

995
00:47:59,299 --> 00:48:05,299
experience so this is like sakes but not

996
00:48:03,230 --> 00:48:06,500
making the document experimental well

997
00:48:05,299 --> 00:48:09,380
actually that's what the document says

998
00:48:06,500 --> 00:48:11,299
now so I should have had a number zero

999
00:48:09,380 --> 00:48:14,990
which is right now it says it is

1000
00:48:11,299 --> 00:48:16,819
unspecified but there is multiple people

1001
00:48:14,990 --> 00:48:21,169
that thought that that would not be

1002
00:48:16,819 --> 00:48:22,400
useful that is because so trying to

1003
00:48:21,170 --> 00:48:25,970
quote some of the the people that

1004
00:48:22,400 --> 00:48:27,980
brought this up it's most likely a

1005
00:48:25,970 --> 00:48:30,288
resolver that would get some of these

1006
00:48:27,980 --> 00:48:31,619
errors and they would want to know how

1007
00:48:30,289 --> 00:48:33,239
to forward it to the client

1008
00:48:31,619 --> 00:48:35,670
because otherwise the resolver is gonna

1009
00:48:33,239 --> 00:48:39,749
do nothing but log the information and

1010
00:48:35,670 --> 00:48:41,910
it's not as it's not as helpful to the

1011
00:48:39,749 --> 00:48:43,109
world if the end client and the end

1012
00:48:41,910 --> 00:48:45,509
thing that started this whole chain

1013
00:48:43,109 --> 00:48:48,119
doesn't get that chain of extra

1014
00:48:45,509 --> 00:48:52,140
information I'm sort of pseudo quoting

1015
00:48:48,119 --> 00:48:54,180
other people hi I don't think qualified

1016
00:48:52,140 --> 00:48:55,558
to have a really a technical pinion on

1017
00:48:54,180 --> 00:48:57,690
the various options but I would like to

1018
00:48:55,559 --> 00:49:00,119
point out that conceptually at least for

1019
00:48:57,690 --> 00:49:02,460
the more application oriented codes like

1020
00:49:00,119 --> 00:49:04,140
the ones on filtering at least a need

1021
00:49:02,460 --> 00:49:05,400
for them to get forward throughout that

1022
00:49:04,140 --> 00:49:08,098
entire chain otherwise they are

1023
00:49:05,400 --> 00:49:10,469
completely useless so if if there's a CP

1024
00:49:08,099 --> 00:49:12,539
doing forwarding for example it does the

1025
00:49:10,469 --> 00:49:14,430
need for they call Sweden to get forward

1026
00:49:12,539 --> 00:49:17,430
at 10:00 today to the client otherwise

1027
00:49:14,430 --> 00:49:22,049
it why do we add them so I think four

1028
00:49:17,430 --> 00:49:23,640
point one okay thank you whatever order

1029
00:49:22,049 --> 00:49:25,049
I'm just to keep things moving you had

1030
00:49:23,640 --> 00:49:31,140
another issue you wanted to get to know

1031
00:49:25,049 --> 00:49:32,940
okay so you don't want to go into that

1032
00:49:31,140 --> 00:49:35,519
now no I'm waiting for this discussion

1033
00:49:32,940 --> 00:49:37,710
today all right you don't have unbanded

1034
00:49:35,519 --> 00:49:39,390
time that's what am I going here sorry

1035
00:49:37,710 --> 00:49:40,589
so I'm going to close the mic line for

1036
00:49:39,390 --> 00:49:42,960
this section so you can get to the rest

1037
00:49:40,589 --> 00:49:45,210
year okay the last time she learned it

1038
00:49:42,960 --> 00:49:47,009
rave Alice I see again sorry to pick on

1039
00:49:45,210 --> 00:49:48,239
something been said this goes back to

1040
00:49:47,009 --> 00:49:48,869
what I was just about a genus and

1041
00:49:48,239 --> 00:49:51,420
hop-by-hop

1042
00:49:48,869 --> 00:49:55,289
yeah when if you've got a folder in the

1043
00:49:51,420 --> 00:49:57,180
path it will already strip every DNS

1044
00:49:55,289 --> 00:49:58,950
option that comes back because that you

1045
00:49:57,180 --> 00:50:00,749
Denis Eady s options have no semantic

1046
00:49:58,950 --> 00:50:02,368
meaning whatsoever but other than

1047
00:50:00,749 --> 00:50:05,399
between two parties that exchange those

1048
00:50:02,369 --> 00:50:07,380
specific messages so if I could send a

1049
00:50:05,400 --> 00:50:09,479
query to a folder yeah

1050
00:50:07,380 --> 00:50:10,920
whatever any dense options go out from

1051
00:50:09,479 --> 00:50:12,180
there or up to the folder

1052
00:50:10,920 --> 00:50:13,680
I'd have liked to do with the client

1053
00:50:12,180 --> 00:50:16,410
similarly what comes back from the

1054
00:50:13,680 --> 00:50:17,788
folder are irrelevant as far as the

1055
00:50:16,410 --> 00:50:19,649
clients concerned that's normally units

1056
00:50:17,789 --> 00:50:22,140
behavior and that's why I have concerns

1057
00:50:19,650 --> 00:50:23,460
about this whole idea of sending stuff

1058
00:50:22,140 --> 00:50:25,499
back because even this just doesn't work

1059
00:50:23,460 --> 00:50:27,359
that way it is exclusively for use

1060
00:50:25,499 --> 00:50:30,749
between an individual client and the

1061
00:50:27,359 --> 00:50:32,489
machine is talking to it's just to

1062
00:50:30,749 --> 00:50:33,779
respond to that I have no objection to

1063
00:50:32,489 --> 00:50:35,819
that to that description

1064
00:50:33,779 --> 00:50:37,680
personally I've seen forwarders that are

1065
00:50:35,819 --> 00:50:40,529
true Nets that do not inspect the DNS

1066
00:50:37,680 --> 00:50:42,749
packets so yes that there is lots of

1067
00:50:40,529 --> 00:50:44,099
specific ITAT I mentioned that's in 68

1068
00:50:42,749 --> 00:50:45,368
sorry well a common phenomena for the

1069
00:50:44,099 --> 00:50:48,339
revised e

1070
00:50:45,369 --> 00:50:50,109
was 50 because of my pretty long 5625 if

1071
00:50:48,339 --> 00:50:52,960
all you're doing is that forwarding then

1072
00:50:50,109 --> 00:50:54,759
there's an expectation yes you can you

1073
00:50:52,960 --> 00:50:57,190
basically treat the DNS packet is almost

1074
00:50:54,759 --> 00:50:58,719
sufism opaque blob so what goes out goes

1075
00:50:57,190 --> 00:51:00,430
through than that it goes up to the

1076
00:50:58,719 --> 00:51:02,200
upstream server comes back again but if

1077
00:51:00,430 --> 00:51:04,239
you're in the DNS path actually process

1078
00:51:02,200 --> 00:51:06,299
the Nunez packet then eagerness has no

1079
00:51:04,239 --> 00:51:10,059
semantics through that forwarding path

1080
00:51:06,299 --> 00:51:12,969
that makes sense to me okay thanks brain

1081
00:51:10,059 --> 00:51:15,160
Maas so I'm gonna try and keep it short

1082
00:51:12,969 --> 00:51:16,930
but I just sort of a heads up that

1083
00:51:15,160 --> 00:51:18,219
people may want to have tomatoes ready

1084
00:51:16,930 --> 00:51:20,739
to throw at me because I'm gonna suggest

1085
00:51:18,219 --> 00:51:23,579
something which is basically from a

1086
00:51:20,739 --> 00:51:26,729
semantic perspective I don't think

1087
00:51:23,579 --> 00:51:28,900
forwarders that aren't eating ege

1088
00:51:26,729 --> 00:51:33,038
upgraded or in it have any other

1089
00:51:28,900 --> 00:51:35,289
advanced features at any value one of

1090
00:51:33,039 --> 00:51:38,890
the things about the DNS traceroute

1091
00:51:35,289 --> 00:51:42,009
concept would be to enable a client to

1092
00:51:38,890 --> 00:51:44,229
learn what the actual resolver is as

1093
00:51:42,009 --> 00:51:46,420
opposed to the forwarders and establish

1094
00:51:44,229 --> 00:51:50,109
a direct connection as far as i can

1095
00:51:46,420 --> 00:51:51,759
think of it really is only ever going to

1096
00:51:50,109 --> 00:51:54,069
get the information coming from the

1097
00:51:51,759 --> 00:51:56,369
resolver so the fact that it goes

1098
00:51:54,069 --> 00:51:58,960
through forwarders if it's able to

1099
00:51:56,369 --> 00:52:01,329
determine that there's no conflict in

1100
00:51:58,960 --> 00:52:04,690
the addressing and it's able to directly

1101
00:52:01,329 --> 00:52:08,049
reach the true resolver if it can find

1102
00:52:04,690 --> 00:52:09,489
its name somehow and address which is

1103
00:52:08,049 --> 00:52:12,339
the stuff I'm going to be working on in

1104
00:52:09,489 --> 00:52:13,269
the other group this may make most of

1105
00:52:12,339 --> 00:52:18,489
this moot

1106
00:52:13,269 --> 00:52:19,808
I hope so there are a number of cases if

1107
00:52:18,489 --> 00:52:21,819
you go read through all of the current

1108
00:52:19,809 --> 00:52:23,109
ones where you might be getting it from

1109
00:52:21,819 --> 00:52:25,109
an authoritative server like an

1110
00:52:23,109 --> 00:52:28,089
authoritative server will say I'm lame

1111
00:52:25,109 --> 00:52:29,440
is one of the examples where is she -

1112
00:52:28,089 --> 00:52:35,078
resolver pass that back to the client

1113
00:52:29,440 --> 00:52:36,279
that's a tour is over so but that would

1114
00:52:35,079 --> 00:52:37,930
be coming from the resolver not a

1115
00:52:36,279 --> 00:52:40,989
forward or if you can talk to the

1116
00:52:37,930 --> 00:52:42,098
resolver if that's that would be up to

1117
00:52:40,989 --> 00:52:43,630
the resolver whether to pass that

1118
00:52:42,099 --> 00:52:44,859
information on to the client I'd have to

1119
00:52:43,630 --> 00:52:46,930
go read all of the examples in the

1120
00:52:44,859 --> 00:52:49,299
document but there's a few cases where

1121
00:52:46,930 --> 00:52:54,098
you're getting it from an upstream yeah

1122
00:52:49,299 --> 00:52:57,219
so okay thanks Ben Schwartz for that

1123
00:52:54,099 --> 00:52:58,690
case I would suggest just defining codes

1124
00:52:57,219 --> 00:53:00,220
that instead of it's

1125
00:52:58,690 --> 00:53:02,230
forwarding a code that says I'm lame

1126
00:53:00,220 --> 00:53:12,160
define a code that says are tative was

1127
00:53:02,230 --> 00:53:16,750
lame okay three minutes all right so

1128
00:53:12,160 --> 00:53:19,118
really I'm probably okay so if we add a

1129
00:53:16,750 --> 00:53:22,720
source and that remains to be determined

1130
00:53:19,119 --> 00:53:24,490
but if we went down the the will go back

1131
00:53:22,720 --> 00:53:25,509
to the list and get some evaluation of

1132
00:53:24,490 --> 00:53:26,919
other people at this point it's

1133
00:53:25,510 --> 00:53:28,540
interesting to see that the discussion

1134
00:53:26,920 --> 00:53:31,359
has turned back around to sort of what

1135
00:53:28,540 --> 00:53:33,430
the document says now in in a lot of it

1136
00:53:31,359 --> 00:53:36,819
but that's okay the you have to explore

1137
00:53:33,430 --> 00:53:39,430
all options and then come back if we do

1138
00:53:36,819 --> 00:53:41,109
want to add a source field what do we

1139
00:53:39,430 --> 00:53:42,549
put in it and so the options that we're

1140
00:53:41,109 --> 00:53:45,460
sort of thrown out and I mentioned some

1141
00:53:42,550 --> 00:53:47,440
of them earlier NS ID would be one host

1142
00:53:45,460 --> 00:53:49,380
name fully qualified host name remember

1143
00:53:47,440 --> 00:53:53,170
that this would be added by the entity

1144
00:53:49,380 --> 00:53:56,050
generating the option so first off an IP

1145
00:53:53,170 --> 00:53:57,940
address a URL a IP colon port assert

1146
00:53:56,050 --> 00:54:01,380
subject name right there's lots of ways

1147
00:53:57,940 --> 00:54:04,960
that a host might be identifying itself

1148
00:54:01,380 --> 00:54:07,060
after thinking about all this NS ID is

1149
00:54:04,960 --> 00:54:10,630
actually very very generic it is a

1150
00:54:07,060 --> 00:54:13,359
binary blob that should be printed via

1151
00:54:10,630 --> 00:54:17,740
hex if you go read the NS ID description

1152
00:54:13,359 --> 00:54:20,049
and it can accommodate anything so a few

1153
00:54:17,740 --> 00:54:21,669
of us that talked NS ID seems to be the

1154
00:54:20,050 --> 00:54:24,760
right choice there because it can sort

1155
00:54:21,670 --> 00:54:26,530
of cisu the rest of those if anybody

1156
00:54:24,760 --> 00:54:28,900
thinks that there is a better option I

1157
00:54:26,530 --> 00:54:31,079
would like to hear about it in two

1158
00:54:28,900 --> 00:54:31,079
minutes

1159
00:54:36,859 --> 00:54:41,348
prefix the field with what kind of thing

1160
00:54:39,319 --> 00:54:44,450
it is so NS ID :

1161
00:54:41,349 --> 00:54:47,180
hostname or fqdn : whatever we thought

1162
00:54:44,450 --> 00:54:49,279
about adding a type field too but yeah

1163
00:54:47,180 --> 00:54:51,259
then it gets even more complex and

1164
00:54:49,279 --> 00:54:54,469
managing that and it seems overly

1165
00:54:51,259 --> 00:54:56,509
complex compared to NS IDs already

1166
00:54:54,469 --> 00:54:58,789
exists to name things in the DNS space

1167
00:54:56,509 --> 00:55:00,709
in terms of an identifier so how much

1168
00:54:58,789 --> 00:55:11,089
does that actually buy you and it's not

1169
00:55:00,709 --> 00:55:13,098
much okay so it sounds like you need to

1170
00:55:11,089 --> 00:55:15,229
go assess what you've heard here and

1171
00:55:13,099 --> 00:55:16,400
then either propose a revision I'll go

1172
00:55:15,229 --> 00:55:18,759
back to the mailing list for a further

1173
00:55:16,400 --> 00:55:22,369
discussion particularly on the E and the

1174
00:55:18,759 --> 00:55:24,229
forwarding options yeah I agreed I think

1175
00:55:22,369 --> 00:55:26,690
both options came up with a plethora of

1176
00:55:24,229 --> 00:55:30,859
opinions that did not converge today

1177
00:55:26,690 --> 00:55:32,239
into a single or two opinions yes so go

1178
00:55:30,859 --> 00:55:35,089
ahead and figure out what you think and

1179
00:55:32,239 --> 00:55:37,489
if there's further discussion we can do

1180
00:55:35,089 --> 00:55:39,440
it almost all right thank you all that

1181
00:55:37,489 --> 00:55:42,469
was actually helpful and not at the same

1182
00:55:39,440 --> 00:55:45,549
time but that's okay thank you very much

1183
00:55:42,469 --> 00:55:45,549
thing and thanks everybody

1184
00:55:46,969 --> 00:56:04,670
next bin Ben Schwartz yeah we're good in

1185
00:55:54,079 --> 00:56:06,680
time yeah we have a lot to talk about so

1186
00:56:04,670 --> 00:56:08,269
I'll try to move fast here and we can

1187
00:56:06,680 --> 00:56:11,948
come back to the slides if there's

1188
00:56:08,269 --> 00:56:16,218
something you want to talk about more so

1189
00:56:11,949 --> 00:56:19,880
SVC B is a draft that has been adopted

1190
00:56:16,219 --> 00:56:22,400
by this working group and the goal is

1191
00:56:19,880 --> 00:56:26,719
that the client can do a query and get

1192
00:56:22,400 --> 00:56:31,160
back a a full set of information needed

1193
00:56:26,719 --> 00:56:33,650
for connecting to a service so in cases

1194
00:56:31,160 --> 00:56:35,239
where you need more information or at

1195
00:56:33,650 --> 00:56:37,369
least would like more information than

1196
00:56:35,239 --> 00:56:40,190
just the IP address before you initiate

1197
00:56:37,369 --> 00:56:42,199
a connection this can give you a whole

1198
00:56:40,190 --> 00:56:45,729
bundle of information containing

1199
00:56:42,199 --> 00:56:49,500
whatever it is that you need to know

1200
00:56:45,729 --> 00:56:52,669
it's also intended to solve

1201
00:56:49,500 --> 00:56:55,650
version of the cname at Apex problem

1202
00:56:52,670 --> 00:56:58,800
possibly not the entire cname at Apex

1203
00:56:55,650 --> 00:57:05,480
problem but at least a big chunk of it

1204
00:56:58,800 --> 00:57:10,790
and in addition to SVC B itself there is

1205
00:57:05,480 --> 00:57:14,730
HTTP SVC which is an HTTP specialized

1206
00:57:10,790 --> 00:57:17,070
form that that is intended for use with

1207
00:57:14,730 --> 00:57:20,070
HTTPS this is what we originally

1208
00:57:17,070 --> 00:57:23,010
presented so ITF 105 we presented HTTP

1209
00:57:20,070 --> 00:57:25,350
SVC and got consistent or at least

1210
00:57:23,010 --> 00:57:27,260
repeated feedback that people would like

1211
00:57:25,350 --> 00:57:31,860
to see a solution that was less

1212
00:57:27,260 --> 00:57:34,860
specifically bound to HTTPS at the same

1213
00:57:31,860 --> 00:57:39,870
time we found that an HTTP specific RR

1214
00:57:34,860 --> 00:57:41,760
type was valuable and so we have both a

1215
00:57:39,870 --> 00:57:46,560
generic solution and a specialization to

1216
00:57:41,760 --> 00:57:52,170
HTTPS and that that's the form that this

1217
00:57:46,560 --> 00:57:56,009
took at a adoption one of the things you

1218
00:57:52,170 --> 00:57:59,190
can do with this record is to do multi

1219
00:57:56,010 --> 00:58:01,860
CDN hosting with encrypted sni this has

1220
00:57:59,190 --> 00:58:04,800
been one of the trickiest challenges

1221
00:58:01,860 --> 00:58:06,330
with encrypted sni where there are

1222
00:58:04,800 --> 00:58:07,800
multiple IP addresses that could be

1223
00:58:06,330 --> 00:58:10,200
associated with your domain name

1224
00:58:07,800 --> 00:58:12,360
corresponding to different pools of

1225
00:58:10,200 --> 00:58:14,730
servers operated by different parties

1226
00:58:12,360 --> 00:58:17,280
those parties have different public keys

1227
00:58:14,730 --> 00:58:19,350
and so when you do your DNS queries you

1228
00:58:17,280 --> 00:58:21,090
need to get back an IP address and the

1229
00:58:19,350 --> 00:58:23,790
public key and it's fairly important

1230
00:58:21,090 --> 00:58:27,090
that that IP address and public key are

1231
00:58:23,790 --> 00:58:29,130
a matched pair that's why you need to

1232
00:58:27,090 --> 00:58:31,260
get them in a single query instead of in

1233
00:58:29,130 --> 00:58:32,910
two separate queries which potentially

1234
00:58:31,260 --> 00:58:37,760
could give you the IP address of one CDN

1235
00:58:32,910 --> 00:58:37,759
and then the public key of the other one

1236
00:58:38,150 --> 00:58:45,780
so that in presentation form in a zone

1237
00:58:41,430 --> 00:58:48,419
file these records have two possible

1238
00:58:45,780 --> 00:58:53,250
forms one of them is called the alias

1239
00:58:48,420 --> 00:58:56,370
form it looks like this it's it's a

1240
00:58:53,250 --> 00:58:59,370
simple alias of a name it's essentially

1241
00:58:56,370 --> 00:59:00,839
only intended to be used at apexis if

1242
00:58:59,370 --> 00:59:02,910
you're not at the apex of his own you

1243
00:59:00,840 --> 00:59:07,049
should probably use a cname

1244
00:59:02,910 --> 00:59:09,450
but but when aliasing and apex this can

1245
00:59:07,049 --> 00:59:12,690
can make that possible and the other

1246
00:59:09,450 --> 00:59:17,279
form is called service form this is used

1247
00:59:12,690 --> 00:59:19,589
by ESI in fact it is now referenced well

1248
00:59:17,279 --> 00:59:22,380
it is now essentially a dependency of

1249
00:59:19,589 --> 00:59:25,109
the encrypted sni draft in the TLS

1250
00:59:22,380 --> 00:59:28,019
working group so this is the way that we

1251
00:59:25,109 --> 00:59:31,380
expect to distribute yes and I public

1252
00:59:28,019 --> 00:59:33,390
keys and other configuration options but

1253
00:59:31,380 --> 00:59:37,079
it also includes other attributes here

1254
00:59:33,390 --> 00:59:39,868
notably as shown in this example you can

1255
00:59:37,079 --> 00:59:42,779
indicate that the ALP n is h3 meaning

1256
00:59:39,869 --> 00:59:45,750
that this is an HTTP 3 capable server

1257
00:59:42,779 --> 00:59:48,109
endpoint in which case the client can

1258
00:59:45,750 --> 00:59:51,390
initiate its connection with quick

1259
00:59:48,109 --> 00:59:54,720
instead of the status quo where the only

1260
00:59:51,390 --> 00:59:56,730
way to get to quic is to start with TLS

1261
00:59:54,720 --> 00:59:58,288
over TCP and then get an in band

1262
00:59:56,730 --> 01:00:00,119
indication from the server that you

1263
00:59:58,289 --> 01:00:03,289
should close your connection and try

1264
01:00:00,119 --> 01:00:07,980
again which is not very efficient and

1265
01:00:03,289 --> 01:00:11,460
not very elegant so there have been

1266
01:00:07,980 --> 01:00:15,890
quite a few changes since IETF 105 most

1267
01:00:11,460 --> 01:00:20,039
notably the generalization to SVC B and

1268
01:00:15,890 --> 01:00:22,140
this importantly a change in syntax so

1269
01:00:20,039 --> 01:00:25,769
if if you look at the example in this

1270
01:00:22,140 --> 01:00:31,109
slide we have the in red this key equals

1271
01:00:25,769 --> 01:00:33,240
value syntax in the zone file that is no

1272
01:00:31,109 --> 01:00:36,990
longer the HTTP alt service and tax

1273
01:00:33,240 --> 01:00:39,000
which is what what the last presented

1274
01:00:36,990 --> 01:00:40,799
version of this had but those were

1275
01:00:39,000 --> 01:00:43,410
before adoption so hopefully people have

1276
01:00:40,799 --> 01:00:48,599
seen this since adoption there have been

1277
01:00:43,410 --> 01:00:53,848
smaller changes and I won't go through

1278
01:00:48,599 --> 01:00:56,700
all of them so there are two major

1279
01:00:53,849 --> 01:00:58,440
remaining design questions in in my view

1280
01:00:56,700 --> 01:01:00,240
although I would not at all be surprised

1281
01:00:58,440 --> 01:01:04,049
if we discover some more in the course

1282
01:01:00,240 --> 01:01:06,379
of implementations beginning and in the

1283
01:01:04,049 --> 01:01:10,400
course of further reviews of the draft

1284
01:01:06,380 --> 01:01:15,660
one of them is related to reliability

1285
01:01:10,400 --> 01:01:16,680
fallback and yes and I so it's when

1286
01:01:15,660 --> 01:01:18,629
building reliable start

1287
01:01:16,680 --> 01:01:21,029
it's very nice it's very convenient if

1288
01:01:18,630 --> 01:01:23,040
your clients have a fallback behavior

1289
01:01:21,030 --> 01:01:24,990
where if they attempt a connection to

1290
01:01:23,040 --> 01:01:27,390
one of the various options that exists

1291
01:01:24,990 --> 01:01:31,529
and that attempt fails their clients

1292
01:01:27,390 --> 01:01:33,960
will retry down some sort of list but

1293
01:01:31,530 --> 01:01:36,750
with encrypted sni it's very important

1294
01:01:33,960 --> 01:01:39,089
that your clients not fall back from an

1295
01:01:36,750 --> 01:01:41,250
attempt that used encrypted sni to an

1296
01:01:39,089 --> 01:01:43,470
attempt that did not use encrypted s and

1297
01:01:41,250 --> 01:01:46,680
ims revealed the thing that the server

1298
01:01:43,470 --> 01:01:52,098
was trying to protect so there is a

1299
01:01:46,680 --> 01:01:56,040
tension here between reliability and and

1300
01:01:52,099 --> 01:02:00,300
security and in particular accidental

1301
01:01:56,040 --> 01:02:04,200
miss configuration and the other issue

1302
01:02:00,300 --> 01:02:08,390
that has come up is how to describe the

1303
01:02:04,200 --> 01:02:13,009
alias chain length so we have an alias

1304
01:02:08,390 --> 01:02:15,808
type here the alias form of this record

1305
01:02:13,010 --> 01:02:18,750
and that creates some sort of chain so

1306
01:02:15,809 --> 01:02:21,150
the question is how many times if you

1307
01:02:18,750 --> 01:02:23,849
encounter an alias how many times should

1308
01:02:21,150 --> 01:02:26,490
you keep following aliases before you

1309
01:02:23,849 --> 01:02:28,950
essentially give up so and in something

1310
01:02:26,490 --> 01:02:30,660
like a loop detection I want to point

1311
01:02:28,950 --> 01:02:34,078
out in case you haven't read the draft

1312
01:02:30,660 --> 01:02:37,348
that these aliases intermix freely with

1313
01:02:34,079 --> 01:02:39,569
cname so the question is not to have to

1314
01:02:37,349 --> 01:02:43,799
limit the question is not how to limit

1315
01:02:39,569 --> 01:02:46,170
the number of total hops or in the inner

1316
01:02:43,799 --> 01:02:47,700
or total links in a forwarding chain the

1317
01:02:46,170 --> 01:02:49,470
question is in a forwarding chain which

1318
01:02:47,700 --> 01:02:52,730
could potentially can't contain some

1319
01:02:49,470 --> 01:02:56,129
mixture of these records and see names

1320
01:02:52,730 --> 01:02:59,970
how many of these alias form records

1321
01:02:56,130 --> 01:03:01,290
should we allow in that chain and you

1322
01:02:59,970 --> 01:03:03,660
know do we need to enforce something

1323
01:03:01,290 --> 01:03:06,299
like if you have an alias to a cname to

1324
01:03:03,660 --> 01:03:10,200
an alias is that allowed or not allowed

1325
01:03:06,299 --> 01:03:12,390
things like that there's one other

1326
01:03:10,200 --> 01:03:14,129
question that I realized after making

1327
01:03:12,390 --> 01:03:17,040
these slides that I think would be worth

1328
01:03:14,130 --> 01:03:19,079
covering and that's just to say that the

1329
01:03:17,040 --> 01:03:20,759
current description of the required

1330
01:03:19,079 --> 01:03:22,319
server behavior at least that the

1331
01:03:20,760 --> 01:03:25,049
recommended server behavior which is

1332
01:03:22,319 --> 01:03:26,970
section 4 really could use some review

1333
01:03:25,049 --> 01:03:29,309
from server implementers both

1334
01:03:26,970 --> 01:03:30,499
authoritative and recursive I think that

1335
01:03:29,309 --> 01:03:32,369
there's

1336
01:03:30,499 --> 01:03:36,149
we could use a little bit more

1337
01:03:32,369 --> 01:03:41,099
specificity in describing exactly what

1338
01:03:36,150 --> 01:03:42,509
additional records should be returned so

1339
01:03:41,099 --> 01:03:45,599
those are the substantive questions

1340
01:03:42,509 --> 01:03:51,049
there are also two purely bike shed

1341
01:03:45,599 --> 01:03:53,309
questions that that we need to deal with

1342
01:03:51,049 --> 01:03:55,829
one of them is about the presentation

1343
01:03:53,309 --> 01:04:00,119
format I in a previous slide I showed

1344
01:03:55,829 --> 01:04:02,670
you this form with a zero here you know

1345
01:04:00,119 --> 01:04:04,499
the presentation format is a is fairly

1346
01:04:02,670 --> 01:04:08,130
flexible if we want we could get rid of

1347
01:04:04,499 --> 01:04:12,149
this zero opinions welcome I guess

1348
01:04:08,130 --> 01:04:15,240
and the other thing is what to name this

1349
01:04:12,150 --> 01:04:19,140
thing we have names of course the that

1350
01:04:15,240 --> 01:04:21,029
we've presented here nobody really likes

1351
01:04:19,140 --> 01:04:25,730
these names nobody really hates these

1352
01:04:21,029 --> 01:04:31,589
names and we need to pin down names I

1353
01:04:25,730 --> 01:04:34,859
think I'll stop there for discussion all

1354
01:04:31,589 --> 01:04:37,200
right relaying for Mark Andrews he says

1355
01:04:34,859 --> 01:04:40,230
stop working about she working about

1356
01:04:37,200 --> 01:04:46,700
chain lengths recursive servers already

1357
01:04:40,230 --> 01:04:46,700
have limits for this keep the zero okay

1358
01:04:47,900 --> 01:04:53,220
Regulus I see the doctrine talks about

1359
01:04:51,289 --> 01:04:55,650
cooperating servers and saying they

1360
01:04:53,220 --> 01:04:58,259
should look up the a records quad a

1361
01:04:55,650 --> 01:05:01,680
record so whatever just from point of

1362
01:04:58,259 --> 01:05:02,910
view of our our type allocation with

1363
01:05:01,680 --> 01:05:05,399
that level of conformance requirements

1364
01:05:02,910 --> 01:05:08,069
you may not be able to get early

1365
01:05:05,400 --> 01:05:09,720
allocations through expert review if it

1366
01:05:08,069 --> 01:05:12,269
was a May I think you'd be okay that

1367
01:05:09,720 --> 01:05:16,589
should just is getting to a point where

1368
01:05:12,269 --> 01:05:18,058
it exceeds the expectations that an

1369
01:05:16,589 --> 01:05:21,210
expert reviewer can go because if

1370
01:05:18,059 --> 01:05:23,880
there's required additional processing

1371
01:05:21,210 --> 01:05:26,180
then it has to go to a full is IHF

1372
01:05:23,880 --> 01:05:26,180
review

1373
01:05:29,270 --> 01:05:36,830
Eric or Chrome DNS two comments one on

1374
01:05:33,890 --> 01:05:39,020
the chain length chrome is very

1375
01:05:36,830 --> 01:05:40,819
sensitive to latency this is in the

1376
01:05:39,020 --> 01:05:44,660
critical path for loading web pages for

1377
01:05:40,820 --> 01:05:46,640
however many users we have and we just

1378
01:05:44,660 --> 01:05:48,890
want to avoid around unnecessary round

1379
01:05:46,640 --> 01:05:51,319
trips as much as possible so unless

1380
01:05:48,890 --> 01:05:52,850
someone has real concrete use cases for

1381
01:05:51,320 --> 01:05:54,200
why the chain lengths should be eight we

1382
01:05:52,850 --> 01:05:57,710
should be reducing that as much as

1383
01:05:54,200 --> 01:05:59,899
possible to make it sure everyone the

1384
01:05:57,710 --> 01:06:02,540
Gries is kosher for Lansing sensitive

1385
01:05:59,900 --> 01:06:03,980
clients like chrome to stop doing the

1386
01:06:02,540 --> 01:06:05,480
round trips as soon as they can as soon

1387
01:06:03,980 --> 01:06:08,330
as it becomes clear this is an

1388
01:06:05,480 --> 01:06:12,070
unreasonable use case to try anymore my

1389
01:06:08,330 --> 01:06:14,270
other comment is I hate HBS services I'm

1390
01:06:12,070 --> 01:06:16,700
surprised I was able to say it and just

1391
01:06:14,270 --> 01:06:18,590
one try there it's very hard to say I do

1392
01:06:16,700 --> 01:06:26,109
not like it please come up with a better

1393
01:06:18,590 --> 01:06:28,520
name okay Alex may over Nick today tea I

1394
01:06:26,110 --> 01:06:31,490
admit I haven't I haven't read the

1395
01:06:28,520 --> 01:06:33,680
document but a question came to my mind

1396
01:06:31,490 --> 01:06:36,859
that is could that service that is being

1397
01:06:33,680 --> 01:06:39,710
referred in that record also be the

1398
01:06:36,860 --> 01:06:42,500
authoritative name server for a certain

1399
01:06:39,710 --> 01:06:44,960
domain so would in theory that the

1400
01:06:42,500 --> 01:06:48,140
record sort of like create an

1401
01:06:44,960 --> 01:06:53,180
alternative delegation structure to a

1402
01:06:48,140 --> 01:06:55,310
name serve for domain and could that

1403
01:06:53,180 --> 01:06:56,710
record in that case solve the problem of

1404
01:06:55,310 --> 01:07:01,630
key discovery for an authoritative

1405
01:06:56,710 --> 01:07:04,280
encrypted DNS server it's just like

1406
01:07:01,630 --> 01:07:06,350
thinking a little bit farther sure I

1407
01:07:04,280 --> 01:07:10,850
think that you should probably talk to

1408
01:07:06,350 --> 01:07:13,040
Tommy Poli who's behind you in line it

1409
01:07:10,850 --> 01:07:15,460
occurs to me that that what you're

1410
01:07:13,040 --> 01:07:18,440
describing sounds like a proposal that

1411
01:07:15,460 --> 01:07:24,720
he has co-authored in in some detail

1412
01:07:18,440 --> 01:07:27,030
okay just a quick full

1413
01:07:24,720 --> 01:07:33,509
I guess from Mark Andrews relaying he

1414
01:07:27,030 --> 01:07:35,490
says should is fine it isn't must so ok

1415
01:07:33,510 --> 01:07:37,260
so then it sounds like we think we can

1416
01:07:35,490 --> 01:07:40,319
go through is that related to the iesg

1417
01:07:37,260 --> 01:07:44,550
review I'm sorry that the expert review

1418
01:07:40,319 --> 01:07:50,190
Diana for early allocation I'll see if

1419
01:07:44,550 --> 01:07:53,280
he answers again yes ok thank you

1420
01:07:50,190 --> 01:07:56,400
Alessandro Kadima CloudFlare I have a

1421
01:07:53,280 --> 01:08:00,750
clarification question um going back to

1422
01:07:56,400 --> 01:08:04,410
the earliest form is that the only form

1423
01:08:00,750 --> 01:08:08,700
allowed on the root zone on their root

1424
01:08:04,410 --> 01:08:13,680
domain or no alias form is not certainly

1425
01:08:08,700 --> 01:08:16,559
not required the because or so I find

1426
01:08:13,680 --> 01:08:19,799
the example here and in the dropped a

1427
01:08:16,560 --> 01:08:22,890
bit confusing it seems like if you have

1428
01:08:19,799 --> 01:08:25,198
example.com you have to have the alias

1429
01:08:22,890 --> 01:08:28,830
to as we see that example that whatever

1430
01:08:25,198 --> 01:08:31,858
and then in that actually put the the

1431
01:08:28,830 --> 01:08:35,250
proper HTTP as we see record but I guess

1432
01:08:31,859 --> 01:08:37,770
that's not required that your yes the

1433
01:08:35,250 --> 01:08:40,170
examples are are mostly demonstrating

1434
01:08:37,770 --> 01:08:42,600
the most complicated use case in order

1435
01:08:40,170 --> 01:08:45,060
to exercise all of the features of the

1436
01:08:42,600 --> 01:08:48,420
system in the examples I think that your

1437
01:08:45,060 --> 01:08:50,790
point is is well taken that so we should

1438
01:08:48,420 --> 01:08:53,910
we have a pretty simple use case I have

1439
01:08:50,790 --> 01:08:55,560
a web server that supports both HTTP to

1440
01:08:53,910 --> 01:08:57,899
and they should be three and it does yes

1441
01:08:55,560 --> 01:09:00,420
and I on both so it would be nice to

1442
01:08:57,899 --> 01:09:02,160
have an example for that as well so with

1443
01:09:00,420 --> 01:09:05,190
with yes and I in particular one thing

1444
01:09:02,160 --> 01:09:09,948
I'll say is in general yes and I makes

1445
01:09:05,189 --> 01:09:15,960
the most sense when it is controlled by

1446
01:09:09,948 --> 01:09:17,910
by a CDN and so yeah mysidia okay so

1447
01:09:15,960 --> 01:09:20,609
then in that case you you you might

1448
01:09:17,910 --> 01:09:22,108
reasonably expect that you would like to

1449
01:09:20,609 --> 01:09:23,520
be the one publishing your es and I

1450
01:09:22,109 --> 01:09:25,560
configuration and you would not want

1451
01:09:23,520 --> 01:09:29,940
your customers to be publishing you yes

1452
01:09:25,560 --> 01:09:32,880
I'd like a 12o DNS and HP ah I see yes

1453
01:09:29,939 --> 01:09:35,278
so in that in the case where the CDN

1454
01:09:32,880 --> 01:09:38,009
customer domain is under the control of

1455
01:09:35,279 --> 01:09:38,699
the same party that controls the es and

1456
01:09:38,009 --> 01:09:40,859
I keys then there

1457
01:09:38,698 --> 01:09:42,269
is no need for the alias form that's

1458
01:09:40,859 --> 01:09:45,179
certainly something that we could cover

1459
01:09:42,270 --> 01:09:47,489
in an additional example so that was the

1460
01:09:45,179 --> 01:09:50,699
main use case for de yes and I ENS

1461
01:09:47,488 --> 01:09:52,349
record is all like the CDN pop publishes

1462
01:09:50,698 --> 01:09:54,389
it and then there was the whole problem

1463
01:09:52,350 --> 01:10:01,580
with Lightsey names and whatever but

1464
01:09:54,390 --> 01:10:05,190
yeah yes so this this structure is is

1465
01:10:01,580 --> 01:10:07,860
compatible with with all use yeah it's

1466
01:10:05,190 --> 01:10:10,250
just like so I found it somewhat

1467
01:10:07,860 --> 01:10:13,889
confusing okay the other thing is like

1468
01:10:10,250 --> 01:10:17,130
from you know speaking for Claude Fleur

1469
01:10:13,890 --> 01:10:19,739
we are interested in this I can talk

1470
01:10:17,130 --> 01:10:22,320
with the with the DNS authoritative

1471
01:10:19,739 --> 01:10:24,718
server people and see like if they have

1472
01:10:22,320 --> 01:10:29,059
comments about this as well as the the

1473
01:10:24,719 --> 01:10:29,060
resolver people I guess we're both I

1474
01:10:29,570 --> 01:10:36,090
have two comments from Jerry first one

1475
01:10:32,790 --> 01:10:38,940
is from Wally van hoya SVC b sounds very

1476
01:10:36,090 --> 01:10:40,710
good otherwise but I'm worried about how

1477
01:10:38,940 --> 01:10:44,480
long we need to have a fallback for

1478
01:10:40,710 --> 01:10:48,510
clients that don't support le izing with

1479
01:10:44,480 --> 01:10:51,150
HTTP SVC can I ever be certain that

1480
01:10:48,510 --> 01:10:56,460
nobody needs an a record at Apex for

1481
01:10:51,150 --> 01:10:59,089
combat so here's a have an additional

1482
01:10:56,460 --> 01:11:01,980
slide that might be relevant to that I

1483
01:10:59,090 --> 01:11:03,600
won't go through all the details here

1484
01:11:01,980 --> 01:11:06,449
but I think that's essentially right

1485
01:11:03,600 --> 01:11:10,949
until some very hypothetical and distant

1486
01:11:06,449 --> 01:11:14,129
time we will not be able to rely on all

1487
01:11:10,949 --> 01:11:15,989
clients implementing this and so you

1488
01:11:14,130 --> 01:11:19,080
know whatever you have to do today

1489
01:11:15,989 --> 01:11:21,928
you're still gonna have to do that for

1490
01:11:19,080 --> 01:11:24,179
some fraction of clients all right in a

1491
01:11:21,929 --> 01:11:26,370
second one point Peter Sawchuk expanding

1492
01:11:24,179 --> 01:11:29,250
on chain limits any latency would be

1493
01:11:26,370 --> 01:11:32,580
introduced by site owner who also has

1494
01:11:29,250 --> 01:11:34,620
insensitive not to do stupid things to

1495
01:11:32,580 --> 01:11:36,300
his own side also it would be hard to

1496
01:11:34,620 --> 01:11:39,780
implement special chain langs

1497
01:11:36,300 --> 01:11:45,090
link limits for just 2 RR types please

1498
01:11:39,780 --> 01:11:47,250
keep the usual DNS behavior Brian Dixon

1499
01:11:45,090 --> 01:11:50,520
Oh daddy plus a thousand - what he just

1500
01:11:47,250 --> 01:11:55,170
said I would even go so far as to

1501
01:11:50,520 --> 01:11:57,900
suggest in the metadata for this to say

1502
01:11:55,170 --> 01:11:59,550
that it updates D name and C name and to

1503
01:11:57,900 --> 01:12:04,799
make them all play well together

1504
01:11:59,550 --> 01:12:06,810
I don't see any reason not to in regard

1505
01:12:04,800 --> 01:12:09,150
to the chain lengths chain lengths yes

1506
01:12:06,810 --> 01:12:11,010
it should it should support any

1507
01:12:09,150 --> 01:12:15,119
arbitrary ordering and number of

1508
01:12:11,010 --> 01:12:18,300
processes through the loop it's it's

1509
01:12:15,119 --> 01:12:21,598
again it's foot gun from the whoever

1510
01:12:18,300 --> 01:12:23,610
owns the zone whoever manages it it's

1511
01:12:21,599 --> 01:12:26,760
their own fault if they make it long and

1512
01:12:23,610 --> 01:12:29,670
latent they have the ability to fix it

1513
01:12:26,760 --> 01:12:35,520
but it should it should be a maximal

1514
01:12:29,670 --> 01:12:38,070
flexibility costly regarding one of

1515
01:12:35,520 --> 01:12:41,369
those issues number 73

1516
01:12:38,070 --> 01:12:44,429
- saying that yes ni has its own secure

1517
01:12:41,369 --> 01:12:49,170
fallback mechanism that uses a yes and I

1518
01:12:44,429 --> 01:12:52,949
retry a yes now you try message so I

1519
01:12:49,170 --> 01:12:55,560
don't think the DNS draft needs to deal

1520
01:12:52,949 --> 01:13:00,000
with that and regarding Frick versus

1521
01:12:55,560 --> 01:13:02,040
HTTP - I agree that there's a but maybe

1522
01:13:00,000 --> 01:13:04,980
you can just say that if you only

1523
01:13:02,040 --> 01:13:08,880
publish quick itv3 vehicles and then you

1524
01:13:04,980 --> 01:13:15,869
DPS our interval it's the configuration

1525
01:13:08,880 --> 01:13:16,949
fault I'm sorry I didn't hear the last

1526
01:13:15,869 --> 01:13:23,098
few words

1527
01:13:16,949 --> 01:13:27,750
yeah well so there I my PSN eyes are

1528
01:13:23,099 --> 01:13:29,179
this format problem and regarding i HT 3

1529
01:13:27,750 --> 01:13:32,969
3 vs ah

1530
01:13:29,179 --> 01:13:36,960
HTTP - phobic yeah I agree that if UDP

1531
01:13:32,969 --> 01:13:40,650
is unreachable then and if the only if

1532
01:13:36,960 --> 01:13:43,820
the server only publishes its remapping

1533
01:13:40,650 --> 01:13:46,409
then it'll be clear that there's a

1534
01:13:43,820 --> 01:13:50,570
irritability problem so maybe you can

1535
01:13:46,409 --> 01:13:50,570
just say that I'll leave it as is

1536
01:13:50,650 --> 01:13:55,059
so just to explain that a little more

1537
01:13:53,710 --> 01:13:58,240
I guess the assumption here is that

1538
01:13:55,060 --> 01:14:00,070
because there will always be or because

1539
01:13:58,240 --> 01:14:03,940
there will for a long time be clients

1540
01:14:00,070 --> 01:14:06,969
who aren't implementing SVC be at all

1541
01:14:03,940 --> 01:14:09,730
you should you'll likely be able to fall

1542
01:14:06,970 --> 01:14:11,200
back to a non SVC be connection or

1543
01:14:09,730 --> 01:14:15,849
you're just connecting on bare IP

1544
01:14:11,200 --> 01:14:18,370
addresses except if you accept if you

1545
01:14:15,850 --> 01:14:20,260
have ES and I if you started with the s

1546
01:14:18,370 --> 01:14:24,930
and I then that Avenue will fall back is

1547
01:14:20,260 --> 01:14:24,930
cut off that's why these things interact

1548
01:14:26,070 --> 01:14:34,179
thank you I favor how come I like to

1549
01:14:31,330 --> 01:14:38,260
reiterate what all my fellow resolver

1550
01:14:34,180 --> 01:14:40,450
opera vendor après said I mean the the

1551
01:14:38,260 --> 01:14:42,490
cname chain problem really is solved

1552
01:14:40,450 --> 01:14:45,639
there's nothing to do ender and the they

1553
01:14:42,490 --> 01:14:48,040
were usually also is a caching of these

1554
01:14:45,640 --> 01:14:49,630
kind of negative events when beneath

1555
01:14:48,040 --> 01:14:53,769
when the change exceeds so there is

1556
01:14:49,630 --> 01:14:55,680
really not much latency that a stub

1557
01:14:53,770 --> 01:14:59,980
resolver will get if if there is a

1558
01:14:55,680 --> 01:15:01,510
consistent problem for for that the

1559
01:14:59,980 --> 01:15:06,040
other thing the hint section I looked at

1560
01:15:01,510 --> 01:15:09,550
that text and maybe I mean I think it's

1561
01:15:06,040 --> 01:15:14,170
I don't see the hints used anymore could

1562
01:15:09,550 --> 01:15:19,900
I misread that yeah so let's talk about

1563
01:15:14,170 --> 01:15:22,090
the the IP hints for a second the the IP

1564
01:15:19,900 --> 01:15:26,559
hints have been a strong request from

1565
01:15:22,090 --> 01:15:29,700
the encrypted sni side and they're they

1566
01:15:26,560 --> 01:15:33,610
are really only used in a fairly narrow

1567
01:15:29,700 --> 01:15:36,760
situation which I've attempted to

1568
01:15:33,610 --> 01:15:41,049
describe here which I did not fund you

1569
01:15:36,760 --> 01:15:44,200
can you when are they used so they're

1570
01:15:41,050 --> 01:15:45,910
they're used they're used when the the

1571
01:15:44,200 --> 01:15:47,260
client is using a recursive resolver

1572
01:15:45,910 --> 01:15:50,860
that is not aware of this newer

1573
01:15:47,260 --> 01:15:53,200
archetype so that this draft does not

1574
01:15:50,860 --> 01:15:56,500
work does not have a mandatory

1575
01:15:53,200 --> 01:15:58,720
requirement on recursive to add support

1576
01:15:56,500 --> 01:16:01,150
it has a should level recommendation

1577
01:15:58,720 --> 01:16:03,220
there is no need for recursive to

1578
01:16:01,150 --> 01:16:05,410
understand that record

1579
01:16:03,220 --> 01:16:08,140
so we'll transparently just give it to

1580
01:16:05,410 --> 01:16:10,930
you so there isn't a need but if the

1581
01:16:08,140 --> 01:16:13,840
recursive is not aware then the stub is

1582
01:16:10,930 --> 01:16:18,040
forced to essentially do a chain walking

1583
01:16:13,840 --> 01:16:20,350
exercise walking any walking through any

1584
01:16:18,040 --> 01:16:21,850
indirection steps that are present if

1585
01:16:20,350 --> 01:16:26,290
the essentially if the recursive is

1586
01:16:21,850 --> 01:16:30,160
operating under RFC 3597 unknown RR type

1587
01:16:26,290 --> 01:16:31,990
behavior in that case there's a

1588
01:16:30,160 --> 01:16:34,720
substantial performance alee a

1589
01:16:31,990 --> 01:16:36,730
substantial performance penalty for

1590
01:16:34,720 --> 01:16:38,980
having to walk this chain to find the

1591
01:16:36,730 --> 01:16:41,019
address records and so in that

1592
01:16:38,980 --> 01:16:44,410
particular case the IP hints are

1593
01:16:41,020 --> 01:16:47,860
designed to short-circuit that process

1594
01:16:44,410 --> 01:16:50,320
and allow clients to connect faster ok

1595
01:16:47,860 --> 01:16:57,040
thanks and the the last question is what

1596
01:16:50,320 --> 01:17:00,009
is t5 in key 0 it was just in the in the

1597
01:16:57,040 --> 01:17:01,510
pen or in the I think 11 section 11 but

1598
01:17:00,010 --> 01:17:04,030
one where you put all the different

1599
01:17:01,510 --> 01:17:06,040
stuff and you describe it you define key

1600
01:17:04,030 --> 01:17:12,040
0 and key 5 but I couldn't find any

1601
01:17:06,040 --> 01:17:13,390
other instance of that in document I'm

1602
01:17:12,040 --> 01:17:19,810
not sure what you're referring to but I

1603
01:17:13,390 --> 01:17:22,060
would be I would have a lot of fun Tommy

1604
01:17:19,810 --> 01:17:24,580
poly Apple so thanks for sharing this

1605
01:17:22,060 --> 01:17:27,490
we're very excited about trying to get

1606
01:17:24,580 --> 01:17:30,600
implementation and testing with it with

1607
01:17:27,490 --> 01:17:33,670
regards to the points earlier about

1608
01:17:30,600 --> 01:17:35,740
early allocation and the requirements

1609
01:17:33,670 --> 01:17:39,510
for that I think it kind of also ties

1610
01:17:35,740 --> 01:17:42,460
into you know making sure that as we

1611
01:17:39,510 --> 01:17:45,040
deploy this for experimentation and

1612
01:17:42,460 --> 01:17:48,130
early deployments with ES and I and

1613
01:17:45,040 --> 01:17:50,980
other features that this kind of works

1614
01:17:48,130 --> 01:17:53,080
gracefully when we have many recursive

1615
01:17:50,980 --> 01:17:55,330
that aren't doing a special behavior for

1616
01:17:53,080 --> 01:17:58,300
it and I think the current status of

1617
01:17:55,330 --> 01:17:59,620
this is you know if we essentially will

1618
01:17:58,300 --> 01:18:02,200
have some cases that are maybe not

1619
01:17:59,620 --> 01:18:03,340
optimal if the case if the recursive

1620
01:18:02,200 --> 01:18:05,139
don't know about it but we have

1621
01:18:03,340 --> 01:18:07,810
workarounds so I just want to make sure

1622
01:18:05,140 --> 01:18:11,080
that we focus on that and if there are

1623
01:18:07,810 --> 01:18:12,910
any things that we should tweak in the

1624
01:18:11,080 --> 01:18:14,410
text to make sure that it's possible to

1625
01:18:12,910 --> 01:18:16,170
get that early allocation start doing

1626
01:18:14,410 --> 01:18:19,280
that experimentation

1627
01:18:16,170 --> 01:18:22,350
we kind of do those changes as necessary

1628
01:18:19,280 --> 01:18:24,870
also I wanted to check have we asked for

1629
01:18:22,350 --> 01:18:27,570
early allocation officially yet not yet

1630
01:18:24,870 --> 01:18:29,929
among other things that it requires us

1631
01:18:27,570 --> 01:18:31,980
to finalize our our our names and

1632
01:18:29,929 --> 01:18:34,650
probably also the president okay so this

1633
01:18:31,980 --> 01:18:36,000
makes the bike shed very important well

1634
01:18:34,650 --> 01:18:38,040
it makes closing the bike shed very

1635
01:18:36,000 --> 01:18:41,670
important yes encouraging of anybody to

1636
01:18:38,040 --> 01:18:44,850
jump in necessary okay so I guess what

1637
01:18:41,670 --> 01:18:46,260
is the time frame for this in what is

1638
01:18:44,850 --> 01:18:49,650
the manner in which we want to paint our

1639
01:18:46,260 --> 01:18:51,060
bike shed so given that is it

1640
01:18:49,650 --> 01:18:53,780
so far I've heard reluctance to engage

1641
01:18:51,060 --> 01:18:57,960
which I appreciate yes um I think the

1642
01:18:53,780 --> 01:19:00,239
editors will will try to decide on some

1643
01:18:57,960 --> 01:19:03,179
final names which might just be current

1644
01:19:00,239 --> 01:19:05,820
names and send them to the list for for

1645
01:19:03,179 --> 01:19:09,750
essentially final comments before we

1646
01:19:05,820 --> 01:19:12,630
freeze it for what's the please please

1647
01:19:09,750 --> 01:19:16,140
do my comments earlier with with my

1648
01:19:12,630 --> 01:19:17,760
expert review hats on so you actually

1649
01:19:16,140 --> 01:19:18,989
you need basically a fully stable

1650
01:19:17,760 --> 01:19:21,030
specification clicking at early

1651
01:19:18,989 --> 01:19:23,519
allocation because implementers will

1652
01:19:21,030 --> 01:19:25,110
actually in fluent at that point so the

1653
01:19:23,520 --> 01:19:27,030
presentation format needs to be fixed

1654
01:19:25,110 --> 01:19:29,940
the Wi-Fi that needs to be completely

1655
01:19:27,030 --> 01:19:31,800
fixed I just had checked with all my

1656
01:19:29,940 --> 01:19:35,009
other reviewers we also live the opinion

1657
01:19:31,800 --> 01:19:37,230
that if it says may so that it's truly

1658
01:19:35,010 --> 01:19:39,690
optional processing you'll be okay for

1659
01:19:37,230 --> 01:19:43,099
expert review but if you say should

1660
01:19:39,690 --> 01:19:45,928
that's too strong the requirement to

1661
01:19:43,100 --> 01:19:48,420
clarify on that point would it be okay

1662
01:19:45,929 --> 01:19:50,040
to say may and then potentially have

1663
01:19:48,420 --> 01:19:59,429
that change by the time it becomes an

1664
01:19:50,040 --> 01:20:00,960
RFC to it should nominally have about

1665
01:19:59,429 --> 01:20:03,360
ten minutes left in the session and

1666
01:20:00,960 --> 01:20:05,400
we've got quite a long Mike line here so

1667
01:20:03,360 --> 01:20:09,030
nobody should feel hard but let's keep

1668
01:20:05,400 --> 01:20:10,559
it moving the allocation we can take up

1669
01:20:09,030 --> 01:20:12,449
on the mailing list when everybody's had

1670
01:20:10,560 --> 01:20:13,800
a chance to talk to it and you know make

1671
01:20:12,449 --> 01:20:18,000
sure we understand all the requirements

1672
01:20:13,800 --> 01:20:21,570
thanks Roman sandals laps um so those

1673
01:20:18,000 --> 01:20:23,730
alias record snow can point to the SVC

1674
01:20:21,570 --> 01:20:25,889
records the eight records and quad a

1675
01:20:23,730 --> 01:20:27,900
record rights which means that if you

1676
01:20:25,890 --> 01:20:29,250
start walking the chain if you do the

1677
01:20:27,900 --> 01:20:30,058
additional processing you have to send

1678
01:20:29,250 --> 01:20:33,000
out three

1679
01:20:30,059 --> 01:20:35,369
for every aylesh you gets that's correct

1680
01:20:33,000 --> 01:20:40,559
if you see in it if you see an alias

1681
01:20:35,369 --> 01:20:44,130
record as a recursive you have to you

1682
01:20:40,559 --> 01:20:46,139
have to fire three queries if you don't

1683
01:20:44,130 --> 01:20:48,570
and and essentially pass it to the

1684
01:20:46,139 --> 01:20:50,730
client essentially you don't implement

1685
01:20:48,570 --> 01:20:54,269
the should strength recommendation then

1686
01:20:50,730 --> 01:20:56,519
the client will instead have to issue at

1687
01:20:54,270 --> 01:20:59,550
least two probably three queries with

1688
01:20:56,520 --> 01:21:01,199
resolver it also means that if you well

1689
01:20:59,550 --> 01:21:03,449
you have to wait till you get to n so

1690
01:21:01,199 --> 01:21:04,799
for your sec query right only then you

1691
01:21:03,449 --> 01:21:08,669
know if you want to use that one already

1692
01:21:04,800 --> 01:21:11,429
in quad-a records which also means that

1693
01:21:08,670 --> 01:21:13,289
if that new record type is blob

1694
01:21:11,429 --> 01:21:17,159
somewhere you can start using those in

1695
01:21:13,289 --> 01:21:21,179
quad-a records I'm sorry if a new record

1696
01:21:17,159 --> 01:21:24,598
type if there are some upstream if

1697
01:21:21,179 --> 01:21:26,489
there's something on the path that those

1698
01:21:24,599 --> 01:21:30,780
were things with unknown record types

1699
01:21:26,489 --> 01:21:32,129
then you stop resolving yeah that's it

1700
01:21:30,780 --> 01:21:34,679
that's potentially a very serious

1701
01:21:32,130 --> 01:21:36,829
concern one of the questions I have is

1702
01:21:34,679 --> 01:21:40,050
is there

1703
01:21:36,829 --> 01:21:43,019
have you seen significant problems with

1704
01:21:40,050 --> 01:21:44,849
unknown are with a ability to transfer

1705
01:21:43,020 --> 01:21:49,650
unknown RR types between recursive and

1706
01:21:44,849 --> 01:21:52,440
authoritative and yes um would it be

1707
01:21:49,650 --> 01:21:54,900
possible to indicate in the alias

1708
01:21:52,440 --> 01:21:58,409
records whether it's pointing to a other

1709
01:21:54,900 --> 01:21:59,519
SVC type or not because then the problem

1710
01:21:58,409 --> 01:22:02,638
is basically solved then you only have

1711
01:21:59,520 --> 01:22:04,829
to send one query then you send it to a

1712
01:22:02,639 --> 01:22:08,460
name server where you know they support

1713
01:22:04,829 --> 01:22:10,380
it but that's certainly an interesting

1714
01:22:08,460 --> 01:22:13,980
idea I would have to think more about it

1715
01:22:10,380 --> 01:22:16,559
maybe the one thing I would say is it

1716
01:22:13,980 --> 01:22:20,489
creates an operational it creates an

1717
01:22:16,559 --> 01:22:23,639
operational tie between the alias source

1718
01:22:20,489 --> 01:22:26,940
and target and so it's it's a little bit

1719
01:22:23,639 --> 01:22:28,650
unpleasant for that reason if a CDN

1720
01:22:26,940 --> 01:22:30,210
changes its configuration you wouldn't

1721
01:22:28,650 --> 01:22:32,519
want to have to tell all the customers

1722
01:22:30,210 --> 01:22:38,730
that they also have to change their

1723
01:22:32,520 --> 01:22:41,340
configuration Andre I see so I'm so

1724
01:22:38,730 --> 01:22:42,468
happy that we are finally abandoning the

1725
01:22:41,340 --> 01:22:43,699
a name and

1726
01:22:42,469 --> 01:22:45,769
moving the problem early should have

1727
01:22:43,699 --> 01:22:48,259
been from the beginning so from the

1728
01:22:45,769 --> 01:22:51,320
implementers perspective I see no

1729
01:22:48,260 --> 01:22:52,729
problem there and I'm even willing to

1730
01:22:51,320 --> 01:22:55,518
buy the bullet and implement the IP

1731
01:22:52,729 --> 01:22:58,309
hints if it helps you to move from a

1732
01:22:55,519 --> 01:23:00,829
name - to whatever you name it in the

1733
01:22:58,309 --> 01:23:01,999
end and implement it in the clients

1734
01:23:00,829 --> 01:23:08,329
where it should have been from the

1735
01:23:01,999 --> 01:23:10,429
beginning thank you relaying for Dan

1736
01:23:08,329 --> 01:23:13,369
York have developers of clients

1737
01:23:10,429 --> 01:23:18,679
expressed interest in implementing SVC B

1738
01:23:13,369 --> 01:23:20,539
or HTTPS VC I do we have people out

1739
01:23:18,679 --> 01:23:23,920
there who we're excited to implement

1740
01:23:20,539 --> 01:23:28,670
this I think Apple said this earlier

1741
01:23:23,920 --> 01:23:30,949
okay so if they're clients wanting to

1742
01:23:28,670 --> 01:23:33,229
excited being excited to implement this

1743
01:23:30,949 --> 01:23:34,460
there's what Dan Erica with Chrome DNS

1744
01:23:33,229 --> 01:23:38,179
yes we're excited to implement this

1745
01:23:34,460 --> 01:23:41,119
right and then I have two other comments

1746
01:23:38,179 --> 01:23:43,579
from Mark Andrews he says at a sunset

1747
01:23:41,119 --> 01:23:46,969
date for not using record at Apex

1748
01:23:43,579 --> 01:23:52,849
and secondly wire formats need to be

1749
01:23:46,969 --> 01:23:54,199
stable for early allocation yeah as far

1750
01:23:52,849 --> 01:23:55,820
as the early allocation we'll make sure

1751
01:23:54,199 --> 01:23:57,018
that you know will work with I Anna

1752
01:23:55,820 --> 01:23:58,190
that's you know frankly it's part of the

1753
01:23:57,019 --> 01:23:59,840
chairs job is to make sure that they

1754
01:23:58,190 --> 01:24:03,589
work with the request is fully cooked

1755
01:23:59,840 --> 01:24:06,499
before we go to I Anna with it David's

1756
01:24:03,590 --> 01:24:08,570
Knaus e Google Chrome yep just well Eric

1757
01:24:06,499 --> 01:24:10,639
answered what I was gonna say just yes

1758
01:24:08,570 --> 01:24:12,920
Google Chrome is very interested in this

1759
01:24:10,639 --> 01:24:15,320
let's make it happen so have the editors

1760
01:24:12,920 --> 01:24:17,210
pick a color of a for the bike shed we

1761
01:24:15,320 --> 01:24:22,639
really don't care just make it happen so

1762
01:24:17,210 --> 01:24:23,090
we can move forward key move forward

1763
01:24:22,639 --> 01:24:35,269
slide

1764
01:24:23,090 --> 01:24:37,340
well sorry how did that so the the other

1765
01:24:35,269 --> 01:24:41,119
this particular the different forms

1766
01:24:37,340 --> 01:24:43,309
other than the alias those are those are

1767
01:24:41,119 --> 01:24:46,509
needed in certain cases to be able to

1768
01:24:43,309 --> 01:24:49,130
say there's more than one kind of thing

1769
01:24:46,510 --> 01:24:56,030
doesn't need to have any s and I config

1770
01:24:49,130 --> 01:24:59,539
I know all the so SVC be in general

1771
01:24:56,030 --> 01:25:02,559
is protocol independent and it contains

1772
01:24:59,539 --> 01:25:07,579
essentially an arbitrary key value store

1773
01:25:02,559 --> 01:25:12,860
this HTTP SVC is HTTP specific and the

1774
01:25:07,579 --> 01:25:16,909
only mandatory key is a LPN okay cool

1775
01:25:12,860 --> 01:25:18,110
so I'm sure that Brian Dixon / GoDaddy

1776
01:25:16,909 --> 01:25:20,210
that we're very interested in

1777
01:25:18,110 --> 01:25:22,759
implementing at least the zero case as

1778
01:25:20,210 --> 01:25:25,880
well as possibly a limited amount of

1779
01:25:22,760 --> 01:25:29,949
these other more advanced forms as soon

1780
01:25:25,880 --> 01:25:32,659
as it stabilizes and maybe some kind of

1781
01:25:29,949 --> 01:25:35,210
label that starts with an H how about

1782
01:25:32,659 --> 01:25:45,679
Hugh hu e that's a generic term for a

1783
01:25:35,210 --> 01:25:48,199
bike shed color okay so we would like to

1784
01:25:45,679 --> 01:25:49,999
make progress as as fast as we can of

1785
01:25:48,199 --> 01:25:53,509
course on this draft in particular this

1786
01:25:49,999 --> 01:25:55,429
draft is blocking certain is one of the

1787
01:25:53,510 --> 01:25:58,789
things that blocks the widespread

1788
01:25:55,429 --> 01:26:00,289
deployment of es ni so there's a there's

1789
01:25:58,789 --> 01:26:01,789
a certain amount of pressure to move

1790
01:26:00,289 --> 01:26:03,619
forward on this but it also sounds like

1791
01:26:01,789 --> 01:26:05,599
we should be able to make good progress

1792
01:26:03,619 --> 01:26:07,759
I want to especially thank people who

1793
01:26:05,599 --> 01:26:11,559
started prototyping and I look forward

1794
01:26:07,760 --> 01:26:11,559
to the feedback from the prototyping

1795
01:26:12,429 --> 01:26:18,619
thank you and thank you for the room for

1796
01:26:15,920 --> 01:26:21,590
the good discussions and input we also

1797
01:26:18,619 --> 01:26:23,960
want to thanks villain for his

1798
01:26:21,590 --> 01:26:27,110
flexibility so the presentation on

1799
01:26:23,960 --> 01:26:35,449
Dena's cookies will be bumped and moved

1800
01:26:27,110 --> 01:26:38,659
to Thursday we have sufficient room good

1801
01:26:35,449 --> 01:26:42,518
so please continue

1802
01:26:38,659 --> 01:26:42,518
also this discussion on the mailing list

1803
01:26:43,329 --> 01:26:54,018
blue sheets for the yeah so we already

1804
01:26:49,969 --> 01:26:56,599
heard some kind of commitments on the

1805
01:26:54,019 --> 01:26:58,610
Mike for early implementations from

1806
01:26:56,599 --> 01:27:02,150
different organizations we're quite

1807
01:26:58,610 --> 01:27:04,009
happy with that so and also before

1808
01:27:02,150 --> 01:27:06,469
working last call we would like to see a

1809
01:27:04,010 --> 01:27:07,999
number of implementations of our

1810
01:27:06,469 --> 01:27:08,970
prototype proof of concept

1811
01:27:07,999 --> 01:27:14,429
implementation

1812
01:27:08,970 --> 01:27:17,910
also draft okay then we want thanks

1813
01:27:14,430 --> 01:27:20,030
everybody and see y'all Thursday thanks

1814
01:27:17,910 --> 01:27:20,030
so much

1815
01:27:40,580 --> 01:27:44,450
we're such a good camera

