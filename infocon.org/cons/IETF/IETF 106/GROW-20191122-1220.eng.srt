1
00:00:06,580 --> 00:00:14,150
yes ma'am I think we're out my banana

2
00:00:09,430 --> 00:00:22,869
flipper a laptop my keys handy not

3
00:00:14,150 --> 00:00:38,049
working okay well you made this yourself

4
00:00:22,869 --> 00:00:43,970
thank you for sharing good afternoon

5
00:00:38,049 --> 00:00:46,040
groan this is to grow session of ITF 106

6
00:00:43,970 --> 00:00:51,470
and Singapore if you're not supposed to

7
00:00:46,040 --> 00:00:53,629
be in Singapore look for help I very

8
00:00:51,470 --> 00:00:55,010
very much appreciate that all of you

9
00:00:53,629 --> 00:00:57,229
have been pulling through the entire

10
00:00:55,010 --> 00:01:02,900
week and are sitting here at the last

11
00:00:57,229 --> 00:01:05,860
session slot of ITF I think we can all

12
00:01:02,900 --> 00:01:08,298
agree that in the random pick we have

13
00:01:05,860 --> 00:01:11,030
drawn the far side of the spectrum

14
00:01:08,299 --> 00:01:14,180
compared to the last meeting which was

15
00:01:11,030 --> 00:01:17,410
on a Tuesday but I would suggest let's

16
00:01:14,180 --> 00:01:19,730
let's go through our materials and

17
00:01:17,410 --> 00:01:24,860
participate in the grow working group

18
00:01:19,730 --> 00:01:29,420
session this is the note well you may

19
00:01:24,860 --> 00:01:31,670
have seen it a few times before as part

20
00:01:29,420 --> 00:01:34,280
of the note well please make sure that

21
00:01:31,670 --> 00:01:38,870
you write your name on the blue sheets

22
00:01:34,280 --> 00:01:41,210
name and affiliation and when we think

23
00:01:38,870 --> 00:01:44,930
we have captured everybody please return

24
00:01:41,210 --> 00:01:46,990
the blue sheets to us these are

25
00:01:44,930 --> 00:01:49,820
resources relevant to the working group

26
00:01:46,990 --> 00:01:52,399
our agendas online the materials for the

27
00:01:49,820 --> 00:01:56,240
agenda we have a mailing list a jabber

28
00:01:52,400 --> 00:01:59,659
room and this brings me to the point of

29
00:01:56,240 --> 00:02:03,020
looking for a volunteer to the jabber

30
00:01:59,659 --> 00:02:05,600
scribe so anybody in the room able to

31
00:02:03,020 --> 00:02:09,579
connect to the meet echo website and

32
00:02:05,600 --> 00:02:14,390
monitor may the meet echo jabber room

33
00:02:09,580 --> 00:02:17,870
Gordon thank you for your thank you for

34
00:02:14,390 --> 00:02:23,988
this we also need a

35
00:02:17,870 --> 00:02:40,040
Staker would anybody want to take two

36
00:02:23,989 --> 00:02:42,980
minutes for this session all right

37
00:02:40,040 --> 00:02:44,840
we're appointing Jarrett mouths as the

38
00:02:42,980 --> 00:02:49,578
minister taker of this session Thank You

39
00:02:44,840 --> 00:02:51,590
Jarrett okay blue sheets are being

40
00:02:49,579 --> 00:02:55,010
filled in minutes taker assigned to

41
00:02:51,590 --> 00:02:56,810
prescribe a science any agenda meshing

42
00:02:55,010 --> 00:03:18,048
are people comfortable with the agenda

43
00:02:56,810 --> 00:03:19,819
as presenters okay for those of you

44
00:03:18,049 --> 00:03:25,819
presenting this is the mic it goes near

45
00:03:19,819 --> 00:03:28,328
your face if you do this please hold the

46
00:03:25,819 --> 00:03:31,790
mic in your hand it will not bite you

47
00:03:28,329 --> 00:03:33,680
speak into the mic stand onto the seven

48
00:03:31,790 --> 00:03:36,828
parallel or sorry seven perpendicular

49
00:03:33,680 --> 00:03:38,030
lines five of which are transparent so

50
00:03:36,829 --> 00:03:43,400
that me Tico can see you

51
00:03:38,030 --> 00:03:44,900
that's it what okay we have some

52
00:03:43,400 --> 00:03:46,609
existing drafts here's the status for

53
00:03:44,900 --> 00:03:50,690
them you can look at the tools page to

54
00:03:46,609 --> 00:03:53,569
delve deeper if you prefer the two

55
00:03:50,690 --> 00:03:56,660
question marks for adopt is I think we

56
00:03:53,569 --> 00:03:59,198
forgot to send that to the IHG we have a

57
00:03:56,660 --> 00:04:01,910
couple of things that are that are iesg

58
00:03:59,199 --> 00:04:05,180
to send to the iesg we just forgot to do

59
00:04:01,910 --> 00:04:10,099
that emails from the authors are always

60
00:04:05,180 --> 00:04:12,730
helpful in this regard you want to talk

61
00:04:10,099 --> 00:04:12,730
about the Charter

62
00:04:21,899 --> 00:04:27,960
if you're monitoring the mailing lists

63
00:04:24,320 --> 00:04:29,639
we are undertaking an effort to rechart

64
00:04:27,960 --> 00:04:33,719
through the working group to bring it up

65
00:04:29,639 --> 00:04:37,610
to date with the modern world the last

66
00:04:33,720 --> 00:04:42,810
three chartering efforts stems from I

67
00:04:37,610 --> 00:04:46,260
think at least 15 years ago so it would

68
00:04:42,810 --> 00:04:49,350
be good to to assess whether what grow

69
00:04:46,260 --> 00:04:51,570
is doing in practice still aligns with

70
00:04:49,350 --> 00:04:57,540
the Charter and align the charter with

71
00:04:51,570 --> 00:04:59,280
reality the input mechanism to this

72
00:04:57,540 --> 00:05:01,500
discussion is higher the mailing list we

73
00:04:59,280 --> 00:05:05,638
will not be taking these decisions in

74
00:05:01,500 --> 00:05:07,889
this meeting but yeah check out the

75
00:05:05,639 --> 00:05:12,780
mailing list reads the proposed charter

76
00:05:07,889 --> 00:05:14,970
and reflects your thoughts on that for

77
00:05:12,780 --> 00:05:20,669
those of you who don't know what a

78
00:05:14,970 --> 00:05:24,150
Charter is a charter defines the purpose

79
00:05:20,669 --> 00:05:28,080
of the working group that purpose is

80
00:05:24,150 --> 00:05:30,900
then expressed in goals which brings it

81
00:05:28,080 --> 00:05:34,020
slightly closer to tangible action items

82
00:05:30,900 --> 00:05:37,380
and then in terms of action items those

83
00:05:34,020 --> 00:05:42,139
are called milestones so we go from the

84
00:05:37,380 --> 00:05:44,760
most abstract the Charter to goals -

85
00:05:42,139 --> 00:05:47,030
milestones which are actionable things

86
00:05:44,760 --> 00:05:51,990
on which we can measure our performance

87
00:05:47,030 --> 00:05:56,659
now it is very it's a cultural aspect of

88
00:05:51,990 --> 00:05:59,310
ITF - wildly deviate from the milestones

89
00:05:56,660 --> 00:06:00,930
that's okay we don't need to make it an

90
00:05:59,310 --> 00:06:03,539
exhaustive list but it is good for

91
00:06:00,930 --> 00:06:05,940
newcomers to have an understanding of

92
00:06:03,539 --> 00:06:08,099
what this working group does what the

93
00:06:05,940 --> 00:06:11,099
direction of the work of the working

94
00:06:08,099 --> 00:06:15,380
group is and what we consider important

95
00:06:11,099 --> 00:06:15,380
to work on in the future

96
00:06:15,410 --> 00:06:28,919
so that covers - charlie existing drafts

97
00:06:24,060 --> 00:06:31,169
in the IDR session we brought up that

98
00:06:28,919 --> 00:06:33,688
maximum prefix limits No

99
00:06:31,169 --> 00:06:38,639
longer belongs and grow so we can strike

100
00:06:33,689 --> 00:06:41,550
through deaths we have published some RF

101
00:06:38,639 --> 00:06:43,080
drafts s RFC's congratulations to the

102
00:06:41,550 --> 00:06:47,219
working group and the offers for

103
00:06:43,080 --> 00:06:49,438
accomplishing that work and I will not

104
00:06:47,219 --> 00:06:53,120
venture into older nitty-gritty details

105
00:06:49,439 --> 00:06:57,419
of the workflow so let's go to

106
00:06:53,120 --> 00:07:26,479
presentations Camillo your name is up

107
00:06:57,419 --> 00:07:26,479
first so you will be first market there

108
00:07:28,669 --> 00:07:38,758
ok so hello this is an update on BMP pod

109
00:07:35,099 --> 00:07:41,639
marking so just as an overview this drug

110
00:07:38,759 --> 00:07:45,210
basically tries to convey the pod status

111
00:07:41,639 --> 00:07:48,000
of a path in BMP but status meaning

112
00:07:45,210 --> 00:07:50,818
whether the pot is install uninstall

113
00:07:48,000 --> 00:07:53,639
best path multi-party C&P I know that

114
00:07:50,819 --> 00:07:56,250
your imagination fly if this is the

115
00:07:53,639 --> 00:08:00,599
mechanisms of the TLB draft that

116
00:07:56,250 --> 00:08:04,379
currently in our growth draft that

117
00:08:00,599 --> 00:08:05,729
powder will explain later and well what

118
00:08:04,379 --> 00:08:07,349
status is something that we don't have

119
00:08:05,729 --> 00:08:09,839
right now and BMP scan it can actually

120
00:08:07,349 --> 00:08:12,960
be obtained let's say implicitly from

121
00:08:09,839 --> 00:08:15,479
the review source or I guess doing some

122
00:08:12,960 --> 00:08:16,289
comparison between ribs that's

123
00:08:15,479 --> 00:08:18,899
complicated

124
00:08:16,289 --> 00:08:22,318
that might change depending on the

125
00:08:18,899 --> 00:08:24,479
implementation that I think is nice to

126
00:08:22,319 --> 00:08:27,990
have an explicit mechanisms of high of

127
00:08:24,479 --> 00:08:30,419
marking this this information now we

128
00:08:27,990 --> 00:08:32,219
also have a recent field right now it's

129
00:08:30,419 --> 00:08:35,519
a free-form string we'll discuss that in

130
00:08:32,219 --> 00:08:37,289
a second or what how that can change the

131
00:08:35,519 --> 00:08:40,529
idea of the recent field is this is to

132
00:08:37,289 --> 00:08:43,979
say why there's a certain pad status for

133
00:08:40,529 --> 00:08:45,030
a path and well I mean we saw it as a

134
00:08:43,979 --> 00:08:47,400
way of troubleshooting

135
00:08:45,030 --> 00:08:51,030
maybe else for a specific use case Oh

136
00:08:47,400 --> 00:08:53,880
what let's see this version basically

137
00:08:51,030 --> 00:08:56,250
has editorial changes but we are

138
00:08:53,880 --> 00:08:57,689
thinking of making a that's a more

139
00:08:56,250 --> 00:09:01,440
drastic change in the next one

140
00:08:57,690 --> 00:09:03,390
here are some of the changes we might we

141
00:09:01,440 --> 00:09:06,030
we are thinking about first of all Jeff

142
00:09:03,390 --> 00:09:09,510
has very clear that probably free from

143
00:09:06,030 --> 00:09:11,520
string is bit complicated we had this

144
00:09:09,510 --> 00:09:13,770
field as a free form string because we

145
00:09:11,520 --> 00:09:15,810
did not want to parametrize reasons so

146
00:09:13,770 --> 00:09:18,300
but status is actually complex to

147
00:09:15,810 --> 00:09:21,270
parameterize so finding a finite set of

148
00:09:18,300 --> 00:09:24,599
states now a free form and now are

149
00:09:21,270 --> 00:09:26,340
reasons that sounds very daunting so but

150
00:09:24,600 --> 00:09:27,390
well if this is very complex and I don't

151
00:09:26,340 --> 00:09:30,000
know what the spirits of the group is

152
00:09:27,390 --> 00:09:31,890
with the BGP shut down feature so we

153
00:09:30,000 --> 00:09:33,630
might need to move this to something

154
00:09:31,890 --> 00:09:34,160
else we'll thinking about it how to do

155
00:09:33,630 --> 00:09:37,050
it

156
00:09:34,160 --> 00:09:39,270
second is the pad status length so right

157
00:09:37,050 --> 00:09:40,829
now we the but status is a bit filled so

158
00:09:39,270 --> 00:09:43,110
you can basically mark different pad

159
00:09:40,830 --> 00:09:45,960
status which allows you for having

160
00:09:43,110 --> 00:09:47,100
different levels of granularity but

161
00:09:45,960 --> 00:09:49,590
right now it's just two bytes

162
00:09:47,100 --> 00:09:52,470
we might maybe this becomes very

163
00:09:49,590 --> 00:09:54,060
successful and do not laugh and and so

164
00:09:52,470 --> 00:09:57,060
maybe in the future we have many pad

165
00:09:54,060 --> 00:09:59,130
status so maybe we want to protect the

166
00:09:57,060 --> 00:10:01,709
mechanism having the pad status being a

167
00:09:59,130 --> 00:10:07,320
variable field we would also think about

168
00:10:01,710 --> 00:10:08,940
it now I think we should remove or we we

169
00:10:07,320 --> 00:10:10,470
have been discussing that the definition

170
00:10:08,940 --> 00:10:11,910
of the actual pad status is something

171
00:10:10,470 --> 00:10:13,830
that should not fall into this draft is

172
00:10:11,910 --> 00:10:16,770
it's quite complex

173
00:10:13,830 --> 00:10:19,050
for instance multipath you go and try to

174
00:10:16,770 --> 00:10:21,090
look for a document explaining that is

175
00:10:19,050 --> 00:10:23,189
not easy maybe that's not exist maybe

176
00:10:21,090 --> 00:10:26,460
some draft here or there but it's not

177
00:10:23,190 --> 00:10:27,870
clear stated so we might not have pad

178
00:10:26,460 --> 00:10:29,400
status defined in the draft but

179
00:10:27,870 --> 00:10:31,740
hopefully somewhere else either other

180
00:10:29,400 --> 00:10:36,990
draft or I don't know yeah now or god

181
00:10:31,740 --> 00:10:39,000
something so so yeah so we might have

182
00:10:36,990 --> 00:10:41,940
something some passwords as examples but

183
00:10:39,000 --> 00:10:45,240
we do not plan to define pad status in

184
00:10:41,940 --> 00:10:47,130
the draft and finally we might add some

185
00:10:45,240 --> 00:10:49,740
notes on the optional nature of this

186
00:10:47,130 --> 00:10:51,390
feature so the feature itself is is

187
00:10:49,740 --> 00:10:54,240
optional right you don't have to add it

188
00:10:51,390 --> 00:10:56,670
if you don't want that's the idea also

189
00:10:54,240 --> 00:10:58,530
the recent field so if the recent field

190
00:10:56,670 --> 00:10:58,949
at the the nature right now the field is

191
00:10:58,530 --> 00:11:01,110
that you

192
00:10:58,950 --> 00:11:03,570
to our it if you don't support her if

193
00:11:01,110 --> 00:11:05,040
you don't want to but it may also fall

194
00:11:03,570 --> 00:11:07,200
into the pot status so it might happen

195
00:11:05,040 --> 00:11:08,939
that we define many pots that was very

196
00:11:07,200 --> 00:11:11,940
granular and an implementation don't

197
00:11:08,940 --> 00:11:14,280
only super cell set of them and it may

198
00:11:11,940 --> 00:11:17,880
be feasible that we somehow either of

199
00:11:14,280 --> 00:11:21,089
line or some other way we that's fine

200
00:11:17,880 --> 00:11:22,260
and and that's okay I mean maybe you

201
00:11:21,090 --> 00:11:24,560
don't support that level of granularity

202
00:11:22,260 --> 00:11:27,990
and just a subset of the pad status

203
00:11:24,560 --> 00:11:30,449
that's it I have nothing else to say if

204
00:11:27,990 --> 00:11:39,870
you have any comments or anything else

205
00:11:30,450 --> 00:11:45,800
either here or in the Middle East right

206
00:11:39,870 --> 00:11:45,800
shake thank you

207
00:11:49,010 --> 00:12:09,090
next up more than three three clowns are

208
00:11:56,330 --> 00:12:12,300
partners colleagues thank you so I'm

209
00:12:09,090 --> 00:12:16,940
Paula chant affirm entity and I have

210
00:12:12,300 --> 00:12:22,020
four drafts to present so first is the

211
00:12:16,940 --> 00:12:28,100
LA crib extension of BMP it's something

212
00:12:22,020 --> 00:12:32,939
relatively old like starting 2017 we had

213
00:12:28,100 --> 00:12:36,930
visibility in la crêpe you know for for

214
00:12:32,940 --> 00:12:39,770
BMP and you know since the last meeting

215
00:12:36,930 --> 00:12:41,729
there as being essentially no changes to

216
00:12:39,770 --> 00:12:45,260
the draft

217
00:12:41,730 --> 00:12:48,780
we may have only captured something

218
00:12:45,260 --> 00:12:51,300
during the BMP accattone on Sunday

219
00:12:48,780 --> 00:12:54,020
I hope Thomas will have the time at the

220
00:12:51,300 --> 00:12:57,660
end to comment more on that it's more

221
00:12:54,020 --> 00:13:00,060
recommendation you know small gaps maybe

222
00:12:57,660 --> 00:13:03,680
it's worth adding a few words there

223
00:13:00,060 --> 00:13:05,520
maybe not so I will not comment more and

224
00:13:03,680 --> 00:13:11,510
maybe it's better

225
00:13:05,520 --> 00:13:11,510
Thomas speaks at yep any questions

226
00:13:12,500 --> 00:13:20,460
then we have the draft about essentially

227
00:13:15,810 --> 00:13:23,699
adding TLV support to peer down and

228
00:13:20,460 --> 00:13:28,470
route monitoring messages the problem

229
00:13:23,700 --> 00:13:31,680
statement is very you know very simple

230
00:13:28,470 --> 00:13:33,900
like we have a table with four like and

231
00:13:31,680 --> 00:13:36,329
one of the legs is not equal to the

232
00:13:33,900 --> 00:13:39,840
others and so we want to make all the

233
00:13:36,330 --> 00:13:41,970
legs equal right and so the idea is

234
00:13:39,840 --> 00:13:44,280
simply to add that optional canvas to

235
00:13:41,970 --> 00:13:46,590
route monitoring to peel down and we

236
00:13:44,280 --> 00:13:52,520
bump the version of the protocol just

237
00:13:46,590 --> 00:13:55,320
for backward compatibility right and

238
00:13:52,520 --> 00:13:57,780
since last meeting the draft got adopted

239
00:13:55,320 --> 00:14:00,440
by the working group thank you very much

240
00:13:57,780 --> 00:14:03,420
there have been only some minor

241
00:14:00,440 --> 00:14:06,390
editorial changes and if you remember my

242
00:14:03,420 --> 00:14:08,880
presentation in Montreal we did leave

243
00:14:06,390 --> 00:14:11,069
kind of on purpose under specified that

244
00:14:08,880 --> 00:14:14,160
that peered down because appear down its

245
00:14:11,070 --> 00:14:17,990
is own beast right so it's even more

246
00:14:14,160 --> 00:14:21,780
uneven surface than the other messages

247
00:14:17,990 --> 00:14:24,000
and so that scope that got scoped a

248
00:14:21,780 --> 00:14:27,410
little bit better like you can see the

249
00:14:24,000 --> 00:14:31,320
text over there essentially you have

250
00:14:27,410 --> 00:14:33,270
code one entry there is a BGP

251
00:14:31,320 --> 00:14:35,100
notification and then after the

252
00:14:33,270 --> 00:14:36,780
notification you can do the TLD

253
00:14:35,100 --> 00:14:39,330
essentially like you do for the route

254
00:14:36,780 --> 00:14:43,439
monitoring for the code two

255
00:14:39,330 --> 00:14:46,770
there is a mandatory to field to byte

256
00:14:43,440 --> 00:14:49,170
field for to give additional information

257
00:14:46,770 --> 00:14:52,110
and after that you can put the TLV data

258
00:14:49,170 --> 00:14:55,500
and for the other I mean there is no

259
00:14:52,110 --> 00:14:59,640
extra data so just after the message you

260
00:14:55,500 --> 00:15:02,910
can put the tlps and this is it for this

261
00:14:59,640 --> 00:15:04,980
draft next steps really I think it's

262
00:15:02,910 --> 00:15:07,920
extremely simple there is no open

263
00:15:04,980 --> 00:15:10,080
questions if there is no objections I

264
00:15:07,920 --> 00:15:14,420
would just recommend let's wrap up over

265
00:15:10,080 --> 00:15:21,770
up this up and last call it and

266
00:15:14,420 --> 00:15:21,770
questions objections should I follow up

267
00:15:23,410 --> 00:15:44,300
so looking at the implementers in the

268
00:15:25,850 --> 00:15:48,220
room are we good to go No so so Jeff as

269
00:15:44,300 --> 00:15:50,329
sure you can make me stand up and talk I

270
00:15:48,220 --> 00:15:53,390
think there's a desire to try to make

271
00:15:50,329 --> 00:15:54,769
this done no soon the work is no fairly

272
00:15:53,390 --> 00:15:56,660
reasonable fairly straightforward in the

273
00:15:54,769 --> 00:15:58,519
grand scheme of things and I think what

274
00:15:56,660 --> 00:16:00,740
you're going to find is this work is the

275
00:15:58,519 --> 00:16:02,510
plug-in architecture for a lot of the

276
00:16:00,740 --> 00:16:04,579
other stuff you're wanting to trying to

277
00:16:02,510 --> 00:16:06,890
do for the rest of the group if you try

278
00:16:04,579 --> 00:16:09,199
to finish this now before the other work

279
00:16:06,890 --> 00:16:11,319
sort of cascades into it you get to do

280
00:16:09,200 --> 00:16:11,320
it again

281
00:16:18,640 --> 00:16:25,550
we shall deliberates on what the next

282
00:16:22,519 --> 00:16:30,430
step is sure but your request is no

283
00:16:25,550 --> 00:16:34,959
sense thank you thank you then I have

284
00:16:30,430 --> 00:16:39,469
and something new compared to the other

285
00:16:34,959 --> 00:16:43,430
you know ITF 105 which is the support

286
00:16:39,470 --> 00:16:45,320
for enterprises specific tlvs right so

287
00:16:43,430 --> 00:16:49,819
in the other one in the other draft we

288
00:16:45,320 --> 00:16:51,920
are defining the tlvs and here we are

289
00:16:49,820 --> 00:16:53,959
defining a mechanism to have you know

290
00:16:51,920 --> 00:16:57,319
enterprise specific not a younger

291
00:16:53,959 --> 00:17:00,529
governed you know pelvis

292
00:16:57,320 --> 00:17:02,240
so even before the program you know I

293
00:17:00,529 --> 00:17:06,169
already said the problem statement so I

294
00:17:02,240 --> 00:17:08,179
can go ahead essentially so that's

295
00:17:06,169 --> 00:17:11,569
that's the thing like you know you may

296
00:17:08,179 --> 00:17:14,059
have some enterprises specific stuff

297
00:17:11,569 --> 00:17:17,329
that you want to carry and some vendor

298
00:17:14,059 --> 00:17:20,059
to and other don't there is a you know a

299
00:17:17,329 --> 00:17:21,889
pre standardization phase and so we

300
00:17:20,059 --> 00:17:22,760
essentially want to avoid squatting

301
00:17:21,890 --> 00:17:25,730
right

302
00:17:22,760 --> 00:17:27,619
I have already noticed squatting from at

303
00:17:25,730 --> 00:17:31,910
least one implementer I saw a message

304
00:17:27,619 --> 00:17:35,270
type 100 so let's say let I would just

305
00:17:31,910 --> 00:17:38,720
say like it's a a nice way for

306
00:17:35,270 --> 00:17:41,030
work it is totally not a new work like

307
00:17:38,720 --> 00:17:42,710
it will see at the end that what I am

308
00:17:41,030 --> 00:17:46,250
proposing here is simply you know

309
00:17:42,710 --> 00:17:50,300
borrowed by IP fix and you know landing

310
00:17:46,250 --> 00:17:52,340
that on BMP and the other thing is that

311
00:17:50,300 --> 00:17:54,050
why we are not merging this with the

312
00:17:52,340 --> 00:17:56,899
other draft is because the other draft

313
00:17:54,050 --> 00:17:59,419
is scoped to only two messages right so

314
00:17:56,900 --> 00:18:01,580
there was a few logics over there the

315
00:17:59,420 --> 00:18:03,380
other draft is and you know applies only

316
00:18:01,580 --> 00:18:06,830
to do two messages and this applies to

317
00:18:03,380 --> 00:18:08,900
all of them and potentially since its

318
00:18:06,830 --> 00:18:11,750
kind of backwards compatible what we are

319
00:18:08,900 --> 00:18:15,440
doing here since there is no tlvs

320
00:18:11,750 --> 00:18:17,930
defined that used the first bit we can

321
00:18:15,440 --> 00:18:19,820
even apply that to BMP version 3 if you

322
00:18:17,930 --> 00:18:23,120
want right so there are there were a

323
00:18:19,820 --> 00:18:27,500
couple of things that in induced us to

324
00:18:23,120 --> 00:18:29,959
not merge the two works so for who is

325
00:18:27,500 --> 00:18:32,870
not familiar a pang it's pretty private

326
00:18:29,960 --> 00:18:35,540
enterprise number and it is assigned by

327
00:18:32,870 --> 00:18:37,510
a younger or actually you go request to

328
00:18:35,540 --> 00:18:40,700
a young and the young a gives you one

329
00:18:37,510 --> 00:18:44,180
and you know the goal I have already

330
00:18:40,700 --> 00:18:45,590
said it and things like that so the TLV

331
00:18:44,180 --> 00:18:48,320
governed by a Jana

332
00:18:45,590 --> 00:18:51,409
it's a super simple like you know it's a

333
00:18:48,320 --> 00:18:53,810
TLV like we know hit and you see the

334
00:18:51,410 --> 00:18:57,140
first bit it's that the it's the EBIT

335
00:18:53,810 --> 00:19:00,050
right so it's set to zero if it's a

336
00:18:57,140 --> 00:19:03,050
younger governed and it's that one if it

337
00:19:00,050 --> 00:19:06,530
is enterprise specific and if it is

338
00:19:03,050 --> 00:19:09,470
interpreted specific essentially in the

339
00:19:06,530 --> 00:19:11,629
first four byte because the pang is four

340
00:19:09,470 --> 00:19:14,120
byte long the first four byte of the

341
00:19:11,630 --> 00:19:20,060
value is the enterprise number and then

342
00:19:14,120 --> 00:19:22,010
followed by that there is the value to

343
00:19:20,060 --> 00:19:24,050
be honest with you there is no many open

344
00:19:22,010 --> 00:19:26,180
questions as I was saying I mean I'm

345
00:19:24,050 --> 00:19:28,580
just we have just borrowed something

346
00:19:26,180 --> 00:19:33,140
existing and working and we landed it

347
00:19:28,580 --> 00:19:34,939
over here I go to comments like oh if

348
00:19:33,140 --> 00:19:38,150
you do this mechanism then you want to

349
00:19:34,940 --> 00:19:39,680
do it elsewhere in BMP message types

350
00:19:38,150 --> 00:19:45,380
that you want to recommend it for

351
00:19:39,680 --> 00:19:47,920
subtypes and whatever so questions and

352
00:19:45,380 --> 00:19:55,810
maybe

353
00:19:47,920 --> 00:20:00,310
option John Scudder we have seen at

354
00:19:55,810 --> 00:20:05,139
least one proposal of this kind in IDR

355
00:20:00,310 --> 00:20:06,790
also and I think it's fine it's it's you

356
00:20:05,140 --> 00:20:12,730
know technically a good solution to the

357
00:20:06,790 --> 00:20:18,340
problem the pushback that I've heard in

358
00:20:12,730 --> 00:20:22,510
that context basically amounts to yeah

359
00:20:18,340 --> 00:20:23,800
but but when I when I move my you know

360
00:20:22,510 --> 00:20:25,390
you're you're sort of proposing it as

361
00:20:23,800 --> 00:20:27,639
this is a playground that I can

362
00:20:25,390 --> 00:20:30,460
experiment in and then once my thing is

363
00:20:27,640 --> 00:20:34,630
standardized then I have to go and

364
00:20:30,460 --> 00:20:36,010
actually change my my packet format you

365
00:20:34,630 --> 00:20:41,770
know because you had two different

366
00:20:36,010 --> 00:20:44,140
headers there and which leads me I mean

367
00:20:41,770 --> 00:20:47,080
I guess we have to try it to find out

368
00:20:44,140 --> 00:20:51,280
how it actually plays out in the Wild

369
00:20:47,080 --> 00:20:54,129
West right but you know there's probably

370
00:20:51,280 --> 00:20:56,980
some aphorism like nobody ever ever got

371
00:20:54,130 --> 00:20:59,500
rich or I can't put it together now but

372
00:20:56,980 --> 00:21:01,950
might you know under estimating the

373
00:20:59,500 --> 00:21:05,200
laziness of software developers yeah

374
00:21:01,950 --> 00:21:07,570
which I I don't think it's guaranteed

375
00:21:05,200 --> 00:21:09,280
that that providing this nice structure

376
00:21:07,570 --> 00:21:11,679
will get rid of squatting but I guess we

377
00:21:09,280 --> 00:21:16,180
might as well try yeah thank you thank

378
00:21:11,680 --> 00:21:17,800
you and you know just as a comment on

379
00:21:16,180 --> 00:21:19,660
the laziness and whatever I totally

380
00:21:17,800 --> 00:21:22,899
agree with you I mean we already know

381
00:21:19,660 --> 00:21:23,950
what happened with IP fix so you write

382
00:21:22,900 --> 00:21:26,050
on the draft that this isn't

383
00:21:23,950 --> 00:21:28,570
transitioning mechanism very nice and

384
00:21:26,050 --> 00:21:32,430
then you know code points for being

385
00:21:28,570 --> 00:21:35,409
enterprise specific forever right so

386
00:21:32,430 --> 00:21:37,180
actually I remember the the other half

387
00:21:35,410 --> 00:21:38,650
of it it's you can be lazy in two

388
00:21:37,180 --> 00:21:40,360
directions right one is that you can

389
00:21:38,650 --> 00:21:46,270
define a code point under your

390
00:21:40,360 --> 00:21:49,929
enterprise space and then be too lazy to

391
00:21:46,270 --> 00:21:52,270
ever update into the Ayana assigned

392
00:21:49,930 --> 00:21:54,790
space at which point you just you know

393
00:21:52,270 --> 00:21:57,040
if your thing becomes popular everybody

394
00:21:54,790 --> 00:21:58,720
else has to go and start putting your

395
00:21:57,040 --> 00:22:01,928
enterprise numbers into their codebase

396
00:21:58,720 --> 00:22:05,139
or you know and maybe you end up

397
00:22:01,929 --> 00:22:06,879
putting it into an RFC also or the flip

398
00:22:05,139 --> 00:22:07,809
side also exists which is you say well I

399
00:22:06,879 --> 00:22:09,908
don't want to bother with that

400
00:22:07,809 --> 00:22:13,178
enterprise space transition so I'm just

401
00:22:09,909 --> 00:22:15,519
gonna squat in a code point anyway and

402
00:22:13,179 --> 00:22:20,409
and I sort of the an end state of that

403
00:22:15,519 --> 00:22:23,139
argument is you know you had I think you

404
00:22:20,409 --> 00:22:24,999
know two bytes of Vienna assigned space

405
00:22:23,139 --> 00:22:29,080
plus four bytes of enterprise assign

406
00:22:24,999 --> 00:22:32,379
space or four four bytes of enterprise

407
00:22:29,080 --> 00:22:33,759
number yeah and yeah yes so so so what

408
00:22:32,379 --> 00:22:35,259
you've got there is you know if you

409
00:22:33,759 --> 00:22:37,210
catenate that you've just got a six byte

410
00:22:35,259 --> 00:22:39,100
number so you could also just be like

411
00:22:37,210 --> 00:22:40,869
yeah here's your you know six byte

412
00:22:39,100 --> 00:22:43,119
first-come-first-served registry and

413
00:22:40,869 --> 00:22:44,949
everybody can you know it's so big that

414
00:22:43,119 --> 00:22:46,899
you'll never run out of numbers so just

415
00:22:44,950 --> 00:22:50,230
everybody go crazy that's that's another

416
00:22:46,899 --> 00:22:51,879
way of looking at it Jeff has I think

417
00:22:50,230 --> 00:22:57,129
John's referring to his work that I did

418
00:22:51,879 --> 00:22:59,350
this was draft ia TF draft has BGP

419
00:22:57,129 --> 00:23:01,029
extended experimental the the key

420
00:22:59,350 --> 00:23:02,350
properties in there were that it did

421
00:23:01,029 --> 00:23:03,909
actually use the private enterprise

422
00:23:02,350 --> 00:23:06,009
numbers this way to give people their

423
00:23:03,909 --> 00:23:08,220
own playground the other thing that was

424
00:23:06,009 --> 00:23:11,289
specifically in there which some people

425
00:23:08,220 --> 00:23:14,139
didn't like some people no thought was a

426
00:23:11,289 --> 00:23:15,519
good idea is when people pick a magic

427
00:23:14,139 --> 00:23:16,959
number within their own enterprise space

428
00:23:15,519 --> 00:23:19,450
because enterprise space is just the

429
00:23:16,960 --> 00:23:20,919
anchor for your own play space you still

430
00:23:19,450 --> 00:23:22,029
have to have no an internal registry

431
00:23:20,919 --> 00:23:24,429
which you have to expose the outside

432
00:23:22,029 --> 00:23:26,200
world that's one of the headaches but

433
00:23:24,429 --> 00:23:28,330
people very seldom get a feature right

434
00:23:26,200 --> 00:23:31,840
the very first time so if you assign a

435
00:23:28,330 --> 00:23:34,899
feature ID 100 and then change how it

436
00:23:31,840 --> 00:23:36,549
behaves do you simply ship new code

437
00:23:34,899 --> 00:23:38,590
under 100 and break everybody or do you

438
00:23:36,549 --> 00:23:41,499
know Revit or choose a new code point

439
00:23:38,590 --> 00:23:42,759
and this sort of devolves back to the

440
00:23:41,499 --> 00:23:44,230
talks I've given in a couple of

441
00:23:42,759 --> 00:23:48,490
different working groups on managing

442
00:23:44,230 --> 00:23:49,779
code points it's not hard but if you

443
00:23:48,490 --> 00:23:54,549
don't do it rigorously you cause

444
00:23:49,779 --> 00:23:57,129
problems second minor point the majority

445
00:23:54,549 --> 00:23:59,320
of my comments on the BMP stuff is going

446
00:23:57,129 --> 00:24:01,899
to I think devolve down to a few very

447
00:23:59,320 --> 00:24:04,119
simple core points I can take them to

448
00:24:01,899 --> 00:24:07,090
the list again have been the discussions

449
00:24:04,119 --> 00:24:08,379
line with some of the other authors but

450
00:24:07,090 --> 00:24:10,178
if there's five minutes at the end the

451
00:24:08,379 --> 00:24:12,519
agenda but the chairs entertain a

452
00:24:10,179 --> 00:24:14,999
possibility of me talking to the group

453
00:24:12,519 --> 00:24:14,999
for five minutes

454
00:24:15,230 --> 00:24:26,990
I think what Chris meant to say yes job

455
00:24:25,070 --> 00:24:31,490
Snyder's entity speaking us working

456
00:24:26,990 --> 00:24:33,399
group participants the purpose of this

457
00:24:31,490 --> 00:24:36,740
organization is to facilitate

458
00:24:33,399 --> 00:24:39,199
standardization of specifications so

459
00:24:36,740 --> 00:24:41,090
that we have interoperability I want a

460
00:24:39,200 --> 00:24:45,559
bunch of Scrabble points with that

461
00:24:41,090 --> 00:24:49,220
sentence what I worried a little bit

462
00:24:45,559 --> 00:24:51,918
about is that if we facilitate the

463
00:24:49,220 --> 00:24:55,070
creation of tlvs and sticking pens and

464
00:24:51,919 --> 00:24:57,490
after that it's it's up to you that we

465
00:24:55,070 --> 00:25:00,408
do not meet that objective of

466
00:24:57,490 --> 00:25:05,240
standardizing specifications for the

467
00:25:00,409 --> 00:25:11,029
purpose of inter ministry of domain

468
00:25:05,240 --> 00:25:13,490
interactions so the conflicts of pen to

469
00:25:11,029 --> 00:25:17,630
me is that if within your organization

470
00:25:13,490 --> 00:25:21,740
with your applications you need to do a

471
00:25:17,630 --> 00:25:25,730
thingy that is appropriate but if we

472
00:25:21,740 --> 00:25:30,320
have vendors using pen to push their

473
00:25:25,730 --> 00:25:32,630
products I would much more like to try

474
00:25:30,320 --> 00:25:34,639
and bring and keep the group together so

475
00:25:32,630 --> 00:25:40,730
that we have one uniform understanding

476
00:25:34,639 --> 00:25:44,658
of what BMP is but I also recognize that

477
00:25:40,730 --> 00:25:47,990
squatting is a very undesirable behavior

478
00:25:44,659 --> 00:25:50,500
and one observation is that first-come

479
00:25:47,990 --> 00:25:54,289
first-serve and a large number space

480
00:25:50,500 --> 00:25:57,590
could be very effective if you lower the

481
00:25:54,289 --> 00:26:01,990
barrier to get a number that will

482
00:25:57,590 --> 00:26:01,990
encourage people to just take the number

483
00:26:02,080 --> 00:26:08,809
the enterprise number it's it's not a

484
00:26:04,519 --> 00:26:10,309
vendor extension number two - it's a

485
00:26:08,809 --> 00:26:14,500
very it's within one single

486
00:26:10,309 --> 00:26:17,570
administrative domain and the point I

487
00:26:14,500 --> 00:26:20,870
essentially have replied to your point

488
00:26:17,570 --> 00:26:25,340
but also to just point so essentially

489
00:26:20,870 --> 00:26:27,678
the the reason this kind of makes sense

490
00:26:25,340 --> 00:26:29,029
to me like I understand lowering the bar

491
00:26:27,679 --> 00:26:30,829
and everything is that

492
00:26:29,029 --> 00:26:33,259
you know in the end of this is a game P

493
00:26:30,829 --> 00:26:34,789
is not something a routing protocol is

494
00:26:33,259 --> 00:26:37,819
not something that it should be

495
00:26:34,789 --> 00:26:40,039
understood by let's say two

496
00:26:37,819 --> 00:26:41,719
organizations right so it's you are

497
00:26:40,039 --> 00:26:44,059
monitoring something and maybe you want

498
00:26:41,719 --> 00:26:46,189
to expose some metadata and that

499
00:26:44,059 --> 00:26:46,879
metadata applies to one vendor but not

500
00:26:46,189 --> 00:26:50,149
the other

501
00:26:46,879 --> 00:26:52,369
so in a way doing a younger government

502
00:26:50,149 --> 00:26:54,319
should be realistic right so if I want

503
00:26:52,369 --> 00:26:55,968
to expose some metadata for something

504
00:26:54,319 --> 00:27:00,079
that I do have but another vendor

505
00:26:55,969 --> 00:27:01,759
doesn't have then it is not realistic to

506
00:27:00,079 --> 00:27:04,609
standardize it and this kind of

507
00:27:01,759 --> 00:27:06,619
mechanism allows to you know not squat

508
00:27:04,609 --> 00:27:12,799
so still the vendors to do their own

509
00:27:06,619 --> 00:27:15,319
stuff but without squat in the the

510
00:27:12,799 --> 00:27:17,899
public the public space right so I mean

511
00:27:15,319 --> 00:27:19,639
there are things that in my opinion not

512
00:27:17,899 --> 00:27:23,629
realistic to standardize I don't know I

513
00:27:19,639 --> 00:27:24,918
want to you know I don't want to give

514
00:27:23,629 --> 00:27:27,408
examples but there are things that

515
00:27:24,919 --> 00:27:30,939
cannot clearly be standardized and this

516
00:27:27,409 --> 00:27:34,459
is a mechanism that can help their

517
00:27:30,939 --> 00:27:35,689
shared much Akamai so I think job I

518
00:27:34,459 --> 00:27:38,679
think one of the points here is that

519
00:27:35,689 --> 00:27:42,109
sometimes when we're implementing things

520
00:27:38,679 --> 00:27:43,639
you know and and Akamai we have a number

521
00:27:42,109 --> 00:27:45,379
of our own implementations that pass

522
00:27:43,639 --> 00:27:47,569
data around that's important you know

523
00:27:45,379 --> 00:27:49,879
you know we kind of need to have a

524
00:27:47,569 --> 00:27:51,889
standardized place to put these types of

525
00:27:49,879 --> 00:27:54,259
things even if it's not part of the

526
00:27:51,889 --> 00:27:55,908
official IETF standard is that sometimes

527
00:27:54,259 --> 00:27:57,199
there's a need for additional namespace

528
00:27:55,909 --> 00:27:59,779
I think that's what we've seen with a

529
00:27:57,199 --> 00:28:01,219
lot of the other languages like JSON or

530
00:27:59,779 --> 00:28:04,519
whatever where you can actually add

531
00:28:01,219 --> 00:28:08,179
additional metadata easily and such so I

532
00:28:04,519 --> 00:28:10,909
you know I I understand the sentiment of

533
00:28:08,179 --> 00:28:12,919
yeah we're standards body and it kind of

534
00:28:10,909 --> 00:28:15,019
is a little bit different there but yeah

535
00:28:12,919 --> 00:28:16,759
I can talk to you afterwards about it

536
00:28:15,019 --> 00:28:20,749
very short comments from my site

537
00:28:16,759 --> 00:28:25,039
difference what you such us know made me

538
00:28:20,749 --> 00:28:27,019
think of what we do with MAC addresses

539
00:28:25,039 --> 00:28:30,499
where we flip the administrative bits

540
00:28:27,019 --> 00:28:35,089
and maybe one bits is sufficient for

541
00:28:30,499 --> 00:28:37,160
this purpose that you describe who

542
00:28:35,089 --> 00:28:42,770
touched upon

543
00:28:37,160 --> 00:28:47,140
I don't want to go into discussion right

544
00:28:42,770 --> 00:28:50,680
now maybe at the next meeting but

545
00:28:47,140 --> 00:28:54,950
Jarrod's remark and point her to

546
00:28:50,680 --> 00:29:02,620
actually make metadata and schema

547
00:28:54,950 --> 00:29:08,450
information explicitly managed I think

548
00:29:02,620 --> 00:29:10,330
could change the outlook of what we are

549
00:29:08,450 --> 00:29:14,570
doing here

550
00:29:10,330 --> 00:29:18,070
the TLV stuff always means only the guy

551
00:29:14,570 --> 00:29:22,100
who defines for code-point knows what is

552
00:29:18,070 --> 00:29:27,649
going to be in the data structure and

553
00:29:22,100 --> 00:29:33,649
the presentation layer and kind of it

554
00:29:27,650 --> 00:29:37,160
would behoove IETF to actually use

555
00:29:33,650 --> 00:29:40,190
something were at least the presentation

556
00:29:37,160 --> 00:29:45,470
layer is something that is taking of a

557
00:29:40,190 --> 00:29:48,670
care of automatically okay thank you I

558
00:29:45,470 --> 00:29:52,850
had a fourth draft about compressed

559
00:29:48,670 --> 00:29:57,220
growth monitoring messages please slice

560
00:29:52,850 --> 00:29:57,219
her online I'm sorry I can presenting

561
00:30:15,940 --> 00:30:23,800
hi so I published this draft just

562
00:30:21,080 --> 00:30:30,970
recently it came from discussion with

563
00:30:23,800 --> 00:30:34,700
Paulo actually about four BMP collectors

564
00:30:30,970 --> 00:30:37,550
defining a mechanism to store BMP

565
00:30:34,700 --> 00:30:40,820
messages and record them as a archive

566
00:30:37,550 --> 00:30:45,800
format so I snuck this together as an

567
00:30:40,820 --> 00:30:48,740
initial idea which which was to use MRT

568
00:30:45,800 --> 00:30:50,960
which is explicitly designed for that

569
00:30:48,740 --> 00:30:53,930
purpose it's for storing routing

570
00:30:50,960 --> 00:30:56,660
protocol transactions as it refers to it

571
00:30:53,930 --> 00:30:58,730
and well you know it's it's well

572
00:30:56,660 --> 00:31:01,730
supported it's well known for storing

573
00:30:58,730 --> 00:31:05,540
bgp data and especially in things like

574
00:31:01,730 --> 00:31:07,070
route views and rays and it supports

575
00:31:05,540 --> 00:31:09,590
tight code so there was the option of

576
00:31:07,070 --> 00:31:12,770
creating a new type code to store BMP

577
00:31:09,590 --> 00:31:20,240
messages in MRT so that they can be

578
00:31:12,770 --> 00:31:23,780
archived the initial attempt was to just

579
00:31:20,240 --> 00:31:25,280
define width message inside a header

580
00:31:23,780 --> 00:31:28,010
that says where it came from and who

581
00:31:25,280 --> 00:31:31,280
sent from and to and then just put the

582
00:31:28,010 --> 00:31:36,050
message in there now that's sort of an

583
00:31:31,280 --> 00:31:38,990
opening point for discussion because the

584
00:31:36,050 --> 00:31:41,090
the main issue with it is that the way

585
00:31:38,990 --> 00:31:43,340
MRT files are usually done they get

586
00:31:41,090 --> 00:31:46,340
split by time intervals maybe they're

587
00:31:43,340 --> 00:31:49,220
split every five minutes and the

588
00:31:46,340 --> 00:31:51,889
messages are always standalone they need

589
00:31:49,220 --> 00:31:54,350
to be parsed independently of you know

590
00:31:51,890 --> 00:31:56,990
the previous file and such which means

591
00:31:54,350 --> 00:32:01,280
that the information about the encoding

592
00:31:56,990 --> 00:32:03,710
of the bgp update which is usually based

593
00:32:01,280 --> 00:32:05,750
on capabilities that were negotiated at

594
00:32:03,710 --> 00:32:08,150
the beginning of the session end up

595
00:32:05,750 --> 00:32:10,700
needing to be encoded into the MRT

596
00:32:08,150 --> 00:32:19,789
format to so that the parser knows how

597
00:32:10,700 --> 00:32:21,649
to read it examples of this being yeah

598
00:32:19,789 --> 00:32:27,559
samples being s for an ad path which

599
00:32:21,649 --> 00:32:29,629
alter the wiring coding now that pain of

600
00:32:27,559 --> 00:32:33,190
leads to the questions that I had which

601
00:32:29,629 --> 00:32:36,529
was where the responsibility for

602
00:32:33,190 --> 00:32:40,279
ensuring that lies there's options of

603
00:32:36,529 --> 00:32:45,529
the BMP sender communicating enough

604
00:32:40,279 --> 00:32:48,289
information to represent that one of the

605
00:32:45,529 --> 00:32:53,059
this actually led onto the the TLV draft

606
00:32:48,289 --> 00:32:58,999
that Paulo has which was adding support

607
00:32:53,059 --> 00:33:02,570
for the to add plv encode encodings to

608
00:32:58,999 --> 00:33:04,460
represent these different income sorry

609
00:33:02,570 --> 00:33:07,220
adding theories to represent all the

610
00:33:04,460 --> 00:33:10,759
different encoding types but they're

611
00:33:07,220 --> 00:33:13,340
still optional whether or not they

612
00:33:10,759 --> 00:33:18,229
should be mandatory so that the messages

613
00:33:13,340 --> 00:33:22,070
can always be parsed whether this draft

614
00:33:18,229 --> 00:33:24,559
should just be specified for BMP v4 and

615
00:33:22,070 --> 00:33:28,580
ignore they not use it for other

616
00:33:24,559 --> 00:33:30,799
versions of BMP then the receiver can

617
00:33:28,580 --> 00:33:33,918
just record the incoming message or

618
00:33:30,799 --> 00:33:35,029
should the monitoring station be the one

619
00:33:33,919 --> 00:33:38,570
that's writing the message be

620
00:33:35,029 --> 00:33:40,099
responsible for providing the

621
00:33:38,570 --> 00:33:45,590
information on how to read this message

622
00:33:40,099 --> 00:33:47,779
at a later date this is an example of

623
00:33:45,590 --> 00:33:50,119
what currently happens for the BGP type

624
00:33:47,779 --> 00:33:53,749
and MRT where it basically has a list of

625
00:33:50,119 --> 00:33:57,139
permutations that get added to every

626
00:33:53,749 --> 00:33:59,269
time the wiring coding changes with a

627
00:33:57,139 --> 00:34:01,488
capability which has happened a couple

628
00:33:59,269 --> 00:34:07,990
of times so far there's still a few more

629
00:34:01,489 --> 00:34:14,059
permutations but it's not the nicest and

630
00:34:07,990 --> 00:34:17,239
yeah the MRT format has subtypes we

631
00:34:14,059 --> 00:34:20,899
could use the same mechanism as the BGP

632
00:34:17,239 --> 00:34:24,199
type to also encode the permutations

633
00:34:20,899 --> 00:34:28,149
into the subtypes or ignore that and

634
00:34:24,199 --> 00:34:31,359
define some extra header fields to

635
00:34:28,149 --> 00:34:33,230
represent the different encodings

636
00:34:31,359 --> 00:34:36,590
there's then a

637
00:34:33,230 --> 00:34:38,810
- if the mrt header tells you to decode

638
00:34:36,590 --> 00:34:42,560
it one way but there's actually a TLV in

639
00:34:38,810 --> 00:34:44,359
the BMP message that says to decode it

640
00:34:42,560 --> 00:34:49,399
in a different way what happens if they

641
00:34:44,359 --> 00:34:52,159
don't match so this was just we kind of

642
00:34:49,399 --> 00:34:54,020
starting the the thoughts of how to go

643
00:34:52,159 --> 00:34:55,720
around I had to go about solving this so

644
00:34:54,020 --> 00:34:59,140
that the result is that you can store

645
00:34:55,719 --> 00:35:01,790
BMP messages in a way that they can be

646
00:34:59,140 --> 00:35:05,950
replayed at a later date and know how to

647
00:35:01,790 --> 00:35:08,029
encode what was on the wire at the time

648
00:35:05,950 --> 00:35:11,930
yeah that's basically it

649
00:35:08,030 --> 00:35:14,990
does anybody have thoughts on this you

650
00:35:11,930 --> 00:35:19,879
know the usual list of questions hi

651
00:35:14,990 --> 00:35:24,879
Colin hi whether you're speaking what

652
00:35:19,880 --> 00:35:31,250
you are talking about is essentially

653
00:35:24,880 --> 00:35:34,550
stuff in the presentation layer rim kind

654
00:35:31,250 --> 00:35:37,520
of I'm surprised my previous remark on

655
00:35:34,550 --> 00:35:42,920
doing something on the presentation

656
00:35:37,520 --> 00:35:46,340
layer might actually benefit here no

657
00:35:42,920 --> 00:35:53,900
idea how complex it is to transition to

658
00:35:46,340 --> 00:36:00,080
something that is more future-proof jeff

659
00:35:53,900 --> 00:36:03,109
has this is worth doing sorry Jeff it's

660
00:36:00,080 --> 00:36:09,170
your comments on rüdiger folks comments

661
00:36:03,109 --> 00:36:11,470
or on this presentation thank you okay

662
00:36:09,170 --> 00:36:20,030
well I'll follow up on the list then

663
00:36:11,470 --> 00:36:22,209
thank you thank you Carlo next up you

664
00:36:20,030 --> 00:36:22,210
know

665
00:36:34,180 --> 00:36:40,578
hi this is your uncle from Hawaii so I

666
00:36:38,059 --> 00:36:41,150
have three drafts to discuss with you

667
00:36:40,579 --> 00:36:45,200
today

668
00:36:41,150 --> 00:36:52,670
the first one is BGP route trace using

669
00:36:45,200 --> 00:36:56,749
BMP okay so yet this on the 0-3 draft

670
00:36:52,670 --> 00:37:00,349
version we have Thomas from Swiss come

671
00:36:56,749 --> 00:37:02,839
onboard and he has helped prepare this

672
00:37:00,349 --> 00:37:07,339
version with a lot of good suggestions

673
00:37:02,839 --> 00:37:09,349
and we can take a look so here's the

674
00:37:07,339 --> 00:37:13,249
changes that we make to the second

675
00:37:09,349 --> 00:37:16,130
version the first big change is that we

676
00:37:13,249 --> 00:37:19,549
have tried to restructure the whole

677
00:37:16,130 --> 00:37:21,499
format previously you know the

678
00:37:19,549 --> 00:37:24,229
information regarding prefixes and

679
00:37:21,499 --> 00:37:27,499
policies and the attributes there kind

680
00:37:24,229 --> 00:37:30,769
of you know mixed together so this time

681
00:37:27,499 --> 00:37:31,578
we try to put things where they all

682
00:37:30,769 --> 00:37:34,339
belong together

683
00:37:31,579 --> 00:37:39,019
and so that's why we come up with a

684
00:37:34,339 --> 00:37:41,749
policy TLV and where we put all the sins

685
00:37:39,019 --> 00:37:44,868
that related to the policy together okay

686
00:37:41,749 --> 00:37:47,359
and then we have done some renaming so

687
00:37:44,869 --> 00:37:51,349
the first one is that we change the

688
00:37:47,359 --> 00:37:54,558
previous hop to the root origin and the

689
00:37:51,349 --> 00:37:59,269
second is we changed the vrf table name

690
00:37:54,559 --> 00:38:03,799
TLV to vrf table TLV that's because we

691
00:37:59,269 --> 00:38:07,879
add infilled to this TLV which allows

692
00:38:03,799 --> 00:38:10,099
you to put the a prf table ID so so you

693
00:38:07,880 --> 00:38:13,369
have both the name and the ID name

694
00:38:10,099 --> 00:38:16,099
better for visualization and the ID is

695
00:38:13,369 --> 00:38:17,690
can be used for you know precise mapping

696
00:38:16,099 --> 00:38:23,059
or searching stuff

697
00:38:17,690 --> 00:38:27,319
and we also we've made this tell via

698
00:38:23,059 --> 00:38:31,190
also optional and then we renamed the

699
00:38:27,319 --> 00:38:34,670
optionals 2008 use 20 of e and we add an

700
00:38:31,190 --> 00:38:37,670
example how we can use this DOB and we

701
00:38:34,670 --> 00:38:40,290
also redefined the policy

702
00:38:37,670 --> 00:38:43,860
classifications okay so

703
00:38:40,290 --> 00:38:50,430
let me walk you through these two Yogi's

704
00:38:43,860 --> 00:38:52,620
so the message looks like this still we

705
00:38:50,430 --> 00:38:55,290
have the prefix information and any

706
00:38:52,620 --> 00:38:59,040
comprises of different events then for

707
00:38:55,290 --> 00:39:01,890
each event we first have the you know

708
00:38:59,040 --> 00:39:04,590
timestamp information and some other

709
00:39:01,890 --> 00:39:10,049
information relates to the prefix and

710
00:39:04,590 --> 00:39:16,290
then we get the table TLV and policy TLV

711
00:39:10,050 --> 00:39:19,350
so above above this part which are you

712
00:39:16,290 --> 00:39:24,210
know the it's about the prefix you're

713
00:39:19,350 --> 00:39:26,009
monitoring and about the reason or yeah

714
00:39:24,210 --> 00:39:29,280
it's about the reason how this happens

715
00:39:26,010 --> 00:39:32,550
and so after that we have the attributes

716
00:39:29,280 --> 00:39:35,760
which are the results of actually the

717
00:39:32,550 --> 00:39:39,270
processing so and lastly we have this 20

718
00:39:35,760 --> 00:39:40,020
LV to provide you you know some free

719
00:39:39,270 --> 00:39:54,530
form see

720
00:39:40,020 --> 00:39:58,890
okay can we Thanks so the first TLV is a

721
00:39:54,530 --> 00:40:04,350
vrf table yogi as I said we add an ID

722
00:39:58,890 --> 00:40:14,100
field and the second one is the policy T

723
00:40:04,350 --> 00:40:17,040
of e so you can see okay so this govt

724
00:40:14,100 --> 00:40:19,740
actually is has has made a I've made a

725
00:40:17,040 --> 00:40:23,580
lot of changes to it so every simulated

726
00:40:19,740 --> 00:40:27,899
policy is put in here so first of all

727
00:40:23,580 --> 00:40:30,180
we've add two black bits

728
00:40:27,900 --> 00:40:33,180
the first one is still the one will

729
00:40:30,180 --> 00:40:36,149
previously have which is the map the

730
00:40:33,180 --> 00:40:39,390
matching or mismatching bit it tells you

731
00:40:36,150 --> 00:40:42,380
if if match condition is met okay and

732
00:40:39,390 --> 00:40:45,930
then if there is a match of the policy

733
00:40:42,380 --> 00:40:50,130
the P bit will tell you the result of

734
00:40:45,930 --> 00:40:53,560
this match is permit or deny so if it's

735
00:40:50,130 --> 00:40:57,010
permit then we can use the

736
00:40:53,560 --> 00:41:01,930
a bit which is stands for if there's

737
00:40:57,010 --> 00:41:04,420
difference or not of the pre and post

738
00:41:01,930 --> 00:41:07,480
policy attributes in other words it

739
00:41:04,420 --> 00:41:10,990
tells you if there are further actions

740
00:41:07,480 --> 00:41:12,790
taken regarding the attributes if you

741
00:41:10,990 --> 00:41:17,410
have for example if you have like

742
00:41:12,790 --> 00:41:21,160
changed the next hop or not so if the

743
00:41:17,410 --> 00:41:23,379
tippet is unset then we shall not

744
00:41:21,160 --> 00:41:26,230
include the post policy attribute govt

745
00:41:23,380 --> 00:41:30,840
in the message because it with it'll be

746
00:41:26,230 --> 00:41:33,850
the same as a precursor okay so and

747
00:41:30,840 --> 00:41:42,300
attribute govt these are still the same

748
00:41:33,850 --> 00:41:44,680
and for the string govt the example is

749
00:41:42,300 --> 00:41:48,550
something that I have discussed with

750
00:41:44,680 --> 00:41:52,060
Thomas who thinks that if we don't want

751
00:41:48,550 --> 00:41:54,850
to use the policy format we define the

752
00:41:52,060 --> 00:41:58,120
in this draft we probably could use you

753
00:41:54,850 --> 00:42:01,360
know something that you want to carry to

754
00:41:58,120 --> 00:42:04,630
represent your policy so here for some

755
00:42:01,360 --> 00:42:08,260
we can use the ex pass of your policy

756
00:42:04,630 --> 00:42:10,750
your models here to represent represent

757
00:42:08,260 --> 00:42:13,870
the policy information or you can

758
00:42:10,750 --> 00:42:20,080
combine both the policy govt with the

759
00:42:13,870 --> 00:42:23,680
string govt okay so well up I would like

760
00:42:20,080 --> 00:42:28,210
to get some feedbacks from the working

761
00:42:23,680 --> 00:42:31,779
group here which basically are about the

762
00:42:28,210 --> 00:42:35,530
future direction of this draft so this

763
00:42:31,780 --> 00:42:39,220
I've talked to different people and I do

764
00:42:35,530 --> 00:42:43,480
see you know different opinions or

765
00:42:39,220 --> 00:42:46,209
comments on the draft something you know

766
00:42:43,480 --> 00:42:49,780
this draft is a little bit over

767
00:42:46,210 --> 00:42:53,080
complicated over complicated and maybe

768
00:42:49,780 --> 00:42:56,140
it can target a very specific use case

769
00:42:53,080 --> 00:42:58,799
but some other think well it's good I

770
00:42:56,140 --> 00:43:01,270
can get all the information I need and

771
00:42:58,800 --> 00:43:03,010
maybe you can don't do something in the

772
00:43:01,270 --> 00:43:06,400
server side to to extract information

773
00:43:03,010 --> 00:43:07,090
you need to to insert into different

774
00:43:06,400 --> 00:43:10,480
apps

775
00:43:07,090 --> 00:43:13,080
so yeah and this is something that I

776
00:43:10,480 --> 00:43:17,580
want to you know ask the working group

777
00:43:13,080 --> 00:43:20,920
to help you know refine the drafts and

778
00:43:17,580 --> 00:43:24,310
well the second is use case and so I

779
00:43:20,920 --> 00:43:26,860
think the direction should be use case

780
00:43:24,310 --> 00:43:32,290
driven so shall we identify some use

781
00:43:26,860 --> 00:43:34,330
cases to help converge the draft yeah so

782
00:43:32,290 --> 00:43:43,360
that's for the first structure any

783
00:43:34,330 --> 00:43:49,390
comments who do fog again I'm really

784
00:43:43,360 --> 00:43:54,490
surprised I did not intend and foresee

785
00:43:49,390 --> 00:43:58,259
this you know you are mentioning that

786
00:43:54,490 --> 00:43:59,819
this looks complicated or complex the

787
00:43:58,260 --> 00:44:04,090
[Music]

788
00:43:59,820 --> 00:44:06,940
actual content and intention and use

789
00:44:04,090 --> 00:44:09,820
certainly has complexity and are not

790
00:44:06,940 --> 00:44:15,820
completely sure whether I am really

791
00:44:09,820 --> 00:44:20,850
happy to go there but following up to my

792
00:44:15,820 --> 00:44:27,790
previous two remarks the complexity that

793
00:44:20,850 --> 00:44:34,420
comes in by the customized presentation

794
00:44:27,790 --> 00:44:40,110
layer certainly does not help a lot I

795
00:44:34,420 --> 00:44:46,570
very very much would like to see an

796
00:44:40,110 --> 00:44:51,130
approach like define your complex data

797
00:44:46,570 --> 00:44:56,020
structure in something like CD DL and if

798
00:44:51,130 --> 00:44:59,770
you want to have a dense binary encoding

799
00:44:56,020 --> 00:45:05,800
use just the C bore encoding and parsing

800
00:44:59,770 --> 00:45:07,900
mechanism and let's not talk about the

801
00:45:05,800 --> 00:45:12,310
presentation layer and for parsing any

802
00:45:07,900 --> 00:45:15,670
more and just lift up the discussion to

803
00:45:12,310 --> 00:45:18,790
more of a semantic level where we would

804
00:45:15,670 --> 00:45:20,150
be talking about symbolic fields and

805
00:45:18,790 --> 00:45:26,750
data structures

806
00:45:20,150 --> 00:45:29,630
and stuff like that kind of yes again

807
00:45:26,750 --> 00:45:32,089
like in my previous remark it is not

808
00:45:29,630 --> 00:45:36,109
completely clear whether this is the

809
00:45:32,089 --> 00:45:39,890
guinea pig to try to do this the first

810
00:45:36,109 --> 00:45:40,848
time but looking at the complexity of a

811
00:45:39,890 --> 00:45:44,150
presentation

812
00:45:40,849 --> 00:45:45,730
I actually think yes it would be a very

813
00:45:44,150 --> 00:45:48,589
interesting guinea pig

814
00:45:45,730 --> 00:45:53,210
thank you I actually didn't quite get

815
00:45:48,589 --> 00:45:55,788
your comments but I'll check later job

816
00:45:53,210 --> 00:45:59,720
Snyder's NZT one thing to respond to

817
00:45:55,789 --> 00:46:02,569
ridiger I think it is an interesting

818
00:45:59,720 --> 00:46:05,240
notion if we could get to a higher level

819
00:46:02,569 --> 00:46:07,160
of discussion to focus less on what does

820
00:46:05,240 --> 00:46:09,558
this bits on the wire mean and more to

821
00:46:07,160 --> 00:46:12,140
talk about symbolic meanings that is an

822
00:46:09,559 --> 00:46:14,630
admirable goal you suggest that Seaboard

823
00:46:12,140 --> 00:46:16,640
it is on my to-do list to go to the

824
00:46:14,630 --> 00:46:18,740
Seaboard working group because as far as

825
00:46:16,640 --> 00:46:22,819
I understand they don't have primitives

826
00:46:18,740 --> 00:46:25,609
such as an IP prefix and IP address and

827
00:46:22,819 --> 00:46:28,160
and other things and I think we would do

828
00:46:25,609 --> 00:46:32,410
ourselves at this surface if we put a

829
00:46:28,160 --> 00:46:35,740
byte string encoded in see more into our

830
00:46:32,410 --> 00:46:38,240
protocols so there may be some

831
00:46:35,740 --> 00:46:42,169
opportunity to improve Seaboard to make

832
00:46:38,240 --> 00:46:43,970
it more useful for our use cases it is

833
00:46:42,170 --> 00:46:46,069
extensible and that's why we need to go

834
00:46:43,970 --> 00:46:47,538
to that working group Jeff has and

835
00:46:46,069 --> 00:46:49,520
specifically responding that it's the

836
00:46:47,539 --> 00:46:51,200
exact same comment I made to you know

837
00:46:49,520 --> 00:46:55,130
partially adjust the CRISPR or on the

838
00:46:51,200 --> 00:46:56,149
mailing list there's a lot of binary

839
00:46:55,130 --> 00:46:57,529
encodings that are wonderful for

840
00:46:56,150 --> 00:46:59,690
Transport they give you know

841
00:46:57,529 --> 00:47:01,460
encapsulation that's great but the

842
00:46:59,690 --> 00:47:02,599
presentation layer on top of them is not

843
00:47:01,460 --> 00:47:05,690
rigorous enough for that our

844
00:47:02,599 --> 00:47:08,450
applications it's fine for us to specify

845
00:47:05,690 --> 00:47:10,039
things and Yang and have them actually

846
00:47:08,450 --> 00:47:11,990
rendered in a different format because

847
00:47:10,039 --> 00:47:15,020
it provides a hint to the underlying

848
00:47:11,990 --> 00:47:17,000
code how to do the rendering just cuz

849
00:47:15,020 --> 00:47:18,470
it's a byte string underneath if you

850
00:47:17,000 --> 00:47:20,420
tell it in the yang layer that's an IP

851
00:47:18,470 --> 00:47:23,480
address this means that code that

852
00:47:20,420 --> 00:47:25,460
actually is eating Seymour can Percy

853
00:47:23,480 --> 00:47:28,279
Moore notice that map's the underlying

854
00:47:25,460 --> 00:47:30,609
IP type and run the validator in that

855
00:47:28,279 --> 00:47:30,609
format

856
00:47:33,110 --> 00:47:37,100
for those of you that don't know what

857
00:47:34,370 --> 00:47:40,100
Sieber is it is the concise binary

858
00:47:37,100 --> 00:47:48,069
object representation think of it as

859
00:47:40,100 --> 00:47:54,170
Jason in binary encoding alright thanks

860
00:47:48,070 --> 00:48:02,210
so the second draft I'm going to discuss

861
00:47:54,170 --> 00:48:04,820
is B me for rules ik detection so well

862
00:48:02,210 --> 00:48:08,150
I've been trying to get a figure that

863
00:48:04,820 --> 00:48:12,230
best represents where this dropped

864
00:48:08,150 --> 00:48:18,410
stance it might be a little ugly to

865
00:48:12,230 --> 00:48:21,830
watch I walk you through it so so first

866
00:48:18,410 --> 00:48:25,220
of all this draft is a ruling detection

867
00:48:21,830 --> 00:48:28,340
method and it allows you to detect the

868
00:48:25,220 --> 00:48:32,930
leaks that happen in your local s not

869
00:48:28,340 --> 00:48:36,530
the upstream or downstream and it allows

870
00:48:32,930 --> 00:48:41,000
you to find the issues that happens at

871
00:48:36,530 --> 00:48:44,330
the u.s. SPR so maybe the egress here is

872
00:48:41,000 --> 00:48:46,640
misused by I want to express you know

873
00:48:44,330 --> 00:48:50,180
the propagation direction of the route

874
00:48:46,640 --> 00:48:53,540
for example in this figure the rotor for

875
00:48:50,180 --> 00:48:56,960
so if we have done some you know inbound

876
00:48:53,540 --> 00:49:01,070
or outbound policy is configured here

877
00:48:56,960 --> 00:49:06,470
and the route for example received from

878
00:49:01,070 --> 00:49:10,130
your provider is airily sent to another

879
00:49:06,470 --> 00:49:14,419
provider and then for such case we can

880
00:49:10,130 --> 00:49:22,580
use this draft to identify a leak okay

881
00:49:14,420 --> 00:49:25,580
and a few considerations or say I think

882
00:49:22,580 --> 00:49:29,049
benefits of this draft is that first of

883
00:49:25,580 --> 00:49:32,330
all it's a simple single IP deployable

884
00:49:29,050 --> 00:49:37,900
you don't need to like have corporations

885
00:49:32,330 --> 00:49:43,430
or depend dependencies of you know

886
00:49:37,900 --> 00:49:45,410
things from other ISPs and the second

887
00:49:43,430 --> 00:49:46,230
good thing is that you don't need to

888
00:49:45,410 --> 00:49:48,868
rely

889
00:49:46,230 --> 00:49:52,380
some database lookup and stuff like that

890
00:49:48,869 --> 00:49:55,920
and the search thing is that this kind

891
00:49:52,380 --> 00:50:00,240
of detection is prefix level and for

892
00:49:55,920 --> 00:50:02,550
this point I will have a question about

893
00:50:00,240 --> 00:50:06,089
I have a question for the working group

894
00:50:02,550 --> 00:50:10,590
in the later page and the circle thing

895
00:50:06,090 --> 00:50:13,290
is that it for my own sending list it

896
00:50:10,590 --> 00:50:17,160
doesn't you know overlap or a conflict

897
00:50:13,290 --> 00:50:20,640
with some of our existing Messrs and

898
00:50:17,160 --> 00:50:22,830
actually they can like be complimentary

899
00:50:20,640 --> 00:50:28,740
to each other as you know something I've

900
00:50:22,830 --> 00:50:32,640
pictured in this figure okay so here are

901
00:50:28,740 --> 00:50:36,569
the changes we've made in the four

902
00:50:32,640 --> 00:50:41,160
versions so we want to do is generally

903
00:50:36,570 --> 00:50:44,850
proposing a TLV that carries the

904
00:50:41,160 --> 00:50:47,100
appearing relation information and so in

905
00:50:44,850 --> 00:50:51,359
the latest version we name it as the re

906
00:50:47,100 --> 00:50:58,589
OT a TL v and we've defined currently

907
00:50:51,359 --> 00:51:03,990
four types of pure relations okay so my

908
00:50:58,590 --> 00:51:09,300
question here is that so is use case

909
00:51:03,990 --> 00:51:13,160
that I've put in the first page a a like

910
00:51:09,300 --> 00:51:17,960
a that happens a lot in the network and

911
00:51:13,160 --> 00:51:21,330
if yes is PMP a good way to do so and

912
00:51:17,960 --> 00:51:24,300
and also which is about the third

913
00:51:21,330 --> 00:51:29,060
benefit I have mentioned about using BMP

914
00:51:24,300 --> 00:51:33,840
is that it is prefixed by a prefix level

915
00:51:29,060 --> 00:51:36,779
detection so shall we do like just bgp

916
00:51:33,840 --> 00:51:40,200
session detection or prefix level

917
00:51:36,780 --> 00:51:42,750
because for if we want to do just bgp

918
00:51:40,200 --> 00:51:45,240
session level then we probably don't

919
00:51:42,750 --> 00:51:47,190
need any extensions because the open

920
00:51:45,240 --> 00:51:52,799
policy allows you to you know exchange

921
00:51:47,190 --> 00:51:55,440
tea of the rows and then it's carried in

922
00:51:52,800 --> 00:51:57,720
the peer up messages so you have the

923
00:51:55,440 --> 00:51:59,700
information but the best thing is that

924
00:51:57,720 --> 00:52:02,459
you cannot refuse

925
00:51:59,700 --> 00:52:05,730
and you know some complete complex cases

926
00:52:02,460 --> 00:52:09,119
where some prefixes are don't obey to

927
00:52:05,730 --> 00:52:13,410
you know the session-based relations so

928
00:52:09,119 --> 00:52:18,359
if we want to do the prefix level or the

929
00:52:13,410 --> 00:52:21,450
thing is should we like specify where we

930
00:52:18,359 --> 00:52:24,569
can get such prefix level puring

931
00:52:21,450 --> 00:52:25,970
relations in this draft or just leave it

932
00:52:24,570 --> 00:52:31,670
outside

933
00:52:25,970 --> 00:52:31,669
yeah so I would like some suggestions

934
00:52:34,609 --> 00:52:41,310
Alexander's Yandex first of all thank

935
00:52:38,550 --> 00:52:47,820
you for covering some of my comments in

936
00:52:41,310 --> 00:52:49,259
the slides I need to admit that since

937
00:52:47,820 --> 00:52:51,240
you dropped at the moment is relies on

938
00:52:49,260 --> 00:52:53,099
BGP rules to get information about

939
00:52:51,240 --> 00:52:55,470
different relations there is no option

940
00:52:53,099 --> 00:52:57,570
to get rose per perfect because it's

941
00:52:55,470 --> 00:53:02,310
just and just uh no it doesn't work like

942
00:52:57,570 --> 00:53:06,390
this if you are not going to add another

943
00:53:02,310 --> 00:53:13,828
TLV you can end up in a situation when

944
00:53:06,390 --> 00:53:17,009
you are not suggesting and standard

945
00:53:13,829 --> 00:53:21,960
track but yours using you are suggesting

946
00:53:17,010 --> 00:53:25,319
something like a BCP how to use being p

947
00:53:21,960 --> 00:53:29,670
and it's not limited only for around

948
00:53:25,319 --> 00:53:32,400
leak detection yeah so so as I put ask a

949
00:53:29,670 --> 00:53:35,550
question should we do just recession

950
00:53:32,400 --> 00:53:38,579
yeah you know my position I would prefer

951
00:53:35,550 --> 00:53:41,700
to have a draft that will describe

952
00:53:38,579 --> 00:53:44,180
common use cases for beam P because it's

953
00:53:41,700 --> 00:53:47,578
a moment so there is no such work and

954
00:53:44,180 --> 00:53:51,359
with what we have we have has a signals

955
00:53:47,579 --> 00:53:54,869
that can be used we have we may end up

956
00:53:51,359 --> 00:53:56,970
with one two three signals and to get

957
00:53:54,869 --> 00:53:59,540
them in beam B before we apply an

958
00:53:56,970 --> 00:54:02,540
mitigation policy makes sense for me

959
00:53:59,540 --> 00:54:02,540
thanks

960
00:54:03,290 --> 00:54:08,250
shared much Akamai

961
00:54:05,819 --> 00:54:11,940
I think one of the biggest challenges in

962
00:54:08,250 --> 00:54:13,590
discussing this is that what actually

963
00:54:11,940 --> 00:54:16,800
defines a route leak

964
00:54:13,590 --> 00:54:21,030
is highly business specific it's not

965
00:54:16,800 --> 00:54:23,580
just about the ASPA role or about you

966
00:54:21,030 --> 00:54:25,470
know stuff because individual prefix in

967
00:54:23,580 --> 00:54:26,790
one case you may actually want to let

968
00:54:25,470 --> 00:54:29,490
out and you may not want to let other

969
00:54:26,790 --> 00:54:32,640
prefixes through and that business logic

970
00:54:29,490 --> 00:54:35,129
is something that is not that may be

971
00:54:32,640 --> 00:54:36,990
unique to the individual company and I

972
00:54:35,130 --> 00:54:41,400
think is something that's very hard for

973
00:54:36,990 --> 00:54:44,490
outsiders to infer what the actual

974
00:54:41,400 --> 00:54:46,530
intent is without you know intent based

975
00:54:44,490 --> 00:54:48,899
routing which is really what BGP is I've

976
00:54:46,530 --> 00:54:51,630
sent you the NRL I this is my intent is

977
00:54:48,900 --> 00:54:53,580
that you please route this and I think

978
00:54:51,630 --> 00:54:55,860
that that that is the challenge and how

979
00:54:53,580 --> 00:54:58,259
do you identify these is that we we

980
00:54:55,860 --> 00:55:00,600
don't have a good understanding of how

981
00:54:58,260 --> 00:55:02,610
to communicate this to each other and

982
00:55:00,600 --> 00:55:05,819
there's a lot of granularity that can

983
00:55:02,610 --> 00:55:07,830
exist in it and we have a lot of tools

984
00:55:05,820 --> 00:55:09,960
that we're using to do this via BGP

985
00:55:07,830 --> 00:55:11,910
communities or something else to try and

986
00:55:09,960 --> 00:55:13,830
prevent these types of things but I

987
00:55:11,910 --> 00:55:15,330
think that that that's one of the

988
00:55:13,830 --> 00:55:17,759
biggest I think challenges with this

989
00:55:15,330 --> 00:55:20,160
type of a you know this type of a draft

990
00:55:17,760 --> 00:55:23,010
is BMP is an excellent protocol for

991
00:55:20,160 --> 00:55:24,810
monitoring stuff but what you're trying

992
00:55:23,010 --> 00:55:26,730
to monitor is the intent and the intent

993
00:55:24,810 --> 00:55:28,170
is that business logic and that's going

994
00:55:26,730 --> 00:55:30,000
to be unique it's going to be different

995
00:55:28,170 --> 00:55:34,800
for Akamai versus hand X versus Deutsche

996
00:55:30,000 --> 00:55:41,160
Telekom NTT GTT whoever else thanks for

997
00:55:34,800 --> 00:55:45,690
the comment so if no other comments

998
00:55:41,160 --> 00:55:49,649
let's move to the last one okay so the

999
00:55:45,690 --> 00:55:54,420
last draft is is about enhanced a loop

1000
00:55:49,650 --> 00:55:57,710
detection for BGP routes so the changes

1001
00:55:54,420 --> 00:56:02,760
to the previous version is that we have

1002
00:55:57,710 --> 00:56:06,900
converged our proposals to two options

1003
00:56:02,760 --> 00:56:10,020
for both inbound and outbound policy

1004
00:56:06,900 --> 00:56:13,920
processing so the first option is that

1005
00:56:10,020 --> 00:56:18,150
when you detect a route with a slope

1006
00:56:13,920 --> 00:56:22,050
then you do some analyze based on some

1007
00:56:18,150 --> 00:56:25,770
local database and the second option

1008
00:56:22,050 --> 00:56:26,920
would be you you know use BMP extension

1009
00:56:25,770 --> 00:56:33,369
to

1010
00:56:26,920 --> 00:56:35,819
export the roots with a slopes so the

1011
00:56:33,369 --> 00:56:38,740
first one does not need any you know

1012
00:56:35,819 --> 00:56:43,470
changes to existing protocols and the

1013
00:56:38,740 --> 00:56:51,089
second one we have proposed to use the

1014
00:56:43,470 --> 00:56:55,319
mirroring message with a new within you

1015
00:56:51,089 --> 00:56:59,769
code type for the information T of e to

1016
00:56:55,319 --> 00:57:04,680
carry the routes with as loop detected

1017
00:56:59,769 --> 00:57:10,779
so you can put the roots with look after

1018
00:57:04,680 --> 00:57:16,629
the T of e type and yes in the last

1019
00:57:10,779 --> 00:57:19,599
field so that's act and as I have

1020
00:57:16,630 --> 00:57:26,140
discussed this case with Alex previously

1021
00:57:19,599 --> 00:57:29,500
and he mentioned some news cases you

1022
00:57:26,140 --> 00:57:32,859
know the the draft was previously you

1023
00:57:29,500 --> 00:57:37,089
know intended for detecting hijack cases

1024
00:57:32,859 --> 00:57:41,589
and Alex mention something that you can

1025
00:57:37,089 --> 00:57:44,740
use also such detection to find some

1026
00:57:41,589 --> 00:57:47,440
configure configuration errors of your

1027
00:57:44,740 --> 00:57:51,098
neighbor a SS if I understand it right

1028
00:57:47,440 --> 00:57:53,970
and I think ice you can like send the

1029
00:57:51,099 --> 00:57:57,849
case to the Mellon list for further

1030
00:57:53,970 --> 00:58:07,799
discussion or you might want to bring it

1031
00:57:57,849 --> 00:58:10,990
up yeah Yandex so my message was that

1032
00:58:07,799 --> 00:58:15,220
the way to state it in the draft so you

1033
00:58:10,990 --> 00:58:17,288
are taking to account BGP updates where

1034
00:58:15,220 --> 00:58:19,629
is your own at own system number in the

1035
00:58:17,289 --> 00:58:22,299
highest path is not limited to the scope

1036
00:58:19,630 --> 00:58:25,359
of what is called what is causing the

1037
00:58:22,299 --> 00:58:27,609
drought hijacks or I will call it our

1038
00:58:25,359 --> 00:58:31,210
root leaks because it may also happen

1039
00:58:27,609 --> 00:58:34,029
when some of your prefixes are rejected

1040
00:58:31,210 --> 00:58:36,819
by your upstream provider and they are

1041
00:58:34,029 --> 00:58:40,150
sending you back these prefixes that I

1042
00:58:36,819 --> 00:58:43,990
received from other side

1043
00:58:40,150 --> 00:58:47,380
it's also who may highlight that there

1044
00:58:43,990 --> 00:58:51,040
is some policy issue but so the scope is

1045
00:58:47,380 --> 00:58:53,170
not limited to only hijacks our route

1046
00:58:51,040 --> 00:58:56,950
leaks which be anomalous at the same

1047
00:58:53,170 --> 00:59:02,140
time speaking about hijacks it's also

1048
00:58:56,950 --> 00:59:04,240
seems very native to use BMP to detect

1049
00:59:02,140 --> 00:59:06,549
for example prefixes that are not

1050
00:59:04,240 --> 00:59:08,370
announced by your after the system

1051
00:59:06,550 --> 00:59:11,440
number but uses your address space

1052
00:59:08,370 --> 00:59:14,430
because they are also be rejected and so

1053
00:59:11,440 --> 00:59:17,140
use being B as a general-purpose

1054
00:59:14,430 --> 00:59:23,620
monitoring system for BGP anomalies and

1055
00:59:17,140 --> 00:59:27,040
these can be added to your previous

1056
00:59:23,620 --> 00:59:32,950
draft so I believe that being P has a

1057
00:59:27,040 --> 00:59:34,960
lot of options and to be used and with

1058
00:59:32,950 --> 00:59:38,410
the eating experience how it can be used

1059
00:59:34,960 --> 00:59:40,330
what information can be it'll easily

1060
00:59:38,410 --> 00:59:44,350
retrieved for this kind of monitoring

1061
00:59:40,330 --> 00:59:47,170
and can be moved into informational

1062
00:59:44,350 --> 00:59:52,299
draft that would be very interesting for

1063
00:59:47,170 --> 00:59:55,020
the industry and also make a help for

1064
00:59:52,300 --> 01:00:00,600
being PTO take order to take up to get a

1065
00:59:55,020 --> 01:00:00,600
higher rate of deployment yeah Thank You

1066
01:00:02,010 --> 01:00:07,870
Thomas curve Swisscom maybe just on

1067
01:00:05,110 --> 01:00:10,750
another use case I just came up with is

1068
01:00:07,870 --> 01:00:13,690
why not just not only restricted to AES

1069
01:00:10,750 --> 01:00:16,450
pass you could also think about the side

1070
01:00:13,690 --> 01:00:21,360
of origin for example mmm-hmm Thanks

1071
01:00:16,450 --> 01:00:23,109
very good suggestion yeah so that's it

1072
01:00:21,360 --> 01:00:27,460
thank you very much for your

1073
01:00:23,110 --> 01:00:30,790
presentations now we get to the

1074
01:00:27,460 --> 01:00:33,940
improvisation aspects of this session I

1075
01:00:30,790 --> 01:00:38,340
would like to invite the hackers from

1076
01:00:33,940 --> 01:00:40,120
the BMP hackathon for a 5-minute update

1077
01:00:38,340 --> 01:00:45,280
their hackings

1078
01:00:40,120 --> 01:00:49,420
I also saw that some people entered the

1079
01:00:45,280 --> 01:00:51,940
room after this session started please

1080
01:00:49,420 --> 01:00:55,140
make sure that you sign the blue sheets

1081
01:00:51,940 --> 01:00:55,140
if you are in this room

1082
01:00:55,230 --> 01:00:58,300
[Music]

1083
01:01:01,650 --> 01:01:06,460
hi everybody

1084
01:01:03,940 --> 01:01:09,039
Thomas Carr from Swisscom you might have

1085
01:01:06,460 --> 01:01:15,160
noticed that on Saturday Sunday we'd had

1086
01:01:09,039 --> 01:01:17,190
hackathon and the goal from our group

1087
01:01:15,160 --> 01:01:20,910
was basically to do some

1088
01:01:17,190 --> 01:01:25,480
interoperability testing between

1089
01:01:20,910 --> 01:01:28,509
collector and routers in terms of BNP

1090
01:01:25,480 --> 01:01:32,319
local rip and adjacent city bout we

1091
01:01:28,509 --> 01:01:38,190
could use an updated via shop be MPD

1092
01:01:32,319 --> 01:01:42,160
sector and PM acct to to validate that

1093
01:01:38,190 --> 01:01:45,970
basically with a simple set up here with

1094
01:01:42,160 --> 01:01:48,670
three routers and identified some let's

1095
01:01:45,970 --> 01:01:50,288
say interesting things which we put on

1096
01:01:48,670 --> 01:01:53,170
the mailing list and would like to

1097
01:01:50,289 --> 01:01:57,160
encourage you to give us some feedback

1098
01:01:53,170 --> 01:02:01,569
one thing was about PNP local rip when a

1099
01:01:57,160 --> 01:02:05,319
router has an a local originated out in

1100
01:02:01,569 --> 01:02:07,660
its local group we noticed that the next

1101
01:02:05,319 --> 01:02:12,249
hop attribute depending on the vendor

1102
01:02:07,660 --> 01:02:15,038
might be different it's either like 127

1103
01:02:12,249 --> 01:02:19,269
0 0 1 or 0 0 0

1104
01:02:15,039 --> 01:02:21,339
RFC 4279 doesn't really specify what the

1105
01:02:19,269 --> 01:02:23,919
next attribute should be when it's

1106
01:02:21,339 --> 01:02:26,078
directly exposed from the router and

1107
01:02:23,920 --> 01:02:28,299
it's propagated out of the router there

1108
01:02:26,079 --> 01:02:30,999
versal definitions there so we would

1109
01:02:28,299 --> 01:02:33,400
like to understand what are the

1110
01:02:30,999 --> 01:02:37,509
different vendor implementations here

1111
01:02:33,400 --> 01:02:41,170
and there might be some help to to

1112
01:02:37,509 --> 01:02:44,069
update the BMP local rip draft for us

1113
01:02:41,170 --> 01:02:47,289
some informational elements there

1114
01:02:44,069 --> 01:02:50,950
another thing which we found was

1115
01:02:47,289 --> 01:02:52,660
regarding Jason C rip out there seems to

1116
01:02:50,950 --> 01:02:57,960
be different vendor implementations

1117
01:02:52,660 --> 01:03:02,049
regarding the P hop message depending if

1118
01:02:57,960 --> 01:03:05,369
post and pre policy is configured or not

1119
01:03:02,049 --> 01:03:07,390
depending on the implementation we have

1120
01:03:05,369 --> 01:03:10,150
one or more

1121
01:03:07,390 --> 01:03:14,890
you have up messages with different pier

1122
01:03:10,150 --> 01:03:17,680
headers so also please on the mailing

1123
01:03:14,890 --> 01:03:20,859
list feedback house if you think that

1124
01:03:17,680 --> 01:03:23,348
either both is acceptable or we should

1125
01:03:20,859 --> 01:03:25,960
clearly define whatever you shoot in

1126
01:03:23,349 --> 01:03:29,680
this case just get one pier up messages

1127
01:03:25,960 --> 01:03:36,309
or if multiple PL of messages is decide

1128
01:03:29,680 --> 01:03:38,890
desired result well we will go on and in

1129
01:03:36,309 --> 01:03:40,930
the next hackathon 107 we can continue

1130
01:03:38,890 --> 01:03:43,779
to to validate some future drafts

1131
01:03:40,930 --> 01:03:47,368
regarding path marking our policy

1132
01:03:43,779 --> 01:03:53,500
attribute racing and annuity Elvis and

1133
01:03:47,369 --> 01:03:56,349
that was the group thanks a lot thank

1134
01:03:53,500 --> 01:03:58,650
you there is a cool reports on a nice

1135
01:03:56,349 --> 01:03:58,650
photo

1136
01:03:59,070 --> 01:04:04,150
[Music]

1137
01:04:01,500 --> 01:04:05,589
pehle you said you had one we cut you

1138
01:04:04,150 --> 01:04:11,109
off you want to come do that and then

1139
01:04:05,589 --> 01:04:12,910
we'll hear from Jeff yeah we have I

1140
01:04:11,109 --> 01:04:14,140
think we thought we had only an hour we

1141
01:04:12,910 --> 01:04:17,190
have an hour and a half so we have

1142
01:04:14,140 --> 01:04:17,190
another twenty minutes or so

1143
01:04:35,240 --> 01:04:44,848
right and so this is the fourth draft

1144
01:04:40,800 --> 01:04:46,530
that I wanted to present it's an effort

1145
01:04:44,849 --> 01:04:48,300
that we are doing together with the

1146
01:04:46,530 --> 01:04:51,480
McCool from juniper

1147
01:04:48,300 --> 01:04:57,480
it's about compressing route monitoring

1148
01:04:51,480 --> 01:05:00,980
messages so it is believed that let's a

1149
01:04:57,480 --> 01:05:04,200
BMP may generate a lot of data

1150
01:05:00,980 --> 01:05:06,570
especially without being a tribal law

1151
01:05:04,200 --> 01:05:10,049
creep pre and post policies the LDS and

1152
01:05:06,570 --> 01:05:14,099
all of that and then essentially the

1153
01:05:10,050 --> 01:05:18,530
proposal I would say is quite simple

1154
01:05:14,099 --> 01:05:20,849
quite intuitive it's just like you flag

1155
01:05:18,530 --> 01:05:24,150
compression information in the init

1156
01:05:20,849 --> 01:05:26,730
message using the TLB stir you have a

1157
01:05:24,150 --> 01:05:28,950
new message type because of course this

1158
01:05:26,730 --> 01:05:31,260
is not compatible with existing route

1159
01:05:28,950 --> 01:05:35,730
monitoring messages and essentially

1160
01:05:31,260 --> 01:05:39,390
apply this draft that is a tidy are

1161
01:05:35,730 --> 01:05:43,650
about compressed BGP updates but

1162
01:05:39,390 --> 01:05:46,950
essentially implement that to BMP so

1163
01:05:43,650 --> 01:05:49,859
that was it I'm just looking forward to

1164
01:05:46,950 --> 01:05:55,669
feedback is it a good work is it not a

1165
01:05:49,859 --> 01:06:00,348
good work is it worth pursuing I see

1166
01:05:55,670 --> 01:06:03,510
maybe a yes thank you

1167
01:06:00,349 --> 01:06:10,589
the group may need some time to read and

1168
01:06:03,510 --> 01:06:16,260
digest the draft we have two comments at

1169
01:06:10,589 --> 01:06:19,109
the mic John Scudder so I hadn't heard

1170
01:06:16,260 --> 01:06:20,609
of this work prior to the beginning of

1171
01:06:19,109 --> 01:06:22,578
this meeting so I quickly went and

1172
01:06:20,609 --> 01:06:29,119
looked at the draft it's admirably short

1173
01:06:22,579 --> 01:06:33,240
I had read the Tonys draft in IDR

1174
01:06:29,119 --> 01:06:36,480
previously and I liked that work so sort

1175
01:06:33,240 --> 01:06:40,109
of by extension I like this work to the

1176
01:06:36,480 --> 01:06:44,880
the one warning is that just sort of as

1177
01:06:40,109 --> 01:06:47,190
you know kind of a process thing Tony's

1178
01:06:44,880 --> 01:06:48,360
draft is still an individual submission

1179
01:06:47,190 --> 01:06:50,190
so

1180
01:06:48,360 --> 01:06:52,200
if you move ahead we'll probably need to

1181
01:06:50,190 --> 01:06:54,630
figure out you know how to make sure

1182
01:06:52,200 --> 01:06:56,279
that your your references are all in

1183
01:06:54,630 --> 01:06:59,840
order but we can take care of that you

1184
01:06:56,280 --> 01:07:02,280
should know in the future thank you

1185
01:06:59,840 --> 01:07:05,580
agnostic Adonis Equinix speaking as a

1186
01:07:02,280 --> 01:07:09,090
working group member and a happy user of

1187
01:07:05,580 --> 01:07:12,569
compressed BMP yes this is needed the

1188
01:07:09,090 --> 01:07:16,950
solves this addresses a real problem in

1189
01:07:12,570 --> 01:07:20,760
the field and not necessary the lack of

1190
01:07:16,950 --> 01:07:24,540
capacity on the bits on the pipe but on

1191
01:07:20,760 --> 01:07:27,870
the processing side of received EMP

1192
01:07:24,540 --> 01:07:30,390
messages a couple of commands what you

1193
01:07:27,870 --> 01:07:32,910
are proposing is to compress one single

1194
01:07:30,390 --> 01:07:34,560
message and the results if you would

1195
01:07:32,910 --> 01:07:37,680
compress a vector with the same

1196
01:07:34,560 --> 01:07:40,380
dictionary would be noticeably better so

1197
01:07:37,680 --> 01:07:44,460
maybe your structure needs to have

1198
01:07:40,380 --> 01:07:46,350
definition for a stream or a set of BMP

1199
01:07:44,460 --> 01:07:48,240
messages to be compressed now the other

1200
01:07:46,350 --> 01:07:51,810
thing about using the same mechanism as

1201
01:07:48,240 --> 01:07:54,839
to compress the BGP as as the Tonys

1202
01:07:51,810 --> 01:07:59,250
Drive says the compress to comments to

1203
01:07:54,840 --> 01:08:02,250
that one is it proposes to remove the

1204
01:07:59,250 --> 01:08:06,510
marker while it works very well for bgp

1205
01:08:02,250 --> 01:08:09,480
save 16 doctors doing that for BMP that

1206
01:08:06,510 --> 01:08:11,790
would mean that it needs to cut out 16

1207
01:08:09,480 --> 01:08:14,220
doctors out of the middle and then you

1208
01:08:11,790 --> 01:08:18,029
need to decision deal with linearize the

1209
01:08:14,220 --> 01:08:22,019
message and probably the cost of doing

1210
01:08:18,029 --> 01:08:25,319
that will be bigger than the savings the

1211
01:08:22,020 --> 01:08:30,450
other thing is about when you restart

1212
01:08:25,319 --> 01:08:32,700
the compressor an important use for for

1213
01:08:30,450 --> 01:08:34,800
BMP is storing and replaying that data

1214
01:08:32,700 --> 01:08:36,450
later that means if you start a

1215
01:08:34,800 --> 01:08:37,800
compressor at the start of a session you

1216
01:08:36,450 --> 01:08:41,819
need to replace everything from a

1217
01:08:37,800 --> 01:08:44,640
beginning having a mechanism stating

1218
01:08:41,819 --> 01:08:47,309
that you start to compress either add

1219
01:08:44,640 --> 01:08:49,339
some some amount of messages at some

1220
01:08:47,310 --> 01:08:53,250
amount of seconds or something like that

1221
01:08:49,339 --> 01:08:57,450
seems to be usable functionality to have

1222
01:08:53,250 --> 01:09:01,380
I see first of all thank you for your

1223
01:08:57,450 --> 01:09:02,250
comments we have definitely to look how

1224
01:09:01,380 --> 01:09:04,560
to up

1225
01:09:02,250 --> 01:09:06,359
is this better like you were essentially

1226
01:09:04,560 --> 01:09:09,720
saying not only compressing but also

1227
01:09:06,359 --> 01:09:13,680
batching things together so we have just

1228
01:09:09,720 --> 01:09:16,740
to study how to do that and propose

1229
01:09:13,680 --> 01:09:20,009
something to it to your other point the

1230
01:09:16,740 --> 01:09:21,568
one to restart a compressor so in the

1231
01:09:20,009 --> 01:09:24,689
draft what we say is essentially that

1232
01:09:21,569 --> 01:09:27,630
there is like you know around her

1233
01:09:24,689 --> 01:09:30,120
producing an you know BMP data and then

1234
01:09:27,630 --> 01:09:33,420
the collector as the the compressor so

1235
01:09:30,120 --> 01:09:37,380
in a way it's not stretched this is not

1236
01:09:33,420 --> 01:09:40,380
stretching to beyond that like so you

1237
01:09:37,380 --> 01:09:45,870
decompress it and then maybe you have I

1238
01:09:40,380 --> 01:09:49,920
don't know what no so essentially you

1239
01:09:45,870 --> 01:09:53,899
should not so should not save the

1240
01:09:49,920 --> 01:09:58,170
compressed message should compress it

1241
01:09:53,899 --> 01:10:00,450
but I understand that what you say is

1242
01:09:58,170 --> 01:10:04,650
that you may want to save the actual raw

1243
01:10:00,450 --> 01:10:12,090
message I understand that yeah we have

1244
01:10:04,650 --> 01:10:14,990
to see also job Snider's entity the

1245
01:10:12,090 --> 01:10:21,060
topic of compression has come up in idea

1246
01:10:14,990 --> 01:10:23,240
and it has not yet progressed to be a

1247
01:10:21,060 --> 01:10:27,060
working group item if it were to

1248
01:10:23,240 --> 01:10:31,200
progress it would concern me being an

1249
01:10:27,060 --> 01:10:34,800
operator often times when it really when

1250
01:10:31,200 --> 01:10:37,679
it comes to internet routing it can be

1251
01:10:34,800 --> 01:10:40,650
of paramount importance to very very

1252
01:10:37,680 --> 01:10:42,600
quickly understand what the hell happens

1253
01:10:40,650 --> 01:10:45,450
on the wire and what is propagating for

1254
01:10:42,600 --> 01:10:47,580
the global routing system and if we were

1255
01:10:45,450 --> 01:10:50,220
to compress BMP messages I would have

1256
01:10:47,580 --> 01:10:52,320
significant concerns depending on how

1257
01:10:50,220 --> 01:10:53,490
that compression is storm what the state

1258
01:10:52,320 --> 01:10:56,460
of the dictionary is how the

1259
01:10:53,490 --> 01:10:59,040
dictionaries are exchanged whether we

1260
01:10:56,460 --> 01:11:04,830
can whether we would hamper our ability

1261
01:10:59,040 --> 01:11:07,470
to very quickly react now BMP from my

1262
01:11:04,830 --> 01:11:10,490
perspective and this is just my view

1263
01:11:07,470 --> 01:11:14,610
it's not the critical path it is a

1264
01:11:10,490 --> 01:11:16,010
telemetry or monitoring protocol and if

1265
01:11:14,610 --> 01:11:17,839
monitoring breaks we

1266
01:11:16,010 --> 01:11:20,059
our flying blinds which can be very

1267
01:11:17,840 --> 01:11:24,440
unfortunate but are still flying in some

1268
01:11:20,059 --> 01:11:27,679
direction so I would I'm less hassle

1269
01:11:24,440 --> 01:11:30,289
them to consider compression in BMP but

1270
01:11:27,679 --> 01:11:33,469
I I will notice that compression in BGP

1271
01:11:30,289 --> 01:11:37,820
is I think in context of internet

1272
01:11:33,469 --> 01:11:46,610
routing a potential source for lots of

1273
01:11:37,820 --> 01:11:49,969
problems thank you shared much how can i

1274
01:11:46,610 --> 01:11:53,299
I actually haven't found the bandwidth

1275
01:11:49,969 --> 01:11:56,210
used by BGP or BMP to actually be an

1276
01:11:53,300 --> 01:11:59,269
issue in our environment so I'd be

1277
01:11:56,210 --> 01:12:02,599
interested in other operators who are

1278
01:11:59,269 --> 01:12:05,599
having that as an issue to kind of share

1279
01:12:02,599 --> 01:12:07,940
some data you know in private it doesn't

1280
01:12:05,599 --> 01:12:10,909
need to be you know from the mic but I'm

1281
01:12:07,940 --> 01:12:12,619
kind of curious on this because my

1282
01:12:10,909 --> 01:12:15,049
sentiment is somewhat similar to jobs in

1283
01:12:12,619 --> 01:12:17,150
you know trying to do this I'm very

1284
01:12:15,050 --> 01:12:19,789
concerned about any delays in the

1285
01:12:17,150 --> 01:12:23,179
messaging because we're trying to use

1286
01:12:19,789 --> 01:12:25,550
the data for real-time event detection

1287
01:12:23,179 --> 01:12:27,440
of you know potentially anomalous or

1288
01:12:25,550 --> 01:12:29,469
malicious actors and I know compression

1289
01:12:27,440 --> 01:12:32,299
you know compression isn't really that

1290
01:12:29,469 --> 01:12:34,699
heavyweight no more than any any of the

1291
01:12:32,300 --> 01:12:36,110
Kryptos or anything else but and any

1292
01:12:34,699 --> 01:12:40,039
delay is something that's very

1293
01:12:36,110 --> 01:12:43,219
concerning to me thank you awesome

1294
01:12:40,039 --> 01:12:47,329
an operator using BMP I can just tell

1295
01:12:43,219 --> 01:12:50,480
you that I totally share your comments

1296
01:12:47,329 --> 01:12:53,058
like also for myself I've not seen any

1297
01:12:50,480 --> 01:12:55,638
bottleneck or anything like if it was

1298
01:12:53,059 --> 01:12:58,429
for me as an operator I would say almost

1299
01:12:55,639 --> 01:13:02,389
you know compression is not needed but I

1300
01:12:58,429 --> 01:13:05,059
have to note that let's say the topic of

1301
01:13:02,389 --> 01:13:07,190
the amount of data being exported by the

1302
01:13:05,059 --> 01:13:09,860
routers is something that really came up

1303
01:13:07,190 --> 01:13:12,799
like the first thing that came up in

1304
01:13:09,860 --> 01:13:15,860
Chicago in 2017 with the LA crib and

1305
01:13:12,800 --> 01:13:18,170
other about draft like it's more a

1306
01:13:15,860 --> 01:13:20,690
concern I'm understanding from the

1307
01:13:18,170 --> 01:13:23,360
vendors from the exports of on the

1308
01:13:20,690 --> 01:13:26,449
export inside and this is something that

1309
01:13:23,360 --> 01:13:29,429
I have heard you know multiple from

1310
01:13:26,449 --> 01:13:32,250
multiple sources so I would

1311
01:13:29,429 --> 01:13:35,699
you know I am also as caress as you like

1312
01:13:32,250 --> 01:13:37,679
if you know to get more information why

1313
01:13:35,699 --> 01:13:45,330
this is a problem at the export inside

1314
01:13:37,679 --> 01:13:49,770
and that's it Thank You Paulo

1315
01:13:45,330 --> 01:13:50,429
thank you next up jeff has with an

1316
01:13:49,770 --> 01:14:10,199
on-the-spot

1317
01:13:50,429 --> 01:14:11,909
improvisation thanks for the time so I

1318
01:14:10,199 --> 01:14:15,239
hadn't intended to give a presentation

1319
01:14:11,909 --> 01:14:17,429
here but my commentary and for much all

1320
01:14:15,239 --> 01:14:20,280
of these things that we're seeing for

1321
01:14:17,429 --> 01:14:22,739
BMP is coming down to a lot of very

1322
01:14:20,280 --> 01:14:24,750
common points so I'll make the statement

1323
01:14:22,739 --> 01:14:26,099
here and then maybe depending exactly

1324
01:14:24,750 --> 01:14:29,670
what the written group thinks I can

1325
01:14:26,100 --> 01:14:31,860
summarize it down maybe in an internet

1326
01:14:29,670 --> 01:14:33,420
draft or other wiki or something that so

1327
01:14:31,860 --> 01:14:35,699
if I had to give a quick presentation

1328
01:14:33,420 --> 01:14:38,250
and I try to keep this much less than

1329
01:14:35,699 --> 01:14:41,669
five minutes it'd be architectural

1330
01:14:38,250 --> 01:14:45,449
implications of PDU formats and router

1331
01:14:41,670 --> 01:14:49,110
implementations the big problem that we

1332
01:14:45,449 --> 01:14:50,159
have here is that and you know somebody

1333
01:14:49,110 --> 01:14:51,599
who's recently like in front of me

1334
01:14:50,159 --> 01:14:54,809
online

1335
01:14:51,600 --> 01:14:56,670
BMP does have use cases they have use

1336
01:14:54,810 --> 01:14:58,500
cases beyond simple telemetry we have

1337
01:14:56,670 --> 01:15:00,659
certain very large service provider

1338
01:14:58,500 --> 01:15:04,650
networks that are using them to power

1339
01:15:00,659 --> 01:15:07,320
their Sdn implementations so things that

1340
01:15:04,650 --> 01:15:12,150
slow that down make such vendors rather

1341
01:15:07,320 --> 01:15:14,460
cranky so there is strong need to be

1342
01:15:12,150 --> 01:15:16,170
aware that these things are little more

1343
01:15:14,460 --> 01:15:19,020
complicated than just making the PDUs

1344
01:15:16,170 --> 01:15:21,330
easy the hackathons are very good for

1345
01:15:19,020 --> 01:15:22,830
proving out can you actually decode the

1346
01:15:21,330 --> 01:15:24,330
format's can you actually do something

1347
01:15:22,830 --> 01:15:26,309
with things is the format

1348
01:15:24,330 --> 01:15:27,719
well-structured but it doesn't

1349
01:15:26,310 --> 01:15:30,260
necessarily help you answer the question

1350
01:15:27,719 --> 01:15:32,340
about you know if I'm writing a BMP

1351
01:15:30,260 --> 01:15:35,040
implementation that integrates with an

1352
01:15:32,340 --> 01:15:39,330
actual BGP implementation what's going

1353
01:15:35,040 --> 01:15:40,800
on here and there's some extent that

1354
01:15:39,330 --> 01:15:42,150
argues that not enough of the right

1355
01:15:40,800 --> 01:15:44,420
people are actually sitting at the

1356
01:15:42,150 --> 01:15:47,820
hackathons as well

1357
01:15:44,420 --> 01:15:49,290
thankfully we have some people that can

1358
01:15:47,820 --> 01:15:50,700
do both and we shouldn't see about

1359
01:15:49,290 --> 01:15:54,300
getting a few more of them involved in

1360
01:15:50,700 --> 01:15:56,309
that sounds as well but the core

1361
01:15:54,300 --> 01:15:59,550
observations really come down to a very

1362
01:15:56,310 --> 01:16:02,670
small number of items item number one

1363
01:15:59,550 --> 01:16:06,240
this is basically BGP now we do know

1364
01:16:02,670 --> 01:16:08,250
from a lot of experience that BGP scales

1365
01:16:06,240 --> 01:16:11,160
based a number of PDUs that get

1366
01:16:08,250 --> 01:16:13,200
exchanged now this is in terms of the

1367
01:16:11,160 --> 01:16:16,200
protocol in terms of formatting things

1368
01:16:13,200 --> 01:16:18,000
and to some extent and receiver the

1369
01:16:16,200 --> 01:16:21,120
receiver is being in many cases general

1370
01:16:18,000 --> 01:16:22,560
purpose PC type applications means that

1371
01:16:21,120 --> 01:16:25,500
we don't have anywhere near the same

1372
01:16:22,560 --> 01:16:26,790
impact that a actual router would so

1373
01:16:25,500 --> 01:16:28,560
that's less of a concern but it does

1374
01:16:26,790 --> 01:16:31,200
mean that the formatting site is still a

1375
01:16:28,560 --> 01:16:33,900
problem so what that means is that

1376
01:16:31,200 --> 01:16:36,330
anything that degrades route packing as

1377
01:16:33,900 --> 01:16:40,139
we would normally do in BGP can be a

1378
01:16:36,330 --> 01:16:42,750
problem for the implementation and this

1379
01:16:40,140 --> 01:16:44,340
ties in the second problem which is you

1380
01:16:42,750 --> 01:16:46,490
know that the options that we're

1381
01:16:44,340 --> 01:16:48,840
currently looking at for extending BMP

1382
01:16:46,490 --> 01:16:51,830
are largely just tacking on this

1383
01:16:48,840 --> 01:16:54,540
optional TLV to the bottom of a message

1384
01:16:51,830 --> 01:16:56,490
what that means is that that optional

1385
01:16:54,540 --> 01:16:59,220
TLV needs to apply to the entire

1386
01:16:56,490 --> 01:17:02,250
contents and so the path attribute for a

1387
01:16:59,220 --> 01:17:04,950
given a fee Safiye and some number of em

1388
01:17:02,250 --> 01:17:06,710
larai inside that package if you're

1389
01:17:04,950 --> 01:17:10,080
intending this information to apply to

1390
01:17:06,710 --> 01:17:14,190
subsets of that NL RI you are doing a

1391
01:17:10,080 --> 01:17:16,260
forced D packing of the message we can

1392
01:17:14,190 --> 01:17:17,940
actually do something about this no we

1393
01:17:16,260 --> 01:17:20,940
can actually change or format so that

1394
01:17:17,940 --> 01:17:23,400
the tlvs no or such that you have path

1395
01:17:20,940 --> 01:17:24,870
attribute s-- we have another ID and we

1396
01:17:23,400 --> 01:17:28,469
have stuff with a despair to that owner

1397
01:17:24,870 --> 01:17:30,390
is telemetry this allows us to do the

1398
01:17:28,470 --> 01:17:32,160
job of allowing optional things to go in

1399
01:17:30,390 --> 01:17:35,850
there without necessarily doing

1400
01:17:32,160 --> 01:17:37,950
degrading the per packet case the other

1401
01:17:35,850 --> 01:17:41,810
thing that we have as a general problem

1402
01:17:37,950 --> 01:17:44,250
in the architecture is that BGP is

1403
01:17:41,810 --> 01:17:46,620
ranked elementary for we have ribbon we

1404
01:17:44,250 --> 01:17:48,300
have lower than we ever about low cribs

1405
01:17:46,620 --> 01:17:49,980
with effectively an illusion of what the

1406
01:17:48,300 --> 01:17:52,110
current routing table is and the ribbon

1407
01:17:49,980 --> 01:17:53,969
about in many cases have strong

1408
01:17:52,110 --> 01:17:55,639
correlation to people's internal data

1409
01:17:53,970 --> 01:17:57,229
structures

1410
01:17:55,639 --> 01:18:00,380
and this means that if you're looking to

1411
01:17:57,229 --> 01:18:02,269
attach some sort of interesting state if

1412
01:18:00,380 --> 01:18:04,309
you're lucky that state actually exists

1413
01:18:02,269 --> 01:18:05,989
no solo group is an example many

1414
01:18:04,309 --> 01:18:08,360
implementations I actually keep track on

1415
01:18:05,989 --> 01:18:09,768
the runtime basis why did I not accept

1416
01:18:08,360 --> 01:18:12,320
this prefix no this is one of the pieces

1417
01:18:09,769 --> 01:18:15,769
of data people are looking at export if

1418
01:18:12,320 --> 01:18:17,389
you have that data that's great but the

1419
01:18:15,769 --> 01:18:19,399
minute you don't actually have some

1420
01:18:17,389 --> 01:18:21,919
piece of data and it's interesting to

1421
01:18:19,399 --> 01:18:23,659
you and it belongs the protocol you are

1422
01:18:21,919 --> 01:18:27,199
forcing the implementation to do one of

1423
01:18:23,659 --> 01:18:29,239
two general things either extend its

1424
01:18:27,199 --> 01:18:32,239
internal data structures so that state

1425
01:18:29,239 --> 01:18:33,558
is tracked that has a cost you know

1426
01:18:32,239 --> 01:18:35,058
especially in terms of memory and if

1427
01:18:33,559 --> 01:18:37,399
you're a real router you're running a

1428
01:18:35,059 --> 01:18:39,019
potentially an older Hardware the

1429
01:18:37,399 --> 01:18:41,300
addition of a single word of memory on a

1430
01:18:39,019 --> 01:18:43,189
common data structure can knock you over

1431
01:18:41,300 --> 01:18:45,260
some of your limits so you'll find from

1432
01:18:43,189 --> 01:18:47,149
traditional router vendors a lot of

1433
01:18:45,260 --> 01:18:48,829
hesitation to do things that end up

1434
01:18:47,149 --> 01:18:52,130
being persistent state that gets

1435
01:18:48,829 --> 01:18:53,929
attached around which leaves us pretty

1436
01:18:52,130 --> 01:18:55,669
much for any of the optional mechanisms

1437
01:18:53,929 --> 01:18:59,329
there needs to be some way to very

1438
01:18:55,669 --> 01:19:01,550
quickly attach data to the information

1439
01:18:59,329 --> 01:19:03,409
so ribbon is an example if I want to

1440
01:19:01,550 --> 01:19:05,899
know what bit of policy was actually

1441
01:19:03,409 --> 01:19:07,669
doing this can I Drive it from the

1442
01:19:05,899 --> 01:19:08,989
policy engine itself well certainly

1443
01:19:07,669 --> 01:19:11,030
running policy lets you get that

1444
01:19:08,989 --> 01:19:12,199
information but you probably don't want

1445
01:19:11,030 --> 01:19:15,139
to take the hit of actually writing the

1446
01:19:12,199 --> 01:19:16,638
policy real time with this and keeping

1447
01:19:15,139 --> 01:19:18,320
around the state you know just long

1448
01:19:16,639 --> 01:19:20,630
enough to shove it down VMP potentially

1449
01:19:18,320 --> 01:19:22,308
could be a problem because who knows how

1450
01:19:20,630 --> 01:19:23,809
long that states got linger based on

1451
01:19:22,309 --> 01:19:25,909
back pressure we've kept the

1452
01:19:23,809 --> 01:19:27,979
conversation about why do we need

1453
01:19:25,909 --> 01:19:31,429
compression is to some extent really not

1454
01:19:27,979 --> 01:19:33,169
the fact that BMP is you know a socket

1455
01:19:31,429 --> 01:19:35,689
it's just the TCP pipe just like every

1456
01:19:33,169 --> 01:19:37,099
other thing on the planet and that if

1457
01:19:35,689 --> 01:19:38,599
you can't keep up with the data stream

1458
01:19:37,099 --> 01:19:40,939
you're creating back pressure on

1459
01:19:38,599 --> 01:19:44,449
information that needs to be retained so

1460
01:19:40,939 --> 01:19:46,489
that's an impact as well and if you

1461
01:19:44,449 --> 01:19:48,409
can't drive even if you can derive this

1462
01:19:46,489 --> 01:19:52,218
stuff you know that it needs be attached

1463
01:19:48,409 --> 01:19:54,829
a very quick basis there's still the

1464
01:19:52,219 --> 01:19:56,780
cost you need to do some level of nokey

1465
01:19:54,829 --> 01:19:58,188
comparability from one data store you

1466
01:19:56,780 --> 01:20:00,169
know in this case your ribs which are

1467
01:19:58,189 --> 01:20:02,749
highly optimized to make your beach be

1468
01:20:00,169 --> 01:20:05,030
fast note to some data store that may

1469
01:20:02,749 --> 01:20:08,030
not be know very fast and what we're

1470
01:20:05,030 --> 01:20:09,380
doing in each of these different

1471
01:20:08,030 --> 01:20:11,719
presentations

1472
01:20:09,380 --> 01:20:13,910
is providing some level of annotation

1473
01:20:11,720 --> 01:20:16,400
and oh these objects that are running

1474
01:20:13,910 --> 01:20:19,250
around bgp for efficiently and finding

1475
01:20:16,400 --> 01:20:20,990
ways to effectively don't throw

1476
01:20:19,250 --> 01:20:25,550
obstacles in front of them to make them

1477
01:20:20,990 --> 01:20:29,150
slower so my recommendations know is

1478
01:20:25,550 --> 01:20:32,840
that we know try to remember that the

1479
01:20:29,150 --> 01:20:34,700
core use cases do need to be kept and

1480
01:20:32,840 --> 01:20:37,040
enabled now this means that these things

1481
01:20:34,700 --> 01:20:39,710
are optional features hopefully and stay

1482
01:20:37,040 --> 01:20:41,120
optional because some of these things if

1483
01:20:39,710 --> 01:20:43,040
they were not optional I would have to

1484
01:20:41,120 --> 01:20:45,230
tell some of our larger customers don't

1485
01:20:43,040 --> 01:20:48,440
use them they will degrade your Sdn use

1486
01:20:45,230 --> 01:20:49,669
cases for things that are optional

1487
01:20:48,440 --> 01:20:51,769
especially for telemetry type

1488
01:20:49,670 --> 01:20:53,900
applications that's great

1489
01:20:51,770 --> 01:20:55,450
you know let's look at changing the

1490
01:20:53,900 --> 01:20:58,219
format a little bit so that the

1491
01:20:55,450 --> 01:21:00,920
information hairy's better doesn't break

1492
01:20:58,220 --> 01:21:02,900
gnome packing things and the last one is

1493
01:21:00,920 --> 01:21:04,130
no really a presentation layer comment

1494
01:21:02,900 --> 01:21:07,129
know if we're going to tangle these

1495
01:21:04,130 --> 01:21:09,020
things up several the things that we're

1496
01:21:07,130 --> 01:21:10,640
actually talking about involve putting

1497
01:21:09,020 --> 01:21:13,250
some sort of string on there you know

1498
01:21:10,640 --> 01:21:16,220
the fact that might be a ski or utf-8

1499
01:21:13,250 --> 01:21:17,600
this is partially irrelevant the thing

1500
01:21:16,220 --> 01:21:19,340
that most of us who spend a lot of time

1501
01:21:17,600 --> 01:21:21,080
doing performance measurements on our

1502
01:21:19,340 --> 01:21:24,500
systems for things that need to be

1503
01:21:21,080 --> 01:21:26,080
really streamlined we know that scanf or

1504
01:21:24,500 --> 01:21:28,160
whatever your language of choice

1505
01:21:26,080 --> 01:21:31,790
mechanism for parsing strings or

1506
01:21:28,160 --> 01:21:35,030
integers is very expensive just simply

1507
01:21:31,790 --> 01:21:38,870
turning a prefix IP prefix in ascii

1508
01:21:35,030 --> 01:21:41,540
format into a simple four byte no value

1509
01:21:38,870 --> 01:21:44,809
with one byte worth of prefix that gets

1510
01:21:41,540 --> 01:21:45,760
expensive after a while and ideally you

1511
01:21:44,810 --> 01:21:49,070
don't do that

1512
01:21:45,760 --> 01:21:51,170
so what this means is be very careful

1513
01:21:49,070 --> 01:21:53,030
about deciding that no especially noisy

1514
01:21:51,170 --> 01:21:55,490
information that may be very repetitive

1515
01:21:53,030 --> 01:21:56,960
now if you have a set of recent strings

1516
01:21:55,490 --> 01:21:59,750
that the router is going to say that I

1517
01:21:56,960 --> 01:22:01,670
don't like this don't send that recent

1518
01:21:59,750 --> 01:22:04,400
string 10,000 times and make them parse

1519
01:22:01,670 --> 01:22:07,040
it each time find a way no similar IP

1520
01:22:04,400 --> 01:22:09,320
fix to exchange a dictionary but let's

1521
01:22:07,040 --> 01:22:11,600
you say here's what the string table is

1522
01:22:09,320 --> 01:22:13,639
and a sick number 100 in here for this

1523
01:22:11,600 --> 01:22:16,940
entry from no no I make it nice and

1524
01:22:13,640 --> 01:22:18,050
competant anyway that's my comments some

1525
01:22:16,940 --> 01:22:20,059
of these things probably should be

1526
01:22:18,050 --> 01:22:21,950
written down and I've actually pondered

1527
01:22:20,060 --> 01:22:23,059
doing them for a general purpose bgp

1528
01:22:21,950 --> 01:22:24,829
context but

1529
01:22:23,059 --> 01:22:28,929
some of these are very specific here

1530
01:22:24,829 --> 01:22:28,929
thank you questions comments

1531
01:22:32,619 --> 01:22:37,460
you mentioned dictionaries so would like

1532
01:22:35,659 --> 01:22:41,750
a registry of dictionaries for Strings

1533
01:22:37,460 --> 01:22:43,340
be a positive solution to that that's

1534
01:22:41,750 --> 01:22:44,929
certainly one way to go know so one of

1535
01:22:43,340 --> 01:22:47,750
the things that have popped up in some

1536
01:22:44,929 --> 01:22:49,309
of the presentations is like reasons why

1537
01:22:47,750 --> 01:22:51,110
we didn't accept a thing you know some

1538
01:22:49,309 --> 01:22:52,639
of these things are common behaviors

1539
01:22:51,110 --> 01:22:54,769
that you know we really should be

1540
01:22:52,639 --> 01:22:56,809
standardizing anyway I think when this

1541
01:22:54,770 --> 01:22:58,400
when flavor of this actually popped up

1542
01:22:56,809 --> 01:23:00,800
an idea I think your Nan's Mitchell

1543
01:22:58,400 --> 01:23:03,379
presentation my commentary was some of

1544
01:23:00,800 --> 01:23:06,050
these things absolutely as a good value

1545
01:23:03,380 --> 01:23:08,030
add deserve a registry of here common

1546
01:23:06,050 --> 01:23:10,039
cases that we do things and that should

1547
01:23:08,030 --> 01:23:11,599
be maintained somewhere but there's

1548
01:23:10,039 --> 01:23:14,000
going to always be something that's

1549
01:23:11,599 --> 01:23:15,110
proprietary you know so like I may know

1550
01:23:14,000 --> 01:23:17,179
something that's been rejected by a

1551
01:23:15,110 --> 01:23:19,190
policy and I want to actually add on a

1552
01:23:17,179 --> 01:23:21,380
little bit of additional annotation

1553
01:23:19,190 --> 01:23:24,320
based on my implementation you know if

1554
01:23:21,380 --> 01:23:25,639
that's a repetitive string exchange the

1555
01:23:24,320 --> 01:23:32,989
repetitive string is something you could

1556
01:23:25,639 --> 01:23:38,119
just indirect entity I wanted to ask you

1557
01:23:32,989 --> 01:23:40,579
one question if you remember like so

1558
01:23:38,119 --> 01:23:42,980
this is on the packing part the first

1559
01:23:40,579 --> 01:23:46,340
point that that you made so that maybe

1560
01:23:42,980 --> 01:23:48,769
the packing is not optimal the way in

1561
01:23:46,340 --> 01:23:52,099
which it is at the very very moment if

1562
01:23:48,770 --> 01:23:55,579
you're remembering let's say last ITF in

1563
01:23:52,099 --> 01:23:57,829
a Montreal I made kind of so we had the

1564
01:23:55,579 --> 01:24:00,340
one draft from Hank Smith right

1565
01:23:57,829 --> 01:24:02,719
originally and then essentially it was

1566
01:24:00,340 --> 01:24:05,929
not too complex but let's say too long

1567
01:24:02,719 --> 01:24:08,059
to to dispersive and and things like

1568
01:24:05,929 --> 01:24:10,760
that and so essentially we broke it down

1569
01:24:08,059 --> 01:24:13,730
in a few suction so one we are executing

1570
01:24:10,760 --> 01:24:17,710
the TLV part maybe the easiest part is

1571
01:24:13,730 --> 01:24:20,209
just but powerful and things like that

1572
01:24:17,710 --> 01:24:22,639
power is pulling the sense that it can

1573
01:24:20,210 --> 01:24:25,340
get some critical mass more use case it

1574
01:24:22,639 --> 01:24:27,500
can a little bit unlock you know BMP

1575
01:24:25,340 --> 01:24:30,079
right and then there was another part

1576
01:24:27,500 --> 01:24:32,150
which we didn't tackle which is the

1577
01:24:30,079 --> 01:24:34,940
restructuring of the message types I

1578
01:24:32,150 --> 01:24:36,650
think you know we're all a little bit

1579
01:24:34,940 --> 01:24:39,169
rotating around

1580
01:24:36,650 --> 01:24:42,110
that maybe we want to restructure this

1581
01:24:39,170 --> 01:24:45,200
route monitoring message and things like

1582
01:24:42,110 --> 01:24:48,139
that so my question is do you also think

1583
01:24:45,200 --> 01:24:50,480
sittings in this direction we need to

1584
01:24:48,140 --> 01:24:52,370
restructure this route monitoring

1585
01:24:50,480 --> 01:24:55,040
message and things like that would you

1586
01:24:52,370 --> 01:24:55,940
like to be part of this effort shall we

1587
01:24:55,040 --> 01:24:57,710
do it together

1588
01:24:55,940 --> 01:25:00,440
and things like yeah I'm always happy to

1589
01:24:57,710 --> 01:25:02,300
contribute and I did tell you about a

1590
01:25:00,440 --> 01:25:05,620
few minutes ago that you weren't done

1591
01:25:02,300 --> 01:25:05,620
this was Perry White

1592
01:25:06,100 --> 01:25:10,400
you mentioned that it would perhaps be

1593
01:25:08,840 --> 01:25:13,910
good to have write some of these things

1594
01:25:10,400 --> 01:25:16,580
down I would very much appreciate it if

1595
01:25:13,910 --> 01:25:18,830
you did commit your faults to paper or

1596
01:25:16,580 --> 01:25:21,400
keyboards and would share with the group

1597
01:25:18,830 --> 01:25:24,280
because I think you are offering us

1598
01:25:21,400 --> 01:25:27,559
foundational insights that can help us

1599
01:25:24,280 --> 01:25:29,330
better develop protocols and it is much

1600
01:25:27,560 --> 01:25:36,160
appreciated that you are willing to

1601
01:25:29,330 --> 01:25:36,160
share that with us thank you all right I

1602
01:25:36,310 --> 01:25:40,630
would like to entertain a motion to

1603
01:25:38,810 --> 01:25:43,880
adjourn

1604
01:25:40,630 --> 01:25:46,460
second it alright see you in some other

1605
01:25:43,880 --> 01:25:48,700
city on this beautiful planet thank you

1606
01:25:46,460 --> 01:25:52,520
for attending see you later

1607
01:25:48,700 --> 01:25:53,360
one comment we are five minutes short of

1608
01:25:52,520 --> 01:25:55,640
90 minutes

1609
01:25:53,360 --> 01:25:58,820
are we proofing we need 90 minutes for

1610
01:25:55,640 --> 01:26:00,770
this working group we will definitely

1611
01:25:58,820 --> 01:26:02,950
take that under consideration Thank You

1612
01:26:00,770 --> 01:26:02,950
Paulo

